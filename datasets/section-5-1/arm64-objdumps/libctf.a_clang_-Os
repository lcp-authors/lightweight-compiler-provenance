In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf.a_clang_-Os:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_write_fd>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x22, x21, [sp, #128]
   8:	mov	w21, w0
   c:	adrp	x0, 0 <ctf_arc_write_fd>
  10:	stp	x29, x30, [sp, #64]
  14:	add	x29, sp, #0x40
  18:	mov	x22, x1
  1c:	add	x0, x0, #0x0
  20:	mov	x1, x2
  24:	stp	x28, x27, [sp, #80]
  28:	stp	x26, x25, [sp, #96]
  2c:	stp	x24, x23, [sp, #112]
  30:	stp	x20, x19, [sp, #144]
  34:	mov	x26, x4
  38:	mov	x23, x3
  3c:	mov	x25, x2
  40:	sturb	wzr, [x29, #-12]
  44:	bl	0 <ctf_dprintf>
  48:	lsl	x20, x25, #4
  4c:	add	x19, x20, #0x28
  50:	adrp	x0, 0 <ctf_arc_write_fd>
  54:	add	x0, x0, #0x0
  58:	mov	x1, x19
  5c:	bl	0 <ctf_dprintf>
  60:	add	x1, x20, #0x27
  64:	mov	w0, w21
  68:	mov	w2, wzr
  6c:	bl	0 <lseek>
  70:	tbnz	x0, #63, c0 <ctf_arc_write_fd+0xc0>
  74:	sub	x1, x29, #0xc
  78:	mov	w2, #0x1                   	// #1
  7c:	mov	w0, w21
  80:	bl	0 <write>
  84:	tbnz	x0, #63, c0 <ctf_arc_write_fd+0xc0>
  88:	mov	w2, #0x3                   	// #3
  8c:	mov	w3, #0x1                   	// #1
  90:	mov	x0, xzr
  94:	mov	x1, x19
  98:	mov	w4, w21
  9c:	mov	x5, xzr
  a0:	str	x22, [sp, #32]
  a4:	bl	0 <mmap>
  a8:	add	x8, x0, #0x1
  ac:	cmp	x8, #0x2
  b0:	b.cs	118 <ctf_arc_write_fd+0x118>  // b.hs, b.nlast
  b4:	adrp	x20, 0 <ctf_arc_write_fd>
  b8:	add	x20, x20, #0x0
  bc:	b	c8 <ctf_arc_write_fd+0xc8>
  c0:	adrp	x20, 0 <ctf_arc_write_fd>
  c4:	add	x20, x20, #0x0
  c8:	bl	0 <__errno_location>
  cc:	mov	x19, x0
  d0:	ldr	w0, [x0]
  d4:	cmp	w0, #0x3e7
  d8:	b.gt	e4 <ctf_arc_write_fd+0xe4>
  dc:	bl	0 <strerror>
  e0:	b	e8 <ctf_arc_write_fd+0xe8>
  e4:	bl	0 <ctf_errmsg>
  e8:	mov	x1, x0
  ec:	mov	x0, x20
  f0:	bl	0 <ctf_dprintf>
  f4:	ldr	w0, [x19]
  f8:	ldp	x20, x19, [sp, #144]
  fc:	ldp	x22, x21, [sp, #128]
 100:	ldp	x24, x23, [sp, #112]
 104:	ldp	x26, x25, [sp, #96]
 108:	ldp	x28, x27, [sp, #80]
 10c:	ldp	x29, x30, [sp, #64]
 110:	add	sp, sp, #0xa0
 114:	ret
 118:	mov	x8, #0x3eeb                	// #16107
 11c:	movk	x8, #0xd762, lsl #16
 120:	movk	x8, #0xf2a4, lsl #32
 124:	mov	x22, x0
 128:	movk	x8, #0x8b47, lsl #48
 12c:	str	x25, [x0, #16]
 130:	str	x8, [x0]
 134:	str	x19, [x0, #32]
 138:	str	x0, [sp, #24]
 13c:	cbz	x25, 184 <ctf_arc_write_fd+0x184>
 140:	ldr	x8, [sp, #32]
 144:	ldr	x0, [x8]
 148:	bl	0 <ctf_getmodel>
 14c:	ldr	x20, [x22, #16]
 150:	sxtw	x8, w0
 154:	str	x8, [x22, #8]
 158:	cbz	x20, 184 <ctf_arc_write_fd+0x184>
 15c:	mov	x24, xzr
 160:	mov	x22, xzr
 164:	ldr	x0, [x23, x24, lsl #3]
 168:	bl	0 <strlen>
 16c:	add	x8, x22, x0
 170:	add	x24, x24, #0x1
 174:	cmp	x24, x20
 178:	add	x22, x8, #0x1
 17c:	b.cc	164 <ctf_arc_write_fd+0x164>  // b.lo, b.ul, b.last
 180:	b	188 <ctf_arc_write_fd+0x188>
 184:	mov	x22, xzr
 188:	mov	x0, x22
 18c:	bl	0 <malloc>
 190:	stur	x0, [x29, #-24]
 194:	cbz	x0, 344 <ctf_arc_write_fd+0x344>
 198:	ldr	x24, [sp, #24]
 19c:	ldr	x8, [x24, #16]
 1a0:	add	x25, x24, #0x28
 1a4:	cbz	x8, 354 <ctf_arc_write_fd+0x354>
 1a8:	ldr	x22, [sp, #32]
 1ac:	mov	x20, xzr
 1b0:	mov	x27, xzr
 1b4:	stp	x25, x26, [sp]
 1b8:	ldur	x8, [x29, #-24]
 1bc:	ldr	x1, [x23, x20, lsl #3]
 1c0:	add	x0, x8, x27
 1c4:	bl	0 <strcpy>
 1c8:	ldr	x26, [x22, x20, lsl #3]
 1cc:	stur	xzr, [x29, #-8]
 1d0:	mov	x0, x26
 1d4:	bl	0 <ctf_serialize>
 1d8:	tbnz	w0, #31, 25c <ctf_arc_write_fd+0x25c>
 1dc:	mov	w2, #0x1                   	// #1
 1e0:	mov	w0, w21
 1e4:	mov	x1, xzr
 1e8:	bl	0 <lseek>
 1ec:	tbnz	x0, #63, 2e8 <ctf_arc_write_fd+0x2e8>
 1f0:	ldr	x8, [x26, #416]
 1f4:	ldr	x9, [sp, #8]
 1f8:	mov	x28, x0
 1fc:	sub	x22, x29, #0x8
 200:	mov	w24, #0x8                   	// #8
 204:	cmp	x8, x9
 208:	adrp	x8, 0 <ctf_write>
 20c:	adrp	x9, 0 <ctf_compress_write>
 210:	add	x8, x8, #0x0
 214:	add	x9, x9, #0x0
 218:	csel	x8, x9, x8, hi  // hi = pmore
 21c:	str	x8, [sp, #16]
 220:	mov	w0, w21
 224:	mov	x1, x22
 228:	mov	x2, x24
 22c:	bl	0 <write>
 230:	tbnz	x0, #63, 2f0 <ctf_arc_write_fd+0x2f0>
 234:	subs	x24, x24, x0
 238:	add	x22, x22, x0
 23c:	b.ne	220 <ctf_arc_write_fd+0x220>  // b.any
 240:	ldr	x8, [sp, #16]
 244:	mov	x0, x26
 248:	mov	w1, w21
 24c:	blr	x8
 250:	cbz	w0, 264 <ctf_arc_write_fd+0x264>
 254:	add	x0, x26, #0x22c
 258:	b	2f4 <ctf_arc_write_fd+0x2f4>
 25c:	add	x0, x26, #0x22c
 260:	b	2f8 <ctf_arc_write_fd+0x2f8>
 264:	mov	w2, #0x1                   	// #1
 268:	mov	w0, w21
 26c:	mov	x1, xzr
 270:	bl	0 <lseek>
 274:	tbnz	x0, #63, 2f0 <ctf_arc_write_fd+0x2f0>
 278:	mov	x22, x0
 27c:	sub	x8, x0, x28
 280:	mov	w0, w21
 284:	mov	x1, x28
 288:	mov	w2, wzr
 28c:	stur	x8, [x29, #-8]
 290:	bl	0 <lseek>
 294:	ldr	x24, [sp, #24]
 298:	tbnz	x0, #63, 338 <ctf_arc_write_fd+0x338>
 29c:	str	x22, [sp, #16]
 2a0:	sub	x22, x29, #0x8
 2a4:	mov	w26, #0x8                   	// #8
 2a8:	mov	w0, w21
 2ac:	mov	x1, x22
 2b0:	mov	x2, x26
 2b4:	bl	0 <write>
 2b8:	tbnz	x0, #63, 338 <ctf_arc_write_fd+0x338>
 2bc:	subs	x26, x26, x0
 2c0:	add	x22, x22, x0
 2c4:	b.ne	2a8 <ctf_arc_write_fd+0x2a8>  // b.any
 2c8:	ldr	x8, [sp, #16]
 2cc:	mov	w0, w21
 2d0:	mov	w2, wzr
 2d4:	add	x8, x8, #0x7
 2d8:	and	x1, x8, #0xfffffffffffffff8
 2dc:	bl	0 <lseek>
 2e0:	ldr	x22, [sp, #32]
 2e4:	tbz	x0, #63, 300 <ctf_arc_write_fd+0x300>
 2e8:	bl	0 <__errno_location>
 2ec:	b	2f8 <ctf_arc_write_fd+0x2f8>
 2f0:	bl	0 <__errno_location>
 2f4:	ldp	x24, x22, [sp, #24]
 2f8:	ldrsw	x8, [x0]
 2fc:	neg	x28, x8
 300:	cmn	x28, #0x3e8
 304:	b.hi	360 <ctf_arc_write_fd+0x360>  // b.pmore
 308:	tbnz	x28, #63, 36c <ctf_arc_write_fd+0x36c>
 30c:	sub	x8, x28, x19
 310:	stp	x27, x8, [x25], #16
 314:	ldr	x0, [x23, x20, lsl #3]
 318:	bl	0 <strlen>
 31c:	ldr	x1, [x24, #16]
 320:	add	x8, x27, x0
 324:	add	x20, x20, #0x1
 328:	add	x27, x8, #0x1
 32c:	cmp	x20, x1
 330:	b.cc	1b8 <ctf_arc_write_fd+0x1b8>  // b.lo, b.ul, b.last
 334:	b	384 <ctf_arc_write_fd+0x384>
 338:	bl	0 <__errno_location>
 33c:	ldr	x22, [sp, #32]
 340:	b	2f8 <ctf_arc_write_fd+0x2f8>
 344:	ldr	x24, [sp, #24]
 348:	adrp	x20, 0 <ctf_arc_write_fd>
 34c:	add	x20, x20, #0x0
 350:	b	434 <ctf_arc_write_fd+0x434>
 354:	mov	x27, xzr
 358:	mov	x1, xzr
 35c:	b	388 <ctf_arc_write_fd+0x388>
 360:	adrp	x20, 0 <ctf_arc_write_fd>
 364:	add	x20, x20, #0x0
 368:	b	42c <ctf_arc_write_fd+0x42c>
 36c:	neg	w20, w28
 370:	bl	0 <__errno_location>
 374:	str	w20, [x0]
 378:	adrp	x20, 0 <ctf_arc_write_fd>
 37c:	add	x20, x20, #0x0
 380:	b	42c <ctf_arc_write_fd+0x42c>
 384:	ldr	x25, [sp]
 388:	ldur	x4, [x29, #-24]
 38c:	adrp	x3, 0 <ctf_arc_write_fd>
 390:	add	x3, x3, #0x0
 394:	mov	w2, #0x10                  	// #16
 398:	mov	x0, x25
 39c:	bl	0 <qsort_r>
 3a0:	mov	w2, #0x1                   	// #1
 3a4:	mov	w0, w21
 3a8:	mov	x1, xzr
 3ac:	bl	0 <lseek>
 3b0:	tbnz	x0, #63, 424 <ctf_arc_write_fd+0x424>
 3b4:	cmp	x27, #0x1
 3b8:	str	x0, [x24, #24]
 3bc:	b.lt	3f0 <ctf_arc_write_fd+0x3f0>  // b.tstop
 3c0:	ldur	x22, [x29, #-24]
 3c4:	adrp	x20, 0 <ctf_arc_write_fd>
 3c8:	add	x20, x20, #0x0
 3cc:	mov	w0, w21
 3d0:	mov	x1, x22
 3d4:	mov	x2, x27
 3d8:	bl	0 <write>
 3dc:	tbnz	x0, #63, 42c <ctf_arc_write_fd+0x42c>
 3e0:	sub	x27, x27, x0
 3e4:	cmp	x27, #0x0
 3e8:	add	x22, x22, x0
 3ec:	b.gt	3cc <ctf_arc_write_fd+0x3cc>
 3f0:	ldur	x0, [x29, #-24]
 3f4:	bl	0 <free>
 3f8:	mov	w2, #0x1                   	// #1
 3fc:	mov	x0, x24
 400:	mov	x1, x19
 404:	bl	0 <msync>
 408:	tbnz	w0, #31, 444 <ctf_arc_write_fd+0x444>
 40c:	mov	x0, x24
 410:	mov	x1, x19
 414:	bl	0 <munmap>
 418:	tbnz	w0, #31, 450 <ctf_arc_write_fd+0x450>
 41c:	mov	w0, wzr
 420:	b	f8 <ctf_arc_write_fd+0xf8>
 424:	adrp	x20, 0 <ctf_arc_write_fd>
 428:	add	x20, x20, #0x0
 42c:	ldur	x0, [x29, #-24]
 430:	bl	0 <free>
 434:	mov	x0, x24
 438:	mov	x1, x19
 43c:	bl	0 <munmap>
 440:	b	c8 <ctf_arc_write_fd+0xc8>
 444:	adrp	x20, 0 <ctf_arc_write_fd>
 448:	add	x20, x20, #0x0
 44c:	b	434 <ctf_arc_write_fd+0x434>
 450:	adrp	x20, 0 <ctf_arc_write_fd>
 454:	add	x20, x20, #0x0
 458:	b	c8 <ctf_arc_write_fd+0xc8>

000000000000045c <sort_modent_by_name>:
 45c:	ldr	x8, [x0]
 460:	ldr	x9, [x1]
 464:	add	x0, x2, x8
 468:	add	x1, x2, x9
 46c:	b	0 <strcmp>

0000000000000470 <ctf_arc_write>:
 470:	stp	x29, x30, [sp, #-64]!
 474:	stp	x24, x23, [sp, #16]
 478:	mov	x24, x1
 47c:	mov	w1, #0x242                 	// #578
 480:	mov	x23, x2
 484:	movk	w1, #0x8, lsl #16
 488:	mov	w2, #0x1b6                 	// #438
 48c:	stp	x22, x21, [sp, #32]
 490:	stp	x20, x19, [sp, #48]
 494:	mov	x29, sp
 498:	mov	x20, x4
 49c:	mov	x22, x3
 4a0:	mov	x19, x0
 4a4:	bl	0 <open>
 4a8:	tbnz	w0, #31, 4e8 <ctf_arc_write+0x78>
 4ac:	mov	x1, x24
 4b0:	mov	x2, x23
 4b4:	mov	x3, x22
 4b8:	mov	x4, x20
 4bc:	mov	w21, w0
 4c0:	bl	0 <ctf_arc_write_fd>
 4c4:	mov	w22, w0
 4c8:	mov	w0, w21
 4cc:	bl	0 <close>
 4d0:	cbz	w22, 514 <ctf_arc_write+0xa4>
 4d4:	tbz	w22, #31, 4e0 <ctf_arc_write+0x70>
 4d8:	mov	x0, x19
 4dc:	bl	0 <unlink>
 4e0:	mov	w20, w22
 4e4:	b	54c <ctf_arc_write+0xdc>
 4e8:	bl	0 <__errno_location>
 4ec:	mov	x20, x0
 4f0:	ldr	w0, [x0]
 4f4:	bl	0 <strerror>
 4f8:	mov	x2, x0
 4fc:	adrp	x0, 0 <ctf_arc_write_fd>
 500:	add	x0, x0, #0x0
 504:	mov	x1, x19
 508:	bl	0 <ctf_dprintf>
 50c:	ldr	w20, [x20]
 510:	b	54c <ctf_arc_write+0xdc>
 514:	mov	w20, w0
 518:	tbnz	w0, #31, 528 <ctf_arc_write+0xb8>
 51c:	mov	w0, w21
 520:	bl	0 <close>
 524:	b	54c <ctf_arc_write+0xdc>
 528:	bl	0 <__errno_location>
 52c:	ldr	w0, [x0]
 530:	bl	0 <strerror>
 534:	mov	x1, x0
 538:	adrp	x0, 0 <ctf_arc_write_fd>
 53c:	add	x0, x0, #0x0
 540:	bl	0 <ctf_dprintf>
 544:	mov	x0, x19
 548:	bl	0 <unlink>
 54c:	mov	w0, w20
 550:	ldp	x20, x19, [sp, #48]
 554:	ldp	x22, x21, [sp, #32]
 558:	ldp	x24, x23, [sp, #16]
 55c:	ldp	x29, x30, [sp], #64
 560:	ret

0000000000000564 <ctf_arc_bufopen>:
 564:	ldr	x8, [x0]
 568:	mov	x9, #0x3eeb                	// #16107
 56c:	movk	x9, #0xd762, lsl #16
 570:	movk	x9, #0xf2a4, lsl #32
 574:	movk	x9, #0x8b47, lsl #48
 578:	cmp	x8, x9
 57c:	b.eq	590 <ctf_arc_bufopen+0x2c>  // b.none
 580:	mov	x0, xzr
 584:	cbz	x2, 590 <ctf_arc_bufopen+0x2c>
 588:	mov	w8, #0x3e8                 	// #1000
 58c:	str	w8, [x2]
 590:	ret

0000000000000594 <ctf_arc_open_internal>:
 594:	sub	sp, sp, #0xc0
 598:	stp	x29, x30, [sp, #128]
 59c:	str	x23, [sp, #144]
 5a0:	stp	x22, x21, [sp, #160]
 5a4:	stp	x20, x19, [sp, #176]
 5a8:	add	x29, sp, #0x80
 5ac:	mov	x20, x1
 5b0:	mov	x19, x0
 5b4:	bl	0 <libctf_init_debug>
 5b8:	mov	x0, x19
 5bc:	mov	w1, wzr
 5c0:	bl	0 <open>
 5c4:	tbnz	w0, #31, 630 <ctf_arc_open_internal+0x9c>
 5c8:	mov	x1, sp
 5cc:	mov	w21, w0
 5d0:	bl	0 <fstat>
 5d4:	tbnz	w0, #31, 63c <ctf_arc_open_internal+0xa8>
 5d8:	ldr	x22, [sp, #48]
 5dc:	mov	w2, #0x3                   	// #3
 5e0:	mov	w3, #0x2                   	// #2
 5e4:	mov	x0, xzr
 5e8:	mov	x1, x22
 5ec:	mov	w4, w21
 5f0:	mov	x5, xzr
 5f4:	bl	0 <mmap>
 5f8:	cmn	x0, #0x1
 5fc:	csel	x23, xzr, x0, eq  // eq = none
 600:	cbz	x23, 648 <ctf_arc_open_internal+0xb4>
 604:	ldr	x8, [x23]
 608:	mov	x9, #0x3eeb                	// #16107
 60c:	movk	x9, #0xd762, lsl #16
 610:	movk	x9, #0xf2a4, lsl #32
 614:	movk	x9, #0x8b47, lsl #48
 618:	cmp	x8, x9
 61c:	b.ne	654 <ctf_arc_open_internal+0xc0>  // b.any
 620:	mov	w0, w21
 624:	str	x22, [x23]
 628:	bl	0 <close>
 62c:	b	6b8 <ctf_arc_open_internal+0x124>
 630:	adrp	x22, 0 <ctf_arc_write_fd>
 634:	add	x22, x22, #0x0
 638:	b	67c <ctf_arc_open_internal+0xe8>
 63c:	adrp	x22, 0 <ctf_arc_write_fd>
 640:	add	x22, x22, #0x0
 644:	b	674 <ctf_arc_open_internal+0xe0>
 648:	adrp	x22, 0 <ctf_arc_write_fd>
 64c:	add	x22, x22, #0x0
 650:	b	674 <ctf_arc_open_internal+0xe0>
 654:	bl	0 <__errno_location>
 658:	mov	w8, #0x3e8                 	// #1000
 65c:	str	w8, [x0]
 660:	mov	x0, x23
 664:	mov	x1, x22
 668:	bl	0 <munmap>
 66c:	adrp	x22, 0 <ctf_arc_write_fd>
 670:	add	x22, x22, #0x0
 674:	mov	w0, w21
 678:	bl	0 <close>
 67c:	bl	0 <__errno_location>
 680:	cbz	x20, 68c <ctf_arc_open_internal+0xf8>
 684:	ldr	w8, [x0]
 688:	str	w8, [x20]
 68c:	ldr	w0, [x0]
 690:	cmp	w0, #0x3e7
 694:	b.gt	6a0 <ctf_arc_open_internal+0x10c>
 698:	bl	0 <strerror>
 69c:	b	6a4 <ctf_arc_open_internal+0x110>
 6a0:	bl	0 <ctf_errmsg>
 6a4:	mov	x2, x0
 6a8:	mov	x0, x22
 6ac:	mov	x1, x19
 6b0:	bl	0 <ctf_dprintf>
 6b4:	mov	x23, xzr
 6b8:	mov	x0, x23
 6bc:	ldp	x20, x19, [sp, #176]
 6c0:	ldp	x22, x21, [sp, #160]
 6c4:	ldr	x23, [sp, #144]
 6c8:	ldp	x29, x30, [sp, #128]
 6cc:	add	sp, sp, #0xc0
 6d0:	ret

00000000000006d4 <ctf_arc_close_internal>:
 6d4:	cbz	x0, 6e0 <ctf_arc_close_internal+0xc>
 6d8:	ldr	x1, [x0]
 6dc:	b	0 <munmap>
 6e0:	ret

00000000000006e4 <ctf_arc_close>:
 6e4:	cbz	x0, 714 <ctf_arc_close+0x30>
 6e8:	stp	x29, x30, [sp, #-32]!
 6ec:	ldr	w8, [x0]
 6f0:	str	x19, [sp, #16]
 6f4:	mov	x19, x0
 6f8:	mov	x29, sp
 6fc:	cbz	w8, 718 <ctf_arc_close+0x34>
 700:	ldr	x0, [x19, #16]
 704:	cbz	x0, 720 <ctf_arc_close+0x3c>
 708:	ldr	x1, [x0]
 70c:	bl	0 <munmap>
 710:	b	720 <ctf_arc_close+0x3c>
 714:	ret
 718:	ldr	x0, [x19, #8]
 71c:	bl	0 <ctf_file_close>
 720:	ldr	x0, [x19, #32]
 724:	bl	0 <free>
 728:	ldr	x0, [x19, #88]
 72c:	bl	0 <free>
 730:	ldr	x8, [x19, #104]
 734:	cbz	x8, 740 <ctf_arc_close+0x5c>
 738:	mov	x0, x19
 73c:	blr	x8
 740:	mov	x0, x19
 744:	ldr	x19, [sp, #16]
 748:	ldp	x29, x30, [sp], #32
 74c:	b	0 <free>

0000000000000750 <ctf_arc_open_by_name_sections>:
 750:	stp	x29, x30, [sp, #-32]!
 754:	stp	x20, x19, [sp, #16]
 758:	ldr	w8, [x0]
 75c:	mov	x20, x4
 760:	mov	x19, x0
 764:	mov	x29, sp
 768:	cbz	w8, 784 <ctf_arc_open_by_name_sections+0x34>
 76c:	ldr	x0, [x19, #16]
 770:	mov	x4, x20
 774:	bl	7d0 <ctf_arc_open_by_name_internal>
 778:	cbz	x0, 7c4 <ctf_arc_open_by_name_sections+0x74>
 77c:	str	x19, [x0, #640]
 780:	b	7c4 <ctf_arc_open_by_name_sections+0x74>
 784:	cbz	x3, 7b0 <ctf_arc_open_by_name_sections+0x60>
 788:	adrp	x1, 0 <_CTF_SECTION>
 78c:	add	x1, x1, #0x0
 790:	mov	x0, x3
 794:	bl	0 <strcmp>
 798:	cbz	w0, 7b0 <ctf_arc_open_by_name_sections+0x60>
 79c:	mov	x0, xzr
 7a0:	cbz	x20, 7c4 <ctf_arc_open_by_name_sections+0x74>
 7a4:	mov	w8, #0x415                 	// #1045
 7a8:	str	w8, [x20]
 7ac:	b	7c4 <ctf_arc_open_by_name_sections+0x74>
 7b0:	ldr	x0, [x19, #8]
 7b4:	ldr	w8, [x0, #548]
 7b8:	str	x19, [x0, #640]
 7bc:	add	w8, w8, #0x1
 7c0:	str	w8, [x0, #548]
 7c4:	ldp	x20, x19, [sp, #16]
 7c8:	ldp	x29, x30, [sp], #32
 7cc:	ret

00000000000007d0 <ctf_arc_open_by_name_internal>:
 7d0:	sub	sp, sp, #0x60
 7d4:	stp	x24, x23, [sp, #48]
 7d8:	adrp	x24, 0 <_CTF_SECTION>
 7dc:	add	x24, x24, #0x0
 7e0:	cmp	x3, #0x0
 7e4:	stp	x20, x19, [sp, #80]
 7e8:	mov	x20, x0
 7ec:	csel	x23, x24, x3, eq  // eq = none
 7f0:	adrp	x0, 0 <ctf_arc_write_fd>
 7f4:	stp	x22, x21, [sp, #64]
 7f8:	mov	x22, x1
 7fc:	add	x0, x0, #0x0
 800:	mov	x1, x23
 804:	stp	x29, x30, [sp, #32]
 808:	add	x29, sp, #0x20
 80c:	mov	x19, x4
 810:	mov	x21, x2
 814:	bl	0 <ctf_dprintf>
 818:	ldp	x2, x8, [x20, #16]
 81c:	mrs	x9, tpidr_el0
 820:	add	x9, x9, #0x0, lsl #12
 824:	adrp	x4, 0 <ctf_arc_write_fd>
 828:	add	x8, x20, x8
 82c:	add	x9, x9, #0x0
 830:	add	x1, x20, #0x28
 834:	add	x4, x4, #0x0
 838:	mov	w3, #0x10                  	// #16
 83c:	mov	x0, x23
 840:	str	x8, [x9]
 844:	bl	0 <bsearch>
 848:	cbz	x0, 8ac <ctf_arc_open_by_name_internal+0xdc>
 84c:	ldr	x23, [x0, #8]
 850:	adrp	x0, 0 <ctf_arc_write_fd>
 854:	add	x0, x0, #0x0
 858:	mov	x1, x23
 85c:	bl	0 <ctf_dprintf>
 860:	ldr	x8, [x20, #32]
 864:	str	x24, [sp]
 868:	mov	w10, #0x1                   	// #1
 86c:	mov	x0, sp
 870:	add	x8, x8, x23
 874:	add	x8, x20, x8
 878:	ldr	x9, [x8], #8
 87c:	mov	x1, x22
 880:	mov	x2, x21
 884:	mov	x3, x19
 888:	stp	x9, x10, [sp, #16]
 88c:	str	x8, [sp, #8]
 890:	bl	0 <ctf_bufopen>
 894:	mov	x21, x0
 898:	cbz	x0, 8bc <ctf_arc_open_by_name_internal+0xec>
 89c:	ldr	w1, [x20, #8]
 8a0:	mov	x0, x21
 8a4:	bl	0 <ctf_setmodel>
 8a8:	b	8bc <ctf_arc_open_by_name_internal+0xec>
 8ac:	mov	x21, xzr
 8b0:	cbz	x19, 8bc <ctf_arc_open_by_name_internal+0xec>
 8b4:	mov	w8, #0x415                 	// #1045
 8b8:	str	w8, [x19]
 8bc:	mov	x0, x21
 8c0:	ldp	x20, x19, [sp, #80]
 8c4:	ldp	x22, x21, [sp, #64]
 8c8:	ldp	x24, x23, [sp, #48]
 8cc:	ldp	x29, x30, [sp, #32]
 8d0:	add	sp, sp, #0x60
 8d4:	ret

00000000000008d8 <ctf_arc_open_by_name>:
 8d8:	mov	x8, x0
 8dc:	ldr	x9, [x8, #24]!
 8e0:	mov	x10, x0
 8e4:	ldr	x11, [x10, #56]!
 8e8:	mov	x4, x2
 8ec:	cmp	x9, #0x0
 8f0:	csel	x8, xzr, x8, eq  // eq = none
 8f4:	cmp	x11, #0x0
 8f8:	csel	x2, xzr, x10, eq  // eq = none
 8fc:	mov	x3, x1
 900:	mov	x1, x8
 904:	b	750 <ctf_arc_open_by_name_sections>

0000000000000908 <ctf_archive_raw_iter>:
 908:	stp	x29, x30, [sp, #-64]!
 90c:	stp	x24, x23, [sp, #16]
 910:	stp	x22, x21, [sp, #32]
 914:	stp	x20, x19, [sp, #48]
 918:	ldr	w8, [x0]
 91c:	mov	x29, sp
 920:	cbz	w8, 988 <ctf_archive_raw_iter+0x80>
 924:	ldr	x21, [x0, #16]
 928:	ldr	x8, [x21, #16]
 92c:	cbz	x8, 980 <ctf_archive_raw_iter+0x78>
 930:	ldr	x8, [x21, #24]
 934:	mov	x19, x2
 938:	mov	x20, x1
 93c:	mov	x22, xzr
 940:	add	x23, x21, x8
 944:	add	x24, x21, #0x30
 948:	ldr	x8, [x21, #32]
 94c:	ldp	x10, x9, [x24, #-8]
 950:	mov	x3, x19
 954:	add	x8, x21, x8
 958:	add	x1, x8, x9
 95c:	ldr	x2, [x1], #8
 960:	add	x0, x23, x10
 964:	blr	x20
 968:	cbnz	w0, 98c <ctf_archive_raw_iter+0x84>
 96c:	ldr	x8, [x21, #16]
 970:	add	x22, x22, #0x1
 974:	add	x24, x24, #0x10
 978:	cmp	x22, x8
 97c:	b.cc	948 <ctf_archive_raw_iter+0x40>  // b.lo, b.ul, b.last
 980:	mov	w0, wzr
 984:	b	98c <ctf_archive_raw_iter+0x84>
 988:	mov	w0, #0xffffffea            	// #-22
 98c:	ldp	x20, x19, [sp, #48]
 990:	ldp	x22, x21, [sp, #32]
 994:	ldp	x24, x23, [sp, #16]
 998:	ldp	x29, x30, [sp], #64
 99c:	ret

00000000000009a0 <ctf_archive_iter>:
 9a0:	sub	sp, sp, #0x70
 9a4:	stp	x29, x30, [sp, #16]
 9a8:	stp	x28, x27, [sp, #32]
 9ac:	stp	x26, x25, [sp, #48]
 9b0:	stp	x24, x23, [sp, #64]
 9b4:	stp	x22, x21, [sp, #80]
 9b8:	stp	x20, x19, [sp, #96]
 9bc:	mov	x8, x0
 9c0:	ldr	x9, [x8, #24]!
 9c4:	mov	x10, x0
 9c8:	ldr	x11, [x10, #56]!
 9cc:	ldr	w12, [x0]
 9d0:	cmp	x9, #0x0
 9d4:	csel	x21, xzr, x8, eq  // eq = none
 9d8:	cmp	x11, #0x0
 9dc:	mov	x19, x2
 9e0:	mov	x3, x1
 9e4:	mov	x20, x0
 9e8:	csel	x22, xzr, x10, eq  // eq = none
 9ec:	add	x29, sp, #0x10
 9f0:	cbz	w12, a80 <ctf_archive_iter+0xe0>
 9f4:	ldr	x23, [x20, #16]
 9f8:	ldr	x8, [x23, #16]
 9fc:	cbz	x8, a78 <ctf_archive_iter+0xd8>
 a00:	ldr	x8, [x23, #24]
 a04:	mov	x26, xzr
 a08:	mov	w28, #0x28                  	// #40
 a0c:	str	x3, [sp]
 a10:	add	x27, x23, x8
 a14:	ldr	x8, [x23, x28]
 a18:	sub	x4, x29, #0x4
 a1c:	mov	x0, x23
 a20:	mov	x1, x21
 a24:	add	x24, x27, x8
 a28:	mov	x2, x22
 a2c:	mov	x3, x24
 a30:	bl	7d0 <ctf_arc_open_by_name_internal>
 a34:	cbz	x0, ab0 <ctf_archive_iter+0x110>
 a38:	ldr	x3, [sp]
 a3c:	mov	x1, x24
 a40:	mov	x2, x19
 a44:	mov	x25, x0
 a48:	str	x20, [x0, #640]
 a4c:	blr	x3
 a50:	mov	w24, w0
 a54:	stur	w0, [x29, #-4]
 a58:	mov	x0, x25
 a5c:	bl	0 <ctf_file_close>
 a60:	cbnz	w24, ab0 <ctf_archive_iter+0x110>
 a64:	ldr	x8, [x23, #16]
 a68:	add	x26, x26, #0x1
 a6c:	add	x28, x28, #0x10
 a70:	cmp	x26, x8
 a74:	b.cc	a14 <ctf_archive_iter+0x74>  // b.lo, b.ul, b.last
 a78:	mov	w0, wzr
 a7c:	b	ab4 <ctf_archive_iter+0x114>
 a80:	ldr	x0, [x20, #8]
 a84:	mov	x2, x19
 a88:	ldp	x20, x19, [sp, #96]
 a8c:	ldp	x22, x21, [sp, #80]
 a90:	ldp	x24, x23, [sp, #64]
 a94:	ldp	x26, x25, [sp, #48]
 a98:	ldp	x28, x27, [sp, #32]
 a9c:	ldp	x29, x30, [sp, #16]
 aa0:	adrp	x1, 0 <_CTF_SECTION>
 aa4:	add	x1, x1, #0x0
 aa8:	add	sp, sp, #0x70
 aac:	br	x3
 ab0:	ldur	w0, [x29, #-4]
 ab4:	ldp	x20, x19, [sp, #96]
 ab8:	ldp	x22, x21, [sp, #80]
 abc:	ldp	x24, x23, [sp, #64]
 ac0:	ldp	x26, x25, [sp, #48]
 ac4:	ldp	x28, x27, [sp, #32]
 ac8:	ldp	x29, x30, [sp, #16]
 acc:	add	sp, sp, #0x70
 ad0:	ret

0000000000000ad4 <search_modent_by_name>:
 ad4:	mrs	x8, tpidr_el0
 ad8:	add	x8, x8, #0x0, lsl #12
 adc:	add	x8, x8, #0x0
 ae0:	ldr	x8, [x8]
 ae4:	ldr	x9, [x1]
 ae8:	add	x1, x8, x9
 aec:	b	0 <strcmp>

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_dump>:
       0:	sub	sp, sp, #0xa0
       4:	stp	x29, x30, [sp, #64]
       8:	stp	x28, x27, [sp, #80]
       c:	stp	x26, x25, [sp, #96]
      10:	stp	x24, x23, [sp, #112]
      14:	stp	x22, x21, [sp, #128]
      18:	stp	x20, x19, [sp, #144]
      1c:	ldr	x21, [x1]
      20:	mov	x22, x4
      24:	mov	x23, x3
      28:	mov	w24, w2
      2c:	mov	x20, x1
      30:	mov	x19, x0
      34:	add	x29, sp, #0x40
      38:	cbz	x21, f8 <ctf_dump+0xf8>
      3c:	ldr	w8, [x21]
      40:	cmp	w8, w24
      44:	b.ne	1b8 <ctf_dump+0x1b8>  // b.any
      48:	ldr	x8, [x21, #16]
      4c:	add	x9, x21, #0x20
      50:	add	x10, x8, #0x8
      54:	cmp	x8, #0x0
      58:	csel	x8, x9, x10, eq  // eq = none
      5c:	ldr	x8, [x8]
      60:	str	x8, [x21, #16]
      64:	cbz	x8, 1c4 <ctf_dump+0x1c4>
      68:	ldr	x25, [x8, #16]
      6c:	cbz	x23, 23c <ctf_dump+0x23c>
      70:	cbz	x25, 218 <ctf_dump+0x218>
      74:	ldrb	w8, [x25]
      78:	cbz	w8, 218 <ctf_dump+0x218>
      7c:	adrp	x20, 0 <ctf_dump>
      80:	mov	x21, xzr
      84:	mov	w28, #0xa                   	// #10
      88:	add	x20, x20, #0x0
      8c:	mov	w1, #0xa                   	// #10
      90:	mov	x0, x25
      94:	bl	0 <strchr>
      98:	mov	x26, x0
      9c:	cbz	x0, a4 <ctf_dump+0xa4>
      a0:	strb	wzr, [x26]
      a4:	mov	w0, w24
      a8:	mov	x1, x25
      ac:	mov	x2, x22
      b0:	blr	x23
      b4:	mov	x27, x0
      b8:	mov	x0, x21
      bc:	mov	x1, x27
      c0:	bl	0 <ctf_str_append_noerr>
      c4:	mov	x1, x20
      c8:	bl	0 <ctf_str_append_noerr>
      cc:	cmp	x27, x25
      d0:	mov	x21, x0
      d4:	b.eq	e0 <ctf_dump+0xe0>  // b.none
      d8:	mov	x0, x27
      dc:	bl	0 <free>
      e0:	cbz	x26, 21c <ctf_dump+0x21c>
      e4:	strb	w28, [x26]
      e8:	ldrb	w8, [x26, #1]!
      ec:	mov	x25, x26
      f0:	cbnz	w8, 8c <ctf_dump+0x8c>
      f4:	b	21c <ctf_dump+0x21c>
      f8:	mov	w0, #0x28                  	// #40
      fc:	bl	0 <malloc>
     100:	mov	x21, x0
     104:	str	x0, [x20]
     108:	cbz	x0, 1ec <ctf_dump+0x1ec>
     10c:	movi	v0.2d, #0x0
     110:	cmp	w24, #0x6
     114:	str	xzr, [x21, #32]
     118:	stp	q0, q0, [x21]
     11c:	str	x19, [x21, #8]
     120:	str	w24, [x21]
     124:	b.hi	288 <ctf_dump+0x288>  // b.pmore
     128:	adrp	x9, 0 <ctf_dump>
     12c:	mov	w8, w24
     130:	add	x9, x9, #0x0
     134:	adr	x10, 144 <ctf_dump+0x144>
     138:	ldrh	w11, [x9, x8, lsl #1]
     13c:	add	x10, x10, x11, lsl #2
     140:	br	x10
     144:	adrp	x8, 0 <ctf_dump>
     148:	adrp	x9, 0 <ctf_dump>
     14c:	ldr	x25, [x19, #8]
     150:	movi	v0.2d, #0x0
     154:	add	x8, x8, #0x0
     158:	add	x9, x9, #0x0
     15c:	adrp	x10, 0 <ctf_dump>
     160:	stp	q0, q0, [sp]
     164:	stp	x8, x9, [sp, #8]
     168:	adrp	x8, 0 <ctf_dump>
     16c:	add	x10, x10, #0x0
     170:	add	x8, x8, #0x0
     174:	str	q0, [sp, #32]
     178:	stp	x10, x8, [sp, #24]
     17c:	ldrh	w2, [x25]
     180:	adrp	x1, 0 <ctf_dump>
     184:	add	x1, x1, #0x0
     188:	sub	x0, x29, #0x8
     18c:	bl	0 <asprintf>
     190:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     194:	ldur	x1, [x29, #-8]
     198:	mov	x0, x21
     19c:	bl	abc <ctf_dump_append>
     1a0:	ldrb	w2, [x25, #2]
     1a4:	cmp	x2, #0x4
     1a8:	b.hi	664 <ctf_dump+0x664>  // b.pmore
     1ac:	mov	x8, sp
     1b0:	ldr	x8, [x8, x2, lsl #3]
     1b4:	b	668 <ctf_dump+0x668>
     1b8:	mov	w1, #0x418                 	// #1048
     1bc:	mov	x0, x19
     1c0:	bl	0 <ctf_set_errno>
     1c4:	ldr	x22, [x21, #32]
     1c8:	cbz	x22, 1f8 <ctf_dump+0x1f8>
     1cc:	ldr	x0, [x22, #16]
     1d0:	bl	0 <free>
     1d4:	ldr	x23, [x22, #8]
     1d8:	mov	x0, x22
     1dc:	bl	0 <free>
     1e0:	mov	x22, x23
     1e4:	cbnz	x23, 1cc <ctf_dump+0x1cc>
     1e8:	b	1f8 <ctf_dump+0x1f8>
     1ec:	mov	w1, #0xc                   	// #12
     1f0:	mov	x0, x19
     1f4:	bl	0 <ctf_set_errno>
     1f8:	mov	x0, x21
     1fc:	bl	0 <free>
     200:	mov	x0, x19
     204:	mov	w1, wzr
     208:	bl	0 <ctf_set_errno>
     20c:	mov	x21, xzr
     210:	str	xzr, [x20]
     214:	b	258 <ctf_dump+0x258>
     218:	mov	x21, xzr
     21c:	mov	x0, x21
     220:	bl	0 <strlen>
     224:	sub	x8, x0, #0x1
     228:	ldrb	w9, [x21, x8]
     22c:	cmp	w9, #0xa
     230:	b.ne	24c <ctf_dump+0x24c>  // b.any
     234:	strb	wzr, [x21, x8]
     238:	b	24c <ctf_dump+0x24c>
     23c:	mov	x0, x25
     240:	bl	0 <strdup>
     244:	mov	x21, x0
     248:	cbz	x0, 27c <ctf_dump+0x27c>
     24c:	mov	x0, x19
     250:	mov	w1, wzr
     254:	bl	0 <ctf_set_errno>
     258:	mov	x0, x21
     25c:	ldp	x20, x19, [sp, #144]
     260:	ldp	x22, x21, [sp, #128]
     264:	ldp	x24, x23, [sp, #112]
     268:	ldp	x26, x25, [sp, #96]
     26c:	ldp	x28, x27, [sp, #80]
     270:	ldp	x29, x30, [sp, #64]
     274:	add	sp, sp, #0xa0
     278:	ret
     27c:	mov	w1, #0xc                   	// #12
     280:	mov	x0, x19
     284:	b	254 <ctf_dump+0x254>
     288:	mov	w1, #0x417                 	// #1047
     28c:	b	1bc <ctf_dump+0x1bc>
     290:	adrp	x1, 0 <ctf_dump>
     294:	add	x1, x1, #0x0
     298:	mov	x0, x19
     29c:	mov	x2, x21
     2a0:	bl	0 <ctf_label_iter>
     2a4:	tbz	w0, #31, 48 <ctf_dump+0x48>
     2a8:	mov	x0, x19
     2ac:	bl	0 <ctf_errno>
     2b0:	cmp	w0, #0x409
     2b4:	b.ne	1c4 <ctf_dump+0x1c4>  // b.any
     2b8:	mov	x0, x19
     2bc:	mov	w1, wzr
     2c0:	b	7ec <ctf_dump+0x7ec>
     2c4:	ldr	x8, [x19, #432]
     2c8:	cbz	x8, 48 <ctf_dump+0x48>
     2cc:	adrp	x26, 0 <ctf_dump>
     2d0:	adrp	x27, 0 <ctf_dump>
     2d4:	mov	x25, xzr
     2d8:	add	x26, x26, #0x0
     2dc:	add	x27, x27, #0x0
     2e0:	mov	x0, x19
     2e4:	mov	x1, x25
     2e8:	bl	0 <ctf_lookup_by_symbol>
     2ec:	mov	x28, x0
     2f0:	cmn	x0, #0x1
     2f4:	b.eq	328 <ctf_dump+0x328>  // b.none
     2f8:	mov	x0, x19
     2fc:	mov	x1, x25
     300:	bl	0 <ctf_lookup_symbol_name>
     304:	ldrb	w8, [x0]
     308:	cbz	w8, 348 <ctf_dump+0x348>
     30c:	mov	x2, x0
     310:	mov	x0, sp
     314:	mov	x1, x27
     318:	mov	x3, x25
     31c:	bl	0 <asprintf>
     320:	tbz	w0, #31, 35c <ctf_dump+0x35c>
     324:	b	828 <ctf_dump+0x828>
     328:	ldr	x0, [x21, #8]
     32c:	bl	0 <ctf_errno>
     330:	sub	w8, w0, #0x406
     334:	cmp	w8, #0x2
     338:	b.cc	39c <ctf_dump+0x39c>  // b.lo, b.ul, b.last
     33c:	cmp	w0, #0x3f2
     340:	b.ne	2f8 <ctf_dump+0x2f8>  // b.any
     344:	b	1c4 <ctf_dump+0x1c4>
     348:	mov	x0, sp
     34c:	mov	x1, x26
     350:	mov	x2, x25
     354:	bl	0 <asprintf>
     358:	tbnz	w0, #31, 828 <ctf_dump+0x828>
     35c:	ldr	x0, [x21, #8]
     360:	mov	w2, #0x1                   	// #1
     364:	mov	x1, x28
     368:	bl	bf4 <ctf_dump_format_type>
     36c:	ldr	x8, [sp]
     370:	cbz	x0, 7f4 <ctf_dump+0x7f4>
     374:	mov	x28, x0
     378:	mov	x0, x8
     37c:	mov	x1, x28
     380:	bl	0 <ctf_str_append_noerr>
     384:	str	x0, [sp]
     388:	mov	x0, x28
     38c:	bl	0 <free>
     390:	ldr	x1, [sp]
     394:	mov	x0, x21
     398:	bl	abc <ctf_dump_append>
     39c:	ldr	x8, [x19, #432]
     3a0:	add	x25, x25, #0x1
     3a4:	cmp	x25, x8
     3a8:	b.cs	48 <ctf_dump+0x48>  // b.hs, b.nlast
     3ac:	ldr	x0, [x21, #8]
     3b0:	b	2e4 <ctf_dump+0x2e4>
     3b4:	ldr	x8, [x19, #432]
     3b8:	cbz	x8, 48 <ctf_dump+0x48>
     3bc:	mov	x25, xzr
     3c0:	mov	x0, x19
     3c4:	mov	x2, sp
     3c8:	mov	x1, x25
     3cc:	bl	0 <ctf_func_info>
     3d0:	mov	w26, w0
     3d4:	cmn	w0, #0x1
     3d8:	b.eq	444 <ctf_dump+0x444>  // b.none
     3dc:	ldr	w0, [sp, #8]
     3e0:	mov	w1, #0x8                   	// #8
     3e4:	bl	0 <calloc>
     3e8:	cbz	x0, 800 <ctf_dump+0x800>
     3ec:	mov	x27, x0
     3f0:	ldr	x0, [x21, #8]
     3f4:	sxtw	x1, w26
     3f8:	bl	0 <ctf_type_aname>
     3fc:	cbz	x0, 808 <ctf_dump+0x808>
     400:	adrp	x1, 0 <ctf_dump>
     404:	add	x1, x1, #0x0
     408:	bl	0 <ctf_str_append_noerr>
     40c:	mov	x26, x0
     410:	mov	x0, x19
     414:	mov	x1, x25
     418:	bl	0 <ctf_lookup_symbol_name>
     41c:	ldrb	w8, [x0]
     420:	cbz	w8, 464 <ctf_dump+0x464>
     424:	adrp	x1, 0 <ctf_dump>
     428:	mov	x2, x0
     42c:	sub	x0, x29, #0x8
     430:	add	x1, x1, #0x0
     434:	mov	x3, x25
     438:	bl	0 <asprintf>
     43c:	tbz	w0, #31, 47c <ctf_dump+0x47c>
     440:	b	818 <ctf_dump+0x818>
     444:	ldr	x0, [x21, #8]
     448:	bl	0 <ctf_errno>
     44c:	sub	w8, w0, #0x404
     450:	cmp	w8, #0x3
     454:	b.cc	574 <ctf_dump+0x574>  // b.lo, b.ul, b.last
     458:	cmp	w0, #0x3f2
     45c:	b.ne	3dc <ctf_dump+0x3dc>  // b.any
     460:	b	1c4 <ctf_dump+0x1c4>
     464:	adrp	x1, 0 <ctf_dump>
     468:	sub	x0, x29, #0x8
     46c:	add	x1, x1, #0x0
     470:	mov	x2, x25
     474:	bl	0 <asprintf>
     478:	tbnz	w0, #31, 818 <ctf_dump+0x818>
     47c:	ldur	x1, [x29, #-8]
     480:	mov	x0, x26
     484:	bl	0 <ctf_str_append_noerr>
     488:	adrp	x1, 0 <ctf_dump>
     48c:	add	x1, x1, #0x0
     490:	bl	0 <ctf_str_append_noerr>
     494:	ldur	x8, [x29, #-8]
     498:	mov	x26, x0
     49c:	mov	x0, x8
     4a0:	bl	0 <free>
     4a4:	ldr	x0, [x21, #8]
     4a8:	ldr	w2, [sp, #8]
     4ac:	mov	x1, x25
     4b0:	mov	x3, x27
     4b4:	bl	0 <ctf_func_args>
     4b8:	tbnz	w0, #31, 840 <ctf_dump+0x840>
     4bc:	ldr	w8, [sp, #8]
     4c0:	cbz	w8, 530 <ctf_dump+0x530>
     4c4:	mov	x28, xzr
     4c8:	ldr	x0, [x21, #8]
     4cc:	ldr	x1, [x27, x28, lsl #3]
     4d0:	bl	0 <ctf_type_aname>
     4d4:	stur	x0, [x29, #-8]
     4d8:	cbz	x0, 628 <ctf_dump+0x628>
     4dc:	mov	x1, x0
     4e0:	mov	x0, x26
     4e4:	bl	0 <ctf_str_append_noerr>
     4e8:	ldr	w8, [sp, #8]
     4ec:	mov	x26, x0
     4f0:	sub	w8, w8, #0x1
     4f4:	cmp	x28, x8
     4f8:	b.cc	504 <ctf_dump+0x504>  // b.lo, b.ul, b.last
     4fc:	ldrb	w8, [sp, #12]
     500:	tbz	w8, #0, 518 <ctf_dump+0x518>
     504:	adrp	x1, 0 <ctf_dump>
     508:	mov	x0, x26
     50c:	add	x1, x1, #0x0
     510:	bl	0 <ctf_str_append_noerr>
     514:	mov	x26, x0
     518:	ldur	x0, [x29, #-8]
     51c:	bl	0 <free>
     520:	ldr	w8, [sp, #8]
     524:	add	x28, x28, #0x1
     528:	cmp	x28, x8
     52c:	b.cc	4c8 <ctf_dump+0x4c8>  // b.lo, b.ul, b.last
     530:	ldrb	w8, [sp, #12]
     534:	tbz	w8, #0, 54c <ctf_dump+0x54c>
     538:	adrp	x1, 0 <ctf_dump>
     53c:	mov	x0, x26
     540:	add	x1, x1, #0x0
     544:	bl	0 <ctf_str_append_noerr>
     548:	mov	x26, x0
     54c:	adrp	x1, 0 <ctf_dump>
     550:	mov	x0, x26
     554:	add	x1, x1, #0x0
     558:	bl	0 <ctf_str_append_noerr>
     55c:	mov	x26, x0
     560:	mov	x0, x27
     564:	bl	0 <free>
     568:	mov	x0, x21
     56c:	mov	x1, x26
     570:	bl	abc <ctf_dump_append>
     574:	ldr	x8, [x19, #432]
     578:	add	x25, x25, #0x1
     57c:	cmp	x25, x8
     580:	b.cs	48 <ctf_dump+0x48>  // b.hs, b.nlast
     584:	ldr	x0, [x21, #8]
     588:	b	3c4 <ctf_dump+0x3c4>
     58c:	adrp	x1, 0 <ctf_dump>
     590:	add	x1, x1, #0x0
     594:	mov	x0, x19
     598:	mov	x2, x21
     59c:	bl	0 <ctf_variable_iter>
     5a0:	tbz	w0, #31, 48 <ctf_dump+0x48>
     5a4:	b	1c4 <ctf_dump+0x1c4>
     5a8:	adrp	x1, 0 <ctf_dump>
     5ac:	add	x1, x1, #0x0
     5b0:	mov	x0, x19
     5b4:	mov	x2, x21
     5b8:	bl	0 <ctf_type_iter_all>
     5bc:	tbz	w0, #31, 48 <ctf_dump+0x48>
     5c0:	b	1c4 <ctf_dump+0x1c4>
     5c4:	ldr	x8, [x19, #344]
     5c8:	cmp	x8, #0x1
     5cc:	b.lt	48 <ctf_dump+0x48>  // b.tstop
     5d0:	ldr	x8, [x19, #336]
     5d4:	adrp	x25, 0 <ctf_dump>
     5d8:	add	x25, x25, #0x0
     5dc:	mov	x26, x8
     5e0:	sub	x2, x26, x8
     5e4:	mov	x0, sp
     5e8:	mov	x1, x25
     5ec:	mov	x3, x26
     5f0:	bl	0 <asprintf>
     5f4:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     5f8:	ldr	x1, [sp]
     5fc:	mov	x0, x21
     600:	bl	abc <ctf_dump_append>
     604:	mov	x0, x26
     608:	bl	0 <strlen>
     60c:	ldp	x8, x9, [x19, #336]
     610:	add	x10, x0, x26
     614:	add	x26, x10, #0x1
     618:	add	x9, x8, x9
     61c:	cmp	x26, x9
     620:	b.cc	5e0 <ctf_dump+0x5e0>  // b.lo, b.ul, b.last
     624:	b	48 <ctf_dump+0x48>
     628:	adrp	x22, 0 <ctf_dump>
     62c:	add	x22, x22, #0x0
     630:	ldr	x0, [x21, #8]
     634:	bl	0 <ctf_errno>
     638:	bl	0 <ctf_errmsg>
     63c:	mov	x3, x0
     640:	adrp	x0, 0 <ctf_dump>
     644:	add	x0, x0, #0x0
     648:	mov	x1, x22
     64c:	mov	x2, x25
     650:	bl	0 <ctf_dprintf>
     654:	mov	x0, x27
     658:	bl	0 <free>
     65c:	mov	x0, x26
     660:	b	7f8 <ctf_dump+0x7f8>
     664:	mov	x8, xzr
     668:	adrp	x9, 0 <ctf_dump>
     66c:	add	x9, x9, #0x0
     670:	cmp	x8, #0x0
     674:	adrp	x1, 0 <ctf_dump>
     678:	csel	x3, x9, x8, eq  // eq = none
     67c:	add	x1, x1, #0x0
     680:	sub	x0, x29, #0x8
     684:	bl	0 <asprintf>
     688:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     68c:	ldur	x1, [x29, #-8]
     690:	mov	x0, x21
     694:	bl	abc <ctf_dump_append>
     698:	ldrb	w2, [x19, #16]
     69c:	cbz	w2, 6d8 <ctf_dump+0x6d8>
     6a0:	adrp	x8, 0 <ctf_dump>
     6a4:	adrp	x9, 0 <ctf_dump>
     6a8:	add	x8, x8, #0x0
     6ac:	add	x9, x9, #0x0
     6b0:	tst	w2, #0x1
     6b4:	adrp	x1, 0 <ctf_dump>
     6b8:	csel	x3, x9, x8, eq  // eq = none
     6bc:	add	x1, x1, #0x0
     6c0:	sub	x0, x29, #0x8
     6c4:	bl	0 <asprintf>
     6c8:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     6cc:	ldur	x1, [x29, #-8]
     6d0:	mov	x0, x21
     6d4:	bl	abc <ctf_dump_append>
     6d8:	ldr	w3, [x25, #4]
     6dc:	adrp	x2, 0 <ctf_dump>
     6e0:	add	x2, x2, #0x0
     6e4:	mov	x0, x19
     6e8:	mov	x1, x21
     6ec:	bl	b08 <ctf_dump_header_strfield>
     6f0:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     6f4:	ldr	w3, [x25, #8]
     6f8:	adrp	x2, 0 <ctf_dump>
     6fc:	add	x2, x2, #0x0
     700:	mov	x0, x19
     704:	mov	x1, x21
     708:	bl	b08 <ctf_dump_header_strfield>
     70c:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     710:	ldr	w3, [x25, #12]
     714:	adrp	x2, 0 <ctf_dump>
     718:	add	x2, x2, #0x0
     71c:	mov	x0, x19
     720:	mov	x1, x21
     724:	bl	b08 <ctf_dump_header_strfield>
     728:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     72c:	ldp	w3, w4, [x25, #16]
     730:	adrp	x2, 0 <ctf_dump>
     734:	add	x2, x2, #0x0
     738:	mov	x0, x19
     73c:	mov	x1, x21
     740:	bl	b80 <ctf_dump_header_sectfield>
     744:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     748:	ldp	w3, w4, [x25, #20]
     74c:	adrp	x2, 0 <ctf_dump>
     750:	add	x2, x2, #0x0
     754:	mov	x0, x19
     758:	mov	x1, x21
     75c:	bl	b80 <ctf_dump_header_sectfield>
     760:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     764:	ldr	w3, [x25, #24]
     768:	ldr	w4, [x25, #36]
     76c:	adrp	x2, 0 <ctf_dump>
     770:	add	x2, x2, #0x0
     774:	mov	x0, x19
     778:	mov	x1, x21
     77c:	bl	b80 <ctf_dump_header_sectfield>
     780:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     784:	ldp	w3, w4, [x25, #36]
     788:	adrp	x2, 0 <ctf_dump>
     78c:	add	x2, x2, #0x0
     790:	mov	x0, x19
     794:	mov	x1, x21
     798:	bl	b80 <ctf_dump_header_sectfield>
     79c:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     7a0:	ldp	w3, w4, [x25, #40]
     7a4:	adrp	x2, 0 <ctf_dump>
     7a8:	add	x2, x2, #0x0
     7ac:	mov	x0, x19
     7b0:	mov	x1, x21
     7b4:	bl	b80 <ctf_dump_header_sectfield>
     7b8:	tbnz	w0, #31, 7e0 <ctf_dump+0x7e0>
     7bc:	ldp	w3, w8, [x25, #44]
     7c0:	adrp	x2, 0 <ctf_dump>
     7c4:	add	x2, x2, #0x0
     7c8:	mov	x0, x19
     7cc:	add	w8, w3, w8
     7d0:	add	w4, w8, #0x1
     7d4:	mov	x1, x21
     7d8:	bl	b80 <ctf_dump_header_sectfield>
     7dc:	tbz	w0, #31, 48 <ctf_dump+0x48>
     7e0:	bl	0 <__errno_location>
     7e4:	ldr	w1, [x0]
     7e8:	mov	x0, x19
     7ec:	bl	0 <ctf_set_errno>
     7f0:	b	48 <ctf_dump+0x48>
     7f4:	mov	x0, x8
     7f8:	bl	0 <free>
     7fc:	b	1c4 <ctf_dump+0x1c4>
     800:	mov	w1, #0xc                   	// #12
     804:	b	830 <ctf_dump+0x830>
     808:	adrp	x22, 0 <ctf_dump>
     80c:	mov	x26, xzr
     810:	add	x22, x22, #0x0
     814:	b	630 <ctf_dump+0x630>
     818:	mov	x0, x27
     81c:	bl	0 <free>
     820:	mov	x0, x26
     824:	bl	0 <free>
     828:	bl	0 <__errno_location>
     82c:	ldr	w1, [x0]
     830:	mov	x0, x19
     834:	bl	0 <ctf_set_errno>
     838:	tbz	w0, #31, 48 <ctf_dump+0x48>
     83c:	b	1c4 <ctf_dump+0x1c4>
     840:	adrp	x22, 0 <ctf_dump>
     844:	add	x22, x22, #0x0
     848:	b	630 <ctf_dump+0x630>

000000000000084c <ctf_dump_label>:
     84c:	stp	x29, x30, [sp, #-48]!
     850:	str	x21, [sp, #16]
     854:	mov	x29, sp
     858:	mov	x21, x1
     85c:	adrp	x1, 0 <ctf_dump>
     860:	stp	x20, x19, [sp, #32]
     864:	mov	x19, x2
     868:	mov	x2, x0
     86c:	add	x1, x1, #0x0
     870:	add	x0, x29, #0x18
     874:	bl	0 <asprintf>
     878:	ldr	x20, [x19, #8]
     87c:	tbnz	w0, #31, 8c8 <ctf_dump_label+0x7c>
     880:	ldr	x1, [x21]
     884:	mov	w2, #0x1                   	// #1
     888:	mov	x0, x20
     88c:	bl	bf4 <ctf_dump_format_type>
     890:	ldr	x8, [x29, #24]
     894:	cbz	x0, 8dc <ctf_dump_label+0x90>
     898:	mov	x20, x0
     89c:	mov	x0, x8
     8a0:	mov	x1, x20
     8a4:	bl	0 <ctf_str_append_noerr>
     8a8:	str	x0, [x29, #24]
     8ac:	mov	x0, x20
     8b0:	bl	0 <free>
     8b4:	ldr	x1, [x29, #24]
     8b8:	mov	x0, x19
     8bc:	bl	abc <ctf_dump_append>
     8c0:	mov	w0, wzr
     8c4:	b	8e8 <ctf_dump_label+0x9c>
     8c8:	bl	0 <__errno_location>
     8cc:	ldr	w1, [x0]
     8d0:	mov	x0, x20
     8d4:	bl	0 <ctf_set_errno>
     8d8:	b	8e8 <ctf_dump_label+0x9c>
     8dc:	mov	x0, x8
     8e0:	bl	0 <free>
     8e4:	mov	w0, #0xffffffff            	// #-1
     8e8:	ldp	x20, x19, [sp, #32]
     8ec:	ldr	x21, [sp, #16]
     8f0:	ldp	x29, x30, [sp], #48
     8f4:	ret

00000000000008f8 <ctf_dump_var>:
     8f8:	stp	x29, x30, [sp, #-48]!
     8fc:	stp	x20, x19, [sp, #32]
     900:	mov	x29, sp
     904:	mov	x20, x1
     908:	adrp	x1, 0 <ctf_dump>
     90c:	mov	x19, x2
     910:	mov	x2, x0
     914:	add	x1, x1, #0x0
     918:	add	x0, x29, #0x18
     91c:	str	x21, [sp, #16]
     920:	bl	0 <asprintf>
     924:	ldr	x21, [x19, #8]
     928:	tbnz	w0, #31, 974 <ctf_dump_var+0x7c>
     92c:	mov	w2, #0x1                   	// #1
     930:	mov	x0, x21
     934:	mov	x1, x20
     938:	bl	bf4 <ctf_dump_format_type>
     93c:	ldr	x8, [x29, #24]
     940:	cbz	x0, 988 <ctf_dump_var+0x90>
     944:	mov	x20, x0
     948:	mov	x0, x8
     94c:	mov	x1, x20
     950:	bl	0 <ctf_str_append_noerr>
     954:	str	x0, [x29, #24]
     958:	mov	x0, x20
     95c:	bl	0 <free>
     960:	ldr	x1, [x29, #24]
     964:	mov	x0, x19
     968:	bl	abc <ctf_dump_append>
     96c:	mov	w0, wzr
     970:	b	994 <ctf_dump_var+0x9c>
     974:	bl	0 <__errno_location>
     978:	ldr	w1, [x0]
     97c:	mov	x0, x21
     980:	bl	0 <ctf_set_errno>
     984:	b	994 <ctf_dump_var+0x9c>
     988:	mov	x0, x8
     98c:	bl	0 <free>
     990:	mov	w0, #0xffffffff            	// #-1
     994:	ldp	x20, x19, [sp, #32]
     998:	ldr	x21, [sp, #16]
     99c:	ldp	x29, x30, [sp], #48
     9a0:	ret

00000000000009a4 <ctf_dump_type>:
     9a4:	sub	sp, sp, #0x40
     9a8:	stp	x29, x30, [sp, #16]
     9ac:	stp	x20, x19, [sp, #48]
     9b0:	mov	x19, x2
     9b4:	mov	x20, x0
     9b8:	ldr	x0, [x19, #8]
     9bc:	add	x29, sp, #0x10
     9c0:	mov	w2, w1
     9c4:	add	x8, x29, #0x18
     9c8:	mov	x1, x20
     9cc:	str	x21, [sp, #32]
     9d0:	stp	x8, x0, [sp]
     9d4:	bl	bf4 <ctf_dump_format_type>
     9d8:	str	x0, [x29, #24]
     9dc:	cbz	x0, a3c <ctf_dump_type+0x98>
     9e0:	adrp	x1, 0 <ctf_dump>
     9e4:	add	x1, x1, #0x0
     9e8:	bl	0 <ctf_str_append_noerr>
     9ec:	str	x0, [x29, #24]
     9f0:	ldr	x0, [x19, #8]
     9f4:	adrp	x2, 0 <ctf_dump>
     9f8:	add	x2, x2, #0x0
     9fc:	mov	x3, sp
     a00:	mov	x1, x20
     a04:	bl	0 <ctf_type_visit>
     a08:	tbnz	w0, #31, a78 <ctf_dump_type+0xd4>
     a0c:	ldr	x20, [x29, #24]
     a10:	mov	x0, x20
     a14:	bl	0 <strlen>
     a18:	sub	x8, x0, #0x1
     a1c:	ldrb	w9, [x20, x8]
     a20:	cmp	w9, #0xa
     a24:	b.ne	a30 <ctf_dump_type+0x8c>  // b.any
     a28:	strb	wzr, [x20, x8]
     a2c:	ldr	x20, [x29, #24]
     a30:	mov	x0, x19
     a34:	mov	x1, x20
     a38:	b	a94 <ctf_dump_type+0xf0>
     a3c:	adrp	x21, 0 <ctf_dump>
     a40:	add	x21, x21, #0x0
     a44:	ldr	x0, [x19, #8]
     a48:	bl	0 <ctf_errno>
     a4c:	bl	0 <ctf_errmsg>
     a50:	mov	x3, x0
     a54:	adrp	x0, 0 <ctf_dump>
     a58:	add	x0, x0, #0x0
     a5c:	mov	x1, x21
     a60:	mov	x2, x20
     a64:	bl	0 <ctf_dprintf>
     a68:	ldr	x0, [x29, #24]
     a6c:	bl	0 <free>
     a70:	mov	w0, #0xffffffff            	// #-1
     a74:	b	a9c <ctf_dump_type+0xf8>
     a78:	cbz	x20, a8c <ctf_dump_type+0xe8>
     a7c:	ldr	x0, [x19, #8]
     a80:	bl	0 <ctf_errno>
     a84:	cmp	w0, #0x41b
     a88:	b.ne	ab0 <ctf_dump_type+0x10c>  // b.any
     a8c:	ldr	x1, [x29, #24]
     a90:	mov	x0, x19
     a94:	bl	abc <ctf_dump_append>
     a98:	mov	w0, wzr
     a9c:	ldp	x20, x19, [sp, #48]
     aa0:	ldr	x21, [sp, #32]
     aa4:	ldp	x29, x30, [sp, #16]
     aa8:	add	sp, sp, #0x40
     aac:	ret
     ab0:	adrp	x21, 0 <ctf_dump>
     ab4:	add	x21, x21, #0x0
     ab8:	b	a44 <ctf_dump_type+0xa0>

0000000000000abc <ctf_dump_append>:
     abc:	stp	x29, x30, [sp, #-32]!
     ac0:	stp	x20, x19, [sp, #16]
     ac4:	mov	x20, x0
     ac8:	mov	w0, #0x18                  	// #24
     acc:	mov	x29, sp
     ad0:	mov	x19, x1
     ad4:	bl	0 <malloc>
     ad8:	cbz	x0, af4 <ctf_dump_append+0x38>
     adc:	mov	x1, x0
     ae0:	str	x19, [x1, #16]
     ae4:	add	x0, x20, #0x18
     ae8:	ldp	x20, x19, [sp, #16]
     aec:	ldp	x29, x30, [sp], #32
     af0:	b	0 <ctf_list_append>
     af4:	ldr	x0, [x20, #8]
     af8:	ldp	x20, x19, [sp, #16]
     afc:	mov	w1, #0xc                   	// #12
     b00:	ldp	x29, x30, [sp], #32
     b04:	b	0 <ctf_set_errno>

0000000000000b08 <ctf_dump_header_strfield>:
     b08:	stp	x29, x30, [sp, #-48]!
     b0c:	str	x21, [sp, #16]
     b10:	stp	x20, x19, [sp, #32]
     b14:	mov	x29, sp
     b18:	cbz	w3, b58 <ctf_dump_header_strfield+0x50>
     b1c:	mov	x20, x1
     b20:	mov	w1, w3
     b24:	mov	x21, x2
     b28:	mov	x19, x0
     b2c:	bl	0 <ctf_strptr>
     b30:	adrp	x1, 0 <ctf_dump>
     b34:	mov	x3, x0
     b38:	add	x1, x1, #0x0
     b3c:	add	x0, x29, #0x18
     b40:	mov	x2, x21
     b44:	bl	0 <asprintf>
     b48:	tbnz	w0, #31, b60 <ctf_dump_header_strfield+0x58>
     b4c:	ldr	x1, [x29, #24]
     b50:	mov	x0, x20
     b54:	bl	abc <ctf_dump_append>
     b58:	mov	w0, wzr
     b5c:	b	b70 <ctf_dump_header_strfield+0x68>
     b60:	bl	0 <__errno_location>
     b64:	ldr	w1, [x0]
     b68:	mov	x0, x19
     b6c:	bl	0 <ctf_set_errno>
     b70:	ldp	x20, x19, [sp, #32]
     b74:	ldr	x21, [sp, #16]
     b78:	ldp	x29, x30, [sp], #48
     b7c:	ret

0000000000000b80 <ctf_dump_header_sectfield>:
     b80:	sub	sp, sp, #0x30
     b84:	subs	w8, w4, w3
     b88:	stp	x29, x30, [sp, #16]
     b8c:	stp	x20, x19, [sp, #32]
     b90:	add	x29, sp, #0x10
     b94:	b.eq	bcc <ctf_dump_header_sectfield+0x4c>  // b.none
     b98:	mov	x20, x1
     b9c:	adrp	x1, 0 <ctf_dump>
     ba0:	mov	x19, x0
     ba4:	mov	w3, w3
     ba8:	sub	w4, w4, #0x1
     bac:	mov	w5, w8
     bb0:	add	x1, x1, #0x0
     bb4:	add	x0, sp, #0x8
     bb8:	bl	0 <asprintf>
     bbc:	tbnz	w0, #31, bd4 <ctf_dump_header_sectfield+0x54>
     bc0:	ldr	x1, [sp, #8]
     bc4:	mov	x0, x20
     bc8:	bl	abc <ctf_dump_append>
     bcc:	mov	w0, wzr
     bd0:	b	be4 <ctf_dump_header_sectfield+0x64>
     bd4:	bl	0 <__errno_location>
     bd8:	ldr	w1, [x0]
     bdc:	mov	x0, x19
     be0:	bl	0 <ctf_set_errno>
     be4:	ldp	x20, x19, [sp, #32]
     be8:	ldp	x29, x30, [sp, #16]
     bec:	add	sp, sp, #0x30
     bf0:	ret

0000000000000bf4 <ctf_dump_format_type>:
     bf4:	sub	sp, sp, #0x80
     bf8:	adrp	x8, 0 <ctf_dump>
     bfc:	adrp	x9, 0 <ctf_dump>
     c00:	adrp	x10, 0 <ctf_dump>
     c04:	stp	x29, x30, [sp, #32]
     c08:	add	x29, sp, #0x20
     c0c:	add	x8, x8, #0x0
     c10:	add	x9, x9, #0x0
     c14:	cmp	w2, #0x0
     c18:	add	x10, x10, #0x0
     c1c:	stp	x28, x27, [sp, #48]
     c20:	stp	x26, x25, [sp, #64]
     c24:	stp	x24, x23, [sp, #80]
     c28:	stp	x22, x21, [sp, #96]
     c2c:	stp	x20, x19, [sp, #112]
     c30:	mov	x20, x1
     c34:	mov	x19, x0
     c38:	stur	xzr, [x29, #-8]
     c3c:	csel	x22, x9, x8, eq  // eq = none
     c40:	csel	x23, x10, x8, eq  // eq = none
     c44:	bl	0 <ctf_type_aname>
     c48:	cbz	x0, d64 <ctf_dump_format_type+0x170>
     c4c:	adrp	x24, 0 <ctf_dump>
     c50:	adrp	x25, 0 <ctf_dump>
     c54:	adrp	x26, 0 <ctf_dump>
     c58:	mov	x27, x0
     c5c:	mov	x21, xzr
     c60:	add	x24, x24, #0x0
     c64:	add	x25, x25, #0x0
     c68:	add	x26, x26, #0x0
     c6c:	add	x2, sp, #0x8
     c70:	mov	x0, x19
     c74:	mov	x1, x20
     c78:	bl	e0c <ctf_is_slice>
     c7c:	cbz	w0, cb4 <ctf_dump_format_type+0xc0>
     c80:	add	x2, sp, #0x8
     c84:	mov	x0, x19
     c88:	mov	x1, x20
     c8c:	bl	0 <ctf_type_encoding>
     c90:	ldp	w4, w5, [sp, #12]
     c94:	sub	x0, x29, #0x8
     c98:	mov	x1, x26
     c9c:	mov	x2, x22
     ca0:	mov	x3, x20
     ca4:	mov	x6, x23
     ca8:	bl	0 <asprintf>
     cac:	tbz	w0, #31, cf8 <ctf_dump_format_type+0x104>
     cb0:	b	db0 <ctf_dump_format_type+0x1bc>
     cb4:	ldrb	w8, [x27]
     cb8:	mov	x0, x19
     cbc:	mov	x1, x20
     cc0:	cmp	w8, #0x0
     cc4:	adrp	x8, 0 <ctf_dump>
     cc8:	add	x8, x8, #0x0
     ccc:	csel	x28, x8, x27, eq  // eq = none
     cd0:	bl	0 <ctf_type_size>
     cd4:	mov	x5, x0
     cd8:	sub	x0, x29, #0x8
     cdc:	mov	x1, x24
     ce0:	mov	x2, x22
     ce4:	mov	x3, x20
     ce8:	mov	x4, x28
     cec:	mov	x6, x23
     cf0:	bl	0 <asprintf>
     cf4:	tbnz	w0, #31, db0 <ctf_dump_format_type+0x1bc>
     cf8:	mov	x0, x27
     cfc:	bl	0 <free>
     d00:	ldur	x1, [x29, #-8]
     d04:	mov	x0, x21
     d08:	bl	0 <ctf_str_append_noerr>
     d0c:	ldur	x8, [x29, #-8]
     d10:	mov	x21, x0
     d14:	mov	x0, x8
     d18:	bl	0 <free>
     d1c:	mov	x0, x19
     d20:	mov	x1, x20
     d24:	stur	xzr, [x29, #-8]
     d28:	bl	0 <ctf_type_reference>
     d2c:	cmn	x0, #0x1
     d30:	b.eq	d9c <ctf_dump_format_type+0x1a8>  // b.none
     d34:	mov	x20, x0
     d38:	mov	x0, x21
     d3c:	mov	x1, x25
     d40:	bl	0 <ctf_str_append_noerr>
     d44:	mov	x21, x0
     d48:	mov	x0, x19
     d4c:	mov	x1, x20
     d50:	bl	0 <ctf_type_aname>
     d54:	mov	x27, x0
     d58:	cbnz	x0, c6c <ctf_dump_format_type+0x78>
     d5c:	cbnz	x20, d6c <ctf_dump_format_type+0x178>
     d60:	b	d7c <ctf_dump_format_type+0x188>
     d64:	mov	x21, xzr
     d68:	cbz	x20, d7c <ctf_dump_format_type+0x188>
     d6c:	mov	x0, x19
     d70:	bl	0 <ctf_errno>
     d74:	cmp	w0, #0x41b
     d78:	b.ne	dc4 <ctf_dump_format_type+0x1d0>  // b.any
     d7c:	adrp	x1, 0 <ctf_dump>
     d80:	add	x1, x1, #0x0
     d84:	mov	x0, x21
     d88:	bl	0 <ctf_str_append_noerr>
     d8c:	mov	x21, x0
     d90:	mov	w1, #0x400                 	// #1024
     d94:	mov	x0, x19
     d98:	bl	0 <ctf_set_errno>
     d9c:	mov	x0, x19
     da0:	bl	0 <ctf_errno>
     da4:	cmp	w0, #0x400
     da8:	b.ne	ddc <ctf_dump_format_type+0x1e8>  // b.any
     dac:	b	de8 <ctf_dump_format_type+0x1f4>
     db0:	bl	0 <__errno_location>
     db4:	ldr	w1, [x0]
     db8:	mov	x0, x19
     dbc:	bl	0 <ctf_set_errno>
     dc0:	b	dc8 <ctf_dump_format_type+0x1d4>
     dc4:	mov	x27, xzr
     dc8:	mov	x0, x27
     dcc:	bl	0 <free>
     dd0:	mov	x0, x21
     dd4:	bl	0 <free>
     dd8:	ldur	x21, [x29, #-8]
     ddc:	mov	x0, x21
     de0:	bl	0 <free>
     de4:	mov	x21, xzr
     de8:	mov	x0, x21
     dec:	ldp	x20, x19, [sp, #112]
     df0:	ldp	x22, x21, [sp, #96]
     df4:	ldp	x24, x23, [sp, #80]
     df8:	ldp	x26, x25, [sp, #64]
     dfc:	ldp	x28, x27, [sp, #48]
     e00:	ldp	x29, x30, [sp, #32]
     e04:	add	sp, sp, #0x80
     e08:	ret

0000000000000e0c <ctf_is_slice>:
     e0c:	stp	x29, x30, [sp, #-48]!
     e10:	str	x21, [sp, #16]
     e14:	stp	x20, x19, [sp, #32]
     e18:	mov	x29, sp
     e1c:	mov	x19, x2
     e20:	mov	x20, x1
     e24:	mov	x21, x0
     e28:	bl	0 <ctf_type_kind>
     e2c:	mov	w8, w0
     e30:	cmp	w0, #0x8
     e34:	mov	w0, wzr
     e38:	b.hi	e84 <ctf_is_slice+0x78>  // b.pmore
     e3c:	mov	w9, #0x1                   	// #1
     e40:	lsl	w8, w9, w8
     e44:	mov	w9, #0x106                 	// #262
     e48:	tst	w8, w9
     e4c:	b.eq	e84 <ctf_is_slice+0x78>  // b.none
     e50:	mov	x0, x21
     e54:	mov	x1, x20
     e58:	bl	0 <ctf_type_reference>
     e5c:	cmn	x0, #0x1
     e60:	b.eq	e80 <ctf_is_slice+0x74>  // b.none
     e64:	mov	x0, x21
     e68:	mov	x1, x20
     e6c:	mov	x2, x19
     e70:	bl	0 <ctf_type_encoding>
     e74:	cmp	w0, #0x0
     e78:	cset	w0, eq  // eq = none
     e7c:	b	e84 <ctf_is_slice+0x78>
     e80:	mov	w0, wzr
     e84:	ldp	x20, x19, [sp, #32]
     e88:	ldr	x21, [sp, #16]
     e8c:	ldp	x29, x30, [sp], #48
     e90:	ret

0000000000000e94 <ctf_dump_member>:
     e94:	sub	sp, sp, #0x60
     e98:	stp	x29, x30, [sp, #32]
     e9c:	stp	x22, x21, [sp, #64]
     ea0:	stp	x20, x19, [sp, #80]
     ea4:	add	x29, sp, #0x20
     ea8:	mov	x19, x4
     eac:	mov	x21, x2
     eb0:	mov	x20, x1
     eb4:	mov	x22, x0
     eb8:	cmp	w3, #0x1
     ebc:	stp	x24, x23, [sp, #48]
     ec0:	stur	xzr, [x29, #-8]
     ec4:	b.lt	ef4 <ctf_dump_member+0x60>  // b.tstop
     ec8:	adrp	x23, 0 <ctf_dump>
     ecc:	sxtw	x24, w3
     ed0:	add	x23, x23, #0x0
     ed4:	ldr	x8, [x19]
     ed8:	mov	x1, x23
     edc:	ldr	x0, [x8]
     ee0:	bl	0 <ctf_str_append_noerr>
     ee4:	ldr	x8, [x19]
     ee8:	subs	x24, x24, #0x1
     eec:	str	x0, [x8]
     ef0:	b.ne	ed4 <ctf_dump_member+0x40>  // b.any
     ef4:	ldr	x0, [x19, #8]
     ef8:	mov	x1, x20
     efc:	bl	0 <ctf_type_aname>
     f00:	cbz	x0, 1038 <ctf_dump_member+0x1a4>
     f04:	mov	x23, x0
     f08:	ldr	x0, [x19, #8]
     f0c:	mov	x1, x20
     f10:	bl	0 <ctf_type_kind>
     f14:	ldr	x8, [x19, #8]
     f18:	mov	w24, w0
     f1c:	mov	x1, x20
     f20:	mov	x0, x8
     f24:	bl	0 <ctf_type_align>
     f28:	adrp	x1, 0 <ctf_dump>
     f2c:	mov	x7, x0
     f30:	add	x1, x1, #0x0
     f34:	sub	x0, x29, #0x8
     f38:	mov	x2, x21
     f3c:	mov	x3, x20
     f40:	mov	w4, w24
     f44:	mov	x5, x23
     f48:	mov	x6, x22
     f4c:	bl	0 <asprintf>
     f50:	tbnz	w0, #31, 1090 <ctf_dump_member+0x1fc>
     f54:	ldr	x8, [x19]
     f58:	ldur	x1, [x29, #-8]
     f5c:	ldr	x0, [x8]
     f60:	bl	0 <ctf_str_append_noerr>
     f64:	ldr	x8, [x19]
     f68:	str	x0, [x8]
     f6c:	mov	x0, x23
     f70:	bl	0 <free>
     f74:	ldur	x0, [x29, #-8]
     f78:	bl	0 <free>
     f7c:	stur	xzr, [x29, #-8]
     f80:	ldr	x0, [x19, #8]
     f84:	mov	x1, x20
     f88:	bl	0 <ctf_type_kind>
     f8c:	cmp	w0, #0x1
     f90:	b.eq	fc0 <ctf_dump_member+0x12c>  // b.none
     f94:	ldr	x0, [x19, #8]
     f98:	mov	x1, x20
     f9c:	bl	0 <ctf_type_kind>
     fa0:	cmp	w0, #0x2
     fa4:	b.eq	fc0 <ctf_dump_member+0x12c>  // b.none
     fa8:	ldr	x0, [x19, #8]
     fac:	add	x2, sp, #0x8
     fb0:	mov	x1, x20
     fb4:	bl	e0c <ctf_is_slice>
     fb8:	cmp	w0, #0x8
     fbc:	b.ne	1010 <ctf_dump_member+0x17c>  // b.any
     fc0:	ldr	x0, [x19, #8]
     fc4:	add	x2, sp, #0x8
     fc8:	mov	x1, x20
     fcc:	bl	0 <ctf_type_encoding>
     fd0:	ldp	w2, w3, [sp, #8]
     fd4:	ldr	w4, [sp, #16]
     fd8:	adrp	x1, 0 <ctf_dump>
     fdc:	add	x1, x1, #0x0
     fe0:	sub	x0, x29, #0x8
     fe4:	bl	0 <asprintf>
     fe8:	tbnz	w0, #31, 108c <ctf_dump_member+0x1f8>
     fec:	ldr	x8, [x19]
     ff0:	ldur	x1, [x29, #-8]
     ff4:	ldr	x0, [x8]
     ff8:	bl	0 <ctf_str_append_noerr>
     ffc:	ldr	x8, [x19]
    1000:	str	x0, [x8]
    1004:	ldur	x0, [x29, #-8]
    1008:	bl	0 <free>
    100c:	stur	xzr, [x29, #-8]
    1010:	ldr	x8, [x19]
    1014:	adrp	x1, 0 <ctf_dump>
    1018:	add	x1, x1, #0x0
    101c:	ldr	x0, [x8]
    1020:	bl	0 <ctf_str_append_noerr>
    1024:	ldr	x9, [x19]
    1028:	mov	x8, x0
    102c:	mov	w0, wzr
    1030:	str	x8, [x9]
    1034:	b	10b4 <ctf_dump_member+0x220>
    1038:	cbz	x20, 104c <ctf_dump_member+0x1b8>
    103c:	ldr	x0, [x19, #8]
    1040:	bl	0 <ctf_errno>
    1044:	cmp	w0, #0x41b
    1048:	b.ne	108c <ctf_dump_member+0x1f8>  // b.any
    104c:	adrp	x1, 0 <ctf_dump>
    1050:	add	x1, x1, #0x0
    1054:	sub	x0, x29, #0x8
    1058:	mov	x2, x21
    105c:	bl	0 <asprintf>
    1060:	tbnz	w0, #31, 108c <ctf_dump_member+0x1f8>
    1064:	ldr	x8, [x19]
    1068:	ldur	x1, [x29, #-8]
    106c:	ldr	x0, [x8]
    1070:	bl	0 <ctf_str_append_noerr>
    1074:	ldr	x8, [x19]
    1078:	str	x0, [x8]
    107c:	ldur	x0, [x29, #-8]
    1080:	bl	0 <free>
    1084:	mov	w0, wzr
    1088:	b	10b4 <ctf_dump_member+0x220>
    108c:	mov	x23, xzr
    1090:	mov	x0, x23
    1094:	bl	0 <free>
    1098:	ldur	x0, [x29, #-8]
    109c:	bl	0 <free>
    10a0:	ldr	x19, [x19, #8]
    10a4:	bl	0 <__errno_location>
    10a8:	ldr	w1, [x0]
    10ac:	mov	x0, x19
    10b0:	bl	0 <ctf_set_errno>
    10b4:	ldp	x20, x19, [sp, #80]
    10b8:	ldp	x22, x21, [sp, #64]
    10bc:	ldp	x24, x23, [sp, #48]
    10c0:	ldp	x29, x30, [sp, #32]
    10c4:	add	sp, sp, #0x60
    10c8:	ret

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_create>:
       0:	sub	sp, sp, #0x70
       4:	stp	x29, x30, [sp, #32]
       8:	stp	x26, x25, [sp, #48]
       c:	stp	x24, x23, [sp, #64]
      10:	stp	x22, x21, [sp, #80]
      14:	stp	x20, x19, [sp, #96]
      18:	add	x29, sp, #0x20
      1c:	mov	x19, x0
      20:	bl	0 <libctf_init_debug>
      24:	adrp	x0, 0 <ctf_hash_integer>
      28:	adrp	x1, 0 <ctf_hash_eq_integer>
      2c:	add	x0, x0, #0x0
      30:	add	x1, x1, #0x0
      34:	mov	x2, xzr
      38:	mov	x3, xzr
      3c:	bl	0 <ctf_dynhash_create>
      40:	cbz	x0, 198 <ctf_create+0x198>
      44:	mov	x20, x0
      48:	adrp	x0, 0 <ctf_hash_string>
      4c:	adrp	x1, 0 <ctf_hash_eq_string>
      50:	add	x0, x0, #0x0
      54:	add	x1, x1, #0x0
      58:	mov	x2, xzr
      5c:	mov	x3, xzr
      60:	bl	0 <ctf_dynhash_create>
      64:	cbz	x0, 1a8 <ctf_create+0x1a8>
      68:	adrp	x25, 0 <ctf_hash_string>
      6c:	adrp	x26, 0 <ctf_hash_eq_string>
      70:	add	x25, x25, #0x0
      74:	add	x26, x26, #0x0
      78:	mov	x21, x0
      7c:	mov	x0, x25
      80:	mov	x1, x26
      84:	mov	x2, xzr
      88:	mov	x3, xzr
      8c:	bl	0 <ctf_dynhash_create>
      90:	mov	x22, x0
      94:	mov	x0, x25
      98:	mov	x1, x26
      9c:	mov	x2, xzr
      a0:	mov	x3, xzr
      a4:	bl	0 <ctf_dynhash_create>
      a8:	mov	x23, x0
      ac:	mov	x0, x25
      b0:	mov	x1, x26
      b4:	mov	x2, xzr
      b8:	mov	x3, xzr
      bc:	bl	0 <ctf_dynhash_create>
      c0:	mov	x24, x0
      c4:	mov	x0, x25
      c8:	mov	x1, x26
      cc:	mov	x2, xzr
      d0:	mov	x3, xzr
      d4:	bl	0 <ctf_dynhash_create>
      d8:	mov	x25, x0
      dc:	cbz	x22, 1b8 <ctf_create+0x1b8>
      e0:	cbz	x23, 1b8 <ctf_create+0x1b8>
      e4:	cbz	x24, 1b8 <ctf_create+0x1b8>
      e8:	cbz	x25, 1b8 <ctf_create+0x1b8>
      ec:	adrp	x9, 0 <ctf_create>
      f0:	ldr	q0, [x9]
      f4:	adrp	x8, 0 <_CTF_SECTION>
      f8:	adrp	x9, 0 <ctf_create>
      fc:	add	x8, x8, #0x0
     100:	add	x9, x9, #0x0
     104:	mov	x0, sp
     108:	mov	w4, #0x1                   	// #1
     10c:	mov	x1, xzr
     110:	mov	x2, xzr
     114:	mov	x3, xzr
     118:	mov	x5, x19
     11c:	stp	x8, x9, [sp]
     120:	str	q0, [sp, #16]
     124:	bl	0 <ctf_bufopen_internal>
     128:	cbz	x0, 1c4 <ctf_create+0x1c4>
     12c:	adrp	x8, 0 <ctf_create>
     130:	ldr	q0, [x8]
     134:	add	x8, x0, #0x268
     138:	mov	x26, x0
     13c:	str	x22, [x0, #160]
     140:	str	x23, [x0, #176]
     144:	str	x24, [x0, #192]
     148:	str	x25, [x0, #208]
     14c:	str	x20, [x0, #568]
     150:	str	x21, [x0, #592]
     154:	str	q0, [x8]
     158:	str	xzr, [x0, #632]
     15c:	bl	0 <ctf_set_ctl_hashes>
     160:	mov	w1, #0x2                   	// #2
     164:	mov	x0, x26
     168:	bl	0 <ctf_setmodel>
     16c:	mov	x0, x26
     170:	bl	218 <ctf_grow_ptrtab>
     174:	tbz	w0, #31, 1f8 <ctf_create+0x1f8>
     178:	mov	x0, x26
     17c:	bl	0 <ctf_errno>
     180:	mov	w1, w0
     184:	mov	x0, x19
     188:	bl	0 <ctf_set_open_errno>
     18c:	mov	x0, x26
     190:	bl	0 <ctf_file_close>
     194:	b	1f4 <ctf_create+0x1f4>
     198:	mov	w1, #0xb                   	// #11
     19c:	mov	x0, x19
     1a0:	bl	0 <ctf_set_open_errno>
     1a4:	b	1f4 <ctf_create+0x1f4>
     1a8:	mov	w1, #0xb                   	// #11
     1ac:	mov	x0, x19
     1b0:	bl	0 <ctf_set_open_errno>
     1b4:	b	1ec <ctf_create+0x1ec>
     1b8:	mov	w1, #0xb                   	// #11
     1bc:	mov	x0, x19
     1c0:	bl	0 <ctf_set_open_errno>
     1c4:	mov	x0, x22
     1c8:	bl	0 <ctf_dynhash_destroy>
     1cc:	mov	x0, x23
     1d0:	bl	0 <ctf_dynhash_destroy>
     1d4:	mov	x0, x24
     1d8:	bl	0 <ctf_dynhash_destroy>
     1dc:	mov	x0, x25
     1e0:	bl	0 <ctf_dynhash_destroy>
     1e4:	mov	x0, x21
     1e8:	bl	0 <ctf_dynhash_destroy>
     1ec:	mov	x0, x20
     1f0:	bl	0 <ctf_dynhash_destroy>
     1f4:	mov	x26, xzr
     1f8:	mov	x0, x26
     1fc:	ldp	x20, x19, [sp, #96]
     200:	ldp	x22, x21, [sp, #80]
     204:	ldp	x24, x23, [sp, #64]
     208:	ldp	x26, x25, [sp, #48]
     20c:	ldp	x29, x30, [sp, #32]
     210:	add	sp, sp, #0x70
     214:	ret

0000000000000218 <ctf_grow_ptrtab>:
     218:	stp	x29, x30, [sp, #-32]!
     21c:	stp	x20, x19, [sp, #16]
     220:	mov	x19, x0
     224:	ldr	x0, [x0, #448]
     228:	ldr	x8, [x19, #456]
     22c:	mov	x29, sp
     230:	cbz	x0, 258 <ctf_grow_ptrtab+0x40>
     234:	ldr	x9, [x19, #480]
     238:	add	x9, x9, #0x2
     23c:	cmp	x9, x8
     240:	b.ls	264 <ctf_grow_ptrtab+0x4c>  // b.plast
     244:	ucvtf	d0, x8
     248:	fmov	d1, #1.250000000000000000e+00
     24c:	fmul	d0, d0, d1
     250:	fcvtzu	x20, d0
     254:	b	25c <ctf_grow_ptrtab+0x44>
     258:	mov	w20, #0x400                 	// #1024
     25c:	cmp	x20, x8
     260:	b.ne	26c <ctf_grow_ptrtab+0x54>  // b.any
     264:	mov	w0, wzr
     268:	b	2ac <ctf_grow_ptrtab+0x94>
     26c:	lsl	x1, x20, #2
     270:	bl	0 <realloc>
     274:	cbz	x0, 2a0 <ctf_grow_ptrtab+0x88>
     278:	ldr	x8, [x19, #456]
     27c:	str	x0, [x19, #448]
     280:	mov	w1, wzr
     284:	add	x0, x0, x8, lsl #2
     288:	sub	x8, x20, x8
     28c:	lsl	x2, x8, #2
     290:	bl	0 <memset>
     294:	mov	w0, wzr
     298:	str	x20, [x19, #456]
     29c:	b	2ac <ctf_grow_ptrtab+0x94>
     2a0:	mov	w1, #0xc                   	// #12
     2a4:	mov	x0, x19
     2a8:	bl	0 <ctf_set_errno>
     2ac:	ldp	x20, x19, [sp, #16]
     2b0:	ldp	x29, x30, [sp], #32
     2b4:	ret

00000000000002b8 <ctf_update>:
     2b8:	stp	x29, x30, [sp, #-16]!
     2bc:	ldrb	w9, [x0, #552]
     2c0:	mov	x8, x0
     2c4:	mov	x29, sp
     2c8:	tbnz	w9, #1, 2dc <ctf_update+0x24>
     2cc:	mov	w1, #0x40d                 	// #1037
     2d0:	mov	x0, x8
     2d4:	bl	0 <ctf_set_errno>
     2d8:	b	2e8 <ctf_update+0x30>
     2dc:	ldr	x9, [x8, #480]
     2e0:	mov	w0, wzr
     2e4:	str	x9, [x8, #616]
     2e8:	ldp	x29, x30, [sp], #16
     2ec:	ret

00000000000002f0 <ctf_serialize>:
     2f0:	stp	x29, x30, [sp, #-96]!
     2f4:	stp	x28, x27, [sp, #16]
     2f8:	stp	x26, x25, [sp, #32]
     2fc:	stp	x24, x23, [sp, #48]
     300:	stp	x22, x21, [sp, #64]
     304:	stp	x20, x19, [sp, #80]
     308:	mov	x29, sp
     30c:	sub	sp, sp, #0x370
     310:	ldr	w8, [x0, #552]
     314:	mov	x19, x0
     318:	tbnz	w8, #1, 324 <ctf_serialize+0x34>
     31c:	mov	w1, #0x40d                 	// #1037
     320:	b	968 <ctf_serialize+0x678>
     324:	tbnz	w8, #2, 330 <ctf_serialize+0x40>
     328:	mov	w0, wzr
     32c:	b	970 <ctf_serialize+0x680>
     330:	movi	v0.2d, #0x0
     334:	strb	wzr, [sp, #128]
     338:	stp	q0, q0, [sp, #96]
     33c:	ldr	x21, [x19, #584]
     340:	cbz	x21, 400 <ctf_serialize+0x110>
     344:	adrp	x25, 0 <ctf_create>
     348:	mov	x22, xzr
     34c:	mov	w23, #0xc                   	// #12
     350:	mov	w24, #0x14                  	// #20
     354:	add	x25, x25, #0x0
     358:	ldr	x8, [x19]
     35c:	ldr	w0, [x21, #28]
     360:	ldr	x8, [x8]
     364:	blr	x8
     368:	ldr	x8, [x19]
     36c:	mov	w20, w0
     370:	ldr	x9, [x8, #16]
     374:	ldr	w8, [x21, #28]
     378:	mov	w0, w8
     37c:	blr	x9
     380:	ldr	w8, [x21, #32]
     384:	sub	w9, w20, #0x1
     388:	cmn	w8, #0x1
     38c:	csel	x10, x24, x23, eq  // eq = none
     390:	cmp	w9, #0xd
     394:	add	x22, x10, x22
     398:	b.hi	3f4 <ctf_serialize+0x104>  // b.pmore
     39c:	adr	x10, 3ac <ctf_serialize+0xbc>
     3a0:	ldrb	w11, [x25, x9]
     3a4:	add	x10, x10, x11, lsl #2
     3a8:	br	x10
     3ac:	add	x22, x22, #0x4
     3b0:	b	3f4 <ctf_serialize+0x104>
     3b4:	lsr	w9, w8, #29
     3b8:	mov	w8, w0
     3bc:	cbnz	w9, 3e0 <ctf_serialize+0xf0>
     3c0:	madd	x22, x8, x23, x22
     3c4:	b	3f4 <ctf_serialize+0x104>
     3c8:	add	x22, x22, w0, uxtw #3
     3cc:	b	3f4 <ctf_serialize+0x104>
     3d0:	add	x22, x22, #0x8
     3d4:	b	3f4 <ctf_serialize+0x104>
     3d8:	add	x22, x22, #0xc
     3dc:	b	3f4 <ctf_serialize+0x104>
     3e0:	add	x22, x22, x8, lsl #4
     3e4:	b	3f4 <ctf_serialize+0x104>
     3e8:	and	w8, w0, #0x1
     3ec:	add	w8, w8, w0
     3f0:	add	x22, x22, w8, uxtw #2
     3f4:	ldr	x21, [x21, #8]
     3f8:	cbnz	x21, 358 <ctf_serialize+0x68>
     3fc:	b	404 <ctf_serialize+0x114>
     400:	mov	x22, xzr
     404:	ldr	x8, [x19, #608]
     408:	cbz	x8, 420 <ctf_serialize+0x130>
     40c:	mov	x21, xzr
     410:	ldr	x8, [x8, #8]
     414:	add	x21, x21, #0x1
     418:	cbnz	x8, 410 <ctf_serialize+0x120>
     41c:	b	424 <ctf_serialize+0x134>
     420:	mov	x21, xzr
     424:	add	x20, x22, x21, lsl #3
     428:	and	x22, x20, #0xffffffff
     42c:	add	x23, x22, #0x34
     430:	mov	x0, x23
     434:	bl	0 <malloc>
     438:	cbz	x0, 964 <ctf_serialize+0x674>
     43c:	mov	w8, #0xdff2                	// #57330
     440:	strh	w8, [x0]
     444:	mov	w8, #0x4                   	// #4
     448:	strb	w8, [x0, #2]
     44c:	ldrb	w8, [sp, #128]
     450:	ldp	q0, q1, [sp, #96]
     454:	str	x22, [sp, #32]
     458:	lsl	x22, x21, #3
     45c:	stp	wzr, w22, [x0, #36]
     460:	strb	w8, [x0, #35]
     464:	stur	q1, [x0, #19]
     468:	stur	q0, [x0, #3]
     46c:	stp	w20, wzr, [x0, #44]
     470:	ldrb	w8, [x19, #552]
     474:	mov	x25, x0
     478:	tbz	w8, #0, 490 <ctf_serialize+0x1a0>
     47c:	ldr	x1, [x19, #528]
     480:	cbz	x1, 490 <ctf_serialize+0x1a0>
     484:	add	x2, x25, #0x8
     488:	mov	x0, x19
     48c:	bl	0 <ctf_str_add_ref>
     490:	ldr	x1, [x19, #496]
     494:	add	x8, x25, #0x34
     498:	str	x8, [sp, #48]
     49c:	cbz	x1, 4ac <ctf_serialize+0x1bc>
     4a0:	add	x2, x25, #0xc
     4a4:	mov	x0, x19
     4a8:	bl	0 <ctf_str_add_ref>
     4ac:	str	x23, [sp, #24]
     4b0:	ldr	x23, [x19, #608]
     4b4:	cbz	x23, 4ec <ctf_serialize+0x1fc>
     4b8:	ldr	x24, [sp, #48]
     4bc:	mov	x20, xzr
     4c0:	ldr	x1, [x23, #16]
     4c4:	mov	x0, x19
     4c8:	mov	x2, x24
     4cc:	bl	0 <ctf_str_add_ref>
     4d0:	ldr	x8, [x23, #24]
     4d4:	add	x20, x20, #0x1
     4d8:	str	w8, [x24, #4]
     4dc:	ldr	x23, [x23, #8]
     4e0:	add	x24, x24, #0x8
     4e4:	cbnz	x23, 4c0 <ctf_serialize+0x1d0>
     4e8:	b	4f0 <ctf_serialize+0x200>
     4ec:	mov	x20, xzr
     4f0:	cmp	x20, x21
     4f4:	b.ne	9a0 <ctf_serialize+0x6b0>  // b.any
     4f8:	and	x8, x22, #0xfffffff8
     4fc:	cmp	x22, x8
     500:	b.ne	9c0 <ctf_serialize+0x6d0>  // b.any
     504:	ldr	x8, [sp, #48]
     508:	ldr	x20, [x19, #584]
     50c:	str	x25, [sp, #40]
     510:	add	x24, x8, x22
     514:	cbz	x20, 6d8 <ctf_serialize+0x3e8>
     518:	mov	w23, #0xc                   	// #12
     51c:	mov	w22, #0x14                  	// #20
     520:	ldr	x8, [x19]
     524:	ldr	w0, [x20, #28]
     528:	add	x28, x20, #0x18
     52c:	ldr	x8, [x8]
     530:	blr	x8
     534:	ldr	x8, [x19]
     538:	mov	w26, w0
     53c:	ldr	x9, [x8, #16]
     540:	ldr	w8, [x20, #28]
     544:	mov	w0, w8
     548:	blr	x9
     54c:	ldr	w8, [x20, #32]
     550:	mov	w25, w0
     554:	mov	x0, x24
     558:	mov	x1, x28
     55c:	cmn	w8, #0x1
     560:	csel	x27, x22, x23, eq  // eq = none
     564:	mov	x2, x27
     568:	bl	0 <memcpy>
     56c:	ldr	w1, [x24]
     570:	cbz	w1, 590 <ctf_serialize+0x2a0>
     574:	mov	x0, x19
     578:	bl	0 <ctf_strraw>
     57c:	cbz	x0, 590 <ctf_serialize+0x2a0>
     580:	mov	x1, x0
     584:	mov	x0, x19
     588:	mov	x2, x24
     58c:	bl	0 <ctf_str_add_ref>
     590:	sub	w8, w26, #0x1
     594:	cmp	w8, #0xd
     598:	add	x24, x24, x27
     59c:	b.hi	6d0 <ctf_serialize+0x3e0>  // b.pmore
     5a0:	adrp	x11, 0 <ctf_create>
     5a4:	add	x11, x11, #0x0
     5a8:	adr	x9, 5b8 <ctf_serialize+0x2c8>
     5ac:	ldrb	w10, [x11, x8]
     5b0:	add	x9, x9, x10, lsl #2
     5b4:	br	x9
     5b8:	ldp	w9, w8, [x20, #48]
     5bc:	ldr	w10, [x20, #56]
     5c0:	lsl	w8, w8, #16
     5c4:	orr	w8, w8, w9, lsl #24
     5c8:	orr	w8, w8, w10
     5cc:	str	w8, [x24], #4
     5d0:	b	6d0 <ctf_serialize+0x3e0>
     5d4:	ldr	w8, [x20, #32]
     5d8:	ldr	x25, [x20, #56]
     5dc:	lsr	w8, w8, #29
     5e0:	cbnz	w8, 618 <ctf_serialize+0x328>
     5e4:	cbz	x25, 6d0 <ctf_serialize+0x3e0>
     5e8:	ldp	x9, x8, [x25, #24]
     5ec:	stp	wzr, w8, [x24]
     5f0:	str	w9, [x24, #8]
     5f4:	ldr	x1, [x25, #16]
     5f8:	cbz	x1, 608 <ctf_serialize+0x318>
     5fc:	mov	x0, x19
     600:	mov	x2, x24
     604:	bl	0 <ctf_str_add_ref>
     608:	ldr	x25, [x25, #8]
     60c:	add	x24, x24, #0xc
     610:	cbnz	x25, 5e8 <ctf_serialize+0x2f8>
     614:	b	6d0 <ctf_serialize+0x3e0>
     618:	cbz	x25, 6d0 <ctf_serialize+0x3e0>
     61c:	ldp	x9, x8, [x25, #24]
     620:	lsr	x10, x8, #32
     624:	stp	wzr, w10, [x24]
     628:	stp	w9, w8, [x24, #8]
     62c:	ldr	x1, [x25, #16]
     630:	cbz	x1, 640 <ctf_serialize+0x350>
     634:	mov	x0, x19
     638:	mov	x2, x24
     63c:	bl	0 <ctf_str_add_ref>
     640:	ldr	x25, [x25, #8]
     644:	add	x24, x24, #0x10
     648:	b	618 <ctf_serialize+0x328>
     64c:	ldr	x25, [x20, #56]
     650:	cbz	x25, 6d0 <ctf_serialize+0x3e0>
     654:	ldr	w8, [x25, #40]
     658:	mov	x0, x19
     65c:	mov	x2, x24
     660:	str	w8, [x24, #4]
     664:	ldr	x1, [x25, #16]
     668:	bl	0 <ctf_str_add_ref>
     66c:	ldr	x25, [x25, #8]
     670:	add	x24, x24, #0x8
     674:	cbnz	x25, 654 <ctf_serialize+0x364>
     678:	b	6d0 <ctf_serialize+0x3e0>
     67c:	ldr	x8, [x20, #48]
     680:	str	x8, [x24], #8
     684:	b	6d0 <ctf_serialize+0x3e0>
     688:	ldr	q0, [x20, #48]
     68c:	ldr	w8, [x20, #64]
     690:	xtn	v0.2s, v0.2d
     694:	str	w8, [x24, #8]
     698:	str	d0, [x24], #12
     69c:	b	6d0 <ctf_serialize+0x3e0>
     6a0:	cbz	w25, 6d0 <ctf_serialize+0x3e0>
     6a4:	mov	w9, w25
     6a8:	mov	x8, xzr
     6ac:	lsl	x9, x9, #3
     6b0:	ldr	x10, [x20, #48]
     6b4:	ldr	x10, [x10, x8]
     6b8:	add	x8, x8, #0x8
     6bc:	cmp	x9, x8
     6c0:	str	w10, [x24], #4
     6c4:	b.ne	6b0 <ctf_serialize+0x3c0>  // b.any
     6c8:	tbz	w25, #0, 6d0 <ctf_serialize+0x3e0>
     6cc:	str	wzr, [x24], #4
     6d0:	ldr	x20, [x20, #8]
     6d4:	cbnz	x20, 520 <ctf_serialize+0x230>
     6d8:	ldr	x8, [sp, #32]
     6dc:	ldr	x9, [sp, #48]
     6e0:	add	x8, x9, x8
     6e4:	cmp	x24, x8
     6e8:	b.ne	9e0 <ctf_serialize+0x6f0>  // b.any
     6ec:	mov	x0, x19
     6f0:	bl	0 <ctf_str_write_strtab>
     6f4:	mov	x24, x0
     6f8:	stp	x0, x1, [sp, #80]
     6fc:	mov	x0, x19
     700:	bl	0 <ctf_str_purge_refs>
     704:	ldr	x22, [sp, #40]
     708:	cbz	x24, 94c <ctf_serialize+0x65c>
     70c:	ldr	x0, [sp, #48]
     710:	adrp	x3, 0 <ctf_create>
     714:	add	x8, sp, #0x50
     718:	add	x3, x3, #0x0
     71c:	add	x4, sp, #0x38
     720:	mov	w2, #0x8                   	// #8
     724:	mov	x1, x21
     728:	stp	x19, x8, [sp, #56]
     72c:	bl	0 <qsort_r>
     730:	ldr	x8, [sp, #88]
     734:	ldr	x20, [sp, #24]
     738:	mov	x0, x19
     73c:	mov	x1, x22
     740:	add	x2, x8, x20
     744:	bl	0 <ctf_realloc>
     748:	cbz	x0, 954 <ctf_serialize+0x664>
     74c:	ldp	x1, x2, [sp, #80]
     750:	mov	x21, x0
     754:	add	x0, x0, x20
     758:	bl	0 <memcpy>
     75c:	ldp	x0, x8, [sp, #80]
     760:	str	w8, [x21, #48]
     764:	add	x20, x20, w8, uxtw
     768:	bl	0 <free>
     76c:	ldr	x7, [x19, #128]
     770:	add	x8, sp, #0x4c
     774:	mov	w9, #0x1                   	// #1
     778:	mov	x0, x21
     77c:	mov	x1, x20
     780:	mov	x2, xzr
     784:	mov	x3, xzr
     788:	mov	x4, xzr
     78c:	mov	x5, xzr
     790:	mov	x6, xzr
     794:	str	x8, [sp, #8]
     798:	str	w9, [sp]
     79c:	bl	0 <ctf_simple_open_internal>
     7a0:	cbz	x0, 990 <ctf_serialize+0x6a0>
     7a4:	mov	x20, x0
     7a8:	add	x24, x0, #0x288
     7ac:	mov	x0, x19
     7b0:	add	x22, x19, #0x288
     7b4:	add	x23, x19, #0x240
     7b8:	add	x25, x19, #0x258
     7bc:	bl	0 <ctf_getmodel>
     7c0:	mov	w1, w0
     7c4:	mov	x0, x20
     7c8:	bl	0 <ctf_setmodel>
     7cc:	ldr	x1, [x19, #512]
     7d0:	mov	x0, x20
     7d4:	bl	0 <ctf_import>
     7d8:	ldr	w8, [x19, #548]
     7dc:	ldr	w9, [x20, #552]
     7e0:	ldr	x10, [x20, #400]
     7e4:	str	w8, [x20, #548]
     7e8:	ldr	w8, [x19, #552]
     7ec:	and	w8, w8, #0xfffffffb
     7f0:	orr	w8, w9, w8
     7f4:	str	w8, [x20, #552]
     7f8:	cbnz	x10, 800 <ctf_serialize+0x510>
     7fc:	str	x21, [x20, #400]
     800:	ldr	x8, [x19, #568]
     804:	add	x0, x20, #0xd8
     808:	add	x1, x19, #0xd8
     80c:	mov	w2, #0x78                  	// #120
     810:	str	x8, [x20, #568]
     814:	ldr	q0, [x23]
     818:	str	q0, [x20, #576]
     81c:	ldr	x8, [x19, #592]
     820:	str	x8, [x20, #592]
     824:	ldr	q0, [x25]
     828:	add	x8, x20, #0x258
     82c:	str	q0, [x8]
     830:	ldr	x8, [x19, #616]
     834:	str	x8, [x20, #616]
     838:	ldr	x8, [x19, #696]
     83c:	str	x8, [x20, #696]
     840:	ldr	x8, [x19, #624]
     844:	add	x8, x8, #0x1
     848:	str	x8, [x20, #624]
     84c:	ldr	x8, [x19, #720]
     850:	str	x8, [x20, #720]
     854:	ldr	q0, [x19, #448]
     858:	str	q0, [x20, #448]
     85c:	ldr	q0, [x22]
     860:	str	q0, [x24]
     864:	ldr	w8, [x19, #384]
     868:	str	w8, [x20, #384]
     86c:	ldr	x8, [x19, #128]
     870:	str	x8, [x20, #128]
     874:	ldr	q0, [x22, #16]
     878:	str	q0, [x24, #16]
     87c:	ldr	q0, [x22, #32]
     880:	str	q0, [x24, #32]
     884:	ldr	x8, [x19, #624]
     888:	str	x8, [x20, #632]
     88c:	bl	0 <memcpy>
     890:	ldur	q0, [x19, #152]
     894:	mov	x0, x20
     898:	stur	q0, [x20, #152]
     89c:	ldur	q0, [x19, #168]
     8a0:	stur	q0, [x20, #168]
     8a4:	ldur	q0, [x19, #184]
     8a8:	stur	q0, [x20, #184]
     8ac:	ldur	q0, [x19, #200]
     8b0:	stur	q0, [x20, #200]
     8b4:	str	xzr, [x19, #568]
     8b8:	bl	0 <ctf_str_free_atoms>
     8bc:	ldr	x8, [x19, #368]
     8c0:	movi	v0.2d, #0x0
     8c4:	add	x0, sp, #0x90
     8c8:	mov	w2, #0x2d8                 	// #728
     8cc:	str	x8, [x20, #368]
     8d0:	ldr	x8, [x19, #120]
     8d4:	mov	x1, x19
     8d8:	str	x8, [x20, #120]
     8dc:	str	xzr, [x19, #368]
     8e0:	str	xzr, [x19, #696]
     8e4:	str	xzr, [x19, #448]
     8e8:	str	xzr, [x19, #160]
     8ec:	str	xzr, [x19, #176]
     8f0:	str	xzr, [x19, #192]
     8f4:	stp	xzr, xzr, [x19, #120]
     8f8:	stp	q0, q0, [x19, #208]
     8fc:	stp	q0, q0, [x19, #240]
     900:	stp	q0, q0, [x19, #272]
     904:	stp	q0, q0, [x19, #304]
     908:	stp	q0, q0, [x23]
     90c:	str	xzr, [x23, #32]
     910:	stp	q0, q0, [x22]
     914:	bl	0 <memcpy>
     918:	mov	w2, #0x2d8                 	// #728
     91c:	mov	x0, x19
     920:	mov	x1, x20
     924:	bl	0 <memcpy>
     928:	add	x1, sp, #0x90
     92c:	mov	w2, #0x2d8                 	// #728
     930:	mov	x0, x20
     934:	bl	0 <memcpy>
     938:	mov	w8, #0x1                   	// #1
     93c:	mov	x0, x20
     940:	str	w8, [x20, #548]
     944:	bl	0 <ctf_file_close>
     948:	b	328 <ctf_serialize+0x38>
     94c:	mov	x0, x22
     950:	b	960 <ctf_serialize+0x670>
     954:	mov	x0, x22
     958:	bl	0 <free>
     95c:	ldr	x0, [sp, #80]
     960:	bl	0 <free>
     964:	mov	w1, #0xb                   	// #11
     968:	mov	x0, x19
     96c:	bl	0 <ctf_set_errno>
     970:	add	sp, sp, #0x370
     974:	ldp	x20, x19, [sp, #80]
     978:	ldp	x22, x21, [sp, #64]
     97c:	ldp	x24, x23, [sp, #48]
     980:	ldp	x26, x25, [sp, #32]
     984:	ldp	x28, x27, [sp, #16]
     988:	ldp	x29, x30, [sp], #96
     98c:	ret
     990:	mov	x0, x21
     994:	bl	0 <free>
     998:	ldr	w1, [sp, #76]
     99c:	b	968 <ctf_serialize+0x678>
     9a0:	adrp	x0, 0 <ctf_create>
     9a4:	adrp	x1, 0 <ctf_create>
     9a8:	adrp	x3, 0 <ctf_create>
     9ac:	add	x0, x0, #0x0
     9b0:	add	x1, x1, #0x0
     9b4:	add	x3, x3, #0x0
     9b8:	mov	w2, #0x179                 	// #377
     9bc:	bl	0 <__assert_fail>
     9c0:	adrp	x0, 0 <ctf_create>
     9c4:	adrp	x1, 0 <ctf_create>
     9c8:	adrp	x3, 0 <ctf_create>
     9cc:	add	x0, x0, #0x0
     9d0:	add	x1, x1, #0x0
     9d4:	add	x3, x3, #0x0
     9d8:	mov	w2, #0x17d                 	// #381
     9dc:	bl	0 <__assert_fail>
     9e0:	adrp	x0, 0 <ctf_create>
     9e4:	adrp	x1, 0 <ctf_create>
     9e8:	adrp	x3, 0 <ctf_create>
     9ec:	add	x0, x0, #0x0
     9f0:	add	x1, x1, #0x0
     9f4:	add	x3, x3, #0x0
     9f8:	mov	w2, #0x1d8                 	// #472
     9fc:	bl	0 <__assert_fail>

0000000000000a00 <ctf_sort_var>:
     a00:	stp	x29, x30, [sp, #-32]!
     a04:	stp	x20, x19, [sp, #16]
     a08:	ldr	w8, [x0]
     a0c:	mov	x19, x2
     a10:	ldp	x0, x2, [x2]
     a14:	mov	x20, x1
     a18:	mov	w1, w8
     a1c:	mov	x29, sp
     a20:	bl	0 <ctf_strraw_explicit>
     a24:	ldp	x8, x2, [x19]
     a28:	ldr	w1, [x20]
     a2c:	mov	x19, x0
     a30:	mov	x0, x8
     a34:	bl	0 <ctf_strraw_explicit>
     a38:	mov	x1, x0
     a3c:	mov	x0, x19
     a40:	ldp	x20, x19, [sp, #16]
     a44:	ldp	x29, x30, [sp], #32
     a48:	b	0 <strcmp>

0000000000000a4c <ctf_name_table>:
     a4c:	cmp	w1, #0x8
     a50:	b.eq	a6c <ctf_name_table+0x20>  // b.none
     a54:	cmp	w1, #0x7
     a58:	b.eq	a74 <ctf_name_table+0x28>  // b.none
     a5c:	cmp	w1, #0x6
     a60:	b.ne	a7c <ctf_name_table+0x30>  // b.any
     a64:	add	x0, x0, #0x98
     a68:	ret
     a6c:	add	x0, x0, #0xb8
     a70:	ret
     a74:	add	x0, x0, #0xa8
     a78:	ret
     a7c:	add	x0, x0, #0xc8
     a80:	ret

0000000000000a84 <ctf_dtd_insert>:
     a84:	stp	x29, x30, [sp, #-48]!
     a88:	stp	x20, x19, [sp, #32]
     a8c:	mov	x19, x1
     a90:	mov	x20, x0
     a94:	ldr	x0, [x0, #568]
     a98:	ldr	x1, [x1, #16]
     a9c:	str	x21, [sp, #16]
     aa0:	mov	w21, w2
     aa4:	mov	x2, x19
     aa8:	mov	x29, sp
     aac:	bl	0 <ctf_dynhash_insert>
     ab0:	tbnz	w0, #31, b30 <ctf_dtd_insert+0xac>
     ab4:	ldr	w1, [x19, #24]
     ab8:	cbz	w1, b10 <ctf_dtd_insert+0x8c>
     abc:	mov	x0, x20
     ac0:	bl	0 <ctf_strraw>
     ac4:	cbz	x0, b10 <ctf_dtd_insert+0x8c>
     ac8:	mov	x1, x0
     acc:	cmp	w21, #0x8
     ad0:	b.eq	aec <ctf_dtd_insert+0x68>  // b.none
     ad4:	cmp	w21, #0x7
     ad8:	b.eq	af4 <ctf_dtd_insert+0x70>  // b.none
     adc:	cmp	w21, #0x6
     ae0:	b.ne	afc <ctf_dtd_insert+0x78>  // b.any
     ae4:	add	x8, x20, #0x98
     ae8:	b	b00 <ctf_dtd_insert+0x7c>
     aec:	add	x8, x20, #0xb8
     af0:	b	b00 <ctf_dtd_insert+0x7c>
     af4:	add	x8, x20, #0xa8
     af8:	b	b00 <ctf_dtd_insert+0x7c>
     afc:	add	x8, x20, #0xc8
     b00:	ldr	x0, [x8, #8]
     b04:	ldr	x2, [x19, #16]
     b08:	bl	0 <ctf_dynhash_insert>
     b0c:	tbnz	w0, #31, b24 <ctf_dtd_insert+0xa0>
     b10:	add	x0, x20, #0x240
     b14:	mov	x1, x19
     b18:	bl	0 <ctf_list_append>
     b1c:	mov	w0, wzr
     b20:	b	b34 <ctf_dtd_insert+0xb0>
     b24:	ldr	x0, [x20, #568]
     b28:	ldr	x1, [x19, #16]
     b2c:	bl	0 <ctf_dynhash_remove>
     b30:	mov	w0, #0xffffffff            	// #-1
     b34:	ldp	x20, x19, [sp, #32]
     b38:	ldr	x21, [sp, #16]
     b3c:	ldp	x29, x30, [sp], #48
     b40:	ret

0000000000000b44 <ctf_dtd_delete>:
     b44:	stp	x29, x30, [sp, #-64]!
     b48:	stp	x22, x21, [sp, #32]
     b4c:	stp	x20, x19, [sp, #48]
     b50:	ldr	x8, [x0]
     b54:	mov	x20, x0
     b58:	ldr	w0, [x1, #28]
     b5c:	str	x23, [sp, #16]
     b60:	ldr	x8, [x8]
     b64:	mov	x29, sp
     b68:	mov	x19, x1
     b6c:	blr	x8
     b70:	ldr	x8, [x20, #568]
     b74:	ldr	x1, [x19, #16]
     b78:	mov	w21, w0
     b7c:	mov	x0, x8
     b80:	bl	0 <ctf_dynhash_remove>
     b84:	sub	w8, w21, #0x6
     b88:	cmp	w8, #0x3
     b8c:	b.cs	bbc <ctf_dtd_delete+0x78>  // b.hs, b.nlast
     b90:	ldr	x22, [x19, #56]
     b94:	cbz	x22, bcc <ctf_dtd_delete+0x88>
     b98:	ldr	x0, [x22, #16]
     b9c:	cbz	x0, ba4 <ctf_dtd_delete+0x60>
     ba0:	bl	0 <free>
     ba4:	ldr	x23, [x22, #8]
     ba8:	mov	x0, x22
     bac:	bl	0 <free>
     bb0:	mov	x22, x23
     bb4:	cbnz	x23, b98 <ctf_dtd_delete+0x54>
     bb8:	b	bcc <ctf_dtd_delete+0x88>
     bbc:	cmp	w21, #0x5
     bc0:	b.ne	bcc <ctf_dtd_delete+0x88>  // b.any
     bc4:	ldr	x0, [x19, #48]
     bc8:	bl	0 <free>
     bcc:	mov	x22, x19
     bd0:	ldr	w1, [x22, #24]!
     bd4:	cbz	w1, c38 <ctf_dtd_delete+0xf4>
     bd8:	mov	x0, x20
     bdc:	bl	0 <ctf_strraw>
     be0:	cbz	x0, c38 <ctf_dtd_delete+0xf4>
     be4:	mov	x23, x0
     be8:	cmp	w21, #0x8
     bec:	b.eq	c08 <ctf_dtd_delete+0xc4>  // b.none
     bf0:	cmp	w21, #0x7
     bf4:	b.eq	c10 <ctf_dtd_delete+0xcc>  // b.none
     bf8:	cmp	w21, #0x6
     bfc:	b.ne	c18 <ctf_dtd_delete+0xd4>  // b.any
     c00:	add	x8, x20, #0x98
     c04:	b	c1c <ctf_dtd_delete+0xd8>
     c08:	add	x8, x20, #0xb8
     c0c:	b	c1c <ctf_dtd_delete+0xd8>
     c10:	add	x8, x20, #0xa8
     c14:	b	c1c <ctf_dtd_delete+0xd8>
     c18:	add	x8, x20, #0xc8
     c1c:	ldr	x0, [x8, #8]
     c20:	mov	x1, x23
     c24:	bl	0 <ctf_dynhash_remove>
     c28:	mov	x0, x20
     c2c:	mov	x1, x23
     c30:	mov	x2, x22
     c34:	bl	0 <ctf_str_remove_ref>
     c38:	add	x0, x20, #0x240
     c3c:	mov	x1, x19
     c40:	bl	0 <ctf_list_delete>
     c44:	mov	x0, x19
     c48:	ldp	x20, x19, [sp, #48]
     c4c:	ldp	x22, x21, [sp, #32]
     c50:	ldr	x23, [sp, #16]
     c54:	ldp	x29, x30, [sp], #64
     c58:	b	0 <free>

0000000000000c5c <ctf_dtd_lookup>:
     c5c:	ldr	x0, [x0, #568]
     c60:	b	0 <ctf_dynhash_lookup>

0000000000000c64 <ctf_dynamic_type>:
     c64:	ldr	w8, [x0, #552]
     c68:	tbz	w8, #1, c94 <ctf_dynamic_type+0x30>
     c6c:	tbz	w8, #0, c80 <ctf_dynamic_type+0x1c>
     c70:	ldr	w8, [x0, #544]
     c74:	cmp	x8, x1
     c78:	b.cc	c80 <ctf_dynamic_type+0x1c>  // b.lo, b.ul, b.last
     c7c:	ldr	x0, [x0, #512]
     c80:	ldr	w8, [x0, #544]
     c84:	ldr	x9, [x0, #480]
     c88:	and	x8, x8, x1
     c8c:	cmp	x8, x9
     c90:	b.ls	c9c <ctf_dynamic_type+0x38>  // b.plast
     c94:	mov	x0, xzr
     c98:	ret
     c9c:	ldr	x0, [x0, #568]
     ca0:	b	0 <ctf_dynhash_lookup>

0000000000000ca4 <ctf_dvd_insert>:
     ca4:	stp	x29, x30, [sp, #-32]!
     ca8:	stp	x20, x19, [sp, #16]
     cac:	mov	x19, x1
     cb0:	mov	x20, x0
     cb4:	ldr	x0, [x0, #592]
     cb8:	ldr	x1, [x1, #16]
     cbc:	mov	x2, x19
     cc0:	mov	x29, sp
     cc4:	bl	0 <ctf_dynhash_insert>
     cc8:	tbnz	w0, #31, ce0 <ctf_dvd_insert+0x3c>
     ccc:	add	x0, x20, #0x258
     cd0:	mov	x1, x19
     cd4:	bl	0 <ctf_list_append>
     cd8:	mov	w0, wzr
     cdc:	b	ce4 <ctf_dvd_insert+0x40>
     ce0:	mov	w0, #0xffffffff            	// #-1
     ce4:	ldp	x20, x19, [sp, #16]
     ce8:	ldp	x29, x30, [sp], #32
     cec:	ret

0000000000000cf0 <ctf_dvd_delete>:
     cf0:	stp	x29, x30, [sp, #-32]!
     cf4:	stp	x20, x19, [sp, #16]
     cf8:	mov	x19, x1
     cfc:	mov	x20, x0
     d00:	ldr	x0, [x0, #592]
     d04:	ldr	x1, [x1, #16]
     d08:	mov	x29, sp
     d0c:	bl	0 <ctf_dynhash_remove>
     d10:	ldr	x0, [x19, #16]
     d14:	bl	0 <free>
     d18:	add	x0, x20, #0x258
     d1c:	mov	x1, x19
     d20:	bl	0 <ctf_list_delete>
     d24:	mov	x0, x19
     d28:	ldp	x20, x19, [sp, #16]
     d2c:	ldp	x29, x30, [sp], #32
     d30:	b	0 <free>

0000000000000d34 <ctf_dvd_lookup>:
     d34:	ldr	x0, [x0, #592]
     d38:	b	0 <ctf_dynhash_lookup>

0000000000000d3c <ctf_discard>:
     d3c:	ldrb	w8, [x0, #552]
     d40:	tbnz	w8, #2, d4c <ctf_discard+0x10>
     d44:	mov	w0, wzr
     d48:	ret
     d4c:	ldr	x8, [x0, #632]
     d50:	ldr	x1, [x0, #616]
     d54:	add	x2, x8, #0x1
     d58:	b	d5c <ctf_rollback>

0000000000000d5c <ctf_rollback>:
     d5c:	sub	sp, sp, #0x70
     d60:	stp	x29, x30, [sp, #16]
     d64:	stp	x28, x27, [sp, #32]
     d68:	stp	x26, x25, [sp, #48]
     d6c:	stp	x24, x23, [sp, #64]
     d70:	stp	x22, x21, [sp, #80]
     d74:	stp	x20, x19, [sp, #96]
     d78:	ldrb	w8, [x0, #552]
     d7c:	mov	x19, x0
     d80:	add	x29, sp, #0x10
     d84:	tbnz	w8, #1, d90 <ctf_rollback+0x34>
     d88:	mov	w1, #0x40d                 	// #1037
     d8c:	b	ec0 <ctf_rollback+0x164>
     d90:	ldr	x8, [x19, #632]
     d94:	mov	x20, x2
     d98:	cmp	x8, x2
     d9c:	b.cs	ebc <ctf_rollback+0x160>  // b.hs, b.nlast
     da0:	ldr	x22, [x19, #584]
     da4:	mov	x21, x1
     da8:	cbz	x22, e6c <ctf_rollback+0x110>
     dac:	add	x8, x19, #0xa8
     db0:	add	x26, x19, #0xb8
     db4:	str	x8, [sp, #8]
     db8:	add	x28, x19, #0x98
     dbc:	add	x8, x19, #0xc8
     dc0:	str	x8, [sp]
     dc4:	ldp	x27, x8, [x22, #8]
     dc8:	ldr	w9, [x19, #544]
     dcc:	and	x8, x8, x9
     dd0:	cmp	x8, x21
     dd4:	b.ls	e64 <ctf_rollback+0x108>  // b.plast
     dd8:	ldr	x8, [x19]
     ddc:	ldr	w0, [x22, #28]
     de0:	ldr	x8, [x8]
     de4:	blr	x8
     de8:	mov	x23, x22
     dec:	ldr	w1, [x23, #24]!
     df0:	cbz	w1, e4c <ctf_rollback+0xf0>
     df4:	mov	w25, w0
     df8:	mov	x0, x19
     dfc:	bl	0 <ctf_strraw>
     e00:	cbz	x0, e4c <ctf_rollback+0xf0>
     e04:	mov	x24, x0
     e08:	cmp	w25, #0x6
     e0c:	mov	x8, x28
     e10:	b.eq	e30 <ctf_rollback+0xd4>  // b.none
     e14:	cmp	w25, #0x8
     e18:	mov	x8, x26
     e1c:	b.eq	e30 <ctf_rollback+0xd4>  // b.none
     e20:	ldr	x8, [sp, #8]
     e24:	cmp	w25, #0x7
     e28:	b.eq	e30 <ctf_rollback+0xd4>  // b.none
     e2c:	ldr	x8, [sp]
     e30:	ldr	x0, [x8, #8]
     e34:	mov	x1, x24
     e38:	bl	0 <ctf_dynhash_remove>
     e3c:	mov	x0, x19
     e40:	mov	x1, x24
     e44:	mov	x2, x23
     e48:	bl	0 <ctf_str_remove_ref>
     e4c:	ldr	x0, [x19, #568]
     e50:	ldr	x1, [x22, #16]
     e54:	bl	0 <ctf_dynhash_remove>
     e58:	mov	x0, x19
     e5c:	mov	x1, x22
     e60:	bl	b44 <ctf_dtd_delete>
     e64:	mov	x22, x27
     e68:	cbnz	x27, dc4 <ctf_rollback+0x68>
     e6c:	ldr	x1, [x19, #608]
     e70:	cbz	x1, e94 <ctf_rollback+0x138>
     e74:	ldr	x8, [x1, #32]
     e78:	ldr	x22, [x1, #8]
     e7c:	cmp	x8, x20
     e80:	b.ls	e8c <ctf_rollback+0x130>  // b.plast
     e84:	mov	x0, x19
     e88:	bl	cf0 <ctf_dvd_delete>
     e8c:	mov	x1, x22
     e90:	cbnz	x22, e74 <ctf_rollback+0x118>
     e94:	ldr	x8, [x19, #632]
     e98:	mov	w0, wzr
     e9c:	str	x21, [x19, #480]
     ea0:	str	x20, [x19, #624]
     ea4:	cmp	x20, x8
     ea8:	b.ne	ec8 <ctf_rollback+0x16c>  // b.any
     eac:	ldr	w8, [x19, #552]
     eb0:	and	w8, w8, #0xfffffffb
     eb4:	str	w8, [x19, #552]
     eb8:	b	ec8 <ctf_rollback+0x16c>
     ebc:	mov	w1, #0x412                 	// #1042
     ec0:	mov	x0, x19
     ec4:	bl	0 <ctf_set_errno>
     ec8:	ldp	x20, x19, [sp, #96]
     ecc:	ldp	x22, x21, [sp, #80]
     ed0:	ldp	x24, x23, [sp, #64]
     ed4:	ldp	x26, x25, [sp, #48]
     ed8:	ldp	x28, x27, [sp, #32]
     edc:	ldp	x29, x30, [sp, #16]
     ee0:	add	sp, sp, #0x70
     ee4:	ret

0000000000000ee8 <ctf_snapshot>:
     ee8:	ldr	x1, [x0, #624]
     eec:	ldr	x8, [x0, #480]
     ef0:	add	x9, x1, #0x1
     ef4:	str	x9, [x0, #624]
     ef8:	mov	x0, x8
     efc:	ret

0000000000000f00 <ctf_add_slice>:
     f00:	sub	sp, sp, #0x40
     f04:	stp	x22, x21, [sp, #32]
     f08:	mov	x21, x0
     f0c:	stp	x29, x30, [sp, #16]
     f10:	stp	x20, x19, [sp, #48]
     f14:	add	x29, sp, #0x10
     f18:	str	x0, [sp]
     f1c:	cbz	x3, f54 <ctf_add_slice+0x54>
     f20:	ldr	w8, [x3, #8]
     f24:	mov	x19, x3
     f28:	cmp	w8, #0xff
     f2c:	b.hi	f3c <ctf_add_slice+0x3c>  // b.pmore
     f30:	ldr	w8, [x19, #4]
     f34:	cmp	w8, #0x100
     f38:	b.cc	f44 <ctf_add_slice+0x44>  // b.lo, b.ul, b.last
     f3c:	mov	w1, #0x416                 	// #1046
     f40:	b	f58 <ctf_add_slice+0x58>
     f44:	mov	w8, #0xffffffff            	// #-1
     f48:	mov	x20, x2
     f4c:	cmp	x2, x8
     f50:	b.cc	f74 <ctf_add_slice+0x74>  // b.lo, b.ul, b.last
     f54:	mov	w1, #0x16                  	// #22
     f58:	mov	x0, x21
     f5c:	bl	0 <ctf_set_errno>
     f60:	ldp	x20, x19, [sp, #48]
     f64:	ldp	x22, x21, [sp, #32]
     f68:	ldp	x29, x30, [sp, #16]
     f6c:	add	sp, sp, #0x40
     f70:	ret
     f74:	mov	w22, w1
     f78:	mov	x0, sp
     f7c:	mov	x1, x20
     f80:	bl	0 <ctf_lookup_by_id>
     f84:	cbz	x0, 1038 <ctf_add_slice+0x138>
     f88:	ldr	x0, [sp]
     f8c:	mov	x1, x20
     f90:	bl	0 <ctf_type_kind_unsliced>
     f94:	cmp	w0, #0x8
     f98:	b.hi	1040 <ctf_add_slice+0x140>  // b.pmore
     f9c:	mov	w8, #0x1                   	// #1
     fa0:	lsl	w8, w8, w0
     fa4:	mov	w9, #0x106                 	// #262
     fa8:	tst	w8, w9
     fac:	b.eq	1040 <ctf_add_slice+0x140>  // b.none
     fb0:	add	x4, sp, #0x8
     fb4:	mov	w3, #0xe                   	// #14
     fb8:	mov	x0, x21
     fbc:	mov	w1, w22
     fc0:	mov	x2, xzr
     fc4:	bl	1048 <ctf_add_generic>
     fc8:	cmn	x0, #0x1
     fcc:	b.eq	f60 <ctf_add_slice+0x60>  // b.none
     fd0:	ldr	x8, [sp, #8]
     fd4:	cmp	w22, #0x0
     fd8:	mov	w9, #0x3a000000            	// #973078528
     fdc:	mov	w10, #0x38000000            	// #939524096
     fe0:	csel	w9, w10, w9, eq  // eq = none
     fe4:	str	w9, [x8, #28]
     fe8:	ldr	w9, [x19, #8]
     fec:	str	w20, [x8, #48]
     ff0:	neg	w9, w9
     ff4:	and	w9, w9, #0xfffffff8
     ff8:	neg	w9, w9
     ffc:	lsr	w9, w9, #3
    1000:	sub	x9, x9, #0x1
    1004:	orr	x9, x9, x9, lsr #1
    1008:	orr	x9, x9, x9, lsr #2
    100c:	orr	x9, x9, x9, lsr #4
    1010:	orr	x9, x9, x9, lsr #8
    1014:	lsr	x10, x9, #16
    1018:	orr	w9, w10, w9
    101c:	add	w9, w9, #0x1
    1020:	str	w9, [x8, #32]
    1024:	ldr	w9, [x19, #8]
    1028:	strh	w9, [x8, #54]
    102c:	ldr	w9, [x19, #4]
    1030:	strh	w9, [x8, #52]
    1034:	b	f60 <ctf_add_slice+0x60>
    1038:	mov	x0, #0xffffffffffffffff    	// #-1
    103c:	b	f60 <ctf_add_slice+0x60>
    1040:	mov	w1, #0x3fe                 	// #1022
    1044:	b	f58 <ctf_add_slice+0x58>

0000000000001048 <ctf_add_generic>:
    1048:	stp	x29, x30, [sp, #-64]!
    104c:	stp	x20, x19, [sp, #48]
    1050:	cmp	w1, #0x2
    1054:	mov	x19, x0
    1058:	stp	x24, x23, [sp, #16]
    105c:	stp	x22, x21, [sp, #32]
    1060:	mov	x29, sp
    1064:	b.cc	1070 <ctf_add_generic+0x28>  // b.lo, b.ul, b.last
    1068:	mov	w1, #0x16                  	// #22
    106c:	b	10ac <ctf_add_generic+0x64>
    1070:	ldrb	w8, [x19, #552]
    1074:	tbnz	w8, #1, 1080 <ctf_add_generic+0x38>
    1078:	mov	w1, #0x40d                 	// #1037
    107c:	b	10ac <ctf_add_generic+0x64>
    1080:	ldr	w8, [x19, #544]
    1084:	ldr	x9, [x19, #480]
    1088:	add	w8, w8, #0x1
    108c:	orr	x8, x9, x8
    1090:	mov	w9, #0xfffffffe            	// #-2
    1094:	cmp	x8, x9
    1098:	b.cs	10a8 <ctf_add_generic+0x60>  // b.hs, b.nlast
    109c:	mov	w9, #0x7ffffffe            	// #2147483646
    10a0:	cmp	x8, x9
    10a4:	b.ne	10c4 <ctf_add_generic+0x7c>  // b.any
    10a8:	mov	w1, #0x40f                 	// #1039
    10ac:	mov	x0, x19
    10b0:	ldp	x20, x19, [sp, #48]
    10b4:	ldp	x22, x21, [sp, #32]
    10b8:	ldp	x24, x23, [sp, #16]
    10bc:	ldp	x29, x30, [sp], #64
    10c0:	b	0 <ctf_set_errno>
    10c4:	mov	x0, x19
    10c8:	mov	x20, x4
    10cc:	mov	w21, w3
    10d0:	mov	x22, x2
    10d4:	bl	218 <ctf_grow_ptrtab>
    10d8:	tbnz	w0, #31, 1184 <ctf_add_generic+0x13c>
    10dc:	mov	w0, #0x48                  	// #72
    10e0:	bl	0 <malloc>
    10e4:	cbz	x0, 114c <ctf_add_generic+0x104>
    10e8:	ldr	x8, [x19, #480]
    10ec:	ldrb	w9, [x19, #552]
    10f0:	mov	x23, x0
    10f4:	add	x24, x8, #0x1
    10f8:	str	x24, [x19, #480]
    10fc:	tbz	w9, #0, 110c <ctf_add_generic+0xc4>
    1100:	ldr	w8, [x19, #544]
    1104:	add	w8, w8, #0x1
    1108:	orr	x24, x24, x8
    110c:	movi	v0.2d, #0x0
    1110:	add	x2, x23, #0x18
    1114:	mov	x0, x19
    1118:	mov	x1, x22
    111c:	str	xzr, [x23, #64]
    1120:	stp	q0, q0, [x23, #32]
    1124:	stp	q0, q0, [x23]
    1128:	bl	0 <ctf_str_add_ref>
    112c:	str	w0, [x23, #24]
    1130:	str	x24, [x23, #16]
    1134:	cbz	x22, 1154 <ctf_add_generic+0x10c>
    1138:	cbnz	w0, 1154 <ctf_add_generic+0x10c>
    113c:	ldrb	w8, [x22]
    1140:	cbz	w8, 1154 <ctf_add_generic+0x10c>
    1144:	mov	x0, x23
    1148:	bl	0 <free>
    114c:	mov	w1, #0xb                   	// #11
    1150:	b	10ac <ctf_add_generic+0x64>
    1154:	mov	x0, x19
    1158:	mov	x1, x23
    115c:	mov	w2, w21
    1160:	bl	a84 <ctf_dtd_insert>
    1164:	tbnz	w0, #31, 117c <ctf_add_generic+0x134>
    1168:	ldr	w8, [x19, #552]
    116c:	orr	w8, w8, #0x4
    1170:	str	w8, [x19, #552]
    1174:	str	x23, [x20]
    1178:	b	1188 <ctf_add_generic+0x140>
    117c:	mov	x0, x23
    1180:	bl	0 <free>
    1184:	mov	x24, #0xffffffffffffffff    	// #-1
    1188:	mov	x0, x24
    118c:	ldp	x20, x19, [sp, #48]
    1190:	ldp	x22, x21, [sp, #32]
    1194:	ldp	x24, x23, [sp, #16]
    1198:	ldp	x29, x30, [sp], #64
    119c:	ret

00000000000011a0 <ctf_add_integer>:
    11a0:	mov	w4, #0x1                   	// #1
    11a4:	b	11a8 <ctf_add_encoded>

00000000000011a8 <ctf_add_encoded>:
    11a8:	stp	x29, x30, [sp, #-48]!
    11ac:	str	x21, [sp, #16]
    11b0:	stp	x20, x19, [sp, #32]
    11b4:	mov	x29, sp
    11b8:	cbz	x3, 1240 <ctf_add_encoded+0x98>
    11bc:	mov	w20, w4
    11c0:	mov	x19, x3
    11c4:	add	x4, x29, #0x18
    11c8:	mov	w3, w20
    11cc:	mov	w21, w1
    11d0:	bl	1048 <ctf_add_generic>
    11d4:	cmn	x0, #0x1
    11d8:	b.eq	1248 <ctf_add_encoded+0xa0>  // b.none
    11dc:	cmp	w21, #0x0
    11e0:	ldr	x8, [x29, #24]
    11e4:	cset	w9, ne  // ne = any
    11e8:	lsl	w9, w9, #25
    11ec:	bfi	w9, w20, #26, #6
    11f0:	str	w9, [x8, #28]
    11f4:	ldr	w9, [x19, #8]
    11f8:	neg	w9, w9
    11fc:	and	w9, w9, #0xfffffff8
    1200:	neg	w9, w9
    1204:	lsr	w9, w9, #3
    1208:	sub	x9, x9, #0x1
    120c:	orr	x9, x9, x9, lsr #1
    1210:	orr	x9, x9, x9, lsr #2
    1214:	orr	x9, x9, x9, lsr #4
    1218:	orr	x9, x9, x9, lsr #8
    121c:	lsr	x10, x9, #16
    1220:	orr	w9, w10, w9
    1224:	add	w9, w9, #0x1
    1228:	str	w9, [x8, #32]
    122c:	ldr	w9, [x19, #8]
    1230:	ldr	x10, [x19]
    1234:	str	w9, [x8, #56]
    1238:	str	x10, [x8, #48]
    123c:	b	1248 <ctf_add_encoded+0xa0>
    1240:	mov	w1, #0x16                  	// #22
    1244:	bl	0 <ctf_set_errno>
    1248:	ldp	x20, x19, [sp, #32]
    124c:	ldr	x21, [sp, #16]
    1250:	ldp	x29, x30, [sp], #48
    1254:	ret

0000000000001258 <ctf_add_float>:
    1258:	mov	w4, #0x2                   	// #2
    125c:	b	11a8 <ctf_add_encoded>

0000000000001260 <ctf_add_pointer>:
    1260:	mov	w3, #0x3                   	// #3
    1264:	b	1268 <ctf_add_reftype>

0000000000001268 <ctf_add_reftype>:
    1268:	sub	sp, sp, #0x50
    126c:	mov	w8, #0xffffffff            	// #-1
    1270:	stp	x20, x19, [sp, #64]
    1274:	mov	x20, x0
    1278:	cmp	x2, x8
    127c:	stp	x29, x30, [sp, #16]
    1280:	stp	x24, x23, [sp, #32]
    1284:	stp	x22, x21, [sp, #48]
    1288:	add	x29, sp, #0x10
    128c:	str	x0, [sp]
    1290:	b.cc	12a8 <ctf_add_reftype+0x40>  // b.lo, b.ul, b.last
    1294:	mov	w1, #0x16                  	// #22
    1298:	mov	x0, x20
    129c:	bl	0 <ctf_set_errno>
    12a0:	mov	x19, x0
    12a4:	b	13a0 <ctf_add_reftype+0x138>
    12a8:	ldr	w24, [x20, #552]
    12ac:	mov	w23, w1
    12b0:	mov	x0, sp
    12b4:	mov	x1, x2
    12b8:	mov	w22, w3
    12bc:	mov	x21, x2
    12c0:	bl	0 <ctf_lookup_by_id>
    12c4:	cbz	x0, 139c <ctf_add_reftype+0x134>
    12c8:	add	x4, sp, #0x8
    12cc:	mov	x0, x20
    12d0:	mov	w1, w23
    12d4:	mov	x2, xzr
    12d8:	mov	w3, w22
    12dc:	bl	1048 <ctf_add_generic>
    12e0:	mov	x19, x0
    12e4:	cmn	x0, #0x1
    12e8:	b.eq	13a0 <ctf_add_reftype+0x138>  // b.none
    12ec:	cmp	w23, #0x0
    12f0:	ldr	x23, [sp, #8]
    12f4:	cset	w8, ne  // ne = any
    12f8:	lsl	w8, w8, #25
    12fc:	cmp	w22, #0x3
    1300:	bfi	w8, w22, #26, #6
    1304:	stp	w8, w21, [x23, #28]
    1308:	b.ne	13a0 <ctf_add_reftype+0x138>  // b.any
    130c:	ldr	w8, [x20, #544]
    1310:	and	w10, w24, #0x1
    1314:	cmp	x8, x21
    1318:	cset	w9, cs  // cs = hs, nlast
    131c:	cmp	w10, w9
    1320:	b.eq	13a0 <ctf_add_reftype+0x138>  // b.none
    1324:	ldr	x10, [x20, #480]
    1328:	mov	w9, w21
    132c:	and	x9, x8, x9
    1330:	cmp	x10, x9
    1334:	b.ls	13a0 <ctf_add_reftype+0x138>  // b.plast
    1338:	ldr	x10, [x20, #448]
    133c:	and	w21, w8, w19
    1340:	str	w21, [x10, x9, lsl #2]
    1344:	ldr	x8, [sp]
    1348:	cmp	x8, x20
    134c:	b.ne	13a0 <ctf_add_reftype+0x138>  // b.any
    1350:	ldr	x8, [x20]
    1354:	ldp	w0, w24, [x23, #28]
    1358:	ldr	w22, [x20, #544]
    135c:	ldr	x8, [x8]
    1360:	blr	x8
    1364:	cmp	w0, #0xa
    1368:	b.ne	13a0 <ctf_add_reftype+0x138>  // b.any
    136c:	ldr	w1, [x23, #24]
    1370:	mov	x0, x20
    1374:	bl	0 <ctf_strptr>
    1378:	ldrb	w8, [x0]
    137c:	cbnz	w8, 13a0 <ctf_add_reftype+0x138>
    1380:	ldr	x9, [x20, #480]
    1384:	and	w8, w22, w24
    1388:	cmp	x9, x8
    138c:	b.ls	13a0 <ctf_add_reftype+0x138>  // b.plast
    1390:	ldr	x9, [x20, #448]
    1394:	str	w21, [x9, x8, lsl #2]
    1398:	b	13a0 <ctf_add_reftype+0x138>
    139c:	mov	x19, #0xffffffffffffffff    	// #-1
    13a0:	mov	x0, x19
    13a4:	ldp	x20, x19, [sp, #64]
    13a8:	ldp	x22, x21, [sp, #48]
    13ac:	ldp	x24, x23, [sp, #32]
    13b0:	ldp	x29, x30, [sp, #16]
    13b4:	add	sp, sp, #0x50
    13b8:	ret

00000000000013bc <ctf_add_array>:
    13bc:	sub	sp, sp, #0x40
    13c0:	str	x21, [sp, #32]
    13c4:	mov	x21, x0
    13c8:	stp	x29, x30, [sp, #16]
    13cc:	stp	x20, x19, [sp, #48]
    13d0:	add	x29, sp, #0x10
    13d4:	str	x0, [sp, #8]
    13d8:	cbz	x2, 1454 <ctf_add_array+0x98>
    13dc:	mov	w20, w1
    13e0:	ldr	x1, [x2]
    13e4:	add	x0, sp, #0x8
    13e8:	mov	x19, x2
    13ec:	bl	0 <ctf_lookup_by_id>
    13f0:	cbz	x0, 1464 <ctf_add_array+0xa8>
    13f4:	str	x21, [sp, #8]
    13f8:	ldr	x1, [x19, #8]
    13fc:	add	x0, sp, #0x8
    1400:	bl	0 <ctf_lookup_by_id>
    1404:	cbz	x0, 1464 <ctf_add_array+0xa8>
    1408:	add	x4, x29, #0x18
    140c:	mov	w3, #0x4                   	// #4
    1410:	mov	x0, x21
    1414:	mov	w1, w20
    1418:	mov	x2, xzr
    141c:	bl	1048 <ctf_add_generic>
    1420:	cmn	x0, #0x1
    1424:	b.eq	1468 <ctf_add_array+0xac>  // b.none
    1428:	ldr	x8, [x29, #24]
    142c:	cmp	w20, #0x0
    1430:	mov	w9, #0x12000000            	// #301989888
    1434:	mov	w10, #0x10000000            	// #268435456
    1438:	csel	w9, w10, w9, eq  // eq = none
    143c:	stp	w9, wzr, [x8, #28]
    1440:	ldr	x9, [x19, #16]
    1444:	ldr	q0, [x19]
    1448:	str	x9, [x8, #64]
    144c:	str	q0, [x8, #48]
    1450:	b	1468 <ctf_add_array+0xac>
    1454:	mov	w1, #0x16                  	// #22
    1458:	mov	x0, x21
    145c:	bl	0 <ctf_set_errno>
    1460:	b	1468 <ctf_add_array+0xac>
    1464:	mov	x0, #0xffffffffffffffff    	// #-1
    1468:	ldp	x20, x19, [sp, #48]
    146c:	ldr	x21, [sp, #32]
    1470:	ldp	x29, x30, [sp, #16]
    1474:	add	sp, sp, #0x40
    1478:	ret

000000000000147c <ctf_set_array>:
    147c:	stp	x29, x30, [sp, #-48]!
    1480:	stp	x20, x19, [sp, #32]
    1484:	mov	x19, x0
    1488:	ldr	x0, [x0, #568]
    148c:	str	x21, [sp, #16]
    1490:	mov	x29, sp
    1494:	mov	x20, x2
    1498:	bl	0 <ctf_dynhash_lookup>
    149c:	ldrb	w8, [x19, #552]
    14a0:	tbnz	w8, #1, 14ac <ctf_set_array+0x30>
    14a4:	mov	w1, #0x40d                 	// #1037
    14a8:	b	14f4 <ctf_set_array+0x78>
    14ac:	mov	x21, x0
    14b0:	cbz	x0, 14f0 <ctf_set_array+0x74>
    14b4:	ldr	x8, [x19]
    14b8:	ldr	w0, [x21, #28]
    14bc:	ldr	x8, [x8]
    14c0:	blr	x8
    14c4:	cmp	w0, #0x4
    14c8:	b.ne	14f0 <ctf_set_array+0x74>  // b.any
    14cc:	ldr	w8, [x19, #552]
    14d0:	mov	w0, wzr
    14d4:	orr	w8, w8, #0x4
    14d8:	str	w8, [x19, #552]
    14dc:	ldr	x8, [x20, #16]
    14e0:	ldr	q0, [x20]
    14e4:	str	x8, [x21, #64]
    14e8:	str	q0, [x21, #48]
    14ec:	b	14fc <ctf_set_array+0x80>
    14f0:	mov	w1, #0x3fa                 	// #1018
    14f4:	mov	x0, x19
    14f8:	bl	0 <ctf_set_errno>
    14fc:	ldp	x20, x19, [sp, #32]
    1500:	ldr	x21, [sp, #16]
    1504:	ldp	x29, x30, [sp], #48
    1508:	ret

000000000000150c <ctf_add_function>:
    150c:	sub	sp, sp, #0x50
    1510:	stp	x22, x21, [sp, #48]
    1514:	mov	x21, x0
    1518:	stp	x29, x30, [sp, #16]
    151c:	stp	x24, x23, [sp, #32]
    1520:	stp	x20, x19, [sp, #64]
    1524:	add	x29, sp, #0x10
    1528:	str	x0, [sp]
    152c:	cbz	x2, 1554 <ctf_add_function+0x48>
    1530:	ldr	w8, [x2, #12]
    1534:	mov	x19, x2
    1538:	cmp	w8, #0x1
    153c:	b.hi	1554 <ctf_add_function+0x48>  // b.pmore
    1540:	ldr	w9, [x19, #8]
    1544:	mov	x20, x3
    1548:	mov	w22, w1
    154c:	cbnz	x3, 1580 <ctf_add_function+0x74>
    1550:	cbz	w9, 1580 <ctf_add_function+0x74>
    1554:	mov	w1, #0x16                  	// #22
    1558:	mov	x0, x21
    155c:	bl	0 <ctf_set_errno>
    1560:	mov	x21, x0
    1564:	mov	x0, x21
    1568:	ldp	x20, x19, [sp, #64]
    156c:	ldp	x22, x21, [sp, #48]
    1570:	ldp	x24, x23, [sp, #32]
    1574:	ldp	x29, x30, [sp, #16]
    1578:	add	sp, sp, #0x50
    157c:	ret
    1580:	ldr	x1, [x19]
    1584:	cmp	w8, #0x0
    1588:	mov	x0, sp
    158c:	cinc	w24, w9, ne  // ne = any
    1590:	bl	0 <ctf_lookup_by_id>
    1594:	cbz	x0, 15d8 <ctf_add_function+0xcc>
    1598:	ldr	w8, [x19, #8]
    159c:	cbz	w8, 15c8 <ctf_add_function+0xbc>
    15a0:	mov	x23, xzr
    15a4:	str	x21, [sp]
    15a8:	ldr	x1, [x20, x23, lsl #3]
    15ac:	mov	x0, sp
    15b0:	bl	0 <ctf_lookup_by_id>
    15b4:	cbz	x0, 15d8 <ctf_add_function+0xcc>
    15b8:	ldr	w8, [x19, #8]
    15bc:	add	x23, x23, #0x1
    15c0:	cmp	x23, x8
    15c4:	b.cc	15a4 <ctf_add_function+0x98>  // b.lo, b.ul, b.last
    15c8:	lsr	w8, w24, #24
    15cc:	cbz	w8, 15e0 <ctf_add_function+0xd4>
    15d0:	mov	w1, #0x4b                  	// #75
    15d4:	b	1558 <ctf_add_function+0x4c>
    15d8:	mov	x21, #0xffffffffffffffff    	// #-1
    15dc:	b	1564 <ctf_add_function+0x58>
    15e0:	cbz	w24, 1600 <ctf_add_function+0xf4>
    15e4:	mov	w8, w24
    15e8:	lsl	x0, x8, #3
    15ec:	bl	0 <malloc>
    15f0:	mov	x23, x0
    15f4:	cbnz	x0, 1604 <ctf_add_function+0xf8>
    15f8:	mov	w1, #0xb                   	// #11
    15fc:	b	1558 <ctf_add_function+0x4c>
    1600:	mov	x23, xzr
    1604:	add	x4, sp, #0x8
    1608:	mov	w3, #0x5                   	// #5
    160c:	mov	x0, x21
    1610:	mov	w1, w22
    1614:	mov	x2, xzr
    1618:	bl	1048 <ctf_add_generic>
    161c:	mov	x21, x0
    1620:	cmn	x0, #0x1
    1624:	b.eq	1678 <ctf_add_function+0x16c>  // b.none
    1628:	cmp	w22, #0x0
    162c:	ldr	x22, [sp, #8]
    1630:	mov	w8, #0x16000000            	// #369098752
    1634:	mov	w9, #0x14000000            	// #335544320
    1638:	csel	w8, w9, w8, eq  // eq = none
    163c:	orr	w8, w24, w8
    1640:	str	w8, [x22, #28]
    1644:	ldr	x8, [x19]
    1648:	mov	x0, x23
    164c:	mov	x1, x20
    1650:	str	w8, [x22, #32]
    1654:	ldr	w8, [x19, #8]
    1658:	lsl	x2, x8, #3
    165c:	bl	0 <memcpy>
    1660:	ldrb	w8, [x19, #12]
    1664:	tbz	w8, #0, 1670 <ctf_add_function+0x164>
    1668:	sub	w8, w24, #0x1
    166c:	str	xzr, [x23, w8, uxtw #3]
    1670:	str	x23, [x22, #48]
    1674:	b	1564 <ctf_add_function+0x58>
    1678:	mov	x0, x23
    167c:	bl	0 <free>
    1680:	b	1564 <ctf_add_function+0x58>

0000000000001684 <ctf_add_struct_sized>:
    1684:	stp	x29, x30, [sp, #-64]!
    1688:	str	x23, [sp, #16]
    168c:	stp	x22, x21, [sp, #32]
    1690:	stp	x20, x19, [sp, #48]
    1694:	mov	x19, x3
    1698:	mov	x22, x2
    169c:	mov	w21, w1
    16a0:	mov	x23, x0
    16a4:	mov	x29, sp
    16a8:	cbz	x2, 16ec <ctf_add_struct_sized+0x68>
    16ac:	mov	w1, #0x6                   	// #6
    16b0:	mov	x0, x23
    16b4:	mov	x2, x22
    16b8:	bl	0 <ctf_lookup_by_rawname>
    16bc:	cbz	x0, 16ec <ctf_add_struct_sized+0x68>
    16c0:	mov	x20, x0
    16c4:	mov	x0, x23
    16c8:	mov	x1, x20
    16cc:	bl	0 <ctf_type_kind>
    16d0:	cmp	w0, #0x9
    16d4:	b.ne	16ec <ctf_add_struct_sized+0x68>  // b.any
    16d8:	ldr	x0, [x23, #568]
    16dc:	mov	x1, x20
    16e0:	bl	0 <ctf_dynhash_lookup>
    16e4:	str	x0, [x29, #24]
    16e8:	b	1714 <ctf_add_struct_sized+0x90>
    16ec:	add	x4, x29, #0x18
    16f0:	mov	w3, #0x6                   	// #6
    16f4:	mov	x0, x23
    16f8:	mov	w1, w21
    16fc:	mov	x2, x22
    1700:	bl	1048 <ctf_add_generic>
    1704:	mov	x20, x0
    1708:	cmn	x0, #0x1
    170c:	b.eq	1748 <ctf_add_struct_sized+0xc4>  // b.none
    1710:	ldr	x0, [x29, #24]
    1714:	cmp	w21, #0x0
    1718:	mov	w9, #0x1a000000            	// #436207616
    171c:	mov	w10, #0x18000000            	// #402653184
    1720:	mov	w8, #0xffffffff            	// #-1
    1724:	csel	w9, w10, w9, eq  // eq = none
    1728:	cmp	x19, x8
    172c:	str	w9, [x0, #28]
    1730:	b.cc	1744 <ctf_add_struct_sized+0xc0>  // b.lo, b.ul, b.last
    1734:	lsr	x9, x19, #32
    1738:	stp	w8, w9, [x0, #32]
    173c:	str	w19, [x0, #40]
    1740:	b	1748 <ctf_add_struct_sized+0xc4>
    1744:	str	w19, [x0, #32]
    1748:	mov	x0, x20
    174c:	ldp	x20, x19, [sp, #48]
    1750:	ldp	x22, x21, [sp, #32]
    1754:	ldr	x23, [sp, #16]
    1758:	ldp	x29, x30, [sp], #64
    175c:	ret

0000000000001760 <ctf_add_struct>:
    1760:	mov	x3, xzr
    1764:	b	1684 <ctf_add_struct_sized>

0000000000001768 <ctf_add_union_sized>:
    1768:	stp	x29, x30, [sp, #-64]!
    176c:	str	x23, [sp, #16]
    1770:	stp	x22, x21, [sp, #32]
    1774:	stp	x20, x19, [sp, #48]
    1778:	mov	x19, x3
    177c:	mov	x22, x2
    1780:	mov	w21, w1
    1784:	mov	x23, x0
    1788:	mov	x29, sp
    178c:	cbz	x2, 17d0 <ctf_add_union_sized+0x68>
    1790:	mov	w1, #0x7                   	// #7
    1794:	mov	x0, x23
    1798:	mov	x2, x22
    179c:	bl	0 <ctf_lookup_by_rawname>
    17a0:	cbz	x0, 17d0 <ctf_add_union_sized+0x68>
    17a4:	mov	x20, x0
    17a8:	mov	x0, x23
    17ac:	mov	x1, x20
    17b0:	bl	0 <ctf_type_kind>
    17b4:	cmp	w0, #0x9
    17b8:	b.ne	17d0 <ctf_add_union_sized+0x68>  // b.any
    17bc:	ldr	x0, [x23, #568]
    17c0:	mov	x1, x20
    17c4:	bl	0 <ctf_dynhash_lookup>
    17c8:	str	x0, [x29, #24]
    17cc:	b	17f8 <ctf_add_union_sized+0x90>
    17d0:	add	x4, x29, #0x18
    17d4:	mov	w3, #0x7                   	// #7
    17d8:	mov	x0, x23
    17dc:	mov	w1, w21
    17e0:	mov	x2, x22
    17e4:	bl	1048 <ctf_add_generic>
    17e8:	mov	x20, x0
    17ec:	cmn	x0, #0x1
    17f0:	b.eq	182c <ctf_add_union_sized+0xc4>  // b.none
    17f4:	ldr	x0, [x29, #24]
    17f8:	cmp	w21, #0x0
    17fc:	mov	w9, #0x1e000000            	// #503316480
    1800:	mov	w10, #0x1c000000            	// #469762048
    1804:	mov	w8, #0xffffffff            	// #-1
    1808:	csel	w9, w10, w9, eq  // eq = none
    180c:	cmp	x19, x8
    1810:	str	w9, [x0, #28]
    1814:	b.cc	1828 <ctf_add_union_sized+0xc0>  // b.lo, b.ul, b.last
    1818:	lsr	x9, x19, #32
    181c:	stp	w8, w9, [x0, #32]
    1820:	str	w19, [x0, #40]
    1824:	b	182c <ctf_add_union_sized+0xc4>
    1828:	str	w19, [x0, #32]
    182c:	mov	x0, x20
    1830:	ldp	x20, x19, [sp, #48]
    1834:	ldp	x22, x21, [sp, #32]
    1838:	ldr	x23, [sp, #16]
    183c:	ldp	x29, x30, [sp], #64
    1840:	ret

0000000000001844 <ctf_add_union>:
    1844:	mov	x3, xzr
    1848:	b	1768 <ctf_add_union_sized>

000000000000184c <ctf_add_enum>:
    184c:	sub	sp, sp, #0x40
    1850:	stp	x22, x21, [sp, #32]
    1854:	stp	x20, x19, [sp, #48]
    1858:	mov	x22, x2
    185c:	mov	w20, w1
    1860:	mov	x19, x0
    1864:	stp	x29, x30, [sp, #16]
    1868:	add	x29, sp, #0x10
    186c:	cbz	x2, 18b0 <ctf_add_enum+0x64>
    1870:	mov	w1, #0x8                   	// #8
    1874:	mov	x0, x19
    1878:	mov	x2, x22
    187c:	bl	0 <ctf_lookup_by_rawname>
    1880:	cbz	x0, 18b0 <ctf_add_enum+0x64>
    1884:	mov	x21, x0
    1888:	mov	x0, x19
    188c:	mov	x1, x21
    1890:	bl	0 <ctf_type_kind>
    1894:	cmp	w0, #0x9
    1898:	b.ne	18b0 <ctf_add_enum+0x64>  // b.any
    189c:	ldr	x0, [x19, #568]
    18a0:	mov	x1, x21
    18a4:	bl	0 <ctf_dynhash_lookup>
    18a8:	str	x0, [sp, #8]
    18ac:	b	18d8 <ctf_add_enum+0x8c>
    18b0:	add	x4, sp, #0x8
    18b4:	mov	w3, #0x8                   	// #8
    18b8:	mov	x0, x19
    18bc:	mov	w1, w20
    18c0:	mov	x2, x22
    18c4:	bl	1048 <ctf_add_generic>
    18c8:	mov	x21, x0
    18cc:	cmn	x0, #0x1
    18d0:	b.eq	18f8 <ctf_add_enum+0xac>  // b.none
    18d4:	ldr	x0, [sp, #8]
    18d8:	cmp	w20, #0x0
    18dc:	mov	w8, #0x22000000            	// #570425344
    18e0:	mov	w9, #0x20000000            	// #536870912
    18e4:	csel	w8, w9, w8, eq  // eq = none
    18e8:	str	w8, [x0, #28]
    18ec:	ldr	x8, [x19, #488]
    18f0:	ldr	x8, [x8, #40]
    18f4:	str	w8, [x0, #32]
    18f8:	mov	x0, x21
    18fc:	ldp	x20, x19, [sp, #48]
    1900:	ldp	x22, x21, [sp, #32]
    1904:	ldp	x29, x30, [sp, #16]
    1908:	add	sp, sp, #0x40
    190c:	ret

0000000000001910 <ctf_add_enum_encoded>:
    1910:	stp	x29, x30, [sp, #-64]!
    1914:	str	x23, [sp, #16]
    1918:	stp	x22, x21, [sp, #32]
    191c:	stp	x20, x19, [sp, #48]
    1920:	mov	x19, x3
    1924:	mov	x23, x2
    1928:	mov	w21, w1
    192c:	mov	x20, x0
    1930:	mov	x29, sp
    1934:	cbz	x2, 1994 <ctf_add_enum_encoded+0x84>
    1938:	mov	w1, #0x8                   	// #8
    193c:	mov	x0, x20
    1940:	mov	x2, x23
    1944:	bl	0 <ctf_lookup_by_rawname>
    1948:	cbz	x0, 1994 <ctf_add_enum_encoded+0x84>
    194c:	mov	x22, x0
    1950:	mov	x0, x20
    1954:	mov	x1, x22
    1958:	bl	0 <ctf_type_kind>
    195c:	cmp	w0, #0x9
    1960:	b.eq	19b0 <ctf_add_enum_encoded+0xa0>  // b.none
    1964:	mov	x0, x20
    1968:	mov	x1, x22
    196c:	bl	0 <ctf_type_kind_unsliced>
    1970:	cmp	w0, #0x8
    1974:	b.eq	19b0 <ctf_add_enum_encoded+0xa0>  // b.none
    1978:	mov	x0, x20
    197c:	ldp	x20, x19, [sp, #48]
    1980:	ldp	x22, x21, [sp, #32]
    1984:	ldr	x23, [sp, #16]
    1988:	mov	w1, #0x3fe                 	// #1022
    198c:	ldp	x29, x30, [sp], #64
    1990:	b	0 <ctf_set_errno>
    1994:	mov	x0, x20
    1998:	mov	w1, w21
    199c:	mov	x2, x23
    19a0:	bl	184c <ctf_add_enum>
    19a4:	mov	x22, x0
    19a8:	cmn	x0, #0x1
    19ac:	b.eq	19d4 <ctf_add_enum_encoded+0xc4>  // b.none
    19b0:	mov	x0, x20
    19b4:	mov	w1, w21
    19b8:	mov	x2, x22
    19bc:	mov	x3, x19
    19c0:	ldp	x20, x19, [sp, #48]
    19c4:	ldp	x22, x21, [sp, #32]
    19c8:	ldr	x23, [sp, #16]
    19cc:	ldp	x29, x30, [sp], #64
    19d0:	b	f00 <ctf_add_slice>
    19d4:	ldp	x20, x19, [sp, #48]
    19d8:	ldp	x22, x21, [sp, #32]
    19dc:	ldr	x23, [sp, #16]
    19e0:	ldp	x29, x30, [sp], #64
    19e4:	ret

00000000000019e8 <ctf_add_forward>:
    19e8:	sub	sp, sp, #0x40
    19ec:	sub	w8, w3, #0x6
    19f0:	stp	x22, x21, [sp, #32]
    19f4:	cmp	w8, #0x3
    19f8:	mov	x22, x0
    19fc:	stp	x29, x30, [sp, #16]
    1a00:	stp	x20, x19, [sp, #48]
    1a04:	add	x29, sp, #0x10
    1a08:	b.cs	1a68 <ctf_add_forward+0x80>  // b.hs, b.nlast
    1a0c:	mov	w19, w3
    1a10:	mov	x21, x2
    1a14:	mov	w20, w1
    1a18:	cbz	x2, 1a2c <ctf_add_forward+0x44>
    1a1c:	mov	x0, x22
    1a20:	mov	w1, w19
    1a24:	mov	x2, x21
    1a28:	bl	0 <ctf_lookup_by_rawname>
    1a2c:	add	x4, sp, #0x8
    1a30:	mov	w3, #0x9                   	// #9
    1a34:	mov	x0, x22
    1a38:	mov	w1, w20
    1a3c:	mov	x2, x21
    1a40:	bl	1048 <ctf_add_generic>
    1a44:	cmn	x0, #0x1
    1a48:	b.eq	1a74 <ctf_add_forward+0x8c>  // b.none
    1a4c:	ldr	x8, [sp, #8]
    1a50:	cmp	w20, #0x0
    1a54:	mov	w9, #0x26000000            	// #637534208
    1a58:	mov	w10, #0x24000000            	// #603979776
    1a5c:	csel	w9, w10, w9, eq  // eq = none
    1a60:	stp	w9, w19, [x8, #28]
    1a64:	b	1a74 <ctf_add_forward+0x8c>
    1a68:	mov	w1, #0x3fd                 	// #1021
    1a6c:	mov	x0, x22
    1a70:	bl	0 <ctf_set_errno>
    1a74:	ldp	x20, x19, [sp, #48]
    1a78:	ldp	x22, x21, [sp, #32]
    1a7c:	ldp	x29, x30, [sp, #16]
    1a80:	add	sp, sp, #0x40
    1a84:	ret

0000000000001a88 <ctf_add_typedef>:
    1a88:	sub	sp, sp, #0x40
    1a8c:	mov	w8, #0xffffffff            	// #-1
    1a90:	stp	x22, x21, [sp, #32]
    1a94:	mov	x21, x0
    1a98:	cmp	x3, x8
    1a9c:	stp	x29, x30, [sp, #16]
    1aa0:	stp	x20, x19, [sp, #48]
    1aa4:	add	x29, sp, #0x10
    1aa8:	str	x0, [sp]
    1aac:	b.cc	1ac0 <ctf_add_typedef+0x38>  // b.lo, b.ul, b.last
    1ab0:	mov	w1, #0x16                  	// #22
    1ab4:	mov	x0, x21
    1ab8:	bl	0 <ctf_set_errno>
    1abc:	b	1b1c <ctf_add_typedef+0x94>
    1ac0:	mov	w20, w1
    1ac4:	mov	x0, sp
    1ac8:	mov	x1, x3
    1acc:	mov	x19, x3
    1ad0:	mov	x22, x2
    1ad4:	bl	0 <ctf_lookup_by_id>
    1ad8:	cbz	x0, 1b18 <ctf_add_typedef+0x90>
    1adc:	add	x4, sp, #0x8
    1ae0:	mov	w3, #0xa                   	// #10
    1ae4:	mov	x0, x21
    1ae8:	mov	w1, w20
    1aec:	mov	x2, x22
    1af0:	bl	1048 <ctf_add_generic>
    1af4:	cmn	x0, #0x1
    1af8:	b.eq	1b1c <ctf_add_typedef+0x94>  // b.none
    1afc:	ldr	x8, [sp, #8]
    1b00:	cmp	w20, #0x0
    1b04:	mov	w9, #0x2a000000            	// #704643072
    1b08:	mov	w10, #0x28000000            	// #671088640
    1b0c:	csel	w9, w10, w9, eq  // eq = none
    1b10:	stp	w9, w19, [x8, #28]
    1b14:	b	1b1c <ctf_add_typedef+0x94>
    1b18:	mov	x0, #0xffffffffffffffff    	// #-1
    1b1c:	ldp	x20, x19, [sp, #48]
    1b20:	ldp	x22, x21, [sp, #32]
    1b24:	ldp	x29, x30, [sp, #16]
    1b28:	add	sp, sp, #0x40
    1b2c:	ret

0000000000001b30 <ctf_add_volatile>:
    1b30:	mov	w3, #0xb                   	// #11
    1b34:	b	1268 <ctf_add_reftype>

0000000000001b38 <ctf_add_const>:
    1b38:	mov	w3, #0xc                   	// #12
    1b3c:	b	1268 <ctf_add_reftype>

0000000000001b40 <ctf_add_restrict>:
    1b40:	mov	w3, #0xd                   	// #13
    1b44:	b	1268 <ctf_add_reftype>

0000000000001b48 <ctf_add_enumerator>:
    1b48:	stp	x29, x30, [sp, #-80]!
    1b4c:	stp	x24, x23, [sp, #32]
    1b50:	stp	x22, x21, [sp, #48]
    1b54:	stp	x20, x19, [sp, #64]
    1b58:	mov	x19, x0
    1b5c:	ldr	x0, [x0, #568]
    1b60:	str	x25, [sp, #16]
    1b64:	mov	x29, sp
    1b68:	mov	w20, w3
    1b6c:	mov	x22, x2
    1b70:	bl	0 <ctf_dynhash_lookup>
    1b74:	cbz	x22, 1b88 <ctf_add_enumerator+0x40>
    1b78:	ldrb	w8, [x19, #552]
    1b7c:	tbnz	w8, #1, 1b90 <ctf_add_enumerator+0x48>
    1b80:	mov	w1, #0x40d                 	// #1037
    1b84:	b	1c04 <ctf_add_enumerator+0xbc>
    1b88:	mov	w1, #0x16                  	// #22
    1b8c:	b	1c04 <ctf_add_enumerator+0xbc>
    1b90:	mov	x21, x0
    1b94:	cbz	x0, 1bf8 <ctf_add_enumerator+0xb0>
    1b98:	ldr	x8, [x19]
    1b9c:	ldr	w0, [x21, #28]
    1ba0:	ldr	x8, [x8]
    1ba4:	blr	x8
    1ba8:	ldr	x8, [x19]
    1bac:	mov	w24, w0
    1bb0:	ldr	x9, [x8, #8]
    1bb4:	ldr	w8, [x21, #28]
    1bb8:	mov	w0, w8
    1bbc:	blr	x9
    1bc0:	ldr	x8, [x19]
    1bc4:	mov	w23, w0
    1bc8:	ldr	x9, [x8, #16]
    1bcc:	ldr	w8, [x21, #28]
    1bd0:	mov	w0, w8
    1bd4:	blr	x9
    1bd8:	cmp	w24, #0x8
    1bdc:	b.ne	1c00 <ctf_add_enumerator+0xb8>  // b.any
    1be0:	mov	w8, #0xffffff              	// #16777215
    1be4:	mov	w24, w0
    1be8:	cmp	w0, w8
    1bec:	b.ne	1c24 <ctf_add_enumerator+0xdc>  // b.any
    1bf0:	mov	w1, #0x40e                 	// #1038
    1bf4:	b	1c04 <ctf_add_enumerator+0xbc>
    1bf8:	mov	w1, #0x3fa                 	// #1018
    1bfc:	b	1c04 <ctf_add_enumerator+0xbc>
    1c00:	mov	w1, #0x3fc                 	// #1020
    1c04:	mov	x0, x19
    1c08:	bl	0 <ctf_set_errno>
    1c0c:	ldp	x20, x19, [sp, #64]
    1c10:	ldp	x22, x21, [sp, #48]
    1c14:	ldp	x24, x23, [sp, #32]
    1c18:	ldr	x25, [sp, #16]
    1c1c:	ldp	x29, x30, [sp], #80
    1c20:	ret
    1c24:	ldr	x25, [x21, #56]
    1c28:	cbz	x25, 1c44 <ctf_add_enumerator+0xfc>
    1c2c:	ldr	x0, [x25, #16]
    1c30:	mov	x1, x22
    1c34:	bl	0 <strcmp>
    1c38:	cbz	w0, 1cb4 <ctf_add_enumerator+0x16c>
    1c3c:	ldr	x25, [x25, #8]
    1c40:	cbnz	x25, 1c2c <ctf_add_enumerator+0xe4>
    1c44:	mov	w0, #0x30                  	// #48
    1c48:	bl	0 <malloc>
    1c4c:	cbz	x0, 1cc4 <ctf_add_enumerator+0x17c>
    1c50:	mov	x25, x0
    1c54:	mov	x0, x22
    1c58:	bl	0 <strdup>
    1c5c:	cbz	x0, 1cbc <ctf_add_enumerator+0x174>
    1c60:	adrp	x9, 0 <ctf_create>
    1c64:	ldr	q0, [x9]
    1c68:	cmp	w23, #0x0
    1c6c:	mov	w10, #0x22000000            	// #570425344
    1c70:	mov	w11, #0x20000000            	// #536870912
    1c74:	add	x8, x21, #0x30
    1c78:	add	w9, w24, #0x1
    1c7c:	csel	w10, w11, w10, eq  // eq = none
    1c80:	str	x0, [x25, #16]
    1c84:	bfxil	w10, w9, #0, #24
    1c88:	mov	x0, x8
    1c8c:	mov	x1, x25
    1c90:	str	w20, [x25, #40]
    1c94:	stur	q0, [x25, #24]
    1c98:	str	w10, [x21, #28]
    1c9c:	bl	0 <ctf_list_append>
    1ca0:	ldr	w8, [x19, #552]
    1ca4:	mov	w0, wzr
    1ca8:	orr	w8, w8, #0x4
    1cac:	str	w8, [x19, #552]
    1cb0:	b	1c0c <ctf_add_enumerator+0xc4>
    1cb4:	mov	w1, #0x410                 	// #1040
    1cb8:	b	1c04 <ctf_add_enumerator+0xbc>
    1cbc:	mov	x0, x25
    1cc0:	bl	0 <free>
    1cc4:	mov	w1, #0xb                   	// #11
    1cc8:	b	1c04 <ctf_add_enumerator+0xbc>

0000000000001ccc <ctf_add_member_offset>:
    1ccc:	sub	sp, sp, #0x80
    1cd0:	stp	x29, x30, [sp, #32]
    1cd4:	stp	x28, x27, [sp, #48]
    1cd8:	stp	x26, x25, [sp, #64]
    1cdc:	stp	x24, x23, [sp, #80]
    1ce0:	stp	x22, x21, [sp, #96]
    1ce4:	stp	x20, x19, [sp, #112]
    1ce8:	mov	x19, x0
    1cec:	ldr	x0, [x0, #568]
    1cf0:	add	x29, sp, #0x20
    1cf4:	mov	x25, x4
    1cf8:	mov	x27, x3
    1cfc:	mov	x28, x2
    1d00:	bl	0 <ctf_dynhash_lookup>
    1d04:	ldrb	w8, [x19, #552]
    1d08:	tbnz	w8, #1, 1d14 <ctf_add_member_offset+0x48>
    1d0c:	mov	w1, #0x40d                 	// #1037
    1d10:	b	1d8c <ctf_add_member_offset+0xc0>
    1d14:	mov	x20, x0
    1d18:	cbz	x0, 1d80 <ctf_add_member_offset+0xb4>
    1d1c:	ldr	x8, [x19]
    1d20:	ldr	w0, [x20, #28]
    1d24:	ldr	x8, [x8]
    1d28:	blr	x8
    1d2c:	ldr	x8, [x19]
    1d30:	mov	w21, w0
    1d34:	ldr	x9, [x8, #8]
    1d38:	ldr	w8, [x20, #28]
    1d3c:	mov	w0, w8
    1d40:	blr	x9
    1d44:	ldr	x8, [x19]
    1d48:	mov	w22, w0
    1d4c:	ldr	x9, [x8, #16]
    1d50:	ldr	w8, [x20, #28]
    1d54:	mov	w0, w8
    1d58:	blr	x9
    1d5c:	orr	w8, w21, #0x1
    1d60:	cmp	w8, #0x7
    1d64:	b.ne	1d88 <ctf_add_member_offset+0xbc>  // b.any
    1d68:	mov	w8, #0xffffff              	// #16777215
    1d6c:	mov	w23, w0
    1d70:	cmp	w0, w8
    1d74:	b.ne	1db4 <ctf_add_member_offset+0xe8>  // b.any
    1d78:	mov	w1, #0x40e                 	// #1038
    1d7c:	b	1d8c <ctf_add_member_offset+0xc0>
    1d80:	mov	w1, #0x3fa                 	// #1018
    1d84:	b	1d8c <ctf_add_member_offset+0xc0>
    1d88:	mov	w1, #0x3fb                 	// #1019
    1d8c:	mov	x0, x19
    1d90:	bl	0 <ctf_set_errno>
    1d94:	ldp	x20, x19, [sp, #112]
    1d98:	ldp	x22, x21, [sp, #96]
    1d9c:	ldp	x24, x23, [sp, #80]
    1da0:	ldp	x26, x25, [sp, #64]
    1da4:	ldp	x28, x27, [sp, #48]
    1da8:	ldp	x29, x30, [sp, #32]
    1dac:	add	sp, sp, #0x80
    1db0:	ret
    1db4:	cbz	x28, 1ddc <ctf_add_member_offset+0x110>
    1db8:	ldr	x24, [x20, #56]
    1dbc:	cbz	x24, 1ddc <ctf_add_member_offset+0x110>
    1dc0:	ldr	x0, [x24, #16]
    1dc4:	cbz	x0, 1dd4 <ctf_add_member_offset+0x108>
    1dc8:	mov	x1, x28
    1dcc:	bl	0 <strcmp>
    1dd0:	cbz	w0, 1e3c <ctf_add_member_offset+0x170>
    1dd4:	ldr	x24, [x24, #8]
    1dd8:	cbnz	x24, 1dc0 <ctf_add_member_offset+0xf4>
    1ddc:	mov	x0, x19
    1de0:	mov	x1, x27
    1de4:	bl	0 <ctf_type_size>
    1de8:	tbnz	x0, #63, 1e34 <ctf_add_member_offset+0x168>
    1dec:	mov	x26, x0
    1df0:	mov	x0, x19
    1df4:	mov	x1, x27
    1df8:	bl	0 <ctf_type_align>
    1dfc:	tbnz	x0, #63, 1e34 <ctf_add_member_offset+0x168>
    1e00:	str	x0, [sp, #8]
    1e04:	mov	w0, #0x30                  	// #48
    1e08:	bl	0 <malloc>
    1e0c:	cbz	x0, 1e2c <ctf_add_member_offset+0x160>
    1e10:	mov	x24, x0
    1e14:	cbz	x28, 1e44 <ctf_add_member_offset+0x178>
    1e18:	mov	x0, x28
    1e1c:	bl	0 <strdup>
    1e20:	cbnz	x0, 1e48 <ctf_add_member_offset+0x17c>
    1e24:	mov	x0, x24
    1e28:	bl	0 <free>
    1e2c:	mov	w1, #0xb                   	// #11
    1e30:	b	1d8c <ctf_add_member_offset+0xc0>
    1e34:	mov	w0, #0xffffffff            	// #-1
    1e38:	b	1d94 <ctf_add_member_offset+0xc8>
    1e3c:	mov	w1, #0x410                 	// #1040
    1e40:	b	1d8c <ctf_add_member_offset+0xc0>
    1e44:	mov	x0, xzr
    1e48:	add	x1, x20, #0x18
    1e4c:	mov	w8, #0xffffffff            	// #-1
    1e50:	cmp	w21, #0x6
    1e54:	stp	x0, x27, [x24, #16]
    1e58:	str	w8, [x24, #40]
    1e5c:	b.ne	1ea8 <ctf_add_member_offset+0x1dc>  // b.any
    1e60:	cbz	w23, 1ea8 <ctf_add_member_offset+0x1dc>
    1e64:	cmn	x25, #0x1
    1e68:	b.eq	1ed0 <ctf_add_member_offset+0x204>  // b.none
    1e6c:	str	x25, [x24, #32]
    1e70:	ldr	x8, [x19]
    1e74:	mov	x0, x19
    1e78:	mov	x2, xzr
    1e7c:	mov	x3, xzr
    1e80:	ldr	x8, [x8, #24]
    1e84:	blr	x8
    1e88:	add	w8, w25, #0x7
    1e8c:	cmp	w25, #0x0
    1e90:	csel	w8, w8, w25, lt  // lt = tstop
    1e94:	asr	w8, w8, #3
    1e98:	add	x8, x26, w8, sxtw
    1e9c:	cmp	x0, x8
    1ea0:	csel	x8, x0, x8, gt
    1ea4:	b	1f4c <ctf_add_member_offset+0x280>
    1ea8:	str	xzr, [x24, #32]
    1eac:	ldr	x8, [x19]
    1eb0:	mov	x0, x19
    1eb4:	mov	x2, xzr
    1eb8:	mov	x3, xzr
    1ebc:	ldr	x8, [x8, #24]
    1ec0:	blr	x8
    1ec4:	cmp	x0, x26
    1ec8:	csel	x8, x0, x26, gt
    1ecc:	b	1f4c <ctf_add_member_offset+0x280>
    1ed0:	ldr	x25, [x20, #48]
    1ed4:	mov	x0, x19
    1ed8:	ldr	x1, [x25, #24]
    1edc:	bl	0 <ctf_type_resolve>
    1ee0:	ldr	x27, [x25, #32]
    1ee4:	mov	x25, x0
    1ee8:	add	x2, sp, #0x10
    1eec:	mov	x0, x19
    1ef0:	mov	x1, x25
    1ef4:	bl	0 <ctf_type_encoding>
    1ef8:	cbz	w0, 1f18 <ctf_add_member_offset+0x24c>
    1efc:	mov	x0, x19
    1f00:	mov	x1, x25
    1f04:	bl	0 <ctf_type_size>
    1f08:	cmp	x0, #0x1
    1f0c:	b.lt	1f20 <ctf_add_member_offset+0x254>  // b.tstop
    1f10:	add	x27, x27, x0, lsl #3
    1f14:	b	1f20 <ctf_add_member_offset+0x254>
    1f18:	ldr	w8, [sp, #24]
    1f1c:	add	x27, x27, x8
    1f20:	ldr	x9, [sp, #8]
    1f24:	add	x8, x27, #0x7
    1f28:	cmp	x9, #0x1
    1f2c:	csinc	x9, x9, xzr, gt
    1f30:	add	x8, x9, x8, lsr #3
    1f34:	sub	x8, x8, #0x1
    1f38:	udiv	x8, x8, x9
    1f3c:	mul	x8, x8, x9
    1f40:	lsl	x9, x8, #3
    1f44:	str	x9, [x24, #32]
    1f48:	add	x8, x8, x26
    1f4c:	mov	w9, #0xffffffff            	// #-1
    1f50:	cmp	x8, x9
    1f54:	b.cc	1f68 <ctf_add_member_offset+0x29c>  // b.lo, b.ul, b.last
    1f58:	lsr	x10, x8, #32
    1f5c:	stp	w9, w10, [x20, #32]
    1f60:	mov	w9, #0x28                  	// #40
    1f64:	b	1f6c <ctf_add_member_offset+0x2a0>
    1f68:	mov	w9, #0x20                  	// #32
    1f6c:	cmp	w22, #0x0
    1f70:	str	w8, [x20, x9]
    1f74:	lsl	w8, w21, #26
    1f78:	cset	w10, ne  // ne = any
    1f7c:	add	w9, w23, #0x1
    1f80:	bfi	w8, w10, #25, #1
    1f84:	bfxil	w8, w9, #0, #24
    1f88:	add	x0, x20, #0x30
    1f8c:	mov	x1, x24
    1f90:	str	w8, [x20, #28]
    1f94:	bl	0 <ctf_list_append>
    1f98:	ldr	w8, [x19, #552]
    1f9c:	mov	w0, wzr
    1fa0:	orr	w8, w8, #0x4
    1fa4:	str	w8, [x19, #552]
    1fa8:	b	1d94 <ctf_add_member_offset+0xc8>

0000000000001fac <ctf_add_member_encoded>:
    1fac:	sub	sp, sp, #0x50
    1fb0:	stp	x29, x30, [sp, #16]
    1fb4:	stp	x22, x21, [sp, #48]
    1fb8:	stp	x20, x19, [sp, #64]
    1fbc:	str	x5, [sp]
    1fc0:	str	w6, [sp, #8]
    1fc4:	mov	x20, x0
    1fc8:	ldr	x0, [x0, #568]
    1fcc:	mov	x22, x1
    1fd0:	mov	x1, x3
    1fd4:	str	x23, [sp, #32]
    1fd8:	add	x29, sp, #0x10
    1fdc:	mov	x19, x4
    1fe0:	mov	x23, x3
    1fe4:	mov	x21, x2
    1fe8:	bl	0 <ctf_dynhash_lookup>
    1fec:	ldr	x8, [x20]
    1ff0:	ldr	w0, [x0, #28]
    1ff4:	ldr	x8, [x8]
    1ff8:	blr	x8
    1ffc:	cmp	w0, #0x8
    2000:	b.hi	2050 <ctf_add_member_encoded+0xa4>  // b.pmore
    2004:	mov	w8, #0x1                   	// #1
    2008:	lsl	w8, w8, w0
    200c:	mov	w9, #0x106                 	// #262
    2010:	tst	w8, w9
    2014:	b.eq	2050 <ctf_add_member_encoded+0xa4>  // b.none
    2018:	sxtw	x2, w23
    201c:	mov	x3, sp
    2020:	mov	x0, x20
    2024:	mov	w1, wzr
    2028:	bl	f00 <ctf_add_slice>
    202c:	cmn	x0, #0x1
    2030:	b.eq	205c <ctf_add_member_encoded+0xb0>  // b.none
    2034:	mov	x3, x0
    2038:	mov	x0, x20
    203c:	mov	x1, x22
    2040:	mov	x2, x21
    2044:	mov	x4, x19
    2048:	bl	1ccc <ctf_add_member_offset>
    204c:	b	205c <ctf_add_member_encoded+0xb0>
    2050:	mov	w1, #0x3fe                 	// #1022
    2054:	mov	x0, x20
    2058:	bl	0 <ctf_set_errno>
    205c:	ldp	x20, x19, [sp, #64]
    2060:	ldp	x22, x21, [sp, #48]
    2064:	ldr	x23, [sp, #32]
    2068:	ldp	x29, x30, [sp, #16]
    206c:	add	sp, sp, #0x50
    2070:	ret

0000000000002074 <ctf_add_member>:
    2074:	mov	x4, #0xffffffffffffffff    	// #-1
    2078:	b	1ccc <ctf_add_member_offset>

000000000000207c <ctf_add_variable>:
    207c:	sub	sp, sp, #0x40
    2080:	stp	x29, x30, [sp, #16]
    2084:	stp	x22, x21, [sp, #32]
    2088:	stp	x20, x19, [sp, #48]
    208c:	str	x0, [sp, #8]
    2090:	ldrb	w8, [x0, #552]
    2094:	mov	x19, x0
    2098:	add	x29, sp, #0x10
    209c:	tbnz	w8, #1, 20a8 <ctf_add_variable+0x2c>
    20a0:	mov	w1, #0x40d                 	// #1037
    20a4:	b	20c0 <ctf_add_variable+0x44>
    20a8:	ldr	x0, [x19, #592]
    20ac:	mov	x20, x2
    20b0:	mov	x21, x1
    20b4:	bl	0 <ctf_dynhash_lookup>
    20b8:	cbz	x0, 20dc <ctf_add_variable+0x60>
    20bc:	mov	w1, #0x410                 	// #1040
    20c0:	mov	x0, x19
    20c4:	bl	0 <ctf_set_errno>
    20c8:	ldp	x20, x19, [sp, #48]
    20cc:	ldp	x22, x21, [sp, #32]
    20d0:	ldp	x29, x30, [sp, #16]
    20d4:	add	sp, sp, #0x40
    20d8:	ret
    20dc:	add	x0, sp, #0x8
    20e0:	mov	x1, x20
    20e4:	bl	0 <ctf_lookup_by_id>
    20e8:	cbz	x0, 2170 <ctf_add_variable+0xf4>
    20ec:	mov	x0, x19
    20f0:	mov	x1, x20
    20f4:	bl	0 <ctf_type_resolve>
    20f8:	cmn	x0, #0x1
    20fc:	b.ne	2110 <ctf_add_variable+0x94>  // b.any
    2100:	mov	x0, x19
    2104:	bl	0 <ctf_errno>
    2108:	cmp	w0, #0x41b
    210c:	b.eq	2170 <ctf_add_variable+0xf4>  // b.none
    2110:	mov	w0, #0x28                  	// #40
    2114:	bl	0 <malloc>
    2118:	cbz	x0, 2180 <ctf_add_variable+0x104>
    211c:	mov	x22, x0
    2120:	cbz	x21, 2134 <ctf_add_variable+0xb8>
    2124:	mov	x0, x21
    2128:	bl	0 <strdup>
    212c:	str	x0, [x22, #16]
    2130:	cbz	x0, 2178 <ctf_add_variable+0xfc>
    2134:	ldr	x8, [x19, #624]
    2138:	mov	x0, x19
    213c:	mov	x1, x22
    2140:	stp	x20, x8, [x22, #24]
    2144:	bl	ca4 <ctf_dvd_insert>
    2148:	tbnz	w0, #31, 2160 <ctf_add_variable+0xe4>
    214c:	ldr	w8, [x19, #552]
    2150:	mov	w0, wzr
    2154:	orr	w8, w8, #0x4
    2158:	str	w8, [x19, #552]
    215c:	b	20c8 <ctf_add_variable+0x4c>
    2160:	ldr	x0, [x22, #16]
    2164:	bl	0 <free>
    2168:	mov	x0, x22
    216c:	bl	0 <free>
    2170:	mov	w0, #0xffffffff            	// #-1
    2174:	b	20c8 <ctf_add_variable+0x4c>
    2178:	mov	x0, x22
    217c:	bl	0 <free>
    2180:	mov	w1, #0xb                   	// #11
    2184:	b	20c0 <ctf_add_variable+0x44>

0000000000002188 <ctf_add_type>:
    2188:	stp	x29, x30, [sp, #-48]!
    218c:	stp	x20, x19, [sp, #32]
    2190:	ldr	x8, [x1, #696]
    2194:	str	x21, [sp, #16]
    2198:	mov	x20, x2
    219c:	mov	x19, x1
    21a0:	mov	x21, x0
    21a4:	mov	x29, sp
    21a8:	cbnz	x8, 21d0 <ctf_add_type+0x48>
    21ac:	adrp	x0, 0 <ctf_hash_integer>
    21b0:	adrp	x1, 0 <ctf_hash_eq_integer>
    21b4:	add	x0, x0, #0x0
    21b8:	add	x1, x1, #0x0
    21bc:	mov	x2, xzr
    21c0:	mov	x3, xzr
    21c4:	bl	0 <ctf_dynhash_create>
    21c8:	str	x0, [x19, #696]
    21cc:	cbz	x0, 2208 <ctf_add_type+0x80>
    21d0:	mov	x0, x21
    21d4:	mov	x1, x19
    21d8:	mov	x2, x20
    21dc:	mov	x3, x19
    21e0:	bl	2220 <ctf_add_type_internal>
    21e4:	ldr	x8, [x19, #696]
    21e8:	mov	x19, x0
    21ec:	mov	x0, x8
    21f0:	bl	0 <ctf_dynhash_empty>
    21f4:	mov	x0, x19
    21f8:	ldp	x20, x19, [sp, #32]
    21fc:	ldr	x21, [sp, #16]
    2200:	ldp	x29, x30, [sp], #48
    2204:	ret
    2208:	mov	x0, x21
    220c:	ldp	x20, x19, [sp, #32]
    2210:	ldr	x21, [sp, #16]
    2214:	mov	w1, #0xc                   	// #12
    2218:	ldp	x29, x30, [sp], #48
    221c:	b	0 <ctf_set_errno>

0000000000002220 <ctf_add_type_internal>:
    2220:	sub	sp, sp, #0x110
    2224:	stp	x29, x30, [sp, #176]
    2228:	add	x29, sp, #0xb0
    222c:	stp	x28, x27, [sp, #192]
    2230:	stp	x26, x25, [sp, #208]
    2234:	stp	x24, x23, [sp, #224]
    2238:	stp	x22, x21, [sp, #240]
    223c:	stp	x20, x19, [sp, #256]
    2240:	stp	x0, x1, [x29, #-24]
    2244:	ldrb	w8, [x0, #552]
    2248:	mov	x19, x0
    224c:	tbnz	w8, #1, 2258 <ctf_add_type_internal+0x38>
    2250:	mov	w1, #0x40d                 	// #1037
    2254:	b	2474 <ctf_add_type_internal+0x254>
    2258:	sub	x0, x29, #0x10
    225c:	mov	x1, x2
    2260:	mov	x21, x3
    2264:	mov	x20, x2
    2268:	bl	0 <ctf_lookup_by_id>
    226c:	ldur	x8, [x29, #-16]
    2270:	cbz	x0, 2388 <ctf_add_type_internal+0x168>
    2274:	mov	x27, x0
    2278:	mov	x0, x8
    227c:	mov	x1, x20
    2280:	bl	0 <ctf_type_resolve>
    2284:	cmn	x0, #0x1
    2288:	b.ne	22a4 <ctf_add_type_internal+0x84>  // b.any
    228c:	ldur	x0, [x29, #-16]
    2290:	bl	0 <ctf_errno>
    2294:	cmp	w0, #0x41b
    2298:	b.ne	22a4 <ctf_add_type_internal+0x84>  // b.any
    229c:	mov	w1, #0x41b                 	// #1051
    22a0:	b	2474 <ctf_add_type_internal+0x254>
    22a4:	ldur	x0, [x29, #-16]
    22a8:	ldr	w1, [x27]
    22ac:	bl	0 <ctf_strptr>
    22b0:	ldur	x8, [x29, #-16]
    22b4:	mov	x23, x0
    22b8:	ldr	x8, [x8]
    22bc:	ldr	x9, [x8]
    22c0:	ldr	w8, [x27, #4]
    22c4:	mov	w0, w8
    22c8:	blr	x9
    22cc:	ldur	x8, [x29, #-16]
    22d0:	mov	w25, w0
    22d4:	ldr	x8, [x8]
    22d8:	ldr	x9, [x8, #8]
    22dc:	ldr	w8, [x27, #4]
    22e0:	mov	w0, w8
    22e4:	blr	x9
    22e8:	ldur	x8, [x29, #-16]
    22ec:	mov	w26, w0
    22f0:	ldr	x8, [x8]
    22f4:	ldr	x9, [x8, #16]
    22f8:	ldr	w8, [x27, #4]
    22fc:	mov	w0, w8
    2300:	blr	x9
    2304:	ldur	x8, [x29, #-16]
    2308:	mov	w24, w0
    230c:	sub	x2, x29, #0x18
    2310:	mov	x1, x20
    2314:	mov	x0, x8
    2318:	bl	0 <ctf_type_mapping>
    231c:	cbz	x0, 2390 <ctf_add_type_internal+0x170>
    2320:	mov	x22, x0
    2324:	ldr	x0, [x21, #696]
    2328:	mov	x1, x20
    232c:	bl	0 <ctf_dynhash_lookup>
    2330:	cbnz	x0, 2480 <ctf_add_type_internal+0x260>
    2334:	ldur	x0, [x29, #-24]
    2338:	mov	x1, x22
    233c:	bl	0 <ctf_type_kind_unsliced>
    2340:	sub	w8, w25, #0x6
    2344:	cmp	w8, #0x2
    2348:	b.hi	2390 <ctf_add_type_internal+0x170>  // b.pmore
    234c:	cmp	w0, w25
    2350:	b.ne	2390 <ctf_add_type_internal+0x170>  // b.any
    2354:	sub	x0, x29, #0x18
    2358:	mov	x1, #0xffffffffffffffff    	// #-1
    235c:	bl	0 <ctf_lookup_by_id>
    2360:	cbz	x0, 2380 <ctf_add_type_internal+0x160>
    2364:	ldur	x8, [x29, #-24]
    2368:	ldr	w0, [x0, #4]
    236c:	ldr	x8, [x8]
    2370:	ldr	x8, [x8, #16]
    2374:	blr	x8
    2378:	cmp	w24, w0
    237c:	b.eq	2480 <ctf_add_type_internal+0x260>  // b.none
    2380:	str	w24, [sp, #8]
    2384:	b	23a8 <ctf_add_type_internal+0x188>
    2388:	mov	x0, x8
    238c:	b	246c <ctf_add_type_internal+0x24c>
    2390:	cmp	w25, #0x9
    2394:	str	w24, [sp, #8]
    2398:	b.ne	23a8 <ctf_add_type_internal+0x188>  // b.any
    239c:	ldr	w28, [x27, #8]
    23a0:	mov	w24, #0x1                   	// #1
    23a4:	b	23b0 <ctf_add_type_internal+0x190>
    23a8:	mov	w24, wzr
    23ac:	mov	w28, w25
    23b0:	str	x23, [sp, #16]
    23b4:	str	w26, [sp, #12]
    23b8:	tbz	w26, #0, 242c <ctf_add_type_internal+0x20c>
    23bc:	ldrb	w8, [x23]
    23c0:	cbz	w8, 242c <ctf_add_type_internal+0x20c>
    23c4:	mov	x0, x19
    23c8:	mov	w1, w28
    23cc:	mov	x2, x23
    23d0:	bl	0 <ctf_lookup_by_rawname>
    23d4:	cbz	x0, 242c <ctf_add_type_internal+0x20c>
    23d8:	mov	x22, x0
    23dc:	mov	x0, x19
    23e0:	mov	x1, x22
    23e4:	bl	0 <ctf_type_kind_unsliced>
    23e8:	cmn	x22, #0x1
    23ec:	mov	w23, w0
    23f0:	cset	w26, ne  // ne = any
    23f4:	cmp	w0, w25
    23f8:	b.eq	24f4 <ctf_add_type_internal+0x2d4>  // b.none
    23fc:	cmn	x22, #0x1
    2400:	b.eq	24f4 <ctf_add_type_internal+0x2d4>  // b.none
    2404:	cbz	w24, 24dc <ctf_add_type_internal+0x2bc>
    2408:	sub	w8, w23, #0x6
    240c:	cmp	w8, #0x3
    2410:	b.cs	24dc <ctf_add_type_internal+0x2bc>  // b.hs, b.nlast
    2414:	ldur	x0, [x29, #-16]
    2418:	mov	x1, x20
    241c:	mov	x2, x19
    2420:	mov	x3, x22
    2424:	bl	0 <ctf_add_type_mapping>
    2428:	b	2480 <ctf_add_type_internal+0x260>
    242c:	mov	w26, wzr
    2430:	mov	w23, wzr
    2434:	mov	x24, #0xffffffffffffffff    	// #-1
    2438:	cmp	w25, #0xe
    243c:	b.hi	258c <ctf_add_type_internal+0x36c>  // b.pmore
    2440:	mov	w8, #0x1                   	// #1
    2444:	lsl	w8, w8, w25
    2448:	mov	w9, #0x4006                	// #16390
    244c:	tst	w8, w9
    2450:	b.eq	258c <ctf_add_type_internal+0x36c>  // b.none
    2454:	ldur	x0, [x29, #-16]
    2458:	add	x2, sp, #0x58
    245c:	mov	x1, x20
    2460:	bl	0 <ctf_type_encoding>
    2464:	cbz	w0, 24a4 <ctf_add_type_internal+0x284>
    2468:	ldur	x0, [x29, #-16]
    246c:	bl	0 <ctf_errno>
    2470:	mov	w1, w0
    2474:	mov	x0, x19
    2478:	bl	0 <ctf_set_errno>
    247c:	mov	x22, x0
    2480:	mov	x0, x22
    2484:	ldp	x20, x19, [sp, #256]
    2488:	ldp	x22, x21, [sp, #240]
    248c:	ldp	x24, x23, [sp, #224]
    2490:	ldp	x26, x25, [sp, #208]
    2494:	ldp	x28, x27, [sp, #192]
    2498:	ldp	x29, x30, [sp, #176]
    249c:	add	sp, sp, #0x110
    24a0:	ret
    24a4:	cbz	w26, 258c <ctf_add_type_internal+0x36c>
    24a8:	sub	x0, x29, #0x30
    24ac:	mov	x1, x24
    24b0:	stur	x19, [x29, #-48]
    24b4:	bl	0 <ctf_lookup_by_id>
    24b8:	cbz	x0, 24d4 <ctf_add_type_internal+0x2b4>
    24bc:	mov	x22, x0
    24c0:	add	x2, sp, #0x48
    24c4:	mov	x0, x19
    24c8:	mov	x1, x24
    24cc:	bl	0 <ctf_type_encoding>
    24d0:	cbz	w0, 2520 <ctf_add_type_internal+0x300>
    24d4:	mov	x24, #0xffffffffffffffff    	// #-1
    24d8:	b	2838 <ctf_add_type_internal+0x618>
    24dc:	cmp	w23, #0x9
    24e0:	b.ne	24fc <ctf_add_type_internal+0x2dc>  // b.any
    24e4:	sub	w8, w25, #0x6
    24e8:	cmp	w8, #0x3
    24ec:	b.cs	24fc <ctf_add_type_internal+0x2dc>  // b.hs, b.nlast
    24f0:	mov	w23, #0x9                   	// #9
    24f4:	mov	x24, x22
    24f8:	b	2438 <ctf_add_type_internal+0x218>
    24fc:	ldr	x1, [sp, #16]
    2500:	adrp	x0, 0 <ctf_create>
    2504:	add	x0, x0, #0x0
    2508:	mov	w2, w25
    250c:	mov	x3, x22
    2510:	mov	w4, w23
    2514:	bl	0 <ctf_dprintf>
    2518:	mov	w1, #0x411                 	// #1041
    251c:	b	2474 <ctf_add_type_internal+0x254>
    2520:	ldur	x8, [x29, #-48]
    2524:	ldr	w0, [x22, #4]
    2528:	ldr	x8, [x8]
    252c:	ldr	x8, [x8, #8]
    2530:	blr	x8
    2534:	ldr	x8, [sp, #88]
    2538:	ldr	x9, [sp, #72]
    253c:	ldr	w10, [sp, #96]
    2540:	ldr	w11, [sp, #80]
    2544:	eor	x8, x8, x9
    2548:	eor	w9, w10, w11
    254c:	orr	x8, x8, x9
    2550:	cmp	x8, #0x0
    2554:	cset	w8, ne  // ne = any
    2558:	tbnz	w0, #0, 256c <ctf_add_type_internal+0x34c>
    255c:	cmp	w25, #0xe
    2560:	b.eq	258c <ctf_add_type_internal+0x36c>  // b.none
    2564:	cbz	w8, 2824 <ctf_add_type_internal+0x604>
    2568:	b	258c <ctf_add_type_internal+0x36c>
    256c:	cbz	w8, 2584 <ctf_add_type_internal+0x364>
    2570:	mov	w1, #0x411                 	// #1041
    2574:	mov	x0, x19
    2578:	bl	0 <ctf_set_errno>
    257c:	mov	x24, x0
    2580:	b	2838 <ctf_add_type_internal+0x618>
    2584:	cmp	w25, #0xe
    2588:	b.ne	2824 <ctf_add_type_internal+0x604>  // b.any
    258c:	ldur	x8, [x29, #-16]
    2590:	stp	x20, xzr, [x29, #-40]
    2594:	stp	x19, x24, [x29, #-72]
    2598:	mov	w2, #0x1                   	// #1
    259c:	stp	xzr, x8, [x29, #-56]
    25a0:	ldr	x0, [x21, #696]
    25a4:	mov	x1, x20
    25a8:	bl	0 <ctf_dynhash_insert>
    25ac:	tbnz	w0, #31, 2614 <ctf_add_type_internal+0x3f4>
    25b0:	sub	w8, w25, #0x1
    25b4:	cmp	w8, #0xd
    25b8:	b.hi	2684 <ctf_add_type_internal+0x464>  // b.pmore
    25bc:	adrp	x9, 0 <ctf_create>
    25c0:	add	x9, x9, #0x0
    25c4:	adr	x10, 25d4 <ctf_add_type_internal+0x3b4>
    25c8:	ldrb	w11, [x9, x8]
    25cc:	add	x10, x10, x11, lsl #2
    25d0:	br	x10
    25d4:	ldur	x0, [x29, #-16]
    25d8:	mov	x1, x20
    25dc:	bl	0 <ctf_type_reference>
    25e0:	ldur	x1, [x29, #-16]
    25e4:	mov	x2, x0
    25e8:	mov	x0, x19
    25ec:	mov	x3, x21
    25f0:	bl	2220 <ctf_add_type_internal>
    25f4:	cmn	x0, #0x1
    25f8:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    25fc:	ldr	w1, [sp, #12]
    2600:	mov	x2, x0
    2604:	mov	x0, x19
    2608:	mov	w3, w25
    260c:	bl	1268 <ctf_add_reftype>
    2610:	b	2818 <ctf_add_type_internal+0x5f8>
    2614:	mov	w1, #0xc                   	// #12
    2618:	b	2474 <ctf_add_type_internal+0x254>
    261c:	cmp	w23, #0x9
    2620:	cset	w8, eq  // eq = none
    2624:	eor	w9, w26, #0x1
    2628:	orr	w8, w8, w9
    262c:	tbnz	w8, #0, 2840 <ctf_add_type_internal+0x620>
    2630:	ldur	x0, [x29, #-16]
    2634:	mov	x1, x20
    2638:	bl	0 <ctf_type_size>
    263c:	mov	x21, x0
    2640:	mov	x0, x19
    2644:	mov	x1, x24
    2648:	bl	0 <ctf_type_size>
    264c:	ldur	x8, [x29, #-16]
    2650:	cmp	x21, x0
    2654:	ldr	x21, [sp, #16]
    2658:	b.ne	28d8 <ctf_add_type_internal+0x6b8>  // b.any
    265c:	adrp	x2, 0 <ctf_create>
    2660:	add	x2, x2, #0x0
    2664:	sub	x3, x29, #0x48
    2668:	mov	x0, x8
    266c:	mov	x1, x20
    2670:	bl	0 <ctf_member_iter>
    2674:	cbz	w0, 281c <ctf_add_type_internal+0x5fc>
    2678:	adrp	x0, 0 <ctf_create>
    267c:	add	x0, x0, #0x0
    2680:	b	2764 <ctf_add_type_internal+0x544>
    2684:	mov	w1, #0x3ef                 	// #1007
    2688:	b	2474 <ctf_add_type_internal+0x254>
    268c:	add	x3, sp, #0x58
    2690:	mov	w4, #0x1                   	// #1
    2694:	b	26a0 <ctf_add_type_internal+0x480>
    2698:	add	x3, sp, #0x58
    269c:	mov	w4, #0x2                   	// #2
    26a0:	ldr	w1, [sp, #12]
    26a4:	ldr	x2, [sp, #16]
    26a8:	mov	x0, x19
    26ac:	bl	11a8 <ctf_add_encoded>
    26b0:	b	2818 <ctf_add_type_internal+0x5f8>
    26b4:	ldur	x0, [x29, #-16]
    26b8:	add	x2, sp, #0x30
    26bc:	mov	x1, x20
    26c0:	bl	0 <ctf_array_info>
    26c4:	ldur	x1, [x29, #-16]
    26c8:	cbz	w0, 2954 <ctf_add_type_internal+0x734>
    26cc:	mov	x0, x1
    26d0:	b	246c <ctf_add_type_internal+0x24c>
    26d4:	ldur	x1, [x29, #-16]
    26d8:	ldr	w2, [x27, #8]
    26dc:	mov	x0, x19
    26e0:	mov	x3, x21
    26e4:	bl	2220 <ctf_add_type_internal>
    26e8:	cmn	x0, #0x1
    26ec:	stp	x0, xzr, [sp, #48]
    26f0:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    26f4:	ldr	w1, [sp, #12]
    26f8:	add	x2, sp, #0x30
    26fc:	mov	x0, x19
    2700:	mov	x3, xzr
    2704:	bl	150c <ctf_add_function>
    2708:	b	2818 <ctf_add_type_internal+0x5f8>
    270c:	cmp	w23, #0x9
    2710:	cset	w8, eq  // eq = none
    2714:	eor	w9, w26, #0x1
    2718:	orr	w8, w8, w9
    271c:	tbnz	w8, #0, 2914 <ctf_add_type_internal+0x6f4>
    2720:	ldur	x0, [x29, #-16]
    2724:	adrp	x2, 0 <ctf_create>
    2728:	add	x2, x2, #0x0
    272c:	sub	x3, x29, #0x48
    2730:	mov	x1, x20
    2734:	bl	0 <ctf_enum_iter>
    2738:	ldr	x21, [sp, #16]
    273c:	cbnz	w0, 275c <ctf_add_type_internal+0x53c>
    2740:	adrp	x2, 0 <ctf_create>
    2744:	add	x2, x2, #0x0
    2748:	sub	x3, x29, #0x30
    274c:	mov	x0, x19
    2750:	mov	x1, x24
    2754:	bl	0 <ctf_enum_iter>
    2758:	cbz	w0, 281c <ctf_add_type_internal+0x5fc>
    275c:	adrp	x0, 0 <ctf_create>
    2760:	add	x0, x0, #0x0
    2764:	mov	x1, x21
    2768:	mov	x2, x24
    276c:	bl	0 <ctf_dprintf>
    2770:	b	2518 <ctf_add_type_internal+0x2f8>
    2774:	cmn	x24, #0x1
    2778:	b.ne	2824 <ctf_add_type_internal+0x604>  // b.any
    277c:	ldr	w1, [sp, #12]
    2780:	ldr	x2, [sp, #16]
    2784:	mov	x0, x19
    2788:	mov	w3, w28
    278c:	bl	19e8 <ctf_add_forward>
    2790:	b	2818 <ctf_add_type_internal+0x5f8>
    2794:	ldur	x0, [x29, #-16]
    2798:	mov	x1, x20
    279c:	bl	0 <ctf_type_reference>
    27a0:	ldur	x1, [x29, #-16]
    27a4:	mov	x2, x0
    27a8:	mov	x0, x19
    27ac:	mov	x3, x21
    27b0:	bl	2220 <ctf_add_type_internal>
    27b4:	cmn	x0, #0x1
    27b8:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    27bc:	cmn	x24, #0x1
    27c0:	b.ne	2824 <ctf_add_type_internal+0x604>  // b.any
    27c4:	ldr	w1, [sp, #12]
    27c8:	ldr	x2, [sp, #16]
    27cc:	mov	x3, x0
    27d0:	mov	x0, x19
    27d4:	bl	1a88 <ctf_add_typedef>
    27d8:	b	2818 <ctf_add_type_internal+0x5f8>
    27dc:	ldur	x0, [x29, #-16]
    27e0:	mov	x1, x20
    27e4:	bl	0 <ctf_type_reference>
    27e8:	ldur	x1, [x29, #-16]
    27ec:	mov	x2, x0
    27f0:	mov	x0, x19
    27f4:	mov	x3, x21
    27f8:	bl	2220 <ctf_add_type_internal>
    27fc:	cmn	x0, #0x1
    2800:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    2804:	ldr	w1, [sp, #12]
    2808:	mov	x2, x0
    280c:	add	x3, sp, #0x58
    2810:	mov	x0, x19
    2814:	bl	f00 <ctf_add_slice>
    2818:	mov	x24, x0
    281c:	cmn	x24, #0x1
    2820:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    2824:	ldur	x0, [x29, #-16]
    2828:	mov	x1, x20
    282c:	mov	x2, x19
    2830:	mov	x3, x24
    2834:	bl	0 <ctf_add_type_mapping>
    2838:	mov	x22, x24
    283c:	b	2480 <ctf_add_type_internal+0x260>
    2840:	ldr	w22, [sp, #12]
    2844:	ldr	x2, [sp, #16]
    2848:	add	x4, sp, #0x30
    284c:	mov	x0, x19
    2850:	mov	w1, w22
    2854:	mov	w3, w25
    2858:	bl	1048 <ctf_add_generic>
    285c:	cmn	x0, #0x1
    2860:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    2864:	mov	x24, x0
    2868:	ldr	x26, [sp, #48]
    286c:	ldur	x0, [x29, #-16]
    2870:	mov	x1, x20
    2874:	mov	x2, x19
    2878:	mov	x3, x24
    287c:	mov	w23, w22
    2880:	stp	x24, x26, [x29, #-64]
    2884:	bl	0 <ctf_add_type_mapping>
    2888:	ldur	x0, [x29, #-16]
    288c:	adrp	x2, 0 <ctf_create>
    2890:	add	x2, x2, #0x0
    2894:	sub	x3, x29, #0x48
    2898:	mov	x1, x20
    289c:	bl	0 <ctf_member_iter>
    28a0:	ldur	x8, [x29, #-16]
    28a4:	cmp	w0, #0x0
    28a8:	mov	x1, x20
    28ac:	cset	w22, ne  // ne = any
    28b0:	mov	x0, x8
    28b4:	bl	0 <ctf_type_size>
    28b8:	tbnz	x0, #63, 2a8c <ctf_add_type_internal+0x86c>
    28bc:	mov	w8, #0xffffffff            	// #-1
    28c0:	cmp	x0, x8
    28c4:	b.cc	2a08 <ctf_add_type_internal+0x7e8>  // b.lo, b.ul, b.last
    28c8:	lsr	x9, x0, #32
    28cc:	stp	w8, w9, [x26, #32]
    28d0:	str	w0, [x26, #40]
    28d4:	b	2a0c <ctf_add_type_internal+0x7ec>
    28d8:	mov	x0, x8
    28dc:	mov	x1, x20
    28e0:	bl	0 <ctf_type_size>
    28e4:	mov	x20, x0
    28e8:	mov	x0, x19
    28ec:	mov	x1, x24
    28f0:	bl	0 <ctf_type_size>
    28f4:	mov	x4, x0
    28f8:	adrp	x0, 0 <ctf_create>
    28fc:	add	x0, x0, #0x0
    2900:	mov	x1, x21
    2904:	mov	x2, x24
    2908:	mov	x3, x20
    290c:	bl	0 <ctf_dprintf>
    2910:	b	2518 <ctf_add_type_internal+0x2f8>
    2914:	ldr	w1, [sp, #12]
    2918:	ldr	x2, [sp, #16]
    291c:	mov	x0, x19
    2920:	bl	184c <ctf_add_enum>
    2924:	cmn	x0, #0x1
    2928:	stur	x0, [x29, #-64]
    292c:	b.eq	2a8c <ctf_add_type_internal+0x86c>  // b.none
    2930:	mov	x24, x0
    2934:	ldur	x0, [x29, #-16]
    2938:	adrp	x2, 0 <ctf_create>
    293c:	add	x2, x2, #0x0
    2940:	sub	x3, x29, #0x48
    2944:	mov	x1, x20
    2948:	bl	0 <ctf_enum_iter>
    294c:	cbnz	w0, 2a8c <ctf_add_type_internal+0x86c>
    2950:	b	2824 <ctf_add_type_internal+0x604>
    2954:	ldr	x2, [sp, #48]
    2958:	mov	x0, x19
    295c:	mov	x3, x21
    2960:	bl	2220 <ctf_add_type_internal>
    2964:	ldur	x1, [x29, #-16]
    2968:	ldr	x2, [sp, #56]
    296c:	str	x0, [sp, #48]
    2970:	mov	x0, x19
    2974:	mov	x3, x21
    2978:	bl	2220 <ctf_add_type_internal>
    297c:	cmn	x0, #0x1
    2980:	mov	x22, #0xffffffffffffffff    	// #-1
    2984:	str	x0, [sp, #56]
    2988:	b.eq	2480 <ctf_add_type_internal+0x260>  // b.none
    298c:	ldr	x8, [sp, #48]
    2990:	ldr	x21, [sp, #16]
    2994:	cmn	x8, #0x1
    2998:	b.eq	2480 <ctf_add_type_internal+0x260>  // b.none
    299c:	cbz	w26, 2a94 <ctf_add_type_internal+0x874>
    29a0:	add	x2, sp, #0x18
    29a4:	mov	x0, x19
    29a8:	mov	x1, x24
    29ac:	bl	0 <ctf_array_info>
    29b0:	cbnz	w0, 2a8c <ctf_add_type_internal+0x86c>
    29b4:	ldp	x8, x9, [sp, #48]
    29b8:	ldp	x10, x11, [sp, #24]
    29bc:	ldr	x12, [sp, #64]
    29c0:	ldr	x13, [sp, #40]
    29c4:	eor	x8, x8, x10
    29c8:	eor	x9, x9, x11
    29cc:	eor	x10, x12, x13
    29d0:	orr	x8, x8, x9
    29d4:	orr	x8, x8, x10
    29d8:	cbz	x8, 281c <ctf_add_type_internal+0x5fc>
    29dc:	ldp	x3, x4, [sp, #48]
    29e0:	ldr	w5, [sp, #64]
    29e4:	ldp	x6, x7, [sp, #24]
    29e8:	ldr	w8, [sp, #40]
    29ec:	adrp	x0, 0 <ctf_create>
    29f0:	add	x0, x0, #0x0
    29f4:	mov	x1, x21
    29f8:	mov	x2, x24
    29fc:	str	w8, [sp]
    2a00:	bl	0 <ctf_dprintf>
    2a04:	b	2518 <ctf_add_type_internal+0x2f8>
    2a08:	str	w0, [x26, #32]
    2a0c:	ldr	w10, [sp, #8]
    2a10:	cmp	w23, #0x0
    2a14:	ldr	x23, [x26, #56]
    2a18:	lsl	w8, w25, #26
    2a1c:	cset	w9, ne  // ne = any
    2a20:	bfi	w8, w9, #25, #1
    2a24:	bfxil	w8, w10, #0, #24
    2a28:	str	w8, [x26, #28]
    2a2c:	cbz	x23, 2a88 <ctf_add_type_internal+0x868>
    2a30:	str	x19, [sp, #24]
    2a34:	ldur	x0, [x29, #-16]
    2a38:	ldr	x1, [x23, #24]
    2a3c:	add	x2, sp, #0x18
    2a40:	bl	0 <ctf_type_mapping>
    2a44:	cbz	x0, 2a50 <ctf_add_type_internal+0x830>
    2a48:	str	x0, [x23, #24]
    2a4c:	b	2a80 <ctf_add_type_internal+0x860>
    2a50:	ldur	x1, [x29, #-16]
    2a54:	ldr	x2, [x23, #24]
    2a58:	mov	x0, x19
    2a5c:	mov	x3, x21
    2a60:	bl	2220 <ctf_add_type_internal>
    2a64:	cmn	x0, #0x1
    2a68:	str	x0, [x23, #24]
    2a6c:	b.ne	2a80 <ctf_add_type_internal+0x860>  // b.any
    2a70:	mov	x0, x19
    2a74:	bl	0 <ctf_errno>
    2a78:	cmp	w0, #0x41b
    2a7c:	cinc	w22, w22, ne  // ne = any
    2a80:	ldr	x23, [x23, #8]
    2a84:	cbnz	x23, 2a30 <ctf_add_type_internal+0x810>
    2a88:	cbz	w22, 281c <ctf_add_type_internal+0x5fc>
    2a8c:	mov	x22, #0xffffffffffffffff    	// #-1
    2a90:	b	2480 <ctf_add_type_internal+0x260>
    2a94:	ldr	w1, [sp, #12]
    2a98:	add	x2, sp, #0x30
    2a9c:	mov	x0, x19
    2aa0:	bl	13bc <ctf_add_array>
    2aa4:	b	2818 <ctf_add_type_internal+0x5f8>

0000000000002aa8 <ctf_gzwrite>:
    2aa8:	stp	x29, x30, [sp, #-48]!
    2aac:	stp	x22, x21, [sp, #16]
    2ab0:	stp	x20, x19, [sp, #32]
    2ab4:	ldr	x21, [x0, #8]
    2ab8:	mov	x20, x1
    2abc:	mov	x19, x0
    2ac0:	mov	w22, #0x34                  	// #52
    2ac4:	mov	x29, sp
    2ac8:	mov	x0, x20
    2acc:	mov	x1, x21
    2ad0:	mov	w2, w22
    2ad4:	bl	0 <gzwrite>
    2ad8:	cmp	w0, #0x0
    2adc:	b.le	2b2c <ctf_gzwrite+0x84>
    2ae0:	sxtw	x8, w0
    2ae4:	subs	x22, x22, x8
    2ae8:	add	x21, x21, x8
    2aec:	b.ne	2ac8 <ctf_gzwrite+0x20>  // b.any
    2af0:	ldr	x21, [x19, #416]
    2af4:	cbz	x21, 2b24 <ctf_gzwrite+0x7c>
    2af8:	ldr	x22, [x19, #408]
    2afc:	mov	x0, x20
    2b00:	mov	x1, x22
    2b04:	mov	w2, w21
    2b08:	bl	0 <gzwrite>
    2b0c:	cmp	w0, #0x0
    2b10:	b.le	2b2c <ctf_gzwrite+0x84>
    2b14:	sxtw	x8, w0
    2b18:	subs	x21, x21, x8
    2b1c:	add	x22, x22, x8
    2b20:	b.ne	2afc <ctf_gzwrite+0x54>  // b.any
    2b24:	mov	w0, wzr
    2b28:	b	2b3c <ctf_gzwrite+0x94>
    2b2c:	bl	0 <__errno_location>
    2b30:	ldr	w1, [x0]
    2b34:	mov	x0, x19
    2b38:	bl	0 <ctf_set_errno>
    2b3c:	ldp	x20, x19, [sp, #32]
    2b40:	ldp	x22, x21, [sp, #16]
    2b44:	ldp	x29, x30, [sp], #48
    2b48:	ret

0000000000002b4c <ctf_compress_write>:
    2b4c:	sub	sp, sp, #0x90
    2b50:	stp	x29, x30, [sp, #80]
    2b54:	stp	x24, x23, [sp, #96]
    2b58:	stp	x22, x21, [sp, #112]
    2b5c:	stp	x20, x19, [sp, #128]
    2b60:	add	x29, sp, #0x50
    2b64:	mov	w21, w1
    2b68:	mov	x19, x0
    2b6c:	bl	2f0 <ctf_serialize>
    2b70:	tbnz	w0, #31, 2be0 <ctf_compress_write+0x94>
    2b74:	ldr	x8, [x19, #8]
    2b78:	ldp	q0, q1, [x8]
    2b7c:	ldr	q2, [x8, #32]
    2b80:	ldr	w8, [x8, #48]
    2b84:	stp	q0, q1, [sp, #16]
    2b88:	ldrb	w9, [sp, #19]
    2b8c:	str	w8, [sp, #64]
    2b90:	str	q2, [sp, #48]
    2b94:	orr	w8, w9, #0x1
    2b98:	strb	w8, [sp, #19]
    2b9c:	ldr	x0, [x19, #416]
    2ba0:	bl	0 <compressBound>
    2ba4:	str	x0, [sp, #8]
    2ba8:	bl	0 <malloc>
    2bac:	cbz	x0, 2be8 <ctf_compress_write+0x9c>
    2bb0:	ldp	x2, x3, [x19, #408]
    2bb4:	add	x1, sp, #0x8
    2bb8:	mov	x20, x0
    2bbc:	bl	0 <compress>
    2bc0:	cbz	w0, 2bfc <ctf_compress_write+0xb0>
    2bc4:	bl	0 <zError>
    2bc8:	mov	x1, x0
    2bcc:	adrp	x0, 0 <ctf_create>
    2bd0:	add	x0, x0, #0x0
    2bd4:	bl	0 <ctf_dprintf>
    2bd8:	mov	w1, #0x413                 	// #1043
    2bdc:	b	2c74 <ctf_compress_write+0x128>
    2be0:	mov	w19, #0xffffffff            	// #-1
    2be4:	b	2c88 <ctf_compress_write+0x13c>
    2be8:	mov	w1, #0x3f6                 	// #1014
    2bec:	mov	x0, x19
    2bf0:	bl	0 <ctf_set_errno>
    2bf4:	mov	x19, x0
    2bf8:	b	2c88 <ctf_compress_write+0x13c>
    2bfc:	add	x22, sp, #0x10
    2c00:	mov	w24, #0x34                  	// #52
    2c04:	mov	w23, #0x34                  	// #52
    2c08:	mov	w0, w21
    2c0c:	mov	x1, x22
    2c10:	mov	x2, x23
    2c14:	bl	0 <write>
    2c18:	tbnz	x0, #63, 2c6c <ctf_compress_write+0x120>
    2c1c:	sub	x23, x23, x0
    2c20:	cmp	x23, #0x0
    2c24:	madd	x22, x0, x24, x22
    2c28:	b.gt	2c08 <ctf_compress_write+0xbc>
    2c2c:	ldr	x2, [sp, #8]
    2c30:	cmp	x2, #0x1
    2c34:	b.lt	2c64 <ctf_compress_write+0x118>  // b.tstop
    2c38:	mov	x22, x20
    2c3c:	mov	w0, w21
    2c40:	mov	x1, x22
    2c44:	bl	0 <write>
    2c48:	tbnz	x0, #63, 2c6c <ctf_compress_write+0x120>
    2c4c:	ldr	x8, [sp, #8]
    2c50:	add	x22, x22, x0
    2c54:	sub	x2, x8, x0
    2c58:	cmp	x2, #0x0
    2c5c:	str	x2, [sp, #8]
    2c60:	b.gt	2c3c <ctf_compress_write+0xf0>
    2c64:	mov	w19, wzr
    2c68:	b	2c80 <ctf_compress_write+0x134>
    2c6c:	bl	0 <__errno_location>
    2c70:	ldr	w1, [x0]
    2c74:	mov	x0, x19
    2c78:	bl	0 <ctf_set_errno>
    2c7c:	mov	x19, x0
    2c80:	mov	x0, x20
    2c84:	bl	0 <free>
    2c88:	mov	w0, w19
    2c8c:	ldp	x20, x19, [sp, #128]
    2c90:	ldp	x22, x21, [sp, #112]
    2c94:	ldp	x24, x23, [sp, #96]
    2c98:	ldp	x29, x30, [sp, #80]
    2c9c:	add	sp, sp, #0x90
    2ca0:	ret

0000000000002ca4 <ctf_write_mem>:
    2ca4:	stp	x29, x30, [sp, #-64]!
    2ca8:	str	x23, [sp, #16]
    2cac:	stp	x22, x21, [sp, #32]
    2cb0:	stp	x20, x19, [sp, #48]
    2cb4:	mov	x29, sp
    2cb8:	mov	x22, x2
    2cbc:	mov	x21, x1
    2cc0:	mov	x20, x0
    2cc4:	bl	2f0 <ctf_serialize>
    2cc8:	tbnz	w0, #31, 2d9c <ctf_write_mem+0xf8>
    2ccc:	ldr	x0, [x20, #416]
    2cd0:	bl	0 <compressBound>
    2cd4:	ldr	x8, [x20, #416]
    2cd8:	cmp	x8, x22
    2cdc:	csel	x8, x8, x0, cc  // cc = lo, ul, last
    2ce0:	add	x0, x8, #0x34
    2ce4:	str	x8, [x29, #24]
    2ce8:	bl	0 <malloc>
    2cec:	mov	x19, x0
    2cf0:	cbz	x0, 2d48 <ctf_write_mem+0xa4>
    2cf4:	ldr	x8, [x20, #8]
    2cf8:	add	x0, x19, #0x34
    2cfc:	ldp	q2, q0, [x8, #16]
    2d00:	ldr	w9, [x8, #48]
    2d04:	ldr	q1, [x8]
    2d08:	mov	w8, #0x34                  	// #52
    2d0c:	stp	q2, q0, [x19, #16]
    2d10:	str	w9, [x19, #48]
    2d14:	str	q1, [x19]
    2d18:	str	x8, [x21]
    2d1c:	ldr	x23, [x20, #416]
    2d20:	ldrb	w8, [x19, #3]
    2d24:	cmp	x23, x22
    2d28:	b.cs	2d58 <ctf_write_mem+0xb4>  // b.hs, b.nlast
    2d2c:	and	w8, w8, #0xfe
    2d30:	strb	w8, [x19, #3]
    2d34:	ldr	x1, [x20, #408]
    2d38:	mov	x2, x23
    2d3c:	bl	0 <memcpy>
    2d40:	add	x8, x23, #0x34
    2d44:	b	2db0 <ctf_write_mem+0x10c>
    2d48:	mov	w1, #0xc                   	// #12
    2d4c:	mov	x0, x20
    2d50:	bl	0 <ctf_set_errno>
    2d54:	b	2db4 <ctf_write_mem+0x110>
    2d58:	orr	w8, w8, #0x1
    2d5c:	strb	w8, [x19, #3]
    2d60:	ldr	x2, [x20, #408]
    2d64:	add	x1, x29, #0x18
    2d68:	mov	x3, x23
    2d6c:	bl	0 <compress>
    2d70:	cbz	w0, 2da4 <ctf_write_mem+0x100>
    2d74:	bl	0 <zError>
    2d78:	mov	x1, x0
    2d7c:	adrp	x0, 0 <ctf_create>
    2d80:	add	x0, x0, #0x0
    2d84:	bl	0 <ctf_dprintf>
    2d88:	mov	w1, #0x413                 	// #1043
    2d8c:	mov	x0, x20
    2d90:	bl	0 <ctf_set_errno>
    2d94:	mov	x0, x19
    2d98:	bl	0 <free>
    2d9c:	mov	x19, xzr
    2da0:	b	2db4 <ctf_write_mem+0x110>
    2da4:	ldr	x8, [x29, #24]
    2da8:	ldr	x9, [x21]
    2dac:	add	x8, x9, x8
    2db0:	str	x8, [x21]
    2db4:	mov	x0, x19
    2db8:	ldp	x20, x19, [sp, #48]
    2dbc:	ldp	x22, x21, [sp, #32]
    2dc0:	ldr	x23, [sp, #16]
    2dc4:	ldp	x29, x30, [sp], #64
    2dc8:	ret

0000000000002dcc <ctf_write>:
    2dcc:	stp	x29, x30, [sp, #-48]!
    2dd0:	stp	x22, x21, [sp, #16]
    2dd4:	stp	x20, x19, [sp, #32]
    2dd8:	mov	x29, sp
    2ddc:	mov	w20, w1
    2de0:	mov	x19, x0
    2de4:	bl	2f0 <ctf_serialize>
    2de8:	tbnz	w0, #31, 2e64 <ctf_write+0x98>
    2dec:	ldr	x21, [x19, #8]
    2df0:	mov	w22, #0x34                  	// #52
    2df4:	mov	w0, w20
    2df8:	mov	x1, x21
    2dfc:	mov	x2, x22
    2e00:	bl	0 <write>
    2e04:	cmp	x0, #0x0
    2e08:	b.le	2e50 <ctf_write+0x84>
    2e0c:	subs	x22, x22, x0
    2e10:	add	x21, x21, x0
    2e14:	b.ne	2df4 <ctf_write+0x28>  // b.any
    2e18:	ldr	x21, [x19, #416]
    2e1c:	cbz	x21, 2e48 <ctf_write+0x7c>
    2e20:	ldr	x22, [x19, #408]
    2e24:	mov	w0, w20
    2e28:	mov	x1, x22
    2e2c:	mov	x2, x21
    2e30:	bl	0 <write>
    2e34:	cmp	x0, #0x0
    2e38:	b.le	2e50 <ctf_write+0x84>
    2e3c:	subs	x21, x21, x0
    2e40:	add	x22, x22, x0
    2e44:	b.ne	2e24 <ctf_write+0x58>  // b.any
    2e48:	mov	w0, wzr
    2e4c:	b	2e68 <ctf_write+0x9c>
    2e50:	bl	0 <__errno_location>
    2e54:	ldr	w1, [x0]
    2e58:	mov	x0, x19
    2e5c:	bl	0 <ctf_set_errno>
    2e60:	b	2e68 <ctf_write+0x9c>
    2e64:	mov	w0, #0xffffffff            	// #-1
    2e68:	ldp	x20, x19, [sp, #32]
    2e6c:	ldp	x22, x21, [sp, #16]
    2e70:	ldp	x29, x30, [sp], #48
    2e74:	ret

0000000000002e78 <membcmp>:
    2e78:	sub	sp, sp, #0x40
    2e7c:	stp	x29, x30, [sp, #16]
    2e80:	str	x21, [sp, #32]
    2e84:	stp	x20, x19, [sp, #48]
    2e88:	ldp	x8, x1, [x3]
    2e8c:	mov	x19, x0
    2e90:	mov	x21, x3
    2e94:	mov	x20, x2
    2e98:	mov	x3, sp
    2e9c:	mov	x0, x8
    2ea0:	mov	x2, x19
    2ea4:	add	x29, sp, #0x10
    2ea8:	bl	0 <ctf_member_info>
    2eac:	tbnz	w0, #31, 2ec4 <membcmp+0x4c>
    2eb0:	ldr	x2, [sp, #8]
    2eb4:	cmp	x2, x20
    2eb8:	b.ne	2ee8 <membcmp+0x70>  // b.any
    2ebc:	mov	w0, wzr
    2ec0:	b	2f00 <membcmp+0x88>
    2ec4:	ldr	x0, [x21]
    2ec8:	bl	0 <ctf_errno>
    2ecc:	bl	0 <ctf_errmsg>
    2ed0:	mov	x2, x0
    2ed4:	adrp	x0, 0 <ctf_create>
    2ed8:	add	x0, x0, #0x0
    2edc:	mov	x1, x19
    2ee0:	bl	0 <ctf_dprintf>
    2ee4:	b	2efc <membcmp+0x84>
    2ee8:	adrp	x0, 0 <ctf_create>
    2eec:	add	x0, x0, #0x0
    2ef0:	mov	x1, x19
    2ef4:	mov	x3, x20
    2ef8:	bl	0 <ctf_dprintf>
    2efc:	mov	w0, #0x1                   	// #1
    2f00:	ldp	x20, x19, [sp, #48]
    2f04:	ldr	x21, [sp, #32]
    2f08:	ldp	x29, x30, [sp, #16]
    2f0c:	add	sp, sp, #0x40
    2f10:	ret

0000000000002f14 <membadd>:
    2f14:	stp	x29, x30, [sp, #-64]!
    2f18:	str	x23, [sp, #16]
    2f1c:	mov	x23, x0
    2f20:	mov	w0, #0x30                  	// #48
    2f24:	stp	x22, x21, [sp, #32]
    2f28:	stp	x20, x19, [sp, #48]
    2f2c:	mov	x29, sp
    2f30:	mov	x19, x3
    2f34:	mov	x21, x2
    2f38:	mov	x22, x1
    2f3c:	bl	0 <malloc>
    2f40:	cbz	x0, 2f60 <membadd+0x4c>
    2f44:	mov	x20, x0
    2f48:	cbz	x23, 2f70 <membadd+0x5c>
    2f4c:	mov	x0, x23
    2f50:	bl	0 <strdup>
    2f54:	cbnz	x0, 2f74 <membadd+0x60>
    2f58:	mov	x0, x20
    2f5c:	bl	0 <free>
    2f60:	ldr	x0, [x19]
    2f64:	mov	w1, #0xb                   	// #11
    2f68:	bl	0 <ctf_set_errno>
    2f6c:	b	2fa8 <membadd+0x94>
    2f70:	mov	x0, xzr
    2f74:	mov	w8, #0xffffffff            	// #-1
    2f78:	stp	x0, x22, [x20, #16]
    2f7c:	str	x21, [x20, #32]
    2f80:	str	w8, [x20, #40]
    2f84:	ldr	x8, [x19, #16]
    2f88:	mov	x1, x20
    2f8c:	add	x0, x8, #0x30
    2f90:	bl	0 <ctf_list_append>
    2f94:	ldr	x8, [x19]
    2f98:	mov	w0, wzr
    2f9c:	ldr	w9, [x8, #552]
    2fa0:	orr	w9, w9, #0x4
    2fa4:	str	w9, [x8, #552]
    2fa8:	ldp	x20, x19, [sp, #48]
    2fac:	ldp	x22, x21, [sp, #32]
    2fb0:	ldr	x23, [sp, #16]
    2fb4:	ldp	x29, x30, [sp], #64
    2fb8:	ret

0000000000002fbc <enumcmp>:
    2fbc:	stp	x29, x30, [sp, #-48]!
    2fc0:	str	x21, [sp, #16]
    2fc4:	stp	x20, x19, [sp, #32]
    2fc8:	mov	w20, w1
    2fcc:	ldp	x8, x1, [x2]
    2fd0:	mov	x29, sp
    2fd4:	mov	x19, x0
    2fd8:	mov	x21, x2
    2fdc:	add	x3, x29, #0x1c
    2fe0:	mov	x0, x8
    2fe4:	mov	x2, x19
    2fe8:	bl	0 <ctf_enum_value>
    2fec:	tbnz	w0, #31, 3004 <enumcmp+0x48>
    2ff0:	ldr	w2, [x29, #28]
    2ff4:	cmp	w2, w20
    2ff8:	b.ne	3028 <enumcmp+0x6c>  // b.any
    2ffc:	mov	w0, wzr
    3000:	b	303c <enumcmp+0x80>
    3004:	ldr	x0, [x21]
    3008:	bl	0 <ctf_errno>
    300c:	bl	0 <ctf_errmsg>
    3010:	mov	x2, x0
    3014:	adrp	x0, 0 <ctf_create>
    3018:	add	x0, x0, #0x0
    301c:	mov	x1, x19
    3020:	bl	0 <ctf_dprintf>
    3024:	b	3038 <enumcmp+0x7c>
    3028:	adrp	x0, 0 <ctf_create>
    302c:	add	x0, x0, #0x0
    3030:	mov	w1, w20
    3034:	bl	0 <ctf_dprintf>
    3038:	mov	w0, #0x1                   	// #1
    303c:	ldp	x20, x19, [sp, #32]
    3040:	ldr	x21, [sp, #16]
    3044:	ldp	x29, x30, [sp], #48
    3048:	ret

000000000000304c <enumadd>:
    304c:	stp	x29, x30, [sp, #-16]!
    3050:	mov	w3, w1
    3054:	ldp	x8, x1, [x2]
    3058:	mov	x2, x0
    305c:	mov	x29, sp
    3060:	mov	x0, x8
    3064:	bl	1b48 <ctf_add_enumerator>
    3068:	lsr	w0, w0, #31
    306c:	ldp	x29, x30, [sp], #16
    3070:	ret

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	movi	v0.2d, #0x0
   4:	mov	x8, #0xffffffffffffffff    	// #-1
   8:	str	xzr, [x0, #96]
   c:	stp	q0, q0, [x0, #64]
  10:	stp	q0, q0, [x0, #32]
  14:	stp	q0, q0, [x0]
  18:	stp	x8, x8, [x0, #64]
  1c:	str	xzr, [x0, #80]
  20:	ret

0000000000000024 <ctf_decl_fini>:
  24:	stp	x29, x30, [sp, #-48]!
  28:	stp	x20, x19, [sp, #32]
  2c:	mov	x19, x0
  30:	mov	x20, xzr
  34:	str	x21, [sp, #16]
  38:	mov	x29, sp
  3c:	add	x8, x19, x20, lsl #4
  40:	ldr	x0, [x8, #8]
  44:	cbz	x0, 58 <ctf_decl_fini+0x34>
  48:	ldr	x21, [x0, #8]
  4c:	bl	0 <free>
  50:	mov	x0, x21
  54:	cbnz	x21, 48 <ctf_decl_fini+0x24>
  58:	add	x20, x20, #0x1
  5c:	cmp	x20, #0x4
  60:	b.ne	3c <ctf_decl_fini+0x18>  // b.any
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

0000000000000074 <ctf_decl_push>:
  74:	sub	sp, sp, #0x70
  78:	stp	x29, x30, [sp, #32]
  7c:	add	x29, sp, #0x20
  80:	stp	x20, x19, [sp, #96]
  84:	mov	x19, x0
  88:	str	x1, [x29, #24]
  8c:	add	x0, x29, #0x18
  90:	mov	x1, x2
  94:	str	x25, [sp, #48]
  98:	stp	x24, x23, [sp, #64]
  9c:	stp	x22, x21, [sp, #80]
  a0:	mov	x21, x2
  a4:	bl	0 <ctf_lookup_by_id>
  a8:	ldr	x8, [x29, #24]
  ac:	cbz	x0, 118 <ctf_decl_push+0xa4>
  b0:	ldr	x8, [x8]
  b4:	mov	x22, x0
  b8:	ldr	w0, [x0, #4]
  bc:	ldr	x8, [x8]
  c0:	blr	x8
  c4:	sub	w8, w0, #0x3
  c8:	mov	w20, w0
  cc:	mov	w23, wzr
  d0:	cmp	w8, #0xb
  d4:	mov	w25, #0x1                   	// #1
  d8:	b.hi	278 <ctf_decl_push+0x204>  // b.pmore
  dc:	adrp	x9, 0 <ctf_decl_init>
  e0:	add	x9, x9, #0x0
  e4:	adr	x10, f8 <ctf_decl_push+0x84>
  e8:	ldrb	w11, [x9, x8]
  ec:	add	x10, x10, x11, lsl #2
  f0:	mov	w24, w23
  f4:	br	x10
  f8:	ldr	x1, [x29, #24]
  fc:	ldr	w2, [x22, #8]
 100:	mov	x0, x19
 104:	bl	74 <ctf_decl_push>
 108:	ldr	w24, [x19, #80]
 10c:	mov	w25, #0x1                   	// #1
 110:	mov	w23, #0x1                   	// #1
 114:	b	1e0 <ctf_decl_push+0x16c>
 118:	ldr	w8, [x8, #556]
 11c:	b	250 <ctf_decl_push+0x1dc>
 120:	ldr	x1, [x29, #24]
 124:	ldr	w2, [x22, #8]
 128:	mov	x0, x19
 12c:	bl	74 <ctf_decl_push>
 130:	mov	w23, wzr
 134:	mov	w25, #0x1                   	// #1
 138:	mov	w24, #0x1                   	// #1
 13c:	b	1e0 <ctf_decl_push+0x16c>
 140:	ldr	x0, [x29, #24]
 144:	add	x2, sp, #0x8
 148:	mov	x1, x21
 14c:	bl	0 <ctf_array_info>
 150:	ldr	x1, [x29, #24]
 154:	ldr	x2, [sp, #8]
 158:	mov	x0, x19
 15c:	bl	74 <ctf_decl_push>
 160:	ldr	w25, [sp, #24]
 164:	mov	w23, wzr
 168:	mov	w24, #0x2                   	// #2
 16c:	b	1e0 <ctf_decl_push+0x16c>
 170:	ldr	x1, [x29, #24]
 174:	ldr	w2, [x22, #8]
 178:	mov	x0, x19
 17c:	bl	74 <ctf_decl_push>
 180:	mov	w23, wzr
 184:	mov	w24, #0x3                   	// #3
 188:	b	1dc <ctf_decl_push+0x168>
 18c:	ldr	x0, [x29, #24]
 190:	ldr	w1, [x22]
 194:	bl	0 <ctf_strptr>
 198:	ldrb	w8, [x0]
 19c:	cbnz	w8, 1d4 <ctf_decl_push+0x160>
 1a0:	ldr	x1, [x29, #24]
 1a4:	ldr	w2, [x22, #8]
 1a8:	mov	x0, x19
 1ac:	bl	74 <ctf_decl_push>
 1b0:	b	254 <ctf_decl_push+0x1e0>
 1b4:	ldr	x22, [x29, #24]
 1b8:	mov	x1, x21
 1bc:	mov	x0, x22
 1c0:	bl	0 <ctf_type_reference>
 1c4:	mov	x2, x0
 1c8:	mov	x0, x19
 1cc:	mov	x1, x22
 1d0:	bl	74 <ctf_decl_push>
 1d4:	mov	w23, wzr
 1d8:	mov	w24, wzr
 1dc:	mov	w25, #0x1                   	// #1
 1e0:	mov	w0, #0x20                  	// #32
 1e4:	bl	0 <malloc>
 1e8:	cbz	x0, 24c <ctf_decl_push+0x1d8>
 1ec:	mov	x1, x0
 1f0:	str	x21, [x0, #16]
 1f4:	stp	w20, w25, [x0, #24]
 1f8:	add	x0, x19, w24, uxtw #4
 1fc:	ldr	x8, [x0, #8]
 200:	cbnz	x8, 21c <ctf_decl_push+0x1a8>
 204:	ldr	w8, [x19, #84]
 208:	mov	w9, w24
 20c:	add	x9, x19, x9, lsl #2
 210:	add	w10, w8, #0x1
 214:	str	w10, [x19, #84]
 218:	str	w8, [x9, #64]
 21c:	cmp	w24, #0x1
 220:	b.hi	234 <ctf_decl_push+0x1c0>  // b.pmore
 224:	ldr	w8, [x19, #80]
 228:	cmp	w24, w8
 22c:	b.ls	234 <ctf_decl_push+0x1c0>  // b.plast
 230:	str	w24, [x19, #80]
 234:	cmp	w20, #0x4
 238:	b.eq	244 <ctf_decl_push+0x1d0>  // b.none
 23c:	cbz	w23, 270 <ctf_decl_push+0x1fc>
 240:	cbnz	w24, 270 <ctf_decl_push+0x1fc>
 244:	bl	0 <ctf_list_prepend>
 248:	b	254 <ctf_decl_push+0x1e0>
 24c:	mov	w8, #0xb                   	// #11
 250:	str	w8, [x19, #96]
 254:	ldp	x20, x19, [sp, #96]
 258:	ldp	x22, x21, [sp, #80]
 25c:	ldp	x24, x23, [sp, #64]
 260:	ldr	x25, [sp, #48]
 264:	ldp	x29, x30, [sp, #32]
 268:	add	sp, sp, #0x70
 26c:	ret
 270:	bl	0 <ctf_list_append>
 274:	b	254 <ctf_decl_push+0x1e0>
 278:	mov	w24, w23
 27c:	b	1e0 <ctf_decl_push+0x16c>

0000000000000280 <ctf_decl_sprintf>:
 280:	sub	sp, sp, #0x120
 284:	stp	x29, x30, [sp, #256]
 288:	stp	x28, x19, [sp, #272]
 28c:	stp	x2, x3, [sp, #128]
 290:	stp	x4, x5, [sp, #144]
 294:	stp	x6, x7, [sp, #160]
 298:	stp	q1, q2, [sp, #16]
 29c:	stp	q3, q4, [sp, #48]
 2a0:	str	q0, [sp]
 2a4:	stp	q5, q6, [sp, #80]
 2a8:	str	q7, [sp, #112]
 2ac:	ldr	w8, [x0, #100]
 2b0:	add	x29, sp, #0x100
 2b4:	cbnz	w8, 344 <ctf_decl_sprintf+0xc4>
 2b8:	mov	x8, #0xffffffffffffffd0    	// #-48
 2bc:	mov	x10, sp
 2c0:	add	x11, sp, #0x80
 2c4:	movk	x8, #0xff80, lsl #32
 2c8:	add	x9, x29, #0x20
 2cc:	add	x10, x10, #0x80
 2d0:	add	x11, x11, #0x30
 2d4:	stp	x10, x8, [x29, #-16]
 2d8:	stp	x9, x11, [x29, #-32]
 2dc:	ldp	q0, q1, [x29, #-32]
 2e0:	mov	x19, x0
 2e4:	sub	x0, x29, #0x28
 2e8:	sub	x2, x29, #0x50
 2ec:	stp	q0, q1, [x29, #-80]
 2f0:	bl	0 <vasprintf>
 2f4:	cmp	w0, #0x1
 2f8:	b.lt	314 <ctf_decl_sprintf+0x94>  // b.tstop
 2fc:	ldr	x0, [x19, #88]
 300:	ldur	x1, [x29, #-40]
 304:	bl	0 <ctf_str_append>
 308:	cbz	x0, 318 <ctf_decl_sprintf+0x98>
 30c:	str	x0, [x19, #88]
 310:	b	318 <ctf_decl_sprintf+0x98>
 314:	tbnz	w0, #31, 328 <ctf_decl_sprintf+0xa8>
 318:	ldr	x8, [x19, #88]
 31c:	cbnz	x8, 33c <ctf_decl_sprintf+0xbc>
 320:	mov	x0, xzr
 324:	b	32c <ctf_decl_sprintf+0xac>
 328:	ldr	x0, [x19, #88]
 32c:	bl	0 <free>
 330:	mov	w8, #0x1                   	// #1
 334:	str	xzr, [x19, #88]
 338:	str	w8, [x19, #100]
 33c:	ldur	x0, [x29, #-40]
 340:	bl	0 <free>
 344:	ldp	x28, x19, [sp, #272]
 348:	ldp	x29, x30, [sp, #256]
 34c:	add	sp, sp, #0x120
 350:	ret

0000000000000354 <ctf_decl_buf>:
 354:	ldr	x0, [x0, #88]
 358:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	sub	w8, w0, #0x3e8
   8:	cmp	w8, #0x33
   c:	mov	x29, sp
  10:	b.hi	24 <ctf_errmsg+0x24>  // b.pmore
  14:	adrp	x9, 0 <ctf_errmsg>
  18:	add	x9, x9, #0x0
  1c:	ldr	x0, [x9, w8, uxtw #3]
  20:	b	28 <ctf_errmsg+0x28>
  24:	bl	0 <ctf_strerror>
  28:	adrp	x8, 0 <ctf_errmsg>
  2c:	add	x8, x8, #0x0
  30:	cmp	x0, #0x0
  34:	csel	x0, x8, x0, eq  // eq = none
  38:	ldp	x29, x30, [sp], #16
  3c:	ret

0000000000000040 <ctf_errno>:
  40:	ldr	w0, [x0, #556]
  44:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hash_integer>:
   0:	adrp	x8, 0 <htab_hash_pointer>
   4:	ldr	x1, [x8]
   8:	ldr	x0, [x0]
   c:	br	x1

0000000000000010 <ctf_hash_eq_integer>:
  10:	adrp	x8, 0 <htab_eq_pointer>
  14:	ldr	x0, [x0]
  18:	ldr	x2, [x8]
  1c:	ldr	x1, [x1]
  20:	br	x2

0000000000000024 <ctf_hash_string>:
  24:	ldr	x0, [x0]
  28:	b	0 <htab_hash_string>

000000000000002c <ctf_hash_eq_string>:
  2c:	stp	x29, x30, [sp, #-16]!
  30:	ldr	x0, [x0]
  34:	ldr	x1, [x1]
  38:	mov	x29, sp
  3c:	bl	0 <strcmp>
  40:	cmp	w0, #0x0
  44:	cset	w0, eq  // eq = none
  48:	ldp	x29, x30, [sp], #16
  4c:	ret

0000000000000050 <ctf_hash_type_mapping_key>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	ldr	x19, [x0]
  5c:	adrp	x20, 0 <htab_hash_pointer>
  60:	ldr	x8, [x20]
  64:	mov	x29, sp
  68:	ldr	x0, [x19]
  6c:	blr	x8
  70:	ldr	x8, [x19, #8]
  74:	ldr	x9, [x20]
  78:	mov	w19, w0
  7c:	mov	x0, x8
  80:	blr	x9
  84:	mov	w8, #0x3b                  	// #59
  88:	madd	w0, w0, w8, w19
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret

0000000000000098 <ctf_hash_eq_type_mapping_key>:
  98:	ldr	x8, [x0]
  9c:	ldr	x9, [x1]
  a0:	ldr	x10, [x8]
  a4:	ldr	x11, [x9]
  a8:	cmp	x10, x11
  ac:	b.eq	b8 <ctf_hash_eq_type_mapping_key+0x20>  // b.none
  b0:	mov	w0, wzr
  b4:	ret
  b8:	ldr	x8, [x8, #8]
  bc:	ldr	x9, [x9, #8]
  c0:	cmp	x8, x9
  c4:	cset	w0, eq  // eq = none
  c8:	ret

00000000000000cc <ctf_dynhash_create>:
  cc:	stp	x29, x30, [sp, #-64]!
  d0:	str	x23, [sp, #16]
  d4:	mov	x23, x0
  d8:	mov	w0, #0x18                  	// #24
  dc:	stp	x22, x21, [sp, #32]
  e0:	stp	x20, x19, [sp, #48]
  e4:	mov	x29, sp
  e8:	mov	x19, x3
  ec:	mov	x21, x2
  f0:	mov	x22, x1
  f4:	bl	0 <malloc>
  f8:	mov	x20, x0
  fc:	cbz	x0, 144 <ctf_dynhash_create+0x78>
 100:	adrp	x3, 0 <ctf_hash_integer>
 104:	adrp	x4, 0 <xcalloc>
 108:	adrp	x5, 0 <free>
 10c:	add	x3, x3, #0x0
 110:	add	x4, x4, #0x0
 114:	add	x5, x5, #0x0
 118:	mov	w0, #0x7                   	// #7
 11c:	mov	x1, x23
 120:	mov	x2, x22
 124:	bl	0 <htab_create_alloc>
 128:	str	x0, [x20]
 12c:	cbz	x0, 138 <ctf_dynhash_create+0x6c>
 130:	stp	x21, x19, [x20, #8]
 134:	b	144 <ctf_dynhash_create+0x78>
 138:	mov	x0, x20
 13c:	bl	0 <free>
 140:	mov	x20, xzr
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #48]
 14c:	ldp	x22, x21, [sp, #32]
 150:	ldr	x23, [sp, #16]
 154:	ldp	x29, x30, [sp], #64
 158:	ret

000000000000015c <ctf_dynhash_item_free>:
 15c:	stp	x29, x30, [sp, #-32]!
 160:	ldr	x8, [x0, #16]
 164:	str	x19, [sp, #16]
 168:	mov	x19, x0
 16c:	mov	x29, sp
 170:	cbz	x8, 180 <ctf_dynhash_item_free+0x24>
 174:	ldr	x0, [x19]
 178:	cbz	x0, 180 <ctf_dynhash_item_free+0x24>
 17c:	blr	x8
 180:	ldr	x8, [x19, #24]
 184:	cbz	x8, 194 <ctf_dynhash_item_free+0x38>
 188:	ldr	x0, [x19, #8]
 18c:	cbz	x0, 194 <ctf_dynhash_item_free+0x38>
 190:	blr	x8
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <free>

00000000000001a4 <ctf_dynhash_insert>:
 1a4:	stp	x29, x30, [sp, #-32]!
 1a8:	str	x19, [sp, #16]
 1ac:	mov	x19, x0
 1b0:	ldr	x0, [x0]
 1b4:	ldp	x3, x4, [x19, #8]
 1b8:	mov	x29, sp
 1bc:	bl	1ec <ctf_hashtab_insert>
 1c0:	cbz	x0, 1d8 <ctf_dynhash_insert+0x34>
 1c4:	ldur	q0, [x19, #8]
 1c8:	mov	x8, x0
 1cc:	mov	w0, wzr
 1d0:	str	q0, [x8, #16]
 1d4:	b	1e0 <ctf_dynhash_insert+0x3c>
 1d8:	bl	0 <__errno_location>
 1dc:	ldr	w0, [x0]
 1e0:	ldr	x19, [sp, #16]
 1e4:	ldp	x29, x30, [sp], #32
 1e8:	ret

00000000000001ec <ctf_hashtab_insert>:
 1ec:	sub	sp, sp, #0x60
 1f0:	stp	x20, x19, [sp, #80]
 1f4:	mov	x19, x2
 1f8:	mov	x20, x1
 1fc:	stp	x1, xzr, [sp]
 200:	mov	x1, sp
 204:	mov	w2, #0x1                   	// #1
 208:	stp	x29, x30, [sp, #32]
 20c:	str	x23, [sp, #48]
 210:	stp	x22, x21, [sp, #64]
 214:	add	x29, sp, #0x20
 218:	mov	x21, x4
 21c:	mov	x23, x3
 220:	stp	xzr, xzr, [sp, #16]
 224:	bl	0 <htab_find_slot>
 228:	cbz	x0, 258 <ctf_hashtab_insert+0x6c>
 22c:	ldr	x8, [x0]
 230:	mov	x22, x0
 234:	cbz	x8, 270 <ctf_hashtab_insert+0x84>
 238:	cbz	x23, 244 <ctf_hashtab_insert+0x58>
 23c:	ldr	x0, [x8]
 240:	blr	x23
 244:	cbz	x21, 280 <ctf_hashtab_insert+0x94>
 248:	ldr	x8, [x22]
 24c:	ldr	x0, [x8, #8]
 250:	blr	x21
 254:	b	280 <ctf_hashtab_insert+0x94>
 258:	bl	0 <__errno_location>
 25c:	mov	x8, x0
 260:	mov	w9, #0xfffffff4            	// #-12
 264:	mov	x0, xzr
 268:	str	w9, [x8]
 26c:	b	294 <ctf_hashtab_insert+0xa8>
 270:	mov	w0, #0x20                  	// #32
 274:	bl	0 <malloc>
 278:	str	x0, [x22]
 27c:	cbz	x0, 294 <ctf_hashtab_insert+0xa8>
 280:	ldr	x8, [x22]
 284:	str	x20, [x8]
 288:	ldr	x8, [x22]
 28c:	str	x19, [x8, #8]
 290:	ldr	x0, [x22]
 294:	ldp	x20, x19, [sp, #80]
 298:	ldp	x22, x21, [sp, #64]
 29c:	ldr	x23, [sp, #48]
 2a0:	ldp	x29, x30, [sp, #32]
 2a4:	add	sp, sp, #0x60
 2a8:	ret

00000000000002ac <ctf_dynhash_remove>:
 2ac:	sub	sp, sp, #0x30
 2b0:	stp	x29, x30, [sp, #32]
 2b4:	stp	xzr, xzr, [sp, #16]
 2b8:	stp	x1, xzr, [sp]
 2bc:	ldr	x0, [x0]
 2c0:	mov	x1, sp
 2c4:	add	x29, sp, #0x20
 2c8:	bl	0 <htab_remove_elt>
 2cc:	ldp	x29, x30, [sp, #32]
 2d0:	add	sp, sp, #0x30
 2d4:	ret

00000000000002d8 <ctf_dynhash_empty>:
 2d8:	ldr	x0, [x0]
 2dc:	b	0 <htab_empty>

00000000000002e0 <ctf_dynhash_lookup>:
 2e0:	sub	sp, sp, #0x30
 2e4:	stp	x29, x30, [sp, #32]
 2e8:	ldr	x0, [x0]
 2ec:	stp	x1, xzr, [sp]
 2f0:	mov	x1, sp
 2f4:	mov	w2, wzr
 2f8:	add	x29, sp, #0x20
 2fc:	stp	xzr, xzr, [sp, #16]
 300:	bl	0 <htab_find_slot>
 304:	cbz	x0, 310 <ctf_dynhash_lookup+0x30>
 308:	ldr	x8, [x0]
 30c:	ldr	x0, [x8, #8]
 310:	ldp	x29, x30, [sp, #32]
 314:	add	sp, sp, #0x30
 318:	ret

000000000000031c <ctf_dynhash_iter>:
 31c:	sub	sp, sp, #0x20
 320:	stp	x29, x30, [sp, #16]
 324:	stp	x1, x2, [sp]
 328:	ldr	x0, [x0]
 32c:	adrp	x1, 0 <ctf_hash_integer>
 330:	add	x1, x1, #0x0
 334:	mov	x2, sp
 338:	add	x29, sp, #0x10
 33c:	bl	0 <htab_traverse>
 340:	ldp	x29, x30, [sp, #16]
 344:	add	sp, sp, #0x20
 348:	ret

000000000000034c <ctf_hashtab_traverse>:
 34c:	stp	x29, x30, [sp, #-16]!
 350:	ldr	x8, [x0]
 354:	ldp	x9, x2, [x1]
 358:	mov	x29, sp
 35c:	ldp	x0, x8, [x8]
 360:	mov	x1, x8
 364:	blr	x9
 368:	mov	w0, #0x1                   	// #1
 36c:	ldp	x29, x30, [sp], #16
 370:	ret

0000000000000374 <ctf_dynhash_iter_remove>:
 374:	sub	sp, sp, #0x30
 378:	stp	x29, x30, [sp, #32]
 37c:	ldr	x0, [x0]
 380:	str	x2, [sp, #24]
 384:	add	x2, sp, #0x8
 388:	add	x29, sp, #0x20
 38c:	stp	x0, x1, [sp, #8]
 390:	adrp	x1, 0 <ctf_hash_integer>
 394:	add	x1, x1, #0x0
 398:	bl	0 <htab_traverse>
 39c:	ldp	x29, x30, [sp, #32]
 3a0:	add	sp, sp, #0x30
 3a4:	ret

00000000000003a8 <ctf_hashtab_traverse_remove>:
 3a8:	stp	x29, x30, [sp, #-32]!
 3ac:	stp	x20, x19, [sp, #16]
 3b0:	ldr	x8, [x0]
 3b4:	mov	x20, x1
 3b8:	mov	x19, x0
 3bc:	mov	x29, sp
 3c0:	ldp	x0, x1, [x8]
 3c4:	ldp	x8, x2, [x20, #8]
 3c8:	blr	x8
 3cc:	cbz	w0, 3dc <ctf_hashtab_traverse_remove+0x34>
 3d0:	ldr	x0, [x20]
 3d4:	mov	x1, x19
 3d8:	bl	0 <htab_clear_slot>
 3dc:	ldp	x20, x19, [sp, #16]
 3e0:	mov	w0, #0x1                   	// #1
 3e4:	ldp	x29, x30, [sp], #32
 3e8:	ret

00000000000003ec <ctf_dynhash_destroy>:
 3ec:	stp	x29, x30, [sp, #-32]!
 3f0:	str	x19, [sp, #16]
 3f4:	mov	x19, x0
 3f8:	mov	x29, sp
 3fc:	cbz	x0, 408 <ctf_dynhash_destroy+0x1c>
 400:	ldr	x0, [x19]
 404:	bl	0 <htab_delete>
 408:	mov	x0, x19
 40c:	ldr	x19, [sp, #16]
 410:	ldp	x29, x30, [sp], #32
 414:	b	0 <free>

0000000000000418 <ctf_hash_create>:
 418:	adrp	x3, 0 <free>
 41c:	adrp	x4, 0 <xcalloc>
 420:	add	x3, x3, #0x0
 424:	add	x4, x4, #0x0
 428:	mov	x5, x3
 42c:	b	0 <htab_create_alloc>

0000000000000430 <ctf_hash_size>:
 430:	stp	x29, x30, [sp, #-16]!
 434:	mov	x29, sp
 438:	bl	0 <htab_elements>
 43c:	ldp	x29, x30, [sp], #16
 440:	ret

0000000000000444 <ctf_hash_insert_type>:
 444:	stp	x29, x30, [sp, #-48]!
 448:	stp	x22, x21, [sp, #16]
 44c:	stp	x20, x19, [sp, #32]
 450:	mov	x21, x1
 454:	mov	x19, x0
 458:	mov	x0, x1
 45c:	mov	w1, w3
 460:	mov	x29, sp
 464:	mov	w22, w3
 468:	mov	w20, w2
 46c:	bl	0 <ctf_strraw>
 470:	cbz	w20, 4b4 <ctf_hash_insert_type+0x70>
 474:	mov	x1, x0
 478:	tbz	w22, #31, 488 <ctf_hash_insert_type+0x44>
 47c:	cbnz	x1, 488 <ctf_hash_insert_type+0x44>
 480:	ldr	x8, [x21, #128]
 484:	cbz	x8, 4c4 <ctf_hash_insert_type+0x80>
 488:	cbz	x1, 4bc <ctf_hash_insert_type+0x78>
 48c:	ldrb	w8, [x1]
 490:	cbz	w8, 4ac <ctf_hash_insert_type+0x68>
 494:	mov	w2, w20
 498:	mov	x0, x19
 49c:	mov	x3, xzr
 4a0:	mov	x4, xzr
 4a4:	bl	1ec <ctf_hashtab_insert>
 4a8:	cbz	x0, 4d8 <ctf_hash_insert_type+0x94>
 4ac:	mov	w0, wzr
 4b0:	b	4e0 <ctf_hash_insert_type+0x9c>
 4b4:	mov	w0, #0x16                  	// #22
 4b8:	b	4e0 <ctf_hash_insert_type+0x9c>
 4bc:	mov	w0, #0x3f9                 	// #1017
 4c0:	b	4e0 <ctf_hash_insert_type+0x9c>
 4c4:	ldr	x8, [x21, #352]
 4c8:	cmp	x8, #0x0
 4cc:	mov	w8, #0x3f8                 	// #1016
 4d0:	cinc	w0, w8, ne  // ne = any
 4d4:	b	4e0 <ctf_hash_insert_type+0x9c>
 4d8:	bl	0 <__errno_location>
 4dc:	ldr	w0, [x0]
 4e0:	ldp	x20, x19, [sp, #32]
 4e4:	ldp	x22, x21, [sp, #16]
 4e8:	ldp	x29, x30, [sp], #48
 4ec:	ret

00000000000004f0 <ctf_hash_define_type>:
 4f0:	b	444 <ctf_hash_insert_type>

00000000000004f4 <ctf_hash_lookup_type>:
 4f4:	sub	sp, sp, #0x30
 4f8:	stp	x2, xzr, [sp]
 4fc:	mov	x1, sp
 500:	mov	w2, wzr
 504:	stp	x29, x30, [sp, #32]
 508:	add	x29, sp, #0x20
 50c:	stp	xzr, xzr, [sp, #16]
 510:	bl	0 <htab_find_slot>
 514:	cbz	x0, 520 <ctf_hash_lookup_type+0x2c>
 518:	ldr	x8, [x0]
 51c:	ldr	x0, [x8, #8]
 520:	ldp	x29, x30, [sp, #32]
 524:	add	sp, sp, #0x30
 528:	ret

000000000000052c <ctf_hash_destroy>:
 52c:	cbz	x0, 534 <ctf_hash_destroy+0x8>
 530:	b	0 <htab_delete>
 534:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_label_topmost>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	ldr	x9, [x0, #32]
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x9, #16]
  18:	sub	w9, w9, w8
  1c:	lsr	w9, w9, #3
  20:	cbz	w9, 48 <ctf_label_topmost+0x48>
  24:	ldr	x10, [x19, #408]
  28:	mov	x0, x19
  2c:	add	x8, x10, x8
  30:	add	x8, x8, w9, uxtw #3
  34:	ldur	w1, [x8, #-8]
  38:	bl	0 <ctf_strraw>
  3c:	cbnz	x0, 58 <ctf_label_topmost+0x58>
  40:	mov	w1, #0x3ef                 	// #1007
  44:	b	4c <ctf_label_topmost+0x4c>
  48:	mov	w1, #0x409                 	// #1033
  4c:	mov	x0, x19
  50:	bl	0 <ctf_set_errno>
  54:	mov	x0, xzr
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

0000000000000064 <ctf_label_iter>:
  64:	stp	x29, x30, [sp, #-64]!
  68:	stp	x22, x21, [sp, #32]
  6c:	stp	x20, x19, [sp, #48]
  70:	ldr	x9, [x0, #32]
  74:	str	x23, [sp, #16]
  78:	mov	x19, x0
  7c:	mov	x29, sp
  80:	ldp	w8, w9, [x9, #16]
  84:	sub	w9, w9, w8
  88:	lsr	w22, w9, #3
  8c:	cbz	w22, dc <ctf_label_iter+0x78>
  90:	ldr	x9, [x19, #408]
  94:	mov	x20, x2
  98:	mov	x21, x1
  9c:	add	x23, x9, x8
  a0:	ldr	w1, [x23]
  a4:	mov	x0, x19
  a8:	bl	0 <ctf_strraw>
  ac:	cbz	x0, e4 <ctf_label_iter+0x80>
  b0:	ldr	w8, [x23, #4]
  b4:	add	x1, x29, #0x18
  b8:	mov	x2, x20
  bc:	str	x8, [x29, #24]
  c0:	blr	x21
  c4:	cbnz	w0, 100 <ctf_label_iter+0x9c>
  c8:	subs	w22, w22, #0x1
  cc:	add	x23, x23, #0x8
  d0:	b.ne	a0 <ctf_label_iter+0x3c>  // b.any
  d4:	mov	w0, wzr
  d8:	b	100 <ctf_label_iter+0x9c>
  dc:	mov	w1, #0x409                 	// #1033
  e0:	b	f8 <ctf_label_iter+0x94>
  e4:	ldp	w1, w2, [x23]
  e8:	adrp	x0, 0 <ctf_label_topmost>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <ctf_dprintf>
  f4:	mov	w1, #0x3ef                 	// #1007
  f8:	mov	x0, x19
  fc:	bl	0 <ctf_set_errno>
 100:	ldp	x20, x19, [sp, #48]
 104:	ldp	x22, x21, [sp, #32]
 108:	ldr	x23, [sp, #16]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

0000000000000114 <ctf_label_info>:
 114:	sub	sp, sp, #0x30
 118:	stp	x1, x2, [sp]
 11c:	adrp	x1, 0 <ctf_label_topmost>
 120:	add	x1, x1, #0x0
 124:	mov	x2, sp
 128:	stp	x29, x30, [sp, #16]
 12c:	str	x19, [sp, #32]
 130:	add	x29, sp, #0x10
 134:	mov	x19, x0
 138:	bl	64 <ctf_label_iter>
 13c:	tbnz	w0, #31, 15c <ctf_label_info+0x48>
 140:	cmp	w0, #0x1
 144:	b.ne	150 <ctf_label_info+0x3c>  // b.any
 148:	mov	w0, wzr
 14c:	b	15c <ctf_label_info+0x48>
 150:	mov	w1, #0x408                 	// #1032
 154:	mov	x0, x19
 158:	bl	0 <ctf_set_errno>
 15c:	ldr	x19, [sp, #32]
 160:	ldp	x29, x30, [sp, #16]
 164:	add	sp, sp, #0x30
 168:	ret

000000000000016c <label_info_cb>:
 16c:	stp	x29, x30, [sp, #-32]!
 170:	stp	x20, x19, [sp, #16]
 174:	mov	x19, x1
 178:	ldr	x1, [x2]
 17c:	mov	x29, sp
 180:	mov	x20, x2
 184:	bl	0 <strcmp>
 188:	cbz	w0, 194 <label_info_cb+0x28>
 18c:	mov	w0, wzr
 190:	b	1a8 <label_info_cb+0x3c>
 194:	ldr	x8, [x20, #8]
 198:	cbz	x8, 1a4 <label_info_cb+0x38>
 19c:	ldr	x9, [x19]
 1a0:	str	x9, [x8]
 1a4:	mov	w0, #0x1                   	// #1
 1a8:	ldp	x20, x19, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_add_type_mapping>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	stp	x24, x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	ldr	w23, [x0, #544]
      14:	mov	x19, x3
      18:	mov	x20, x0
      1c:	mov	x22, x1
      20:	cmp	x23, x1
      24:	mov	x21, x2
      28:	mov	x29, sp
      2c:	b.cc	40 <ctf_add_type_mapping+0x40>  // b.lo, b.ul, b.last
      30:	ldr	x8, [x20, #512]
      34:	cmp	x8, #0x0
      38:	csel	x20, x20, x8, eq  // eq = none
      3c:	ldr	w23, [x20, #544]
      40:	ldr	w24, [x21, #544]
      44:	cmp	x24, x19
      48:	b.cc	5c <ctf_add_type_mapping+0x5c>  // b.lo, b.ul, b.last
      4c:	ldr	x8, [x21, #512]
      50:	cmp	x8, #0x0
      54:	csel	x21, x21, x8, eq  // eq = none
      58:	ldr	w24, [x21, #544]
      5c:	ldr	x8, [x21, #664]
      60:	cbnz	x8, 8c <ctf_add_type_mapping+0x8c>
      64:	adrp	x0, 0 <ctf_hash_type_mapping_key>
      68:	adrp	x1, 0 <ctf_hash_eq_type_mapping_key>
      6c:	adrp	x2, 0 <free>
      70:	add	x0, x0, #0x0
      74:	add	x1, x1, #0x0
      78:	add	x2, x2, #0x0
      7c:	mov	x3, xzr
      80:	bl	0 <ctf_dynhash_create>
      84:	str	x0, [x21, #664]
      88:	cbz	x0, c4 <ctf_add_type_mapping+0xc4>
      8c:	mov	w0, #0x1                   	// #1
      90:	mov	w1, #0x10                  	// #16
      94:	bl	0 <calloc>
      98:	cbz	x0, c4 <ctf_add_type_mapping+0xc4>
      9c:	and	x8, x23, x22
      a0:	stp	x20, x8, [x0]
      a4:	mov	x1, x0
      a8:	ldr	x0, [x21, #664]
      ac:	and	x2, x24, x19
      b0:	ldp	x20, x19, [sp, #48]
      b4:	ldp	x22, x21, [sp, #32]
      b8:	ldp	x24, x23, [sp, #16]
      bc:	ldp	x29, x30, [sp], #64
      c0:	b	0 <ctf_dynhash_insert>
      c4:	ldp	x20, x19, [sp, #48]
      c8:	ldp	x22, x21, [sp, #32]
      cc:	ldp	x24, x23, [sp, #16]
      d0:	ldp	x29, x30, [sp], #64
      d4:	ret

00000000000000d8 <ctf_type_mapping>:
      d8:	sub	sp, sp, #0x40
      dc:	stp	x29, x30, [sp, #16]
      e0:	stp	x20, x19, [sp, #48]
      e4:	ldr	w8, [x0, #544]
      e8:	ldr	x20, [x2]
      ec:	mov	x19, x2
      f0:	str	x21, [sp, #32]
      f4:	cmp	x8, x1
      f8:	add	x29, sp, #0x10
      fc:	b.cc	110 <ctf_type_mapping+0x38>  // b.lo, b.ul, b.last
     100:	ldr	x8, [x0, #512]
     104:	cmp	x8, #0x0
     108:	csel	x0, x0, x8, eq  // eq = none
     10c:	ldr	w8, [x0, #544]
     110:	and	x8, x8, x1
     114:	stp	x0, x8, [sp]
     118:	ldr	x0, [x20, #664]
     11c:	cbz	x0, 148 <ctf_type_mapping+0x70>
     120:	mov	x1, sp
     124:	bl	0 <ctf_dynhash_lookup>
     128:	ldr	x21, [x20, #512]
     12c:	cbz	x0, 180 <ctf_type_mapping+0xa8>
     130:	cbz	x21, 140 <ctf_type_mapping+0x68>
     134:	ldr	w8, [x20, #544]
     138:	add	w8, w8, #0x1
     13c:	orr	x0, x8, x0
     140:	str	x20, [x19]
     144:	b	188 <ctf_type_mapping+0xb0>
     148:	ldr	x21, [x20, #512]
     14c:	cbz	x21, 184 <ctf_type_mapping+0xac>
     150:	ldr	x0, [x21, #664]
     154:	cbz	x0, 178 <ctf_type_mapping+0xa0>
     158:	mov	x1, sp
     15c:	bl	0 <ctf_dynhash_lookup>
     160:	cbz	x0, 178 <ctf_type_mapping+0xa0>
     164:	ldr	x8, [x21, #512]
     168:	cbz	x8, 178 <ctf_type_mapping+0xa0>
     16c:	ldr	w8, [x21, #544]
     170:	add	w8, w8, #0x1
     174:	orr	x0, x8, x0
     178:	str	x21, [x19]
     17c:	b	188 <ctf_type_mapping+0xb0>
     180:	cbnz	x21, 150 <ctf_type_mapping+0x78>
     184:	mov	x0, xzr
     188:	ldp	x20, x19, [sp, #48]
     18c:	ldr	x21, [sp, #32]
     190:	ldp	x29, x30, [sp, #16]
     194:	add	sp, sp, #0x40
     198:	ret

000000000000019c <ctf_link_add_ctf>:
     19c:	stp	x29, x30, [sp, #-48]!
     1a0:	stp	x20, x19, [sp, #32]
     1a4:	ldr	x8, [x0, #656]
     1a8:	mov	x19, x0
     1ac:	str	x21, [sp, #16]
     1b0:	mov	x29, sp
     1b4:	cbz	x8, 1c0 <ctf_link_add_ctf+0x24>
     1b8:	mov	w1, #0x3f5                 	// #1013
     1bc:	b	244 <ctf_link_add_ctf+0xa8>
     1c0:	ldr	x8, [x19, #648]
     1c4:	mov	x21, x2
     1c8:	mov	x20, x1
     1cc:	cbnz	x8, 1fc <ctf_link_add_ctf+0x60>
     1d0:	adrp	x0, 0 <ctf_hash_string>
     1d4:	adrp	x1, 0 <ctf_hash_eq_string>
     1d8:	adrp	x2, 0 <free>
     1dc:	adrp	x3, 0 <ctf_add_type_mapping>
     1e0:	add	x0, x0, #0x0
     1e4:	add	x1, x1, #0x0
     1e8:	add	x2, x2, #0x0
     1ec:	add	x3, x3, #0x0
     1f0:	bl	0 <ctf_dynhash_create>
     1f4:	str	x0, [x19, #648]
     1f8:	cbz	x0, 228 <ctf_link_add_ctf+0x8c>
     1fc:	mov	x0, x21
     200:	bl	0 <strdup>
     204:	mov	x21, x0
     208:	cbz	x0, 22c <ctf_link_add_ctf+0x90>
     20c:	ldr	x0, [x19, #648]
     210:	mov	x1, x21
     214:	mov	x2, x20
     218:	bl	0 <ctf_dynhash_insert>
     21c:	tbnz	w0, #31, 22c <ctf_link_add_ctf+0x90>
     220:	mov	w0, wzr
     224:	b	24c <ctf_link_add_ctf+0xb0>
     228:	mov	x21, xzr
     22c:	ldr	x0, [x19, #648]
     230:	bl	0 <free>
     234:	mov	x0, x21
     238:	str	xzr, [x19, #648]
     23c:	bl	0 <free>
     240:	mov	w1, #0xc                   	// #12
     244:	mov	x0, x19
     248:	bl	0 <ctf_set_errno>
     24c:	ldp	x20, x19, [sp, #32]
     250:	ldr	x21, [sp, #16]
     254:	ldp	x29, x30, [sp], #48
     258:	ret

000000000000025c <ctf_arc_close_thunk>:
     25c:	b	0 <ctf_arc_close>

0000000000000260 <ctf_link_add_cu_mapping>:
     260:	stp	x29, x30, [sp, #-48]!
     264:	stp	x20, x19, [sp, #32]
     268:	ldr	x8, [x0, #672]
     26c:	str	x21, [sp, #16]
     270:	mov	x21, x2
     274:	mov	x19, x0
     278:	mov	x20, x1
     27c:	mov	x29, sp
     280:	cbnz	x8, 2ac <ctf_link_add_cu_mapping+0x4c>
     284:	adrp	x2, 0 <free>
     288:	adrp	x0, 0 <ctf_hash_string>
     28c:	adrp	x1, 0 <ctf_hash_eq_string>
     290:	add	x2, x2, #0x0
     294:	add	x0, x0, #0x0
     298:	add	x1, x1, #0x0
     29c:	mov	x3, x2
     2a0:	bl	0 <ctf_dynhash_create>
     2a4:	str	x0, [x19, #672]
     2a8:	cbz	x0, 358 <ctf_link_add_cu_mapping+0xf8>
     2ac:	ldr	x8, [x19, #656]
     2b0:	cbnz	x8, 2e0 <ctf_link_add_cu_mapping+0x80>
     2b4:	adrp	x0, 0 <ctf_hash_string>
     2b8:	adrp	x1, 0 <ctf_hash_eq_string>
     2bc:	adrp	x2, 0 <free>
     2c0:	adrp	x3, 0 <ctf_add_type_mapping>
     2c4:	add	x0, x0, #0x0
     2c8:	add	x1, x1, #0x0
     2cc:	add	x2, x2, #0x0
     2d0:	add	x3, x3, #0x0
     2d4:	bl	0 <ctf_dynhash_create>
     2d8:	str	x0, [x19, #656]
     2dc:	cbz	x0, 358 <ctf_link_add_cu_mapping+0xf8>
     2e0:	mov	x0, x20
     2e4:	bl	0 <strdup>
     2e8:	mov	x20, x0
     2ec:	mov	x0, x21
     2f0:	bl	0 <strdup>
     2f4:	mov	x21, x0
     2f8:	cbz	x20, 330 <ctf_link_add_cu_mapping+0xd0>
     2fc:	cbz	x21, 330 <ctf_link_add_cu_mapping+0xd0>
     300:	mov	x0, x19
     304:	mov	x1, x21
     308:	mov	x2, x21
     30c:	bl	378 <ctf_create_per_cu>
     310:	cbz	x0, 340 <ctf_link_add_cu_mapping+0xe0>
     314:	ldr	x0, [x19, #672]
     318:	mov	x1, x20
     31c:	mov	x2, x21
     320:	bl	0 <ctf_dynhash_insert>
     324:	mov	w1, w0
     328:	cbnz	w0, 338 <ctf_link_add_cu_mapping+0xd8>
     32c:	b	364 <ctf_link_add_cu_mapping+0x104>
     330:	bl	0 <__errno_location>
     334:	ldr	w1, [x0]
     338:	mov	x0, x19
     33c:	bl	0 <ctf_set_errno>
     340:	mov	x0, x20
     344:	bl	0 <free>
     348:	mov	x0, x21
     34c:	bl	0 <free>
     350:	mov	w0, #0xffffffff            	// #-1
     354:	b	364 <ctf_link_add_cu_mapping+0x104>
     358:	mov	w1, #0xc                   	// #12
     35c:	mov	x0, x19
     360:	bl	0 <ctf_set_errno>
     364:	ldp	x20, x19, [sp, #32]
     368:	ldr	x21, [sp, #16]
     36c:	ldp	x29, x30, [sp], #48
     370:	ret

0000000000000374 <ctf_file_close_thunk>:
     374:	b	0 <ctf_file_close>

0000000000000378 <ctf_create_per_cu>:
     378:	stp	x29, x30, [sp, #-64]!
     37c:	stp	x22, x21, [sp, #32]
     380:	stp	x20, x19, [sp, #48]
     384:	mov	x19, x0
     388:	ldr	x0, [x0, #672]
     38c:	mov	x20, x2
     390:	mov	x21, x1
     394:	str	x23, [sp, #16]
     398:	mov	x29, sp
     39c:	cbz	x0, 3c0 <ctf_create_per_cu+0x48>
     3a0:	mov	x1, x21
     3a4:	bl	0 <ctf_dynhash_lookup>
     3a8:	cbnz	x0, 3c0 <ctf_create_per_cu+0x48>
     3ac:	ldr	x0, [x19, #672]
     3b0:	mov	x1, x20
     3b4:	bl	0 <ctf_dynhash_lookup>
     3b8:	cmp	x0, #0x0
     3bc:	csel	x0, x21, x0, eq  // eq = none
     3c0:	ldr	x8, [x19, #656]
     3c4:	cmp	x0, #0x0
     3c8:	csel	x23, x21, x0, eq  // eq = none
     3cc:	mov	x1, x23
     3d0:	mov	x0, x8
     3d4:	bl	0 <ctf_dynhash_lookup>
     3d8:	mov	x22, x0
     3dc:	cbz	x0, 3f8 <ctf_create_per_cu+0x80>
     3e0:	mov	x0, x22
     3e4:	ldp	x20, x19, [sp, #48]
     3e8:	ldp	x22, x21, [sp, #32]
     3ec:	ldr	x23, [sp, #16]
     3f0:	ldp	x29, x30, [sp], #64
     3f4:	ret
     3f8:	add	x0, x29, #0x1c
     3fc:	bl	0 <ctf_create>
     400:	mov	x22, x0
     404:	cbz	x0, 458 <ctf_create_per_cu+0xe0>
     408:	mov	x0, x23
     40c:	bl	0 <strdup>
     410:	mov	x21, x0
     414:	cbz	x0, 488 <ctf_create_per_cu+0x110>
     418:	ldr	x0, [x19, #656]
     41c:	mov	x1, x21
     420:	mov	x2, x22
     424:	bl	0 <ctf_dynhash_insert>
     428:	tbnz	w0, #31, 488 <ctf_create_per_cu+0x110>
     42c:	mov	x0, x22
     430:	mov	x1, x19
     434:	bl	0 <ctf_import>
     438:	mov	x0, x22
     43c:	mov	x1, x20
     440:	bl	0 <ctf_cuname_set>
     444:	adrp	x1, 0 <_CTF_SECTION>
     448:	add	x1, x1, #0x0
     44c:	mov	x0, x22
     450:	bl	0 <ctf_parent_name_set>
     454:	b	3e0 <ctf_create_per_cu+0x68>
     458:	ldr	w0, [x29, #28]
     45c:	bl	0 <ctf_errmsg>
     460:	mov	x3, x0
     464:	adrp	x0, 0 <ctf_add_type_mapping>
     468:	add	x0, x0, #0x0
     46c:	mov	x1, x20
     470:	mov	x2, x21
     474:	bl	0 <ctf_dprintf>
     478:	ldr	w1, [x29, #28]
     47c:	mov	x0, x19
     480:	bl	0 <ctf_set_errno>
     484:	b	3e0 <ctf_create_per_cu+0x68>
     488:	mov	x0, x21
     48c:	bl	0 <free>
     490:	mov	x0, x22
     494:	bl	0 <ctf_file_close>
     498:	mov	w1, #0xc                   	// #12
     49c:	mov	x0, x19
     4a0:	bl	0 <ctf_set_errno>
     4a4:	mov	x22, xzr
     4a8:	b	3e0 <ctf_create_per_cu+0x68>

00000000000004ac <ctf_link_set_memb_name_changer>:
     4ac:	str	x1, [x0, #680]
     4b0:	str	x2, [x0, #688]
     4b4:	ret

00000000000004b8 <ctf_link>:
     4b8:	sub	sp, sp, #0x60
     4bc:	movi	v0.2d, #0x0
     4c0:	stp	x29, x30, [sp, #64]
     4c4:	str	xzr, [sp, #56]
     4c8:	str	x0, [sp]
     4cc:	stur	q0, [sp, #40]
     4d0:	stur	q0, [sp, #24]
     4d4:	stur	q0, [sp, #8]
     4d8:	str	w1, [sp, #52]
     4dc:	str	x19, [sp, #80]
     4e0:	mov	x19, x0
     4e4:	ldr	x0, [x0, #648]
     4e8:	add	x29, sp, #0x40
     4ec:	cbz	x0, 548 <ctf_link+0x90>
     4f0:	ldr	x8, [x19, #656]
     4f4:	cbnz	x8, 528 <ctf_link+0x70>
     4f8:	adrp	x0, 0 <ctf_hash_string>
     4fc:	adrp	x1, 0 <ctf_hash_eq_string>
     500:	adrp	x2, 0 <free>
     504:	adrp	x3, 0 <ctf_add_type_mapping>
     508:	add	x0, x0, #0x0
     50c:	add	x1, x1, #0x0
     510:	add	x2, x2, #0x0
     514:	add	x3, x3, #0x0
     518:	bl	0 <ctf_dynhash_create>
     51c:	str	x0, [x19, #656]
     520:	cbz	x0, 558 <ctf_link+0xa0>
     524:	ldr	x0, [x19, #648]
     528:	adrp	x1, 0 <ctf_add_type_mapping>
     52c:	add	x1, x1, #0x0
     530:	mov	x2, sp
     534:	bl	0 <ctf_dynhash_iter>
     538:	mov	x0, x19
     53c:	bl	0 <ctf_errno>
     540:	cmp	w0, #0x0
     544:	csetm	w0, ne  // ne = any
     548:	ldr	x19, [sp, #80]
     54c:	ldp	x29, x30, [sp, #64]
     550:	add	sp, sp, #0x60
     554:	ret
     558:	mov	w1, #0xc                   	// #12
     55c:	mov	x0, x19
     560:	bl	0 <ctf_set_errno>
     564:	b	548 <ctf_link+0x90>

0000000000000568 <ctf_link_one_input_archive>:
     568:	sub	sp, sp, #0x30
     56c:	stp	x29, x30, [sp, #16]
     570:	add	x29, sp, #0x10
     574:	stp	x20, x19, [sp, #32]
     578:	mov	x19, x2
     57c:	mov	x20, x1
     580:	str	x0, [x2, #8]
     584:	str	wzr, [x2, #48]
     588:	sub	x2, x29, #0x4
     58c:	mov	x0, x1
     590:	mov	x1, xzr
     594:	bl	0 <ctf_arc_open_by_name>
     598:	str	x0, [x19, #24]
     59c:	cbnz	x0, 5d0 <ctf_link_one_input_archive+0x68>
     5a0:	ldur	w8, [x29, #-4]
     5a4:	cmp	w8, #0x415
     5a8:	b.eq	5d0 <ctf_link_one_input_archive+0x68>  // b.none
     5ac:	ldr	x19, [x19, #8]
     5b0:	mov	w0, w8
     5b4:	bl	0 <ctf_errmsg>
     5b8:	mov	x2, x0
     5bc:	adrp	x0, 0 <ctf_add_type_mapping>
     5c0:	add	x0, x0, #0x0
     5c4:	mov	x1, x19
     5c8:	bl	0 <ctf_dprintf>
     5cc:	b	670 <ctf_link_one_input_archive+0x108>
     5d0:	adrp	x1, 0 <_CTF_SECTION>
     5d4:	add	x1, x1, #0x0
     5d8:	mov	x2, x19
     5dc:	bl	c0c <ctf_link_one_input_archive_member>
     5e0:	tbnz	w0, #31, 614 <ctf_link_one_input_archive+0xac>
     5e4:	adrp	x1, 0 <ctf_add_type_mapping>
     5e8:	mov	w8, #0x1                   	// #1
     5ec:	add	x1, x1, #0x0
     5f0:	mov	x0, x20
     5f4:	mov	x2, x19
     5f8:	str	w8, [x19, #48]
     5fc:	bl	0 <ctf_archive_iter>
     600:	tbnz	w0, #31, 620 <ctf_link_one_input_archive+0xb8>
     604:	ldr	x0, [x19]
     608:	mov	w1, wzr
     60c:	bl	0 <ctf_set_errno>
     610:	b	640 <ctf_link_one_input_archive+0xd8>
     614:	ldr	x0, [x19, #24]
     618:	bl	0 <ctf_file_close>
     61c:	b	670 <ctf_link_one_input_archive+0x108>
     620:	ldp	x0, x20, [x19]
     624:	bl	0 <ctf_errno>
     628:	bl	0 <ctf_errmsg>
     62c:	mov	x2, x0
     630:	adrp	x0, 0 <ctf_add_type_mapping>
     634:	add	x0, x0, #0x0
     638:	mov	x1, x20
     63c:	bl	0 <ctf_dprintf>
     640:	ldr	x0, [x19, #24]
     644:	bl	0 <ctf_file_close>
     648:	ldr	x8, [x19]
     64c:	ldr	x0, [x8, #664]
     650:	cbz	x0, 65c <ctf_link_one_input_archive+0xf4>
     654:	bl	0 <ctf_dynhash_empty>
     658:	ldr	x8, [x19]
     65c:	ldr	x0, [x8, #656]
     660:	adrp	x1, 0 <ctf_add_type_mapping>
     664:	add	x1, x1, #0x0
     668:	mov	x2, xzr
     66c:	bl	0 <ctf_dynhash_iter>
     670:	ldp	x20, x19, [sp, #32]
     674:	ldp	x29, x30, [sp, #16]
     678:	add	sp, sp, #0x30
     67c:	ret

0000000000000680 <ctf_link_add_strtab>:
     680:	sub	sp, sp, #0x60
     684:	stp	x29, x30, [sp, #32]
     688:	add	x29, sp, #0x20
     68c:	stp	x22, x21, [sp, #64]
     690:	stp	x20, x19, [sp, #80]
     694:	mov	x20, x1
     698:	mov	x21, x0
     69c:	sub	x0, x29, #0x4
     6a0:	mov	x1, x2
     6a4:	stp	x24, x23, [sp, #48]
     6a8:	mov	x19, x2
     6ac:	blr	x20
     6b0:	cbz	x0, 728 <ctf_link_add_strtab+0xa8>
     6b4:	adrp	x22, 0 <ctf_add_type_mapping>
     6b8:	mov	x1, x0
     6bc:	mov	w24, wzr
     6c0:	mov	w23, #0xc                   	// #12
     6c4:	add	x22, x22, #0x0
     6c8:	ldur	w2, [x29, #-4]
     6cc:	str	x1, [sp, #8]
     6d0:	mov	x0, x21
     6d4:	stp	w2, wzr, [sp, #16]
     6d8:	ldr	w8, [x21, #552]
     6dc:	orr	w8, w8, #0x4
     6e0:	str	w8, [x21, #552]
     6e4:	bl	0 <ctf_str_add_external>
     6e8:	ldr	x8, [x21, #656]
     6ec:	cmp	w0, #0x0
     6f0:	add	x2, sp, #0x8
     6f4:	mov	x1, x22
     6f8:	mov	x0, x8
     6fc:	csel	w24, w23, w24, eq  // eq = none
     700:	bl	0 <ctf_dynhash_iter>
     704:	ldr	w8, [sp, #20]
     708:	sub	x0, x29, #0x4
     70c:	mov	x1, x19
     710:	cmp	w8, #0x0
     714:	csel	w24, w24, w8, eq  // eq = none
     718:	blr	x20
     71c:	mov	x1, x0
     720:	cbnz	x0, 6c8 <ctf_link_add_strtab+0x48>
     724:	neg	w0, w24
     728:	ldp	x20, x19, [sp, #80]
     72c:	ldp	x22, x21, [sp, #64]
     730:	ldp	x24, x23, [sp, #48]
     734:	ldp	x29, x30, [sp, #32]
     738:	add	sp, sp, #0x60
     73c:	ret

0000000000000740 <ctf_link_intern_extern_string>:
     740:	stp	x29, x30, [sp, #-32]!
     744:	ldr	w8, [x1, #552]
     748:	str	x19, [sp, #16]
     74c:	mov	x19, x2
     750:	mov	x0, x1
     754:	orr	w8, w8, #0x4
     758:	str	w8, [x1, #552]
     75c:	ldr	x1, [x2]
     760:	ldr	w2, [x2, #8]
     764:	mov	x29, sp
     768:	bl	0 <ctf_str_add_external>
     76c:	cbnz	w0, 778 <ctf_link_intern_extern_string+0x38>
     770:	mov	w8, #0xc                   	// #12
     774:	str	w8, [x19, #12]
     778:	ldr	x19, [sp, #16]
     77c:	ldp	x29, x30, [sp], #32
     780:	ret

0000000000000784 <ctf_link_shuffle_syms>:
     784:	mov	w0, wzr
     788:	ret

000000000000078c <ctf_link_write>:
     78c:	sub	sp, sp, #0x80
     790:	movi	v0.2d, #0x0
     794:	stp	x29, x30, [sp, #48]
     798:	stp	x24, x23, [sp, #80]
     79c:	stp	x22, x21, [sp, #96]
     7a0:	stp	x20, x19, [sp, #112]
     7a4:	stp	q0, q0, [sp, #16]
     7a8:	str	q0, [sp]
     7ac:	str	x0, [sp, #8]
     7b0:	mov	x19, x0
     7b4:	ldr	x0, [x0, #656]
     7b8:	mov	x23, x2
     7bc:	mov	x21, x1
     7c0:	str	x25, [sp, #64]
     7c4:	add	x29, sp, #0x30
     7c8:	cbz	x0, 870 <ctf_link_write+0xe4>
     7cc:	adrp	x1, 0 <ctf_add_type_mapping>
     7d0:	add	x1, x1, #0x0
     7d4:	mov	x2, sp
     7d8:	bl	0 <ctf_dynhash_iter>
     7dc:	mov	x0, x19
     7e0:	bl	0 <ctf_errno>
     7e4:	tbnz	w0, #31, 888 <ctf_link_write+0xfc>
     7e8:	ldr	x8, [sp, #24]
     7ec:	cbz	x8, 870 <ctf_link_write+0xe4>
     7f0:	ldr	x0, [sp]
     7f4:	lsl	x8, x8, #3
     7f8:	add	x1, x8, #0x8
     7fc:	bl	0 <realloc>
     800:	mov	x20, x0
     804:	cbz	x0, 898 <ctf_link_write+0x10c>
     808:	ldr	x8, [sp, #24]
     80c:	add	x0, x20, #0x8
     810:	mov	x1, x20
     814:	str	x20, [sp]
     818:	lsl	x2, x8, #3
     81c:	bl	0 <memmove>
     820:	adrp	x8, 0 <_CTF_SECTION>
     824:	add	x8, x8, #0x0
     828:	str	x8, [x20]
     82c:	ldr	x8, [x19, #680]
     830:	cbz	x8, 8ac <ctf_link_write+0x120>
     834:	ldr	x2, [x19, #688]
     838:	adrp	x1, 0 <_CTF_SECTION>
     83c:	add	x1, x1, #0x0
     840:	mov	x0, x19
     844:	blr	x8
     848:	mov	x20, x0
     84c:	cbz	x0, 8b0 <ctf_link_write+0x124>
     850:	ldr	x8, [sp]
     854:	adrp	x1, 0 <ctf_add_type_mapping>
     858:	add	x1, x1, #0x0
     85c:	mov	x2, x20
     860:	str	x20, [x8]
     864:	ldr	x0, [x19, #656]
     868:	bl	0 <ctf_dynhash_iter>
     86c:	b	8b0 <ctf_link_write+0x124>
     870:	mov	x0, x19
     874:	mov	x1, x21
     878:	mov	x2, x23
     87c:	bl	0 <ctf_write_mem>
     880:	mov	x24, x0
     884:	b	adc <ctf_link_write+0x350>
     888:	adrp	x23, 0 <ctf_add_type_mapping>
     88c:	mov	x20, xzr
     890:	add	x23, x23, #0x0
     894:	b	a74 <ctf_link_write+0x2e8>
     898:	adrp	x23, 0 <ctf_add_type_mapping>
     89c:	mov	x22, xzr
     8a0:	mov	x24, xzr
     8a4:	add	x23, x23, #0x0
     8a8:	b	a50 <ctf_link_write+0x2c4>
     8ac:	mov	x20, xzr
     8b0:	ldp	x0, x8, [sp, #16]
     8b4:	lsl	x8, x8, #3
     8b8:	add	x1, x8, #0x8
     8bc:	bl	0 <realloc>
     8c0:	mov	x22, x0
     8c4:	cbz	x0, 994 <ctf_link_write+0x208>
     8c8:	ldr	x8, [sp, #24]
     8cc:	add	x0, x22, #0x8
     8d0:	mov	x1, x22
     8d4:	str	x22, [sp, #16]
     8d8:	lsl	x2, x8, #3
     8dc:	bl	0 <memmove>
     8e0:	str	x19, [x22]
     8e4:	bl	0 <tmpfile>
     8e8:	mov	x22, x0
     8ec:	cbz	x0, 9a4 <ctf_link_write+0x218>
     8f0:	mov	x0, x22
     8f4:	bl	0 <fileno>
     8f8:	ldp	x1, x8, [sp, #16]
     8fc:	ldr	x3, [sp]
     900:	mov	x4, x23
     904:	add	x2, x8, #0x1
     908:	bl	0 <ctf_arc_write_fd>
     90c:	tbnz	w0, #31, 9b4 <ctf_link_write+0x228>
     910:	mov	w2, #0x2                   	// #2
     914:	mov	x0, x22
     918:	mov	x1, xzr
     91c:	bl	0 <fseek>
     920:	tbnz	w0, #31, 9cc <ctf_link_write+0x240>
     924:	mov	x0, x22
     928:	bl	0 <ftell>
     92c:	tbnz	x0, #63, 9dc <ctf_link_write+0x250>
     930:	mov	x25, x0
     934:	mov	x0, x22
     938:	mov	x1, xzr
     93c:	mov	w2, wzr
     940:	bl	0 <fseek>
     944:	tbnz	w0, #31, 9ec <ctf_link_write+0x260>
     948:	mov	x0, x25
     94c:	bl	0 <malloc>
     950:	mov	x24, x0
     954:	cbz	x0, a48 <ctf_link_write+0x2bc>
     958:	adrp	x23, 0 <ctf_add_type_mapping>
     95c:	add	x23, x23, #0x0
     960:	mov	x0, x22
     964:	bl	0 <feof>
     968:	cbnz	w0, 9fc <ctf_link_write+0x270>
     96c:	mov	w2, #0x1                   	// #1
     970:	mov	x0, x24
     974:	mov	x1, x25
     978:	mov	x3, x22
     97c:	bl	0 <fread>
     980:	cbnz	x0, 9fc <ctf_link_write+0x270>
     984:	mov	x0, x22
     988:	bl	0 <ferror>
     98c:	cbz	w0, 960 <ctf_link_write+0x1d4>
     990:	b	a50 <ctf_link_write+0x2c4>
     994:	adrp	x23, 0 <ctf_add_type_mapping>
     998:	mov	x24, xzr
     99c:	add	x23, x23, #0x0
     9a0:	b	a50 <ctf_link_write+0x2c4>
     9a4:	adrp	x23, 0 <ctf_add_type_mapping>
     9a8:	mov	x24, xzr
     9ac:	add	x23, x23, #0x0
     9b0:	b	a50 <ctf_link_write+0x2c4>
     9b4:	mov	w1, w0
     9b8:	mov	x0, x19
     9bc:	bl	0 <ctf_set_errno>
     9c0:	adrp	x23, 0 <ctf_add_type_mapping>
     9c4:	add	x23, x23, #0x0
     9c8:	b	a6c <ctf_link_write+0x2e0>
     9cc:	adrp	x23, 0 <ctf_add_type_mapping>
     9d0:	mov	x24, xzr
     9d4:	add	x23, x23, #0x0
     9d8:	b	a50 <ctf_link_write+0x2c4>
     9dc:	adrp	x23, 0 <ctf_add_type_mapping>
     9e0:	mov	x24, xzr
     9e4:	add	x23, x23, #0x0
     9e8:	b	a50 <ctf_link_write+0x2c4>
     9ec:	adrp	x23, 0 <ctf_add_type_mapping>
     9f0:	mov	x24, xzr
     9f4:	add	x23, x23, #0x0
     9f8:	b	a50 <ctf_link_write+0x2c4>
     9fc:	str	x25, [x21]
     a00:	ldr	x0, [sp]
     a04:	bl	0 <free>
     a08:	ldr	x0, [sp, #16]
     a0c:	bl	0 <free>
     a10:	mov	x0, x20
     a14:	bl	0 <free>
     a18:	ldr	x8, [sp, #40]
     a1c:	cbz	x8, adc <ctf_link_write+0x350>
     a20:	ldr	x0, [sp, #32]
     a24:	mov	x19, xzr
     a28:	ldr	x0, [x0, x19, lsl #3]
     a2c:	bl	0 <free>
     a30:	ldp	x0, x8, [sp, #32]
     a34:	add	x19, x19, #0x1
     a38:	cmp	x19, x8
     a3c:	b.cc	a28 <ctf_link_write+0x29c>  // b.lo, b.ul, b.last
     a40:	bl	0 <free>
     a44:	b	adc <ctf_link_write+0x350>
     a48:	adrp	x23, 0 <ctf_add_type_mapping>
     a4c:	add	x23, x23, #0x0
     a50:	bl	0 <__errno_location>
     a54:	ldr	w1, [x0]
     a58:	mov	x0, x19
     a5c:	bl	0 <ctf_set_errno>
     a60:	mov	x0, x24
     a64:	bl	0 <free>
     a68:	cbz	x22, a74 <ctf_link_write+0x2e8>
     a6c:	mov	x0, x22
     a70:	bl	0 <fclose>
     a74:	ldr	x0, [sp]
     a78:	bl	0 <free>
     a7c:	ldr	x0, [sp, #16]
     a80:	bl	0 <free>
     a84:	mov	x0, x20
     a88:	bl	0 <free>
     a8c:	ldr	x8, [sp, #40]
     a90:	cbz	x8, ab8 <ctf_link_write+0x32c>
     a94:	ldr	x0, [sp, #32]
     a98:	mov	x20, xzr
     a9c:	ldr	x0, [x0, x20, lsl #3]
     aa0:	bl	0 <free>
     aa4:	ldp	x0, x8, [sp, #32]
     aa8:	add	x20, x20, #0x1
     aac:	cmp	x20, x8
     ab0:	b.cc	a9c <ctf_link_write+0x310>  // b.lo, b.ul, b.last
     ab4:	bl	0 <free>
     ab8:	mov	x0, x19
     abc:	bl	0 <ctf_errno>
     ac0:	bl	0 <ctf_errmsg>
     ac4:	mov	x2, x0
     ac8:	adrp	x0, 0 <ctf_add_type_mapping>
     acc:	add	x0, x0, #0x0
     ad0:	mov	x1, x23
     ad4:	bl	0 <ctf_dprintf>
     ad8:	mov	x24, xzr
     adc:	mov	x0, x24
     ae0:	ldp	x20, x19, [sp, #112]
     ae4:	ldp	x22, x21, [sp, #96]
     ae8:	ldp	x24, x23, [sp, #80]
     aec:	ldr	x25, [sp, #64]
     af0:	ldp	x29, x30, [sp, #48]
     af4:	add	sp, sp, #0x80
     af8:	ret

0000000000000afc <ctf_accumulate_archive_names>:
     afc:	stp	x29, x30, [sp, #-64]!
     b00:	stp	x24, x23, [sp, #16]
     b04:	stp	x22, x21, [sp, #32]
     b08:	stp	x20, x19, [sp, #48]
     b0c:	ldr	x8, [x2, #24]
     b10:	mov	x22, x0
     b14:	ldr	x0, [x2]
     b18:	mov	x20, x1
     b1c:	add	x8, x8, #0x1
     b20:	lsl	x1, x8, #3
     b24:	mov	x29, sp
     b28:	mov	x19, x2
     b2c:	str	x8, [x2, #24]
     b30:	bl	0 <realloc>
     b34:	cbz	x0, bc0 <ctf_accumulate_archive_names+0xc4>
     b38:	mov	x21, x0
     b3c:	ldp	x0, x8, [x19, #16]
     b40:	lsl	x1, x8, #3
     b44:	bl	0 <realloc>
     b48:	cbz	x0, bc0 <ctf_accumulate_archive_names+0xc4>
     b4c:	ldr	x8, [x20, #680]
     b50:	mov	x23, x0
     b54:	cbz	x8, b90 <ctf_accumulate_archive_names+0x94>
     b58:	ldr	x2, [x20, #688]
     b5c:	mov	x0, x20
     b60:	mov	x1, x22
     b64:	blr	x8
     b68:	cbz	x0, b90 <ctf_accumulate_archive_names+0x94>
     b6c:	mov	x24, x0
     b70:	ldp	x0, x8, [x19, #32]
     b74:	add	x8, x8, #0x1
     b78:	lsl	x1, x8, #3
     b7c:	str	x8, [x19, #40]
     b80:	bl	0 <realloc>
     b84:	cbz	x0, be8 <ctf_accumulate_archive_names+0xec>
     b88:	mov	x22, x24
     b8c:	str	x0, [x19, #32]
     b90:	ldr	x8, [x19, #24]
     b94:	str	x21, [x19]
     b98:	lsl	x8, x8, #3
     b9c:	sub	x8, x8, #0x8
     ba0:	str	x22, [x21, x8]
     ba4:	str	x23, [x19, #16]
     ba8:	str	x20, [x23, x8]
     bac:	ldp	x20, x19, [sp, #48]
     bb0:	ldp	x22, x21, [sp, #32]
     bb4:	ldp	x24, x23, [sp, #16]
     bb8:	ldp	x29, x30, [sp], #64
     bbc:	ret
     bc0:	ldr	x8, [x19, #24]
     bc4:	ldr	x0, [x19, #8]
     bc8:	mov	w1, #0xc                   	// #12
     bcc:	sub	x8, x8, #0x1
     bd0:	str	x8, [x19, #24]
     bd4:	ldp	x20, x19, [sp, #48]
     bd8:	ldp	x22, x21, [sp, #32]
     bdc:	ldp	x24, x23, [sp, #16]
     be0:	ldp	x29, x30, [sp], #64
     be4:	b	0 <ctf_set_errno>
     be8:	ldr	x8, [x19, #40]
     bec:	ldr	x0, [x19, #8]
     bf0:	mov	w1, #0xc                   	// #12
     bf4:	sub	x8, x8, #0x1
     bf8:	str	x8, [x19, #40]
     bfc:	b	bd4 <ctf_accumulate_archive_names+0xd8>

0000000000000c00 <ctf_change_parent_name>:
     c00:	mov	x0, x1
     c04:	mov	x1, x2
     c08:	b	0 <ctf_parent_name_set>

0000000000000c0c <ctf_link_one_input_archive_member>:
     c0c:	stp	x29, x30, [sp, #-48]!
     c10:	stp	x22, x21, [sp, #16]
     c14:	mov	x21, x1
     c18:	adrp	x1, 0 <_CTF_SECTION>
     c1c:	stp	x20, x19, [sp, #32]
     c20:	mov	x20, x0
     c24:	add	x1, x1, #0x0
     c28:	mov	x0, x21
     c2c:	mov	x29, sp
     c30:	mov	x19, x2
     c34:	bl	0 <strcmp>
     c38:	cbz	w0, cd4 <ctf_link_one_input_archive_member+0xc8>
     c3c:	mov	x0, x21
     c40:	bl	0 <strdup>
     c44:	mov	x22, x19
     c48:	str	x0, [x22, #40]!
     c4c:	ldur	x1, [x22, #-16]
     c50:	mov	x0, x20
     c54:	bl	0 <ctf_import>
     c58:	mov	w8, #0x1                   	// #1
     c5c:	str	w8, [x22, #16]
     c60:	ldr	x8, [x22]
     c64:	cbz	x8, d10 <ctf_link_one_input_archive_member+0x104>
     c68:	adrp	x1, 0 <ctf_add_type_mapping>
     c6c:	add	x1, x1, #0x0
     c70:	mov	w2, #0x5                   	// #5
     c74:	mov	x0, x21
     c78:	str	x21, [x19, #32]
     c7c:	bl	0 <strncmp>
     c80:	cbnz	w0, c8c <ctf_link_one_input_archive_member+0x80>
     c84:	add	x8, x21, #0x5
     c88:	str	x8, [x19, #32]
     c8c:	adrp	x1, 0 <ctf_add_type_mapping>
     c90:	add	x1, x1, #0x0
     c94:	mov	x0, x20
     c98:	mov	x2, x19
     c9c:	str	x20, [x19, #16]
     ca0:	bl	0 <ctf_type_iter_all>
     ca4:	tbnz	w0, #31, cbc <ctf_link_one_input_archive_member+0xb0>
     ca8:	adrp	x1, 0 <ctf_add_type_mapping>
     cac:	add	x1, x1, #0x0
     cb0:	mov	x0, x20
     cb4:	mov	x2, x19
     cb8:	bl	0 <ctf_variable_iter>
     cbc:	mov	w21, w0
     cc0:	ldr	x0, [x19, #40]
     cc4:	str	wzr, [x19, #56]
     cc8:	bl	0 <free>
     ccc:	asr	w0, w21, #31
     cd0:	b	d1c <ctf_link_one_input_archive_member+0x110>
     cd4:	ldr	w8, [x19, #48]
     cd8:	cbz	w8, ce4 <ctf_link_one_input_archive_member+0xd8>
     cdc:	mov	w0, wzr
     ce0:	b	d1c <ctf_link_one_input_archive_member+0x110>
     ce4:	adrp	x0, 0 <ctf_add_type_mapping>
     ce8:	add	x0, x0, #0x0
     cec:	bl	0 <strdup>
     cf0:	mov	x22, x19
     cf4:	str	x0, [x22, #40]!
     cf8:	cbz	x0, d10 <ctf_link_one_input_archive_member+0x104>
     cfc:	ldr	x1, [x19, #8]
     d00:	bl	0 <ctf_str_append>
     d04:	cbz	x0, d2c <ctf_link_one_input_archive_member+0x120>
     d08:	str	x0, [x22]
     d0c:	b	c68 <ctf_link_one_input_archive_member+0x5c>
     d10:	mov	w1, #0xc                   	// #12
     d14:	mov	x0, x20
     d18:	bl	0 <ctf_set_errno>
     d1c:	ldp	x20, x19, [sp, #32]
     d20:	ldp	x22, x21, [sp, #16]
     d24:	ldp	x29, x30, [sp], #48
     d28:	ret
     d2c:	ldr	x0, [x22]
     d30:	bl	0 <free>
     d34:	b	c60 <ctf_link_one_input_archive_member+0x54>

0000000000000d38 <empty_link_type_mapping>:
     d38:	ldr	x0, [x1, #664]
     d3c:	cbz	x0, d44 <empty_link_type_mapping+0xc>
     d40:	b	0 <ctf_dynhash_empty>
     d44:	ret

0000000000000d48 <ctf_link_one_type>:
     d48:	stp	x29, x30, [sp, #-64]!
     d4c:	stp	x22, x21, [sp, #32]
     d50:	stp	x20, x19, [sp, #48]
     d54:	ldr	w8, [x2, #52]
     d58:	mov	x19, x2
     d5c:	str	x23, [sp, #16]
     d60:	mov	x29, sp
     d64:	cbz	w8, d84 <ctf_link_one_type+0x3c>
     d68:	adrp	x0, 0 <ctf_add_type_mapping>
     d6c:	add	x0, x0, #0x0
     d70:	bl	0 <ctf_dprintf>
     d74:	ldr	x0, [x19]
     d78:	mov	w1, #0x419                 	// #1049
     d7c:	bl	0 <ctf_set_errno>
     d80:	b	e34 <ctf_link_one_type+0xec>
     d84:	ldr	w8, [x19, #56]
     d88:	mov	x20, x0
     d8c:	cbz	w8, e10 <ctf_link_one_type+0xc8>
     d90:	ldp	x0, x1, [x19]
     d94:	ldr	x2, [x19, #32]
     d98:	bl	378 <ctf_create_per_cu>
     d9c:	cbz	x0, e30 <ctf_link_one_type+0xe8>
     da0:	ldr	x1, [x19, #16]
     da4:	mov	x2, x20
     da8:	mov	x21, x0
     dac:	bl	0 <ctf_add_type>
     db0:	cmn	x0, #0x1
     db4:	b.ne	e28 <ctf_link_one_type+0xe0>  // b.any
     db8:	mov	x0, x21
     dbc:	bl	0 <ctf_errno>
     dc0:	cmp	w0, #0x41b
     dc4:	b.eq	e28 <ctf_link_one_type+0xe0>  // b.none
     dc8:	ldr	x22, [x19, #40]
     dcc:	ldr	x23, [x19, #8]
     dd0:	mov	w21, w0
     dd4:	bl	0 <ctf_errmsg>
     dd8:	mov	x5, x0
     ddc:	adrp	x0, 0 <ctf_add_type_mapping>
     de0:	add	x0, x0, #0x0
     de4:	mov	x1, x20
     de8:	mov	x2, x22
     dec:	mov	x3, x23
     df0:	mov	x4, x22
     df4:	bl	0 <ctf_dprintf>
     df8:	cmp	w21, #0x411
     dfc:	b.ne	e28 <ctf_link_one_type+0xe0>  // b.any
     e00:	ldr	x0, [x19]
     e04:	mov	w1, wzr
     e08:	bl	0 <ctf_set_errno>
     e0c:	b	e28 <ctf_link_one_type+0xe0>
     e10:	ldr	x0, [x19]
     e14:	ldr	x1, [x19, #16]
     e18:	mov	x2, x20
     e1c:	bl	0 <ctf_add_type>
     e20:	cmn	x0, #0x1
     e24:	b.eq	e48 <ctf_link_one_type+0x100>  // b.none
     e28:	mov	w0, wzr
     e2c:	b	e34 <ctf_link_one_type+0xec>
     e30:	mov	w0, #0xffffffff            	// #-1
     e34:	ldp	x20, x19, [sp, #48]
     e38:	ldp	x22, x21, [sp, #32]
     e3c:	ldr	x23, [sp, #16]
     e40:	ldp	x29, x30, [sp], #64
     e44:	ret
     e48:	ldr	x0, [x19]
     e4c:	bl	0 <ctf_errno>
     e50:	cmp	w0, #0x411
     e54:	b.eq	e8c <ctf_link_one_type+0x144>  // b.none
     e58:	cmp	w0, #0x41b
     e5c:	b.eq	e28 <ctf_link_one_type+0xe0>  // b.none
     e60:	ldr	x21, [x19, #40]
     e64:	ldr	x19, [x19, #8]
     e68:	bl	0 <ctf_errmsg>
     e6c:	mov	x4, x0
     e70:	adrp	x0, 0 <ctf_add_type_mapping>
     e74:	add	x0, x0, #0x0
     e78:	mov	x1, x20
     e7c:	mov	x2, x21
     e80:	mov	x3, x19
     e84:	bl	0 <ctf_dprintf>
     e88:	b	e28 <ctf_link_one_type+0xe0>
     e8c:	ldr	x0, [x19]
     e90:	mov	w1, wzr
     e94:	bl	0 <ctf_set_errno>
     e98:	b	d90 <ctf_link_one_type+0x48>

0000000000000e9c <ctf_link_one_variable>:
     e9c:	sub	sp, sp, #0x50
     ea0:	stp	x29, x30, [sp, #16]
     ea4:	stp	x22, x21, [sp, #48]
     ea8:	stp	x20, x19, [sp, #64]
     eac:	ldr	x8, [x2]
     eb0:	add	x29, sp, #0x10
     eb4:	mov	x19, x2
     eb8:	mov	x20, x0
     ebc:	str	x8, [x29, #24]
     ec0:	ldr	x8, [x2, #16]
     ec4:	add	x2, x29, #0x18
     ec8:	str	x23, [sp, #32]
     ecc:	mov	x21, x1
     ed0:	mov	x0, x8
     ed4:	bl	d8 <ctf_type_mapping>
     ed8:	mov	x22, x0
     edc:	cbz	x0, ef0 <ctf_link_one_variable+0x54>
     ee0:	ldr	x23, [x29, #24]
     ee4:	ldr	x8, [x19]
     ee8:	cmp	x23, x8
     eec:	b.eq	f48 <ctf_link_one_variable+0xac>  // b.none
     ef0:	ldp	x0, x1, [x19]
     ef4:	ldr	x2, [x19, #32]
     ef8:	bl	378 <ctf_create_per_cu>
     efc:	cbz	x0, f40 <ctf_link_one_variable+0xa4>
     f00:	mov	x23, x0
     f04:	cbnz	x22, f24 <ctf_link_one_variable+0x88>
     f08:	str	x23, [x29, #24]
     f0c:	ldr	x0, [x19, #16]
     f10:	add	x2, x29, #0x18
     f14:	mov	x1, x21
     f18:	bl	d8 <ctf_type_mapping>
     f1c:	mov	x22, x0
     f20:	cbz	x0, fa8 <ctf_link_one_variable+0x10c>
     f24:	add	x3, sp, #0x8
     f28:	mov	x0, x20
     f2c:	mov	x1, x23
     f30:	mov	x2, x22
     f34:	bl	fdc <check_variable>
     f38:	cbnz	w0, f60 <ctf_link_one_variable+0xc4>
     f3c:	b	fc4 <ctf_link_one_variable+0x128>
     f40:	mov	w0, #0xffffffff            	// #-1
     f44:	b	fc4 <ctf_link_one_variable+0x128>
     f48:	add	x3, sp, #0x8
     f4c:	mov	x0, x20
     f50:	mov	x1, x23
     f54:	mov	x2, x22
     f58:	bl	fdc <check_variable>
     f5c:	cbz	w0, f90 <ctf_link_one_variable+0xf4>
     f60:	mov	x0, x23
     f64:	mov	x1, x20
     f68:	mov	x2, x22
     f6c:	bl	0 <ctf_add_variable>
     f70:	tbz	w0, #31, fc0 <ctf_link_one_variable+0x124>
     f74:	ldr	x19, [x19]
     f78:	mov	x0, x23
     f7c:	bl	0 <ctf_errno>
     f80:	mov	w1, w0
     f84:	mov	x0, x19
     f88:	bl	0 <ctf_set_errno>
     f8c:	b	fc4 <ctf_link_one_variable+0x128>
     f90:	ldr	x8, [sp, #8]
     f94:	cbz	x8, ef0 <ctf_link_one_variable+0x54>
     f98:	ldr	x8, [x8, #24]
     f9c:	cmp	x8, x21
     fa0:	b.ne	ef0 <ctf_link_one_variable+0x54>  // b.any
     fa4:	b	fc0 <ctf_link_one_variable+0x124>
     fa8:	ldr	x3, [x19, #8]
     fac:	adrp	x0, 0 <ctf_add_type_mapping>
     fb0:	add	x0, x0, #0x0
     fb4:	mov	x1, x21
     fb8:	mov	x2, x20
     fbc:	bl	0 <ctf_dprintf>
     fc0:	mov	w0, wzr
     fc4:	ldp	x20, x19, [sp, #64]
     fc8:	ldp	x22, x21, [sp, #48]
     fcc:	ldr	x23, [sp, #32]
     fd0:	ldp	x29, x30, [sp, #16]
     fd4:	add	sp, sp, #0x50
     fd8:	ret

0000000000000fdc <check_variable>:
     fdc:	stp	x29, x30, [sp, #-48]!
     fe0:	stp	x20, x19, [sp, #32]
     fe4:	ldr	x8, [x1, #592]
     fe8:	mov	x19, x0
     fec:	mov	x1, x19
     ff0:	str	x21, [sp, #16]
     ff4:	mov	x0, x8
     ff8:	mov	x29, sp
     ffc:	mov	x21, x3
    1000:	mov	x20, x2
    1004:	bl	0 <ctf_dynhash_lookup>
    1008:	str	x0, [x21]
    100c:	cbz	x0, 1034 <check_variable+0x58>
    1010:	ldr	x8, [x0, #24]
    1014:	cmp	x8, x20
    1018:	b.eq	102c <check_variable+0x50>  // b.none
    101c:	adrp	x0, 0 <ctf_add_type_mapping>
    1020:	add	x0, x0, #0x0
    1024:	mov	x1, x19
    1028:	bl	0 <ctf_dprintf>
    102c:	mov	w0, wzr
    1030:	b	1038 <check_variable+0x5c>
    1034:	mov	w0, #0x1                   	// #1
    1038:	ldp	x20, x19, [sp, #32]
    103c:	ldr	x21, [sp, #16]
    1040:	ldp	x29, x30, [sp], #48
    1044:	ret

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	sub	sp, sp, #0x70
   4:	stp	x20, x19, [sp, #96]
   8:	mov	x19, x0
   c:	stp	x29, x30, [sp, #16]
  10:	stp	x28, x27, [sp, #32]
  14:	stp	x26, x25, [sp, #48]
  18:	stp	x24, x23, [sp, #64]
  1c:	stp	x22, x21, [sp, #80]
  20:	add	x29, sp, #0x10
  24:	cbz	x1, 24c <ctf_lookup_by_name+0x24c>
  28:	mov	x0, x1
  2c:	mov	x20, x1
  30:	bl	0 <strlen>
  34:	ldrb	w27, [x20]
  38:	cbz	w27, 2b8 <ctf_lookup_by_name+0x2b8>
  3c:	add	x26, x20, x0
  40:	bl	0 <__ctype_b_loc>
  44:	mov	x21, x0
  48:	mov	x23, xzr
  4c:	add	x8, x19, #0xf0
  50:	mov	x24, x20
  54:	str	x8, [sp, #8]
  58:	ldr	x28, [x21]
  5c:	and	x8, x27, #0xff
  60:	ldrh	w8, [x28, x8, lsl #1]
  64:	tbz	w8, #13, 74 <ctf_lookup_by_name+0x74>
  68:	ldrb	w27, [x24, #1]!
  6c:	ldrh	w8, [x28, x27, lsl #1]
  70:	tbnz	w8, #13, 68 <ctf_lookup_by_name+0x68>
  74:	cmp	x24, x26
  78:	b.eq	2a4 <ctf_lookup_by_name+0x2a4>  // b.none
  7c:	add	x22, x24, #0x1
  80:	adrp	x1, 0 <ctf_lookup_by_name>
  84:	mov	x0, x22
  88:	add	x1, x1, #0x0
  8c:	bl	0 <strpbrk>
  90:	cmp	x0, #0x0
  94:	and	w8, w27, #0xff
  98:	csel	x25, x26, x0, eq  // eq = none
  9c:	cmp	w8, #0x2a
  a0:	b.ne	fc <ctf_lookup_by_name+0xfc>  // b.any
  a4:	ldr	w8, [x19, #544]
  a8:	ldr	x9, [x19, #448]
  ac:	and	x10, x23, x8
  b0:	ldr	w9, [x9, x10, lsl #2]
  b4:	cbnz	w9, e0 <ctf_lookup_by_name+0xe0>
  b8:	mov	x0, x19
  bc:	mov	x1, x23
  c0:	bl	0 <ctf_type_resolve_unsliced>
  c4:	cmn	x0, #0x1
  c8:	b.eq	254 <ctf_lookup_by_name+0x254>  // b.none
  cc:	ldr	w8, [x19, #544]
  d0:	ldr	x9, [x19, #448]
  d4:	and	x10, x0, x8
  d8:	ldr	w9, [x9, x10, lsl #2]
  dc:	cbz	w9, 254 <ctf_lookup_by_name+0x254>
  e0:	ldrb	w10, [x19, #552]
  e4:	add	w8, w8, #0x1
  e8:	mov	x25, x22
  ec:	sbfx	w10, w10, #0, #1
  f0:	and	w8, w10, w8
  f4:	orr	w23, w9, w8
  f8:	b	238 <ctf_lookup_by_name+0x238>
  fc:	ldurb	w8, [x25, #-1]
 100:	sub	x22, x25, x24
 104:	add	x8, x8, w22, sxtw
 108:	cmp	w8, #0x69
 10c:	b.lt	154 <ctf_lookup_by_name+0x154>  // b.tstop
 110:	sub	x8, x8, #0x69
 114:	cmp	w8, #0x14
 118:	b.hi	154 <ctf_lookup_by_name+0x154>  // b.pmore
 11c:	adrp	x9, 0 <ctf_lookup_by_name>
 120:	add	x9, x9, #0x0
 124:	add	x9, x9, x8, lsl #4
 128:	ldr	x9, [x9, #8]
 12c:	cmp	x9, x22
 130:	b.ne	154 <ctf_lookup_by_name+0x154>  // b.any
 134:	adrp	x9, 0 <ctf_lookup_by_name>
 138:	lsl	x8, x8, #4
 13c:	add	x9, x9, #0x0
 140:	ldr	x0, [x9, x8]
 144:	mov	x1, x24
 148:	mov	x2, x22
 14c:	bl	0 <strncmp>
 150:	cbz	w0, 238 <ctf_lookup_by_name+0x238>
 154:	ldr	x1, [x19, #216]
 158:	cbz	x1, 254 <ctf_lookup_by_name+0x254>
 15c:	ldr	x27, [sp, #8]
 160:	ldrb	w8, [x1]
 164:	cbz	w8, 178 <ctf_lookup_by_name+0x178>
 168:	mov	x0, x24
 16c:	mov	x2, x22
 170:	bl	0 <strncmp>
 174:	cbnz	w0, 184 <ctf_lookup_by_name+0x184>
 178:	ldur	x8, [x27, #-16]
 17c:	cmp	x22, x8
 180:	b.cs	190 <ctf_lookup_by_name+0x190>  // b.hs, b.nlast
 184:	ldr	x1, [x27], #24
 188:	cbnz	x1, 160 <ctf_lookup_by_name+0x160>
 18c:	b	254 <ctf_lookup_by_name+0x254>
 190:	add	x8, x24, x8
 194:	sub	x23, x8, #0x1
 198:	ldrb	w8, [x23, #1]!
 19c:	ldrh	w8, [x28, x8, lsl #1]
 1a0:	tbnz	w8, #13, 198 <ctf_lookup_by_name+0x198>
 1a4:	mov	w1, #0x2a                  	// #42
 1a8:	mov	x0, x23
 1ac:	bl	0 <strchr>
 1b0:	cmp	x0, #0x0
 1b4:	csel	x8, x26, x0, eq  // eq = none
 1b8:	add	x25, x8, #0x1
 1bc:	ldurb	w8, [x25, #-2]
 1c0:	sub	x25, x25, #0x1
 1c4:	ldrh	w8, [x28, x8, lsl #1]
 1c8:	tbnz	w8, #13, 1bc <ctf_lookup_by_name+0x1bc>
 1cc:	ldr	x8, [x19, #712]
 1d0:	ldr	x0, [x19, #704]
 1d4:	sub	x24, x25, x23
 1d8:	add	x9, x24, #0x1
 1dc:	cmp	x8, x9
 1e0:	b.cs	204 <ctf_lookup_by_name+0x204>  // b.hs, b.nlast
 1e4:	bl	0 <free>
 1e8:	mov	x0, x23
 1ec:	mov	x1, x24
 1f0:	bl	0 <xstrndup>
 1f4:	mov	x2, x0
 1f8:	str	x0, [x19, #704]
 1fc:	cbnz	x0, 21c <ctf_lookup_by_name+0x21c>
 200:	b	2e0 <ctf_lookup_by_name+0x2e0>
 204:	mov	x1, x23
 208:	mov	x2, x24
 20c:	bl	0 <memcpy>
 210:	ldr	x8, [x19, #704]
 214:	strb	wzr, [x8, x24]
 218:	ldr	x2, [x19, #704]
 21c:	ldur	x1, [x27, #-8]
 220:	mov	x0, x19
 224:	bl	0 <ctf_lookup_by_rawhash>
 228:	cbz	x0, 254 <ctf_lookup_by_name+0x254>
 22c:	ldur	x8, [x27, #-24]
 230:	mov	x23, x0
 234:	cbz	x8, 254 <ctf_lookup_by_name+0x254>
 238:	ldrb	w27, [x25]
 23c:	mov	x24, x25
 240:	cbnz	w27, 58 <ctf_lookup_by_name+0x58>
 244:	mov	w8, wzr
 248:	b	2b0 <ctf_lookup_by_name+0x2b0>
 24c:	mov	w1, #0x16                  	// #22
 250:	b	2bc <ctf_lookup_by_name+0x2bc>
 254:	mov	w1, #0x402                 	// #1026
 258:	mov	x0, x19
 25c:	bl	0 <ctf_set_errno>
 260:	ldr	x0, [x19, #512]
 264:	cbz	x0, 27c <ctf_lookup_by_name+0x27c>
 268:	mov	x1, x20
 26c:	bl	0 <ctf_lookup_by_name>
 270:	mov	x23, x0
 274:	cmn	x0, #0x1
 278:	b.ne	280 <ctf_lookup_by_name+0x280>  // b.any
 27c:	mov	x23, #0xffffffffffffffff    	// #-1
 280:	mov	x0, x23
 284:	ldp	x20, x19, [sp, #96]
 288:	ldp	x22, x21, [sp, #80]
 28c:	ldp	x24, x23, [sp, #64]
 290:	ldp	x26, x25, [sp, #48]
 294:	ldp	x28, x27, [sp, #32]
 298:	ldp	x29, x30, [sp, #16]
 29c:	add	sp, sp, #0x70
 2a0:	ret
 2a4:	ldrb	w8, [x26]
 2a8:	cmp	w8, #0x0
 2ac:	cset	w8, ne  // ne = any
 2b0:	cbz	x23, 2b8 <ctf_lookup_by_name+0x2b8>
 2b4:	cbz	w8, 280 <ctf_lookup_by_name+0x280>
 2b8:	mov	w1, #0x403                 	// #1027
 2bc:	mov	x0, x19
 2c0:	ldp	x20, x19, [sp, #96]
 2c4:	ldp	x22, x21, [sp, #80]
 2c8:	ldp	x24, x23, [sp, #64]
 2cc:	ldp	x26, x25, [sp, #48]
 2d0:	ldp	x28, x27, [sp, #32]
 2d4:	ldp	x29, x30, [sp, #16]
 2d8:	add	sp, sp, #0x70
 2dc:	b	0 <ctf_set_errno>
 2e0:	mov	w1, #0xc                   	// #12
 2e4:	mov	x0, x19
 2e8:	bl	0 <ctf_set_errno>
 2ec:	b	27c <ctf_lookup_by_name+0x27c>

00000000000002f0 <ctf_lookup_variable>:
 2f0:	sub	sp, sp, #0x30
 2f4:	stp	x29, x30, [sp, #16]
 2f8:	stp	x20, x19, [sp, #32]
 2fc:	stp	x0, x1, [sp]
 300:	mov	x19, x1
 304:	ldp	x1, x2, [x0, #464]
 308:	adrp	x4, 0 <ctf_lookup_by_name>
 30c:	mov	x20, x0
 310:	add	x4, x4, #0x0
 314:	mov	x0, sp
 318:	mov	w3, #0x8                   	// #8
 31c:	add	x29, sp, #0x10
 320:	bl	0 <bsearch>
 324:	cbz	x0, 330 <ctf_lookup_variable+0x40>
 328:	ldr	w0, [x0, #4]
 32c:	b	350 <ctf_lookup_variable+0x60>
 330:	ldr	x0, [x20, #512]
 334:	cbz	x0, 344 <ctf_lookup_variable+0x54>
 338:	mov	x1, x19
 33c:	bl	2f0 <ctf_lookup_variable>
 340:	b	350 <ctf_lookup_variable+0x60>
 344:	mov	w1, #0x407                 	// #1031
 348:	mov	x0, x20
 34c:	bl	0 <ctf_set_errno>
 350:	ldp	x20, x19, [sp, #32]
 354:	ldp	x29, x30, [sp, #16]
 358:	add	sp, sp, #0x30
 35c:	ret

0000000000000360 <ctf_lookup_var>:
 360:	stp	x29, x30, [sp, #-32]!
 364:	str	x19, [sp, #16]
 368:	ldp	x0, x19, [x0]
 36c:	ldr	w1, [x1]
 370:	mov	x29, sp
 374:	bl	0 <ctf_strptr>
 378:	mov	x1, x0
 37c:	mov	x0, x19
 380:	ldr	x19, [sp, #16]
 384:	ldp	x29, x30, [sp], #32
 388:	b	0 <strcmp>

000000000000038c <ctf_lookup_symbol_name>:
 38c:	sub	sp, sp, #0x40
 390:	stp	x29, x30, [sp, #32]
 394:	ldr	x8, [x0, #64]
 398:	str	x19, [sp, #48]
 39c:	mov	x19, x0
 3a0:	add	x29, sp, #0x20
 3a4:	cbz	x8, 3d0 <ctf_lookup_symbol_name+0x44>
 3a8:	ldr	x9, [x19, #432]
 3ac:	cmp	x9, x1
 3b0:	b.ls	3d8 <ctf_lookup_symbol_name+0x4c>  // b.plast
 3b4:	ldr	x9, [x19, #80]
 3b8:	cmp	x9, #0x10
 3bc:	b.ne	3fc <ctf_lookup_symbol_name+0x70>  // b.any
 3c0:	add	x0, x8, x1, lsl #4
 3c4:	add	x1, sp, #0x8
 3c8:	bl	0 <ctf_sym_to_elf64>
 3cc:	b	404 <ctf_lookup_symbol_name+0x78>
 3d0:	mov	w1, #0x3f2                 	// #1010
 3d4:	b	3dc <ctf_lookup_symbol_name+0x50>
 3d8:	mov	w1, #0x16                  	// #22
 3dc:	mov	x0, x19
 3e0:	bl	0 <ctf_set_errno>
 3e4:	adrp	x0, 0 <_CTF_NULLSTR>
 3e8:	add	x0, x0, #0x0
 3ec:	ldr	x19, [sp, #48]
 3f0:	ldp	x29, x30, [sp, #32]
 3f4:	add	sp, sp, #0x40
 3f8:	ret
 3fc:	mov	w9, #0x18                  	// #24
 400:	madd	x0, x1, x9, x8
 404:	ldr	w8, [x0]
 408:	ldr	x9, [x19, #360]
 40c:	cmp	x9, x8
 410:	b.ls	3e4 <ctf_lookup_symbol_name+0x58>  // b.plast
 414:	ldr	x9, [x19, #352]
 418:	add	x0, x9, x8
 41c:	b	3ec <ctf_lookup_symbol_name+0x60>

0000000000000420 <ctf_lookup_by_symbol>:
 420:	ldr	x8, [x0, #64]
 424:	cbz	x8, 44c <ctf_lookup_by_symbol+0x2c>
 428:	ldr	x9, [x0, #432]
 42c:	cmp	x9, x1
 430:	b.ls	454 <ctf_lookup_by_symbol+0x34>  // b.plast
 434:	ldr	x9, [x0, #80]
 438:	cmp	x9, #0x10
 43c:	b.ne	45c <ctf_lookup_by_symbol+0x3c>  // b.any
 440:	add	x8, x8, x1, lsl #4
 444:	ldrb	w8, [x8, #12]
 448:	b	468 <ctf_lookup_by_symbol+0x48>
 44c:	mov	w1, #0x3f2                 	// #1010
 450:	b	0 <ctf_set_errno>
 454:	mov	w1, #0x16                  	// #22
 458:	b	0 <ctf_set_errno>
 45c:	mov	w9, #0x18                  	// #24
 460:	madd	x8, x1, x9, x8
 464:	ldrb	w8, [x8, #4]
 468:	and	w8, w8, #0xf
 46c:	cmp	w8, #0x1
 470:	b.ne	498 <ctf_lookup_by_symbol+0x78>  // b.any
 474:	ldr	x8, [x0, #424]
 478:	ldr	w8, [x8, x1, lsl #2]
 47c:	cmn	w8, #0x1
 480:	b.eq	4a0 <ctf_lookup_by_symbol+0x80>  // b.none
 484:	ldr	x9, [x0, #408]
 488:	ldr	w8, [x9, x8]
 48c:	cbz	w8, 4a0 <ctf_lookup_by_symbol+0x80>
 490:	mov	x0, x8
 494:	ret
 498:	mov	w1, #0x406                 	// #1030
 49c:	b	0 <ctf_set_errno>
 4a0:	mov	w1, #0x407                 	// #1031
 4a4:	b	0 <ctf_set_errno>

00000000000004a8 <ctf_lookup_by_id>:
 4a8:	stp	x29, x30, [sp, #-32]!
 4ac:	stp	x20, x19, [sp, #16]
 4b0:	mov	x19, x0
 4b4:	ldr	x0, [x0]
 4b8:	mov	x29, sp
 4bc:	ldr	w8, [x0, #552]
 4c0:	tbnz	w8, #0, 4cc <ctf_lookup_by_id+0x24>
 4c4:	mov	x20, x0
 4c8:	b	4e8 <ctf_lookup_by_id+0x40>
 4cc:	ldr	w9, [x0, #544]
 4d0:	mov	x20, x0
 4d4:	cmp	x9, x1
 4d8:	b.cc	4e8 <ctf_lookup_by_id+0x40>  // b.lo, b.ul, b.last
 4dc:	ldr	x20, [x0, #512]
 4e0:	cbz	x20, 550 <ctf_lookup_by_id+0xa8>
 4e4:	ldr	w8, [x20, #552]
 4e8:	tbnz	w8, #1, 51c <ctf_lookup_by_id+0x74>
 4ec:	ldr	w8, [x20, #544]
 4f0:	ands	x8, x8, x1
 4f4:	b.eq	538 <ctf_lookup_by_id+0x90>  // b.none
 4f8:	ldr	x9, [x20, #480]
 4fc:	cmp	x8, x9
 500:	b.hi	538 <ctf_lookup_by_id+0x90>  // b.pmore
 504:	str	x20, [x19]
 508:	ldr	x9, [x20, #440]
 50c:	ldr	x10, [x20, #408]
 510:	ldr	w8, [x9, x8, lsl #2]
 514:	add	x0, x10, x8
 518:	b	544 <ctf_lookup_by_id+0x9c>
 51c:	mov	x0, x20
 520:	bl	0 <ctf_dynamic_type>
 524:	cbz	x0, 534 <ctf_lookup_by_id+0x8c>
 528:	str	x20, [x19]
 52c:	add	x0, x0, #0x18
 530:	b	544 <ctf_lookup_by_id+0x9c>
 534:	ldr	x0, [x19]
 538:	mov	w1, #0x3fa                 	// #1018
 53c:	bl	0 <ctf_set_errno>
 540:	mov	x0, xzr
 544:	ldp	x20, x19, [sp, #16]
 548:	ldp	x29, x30, [sp], #32
 54c:	ret
 550:	mov	w1, #0x3f3                 	// #1011
 554:	b	53c <ctf_lookup_by_id+0x94>

0000000000000558 <ctf_func_info>:
 558:	stp	x29, x30, [sp, #-64]!
 55c:	stp	x22, x21, [sp, #32]
 560:	stp	x20, x19, [sp, #48]
 564:	ldr	x8, [x0, #64]
 568:	mov	x19, x0
 56c:	str	x23, [sp, #16]
 570:	mov	x29, sp
 574:	cbz	x8, 5a0 <ctf_func_info+0x48>
 578:	ldr	x9, [x19, #432]
 57c:	cmp	x9, x1
 580:	b.ls	5a8 <ctf_func_info+0x50>  // b.plast
 584:	ldr	x9, [x19, #80]
 588:	mov	x20, x2
 58c:	cmp	x9, #0x10
 590:	b.ne	5b0 <ctf_func_info+0x58>  // b.any
 594:	add	x8, x8, x1, lsl #4
 598:	ldrb	w8, [x8, #12]
 59c:	b	5bc <ctf_func_info+0x64>
 5a0:	mov	w1, #0x3f2                 	// #1010
 5a4:	b	654 <ctf_func_info+0xfc>
 5a8:	mov	w1, #0x16                  	// #22
 5ac:	b	654 <ctf_func_info+0xfc>
 5b0:	mov	w9, #0x18                  	// #24
 5b4:	madd	x8, x1, x9, x8
 5b8:	ldrb	w8, [x8, #4]
 5bc:	and	w8, w8, #0xf
 5c0:	cmp	w8, #0x2
 5c4:	b.ne	640 <ctf_func_info+0xe8>  // b.any
 5c8:	ldr	x8, [x19, #424]
 5cc:	ldr	w8, [x8, x1, lsl #2]
 5d0:	cmn	w8, #0x1
 5d4:	b.eq	648 <ctf_func_info+0xf0>  // b.none
 5d8:	ldr	x9, [x19, #408]
 5dc:	ldr	x10, [x19]
 5e0:	add	x23, x9, x8
 5e4:	ldr	w22, [x23]
 5e8:	ldr	x8, [x10]
 5ec:	mov	w0, w22
 5f0:	blr	x8
 5f4:	ldr	x8, [x19]
 5f8:	mov	w21, w0
 5fc:	mov	w0, w22
 600:	ldr	x8, [x8, #16]
 604:	blr	x8
 608:	orr	w8, w0, w21
 60c:	cbz	w8, 648 <ctf_func_info+0xf0>
 610:	cmp	w21, #0x5
 614:	b.ne	650 <ctf_func_info+0xf8>  // b.any
 618:	ldr	w8, [x23, #4]
 61c:	stp	w0, wzr, [x20, #8]
 620:	str	x8, [x20]
 624:	cbz	w0, 65c <ctf_func_info+0x104>
 628:	sub	w8, w0, #0x1
 62c:	add	x9, x23, w8, uxtw #2
 630:	ldr	w9, [x9, #8]
 634:	cbz	w9, 670 <ctf_func_info+0x118>
 638:	mov	w0, wzr
 63c:	b	65c <ctf_func_info+0x104>
 640:	mov	w1, #0x404                 	// #1028
 644:	b	654 <ctf_func_info+0xfc>
 648:	mov	w1, #0x405                 	// #1029
 64c:	b	654 <ctf_func_info+0xfc>
 650:	mov	w1, #0x3ef                 	// #1007
 654:	mov	x0, x19
 658:	bl	0 <ctf_set_errno>
 65c:	ldp	x20, x19, [sp, #48]
 660:	ldp	x22, x21, [sp, #32]
 664:	ldr	x23, [sp, #16]
 668:	ldp	x29, x30, [sp], #64
 66c:	ret
 670:	mov	w0, wzr
 674:	mov	w9, #0x1                   	// #1
 678:	stp	w8, w9, [x20, #8]
 67c:	b	65c <ctf_func_info+0x104>

0000000000000680 <ctf_func_args>:
 680:	sub	sp, sp, #0x40
 684:	stp	x22, x21, [sp, #32]
 688:	mov	w22, w2
 68c:	mov	x2, sp
 690:	stp	x29, x30, [sp, #16]
 694:	stp	x20, x19, [sp, #48]
 698:	add	x29, sp, #0x10
 69c:	mov	x19, x3
 6a0:	mov	x20, x1
 6a4:	mov	x21, x0
 6a8:	bl	558 <ctf_func_info>
 6ac:	tbnz	w0, #31, 6ec <ctf_func_args+0x6c>
 6b0:	ldr	w8, [sp, #8]
 6b4:	cmp	w8, w22
 6b8:	csel	w8, w22, w8, hi  // hi = pmore
 6bc:	cbz	w8, 6e4 <ctf_func_args+0x64>
 6c0:	ldr	x9, [x21, #424]
 6c4:	ldr	x10, [x21, #408]
 6c8:	ldr	w9, [x9, x20, lsl #2]
 6cc:	add	x9, x10, x9
 6d0:	add	x9, x9, #0x8
 6d4:	ldr	w10, [x9], #4
 6d8:	subs	w8, w8, #0x1
 6dc:	str	x10, [x19], #8
 6e0:	b.ne	6d4 <ctf_func_args+0x54>  // b.any
 6e4:	mov	w0, wzr
 6e8:	b	6f0 <ctf_func_args+0x70>
 6ec:	mov	w0, #0xffffffff            	// #-1
 6f0:	ldp	x20, x19, [sp, #48]
 6f4:	ldp	x22, x21, [sp, #32]
 6f8:	ldp	x29, x30, [sp, #16]
 6fc:	add	sp, sp, #0x40
 700:	ret

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_set_ctl_hashes>:
       0:	adrp	x8, 0 <ctf_set_ctl_hashes>
       4:	add	x8, x8, #0x0
       8:	mov	w9, #0x6                   	// #6
       c:	stp	x8, x9, [x0, #216]
      10:	adrp	x8, 0 <ctf_set_ctl_hashes>
      14:	adrp	x11, 0 <ctf_set_ctl_hashes>
      18:	add	x8, x8, #0x0
      1c:	mov	w9, #0x4                   	// #4
      20:	add	x10, x0, #0x98
      24:	add	x11, x11, #0x0
      28:	stp	x8, x9, [x0, #264]
      2c:	adrp	x8, 31 <ctf_set_ctl_hashes+0x31>
      30:	stp	x10, x11, [x0, #232]
      34:	add	x10, x0, #0xb8
      38:	add	x8, x8, #0x0
      3c:	mov	w12, #0x5                   	// #5
      40:	add	x13, x0, #0xa8
      44:	stp	x10, x8, [x0, #280]
      48:	add	x8, x0, #0xc8
      4c:	stp	x12, x13, [x0, #248]
      50:	stp	xzr, xzr, [x0, #320]
      54:	stp	xzr, x8, [x0, #296]
      58:	str	xzr, [x0, #312]
      5c:	ret

0000000000000060 <ctf_simple_open>:
      60:	sub	sp, sp, #0x20
      64:	str	x7, [sp, #8]
      68:	mov	x7, xzr
      6c:	stp	x29, x30, [sp, #16]
      70:	add	x29, sp, #0x10
      74:	str	wzr, [sp]
      78:	bl	88 <ctf_simple_open_internal>
      7c:	ldp	x29, x30, [sp, #16]
      80:	add	sp, sp, #0x20
      84:	ret

0000000000000088 <ctf_simple_open_internal>:
      88:	sub	sp, sp, #0x70
      8c:	adrp	x10, 2c <ctf_set_ctl_hashes+0x2c>
      90:	mov	x9, x4
      94:	add	x10, x10, #0x0
      98:	stp	x29, x30, [sp, #96]
      9c:	add	x29, sp, #0x60
      a0:	cbz	x0, b4 <ctf_simple_open_internal+0x2c>
      a4:	mov	w8, #0x1                   	// #1
      a8:	stp	x10, x0, [x29, #-32]
      ac:	sub	x0, x29, #0x20
      b0:	stp	x1, x8, [x29, #-16]
      b4:	ldr	x8, [x29, #24]
      b8:	ldr	w4, [x29, #16]
      bc:	cbz	x2, e4 <ctf_simple_open_internal+0x5c>
      c0:	add	x1, sp, #0x20
      c4:	stp	x10, x2, [sp, #32]
      c8:	stp	x3, x9, [sp, #48]
      cc:	cbz	x5, ec <ctf_simple_open_internal+0x64>
      d0:	mov	w9, #0x1                   	// #1
      d4:	mov	x2, sp
      d8:	stp	x10, x5, [sp]
      dc:	stp	x6, x9, [sp, #16]
      e0:	b	f0 <ctf_simple_open_internal+0x68>
      e4:	mov	x1, xzr
      e8:	cbnz	x5, d0 <ctf_simple_open_internal+0x48>
      ec:	mov	x2, xzr
      f0:	mov	x3, x7
      f4:	mov	x5, x8
      f8:	bl	108 <ctf_bufopen_internal>
      fc:	ldp	x29, x30, [sp, #96]
     100:	add	sp, sp, #0x70
     104:	ret

0000000000000108 <ctf_bufopen_internal>:
     108:	stp	x29, x30, [sp, #-96]!
     10c:	stp	x28, x27, [sp, #16]
     110:	stp	x26, x25, [sp, #32]
     114:	stp	x24, x23, [sp, #48]
     118:	stp	x22, x21, [sp, #64]
     11c:	stp	x20, x19, [sp, #80]
     120:	mov	x29, sp
     124:	sub	sp, sp, #0x270
     128:	mov	x21, x5
     12c:	mov	w23, w4
     130:	mov	x24, x3
     134:	mov	x22, x2
     138:	mov	x20, x1
     13c:	mov	x25, x0
     140:	bl	0 <libctf_init_debug>
     144:	cbz	x25, 154 <ctf_bufopen_internal+0x4c>
     148:	cbz	x20, 17c <ctf_bufopen_internal+0x74>
     14c:	cbnz	x22, 17c <ctf_bufopen_internal+0x74>
     150:	cbnz	x24, 17c <ctf_bufopen_internal+0x74>
     154:	mov	w1, #0x16                  	// #22
     158:	mov	x0, x21
     15c:	add	sp, sp, #0x270
     160:	ldp	x20, x19, [sp, #80]
     164:	ldp	x22, x21, [sp, #64]
     168:	ldp	x24, x23, [sp, #48]
     16c:	ldp	x26, x25, [sp, #32]
     170:	ldp	x28, x27, [sp, #16]
     174:	ldp	x29, x30, [sp], #96
     178:	b	0 <ctf_set_open_errno>
     17c:	cbz	x20, 198 <ctf_bufopen_internal+0x90>
     180:	ldr	x8, [x20, #24]
     184:	orr	x8, x8, #0x8
     188:	cmp	x8, #0x18
     18c:	b.ne	210 <ctf_bufopen_internal+0x108>  // b.any
     190:	ldr	x8, [x20, #8]
     194:	cbz	x8, 218 <ctf_bufopen_internal+0x110>
     198:	cbz	x22, 1a4 <ctf_bufopen_internal+0x9c>
     19c:	ldr	x8, [x22, #8]
     1a0:	cbz	x8, 220 <ctf_bufopen_internal+0x118>
     1a4:	ldr	x8, [x25, #16]
     1a8:	cmp	x8, #0x3
     1ac:	b.hi	1b8 <ctf_bufopen_internal+0xb0>  // b.pmore
     1b0:	mov	w1, #0x3f1                 	// #1009
     1b4:	b	158 <ctf_bufopen_internal+0x50>
     1b8:	ldr	x27, [x25, #8]
     1bc:	adrp	x0, 0 <ctf_set_ctl_hashes>
     1c0:	add	x0, x0, #0x0
     1c4:	ldrh	w1, [x27]
     1c8:	ldrb	w2, [x27, #2]
     1cc:	bl	0 <ctf_dprintf>
     1d0:	ldrh	w8, [x27]
     1d4:	mov	w9, #0xdff2                	// #57330
     1d8:	cmp	w8, w9
     1dc:	b.ne	4a4 <ctf_bufopen_internal+0x39c>  // b.any
     1e0:	ldrb	w1, [x27, #2]
     1e4:	sub	w8, w1, #0x1
     1e8:	cmp	w8, #0x4
     1ec:	b.cs	4c8 <ctf_bufopen_internal+0x3c0>  // b.hs, b.nlast
     1f0:	cbz	x20, 228 <ctf_bufopen_internal+0x120>
     1f4:	cmp	w1, #0x2
     1f8:	b.hi	228 <ctf_bufopen_internal+0x120>  // b.pmore
     1fc:	adrp	x0, 0 <ctf_set_ctl_hashes>
     200:	add	x0, x0, #0x0
     204:	bl	0 <ctf_dprintf>
     208:	mov	w1, #0x40a                 	// #1034
     20c:	b	158 <ctf_bufopen_internal+0x50>
     210:	mov	w1, #0x3ec                 	// #1004
     214:	b	158 <ctf_bufopen_internal+0x50>
     218:	mov	w1, #0x3ed                 	// #1005
     21c:	b	158 <ctf_bufopen_internal+0x50>
     220:	mov	w1, #0x3ee                 	// #1006
     224:	b	158 <ctf_bufopen_internal+0x50>
     228:	cmp	w1, #0x4
     22c:	mov	w8, #0x34                  	// #52
     230:	mov	w9, #0x28                  	// #40
     234:	mov	w28, wzr
     238:	csel	x26, x9, x8, cc  // cc = lo, ul, last
     23c:	ldr	x8, [x25, #16]
     240:	cmp	x8, x26
     244:	b.cc	1b0 <ctf_bufopen_internal+0xa8>  // b.lo, b.ul, b.last
     248:	mov	w0, #0x2d8                 	// #728
     24c:	bl	0 <malloc>
     250:	cbz	x0, 34c <ctf_bufopen_internal+0x244>
     254:	mov	w2, #0x2d8                 	// #728
     258:	mov	w1, wzr
     25c:	mov	x19, x0
     260:	bl	0 <memset>
     264:	cbz	w23, 270 <ctf_bufopen_internal+0x168>
     268:	mov	w8, #0x2                   	// #2
     26c:	str	w8, [x19, #552]
     270:	mov	w0, #0x34                  	// #52
     274:	bl	0 <malloc>
     278:	str	x0, [x19, #8]
     27c:	cbz	x0, 344 <ctf_bufopen_internal+0x23c>
     280:	ldr	x1, [x25, #8]
     284:	mov	x2, x26
     288:	mov	x23, x0
     28c:	bl	0 <memcpy>
     290:	ldrb	w8, [x27, #2]
     294:	cmp	w8, #0x3
     298:	b.hi	2c0 <ctf_bufopen_internal+0x1b8>  // b.pmore
     29c:	ldur	q0, [x23, #12]
     2a0:	ldr	w8, [x23, #36]
     2a4:	ldur	x9, [x23, #28]
     2a8:	str	wzr, [x23, #12]
     2ac:	dup	v1.2s, v0.s[3]
     2b0:	str	w8, [x23, #48]
     2b4:	str	x9, [x23, #40]
     2b8:	str	q0, [x23, #16]
     2bc:	str	d1, [x23, #32]
     2c0:	cbz	w28, 354 <ctf_bufopen_internal+0x24c>
     2c4:	ldp	w8, w9, [x23, #4]
     2c8:	ldr	w11, [x23, #12]
     2cc:	ldrh	w10, [x23]
     2d0:	rev	w8, w8
     2d4:	rev	w9, w9
     2d8:	stp	w8, w9, [x23, #4]
     2dc:	ldp	w8, w9, [x23, #20]
     2e0:	rev	w11, w11
     2e4:	str	w11, [x23, #12]
     2e8:	rev	w8, w8
     2ec:	str	w8, [x23, #20]
     2f0:	ldp	w11, w8, [x23, #28]
     2f4:	rev	w9, w9
     2f8:	rev	w11, w11
     2fc:	stp	w9, w11, [x23, #24]
     300:	ldp	w9, w11, [x23, #36]
     304:	rev	w8, w8
     308:	str	w8, [x23, #32]
     30c:	rev	w8, w10
     310:	rev	w9, w9
     314:	rev	w10, w11
     318:	lsr	w8, w8, #16
     31c:	stp	w9, w10, [x23, #36]
     320:	strh	w8, [x23]
     324:	mov	x10, x23
     328:	ldr	w8, [x10, #44]!
     32c:	ldr	w9, [x10, #4]
     330:	rev	w8, w8
     334:	str	x10, [sp, #80]
     338:	rev	w9, w9
     33c:	stp	w8, w9, [x10]
     340:	b	364 <ctf_bufopen_internal+0x25c>
     344:	mov	x0, x19
     348:	bl	0 <free>
     34c:	mov	w1, #0xc                   	// #12
     350:	b	158 <ctf_bufopen_internal+0x50>
     354:	mov	x9, x23
     358:	ldr	w8, [x9, #44]!
     35c:	str	x9, [sp, #80]
     360:	ldr	w9, [x9, #4]
     364:	ldrb	w10, [x23, #3]
     368:	adrp	x0, 0 <ctf_set_ctl_hashes>
     36c:	add	w1, w9, w8
     370:	add	x0, x0, #0x0
     374:	strb	w10, [x19, #16]
     378:	str	x1, [x19, #416]
     37c:	bl	0 <ctf_dprintf>
     380:	ldr	w8, [x23, #16]
     384:	ldr	x27, [x19, #416]
     388:	cmp	x27, x8
     38c:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     390:	ldr	w9, [x23, #20]
     394:	cmp	x27, x9
     398:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     39c:	ldr	w10, [x23, #24]
     3a0:	cmp	x27, x10
     3a4:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     3a8:	ldr	w11, [x23, #28]
     3ac:	cmp	x27, x11
     3b0:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     3b4:	ldr	w12, [x23, #32]
     3b8:	cmp	x27, x12
     3bc:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     3c0:	ldr	w13, [x23, #40]
     3c4:	cmp	x27, x13
     3c8:	b.cc	3dc <ctf_bufopen_internal+0x2d4>  // b.lo, b.ul, b.last
     3cc:	ldr	x14, [sp, #80]
     3d0:	ldr	w14, [x14]
     3d4:	cmp	x27, x14
     3d8:	b.cs	3e4 <ctf_bufopen_internal+0x2dc>  // b.hs, b.nlast
     3dc:	mov	w1, #0x3ef                 	// #1007
     3e0:	b	158 <ctf_bufopen_internal+0x50>
     3e4:	cmp	w11, w12
     3e8:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     3ec:	cmp	w10, w11
     3f0:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     3f4:	cmp	w8, w9
     3f8:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     3fc:	cmp	w9, w10
     400:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     404:	cmp	w10, w13
     408:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     40c:	cmp	w13, w14
     410:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     414:	ldr	w14, [x23, #36]
     418:	cmp	w12, w14
     41c:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     420:	cmp	w14, w13
     424:	b.hi	3dc <ctf_bufopen_internal+0x2d4>  // b.pmore
     428:	and	w8, w8, #0x3
     42c:	and	w9, w9, #0x2
     430:	and	w10, w10, #0x2
     434:	orr	w8, w9, w8
     438:	and	w11, w11, #0x2
     43c:	orr	w8, w8, w10
     440:	and	w12, w12, #0x2
     444:	orr	w8, w8, w11
     448:	orr	w8, w8, w12
     44c:	and	w9, w13, #0x3
     450:	and	w14, w14, #0x3
     454:	orr	w8, w8, w9
     458:	orr	w8, w8, w14
     45c:	cbnz	w8, 3dc <ctf_bufopen_internal+0x2d4>
     460:	ldrb	w8, [x23, #3]
     464:	str	w8, [sp, #72]
     468:	tbnz	w8, #0, 4d0 <ctf_bufopen_internal+0x3c8>
     46c:	cbz	w28, 530 <ctf_bufopen_internal+0x428>
     470:	mov	x0, x27
     474:	bl	0 <malloc>
     478:	str	x0, [x19, #392]
     47c:	cbz	x0, 528 <ctf_bufopen_internal+0x420>
     480:	mov	x8, x0
     484:	str	x8, [x19, #400]
     488:	ldr	x8, [x25, #8]
     48c:	mov	x2, x27
     490:	add	x1, x8, x26
     494:	mov	x26, x0
     498:	bl	0 <memcpy>
     49c:	str	x26, [x19, #408]
     4a0:	b	554 <ctf_bufopen_internal+0x44c>
     4a4:	mov	w9, #0xf2df                	// #62175
     4a8:	cmp	w8, w9
     4ac:	b.ne	1b0 <ctf_bufopen_internal+0xa8>  // b.any
     4b0:	ldrb	w8, [x27, #2]
     4b4:	cmp	w8, #0x4
     4b8:	b.ne	4c8 <ctf_bufopen_internal+0x3c0>  // b.any
     4bc:	mov	w28, #0x1                   	// #1
     4c0:	mov	w26, #0x34                  	// #52
     4c4:	b	23c <ctf_bufopen_internal+0x134>
     4c8:	mov	w1, #0x3ea                 	// #1002
     4cc:	b	158 <ctf_bufopen_internal+0x50>
     4d0:	mov	x0, x27
     4d4:	bl	0 <malloc>
     4d8:	str	x0, [x19, #392]
     4dc:	cbz	x0, 528 <ctf_bufopen_internal+0x420>
     4e0:	stp	x0, x0, [x19, #400]
     4e4:	ldr	w8, [sp, #72]
     4e8:	add	x1, sp, #0x68
     4ec:	and	w8, w8, #0xfe
     4f0:	strb	w8, [x23, #3]
     4f4:	ldp	x8, x9, [x25, #8]
     4f8:	str	x27, [sp, #104]
     4fc:	add	x2, x8, x26
     500:	sub	x3, x9, x26
     504:	bl	0 <uncompress>
     508:	cbz	w0, 544 <ctf_bufopen_internal+0x43c>
     50c:	bl	0 <zError>
     510:	mov	x1, x0
     514:	adrp	x0, 0 <ctf_set_ctl_hashes>
     518:	add	x0, x0, #0x0
     51c:	bl	0 <ctf_dprintf>
     520:	mov	w1, #0x3f7                 	// #1015
     524:	b	1214 <ctf_bufopen_internal+0x110c>
     528:	mov	w1, #0x3f6                 	// #1014
     52c:	b	1214 <ctf_bufopen_internal+0x110c>
     530:	ldr	x8, [x25, #8]
     534:	stp	x8, xzr, [x19, #392]
     538:	add	x8, x8, x26
     53c:	str	x8, [x19, #408]
     540:	b	554 <ctf_bufopen_internal+0x44c>
     544:	ldr	x1, [sp, #104]
     548:	ldr	x2, [x19, #416]
     54c:	cmp	x1, x2
     550:	b.ne	ac4 <ctf_bufopen_internal+0x9bc>  // b.any
     554:	ldrb	w8, [x23, #2]
     558:	adrp	x10, 0 <ctf_set_ctl_hashes>
     55c:	mov	w9, #0x28                  	// #40
     560:	add	x10, x10, #0x0
     564:	str	w8, [x19, #560]
     568:	madd	x8, x8, x9, x10
     56c:	mov	x0, x19
     570:	str	x8, [x19]
     574:	bl	0 <ctf_str_create_atoms>
     578:	mov	w8, #0x7fffffff            	// #2147483647
     57c:	str	w8, [x19, #544]
     580:	ldp	q0, q1, [x25]
     584:	add	x25, x19, #0x18
     588:	stur	q0, [x19, #24]
     58c:	stur	q1, [x19, #40]
     590:	cbz	x20, 5ac <ctf_bufopen_internal+0x4a4>
     594:	ldp	q1, q0, [x20]
     598:	stur	q0, [x19, #72]
     59c:	stur	q1, [x19, #56]
     5a0:	ldp	q1, q0, [x22]
     5a4:	stur	q0, [x19, #104]
     5a8:	stur	q1, [x19, #88]
     5ac:	ldr	x0, [x25]
     5b0:	cbz	x0, 5c0 <ctf_bufopen_internal+0x4b8>
     5b4:	bl	0 <strdup>
     5b8:	str	x0, [x25]
     5bc:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     5c0:	ldr	x0, [x19, #56]
     5c4:	cbz	x0, 5d4 <ctf_bufopen_internal+0x4cc>
     5c8:	bl	0 <strdup>
     5cc:	str	x0, [x19, #56]
     5d0:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     5d4:	ldr	x0, [x19, #88]
     5d8:	cbz	x0, 5e8 <ctf_bufopen_internal+0x4e0>
     5dc:	bl	0 <strdup>
     5e0:	str	x0, [x19, #88]
     5e4:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     5e8:	ldr	x8, [x25]
     5ec:	cbnz	x8, 5fc <ctf_bufopen_internal+0x4f4>
     5f0:	adrp	x8, 31 <ctf_set_ctl_hashes+0x31>
     5f4:	add	x8, x8, #0x0
     5f8:	str	x8, [x25]
     5fc:	ldr	x8, [x19, #56]
     600:	cbz	x8, aa0 <ctf_bufopen_internal+0x998>
     604:	cbz	x0, ab0 <ctf_bufopen_internal+0x9a8>
     608:	cbz	x22, 614 <ctf_bufopen_internal+0x50c>
     60c:	ldur	q0, [x22, #8]
     610:	str	q0, [x19, #352]
     614:	str	x24, [x19, #128]
     618:	cbz	w28, 950 <ctf_bufopen_internal+0x848>
     61c:	ldp	w10, w9, [x23, #16]
     620:	ldr	x8, [x19, #408]
     624:	sub	w11, w9, w10
     628:	lsr	w11, w11, #3
     62c:	cbz	w11, 654 <ctf_bufopen_internal+0x54c>
     630:	add	x10, x8, x10
     634:	add	x11, x11, #0x1
     638:	ldp	w12, w13, [x10]
     63c:	sub	x11, x11, #0x1
     640:	cmp	x11, #0x1
     644:	rev	w12, w12
     648:	rev	w13, w13
     64c:	stp	w12, w13, [x10], #8
     650:	b.gt	638 <ctf_bufopen_internal+0x530>
     654:	ldr	w10, [x23, #24]
     658:	sub	w11, w10, w9
     65c:	lsr	w11, w11, #2
     660:	cbz	w11, 688 <ctf_bufopen_internal+0x580>
     664:	add	x9, x8, x9
     668:	add	x10, x11, #0x1
     66c:	ldr	w11, [x9]
     670:	sub	x10, x10, #0x1
     674:	cmp	x10, #0x1
     678:	rev	w11, w11
     67c:	str	w11, [x9], #4
     680:	b.gt	66c <ctf_bufopen_internal+0x564>
     684:	ldr	w10, [x23, #24]
     688:	ldr	w9, [x23, #28]
     68c:	sub	w11, w9, w10
     690:	lsr	w11, w11, #2
     694:	cbz	w11, 6bc <ctf_bufopen_internal+0x5b4>
     698:	add	x9, x8, w10, uxtw
     69c:	add	x10, x11, #0x1
     6a0:	ldr	w11, [x9]
     6a4:	sub	x10, x10, #0x1
     6a8:	cmp	x10, #0x1
     6ac:	rev	w11, w11
     6b0:	str	w11, [x9], #4
     6b4:	b.gt	6a0 <ctf_bufopen_internal+0x598>
     6b8:	ldr	w9, [x23, #28]
     6bc:	ldr	w11, [x23, #32]
     6c0:	sub	w10, w11, w9
     6c4:	lsr	w10, w10, #2
     6c8:	cbz	w10, 6f0 <ctf_bufopen_internal+0x5e8>
     6cc:	add	x9, x8, w9, uxtw
     6d0:	add	x10, x10, #0x1
     6d4:	ldr	w11, [x9]
     6d8:	sub	x10, x10, #0x1
     6dc:	cmp	x10, #0x1
     6e0:	rev	w11, w11
     6e4:	str	w11, [x9], #4
     6e8:	b.gt	6d4 <ctf_bufopen_internal+0x5cc>
     6ec:	ldr	w11, [x23, #32]
     6f0:	ldr	w10, [x23, #36]
     6f4:	sub	w9, w10, w11
     6f8:	lsr	w12, w9, #2
     6fc:	cbz	w12, 724 <ctf_bufopen_internal+0x61c>
     700:	add	x9, x8, w11, uxtw
     704:	add	x10, x12, #0x1
     708:	ldr	w11, [x9]
     70c:	sub	x10, x10, #0x1
     710:	cmp	x10, #0x1
     714:	rev	w11, w11
     718:	str	w11, [x9], #4
     71c:	b.gt	708 <ctf_bufopen_internal+0x600>
     720:	ldr	w10, [x23, #36]
     724:	ldr	w9, [x23, #40]
     728:	sub	w11, w9, w10
     72c:	lsr	w11, w11, #3
     730:	cbz	w11, 758 <ctf_bufopen_internal+0x650>
     734:	add	x10, x8, w10, uxtw
     738:	add	x11, x11, #0x1
     73c:	ldp	w12, w13, [x10]
     740:	sub	x11, x11, #0x1
     744:	cmp	x11, #0x1
     748:	rev	w12, w12
     74c:	rev	w13, w13
     750:	stp	w12, w13, [x10], #8
     754:	b.gt	73c <ctf_bufopen_internal+0x634>
     758:	ldr	x10, [sp, #80]
     75c:	add	x28, x8, x9
     760:	ldr	w10, [x10]
     764:	sub	w8, w10, w9
     768:	add	x8, x8, x28
     76c:	str	x8, [sp, #72]
     770:	cmp	x8, x28
     774:	b.ls	950 <ctf_bufopen_internal+0x848>  // b.plast
     778:	ldp	w8, w9, [x28]
     77c:	ldr	w27, [x28, #8]
     780:	rev	w9, w9
     784:	rev	w26, w27
     788:	lsr	w25, w9, #26
     78c:	and	w24, w9, #0xffffff
     790:	rev	w8, w8
     794:	mov	w0, w25
     798:	mov	x1, x26
     79c:	mov	x2, x24
     7a0:	stp	w8, w9, [x28]
     7a4:	str	w26, [x28, #8]
     7a8:	bl	1df0 <get_vbytes_v2>
     7ac:	cmn	w27, #0x1
     7b0:	b.eq	8f4 <ctf_bufopen_internal+0x7ec>  // b.none
     7b4:	mov	w8, #0xc                   	// #12
     7b8:	cmp	w25, #0xe
     7bc:	b.hi	ad4 <ctf_bufopen_internal+0x9cc>  // b.pmore
     7c0:	adrp	x11, 0 <ctf_set_ctl_hashes>
     7c4:	add	x11, x11, #0x0
     7c8:	adr	x9, 7dc <ctf_bufopen_internal+0x6d4>
     7cc:	ldrb	w10, [x11, x25]
     7d0:	add	x9, x9, x10, lsl #2
     7d4:	add	x8, x28, x8
     7d8:	br	x9
     7dc:	cbz	x0, 8e8 <ctf_bufopen_internal+0x7e0>
     7e0:	b	175c <ctf_bufopen_internal+0x1654>
     7e4:	ldr	w9, [x8]
     7e8:	rev	w9, w9
     7ec:	str	w9, [x8]
     7f0:	b	8e8 <ctf_bufopen_internal+0x7e0>
     7f4:	lsr	x9, x26, #29
     7f8:	cbnz	x9, 910 <ctf_bufopen_internal+0x808>
     7fc:	cbz	w24, 8e8 <ctf_bufopen_internal+0x7e0>
     800:	add	x9, x24, #0x1
     804:	mov	x10, x8
     808:	ldp	w11, w12, [x10]
     80c:	ldr	w13, [x10, #8]
     810:	sub	x9, x9, #0x1
     814:	cmp	x9, #0x1
     818:	rev	w11, w11
     81c:	rev	w12, w12
     820:	rev	w13, w13
     824:	stp	w11, w12, [x10]
     828:	str	w13, [x10, #8]
     82c:	add	x10, x10, #0xc
     830:	b.gt	808 <ctf_bufopen_internal+0x700>
     834:	b	8e8 <ctf_bufopen_internal+0x7e0>
     838:	cbz	w24, 8e8 <ctf_bufopen_internal+0x7e0>
     83c:	add	x9, x24, #0x1
     840:	mov	x10, x8
     844:	ldp	w11, w12, [x10]
     848:	sub	x9, x9, #0x1
     84c:	cmp	x9, #0x1
     850:	rev	w11, w11
     854:	rev	w12, w12
     858:	stp	w11, w12, [x10], #8
     85c:	b.gt	844 <ctf_bufopen_internal+0x73c>
     860:	b	8e8 <ctf_bufopen_internal+0x7e0>
     864:	cbz	w24, 8e8 <ctf_bufopen_internal+0x7e0>
     868:	add	x9, x24, #0x1
     86c:	mov	x10, x8
     870:	ldr	w11, [x10]
     874:	sub	x9, x9, #0x1
     878:	cmp	x9, #0x1
     87c:	rev	w11, w11
     880:	str	w11, [x10], #4
     884:	b.gt	870 <ctf_bufopen_internal+0x768>
     888:	b	8e8 <ctf_bufopen_internal+0x7e0>
     88c:	cmp	x0, #0x8
     890:	b.ne	177c <ctf_bufopen_internal+0x1674>  // b.any
     894:	ldr	w9, [x8]
     898:	ldrh	w10, [x8, #4]
     89c:	ldrh	w11, [x8, #6]
     8a0:	rev	w9, w9
     8a4:	rev	w10, w10
     8a8:	rev	w11, w11
     8ac:	str	w9, [x8]
     8b0:	lsr	w9, w10, #16
     8b4:	lsr	w10, w11, #16
     8b8:	strh	w9, [x8, #4]
     8bc:	strh	w10, [x8, #6]
     8c0:	b	8e8 <ctf_bufopen_internal+0x7e0>
     8c4:	cmp	x0, #0xc
     8c8:	b.ne	179c <ctf_bufopen_internal+0x1694>  // b.any
     8cc:	ldp	w9, w10, [x8]
     8d0:	ldr	w11, [x8, #8]
     8d4:	rev	w9, w9
     8d8:	rev	w10, w10
     8dc:	rev	w11, w11
     8e0:	stp	w9, w10, [x8]
     8e4:	str	w11, [x8, #8]
     8e8:	add	x28, x8, x0
     8ec:	ldr	x8, [sp, #72]
     8f0:	b	770 <ctf_bufopen_internal+0x668>
     8f4:	ldp	w8, w9, [x28, #12]
     8f8:	rev	w8, w8
     8fc:	rev	w26, w9
     900:	stp	w8, w26, [x28, #12]
     904:	bfi	x26, x8, #32, #32
     908:	mov	w8, #0x14                  	// #20
     90c:	b	7b8 <ctf_bufopen_internal+0x6b0>
     910:	cbz	w24, 8e8 <ctf_bufopen_internal+0x7e0>
     914:	add	x9, x24, #0x1
     918:	mov	x10, x8
     91c:	ldp	w11, w12, [x10]
     920:	ldp	w13, w14, [x10, #8]
     924:	sub	x9, x9, #0x1
     928:	cmp	x9, #0x1
     92c:	rev	w11, w11
     930:	rev	w12, w12
     934:	rev	w13, w13
     938:	rev	w14, w14
     93c:	stp	w11, w12, [x10]
     940:	stp	w13, w14, [x10, #8]
     944:	add	x10, x10, #0x10
     948:	b.gt	91c <ctf_bufopen_internal+0x814>
     94c:	b	8e8 <ctf_bufopen_internal+0x7e0>
     950:	ldr	x2, [x19, #392]
     954:	mov	x0, x19
     958:	mov	x1, x23
     95c:	bl	184c <ctf_set_base>
     960:	ldrb	w8, [x19, #552]
     964:	tbnz	w8, #1, 1364 <ctf_bufopen_internal+0x125c>
     968:	add	x0, sp, #0x68
     96c:	mov	w2, #0x200                 	// #512
     970:	mov	w1, wzr
     974:	bl	0 <memset>
     978:	ldr	w8, [x19, #560]
     97c:	ldr	w9, [x23, #8]
     980:	cmp	w8, #0x1
     984:	str	w9, [sp, #68]
     988:	b.eq	1370 <ctf_bufopen_internal+0x1268>  // b.none
     98c:	ldr	x8, [x19, #408]
     990:	ldp	w10, w11, [x23, #40]
     994:	add	x9, x8, x10
     998:	cmp	w10, w11
     99c:	add	x8, x8, x11
     9a0:	stp	x11, x10, [sp, #48]
     9a4:	stp	x9, x8, [sp, #72]
     9a8:	b.cs	a78 <ctf_bufopen_internal+0x970>  // b.hs, b.nlast
     9ac:	ldr	x25, [sp, #72]
     9b0:	add	x28, sp, #0x68
     9b4:	add	x24, x28, #0x30
     9b8:	ldr	x8, [x19]
     9bc:	ldr	w0, [x25, #4]
     9c0:	ldr	x8, [x8]
     9c4:	blr	x8
     9c8:	ldr	x8, [x19]
     9cc:	mov	w26, w0
     9d0:	ldr	x9, [x8, #16]
     9d4:	ldr	w8, [x25, #4]
     9d8:	mov	w0, w8
     9dc:	blr	x9
     9e0:	ldr	x8, [x19]
     9e4:	mov	w27, w0
     9e8:	add	x2, sp, #0x60
     9ec:	add	x3, sp, #0x58
     9f0:	ldr	x8, [x8, #24]
     9f4:	mov	x0, x19
     9f8:	mov	x1, x25
     9fc:	blr	x8
     a00:	ldr	x8, [x19]
     a04:	ldr	x1, [sp, #96]
     a08:	mov	w0, w26
     a0c:	mov	x2, x27
     a10:	ldr	x8, [x8, #32]
     a14:	blr	x8
     a18:	tbnz	x0, #63, af4 <ctf_bufopen_internal+0x9ec>
     a1c:	and	w8, w26, #0xffff
     a20:	cmp	w8, #0x9
     a24:	b.ne	a48 <ctf_bufopen_internal+0x940>  // b.any
     a28:	ldr	w9, [x25, #8]
     a2c:	sub	w10, w9, #0x1
     a30:	add	x9, x28, x9, lsl #3
     a34:	cmp	w10, #0x3d
     a38:	csel	x9, x24, x9, hi  // hi = pmore
     a3c:	ldr	x10, [x9]
     a40:	add	x10, x10, #0x1
     a44:	str	x10, [x9]
     a48:	ldr	x9, [sp, #88]
     a4c:	ldr	x10, [x28, w8, uxtw #3]
     a50:	add	x12, x0, x25
     a54:	ldr	x11, [x19, #480]
     a58:	add	x25, x12, x9
     a5c:	add	x9, x10, #0x1
     a60:	str	x9, [x28, w8, uxtw #3]
     a64:	ldr	x8, [sp, #80]
     a68:	add	x10, x11, #0x1
     a6c:	str	x10, [x19, #480]
     a70:	cmp	x25, x8
     a74:	b.cc	9b8 <ctf_bufopen_internal+0x8b0>  // b.lo, b.ul, b.last
     a78:	ldr	w8, [sp, #68]
     a7c:	cbz	w8, afc <ctf_bufopen_internal+0x9f4>
     a80:	adrp	x0, 0 <ctf_set_ctl_hashes>
     a84:	add	x0, x0, #0x0
     a88:	mov	x1, x19
     a8c:	bl	0 <ctf_dprintf>
     a90:	ldr	w8, [x19, #552]
     a94:	orr	w8, w8, #0x1
     a98:	str	w8, [x19, #552]
     a9c:	b	b0c <ctf_bufopen_internal+0xa04>
     aa0:	adrp	x8, 31 <ctf_set_ctl_hashes+0x31>
     aa4:	add	x8, x8, #0x0
     aa8:	str	x8, [x19, #56]
     aac:	cbnz	x0, 608 <ctf_bufopen_internal+0x500>
     ab0:	adrp	x8, 31 <ctf_set_ctl_hashes+0x31>
     ab4:	add	x8, x8, #0x0
     ab8:	str	x8, [x19, #88]
     abc:	cbnz	x22, 60c <ctf_bufopen_internal+0x504>
     ac0:	b	614 <ctf_bufopen_internal+0x50c>
     ac4:	adrp	x0, 0 <ctf_set_ctl_hashes>
     ac8:	add	x0, x0, #0x0
     acc:	bl	0 <ctf_dprintf>
     ad0:	b	af4 <ctf_bufopen_internal+0x9ec>
     ad4:	adrp	x0, 0 <ctf_set_ctl_hashes>
     ad8:	add	x0, x0, #0x0
     adc:	mov	w1, w25
     ae0:	bl	0 <ctf_dprintf>
     ae4:	ldr	x2, [x19, #392]
     ae8:	mov	x0, x19
     aec:	mov	x1, x23
     af0:	bl	184c <ctf_set_base>
     af4:	mov	w1, #0x3ef                 	// #1007
     af8:	b	1214 <ctf_bufopen_internal+0x110c>
     afc:	adrp	x0, 0 <ctf_set_ctl_hashes>
     b00:	add	x0, x0, #0x0
     b04:	mov	x1, x19
     b08:	bl	0 <ctf_dprintf>
     b0c:	ldr	x0, [sp, #152]
     b10:	adrp	x1, 0 <ctf_hash_string>
     b14:	adrp	x2, 0 <ctf_hash_eq_string>
     b18:	add	x1, x1, #0x0
     b1c:	add	x2, x2, #0x0
     b20:	bl	0 <ctf_hash_create>
     b24:	mov	x8, x19
     b28:	str	x0, [x8, #152]!
     b2c:	str	x8, [sp, #40]
     b30:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     b34:	ldr	x0, [sp, #160]
     b38:	adrp	x1, 0 <ctf_hash_string>
     b3c:	adrp	x2, 0 <ctf_hash_eq_string>
     b40:	add	x1, x1, #0x0
     b44:	add	x2, x2, #0x0
     b48:	bl	0 <ctf_hash_create>
     b4c:	mov	x8, x19
     b50:	str	x0, [x8, #168]!
     b54:	str	x8, [sp, #32]
     b58:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     b5c:	ldr	x0, [sp, #168]
     b60:	adrp	x1, 0 <ctf_hash_string>
     b64:	adrp	x2, 0 <ctf_hash_eq_string>
     b68:	add	x1, x1, #0x0
     b6c:	add	x2, x2, #0x0
     b70:	bl	0 <ctf_hash_create>
     b74:	mov	x8, x19
     b78:	str	x0, [x8, #184]!
     b7c:	str	x8, [sp, #8]
     b80:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     b84:	ldp	x8, x9, [sp, #112]
     b88:	ldr	x10, [sp, #144]
     b8c:	ldp	x12, x13, [sp, #184]
     b90:	ldr	x11, [sp, #128]
     b94:	add	x8, x9, x8
     b98:	add	x8, x8, x10
     b9c:	ldp	x9, x10, [sp, #200]
     ba0:	add	x8, x8, x12
     ba4:	add	x8, x8, x11
     ba8:	add	x8, x8, x13
     bac:	add	x8, x8, x9
     bb0:	adrp	x1, 0 <ctf_hash_string>
     bb4:	adrp	x2, 0 <ctf_hash_eq_string>
     bb8:	add	x0, x8, x10
     bbc:	add	x1, x1, #0x0
     bc0:	add	x2, x2, #0x0
     bc4:	bl	0 <ctf_hash_create>
     bc8:	mov	x8, x19
     bcc:	str	x0, [x8, #200]!
     bd0:	str	x8, [sp, #16]
     bd4:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
     bd8:	ldr	x26, [x19, #480]
     bdc:	lsl	x8, x26, #2
     be0:	add	x25, x8, #0x4
     be4:	mov	x0, x25
     be8:	bl	0 <malloc>
     bec:	add	x8, x26, #0x1
     bf0:	mov	x24, x0
     bf4:	str	x0, [x19, #440]
     bf8:	lsl	x0, x8, #2
     bfc:	str	x8, [x19, #456]
     c00:	bl	0 <malloc>
     c04:	mov	w1, #0xc                   	// #12
     c08:	str	x0, [x19, #448]
     c0c:	str	x24, [sp, #24]
     c10:	cbz	x24, 1214 <ctf_bufopen_internal+0x110c>
     c14:	mov	x27, x0
     c18:	cbz	x0, 1214 <ctf_bufopen_internal+0x110c>
     c1c:	ldr	x0, [sp, #24]
     c20:	mov	w1, wzr
     c24:	mov	x2, x25
     c28:	str	wzr, [x0]
     c2c:	bl	0 <memset>
     c30:	mov	x0, x27
     c34:	mov	w1, wzr
     c38:	mov	x2, x25
     c3c:	bl	0 <memset>
     c40:	ldp	x9, x8, [sp, #48]
     c44:	cmp	w8, w9
     c48:	b.cs	f2c <ctf_bufopen_internal+0xe24>  // b.hs, b.nlast
     c4c:	mov	w8, #0x1                   	// #1
     c50:	str	wzr, [sp, #4]
     c54:	str	wzr, [sp, #48]
     c58:	str	x8, [sp, #56]
     c5c:	ldr	x8, [x19]
     c60:	ldr	x24, [sp, #72]
     c64:	ldr	x8, [x8]
     c68:	ldr	w0, [x24, #4]
     c6c:	blr	x8
     c70:	ldr	x8, [x19]
     c74:	mov	w28, w0
     c78:	ldr	x9, [x8, #8]
     c7c:	ldr	w8, [x24, #4]
     c80:	mov	w0, w8
     c84:	blr	x9
     c88:	ldr	x8, [x19]
     c8c:	mov	w25, w0
     c90:	ldr	x9, [x8, #16]
     c94:	ldr	w8, [x24, #4]
     c98:	mov	w0, w8
     c9c:	blr	x9
     ca0:	ldr	x8, [x19]
     ca4:	mov	w26, w0
     ca8:	add	x2, sp, #0x60
     cac:	add	x3, sp, #0x58
     cb0:	ldr	x8, [x8, #24]
     cb4:	mov	x0, x19
     cb8:	mov	x1, x24
     cbc:	blr	x8
     cc0:	ldr	w1, [x24]
     cc4:	mov	x0, x19
     cc8:	bl	0 <ctf_strptr>
     ccc:	ldr	x8, [x19]
     cd0:	ldr	x1, [sp, #96]
     cd4:	mov	x27, x0
     cd8:	mov	w0, w28
     cdc:	ldr	x8, [x8, #32]
     ce0:	mov	x2, x26
     ce4:	blr	x8
     ce8:	and	w1, w28, #0xffff
     cec:	sub	w8, w1, #0x1
     cf0:	cmp	w8, #0xd
     cf4:	b.hi	12b8 <ctf_bufopen_internal+0x11b0>  // b.pmore
     cf8:	adrp	x11, 0 <ctf_set_ctl_hashes>
     cfc:	add	x11, x11, #0x0
     d00:	adr	x9, d14 <ctf_bufopen_internal+0xc0c>
     d04:	ldrb	w10, [x11, x8]
     d08:	add	x9, x9, x10, lsl #2
     d0c:	mov	x28, x0
     d10:	br	x9
     d14:	ldr	x8, [sp, #16]
     d18:	ldr	x0, [x8]
     d1c:	ldr	w8, [sp, #68]
     d20:	cbz	w8, d38 <ctf_bufopen_internal+0xc30>
     d24:	ldr	w8, [x19, #544]
     d28:	ldr	x9, [sp, #56]
     d2c:	add	w8, w8, #0x1
     d30:	orr	w2, w8, w9
     d34:	b	d40 <ctf_bufopen_internal+0xc38>
     d38:	ldr	x8, [sp, #56]
     d3c:	mov	w2, w8
     d40:	ldr	x8, [sp, #72]
     d44:	mov	x1, x19
     d48:	ldr	w3, [x8]
     d4c:	bl	0 <ctf_hash_insert_type>
     d50:	cbz	w0, ee8 <ctf_bufopen_internal+0xde0>
     d54:	b	1350 <ctf_bufopen_internal+0x1248>
     d58:	ldr	x0, [x19, #200]
     d5c:	mov	x1, x19
     d60:	mov	x2, x27
     d64:	bl	0 <ctf_hash_lookup_type>
     d68:	tbnz	w25, #0, d70 <ctf_bufopen_internal+0xc68>
     d6c:	cbnz	x0, ee8 <ctf_bufopen_internal+0xde0>
     d70:	ldr	x8, [sp, #16]
     d74:	b	da0 <ctf_bufopen_internal+0xc98>
     d78:	ldr	x8, [sp, #32]
     d7c:	ldr	x0, [x8]
     d80:	ldr	w8, [sp, #68]
     d84:	cbz	w8, e7c <ctf_bufopen_internal+0xd74>
     d88:	ldr	w8, [x19, #544]
     d8c:	ldr	x9, [sp, #56]
     d90:	add	w8, w8, #0x1
     d94:	orr	w2, w8, w9
     d98:	b	e84 <ctf_bufopen_internal+0xd7c>
     d9c:	ldr	x8, [sp, #8]
     da0:	ldr	x0, [x8]
     da4:	ldr	w8, [sp, #68]
     da8:	cbz	w8, e5c <ctf_bufopen_internal+0xd54>
     dac:	ldr	w8, [x19, #544]
     db0:	ldr	x9, [sp, #56]
     db4:	add	w8, w8, #0x1
     db8:	orr	w2, w8, w9
     dbc:	b	e64 <ctf_bufopen_internal+0xd5c>
     dc0:	ldr	x8, [sp, #72]
     dc4:	ldr	w10, [sp, #68]
     dc8:	ldr	w9, [x19, #544]
     dcc:	ldr	w8, [x8, #8]
     dd0:	cmp	w10, #0x0
     dd4:	cset	w10, ne  // ne = any
     dd8:	cmp	w8, w9
     ddc:	cset	w11, ls  // ls = plast
     de0:	cmp	w10, w11
     de4:	b.eq	d14 <ctf_bufopen_internal+0xc0c>  // b.none
     de8:	ldr	x10, [x19, #480]
     dec:	and	x8, x9, x8
     df0:	cmp	x10, x8
     df4:	b.cc	d14 <ctf_bufopen_internal+0xc0c>  // b.lo, b.ul, b.last
     df8:	ldr	x9, [x19, #448]
     dfc:	ldr	x10, [sp, #56]
     e00:	str	w10, [x9, x8, lsl #2]
     e04:	b	d14 <ctf_bufopen_internal+0xc0c>
     e08:	ldr	x8, [sp, #72]
     e0c:	mov	x0, x19
     e10:	ldr	w1, [x8, #8]
     e14:	bl	0 <ctf_name_table>
     e18:	mov	x25, x0
     e1c:	ldr	x0, [x0]
     e20:	mov	x1, x19
     e24:	mov	x2, x27
     e28:	bl	0 <ctf_hash_lookup_type>
     e2c:	cbnz	x0, ee8 <ctf_bufopen_internal+0xde0>
     e30:	ldr	x0, [x25]
     e34:	b	d1c <ctf_bufopen_internal+0xc14>
     e38:	ldr	x8, [sp, #40]
     e3c:	ldr	x0, [x8]
     e40:	ldr	w8, [sp, #68]
     e44:	cbz	w8, eb4 <ctf_bufopen_internal+0xdac>
     e48:	ldr	w8, [x19, #544]
     e4c:	ldr	x9, [sp, #56]
     e50:	add	w8, w8, #0x1
     e54:	orr	w2, w8, w9
     e58:	b	ebc <ctf_bufopen_internal+0xdb4>
     e5c:	ldr	x8, [sp, #56]
     e60:	mov	w2, w8
     e64:	ldr	x8, [sp, #72]
     e68:	mov	x1, x19
     e6c:	ldr	w3, [x8]
     e70:	bl	0 <ctf_hash_define_type>
     e74:	cbz	w0, ee8 <ctf_bufopen_internal+0xde0>
     e78:	b	1350 <ctf_bufopen_internal+0x1248>
     e7c:	ldr	x8, [sp, #56]
     e80:	mov	w2, w8
     e84:	ldr	x8, [sp, #72]
     e88:	mov	x1, x19
     e8c:	ldr	w3, [x8]
     e90:	bl	0 <ctf_hash_define_type>
     e94:	cbnz	w0, 1350 <ctf_bufopen_internal+0x1248>
     e98:	ldr	x8, [sp, #96]
     e9c:	mov	w9, #0x1fffffff            	// #536870911
     ea0:	cmp	x8, x9
     ea4:	ldr	w8, [sp, #48]
     ea8:	cinc	w8, w8, gt
     eac:	str	w8, [sp, #48]
     eb0:	b	ee8 <ctf_bufopen_internal+0xde0>
     eb4:	ldr	x8, [sp, #56]
     eb8:	mov	w2, w8
     ebc:	ldr	x8, [sp, #72]
     ec0:	mov	x1, x19
     ec4:	ldr	w3, [x8]
     ec8:	bl	0 <ctf_hash_define_type>
     ecc:	cbnz	w0, 1350 <ctf_bufopen_internal+0x1248>
     ed0:	ldr	x8, [sp, #96]
     ed4:	mov	w9, #0x1fffffff            	// #536870911
     ed8:	cmp	x8, x9
     edc:	ldr	w8, [sp, #4]
     ee0:	cinc	w8, w8, gt
     ee4:	str	w8, [sp, #4]
     ee8:	ldr	x11, [sp, #72]
     eec:	ldr	w8, [x19, #408]
     ef0:	ldr	x9, [sp, #88]
     ef4:	add	x10, x28, x11
     ef8:	sub	w8, w11, w8
     efc:	add	x9, x10, x9
     f00:	ldr	x10, [sp, #24]
     f04:	ldr	x11, [sp, #56]
     f08:	str	x9, [sp, #72]
     f0c:	str	w8, [x10, x11, lsl #2]
     f10:	ldr	x8, [sp, #80]
     f14:	add	x11, x11, #0x1
     f18:	str	x11, [sp, #56]
     f1c:	cmp	x9, x8
     f20:	b.cc	c5c <ctf_bufopen_internal+0xb54>  // b.lo, b.ul, b.last
     f24:	ldr	x26, [x19, #480]
     f28:	b	f34 <ctf_bufopen_internal+0xe2c>
     f2c:	str	wzr, [sp, #48]
     f30:	str	wzr, [sp, #4]
     f34:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f38:	add	x0, x0, #0x0
     f3c:	mov	x1, x26
     f40:	bl	0 <ctf_dprintf>
     f44:	ldr	x0, [x19, #184]
     f48:	bl	0 <ctf_hash_size>
     f4c:	mov	w1, w0
     f50:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f54:	add	x0, x0, #0x0
     f58:	bl	0 <ctf_dprintf>
     f5c:	ldr	x0, [x19, #152]
     f60:	bl	0 <ctf_hash_size>
     f64:	ldr	w2, [sp, #4]
     f68:	mov	w1, w0
     f6c:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f70:	add	x0, x0, #0x0
     f74:	bl	0 <ctf_dprintf>
     f78:	ldr	x0, [x19, #168]
     f7c:	bl	0 <ctf_hash_size>
     f80:	ldr	w2, [sp, #48]
     f84:	mov	w1, w0
     f88:	adrp	x0, 0 <ctf_set_ctl_hashes>
     f8c:	add	x0, x0, #0x0
     f90:	bl	0 <ctf_dprintf>
     f94:	ldr	x0, [x19, #200]
     f98:	bl	0 <ctf_hash_size>
     f9c:	mov	w1, w0
     fa0:	adrp	x0, 0 <ctf_set_ctl_hashes>
     fa4:	add	x0, x0, #0x0
     fa8:	bl	0 <ctf_dprintf>
     fac:	ldr	x8, [x19, #480]
     fb0:	cbz	x8, 107c <ctf_bufopen_internal+0xf74>
     fb4:	mov	w24, #0x1                   	// #1
     fb8:	ldr	x8, [x19, #448]
     fbc:	ldr	w25, [x8, x24, lsl #2]
     fc0:	cbz	w25, 106c <ctf_bufopen_internal+0xf64>
     fc4:	ldr	w9, [x19, #552]
     fc8:	tbnz	w9, #1, fe0 <ctf_bufopen_internal+0xed8>
     fcc:	ldr	x8, [x19, #440]
     fd0:	ldr	x9, [x19, #408]
     fd4:	ldr	w8, [x8, x24, lsl #2]
     fd8:	add	x26, x9, x8
     fdc:	b	1004 <ctf_bufopen_internal+0xefc>
     fe0:	mov	w8, w24
     fe4:	tbz	w9, #0, ff4 <ctf_bufopen_internal+0xeec>
     fe8:	ldr	w8, [x19, #544]
     fec:	add	w8, w8, #0x1
     ff0:	orr	w8, w8, w24
     ff4:	mov	w1, w8
     ff8:	mov	x0, x19
     ffc:	bl	0 <ctf_dtd_lookup>
    1000:	add	x26, x0, #0x18
    1004:	ldr	x8, [x19]
    1008:	ldr	w0, [x26, #4]
    100c:	ldr	x8, [x8]
    1010:	blr	x8
    1014:	cmp	w0, #0xa
    1018:	b.ne	106c <ctf_bufopen_internal+0xf64>  // b.any
    101c:	ldr	w1, [x26]
    1020:	mov	x0, x19
    1024:	bl	0 <ctf_strptr>
    1028:	ldrb	w8, [x0]
    102c:	cbnz	w8, 106c <ctf_bufopen_internal+0xf64>
    1030:	ldr	w10, [sp, #68]
    1034:	ldr	w8, [x26, #8]
    1038:	ldr	w9, [x19, #544]
    103c:	cmp	w10, #0x0
    1040:	cset	w10, ne  // ne = any
    1044:	cmp	w8, w9
    1048:	cset	w11, ls  // ls = plast
    104c:	cmp	w10, w11
    1050:	b.eq	106c <ctf_bufopen_internal+0xf64>  // b.none
    1054:	ldr	x10, [x19, #480]
    1058:	and	x8, x9, x8
    105c:	cmp	x10, x8
    1060:	b.cc	106c <ctf_bufopen_internal+0xf64>  // b.lo, b.ul, b.last
    1064:	ldr	x9, [x19, #448]
    1068:	str	w25, [x9, x8, lsl #2]
    106c:	ldr	x8, [x19, #480]
    1070:	add	w24, w24, #0x1
    1074:	cmp	x8, x24
    1078:	b.cs	fb8 <ctf_bufopen_internal+0xeb0>  // b.hs, b.nlast
    107c:	cbz	x20, 124c <ctf_bufopen_internal+0x1144>
    1080:	ldp	x8, x27, [x20, #16]
    1084:	udiv	x25, x8, x27
    1088:	lsl	x0, x25, #2
    108c:	str	x25, [x19, #432]
    1090:	bl	0 <malloc>
    1094:	str	x0, [x19, #424]
    1098:	cbz	x0, 1210 <ctf_bufopen_internal+0x1108>
    109c:	cmp	x25, #0x1
    10a0:	b.lt	12cc <ctf_bufopen_internal+0x11c4>  // b.tstop
    10a4:	ldr	w8, [x23, #20]
    10a8:	ldr	x21, [x20, #8]
    10ac:	mov	x24, x0
    10b0:	add	x26, x0, x25, lsl #2
    10b4:	str	w8, [sp, #72]
    10b8:	ldr	w8, [x23, #24]
    10bc:	str	w8, [sp, #80]
    10c0:	cmp	x27, #0x10
    10c4:	b.ne	10dc <ctf_bufopen_internal+0xfd4>  // b.any
    10c8:	add	x1, sp, #0x68
    10cc:	mov	x0, x21
    10d0:	bl	0 <ctf_sym_to_elf64>
    10d4:	mov	x27, x0
    10d8:	b	10e0 <ctf_bufopen_internal+0xfd8>
    10dc:	mov	x27, x21
    10e0:	ldr	w8, [x27]
    10e4:	ldr	x9, [x22, #16]
    10e8:	adrp	x28, 31 <ctf_set_ctl_hashes+0x31>
    10ec:	add	x28, x28, #0x0
    10f0:	cmp	x9, x8
    10f4:	b.ls	1100 <ctf_bufopen_internal+0xff8>  // b.plast
    10f8:	ldr	x9, [x22, #8]
    10fc:	add	x28, x9, x8
    1100:	cbz	w8, 11e0 <ctf_bufopen_internal+0x10d8>
    1104:	ldrh	w25, [x27, #6]
    1108:	cbz	w25, 11e0 <ctf_bufopen_internal+0x10d8>
    110c:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1110:	mov	x0, x28
    1114:	add	x1, x1, #0x0
    1118:	bl	0 <strcmp>
    111c:	cbz	w0, 11e0 <ctf_bufopen_internal+0x10d8>
    1120:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1124:	mov	x0, x28
    1128:	add	x1, x1, #0x0
    112c:	bl	0 <strcmp>
    1130:	cbz	w0, 11e0 <ctf_bufopen_internal+0x10d8>
    1134:	ldrb	w8, [x27, #4]
    1138:	and	w8, w8, #0xf
    113c:	cmp	w8, #0x2
    1140:	b.eq	1184 <ctf_bufopen_internal+0x107c>  // b.none
    1144:	cmp	w8, #0x1
    1148:	b.ne	11e0 <ctf_bufopen_internal+0x10d8>  // b.any
    114c:	ldr	w8, [x23, #24]
    1150:	ldr	w9, [sp, #72]
    1154:	cmp	w9, w8
    1158:	b.cs	11e0 <ctf_bufopen_internal+0x10d8>  // b.hs, b.nlast
    115c:	mov	w8, #0xfff1                	// #65521
    1160:	cmp	w25, w8
    1164:	b.ne	1170 <ctf_bufopen_internal+0x1068>  // b.any
    1168:	ldr	x8, [x27, #8]
    116c:	cbz	x8, 11e0 <ctf_bufopen_internal+0x10d8>
    1170:	ldr	w8, [sp, #72]
    1174:	str	w8, [x24]
    1178:	add	w8, w8, #0x4
    117c:	str	w8, [sp, #72]
    1180:	b	11e8 <ctf_bufopen_internal+0x10e0>
    1184:	ldr	w8, [x23, #28]
    1188:	ldr	w9, [sp, #80]
    118c:	cmp	w9, w8
    1190:	b.cs	11e0 <ctf_bufopen_internal+0x10d8>  // b.hs, b.nlast
    1194:	ldr	w10, [sp, #80]
    1198:	ldr	x8, [x19, #408]
    119c:	ldr	x9, [x19]
    11a0:	str	w10, [x24]
    11a4:	ldr	w28, [x8, w10, uxtw]
    11a8:	ldr	x8, [x9, #16]
    11ac:	mov	w0, w28
    11b0:	blr	x8
    11b4:	ldr	x8, [x19]
    11b8:	mov	w27, w0
    11bc:	mov	w0, w28
    11c0:	ldr	x8, [x8]
    11c4:	blr	x8
    11c8:	orr	w8, w0, w27
    11cc:	cbz	w8, 1200 <ctf_bufopen_internal+0x10f8>
    11d0:	ldr	w8, [sp, #80]
    11d4:	add	w8, w8, w27, lsl #2
    11d8:	add	w8, w8, #0x8
    11dc:	b	1208 <ctf_bufopen_internal+0x1100>
    11e0:	mov	w8, #0xffffffff            	// #-1
    11e4:	str	w8, [x24]
    11e8:	ldr	x27, [x20, #24]
    11ec:	add	x24, x24, #0x4
    11f0:	cmp	x24, x26
    11f4:	add	x21, x21, x27
    11f8:	b.cc	10c0 <ctf_bufopen_internal+0xfb8>  // b.lo, b.ul, b.last
    11fc:	b	12c8 <ctf_bufopen_internal+0x11c0>
    1200:	ldr	w8, [sp, #80]
    1204:	add	w8, w8, #0x4
    1208:	str	w8, [sp, #80]
    120c:	b	11e8 <ctf_bufopen_internal+0x10e0>
    1210:	mov	w1, #0xc                   	// #12
    1214:	mov	x0, x21
    1218:	bl	0 <ctf_set_open_errno>
    121c:	mov	x0, x19
    1220:	bl	1988 <ctf_file_close>
    1224:	mov	x19, xzr
    1228:	mov	x0, x19
    122c:	add	sp, sp, #0x270
    1230:	ldp	x20, x19, [sp, #80]
    1234:	ldp	x22, x21, [sp, #64]
    1238:	ldp	x24, x23, [sp, #48]
    123c:	ldp	x26, x25, [sp, #32]
    1240:	ldp	x28, x27, [sp, #16]
    1244:	ldp	x29, x30, [sp], #96
    1248:	ret
    124c:	ldr	x12, [sp, #16]
    1250:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1254:	add	x8, x8, #0x0
    1258:	mov	w9, #0x6                   	// #6
    125c:	stp	xzr, x12, [x19, #296]
    1260:	stp	x8, x9, [x19, #216]
    1264:	ldr	x9, [sp, #40]
    1268:	adrp	x10, 0 <ctf_set_ctl_hashes>
    126c:	add	x10, x10, #0x0
    1270:	stp	xzr, xzr, [x19, #320]
    1274:	stp	x9, x10, [x19, #232]
    1278:	ldr	x10, [sp, #32]
    127c:	adrp	x12, 0 <ctf_set_ctl_hashes>
    1280:	mov	w11, #0x5                   	// #5
    1284:	add	x12, x12, #0x0
    1288:	mov	w8, #0x4                   	// #4
    128c:	stp	x11, x10, [x19, #248]
    1290:	stp	x12, x8, [x19, #264]
    1294:	ldr	x8, [sp, #8]
    1298:	adrp	x9, 31 <ctf_set_ctl_hashes+0x31>
    129c:	adrp	x10, 0 <ctf_set_ctl_hashes>
    12a0:	add	x9, x9, #0x0
    12a4:	add	x10, x10, #0x0
    12a8:	str	xzr, [x19, #312]
    12ac:	stp	x8, x9, [x19, #280]
    12b0:	str	x10, [x19, #488]
    12b4:	b	1364 <ctf_bufopen_internal+0x125c>
    12b8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    12bc:	add	x0, x0, #0x0
    12c0:	bl	0 <ctf_dprintf>
    12c4:	b	af4 <ctf_bufopen_internal+0x9ec>
    12c8:	ldr	x25, [x19, #432]
    12cc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    12d0:	add	x0, x0, #0x0
    12d4:	mov	x1, x25
    12d8:	bl	0 <ctf_dprintf>
    12dc:	ldr	x12, [sp, #16]
    12e0:	adrp	x8, 0 <ctf_set_ctl_hashes>
    12e4:	add	x8, x8, #0x0
    12e8:	mov	w9, #0x6                   	// #6
    12ec:	stp	xzr, x12, [x19, #296]
    12f0:	stp	x8, x9, [x19, #216]
    12f4:	ldr	x9, [sp, #40]
    12f8:	adrp	x10, 0 <ctf_set_ctl_hashes>
    12fc:	add	x10, x10, #0x0
    1300:	stp	xzr, xzr, [x19, #320]
    1304:	stp	x9, x10, [x19, #232]
    1308:	ldr	x10, [sp, #32]
    130c:	adrp	x12, 0 <ctf_set_ctl_hashes>
    1310:	mov	w11, #0x5                   	// #5
    1314:	add	x12, x12, #0x0
    1318:	mov	w8, #0x4                   	// #4
    131c:	stp	x11, x10, [x19, #248]
    1320:	stp	x12, x8, [x19, #264]
    1324:	ldr	x8, [sp, #8]
    1328:	adrp	x9, 31 <ctf_set_ctl_hashes+0x31>
    132c:	add	x9, x9, #0x0
    1330:	str	xzr, [x19, #312]
    1334:	stp	x8, x9, [x19, #280]
    1338:	ldr	x8, [x20, #24]
    133c:	cmp	x8, #0x18
    1340:	b.ne	1358 <ctf_bufopen_internal+0x1250>  // b.any
    1344:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1348:	add	x8, x8, #0x0
    134c:	b	1360 <ctf_bufopen_internal+0x1258>
    1350:	mov	w1, w0
    1354:	b	1214 <ctf_bufopen_internal+0x110c>
    1358:	adrp	x8, 0 <ctf_set_ctl_hashes>
    135c:	add	x8, x8, #0x0
    1360:	str	x8, [x19, #488]
    1364:	mov	w8, #0x1                   	// #1
    1368:	str	w8, [x19, #548]
    136c:	b	1228 <ctf_bufopen_internal+0x1120>
    1370:	ldrb	w8, [x23, #2]
    1374:	cmp	w8, #0x2
    1378:	b.eq	1750 <ctf_bufopen_internal+0x1648>  // b.none
    137c:	cmp	w8, #0x1
    1380:	b.ne	98c <ctf_bufopen_internal+0x884>  // b.any
    1384:	ldp	x9, x8, [x19, #400]
    1388:	ldp	w10, w11, [x23, #40]
    138c:	stp	x9, x11, [sp, #16]
    1390:	add	x9, x8, x10
    1394:	cmp	w10, w11
    1398:	add	x8, x8, x11
    139c:	str	x9, [sp, #56]
    13a0:	stp	x10, x8, [sp, #32]
    13a4:	b.cs	143c <ctf_bufopen_internal+0x1334>  // b.hs, b.nlast
    13a8:	ldr	x28, [sp, #56]
    13ac:	str	xzr, [sp, #72]
    13b0:	ldrh	w8, [x28, #4]
    13b4:	ldp	w9, w10, [x28, #8]
    13b8:	ldrh	w11, [x28, #6]
    13bc:	ubfx	x25, x8, #11, #21
    13c0:	and	x2, x8, #0x3ff
    13c4:	mov	w8, #0xffff                	// #65535
    13c8:	bfi	x10, x9, #32, #32
    13cc:	cmp	w11, w8
    13d0:	csel	x27, x10, x11, eq  // eq = none
    13d4:	mov	w8, #0x8                   	// #8
    13d8:	mov	w9, #0x10                  	// #16
    13dc:	mov	w0, w25
    13e0:	mov	x1, x27
    13e4:	str	x2, [sp, #48]
    13e8:	csel	x26, x9, x8, eq  // eq = none
    13ec:	bl	1d4c <get_vbytes_v1>
    13f0:	ldr	x2, [sp, #48]
    13f4:	mov	x24, x0
    13f8:	mov	w0, w25
    13fc:	mov	x1, x27
    1400:	bl	1df0 <get_vbytes_v2>
    1404:	orr	x8, x27, x24
    1408:	tbnz	x8, #63, 1750 <ctf_bufopen_internal+0x1648>
    140c:	ldr	x8, [sp, #72]
    1410:	add	x9, x24, x28
    1414:	add	x28, x9, x26
    1418:	ldr	x9, [sp, #40]
    141c:	sub	x8, x8, x24
    1420:	add	x8, x8, x0
    1424:	sub	x8, x8, x26
    1428:	cmp	x28, x9
    142c:	add	x8, x8, #0xc
    1430:	str	x8, [sp, #72]
    1434:	b.cc	13b0 <ctf_bufopen_internal+0x12a8>  // b.lo, b.ul, b.last
    1438:	b	1440 <ctf_bufopen_internal+0x1338>
    143c:	str	xzr, [sp, #72]
    1440:	ldr	x8, [x19, #416]
    1444:	ldr	x9, [sp, #72]
    1448:	add	x0, x8, x9
    144c:	str	x0, [sp, #48]
    1450:	bl	0 <malloc>
    1454:	cbz	x0, 1750 <ctf_bufopen_internal+0x1648>
    1458:	ldr	x26, [x19, #408]
    145c:	ldr	w27, [x23, #40]
    1460:	mov	x24, x0
    1464:	mov	x1, x26
    1468:	mov	x2, x27
    146c:	bl	0 <memcpy>
    1470:	ldp	w28, w2, [x23, #44]
    1474:	ldr	x25, [sp, #72]
    1478:	add	x8, x24, x28
    147c:	add	x0, x8, x25
    1480:	add	x1, x26, x28
    1484:	bl	0 <memcpy>
    1488:	sub	w8, w28, w27
    148c:	add	x0, x24, x27
    1490:	add	x2, x25, x8
    1494:	mov	w1, wzr
    1498:	bl	0 <memset>
    149c:	add	w8, w28, w25
    14a0:	str	w8, [x23, #44]
    14a4:	cmp	w8, w27
    14a8:	ldr	x8, [sp, #48]
    14ac:	str	x8, [x19, #416]
    14b0:	b.cc	17dc <ctf_bufopen_internal+0x16d4>  // b.lo, b.ul, b.last
    14b4:	mov	x0, x19
    14b8:	mov	x1, x23
    14bc:	mov	x2, x24
    14c0:	stp	x24, x24, [x19, #400]
    14c4:	str	x24, [x19, #392]
    14c8:	bl	184c <ctf_set_base>
    14cc:	ldr	x8, [x19, #408]
    14d0:	ldr	w9, [x23, #40]
    14d4:	ldp	x11, x10, [sp, #24]
    14d8:	add	x9, x8, x9
    14dc:	cmp	w10, w11
    14e0:	str	x9, [sp, #72]
    14e4:	b.cs	171c <ctf_bufopen_internal+0x1614>  // b.hs, b.nlast
    14e8:	ldr	x28, [sp, #56]
    14ec:	ldp	w8, w9, [x28, #8]
    14f0:	ldrh	w10, [x28, #6]
    14f4:	ldrh	w25, [x28, #4]
    14f8:	bfi	x9, x8, #32, #32
    14fc:	mov	w8, #0xffff                	// #65535
    1500:	cmp	w10, w8
    1504:	ubfx	x24, x25, #11, #21
    1508:	and	x26, x25, #0x3ff
    150c:	csel	x27, x9, x10, eq  // eq = none
    1510:	mov	w8, #0x8                   	// #8
    1514:	mov	w9, #0x10                  	// #16
    1518:	lsr	w11, w25, #10
    151c:	csel	x8, x9, x8, eq  // eq = none
    1520:	mov	w0, w24
    1524:	mov	x1, x27
    1528:	mov	x2, x26
    152c:	str	w11, [sp, #24]
    1530:	str	x8, [sp, #32]
    1534:	bl	1d4c <get_vbytes_v1>
    1538:	ldr	w10, [sp, #24]
    153c:	mov	w9, w26
    1540:	ldr	w8, [x28]
    1544:	cmp	w24, #0xd
    1548:	bfi	w9, w10, #25, #1
    154c:	ldr	x10, [sp, #72]
    1550:	bfi	w9, w24, #26, #5
    1554:	str	x0, [sp, #48]
    1558:	stp	w8, w9, [x10]
    155c:	b.hi	15ac <ctf_bufopen_internal+0x14a4>  // b.pmore
    1560:	mov	w8, #0x1                   	// #1
    1564:	lsl	w8, w8, w24
    1568:	mov	w9, #0x1d7                 	// #471
    156c:	tst	w8, w9
    1570:	b.eq	158c <ctf_bufopen_internal+0x1484>  // b.none
    1574:	mov	w8, #0xfffffffe            	// #-2
    1578:	cmp	x27, x8
    157c:	b.hi	15a0 <ctf_bufopen_internal+0x1498>  // b.pmore
    1580:	ldr	x8, [sp, #72]
    1584:	str	w27, [x8, #8]
    1588:	b	15ac <ctf_bufopen_internal+0x14a4>
    158c:	ldr	x8, [sp, #56]
    1590:	ldr	x9, [sp, #72]
    1594:	ldrh	w8, [x8, #6]
    1598:	str	w8, [x9, #8]
    159c:	b	15ac <ctf_bufopen_internal+0x14a4>
    15a0:	ldr	x9, [sp, #72]
    15a4:	lsr	x8, x27, #32
    15a8:	stp	w8, w27, [x9, #12]
    15ac:	ldr	x10, [sp, #72]
    15b0:	lsr	w0, w25, #11
    15b4:	mov	x2, x26
    15b8:	ldp	w9, w8, [x10, #12]
    15bc:	ldr	w28, [x10, #8]
    15c0:	bfi	x8, x9, #32, #32
    15c4:	cmn	w28, #0x1
    15c8:	csel	x25, x8, x28, eq  // eq = none
    15cc:	mov	x1, x25
    15d0:	bl	1df0 <get_vbytes_v2>
    15d4:	cmp	x27, x25
    15d8:	b.ne	17bc <ctf_bufopen_internal+0x16b4>  // b.any
    15dc:	ldr	x8, [sp, #56]
    15e0:	ldr	x9, [sp, #32]
    15e4:	cmn	w28, #0x1
    15e8:	mov	w10, #0x14                  	// #20
    15ec:	mov	x25, x0
    15f0:	add	x8, x9, x8
    15f4:	str	x8, [sp, #56]
    15f8:	sub	w8, w24, #0x6
    15fc:	mov	w9, #0xc                   	// #12
    1600:	csel	x9, x10, x9, eq  // eq = none
    1604:	cmp	w8, #0x2
    1608:	ldr	x8, [sp, #72]
    160c:	add	x28, x9, x8
    1610:	b.cc	1648 <ctf_bufopen_internal+0x1540>  // b.lo, b.ul, b.last
    1614:	cmp	w24, #0x5
    1618:	b.eq	16c4 <ctf_bufopen_internal+0x15bc>  // b.none
    161c:	cmp	w24, #0x4
    1620:	b.ne	16e0 <ctf_bufopen_internal+0x15d8>  // b.any
    1624:	ldr	x10, [sp, #56]
    1628:	ldrh	w8, [x10]
    162c:	ldrh	w9, [x10, #2]
    1630:	fmov	s0, w8
    1634:	mov	v0.s[1], w9
    1638:	str	d0, [x28]
    163c:	ldr	w8, [x10, #4]
    1640:	str	w8, [x28, #8]
    1644:	b	16f8 <ctf_bufopen_internal+0x15f0>
    1648:	cbz	w26, 16f8 <ctf_bufopen_internal+0x15f0>
    164c:	ldr	x10, [sp, #56]
    1650:	add	x9, x28, #0x8
    1654:	mov	x11, x9
    1658:	add	x8, x10, #0x6
    165c:	add	x10, x10, #0x8
    1660:	cmp	x27, #0x2, lsl #12
    1664:	b.ge	1678 <ctf_bufopen_internal+0x1570>  // b.tcont
    1668:	ldrh	w12, [x8]
    166c:	ldurh	w13, [x8, #-2]
    1670:	ldur	w14, [x8, #-6]
    1674:	b	1690 <ctf_bufopen_internal+0x1588>
    1678:	ldr	w12, [x10, #4]
    167c:	ldurh	w13, [x10, #-4]
    1680:	ldur	w14, [x10, #-8]
    1684:	mov	w15, #0x1fffffff            	// #536870911
    1688:	cmp	x27, x15
    168c:	b.gt	169c <ctf_bufopen_internal+0x1594>
    1690:	stp	w12, w13, [x9, #-4]
    1694:	stur	w14, [x9, #-8]
    1698:	b	16a8 <ctf_bufopen_internal+0x15a0>
    169c:	ldr	w15, [x10]
    16a0:	stp	w13, w12, [x11]
    16a4:	stp	w14, w15, [x11, #-8]
    16a8:	subs	x26, x26, #0x1
    16ac:	add	x8, x8, #0x8
    16b0:	add	x10, x10, #0x10
    16b4:	add	x11, x11, #0x10
    16b8:	add	x9, x9, #0xc
    16bc:	b.ne	1660 <ctf_bufopen_internal+0x1558>  // b.any
    16c0:	b	16f8 <ctf_bufopen_internal+0x15f0>
    16c4:	cbz	w26, 16e0 <ctf_bufopen_internal+0x15d8>
    16c8:	ldr	x9, [sp, #56]
    16cc:	mov	x8, x28
    16d0:	ldrh	w10, [x9], #2
    16d4:	subs	x26, x26, #0x1
    16d8:	str	w10, [x8], #4
    16dc:	b.ne	16d0 <ctf_bufopen_internal+0x15c8>  // b.any
    16e0:	ldr	x8, [sp, #48]
    16e4:	cmp	x8, x25
    16e8:	b.ne	17fc <ctf_bufopen_internal+0x16f4>  // b.any
    16ec:	ldp	x2, x1, [sp, #48]
    16f0:	mov	x0, x28
    16f4:	bl	0 <memcpy>
    16f8:	ldp	x8, x9, [sp, #48]
    16fc:	add	x9, x9, x8
    1700:	ldr	x8, [sp, #40]
    1704:	str	x9, [sp, #56]
    1708:	cmp	x9, x8
    170c:	add	x8, x28, x25
    1710:	str	x8, [sp, #72]
    1714:	b.cc	14e8 <ctf_bufopen_internal+0x13e0>  // b.lo, b.ul, b.last
    1718:	ldr	x8, [x19, #408]
    171c:	ldp	x10, x9, [sp, #72]
    1720:	ldr	w9, [x9]
    1724:	sub	x8, x10, x8
    1728:	cmp	x8, x9
    172c:	b.ne	181c <ctf_bufopen_internal+0x1714>  // b.any
    1730:	ldr	x0, [sp, #16]
    1734:	adrp	x9, 0 <ctf_set_ctl_hashes>
    1738:	mov	w8, #0x2                   	// #2
    173c:	add	x9, x9, #0x0
    1740:	str	w8, [x19, #560]
    1744:	strb	w8, [x23, #2]
    1748:	str	x9, [x19]
    174c:	bl	0 <free>
    1750:	mov	w8, #0x7fff                	// #32767
    1754:	str	w8, [x19, #544]
    1758:	b	98c <ctf_bufopen_internal+0x884>
    175c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1760:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1764:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1768:	add	x0, x0, #0x0
    176c:	add	x1, x1, #0x0
    1770:	add	x3, x3, #0x0
    1774:	mov	w2, #0x428                 	// #1064
    1778:	bl	0 <__assert_fail>
    177c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1780:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1784:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1788:	add	x0, x0, #0x0
    178c:	add	x1, x1, #0x0
    1790:	add	x3, x3, #0x0
    1794:	mov	w2, #0x456                 	// #1110
    1798:	bl	0 <__assert_fail>
    179c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    17a0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    17a4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    17a8:	add	x0, x0, #0x0
    17ac:	add	x1, x1, #0x0
    17b0:	add	x3, x3, #0x0
    17b4:	mov	w2, #0x448                 	// #1096
    17b8:	bl	0 <__assert_fail>
    17bc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    17c0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    17c4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    17c8:	add	x0, x0, #0x0
    17cc:	add	x1, x1, #0x0
    17d0:	add	x3, x3, #0x0
    17d4:	mov	w2, #0x210                 	// #528
    17d8:	bl	0 <__assert_fail>
    17dc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    17e0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    17e4:	adrp	x3, 0 <ctf_set_ctl_hashes>
    17e8:	add	x0, x0, #0x0
    17ec:	add	x1, x1, #0x0
    17f0:	add	x3, x3, #0x0
    17f4:	mov	w2, #0x1d0                 	// #464
    17f8:	bl	0 <__assert_fail>
    17fc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1800:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1804:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1808:	add	x0, x0, #0x0
    180c:	add	x1, x1, #0x0
    1810:	add	x3, x3, #0x0
    1814:	mov	w2, #0x25c                 	// #604
    1818:	bl	0 <__assert_fail>
    181c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1820:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1824:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1828:	add	x0, x0, #0x0
    182c:	add	x1, x1, #0x0
    1830:	add	x3, x3, #0x0
    1834:	mov	w2, #0x265                 	// #613
    1838:	bl	0 <__assert_fail>

000000000000183c <ctf_bufopen>:
    183c:	mov	x5, x3
    1840:	mov	x3, xzr
    1844:	mov	w4, wzr
    1848:	b	108 <ctf_bufopen_internal>

000000000000184c <ctf_set_base>:
    184c:	stp	x29, x30, [sp, #-32]!
    1850:	stp	x20, x19, [sp, #16]
    1854:	ldr	x8, [x0, #408]
    1858:	ldr	x9, [x0, #392]
    185c:	str	x2, [x0, #392]
    1860:	mov	x20, x1
    1864:	mov	x19, x0
    1868:	sub	x8, x8, x9
    186c:	add	x8, x2, x8
    1870:	str	x8, [x0, #408]
    1874:	ldr	w9, [x1, #36]
    1878:	mov	x29, sp
    187c:	add	x10, x8, x9
    1880:	str	x10, [x0, #464]
    1884:	ldr	w10, [x1, #40]
    1888:	sub	w9, w10, w9
    188c:	lsr	w9, w9, #3
    1890:	str	x9, [x0, #472]
    1894:	ldr	w9, [x1, #44]
    1898:	add	x8, x8, x9
    189c:	str	x8, [x0, #336]
    18a0:	ldr	w8, [x1, #48]
    18a4:	str	x8, [x0, #344]
    18a8:	ldr	w1, [x1, #4]
    18ac:	cbz	w1, 18bc <ctf_set_base+0x70>
    18b0:	mov	x0, x19
    18b4:	bl	0 <ctf_strptr>
    18b8:	str	x0, [x19, #520]
    18bc:	ldr	w1, [x20, #8]
    18c0:	cbz	w1, 18d0 <ctf_set_base+0x84>
    18c4:	mov	x0, x19
    18c8:	bl	0 <ctf_strptr>
    18cc:	str	x0, [x19, #528]
    18d0:	ldr	w1, [x20, #12]
    18d4:	cbz	w1, 1928 <ctf_set_base+0xdc>
    18d8:	mov	x0, x19
    18dc:	bl	0 <ctf_strptr>
    18e0:	mov	x1, x0
    18e4:	str	x0, [x19, #496]
    18e8:	cbz	x1, 18f8 <ctf_set_base+0xac>
    18ec:	adrp	x0, 0 <ctf_set_ctl_hashes>
    18f0:	add	x0, x0, #0x0
    18f4:	bl	0 <ctf_dprintf>
    18f8:	ldr	x1, [x19, #528]
    18fc:	cbz	x1, 1934 <ctf_set_base+0xe8>
    1900:	ldr	x8, [x19, #520]
    1904:	ldp	x20, x19, [sp, #16]
    1908:	adrp	x9, 0 <ctf_set_ctl_hashes>
    190c:	add	x9, x9, #0x0
    1910:	cmp	x8, #0x0
    1914:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1918:	csel	x2, x9, x8, eq  // eq = none
    191c:	add	x0, x0, #0x0
    1920:	ldp	x29, x30, [sp], #32
    1924:	b	0 <ctf_dprintf>
    1928:	ldr	x1, [x19, #496]
    192c:	cbnz	x1, 18ec <ctf_set_base+0xa0>
    1930:	b	18f8 <ctf_set_base+0xac>
    1934:	ldp	x20, x19, [sp, #16]
    1938:	ldp	x29, x30, [sp], #32
    193c:	ret

0000000000001940 <ctf_setmodel>:
    1940:	stp	x29, x30, [sp, #-16]!
    1944:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1948:	add	x8, x8, #0x0
    194c:	mov	x29, sp
    1950:	ldr	w9, [x8, #8]
    1954:	cmp	w9, w1
    1958:	b.eq	1974 <ctf_setmodel+0x34>  // b.none
    195c:	ldr	x9, [x8, #56]!
    1960:	cbnz	x9, 1950 <ctf_setmodel+0x10>
    1964:	mov	w1, #0x16                  	// #22
    1968:	bl	0 <ctf_set_errno>
    196c:	mov	x1, x0
    1970:	b	197c <ctf_setmodel+0x3c>
    1974:	mov	w1, wzr
    1978:	str	x8, [x0, #488]
    197c:	mov	w0, w1
    1980:	ldp	x29, x30, [sp], #16
    1984:	ret

0000000000001988 <ctf_file_close>:
    1988:	stp	x29, x30, [sp, #-32]!
    198c:	stp	x20, x19, [sp, #16]
    1990:	mov	x29, sp
    1994:	cbz	x0, 19c4 <ctf_file_close+0x3c>
    1998:	ldr	w2, [x0, #548]
    199c:	mov	x19, x0
    19a0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    19a4:	add	x0, x0, #0x0
    19a8:	mov	x1, x19
    19ac:	bl	0 <ctf_dprintf>
    19b0:	ldr	w8, [x19, #548]
    19b4:	cmp	w8, #0x2
    19b8:	b.cc	19d0 <ctf_file_close+0x48>  // b.lo, b.ul, b.last
    19bc:	sub	w8, w8, #0x1
    19c0:	str	w8, [x19, #548]
    19c4:	ldp	x20, x19, [sp, #16]
    19c8:	ldp	x29, x30, [sp], #32
    19cc:	ret
    19d0:	ldr	x0, [x19, #504]
    19d4:	bl	0 <free>
    19d8:	ldr	x0, [x19, #536]
    19dc:	bl	0 <free>
    19e0:	ldr	x0, [x19, #512]
    19e4:	bl	1988 <ctf_file_close>
    19e8:	ldr	x1, [x19, #584]
    19ec:	cbz	x1, 1a04 <ctf_file_close+0x7c>
    19f0:	ldr	x20, [x1, #8]
    19f4:	mov	x0, x19
    19f8:	bl	0 <ctf_dtd_delete>
    19fc:	mov	x1, x20
    1a00:	cbnz	x20, 19f0 <ctf_file_close+0x68>
    1a04:	ldr	x0, [x19, #568]
    1a08:	bl	0 <ctf_dynhash_destroy>
    1a0c:	ldrb	w8, [x19, #552]
    1a10:	tbnz	w8, #1, 1a38 <ctf_file_close+0xb0>
    1a14:	ldr	x0, [x19, #152]
    1a18:	bl	0 <ctf_hash_destroy>
    1a1c:	ldr	x0, [x19, #168]
    1a20:	bl	0 <ctf_hash_destroy>
    1a24:	ldr	x0, [x19, #184]
    1a28:	bl	0 <ctf_hash_destroy>
    1a2c:	ldr	x0, [x19, #200]
    1a30:	bl	0 <ctf_hash_destroy>
    1a34:	b	1a58 <ctf_file_close+0xd0>
    1a38:	ldr	x0, [x19, #160]
    1a3c:	bl	0 <ctf_dynhash_destroy>
    1a40:	ldr	x0, [x19, #176]
    1a44:	bl	0 <ctf_dynhash_destroy>
    1a48:	ldr	x0, [x19, #192]
    1a4c:	bl	0 <ctf_dynhash_destroy>
    1a50:	ldr	x0, [x19, #208]
    1a54:	bl	0 <ctf_dynhash_destroy>
    1a58:	ldr	x1, [x19, #608]
    1a5c:	cbz	x1, 1a74 <ctf_file_close+0xec>
    1a60:	ldr	x20, [x1, #8]
    1a64:	mov	x0, x19
    1a68:	bl	0 <ctf_dvd_delete>
    1a6c:	mov	x1, x20
    1a70:	cbnz	x20, 1a60 <ctf_file_close+0xd8>
    1a74:	ldr	x0, [x19, #592]
    1a78:	bl	0 <ctf_dynhash_destroy>
    1a7c:	mov	x0, x19
    1a80:	bl	0 <ctf_str_free_atoms>
    1a84:	ldr	x0, [x19, #704]
    1a88:	bl	0 <free>
    1a8c:	ldr	x0, [x19, #24]
    1a90:	adrp	x20, 31 <ctf_set_ctl_hashes+0x31>
    1a94:	add	x20, x20, #0x0
    1a98:	cmp	x0, x20
    1a9c:	b.eq	1aa4 <ctf_file_close+0x11c>  // b.none
    1aa0:	bl	0 <free>
    1aa4:	ldr	x0, [x19, #56]
    1aa8:	cmp	x0, x20
    1aac:	b.eq	1ab4 <ctf_file_close+0x12c>  // b.none
    1ab0:	bl	0 <free>
    1ab4:	ldr	x0, [x19, #88]
    1ab8:	cmp	x0, x20
    1abc:	b.eq	1ac8 <ctf_file_close+0x140>  // b.none
    1ac0:	bl	0 <free>
    1ac4:	b	1ad8 <ctf_file_close+0x150>
    1ac8:	ldr	x0, [x19, #136]
    1acc:	cbz	x0, 1ad8 <ctf_file_close+0x150>
    1ad0:	ldr	x1, [x19, #144]
    1ad4:	bl	0 <ctf_munmap>
    1ad8:	ldr	x0, [x19, #400]
    1adc:	bl	0 <free>
    1ae0:	ldr	x0, [x19, #128]
    1ae4:	bl	0 <ctf_dynhash_destroy>
    1ae8:	ldr	x0, [x19, #648]
    1aec:	bl	0 <ctf_dynhash_destroy>
    1af0:	ldr	x0, [x19, #656]
    1af4:	bl	0 <ctf_dynhash_destroy>
    1af8:	ldr	x0, [x19, #664]
    1afc:	bl	0 <ctf_dynhash_destroy>
    1b00:	ldr	x0, [x19, #672]
    1b04:	bl	0 <ctf_dynhash_destroy>
    1b08:	ldr	x0, [x19, #696]
    1b0c:	bl	0 <ctf_dynhash_destroy>
    1b10:	ldr	x0, [x19, #424]
    1b14:	bl	0 <free>
    1b18:	ldr	x0, [x19, #440]
    1b1c:	bl	0 <free>
    1b20:	ldr	x0, [x19, #448]
    1b24:	bl	0 <free>
    1b28:	ldr	x0, [x19, #8]
    1b2c:	bl	0 <free>
    1b30:	mov	x0, x19
    1b34:	ldp	x20, x19, [sp, #16]
    1b38:	ldp	x29, x30, [sp], #32
    1b3c:	b	0 <free>

0000000000001b40 <ctf_close>:
    1b40:	b	0 <ctf_arc_close>

0000000000001b44 <ctf_get_arc>:
    1b44:	ldr	x0, [x0, #640]
    1b48:	ret

0000000000001b4c <ctf_getdatasect>:
    1b4c:	ldur	q0, [x0, #40]
    1b50:	ldur	q1, [x0, #24]
    1b54:	stp	q1, q0, [x8]
    1b58:	ret

0000000000001b5c <ctf_parent_file>:
    1b5c:	ldr	x0, [x0, #512]
    1b60:	ret

0000000000001b64 <ctf_parent_name>:
    1b64:	ldr	x0, [x0, #528]
    1b68:	ret

0000000000001b6c <ctf_parent_name_set>:
    1b6c:	stp	x29, x30, [sp, #-32]!
    1b70:	stp	x20, x19, [sp, #16]
    1b74:	mov	x19, x0
    1b78:	ldr	x0, [x0, #536]
    1b7c:	mov	x20, x1
    1b80:	mov	x29, sp
    1b84:	cbz	x0, 1b8c <ctf_parent_name_set+0x20>
    1b88:	bl	0 <free>
    1b8c:	mov	x0, x20
    1b90:	bl	0 <strdup>
    1b94:	str	x0, [x19, #536]
    1b98:	cbz	x0, 1bac <ctf_parent_name_set+0x40>
    1b9c:	mov	x8, x0
    1ba0:	mov	w0, wzr
    1ba4:	str	x8, [x19, #528]
    1ba8:	b	1bb8 <ctf_parent_name_set+0x4c>
    1bac:	mov	w1, #0xc                   	// #12
    1bb0:	mov	x0, x19
    1bb4:	bl	0 <ctf_set_errno>
    1bb8:	ldp	x20, x19, [sp, #16]
    1bbc:	ldp	x29, x30, [sp], #32
    1bc0:	ret

0000000000001bc4 <ctf_cuname>:
    1bc4:	ldr	x0, [x0, #496]
    1bc8:	ret

0000000000001bcc <ctf_cuname_set>:
    1bcc:	stp	x29, x30, [sp, #-32]!
    1bd0:	stp	x20, x19, [sp, #16]
    1bd4:	mov	x19, x0
    1bd8:	ldr	x0, [x0, #504]
    1bdc:	mov	x20, x1
    1be0:	mov	x29, sp
    1be4:	cbz	x0, 1bec <ctf_cuname_set+0x20>
    1be8:	bl	0 <free>
    1bec:	mov	x0, x20
    1bf0:	bl	0 <strdup>
    1bf4:	str	x0, [x19, #504]
    1bf8:	cbz	x0, 1c0c <ctf_cuname_set+0x40>
    1bfc:	mov	x8, x0
    1c00:	mov	w0, wzr
    1c04:	str	x8, [x19, #496]
    1c08:	b	1c18 <ctf_cuname_set+0x4c>
    1c0c:	mov	w1, #0xc                   	// #12
    1c10:	mov	x0, x19
    1c14:	bl	0 <ctf_set_errno>
    1c18:	ldp	x20, x19, [sp, #16]
    1c1c:	ldp	x29, x30, [sp], #32
    1c20:	ret

0000000000001c24 <ctf_import>:
    1c24:	stp	x29, x30, [sp, #-32]!
    1c28:	stp	x20, x19, [sp, #16]
    1c2c:	mov	x19, x0
    1c30:	mov	x29, sp
    1c34:	cbz	x0, 1c68 <ctf_import+0x44>
    1c38:	mov	x20, x1
    1c3c:	cmp	x19, x1
    1c40:	b.eq	1c68 <ctf_import+0x44>  // b.none
    1c44:	cbz	x20, 1c78 <ctf_import+0x54>
    1c48:	ldr	w8, [x20, #548]
    1c4c:	cbz	w8, 1c68 <ctf_import+0x44>
    1c50:	ldr	x8, [x20, #488]
    1c54:	ldr	x9, [x19, #488]
    1c58:	cmp	x8, x9
    1c5c:	b.eq	1c78 <ctf_import+0x54>  // b.none
    1c60:	mov	w1, #0x3f4                 	// #1012
    1c64:	b	1c6c <ctf_import+0x48>
    1c68:	mov	w1, #0x16                  	// #22
    1c6c:	mov	x0, x19
    1c70:	bl	0 <ctf_set_errno>
    1c74:	b	1cd4 <ctf_import+0xb0>
    1c78:	ldr	x0, [x19, #512]
    1c7c:	cbz	x0, 1c94 <ctf_import+0x70>
    1c80:	ldr	w8, [x0, #548]
    1c84:	sub	w8, w8, #0x1
    1c88:	str	w8, [x0, #548]
    1c8c:	bl	1988 <ctf_file_close>
    1c90:	str	xzr, [x19, #512]
    1c94:	cbz	x20, 1ccc <ctf_import+0xa8>
    1c98:	ldr	x8, [x19, #528]
    1c9c:	cbnz	x8, 1cb4 <ctf_import+0x90>
    1ca0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1ca4:	add	x1, x1, #0x0
    1ca8:	mov	x0, x19
    1cac:	bl	1b6c <ctf_parent_name_set>
    1cb0:	tbnz	w0, #31, 1cd4 <ctf_import+0xb0>
    1cb4:	ldr	w8, [x19, #552]
    1cb8:	orr	w8, w8, #0x1
    1cbc:	str	w8, [x19, #552]
    1cc0:	ldr	w8, [x20, #548]
    1cc4:	add	w8, w8, #0x1
    1cc8:	str	w8, [x20, #548]
    1ccc:	mov	w0, wzr
    1cd0:	str	x20, [x19, #512]
    1cd4:	ldp	x20, x19, [sp, #16]
    1cd8:	ldp	x29, x30, [sp], #32
    1cdc:	ret

0000000000001ce0 <ctf_getmodel>:
    1ce0:	ldr	x8, [x0, #488]
    1ce4:	ldr	w0, [x8, #8]
    1ce8:	ret

0000000000001cec <ctf_setspecific>:
    1cec:	str	x1, [x0, #720]
    1cf0:	ret

0000000000001cf4 <ctf_getspecific>:
    1cf4:	ldr	x0, [x0, #720]
    1cf8:	ret

0000000000001cfc <get_kind_v1>:
    1cfc:	ubfx	w0, w0, #11, #5
    1d00:	ret

0000000000001d04 <get_root_v1>:
    1d04:	ubfx	w0, w0, #10, #1
    1d08:	ret

0000000000001d0c <get_vlen_v1>:
    1d0c:	and	w0, w0, #0x3ff
    1d10:	ret

0000000000001d14 <get_ctt_size_v1>:
    1d14:	ldp	w8, w9, [x1, #8]
    1d18:	ldrh	w10, [x1, #6]
    1d1c:	mov	w11, #0xffff                	// #65535
    1d20:	mov	w12, #0x8                   	// #8
    1d24:	mov	w13, #0x10                  	// #16
    1d28:	bfi	x9, x8, #32, #32
    1d2c:	cmp	w10, w11
    1d30:	csel	x0, x9, x10, eq  // eq = none
    1d34:	csel	x8, x13, x12, eq  // eq = none
    1d38:	cbz	x2, 1d40 <get_ctt_size_v1+0x2c>
    1d3c:	str	x0, [x2]
    1d40:	cbz	x3, 1d48 <get_ctt_size_v1+0x34>
    1d44:	str	x8, [x3]
    1d48:	ret

0000000000001d4c <get_vbytes_v1>:
    1d4c:	and	w8, w0, #0xffff
    1d50:	sub	w9, w8, #0x6
    1d54:	cmp	w9, #0x2
    1d58:	b.cc	1d7c <get_vbytes_v1+0x30>  // b.lo, b.ul, b.last
    1d5c:	cmp	w8, #0x4
    1d60:	b.eq	1d8c <get_vbytes_v1+0x40>  // b.none
    1d64:	cmp	w8, #0x5
    1d68:	b.ne	1d94 <get_vbytes_v1+0x48>  // b.any
    1d6c:	and	x8, x2, #0x1
    1d70:	add	x8, x8, x2
    1d74:	lsl	x0, x8, #1
    1d78:	ret
    1d7c:	cmp	x1, #0x2, lsl #12
    1d80:	b.ge	1d9c <get_vbytes_v1+0x50>  // b.tcont
    1d84:	lsl	x0, x2, #3
    1d88:	ret
    1d8c:	mov	w0, #0x8                   	// #8
    1d90:	ret
    1d94:	mov	x1, x2
    1d98:	b	1e4c <get_vbytes_common>
    1d9c:	lsl	x0, x2, #4
    1da0:	ret

0000000000001da4 <get_kind_v2>:
    1da4:	lsr	w0, w0, #26
    1da8:	ret

0000000000001dac <get_root_v2>:
    1dac:	ubfx	w0, w0, #25, #1
    1db0:	ret

0000000000001db4 <get_vlen_v2>:
    1db4:	and	w0, w0, #0xffffff
    1db8:	ret

0000000000001dbc <get_ctt_size_v2>:
    1dbc:	ldp	w9, w8, [x1, #12]
    1dc0:	ldr	w10, [x1, #8]
    1dc4:	mov	w11, #0xc                   	// #12
    1dc8:	mov	w12, #0x14                  	// #20
    1dcc:	bfi	x8, x9, #32, #32
    1dd0:	cmn	w10, #0x1
    1dd4:	csel	x0, x8, x10, eq  // eq = none
    1dd8:	csel	x8, x12, x11, eq  // eq = none
    1ddc:	cbz	x2, 1de4 <get_ctt_size_v2+0x28>
    1de0:	str	x0, [x2]
    1de4:	cbz	x3, 1dec <get_ctt_size_v2+0x30>
    1de8:	str	x8, [x3]
    1dec:	ret

0000000000001df0 <get_vbytes_v2>:
    1df0:	and	w8, w0, #0xffff
    1df4:	sub	w9, w8, #0x6
    1df8:	cmp	w9, #0x2
    1dfc:	b.cc	1e1c <get_vbytes_v2+0x2c>  // b.lo, b.ul, b.last
    1e00:	cmp	w8, #0x4
    1e04:	b.eq	1e34 <get_vbytes_v2+0x44>  // b.none
    1e08:	cmp	w8, #0x5
    1e0c:	b.ne	1e3c <get_vbytes_v2+0x4c>  // b.any
    1e10:	and	x8, x2, #0x1
    1e14:	add	x8, x8, x2
    1e18:	b	1e2c <get_vbytes_v2+0x3c>
    1e1c:	mov	w8, #0x1fffffff            	// #536870911
    1e20:	cmp	x1, x8
    1e24:	b.gt	1e44 <get_vbytes_v2+0x54>
    1e28:	add	x8, x2, x2, lsl #1
    1e2c:	lsl	x0, x8, #2
    1e30:	ret
    1e34:	mov	w0, #0xc                   	// #12
    1e38:	ret
    1e3c:	mov	x1, x2
    1e40:	b	1e4c <get_vbytes_common>
    1e44:	lsl	x0, x2, #4
    1e48:	ret

0000000000001e4c <get_vbytes_common>:
    1e4c:	and	w8, w0, #0xffff
    1e50:	cmp	w8, #0xe
    1e54:	b.hi	1e90 <get_vbytes_common+0x44>  // b.pmore
    1e58:	adrp	x10, 0 <ctf_set_ctl_hashes>
    1e5c:	and	x9, x0, #0xffff
    1e60:	add	x10, x10, #0x0
    1e64:	adr	x11, 1e78 <get_vbytes_common+0x2c>
    1e68:	ldrb	w12, [x10, x9]
    1e6c:	add	x11, x11, x12, lsl #2
    1e70:	mov	w0, #0x4                   	// #4
    1e74:	br	x11
    1e78:	mov	x0, xzr
    1e7c:	ret
    1e80:	lsl	x0, x1, #3
    1e84:	ret
    1e88:	mov	w0, #0x8                   	// #8
    1e8c:	ret
    1e90:	stp	x29, x30, [sp, #-16]!
    1e94:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1e98:	add	x0, x0, #0x0
    1e9c:	mov	w1, w8
    1ea0:	mov	x29, sp
    1ea4:	bl	0 <ctf_dprintf>
    1ea8:	mov	w0, #0x3ef                 	// #1007
    1eac:	ldp	x29, x30, [sp], #16
    1eb0:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_strraw_explicit>:
   0:	lsr	w8, w1, #31
   4:	cmp	x2, #0x0
   8:	mov	w9, #0xffffffff            	// #-1
   c:	add	x10, x0, w8, uxtw #4
  10:	ccmp	w1, w9, #0x4, ne  // ne = any
  14:	add	x9, x10, #0x150
  18:	csel	x9, x2, x9, gt
  1c:	cmp	w8, #0x1
  20:	b.ne	38 <ctf_strraw_explicit+0x38>  // b.any
  24:	ldr	x8, [x0, #128]
  28:	cbz	x8, 38 <ctf_strraw_explicit+0x38>
  2c:	mov	w1, w1
  30:	mov	x0, x8
  34:	b	0 <ctf_dynhash_lookup>
  38:	tbnz	w1, #31, 60 <ctf_strraw_explicit+0x60>
  3c:	ldr	x8, [x9, #8]
  40:	cmp	x8, w1, uxtw
  44:	b.hi	60 <ctf_strraw_explicit+0x60>  // b.pmore
  48:	ldr	w8, [x0, #384]
  4c:	cmp	w8, w1
  50:	b.ls	60 <ctf_strraw_explicit+0x60>  // b.plast
  54:	ldr	x0, [x0, #120]
  58:	mov	w1, w1
  5c:	b	0 <ctf_dynhash_lookup>
  60:	ldr	x8, [x9]
  64:	cbz	x8, 80 <ctf_strraw_explicit+0x80>
  68:	ldr	x9, [x9, #8]
  6c:	and	w10, w1, #0x7fffffff
  70:	add	x8, x8, x10
  74:	cmp	x9, x10
  78:	csel	x0, x8, xzr, hi  // hi = pmore
  7c:	ret
  80:	mov	x0, xzr
  84:	ret

0000000000000088 <ctf_strraw>:
  88:	mov	x2, xzr
  8c:	b	0 <ctf_strraw_explicit>

0000000000000090 <ctf_strptr>:
  90:	stp	x29, x30, [sp, #-16]!
  94:	mov	x2, xzr
  98:	mov	x29, sp
  9c:	bl	0 <ctf_strraw_explicit>
  a0:	adrp	x8, 0 <ctf_strraw_explicit>
  a4:	add	x8, x8, #0x0
  a8:	cmp	x0, #0x0
  ac:	csel	x0, x8, x0, eq  // eq = none
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret

00000000000000b8 <ctf_str_create_atoms>:
  b8:	stp	x29, x30, [sp, #-32]!
  bc:	stp	x20, x19, [sp, #16]
  c0:	mov	x19, x0
  c4:	adrp	x0, 0 <ctf_hash_string>
  c8:	adrp	x1, 0 <ctf_hash_eq_string>
  cc:	adrp	x2, 0 <free>
  d0:	adrp	x3, 0 <ctf_strraw_explicit>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x2, x2, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	x29, sp
  e8:	bl	0 <ctf_dynhash_create>
  ec:	str	x0, [x19, #368]
  f0:	cbz	x0, 170 <ctf_str_create_atoms+0xb8>
  f4:	ldr	x8, [x19, #120]
  f8:	cbnz	x8, 120 <ctf_str_create_atoms+0x68>
  fc:	adrp	x0, 0 <ctf_hash_integer>
 100:	adrp	x1, 0 <ctf_hash_eq_integer>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	mov	x2, xzr
 110:	mov	x3, xzr
 114:	bl	0 <ctf_dynhash_create>
 118:	str	x0, [x19, #120]
 11c:	cbz	x0, 164 <ctf_str_create_atoms+0xac>
 120:	bl	0 <__errno_location>
 124:	adrp	x1, 0 <ctf_strraw_explicit>
 128:	mov	x20, x0
 12c:	str	wzr, [x0]
 130:	add	x1, x1, #0x0
 134:	mov	w3, #0x1                   	// #1
 138:	mov	x0, x19
 13c:	mov	w2, wzr
 140:	mov	x4, xzr
 144:	bl	200 <ctf_str_add_ref_internal>
 148:	ldr	w8, [x20]
 14c:	mov	w0, wzr
 150:	cmp	w8, #0xc
 154:	b.ne	174 <ctf_str_create_atoms+0xbc>  // b.any
 158:	ldr	x0, [x19, #120]
 15c:	bl	0 <ctf_dynhash_destroy>
 160:	str	xzr, [x19, #120]
 164:	ldr	x0, [x19, #368]
 168:	bl	0 <ctf_dynhash_destroy>
 16c:	str	xzr, [x19, #368]
 170:	mov	w0, #0xfffffff4            	// #-12
 174:	ldp	x20, x19, [sp, #16]
 178:	ldp	x29, x30, [sp], #32
 17c:	ret

0000000000000180 <ctf_str_free_atom>:
 180:	stp	x29, x30, [sp, #-32]!
 184:	str	x19, [sp, #16]
 188:	mov	x29, sp
 18c:	mov	x19, x0
 190:	bl	7b4 <ctf_str_purge_atom_refs>
 194:	mov	x0, x19
 198:	ldr	x19, [sp, #16]
 19c:	ldp	x29, x30, [sp], #32
 1a0:	b	0 <free>

00000000000001a4 <ctf_str_add>:
 1a4:	stp	x29, x30, [sp, #-16]!
 1a8:	mov	x29, sp
 1ac:	cbz	x1, 1cc <ctf_str_add+0x28>
 1b0:	mov	w3, #0x1                   	// #1
 1b4:	mov	w2, wzr
 1b8:	mov	x4, xzr
 1bc:	bl	200 <ctf_str_add_ref_internal>
 1c0:	cbz	x0, 1d0 <ctf_str_add+0x2c>
 1c4:	ldr	w0, [x0, #24]
 1c8:	b	1d0 <ctf_str_add+0x2c>
 1cc:	mov	w0, wzr
 1d0:	ldp	x29, x30, [sp], #16
 1d4:	ret

00000000000001d8 <ctf_str_free_atoms>:
 1d8:	stp	x29, x30, [sp, #-32]!
 1dc:	str	x19, [sp, #16]
 1e0:	mov	x19, x0
 1e4:	ldr	x0, [x0, #120]
 1e8:	mov	x29, sp
 1ec:	bl	0 <ctf_dynhash_destroy>
 1f0:	ldr	x0, [x19, #368]
 1f4:	ldr	x19, [sp, #16]
 1f8:	ldp	x29, x30, [sp], #32
 1fc:	b	0 <ctf_dynhash_destroy>

0000000000000200 <ctf_str_add_ref_internal>:
 200:	stp	x29, x30, [sp, #-80]!
 204:	stp	x24, x23, [sp, #32]
 208:	stp	x22, x21, [sp, #48]
 20c:	stp	x20, x19, [sp, #64]
 210:	mov	x20, x0
 214:	ldr	x0, [x0, #368]
 218:	str	x25, [sp, #16]
 21c:	mov	x29, sp
 220:	mov	x25, x4
 224:	mov	w23, w3
 228:	mov	w22, w2
 22c:	mov	x24, x1
 230:	bl	0 <ctf_dynhash_lookup>
 234:	mov	x19, x0
 238:	cbz	w22, 258 <ctf_str_add_ref_internal+0x58>
 23c:	mov	w0, #0x18                  	// #24
 240:	bl	0 <malloc>
 244:	cbz	x0, 330 <ctf_str_add_ref_internal+0x130>
 248:	mov	x21, x0
 24c:	str	x25, [x0, #16]
 250:	cbnz	x19, 260 <ctf_str_add_ref_internal+0x60>
 254:	b	280 <ctf_str_add_ref_internal+0x80>
 258:	mov	x21, xzr
 25c:	cbz	x19, 280 <ctf_str_add_ref_internal+0x80>
 260:	cbz	w22, 334 <ctf_str_add_ref_internal+0x134>
 264:	add	x0, x19, #0x8
 268:	mov	x1, x21
 26c:	bl	0 <ctf_list_append>
 270:	ldr	x8, [x20, #376]
 274:	add	x8, x8, #0x1
 278:	str	x8, [x20, #376]
 27c:	b	334 <ctf_str_add_ref_internal+0x134>
 280:	mov	w0, #0x28                  	// #40
 284:	bl	0 <malloc>
 288:	mov	x19, x0
 28c:	cbz	x0, 304 <ctf_str_add_ref_internal+0x104>
 290:	movi	v0.2d, #0x0
 294:	mov	x0, x24
 298:	str	xzr, [x19, #32]
 29c:	stp	q0, q0, [x19]
 2a0:	bl	0 <strdup>
 2a4:	mov	x24, x0
 2a8:	cbz	x0, 318 <ctf_str_add_ref_internal+0x118>
 2ac:	ldr	x0, [x20, #368]
 2b0:	mov	x1, x24
 2b4:	mov	x2, x19
 2b8:	bl	0 <ctf_dynhash_insert>
 2bc:	tbnz	w0, #31, 30c <ctf_str_add_ref_internal+0x10c>
 2c0:	str	x24, [x19]
 2c4:	ldr	x8, [x20, #624]
 2c8:	str	x8, [x19, #32]
 2cc:	cbz	w23, 260 <ctf_str_add_ref_internal+0x60>
 2d0:	ldr	w1, [x20, #384]
 2d4:	mov	x2, x24
 2d8:	str	w1, [x19, #24]
 2dc:	ldr	x0, [x20, #120]
 2e0:	bl	0 <ctf_dynhash_insert>
 2e4:	tbnz	w0, #31, 30c <ctf_str_add_ref_internal+0x10c>
 2e8:	ldr	x0, [x19]
 2ec:	bl	0 <strlen>
 2f0:	ldr	w8, [x20, #384]
 2f4:	add	w8, w0, w8
 2f8:	add	w8, w8, #0x1
 2fc:	str	w8, [x20, #384]
 300:	b	260 <ctf_str_add_ref_internal+0x60>
 304:	mov	x24, xzr
 308:	b	318 <ctf_str_add_ref_internal+0x118>
 30c:	ldr	x0, [x20, #368]
 310:	mov	x1, x24
 314:	bl	0 <ctf_dynhash_remove>
 318:	mov	x0, x19
 31c:	bl	0 <free>
 320:	mov	x0, x21
 324:	bl	0 <free>
 328:	mov	x0, x24
 32c:	bl	0 <free>
 330:	mov	x19, xzr
 334:	mov	x0, x19
 338:	ldp	x20, x19, [sp, #64]
 33c:	ldp	x22, x21, [sp, #48]
 340:	ldp	x24, x23, [sp, #32]
 344:	ldr	x25, [sp, #16]
 348:	ldp	x29, x30, [sp], #80
 34c:	ret

0000000000000350 <ctf_str_add_ref>:
 350:	stp	x29, x30, [sp, #-16]!
 354:	mov	x29, sp
 358:	cbz	x1, 378 <ctf_str_add_ref+0x28>
 35c:	mov	x4, x2
 360:	mov	w2, #0x1                   	// #1
 364:	mov	w3, #0x1                   	// #1
 368:	bl	200 <ctf_str_add_ref_internal>
 36c:	cbz	x0, 37c <ctf_str_add_ref+0x2c>
 370:	ldr	w0, [x0, #24]
 374:	b	37c <ctf_str_add_ref+0x2c>
 378:	mov	w0, wzr
 37c:	ldp	x29, x30, [sp], #16
 380:	ret

0000000000000384 <ctf_str_add_external>:
 384:	stp	x29, x30, [sp, #-32]!
 388:	str	x19, [sp, #16]
 38c:	mov	x29, sp
 390:	cbz	x1, 3bc <ctf_str_add_external+0x38>
 394:	mov	w19, w2
 398:	mov	w2, wzr
 39c:	mov	w3, wzr
 3a0:	mov	x4, xzr
 3a4:	bl	200 <ctf_str_add_ref_internal>
 3a8:	cbz	x0, 3c0 <ctf_str_add_external+0x3c>
 3ac:	orr	w8, w19, #0x80000000
 3b0:	str	w8, [x0, #28]
 3b4:	mov	w0, #0x1                   	// #1
 3b8:	b	3c0 <ctf_str_add_external+0x3c>
 3bc:	mov	w0, wzr
 3c0:	ldr	x19, [sp, #16]
 3c4:	ldp	x29, x30, [sp], #32
 3c8:	ret

00000000000003cc <ctf_str_remove_ref>:
 3cc:	stp	x29, x30, [sp, #-48]!
 3d0:	stp	x22, x21, [sp, #16]
 3d4:	stp	x20, x19, [sp, #32]
 3d8:	ldr	x0, [x0, #368]
 3dc:	mov	x29, sp
 3e0:	mov	x19, x2
 3e4:	bl	0 <ctf_dynhash_lookup>
 3e8:	cbz	x0, 420 <ctf_str_remove_ref+0x54>
 3ec:	ldr	x21, [x0, #16]
 3f0:	cbz	x21, 420 <ctf_str_remove_ref+0x54>
 3f4:	add	x20, x0, #0x8
 3f8:	ldp	x22, x8, [x21, #8]
 3fc:	cmp	x8, x19
 400:	b.ne	418 <ctf_str_remove_ref+0x4c>  // b.any
 404:	mov	x0, x20
 408:	mov	x1, x21
 40c:	bl	0 <ctf_list_delete>
 410:	mov	x0, x21
 414:	bl	0 <free>
 418:	mov	x21, x22
 41c:	cbnz	x22, 3f8 <ctf_str_remove_ref+0x2c>
 420:	ldp	x20, x19, [sp, #32]
 424:	ldp	x22, x21, [sp, #16]
 428:	ldp	x29, x30, [sp], #48
 42c:	ret

0000000000000430 <ctf_str_rollback>:
 430:	sub	sp, sp, #0x20
 434:	stp	x29, x30, [sp, #16]
 438:	stp	x1, x2, [sp]
 43c:	ldr	x0, [x0, #368]
 440:	adrp	x1, 0 <ctf_strraw_explicit>
 444:	add	x1, x1, #0x0
 448:	mov	x2, sp
 44c:	add	x29, sp, #0x10
 450:	bl	0 <ctf_dynhash_iter_remove>
 454:	ldp	x29, x30, [sp, #16]
 458:	add	sp, sp, #0x20
 45c:	ret

0000000000000460 <ctf_str_rollback_atom>:
 460:	ldr	x8, [x1, #32]
 464:	ldr	x9, [x2, #8]
 468:	cmp	x8, x9
 46c:	cset	w0, hi  // hi = pmore
 470:	ret

0000000000000474 <ctf_str_purge_refs>:
 474:	stp	x29, x30, [sp, #-32]!
 478:	ldr	x8, [x0, #376]
 47c:	str	x19, [sp, #16]
 480:	mov	x19, x0
 484:	mov	x29, sp
 488:	cbz	x8, 4a0 <ctf_str_purge_refs+0x2c>
 48c:	ldr	x0, [x19, #368]
 490:	adrp	x1, 0 <ctf_strraw_explicit>
 494:	add	x1, x1, #0x0
 498:	mov	x2, xzr
 49c:	bl	0 <ctf_dynhash_iter>
 4a0:	str	xzr, [x19, #376]
 4a4:	ldr	x19, [sp, #16]
 4a8:	ldp	x29, x30, [sp], #32
 4ac:	ret

00000000000004b0 <ctf_str_purge_one_atom_refs>:
 4b0:	mov	x0, x1
 4b4:	b	7b4 <ctf_str_purge_atom_refs>

00000000000004b8 <ctf_str_write_strtab>:
 4b8:	sub	sp, sp, #0x80
 4bc:	stp	x29, x30, [sp, #64]
 4c0:	add	x29, sp, #0x40
 4c4:	movi	v0.2d, #0x0
 4c8:	sub	x8, x29, #0x10
 4cc:	stp	x22, x21, [sp, #96]
 4d0:	stp	x20, x19, [sp, #112]
 4d4:	stp	xzr, xzr, [x29, #-16]
 4d8:	stp	q0, q0, [sp, #16]
 4dc:	str	x8, [sp, #8]
 4e0:	mov	x19, x0
 4e4:	ldr	x0, [x0, #368]
 4e8:	adrp	x1, 0 <ctf_strraw_explicit>
 4ec:	add	x1, x1, #0x0
 4f0:	str	x23, [sp, #80]
 4f4:	bl	0 <ctf_dynhash_lookup>
 4f8:	cbz	x0, 680 <ctf_str_write_strtab+0x1c8>
 4fc:	str	x0, [sp, #40]
 500:	mov	x21, x0
 504:	ldr	x0, [x19, #368]
 508:	adrp	x1, 0 <ctf_strraw_explicit>
 50c:	add	x1, x1, #0x0
 510:	add	x2, sp, #0x8
 514:	bl	0 <ctf_dynhash_iter>
 518:	ldur	x8, [x29, #-8]
 51c:	adrp	x0, 0 <ctf_strraw_explicit>
 520:	add	x0, x0, #0x0
 524:	add	x1, x8, #0x1
 528:	stur	x1, [x29, #-8]
 52c:	bl	0 <ctf_dprintf>
 530:	ldr	x0, [sp, #16]
 534:	mov	w1, #0x8                   	// #8
 538:	bl	0 <calloc>
 53c:	cbz	x0, 6d4 <ctf_str_write_strtab+0x21c>
 540:	mov	x22, x0
 544:	mov	w8, #0x1                   	// #1
 548:	str	x21, [x22], #8
 54c:	stp	x0, x8, [sp, #24]
 550:	mov	x20, x0
 554:	ldr	x0, [x19, #368]
 558:	adrp	x1, 0 <ctf_strraw_explicit>
 55c:	add	x1, x1, #0x0
 560:	add	x2, sp, #0x8
 564:	bl	0 <ctf_dynhash_iter>
 568:	ldr	x8, [sp, #16]
 56c:	adrp	x3, 0 <ctf_strraw_explicit>
 570:	add	x3, x3, #0x0
 574:	mov	w2, #0x8                   	// #8
 578:	sub	x1, x8, #0x1
 57c:	mov	x0, x22
 580:	bl	0 <qsort>
 584:	ldur	x0, [x29, #-8]
 588:	bl	0 <malloc>
 58c:	stur	x0, [x29, #-16]
 590:	cbz	x0, 6a0 <ctf_str_write_strtab+0x1e8>
 594:	ldr	x8, [x19, #128]
 598:	cbnz	x8, 5c0 <ctf_str_write_strtab+0x108>
 59c:	adrp	x0, 0 <ctf_hash_integer>
 5a0:	adrp	x1, 0 <ctf_hash_eq_integer>
 5a4:	add	x0, x0, #0x0
 5a8:	add	x1, x1, #0x0
 5ac:	mov	x2, xzr
 5b0:	mov	x3, xzr
 5b4:	bl	0 <ctf_dynhash_create>
 5b8:	str	x0, [x19, #128]
 5bc:	cbz	x0, 694 <ctf_str_write_strtab+0x1dc>
 5c0:	ldr	x8, [sp, #16]
 5c4:	cbz	x8, 6ac <ctf_str_write_strtab+0x1f4>
 5c8:	mov	w23, wzr
 5cc:	mov	x21, xzr
 5d0:	mov	w22, wzr
 5d4:	ldr	x8, [x20, x21, lsl #3]
 5d8:	ldr	w10, [x8, #28]
 5dc:	ldr	x9, [x8, #16]
 5e0:	cbz	w10, 624 <ctf_str_write_strtab+0x16c>
 5e4:	cbz	x9, 5fc <ctf_str_write_strtab+0x144>
 5e8:	ldr	x11, [x9, #16]
 5ec:	str	w10, [x11]
 5f0:	ldr	x9, [x9, #8]
 5f4:	cbnz	x9, 5e8 <ctf_str_write_strtab+0x130>
 5f8:	ldr	w10, [x8, #28]
 5fc:	ldr	x0, [x19, #128]
 600:	ldr	x2, [x8]
 604:	mov	w1, w10
 608:	bl	0 <ctf_dynhash_insert>
 60c:	tbnz	w0, #31, 694 <ctf_str_write_strtab+0x1dc>
 610:	ldr	x8, [x20, x21, lsl #3]
 614:	mov	w23, #0x1                   	// #1
 618:	ldr	w9, [x8, #28]
 61c:	str	w9, [x8, #24]
 620:	b	660 <ctf_str_write_strtab+0x1a8>
 624:	cbz	x9, 638 <ctf_str_write_strtab+0x180>
 628:	ldr	x10, [x9, #16]
 62c:	str	w22, [x10]
 630:	ldr	x9, [x9, #8]
 634:	cbnz	x9, 628 <ctf_str_write_strtab+0x170>
 638:	str	w22, [x8, #24]
 63c:	ldur	x9, [x29, #-16]
 640:	ldr	x1, [x8]
 644:	add	x0, x9, w22, uxtw
 648:	bl	0 <strcpy>
 64c:	ldr	x8, [x20, x21, lsl #3]
 650:	ldr	x0, [x8]
 654:	bl	0 <strlen>
 658:	add	w8, w22, w0
 65c:	add	w22, w8, #0x1
 660:	ldr	x8, [sp, #16]
 664:	add	x21, x21, #0x1
 668:	cmp	x21, x8
 66c:	b.cc	5d4 <ctf_str_write_strtab+0x11c>  // b.lo, b.ul, b.last
 670:	mov	x0, x20
 674:	bl	0 <free>
 678:	cbnz	w23, 6c0 <ctf_str_write_strtab+0x208>
 67c:	b	6b4 <ctf_str_write_strtab+0x1fc>
 680:	adrp	x0, 0 <ctf_strraw_explicit>
 684:	add	x0, x0, #0x0
 688:	bl	0 <ctf_dprintf>
 68c:	stur	xzr, [x29, #-16]
 690:	b	6d4 <ctf_str_write_strtab+0x21c>
 694:	ldur	x0, [x29, #-16]
 698:	bl	0 <free>
 69c:	stur	xzr, [x29, #-16]
 6a0:	mov	x0, x20
 6a4:	bl	0 <free>
 6a8:	b	6d4 <ctf_str_write_strtab+0x21c>
 6ac:	mov	x0, x20
 6b0:	bl	0 <free>
 6b4:	ldr	x0, [x19, #128]
 6b8:	bl	0 <ctf_dynhash_destroy>
 6bc:	str	xzr, [x19, #128]
 6c0:	ldr	x0, [x19, #120]
 6c4:	bl	0 <ctf_dynhash_empty>
 6c8:	ldur	w8, [x29, #-8]
 6cc:	add	w8, w8, #0x1
 6d0:	str	w8, [x19, #384]
 6d4:	ldp	x0, x1, [x29, #-16]
 6d8:	ldp	x20, x19, [sp, #112]
 6dc:	ldp	x22, x21, [sp, #96]
 6e0:	ldr	x23, [sp, #80]
 6e4:	ldp	x29, x30, [sp, #64]
 6e8:	add	sp, sp, #0x80
 6ec:	ret

00000000000006f0 <ctf_str_count_strtab>:
 6f0:	stp	x29, x30, [sp, #-32]!
 6f4:	stp	x20, x19, [sp, #16]
 6f8:	ldr	x8, [x2, #32]
 6fc:	mov	x19, x2
 700:	mov	x29, sp
 704:	cmp	x8, x1
 708:	b.eq	740 <ctf_str_count_strtab+0x50>  // b.none
 70c:	add	x0, x1, #0x8
 710:	mov	x20, x1
 714:	bl	0 <ctf_list_empty_p>
 718:	cbnz	w0, 74c <ctf_str_count_strtab+0x5c>
 71c:	ldr	w8, [x20, #28]
 720:	cbnz	w8, 740 <ctf_str_count_strtab+0x50>
 724:	ldr	x0, [x20]
 728:	bl	0 <strlen>
 72c:	ldr	x8, [x19]
 730:	ldr	x9, [x8, #8]
 734:	add	x9, x0, x9
 738:	add	x9, x9, #0x1
 73c:	str	x9, [x8, #8]
 740:	ldr	x8, [x19, #8]
 744:	add	x8, x8, #0x1
 748:	str	x8, [x19, #8]
 74c:	ldp	x20, x19, [sp, #16]
 750:	ldp	x29, x30, [sp], #32
 754:	ret

0000000000000758 <ctf_str_populate_sorttab>:
 758:	stp	x29, x30, [sp, #-32]!
 75c:	stp	x20, x19, [sp, #16]
 760:	ldr	x8, [x2, #32]
 764:	mov	x29, sp
 768:	cmp	x8, x1
 76c:	b.eq	794 <ctf_str_populate_sorttab+0x3c>  // b.none
 770:	add	x0, x1, #0x8
 774:	mov	x19, x2
 778:	mov	x20, x1
 77c:	bl	0 <ctf_list_empty_p>
 780:	cbnz	w0, 794 <ctf_str_populate_sorttab+0x3c>
 784:	ldp	x9, x8, [x19, #16]
 788:	add	x10, x8, #0x1
 78c:	str	x10, [x19, #24]
 790:	str	x20, [x9, x8, lsl #3]
 794:	ldp	x20, x19, [sp, #16]
 798:	ldp	x29, x30, [sp], #32
 79c:	ret

00000000000007a0 <ctf_str_sort_strtab>:
 7a0:	ldr	x8, [x0]
 7a4:	ldr	x9, [x1]
 7a8:	ldr	x0, [x8]
 7ac:	ldr	x1, [x9]
 7b0:	b	0 <strcmp>

00000000000007b4 <ctf_str_purge_atom_refs>:
 7b4:	stp	x29, x30, [sp, #-48]!
 7b8:	stp	x20, x19, [sp, #32]
 7bc:	ldr	x19, [x0, #16]
 7c0:	str	x21, [sp, #16]
 7c4:	mov	x29, sp
 7c8:	cbz	x19, 7f0 <ctf_str_purge_atom_refs+0x3c>
 7cc:	add	x20, x0, #0x8
 7d0:	ldr	x21, [x19, #8]
 7d4:	mov	x0, x20
 7d8:	mov	x1, x19
 7dc:	bl	0 <ctf_list_delete>
 7e0:	mov	x0, x19
 7e4:	bl	0 <free>
 7e8:	mov	x19, x21
 7ec:	cbnz	x21, 7d0 <ctf_str_purge_atom_refs+0x1c>
 7f0:	ldp	x20, x19, [sp, #32]
 7f4:	ldr	x21, [sp, #16]
 7f8:	ldp	x29, x30, [sp], #48
 7fc:	ret

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	w4, w2
   8:	mov	x5, x1
   c:	mov	x1, x0
  10:	mov	w2, #0x1                   	// #1
  14:	mov	w3, #0x2                   	// #2
  18:	mov	x0, xzr
  1c:	mov	x29, sp
  20:	bl	0 <mmap>
  24:	cmn	x0, #0x1
  28:	csel	x0, xzr, x0, eq  // eq = none
  2c:	ldp	x29, x30, [sp], #16
  30:	ret

0000000000000034 <ctf_munmap>:
  34:	b	0 <munmap>

0000000000000038 <ctf_pread>:
  38:	stp	x29, x30, [sp, #-64]!
  3c:	stp	x24, x23, [sp, #16]
  40:	stp	x22, x21, [sp, #32]
  44:	stp	x20, x19, [sp, #48]
  48:	mov	x20, x3
  4c:	mov	x21, x2
  50:	mov	x22, x1
  54:	mov	w23, w0
  58:	mov	x19, xzr
  5c:	mov	x29, sp
  60:	cmp	x21, #0x1
  64:	b.lt	bc <ctf_pread+0x84>  // b.tstop
  68:	bl	0 <__errno_location>
  6c:	mov	x24, x0
  70:	str	wzr, [x0]
  74:	mov	w0, w23
  78:	mov	x1, x22
  7c:	mov	x2, x21
  80:	mov	x3, x20
  84:	bl	0 <pread>
  88:	ldr	w8, [x24]
  8c:	tbz	x0, #63, 98 <ctf_pread+0x60>
  90:	cmp	w8, #0x4
  94:	b.ne	b8 <ctf_pread+0x80>  // b.any
  98:	cmp	w8, #0x4
  9c:	b.eq	60 <ctf_pread+0x28>  // b.none
  a0:	add	x19, x0, x19
  a4:	cbz	x0, bc <ctf_pread+0x84>
  a8:	sub	x21, x21, x0
  ac:	add	x20, x0, x20
  b0:	add	x22, x22, x0
  b4:	b	60 <ctf_pread+0x28>
  b8:	mov	x19, x0
  bc:	mov	x0, x19
  c0:	ldp	x20, x19, [sp, #48]
  c4:	ldp	x22, x21, [sp, #32]
  c8:	ldp	x24, x23, [sp, #16]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret

00000000000000d4 <ctf_strerror>:
  d4:	b	0 <strerror>

00000000000000d8 <ctf_version>:
  d8:	stp	x29, x30, [sp, #-32]!
  dc:	str	x19, [sp, #16]
  e0:	mov	x29, sp
  e4:	tbnz	w0, #31, 100 <ctf_version+0x28>
  e8:	cmp	w0, #0x4
  ec:	b.eq	10c <ctf_version+0x34>  // b.none
  f0:	cbnz	w0, 12c <ctf_version+0x54>
  f4:	adrp	x8, 0 <ctf_mmap>
  f8:	ldr	w19, [x8]
  fc:	b	13c <ctf_version+0x64>
 100:	bl	0 <__errno_location>
 104:	mov	w8, #0x16                  	// #22
 108:	b	134 <ctf_version+0x5c>
 10c:	adrp	x0, 0 <ctf_mmap>
 110:	add	x0, x0, #0x0
 114:	mov	w1, #0x4                   	// #4
 118:	mov	w19, #0x4                   	// #4
 11c:	bl	14c <ctf_dprintf>
 120:	adrp	x8, 0 <ctf_mmap>
 124:	str	w19, [x8]
 128:	b	13c <ctf_version+0x64>
 12c:	bl	0 <__errno_location>
 130:	mov	w8, #0x5f                  	// #95
 134:	str	w8, [x0]
 138:	mov	w19, #0xffffffff            	// #-1
 13c:	mov	w0, w19
 140:	ldr	x19, [sp, #16]
 144:	ldp	x29, x30, [sp], #32
 148:	ret

000000000000014c <ctf_dprintf>:
 14c:	sub	sp, sp, #0x130
 150:	adrp	x8, 0 <ctf_mmap>
 154:	ldr	w8, [x8]
 158:	stp	x29, x30, [sp, #256]
 15c:	add	x29, sp, #0x100
 160:	str	x28, [sp, #272]
 164:	stp	x20, x19, [sp, #288]
 168:	stp	x1, x2, [x29, #-120]
 16c:	stp	x3, x4, [x29, #-104]
 170:	stp	x5, x6, [x29, #-88]
 174:	stur	x7, [x29, #-72]
 178:	stp	q0, q1, [sp]
 17c:	stp	q2, q3, [sp, #32]
 180:	stp	q4, q5, [sp, #64]
 184:	stp	q6, q7, [sp, #96]
 188:	cbnz	w8, 1a0 <ctf_dprintf+0x54>
 18c:	ldp	x20, x19, [sp, #288]
 190:	ldr	x28, [sp, #272]
 194:	ldp	x29, x30, [sp, #256]
 198:	add	sp, sp, #0x130
 19c:	ret
 1a0:	adrp	x12, 0 <stdout>
 1a4:	mov	x19, x0
 1a8:	ldr	x0, [x12]
 1ac:	mov	x8, #0xffffffffffffffc8    	// #-56
 1b0:	mov	x10, sp
 1b4:	movk	x8, #0xff80, lsl #32
 1b8:	sub	x11, x29, #0x78
 1bc:	add	x10, x10, #0x80
 1c0:	add	x9, x29, #0x30
 1c4:	stp	x10, x8, [x29, #-16]
 1c8:	add	x8, x11, #0x38
 1cc:	stp	x9, x8, [x29, #-32]
 1d0:	bl	0 <fflush>
 1d4:	adrp	x20, 0 <stderr>
 1d8:	ldr	x1, [x20]
 1dc:	adrp	x0, 0 <ctf_mmap>
 1e0:	add	x0, x0, #0x0
 1e4:	bl	0 <fputs>
 1e8:	ldp	q0, q1, [x29, #-32]
 1ec:	ldr	x0, [x20]
 1f0:	sub	x2, x29, #0x40
 1f4:	mov	x1, x19
 1f8:	stp	q0, q1, [x29, #-64]
 1fc:	bl	0 <vfprintf>
 200:	b	18c <ctf_dprintf+0x40>

0000000000000204 <libctf_init_debug>:
 204:	stp	x29, x30, [sp, #-32]!
 208:	str	x19, [sp, #16]
 20c:	adrp	x19, 0 <ctf_mmap>
 210:	ldrb	w8, [x19]
 214:	mov	x29, sp
 218:	tbnz	w8, #0, 240 <libctf_init_debug+0x3c>
 21c:	adrp	x0, 0 <ctf_mmap>
 220:	add	x0, x0, #0x0
 224:	bl	0 <getenv>
 228:	cmp	x0, #0x0
 22c:	adrp	x8, 0 <ctf_mmap>
 230:	mov	w9, #0x1                   	// #1
 234:	cset	w10, ne  // ne = any
 238:	str	w10, [x8]
 23c:	strb	w9, [x19]
 240:	ldr	x19, [sp, #16]
 244:	ldp	x29, x30, [sp], #32
 248:	ret

000000000000024c <ctf_setdebug>:
 24c:	stp	x29, x30, [sp, #-48]!
 250:	str	x21, [sp, #16]
 254:	stp	x20, x19, [sp, #32]
 258:	adrp	x21, 0 <ctf_mmap>
 25c:	ldrb	w8, [x21]
 260:	mov	w19, w0
 264:	adrp	x20, 0 <ctf_mmap>
 268:	mov	x29, sp
 26c:	tbnz	w8, #0, 290 <ctf_setdebug+0x44>
 270:	adrp	x0, 0 <ctf_mmap>
 274:	add	x0, x0, #0x0
 278:	bl	0 <getenv>
 27c:	cmp	x0, #0x0
 280:	mov	w8, #0x1                   	// #1
 284:	cset	w9, ne  // ne = any
 288:	str	w9, [x20]
 28c:	strb	w8, [x21]
 290:	str	w19, [x20]
 294:	mov	w1, w19
 298:	ldp	x20, x19, [sp, #32]
 29c:	ldr	x21, [sp, #16]
 2a0:	adrp	x0, 0 <ctf_mmap>
 2a4:	add	x0, x0, #0x0
 2a8:	ldp	x29, x30, [sp], #48
 2ac:	b	14c <ctf_dprintf>

00000000000002b0 <ctf_getdebug>:
 2b0:	adrp	x8, 0 <ctf_mmap>
 2b4:	ldr	w0, [x8]
 2b8:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	ldr	w8, [x0, #544]
       4:	cmp	x8, x1
       8:	cset	w0, cs  // cs = hs, nlast
       c:	ret

0000000000000010 <ctf_type_ischild>:
      10:	ldr	w8, [x0, #544]
      14:	cmp	x8, x1
      18:	cset	w0, cc  // cc = lo, ul, last
      1c:	ret

0000000000000020 <ctf_member_iter>:
      20:	sub	sp, sp, #0x50
      24:	stp	x29, x30, [sp, #16]
      28:	add	x29, sp, #0x10
      2c:	str	x23, [sp, #32]
      30:	stp	x22, x21, [sp, #48]
      34:	stp	x20, x19, [sp, #64]
      38:	mov	x19, x3
      3c:	mov	x20, x2
      40:	mov	x21, x0
      44:	str	x0, [x29, #24]
      48:	bl	1a8 <ctf_type_resolve>
      4c:	cmn	x0, #0x1
      50:	b.eq	190 <ctf_member_iter+0x170>  // b.none
      54:	mov	x23, x0
      58:	add	x0, x29, #0x18
      5c:	mov	x1, x23
      60:	bl	0 <ctf_lookup_by_id>
      64:	cbz	x0, e0 <ctf_member_iter+0xc0>
      68:	mov	x22, x0
      6c:	ldr	x0, [x29, #24]
      70:	add	x2, sp, #0x8
      74:	mov	x3, sp
      78:	mov	x1, x22
      7c:	ldr	x8, [x0]
      80:	ldr	x8, [x8, #24]
      84:	blr	x8
      88:	ldr	x8, [x29, #24]
      8c:	ldr	w0, [x22, #4]
      90:	ldr	x8, [x8]
      94:	ldr	x8, [x8]
      98:	blr	x8
      9c:	orr	w8, w0, #0x1
      a0:	cmp	w8, #0x7
      a4:	b.ne	e8 <ctf_member_iter+0xc8>  // b.any
      a8:	ldr	x0, [x29, #24]
      ac:	mov	x1, x23
      b0:	bl	0 <ctf_dynamic_type>
      b4:	cbz	x0, f8 <ctf_member_iter+0xd8>
      b8:	ldr	x21, [x0, #56]
      bc:	cbz	x21, 18c <ctf_member_iter+0x16c>
      c0:	ldp	x0, x1, [x21, #16]
      c4:	ldr	x2, [x21, #32]
      c8:	mov	x3, x19
      cc:	blr	x20
      d0:	cbnz	w0, 190 <ctf_member_iter+0x170>
      d4:	ldr	x21, [x21, #8]
      d8:	cbnz	x21, c0 <ctf_member_iter+0xa0>
      dc:	b	18c <ctf_member_iter+0x16c>
      e0:	mov	w0, #0xffffffff            	// #-1
      e4:	b	190 <ctf_member_iter+0x170>
      e8:	mov	w1, #0x3fb                 	// #1019
      ec:	mov	x0, x21
      f0:	bl	0 <ctf_set_errno>
      f4:	b	190 <ctf_member_iter+0x170>
      f8:	ldr	x8, [x29, #24]
      fc:	ldp	x9, x21, [sp]
     100:	ldr	w0, [x22, #4]
     104:	ldr	x8, [x8]
     108:	add	x22, x9, x22
     10c:	ldr	x8, [x8, #16]
     110:	blr	x8
     114:	mov	w8, #0x1fffffff            	// #536870911
     118:	cmp	x21, x8
     11c:	mov	w21, w0
     120:	b.gt	154 <ctf_member_iter+0x134>
     124:	cbz	w21, 18c <ctf_member_iter+0x16c>
     128:	ldr	x0, [x29, #24]
     12c:	ldr	w1, [x22]
     130:	bl	0 <ctf_strptr>
     134:	ldp	w2, w1, [x22, #4]
     138:	mov	x3, x19
     13c:	blr	x20
     140:	cbnz	w0, 190 <ctf_member_iter+0x170>
     144:	subs	w21, w21, #0x1
     148:	add	x22, x22, #0xc
     14c:	b.ne	128 <ctf_member_iter+0x108>  // b.any
     150:	b	190 <ctf_member_iter+0x170>
     154:	cbz	w21, 18c <ctf_member_iter+0x16c>
     158:	ldr	x0, [x29, #24]
     15c:	ldr	w1, [x22]
     160:	bl	0 <ctf_strptr>
     164:	ldp	w8, w1, [x22, #4]
     168:	ldr	w2, [x22, #12]
     16c:	mov	x3, x19
     170:	bfi	x2, x8, #32, #32
     174:	blr	x20
     178:	cbnz	w0, 190 <ctf_member_iter+0x170>
     17c:	subs	w21, w21, #0x1
     180:	add	x22, x22, #0x10
     184:	b.ne	158 <ctf_member_iter+0x138>  // b.any
     188:	b	190 <ctf_member_iter+0x170>
     18c:	mov	w0, wzr
     190:	ldp	x20, x19, [sp, #64]
     194:	ldp	x22, x21, [sp, #48]
     198:	ldr	x23, [sp, #32]
     19c:	ldp	x29, x30, [sp, #16]
     1a0:	add	sp, sp, #0x50
     1a4:	ret

00000000000001a8 <ctf_type_resolve>:
     1a8:	stp	x29, x30, [sp, #-64]!
     1ac:	stp	x20, x19, [sp, #48]
     1b0:	mov	x29, sp
     1b4:	mov	x19, x0
     1b8:	str	x23, [sp, #16]
     1bc:	stp	x22, x21, [sp, #32]
     1c0:	str	x0, [x29, #24]
     1c4:	cbz	x1, 238 <ctf_type_resolve+0x90>
     1c8:	mov	x21, x1
     1cc:	mov	x23, x1
     1d0:	mov	x20, x1
     1d4:	add	x0, x29, #0x18
     1d8:	mov	x1, x20
     1dc:	bl	0 <ctf_lookup_by_id>
     1e0:	cbz	x0, 254 <ctf_type_resolve+0xac>
     1e4:	ldr	x8, [x29, #24]
     1e8:	mov	x22, x0
     1ec:	ldr	w0, [x0, #4]
     1f0:	ldr	x8, [x8]
     1f4:	ldr	x8, [x8]
     1f8:	blr	x8
     1fc:	sub	w8, w0, #0xa
     200:	cmp	w8, #0x3
     204:	b.hi	27c <ctf_type_resolve+0xd4>  // b.pmore
     208:	ldr	w8, [x22, #8]
     20c:	cmp	x23, x8
     210:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     214:	cmp	x20, x8
     218:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     21c:	cmp	x8, x21
     220:	b.eq	25c <ctf_type_resolve+0xb4>  // b.none
     224:	mov	x23, x20
     228:	mov	x20, x8
     22c:	cbnz	w8, 1d4 <ctf_type_resolve+0x2c>
     230:	mov	w1, #0x41b                 	// #1051
     234:	b	270 <ctf_type_resolve+0xc8>
     238:	mov	x0, x19
     23c:	ldp	x20, x19, [sp, #48]
     240:	ldp	x22, x21, [sp, #32]
     244:	ldr	x23, [sp, #16]
     248:	mov	w1, #0x41b                 	// #1051
     24c:	ldp	x29, x30, [sp], #64
     250:	b	0 <ctf_set_errno>
     254:	mov	x20, #0xffffffffffffffff    	// #-1
     258:	b	27c <ctf_type_resolve+0xd4>
     25c:	adrp	x0, 0 <ctf_type_isparent>
     260:	add	x0, x0, #0x0
     264:	mov	x1, x21
     268:	bl	0 <ctf_dprintf>
     26c:	mov	w1, #0x3ef                 	// #1007
     270:	mov	x0, x19
     274:	bl	0 <ctf_set_errno>
     278:	mov	x20, x0
     27c:	mov	x0, x20
     280:	ldp	x20, x19, [sp, #48]
     284:	ldp	x22, x21, [sp, #32]
     288:	ldr	x23, [sp, #16]
     28c:	ldp	x29, x30, [sp], #64
     290:	ret

0000000000000294 <ctf_enum_iter>:
     294:	sub	sp, sp, #0x50
     298:	stp	x29, x30, [sp, #16]
     29c:	add	x29, sp, #0x10
     2a0:	str	x23, [sp, #32]
     2a4:	stp	x22, x21, [sp, #48]
     2a8:	stp	x20, x19, [sp, #64]
     2ac:	mov	x19, x3
     2b0:	mov	x20, x2
     2b4:	mov	x21, x0
     2b8:	str	x0, [x29, #24]
     2bc:	bl	3d0 <ctf_type_resolve_unsliced>
     2c0:	cmn	x0, #0x1
     2c4:	b.eq	368 <ctf_enum_iter+0xd4>  // b.none
     2c8:	mov	x23, x0
     2cc:	add	x0, x29, #0x18
     2d0:	mov	x1, x23
     2d4:	bl	0 <ctf_lookup_by_id>
     2d8:	cbz	x0, 354 <ctf_enum_iter+0xc0>
     2dc:	ldr	x8, [x29, #24]
     2e0:	mov	x22, x0
     2e4:	ldr	w0, [x0, #4]
     2e8:	ldr	x8, [x8]
     2ec:	ldr	x8, [x8]
     2f0:	blr	x8
     2f4:	cmp	w0, #0x8
     2f8:	b.ne	35c <ctf_enum_iter+0xc8>  // b.any
     2fc:	ldr	x0, [x29, #24]
     300:	add	x3, sp, #0x8
     304:	mov	x1, x22
     308:	mov	x2, xzr
     30c:	ldr	x8, [x0]
     310:	ldr	x8, [x8, #24]
     314:	blr	x8
     318:	mov	x0, x21
     31c:	mov	x1, x23
     320:	bl	0 <ctf_dynamic_type>
     324:	cbz	x0, 380 <ctf_enum_iter+0xec>
     328:	ldr	x21, [x0, #56]
     32c:	cbz	x21, 34c <ctf_enum_iter+0xb8>
     330:	ldr	x0, [x21, #16]
     334:	ldr	w1, [x21, #40]
     338:	mov	x2, x19
     33c:	blr	x20
     340:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     344:	ldr	x21, [x21, #8]
     348:	cbnz	x21, 330 <ctf_enum_iter+0x9c>
     34c:	mov	w0, wzr
     350:	b	368 <ctf_enum_iter+0xd4>
     354:	mov	w0, #0xffffffff            	// #-1
     358:	b	368 <ctf_enum_iter+0xd4>
     35c:	mov	w1, #0x3fc                 	// #1020
     360:	mov	x0, x21
     364:	bl	0 <ctf_set_errno>
     368:	ldp	x20, x19, [sp, #64]
     36c:	ldp	x22, x21, [sp, #48]
     370:	ldr	x23, [sp, #32]
     374:	ldp	x29, x30, [sp, #16]
     378:	add	sp, sp, #0x50
     37c:	ret
     380:	ldr	x8, [x29, #24]
     384:	ldr	w0, [x22, #4]
     388:	ldr	x23, [sp, #8]
     38c:	ldr	x8, [x8]
     390:	ldr	x8, [x8, #16]
     394:	blr	x8
     398:	cbz	w0, 368 <ctf_enum_iter+0xd4>
     39c:	mov	w21, w0
     3a0:	add	x22, x23, x22
     3a4:	ldr	x0, [x29, #24]
     3a8:	ldr	w1, [x22]
     3ac:	bl	0 <ctf_strptr>
     3b0:	ldr	w1, [x22, #4]
     3b4:	mov	x2, x19
     3b8:	blr	x20
     3bc:	cbnz	w0, 368 <ctf_enum_iter+0xd4>
     3c0:	subs	w21, w21, #0x1
     3c4:	add	x22, x22, #0x8
     3c8:	b.ne	3a4 <ctf_enum_iter+0x110>  // b.any
     3cc:	b	368 <ctf_enum_iter+0xd4>

00000000000003d0 <ctf_type_resolve_unsliced>:
     3d0:	stp	x29, x30, [sp, #-32]!
     3d4:	mov	x29, sp
     3d8:	str	x19, [sp, #16]
     3dc:	str	x0, [x29, #24]
     3e0:	bl	1a8 <ctf_type_resolve>
     3e4:	mov	x19, x0
     3e8:	cmn	x0, #0x1
     3ec:	b.eq	434 <ctf_type_resolve_unsliced+0x64>  // b.none
     3f0:	add	x0, x29, #0x18
     3f4:	mov	x1, x19
     3f8:	bl	0 <ctf_lookup_by_id>
     3fc:	cbz	x0, 430 <ctf_type_resolve_unsliced+0x60>
     400:	ldr	x8, [x29, #24]
     404:	ldr	w0, [x0, #4]
     408:	ldr	x8, [x8]
     40c:	ldr	x8, [x8]
     410:	blr	x8
     414:	cmp	w0, #0xe
     418:	b.ne	434 <ctf_type_resolve_unsliced+0x64>  // b.any
     41c:	ldr	x0, [x29, #24]
     420:	mov	x1, x19
     424:	bl	6c4 <ctf_type_reference>
     428:	mov	x19, x0
     42c:	b	434 <ctf_type_resolve_unsliced+0x64>
     430:	mov	x19, #0xffffffffffffffff    	// #-1
     434:	mov	x0, x19
     438:	ldr	x19, [sp, #16]
     43c:	ldp	x29, x30, [sp], #32
     440:	ret

0000000000000444 <ctf_type_iter>:
     444:	stp	x29, x30, [sp, #-64]!
     448:	stp	x24, x23, [sp, #16]
     44c:	stp	x22, x21, [sp, #32]
     450:	stp	x20, x19, [sp, #48]
     454:	ldr	x22, [x0, #480]
     458:	mov	x29, sp
     45c:	cbz	x22, 4fc <ctf_type_iter+0xb8>
     460:	ldr	w23, [x0, #552]
     464:	mov	x19, x2
     468:	mov	x20, x0
     46c:	mov	x21, x1
     470:	mov	w24, #0x1                   	// #1
     474:	mov	w8, w23
     478:	tbnz	w8, #1, 490 <ctf_type_iter+0x4c>
     47c:	ldr	x8, [x20, #440]
     480:	ldr	x9, [x20, #408]
     484:	ldr	w8, [x8, x24, lsl #2]
     488:	add	x8, x9, x8
     48c:	b	4b0 <ctf_type_iter+0x6c>
     490:	mov	x1, x24
     494:	tbz	w8, #0, 4a4 <ctf_type_iter+0x60>
     498:	ldr	w8, [x20, #544]
     49c:	add	w8, w8, #0x1
     4a0:	orr	x1, x24, x8
     4a4:	mov	x0, x20
     4a8:	bl	0 <ctf_dtd_lookup>
     4ac:	add	x8, x0, #0x18
     4b0:	ldr	x9, [x20]
     4b4:	ldr	w0, [x8, #4]
     4b8:	ldr	x9, [x9, #8]
     4bc:	blr	x9
     4c0:	cbz	w0, 4e4 <ctf_type_iter+0xa0>
     4c4:	mov	x0, x24
     4c8:	tbz	w23, #0, 4d8 <ctf_type_iter+0x94>
     4cc:	ldr	w8, [x20, #544]
     4d0:	add	w8, w8, #0x1
     4d4:	orr	x0, x24, x8
     4d8:	mov	x1, x19
     4dc:	blr	x21
     4e0:	cbnz	w0, 500 <ctf_type_iter+0xbc>
     4e4:	add	x24, x24, #0x1
     4e8:	cmp	x24, x22
     4ec:	b.hi	4fc <ctf_type_iter+0xb8>  // b.pmore
     4f0:	ldr	w8, [x20, #552]
     4f4:	tbnz	w8, #1, 490 <ctf_type_iter+0x4c>
     4f8:	b	47c <ctf_type_iter+0x38>
     4fc:	mov	w0, wzr
     500:	ldp	x20, x19, [sp, #48]
     504:	ldp	x22, x21, [sp, #32]
     508:	ldp	x24, x23, [sp, #16]
     50c:	ldp	x29, x30, [sp], #64
     510:	ret

0000000000000514 <ctf_type_iter_all>:
     514:	stp	x29, x30, [sp, #-80]!
     518:	stp	x24, x23, [sp, #32]
     51c:	stp	x22, x21, [sp, #48]
     520:	stp	x20, x19, [sp, #64]
     524:	ldr	x23, [x0, #480]
     528:	str	x25, [sp, #16]
     52c:	mov	x29, sp
     530:	cbz	x23, 5d8 <ctf_type_iter_all+0xc4>
     534:	ldr	w24, [x0, #552]
     538:	mov	x19, x2
     53c:	mov	x20, x0
     540:	mov	x21, x1
     544:	mov	w25, #0x1                   	// #1
     548:	mov	w8, w24
     54c:	tbnz	w8, #1, 564 <ctf_type_iter_all+0x50>
     550:	ldr	x8, [x20, #440]
     554:	ldr	x9, [x20, #408]
     558:	ldr	w8, [x8, x25, lsl #2]
     55c:	add	x8, x9, x8
     560:	b	584 <ctf_type_iter_all+0x70>
     564:	mov	x1, x25
     568:	tbz	w8, #0, 578 <ctf_type_iter_all+0x64>
     56c:	ldr	w8, [x20, #544]
     570:	add	w8, w8, #0x1
     574:	orr	x1, x25, x8
     578:	mov	x0, x20
     57c:	bl	0 <ctf_dtd_lookup>
     580:	add	x8, x0, #0x18
     584:	mov	x22, x25
     588:	tbz	w24, #0, 598 <ctf_type_iter_all+0x84>
     58c:	ldr	w9, [x20, #544]
     590:	add	w9, w9, #0x1
     594:	orr	x22, x25, x9
     598:	ldr	x9, [x20]
     59c:	ldr	w0, [x8, #4]
     5a0:	ldr	x9, [x9, #8]
     5a4:	blr	x9
     5a8:	cmp	w0, #0x0
     5ac:	cset	w1, ne  // ne = any
     5b0:	mov	x0, x22
     5b4:	mov	x2, x19
     5b8:	blr	x21
     5bc:	cbnz	w0, 5e0 <ctf_type_iter_all+0xcc>
     5c0:	add	x25, x25, #0x1
     5c4:	cmp	x25, x23
     5c8:	b.hi	5d8 <ctf_type_iter_all+0xc4>  // b.pmore
     5cc:	ldr	w8, [x20, #552]
     5d0:	tbnz	w8, #1, 564 <ctf_type_iter_all+0x50>
     5d4:	b	550 <ctf_type_iter_all+0x3c>
     5d8:	mov	w0, wzr
     5dc:	b	5e8 <ctf_type_iter_all+0xd4>
     5e0:	cmp	w0, #0x0
     5e4:	cset	w0, ne  // ne = any
     5e8:	ldp	x20, x19, [sp, #64]
     5ec:	ldp	x22, x21, [sp, #48]
     5f0:	ldp	x24, x23, [sp, #32]
     5f4:	ldr	x25, [sp, #16]
     5f8:	ldp	x29, x30, [sp], #80
     5fc:	ret

0000000000000600 <ctf_variable_iter>:
     600:	stp	x29, x30, [sp, #-64]!
     604:	stp	x22, x21, [sp, #32]
     608:	stp	x20, x19, [sp, #48]
     60c:	ldr	w8, [x0, #552]
     610:	mov	x19, x2
     614:	mov	x21, x0
     618:	mov	x20, x1
     61c:	str	x23, [sp, #16]
     620:	mov	x29, sp
     624:	tbz	w8, #0, 630 <ctf_variable_iter+0x30>
     628:	ldr	x9, [x21, #512]
     62c:	cbz	x9, 6ac <ctf_variable_iter+0xac>
     630:	tbnz	w8, #1, 684 <ctf_variable_iter+0x84>
     634:	ldr	x8, [x21, #472]
     638:	cbz	x8, 6a4 <ctf_variable_iter+0xa4>
     63c:	mov	x22, xzr
     640:	mov	x23, xzr
     644:	ldr	x8, [x21, #464]
     648:	mov	x0, x21
     64c:	ldr	w1, [x8, x22]
     650:	bl	0 <ctf_strptr>
     654:	ldr	x8, [x21, #464]
     658:	mov	x2, x19
     65c:	add	x8, x8, x22
     660:	ldr	w1, [x8, #4]
     664:	blr	x20
     668:	cbnz	w0, 6b0 <ctf_variable_iter+0xb0>
     66c:	ldr	x8, [x21, #472]
     670:	add	x23, x23, #0x1
     674:	add	x22, x22, #0x8
     678:	cmp	x23, x8
     67c:	b.cc	644 <ctf_variable_iter+0x44>  // b.lo, b.ul, b.last
     680:	b	6a4 <ctf_variable_iter+0xa4>
     684:	ldr	x21, [x21, #608]
     688:	cbz	x21, 6a4 <ctf_variable_iter+0xa4>
     68c:	ldp	x0, x1, [x21, #16]
     690:	mov	x2, x19
     694:	blr	x20
     698:	cbnz	w0, 6b0 <ctf_variable_iter+0xb0>
     69c:	ldr	x21, [x21, #8]
     6a0:	cbnz	x21, 68c <ctf_variable_iter+0x8c>
     6a4:	mov	w0, wzr
     6a8:	b	6b0 <ctf_variable_iter+0xb0>
     6ac:	mov	w0, #0x3f3                 	// #1011
     6b0:	ldp	x20, x19, [sp, #48]
     6b4:	ldp	x22, x21, [sp, #32]
     6b8:	ldr	x23, [sp, #16]
     6bc:	ldp	x29, x30, [sp], #64
     6c0:	ret

00000000000006c4 <ctf_type_reference>:
     6c4:	sub	sp, sp, #0x30
     6c8:	stp	x20, x19, [sp, #32]
     6cc:	mov	x20, x0
     6d0:	str	x0, [sp, #8]
     6d4:	add	x0, sp, #0x8
     6d8:	stp	x29, x30, [sp, #16]
     6dc:	add	x29, sp, #0x10
     6e0:	bl	0 <ctf_lookup_by_id>
     6e4:	cbz	x0, 714 <ctf_type_reference+0x50>
     6e8:	ldr	x8, [sp, #8]
     6ec:	mov	x19, x0
     6f0:	ldr	w0, [x0, #4]
     6f4:	ldr	x8, [x8]
     6f8:	ldr	x8, [x8]
     6fc:	blr	x8
     700:	sub	w8, w0, #0xa
     704:	cmp	w8, #0x4
     708:	b.cs	71c <ctf_type_reference+0x58>  // b.hs, b.nlast
     70c:	ldr	w0, [x19, #8]
     710:	b	760 <ctf_type_reference+0x9c>
     714:	mov	x0, #0xffffffffffffffff    	// #-1
     718:	b	760 <ctf_type_reference+0x9c>
     71c:	cmp	w0, #0xe
     720:	b.eq	73c <ctf_type_reference+0x78>  // b.none
     724:	cmp	w0, #0x3
     728:	b.eq	70c <ctf_type_reference+0x48>  // b.none
     72c:	mov	w1, #0x400                 	// #1024
     730:	mov	x0, x20
     734:	bl	0 <ctf_set_errno>
     738:	b	760 <ctf_type_reference+0x9c>
     73c:	ldr	x0, [sp, #8]
     740:	mov	x3, sp
     744:	mov	x1, x19
     748:	mov	x2, xzr
     74c:	ldr	x8, [x0]
     750:	ldr	x8, [x8, #24]
     754:	blr	x8
     758:	ldr	x8, [sp]
     75c:	ldr	w0, [x8, x19]
     760:	ldp	x20, x19, [sp, #32]
     764:	ldp	x29, x30, [sp, #16]
     768:	add	sp, sp, #0x30
     76c:	ret

0000000000000770 <ctf_lookup_by_rawname>:
     770:	stp	x29, x30, [sp, #-32]!
     774:	stp	x20, x19, [sp, #16]
     778:	mov	x29, sp
     77c:	mov	x19, x2
     780:	mov	x20, x0
     784:	bl	0 <ctf_name_table>
     788:	mov	x1, x0
     78c:	mov	x0, x20
     790:	mov	x2, x19
     794:	ldp	x20, x19, [sp, #16]
     798:	ldp	x29, x30, [sp], #32
     79c:	b	7a0 <ctf_lookup_by_rawhash>

00000000000007a0 <ctf_lookup_by_rawhash>:
     7a0:	ldrb	w9, [x0, #552]
     7a4:	tbnz	w9, #1, 7b8 <ctf_lookup_by_rawhash+0x18>
     7a8:	mov	x8, x0
     7ac:	ldr	x0, [x1]
     7b0:	mov	x1, x8
     7b4:	b	0 <ctf_hash_lookup_type>
     7b8:	ldr	x0, [x1, #8]
     7bc:	mov	x1, x2
     7c0:	b	0 <ctf_dynhash_lookup>

00000000000007c4 <ctf_type_aname>:
     7c4:	sub	sp, sp, #0xe0
     7c8:	stp	x20, x19, [sp, #208]
     7cc:	mov	x20, x1
     7d0:	mov	x19, x0
     7d4:	stp	x29, x30, [sp, #128]
     7d8:	stp	x28, x27, [sp, #144]
     7dc:	stp	x26, x25, [sp, #160]
     7e0:	stp	x24, x23, [sp, #176]
     7e4:	stp	x22, x21, [sp, #192]
     7e8:	add	x29, sp, #0x80
     7ec:	cbnz	x0, 7f8 <ctf_type_aname+0x34>
     7f0:	cmn	x20, #0x1
     7f4:	b.eq	830 <ctf_type_aname+0x6c>  // b.none
     7f8:	add	x0, sp, #0x18
     7fc:	add	x25, sp, #0x18
     800:	bl	0 <ctf_decl_init>
     804:	add	x0, sp, #0x18
     808:	mov	x1, x19
     80c:	mov	x2, x20
     810:	bl	0 <ctf_decl_push>
     814:	ldr	w8, [sp, #120]
     818:	cbz	w8, 858 <ctf_type_aname+0x94>
     81c:	add	x0, sp, #0x18
     820:	bl	0 <ctf_decl_fini>
     824:	ldr	w1, [sp, #120]
     828:	mov	x0, x19
     82c:	bl	0 <ctf_set_errno>
     830:	mov	x19, xzr
     834:	mov	x0, x19
     838:	ldp	x20, x19, [sp, #208]
     83c:	ldp	x22, x21, [sp, #192]
     840:	ldp	x24, x23, [sp, #176]
     844:	ldp	x26, x25, [sp, #160]
     848:	ldp	x28, x27, [sp, #144]
     84c:	ldp	x29, x30, [sp, #128]
     850:	add	sp, sp, #0xe0
     854:	ret
     858:	ldp	w8, w9, [sp, #92]
     85c:	mov	w10, #0xffffffff            	// #-1
     860:	mov	w11, #0x2                   	// #2
     864:	adrp	x21, 0 <ctf_type_isparent>
     868:	cmp	w8, #0x1
     86c:	csinc	x10, x10, xzr, le
     870:	cmp	w9, #0x2
     874:	csel	x9, x11, x10, gt
     878:	adrp	x22, 0 <ctf_type_isparent>
     87c:	adrp	x24, 0 <ctf_type_isparent>
     880:	adrp	x23, 0 <ctf_type_isparent>
     884:	adrp	x27, 0 <ctf_type_isparent>
     888:	str	x9, [sp, #8]
     88c:	csinv	w9, w11, wzr, gt
     890:	cmp	w8, #0x1
     894:	mov	x20, xzr
     898:	mov	w28, #0x3                   	// #3
     89c:	add	x21, x21, #0x0
     8a0:	add	x22, x22, #0x0
     8a4:	add	x24, x24, #0x0
     8a8:	add	x23, x23, #0x0
     8ac:	add	x27, x27, #0x0
     8b0:	csinc	w26, w9, wzr, le
     8b4:	add	x8, x25, x20, lsl #4
     8b8:	ldr	x25, [x8, #8]
     8bc:	cbz	x25, 9e8 <ctf_type_aname+0x224>
     8c0:	str	x19, [sp, #16]
     8c4:	ldr	x1, [x25, #16]
     8c8:	add	x0, sp, #0x10
     8cc:	bl	0 <ctf_lookup_by_id>
     8d0:	ldr	x8, [sp, #16]
     8d4:	ldr	w1, [x0]
     8d8:	mov	x0, x8
     8dc:	bl	0 <ctf_strptr>
     8e0:	sub	w8, w28, #0x3
     8e4:	cmp	w8, #0x2
     8e8:	mov	x28, x0
     8ec:	b.cc	8fc <ctf_type_aname+0x138>  // b.lo, b.ul, b.last
     8f0:	add	x0, sp, #0x18
     8f4:	mov	x1, x21
     8f8:	bl	0 <ctf_decl_sprintf>
     8fc:	cmp	x20, w26, uxtw
     900:	b.ne	914 <ctf_type_aname+0x150>  // b.any
     904:	add	x0, sp, #0x18
     908:	mov	x1, x22
     90c:	bl	0 <ctf_decl_sprintf>
     910:	mov	w26, #0xffffffff            	// #-1
     914:	ldr	w8, [x25, #24]
     918:	sub	w8, w8, #0x1
     91c:	cmp	w8, #0xc
     920:	b.hi	9dc <ctf_type_aname+0x218>  // b.pmore
     924:	adr	x9, 934 <ctf_type_aname+0x170>
     928:	ldrb	w10, [x24, x8]
     92c:	add	x9, x9, x10, lsl #2
     930:	br	x9
     934:	add	x0, sp, #0x18
     938:	mov	x1, x23
     93c:	b	9a0 <ctf_type_aname+0x1dc>
     940:	add	x0, sp, #0x18
     944:	mov	x1, x27
     948:	b	9a0 <ctf_type_aname+0x1dc>
     94c:	adrp	x1, 0 <ctf_type_isparent>
     950:	add	x0, sp, #0x18
     954:	add	x1, x1, #0x0
     958:	b	9d8 <ctf_type_aname+0x214>
     95c:	ldr	w2, [x25, #28]
     960:	adrp	x1, 0 <ctf_type_isparent>
     964:	add	x0, sp, #0x18
     968:	add	x1, x1, #0x0
     96c:	bl	0 <ctf_decl_sprintf>
     970:	b	9dc <ctf_type_aname+0x218>
     974:	adrp	x1, 0 <ctf_type_isparent>
     978:	add	x0, sp, #0x18
     97c:	add	x1, x1, #0x0
     980:	b	9d8 <ctf_type_aname+0x214>
     984:	adrp	x1, 0 <ctf_type_isparent>
     988:	add	x0, sp, #0x18
     98c:	add	x1, x1, #0x0
     990:	b	9a0 <ctf_type_aname+0x1dc>
     994:	adrp	x1, 0 <ctf_type_isparent>
     998:	add	x0, sp, #0x18
     99c:	add	x1, x1, #0x0
     9a0:	mov	x2, x28
     9a4:	bl	0 <ctf_decl_sprintf>
     9a8:	b	9dc <ctf_type_aname+0x218>
     9ac:	adrp	x1, 0 <ctf_type_isparent>
     9b0:	add	x0, sp, #0x18
     9b4:	add	x1, x1, #0x0
     9b8:	b	9d8 <ctf_type_aname+0x214>
     9bc:	adrp	x1, 0 <ctf_type_isparent>
     9c0:	add	x0, sp, #0x18
     9c4:	add	x1, x1, #0x0
     9c8:	b	9d8 <ctf_type_aname+0x214>
     9cc:	adrp	x1, 0 <ctf_type_isparent>
     9d0:	add	x0, sp, #0x18
     9d4:	add	x1, x1, #0x0
     9d8:	bl	0 <ctf_decl_sprintf>
     9dc:	ldr	w28, [x25, #24]
     9e0:	ldr	x25, [x25, #8]
     9e4:	cbnz	x25, 8c0 <ctf_type_aname+0xfc>
     9e8:	ldr	x8, [sp, #8]
     9ec:	cmp	x8, x20
     9f0:	b.ne	a04 <ctf_type_aname+0x240>  // b.any
     9f4:	adrp	x1, 0 <ctf_type_isparent>
     9f8:	add	x0, sp, #0x18
     9fc:	add	x1, x1, #0x0
     a00:	bl	0 <ctf_decl_sprintf>
     a04:	add	x20, x20, #0x1
     a08:	cmp	x20, #0x4
     a0c:	add	x25, sp, #0x18
     a10:	b.ne	8b4 <ctf_type_aname+0xf0>  // b.any
     a14:	ldr	w8, [sp, #124]
     a18:	cbz	w8, a28 <ctf_type_aname+0x264>
     a1c:	mov	w1, #0xc                   	// #12
     a20:	mov	x0, x19
     a24:	bl	0 <ctf_set_errno>
     a28:	add	x0, sp, #0x18
     a2c:	bl	0 <ctf_decl_buf>
     a30:	mov	x19, x0
     a34:	add	x0, sp, #0x18
     a38:	bl	0 <ctf_decl_fini>
     a3c:	b	834 <ctf_type_aname+0x70>

0000000000000a40 <ctf_type_lname>:
     a40:	stp	x29, x30, [sp, #-64]!
     a44:	str	x23, [sp, #16]
     a48:	stp	x22, x21, [sp, #32]
     a4c:	stp	x20, x19, [sp, #48]
     a50:	mov	x29, sp
     a54:	mov	x21, x3
     a58:	mov	x22, x2
     a5c:	mov	x19, x0
     a60:	bl	7c4 <ctf_type_aname>
     a64:	cbz	x0, aac <ctf_type_lname+0x6c>
     a68:	mov	x23, x0
     a6c:	bl	0 <strlen>
     a70:	adrp	x2, 0 <ctf_type_isparent>
     a74:	mov	x20, x0
     a78:	add	x2, x2, #0x0
     a7c:	mov	x0, x22
     a80:	mov	x1, x21
     a84:	mov	x3, x23
     a88:	bl	0 <snprintf>
     a8c:	mov	x0, x23
     a90:	bl	0 <free>
     a94:	cmp	x20, x21
     a98:	b.cc	ab0 <ctf_type_lname+0x70>  // b.lo, b.ul, b.last
     a9c:	mov	w1, #0x401                 	// #1025
     aa0:	mov	x0, x19
     aa4:	bl	0 <ctf_set_errno>
     aa8:	b	ab0 <ctf_type_lname+0x70>
     aac:	mov	x20, #0xffffffffffffffff    	// #-1
     ab0:	mov	x0, x20
     ab4:	ldp	x20, x19, [sp, #48]
     ab8:	ldp	x22, x21, [sp, #32]
     abc:	ldr	x23, [sp, #16]
     ac0:	ldp	x29, x30, [sp], #64
     ac4:	ret

0000000000000ac8 <ctf_type_name>:
     ac8:	stp	x29, x30, [sp, #-32]!
     acc:	stp	x20, x19, [sp, #16]
     ad0:	mov	x29, sp
     ad4:	mov	x19, x3
     ad8:	mov	x20, x2
     adc:	bl	a40 <ctf_type_lname>
     ae0:	cmp	x0, x19
     ae4:	mov	x8, #0xffffffffffffffff    	// #-1
     ae8:	ccmp	x0, x8, #0x4, cc  // cc = lo, ul, last
     aec:	csel	x0, x20, xzr, gt
     af0:	ldp	x20, x19, [sp, #16]
     af4:	ldp	x29, x30, [sp], #32
     af8:	ret

0000000000000afc <ctf_type_aname_raw>:
     afc:	stp	x29, x30, [sp, #-32]!
     b00:	mov	x29, sp
     b04:	str	x0, [x29, #24]
     b08:	add	x0, x29, #0x18
     b0c:	str	x19, [sp, #16]
     b10:	bl	0 <ctf_lookup_by_id>
     b14:	cbz	x0, b3c <ctf_type_aname_raw+0x40>
     b18:	mov	x19, x0
     b1c:	ldr	x0, [x29, #24]
     b20:	ldr	w1, [x19]
     b24:	bl	0 <ctf_strraw>
     b28:	cbz	x0, b3c <ctf_type_aname_raw+0x40>
     b2c:	ldr	x0, [x29, #24]
     b30:	ldr	w1, [x19]
     b34:	bl	0 <ctf_strraw>
     b38:	bl	0 <strdup>
     b3c:	ldr	x19, [sp, #16]
     b40:	ldp	x29, x30, [sp], #32
     b44:	ret

0000000000000b48 <ctf_type_size>:
     b48:	sub	sp, sp, #0x40
     b4c:	stp	x29, x30, [sp, #32]
     b50:	add	x29, sp, #0x20
     b54:	stp	x20, x19, [sp, #48]
     b58:	stur	x0, [x29, #-8]
     b5c:	bl	1a8 <ctf_type_resolve>
     b60:	cmn	x0, #0x1
     b64:	b.eq	c54 <ctf_type_size+0x10c>  // b.none
     b68:	mov	x19, x0
     b6c:	sub	x0, x29, #0x8
     b70:	mov	x1, x19
     b74:	bl	0 <ctf_lookup_by_id>
     b78:	cbz	x0, c20 <ctf_type_size+0xd8>
     b7c:	ldur	x8, [x29, #-8]
     b80:	mov	x20, x0
     b84:	ldr	w0, [x0, #4]
     b88:	ldr	x8, [x8]
     b8c:	ldr	x8, [x8]
     b90:	blr	x8
     b94:	sub	w8, w0, #0x3
     b98:	cmp	w8, #0x5
     b9c:	b.hi	c28 <ctf_type_size+0xe0>  // b.pmore
     ba0:	adrp	x9, 0 <ctf_type_isparent>
     ba4:	add	x9, x9, #0x0
     ba8:	adr	x10, bbc <ctf_type_size+0x74>
     bac:	ldrb	w11, [x9, x8]
     bb0:	add	x10, x10, x11, lsl #2
     bb4:	mov	x0, xzr
     bb8:	br	x10
     bbc:	ldur	x8, [x29, #-8]
     bc0:	ldr	x8, [x8, #488]
     bc4:	ldr	x0, [x8, #16]
     bc8:	b	c54 <ctf_type_size+0x10c>
     bcc:	ldur	x0, [x29, #-8]
     bd0:	mov	x1, x20
     bd4:	mov	x2, xzr
     bd8:	mov	x3, xzr
     bdc:	ldr	x8, [x0]
     be0:	ldr	x8, [x8, #24]
     be4:	blr	x8
     be8:	cmp	x0, #0x0
     bec:	b.gt	c54 <ctf_type_size+0x10c>
     bf0:	ldur	x0, [x29, #-8]
     bf4:	mov	x2, sp
     bf8:	mov	x1, x19
     bfc:	bl	c64 <ctf_array_info>
     c00:	tbnz	w0, #31, c20 <ctf_type_size+0xd8>
     c04:	ldur	x0, [x29, #-8]
     c08:	ldr	x1, [sp]
     c0c:	bl	b48 <ctf_type_size>
     c10:	tbnz	x0, #63, c20 <ctf_type_size+0xd8>
     c14:	ldr	w8, [sp, #16]
     c18:	mul	x0, x0, x8
     c1c:	b	c54 <ctf_type_size+0x10c>
     c20:	mov	x0, #0xffffffffffffffff    	// #-1
     c24:	b	c54 <ctf_type_size+0x10c>
     c28:	ldur	x0, [x29, #-8]
     c2c:	mov	x1, x20
     c30:	mov	x2, xzr
     c34:	mov	x3, xzr
     c38:	ldr	x8, [x0]
     c3c:	ldr	x8, [x8, #24]
     c40:	blr	x8
     c44:	b	c54 <ctf_type_size+0x10c>
     c48:	ldur	x8, [x29, #-8]
     c4c:	ldr	x8, [x8, #488]
     c50:	ldr	x0, [x8, #40]
     c54:	ldp	x20, x19, [sp, #48]
     c58:	ldp	x29, x30, [sp, #32]
     c5c:	add	sp, sp, #0x40
     c60:	ret

0000000000000c64 <ctf_array_info>:
     c64:	sub	sp, sp, #0x40
     c68:	stp	x22, x21, [sp, #32]
     c6c:	mov	x21, x0
     c70:	str	x0, [sp, #8]
     c74:	add	x0, sp, #0x8
     c78:	stp	x29, x30, [sp, #16]
     c7c:	stp	x20, x19, [sp, #48]
     c80:	add	x29, sp, #0x10
     c84:	mov	x19, x2
     c88:	mov	x22, x1
     c8c:	bl	0 <ctf_lookup_by_id>
     c90:	cbz	x0, ce0 <ctf_array_info+0x7c>
     c94:	ldr	x8, [sp, #8]
     c98:	mov	x20, x0
     c9c:	ldr	w0, [x0, #4]
     ca0:	ldr	x8, [x8]
     ca4:	ldr	x8, [x8]
     ca8:	blr	x8
     cac:	cmp	w0, #0x4
     cb0:	b.ne	ce8 <ctf_array_info+0x84>  // b.any
     cb4:	mov	x0, x21
     cb8:	mov	x1, x22
     cbc:	bl	0 <ctf_dynamic_type>
     cc0:	cbz	x0, cf8 <ctf_array_info+0x94>
     cc4:	mov	x8, x0
     cc8:	ldr	x9, [x8, #64]
     ccc:	ldr	q0, [x8, #48]
     cd0:	mov	w0, wzr
     cd4:	str	x9, [x19, #16]
     cd8:	str	q0, [x19]
     cdc:	b	d34 <ctf_array_info+0xd0>
     ce0:	mov	w0, #0xffffffff            	// #-1
     ce4:	b	d34 <ctf_array_info+0xd0>
     ce8:	mov	w1, #0x3ff                 	// #1023
     cec:	mov	x0, x21
     cf0:	bl	0 <ctf_set_errno>
     cf4:	b	d34 <ctf_array_info+0xd0>
     cf8:	ldr	x0, [sp, #8]
     cfc:	mov	x3, sp
     d00:	mov	x1, x20
     d04:	mov	x2, xzr
     d08:	ldr	x8, [x0]
     d0c:	ldr	x8, [x8, #24]
     d10:	blr	x8
     d14:	ldr	x8, [sp]
     d18:	mov	w0, wzr
     d1c:	add	x8, x8, x20
     d20:	ldr	d0, [x8]
     d24:	uxtl	v0.2d, v0.2s
     d28:	str	q0, [x19]
     d2c:	ldr	w8, [x8, #8]
     d30:	str	w8, [x19, #16]
     d34:	ldp	x20, x19, [sp, #48]
     d38:	ldp	x22, x21, [sp, #32]
     d3c:	ldp	x29, x30, [sp, #16]
     d40:	add	sp, sp, #0x40
     d44:	ret

0000000000000d48 <ctf_type_align>:
     d48:	sub	sp, sp, #0x60
     d4c:	stp	x29, x30, [sp, #48]
     d50:	add	x29, sp, #0x30
     d54:	stp	x22, x21, [sp, #64]
     d58:	stp	x20, x19, [sp, #80]
     d5c:	mov	x22, x0
     d60:	stur	x0, [x29, #-8]
     d64:	bl	1a8 <ctf_type_resolve>
     d68:	mov	x19, x0
     d6c:	cmn	x0, #0x1
     d70:	b.eq	e64 <ctf_type_align+0x11c>  // b.none
     d74:	sub	x0, x29, #0x8
     d78:	mov	x1, x19
     d7c:	bl	0 <ctf_lookup_by_id>
     d80:	cbz	x0, e60 <ctf_type_align+0x118>
     d84:	ldur	x8, [x29, #-8]
     d88:	mov	x21, x0
     d8c:	ldr	w0, [x0, #4]
     d90:	ldr	x8, [x8]
     d94:	ldr	x8, [x8]
     d98:	blr	x8
     d9c:	sub	w8, w0, #0x3
     da0:	cmp	w8, #0x5
     da4:	b.hi	e18 <ctf_type_align+0xd0>  // b.pmore
     da8:	adrp	x9, 0 <ctf_type_isparent>
     dac:	add	x9, x9, #0x0
     db0:	adr	x10, dc0 <ctf_type_align+0x78>
     db4:	ldrb	w11, [x9, x8]
     db8:	add	x10, x10, x11, lsl #2
     dbc:	br	x10
     dc0:	ldur	x8, [x29, #-8]
     dc4:	ldr	x8, [x8, #488]
     dc8:	ldr	x19, [x8, #16]
     dcc:	b	e64 <ctf_type_align+0x11c>
     dd0:	mov	w20, w0
     dd4:	mov	x0, x22
     dd8:	mov	x1, x19
     ddc:	bl	0 <ctf_dynamic_type>
     de0:	cbz	x0, e8c <ctf_type_align+0x144>
     de4:	ldr	x21, [x0, #56]
     de8:	cbz	x21, f44 <ctf_type_align+0x1fc>
     dec:	mov	x19, xzr
     df0:	ldur	x0, [x29, #-8]
     df4:	ldr	x1, [x21, #24]
     df8:	bl	d48 <ctf_type_align>
     dfc:	cmp	x19, x0
     e00:	csel	x19, x19, x0, hi  // hi = pmore
     e04:	cmp	w20, #0x6
     e08:	b.eq	e64 <ctf_type_align+0x11c>  // b.none
     e0c:	ldr	x21, [x21, #8]
     e10:	cbnz	x21, df0 <ctf_type_align+0xa8>
     e14:	b	e64 <ctf_type_align+0x11c>
     e18:	ldur	x0, [x29, #-8]
     e1c:	mov	x1, x21
     e20:	mov	x2, xzr
     e24:	mov	x3, xzr
     e28:	ldr	x8, [x0]
     e2c:	ldr	x8, [x8, #24]
     e30:	blr	x8
     e34:	b	e58 <ctf_type_align+0x110>
     e38:	ldur	x0, [x29, #-8]
     e3c:	add	x2, sp, #0x10
     e40:	mov	x1, x19
     e44:	bl	c64 <ctf_array_info>
     e48:	tbnz	w0, #31, e60 <ctf_type_align+0x118>
     e4c:	ldur	x0, [x29, #-8]
     e50:	ldr	x1, [sp, #16]
     e54:	bl	d48 <ctf_type_align>
     e58:	mov	x19, x0
     e5c:	b	e64 <ctf_type_align+0x11c>
     e60:	mov	x19, #0xffffffffffffffff    	// #-1
     e64:	mov	x0, x19
     e68:	ldp	x20, x19, [sp, #80]
     e6c:	ldp	x22, x21, [sp, #64]
     e70:	ldp	x29, x30, [sp, #48]
     e74:	add	sp, sp, #0x60
     e78:	ret
     e7c:	ldur	x8, [x29, #-8]
     e80:	ldr	x8, [x8, #488]
     e84:	ldr	x19, [x8, #40]
     e88:	b	e64 <ctf_type_align+0x11c>
     e8c:	ldur	x8, [x29, #-8]
     e90:	ldr	w0, [x21, #4]
     e94:	ldr	x8, [x8]
     e98:	ldr	x8, [x8, #16]
     e9c:	blr	x8
     ea0:	ldur	x8, [x29, #-8]
     ea4:	mov	w19, w0
     ea8:	add	x2, sp, #0x10
     eac:	add	x3, sp, #0x8
     eb0:	ldr	x9, [x8]
     eb4:	mov	x0, x8
     eb8:	mov	x1, x21
     ebc:	ldr	x9, [x9, #24]
     ec0:	blr	x9
     ec4:	ldp	x8, x9, [sp, #8]
     ec8:	cmp	w19, #0x0
     ecc:	cset	w10, ne  // ne = any
     ed0:	cmp	w20, #0x6
     ed4:	csel	w20, w10, w19, eq  // eq = none
     ed8:	mov	w10, #0x1fffffff            	// #536870911
     edc:	cmp	x9, x10
     ee0:	b.gt	f14 <ctf_type_align+0x1cc>
     ee4:	cbz	w20, f44 <ctf_type_align+0x1fc>
     ee8:	add	x8, x8, x21
     eec:	mov	x19, xzr
     ef0:	add	x21, x8, #0x8
     ef4:	ldur	x0, [x29, #-8]
     ef8:	ldr	w1, [x21], #12
     efc:	bl	d48 <ctf_type_align>
     f00:	cmp	x19, x0
     f04:	csel	x19, x19, x0, hi  // hi = pmore
     f08:	subs	w20, w20, #0x1
     f0c:	b.ne	ef4 <ctf_type_align+0x1ac>  // b.any
     f10:	b	e64 <ctf_type_align+0x11c>
     f14:	cbz	w20, f44 <ctf_type_align+0x1fc>
     f18:	add	x8, x8, x21
     f1c:	mov	x19, xzr
     f20:	add	x21, x8, #0x8
     f24:	ldur	x0, [x29, #-8]
     f28:	ldr	w1, [x21], #16
     f2c:	bl	d48 <ctf_type_align>
     f30:	cmp	x19, x0
     f34:	csel	x19, x19, x0, hi  // hi = pmore
     f38:	subs	w20, w20, #0x1
     f3c:	b.ne	f24 <ctf_type_align+0x1dc>  // b.any
     f40:	b	e64 <ctf_type_align+0x11c>
     f44:	mov	x19, xzr
     f48:	b	e64 <ctf_type_align+0x11c>

0000000000000f4c <ctf_type_kind_unsliced>:
     f4c:	sub	sp, sp, #0x20
     f50:	str	x0, [sp, #8]
     f54:	add	x0, sp, #0x8
     f58:	stp	x29, x30, [sp, #16]
     f5c:	add	x29, sp, #0x10
     f60:	bl	0 <ctf_lookup_by_id>
     f64:	cbz	x0, f80 <ctf_type_kind_unsliced+0x34>
     f68:	ldr	x8, [sp, #8]
     f6c:	ldr	w0, [x0, #4]
     f70:	ldr	x8, [x8]
     f74:	ldr	x8, [x8]
     f78:	blr	x8
     f7c:	b	f84 <ctf_type_kind_unsliced+0x38>
     f80:	mov	w0, #0xffffffff            	// #-1
     f84:	ldp	x29, x30, [sp, #16]
     f88:	add	sp, sp, #0x20
     f8c:	ret

0000000000000f90 <ctf_type_kind>:
     f90:	stp	x29, x30, [sp, #-32]!
     f94:	stp	x20, x19, [sp, #16]
     f98:	mov	x29, sp
     f9c:	mov	x20, x1
     fa0:	mov	x19, x0
     fa4:	bl	f4c <ctf_type_kind_unsliced>
     fa8:	tbnz	w0, #31, fdc <ctf_type_kind+0x4c>
     fac:	cmp	w0, #0xe
     fb0:	b.ne	fe0 <ctf_type_kind+0x50>  // b.any
     fb4:	mov	x0, x19
     fb8:	mov	x1, x20
     fbc:	bl	6c4 <ctf_type_reference>
     fc0:	cmn	x0, #0x1
     fc4:	b.eq	fe0 <ctf_type_kind+0x50>  // b.none
     fc8:	mov	x1, x0
     fcc:	mov	x0, x19
     fd0:	ldp	x20, x19, [sp, #16]
     fd4:	ldp	x29, x30, [sp], #32
     fd8:	b	f4c <ctf_type_kind_unsliced>
     fdc:	mov	w0, #0xffffffff            	// #-1
     fe0:	ldp	x20, x19, [sp, #16]
     fe4:	ldp	x29, x30, [sp], #32
     fe8:	ret

0000000000000fec <ctf_type_pointer>:
     fec:	sub	sp, sp, #0x30
     ff0:	stp	x20, x19, [sp, #32]
     ff4:	mov	x19, x0
     ff8:	str	x0, [sp, #8]
     ffc:	add	x0, sp, #0x8
    1000:	stp	x29, x30, [sp, #16]
    1004:	add	x29, sp, #0x10
    1008:	mov	x20, x1
    100c:	bl	0 <ctf_lookup_by_id>
    1010:	cbz	x0, 1044 <ctf_type_pointer+0x58>
    1014:	ldr	x0, [sp, #8]
    1018:	ldr	w9, [x0, #544]
    101c:	ldr	x8, [x0, #448]
    1020:	and	x10, x9, x20
    1024:	ldr	w8, [x8, x10, lsl #2]
    1028:	cbz	w8, 104c <ctf_type_pointer+0x60>
    102c:	ldrb	w10, [x0, #552]
    1030:	add	w9, w9, #0x1
    1034:	sbfx	w10, w10, #0, #1
    1038:	and	w9, w10, w9
    103c:	orr	x0, x9, x8
    1040:	b	10ac <ctf_type_pointer+0xc0>
    1044:	mov	x0, #0xffffffffffffffff    	// #-1
    1048:	b	10ac <ctf_type_pointer+0xc0>
    104c:	mov	x1, x20
    1050:	bl	1a8 <ctf_type_resolve>
    1054:	cmn	x0, #0x1
    1058:	b.eq	10a0 <ctf_type_pointer+0xb4>  // b.none
    105c:	mov	x20, x0
    1060:	add	x0, sp, #0x8
    1064:	mov	x1, x20
    1068:	bl	0 <ctf_lookup_by_id>
    106c:	cbz	x0, 10a0 <ctf_type_pointer+0xb4>
    1070:	ldr	x8, [sp, #8]
    1074:	ldr	w10, [x8, #544]
    1078:	ldr	x9, [x8, #448]
    107c:	and	x11, x20, x10
    1080:	ldr	w9, [x9, x11, lsl #2]
    1084:	cbz	w9, 10a0 <ctf_type_pointer+0xb4>
    1088:	ldrb	w8, [x8, #552]
    108c:	add	w10, w10, #0x1
    1090:	sbfx	w8, w8, #0, #1
    1094:	and	w8, w8, w10
    1098:	orr	x0, x8, x9
    109c:	b	10ac <ctf_type_pointer+0xc0>
    10a0:	mov	w1, #0x402                 	// #1026
    10a4:	mov	x0, x19
    10a8:	bl	0 <ctf_set_errno>
    10ac:	ldp	x20, x19, [sp, #32]
    10b0:	ldp	x29, x30, [sp, #16]
    10b4:	add	sp, sp, #0x30
    10b8:	ret

00000000000010bc <ctf_type_encoding>:
    10bc:	sub	sp, sp, #0x50
    10c0:	stp	x29, x30, [sp, #32]
    10c4:	add	x29, sp, #0x20
    10c8:	stp	x20, x19, [sp, #64]
    10cc:	mov	x20, x0
    10d0:	stur	x0, [x29, #-8]
    10d4:	sub	x0, x29, #0x8
    10d8:	stp	x22, x21, [sp, #48]
    10dc:	mov	x19, x2
    10e0:	mov	x22, x1
    10e4:	bl	0 <ctf_lookup_by_id>
    10e8:	cbz	x0, 113c <ctf_type_encoding+0x80>
    10ec:	mov	x21, x0
    10f0:	mov	x0, x20
    10f4:	mov	x1, x22
    10f8:	bl	0 <ctf_dynamic_type>
    10fc:	ldur	x8, [x29, #-8]
    1100:	ldr	x9, [x8]
    1104:	cbz	x0, 1144 <ctf_type_encoding+0x88>
    1108:	mov	x22, x0
    110c:	ldr	x8, [x9]
    1110:	ldr	w0, [x21, #4]
    1114:	blr	x8
    1118:	sub	w8, w0, #0x1
    111c:	cmp	w8, #0x2
    1120:	b.cs	11ac <ctf_type_encoding+0xf0>  // b.hs, b.nlast
    1124:	ldr	w8, [x22, #56]
    1128:	ldr	x9, [x22, #48]
    112c:	mov	w0, wzr
    1130:	str	w8, [x19, #8]
    1134:	str	x9, [x19]
    1138:	b	1224 <ctf_type_encoding+0x168>
    113c:	mov	w0, #0xffffffff            	// #-1
    1140:	b	1224 <ctf_type_encoding+0x168>
    1144:	ldr	x9, [x9, #24]
    1148:	add	x3, sp, #0x10
    114c:	mov	x0, x8
    1150:	mov	x1, x21
    1154:	mov	x2, xzr
    1158:	blr	x9
    115c:	ldur	x8, [x29, #-8]
    1160:	ldr	w0, [x21, #4]
    1164:	ldr	x8, [x8]
    1168:	ldr	x8, [x8]
    116c:	blr	x8
    1170:	cmp	w0, #0xe
    1174:	b.eq	11ec <ctf_type_encoding+0x130>  // b.none
    1178:	cmp	w0, #0x2
    117c:	b.eq	1188 <ctf_type_encoding+0xcc>  // b.none
    1180:	cmp	w0, #0x1
    1184:	b.ne	11dc <ctf_type_encoding+0x120>  // b.any
    1188:	ldr	x8, [sp, #16]
    118c:	mov	w0, wzr
    1190:	ldr	w8, [x8, x21]
    1194:	lsr	w9, w8, #24
    1198:	ubfx	w10, w8, #16, #8
    119c:	and	w8, w8, #0xffff
    11a0:	stp	w9, w10, [x19]
    11a4:	str	w8, [x19, #8]
    11a8:	b	1224 <ctf_type_encoding+0x168>
    11ac:	cmp	w0, #0xe
    11b0:	b.ne	11dc <ctf_type_encoding+0x120>  // b.any
    11b4:	ldur	x0, [x29, #-8]
    11b8:	ldr	w1, [x22, #48]
    11bc:	mov	x2, sp
    11c0:	bl	10bc <ctf_type_encoding>
    11c4:	ldr	w8, [sp]
    11c8:	mov	w0, wzr
    11cc:	str	w8, [x19]
    11d0:	ldrh	w8, [x22, #52]
    11d4:	ldrh	w9, [x22, #54]
    11d8:	b	1218 <ctf_type_encoding+0x15c>
    11dc:	mov	w1, #0x3fe                 	// #1022
    11e0:	mov	x0, x20
    11e4:	bl	0 <ctf_set_errno>
    11e8:	b	1224 <ctf_type_encoding+0x168>
    11ec:	ldr	x8, [sp, #16]
    11f0:	ldur	x0, [x29, #-8]
    11f4:	mov	x2, sp
    11f8:	add	x20, x8, x21
    11fc:	ldr	w1, [x20]
    1200:	bl	10bc <ctf_type_encoding>
    1204:	ldr	w8, [sp]
    1208:	mov	w0, wzr
    120c:	str	w8, [x19]
    1210:	ldrh	w8, [x20, #4]
    1214:	ldrh	w9, [x20, #6]
    1218:	fmov	s0, w8
    121c:	mov	v0.s[1], w9
    1220:	stur	d0, [x19, #4]
    1224:	ldp	x20, x19, [sp, #64]
    1228:	ldp	x22, x21, [sp, #48]
    122c:	ldp	x29, x30, [sp, #32]
    1230:	add	sp, sp, #0x50
    1234:	ret

0000000000001238 <ctf_type_cmp>:
    1238:	cmp	x1, x3
    123c:	mov	x8, x0
    1240:	cset	w9, hi  // hi = pmore
    1244:	csinv	w0, w9, wzr, cs  // cs = hs, nlast
    1248:	cmp	x8, x2
    124c:	b.eq	1294 <ctf_type_cmp+0x5c>  // b.none
    1250:	ldr	w9, [x8, #544]
    1254:	cmp	x9, x1
    1258:	b.cc	1268 <ctf_type_cmp+0x30>  // b.lo, b.ul, b.last
    125c:	ldr	x9, [x8, #512]
    1260:	cmp	x9, #0x0
    1264:	csel	x8, x8, x9, eq  // eq = none
    1268:	ldr	w9, [x2, #544]
    126c:	cmp	x9, x3
    1270:	b.cc	1280 <ctf_type_cmp+0x48>  // b.lo, b.ul, b.last
    1274:	ldr	x9, [x2, #512]
    1278:	cmp	x9, #0x0
    127c:	csel	x2, x2, x9, eq  // eq = none
    1280:	cmp	x8, x2
    1284:	b.cs	1290 <ctf_type_cmp+0x58>  // b.hs, b.nlast
    1288:	mov	w0, #0xffffffff            	// #-1
    128c:	ret
    1290:	csinc	w0, w0, wzr, ls  // ls = plast
    1294:	ret

0000000000001298 <ctf_type_compat>:
    1298:	sub	sp, sp, #0x90
    129c:	stp	x29, x30, [sp, #64]
    12a0:	add	x29, sp, #0x40
    12a4:	str	x25, [sp, #80]
    12a8:	stp	x24, x23, [sp, #96]
    12ac:	stp	x22, x21, [sp, #112]
    12b0:	stp	x20, x19, [sp, #128]
    12b4:	mov	x19, x3
    12b8:	mov	x21, x2
    12bc:	mov	x20, x1
    12c0:	mov	x22, x0
    12c4:	str	x0, [x29, #24]
    12c8:	stur	x2, [x29, #-8]
    12cc:	bl	1238 <ctf_type_cmp>
    12d0:	cbz	w0, 1394 <ctf_type_compat+0xfc>
    12d4:	mov	x0, x22
    12d8:	mov	x1, x20
    12dc:	bl	1a8 <ctf_type_resolve>
    12e0:	mov	x20, x0
    12e4:	mov	x0, x22
    12e8:	mov	x1, x20
    12ec:	bl	f90 <ctf_type_kind>
    12f0:	mov	w22, w0
    12f4:	mov	x0, x21
    12f8:	mov	x1, x19
    12fc:	bl	1a8 <ctf_type_resolve>
    1300:	mov	x19, x0
    1304:	mov	x0, x21
    1308:	mov	x1, x19
    130c:	bl	f90 <ctf_type_kind>
    1310:	mov	w23, w0
    1314:	add	x0, x29, #0x18
    1318:	mov	x1, x20
    131c:	bl	0 <ctf_lookup_by_id>
    1320:	mov	x25, x0
    1324:	sub	x0, x29, #0x8
    1328:	mov	x1, x19
    132c:	bl	0 <ctf_lookup_by_id>
    1330:	mov	w21, wzr
    1334:	cbz	x25, 1374 <ctf_type_compat+0xdc>
    1338:	mov	x24, x0
    133c:	cbz	x0, 1374 <ctf_type_compat+0xdc>
    1340:	ldr	x0, [x29, #24]
    1344:	ldr	w1, [x25]
    1348:	bl	0 <ctf_strptr>
    134c:	ldur	x8, [x29, #-8]
    1350:	ldr	w1, [x24]
    1354:	mov	x21, x0
    1358:	mov	x0, x8
    135c:	bl	0 <ctf_strptr>
    1360:	mov	x1, x0
    1364:	mov	x0, x21
    1368:	bl	0 <strcmp>
    136c:	cmp	w0, #0x0
    1370:	cset	w21, eq  // eq = none
    1374:	cmp	w22, #0x8
    1378:	b.ne	1384 <ctf_type_compat+0xec>  // b.any
    137c:	cmp	w23, #0x1
    1380:	b.eq	1394 <ctf_type_compat+0xfc>  // b.none
    1384:	subs	w8, w22, #0x1
    1388:	b.ne	13b8 <ctf_type_compat+0x120>  // b.any
    138c:	cmp	w23, #0x8
    1390:	b.ne	13b8 <ctf_type_compat+0x120>  // b.any
    1394:	mov	w21, #0x1                   	// #1
    1398:	mov	w0, w21
    139c:	ldp	x20, x19, [sp, #128]
    13a0:	ldp	x22, x21, [sp, #112]
    13a4:	ldp	x24, x23, [sp, #96]
    13a8:	ldr	x25, [sp, #80]
    13ac:	ldp	x29, x30, [sp, #64]
    13b0:	add	sp, sp, #0x90
    13b4:	ret
    13b8:	cmp	w22, w23
    13bc:	b.ne	1574 <ctf_type_compat+0x2dc>  // b.any
    13c0:	cmp	w8, #0x8
    13c4:	b.hi	1574 <ctf_type_compat+0x2dc>  // b.pmore
    13c8:	adrp	x9, 0 <ctf_type_isparent>
    13cc:	add	x9, x9, #0x0
    13d0:	adr	x10, 1398 <ctf_type_compat+0x100>
    13d4:	ldrb	w11, [x9, x8]
    13d8:	add	x10, x10, x11, lsl #2
    13dc:	br	x10
    13e0:	ldr	x0, [x29, #24]
    13e4:	add	x2, sp, #0x20
    13e8:	mov	x1, x20
    13ec:	str	wzr, [sp, #40]
    13f0:	str	xzr, [sp, #32]
    13f4:	str	xzr, [sp, #8]
    13f8:	str	wzr, [sp, #16]
    13fc:	bl	10bc <ctf_type_encoding>
    1400:	mov	w21, wzr
    1404:	cbnz	w0, 1398 <ctf_type_compat+0x100>
    1408:	ldur	x0, [x29, #-8]
    140c:	add	x2, sp, #0x8
    1410:	mov	x1, x19
    1414:	bl	10bc <ctf_type_encoding>
    1418:	cbnz	w0, 1574 <ctf_type_compat+0x2dc>
    141c:	ldr	x8, [sp, #32]
    1420:	ldr	x9, [sp, #8]
    1424:	ldr	w10, [sp, #40]
    1428:	ldr	w11, [sp, #16]
    142c:	eor	x8, x8, x9
    1430:	eor	w9, w10, w11
    1434:	orr	x8, x8, x9
    1438:	cmp	x8, #0x0
    143c:	b	1468 <ctf_type_compat+0x1d0>
    1440:	cbz	w21, 1398 <ctf_type_compat+0x100>
    1444:	ldr	x0, [x29, #24]
    1448:	mov	x1, x20
    144c:	bl	b48 <ctf_type_size>
    1450:	ldur	x8, [x29, #-8]
    1454:	mov	x20, x0
    1458:	mov	x1, x19
    145c:	mov	x0, x8
    1460:	bl	b48 <ctf_type_size>
    1464:	cmp	x20, x0
    1468:	cset	w21, eq  // eq = none
    146c:	b	1398 <ctf_type_compat+0x100>
    1470:	ldr	x21, [x29, #24]
    1474:	mov	x1, x20
    1478:	mov	x0, x21
    147c:	bl	6c4 <ctf_type_reference>
    1480:	ldur	x20, [x29, #-8]
    1484:	mov	x22, x0
    1488:	mov	x1, x19
    148c:	mov	x0, x20
    1490:	bl	6c4 <ctf_type_reference>
    1494:	mov	x3, x0
    1498:	mov	x0, x21
    149c:	mov	x1, x22
    14a0:	mov	x2, x20
    14a4:	bl	1298 <ctf_type_compat>
    14a8:	mov	w21, w0
    14ac:	b	1398 <ctf_type_compat+0x100>
    14b0:	ldr	x0, [x29, #24]
    14b4:	add	x2, sp, #0x20
    14b8:	mov	x1, x20
    14bc:	bl	c64 <ctf_array_info>
    14c0:	cbnz	w0, 1574 <ctf_type_compat+0x2dc>
    14c4:	ldur	x0, [x29, #-8]
    14c8:	add	x2, sp, #0x8
    14cc:	mov	x1, x19
    14d0:	bl	c64 <ctf_array_info>
    14d4:	cbnz	w0, 1574 <ctf_type_compat+0x2dc>
    14d8:	ldr	w8, [sp, #48]
    14dc:	ldr	w9, [sp, #24]
    14e0:	cmp	w8, w9
    14e4:	b.ne	1574 <ctf_type_compat+0x2dc>  // b.any
    14e8:	ldr	x0, [x29, #24]
    14ec:	ldr	x1, [sp, #32]
    14f0:	ldur	x2, [x29, #-8]
    14f4:	ldr	x3, [sp, #8]
    14f8:	bl	1298 <ctf_type_compat>
    14fc:	cbz	w0, 1574 <ctf_type_compat+0x2dc>
    1500:	ldr	x0, [x29, #24]
    1504:	ldr	x1, [sp, #40]
    1508:	ldur	x2, [x29, #-8]
    150c:	ldr	x3, [sp, #16]
    1510:	bl	1298 <ctf_type_compat>
    1514:	cmp	w0, #0x0
    1518:	cset	w21, ne  // ne = any
    151c:	b	1398 <ctf_type_compat+0x100>
    1520:	ldr	x0, [x29, #24]
    1524:	add	x2, sp, #0x20
    1528:	mov	x1, x20
    152c:	bl	10bc <ctf_type_encoding>
    1530:	ldur	x8, [x29, #-8]
    1534:	mov	w20, w0
    1538:	add	x2, sp, #0x8
    153c:	mov	x1, x19
    1540:	mov	x0, x8
    1544:	bl	10bc <ctf_type_encoding>
    1548:	cmp	w20, w0
    154c:	b.ne	1574 <ctf_type_compat+0x2dc>  // b.any
    1550:	cbnz	w20, 1398 <ctf_type_compat+0x100>
    1554:	ldr	x8, [sp, #32]
    1558:	ldr	x9, [sp, #8]
    155c:	ldr	w10, [sp, #40]
    1560:	ldr	w11, [sp, #16]
    1564:	eor	x8, x8, x9
    1568:	eor	w9, w10, w11
    156c:	orr	x8, x8, x9
    1570:	cbz	x8, 1398 <ctf_type_compat+0x100>
    1574:	mov	w21, wzr
    1578:	b	1398 <ctf_type_compat+0x100>

000000000000157c <ctf_member_info>:
    157c:	sub	sp, sp, #0x60
    1580:	stp	x29, x30, [sp, #32]
    1584:	add	x29, sp, #0x20
    1588:	stp	x24, x23, [sp, #48]
    158c:	stp	x22, x21, [sp, #64]
    1590:	stp	x20, x19, [sp, #80]
    1594:	mov	x19, x3
    1598:	mov	x21, x2
    159c:	mov	x20, x0
    15a0:	stur	x0, [x29, #-8]
    15a4:	bl	1a8 <ctf_type_resolve>
    15a8:	cmn	x0, #0x1
    15ac:	b.eq	16e8 <ctf_member_info+0x16c>  // b.none
    15b0:	mov	x23, x0
    15b4:	sub	x0, x29, #0x8
    15b8:	mov	x1, x23
    15bc:	bl	0 <ctf_lookup_by_id>
    15c0:	cbz	x0, 1638 <ctf_member_info+0xbc>
    15c4:	mov	x22, x0
    15c8:	ldur	x0, [x29, #-8]
    15cc:	add	x2, sp, #0x10
    15d0:	add	x3, sp, #0x8
    15d4:	mov	x1, x22
    15d8:	ldr	x8, [x0]
    15dc:	ldr	x8, [x8, #24]
    15e0:	blr	x8
    15e4:	ldur	x8, [x29, #-8]
    15e8:	ldr	w0, [x22, #4]
    15ec:	ldr	x8, [x8]
    15f0:	ldr	x8, [x8]
    15f4:	blr	x8
    15f8:	orr	w8, w0, #0x1
    15fc:	cmp	w8, #0x7
    1600:	b.ne	1640 <ctf_member_info+0xc4>  // b.any
    1604:	ldur	x0, [x29, #-8]
    1608:	mov	x1, x23
    160c:	bl	0 <ctf_dynamic_type>
    1610:	cbz	x0, 1648 <ctf_member_info+0xcc>
    1614:	ldr	x22, [x0, #56]
    1618:	cbz	x22, 16dc <ctf_member_info+0x160>
    161c:	ldr	x0, [x22, #16]
    1620:	mov	x1, x21
    1624:	bl	0 <strcmp>
    1628:	cbz	w0, 16a4 <ctf_member_info+0x128>
    162c:	ldr	x22, [x22, #8]
    1630:	cbnz	x22, 161c <ctf_member_info+0xa0>
    1634:	b	16dc <ctf_member_info+0x160>
    1638:	mov	w0, #0xffffffff            	// #-1
    163c:	b	16e8 <ctf_member_info+0x16c>
    1640:	mov	w1, #0x3fb                 	// #1019
    1644:	b	16e0 <ctf_member_info+0x164>
    1648:	ldur	x8, [x29, #-8]
    164c:	ldp	x9, x24, [sp, #8]
    1650:	ldr	w0, [x22, #4]
    1654:	ldr	x8, [x8]
    1658:	add	x23, x9, x22
    165c:	ldr	x8, [x8, #16]
    1660:	blr	x8
    1664:	mov	w8, #0x1fffffff            	// #536870911
    1668:	cmp	x24, x8
    166c:	mov	w22, w0
    1670:	b.gt	16b0 <ctf_member_info+0x134>
    1674:	cbz	w22, 16dc <ctf_member_info+0x160>
    1678:	add	x23, x23, #0x4
    167c:	ldur	x0, [x29, #-8]
    1680:	ldur	w1, [x23, #-4]
    1684:	bl	0 <ctf_strptr>
    1688:	mov	x1, x21
    168c:	bl	0 <strcmp>
    1690:	cbz	w0, 1700 <ctf_member_info+0x184>
    1694:	subs	w22, w22, #0x1
    1698:	add	x23, x23, #0xc
    169c:	b.ne	167c <ctf_member_info+0x100>  // b.any
    16a0:	b	16dc <ctf_member_info+0x160>
    16a4:	ldur	q0, [x22, #24]
    16a8:	str	q0, [x19]
    16ac:	b	16e8 <ctf_member_info+0x16c>
    16b0:	cbz	w22, 16dc <ctf_member_info+0x160>
    16b4:	add	x23, x23, #0x8
    16b8:	ldur	x0, [x29, #-8]
    16bc:	ldur	w1, [x23, #-8]
    16c0:	bl	0 <ctf_strptr>
    16c4:	mov	x1, x21
    16c8:	bl	0 <strcmp>
    16cc:	cbz	w0, 1714 <ctf_member_info+0x198>
    16d0:	subs	w22, w22, #0x1
    16d4:	add	x23, x23, #0x10
    16d8:	b.ne	16b8 <ctf_member_info+0x13c>  // b.any
    16dc:	mov	w1, #0x40c                 	// #1036
    16e0:	mov	x0, x20
    16e4:	bl	0 <ctf_set_errno>
    16e8:	ldp	x20, x19, [sp, #80]
    16ec:	ldp	x22, x21, [sp, #64]
    16f0:	ldp	x24, x23, [sp, #48]
    16f4:	ldp	x29, x30, [sp, #32]
    16f8:	add	sp, sp, #0x60
    16fc:	ret
    1700:	ldr	w8, [x23, #4]
    1704:	str	x8, [x19]
    1708:	ldr	w8, [x23]
    170c:	str	x8, [x19, #8]
    1710:	b	16e8 <ctf_member_info+0x16c>
    1714:	ldr	w8, [x23]
    1718:	str	x8, [x19]
    171c:	ldur	w8, [x23, #-4]
    1720:	ldr	w9, [x23, #4]
    1724:	bfi	x9, x8, #32, #32
    1728:	str	x9, [x19, #8]
    172c:	b	16e8 <ctf_member_info+0x16c>

0000000000001730 <ctf_enum_name>:
    1730:	sub	sp, sp, #0x40
    1734:	stp	x29, x30, [sp, #16]
    1738:	stp	x22, x21, [sp, #32]
    173c:	stp	x20, x19, [sp, #48]
    1740:	add	x29, sp, #0x10
    1744:	mov	w20, w2
    1748:	mov	x19, x0
    174c:	str	x0, [sp, #8]
    1750:	bl	3d0 <ctf_type_resolve_unsliced>
    1754:	cmn	x0, #0x1
    1758:	b.eq	1828 <ctf_enum_name+0xf8>  // b.none
    175c:	mov	x22, x0
    1760:	add	x0, sp, #0x8
    1764:	mov	x1, x22
    1768:	bl	0 <ctf_lookup_by_id>
    176c:	cbz	x0, 182c <ctf_enum_name+0xfc>
    1770:	ldr	x8, [sp, #8]
    1774:	mov	x21, x0
    1778:	ldr	w0, [x0, #4]
    177c:	ldr	x8, [x8]
    1780:	ldr	x8, [x8]
    1784:	blr	x8
    1788:	cmp	w0, #0x8
    178c:	b.ne	17dc <ctf_enum_name+0xac>  // b.any
    1790:	ldr	x0, [sp, #8]
    1794:	mov	x3, sp
    1798:	mov	x1, x21
    179c:	mov	x2, xzr
    17a0:	ldr	x8, [x0]
    17a4:	ldr	x8, [x8, #24]
    17a8:	blr	x8
    17ac:	mov	x0, x19
    17b0:	mov	x1, x22
    17b4:	bl	0 <ctf_dynamic_type>
    17b8:	cbz	x0, 17e4 <ctf_enum_name+0xb4>
    17bc:	ldr	x8, [x0, #56]
    17c0:	cbz	x8, 181c <ctf_enum_name+0xec>
    17c4:	ldr	w9, [x8, #40]
    17c8:	cmp	w9, w20
    17cc:	b.eq	1840 <ctf_enum_name+0x110>  // b.none
    17d0:	ldr	x8, [x8, #8]
    17d4:	cbnz	x8, 17c4 <ctf_enum_name+0x94>
    17d8:	b	181c <ctf_enum_name+0xec>
    17dc:	mov	w1, #0x3fc                 	// #1020
    17e0:	b	1820 <ctf_enum_name+0xf0>
    17e4:	ldp	x22, x8, [sp]
    17e8:	ldr	w0, [x21, #4]
    17ec:	ldr	x8, [x8]
    17f0:	ldr	x8, [x8, #16]
    17f4:	blr	x8
    17f8:	cbz	w0, 181c <ctf_enum_name+0xec>
    17fc:	add	x8, x22, x21
    1800:	add	x8, x8, #0x4
    1804:	ldr	w9, [x8]
    1808:	cmp	w9, w20
    180c:	b.eq	1848 <ctf_enum_name+0x118>  // b.none
    1810:	subs	w0, w0, #0x1
    1814:	add	x8, x8, #0x8
    1818:	b.ne	1804 <ctf_enum_name+0xd4>  // b.any
    181c:	mov	w1, #0x40b                 	// #1035
    1820:	mov	x0, x19
    1824:	bl	0 <ctf_set_errno>
    1828:	mov	x0, xzr
    182c:	ldp	x20, x19, [sp, #48]
    1830:	ldp	x22, x21, [sp, #32]
    1834:	ldp	x29, x30, [sp, #16]
    1838:	add	sp, sp, #0x40
    183c:	ret
    1840:	ldr	x0, [x8, #16]
    1844:	b	182c <ctf_enum_name+0xfc>
    1848:	ldr	x0, [sp, #8]
    184c:	ldur	w1, [x8, #-4]
    1850:	bl	0 <ctf_strptr>
    1854:	b	182c <ctf_enum_name+0xfc>

0000000000001858 <ctf_enum_value>:
    1858:	sub	sp, sp, #0x50
    185c:	stp	x29, x30, [sp, #16]
    1860:	stp	x24, x23, [sp, #32]
    1864:	stp	x22, x21, [sp, #48]
    1868:	stp	x20, x19, [sp, #64]
    186c:	add	x29, sp, #0x10
    1870:	mov	x19, x3
    1874:	mov	x21, x2
    1878:	mov	x20, x0
    187c:	str	x0, [sp, #8]
    1880:	bl	3d0 <ctf_type_resolve_unsliced>
    1884:	cmn	x0, #0x1
    1888:	b.eq	1974 <ctf_enum_value+0x11c>  // b.none
    188c:	mov	x23, x0
    1890:	add	x0, sp, #0x8
    1894:	mov	x1, x23
    1898:	bl	0 <ctf_lookup_by_id>
    189c:	cbz	x0, 1970 <ctf_enum_value+0x118>
    18a0:	ldr	x8, [sp, #8]
    18a4:	mov	x22, x0
    18a8:	ldr	w0, [x0, #4]
    18ac:	ldr	x8, [x8]
    18b0:	ldr	x8, [x8]
    18b4:	blr	x8
    18b8:	cmp	w0, #0x8
    18bc:	b.ne	1914 <ctf_enum_value+0xbc>  // b.any
    18c0:	ldr	x0, [sp, #8]
    18c4:	mov	x3, sp
    18c8:	mov	x1, x22
    18cc:	mov	x2, xzr
    18d0:	ldr	x8, [x0]
    18d4:	ldr	x8, [x8, #24]
    18d8:	blr	x8
    18dc:	ldr	x24, [sp]
    18e0:	mov	x0, x20
    18e4:	mov	x1, x23
    18e8:	bl	0 <ctf_dynamic_type>
    18ec:	cbz	x0, 191c <ctf_enum_value+0xc4>
    18f0:	ldr	x22, [x0, #56]
    18f4:	cbz	x22, 1964 <ctf_enum_value+0x10c>
    18f8:	ldr	x0, [x22, #16]
    18fc:	mov	x1, x21
    1900:	bl	0 <strcmp>
    1904:	cbz	w0, 198c <ctf_enum_value+0x134>
    1908:	ldr	x22, [x22, #8]
    190c:	cbnz	x22, 18f8 <ctf_enum_value+0xa0>
    1910:	b	1964 <ctf_enum_value+0x10c>
    1914:	mov	w1, #0x3fc                 	// #1020
    1918:	b	1968 <ctf_enum_value+0x110>
    191c:	ldr	x8, [sp, #8]
    1920:	ldr	w0, [x22, #4]
    1924:	ldr	x8, [x8]
    1928:	ldr	x8, [x8, #16]
    192c:	blr	x8
    1930:	cbz	w0, 1964 <ctf_enum_value+0x10c>
    1934:	add	x8, x24, x22
    1938:	mov	w23, w0
    193c:	add	x22, x8, #0x4
    1940:	ldr	x0, [sp, #8]
    1944:	ldur	w1, [x22, #-4]
    1948:	bl	0 <ctf_strptr>
    194c:	mov	x1, x21
    1950:	bl	0 <strcmp>
    1954:	cbz	w0, 1998 <ctf_enum_value+0x140>
    1958:	subs	w23, w23, #0x1
    195c:	add	x22, x22, #0x8
    1960:	b.ne	1940 <ctf_enum_value+0xe8>  // b.any
    1964:	mov	w1, #0x40b                 	// #1035
    1968:	mov	x0, x20
    196c:	bl	0 <ctf_set_errno>
    1970:	mov	w0, #0xffffffff            	// #-1
    1974:	ldp	x20, x19, [sp, #64]
    1978:	ldp	x22, x21, [sp, #48]
    197c:	ldp	x24, x23, [sp, #32]
    1980:	ldp	x29, x30, [sp, #16]
    1984:	add	sp, sp, #0x50
    1988:	ret
    198c:	cbz	x19, 19ac <ctf_enum_value+0x154>
    1990:	ldr	w8, [x22, #40]
    1994:	b	19a0 <ctf_enum_value+0x148>
    1998:	cbz	x19, 19ac <ctf_enum_value+0x154>
    199c:	ldr	w8, [x22]
    19a0:	mov	w0, wzr
    19a4:	str	w8, [x19]
    19a8:	b	1974 <ctf_enum_value+0x11c>
    19ac:	mov	w0, wzr
    19b0:	b	1974 <ctf_enum_value+0x11c>

00000000000019b4 <ctf_func_type_info>:
    19b4:	sub	sp, sp, #0x40
    19b8:	stp	x29, x30, [sp, #16]
    19bc:	add	x29, sp, #0x10
    19c0:	str	x21, [sp, #32]
    19c4:	stp	x20, x19, [sp, #48]
    19c8:	mov	x19, x2
    19cc:	str	x0, [x29, #24]
    19d0:	bl	1a8 <ctf_type_resolve>
    19d4:	cmn	x0, #0x1
    19d8:	b.eq	1ab4 <ctf_func_type_info+0x100>  // b.none
    19dc:	mov	x20, x0
    19e0:	add	x0, x29, #0x18
    19e4:	mov	x1, x20
    19e8:	bl	0 <ctf_lookup_by_id>
    19ec:	cbz	x0, 1a68 <ctf_func_type_info+0xb4>
    19f0:	mov	x21, x0
    19f4:	ldr	x0, [x29, #24]
    19f8:	add	x2, sp, #0x8
    19fc:	mov	x3, sp
    1a00:	mov	x1, x21
    1a04:	ldr	x8, [x0]
    1a08:	ldr	x8, [x8, #24]
    1a0c:	blr	x8
    1a10:	ldr	x8, [x29, #24]
    1a14:	ldr	w0, [x21, #4]
    1a18:	ldr	x8, [x8]
    1a1c:	ldr	x8, [x8]
    1a20:	blr	x8
    1a24:	cmp	w0, #0x5
    1a28:	b.ne	1a70 <ctf_func_type_info+0xbc>  // b.any
    1a2c:	ldr	w8, [x21, #8]
    1a30:	str	wzr, [x19, #12]
    1a34:	str	x8, [x19]
    1a38:	ldr	x8, [x29, #24]
    1a3c:	ldr	w0, [x21, #4]
    1a40:	ldr	x8, [x8]
    1a44:	ldr	x8, [x8, #16]
    1a48:	blr	x8
    1a4c:	str	w0, [x19, #8]
    1a50:	ldr	x0, [x29, #24]
    1a54:	mov	x1, x20
    1a58:	bl	0 <ctf_dynamic_type>
    1a5c:	cbz	x0, 1a80 <ctf_func_type_info+0xcc>
    1a60:	ldr	x8, [x0, #48]
    1a64:	b	1a88 <ctf_func_type_info+0xd4>
    1a68:	mov	w0, #0xffffffff            	// #-1
    1a6c:	b	1ab4 <ctf_func_type_info+0x100>
    1a70:	ldr	x0, [x29, #24]
    1a74:	mov	w1, #0x404                 	// #1028
    1a78:	bl	0 <ctf_set_errno>
    1a7c:	b	1ab4 <ctf_func_type_info+0x100>
    1a80:	ldr	x8, [sp]
    1a84:	add	x8, x8, x21
    1a88:	ldr	w9, [x19, #8]
    1a8c:	cbz	w9, 1a9c <ctf_func_type_info+0xe8>
    1a90:	sub	w9, w9, #0x1
    1a94:	ldr	w8, [x8, w9, uxtw #2]
    1a98:	cbz	w8, 1aa4 <ctf_func_type_info+0xf0>
    1a9c:	mov	w0, wzr
    1aa0:	b	1ab4 <ctf_func_type_info+0x100>
    1aa4:	ldr	w8, [x19, #12]
    1aa8:	mov	w0, wzr
    1aac:	orr	w8, w8, #0x1
    1ab0:	stp	w9, w8, [x19, #8]
    1ab4:	ldp	x20, x19, [sp, #48]
    1ab8:	ldr	x21, [sp, #32]
    1abc:	ldp	x29, x30, [sp, #16]
    1ac0:	add	sp, sp, #0x40
    1ac4:	ret

0000000000001ac8 <ctf_func_type_args>:
    1ac8:	sub	sp, sp, #0x60
    1acc:	stp	x29, x30, [sp, #48]
    1ad0:	stp	x20, x19, [sp, #80]
    1ad4:	add	x29, sp, #0x30
    1ad8:	mov	w20, w2
    1adc:	add	x2, sp, #0x8
    1ae0:	stp	x22, x21, [sp, #64]
    1ae4:	mov	x19, x3
    1ae8:	mov	x21, x1
    1aec:	mov	x22, x0
    1af0:	stur	x0, [x29, #-8]
    1af4:	bl	19b4 <ctf_func_type_info>
    1af8:	tbnz	w0, #31, 1b5c <ctf_func_type_args+0x94>
    1afc:	mov	x0, x22
    1b00:	mov	x1, x21
    1b04:	bl	1a8 <ctf_type_resolve>
    1b08:	cmn	x0, #0x1
    1b0c:	b.eq	1b90 <ctf_func_type_args+0xc8>  // b.none
    1b10:	mov	x21, x0
    1b14:	sub	x0, x29, #0x8
    1b18:	mov	x1, x21
    1b1c:	bl	0 <ctf_lookup_by_id>
    1b20:	cbz	x0, 1b5c <ctf_func_type_args+0x94>
    1b24:	mov	x22, x0
    1b28:	ldur	x0, [x29, #-8]
    1b2c:	sub	x2, x29, #0x10
    1b30:	add	x3, sp, #0x18
    1b34:	mov	x1, x22
    1b38:	ldr	x8, [x0]
    1b3c:	ldr	x8, [x8, #24]
    1b40:	blr	x8
    1b44:	ldur	x0, [x29, #-8]
    1b48:	mov	x1, x21
    1b4c:	bl	0 <ctf_dynamic_type>
    1b50:	cbz	x0, 1b64 <ctf_func_type_args+0x9c>
    1b54:	ldr	x8, [x0, #48]
    1b58:	b	1b6c <ctf_func_type_args+0xa4>
    1b5c:	mov	w0, #0xffffffff            	// #-1
    1b60:	b	1b90 <ctf_func_type_args+0xc8>
    1b64:	ldr	x8, [sp, #24]
    1b68:	add	x8, x8, x22
    1b6c:	ldr	w9, [sp, #16]
    1b70:	cmp	w9, w20
    1b74:	csel	w9, w20, w9, hi  // hi = pmore
    1b78:	cbz	w9, 1b8c <ctf_func_type_args+0xc4>
    1b7c:	ldr	w10, [x8], #4
    1b80:	subs	w9, w9, #0x1
    1b84:	str	x10, [x19], #8
    1b88:	b.ne	1b7c <ctf_func_type_args+0xb4>  // b.any
    1b8c:	mov	w0, wzr
    1b90:	ldp	x20, x19, [sp, #80]
    1b94:	ldp	x22, x21, [sp, #64]
    1b98:	ldp	x29, x30, [sp, #48]
    1b9c:	add	sp, sp, #0x60
    1ba0:	ret

0000000000001ba4 <ctf_type_visit>:
    1ba4:	adrp	x4, 0 <ctf_type_isparent>
    1ba8:	add	x4, x4, #0x0
    1bac:	mov	x5, xzr
    1bb0:	mov	w6, wzr
    1bb4:	b	1bb8 <ctf_type_rvisit>

0000000000001bb8 <ctf_type_rvisit>:
    1bb8:	sub	sp, sp, #0x70
    1bbc:	stp	x29, x30, [sp, #32]
    1bc0:	add	x29, sp, #0x20
    1bc4:	stp	x26, x25, [sp, #48]
    1bc8:	stp	x24, x23, [sp, #64]
    1bcc:	stp	x22, x21, [sp, #80]
    1bd0:	stp	x20, x19, [sp, #96]
    1bd4:	mov	w22, w6
    1bd8:	mov	x21, x5
    1bdc:	mov	x25, x4
    1be0:	mov	x19, x3
    1be4:	mov	x20, x2
    1be8:	mov	x26, x1
    1bec:	stur	x0, [x29, #-8]
    1bf0:	bl	1a8 <ctf_type_resolve>
    1bf4:	cmn	x0, #0x1
    1bf8:	b.eq	1da4 <ctf_type_rvisit+0x1ec>  // b.none
    1bfc:	mov	x24, x0
    1c00:	sub	x0, x29, #0x8
    1c04:	mov	x1, x24
    1c08:	bl	0 <ctf_lookup_by_id>
    1c0c:	cbz	x0, 1cb4 <ctf_type_rvisit+0xfc>
    1c10:	mov	x23, x0
    1c14:	mov	x0, x25
    1c18:	mov	x1, x26
    1c1c:	mov	x2, x21
    1c20:	mov	w3, w22
    1c24:	mov	x4, x19
    1c28:	blr	x20
    1c2c:	cbnz	w0, 1da4 <ctf_type_rvisit+0x1ec>
    1c30:	ldur	x8, [x29, #-8]
    1c34:	ldr	w0, [x23, #4]
    1c38:	ldr	x8, [x8]
    1c3c:	ldr	x8, [x8]
    1c40:	blr	x8
    1c44:	orr	w8, w0, #0x1
    1c48:	cmp	w8, #0x7
    1c4c:	b.ne	1da0 <ctf_type_rvisit+0x1e8>  // b.any
    1c50:	ldur	x0, [x29, #-8]
    1c54:	add	x2, sp, #0x10
    1c58:	add	x3, sp, #0x8
    1c5c:	mov	x1, x23
    1c60:	ldr	x8, [x0]
    1c64:	ldr	x8, [x8, #24]
    1c68:	blr	x8
    1c6c:	ldur	x0, [x29, #-8]
    1c70:	mov	x1, x24
    1c74:	bl	0 <ctf_dynamic_type>
    1c78:	cbz	x0, 1cbc <ctf_type_rvisit+0x104>
    1c7c:	ldr	x23, [x0, #56]
    1c80:	cbz	x23, 1da0 <ctf_type_rvisit+0x1e8>
    1c84:	add	w21, w22, #0x1
    1c88:	ldur	x0, [x29, #-8]
    1c8c:	ldp	x4, x1, [x23, #16]
    1c90:	ldr	x5, [x23, #32]
    1c94:	mov	x2, x20
    1c98:	mov	x3, x19
    1c9c:	mov	w6, w21
    1ca0:	bl	1bb8 <ctf_type_rvisit>
    1ca4:	cbnz	w0, 1da4 <ctf_type_rvisit+0x1ec>
    1ca8:	ldr	x23, [x23, #8]
    1cac:	cbnz	x23, 1c88 <ctf_type_rvisit+0xd0>
    1cb0:	b	1da4 <ctf_type_rvisit+0x1ec>
    1cb4:	mov	w0, #0xffffffff            	// #-1
    1cb8:	b	1da4 <ctf_type_rvisit+0x1ec>
    1cbc:	ldur	x8, [x29, #-8]
    1cc0:	ldp	x9, x25, [sp, #8]
    1cc4:	ldr	w0, [x23, #4]
    1cc8:	ldr	x8, [x8]
    1ccc:	add	x24, x9, x23
    1cd0:	ldr	x8, [x8, #16]
    1cd4:	blr	x8
    1cd8:	mov	w8, #0x1fffffff            	// #536870911
    1cdc:	cmp	x25, x8
    1ce0:	mov	w23, w0
    1ce4:	b.gt	1d40 <ctf_type_rvisit+0x188>
    1ce8:	cbz	w23, 1da0 <ctf_type_rvisit+0x1e8>
    1cec:	add	w22, w22, #0x1
    1cf0:	add	x26, x24, #0x8
    1cf4:	ldur	x24, [x29, #-8]
    1cf8:	ldur	w1, [x26, #-8]
    1cfc:	ldr	w25, [x26]
    1d00:	mov	x0, x24
    1d04:	bl	0 <ctf_strptr>
    1d08:	ldur	w8, [x26, #-4]
    1d0c:	mov	x4, x0
    1d10:	mov	x0, x24
    1d14:	mov	x1, x25
    1d18:	add	x5, x8, x21
    1d1c:	mov	x2, x20
    1d20:	mov	x3, x19
    1d24:	mov	w6, w22
    1d28:	bl	1bb8 <ctf_type_rvisit>
    1d2c:	cbnz	w0, 1da4 <ctf_type_rvisit+0x1ec>
    1d30:	subs	w23, w23, #0x1
    1d34:	add	x26, x26, #0xc
    1d38:	b.ne	1cf4 <ctf_type_rvisit+0x13c>  // b.any
    1d3c:	b	1da4 <ctf_type_rvisit+0x1ec>
    1d40:	cbz	w23, 1da0 <ctf_type_rvisit+0x1e8>
    1d44:	add	w22, w22, #0x1
    1d48:	add	x26, x24, #0x8
    1d4c:	ldur	x24, [x29, #-8]
    1d50:	ldur	w1, [x26, #-8]
    1d54:	ldr	w25, [x26]
    1d58:	mov	x0, x24
    1d5c:	bl	0 <ctf_strptr>
    1d60:	ldur	w8, [x26, #-4]
    1d64:	ldr	w9, [x26, #4]
    1d68:	mov	x4, x0
    1d6c:	mov	x0, x24
    1d70:	mov	x1, x25
    1d74:	bfi	x9, x8, #32, #32
    1d78:	add	x5, x9, x21
    1d7c:	mov	x2, x20
    1d80:	mov	x3, x19
    1d84:	mov	w6, w22
    1d88:	bl	1bb8 <ctf_type_rvisit>
    1d8c:	cbnz	w0, 1da4 <ctf_type_rvisit+0x1ec>
    1d90:	subs	w23, w23, #0x1
    1d94:	add	x26, x26, #0x10
    1d98:	b.ne	1d4c <ctf_type_rvisit+0x194>  // b.any
    1d9c:	b	1da4 <ctf_type_rvisit+0x1ec>
    1da0:	mov	w0, wzr
    1da4:	ldp	x20, x19, [sp, #96]
    1da8:	ldp	x22, x21, [sp, #80]
    1dac:	ldp	x24, x23, [sp, #64]
    1db0:	ldp	x26, x25, [sp, #48]
    1db4:	ldp	x29, x30, [sp, #32]
    1db8:	add	sp, sp, #0x70
    1dbc:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	ldr	x8, [x0]
   4:	str	x1, [x0]
   8:	cmp	x8, #0x0
   c:	stp	x8, xzr, [x1]
  10:	csel	x8, x0, x8, eq  // eq = none
  14:	str	x1, [x8, #8]
  18:	ret

000000000000001c <ctf_list_prepend>:
  1c:	ldr	x8, [x0, #8]
  20:	str	x1, [x0, #8]
  24:	cmp	x8, #0x0
  28:	stp	xzr, x8, [x1]
  2c:	csel	x8, x0, x8, eq  // eq = none
  30:	str	x1, [x8]
  34:	ret

0000000000000038 <ctf_list_delete>:
  38:	ldp	x8, x9, [x1]
  3c:	cmp	x8, #0x0
  40:	csel	x10, x0, x8, eq  // eq = none
  44:	str	x9, [x10, #8]
  48:	ldr	x9, [x1, #8]
  4c:	cmp	x9, #0x0
  50:	csel	x9, x0, x9, eq  // eq = none
  54:	str	x8, [x9]
  58:	ret

000000000000005c <ctf_list_empty_p>:
  5c:	ldr	x8, [x0, #8]
  60:	cbz	x8, 6c <ctf_list_empty_p+0x10>
  64:	mov	w0, wzr
  68:	ret
  6c:	ldr	x8, [x0]
  70:	cmp	x8, #0x0
  74:	cset	w0, eq  // eq = none
  78:	ret

000000000000007c <ctf_sym_to_elf64>:
  7c:	ldr	w8, [x0]
  80:	str	w8, [x1]
  84:	ldur	d0, [x0, #4]
  88:	uxtl	v0.2d, v0.2s
  8c:	stur	q0, [x1, #8]
  90:	ldrb	w8, [x0, #12]
  94:	strb	w8, [x1, #4]
  98:	ldrb	w8, [x0, #13]
  9c:	strb	w8, [x1, #5]
  a0:	ldrh	w8, [x0, #14]
  a4:	mov	x0, x1
  a8:	strh	w8, [x1, #6]
  ac:	ret

00000000000000b0 <ctf_str_append>:
  b0:	stp	x29, x30, [sp, #-64]!
  b4:	stp	x20, x19, [sp, #48]
  b8:	mov	x19, x0
  bc:	str	x23, [sp, #16]
  c0:	stp	x22, x21, [sp, #32]
  c4:	mov	x29, sp
  c8:	cbz	x1, 120 <ctf_str_append+0x70>
  cc:	mov	x20, x1
  d0:	cbz	x19, e4 <ctf_str_append+0x34>
  d4:	mov	x0, x19
  d8:	bl	0 <strlen>
  dc:	mov	x21, x0
  e0:	b	e8 <ctf_str_append+0x38>
  e4:	mov	x21, xzr
  e8:	mov	x0, x20
  ec:	bl	0 <strlen>
  f0:	add	x23, x0, x21
  f4:	mov	x22, x0
  f8:	add	x1, x23, #0x1
  fc:	mov	x0, x19
 100:	bl	0 <realloc>
 104:	mov	x19, x0
 108:	cbz	x0, 120 <ctf_str_append+0x70>
 10c:	add	x0, x19, x21
 110:	mov	x1, x20
 114:	mov	x2, x22
 118:	bl	0 <memcpy>
 11c:	strb	wzr, [x19, x23]
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #48]
 128:	ldp	x22, x21, [sp, #32]
 12c:	ldr	x23, [sp, #16]
 130:	ldp	x29, x30, [sp], #64
 134:	ret

0000000000000138 <ctf_str_append_noerr>:
 138:	stp	x29, x30, [sp, #-32]!
 13c:	str	x19, [sp, #16]
 140:	mov	x29, sp
 144:	mov	x19, x0
 148:	bl	b0 <ctf_str_append>
 14c:	cmp	x0, #0x0
 150:	csel	x0, x19, x0, eq  // eq = none
 154:	ldr	x19, [sp, #16]
 158:	ldp	x29, x30, [sp], #32
 15c:	ret

0000000000000160 <ctf_realloc>:
 160:	stp	x29, x30, [sp, #-16]!
 164:	mov	x9, x2
 168:	ldr	x2, [x0, #376]
 16c:	mov	x29, sp
 170:	cbz	x2, 194 <ctf_realloc+0x34>
 174:	mov	x8, x0
 178:	adrp	x0, 0 <ctf_list_append>
 17c:	add	x0, x0, #0x0
 180:	mov	x1, x8
 184:	bl	0 <ctf_dprintf>
 188:	mov	x0, xzr
 18c:	ldp	x29, x30, [sp], #16
 190:	ret
 194:	mov	x0, x1
 198:	mov	x1, x9
 19c:	ldp	x29, x30, [sp], #16
 1a0:	b	0 <realloc>

00000000000001a4 <ctf_set_open_errno>:
 1a4:	cbz	x0, 1ac <ctf_set_open_errno+0x8>
 1a8:	str	w1, [x0]
 1ac:	mov	x0, xzr
 1b0:	ret

00000000000001b4 <ctf_set_errno>:
 1b4:	mov	x8, x0
 1b8:	mov	x0, #0xffffffffffffffff    	// #-1
 1bc:	str	w1, [x8, #556]
 1c0:	ret

ctf-open-bfd.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_bfdopen>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	bl	0 <libctf_init_debug>
  20:	adrp	x21, 0 <_CTF_SECTION>
  24:	add	x21, x21, #0x0
  28:	mov	x0, x20
  2c:	mov	x1, x21
  30:	bl	0 <bfd_get_section_by_name>
  34:	cbz	x0, 88 <ctf_bfdopen+0x88>
  38:	mov	x22, x0
  3c:	sub	x2, x29, #0x8
  40:	mov	x0, x20
  44:	mov	x1, x22
  48:	bl	0 <bfd_malloc_and_get_section>
  4c:	cbz	w0, 90 <ctf_bfdopen+0x90>
  50:	mov	w8, #0x1                   	// #1
  54:	str	x8, [sp, #32]
  58:	ldr	x8, [x22, #56]
  5c:	ldur	x9, [x29, #-8]
  60:	add	x1, sp, #0x8
  64:	mov	x0, x20
  68:	mov	x2, x19
  6c:	str	x8, [sp, #24]
  70:	stp	x21, x9, [sp, #8]
  74:	bl	d8 <ctf_bfdopen_ctfsect>
  78:	cbz	x0, b8 <ctf_bfdopen+0xb8>
  7c:	ldr	x8, [sp, #16]
  80:	str	x8, [x0, #88]
  84:	b	c4 <ctf_bfdopen+0xc4>
  88:	mov	w1, #0x3f0                 	// #1008
  8c:	b	ac <ctf_bfdopen+0xac>
  90:	bl	0 <bfd_get_error>
  94:	bl	0 <bfd_errmsg>
  98:	mov	x1, x0
  9c:	adrp	x0, 0 <ctf_bfdopen>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <ctf_dprintf>
  a8:	mov	w1, #0x3e8                 	// #1000
  ac:	mov	x0, x19
  b0:	bl	0 <ctf_set_open_errno>
  b4:	b	c4 <ctf_bfdopen+0xc4>
  b8:	ldur	x0, [x29, #-8]
  bc:	bl	0 <free>
  c0:	mov	x0, xzr
  c4:	ldp	x20, x19, [sp, #80]
  c8:	ldp	x22, x21, [sp, #64]
  cc:	ldp	x29, x30, [sp, #48]
  d0:	add	sp, sp, #0x60
  d4:	ret

00000000000000d8 <ctf_bfdopen_ctfsect>:
  d8:	sub	sp, sp, #0x90
  dc:	stp	x29, x30, [sp, #64]
  e0:	stp	x24, x23, [sp, #96]
  e4:	stp	x22, x21, [sp, #112]
  e8:	stp	x20, x19, [sp, #128]
  ec:	ldr	x24, [x0, #248]
  f0:	str	x25, [sp, #80]
  f4:	mov	x22, x0
  f8:	add	x29, sp, #0x40
  fc:	ldr	x23, [x24, #136]
 100:	ldr	x25, [x24, #160]
 104:	mov	x19, x2
 108:	mov	x21, x1
 10c:	mov	x0, x23
 110:	bl	0 <malloc>
 114:	cbz	x0, 1d0 <ctf_bfdopen_ctfsect+0xf8>
 118:	mov	x20, x0
 11c:	add	x1, x24, #0x68
 120:	udiv	x2, x23, x25
 124:	mov	x0, x22
 128:	mov	x3, xzr
 12c:	mov	x4, xzr
 130:	mov	x5, x20
 134:	mov	x6, xzr
 138:	bl	0 <bfd_elf_get_elf_syms>
 13c:	mov	x23, x0
 140:	bl	0 <free>
 144:	cbz	x23, 268 <ctf_bfdopen_ctfsect+0x190>
 148:	ldr	x9, [x22, #248]
 14c:	ldr	x8, [x9, #88]
 150:	cbz	x8, 1dc <ctf_bfdopen_ctfsect+0x104>
 154:	ldr	w1, [x24, #144]
 158:	ldr	w9, [x9, #764]
 15c:	cmp	w1, w9
 160:	b.cs	1dc <ctf_bfdopen_ctfsect+0x104>  // b.hs, b.nlast
 164:	ldr	x23, [x8, x1, lsl #3]
 168:	ldr	x0, [x23, #72]
 16c:	cbnz	x0, 17c <ctf_bfdopen_ctfsect+0xa4>
 170:	mov	x0, x22
 174:	bl	0 <bfd_elf_get_str_section>
 178:	cbz	x0, 2e4 <ctf_bfdopen_ctfsect+0x20c>
 17c:	adrp	x8, 0 <ctf_bfdopen>
 180:	add	x8, x8, #0x0
 184:	stp	x8, x0, [sp]
 188:	ldr	x8, [x23, #32]
 18c:	str	x8, [sp, #16]
 190:	ldr	x8, [x22, #8]
 194:	ldr	x8, [x8, #880]
 198:	ldr	x9, [x8, #784]
 19c:	ldr	x8, [x24, #160]
 1a0:	ldrb	w9, [x9, #5]
 1a4:	cmp	x8, x9
 1a8:	b.ne	2f0 <ctf_bfdopen_ctfsect+0x218>  // b.any
 1ac:	adrp	x9, 0 <ctf_bfdopen>
 1b0:	add	x9, x9, #0x0
 1b4:	stp	x9, x20, [sp, #32]
 1b8:	str	x8, [sp, #56]
 1bc:	ldr	x8, [x24, #136]
 1c0:	add	x23, sp, #0x20
 1c4:	mov	x22, sp
 1c8:	str	x8, [sp, #48]
 1cc:	b	1e4 <ctf_bfdopen_ctfsect+0x10c>
 1d0:	adrp	x21, 0 <ctf_bfdopen>
 1d4:	add	x21, x21, #0x0
 1d8:	b	278 <ctf_bfdopen_ctfsect+0x1a0>
 1dc:	mov	x22, xzr
 1e0:	mov	x23, xzr
 1e4:	ldr	x1, [x21, #16]
 1e8:	cmp	x1, #0x9
 1ec:	b.cc	22c <ctf_bfdopen_ctfsect+0x154>  // b.lo, b.ul, b.last
 1f0:	ldr	x0, [x21, #8]
 1f4:	mov	x9, #0x3eeb                	// #16107
 1f8:	movk	x9, #0xd762, lsl #16
 1fc:	movk	x9, #0xf2a4, lsl #32
 200:	ldr	x8, [x0]
 204:	movk	x9, #0x8b47, lsl #48
 208:	cmp	x8, x9
 20c:	b.ne	22c <ctf_bfdopen_ctfsect+0x154>  // b.any
 210:	mov	x2, x19
 214:	bl	0 <ctf_arc_bufopen>
 218:	cbz	x0, 2bc <ctf_bfdopen_ctfsect+0x1e4>
 21c:	mov	x1, x0
 220:	mov	x2, xzr
 224:	mov	w0, #0x1                   	// #1
 228:	b	250 <ctf_bfdopen_ctfsect+0x178>
 22c:	mov	x0, x21
 230:	mov	x1, x23
 234:	mov	x2, x22
 238:	mov	x3, x19
 23c:	bl	0 <ctf_bufopen>
 240:	cbz	x0, 2a4 <ctf_bfdopen_ctfsect+0x1cc>
 244:	mov	x2, x0
 248:	mov	w0, wzr
 24c:	mov	x1, xzr
 250:	mov	x3, x23
 254:	mov	x4, x22
 258:	mov	x5, x19
 25c:	bl	310 <ctf_new_archive_internal>
 260:	cbnz	x0, 2c8 <ctf_bfdopen_ctfsect+0x1f0>
 264:	b	2bc <ctf_bfdopen_ctfsect+0x1e4>
 268:	adrp	x21, 0 <ctf_bfdopen>
 26c:	add	x21, x21, #0x0
 270:	mov	x0, x20
 274:	bl	0 <free>
 278:	bl	0 <bfd_get_error>
 27c:	bl	0 <bfd_errmsg>
 280:	mov	x2, x0
 284:	adrp	x0, 0 <ctf_bfdopen>
 288:	add	x0, x0, #0x0
 28c:	mov	x1, x21
 290:	bl	0 <ctf_dprintf>
 294:	mov	w1, #0x3e8                 	// #1000
 298:	mov	x0, x19
 29c:	bl	0 <ctf_set_open_errno>
 2a0:	b	2c4 <ctf_bfdopen_ctfsect+0x1ec>
 2a4:	ldr	w0, [x19]
 2a8:	bl	0 <ctf_errmsg>
 2ac:	mov	x1, x0
 2b0:	adrp	x0, 0 <ctf_bfdopen>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <ctf_dprintf>
 2bc:	mov	x0, x20
 2c0:	bl	0 <free>
 2c4:	mov	x0, xzr
 2c8:	ldp	x20, x19, [sp, #128]
 2cc:	ldp	x22, x21, [sp, #112]
 2d0:	ldp	x24, x23, [sp, #96]
 2d4:	ldr	x25, [sp, #80]
 2d8:	ldp	x29, x30, [sp, #64]
 2dc:	add	sp, sp, #0x90
 2e0:	ret
 2e4:	adrp	x21, 0 <ctf_bfdopen>
 2e8:	add	x21, x21, #0x0
 2ec:	b	270 <ctf_bfdopen_ctfsect+0x198>
 2f0:	adrp	x0, 0 <ctf_bfdopen>
 2f4:	adrp	x1, 0 <ctf_bfdopen>
 2f8:	adrp	x3, 0 <ctf_bfdopen>
 2fc:	add	x0, x0, #0x0
 300:	add	x1, x1, #0x0
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0xba                  	// #186
 30c:	bl	0 <__assert_fail>

0000000000000310 <ctf_new_archive_internal>:
 310:	stp	x29, x30, [sp, #-64]!
 314:	stp	x24, x23, [sp, #16]
 318:	mov	x23, x1
 31c:	mov	w24, w0
 320:	mov	w0, #0x1                   	// #1
 324:	mov	w1, #0x70                  	// #112
 328:	stp	x22, x21, [sp, #32]
 32c:	stp	x20, x19, [sp, #48]
 330:	mov	x29, sp
 334:	mov	x20, x5
 338:	mov	x19, x4
 33c:	mov	x21, x3
 340:	mov	x22, x2
 344:	bl	0 <calloc>
 348:	cbz	x0, 38c <ctf_new_archive_internal+0x7c>
 34c:	str	w24, [x0]
 350:	cbz	w24, 39c <ctf_new_archive_internal+0x8c>
 354:	str	x23, [x0, #16]
 358:	cbz	x21, 368 <ctf_new_archive_internal+0x58>
 35c:	ldp	q1, q0, [x21]
 360:	stur	q0, [x0, #40]
 364:	stur	q1, [x0, #24]
 368:	cbz	x19, 378 <ctf_new_archive_internal+0x68>
 36c:	ldp	q1, q0, [x19]
 370:	stur	q0, [x0, #72]
 374:	stur	q1, [x0, #56]
 378:	ldp	x20, x19, [sp, #48]
 37c:	ldp	x22, x21, [sp, #32]
 380:	ldp	x24, x23, [sp, #16]
 384:	ldp	x29, x30, [sp], #64
 388:	ret
 38c:	cbz	w24, 3a8 <ctf_new_archive_internal+0x98>
 390:	mov	x0, x23
 394:	bl	0 <ctf_arc_close_internal>
 398:	b	3b0 <ctf_new_archive_internal+0xa0>
 39c:	str	x22, [x0, #8]
 3a0:	cbnz	x21, 35c <ctf_new_archive_internal+0x4c>
 3a4:	b	368 <ctf_new_archive_internal+0x58>
 3a8:	mov	x0, x22
 3ac:	bl	0 <ctf_file_close>
 3b0:	bl	0 <__errno_location>
 3b4:	ldr	w1, [x0]
 3b8:	mov	x0, x20
 3bc:	ldp	x20, x19, [sp, #48]
 3c0:	ldp	x22, x21, [sp, #32]
 3c4:	ldp	x24, x23, [sp, #16]
 3c8:	ldp	x29, x30, [sp], #64
 3cc:	b	0 <ctf_set_open_errno>

00000000000003d0 <ctf_fdopen>:
 3d0:	sub	sp, sp, #0xc0
 3d4:	stp	x29, x30, [sp, #144]
 3d8:	stp	x22, x21, [sp, #160]
 3dc:	stp	x20, x19, [sp, #176]
 3e0:	add	x29, sp, #0x90
 3e4:	mov	x19, x3
 3e8:	mov	x21, x2
 3ec:	mov	x20, x1
 3f0:	mov	w22, w0
 3f4:	str	wzr, [sp, #12]
 3f8:	bl	0 <libctf_init_debug>
 3fc:	add	x1, sp, #0x10
 400:	mov	w0, w22
 404:	bl	0 <fstat>
 408:	cmn	w0, #0x1
 40c:	b.eq	57c <ctf_fdopen+0x1ac>  // b.none
 410:	add	x1, sp, #0xc
 414:	mov	w2, #0x4                   	// #4
 418:	mov	w0, w22
 41c:	mov	x3, xzr
 420:	bl	0 <ctf_pread>
 424:	cmp	x0, #0x0
 428:	b.le	514 <ctf_fdopen+0x144>
 42c:	cmp	x0, #0x4
 430:	b.cc	4a4 <ctf_fdopen+0xd4>  // b.lo, b.ul, b.last
 434:	ldrh	w8, [sp, #12]
 438:	mov	w9, #0xf2df                	// #62175
 43c:	cmp	w8, w9
 440:	b.eq	450 <ctf_fdopen+0x80>  // b.none
 444:	mov	w9, #0xdff2                	// #57330
 448:	cmp	w8, w9
 44c:	b.ne	4a4 <ctf_fdopen+0xd4>  // b.any
 450:	ldr	x20, [sp, #64]
 454:	mov	x1, xzr
 458:	mov	w2, w22
 45c:	mov	x0, x20
 460:	bl	0 <ctf_mmap>
 464:	cbz	x0, 57c <ctf_fdopen+0x1ac>
 468:	mov	x1, x20
 46c:	mov	x2, xzr
 470:	mov	x3, xzr
 474:	mov	x4, xzr
 478:	mov	x5, xzr
 47c:	mov	x6, xzr
 480:	mov	x7, x19
 484:	mov	x21, x0
 488:	bl	0 <ctf_simple_open>
 48c:	cbz	x0, 5a0 <ctf_fdopen+0x1d0>
 490:	mov	x2, x0
 494:	stp	x21, x20, [x0, #136]
 498:	mov	w0, wzr
 49c:	mov	x1, xzr
 4a0:	b	500 <ctf_fdopen+0x130>
 4a4:	mov	x1, sp
 4a8:	mov	w2, #0x8                   	// #8
 4ac:	mov	w0, w22
 4b0:	mov	x3, xzr
 4b4:	bl	0 <ctf_pread>
 4b8:	cmp	x0, #0x0
 4bc:	b.le	514 <ctf_fdopen+0x144>
 4c0:	cmp	x0, #0x8
 4c4:	b.cc	520 <ctf_fdopen+0x150>  // b.lo, b.ul, b.last
 4c8:	ldr	x8, [sp]
 4cc:	mov	x9, #0x3eeb                	// #16107
 4d0:	movk	x9, #0xd762, lsl #16
 4d4:	movk	x9, #0xf2a4, lsl #32
 4d8:	movk	x9, #0x8b47, lsl #48
 4dc:	cmp	x8, x9
 4e0:	b.ne	520 <ctf_fdopen+0x150>  // b.any
 4e4:	mov	x0, x20
 4e8:	mov	x1, x19
 4ec:	bl	0 <ctf_arc_open_internal>
 4f0:	cbz	x0, 58c <ctf_fdopen+0x1bc>
 4f4:	mov	x1, x0
 4f8:	mov	w0, #0x1                   	// #1
 4fc:	mov	x2, xzr
 500:	mov	x3, xzr
 504:	mov	x4, xzr
 508:	mov	x5, x19
 50c:	bl	310 <ctf_new_archive_internal>
 510:	b	58c <ctf_fdopen+0x1bc>
 514:	tbnz	x0, #63, 57c <ctf_fdopen+0x1ac>
 518:	mov	w1, #0x3e8                 	// #1000
 51c:	b	584 <ctf_fdopen+0x1b4>
 520:	mov	w0, w22
 524:	bl	0 <dup>
 528:	tbnz	w0, #31, 57c <ctf_fdopen+0x1ac>
 52c:	mov	w2, w0
 530:	mov	x0, x20
 534:	mov	x1, x21
 538:	bl	0 <bfd_fdopenr>
 53c:	cbz	x0, 5b4 <ctf_fdopen+0x1e4>
 540:	ldrh	w8, [x0, #76]
 544:	mov	w1, #0x1                   	// #1
 548:	mov	x21, x0
 54c:	orr	w8, w8, #0x1
 550:	strh	w8, [x0, #76]
 554:	bl	0 <bfd_check_format>
 558:	cbz	w0, 5e4 <ctf_fdopen+0x214>
 55c:	mov	x0, x21
 560:	mov	x1, x19
 564:	bl	0 <ctf_bfdopen>
 568:	cbz	x0, 624 <ctf_fdopen+0x254>
 56c:	adrp	x8, 0 <ctf_bfdopen>
 570:	add	x8, x8, #0x0
 574:	stp	x21, x8, [x0, #96]
 578:	b	58c <ctf_fdopen+0x1bc>
 57c:	bl	0 <__errno_location>
 580:	ldr	w1, [x0]
 584:	mov	x0, x19
 588:	bl	0 <ctf_set_open_errno>
 58c:	ldp	x20, x19, [sp, #176]
 590:	ldp	x22, x21, [sp, #160]
 594:	ldp	x29, x30, [sp, #144]
 598:	add	sp, sp, #0xc0
 59c:	ret
 5a0:	mov	x0, x21
 5a4:	mov	x1, x20
 5a8:	bl	0 <ctf_munmap>
 5ac:	mov	x0, xzr
 5b0:	b	58c <ctf_fdopen+0x1bc>
 5b4:	adrp	x8, 0 <ctf_bfdopen>
 5b8:	add	x8, x8, #0x0
 5bc:	cmp	x20, #0x0
 5c0:	csel	x20, x8, x20, eq  // eq = none
 5c4:	bl	0 <bfd_get_error>
 5c8:	bl	0 <bfd_errmsg>
 5cc:	mov	x2, x0
 5d0:	adrp	x0, 0 <ctf_bfdopen>
 5d4:	add	x0, x0, #0x0
 5d8:	mov	x1, x20
 5dc:	bl	0 <ctf_dprintf>
 5e0:	b	518 <ctf_fdopen+0x148>
 5e4:	adrp	x8, 0 <ctf_bfdopen>
 5e8:	add	x8, x8, #0x0
 5ec:	cmp	x20, #0x0
 5f0:	csel	x20, x8, x20, eq  // eq = none
 5f4:	bl	0 <bfd_get_error>
 5f8:	bl	0 <bfd_errmsg>
 5fc:	mov	x2, x0
 600:	adrp	x0, 0 <ctf_bfdopen>
 604:	add	x0, x0, #0x0
 608:	mov	x1, x20
 60c:	bl	0 <ctf_dprintf>
 610:	bl	0 <bfd_get_error>
 614:	cmp	w0, #0xd
 618:	b.ne	518 <ctf_fdopen+0x148>  // b.any
 61c:	mov	w1, #0x3eb                 	// #1003
 620:	b	584 <ctf_fdopen+0x1b4>
 624:	mov	x0, x21
 628:	bl	0 <bfd_close_all_done>
 62c:	cbnz	w0, 5ac <ctf_fdopen+0x1dc>
 630:	bl	0 <bfd_get_error>
 634:	bl	0 <bfd_errmsg>
 638:	mov	x1, x0
 63c:	adrp	x0, 0 <ctf_bfdopen>
 640:	add	x0, x0, #0x0
 644:	bl	0 <ctf_dprintf>
 648:	b	5ac <ctf_fdopen+0x1dc>

000000000000064c <ctf_bfdclose>:
 64c:	stp	x29, x30, [sp, #-16]!
 650:	ldr	x0, [x0, #96]
 654:	mov	x29, sp
 658:	cbz	x0, 664 <ctf_bfdclose+0x18>
 65c:	bl	0 <bfd_close_all_done>
 660:	cbz	w0, 66c <ctf_bfdclose+0x20>
 664:	ldp	x29, x30, [sp], #16
 668:	ret
 66c:	bl	0 <bfd_get_error>
 670:	bl	0 <bfd_errmsg>
 674:	adrp	x8, 0 <ctf_bfdopen>
 678:	add	x8, x8, #0x0
 67c:	mov	x1, x0
 680:	mov	x0, x8
 684:	ldp	x29, x30, [sp], #16
 688:	b	0 <ctf_dprintf>

000000000000068c <ctf_open>:
 68c:	stp	x29, x30, [sp, #-48]!
 690:	stp	x20, x19, [sp, #32]
 694:	mov	x20, x1
 698:	mov	w1, wzr
 69c:	stp	x22, x21, [sp, #16]
 6a0:	mov	x29, sp
 6a4:	mov	x19, x2
 6a8:	mov	x21, x0
 6ac:	bl	0 <open>
 6b0:	cmn	w0, #0x1
 6b4:	b.eq	6e0 <ctf_open+0x54>  // b.none
 6b8:	mov	x1, x21
 6bc:	mov	x2, x20
 6c0:	mov	x3, x19
 6c4:	mov	w22, w0
 6c8:	bl	3d0 <ctf_fdopen>
 6cc:	mov	x19, x0
 6d0:	mov	w0, w22
 6d4:	bl	0 <close>
 6d8:	mov	x0, x19
 6dc:	b	6f4 <ctf_open+0x68>
 6e0:	cbz	x19, 6f0 <ctf_open+0x64>
 6e4:	bl	0 <__errno_location>
 6e8:	ldr	w8, [x0]
 6ec:	str	w8, [x19]
 6f0:	mov	x0, xzr
 6f4:	ldp	x20, x19, [sp, #32]
 6f8:	ldp	x22, x21, [sp, #16]
 6fc:	ldp	x29, x30, [sp], #48
 700:	ret

0000000000000704 <ctf_arc_open>:
 704:	mov	x2, x1
 708:	mov	x1, xzr
 70c:	b	68c <ctf_open>
