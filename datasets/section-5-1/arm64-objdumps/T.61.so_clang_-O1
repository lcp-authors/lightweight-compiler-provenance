
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//T.61.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 13000 <gconv@@Base+0x12710>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x100>:
     760:	adrp	x0, 13000 <gconv@@Base+0x12710>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 14000 <gconv@@Base+0x13710>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 14000 <gconv@@Base+0x13710>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 13000 <gconv@@Base+0x12710>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 14000 <gconv@@Base+0x13710>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 14000 <gconv@@Base+0x13710>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 13000 <gconv@@Base+0x12710>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 14000 <gconv@@Base+0x13710>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 13000 <gconv@@Base+0x12710>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 14000 <gconv@@Base+0x13710>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x710>
     840:	add	x0, x0, #0xc60
     844:	and	w1, w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	cmp	w0, #0x0
     850:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     854:	csinv	w0, w0, wzr, eq  // eq = none
     858:	ret
     85c:	nop

0000000000000860 <gconv_init@@Base>:
     860:	stp	x29, x30, [sp, #-32]!
     864:	mov	x29, sp
     868:	stp	x19, x20, [sp, #16]
     86c:	mov	x19, x0
     870:	adrp	x20, 1000 <gconv@@Base+0x710>
     874:	ldr	x0, [x0, #24]
     878:	add	x20, x20, #0xab8
     87c:	mov	x1, x20
     880:	bl	730 <strcmp@plt>
     884:	cbnz	w0, 8bc <gconv_init@@Base+0x5c>
     888:	mov	x2, #0x1                   	// #1
     88c:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     890:	movk	x2, #0x2, lsl #32
     894:	add	x0, x0, #0x838
     898:	mov	x1, #0x400000004           	// #17179869188
     89c:	str	x0, [x19, #48]
     8a0:	stp	x2, x1, [x19, #72]
     8a4:	str	xzr, [x19, #96]
     8a8:	mov	w0, #0x0                   	// #0
     8ac:	str	wzr, [x19, #88]
     8b0:	ldp	x19, x20, [sp, #16]
     8b4:	ldp	x29, x30, [sp], #32
     8b8:	ret
     8bc:	ldr	x0, [x19, #32]
     8c0:	mov	x1, x20
     8c4:	bl	730 <strcmp@plt>
     8c8:	cbnz	w0, 8e8 <gconv_init@@Base+0x88>
     8cc:	mov	x1, #0x1                   	// #1
     8d0:	mov	x0, #0xffffffffffffffff    	// #-1
     8d4:	mov	x2, #0x400000004           	// #17179869188
     8d8:	movk	x1, #0x2, lsl #32
     8dc:	stp	x2, x1, [x19, #72]
     8e0:	str	x0, [x19, #96]
     8e4:	b	8a8 <gconv_init@@Base+0x48>
     8e8:	mov	w0, #0x1                   	// #1
     8ec:	b	8b0 <gconv_init@@Base+0x50>

00000000000008f0 <gconv@@Base>:
     8f0:	stp	x29, x30, [sp, #-256]!
     8f4:	mov	x14, x4
     8f8:	mov	x29, sp
     8fc:	stp	x19, x20, [sp, #16]
     900:	mov	x20, x1
     904:	adrp	x1, 13000 <gconv@@Base+0x12710>
     908:	stp	x25, x26, [sp, #64]
     90c:	mov	x26, x0
     910:	ldr	w18, [x20, #16]
     914:	ldr	x1, [x1, #4056]
     918:	stp	x21, x22, [sp, #32]
     91c:	mov	x19, x3
     920:	ldr	x0, [x1]
     924:	str	x0, [sp, #248]
     928:	mov	x0, #0x0                   	// #0
     92c:	add	x1, x26, #0x68
     930:	add	x0, x20, #0x30
     934:	stp	x23, x24, [sp, #48]
     938:	mov	x22, #0x0                   	// #0
     93c:	stp	x27, x28, [sp, #80]
     940:	mov	x23, x5
     944:	mov	x28, x2
     948:	stp	x1, x0, [sp, #144]
     94c:	mov	w24, w7
     950:	tbnz	w18, #0, 970 <gconv@@Base+0x80>
     954:	ldr	x0, [x26, #104]
     958:	ldr	x22, [x26, #144]
     95c:	cbz	x0, 970 <gconv@@Base+0x80>
     960:	adrp	x0, 13000 <gconv@@Base+0x12710>
     964:	ldr	x0, [x0, #4040]
     968:	ldr	x0, [x0]
     96c:	eor	x22, x22, x0
     970:	cbnz	w6, 1198 <gconv@@Base+0x8a8>
     974:	cmp	x14, #0x0
     978:	add	x25, sp, #0xc8
     97c:	csel	x0, x20, x14, eq  // eq = none
     980:	cmp	x23, #0x0
     984:	csel	x1, x25, xzr, ne  // ne = any
     988:	ldr	x8, [x28]
     98c:	ldr	x9, [x0]
     990:	str	x1, [sp, #160]
     994:	str	xzr, [sp, #200]
     998:	ldr	x21, [x20, #8]
     99c:	cbnz	w24, c3c <gconv@@Base+0x34c>
     9a0:	mov	x25, x26
     9a4:	add	x0, sp, #0xe0
     9a8:	str	x0, [sp, #168]
     9ac:	adrp	x13, 1000 <gconv@@Base+0x710>
     9b0:	str	x14, [sp, #136]
     9b4:	add	x13, x13, #0xc60
     9b8:	ldr	x0, [x25, #96]
     9bc:	mov	x26, x21
     9c0:	mov	x14, x28
     9c4:	add	x10, x13, #0x400
     9c8:	mov	x28, x20
     9cc:	mov	x21, x8
     9d0:	mov	x20, x9
     9d4:	cbz	x0, b0c <gconv@@Base+0x21c>
     9d8:	stp	x21, x20, [sp, #216]
     9dc:	mov	x27, x20
     9e0:	cmp	x19, x21
     9e4:	b.eq	124c <gconv@@Base+0x95c>  // b.none
     9e8:	mov	x1, x21
     9ec:	add	x3, sp, #0xd8
     9f0:	mov	w12, #0x4                   	// #4
     9f4:	add	x5, x1, #0x4
     9f8:	cmp	x19, x5
     9fc:	b.cc	be0 <gconv@@Base+0x2f0>  // b.lo, b.ul, b.last
     a00:	cmp	x26, x27
     a04:	b.ls	bd4 <gconv@@Base+0x2e4>  // b.plast
     a08:	ldr	w2, [x1]
     a0c:	cmp	w2, #0x17e
     a10:	b.hi	bfc <gconv@@Base+0x30c>  // b.pmore
     a14:	ubfiz	x5, x2, #1, #32
     a18:	cmp	w2, #0x0
     a1c:	add	x1, x10, x5
     a20:	ldrb	w2, [x10, x5]
     a24:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     a28:	b.eq	e54 <gconv@@Base+0x564>  // b.none
     a2c:	add	x4, x27, #0x1
     a30:	str	x4, [sp, #224]
     a34:	strb	w2, [x27]
     a38:	ldrb	w1, [x1, #1]
     a3c:	cbz	w1, a58 <gconv@@Base+0x168>
     a40:	ldr	x27, [sp, #224]
     a44:	cmp	x26, x27
     a48:	b.ls	bd0 <gconv@@Base+0x2e0>  // b.plast
     a4c:	add	x2, x27, #0x1
     a50:	str	x2, [sp, #224]
     a54:	strb	w1, [x27]
     a58:	ldp	x1, x27, [sp, #216]
     a5c:	add	x1, x1, #0x4
     a60:	str	x1, [sp, #216]
     a64:	cmp	x19, x1
     a68:	b.ne	9f4 <gconv@@Base+0x104>  // b.any
     a6c:	nop
     a70:	ldr	x0, [sp, #136]
     a74:	str	x1, [x14]
     a78:	cbnz	x0, b90 <gconv@@Base+0x2a0>
     a7c:	ldp	w1, w0, [x28, #16]
     a80:	add	w0, w0, #0x1
     a84:	str	w0, [x28, #20]
     a88:	tbnz	w1, #0, e74 <gconv@@Base+0x584>
     a8c:	cmp	x20, x27
     a90:	b.cs	f50 <gconv@@Base+0x660>  // b.hs, b.nlast
     a94:	ldr	x1, [x28]
     a98:	mov	x0, x22
     a9c:	stp	x14, x13, [sp, #104]
     aa0:	str	x10, [sp, #120]
     aa4:	str	w12, [sp, #128]
     aa8:	str	x1, [sp, #208]
     aac:	bl	740 <_dl_mcount_wrapper_check@plt>
     ab0:	ldp	x0, x1, [sp, #144]
     ab4:	mov	w7, w24
     ab8:	mov	x5, x23
     abc:	mov	x3, x27
     ac0:	add	x2, sp, #0xd0
     ac4:	mov	w6, #0x0                   	// #0
     ac8:	mov	x4, #0x0                   	// #0
     acc:	blr	x22
     ad0:	mov	w7, w0
     ad4:	ldr	w12, [sp, #128]
     ad8:	cmp	w0, #0x4
     adc:	ldp	x14, x13, [sp, #104]
     ae0:	ldr	x10, [sp, #120]
     ae4:	b.eq	bec <gconv@@Base+0x2fc>  // b.none
     ae8:	ldr	x12, [sp, #208]
     aec:	cmp	x12, x27
     af0:	b.ne	d84 <gconv@@Base+0x494>  // b.any
     af4:	cbnz	w7, 1210 <gconv@@Base+0x920>
     af8:	ldr	x0, [x25, #96]
     afc:	ldr	w18, [x28, #16]
     b00:	ldr	x21, [x14]
     b04:	ldr	x20, [x28]
     b08:	cbnz	x0, 9d8 <gconv@@Base+0xe8>
     b0c:	cmp	x19, x21
     b10:	b.eq	136c <gconv@@Base+0xa7c>  // b.none
     b14:	add	x2, x20, #0x4
     b18:	cmp	x26, x2
     b1c:	b.cc	1184 <gconv@@Base+0x894>  // b.lo, b.ul, b.last
     b20:	adrp	x1, 2000 <gconv@@Base+0x1710>
     b24:	and	w18, w18, #0x2
     b28:	mov	x0, x21
     b2c:	add	x5, x1, #0x368
     b30:	mov	x27, x20
     b34:	mov	w12, #0x4                   	// #4
     b38:	ldrb	w1, [x0]
     b3c:	sub	w3, w1, #0xc1
     b40:	cmp	w3, #0xe
     b44:	b.ls	ef4 <gconv@@Base+0x604>  // b.plast
     b48:	mov	w3, w1
     b4c:	mov	w4, #0x1                   	// #1
     b50:	ldr	w3, [x13, x3, lsl #2]
     b54:	cmp	w3, #0x0
     b58:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     b5c:	b.ne	f38 <gconv@@Base+0x648>  // b.any
     b60:	add	x0, x0, w4, sxtw
     b64:	str	w3, [x27]
     b68:	mov	x27, x2
     b6c:	cmp	x19, x0
     b70:	b.eq	b84 <gconv@@Base+0x294>  // b.none
     b74:	add	x2, x27, #0x4
     b78:	cmp	x26, x2
     b7c:	b.cs	b38 <gconv@@Base+0x248>  // b.hs, b.nlast
     b80:	mov	w12, #0x5                   	// #5
     b84:	str	x0, [x14]
     b88:	ldr	x0, [sp, #136]
     b8c:	cbz	x0, a7c <gconv@@Base+0x18c>
     b90:	mov	w25, w12
     b94:	str	x27, [x0]
     b98:	adrp	x0, 13000 <gconv@@Base+0x12710>
     b9c:	ldr	x26, [x0, #4056]
     ba0:	ldr	x1, [sp, #248]
     ba4:	ldr	x0, [x26]
     ba8:	eor	x0, x1, x0
     bac:	cbnz	x0, 1854 <gconv@@Base+0xf64>
     bb0:	mov	w0, w25
     bb4:	ldp	x19, x20, [sp, #16]
     bb8:	ldp	x21, x22, [sp, #32]
     bbc:	ldp	x23, x24, [sp, #48]
     bc0:	ldp	x25, x26, [sp, #64]
     bc4:	ldp	x27, x28, [sp, #80]
     bc8:	ldp	x29, x30, [sp], #256
     bcc:	ret
     bd0:	sub	x27, x27, #0x1
     bd4:	mov	w12, #0x5                   	// #5
     bd8:	ldr	x1, [sp, #216]
     bdc:	b	a70 <gconv@@Base+0x180>
     be0:	mov	w12, #0x7                   	// #7
     be4:	ldr	x1, [sp, #216]
     be8:	b	a70 <gconv@@Base+0x180>
     bec:	mov	w7, w12
     bf0:	cmp	w12, #0x5
     bf4:	b.ne	af4 <gconv@@Base+0x204>  // b.any
     bf8:	b	af8 <gconv@@Base+0x208>
     bfc:	mov	w0, #0x2126                	// #8486
     c00:	cmp	w2, w0
     c04:	b.eq	11e4 <gconv@@Base+0x8f4>  // b.none
     c08:	cmp	w2, #0x2c7
     c0c:	b.eq	11f8 <gconv@@Base+0x908>  // b.none
     c10:	cmp	w2, #0x2dc
     c14:	sub	w4, w2, #0x2d8
     c18:	ccmp	w4, #0x5, #0x2, ne  // ne = any
     c1c:	b.hi	10a0 <gconv@@Base+0x7b0>  // b.pmore
     c20:	add	x2, x13, #0x700
     c24:	mov	w0, #0x20                  	// #32
     c28:	add	x1, sp, #0xf0
     c2c:	strb	w0, [sp, #241]
     c30:	ldrb	w2, [x2, w4, uxtw]
     c34:	strb	w2, [sp, #240]
     c38:	b	a2c <gconv@@Base+0x13c>
     c3c:	ldr	x13, [x20, #32]
     c40:	ldr	w0, [x13]
     c44:	ands	w1, w0, #0x7
     c48:	b.eq	9a0 <gconv@@Base+0xb0>  // b.none
     c4c:	cbnz	x14, 19a0 <gconv@@Base+0x10b0>
     c50:	ldr	x2, [x26, #96]
     c54:	cbz	x2, f70 <gconv@@Base+0x680>
     c58:	stp	x8, x9, [sp, #216]
     c5c:	cmp	w1, #0x4
     c60:	b.hi	1a7c <gconv@@Base+0x118c>  // b.pmore
     c64:	mov	w7, w1
     c68:	cbz	w1, 1360 <gconv@@Base+0xa70>
     c6c:	add	x10, sp, #0xf0
     c70:	add	x4, x13, #0x3
     c74:	mov	x0, #0x1                   	// #1
     c78:	add	x1, x10, x0
     c7c:	ldrb	w3, [x4, x0]
     c80:	cmp	x0, x7
     c84:	add	x0, x0, #0x1
     c88:	sturb	w3, [x1, #-1]
     c8c:	b.ne	c78 <gconv@@Base+0x388>  // b.any
     c90:	mov	x0, #0x4                   	// #4
     c94:	sub	x0, x0, x7
     c98:	add	x0, x8, x0
     c9c:	cmp	x19, x0
     ca0:	b.cc	1424 <gconv@@Base+0xb34>  // b.lo, b.ul, b.last
     ca4:	add	x0, x8, #0x1
     ca8:	add	x10, sp, #0xf0
     cac:	cmp	x9, x21
     cb0:	b.cs	12d0 <gconv@@Base+0x9e0>  // b.hs, b.nlast
     cb4:	add	x7, x7, #0x1
     cb8:	str	x0, [sp, #216]
     cbc:	add	x27, x10, x7
     cc0:	cmp	x7, #0x3
     cc4:	ldurb	w1, [x0, #-1]
     cc8:	ccmp	x19, x0, #0x0, ls  // ls = plast
     ccc:	add	x0, x0, #0x1
     cd0:	sturb	w1, [x27, #-1]
     cd4:	b.hi	cb4 <gconv@@Base+0x3c4>  // b.pmore
     cd8:	ldr	w1, [sp, #240]
     cdc:	str	x10, [sp, #216]
     ce0:	cmp	w1, #0x17e
     ce4:	b.hi	1470 <gconv@@Base+0xb80>  // b.pmore
     ce8:	adrp	x0, 1000 <gconv@@Base+0x710>
     cec:	add	x0, x0, #0xc60
     cf0:	add	x0, x0, #0x400
     cf4:	ubfiz	x2, x1, #1, #32
     cf8:	add	x3, x0, x2
     cfc:	ldrb	w0, [x0, x2]
     d00:	cmp	w0, #0x0
     d04:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     d08:	b.ne	15ac <gconv@@Base+0xcbc>  // b.any
     d0c:	add	x1, x9, #0x1
     d10:	str	x1, [sp, #224]
     d14:	strb	w0, [x9]
     d18:	ldrb	w0, [x3, #1]
     d1c:	cbz	w0, d38 <gconv@@Base+0x448>
     d20:	ldr	x1, [sp, #224]
     d24:	cmp	x21, x1
     d28:	b.ls	12bc <gconv@@Base+0x9cc>  // b.plast
     d2c:	add	x2, x1, #0x1
     d30:	str	x2, [sp, #224]
     d34:	strb	w0, [x1]
     d38:	ldr	x0, [sp, #216]
     d3c:	add	x0, x0, #0x4
     d40:	str	x0, [sp, #216]
     d44:	cmp	x0, x10
     d48:	b.eq	1384 <gconv@@Base+0xa94>  // b.none
     d4c:	ldr	w1, [x13]
     d50:	sub	x0, x0, x10
     d54:	and	x2, x1, #0x7
     d58:	cmp	x0, x2
     d5c:	b.le	1a6c <gconv@@Base+0x117c>
     d60:	ldr	x8, [x28]
     d64:	sub	x0, x0, x2
     d68:	ldr	w18, [x20, #16]
     d6c:	and	w1, w1, #0xfffffff8
     d70:	add	x8, x8, x0
     d74:	str	x8, [x28]
     d78:	ldr	x9, [sp, #224]
     d7c:	str	w1, [x13]
     d80:	b	9a0 <gconv@@Base+0xb0>
     d84:	ldr	w27, [x28, #16]
     d88:	str	x21, [x14]
     d8c:	ldr	x0, [x25, #96]
     d90:	cbz	x0, 1024 <gconv@@Base+0x734>
     d94:	stp	x21, x20, [sp, #216]
     d98:	cmp	x19, x21
     d9c:	b.eq	1634 <gconv@@Base+0xd44>  // b.none
     da0:	mov	x0, x20
     da4:	add	x3, sp, #0xd8
     da8:	mov	x5, #0x4                   	// #4
     dac:	add	x1, x21, #0x4
     db0:	cmp	x19, x1
     db4:	b.cc	1258 <gconv@@Base+0x968>  // b.lo, b.ul, b.last
     db8:	cmp	x12, x0
     dbc:	b.ls	12d8 <gconv@@Base+0x9e8>  // b.plast
     dc0:	ldr	w2, [x21]
     dc4:	cmp	w2, #0x17e
     dc8:	b.hi	1308 <gconv@@Base+0xa18>  // b.pmore
     dcc:	ubfiz	x6, x2, #1, #32
     dd0:	cmp	w2, #0x0
     dd4:	add	x1, x10, x6
     dd8:	ldrb	w2, [x10, x6]
     ddc:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     de0:	b.eq	13a8 <gconv@@Base+0xab8>  // b.none
     de4:	add	x4, x0, #0x1
     de8:	str	x4, [sp, #224]
     dec:	strb	w2, [x0]
     df0:	ldrb	w1, [x1, #1]
     df4:	cbz	w1, e10 <gconv@@Base+0x520>
     df8:	ldr	x0, [sp, #224]
     dfc:	cmp	x12, x0
     e00:	b.ls	1390 <gconv@@Base+0xaa0>  // b.plast
     e04:	add	x2, x0, #0x1
     e08:	str	x2, [sp, #224]
     e0c:	strb	w1, [x0]
     e10:	ldp	x21, x0, [sp, #216]
     e14:	add	x21, x21, #0x4
     e18:	str	x21, [sp, #216]
     e1c:	cmp	x19, x21
     e20:	b.ne	dac <gconv@@Base+0x4bc>  // b.any
     e24:	ldr	x12, [sp, #208]
     e28:	str	x21, [x14]
     e2c:	cmp	x12, x0
     e30:	b.ne	12e8 <gconv@@Base+0x9f8>  // b.any
     e34:	cmp	x5, #0x5
     e38:	b.ne	1268 <gconv@@Base+0x978>  // b.any
     e3c:	cmp	x20, x0
     e40:	b.ne	af4 <gconv@@Base+0x204>  // b.any
     e44:	ldr	w0, [x28, #20]
     e48:	sub	w0, w0, #0x1
     e4c:	str	w0, [x28, #20]
     e50:	b	af4 <gconv@@Base+0x204>
     e54:	ldr	x0, [sp, #160]
     e58:	cbz	x0, 1464 <gconv@@Base+0xb74>
     e5c:	ldr	w0, [x28, #16]
     e60:	tbnz	w0, #3, 1130 <gconv@@Base+0x840>
     e64:	ldr	x1, [sp, #216]
     e68:	tbnz	w18, #1, 1110 <gconv@@Base+0x820>
     e6c:	mov	w12, #0x6                   	// #6
     e70:	b	a70 <gconv@@Base+0x180>
     e74:	mov	x20, x28
     e78:	mov	w25, w12
     e7c:	ldr	x0, [x23]
     e80:	mov	x28, x14
     e84:	ldr	x1, [sp, #200]
     e88:	str	x27, [x20]
     e8c:	add	x0, x0, x1
     e90:	str	x0, [x23]
     e94:	cmp	w24, #0x0
     e98:	ccmp	w25, #0x7, #0x0, ne  // ne = any
     e9c:	b.ne	b98 <gconv@@Base+0x2a8>  // b.any
     ea0:	ldr	x0, [x28]
     ea4:	sub	x3, x19, x0
     ea8:	cmp	x3, #0x3
     eac:	b.gt	19f0 <gconv@@Base+0x1100>
     eb0:	ldr	x4, [x20, #32]
     eb4:	cmp	x0, x19
     eb8:	add	x0, x0, #0x1
     ebc:	add	x1, x4, #0x4
     ec0:	b.cs	1658 <gconv@@Base+0xd68>  // b.hs, b.nlast
     ec4:	str	x0, [x28]
     ec8:	cmp	x19, x0
     ecc:	add	x0, x0, #0x1
     ed0:	ldurb	w2, [x0, #-2]
     ed4:	strb	w2, [x1], #1
     ed8:	b.ne	ec4 <gconv@@Base+0x5d4>  // b.any
     edc:	mov	w1, w3
     ee0:	ldr	w0, [x4]
     ee4:	and	w0, w0, #0xfffffff8
     ee8:	orr	w0, w0, w1
     eec:	str	w0, [x4]
     ef0:	b	b98 <gconv@@Base+0x2a8>
     ef4:	add	x4, x0, #0x1
     ef8:	cmp	x19, x4
     efc:	b.ls	1354 <gconv@@Base+0xa64>  // b.plast
     f00:	ldrb	w6, [x0, #1]
     f04:	sub	w6, w6, #0x20
     f08:	cmp	w6, #0x5f
     f0c:	b.hi	1220 <gconv@@Base+0x930>  // b.pmore
     f10:	ubfiz	x7, x3, #1, #32
     f14:	mov	w4, #0x2                   	// #2
     f18:	add	x3, x7, w3, uxtw
     f1c:	lsl	x3, x3, #5
     f20:	add	x3, x3, w6, uxtw
     f24:	ldr	w3, [x5, x3, lsl #2]
     f28:	cmp	w3, #0x0
     f2c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     f30:	b.eq	b60 <gconv@@Base+0x270>  // b.none
     f34:	nop
     f38:	ldr	x2, [sp, #160]
     f3c:	cbz	x2, f44 <gconv@@Base+0x654>
     f40:	cbnz	w18, f58 <gconv@@Base+0x668>
     f44:	mov	w12, #0x6                   	// #6
     f48:	str	x0, [x14]
     f4c:	b	b88 <gconv@@Base+0x298>
     f50:	mov	w7, w12
     f54:	b	af4 <gconv@@Base+0x204>
     f58:	ldr	x1, [x2]
     f5c:	add	x0, x0, w4, sxtw
     f60:	mov	w12, #0x6                   	// #6
     f64:	add	x1, x1, #0x1
     f68:	str	x1, [x2]
     f6c:	b	b6c <gconv@@Base+0x27c>
     f70:	cmp	w1, #0x4
     f74:	b.hi	193c <gconv@@Base+0x104c>  // b.pmore
     f78:	add	x5, x9, #0x4
     f7c:	cbz	w1, 1288 <gconv@@Base+0x998>
     f80:	ldrb	w2, [x13, #4]
     f84:	tst	w0, #0x6
     f88:	strb	w2, [sp, #240]
     f8c:	mov	x2, #0x1                   	// #1
     f90:	b.eq	fa0 <gconv@@Base+0x6b0>  // b.none
     f94:	ldrb	w3, [x13, #5]
     f98:	mov	x2, #0x2                   	// #2
     f9c:	strb	w3, [sp, #241]
     fa0:	cmp	x21, x5
     fa4:	b.cc	12d0 <gconv@@Base+0x9e0>  // b.lo, b.ul, b.last
     fa8:	add	x10, sp, #0xf0
     fac:	ldrb	w4, [x8]
     fb0:	add	x3, x2, #0x1
     fb4:	strb	w4, [x10, x2]
     fb8:	ldrb	w4, [sp, #240]
     fbc:	sub	w6, w4, #0xc1
     fc0:	cmp	w6, #0xe
     fc4:	b.ls	16b4 <gconv@@Base+0xdc4>  // b.plast
     fc8:	mov	w2, w4
     fcc:	adrp	x1, 1000 <gconv@@Base+0x710>
     fd0:	add	x1, x1, #0xc60
     fd4:	mov	w0, #0x1                   	// #1
     fd8:	ldr	w1, [x1, x2, lsl #2]
     fdc:	cmp	w1, #0x0
     fe0:	ccmp	w4, #0x0, #0x4, eq  // eq = none
     fe4:	b.ne	1690 <gconv@@Base+0xda0>  // b.any
     fe8:	add	x0, x10, w0, sxtw
     fec:	str	w1, [x9]
     ff0:	mov	x9, x5
     ff4:	ldr	w1, [x13]
     ff8:	sub	x10, x0, x10
     ffc:	and	x0, x1, #0x7
    1000:	cmp	x10, x0
    1004:	b.le	1a34 <gconv@@Base+0x1144>
    1008:	sub	x10, x10, x0
    100c:	ldr	w18, [x20, #16]
    1010:	add	x8, x8, x10
    1014:	str	x8, [x28]
    1018:	and	w1, w1, #0xfffffff8
    101c:	str	w1, [x13]
    1020:	b	9a0 <gconv@@Base+0xb0>
    1024:	cmp	x19, x21
    1028:	b.eq	1634 <gconv@@Base+0xd44>  // b.none
    102c:	add	x2, x20, #0x4
    1030:	adrp	x1, 2000 <gconv@@Base+0x1710>
    1034:	and	w27, w27, #0x2
    1038:	cmp	x12, x2
    103c:	mov	x0, x20
    1040:	add	x6, x1, #0x368
    1044:	mov	x5, #0x4                   	// #4
    1048:	b.cc	15a0 <gconv@@Base+0xcb0>  // b.lo, b.ul, b.last
    104c:	ldr	x9, [sp, #160]
    1050:	ldrb	w1, [x21]
    1054:	sub	w3, w1, #0xc1
    1058:	cmp	w3, #0xe
    105c:	b.ls	13ec <gconv@@Base+0xafc>  // b.plast
    1060:	mov	w3, w1
    1064:	mov	w4, #0x1                   	// #1
    1068:	ldr	w3, [x13, x3, lsl #2]
    106c:	cmp	w1, #0x0
    1070:	ccmp	w3, #0x0, #0x0, ne  // ne = any
    1074:	b.eq	13cc <gconv@@Base+0xadc>  // b.none
    1078:	add	x21, x21, w4, sxtw
    107c:	str	w3, [x0]
    1080:	mov	x0, x2
    1084:	cmp	x19, x21
    1088:	b.eq	e28 <gconv@@Base+0x538>  // b.none
    108c:	add	x2, x0, #0x4
    1090:	cmp	x12, x2
    1094:	b.cs	1050 <gconv@@Base+0x760>  // b.hs, b.nlast
    1098:	mov	x5, #0x5                   	// #5
    109c:	b	e28 <gconv@@Base+0x538>
    10a0:	mov	w0, #0x1c00                	// #7168
    10a4:	cmp	w0, w2, lsr #7
    10a8:	b.eq	1348 <gconv@@Base+0xa58>  // b.none
    10ac:	ldr	x0, [sp, #160]
    10b0:	cbz	x0, 1464 <gconv@@Base+0xb74>
    10b4:	ldr	w0, [x28, #16]
    10b8:	tbz	w0, #3, e64 <gconv@@Base+0x574>
    10bc:	ldp	x6, x5, [sp, #160]
    10c0:	mov	x4, x19
    10c4:	ldr	x2, [x14]
    10c8:	mov	x1, x28
    10cc:	mov	x0, x25
    10d0:	stp	x3, x14, [sp, #104]
    10d4:	str	w18, [sp, #120]
    10d8:	str	x13, [sp, #128]
    10dc:	str	x10, [sp, #176]
    10e0:	bl	700 <__gconv_transliterate@plt>
    10e4:	ldr	w18, [sp, #120]
    10e8:	mov	w12, w0
    10ec:	cmp	w0, #0x6
    10f0:	ldp	x3, x14, [sp, #104]
    10f4:	ldr	x13, [sp, #128]
    10f8:	ldr	x10, [sp, #176]
    10fc:	b.eq	1244 <gconv@@Base+0x954>  // b.none
    1100:	cmp	w0, #0x5
    1104:	ldp	x1, x27, [sp, #216]
    1108:	b.ne	a64 <gconv@@Base+0x174>  // b.any
    110c:	b	a70 <gconv@@Base+0x180>
    1110:	ldr	x2, [sp, #160]
    1114:	add	x1, x1, #0x4
    1118:	mov	w12, #0x6                   	// #6
    111c:	str	x1, [sp, #216]
    1120:	ldr	x0, [x2]
    1124:	add	x0, x0, #0x1
    1128:	str	x0, [x2]
    112c:	b	a64 <gconv@@Base+0x174>
    1130:	ldp	x6, x5, [sp, #160]
    1134:	mov	x4, x19
    1138:	ldr	x2, [x14]
    113c:	mov	x1, x28
    1140:	mov	x0, x25
    1144:	stp	x3, x14, [sp, #104]
    1148:	str	w18, [sp, #120]
    114c:	str	x13, [sp, #128]
    1150:	str	x10, [sp, #176]
    1154:	bl	700 <__gconv_transliterate@plt>
    1158:	ldr	w18, [sp, #120]
    115c:	mov	w12, w0
    1160:	cmp	w0, #0x6
    1164:	ldp	x3, x14, [sp, #104]
    1168:	ldr	x13, [sp, #128]
    116c:	ldr	x10, [sp, #176]
    1170:	b.eq	1244 <gconv@@Base+0x954>  // b.none
    1174:	cmp	w0, #0x5
    1178:	ldp	x1, x27, [sp, #216]
    117c:	b.ne	a64 <gconv@@Base+0x174>  // b.any
    1180:	b	a70 <gconv@@Base+0x180>
    1184:	mov	x0, x21
    1188:	mov	x27, x20
    118c:	mov	w12, #0x5                   	// #5
    1190:	str	x0, [x14]
    1194:	b	b88 <gconv@@Base+0x298>
    1198:	cbnz	x14, 195c <gconv@@Base+0x106c>
    119c:	ldr	x0, [x20, #32]
    11a0:	mov	w25, #0x0                   	// #0
    11a4:	str	xzr, [x0]
    11a8:	ldr	w0, [x20, #16]
    11ac:	tbnz	w0, #0, b98 <gconv@@Base+0x2a8>
    11b0:	mov	x0, x22
    11b4:	str	w6, [sp, #104]
    11b8:	bl	740 <_dl_mcount_wrapper_check@plt>
    11bc:	ldp	x0, x1, [sp, #144]
    11c0:	mov	w7, w24
    11c4:	ldr	w6, [sp, #104]
    11c8:	mov	x5, x23
    11cc:	mov	x4, #0x0                   	// #0
    11d0:	mov	x3, #0x0                   	// #0
    11d4:	mov	x2, #0x0                   	// #0
    11d8:	blr	x22
    11dc:	mov	w25, w0
    11e0:	b	b98 <gconv@@Base+0x2a8>
    11e4:	add	x0, x27, #0x1
    11e8:	str	x0, [sp, #224]
    11ec:	mov	w0, #0xffffffe0            	// #-32
    11f0:	strb	w0, [x27]
    11f4:	b	a58 <gconv@@Base+0x168>
    11f8:	add	x0, x27, #0x1
    11fc:	str	x0, [sp, #224]
    1200:	mov	w1, #0x20                  	// #32
    1204:	mov	w0, #0xffffffcf            	// #-49
    1208:	strb	w0, [x27]
    120c:	b	a40 <gconv@@Base+0x150>
    1210:	mov	x20, x28
    1214:	mov	w25, w7
    1218:	mov	x28, x14
    121c:	b	e94 <gconv@@Base+0x5a4>
    1220:	ldr	x2, [sp, #160]
    1224:	cbz	x2, f44 <gconv@@Base+0x654>
    1228:	cbz	w18, f44 <gconv@@Base+0x654>
    122c:	ldr	x1, [x2]
    1230:	mov	x0, x4
    1234:	mov	w12, #0x6                   	// #6
    1238:	add	x1, x1, #0x1
    123c:	str	x1, [x2]
    1240:	b	b74 <gconv@@Base+0x284>
    1244:	ldr	x27, [sp, #224]
    1248:	b	e64 <gconv@@Base+0x574>
    124c:	mov	x1, x19
    1250:	mov	w12, #0x4                   	// #4
    1254:	b	a70 <gconv@@Base+0x180>
    1258:	ldp	x1, x2, [sp, #208]
    125c:	str	x2, [x14]
    1260:	cmp	x0, x1
    1264:	b.ne	12e8 <gconv@@Base+0x9f8>  // b.any
    1268:	adrp	x3, 1000 <gconv@@Base+0x710>
    126c:	adrp	x1, 1000 <gconv@@Base+0x710>
    1270:	adrp	x0, 1000 <gconv@@Base+0x710>
    1274:	add	x3, x3, #0xc58
    1278:	add	x1, x1, #0xac8
    127c:	add	x0, x0, #0xbf8
    1280:	mov	w2, #0x2eb                 	// #747
    1284:	bl	750 <__assert_fail@plt>
    1288:	cmp	x21, x5
    128c:	b.cc	12d0 <gconv@@Base+0x9e0>  // b.lo, b.ul, b.last
    1290:	mov	x4, x8
    1294:	add	x10, sp, #0xf0
    1298:	mov	x2, #0x0                   	// #0
    129c:	ldrb	w6, [x4], #1
    12a0:	add	x3, x2, #0x1
    12a4:	strb	w6, [x10, x2]
    12a8:	cmp	x3, #0x1
    12ac:	ccmp	x19, x4, #0x0, ls  // ls = plast
    12b0:	mov	x2, #0x1                   	// #1
    12b4:	b.hi	129c <gconv@@Base+0x9ac>  // b.pmore
    12b8:	b	fb8 <gconv@@Base+0x6c8>
    12bc:	ldr	x0, [sp, #216]
    12c0:	sub	x1, x1, #0x1
    12c4:	str	x1, [sp, #224]
    12c8:	cmp	x0, x10
    12cc:	b.ne	d4c <gconv@@Base+0x45c>  // b.any
    12d0:	mov	w25, #0x5                   	// #5
    12d4:	b	b98 <gconv@@Base+0x2a8>
    12d8:	ldp	x1, x2, [sp, #208]
    12dc:	str	x2, [x14]
    12e0:	cmp	x0, x1
    12e4:	b.eq	e3c <gconv@@Base+0x54c>  // b.none
    12e8:	adrp	x3, 1000 <gconv@@Base+0x710>
    12ec:	adrp	x1, 1000 <gconv@@Base+0x710>
    12f0:	adrp	x0, 1000 <gconv@@Base+0x710>
    12f4:	add	x3, x3, #0xc58
    12f8:	add	x1, x1, #0xac8
    12fc:	add	x0, x0, #0xbe0
    1300:	mov	w2, #0x2ea                 	// #746
    1304:	bl	750 <__assert_fail@plt>
    1308:	mov	w4, #0x2126                	// #8486
    130c:	cmp	w2, w4
    1310:	b.eq	15d8 <gconv@@Base+0xce8>  // b.none
    1314:	cmp	w2, #0x2c7
    1318:	b.eq	1640 <gconv@@Base+0xd50>  // b.none
    131c:	cmp	w2, #0x2dc
    1320:	sub	w4, w2, #0x2d8
    1324:	ccmp	w4, #0x5, #0x2, ne  // ne = any
    1328:	b.hi	14b4 <gconv@@Base+0xbc4>  // b.pmore
    132c:	add	x2, x13, #0x700
    1330:	mov	w1, #0x20                  	// #32
    1334:	strb	w1, [sp, #241]
    1338:	add	x1, sp, #0xf0
    133c:	ldrb	w2, [x2, w4, uxtw]
    1340:	strb	w2, [sp, #240]
    1344:	b	de4 <gconv@@Base+0x4f4>
    1348:	mov	x1, x5
    134c:	str	x5, [sp, #216]
    1350:	b	a64 <gconv@@Base+0x174>
    1354:	mov	w12, #0x7                   	// #7
    1358:	str	x0, [x14]
    135c:	b	b88 <gconv@@Base+0x298>
    1360:	mov	x0, #0x4                   	// #4
    1364:	mov	x7, #0x0                   	// #0
    1368:	b	c98 <gconv@@Base+0x3a8>
    136c:	mov	x0, x19
    1370:	mov	x27, x20
    1374:	mov	w12, #0x4                   	// #4
    1378:	str	x0, [x14]
    137c:	b	b88 <gconv@@Base+0x298>
    1380:	cbnz	w25, b98 <gconv@@Base+0x2a8>
    1384:	ldr	w18, [x20, #16]
    1388:	ldr	x8, [x28]
    138c:	b	9a0 <gconv@@Base+0xb0>
    1390:	ldp	x1, x2, [sp, #208]
    1394:	str	x2, [x14]
    1398:	sub	x0, x0, #0x1
    139c:	cmp	x1, x0
    13a0:	b.eq	e3c <gconv@@Base+0x54c>  // b.none
    13a4:	b	12e8 <gconv@@Base+0x9f8>
    13a8:	ldr	x1, [sp, #160]
    13ac:	cbz	x1, 1258 <gconv@@Base+0x968>
    13b0:	ldr	w1, [x28, #16]
    13b4:	tbnz	w1, #3, 1544 <gconv@@Base+0xc54>
    13b8:	ldr	x21, [sp, #216]
    13bc:	tbnz	w27, #1, 1524 <gconv@@Base+0xc34>
    13c0:	mov	x5, #0x6                   	// #6
    13c4:	ldr	x12, [sp, #208]
    13c8:	b	e28 <gconv@@Base+0x538>
    13cc:	cbz	x9, 145c <gconv@@Base+0xb6c>
    13d0:	cbz	w27, 145c <gconv@@Base+0xb6c>
    13d4:	ldr	x1, [x9]
    13d8:	add	x21, x21, w4, sxtw
    13dc:	mov	x5, #0x6                   	// #6
    13e0:	add	x1, x1, #0x1
    13e4:	str	x1, [x9]
    13e8:	b	1084 <gconv@@Base+0x794>
    13ec:	add	x4, x21, #0x1
    13f0:	cmp	x19, x4
    13f4:	b.ls	1688 <gconv@@Base+0xd98>  // b.plast
    13f8:	ldrb	w8, [x21, #1]
    13fc:	sub	w8, w8, #0x20
    1400:	cmp	w8, #0x5f
    1404:	b.hi	1668 <gconv@@Base+0xd78>  // b.pmore
    1408:	ubfiz	x11, x3, #1, #32
    140c:	mov	w4, #0x2                   	// #2
    1410:	add	x3, x11, w3, uxtw
    1414:	lsl	x3, x3, #5
    1418:	add	x3, x3, w8, uxtw
    141c:	ldr	w3, [x6, x3, lsl #2]
    1420:	b	106c <gconv@@Base+0x77c>
    1424:	str	x19, [x28]
    1428:	cmp	x8, x19
    142c:	b.cs	1454 <gconv@@Base+0xb64>  // b.hs, b.nlast
    1430:	add	x8, x8, #0x1
    1434:	add	x7, x13, x7
    1438:	str	x8, [sp, #216]
    143c:	cmp	x19, x8
    1440:	add	x7, x7, #0x1
    1444:	add	x8, x8, #0x1
    1448:	ldurb	w0, [x8, #-2]
    144c:	strb	w0, [x7, #3]
    1450:	b.ne	1438 <gconv@@Base+0xb48>  // b.any
    1454:	mov	w25, #0x7                   	// #7
    1458:	b	b98 <gconv@@Base+0x2a8>
    145c:	mov	x5, #0x6                   	// #6
    1460:	b	e28 <gconv@@Base+0x538>
    1464:	mov	w12, #0x6                   	// #6
    1468:	ldr	x1, [sp, #216]
    146c:	b	a70 <gconv@@Base+0x180>
    1470:	mov	w0, #0x2126                	// #8486
    1474:	cmp	w1, w0
    1478:	b.eq	1768 <gconv@@Base+0xe78>  // b.none
    147c:	cmp	w1, #0x2c7
    1480:	b.eq	1750 <gconv@@Base+0xe60>  // b.none
    1484:	cmp	w1, #0x2dc
    1488:	sub	w2, w1, #0x2d8
    148c:	ccmp	w2, #0x5, #0x2, ne  // ne = any
    1490:	b.hi	15ec <gconv@@Base+0xcfc>  // b.pmore
    1494:	adrp	x0, 2000 <gconv@@Base+0x1710>
    1498:	add	x0, x0, #0x360
    149c:	mov	w1, #0x20                  	// #32
    14a0:	add	x3, sp, #0xe8
    14a4:	strb	w1, [sp, #233]
    14a8:	ldrb	w0, [x0, w2, uxtw]
    14ac:	strb	w0, [sp, #232]
    14b0:	b	d0c <gconv@@Base+0x41c>
    14b4:	mov	w4, #0x1c00                	// #7168
    14b8:	cmp	w4, w2, lsr #7
    14bc:	b.eq	16f8 <gconv@@Base+0xe08>  // b.none
    14c0:	ldr	x1, [sp, #160]
    14c4:	cbz	x1, 1258 <gconv@@Base+0x968>
    14c8:	ldr	w1, [x28, #16]
    14cc:	tbz	w1, #3, 13b8 <gconv@@Base+0xac8>
    14d0:	ldp	x6, x5, [sp, #160]
    14d4:	mov	x4, x19
    14d8:	ldr	x2, [x14]
    14dc:	mov	x1, x28
    14e0:	mov	x0, x25
    14e4:	stp	x3, x14, [sp, #104]
    14e8:	str	x12, [sp, #120]
    14ec:	str	w7, [sp, #128]
    14f0:	stp	x13, x10, [sp, #176]
    14f4:	bl	700 <__gconv_transliterate@plt>
    14f8:	sxtw	x5, w0
    14fc:	ldr	w7, [sp, #128]
    1500:	cmp	w5, #0x6
    1504:	ldp	x3, x14, [sp, #104]
    1508:	ldr	x12, [sp, #120]
    150c:	ldp	x13, x10, [sp, #176]
    1510:	b.eq	1660 <gconv@@Base+0xd70>  // b.none
    1514:	cmp	w5, #0x5
    1518:	b.eq	1a54 <gconv@@Base+0x1164>  // b.none
    151c:	ldp	x21, x0, [sp, #216]
    1520:	b	e1c <gconv@@Base+0x52c>
    1524:	ldr	x2, [sp, #160]
    1528:	add	x21, x21, #0x4
    152c:	mov	x5, #0x6                   	// #6
    1530:	str	x21, [sp, #216]
    1534:	ldr	x1, [x2]
    1538:	add	x1, x1, #0x1
    153c:	str	x1, [x2]
    1540:	b	e1c <gconv@@Base+0x52c>
    1544:	ldp	x6, x5, [sp, #160]
    1548:	mov	x4, x19
    154c:	ldr	x2, [x14]
    1550:	mov	x1, x28
    1554:	mov	x0, x25
    1558:	stp	x3, x14, [sp, #104]
    155c:	str	x12, [sp, #120]
    1560:	str	w7, [sp, #128]
    1564:	stp	x13, x10, [sp, #176]
    1568:	bl	700 <__gconv_transliterate@plt>
    156c:	sxtw	x5, w0
    1570:	ldr	w7, [sp, #128]
    1574:	cmp	w5, #0x6
    1578:	ldp	x3, x14, [sp, #104]
    157c:	ldr	x12, [sp, #120]
    1580:	ldp	x13, x10, [sp, #176]
    1584:	b.eq	1660 <gconv@@Base+0xd70>  // b.none
    1588:	cmp	w5, #0x5
    158c:	ldp	x21, x0, [sp, #216]
    1590:	b.ne	e1c <gconv@@Base+0x52c>  // b.any
    1594:	mov	x5, #0x5                   	// #5
    1598:	ldr	x12, [sp, #208]
    159c:	b	e28 <gconv@@Base+0x538>
    15a0:	cmp	x12, x20
    15a4:	b.eq	e44 <gconv@@Base+0x554>  // b.none
    15a8:	b	12e8 <gconv@@Base+0x9f8>
    15ac:	ldr	x0, [sp, #160]
    15b0:	cbz	x0, 162c <gconv@@Base+0xd3c>
    15b4:	tbnz	w18, #3, 177c <gconv@@Base+0xe8c>
    15b8:	tbz	w18, #1, 162c <gconv@@Base+0xd3c>
    15bc:	ldr	x2, [sp, #160]
    15c0:	add	x0, x10, #0x4
    15c4:	str	x0, [sp, #216]
    15c8:	ldr	x1, [x2]
    15cc:	add	x1, x1, #0x1
    15d0:	str	x1, [x2]
    15d4:	b	d4c <gconv@@Base+0x45c>
    15d8:	add	x1, x0, #0x1
    15dc:	str	x1, [sp, #224]
    15e0:	mov	w1, #0xffffffe0            	// #-32
    15e4:	strb	w1, [x0]
    15e8:	b	e10 <gconv@@Base+0x520>
    15ec:	mov	w0, #0x1c00                	// #7168
    15f0:	cmp	w0, w1, lsr #7
    15f4:	b.eq	1a8c <gconv@@Base+0x119c>  // b.none
    15f8:	ldr	x0, [sp, #160]
    15fc:	cbz	x0, 162c <gconv@@Base+0xd3c>
    1600:	tbnz	w18, #3, 18b8 <gconv@@Base+0xfc8>
    1604:	mov	x0, x10
    1608:	tbz	w18, #1, 162c <gconv@@Base+0xd3c>
    160c:	ldr	x2, [sp, #160]
    1610:	add	x0, x0, #0x4
    1614:	str	x0, [sp, #216]
    1618:	cmp	x0, x10
    161c:	ldr	x1, [x2]
    1620:	add	x1, x1, #0x1
    1624:	str	x1, [x2]
    1628:	b.ne	d4c <gconv@@Base+0x45c>  // b.any
    162c:	mov	w25, #0x6                   	// #6
    1630:	b	b98 <gconv@@Base+0x2a8>
    1634:	cmp	x12, x20
    1638:	b.eq	1268 <gconv@@Base+0x978>  // b.none
    163c:	b	12e8 <gconv@@Base+0x9f8>
    1640:	add	x1, x0, #0x1
    1644:	str	x1, [sp, #224]
    1648:	mov	w1, #0xffffffcf            	// #-49
    164c:	strb	w1, [x0]
    1650:	mov	w1, #0x20                  	// #32
    1654:	b	df8 <gconv@@Base+0x508>
    1658:	mov	w1, #0x0                   	// #0
    165c:	b	ee0 <gconv@@Base+0x5f0>
    1660:	ldr	x0, [sp, #224]
    1664:	b	13b8 <gconv@@Base+0xac8>
    1668:	cbz	x9, 145c <gconv@@Base+0xb6c>
    166c:	cbz	w27, 145c <gconv@@Base+0xb6c>
    1670:	ldr	x1, [x9]
    1674:	mov	x21, x4
    1678:	mov	x5, #0x6                   	// #6
    167c:	add	x1, x1, #0x1
    1680:	str	x1, [x9]
    1684:	b	108c <gconv@@Base+0x79c>
    1688:	mov	x5, #0x7                   	// #7
    168c:	b	e28 <gconv@@Base+0x538>
    1690:	ldr	x1, [sp, #160]
    1694:	cbz	x1, 162c <gconv@@Base+0xd3c>
    1698:	tbz	w18, #1, 162c <gconv@@Base+0xd3c>
    169c:	mov	x2, x1
    16a0:	add	x0, x10, w0, sxtw
    16a4:	ldr	x1, [x1]
    16a8:	add	x1, x1, #0x1
    16ac:	str	x1, [x2]
    16b0:	b	ff4 <gconv@@Base+0x704>
    16b4:	add	x7, x10, x3
    16b8:	add	x2, x10, #0x1
    16bc:	cmp	x7, x2
    16c0:	b.ls	1704 <gconv@@Base+0xe14>  // b.plast
    16c4:	ldrb	w3, [sp, #241]
    16c8:	sub	w3, w3, #0x20
    16cc:	cmp	w3, #0x5f
    16d0:	b.hi	1a10 <gconv@@Base+0x1120>  // b.pmore
    16d4:	ubfiz	x1, x6, #1, #32
    16d8:	adrp	x2, 2000 <gconv@@Base+0x1710>
    16dc:	add	x1, x1, w6, uxtw
    16e0:	add	x2, x2, #0x368
    16e4:	mov	w0, #0x2                   	// #2
    16e8:	lsl	x1, x1, #5
    16ec:	add	x1, x1, w3, uxtw
    16f0:	ldr	w1, [x2, x1, lsl #2]
    16f4:	b	fdc <gconv@@Base+0x6ec>
    16f8:	mov	x21, x1
    16fc:	str	x1, [sp, #216]
    1700:	b	e1c <gconv@@Base+0x52c>
    1704:	add	x2, x10, #0x2
    1708:	cmp	x7, x2
    170c:	b.eq	19e0 <gconv@@Base+0x10f0>  // b.none
    1710:	mov	w1, w1
    1714:	and	w0, w0, #0xfffffff8
    1718:	sub	x1, x3, x1
    171c:	add	x8, x8, x1
    1720:	str	x8, [x28]
    1724:	cmp	x3, w0, sxtw
    1728:	b.le	19d0 <gconv@@Base+0x10e0>
    172c:	cmp	x3, #0x4
    1730:	b.hi	19c0 <gconv@@Base+0x10d0>  // b.pmore
    1734:	orr	w0, w0, w3
    1738:	str	w0, [x13]
    173c:	cmp	x7, x10
    1740:	mov	w25, #0x7                   	// #7
    1744:	b.ls	b98 <gconv@@Base+0x2a8>  // b.plast
    1748:	strb	w4, [x13, #4]
    174c:	b	b98 <gconv@@Base+0x2a8>
    1750:	add	x0, x9, #0x1
    1754:	str	x0, [sp, #224]
    1758:	mov	w1, #0xffffffcf            	// #-49
    175c:	mov	w0, #0x20                  	// #32
    1760:	strb	w1, [x9]
    1764:	b	d20 <gconv@@Base+0x430>
    1768:	add	x0, x9, #0x1
    176c:	str	x0, [sp, #224]
    1770:	mov	w0, #0xffffffe0            	// #-32
    1774:	strb	w0, [x9]
    1778:	b	d38 <gconv@@Base+0x448>
    177c:	mov	x6, x0
    1780:	mov	x2, x8
    1784:	add	x5, sp, #0xe0
    1788:	mov	x4, x27
    178c:	add	x3, sp, #0xd8
    1790:	mov	x1, x20
    1794:	mov	x0, x26
    1798:	str	w18, [sp, #104]
    179c:	stp	x13, x9, [sp, #112]
    17a0:	stp	x7, x14, [sp, #128]
    17a4:	str	x10, [sp, #168]
    17a8:	bl	700 <__gconv_transliterate@plt>
    17ac:	ldr	w18, [sp, #104]
    17b0:	mov	w25, w0
    17b4:	cmp	w0, #0x6
    17b8:	ldp	x13, x9, [sp, #112]
    17bc:	ldp	x7, x14, [sp, #128]
    17c0:	ldr	x10, [sp, #168]
    17c4:	b.eq	1924 <gconv@@Base+0x1034>  // b.none
    17c8:	cmp	w0, #0x5
    17cc:	b.eq	1910 <gconv@@Base+0x1020>  // b.none
    17d0:	ldr	x0, [sp, #216]
    17d4:	cmp	x0, x10
    17d8:	b.ne	d4c <gconv@@Base+0x45c>  // b.any
    17dc:	cmp	w25, #0x7
    17e0:	b.ne	1380 <gconv@@Base+0xa90>  // b.any
    17e4:	add	x0, x10, #0x4
    17e8:	cmp	x27, x0
    17ec:	b.eq	1898 <gconv@@Base+0xfa8>  // b.none
    17f0:	ldr	w0, [x13]
    17f4:	ldr	x1, [x28]
    17f8:	and	x2, x0, #0x7
    17fc:	sub	x2, x7, x2
    1800:	and	w0, w0, #0xfffffff8
    1804:	add	x1, x1, x2
    1808:	str	x1, [x28]
    180c:	cmp	x7, w0, sxtw
    1810:	b.le	1878 <gconv@@Base+0xf88>
    1814:	cmp	x7, #0x4
    1818:	b.hi	1858 <gconv@@Base+0xf68>  // b.pmore
    181c:	orr	w0, w0, w7
    1820:	str	w0, [x13]
    1824:	cmp	x27, x10
    1828:	b.ls	1454 <gconv@@Base+0xb64>  // b.plast
    182c:	add	x10, x10, #0x1
    1830:	add	x13, x13, #0x4
    1834:	str	x10, [sp, #216]
    1838:	cmp	x27, x10
    183c:	add	x10, x10, #0x1
    1840:	ldurb	w0, [x10, #-2]
    1844:	strb	w0, [x13], #1
    1848:	b.ne	1834 <gconv@@Base+0xf44>  // b.any
    184c:	mov	w25, #0x7                   	// #7
    1850:	b	b98 <gconv@@Base+0x2a8>
    1854:	bl	710 <__stack_chk_fail@plt>
    1858:	adrp	x3, 1000 <gconv@@Base+0x710>
    185c:	add	x3, x3, #0xc30
    1860:	adrp	x1, 1000 <gconv@@Base+0x710>
    1864:	adrp	x0, 1000 <gconv@@Base+0x710>
    1868:	add	x1, x1, #0xaf8
    186c:	add	x0, x0, #0xbb0
    1870:	mov	w2, #0x1e6                 	// #486
    1874:	bl	750 <__assert_fail@plt>
    1878:	adrp	x3, 1000 <gconv@@Base+0x710>
    187c:	add	x3, x3, #0xc30
    1880:	adrp	x1, 1000 <gconv@@Base+0x710>
    1884:	adrp	x0, 1000 <gconv@@Base+0x710>
    1888:	add	x1, x1, #0xaf8
    188c:	add	x0, x0, #0xb88
    1890:	mov	w2, #0x1e5                 	// #485
    1894:	bl	750 <__assert_fail@plt>
    1898:	adrp	x3, 1000 <gconv@@Base+0x710>
    189c:	add	x3, x3, #0xc30
    18a0:	adrp	x1, 1000 <gconv@@Base+0x710>
    18a4:	adrp	x0, 1000 <gconv@@Base+0x710>
    18a8:	add	x1, x1, #0xaf8
    18ac:	add	x0, x0, #0xb60
    18b0:	mov	w2, #0x1db                 	// #475
    18b4:	bl	750 <__assert_fail@plt>
    18b8:	mov	x6, x0
    18bc:	mov	x2, x8
    18c0:	add	x5, sp, #0xe0
    18c4:	mov	x4, x27
    18c8:	add	x3, sp, #0xd8
    18cc:	mov	x1, x20
    18d0:	mov	x0, x26
    18d4:	str	w18, [sp, #104]
    18d8:	stp	x13, x9, [sp, #112]
    18dc:	stp	x7, x14, [sp, #128]
    18e0:	str	x10, [sp, #168]
    18e4:	bl	700 <__gconv_transliterate@plt>
    18e8:	ldr	w18, [sp, #104]
    18ec:	mov	w25, w0
    18f0:	cmp	w0, #0x6
    18f4:	ldr	x13, [sp, #112]
    18f8:	ldr	x14, [sp, #136]
    18fc:	ldr	x10, [sp, #168]
    1900:	b.eq	1a98 <gconv@@Base+0x11a8>  // b.none
    1904:	cmp	w0, #0x5
    1908:	ldp	x9, x7, [sp, #120]
    190c:	b.ne	17d0 <gconv@@Base+0xee0>  // b.any
    1910:	ldr	x0, [sp, #216]
    1914:	cmp	x0, x10
    1918:	b.ne	d4c <gconv@@Base+0x45c>  // b.any
    191c:	mov	w25, #0x5                   	// #5
    1920:	b	b98 <gconv@@Base+0x2a8>
    1924:	ldr	x0, [sp, #216]
    1928:	tbnz	w18, #1, 197c <gconv@@Base+0x108c>
    192c:	cmp	x0, x10
    1930:	b.ne	d4c <gconv@@Base+0x45c>  // b.any
    1934:	mov	w25, #0x6                   	// #6
    1938:	b	b98 <gconv@@Base+0x2a8>
    193c:	adrp	x3, 1000 <gconv@@Base+0x710>
    1940:	add	x3, x3, #0xc40
    1944:	adrp	x1, 1000 <gconv@@Base+0x710>
    1948:	adrp	x0, 1000 <gconv@@Base+0x710>
    194c:	add	x1, x1, #0xaf8
    1950:	add	x0, x0, #0xb08
    1954:	mov	w2, #0x18b                 	// #395
    1958:	bl	750 <__assert_fail@plt>
    195c:	adrp	x3, 1000 <gconv@@Base+0x710>
    1960:	adrp	x1, 1000 <gconv@@Base+0x710>
    1964:	adrp	x0, 1000 <gconv@@Base+0x710>
    1968:	add	x3, x3, #0xc58
    196c:	add	x1, x1, #0xac8
    1970:	add	x0, x0, #0xae0
    1974:	mov	w2, #0x1a4                 	// #420
    1978:	bl	750 <__assert_fail@plt>
    197c:	ldr	x2, [sp, #160]
    1980:	add	x0, x0, #0x4
    1984:	str	x0, [sp, #216]
    1988:	cmp	x0, x10
    198c:	ldr	x1, [x2]
    1990:	add	x1, x1, #0x1
    1994:	str	x1, [x2]
    1998:	b.eq	b98 <gconv@@Base+0x2a8>  // b.none
    199c:	b	d4c <gconv@@Base+0x45c>
    19a0:	adrp	x3, 1000 <gconv@@Base+0x710>
    19a4:	adrp	x1, 1000 <gconv@@Base+0x710>
    19a8:	adrp	x0, 1000 <gconv@@Base+0x710>
    19ac:	add	x3, x3, #0xc58
    19b0:	add	x1, x1, #0xac8
    19b4:	add	x0, x0, #0xae0
    19b8:	mov	w2, #0x234                 	// #564
    19bc:	bl	750 <__assert_fail@plt>
    19c0:	adrp	x3, 1000 <gconv@@Base+0x710>
    19c4:	adrp	x1, 1000 <gconv@@Base+0x710>
    19c8:	add	x3, x3, #0xc40
    19cc:	b	1864 <gconv@@Base+0xf74>
    19d0:	adrp	x3, 1000 <gconv@@Base+0x710>
    19d4:	adrp	x1, 1000 <gconv@@Base+0x710>
    19d8:	add	x3, x3, #0xc40
    19dc:	b	1884 <gconv@@Base+0xf94>
    19e0:	adrp	x3, 1000 <gconv@@Base+0x710>
    19e4:	adrp	x1, 1000 <gconv@@Base+0x710>
    19e8:	add	x3, x3, #0xc40
    19ec:	b	18a4 <gconv@@Base+0xfb4>
    19f0:	adrp	x3, 1000 <gconv@@Base+0x710>
    19f4:	adrp	x1, 1000 <gconv@@Base+0x710>
    19f8:	adrp	x0, 1000 <gconv@@Base+0x710>
    19fc:	add	x3, x3, #0xc58
    1a00:	add	x1, x1, #0xac8
    1a04:	add	x0, x0, #0xc18
    1a08:	mov	w2, #0x31e                 	// #798
    1a0c:	bl	750 <__assert_fail@plt>
    1a10:	ldr	x0, [sp, #160]
    1a14:	cbz	x0, 162c <gconv@@Base+0xd3c>
    1a18:	tbz	w18, #1, 162c <gconv@@Base+0xd3c>
    1a1c:	mov	x3, x0
    1a20:	mov	x0, x2
    1a24:	ldr	x1, [x3]
    1a28:	add	x1, x1, #0x1
    1a2c:	str	x1, [x3]
    1a30:	b	ff4 <gconv@@Base+0x704>
    1a34:	adrp	x3, 1000 <gconv@@Base+0x710>
    1a38:	add	x3, x3, #0xc40
    1a3c:	adrp	x1, 1000 <gconv@@Base+0x710>
    1a40:	adrp	x0, 1000 <gconv@@Base+0x710>
    1a44:	add	x1, x1, #0xaf8
    1a48:	add	x0, x0, #0xb38
    1a4c:	mov	w2, #0x1c9                 	// #457
    1a50:	bl	750 <__assert_fail@plt>
    1a54:	ldp	x0, x2, [sp, #208]
    1a58:	str	x2, [x14]
    1a5c:	ldr	x1, [sp, #224]
    1a60:	cmp	x1, x0
    1a64:	b.eq	e3c <gconv@@Base+0x54c>  // b.none
    1a68:	b	12e8 <gconv@@Base+0x9f8>
    1a6c:	adrp	x3, 1000 <gconv@@Base+0x710>
    1a70:	adrp	x1, 1000 <gconv@@Base+0x710>
    1a74:	add	x3, x3, #0xc30
    1a78:	b	1a40 <gconv@@Base+0x1150>
    1a7c:	adrp	x3, 1000 <gconv@@Base+0x710>
    1a80:	adrp	x1, 1000 <gconv@@Base+0x710>
    1a84:	add	x3, x3, #0xc30
    1a88:	b	1948 <gconv@@Base+0x1058>
    1a8c:	add	x0, x10, #0x4
    1a90:	str	x0, [sp, #216]
    1a94:	b	d4c <gconv@@Base+0x45c>
    1a98:	ldr	x0, [sp, #216]
    1a9c:	tbz	w18, #1, 192c <gconv@@Base+0x103c>
    1aa0:	b	160c <gconv@@Base+0xd1c>

Disassembly of section .fini:

0000000000001aa4 <.fini>:
    1aa4:	stp	x29, x30, [sp, #-16]!
    1aa8:	mov	x29, sp
    1aac:	ldp	x29, x30, [sp], #16
    1ab0:	ret
