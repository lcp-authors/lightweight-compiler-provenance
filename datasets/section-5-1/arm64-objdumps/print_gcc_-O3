
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//print_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b28 <_init>:
 b28:	stp	x29, x30, [sp, #-16]!
 b2c:	mov	x29, sp
 b30:	bl	cb0 <call_weak_fn>
 b34:	ldp	x29, x30, [sp], #16
 b38:	ret

Disassembly of section .plt:

0000000000000b40 <.plt>:
 b40:	stp	x16, x30, [sp, #-16]!
 b44:	adrp	x16, 11000 <__FRAME_END__+0xfc94>
 b48:	ldr	x17, [x16, #4088]
 b4c:	add	x16, x16, #0xff8
 b50:	br	x17
 b54:	nop
 b58:	nop
 b5c:	nop

0000000000000b60 <all_digits@plt>:
 b60:	adrp	x16, 12000 <all_digits>
 b64:	ldr	x17, [x16]
 b68:	add	x16, x16, #0x0
 b6c:	br	x17

0000000000000b70 <strlen@plt>:
 b70:	adrp	x16, 12000 <all_digits>
 b74:	ldr	x17, [x16, #8]
 b78:	add	x16, x16, #0x8
 b7c:	br	x17

0000000000000b80 <fputs@plt>:
 b80:	adrp	x16, 12000 <all_digits>
 b84:	ldr	x17, [x16, #16]
 b88:	add	x16, x16, #0x10
 b8c:	br	x17

0000000000000b90 <dup@plt>:
 b90:	adrp	x16, 12000 <all_digits>
 b94:	ldr	x17, [x16, #24]
 b98:	add	x16, x16, #0x18
 b9c:	br	x17

0000000000000ba0 <__cxa_finalize@plt>:
 ba0:	adrp	x16, 12000 <all_digits>
 ba4:	ldr	x17, [x16, #32]
 ba8:	add	x16, x16, #0x20
 bac:	br	x17

0000000000000bb0 <fputc@plt>:
 bb0:	adrp	x16, 12000 <all_digits>
 bb4:	ldr	x17, [x16, #40]
 bb8:	add	x16, x16, #0x28
 bbc:	br	x17

0000000000000bc0 <make_word@plt>:
 bc0:	adrp	x16, 12000 <all_digits>
 bc4:	ldr	x17, [x16, #48]
 bc8:	add	x16, x16, #0x30
 bcc:	br	x17

0000000000000bd0 <fclose@plt>:
 bd0:	adrp	x16, 12000 <all_digits>
 bd4:	ldr	x17, [x16, #56]
 bd8:	add	x16, x16, #0x38
 bdc:	br	x17

0000000000000be0 <builtin_help@plt>:
 be0:	adrp	x16, 12000 <all_digits>
 be4:	ldr	x17, [x16, #64]
 be8:	add	x16, x16, #0x40
 bec:	br	x17

0000000000000bf0 <fdopen@plt>:
 bf0:	adrp	x16, 12000 <all_digits>
 bf4:	ldr	x17, [x16, #72]
 bf8:	add	x16, x16, #0x48
 bfc:	br	x17

0000000000000c00 <builtin_usage@plt>:
 c00:	adrp	x16, 12000 <all_digits>
 c04:	ldr	x17, [x16, #80]
 c08:	add	x16, x16, #0x50
 c0c:	br	x17

0000000000000c10 <__gmon_start__@plt>:
 c10:	adrp	x16, 12000 <all_digits>
 c14:	ldr	x17, [x16, #88]
 c18:	add	x16, x16, #0x58
 c1c:	br	x17

0000000000000c20 <ansicstr@plt>:
 c20:	adrp	x16, 12000 <all_digits>
 c24:	ldr	x17, [x16, #96]
 c28:	add	x16, x16, #0x60
 c2c:	br	x17

0000000000000c30 <dispose_words@plt>:
 c30:	adrp	x16, 12000 <all_digits>
 c34:	ldr	x17, [x16, #104]
 c38:	add	x16, x16, #0x68
 c3c:	br	x17

0000000000000c40 <free@plt>:
 c40:	adrp	x16, 12000 <all_digits>
 c44:	ldr	x17, [x16, #112]
 c48:	add	x16, x16, #0x70
 c4c:	br	x17

0000000000000c50 <internal_getopt@plt>:
 c50:	adrp	x16, 12000 <all_digits>
 c54:	ldr	x17, [x16, #120]
 c58:	add	x16, x16, #0x78
 c5c:	br	x17

0000000000000c60 <reset_internal_getopt@plt>:
 c60:	adrp	x16, 12000 <all_digits>
 c64:	ldr	x17, [x16, #128]
 c68:	add	x16, x16, #0x80
 c6c:	br	x17

0000000000000c70 <fflush@plt>:
 c70:	adrp	x16, 12000 <all_digits>
 c74:	ldr	x17, [x16, #136]
 c78:	add	x16, x16, #0x88
 c7c:	br	x17

0000000000000c80 <legal_number@plt>:
 c80:	adrp	x16, 12000 <all_digits>
 c84:	ldr	x17, [x16, #144]
 c88:	add	x16, x16, #0x90
 c8c:	br	x17

0000000000000c90 <printf_builtin@plt>:
 c90:	adrp	x16, 12000 <all_digits>
 c94:	ldr	x17, [x16, #152]
 c98:	add	x16, x16, #0x98
 c9c:	br	x17

0000000000000ca0 <make_word_list@plt>:
 ca0:	adrp	x16, 12000 <all_digits>
 ca4:	ldr	x17, [x16, #160]
 ca8:	add	x16, x16, #0xa0
 cac:	br	x17

Disassembly of section .text:

0000000000000cb0 <call_weak_fn>:
     cb0:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
     cb4:	ldr	x0, [x0, #4040]
     cb8:	cbz	x0, cc0 <call_weak_fn+0x10>
     cbc:	b	c10 <__gmon_start__@plt>
     cc0:	ret
     cc4:	nop

0000000000000cc8 <deregister_tm_clones>:
     cc8:	adrp	x0, 12000 <all_digits>
     ccc:	add	x0, x0, #0x120
     cd0:	adrp	x1, 12000 <all_digits>
     cd4:	add	x1, x1, #0x120
     cd8:	cmp	x1, x0
     cdc:	b.eq	cf4 <deregister_tm_clones+0x2c>  // b.none
     ce0:	adrp	x1, 11000 <__FRAME_END__+0xfc94>
     ce4:	ldr	x1, [x1, #4008]
     ce8:	cbz	x1, cf4 <deregister_tm_clones+0x2c>
     cec:	mov	x16, x1
     cf0:	br	x16
     cf4:	ret

0000000000000cf8 <register_tm_clones>:
     cf8:	adrp	x0, 12000 <all_digits>
     cfc:	add	x0, x0, #0x120
     d00:	adrp	x1, 12000 <all_digits>
     d04:	add	x1, x1, #0x120
     d08:	sub	x1, x1, x0
     d0c:	lsr	x2, x1, #63
     d10:	add	x1, x2, x1, asr #3
     d14:	cmp	xzr, x1, asr #1
     d18:	asr	x1, x1, #1
     d1c:	b.eq	d34 <register_tm_clones+0x3c>  // b.none
     d20:	adrp	x2, 11000 <__FRAME_END__+0xfc94>
     d24:	ldr	x2, [x2, #4064]
     d28:	cbz	x2, d34 <register_tm_clones+0x3c>
     d2c:	mov	x16, x2
     d30:	br	x16
     d34:	ret

0000000000000d38 <__do_global_dtors_aux>:
     d38:	stp	x29, x30, [sp, #-32]!
     d3c:	mov	x29, sp
     d40:	str	x19, [sp, #16]
     d44:	adrp	x19, 12000 <all_digits>
     d48:	ldrb	w0, [x19, #288]
     d4c:	cbnz	w0, d74 <__do_global_dtors_aux+0x3c>
     d50:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
     d54:	ldr	x0, [x0, #4016]
     d58:	cbz	x0, d68 <__do_global_dtors_aux+0x30>
     d5c:	adrp	x0, 12000 <all_digits>
     d60:	ldr	x0, [x0, #176]
     d64:	bl	ba0 <__cxa_finalize@plt>
     d68:	bl	cc8 <deregister_tm_clones>
     d6c:	mov	w0, #0x1                   	// #1
     d70:	strb	w0, [x19, #288]
     d74:	ldr	x19, [sp, #16]
     d78:	ldp	x29, x30, [sp], #32
     d7c:	ret

0000000000000d80 <frame_dummy>:
     d80:	b	cf8 <register_tm_clones>
     d84:	nop

0000000000000d88 <print_builtin>:
     d88:	stp	x29, x30, [sp, #-112]!
     d8c:	mov	x29, sp
     d90:	stp	x21, x22, [sp, #32]
     d94:	adrp	x22, 11000 <__FRAME_END__+0xfc94>
     d98:	adrp	x21, 1000 <print_builtin+0x278>
     d9c:	stp	x19, x20, [sp, #16]
     da0:	mov	x19, x0
     da4:	add	x21, x21, #0x130
     da8:	stp	x23, x24, [sp, #48]
     dac:	mov	w20, #0x0                   	// #0
     db0:	mov	w23, #0x1                   	// #1
     db4:	stp	x25, x26, [sp, #64]
     db8:	mov	w24, #0x0                   	// #0
     dbc:	mov	x25, #0x0                   	// #0
     dc0:	str	x27, [sp, #80]
     dc4:	bl	c60 <reset_internal_getopt@plt>
     dc8:	ldr	x26, [x22, #4048]
     dcc:	add	x27, sp, #0x68
     dd0:	mov	x1, x21
     dd4:	mov	x0, x19
     dd8:	bl	c50 <internal_getopt@plt>
     ddc:	cmn	w0, #0x1
     de0:	b.eq	10b4 <print_builtin+0x32c>  // b.none
     de4:	cmp	w0, #0x6e
     de8:	b.eq	f88 <print_builtin+0x200>  // b.none
     dec:	b.gt	e0c <print_builtin+0x84>
     df0:	cmp	w0, #0x52
     df4:	b.eq	ec0 <print_builtin+0x138>  // b.none
     df8:	cmp	w0, #0x66
     dfc:	b.ne	e50 <print_builtin+0xc8>  // b.any
     e00:	ldr	x0, [x22, #4048]
     e04:	ldr	x25, [x0]
     e08:	b	dd0 <print_builtin+0x48>
     e0c:	cmp	w0, #0x73
     e10:	b.eq	dd0 <print_builtin+0x48>  // b.none
     e14:	b.le	e80 <print_builtin+0xf8>
     e18:	cmp	w0, #0x75
     e1c:	b.ne	e98 <print_builtin+0x110>  // b.any
     e20:	ldr	x0, [x26]
     e24:	bl	b60 <all_digits@plt>
     e28:	cbz	w0, 10c4 <print_builtin+0x33c>
     e2c:	ldr	x0, [x26]
     e30:	mov	x1, x27
     e34:	bl	c80 <legal_number@plt>
     e38:	cbz	w0, 10c4 <print_builtin+0x33c>
     e3c:	ldr	x0, [sp, #104]
     e40:	cmp	x0, w0, sxtw
     e44:	b.ne	10c4 <print_builtin+0x33c>  // b.any
     e48:	mov	w23, w0
     e4c:	b	dd0 <print_builtin+0x48>
     e50:	cmn	w0, #0x63
     e54:	b.ne	e98 <print_builtin+0x110>  // b.any
     e58:	mov	w20, #0x102                 	// #258
     e5c:	bl	be0 <builtin_help@plt>
     e60:	mov	w0, w20
     e64:	ldp	x19, x20, [sp, #16]
     e68:	ldp	x21, x22, [sp, #32]
     e6c:	ldp	x23, x24, [sp, #48]
     e70:	ldp	x25, x26, [sp, #64]
     e74:	ldr	x27, [sp, #80]
     e78:	ldp	x29, x30, [sp], #112
     e7c:	ret
     e80:	cmp	w0, #0x70
     e84:	b.eq	dd0 <print_builtin+0x48>  // b.none
     e88:	cmp	w0, #0x72
     e8c:	b.ne	e98 <print_builtin+0x110>  // b.any
     e90:	mov	w20, #0x1                   	// #1
     e94:	b	dd0 <print_builtin+0x48>
     e98:	bl	c00 <builtin_usage@plt>
     e9c:	mov	w20, #0x102                 	// #258
     ea0:	mov	w0, w20
     ea4:	ldp	x19, x20, [sp, #16]
     ea8:	ldp	x21, x22, [sp, #32]
     eac:	ldp	x23, x24, [sp, #48]
     eb0:	ldp	x25, x26, [sp, #64]
     eb4:	ldr	x27, [sp, #80]
     eb8:	ldp	x29, x30, [sp], #112
     ebc:	ret
     ec0:	adrp	x1, 11000 <__FRAME_END__+0xfc94>
     ec4:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
     ec8:	mov	w20, #0x2                   	// #2
     ecc:	ldr	x1, [x1, #4024]
     ed0:	ldr	x0, [x0, #4056]
     ed4:	ldr	x21, [x1]
     ed8:	str	x21, [x0]
     edc:	cbz	x21, ef4 <print_builtin+0x16c>
     ee0:	ldr	x1, [x21, #8]
     ee4:	ldr	x1, [x1]
     ee8:	ldrb	w2, [x1]
     eec:	cmp	w2, #0x2d
     ef0:	b.eq	ffc <print_builtin+0x274>  // b.none
     ef4:	cmp	w23, #0x1
     ef8:	b.ne	f90 <print_builtin+0x208>  // b.any
     efc:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
     f00:	adrp	x26, 12000 <all_digits>
     f04:	ldr	x0, [x0, #4032]
     f08:	ldr	x19, [x0]
     f0c:	str	x19, [x26, #296]
     f10:	cbnz	x25, fb4 <print_builtin+0x22c>
     f14:	cbz	w20, 1020 <print_builtin+0x298>
     f18:	cbnz	x21, f34 <print_builtin+0x1ac>
     f1c:	b	f58 <print_builtin+0x1d0>
     f20:	ldr	x1, [x26, #296]
     f24:	bl	bb0 <fputc@plt>
     f28:	ldr	x21, [x21]
     f2c:	cbz	x21, 1114 <print_builtin+0x38c>
     f30:	ldr	x19, [x26, #296]
     f34:	mov	x1, x19
     f38:	ldr	x0, [x21, #8]
     f3c:	add	x19, x26, #0x128
     f40:	ldr	x0, [x0]
     f44:	bl	b80 <fputs@plt>
     f48:	ldr	x1, [x21]
     f4c:	mov	w0, #0x20                  	// #32
     f50:	cbnz	x1, f20 <print_builtin+0x198>
     f54:	ldr	x19, [x26, #296]
     f58:	cbz	w24, 1100 <print_builtin+0x378>
     f5c:	mov	x0, x19
     f60:	mov	w20, #0x0                   	// #0
     f64:	bl	c70 <fflush@plt>
     f68:	mov	w0, w20
     f6c:	ldp	x19, x20, [sp, #16]
     f70:	ldp	x21, x22, [sp, #32]
     f74:	ldp	x23, x24, [sp, #48]
     f78:	ldp	x25, x26, [sp, #64]
     f7c:	ldr	x27, [sp, #80]
     f80:	ldp	x29, x30, [sp], #112
     f84:	ret
     f88:	mov	w24, #0x1                   	// #1
     f8c:	b	dd0 <print_builtin+0x48>
     f90:	adrp	x26, 12000 <all_digits>
     f94:	mov	w0, w23
     f98:	bl	b90 <dup@plt>
     f9c:	adrp	x1, 1000 <print_builtin+0x278>
     fa0:	add	x1, x1, #0x140
     fa4:	bl	bf0 <fdopen@plt>
     fa8:	mov	x19, x0
     fac:	str	x19, [x26, #296]
     fb0:	cbz	x25, f14 <print_builtin+0x18c>
     fb4:	mov	x0, x25
     fb8:	bl	bc0 <make_word@plt>
     fbc:	mov	x1, x21
     fc0:	bl	ca0 <make_word_list@plt>
     fc4:	mov	x19, x0
     fc8:	bl	c90 <printf_builtin@plt>
     fcc:	mov	w20, w0
     fd0:	str	xzr, [x19]
     fd4:	mov	x0, x19
     fd8:	bl	c30 <dispose_words@plt>
     fdc:	mov	w0, w20
     fe0:	ldp	x19, x20, [sp, #16]
     fe4:	ldp	x21, x22, [sp, #32]
     fe8:	ldp	x23, x24, [sp, #48]
     fec:	ldp	x25, x26, [sp, #64]
     ff0:	ldr	x27, [sp, #80]
     ff4:	ldp	x29, x30, [sp], #112
     ff8:	ret
     ffc:	ldrb	w2, [x1, #1]
    1000:	cmp	w2, #0x6e
    1004:	b.ne	ef4 <print_builtin+0x16c>  // b.any
    1008:	ldrb	w1, [x1, #2]
    100c:	cbnz	w1, ef4 <print_builtin+0x16c>
    1010:	ldr	x21, [x21]
    1014:	mov	w24, #0x1                   	// #1
    1018:	str	x21, [x0]
    101c:	b	ef4 <print_builtin+0x16c>
    1020:	str	wzr, [sp, #100]
    1024:	add	x25, sp, #0x64
    1028:	cbnz	x21, 103c <print_builtin+0x2b4>
    102c:	b	1090 <print_builtin+0x308>
    1030:	bl	bb0 <fputc@plt>
    1034:	ldr	x21, [x21]
    1038:	cbz	x21, 1090 <print_builtin+0x308>
    103c:	ldr	x0, [x21, #8]
    1040:	ldr	x22, [x0]
    1044:	mov	x0, x22
    1048:	bl	b70 <strlen@plt>
    104c:	mov	w2, #0x0                   	// #0
    1050:	mov	x1, x0
    1054:	mov	x3, x25
    1058:	mov	x4, #0x0                   	// #0
    105c:	mov	x0, x22
    1060:	bl	c20 <ansicstr@plt>
    1064:	mov	x1, x19
    1068:	mov	x22, x0
    106c:	bl	b80 <fputs@plt>
    1070:	mov	x0, x22
    1074:	bl	c40 <free@plt>
    1078:	ldr	w2, [sp, #100]
    107c:	mov	x1, x19
    1080:	mov	w0, #0x20                  	// #32
    1084:	cbnz	w2, 10a0 <print_builtin+0x318>
    1088:	ldr	x2, [x21]
    108c:	cbnz	x2, 1030 <print_builtin+0x2a8>
    1090:	cbnz	w24, 10a0 <print_builtin+0x318>
    1094:	ldr	x1, [x26, #296]
    1098:	mov	w0, #0xa                   	// #10
    109c:	bl	bb0 <fputc@plt>
    10a0:	cmp	w23, #0x1
    10a4:	b.eq	e60 <print_builtin+0xd8>  // b.none
    10a8:	ldr	x0, [x26, #296]
    10ac:	bl	bd0 <fclose@plt>
    10b0:	b	e60 <print_builtin+0xd8>
    10b4:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
    10b8:	ldr	x0, [x0, #4056]
    10bc:	ldr	x21, [x0]
    10c0:	b	ef4 <print_builtin+0x16c>
    10c4:	adrp	x1, 11000 <__FRAME_END__+0xfc94>
    10c8:	ldr	x0, [x1, #4024]
    10cc:	ldr	x0, [x0]
    10d0:	b	10d8 <print_builtin+0x350>
    10d4:	b.eq	10e8 <print_builtin+0x360>  // b.none
    10d8:	mov	x21, x19
    10dc:	ldr	x19, [x19]
    10e0:	cmp	x19, x0
    10e4:	cbnz	x19, 10d4 <print_builtin+0x34c>
    10e8:	adrp	x0, 11000 <__FRAME_END__+0xfc94>
    10ec:	ldr	x1, [x1, #4024]
    10f0:	ldr	x0, [x0, #4056]
    10f4:	str	x21, [x1]
    10f8:	str	x21, [x0]
    10fc:	b	ef4 <print_builtin+0x16c>
    1100:	mov	x1, x19
    1104:	mov	w0, #0xa                   	// #10
    1108:	bl	bb0 <fputc@plt>
    110c:	ldr	x19, [x26, #296]
    1110:	b	f5c <print_builtin+0x1d4>
    1114:	ldr	x19, [x19]
    1118:	b	f58 <print_builtin+0x1d0>

Disassembly of section .fini:

000000000000111c <_fini>:
    111c:	stp	x29, x30, [sp, #-16]!
    1120:	mov	x29, sp
    1124:	ldp	x29, x30, [sp], #16
    1128:	ret
