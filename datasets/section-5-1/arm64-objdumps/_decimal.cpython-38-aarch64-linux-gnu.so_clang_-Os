
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006420 <.init>:
    6420:	stp	x29, x30, [sp, #-16]!
    6424:	mov	x29, sp
    6428:	bl	6a90 <PyFloat_FromString@plt+0x10>
    642c:	ldp	x29, x30, [sp], #16
    6430:	ret

Disassembly of section .plt:

0000000000006440 <memcpy@plt-0x20>:
    6440:	stp	x16, x30, [sp, #-16]!
    6444:	adrp	x16, 49000 <PyInit__decimal@@Base+0x4249c>
    6448:	ldr	x17, [x16, #4088]
    644c:	add	x16, x16, #0xff8
    6450:	br	x17
    6454:	nop
    6458:	nop
    645c:	nop

0000000000006460 <memcpy@plt>:
    6460:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6464:	ldr	x17, [x16]
    6468:	add	x16, x16, #0x0
    646c:	br	x17

0000000000006470 <PyUnicode_FromFormat@plt>:
    6470:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16, #8]
    6478:	add	x16, x16, #0x8
    647c:	br	x17

0000000000006480 <memmove@plt>:
    6480:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #16]
    6488:	add	x16, x16, #0x10
    648c:	br	x17

0000000000006490 <PyList_New@plt>:
    6490:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #24]
    6498:	add	x16, x16, #0x18
    649c:	br	x17

00000000000064a0 <_PyUnicode_Ready@plt>:
    64a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #32]
    64a8:	add	x16, x16, #0x20
    64ac:	br	x17

00000000000064b0 <PyDict_SetItemString@plt>:
    64b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #40]
    64b8:	add	x16, x16, #0x28
    64bc:	br	x17

00000000000064c0 <strlen@plt>:
    64c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #48]
    64c8:	add	x16, x16, #0x30
    64cc:	br	x17

00000000000064d0 <PyDict_Size@plt>:
    64d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #56]
    64d8:	add	x16, x16, #0x38
    64dc:	br	x17

00000000000064e0 <fputs@plt>:
    64e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #64]
    64e8:	add	x16, x16, #0x40
    64ec:	br	x17

00000000000064f0 <mbstowcs@plt>:
    64f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #72]
    64f8:	add	x16, x16, #0x48
    64fc:	br	x17

0000000000006500 <raise@plt>:
    6500:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #80]
    6508:	add	x16, x16, #0x50
    650c:	br	x17

0000000000006510 <PyArg_ParseTupleAndKeywords@plt>:
    6510:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #88]
    6518:	add	x16, x16, #0x58
    651c:	br	x17

0000000000006520 <PyList_AsTuple@plt>:
    6520:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #96]
    6528:	add	x16, x16, #0x60
    652c:	br	x17

0000000000006530 <strtoll@plt>:
    6530:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #104]
    6538:	add	x16, x16, #0x68
    653c:	br	x17

0000000000006540 <PyObject_CallMethod@plt>:
    6540:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #112]
    6548:	add	x16, x16, #0x70
    654c:	br	x17

0000000000006550 <PyMem_Free@plt>:
    6550:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #120]
    6558:	add	x16, x16, #0x78
    655c:	br	x17

0000000000006560 <PyUnicode_FromWideChar@plt>:
    6560:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #128]
    6568:	add	x16, x16, #0x80
    656c:	br	x17

0000000000006570 <PyObject_GetAttrString@plt>:
    6570:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #136]
    6578:	add	x16, x16, #0x88
    657c:	br	x17

0000000000006580 <__cxa_finalize@plt>:
    6580:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #144]
    6588:	add	x16, x16, #0x90
    658c:	br	x17

0000000000006590 <_PyLong_New@plt>:
    6590:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #152]
    6598:	add	x16, x16, #0x98
    659c:	br	x17

00000000000065a0 <fputc@plt>:
    65a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #160]
    65a8:	add	x16, x16, #0xa0
    65ac:	br	x17

00000000000065b0 <PyUnicode_AsUTF8String@plt>:
    65b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #168]
    65b8:	add	x16, x16, #0xa8
    65bc:	br	x17

00000000000065c0 <_Py_Dealloc@plt>:
    65c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #176]
    65c8:	add	x16, x16, #0xb0
    65cc:	br	x17

00000000000065d0 <PyErr_NoMemory@plt>:
    65d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #184]
    65d8:	add	x16, x16, #0xb8
    65dc:	br	x17

00000000000065e0 <PyErr_SetObject@plt>:
    65e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #192]
    65e8:	add	x16, x16, #0xc0
    65ec:	br	x17

00000000000065f0 <__ctype_tolower_loc@plt>:
    65f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #200]
    65f8:	add	x16, x16, #0xc8
    65fc:	br	x17

0000000000006600 <snprintf@plt>:
    6600:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #208]
    6608:	add	x16, x16, #0xd0
    660c:	br	x17

0000000000006610 <log10@plt>:
    6610:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #216]
    6618:	add	x16, x16, #0xd8
    661c:	br	x17

0000000000006620 <localeconv@plt>:
    6620:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #224]
    6628:	add	x16, x16, #0xe0
    662c:	br	x17

0000000000006630 <malloc@plt>:
    6630:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #232]
    6638:	add	x16, x16, #0xe8
    663c:	br	x17

0000000000006640 <PyErr_SetString@plt>:
    6640:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #240]
    6648:	add	x16, x16, #0xf0
    664c:	br	x17

0000000000006650 <PyObject_IsInstance@plt>:
    6650:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #248]
    6658:	add	x16, x16, #0xf8
    665c:	br	x17

0000000000006660 <memset@plt>:
    6660:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #256]
    6668:	add	x16, x16, #0x100
    666c:	br	x17

0000000000006670 <PyContextVar_Set@plt>:
    6670:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #264]
    6678:	add	x16, x16, #0x108
    667c:	br	x17

0000000000006680 <PyObject_Free@plt>:
    6680:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #272]
    6688:	add	x16, x16, #0x110
    668c:	br	x17

0000000000006690 <PyLong_FromSsize_t@plt>:
    6690:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #280]
    6698:	add	x16, x16, #0x118
    669c:	br	x17

00000000000066a0 <PyFloat_FromDouble@plt>:
    66a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #288]
    66a8:	add	x16, x16, #0x120
    66ac:	br	x17

00000000000066b0 <PyType_Ready@plt>:
    66b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #296]
    66b8:	add	x16, x16, #0x128
    66bc:	br	x17

00000000000066c0 <calloc@plt>:
    66c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #304]
    66c8:	add	x16, x16, #0x130
    66cc:	br	x17

00000000000066d0 <PyLong_FromLong@plt>:
    66d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #312]
    66d8:	add	x16, x16, #0x138
    66dc:	br	x17

00000000000066e0 <PyLong_AsSsize_t@plt>:
    66e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #320]
    66e8:	add	x16, x16, #0x140
    66ec:	br	x17

00000000000066f0 <_PyLong_GCD@plt>:
    66f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #328]
    66f8:	add	x16, x16, #0x148
    66fc:	br	x17

0000000000006700 <PyErr_NewException@plt>:
    6700:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #336]
    6708:	add	x16, x16, #0x150
    670c:	br	x17

0000000000006710 <realloc@plt>:
    6710:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #344]
    6718:	add	x16, x16, #0x158
    671c:	br	x17

0000000000006720 <PyErr_Clear@plt>:
    6720:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #352]
    6728:	add	x16, x16, #0x160
    672c:	br	x17

0000000000006730 <PyContextVar_Get@plt>:
    6730:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #360]
    6738:	add	x16, x16, #0x168
    673c:	br	x17

0000000000006740 <PyBool_FromLong@plt>:
    6740:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #368]
    6748:	add	x16, x16, #0x170
    674c:	br	x17

0000000000006750 <PyContextVar_New@plt>:
    6750:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #376]
    6758:	add	x16, x16, #0x178
    675c:	br	x17

0000000000006760 <PyList_Append@plt>:
    6760:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #384]
    6768:	add	x16, x16, #0x180
    676c:	br	x17

0000000000006770 <__gmon_start__@plt>:
    6770:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #392]
    6778:	add	x16, x16, #0x188
    677c:	br	x17

0000000000006780 <PyObject_CallFunction@plt>:
    6780:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #400]
    6788:	add	x16, x16, #0x190
    678c:	br	x17

0000000000006790 <PyTuple_New@plt>:
    6790:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #408]
    6798:	add	x16, x16, #0x198
    679c:	br	x17

00000000000067a0 <PyObject_GenericGetAttr@plt>:
    67a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #416]
    67a8:	add	x16, x16, #0x1a0
    67ac:	br	x17

00000000000067b0 <abort@plt>:
    67b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #424]
    67b8:	add	x16, x16, #0x1a8
    67bc:	br	x17

00000000000067c0 <Py_BuildValue@plt>:
    67c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #432]
    67c8:	add	x16, x16, #0x1b0
    67cc:	br	x17

00000000000067d0 <PyErr_Occurred@plt>:
    67d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #440]
    67d8:	add	x16, x16, #0x1b8
    67dc:	br	x17

00000000000067e0 <PyModule_Create2@plt>:
    67e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #448]
    67e8:	add	x16, x16, #0x1c0
    67ec:	br	x17

00000000000067f0 <_PyUnicode_IsWhitespace@plt>:
    67f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #456]
    67f8:	add	x16, x16, #0x1c8
    67fc:	br	x17

0000000000006800 <puts@plt>:
    6800:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #464]
    6808:	add	x16, x16, #0x1d0
    680c:	br	x17

0000000000006810 <PyLong_AsLong@plt>:
    6810:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #472]
    6818:	add	x16, x16, #0x1d8
    681c:	br	x17

0000000000006820 <PyImport_ImportModule@plt>:
    6820:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #480]
    6828:	add	x16, x16, #0x1e0
    682c:	br	x17

0000000000006830 <PyObject_CallObject@plt>:
    6830:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #488]
    6838:	add	x16, x16, #0x1e8
    683c:	br	x17

0000000000006840 <PyObject_CallFunctionObjArgs@plt>:
    6840:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #496]
    6848:	add	x16, x16, #0x1f0
    684c:	br	x17

0000000000006850 <strcmp@plt>:
    6850:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #504]
    6858:	add	x16, x16, #0x1f8
    685c:	br	x17

0000000000006860 <PyDict_GetItemString@plt>:
    6860:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #512]
    6868:	add	x16, x16, #0x200
    686c:	br	x17

0000000000006870 <__ctype_b_loc@plt>:
    6870:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #520]
    6878:	add	x16, x16, #0x208
    687c:	br	x17

0000000000006880 <PyUnicode_CompareWithASCIIString@plt>:
    6880:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #528]
    6888:	add	x16, x16, #0x210
    688c:	br	x17

0000000000006890 <PyUnicode_DecodeUTF8@plt>:
    6890:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #536]
    6898:	add	x16, x16, #0x218
    689c:	br	x17

00000000000068a0 <_PyUnicode_ToDecimalDigit@plt>:
    68a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #544]
    68a8:	add	x16, x16, #0x220
    68ac:	br	x17

00000000000068b0 <PyFloat_AsDouble@plt>:
    68b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #552]
    68b8:	add	x16, x16, #0x228
    68bc:	br	x17

00000000000068c0 <PyObject_IsTrue@plt>:
    68c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #560]
    68c8:	add	x16, x16, #0x230
    68cc:	br	x17

00000000000068d0 <PyArg_ParseTuple@plt>:
    68d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #568]
    68d8:	add	x16, x16, #0x238
    68dc:	br	x17

00000000000068e0 <free@plt>:
    68e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #576]
    68e8:	add	x16, x16, #0x240
    68ec:	br	x17

00000000000068f0 <PyUnicode_Compare@plt>:
    68f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #584]
    68f8:	add	x16, x16, #0x248
    68fc:	br	x17

0000000000006900 <PyList_Size@plt>:
    6900:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #592]
    6908:	add	x16, x16, #0x250
    690c:	br	x17

0000000000006910 <PyDict_New@plt>:
    6910:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #600]
    6918:	add	x16, x16, #0x258
    691c:	br	x17

0000000000006920 <fwrite@plt>:
    6920:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #608]
    6928:	add	x16, x16, #0x260
    692c:	br	x17

0000000000006930 <PyLong_FromUnsignedLong@plt>:
    6930:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #616]
    6938:	add	x16, x16, #0x268
    693c:	br	x17

0000000000006940 <_PyObject_New@plt>:
    6940:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #624]
    6948:	add	x16, x16, #0x270
    694c:	br	x17

0000000000006950 <PyUnicode_FromString@plt>:
    6950:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #632]
    6958:	add	x16, x16, #0x278
    695c:	br	x17

0000000000006960 <PyModule_AddStringConstant@plt>:
    6960:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #640]
    6968:	add	x16, x16, #0x280
    696c:	br	x17

0000000000006970 <PyUnicode_InternFromString@plt>:
    6970:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #648]
    6978:	add	x16, x16, #0x288
    697c:	br	x17

0000000000006980 <PyModule_AddObject@plt>:
    6980:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #656]
    6988:	add	x16, x16, #0x290
    698c:	br	x17

0000000000006990 <PyDict_SetItem@plt>:
    6990:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #664]
    6998:	add	x16, x16, #0x298
    699c:	br	x17

00000000000069a0 <PyObject_GenericSetAttr@plt>:
    69a0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #672]
    69a8:	add	x16, x16, #0x2a0
    69ac:	br	x17

00000000000069b0 <PyType_IsSubtype@plt>:
    69b0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #680]
    69b8:	add	x16, x16, #0x2a8
    69bc:	br	x17

00000000000069c0 <PyUnicode_AsUTF8AndSize@plt>:
    69c0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #688]
    69c8:	add	x16, x16, #0x2b0
    69cc:	br	x17

00000000000069d0 <PyTuple_Size@plt>:
    69d0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #696]
    69d8:	add	x16, x16, #0x2b8
    69dc:	br	x17

00000000000069e0 <PyComplex_AsCComplex@plt>:
    69e0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #704]
    69e8:	add	x16, x16, #0x2c0
    69ec:	br	x17

00000000000069f0 <PyComplex_FromDoubles@plt>:
    69f0:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #712]
    69f8:	add	x16, x16, #0x2c8
    69fc:	br	x17

0000000000006a00 <PyErr_Format@plt>:
    6a00:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #720]
    6a08:	add	x16, x16, #0x2d0
    6a0c:	br	x17

0000000000006a10 <__errno_location@plt>:
    6a10:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #728]
    6a18:	add	x16, x16, #0x2d8
    6a1c:	br	x17

0000000000006a20 <PyList_GetItem@plt>:
    6a20:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #736]
    6a28:	add	x16, x16, #0x2e0
    6a2c:	br	x17

0000000000006a30 <PyMem_Malloc@plt>:
    6a30:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #744]
    6a38:	add	x16, x16, #0x2e8
    6a3c:	br	x17

0000000000006a40 <PyUnicode_New@plt>:
    6a40:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #752]
    6a48:	add	x16, x16, #0x2f0
    6a4c:	br	x17

0000000000006a50 <PyTuple_Pack@plt>:
    6a50:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #760]
    6a58:	add	x16, x16, #0x2f8
    6a5c:	br	x17

0000000000006a60 <fprintf@plt>:
    6a60:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #768]
    6a68:	add	x16, x16, #0x300
    6a6c:	br	x17

0000000000006a70 <PyDict_GetItemWithError@plt>:
    6a70:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #776]
    6a78:	add	x16, x16, #0x308
    6a7c:	br	x17

0000000000006a80 <PyFloat_FromString@plt>:
    6a80:	adrp	x16, 4a000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #784]
    6a88:	add	x16, x16, #0x310
    6a8c:	br	x17

Disassembly of section .text:

0000000000006a90 <PyInit__decimal@@Base-0xd4>:
    6a90:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    6a94:	ldr	x0, [x0, #3984]
    6a98:	cbz	x0, 6aa0 <PyFloat_FromString@plt+0x20>
    6a9c:	b	6770 <__gmon_start__@plt>
    6aa0:	ret
    6aa4:	nop
    6aa8:	adrp	x0, 4c000 <PyInit__decimal@@Base+0x4549c>
    6aac:	add	x0, x0, #0x578
    6ab0:	adrp	x1, 4c000 <PyInit__decimal@@Base+0x4549c>
    6ab4:	add	x1, x1, #0x578
    6ab8:	cmp	x1, x0
    6abc:	b.eq	6ad4 <PyFloat_FromString@plt+0x54>  // b.none
    6ac0:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
    6ac4:	ldr	x1, [x1, #3856]
    6ac8:	cbz	x1, 6ad4 <PyFloat_FromString@plt+0x54>
    6acc:	mov	x16, x1
    6ad0:	br	x16
    6ad4:	ret
    6ad8:	adrp	x0, 4c000 <PyInit__decimal@@Base+0x4549c>
    6adc:	add	x0, x0, #0x578
    6ae0:	adrp	x1, 4c000 <PyInit__decimal@@Base+0x4549c>
    6ae4:	add	x1, x1, #0x578
    6ae8:	sub	x1, x1, x0
    6aec:	lsr	x2, x1, #63
    6af0:	add	x1, x2, x1, asr #3
    6af4:	cmp	xzr, x1, asr #1
    6af8:	asr	x1, x1, #1
    6afc:	b.eq	6b14 <PyFloat_FromString@plt+0x94>  // b.none
    6b00:	adrp	x2, 49000 <PyInit__decimal@@Base+0x4249c>
    6b04:	ldr	x2, [x2, #4056]
    6b08:	cbz	x2, 6b14 <PyFloat_FromString@plt+0x94>
    6b0c:	mov	x16, x2
    6b10:	br	x16
    6b14:	ret
    6b18:	stp	x29, x30, [sp, #-32]!
    6b1c:	mov	x29, sp
    6b20:	str	x19, [sp, #16]
    6b24:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
    6b28:	ldrb	w0, [x19, #1400]
    6b2c:	cbnz	w0, 6b54 <PyFloat_FromString@plt+0xd4>
    6b30:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    6b34:	ldr	x0, [x0, #3896]
    6b38:	cbz	x0, 6b48 <PyFloat_FromString@plt+0xc8>
    6b3c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6b40:	ldr	x0, [x0, #792]
    6b44:	bl	6580 <__cxa_finalize@plt>
    6b48:	bl	6aa8 <PyFloat_FromString@plt+0x28>
    6b4c:	mov	w0, #0x1                   	// #1
    6b50:	strb	w0, [x19, #1400]
    6b54:	ldr	x19, [sp, #16]
    6b58:	ldp	x29, x30, [sp], #32
    6b5c:	ret
    6b60:	b	6ad8 <PyFloat_FromString@plt+0x58>

0000000000006b64 <PyInit__decimal@@Base>:
    6b64:	sub	sp, sp, #0x70
    6b68:	stp	x29, x30, [sp, #16]
    6b6c:	stp	x28, x27, [sp, #32]
    6b70:	stp	x26, x25, [sp, #48]
    6b74:	stp	x24, x23, [sp, #64]
    6b78:	stp	x22, x21, [sp, #80]
    6b7c:	stp	x20, x19, [sp, #96]
    6b80:	add	x29, sp, #0x10
    6b84:	adrp	x11, 49000 <PyInit__decimal@@Base+0x4249c>
    6b88:	adrp	x13, 49000 <PyInit__decimal@@Base+0x4249c>
    6b8c:	adrp	x17, 49000 <PyInit__decimal@@Base+0x4249c>
    6b90:	ldr	x11, [x11, #4064]
    6b94:	ldr	x13, [x13, #3944]
    6b98:	ldr	x17, [x17, #3888]
    6b9c:	adrp	x9, 7000 <PyInit__decimal@@Base+0x49c>
    6ba0:	adrp	x15, 1f000 <PyInit__decimal@@Base+0x1849c>
    6ba4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6ba8:	add	x9, x9, #0x640
    6bac:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bb0:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bb4:	adrp	x14, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bb8:	add	x15, x15, #0x664
    6bbc:	adrp	x16, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bc0:	mov	w0, #0x4                   	// #4
    6bc4:	str	x9, [x8, #1344]
    6bc8:	str	x11, [x10, #1360]
    6bcc:	str	x13, [x12, #1368]
    6bd0:	str	x15, [x14, #1376]
    6bd4:	str	x17, [x16, #1384]
    6bd8:	bl	1bcf4 <PyInit__decimal@@Base+0x15190>
    6bdc:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    6be0:	add	x0, x0, #0xbdc
    6be4:	mov	x1, xzr
    6be8:	bl	6750 <PyContextVar_New@plt>
    6bec:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bf0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bf4:	adrp	x24, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bf8:	adrp	x28, 4c000 <PyInit__decimal@@Base+0x4549c>
    6bfc:	adrp	x27, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c00:	adrp	x26, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c04:	adrp	x25, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c08:	str	x0, [x23, #1408]
    6c0c:	cbz	x0, 7214 <PyInit__decimal@@Base+0x6b0>
    6c10:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    6c14:	ldr	x8, [x8, #4040]
    6c18:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c1c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    6c20:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6c24:	ldr	x8, [x8, #96]
    6c28:	add	x1, x1, #0xbec
    6c2c:	ldr	x9, [x8, #16]
    6c30:	str	x9, [x10, #1416]
    6c34:	ldr	x9, [x8, #232]
    6c38:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c3c:	str	x9, [x10, #1424]
    6c40:	ldr	x8, [x8, #40]
    6c44:	ldr	x0, [x0, #3864]
    6c48:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c4c:	str	x8, [x10, #1432]
    6c50:	ldr	x9, [x0, #96]
    6c54:	ldr	x8, [x9, #64]
    6c58:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c5c:	str	x8, [x9, #1440]
    6c60:	bl	7644 <PyInit__decimal@@Base+0xae0>
    6c64:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c68:	str	x0, [x8, #1448]
    6c6c:	cbz	x0, 728c <PyInit__decimal@@Base+0x728>
    6c70:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    6c74:	ldr	x0, [x0, #4040]
    6c78:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6c7c:	add	x1, x1, #0xbfd
    6c80:	bl	7644 <PyInit__decimal@@Base+0xae0>
    6c84:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6c88:	str	x0, [x8, #1456]
    6c8c:	cbz	x0, 728c <PyInit__decimal@@Base+0x728>
    6c90:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    6c94:	ldr	x8, [x8, #4032]
    6c98:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6c9c:	add	x0, x0, #0x320
    6ca0:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
    6ca4:	adrp	x10, 4a000 <PyInit__decimal@@Base+0x4349c>
    6ca8:	adrp	x11, 4a000 <PyInit__decimal@@Base+0x4349c>
    6cac:	str	x8, [x0, #256]
    6cb0:	str	x8, [x9, #1472]
    6cb4:	str	x8, [x10, #1888]
    6cb8:	str	x8, [x11, #2304]
    6cbc:	bl	66b0 <PyType_Ready@plt>
    6cc0:	tbnz	w0, #31, 728c <PyInit__decimal@@Base+0x728>
    6cc4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6cc8:	add	x0, x0, #0x4c0
    6ccc:	bl	66b0 <PyType_Ready@plt>
    6cd0:	tbnz	w0, #31, 728c <PyInit__decimal@@Base+0x728>
    6cd4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6cd8:	add	x0, x0, #0x800
    6cdc:	bl	66b0 <PyType_Ready@plt>
    6ce0:	tbnz	w0, #31, 728c <PyInit__decimal@@Base+0x728>
    6ce4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6ce8:	add	x0, x0, #0x660
    6cec:	bl	66b0 <PyType_Ready@plt>
    6cf0:	tbnz	w0, #31, 728c <PyInit__decimal@@Base+0x728>
    6cf4:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
    6cf8:	add	x0, x0, #0x38a
    6cfc:	bl	6950 <PyUnicode_FromString@plt>
    6d00:	mov	x21, x0
    6d04:	cbz	x0, 7228 <PyInit__decimal@@Base+0x6c4>
    6d08:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    6d0c:	ldr	x0, [x8, #1064]
    6d10:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6d14:	add	x1, x1, #0xc08
    6d18:	mov	x2, x21
    6d1c:	bl	64b0 <PyDict_SetItemString@plt>
    6d20:	tbnz	w0, #31, 7234 <PyInit__decimal@@Base+0x6d0>
    6d24:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    6d28:	ldr	x0, [x8, #1480]
    6d2c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6d30:	add	x1, x1, #0xc08
    6d34:	mov	x2, x21
    6d38:	bl	64b0 <PyDict_SetItemString@plt>
    6d3c:	tbnz	w0, #31, 7234 <PyInit__decimal@@Base+0x6d0>
    6d40:	ldr	x8, [x21]
    6d44:	subs	x8, x8, #0x1
    6d48:	str	x8, [x21]
    6d4c:	b.ne	6d58 <PyInit__decimal@@Base+0x1f4>  // b.any
    6d50:	mov	x0, x21
    6d54:	bl	65c0 <_Py_Dealloc@plt>
    6d58:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    6d5c:	add	x0, x0, #0xc13
    6d60:	bl	6820 <PyImport_ImportModule@plt>
    6d64:	mov	x21, x0
    6d68:	cbz	x0, 7228 <PyInit__decimal@@Base+0x6c4>
    6d6c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6d70:	add	x1, x1, #0xc1b
    6d74:	mov	x0, x21
    6d78:	bl	6570 <PyObject_GetAttrString@plt>
    6d7c:	mov	x20, x0
    6d80:	cbz	x0, 7258 <PyInit__decimal@@Base+0x6f4>
    6d84:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6d88:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    6d8c:	adrp	x3, 4a000 <PyInit__decimal@@Base+0x4349c>
    6d90:	add	x1, x1, #0xc22
    6d94:	add	x2, x2, #0x3df
    6d98:	add	x3, x3, #0x320
    6d9c:	mov	x0, x20
    6da0:	bl	6540 <PyObject_CallMethod@plt>
    6da4:	cbz	x0, 7258 <PyInit__decimal@@Base+0x6f4>
    6da8:	ldr	x8, [x0]
    6dac:	subs	x8, x8, #0x1
    6db0:	str	x8, [x0]
    6db4:	b.ne	6dbc <PyInit__decimal@@Base+0x258>  // b.any
    6db8:	bl	65c0 <_Py_Dealloc@plt>
    6dbc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6dc0:	add	x1, x1, #0xc2b
    6dc4:	mov	x0, x21
    6dc8:	bl	6570 <PyObject_GetAttrString@plt>
    6dcc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6dd0:	str	x0, [x8, #1464]
    6dd4:	cbz	x0, 7258 <PyInit__decimal@@Base+0x6f4>
    6dd8:	ldr	x8, [x21]
    6ddc:	subs	x8, x8, #0x1
    6de0:	str	x8, [x21]
    6de4:	b.ne	6df0 <PyInit__decimal@@Base+0x28c>  // b.any
    6de8:	mov	x0, x21
    6dec:	bl	65c0 <_Py_Dealloc@plt>
    6df0:	ldr	x8, [x20]
    6df4:	subs	x8, x8, #0x1
    6df8:	str	x8, [x20]
    6dfc:	b.ne	6e08 <PyInit__decimal@@Base+0x2a4>  // b.any
    6e00:	mov	x0, x20
    6e04:	bl	65c0 <_Py_Dealloc@plt>
    6e08:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e0c:	add	x0, x0, #0xc34
    6e10:	bl	6820 <PyImport_ImportModule@plt>
    6e14:	mov	x20, x0
    6e18:	cbz	x0, 7418 <PyInit__decimal@@Base+0x8b4>
    6e1c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e20:	adrp	x2, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e24:	adrp	x3, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e28:	adrp	x4, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e2c:	add	x1, x1, #0xc40
    6e30:	add	x2, x2, #0xc4b
    6e34:	add	x3, x3, #0xc50
    6e38:	add	x4, x4, #0xc5d
    6e3c:	mov	x0, x20
    6e40:	bl	6540 <PyObject_CallMethod@plt>
    6e44:	str	x0, [x28, #1472]
    6e48:	cbz	x0, 7418 <PyInit__decimal@@Base+0x8b4>
    6e4c:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
    6e50:	add	x0, x0, #0x38a
    6e54:	bl	6950 <PyUnicode_FromString@plt>
    6e58:	mov	x21, x0
    6e5c:	cbz	x0, 7420 <PyInit__decimal@@Base+0x8bc>
    6e60:	ldr	x8, [x28, #1472]
    6e64:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e68:	add	x1, x1, #0xc08
    6e6c:	mov	x2, x21
    6e70:	ldr	x0, [x8, #264]
    6e74:	bl	64b0 <PyDict_SetItemString@plt>
    6e78:	tbnz	w0, #31, 7238 <PyInit__decimal@@Base+0x6d4>
    6e7c:	ldr	x8, [x21]
    6e80:	subs	x8, x8, #0x1
    6e84:	str	x8, [x21]
    6e88:	b.ne	6e94 <PyInit__decimal@@Base+0x330>  // b.any
    6e8c:	mov	x0, x21
    6e90:	bl	65c0 <_Py_Dealloc@plt>
    6e94:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    6e98:	add	x0, x0, #0xc72
    6e9c:	bl	6820 <PyImport_ImportModule@plt>
    6ea0:	mov	x21, x0
    6ea4:	cbz	x0, 7420 <PyInit__decimal@@Base+0x8bc>
    6ea8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6eac:	add	x1, x1, #0xc82
    6eb0:	mov	x0, x21
    6eb4:	bl	6570 <PyObject_GetAttrString@plt>
    6eb8:	mov	x22, x0
    6ebc:	cbz	x0, 7428 <PyInit__decimal@@Base+0x8c4>
    6ec0:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    6ec4:	ldr	x0, [x0, #4000]
    6ec8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6ecc:	adrp	x2, 36000 <PyInit__decimal@@Base+0x2f49c>
    6ed0:	adrp	x3, 4a000 <PyInit__decimal@@Base+0x4349c>
    6ed4:	add	x1, x1, #0xc91
    6ed8:	add	x2, x2, #0xc99
    6edc:	add	x3, x3, #0x800
    6ee0:	mov	x4, x22
    6ee4:	bl	6780 <PyObject_CallFunction@plt>
    6ee8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6eec:	str	x0, [x8, #1480]
    6ef0:	cbz	x0, 7428 <PyInit__decimal@@Base+0x8c4>
    6ef4:	ldr	x8, [x20]
    6ef8:	subs	x8, x8, #0x1
    6efc:	str	x8, [x20]
    6f00:	b.ne	6f0c <PyInit__decimal@@Base+0x3a8>  // b.any
    6f04:	mov	x0, x20
    6f08:	bl	65c0 <_Py_Dealloc@plt>
    6f0c:	ldr	x8, [x21]
    6f10:	subs	x8, x8, #0x1
    6f14:	str	x8, [x21]
    6f18:	b.ne	6f24 <PyInit__decimal@@Base+0x3c0>  // b.any
    6f1c:	mov	x0, x21
    6f20:	bl	65c0 <_Py_Dealloc@plt>
    6f24:	ldr	x8, [x22]
    6f28:	subs	x8, x8, #0x1
    6f2c:	str	x8, [x22]
    6f30:	b.ne	6f3c <PyInit__decimal@@Base+0x3d8>  // b.any
    6f34:	mov	x0, x22
    6f38:	bl	65c0 <_Py_Dealloc@plt>
    6f3c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    6f40:	add	x0, x0, #0x9a0
    6f44:	mov	w1, #0x3f5                 	// #1013
    6f48:	bl	67e0 <PyModule_Create2@plt>
    6f4c:	mov	x19, x0
    6f50:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    6f54:	adrp	x2, 4a000 <PyInit__decimal@@Base+0x4349c>
    6f58:	add	x2, x2, #0x320
    6f5c:	ldr	x8, [x2]
    6f60:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    6f64:	add	x1, x1, #0x735
    6f68:	mov	x0, x19
    6f6c:	add	x8, x8, #0x1
    6f70:	str	x8, [x2]
    6f74:	bl	6980 <PyModule_AddObject@plt>
    6f78:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    6f7c:	adrp	x2, 4a000 <PyInit__decimal@@Base+0x4349c>
    6f80:	add	x2, x2, #0x4c0
    6f84:	ldr	x8, [x2]
    6f88:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    6f8c:	add	x1, x1, #0x53b
    6f90:	mov	x0, x19
    6f94:	add	x8, x8, #0x1
    6f98:	str	x8, [x2]
    6f9c:	bl	6980 <PyModule_AddObject@plt>
    6fa0:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    6fa4:	ldr	x2, [x28, #1472]
    6fa8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6fac:	add	x1, x1, #0xc50
    6fb0:	mov	x0, x19
    6fb4:	ldr	x8, [x2]
    6fb8:	add	x8, x8, #0x1
    6fbc:	str	x8, [x2]
    6fc0:	bl	6980 <PyModule_AddObject@plt>
    6fc4:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    6fc8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    6fcc:	ldr	x8, [x8, #3960]
    6fd0:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    6fd4:	add	x0, x0, #0xca4
    6fd8:	mov	x2, xzr
    6fdc:	ldr	x1, [x8]
    6fe0:	bl	6700 <PyErr_NewException@plt>
    6fe4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    6fe8:	str	x0, [x8, #1488]
    6fec:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    6ff0:	ldr	x8, [x0]
    6ff4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    6ff8:	mov	x2, x0
    6ffc:	add	x1, x1, #0xcac
    7000:	add	x8, x8, #0x1
    7004:	str	x8, [x0]
    7008:	mov	x0, x19
    700c:	bl	6980 <PyModule_AddObject@plt>
    7010:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7014:	mov	w0, #0x9                   	// #9
    7018:	bl	6790 <PyTuple_New@plt>
    701c:	str	x0, [x24, #1496]
    7020:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    7024:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    7028:	add	x21, x21, #0xb20
    702c:	mov	w22, #0x58                  	// #88
    7030:	ldur	w8, [x21, #-8]
    7034:	cmp	w8, #0x7ff
    7038:	b.gt	7060 <PyInit__decimal@@Base+0x4fc>
    703c:	cmp	w8, #0x4
    7040:	b.eq	7090 <PyInit__decimal@@Base+0x52c>  // b.none
    7044:	cmp	w8, #0x400
    7048:	b.ne	70c4 <PyInit__decimal@@Base+0x560>  // b.any
    704c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7050:	ldr	x1, [x8, #1488]
    7054:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7058:	ldr	x8, [x8, #3936]
    705c:	b	70a0 <PyInit__decimal@@Base+0x53c>
    7060:	cmp	w8, #0x800
    7064:	b.eq	70a8 <PyInit__decimal@@Base+0x544>  // b.none
    7068:	cmp	w8, #0x4, lsl #12
    706c:	b.ne	70c4 <PyInit__decimal@@Base+0x560>  // b.any
    7070:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    7074:	add	x8, x8, #0xac0
    7078:	ldr	x1, [x8, #32]
    707c:	ldr	x2, [x8, #64]
    7080:	ldr	x3, [x8]
    7084:	mov	w0, #0x3                   	// #3
    7088:	bl	6a50 <PyTuple_Pack@plt>
    708c:	b	70d4 <PyInit__decimal@@Base+0x570>
    7090:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7094:	ldr	x1, [x8, #1488]
    7098:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    709c:	ldr	x8, [x8, #4016]
    70a0:	ldr	x2, [x8]
    70a4:	b	70b8 <PyInit__decimal@@Base+0x554>
    70a8:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    70ac:	add	x8, x8, #0xae0
    70b0:	ldr	x1, [x8]
    70b4:	ldr	x2, [x8, #32]
    70b8:	mov	w0, #0x2                   	// #2
    70bc:	bl	6a50 <PyTuple_Pack@plt>
    70c0:	b	70d4 <PyInit__decimal@@Base+0x570>
    70c4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    70c8:	ldr	x1, [x8, #1488]
    70cc:	mov	w0, #0x1                   	// #1
    70d0:	bl	6a50 <PyTuple_Pack@plt>
    70d4:	mov	x20, x0
    70d8:	cbz	x0, 7294 <PyInit__decimal@@Base+0x730>
    70dc:	ldur	x0, [x21, #-16]
    70e0:	mov	x1, x20
    70e4:	mov	x2, xzr
    70e8:	bl	6700 <PyErr_NewException@plt>
    70ec:	str	x0, [x21]
    70f0:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    70f4:	ldr	x8, [x20]
    70f8:	mov	x2, x0
    70fc:	subs	x8, x8, #0x1
    7100:	str	x8, [x20]
    7104:	b.ne	7114 <PyInit__decimal@@Base+0x5b0>  // b.any
    7108:	mov	x0, x20
    710c:	bl	65c0 <_Py_Dealloc@plt>
    7110:	ldr	x2, [x21]
    7114:	ldr	x8, [x2]
    7118:	mov	x0, x19
    711c:	add	x8, x8, #0x1
    7120:	str	x8, [x2]
    7124:	ldur	x1, [x21, #-24]
    7128:	bl	6980 <PyModule_AddObject@plt>
    712c:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7130:	ldr	x8, [x21], #-32
    7134:	ldr	x9, [x8]
    7138:	add	x9, x9, #0x1
    713c:	str	x9, [x8]
    7140:	ldr	x9, [x24, #1496]
    7144:	str	x8, [x9, x22]
    7148:	sub	x22, x22, #0x8
    714c:	cmp	x22, #0x10
    7150:	b.ne	7030 <PyInit__decimal@@Base+0x4cc>  // b.any
    7154:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    7158:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    715c:	add	x8, x8, #0xb60
    7160:	ldr	x1, [x21, #2592]
    7164:	ldr	x9, [x8, #8]
    7168:	str	x1, [x8]
    716c:	cbz	x9, 7430 <PyInit__decimal@@Base+0x8cc>
    7170:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    7174:	add	x22, x22, #0xb88
    7178:	ldur	w8, [x22, #-16]
    717c:	cmp	w8, #0x10
    7180:	b.ne	719c <PyInit__decimal@@Base+0x638>  // b.any
    7184:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7188:	ldr	x8, [x8, #4016]
    718c:	mov	w0, #0x2                   	// #2
    7190:	ldr	x2, [x8]
    7194:	bl	6a50 <PyTuple_Pack@plt>
    7198:	b	71a4 <PyInit__decimal@@Base+0x640>
    719c:	mov	w0, #0x1                   	// #1
    71a0:	bl	6a50 <PyTuple_Pack@plt>
    71a4:	mov	x20, x0
    71a8:	cbz	x0, 7294 <PyInit__decimal@@Base+0x730>
    71ac:	ldur	x0, [x22, #-24]
    71b0:	mov	x1, x20
    71b4:	mov	x2, xzr
    71b8:	bl	6700 <PyErr_NewException@plt>
    71bc:	stur	x0, [x22, #-8]
    71c0:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    71c4:	ldr	x8, [x20]
    71c8:	mov	x2, x0
    71cc:	subs	x8, x8, #0x1
    71d0:	str	x8, [x20]
    71d4:	b.ne	71e4 <PyInit__decimal@@Base+0x680>  // b.any
    71d8:	mov	x0, x20
    71dc:	bl	65c0 <_Py_Dealloc@plt>
    71e0:	ldur	x2, [x22, #-8]
    71e4:	ldr	x8, [x2]
    71e8:	mov	x0, x19
    71ec:	add	x8, x8, #0x1
    71f0:	str	x8, [x2]
    71f4:	ldur	x1, [x22, #-32]
    71f8:	bl	6980 <PyModule_AddObject@plt>
    71fc:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7200:	ldr	x8, [x22]
    7204:	cbz	x8, 7430 <PyInit__decimal@@Base+0x8cc>
    7208:	ldr	x1, [x21, #2592]
    720c:	add	x22, x22, #0x20
    7210:	b	7178 <PyInit__decimal@@Base+0x614>
    7214:	mov	x19, xzr
    7218:	mov	x20, xzr
    721c:	mov	x21, xzr
    7220:	mov	x22, xzr
    7224:	b	72a0 <PyInit__decimal@@Base+0x73c>
    7228:	mov	x19, xzr
    722c:	mov	x20, xzr
    7230:	b	7298 <PyInit__decimal@@Base+0x734>
    7234:	mov	x20, xzr
    7238:	mov	x19, xzr
    723c:	ldr	x8, [x21]
    7240:	subs	x8, x8, #0x1
    7244:	str	x8, [x21]
    7248:	b.ne	7294 <PyInit__decimal@@Base+0x730>  // b.any
    724c:	mov	x0, x21
    7250:	bl	65c0 <_Py_Dealloc@plt>
    7254:	b	7294 <PyInit__decimal@@Base+0x730>
    7258:	ldr	x8, [x21]
    725c:	subs	x8, x8, #0x1
    7260:	str	x8, [x21]
    7264:	b.ne	7270 <PyInit__decimal@@Base+0x70c>  // b.any
    7268:	mov	x0, x21
    726c:	bl	65c0 <_Py_Dealloc@plt>
    7270:	cbz	x20, 7418 <PyInit__decimal@@Base+0x8b4>
    7274:	ldr	x8, [x20]
    7278:	subs	x8, x8, #0x1
    727c:	str	x8, [x20]
    7280:	b.ne	728c <PyInit__decimal@@Base+0x728>  // b.any
    7284:	mov	x0, x20
    7288:	bl	65c0 <_Py_Dealloc@plt>
    728c:	mov	x19, xzr
    7290:	mov	x20, xzr
    7294:	mov	x21, xzr
    7298:	mov	x22, xzr
    729c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    72a0:	ldr	x0, [x8, #1464]
    72a4:	cbz	x0, 72c0 <PyInit__decimal@@Base+0x75c>
    72a8:	str	xzr, [x8, #1464]
    72ac:	ldr	x8, [x0]
    72b0:	subs	x8, x8, #0x1
    72b4:	str	x8, [x0]
    72b8:	b.ne	72c0 <PyInit__decimal@@Base+0x75c>  // b.any
    72bc:	bl	65c0 <_Py_Dealloc@plt>
    72c0:	cbz	x20, 72dc <PyInit__decimal@@Base+0x778>
    72c4:	ldr	x8, [x20]
    72c8:	subs	x8, x8, #0x1
    72cc:	str	x8, [x20]
    72d0:	b.ne	72dc <PyInit__decimal@@Base+0x778>  // b.any
    72d4:	mov	x0, x20
    72d8:	bl	65c0 <_Py_Dealloc@plt>
    72dc:	cbz	x21, 72f8 <PyInit__decimal@@Base+0x794>
    72e0:	ldr	x8, [x21]
    72e4:	subs	x8, x8, #0x1
    72e8:	str	x8, [x21]
    72ec:	b.ne	72f8 <PyInit__decimal@@Base+0x794>  // b.any
    72f0:	mov	x0, x21
    72f4:	bl	65c0 <_Py_Dealloc@plt>
    72f8:	cbz	x22, 7314 <PyInit__decimal@@Base+0x7b0>
    72fc:	ldr	x8, [x22]
    7300:	subs	x8, x8, #0x1
    7304:	str	x8, [x22]
    7308:	b.ne	7314 <PyInit__decimal@@Base+0x7b0>  // b.any
    730c:	mov	x0, x22
    7310:	bl	65c0 <_Py_Dealloc@plt>
    7314:	ldr	x0, [x24, #1496]
    7318:	cbz	x0, 7334 <PyInit__decimal@@Base+0x7d0>
    731c:	str	xzr, [x24, #1496]
    7320:	ldr	x8, [x0]
    7324:	subs	x8, x8, #0x1
    7328:	str	x8, [x0]
    732c:	b.ne	7334 <PyInit__decimal@@Base+0x7d0>  // b.any
    7330:	bl	65c0 <_Py_Dealloc@plt>
    7334:	ldr	x0, [x28, #1472]
    7338:	cbz	x0, 7354 <PyInit__decimal@@Base+0x7f0>
    733c:	str	xzr, [x28, #1472]
    7340:	ldr	x8, [x0]
    7344:	subs	x8, x8, #0x1
    7348:	str	x8, [x0]
    734c:	b.ne	7354 <PyInit__decimal@@Base+0x7f0>  // b.any
    7350:	bl	65c0 <_Py_Dealloc@plt>
    7354:	ldr	x0, [x27, #1504]
    7358:	cbz	x0, 7374 <PyInit__decimal@@Base+0x810>
    735c:	str	xzr, [x27, #1504]
    7360:	ldr	x8, [x0]
    7364:	subs	x8, x8, #0x1
    7368:	str	x8, [x0]
    736c:	b.ne	7374 <PyInit__decimal@@Base+0x810>  // b.any
    7370:	bl	65c0 <_Py_Dealloc@plt>
    7374:	ldr	x0, [x26, #1512]
    7378:	cbz	x0, 7394 <PyInit__decimal@@Base+0x830>
    737c:	str	xzr, [x26, #1512]
    7380:	ldr	x8, [x0]
    7384:	subs	x8, x8, #0x1
    7388:	str	x8, [x0]
    738c:	b.ne	7394 <PyInit__decimal@@Base+0x830>  // b.any
    7390:	bl	65c0 <_Py_Dealloc@plt>
    7394:	ldr	x0, [x25, #1520]
    7398:	cbz	x0, 73b4 <PyInit__decimal@@Base+0x850>
    739c:	str	xzr, [x25, #1520]
    73a0:	ldr	x8, [x0]
    73a4:	subs	x8, x8, #0x1
    73a8:	str	x8, [x0]
    73ac:	b.ne	73b4 <PyInit__decimal@@Base+0x850>  // b.any
    73b0:	bl	65c0 <_Py_Dealloc@plt>
    73b4:	ldr	x0, [x23, #1408]
    73b8:	cbz	x0, 73d4 <PyInit__decimal@@Base+0x870>
    73bc:	str	xzr, [x23, #1408]
    73c0:	ldr	x8, [x0]
    73c4:	subs	x8, x8, #0x1
    73c8:	str	x8, [x0]
    73cc:	b.ne	73d4 <PyInit__decimal@@Base+0x870>  // b.any
    73d0:	bl	65c0 <_Py_Dealloc@plt>
    73d4:	cbz	x19, 73f4 <PyInit__decimal@@Base+0x890>
    73d8:	ldr	x8, [x19]
    73dc:	subs	x8, x8, #0x1
    73e0:	str	x8, [x19]
    73e4:	b.ne	73f0 <PyInit__decimal@@Base+0x88c>  // b.any
    73e8:	mov	x0, x19
    73ec:	bl	65c0 <_Py_Dealloc@plt>
    73f0:	mov	x19, xzr
    73f4:	mov	x0, x19
    73f8:	ldp	x20, x19, [sp, #96]
    73fc:	ldp	x22, x21, [sp, #80]
    7400:	ldp	x24, x23, [sp, #64]
    7404:	ldp	x26, x25, [sp, #48]
    7408:	ldp	x28, x27, [sp, #32]
    740c:	ldp	x29, x30, [sp, #16]
    7410:	add	sp, sp, #0x70
    7414:	ret
    7418:	mov	x19, xzr
    741c:	b	7294 <PyInit__decimal@@Base+0x730>
    7420:	mov	x19, xzr
    7424:	b	7298 <PyInit__decimal@@Base+0x734>
    7428:	mov	x19, xzr
    742c:	b	729c <PyInit__decimal@@Base+0x738>
    7430:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7434:	add	x0, x0, #0x4c0
    7438:	mov	x1, xzr
    743c:	bl	6830 <PyObject_CallObject@plt>
    7440:	str	x0, [x27, #1504]
    7444:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    7448:	ldr	x8, [x0]
    744c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7450:	mov	x2, x0
    7454:	add	x1, x1, #0xcbd
    7458:	add	x8, x8, #0x1
    745c:	str	x8, [x0]
    7460:	mov	x0, x19
    7464:	bl	6980 <PyModule_AddObject@plt>
    7468:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    746c:	adrp	x2, 49000 <PyInit__decimal@@Base+0x4249c>
    7470:	ldr	x2, [x2, #4024]
    7474:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7478:	add	x1, x1, #0xccc
    747c:	mov	x0, x19
    7480:	ldr	x8, [x2]
    7484:	add	x8, x8, #0x1
    7488:	str	x8, [x2]
    748c:	bl	6980 <PyModule_AddObject@plt>
    7490:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7494:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7498:	add	x0, x0, #0x4c0
    749c:	mov	x1, xzr
    74a0:	bl	6830 <PyObject_CallObject@plt>
    74a4:	str	x0, [x26, #1512]
    74a8:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    74ac:	mov	w9, #0x4bbf                	// #19391
    74b0:	adrp	x20, 36000 <PyInit__decimal@@Base+0x2f49c>
    74b4:	str	w9, [x0, #40]
    74b8:	mov	x9, #0x100000000           	// #4294967296
    74bc:	add	x20, x20, #0x9f0
    74c0:	str	x9, [x0, #56]
    74c4:	ldr	x9, [x0]
    74c8:	mov	w8, #0x9                   	// #9
    74cc:	ldr	q0, [x20]
    74d0:	str	x8, [x0, #16]
    74d4:	mov	w8, #0x4                   	// #4
    74d8:	str	w8, [x0, #52]
    74dc:	mov	w8, #0x1                   	// #1
    74e0:	str	w8, [x0, #80]
    74e4:	add	x8, x9, #0x1
    74e8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    74ec:	mov	x2, x0
    74f0:	stur	xzr, [x0, #44]
    74f4:	stur	q0, [x0, #24]
    74f8:	str	x8, [x0]
    74fc:	add	x1, x1, #0xcd9
    7500:	mov	x0, x19
    7504:	str	q0, [sp]
    7508:	bl	6980 <PyModule_AddObject@plt>
    750c:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7510:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7514:	add	x0, x0, #0x4c0
    7518:	mov	x1, xzr
    751c:	bl	6830 <PyObject_CallObject@plt>
    7520:	str	x0, [x25, #1520]
    7524:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    7528:	ldr	q0, [sp]
    752c:	ldr	x11, [x0]
    7530:	ldr	w9, [x20, #36]
    7534:	mov	w8, #0x9                   	// #9
    7538:	stur	q0, [x0, #24]
    753c:	ldur	q0, [x20, #20]
    7540:	mov	w10, #0x1                   	// #1
    7544:	str	x8, [x0, #16]
    7548:	add	x8, x11, #0x1
    754c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7550:	mov	x2, x0
    7554:	str	wzr, [x0, #40]
    7558:	str	w10, [x0, #80]
    755c:	str	w9, [x0, #60]
    7560:	stur	q0, [x0, #44]
    7564:	str	x8, [x0]
    7568:	add	x1, x1, #0xce6
    756c:	mov	x0, x19
    7570:	bl	6980 <PyModule_AddObject@plt>
    7574:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7578:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    757c:	add	x20, x20, #0xb28
    7580:	ldur	x0, [x20, #-8]
    7584:	bl	6690 <PyLong_FromSsize_t@plt>
    7588:	mov	x21, x0
    758c:	cbz	x0, 722c <PyInit__decimal@@Base+0x6c8>
    7590:	ldur	x1, [x20, #-16]
    7594:	mov	x0, x19
    7598:	mov	x2, x21
    759c:	bl	6980 <PyModule_AddObject@plt>
    75a0:	tbnz	w0, #31, 7638 <PyInit__decimal@@Base+0xad4>
    75a4:	ldr	x8, [x20], #16
    75a8:	cbnz	x8, 7580 <PyInit__decimal@@Base+0xa1c>
    75ac:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    75b0:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    75b4:	mov	x20, xzr
    75b8:	add	x21, x21, #0x4e8
    75bc:	add	x22, x22, #0x5f8
    75c0:	ldr	x0, [x21, x20]
    75c4:	bl	6970 <PyUnicode_InternFromString@plt>
    75c8:	str	x0, [x22, x20]
    75cc:	cbz	x0, 7290 <PyInit__decimal@@Base+0x72c>
    75d0:	ldr	x8, [x0]
    75d4:	mov	x2, x0
    75d8:	add	x8, x8, #0x1
    75dc:	str	x8, [x0]
    75e0:	ldr	x1, [x21, x20]
    75e4:	mov	x0, x19
    75e8:	bl	6980 <PyModule_AddObject@plt>
    75ec:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    75f0:	add	x20, x20, #0x8
    75f4:	cmp	x20, #0x40
    75f8:	b.ne	75c0 <PyInit__decimal@@Base+0xa5c>  // b.any
    75fc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7600:	adrp	x2, 36000 <PyInit__decimal@@Base+0x2f49c>
    7604:	add	x1, x1, #0xcf6
    7608:	add	x2, x2, #0xd02
    760c:	mov	x0, x19
    7610:	bl	6960 <PyModule_AddStringConstant@plt>
    7614:	tbnz	w0, #31, 7290 <PyInit__decimal@@Base+0x72c>
    7618:	bl	1fa3c <PyInit__decimal@@Base+0x18ed8>
    761c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7620:	mov	x2, x0
    7624:	add	x1, x1, #0xd07
    7628:	mov	x0, x19
    762c:	bl	6960 <PyModule_AddStringConstant@plt>
    7630:	tbz	w0, #31, 73f4 <PyInit__decimal@@Base+0x890>
    7634:	b	7290 <PyInit__decimal@@Base+0x72c>
    7638:	mov	x20, xzr
    763c:	b	723c <PyInit__decimal@@Base+0x6d8>
    7640:	ret
    7644:	stp	x29, x30, [sp, #-32]!
    7648:	stp	x20, x19, [sp, #16]
    764c:	mov	x29, sp
    7650:	ldr	x8, [x0, #232]
    7654:	mov	x19, x1
    7658:	cbz	x8, 768c <PyInit__decimal@@Base+0xb28>
    765c:	ldr	x1, [x8]
    7660:	cbz	x1, 768c <PyInit__decimal@@Base+0xb28>
    7664:	add	x20, x8, #0x10
    7668:	mov	x0, x19
    766c:	bl	6850 <strcmp@plt>
    7670:	cbz	w0, 7684 <PyInit__decimal@@Base+0xb20>
    7674:	ldr	x1, [x20, #16]
    7678:	add	x20, x20, #0x20
    767c:	cbnz	x1, 7668 <PyInit__decimal@@Base+0xb04>
    7680:	b	768c <PyInit__decimal@@Base+0xb28>
    7684:	ldrb	w8, [x20]
    7688:	tbnz	w8, #2, 76b8 <PyInit__decimal@@Base+0xb54>
    768c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7690:	ldr	x8, [x8, #3920]
    7694:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7698:	add	x1, x1, #0xd1c
    769c:	mov	x2, x19
    76a0:	ldr	x0, [x8]
    76a4:	bl	6a00 <PyErr_Format@plt>
    76a8:	mov	x0, xzr
    76ac:	ldp	x20, x19, [sp, #16]
    76b0:	ldp	x29, x30, [sp], #32
    76b4:	ret
    76b8:	ldur	x0, [x20, #-8]
    76bc:	b	76ac <PyInit__decimal@@Base+0xb48>
    76c0:	stp	x29, x30, [sp, #-32]!
    76c4:	str	x19, [sp, #16]
    76c8:	mov	x29, sp
    76cc:	mov	x19, x0
    76d0:	add	x0, x0, #0x18
    76d4:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    76d8:	ldr	x8, [x19, #8]
    76dc:	mov	x0, x19
    76e0:	ldr	x19, [sp, #16]
    76e4:	ldr	x1, [x8, #320]
    76e8:	ldp	x29, x30, [sp], #32
    76ec:	br	x1
    76f0:	sub	sp, sp, #0x40
    76f4:	stp	x29, x30, [sp, #16]
    76f8:	stp	x22, x21, [sp, #32]
    76fc:	stp	x20, x19, [sp, #48]
    7700:	add	x29, sp, #0x10
    7704:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    7708:	ldr	x8, [x21, #1408]
    770c:	mov	x19, x0
    7710:	add	x2, sp, #0x8
    7714:	mov	x1, xzr
    7718:	mov	x0, x8
    771c:	bl	6730 <PyContextVar_Get@plt>
    7720:	tbnz	w0, #31, 77e8 <PyInit__decimal@@Base+0xc84>
    7724:	ldr	x20, [sp, #8]
    7728:	cbz	x20, 7780 <PyInit__decimal@@Base+0xc1c>
    772c:	ldr	x8, [x20]
    7730:	subs	x8, x8, #0x1
    7734:	str	x8, [x20]
    7738:	b.ne	7744 <PyInit__decimal@@Base+0xbe0>  // b.any
    773c:	mov	x0, x20
    7740:	bl	65c0 <_Py_Dealloc@plt>
    7744:	ldr	w1, [x20, #80]
    7748:	add	x0, x19, #0x18
    774c:	bl	1da20 <PyInit__decimal@@Base+0x16ebc>
    7750:	cbz	x0, 77e4 <PyInit__decimal@@Base+0xc80>
    7754:	mov	x19, x0
    7758:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    775c:	add	x0, x0, #0xd55
    7760:	mov	x1, x19
    7764:	bl	6470 <PyUnicode_FromFormat@plt>
    7768:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    776c:	ldr	x8, [x8, #1384]
    7770:	mov	x20, x0
    7774:	mov	x0, x19
    7778:	blr	x8
    777c:	b	77ec <PyInit__decimal@@Base+0xc88>
    7780:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7784:	ldr	x22, [x8, #1504]
    7788:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    778c:	add	x0, x0, #0x4c0
    7790:	mov	x1, xzr
    7794:	bl	6830 <PyObject_CallObject@plt>
    7798:	cbz	x0, 77e8 <PyInit__decimal@@Base+0xc84>
    779c:	ldp	q1, q0, [x22, #32]
    77a0:	ldr	q2, [x22, #16]
    77a4:	mov	x20, x0
    77a8:	mov	x1, x20
    77ac:	stp	q1, q0, [x0, #32]
    77b0:	str	q2, [x0, #16]
    77b4:	ldr	w8, [x22, #80]
    77b8:	stp	wzr, wzr, [x0, #44]
    77bc:	str	w8, [x0, #80]
    77c0:	ldr	x0, [x21, #1408]
    77c4:	bl	6670 <PyContextVar_Set@plt>
    77c8:	cbz	x0, 7804 <PyInit__decimal@@Base+0xca0>
    77cc:	ldr	x8, [x0]
    77d0:	subs	x8, x8, #0x1
    77d4:	str	x8, [x0]
    77d8:	b.ne	772c <PyInit__decimal@@Base+0xbc8>  // b.any
    77dc:	bl	65c0 <_Py_Dealloc@plt>
    77e0:	b	772c <PyInit__decimal@@Base+0xbc8>
    77e4:	bl	65d0 <PyErr_NoMemory@plt>
    77e8:	mov	x20, xzr
    77ec:	mov	x0, x20
    77f0:	ldp	x20, x19, [sp, #48]
    77f4:	ldp	x22, x21, [sp, #32]
    77f8:	ldp	x29, x30, [sp, #16]
    77fc:	add	sp, sp, #0x40
    7800:	ret
    7804:	ldr	x8, [x20]
    7808:	subs	x8, x8, #0x1
    780c:	str	x8, [x20]
    7810:	b.ne	77e8 <PyInit__decimal@@Base+0xc84>  // b.any
    7814:	mov	x0, x20
    7818:	bl	65c0 <_Py_Dealloc@plt>
    781c:	b	77e8 <PyInit__decimal@@Base+0xc84>
    7820:	sub	sp, sp, #0x120
    7824:	stp	x29, x30, [sp, #224]
    7828:	stp	x28, x23, [sp, #240]
    782c:	stp	x22, x21, [sp, #256]
    7830:	stp	x20, x19, [sp, #272]
    7834:	add	x29, sp, #0xe0
    7838:	ldr	x22, [x0, #16]
    783c:	cmn	x22, #0x1
    7840:	b.ne	7b0c <PyInit__decimal@@Base+0xfa8>  // b.any
    7844:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
    7848:	mov	w10, #0x90                  	// #144
    784c:	stur	x9, [x29, #-8]
    7850:	mov	w9, #0x1                   	// #1
    7854:	dup	v0.2d, x9
    7858:	adrp	x9, 31000 <PyInit__decimal@@Base+0x2a49c>
    785c:	sturb	w10, [x29, #-56]
    7860:	strb	w10, [sp, #112]
    7864:	strb	w10, [sp, #56]
    7868:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
    786c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    7870:	mov	x19, x0
    7874:	ldr	q1, [x9, #1968]
    7878:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
    787c:	ldr	q2, [x10, #1984]
    7880:	ldr	x0, [x21, #1408]
    7884:	movk	x9, #0x1ccc, lsl #48
    7888:	stur	x9, [x29, #-64]
    788c:	mov	w9, #0xa                   	// #10
    7890:	add	x10, sp, #0x68
    7894:	add	x8, sp, #0x70
    7898:	str	x9, [sp, #104]
    789c:	sub	x9, x29, #0x8
    78a0:	str	x10, [sp, #96]
    78a4:	sub	x10, x29, #0x40
    78a8:	mov	x2, sp
    78ac:	mov	x1, xzr
    78b0:	stur	q0, [x8, #24]
    78b4:	str	x10, [sp, #152]
    78b8:	stp	q2, q0, [sp, #64]
    78bc:	stp	q1, q0, [x8, #64]
    78c0:	stur	x9, [x29, #-16]
    78c4:	stur	q1, [sp, #120]
    78c8:	str	wzr, [sp, #52]
    78cc:	bl	6730 <PyContextVar_Get@plt>
    78d0:	tbnz	w0, #31, 7b04 <PyInit__decimal@@Base+0xfa0>
    78d4:	ldr	x20, [sp]
    78d8:	cbz	x20, 792c <PyInit__decimal@@Base+0xdc8>
    78dc:	ldr	x8, [x20]
    78e0:	subs	x8, x8, #0x1
    78e4:	str	x8, [x20]
    78e8:	b.ne	78f4 <PyInit__decimal@@Base+0xd90>  // b.any
    78ec:	mov	x0, x20
    78f0:	bl	65c0 <_Py_Dealloc@plt>
    78f4:	add	x22, x19, #0x18
    78f8:	mov	x0, x22
    78fc:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
    7900:	cbz	w0, 7990 <PyInit__decimal@@Base+0xe2c>
    7904:	mov	x0, x22
    7908:	bl	1febc <PyInit__decimal@@Base+0x19358>
    790c:	cbz	w0, 7ac0 <PyInit__decimal@@Base+0xf5c>
    7910:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7914:	ldr	x8, [x8, #3936]
    7918:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    791c:	add	x1, x1, #0xe44
    7920:	ldr	x0, [x8]
    7924:	bl	6640 <PyErr_SetString@plt>
    7928:	b	7b04 <PyInit__decimal@@Base+0xfa0>
    792c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7930:	ldr	x22, [x8, #1504]
    7934:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7938:	add	x0, x0, #0x4c0
    793c:	mov	x1, xzr
    7940:	bl	6830 <PyObject_CallObject@plt>
    7944:	cbz	x0, 7b04 <PyInit__decimal@@Base+0xfa0>
    7948:	ldp	q1, q0, [x22, #32]
    794c:	ldr	q2, [x22, #16]
    7950:	mov	x20, x0
    7954:	mov	x1, x20
    7958:	stp	q1, q0, [x0, #32]
    795c:	str	q2, [x0, #16]
    7960:	ldr	w8, [x22, #80]
    7964:	stp	wzr, wzr, [x0, #44]
    7968:	str	w8, [x0, #80]
    796c:	ldr	x0, [x21, #1408]
    7970:	bl	6670 <PyContextVar_Set@plt>
    7974:	cbz	x0, 7adc <PyInit__decimal@@Base+0xf78>
    7978:	ldr	x8, [x0]
    797c:	subs	x8, x8, #0x1
    7980:	str	x8, [x0]
    7984:	b.ne	78dc <PyInit__decimal@@Base+0xd78>  // b.any
    7988:	bl	65c0 <_Py_Dealloc@plt>
    798c:	b	78dc <PyInit__decimal@@Base+0xd78>
    7990:	mov	x0, sp
    7994:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
    7998:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
    799c:	cbz	x0, 7ad4 <PyInit__decimal@@Base+0xf70>
    79a0:	mov	x20, x0
    79a4:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
    79a8:	cbz	x0, 7af8 <PyInit__decimal@@Base+0xf94>
    79ac:	ldr	x8, [x19, #32]
    79b0:	add	x9, sp, #0x70
    79b4:	add	x10, sp, #0x38
    79b8:	mov	x2, sp
    79bc:	cmp	x8, #0x0
    79c0:	cneg	x1, x8, mi  // mi = first
    79c4:	add	x3, sp, #0x34
    79c8:	mov	x21, x0
    79cc:	csel	x23, x10, x9, ge  // ge = tcont
    79d0:	bl	20998 <PyInit__decimal@@Base+0x19e34>
    79d4:	sub	x3, x29, #0x38
    79d8:	mov	x4, sp
    79dc:	add	x5, sp, #0x34
    79e0:	mov	x0, x20
    79e4:	mov	x1, x23
    79e8:	mov	x2, x21
    79ec:	bl	2b0f0 <PyInit__decimal@@Base+0x2458c>
    79f0:	add	x2, sp, #0x34
    79f4:	mov	x0, x21
    79f8:	mov	x1, x22
    79fc:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
    7a00:	cbz	w0, 7b40 <PyInit__decimal@@Base+0xfdc>
    7a04:	mov	x0, x21
    7a08:	str	xzr, [x21, #8]
    7a0c:	bl	204c0 <PyInit__decimal@@Base+0x1995c>
    7a10:	mov	x8, #0x14                  	// #20
    7a14:	movk	x8, #0xa764, lsl #16
    7a18:	mov	x9, #0xffec                	// #65516
    7a1c:	movk	x8, #0xb6b3, lsl #32
    7a20:	movk	x9, #0x589b, lsl #16
    7a24:	movk	x8, #0xde0, lsl #48
    7a28:	movk	x9, #0x494c, lsl #32
    7a2c:	movk	x9, #0xf21f, lsl #48
    7a30:	dup	v0.2d, x8
    7a34:	mov	x3, sp
    7a38:	add	x4, sp, #0x34
    7a3c:	mov	x0, x21
    7a40:	mov	x1, x21
    7a44:	mov	x2, x20
    7a48:	str	q0, [sp]
    7a4c:	str	x9, [sp, #16]
    7a50:	bl	284d4 <PyInit__decimal@@Base+0x21970>
    7a54:	sub	x2, x29, #0x38
    7a58:	mov	x3, sp
    7a5c:	add	x4, sp, #0x34
    7a60:	mov	x0, x21
    7a64:	mov	x1, x21
    7a68:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
    7a6c:	add	x1, sp, #0x34
    7a70:	mov	x0, x21
    7a74:	bl	215f0 <PyInit__decimal@@Base+0x1aa8c>
    7a78:	mov	x23, x0
    7a7c:	mov	x0, x22
    7a80:	bl	1fe94 <PyInit__decimal@@Base+0x19330>
    7a84:	cmp	w0, #0x0
    7a88:	ldr	w8, [sp, #52]
    7a8c:	cneg	x9, x23, eq  // eq = none
    7a90:	cmn	x9, #0x1
    7a94:	mov	x10, #0xfffffffffffffffe    	// #-2
    7a98:	csel	x22, x10, x9, eq  // eq = none
    7a9c:	cbz	w8, 7b48 <PyInit__decimal@@Base+0xfe4>
    7aa0:	tbnz	w8, #9, 7b40 <PyInit__decimal@@Base+0xfdc>
    7aa4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7aa8:	ldr	x8, [x8, #3920]
    7aac:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    7ab0:	add	x1, x1, #0xe66
    7ab4:	ldr	x0, [x8]
    7ab8:	bl	6640 <PyErr_SetString@plt>
    7abc:	b	7b44 <PyInit__decimal@@Base+0xfe0>
    7ac0:	mov	x0, x22
    7ac4:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
    7ac8:	cbz	w0, 7b28 <PyInit__decimal@@Base+0xfc4>
    7acc:	mov	x22, xzr
    7ad0:	b	7b08 <PyInit__decimal@@Base+0xfa4>
    7ad4:	bl	65d0 <PyErr_NoMemory@plt>
    7ad8:	b	7b04 <PyInit__decimal@@Base+0xfa0>
    7adc:	ldr	x8, [x20]
    7ae0:	subs	x8, x8, #0x1
    7ae4:	str	x8, [x20]
    7ae8:	b.ne	7b04 <PyInit__decimal@@Base+0xfa0>  // b.any
    7aec:	mov	x0, x20
    7af0:	bl	65c0 <_Py_Dealloc@plt>
    7af4:	b	7b04 <PyInit__decimal@@Base+0xfa0>
    7af8:	bl	65d0 <PyErr_NoMemory@plt>
    7afc:	mov	x0, x20
    7b00:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    7b04:	mov	x22, #0xffffffffffffffff    	// #-1
    7b08:	str	x22, [x19, #16]
    7b0c:	mov	x0, x22
    7b10:	ldp	x20, x19, [sp, #272]
    7b14:	ldp	x22, x21, [sp, #256]
    7b18:	ldp	x28, x23, [sp, #240]
    7b1c:	ldp	x29, x30, [sp, #224]
    7b20:	add	sp, sp, #0x120
    7b24:	ret
    7b28:	mov	x0, x22
    7b2c:	bl	1ffcc <PyInit__decimal@@Base+0x19468>
    7b30:	mov	w8, #0xcb2f                	// #52015
    7b34:	movk	w8, #0x4, lsl #16
    7b38:	smull	x22, w0, w8
    7b3c:	b	7b08 <PyInit__decimal@@Base+0xfa4>
    7b40:	bl	65d0 <PyErr_NoMemory@plt>
    7b44:	mov	x22, #0xffffffffffffffff    	// #-1
    7b48:	mov	x0, x20
    7b4c:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    7b50:	mov	x0, x21
    7b54:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    7b58:	b	7b08 <PyInit__decimal@@Base+0xfa4>
    7b5c:	sub	sp, sp, #0x40
    7b60:	stp	x29, x30, [sp, #16]
    7b64:	stp	x22, x21, [sp, #32]
    7b68:	stp	x20, x19, [sp, #48]
    7b6c:	add	x29, sp, #0x10
    7b70:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    7b74:	ldr	x8, [x21, #1408]
    7b78:	mov	x19, x0
    7b7c:	add	x2, sp, #0x8
    7b80:	mov	x1, xzr
    7b84:	mov	x0, x8
    7b88:	bl	6730 <PyContextVar_Get@plt>
    7b8c:	tbnz	w0, #31, 7c54 <PyInit__decimal@@Base+0x10f0>
    7b90:	ldr	x20, [sp, #8]
    7b94:	cbz	x20, 7bec <PyInit__decimal@@Base+0x1088>
    7b98:	ldr	x8, [x20]
    7b9c:	subs	x8, x8, #0x1
    7ba0:	str	x8, [x20]
    7ba4:	b.ne	7bb0 <PyInit__decimal@@Base+0x104c>  // b.any
    7ba8:	mov	x0, x20
    7bac:	bl	65c0 <_Py_Dealloc@plt>
    7bb0:	ldr	w2, [x20, #80]
    7bb4:	add	x1, x19, #0x18
    7bb8:	add	x0, sp, #0x8
    7bbc:	bl	1df50 <PyInit__decimal@@Base+0x173ec>
    7bc0:	tbnz	x0, #63, 7c50 <PyInit__decimal@@Base+0x10ec>
    7bc4:	mov	x1, x0
    7bc8:	ldr	x0, [sp, #8]
    7bcc:	bl	a968 <PyInit__decimal@@Base+0x3e04>
    7bd0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7bd4:	ldr	x9, [x8, #1384]
    7bd8:	ldr	x8, [sp, #8]
    7bdc:	mov	x19, x0
    7be0:	mov	x0, x8
    7be4:	blr	x9
    7be8:	b	7c58 <PyInit__decimal@@Base+0x10f4>
    7bec:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7bf0:	ldr	x22, [x8, #1504]
    7bf4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7bf8:	add	x0, x0, #0x4c0
    7bfc:	mov	x1, xzr
    7c00:	bl	6830 <PyObject_CallObject@plt>
    7c04:	cbz	x0, 7c54 <PyInit__decimal@@Base+0x10f0>
    7c08:	ldp	q1, q0, [x22, #32]
    7c0c:	ldr	q2, [x22, #16]
    7c10:	mov	x20, x0
    7c14:	mov	x1, x20
    7c18:	stp	q1, q0, [x0, #32]
    7c1c:	str	q2, [x0, #16]
    7c20:	ldr	w8, [x22, #80]
    7c24:	stp	wzr, wzr, [x0, #44]
    7c28:	str	w8, [x0, #80]
    7c2c:	ldr	x0, [x21, #1408]
    7c30:	bl	6670 <PyContextVar_Set@plt>
    7c34:	cbz	x0, 7c70 <PyInit__decimal@@Base+0x110c>
    7c38:	ldr	x8, [x0]
    7c3c:	subs	x8, x8, #0x1
    7c40:	str	x8, [x0]
    7c44:	b.ne	7b98 <PyInit__decimal@@Base+0x1034>  // b.any
    7c48:	bl	65c0 <_Py_Dealloc@plt>
    7c4c:	b	7b98 <PyInit__decimal@@Base+0x1034>
    7c50:	bl	65d0 <PyErr_NoMemory@plt>
    7c54:	mov	x19, xzr
    7c58:	mov	x0, x19
    7c5c:	ldp	x20, x19, [sp, #48]
    7c60:	ldp	x22, x21, [sp, #32]
    7c64:	ldp	x29, x30, [sp, #16]
    7c68:	add	sp, sp, #0x40
    7c6c:	ret
    7c70:	ldr	x8, [x20]
    7c74:	subs	x8, x8, #0x1
    7c78:	str	x8, [x20]
    7c7c:	b.ne	7c54 <PyInit__decimal@@Base+0x10f0>  // b.any
    7c80:	mov	x0, x20
    7c84:	bl	65c0 <_Py_Dealloc@plt>
    7c88:	b	7c54 <PyInit__decimal@@Base+0x10f0>
    7c8c:	sub	sp, sp, #0xa0
    7c90:	stp	d9, d8, [sp, #48]
    7c94:	stp	x29, x30, [sp, #64]
    7c98:	str	x27, [sp, #80]
    7c9c:	stp	x26, x25, [sp, #96]
    7ca0:	stp	x24, x23, [sp, #112]
    7ca4:	stp	x22, x21, [sp, #128]
    7ca8:	stp	x20, x19, [sp, #144]
    7cac:	add	x29, sp, #0x30
    7cb0:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
    7cb4:	mov	x21, x0
    7cb8:	ldr	x0, [x23, #1408]
    7cbc:	mov	w19, w2
    7cc0:	mov	x22, x1
    7cc4:	mov	x2, sp
    7cc8:	mov	x1, xzr
    7ccc:	str	wzr, [x29, #40]
    7cd0:	bl	6730 <PyContextVar_Get@plt>
    7cd4:	tbnz	w0, #31, 7f2c <PyInit__decimal@@Base+0x13c8>
    7cd8:	ldr	x20, [sp]
    7cdc:	cbz	x20, 7dfc <PyInit__decimal@@Base+0x1298>
    7ce0:	ldr	x8, [x20]
    7ce4:	subs	x8, x8, #0x1
    7ce8:	str	x8, [x20]
    7cec:	b.ne	7cf8 <PyInit__decimal@@Base+0x1194>  // b.any
    7cf0:	mov	x0, x20
    7cf4:	bl	65c0 <_Py_Dealloc@plt>
    7cf8:	ldr	x0, [x22, #8]
    7cfc:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    7d00:	add	x8, x8, #0x320
    7d04:	cmp	x0, x8
    7d08:	b.eq	7d1c <PyInit__decimal@@Base+0x11b8>  // b.none
    7d0c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    7d10:	add	x1, x1, #0x320
    7d14:	bl	69b0 <PyType_IsSubtype@plt>
    7d18:	cbz	w0, 7e8c <PyInit__decimal@@Base+0x1328>
    7d1c:	ldr	x8, [x22]
    7d20:	add	x8, x8, #0x1
    7d24:	str	x8, [x22]
    7d28:	mov	x24, x21
    7d2c:	cbz	x22, 7f30 <PyInit__decimal@@Base+0x13cc>
    7d30:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7d34:	ldr	x8, [x8, #3912]
    7d38:	cmp	x22, x8
    7d3c:	b.eq	7f30 <PyInit__decimal@@Base+0x13cc>  // b.none
    7d40:	cmp	x24, x21
    7d44:	b.ne	7d54 <PyInit__decimal@@Base+0x11f0>  // b.any
    7d48:	ldr	x8, [x21]
    7d4c:	add	x8, x8, #0x1
    7d50:	str	x8, [x21]
    7d54:	add	x21, x24, #0x18
    7d58:	mov	x0, x21
    7d5c:	bl	1febc <PyInit__decimal@@Base+0x19358>
    7d60:	add	x26, x22, #0x18
    7d64:	mov	w23, w0
    7d68:	mov	x0, x26
    7d6c:	bl	1febc <PyInit__decimal@@Base+0x19358>
    7d70:	mov	w25, w0
    7d74:	add	x2, x29, #0x28
    7d78:	mov	x0, x21
    7d7c:	mov	x1, x26
    7d80:	bl	22128 <PyInit__decimal@@Base+0x1b5c4>
    7d84:	ldr	x8, [x24]
    7d88:	mov	w21, w0
    7d8c:	subs	x8, x8, #0x1
    7d90:	str	x8, [x24]
    7d94:	b.ne	7da0 <PyInit__decimal@@Base+0x123c>  // b.any
    7d98:	mov	x0, x24
    7d9c:	bl	65c0 <_Py_Dealloc@plt>
    7da0:	ldr	x8, [x22]
    7da4:	subs	x8, x8, #0x1
    7da8:	str	x8, [x22]
    7dac:	b.ne	7db8 <PyInit__decimal@@Base+0x1254>  // b.any
    7db0:	mov	x0, x22
    7db4:	bl	65c0 <_Py_Dealloc@plt>
    7db8:	mov	w8, #0x7fffffff            	// #2147483647
    7dbc:	cmp	w21, w8
    7dc0:	b.ne	7e60 <PyInit__decimal@@Base+0x12fc>  // b.any
    7dc4:	orr	w8, w19, #0x1
    7dc8:	cmp	w8, #0x3
    7dcc:	b.ne	7dd8 <PyInit__decimal@@Base+0x1274>  // b.any
    7dd0:	orr	w8, w25, w23
    7dd4:	cbz	w8, 7de8 <PyInit__decimal@@Base+0x1284>
    7dd8:	ldr	w1, [x29, #40]
    7ddc:	mov	x0, x20
    7de0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    7de4:	cbnz	w0, 7f2c <PyInit__decimal@@Base+0x13c8>
    7de8:	cmp	w19, #0x3
    7dec:	b.ne	7f58 <PyInit__decimal@@Base+0x13f4>  // b.any
    7df0:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    7df4:	ldr	x22, [x22, #4024]
    7df8:	b	7f60 <PyInit__decimal@@Base+0x13fc>
    7dfc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    7e00:	ldr	x24, [x8, #1504]
    7e04:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7e08:	add	x0, x0, #0x4c0
    7e0c:	mov	x1, xzr
    7e10:	bl	6830 <PyObject_CallObject@plt>
    7e14:	cbz	x0, 7f2c <PyInit__decimal@@Base+0x13c8>
    7e18:	ldp	q1, q0, [x24, #32]
    7e1c:	ldr	q2, [x24, #16]
    7e20:	mov	x20, x0
    7e24:	mov	x1, x20
    7e28:	stp	q1, q0, [x0, #32]
    7e2c:	str	q2, [x0, #16]
    7e30:	ldr	w8, [x24, #80]
    7e34:	stp	wzr, wzr, [x0, #44]
    7e38:	str	w8, [x0, #80]
    7e3c:	ldr	x0, [x23, #1408]
    7e40:	bl	6670 <PyContextVar_Set@plt>
    7e44:	cbz	x0, 7f14 <PyInit__decimal@@Base+0x13b0>
    7e48:	ldr	x8, [x0]
    7e4c:	subs	x8, x8, #0x1
    7e50:	str	x8, [x0]
    7e54:	b.ne	7ce0 <PyInit__decimal@@Base+0x117c>  // b.any
    7e58:	bl	65c0 <_Py_Dealloc@plt>
    7e5c:	b	7ce0 <PyInit__decimal@@Base+0x117c>
    7e60:	cmp	w19, #0x5
    7e64:	b.hi	7fa4 <PyInit__decimal@@Base+0x1440>  // b.pmore
    7e68:	adrp	x9, 31000 <PyInit__decimal@@Base+0x2a49c>
    7e6c:	mov	w8, w19
    7e70:	add	x9, x9, #0x7f0
    7e74:	adr	x10, 7e84 <PyInit__decimal@@Base+0x1320>
    7e78:	ldrb	w11, [x9, x8]
    7e7c:	add	x10, x10, x11, lsl #2
    7e80:	br	x10
    7e84:	cmn	w21, #0x1
    7e88:	b	7f94 <PyInit__decimal@@Base+0x1430>
    7e8c:	ldr	x0, [x22, #8]
    7e90:	ldrb	w8, [x0, #171]
    7e94:	tbnz	w8, #0, 7ef8 <PyInit__decimal@@Base+0x1394>
    7e98:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7e9c:	ldr	x8, [x8, #3864]
    7ea0:	cmp	x0, x8
    7ea4:	b.eq	7eb8 <PyInit__decimal@@Base+0x1354>  // b.none
    7ea8:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
    7eac:	ldr	x1, [x1, #3864]
    7eb0:	bl	69b0 <PyType_IsSubtype@plt>
    7eb4:	cbz	w0, 7fb4 <PyInit__decimal@@Base+0x1450>
    7eb8:	orr	w8, w19, #0x1
    7ebc:	cmp	w8, #0x3
    7ec0:	b.eq	7ed4 <PyInit__decimal@@Base+0x1370>  // b.none
    7ec4:	mov	w1, #0x400                 	// #1024
    7ec8:	mov	x0, x20
    7ecc:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    7ed0:	cbnz	w0, 7f2c <PyInit__decimal@@Base+0x13c8>
    7ed4:	ldr	w8, [x20, #44]
    7ed8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7edc:	add	x0, x0, #0x320
    7ee0:	mov	x1, x22
    7ee4:	orr	w8, w8, #0x400
    7ee8:	mov	x2, x20
    7eec:	str	w8, [x20, #44]
    7ef0:	bl	a9d4 <PyInit__decimal@@Base+0x3e70>
    7ef4:	b	7f0c <PyInit__decimal@@Base+0x13a8>
    7ef8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    7efc:	add	x0, x0, #0x320
    7f00:	mov	x1, x22
    7f04:	mov	x2, x20
    7f08:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    7f0c:	mov	x22, x0
    7f10:	b	7d28 <PyInit__decimal@@Base+0x11c4>
    7f14:	ldr	x8, [x20]
    7f18:	subs	x8, x8, #0x1
    7f1c:	str	x8, [x20]
    7f20:	b.ne	7f2c <PyInit__decimal@@Base+0x13c8>  // b.any
    7f24:	mov	x0, x20
    7f28:	bl	65c0 <_Py_Dealloc@plt>
    7f2c:	mov	x22, xzr
    7f30:	mov	x0, x22
    7f34:	ldp	x20, x19, [sp, #144]
    7f38:	ldp	x22, x21, [sp, #128]
    7f3c:	ldp	x24, x23, [sp, #112]
    7f40:	ldp	x26, x25, [sp, #96]
    7f44:	ldr	x27, [sp, #80]
    7f48:	ldp	x29, x30, [sp, #64]
    7f4c:	ldp	d9, d8, [sp, #48]
    7f50:	add	sp, sp, #0xa0
    7f54:	ret
    7f58:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    7f5c:	ldr	x22, [x22, #3976]
    7f60:	ldr	x8, [x22]
    7f64:	add	x8, x8, #0x1
    7f68:	str	x8, [x22]
    7f6c:	b	7f30 <PyInit__decimal@@Base+0x13cc>
    7f70:	cmp	w21, #0x1
    7f74:	cset	w21, lt  // lt = tstop
    7f78:	b	7fa4 <PyInit__decimal@@Base+0x1440>
    7f7c:	cmp	w21, #0x0
    7f80:	b	7f94 <PyInit__decimal@@Base+0x1430>
    7f84:	cmp	w21, #0x0
    7f88:	cset	w21, ne  // ne = any
    7f8c:	b	7fa4 <PyInit__decimal@@Base+0x1440>
    7f90:	cmp	w21, #0x1
    7f94:	cset	w21, eq  // eq = none
    7f98:	b	7fa4 <PyInit__decimal@@Base+0x1440>
    7f9c:	mvn	w8, w21
    7fa0:	lsr	w21, w8, #31
    7fa4:	sxtw	x0, w21
    7fa8:	bl	6740 <PyBool_FromLong@plt>
    7fac:	mov	x22, x0
    7fb0:	b	7f30 <PyInit__decimal@@Base+0x13cc>
    7fb4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    7fb8:	ldr	x0, [x22, #8]
    7fbc:	ldr	x8, [x8, #3952]
    7fc0:	cmp	x0, x8
    7fc4:	b.eq	7fd8 <PyInit__decimal@@Base+0x1474>  // b.none
    7fc8:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
    7fcc:	ldr	x1, [x1, #3952]
    7fd0:	bl	69b0 <PyType_IsSubtype@plt>
    7fd4:	cbz	w0, 8060 <PyInit__decimal@@Base+0x14fc>
    7fd8:	orr	w8, w19, #0x1
    7fdc:	cmp	w8, #0x3
    7fe0:	b.ne	8060 <PyInit__decimal@@Base+0x14fc>  // b.any
    7fe4:	mov	x0, x22
    7fe8:	bl	69e0 <PyComplex_AsCComplex@plt>
    7fec:	mov	v8.16b, v0.16b
    7ff0:	fmov	d0, #-1.000000000000000000e+00
    7ff4:	fcmp	d8, d0
    7ff8:	mov	v9.16b, v1.16b
    7ffc:	b.ne	8008 <PyInit__decimal@@Base+0x14a4>  // b.any
    8000:	bl	67d0 <PyErr_Occurred@plt>
    8004:	cbnz	x0, 7f2c <PyInit__decimal@@Base+0x13c8>
    8008:	fcmp	d9, #0.0
    800c:	b.ne	80e4 <PyInit__decimal@@Base+0x1580>  // b.any
    8010:	mov	v0.16b, v8.16b
    8014:	bl	66a0 <PyFloat_FromDouble@plt>
    8018:	cbz	x0, 7f2c <PyInit__decimal@@Base+0x13c8>
    801c:	ldr	w8, [x20, #44]
    8020:	mov	x23, x0
    8024:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8028:	add	x0, x0, #0x320
    802c:	orr	w8, w8, #0x400
    8030:	mov	x1, x23
    8034:	mov	x2, x20
    8038:	str	w8, [x20, #44]
    803c:	bl	a9d4 <PyInit__decimal@@Base+0x3e70>
    8040:	ldr	x8, [x23]
    8044:	mov	x22, x0
    8048:	subs	x8, x8, #0x1
    804c:	str	x8, [x23]
    8050:	b.ne	7d28 <PyInit__decimal@@Base+0x11c4>  // b.any
    8054:	mov	x0, x23
    8058:	bl	65c0 <_Py_Dealloc@plt>
    805c:	b	7d28 <PyInit__decimal@@Base+0x11c4>
    8060:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    8064:	ldr	x1, [x8, #1464]
    8068:	mov	x0, x22
    806c:	bl	6650 <PyObject_IsInstance@plt>
    8070:	tbnz	w0, #31, 7f2c <PyInit__decimal@@Base+0x13c8>
    8074:	cbz	w0, 80e4 <PyInit__decimal@@Base+0x1580>
    8078:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    807c:	add	x1, x1, #0xeac
    8080:	mov	x0, x22
    8084:	bl	6570 <PyObject_GetAttrString@plt>
    8088:	cbz	x0, 7f2c <PyInit__decimal@@Base+0x13c8>
    808c:	mov	x24, x0
    8090:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8094:	add	x0, x0, #0x320
    8098:	mov	x1, x24
    809c:	mov	x2, x20
    80a0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    80a4:	ldr	x8, [x24]
    80a8:	mov	x23, x0
    80ac:	subs	x8, x8, #0x1
    80b0:	str	x8, [x24]
    80b4:	b.ne	80c0 <PyInit__decimal@@Base+0x155c>  // b.any
    80b8:	mov	x0, x24
    80bc:	bl	65c0 <_Py_Dealloc@plt>
    80c0:	cbz	x23, 7f2c <PyInit__decimal@@Base+0x13c8>
    80c4:	add	x24, x21, #0x18
    80c8:	mov	x0, x24
    80cc:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
    80d0:	cbz	w0, 80f0 <PyInit__decimal@@Base+0x158c>
    80d4:	mov	x24, x21
    80d8:	mov	x22, x23
    80dc:	cbnz	x22, 7d30 <PyInit__decimal@@Base+0x11cc>
    80e0:	b	7f30 <PyInit__decimal@@Base+0x13cc>
    80e4:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    80e8:	ldr	x22, [x22, #3912]
    80ec:	b	7f60 <PyInit__decimal@@Base+0x13fc>
    80f0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    80f4:	add	x1, x1, #0xeb6
    80f8:	mov	x0, x22
    80fc:	str	wzr, [x29, #44]
    8100:	bl	6570 <PyObject_GetAttrString@plt>
    8104:	cbz	x0, 8254 <PyInit__decimal@@Base+0x16f0>
    8108:	mov	x25, x0
    810c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8110:	add	x0, x0, #0x320
    8114:	mov	x1, x25
    8118:	mov	x2, x20
    811c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8120:	ldr	x8, [x25]
    8124:	mov	x22, x0
    8128:	subs	x8, x8, #0x1
    812c:	str	x8, [x25]
    8130:	b.ne	813c <PyInit__decimal@@Base+0x15d8>  // b.any
    8134:	mov	x0, x25
    8138:	bl	65c0 <_Py_Dealloc@plt>
    813c:	cbz	x22, 8254 <PyInit__decimal@@Base+0x16f0>
    8140:	mov	x0, x24
    8144:	bl	22020 <PyInit__decimal@@Base+0x1b4bc>
    8148:	cbz	x0, 8214 <PyInit__decimal@@Base+0x16b0>
    814c:	mov	x25, x0
    8150:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8154:	add	x0, x0, #0x320
    8158:	bl	6940 <_PyObject_New@plt>
    815c:	cbz	x0, 8234 <PyInit__decimal@@Base+0x16d0>
    8160:	mov	w8, #0x30                  	// #48
    8164:	mov	x26, x0
    8168:	strb	w8, [x26, #24]!
    816c:	mov	x24, x0
    8170:	mov	x9, #0xffffffffffffffff    	// #-1
    8174:	mov	w10, #0x4                   	// #4
    8178:	add	x8, x26, #0x30
    817c:	mov	x0, sp
    8180:	stur	x9, [x26, #-8]
    8184:	stp	xzr, xzr, [x26, #8]
    8188:	stp	xzr, x10, [x26, #24]
    818c:	str	x8, [x26, #40]
    8190:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
    8194:	ldr	x27, [x25, #8]
    8198:	add	x2, x22, #0x18
    819c:	mov	x3, sp
    81a0:	add	x4, x29, #0x2c
    81a4:	mov	x0, x26
    81a8:	mov	x1, x25
    81ac:	str	xzr, [x25, #8]
    81b0:	bl	284d4 <PyInit__decimal@@Base+0x21970>
    81b4:	str	x27, [x26, #8]
    81b8:	ldr	x8, [x22]
    81bc:	subs	x8, x8, #0x1
    81c0:	str	x8, [x22]
    81c4:	b.ne	81d0 <PyInit__decimal@@Base+0x166c>  // b.any
    81c8:	mov	x0, x22
    81cc:	bl	65c0 <_Py_Dealloc@plt>
    81d0:	mov	x0, x25
    81d4:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    81d8:	ldr	w8, [x29, #44]
    81dc:	cbz	w8, 80d8 <PyInit__decimal@@Base+0x1574>
    81e0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    81e4:	ldr	x8, [x8, #3928]
    81e8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    81ec:	add	x1, x1, #0xec2
    81f0:	ldr	x0, [x8]
    81f4:	bl	6640 <PyErr_SetString@plt>
    81f8:	ldr	x8, [x24]
    81fc:	subs	x8, x8, #0x1
    8200:	str	x8, [x24]
    8204:	b.ne	8254 <PyInit__decimal@@Base+0x16f0>  // b.any
    8208:	mov	x0, x24
    820c:	bl	65c0 <_Py_Dealloc@plt>
    8210:	b	8254 <PyInit__decimal@@Base+0x16f0>
    8214:	ldr	x8, [x22]
    8218:	subs	x8, x8, #0x1
    821c:	str	x8, [x22]
    8220:	b.ne	822c <PyInit__decimal@@Base+0x16c8>  // b.any
    8224:	mov	x0, x22
    8228:	bl	65c0 <_Py_Dealloc@plt>
    822c:	bl	65d0 <PyErr_NoMemory@plt>
    8230:	b	8254 <PyInit__decimal@@Base+0x16f0>
    8234:	ldr	x8, [x22]
    8238:	subs	x8, x8, #0x1
    823c:	str	x8, [x22]
    8240:	b.ne	824c <PyInit__decimal@@Base+0x16e8>  // b.any
    8244:	mov	x0, x22
    8248:	bl	65c0 <_Py_Dealloc@plt>
    824c:	mov	x0, x25
    8250:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    8254:	ldr	x8, [x23]
    8258:	subs	x8, x8, #0x1
    825c:	str	x8, [x23]
    8260:	b.ne	7f2c <PyInit__decimal@@Base+0x13c8>  // b.any
    8264:	mov	x0, x23
    8268:	b	7f28 <PyInit__decimal@@Base+0x13c4>
    826c:	sub	sp, sp, #0x80
    8270:	stp	x29, x30, [sp, #80]
    8274:	stp	x22, x21, [sp, #96]
    8278:	stp	x20, x19, [sp, #112]
    827c:	add	x29, sp, #0x50
    8280:	str	xzr, [sp, #16]
    8284:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    8288:	ldr	x20, [x20, #4008]
    828c:	mov	x8, x2
    8290:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    8294:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    8298:	mov	x19, x0
    829c:	add	x2, x2, #0x24c
    82a0:	add	x3, x3, #0x890
    82a4:	add	x4, sp, #0x10
    82a8:	add	x5, sp, #0x8
    82ac:	mov	x0, x1
    82b0:	mov	x1, x8
    82b4:	str	x20, [sp, #8]
    82b8:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    82bc:	cbz	w0, 842c <PyInit__decimal@@Base+0x18c8>
    82c0:	ldr	x8, [sp, #8]
    82c4:	cmp	x8, x20
    82c8:	b.eq	830c <PyInit__decimal@@Base+0x17a8>  // b.none
    82cc:	ldr	x0, [x8, #8]
    82d0:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    82d4:	add	x8, x8, #0x4c0
    82d8:	cmp	x0, x8
    82dc:	b.eq	8348 <PyInit__decimal@@Base+0x17e4>  // b.none
    82e0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    82e4:	add	x1, x1, #0x4c0
    82e8:	bl	69b0 <PyType_IsSubtype@plt>
    82ec:	cbnz	w0, 8348 <PyInit__decimal@@Base+0x17e4>
    82f0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    82f4:	ldr	x8, [x8, #3936]
    82f8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    82fc:	add	x1, x1, #0x131
    8300:	ldr	x0, [x8]
    8304:	bl	6640 <PyErr_SetString@plt>
    8308:	b	842c <PyInit__decimal@@Base+0x18c8>
    830c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    8310:	ldr	x0, [x21, #1408]
    8314:	add	x2, sp, #0x18
    8318:	mov	x1, xzr
    831c:	bl	6730 <PyContextVar_Get@plt>
    8320:	tbnz	w0, #31, 8594 <PyInit__decimal@@Base+0x1a30>
    8324:	ldr	x20, [sp, #24]
    8328:	cbz	x20, 84b0 <PyInit__decimal@@Base+0x194c>
    832c:	str	x20, [sp, #8]
    8330:	ldr	x8, [x20]
    8334:	subs	x8, x8, #0x1
    8338:	str	x8, [x20]
    833c:	b.ne	8348 <PyInit__decimal@@Base+0x17e4>  // b.any
    8340:	mov	x0, x20
    8344:	bl	65c0 <_Py_Dealloc@plt>
    8348:	ldp	x21, x20, [sp, #8]
    834c:	cbz	x20, 83d4 <PyInit__decimal@@Base+0x1870>
    8350:	ldr	x0, [x20, #8]
    8354:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    8358:	add	x22, x22, #0x320
    835c:	cmp	x0, x22
    8360:	b.eq	8374 <PyInit__decimal@@Base+0x1810>  // b.none
    8364:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8368:	add	x1, x1, #0x320
    836c:	bl	69b0 <PyType_IsSubtype@plt>
    8370:	cbz	w0, 8448 <PyInit__decimal@@Base+0x18e4>
    8374:	cmp	x19, x22
    8378:	str	wzr, [sp, #24]
    837c:	b.ne	838c <PyInit__decimal@@Base+0x1828>  // b.any
    8380:	ldr	x8, [x20, #8]
    8384:	cmp	x8, x22
    8388:	b.eq	8554 <PyInit__decimal@@Base+0x19f0>  // b.none
    838c:	mov	x0, x19
    8390:	bl	a460 <PyInit__decimal@@Base+0x38fc>
    8394:	cbz	x0, 842c <PyInit__decimal@@Base+0x18c8>
    8398:	mov	x19, x0
    839c:	add	x0, x0, #0x18
    83a0:	add	x1, x20, #0x18
    83a4:	add	x2, sp, #0x18
    83a8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
    83ac:	ldr	w1, [sp, #24]
    83b0:	mov	x0, x21
    83b4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    83b8:	cbz	w0, 8514 <PyInit__decimal@@Base+0x19b0>
    83bc:	ldr	x8, [x19]
    83c0:	subs	x8, x8, #0x1
    83c4:	str	x8, [x19]
    83c8:	b.ne	842c <PyInit__decimal@@Base+0x18c8>  // b.any
    83cc:	mov	x0, x19
    83d0:	b	8428 <PyInit__decimal@@Base+0x18c4>
    83d4:	mov	x0, x19
    83d8:	stur	wzr, [x29, #-4]
    83dc:	bl	a460 <PyInit__decimal@@Base+0x38fc>
    83e0:	mov	x20, x0
    83e4:	cbz	x0, 8430 <PyInit__decimal@@Base+0x18cc>
    83e8:	add	x0, sp, #0x18
    83ec:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
    83f0:	add	x0, x20, #0x18
    83f4:	add	x2, sp, #0x18
    83f8:	sub	x3, x29, #0x4
    83fc:	mov	x1, xzr
    8400:	bl	21014 <PyInit__decimal@@Base+0x1a4b0>
    8404:	ldur	w1, [x29, #-4]
    8408:	mov	x0, x21
    840c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    8410:	cbz	w0, 8430 <PyInit__decimal@@Base+0x18cc>
    8414:	ldr	x8, [x20]
    8418:	subs	x8, x8, #0x1
    841c:	str	x8, [x20]
    8420:	b.ne	842c <PyInit__decimal@@Base+0x18c8>  // b.any
    8424:	mov	x0, x20
    8428:	bl	65c0 <_Py_Dealloc@plt>
    842c:	mov	x20, xzr
    8430:	mov	x0, x20
    8434:	ldp	x20, x19, [sp, #112]
    8438:	ldp	x22, x21, [sp, #96]
    843c:	ldp	x29, x30, [sp, #80]
    8440:	add	sp, sp, #0x80
    8444:	ret
    8448:	ldr	x0, [x20, #8]
    844c:	ldr	x8, [x0, #168]
    8450:	tbnz	w8, #28, 851c <PyInit__decimal@@Base+0x19b8>
    8454:	tbnz	w8, #24, 8564 <PyInit__decimal@@Base+0x1a00>
    8458:	tst	x8, #0x6000000
    845c:	b.eq	85a0 <PyInit__decimal@@Base+0x1a3c>  // b.none
    8460:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    8464:	ldr	x8, [x8, #3936]
    8468:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    846c:	add	x2, x2, #0x40d
    8470:	mov	x0, x20
    8474:	ldr	x1, [x8]
    8478:	bl	12930 <PyInit__decimal@@Base+0xbdcc>
    847c:	mov	x20, x0
    8480:	cbz	x0, 8430 <PyInit__decimal@@Base+0x18cc>
    8484:	mov	x0, x20
    8488:	bl	12978 <PyInit__decimal@@Base+0xbe14>
    848c:	ldr	x8, [x20]
    8490:	mov	x22, x0
    8494:	subs	x8, x8, #0x1
    8498:	str	x8, [x20]
    849c:	b.ne	84a8 <PyInit__decimal@@Base+0x1944>  // b.any
    84a0:	mov	x0, x20
    84a4:	bl	65c0 <_Py_Dealloc@plt>
    84a8:	cbnz	x22, 8534 <PyInit__decimal@@Base+0x19d0>
    84ac:	b	842c <PyInit__decimal@@Base+0x18c8>
    84b0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    84b4:	ldr	x22, [x8, #1504]
    84b8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    84bc:	add	x0, x0, #0x4c0
    84c0:	mov	x1, xzr
    84c4:	bl	6830 <PyObject_CallObject@plt>
    84c8:	cbz	x0, 8594 <PyInit__decimal@@Base+0x1a30>
    84cc:	ldp	q1, q0, [x22, #32]
    84d0:	ldr	q2, [x22, #16]
    84d4:	mov	x20, x0
    84d8:	mov	x1, x20
    84dc:	stp	q1, q0, [x0, #32]
    84e0:	str	q2, [x0, #16]
    84e4:	ldr	w8, [x22, #80]
    84e8:	stp	wzr, wzr, [x0, #44]
    84ec:	str	w8, [x0, #80]
    84f0:	ldr	x0, [x21, #1408]
    84f4:	bl	6670 <PyContextVar_Set@plt>
    84f8:	cbz	x0, 857c <PyInit__decimal@@Base+0x1a18>
    84fc:	ldr	x8, [x0]
    8500:	subs	x8, x8, #0x1
    8504:	str	x8, [x0]
    8508:	b.ne	832c <PyInit__decimal@@Base+0x17c8>  // b.any
    850c:	bl	65c0 <_Py_Dealloc@plt>
    8510:	b	832c <PyInit__decimal@@Base+0x17c8>
    8514:	mov	x20, x19
    8518:	b	8430 <PyInit__decimal@@Base+0x18cc>
    851c:	mov	w1, #0x1                   	// #1
    8520:	mov	w2, #0x1                   	// #1
    8524:	mov	x0, x20
    8528:	bl	12664 <PyInit__decimal@@Base+0xbb00>
    852c:	cbz	x0, 842c <PyInit__decimal@@Base+0x18c8>
    8530:	mov	x22, x0
    8534:	mov	x0, x19
    8538:	mov	x1, x22
    853c:	mov	x2, x21
    8540:	bl	12874 <PyInit__decimal@@Base+0xbd10>
    8544:	mov	x20, x0
    8548:	mov	x0, x22
    854c:	bl	6550 <PyMem_Free@plt>
    8550:	b	8430 <PyInit__decimal@@Base+0x18cc>
    8554:	ldr	x8, [x20]
    8558:	add	x8, x8, #0x1
    855c:	str	x8, [x20]
    8560:	b	8430 <PyInit__decimal@@Base+0x18cc>
    8564:	mov	x0, x19
    8568:	mov	x1, x20
    856c:	mov	x2, x21
    8570:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8574:	mov	x20, x0
    8578:	b	8430 <PyInit__decimal@@Base+0x18cc>
    857c:	ldr	x8, [x20]
    8580:	subs	x8, x8, #0x1
    8584:	str	x8, [x20]
    8588:	b.ne	8594 <PyInit__decimal@@Base+0x1a30>  // b.any
    858c:	mov	x0, x20
    8590:	bl	65c0 <_Py_Dealloc@plt>
    8594:	mov	x20, xzr
    8598:	str	xzr, [sp, #8]
    859c:	b	8430 <PyInit__decimal@@Base+0x18cc>
    85a0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    85a4:	ldr	x8, [x8, #3864]
    85a8:	cmp	x0, x8
    85ac:	b.eq	85c0 <PyInit__decimal@@Base+0x1a5c>  // b.none
    85b0:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
    85b4:	ldr	x1, [x1, #3864]
    85b8:	bl	69b0 <PyType_IsSubtype@plt>
    85bc:	cbz	w0, 85e4 <PyInit__decimal@@Base+0x1a80>
    85c0:	mov	w1, #0x400                 	// #1024
    85c4:	mov	x0, x21
    85c8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    85cc:	cbnz	w0, 842c <PyInit__decimal@@Base+0x18c8>
    85d0:	mov	x0, x19
    85d4:	mov	x1, x20
    85d8:	mov	x2, x21
    85dc:	bl	a9d4 <PyInit__decimal@@Base+0x3e70>
    85e0:	b	8574 <PyInit__decimal@@Base+0x1a10>
    85e4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    85e8:	ldr	x8, [x20, #8]
    85ec:	ldr	x9, [x9, #3936]
    85f0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    85f4:	add	x1, x1, #0xd63
    85f8:	ldr	x2, [x8, #24]
    85fc:	ldr	x0, [x9]
    8600:	bl	6a00 <PyErr_Format@plt>
    8604:	b	842c <PyInit__decimal@@Base+0x18c8>
    8608:	stp	x29, x30, [sp, #-32]!
    860c:	str	x19, [sp, #16]
    8610:	mov	x29, sp
    8614:	mov	x19, x0
    8618:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    861c:	add	x0, x0, #0x4c0
    8620:	mov	x1, xzr
    8624:	bl	6830 <PyObject_CallObject@plt>
    8628:	cbz	x0, 8648 <PyInit__decimal@@Base+0x1ae4>
    862c:	ldp	q1, q0, [x19, #32]
    8630:	ldr	q2, [x19, #16]
    8634:	stp	q1, q0, [x0, #32]
    8638:	str	q2, [x0, #16]
    863c:	str	wzr, [x0, #48]
    8640:	ldr	w8, [x19, #80]
    8644:	str	w8, [x0, #80]
    8648:	ldr	x19, [sp, #16]
    864c:	ldp	x29, x30, [sp], #32
    8650:	ret
    8654:	sub	sp, sp, #0x50
    8658:	stp	x29, x30, [sp, #16]
    865c:	str	x23, [sp, #32]
    8660:	stp	x22, x21, [sp, #48]
    8664:	stp	x20, x19, [sp, #64]
    8668:	add	x29, sp, #0x10
    866c:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    8670:	mov	x20, x0
    8674:	ldr	x0, [x22, #1408]
    8678:	mov	x19, x1
    867c:	add	x2, x29, #0x18
    8680:	mov	x1, xzr
    8684:	stur	wzr, [x29, #-4]
    8688:	bl	6730 <PyContextVar_Get@plt>
    868c:	tbnz	w0, #31, 88c0 <PyInit__decimal@@Base+0x1d5c>
    8690:	ldr	x21, [x29, #24]
    8694:	cbz	x21, 87ac <PyInit__decimal@@Base+0x1c48>
    8698:	ldr	x8, [x21]
    869c:	subs	x8, x8, #0x1
    86a0:	str	x8, [x21]
    86a4:	b.ne	86b0 <PyInit__decimal@@Base+0x1b4c>  // b.any
    86a8:	mov	x0, x21
    86ac:	bl	65c0 <_Py_Dealloc@plt>
    86b0:	ldr	x0, [x20, #8]
    86b4:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    86b8:	add	x22, x22, #0x320
    86bc:	cmp	x0, x22
    86c0:	b.eq	86d4 <PyInit__decimal@@Base+0x1b70>  // b.none
    86c4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    86c8:	add	x1, x1, #0x320
    86cc:	bl	69b0 <PyType_IsSubtype@plt>
    86d0:	cbz	w0, 8840 <PyInit__decimal@@Base+0x1cdc>
    86d4:	ldr	x8, [x20]
    86d8:	add	x8, x8, #0x1
    86dc:	str	x8, [x20]
    86e0:	ldr	x0, [x19, #8]
    86e4:	cmp	x0, x22
    86e8:	b.eq	86fc <PyInit__decimal@@Base+0x1b98>  // b.none
    86ec:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    86f0:	add	x1, x1, #0x320
    86f4:	bl	69b0 <PyType_IsSubtype@plt>
    86f8:	cbz	w0, 8864 <PyInit__decimal@@Base+0x1d00>
    86fc:	ldr	x8, [x19]
    8700:	add	x8, x8, #0x1
    8704:	str	x8, [x19]
    8708:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    870c:	add	x0, x0, #0x320
    8710:	bl	6940 <_PyObject_New@plt>
    8714:	cbz	x0, 8810 <PyInit__decimal@@Base+0x1cac>
    8718:	mov	w8, #0x30                  	// #48
    871c:	mov	x22, x0
    8720:	strb	w8, [x0, #24]!
    8724:	mov	x9, #0xffffffffffffffff    	// #-1
    8728:	mov	w10, #0x4                   	// #4
    872c:	add	x1, x20, #0x18
    8730:	add	x2, x19, #0x18
    8734:	add	x8, x0, #0x30
    8738:	add	x3, x21, #0x10
    873c:	sub	x4, x29, #0x4
    8740:	stur	x9, [x0, #-8]
    8744:	stp	xzr, xzr, [x0, #8]
    8748:	stp	xzr, x10, [x0, #24]
    874c:	str	x8, [x0, #40]
    8750:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
    8754:	ldr	x8, [x20]
    8758:	subs	x8, x8, #0x1
    875c:	str	x8, [x20]
    8760:	b.ne	876c <PyInit__decimal@@Base+0x1c08>  // b.any
    8764:	mov	x0, x20
    8768:	bl	65c0 <_Py_Dealloc@plt>
    876c:	ldr	x8, [x19]
    8770:	subs	x8, x8, #0x1
    8774:	str	x8, [x19]
    8778:	b.ne	8784 <PyInit__decimal@@Base+0x1c20>  // b.any
    877c:	mov	x0, x19
    8780:	bl	65c0 <_Py_Dealloc@plt>
    8784:	ldur	w1, [x29, #-4]
    8788:	mov	x0, x21
    878c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    8790:	cbz	w0, 88c4 <PyInit__decimal@@Base+0x1d60>
    8794:	ldr	x8, [x22]
    8798:	subs	x8, x8, #0x1
    879c:	str	x8, [x22]
    87a0:	b.ne	88c0 <PyInit__decimal@@Base+0x1d5c>  // b.any
    87a4:	mov	x0, x22
    87a8:	b	88bc <PyInit__decimal@@Base+0x1d58>
    87ac:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    87b0:	ldr	x23, [x8, #1504]
    87b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    87b8:	add	x0, x0, #0x4c0
    87bc:	mov	x1, xzr
    87c0:	bl	6830 <PyObject_CallObject@plt>
    87c4:	cbz	x0, 88c0 <PyInit__decimal@@Base+0x1d5c>
    87c8:	ldp	q1, q0, [x23, #32]
    87cc:	ldr	q2, [x23, #16]
    87d0:	mov	x21, x0
    87d4:	mov	x1, x21
    87d8:	stp	q1, q0, [x0, #32]
    87dc:	str	q2, [x0, #16]
    87e0:	ldr	w8, [x23, #80]
    87e4:	stp	wzr, wzr, [x0, #44]
    87e8:	str	w8, [x0, #80]
    87ec:	ldr	x0, [x22, #1408]
    87f0:	bl	6670 <PyContextVar_Set@plt>
    87f4:	cbz	x0, 88a8 <PyInit__decimal@@Base+0x1d44>
    87f8:	ldr	x8, [x0]
    87fc:	subs	x8, x8, #0x1
    8800:	str	x8, [x0]
    8804:	b.ne	8698 <PyInit__decimal@@Base+0x1b34>  // b.any
    8808:	bl	65c0 <_Py_Dealloc@plt>
    880c:	b	8698 <PyInit__decimal@@Base+0x1b34>
    8810:	ldr	x8, [x20]
    8814:	subs	x8, x8, #0x1
    8818:	str	x8, [x20]
    881c:	b.ne	8828 <PyInit__decimal@@Base+0x1cc4>  // b.any
    8820:	mov	x0, x20
    8824:	bl	65c0 <_Py_Dealloc@plt>
    8828:	ldr	x8, [x19]
    882c:	subs	x8, x8, #0x1
    8830:	str	x8, [x19]
    8834:	b.ne	88c0 <PyInit__decimal@@Base+0x1d5c>  // b.any
    8838:	mov	x0, x19
    883c:	b	88bc <PyInit__decimal@@Base+0x1d58>
    8840:	ldr	x8, [x20, #8]
    8844:	ldrb	w8, [x8, #171]
    8848:	tbnz	w8, #0, 8888 <PyInit__decimal@@Base+0x1d24>
    884c:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8850:	ldr	x22, [x22, #3912]
    8854:	ldr	x8, [x22]
    8858:	add	x8, x8, #0x1
    885c:	str	x8, [x22]
    8860:	b	88c4 <PyInit__decimal@@Base+0x1d60>
    8864:	ldr	x8, [x19, #8]
    8868:	ldrb	w8, [x8, #171]
    886c:	tbnz	w8, #0, 88e0 <PyInit__decimal@@Base+0x1d7c>
    8870:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8874:	ldr	x22, [x22, #3912]
    8878:	ldr	x8, [x22]
    887c:	add	x8, x8, #0x1
    8880:	str	x8, [x22]
    8884:	b	8900 <PyInit__decimal@@Base+0x1d9c>
    8888:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    888c:	add	x0, x0, #0x320
    8890:	mov	x1, x20
    8894:	mov	x2, x21
    8898:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    889c:	mov	x20, x0
    88a0:	cbnz	x0, 86e0 <PyInit__decimal@@Base+0x1b7c>
    88a4:	b	88c0 <PyInit__decimal@@Base+0x1d5c>
    88a8:	ldr	x8, [x21]
    88ac:	subs	x8, x8, #0x1
    88b0:	str	x8, [x21]
    88b4:	b.ne	88c0 <PyInit__decimal@@Base+0x1d5c>  // b.any
    88b8:	mov	x0, x21
    88bc:	bl	65c0 <_Py_Dealloc@plt>
    88c0:	mov	x22, xzr
    88c4:	mov	x0, x22
    88c8:	ldp	x20, x19, [sp, #64]
    88cc:	ldp	x22, x21, [sp, #48]
    88d0:	ldr	x23, [sp, #32]
    88d4:	ldp	x29, x30, [sp, #16]
    88d8:	add	sp, sp, #0x50
    88dc:	ret
    88e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    88e4:	add	x0, x0, #0x320
    88e8:	mov	x1, x19
    88ec:	mov	x2, x21
    88f0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    88f4:	mov	x19, x0
    88f8:	cbnz	x0, 8708 <PyInit__decimal@@Base+0x1ba4>
    88fc:	mov	x22, xzr
    8900:	ldr	x8, [x20]
    8904:	subs	x8, x8, #0x1
    8908:	str	x8, [x20]
    890c:	b.ne	88c4 <PyInit__decimal@@Base+0x1d60>  // b.any
    8910:	mov	x0, x20
    8914:	bl	65c0 <_Py_Dealloc@plt>
    8918:	b	88c4 <PyInit__decimal@@Base+0x1d60>
    891c:	sub	sp, sp, #0x50
    8920:	stp	x29, x30, [sp, #16]
    8924:	str	x23, [sp, #32]
    8928:	stp	x22, x21, [sp, #48]
    892c:	stp	x20, x19, [sp, #64]
    8930:	add	x29, sp, #0x10
    8934:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    8938:	mov	x20, x0
    893c:	ldr	x0, [x22, #1408]
    8940:	mov	x19, x1
    8944:	add	x2, x29, #0x18
    8948:	mov	x1, xzr
    894c:	stur	wzr, [x29, #-4]
    8950:	bl	6730 <PyContextVar_Get@plt>
    8954:	tbnz	w0, #31, 8b88 <PyInit__decimal@@Base+0x2024>
    8958:	ldr	x21, [x29, #24]
    895c:	cbz	x21, 8a74 <PyInit__decimal@@Base+0x1f10>
    8960:	ldr	x8, [x21]
    8964:	subs	x8, x8, #0x1
    8968:	str	x8, [x21]
    896c:	b.ne	8978 <PyInit__decimal@@Base+0x1e14>  // b.any
    8970:	mov	x0, x21
    8974:	bl	65c0 <_Py_Dealloc@plt>
    8978:	ldr	x0, [x20, #8]
    897c:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    8980:	add	x22, x22, #0x320
    8984:	cmp	x0, x22
    8988:	b.eq	899c <PyInit__decimal@@Base+0x1e38>  // b.none
    898c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8990:	add	x1, x1, #0x320
    8994:	bl	69b0 <PyType_IsSubtype@plt>
    8998:	cbz	w0, 8b08 <PyInit__decimal@@Base+0x1fa4>
    899c:	ldr	x8, [x20]
    89a0:	add	x8, x8, #0x1
    89a4:	str	x8, [x20]
    89a8:	ldr	x0, [x19, #8]
    89ac:	cmp	x0, x22
    89b0:	b.eq	89c4 <PyInit__decimal@@Base+0x1e60>  // b.none
    89b4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    89b8:	add	x1, x1, #0x320
    89bc:	bl	69b0 <PyType_IsSubtype@plt>
    89c0:	cbz	w0, 8b2c <PyInit__decimal@@Base+0x1fc8>
    89c4:	ldr	x8, [x19]
    89c8:	add	x8, x8, #0x1
    89cc:	str	x8, [x19]
    89d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    89d4:	add	x0, x0, #0x320
    89d8:	bl	6940 <_PyObject_New@plt>
    89dc:	cbz	x0, 8ad8 <PyInit__decimal@@Base+0x1f74>
    89e0:	mov	w8, #0x30                  	// #48
    89e4:	mov	x22, x0
    89e8:	strb	w8, [x0, #24]!
    89ec:	mov	x9, #0xffffffffffffffff    	// #-1
    89f0:	mov	w10, #0x4                   	// #4
    89f4:	add	x1, x20, #0x18
    89f8:	add	x2, x19, #0x18
    89fc:	add	x8, x0, #0x30
    8a00:	add	x3, x21, #0x10
    8a04:	sub	x4, x29, #0x4
    8a08:	stur	x9, [x0, #-8]
    8a0c:	stp	xzr, xzr, [x0, #8]
    8a10:	stp	xzr, x10, [x0, #24]
    8a14:	str	x8, [x0, #40]
    8a18:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
    8a1c:	ldr	x8, [x20]
    8a20:	subs	x8, x8, #0x1
    8a24:	str	x8, [x20]
    8a28:	b.ne	8a34 <PyInit__decimal@@Base+0x1ed0>  // b.any
    8a2c:	mov	x0, x20
    8a30:	bl	65c0 <_Py_Dealloc@plt>
    8a34:	ldr	x8, [x19]
    8a38:	subs	x8, x8, #0x1
    8a3c:	str	x8, [x19]
    8a40:	b.ne	8a4c <PyInit__decimal@@Base+0x1ee8>  // b.any
    8a44:	mov	x0, x19
    8a48:	bl	65c0 <_Py_Dealloc@plt>
    8a4c:	ldur	w1, [x29, #-4]
    8a50:	mov	x0, x21
    8a54:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    8a58:	cbz	w0, 8b8c <PyInit__decimal@@Base+0x2028>
    8a5c:	ldr	x8, [x22]
    8a60:	subs	x8, x8, #0x1
    8a64:	str	x8, [x22]
    8a68:	b.ne	8b88 <PyInit__decimal@@Base+0x2024>  // b.any
    8a6c:	mov	x0, x22
    8a70:	b	8b84 <PyInit__decimal@@Base+0x2020>
    8a74:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    8a78:	ldr	x23, [x8, #1504]
    8a7c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8a80:	add	x0, x0, #0x4c0
    8a84:	mov	x1, xzr
    8a88:	bl	6830 <PyObject_CallObject@plt>
    8a8c:	cbz	x0, 8b88 <PyInit__decimal@@Base+0x2024>
    8a90:	ldp	q1, q0, [x23, #32]
    8a94:	ldr	q2, [x23, #16]
    8a98:	mov	x21, x0
    8a9c:	mov	x1, x21
    8aa0:	stp	q1, q0, [x0, #32]
    8aa4:	str	q2, [x0, #16]
    8aa8:	ldr	w8, [x23, #80]
    8aac:	stp	wzr, wzr, [x0, #44]
    8ab0:	str	w8, [x0, #80]
    8ab4:	ldr	x0, [x22, #1408]
    8ab8:	bl	6670 <PyContextVar_Set@plt>
    8abc:	cbz	x0, 8b70 <PyInit__decimal@@Base+0x200c>
    8ac0:	ldr	x8, [x0]
    8ac4:	subs	x8, x8, #0x1
    8ac8:	str	x8, [x0]
    8acc:	b.ne	8960 <PyInit__decimal@@Base+0x1dfc>  // b.any
    8ad0:	bl	65c0 <_Py_Dealloc@plt>
    8ad4:	b	8960 <PyInit__decimal@@Base+0x1dfc>
    8ad8:	ldr	x8, [x20]
    8adc:	subs	x8, x8, #0x1
    8ae0:	str	x8, [x20]
    8ae4:	b.ne	8af0 <PyInit__decimal@@Base+0x1f8c>  // b.any
    8ae8:	mov	x0, x20
    8aec:	bl	65c0 <_Py_Dealloc@plt>
    8af0:	ldr	x8, [x19]
    8af4:	subs	x8, x8, #0x1
    8af8:	str	x8, [x19]
    8afc:	b.ne	8b88 <PyInit__decimal@@Base+0x2024>  // b.any
    8b00:	mov	x0, x19
    8b04:	b	8b84 <PyInit__decimal@@Base+0x2020>
    8b08:	ldr	x8, [x20, #8]
    8b0c:	ldrb	w8, [x8, #171]
    8b10:	tbnz	w8, #0, 8b50 <PyInit__decimal@@Base+0x1fec>
    8b14:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8b18:	ldr	x22, [x22, #3912]
    8b1c:	ldr	x8, [x22]
    8b20:	add	x8, x8, #0x1
    8b24:	str	x8, [x22]
    8b28:	b	8b8c <PyInit__decimal@@Base+0x2028>
    8b2c:	ldr	x8, [x19, #8]
    8b30:	ldrb	w8, [x8, #171]
    8b34:	tbnz	w8, #0, 8ba8 <PyInit__decimal@@Base+0x2044>
    8b38:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8b3c:	ldr	x22, [x22, #3912]
    8b40:	ldr	x8, [x22]
    8b44:	add	x8, x8, #0x1
    8b48:	str	x8, [x22]
    8b4c:	b	8bc8 <PyInit__decimal@@Base+0x2064>
    8b50:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8b54:	add	x0, x0, #0x320
    8b58:	mov	x1, x20
    8b5c:	mov	x2, x21
    8b60:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8b64:	mov	x20, x0
    8b68:	cbnz	x0, 89a8 <PyInit__decimal@@Base+0x1e44>
    8b6c:	b	8b88 <PyInit__decimal@@Base+0x2024>
    8b70:	ldr	x8, [x21]
    8b74:	subs	x8, x8, #0x1
    8b78:	str	x8, [x21]
    8b7c:	b.ne	8b88 <PyInit__decimal@@Base+0x2024>  // b.any
    8b80:	mov	x0, x21
    8b84:	bl	65c0 <_Py_Dealloc@plt>
    8b88:	mov	x22, xzr
    8b8c:	mov	x0, x22
    8b90:	ldp	x20, x19, [sp, #64]
    8b94:	ldp	x22, x21, [sp, #48]
    8b98:	ldr	x23, [sp, #32]
    8b9c:	ldp	x29, x30, [sp, #16]
    8ba0:	add	sp, sp, #0x50
    8ba4:	ret
    8ba8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8bac:	add	x0, x0, #0x320
    8bb0:	mov	x1, x19
    8bb4:	mov	x2, x21
    8bb8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8bbc:	mov	x19, x0
    8bc0:	cbnz	x0, 89d0 <PyInit__decimal@@Base+0x1e6c>
    8bc4:	mov	x22, xzr
    8bc8:	ldr	x8, [x20]
    8bcc:	subs	x8, x8, #0x1
    8bd0:	str	x8, [x20]
    8bd4:	b.ne	8b8c <PyInit__decimal@@Base+0x2028>  // b.any
    8bd8:	mov	x0, x20
    8bdc:	bl	65c0 <_Py_Dealloc@plt>
    8be0:	b	8b8c <PyInit__decimal@@Base+0x2028>
    8be4:	sub	sp, sp, #0x50
    8be8:	stp	x29, x30, [sp, #16]
    8bec:	str	x23, [sp, #32]
    8bf0:	stp	x22, x21, [sp, #48]
    8bf4:	stp	x20, x19, [sp, #64]
    8bf8:	add	x29, sp, #0x10
    8bfc:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    8c00:	mov	x20, x0
    8c04:	ldr	x0, [x22, #1408]
    8c08:	mov	x19, x1
    8c0c:	add	x2, x29, #0x18
    8c10:	mov	x1, xzr
    8c14:	stur	wzr, [x29, #-4]
    8c18:	bl	6730 <PyContextVar_Get@plt>
    8c1c:	tbnz	w0, #31, 8e50 <PyInit__decimal@@Base+0x22ec>
    8c20:	ldr	x21, [x29, #24]
    8c24:	cbz	x21, 8d3c <PyInit__decimal@@Base+0x21d8>
    8c28:	ldr	x8, [x21]
    8c2c:	subs	x8, x8, #0x1
    8c30:	str	x8, [x21]
    8c34:	b.ne	8c40 <PyInit__decimal@@Base+0x20dc>  // b.any
    8c38:	mov	x0, x21
    8c3c:	bl	65c0 <_Py_Dealloc@plt>
    8c40:	ldr	x0, [x20, #8]
    8c44:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    8c48:	add	x22, x22, #0x320
    8c4c:	cmp	x0, x22
    8c50:	b.eq	8c64 <PyInit__decimal@@Base+0x2100>  // b.none
    8c54:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8c58:	add	x1, x1, #0x320
    8c5c:	bl	69b0 <PyType_IsSubtype@plt>
    8c60:	cbz	w0, 8dd0 <PyInit__decimal@@Base+0x226c>
    8c64:	ldr	x8, [x20]
    8c68:	add	x8, x8, #0x1
    8c6c:	str	x8, [x20]
    8c70:	ldr	x0, [x19, #8]
    8c74:	cmp	x0, x22
    8c78:	b.eq	8c8c <PyInit__decimal@@Base+0x2128>  // b.none
    8c7c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8c80:	add	x1, x1, #0x320
    8c84:	bl	69b0 <PyType_IsSubtype@plt>
    8c88:	cbz	w0, 8df4 <PyInit__decimal@@Base+0x2290>
    8c8c:	ldr	x8, [x19]
    8c90:	add	x8, x8, #0x1
    8c94:	str	x8, [x19]
    8c98:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8c9c:	add	x0, x0, #0x320
    8ca0:	bl	6940 <_PyObject_New@plt>
    8ca4:	cbz	x0, 8da0 <PyInit__decimal@@Base+0x223c>
    8ca8:	mov	w8, #0x30                  	// #48
    8cac:	mov	x22, x0
    8cb0:	strb	w8, [x0, #24]!
    8cb4:	mov	x9, #0xffffffffffffffff    	// #-1
    8cb8:	mov	w10, #0x4                   	// #4
    8cbc:	add	x1, x20, #0x18
    8cc0:	add	x2, x19, #0x18
    8cc4:	add	x8, x0, #0x30
    8cc8:	add	x3, x21, #0x10
    8ccc:	sub	x4, x29, #0x4
    8cd0:	stur	x9, [x0, #-8]
    8cd4:	stp	xzr, xzr, [x0, #8]
    8cd8:	stp	xzr, x10, [x0, #24]
    8cdc:	str	x8, [x0, #40]
    8ce0:	bl	284d4 <PyInit__decimal@@Base+0x21970>
    8ce4:	ldr	x8, [x20]
    8ce8:	subs	x8, x8, #0x1
    8cec:	str	x8, [x20]
    8cf0:	b.ne	8cfc <PyInit__decimal@@Base+0x2198>  // b.any
    8cf4:	mov	x0, x20
    8cf8:	bl	65c0 <_Py_Dealloc@plt>
    8cfc:	ldr	x8, [x19]
    8d00:	subs	x8, x8, #0x1
    8d04:	str	x8, [x19]
    8d08:	b.ne	8d14 <PyInit__decimal@@Base+0x21b0>  // b.any
    8d0c:	mov	x0, x19
    8d10:	bl	65c0 <_Py_Dealloc@plt>
    8d14:	ldur	w1, [x29, #-4]
    8d18:	mov	x0, x21
    8d1c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    8d20:	cbz	w0, 8e54 <PyInit__decimal@@Base+0x22f0>
    8d24:	ldr	x8, [x22]
    8d28:	subs	x8, x8, #0x1
    8d2c:	str	x8, [x22]
    8d30:	b.ne	8e50 <PyInit__decimal@@Base+0x22ec>  // b.any
    8d34:	mov	x0, x22
    8d38:	b	8e4c <PyInit__decimal@@Base+0x22e8>
    8d3c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    8d40:	ldr	x23, [x8, #1504]
    8d44:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8d48:	add	x0, x0, #0x4c0
    8d4c:	mov	x1, xzr
    8d50:	bl	6830 <PyObject_CallObject@plt>
    8d54:	cbz	x0, 8e50 <PyInit__decimal@@Base+0x22ec>
    8d58:	ldp	q1, q0, [x23, #32]
    8d5c:	ldr	q2, [x23, #16]
    8d60:	mov	x21, x0
    8d64:	mov	x1, x21
    8d68:	stp	q1, q0, [x0, #32]
    8d6c:	str	q2, [x0, #16]
    8d70:	ldr	w8, [x23, #80]
    8d74:	stp	wzr, wzr, [x0, #44]
    8d78:	str	w8, [x0, #80]
    8d7c:	ldr	x0, [x22, #1408]
    8d80:	bl	6670 <PyContextVar_Set@plt>
    8d84:	cbz	x0, 8e38 <PyInit__decimal@@Base+0x22d4>
    8d88:	ldr	x8, [x0]
    8d8c:	subs	x8, x8, #0x1
    8d90:	str	x8, [x0]
    8d94:	b.ne	8c28 <PyInit__decimal@@Base+0x20c4>  // b.any
    8d98:	bl	65c0 <_Py_Dealloc@plt>
    8d9c:	b	8c28 <PyInit__decimal@@Base+0x20c4>
    8da0:	ldr	x8, [x20]
    8da4:	subs	x8, x8, #0x1
    8da8:	str	x8, [x20]
    8dac:	b.ne	8db8 <PyInit__decimal@@Base+0x2254>  // b.any
    8db0:	mov	x0, x20
    8db4:	bl	65c0 <_Py_Dealloc@plt>
    8db8:	ldr	x8, [x19]
    8dbc:	subs	x8, x8, #0x1
    8dc0:	str	x8, [x19]
    8dc4:	b.ne	8e50 <PyInit__decimal@@Base+0x22ec>  // b.any
    8dc8:	mov	x0, x19
    8dcc:	b	8e4c <PyInit__decimal@@Base+0x22e8>
    8dd0:	ldr	x8, [x20, #8]
    8dd4:	ldrb	w8, [x8, #171]
    8dd8:	tbnz	w8, #0, 8e18 <PyInit__decimal@@Base+0x22b4>
    8ddc:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8de0:	ldr	x22, [x22, #3912]
    8de4:	ldr	x8, [x22]
    8de8:	add	x8, x8, #0x1
    8dec:	str	x8, [x22]
    8df0:	b	8e54 <PyInit__decimal@@Base+0x22f0>
    8df4:	ldr	x8, [x19, #8]
    8df8:	ldrb	w8, [x8, #171]
    8dfc:	tbnz	w8, #0, 8e70 <PyInit__decimal@@Base+0x230c>
    8e00:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    8e04:	ldr	x22, [x22, #3912]
    8e08:	ldr	x8, [x22]
    8e0c:	add	x8, x8, #0x1
    8e10:	str	x8, [x22]
    8e14:	b	8e90 <PyInit__decimal@@Base+0x232c>
    8e18:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8e1c:	add	x0, x0, #0x320
    8e20:	mov	x1, x20
    8e24:	mov	x2, x21
    8e28:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8e2c:	mov	x20, x0
    8e30:	cbnz	x0, 8c70 <PyInit__decimal@@Base+0x210c>
    8e34:	b	8e50 <PyInit__decimal@@Base+0x22ec>
    8e38:	ldr	x8, [x21]
    8e3c:	subs	x8, x8, #0x1
    8e40:	str	x8, [x21]
    8e44:	b.ne	8e50 <PyInit__decimal@@Base+0x22ec>  // b.any
    8e48:	mov	x0, x21
    8e4c:	bl	65c0 <_Py_Dealloc@plt>
    8e50:	mov	x22, xzr
    8e54:	mov	x0, x22
    8e58:	ldp	x20, x19, [sp, #64]
    8e5c:	ldp	x22, x21, [sp, #48]
    8e60:	ldr	x23, [sp, #32]
    8e64:	ldp	x29, x30, [sp, #16]
    8e68:	add	sp, sp, #0x50
    8e6c:	ret
    8e70:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8e74:	add	x0, x0, #0x320
    8e78:	mov	x1, x19
    8e7c:	mov	x2, x21
    8e80:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    8e84:	mov	x19, x0
    8e88:	cbnz	x0, 8c98 <PyInit__decimal@@Base+0x2134>
    8e8c:	mov	x22, xzr
    8e90:	ldr	x8, [x20]
    8e94:	subs	x8, x8, #0x1
    8e98:	str	x8, [x20]
    8e9c:	b.ne	8e54 <PyInit__decimal@@Base+0x22f0>  // b.any
    8ea0:	mov	x0, x20
    8ea4:	bl	65c0 <_Py_Dealloc@plt>
    8ea8:	b	8e54 <PyInit__decimal@@Base+0x22f0>
    8eac:	sub	sp, sp, #0x50
    8eb0:	stp	x29, x30, [sp, #16]
    8eb4:	str	x23, [sp, #32]
    8eb8:	stp	x22, x21, [sp, #48]
    8ebc:	stp	x20, x19, [sp, #64]
    8ec0:	add	x29, sp, #0x10
    8ec4:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    8ec8:	mov	x20, x0
    8ecc:	ldr	x0, [x22, #1408]
    8ed0:	mov	x19, x1
    8ed4:	add	x2, x29, #0x18
    8ed8:	mov	x1, xzr
    8edc:	stur	wzr, [x29, #-4]
    8ee0:	bl	6730 <PyContextVar_Get@plt>
    8ee4:	tbnz	w0, #31, 9118 <PyInit__decimal@@Base+0x25b4>
    8ee8:	ldr	x21, [x29, #24]
    8eec:	cbz	x21, 9004 <PyInit__decimal@@Base+0x24a0>
    8ef0:	ldr	x8, [x21]
    8ef4:	subs	x8, x8, #0x1
    8ef8:	str	x8, [x21]
    8efc:	b.ne	8f08 <PyInit__decimal@@Base+0x23a4>  // b.any
    8f00:	mov	x0, x21
    8f04:	bl	65c0 <_Py_Dealloc@plt>
    8f08:	ldr	x0, [x20, #8]
    8f0c:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    8f10:	add	x22, x22, #0x320
    8f14:	cmp	x0, x22
    8f18:	b.eq	8f2c <PyInit__decimal@@Base+0x23c8>  // b.none
    8f1c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8f20:	add	x1, x1, #0x320
    8f24:	bl	69b0 <PyType_IsSubtype@plt>
    8f28:	cbz	w0, 9098 <PyInit__decimal@@Base+0x2534>
    8f2c:	ldr	x8, [x20]
    8f30:	add	x8, x8, #0x1
    8f34:	str	x8, [x20]
    8f38:	ldr	x0, [x19, #8]
    8f3c:	cmp	x0, x22
    8f40:	b.eq	8f54 <PyInit__decimal@@Base+0x23f0>  // b.none
    8f44:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    8f48:	add	x1, x1, #0x320
    8f4c:	bl	69b0 <PyType_IsSubtype@plt>
    8f50:	cbz	w0, 90bc <PyInit__decimal@@Base+0x2558>
    8f54:	ldr	x8, [x19]
    8f58:	add	x8, x8, #0x1
    8f5c:	str	x8, [x19]
    8f60:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    8f64:	add	x0, x0, #0x320
    8f68:	bl	6940 <_PyObject_New@plt>
    8f6c:	cbz	x0, 9068 <PyInit__decimal@@Base+0x2504>
    8f70:	mov	w8, #0x30                  	// #48
    8f74:	mov	x22, x0
    8f78:	strb	w8, [x0, #24]!
    8f7c:	mov	x9, #0xffffffffffffffff    	// #-1
    8f80:	mov	w10, #0x4                   	// #4
    8f84:	add	x1, x20, #0x18
    8f88:	add	x2, x19, #0x18
    8f8c:	add	x8, x0, #0x30
    8f90:	add	x3, x21, #0x10
    8f94:	sub	x4, x29, #0x4
    8f98:	stur	x9, [x0, #-8]
    8f9c:	stp	xzr, xzr, [x0, #8]
    8fa0:	stp	xzr, x10, [x0, #24]
    8fa4:	str	x8, [x0, #40]
    8fa8:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
    8fac:	ldr	x8, [x20]
    8fb0:	subs	x8, x8, #0x1
    8fb4:	str	x8, [x20]
    8fb8:	b.ne	8fc4 <PyInit__decimal@@Base+0x2460>  // b.any
    8fbc:	mov	x0, x20
    8fc0:	bl	65c0 <_Py_Dealloc@plt>
    8fc4:	ldr	x8, [x19]
    8fc8:	subs	x8, x8, #0x1
    8fcc:	str	x8, [x19]
    8fd0:	b.ne	8fdc <PyInit__decimal@@Base+0x2478>  // b.any
    8fd4:	mov	x0, x19
    8fd8:	bl	65c0 <_Py_Dealloc@plt>
    8fdc:	ldur	w1, [x29, #-4]
    8fe0:	mov	x0, x21
    8fe4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    8fe8:	cbz	w0, 911c <PyInit__decimal@@Base+0x25b8>
    8fec:	ldr	x8, [x22]
    8ff0:	subs	x8, x8, #0x1
    8ff4:	str	x8, [x22]
    8ff8:	b.ne	9118 <PyInit__decimal@@Base+0x25b4>  // b.any
    8ffc:	mov	x0, x22
    9000:	b	9114 <PyInit__decimal@@Base+0x25b0>
    9004:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9008:	ldr	x23, [x8, #1504]
    900c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9010:	add	x0, x0, #0x4c0
    9014:	mov	x1, xzr
    9018:	bl	6830 <PyObject_CallObject@plt>
    901c:	cbz	x0, 9118 <PyInit__decimal@@Base+0x25b4>
    9020:	ldp	q1, q0, [x23, #32]
    9024:	ldr	q2, [x23, #16]
    9028:	mov	x21, x0
    902c:	mov	x1, x21
    9030:	stp	q1, q0, [x0, #32]
    9034:	str	q2, [x0, #16]
    9038:	ldr	w8, [x23, #80]
    903c:	stp	wzr, wzr, [x0, #44]
    9040:	str	w8, [x0, #80]
    9044:	ldr	x0, [x22, #1408]
    9048:	bl	6670 <PyContextVar_Set@plt>
    904c:	cbz	x0, 9100 <PyInit__decimal@@Base+0x259c>
    9050:	ldr	x8, [x0]
    9054:	subs	x8, x8, #0x1
    9058:	str	x8, [x0]
    905c:	b.ne	8ef0 <PyInit__decimal@@Base+0x238c>  // b.any
    9060:	bl	65c0 <_Py_Dealloc@plt>
    9064:	b	8ef0 <PyInit__decimal@@Base+0x238c>
    9068:	ldr	x8, [x20]
    906c:	subs	x8, x8, #0x1
    9070:	str	x8, [x20]
    9074:	b.ne	9080 <PyInit__decimal@@Base+0x251c>  // b.any
    9078:	mov	x0, x20
    907c:	bl	65c0 <_Py_Dealloc@plt>
    9080:	ldr	x8, [x19]
    9084:	subs	x8, x8, #0x1
    9088:	str	x8, [x19]
    908c:	b.ne	9118 <PyInit__decimal@@Base+0x25b4>  // b.any
    9090:	mov	x0, x19
    9094:	b	9114 <PyInit__decimal@@Base+0x25b0>
    9098:	ldr	x8, [x20, #8]
    909c:	ldrb	w8, [x8, #171]
    90a0:	tbnz	w8, #0, 90e0 <PyInit__decimal@@Base+0x257c>
    90a4:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    90a8:	ldr	x22, [x22, #3912]
    90ac:	ldr	x8, [x22]
    90b0:	add	x8, x8, #0x1
    90b4:	str	x8, [x22]
    90b8:	b	911c <PyInit__decimal@@Base+0x25b8>
    90bc:	ldr	x8, [x19, #8]
    90c0:	ldrb	w8, [x8, #171]
    90c4:	tbnz	w8, #0, 9138 <PyInit__decimal@@Base+0x25d4>
    90c8:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    90cc:	ldr	x22, [x22, #3912]
    90d0:	ldr	x8, [x22]
    90d4:	add	x8, x8, #0x1
    90d8:	str	x8, [x22]
    90dc:	b	9158 <PyInit__decimal@@Base+0x25f4>
    90e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    90e4:	add	x0, x0, #0x320
    90e8:	mov	x1, x20
    90ec:	mov	x2, x21
    90f0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    90f4:	mov	x20, x0
    90f8:	cbnz	x0, 8f38 <PyInit__decimal@@Base+0x23d4>
    90fc:	b	9118 <PyInit__decimal@@Base+0x25b4>
    9100:	ldr	x8, [x21]
    9104:	subs	x8, x8, #0x1
    9108:	str	x8, [x21]
    910c:	b.ne	9118 <PyInit__decimal@@Base+0x25b4>  // b.any
    9110:	mov	x0, x21
    9114:	bl	65c0 <_Py_Dealloc@plt>
    9118:	mov	x22, xzr
    911c:	mov	x0, x22
    9120:	ldp	x20, x19, [sp, #64]
    9124:	ldp	x22, x21, [sp, #48]
    9128:	ldr	x23, [sp, #32]
    912c:	ldp	x29, x30, [sp, #16]
    9130:	add	sp, sp, #0x50
    9134:	ret
    9138:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    913c:	add	x0, x0, #0x320
    9140:	mov	x1, x19
    9144:	mov	x2, x21
    9148:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    914c:	mov	x19, x0
    9150:	cbnz	x0, 8f60 <PyInit__decimal@@Base+0x23fc>
    9154:	mov	x22, xzr
    9158:	ldr	x8, [x20]
    915c:	subs	x8, x8, #0x1
    9160:	str	x8, [x20]
    9164:	b.ne	911c <PyInit__decimal@@Base+0x25b8>  // b.any
    9168:	mov	x0, x20
    916c:	bl	65c0 <_Py_Dealloc@plt>
    9170:	b	911c <PyInit__decimal@@Base+0x25b8>
    9174:	sub	sp, sp, #0x60
    9178:	stp	x29, x30, [sp, #16]
    917c:	stp	x26, x25, [sp, #32]
    9180:	stp	x24, x23, [sp, #48]
    9184:	stp	x22, x21, [sp, #64]
    9188:	stp	x20, x19, [sp, #80]
    918c:	add	x29, sp, #0x10
    9190:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    9194:	mov	x20, x0
    9198:	ldr	x0, [x22, #1408]
    919c:	mov	x19, x1
    91a0:	add	x2, sp, #0x8
    91a4:	mov	x1, xzr
    91a8:	str	wzr, [sp, #4]
    91ac:	bl	6730 <PyContextVar_Get@plt>
    91b0:	tbnz	w0, #31, 9468 <PyInit__decimal@@Base+0x2904>
    91b4:	ldr	x21, [sp, #8]
    91b8:	cbz	x21, 930c <PyInit__decimal@@Base+0x27a8>
    91bc:	ldr	x8, [x21]
    91c0:	subs	x8, x8, #0x1
    91c4:	str	x8, [x21]
    91c8:	b.ne	91d4 <PyInit__decimal@@Base+0x2670>  // b.any
    91cc:	mov	x0, x21
    91d0:	bl	65c0 <_Py_Dealloc@plt>
    91d4:	ldr	x0, [x20, #8]
    91d8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    91dc:	add	x22, x22, #0x320
    91e0:	cmp	x0, x22
    91e4:	b.eq	91f8 <PyInit__decimal@@Base+0x2694>  // b.none
    91e8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    91ec:	add	x1, x1, #0x320
    91f0:	bl	69b0 <PyType_IsSubtype@plt>
    91f4:	cbz	w0, 93a0 <PyInit__decimal@@Base+0x283c>
    91f8:	ldr	x8, [x20]
    91fc:	add	x8, x8, #0x1
    9200:	str	x8, [x20]
    9204:	ldr	x0, [x19, #8]
    9208:	cmp	x0, x22
    920c:	b.eq	9220 <PyInit__decimal@@Base+0x26bc>  // b.none
    9210:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    9214:	add	x1, x1, #0x320
    9218:	bl	69b0 <PyType_IsSubtype@plt>
    921c:	cbz	w0, 93c4 <PyInit__decimal@@Base+0x2860>
    9220:	ldr	x8, [x19]
    9224:	add	x8, x8, #0x1
    9228:	str	x8, [x19]
    922c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9230:	add	x0, x0, #0x320
    9234:	bl	6940 <_PyObject_New@plt>
    9238:	cbz	x0, 9370 <PyInit__decimal@@Base+0x280c>
    923c:	mov	w25, #0x30                  	// #48
    9240:	mov	x24, x0
    9244:	mov	x22, x0
    9248:	mov	w8, #0x4                   	// #4
    924c:	strb	w25, [x24, #24]!
    9250:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9254:	mov	x26, #0xffffffffffffffff    	// #-1
    9258:	stp	xzr, x8, [x24, #24]
    925c:	add	x8, x24, #0x30
    9260:	add	x0, x0, #0x320
    9264:	stur	x26, [x24, #-8]
    9268:	stp	xzr, xzr, [x24, #8]
    926c:	str	x8, [x24, #40]
    9270:	bl	6940 <_PyObject_New@plt>
    9274:	cbz	x0, 93e8 <PyInit__decimal@@Base+0x2884>
    9278:	mov	x1, x0
    927c:	mov	w8, #0x4                   	// #4
    9280:	strb	w25, [x1, #24]!
    9284:	mov	x23, x0
    9288:	add	x2, x20, #0x18
    928c:	add	x3, x19, #0x18
    9290:	stp	xzr, x8, [x1, #24]
    9294:	add	x8, x1, #0x30
    9298:	add	x4, x21, #0x10
    929c:	add	x5, sp, #0x4
    92a0:	mov	x0, x24
    92a4:	stur	x26, [x1, #-8]
    92a8:	stp	xzr, xzr, [x1, #8]
    92ac:	str	x8, [x1, #40]
    92b0:	bl	25e14 <PyInit__decimal@@Base+0x1f2b0>
    92b4:	ldr	x8, [x20]
    92b8:	subs	x8, x8, #0x1
    92bc:	str	x8, [x20]
    92c0:	b.ne	92cc <PyInit__decimal@@Base+0x2768>  // b.any
    92c4:	mov	x0, x20
    92c8:	bl	65c0 <_Py_Dealloc@plt>
    92cc:	ldr	x8, [x19]
    92d0:	subs	x8, x8, #0x1
    92d4:	str	x8, [x19]
    92d8:	b.ne	92e4 <PyInit__decimal@@Base+0x2780>  // b.any
    92dc:	mov	x0, x19
    92e0:	bl	65c0 <_Py_Dealloc@plt>
    92e4:	ldr	w1, [sp, #4]
    92e8:	mov	x0, x21
    92ec:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    92f0:	cbz	w0, 948c <PyInit__decimal@@Base+0x2928>
    92f4:	ldr	x8, [x23]
    92f8:	subs	x8, x8, #0x1
    92fc:	str	x8, [x23]
    9300:	b.ne	9418 <PyInit__decimal@@Base+0x28b4>  // b.any
    9304:	mov	x0, x23
    9308:	b	9414 <PyInit__decimal@@Base+0x28b0>
    930c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9310:	ldr	x23, [x8, #1504]
    9314:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9318:	add	x0, x0, #0x4c0
    931c:	mov	x1, xzr
    9320:	bl	6830 <PyObject_CallObject@plt>
    9324:	cbz	x0, 9468 <PyInit__decimal@@Base+0x2904>
    9328:	ldp	q1, q0, [x23, #32]
    932c:	ldr	q2, [x23, #16]
    9330:	mov	x21, x0
    9334:	mov	x1, x21
    9338:	stp	q1, q0, [x0, #32]
    933c:	str	q2, [x0, #16]
    9340:	ldr	w8, [x23, #80]
    9344:	stp	wzr, wzr, [x0, #44]
    9348:	str	w8, [x0, #80]
    934c:	ldr	x0, [x22, #1408]
    9350:	bl	6670 <PyContextVar_Set@plt>
    9354:	cbz	x0, 9450 <PyInit__decimal@@Base+0x28ec>
    9358:	ldr	x8, [x0]
    935c:	subs	x8, x8, #0x1
    9360:	str	x8, [x0]
    9364:	b.ne	91bc <PyInit__decimal@@Base+0x2658>  // b.any
    9368:	bl	65c0 <_Py_Dealloc@plt>
    936c:	b	91bc <PyInit__decimal@@Base+0x2658>
    9370:	ldr	x8, [x20]
    9374:	subs	x8, x8, #0x1
    9378:	str	x8, [x20]
    937c:	b.ne	9388 <PyInit__decimal@@Base+0x2824>  // b.any
    9380:	mov	x0, x20
    9384:	bl	65c0 <_Py_Dealloc@plt>
    9388:	ldr	x8, [x19]
    938c:	subs	x8, x8, #0x1
    9390:	str	x8, [x19]
    9394:	b.ne	9468 <PyInit__decimal@@Base+0x2904>  // b.any
    9398:	mov	x0, x19
    939c:	b	9464 <PyInit__decimal@@Base+0x2900>
    93a0:	ldr	x8, [x20, #8]
    93a4:	ldrb	w8, [x8, #171]
    93a8:	tbnz	w8, #0, 9430 <PyInit__decimal@@Base+0x28cc>
    93ac:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
    93b0:	ldr	x19, [x19, #3912]
    93b4:	ldr	x8, [x19]
    93b8:	add	x8, x8, #0x1
    93bc:	str	x8, [x19]
    93c0:	b	946c <PyInit__decimal@@Base+0x2908>
    93c4:	ldr	x8, [x19, #8]
    93c8:	ldrb	w8, [x8, #171]
    93cc:	tbnz	w8, #0, 94d4 <PyInit__decimal@@Base+0x2970>
    93d0:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
    93d4:	ldr	x19, [x19, #3912]
    93d8:	ldr	x8, [x19]
    93dc:	add	x8, x8, #0x1
    93e0:	str	x8, [x19]
    93e4:	b	94f0 <PyInit__decimal@@Base+0x298c>
    93e8:	ldr	x8, [x20]
    93ec:	subs	x8, x8, #0x1
    93f0:	str	x8, [x20]
    93f4:	b.ne	9400 <PyInit__decimal@@Base+0x289c>  // b.any
    93f8:	mov	x0, x20
    93fc:	bl	65c0 <_Py_Dealloc@plt>
    9400:	ldr	x8, [x19]
    9404:	subs	x8, x8, #0x1
    9408:	str	x8, [x19]
    940c:	b.ne	9418 <PyInit__decimal@@Base+0x28b4>  // b.any
    9410:	mov	x0, x19
    9414:	bl	65c0 <_Py_Dealloc@plt>
    9418:	ldr	x8, [x22]
    941c:	subs	x8, x8, #0x1
    9420:	str	x8, [x22]
    9424:	b.ne	9468 <PyInit__decimal@@Base+0x2904>  // b.any
    9428:	mov	x0, x22
    942c:	b	9464 <PyInit__decimal@@Base+0x2900>
    9430:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9434:	add	x0, x0, #0x320
    9438:	mov	x1, x20
    943c:	mov	x2, x21
    9440:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    9444:	mov	x20, x0
    9448:	cbnz	x0, 9204 <PyInit__decimal@@Base+0x26a0>
    944c:	b	9468 <PyInit__decimal@@Base+0x2904>
    9450:	ldr	x8, [x21]
    9454:	subs	x8, x8, #0x1
    9458:	str	x8, [x21]
    945c:	b.ne	9468 <PyInit__decimal@@Base+0x2904>  // b.any
    9460:	mov	x0, x21
    9464:	bl	65c0 <_Py_Dealloc@plt>
    9468:	mov	x19, xzr
    946c:	mov	x0, x19
    9470:	ldp	x20, x19, [sp, #80]
    9474:	ldp	x22, x21, [sp, #64]
    9478:	ldp	x24, x23, [sp, #48]
    947c:	ldp	x26, x25, [sp, #32]
    9480:	ldp	x29, x30, [sp, #16]
    9484:	add	sp, sp, #0x60
    9488:	ret
    948c:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    9490:	add	x0, x0, #0xdd3
    9494:	mov	x1, x22
    9498:	mov	x2, x23
    949c:	bl	67c0 <Py_BuildValue@plt>
    94a0:	ldr	x8, [x23]
    94a4:	mov	x19, x0
    94a8:	subs	x8, x8, #0x1
    94ac:	str	x8, [x23]
    94b0:	b.ne	94bc <PyInit__decimal@@Base+0x2958>  // b.any
    94b4:	mov	x0, x23
    94b8:	bl	65c0 <_Py_Dealloc@plt>
    94bc:	ldr	x8, [x22]
    94c0:	subs	x8, x8, #0x1
    94c4:	str	x8, [x22]
    94c8:	b.ne	946c <PyInit__decimal@@Base+0x2908>  // b.any
    94cc:	mov	x0, x22
    94d0:	b	9504 <PyInit__decimal@@Base+0x29a0>
    94d4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    94d8:	add	x0, x0, #0x320
    94dc:	mov	x1, x19
    94e0:	mov	x2, x21
    94e4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    94e8:	mov	x19, x0
    94ec:	cbnz	x0, 922c <PyInit__decimal@@Base+0x26c8>
    94f0:	ldr	x8, [x20]
    94f4:	subs	x8, x8, #0x1
    94f8:	str	x8, [x20]
    94fc:	b.ne	946c <PyInit__decimal@@Base+0x2908>  // b.any
    9500:	mov	x0, x20
    9504:	bl	65c0 <_Py_Dealloc@plt>
    9508:	b	946c <PyInit__decimal@@Base+0x2908>
    950c:	sub	sp, sp, #0x50
    9510:	stp	x29, x30, [sp, #16]
    9514:	stp	x24, x23, [sp, #32]
    9518:	stp	x22, x21, [sp, #48]
    951c:	stp	x20, x19, [sp, #64]
    9520:	add	x29, sp, #0x10
    9524:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
    9528:	mov	x20, x0
    952c:	ldr	x0, [x23, #1408]
    9530:	mov	x21, x2
    9534:	mov	x19, x1
    9538:	add	x2, sp, #0x8
    953c:	mov	x1, xzr
    9540:	str	wzr, [sp, #4]
    9544:	bl	6730 <PyContextVar_Get@plt>
    9548:	tbnz	w0, #31, 9808 <PyInit__decimal@@Base+0x2ca4>
    954c:	ldr	x22, [sp, #8]
    9550:	cbz	x22, 9600 <PyInit__decimal@@Base+0x2a9c>
    9554:	ldr	x8, [x22]
    9558:	subs	x8, x8, #0x1
    955c:	str	x8, [x22]
    9560:	b.ne	956c <PyInit__decimal@@Base+0x2a08>  // b.any
    9564:	mov	x0, x22
    9568:	bl	65c0 <_Py_Dealloc@plt>
    956c:	ldr	x0, [x20, #8]
    9570:	adrp	x23, 4a000 <PyInit__decimal@@Base+0x4349c>
    9574:	add	x23, x23, #0x320
    9578:	cmp	x0, x23
    957c:	b.eq	9590 <PyInit__decimal@@Base+0x2a2c>  // b.none
    9580:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    9584:	add	x1, x1, #0x320
    9588:	bl	69b0 <PyType_IsSubtype@plt>
    958c:	cbz	w0, 9724 <PyInit__decimal@@Base+0x2bc0>
    9590:	ldr	x8, [x20]
    9594:	add	x8, x8, #0x1
    9598:	str	x8, [x20]
    959c:	ldr	x0, [x19, #8]
    95a0:	cmp	x0, x23
    95a4:	b.eq	95b8 <PyInit__decimal@@Base+0x2a54>  // b.none
    95a8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    95ac:	add	x1, x1, #0x320
    95b0:	bl	69b0 <PyType_IsSubtype@plt>
    95b4:	cbz	w0, 9748 <PyInit__decimal@@Base+0x2be4>
    95b8:	ldr	x8, [x19]
    95bc:	add	x8, x8, #0x1
    95c0:	str	x8, [x19]
    95c4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    95c8:	ldr	x8, [x8, #4008]
    95cc:	cmp	x21, x8
    95d0:	b.eq	9664 <PyInit__decimal@@Base+0x2b00>  // b.none
    95d4:	ldr	x0, [x21, #8]
    95d8:	cmp	x0, x23
    95dc:	b.eq	95f0 <PyInit__decimal@@Base+0x2a8c>  // b.none
    95e0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    95e4:	add	x1, x1, #0x320
    95e8:	bl	69b0 <PyType_IsSubtype@plt>
    95ec:	cbz	w0, 9828 <PyInit__decimal@@Base+0x2cc4>
    95f0:	ldr	x8, [x21]
    95f4:	add	x8, x8, #0x1
    95f8:	str	x8, [x21]
    95fc:	b	9668 <PyInit__decimal@@Base+0x2b04>
    9600:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9604:	ldr	x24, [x8, #1504]
    9608:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    960c:	add	x0, x0, #0x4c0
    9610:	mov	x1, xzr
    9614:	bl	6830 <PyObject_CallObject@plt>
    9618:	cbz	x0, 9808 <PyInit__decimal@@Base+0x2ca4>
    961c:	ldp	q1, q0, [x24, #32]
    9620:	ldr	q2, [x24, #16]
    9624:	mov	x22, x0
    9628:	mov	x1, x22
    962c:	stp	q1, q0, [x0, #32]
    9630:	str	q2, [x0, #16]
    9634:	ldr	w8, [x24, #80]
    9638:	stp	wzr, wzr, [x0, #44]
    963c:	str	w8, [x0, #80]
    9640:	ldr	x0, [x23, #1408]
    9644:	bl	6670 <PyContextVar_Set@plt>
    9648:	cbz	x0, 97f0 <PyInit__decimal@@Base+0x2c8c>
    964c:	ldr	x8, [x0]
    9650:	subs	x8, x8, #0x1
    9654:	str	x8, [x0]
    9658:	b.ne	9554 <PyInit__decimal@@Base+0x29f0>  // b.any
    965c:	bl	65c0 <_Py_Dealloc@plt>
    9660:	b	9554 <PyInit__decimal@@Base+0x29f0>
    9664:	mov	x21, xzr
    9668:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    966c:	add	x0, x0, #0x320
    9670:	bl	6940 <_PyObject_New@plt>
    9674:	cbz	x0, 96d8 <PyInit__decimal@@Base+0x2b74>
    9678:	mov	w8, #0x30                  	// #48
    967c:	mov	x23, x0
    9680:	strb	w8, [x0, #24]!
    9684:	mov	x9, #0xffffffffffffffff    	// #-1
    9688:	mov	w10, #0x4                   	// #4
    968c:	add	x1, x20, #0x18
    9690:	add	x8, x0, #0x30
    9694:	add	x2, x19, #0x18
    9698:	stur	x9, [x0, #-8]
    969c:	stp	xzr, xzr, [x0, #8]
    96a0:	stp	xzr, x10, [x0, #24]
    96a4:	str	x8, [x0, #40]
    96a8:	cbz	x21, 976c <PyInit__decimal@@Base+0x2c08>
    96ac:	add	x3, x21, #0x18
    96b0:	add	x4, x22, #0x10
    96b4:	add	x5, sp, #0x4
    96b8:	bl	2b0f0 <PyInit__decimal@@Base+0x2458c>
    96bc:	ldr	x8, [x21]
    96c0:	subs	x8, x8, #0x1
    96c4:	str	x8, [x21]
    96c8:	b.ne	9778 <PyInit__decimal@@Base+0x2c14>  // b.any
    96cc:	mov	x0, x21
    96d0:	bl	65c0 <_Py_Dealloc@plt>
    96d4:	b	9778 <PyInit__decimal@@Base+0x2c14>
    96d8:	ldr	x8, [x20]
    96dc:	subs	x8, x8, #0x1
    96e0:	str	x8, [x20]
    96e4:	b.ne	96f0 <PyInit__decimal@@Base+0x2b8c>  // b.any
    96e8:	mov	x0, x20
    96ec:	bl	65c0 <_Py_Dealloc@plt>
    96f0:	ldr	x8, [x19]
    96f4:	subs	x8, x8, #0x1
    96f8:	str	x8, [x19]
    96fc:	b.ne	9708 <PyInit__decimal@@Base+0x2ba4>  // b.any
    9700:	mov	x0, x19
    9704:	bl	65c0 <_Py_Dealloc@plt>
    9708:	cbz	x21, 9808 <PyInit__decimal@@Base+0x2ca4>
    970c:	ldr	x8, [x21]
    9710:	subs	x8, x8, #0x1
    9714:	str	x8, [x21]
    9718:	b.ne	9808 <PyInit__decimal@@Base+0x2ca4>  // b.any
    971c:	mov	x0, x21
    9720:	b	9804 <PyInit__decimal@@Base+0x2ca0>
    9724:	ldr	x8, [x20, #8]
    9728:	ldrb	w8, [x8, #171]
    972c:	tbnz	w8, #0, 97d0 <PyInit__decimal@@Base+0x2c6c>
    9730:	adrp	x23, 49000 <PyInit__decimal@@Base+0x4249c>
    9734:	ldr	x23, [x23, #3912]
    9738:	ldr	x8, [x23]
    973c:	add	x8, x8, #0x1
    9740:	str	x8, [x23]
    9744:	b	980c <PyInit__decimal@@Base+0x2ca8>
    9748:	ldr	x8, [x19, #8]
    974c:	ldrb	w8, [x8, #171]
    9750:	tbnz	w8, #0, 984c <PyInit__decimal@@Base+0x2ce8>
    9754:	adrp	x23, 49000 <PyInit__decimal@@Base+0x4249c>
    9758:	ldr	x23, [x23, #3912]
    975c:	ldr	x8, [x23]
    9760:	add	x8, x8, #0x1
    9764:	str	x8, [x23]
    9768:	b	986c <PyInit__decimal@@Base+0x2d08>
    976c:	add	x3, x22, #0x10
    9770:	add	x4, sp, #0x4
    9774:	bl	2a2a4 <PyInit__decimal@@Base+0x23740>
    9778:	ldr	x8, [x20]
    977c:	subs	x8, x8, #0x1
    9780:	str	x8, [x20]
    9784:	b.ne	9790 <PyInit__decimal@@Base+0x2c2c>  // b.any
    9788:	mov	x0, x20
    978c:	bl	65c0 <_Py_Dealloc@plt>
    9790:	ldr	x8, [x19]
    9794:	subs	x8, x8, #0x1
    9798:	str	x8, [x19]
    979c:	b.ne	97a8 <PyInit__decimal@@Base+0x2c44>  // b.any
    97a0:	mov	x0, x19
    97a4:	bl	65c0 <_Py_Dealloc@plt>
    97a8:	ldr	w1, [sp, #4]
    97ac:	mov	x0, x22
    97b0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    97b4:	cbz	w0, 980c <PyInit__decimal@@Base+0x2ca8>
    97b8:	ldr	x8, [x23]
    97bc:	subs	x8, x8, #0x1
    97c0:	str	x8, [x23]
    97c4:	b.ne	9808 <PyInit__decimal@@Base+0x2ca4>  // b.any
    97c8:	mov	x0, x23
    97cc:	b	9804 <PyInit__decimal@@Base+0x2ca0>
    97d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    97d4:	add	x0, x0, #0x320
    97d8:	mov	x1, x20
    97dc:	mov	x2, x22
    97e0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    97e4:	mov	x20, x0
    97e8:	cbnz	x0, 959c <PyInit__decimal@@Base+0x2a38>
    97ec:	b	9808 <PyInit__decimal@@Base+0x2ca4>
    97f0:	ldr	x8, [x22]
    97f4:	subs	x8, x8, #0x1
    97f8:	str	x8, [x22]
    97fc:	b.ne	9808 <PyInit__decimal@@Base+0x2ca4>  // b.any
    9800:	mov	x0, x22
    9804:	bl	65c0 <_Py_Dealloc@plt>
    9808:	mov	x23, xzr
    980c:	mov	x0, x23
    9810:	ldp	x20, x19, [sp, #64]
    9814:	ldp	x22, x21, [sp, #48]
    9818:	ldp	x24, x23, [sp, #32]
    981c:	ldp	x29, x30, [sp, #16]
    9820:	add	sp, sp, #0x50
    9824:	ret
    9828:	ldr	x8, [x21, #8]
    982c:	ldrb	w8, [x8, #171]
    9830:	tbnz	w8, #0, 9884 <PyInit__decimal@@Base+0x2d20>
    9834:	adrp	x23, 49000 <PyInit__decimal@@Base+0x4249c>
    9838:	ldr	x23, [x23, #3912]
    983c:	ldr	x8, [x23]
    9840:	add	x8, x8, #0x1
    9844:	str	x8, [x23]
    9848:	b	98a4 <PyInit__decimal@@Base+0x2d40>
    984c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9850:	add	x0, x0, #0x320
    9854:	mov	x1, x19
    9858:	mov	x2, x22
    985c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    9860:	mov	x19, x0
    9864:	cbnz	x0, 95c4 <PyInit__decimal@@Base+0x2a60>
    9868:	mov	x23, xzr
    986c:	ldr	x8, [x20]
    9870:	subs	x8, x8, #0x1
    9874:	str	x8, [x20]
    9878:	b.ne	980c <PyInit__decimal@@Base+0x2ca8>  // b.any
    987c:	mov	x0, x20
    9880:	b	98d0 <PyInit__decimal@@Base+0x2d6c>
    9884:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9888:	add	x0, x0, #0x320
    988c:	mov	x1, x21
    9890:	mov	x2, x22
    9894:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    9898:	mov	x21, x0
    989c:	cbnz	x0, 9668 <PyInit__decimal@@Base+0x2b04>
    98a0:	mov	x23, xzr
    98a4:	ldr	x8, [x20]
    98a8:	subs	x8, x8, #0x1
    98ac:	str	x8, [x20]
    98b0:	b.ne	98bc <PyInit__decimal@@Base+0x2d58>  // b.any
    98b4:	mov	x0, x20
    98b8:	bl	65c0 <_Py_Dealloc@plt>
    98bc:	ldr	x8, [x19]
    98c0:	subs	x8, x8, #0x1
    98c4:	str	x8, [x19]
    98c8:	b.ne	980c <PyInit__decimal@@Base+0x2ca8>  // b.any
    98cc:	mov	x0, x19
    98d0:	bl	65c0 <_Py_Dealloc@plt>
    98d4:	b	980c <PyInit__decimal@@Base+0x2ca8>
    98d8:	sub	sp, sp, #0x40
    98dc:	stp	x29, x30, [sp, #16]
    98e0:	stp	x22, x21, [sp, #32]
    98e4:	stp	x20, x19, [sp, #48]
    98e8:	add	x29, sp, #0x10
    98ec:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    98f0:	mov	x19, x0
    98f4:	ldr	x0, [x21, #1408]
    98f8:	add	x2, sp, #0x8
    98fc:	mov	x1, xzr
    9900:	str	wzr, [sp, #4]
    9904:	bl	6730 <PyContextVar_Get@plt>
    9908:	tbnz	w0, #31, 9a1c <PyInit__decimal@@Base+0x2eb8>
    990c:	ldr	x20, [sp, #8]
    9910:	cbz	x20, 99a0 <PyInit__decimal@@Base+0x2e3c>
    9914:	ldr	x8, [x20]
    9918:	subs	x8, x8, #0x1
    991c:	str	x8, [x20]
    9920:	b.ne	992c <PyInit__decimal@@Base+0x2dc8>  // b.any
    9924:	mov	x0, x20
    9928:	bl	65c0 <_Py_Dealloc@plt>
    992c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9930:	add	x0, x0, #0x320
    9934:	bl	6940 <_PyObject_New@plt>
    9938:	mov	x21, x0
    993c:	cbz	x0, 9a20 <PyInit__decimal@@Base+0x2ebc>
    9940:	mov	w8, #0x30                  	// #48
    9944:	mov	x0, x21
    9948:	strb	w8, [x0, #24]!
    994c:	mov	x9, #0xffffffffffffffff    	// #-1
    9950:	mov	w10, #0x4                   	// #4
    9954:	add	x1, x19, #0x18
    9958:	add	x8, x0, #0x30
    995c:	add	x2, x20, #0x10
    9960:	add	x3, sp, #0x4
    9964:	stur	x9, [x0, #-8]
    9968:	stp	xzr, xzr, [x0, #8]
    996c:	stp	xzr, x10, [x0, #24]
    9970:	str	x8, [x0, #40]
    9974:	bl	24b1c <PyInit__decimal@@Base+0x1dfb8>
    9978:	ldr	w1, [sp, #4]
    997c:	mov	x0, x20
    9980:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    9984:	cbz	w0, 9a20 <PyInit__decimal@@Base+0x2ebc>
    9988:	ldr	x8, [x21]
    998c:	subs	x8, x8, #0x1
    9990:	str	x8, [x21]
    9994:	b.ne	9a1c <PyInit__decimal@@Base+0x2eb8>  // b.any
    9998:	mov	x0, x21
    999c:	b	9a18 <PyInit__decimal@@Base+0x2eb4>
    99a0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    99a4:	ldr	x22, [x8, #1504]
    99a8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    99ac:	add	x0, x0, #0x4c0
    99b0:	mov	x1, xzr
    99b4:	bl	6830 <PyObject_CallObject@plt>
    99b8:	cbz	x0, 9a1c <PyInit__decimal@@Base+0x2eb8>
    99bc:	ldp	q1, q0, [x22, #32]
    99c0:	ldr	q2, [x22, #16]
    99c4:	mov	x20, x0
    99c8:	mov	x1, x20
    99cc:	stp	q1, q0, [x0, #32]
    99d0:	str	q2, [x0, #16]
    99d4:	ldr	w8, [x22, #80]
    99d8:	stp	wzr, wzr, [x0, #44]
    99dc:	str	w8, [x0, #80]
    99e0:	ldr	x0, [x21, #1408]
    99e4:	bl	6670 <PyContextVar_Set@plt>
    99e8:	cbz	x0, 9a04 <PyInit__decimal@@Base+0x2ea0>
    99ec:	ldr	x8, [x0]
    99f0:	subs	x8, x8, #0x1
    99f4:	str	x8, [x0]
    99f8:	b.ne	9914 <PyInit__decimal@@Base+0x2db0>  // b.any
    99fc:	bl	65c0 <_Py_Dealloc@plt>
    9a00:	b	9914 <PyInit__decimal@@Base+0x2db0>
    9a04:	ldr	x8, [x20]
    9a08:	subs	x8, x8, #0x1
    9a0c:	str	x8, [x20]
    9a10:	b.ne	9a1c <PyInit__decimal@@Base+0x2eb8>  // b.any
    9a14:	mov	x0, x20
    9a18:	bl	65c0 <_Py_Dealloc@plt>
    9a1c:	mov	x21, xzr
    9a20:	mov	x0, x21
    9a24:	ldp	x20, x19, [sp, #48]
    9a28:	ldp	x22, x21, [sp, #32]
    9a2c:	ldp	x29, x30, [sp, #16]
    9a30:	add	sp, sp, #0x40
    9a34:	ret
    9a38:	sub	sp, sp, #0x40
    9a3c:	stp	x29, x30, [sp, #16]
    9a40:	stp	x22, x21, [sp, #32]
    9a44:	stp	x20, x19, [sp, #48]
    9a48:	add	x29, sp, #0x10
    9a4c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    9a50:	mov	x19, x0
    9a54:	ldr	x0, [x21, #1408]
    9a58:	add	x2, sp, #0x8
    9a5c:	mov	x1, xzr
    9a60:	str	wzr, [sp, #4]
    9a64:	bl	6730 <PyContextVar_Get@plt>
    9a68:	tbnz	w0, #31, 9b7c <PyInit__decimal@@Base+0x3018>
    9a6c:	ldr	x20, [sp, #8]
    9a70:	cbz	x20, 9b00 <PyInit__decimal@@Base+0x2f9c>
    9a74:	ldr	x8, [x20]
    9a78:	subs	x8, x8, #0x1
    9a7c:	str	x8, [x20]
    9a80:	b.ne	9a8c <PyInit__decimal@@Base+0x2f28>  // b.any
    9a84:	mov	x0, x20
    9a88:	bl	65c0 <_Py_Dealloc@plt>
    9a8c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9a90:	add	x0, x0, #0x320
    9a94:	bl	6940 <_PyObject_New@plt>
    9a98:	mov	x21, x0
    9a9c:	cbz	x0, 9b80 <PyInit__decimal@@Base+0x301c>
    9aa0:	mov	w8, #0x30                  	// #48
    9aa4:	mov	x0, x21
    9aa8:	strb	w8, [x0, #24]!
    9aac:	mov	x9, #0xffffffffffffffff    	// #-1
    9ab0:	mov	w10, #0x4                   	// #4
    9ab4:	add	x1, x19, #0x18
    9ab8:	add	x8, x0, #0x30
    9abc:	add	x2, x20, #0x10
    9ac0:	add	x3, sp, #0x4
    9ac4:	stur	x9, [x0, #-8]
    9ac8:	stp	xzr, xzr, [x0, #8]
    9acc:	stp	xzr, x10, [x0, #24]
    9ad0:	str	x8, [x0, #40]
    9ad4:	bl	24bf8 <PyInit__decimal@@Base+0x1e094>
    9ad8:	ldr	w1, [sp, #4]
    9adc:	mov	x0, x20
    9ae0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    9ae4:	cbz	w0, 9b80 <PyInit__decimal@@Base+0x301c>
    9ae8:	ldr	x8, [x21]
    9aec:	subs	x8, x8, #0x1
    9af0:	str	x8, [x21]
    9af4:	b.ne	9b7c <PyInit__decimal@@Base+0x3018>  // b.any
    9af8:	mov	x0, x21
    9afc:	b	9b78 <PyInit__decimal@@Base+0x3014>
    9b00:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9b04:	ldr	x22, [x8, #1504]
    9b08:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9b0c:	add	x0, x0, #0x4c0
    9b10:	mov	x1, xzr
    9b14:	bl	6830 <PyObject_CallObject@plt>
    9b18:	cbz	x0, 9b7c <PyInit__decimal@@Base+0x3018>
    9b1c:	ldp	q1, q0, [x22, #32]
    9b20:	ldr	q2, [x22, #16]
    9b24:	mov	x20, x0
    9b28:	mov	x1, x20
    9b2c:	stp	q1, q0, [x0, #32]
    9b30:	str	q2, [x0, #16]
    9b34:	ldr	w8, [x22, #80]
    9b38:	stp	wzr, wzr, [x0, #44]
    9b3c:	str	w8, [x0, #80]
    9b40:	ldr	x0, [x21, #1408]
    9b44:	bl	6670 <PyContextVar_Set@plt>
    9b48:	cbz	x0, 9b64 <PyInit__decimal@@Base+0x3000>
    9b4c:	ldr	x8, [x0]
    9b50:	subs	x8, x8, #0x1
    9b54:	str	x8, [x0]
    9b58:	b.ne	9a74 <PyInit__decimal@@Base+0x2f10>  // b.any
    9b5c:	bl	65c0 <_Py_Dealloc@plt>
    9b60:	b	9a74 <PyInit__decimal@@Base+0x2f10>
    9b64:	ldr	x8, [x20]
    9b68:	subs	x8, x8, #0x1
    9b6c:	str	x8, [x20]
    9b70:	b.ne	9b7c <PyInit__decimal@@Base+0x3018>  // b.any
    9b74:	mov	x0, x20
    9b78:	bl	65c0 <_Py_Dealloc@plt>
    9b7c:	mov	x21, xzr
    9b80:	mov	x0, x21
    9b84:	ldp	x20, x19, [sp, #48]
    9b88:	ldp	x22, x21, [sp, #32]
    9b8c:	ldp	x29, x30, [sp, #16]
    9b90:	add	sp, sp, #0x40
    9b94:	ret
    9b98:	sub	sp, sp, #0x40
    9b9c:	stp	x29, x30, [sp, #16]
    9ba0:	stp	x22, x21, [sp, #32]
    9ba4:	stp	x20, x19, [sp, #48]
    9ba8:	add	x29, sp, #0x10
    9bac:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    9bb0:	mov	x19, x0
    9bb4:	ldr	x0, [x21, #1408]
    9bb8:	add	x2, sp, #0x8
    9bbc:	mov	x1, xzr
    9bc0:	str	wzr, [sp, #4]
    9bc4:	bl	6730 <PyContextVar_Get@plt>
    9bc8:	tbnz	w0, #31, 9cdc <PyInit__decimal@@Base+0x3178>
    9bcc:	ldr	x20, [sp, #8]
    9bd0:	cbz	x20, 9c60 <PyInit__decimal@@Base+0x30fc>
    9bd4:	ldr	x8, [x20]
    9bd8:	subs	x8, x8, #0x1
    9bdc:	str	x8, [x20]
    9be0:	b.ne	9bec <PyInit__decimal@@Base+0x3088>  // b.any
    9be4:	mov	x0, x20
    9be8:	bl	65c0 <_Py_Dealloc@plt>
    9bec:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9bf0:	add	x0, x0, #0x320
    9bf4:	bl	6940 <_PyObject_New@plt>
    9bf8:	mov	x21, x0
    9bfc:	cbz	x0, 9ce0 <PyInit__decimal@@Base+0x317c>
    9c00:	mov	w8, #0x30                  	// #48
    9c04:	mov	x0, x21
    9c08:	strb	w8, [x0, #24]!
    9c0c:	mov	x9, #0xffffffffffffffff    	// #-1
    9c10:	mov	w10, #0x4                   	// #4
    9c14:	add	x1, x19, #0x18
    9c18:	add	x8, x0, #0x30
    9c1c:	add	x2, x20, #0x10
    9c20:	add	x3, sp, #0x4
    9c24:	stur	x9, [x0, #-8]
    9c28:	stp	xzr, xzr, [x0, #8]
    9c2c:	stp	xzr, x10, [x0, #24]
    9c30:	str	x8, [x0, #40]
    9c34:	bl	24a90 <PyInit__decimal@@Base+0x1df2c>
    9c38:	ldr	w1, [sp, #4]
    9c3c:	mov	x0, x20
    9c40:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    9c44:	cbz	w0, 9ce0 <PyInit__decimal@@Base+0x317c>
    9c48:	ldr	x8, [x21]
    9c4c:	subs	x8, x8, #0x1
    9c50:	str	x8, [x21]
    9c54:	b.ne	9cdc <PyInit__decimal@@Base+0x3178>  // b.any
    9c58:	mov	x0, x21
    9c5c:	b	9cd8 <PyInit__decimal@@Base+0x3174>
    9c60:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9c64:	ldr	x22, [x8, #1504]
    9c68:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9c6c:	add	x0, x0, #0x4c0
    9c70:	mov	x1, xzr
    9c74:	bl	6830 <PyObject_CallObject@plt>
    9c78:	cbz	x0, 9cdc <PyInit__decimal@@Base+0x3178>
    9c7c:	ldp	q1, q0, [x22, #32]
    9c80:	ldr	q2, [x22, #16]
    9c84:	mov	x20, x0
    9c88:	mov	x1, x20
    9c8c:	stp	q1, q0, [x0, #32]
    9c90:	str	q2, [x0, #16]
    9c94:	ldr	w8, [x22, #80]
    9c98:	stp	wzr, wzr, [x0, #44]
    9c9c:	str	w8, [x0, #80]
    9ca0:	ldr	x0, [x21, #1408]
    9ca4:	bl	6670 <PyContextVar_Set@plt>
    9ca8:	cbz	x0, 9cc4 <PyInit__decimal@@Base+0x3160>
    9cac:	ldr	x8, [x0]
    9cb0:	subs	x8, x8, #0x1
    9cb4:	str	x8, [x0]
    9cb8:	b.ne	9bd4 <PyInit__decimal@@Base+0x3070>  // b.any
    9cbc:	bl	65c0 <_Py_Dealloc@plt>
    9cc0:	b	9bd4 <PyInit__decimal@@Base+0x3070>
    9cc4:	ldr	x8, [x20]
    9cc8:	subs	x8, x8, #0x1
    9ccc:	str	x8, [x20]
    9cd0:	b.ne	9cdc <PyInit__decimal@@Base+0x3178>  // b.any
    9cd4:	mov	x0, x20
    9cd8:	bl	65c0 <_Py_Dealloc@plt>
    9cdc:	mov	x21, xzr
    9ce0:	mov	x0, x21
    9ce4:	ldp	x20, x19, [sp, #48]
    9ce8:	ldp	x22, x21, [sp, #32]
    9cec:	ldp	x29, x30, [sp, #16]
    9cf0:	add	sp, sp, #0x40
    9cf4:	ret
    9cf8:	stp	x29, x30, [sp, #-16]!
    9cfc:	mov	x29, sp
    9d00:	add	x0, x0, #0x18
    9d04:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
    9d08:	cmp	w0, #0x0
    9d0c:	cset	w0, eq  // eq = none
    9d10:	ldp	x29, x30, [sp], #16
    9d14:	ret
    9d18:	sub	sp, sp, #0x40
    9d1c:	stp	x29, x30, [sp, #16]
    9d20:	stp	x22, x21, [sp, #32]
    9d24:	stp	x20, x19, [sp, #48]
    9d28:	add	x29, sp, #0x10
    9d2c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    9d30:	ldr	x8, [x21, #1408]
    9d34:	mov	x19, x0
    9d38:	add	x2, sp, #0x8
    9d3c:	mov	x1, xzr
    9d40:	mov	x0, x8
    9d44:	bl	6730 <PyContextVar_Get@plt>
    9d48:	tbnz	w0, #31, 9dfc <PyInit__decimal@@Base+0x3298>
    9d4c:	ldr	x20, [sp, #8]
    9d50:	cbz	x20, 9d80 <PyInit__decimal@@Base+0x321c>
    9d54:	ldr	x8, [x20]
    9d58:	subs	x8, x8, #0x1
    9d5c:	str	x8, [x20]
    9d60:	b.ne	9d6c <PyInit__decimal@@Base+0x3208>  // b.any
    9d64:	mov	x0, x20
    9d68:	bl	65c0 <_Py_Dealloc@plt>
    9d6c:	mov	w2, #0x1                   	// #1
    9d70:	mov	x0, x19
    9d74:	mov	x1, x20
    9d78:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
    9d7c:	b	9e00 <PyInit__decimal@@Base+0x329c>
    9d80:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    9d84:	ldr	x22, [x8, #1504]
    9d88:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9d8c:	add	x0, x0, #0x4c0
    9d90:	mov	x1, xzr
    9d94:	bl	6830 <PyObject_CallObject@plt>
    9d98:	cbz	x0, 9dfc <PyInit__decimal@@Base+0x3298>
    9d9c:	ldp	q1, q0, [x22, #32]
    9da0:	ldr	q2, [x22, #16]
    9da4:	mov	x20, x0
    9da8:	mov	x1, x20
    9dac:	stp	q1, q0, [x0, #32]
    9db0:	str	q2, [x0, #16]
    9db4:	ldr	w8, [x22, #80]
    9db8:	stp	wzr, wzr, [x0, #44]
    9dbc:	str	w8, [x0, #80]
    9dc0:	ldr	x0, [x21, #1408]
    9dc4:	bl	6670 <PyContextVar_Set@plt>
    9dc8:	cbz	x0, 9de4 <PyInit__decimal@@Base+0x3280>
    9dcc:	ldr	x8, [x0]
    9dd0:	subs	x8, x8, #0x1
    9dd4:	str	x8, [x0]
    9dd8:	b.ne	9d54 <PyInit__decimal@@Base+0x31f0>  // b.any
    9ddc:	bl	65c0 <_Py_Dealloc@plt>
    9de0:	b	9d54 <PyInit__decimal@@Base+0x31f0>
    9de4:	ldr	x8, [x20]
    9de8:	subs	x8, x8, #0x1
    9dec:	str	x8, [x20]
    9df0:	b.ne	9dfc <PyInit__decimal@@Base+0x3298>  // b.any
    9df4:	mov	x0, x20
    9df8:	bl	65c0 <_Py_Dealloc@plt>
    9dfc:	mov	x0, xzr
    9e00:	ldp	x20, x19, [sp, #48]
    9e04:	ldp	x22, x21, [sp, #32]
    9e08:	ldp	x29, x30, [sp, #16]
    9e0c:	add	sp, sp, #0x40
    9e10:	ret
    9e14:	stp	x29, x30, [sp, #-32]!
    9e18:	stp	x20, x19, [sp, #16]
    9e1c:	mov	x29, sp
    9e20:	add	x19, x0, #0x18
    9e24:	mov	x20, x0
    9e28:	mov	x0, x19
    9e2c:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
    9e30:	cbz	w0, 9e5c <PyInit__decimal@@Base+0x32f8>
    9e34:	mov	x0, x19
    9e38:	bl	1febc <PyInit__decimal@@Base+0x19358>
    9e3c:	cbz	w0, 9e68 <PyInit__decimal@@Base+0x3304>
    9e40:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    9e44:	ldr	x8, [x8, #3928]
    9e48:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    9e4c:	add	x1, x1, #0xe19
    9e50:	ldr	x0, [x8]
    9e54:	bl	6640 <PyErr_SetString@plt>
    9e58:	b	9ebc <PyInit__decimal@@Base+0x3358>
    9e5c:	mov	x0, x20
    9e60:	bl	7b5c <PyInit__decimal@@Base+0xff8>
    9e64:	b	9e8c <PyInit__decimal@@Base+0x3328>
    9e68:	mov	x0, x19
    9e6c:	bl	1fe88 <PyInit__decimal@@Base+0x19324>
    9e70:	cbz	w0, 9e80 <PyInit__decimal@@Base+0x331c>
    9e74:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    9e78:	add	x0, x0, #0xe3f
    9e7c:	b	9e88 <PyInit__decimal@@Base+0x3324>
    9e80:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
    9e84:	add	x0, x0, #0xe40
    9e88:	bl	6950 <PyUnicode_FromString@plt>
    9e8c:	mov	x19, x0
    9e90:	cbz	x0, 9ebc <PyInit__decimal@@Base+0x3358>
    9e94:	mov	x0, x19
    9e98:	bl	6a80 <PyFloat_FromString@plt>
    9e9c:	ldr	x8, [x19]
    9ea0:	mov	x20, x0
    9ea4:	subs	x8, x8, #0x1
    9ea8:	str	x8, [x19]
    9eac:	b.ne	9ec0 <PyInit__decimal@@Base+0x335c>  // b.any
    9eb0:	mov	x0, x19
    9eb4:	bl	65c0 <_Py_Dealloc@plt>
    9eb8:	b	9ec0 <PyInit__decimal@@Base+0x335c>
    9ebc:	mov	x20, xzr
    9ec0:	mov	x0, x20
    9ec4:	ldp	x20, x19, [sp, #16]
    9ec8:	ldp	x29, x30, [sp], #32
    9ecc:	ret
    9ed0:	sub	sp, sp, #0x50
    9ed4:	stp	x29, x30, [sp, #16]
    9ed8:	str	x23, [sp, #32]
    9edc:	stp	x22, x21, [sp, #48]
    9ee0:	stp	x20, x19, [sp, #64]
    9ee4:	add	x29, sp, #0x10
    9ee8:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    9eec:	mov	x20, x0
    9ef0:	ldr	x0, [x22, #1408]
    9ef4:	mov	x19, x1
    9ef8:	add	x2, x29, #0x18
    9efc:	mov	x1, xzr
    9f00:	stur	wzr, [x29, #-4]
    9f04:	bl	6730 <PyContextVar_Get@plt>
    9f08:	tbnz	w0, #31, a13c <PyInit__decimal@@Base+0x35d8>
    9f0c:	ldr	x21, [x29, #24]
    9f10:	cbz	x21, a028 <PyInit__decimal@@Base+0x34c4>
    9f14:	ldr	x8, [x21]
    9f18:	subs	x8, x8, #0x1
    9f1c:	str	x8, [x21]
    9f20:	b.ne	9f2c <PyInit__decimal@@Base+0x33c8>  // b.any
    9f24:	mov	x0, x21
    9f28:	bl	65c0 <_Py_Dealloc@plt>
    9f2c:	ldr	x0, [x20, #8]
    9f30:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    9f34:	add	x22, x22, #0x320
    9f38:	cmp	x0, x22
    9f3c:	b.eq	9f50 <PyInit__decimal@@Base+0x33ec>  // b.none
    9f40:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    9f44:	add	x1, x1, #0x320
    9f48:	bl	69b0 <PyType_IsSubtype@plt>
    9f4c:	cbz	w0, a0bc <PyInit__decimal@@Base+0x3558>
    9f50:	ldr	x8, [x20]
    9f54:	add	x8, x8, #0x1
    9f58:	str	x8, [x20]
    9f5c:	ldr	x0, [x19, #8]
    9f60:	cmp	x0, x22
    9f64:	b.eq	9f78 <PyInit__decimal@@Base+0x3414>  // b.none
    9f68:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    9f6c:	add	x1, x1, #0x320
    9f70:	bl	69b0 <PyType_IsSubtype@plt>
    9f74:	cbz	w0, a0e0 <PyInit__decimal@@Base+0x357c>
    9f78:	ldr	x8, [x19]
    9f7c:	add	x8, x8, #0x1
    9f80:	str	x8, [x19]
    9f84:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    9f88:	add	x0, x0, #0x320
    9f8c:	bl	6940 <_PyObject_New@plt>
    9f90:	cbz	x0, a08c <PyInit__decimal@@Base+0x3528>
    9f94:	mov	w8, #0x30                  	// #48
    9f98:	mov	x22, x0
    9f9c:	strb	w8, [x0, #24]!
    9fa0:	mov	x9, #0xffffffffffffffff    	// #-1
    9fa4:	mov	w10, #0x4                   	// #4
    9fa8:	add	x1, x20, #0x18
    9fac:	add	x2, x19, #0x18
    9fb0:	add	x8, x0, #0x30
    9fb4:	add	x3, x21, #0x10
    9fb8:	sub	x4, x29, #0x4
    9fbc:	stur	x9, [x0, #-8]
    9fc0:	stp	xzr, xzr, [x0, #8]
    9fc4:	stp	xzr, x10, [x0, #24]
    9fc8:	str	x8, [x0, #40]
    9fcc:	bl	26784 <PyInit__decimal@@Base+0x1fc20>
    9fd0:	ldr	x8, [x20]
    9fd4:	subs	x8, x8, #0x1
    9fd8:	str	x8, [x20]
    9fdc:	b.ne	9fe8 <PyInit__decimal@@Base+0x3484>  // b.any
    9fe0:	mov	x0, x20
    9fe4:	bl	65c0 <_Py_Dealloc@plt>
    9fe8:	ldr	x8, [x19]
    9fec:	subs	x8, x8, #0x1
    9ff0:	str	x8, [x19]
    9ff4:	b.ne	a000 <PyInit__decimal@@Base+0x349c>  // b.any
    9ff8:	mov	x0, x19
    9ffc:	bl	65c0 <_Py_Dealloc@plt>
    a000:	ldur	w1, [x29, #-4]
    a004:	mov	x0, x21
    a008:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    a00c:	cbz	w0, a140 <PyInit__decimal@@Base+0x35dc>
    a010:	ldr	x8, [x22]
    a014:	subs	x8, x8, #0x1
    a018:	str	x8, [x22]
    a01c:	b.ne	a13c <PyInit__decimal@@Base+0x35d8>  // b.any
    a020:	mov	x0, x22
    a024:	b	a138 <PyInit__decimal@@Base+0x35d4>
    a028:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    a02c:	ldr	x23, [x8, #1504]
    a030:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a034:	add	x0, x0, #0x4c0
    a038:	mov	x1, xzr
    a03c:	bl	6830 <PyObject_CallObject@plt>
    a040:	cbz	x0, a13c <PyInit__decimal@@Base+0x35d8>
    a044:	ldp	q1, q0, [x23, #32]
    a048:	ldr	q2, [x23, #16]
    a04c:	mov	x21, x0
    a050:	mov	x1, x21
    a054:	stp	q1, q0, [x0, #32]
    a058:	str	q2, [x0, #16]
    a05c:	ldr	w8, [x23, #80]
    a060:	stp	wzr, wzr, [x0, #44]
    a064:	str	w8, [x0, #80]
    a068:	ldr	x0, [x22, #1408]
    a06c:	bl	6670 <PyContextVar_Set@plt>
    a070:	cbz	x0, a124 <PyInit__decimal@@Base+0x35c0>
    a074:	ldr	x8, [x0]
    a078:	subs	x8, x8, #0x1
    a07c:	str	x8, [x0]
    a080:	b.ne	9f14 <PyInit__decimal@@Base+0x33b0>  // b.any
    a084:	bl	65c0 <_Py_Dealloc@plt>
    a088:	b	9f14 <PyInit__decimal@@Base+0x33b0>
    a08c:	ldr	x8, [x20]
    a090:	subs	x8, x8, #0x1
    a094:	str	x8, [x20]
    a098:	b.ne	a0a4 <PyInit__decimal@@Base+0x3540>  // b.any
    a09c:	mov	x0, x20
    a0a0:	bl	65c0 <_Py_Dealloc@plt>
    a0a4:	ldr	x8, [x19]
    a0a8:	subs	x8, x8, #0x1
    a0ac:	str	x8, [x19]
    a0b0:	b.ne	a13c <PyInit__decimal@@Base+0x35d8>  // b.any
    a0b4:	mov	x0, x19
    a0b8:	b	a138 <PyInit__decimal@@Base+0x35d4>
    a0bc:	ldr	x8, [x20, #8]
    a0c0:	ldrb	w8, [x8, #171]
    a0c4:	tbnz	w8, #0, a104 <PyInit__decimal@@Base+0x35a0>
    a0c8:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    a0cc:	ldr	x22, [x22, #3912]
    a0d0:	ldr	x8, [x22]
    a0d4:	add	x8, x8, #0x1
    a0d8:	str	x8, [x22]
    a0dc:	b	a140 <PyInit__decimal@@Base+0x35dc>
    a0e0:	ldr	x8, [x19, #8]
    a0e4:	ldrb	w8, [x8, #171]
    a0e8:	tbnz	w8, #0, a15c <PyInit__decimal@@Base+0x35f8>
    a0ec:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    a0f0:	ldr	x22, [x22, #3912]
    a0f4:	ldr	x8, [x22]
    a0f8:	add	x8, x8, #0x1
    a0fc:	str	x8, [x22]
    a100:	b	a17c <PyInit__decimal@@Base+0x3618>
    a104:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a108:	add	x0, x0, #0x320
    a10c:	mov	x1, x20
    a110:	mov	x2, x21
    a114:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    a118:	mov	x20, x0
    a11c:	cbnz	x0, 9f5c <PyInit__decimal@@Base+0x33f8>
    a120:	b	a13c <PyInit__decimal@@Base+0x35d8>
    a124:	ldr	x8, [x21]
    a128:	subs	x8, x8, #0x1
    a12c:	str	x8, [x21]
    a130:	b.ne	a13c <PyInit__decimal@@Base+0x35d8>  // b.any
    a134:	mov	x0, x21
    a138:	bl	65c0 <_Py_Dealloc@plt>
    a13c:	mov	x22, xzr
    a140:	mov	x0, x22
    a144:	ldp	x20, x19, [sp, #64]
    a148:	ldp	x22, x21, [sp, #48]
    a14c:	ldr	x23, [sp, #32]
    a150:	ldp	x29, x30, [sp, #16]
    a154:	add	sp, sp, #0x50
    a158:	ret
    a15c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a160:	add	x0, x0, #0x320
    a164:	mov	x1, x19
    a168:	mov	x2, x21
    a16c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    a170:	mov	x19, x0
    a174:	cbnz	x0, 9f84 <PyInit__decimal@@Base+0x3420>
    a178:	mov	x22, xzr
    a17c:	ldr	x8, [x20]
    a180:	subs	x8, x8, #0x1
    a184:	str	x8, [x20]
    a188:	b.ne	a140 <PyInit__decimal@@Base+0x35dc>  // b.any
    a18c:	mov	x0, x20
    a190:	bl	65c0 <_Py_Dealloc@plt>
    a194:	b	a140 <PyInit__decimal@@Base+0x35dc>
    a198:	sub	sp, sp, #0x50
    a19c:	stp	x29, x30, [sp, #16]
    a1a0:	str	x23, [sp, #32]
    a1a4:	stp	x22, x21, [sp, #48]
    a1a8:	stp	x20, x19, [sp, #64]
    a1ac:	add	x29, sp, #0x10
    a1b0:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    a1b4:	mov	x20, x0
    a1b8:	ldr	x0, [x22, #1408]
    a1bc:	mov	x19, x1
    a1c0:	add	x2, x29, #0x18
    a1c4:	mov	x1, xzr
    a1c8:	stur	wzr, [x29, #-4]
    a1cc:	bl	6730 <PyContextVar_Get@plt>
    a1d0:	tbnz	w0, #31, a404 <PyInit__decimal@@Base+0x38a0>
    a1d4:	ldr	x21, [x29, #24]
    a1d8:	cbz	x21, a2f0 <PyInit__decimal@@Base+0x378c>
    a1dc:	ldr	x8, [x21]
    a1e0:	subs	x8, x8, #0x1
    a1e4:	str	x8, [x21]
    a1e8:	b.ne	a1f4 <PyInit__decimal@@Base+0x3690>  // b.any
    a1ec:	mov	x0, x21
    a1f0:	bl	65c0 <_Py_Dealloc@plt>
    a1f4:	ldr	x0, [x20, #8]
    a1f8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    a1fc:	add	x22, x22, #0x320
    a200:	cmp	x0, x22
    a204:	b.eq	a218 <PyInit__decimal@@Base+0x36b4>  // b.none
    a208:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    a20c:	add	x1, x1, #0x320
    a210:	bl	69b0 <PyType_IsSubtype@plt>
    a214:	cbz	w0, a384 <PyInit__decimal@@Base+0x3820>
    a218:	ldr	x8, [x20]
    a21c:	add	x8, x8, #0x1
    a220:	str	x8, [x20]
    a224:	ldr	x0, [x19, #8]
    a228:	cmp	x0, x22
    a22c:	b.eq	a240 <PyInit__decimal@@Base+0x36dc>  // b.none
    a230:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    a234:	add	x1, x1, #0x320
    a238:	bl	69b0 <PyType_IsSubtype@plt>
    a23c:	cbz	w0, a3a8 <PyInit__decimal@@Base+0x3844>
    a240:	ldr	x8, [x19]
    a244:	add	x8, x8, #0x1
    a248:	str	x8, [x19]
    a24c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a250:	add	x0, x0, #0x320
    a254:	bl	6940 <_PyObject_New@plt>
    a258:	cbz	x0, a354 <PyInit__decimal@@Base+0x37f0>
    a25c:	mov	w8, #0x30                  	// #48
    a260:	mov	x22, x0
    a264:	strb	w8, [x0, #24]!
    a268:	mov	x9, #0xffffffffffffffff    	// #-1
    a26c:	mov	w10, #0x4                   	// #4
    a270:	add	x1, x20, #0x18
    a274:	add	x2, x19, #0x18
    a278:	add	x8, x0, #0x30
    a27c:	add	x3, x21, #0x10
    a280:	sub	x4, x29, #0x4
    a284:	stur	x9, [x0, #-8]
    a288:	stp	xzr, xzr, [x0, #8]
    a28c:	stp	xzr, x10, [x0, #24]
    a290:	str	x8, [x0, #40]
    a294:	bl	25780 <PyInit__decimal@@Base+0x1ec1c>
    a298:	ldr	x8, [x20]
    a29c:	subs	x8, x8, #0x1
    a2a0:	str	x8, [x20]
    a2a4:	b.ne	a2b0 <PyInit__decimal@@Base+0x374c>  // b.any
    a2a8:	mov	x0, x20
    a2ac:	bl	65c0 <_Py_Dealloc@plt>
    a2b0:	ldr	x8, [x19]
    a2b4:	subs	x8, x8, #0x1
    a2b8:	str	x8, [x19]
    a2bc:	b.ne	a2c8 <PyInit__decimal@@Base+0x3764>  // b.any
    a2c0:	mov	x0, x19
    a2c4:	bl	65c0 <_Py_Dealloc@plt>
    a2c8:	ldur	w1, [x29, #-4]
    a2cc:	mov	x0, x21
    a2d0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    a2d4:	cbz	w0, a408 <PyInit__decimal@@Base+0x38a4>
    a2d8:	ldr	x8, [x22]
    a2dc:	subs	x8, x8, #0x1
    a2e0:	str	x8, [x22]
    a2e4:	b.ne	a404 <PyInit__decimal@@Base+0x38a0>  // b.any
    a2e8:	mov	x0, x22
    a2ec:	b	a400 <PyInit__decimal@@Base+0x389c>
    a2f0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    a2f4:	ldr	x23, [x8, #1504]
    a2f8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a2fc:	add	x0, x0, #0x4c0
    a300:	mov	x1, xzr
    a304:	bl	6830 <PyObject_CallObject@plt>
    a308:	cbz	x0, a404 <PyInit__decimal@@Base+0x38a0>
    a30c:	ldp	q1, q0, [x23, #32]
    a310:	ldr	q2, [x23, #16]
    a314:	mov	x21, x0
    a318:	mov	x1, x21
    a31c:	stp	q1, q0, [x0, #32]
    a320:	str	q2, [x0, #16]
    a324:	ldr	w8, [x23, #80]
    a328:	stp	wzr, wzr, [x0, #44]
    a32c:	str	w8, [x0, #80]
    a330:	ldr	x0, [x22, #1408]
    a334:	bl	6670 <PyContextVar_Set@plt>
    a338:	cbz	x0, a3ec <PyInit__decimal@@Base+0x3888>
    a33c:	ldr	x8, [x0]
    a340:	subs	x8, x8, #0x1
    a344:	str	x8, [x0]
    a348:	b.ne	a1dc <PyInit__decimal@@Base+0x3678>  // b.any
    a34c:	bl	65c0 <_Py_Dealloc@plt>
    a350:	b	a1dc <PyInit__decimal@@Base+0x3678>
    a354:	ldr	x8, [x20]
    a358:	subs	x8, x8, #0x1
    a35c:	str	x8, [x20]
    a360:	b.ne	a36c <PyInit__decimal@@Base+0x3808>  // b.any
    a364:	mov	x0, x20
    a368:	bl	65c0 <_Py_Dealloc@plt>
    a36c:	ldr	x8, [x19]
    a370:	subs	x8, x8, #0x1
    a374:	str	x8, [x19]
    a378:	b.ne	a404 <PyInit__decimal@@Base+0x38a0>  // b.any
    a37c:	mov	x0, x19
    a380:	b	a400 <PyInit__decimal@@Base+0x389c>
    a384:	ldr	x8, [x20, #8]
    a388:	ldrb	w8, [x8, #171]
    a38c:	tbnz	w8, #0, a3cc <PyInit__decimal@@Base+0x3868>
    a390:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    a394:	ldr	x22, [x22, #3912]
    a398:	ldr	x8, [x22]
    a39c:	add	x8, x8, #0x1
    a3a0:	str	x8, [x22]
    a3a4:	b	a408 <PyInit__decimal@@Base+0x38a4>
    a3a8:	ldr	x8, [x19, #8]
    a3ac:	ldrb	w8, [x8, #171]
    a3b0:	tbnz	w8, #0, a424 <PyInit__decimal@@Base+0x38c0>
    a3b4:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
    a3b8:	ldr	x22, [x22, #3912]
    a3bc:	ldr	x8, [x22]
    a3c0:	add	x8, x8, #0x1
    a3c4:	str	x8, [x22]
    a3c8:	b	a444 <PyInit__decimal@@Base+0x38e0>
    a3cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a3d0:	add	x0, x0, #0x320
    a3d4:	mov	x1, x20
    a3d8:	mov	x2, x21
    a3dc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    a3e0:	mov	x20, x0
    a3e4:	cbnz	x0, a224 <PyInit__decimal@@Base+0x36c0>
    a3e8:	b	a404 <PyInit__decimal@@Base+0x38a0>
    a3ec:	ldr	x8, [x21]
    a3f0:	subs	x8, x8, #0x1
    a3f4:	str	x8, [x21]
    a3f8:	b.ne	a404 <PyInit__decimal@@Base+0x38a0>  // b.any
    a3fc:	mov	x0, x21
    a400:	bl	65c0 <_Py_Dealloc@plt>
    a404:	mov	x22, xzr
    a408:	mov	x0, x22
    a40c:	ldp	x20, x19, [sp, #64]
    a410:	ldp	x22, x21, [sp, #48]
    a414:	ldr	x23, [sp, #32]
    a418:	ldp	x29, x30, [sp, #16]
    a41c:	add	sp, sp, #0x50
    a420:	ret
    a424:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a428:	add	x0, x0, #0x320
    a42c:	mov	x1, x19
    a430:	mov	x2, x21
    a434:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    a438:	mov	x19, x0
    a43c:	cbnz	x0, a24c <PyInit__decimal@@Base+0x36e8>
    a440:	mov	x22, xzr
    a444:	ldr	x8, [x20]
    a448:	subs	x8, x8, #0x1
    a44c:	str	x8, [x20]
    a450:	b.ne	a408 <PyInit__decimal@@Base+0x38a4>  // b.any
    a454:	mov	x0, x20
    a458:	bl	65c0 <_Py_Dealloc@plt>
    a45c:	b	a408 <PyInit__decimal@@Base+0x38a4>
    a460:	stp	x29, x30, [sp, #-16]!
    a464:	mov	x29, sp
    a468:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    a46c:	add	x8, x8, #0x320
    a470:	cmp	x0, x8
    a474:	b.eq	a4b4 <PyInit__decimal@@Base+0x3950>  // b.none
    a478:	ldr	x8, [x0, #304]
    a47c:	mov	x1, xzr
    a480:	blr	x8
    a484:	cbz	x0, a4ac <PyInit__decimal@@Base+0x3948>
    a488:	mov	x8, #0xffffffffffffffff    	// #-1
    a48c:	mov	w9, #0x30                  	// #48
    a490:	mov	w10, #0x4                   	// #4
    a494:	add	x11, x0, #0x48
    a498:	stp	xzr, xzr, [x0, #32]
    a49c:	str	x8, [x0, #16]
    a4a0:	strb	w9, [x0, #24]
    a4a4:	stp	xzr, x10, [x0, #48]
    a4a8:	str	x11, [x0, #64]
    a4ac:	ldp	x29, x30, [sp], #16
    a4b0:	ret
    a4b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    a4b8:	add	x0, x0, #0x320
    a4bc:	bl	6940 <_PyObject_New@plt>
    a4c0:	cbnz	x0, a488 <PyInit__decimal@@Base+0x3924>
    a4c4:	b	a4ac <PyInit__decimal@@Base+0x3948>
    a4c8:	stp	x29, x30, [sp, #-48]!
    a4cc:	stp	x22, x21, [sp, #16]
    a4d0:	stp	x20, x19, [sp, #32]
    a4d4:	mov	x29, sp
    a4d8:	ldp	w8, w9, [x0, #40]
    a4dc:	orr	w10, w8, #0x200
    a4e0:	orr	w9, w9, w1
    a4e4:	tst	w10, w1
    a4e8:	str	w9, [x0, #44]
    a4ec:	b.eq	a53c <PyInit__decimal@@Base+0x39d8>  // b.none
    a4f0:	tbnz	w1, #9, a544 <PyInit__decimal@@Base+0x39e0>
    a4f4:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
    a4f8:	ldr	x9, [x9, #2568]
    a4fc:	cbz	x9, a520 <PyInit__decimal@@Base+0x39bc>
    a500:	and	w21, w8, w1
    a504:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    a508:	add	x8, x8, #0xa28
    a50c:	ldur	w9, [x8, #-16]
    a510:	tst	w21, w9
    a514:	b.ne	a55c <PyInit__decimal@@Base+0x39f8>  // b.any
    a518:	ldr	x9, [x8], #32
    a51c:	cbnz	x9, a50c <PyInit__decimal@@Base+0x39a8>
    a520:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    a524:	ldr	x8, [x8, #3920]
    a528:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    a52c:	add	x1, x1, #0xdae
    a530:	ldr	x0, [x8]
    a534:	bl	6640 <PyErr_SetString@plt>
    a538:	b	a548 <PyInit__decimal@@Base+0x39e4>
    a53c:	mov	w0, wzr
    a540:	b	a54c <PyInit__decimal@@Base+0x39e8>
    a544:	bl	65d0 <PyErr_NoMemory@plt>
    a548:	mov	w0, #0x1                   	// #1
    a54c:	ldp	x20, x19, [sp, #32]
    a550:	ldp	x22, x21, [sp, #16]
    a554:	ldp	x29, x30, [sp], #48
    a558:	ret
    a55c:	ldur	x20, [x8, #-8]
    a560:	cbz	x20, a548 <PyInit__decimal@@Base+0x39e4>
    a564:	mov	x0, xzr
    a568:	bl	6490 <PyList_New@plt>
    a56c:	cbz	x0, a548 <PyInit__decimal@@Base+0x39e4>
    a570:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    a574:	ldr	x8, [x8, #2888]
    a578:	mov	x19, x0
    a57c:	cbz	x8, a5ac <PyInit__decimal@@Base+0x3a48>
    a580:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    a584:	add	x22, x22, #0xb68
    a588:	ldur	w8, [x22, #-16]
    a58c:	tst	w8, w21
    a590:	b.eq	a5a4 <PyInit__decimal@@Base+0x3a40>  // b.none
    a594:	ldur	x1, [x22, #-8]
    a598:	mov	x0, x19
    a59c:	bl	6760 <PyList_Append@plt>
    a5a0:	tbnz	w0, #31, a5f0 <PyInit__decimal@@Base+0x3a8c>
    a5a4:	ldr	x8, [x22], #32
    a5a8:	cbnz	x8, a588 <PyInit__decimal@@Base+0x3a24>
    a5ac:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    a5b0:	ldr	x8, [x8, #2600]
    a5b4:	cbz	x8, a5e4 <PyInit__decimal@@Base+0x3a80>
    a5b8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    a5bc:	add	x22, x22, #0xa48
    a5c0:	ldur	w8, [x22, #-16]
    a5c4:	tst	w8, w21
    a5c8:	b.eq	a5dc <PyInit__decimal@@Base+0x3a78>  // b.none
    a5cc:	ldur	x1, [x22, #-8]
    a5d0:	mov	x0, x19
    a5d4:	bl	6760 <PyList_Append@plt>
    a5d8:	tbnz	w0, #31, a5f0 <PyInit__decimal@@Base+0x3a8c>
    a5dc:	ldr	x8, [x22], #32
    a5e0:	cbnz	x8, a5c0 <PyInit__decimal@@Base+0x3a5c>
    a5e4:	mov	x0, x20
    a5e8:	mov	x1, x19
    a5ec:	bl	65e0 <PyErr_SetObject@plt>
    a5f0:	ldr	x8, [x19]
    a5f4:	subs	x8, x8, #0x1
    a5f8:	str	x8, [x19]
    a5fc:	b.ne	a548 <PyInit__decimal@@Base+0x39e4>  // b.any
    a600:	mov	x0, x19
    a604:	bl	65c0 <_Py_Dealloc@plt>
    a608:	b	a548 <PyInit__decimal@@Base+0x39e4>
    a60c:	sub	sp, sp, #0x60
    a610:	stp	x29, x30, [sp, #48]
    a614:	str	x21, [sp, #64]
    a618:	stp	x20, x19, [sp, #80]
    a61c:	add	x29, sp, #0x30
    a620:	str	wzr, [x29, #28]
    a624:	ldr	x8, [x1, #8]
    a628:	ldrb	w8, [x8, #171]
    a62c:	tbnz	w8, #0, a64c <PyInit__decimal@@Base+0x3ae8>
    a630:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    a634:	ldr	x8, [x8, #3936]
    a638:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    a63c:	add	x1, x1, #0xd92
    a640:	ldr	x0, [x8]
    a644:	bl	6640 <PyErr_SetString@plt>
    a648:	b	a6d0 <PyInit__decimal@@Base+0x3b6c>
    a64c:	mov	x21, x0
    a650:	mov	x0, sp
    a654:	mov	x20, x2
    a658:	mov	x19, x1
    a65c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
    a660:	mov	x2, sp
    a664:	add	x3, x29, #0x1c
    a668:	mov	x0, x21
    a66c:	mov	x1, x19
    a670:	bl	a6ec <PyInit__decimal@@Base+0x3b88>
    a674:	mov	x19, x0
    a678:	cbz	x0, a6d4 <PyInit__decimal@@Base+0x3b70>
    a67c:	ldr	w8, [x29, #28]
    a680:	mov	w9, #0x1041                	// #4161
    a684:	tst	w8, w9
    a688:	b.eq	a6a0 <PyInit__decimal@@Base+0x3b3c>  // b.none
    a68c:	add	x0, x19, #0x18
    a690:	add	x2, x29, #0x1c
    a694:	mov	w1, #0x100                 	// #256
    a698:	bl	208fc <PyInit__decimal@@Base+0x19d98>
    a69c:	ldr	w8, [x29, #28]
    a6a0:	mov	w9, #0x3be                 	// #958
    a6a4:	and	w1, w8, w9
    a6a8:	mov	x0, x20
    a6ac:	str	w1, [x29, #28]
    a6b0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    a6b4:	cbz	w0, a6d4 <PyInit__decimal@@Base+0x3b70>
    a6b8:	ldr	x8, [x19]
    a6bc:	subs	x8, x8, #0x1
    a6c0:	str	x8, [x19]
    a6c4:	b.ne	a6d0 <PyInit__decimal@@Base+0x3b6c>  // b.any
    a6c8:	mov	x0, x19
    a6cc:	bl	65c0 <_Py_Dealloc@plt>
    a6d0:	mov	x19, xzr
    a6d4:	mov	x0, x19
    a6d8:	ldp	x20, x19, [sp, #80]
    a6dc:	ldr	x21, [sp, #64]
    a6e0:	ldp	x29, x30, [sp, #48]
    a6e4:	add	sp, sp, #0x60
    a6e8:	ret
    a6ec:	stp	x29, x30, [sp, #-48]!
    a6f0:	stp	x22, x21, [sp, #16]
    a6f4:	stp	x20, x19, [sp, #32]
    a6f8:	mov	x29, sp
    a6fc:	mov	x20, x3
    a700:	mov	x21, x2
    a704:	mov	x22, x1
    a708:	bl	a460 <PyInit__decimal@@Base+0x38fc>
    a70c:	mov	x19, x0
    a710:	cbz	x0, a7bc <PyInit__decimal@@Base+0x3c58>
    a714:	ldr	x8, [x22, #16]
    a718:	cbz	x8, a774 <PyInit__decimal@@Base+0x3c10>
    a71c:	cmp	x8, #0x0
    a720:	cneg	x2, x8, mi  // mi = first
    a724:	cmp	x2, #0x1
    a728:	lsr	x3, x8, #63
    a72c:	b.ne	a7a4 <PyInit__decimal@@Base+0x3c40>  // b.any
    a730:	ldr	w8, [x22, #24]
    a734:	ldr	x9, [x19, #64]
    a738:	add	x22, x19, #0x18
    a73c:	mov	w10, #0x1                   	// #1
    a740:	mov	x0, x22
    a744:	mov	w1, w3
    a748:	str	x8, [x9]
    a74c:	str	x10, [x19, #48]
    a750:	bl	2054c <PyInit__decimal@@Base+0x199e8>
    a754:	mov	x0, x22
    a758:	str	xzr, [x19, #32]
    a75c:	bl	20308 <PyInit__decimal@@Base+0x197a4>
    a760:	mov	x0, x22
    a764:	mov	x1, x21
    a768:	mov	x2, x20
    a76c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
    a770:	b	a7bc <PyInit__decimal@@Base+0x3c58>
    a774:	ldr	x8, [x19, #64]
    a778:	add	x20, x19, #0x18
    a77c:	mov	w9, #0x1                   	// #1
    a780:	mov	x0, x20
    a784:	mov	w1, wzr
    a788:	str	xzr, [x8]
    a78c:	str	x9, [x19, #48]
    a790:	bl	2054c <PyInit__decimal@@Base+0x199e8>
    a794:	mov	x0, x20
    a798:	str	xzr, [x19, #32]
    a79c:	bl	20308 <PyInit__decimal@@Base+0x197a4>
    a7a0:	b	a7bc <PyInit__decimal@@Base+0x3c58>
    a7a4:	add	x0, x19, #0x18
    a7a8:	add	x1, x22, #0x18
    a7ac:	mov	w4, #0x40000000            	// #1073741824
    a7b0:	mov	x5, x21
    a7b4:	mov	x6, x20
    a7b8:	bl	2e2b0 <PyInit__decimal@@Base+0x2774c>
    a7bc:	mov	x0, x19
    a7c0:	ldp	x20, x19, [sp, #32]
    a7c4:	ldp	x22, x21, [sp, #16]
    a7c8:	ldp	x29, x30, [sp], #48
    a7cc:	ret
    a7d0:	sub	sp, sp, #0x80
    a7d4:	stp	x29, x30, [sp, #80]
    a7d8:	stp	x22, x21, [sp, #96]
    a7dc:	stp	x20, x19, [sp, #112]
    a7e0:	add	x29, sp, #0x50
    a7e4:	add	x21, x0, #0x18
    a7e8:	mov	x0, x21
    a7ec:	mov	w22, w2
    a7f0:	mov	x20, x1
    a7f4:	str	wzr, [sp, #12]
    a7f8:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
    a7fc:	cbz	w0, a820 <PyInit__decimal@@Base+0x3cbc>
    a800:	mov	x0, x21
    a804:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
    a808:	cbz	w0, a86c <PyInit__decimal@@Base+0x3d08>
    a80c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    a810:	ldr	x8, [x8, #3928]
    a814:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    a818:	add	x1, x1, #0xdd8
    a81c:	b	a87c <PyInit__decimal@@Base+0x3d18>
    a820:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
    a824:	cbz	x0, a8a0 <PyInit__decimal@@Base+0x3d3c>
    a828:	ldp	q1, q0, [x20, #32]
    a82c:	ldr	q2, [x20, #16]
    a830:	add	x2, sp, #0x10
    a834:	add	x3, sp, #0xc
    a838:	mov	x1, x21
    a83c:	mov	x19, x0
    a840:	stp	q1, q0, [sp, #32]
    a844:	str	q2, [sp, #16]
    a848:	str	w22, [sp, #52]
    a84c:	bl	2b794 <PyInit__decimal@@Base+0x24c30>
    a850:	ldr	w1, [sp, #12]
    a854:	mov	x0, x20
    a858:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    a85c:	cbz	w0, a8a8 <PyInit__decimal@@Base+0x3d44>
    a860:	mov	x0, x19
    a864:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    a868:	b	a884 <PyInit__decimal@@Base+0x3d20>
    a86c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    a870:	ldr	x8, [x8, #3992]
    a874:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    a878:	add	x1, x1, #0xdf6
    a87c:	ldr	x0, [x8]
    a880:	bl	6640 <PyErr_SetString@plt>
    a884:	mov	x20, xzr
    a888:	mov	x0, x20
    a88c:	ldp	x20, x19, [sp, #112]
    a890:	ldp	x22, x21, [sp, #96]
    a894:	ldp	x29, x30, [sp, #80]
    a898:	add	sp, sp, #0x80
    a89c:	ret
    a8a0:	bl	65d0 <PyErr_NoMemory@plt>
    a8a4:	b	a884 <PyInit__decimal@@Base+0x3d20>
    a8a8:	sub	x0, x29, #0x8
    a8ac:	add	x4, sp, #0xc
    a8b0:	mov	w2, #0x40000000            	// #1073741824
    a8b4:	mov	x1, xzr
    a8b8:	mov	x3, x19
    a8bc:	str	wzr, [sp, #12]
    a8c0:	stur	xzr, [x29, #-8]
    a8c4:	bl	2dbf8 <PyInit__decimal@@Base+0x27094>
    a8c8:	cmn	x0, #0x1
    a8cc:	b.eq	a944 <PyInit__decimal@@Base+0x3de0>  // b.none
    a8d0:	mov	x21, x0
    a8d4:	bl	6590 <_PyLong_New@plt>
    a8d8:	mov	x20, x0
    a8dc:	cbz	x0, a94c <PyInit__decimal@@Base+0x3de8>
    a8e0:	ldur	x22, [x29, #-8]
    a8e4:	add	x0, x20, #0x18
    a8e8:	lsl	x2, x21, #2
    a8ec:	mov	x1, x22
    a8f0:	bl	6460 <memcpy@plt>
    a8f4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    a8f8:	ldr	x8, [x8, #1384]
    a8fc:	mov	x0, x22
    a900:	blr	x8
    a904:	add	x8, x20, #0x14
    a908:	mov	x22, x21
    a90c:	subs	x21, x21, #0x1
    a910:	b.lt	a91c <PyInit__decimal@@Base+0x3db8>  // b.tstop
    a914:	ldr	w9, [x8, x22, lsl #2]
    a918:	cbz	w9, a908 <PyInit__decimal@@Base+0x3da4>
    a91c:	mov	x0, x19
    a920:	str	x22, [x20, #16]
    a924:	bl	1fe88 <PyInit__decimal@@Base+0x19324>
    a928:	cbz	w0, a95c <PyInit__decimal@@Base+0x3df8>
    a92c:	mov	x0, x19
    a930:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
    a934:	cbnz	w0, a95c <PyInit__decimal@@Base+0x3df8>
    a938:	neg	x8, x22
    a93c:	str	x8, [x20, #16]
    a940:	b	a95c <PyInit__decimal@@Base+0x3df8>
    a944:	bl	65d0 <PyErr_NoMemory@plt>
    a948:	b	a860 <PyInit__decimal@@Base+0x3cfc>
    a94c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    a950:	ldr	x8, [x8, #1384]
    a954:	ldur	x0, [x29, #-8]
    a958:	blr	x8
    a95c:	mov	x0, x19
    a960:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    a964:	b	a888 <PyInit__decimal@@Base+0x3d24>
    a968:	stp	x29, x30, [sp, #-48]!
    a96c:	str	x21, [sp, #16]
    a970:	stp	x20, x19, [sp, #32]
    a974:	mov	x29, sp
    a978:	mov	x19, x1
    a97c:	mov	x20, x0
    a980:	mov	w1, #0x7f                  	// #127
    a984:	mov	x0, x19
    a988:	bl	6a40 <PyUnicode_New@plt>
    a98c:	mov	x21, x0
    a990:	cbz	x0, a9c0 <PyInit__decimal@@Base+0x3e5c>
    a994:	ldr	w8, [x21, #32]
    a998:	tbnz	w8, #5, a9a4 <PyInit__decimal@@Base+0x3e40>
    a99c:	ldr	x0, [x21, #72]
    a9a0:	b	a9b4 <PyInit__decimal@@Base+0x3e50>
    a9a4:	add	x9, x21, #0x30
    a9a8:	add	x10, x21, #0x48
    a9ac:	tst	w8, #0x40
    a9b0:	csel	x0, x10, x9, eq  // eq = none
    a9b4:	mov	x1, x20
    a9b8:	mov	x2, x19
    a9bc:	bl	6460 <memcpy@plt>
    a9c0:	mov	x0, x21
    a9c4:	ldp	x20, x19, [sp, #32]
    a9c8:	ldr	x21, [sp, #16]
    a9cc:	ldp	x29, x30, [sp], #48
    a9d0:	ret
    a9d4:	sub	sp, sp, #0xa0
    a9d8:	stp	x29, x30, [sp, #96]
    a9dc:	stp	x24, x23, [sp, #112]
    a9e0:	stp	x22, x21, [sp, #128]
    a9e4:	stp	x20, x19, [sp, #144]
    a9e8:	add	x29, sp, #0x60
    a9ec:	stur	wzr, [x29, #-4]
    a9f0:	ldr	x8, [x1, #8]
    a9f4:	mov	x19, x2
    a9f8:	mov	x21, x1
    a9fc:	mov	x20, x0
    aa00:	ldrb	w9, [x8, #171]
    aa04:	tbnz	w9, #0, abc4 <PyInit__decimal@@Base+0x4060>
    aa08:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    aa0c:	ldr	x9, [x9, #3864]
    aa10:	cmp	x8, x9
    aa14:	b.eq	aa2c <PyInit__decimal@@Base+0x3ec8>  // b.none
    aa18:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
    aa1c:	ldr	x1, [x1, #3864]
    aa20:	mov	x0, x8
    aa24:	bl	69b0 <PyType_IsSubtype@plt>
    aa28:	cbz	w0, abdc <PyInit__decimal@@Base+0x4078>
    aa2c:	mov	x0, x21
    aa30:	bl	68b0 <PyFloat_AsDouble@plt>
    aa34:	fmov	d1, #-1.000000000000000000e+00
    aa38:	fcmp	d0, d1
    aa3c:	str	q0, [sp, #16]
    aa40:	b.ne	aa50 <PyInit__decimal@@Base+0x3eec>  // b.any
    aa44:	bl	67d0 <PyErr_Occurred@plt>
    aa48:	ldr	q0, [sp, #16]
    aa4c:	cbnz	x0, abf4 <PyInit__decimal@@Base+0x4090>
    aa50:	movi	v2.2d, #0x0
    aa54:	fmov	d1, #1.000000000000000000e+00
    aa58:	fneg	v2.2d, v2.2d
    aa5c:	fcmp	d0, d0
    aa60:	bit	v1.16b, v0.16b, v2.16b
    aa64:	str	q1, [sp]
    aa68:	b.vs	ac14 <PyInit__decimal@@Base+0x40b0>
    aa6c:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
    aa70:	fabs	d2, d0
    aa74:	fmov	d1, x8
    aa78:	fcmp	d2, d1
    aa7c:	b.eq	ac14 <PyInit__decimal@@Base+0x40b0>  // b.none
    aa80:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    aa84:	ldr	x8, [x8, #1440]
    aa88:	mov	x0, x21
    aa8c:	blr	x8
    aa90:	cbz	x0, abf4 <PyInit__decimal@@Base+0x4090>
    aa94:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    aa98:	ldr	x8, [x8, #1448]
    aa9c:	mov	x1, xzr
    aaa0:	mov	x21, x0
    aaa4:	blr	x8
    aaa8:	ldr	x8, [x21]
    aaac:	mov	x22, x0
    aab0:	subs	x8, x8, #0x1
    aab4:	str	x8, [x21]
    aab8:	b.ne	aac4 <PyInit__decimal@@Base+0x3f60>  // b.any
    aabc:	mov	x0, x21
    aac0:	bl	65c0 <_Py_Dealloc@plt>
    aac4:	cbz	x22, abf4 <PyInit__decimal@@Base+0x4090>
    aac8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    aacc:	ldp	x23, x0, [x22, #24]
    aad0:	ldr	x8, [x8, #1456]
    aad4:	mov	x1, xzr
    aad8:	blr	x8
    aadc:	cbz	x0, ac58 <PyInit__decimal@@Base+0x40f4>
    aae0:	mov	x24, x0
    aae4:	bl	66e0 <PyLong_AsSsize_t@plt>
    aae8:	ldr	x8, [x24]
    aaec:	mov	x21, x0
    aaf0:	subs	x8, x8, #0x1
    aaf4:	str	x8, [x24]
    aaf8:	b.ne	ab04 <PyInit__decimal@@Base+0x3fa0>  // b.any
    aafc:	mov	x0, x24
    ab00:	bl	65c0 <_Py_Dealloc@plt>
    ab04:	cmn	x21, #0x1
    ab08:	b.eq	ac50 <PyInit__decimal@@Base+0x40ec>  // b.none
    ab0c:	mov	x0, x20
    ab10:	mov	x1, x23
    ab14:	mov	x2, x19
    ab18:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    ab1c:	ldr	x8, [x22]
    ab20:	mov	x20, x0
    ab24:	subs	x8, x8, #0x1
    ab28:	str	x8, [x22]
    ab2c:	b.ne	ab38 <PyInit__decimal@@Base+0x3fd4>  // b.any
    ab30:	mov	x0, x22
    ab34:	bl	65c0 <_Py_Dealloc@plt>
    ab38:	cbz	x20, abf8 <PyInit__decimal@@Base+0x4094>
    ab3c:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
    ab40:	cbz	x0, ac7c <PyInit__decimal@@Base+0x4118>
    ab44:	mov	x22, x0
    ab48:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
    ab4c:	cbz	x0, ac74 <PyInit__decimal@@Base+0x4110>
    ab50:	mov	x23, x0
    ab54:	add	x0, sp, #0x28
    ab58:	sub	x24, x21, #0x1
    ab5c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
    ab60:	add	x2, sp, #0x28
    ab64:	sub	x3, x29, #0x4
    ab68:	mov	w1, #0x5                   	// #5
    ab6c:	mov	x0, x22
    ab70:	bl	210b8 <PyInit__decimal@@Base+0x1a554>
    ab74:	add	x2, sp, #0x28
    ab78:	sub	x3, x29, #0x4
    ab7c:	mov	x0, x23
    ab80:	mov	x1, x24
    ab84:	bl	21014 <PyInit__decimal@@Base+0x1a4b0>
    ab88:	add	x3, sp, #0x28
    ab8c:	sub	x4, x29, #0x4
    ab90:	mov	x0, x22
    ab94:	mov	x1, x22
    ab98:	mov	x2, x23
    ab9c:	bl	2a2a4 <PyInit__decimal@@Base+0x23740>
    aba0:	ldur	w1, [x29, #-4]
    aba4:	mov	x0, x19
    aba8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    abac:	cbz	w0, ac9c <PyInit__decimal@@Base+0x4138>
    abb0:	mov	x0, x22
    abb4:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    abb8:	mov	x0, x23
    abbc:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    abc0:	b	acd8 <PyInit__decimal@@Base+0x4174>
    abc4:	mov	x0, x20
    abc8:	mov	x1, x21
    abcc:	mov	x2, x19
    abd0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    abd4:	mov	x20, x0
    abd8:	b	abf8 <PyInit__decimal@@Base+0x4094>
    abdc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    abe0:	ldr	x8, [x8, #3936]
    abe4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    abe8:	add	x1, x1, #0xe8e
    abec:	ldr	x0, [x8]
    abf0:	bl	6640 <PyErr_SetString@plt>
    abf4:	mov	x20, xzr
    abf8:	mov	x0, x20
    abfc:	ldp	x20, x19, [sp, #144]
    ac00:	ldp	x22, x21, [sp, #128]
    ac04:	ldp	x24, x23, [sp, #112]
    ac08:	ldp	x29, x30, [sp, #96]
    ac0c:	add	sp, sp, #0xa0
    ac10:	ret
    ac14:	mov	x0, x20
    ac18:	bl	a460 <PyInit__decimal@@Base+0x38fc>
    ac1c:	mov	x20, x0
    ac20:	cbz	x0, abf8 <PyInit__decimal@@Base+0x4094>
    ac24:	ldr	q0, [sp, #16]
    ac28:	add	x0, x20, #0x18
    ac2c:	fcmp	d0, d0
    ac30:	b.vs	ad18 <PyInit__decimal@@Base+0x41b4>
    ac34:	ldr	q1, [sp]
    ac38:	fmov	d0, #1.000000000000000000e+00
    ac3c:	mov	w2, #0x2                   	// #2
    ac40:	fcmp	d1, d0
    ac44:	cset	w1, ne  // ne = any
    ac48:	bl	20868 <PyInit__decimal@@Base+0x19d04>
    ac4c:	b	abf8 <PyInit__decimal@@Base+0x4094>
    ac50:	bl	67d0 <PyErr_Occurred@plt>
    ac54:	cbz	x0, ab0c <PyInit__decimal@@Base+0x3fa8>
    ac58:	ldr	x8, [x22]
    ac5c:	subs	x8, x8, #0x1
    ac60:	str	x8, [x22]
    ac64:	b.ne	abf4 <PyInit__decimal@@Base+0x4090>  // b.any
    ac68:	mov	x0, x22
    ac6c:	bl	65c0 <_Py_Dealloc@plt>
    ac70:	b	abf4 <PyInit__decimal@@Base+0x4090>
    ac74:	mov	x0, x22
    ac78:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    ac7c:	ldr	x8, [x20]
    ac80:	subs	x8, x8, #0x1
    ac84:	str	x8, [x20]
    ac88:	b.ne	ac94 <PyInit__decimal@@Base+0x4130>  // b.any
    ac8c:	mov	x0, x20
    ac90:	bl	65c0 <_Py_Dealloc@plt>
    ac94:	bl	65d0 <PyErr_NoMemory@plt>
    ac98:	b	abf4 <PyInit__decimal@@Base+0x4090>
    ac9c:	add	x24, x20, #0x18
    aca0:	add	x3, sp, #0x28
    aca4:	sub	x4, x29, #0x4
    aca8:	mov	x0, x24
    acac:	mov	x1, x24
    acb0:	mov	x2, x22
    acb4:	bl	284d4 <PyInit__decimal@@Base+0x21970>
    acb8:	mov	x0, x22
    acbc:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    acc0:	mov	x0, x23
    acc4:	bl	20058 <PyInit__decimal@@Base+0x194f4>
    acc8:	ldur	w1, [x29, #-4]
    accc:	mov	x0, x19
    acd0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    acd4:	cbz	w0, acf0 <PyInit__decimal@@Base+0x418c>
    acd8:	ldr	x8, [x20]
    acdc:	subs	x8, x8, #0x1
    ace0:	str	x8, [x20]
    ace4:	b.ne	abf4 <PyInit__decimal@@Base+0x4090>  // b.any
    ace8:	mov	x0, x20
    acec:	b	ac6c <PyInit__decimal@@Base+0x4108>
    acf0:	ldr	q1, [sp]
    acf4:	fmov	d0, #1.000000000000000000e+00
    acf8:	mov	x0, x24
    acfc:	fcmp	d1, d0
    ad00:	cset	w1, ne  // ne = any
    ad04:	bl	2044c <PyInit__decimal@@Base+0x198e8>
    ad08:	mov	w8, #0x1                   	// #1
    ad0c:	sub	x8, x8, x21
    ad10:	str	x8, [x24, #8]
    ad14:	b	abf8 <PyInit__decimal@@Base+0x4094>
    ad18:	mov	w2, #0x4                   	// #4
    ad1c:	mov	w1, wzr
    ad20:	b	ac48 <PyInit__decimal@@Base+0x40e4>
    ad24:	sub	sp, sp, #0x50
    ad28:	stp	x29, x30, [sp, #32]
    ad2c:	stp	x22, x21, [sp, #48]
    ad30:	stp	x20, x19, [sp, #64]
    ad34:	add	x29, sp, #0x20
    ad38:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    ad3c:	ldr	x20, [x20, #4008]
    ad40:	mov	x8, x2
    ad44:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    ad48:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    ad4c:	mov	x19, x0
    ad50:	add	x2, x2, #0x27c
    ad54:	add	x3, x3, #0x5a0
    ad58:	add	x4, sp, #0x10
    ad5c:	mov	x0, x1
    ad60:	mov	x1, x8
    ad64:	str	x20, [sp, #16]
    ad68:	str	wzr, [sp, #12]
    ad6c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    ad70:	cbz	w0, ae74 <PyInit__decimal@@Base+0x4310>
    ad74:	ldr	x8, [sp, #16]
    ad78:	cmp	x8, x20
    ad7c:	b.eq	adc0 <PyInit__decimal@@Base+0x425c>  // b.none
    ad80:	ldr	x0, [x8, #8]
    ad84:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ad88:	add	x8, x8, #0x4c0
    ad8c:	cmp	x0, x8
    ad90:	b.eq	adfc <PyInit__decimal@@Base+0x4298>  // b.none
    ad94:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ad98:	add	x1, x1, #0x4c0
    ad9c:	bl	69b0 <PyType_IsSubtype@plt>
    ada0:	cbnz	w0, adfc <PyInit__decimal@@Base+0x4298>
    ada4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ada8:	ldr	x8, [x8, #3936]
    adac:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    adb0:	add	x1, x1, #0x131
    adb4:	ldr	x0, [x8]
    adb8:	bl	6640 <PyErr_SetString@plt>
    adbc:	b	ae74 <PyInit__decimal@@Base+0x4310>
    adc0:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    adc4:	ldr	x0, [x21, #1408]
    adc8:	sub	x2, x29, #0x8
    adcc:	mov	x1, xzr
    add0:	bl	6730 <PyContextVar_Get@plt>
    add4:	tbnz	w0, #31, af0c <PyInit__decimal@@Base+0x43a8>
    add8:	ldur	x20, [x29, #-8]
    addc:	cbz	x20, ae90 <PyInit__decimal@@Base+0x432c>
    ade0:	str	x20, [sp, #16]
    ade4:	ldr	x8, [x20]
    ade8:	subs	x8, x8, #0x1
    adec:	str	x8, [x20]
    adf0:	b.ne	adfc <PyInit__decimal@@Base+0x4298>  // b.any
    adf4:	mov	x0, x20
    adf8:	bl	65c0 <_Py_Dealloc@plt>
    adfc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ae00:	add	x0, x0, #0x320
    ae04:	bl	6940 <_PyObject_New@plt>
    ae08:	mov	x20, x0
    ae0c:	cbz	x0, ae78 <PyInit__decimal@@Base+0x4314>
    ae10:	mov	w8, #0x30                  	// #48
    ae14:	mov	x0, x20
    ae18:	strb	w8, [x0, #24]!
    ae1c:	mov	x9, #0xffffffffffffffff    	// #-1
    ae20:	mov	w10, #0x4                   	// #4
    ae24:	add	x8, x0, #0x30
    ae28:	stur	x9, [x0, #-8]
    ae2c:	stp	xzr, xzr, [x0, #8]
    ae30:	stp	xzr, x10, [x0, #24]
    ae34:	str	x8, [x0, #40]
    ae38:	ldr	x8, [sp, #16]
    ae3c:	add	x1, x19, #0x18
    ae40:	add	x3, sp, #0xc
    ae44:	add	x2, x8, #0x10
    ae48:	bl	26af8 <PyInit__decimal@@Base+0x1ff94>
    ae4c:	ldr	x0, [sp, #16]
    ae50:	ldr	w1, [sp, #12]
    ae54:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    ae58:	cbz	w0, ae78 <PyInit__decimal@@Base+0x4314>
    ae5c:	ldr	x8, [x20]
    ae60:	subs	x8, x8, #0x1
    ae64:	str	x8, [x20]
    ae68:	b.ne	ae74 <PyInit__decimal@@Base+0x4310>  // b.any
    ae6c:	mov	x0, x20
    ae70:	bl	65c0 <_Py_Dealloc@plt>
    ae74:	mov	x20, xzr
    ae78:	mov	x0, x20
    ae7c:	ldp	x20, x19, [sp, #64]
    ae80:	ldp	x22, x21, [sp, #48]
    ae84:	ldp	x29, x30, [sp, #32]
    ae88:	add	sp, sp, #0x50
    ae8c:	ret
    ae90:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    ae94:	ldr	x22, [x8, #1504]
    ae98:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ae9c:	add	x0, x0, #0x4c0
    aea0:	mov	x1, xzr
    aea4:	bl	6830 <PyObject_CallObject@plt>
    aea8:	cbz	x0, af0c <PyInit__decimal@@Base+0x43a8>
    aeac:	ldp	q1, q0, [x22, #32]
    aeb0:	ldr	q2, [x22, #16]
    aeb4:	mov	x20, x0
    aeb8:	mov	x1, x20
    aebc:	stp	q1, q0, [x0, #32]
    aec0:	str	q2, [x0, #16]
    aec4:	ldr	w8, [x22, #80]
    aec8:	stp	wzr, wzr, [x0, #44]
    aecc:	str	w8, [x0, #80]
    aed0:	ldr	x0, [x21, #1408]
    aed4:	bl	6670 <PyContextVar_Set@plt>
    aed8:	cbz	x0, aef4 <PyInit__decimal@@Base+0x4390>
    aedc:	ldr	x8, [x0]
    aee0:	subs	x8, x8, #0x1
    aee4:	str	x8, [x0]
    aee8:	b.ne	ade0 <PyInit__decimal@@Base+0x427c>  // b.any
    aeec:	bl	65c0 <_Py_Dealloc@plt>
    aef0:	b	ade0 <PyInit__decimal@@Base+0x427c>
    aef4:	ldr	x8, [x20]
    aef8:	subs	x8, x8, #0x1
    aefc:	str	x8, [x20]
    af00:	b.ne	af0c <PyInit__decimal@@Base+0x43a8>  // b.any
    af04:	mov	x0, x20
    af08:	bl	65c0 <_Py_Dealloc@plt>
    af0c:	mov	x20, xzr
    af10:	str	xzr, [sp, #16]
    af14:	b	ae78 <PyInit__decimal@@Base+0x4314>
    af18:	sub	sp, sp, #0x50
    af1c:	stp	x29, x30, [sp, #32]
    af20:	stp	x22, x21, [sp, #48]
    af24:	stp	x20, x19, [sp, #64]
    af28:	add	x29, sp, #0x20
    af2c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    af30:	ldr	x20, [x20, #4008]
    af34:	mov	x8, x2
    af38:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    af3c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    af40:	mov	x19, x0
    af44:	add	x2, x2, #0x27c
    af48:	add	x3, x3, #0x5b0
    af4c:	add	x4, sp, #0x10
    af50:	mov	x0, x1
    af54:	mov	x1, x8
    af58:	str	x20, [sp, #16]
    af5c:	str	wzr, [sp, #12]
    af60:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    af64:	cbz	w0, b068 <PyInit__decimal@@Base+0x4504>
    af68:	ldr	x8, [sp, #16]
    af6c:	cmp	x8, x20
    af70:	b.eq	afb4 <PyInit__decimal@@Base+0x4450>  // b.none
    af74:	ldr	x0, [x8, #8]
    af78:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    af7c:	add	x8, x8, #0x4c0
    af80:	cmp	x0, x8
    af84:	b.eq	aff0 <PyInit__decimal@@Base+0x448c>  // b.none
    af88:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    af8c:	add	x1, x1, #0x4c0
    af90:	bl	69b0 <PyType_IsSubtype@plt>
    af94:	cbnz	w0, aff0 <PyInit__decimal@@Base+0x448c>
    af98:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    af9c:	ldr	x8, [x8, #3936]
    afa0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    afa4:	add	x1, x1, #0x131
    afa8:	ldr	x0, [x8]
    afac:	bl	6640 <PyErr_SetString@plt>
    afb0:	b	b068 <PyInit__decimal@@Base+0x4504>
    afb4:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    afb8:	ldr	x0, [x21, #1408]
    afbc:	sub	x2, x29, #0x8
    afc0:	mov	x1, xzr
    afc4:	bl	6730 <PyContextVar_Get@plt>
    afc8:	tbnz	w0, #31, b100 <PyInit__decimal@@Base+0x459c>
    afcc:	ldur	x20, [x29, #-8]
    afd0:	cbz	x20, b084 <PyInit__decimal@@Base+0x4520>
    afd4:	str	x20, [sp, #16]
    afd8:	ldr	x8, [x20]
    afdc:	subs	x8, x8, #0x1
    afe0:	str	x8, [x20]
    afe4:	b.ne	aff0 <PyInit__decimal@@Base+0x448c>  // b.any
    afe8:	mov	x0, x20
    afec:	bl	65c0 <_Py_Dealloc@plt>
    aff0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    aff4:	add	x0, x0, #0x320
    aff8:	bl	6940 <_PyObject_New@plt>
    affc:	mov	x20, x0
    b000:	cbz	x0, b06c <PyInit__decimal@@Base+0x4508>
    b004:	mov	w8, #0x30                  	// #48
    b008:	mov	x0, x20
    b00c:	strb	w8, [x0, #24]!
    b010:	mov	x9, #0xffffffffffffffff    	// #-1
    b014:	mov	w10, #0x4                   	// #4
    b018:	add	x8, x0, #0x30
    b01c:	stur	x9, [x0, #-8]
    b020:	stp	xzr, xzr, [x0, #8]
    b024:	stp	xzr, x10, [x0, #24]
    b028:	str	x8, [x0, #40]
    b02c:	ldr	x8, [sp, #16]
    b030:	add	x1, x19, #0x18
    b034:	add	x3, sp, #0xc
    b038:	add	x2, x8, #0x10
    b03c:	bl	28510 <PyInit__decimal@@Base+0x219ac>
    b040:	ldr	x0, [sp, #16]
    b044:	ldr	w1, [sp, #12]
    b048:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    b04c:	cbz	w0, b06c <PyInit__decimal@@Base+0x4508>
    b050:	ldr	x8, [x20]
    b054:	subs	x8, x8, #0x1
    b058:	str	x8, [x20]
    b05c:	b.ne	b068 <PyInit__decimal@@Base+0x4504>  // b.any
    b060:	mov	x0, x20
    b064:	bl	65c0 <_Py_Dealloc@plt>
    b068:	mov	x20, xzr
    b06c:	mov	x0, x20
    b070:	ldp	x20, x19, [sp, #64]
    b074:	ldp	x22, x21, [sp, #48]
    b078:	ldp	x29, x30, [sp, #32]
    b07c:	add	sp, sp, #0x50
    b080:	ret
    b084:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    b088:	ldr	x22, [x8, #1504]
    b08c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b090:	add	x0, x0, #0x4c0
    b094:	mov	x1, xzr
    b098:	bl	6830 <PyObject_CallObject@plt>
    b09c:	cbz	x0, b100 <PyInit__decimal@@Base+0x459c>
    b0a0:	ldp	q1, q0, [x22, #32]
    b0a4:	ldr	q2, [x22, #16]
    b0a8:	mov	x20, x0
    b0ac:	mov	x1, x20
    b0b0:	stp	q1, q0, [x0, #32]
    b0b4:	str	q2, [x0, #16]
    b0b8:	ldr	w8, [x22, #80]
    b0bc:	stp	wzr, wzr, [x0, #44]
    b0c0:	str	w8, [x0, #80]
    b0c4:	ldr	x0, [x21, #1408]
    b0c8:	bl	6670 <PyContextVar_Set@plt>
    b0cc:	cbz	x0, b0e8 <PyInit__decimal@@Base+0x4584>
    b0d0:	ldr	x8, [x0]
    b0d4:	subs	x8, x8, #0x1
    b0d8:	str	x8, [x0]
    b0dc:	b.ne	afd4 <PyInit__decimal@@Base+0x4470>  // b.any
    b0e0:	bl	65c0 <_Py_Dealloc@plt>
    b0e4:	b	afd4 <PyInit__decimal@@Base+0x4470>
    b0e8:	ldr	x8, [x20]
    b0ec:	subs	x8, x8, #0x1
    b0f0:	str	x8, [x20]
    b0f4:	b.ne	b100 <PyInit__decimal@@Base+0x459c>  // b.any
    b0f8:	mov	x0, x20
    b0fc:	bl	65c0 <_Py_Dealloc@plt>
    b100:	mov	x20, xzr
    b104:	str	xzr, [sp, #16]
    b108:	b	b06c <PyInit__decimal@@Base+0x4508>
    b10c:	sub	sp, sp, #0x50
    b110:	stp	x29, x30, [sp, #32]
    b114:	stp	x22, x21, [sp, #48]
    b118:	stp	x20, x19, [sp, #64]
    b11c:	add	x29, sp, #0x20
    b120:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    b124:	ldr	x20, [x20, #4008]
    b128:	mov	x8, x2
    b12c:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    b130:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    b134:	mov	x19, x0
    b138:	add	x2, x2, #0x27c
    b13c:	add	x3, x3, #0x5c0
    b140:	add	x4, sp, #0x10
    b144:	mov	x0, x1
    b148:	mov	x1, x8
    b14c:	str	x20, [sp, #16]
    b150:	str	wzr, [sp, #12]
    b154:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    b158:	cbz	w0, b25c <PyInit__decimal@@Base+0x46f8>
    b15c:	ldr	x8, [sp, #16]
    b160:	cmp	x8, x20
    b164:	b.eq	b1a8 <PyInit__decimal@@Base+0x4644>  // b.none
    b168:	ldr	x0, [x8, #8]
    b16c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    b170:	add	x8, x8, #0x4c0
    b174:	cmp	x0, x8
    b178:	b.eq	b1e4 <PyInit__decimal@@Base+0x4680>  // b.none
    b17c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    b180:	add	x1, x1, #0x4c0
    b184:	bl	69b0 <PyType_IsSubtype@plt>
    b188:	cbnz	w0, b1e4 <PyInit__decimal@@Base+0x4680>
    b18c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    b190:	ldr	x8, [x8, #3936]
    b194:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    b198:	add	x1, x1, #0x131
    b19c:	ldr	x0, [x8]
    b1a0:	bl	6640 <PyErr_SetString@plt>
    b1a4:	b	b25c <PyInit__decimal@@Base+0x46f8>
    b1a8:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    b1ac:	ldr	x0, [x21, #1408]
    b1b0:	sub	x2, x29, #0x8
    b1b4:	mov	x1, xzr
    b1b8:	bl	6730 <PyContextVar_Get@plt>
    b1bc:	tbnz	w0, #31, b2f4 <PyInit__decimal@@Base+0x4790>
    b1c0:	ldur	x20, [x29, #-8]
    b1c4:	cbz	x20, b278 <PyInit__decimal@@Base+0x4714>
    b1c8:	str	x20, [sp, #16]
    b1cc:	ldr	x8, [x20]
    b1d0:	subs	x8, x8, #0x1
    b1d4:	str	x8, [x20]
    b1d8:	b.ne	b1e4 <PyInit__decimal@@Base+0x4680>  // b.any
    b1dc:	mov	x0, x20
    b1e0:	bl	65c0 <_Py_Dealloc@plt>
    b1e4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b1e8:	add	x0, x0, #0x320
    b1ec:	bl	6940 <_PyObject_New@plt>
    b1f0:	mov	x20, x0
    b1f4:	cbz	x0, b260 <PyInit__decimal@@Base+0x46fc>
    b1f8:	mov	w8, #0x30                  	// #48
    b1fc:	mov	x0, x20
    b200:	strb	w8, [x0, #24]!
    b204:	mov	x9, #0xffffffffffffffff    	// #-1
    b208:	mov	w10, #0x4                   	// #4
    b20c:	add	x8, x0, #0x30
    b210:	stur	x9, [x0, #-8]
    b214:	stp	xzr, xzr, [x0, #8]
    b218:	stp	xzr, x10, [x0, #24]
    b21c:	str	x8, [x0, #40]
    b220:	ldr	x8, [sp, #16]
    b224:	add	x1, x19, #0x18
    b228:	add	x3, sp, #0xc
    b22c:	add	x2, x8, #0x10
    b230:	bl	290d8 <PyInit__decimal@@Base+0x22574>
    b234:	ldr	x0, [sp, #16]
    b238:	ldr	w1, [sp, #12]
    b23c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    b240:	cbz	w0, b260 <PyInit__decimal@@Base+0x46fc>
    b244:	ldr	x8, [x20]
    b248:	subs	x8, x8, #0x1
    b24c:	str	x8, [x20]
    b250:	b.ne	b25c <PyInit__decimal@@Base+0x46f8>  // b.any
    b254:	mov	x0, x20
    b258:	bl	65c0 <_Py_Dealloc@plt>
    b25c:	mov	x20, xzr
    b260:	mov	x0, x20
    b264:	ldp	x20, x19, [sp, #64]
    b268:	ldp	x22, x21, [sp, #48]
    b26c:	ldp	x29, x30, [sp, #32]
    b270:	add	sp, sp, #0x50
    b274:	ret
    b278:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    b27c:	ldr	x22, [x8, #1504]
    b280:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b284:	add	x0, x0, #0x4c0
    b288:	mov	x1, xzr
    b28c:	bl	6830 <PyObject_CallObject@plt>
    b290:	cbz	x0, b2f4 <PyInit__decimal@@Base+0x4790>
    b294:	ldp	q1, q0, [x22, #32]
    b298:	ldr	q2, [x22, #16]
    b29c:	mov	x20, x0
    b2a0:	mov	x1, x20
    b2a4:	stp	q1, q0, [x0, #32]
    b2a8:	str	q2, [x0, #16]
    b2ac:	ldr	w8, [x22, #80]
    b2b0:	stp	wzr, wzr, [x0, #44]
    b2b4:	str	w8, [x0, #80]
    b2b8:	ldr	x0, [x21, #1408]
    b2bc:	bl	6670 <PyContextVar_Set@plt>
    b2c0:	cbz	x0, b2dc <PyInit__decimal@@Base+0x4778>
    b2c4:	ldr	x8, [x0]
    b2c8:	subs	x8, x8, #0x1
    b2cc:	str	x8, [x0]
    b2d0:	b.ne	b1c8 <PyInit__decimal@@Base+0x4664>  // b.any
    b2d4:	bl	65c0 <_Py_Dealloc@plt>
    b2d8:	b	b1c8 <PyInit__decimal@@Base+0x4664>
    b2dc:	ldr	x8, [x20]
    b2e0:	subs	x8, x8, #0x1
    b2e4:	str	x8, [x20]
    b2e8:	b.ne	b2f4 <PyInit__decimal@@Base+0x4790>  // b.any
    b2ec:	mov	x0, x20
    b2f0:	bl	65c0 <_Py_Dealloc@plt>
    b2f4:	mov	x20, xzr
    b2f8:	str	xzr, [sp, #16]
    b2fc:	b	b260 <PyInit__decimal@@Base+0x46fc>
    b300:	sub	sp, sp, #0x50
    b304:	stp	x29, x30, [sp, #32]
    b308:	stp	x22, x21, [sp, #48]
    b30c:	stp	x20, x19, [sp, #64]
    b310:	add	x29, sp, #0x20
    b314:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    b318:	ldr	x20, [x20, #4008]
    b31c:	mov	x8, x2
    b320:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    b324:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    b328:	mov	x19, x0
    b32c:	add	x2, x2, #0x27c
    b330:	add	x3, x3, #0x5d0
    b334:	add	x4, sp, #0x10
    b338:	mov	x0, x1
    b33c:	mov	x1, x8
    b340:	str	x20, [sp, #16]
    b344:	str	wzr, [sp, #12]
    b348:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    b34c:	cbz	w0, b450 <PyInit__decimal@@Base+0x48ec>
    b350:	ldr	x8, [sp, #16]
    b354:	cmp	x8, x20
    b358:	b.eq	b39c <PyInit__decimal@@Base+0x4838>  // b.none
    b35c:	ldr	x0, [x8, #8]
    b360:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    b364:	add	x8, x8, #0x4c0
    b368:	cmp	x0, x8
    b36c:	b.eq	b3d8 <PyInit__decimal@@Base+0x4874>  // b.none
    b370:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    b374:	add	x1, x1, #0x4c0
    b378:	bl	69b0 <PyType_IsSubtype@plt>
    b37c:	cbnz	w0, b3d8 <PyInit__decimal@@Base+0x4874>
    b380:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    b384:	ldr	x8, [x8, #3936]
    b388:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    b38c:	add	x1, x1, #0x131
    b390:	ldr	x0, [x8]
    b394:	bl	6640 <PyErr_SetString@plt>
    b398:	b	b450 <PyInit__decimal@@Base+0x48ec>
    b39c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    b3a0:	ldr	x0, [x21, #1408]
    b3a4:	sub	x2, x29, #0x8
    b3a8:	mov	x1, xzr
    b3ac:	bl	6730 <PyContextVar_Get@plt>
    b3b0:	tbnz	w0, #31, b4e8 <PyInit__decimal@@Base+0x4984>
    b3b4:	ldur	x20, [x29, #-8]
    b3b8:	cbz	x20, b46c <PyInit__decimal@@Base+0x4908>
    b3bc:	str	x20, [sp, #16]
    b3c0:	ldr	x8, [x20]
    b3c4:	subs	x8, x8, #0x1
    b3c8:	str	x8, [x20]
    b3cc:	b.ne	b3d8 <PyInit__decimal@@Base+0x4874>  // b.any
    b3d0:	mov	x0, x20
    b3d4:	bl	65c0 <_Py_Dealloc@plt>
    b3d8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b3dc:	add	x0, x0, #0x320
    b3e0:	bl	6940 <_PyObject_New@plt>
    b3e4:	mov	x20, x0
    b3e8:	cbz	x0, b454 <PyInit__decimal@@Base+0x48f0>
    b3ec:	mov	w8, #0x30                  	// #48
    b3f0:	mov	x0, x20
    b3f4:	strb	w8, [x0, #24]!
    b3f8:	mov	x9, #0xffffffffffffffff    	// #-1
    b3fc:	mov	w10, #0x4                   	// #4
    b400:	add	x8, x0, #0x30
    b404:	stur	x9, [x0, #-8]
    b408:	stp	xzr, xzr, [x0, #8]
    b40c:	stp	xzr, x10, [x0, #24]
    b410:	str	x8, [x0, #40]
    b414:	ldr	x8, [sp, #16]
    b418:	add	x1, x19, #0x18
    b41c:	add	x3, sp, #0xc
    b420:	add	x2, x8, #0x10
    b424:	bl	29e98 <PyInit__decimal@@Base+0x23334>
    b428:	ldr	x0, [sp, #16]
    b42c:	ldr	w1, [sp, #12]
    b430:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    b434:	cbz	w0, b454 <PyInit__decimal@@Base+0x48f0>
    b438:	ldr	x8, [x20]
    b43c:	subs	x8, x8, #0x1
    b440:	str	x8, [x20]
    b444:	b.ne	b450 <PyInit__decimal@@Base+0x48ec>  // b.any
    b448:	mov	x0, x20
    b44c:	bl	65c0 <_Py_Dealloc@plt>
    b450:	mov	x20, xzr
    b454:	mov	x0, x20
    b458:	ldp	x20, x19, [sp, #64]
    b45c:	ldp	x22, x21, [sp, #48]
    b460:	ldp	x29, x30, [sp, #32]
    b464:	add	sp, sp, #0x50
    b468:	ret
    b46c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    b470:	ldr	x22, [x8, #1504]
    b474:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b478:	add	x0, x0, #0x4c0
    b47c:	mov	x1, xzr
    b480:	bl	6830 <PyObject_CallObject@plt>
    b484:	cbz	x0, b4e8 <PyInit__decimal@@Base+0x4984>
    b488:	ldp	q1, q0, [x22, #32]
    b48c:	ldr	q2, [x22, #16]
    b490:	mov	x20, x0
    b494:	mov	x1, x20
    b498:	stp	q1, q0, [x0, #32]
    b49c:	str	q2, [x0, #16]
    b4a0:	ldr	w8, [x22, #80]
    b4a4:	stp	wzr, wzr, [x0, #44]
    b4a8:	str	w8, [x0, #80]
    b4ac:	ldr	x0, [x21, #1408]
    b4b0:	bl	6670 <PyContextVar_Set@plt>
    b4b4:	cbz	x0, b4d0 <PyInit__decimal@@Base+0x496c>
    b4b8:	ldr	x8, [x0]
    b4bc:	subs	x8, x8, #0x1
    b4c0:	str	x8, [x0]
    b4c4:	b.ne	b3bc <PyInit__decimal@@Base+0x4858>  // b.any
    b4c8:	bl	65c0 <_Py_Dealloc@plt>
    b4cc:	b	b3bc <PyInit__decimal@@Base+0x4858>
    b4d0:	ldr	x8, [x20]
    b4d4:	subs	x8, x8, #0x1
    b4d8:	str	x8, [x20]
    b4dc:	b.ne	b4e8 <PyInit__decimal@@Base+0x4984>  // b.any
    b4e0:	mov	x0, x20
    b4e4:	bl	65c0 <_Py_Dealloc@plt>
    b4e8:	mov	x20, xzr
    b4ec:	str	xzr, [sp, #16]
    b4f0:	b	b454 <PyInit__decimal@@Base+0x48f0>
    b4f4:	sub	sp, sp, #0x50
    b4f8:	stp	x29, x30, [sp, #32]
    b4fc:	stp	x22, x21, [sp, #48]
    b500:	stp	x20, x19, [sp, #64]
    b504:	add	x29, sp, #0x20
    b508:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    b50c:	ldr	x20, [x20, #4008]
    b510:	mov	x8, x2
    b514:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    b518:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    b51c:	mov	x19, x0
    b520:	add	x2, x2, #0x27c
    b524:	add	x3, x3, #0x5e0
    b528:	add	x4, sp, #0x10
    b52c:	mov	x0, x1
    b530:	mov	x1, x8
    b534:	str	x20, [sp, #16]
    b538:	str	wzr, [sp, #12]
    b53c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    b540:	cbz	w0, b644 <PyInit__decimal@@Base+0x4ae0>
    b544:	ldr	x8, [sp, #16]
    b548:	cmp	x8, x20
    b54c:	b.eq	b590 <PyInit__decimal@@Base+0x4a2c>  // b.none
    b550:	ldr	x0, [x8, #8]
    b554:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    b558:	add	x8, x8, #0x4c0
    b55c:	cmp	x0, x8
    b560:	b.eq	b5cc <PyInit__decimal@@Base+0x4a68>  // b.none
    b564:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    b568:	add	x1, x1, #0x4c0
    b56c:	bl	69b0 <PyType_IsSubtype@plt>
    b570:	cbnz	w0, b5cc <PyInit__decimal@@Base+0x4a68>
    b574:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    b578:	ldr	x8, [x8, #3936]
    b57c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    b580:	add	x1, x1, #0x131
    b584:	ldr	x0, [x8]
    b588:	bl	6640 <PyErr_SetString@plt>
    b58c:	b	b644 <PyInit__decimal@@Base+0x4ae0>
    b590:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    b594:	ldr	x0, [x21, #1408]
    b598:	sub	x2, x29, #0x8
    b59c:	mov	x1, xzr
    b5a0:	bl	6730 <PyContextVar_Get@plt>
    b5a4:	tbnz	w0, #31, b6dc <PyInit__decimal@@Base+0x4b78>
    b5a8:	ldur	x20, [x29, #-8]
    b5ac:	cbz	x20, b660 <PyInit__decimal@@Base+0x4afc>
    b5b0:	str	x20, [sp, #16]
    b5b4:	ldr	x8, [x20]
    b5b8:	subs	x8, x8, #0x1
    b5bc:	str	x8, [x20]
    b5c0:	b.ne	b5cc <PyInit__decimal@@Base+0x4a68>  // b.any
    b5c4:	mov	x0, x20
    b5c8:	bl	65c0 <_Py_Dealloc@plt>
    b5cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b5d0:	add	x0, x0, #0x320
    b5d4:	bl	6940 <_PyObject_New@plt>
    b5d8:	mov	x20, x0
    b5dc:	cbz	x0, b648 <PyInit__decimal@@Base+0x4ae4>
    b5e0:	mov	w8, #0x30                  	// #48
    b5e4:	mov	x0, x20
    b5e8:	strb	w8, [x0, #24]!
    b5ec:	mov	x9, #0xffffffffffffffff    	// #-1
    b5f0:	mov	w10, #0x4                   	// #4
    b5f4:	add	x8, x0, #0x30
    b5f8:	stur	x9, [x0, #-8]
    b5fc:	stp	xzr, xzr, [x0, #8]
    b600:	stp	xzr, x10, [x0, #24]
    b604:	str	x8, [x0, #40]
    b608:	ldr	x8, [sp, #16]
    b60c:	add	x1, x19, #0x18
    b610:	add	x3, sp, #0xc
    b614:	add	x2, x8, #0x10
    b618:	bl	2a00c <PyInit__decimal@@Base+0x234a8>
    b61c:	ldr	x0, [sp, #16]
    b620:	ldr	w1, [sp, #12]
    b624:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    b628:	cbz	w0, b648 <PyInit__decimal@@Base+0x4ae4>
    b62c:	ldr	x8, [x20]
    b630:	subs	x8, x8, #0x1
    b634:	str	x8, [x20]
    b638:	b.ne	b644 <PyInit__decimal@@Base+0x4ae0>  // b.any
    b63c:	mov	x0, x20
    b640:	bl	65c0 <_Py_Dealloc@plt>
    b644:	mov	x20, xzr
    b648:	mov	x0, x20
    b64c:	ldp	x20, x19, [sp, #64]
    b650:	ldp	x22, x21, [sp, #48]
    b654:	ldp	x29, x30, [sp, #32]
    b658:	add	sp, sp, #0x50
    b65c:	ret
    b660:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    b664:	ldr	x22, [x8, #1504]
    b668:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b66c:	add	x0, x0, #0x4c0
    b670:	mov	x1, xzr
    b674:	bl	6830 <PyObject_CallObject@plt>
    b678:	cbz	x0, b6dc <PyInit__decimal@@Base+0x4b78>
    b67c:	ldp	q1, q0, [x22, #32]
    b680:	ldr	q2, [x22, #16]
    b684:	mov	x20, x0
    b688:	mov	x1, x20
    b68c:	stp	q1, q0, [x0, #32]
    b690:	str	q2, [x0, #16]
    b694:	ldr	w8, [x22, #80]
    b698:	stp	wzr, wzr, [x0, #44]
    b69c:	str	w8, [x0, #80]
    b6a0:	ldr	x0, [x21, #1408]
    b6a4:	bl	6670 <PyContextVar_Set@plt>
    b6a8:	cbz	x0, b6c4 <PyInit__decimal@@Base+0x4b60>
    b6ac:	ldr	x8, [x0]
    b6b0:	subs	x8, x8, #0x1
    b6b4:	str	x8, [x0]
    b6b8:	b.ne	b5b0 <PyInit__decimal@@Base+0x4a4c>  // b.any
    b6bc:	bl	65c0 <_Py_Dealloc@plt>
    b6c0:	b	b5b0 <PyInit__decimal@@Base+0x4a4c>
    b6c4:	ldr	x8, [x20]
    b6c8:	subs	x8, x8, #0x1
    b6cc:	str	x8, [x20]
    b6d0:	b.ne	b6dc <PyInit__decimal@@Base+0x4b78>  // b.any
    b6d4:	mov	x0, x20
    b6d8:	bl	65c0 <_Py_Dealloc@plt>
    b6dc:	mov	x20, xzr
    b6e0:	str	xzr, [sp, #16]
    b6e4:	b	b648 <PyInit__decimal@@Base+0x4ae4>
    b6e8:	sub	sp, sp, #0x50
    b6ec:	stp	x29, x30, [sp, #32]
    b6f0:	stp	x22, x21, [sp, #48]
    b6f4:	stp	x20, x19, [sp, #64]
    b6f8:	add	x29, sp, #0x20
    b6fc:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    b700:	ldr	x20, [x20, #4008]
    b704:	mov	x8, x2
    b708:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    b70c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    b710:	mov	x19, x0
    b714:	add	x2, x2, #0x27c
    b718:	add	x3, x3, #0x5f0
    b71c:	add	x4, sp, #0x10
    b720:	mov	x0, x1
    b724:	mov	x1, x8
    b728:	str	x20, [sp, #16]
    b72c:	str	wzr, [sp, #12]
    b730:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    b734:	cbz	w0, b838 <PyInit__decimal@@Base+0x4cd4>
    b738:	ldr	x8, [sp, #16]
    b73c:	cmp	x8, x20
    b740:	b.eq	b784 <PyInit__decimal@@Base+0x4c20>  // b.none
    b744:	ldr	x0, [x8, #8]
    b748:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    b74c:	add	x8, x8, #0x4c0
    b750:	cmp	x0, x8
    b754:	b.eq	b7c0 <PyInit__decimal@@Base+0x4c5c>  // b.none
    b758:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    b75c:	add	x1, x1, #0x4c0
    b760:	bl	69b0 <PyType_IsSubtype@plt>
    b764:	cbnz	w0, b7c0 <PyInit__decimal@@Base+0x4c5c>
    b768:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    b76c:	ldr	x8, [x8, #3936]
    b770:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    b774:	add	x1, x1, #0x131
    b778:	ldr	x0, [x8]
    b77c:	bl	6640 <PyErr_SetString@plt>
    b780:	b	b838 <PyInit__decimal@@Base+0x4cd4>
    b784:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    b788:	ldr	x0, [x21, #1408]
    b78c:	sub	x2, x29, #0x8
    b790:	mov	x1, xzr
    b794:	bl	6730 <PyContextVar_Get@plt>
    b798:	tbnz	w0, #31, b8d0 <PyInit__decimal@@Base+0x4d6c>
    b79c:	ldur	x20, [x29, #-8]
    b7a0:	cbz	x20, b854 <PyInit__decimal@@Base+0x4cf0>
    b7a4:	str	x20, [sp, #16]
    b7a8:	ldr	x8, [x20]
    b7ac:	subs	x8, x8, #0x1
    b7b0:	str	x8, [x20]
    b7b4:	b.ne	b7c0 <PyInit__decimal@@Base+0x4c5c>  // b.any
    b7b8:	mov	x0, x20
    b7bc:	bl	65c0 <_Py_Dealloc@plt>
    b7c0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b7c4:	add	x0, x0, #0x320
    b7c8:	bl	6940 <_PyObject_New@plt>
    b7cc:	mov	x20, x0
    b7d0:	cbz	x0, b83c <PyInit__decimal@@Base+0x4cd8>
    b7d4:	mov	w8, #0x30                  	// #48
    b7d8:	mov	x0, x20
    b7dc:	strb	w8, [x0, #24]!
    b7e0:	mov	x9, #0xffffffffffffffff    	// #-1
    b7e4:	mov	w10, #0x4                   	// #4
    b7e8:	add	x8, x0, #0x30
    b7ec:	stur	x9, [x0, #-8]
    b7f0:	stp	xzr, xzr, [x0, #8]
    b7f4:	stp	xzr, x10, [x0, #24]
    b7f8:	str	x8, [x0, #40]
    b7fc:	ldr	x8, [sp, #16]
    b800:	add	x1, x19, #0x18
    b804:	add	x3, sp, #0xc
    b808:	add	x2, x8, #0x10
    b80c:	bl	2bdf0 <PyInit__decimal@@Base+0x2528c>
    b810:	ldr	x0, [sp, #16]
    b814:	ldr	w1, [sp, #12]
    b818:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    b81c:	cbz	w0, b83c <PyInit__decimal@@Base+0x4cd8>
    b820:	ldr	x8, [x20]
    b824:	subs	x8, x8, #0x1
    b828:	str	x8, [x20]
    b82c:	b.ne	b838 <PyInit__decimal@@Base+0x4cd4>  // b.any
    b830:	mov	x0, x20
    b834:	bl	65c0 <_Py_Dealloc@plt>
    b838:	mov	x20, xzr
    b83c:	mov	x0, x20
    b840:	ldp	x20, x19, [sp, #64]
    b844:	ldp	x22, x21, [sp, #48]
    b848:	ldp	x29, x30, [sp, #32]
    b84c:	add	sp, sp, #0x50
    b850:	ret
    b854:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    b858:	ldr	x22, [x8, #1504]
    b85c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b860:	add	x0, x0, #0x4c0
    b864:	mov	x1, xzr
    b868:	bl	6830 <PyObject_CallObject@plt>
    b86c:	cbz	x0, b8d0 <PyInit__decimal@@Base+0x4d6c>
    b870:	ldp	q1, q0, [x22, #32]
    b874:	ldr	q2, [x22, #16]
    b878:	mov	x20, x0
    b87c:	mov	x1, x20
    b880:	stp	q1, q0, [x0, #32]
    b884:	str	q2, [x0, #16]
    b888:	ldr	w8, [x22, #80]
    b88c:	stp	wzr, wzr, [x0, #44]
    b890:	str	w8, [x0, #80]
    b894:	ldr	x0, [x21, #1408]
    b898:	bl	6670 <PyContextVar_Set@plt>
    b89c:	cbz	x0, b8b8 <PyInit__decimal@@Base+0x4d54>
    b8a0:	ldr	x8, [x0]
    b8a4:	subs	x8, x8, #0x1
    b8a8:	str	x8, [x0]
    b8ac:	b.ne	b7a4 <PyInit__decimal@@Base+0x4c40>  // b.any
    b8b0:	bl	65c0 <_Py_Dealloc@plt>
    b8b4:	b	b7a4 <PyInit__decimal@@Base+0x4c40>
    b8b8:	ldr	x8, [x20]
    b8bc:	subs	x8, x8, #0x1
    b8c0:	str	x8, [x20]
    b8c4:	b.ne	b8d0 <PyInit__decimal@@Base+0x4d6c>  // b.any
    b8c8:	mov	x0, x20
    b8cc:	bl	65c0 <_Py_Dealloc@plt>
    b8d0:	mov	x20, xzr
    b8d4:	str	xzr, [sp, #16]
    b8d8:	b	b83c <PyInit__decimal@@Base+0x4cd8>
    b8dc:	sub	sp, sp, #0x80
    b8e0:	stp	x29, x30, [sp, #64]
    b8e4:	str	x23, [sp, #80]
    b8e8:	stp	x22, x21, [sp, #96]
    b8ec:	stp	x20, x19, [sp, #112]
    b8f0:	add	x29, sp, #0x40
    b8f4:	adrp	x21, 49000 <PyInit__decimal@@Base+0x4249c>
    b8f8:	ldr	x21, [x21, #4008]
    b8fc:	mov	x8, x2
    b900:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    b904:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    b908:	mov	x19, x0
    b90c:	add	x2, x2, #0x24c
    b910:	add	x3, x3, #0x600
    b914:	add	x4, x29, #0x18
    b918:	sub	x5, x29, #0x8
    b91c:	mov	x0, x1
    b920:	mov	x1, x8
    b924:	str	x21, [x29, #24]
    b928:	stur	x21, [x29, #-8]
    b92c:	stur	wzr, [x29, #-12]
    b930:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    b934:	cbz	w0, ba80 <PyInit__decimal@@Base+0x4f1c>
    b938:	ldur	x8, [x29, #-8]
    b93c:	cmp	x8, x21
    b940:	b.eq	b97c <PyInit__decimal@@Base+0x4e18>  // b.none
    b944:	ldr	x0, [x8, #8]
    b948:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    b94c:	add	x8, x8, #0x4c0
    b950:	cmp	x0, x8
    b954:	b.eq	b9b8 <PyInit__decimal@@Base+0x4e54>  // b.none
    b958:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    b95c:	add	x1, x1, #0x4c0
    b960:	bl	69b0 <PyType_IsSubtype@plt>
    b964:	cbnz	w0, b9b8 <PyInit__decimal@@Base+0x4e54>
    b968:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    b96c:	ldr	x8, [x8, #3936]
    b970:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    b974:	add	x1, x1, #0x131
    b978:	b	ba78 <PyInit__decimal@@Base+0x4f14>
    b97c:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    b980:	ldr	x0, [x22, #1408]
    b984:	mov	x2, sp
    b988:	mov	x1, xzr
    b98c:	bl	6730 <PyContextVar_Get@plt>
    b990:	tbnz	w0, #31, bb1c <PyInit__decimal@@Base+0x4fb8>
    b994:	ldr	x20, [sp]
    b998:	cbz	x20, baa0 <PyInit__decimal@@Base+0x4f3c>
    b99c:	stur	x20, [x29, #-8]
    b9a0:	ldr	x8, [x20]
    b9a4:	subs	x8, x8, #0x1
    b9a8:	str	x8, [x20]
    b9ac:	b.ne	b9b8 <PyInit__decimal@@Base+0x4e54>  // b.any
    b9b0:	mov	x0, x20
    b9b4:	bl	65c0 <_Py_Dealloc@plt>
    b9b8:	ldur	x8, [x29, #-8]
    b9bc:	ldr	x0, [x29, #24]
    b9c0:	ldp	q0, q1, [x8, #16]
    b9c4:	ldr	q2, [x8, #48]
    b9c8:	cmp	x0, x21
    b9cc:	stp	q0, q1, [sp]
    b9d0:	str	q2, [sp, #32]
    b9d4:	b.eq	b9f0 <PyInit__decimal@@Base+0x4e8c>  // b.none
    b9d8:	bl	124ac <PyInit__decimal@@Base+0xb948>
    b9dc:	tbnz	w0, #31, ba80 <PyInit__decimal@@Base+0x4f1c>
    b9e0:	mov	w1, w0
    b9e4:	mov	x0, sp
    b9e8:	bl	1c0ac <PyInit__decimal@@Base+0x15548>
    b9ec:	cbz	w0, ba68 <PyInit__decimal@@Base+0x4f04>
    b9f0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    b9f4:	add	x0, x0, #0x320
    b9f8:	bl	6940 <_PyObject_New@plt>
    b9fc:	mov	x20, x0
    ba00:	cbz	x0, ba84 <PyInit__decimal@@Base+0x4f20>
    ba04:	mov	w8, #0x30                  	// #48
    ba08:	mov	x0, x20
    ba0c:	strb	w8, [x0, #24]!
    ba10:	mov	x9, #0xffffffffffffffff    	// #-1
    ba14:	mov	w10, #0x4                   	// #4
    ba18:	add	x8, x0, #0x30
    ba1c:	add	x1, x19, #0x18
    ba20:	mov	x2, sp
    ba24:	sub	x3, x29, #0xc
    ba28:	stur	x9, [x0, #-8]
    ba2c:	stp	xzr, xzr, [x0, #8]
    ba30:	stp	xzr, x10, [x0, #24]
    ba34:	str	x8, [x0, #40]
    ba38:	bl	2b794 <PyInit__decimal@@Base+0x24c30>
    ba3c:	ldur	x0, [x29, #-8]
    ba40:	ldur	w1, [x29, #-12]
    ba44:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    ba48:	cbz	w0, ba84 <PyInit__decimal@@Base+0x4f20>
    ba4c:	ldr	x8, [x20]
    ba50:	subs	x8, x8, #0x1
    ba54:	str	x8, [x20]
    ba58:	b.ne	ba80 <PyInit__decimal@@Base+0x4f1c>  // b.any
    ba5c:	mov	x0, x20
    ba60:	bl	65c0 <_Py_Dealloc@plt>
    ba64:	b	ba80 <PyInit__decimal@@Base+0x4f1c>
    ba68:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ba6c:	ldr	x8, [x8, #3920]
    ba70:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    ba74:	add	x1, x1, #0x15e
    ba78:	ldr	x0, [x8]
    ba7c:	bl	6640 <PyErr_SetString@plt>
    ba80:	mov	x20, xzr
    ba84:	mov	x0, x20
    ba88:	ldp	x20, x19, [sp, #112]
    ba8c:	ldp	x22, x21, [sp, #96]
    ba90:	ldr	x23, [sp, #80]
    ba94:	ldp	x29, x30, [sp, #64]
    ba98:	add	sp, sp, #0x80
    ba9c:	ret
    baa0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    baa4:	ldr	x23, [x8, #1504]
    baa8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    baac:	add	x0, x0, #0x4c0
    bab0:	mov	x1, xzr
    bab4:	bl	6830 <PyObject_CallObject@plt>
    bab8:	cbz	x0, bb1c <PyInit__decimal@@Base+0x4fb8>
    babc:	ldp	q1, q0, [x23, #32]
    bac0:	ldr	q2, [x23, #16]
    bac4:	mov	x20, x0
    bac8:	mov	x1, x20
    bacc:	stp	q1, q0, [x0, #32]
    bad0:	str	q2, [x0, #16]
    bad4:	ldr	w8, [x23, #80]
    bad8:	stp	wzr, wzr, [x0, #44]
    badc:	str	w8, [x0, #80]
    bae0:	ldr	x0, [x22, #1408]
    bae4:	bl	6670 <PyContextVar_Set@plt>
    bae8:	cbz	x0, bb04 <PyInit__decimal@@Base+0x4fa0>
    baec:	ldr	x8, [x0]
    baf0:	subs	x8, x8, #0x1
    baf4:	str	x8, [x0]
    baf8:	b.ne	b99c <PyInit__decimal@@Base+0x4e38>  // b.any
    bafc:	bl	65c0 <_Py_Dealloc@plt>
    bb00:	b	b99c <PyInit__decimal@@Base+0x4e38>
    bb04:	ldr	x8, [x20]
    bb08:	subs	x8, x8, #0x1
    bb0c:	str	x8, [x20]
    bb10:	b.ne	bb1c <PyInit__decimal@@Base+0x4fb8>  // b.any
    bb14:	mov	x0, x20
    bb18:	bl	65c0 <_Py_Dealloc@plt>
    bb1c:	mov	x20, xzr
    bb20:	stur	xzr, [x29, #-8]
    bb24:	b	ba84 <PyInit__decimal@@Base+0x4f20>
    bb28:	sub	sp, sp, #0x80
    bb2c:	stp	x29, x30, [sp, #64]
    bb30:	str	x23, [sp, #80]
    bb34:	stp	x22, x21, [sp, #96]
    bb38:	stp	x20, x19, [sp, #112]
    bb3c:	add	x29, sp, #0x40
    bb40:	adrp	x21, 49000 <PyInit__decimal@@Base+0x4249c>
    bb44:	ldr	x21, [x21, #4008]
    bb48:	mov	x8, x2
    bb4c:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    bb50:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    bb54:	mov	x19, x0
    bb58:	add	x2, x2, #0x24c
    bb5c:	add	x3, x3, #0x618
    bb60:	add	x4, x29, #0x18
    bb64:	sub	x5, x29, #0x8
    bb68:	mov	x0, x1
    bb6c:	mov	x1, x8
    bb70:	str	x21, [x29, #24]
    bb74:	stur	x21, [x29, #-8]
    bb78:	stur	wzr, [x29, #-12]
    bb7c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    bb80:	cbz	w0, bccc <PyInit__decimal@@Base+0x5168>
    bb84:	ldur	x8, [x29, #-8]
    bb88:	cmp	x8, x21
    bb8c:	b.eq	bbc8 <PyInit__decimal@@Base+0x5064>  // b.none
    bb90:	ldr	x0, [x8, #8]
    bb94:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    bb98:	add	x8, x8, #0x4c0
    bb9c:	cmp	x0, x8
    bba0:	b.eq	bc04 <PyInit__decimal@@Base+0x50a0>  // b.none
    bba4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    bba8:	add	x1, x1, #0x4c0
    bbac:	bl	69b0 <PyType_IsSubtype@plt>
    bbb0:	cbnz	w0, bc04 <PyInit__decimal@@Base+0x50a0>
    bbb4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    bbb8:	ldr	x8, [x8, #3936]
    bbbc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    bbc0:	add	x1, x1, #0x131
    bbc4:	b	bcc4 <PyInit__decimal@@Base+0x5160>
    bbc8:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    bbcc:	ldr	x0, [x22, #1408]
    bbd0:	mov	x2, sp
    bbd4:	mov	x1, xzr
    bbd8:	bl	6730 <PyContextVar_Get@plt>
    bbdc:	tbnz	w0, #31, bd68 <PyInit__decimal@@Base+0x5204>
    bbe0:	ldr	x20, [sp]
    bbe4:	cbz	x20, bcec <PyInit__decimal@@Base+0x5188>
    bbe8:	stur	x20, [x29, #-8]
    bbec:	ldr	x8, [x20]
    bbf0:	subs	x8, x8, #0x1
    bbf4:	str	x8, [x20]
    bbf8:	b.ne	bc04 <PyInit__decimal@@Base+0x50a0>  // b.any
    bbfc:	mov	x0, x20
    bc00:	bl	65c0 <_Py_Dealloc@plt>
    bc04:	ldur	x8, [x29, #-8]
    bc08:	ldr	x0, [x29, #24]
    bc0c:	ldp	q0, q1, [x8, #16]
    bc10:	ldr	q2, [x8, #48]
    bc14:	cmp	x0, x21
    bc18:	stp	q0, q1, [sp]
    bc1c:	str	q2, [sp, #32]
    bc20:	b.eq	bc3c <PyInit__decimal@@Base+0x50d8>  // b.none
    bc24:	bl	124ac <PyInit__decimal@@Base+0xb948>
    bc28:	tbnz	w0, #31, bccc <PyInit__decimal@@Base+0x5168>
    bc2c:	mov	w1, w0
    bc30:	mov	x0, sp
    bc34:	bl	1c0ac <PyInit__decimal@@Base+0x15548>
    bc38:	cbz	w0, bcb4 <PyInit__decimal@@Base+0x5150>
    bc3c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    bc40:	add	x0, x0, #0x320
    bc44:	bl	6940 <_PyObject_New@plt>
    bc48:	mov	x20, x0
    bc4c:	cbz	x0, bcd0 <PyInit__decimal@@Base+0x516c>
    bc50:	mov	w8, #0x30                  	// #48
    bc54:	mov	x0, x20
    bc58:	strb	w8, [x0, #24]!
    bc5c:	mov	x9, #0xffffffffffffffff    	// #-1
    bc60:	mov	w10, #0x4                   	// #4
    bc64:	add	x8, x0, #0x30
    bc68:	add	x1, x19, #0x18
    bc6c:	mov	x2, sp
    bc70:	sub	x3, x29, #0xc
    bc74:	stur	x9, [x0, #-8]
    bc78:	stp	xzr, xzr, [x0, #8]
    bc7c:	stp	xzr, x10, [x0, #24]
    bc80:	str	x8, [x0, #40]
    bc84:	bl	2c7b4 <PyInit__decimal@@Base+0x25c50>
    bc88:	ldur	x0, [x29, #-8]
    bc8c:	ldur	w1, [x29, #-12]
    bc90:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    bc94:	cbz	w0, bcd0 <PyInit__decimal@@Base+0x516c>
    bc98:	ldr	x8, [x20]
    bc9c:	subs	x8, x8, #0x1
    bca0:	str	x8, [x20]
    bca4:	b.ne	bccc <PyInit__decimal@@Base+0x5168>  // b.any
    bca8:	mov	x0, x20
    bcac:	bl	65c0 <_Py_Dealloc@plt>
    bcb0:	b	bccc <PyInit__decimal@@Base+0x5168>
    bcb4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    bcb8:	ldr	x8, [x8, #3920]
    bcbc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    bcc0:	add	x1, x1, #0x21d
    bcc4:	ldr	x0, [x8]
    bcc8:	bl	6640 <PyErr_SetString@plt>
    bccc:	mov	x20, xzr
    bcd0:	mov	x0, x20
    bcd4:	ldp	x20, x19, [sp, #112]
    bcd8:	ldp	x22, x21, [sp, #96]
    bcdc:	ldr	x23, [sp, #80]
    bce0:	ldp	x29, x30, [sp, #64]
    bce4:	add	sp, sp, #0x80
    bce8:	ret
    bcec:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    bcf0:	ldr	x23, [x8, #1504]
    bcf4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    bcf8:	add	x0, x0, #0x4c0
    bcfc:	mov	x1, xzr
    bd00:	bl	6830 <PyObject_CallObject@plt>
    bd04:	cbz	x0, bd68 <PyInit__decimal@@Base+0x5204>
    bd08:	ldp	q1, q0, [x23, #32]
    bd0c:	ldr	q2, [x23, #16]
    bd10:	mov	x20, x0
    bd14:	mov	x1, x20
    bd18:	stp	q1, q0, [x0, #32]
    bd1c:	str	q2, [x0, #16]
    bd20:	ldr	w8, [x23, #80]
    bd24:	stp	wzr, wzr, [x0, #44]
    bd28:	str	w8, [x0, #80]
    bd2c:	ldr	x0, [x22, #1408]
    bd30:	bl	6670 <PyContextVar_Set@plt>
    bd34:	cbz	x0, bd50 <PyInit__decimal@@Base+0x51ec>
    bd38:	ldr	x8, [x0]
    bd3c:	subs	x8, x8, #0x1
    bd40:	str	x8, [x0]
    bd44:	b.ne	bbe8 <PyInit__decimal@@Base+0x5084>  // b.any
    bd48:	bl	65c0 <_Py_Dealloc@plt>
    bd4c:	b	bbe8 <PyInit__decimal@@Base+0x5084>
    bd50:	ldr	x8, [x20]
    bd54:	subs	x8, x8, #0x1
    bd58:	str	x8, [x20]
    bd5c:	b.ne	bd68 <PyInit__decimal@@Base+0x5204>  // b.any
    bd60:	mov	x0, x20
    bd64:	bl	65c0 <_Py_Dealloc@plt>
    bd68:	mov	x20, xzr
    bd6c:	stur	xzr, [x29, #-8]
    bd70:	b	bcd0 <PyInit__decimal@@Base+0x516c>
    bd74:	sub	sp, sp, #0x50
    bd78:	stp	x29, x30, [sp, #32]
    bd7c:	stp	x22, x21, [sp, #48]
    bd80:	stp	x20, x19, [sp, #64]
    bd84:	add	x29, sp, #0x20
    bd88:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    bd8c:	ldr	x20, [x20, #4008]
    bd90:	mov	x8, x2
    bd94:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    bd98:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    bd9c:	mov	x19, x0
    bda0:	add	x2, x2, #0x27c
    bda4:	add	x3, x3, #0x630
    bda8:	add	x4, sp, #0x10
    bdac:	mov	x0, x1
    bdb0:	mov	x1, x8
    bdb4:	str	x20, [sp, #16]
    bdb8:	str	wzr, [sp, #12]
    bdbc:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    bdc0:	cbz	w0, bec4 <PyInit__decimal@@Base+0x5360>
    bdc4:	ldr	x8, [sp, #16]
    bdc8:	cmp	x8, x20
    bdcc:	b.eq	be10 <PyInit__decimal@@Base+0x52ac>  // b.none
    bdd0:	ldr	x0, [x8, #8]
    bdd4:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    bdd8:	add	x8, x8, #0x4c0
    bddc:	cmp	x0, x8
    bde0:	b.eq	be4c <PyInit__decimal@@Base+0x52e8>  // b.none
    bde4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    bde8:	add	x1, x1, #0x4c0
    bdec:	bl	69b0 <PyType_IsSubtype@plt>
    bdf0:	cbnz	w0, be4c <PyInit__decimal@@Base+0x52e8>
    bdf4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    bdf8:	ldr	x8, [x8, #3936]
    bdfc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    be00:	add	x1, x1, #0x131
    be04:	ldr	x0, [x8]
    be08:	bl	6640 <PyErr_SetString@plt>
    be0c:	b	bec4 <PyInit__decimal@@Base+0x5360>
    be10:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    be14:	ldr	x0, [x21, #1408]
    be18:	sub	x2, x29, #0x8
    be1c:	mov	x1, xzr
    be20:	bl	6730 <PyContextVar_Get@plt>
    be24:	tbnz	w0, #31, bf5c <PyInit__decimal@@Base+0x53f8>
    be28:	ldur	x20, [x29, #-8]
    be2c:	cbz	x20, bee0 <PyInit__decimal@@Base+0x537c>
    be30:	str	x20, [sp, #16]
    be34:	ldr	x8, [x20]
    be38:	subs	x8, x8, #0x1
    be3c:	str	x8, [x20]
    be40:	b.ne	be4c <PyInit__decimal@@Base+0x52e8>  // b.any
    be44:	mov	x0, x20
    be48:	bl	65c0 <_Py_Dealloc@plt>
    be4c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    be50:	add	x0, x0, #0x320
    be54:	bl	6940 <_PyObject_New@plt>
    be58:	mov	x20, x0
    be5c:	cbz	x0, bec8 <PyInit__decimal@@Base+0x5364>
    be60:	mov	w8, #0x30                  	// #48
    be64:	mov	x0, x20
    be68:	strb	w8, [x0, #24]!
    be6c:	mov	x9, #0xffffffffffffffff    	// #-1
    be70:	mov	w10, #0x4                   	// #4
    be74:	add	x8, x0, #0x30
    be78:	stur	x9, [x0, #-8]
    be7c:	stp	xzr, xzr, [x0, #8]
    be80:	stp	xzr, x10, [x0, #24]
    be84:	str	x8, [x0, #40]
    be88:	ldr	x8, [sp, #16]
    be8c:	add	x1, x19, #0x18
    be90:	add	x3, sp, #0xc
    be94:	add	x2, x8, #0x10
    be98:	bl	2d454 <PyInit__decimal@@Base+0x268f0>
    be9c:	ldr	x0, [sp, #16]
    bea0:	ldr	w1, [sp, #12]
    bea4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    bea8:	cbz	w0, bec8 <PyInit__decimal@@Base+0x5364>
    beac:	ldr	x8, [x20]
    beb0:	subs	x8, x8, #0x1
    beb4:	str	x8, [x20]
    beb8:	b.ne	bec4 <PyInit__decimal@@Base+0x5360>  // b.any
    bebc:	mov	x0, x20
    bec0:	bl	65c0 <_Py_Dealloc@plt>
    bec4:	mov	x20, xzr
    bec8:	mov	x0, x20
    becc:	ldp	x20, x19, [sp, #64]
    bed0:	ldp	x22, x21, [sp, #48]
    bed4:	ldp	x29, x30, [sp, #32]
    bed8:	add	sp, sp, #0x50
    bedc:	ret
    bee0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    bee4:	ldr	x22, [x8, #1504]
    bee8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    beec:	add	x0, x0, #0x4c0
    bef0:	mov	x1, xzr
    bef4:	bl	6830 <PyObject_CallObject@plt>
    bef8:	cbz	x0, bf5c <PyInit__decimal@@Base+0x53f8>
    befc:	ldp	q1, q0, [x22, #32]
    bf00:	ldr	q2, [x22, #16]
    bf04:	mov	x20, x0
    bf08:	mov	x1, x20
    bf0c:	stp	q1, q0, [x0, #32]
    bf10:	str	q2, [x0, #16]
    bf14:	ldr	w8, [x22, #80]
    bf18:	stp	wzr, wzr, [x0, #44]
    bf1c:	str	w8, [x0, #80]
    bf20:	ldr	x0, [x21, #1408]
    bf24:	bl	6670 <PyContextVar_Set@plt>
    bf28:	cbz	x0, bf44 <PyInit__decimal@@Base+0x53e0>
    bf2c:	ldr	x8, [x0]
    bf30:	subs	x8, x8, #0x1
    bf34:	str	x8, [x0]
    bf38:	b.ne	be30 <PyInit__decimal@@Base+0x52cc>  // b.any
    bf3c:	bl	65c0 <_Py_Dealloc@plt>
    bf40:	b	be30 <PyInit__decimal@@Base+0x52cc>
    bf44:	ldr	x8, [x20]
    bf48:	subs	x8, x8, #0x1
    bf4c:	str	x8, [x20]
    bf50:	b.ne	bf5c <PyInit__decimal@@Base+0x53f8>  // b.any
    bf54:	mov	x0, x20
    bf58:	bl	65c0 <_Py_Dealloc@plt>
    bf5c:	mov	x20, xzr
    bf60:	str	xzr, [sp, #16]
    bf64:	b	bec8 <PyInit__decimal@@Base+0x5364>
    bf68:	sub	sp, sp, #0x50
    bf6c:	stp	x29, x30, [sp, #32]
    bf70:	stp	x22, x21, [sp, #48]
    bf74:	stp	x20, x19, [sp, #64]
    bf78:	add	x29, sp, #0x20
    bf7c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    bf80:	ldr	x20, [x20, #4008]
    bf84:	mov	x8, x2
    bf88:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    bf8c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    bf90:	mov	x19, x0
    bf94:	add	x2, x2, #0x27b
    bf98:	add	x3, x3, #0x640
    bf9c:	add	x4, sp, #0x10
    bfa0:	add	x5, sp, #0x8
    bfa4:	mov	x0, x1
    bfa8:	mov	x1, x8
    bfac:	str	x20, [sp, #8]
    bfb0:	str	wzr, [sp, #4]
    bfb4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    bfb8:	cbz	w0, c290 <PyInit__decimal@@Base+0x572c>
    bfbc:	ldr	x8, [sp, #8]
    bfc0:	cmp	x8, x20
    bfc4:	b.eq	c008 <PyInit__decimal@@Base+0x54a4>  // b.none
    bfc8:	ldr	x0, [x8, #8]
    bfcc:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    bfd0:	add	x8, x8, #0x4c0
    bfd4:	cmp	x0, x8
    bfd8:	b.eq	c044 <PyInit__decimal@@Base+0x54e0>  // b.none
    bfdc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    bfe0:	add	x1, x1, #0x4c0
    bfe4:	bl	69b0 <PyType_IsSubtype@plt>
    bfe8:	cbnz	w0, c044 <PyInit__decimal@@Base+0x54e0>
    bfec:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    bff0:	ldr	x8, [x8, #3936]
    bff4:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    bff8:	add	x1, x1, #0x131
    bffc:	ldr	x0, [x8]
    c000:	bl	6640 <PyErr_SetString@plt>
    c004:	b	c290 <PyInit__decimal@@Base+0x572c>
    c008:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    c00c:	ldr	x0, [x21, #1408]
    c010:	sub	x2, x29, #0x8
    c014:	mov	x1, xzr
    c018:	bl	6730 <PyContextVar_Get@plt>
    c01c:	tbnz	w0, #31, c2c4 <PyInit__decimal@@Base+0x5760>
    c020:	ldur	x20, [x29, #-8]
    c024:	cbz	x20, c1d8 <PyInit__decimal@@Base+0x5674>
    c028:	str	x20, [sp, #8]
    c02c:	ldr	x8, [x20]
    c030:	subs	x8, x8, #0x1
    c034:	str	x8, [x20]
    c038:	b.ne	c044 <PyInit__decimal@@Base+0x54e0>  // b.any
    c03c:	mov	x0, x20
    c040:	bl	65c0 <_Py_Dealloc@plt>
    c044:	ldr	x0, [x19, #8]
    c048:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    c04c:	add	x21, x21, #0x320
    c050:	cmp	x0, x21
    c054:	b.eq	c06c <PyInit__decimal@@Base+0x5508>  // b.none
    c058:	ldr	x20, [sp, #8]
    c05c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c060:	add	x1, x1, #0x320
    c064:	bl	69b0 <PyType_IsSubtype@plt>
    c068:	cbz	w0, c180 <PyInit__decimal@@Base+0x561c>
    c06c:	ldr	x8, [x19]
    c070:	add	x8, x8, #0x1
    c074:	str	x8, [x19]
    c078:	ldr	x20, [sp, #16]
    c07c:	ldr	x0, [x20, #8]
    c080:	cmp	x0, x21
    c084:	b.eq	c09c <PyInit__decimal@@Base+0x5538>  // b.none
    c088:	ldr	x21, [sp, #8]
    c08c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c090:	add	x1, x1, #0x320
    c094:	bl	69b0 <PyType_IsSubtype@plt>
    c098:	cbz	w0, c1ac <PyInit__decimal@@Base+0x5648>
    c09c:	ldr	x8, [x20]
    c0a0:	add	x8, x8, #0x1
    c0a4:	str	x8, [x20]
    c0a8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c0ac:	add	x0, x0, #0x320
    c0b0:	bl	6940 <_PyObject_New@plt>
    c0b4:	cbz	x0, c150 <PyInit__decimal@@Base+0x55ec>
    c0b8:	mov	w8, #0x30                  	// #48
    c0bc:	mov	x21, x0
    c0c0:	strb	w8, [x0, #24]!
    c0c4:	mov	x9, #0xffffffffffffffff    	// #-1
    c0c8:	mov	w10, #0x4                   	// #4
    c0cc:	add	x8, x0, #0x30
    c0d0:	stur	x9, [x0, #-8]
    c0d4:	stp	xzr, xzr, [x0, #8]
    c0d8:	stp	xzr, x10, [x0, #24]
    c0dc:	str	x8, [x0, #40]
    c0e0:	ldr	x8, [sp, #8]
    c0e4:	add	x1, x19, #0x18
    c0e8:	add	x2, x20, #0x18
    c0ec:	add	x4, sp, #0x4
    c0f0:	add	x3, x8, #0x10
    c0f4:	bl	22270 <PyInit__decimal@@Base+0x1b70c>
    c0f8:	ldr	x8, [x19]
    c0fc:	subs	x8, x8, #0x1
    c100:	str	x8, [x19]
    c104:	b.ne	c110 <PyInit__decimal@@Base+0x55ac>  // b.any
    c108:	mov	x0, x19
    c10c:	bl	65c0 <_Py_Dealloc@plt>
    c110:	ldr	x8, [x20]
    c114:	subs	x8, x8, #0x1
    c118:	str	x8, [x20]
    c11c:	b.ne	c128 <PyInit__decimal@@Base+0x55c4>  // b.any
    c120:	mov	x0, x20
    c124:	bl	65c0 <_Py_Dealloc@plt>
    c128:	ldr	x0, [sp, #8]
    c12c:	ldr	w1, [sp, #4]
    c130:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    c134:	cbz	w0, c294 <PyInit__decimal@@Base+0x5730>
    c138:	ldr	x8, [x21]
    c13c:	subs	x8, x8, #0x1
    c140:	str	x8, [x21]
    c144:	b.ne	c290 <PyInit__decimal@@Base+0x572c>  // b.any
    c148:	mov	x0, x21
    c14c:	b	c28c <PyInit__decimal@@Base+0x5728>
    c150:	ldr	x8, [x19]
    c154:	subs	x8, x8, #0x1
    c158:	str	x8, [x19]
    c15c:	b.ne	c168 <PyInit__decimal@@Base+0x5604>  // b.any
    c160:	mov	x0, x19
    c164:	bl	65c0 <_Py_Dealloc@plt>
    c168:	ldr	x8, [x20]
    c16c:	subs	x8, x8, #0x1
    c170:	str	x8, [x20]
    c174:	b.ne	c290 <PyInit__decimal@@Base+0x572c>  // b.any
    c178:	mov	x0, x20
    c17c:	b	c28c <PyInit__decimal@@Base+0x5728>
    c180:	ldr	x8, [x19, #8]
    c184:	ldrb	w9, [x8, #171]
    c188:	tbnz	w9, #0, c23c <PyInit__decimal@@Base+0x56d8>
    c18c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c190:	ldr	x9, [x9, #3936]
    c194:	ldr	x2, [x8, #24]
    c198:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c19c:	add	x1, x1, #0xd63
    c1a0:	ldr	x0, [x9]
    c1a4:	bl	6a00 <PyErr_Format@plt>
    c1a8:	b	c290 <PyInit__decimal@@Base+0x572c>
    c1ac:	ldr	x8, [x20, #8]
    c1b0:	ldrb	w9, [x8, #171]
    c1b4:	tbnz	w9, #0, c25c <PyInit__decimal@@Base+0x56f8>
    c1b8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c1bc:	ldr	x9, [x9, #3936]
    c1c0:	ldr	x2, [x8, #24]
    c1c4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c1c8:	add	x1, x1, #0xd63
    c1cc:	ldr	x0, [x9]
    c1d0:	bl	6a00 <PyErr_Format@plt>
    c1d4:	b	c278 <PyInit__decimal@@Base+0x5714>
    c1d8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    c1dc:	ldr	x22, [x8, #1504]
    c1e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c1e4:	add	x0, x0, #0x4c0
    c1e8:	mov	x1, xzr
    c1ec:	bl	6830 <PyObject_CallObject@plt>
    c1f0:	cbz	x0, c2c4 <PyInit__decimal@@Base+0x5760>
    c1f4:	ldp	q1, q0, [x22, #32]
    c1f8:	ldr	q2, [x22, #16]
    c1fc:	mov	x20, x0
    c200:	mov	x1, x20
    c204:	stp	q1, q0, [x0, #32]
    c208:	str	q2, [x0, #16]
    c20c:	ldr	w8, [x22, #80]
    c210:	stp	wzr, wzr, [x0, #44]
    c214:	str	w8, [x0, #80]
    c218:	ldr	x0, [x21, #1408]
    c21c:	bl	6670 <PyContextVar_Set@plt>
    c220:	cbz	x0, c2ac <PyInit__decimal@@Base+0x5748>
    c224:	ldr	x8, [x0]
    c228:	subs	x8, x8, #0x1
    c22c:	str	x8, [x0]
    c230:	b.ne	c028 <PyInit__decimal@@Base+0x54c4>  // b.any
    c234:	bl	65c0 <_Py_Dealloc@plt>
    c238:	b	c028 <PyInit__decimal@@Base+0x54c4>
    c23c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c240:	add	x0, x0, #0x320
    c244:	mov	x1, x19
    c248:	mov	x2, x20
    c24c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c250:	mov	x19, x0
    c254:	cbnz	x0, c078 <PyInit__decimal@@Base+0x5514>
    c258:	b	c290 <PyInit__decimal@@Base+0x572c>
    c25c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c260:	add	x0, x0, #0x320
    c264:	mov	x1, x20
    c268:	mov	x2, x21
    c26c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c270:	mov	x20, x0
    c274:	cbnz	x0, c0a8 <PyInit__decimal@@Base+0x5544>
    c278:	ldr	x8, [x19]
    c27c:	subs	x8, x8, #0x1
    c280:	str	x8, [x19]
    c284:	b.ne	c290 <PyInit__decimal@@Base+0x572c>  // b.any
    c288:	mov	x0, x19
    c28c:	bl	65c0 <_Py_Dealloc@plt>
    c290:	mov	x21, xzr
    c294:	mov	x0, x21
    c298:	ldp	x20, x19, [sp, #64]
    c29c:	ldp	x22, x21, [sp, #48]
    c2a0:	ldp	x29, x30, [sp, #32]
    c2a4:	add	sp, sp, #0x50
    c2a8:	ret
    c2ac:	ldr	x8, [x20]
    c2b0:	subs	x8, x8, #0x1
    c2b4:	str	x8, [x20]
    c2b8:	b.ne	c2c4 <PyInit__decimal@@Base+0x5760>  // b.any
    c2bc:	mov	x0, x20
    c2c0:	bl	65c0 <_Py_Dealloc@plt>
    c2c4:	mov	x21, xzr
    c2c8:	str	xzr, [sp, #8]
    c2cc:	b	c294 <PyInit__decimal@@Base+0x5730>
    c2d0:	sub	sp, sp, #0x50
    c2d4:	stp	x29, x30, [sp, #32]
    c2d8:	stp	x22, x21, [sp, #48]
    c2dc:	stp	x20, x19, [sp, #64]
    c2e0:	add	x29, sp, #0x20
    c2e4:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    c2e8:	ldr	x20, [x20, #4008]
    c2ec:	mov	x8, x2
    c2f0:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    c2f4:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    c2f8:	mov	x19, x0
    c2fc:	add	x2, x2, #0x27b
    c300:	add	x3, x3, #0x658
    c304:	add	x4, sp, #0x10
    c308:	add	x5, sp, #0x8
    c30c:	mov	x0, x1
    c310:	mov	x1, x8
    c314:	str	x20, [sp, #8]
    c318:	str	wzr, [sp, #4]
    c31c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    c320:	cbz	w0, c5f8 <PyInit__decimal@@Base+0x5a94>
    c324:	ldr	x8, [sp, #8]
    c328:	cmp	x8, x20
    c32c:	b.eq	c370 <PyInit__decimal@@Base+0x580c>  // b.none
    c330:	ldr	x0, [x8, #8]
    c334:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    c338:	add	x8, x8, #0x4c0
    c33c:	cmp	x0, x8
    c340:	b.eq	c3ac <PyInit__decimal@@Base+0x5848>  // b.none
    c344:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c348:	add	x1, x1, #0x4c0
    c34c:	bl	69b0 <PyType_IsSubtype@plt>
    c350:	cbnz	w0, c3ac <PyInit__decimal@@Base+0x5848>
    c354:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    c358:	ldr	x8, [x8, #3936]
    c35c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    c360:	add	x1, x1, #0x131
    c364:	ldr	x0, [x8]
    c368:	bl	6640 <PyErr_SetString@plt>
    c36c:	b	c5f8 <PyInit__decimal@@Base+0x5a94>
    c370:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    c374:	ldr	x0, [x21, #1408]
    c378:	sub	x2, x29, #0x8
    c37c:	mov	x1, xzr
    c380:	bl	6730 <PyContextVar_Get@plt>
    c384:	tbnz	w0, #31, c62c <PyInit__decimal@@Base+0x5ac8>
    c388:	ldur	x20, [x29, #-8]
    c38c:	cbz	x20, c540 <PyInit__decimal@@Base+0x59dc>
    c390:	str	x20, [sp, #8]
    c394:	ldr	x8, [x20]
    c398:	subs	x8, x8, #0x1
    c39c:	str	x8, [x20]
    c3a0:	b.ne	c3ac <PyInit__decimal@@Base+0x5848>  // b.any
    c3a4:	mov	x0, x20
    c3a8:	bl	65c0 <_Py_Dealloc@plt>
    c3ac:	ldr	x0, [x19, #8]
    c3b0:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    c3b4:	add	x21, x21, #0x320
    c3b8:	cmp	x0, x21
    c3bc:	b.eq	c3d4 <PyInit__decimal@@Base+0x5870>  // b.none
    c3c0:	ldr	x20, [sp, #8]
    c3c4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c3c8:	add	x1, x1, #0x320
    c3cc:	bl	69b0 <PyType_IsSubtype@plt>
    c3d0:	cbz	w0, c4e8 <PyInit__decimal@@Base+0x5984>
    c3d4:	ldr	x8, [x19]
    c3d8:	add	x8, x8, #0x1
    c3dc:	str	x8, [x19]
    c3e0:	ldr	x20, [sp, #16]
    c3e4:	ldr	x0, [x20, #8]
    c3e8:	cmp	x0, x21
    c3ec:	b.eq	c404 <PyInit__decimal@@Base+0x58a0>  // b.none
    c3f0:	ldr	x21, [sp, #8]
    c3f4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c3f8:	add	x1, x1, #0x320
    c3fc:	bl	69b0 <PyType_IsSubtype@plt>
    c400:	cbz	w0, c514 <PyInit__decimal@@Base+0x59b0>
    c404:	ldr	x8, [x20]
    c408:	add	x8, x8, #0x1
    c40c:	str	x8, [x20]
    c410:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c414:	add	x0, x0, #0x320
    c418:	bl	6940 <_PyObject_New@plt>
    c41c:	cbz	x0, c4b8 <PyInit__decimal@@Base+0x5954>
    c420:	mov	w8, #0x30                  	// #48
    c424:	mov	x21, x0
    c428:	strb	w8, [x0, #24]!
    c42c:	mov	x9, #0xffffffffffffffff    	// #-1
    c430:	mov	w10, #0x4                   	// #4
    c434:	add	x8, x0, #0x30
    c438:	stur	x9, [x0, #-8]
    c43c:	stp	xzr, xzr, [x0, #8]
    c440:	stp	xzr, x10, [x0, #24]
    c444:	str	x8, [x0, #40]
    c448:	ldr	x8, [sp, #8]
    c44c:	add	x1, x19, #0x18
    c450:	add	x2, x20, #0x18
    c454:	add	x4, sp, #0x4
    c458:	add	x3, x8, #0x10
    c45c:	bl	222fc <PyInit__decimal@@Base+0x1b798>
    c460:	ldr	x8, [x19]
    c464:	subs	x8, x8, #0x1
    c468:	str	x8, [x19]
    c46c:	b.ne	c478 <PyInit__decimal@@Base+0x5914>  // b.any
    c470:	mov	x0, x19
    c474:	bl	65c0 <_Py_Dealloc@plt>
    c478:	ldr	x8, [x20]
    c47c:	subs	x8, x8, #0x1
    c480:	str	x8, [x20]
    c484:	b.ne	c490 <PyInit__decimal@@Base+0x592c>  // b.any
    c488:	mov	x0, x20
    c48c:	bl	65c0 <_Py_Dealloc@plt>
    c490:	ldr	x0, [sp, #8]
    c494:	ldr	w1, [sp, #4]
    c498:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    c49c:	cbz	w0, c5fc <PyInit__decimal@@Base+0x5a98>
    c4a0:	ldr	x8, [x21]
    c4a4:	subs	x8, x8, #0x1
    c4a8:	str	x8, [x21]
    c4ac:	b.ne	c5f8 <PyInit__decimal@@Base+0x5a94>  // b.any
    c4b0:	mov	x0, x21
    c4b4:	b	c5f4 <PyInit__decimal@@Base+0x5a90>
    c4b8:	ldr	x8, [x19]
    c4bc:	subs	x8, x8, #0x1
    c4c0:	str	x8, [x19]
    c4c4:	b.ne	c4d0 <PyInit__decimal@@Base+0x596c>  // b.any
    c4c8:	mov	x0, x19
    c4cc:	bl	65c0 <_Py_Dealloc@plt>
    c4d0:	ldr	x8, [x20]
    c4d4:	subs	x8, x8, #0x1
    c4d8:	str	x8, [x20]
    c4dc:	b.ne	c5f8 <PyInit__decimal@@Base+0x5a94>  // b.any
    c4e0:	mov	x0, x20
    c4e4:	b	c5f4 <PyInit__decimal@@Base+0x5a90>
    c4e8:	ldr	x8, [x19, #8]
    c4ec:	ldrb	w9, [x8, #171]
    c4f0:	tbnz	w9, #0, c5a4 <PyInit__decimal@@Base+0x5a40>
    c4f4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c4f8:	ldr	x9, [x9, #3936]
    c4fc:	ldr	x2, [x8, #24]
    c500:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c504:	add	x1, x1, #0xd63
    c508:	ldr	x0, [x9]
    c50c:	bl	6a00 <PyErr_Format@plt>
    c510:	b	c5f8 <PyInit__decimal@@Base+0x5a94>
    c514:	ldr	x8, [x20, #8]
    c518:	ldrb	w9, [x8, #171]
    c51c:	tbnz	w9, #0, c5c4 <PyInit__decimal@@Base+0x5a60>
    c520:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c524:	ldr	x9, [x9, #3936]
    c528:	ldr	x2, [x8, #24]
    c52c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c530:	add	x1, x1, #0xd63
    c534:	ldr	x0, [x9]
    c538:	bl	6a00 <PyErr_Format@plt>
    c53c:	b	c5e0 <PyInit__decimal@@Base+0x5a7c>
    c540:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    c544:	ldr	x22, [x8, #1504]
    c548:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c54c:	add	x0, x0, #0x4c0
    c550:	mov	x1, xzr
    c554:	bl	6830 <PyObject_CallObject@plt>
    c558:	cbz	x0, c62c <PyInit__decimal@@Base+0x5ac8>
    c55c:	ldp	q1, q0, [x22, #32]
    c560:	ldr	q2, [x22, #16]
    c564:	mov	x20, x0
    c568:	mov	x1, x20
    c56c:	stp	q1, q0, [x0, #32]
    c570:	str	q2, [x0, #16]
    c574:	ldr	w8, [x22, #80]
    c578:	stp	wzr, wzr, [x0, #44]
    c57c:	str	w8, [x0, #80]
    c580:	ldr	x0, [x21, #1408]
    c584:	bl	6670 <PyContextVar_Set@plt>
    c588:	cbz	x0, c614 <PyInit__decimal@@Base+0x5ab0>
    c58c:	ldr	x8, [x0]
    c590:	subs	x8, x8, #0x1
    c594:	str	x8, [x0]
    c598:	b.ne	c390 <PyInit__decimal@@Base+0x582c>  // b.any
    c59c:	bl	65c0 <_Py_Dealloc@plt>
    c5a0:	b	c390 <PyInit__decimal@@Base+0x582c>
    c5a4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c5a8:	add	x0, x0, #0x320
    c5ac:	mov	x1, x19
    c5b0:	mov	x2, x20
    c5b4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c5b8:	mov	x19, x0
    c5bc:	cbnz	x0, c3e0 <PyInit__decimal@@Base+0x587c>
    c5c0:	b	c5f8 <PyInit__decimal@@Base+0x5a94>
    c5c4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c5c8:	add	x0, x0, #0x320
    c5cc:	mov	x1, x20
    c5d0:	mov	x2, x21
    c5d4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c5d8:	mov	x20, x0
    c5dc:	cbnz	x0, c410 <PyInit__decimal@@Base+0x58ac>
    c5e0:	ldr	x8, [x19]
    c5e4:	subs	x8, x8, #0x1
    c5e8:	str	x8, [x19]
    c5ec:	b.ne	c5f8 <PyInit__decimal@@Base+0x5a94>  // b.any
    c5f0:	mov	x0, x19
    c5f4:	bl	65c0 <_Py_Dealloc@plt>
    c5f8:	mov	x21, xzr
    c5fc:	mov	x0, x21
    c600:	ldp	x20, x19, [sp, #64]
    c604:	ldp	x22, x21, [sp, #48]
    c608:	ldp	x29, x30, [sp, #32]
    c60c:	add	sp, sp, #0x50
    c610:	ret
    c614:	ldr	x8, [x20]
    c618:	subs	x8, x8, #0x1
    c61c:	str	x8, [x20]
    c620:	b.ne	c62c <PyInit__decimal@@Base+0x5ac8>  // b.any
    c624:	mov	x0, x20
    c628:	bl	65c0 <_Py_Dealloc@plt>
    c62c:	mov	x21, xzr
    c630:	str	xzr, [sp, #8]
    c634:	b	c5fc <PyInit__decimal@@Base+0x5a98>
    c638:	sub	sp, sp, #0x50
    c63c:	stp	x29, x30, [sp, #32]
    c640:	stp	x22, x21, [sp, #48]
    c644:	stp	x20, x19, [sp, #64]
    c648:	add	x29, sp, #0x20
    c64c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    c650:	ldr	x20, [x20, #4008]
    c654:	mov	x8, x2
    c658:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    c65c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    c660:	mov	x19, x0
    c664:	add	x2, x2, #0x27b
    c668:	add	x3, x3, #0x670
    c66c:	add	x4, sp, #0x10
    c670:	add	x5, sp, #0x8
    c674:	mov	x0, x1
    c678:	mov	x1, x8
    c67c:	str	x20, [sp, #8]
    c680:	str	wzr, [sp, #4]
    c684:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    c688:	cbz	w0, c960 <PyInit__decimal@@Base+0x5dfc>
    c68c:	ldr	x8, [sp, #8]
    c690:	cmp	x8, x20
    c694:	b.eq	c6d8 <PyInit__decimal@@Base+0x5b74>  // b.none
    c698:	ldr	x0, [x8, #8]
    c69c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    c6a0:	add	x8, x8, #0x4c0
    c6a4:	cmp	x0, x8
    c6a8:	b.eq	c714 <PyInit__decimal@@Base+0x5bb0>  // b.none
    c6ac:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c6b0:	add	x1, x1, #0x4c0
    c6b4:	bl	69b0 <PyType_IsSubtype@plt>
    c6b8:	cbnz	w0, c714 <PyInit__decimal@@Base+0x5bb0>
    c6bc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    c6c0:	ldr	x8, [x8, #3936]
    c6c4:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    c6c8:	add	x1, x1, #0x131
    c6cc:	ldr	x0, [x8]
    c6d0:	bl	6640 <PyErr_SetString@plt>
    c6d4:	b	c960 <PyInit__decimal@@Base+0x5dfc>
    c6d8:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    c6dc:	ldr	x0, [x21, #1408]
    c6e0:	sub	x2, x29, #0x8
    c6e4:	mov	x1, xzr
    c6e8:	bl	6730 <PyContextVar_Get@plt>
    c6ec:	tbnz	w0, #31, c994 <PyInit__decimal@@Base+0x5e30>
    c6f0:	ldur	x20, [x29, #-8]
    c6f4:	cbz	x20, c8a8 <PyInit__decimal@@Base+0x5d44>
    c6f8:	str	x20, [sp, #8]
    c6fc:	ldr	x8, [x20]
    c700:	subs	x8, x8, #0x1
    c704:	str	x8, [x20]
    c708:	b.ne	c714 <PyInit__decimal@@Base+0x5bb0>  // b.any
    c70c:	mov	x0, x20
    c710:	bl	65c0 <_Py_Dealloc@plt>
    c714:	ldr	x0, [x19, #8]
    c718:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    c71c:	add	x21, x21, #0x320
    c720:	cmp	x0, x21
    c724:	b.eq	c73c <PyInit__decimal@@Base+0x5bd8>  // b.none
    c728:	ldr	x20, [sp, #8]
    c72c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c730:	add	x1, x1, #0x320
    c734:	bl	69b0 <PyType_IsSubtype@plt>
    c738:	cbz	w0, c850 <PyInit__decimal@@Base+0x5cec>
    c73c:	ldr	x8, [x19]
    c740:	add	x8, x8, #0x1
    c744:	str	x8, [x19]
    c748:	ldr	x20, [sp, #16]
    c74c:	ldr	x0, [x20, #8]
    c750:	cmp	x0, x21
    c754:	b.eq	c76c <PyInit__decimal@@Base+0x5c08>  // b.none
    c758:	ldr	x21, [sp, #8]
    c75c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    c760:	add	x1, x1, #0x320
    c764:	bl	69b0 <PyType_IsSubtype@plt>
    c768:	cbz	w0, c87c <PyInit__decimal@@Base+0x5d18>
    c76c:	ldr	x8, [x20]
    c770:	add	x8, x8, #0x1
    c774:	str	x8, [x20]
    c778:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c77c:	add	x0, x0, #0x320
    c780:	bl	6940 <_PyObject_New@plt>
    c784:	cbz	x0, c820 <PyInit__decimal@@Base+0x5cbc>
    c788:	mov	w8, #0x30                  	// #48
    c78c:	mov	x21, x0
    c790:	strb	w8, [x0, #24]!
    c794:	mov	x9, #0xffffffffffffffff    	// #-1
    c798:	mov	w10, #0x4                   	// #4
    c79c:	add	x8, x0, #0x30
    c7a0:	stur	x9, [x0, #-8]
    c7a4:	stp	xzr, xzr, [x0, #8]
    c7a8:	stp	xzr, x10, [x0, #24]
    c7ac:	str	x8, [x0, #40]
    c7b0:	ldr	x8, [sp, #8]
    c7b4:	add	x1, x19, #0x18
    c7b8:	add	x2, x20, #0x18
    c7bc:	add	x4, sp, #0x4
    c7c0:	add	x3, x8, #0x10
    c7c4:	bl	298b4 <PyInit__decimal@@Base+0x22d50>
    c7c8:	ldr	x8, [x19]
    c7cc:	subs	x8, x8, #0x1
    c7d0:	str	x8, [x19]
    c7d4:	b.ne	c7e0 <PyInit__decimal@@Base+0x5c7c>  // b.any
    c7d8:	mov	x0, x19
    c7dc:	bl	65c0 <_Py_Dealloc@plt>
    c7e0:	ldr	x8, [x20]
    c7e4:	subs	x8, x8, #0x1
    c7e8:	str	x8, [x20]
    c7ec:	b.ne	c7f8 <PyInit__decimal@@Base+0x5c94>  // b.any
    c7f0:	mov	x0, x20
    c7f4:	bl	65c0 <_Py_Dealloc@plt>
    c7f8:	ldr	x0, [sp, #8]
    c7fc:	ldr	w1, [sp, #4]
    c800:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    c804:	cbz	w0, c964 <PyInit__decimal@@Base+0x5e00>
    c808:	ldr	x8, [x21]
    c80c:	subs	x8, x8, #0x1
    c810:	str	x8, [x21]
    c814:	b.ne	c960 <PyInit__decimal@@Base+0x5dfc>  // b.any
    c818:	mov	x0, x21
    c81c:	b	c95c <PyInit__decimal@@Base+0x5df8>
    c820:	ldr	x8, [x19]
    c824:	subs	x8, x8, #0x1
    c828:	str	x8, [x19]
    c82c:	b.ne	c838 <PyInit__decimal@@Base+0x5cd4>  // b.any
    c830:	mov	x0, x19
    c834:	bl	65c0 <_Py_Dealloc@plt>
    c838:	ldr	x8, [x20]
    c83c:	subs	x8, x8, #0x1
    c840:	str	x8, [x20]
    c844:	b.ne	c960 <PyInit__decimal@@Base+0x5dfc>  // b.any
    c848:	mov	x0, x20
    c84c:	b	c95c <PyInit__decimal@@Base+0x5df8>
    c850:	ldr	x8, [x19, #8]
    c854:	ldrb	w9, [x8, #171]
    c858:	tbnz	w9, #0, c90c <PyInit__decimal@@Base+0x5da8>
    c85c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c860:	ldr	x9, [x9, #3936]
    c864:	ldr	x2, [x8, #24]
    c868:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c86c:	add	x1, x1, #0xd63
    c870:	ldr	x0, [x9]
    c874:	bl	6a00 <PyErr_Format@plt>
    c878:	b	c960 <PyInit__decimal@@Base+0x5dfc>
    c87c:	ldr	x8, [x20, #8]
    c880:	ldrb	w9, [x8, #171]
    c884:	tbnz	w9, #0, c92c <PyInit__decimal@@Base+0x5dc8>
    c888:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    c88c:	ldr	x9, [x9, #3936]
    c890:	ldr	x2, [x8, #24]
    c894:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    c898:	add	x1, x1, #0xd63
    c89c:	ldr	x0, [x9]
    c8a0:	bl	6a00 <PyErr_Format@plt>
    c8a4:	b	c948 <PyInit__decimal@@Base+0x5de4>
    c8a8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    c8ac:	ldr	x22, [x8, #1504]
    c8b0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c8b4:	add	x0, x0, #0x4c0
    c8b8:	mov	x1, xzr
    c8bc:	bl	6830 <PyObject_CallObject@plt>
    c8c0:	cbz	x0, c994 <PyInit__decimal@@Base+0x5e30>
    c8c4:	ldp	q1, q0, [x22, #32]
    c8c8:	ldr	q2, [x22, #16]
    c8cc:	mov	x20, x0
    c8d0:	mov	x1, x20
    c8d4:	stp	q1, q0, [x0, #32]
    c8d8:	str	q2, [x0, #16]
    c8dc:	ldr	w8, [x22, #80]
    c8e0:	stp	wzr, wzr, [x0, #44]
    c8e4:	str	w8, [x0, #80]
    c8e8:	ldr	x0, [x21, #1408]
    c8ec:	bl	6670 <PyContextVar_Set@plt>
    c8f0:	cbz	x0, c97c <PyInit__decimal@@Base+0x5e18>
    c8f4:	ldr	x8, [x0]
    c8f8:	subs	x8, x8, #0x1
    c8fc:	str	x8, [x0]
    c900:	b.ne	c6f8 <PyInit__decimal@@Base+0x5b94>  // b.any
    c904:	bl	65c0 <_Py_Dealloc@plt>
    c908:	b	c6f8 <PyInit__decimal@@Base+0x5b94>
    c90c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c910:	add	x0, x0, #0x320
    c914:	mov	x1, x19
    c918:	mov	x2, x20
    c91c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c920:	mov	x19, x0
    c924:	cbnz	x0, c748 <PyInit__decimal@@Base+0x5be4>
    c928:	b	c960 <PyInit__decimal@@Base+0x5dfc>
    c92c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    c930:	add	x0, x0, #0x320
    c934:	mov	x1, x20
    c938:	mov	x2, x21
    c93c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    c940:	mov	x20, x0
    c944:	cbnz	x0, c778 <PyInit__decimal@@Base+0x5c14>
    c948:	ldr	x8, [x19]
    c94c:	subs	x8, x8, #0x1
    c950:	str	x8, [x19]
    c954:	b.ne	c960 <PyInit__decimal@@Base+0x5dfc>  // b.any
    c958:	mov	x0, x19
    c95c:	bl	65c0 <_Py_Dealloc@plt>
    c960:	mov	x21, xzr
    c964:	mov	x0, x21
    c968:	ldp	x20, x19, [sp, #64]
    c96c:	ldp	x22, x21, [sp, #48]
    c970:	ldp	x29, x30, [sp, #32]
    c974:	add	sp, sp, #0x50
    c978:	ret
    c97c:	ldr	x8, [x20]
    c980:	subs	x8, x8, #0x1
    c984:	str	x8, [x20]
    c988:	b.ne	c994 <PyInit__decimal@@Base+0x5e30>  // b.any
    c98c:	mov	x0, x20
    c990:	bl	65c0 <_Py_Dealloc@plt>
    c994:	mov	x21, xzr
    c998:	str	xzr, [sp, #8]
    c99c:	b	c964 <PyInit__decimal@@Base+0x5e00>
    c9a0:	sub	sp, sp, #0x50
    c9a4:	stp	x29, x30, [sp, #32]
    c9a8:	stp	x22, x21, [sp, #48]
    c9ac:	stp	x20, x19, [sp, #64]
    c9b0:	add	x29, sp, #0x20
    c9b4:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    c9b8:	ldr	x20, [x20, #4008]
    c9bc:	mov	x8, x2
    c9c0:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    c9c4:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    c9c8:	mov	x19, x0
    c9cc:	add	x2, x2, #0x27b
    c9d0:	add	x3, x3, #0x688
    c9d4:	add	x4, sp, #0x10
    c9d8:	add	x5, sp, #0x8
    c9dc:	mov	x0, x1
    c9e0:	mov	x1, x8
    c9e4:	str	x20, [sp, #8]
    c9e8:	str	wzr, [sp, #4]
    c9ec:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    c9f0:	cbz	w0, ccc8 <PyInit__decimal@@Base+0x6164>
    c9f4:	ldr	x8, [sp, #8]
    c9f8:	cmp	x8, x20
    c9fc:	b.eq	ca40 <PyInit__decimal@@Base+0x5edc>  // b.none
    ca00:	ldr	x0, [x8, #8]
    ca04:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ca08:	add	x8, x8, #0x4c0
    ca0c:	cmp	x0, x8
    ca10:	b.eq	ca7c <PyInit__decimal@@Base+0x5f18>  // b.none
    ca14:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ca18:	add	x1, x1, #0x4c0
    ca1c:	bl	69b0 <PyType_IsSubtype@plt>
    ca20:	cbnz	w0, ca7c <PyInit__decimal@@Base+0x5f18>
    ca24:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ca28:	ldr	x8, [x8, #3936]
    ca2c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    ca30:	add	x1, x1, #0x131
    ca34:	ldr	x0, [x8]
    ca38:	bl	6640 <PyErr_SetString@plt>
    ca3c:	b	ccc8 <PyInit__decimal@@Base+0x6164>
    ca40:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    ca44:	ldr	x0, [x21, #1408]
    ca48:	sub	x2, x29, #0x8
    ca4c:	mov	x1, xzr
    ca50:	bl	6730 <PyContextVar_Get@plt>
    ca54:	tbnz	w0, #31, ccfc <PyInit__decimal@@Base+0x6198>
    ca58:	ldur	x20, [x29, #-8]
    ca5c:	cbz	x20, cc10 <PyInit__decimal@@Base+0x60ac>
    ca60:	str	x20, [sp, #8]
    ca64:	ldr	x8, [x20]
    ca68:	subs	x8, x8, #0x1
    ca6c:	str	x8, [x20]
    ca70:	b.ne	ca7c <PyInit__decimal@@Base+0x5f18>  // b.any
    ca74:	mov	x0, x20
    ca78:	bl	65c0 <_Py_Dealloc@plt>
    ca7c:	ldr	x0, [x19, #8]
    ca80:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    ca84:	add	x21, x21, #0x320
    ca88:	cmp	x0, x21
    ca8c:	b.eq	caa4 <PyInit__decimal@@Base+0x5f40>  // b.none
    ca90:	ldr	x20, [sp, #8]
    ca94:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ca98:	add	x1, x1, #0x320
    ca9c:	bl	69b0 <PyType_IsSubtype@plt>
    caa0:	cbz	w0, cbb8 <PyInit__decimal@@Base+0x6054>
    caa4:	ldr	x8, [x19]
    caa8:	add	x8, x8, #0x1
    caac:	str	x8, [x19]
    cab0:	ldr	x20, [sp, #16]
    cab4:	ldr	x0, [x20, #8]
    cab8:	cmp	x0, x21
    cabc:	b.eq	cad4 <PyInit__decimal@@Base+0x5f70>  // b.none
    cac0:	ldr	x21, [sp, #8]
    cac4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    cac8:	add	x1, x1, #0x320
    cacc:	bl	69b0 <PyType_IsSubtype@plt>
    cad0:	cbz	w0, cbe4 <PyInit__decimal@@Base+0x6080>
    cad4:	ldr	x8, [x20]
    cad8:	add	x8, x8, #0x1
    cadc:	str	x8, [x20]
    cae0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cae4:	add	x0, x0, #0x320
    cae8:	bl	6940 <_PyObject_New@plt>
    caec:	cbz	x0, cb88 <PyInit__decimal@@Base+0x6024>
    caf0:	mov	w8, #0x30                  	// #48
    caf4:	mov	x21, x0
    caf8:	strb	w8, [x0, #24]!
    cafc:	mov	x9, #0xffffffffffffffff    	// #-1
    cb00:	mov	w10, #0x4                   	// #4
    cb04:	add	x8, x0, #0x30
    cb08:	stur	x9, [x0, #-8]
    cb0c:	stp	xzr, xzr, [x0, #8]
    cb10:	stp	xzr, x10, [x0, #24]
    cb14:	str	x8, [x0, #40]
    cb18:	ldr	x8, [sp, #8]
    cb1c:	add	x1, x19, #0x18
    cb20:	add	x2, x20, #0x18
    cb24:	add	x4, sp, #0x4
    cb28:	add	x3, x8, #0x10
    cb2c:	bl	299b4 <PyInit__decimal@@Base+0x22e50>
    cb30:	ldr	x8, [x19]
    cb34:	subs	x8, x8, #0x1
    cb38:	str	x8, [x19]
    cb3c:	b.ne	cb48 <PyInit__decimal@@Base+0x5fe4>  // b.any
    cb40:	mov	x0, x19
    cb44:	bl	65c0 <_Py_Dealloc@plt>
    cb48:	ldr	x8, [x20]
    cb4c:	subs	x8, x8, #0x1
    cb50:	str	x8, [x20]
    cb54:	b.ne	cb60 <PyInit__decimal@@Base+0x5ffc>  // b.any
    cb58:	mov	x0, x20
    cb5c:	bl	65c0 <_Py_Dealloc@plt>
    cb60:	ldr	x0, [sp, #8]
    cb64:	ldr	w1, [sp, #4]
    cb68:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    cb6c:	cbz	w0, cccc <PyInit__decimal@@Base+0x6168>
    cb70:	ldr	x8, [x21]
    cb74:	subs	x8, x8, #0x1
    cb78:	str	x8, [x21]
    cb7c:	b.ne	ccc8 <PyInit__decimal@@Base+0x6164>  // b.any
    cb80:	mov	x0, x21
    cb84:	b	ccc4 <PyInit__decimal@@Base+0x6160>
    cb88:	ldr	x8, [x19]
    cb8c:	subs	x8, x8, #0x1
    cb90:	str	x8, [x19]
    cb94:	b.ne	cba0 <PyInit__decimal@@Base+0x603c>  // b.any
    cb98:	mov	x0, x19
    cb9c:	bl	65c0 <_Py_Dealloc@plt>
    cba0:	ldr	x8, [x20]
    cba4:	subs	x8, x8, #0x1
    cba8:	str	x8, [x20]
    cbac:	b.ne	ccc8 <PyInit__decimal@@Base+0x6164>  // b.any
    cbb0:	mov	x0, x20
    cbb4:	b	ccc4 <PyInit__decimal@@Base+0x6160>
    cbb8:	ldr	x8, [x19, #8]
    cbbc:	ldrb	w9, [x8, #171]
    cbc0:	tbnz	w9, #0, cc74 <PyInit__decimal@@Base+0x6110>
    cbc4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    cbc8:	ldr	x9, [x9, #3936]
    cbcc:	ldr	x2, [x8, #24]
    cbd0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    cbd4:	add	x1, x1, #0xd63
    cbd8:	ldr	x0, [x9]
    cbdc:	bl	6a00 <PyErr_Format@plt>
    cbe0:	b	ccc8 <PyInit__decimal@@Base+0x6164>
    cbe4:	ldr	x8, [x20, #8]
    cbe8:	ldrb	w9, [x8, #171]
    cbec:	tbnz	w9, #0, cc94 <PyInit__decimal@@Base+0x6130>
    cbf0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    cbf4:	ldr	x9, [x9, #3936]
    cbf8:	ldr	x2, [x8, #24]
    cbfc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    cc00:	add	x1, x1, #0xd63
    cc04:	ldr	x0, [x9]
    cc08:	bl	6a00 <PyErr_Format@plt>
    cc0c:	b	ccb0 <PyInit__decimal@@Base+0x614c>
    cc10:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    cc14:	ldr	x22, [x8, #1504]
    cc18:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cc1c:	add	x0, x0, #0x4c0
    cc20:	mov	x1, xzr
    cc24:	bl	6830 <PyObject_CallObject@plt>
    cc28:	cbz	x0, ccfc <PyInit__decimal@@Base+0x6198>
    cc2c:	ldp	q1, q0, [x22, #32]
    cc30:	ldr	q2, [x22, #16]
    cc34:	mov	x20, x0
    cc38:	mov	x1, x20
    cc3c:	stp	q1, q0, [x0, #32]
    cc40:	str	q2, [x0, #16]
    cc44:	ldr	w8, [x22, #80]
    cc48:	stp	wzr, wzr, [x0, #44]
    cc4c:	str	w8, [x0, #80]
    cc50:	ldr	x0, [x21, #1408]
    cc54:	bl	6670 <PyContextVar_Set@plt>
    cc58:	cbz	x0, cce4 <PyInit__decimal@@Base+0x6180>
    cc5c:	ldr	x8, [x0]
    cc60:	subs	x8, x8, #0x1
    cc64:	str	x8, [x0]
    cc68:	b.ne	ca60 <PyInit__decimal@@Base+0x5efc>  // b.any
    cc6c:	bl	65c0 <_Py_Dealloc@plt>
    cc70:	b	ca60 <PyInit__decimal@@Base+0x5efc>
    cc74:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cc78:	add	x0, x0, #0x320
    cc7c:	mov	x1, x19
    cc80:	mov	x2, x20
    cc84:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    cc88:	mov	x19, x0
    cc8c:	cbnz	x0, cab0 <PyInit__decimal@@Base+0x5f4c>
    cc90:	b	ccc8 <PyInit__decimal@@Base+0x6164>
    cc94:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cc98:	add	x0, x0, #0x320
    cc9c:	mov	x1, x20
    cca0:	mov	x2, x21
    cca4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    cca8:	mov	x20, x0
    ccac:	cbnz	x0, cae0 <PyInit__decimal@@Base+0x5f7c>
    ccb0:	ldr	x8, [x19]
    ccb4:	subs	x8, x8, #0x1
    ccb8:	str	x8, [x19]
    ccbc:	b.ne	ccc8 <PyInit__decimal@@Base+0x6164>  // b.any
    ccc0:	mov	x0, x19
    ccc4:	bl	65c0 <_Py_Dealloc@plt>
    ccc8:	mov	x21, xzr
    cccc:	mov	x0, x21
    ccd0:	ldp	x20, x19, [sp, #64]
    ccd4:	ldp	x22, x21, [sp, #48]
    ccd8:	ldp	x29, x30, [sp, #32]
    ccdc:	add	sp, sp, #0x50
    cce0:	ret
    cce4:	ldr	x8, [x20]
    cce8:	subs	x8, x8, #0x1
    ccec:	str	x8, [x20]
    ccf0:	b.ne	ccfc <PyInit__decimal@@Base+0x6198>  // b.any
    ccf4:	mov	x0, x20
    ccf8:	bl	65c0 <_Py_Dealloc@plt>
    ccfc:	mov	x21, xzr
    cd00:	str	xzr, [sp, #8]
    cd04:	b	cccc <PyInit__decimal@@Base+0x6168>
    cd08:	sub	sp, sp, #0x50
    cd0c:	stp	x29, x30, [sp, #32]
    cd10:	stp	x22, x21, [sp, #48]
    cd14:	stp	x20, x19, [sp, #64]
    cd18:	add	x29, sp, #0x20
    cd1c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    cd20:	ldr	x20, [x20, #4008]
    cd24:	mov	x8, x2
    cd28:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    cd2c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    cd30:	mov	x19, x0
    cd34:	add	x2, x2, #0x27b
    cd38:	add	x3, x3, #0x6a0
    cd3c:	add	x4, sp, #0x10
    cd40:	add	x5, sp, #0x8
    cd44:	mov	x0, x1
    cd48:	mov	x1, x8
    cd4c:	str	x20, [sp, #8]
    cd50:	str	wzr, [sp, #4]
    cd54:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    cd58:	cbz	w0, d030 <PyInit__decimal@@Base+0x64cc>
    cd5c:	ldr	x8, [sp, #8]
    cd60:	cmp	x8, x20
    cd64:	b.eq	cda8 <PyInit__decimal@@Base+0x6244>  // b.none
    cd68:	ldr	x0, [x8, #8]
    cd6c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    cd70:	add	x8, x8, #0x4c0
    cd74:	cmp	x0, x8
    cd78:	b.eq	cde4 <PyInit__decimal@@Base+0x6280>  // b.none
    cd7c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    cd80:	add	x1, x1, #0x4c0
    cd84:	bl	69b0 <PyType_IsSubtype@plt>
    cd88:	cbnz	w0, cde4 <PyInit__decimal@@Base+0x6280>
    cd8c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    cd90:	ldr	x8, [x8, #3936]
    cd94:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    cd98:	add	x1, x1, #0x131
    cd9c:	ldr	x0, [x8]
    cda0:	bl	6640 <PyErr_SetString@plt>
    cda4:	b	d030 <PyInit__decimal@@Base+0x64cc>
    cda8:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    cdac:	ldr	x0, [x21, #1408]
    cdb0:	sub	x2, x29, #0x8
    cdb4:	mov	x1, xzr
    cdb8:	bl	6730 <PyContextVar_Get@plt>
    cdbc:	tbnz	w0, #31, d064 <PyInit__decimal@@Base+0x6500>
    cdc0:	ldur	x20, [x29, #-8]
    cdc4:	cbz	x20, cf78 <PyInit__decimal@@Base+0x6414>
    cdc8:	str	x20, [sp, #8]
    cdcc:	ldr	x8, [x20]
    cdd0:	subs	x8, x8, #0x1
    cdd4:	str	x8, [x20]
    cdd8:	b.ne	cde4 <PyInit__decimal@@Base+0x6280>  // b.any
    cddc:	mov	x0, x20
    cde0:	bl	65c0 <_Py_Dealloc@plt>
    cde4:	ldr	x0, [x19, #8]
    cde8:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    cdec:	add	x21, x21, #0x320
    cdf0:	cmp	x0, x21
    cdf4:	b.eq	ce0c <PyInit__decimal@@Base+0x62a8>  // b.none
    cdf8:	ldr	x20, [sp, #8]
    cdfc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ce00:	add	x1, x1, #0x320
    ce04:	bl	69b0 <PyType_IsSubtype@plt>
    ce08:	cbz	w0, cf20 <PyInit__decimal@@Base+0x63bc>
    ce0c:	ldr	x8, [x19]
    ce10:	add	x8, x8, #0x1
    ce14:	str	x8, [x19]
    ce18:	ldr	x20, [sp, #16]
    ce1c:	ldr	x0, [x20, #8]
    ce20:	cmp	x0, x21
    ce24:	b.eq	ce3c <PyInit__decimal@@Base+0x62d8>  // b.none
    ce28:	ldr	x21, [sp, #8]
    ce2c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ce30:	add	x1, x1, #0x320
    ce34:	bl	69b0 <PyType_IsSubtype@plt>
    ce38:	cbz	w0, cf4c <PyInit__decimal@@Base+0x63e8>
    ce3c:	ldr	x8, [x20]
    ce40:	add	x8, x8, #0x1
    ce44:	str	x8, [x20]
    ce48:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ce4c:	add	x0, x0, #0x320
    ce50:	bl	6940 <_PyObject_New@plt>
    ce54:	cbz	x0, cef0 <PyInit__decimal@@Base+0x638c>
    ce58:	mov	w8, #0x30                  	// #48
    ce5c:	mov	x21, x0
    ce60:	strb	w8, [x0, #24]!
    ce64:	mov	x9, #0xffffffffffffffff    	// #-1
    ce68:	mov	w10, #0x4                   	// #4
    ce6c:	add	x8, x0, #0x30
    ce70:	stur	x9, [x0, #-8]
    ce74:	stp	xzr, xzr, [x0, #8]
    ce78:	stp	xzr, x10, [x0, #24]
    ce7c:	str	x8, [x0, #40]
    ce80:	ldr	x8, [sp, #8]
    ce84:	add	x1, x19, #0x18
    ce88:	add	x2, x20, #0x18
    ce8c:	add	x4, sp, #0x4
    ce90:	add	x3, x8, #0x10
    ce94:	bl	29ab4 <PyInit__decimal@@Base+0x22f50>
    ce98:	ldr	x8, [x19]
    ce9c:	subs	x8, x8, #0x1
    cea0:	str	x8, [x19]
    cea4:	b.ne	ceb0 <PyInit__decimal@@Base+0x634c>  // b.any
    cea8:	mov	x0, x19
    ceac:	bl	65c0 <_Py_Dealloc@plt>
    ceb0:	ldr	x8, [x20]
    ceb4:	subs	x8, x8, #0x1
    ceb8:	str	x8, [x20]
    cebc:	b.ne	cec8 <PyInit__decimal@@Base+0x6364>  // b.any
    cec0:	mov	x0, x20
    cec4:	bl	65c0 <_Py_Dealloc@plt>
    cec8:	ldr	x0, [sp, #8]
    cecc:	ldr	w1, [sp, #4]
    ced0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    ced4:	cbz	w0, d034 <PyInit__decimal@@Base+0x64d0>
    ced8:	ldr	x8, [x21]
    cedc:	subs	x8, x8, #0x1
    cee0:	str	x8, [x21]
    cee4:	b.ne	d030 <PyInit__decimal@@Base+0x64cc>  // b.any
    cee8:	mov	x0, x21
    ceec:	b	d02c <PyInit__decimal@@Base+0x64c8>
    cef0:	ldr	x8, [x19]
    cef4:	subs	x8, x8, #0x1
    cef8:	str	x8, [x19]
    cefc:	b.ne	cf08 <PyInit__decimal@@Base+0x63a4>  // b.any
    cf00:	mov	x0, x19
    cf04:	bl	65c0 <_Py_Dealloc@plt>
    cf08:	ldr	x8, [x20]
    cf0c:	subs	x8, x8, #0x1
    cf10:	str	x8, [x20]
    cf14:	b.ne	d030 <PyInit__decimal@@Base+0x64cc>  // b.any
    cf18:	mov	x0, x20
    cf1c:	b	d02c <PyInit__decimal@@Base+0x64c8>
    cf20:	ldr	x8, [x19, #8]
    cf24:	ldrb	w9, [x8, #171]
    cf28:	tbnz	w9, #0, cfdc <PyInit__decimal@@Base+0x6478>
    cf2c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    cf30:	ldr	x9, [x9, #3936]
    cf34:	ldr	x2, [x8, #24]
    cf38:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    cf3c:	add	x1, x1, #0xd63
    cf40:	ldr	x0, [x9]
    cf44:	bl	6a00 <PyErr_Format@plt>
    cf48:	b	d030 <PyInit__decimal@@Base+0x64cc>
    cf4c:	ldr	x8, [x20, #8]
    cf50:	ldrb	w9, [x8, #171]
    cf54:	tbnz	w9, #0, cffc <PyInit__decimal@@Base+0x6498>
    cf58:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    cf5c:	ldr	x9, [x9, #3936]
    cf60:	ldr	x2, [x8, #24]
    cf64:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    cf68:	add	x1, x1, #0xd63
    cf6c:	ldr	x0, [x9]
    cf70:	bl	6a00 <PyErr_Format@plt>
    cf74:	b	d018 <PyInit__decimal@@Base+0x64b4>
    cf78:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    cf7c:	ldr	x22, [x8, #1504]
    cf80:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cf84:	add	x0, x0, #0x4c0
    cf88:	mov	x1, xzr
    cf8c:	bl	6830 <PyObject_CallObject@plt>
    cf90:	cbz	x0, d064 <PyInit__decimal@@Base+0x6500>
    cf94:	ldp	q1, q0, [x22, #32]
    cf98:	ldr	q2, [x22, #16]
    cf9c:	mov	x20, x0
    cfa0:	mov	x1, x20
    cfa4:	stp	q1, q0, [x0, #32]
    cfa8:	str	q2, [x0, #16]
    cfac:	ldr	w8, [x22, #80]
    cfb0:	stp	wzr, wzr, [x0, #44]
    cfb4:	str	w8, [x0, #80]
    cfb8:	ldr	x0, [x21, #1408]
    cfbc:	bl	6670 <PyContextVar_Set@plt>
    cfc0:	cbz	x0, d04c <PyInit__decimal@@Base+0x64e8>
    cfc4:	ldr	x8, [x0]
    cfc8:	subs	x8, x8, #0x1
    cfcc:	str	x8, [x0]
    cfd0:	b.ne	cdc8 <PyInit__decimal@@Base+0x6264>  // b.any
    cfd4:	bl	65c0 <_Py_Dealloc@plt>
    cfd8:	b	cdc8 <PyInit__decimal@@Base+0x6264>
    cfdc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    cfe0:	add	x0, x0, #0x320
    cfe4:	mov	x1, x19
    cfe8:	mov	x2, x20
    cfec:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    cff0:	mov	x19, x0
    cff4:	cbnz	x0, ce18 <PyInit__decimal@@Base+0x62b4>
    cff8:	b	d030 <PyInit__decimal@@Base+0x64cc>
    cffc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d000:	add	x0, x0, #0x320
    d004:	mov	x1, x20
    d008:	mov	x2, x21
    d00c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    d010:	mov	x20, x0
    d014:	cbnz	x0, ce48 <PyInit__decimal@@Base+0x62e4>
    d018:	ldr	x8, [x19]
    d01c:	subs	x8, x8, #0x1
    d020:	str	x8, [x19]
    d024:	b.ne	d030 <PyInit__decimal@@Base+0x64cc>  // b.any
    d028:	mov	x0, x19
    d02c:	bl	65c0 <_Py_Dealloc@plt>
    d030:	mov	x21, xzr
    d034:	mov	x0, x21
    d038:	ldp	x20, x19, [sp, #64]
    d03c:	ldp	x22, x21, [sp, #48]
    d040:	ldp	x29, x30, [sp, #32]
    d044:	add	sp, sp, #0x50
    d048:	ret
    d04c:	ldr	x8, [x20]
    d050:	subs	x8, x8, #0x1
    d054:	str	x8, [x20]
    d058:	b.ne	d064 <PyInit__decimal@@Base+0x6500>  // b.any
    d05c:	mov	x0, x20
    d060:	bl	65c0 <_Py_Dealloc@plt>
    d064:	mov	x21, xzr
    d068:	str	xzr, [sp, #8]
    d06c:	b	d034 <PyInit__decimal@@Base+0x64d0>
    d070:	sub	sp, sp, #0x50
    d074:	stp	x29, x30, [sp, #32]
    d078:	stp	x22, x21, [sp, #48]
    d07c:	stp	x20, x19, [sp, #64]
    d080:	add	x29, sp, #0x20
    d084:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    d088:	ldr	x20, [x20, #4008]
    d08c:	mov	x8, x2
    d090:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    d094:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    d098:	mov	x19, x0
    d09c:	add	x2, x2, #0x27b
    d0a0:	add	x3, x3, #0x6b8
    d0a4:	add	x4, sp, #0x10
    d0a8:	add	x5, sp, #0x8
    d0ac:	mov	x0, x1
    d0b0:	mov	x1, x8
    d0b4:	str	x20, [sp, #8]
    d0b8:	str	wzr, [sp, #4]
    d0bc:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    d0c0:	cbz	w0, d398 <PyInit__decimal@@Base+0x6834>
    d0c4:	ldr	x8, [sp, #8]
    d0c8:	cmp	x8, x20
    d0cc:	b.eq	d110 <PyInit__decimal@@Base+0x65ac>  // b.none
    d0d0:	ldr	x0, [x8, #8]
    d0d4:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    d0d8:	add	x8, x8, #0x4c0
    d0dc:	cmp	x0, x8
    d0e0:	b.eq	d14c <PyInit__decimal@@Base+0x65e8>  // b.none
    d0e4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d0e8:	add	x1, x1, #0x4c0
    d0ec:	bl	69b0 <PyType_IsSubtype@plt>
    d0f0:	cbnz	w0, d14c <PyInit__decimal@@Base+0x65e8>
    d0f4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    d0f8:	ldr	x8, [x8, #3936]
    d0fc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    d100:	add	x1, x1, #0x131
    d104:	ldr	x0, [x8]
    d108:	bl	6640 <PyErr_SetString@plt>
    d10c:	b	d398 <PyInit__decimal@@Base+0x6834>
    d110:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    d114:	ldr	x0, [x21, #1408]
    d118:	sub	x2, x29, #0x8
    d11c:	mov	x1, xzr
    d120:	bl	6730 <PyContextVar_Get@plt>
    d124:	tbnz	w0, #31, d3cc <PyInit__decimal@@Base+0x6868>
    d128:	ldur	x20, [x29, #-8]
    d12c:	cbz	x20, d2e0 <PyInit__decimal@@Base+0x677c>
    d130:	str	x20, [sp, #8]
    d134:	ldr	x8, [x20]
    d138:	subs	x8, x8, #0x1
    d13c:	str	x8, [x20]
    d140:	b.ne	d14c <PyInit__decimal@@Base+0x65e8>  // b.any
    d144:	mov	x0, x20
    d148:	bl	65c0 <_Py_Dealloc@plt>
    d14c:	ldr	x0, [x19, #8]
    d150:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    d154:	add	x21, x21, #0x320
    d158:	cmp	x0, x21
    d15c:	b.eq	d174 <PyInit__decimal@@Base+0x6610>  // b.none
    d160:	ldr	x20, [sp, #8]
    d164:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d168:	add	x1, x1, #0x320
    d16c:	bl	69b0 <PyType_IsSubtype@plt>
    d170:	cbz	w0, d288 <PyInit__decimal@@Base+0x6724>
    d174:	ldr	x8, [x19]
    d178:	add	x8, x8, #0x1
    d17c:	str	x8, [x19]
    d180:	ldr	x20, [sp, #16]
    d184:	ldr	x0, [x20, #8]
    d188:	cmp	x0, x21
    d18c:	b.eq	d1a4 <PyInit__decimal@@Base+0x6640>  // b.none
    d190:	ldr	x21, [sp, #8]
    d194:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d198:	add	x1, x1, #0x320
    d19c:	bl	69b0 <PyType_IsSubtype@plt>
    d1a0:	cbz	w0, d2b4 <PyInit__decimal@@Base+0x6750>
    d1a4:	ldr	x8, [x20]
    d1a8:	add	x8, x8, #0x1
    d1ac:	str	x8, [x20]
    d1b0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d1b4:	add	x0, x0, #0x320
    d1b8:	bl	6940 <_PyObject_New@plt>
    d1bc:	cbz	x0, d258 <PyInit__decimal@@Base+0x66f4>
    d1c0:	mov	w8, #0x30                  	// #48
    d1c4:	mov	x21, x0
    d1c8:	strb	w8, [x0, #24]!
    d1cc:	mov	x9, #0xffffffffffffffff    	// #-1
    d1d0:	mov	w10, #0x4                   	// #4
    d1d4:	add	x8, x0, #0x30
    d1d8:	stur	x9, [x0, #-8]
    d1dc:	stp	xzr, xzr, [x0, #8]
    d1e0:	stp	xzr, x10, [x0, #24]
    d1e4:	str	x8, [x0, #40]
    d1e8:	ldr	x8, [sp, #8]
    d1ec:	add	x1, x19, #0x18
    d1f0:	add	x2, x20, #0x18
    d1f4:	add	x4, sp, #0x4
    d1f8:	add	x3, x8, #0x10
    d1fc:	bl	29bb4 <PyInit__decimal@@Base+0x23050>
    d200:	ldr	x8, [x19]
    d204:	subs	x8, x8, #0x1
    d208:	str	x8, [x19]
    d20c:	b.ne	d218 <PyInit__decimal@@Base+0x66b4>  // b.any
    d210:	mov	x0, x19
    d214:	bl	65c0 <_Py_Dealloc@plt>
    d218:	ldr	x8, [x20]
    d21c:	subs	x8, x8, #0x1
    d220:	str	x8, [x20]
    d224:	b.ne	d230 <PyInit__decimal@@Base+0x66cc>  // b.any
    d228:	mov	x0, x20
    d22c:	bl	65c0 <_Py_Dealloc@plt>
    d230:	ldr	x0, [sp, #8]
    d234:	ldr	w1, [sp, #4]
    d238:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    d23c:	cbz	w0, d39c <PyInit__decimal@@Base+0x6838>
    d240:	ldr	x8, [x21]
    d244:	subs	x8, x8, #0x1
    d248:	str	x8, [x21]
    d24c:	b.ne	d398 <PyInit__decimal@@Base+0x6834>  // b.any
    d250:	mov	x0, x21
    d254:	b	d394 <PyInit__decimal@@Base+0x6830>
    d258:	ldr	x8, [x19]
    d25c:	subs	x8, x8, #0x1
    d260:	str	x8, [x19]
    d264:	b.ne	d270 <PyInit__decimal@@Base+0x670c>  // b.any
    d268:	mov	x0, x19
    d26c:	bl	65c0 <_Py_Dealloc@plt>
    d270:	ldr	x8, [x20]
    d274:	subs	x8, x8, #0x1
    d278:	str	x8, [x20]
    d27c:	b.ne	d398 <PyInit__decimal@@Base+0x6834>  // b.any
    d280:	mov	x0, x20
    d284:	b	d394 <PyInit__decimal@@Base+0x6830>
    d288:	ldr	x8, [x19, #8]
    d28c:	ldrb	w9, [x8, #171]
    d290:	tbnz	w9, #0, d344 <PyInit__decimal@@Base+0x67e0>
    d294:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    d298:	ldr	x9, [x9, #3936]
    d29c:	ldr	x2, [x8, #24]
    d2a0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    d2a4:	add	x1, x1, #0xd63
    d2a8:	ldr	x0, [x9]
    d2ac:	bl	6a00 <PyErr_Format@plt>
    d2b0:	b	d398 <PyInit__decimal@@Base+0x6834>
    d2b4:	ldr	x8, [x20, #8]
    d2b8:	ldrb	w9, [x8, #171]
    d2bc:	tbnz	w9, #0, d364 <PyInit__decimal@@Base+0x6800>
    d2c0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    d2c4:	ldr	x9, [x9, #3936]
    d2c8:	ldr	x2, [x8, #24]
    d2cc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    d2d0:	add	x1, x1, #0xd63
    d2d4:	ldr	x0, [x9]
    d2d8:	bl	6a00 <PyErr_Format@plt>
    d2dc:	b	d380 <PyInit__decimal@@Base+0x681c>
    d2e0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    d2e4:	ldr	x22, [x8, #1504]
    d2e8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d2ec:	add	x0, x0, #0x4c0
    d2f0:	mov	x1, xzr
    d2f4:	bl	6830 <PyObject_CallObject@plt>
    d2f8:	cbz	x0, d3cc <PyInit__decimal@@Base+0x6868>
    d2fc:	ldp	q1, q0, [x22, #32]
    d300:	ldr	q2, [x22, #16]
    d304:	mov	x20, x0
    d308:	mov	x1, x20
    d30c:	stp	q1, q0, [x0, #32]
    d310:	str	q2, [x0, #16]
    d314:	ldr	w8, [x22, #80]
    d318:	stp	wzr, wzr, [x0, #44]
    d31c:	str	w8, [x0, #80]
    d320:	ldr	x0, [x21, #1408]
    d324:	bl	6670 <PyContextVar_Set@plt>
    d328:	cbz	x0, d3b4 <PyInit__decimal@@Base+0x6850>
    d32c:	ldr	x8, [x0]
    d330:	subs	x8, x8, #0x1
    d334:	str	x8, [x0]
    d338:	b.ne	d130 <PyInit__decimal@@Base+0x65cc>  // b.any
    d33c:	bl	65c0 <_Py_Dealloc@plt>
    d340:	b	d130 <PyInit__decimal@@Base+0x65cc>
    d344:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d348:	add	x0, x0, #0x320
    d34c:	mov	x1, x19
    d350:	mov	x2, x20
    d354:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    d358:	mov	x19, x0
    d35c:	cbnz	x0, d180 <PyInit__decimal@@Base+0x661c>
    d360:	b	d398 <PyInit__decimal@@Base+0x6834>
    d364:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d368:	add	x0, x0, #0x320
    d36c:	mov	x1, x20
    d370:	mov	x2, x21
    d374:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    d378:	mov	x20, x0
    d37c:	cbnz	x0, d1b0 <PyInit__decimal@@Base+0x664c>
    d380:	ldr	x8, [x19]
    d384:	subs	x8, x8, #0x1
    d388:	str	x8, [x19]
    d38c:	b.ne	d398 <PyInit__decimal@@Base+0x6834>  // b.any
    d390:	mov	x0, x19
    d394:	bl	65c0 <_Py_Dealloc@plt>
    d398:	mov	x21, xzr
    d39c:	mov	x0, x21
    d3a0:	ldp	x20, x19, [sp, #64]
    d3a4:	ldp	x22, x21, [sp, #48]
    d3a8:	ldp	x29, x30, [sp, #32]
    d3ac:	add	sp, sp, #0x50
    d3b0:	ret
    d3b4:	ldr	x8, [x20]
    d3b8:	subs	x8, x8, #0x1
    d3bc:	str	x8, [x20]
    d3c0:	b.ne	d3cc <PyInit__decimal@@Base+0x6868>  // b.any
    d3c4:	mov	x0, x20
    d3c8:	bl	65c0 <_Py_Dealloc@plt>
    d3cc:	mov	x21, xzr
    d3d0:	str	xzr, [sp, #8]
    d3d4:	b	d39c <PyInit__decimal@@Base+0x6838>
    d3d8:	sub	sp, sp, #0x50
    d3dc:	stp	x29, x30, [sp, #32]
    d3e0:	stp	x22, x21, [sp, #48]
    d3e4:	stp	x20, x19, [sp, #64]
    d3e8:	add	x29, sp, #0x20
    d3ec:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    d3f0:	ldr	x20, [x20, #4008]
    d3f4:	mov	x8, x2
    d3f8:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    d3fc:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    d400:	mov	x19, x0
    d404:	add	x2, x2, #0x27b
    d408:	add	x3, x3, #0x6d0
    d40c:	add	x4, sp, #0x10
    d410:	add	x5, sp, #0x8
    d414:	mov	x0, x1
    d418:	mov	x1, x8
    d41c:	str	x20, [sp, #8]
    d420:	str	wzr, [sp, #4]
    d424:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    d428:	cbz	w0, d700 <PyInit__decimal@@Base+0x6b9c>
    d42c:	ldr	x8, [sp, #8]
    d430:	cmp	x8, x20
    d434:	b.eq	d478 <PyInit__decimal@@Base+0x6914>  // b.none
    d438:	ldr	x0, [x8, #8]
    d43c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    d440:	add	x8, x8, #0x4c0
    d444:	cmp	x0, x8
    d448:	b.eq	d4b4 <PyInit__decimal@@Base+0x6950>  // b.none
    d44c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d450:	add	x1, x1, #0x4c0
    d454:	bl	69b0 <PyType_IsSubtype@plt>
    d458:	cbnz	w0, d4b4 <PyInit__decimal@@Base+0x6950>
    d45c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    d460:	ldr	x8, [x8, #3936]
    d464:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    d468:	add	x1, x1, #0x131
    d46c:	ldr	x0, [x8]
    d470:	bl	6640 <PyErr_SetString@plt>
    d474:	b	d700 <PyInit__decimal@@Base+0x6b9c>
    d478:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    d47c:	ldr	x0, [x21, #1408]
    d480:	sub	x2, x29, #0x8
    d484:	mov	x1, xzr
    d488:	bl	6730 <PyContextVar_Get@plt>
    d48c:	tbnz	w0, #31, d734 <PyInit__decimal@@Base+0x6bd0>
    d490:	ldur	x20, [x29, #-8]
    d494:	cbz	x20, d648 <PyInit__decimal@@Base+0x6ae4>
    d498:	str	x20, [sp, #8]
    d49c:	ldr	x8, [x20]
    d4a0:	subs	x8, x8, #0x1
    d4a4:	str	x8, [x20]
    d4a8:	b.ne	d4b4 <PyInit__decimal@@Base+0x6950>  // b.any
    d4ac:	mov	x0, x20
    d4b0:	bl	65c0 <_Py_Dealloc@plt>
    d4b4:	ldr	x0, [x19, #8]
    d4b8:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    d4bc:	add	x21, x21, #0x320
    d4c0:	cmp	x0, x21
    d4c4:	b.eq	d4dc <PyInit__decimal@@Base+0x6978>  // b.none
    d4c8:	ldr	x20, [sp, #8]
    d4cc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d4d0:	add	x1, x1, #0x320
    d4d4:	bl	69b0 <PyType_IsSubtype@plt>
    d4d8:	cbz	w0, d5f0 <PyInit__decimal@@Base+0x6a8c>
    d4dc:	ldr	x8, [x19]
    d4e0:	add	x8, x8, #0x1
    d4e4:	str	x8, [x19]
    d4e8:	ldr	x20, [sp, #16]
    d4ec:	ldr	x0, [x20, #8]
    d4f0:	cmp	x0, x21
    d4f4:	b.eq	d50c <PyInit__decimal@@Base+0x69a8>  // b.none
    d4f8:	ldr	x21, [sp, #8]
    d4fc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d500:	add	x1, x1, #0x320
    d504:	bl	69b0 <PyType_IsSubtype@plt>
    d508:	cbz	w0, d61c <PyInit__decimal@@Base+0x6ab8>
    d50c:	ldr	x8, [x20]
    d510:	add	x8, x8, #0x1
    d514:	str	x8, [x20]
    d518:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d51c:	add	x0, x0, #0x320
    d520:	bl	6940 <_PyObject_New@plt>
    d524:	cbz	x0, d5c0 <PyInit__decimal@@Base+0x6a5c>
    d528:	mov	w8, #0x30                  	// #48
    d52c:	mov	x21, x0
    d530:	strb	w8, [x0, #24]!
    d534:	mov	x9, #0xffffffffffffffff    	// #-1
    d538:	mov	w10, #0x4                   	// #4
    d53c:	add	x8, x0, #0x30
    d540:	stur	x9, [x0, #-8]
    d544:	stp	xzr, xzr, [x0, #8]
    d548:	stp	xzr, x10, [x0, #24]
    d54c:	str	x8, [x0, #40]
    d550:	ldr	x8, [sp, #8]
    d554:	add	x1, x19, #0x18
    d558:	add	x2, x20, #0x18
    d55c:	add	x4, sp, #0x4
    d560:	add	x3, x8, #0x10
    d564:	bl	2a18c <PyInit__decimal@@Base+0x23628>
    d568:	ldr	x8, [x19]
    d56c:	subs	x8, x8, #0x1
    d570:	str	x8, [x19]
    d574:	b.ne	d580 <PyInit__decimal@@Base+0x6a1c>  // b.any
    d578:	mov	x0, x19
    d57c:	bl	65c0 <_Py_Dealloc@plt>
    d580:	ldr	x8, [x20]
    d584:	subs	x8, x8, #0x1
    d588:	str	x8, [x20]
    d58c:	b.ne	d598 <PyInit__decimal@@Base+0x6a34>  // b.any
    d590:	mov	x0, x20
    d594:	bl	65c0 <_Py_Dealloc@plt>
    d598:	ldr	x0, [sp, #8]
    d59c:	ldr	w1, [sp, #4]
    d5a0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    d5a4:	cbz	w0, d704 <PyInit__decimal@@Base+0x6ba0>
    d5a8:	ldr	x8, [x21]
    d5ac:	subs	x8, x8, #0x1
    d5b0:	str	x8, [x21]
    d5b4:	b.ne	d700 <PyInit__decimal@@Base+0x6b9c>  // b.any
    d5b8:	mov	x0, x21
    d5bc:	b	d6fc <PyInit__decimal@@Base+0x6b98>
    d5c0:	ldr	x8, [x19]
    d5c4:	subs	x8, x8, #0x1
    d5c8:	str	x8, [x19]
    d5cc:	b.ne	d5d8 <PyInit__decimal@@Base+0x6a74>  // b.any
    d5d0:	mov	x0, x19
    d5d4:	bl	65c0 <_Py_Dealloc@plt>
    d5d8:	ldr	x8, [x20]
    d5dc:	subs	x8, x8, #0x1
    d5e0:	str	x8, [x20]
    d5e4:	b.ne	d700 <PyInit__decimal@@Base+0x6b9c>  // b.any
    d5e8:	mov	x0, x20
    d5ec:	b	d6fc <PyInit__decimal@@Base+0x6b98>
    d5f0:	ldr	x8, [x19, #8]
    d5f4:	ldrb	w9, [x8, #171]
    d5f8:	tbnz	w9, #0, d6ac <PyInit__decimal@@Base+0x6b48>
    d5fc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    d600:	ldr	x9, [x9, #3936]
    d604:	ldr	x2, [x8, #24]
    d608:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    d60c:	add	x1, x1, #0xd63
    d610:	ldr	x0, [x9]
    d614:	bl	6a00 <PyErr_Format@plt>
    d618:	b	d700 <PyInit__decimal@@Base+0x6b9c>
    d61c:	ldr	x8, [x20, #8]
    d620:	ldrb	w9, [x8, #171]
    d624:	tbnz	w9, #0, d6cc <PyInit__decimal@@Base+0x6b68>
    d628:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    d62c:	ldr	x9, [x9, #3936]
    d630:	ldr	x2, [x8, #24]
    d634:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    d638:	add	x1, x1, #0xd63
    d63c:	ldr	x0, [x9]
    d640:	bl	6a00 <PyErr_Format@plt>
    d644:	b	d6e8 <PyInit__decimal@@Base+0x6b84>
    d648:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    d64c:	ldr	x22, [x8, #1504]
    d650:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d654:	add	x0, x0, #0x4c0
    d658:	mov	x1, xzr
    d65c:	bl	6830 <PyObject_CallObject@plt>
    d660:	cbz	x0, d734 <PyInit__decimal@@Base+0x6bd0>
    d664:	ldp	q1, q0, [x22, #32]
    d668:	ldr	q2, [x22, #16]
    d66c:	mov	x20, x0
    d670:	mov	x1, x20
    d674:	stp	q1, q0, [x0, #32]
    d678:	str	q2, [x0, #16]
    d67c:	ldr	w8, [x22, #80]
    d680:	stp	wzr, wzr, [x0, #44]
    d684:	str	w8, [x0, #80]
    d688:	ldr	x0, [x21, #1408]
    d68c:	bl	6670 <PyContextVar_Set@plt>
    d690:	cbz	x0, d71c <PyInit__decimal@@Base+0x6bb8>
    d694:	ldr	x8, [x0]
    d698:	subs	x8, x8, #0x1
    d69c:	str	x8, [x0]
    d6a0:	b.ne	d498 <PyInit__decimal@@Base+0x6934>  // b.any
    d6a4:	bl	65c0 <_Py_Dealloc@plt>
    d6a8:	b	d498 <PyInit__decimal@@Base+0x6934>
    d6ac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d6b0:	add	x0, x0, #0x320
    d6b4:	mov	x1, x19
    d6b8:	mov	x2, x20
    d6bc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    d6c0:	mov	x19, x0
    d6c4:	cbnz	x0, d4e8 <PyInit__decimal@@Base+0x6984>
    d6c8:	b	d700 <PyInit__decimal@@Base+0x6b9c>
    d6cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d6d0:	add	x0, x0, #0x320
    d6d4:	mov	x1, x20
    d6d8:	mov	x2, x21
    d6dc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    d6e0:	mov	x20, x0
    d6e4:	cbnz	x0, d518 <PyInit__decimal@@Base+0x69b4>
    d6e8:	ldr	x8, [x19]
    d6ec:	subs	x8, x8, #0x1
    d6f0:	str	x8, [x19]
    d6f4:	b.ne	d700 <PyInit__decimal@@Base+0x6b9c>  // b.any
    d6f8:	mov	x0, x19
    d6fc:	bl	65c0 <_Py_Dealloc@plt>
    d700:	mov	x21, xzr
    d704:	mov	x0, x21
    d708:	ldp	x20, x19, [sp, #64]
    d70c:	ldp	x22, x21, [sp, #48]
    d710:	ldp	x29, x30, [sp, #32]
    d714:	add	sp, sp, #0x50
    d718:	ret
    d71c:	ldr	x8, [x20]
    d720:	subs	x8, x8, #0x1
    d724:	str	x8, [x20]
    d728:	b.ne	d734 <PyInit__decimal@@Base+0x6bd0>  // b.any
    d72c:	mov	x0, x20
    d730:	bl	65c0 <_Py_Dealloc@plt>
    d734:	mov	x21, xzr
    d738:	str	xzr, [sp, #8]
    d73c:	b	d704 <PyInit__decimal@@Base+0x6ba0>
    d740:	sub	sp, sp, #0x90
    d744:	stp	x29, x30, [sp, #80]
    d748:	str	x23, [sp, #96]
    d74c:	stp	x22, x21, [sp, #112]
    d750:	stp	x20, x19, [sp, #128]
    d754:	add	x29, sp, #0x50
    d758:	adrp	x21, 49000 <PyInit__decimal@@Base+0x4249c>
    d75c:	ldr	x21, [x21, #4008]
    d760:	mov	x8, x2
    d764:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    d768:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    d76c:	mov	x19, x0
    d770:	add	x2, x2, #0x24b
    d774:	add	x3, x3, #0x6e8
    d778:	sub	x4, x29, #0x10
    d77c:	add	x5, x29, #0x18
    d780:	sub	x6, x29, #0x8
    d784:	mov	x0, x1
    d788:	mov	x1, x8
    d78c:	str	x21, [x29, #24]
    d790:	stur	x21, [x29, #-8]
    d794:	stur	wzr, [x29, #-20]
    d798:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    d79c:	cbz	w0, dabc <PyInit__decimal@@Base+0x6f58>
    d7a0:	ldur	x8, [x29, #-8]
    d7a4:	cmp	x8, x21
    d7a8:	b.eq	d7e4 <PyInit__decimal@@Base+0x6c80>  // b.none
    d7ac:	ldr	x0, [x8, #8]
    d7b0:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    d7b4:	add	x8, x8, #0x4c0
    d7b8:	cmp	x0, x8
    d7bc:	b.eq	d820 <PyInit__decimal@@Base+0x6cbc>  // b.none
    d7c0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d7c4:	add	x1, x1, #0x4c0
    d7c8:	bl	69b0 <PyType_IsSubtype@plt>
    d7cc:	cbnz	w0, d820 <PyInit__decimal@@Base+0x6cbc>
    d7d0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    d7d4:	ldr	x8, [x8, #3936]
    d7d8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    d7dc:	add	x1, x1, #0x131
    d7e0:	b	d9a0 <PyInit__decimal@@Base+0x6e3c>
    d7e4:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
    d7e8:	ldr	x0, [x22, #1408]
    d7ec:	mov	x2, sp
    d7f0:	mov	x1, xzr
    d7f4:	bl	6730 <PyContextVar_Get@plt>
    d7f8:	tbnz	w0, #31, daf4 <PyInit__decimal@@Base+0x6f90>
    d7fc:	ldr	x20, [sp]
    d800:	cbz	x20, d9d8 <PyInit__decimal@@Base+0x6e74>
    d804:	stur	x20, [x29, #-8]
    d808:	ldr	x8, [x20]
    d80c:	subs	x8, x8, #0x1
    d810:	str	x8, [x20]
    d814:	b.ne	d820 <PyInit__decimal@@Base+0x6cbc>  // b.any
    d818:	mov	x0, x20
    d81c:	bl	65c0 <_Py_Dealloc@plt>
    d820:	ldur	x20, [x29, #-8]
    d824:	ldr	x0, [x29, #24]
    d828:	ldp	q0, q1, [x20, #16]
    d82c:	ldr	q2, [x20, #48]
    d830:	cmp	x0, x21
    d834:	stp	q0, q1, [sp]
    d838:	str	q2, [sp, #32]
    d83c:	b.eq	d85c <PyInit__decimal@@Base+0x6cf8>  // b.none
    d840:	bl	124ac <PyInit__decimal@@Base+0xb948>
    d844:	tbnz	w0, #31, dabc <PyInit__decimal@@Base+0x6f58>
    d848:	mov	w1, w0
    d84c:	mov	x0, sp
    d850:	bl	1c0ac <PyInit__decimal@@Base+0x15548>
    d854:	cbz	w0, d990 <PyInit__decimal@@Base+0x6e2c>
    d858:	ldur	x20, [x29, #-8]
    d85c:	ldr	x0, [x19, #8]
    d860:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    d864:	add	x21, x21, #0x320
    d868:	cmp	x0, x21
    d86c:	b.eq	d880 <PyInit__decimal@@Base+0x6d1c>  // b.none
    d870:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d874:	add	x1, x1, #0x320
    d878:	bl	69b0 <PyType_IsSubtype@plt>
    d87c:	cbz	w0, d9ac <PyInit__decimal@@Base+0x6e48>
    d880:	ldr	x8, [x19]
    d884:	add	x8, x8, #0x1
    d888:	str	x8, [x19]
    d88c:	ldur	x20, [x29, #-16]
    d890:	ldr	x0, [x20, #8]
    d894:	cmp	x0, x21
    d898:	b.eq	d8b0 <PyInit__decimal@@Base+0x6d4c>  // b.none
    d89c:	ldur	x21, [x29, #-8]
    d8a0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    d8a4:	add	x1, x1, #0x320
    d8a8:	bl	69b0 <PyType_IsSubtype@plt>
    d8ac:	cbz	w0, da3c <PyInit__decimal@@Base+0x6ed8>
    d8b0:	ldr	x8, [x20]
    d8b4:	add	x8, x8, #0x1
    d8b8:	str	x8, [x20]
    d8bc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d8c0:	add	x0, x0, #0x320
    d8c4:	bl	6940 <_PyObject_New@plt>
    d8c8:	cbz	x0, d960 <PyInit__decimal@@Base+0x6dfc>
    d8cc:	mov	w8, #0x30                  	// #48
    d8d0:	mov	x21, x0
    d8d4:	strb	w8, [x0, #24]!
    d8d8:	mov	x9, #0xffffffffffffffff    	// #-1
    d8dc:	mov	w10, #0x4                   	// #4
    d8e0:	add	x1, x19, #0x18
    d8e4:	add	x8, x0, #0x30
    d8e8:	add	x2, x20, #0x18
    d8ec:	mov	x3, sp
    d8f0:	sub	x4, x29, #0x14
    d8f4:	stur	x9, [x0, #-8]
    d8f8:	stp	xzr, xzr, [x0, #8]
    d8fc:	stp	xzr, x10, [x0, #24]
    d900:	str	x8, [x0, #40]
    d904:	bl	2b984 <PyInit__decimal@@Base+0x24e20>
    d908:	ldr	x8, [x19]
    d90c:	subs	x8, x8, #0x1
    d910:	str	x8, [x19]
    d914:	b.ne	d920 <PyInit__decimal@@Base+0x6dbc>  // b.any
    d918:	mov	x0, x19
    d91c:	bl	65c0 <_Py_Dealloc@plt>
    d920:	ldr	x8, [x20]
    d924:	subs	x8, x8, #0x1
    d928:	str	x8, [x20]
    d92c:	b.ne	d938 <PyInit__decimal@@Base+0x6dd4>  // b.any
    d930:	mov	x0, x20
    d934:	bl	65c0 <_Py_Dealloc@plt>
    d938:	ldur	x0, [x29, #-8]
    d93c:	ldur	w1, [x29, #-20]
    d940:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    d944:	cbz	w0, dac0 <PyInit__decimal@@Base+0x6f5c>
    d948:	ldr	x8, [x21]
    d94c:	subs	x8, x8, #0x1
    d950:	str	x8, [x21]
    d954:	b.ne	dabc <PyInit__decimal@@Base+0x6f58>  // b.any
    d958:	mov	x0, x21
    d95c:	b	dab8 <PyInit__decimal@@Base+0x6f54>
    d960:	ldr	x8, [x19]
    d964:	subs	x8, x8, #0x1
    d968:	str	x8, [x19]
    d96c:	b.ne	d978 <PyInit__decimal@@Base+0x6e14>  // b.any
    d970:	mov	x0, x19
    d974:	bl	65c0 <_Py_Dealloc@plt>
    d978:	ldr	x8, [x20]
    d97c:	subs	x8, x8, #0x1
    d980:	str	x8, [x20]
    d984:	b.ne	dabc <PyInit__decimal@@Base+0x6f58>  // b.any
    d988:	mov	x0, x20
    d98c:	b	dab8 <PyInit__decimal@@Base+0x6f54>
    d990:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    d994:	ldr	x8, [x8, #3920]
    d998:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    d99c:	add	x1, x1, #0x250
    d9a0:	ldr	x0, [x8]
    d9a4:	bl	6640 <PyErr_SetString@plt>
    d9a8:	b	dabc <PyInit__decimal@@Base+0x6f58>
    d9ac:	ldr	x8, [x19, #8]
    d9b0:	ldrb	w9, [x8, #171]
    d9b4:	tbnz	w9, #0, da68 <PyInit__decimal@@Base+0x6f04>
    d9b8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    d9bc:	ldr	x9, [x9, #3936]
    d9c0:	ldr	x2, [x8, #24]
    d9c4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    d9c8:	add	x1, x1, #0xd63
    d9cc:	ldr	x0, [x9]
    d9d0:	bl	6a00 <PyErr_Format@plt>
    d9d4:	b	dabc <PyInit__decimal@@Base+0x6f58>
    d9d8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    d9dc:	ldr	x23, [x8, #1504]
    d9e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    d9e4:	add	x0, x0, #0x4c0
    d9e8:	mov	x1, xzr
    d9ec:	bl	6830 <PyObject_CallObject@plt>
    d9f0:	cbz	x0, daf4 <PyInit__decimal@@Base+0x6f90>
    d9f4:	ldp	q1, q0, [x23, #32]
    d9f8:	ldr	q2, [x23, #16]
    d9fc:	mov	x20, x0
    da00:	mov	x1, x20
    da04:	stp	q1, q0, [x0, #32]
    da08:	str	q2, [x0, #16]
    da0c:	ldr	w8, [x23, #80]
    da10:	stp	wzr, wzr, [x0, #44]
    da14:	str	w8, [x0, #80]
    da18:	ldr	x0, [x22, #1408]
    da1c:	bl	6670 <PyContextVar_Set@plt>
    da20:	cbz	x0, dadc <PyInit__decimal@@Base+0x6f78>
    da24:	ldr	x8, [x0]
    da28:	subs	x8, x8, #0x1
    da2c:	str	x8, [x0]
    da30:	b.ne	d804 <PyInit__decimal@@Base+0x6ca0>  // b.any
    da34:	bl	65c0 <_Py_Dealloc@plt>
    da38:	b	d804 <PyInit__decimal@@Base+0x6ca0>
    da3c:	ldr	x8, [x20, #8]
    da40:	ldrb	w9, [x8, #171]
    da44:	tbnz	w9, #0, da88 <PyInit__decimal@@Base+0x6f24>
    da48:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    da4c:	ldr	x9, [x9, #3936]
    da50:	ldr	x2, [x8, #24]
    da54:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    da58:	add	x1, x1, #0xd63
    da5c:	ldr	x0, [x9]
    da60:	bl	6a00 <PyErr_Format@plt>
    da64:	b	daa4 <PyInit__decimal@@Base+0x6f40>
    da68:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    da6c:	add	x0, x0, #0x320
    da70:	mov	x1, x19
    da74:	mov	x2, x20
    da78:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    da7c:	mov	x19, x0
    da80:	cbnz	x0, d88c <PyInit__decimal@@Base+0x6d28>
    da84:	b	dabc <PyInit__decimal@@Base+0x6f58>
    da88:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    da8c:	add	x0, x0, #0x320
    da90:	mov	x1, x20
    da94:	mov	x2, x21
    da98:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    da9c:	mov	x20, x0
    daa0:	cbnz	x0, d8bc <PyInit__decimal@@Base+0x6d58>
    daa4:	ldr	x8, [x19]
    daa8:	subs	x8, x8, #0x1
    daac:	str	x8, [x19]
    dab0:	b.ne	dabc <PyInit__decimal@@Base+0x6f58>  // b.any
    dab4:	mov	x0, x19
    dab8:	bl	65c0 <_Py_Dealloc@plt>
    dabc:	mov	x21, xzr
    dac0:	mov	x0, x21
    dac4:	ldp	x20, x19, [sp, #128]
    dac8:	ldp	x22, x21, [sp, #112]
    dacc:	ldr	x23, [sp, #96]
    dad0:	ldp	x29, x30, [sp, #80]
    dad4:	add	sp, sp, #0x90
    dad8:	ret
    dadc:	ldr	x8, [x20]
    dae0:	subs	x8, x8, #0x1
    dae4:	str	x8, [x20]
    dae8:	b.ne	daf4 <PyInit__decimal@@Base+0x6f90>  // b.any
    daec:	mov	x0, x20
    daf0:	bl	65c0 <_Py_Dealloc@plt>
    daf4:	mov	x21, xzr
    daf8:	stur	xzr, [x29, #-8]
    dafc:	b	dac0 <PyInit__decimal@@Base+0x6f5c>
    db00:	sub	sp, sp, #0x50
    db04:	stp	x29, x30, [sp, #32]
    db08:	stp	x22, x21, [sp, #48]
    db0c:	stp	x20, x19, [sp, #64]
    db10:	add	x29, sp, #0x20
    db14:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    db18:	ldr	x20, [x20, #4008]
    db1c:	mov	x8, x2
    db20:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    db24:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    db28:	mov	x19, x0
    db2c:	add	x2, x2, #0x27b
    db30:	add	x3, x3, #0x708
    db34:	add	x4, sp, #0x10
    db38:	add	x5, sp, #0x8
    db3c:	mov	x0, x1
    db40:	mov	x1, x8
    db44:	str	x20, [sp, #8]
    db48:	str	wzr, [sp, #4]
    db4c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    db50:	cbz	w0, de28 <PyInit__decimal@@Base+0x72c4>
    db54:	ldr	x8, [sp, #8]
    db58:	cmp	x8, x20
    db5c:	b.eq	dba0 <PyInit__decimal@@Base+0x703c>  // b.none
    db60:	ldr	x0, [x8, #8]
    db64:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    db68:	add	x8, x8, #0x4c0
    db6c:	cmp	x0, x8
    db70:	b.eq	dbdc <PyInit__decimal@@Base+0x7078>  // b.none
    db74:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    db78:	add	x1, x1, #0x4c0
    db7c:	bl	69b0 <PyType_IsSubtype@plt>
    db80:	cbnz	w0, dbdc <PyInit__decimal@@Base+0x7078>
    db84:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    db88:	ldr	x8, [x8, #3936]
    db8c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    db90:	add	x1, x1, #0x131
    db94:	ldr	x0, [x8]
    db98:	bl	6640 <PyErr_SetString@plt>
    db9c:	b	de28 <PyInit__decimal@@Base+0x72c4>
    dba0:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    dba4:	ldr	x0, [x21, #1408]
    dba8:	sub	x2, x29, #0x8
    dbac:	mov	x1, xzr
    dbb0:	bl	6730 <PyContextVar_Get@plt>
    dbb4:	tbnz	w0, #31, de5c <PyInit__decimal@@Base+0x72f8>
    dbb8:	ldur	x20, [x29, #-8]
    dbbc:	cbz	x20, dd70 <PyInit__decimal@@Base+0x720c>
    dbc0:	str	x20, [sp, #8]
    dbc4:	ldr	x8, [x20]
    dbc8:	subs	x8, x8, #0x1
    dbcc:	str	x8, [x20]
    dbd0:	b.ne	dbdc <PyInit__decimal@@Base+0x7078>  // b.any
    dbd4:	mov	x0, x20
    dbd8:	bl	65c0 <_Py_Dealloc@plt>
    dbdc:	ldr	x0, [x19, #8]
    dbe0:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    dbe4:	add	x21, x21, #0x320
    dbe8:	cmp	x0, x21
    dbec:	b.eq	dc04 <PyInit__decimal@@Base+0x70a0>  // b.none
    dbf0:	ldr	x20, [sp, #8]
    dbf4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    dbf8:	add	x1, x1, #0x320
    dbfc:	bl	69b0 <PyType_IsSubtype@plt>
    dc00:	cbz	w0, dd18 <PyInit__decimal@@Base+0x71b4>
    dc04:	ldr	x8, [x19]
    dc08:	add	x8, x8, #0x1
    dc0c:	str	x8, [x19]
    dc10:	ldr	x20, [sp, #16]
    dc14:	ldr	x0, [x20, #8]
    dc18:	cmp	x0, x21
    dc1c:	b.eq	dc34 <PyInit__decimal@@Base+0x70d0>  // b.none
    dc20:	ldr	x21, [sp, #8]
    dc24:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    dc28:	add	x1, x1, #0x320
    dc2c:	bl	69b0 <PyType_IsSubtype@plt>
    dc30:	cbz	w0, dd44 <PyInit__decimal@@Base+0x71e0>
    dc34:	ldr	x8, [x20]
    dc38:	add	x8, x8, #0x1
    dc3c:	str	x8, [x20]
    dc40:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    dc44:	add	x0, x0, #0x320
    dc48:	bl	6940 <_PyObject_New@plt>
    dc4c:	cbz	x0, dce8 <PyInit__decimal@@Base+0x7184>
    dc50:	mov	w8, #0x30                  	// #48
    dc54:	mov	x21, x0
    dc58:	strb	w8, [x0, #24]!
    dc5c:	mov	x9, #0xffffffffffffffff    	// #-1
    dc60:	mov	w10, #0x4                   	// #4
    dc64:	add	x8, x0, #0x30
    dc68:	stur	x9, [x0, #-8]
    dc6c:	stp	xzr, xzr, [x0, #8]
    dc70:	stp	xzr, x10, [x0, #24]
    dc74:	str	x8, [x0, #40]
    dc78:	ldr	x8, [sp, #8]
    dc7c:	add	x1, x19, #0x18
    dc80:	add	x2, x20, #0x18
    dc84:	add	x4, sp, #0x4
    dc88:	add	x3, x8, #0x10
    dc8c:	bl	2bf14 <PyInit__decimal@@Base+0x253b0>
    dc90:	ldr	x8, [x19]
    dc94:	subs	x8, x8, #0x1
    dc98:	str	x8, [x19]
    dc9c:	b.ne	dca8 <PyInit__decimal@@Base+0x7144>  // b.any
    dca0:	mov	x0, x19
    dca4:	bl	65c0 <_Py_Dealloc@plt>
    dca8:	ldr	x8, [x20]
    dcac:	subs	x8, x8, #0x1
    dcb0:	str	x8, [x20]
    dcb4:	b.ne	dcc0 <PyInit__decimal@@Base+0x715c>  // b.any
    dcb8:	mov	x0, x20
    dcbc:	bl	65c0 <_Py_Dealloc@plt>
    dcc0:	ldr	x0, [sp, #8]
    dcc4:	ldr	w1, [sp, #4]
    dcc8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    dccc:	cbz	w0, de2c <PyInit__decimal@@Base+0x72c8>
    dcd0:	ldr	x8, [x21]
    dcd4:	subs	x8, x8, #0x1
    dcd8:	str	x8, [x21]
    dcdc:	b.ne	de28 <PyInit__decimal@@Base+0x72c4>  // b.any
    dce0:	mov	x0, x21
    dce4:	b	de24 <PyInit__decimal@@Base+0x72c0>
    dce8:	ldr	x8, [x19]
    dcec:	subs	x8, x8, #0x1
    dcf0:	str	x8, [x19]
    dcf4:	b.ne	dd00 <PyInit__decimal@@Base+0x719c>  // b.any
    dcf8:	mov	x0, x19
    dcfc:	bl	65c0 <_Py_Dealloc@plt>
    dd00:	ldr	x8, [x20]
    dd04:	subs	x8, x8, #0x1
    dd08:	str	x8, [x20]
    dd0c:	b.ne	de28 <PyInit__decimal@@Base+0x72c4>  // b.any
    dd10:	mov	x0, x20
    dd14:	b	de24 <PyInit__decimal@@Base+0x72c0>
    dd18:	ldr	x8, [x19, #8]
    dd1c:	ldrb	w9, [x8, #171]
    dd20:	tbnz	w9, #0, ddd4 <PyInit__decimal@@Base+0x7270>
    dd24:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    dd28:	ldr	x9, [x9, #3936]
    dd2c:	ldr	x2, [x8, #24]
    dd30:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    dd34:	add	x1, x1, #0xd63
    dd38:	ldr	x0, [x9]
    dd3c:	bl	6a00 <PyErr_Format@plt>
    dd40:	b	de28 <PyInit__decimal@@Base+0x72c4>
    dd44:	ldr	x8, [x20, #8]
    dd48:	ldrb	w9, [x8, #171]
    dd4c:	tbnz	w9, #0, ddf4 <PyInit__decimal@@Base+0x7290>
    dd50:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    dd54:	ldr	x9, [x9, #3936]
    dd58:	ldr	x2, [x8, #24]
    dd5c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    dd60:	add	x1, x1, #0xd63
    dd64:	ldr	x0, [x9]
    dd68:	bl	6a00 <PyErr_Format@plt>
    dd6c:	b	de10 <PyInit__decimal@@Base+0x72ac>
    dd70:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    dd74:	ldr	x22, [x8, #1504]
    dd78:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    dd7c:	add	x0, x0, #0x4c0
    dd80:	mov	x1, xzr
    dd84:	bl	6830 <PyObject_CallObject@plt>
    dd88:	cbz	x0, de5c <PyInit__decimal@@Base+0x72f8>
    dd8c:	ldp	q1, q0, [x22, #32]
    dd90:	ldr	q2, [x22, #16]
    dd94:	mov	x20, x0
    dd98:	mov	x1, x20
    dd9c:	stp	q1, q0, [x0, #32]
    dda0:	str	q2, [x0, #16]
    dda4:	ldr	w8, [x22, #80]
    dda8:	stp	wzr, wzr, [x0, #44]
    ddac:	str	w8, [x0, #80]
    ddb0:	ldr	x0, [x21, #1408]
    ddb4:	bl	6670 <PyContextVar_Set@plt>
    ddb8:	cbz	x0, de44 <PyInit__decimal@@Base+0x72e0>
    ddbc:	ldr	x8, [x0]
    ddc0:	subs	x8, x8, #0x1
    ddc4:	str	x8, [x0]
    ddc8:	b.ne	dbc0 <PyInit__decimal@@Base+0x705c>  // b.any
    ddcc:	bl	65c0 <_Py_Dealloc@plt>
    ddd0:	b	dbc0 <PyInit__decimal@@Base+0x705c>
    ddd4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ddd8:	add	x0, x0, #0x320
    dddc:	mov	x1, x19
    dde0:	mov	x2, x20
    dde4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    dde8:	mov	x19, x0
    ddec:	cbnz	x0, dc10 <PyInit__decimal@@Base+0x70ac>
    ddf0:	b	de28 <PyInit__decimal@@Base+0x72c4>
    ddf4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ddf8:	add	x0, x0, #0x320
    ddfc:	mov	x1, x20
    de00:	mov	x2, x21
    de04:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    de08:	mov	x20, x0
    de0c:	cbnz	x0, dc40 <PyInit__decimal@@Base+0x70dc>
    de10:	ldr	x8, [x19]
    de14:	subs	x8, x8, #0x1
    de18:	str	x8, [x19]
    de1c:	b.ne	de28 <PyInit__decimal@@Base+0x72c4>  // b.any
    de20:	mov	x0, x19
    de24:	bl	65c0 <_Py_Dealloc@plt>
    de28:	mov	x21, xzr
    de2c:	mov	x0, x21
    de30:	ldp	x20, x19, [sp, #64]
    de34:	ldp	x22, x21, [sp, #48]
    de38:	ldp	x29, x30, [sp, #32]
    de3c:	add	sp, sp, #0x50
    de40:	ret
    de44:	ldr	x8, [x20]
    de48:	subs	x8, x8, #0x1
    de4c:	str	x8, [x20]
    de50:	b.ne	de5c <PyInit__decimal@@Base+0x72f8>  // b.any
    de54:	mov	x0, x20
    de58:	bl	65c0 <_Py_Dealloc@plt>
    de5c:	mov	x21, xzr
    de60:	str	xzr, [sp, #8]
    de64:	b	de2c <PyInit__decimal@@Base+0x72c8>
    de68:	sub	sp, sp, #0x60
    de6c:	stp	x29, x30, [sp, #48]
    de70:	stp	x22, x21, [sp, #64]
    de74:	stp	x20, x19, [sp, #80]
    de78:	add	x29, sp, #0x30
    de7c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    de80:	ldr	x20, [x20, #4008]
    de84:	mov	x8, x2
    de88:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    de8c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    de90:	mov	x19, x0
    de94:	add	x2, x2, #0x27a
    de98:	add	x3, x3, #0x720
    de9c:	sub	x4, x29, #0x10
    dea0:	add	x5, sp, #0x18
    dea4:	add	x6, sp, #0x10
    dea8:	mov	x0, x1
    deac:	mov	x1, x8
    deb0:	str	x20, [sp, #16]
    deb4:	str	wzr, [sp, #12]
    deb8:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    debc:	cbz	w0, e270 <PyInit__decimal@@Base+0x770c>
    dec0:	ldr	x8, [sp, #16]
    dec4:	cmp	x8, x20
    dec8:	b.eq	df0c <PyInit__decimal@@Base+0x73a8>  // b.none
    decc:	ldr	x0, [x8, #8]
    ded0:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ded4:	add	x8, x8, #0x4c0
    ded8:	cmp	x0, x8
    dedc:	b.eq	df48 <PyInit__decimal@@Base+0x73e4>  // b.none
    dee0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    dee4:	add	x1, x1, #0x4c0
    dee8:	bl	69b0 <PyType_IsSubtype@plt>
    deec:	cbnz	w0, df48 <PyInit__decimal@@Base+0x73e4>
    def0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    def4:	ldr	x8, [x8, #3936]
    def8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    defc:	add	x1, x1, #0x131
    df00:	ldr	x0, [x8]
    df04:	bl	6640 <PyErr_SetString@plt>
    df08:	b	e270 <PyInit__decimal@@Base+0x770c>
    df0c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    df10:	ldr	x0, [x21, #1408]
    df14:	sub	x2, x29, #0x8
    df18:	mov	x1, xzr
    df1c:	bl	6730 <PyContextVar_Get@plt>
    df20:	tbnz	w0, #31, e2a4 <PyInit__decimal@@Base+0x7740>
    df24:	ldur	x20, [x29, #-8]
    df28:	cbz	x20, e16c <PyInit__decimal@@Base+0x7608>
    df2c:	str	x20, [sp, #16]
    df30:	ldr	x8, [x20]
    df34:	subs	x8, x8, #0x1
    df38:	str	x8, [x20]
    df3c:	b.ne	df48 <PyInit__decimal@@Base+0x73e4>  // b.any
    df40:	mov	x0, x20
    df44:	bl	65c0 <_Py_Dealloc@plt>
    df48:	ldr	x0, [x19, #8]
    df4c:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
    df50:	add	x22, x22, #0x320
    df54:	cmp	x0, x22
    df58:	b.eq	df70 <PyInit__decimal@@Base+0x740c>  // b.none
    df5c:	ldr	x20, [sp, #16]
    df60:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    df64:	add	x1, x1, #0x320
    df68:	bl	69b0 <PyType_IsSubtype@plt>
    df6c:	cbz	w0, e0a0 <PyInit__decimal@@Base+0x753c>
    df70:	ldr	x8, [x19]
    df74:	add	x8, x8, #0x1
    df78:	str	x8, [x19]
    df7c:	ldur	x20, [x29, #-16]
    df80:	ldr	x0, [x20, #8]
    df84:	cmp	x0, x22
    df88:	b.eq	dfa0 <PyInit__decimal@@Base+0x743c>  // b.none
    df8c:	ldr	x21, [sp, #16]
    df90:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    df94:	add	x1, x1, #0x320
    df98:	bl	69b0 <PyType_IsSubtype@plt>
    df9c:	cbz	w0, e114 <PyInit__decimal@@Base+0x75b0>
    dfa0:	ldr	x8, [x20]
    dfa4:	add	x8, x8, #0x1
    dfa8:	str	x8, [x20]
    dfac:	ldr	x21, [sp, #24]
    dfb0:	ldr	x0, [x21, #8]
    dfb4:	cmp	x0, x22
    dfb8:	b.eq	dfd0 <PyInit__decimal@@Base+0x746c>  // b.none
    dfbc:	ldr	x22, [sp, #16]
    dfc0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    dfc4:	add	x1, x1, #0x320
    dfc8:	bl	69b0 <PyType_IsSubtype@plt>
    dfcc:	cbz	w0, e140 <PyInit__decimal@@Base+0x75dc>
    dfd0:	ldr	x8, [x21]
    dfd4:	add	x8, x8, #0x1
    dfd8:	str	x8, [x21]
    dfdc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    dfe0:	add	x0, x0, #0x320
    dfe4:	bl	6940 <_PyObject_New@plt>
    dfe8:	cbz	x0, e0cc <PyInit__decimal@@Base+0x7568>
    dfec:	mov	w8, #0x30                  	// #48
    dff0:	mov	x22, x0
    dff4:	strb	w8, [x0, #24]!
    dff8:	mov	x9, #0xffffffffffffffff    	// #-1
    dffc:	mov	w10, #0x4                   	// #4
    e000:	add	x8, x0, #0x30
    e004:	stur	x9, [x0, #-8]
    e008:	stp	xzr, xzr, [x0, #8]
    e00c:	stp	xzr, x10, [x0, #24]
    e010:	str	x8, [x0, #40]
    e014:	ldr	x8, [sp, #16]
    e018:	add	x1, x19, #0x18
    e01c:	add	x2, x20, #0x18
    e020:	add	x3, x21, #0x18
    e024:	add	x4, x8, #0x10
    e028:	add	x5, sp, #0xc
    e02c:	bl	275c8 <PyInit__decimal@@Base+0x20a64>
    e030:	ldr	x8, [x19]
    e034:	subs	x8, x8, #0x1
    e038:	str	x8, [x19]
    e03c:	b.ne	e048 <PyInit__decimal@@Base+0x74e4>  // b.any
    e040:	mov	x0, x19
    e044:	bl	65c0 <_Py_Dealloc@plt>
    e048:	ldr	x8, [x20]
    e04c:	subs	x8, x8, #0x1
    e050:	str	x8, [x20]
    e054:	b.ne	e060 <PyInit__decimal@@Base+0x74fc>  // b.any
    e058:	mov	x0, x20
    e05c:	bl	65c0 <_Py_Dealloc@plt>
    e060:	ldr	x8, [x21]
    e064:	subs	x8, x8, #0x1
    e068:	str	x8, [x21]
    e06c:	b.ne	e078 <PyInit__decimal@@Base+0x7514>  // b.any
    e070:	mov	x0, x21
    e074:	bl	65c0 <_Py_Dealloc@plt>
    e078:	ldr	x0, [sp, #16]
    e07c:	ldr	w1, [sp, #12]
    e080:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    e084:	cbz	w0, e274 <PyInit__decimal@@Base+0x7710>
    e088:	ldr	x8, [x22]
    e08c:	subs	x8, x8, #0x1
    e090:	str	x8, [x22]
    e094:	b.ne	e270 <PyInit__decimal@@Base+0x770c>  // b.any
    e098:	mov	x0, x22
    e09c:	b	e26c <PyInit__decimal@@Base+0x7708>
    e0a0:	ldr	x8, [x19, #8]
    e0a4:	ldrb	w9, [x8, #171]
    e0a8:	tbnz	w9, #0, e1d0 <PyInit__decimal@@Base+0x766c>
    e0ac:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e0b0:	ldr	x9, [x9, #3936]
    e0b4:	ldr	x2, [x8, #24]
    e0b8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    e0bc:	add	x1, x1, #0xd63
    e0c0:	ldr	x0, [x9]
    e0c4:	bl	6a00 <PyErr_Format@plt>
    e0c8:	b	e270 <PyInit__decimal@@Base+0x770c>
    e0cc:	ldr	x8, [x19]
    e0d0:	subs	x8, x8, #0x1
    e0d4:	str	x8, [x19]
    e0d8:	b.ne	e0e4 <PyInit__decimal@@Base+0x7580>  // b.any
    e0dc:	mov	x0, x19
    e0e0:	bl	65c0 <_Py_Dealloc@plt>
    e0e4:	ldr	x8, [x20]
    e0e8:	subs	x8, x8, #0x1
    e0ec:	str	x8, [x20]
    e0f0:	b.ne	e0fc <PyInit__decimal@@Base+0x7598>  // b.any
    e0f4:	mov	x0, x20
    e0f8:	bl	65c0 <_Py_Dealloc@plt>
    e0fc:	ldr	x8, [x21]
    e100:	subs	x8, x8, #0x1
    e104:	str	x8, [x21]
    e108:	b.ne	e270 <PyInit__decimal@@Base+0x770c>  // b.any
    e10c:	mov	x0, x21
    e110:	b	e26c <PyInit__decimal@@Base+0x7708>
    e114:	ldr	x8, [x20, #8]
    e118:	ldrb	w9, [x8, #171]
    e11c:	tbnz	w9, #0, e1f0 <PyInit__decimal@@Base+0x768c>
    e120:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e124:	ldr	x9, [x9, #3936]
    e128:	ldr	x2, [x8, #24]
    e12c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    e130:	add	x1, x1, #0xd63
    e134:	ldr	x0, [x9]
    e138:	bl	6a00 <PyErr_Format@plt>
    e13c:	b	e20c <PyInit__decimal@@Base+0x76a8>
    e140:	ldr	x8, [x21, #8]
    e144:	ldrb	w9, [x8, #171]
    e148:	tbnz	w9, #0, e224 <PyInit__decimal@@Base+0x76c0>
    e14c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e150:	ldr	x9, [x9, #3936]
    e154:	ldr	x2, [x8, #24]
    e158:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    e15c:	add	x1, x1, #0xd63
    e160:	ldr	x0, [x9]
    e164:	bl	6a00 <PyErr_Format@plt>
    e168:	b	e240 <PyInit__decimal@@Base+0x76dc>
    e16c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    e170:	ldr	x22, [x8, #1504]
    e174:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e178:	add	x0, x0, #0x4c0
    e17c:	mov	x1, xzr
    e180:	bl	6830 <PyObject_CallObject@plt>
    e184:	cbz	x0, e2a4 <PyInit__decimal@@Base+0x7740>
    e188:	ldp	q1, q0, [x22, #32]
    e18c:	ldr	q2, [x22, #16]
    e190:	mov	x20, x0
    e194:	mov	x1, x20
    e198:	stp	q1, q0, [x0, #32]
    e19c:	str	q2, [x0, #16]
    e1a0:	ldr	w8, [x22, #80]
    e1a4:	stp	wzr, wzr, [x0, #44]
    e1a8:	str	w8, [x0, #80]
    e1ac:	ldr	x0, [x21, #1408]
    e1b0:	bl	6670 <PyContextVar_Set@plt>
    e1b4:	cbz	x0, e28c <PyInit__decimal@@Base+0x7728>
    e1b8:	ldr	x8, [x0]
    e1bc:	subs	x8, x8, #0x1
    e1c0:	str	x8, [x0]
    e1c4:	b.ne	df2c <PyInit__decimal@@Base+0x73c8>  // b.any
    e1c8:	bl	65c0 <_Py_Dealloc@plt>
    e1cc:	b	df2c <PyInit__decimal@@Base+0x73c8>
    e1d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e1d4:	add	x0, x0, #0x320
    e1d8:	mov	x1, x19
    e1dc:	mov	x2, x20
    e1e0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    e1e4:	mov	x19, x0
    e1e8:	cbnz	x0, df7c <PyInit__decimal@@Base+0x7418>
    e1ec:	b	e270 <PyInit__decimal@@Base+0x770c>
    e1f0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e1f4:	add	x0, x0, #0x320
    e1f8:	mov	x1, x20
    e1fc:	mov	x2, x21
    e200:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    e204:	mov	x20, x0
    e208:	cbnz	x0, dfac <PyInit__decimal@@Base+0x7448>
    e20c:	ldr	x8, [x19]
    e210:	subs	x8, x8, #0x1
    e214:	str	x8, [x19]
    e218:	b.ne	e270 <PyInit__decimal@@Base+0x770c>  // b.any
    e21c:	mov	x0, x19
    e220:	b	e26c <PyInit__decimal@@Base+0x7708>
    e224:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e228:	add	x0, x0, #0x320
    e22c:	mov	x1, x21
    e230:	mov	x2, x22
    e234:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    e238:	mov	x21, x0
    e23c:	cbnz	x0, dfdc <PyInit__decimal@@Base+0x7478>
    e240:	ldr	x8, [x19]
    e244:	subs	x8, x8, #0x1
    e248:	str	x8, [x19]
    e24c:	b.ne	e258 <PyInit__decimal@@Base+0x76f4>  // b.any
    e250:	mov	x0, x19
    e254:	bl	65c0 <_Py_Dealloc@plt>
    e258:	ldr	x8, [x20]
    e25c:	subs	x8, x8, #0x1
    e260:	str	x8, [x20]
    e264:	b.ne	e270 <PyInit__decimal@@Base+0x770c>  // b.any
    e268:	mov	x0, x20
    e26c:	bl	65c0 <_Py_Dealloc@plt>
    e270:	mov	x22, xzr
    e274:	mov	x0, x22
    e278:	ldp	x20, x19, [sp, #80]
    e27c:	ldp	x22, x21, [sp, #64]
    e280:	ldp	x29, x30, [sp, #48]
    e284:	add	sp, sp, #0x60
    e288:	ret
    e28c:	ldr	x8, [x20]
    e290:	subs	x8, x8, #0x1
    e294:	str	x8, [x20]
    e298:	b.ne	e2a4 <PyInit__decimal@@Base+0x7740>  // b.any
    e29c:	mov	x0, x20
    e2a0:	bl	65c0 <_Py_Dealloc@plt>
    e2a4:	mov	x22, xzr
    e2a8:	str	xzr, [sp, #16]
    e2ac:	b	e274 <PyInit__decimal@@Base+0x7710>
    e2b0:	stp	x29, x30, [sp, #-16]!
    e2b4:	mov	x29, sp
    e2b8:	add	x0, x0, #0x18
    e2bc:	bl	1fe58 <PyInit__decimal@@Base+0x192f4>
    e2c0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e2c4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e2c8:	ldr	x8, [x8, #4024]
    e2cc:	ldr	x9, [x9, #3976]
    e2d0:	cmp	w0, #0x0
    e2d4:	csel	x0, x9, x8, eq  // eq = none
    e2d8:	ldr	x8, [x0]
    e2dc:	add	x8, x8, #0x1
    e2e0:	str	x8, [x0]
    e2e4:	ldp	x29, x30, [sp], #16
    e2e8:	ret
    e2ec:	stp	x29, x30, [sp, #-16]!
    e2f0:	mov	x29, sp
    e2f4:	add	x0, x0, #0x18
    e2f8:	bl	1fe60 <PyInit__decimal@@Base+0x192fc>
    e2fc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e300:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e304:	ldr	x8, [x8, #4024]
    e308:	ldr	x9, [x9, #3976]
    e30c:	cmp	w0, #0x0
    e310:	csel	x0, x9, x8, eq  // eq = none
    e314:	ldr	x8, [x0]
    e318:	add	x8, x8, #0x1
    e31c:	str	x8, [x0]
    e320:	ldp	x29, x30, [sp], #16
    e324:	ret
    e328:	stp	x29, x30, [sp, #-16]!
    e32c:	mov	x29, sp
    e330:	add	x0, x0, #0x18
    e334:	bl	1fe70 <PyInit__decimal@@Base+0x1930c>
    e338:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e33c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e340:	ldr	x8, [x8, #4024]
    e344:	ldr	x9, [x9, #3976]
    e348:	cmp	w0, #0x0
    e34c:	csel	x0, x9, x8, eq  // eq = none
    e350:	ldr	x8, [x0]
    e354:	add	x8, x8, #0x1
    e358:	str	x8, [x0]
    e35c:	ldp	x29, x30, [sp], #16
    e360:	ret
    e364:	stp	x29, x30, [sp, #-16]!
    e368:	mov	x29, sp
    e36c:	add	x0, x0, #0x18
    e370:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
    e374:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e378:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e37c:	ldr	x8, [x8, #4024]
    e380:	ldr	x9, [x9, #3976]
    e384:	cmp	w0, #0x0
    e388:	csel	x0, x9, x8, eq  // eq = none
    e38c:	ldr	x8, [x0]
    e390:	add	x8, x8, #0x1
    e394:	str	x8, [x0]
    e398:	ldp	x29, x30, [sp], #16
    e39c:	ret
    e3a0:	stp	x29, x30, [sp, #-16]!
    e3a4:	mov	x29, sp
    e3a8:	add	x0, x0, #0x18
    e3ac:	bl	1fea4 <PyInit__decimal@@Base+0x19340>
    e3b0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e3b4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e3b8:	ldr	x8, [x8, #4024]
    e3bc:	ldr	x9, [x9, #3976]
    e3c0:	cmp	w0, #0x0
    e3c4:	csel	x0, x9, x8, eq  // eq = none
    e3c8:	ldr	x8, [x0]
    e3cc:	add	x8, x8, #0x1
    e3d0:	str	x8, [x0]
    e3d4:	ldp	x29, x30, [sp], #16
    e3d8:	ret
    e3dc:	stp	x29, x30, [sp, #-16]!
    e3e0:	mov	x29, sp
    e3e4:	add	x0, x0, #0x18
    e3e8:	bl	1febc <PyInit__decimal@@Base+0x19358>
    e3ec:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e3f0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e3f4:	ldr	x8, [x8, #4024]
    e3f8:	ldr	x9, [x9, #3976]
    e3fc:	cmp	w0, #0x0
    e400:	csel	x0, x9, x8, eq  // eq = none
    e404:	ldr	x8, [x0]
    e408:	add	x8, x8, #0x1
    e40c:	str	x8, [x0]
    e410:	ldp	x29, x30, [sp], #16
    e414:	ret
    e418:	stp	x29, x30, [sp, #-16]!
    e41c:	mov	x29, sp
    e420:	add	x0, x0, #0x18
    e424:	bl	1feb0 <PyInit__decimal@@Base+0x1934c>
    e428:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e42c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e430:	ldr	x8, [x8, #4024]
    e434:	ldr	x9, [x9, #3976]
    e438:	cmp	w0, #0x0
    e43c:	csel	x0, x9, x8, eq  // eq = none
    e440:	ldr	x8, [x0]
    e444:	add	x8, x8, #0x1
    e448:	str	x8, [x0]
    e44c:	ldp	x29, x30, [sp], #16
    e450:	ret
    e454:	stp	x29, x30, [sp, #-16]!
    e458:	mov	x29, sp
    e45c:	add	x0, x0, #0x18
    e460:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
    e464:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e468:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    e46c:	ldr	x8, [x8, #4024]
    e470:	ldr	x9, [x9, #3976]
    e474:	cmp	w0, #0x0
    e478:	csel	x0, x9, x8, eq  // eq = none
    e47c:	ldr	x8, [x0]
    e480:	add	x8, x8, #0x1
    e484:	str	x8, [x0]
    e488:	ldp	x29, x30, [sp], #16
    e48c:	ret
    e490:	sub	sp, sp, #0x40
    e494:	stp	x29, x30, [sp, #16]
    e498:	stp	x22, x21, [sp, #32]
    e49c:	stp	x20, x19, [sp, #48]
    e4a0:	add	x29, sp, #0x10
    e4a4:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    e4a8:	ldr	x20, [x20, #4008]
    e4ac:	mov	x8, x2
    e4b0:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    e4b4:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    e4b8:	mov	x19, x0
    e4bc:	add	x2, x2, #0x27c
    e4c0:	add	x3, x3, #0x740
    e4c4:	mov	x4, sp
    e4c8:	mov	x0, x1
    e4cc:	mov	x1, x8
    e4d0:	str	x20, [sp]
    e4d4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    e4d8:	cbz	w0, e524 <PyInit__decimal@@Base+0x79c0>
    e4dc:	ldr	x8, [sp]
    e4e0:	cmp	x8, x20
    e4e4:	b.eq	e52c <PyInit__decimal@@Base+0x79c8>  // b.none
    e4e8:	ldr	x0, [x8, #8]
    e4ec:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    e4f0:	add	x8, x8, #0x4c0
    e4f4:	cmp	x0, x8
    e4f8:	b.eq	e568 <PyInit__decimal@@Base+0x7a04>  // b.none
    e4fc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    e500:	add	x1, x1, #0x4c0
    e504:	bl	69b0 <PyType_IsSubtype@plt>
    e508:	cbnz	w0, e568 <PyInit__decimal@@Base+0x7a04>
    e50c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e510:	ldr	x8, [x8, #3936]
    e514:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    e518:	add	x1, x1, #0x131
    e51c:	ldr	x0, [x8]
    e520:	bl	6640 <PyErr_SetString@plt>
    e524:	mov	x0, xzr
    e528:	b	e624 <PyInit__decimal@@Base+0x7ac0>
    e52c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    e530:	ldr	x0, [x21, #1408]
    e534:	add	x2, sp, #0x8
    e538:	mov	x1, xzr
    e53c:	bl	6730 <PyContextVar_Get@plt>
    e540:	tbnz	w0, #31, e61c <PyInit__decimal@@Base+0x7ab8>
    e544:	ldr	x20, [sp, #8]
    e548:	cbz	x20, e5a0 <PyInit__decimal@@Base+0x7a3c>
    e54c:	str	x20, [sp]
    e550:	ldr	x8, [x20]
    e554:	subs	x8, x8, #0x1
    e558:	str	x8, [x20]
    e55c:	b.ne	e568 <PyInit__decimal@@Base+0x7a04>  // b.any
    e560:	mov	x0, x20
    e564:	bl	65c0 <_Py_Dealloc@plt>
    e568:	ldr	x8, [sp]
    e56c:	add	x0, x19, #0x18
    e570:	add	x1, x8, #0x10
    e574:	bl	1ff20 <PyInit__decimal@@Base+0x193bc>
    e578:	cbz	w0, e588 <PyInit__decimal@@Base+0x7a24>
    e57c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    e580:	ldr	x0, [x0, #4024]
    e584:	b	e590 <PyInit__decimal@@Base+0x7a2c>
    e588:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    e58c:	ldr	x0, [x0, #3976]
    e590:	ldr	x8, [x0]
    e594:	add	x8, x8, #0x1
    e598:	str	x8, [x0]
    e59c:	b	e624 <PyInit__decimal@@Base+0x7ac0>
    e5a0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    e5a4:	ldr	x22, [x8, #1504]
    e5a8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e5ac:	add	x0, x0, #0x4c0
    e5b0:	mov	x1, xzr
    e5b4:	bl	6830 <PyObject_CallObject@plt>
    e5b8:	cbz	x0, e61c <PyInit__decimal@@Base+0x7ab8>
    e5bc:	ldp	q1, q0, [x22, #32]
    e5c0:	ldr	q2, [x22, #16]
    e5c4:	mov	x20, x0
    e5c8:	mov	x1, x20
    e5cc:	stp	q1, q0, [x0, #32]
    e5d0:	str	q2, [x0, #16]
    e5d4:	ldr	w8, [x22, #80]
    e5d8:	stp	wzr, wzr, [x0, #44]
    e5dc:	str	w8, [x0, #80]
    e5e0:	ldr	x0, [x21, #1408]
    e5e4:	bl	6670 <PyContextVar_Set@plt>
    e5e8:	cbz	x0, e604 <PyInit__decimal@@Base+0x7aa0>
    e5ec:	ldr	x8, [x0]
    e5f0:	subs	x8, x8, #0x1
    e5f4:	str	x8, [x0]
    e5f8:	b.ne	e54c <PyInit__decimal@@Base+0x79e8>  // b.any
    e5fc:	bl	65c0 <_Py_Dealloc@plt>
    e600:	b	e54c <PyInit__decimal@@Base+0x79e8>
    e604:	ldr	x8, [x20]
    e608:	subs	x8, x8, #0x1
    e60c:	str	x8, [x20]
    e610:	b.ne	e61c <PyInit__decimal@@Base+0x7ab8>  // b.any
    e614:	mov	x0, x20
    e618:	bl	65c0 <_Py_Dealloc@plt>
    e61c:	mov	x0, xzr
    e620:	str	xzr, [sp]
    e624:	ldp	x20, x19, [sp, #48]
    e628:	ldp	x22, x21, [sp, #32]
    e62c:	ldp	x29, x30, [sp, #16]
    e630:	add	sp, sp, #0x40
    e634:	ret
    e638:	sub	sp, sp, #0x40
    e63c:	stp	x29, x30, [sp, #16]
    e640:	stp	x22, x21, [sp, #32]
    e644:	stp	x20, x19, [sp, #48]
    e648:	add	x29, sp, #0x10
    e64c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    e650:	ldr	x20, [x20, #4008]
    e654:	mov	x8, x2
    e658:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    e65c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    e660:	mov	x19, x0
    e664:	add	x2, x2, #0x27c
    e668:	add	x3, x3, #0x750
    e66c:	mov	x4, sp
    e670:	mov	x0, x1
    e674:	mov	x1, x8
    e678:	str	x20, [sp]
    e67c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    e680:	cbz	w0, e6cc <PyInit__decimal@@Base+0x7b68>
    e684:	ldr	x8, [sp]
    e688:	cmp	x8, x20
    e68c:	b.eq	e6d4 <PyInit__decimal@@Base+0x7b70>  // b.none
    e690:	ldr	x0, [x8, #8]
    e694:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    e698:	add	x8, x8, #0x4c0
    e69c:	cmp	x0, x8
    e6a0:	b.eq	e710 <PyInit__decimal@@Base+0x7bac>  // b.none
    e6a4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    e6a8:	add	x1, x1, #0x4c0
    e6ac:	bl	69b0 <PyType_IsSubtype@plt>
    e6b0:	cbnz	w0, e710 <PyInit__decimal@@Base+0x7bac>
    e6b4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    e6b8:	ldr	x8, [x8, #3936]
    e6bc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    e6c0:	add	x1, x1, #0x131
    e6c4:	ldr	x0, [x8]
    e6c8:	bl	6640 <PyErr_SetString@plt>
    e6cc:	mov	x0, xzr
    e6d0:	b	e7cc <PyInit__decimal@@Base+0x7c68>
    e6d4:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    e6d8:	ldr	x0, [x21, #1408]
    e6dc:	add	x2, sp, #0x8
    e6e0:	mov	x1, xzr
    e6e4:	bl	6730 <PyContextVar_Get@plt>
    e6e8:	tbnz	w0, #31, e7c4 <PyInit__decimal@@Base+0x7c60>
    e6ec:	ldr	x20, [sp, #8]
    e6f0:	cbz	x20, e748 <PyInit__decimal@@Base+0x7be4>
    e6f4:	str	x20, [sp]
    e6f8:	ldr	x8, [x20]
    e6fc:	subs	x8, x8, #0x1
    e700:	str	x8, [x20]
    e704:	b.ne	e710 <PyInit__decimal@@Base+0x7bac>  // b.any
    e708:	mov	x0, x20
    e70c:	bl	65c0 <_Py_Dealloc@plt>
    e710:	ldr	x8, [sp]
    e714:	add	x0, x19, #0x18
    e718:	add	x1, x8, #0x10
    e71c:	bl	1ff64 <PyInit__decimal@@Base+0x19400>
    e720:	cbz	w0, e730 <PyInit__decimal@@Base+0x7bcc>
    e724:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    e728:	ldr	x0, [x0, #4024]
    e72c:	b	e738 <PyInit__decimal@@Base+0x7bd4>
    e730:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
    e734:	ldr	x0, [x0, #3976]
    e738:	ldr	x8, [x0]
    e73c:	add	x8, x8, #0x1
    e740:	str	x8, [x0]
    e744:	b	e7cc <PyInit__decimal@@Base+0x7c68>
    e748:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    e74c:	ldr	x22, [x8, #1504]
    e750:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e754:	add	x0, x0, #0x4c0
    e758:	mov	x1, xzr
    e75c:	bl	6830 <PyObject_CallObject@plt>
    e760:	cbz	x0, e7c4 <PyInit__decimal@@Base+0x7c60>
    e764:	ldp	q1, q0, [x22, #32]
    e768:	ldr	q2, [x22, #16]
    e76c:	mov	x20, x0
    e770:	mov	x1, x20
    e774:	stp	q1, q0, [x0, #32]
    e778:	str	q2, [x0, #16]
    e77c:	ldr	w8, [x22, #80]
    e780:	stp	wzr, wzr, [x0, #44]
    e784:	str	w8, [x0, #80]
    e788:	ldr	x0, [x21, #1408]
    e78c:	bl	6670 <PyContextVar_Set@plt>
    e790:	cbz	x0, e7ac <PyInit__decimal@@Base+0x7c48>
    e794:	ldr	x8, [x0]
    e798:	subs	x8, x8, #0x1
    e79c:	str	x8, [x0]
    e7a0:	b.ne	e6f4 <PyInit__decimal@@Base+0x7b90>  // b.any
    e7a4:	bl	65c0 <_Py_Dealloc@plt>
    e7a8:	b	e6f4 <PyInit__decimal@@Base+0x7b90>
    e7ac:	ldr	x8, [x20]
    e7b0:	subs	x8, x8, #0x1
    e7b4:	str	x8, [x20]
    e7b8:	b.ne	e7c4 <PyInit__decimal@@Base+0x7c60>  // b.any
    e7bc:	mov	x0, x20
    e7c0:	bl	65c0 <_Py_Dealloc@plt>
    e7c4:	mov	x0, xzr
    e7c8:	str	xzr, [sp]
    e7cc:	ldp	x20, x19, [sp, #48]
    e7d0:	ldp	x22, x21, [sp, #32]
    e7d4:	ldp	x29, x30, [sp, #16]
    e7d8:	add	sp, sp, #0x40
    e7dc:	ret
    e7e0:	stp	x29, x30, [sp, #-32]!
    e7e4:	str	x19, [sp, #16]
    e7e8:	mov	x29, sp
    e7ec:	add	x19, x0, #0x18
    e7f0:	mov	x0, x19
    e7f4:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
    e7f8:	cbz	w0, e804 <PyInit__decimal@@Base+0x7ca0>
    e7fc:	mov	x0, xzr
    e800:	b	e80c <PyInit__decimal@@Base+0x7ca8>
    e804:	mov	x0, x19
    e808:	bl	1fb6c <PyInit__decimal@@Base+0x19008>
    e80c:	ldr	x19, [sp, #16]
    e810:	ldp	x29, x30, [sp], #32
    e814:	b	6690 <PyLong_FromSsize_t@plt>
    e818:	ldr	x8, [x0]
    e81c:	add	x8, x8, #0x1
    e820:	str	x8, [x0]
    e824:	ret
    e828:	ldr	x8, [x0]
    e82c:	add	x8, x8, #0x1
    e830:	str	x8, [x0]
    e834:	ret
    e838:	stp	x29, x30, [sp, #-48]!
    e83c:	str	x21, [sp, #16]
    e840:	stp	x20, x19, [sp, #32]
    e844:	mov	x29, sp
    e848:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e84c:	add	x0, x0, #0x320
    e850:	bl	6940 <_PyObject_New@plt>
    e854:	mov	x19, x0
    e858:	cbz	x0, e8a8 <PyInit__decimal@@Base+0x7d44>
    e85c:	mov	w8, #0xa                   	// #10
    e860:	mov	x21, x19
    e864:	adrp	x11, 31000 <PyInit__decimal@@Base+0x2a49c>
    e868:	str	x8, [x21, #72]!
    e86c:	ldr	q0, [x11, #2000]
    e870:	mov	x9, #0xffffffffffffffff    	// #-1
    e874:	mov	w10, #0x30                  	// #48
    e878:	mov	x20, x21
    e87c:	stur	x9, [x21, #-56]
    e880:	strb	w10, [x20, #-48]!
    e884:	mov	x0, x20
    e888:	mov	w1, wzr
    e88c:	stp	xzr, xzr, [x21, #-40]
    e890:	stur	x21, [x21, #-8]
    e894:	stur	q0, [x21, #-24]
    e898:	bl	2054c <PyInit__decimal@@Base+0x199e8>
    e89c:	mov	x0, x20
    e8a0:	stur	xzr, [x21, #-40]
    e8a4:	bl	20308 <PyInit__decimal@@Base+0x197a4>
    e8a8:	mov	x0, x19
    e8ac:	ldp	x20, x19, [sp, #32]
    e8b0:	ldr	x21, [sp, #16]
    e8b4:	ldp	x29, x30, [sp], #48
    e8b8:	ret
    e8bc:	sub	sp, sp, #0x30
    e8c0:	stp	x29, x30, [sp, #16]
    e8c4:	stp	x20, x19, [sp, #32]
    e8c8:	add	x29, sp, #0x10
    e8cc:	mov	x20, x0
    e8d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e8d4:	add	x0, x0, #0x320
    e8d8:	stur	wzr, [x29, #-4]
    e8dc:	bl	6940 <_PyObject_New@plt>
    e8e0:	mov	x19, x0
    e8e4:	cbz	x0, e944 <PyInit__decimal@@Base+0x7de0>
    e8e8:	mov	w8, #0x30                  	// #48
    e8ec:	mov	x0, x19
    e8f0:	strb	w8, [x0, #24]!
    e8f4:	mov	x9, #0xffffffffffffffff    	// #-1
    e8f8:	mov	w10, #0x4                   	// #4
    e8fc:	add	x8, x0, #0x30
    e900:	add	x1, x20, #0x18
    e904:	sub	x2, x29, #0x4
    e908:	stur	x9, [x0, #-8]
    e90c:	stp	xzr, xzr, [x0, #8]
    e910:	stp	xzr, x10, [x0, #24]
    e914:	str	x8, [x0, #40]
    e918:	bl	22084 <PyInit__decimal@@Base+0x1b520>
    e91c:	ldurb	w8, [x29, #-3]
    e920:	tbz	w8, #1, e944 <PyInit__decimal@@Base+0x7de0>
    e924:	ldr	x8, [x19]
    e928:	subs	x8, x8, #0x1
    e92c:	str	x8, [x19]
    e930:	b.ne	e93c <PyInit__decimal@@Base+0x7dd8>  // b.any
    e934:	mov	x0, x19
    e938:	bl	65c0 <_Py_Dealloc@plt>
    e93c:	bl	65d0 <PyErr_NoMemory@plt>
    e940:	mov	x19, xzr
    e944:	mov	x0, x19
    e948:	ldp	x20, x19, [sp, #32]
    e94c:	ldp	x29, x30, [sp, #16]
    e950:	add	sp, sp, #0x30
    e954:	ret
    e958:	sub	sp, sp, #0x30
    e95c:	stp	x29, x30, [sp, #16]
    e960:	stp	x20, x19, [sp, #32]
    e964:	add	x29, sp, #0x10
    e968:	mov	x20, x0
    e96c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    e970:	add	x0, x0, #0x320
    e974:	stur	wzr, [x29, #-4]
    e978:	bl	6940 <_PyObject_New@plt>
    e97c:	mov	x19, x0
    e980:	cbz	x0, e9e0 <PyInit__decimal@@Base+0x7e7c>
    e984:	mov	w8, #0x30                  	// #48
    e988:	mov	x0, x19
    e98c:	strb	w8, [x0, #24]!
    e990:	mov	x9, #0xffffffffffffffff    	// #-1
    e994:	mov	w10, #0x4                   	// #4
    e998:	add	x8, x0, #0x30
    e99c:	add	x1, x20, #0x18
    e9a0:	sub	x2, x29, #0x4
    e9a4:	stur	x9, [x0, #-8]
    e9a8:	stp	xzr, xzr, [x0, #8]
    e9ac:	stp	xzr, x10, [x0, #24]
    e9b0:	str	x8, [x0, #40]
    e9b4:	bl	220b8 <PyInit__decimal@@Base+0x1b554>
    e9b8:	ldurb	w8, [x29, #-3]
    e9bc:	tbz	w8, #1, e9e0 <PyInit__decimal@@Base+0x7e7c>
    e9c0:	ldr	x8, [x19]
    e9c4:	subs	x8, x8, #0x1
    e9c8:	str	x8, [x19]
    e9cc:	b.ne	e9d8 <PyInit__decimal@@Base+0x7e74>  // b.any
    e9d0:	mov	x0, x19
    e9d4:	bl	65c0 <_Py_Dealloc@plt>
    e9d8:	bl	65d0 <PyErr_NoMemory@plt>
    e9dc:	mov	x19, xzr
    e9e0:	mov	x0, x19
    e9e4:	ldp	x20, x19, [sp, #32]
    e9e8:	ldp	x29, x30, [sp, #16]
    e9ec:	add	sp, sp, #0x30
    e9f0:	ret
    e9f4:	sub	sp, sp, #0x50
    e9f8:	stp	x29, x30, [sp, #32]
    e9fc:	stp	x22, x21, [sp, #48]
    ea00:	stp	x20, x19, [sp, #64]
    ea04:	add	x29, sp, #0x20
    ea08:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    ea0c:	ldr	x20, [x20, #4008]
    ea10:	mov	x8, x2
    ea14:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    ea18:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    ea1c:	mov	x19, x0
    ea20:	add	x2, x2, #0x27c
    ea24:	add	x3, x3, #0x760
    ea28:	add	x4, sp, #0x10
    ea2c:	mov	x0, x1
    ea30:	mov	x1, x8
    ea34:	str	x20, [sp, #16]
    ea38:	str	wzr, [sp, #12]
    ea3c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    ea40:	cbz	w0, eb44 <PyInit__decimal@@Base+0x7fe0>
    ea44:	ldr	x8, [sp, #16]
    ea48:	cmp	x8, x20
    ea4c:	b.eq	ea90 <PyInit__decimal@@Base+0x7f2c>  // b.none
    ea50:	ldr	x0, [x8, #8]
    ea54:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ea58:	add	x8, x8, #0x4c0
    ea5c:	cmp	x0, x8
    ea60:	b.eq	eacc <PyInit__decimal@@Base+0x7f68>  // b.none
    ea64:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ea68:	add	x1, x1, #0x4c0
    ea6c:	bl	69b0 <PyType_IsSubtype@plt>
    ea70:	cbnz	w0, eacc <PyInit__decimal@@Base+0x7f68>
    ea74:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ea78:	ldr	x8, [x8, #3936]
    ea7c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    ea80:	add	x1, x1, #0x131
    ea84:	ldr	x0, [x8]
    ea88:	bl	6640 <PyErr_SetString@plt>
    ea8c:	b	eb44 <PyInit__decimal@@Base+0x7fe0>
    ea90:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    ea94:	ldr	x0, [x21, #1408]
    ea98:	sub	x2, x29, #0x8
    ea9c:	mov	x1, xzr
    eaa0:	bl	6730 <PyContextVar_Get@plt>
    eaa4:	tbnz	w0, #31, ebdc <PyInit__decimal@@Base+0x8078>
    eaa8:	ldur	x20, [x29, #-8]
    eaac:	cbz	x20, eb60 <PyInit__decimal@@Base+0x7ffc>
    eab0:	str	x20, [sp, #16]
    eab4:	ldr	x8, [x20]
    eab8:	subs	x8, x8, #0x1
    eabc:	str	x8, [x20]
    eac0:	b.ne	eacc <PyInit__decimal@@Base+0x7f68>  // b.any
    eac4:	mov	x0, x20
    eac8:	bl	65c0 <_Py_Dealloc@plt>
    eacc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ead0:	add	x0, x0, #0x320
    ead4:	bl	6940 <_PyObject_New@plt>
    ead8:	mov	x20, x0
    eadc:	cbz	x0, eb48 <PyInit__decimal@@Base+0x7fe4>
    eae0:	mov	w8, #0x30                  	// #48
    eae4:	mov	x0, x20
    eae8:	strb	w8, [x0, #24]!
    eaec:	mov	x9, #0xffffffffffffffff    	// #-1
    eaf0:	mov	w10, #0x4                   	// #4
    eaf4:	add	x8, x0, #0x30
    eaf8:	stur	x9, [x0, #-8]
    eafc:	stp	xzr, xzr, [x0, #8]
    eb00:	stp	xzr, x10, [x0, #24]
    eb04:	str	x8, [x0, #40]
    eb08:	ldr	x8, [sp, #16]
    eb0c:	add	x1, x19, #0x18
    eb10:	add	x3, sp, #0xc
    eb14:	add	x2, x8, #0x10
    eb18:	bl	238b8 <PyInit__decimal@@Base+0x1cd54>
    eb1c:	ldr	x0, [sp, #16]
    eb20:	ldr	w1, [sp, #12]
    eb24:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    eb28:	cbz	w0, eb48 <PyInit__decimal@@Base+0x7fe4>
    eb2c:	ldr	x8, [x20]
    eb30:	subs	x8, x8, #0x1
    eb34:	str	x8, [x20]
    eb38:	b.ne	eb44 <PyInit__decimal@@Base+0x7fe0>  // b.any
    eb3c:	mov	x0, x20
    eb40:	bl	65c0 <_Py_Dealloc@plt>
    eb44:	mov	x20, xzr
    eb48:	mov	x0, x20
    eb4c:	ldp	x20, x19, [sp, #64]
    eb50:	ldp	x22, x21, [sp, #48]
    eb54:	ldp	x29, x30, [sp, #32]
    eb58:	add	sp, sp, #0x50
    eb5c:	ret
    eb60:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    eb64:	ldr	x22, [x8, #1504]
    eb68:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    eb6c:	add	x0, x0, #0x4c0
    eb70:	mov	x1, xzr
    eb74:	bl	6830 <PyObject_CallObject@plt>
    eb78:	cbz	x0, ebdc <PyInit__decimal@@Base+0x8078>
    eb7c:	ldp	q1, q0, [x22, #32]
    eb80:	ldr	q2, [x22, #16]
    eb84:	mov	x20, x0
    eb88:	mov	x1, x20
    eb8c:	stp	q1, q0, [x0, #32]
    eb90:	str	q2, [x0, #16]
    eb94:	ldr	w8, [x22, #80]
    eb98:	stp	wzr, wzr, [x0, #44]
    eb9c:	str	w8, [x0, #80]
    eba0:	ldr	x0, [x21, #1408]
    eba4:	bl	6670 <PyContextVar_Set@plt>
    eba8:	cbz	x0, ebc4 <PyInit__decimal@@Base+0x8060>
    ebac:	ldr	x8, [x0]
    ebb0:	subs	x8, x8, #0x1
    ebb4:	str	x8, [x0]
    ebb8:	b.ne	eab0 <PyInit__decimal@@Base+0x7f4c>  // b.any
    ebbc:	bl	65c0 <_Py_Dealloc@plt>
    ebc0:	b	eab0 <PyInit__decimal@@Base+0x7f4c>
    ebc4:	ldr	x8, [x20]
    ebc8:	subs	x8, x8, #0x1
    ebcc:	str	x8, [x20]
    ebd0:	b.ne	ebdc <PyInit__decimal@@Base+0x8078>  // b.any
    ebd4:	mov	x0, x20
    ebd8:	bl	65c0 <_Py_Dealloc@plt>
    ebdc:	mov	x20, xzr
    ebe0:	str	xzr, [sp, #16]
    ebe4:	b	eb48 <PyInit__decimal@@Base+0x7fe4>
    ebe8:	sub	sp, sp, #0x50
    ebec:	stp	x29, x30, [sp, #32]
    ebf0:	stp	x22, x21, [sp, #48]
    ebf4:	stp	x20, x19, [sp, #64]
    ebf8:	add	x29, sp, #0x20
    ebfc:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    ec00:	ldr	x20, [x20, #4008]
    ec04:	mov	x8, x2
    ec08:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    ec0c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    ec10:	mov	x19, x0
    ec14:	add	x2, x2, #0x27c
    ec18:	add	x3, x3, #0x770
    ec1c:	add	x4, sp, #0x10
    ec20:	mov	x0, x1
    ec24:	mov	x1, x8
    ec28:	str	x20, [sp, #16]
    ec2c:	str	wzr, [sp, #12]
    ec30:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    ec34:	cbz	w0, ed38 <PyInit__decimal@@Base+0x81d4>
    ec38:	ldr	x8, [sp, #16]
    ec3c:	cmp	x8, x20
    ec40:	b.eq	ec84 <PyInit__decimal@@Base+0x8120>  // b.none
    ec44:	ldr	x0, [x8, #8]
    ec48:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ec4c:	add	x8, x8, #0x4c0
    ec50:	cmp	x0, x8
    ec54:	b.eq	ecc0 <PyInit__decimal@@Base+0x815c>  // b.none
    ec58:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ec5c:	add	x1, x1, #0x4c0
    ec60:	bl	69b0 <PyType_IsSubtype@plt>
    ec64:	cbnz	w0, ecc0 <PyInit__decimal@@Base+0x815c>
    ec68:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ec6c:	ldr	x8, [x8, #3936]
    ec70:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    ec74:	add	x1, x1, #0x131
    ec78:	ldr	x0, [x8]
    ec7c:	bl	6640 <PyErr_SetString@plt>
    ec80:	b	ed38 <PyInit__decimal@@Base+0x81d4>
    ec84:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    ec88:	ldr	x0, [x21, #1408]
    ec8c:	sub	x2, x29, #0x8
    ec90:	mov	x1, xzr
    ec94:	bl	6730 <PyContextVar_Get@plt>
    ec98:	tbnz	w0, #31, edd0 <PyInit__decimal@@Base+0x826c>
    ec9c:	ldur	x20, [x29, #-8]
    eca0:	cbz	x20, ed54 <PyInit__decimal@@Base+0x81f0>
    eca4:	str	x20, [sp, #16]
    eca8:	ldr	x8, [x20]
    ecac:	subs	x8, x8, #0x1
    ecb0:	str	x8, [x20]
    ecb4:	b.ne	ecc0 <PyInit__decimal@@Base+0x815c>  // b.any
    ecb8:	mov	x0, x20
    ecbc:	bl	65c0 <_Py_Dealloc@plt>
    ecc0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ecc4:	add	x0, x0, #0x320
    ecc8:	bl	6940 <_PyObject_New@plt>
    eccc:	mov	x20, x0
    ecd0:	cbz	x0, ed3c <PyInit__decimal@@Base+0x81d8>
    ecd4:	mov	w8, #0x30                  	// #48
    ecd8:	mov	x0, x20
    ecdc:	strb	w8, [x0, #24]!
    ece0:	mov	x9, #0xffffffffffffffff    	// #-1
    ece4:	mov	w10, #0x4                   	// #4
    ece8:	add	x8, x0, #0x30
    ecec:	stur	x9, [x0, #-8]
    ecf0:	stp	xzr, xzr, [x0, #8]
    ecf4:	stp	xzr, x10, [x0, #24]
    ecf8:	str	x8, [x0, #40]
    ecfc:	ldr	x8, [sp, #16]
    ed00:	add	x1, x19, #0x18
    ed04:	add	x3, sp, #0xc
    ed08:	add	x2, x8, #0x10
    ed0c:	bl	23558 <PyInit__decimal@@Base+0x1c9f4>
    ed10:	ldr	x0, [sp, #16]
    ed14:	ldr	w1, [sp, #12]
    ed18:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    ed1c:	cbz	w0, ed3c <PyInit__decimal@@Base+0x81d8>
    ed20:	ldr	x8, [x20]
    ed24:	subs	x8, x8, #0x1
    ed28:	str	x8, [x20]
    ed2c:	b.ne	ed38 <PyInit__decimal@@Base+0x81d4>  // b.any
    ed30:	mov	x0, x20
    ed34:	bl	65c0 <_Py_Dealloc@plt>
    ed38:	mov	x20, xzr
    ed3c:	mov	x0, x20
    ed40:	ldp	x20, x19, [sp, #64]
    ed44:	ldp	x22, x21, [sp, #48]
    ed48:	ldp	x29, x30, [sp, #32]
    ed4c:	add	sp, sp, #0x50
    ed50:	ret
    ed54:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    ed58:	ldr	x22, [x8, #1504]
    ed5c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ed60:	add	x0, x0, #0x4c0
    ed64:	mov	x1, xzr
    ed68:	bl	6830 <PyObject_CallObject@plt>
    ed6c:	cbz	x0, edd0 <PyInit__decimal@@Base+0x826c>
    ed70:	ldp	q1, q0, [x22, #32]
    ed74:	ldr	q2, [x22, #16]
    ed78:	mov	x20, x0
    ed7c:	mov	x1, x20
    ed80:	stp	q1, q0, [x0, #32]
    ed84:	str	q2, [x0, #16]
    ed88:	ldr	w8, [x22, #80]
    ed8c:	stp	wzr, wzr, [x0, #44]
    ed90:	str	w8, [x0, #80]
    ed94:	ldr	x0, [x21, #1408]
    ed98:	bl	6670 <PyContextVar_Set@plt>
    ed9c:	cbz	x0, edb8 <PyInit__decimal@@Base+0x8254>
    eda0:	ldr	x8, [x0]
    eda4:	subs	x8, x8, #0x1
    eda8:	str	x8, [x0]
    edac:	b.ne	eca4 <PyInit__decimal@@Base+0x8140>  // b.any
    edb0:	bl	65c0 <_Py_Dealloc@plt>
    edb4:	b	eca4 <PyInit__decimal@@Base+0x8140>
    edb8:	ldr	x8, [x20]
    edbc:	subs	x8, x8, #0x1
    edc0:	str	x8, [x20]
    edc4:	b.ne	edd0 <PyInit__decimal@@Base+0x826c>  // b.any
    edc8:	mov	x0, x20
    edcc:	bl	65c0 <_Py_Dealloc@plt>
    edd0:	mov	x20, xzr
    edd4:	str	xzr, [sp, #16]
    edd8:	b	ed3c <PyInit__decimal@@Base+0x81d8>
    eddc:	sub	sp, sp, #0x40
    ede0:	stp	x29, x30, [sp, #16]
    ede4:	stp	x22, x21, [sp, #32]
    ede8:	stp	x20, x19, [sp, #48]
    edec:	add	x29, sp, #0x10
    edf0:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    edf4:	ldr	x20, [x20, #4008]
    edf8:	mov	x8, x2
    edfc:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    ee00:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    ee04:	mov	x19, x0
    ee08:	add	x2, x2, #0x27c
    ee0c:	add	x3, x3, #0x780
    ee10:	mov	x4, sp
    ee14:	mov	x0, x1
    ee18:	mov	x1, x8
    ee1c:	str	x20, [sp]
    ee20:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    ee24:	cbz	w0, ee70 <PyInit__decimal@@Base+0x830c>
    ee28:	ldr	x8, [sp]
    ee2c:	cmp	x8, x20
    ee30:	b.eq	ee78 <PyInit__decimal@@Base+0x8314>  // b.none
    ee34:	ldr	x0, [x8, #8]
    ee38:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    ee3c:	add	x8, x8, #0x4c0
    ee40:	cmp	x0, x8
    ee44:	b.eq	eeb4 <PyInit__decimal@@Base+0x8350>  // b.none
    ee48:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ee4c:	add	x1, x1, #0x4c0
    ee50:	bl	69b0 <PyType_IsSubtype@plt>
    ee54:	cbnz	w0, eeb4 <PyInit__decimal@@Base+0x8350>
    ee58:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    ee5c:	ldr	x8, [x8, #3936]
    ee60:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    ee64:	add	x1, x1, #0x131
    ee68:	ldr	x0, [x8]
    ee6c:	bl	6640 <PyErr_SetString@plt>
    ee70:	mov	x0, xzr
    ee74:	b	ef50 <PyInit__decimal@@Base+0x83ec>
    ee78:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    ee7c:	ldr	x0, [x21, #1408]
    ee80:	add	x2, sp, #0x8
    ee84:	mov	x1, xzr
    ee88:	bl	6730 <PyContextVar_Get@plt>
    ee8c:	tbnz	w0, #31, ef48 <PyInit__decimal@@Base+0x83e4>
    ee90:	ldr	x20, [sp, #8]
    ee94:	cbz	x20, eecc <PyInit__decimal@@Base+0x8368>
    ee98:	str	x20, [sp]
    ee9c:	ldr	x8, [x20]
    eea0:	subs	x8, x8, #0x1
    eea4:	str	x8, [x20]
    eea8:	b.ne	eeb4 <PyInit__decimal@@Base+0x8350>  // b.any
    eeac:	mov	x0, x20
    eeb0:	bl	65c0 <_Py_Dealloc@plt>
    eeb4:	ldr	x8, [sp]
    eeb8:	add	x0, x19, #0x18
    eebc:	add	x1, x8, #0x10
    eec0:	bl	2345c <PyInit__decimal@@Base+0x1c8f8>
    eec4:	bl	6950 <PyUnicode_FromString@plt>
    eec8:	b	ef50 <PyInit__decimal@@Base+0x83ec>
    eecc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    eed0:	ldr	x22, [x8, #1504]
    eed4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    eed8:	add	x0, x0, #0x4c0
    eedc:	mov	x1, xzr
    eee0:	bl	6830 <PyObject_CallObject@plt>
    eee4:	cbz	x0, ef48 <PyInit__decimal@@Base+0x83e4>
    eee8:	ldp	q1, q0, [x22, #32]
    eeec:	ldr	q2, [x22, #16]
    eef0:	mov	x20, x0
    eef4:	mov	x1, x20
    eef8:	stp	q1, q0, [x0, #32]
    eefc:	str	q2, [x0, #16]
    ef00:	ldr	w8, [x22, #80]
    ef04:	stp	wzr, wzr, [x0, #44]
    ef08:	str	w8, [x0, #80]
    ef0c:	ldr	x0, [x21, #1408]
    ef10:	bl	6670 <PyContextVar_Set@plt>
    ef14:	cbz	x0, ef30 <PyInit__decimal@@Base+0x83cc>
    ef18:	ldr	x8, [x0]
    ef1c:	subs	x8, x8, #0x1
    ef20:	str	x8, [x0]
    ef24:	b.ne	ee98 <PyInit__decimal@@Base+0x8334>  // b.any
    ef28:	bl	65c0 <_Py_Dealloc@plt>
    ef2c:	b	ee98 <PyInit__decimal@@Base+0x8334>
    ef30:	ldr	x8, [x20]
    ef34:	subs	x8, x8, #0x1
    ef38:	str	x8, [x20]
    ef3c:	b.ne	ef48 <PyInit__decimal@@Base+0x83e4>  // b.any
    ef40:	mov	x0, x20
    ef44:	bl	65c0 <_Py_Dealloc@plt>
    ef48:	mov	x0, xzr
    ef4c:	str	xzr, [sp]
    ef50:	ldp	x20, x19, [sp, #48]
    ef54:	ldp	x22, x21, [sp, #32]
    ef58:	ldp	x29, x30, [sp, #16]
    ef5c:	add	sp, sp, #0x40
    ef60:	ret
    ef64:	sub	sp, sp, #0x40
    ef68:	stp	x29, x30, [sp, #16]
    ef6c:	stp	x22, x21, [sp, #32]
    ef70:	stp	x20, x19, [sp, #48]
    ef74:	add	x29, sp, #0x10
    ef78:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    ef7c:	ldr	x20, [x20, #4008]
    ef80:	mov	x8, x2
    ef84:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    ef88:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    ef8c:	mov	x19, x0
    ef90:	add	x2, x2, #0x27c
    ef94:	add	x3, x3, #0x790
    ef98:	mov	x4, sp
    ef9c:	mov	x0, x1
    efa0:	mov	x1, x8
    efa4:	str	x20, [sp]
    efa8:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    efac:	cbz	w0, f07c <PyInit__decimal@@Base+0x8518>
    efb0:	ldr	x8, [sp]
    efb4:	cmp	x8, x20
    efb8:	b.eq	effc <PyInit__decimal@@Base+0x8498>  // b.none
    efbc:	ldr	x0, [x8, #8]
    efc0:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    efc4:	add	x8, x8, #0x4c0
    efc8:	cmp	x0, x8
    efcc:	b.eq	f038 <PyInit__decimal@@Base+0x84d4>  // b.none
    efd0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    efd4:	add	x1, x1, #0x4c0
    efd8:	bl	69b0 <PyType_IsSubtype@plt>
    efdc:	cbnz	w0, f038 <PyInit__decimal@@Base+0x84d4>
    efe0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    efe4:	ldr	x8, [x8, #3936]
    efe8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    efec:	add	x1, x1, #0x131
    eff0:	ldr	x0, [x8]
    eff4:	bl	6640 <PyErr_SetString@plt>
    eff8:	b	f07c <PyInit__decimal@@Base+0x8518>
    effc:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    f000:	ldr	x0, [x21, #1408]
    f004:	add	x2, sp, #0x8
    f008:	mov	x1, xzr
    f00c:	bl	6730 <PyContextVar_Get@plt>
    f010:	tbnz	w0, #31, f114 <PyInit__decimal@@Base+0x85b0>
    f014:	ldr	x20, [sp, #8]
    f018:	cbz	x20, f098 <PyInit__decimal@@Base+0x8534>
    f01c:	str	x20, [sp]
    f020:	ldr	x8, [x20]
    f024:	subs	x8, x8, #0x1
    f028:	str	x8, [x20]
    f02c:	b.ne	f038 <PyInit__decimal@@Base+0x84d4>  // b.any
    f030:	mov	x0, x20
    f034:	bl	65c0 <_Py_Dealloc@plt>
    f038:	ldr	x8, [sp]
    f03c:	add	x1, x19, #0x18
    f040:	add	x0, sp, #0x8
    f044:	ldr	w2, [x8, #80]
    f048:	bl	1df64 <PyInit__decimal@@Base+0x17400>
    f04c:	tbnz	x0, #63, f078 <PyInit__decimal@@Base+0x8514>
    f050:	mov	x1, x0
    f054:	ldr	x0, [sp, #8]
    f058:	bl	a968 <PyInit__decimal@@Base+0x3e04>
    f05c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    f060:	ldr	x9, [x8, #1384]
    f064:	ldr	x8, [sp, #8]
    f068:	mov	x19, x0
    f06c:	mov	x0, x8
    f070:	blr	x9
    f074:	b	f080 <PyInit__decimal@@Base+0x851c>
    f078:	bl	65d0 <PyErr_NoMemory@plt>
    f07c:	mov	x19, xzr
    f080:	mov	x0, x19
    f084:	ldp	x20, x19, [sp, #48]
    f088:	ldp	x22, x21, [sp, #32]
    f08c:	ldp	x29, x30, [sp, #16]
    f090:	add	sp, sp, #0x40
    f094:	ret
    f098:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    f09c:	ldr	x22, [x8, #1504]
    f0a0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f0a4:	add	x0, x0, #0x4c0
    f0a8:	mov	x1, xzr
    f0ac:	bl	6830 <PyObject_CallObject@plt>
    f0b0:	cbz	x0, f114 <PyInit__decimal@@Base+0x85b0>
    f0b4:	ldp	q1, q0, [x22, #32]
    f0b8:	ldr	q2, [x22, #16]
    f0bc:	mov	x20, x0
    f0c0:	mov	x1, x20
    f0c4:	stp	q1, q0, [x0, #32]
    f0c8:	str	q2, [x0, #16]
    f0cc:	ldr	w8, [x22, #80]
    f0d0:	stp	wzr, wzr, [x0, #44]
    f0d4:	str	w8, [x0, #80]
    f0d8:	ldr	x0, [x21, #1408]
    f0dc:	bl	6670 <PyContextVar_Set@plt>
    f0e0:	cbz	x0, f0fc <PyInit__decimal@@Base+0x8598>
    f0e4:	ldr	x8, [x0]
    f0e8:	subs	x8, x8, #0x1
    f0ec:	str	x8, [x0]
    f0f0:	b.ne	f01c <PyInit__decimal@@Base+0x84b8>  // b.any
    f0f4:	bl	65c0 <_Py_Dealloc@plt>
    f0f8:	b	f01c <PyInit__decimal@@Base+0x84b8>
    f0fc:	ldr	x8, [x20]
    f100:	subs	x8, x8, #0x1
    f104:	str	x8, [x20]
    f108:	b.ne	f114 <PyInit__decimal@@Base+0x85b0>  // b.any
    f10c:	mov	x0, x20
    f110:	bl	65c0 <_Py_Dealloc@plt>
    f114:	mov	x19, xzr
    f118:	str	xzr, [sp]
    f11c:	b	f080 <PyInit__decimal@@Base+0x851c>
    f120:	sub	sp, sp, #0x50
    f124:	stp	x29, x30, [sp, #32]
    f128:	stp	x22, x21, [sp, #48]
    f12c:	stp	x20, x19, [sp, #64]
    f130:	add	x29, sp, #0x20
    f134:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    f138:	ldr	x20, [x20, #4008]
    f13c:	mov	x8, x2
    f140:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    f144:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    f148:	mov	x19, x0
    f14c:	add	x2, x2, #0x27b
    f150:	add	x3, x3, #0x7a0
    f154:	add	x4, sp, #0x8
    f158:	add	x5, sp, #0x10
    f15c:	mov	x0, x1
    f160:	mov	x1, x8
    f164:	str	x20, [sp, #16]
    f168:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    f16c:	cbz	w0, f414 <PyInit__decimal@@Base+0x88b0>
    f170:	ldr	x8, [sp, #16]
    f174:	cmp	x8, x20
    f178:	b.eq	f1bc <PyInit__decimal@@Base+0x8658>  // b.none
    f17c:	ldr	x0, [x8, #8]
    f180:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    f184:	add	x8, x8, #0x4c0
    f188:	cmp	x0, x8
    f18c:	b.eq	f1f8 <PyInit__decimal@@Base+0x8694>  // b.none
    f190:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f194:	add	x1, x1, #0x4c0
    f198:	bl	69b0 <PyType_IsSubtype@plt>
    f19c:	cbnz	w0, f1f8 <PyInit__decimal@@Base+0x8694>
    f1a0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    f1a4:	ldr	x8, [x8, #3936]
    f1a8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    f1ac:	add	x1, x1, #0x131
    f1b0:	ldr	x0, [x8]
    f1b4:	bl	6640 <PyErr_SetString@plt>
    f1b8:	b	f414 <PyInit__decimal@@Base+0x88b0>
    f1bc:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    f1c0:	ldr	x0, [x21, #1408]
    f1c4:	sub	x2, x29, #0x8
    f1c8:	mov	x1, xzr
    f1cc:	bl	6730 <PyContextVar_Get@plt>
    f1d0:	tbnz	w0, #31, f448 <PyInit__decimal@@Base+0x88e4>
    f1d4:	ldur	x20, [x29, #-8]
    f1d8:	cbz	x20, f35c <PyInit__decimal@@Base+0x87f8>
    f1dc:	str	x20, [sp, #16]
    f1e0:	ldr	x8, [x20]
    f1e4:	subs	x8, x8, #0x1
    f1e8:	str	x8, [x20]
    f1ec:	b.ne	f1f8 <PyInit__decimal@@Base+0x8694>  // b.any
    f1f0:	mov	x0, x20
    f1f4:	bl	65c0 <_Py_Dealloc@plt>
    f1f8:	ldr	x0, [x19, #8]
    f1fc:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    f200:	add	x21, x21, #0x320
    f204:	cmp	x0, x21
    f208:	b.eq	f220 <PyInit__decimal@@Base+0x86bc>  // b.none
    f20c:	ldr	x20, [sp, #16]
    f210:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f214:	add	x1, x1, #0x320
    f218:	bl	69b0 <PyType_IsSubtype@plt>
    f21c:	cbz	w0, f304 <PyInit__decimal@@Base+0x87a0>
    f220:	ldr	x8, [x19]
    f224:	add	x8, x8, #0x1
    f228:	str	x8, [x19]
    f22c:	ldr	x20, [sp, #8]
    f230:	ldr	x0, [x20, #8]
    f234:	cmp	x0, x21
    f238:	b.eq	f250 <PyInit__decimal@@Base+0x86ec>  // b.none
    f23c:	ldr	x21, [sp, #16]
    f240:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f244:	add	x1, x1, #0x320
    f248:	bl	69b0 <PyType_IsSubtype@plt>
    f24c:	cbz	w0, f330 <PyInit__decimal@@Base+0x87cc>
    f250:	ldr	x8, [x20]
    f254:	add	x8, x8, #0x1
    f258:	str	x8, [x20]
    f25c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f260:	add	x0, x0, #0x320
    f264:	bl	6940 <_PyObject_New@plt>
    f268:	cbz	x0, f2d4 <PyInit__decimal@@Base+0x8770>
    f26c:	mov	w8, #0x30                  	// #48
    f270:	mov	x21, x0
    f274:	strb	w8, [x0, #24]!
    f278:	mov	x9, #0xffffffffffffffff    	// #-1
    f27c:	mov	w10, #0x4                   	// #4
    f280:	add	x1, x19, #0x18
    f284:	add	x8, x0, #0x30
    f288:	add	x2, x20, #0x18
    f28c:	stur	x9, [x0, #-8]
    f290:	stp	xzr, xzr, [x0, #8]
    f294:	stp	xzr, x10, [x0, #24]
    f298:	str	x8, [x0, #40]
    f29c:	bl	2258c <PyInit__decimal@@Base+0x1ba28>
    f2a0:	ldr	x8, [x19]
    f2a4:	subs	x8, x8, #0x1
    f2a8:	str	x8, [x19]
    f2ac:	b.ne	f2b8 <PyInit__decimal@@Base+0x8754>  // b.any
    f2b0:	mov	x0, x19
    f2b4:	bl	65c0 <_Py_Dealloc@plt>
    f2b8:	ldr	x8, [x20]
    f2bc:	subs	x8, x8, #0x1
    f2c0:	str	x8, [x20]
    f2c4:	b.ne	f418 <PyInit__decimal@@Base+0x88b4>  // b.any
    f2c8:	mov	x0, x20
    f2cc:	bl	65c0 <_Py_Dealloc@plt>
    f2d0:	b	f418 <PyInit__decimal@@Base+0x88b4>
    f2d4:	ldr	x8, [x19]
    f2d8:	subs	x8, x8, #0x1
    f2dc:	str	x8, [x19]
    f2e0:	b.ne	f2ec <PyInit__decimal@@Base+0x8788>  // b.any
    f2e4:	mov	x0, x19
    f2e8:	bl	65c0 <_Py_Dealloc@plt>
    f2ec:	ldr	x8, [x20]
    f2f0:	subs	x8, x8, #0x1
    f2f4:	str	x8, [x20]
    f2f8:	b.ne	f414 <PyInit__decimal@@Base+0x88b0>  // b.any
    f2fc:	mov	x0, x20
    f300:	b	f410 <PyInit__decimal@@Base+0x88ac>
    f304:	ldr	x8, [x19, #8]
    f308:	ldrb	w9, [x8, #171]
    f30c:	tbnz	w9, #0, f3c0 <PyInit__decimal@@Base+0x885c>
    f310:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f314:	ldr	x9, [x9, #3936]
    f318:	ldr	x2, [x8, #24]
    f31c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f320:	add	x1, x1, #0xd63
    f324:	ldr	x0, [x9]
    f328:	bl	6a00 <PyErr_Format@plt>
    f32c:	b	f414 <PyInit__decimal@@Base+0x88b0>
    f330:	ldr	x8, [x20, #8]
    f334:	ldrb	w9, [x8, #171]
    f338:	tbnz	w9, #0, f3e0 <PyInit__decimal@@Base+0x887c>
    f33c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f340:	ldr	x9, [x9, #3936]
    f344:	ldr	x2, [x8, #24]
    f348:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f34c:	add	x1, x1, #0xd63
    f350:	ldr	x0, [x9]
    f354:	bl	6a00 <PyErr_Format@plt>
    f358:	b	f3fc <PyInit__decimal@@Base+0x8898>
    f35c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    f360:	ldr	x22, [x8, #1504]
    f364:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f368:	add	x0, x0, #0x4c0
    f36c:	mov	x1, xzr
    f370:	bl	6830 <PyObject_CallObject@plt>
    f374:	cbz	x0, f448 <PyInit__decimal@@Base+0x88e4>
    f378:	ldp	q1, q0, [x22, #32]
    f37c:	ldr	q2, [x22, #16]
    f380:	mov	x20, x0
    f384:	mov	x1, x20
    f388:	stp	q1, q0, [x0, #32]
    f38c:	str	q2, [x0, #16]
    f390:	ldr	w8, [x22, #80]
    f394:	stp	wzr, wzr, [x0, #44]
    f398:	str	w8, [x0, #80]
    f39c:	ldr	x0, [x21, #1408]
    f3a0:	bl	6670 <PyContextVar_Set@plt>
    f3a4:	cbz	x0, f430 <PyInit__decimal@@Base+0x88cc>
    f3a8:	ldr	x8, [x0]
    f3ac:	subs	x8, x8, #0x1
    f3b0:	str	x8, [x0]
    f3b4:	b.ne	f1dc <PyInit__decimal@@Base+0x8678>  // b.any
    f3b8:	bl	65c0 <_Py_Dealloc@plt>
    f3bc:	b	f1dc <PyInit__decimal@@Base+0x8678>
    f3c0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f3c4:	add	x0, x0, #0x320
    f3c8:	mov	x1, x19
    f3cc:	mov	x2, x20
    f3d0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    f3d4:	mov	x19, x0
    f3d8:	cbnz	x0, f22c <PyInit__decimal@@Base+0x86c8>
    f3dc:	b	f414 <PyInit__decimal@@Base+0x88b0>
    f3e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f3e4:	add	x0, x0, #0x320
    f3e8:	mov	x1, x20
    f3ec:	mov	x2, x21
    f3f0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    f3f4:	mov	x20, x0
    f3f8:	cbnz	x0, f25c <PyInit__decimal@@Base+0x86f8>
    f3fc:	ldr	x8, [x19]
    f400:	subs	x8, x8, #0x1
    f404:	str	x8, [x19]
    f408:	b.ne	f414 <PyInit__decimal@@Base+0x88b0>  // b.any
    f40c:	mov	x0, x19
    f410:	bl	65c0 <_Py_Dealloc@plt>
    f414:	mov	x21, xzr
    f418:	mov	x0, x21
    f41c:	ldp	x20, x19, [sp, #64]
    f420:	ldp	x22, x21, [sp, #48]
    f424:	ldp	x29, x30, [sp, #32]
    f428:	add	sp, sp, #0x50
    f42c:	ret
    f430:	ldr	x8, [x20]
    f434:	subs	x8, x8, #0x1
    f438:	str	x8, [x20]
    f43c:	b.ne	f448 <PyInit__decimal@@Base+0x88e4>  // b.any
    f440:	mov	x0, x20
    f444:	bl	65c0 <_Py_Dealloc@plt>
    f448:	mov	x21, xzr
    f44c:	str	xzr, [sp, #16]
    f450:	b	f418 <PyInit__decimal@@Base+0x88b4>
    f454:	sub	sp, sp, #0x50
    f458:	stp	x29, x30, [sp, #32]
    f45c:	stp	x22, x21, [sp, #48]
    f460:	stp	x20, x19, [sp, #64]
    f464:	add	x29, sp, #0x20
    f468:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    f46c:	ldr	x20, [x20, #4008]
    f470:	mov	x8, x2
    f474:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    f478:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    f47c:	mov	x19, x0
    f480:	add	x2, x2, #0x27b
    f484:	add	x3, x3, #0x7b8
    f488:	add	x4, sp, #0x8
    f48c:	add	x5, sp, #0x10
    f490:	mov	x0, x1
    f494:	mov	x1, x8
    f498:	str	x20, [sp, #16]
    f49c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    f4a0:	cbz	w0, f748 <PyInit__decimal@@Base+0x8be4>
    f4a4:	ldr	x8, [sp, #16]
    f4a8:	cmp	x8, x20
    f4ac:	b.eq	f4f0 <PyInit__decimal@@Base+0x898c>  // b.none
    f4b0:	ldr	x0, [x8, #8]
    f4b4:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    f4b8:	add	x8, x8, #0x4c0
    f4bc:	cmp	x0, x8
    f4c0:	b.eq	f52c <PyInit__decimal@@Base+0x89c8>  // b.none
    f4c4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f4c8:	add	x1, x1, #0x4c0
    f4cc:	bl	69b0 <PyType_IsSubtype@plt>
    f4d0:	cbnz	w0, f52c <PyInit__decimal@@Base+0x89c8>
    f4d4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    f4d8:	ldr	x8, [x8, #3936]
    f4dc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    f4e0:	add	x1, x1, #0x131
    f4e4:	ldr	x0, [x8]
    f4e8:	bl	6640 <PyErr_SetString@plt>
    f4ec:	b	f748 <PyInit__decimal@@Base+0x8be4>
    f4f0:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    f4f4:	ldr	x0, [x21, #1408]
    f4f8:	sub	x2, x29, #0x8
    f4fc:	mov	x1, xzr
    f500:	bl	6730 <PyContextVar_Get@plt>
    f504:	tbnz	w0, #31, f77c <PyInit__decimal@@Base+0x8c18>
    f508:	ldur	x20, [x29, #-8]
    f50c:	cbz	x20, f690 <PyInit__decimal@@Base+0x8b2c>
    f510:	str	x20, [sp, #16]
    f514:	ldr	x8, [x20]
    f518:	subs	x8, x8, #0x1
    f51c:	str	x8, [x20]
    f520:	b.ne	f52c <PyInit__decimal@@Base+0x89c8>  // b.any
    f524:	mov	x0, x20
    f528:	bl	65c0 <_Py_Dealloc@plt>
    f52c:	ldr	x0, [x19, #8]
    f530:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    f534:	add	x21, x21, #0x320
    f538:	cmp	x0, x21
    f53c:	b.eq	f554 <PyInit__decimal@@Base+0x89f0>  // b.none
    f540:	ldr	x20, [sp, #16]
    f544:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f548:	add	x1, x1, #0x320
    f54c:	bl	69b0 <PyType_IsSubtype@plt>
    f550:	cbz	w0, f638 <PyInit__decimal@@Base+0x8ad4>
    f554:	ldr	x8, [x19]
    f558:	add	x8, x8, #0x1
    f55c:	str	x8, [x19]
    f560:	ldr	x20, [sp, #8]
    f564:	ldr	x0, [x20, #8]
    f568:	cmp	x0, x21
    f56c:	b.eq	f584 <PyInit__decimal@@Base+0x8a20>  // b.none
    f570:	ldr	x21, [sp, #16]
    f574:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f578:	add	x1, x1, #0x320
    f57c:	bl	69b0 <PyType_IsSubtype@plt>
    f580:	cbz	w0, f664 <PyInit__decimal@@Base+0x8b00>
    f584:	ldr	x8, [x20]
    f588:	add	x8, x8, #0x1
    f58c:	str	x8, [x20]
    f590:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f594:	add	x0, x0, #0x320
    f598:	bl	6940 <_PyObject_New@plt>
    f59c:	cbz	x0, f608 <PyInit__decimal@@Base+0x8aa4>
    f5a0:	mov	w8, #0x30                  	// #48
    f5a4:	mov	x21, x0
    f5a8:	strb	w8, [x0, #24]!
    f5ac:	mov	x9, #0xffffffffffffffff    	// #-1
    f5b0:	mov	w10, #0x4                   	// #4
    f5b4:	add	x1, x19, #0x18
    f5b8:	add	x8, x0, #0x30
    f5bc:	add	x2, x20, #0x18
    f5c0:	stur	x9, [x0, #-8]
    f5c4:	stp	xzr, xzr, [x0, #8]
    f5c8:	stp	xzr, x10, [x0, #24]
    f5cc:	str	x8, [x0, #40]
    f5d0:	bl	22648 <PyInit__decimal@@Base+0x1bae4>
    f5d4:	ldr	x8, [x19]
    f5d8:	subs	x8, x8, #0x1
    f5dc:	str	x8, [x19]
    f5e0:	b.ne	f5ec <PyInit__decimal@@Base+0x8a88>  // b.any
    f5e4:	mov	x0, x19
    f5e8:	bl	65c0 <_Py_Dealloc@plt>
    f5ec:	ldr	x8, [x20]
    f5f0:	subs	x8, x8, #0x1
    f5f4:	str	x8, [x20]
    f5f8:	b.ne	f74c <PyInit__decimal@@Base+0x8be8>  // b.any
    f5fc:	mov	x0, x20
    f600:	bl	65c0 <_Py_Dealloc@plt>
    f604:	b	f74c <PyInit__decimal@@Base+0x8be8>
    f608:	ldr	x8, [x19]
    f60c:	subs	x8, x8, #0x1
    f610:	str	x8, [x19]
    f614:	b.ne	f620 <PyInit__decimal@@Base+0x8abc>  // b.any
    f618:	mov	x0, x19
    f61c:	bl	65c0 <_Py_Dealloc@plt>
    f620:	ldr	x8, [x20]
    f624:	subs	x8, x8, #0x1
    f628:	str	x8, [x20]
    f62c:	b.ne	f748 <PyInit__decimal@@Base+0x8be4>  // b.any
    f630:	mov	x0, x20
    f634:	b	f744 <PyInit__decimal@@Base+0x8be0>
    f638:	ldr	x8, [x19, #8]
    f63c:	ldrb	w9, [x8, #171]
    f640:	tbnz	w9, #0, f6f4 <PyInit__decimal@@Base+0x8b90>
    f644:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f648:	ldr	x9, [x9, #3936]
    f64c:	ldr	x2, [x8, #24]
    f650:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f654:	add	x1, x1, #0xd63
    f658:	ldr	x0, [x9]
    f65c:	bl	6a00 <PyErr_Format@plt>
    f660:	b	f748 <PyInit__decimal@@Base+0x8be4>
    f664:	ldr	x8, [x20, #8]
    f668:	ldrb	w9, [x8, #171]
    f66c:	tbnz	w9, #0, f714 <PyInit__decimal@@Base+0x8bb0>
    f670:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f674:	ldr	x9, [x9, #3936]
    f678:	ldr	x2, [x8, #24]
    f67c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f680:	add	x1, x1, #0xd63
    f684:	ldr	x0, [x9]
    f688:	bl	6a00 <PyErr_Format@plt>
    f68c:	b	f730 <PyInit__decimal@@Base+0x8bcc>
    f690:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    f694:	ldr	x22, [x8, #1504]
    f698:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f69c:	add	x0, x0, #0x4c0
    f6a0:	mov	x1, xzr
    f6a4:	bl	6830 <PyObject_CallObject@plt>
    f6a8:	cbz	x0, f77c <PyInit__decimal@@Base+0x8c18>
    f6ac:	ldp	q1, q0, [x22, #32]
    f6b0:	ldr	q2, [x22, #16]
    f6b4:	mov	x20, x0
    f6b8:	mov	x1, x20
    f6bc:	stp	q1, q0, [x0, #32]
    f6c0:	str	q2, [x0, #16]
    f6c4:	ldr	w8, [x22, #80]
    f6c8:	stp	wzr, wzr, [x0, #44]
    f6cc:	str	w8, [x0, #80]
    f6d0:	ldr	x0, [x21, #1408]
    f6d4:	bl	6670 <PyContextVar_Set@plt>
    f6d8:	cbz	x0, f764 <PyInit__decimal@@Base+0x8c00>
    f6dc:	ldr	x8, [x0]
    f6e0:	subs	x8, x8, #0x1
    f6e4:	str	x8, [x0]
    f6e8:	b.ne	f510 <PyInit__decimal@@Base+0x89ac>  // b.any
    f6ec:	bl	65c0 <_Py_Dealloc@plt>
    f6f0:	b	f510 <PyInit__decimal@@Base+0x89ac>
    f6f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f6f8:	add	x0, x0, #0x320
    f6fc:	mov	x1, x19
    f700:	mov	x2, x20
    f704:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    f708:	mov	x19, x0
    f70c:	cbnz	x0, f560 <PyInit__decimal@@Base+0x89fc>
    f710:	b	f748 <PyInit__decimal@@Base+0x8be4>
    f714:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f718:	add	x0, x0, #0x320
    f71c:	mov	x1, x20
    f720:	mov	x2, x21
    f724:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    f728:	mov	x20, x0
    f72c:	cbnz	x0, f590 <PyInit__decimal@@Base+0x8a2c>
    f730:	ldr	x8, [x19]
    f734:	subs	x8, x8, #0x1
    f738:	str	x8, [x19]
    f73c:	b.ne	f748 <PyInit__decimal@@Base+0x8be4>  // b.any
    f740:	mov	x0, x19
    f744:	bl	65c0 <_Py_Dealloc@plt>
    f748:	mov	x21, xzr
    f74c:	mov	x0, x21
    f750:	ldp	x20, x19, [sp, #64]
    f754:	ldp	x22, x21, [sp, #48]
    f758:	ldp	x29, x30, [sp, #32]
    f75c:	add	sp, sp, #0x50
    f760:	ret
    f764:	ldr	x8, [x20]
    f768:	subs	x8, x8, #0x1
    f76c:	str	x8, [x20]
    f770:	b.ne	f77c <PyInit__decimal@@Base+0x8c18>  // b.any
    f774:	mov	x0, x20
    f778:	bl	65c0 <_Py_Dealloc@plt>
    f77c:	mov	x21, xzr
    f780:	str	xzr, [sp, #16]
    f784:	b	f74c <PyInit__decimal@@Base+0x8be8>
    f788:	sub	sp, sp, #0x50
    f78c:	stp	x29, x30, [sp, #32]
    f790:	stp	x22, x21, [sp, #48]
    f794:	stp	x20, x19, [sp, #64]
    f798:	add	x29, sp, #0x20
    f79c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    f7a0:	ldr	x20, [x20, #4008]
    f7a4:	mov	x8, x2
    f7a8:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    f7ac:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    f7b0:	mov	x19, x0
    f7b4:	add	x2, x2, #0x27b
    f7b8:	add	x3, x3, #0x7d0
    f7bc:	add	x4, sp, #0x10
    f7c0:	add	x5, sp, #0x8
    f7c4:	mov	x0, x1
    f7c8:	mov	x1, x8
    f7cc:	str	x20, [sp, #8]
    f7d0:	str	wzr, [sp, #4]
    f7d4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    f7d8:	cbz	w0, faa8 <PyInit__decimal@@Base+0x8f44>
    f7dc:	ldr	x8, [sp, #8]
    f7e0:	cmp	x8, x20
    f7e4:	b.eq	f828 <PyInit__decimal@@Base+0x8cc4>  // b.none
    f7e8:	ldr	x0, [x8, #8]
    f7ec:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    f7f0:	add	x8, x8, #0x4c0
    f7f4:	cmp	x0, x8
    f7f8:	b.eq	f864 <PyInit__decimal@@Base+0x8d00>  // b.none
    f7fc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f800:	add	x1, x1, #0x4c0
    f804:	bl	69b0 <PyType_IsSubtype@plt>
    f808:	cbnz	w0, f864 <PyInit__decimal@@Base+0x8d00>
    f80c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    f810:	ldr	x8, [x8, #3936]
    f814:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    f818:	add	x1, x1, #0x131
    f81c:	ldr	x0, [x8]
    f820:	bl	6640 <PyErr_SetString@plt>
    f824:	b	faa8 <PyInit__decimal@@Base+0x8f44>
    f828:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    f82c:	ldr	x0, [x21, #1408]
    f830:	sub	x2, x29, #0x8
    f834:	mov	x1, xzr
    f838:	bl	6730 <PyContextVar_Get@plt>
    f83c:	tbnz	w0, #31, fadc <PyInit__decimal@@Base+0x8f78>
    f840:	ldur	x20, [x29, #-8]
    f844:	cbz	x20, f9f0 <PyInit__decimal@@Base+0x8e8c>
    f848:	str	x20, [sp, #8]
    f84c:	ldr	x8, [x20]
    f850:	subs	x8, x8, #0x1
    f854:	str	x8, [x20]
    f858:	b.ne	f864 <PyInit__decimal@@Base+0x8d00>  // b.any
    f85c:	mov	x0, x20
    f860:	bl	65c0 <_Py_Dealloc@plt>
    f864:	ldr	x0, [x19, #8]
    f868:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    f86c:	add	x21, x21, #0x320
    f870:	cmp	x0, x21
    f874:	b.eq	f88c <PyInit__decimal@@Base+0x8d28>  // b.none
    f878:	ldr	x20, [sp, #8]
    f87c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f880:	add	x1, x1, #0x320
    f884:	bl	69b0 <PyType_IsSubtype@plt>
    f888:	cbz	w0, f998 <PyInit__decimal@@Base+0x8e34>
    f88c:	ldr	x8, [x19]
    f890:	add	x8, x8, #0x1
    f894:	str	x8, [x19]
    f898:	ldr	x20, [sp, #16]
    f89c:	ldr	x0, [x20, #8]
    f8a0:	cmp	x0, x21
    f8a4:	b.eq	f8bc <PyInit__decimal@@Base+0x8d58>  // b.none
    f8a8:	ldr	x21, [sp, #8]
    f8ac:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    f8b0:	add	x1, x1, #0x320
    f8b4:	bl	69b0 <PyType_IsSubtype@plt>
    f8b8:	cbz	w0, f9c4 <PyInit__decimal@@Base+0x8e60>
    f8bc:	ldr	x8, [x20]
    f8c0:	add	x8, x8, #0x1
    f8c4:	str	x8, [x20]
    f8c8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f8cc:	add	x0, x0, #0x320
    f8d0:	bl	6940 <_PyObject_New@plt>
    f8d4:	cbz	x0, f968 <PyInit__decimal@@Base+0x8e04>
    f8d8:	mov	w8, #0x30                  	// #48
    f8dc:	mov	x21, x0
    f8e0:	strb	w8, [x0, #24]!
    f8e4:	mov	x9, #0xffffffffffffffff    	// #-1
    f8e8:	mov	w10, #0x4                   	// #4
    f8ec:	add	x1, x19, #0x18
    f8f0:	add	x8, x0, #0x30
    f8f4:	add	x2, x20, #0x18
    f8f8:	add	x3, sp, #0x4
    f8fc:	stur	x9, [x0, #-8]
    f900:	stp	xzr, xzr, [x0, #8]
    f904:	stp	xzr, x10, [x0, #24]
    f908:	str	x8, [x0, #40]
    f90c:	bl	220ec <PyInit__decimal@@Base+0x1b588>
    f910:	ldr	x8, [x19]
    f914:	subs	x8, x8, #0x1
    f918:	str	x8, [x19]
    f91c:	b.ne	f928 <PyInit__decimal@@Base+0x8dc4>  // b.any
    f920:	mov	x0, x19
    f924:	bl	65c0 <_Py_Dealloc@plt>
    f928:	ldr	x8, [x20]
    f92c:	subs	x8, x8, #0x1
    f930:	str	x8, [x20]
    f934:	b.ne	f940 <PyInit__decimal@@Base+0x8ddc>  // b.any
    f938:	mov	x0, x20
    f93c:	bl	65c0 <_Py_Dealloc@plt>
    f940:	ldr	x0, [sp, #8]
    f944:	ldr	w1, [sp, #4]
    f948:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    f94c:	cbz	w0, faac <PyInit__decimal@@Base+0x8f48>
    f950:	ldr	x8, [x21]
    f954:	subs	x8, x8, #0x1
    f958:	str	x8, [x21]
    f95c:	b.ne	faa8 <PyInit__decimal@@Base+0x8f44>  // b.any
    f960:	mov	x0, x21
    f964:	b	faa4 <PyInit__decimal@@Base+0x8f40>
    f968:	ldr	x8, [x19]
    f96c:	subs	x8, x8, #0x1
    f970:	str	x8, [x19]
    f974:	b.ne	f980 <PyInit__decimal@@Base+0x8e1c>  // b.any
    f978:	mov	x0, x19
    f97c:	bl	65c0 <_Py_Dealloc@plt>
    f980:	ldr	x8, [x20]
    f984:	subs	x8, x8, #0x1
    f988:	str	x8, [x20]
    f98c:	b.ne	faa8 <PyInit__decimal@@Base+0x8f44>  // b.any
    f990:	mov	x0, x20
    f994:	b	faa4 <PyInit__decimal@@Base+0x8f40>
    f998:	ldr	x8, [x19, #8]
    f99c:	ldrb	w9, [x8, #171]
    f9a0:	tbnz	w9, #0, fa54 <PyInit__decimal@@Base+0x8ef0>
    f9a4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f9a8:	ldr	x9, [x9, #3936]
    f9ac:	ldr	x2, [x8, #24]
    f9b0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f9b4:	add	x1, x1, #0xd63
    f9b8:	ldr	x0, [x9]
    f9bc:	bl	6a00 <PyErr_Format@plt>
    f9c0:	b	faa8 <PyInit__decimal@@Base+0x8f44>
    f9c4:	ldr	x8, [x20, #8]
    f9c8:	ldrb	w9, [x8, #171]
    f9cc:	tbnz	w9, #0, fa74 <PyInit__decimal@@Base+0x8f10>
    f9d0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    f9d4:	ldr	x9, [x9, #3936]
    f9d8:	ldr	x2, [x8, #24]
    f9dc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    f9e0:	add	x1, x1, #0xd63
    f9e4:	ldr	x0, [x9]
    f9e8:	bl	6a00 <PyErr_Format@plt>
    f9ec:	b	fa90 <PyInit__decimal@@Base+0x8f2c>
    f9f0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    f9f4:	ldr	x22, [x8, #1504]
    f9f8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    f9fc:	add	x0, x0, #0x4c0
    fa00:	mov	x1, xzr
    fa04:	bl	6830 <PyObject_CallObject@plt>
    fa08:	cbz	x0, fadc <PyInit__decimal@@Base+0x8f78>
    fa0c:	ldp	q1, q0, [x22, #32]
    fa10:	ldr	q2, [x22, #16]
    fa14:	mov	x20, x0
    fa18:	mov	x1, x20
    fa1c:	stp	q1, q0, [x0, #32]
    fa20:	str	q2, [x0, #16]
    fa24:	ldr	w8, [x22, #80]
    fa28:	stp	wzr, wzr, [x0, #44]
    fa2c:	str	w8, [x0, #80]
    fa30:	ldr	x0, [x21, #1408]
    fa34:	bl	6670 <PyContextVar_Set@plt>
    fa38:	cbz	x0, fac4 <PyInit__decimal@@Base+0x8f60>
    fa3c:	ldr	x8, [x0]
    fa40:	subs	x8, x8, #0x1
    fa44:	str	x8, [x0]
    fa48:	b.ne	f848 <PyInit__decimal@@Base+0x8ce4>  // b.any
    fa4c:	bl	65c0 <_Py_Dealloc@plt>
    fa50:	b	f848 <PyInit__decimal@@Base+0x8ce4>
    fa54:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    fa58:	add	x0, x0, #0x320
    fa5c:	mov	x1, x19
    fa60:	mov	x2, x20
    fa64:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    fa68:	mov	x19, x0
    fa6c:	cbnz	x0, f898 <PyInit__decimal@@Base+0x8d34>
    fa70:	b	faa8 <PyInit__decimal@@Base+0x8f44>
    fa74:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    fa78:	add	x0, x0, #0x320
    fa7c:	mov	x1, x20
    fa80:	mov	x2, x21
    fa84:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    fa88:	mov	x20, x0
    fa8c:	cbnz	x0, f8c8 <PyInit__decimal@@Base+0x8d64>
    fa90:	ldr	x8, [x19]
    fa94:	subs	x8, x8, #0x1
    fa98:	str	x8, [x19]
    fa9c:	b.ne	faa8 <PyInit__decimal@@Base+0x8f44>  // b.any
    faa0:	mov	x0, x19
    faa4:	bl	65c0 <_Py_Dealloc@plt>
    faa8:	mov	x21, xzr
    faac:	mov	x0, x21
    fab0:	ldp	x20, x19, [sp, #64]
    fab4:	ldp	x22, x21, [sp, #48]
    fab8:	ldp	x29, x30, [sp, #32]
    fabc:	add	sp, sp, #0x50
    fac0:	ret
    fac4:	ldr	x8, [x20]
    fac8:	subs	x8, x8, #0x1
    facc:	str	x8, [x20]
    fad0:	b.ne	fadc <PyInit__decimal@@Base+0x8f78>  // b.any
    fad4:	mov	x0, x20
    fad8:	bl	65c0 <_Py_Dealloc@plt>
    fadc:	mov	x21, xzr
    fae0:	str	xzr, [sp, #8]
    fae4:	b	faac <PyInit__decimal@@Base+0x8f48>
    fae8:	sub	sp, sp, #0x50
    faec:	stp	x29, x30, [sp, #32]
    faf0:	stp	x22, x21, [sp, #48]
    faf4:	stp	x20, x19, [sp, #64]
    faf8:	add	x29, sp, #0x20
    fafc:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    fb00:	ldr	x20, [x20, #4008]
    fb04:	mov	x8, x2
    fb08:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    fb0c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    fb10:	mov	x19, x0
    fb14:	add	x2, x2, #0x27b
    fb18:	add	x3, x3, #0x7e8
    fb1c:	add	x4, sp, #0x10
    fb20:	add	x5, sp, #0x8
    fb24:	mov	x0, x1
    fb28:	mov	x1, x8
    fb2c:	str	x20, [sp, #8]
    fb30:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    fb34:	cbz	w0, fd98 <PyInit__decimal@@Base+0x9234>
    fb38:	ldr	x8, [sp, #8]
    fb3c:	cmp	x8, x20
    fb40:	b.eq	fb84 <PyInit__decimal@@Base+0x9020>  // b.none
    fb44:	ldr	x0, [x8, #8]
    fb48:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    fb4c:	add	x8, x8, #0x4c0
    fb50:	cmp	x0, x8
    fb54:	b.eq	fbc0 <PyInit__decimal@@Base+0x905c>  // b.none
    fb58:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    fb5c:	add	x1, x1, #0x4c0
    fb60:	bl	69b0 <PyType_IsSubtype@plt>
    fb64:	cbnz	w0, fbc0 <PyInit__decimal@@Base+0x905c>
    fb68:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    fb6c:	ldr	x8, [x8, #3936]
    fb70:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    fb74:	add	x1, x1, #0x131
    fb78:	ldr	x0, [x8]
    fb7c:	bl	6640 <PyErr_SetString@plt>
    fb80:	b	fd98 <PyInit__decimal@@Base+0x9234>
    fb84:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    fb88:	ldr	x0, [x21, #1408]
    fb8c:	sub	x2, x29, #0x8
    fb90:	mov	x1, xzr
    fb94:	bl	6730 <PyContextVar_Get@plt>
    fb98:	tbnz	w0, #31, fdcc <PyInit__decimal@@Base+0x9268>
    fb9c:	ldur	x20, [x29, #-8]
    fba0:	cbz	x20, fce0 <PyInit__decimal@@Base+0x917c>
    fba4:	str	x20, [sp, #8]
    fba8:	ldr	x8, [x20]
    fbac:	subs	x8, x8, #0x1
    fbb0:	str	x8, [x20]
    fbb4:	b.ne	fbc0 <PyInit__decimal@@Base+0x905c>  // b.any
    fbb8:	mov	x0, x20
    fbbc:	bl	65c0 <_Py_Dealloc@plt>
    fbc0:	ldr	x0, [x19, #8]
    fbc4:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    fbc8:	add	x21, x21, #0x320
    fbcc:	cmp	x0, x21
    fbd0:	b.eq	fbe8 <PyInit__decimal@@Base+0x9084>  // b.none
    fbd4:	ldr	x20, [sp, #8]
    fbd8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    fbdc:	add	x1, x1, #0x320
    fbe0:	bl	69b0 <PyType_IsSubtype@plt>
    fbe4:	cbz	w0, fc88 <PyInit__decimal@@Base+0x9124>
    fbe8:	ldr	x8, [x19]
    fbec:	add	x8, x8, #0x1
    fbf0:	str	x8, [x19]
    fbf4:	ldr	x20, [sp, #16]
    fbf8:	ldr	x0, [x20, #8]
    fbfc:	cmp	x0, x21
    fc00:	b.eq	fc18 <PyInit__decimal@@Base+0x90b4>  // b.none
    fc04:	ldr	x21, [sp, #8]
    fc08:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    fc0c:	add	x1, x1, #0x320
    fc10:	bl	69b0 <PyType_IsSubtype@plt>
    fc14:	cbz	w0, fcb4 <PyInit__decimal@@Base+0x9150>
    fc18:	ldr	x8, [x20]
    fc1c:	add	x8, x8, #0x1
    fc20:	str	x8, [x20]
    fc24:	add	x0, x19, #0x18
    fc28:	add	x1, x20, #0x18
    fc2c:	bl	2cc10 <PyInit__decimal@@Base+0x260ac>
    fc30:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    fc34:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    fc38:	ldr	x8, [x8, #4024]
    fc3c:	ldr	x9, [x9, #3976]
    fc40:	cmp	w0, #0x0
    fc44:	csel	x21, x9, x8, eq  // eq = none
    fc48:	ldr	x8, [x21]
    fc4c:	add	x8, x8, #0x1
    fc50:	str	x8, [x21]
    fc54:	ldr	x8, [x19]
    fc58:	subs	x8, x8, #0x1
    fc5c:	str	x8, [x19]
    fc60:	b.ne	fc6c <PyInit__decimal@@Base+0x9108>  // b.any
    fc64:	mov	x0, x19
    fc68:	bl	65c0 <_Py_Dealloc@plt>
    fc6c:	ldr	x8, [x20]
    fc70:	subs	x8, x8, #0x1
    fc74:	str	x8, [x20]
    fc78:	b.ne	fd9c <PyInit__decimal@@Base+0x9238>  // b.any
    fc7c:	mov	x0, x20
    fc80:	bl	65c0 <_Py_Dealloc@plt>
    fc84:	b	fd9c <PyInit__decimal@@Base+0x9238>
    fc88:	ldr	x8, [x19, #8]
    fc8c:	ldrb	w9, [x8, #171]
    fc90:	tbnz	w9, #0, fd44 <PyInit__decimal@@Base+0x91e0>
    fc94:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    fc98:	ldr	x9, [x9, #3936]
    fc9c:	ldr	x2, [x8, #24]
    fca0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    fca4:	add	x1, x1, #0xd63
    fca8:	ldr	x0, [x9]
    fcac:	bl	6a00 <PyErr_Format@plt>
    fcb0:	b	fd98 <PyInit__decimal@@Base+0x9234>
    fcb4:	ldr	x8, [x20, #8]
    fcb8:	ldrb	w9, [x8, #171]
    fcbc:	tbnz	w9, #0, fd64 <PyInit__decimal@@Base+0x9200>
    fcc0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
    fcc4:	ldr	x9, [x9, #3936]
    fcc8:	ldr	x2, [x8, #24]
    fccc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
    fcd0:	add	x1, x1, #0xd63
    fcd4:	ldr	x0, [x9]
    fcd8:	bl	6a00 <PyErr_Format@plt>
    fcdc:	b	fd80 <PyInit__decimal@@Base+0x921c>
    fce0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
    fce4:	ldr	x22, [x8, #1504]
    fce8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    fcec:	add	x0, x0, #0x4c0
    fcf0:	mov	x1, xzr
    fcf4:	bl	6830 <PyObject_CallObject@plt>
    fcf8:	cbz	x0, fdcc <PyInit__decimal@@Base+0x9268>
    fcfc:	ldp	q1, q0, [x22, #32]
    fd00:	ldr	q2, [x22, #16]
    fd04:	mov	x20, x0
    fd08:	mov	x1, x20
    fd0c:	stp	q1, q0, [x0, #32]
    fd10:	str	q2, [x0, #16]
    fd14:	ldr	w8, [x22, #80]
    fd18:	stp	wzr, wzr, [x0, #44]
    fd1c:	str	w8, [x0, #80]
    fd20:	ldr	x0, [x21, #1408]
    fd24:	bl	6670 <PyContextVar_Set@plt>
    fd28:	cbz	x0, fdb4 <PyInit__decimal@@Base+0x9250>
    fd2c:	ldr	x8, [x0]
    fd30:	subs	x8, x8, #0x1
    fd34:	str	x8, [x0]
    fd38:	b.ne	fba4 <PyInit__decimal@@Base+0x9040>  // b.any
    fd3c:	bl	65c0 <_Py_Dealloc@plt>
    fd40:	b	fba4 <PyInit__decimal@@Base+0x9040>
    fd44:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    fd48:	add	x0, x0, #0x320
    fd4c:	mov	x1, x19
    fd50:	mov	x2, x20
    fd54:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    fd58:	mov	x19, x0
    fd5c:	cbnz	x0, fbf4 <PyInit__decimal@@Base+0x9090>
    fd60:	b	fd98 <PyInit__decimal@@Base+0x9234>
    fd64:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    fd68:	add	x0, x0, #0x320
    fd6c:	mov	x1, x20
    fd70:	mov	x2, x21
    fd74:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
    fd78:	mov	x20, x0
    fd7c:	cbnz	x0, fc24 <PyInit__decimal@@Base+0x90c0>
    fd80:	ldr	x8, [x19]
    fd84:	subs	x8, x8, #0x1
    fd88:	str	x8, [x19]
    fd8c:	b.ne	fd98 <PyInit__decimal@@Base+0x9234>  // b.any
    fd90:	mov	x0, x19
    fd94:	bl	65c0 <_Py_Dealloc@plt>
    fd98:	mov	x21, xzr
    fd9c:	mov	x0, x21
    fda0:	ldp	x20, x19, [sp, #64]
    fda4:	ldp	x22, x21, [sp, #48]
    fda8:	ldp	x29, x30, [sp, #32]
    fdac:	add	sp, sp, #0x50
    fdb0:	ret
    fdb4:	ldr	x8, [x20]
    fdb8:	subs	x8, x8, #0x1
    fdbc:	str	x8, [x20]
    fdc0:	b.ne	fdcc <PyInit__decimal@@Base+0x9268>  // b.any
    fdc4:	mov	x0, x20
    fdc8:	bl	65c0 <_Py_Dealloc@plt>
    fdcc:	mov	x21, xzr
    fdd0:	str	xzr, [sp, #8]
    fdd4:	b	fd9c <PyInit__decimal@@Base+0x9238>
    fdd8:	sub	sp, sp, #0x50
    fddc:	stp	x29, x30, [sp, #32]
    fde0:	stp	x22, x21, [sp, #48]
    fde4:	stp	x20, x19, [sp, #64]
    fde8:	add	x29, sp, #0x20
    fdec:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
    fdf0:	ldr	x20, [x20, #4008]
    fdf4:	mov	x8, x2
    fdf8:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
    fdfc:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
    fe00:	mov	x19, x0
    fe04:	add	x2, x2, #0x27b
    fe08:	add	x3, x3, #0x800
    fe0c:	add	x4, sp, #0x10
    fe10:	add	x5, sp, #0x8
    fe14:	mov	x0, x1
    fe18:	mov	x1, x8
    fe1c:	str	x20, [sp, #8]
    fe20:	str	wzr, [sp, #4]
    fe24:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
    fe28:	cbz	w0, 10100 <PyInit__decimal@@Base+0x959c>
    fe2c:	ldr	x8, [sp, #8]
    fe30:	cmp	x8, x20
    fe34:	b.eq	fe78 <PyInit__decimal@@Base+0x9314>  // b.none
    fe38:	ldr	x0, [x8, #8]
    fe3c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
    fe40:	add	x8, x8, #0x4c0
    fe44:	cmp	x0, x8
    fe48:	b.eq	feb4 <PyInit__decimal@@Base+0x9350>  // b.none
    fe4c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    fe50:	add	x1, x1, #0x4c0
    fe54:	bl	69b0 <PyType_IsSubtype@plt>
    fe58:	cbnz	w0, feb4 <PyInit__decimal@@Base+0x9350>
    fe5c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
    fe60:	ldr	x8, [x8, #3936]
    fe64:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
    fe68:	add	x1, x1, #0x131
    fe6c:	ldr	x0, [x8]
    fe70:	bl	6640 <PyErr_SetString@plt>
    fe74:	b	10100 <PyInit__decimal@@Base+0x959c>
    fe78:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
    fe7c:	ldr	x0, [x21, #1408]
    fe80:	sub	x2, x29, #0x8
    fe84:	mov	x1, xzr
    fe88:	bl	6730 <PyContextVar_Get@plt>
    fe8c:	tbnz	w0, #31, 10134 <PyInit__decimal@@Base+0x95d0>
    fe90:	ldur	x20, [x29, #-8]
    fe94:	cbz	x20, 10048 <PyInit__decimal@@Base+0x94e4>
    fe98:	str	x20, [sp, #8]
    fe9c:	ldr	x8, [x20]
    fea0:	subs	x8, x8, #0x1
    fea4:	str	x8, [x20]
    fea8:	b.ne	feb4 <PyInit__decimal@@Base+0x9350>  // b.any
    feac:	mov	x0, x20
    feb0:	bl	65c0 <_Py_Dealloc@plt>
    feb4:	ldr	x0, [x19, #8]
    feb8:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
    febc:	add	x21, x21, #0x320
    fec0:	cmp	x0, x21
    fec4:	b.eq	fedc <PyInit__decimal@@Base+0x9378>  // b.none
    fec8:	ldr	x20, [sp, #8]
    fecc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    fed0:	add	x1, x1, #0x320
    fed4:	bl	69b0 <PyType_IsSubtype@plt>
    fed8:	cbz	w0, fff0 <PyInit__decimal@@Base+0x948c>
    fedc:	ldr	x8, [x19]
    fee0:	add	x8, x8, #0x1
    fee4:	str	x8, [x19]
    fee8:	ldr	x20, [sp, #16]
    feec:	ldr	x0, [x20, #8]
    fef0:	cmp	x0, x21
    fef4:	b.eq	ff0c <PyInit__decimal@@Base+0x93a8>  // b.none
    fef8:	ldr	x21, [sp, #8]
    fefc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
    ff00:	add	x1, x1, #0x320
    ff04:	bl	69b0 <PyType_IsSubtype@plt>
    ff08:	cbz	w0, 1001c <PyInit__decimal@@Base+0x94b8>
    ff0c:	ldr	x8, [x20]
    ff10:	add	x8, x8, #0x1
    ff14:	str	x8, [x20]
    ff18:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
    ff1c:	add	x0, x0, #0x320
    ff20:	bl	6940 <_PyObject_New@plt>
    ff24:	cbz	x0, ffc0 <PyInit__decimal@@Base+0x945c>
    ff28:	mov	w8, #0x30                  	// #48
    ff2c:	mov	x21, x0
    ff30:	strb	w8, [x0, #24]!
    ff34:	mov	x9, #0xffffffffffffffff    	// #-1
    ff38:	mov	w10, #0x4                   	// #4
    ff3c:	add	x8, x0, #0x30
    ff40:	stur	x9, [x0, #-8]
    ff44:	stp	xzr, xzr, [x0, #8]
    ff48:	stp	xzr, x10, [x0, #24]
    ff4c:	str	x8, [x0, #40]
    ff50:	ldr	x8, [sp, #8]
    ff54:	add	x1, x19, #0x18
    ff58:	add	x2, x20, #0x18
    ff5c:	add	x4, sp, #0x4
    ff60:	add	x3, x8, #0x10
    ff64:	bl	22c54 <PyInit__decimal@@Base+0x1c0f0>
    ff68:	ldr	x8, [x19]
    ff6c:	subs	x8, x8, #0x1
    ff70:	str	x8, [x19]
    ff74:	b.ne	ff80 <PyInit__decimal@@Base+0x941c>  // b.any
    ff78:	mov	x0, x19
    ff7c:	bl	65c0 <_Py_Dealloc@plt>
    ff80:	ldr	x8, [x20]
    ff84:	subs	x8, x8, #0x1
    ff88:	str	x8, [x20]
    ff8c:	b.ne	ff98 <PyInit__decimal@@Base+0x9434>  // b.any
    ff90:	mov	x0, x20
    ff94:	bl	65c0 <_Py_Dealloc@plt>
    ff98:	ldr	x0, [sp, #8]
    ff9c:	ldr	w1, [sp, #4]
    ffa0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
    ffa4:	cbz	w0, 10104 <PyInit__decimal@@Base+0x95a0>
    ffa8:	ldr	x8, [x21]
    ffac:	subs	x8, x8, #0x1
    ffb0:	str	x8, [x21]
    ffb4:	b.ne	10100 <PyInit__decimal@@Base+0x959c>  // b.any
    ffb8:	mov	x0, x21
    ffbc:	b	100fc <PyInit__decimal@@Base+0x9598>
    ffc0:	ldr	x8, [x19]
    ffc4:	subs	x8, x8, #0x1
    ffc8:	str	x8, [x19]
    ffcc:	b.ne	ffd8 <PyInit__decimal@@Base+0x9474>  // b.any
    ffd0:	mov	x0, x19
    ffd4:	bl	65c0 <_Py_Dealloc@plt>
    ffd8:	ldr	x8, [x20]
    ffdc:	subs	x8, x8, #0x1
    ffe0:	str	x8, [x20]
    ffe4:	b.ne	10100 <PyInit__decimal@@Base+0x959c>  // b.any
    ffe8:	mov	x0, x20
    ffec:	b	100fc <PyInit__decimal@@Base+0x9598>
    fff0:	ldr	x8, [x19, #8]
    fff4:	ldrb	w9, [x8, #171]
    fff8:	tbnz	w9, #0, 100ac <PyInit__decimal@@Base+0x9548>
    fffc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10000:	ldr	x9, [x9, #3936]
   10004:	ldr	x2, [x8, #24]
   10008:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1000c:	add	x1, x1, #0xd63
   10010:	ldr	x0, [x9]
   10014:	bl	6a00 <PyErr_Format@plt>
   10018:	b	10100 <PyInit__decimal@@Base+0x959c>
   1001c:	ldr	x8, [x20, #8]
   10020:	ldrb	w9, [x8, #171]
   10024:	tbnz	w9, #0, 100cc <PyInit__decimal@@Base+0x9568>
   10028:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1002c:	ldr	x9, [x9, #3936]
   10030:	ldr	x2, [x8, #24]
   10034:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10038:	add	x1, x1, #0xd63
   1003c:	ldr	x0, [x9]
   10040:	bl	6a00 <PyErr_Format@plt>
   10044:	b	100e8 <PyInit__decimal@@Base+0x9584>
   10048:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1004c:	ldr	x22, [x8, #1504]
   10050:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10054:	add	x0, x0, #0x4c0
   10058:	mov	x1, xzr
   1005c:	bl	6830 <PyObject_CallObject@plt>
   10060:	cbz	x0, 10134 <PyInit__decimal@@Base+0x95d0>
   10064:	ldp	q1, q0, [x22, #32]
   10068:	ldr	q2, [x22, #16]
   1006c:	mov	x20, x0
   10070:	mov	x1, x20
   10074:	stp	q1, q0, [x0, #32]
   10078:	str	q2, [x0, #16]
   1007c:	ldr	w8, [x22, #80]
   10080:	stp	wzr, wzr, [x0, #44]
   10084:	str	w8, [x0, #80]
   10088:	ldr	x0, [x21, #1408]
   1008c:	bl	6670 <PyContextVar_Set@plt>
   10090:	cbz	x0, 1011c <PyInit__decimal@@Base+0x95b8>
   10094:	ldr	x8, [x0]
   10098:	subs	x8, x8, #0x1
   1009c:	str	x8, [x0]
   100a0:	b.ne	fe98 <PyInit__decimal@@Base+0x9334>  // b.any
   100a4:	bl	65c0 <_Py_Dealloc@plt>
   100a8:	b	fe98 <PyInit__decimal@@Base+0x9334>
   100ac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   100b0:	add	x0, x0, #0x320
   100b4:	mov	x1, x19
   100b8:	mov	x2, x20
   100bc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   100c0:	mov	x19, x0
   100c4:	cbnz	x0, fee8 <PyInit__decimal@@Base+0x9384>
   100c8:	b	10100 <PyInit__decimal@@Base+0x959c>
   100cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   100d0:	add	x0, x0, #0x320
   100d4:	mov	x1, x20
   100d8:	mov	x2, x21
   100dc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   100e0:	mov	x20, x0
   100e4:	cbnz	x0, ff18 <PyInit__decimal@@Base+0x93b4>
   100e8:	ldr	x8, [x19]
   100ec:	subs	x8, x8, #0x1
   100f0:	str	x8, [x19]
   100f4:	b.ne	10100 <PyInit__decimal@@Base+0x959c>  // b.any
   100f8:	mov	x0, x19
   100fc:	bl	65c0 <_Py_Dealloc@plt>
   10100:	mov	x21, xzr
   10104:	mov	x0, x21
   10108:	ldp	x20, x19, [sp, #64]
   1010c:	ldp	x22, x21, [sp, #48]
   10110:	ldp	x29, x30, [sp, #32]
   10114:	add	sp, sp, #0x50
   10118:	ret
   1011c:	ldr	x8, [x20]
   10120:	subs	x8, x8, #0x1
   10124:	str	x8, [x20]
   10128:	b.ne	10134 <PyInit__decimal@@Base+0x95d0>  // b.any
   1012c:	mov	x0, x20
   10130:	bl	65c0 <_Py_Dealloc@plt>
   10134:	mov	x21, xzr
   10138:	str	xzr, [sp, #8]
   1013c:	b	10104 <PyInit__decimal@@Base+0x95a0>
   10140:	sub	sp, sp, #0x50
   10144:	stp	x29, x30, [sp, #32]
   10148:	stp	x22, x21, [sp, #48]
   1014c:	stp	x20, x19, [sp, #64]
   10150:	add	x29, sp, #0x20
   10154:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   10158:	ldr	x20, [x20, #4008]
   1015c:	mov	x8, x2
   10160:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   10164:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
   10168:	mov	x19, x0
   1016c:	add	x2, x2, #0x27b
   10170:	add	x3, x3, #0x818
   10174:	add	x4, sp, #0x10
   10178:	add	x5, sp, #0x8
   1017c:	mov	x0, x1
   10180:	mov	x1, x8
   10184:	str	x20, [sp, #8]
   10188:	str	wzr, [sp, #4]
   1018c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   10190:	cbz	w0, 10468 <PyInit__decimal@@Base+0x9904>
   10194:	ldr	x8, [sp, #8]
   10198:	cmp	x8, x20
   1019c:	b.eq	101e0 <PyInit__decimal@@Base+0x967c>  // b.none
   101a0:	ldr	x0, [x8, #8]
   101a4:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   101a8:	add	x8, x8, #0x4c0
   101ac:	cmp	x0, x8
   101b0:	b.eq	1021c <PyInit__decimal@@Base+0x96b8>  // b.none
   101b4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   101b8:	add	x1, x1, #0x4c0
   101bc:	bl	69b0 <PyType_IsSubtype@plt>
   101c0:	cbnz	w0, 1021c <PyInit__decimal@@Base+0x96b8>
   101c4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   101c8:	ldr	x8, [x8, #3936]
   101cc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   101d0:	add	x1, x1, #0x131
   101d4:	ldr	x0, [x8]
   101d8:	bl	6640 <PyErr_SetString@plt>
   101dc:	b	10468 <PyInit__decimal@@Base+0x9904>
   101e0:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   101e4:	ldr	x0, [x21, #1408]
   101e8:	sub	x2, x29, #0x8
   101ec:	mov	x1, xzr
   101f0:	bl	6730 <PyContextVar_Get@plt>
   101f4:	tbnz	w0, #31, 1049c <PyInit__decimal@@Base+0x9938>
   101f8:	ldur	x20, [x29, #-8]
   101fc:	cbz	x20, 103b0 <PyInit__decimal@@Base+0x984c>
   10200:	str	x20, [sp, #8]
   10204:	ldr	x8, [x20]
   10208:	subs	x8, x8, #0x1
   1020c:	str	x8, [x20]
   10210:	b.ne	1021c <PyInit__decimal@@Base+0x96b8>  // b.any
   10214:	mov	x0, x20
   10218:	bl	65c0 <_Py_Dealloc@plt>
   1021c:	ldr	x0, [x19, #8]
   10220:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   10224:	add	x21, x21, #0x320
   10228:	cmp	x0, x21
   1022c:	b.eq	10244 <PyInit__decimal@@Base+0x96e0>  // b.none
   10230:	ldr	x20, [sp, #8]
   10234:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10238:	add	x1, x1, #0x320
   1023c:	bl	69b0 <PyType_IsSubtype@plt>
   10240:	cbz	w0, 10358 <PyInit__decimal@@Base+0x97f4>
   10244:	ldr	x8, [x19]
   10248:	add	x8, x8, #0x1
   1024c:	str	x8, [x19]
   10250:	ldr	x20, [sp, #16]
   10254:	ldr	x0, [x20, #8]
   10258:	cmp	x0, x21
   1025c:	b.eq	10274 <PyInit__decimal@@Base+0x9710>  // b.none
   10260:	ldr	x21, [sp, #8]
   10264:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10268:	add	x1, x1, #0x320
   1026c:	bl	69b0 <PyType_IsSubtype@plt>
   10270:	cbz	w0, 10384 <PyInit__decimal@@Base+0x9820>
   10274:	ldr	x8, [x20]
   10278:	add	x8, x8, #0x1
   1027c:	str	x8, [x20]
   10280:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10284:	add	x0, x0, #0x320
   10288:	bl	6940 <_PyObject_New@plt>
   1028c:	cbz	x0, 10328 <PyInit__decimal@@Base+0x97c4>
   10290:	mov	w8, #0x30                  	// #48
   10294:	mov	x21, x0
   10298:	strb	w8, [x0, #24]!
   1029c:	mov	x9, #0xffffffffffffffff    	// #-1
   102a0:	mov	w10, #0x4                   	// #4
   102a4:	add	x8, x0, #0x30
   102a8:	stur	x9, [x0, #-8]
   102ac:	stp	xzr, xzr, [x0, #8]
   102b0:	stp	xzr, x10, [x0, #24]
   102b4:	str	x8, [x0, #40]
   102b8:	ldr	x8, [sp, #8]
   102bc:	add	x1, x19, #0x18
   102c0:	add	x2, x20, #0x18
   102c4:	add	x4, sp, #0x4
   102c8:	add	x3, x8, #0x10
   102cc:	bl	2395c <PyInit__decimal@@Base+0x1cdf8>
   102d0:	ldr	x8, [x19]
   102d4:	subs	x8, x8, #0x1
   102d8:	str	x8, [x19]
   102dc:	b.ne	102e8 <PyInit__decimal@@Base+0x9784>  // b.any
   102e0:	mov	x0, x19
   102e4:	bl	65c0 <_Py_Dealloc@plt>
   102e8:	ldr	x8, [x20]
   102ec:	subs	x8, x8, #0x1
   102f0:	str	x8, [x20]
   102f4:	b.ne	10300 <PyInit__decimal@@Base+0x979c>  // b.any
   102f8:	mov	x0, x20
   102fc:	bl	65c0 <_Py_Dealloc@plt>
   10300:	ldr	x0, [sp, #8]
   10304:	ldr	w1, [sp, #4]
   10308:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   1030c:	cbz	w0, 1046c <PyInit__decimal@@Base+0x9908>
   10310:	ldr	x8, [x21]
   10314:	subs	x8, x8, #0x1
   10318:	str	x8, [x21]
   1031c:	b.ne	10468 <PyInit__decimal@@Base+0x9904>  // b.any
   10320:	mov	x0, x21
   10324:	b	10464 <PyInit__decimal@@Base+0x9900>
   10328:	ldr	x8, [x19]
   1032c:	subs	x8, x8, #0x1
   10330:	str	x8, [x19]
   10334:	b.ne	10340 <PyInit__decimal@@Base+0x97dc>  // b.any
   10338:	mov	x0, x19
   1033c:	bl	65c0 <_Py_Dealloc@plt>
   10340:	ldr	x8, [x20]
   10344:	subs	x8, x8, #0x1
   10348:	str	x8, [x20]
   1034c:	b.ne	10468 <PyInit__decimal@@Base+0x9904>  // b.any
   10350:	mov	x0, x20
   10354:	b	10464 <PyInit__decimal@@Base+0x9900>
   10358:	ldr	x8, [x19, #8]
   1035c:	ldrb	w9, [x8, #171]
   10360:	tbnz	w9, #0, 10414 <PyInit__decimal@@Base+0x98b0>
   10364:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10368:	ldr	x9, [x9, #3936]
   1036c:	ldr	x2, [x8, #24]
   10370:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10374:	add	x1, x1, #0xd63
   10378:	ldr	x0, [x9]
   1037c:	bl	6a00 <PyErr_Format@plt>
   10380:	b	10468 <PyInit__decimal@@Base+0x9904>
   10384:	ldr	x8, [x20, #8]
   10388:	ldrb	w9, [x8, #171]
   1038c:	tbnz	w9, #0, 10434 <PyInit__decimal@@Base+0x98d0>
   10390:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10394:	ldr	x9, [x9, #3936]
   10398:	ldr	x2, [x8, #24]
   1039c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   103a0:	add	x1, x1, #0xd63
   103a4:	ldr	x0, [x9]
   103a8:	bl	6a00 <PyErr_Format@plt>
   103ac:	b	10450 <PyInit__decimal@@Base+0x98ec>
   103b0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   103b4:	ldr	x22, [x8, #1504]
   103b8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   103bc:	add	x0, x0, #0x4c0
   103c0:	mov	x1, xzr
   103c4:	bl	6830 <PyObject_CallObject@plt>
   103c8:	cbz	x0, 1049c <PyInit__decimal@@Base+0x9938>
   103cc:	ldp	q1, q0, [x22, #32]
   103d0:	ldr	q2, [x22, #16]
   103d4:	mov	x20, x0
   103d8:	mov	x1, x20
   103dc:	stp	q1, q0, [x0, #32]
   103e0:	str	q2, [x0, #16]
   103e4:	ldr	w8, [x22, #80]
   103e8:	stp	wzr, wzr, [x0, #44]
   103ec:	str	w8, [x0, #80]
   103f0:	ldr	x0, [x21, #1408]
   103f4:	bl	6670 <PyContextVar_Set@plt>
   103f8:	cbz	x0, 10484 <PyInit__decimal@@Base+0x9920>
   103fc:	ldr	x8, [x0]
   10400:	subs	x8, x8, #0x1
   10404:	str	x8, [x0]
   10408:	b.ne	10200 <PyInit__decimal@@Base+0x969c>  // b.any
   1040c:	bl	65c0 <_Py_Dealloc@plt>
   10410:	b	10200 <PyInit__decimal@@Base+0x969c>
   10414:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10418:	add	x0, x0, #0x320
   1041c:	mov	x1, x19
   10420:	mov	x2, x20
   10424:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10428:	mov	x19, x0
   1042c:	cbnz	x0, 10250 <PyInit__decimal@@Base+0x96ec>
   10430:	b	10468 <PyInit__decimal@@Base+0x9904>
   10434:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10438:	add	x0, x0, #0x320
   1043c:	mov	x1, x20
   10440:	mov	x2, x21
   10444:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10448:	mov	x20, x0
   1044c:	cbnz	x0, 10280 <PyInit__decimal@@Base+0x971c>
   10450:	ldr	x8, [x19]
   10454:	subs	x8, x8, #0x1
   10458:	str	x8, [x19]
   1045c:	b.ne	10468 <PyInit__decimal@@Base+0x9904>  // b.any
   10460:	mov	x0, x19
   10464:	bl	65c0 <_Py_Dealloc@plt>
   10468:	mov	x21, xzr
   1046c:	mov	x0, x21
   10470:	ldp	x20, x19, [sp, #64]
   10474:	ldp	x22, x21, [sp, #48]
   10478:	ldp	x29, x30, [sp, #32]
   1047c:	add	sp, sp, #0x50
   10480:	ret
   10484:	ldr	x8, [x20]
   10488:	subs	x8, x8, #0x1
   1048c:	str	x8, [x20]
   10490:	b.ne	1049c <PyInit__decimal@@Base+0x9938>  // b.any
   10494:	mov	x0, x20
   10498:	bl	65c0 <_Py_Dealloc@plt>
   1049c:	mov	x21, xzr
   104a0:	str	xzr, [sp, #8]
   104a4:	b	1046c <PyInit__decimal@@Base+0x9908>
   104a8:	sub	sp, sp, #0x50
   104ac:	stp	x29, x30, [sp, #32]
   104b0:	stp	x22, x21, [sp, #48]
   104b4:	stp	x20, x19, [sp, #64]
   104b8:	add	x29, sp, #0x20
   104bc:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   104c0:	ldr	x20, [x20, #4008]
   104c4:	mov	x8, x2
   104c8:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   104cc:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
   104d0:	mov	x19, x0
   104d4:	add	x2, x2, #0x27b
   104d8:	add	x3, x3, #0x830
   104dc:	add	x4, sp, #0x10
   104e0:	add	x5, sp, #0x8
   104e4:	mov	x0, x1
   104e8:	mov	x1, x8
   104ec:	str	x20, [sp, #8]
   104f0:	str	wzr, [sp, #4]
   104f4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   104f8:	cbz	w0, 107d0 <PyInit__decimal@@Base+0x9c6c>
   104fc:	ldr	x8, [sp, #8]
   10500:	cmp	x8, x20
   10504:	b.eq	10548 <PyInit__decimal@@Base+0x99e4>  // b.none
   10508:	ldr	x0, [x8, #8]
   1050c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   10510:	add	x8, x8, #0x4c0
   10514:	cmp	x0, x8
   10518:	b.eq	10584 <PyInit__decimal@@Base+0x9a20>  // b.none
   1051c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10520:	add	x1, x1, #0x4c0
   10524:	bl	69b0 <PyType_IsSubtype@plt>
   10528:	cbnz	w0, 10584 <PyInit__decimal@@Base+0x9a20>
   1052c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   10530:	ldr	x8, [x8, #3936]
   10534:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   10538:	add	x1, x1, #0x131
   1053c:	ldr	x0, [x8]
   10540:	bl	6640 <PyErr_SetString@plt>
   10544:	b	107d0 <PyInit__decimal@@Base+0x9c6c>
   10548:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   1054c:	ldr	x0, [x21, #1408]
   10550:	sub	x2, x29, #0x8
   10554:	mov	x1, xzr
   10558:	bl	6730 <PyContextVar_Get@plt>
   1055c:	tbnz	w0, #31, 10804 <PyInit__decimal@@Base+0x9ca0>
   10560:	ldur	x20, [x29, #-8]
   10564:	cbz	x20, 10718 <PyInit__decimal@@Base+0x9bb4>
   10568:	str	x20, [sp, #8]
   1056c:	ldr	x8, [x20]
   10570:	subs	x8, x8, #0x1
   10574:	str	x8, [x20]
   10578:	b.ne	10584 <PyInit__decimal@@Base+0x9a20>  // b.any
   1057c:	mov	x0, x20
   10580:	bl	65c0 <_Py_Dealloc@plt>
   10584:	ldr	x0, [x19, #8]
   10588:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   1058c:	add	x21, x21, #0x320
   10590:	cmp	x0, x21
   10594:	b.eq	105ac <PyInit__decimal@@Base+0x9a48>  // b.none
   10598:	ldr	x20, [sp, #8]
   1059c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   105a0:	add	x1, x1, #0x320
   105a4:	bl	69b0 <PyType_IsSubtype@plt>
   105a8:	cbz	w0, 106c0 <PyInit__decimal@@Base+0x9b5c>
   105ac:	ldr	x8, [x19]
   105b0:	add	x8, x8, #0x1
   105b4:	str	x8, [x19]
   105b8:	ldr	x20, [sp, #16]
   105bc:	ldr	x0, [x20, #8]
   105c0:	cmp	x0, x21
   105c4:	b.eq	105dc <PyInit__decimal@@Base+0x9a78>  // b.none
   105c8:	ldr	x21, [sp, #8]
   105cc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   105d0:	add	x1, x1, #0x320
   105d4:	bl	69b0 <PyType_IsSubtype@plt>
   105d8:	cbz	w0, 106ec <PyInit__decimal@@Base+0x9b88>
   105dc:	ldr	x8, [x20]
   105e0:	add	x8, x8, #0x1
   105e4:	str	x8, [x20]
   105e8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   105ec:	add	x0, x0, #0x320
   105f0:	bl	6940 <_PyObject_New@plt>
   105f4:	cbz	x0, 10690 <PyInit__decimal@@Base+0x9b2c>
   105f8:	mov	w8, #0x30                  	// #48
   105fc:	mov	x21, x0
   10600:	strb	w8, [x0, #24]!
   10604:	mov	x9, #0xffffffffffffffff    	// #-1
   10608:	mov	w10, #0x4                   	// #4
   1060c:	add	x8, x0, #0x30
   10610:	stur	x9, [x0, #-8]
   10614:	stp	xzr, xzr, [x0, #8]
   10618:	stp	xzr, x10, [x0, #24]
   1061c:	str	x8, [x0, #40]
   10620:	ldr	x8, [sp, #8]
   10624:	add	x1, x19, #0x18
   10628:	add	x2, x20, #0x18
   1062c:	add	x4, sp, #0x4
   10630:	add	x3, x8, #0x10
   10634:	bl	244fc <PyInit__decimal@@Base+0x1d998>
   10638:	ldr	x8, [x19]
   1063c:	subs	x8, x8, #0x1
   10640:	str	x8, [x19]
   10644:	b.ne	10650 <PyInit__decimal@@Base+0x9aec>  // b.any
   10648:	mov	x0, x19
   1064c:	bl	65c0 <_Py_Dealloc@plt>
   10650:	ldr	x8, [x20]
   10654:	subs	x8, x8, #0x1
   10658:	str	x8, [x20]
   1065c:	b.ne	10668 <PyInit__decimal@@Base+0x9b04>  // b.any
   10660:	mov	x0, x20
   10664:	bl	65c0 <_Py_Dealloc@plt>
   10668:	ldr	x0, [sp, #8]
   1066c:	ldr	w1, [sp, #4]
   10670:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   10674:	cbz	w0, 107d4 <PyInit__decimal@@Base+0x9c70>
   10678:	ldr	x8, [x21]
   1067c:	subs	x8, x8, #0x1
   10680:	str	x8, [x21]
   10684:	b.ne	107d0 <PyInit__decimal@@Base+0x9c6c>  // b.any
   10688:	mov	x0, x21
   1068c:	b	107cc <PyInit__decimal@@Base+0x9c68>
   10690:	ldr	x8, [x19]
   10694:	subs	x8, x8, #0x1
   10698:	str	x8, [x19]
   1069c:	b.ne	106a8 <PyInit__decimal@@Base+0x9b44>  // b.any
   106a0:	mov	x0, x19
   106a4:	bl	65c0 <_Py_Dealloc@plt>
   106a8:	ldr	x8, [x20]
   106ac:	subs	x8, x8, #0x1
   106b0:	str	x8, [x20]
   106b4:	b.ne	107d0 <PyInit__decimal@@Base+0x9c6c>  // b.any
   106b8:	mov	x0, x20
   106bc:	b	107cc <PyInit__decimal@@Base+0x9c68>
   106c0:	ldr	x8, [x19, #8]
   106c4:	ldrb	w9, [x8, #171]
   106c8:	tbnz	w9, #0, 1077c <PyInit__decimal@@Base+0x9c18>
   106cc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   106d0:	ldr	x9, [x9, #3936]
   106d4:	ldr	x2, [x8, #24]
   106d8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   106dc:	add	x1, x1, #0xd63
   106e0:	ldr	x0, [x9]
   106e4:	bl	6a00 <PyErr_Format@plt>
   106e8:	b	107d0 <PyInit__decimal@@Base+0x9c6c>
   106ec:	ldr	x8, [x20, #8]
   106f0:	ldrb	w9, [x8, #171]
   106f4:	tbnz	w9, #0, 1079c <PyInit__decimal@@Base+0x9c38>
   106f8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   106fc:	ldr	x9, [x9, #3936]
   10700:	ldr	x2, [x8, #24]
   10704:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10708:	add	x1, x1, #0xd63
   1070c:	ldr	x0, [x9]
   10710:	bl	6a00 <PyErr_Format@plt>
   10714:	b	107b8 <PyInit__decimal@@Base+0x9c54>
   10718:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1071c:	ldr	x22, [x8, #1504]
   10720:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10724:	add	x0, x0, #0x4c0
   10728:	mov	x1, xzr
   1072c:	bl	6830 <PyObject_CallObject@plt>
   10730:	cbz	x0, 10804 <PyInit__decimal@@Base+0x9ca0>
   10734:	ldp	q1, q0, [x22, #32]
   10738:	ldr	q2, [x22, #16]
   1073c:	mov	x20, x0
   10740:	mov	x1, x20
   10744:	stp	q1, q0, [x0, #32]
   10748:	str	q2, [x0, #16]
   1074c:	ldr	w8, [x22, #80]
   10750:	stp	wzr, wzr, [x0, #44]
   10754:	str	w8, [x0, #80]
   10758:	ldr	x0, [x21, #1408]
   1075c:	bl	6670 <PyContextVar_Set@plt>
   10760:	cbz	x0, 107ec <PyInit__decimal@@Base+0x9c88>
   10764:	ldr	x8, [x0]
   10768:	subs	x8, x8, #0x1
   1076c:	str	x8, [x0]
   10770:	b.ne	10568 <PyInit__decimal@@Base+0x9a04>  // b.any
   10774:	bl	65c0 <_Py_Dealloc@plt>
   10778:	b	10568 <PyInit__decimal@@Base+0x9a04>
   1077c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10780:	add	x0, x0, #0x320
   10784:	mov	x1, x19
   10788:	mov	x2, x20
   1078c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10790:	mov	x19, x0
   10794:	cbnz	x0, 105b8 <PyInit__decimal@@Base+0x9a54>
   10798:	b	107d0 <PyInit__decimal@@Base+0x9c6c>
   1079c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   107a0:	add	x0, x0, #0x320
   107a4:	mov	x1, x20
   107a8:	mov	x2, x21
   107ac:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   107b0:	mov	x20, x0
   107b4:	cbnz	x0, 105e8 <PyInit__decimal@@Base+0x9a84>
   107b8:	ldr	x8, [x19]
   107bc:	subs	x8, x8, #0x1
   107c0:	str	x8, [x19]
   107c4:	b.ne	107d0 <PyInit__decimal@@Base+0x9c6c>  // b.any
   107c8:	mov	x0, x19
   107cc:	bl	65c0 <_Py_Dealloc@plt>
   107d0:	mov	x21, xzr
   107d4:	mov	x0, x21
   107d8:	ldp	x20, x19, [sp, #64]
   107dc:	ldp	x22, x21, [sp, #48]
   107e0:	ldp	x29, x30, [sp, #32]
   107e4:	add	sp, sp, #0x50
   107e8:	ret
   107ec:	ldr	x8, [x20]
   107f0:	subs	x8, x8, #0x1
   107f4:	str	x8, [x20]
   107f8:	b.ne	10804 <PyInit__decimal@@Base+0x9ca0>  // b.any
   107fc:	mov	x0, x20
   10800:	bl	65c0 <_Py_Dealloc@plt>
   10804:	mov	x21, xzr
   10808:	str	xzr, [sp, #8]
   1080c:	b	107d4 <PyInit__decimal@@Base+0x9c70>
   10810:	sub	sp, sp, #0x50
   10814:	stp	x29, x30, [sp, #32]
   10818:	stp	x22, x21, [sp, #48]
   1081c:	stp	x20, x19, [sp, #64]
   10820:	add	x29, sp, #0x20
   10824:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   10828:	ldr	x20, [x20, #4008]
   1082c:	mov	x8, x2
   10830:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   10834:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
   10838:	mov	x19, x0
   1083c:	add	x2, x2, #0x27b
   10840:	add	x3, x3, #0x848
   10844:	add	x4, sp, #0x10
   10848:	add	x5, sp, #0x8
   1084c:	mov	x0, x1
   10850:	mov	x1, x8
   10854:	str	x20, [sp, #8]
   10858:	str	wzr, [sp, #4]
   1085c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   10860:	cbz	w0, 10b38 <PyInit__decimal@@Base+0x9fd4>
   10864:	ldr	x8, [sp, #8]
   10868:	cmp	x8, x20
   1086c:	b.eq	108b0 <PyInit__decimal@@Base+0x9d4c>  // b.none
   10870:	ldr	x0, [x8, #8]
   10874:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   10878:	add	x8, x8, #0x4c0
   1087c:	cmp	x0, x8
   10880:	b.eq	108ec <PyInit__decimal@@Base+0x9d88>  // b.none
   10884:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10888:	add	x1, x1, #0x4c0
   1088c:	bl	69b0 <PyType_IsSubtype@plt>
   10890:	cbnz	w0, 108ec <PyInit__decimal@@Base+0x9d88>
   10894:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   10898:	ldr	x8, [x8, #3936]
   1089c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   108a0:	add	x1, x1, #0x131
   108a4:	ldr	x0, [x8]
   108a8:	bl	6640 <PyErr_SetString@plt>
   108ac:	b	10b38 <PyInit__decimal@@Base+0x9fd4>
   108b0:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   108b4:	ldr	x0, [x21, #1408]
   108b8:	sub	x2, x29, #0x8
   108bc:	mov	x1, xzr
   108c0:	bl	6730 <PyContextVar_Get@plt>
   108c4:	tbnz	w0, #31, 10b6c <PyInit__decimal@@Base+0xa008>
   108c8:	ldur	x20, [x29, #-8]
   108cc:	cbz	x20, 10a80 <PyInit__decimal@@Base+0x9f1c>
   108d0:	str	x20, [sp, #8]
   108d4:	ldr	x8, [x20]
   108d8:	subs	x8, x8, #0x1
   108dc:	str	x8, [x20]
   108e0:	b.ne	108ec <PyInit__decimal@@Base+0x9d88>  // b.any
   108e4:	mov	x0, x20
   108e8:	bl	65c0 <_Py_Dealloc@plt>
   108ec:	ldr	x0, [x19, #8]
   108f0:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   108f4:	add	x21, x21, #0x320
   108f8:	cmp	x0, x21
   108fc:	b.eq	10914 <PyInit__decimal@@Base+0x9db0>  // b.none
   10900:	ldr	x20, [sp, #8]
   10904:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10908:	add	x1, x1, #0x320
   1090c:	bl	69b0 <PyType_IsSubtype@plt>
   10910:	cbz	w0, 10a28 <PyInit__decimal@@Base+0x9ec4>
   10914:	ldr	x8, [x19]
   10918:	add	x8, x8, #0x1
   1091c:	str	x8, [x19]
   10920:	ldr	x20, [sp, #16]
   10924:	ldr	x0, [x20, #8]
   10928:	cmp	x0, x21
   1092c:	b.eq	10944 <PyInit__decimal@@Base+0x9de0>  // b.none
   10930:	ldr	x21, [sp, #8]
   10934:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10938:	add	x1, x1, #0x320
   1093c:	bl	69b0 <PyType_IsSubtype@plt>
   10940:	cbz	w0, 10a54 <PyInit__decimal@@Base+0x9ef0>
   10944:	ldr	x8, [x20]
   10948:	add	x8, x8, #0x1
   1094c:	str	x8, [x20]
   10950:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10954:	add	x0, x0, #0x320
   10958:	bl	6940 <_PyObject_New@plt>
   1095c:	cbz	x0, 109f8 <PyInit__decimal@@Base+0x9e94>
   10960:	mov	w8, #0x30                  	// #48
   10964:	mov	x21, x0
   10968:	strb	w8, [x0, #24]!
   1096c:	mov	x9, #0xffffffffffffffff    	// #-1
   10970:	mov	w10, #0x4                   	// #4
   10974:	add	x8, x0, #0x30
   10978:	stur	x9, [x0, #-8]
   1097c:	stp	xzr, xzr, [x0, #8]
   10980:	stp	xzr, x10, [x0, #24]
   10984:	str	x8, [x0, #40]
   10988:	ldr	x8, [sp, #8]
   1098c:	add	x1, x19, #0x18
   10990:	add	x2, x20, #0x18
   10994:	add	x4, sp, #0x4
   10998:	add	x3, x8, #0x10
   1099c:	bl	23ed8 <PyInit__decimal@@Base+0x1d374>
   109a0:	ldr	x8, [x19]
   109a4:	subs	x8, x8, #0x1
   109a8:	str	x8, [x19]
   109ac:	b.ne	109b8 <PyInit__decimal@@Base+0x9e54>  // b.any
   109b0:	mov	x0, x19
   109b4:	bl	65c0 <_Py_Dealloc@plt>
   109b8:	ldr	x8, [x20]
   109bc:	subs	x8, x8, #0x1
   109c0:	str	x8, [x20]
   109c4:	b.ne	109d0 <PyInit__decimal@@Base+0x9e6c>  // b.any
   109c8:	mov	x0, x20
   109cc:	bl	65c0 <_Py_Dealloc@plt>
   109d0:	ldr	x0, [sp, #8]
   109d4:	ldr	w1, [sp, #4]
   109d8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   109dc:	cbz	w0, 10b3c <PyInit__decimal@@Base+0x9fd8>
   109e0:	ldr	x8, [x21]
   109e4:	subs	x8, x8, #0x1
   109e8:	str	x8, [x21]
   109ec:	b.ne	10b38 <PyInit__decimal@@Base+0x9fd4>  // b.any
   109f0:	mov	x0, x21
   109f4:	b	10b34 <PyInit__decimal@@Base+0x9fd0>
   109f8:	ldr	x8, [x19]
   109fc:	subs	x8, x8, #0x1
   10a00:	str	x8, [x19]
   10a04:	b.ne	10a10 <PyInit__decimal@@Base+0x9eac>  // b.any
   10a08:	mov	x0, x19
   10a0c:	bl	65c0 <_Py_Dealloc@plt>
   10a10:	ldr	x8, [x20]
   10a14:	subs	x8, x8, #0x1
   10a18:	str	x8, [x20]
   10a1c:	b.ne	10b38 <PyInit__decimal@@Base+0x9fd4>  // b.any
   10a20:	mov	x0, x20
   10a24:	b	10b34 <PyInit__decimal@@Base+0x9fd0>
   10a28:	ldr	x8, [x19, #8]
   10a2c:	ldrb	w9, [x8, #171]
   10a30:	tbnz	w9, #0, 10ae4 <PyInit__decimal@@Base+0x9f80>
   10a34:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10a38:	ldr	x9, [x9, #3936]
   10a3c:	ldr	x2, [x8, #24]
   10a40:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10a44:	add	x1, x1, #0xd63
   10a48:	ldr	x0, [x9]
   10a4c:	bl	6a00 <PyErr_Format@plt>
   10a50:	b	10b38 <PyInit__decimal@@Base+0x9fd4>
   10a54:	ldr	x8, [x20, #8]
   10a58:	ldrb	w9, [x8, #171]
   10a5c:	tbnz	w9, #0, 10b04 <PyInit__decimal@@Base+0x9fa0>
   10a60:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10a64:	ldr	x9, [x9, #3936]
   10a68:	ldr	x2, [x8, #24]
   10a6c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10a70:	add	x1, x1, #0xd63
   10a74:	ldr	x0, [x9]
   10a78:	bl	6a00 <PyErr_Format@plt>
   10a7c:	b	10b20 <PyInit__decimal@@Base+0x9fbc>
   10a80:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   10a84:	ldr	x22, [x8, #1504]
   10a88:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10a8c:	add	x0, x0, #0x4c0
   10a90:	mov	x1, xzr
   10a94:	bl	6830 <PyObject_CallObject@plt>
   10a98:	cbz	x0, 10b6c <PyInit__decimal@@Base+0xa008>
   10a9c:	ldp	q1, q0, [x22, #32]
   10aa0:	ldr	q2, [x22, #16]
   10aa4:	mov	x20, x0
   10aa8:	mov	x1, x20
   10aac:	stp	q1, q0, [x0, #32]
   10ab0:	str	q2, [x0, #16]
   10ab4:	ldr	w8, [x22, #80]
   10ab8:	stp	wzr, wzr, [x0, #44]
   10abc:	str	w8, [x0, #80]
   10ac0:	ldr	x0, [x21, #1408]
   10ac4:	bl	6670 <PyContextVar_Set@plt>
   10ac8:	cbz	x0, 10b54 <PyInit__decimal@@Base+0x9ff0>
   10acc:	ldr	x8, [x0]
   10ad0:	subs	x8, x8, #0x1
   10ad4:	str	x8, [x0]
   10ad8:	b.ne	108d0 <PyInit__decimal@@Base+0x9d6c>  // b.any
   10adc:	bl	65c0 <_Py_Dealloc@plt>
   10ae0:	b	108d0 <PyInit__decimal@@Base+0x9d6c>
   10ae4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10ae8:	add	x0, x0, #0x320
   10aec:	mov	x1, x19
   10af0:	mov	x2, x20
   10af4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10af8:	mov	x19, x0
   10afc:	cbnz	x0, 10920 <PyInit__decimal@@Base+0x9dbc>
   10b00:	b	10b38 <PyInit__decimal@@Base+0x9fd4>
   10b04:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10b08:	add	x0, x0, #0x320
   10b0c:	mov	x1, x20
   10b10:	mov	x2, x21
   10b14:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10b18:	mov	x20, x0
   10b1c:	cbnz	x0, 10950 <PyInit__decimal@@Base+0x9dec>
   10b20:	ldr	x8, [x19]
   10b24:	subs	x8, x8, #0x1
   10b28:	str	x8, [x19]
   10b2c:	b.ne	10b38 <PyInit__decimal@@Base+0x9fd4>  // b.any
   10b30:	mov	x0, x19
   10b34:	bl	65c0 <_Py_Dealloc@plt>
   10b38:	mov	x21, xzr
   10b3c:	mov	x0, x21
   10b40:	ldp	x20, x19, [sp, #64]
   10b44:	ldp	x22, x21, [sp, #48]
   10b48:	ldp	x29, x30, [sp, #32]
   10b4c:	add	sp, sp, #0x50
   10b50:	ret
   10b54:	ldr	x8, [x20]
   10b58:	subs	x8, x8, #0x1
   10b5c:	str	x8, [x20]
   10b60:	b.ne	10b6c <PyInit__decimal@@Base+0xa008>  // b.any
   10b64:	mov	x0, x20
   10b68:	bl	65c0 <_Py_Dealloc@plt>
   10b6c:	mov	x21, xzr
   10b70:	str	xzr, [sp, #8]
   10b74:	b	10b3c <PyInit__decimal@@Base+0x9fd8>
   10b78:	sub	sp, sp, #0x50
   10b7c:	stp	x29, x30, [sp, #32]
   10b80:	stp	x22, x21, [sp, #48]
   10b84:	stp	x20, x19, [sp, #64]
   10b88:	add	x29, sp, #0x20
   10b8c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   10b90:	ldr	x20, [x20, #4008]
   10b94:	mov	x8, x2
   10b98:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   10b9c:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
   10ba0:	mov	x19, x0
   10ba4:	add	x2, x2, #0x27b
   10ba8:	add	x3, x3, #0x860
   10bac:	add	x4, sp, #0x10
   10bb0:	add	x5, sp, #0x8
   10bb4:	mov	x0, x1
   10bb8:	mov	x1, x8
   10bbc:	str	x20, [sp, #8]
   10bc0:	str	wzr, [sp, #4]
   10bc4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   10bc8:	cbz	w0, 10ea0 <PyInit__decimal@@Base+0xa33c>
   10bcc:	ldr	x8, [sp, #8]
   10bd0:	cmp	x8, x20
   10bd4:	b.eq	10c18 <PyInit__decimal@@Base+0xa0b4>  // b.none
   10bd8:	ldr	x0, [x8, #8]
   10bdc:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   10be0:	add	x8, x8, #0x4c0
   10be4:	cmp	x0, x8
   10be8:	b.eq	10c54 <PyInit__decimal@@Base+0xa0f0>  // b.none
   10bec:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10bf0:	add	x1, x1, #0x4c0
   10bf4:	bl	69b0 <PyType_IsSubtype@plt>
   10bf8:	cbnz	w0, 10c54 <PyInit__decimal@@Base+0xa0f0>
   10bfc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   10c00:	ldr	x8, [x8, #3936]
   10c04:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   10c08:	add	x1, x1, #0x131
   10c0c:	ldr	x0, [x8]
   10c10:	bl	6640 <PyErr_SetString@plt>
   10c14:	b	10ea0 <PyInit__decimal@@Base+0xa33c>
   10c18:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   10c1c:	ldr	x0, [x21, #1408]
   10c20:	sub	x2, x29, #0x8
   10c24:	mov	x1, xzr
   10c28:	bl	6730 <PyContextVar_Get@plt>
   10c2c:	tbnz	w0, #31, 10ed4 <PyInit__decimal@@Base+0xa370>
   10c30:	ldur	x20, [x29, #-8]
   10c34:	cbz	x20, 10de8 <PyInit__decimal@@Base+0xa284>
   10c38:	str	x20, [sp, #8]
   10c3c:	ldr	x8, [x20]
   10c40:	subs	x8, x8, #0x1
   10c44:	str	x8, [x20]
   10c48:	b.ne	10c54 <PyInit__decimal@@Base+0xa0f0>  // b.any
   10c4c:	mov	x0, x20
   10c50:	bl	65c0 <_Py_Dealloc@plt>
   10c54:	ldr	x0, [x19, #8]
   10c58:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   10c5c:	add	x21, x21, #0x320
   10c60:	cmp	x0, x21
   10c64:	b.eq	10c7c <PyInit__decimal@@Base+0xa118>  // b.none
   10c68:	ldr	x20, [sp, #8]
   10c6c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10c70:	add	x1, x1, #0x320
   10c74:	bl	69b0 <PyType_IsSubtype@plt>
   10c78:	cbz	w0, 10d90 <PyInit__decimal@@Base+0xa22c>
   10c7c:	ldr	x8, [x19]
   10c80:	add	x8, x8, #0x1
   10c84:	str	x8, [x19]
   10c88:	ldr	x20, [sp, #16]
   10c8c:	ldr	x0, [x20, #8]
   10c90:	cmp	x0, x21
   10c94:	b.eq	10cac <PyInit__decimal@@Base+0xa148>  // b.none
   10c98:	ldr	x21, [sp, #8]
   10c9c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10ca0:	add	x1, x1, #0x320
   10ca4:	bl	69b0 <PyType_IsSubtype@plt>
   10ca8:	cbz	w0, 10dbc <PyInit__decimal@@Base+0xa258>
   10cac:	ldr	x8, [x20]
   10cb0:	add	x8, x8, #0x1
   10cb4:	str	x8, [x20]
   10cb8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10cbc:	add	x0, x0, #0x320
   10cc0:	bl	6940 <_PyObject_New@plt>
   10cc4:	cbz	x0, 10d60 <PyInit__decimal@@Base+0xa1fc>
   10cc8:	mov	w8, #0x30                  	// #48
   10ccc:	mov	x21, x0
   10cd0:	strb	w8, [x0, #24]!
   10cd4:	mov	x9, #0xffffffffffffffff    	// #-1
   10cd8:	mov	w10, #0x4                   	// #4
   10cdc:	add	x8, x0, #0x30
   10ce0:	stur	x9, [x0, #-8]
   10ce4:	stp	xzr, xzr, [x0, #8]
   10ce8:	stp	xzr, x10, [x0, #24]
   10cec:	str	x8, [x0, #40]
   10cf0:	ldr	x8, [sp, #8]
   10cf4:	add	x1, x19, #0x18
   10cf8:	add	x2, x20, #0x18
   10cfc:	add	x4, sp, #0x4
   10d00:	add	x3, x8, #0x10
   10d04:	bl	2415c <PyInit__decimal@@Base+0x1d5f8>
   10d08:	ldr	x8, [x19]
   10d0c:	subs	x8, x8, #0x1
   10d10:	str	x8, [x19]
   10d14:	b.ne	10d20 <PyInit__decimal@@Base+0xa1bc>  // b.any
   10d18:	mov	x0, x19
   10d1c:	bl	65c0 <_Py_Dealloc@plt>
   10d20:	ldr	x8, [x20]
   10d24:	subs	x8, x8, #0x1
   10d28:	str	x8, [x20]
   10d2c:	b.ne	10d38 <PyInit__decimal@@Base+0xa1d4>  // b.any
   10d30:	mov	x0, x20
   10d34:	bl	65c0 <_Py_Dealloc@plt>
   10d38:	ldr	x0, [sp, #8]
   10d3c:	ldr	w1, [sp, #4]
   10d40:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   10d44:	cbz	w0, 10ea4 <PyInit__decimal@@Base+0xa340>
   10d48:	ldr	x8, [x21]
   10d4c:	subs	x8, x8, #0x1
   10d50:	str	x8, [x21]
   10d54:	b.ne	10ea0 <PyInit__decimal@@Base+0xa33c>  // b.any
   10d58:	mov	x0, x21
   10d5c:	b	10e9c <PyInit__decimal@@Base+0xa338>
   10d60:	ldr	x8, [x19]
   10d64:	subs	x8, x8, #0x1
   10d68:	str	x8, [x19]
   10d6c:	b.ne	10d78 <PyInit__decimal@@Base+0xa214>  // b.any
   10d70:	mov	x0, x19
   10d74:	bl	65c0 <_Py_Dealloc@plt>
   10d78:	ldr	x8, [x20]
   10d7c:	subs	x8, x8, #0x1
   10d80:	str	x8, [x20]
   10d84:	b.ne	10ea0 <PyInit__decimal@@Base+0xa33c>  // b.any
   10d88:	mov	x0, x20
   10d8c:	b	10e9c <PyInit__decimal@@Base+0xa338>
   10d90:	ldr	x8, [x19, #8]
   10d94:	ldrb	w9, [x8, #171]
   10d98:	tbnz	w9, #0, 10e4c <PyInit__decimal@@Base+0xa2e8>
   10d9c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10da0:	ldr	x9, [x9, #3936]
   10da4:	ldr	x2, [x8, #24]
   10da8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10dac:	add	x1, x1, #0xd63
   10db0:	ldr	x0, [x9]
   10db4:	bl	6a00 <PyErr_Format@plt>
   10db8:	b	10ea0 <PyInit__decimal@@Base+0xa33c>
   10dbc:	ldr	x8, [x20, #8]
   10dc0:	ldrb	w9, [x8, #171]
   10dc4:	tbnz	w9, #0, 10e6c <PyInit__decimal@@Base+0xa308>
   10dc8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   10dcc:	ldr	x9, [x9, #3936]
   10dd0:	ldr	x2, [x8, #24]
   10dd4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   10dd8:	add	x1, x1, #0xd63
   10ddc:	ldr	x0, [x9]
   10de0:	bl	6a00 <PyErr_Format@plt>
   10de4:	b	10e88 <PyInit__decimal@@Base+0xa324>
   10de8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   10dec:	ldr	x22, [x8, #1504]
   10df0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10df4:	add	x0, x0, #0x4c0
   10df8:	mov	x1, xzr
   10dfc:	bl	6830 <PyObject_CallObject@plt>
   10e00:	cbz	x0, 10ed4 <PyInit__decimal@@Base+0xa370>
   10e04:	ldp	q1, q0, [x22, #32]
   10e08:	ldr	q2, [x22, #16]
   10e0c:	mov	x20, x0
   10e10:	mov	x1, x20
   10e14:	stp	q1, q0, [x0, #32]
   10e18:	str	q2, [x0, #16]
   10e1c:	ldr	w8, [x22, #80]
   10e20:	stp	wzr, wzr, [x0, #44]
   10e24:	str	w8, [x0, #80]
   10e28:	ldr	x0, [x21, #1408]
   10e2c:	bl	6670 <PyContextVar_Set@plt>
   10e30:	cbz	x0, 10ebc <PyInit__decimal@@Base+0xa358>
   10e34:	ldr	x8, [x0]
   10e38:	subs	x8, x8, #0x1
   10e3c:	str	x8, [x0]
   10e40:	b.ne	10c38 <PyInit__decimal@@Base+0xa0d4>  // b.any
   10e44:	bl	65c0 <_Py_Dealloc@plt>
   10e48:	b	10c38 <PyInit__decimal@@Base+0xa0d4>
   10e4c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10e50:	add	x0, x0, #0x320
   10e54:	mov	x1, x19
   10e58:	mov	x2, x20
   10e5c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10e60:	mov	x19, x0
   10e64:	cbnz	x0, 10c88 <PyInit__decimal@@Base+0xa124>
   10e68:	b	10ea0 <PyInit__decimal@@Base+0xa33c>
   10e6c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   10e70:	add	x0, x0, #0x320
   10e74:	mov	x1, x20
   10e78:	mov	x2, x21
   10e7c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   10e80:	mov	x20, x0
   10e84:	cbnz	x0, 10cb8 <PyInit__decimal@@Base+0xa154>
   10e88:	ldr	x8, [x19]
   10e8c:	subs	x8, x8, #0x1
   10e90:	str	x8, [x19]
   10e94:	b.ne	10ea0 <PyInit__decimal@@Base+0xa33c>  // b.any
   10e98:	mov	x0, x19
   10e9c:	bl	65c0 <_Py_Dealloc@plt>
   10ea0:	mov	x21, xzr
   10ea4:	mov	x0, x21
   10ea8:	ldp	x20, x19, [sp, #64]
   10eac:	ldp	x22, x21, [sp, #48]
   10eb0:	ldp	x29, x30, [sp, #32]
   10eb4:	add	sp, sp, #0x50
   10eb8:	ret
   10ebc:	ldr	x8, [x20]
   10ec0:	subs	x8, x8, #0x1
   10ec4:	str	x8, [x20]
   10ec8:	b.ne	10ed4 <PyInit__decimal@@Base+0xa370>  // b.any
   10ecc:	mov	x0, x20
   10ed0:	bl	65c0 <_Py_Dealloc@plt>
   10ed4:	mov	x21, xzr
   10ed8:	str	xzr, [sp, #8]
   10edc:	b	10ea4 <PyInit__decimal@@Base+0xa340>
   10ee0:	sub	sp, sp, #0x50
   10ee4:	stp	x29, x30, [sp, #32]
   10ee8:	stp	x22, x21, [sp, #48]
   10eec:	stp	x20, x19, [sp, #64]
   10ef0:	add	x29, sp, #0x20
   10ef4:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   10ef8:	ldr	x20, [x20, #4008]
   10efc:	mov	x8, x2
   10f00:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   10f04:	adrp	x3, 4b000 <PyInit__decimal@@Base+0x4449c>
   10f08:	mov	x19, x0
   10f0c:	add	x2, x2, #0x27b
   10f10:	add	x3, x3, #0x878
   10f14:	add	x4, sp, #0x10
   10f18:	add	x5, sp, #0x8
   10f1c:	mov	x0, x1
   10f20:	mov	x1, x8
   10f24:	str	x20, [sp, #8]
   10f28:	str	wzr, [sp, #4]
   10f2c:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   10f30:	cbz	w0, 11208 <PyInit__decimal@@Base+0xa6a4>
   10f34:	ldr	x8, [sp, #8]
   10f38:	cmp	x8, x20
   10f3c:	b.eq	10f80 <PyInit__decimal@@Base+0xa41c>  // b.none
   10f40:	ldr	x0, [x8, #8]
   10f44:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   10f48:	add	x8, x8, #0x4c0
   10f4c:	cmp	x0, x8
   10f50:	b.eq	10fbc <PyInit__decimal@@Base+0xa458>  // b.none
   10f54:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10f58:	add	x1, x1, #0x4c0
   10f5c:	bl	69b0 <PyType_IsSubtype@plt>
   10f60:	cbnz	w0, 10fbc <PyInit__decimal@@Base+0xa458>
   10f64:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   10f68:	ldr	x8, [x8, #3936]
   10f6c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   10f70:	add	x1, x1, #0x131
   10f74:	ldr	x0, [x8]
   10f78:	bl	6640 <PyErr_SetString@plt>
   10f7c:	b	11208 <PyInit__decimal@@Base+0xa6a4>
   10f80:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   10f84:	ldr	x0, [x21, #1408]
   10f88:	sub	x2, x29, #0x8
   10f8c:	mov	x1, xzr
   10f90:	bl	6730 <PyContextVar_Get@plt>
   10f94:	tbnz	w0, #31, 1123c <PyInit__decimal@@Base+0xa6d8>
   10f98:	ldur	x20, [x29, #-8]
   10f9c:	cbz	x20, 11150 <PyInit__decimal@@Base+0xa5ec>
   10fa0:	str	x20, [sp, #8]
   10fa4:	ldr	x8, [x20]
   10fa8:	subs	x8, x8, #0x1
   10fac:	str	x8, [x20]
   10fb0:	b.ne	10fbc <PyInit__decimal@@Base+0xa458>  // b.any
   10fb4:	mov	x0, x20
   10fb8:	bl	65c0 <_Py_Dealloc@plt>
   10fbc:	ldr	x0, [x19, #8]
   10fc0:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   10fc4:	add	x21, x21, #0x320
   10fc8:	cmp	x0, x21
   10fcc:	b.eq	10fe4 <PyInit__decimal@@Base+0xa480>  // b.none
   10fd0:	ldr	x20, [sp, #8]
   10fd4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   10fd8:	add	x1, x1, #0x320
   10fdc:	bl	69b0 <PyType_IsSubtype@plt>
   10fe0:	cbz	w0, 110f8 <PyInit__decimal@@Base+0xa594>
   10fe4:	ldr	x8, [x19]
   10fe8:	add	x8, x8, #0x1
   10fec:	str	x8, [x19]
   10ff0:	ldr	x20, [sp, #16]
   10ff4:	ldr	x0, [x20, #8]
   10ff8:	cmp	x0, x21
   10ffc:	b.eq	11014 <PyInit__decimal@@Base+0xa4b0>  // b.none
   11000:	ldr	x21, [sp, #8]
   11004:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   11008:	add	x1, x1, #0x320
   1100c:	bl	69b0 <PyType_IsSubtype@plt>
   11010:	cbz	w0, 11124 <PyInit__decimal@@Base+0xa5c0>
   11014:	ldr	x8, [x20]
   11018:	add	x8, x8, #0x1
   1101c:	str	x8, [x20]
   11020:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   11024:	add	x0, x0, #0x320
   11028:	bl	6940 <_PyObject_New@plt>
   1102c:	cbz	x0, 110c8 <PyInit__decimal@@Base+0xa564>
   11030:	mov	w8, #0x30                  	// #48
   11034:	mov	x21, x0
   11038:	strb	w8, [x0, #24]!
   1103c:	mov	x9, #0xffffffffffffffff    	// #-1
   11040:	mov	w10, #0x4                   	// #4
   11044:	add	x8, x0, #0x30
   11048:	stur	x9, [x0, #-8]
   1104c:	stp	xzr, xzr, [x0, #8]
   11050:	stp	xzr, x10, [x0, #24]
   11054:	str	x8, [x0, #40]
   11058:	ldr	x8, [sp, #8]
   1105c:	add	x1, x19, #0x18
   11060:	add	x2, x20, #0x18
   11064:	add	x4, sp, #0x4
   11068:	add	x3, x8, #0x10
   1106c:	bl	243cc <PyInit__decimal@@Base+0x1d868>
   11070:	ldr	x8, [x19]
   11074:	subs	x8, x8, #0x1
   11078:	str	x8, [x19]
   1107c:	b.ne	11088 <PyInit__decimal@@Base+0xa524>  // b.any
   11080:	mov	x0, x19
   11084:	bl	65c0 <_Py_Dealloc@plt>
   11088:	ldr	x8, [x20]
   1108c:	subs	x8, x8, #0x1
   11090:	str	x8, [x20]
   11094:	b.ne	110a0 <PyInit__decimal@@Base+0xa53c>  // b.any
   11098:	mov	x0, x20
   1109c:	bl	65c0 <_Py_Dealloc@plt>
   110a0:	ldr	x0, [sp, #8]
   110a4:	ldr	w1, [sp, #4]
   110a8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   110ac:	cbz	w0, 1120c <PyInit__decimal@@Base+0xa6a8>
   110b0:	ldr	x8, [x21]
   110b4:	subs	x8, x8, #0x1
   110b8:	str	x8, [x21]
   110bc:	b.ne	11208 <PyInit__decimal@@Base+0xa6a4>  // b.any
   110c0:	mov	x0, x21
   110c4:	b	11204 <PyInit__decimal@@Base+0xa6a0>
   110c8:	ldr	x8, [x19]
   110cc:	subs	x8, x8, #0x1
   110d0:	str	x8, [x19]
   110d4:	b.ne	110e0 <PyInit__decimal@@Base+0xa57c>  // b.any
   110d8:	mov	x0, x19
   110dc:	bl	65c0 <_Py_Dealloc@plt>
   110e0:	ldr	x8, [x20]
   110e4:	subs	x8, x8, #0x1
   110e8:	str	x8, [x20]
   110ec:	b.ne	11208 <PyInit__decimal@@Base+0xa6a4>  // b.any
   110f0:	mov	x0, x20
   110f4:	b	11204 <PyInit__decimal@@Base+0xa6a0>
   110f8:	ldr	x8, [x19, #8]
   110fc:	ldrb	w9, [x8, #171]
   11100:	tbnz	w9, #0, 111b4 <PyInit__decimal@@Base+0xa650>
   11104:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   11108:	ldr	x9, [x9, #3936]
   1110c:	ldr	x2, [x8, #24]
   11110:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   11114:	add	x1, x1, #0xd63
   11118:	ldr	x0, [x9]
   1111c:	bl	6a00 <PyErr_Format@plt>
   11120:	b	11208 <PyInit__decimal@@Base+0xa6a4>
   11124:	ldr	x8, [x20, #8]
   11128:	ldrb	w9, [x8, #171]
   1112c:	tbnz	w9, #0, 111d4 <PyInit__decimal@@Base+0xa670>
   11130:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   11134:	ldr	x9, [x9, #3936]
   11138:	ldr	x2, [x8, #24]
   1113c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   11140:	add	x1, x1, #0xd63
   11144:	ldr	x0, [x9]
   11148:	bl	6a00 <PyErr_Format@plt>
   1114c:	b	111f0 <PyInit__decimal@@Base+0xa68c>
   11150:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11154:	ldr	x22, [x8, #1504]
   11158:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1115c:	add	x0, x0, #0x4c0
   11160:	mov	x1, xzr
   11164:	bl	6830 <PyObject_CallObject@plt>
   11168:	cbz	x0, 1123c <PyInit__decimal@@Base+0xa6d8>
   1116c:	ldp	q1, q0, [x22, #32]
   11170:	ldr	q2, [x22, #16]
   11174:	mov	x20, x0
   11178:	mov	x1, x20
   1117c:	stp	q1, q0, [x0, #32]
   11180:	str	q2, [x0, #16]
   11184:	ldr	w8, [x22, #80]
   11188:	stp	wzr, wzr, [x0, #44]
   1118c:	str	w8, [x0, #80]
   11190:	ldr	x0, [x21, #1408]
   11194:	bl	6670 <PyContextVar_Set@plt>
   11198:	cbz	x0, 11224 <PyInit__decimal@@Base+0xa6c0>
   1119c:	ldr	x8, [x0]
   111a0:	subs	x8, x8, #0x1
   111a4:	str	x8, [x0]
   111a8:	b.ne	10fa0 <PyInit__decimal@@Base+0xa43c>  // b.any
   111ac:	bl	65c0 <_Py_Dealloc@plt>
   111b0:	b	10fa0 <PyInit__decimal@@Base+0xa43c>
   111b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   111b8:	add	x0, x0, #0x320
   111bc:	mov	x1, x19
   111c0:	mov	x2, x20
   111c4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   111c8:	mov	x19, x0
   111cc:	cbnz	x0, 10ff0 <PyInit__decimal@@Base+0xa48c>
   111d0:	b	11208 <PyInit__decimal@@Base+0xa6a4>
   111d4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   111d8:	add	x0, x0, #0x320
   111dc:	mov	x1, x20
   111e0:	mov	x2, x21
   111e4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   111e8:	mov	x20, x0
   111ec:	cbnz	x0, 11020 <PyInit__decimal@@Base+0xa4bc>
   111f0:	ldr	x8, [x19]
   111f4:	subs	x8, x8, #0x1
   111f8:	str	x8, [x19]
   111fc:	b.ne	11208 <PyInit__decimal@@Base+0xa6a4>  // b.any
   11200:	mov	x0, x19
   11204:	bl	65c0 <_Py_Dealloc@plt>
   11208:	mov	x21, xzr
   1120c:	mov	x0, x21
   11210:	ldp	x20, x19, [sp, #64]
   11214:	ldp	x22, x21, [sp, #48]
   11218:	ldp	x29, x30, [sp, #32]
   1121c:	add	sp, sp, #0x50
   11220:	ret
   11224:	ldr	x8, [x20]
   11228:	subs	x8, x8, #0x1
   1122c:	str	x8, [x20]
   11230:	b.ne	1123c <PyInit__decimal@@Base+0xa6d8>  // b.any
   11234:	mov	x0, x20
   11238:	bl	65c0 <_Py_Dealloc@plt>
   1123c:	mov	x21, xzr
   11240:	str	xzr, [sp, #8]
   11244:	b	1120c <PyInit__decimal@@Base+0xa6a8>
   11248:	stp	x29, x30, [sp, #-64]!
   1124c:	str	x23, [sp, #16]
   11250:	stp	x22, x21, [sp, #32]
   11254:	stp	x20, x19, [sp, #48]
   11258:	mov	x29, sp
   1125c:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   11260:	ldr	x8, [x22, #1408]
   11264:	mov	x20, x1
   11268:	mov	x19, x0
   1126c:	add	x2, x29, #0x18
   11270:	mov	x0, x8
   11274:	mov	x1, xzr
   11278:	bl	6730 <PyContextVar_Get@plt>
   1127c:	tbnz	w0, #31, 1137c <PyInit__decimal@@Base+0xa818>
   11280:	ldr	x21, [x29, #24]
   11284:	cbz	x21, 11300 <PyInit__decimal@@Base+0xa79c>
   11288:	ldr	x8, [x21]
   1128c:	subs	x8, x8, #0x1
   11290:	str	x8, [x21]
   11294:	b.ne	112a0 <PyInit__decimal@@Base+0xa73c>  // b.any
   11298:	mov	x0, x21
   1129c:	bl	65c0 <_Py_Dealloc@plt>
   112a0:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   112a4:	add	x22, x22, #0x320
   112a8:	mov	x0, x22
   112ac:	mov	x1, x20
   112b0:	mov	x2, x21
   112b4:	bl	a9d4 <PyInit__decimal@@Base+0x3e70>
   112b8:	cmp	x19, x22
   112bc:	mov	x20, x0
   112c0:	b.eq	112f8 <PyInit__decimal@@Base+0xa794>  // b.none
   112c4:	cbz	x20, 112f8 <PyInit__decimal@@Base+0xa794>
   112c8:	mov	x0, x19
   112cc:	mov	x1, x20
   112d0:	mov	x2, xzr
   112d4:	bl	6840 <PyObject_CallFunctionObjArgs@plt>
   112d8:	ldr	x8, [x20]
   112dc:	mov	x19, x0
   112e0:	subs	x8, x8, #0x1
   112e4:	str	x8, [x20]
   112e8:	b.ne	11380 <PyInit__decimal@@Base+0xa81c>  // b.any
   112ec:	mov	x0, x20
   112f0:	bl	65c0 <_Py_Dealloc@plt>
   112f4:	b	11380 <PyInit__decimal@@Base+0xa81c>
   112f8:	mov	x19, x20
   112fc:	b	11380 <PyInit__decimal@@Base+0xa81c>
   11300:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11304:	ldr	x23, [x8, #1504]
   11308:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1130c:	add	x0, x0, #0x4c0
   11310:	mov	x1, xzr
   11314:	bl	6830 <PyObject_CallObject@plt>
   11318:	cbz	x0, 1137c <PyInit__decimal@@Base+0xa818>
   1131c:	ldp	q1, q0, [x23, #32]
   11320:	ldr	q2, [x23, #16]
   11324:	mov	x21, x0
   11328:	mov	x1, x21
   1132c:	stp	q1, q0, [x0, #32]
   11330:	str	q2, [x0, #16]
   11334:	ldr	w8, [x23, #80]
   11338:	stp	wzr, wzr, [x0, #44]
   1133c:	str	w8, [x0, #80]
   11340:	ldr	x0, [x22, #1408]
   11344:	bl	6670 <PyContextVar_Set@plt>
   11348:	cbz	x0, 11364 <PyInit__decimal@@Base+0xa800>
   1134c:	ldr	x8, [x0]
   11350:	subs	x8, x8, #0x1
   11354:	str	x8, [x0]
   11358:	b.ne	11288 <PyInit__decimal@@Base+0xa724>  // b.any
   1135c:	bl	65c0 <_Py_Dealloc@plt>
   11360:	b	11288 <PyInit__decimal@@Base+0xa724>
   11364:	ldr	x8, [x21]
   11368:	subs	x8, x8, #0x1
   1136c:	str	x8, [x21]
   11370:	b.ne	1137c <PyInit__decimal@@Base+0xa818>  // b.any
   11374:	mov	x0, x21
   11378:	bl	65c0 <_Py_Dealloc@plt>
   1137c:	mov	x19, xzr
   11380:	mov	x0, x19
   11384:	ldp	x20, x19, [sp, #48]
   11388:	ldp	x22, x21, [sp, #32]
   1138c:	ldr	x23, [sp, #16]
   11390:	ldp	x29, x30, [sp], #64
   11394:	ret
   11398:	stp	x29, x30, [sp, #-80]!
   1139c:	str	x25, [sp, #16]
   113a0:	stp	x24, x23, [sp, #32]
   113a4:	stp	x22, x21, [sp, #48]
   113a8:	stp	x20, x19, [sp, #64]
   113ac:	mov	x29, sp
   113b0:	add	x20, x0, #0x18
   113b4:	mov	x0, x20
   113b8:	bl	22020 <PyInit__decimal@@Base+0x1b4bc>
   113bc:	cbz	x0, 11458 <PyInit__decimal@@Base+0xa8f4>
   113c0:	mov	x21, x0
   113c4:	mov	x0, x20
   113c8:	bl	1ffc0 <PyInit__decimal@@Base+0x1945c>
   113cc:	and	x0, x0, #0xff
   113d0:	bl	6930 <PyLong_FromUnsignedLong@plt>
   113d4:	mov	x19, x0
   113d8:	cbz	x0, 11464 <PyInit__decimal@@Base+0xa900>
   113dc:	mov	x0, x21
   113e0:	bl	1fe70 <PyInit__decimal@@Base+0x1930c>
   113e4:	cbz	w0, 114e8 <PyInit__decimal@@Base+0xa984>
   113e8:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   113ec:	add	x0, x0, #0xf1
   113f0:	bl	6950 <PyUnicode_FromString@plt>
   113f4:	mov	x20, x0
   113f8:	cbz	x0, 11468 <PyInit__decimal@@Base+0xa904>
   113fc:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   11400:	add	x0, x0, #0x27f
   11404:	mov	w1, wzr
   11408:	bl	67c0 <Py_BuildValue@plt>
   1140c:	cbz	x0, 11468 <PyInit__decimal@@Base+0xa904>
   11410:	mov	x22, x0
   11414:	mov	x23, xzr
   11418:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1141c:	ldr	x0, [x8, #1472]
   11420:	mov	x1, x19
   11424:	mov	x2, x22
   11428:	mov	x3, x20
   1142c:	mov	x4, xzr
   11430:	bl	6840 <PyObject_CallFunctionObjArgs@plt>
   11434:	mov	x24, x0
   11438:	mov	x0, x21
   1143c:	bl	20058 <PyInit__decimal@@Base+0x194f4>
   11440:	cbz	x23, 11478 <PyInit__decimal@@Base+0xa914>
   11444:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11448:	ldr	x8, [x8, #1384]
   1144c:	mov	x0, x23
   11450:	blr	x8
   11454:	b	11478 <PyInit__decimal@@Base+0xa914>
   11458:	bl	65d0 <PyErr_NoMemory@plt>
   1145c:	mov	x24, xzr
   11460:	b	114cc <PyInit__decimal@@Base+0xa968>
   11464:	mov	x20, xzr
   11468:	mov	x0, x21
   1146c:	bl	20058 <PyInit__decimal@@Base+0x194f4>
   11470:	mov	x22, xzr
   11474:	mov	x24, xzr
   11478:	cbz	x19, 11494 <PyInit__decimal@@Base+0xa930>
   1147c:	ldr	x8, [x19]
   11480:	subs	x8, x8, #0x1
   11484:	str	x8, [x19]
   11488:	b.ne	11494 <PyInit__decimal@@Base+0xa930>  // b.any
   1148c:	mov	x0, x19
   11490:	bl	65c0 <_Py_Dealloc@plt>
   11494:	cbz	x22, 114b0 <PyInit__decimal@@Base+0xa94c>
   11498:	ldr	x8, [x22]
   1149c:	subs	x8, x8, #0x1
   114a0:	str	x8, [x22]
   114a4:	b.ne	114b0 <PyInit__decimal@@Base+0xa94c>  // b.any
   114a8:	mov	x0, x22
   114ac:	bl	65c0 <_Py_Dealloc@plt>
   114b0:	cbz	x20, 114cc <PyInit__decimal@@Base+0xa968>
   114b4:	ldr	x8, [x20]
   114b8:	subs	x8, x8, #0x1
   114bc:	str	x8, [x20]
   114c0:	b.ne	114cc <PyInit__decimal@@Base+0xa968>  // b.any
   114c4:	mov	x0, x20
   114c8:	bl	65c0 <_Py_Dealloc@plt>
   114cc:	mov	x0, x24
   114d0:	ldp	x20, x19, [sp, #64]
   114d4:	ldp	x22, x21, [sp, #48]
   114d8:	ldp	x24, x23, [sp, #32]
   114dc:	ldr	x25, [sp, #16]
   114e0:	ldp	x29, x30, [sp], #80
   114e4:	ret
   114e8:	mov	x0, x21
   114ec:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   114f0:	cbz	w0, 1151c <PyInit__decimal@@Base+0xa9b8>
   114f4:	mov	x0, x21
   114f8:	bl	1fea4 <PyInit__decimal@@Base+0x19340>
   114fc:	adrp	x8, 36000 <PyInit__decimal@@Base+0x2f49c>
   11500:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   11504:	add	x8, x8, #0xe42
   11508:	add	x9, x9, #0xe9
   1150c:	cmp	w0, #0x0
   11510:	csel	x0, x9, x8, eq  // eq = none
   11514:	bl	6950 <PyUnicode_FromString@plt>
   11518:	b	11524 <PyInit__decimal@@Base+0xa9c0>
   1151c:	ldr	x0, [x20, #8]
   11520:	bl	6690 <PyLong_FromSsize_t@plt>
   11524:	mov	x20, x0
   11528:	cbz	x0, 11468 <PyInit__decimal@@Base+0xa904>
   1152c:	ldr	x8, [x21, #24]
   11530:	cmp	x8, #0x1
   11534:	b.lt	115a0 <PyInit__decimal@@Base+0xaa3c>  // b.tstop
   11538:	mov	x0, x21
   1153c:	str	xzr, [x21, #8]
   11540:	bl	2053c <PyInit__decimal@@Base+0x199d8>
   11544:	mov	w1, #0x1                   	// #1
   11548:	mov	x0, x21
   1154c:	bl	1da20 <PyInit__decimal@@Base+0x16ebc>
   11550:	cbz	x0, 115b0 <PyInit__decimal@@Base+0xaa4c>
   11554:	mov	x23, x0
   11558:	bl	64c0 <strlen@plt>
   1155c:	mov	x24, x0
   11560:	bl	6790 <PyTuple_New@plt>
   11564:	mov	x22, x0
   11568:	cbz	x0, 115b8 <PyInit__decimal@@Base+0xaa54>
   1156c:	cmp	x24, #0x1
   11570:	b.lt	11418 <PyInit__decimal@@Base+0xa8b4>  // b.tstop
   11574:	mov	x25, xzr
   11578:	ldrb	w8, [x23, x25]
   1157c:	sub	x0, x8, #0x30
   11580:	bl	66d0 <PyLong_FromLong@plt>
   11584:	cbz	x0, 115b8 <PyInit__decimal@@Base+0xaa54>
   11588:	add	x8, x22, x25, lsl #3
   1158c:	add	x25, x25, #0x1
   11590:	cmp	x24, x25
   11594:	str	x0, [x8, #24]
   11598:	b.ne	11578 <PyInit__decimal@@Base+0xaa14>  // b.any
   1159c:	b	11418 <PyInit__decimal@@Base+0xa8b4>
   115a0:	mov	x0, xzr
   115a4:	bl	6790 <PyTuple_New@plt>
   115a8:	cbnz	x0, 11410 <PyInit__decimal@@Base+0xa8ac>
   115ac:	b	11468 <PyInit__decimal@@Base+0xa904>
   115b0:	bl	65d0 <PyErr_NoMemory@plt>
   115b4:	b	11468 <PyInit__decimal@@Base+0xa904>
   115b8:	mov	x0, x21
   115bc:	bl	20058 <PyInit__decimal@@Base+0x194f4>
   115c0:	mov	x24, xzr
   115c4:	b	11444 <PyInit__decimal@@Base+0xa8e0>
   115c8:	sub	sp, sp, #0x50
   115cc:	stp	x29, x30, [sp, #16]
   115d0:	str	x23, [sp, #32]
   115d4:	stp	x22, x21, [sp, #48]
   115d8:	stp	x20, x19, [sp, #64]
   115dc:	add	x29, sp, #0x10
   115e0:	add	x20, x0, #0x18
   115e4:	mov	x0, x20
   115e8:	stur	wzr, [x29, #-4]
   115ec:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   115f0:	cbz	w0, 11614 <PyInit__decimal@@Base+0xaab0>
   115f4:	mov	x0, x20
   115f8:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   115fc:	cbz	w0, 116b4 <PyInit__decimal@@Base+0xab50>
   11600:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11604:	ldr	x8, [x8, #3928]
   11608:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1160c:	add	x1, x1, #0x283
   11610:	b	116c4 <PyInit__decimal@@Base+0xab60>
   11614:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   11618:	ldr	x0, [x21, #1408]
   1161c:	add	x2, x29, #0x18
   11620:	mov	x1, xzr
   11624:	bl	6730 <PyContextVar_Get@plt>
   11628:	tbnz	w0, #31, 116cc <PyInit__decimal@@Base+0xab68>
   1162c:	ldr	x19, [x29, #24]
   11630:	cbz	x19, 116ec <PyInit__decimal@@Base+0xab88>
   11634:	ldr	x8, [x19]
   11638:	subs	x8, x8, #0x1
   1163c:	str	x8, [x19]
   11640:	b.ne	1164c <PyInit__decimal@@Base+0xaae8>  // b.any
   11644:	mov	x0, x19
   11648:	bl	65c0 <_Py_Dealloc@plt>
   1164c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   11650:	add	x0, x0, #0x320
   11654:	bl	6940 <_PyObject_New@plt>
   11658:	mov	x21, x0
   1165c:	cbz	x0, 116d0 <PyInit__decimal@@Base+0xab6c>
   11660:	mov	x23, x21
   11664:	str	xzr, [x23, #32]!
   11668:	mov	x8, #0xffffffffffffffff    	// #-1
   1166c:	mov	w9, #0x30                  	// #48
   11670:	mov	x22, x23
   11674:	stur	x8, [x23, #-16]
   11678:	strb	w9, [x22, #-8]!
   1167c:	mov	w10, #0x4                   	// #4
   11680:	add	x8, x23, #0x28
   11684:	sub	x2, x29, #0x4
   11688:	mov	x0, x22
   1168c:	mov	x1, x20
   11690:	stp	xzr, xzr, [x23, #8]
   11694:	stp	x10, x8, [x23, #24]
   11698:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   1169c:	cbz	w0, 11750 <PyInit__decimal@@Base+0xabec>
   116a0:	mov	x0, x22
   116a4:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   116a8:	cbz	w0, 11770 <PyInit__decimal@@Base+0xac0c>
   116ac:	mov	x22, xzr
   116b0:	b	11774 <PyInit__decimal@@Base+0xac10>
   116b4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   116b8:	ldr	x8, [x8, #3992]
   116bc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   116c0:	add	x1, x1, #0x2a7
   116c4:	ldr	x0, [x8]
   116c8:	bl	6640 <PyErr_SetString@plt>
   116cc:	mov	x21, xzr
   116d0:	mov	x0, x21
   116d4:	ldp	x20, x19, [sp, #64]
   116d8:	ldp	x22, x21, [sp, #48]
   116dc:	ldr	x23, [sp, #32]
   116e0:	ldp	x29, x30, [sp, #16]
   116e4:	add	sp, sp, #0x50
   116e8:	ret
   116ec:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   116f0:	ldr	x22, [x8, #1504]
   116f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   116f8:	add	x0, x0, #0x4c0
   116fc:	mov	x1, xzr
   11700:	bl	6830 <PyObject_CallObject@plt>
   11704:	cbz	x0, 116cc <PyInit__decimal@@Base+0xab68>
   11708:	ldp	q1, q0, [x22, #32]
   1170c:	ldr	q2, [x22, #16]
   11710:	mov	x19, x0
   11714:	mov	x1, x19
   11718:	stp	q1, q0, [x0, #32]
   1171c:	str	q2, [x0, #16]
   11720:	ldr	w8, [x22, #80]
   11724:	stp	wzr, wzr, [x0, #44]
   11728:	str	w8, [x0, #80]
   1172c:	ldr	x0, [x21, #1408]
   11730:	bl	6670 <PyContextVar_Set@plt>
   11734:	cbz	x0, 11888 <PyInit__decimal@@Base+0xad24>
   11738:	ldr	x8, [x0]
   1173c:	subs	x8, x8, #0x1
   11740:	str	x8, [x0]
   11744:	b.ne	11634 <PyInit__decimal@@Base+0xaad0>  // b.any
   11748:	bl	65c0 <_Py_Dealloc@plt>
   1174c:	b	11634 <PyInit__decimal@@Base+0xaad0>
   11750:	ldr	x8, [x21]
   11754:	subs	x8, x8, #0x1
   11758:	str	x8, [x21]
   1175c:	b.ne	11768 <PyInit__decimal@@Base+0xac04>  // b.any
   11760:	mov	x0, x21
   11764:	bl	65c0 <_Py_Dealloc@plt>
   11768:	bl	65d0 <PyErr_NoMemory@plt>
   1176c:	b	116cc <PyInit__decimal@@Base+0xab68>
   11770:	ldr	x22, [x23]
   11774:	mov	w2, #0x3                   	// #3
   11778:	mov	x0, x21
   1177c:	mov	x1, x19
   11780:	str	xzr, [x21, #32]
   11784:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
   11788:	ldr	x8, [x21]
   1178c:	mov	x19, x0
   11790:	subs	x8, x8, #0x1
   11794:	str	x8, [x21]
   11798:	b.ne	117a4 <PyInit__decimal@@Base+0xac40>  // b.any
   1179c:	mov	x0, x21
   117a0:	bl	65c0 <_Py_Dealloc@plt>
   117a4:	cbz	x19, 116cc <PyInit__decimal@@Base+0xab68>
   117a8:	cmp	x22, #0x0
   117ac:	cneg	x0, x22, mi  // mi = first
   117b0:	bl	6690 <PyLong_FromSsize_t@plt>
   117b4:	cbz	x0, 11880 <PyInit__decimal@@Base+0xad1c>
   117b8:	mov	x23, x0
   117bc:	mov	w0, #0xa                   	// #10
   117c0:	bl	66d0 <PyLong_FromLong@plt>
   117c4:	mov	x21, x0
   117c8:	cbz	x0, 118a4 <PyInit__decimal@@Base+0xad40>
   117cc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   117d0:	adrp	x2, 49000 <PyInit__decimal@@Base+0x4249c>
   117d4:	ldr	x8, [x8, #1432]
   117d8:	ldr	x2, [x2, #4008]
   117dc:	mov	x0, x21
   117e0:	mov	x1, x23
   117e4:	blr	x8
   117e8:	ldr	x8, [x23]
   117ec:	mov	x20, x0
   117f0:	subs	x8, x8, #0x1
   117f4:	str	x8, [x23]
   117f8:	b.ne	11804 <PyInit__decimal@@Base+0xaca0>  // b.any
   117fc:	mov	x0, x23
   11800:	bl	65c0 <_Py_Dealloc@plt>
   11804:	ldr	x8, [x21]
   11808:	subs	x8, x8, #0x1
   1180c:	str	x8, [x21]
   11810:	b.ne	1181c <PyInit__decimal@@Base+0xacb8>  // b.any
   11814:	mov	x0, x21
   11818:	bl	65c0 <_Py_Dealloc@plt>
   1181c:	cbz	x20, 11880 <PyInit__decimal@@Base+0xad1c>
   11820:	tbnz	x22, #63, 118ac <PyInit__decimal@@Base+0xad48>
   11824:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11828:	ldr	x8, [x8, #1416]
   1182c:	mov	x0, x19
   11830:	mov	x1, x20
   11834:	blr	x8
   11838:	ldr	x8, [x19]
   1183c:	mov	x23, x0
   11840:	subs	x8, x8, #0x1
   11844:	str	x8, [x19]
   11848:	b.ne	11854 <PyInit__decimal@@Base+0xacf0>  // b.any
   1184c:	mov	x0, x19
   11850:	bl	65c0 <_Py_Dealloc@plt>
   11854:	cbz	x23, 11960 <PyInit__decimal@@Base+0xadfc>
   11858:	mov	w0, #0x1                   	// #1
   1185c:	bl	66d0 <PyLong_FromLong@plt>
   11860:	mov	x22, x0
   11864:	cbz	x0, 11970 <PyInit__decimal@@Base+0xae0c>
   11868:	mov	w0, #0x2                   	// #2
   1186c:	mov	x1, x23
   11870:	mov	x2, x22
   11874:	bl	6a50 <PyTuple_Pack@plt>
   11878:	mov	x21, x0
   1187c:	b	11974 <PyInit__decimal@@Base+0xae10>
   11880:	mov	x21, xzr
   11884:	b	119b8 <PyInit__decimal@@Base+0xae54>
   11888:	ldr	x8, [x19]
   1188c:	subs	x8, x8, #0x1
   11890:	str	x8, [x19]
   11894:	b.ne	116cc <PyInit__decimal@@Base+0xab68>  // b.any
   11898:	mov	x0, x19
   1189c:	bl	65c0 <_Py_Dealloc@plt>
   118a0:	b	116cc <PyInit__decimal@@Base+0xab68>
   118a4:	mov	x22, xzr
   118a8:	b	1197c <PyInit__decimal@@Base+0xae18>
   118ac:	mov	x0, x19
   118b0:	mov	x1, x20
   118b4:	bl	66f0 <_PyLong_GCD@plt>
   118b8:	mov	x21, x0
   118bc:	cbz	x0, 1199c <PyInit__decimal@@Base+0xae38>
   118c0:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   118c4:	ldr	x8, [x22, #1424]
   118c8:	mov	x0, x19
   118cc:	mov	x1, x21
   118d0:	blr	x8
   118d4:	ldr	x8, [x19]
   118d8:	mov	x23, x0
   118dc:	subs	x8, x8, #0x1
   118e0:	str	x8, [x19]
   118e4:	b.ne	118f0 <PyInit__decimal@@Base+0xad8c>  // b.any
   118e8:	mov	x0, x19
   118ec:	bl	65c0 <_Py_Dealloc@plt>
   118f0:	ldr	x8, [x22, #1424]
   118f4:	mov	x0, x20
   118f8:	mov	x1, x21
   118fc:	blr	x8
   11900:	ldr	x8, [x20]
   11904:	mov	x22, x0
   11908:	subs	x8, x8, #0x1
   1190c:	str	x8, [x20]
   11910:	b.ne	1191c <PyInit__decimal@@Base+0xadb8>  // b.any
   11914:	mov	x0, x20
   11918:	bl	65c0 <_Py_Dealloc@plt>
   1191c:	ldr	x8, [x21]
   11920:	subs	x8, x8, #0x1
   11924:	str	x8, [x21]
   11928:	b.ne	11934 <PyInit__decimal@@Base+0xadd0>  // b.any
   1192c:	mov	x0, x21
   11930:	bl	65c0 <_Py_Dealloc@plt>
   11934:	mov	x21, xzr
   11938:	cbz	x23, 119d4 <PyInit__decimal@@Base+0xae70>
   1193c:	cbz	x22, 119d4 <PyInit__decimal@@Base+0xae70>
   11940:	mov	w0, #0x2                   	// #2
   11944:	mov	x1, x23
   11948:	mov	x2, x22
   1194c:	bl	6a50 <PyTuple_Pack@plt>
   11950:	mov	x21, x0
   11954:	mov	x20, x22
   11958:	mov	x19, x23
   1195c:	b	1199c <PyInit__decimal@@Base+0xae38>
   11960:	mov	x19, xzr
   11964:	mov	x22, xzr
   11968:	mov	x21, xzr
   1196c:	b	11978 <PyInit__decimal@@Base+0xae14>
   11970:	mov	x21, xzr
   11974:	mov	x19, x23
   11978:	mov	x23, x20
   1197c:	ldr	x8, [x23]
   11980:	subs	x8, x8, #0x1
   11984:	str	x8, [x23]
   11988:	b.ne	11994 <PyInit__decimal@@Base+0xae30>  // b.any
   1198c:	mov	x0, x23
   11990:	bl	65c0 <_Py_Dealloc@plt>
   11994:	mov	x20, x22
   11998:	cbz	x22, 119b4 <PyInit__decimal@@Base+0xae50>
   1199c:	ldr	x8, [x20]
   119a0:	subs	x8, x8, #0x1
   119a4:	str	x8, [x20]
   119a8:	b.ne	119b4 <PyInit__decimal@@Base+0xae50>  // b.any
   119ac:	mov	x0, x20
   119b0:	bl	65c0 <_Py_Dealloc@plt>
   119b4:	cbz	x19, 116d0 <PyInit__decimal@@Base+0xab6c>
   119b8:	ldr	x8, [x19]
   119bc:	subs	x8, x8, #0x1
   119c0:	str	x8, [x19]
   119c4:	b.ne	116d0 <PyInit__decimal@@Base+0xab6c>  // b.any
   119c8:	mov	x0, x19
   119cc:	bl	65c0 <_Py_Dealloc@plt>
   119d0:	b	116d0 <PyInit__decimal@@Base+0xab6c>
   119d4:	mov	x19, x23
   119d8:	b	11994 <PyInit__decimal@@Base+0xae30>
   119dc:	ldr	x8, [x0]
   119e0:	add	x8, x8, #0x1
   119e4:	str	x8, [x0]
   119e8:	ret
   119ec:	sub	sp, sp, #0xa0
   119f0:	stp	x29, x30, [sp, #80]
   119f4:	str	x25, [sp, #96]
   119f8:	stp	x24, x23, [sp, #112]
   119fc:	stp	x22, x21, [sp, #128]
   11a00:	stp	x20, x19, [sp, #144]
   11a04:	add	x29, sp, #0x50
   11a08:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   11a0c:	mov	x20, x0
   11a10:	ldr	x0, [x22, #1408]
   11a14:	mov	x19, x1
   11a18:	add	x2, sp, #0x18
   11a1c:	mov	x1, xzr
   11a20:	str	xzr, [x29, #24]
   11a24:	str	wzr, [sp, #20]
   11a28:	bl	6730 <PyContextVar_Get@plt>
   11a2c:	tbnz	w0, #31, 11ca0 <PyInit__decimal@@Base+0xb13c>
   11a30:	ldr	x21, [sp, #24]
   11a34:	cbz	x21, 11a98 <PyInit__decimal@@Base+0xaf34>
   11a38:	ldr	x8, [x21]
   11a3c:	subs	x8, x8, #0x1
   11a40:	str	x8, [x21]
   11a44:	b.ne	11a50 <PyInit__decimal@@Base+0xaeec>  // b.any
   11a48:	mov	x0, x21
   11a4c:	bl	65c0 <_Py_Dealloc@plt>
   11a50:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11a54:	add	x1, x1, #0x27b
   11a58:	sub	x2, x29, #0x8
   11a5c:	add	x3, x29, #0x18
   11a60:	mov	x0, x19
   11a64:	bl	68d0 <PyArg_ParseTuple@plt>
   11a68:	cbz	w0, 11ca0 <PyInit__decimal@@Base+0xb13c>
   11a6c:	ldur	x0, [x29, #-8]
   11a70:	ldr	x8, [x0, #8]
   11a74:	ldrb	w8, [x8, #171]
   11a78:	tbnz	w8, #4, 11afc <PyInit__decimal@@Base+0xaf98>
   11a7c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11a80:	ldr	x8, [x8, #3936]
   11a84:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11a88:	add	x1, x1, #0x2d0
   11a8c:	ldr	x0, [x8]
   11a90:	bl	6640 <PyErr_SetString@plt>
   11a94:	b	11ca0 <PyInit__decimal@@Base+0xb13c>
   11a98:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11a9c:	ldr	x23, [x8, #1504]
   11aa0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   11aa4:	add	x0, x0, #0x4c0
   11aa8:	mov	x1, xzr
   11aac:	bl	6830 <PyObject_CallObject@plt>
   11ab0:	cbz	x0, 11ca0 <PyInit__decimal@@Base+0xb13c>
   11ab4:	ldp	q1, q0, [x23, #32]
   11ab8:	ldr	q2, [x23, #16]
   11abc:	mov	x21, x0
   11ac0:	mov	x1, x21
   11ac4:	stp	q1, q0, [x0, #32]
   11ac8:	str	q2, [x0, #16]
   11acc:	ldr	w8, [x23, #80]
   11ad0:	stp	wzr, wzr, [x0, #44]
   11ad4:	str	w8, [x0, #80]
   11ad8:	ldr	x0, [x22, #1408]
   11adc:	bl	6670 <PyContextVar_Set@plt>
   11ae0:	cbz	x0, 11b6c <PyInit__decimal@@Base+0xb008>
   11ae4:	ldr	x8, [x0]
   11ae8:	subs	x8, x8, #0x1
   11aec:	str	x8, [x0]
   11af0:	b.ne	11a38 <PyInit__decimal@@Base+0xaed4>  // b.any
   11af4:	bl	65c0 <_Py_Dealloc@plt>
   11af8:	b	11a38 <PyInit__decimal@@Base+0xaed4>
   11afc:	add	x1, sp, #0x8
   11b00:	bl	69c0 <PyUnicode_AsUTF8AndSize@plt>
   11b04:	cbz	x0, 11ca0 <PyInit__decimal@@Base+0xb13c>
   11b08:	ldr	x22, [sp, #8]
   11b0c:	mov	x19, x0
   11b10:	cmp	x22, #0x1
   11b14:	b.lt	11b20 <PyInit__decimal@@Base+0xafbc>  // b.tstop
   11b18:	ldrb	w8, [x19]
   11b1c:	cbz	w8, 11bcc <PyInit__decimal@@Base+0xb068>
   11b20:	mov	w25, wzr
   11b24:	ldr	w2, [x21, #80]
   11b28:	add	x0, sp, #0x18
   11b2c:	mov	x1, x19
   11b30:	bl	1dfc0 <PyInit__decimal@@Base+0x1745c>
   11b34:	cbz	w0, 11b88 <PyInit__decimal@@Base+0xb024>
   11b38:	cbz	w25, 11b44 <PyInit__decimal@@Base+0xafe0>
   11b3c:	mov	w8, #0xff                  	// #255
   11b40:	sturh	w8, [sp, #43]
   11b44:	ldr	x0, [x29, #24]
   11b48:	cbz	x0, 11c00 <PyInit__decimal@@Base+0xb09c>
   11b4c:	ldr	x8, [x0, #8]
   11b50:	ldrb	w8, [x8, #171]
   11b54:	tbnz	w8, #5, 11c30 <PyInit__decimal@@Base+0xb0cc>
   11b58:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11b5c:	ldr	x8, [x8, #3936]
   11b60:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11b64:	add	x1, x1, #0x2fd
   11b68:	b	11b98 <PyInit__decimal@@Base+0xb034>
   11b6c:	ldr	x8, [x21]
   11b70:	subs	x8, x8, #0x1
   11b74:	str	x8, [x21]
   11b78:	b.ne	11ca0 <PyInit__decimal@@Base+0xb13c>  // b.any
   11b7c:	mov	x0, x21
   11b80:	bl	65c0 <_Py_Dealloc@plt>
   11b84:	b	11ca0 <PyInit__decimal@@Base+0xb13c>
   11b88:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11b8c:	ldr	x8, [x8, #3928]
   11b90:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11b94:	add	x1, x1, #0x2e7
   11b98:	ldr	x0, [x8]
   11b9c:	bl	6640 <PyErr_SetString@plt>
   11ba0:	mov	x20, xzr
   11ba4:	mov	x21, xzr
   11ba8:	cbz	w25, 11bb4 <PyInit__decimal@@Base+0xb050>
   11bac:	mov	x0, x19
   11bb0:	bl	6550 <PyMem_Free@plt>
   11bb4:	cbz	x20, 11ca4 <PyInit__decimal@@Base+0xb140>
   11bb8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11bbc:	ldr	x8, [x8, #1384]
   11bc0:	mov	x0, x20
   11bc4:	blr	x8
   11bc8:	b	11ca4 <PyInit__decimal@@Base+0xb140>
   11bcc:	add	x0, x22, #0x1
   11bd0:	bl	6a30 <PyMem_Malloc@plt>
   11bd4:	cbz	x0, 11c9c <PyInit__decimal@@Base+0xb138>
   11bd8:	mov	x1, x19
   11bdc:	mov	x2, x22
   11be0:	mov	x23, x0
   11be4:	bl	6460 <memcpy@plt>
   11be8:	mov	w8, #0x5f                  	// #95
   11bec:	mov	w25, #0x1                   	// #1
   11bf0:	mov	x19, x23
   11bf4:	strb	wzr, [x23, x22]
   11bf8:	strb	w8, [x23]
   11bfc:	b	11b24 <PyInit__decimal@@Base+0xafc0>
   11c00:	ldr	x22, [sp, #48]
   11c04:	mov	x0, x22
   11c08:	bl	64c0 <strlen@plt>
   11c0c:	cmp	x0, #0x1
   11c10:	b.ls	11c58 <PyInit__decimal@@Base+0xb0f4>  // b.plast
   11c14:	mov	x0, x22
   11c18:	bl	12544 <PyInit__decimal@@Base+0xb9e0>
   11c1c:	cbz	x0, 11ba0 <PyInit__decimal@@Base+0xb03c>
   11c20:	mov	x22, x0
   11c24:	add	x8, x0, #0x20
   11c28:	str	x8, [sp, #48]
   11c2c:	b	11c68 <PyInit__decimal@@Base+0xb104>
   11c30:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11c34:	add	x1, x1, #0x31e
   11c38:	bl	6860 <PyDict_GetItemString@plt>
   11c3c:	cbz	x0, 11cdc <PyInit__decimal@@Base+0xb178>
   11c40:	bl	65b0 <PyUnicode_AsUTF8String@plt>
   11c44:	cbz	x0, 11ba0 <PyInit__decimal@@Base+0xb03c>
   11c48:	mov	x22, x0
   11c4c:	add	x8, x0, #0x20
   11c50:	str	x8, [sp, #48]
   11c54:	b	11ce0 <PyInit__decimal@@Base+0xb17c>
   11c58:	b.ne	11c64 <PyInit__decimal@@Base+0xb100>  // b.any
   11c5c:	ldrsb	w8, [x22]
   11c60:	tbnz	w8, #31, 11c14 <PyInit__decimal@@Base+0xb0b0>
   11c64:	mov	x22, xzr
   11c68:	ldr	x23, [sp, #56]
   11c6c:	mov	x0, x23
   11c70:	bl	64c0 <strlen@plt>
   11c74:	cmp	x0, #0x1
   11c78:	b.ls	11cc4 <PyInit__decimal@@Base+0xb160>  // b.plast
   11c7c:	mov	x0, x23
   11c80:	bl	12544 <PyInit__decimal@@Base+0xb9e0>
   11c84:	cbz	x0, 11d0c <PyInit__decimal@@Base+0xb1a8>
   11c88:	mov	x23, x0
   11c8c:	mov	x24, xzr
   11c90:	add	x8, x0, #0x20
   11c94:	str	x8, [sp, #56]
   11c98:	b	11d58 <PyInit__decimal@@Base+0xb1f4>
   11c9c:	bl	65d0 <PyErr_NoMemory@plt>
   11ca0:	mov	x21, xzr
   11ca4:	mov	x0, x21
   11ca8:	ldp	x20, x19, [sp, #144]
   11cac:	ldp	x22, x21, [sp, #128]
   11cb0:	ldp	x24, x23, [sp, #112]
   11cb4:	ldr	x25, [sp, #96]
   11cb8:	ldp	x29, x30, [sp, #80]
   11cbc:	add	sp, sp, #0xa0
   11cc0:	ret
   11cc4:	b.ne	11cd0 <PyInit__decimal@@Base+0xb16c>  // b.any
   11cc8:	ldrsb	w8, [x23]
   11ccc:	tbnz	w8, #31, 11c7c <PyInit__decimal@@Base+0xb118>
   11cd0:	mov	x23, xzr
   11cd4:	mov	x24, xzr
   11cd8:	b	11d58 <PyInit__decimal@@Base+0xb1f4>
   11cdc:	mov	x22, xzr
   11ce0:	ldr	x0, [x29, #24]
   11ce4:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11ce8:	add	x1, x1, #0x32c
   11cec:	bl	6860 <PyDict_GetItemString@plt>
   11cf0:	cbz	x0, 11d18 <PyInit__decimal@@Base+0xb1b4>
   11cf4:	bl	65b0 <PyUnicode_AsUTF8String@plt>
   11cf8:	cbz	x0, 11d0c <PyInit__decimal@@Base+0xb1a8>
   11cfc:	mov	x23, x0
   11d00:	add	x8, x0, #0x20
   11d04:	str	x8, [sp, #56]
   11d08:	b	11d1c <PyInit__decimal@@Base+0xb1b8>
   11d0c:	mov	x21, xzr
   11d10:	mov	x20, xzr
   11d14:	b	11e4c <PyInit__decimal@@Base+0xb2e8>
   11d18:	mov	x23, xzr
   11d1c:	ldr	x0, [x29, #24]
   11d20:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11d24:	add	x1, x1, #0x33a
   11d28:	bl	6860 <PyDict_GetItemString@plt>
   11d2c:	cbz	x0, 11d48 <PyInit__decimal@@Base+0xb1e4>
   11d30:	bl	65b0 <PyUnicode_AsUTF8String@plt>
   11d34:	cbz	x0, 11e28 <PyInit__decimal@@Base+0xb2c4>
   11d38:	mov	x24, x0
   11d3c:	add	x8, x0, #0x20
   11d40:	str	x8, [sp, #64]
   11d44:	b	11d4c <PyInit__decimal@@Base+0xb1e8>
   11d48:	mov	x24, xzr
   11d4c:	add	x0, sp, #0x18
   11d50:	bl	1df78 <PyInit__decimal@@Base+0x17414>
   11d54:	tbnz	w0, #31, 11de8 <PyInit__decimal@@Base+0xb284>
   11d58:	add	x0, x20, #0x18
   11d5c:	add	x2, x21, #0x10
   11d60:	add	x1, sp, #0x18
   11d64:	add	x3, sp, #0x14
   11d68:	bl	1e400 <PyInit__decimal@@Base+0x1789c>
   11d6c:	cbz	x0, 11dac <PyInit__decimal@@Base+0xb248>
   11d70:	mov	x20, x0
   11d74:	bl	64c0 <strlen@plt>
   11d78:	str	x0, [sp, #8]
   11d7c:	cbz	w25, 11dc8 <PyInit__decimal@@Base+0xb264>
   11d80:	mov	x8, x20
   11d84:	ldrb	w9, [x8]
   11d88:	cmp	w9, #0xff
   11d8c:	b.eq	11d98 <PyInit__decimal@@Base+0xb234>  // b.none
   11d90:	cbnz	w9, 11d9c <PyInit__decimal@@Base+0xb238>
   11d94:	b	11da4 <PyInit__decimal@@Base+0xb240>
   11d98:	strb	wzr, [x8]
   11d9c:	add	x8, x8, #0x1
   11da0:	b	11d84 <PyInit__decimal@@Base+0xb220>
   11da4:	ldr	x1, [sp, #8]
   11da8:	b	11dcc <PyInit__decimal@@Base+0xb268>
   11dac:	ldrb	w8, [sp, #21]
   11db0:	tbnz	w8, #1, 11de0 <PyInit__decimal@@Base+0xb27c>
   11db4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11db8:	ldr	x8, [x8, #3928]
   11dbc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11dc0:	add	x1, x1, #0x359
   11dc4:	b	11df8 <PyInit__decimal@@Base+0xb294>
   11dc8:	mov	x1, x0
   11dcc:	mov	x0, x20
   11dd0:	mov	x2, xzr
   11dd4:	bl	6890 <PyUnicode_DecodeUTF8@plt>
   11dd8:	mov	x21, x0
   11ddc:	b	11e08 <PyInit__decimal@@Base+0xb2a4>
   11de0:	bl	65d0 <PyErr_NoMemory@plt>
   11de4:	b	11e00 <PyInit__decimal@@Base+0xb29c>
   11de8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11dec:	ldr	x8, [x8, #3928]
   11df0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11df4:	add	x1, x1, #0x343
   11df8:	ldr	x0, [x8]
   11dfc:	bl	6640 <PyErr_SetString@plt>
   11e00:	mov	x21, xzr
   11e04:	mov	x20, xzr
   11e08:	cbz	x24, 11e30 <PyInit__decimal@@Base+0xb2cc>
   11e0c:	ldr	x8, [x24]
   11e10:	subs	x8, x8, #0x1
   11e14:	str	x8, [x24]
   11e18:	b.ne	11e30 <PyInit__decimal@@Base+0xb2cc>  // b.any
   11e1c:	mov	x0, x24
   11e20:	bl	65c0 <_Py_Dealloc@plt>
   11e24:	b	11e30 <PyInit__decimal@@Base+0xb2cc>
   11e28:	mov	x20, xzr
   11e2c:	mov	x21, xzr
   11e30:	cbz	x23, 11e4c <PyInit__decimal@@Base+0xb2e8>
   11e34:	ldr	x8, [x23]
   11e38:	subs	x8, x8, #0x1
   11e3c:	str	x8, [x23]
   11e40:	b.ne	11e4c <PyInit__decimal@@Base+0xb2e8>  // b.any
   11e44:	mov	x0, x23
   11e48:	bl	65c0 <_Py_Dealloc@plt>
   11e4c:	cbz	x22, 11ba8 <PyInit__decimal@@Base+0xb044>
   11e50:	ldr	x8, [x22]
   11e54:	subs	x8, x8, #0x1
   11e58:	str	x8, [x22]
   11e5c:	b.ne	11ba8 <PyInit__decimal@@Base+0xb044>  // b.any
   11e60:	mov	x0, x22
   11e64:	bl	65c0 <_Py_Dealloc@plt>
   11e68:	b	11ba8 <PyInit__decimal@@Base+0xb044>
   11e6c:	stp	x29, x30, [sp, #-32]!
   11e70:	stp	x20, x19, [sp, #16]
   11e74:	mov	x29, sp
   11e78:	mov	x20, x0
   11e7c:	bl	7b5c <PyInit__decimal@@Base+0xff8>
   11e80:	cbz	x0, 11ebc <PyInit__decimal@@Base+0xb358>
   11e84:	ldr	x1, [x20, #8]
   11e88:	mov	x19, x0
   11e8c:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   11e90:	add	x0, x0, #0x3de
   11e94:	mov	x2, x19
   11e98:	bl	67c0 <Py_BuildValue@plt>
   11e9c:	ldr	x8, [x19]
   11ea0:	mov	x20, x0
   11ea4:	subs	x8, x8, #0x1
   11ea8:	str	x8, [x19]
   11eac:	b.ne	11ec0 <PyInit__decimal@@Base+0xb35c>  // b.any
   11eb0:	mov	x0, x19
   11eb4:	bl	65c0 <_Py_Dealloc@plt>
   11eb8:	b	11ec0 <PyInit__decimal@@Base+0xb35c>
   11ebc:	mov	x20, xzr
   11ec0:	mov	x0, x20
   11ec4:	ldp	x20, x19, [sp, #16]
   11ec8:	ldp	x29, x30, [sp], #32
   11ecc:	ret
   11ed0:	sub	sp, sp, #0x80
   11ed4:	stp	x29, x30, [sp, #64]
   11ed8:	str	x23, [sp, #80]
   11edc:	stp	x22, x21, [sp, #96]
   11ee0:	stp	x20, x19, [sp, #112]
   11ee4:	add	x29, sp, #0x40
   11ee8:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   11eec:	mov	x19, x0
   11ef0:	ldr	x0, [x22, #1408]
   11ef4:	mov	x21, x1
   11ef8:	mov	x2, sp
   11efc:	mov	x1, xzr
   11f00:	str	xzr, [x29, #24]
   11f04:	stur	wzr, [x29, #-4]
   11f08:	bl	6730 <PyContextVar_Get@plt>
   11f0c:	tbnz	w0, #31, 120e0 <PyInit__decimal@@Base+0xb57c>
   11f10:	ldr	x20, [sp]
   11f14:	cbz	x20, 11fa4 <PyInit__decimal@@Base+0xb440>
   11f18:	ldr	x8, [x20]
   11f1c:	subs	x8, x8, #0x1
   11f20:	str	x8, [x20]
   11f24:	b.ne	11f30 <PyInit__decimal@@Base+0xb3cc>  // b.any
   11f28:	mov	x0, x20
   11f2c:	bl	65c0 <_Py_Dealloc@plt>
   11f30:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11f34:	add	x1, x1, #0x27c
   11f38:	add	x2, x29, #0x18
   11f3c:	mov	x0, x21
   11f40:	bl	68d0 <PyArg_ParseTuple@plt>
   11f44:	cbz	w0, 120e0 <PyInit__decimal@@Base+0xb57c>
   11f48:	ldr	x0, [x29, #24]
   11f4c:	cbz	x0, 12008 <PyInit__decimal@@Base+0xb4a4>
   11f50:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
   11f54:	ldr	q0, [x10, #2016]
   11f58:	mov	w8, #0x1                   	// #1
   11f5c:	mov	w9, #0x90                  	// #144
   11f60:	sub	x11, x29, #0x10
   11f64:	dup	v1.2d, x8
   11f68:	stur	x8, [x29, #-16]
   11f6c:	strb	w9, [sp]
   11f70:	stur	q1, [sp, #24]
   11f74:	stur	q0, [sp, #8]
   11f78:	str	x11, [sp, #40]
   11f7c:	ldr	x8, [x0, #8]
   11f80:	ldrb	w8, [x8, #171]
   11f84:	tbnz	w8, #0, 12020 <PyInit__decimal@@Base+0xb4bc>
   11f88:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   11f8c:	ldr	x8, [x8, #3936]
   11f90:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   11f94:	add	x1, x1, #0x3e3
   11f98:	ldr	x0, [x8]
   11f9c:	bl	6640 <PyErr_SetString@plt>
   11fa0:	b	120e0 <PyInit__decimal@@Base+0xb57c>
   11fa4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   11fa8:	ldr	x23, [x8, #1504]
   11fac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   11fb0:	add	x0, x0, #0x4c0
   11fb4:	mov	x1, xzr
   11fb8:	bl	6830 <PyObject_CallObject@plt>
   11fbc:	cbz	x0, 120e0 <PyInit__decimal@@Base+0xb57c>
   11fc0:	ldp	q1, q0, [x23, #32]
   11fc4:	ldr	q2, [x23, #16]
   11fc8:	mov	x20, x0
   11fcc:	mov	x1, x20
   11fd0:	stp	q1, q0, [x0, #32]
   11fd4:	str	q2, [x0, #16]
   11fd8:	ldr	w8, [x23, #80]
   11fdc:	stp	wzr, wzr, [x0, #44]
   11fe0:	str	w8, [x0, #80]
   11fe4:	ldr	x0, [x22, #1408]
   11fe8:	bl	6670 <PyContextVar_Set@plt>
   11fec:	cbz	x0, 120bc <PyInit__decimal@@Base+0xb558>
   11ff0:	ldr	x8, [x0]
   11ff4:	subs	x8, x8, #0x1
   11ff8:	str	x8, [x0]
   11ffc:	b.ne	11f18 <PyInit__decimal@@Base+0xb3b4>  // b.any
   12000:	bl	65c0 <_Py_Dealloc@plt>
   12004:	b	11f18 <PyInit__decimal@@Base+0xb3b4>
   12008:	mov	w2, #0x6                   	// #6
   1200c:	mov	x0, x19
   12010:	mov	x1, x20
   12014:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
   12018:	mov	x21, x0
   1201c:	b	120e4 <PyInit__decimal@@Base+0xb580>
   12020:	bl	66e0 <PyLong_AsSsize_t@plt>
   12024:	mov	x22, x0
   12028:	cmn	x0, #0x1
   1202c:	b.eq	120d8 <PyInit__decimal@@Base+0xb574>  // b.none
   12030:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   12034:	add	x0, x0, #0x320
   12038:	bl	6940 <_PyObject_New@plt>
   1203c:	mov	x21, x0
   12040:	cbz	x0, 120e4 <PyInit__decimal@@Base+0xb580>
   12044:	mov	w8, #0x30                  	// #48
   12048:	mov	x0, x21
   1204c:	strb	w8, [x0, #24]!
   12050:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   12054:	cmp	x22, x8
   12058:	mov	x8, #0xffffffffffffffff    	// #-1
   1205c:	stur	x8, [x0, #-8]
   12060:	mov	w8, #0x4                   	// #4
   12064:	stp	xzr, x8, [x0, #24]
   12068:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1206c:	add	x1, x19, #0x18
   12070:	csneg	x8, x8, x22, eq  // eq = none
   12074:	add	x9, x0, #0x30
   12078:	add	x3, x20, #0x10
   1207c:	mov	x2, sp
   12080:	sub	x4, x29, #0x4
   12084:	stp	xzr, xzr, [x0, #8]
   12088:	str	x9, [x0, #40]
   1208c:	str	x8, [sp, #8]
   12090:	bl	2b984 <PyInit__decimal@@Base+0x24e20>
   12094:	ldur	w1, [x29, #-4]
   12098:	mov	x0, x20
   1209c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   120a0:	cbz	w0, 120e4 <PyInit__decimal@@Base+0xb580>
   120a4:	ldr	x8, [x21]
   120a8:	subs	x8, x8, #0x1
   120ac:	str	x8, [x21]
   120b0:	b.ne	120e0 <PyInit__decimal@@Base+0xb57c>  // b.any
   120b4:	mov	x0, x21
   120b8:	b	120d0 <PyInit__decimal@@Base+0xb56c>
   120bc:	ldr	x8, [x20]
   120c0:	subs	x8, x8, #0x1
   120c4:	str	x8, [x20]
   120c8:	b.ne	120e0 <PyInit__decimal@@Base+0xb57c>  // b.any
   120cc:	mov	x0, x20
   120d0:	bl	65c0 <_Py_Dealloc@plt>
   120d4:	b	120e0 <PyInit__decimal@@Base+0xb57c>
   120d8:	bl	67d0 <PyErr_Occurred@plt>
   120dc:	cbz	x0, 12030 <PyInit__decimal@@Base+0xb4cc>
   120e0:	mov	x21, xzr
   120e4:	mov	x0, x21
   120e8:	ldp	x20, x19, [sp, #112]
   120ec:	ldp	x22, x21, [sp, #96]
   120f0:	ldr	x23, [sp, #80]
   120f4:	ldp	x29, x30, [sp, #64]
   120f8:	add	sp, sp, #0x80
   120fc:	ret
   12100:	sub	sp, sp, #0x40
   12104:	stp	x29, x30, [sp, #16]
   12108:	stp	x22, x21, [sp, #32]
   1210c:	stp	x20, x19, [sp, #48]
   12110:	add	x29, sp, #0x10
   12114:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   12118:	ldr	x8, [x21, #1408]
   1211c:	mov	x19, x0
   12120:	add	x2, sp, #0x8
   12124:	mov	x1, xzr
   12128:	mov	x0, x8
   1212c:	bl	6730 <PyContextVar_Get@plt>
   12130:	tbnz	w0, #31, 121e4 <PyInit__decimal@@Base+0xb680>
   12134:	ldr	x20, [sp, #8]
   12138:	cbz	x20, 12168 <PyInit__decimal@@Base+0xb604>
   1213c:	ldr	x8, [x20]
   12140:	subs	x8, x8, #0x1
   12144:	str	x8, [x20]
   12148:	b.ne	12154 <PyInit__decimal@@Base+0xb5f0>  // b.any
   1214c:	mov	x0, x20
   12150:	bl	65c0 <_Py_Dealloc@plt>
   12154:	mov	w2, #0x2                   	// #2
   12158:	mov	x0, x19
   1215c:	mov	x1, x20
   12160:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
   12164:	b	121e8 <PyInit__decimal@@Base+0xb684>
   12168:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1216c:	ldr	x22, [x8, #1504]
   12170:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   12174:	add	x0, x0, #0x4c0
   12178:	mov	x1, xzr
   1217c:	bl	6830 <PyObject_CallObject@plt>
   12180:	cbz	x0, 121e4 <PyInit__decimal@@Base+0xb680>
   12184:	ldp	q1, q0, [x22, #32]
   12188:	ldr	q2, [x22, #16]
   1218c:	mov	x20, x0
   12190:	mov	x1, x20
   12194:	stp	q1, q0, [x0, #32]
   12198:	str	q2, [x0, #16]
   1219c:	ldr	w8, [x22, #80]
   121a0:	stp	wzr, wzr, [x0, #44]
   121a4:	str	w8, [x0, #80]
   121a8:	ldr	x0, [x21, #1408]
   121ac:	bl	6670 <PyContextVar_Set@plt>
   121b0:	cbz	x0, 121cc <PyInit__decimal@@Base+0xb668>
   121b4:	ldr	x8, [x0]
   121b8:	subs	x8, x8, #0x1
   121bc:	str	x8, [x0]
   121c0:	b.ne	1213c <PyInit__decimal@@Base+0xb5d8>  // b.any
   121c4:	bl	65c0 <_Py_Dealloc@plt>
   121c8:	b	1213c <PyInit__decimal@@Base+0xb5d8>
   121cc:	ldr	x8, [x20]
   121d0:	subs	x8, x8, #0x1
   121d4:	str	x8, [x20]
   121d8:	b.ne	121e4 <PyInit__decimal@@Base+0xb680>  // b.any
   121dc:	mov	x0, x20
   121e0:	bl	65c0 <_Py_Dealloc@plt>
   121e4:	mov	x0, xzr
   121e8:	ldp	x20, x19, [sp, #48]
   121ec:	ldp	x22, x21, [sp, #32]
   121f0:	ldp	x29, x30, [sp, #16]
   121f4:	add	sp, sp, #0x40
   121f8:	ret
   121fc:	sub	sp, sp, #0x40
   12200:	stp	x29, x30, [sp, #16]
   12204:	stp	x22, x21, [sp, #32]
   12208:	stp	x20, x19, [sp, #48]
   1220c:	add	x29, sp, #0x10
   12210:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   12214:	ldr	x8, [x21, #1408]
   12218:	mov	x19, x0
   1221c:	add	x2, sp, #0x8
   12220:	mov	x1, xzr
   12224:	mov	x0, x8
   12228:	bl	6730 <PyContextVar_Get@plt>
   1222c:	tbnz	w0, #31, 122e0 <PyInit__decimal@@Base+0xb77c>
   12230:	ldr	x20, [sp, #8]
   12234:	cbz	x20, 12264 <PyInit__decimal@@Base+0xb700>
   12238:	ldr	x8, [x20]
   1223c:	subs	x8, x8, #0x1
   12240:	str	x8, [x20]
   12244:	b.ne	12250 <PyInit__decimal@@Base+0xb6ec>  // b.any
   12248:	mov	x0, x20
   1224c:	bl	65c0 <_Py_Dealloc@plt>
   12250:	mov	w2, #0x3                   	// #3
   12254:	mov	x0, x19
   12258:	mov	x1, x20
   1225c:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
   12260:	b	122e4 <PyInit__decimal@@Base+0xb780>
   12264:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   12268:	ldr	x22, [x8, #1504]
   1226c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   12270:	add	x0, x0, #0x4c0
   12274:	mov	x1, xzr
   12278:	bl	6830 <PyObject_CallObject@plt>
   1227c:	cbz	x0, 122e0 <PyInit__decimal@@Base+0xb77c>
   12280:	ldp	q1, q0, [x22, #32]
   12284:	ldr	q2, [x22, #16]
   12288:	mov	x20, x0
   1228c:	mov	x1, x20
   12290:	stp	q1, q0, [x0, #32]
   12294:	str	q2, [x0, #16]
   12298:	ldr	w8, [x22, #80]
   1229c:	stp	wzr, wzr, [x0, #44]
   122a0:	str	w8, [x0, #80]
   122a4:	ldr	x0, [x21, #1408]
   122a8:	bl	6670 <PyContextVar_Set@plt>
   122ac:	cbz	x0, 122c8 <PyInit__decimal@@Base+0xb764>
   122b0:	ldr	x8, [x0]
   122b4:	subs	x8, x8, #0x1
   122b8:	str	x8, [x0]
   122bc:	b.ne	12238 <PyInit__decimal@@Base+0xb6d4>  // b.any
   122c0:	bl	65c0 <_Py_Dealloc@plt>
   122c4:	b	12238 <PyInit__decimal@@Base+0xb6d4>
   122c8:	ldr	x8, [x20]
   122cc:	subs	x8, x8, #0x1
   122d0:	str	x8, [x20]
   122d4:	b.ne	122e0 <PyInit__decimal@@Base+0xb77c>  // b.any
   122d8:	mov	x0, x20
   122dc:	bl	65c0 <_Py_Dealloc@plt>
   122e0:	mov	x0, xzr
   122e4:	ldp	x20, x19, [sp, #48]
   122e8:	ldp	x22, x21, [sp, #32]
   122ec:	ldp	x29, x30, [sp, #16]
   122f0:	add	sp, sp, #0x40
   122f4:	ret
   122f8:	sub	sp, sp, #0x40
   122fc:	stp	x29, x30, [sp, #16]
   12300:	stp	x22, x21, [sp, #32]
   12304:	stp	x20, x19, [sp, #48]
   12308:	add	x29, sp, #0x10
   1230c:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   12310:	ldr	x8, [x21, #1408]
   12314:	mov	x19, x0
   12318:	add	x2, sp, #0x8
   1231c:	mov	x1, xzr
   12320:	mov	x0, x8
   12324:	bl	6730 <PyContextVar_Get@plt>
   12328:	tbnz	w0, #31, 123dc <PyInit__decimal@@Base+0xb878>
   1232c:	ldr	x20, [sp, #8]
   12330:	cbz	x20, 12360 <PyInit__decimal@@Base+0xb7fc>
   12334:	ldr	x8, [x20]
   12338:	subs	x8, x8, #0x1
   1233c:	str	x8, [x20]
   12340:	b.ne	1234c <PyInit__decimal@@Base+0xb7e8>  // b.any
   12344:	mov	x0, x20
   12348:	bl	65c0 <_Py_Dealloc@plt>
   1234c:	mov	w2, #0x1                   	// #1
   12350:	mov	x0, x19
   12354:	mov	x1, x20
   12358:	bl	a7d0 <PyInit__decimal@@Base+0x3c6c>
   1235c:	b	123e0 <PyInit__decimal@@Base+0xb87c>
   12360:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   12364:	ldr	x22, [x8, #1504]
   12368:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1236c:	add	x0, x0, #0x4c0
   12370:	mov	x1, xzr
   12374:	bl	6830 <PyObject_CallObject@plt>
   12378:	cbz	x0, 123dc <PyInit__decimal@@Base+0xb878>
   1237c:	ldp	q1, q0, [x22, #32]
   12380:	ldr	q2, [x22, #16]
   12384:	mov	x20, x0
   12388:	mov	x1, x20
   1238c:	stp	q1, q0, [x0, #32]
   12390:	str	q2, [x0, #16]
   12394:	ldr	w8, [x22, #80]
   12398:	stp	wzr, wzr, [x0, #44]
   1239c:	str	w8, [x0, #80]
   123a0:	ldr	x0, [x21, #1408]
   123a4:	bl	6670 <PyContextVar_Set@plt>
   123a8:	cbz	x0, 123c4 <PyInit__decimal@@Base+0xb860>
   123ac:	ldr	x8, [x0]
   123b0:	subs	x8, x8, #0x1
   123b4:	str	x8, [x0]
   123b8:	b.ne	12334 <PyInit__decimal@@Base+0xb7d0>  // b.any
   123bc:	bl	65c0 <_Py_Dealloc@plt>
   123c0:	b	12334 <PyInit__decimal@@Base+0xb7d0>
   123c4:	ldr	x8, [x20]
   123c8:	subs	x8, x8, #0x1
   123cc:	str	x8, [x20]
   123d0:	b.ne	123dc <PyInit__decimal@@Base+0xb878>  // b.any
   123d4:	mov	x0, x20
   123d8:	bl	65c0 <_Py_Dealloc@plt>
   123dc:	mov	x0, xzr
   123e0:	ldp	x20, x19, [sp, #48]
   123e4:	ldp	x22, x21, [sp, #32]
   123e8:	ldp	x29, x30, [sp, #16]
   123ec:	add	sp, sp, #0x40
   123f0:	ret
   123f4:	str	d8, [sp, #-32]!
   123f8:	stp	x29, x30, [sp, #8]
   123fc:	str	x19, [sp, #24]
   12400:	mov	x29, sp
   12404:	bl	9e14 <PyInit__decimal@@Base+0x32b0>
   12408:	cbz	x0, 12444 <PyInit__decimal@@Base+0xb8e0>
   1240c:	mov	x19, x0
   12410:	bl	68b0 <PyFloat_AsDouble@plt>
   12414:	ldr	x8, [x19]
   12418:	mov	v8.16b, v0.16b
   1241c:	subs	x8, x8, #0x1
   12420:	str	x8, [x19]
   12424:	b.ne	12430 <PyInit__decimal@@Base+0xb8cc>  // b.any
   12428:	mov	x0, x19
   1242c:	bl	65c0 <_Py_Dealloc@plt>
   12430:	fmov	d0, #-1.000000000000000000e+00
   12434:	fcmp	d8, d0
   12438:	b.ne	12458 <PyInit__decimal@@Base+0xb8f4>  // b.any
   1243c:	bl	67d0 <PyErr_Occurred@plt>
   12440:	cbz	x0, 12458 <PyInit__decimal@@Base+0xb8f4>
   12444:	ldr	x19, [sp, #24]
   12448:	ldp	x29, x30, [sp, #8]
   1244c:	mov	x0, xzr
   12450:	ldr	d8, [sp], #32
   12454:	ret
   12458:	ldr	x19, [sp, #24]
   1245c:	ldp	x29, x30, [sp, #8]
   12460:	fmov	d1, xzr
   12464:	mov	v0.16b, v8.16b
   12468:	ldr	d8, [sp], #32
   1246c:	b	69f0 <PyComplex_FromDoubles@plt>
   12470:	stp	x29, x30, [sp, #-32]!
   12474:	stp	x20, x19, [sp, #16]
   12478:	mov	x29, sp
   1247c:	ldr	x8, [x0, #8]
   12480:	add	x20, x0, #0x18
   12484:	mov	x0, x20
   12488:	ldr	x19, [x8, #32]
   1248c:	bl	20004 <PyInit__decimal@@Base+0x194a0>
   12490:	cbz	w0, 1249c <PyInit__decimal@@Base+0xb938>
   12494:	ldr	x8, [x20, #32]
   12498:	add	x19, x19, x8, lsl #3
   1249c:	mov	x0, x19
   124a0:	ldp	x20, x19, [sp, #16]
   124a4:	ldp	x29, x30, [sp], #32
   124a8:	b	6690 <PyLong_FromSsize_t@plt>
   124ac:	stp	x29, x30, [sp, #-48]!
   124b0:	str	x21, [sp, #16]
   124b4:	stp	x20, x19, [sp, #32]
   124b8:	mov	x29, sp
   124bc:	ldr	x8, [x0, #8]
   124c0:	ldrb	w8, [x8, #171]
   124c4:	tbnz	w8, #4, 124f8 <PyInit__decimal@@Base+0xb994>
   124c8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   124cc:	ldr	x8, [x8, #3936]
   124d0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   124d4:	add	x1, x1, #0x186
   124d8:	ldr	x0, [x8]
   124dc:	bl	6640 <PyErr_SetString@plt>
   124e0:	mov	w19, #0xffffffff            	// #-1
   124e4:	mov	w0, w19
   124e8:	ldp	x20, x19, [sp, #32]
   124ec:	ldr	x21, [sp, #16]
   124f0:	ldp	x29, x30, [sp], #48
   124f4:	ret
   124f8:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   124fc:	mov	x20, x0
   12500:	mov	x19, xzr
   12504:	add	x21, x21, #0x5f8
   12508:	ldr	x8, [x21, x19, lsl #3]
   1250c:	cmp	x8, x20
   12510:	b.eq	124e4 <PyInit__decimal@@Base+0xb980>  // b.none
   12514:	add	x19, x19, #0x1
   12518:	cmp	x19, #0x8
   1251c:	b.ne	12508 <PyInit__decimal@@Base+0xb9a4>  // b.any
   12520:	mov	x19, xzr
   12524:	ldr	x1, [x21, x19, lsl #3]
   12528:	mov	x0, x20
   1252c:	bl	68f0 <PyUnicode_Compare@plt>
   12530:	cbz	w0, 124e4 <PyInit__decimal@@Base+0xb980>
   12534:	add	x19, x19, #0x1
   12538:	cmp	x19, #0x8
   1253c:	b.ne	12524 <PyInit__decimal@@Base+0xb9c0>  // b.any
   12540:	b	124c8 <PyInit__decimal@@Base+0xb964>
   12544:	sub	sp, sp, #0x30
   12548:	stp	x29, x30, [sp, #16]
   1254c:	stp	x20, x19, [sp, #32]
   12550:	add	x29, sp, #0x10
   12554:	mov	x1, x0
   12558:	add	x0, sp, #0x8
   1255c:	mov	w2, #0x2                   	// #2
   12560:	bl	64f0 <mbstowcs@plt>
   12564:	cmp	x0, #0x1
   12568:	b.ne	125a4 <PyInit__decimal@@Base+0xba40>  // b.any
   1256c:	add	x0, sp, #0x8
   12570:	mov	w1, #0x1                   	// #1
   12574:	bl	6560 <PyUnicode_FromWideChar@plt>
   12578:	cbz	x0, 125bc <PyInit__decimal@@Base+0xba58>
   1257c:	mov	x20, x0
   12580:	bl	65b0 <PyUnicode_AsUTF8String@plt>
   12584:	ldr	x8, [x20]
   12588:	mov	x19, x0
   1258c:	subs	x8, x8, #0x1
   12590:	str	x8, [x20]
   12594:	b.ne	125c0 <PyInit__decimal@@Base+0xba5c>  // b.any
   12598:	mov	x0, x20
   1259c:	bl	65c0 <_Py_Dealloc@plt>
   125a0:	b	125c0 <PyInit__decimal@@Base+0xba5c>
   125a4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   125a8:	ldr	x8, [x8, #3928]
   125ac:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   125b0:	add	x1, x1, #0x392
   125b4:	ldr	x0, [x8]
   125b8:	bl	6640 <PyErr_SetString@plt>
   125bc:	mov	x19, xzr
   125c0:	mov	x0, x19
   125c4:	ldp	x20, x19, [sp, #32]
   125c8:	ldp	x29, x30, [sp, #16]
   125cc:	add	sp, sp, #0x30
   125d0:	ret
   125d4:	ldr	x8, [x0]
   125d8:	add	x8, x8, #0x1
   125dc:	str	x8, [x0]
   125e0:	ret
   125e4:	stp	x29, x30, [sp, #-48]!
   125e8:	str	x21, [sp, #16]
   125ec:	stp	x20, x19, [sp, #32]
   125f0:	mov	x29, sp
   125f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   125f8:	add	x0, x0, #0x320
   125fc:	bl	6940 <_PyObject_New@plt>
   12600:	mov	x19, x0
   12604:	cbz	x0, 12650 <PyInit__decimal@@Base+0xbaec>
   12608:	mov	x21, x19
   1260c:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
   12610:	str	xzr, [x21, #72]!
   12614:	ldr	q0, [x10, #2000]
   12618:	mov	x8, #0xffffffffffffffff    	// #-1
   1261c:	mov	w9, #0x30                  	// #48
   12620:	mov	x20, x21
   12624:	stur	x8, [x21, #-56]
   12628:	strb	w9, [x20, #-48]!
   1262c:	mov	x0, x20
   12630:	mov	w1, wzr
   12634:	stp	xzr, xzr, [x21, #-40]
   12638:	stur	x21, [x21, #-8]
   1263c:	stur	q0, [x21, #-24]
   12640:	bl	2054c <PyInit__decimal@@Base+0x199e8>
   12644:	mov	x0, x20
   12648:	stur	xzr, [x21, #-40]
   1264c:	bl	20308 <PyInit__decimal@@Base+0x197a4>
   12650:	mov	x0, x19
   12654:	ldp	x20, x19, [sp, #32]
   12658:	ldr	x21, [sp, #16]
   1265c:	ldp	x29, x30, [sp], #48
   12660:	ret
   12664:	stp	x29, x30, [sp, #-96]!
   12668:	str	x27, [sp, #16]
   1266c:	stp	x26, x25, [sp, #32]
   12670:	stp	x24, x23, [sp, #48]
   12674:	stp	x22, x21, [sp, #64]
   12678:	stp	x20, x19, [sp, #80]
   1267c:	mov	x29, sp
   12680:	ldr	w23, [x0, #32]
   12684:	mov	w19, w2
   12688:	mov	x20, x0
   1268c:	mov	w21, w1
   12690:	tbnz	w23, #7, 126a8 <PyInit__decimal@@Base+0xbb44>
   12694:	mov	x0, x20
   12698:	bl	64a0 <_PyUnicode_Ready@plt>
   1269c:	cmn	w0, #0x1
   126a0:	b.eq	12848 <PyInit__decimal@@Base+0xbce4>  // b.none
   126a4:	ldr	w23, [x20, #32]
   126a8:	tbnz	w23, #5, 126b4 <PyInit__decimal@@Base+0xbb50>
   126ac:	ldr	x22, [x20, #72]
   126b0:	b	126c4 <PyInit__decimal@@Base+0xbb60>
   126b4:	add	x8, x20, #0x30
   126b8:	add	x9, x20, #0x48
   126bc:	tst	w23, #0x40
   126c0:	csel	x22, x9, x8, eq  // eq = none
   126c4:	ldr	x25, [x20, #16]
   126c8:	add	x0, x25, #0x1
   126cc:	bl	6a30 <PyMem_Malloc@plt>
   126d0:	mov	x20, x0
   126d4:	cbz	x0, 12840 <PyInit__decimal@@Base+0xbcdc>
   126d8:	adrp	x24, 49000 <PyInit__decimal@@Base+0x4249c>
   126dc:	ldr	x24, [x24, #3880]
   126e0:	ubfx	w23, w23, #2, #3
   126e4:	cbz	w21, 1279c <PyInit__decimal@@Base+0xbc38>
   126e8:	sub	x8, x25, #0x1
   126ec:	add	x25, x8, #0x1
   126f0:	cmp	x25, #0x1
   126f4:	b.lt	1279c <PyInit__decimal@@Base+0xbc38>  // b.tstop
   126f8:	mov	x27, x8
   126fc:	cmp	w23, #0x2
   12700:	b.eq	12714 <PyInit__decimal@@Base+0xbbb0>  // b.none
   12704:	cmp	w23, #0x1
   12708:	b.ne	1271c <PyInit__decimal@@Base+0xbbb8>  // b.any
   1270c:	ldrb	w0, [x22, x27]
   12710:	b	12720 <PyInit__decimal@@Base+0xbbbc>
   12714:	ldrh	w0, [x22, x27, lsl #1]
   12718:	b	12720 <PyInit__decimal@@Base+0xbbbc>
   1271c:	ldr	w0, [x22, x27, lsl #2]
   12720:	cmp	w0, #0x7f
   12724:	b.hi	12730 <PyInit__decimal@@Base+0xbbcc>  // b.pmore
   12728:	ldrb	w0, [x24, w0, uxtw]
   1272c:	b	12734 <PyInit__decimal@@Base+0xbbd0>
   12730:	bl	67f0 <_PyUnicode_IsWhitespace@plt>
   12734:	sub	x8, x27, #0x1
   12738:	cbnz	w0, 126ec <PyInit__decimal@@Base+0xbb88>
   1273c:	mov	x26, xzr
   12740:	add	x21, x8, #0x2
   12744:	add	x25, x27, #0x1
   12748:	cmp	w23, #0x2
   1274c:	b.eq	12760 <PyInit__decimal@@Base+0xbbfc>  // b.none
   12750:	cmp	w23, #0x1
   12754:	b.ne	12768 <PyInit__decimal@@Base+0xbc04>  // b.any
   12758:	ldrb	w0, [x22, x26]
   1275c:	b	1276c <PyInit__decimal@@Base+0xbc08>
   12760:	ldrh	w0, [x22, x26, lsl #1]
   12764:	b	1276c <PyInit__decimal@@Base+0xbc08>
   12768:	ldr	w0, [x22, x26, lsl #2]
   1276c:	cmp	w0, #0x7f
   12770:	b.hi	12780 <PyInit__decimal@@Base+0xbc1c>  // b.pmore
   12774:	ldrb	w0, [x24, w0, uxtw]
   12778:	cbnz	w0, 12788 <PyInit__decimal@@Base+0xbc24>
   1277c:	b	127a0 <PyInit__decimal@@Base+0xbc3c>
   12780:	bl	67f0 <_PyUnicode_IsWhitespace@plt>
   12784:	cbz	w0, 127a0 <PyInit__decimal@@Base+0xbc3c>
   12788:	add	x26, x26, #0x1
   1278c:	cmp	x21, x26
   12790:	b.ne	12748 <PyInit__decimal@@Base+0xbbe4>  // b.any
   12794:	mov	x27, x20
   12798:	b	12838 <PyInit__decimal@@Base+0xbcd4>
   1279c:	mov	x26, xzr
   127a0:	cmp	x26, x25
   127a4:	mov	x27, x20
   127a8:	b.ge	12838 <PyInit__decimal@@Base+0xbcd4>  // b.tcont
   127ac:	mov	x27, x20
   127b0:	cmp	w23, #0x2
   127b4:	b.eq	127cc <PyInit__decimal@@Base+0xbc68>  // b.none
   127b8:	cmp	w23, #0x1
   127bc:	b.ne	127d8 <PyInit__decimal@@Base+0xbc74>  // b.any
   127c0:	ldrb	w21, [x22, x26]
   127c4:	cbnz	w19, 127e0 <PyInit__decimal@@Base+0xbc7c>
   127c8:	b	127e8 <PyInit__decimal@@Base+0xbc84>
   127cc:	ldrh	w21, [x22, x26, lsl #1]
   127d0:	cbnz	w19, 127e0 <PyInit__decimal@@Base+0xbc7c>
   127d4:	b	127e8 <PyInit__decimal@@Base+0xbc84>
   127d8:	ldr	w21, [x22, x26, lsl #2]
   127dc:	cbz	w19, 127e8 <PyInit__decimal@@Base+0xbc84>
   127e0:	cmp	w21, #0x5f
   127e4:	b.eq	1282c <PyInit__decimal@@Base+0xbcc8>  // b.none
   127e8:	sub	w8, w21, #0x1
   127ec:	cmp	w8, #0x7e
   127f0:	b.ls	12828 <PyInit__decimal@@Base+0xbcc4>  // b.plast
   127f4:	cmp	w21, #0x7f
   127f8:	b.hi	1280c <PyInit__decimal@@Base+0xbca8>  // b.pmore
   127fc:	ldrb	w8, [x24, w21, uxtw]
   12800:	cbz	w8, 12818 <PyInit__decimal@@Base+0xbcb4>
   12804:	mov	w21, #0x20                  	// #32
   12808:	b	12828 <PyInit__decimal@@Base+0xbcc4>
   1280c:	mov	w0, w21
   12810:	bl	67f0 <_PyUnicode_IsWhitespace@plt>
   12814:	cbnz	w0, 12804 <PyInit__decimal@@Base+0xbca0>
   12818:	mov	w0, w21
   1281c:	bl	68a0 <_PyUnicode_ToDecimalDigit@plt>
   12820:	tbnz	w0, #31, 1286c <PyInit__decimal@@Base+0xbd08>
   12824:	add	w21, w0, #0x30
   12828:	strb	w21, [x27], #1
   1282c:	add	x26, x26, #0x1
   12830:	cmp	x25, x26
   12834:	b.ne	127b0 <PyInit__decimal@@Base+0xbc4c>  // b.any
   12838:	strb	wzr, [x27]
   1283c:	b	1284c <PyInit__decimal@@Base+0xbce8>
   12840:	bl	65d0 <PyErr_NoMemory@plt>
   12844:	b	1284c <PyInit__decimal@@Base+0xbce8>
   12848:	mov	x20, xzr
   1284c:	mov	x0, x20
   12850:	ldp	x20, x19, [sp, #80]
   12854:	ldp	x22, x21, [sp, #64]
   12858:	ldp	x24, x23, [sp, #48]
   1285c:	ldp	x26, x25, [sp, #32]
   12860:	ldr	x27, [sp, #16]
   12864:	ldp	x29, x30, [sp], #96
   12868:	ret
   1286c:	strb	wzr, [x20]
   12870:	b	1284c <PyInit__decimal@@Base+0xbce8>
   12874:	sub	sp, sp, #0x70
   12878:	stp	x29, x30, [sp, #64]
   1287c:	stp	x22, x21, [sp, #80]
   12880:	stp	x20, x19, [sp, #96]
   12884:	add	x29, sp, #0x40
   12888:	mov	x20, x2
   1288c:	mov	x21, x1
   12890:	stur	wzr, [x29, #-4]
   12894:	bl	a460 <PyInit__decimal@@Base+0x38fc>
   12898:	mov	x19, x0
   1289c:	cbz	x0, 12918 <PyInit__decimal@@Base+0xbdb4>
   128a0:	add	x0, sp, #0x8
   128a4:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   128a8:	add	x22, x19, #0x18
   128ac:	add	x2, sp, #0x8
   128b0:	sub	x3, x29, #0x4
   128b4:	mov	x0, x22
   128b8:	mov	x1, x21
   128bc:	bl	1d4d0 <PyInit__decimal@@Base+0x1696c>
   128c0:	ldur	w8, [x29, #-4]
   128c4:	mov	w9, #0x1041                	// #4161
   128c8:	tst	w8, w9
   128cc:	b.eq	128e4 <PyInit__decimal@@Base+0xbd80>  // b.none
   128d0:	sub	x2, x29, #0x4
   128d4:	mov	w1, #0x100                 	// #256
   128d8:	mov	x0, x22
   128dc:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   128e0:	ldur	w8, [x29, #-4]
   128e4:	mov	w9, #0x3be                 	// #958
   128e8:	and	w1, w8, w9
   128ec:	mov	x0, x20
   128f0:	stur	w1, [x29, #-4]
   128f4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   128f8:	cbz	w0, 12918 <PyInit__decimal@@Base+0xbdb4>
   128fc:	ldr	x8, [x19]
   12900:	subs	x8, x8, #0x1
   12904:	str	x8, [x19]
   12908:	b.ne	12914 <PyInit__decimal@@Base+0xbdb0>  // b.any
   1290c:	mov	x0, x19
   12910:	bl	65c0 <_Py_Dealloc@plt>
   12914:	mov	x19, xzr
   12918:	mov	x0, x19
   1291c:	ldp	x20, x19, [sp, #96]
   12920:	ldp	x22, x21, [sp, #80]
   12924:	ldp	x29, x30, [sp, #64]
   12928:	add	sp, sp, #0x70
   1292c:	ret
   12930:	stp	x29, x30, [sp, #-16]!
   12934:	mov	x29, sp
   12938:	ldr	x8, [x0, #8]
   1293c:	ldr	x8, [x8, #168]
   12940:	tbnz	w8, #26, 1295c <PyInit__decimal@@Base+0xbdf8>
   12944:	tbnz	w8, #25, 12970 <PyInit__decimal@@Base+0xbe0c>
   12948:	mov	x0, x1
   1294c:	mov	x1, x2
   12950:	bl	6640 <PyErr_SetString@plt>
   12954:	mov	x0, xzr
   12958:	b	12968 <PyInit__decimal@@Base+0xbe04>
   1295c:	ldr	x8, [x0]
   12960:	add	x8, x8, #0x1
   12964:	str	x8, [x0]
   12968:	ldp	x29, x30, [sp], #16
   1296c:	ret
   12970:	ldp	x29, x30, [sp], #16
   12974:	b	6520 <PyList_AsTuple@plt>
   12978:	sub	sp, sp, #0x60
   1297c:	stp	x29, x30, [sp, #16]
   12980:	stp	x26, x25, [sp, #32]
   12984:	stp	x24, x23, [sp, #48]
   12988:	stp	x22, x21, [sp, #64]
   1298c:	stp	x20, x19, [sp, #80]
   12990:	add	x29, sp, #0x10
   12994:	mov	x19, x0
   12998:	bl	69d0 <PyTuple_Size@plt>
   1299c:	cmp	x0, #0x3
   129a0:	b.ne	12a08 <PyInit__decimal@@Base+0xbea4>  // b.any
   129a4:	ldr	x0, [x19, #24]
   129a8:	ldr	x8, [x0, #8]
   129ac:	ldrb	w8, [x8, #171]
   129b0:	tbz	w8, #0, 12a24 <PyInit__decimal@@Base+0xbec0>
   129b4:	bl	6810 <PyLong_AsLong@plt>
   129b8:	cmn	x0, #0x1
   129bc:	b.eq	12a1c <PyInit__decimal@@Base+0xbeb8>  // b.none
   129c0:	cmp	x0, #0x2
   129c4:	b.cs	12a24 <PyInit__decimal@@Base+0xbec0>  // b.hs, b.nlast
   129c8:	cmp	x0, #0x0
   129cc:	mov	w8, #0x2d                  	// #45
   129d0:	mov	w9, #0x2b                  	// #43
   129d4:	csel	w8, w9, w8, eq  // eq = none
   129d8:	strb	w8, [sp, #8]
   129dc:	strb	wzr, [sp, #9]
   129e0:	ldr	x20, [x19, #40]
   129e4:	ldr	x8, [x20, #8]
   129e8:	ldr	x8, [x8, #168]
   129ec:	tbnz	w8, #28, 12a60 <PyInit__decimal@@Base+0xbefc>
   129f0:	tbnz	w8, #24, 12ab0 <PyInit__decimal@@Base+0xbf4c>
   129f4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   129f8:	ldr	x8, [x8, #3928]
   129fc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12a00:	add	x1, x1, #0x4c7
   12a04:	b	12a34 <PyInit__decimal@@Base+0xbed0>
   12a08:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12a0c:	ldr	x8, [x8, #3928]
   12a10:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12a14:	add	x1, x1, #0x42e
   12a18:	b	12a34 <PyInit__decimal@@Base+0xbed0>
   12a1c:	bl	67d0 <PyErr_Occurred@plt>
   12a20:	cbnz	x0, 12a3c <PyInit__decimal@@Base+0xbed8>
   12a24:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12a28:	ldr	x8, [x8, #3928]
   12a2c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12a30:	add	x1, x1, #0x456
   12a34:	ldr	x0, [x8]
   12a38:	bl	6640 <PyErr_SetString@plt>
   12a3c:	mov	x19, xzr
   12a40:	mov	x0, x19
   12a44:	ldp	x20, x19, [sp, #80]
   12a48:	ldp	x22, x21, [sp, #64]
   12a4c:	ldp	x24, x23, [sp, #48]
   12a50:	ldp	x26, x25, [sp, #32]
   12a54:	ldp	x29, x30, [sp, #16]
   12a58:	add	sp, sp, #0x60
   12a5c:	ret
   12a60:	adrp	x1, 38000 <PyInit__decimal@@Base+0x3149c>
   12a64:	add	x1, x1, #0xf1
   12a68:	mov	x0, x20
   12a6c:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12a70:	cbz	w0, 12acc <PyInit__decimal@@Base+0xbf68>
   12a74:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   12a78:	add	x1, x1, #0xe42
   12a7c:	mov	x0, x20
   12a80:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12a84:	cbz	w0, 12af0 <PyInit__decimal@@Base+0xbf8c>
   12a88:	adrp	x1, 38000 <PyInit__decimal@@Base+0x3149c>
   12a8c:	add	x1, x1, #0xe9
   12a90:	mov	x0, x20
   12a94:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12a98:	cbz	w0, 12b28 <PyInit__decimal@@Base+0xbfc4>
   12a9c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12aa0:	ldr	x8, [x8, #3928]
   12aa4:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12aa8:	add	x1, x1, #0x489
   12aac:	b	12a34 <PyInit__decimal@@Base+0xbed0>
   12ab0:	mov	x0, x20
   12ab4:	bl	66e0 <PyLong_AsSsize_t@plt>
   12ab8:	cmn	x0, #0x1
   12abc:	b.eq	12b14 <PyInit__decimal@@Base+0xbfb0>  // b.none
   12ac0:	mov	x21, x0
   12ac4:	mov	w24, wzr
   12ac8:	b	12b50 <PyInit__decimal@@Base+0xbfec>
   12acc:	add	x0, sp, #0x8
   12ad0:	add	x20, sp, #0x8
   12ad4:	bl	64c0 <strlen@plt>
   12ad8:	mov	w8, #0x6e49                	// #28233
   12adc:	movk	w8, #0x66, lsl #16
   12ae0:	mov	x21, xzr
   12ae4:	str	w8, [x20, x0]
   12ae8:	mov	w24, #0x1                   	// #1
   12aec:	b	12b50 <PyInit__decimal@@Base+0xbfec>
   12af0:	add	x0, sp, #0x8
   12af4:	add	x20, sp, #0x8
   12af8:	bl	64c0 <strlen@plt>
   12afc:	mov	w8, #0x614e                	// #24910
   12b00:	movk	w8, #0x4e, lsl #16
   12b04:	mov	x21, xzr
   12b08:	mov	w24, wzr
   12b0c:	str	w8, [x20, x0]
   12b10:	b	12b50 <PyInit__decimal@@Base+0xbfec>
   12b14:	bl	67d0 <PyErr_Occurred@plt>
   12b18:	cbnz	x0, 12a3c <PyInit__decimal@@Base+0xbed8>
   12b1c:	mov	w24, wzr
   12b20:	mov	x21, #0xffffffffffffffff    	// #-1
   12b24:	b	12b50 <PyInit__decimal@@Base+0xbfec>
   12b28:	add	x0, sp, #0x8
   12b2c:	add	x20, sp, #0x8
   12b30:	bl	64c0 <strlen@plt>
   12b34:	mov	w9, #0x4e73                	// #20083
   12b38:	add	x8, x20, x0
   12b3c:	movk	w9, #0x4e61, lsl #16
   12b40:	mov	x21, xzr
   12b44:	mov	w24, wzr
   12b48:	str	w9, [x8]
   12b4c:	strb	wzr, [x8, #4]
   12b50:	adrp	x25, 49000 <PyInit__decimal@@Base+0x4249c>
   12b54:	ldr	x0, [x19, #32]
   12b58:	ldr	x25, [x25, #3928]
   12b5c:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   12b60:	add	x2, x2, #0x4e3
   12b64:	ldr	x1, [x25]
   12b68:	bl	12930 <PyInit__decimal@@Base+0xbdcc>
   12b6c:	cbz	x0, 12a3c <PyInit__decimal@@Base+0xbed8>
   12b70:	mov	x20, x0
   12b74:	bl	69d0 <PyTuple_Size@plt>
   12b78:	add	x23, x0, #0x19
   12b7c:	mov	x22, x0
   12b80:	mov	x0, x23
   12b84:	bl	6a30 <PyMem_Malloc@plt>
   12b88:	mov	x19, x0
   12b8c:	cbz	x0, 12bd4 <PyInit__decimal@@Base+0xc070>
   12b90:	adrp	x2, 36000 <PyInit__decimal@@Base+0x2f49c>
   12b94:	add	x2, x2, #0xd42
   12b98:	add	x3, sp, #0x8
   12b9c:	mov	x0, x19
   12ba0:	mov	x1, x23
   12ba4:	bl	6600 <snprintf@plt>
   12ba8:	tbnz	w0, #31, 12c58 <PyInit__decimal@@Base+0xc0f4>
   12bac:	cmp	x23, w0, uxtw
   12bb0:	b.le	12c58 <PyInit__decimal@@Base+0xc0f4>
   12bb4:	mov	w8, w0
   12bb8:	add	x23, x19, x8
   12bbc:	cbnz	x22, 12bdc <PyInit__decimal@@Base+0xc078>
   12bc0:	ldrb	w8, [sp, #9]
   12bc4:	cbnz	w8, 12bdc <PyInit__decimal@@Base+0xc078>
   12bc8:	mov	w8, #0x30                  	// #48
   12bcc:	strb	w8, [x23], #1
   12bd0:	b	12c24 <PyInit__decimal@@Base+0xc0c0>
   12bd4:	bl	65d0 <PyErr_NoMemory@plt>
   12bd8:	b	12c70 <PyInit__decimal@@Base+0xc10c>
   12bdc:	cmp	x22, #0x1
   12be0:	b.lt	12c24 <PyInit__decimal@@Base+0xc0c0>  // b.tstop
   12be4:	add	x26, x20, #0x18
   12be8:	ldr	x0, [x26]
   12bec:	ldr	x8, [x0, #8]
   12bf0:	ldrb	w8, [x8, #171]
   12bf4:	tbz	w8, #0, 12cbc <PyInit__decimal@@Base+0xc158>
   12bf8:	bl	6810 <PyLong_AsLong@plt>
   12bfc:	cmn	x0, #0x1
   12c00:	b.eq	12cb4 <PyInit__decimal@@Base+0xc150>  // b.none
   12c04:	cmp	x0, #0xa
   12c08:	b.cs	12cbc <PyInit__decimal@@Base+0xc158>  // b.hs, b.nlast
   12c0c:	cbnz	w24, 12c18 <PyInit__decimal@@Base+0xc0b4>
   12c10:	add	w8, w0, #0x30
   12c14:	strb	w8, [x23], #1
   12c18:	subs	x22, x22, #0x1
   12c1c:	add	x26, x26, #0x8
   12c20:	b.ne	12be8 <PyInit__decimal@@Base+0xc084>  // b.any
   12c24:	strb	wzr, [x23]
   12c28:	ldrb	w8, [sp, #9]
   12c2c:	cbnz	w8, 12c98 <PyInit__decimal@@Base+0xc134>
   12c30:	mov	w8, #0x45                  	// #69
   12c34:	strb	w8, [x23], #1
   12c38:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   12c3c:	add	x2, x2, #0x52f
   12c40:	mov	w1, #0x15                  	// #21
   12c44:	mov	x0, x23
   12c48:	mov	x3, x21
   12c4c:	bl	6600 <snprintf@plt>
   12c50:	cmp	w0, #0x15
   12c54:	b.cc	12c98 <PyInit__decimal@@Base+0xc134>  // b.lo, b.ul, b.last
   12c58:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12c5c:	ldr	x8, [x8, #3920]
   12c60:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12c64:	add	x1, x1, #0x509
   12c68:	ldr	x0, [x8]
   12c6c:	bl	6640 <PyErr_SetString@plt>
   12c70:	ldr	x8, [x20]
   12c74:	subs	x8, x8, #0x1
   12c78:	str	x8, [x20]
   12c7c:	b.ne	12c88 <PyInit__decimal@@Base+0xc124>  // b.any
   12c80:	mov	x0, x20
   12c84:	bl	65c0 <_Py_Dealloc@plt>
   12c88:	cbz	x19, 12a40 <PyInit__decimal@@Base+0xbedc>
   12c8c:	mov	x0, x19
   12c90:	bl	6550 <PyMem_Free@plt>
   12c94:	b	12a3c <PyInit__decimal@@Base+0xbed8>
   12c98:	ldr	x8, [x20]
   12c9c:	subs	x8, x8, #0x1
   12ca0:	str	x8, [x20]
   12ca4:	b.ne	12a40 <PyInit__decimal@@Base+0xbedc>  // b.any
   12ca8:	mov	x0, x20
   12cac:	bl	65c0 <_Py_Dealloc@plt>
   12cb0:	b	12a40 <PyInit__decimal@@Base+0xbedc>
   12cb4:	bl	67d0 <PyErr_Occurred@plt>
   12cb8:	cbnz	x0, 12c70 <PyInit__decimal@@Base+0xc10c>
   12cbc:	ldr	x0, [x25]
   12cc0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12cc4:	add	x1, x1, #0x4e3
   12cc8:	b	12c6c <PyInit__decimal@@Base+0xc108>
   12ccc:	stp	x29, x30, [sp, #-32]!
   12cd0:	str	x19, [sp, #16]
   12cd4:	mov	x29, sp
   12cd8:	mov	x19, x0
   12cdc:	ldr	x0, [x0, #64]
   12ce0:	cbz	x0, 12cf8 <PyInit__decimal@@Base+0xc194>
   12ce4:	ldr	x8, [x0]
   12ce8:	subs	x8, x8, #0x1
   12cec:	str	x8, [x0]
   12cf0:	b.ne	12cf8 <PyInit__decimal@@Base+0xc194>  // b.any
   12cf4:	bl	65c0 <_Py_Dealloc@plt>
   12cf8:	ldr	x0, [x19, #72]
   12cfc:	cbz	x0, 12d14 <PyInit__decimal@@Base+0xc1b0>
   12d00:	ldr	x8, [x0]
   12d04:	subs	x8, x8, #0x1
   12d08:	str	x8, [x0]
   12d0c:	b.ne	12d14 <PyInit__decimal@@Base+0xc1b0>  // b.any
   12d10:	bl	65c0 <_Py_Dealloc@plt>
   12d14:	ldr	x8, [x19, #8]
   12d18:	mov	x0, x19
   12d1c:	ldr	x19, [sp, #16]
   12d20:	ldr	x1, [x8, #320]
   12d24:	ldp	x29, x30, [sp], #32
   12d28:	br	x1
   12d2c:	sub	sp, sp, #0x130
   12d30:	stp	x29, x30, [sp, #256]
   12d34:	str	x28, [sp, #272]
   12d38:	stp	x20, x19, [sp, #288]
   12d3c:	add	x29, sp, #0x100
   12d40:	ldr	w2, [x0, #44]
   12d44:	adrp	x3, 4c000 <PyInit__decimal@@Base+0x4549c>
   12d48:	mov	x19, x0
   12d4c:	add	x3, x3, #0x2c0
   12d50:	sub	x0, x29, #0x7c
   12d54:	mov	w1, #0x79                  	// #121
   12d58:	bl	1ec98 <PyInit__decimal@@Base+0x18134>
   12d5c:	cmp	w0, #0x79
   12d60:	b.cs	12d88 <PyInit__decimal@@Base+0xc224>  // b.hs, b.nlast
   12d64:	ldr	w2, [x19, #40]
   12d68:	adrp	x3, 4c000 <PyInit__decimal@@Base+0x4549c>
   12d6c:	add	x3, x3, #0x2c0
   12d70:	add	x0, sp, #0x8
   12d74:	mov	w1, #0x79                  	// #121
   12d78:	add	x20, sp, #0x8
   12d7c:	bl	1ec98 <PyInit__decimal@@Base+0x18134>
   12d80:	cmp	w0, #0x79
   12d84:	b.cc	12da8 <PyInit__decimal@@Base+0xc244>  // b.lo, b.ul, b.last
   12d88:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12d8c:	ldr	x8, [x8, #3920]
   12d90:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12d94:	add	x1, x1, #0x543
   12d98:	ldr	x0, [x8]
   12d9c:	bl	6640 <PyErr_SetString@plt>
   12da0:	mov	x0, xzr
   12da4:	b	12ddc <PyInit__decimal@@Base+0xc278>
   12da8:	ldp	w8, w6, [x19, #52]
   12dac:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   12db0:	sxtw	x8, w8
   12db4:	add	x9, x9, #0x4e8
   12db8:	ldp	x4, x3, [x19, #24]
   12dbc:	ldr	x1, [x19, #16]
   12dc0:	ldr	x2, [x9, x8, lsl #3]
   12dc4:	ldr	w5, [x19, #80]
   12dc8:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   12dcc:	add	x0, x0, #0x562
   12dd0:	sub	x7, x29, #0x7c
   12dd4:	str	x20, [sp]
   12dd8:	bl	6470 <PyUnicode_FromFormat@plt>
   12ddc:	ldp	x20, x19, [sp, #288]
   12de0:	ldr	x28, [sp, #272]
   12de4:	ldp	x29, x30, [sp, #256]
   12de8:	add	sp, sp, #0x130
   12dec:	ret
   12df0:	stp	x29, x30, [sp, #-32]!
   12df4:	stp	x20, x19, [sp, #16]
   12df8:	mov	x29, sp
   12dfc:	ldr	x8, [x1, #8]
   12e00:	mov	x19, x1
   12e04:	mov	x20, x0
   12e08:	ldrb	w8, [x8, #171]
   12e0c:	tbz	w8, #4, 12e38 <PyInit__decimal@@Base+0xc2d4>
   12e10:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12e14:	add	x1, x1, #0x6e7
   12e18:	mov	x0, x19
   12e1c:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12e20:	cbz	w0, 12e4c <PyInit__decimal@@Base+0xc2e8>
   12e24:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12e28:	add	x1, x1, #0x6db
   12e2c:	mov	x0, x19
   12e30:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12e34:	cbz	w0, 12e54 <PyInit__decimal@@Base+0xc2f0>
   12e38:	mov	x0, x20
   12e3c:	mov	x1, x19
   12e40:	ldp	x20, x19, [sp, #16]
   12e44:	ldp	x29, x30, [sp], #32
   12e48:	b	67a0 <PyObject_GenericGetAttr@plt>
   12e4c:	ldr	x0, [x20, #64]
   12e50:	b	12e58 <PyInit__decimal@@Base+0xc2f4>
   12e54:	ldr	x0, [x20, #72]
   12e58:	ldr	x8, [x0]
   12e5c:	add	x8, x8, #0x1
   12e60:	str	x8, [x0]
   12e64:	ldp	x20, x19, [sp, #16]
   12e68:	ldp	x29, x30, [sp], #32
   12e6c:	ret
   12e70:	stp	x29, x30, [sp, #-48]!
   12e74:	str	x21, [sp, #16]
   12e78:	stp	x20, x19, [sp, #32]
   12e7c:	mov	x29, sp
   12e80:	cbz	x2, 12ee0 <PyInit__decimal@@Base+0xc37c>
   12e84:	ldr	x8, [x1, #8]
   12e88:	mov	x19, x2
   12e8c:	mov	x21, x1
   12e90:	mov	x20, x0
   12e94:	ldrb	w8, [x8, #171]
   12e98:	tbz	w8, #4, 12ec4 <PyInit__decimal@@Base+0xc360>
   12e9c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12ea0:	add	x1, x1, #0x6e7
   12ea4:	mov	x0, x21
   12ea8:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12eac:	cbz	w0, 12f0c <PyInit__decimal@@Base+0xc3a8>
   12eb0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12eb4:	add	x1, x1, #0x6db
   12eb8:	mov	x0, x21
   12ebc:	bl	6880 <PyUnicode_CompareWithASCIIString@plt>
   12ec0:	cbz	w0, 12f24 <PyInit__decimal@@Base+0xc3c0>
   12ec4:	mov	x0, x20
   12ec8:	mov	x1, x21
   12ecc:	mov	x2, x19
   12ed0:	ldp	x20, x19, [sp, #32]
   12ed4:	ldr	x21, [sp, #16]
   12ed8:	ldp	x29, x30, [sp], #48
   12edc:	b	69a0 <PyObject_GenericSetAttr@plt>
   12ee0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   12ee4:	ldr	x8, [x8, #4048]
   12ee8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   12eec:	add	x1, x1, #0x5c0
   12ef0:	ldr	x0, [x8]
   12ef4:	bl	6640 <PyErr_SetString@plt>
   12ef8:	ldp	x20, x19, [sp, #32]
   12efc:	ldr	x21, [sp, #16]
   12f00:	mov	w0, #0xffffffff            	// #-1
   12f04:	ldp	x29, x30, [sp], #48
   12f08:	ret
   12f0c:	mov	x0, x20
   12f10:	mov	x1, x19
   12f14:	ldp	x20, x19, [sp, #32]
   12f18:	ldr	x21, [sp, #16]
   12f1c:	ldp	x29, x30, [sp], #48
   12f20:	b	1323c <PyInit__decimal@@Base+0xc6d8>
   12f24:	mov	x0, x20
   12f28:	mov	x1, x19
   12f2c:	ldp	x20, x19, [sp, #32]
   12f30:	ldr	x21, [sp, #16]
   12f34:	ldp	x29, x30, [sp], #48
   12f38:	b	132bc <PyInit__decimal@@Base+0xc758>
   12f3c:	sub	sp, sp, #0x80
   12f40:	stp	x29, x30, [sp, #96]
   12f44:	stp	x20, x19, [sp, #112]
   12f48:	add	x29, sp, #0x60
   12f4c:	adrp	x20, 49000 <PyInit__decimal@@Base+0x4249c>
   12f50:	ldr	x20, [x20, #4008]
   12f54:	mov	x8, x2
   12f58:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   12f5c:	adrp	x3, 4c000 <PyInit__decimal@@Base+0x4549c>
   12f60:	mov	x19, x0
   12f64:	add	x9, sp, #0x20
   12f68:	add	x10, sp, #0x28
   12f6c:	add	x11, sp, #0x30
   12f70:	sub	x12, x29, #0x28
   12f74:	add	x2, x2, #0x843
   12f78:	add	x3, x3, #0x358
   12f7c:	sub	x4, x29, #0x8
   12f80:	sub	x5, x29, #0x10
   12f84:	sub	x6, x29, #0x18
   12f88:	sub	x7, x29, #0x20
   12f8c:	mov	x0, x1
   12f90:	mov	x1, x8
   12f94:	stp	x20, x20, [x29, #-16]
   12f98:	stp	x20, x20, [x29, #-32]
   12f9c:	stur	x20, [x29, #-40]
   12fa0:	stp	x20, x20, [sp, #40]
   12fa4:	stp	x9, x20, [sp, #24]
   12fa8:	stp	x11, x10, [sp, #8]
   12fac:	str	x12, [sp]
   12fb0:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   12fb4:	cbz	w0, 13124 <PyInit__decimal@@Base+0xc5c0>
   12fb8:	ldur	x1, [x29, #-8]
   12fbc:	cmp	x1, x20
   12fc0:	b.eq	12fd4 <PyInit__decimal@@Base+0xc470>  // b.none
   12fc4:	mov	x0, x19
   12fc8:	mov	x2, xzr
   12fcc:	bl	19de4 <PyInit__decimal@@Base+0x13280>
   12fd0:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   12fd4:	ldur	x1, [x29, #-16]
   12fd8:	cmp	x1, x20
   12fdc:	b.eq	12ff0 <PyInit__decimal@@Base+0xc48c>  // b.none
   12fe0:	mov	x0, x19
   12fe4:	mov	x2, xzr
   12fe8:	bl	19f94 <PyInit__decimal@@Base+0x13430>
   12fec:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   12ff0:	ldur	x1, [x29, #-24]
   12ff4:	cmp	x1, x20
   12ff8:	b.eq	1300c <PyInit__decimal@@Base+0xc4a8>  // b.none
   12ffc:	mov	x0, x19
   13000:	mov	x2, xzr
   13004:	bl	19ef4 <PyInit__decimal@@Base+0x13390>
   13008:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   1300c:	ldur	x1, [x29, #-32]
   13010:	cmp	x1, x20
   13014:	b.eq	13028 <PyInit__decimal@@Base+0xc4c4>  // b.none
   13018:	mov	x0, x19
   1301c:	mov	x2, xzr
   13020:	bl	19e6c <PyInit__decimal@@Base+0x13308>
   13024:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   13028:	ldur	x1, [x29, #-40]
   1302c:	cmp	x1, x20
   13030:	b.eq	13044 <PyInit__decimal@@Base+0xc4e0>  // b.none
   13034:	mov	x0, x19
   13038:	mov	x2, xzr
   1303c:	bl	19ffc <PyInit__decimal@@Base+0x13498>
   13040:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   13044:	ldr	x1, [sp, #48]
   13048:	cmp	x1, x20
   1304c:	b.eq	13060 <PyInit__decimal@@Base+0xc4fc>  // b.none
   13050:	mov	x0, x19
   13054:	mov	x2, xzr
   13058:	bl	1a080 <PyInit__decimal@@Base+0x1351c>
   1305c:	tbnz	w0, #31, 13124 <PyInit__decimal@@Base+0xc5c0>
   13060:	ldr	x1, [sp, #32]
   13064:	cmp	x1, x20
   13068:	b.eq	130a8 <PyInit__decimal@@Base+0xc544>  // b.none
   1306c:	ldr	x8, [x1, #8]
   13070:	ldrb	w8, [x8, #171]
   13074:	tbnz	w8, #1, 13088 <PyInit__decimal@@Base+0xc524>
   13078:	mov	x0, x19
   1307c:	bl	1323c <PyInit__decimal@@Base+0xc6d8>
   13080:	tbz	w0, #31, 130a8 <PyInit__decimal@@Base+0xc544>
   13084:	b	13128 <PyInit__decimal@@Base+0xc5c4>
   13088:	mov	x0, x1
   1308c:	bl	1a0f8 <PyInit__decimal@@Base+0x13594>
   13090:	tst	w0, #0x18000
   13094:	b.ne	13124 <PyInit__decimal@@Base+0xc5c0>  // b.any
   13098:	mov	w1, w0
   1309c:	add	x0, x19, #0x10
   130a0:	bl	1c0c8 <PyInit__decimal@@Base+0x15564>
   130a4:	cbz	w0, 130f8 <PyInit__decimal@@Base+0xc594>
   130a8:	ldr	x1, [sp, #40]
   130ac:	cmp	x1, x20
   130b0:	b.eq	130f0 <PyInit__decimal@@Base+0xc58c>  // b.none
   130b4:	ldr	x8, [x1, #8]
   130b8:	ldrb	w8, [x8, #171]
   130bc:	tbnz	w8, #1, 130d0 <PyInit__decimal@@Base+0xc56c>
   130c0:	mov	x0, x19
   130c4:	bl	132bc <PyInit__decimal@@Base+0xc758>
   130c8:	tbz	w0, #31, 130f0 <PyInit__decimal@@Base+0xc58c>
   130cc:	b	13128 <PyInit__decimal@@Base+0xc5c4>
   130d0:	mov	x0, x1
   130d4:	bl	1a0f8 <PyInit__decimal@@Base+0x13594>
   130d8:	tst	w0, #0x18000
   130dc:	b.ne	13124 <PyInit__decimal@@Base+0xc5c0>  // b.any
   130e0:	mov	w1, w0
   130e4:	add	x0, x19, #0x10
   130e8:	bl	1c0e4 <PyInit__decimal@@Base+0x15580>
   130ec:	cbz	w0, 1310c <PyInit__decimal@@Base+0xc5a8>
   130f0:	mov	w0, wzr
   130f4:	b	13128 <PyInit__decimal@@Base+0xc5c4>
   130f8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   130fc:	ldr	x8, [x8, #3920]
   13100:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   13104:	add	x1, x1, #0x84d
   13108:	b	1311c <PyInit__decimal@@Base+0xc5b8>
   1310c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   13110:	ldr	x8, [x8, #3920]
   13114:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   13118:	add	x1, x1, #0x909
   1311c:	ldr	x0, [x8]
   13120:	bl	6640 <PyErr_SetString@plt>
   13124:	mov	w0, #0xffffffff            	// #-1
   13128:	ldp	x20, x19, [sp, #112]
   1312c:	ldp	x29, x30, [sp, #96]
   13130:	add	sp, sp, #0x80
   13134:	ret
   13138:	stp	x29, x30, [sp, #-32]!
   1313c:	stp	x20, x19, [sp, #16]
   13140:	mov	x29, sp
   13144:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   13148:	add	x8, x8, #0x4c0
   1314c:	cmp	x0, x8
   13150:	b.eq	13164 <PyInit__decimal@@Base+0xc600>  // b.none
   13154:	ldr	x8, [x0, #304]
   13158:	mov	x1, xzr
   1315c:	blr	x8
   13160:	b	13170 <PyInit__decimal@@Base+0xc60c>
   13164:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13168:	add	x0, x0, #0x4c0
   1316c:	bl	6940 <_PyObject_New@plt>
   13170:	mov	x19, x0
   13174:	cbz	x0, 131f0 <PyInit__decimal@@Base+0xc68c>
   13178:	adrp	x20, 4c000 <PyInit__decimal@@Base+0x4549c>
   1317c:	ldr	x0, [x20, #1480]
   13180:	mov	x1, xzr
   13184:	bl	6830 <PyObject_CallObject@plt>
   13188:	str	x0, [x19, #64]
   1318c:	cbz	x0, 131c0 <PyInit__decimal@@Base+0xc65c>
   13190:	ldr	x0, [x20, #1480]
   13194:	mov	x1, xzr
   13198:	bl	6830 <PyObject_CallObject@plt>
   1319c:	str	x0, [x19, #72]
   131a0:	cbz	x0, 131d8 <PyInit__decimal@@Base+0xc674>
   131a4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   131a8:	ldr	x9, [x8, #1504]
   131ac:	add	x8, x19, #0x10
   131b0:	cbz	x9, 131f8 <PyInit__decimal@@Base+0xc694>
   131b4:	ldp	q1, q0, [x9, #32]
   131b8:	ldr	q2, [x9, #16]
   131bc:	b	13208 <PyInit__decimal@@Base+0xc6a4>
   131c0:	ldr	x8, [x19]
   131c4:	str	xzr, [x19, #72]
   131c8:	subs	x8, x8, #0x1
   131cc:	str	x8, [x19]
   131d0:	b.ne	13230 <PyInit__decimal@@Base+0xc6cc>  // b.any
   131d4:	b	131e8 <PyInit__decimal@@Base+0xc684>
   131d8:	ldr	x8, [x19]
   131dc:	subs	x8, x8, #0x1
   131e0:	str	x8, [x19]
   131e4:	b.ne	131f0 <PyInit__decimal@@Base+0xc68c>  // b.any
   131e8:	mov	x0, x19
   131ec:	bl	65c0 <_Py_Dealloc@plt>
   131f0:	mov	x0, xzr
   131f4:	b	13230 <PyInit__decimal@@Base+0xc6cc>
   131f8:	adrp	x9, 36000 <PyInit__decimal@@Base+0x2f49c>
   131fc:	add	x9, x9, #0x9e8
   13200:	ldp	q1, q0, [x9, #16]
   13204:	ldr	q2, [x9]
   13208:	stp	q1, q0, [x8, #16]
   1320c:	str	q2, [x8], #28
   13210:	ldr	x9, [x19, #64]
   13214:	add	x10, x19, #0x28
   13218:	mov	w11, #0x1                   	// #1
   1321c:	str	x10, [x9, #16]
   13220:	str	x8, [x0, #16]
   13224:	mov	x0, x19
   13228:	str	w11, [x19, #80]
   1322c:	str	xzr, [x19, #88]
   13230:	ldp	x20, x19, [sp, #16]
   13234:	ldp	x29, x30, [sp], #32
   13238:	ret
   1323c:	stp	x29, x30, [sp, #-32]!
   13240:	str	x19, [sp, #16]
   13244:	mov	x29, sp
   13248:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   1324c:	ldr	x8, [x1, #8]
   13250:	ldr	x9, [x9, #1480]
   13254:	mov	x19, x0
   13258:	cmp	x8, x9
   1325c:	b.eq	13278 <PyInit__decimal@@Base+0xc714>  // b.none
   13260:	mov	x0, x1
   13264:	bl	1333c <PyInit__decimal@@Base+0xc7d8>
   13268:	tst	w0, #0x18000
   1326c:	b.ne	132ac <PyInit__decimal@@Base+0xc748>  // b.any
   13270:	mov	w1, w0
   13274:	b	13280 <PyInit__decimal@@Base+0xc71c>
   13278:	ldr	x8, [x1, #16]
   1327c:	ldr	w1, [x8]
   13280:	add	x0, x19, #0x10
   13284:	bl	1c0c8 <PyInit__decimal@@Base+0x15564>
   13288:	cbz	w0, 13294 <PyInit__decimal@@Base+0xc730>
   1328c:	mov	w0, wzr
   13290:	b	132b0 <PyInit__decimal@@Base+0xc74c>
   13294:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   13298:	ldr	x8, [x8, #3920]
   1329c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   132a0:	add	x1, x1, #0x5e5
   132a4:	ldr	x0, [x8]
   132a8:	bl	6640 <PyErr_SetString@plt>
   132ac:	mov	w0, #0xffffffff            	// #-1
   132b0:	ldr	x19, [sp, #16]
   132b4:	ldp	x29, x30, [sp], #32
   132b8:	ret
   132bc:	stp	x29, x30, [sp, #-32]!
   132c0:	str	x19, [sp, #16]
   132c4:	mov	x29, sp
   132c8:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   132cc:	ldr	x8, [x1, #8]
   132d0:	ldr	x9, [x9, #1480]
   132d4:	mov	x19, x0
   132d8:	cmp	x8, x9
   132dc:	b.eq	132f8 <PyInit__decimal@@Base+0xc794>  // b.none
   132e0:	mov	x0, x1
   132e4:	bl	1333c <PyInit__decimal@@Base+0xc7d8>
   132e8:	tst	w0, #0x18000
   132ec:	b.ne	1332c <PyInit__decimal@@Base+0xc7c8>  // b.any
   132f0:	mov	w1, w0
   132f4:	b	13300 <PyInit__decimal@@Base+0xc79c>
   132f8:	ldr	x8, [x1, #16]
   132fc:	ldr	w1, [x8]
   13300:	add	x0, x19, #0x10
   13304:	bl	1c0e4 <PyInit__decimal@@Base+0x15580>
   13308:	cbz	w0, 13314 <PyInit__decimal@@Base+0xc7b0>
   1330c:	mov	w0, wzr
   13310:	b	13330 <PyInit__decimal@@Base+0xc7cc>
   13314:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   13318:	ldr	x8, [x8, #3920]
   1331c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   13320:	add	x1, x1, #0x640
   13324:	ldr	x0, [x8]
   13328:	bl	6640 <PyErr_SetString@plt>
   1332c:	mov	w0, #0xffffffff            	// #-1
   13330:	ldr	x19, [sp, #16]
   13334:	ldp	x29, x30, [sp], #32
   13338:	ret
   1333c:	stp	x29, x30, [sp, #-48]!
   13340:	str	x21, [sp, #16]
   13344:	stp	x20, x19, [sp, #32]
   13348:	mov	x29, sp
   1334c:	ldr	x8, [x0, #8]
   13350:	ldrb	w8, [x8, #171]
   13354:	tbnz	w8, #5, 1336c <PyInit__decimal@@Base+0xc808>
   13358:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1335c:	ldr	x8, [x8, #3936]
   13360:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   13364:	add	x1, x1, #0x60d
   13368:	b	133f0 <PyInit__decimal@@Base+0xc88c>
   1336c:	mov	x20, x0
   13370:	bl	64d0 <PyDict_Size@plt>
   13374:	cmp	x0, #0x9
   13378:	b.ne	133e0 <PyInit__decimal@@Base+0xc87c>  // b.any
   1337c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   13380:	ldr	x8, [x8, #2568]
   13384:	cbz	x8, 133c8 <PyInit__decimal@@Base+0xc864>
   13388:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   1338c:	mov	w19, wzr
   13390:	add	x21, x21, #0xa28
   13394:	ldur	x1, [x21, #-8]
   13398:	mov	x0, x20
   1339c:	bl	6a70 <PyDict_GetItemWithError@plt>
   133a0:	cbz	x0, 133d0 <PyInit__decimal@@Base+0xc86c>
   133a4:	bl	68c0 <PyObject_IsTrue@plt>
   133a8:	tbnz	w0, #31, 133d8 <PyInit__decimal@@Base+0xc874>
   133ac:	cmp	w0, #0x1
   133b0:	b.ne	133bc <PyInit__decimal@@Base+0xc858>  // b.any
   133b4:	ldur	w8, [x21, #-16]
   133b8:	orr	w19, w8, w19
   133bc:	ldr	x8, [x21], #32
   133c0:	cbnz	x8, 13394 <PyInit__decimal@@Base+0xc830>
   133c4:	b	133fc <PyInit__decimal@@Base+0xc898>
   133c8:	mov	w19, wzr
   133cc:	b	133fc <PyInit__decimal@@Base+0xc898>
   133d0:	bl	67d0 <PyErr_Occurred@plt>
   133d4:	cbz	x0, 133e0 <PyInit__decimal@@Base+0xc87c>
   133d8:	mov	w19, #0x10000               	// #65536
   133dc:	b	133fc <PyInit__decimal@@Base+0xc898>
   133e0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   133e4:	ldr	x8, [x8, #3968]
   133e8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   133ec:	add	x1, x1, #0x62c
   133f0:	ldr	x0, [x8]
   133f4:	bl	6640 <PyErr_SetString@plt>
   133f8:	mov	w19, #0x8000                	// #32768
   133fc:	mov	w0, w19
   13400:	ldp	x20, x19, [sp, #32]
   13404:	ldr	x21, [sp, #16]
   13408:	ldp	x29, x30, [sp], #48
   1340c:	ret
   13410:	stp	x29, x30, [sp, #-48]!
   13414:	str	x21, [sp, #16]
   13418:	stp	x20, x19, [sp, #32]
   1341c:	mov	x29, sp
   13420:	str	wzr, [x29, #28]
   13424:	ldr	x8, [x1, #8]
   13428:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1342c:	add	x9, x9, #0x320
   13430:	mov	x19, x1
   13434:	cmp	x8, x9
   13438:	mov	x20, x0
   1343c:	b.eq	13454 <PyInit__decimal@@Base+0xc8f0>  // b.none
   13440:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13444:	add	x1, x1, #0x320
   13448:	mov	x0, x8
   1344c:	bl	69b0 <PyType_IsSubtype@plt>
   13450:	cbz	w0, 13504 <PyInit__decimal@@Base+0xc9a0>
   13454:	ldr	x8, [x19]
   13458:	add	x8, x8, #0x1
   1345c:	str	x8, [x19]
   13460:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13464:	add	x0, x0, #0x320
   13468:	bl	6940 <_PyObject_New@plt>
   1346c:	cbz	x0, 134e8 <PyInit__decimal@@Base+0xc984>
   13470:	mov	w8, #0x30                  	// #48
   13474:	mov	x21, x0
   13478:	strb	w8, [x0, #24]!
   1347c:	mov	x9, #0xffffffffffffffff    	// #-1
   13480:	mov	w10, #0x4                   	// #4
   13484:	add	x1, x19, #0x18
   13488:	add	x8, x0, #0x30
   1348c:	add	x2, x20, #0x10
   13490:	add	x3, x29, #0x1c
   13494:	stur	x9, [x0, #-8]
   13498:	stp	xzr, xzr, [x0, #8]
   1349c:	stp	xzr, x10, [x0, #24]
   134a0:	str	x8, [x0, #40]
   134a4:	bl	24a90 <PyInit__decimal@@Base+0x1df2c>
   134a8:	ldr	x8, [x19]
   134ac:	subs	x8, x8, #0x1
   134b0:	str	x8, [x19]
   134b4:	b.ne	134c0 <PyInit__decimal@@Base+0xc95c>  // b.any
   134b8:	mov	x0, x19
   134bc:	bl	65c0 <_Py_Dealloc@plt>
   134c0:	ldr	w1, [x29, #28]
   134c4:	mov	x0, x20
   134c8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   134cc:	cbz	w0, 13550 <PyInit__decimal@@Base+0xc9ec>
   134d0:	ldr	x8, [x21]
   134d4:	subs	x8, x8, #0x1
   134d8:	str	x8, [x21]
   134dc:	b.ne	1354c <PyInit__decimal@@Base+0xc9e8>  // b.any
   134e0:	mov	x0, x21
   134e4:	b	134fc <PyInit__decimal@@Base+0xc998>
   134e8:	ldr	x8, [x19]
   134ec:	subs	x8, x8, #0x1
   134f0:	str	x8, [x19]
   134f4:	b.ne	1354c <PyInit__decimal@@Base+0xc9e8>  // b.any
   134f8:	mov	x0, x19
   134fc:	bl	65c0 <_Py_Dealloc@plt>
   13500:	b	1354c <PyInit__decimal@@Base+0xc9e8>
   13504:	ldr	x8, [x19, #8]
   13508:	ldrb	w9, [x8, #171]
   1350c:	tbnz	w9, #0, 13530 <PyInit__decimal@@Base+0xc9cc>
   13510:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13514:	ldr	x9, [x9, #3936]
   13518:	ldr	x2, [x8, #24]
   1351c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13520:	add	x1, x1, #0xd63
   13524:	ldr	x0, [x9]
   13528:	bl	6a00 <PyErr_Format@plt>
   1352c:	b	1354c <PyInit__decimal@@Base+0xc9e8>
   13530:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13534:	add	x0, x0, #0x320
   13538:	mov	x1, x19
   1353c:	mov	x2, x20
   13540:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13544:	mov	x19, x0
   13548:	cbnz	x0, 13460 <PyInit__decimal@@Base+0xc8fc>
   1354c:	mov	x21, xzr
   13550:	mov	x0, x21
   13554:	ldp	x20, x19, [sp, #32]
   13558:	ldr	x21, [sp, #16]
   1355c:	ldp	x29, x30, [sp], #48
   13560:	ret
   13564:	stp	x29, x30, [sp, #-48]!
   13568:	str	x21, [sp, #16]
   1356c:	stp	x20, x19, [sp, #32]
   13570:	mov	x29, sp
   13574:	str	wzr, [x29, #28]
   13578:	ldr	x8, [x1, #8]
   1357c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13580:	add	x9, x9, #0x320
   13584:	mov	x19, x1
   13588:	cmp	x8, x9
   1358c:	mov	x20, x0
   13590:	b.eq	135a8 <PyInit__decimal@@Base+0xca44>  // b.none
   13594:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13598:	add	x1, x1, #0x320
   1359c:	mov	x0, x8
   135a0:	bl	69b0 <PyType_IsSubtype@plt>
   135a4:	cbz	w0, 13658 <PyInit__decimal@@Base+0xcaf4>
   135a8:	ldr	x8, [x19]
   135ac:	add	x8, x8, #0x1
   135b0:	str	x8, [x19]
   135b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   135b8:	add	x0, x0, #0x320
   135bc:	bl	6940 <_PyObject_New@plt>
   135c0:	cbz	x0, 1363c <PyInit__decimal@@Base+0xcad8>
   135c4:	mov	w8, #0x30                  	// #48
   135c8:	mov	x21, x0
   135cc:	strb	w8, [x0, #24]!
   135d0:	mov	x9, #0xffffffffffffffff    	// #-1
   135d4:	mov	w10, #0x4                   	// #4
   135d8:	add	x1, x19, #0x18
   135dc:	add	x8, x0, #0x30
   135e0:	add	x2, x20, #0x10
   135e4:	add	x3, x29, #0x1c
   135e8:	stur	x9, [x0, #-8]
   135ec:	stp	xzr, xzr, [x0, #8]
   135f0:	stp	xzr, x10, [x0, #24]
   135f4:	str	x8, [x0, #40]
   135f8:	bl	26af8 <PyInit__decimal@@Base+0x1ff94>
   135fc:	ldr	x8, [x19]
   13600:	subs	x8, x8, #0x1
   13604:	str	x8, [x19]
   13608:	b.ne	13614 <PyInit__decimal@@Base+0xcab0>  // b.any
   1360c:	mov	x0, x19
   13610:	bl	65c0 <_Py_Dealloc@plt>
   13614:	ldr	w1, [x29, #28]
   13618:	mov	x0, x20
   1361c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13620:	cbz	w0, 136a4 <PyInit__decimal@@Base+0xcb40>
   13624:	ldr	x8, [x21]
   13628:	subs	x8, x8, #0x1
   1362c:	str	x8, [x21]
   13630:	b.ne	136a0 <PyInit__decimal@@Base+0xcb3c>  // b.any
   13634:	mov	x0, x21
   13638:	b	13650 <PyInit__decimal@@Base+0xcaec>
   1363c:	ldr	x8, [x19]
   13640:	subs	x8, x8, #0x1
   13644:	str	x8, [x19]
   13648:	b.ne	136a0 <PyInit__decimal@@Base+0xcb3c>  // b.any
   1364c:	mov	x0, x19
   13650:	bl	65c0 <_Py_Dealloc@plt>
   13654:	b	136a0 <PyInit__decimal@@Base+0xcb3c>
   13658:	ldr	x8, [x19, #8]
   1365c:	ldrb	w9, [x8, #171]
   13660:	tbnz	w9, #0, 13684 <PyInit__decimal@@Base+0xcb20>
   13664:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13668:	ldr	x9, [x9, #3936]
   1366c:	ldr	x2, [x8, #24]
   13670:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13674:	add	x1, x1, #0xd63
   13678:	ldr	x0, [x9]
   1367c:	bl	6a00 <PyErr_Format@plt>
   13680:	b	136a0 <PyInit__decimal@@Base+0xcb3c>
   13684:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13688:	add	x0, x0, #0x320
   1368c:	mov	x1, x19
   13690:	mov	x2, x20
   13694:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13698:	mov	x19, x0
   1369c:	cbnz	x0, 135b4 <PyInit__decimal@@Base+0xca50>
   136a0:	mov	x21, xzr
   136a4:	mov	x0, x21
   136a8:	ldp	x20, x19, [sp, #32]
   136ac:	ldr	x21, [sp, #16]
   136b0:	ldp	x29, x30, [sp], #48
   136b4:	ret
   136b8:	stp	x29, x30, [sp, #-48]!
   136bc:	str	x21, [sp, #16]
   136c0:	stp	x20, x19, [sp, #32]
   136c4:	mov	x29, sp
   136c8:	str	wzr, [x29, #28]
   136cc:	ldr	x8, [x1, #8]
   136d0:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   136d4:	add	x9, x9, #0x320
   136d8:	mov	x19, x1
   136dc:	cmp	x8, x9
   136e0:	mov	x20, x0
   136e4:	b.eq	136fc <PyInit__decimal@@Base+0xcb98>  // b.none
   136e8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   136ec:	add	x1, x1, #0x320
   136f0:	mov	x0, x8
   136f4:	bl	69b0 <PyType_IsSubtype@plt>
   136f8:	cbz	w0, 137ac <PyInit__decimal@@Base+0xcc48>
   136fc:	ldr	x8, [x19]
   13700:	add	x8, x8, #0x1
   13704:	str	x8, [x19]
   13708:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1370c:	add	x0, x0, #0x320
   13710:	bl	6940 <_PyObject_New@plt>
   13714:	cbz	x0, 13790 <PyInit__decimal@@Base+0xcc2c>
   13718:	mov	w8, #0x30                  	// #48
   1371c:	mov	x21, x0
   13720:	strb	w8, [x0, #24]!
   13724:	mov	x9, #0xffffffffffffffff    	// #-1
   13728:	mov	w10, #0x4                   	// #4
   1372c:	add	x1, x19, #0x18
   13730:	add	x8, x0, #0x30
   13734:	add	x2, x20, #0x10
   13738:	add	x3, x29, #0x1c
   1373c:	stur	x9, [x0, #-8]
   13740:	stp	xzr, xzr, [x0, #8]
   13744:	stp	xzr, x10, [x0, #24]
   13748:	str	x8, [x0, #40]
   1374c:	bl	28510 <PyInit__decimal@@Base+0x219ac>
   13750:	ldr	x8, [x19]
   13754:	subs	x8, x8, #0x1
   13758:	str	x8, [x19]
   1375c:	b.ne	13768 <PyInit__decimal@@Base+0xcc04>  // b.any
   13760:	mov	x0, x19
   13764:	bl	65c0 <_Py_Dealloc@plt>
   13768:	ldr	w1, [x29, #28]
   1376c:	mov	x0, x20
   13770:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13774:	cbz	w0, 137f8 <PyInit__decimal@@Base+0xcc94>
   13778:	ldr	x8, [x21]
   1377c:	subs	x8, x8, #0x1
   13780:	str	x8, [x21]
   13784:	b.ne	137f4 <PyInit__decimal@@Base+0xcc90>  // b.any
   13788:	mov	x0, x21
   1378c:	b	137a4 <PyInit__decimal@@Base+0xcc40>
   13790:	ldr	x8, [x19]
   13794:	subs	x8, x8, #0x1
   13798:	str	x8, [x19]
   1379c:	b.ne	137f4 <PyInit__decimal@@Base+0xcc90>  // b.any
   137a0:	mov	x0, x19
   137a4:	bl	65c0 <_Py_Dealloc@plt>
   137a8:	b	137f4 <PyInit__decimal@@Base+0xcc90>
   137ac:	ldr	x8, [x19, #8]
   137b0:	ldrb	w9, [x8, #171]
   137b4:	tbnz	w9, #0, 137d8 <PyInit__decimal@@Base+0xcc74>
   137b8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   137bc:	ldr	x9, [x9, #3936]
   137c0:	ldr	x2, [x8, #24]
   137c4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   137c8:	add	x1, x1, #0xd63
   137cc:	ldr	x0, [x9]
   137d0:	bl	6a00 <PyErr_Format@plt>
   137d4:	b	137f4 <PyInit__decimal@@Base+0xcc90>
   137d8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   137dc:	add	x0, x0, #0x320
   137e0:	mov	x1, x19
   137e4:	mov	x2, x20
   137e8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   137ec:	mov	x19, x0
   137f0:	cbnz	x0, 13708 <PyInit__decimal@@Base+0xcba4>
   137f4:	mov	x21, xzr
   137f8:	mov	x0, x21
   137fc:	ldp	x20, x19, [sp, #32]
   13800:	ldr	x21, [sp, #16]
   13804:	ldp	x29, x30, [sp], #48
   13808:	ret
   1380c:	stp	x29, x30, [sp, #-48]!
   13810:	str	x21, [sp, #16]
   13814:	stp	x20, x19, [sp, #32]
   13818:	mov	x29, sp
   1381c:	str	wzr, [x29, #28]
   13820:	ldr	x8, [x1, #8]
   13824:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13828:	add	x9, x9, #0x320
   1382c:	mov	x19, x1
   13830:	cmp	x8, x9
   13834:	mov	x20, x0
   13838:	b.eq	13850 <PyInit__decimal@@Base+0xccec>  // b.none
   1383c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13840:	add	x1, x1, #0x320
   13844:	mov	x0, x8
   13848:	bl	69b0 <PyType_IsSubtype@plt>
   1384c:	cbz	w0, 13900 <PyInit__decimal@@Base+0xcd9c>
   13850:	ldr	x8, [x19]
   13854:	add	x8, x8, #0x1
   13858:	str	x8, [x19]
   1385c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13860:	add	x0, x0, #0x320
   13864:	bl	6940 <_PyObject_New@plt>
   13868:	cbz	x0, 138e4 <PyInit__decimal@@Base+0xcd80>
   1386c:	mov	w8, #0x30                  	// #48
   13870:	mov	x21, x0
   13874:	strb	w8, [x0, #24]!
   13878:	mov	x9, #0xffffffffffffffff    	// #-1
   1387c:	mov	w10, #0x4                   	// #4
   13880:	add	x1, x19, #0x18
   13884:	add	x8, x0, #0x30
   13888:	add	x2, x20, #0x10
   1388c:	add	x3, x29, #0x1c
   13890:	stur	x9, [x0, #-8]
   13894:	stp	xzr, xzr, [x0, #8]
   13898:	stp	xzr, x10, [x0, #24]
   1389c:	str	x8, [x0, #40]
   138a0:	bl	290d8 <PyInit__decimal@@Base+0x22574>
   138a4:	ldr	x8, [x19]
   138a8:	subs	x8, x8, #0x1
   138ac:	str	x8, [x19]
   138b0:	b.ne	138bc <PyInit__decimal@@Base+0xcd58>  // b.any
   138b4:	mov	x0, x19
   138b8:	bl	65c0 <_Py_Dealloc@plt>
   138bc:	ldr	w1, [x29, #28]
   138c0:	mov	x0, x20
   138c4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   138c8:	cbz	w0, 1394c <PyInit__decimal@@Base+0xcde8>
   138cc:	ldr	x8, [x21]
   138d0:	subs	x8, x8, #0x1
   138d4:	str	x8, [x21]
   138d8:	b.ne	13948 <PyInit__decimal@@Base+0xcde4>  // b.any
   138dc:	mov	x0, x21
   138e0:	b	138f8 <PyInit__decimal@@Base+0xcd94>
   138e4:	ldr	x8, [x19]
   138e8:	subs	x8, x8, #0x1
   138ec:	str	x8, [x19]
   138f0:	b.ne	13948 <PyInit__decimal@@Base+0xcde4>  // b.any
   138f4:	mov	x0, x19
   138f8:	bl	65c0 <_Py_Dealloc@plt>
   138fc:	b	13948 <PyInit__decimal@@Base+0xcde4>
   13900:	ldr	x8, [x19, #8]
   13904:	ldrb	w9, [x8, #171]
   13908:	tbnz	w9, #0, 1392c <PyInit__decimal@@Base+0xcdc8>
   1390c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13910:	ldr	x9, [x9, #3936]
   13914:	ldr	x2, [x8, #24]
   13918:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1391c:	add	x1, x1, #0xd63
   13920:	ldr	x0, [x9]
   13924:	bl	6a00 <PyErr_Format@plt>
   13928:	b	13948 <PyInit__decimal@@Base+0xcde4>
   1392c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13930:	add	x0, x0, #0x320
   13934:	mov	x1, x19
   13938:	mov	x2, x20
   1393c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13940:	mov	x19, x0
   13944:	cbnz	x0, 1385c <PyInit__decimal@@Base+0xccf8>
   13948:	mov	x21, xzr
   1394c:	mov	x0, x21
   13950:	ldp	x20, x19, [sp, #32]
   13954:	ldr	x21, [sp, #16]
   13958:	ldp	x29, x30, [sp], #48
   1395c:	ret
   13960:	stp	x29, x30, [sp, #-48]!
   13964:	str	x21, [sp, #16]
   13968:	stp	x20, x19, [sp, #32]
   1396c:	mov	x29, sp
   13970:	str	wzr, [x29, #28]
   13974:	ldr	x8, [x1, #8]
   13978:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1397c:	add	x9, x9, #0x320
   13980:	mov	x19, x1
   13984:	cmp	x8, x9
   13988:	mov	x20, x0
   1398c:	b.eq	139a4 <PyInit__decimal@@Base+0xce40>  // b.none
   13990:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13994:	add	x1, x1, #0x320
   13998:	mov	x0, x8
   1399c:	bl	69b0 <PyType_IsSubtype@plt>
   139a0:	cbz	w0, 13a54 <PyInit__decimal@@Base+0xcef0>
   139a4:	ldr	x8, [x19]
   139a8:	add	x8, x8, #0x1
   139ac:	str	x8, [x19]
   139b0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   139b4:	add	x0, x0, #0x320
   139b8:	bl	6940 <_PyObject_New@plt>
   139bc:	cbz	x0, 13a38 <PyInit__decimal@@Base+0xced4>
   139c0:	mov	w8, #0x30                  	// #48
   139c4:	mov	x21, x0
   139c8:	strb	w8, [x0, #24]!
   139cc:	mov	x9, #0xffffffffffffffff    	// #-1
   139d0:	mov	w10, #0x4                   	// #4
   139d4:	add	x1, x19, #0x18
   139d8:	add	x8, x0, #0x30
   139dc:	add	x2, x20, #0x10
   139e0:	add	x3, x29, #0x1c
   139e4:	stur	x9, [x0, #-8]
   139e8:	stp	xzr, xzr, [x0, #8]
   139ec:	stp	xzr, x10, [x0, #24]
   139f0:	str	x8, [x0, #40]
   139f4:	bl	24b1c <PyInit__decimal@@Base+0x1dfb8>
   139f8:	ldr	x8, [x19]
   139fc:	subs	x8, x8, #0x1
   13a00:	str	x8, [x19]
   13a04:	b.ne	13a10 <PyInit__decimal@@Base+0xceac>  // b.any
   13a08:	mov	x0, x19
   13a0c:	bl	65c0 <_Py_Dealloc@plt>
   13a10:	ldr	w1, [x29, #28]
   13a14:	mov	x0, x20
   13a18:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13a1c:	cbz	w0, 13aa0 <PyInit__decimal@@Base+0xcf3c>
   13a20:	ldr	x8, [x21]
   13a24:	subs	x8, x8, #0x1
   13a28:	str	x8, [x21]
   13a2c:	b.ne	13a9c <PyInit__decimal@@Base+0xcf38>  // b.any
   13a30:	mov	x0, x21
   13a34:	b	13a4c <PyInit__decimal@@Base+0xcee8>
   13a38:	ldr	x8, [x19]
   13a3c:	subs	x8, x8, #0x1
   13a40:	str	x8, [x19]
   13a44:	b.ne	13a9c <PyInit__decimal@@Base+0xcf38>  // b.any
   13a48:	mov	x0, x19
   13a4c:	bl	65c0 <_Py_Dealloc@plt>
   13a50:	b	13a9c <PyInit__decimal@@Base+0xcf38>
   13a54:	ldr	x8, [x19, #8]
   13a58:	ldrb	w9, [x8, #171]
   13a5c:	tbnz	w9, #0, 13a80 <PyInit__decimal@@Base+0xcf1c>
   13a60:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13a64:	ldr	x9, [x9, #3936]
   13a68:	ldr	x2, [x8, #24]
   13a6c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13a70:	add	x1, x1, #0xd63
   13a74:	ldr	x0, [x9]
   13a78:	bl	6a00 <PyErr_Format@plt>
   13a7c:	b	13a9c <PyInit__decimal@@Base+0xcf38>
   13a80:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13a84:	add	x0, x0, #0x320
   13a88:	mov	x1, x19
   13a8c:	mov	x2, x20
   13a90:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13a94:	mov	x19, x0
   13a98:	cbnz	x0, 139b0 <PyInit__decimal@@Base+0xce4c>
   13a9c:	mov	x21, xzr
   13aa0:	mov	x0, x21
   13aa4:	ldp	x20, x19, [sp, #32]
   13aa8:	ldr	x21, [sp, #16]
   13aac:	ldp	x29, x30, [sp], #48
   13ab0:	ret
   13ab4:	stp	x29, x30, [sp, #-48]!
   13ab8:	str	x21, [sp, #16]
   13abc:	stp	x20, x19, [sp, #32]
   13ac0:	mov	x29, sp
   13ac4:	str	wzr, [x29, #28]
   13ac8:	ldr	x8, [x1, #8]
   13acc:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13ad0:	add	x9, x9, #0x320
   13ad4:	mov	x19, x1
   13ad8:	cmp	x8, x9
   13adc:	mov	x20, x0
   13ae0:	b.eq	13af8 <PyInit__decimal@@Base+0xcf94>  // b.none
   13ae4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13ae8:	add	x1, x1, #0x320
   13aec:	mov	x0, x8
   13af0:	bl	69b0 <PyType_IsSubtype@plt>
   13af4:	cbz	w0, 13ba8 <PyInit__decimal@@Base+0xd044>
   13af8:	ldr	x8, [x19]
   13afc:	add	x8, x8, #0x1
   13b00:	str	x8, [x19]
   13b04:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13b08:	add	x0, x0, #0x320
   13b0c:	bl	6940 <_PyObject_New@plt>
   13b10:	cbz	x0, 13b8c <PyInit__decimal@@Base+0xd028>
   13b14:	mov	w8, #0x30                  	// #48
   13b18:	mov	x21, x0
   13b1c:	strb	w8, [x0, #24]!
   13b20:	mov	x9, #0xffffffffffffffff    	// #-1
   13b24:	mov	w10, #0x4                   	// #4
   13b28:	add	x1, x19, #0x18
   13b2c:	add	x8, x0, #0x30
   13b30:	add	x2, x20, #0x10
   13b34:	add	x3, x29, #0x1c
   13b38:	stur	x9, [x0, #-8]
   13b3c:	stp	xzr, xzr, [x0, #8]
   13b40:	stp	xzr, x10, [x0, #24]
   13b44:	str	x8, [x0, #40]
   13b48:	bl	29e98 <PyInit__decimal@@Base+0x23334>
   13b4c:	ldr	x8, [x19]
   13b50:	subs	x8, x8, #0x1
   13b54:	str	x8, [x19]
   13b58:	b.ne	13b64 <PyInit__decimal@@Base+0xd000>  // b.any
   13b5c:	mov	x0, x19
   13b60:	bl	65c0 <_Py_Dealloc@plt>
   13b64:	ldr	w1, [x29, #28]
   13b68:	mov	x0, x20
   13b6c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13b70:	cbz	w0, 13bf4 <PyInit__decimal@@Base+0xd090>
   13b74:	ldr	x8, [x21]
   13b78:	subs	x8, x8, #0x1
   13b7c:	str	x8, [x21]
   13b80:	b.ne	13bf0 <PyInit__decimal@@Base+0xd08c>  // b.any
   13b84:	mov	x0, x21
   13b88:	b	13ba0 <PyInit__decimal@@Base+0xd03c>
   13b8c:	ldr	x8, [x19]
   13b90:	subs	x8, x8, #0x1
   13b94:	str	x8, [x19]
   13b98:	b.ne	13bf0 <PyInit__decimal@@Base+0xd08c>  // b.any
   13b9c:	mov	x0, x19
   13ba0:	bl	65c0 <_Py_Dealloc@plt>
   13ba4:	b	13bf0 <PyInit__decimal@@Base+0xd08c>
   13ba8:	ldr	x8, [x19, #8]
   13bac:	ldrb	w9, [x8, #171]
   13bb0:	tbnz	w9, #0, 13bd4 <PyInit__decimal@@Base+0xd070>
   13bb4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13bb8:	ldr	x9, [x9, #3936]
   13bbc:	ldr	x2, [x8, #24]
   13bc0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13bc4:	add	x1, x1, #0xd63
   13bc8:	ldr	x0, [x9]
   13bcc:	bl	6a00 <PyErr_Format@plt>
   13bd0:	b	13bf0 <PyInit__decimal@@Base+0xd08c>
   13bd4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13bd8:	add	x0, x0, #0x320
   13bdc:	mov	x1, x19
   13be0:	mov	x2, x20
   13be4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13be8:	mov	x19, x0
   13bec:	cbnz	x0, 13b04 <PyInit__decimal@@Base+0xcfa0>
   13bf0:	mov	x21, xzr
   13bf4:	mov	x0, x21
   13bf8:	ldp	x20, x19, [sp, #32]
   13bfc:	ldr	x21, [sp, #16]
   13c00:	ldp	x29, x30, [sp], #48
   13c04:	ret
   13c08:	stp	x29, x30, [sp, #-48]!
   13c0c:	str	x21, [sp, #16]
   13c10:	stp	x20, x19, [sp, #32]
   13c14:	mov	x29, sp
   13c18:	str	wzr, [x29, #28]
   13c1c:	ldr	x8, [x1, #8]
   13c20:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13c24:	add	x9, x9, #0x320
   13c28:	mov	x19, x1
   13c2c:	cmp	x8, x9
   13c30:	mov	x20, x0
   13c34:	b.eq	13c4c <PyInit__decimal@@Base+0xd0e8>  // b.none
   13c38:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13c3c:	add	x1, x1, #0x320
   13c40:	mov	x0, x8
   13c44:	bl	69b0 <PyType_IsSubtype@plt>
   13c48:	cbz	w0, 13cfc <PyInit__decimal@@Base+0xd198>
   13c4c:	ldr	x8, [x19]
   13c50:	add	x8, x8, #0x1
   13c54:	str	x8, [x19]
   13c58:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13c5c:	add	x0, x0, #0x320
   13c60:	bl	6940 <_PyObject_New@plt>
   13c64:	cbz	x0, 13ce0 <PyInit__decimal@@Base+0xd17c>
   13c68:	mov	w8, #0x30                  	// #48
   13c6c:	mov	x21, x0
   13c70:	strb	w8, [x0, #24]!
   13c74:	mov	x9, #0xffffffffffffffff    	// #-1
   13c78:	mov	w10, #0x4                   	// #4
   13c7c:	add	x1, x19, #0x18
   13c80:	add	x8, x0, #0x30
   13c84:	add	x2, x20, #0x10
   13c88:	add	x3, x29, #0x1c
   13c8c:	stur	x9, [x0, #-8]
   13c90:	stp	xzr, xzr, [x0, #8]
   13c94:	stp	xzr, x10, [x0, #24]
   13c98:	str	x8, [x0, #40]
   13c9c:	bl	2a00c <PyInit__decimal@@Base+0x234a8>
   13ca0:	ldr	x8, [x19]
   13ca4:	subs	x8, x8, #0x1
   13ca8:	str	x8, [x19]
   13cac:	b.ne	13cb8 <PyInit__decimal@@Base+0xd154>  // b.any
   13cb0:	mov	x0, x19
   13cb4:	bl	65c0 <_Py_Dealloc@plt>
   13cb8:	ldr	w1, [x29, #28]
   13cbc:	mov	x0, x20
   13cc0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13cc4:	cbz	w0, 13d48 <PyInit__decimal@@Base+0xd1e4>
   13cc8:	ldr	x8, [x21]
   13ccc:	subs	x8, x8, #0x1
   13cd0:	str	x8, [x21]
   13cd4:	b.ne	13d44 <PyInit__decimal@@Base+0xd1e0>  // b.any
   13cd8:	mov	x0, x21
   13cdc:	b	13cf4 <PyInit__decimal@@Base+0xd190>
   13ce0:	ldr	x8, [x19]
   13ce4:	subs	x8, x8, #0x1
   13ce8:	str	x8, [x19]
   13cec:	b.ne	13d44 <PyInit__decimal@@Base+0xd1e0>  // b.any
   13cf0:	mov	x0, x19
   13cf4:	bl	65c0 <_Py_Dealloc@plt>
   13cf8:	b	13d44 <PyInit__decimal@@Base+0xd1e0>
   13cfc:	ldr	x8, [x19, #8]
   13d00:	ldrb	w9, [x8, #171]
   13d04:	tbnz	w9, #0, 13d28 <PyInit__decimal@@Base+0xd1c4>
   13d08:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13d0c:	ldr	x9, [x9, #3936]
   13d10:	ldr	x2, [x8, #24]
   13d14:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13d18:	add	x1, x1, #0xd63
   13d1c:	ldr	x0, [x9]
   13d20:	bl	6a00 <PyErr_Format@plt>
   13d24:	b	13d44 <PyInit__decimal@@Base+0xd1e0>
   13d28:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13d2c:	add	x0, x0, #0x320
   13d30:	mov	x1, x19
   13d34:	mov	x2, x20
   13d38:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13d3c:	mov	x19, x0
   13d40:	cbnz	x0, 13c58 <PyInit__decimal@@Base+0xd0f4>
   13d44:	mov	x21, xzr
   13d48:	mov	x0, x21
   13d4c:	ldp	x20, x19, [sp, #32]
   13d50:	ldr	x21, [sp, #16]
   13d54:	ldp	x29, x30, [sp], #48
   13d58:	ret
   13d5c:	stp	x29, x30, [sp, #-48]!
   13d60:	str	x21, [sp, #16]
   13d64:	stp	x20, x19, [sp, #32]
   13d68:	mov	x29, sp
   13d6c:	str	wzr, [x29, #28]
   13d70:	ldr	x8, [x1, #8]
   13d74:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13d78:	add	x9, x9, #0x320
   13d7c:	mov	x19, x1
   13d80:	cmp	x8, x9
   13d84:	mov	x20, x0
   13d88:	b.eq	13da0 <PyInit__decimal@@Base+0xd23c>  // b.none
   13d8c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13d90:	add	x1, x1, #0x320
   13d94:	mov	x0, x8
   13d98:	bl	69b0 <PyType_IsSubtype@plt>
   13d9c:	cbz	w0, 13e50 <PyInit__decimal@@Base+0xd2ec>
   13da0:	ldr	x8, [x19]
   13da4:	add	x8, x8, #0x1
   13da8:	str	x8, [x19]
   13dac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13db0:	add	x0, x0, #0x320
   13db4:	bl	6940 <_PyObject_New@plt>
   13db8:	cbz	x0, 13e34 <PyInit__decimal@@Base+0xd2d0>
   13dbc:	mov	w8, #0x30                  	// #48
   13dc0:	mov	x21, x0
   13dc4:	strb	w8, [x0, #24]!
   13dc8:	mov	x9, #0xffffffffffffffff    	// #-1
   13dcc:	mov	w10, #0x4                   	// #4
   13dd0:	add	x1, x19, #0x18
   13dd4:	add	x8, x0, #0x30
   13dd8:	add	x2, x20, #0x10
   13ddc:	add	x3, x29, #0x1c
   13de0:	stur	x9, [x0, #-8]
   13de4:	stp	xzr, xzr, [x0, #8]
   13de8:	stp	xzr, x10, [x0, #24]
   13dec:	str	x8, [x0, #40]
   13df0:	bl	2bdf0 <PyInit__decimal@@Base+0x2528c>
   13df4:	ldr	x8, [x19]
   13df8:	subs	x8, x8, #0x1
   13dfc:	str	x8, [x19]
   13e00:	b.ne	13e0c <PyInit__decimal@@Base+0xd2a8>  // b.any
   13e04:	mov	x0, x19
   13e08:	bl	65c0 <_Py_Dealloc@plt>
   13e0c:	ldr	w1, [x29, #28]
   13e10:	mov	x0, x20
   13e14:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13e18:	cbz	w0, 13e9c <PyInit__decimal@@Base+0xd338>
   13e1c:	ldr	x8, [x21]
   13e20:	subs	x8, x8, #0x1
   13e24:	str	x8, [x21]
   13e28:	b.ne	13e98 <PyInit__decimal@@Base+0xd334>  // b.any
   13e2c:	mov	x0, x21
   13e30:	b	13e48 <PyInit__decimal@@Base+0xd2e4>
   13e34:	ldr	x8, [x19]
   13e38:	subs	x8, x8, #0x1
   13e3c:	str	x8, [x19]
   13e40:	b.ne	13e98 <PyInit__decimal@@Base+0xd334>  // b.any
   13e44:	mov	x0, x19
   13e48:	bl	65c0 <_Py_Dealloc@plt>
   13e4c:	b	13e98 <PyInit__decimal@@Base+0xd334>
   13e50:	ldr	x8, [x19, #8]
   13e54:	ldrb	w9, [x8, #171]
   13e58:	tbnz	w9, #0, 13e7c <PyInit__decimal@@Base+0xd318>
   13e5c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13e60:	ldr	x9, [x9, #3936]
   13e64:	ldr	x2, [x8, #24]
   13e68:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13e6c:	add	x1, x1, #0xd63
   13e70:	ldr	x0, [x9]
   13e74:	bl	6a00 <PyErr_Format@plt>
   13e78:	b	13e98 <PyInit__decimal@@Base+0xd334>
   13e7c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13e80:	add	x0, x0, #0x320
   13e84:	mov	x1, x19
   13e88:	mov	x2, x20
   13e8c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13e90:	mov	x19, x0
   13e94:	cbnz	x0, 13dac <PyInit__decimal@@Base+0xd248>
   13e98:	mov	x21, xzr
   13e9c:	mov	x0, x21
   13ea0:	ldp	x20, x19, [sp, #32]
   13ea4:	ldr	x21, [sp, #16]
   13ea8:	ldp	x29, x30, [sp], #48
   13eac:	ret
   13eb0:	stp	x29, x30, [sp, #-48]!
   13eb4:	str	x21, [sp, #16]
   13eb8:	stp	x20, x19, [sp, #32]
   13ebc:	mov	x29, sp
   13ec0:	str	wzr, [x29, #28]
   13ec4:	ldr	x8, [x1, #8]
   13ec8:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   13ecc:	add	x9, x9, #0x320
   13ed0:	mov	x19, x1
   13ed4:	cmp	x8, x9
   13ed8:	mov	x20, x0
   13edc:	b.eq	13ef4 <PyInit__decimal@@Base+0xd390>  // b.none
   13ee0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   13ee4:	add	x1, x1, #0x320
   13ee8:	mov	x0, x8
   13eec:	bl	69b0 <PyType_IsSubtype@plt>
   13ef0:	cbz	w0, 13fa4 <PyInit__decimal@@Base+0xd440>
   13ef4:	ldr	x8, [x19]
   13ef8:	add	x8, x8, #0x1
   13efc:	str	x8, [x19]
   13f00:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13f04:	add	x0, x0, #0x320
   13f08:	bl	6940 <_PyObject_New@plt>
   13f0c:	cbz	x0, 13f88 <PyInit__decimal@@Base+0xd424>
   13f10:	mov	w8, #0x30                  	// #48
   13f14:	mov	x21, x0
   13f18:	strb	w8, [x0, #24]!
   13f1c:	mov	x9, #0xffffffffffffffff    	// #-1
   13f20:	mov	w10, #0x4                   	// #4
   13f24:	add	x1, x19, #0x18
   13f28:	add	x8, x0, #0x30
   13f2c:	add	x2, x20, #0x10
   13f30:	add	x3, x29, #0x1c
   13f34:	stur	x9, [x0, #-8]
   13f38:	stp	xzr, xzr, [x0, #8]
   13f3c:	stp	xzr, x10, [x0, #24]
   13f40:	str	x8, [x0, #40]
   13f44:	bl	24bf8 <PyInit__decimal@@Base+0x1e094>
   13f48:	ldr	x8, [x19]
   13f4c:	subs	x8, x8, #0x1
   13f50:	str	x8, [x19]
   13f54:	b.ne	13f60 <PyInit__decimal@@Base+0xd3fc>  // b.any
   13f58:	mov	x0, x19
   13f5c:	bl	65c0 <_Py_Dealloc@plt>
   13f60:	ldr	w1, [x29, #28]
   13f64:	mov	x0, x20
   13f68:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   13f6c:	cbz	w0, 13ff0 <PyInit__decimal@@Base+0xd48c>
   13f70:	ldr	x8, [x21]
   13f74:	subs	x8, x8, #0x1
   13f78:	str	x8, [x21]
   13f7c:	b.ne	13fec <PyInit__decimal@@Base+0xd488>  // b.any
   13f80:	mov	x0, x21
   13f84:	b	13f9c <PyInit__decimal@@Base+0xd438>
   13f88:	ldr	x8, [x19]
   13f8c:	subs	x8, x8, #0x1
   13f90:	str	x8, [x19]
   13f94:	b.ne	13fec <PyInit__decimal@@Base+0xd488>  // b.any
   13f98:	mov	x0, x19
   13f9c:	bl	65c0 <_Py_Dealloc@plt>
   13fa0:	b	13fec <PyInit__decimal@@Base+0xd488>
   13fa4:	ldr	x8, [x19, #8]
   13fa8:	ldrb	w9, [x8, #171]
   13fac:	tbnz	w9, #0, 13fd0 <PyInit__decimal@@Base+0xd46c>
   13fb0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   13fb4:	ldr	x9, [x9, #3936]
   13fb8:	ldr	x2, [x8, #24]
   13fbc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   13fc0:	add	x1, x1, #0xd63
   13fc4:	ldr	x0, [x9]
   13fc8:	bl	6a00 <PyErr_Format@plt>
   13fcc:	b	13fec <PyInit__decimal@@Base+0xd488>
   13fd0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   13fd4:	add	x0, x0, #0x320
   13fd8:	mov	x1, x19
   13fdc:	mov	x2, x20
   13fe0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   13fe4:	mov	x19, x0
   13fe8:	cbnz	x0, 13f00 <PyInit__decimal@@Base+0xd39c>
   13fec:	mov	x21, xzr
   13ff0:	mov	x0, x21
   13ff4:	ldp	x20, x19, [sp, #32]
   13ff8:	ldr	x21, [sp, #16]
   13ffc:	ldp	x29, x30, [sp], #48
   14000:	ret
   14004:	stp	x29, x30, [sp, #-48]!
   14008:	str	x21, [sp, #16]
   1400c:	stp	x20, x19, [sp, #32]
   14010:	mov	x29, sp
   14014:	str	wzr, [x29, #28]
   14018:	ldr	x8, [x1, #8]
   1401c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   14020:	add	x9, x9, #0x320
   14024:	mov	x19, x1
   14028:	cmp	x8, x9
   1402c:	mov	x20, x0
   14030:	b.eq	14048 <PyInit__decimal@@Base+0xd4e4>  // b.none
   14034:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14038:	add	x1, x1, #0x320
   1403c:	mov	x0, x8
   14040:	bl	69b0 <PyType_IsSubtype@plt>
   14044:	cbz	w0, 140f8 <PyInit__decimal@@Base+0xd594>
   14048:	ldr	x8, [x19]
   1404c:	add	x8, x8, #0x1
   14050:	str	x8, [x19]
   14054:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14058:	add	x0, x0, #0x320
   1405c:	bl	6940 <_PyObject_New@plt>
   14060:	cbz	x0, 140dc <PyInit__decimal@@Base+0xd578>
   14064:	mov	w8, #0x30                  	// #48
   14068:	mov	x21, x0
   1406c:	strb	w8, [x0, #24]!
   14070:	mov	x9, #0xffffffffffffffff    	// #-1
   14074:	mov	w10, #0x4                   	// #4
   14078:	add	x1, x19, #0x18
   1407c:	add	x8, x0, #0x30
   14080:	add	x2, x20, #0x10
   14084:	add	x3, x29, #0x1c
   14088:	stur	x9, [x0, #-8]
   1408c:	stp	xzr, xzr, [x0, #8]
   14090:	stp	xzr, x10, [x0, #24]
   14094:	str	x8, [x0, #40]
   14098:	bl	2b794 <PyInit__decimal@@Base+0x24c30>
   1409c:	ldr	x8, [x19]
   140a0:	subs	x8, x8, #0x1
   140a4:	str	x8, [x19]
   140a8:	b.ne	140b4 <PyInit__decimal@@Base+0xd550>  // b.any
   140ac:	mov	x0, x19
   140b0:	bl	65c0 <_Py_Dealloc@plt>
   140b4:	ldr	w1, [x29, #28]
   140b8:	mov	x0, x20
   140bc:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   140c0:	cbz	w0, 14144 <PyInit__decimal@@Base+0xd5e0>
   140c4:	ldr	x8, [x21]
   140c8:	subs	x8, x8, #0x1
   140cc:	str	x8, [x21]
   140d0:	b.ne	14140 <PyInit__decimal@@Base+0xd5dc>  // b.any
   140d4:	mov	x0, x21
   140d8:	b	140f0 <PyInit__decimal@@Base+0xd58c>
   140dc:	ldr	x8, [x19]
   140e0:	subs	x8, x8, #0x1
   140e4:	str	x8, [x19]
   140e8:	b.ne	14140 <PyInit__decimal@@Base+0xd5dc>  // b.any
   140ec:	mov	x0, x19
   140f0:	bl	65c0 <_Py_Dealloc@plt>
   140f4:	b	14140 <PyInit__decimal@@Base+0xd5dc>
   140f8:	ldr	x8, [x19, #8]
   140fc:	ldrb	w9, [x8, #171]
   14100:	tbnz	w9, #0, 14124 <PyInit__decimal@@Base+0xd5c0>
   14104:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14108:	ldr	x9, [x9, #3936]
   1410c:	ldr	x2, [x8, #24]
   14110:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14114:	add	x1, x1, #0xd63
   14118:	ldr	x0, [x9]
   1411c:	bl	6a00 <PyErr_Format@plt>
   14120:	b	14140 <PyInit__decimal@@Base+0xd5dc>
   14124:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14128:	add	x0, x0, #0x320
   1412c:	mov	x1, x19
   14130:	mov	x2, x20
   14134:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14138:	mov	x19, x0
   1413c:	cbnz	x0, 14054 <PyInit__decimal@@Base+0xd4f0>
   14140:	mov	x21, xzr
   14144:	mov	x0, x21
   14148:	ldp	x20, x19, [sp, #32]
   1414c:	ldr	x21, [sp, #16]
   14150:	ldp	x29, x30, [sp], #48
   14154:	ret
   14158:	stp	x29, x30, [sp, #-48]!
   1415c:	str	x21, [sp, #16]
   14160:	stp	x20, x19, [sp, #32]
   14164:	mov	x29, sp
   14168:	str	wzr, [x29, #28]
   1416c:	ldr	x8, [x1, #8]
   14170:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   14174:	add	x9, x9, #0x320
   14178:	mov	x19, x1
   1417c:	cmp	x8, x9
   14180:	mov	x20, x0
   14184:	b.eq	1419c <PyInit__decimal@@Base+0xd638>  // b.none
   14188:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1418c:	add	x1, x1, #0x320
   14190:	mov	x0, x8
   14194:	bl	69b0 <PyType_IsSubtype@plt>
   14198:	cbz	w0, 1424c <PyInit__decimal@@Base+0xd6e8>
   1419c:	ldr	x8, [x19]
   141a0:	add	x8, x8, #0x1
   141a4:	str	x8, [x19]
   141a8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   141ac:	add	x0, x0, #0x320
   141b0:	bl	6940 <_PyObject_New@plt>
   141b4:	cbz	x0, 14230 <PyInit__decimal@@Base+0xd6cc>
   141b8:	mov	w8, #0x30                  	// #48
   141bc:	mov	x21, x0
   141c0:	strb	w8, [x0, #24]!
   141c4:	mov	x9, #0xffffffffffffffff    	// #-1
   141c8:	mov	w10, #0x4                   	// #4
   141cc:	add	x1, x19, #0x18
   141d0:	add	x8, x0, #0x30
   141d4:	add	x2, x20, #0x10
   141d8:	add	x3, x29, #0x1c
   141dc:	stur	x9, [x0, #-8]
   141e0:	stp	xzr, xzr, [x0, #8]
   141e4:	stp	xzr, x10, [x0, #24]
   141e8:	str	x8, [x0, #40]
   141ec:	bl	2c7b4 <PyInit__decimal@@Base+0x25c50>
   141f0:	ldr	x8, [x19]
   141f4:	subs	x8, x8, #0x1
   141f8:	str	x8, [x19]
   141fc:	b.ne	14208 <PyInit__decimal@@Base+0xd6a4>  // b.any
   14200:	mov	x0, x19
   14204:	bl	65c0 <_Py_Dealloc@plt>
   14208:	ldr	w1, [x29, #28]
   1420c:	mov	x0, x20
   14210:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14214:	cbz	w0, 14298 <PyInit__decimal@@Base+0xd734>
   14218:	ldr	x8, [x21]
   1421c:	subs	x8, x8, #0x1
   14220:	str	x8, [x21]
   14224:	b.ne	14294 <PyInit__decimal@@Base+0xd730>  // b.any
   14228:	mov	x0, x21
   1422c:	b	14244 <PyInit__decimal@@Base+0xd6e0>
   14230:	ldr	x8, [x19]
   14234:	subs	x8, x8, #0x1
   14238:	str	x8, [x19]
   1423c:	b.ne	14294 <PyInit__decimal@@Base+0xd730>  // b.any
   14240:	mov	x0, x19
   14244:	bl	65c0 <_Py_Dealloc@plt>
   14248:	b	14294 <PyInit__decimal@@Base+0xd730>
   1424c:	ldr	x8, [x19, #8]
   14250:	ldrb	w9, [x8, #171]
   14254:	tbnz	w9, #0, 14278 <PyInit__decimal@@Base+0xd714>
   14258:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1425c:	ldr	x9, [x9, #3936]
   14260:	ldr	x2, [x8, #24]
   14264:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14268:	add	x1, x1, #0xd63
   1426c:	ldr	x0, [x9]
   14270:	bl	6a00 <PyErr_Format@plt>
   14274:	b	14294 <PyInit__decimal@@Base+0xd730>
   14278:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1427c:	add	x0, x0, #0x320
   14280:	mov	x1, x19
   14284:	mov	x2, x20
   14288:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1428c:	mov	x19, x0
   14290:	cbnz	x0, 141a8 <PyInit__decimal@@Base+0xd644>
   14294:	mov	x21, xzr
   14298:	mov	x0, x21
   1429c:	ldp	x20, x19, [sp, #32]
   142a0:	ldr	x21, [sp, #16]
   142a4:	ldp	x29, x30, [sp], #48
   142a8:	ret
   142ac:	stp	x29, x30, [sp, #-48]!
   142b0:	str	x21, [sp, #16]
   142b4:	stp	x20, x19, [sp, #32]
   142b8:	mov	x29, sp
   142bc:	str	wzr, [x29, #28]
   142c0:	ldr	x8, [x1, #8]
   142c4:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   142c8:	add	x9, x9, #0x320
   142cc:	mov	x19, x1
   142d0:	cmp	x8, x9
   142d4:	mov	x20, x0
   142d8:	b.eq	142f0 <PyInit__decimal@@Base+0xd78c>  // b.none
   142dc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   142e0:	add	x1, x1, #0x320
   142e4:	mov	x0, x8
   142e8:	bl	69b0 <PyType_IsSubtype@plt>
   142ec:	cbz	w0, 143a0 <PyInit__decimal@@Base+0xd83c>
   142f0:	ldr	x8, [x19]
   142f4:	add	x8, x8, #0x1
   142f8:	str	x8, [x19]
   142fc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14300:	add	x0, x0, #0x320
   14304:	bl	6940 <_PyObject_New@plt>
   14308:	cbz	x0, 14384 <PyInit__decimal@@Base+0xd820>
   1430c:	mov	w8, #0x30                  	// #48
   14310:	mov	x21, x0
   14314:	strb	w8, [x0, #24]!
   14318:	mov	x9, #0xffffffffffffffff    	// #-1
   1431c:	mov	w10, #0x4                   	// #4
   14320:	add	x1, x19, #0x18
   14324:	add	x8, x0, #0x30
   14328:	add	x2, x20, #0x10
   1432c:	add	x3, x29, #0x1c
   14330:	stur	x9, [x0, #-8]
   14334:	stp	xzr, xzr, [x0, #8]
   14338:	stp	xzr, x10, [x0, #24]
   1433c:	str	x8, [x0, #40]
   14340:	bl	2d454 <PyInit__decimal@@Base+0x268f0>
   14344:	ldr	x8, [x19]
   14348:	subs	x8, x8, #0x1
   1434c:	str	x8, [x19]
   14350:	b.ne	1435c <PyInit__decimal@@Base+0xd7f8>  // b.any
   14354:	mov	x0, x19
   14358:	bl	65c0 <_Py_Dealloc@plt>
   1435c:	ldr	w1, [x29, #28]
   14360:	mov	x0, x20
   14364:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14368:	cbz	w0, 143ec <PyInit__decimal@@Base+0xd888>
   1436c:	ldr	x8, [x21]
   14370:	subs	x8, x8, #0x1
   14374:	str	x8, [x21]
   14378:	b.ne	143e8 <PyInit__decimal@@Base+0xd884>  // b.any
   1437c:	mov	x0, x21
   14380:	b	14398 <PyInit__decimal@@Base+0xd834>
   14384:	ldr	x8, [x19]
   14388:	subs	x8, x8, #0x1
   1438c:	str	x8, [x19]
   14390:	b.ne	143e8 <PyInit__decimal@@Base+0xd884>  // b.any
   14394:	mov	x0, x19
   14398:	bl	65c0 <_Py_Dealloc@plt>
   1439c:	b	143e8 <PyInit__decimal@@Base+0xd884>
   143a0:	ldr	x8, [x19, #8]
   143a4:	ldrb	w9, [x8, #171]
   143a8:	tbnz	w9, #0, 143cc <PyInit__decimal@@Base+0xd868>
   143ac:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   143b0:	ldr	x9, [x9, #3936]
   143b4:	ldr	x2, [x8, #24]
   143b8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   143bc:	add	x1, x1, #0xd63
   143c0:	ldr	x0, [x9]
   143c4:	bl	6a00 <PyErr_Format@plt>
   143c8:	b	143e8 <PyInit__decimal@@Base+0xd884>
   143cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   143d0:	add	x0, x0, #0x320
   143d4:	mov	x1, x19
   143d8:	mov	x2, x20
   143dc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   143e0:	mov	x19, x0
   143e4:	cbnz	x0, 142fc <PyInit__decimal@@Base+0xd798>
   143e8:	mov	x21, xzr
   143ec:	mov	x0, x21
   143f0:	ldp	x20, x19, [sp, #32]
   143f4:	ldr	x21, [sp, #16]
   143f8:	ldp	x29, x30, [sp], #48
   143fc:	ret
   14400:	sub	sp, sp, #0x50
   14404:	stp	x29, x30, [sp, #32]
   14408:	stp	x22, x21, [sp, #48]
   1440c:	stp	x20, x19, [sp, #64]
   14410:	add	x29, sp, #0x20
   14414:	mov	x8, x1
   14418:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1441c:	mov	x19, x0
   14420:	add	x1, x1, #0x84a
   14424:	sub	x2, x29, #0x8
   14428:	add	x3, sp, #0x10
   1442c:	mov	x0, x8
   14430:	str	wzr, [sp, #12]
   14434:	bl	68d0 <PyArg_ParseTuple@plt>
   14438:	cbz	w0, 1461c <PyInit__decimal@@Base+0xdab8>
   1443c:	ldur	x20, [x29, #-8]
   14440:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   14444:	add	x22, x22, #0x320
   14448:	ldr	x0, [x20, #8]
   1444c:	cmp	x0, x22
   14450:	b.eq	14464 <PyInit__decimal@@Base+0xd900>  // b.none
   14454:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14458:	add	x1, x1, #0x320
   1445c:	bl	69b0 <PyType_IsSubtype@plt>
   14460:	cbz	w0, 14570 <PyInit__decimal@@Base+0xda0c>
   14464:	ldr	x8, [x20]
   14468:	add	x8, x8, #0x1
   1446c:	str	x8, [x20]
   14470:	ldr	x21, [sp, #16]
   14474:	ldr	x0, [x21, #8]
   14478:	cmp	x0, x22
   1447c:	b.eq	14490 <PyInit__decimal@@Base+0xd92c>  // b.none
   14480:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14484:	add	x1, x1, #0x320
   14488:	bl	69b0 <PyType_IsSubtype@plt>
   1448c:	cbz	w0, 1459c <PyInit__decimal@@Base+0xda38>
   14490:	ldr	x8, [x21]
   14494:	add	x8, x8, #0x1
   14498:	str	x8, [x21]
   1449c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   144a0:	add	x0, x0, #0x320
   144a4:	bl	6940 <_PyObject_New@plt>
   144a8:	cbz	x0, 14540 <PyInit__decimal@@Base+0xd9dc>
   144ac:	mov	w8, #0x30                  	// #48
   144b0:	mov	x22, x0
   144b4:	strb	w8, [x0, #24]!
   144b8:	mov	x9, #0xffffffffffffffff    	// #-1
   144bc:	mov	w10, #0x4                   	// #4
   144c0:	add	x1, x20, #0x18
   144c4:	add	x2, x21, #0x18
   144c8:	add	x8, x0, #0x30
   144cc:	add	x3, x19, #0x10
   144d0:	add	x4, sp, #0xc
   144d4:	stur	x9, [x0, #-8]
   144d8:	stp	xzr, xzr, [x0, #8]
   144dc:	stp	xzr, x10, [x0, #24]
   144e0:	str	x8, [x0, #40]
   144e4:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   144e8:	ldr	x8, [x20]
   144ec:	subs	x8, x8, #0x1
   144f0:	str	x8, [x20]
   144f4:	b.ne	14500 <PyInit__decimal@@Base+0xd99c>  // b.any
   144f8:	mov	x0, x20
   144fc:	bl	65c0 <_Py_Dealloc@plt>
   14500:	ldr	x8, [x21]
   14504:	subs	x8, x8, #0x1
   14508:	str	x8, [x21]
   1450c:	b.ne	14518 <PyInit__decimal@@Base+0xd9b4>  // b.any
   14510:	mov	x0, x21
   14514:	bl	65c0 <_Py_Dealloc@plt>
   14518:	ldr	w1, [sp, #12]
   1451c:	mov	x0, x19
   14520:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14524:	cbz	w0, 14620 <PyInit__decimal@@Base+0xdabc>
   14528:	ldr	x8, [x22]
   1452c:	subs	x8, x8, #0x1
   14530:	str	x8, [x22]
   14534:	b.ne	1461c <PyInit__decimal@@Base+0xdab8>  // b.any
   14538:	mov	x0, x22
   1453c:	b	14618 <PyInit__decimal@@Base+0xdab4>
   14540:	ldr	x8, [x20]
   14544:	subs	x8, x8, #0x1
   14548:	str	x8, [x20]
   1454c:	b.ne	14558 <PyInit__decimal@@Base+0xd9f4>  // b.any
   14550:	mov	x0, x20
   14554:	bl	65c0 <_Py_Dealloc@plt>
   14558:	ldr	x8, [x21]
   1455c:	subs	x8, x8, #0x1
   14560:	str	x8, [x21]
   14564:	b.ne	1461c <PyInit__decimal@@Base+0xdab8>  // b.any
   14568:	mov	x0, x21
   1456c:	b	14618 <PyInit__decimal@@Base+0xdab4>
   14570:	ldr	x8, [x20, #8]
   14574:	ldrb	w9, [x8, #171]
   14578:	tbnz	w9, #0, 145c8 <PyInit__decimal@@Base+0xda64>
   1457c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14580:	ldr	x9, [x9, #3936]
   14584:	ldr	x2, [x8, #24]
   14588:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1458c:	add	x1, x1, #0xd63
   14590:	ldr	x0, [x9]
   14594:	bl	6a00 <PyErr_Format@plt>
   14598:	b	1461c <PyInit__decimal@@Base+0xdab8>
   1459c:	ldr	x8, [x21, #8]
   145a0:	ldrb	w9, [x8, #171]
   145a4:	tbnz	w9, #0, 145e8 <PyInit__decimal@@Base+0xda84>
   145a8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   145ac:	ldr	x9, [x9, #3936]
   145b0:	ldr	x2, [x8, #24]
   145b4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   145b8:	add	x1, x1, #0xd63
   145bc:	ldr	x0, [x9]
   145c0:	bl	6a00 <PyErr_Format@plt>
   145c4:	b	14604 <PyInit__decimal@@Base+0xdaa0>
   145c8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   145cc:	add	x0, x0, #0x320
   145d0:	mov	x1, x20
   145d4:	mov	x2, x19
   145d8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   145dc:	mov	x20, x0
   145e0:	cbnz	x0, 14470 <PyInit__decimal@@Base+0xd90c>
   145e4:	b	1461c <PyInit__decimal@@Base+0xdab8>
   145e8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   145ec:	add	x0, x0, #0x320
   145f0:	mov	x1, x21
   145f4:	mov	x2, x19
   145f8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   145fc:	mov	x21, x0
   14600:	cbnz	x0, 1449c <PyInit__decimal@@Base+0xd938>
   14604:	ldr	x8, [x20]
   14608:	subs	x8, x8, #0x1
   1460c:	str	x8, [x20]
   14610:	b.ne	1461c <PyInit__decimal@@Base+0xdab8>  // b.any
   14614:	mov	x0, x20
   14618:	bl	65c0 <_Py_Dealloc@plt>
   1461c:	mov	x22, xzr
   14620:	mov	x0, x22
   14624:	ldp	x20, x19, [sp, #64]
   14628:	ldp	x22, x21, [sp, #48]
   1462c:	ldp	x29, x30, [sp, #32]
   14630:	add	sp, sp, #0x50
   14634:	ret
   14638:	sub	sp, sp, #0x50
   1463c:	stp	x29, x30, [sp, #32]
   14640:	stp	x22, x21, [sp, #48]
   14644:	stp	x20, x19, [sp, #64]
   14648:	add	x29, sp, #0x20
   1464c:	mov	x8, x1
   14650:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   14654:	mov	x19, x0
   14658:	add	x1, x1, #0x84a
   1465c:	sub	x2, x29, #0x8
   14660:	add	x3, sp, #0x10
   14664:	mov	x0, x8
   14668:	str	wzr, [sp, #12]
   1466c:	bl	68d0 <PyArg_ParseTuple@plt>
   14670:	cbz	w0, 14854 <PyInit__decimal@@Base+0xdcf0>
   14674:	ldur	x20, [x29, #-8]
   14678:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   1467c:	add	x22, x22, #0x320
   14680:	ldr	x0, [x20, #8]
   14684:	cmp	x0, x22
   14688:	b.eq	1469c <PyInit__decimal@@Base+0xdb38>  // b.none
   1468c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14690:	add	x1, x1, #0x320
   14694:	bl	69b0 <PyType_IsSubtype@plt>
   14698:	cbz	w0, 147a8 <PyInit__decimal@@Base+0xdc44>
   1469c:	ldr	x8, [x20]
   146a0:	add	x8, x8, #0x1
   146a4:	str	x8, [x20]
   146a8:	ldr	x21, [sp, #16]
   146ac:	ldr	x0, [x21, #8]
   146b0:	cmp	x0, x22
   146b4:	b.eq	146c8 <PyInit__decimal@@Base+0xdb64>  // b.none
   146b8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   146bc:	add	x1, x1, #0x320
   146c0:	bl	69b0 <PyType_IsSubtype@plt>
   146c4:	cbz	w0, 147d4 <PyInit__decimal@@Base+0xdc70>
   146c8:	ldr	x8, [x21]
   146cc:	add	x8, x8, #0x1
   146d0:	str	x8, [x21]
   146d4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   146d8:	add	x0, x0, #0x320
   146dc:	bl	6940 <_PyObject_New@plt>
   146e0:	cbz	x0, 14778 <PyInit__decimal@@Base+0xdc14>
   146e4:	mov	w8, #0x30                  	// #48
   146e8:	mov	x22, x0
   146ec:	strb	w8, [x0, #24]!
   146f0:	mov	x9, #0xffffffffffffffff    	// #-1
   146f4:	mov	w10, #0x4                   	// #4
   146f8:	add	x1, x20, #0x18
   146fc:	add	x2, x21, #0x18
   14700:	add	x8, x0, #0x30
   14704:	add	x3, x19, #0x10
   14708:	add	x4, sp, #0xc
   1470c:	stur	x9, [x0, #-8]
   14710:	stp	xzr, xzr, [x0, #8]
   14714:	stp	xzr, x10, [x0, #24]
   14718:	str	x8, [x0, #40]
   1471c:	bl	22270 <PyInit__decimal@@Base+0x1b70c>
   14720:	ldr	x8, [x20]
   14724:	subs	x8, x8, #0x1
   14728:	str	x8, [x20]
   1472c:	b.ne	14738 <PyInit__decimal@@Base+0xdbd4>  // b.any
   14730:	mov	x0, x20
   14734:	bl	65c0 <_Py_Dealloc@plt>
   14738:	ldr	x8, [x21]
   1473c:	subs	x8, x8, #0x1
   14740:	str	x8, [x21]
   14744:	b.ne	14750 <PyInit__decimal@@Base+0xdbec>  // b.any
   14748:	mov	x0, x21
   1474c:	bl	65c0 <_Py_Dealloc@plt>
   14750:	ldr	w1, [sp, #12]
   14754:	mov	x0, x19
   14758:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   1475c:	cbz	w0, 14858 <PyInit__decimal@@Base+0xdcf4>
   14760:	ldr	x8, [x22]
   14764:	subs	x8, x8, #0x1
   14768:	str	x8, [x22]
   1476c:	b.ne	14854 <PyInit__decimal@@Base+0xdcf0>  // b.any
   14770:	mov	x0, x22
   14774:	b	14850 <PyInit__decimal@@Base+0xdcec>
   14778:	ldr	x8, [x20]
   1477c:	subs	x8, x8, #0x1
   14780:	str	x8, [x20]
   14784:	b.ne	14790 <PyInit__decimal@@Base+0xdc2c>  // b.any
   14788:	mov	x0, x20
   1478c:	bl	65c0 <_Py_Dealloc@plt>
   14790:	ldr	x8, [x21]
   14794:	subs	x8, x8, #0x1
   14798:	str	x8, [x21]
   1479c:	b.ne	14854 <PyInit__decimal@@Base+0xdcf0>  // b.any
   147a0:	mov	x0, x21
   147a4:	b	14850 <PyInit__decimal@@Base+0xdcec>
   147a8:	ldr	x8, [x20, #8]
   147ac:	ldrb	w9, [x8, #171]
   147b0:	tbnz	w9, #0, 14800 <PyInit__decimal@@Base+0xdc9c>
   147b4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   147b8:	ldr	x9, [x9, #3936]
   147bc:	ldr	x2, [x8, #24]
   147c0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   147c4:	add	x1, x1, #0xd63
   147c8:	ldr	x0, [x9]
   147cc:	bl	6a00 <PyErr_Format@plt>
   147d0:	b	14854 <PyInit__decimal@@Base+0xdcf0>
   147d4:	ldr	x8, [x21, #8]
   147d8:	ldrb	w9, [x8, #171]
   147dc:	tbnz	w9, #0, 14820 <PyInit__decimal@@Base+0xdcbc>
   147e0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   147e4:	ldr	x9, [x9, #3936]
   147e8:	ldr	x2, [x8, #24]
   147ec:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   147f0:	add	x1, x1, #0xd63
   147f4:	ldr	x0, [x9]
   147f8:	bl	6a00 <PyErr_Format@plt>
   147fc:	b	1483c <PyInit__decimal@@Base+0xdcd8>
   14800:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14804:	add	x0, x0, #0x320
   14808:	mov	x1, x20
   1480c:	mov	x2, x19
   14810:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14814:	mov	x20, x0
   14818:	cbnz	x0, 146a8 <PyInit__decimal@@Base+0xdb44>
   1481c:	b	14854 <PyInit__decimal@@Base+0xdcf0>
   14820:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14824:	add	x0, x0, #0x320
   14828:	mov	x1, x21
   1482c:	mov	x2, x19
   14830:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14834:	mov	x21, x0
   14838:	cbnz	x0, 146d4 <PyInit__decimal@@Base+0xdb70>
   1483c:	ldr	x8, [x20]
   14840:	subs	x8, x8, #0x1
   14844:	str	x8, [x20]
   14848:	b.ne	14854 <PyInit__decimal@@Base+0xdcf0>  // b.any
   1484c:	mov	x0, x20
   14850:	bl	65c0 <_Py_Dealloc@plt>
   14854:	mov	x22, xzr
   14858:	mov	x0, x22
   1485c:	ldp	x20, x19, [sp, #64]
   14860:	ldp	x22, x21, [sp, #48]
   14864:	ldp	x29, x30, [sp, #32]
   14868:	add	sp, sp, #0x50
   1486c:	ret
   14870:	sub	sp, sp, #0x50
   14874:	stp	x29, x30, [sp, #32]
   14878:	stp	x22, x21, [sp, #48]
   1487c:	stp	x20, x19, [sp, #64]
   14880:	add	x29, sp, #0x20
   14884:	mov	x8, x1
   14888:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1488c:	mov	x19, x0
   14890:	add	x1, x1, #0x84a
   14894:	sub	x2, x29, #0x8
   14898:	add	x3, sp, #0x10
   1489c:	mov	x0, x8
   148a0:	str	wzr, [sp, #12]
   148a4:	bl	68d0 <PyArg_ParseTuple@plt>
   148a8:	cbz	w0, 14a8c <PyInit__decimal@@Base+0xdf28>
   148ac:	ldur	x20, [x29, #-8]
   148b0:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   148b4:	add	x22, x22, #0x320
   148b8:	ldr	x0, [x20, #8]
   148bc:	cmp	x0, x22
   148c0:	b.eq	148d4 <PyInit__decimal@@Base+0xdd70>  // b.none
   148c4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   148c8:	add	x1, x1, #0x320
   148cc:	bl	69b0 <PyType_IsSubtype@plt>
   148d0:	cbz	w0, 149e0 <PyInit__decimal@@Base+0xde7c>
   148d4:	ldr	x8, [x20]
   148d8:	add	x8, x8, #0x1
   148dc:	str	x8, [x20]
   148e0:	ldr	x21, [sp, #16]
   148e4:	ldr	x0, [x21, #8]
   148e8:	cmp	x0, x22
   148ec:	b.eq	14900 <PyInit__decimal@@Base+0xdd9c>  // b.none
   148f0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   148f4:	add	x1, x1, #0x320
   148f8:	bl	69b0 <PyType_IsSubtype@plt>
   148fc:	cbz	w0, 14a0c <PyInit__decimal@@Base+0xdea8>
   14900:	ldr	x8, [x21]
   14904:	add	x8, x8, #0x1
   14908:	str	x8, [x21]
   1490c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14910:	add	x0, x0, #0x320
   14914:	bl	6940 <_PyObject_New@plt>
   14918:	cbz	x0, 149b0 <PyInit__decimal@@Base+0xde4c>
   1491c:	mov	w8, #0x30                  	// #48
   14920:	mov	x22, x0
   14924:	strb	w8, [x0, #24]!
   14928:	mov	x9, #0xffffffffffffffff    	// #-1
   1492c:	mov	w10, #0x4                   	// #4
   14930:	add	x1, x20, #0x18
   14934:	add	x2, x21, #0x18
   14938:	add	x8, x0, #0x30
   1493c:	add	x3, x19, #0x10
   14940:	add	x4, sp, #0xc
   14944:	stur	x9, [x0, #-8]
   14948:	stp	xzr, xzr, [x0, #8]
   1494c:	stp	xzr, x10, [x0, #24]
   14950:	str	x8, [x0, #40]
   14954:	bl	222fc <PyInit__decimal@@Base+0x1b798>
   14958:	ldr	x8, [x20]
   1495c:	subs	x8, x8, #0x1
   14960:	str	x8, [x20]
   14964:	b.ne	14970 <PyInit__decimal@@Base+0xde0c>  // b.any
   14968:	mov	x0, x20
   1496c:	bl	65c0 <_Py_Dealloc@plt>
   14970:	ldr	x8, [x21]
   14974:	subs	x8, x8, #0x1
   14978:	str	x8, [x21]
   1497c:	b.ne	14988 <PyInit__decimal@@Base+0xde24>  // b.any
   14980:	mov	x0, x21
   14984:	bl	65c0 <_Py_Dealloc@plt>
   14988:	ldr	w1, [sp, #12]
   1498c:	mov	x0, x19
   14990:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14994:	cbz	w0, 14a90 <PyInit__decimal@@Base+0xdf2c>
   14998:	ldr	x8, [x22]
   1499c:	subs	x8, x8, #0x1
   149a0:	str	x8, [x22]
   149a4:	b.ne	14a8c <PyInit__decimal@@Base+0xdf28>  // b.any
   149a8:	mov	x0, x22
   149ac:	b	14a88 <PyInit__decimal@@Base+0xdf24>
   149b0:	ldr	x8, [x20]
   149b4:	subs	x8, x8, #0x1
   149b8:	str	x8, [x20]
   149bc:	b.ne	149c8 <PyInit__decimal@@Base+0xde64>  // b.any
   149c0:	mov	x0, x20
   149c4:	bl	65c0 <_Py_Dealloc@plt>
   149c8:	ldr	x8, [x21]
   149cc:	subs	x8, x8, #0x1
   149d0:	str	x8, [x21]
   149d4:	b.ne	14a8c <PyInit__decimal@@Base+0xdf28>  // b.any
   149d8:	mov	x0, x21
   149dc:	b	14a88 <PyInit__decimal@@Base+0xdf24>
   149e0:	ldr	x8, [x20, #8]
   149e4:	ldrb	w9, [x8, #171]
   149e8:	tbnz	w9, #0, 14a38 <PyInit__decimal@@Base+0xded4>
   149ec:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   149f0:	ldr	x9, [x9, #3936]
   149f4:	ldr	x2, [x8, #24]
   149f8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   149fc:	add	x1, x1, #0xd63
   14a00:	ldr	x0, [x9]
   14a04:	bl	6a00 <PyErr_Format@plt>
   14a08:	b	14a8c <PyInit__decimal@@Base+0xdf28>
   14a0c:	ldr	x8, [x21, #8]
   14a10:	ldrb	w9, [x8, #171]
   14a14:	tbnz	w9, #0, 14a58 <PyInit__decimal@@Base+0xdef4>
   14a18:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14a1c:	ldr	x9, [x9, #3936]
   14a20:	ldr	x2, [x8, #24]
   14a24:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14a28:	add	x1, x1, #0xd63
   14a2c:	ldr	x0, [x9]
   14a30:	bl	6a00 <PyErr_Format@plt>
   14a34:	b	14a74 <PyInit__decimal@@Base+0xdf10>
   14a38:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14a3c:	add	x0, x0, #0x320
   14a40:	mov	x1, x20
   14a44:	mov	x2, x19
   14a48:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14a4c:	mov	x20, x0
   14a50:	cbnz	x0, 148e0 <PyInit__decimal@@Base+0xdd7c>
   14a54:	b	14a8c <PyInit__decimal@@Base+0xdf28>
   14a58:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14a5c:	add	x0, x0, #0x320
   14a60:	mov	x1, x21
   14a64:	mov	x2, x19
   14a68:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14a6c:	mov	x21, x0
   14a70:	cbnz	x0, 1490c <PyInit__decimal@@Base+0xdda8>
   14a74:	ldr	x8, [x20]
   14a78:	subs	x8, x8, #0x1
   14a7c:	str	x8, [x20]
   14a80:	b.ne	14a8c <PyInit__decimal@@Base+0xdf28>  // b.any
   14a84:	mov	x0, x20
   14a88:	bl	65c0 <_Py_Dealloc@plt>
   14a8c:	mov	x22, xzr
   14a90:	mov	x0, x22
   14a94:	ldp	x20, x19, [sp, #64]
   14a98:	ldp	x22, x21, [sp, #48]
   14a9c:	ldp	x29, x30, [sp, #32]
   14aa0:	add	sp, sp, #0x50
   14aa4:	ret
   14aa8:	sub	sp, sp, #0x50
   14aac:	stp	x29, x30, [sp, #32]
   14ab0:	stp	x22, x21, [sp, #48]
   14ab4:	stp	x20, x19, [sp, #64]
   14ab8:	add	x29, sp, #0x20
   14abc:	mov	x8, x1
   14ac0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   14ac4:	mov	x19, x0
   14ac8:	add	x1, x1, #0x84a
   14acc:	sub	x2, x29, #0x8
   14ad0:	add	x3, sp, #0x10
   14ad4:	mov	x0, x8
   14ad8:	str	wzr, [sp, #12]
   14adc:	bl	68d0 <PyArg_ParseTuple@plt>
   14ae0:	cbz	w0, 14cc4 <PyInit__decimal@@Base+0xe160>
   14ae4:	ldur	x20, [x29, #-8]
   14ae8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   14aec:	add	x22, x22, #0x320
   14af0:	ldr	x0, [x20, #8]
   14af4:	cmp	x0, x22
   14af8:	b.eq	14b0c <PyInit__decimal@@Base+0xdfa8>  // b.none
   14afc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14b00:	add	x1, x1, #0x320
   14b04:	bl	69b0 <PyType_IsSubtype@plt>
   14b08:	cbz	w0, 14c18 <PyInit__decimal@@Base+0xe0b4>
   14b0c:	ldr	x8, [x20]
   14b10:	add	x8, x8, #0x1
   14b14:	str	x8, [x20]
   14b18:	ldr	x21, [sp, #16]
   14b1c:	ldr	x0, [x21, #8]
   14b20:	cmp	x0, x22
   14b24:	b.eq	14b38 <PyInit__decimal@@Base+0xdfd4>  // b.none
   14b28:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14b2c:	add	x1, x1, #0x320
   14b30:	bl	69b0 <PyType_IsSubtype@plt>
   14b34:	cbz	w0, 14c44 <PyInit__decimal@@Base+0xe0e0>
   14b38:	ldr	x8, [x21]
   14b3c:	add	x8, x8, #0x1
   14b40:	str	x8, [x21]
   14b44:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14b48:	add	x0, x0, #0x320
   14b4c:	bl	6940 <_PyObject_New@plt>
   14b50:	cbz	x0, 14be8 <PyInit__decimal@@Base+0xe084>
   14b54:	mov	w8, #0x30                  	// #48
   14b58:	mov	x22, x0
   14b5c:	strb	w8, [x0, #24]!
   14b60:	mov	x9, #0xffffffffffffffff    	// #-1
   14b64:	mov	w10, #0x4                   	// #4
   14b68:	add	x1, x20, #0x18
   14b6c:	add	x2, x21, #0x18
   14b70:	add	x8, x0, #0x30
   14b74:	add	x3, x19, #0x10
   14b78:	add	x4, sp, #0xc
   14b7c:	stur	x9, [x0, #-8]
   14b80:	stp	xzr, xzr, [x0, #8]
   14b84:	stp	xzr, x10, [x0, #24]
   14b88:	str	x8, [x0, #40]
   14b8c:	bl	25780 <PyInit__decimal@@Base+0x1ec1c>
   14b90:	ldr	x8, [x20]
   14b94:	subs	x8, x8, #0x1
   14b98:	str	x8, [x20]
   14b9c:	b.ne	14ba8 <PyInit__decimal@@Base+0xe044>  // b.any
   14ba0:	mov	x0, x20
   14ba4:	bl	65c0 <_Py_Dealloc@plt>
   14ba8:	ldr	x8, [x21]
   14bac:	subs	x8, x8, #0x1
   14bb0:	str	x8, [x21]
   14bb4:	b.ne	14bc0 <PyInit__decimal@@Base+0xe05c>  // b.any
   14bb8:	mov	x0, x21
   14bbc:	bl	65c0 <_Py_Dealloc@plt>
   14bc0:	ldr	w1, [sp, #12]
   14bc4:	mov	x0, x19
   14bc8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14bcc:	cbz	w0, 14cc8 <PyInit__decimal@@Base+0xe164>
   14bd0:	ldr	x8, [x22]
   14bd4:	subs	x8, x8, #0x1
   14bd8:	str	x8, [x22]
   14bdc:	b.ne	14cc4 <PyInit__decimal@@Base+0xe160>  // b.any
   14be0:	mov	x0, x22
   14be4:	b	14cc0 <PyInit__decimal@@Base+0xe15c>
   14be8:	ldr	x8, [x20]
   14bec:	subs	x8, x8, #0x1
   14bf0:	str	x8, [x20]
   14bf4:	b.ne	14c00 <PyInit__decimal@@Base+0xe09c>  // b.any
   14bf8:	mov	x0, x20
   14bfc:	bl	65c0 <_Py_Dealloc@plt>
   14c00:	ldr	x8, [x21]
   14c04:	subs	x8, x8, #0x1
   14c08:	str	x8, [x21]
   14c0c:	b.ne	14cc4 <PyInit__decimal@@Base+0xe160>  // b.any
   14c10:	mov	x0, x21
   14c14:	b	14cc0 <PyInit__decimal@@Base+0xe15c>
   14c18:	ldr	x8, [x20, #8]
   14c1c:	ldrb	w9, [x8, #171]
   14c20:	tbnz	w9, #0, 14c70 <PyInit__decimal@@Base+0xe10c>
   14c24:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14c28:	ldr	x9, [x9, #3936]
   14c2c:	ldr	x2, [x8, #24]
   14c30:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14c34:	add	x1, x1, #0xd63
   14c38:	ldr	x0, [x9]
   14c3c:	bl	6a00 <PyErr_Format@plt>
   14c40:	b	14cc4 <PyInit__decimal@@Base+0xe160>
   14c44:	ldr	x8, [x21, #8]
   14c48:	ldrb	w9, [x8, #171]
   14c4c:	tbnz	w9, #0, 14c90 <PyInit__decimal@@Base+0xe12c>
   14c50:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14c54:	ldr	x9, [x9, #3936]
   14c58:	ldr	x2, [x8, #24]
   14c5c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14c60:	add	x1, x1, #0xd63
   14c64:	ldr	x0, [x9]
   14c68:	bl	6a00 <PyErr_Format@plt>
   14c6c:	b	14cac <PyInit__decimal@@Base+0xe148>
   14c70:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14c74:	add	x0, x0, #0x320
   14c78:	mov	x1, x20
   14c7c:	mov	x2, x19
   14c80:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14c84:	mov	x20, x0
   14c88:	cbnz	x0, 14b18 <PyInit__decimal@@Base+0xdfb4>
   14c8c:	b	14cc4 <PyInit__decimal@@Base+0xe160>
   14c90:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14c94:	add	x0, x0, #0x320
   14c98:	mov	x1, x21
   14c9c:	mov	x2, x19
   14ca0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14ca4:	mov	x21, x0
   14ca8:	cbnz	x0, 14b44 <PyInit__decimal@@Base+0xdfe0>
   14cac:	ldr	x8, [x20]
   14cb0:	subs	x8, x8, #0x1
   14cb4:	str	x8, [x20]
   14cb8:	b.ne	14cc4 <PyInit__decimal@@Base+0xe160>  // b.any
   14cbc:	mov	x0, x20
   14cc0:	bl	65c0 <_Py_Dealloc@plt>
   14cc4:	mov	x22, xzr
   14cc8:	mov	x0, x22
   14ccc:	ldp	x20, x19, [sp, #64]
   14cd0:	ldp	x22, x21, [sp, #48]
   14cd4:	ldp	x29, x30, [sp, #32]
   14cd8:	add	sp, sp, #0x50
   14cdc:	ret
   14ce0:	sub	sp, sp, #0x50
   14ce4:	stp	x29, x30, [sp, #32]
   14ce8:	stp	x22, x21, [sp, #48]
   14cec:	stp	x20, x19, [sp, #64]
   14cf0:	add	x29, sp, #0x20
   14cf4:	mov	x8, x1
   14cf8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   14cfc:	mov	x19, x0
   14d00:	add	x1, x1, #0x84a
   14d04:	sub	x2, x29, #0x8
   14d08:	add	x3, sp, #0x10
   14d0c:	mov	x0, x8
   14d10:	str	wzr, [sp, #12]
   14d14:	bl	68d0 <PyArg_ParseTuple@plt>
   14d18:	cbz	w0, 14efc <PyInit__decimal@@Base+0xe398>
   14d1c:	ldur	x20, [x29, #-8]
   14d20:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   14d24:	add	x22, x22, #0x320
   14d28:	ldr	x0, [x20, #8]
   14d2c:	cmp	x0, x22
   14d30:	b.eq	14d44 <PyInit__decimal@@Base+0xe1e0>  // b.none
   14d34:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14d38:	add	x1, x1, #0x320
   14d3c:	bl	69b0 <PyType_IsSubtype@plt>
   14d40:	cbz	w0, 14e50 <PyInit__decimal@@Base+0xe2ec>
   14d44:	ldr	x8, [x20]
   14d48:	add	x8, x8, #0x1
   14d4c:	str	x8, [x20]
   14d50:	ldr	x21, [sp, #16]
   14d54:	ldr	x0, [x21, #8]
   14d58:	cmp	x0, x22
   14d5c:	b.eq	14d70 <PyInit__decimal@@Base+0xe20c>  // b.none
   14d60:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14d64:	add	x1, x1, #0x320
   14d68:	bl	69b0 <PyType_IsSubtype@plt>
   14d6c:	cbz	w0, 14e7c <PyInit__decimal@@Base+0xe318>
   14d70:	ldr	x8, [x21]
   14d74:	add	x8, x8, #0x1
   14d78:	str	x8, [x21]
   14d7c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14d80:	add	x0, x0, #0x320
   14d84:	bl	6940 <_PyObject_New@plt>
   14d88:	cbz	x0, 14e20 <PyInit__decimal@@Base+0xe2bc>
   14d8c:	mov	w8, #0x30                  	// #48
   14d90:	mov	x22, x0
   14d94:	strb	w8, [x0, #24]!
   14d98:	mov	x9, #0xffffffffffffffff    	// #-1
   14d9c:	mov	w10, #0x4                   	// #4
   14da0:	add	x1, x20, #0x18
   14da4:	add	x2, x21, #0x18
   14da8:	add	x8, x0, #0x30
   14dac:	add	x3, x19, #0x10
   14db0:	add	x4, sp, #0xc
   14db4:	stur	x9, [x0, #-8]
   14db8:	stp	xzr, xzr, [x0, #8]
   14dbc:	stp	xzr, x10, [x0, #24]
   14dc0:	str	x8, [x0, #40]
   14dc4:	bl	26784 <PyInit__decimal@@Base+0x1fc20>
   14dc8:	ldr	x8, [x20]
   14dcc:	subs	x8, x8, #0x1
   14dd0:	str	x8, [x20]
   14dd4:	b.ne	14de0 <PyInit__decimal@@Base+0xe27c>  // b.any
   14dd8:	mov	x0, x20
   14ddc:	bl	65c0 <_Py_Dealloc@plt>
   14de0:	ldr	x8, [x21]
   14de4:	subs	x8, x8, #0x1
   14de8:	str	x8, [x21]
   14dec:	b.ne	14df8 <PyInit__decimal@@Base+0xe294>  // b.any
   14df0:	mov	x0, x21
   14df4:	bl	65c0 <_Py_Dealloc@plt>
   14df8:	ldr	w1, [sp, #12]
   14dfc:	mov	x0, x19
   14e00:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   14e04:	cbz	w0, 14f00 <PyInit__decimal@@Base+0xe39c>
   14e08:	ldr	x8, [x22]
   14e0c:	subs	x8, x8, #0x1
   14e10:	str	x8, [x22]
   14e14:	b.ne	14efc <PyInit__decimal@@Base+0xe398>  // b.any
   14e18:	mov	x0, x22
   14e1c:	b	14ef8 <PyInit__decimal@@Base+0xe394>
   14e20:	ldr	x8, [x20]
   14e24:	subs	x8, x8, #0x1
   14e28:	str	x8, [x20]
   14e2c:	b.ne	14e38 <PyInit__decimal@@Base+0xe2d4>  // b.any
   14e30:	mov	x0, x20
   14e34:	bl	65c0 <_Py_Dealloc@plt>
   14e38:	ldr	x8, [x21]
   14e3c:	subs	x8, x8, #0x1
   14e40:	str	x8, [x21]
   14e44:	b.ne	14efc <PyInit__decimal@@Base+0xe398>  // b.any
   14e48:	mov	x0, x21
   14e4c:	b	14ef8 <PyInit__decimal@@Base+0xe394>
   14e50:	ldr	x8, [x20, #8]
   14e54:	ldrb	w9, [x8, #171]
   14e58:	tbnz	w9, #0, 14ea8 <PyInit__decimal@@Base+0xe344>
   14e5c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14e60:	ldr	x9, [x9, #3936]
   14e64:	ldr	x2, [x8, #24]
   14e68:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14e6c:	add	x1, x1, #0xd63
   14e70:	ldr	x0, [x9]
   14e74:	bl	6a00 <PyErr_Format@plt>
   14e78:	b	14efc <PyInit__decimal@@Base+0xe398>
   14e7c:	ldr	x8, [x21, #8]
   14e80:	ldrb	w9, [x8, #171]
   14e84:	tbnz	w9, #0, 14ec8 <PyInit__decimal@@Base+0xe364>
   14e88:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   14e8c:	ldr	x9, [x9, #3936]
   14e90:	ldr	x2, [x8, #24]
   14e94:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   14e98:	add	x1, x1, #0xd63
   14e9c:	ldr	x0, [x9]
   14ea0:	bl	6a00 <PyErr_Format@plt>
   14ea4:	b	14ee4 <PyInit__decimal@@Base+0xe380>
   14ea8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14eac:	add	x0, x0, #0x320
   14eb0:	mov	x1, x20
   14eb4:	mov	x2, x19
   14eb8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14ebc:	mov	x20, x0
   14ec0:	cbnz	x0, 14d50 <PyInit__decimal@@Base+0xe1ec>
   14ec4:	b	14efc <PyInit__decimal@@Base+0xe398>
   14ec8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14ecc:	add	x0, x0, #0x320
   14ed0:	mov	x1, x21
   14ed4:	mov	x2, x19
   14ed8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   14edc:	mov	x21, x0
   14ee0:	cbnz	x0, 14d7c <PyInit__decimal@@Base+0xe218>
   14ee4:	ldr	x8, [x20]
   14ee8:	subs	x8, x8, #0x1
   14eec:	str	x8, [x20]
   14ef0:	b.ne	14efc <PyInit__decimal@@Base+0xe398>  // b.any
   14ef4:	mov	x0, x20
   14ef8:	bl	65c0 <_Py_Dealloc@plt>
   14efc:	mov	x22, xzr
   14f00:	mov	x0, x22
   14f04:	ldp	x20, x19, [sp, #64]
   14f08:	ldp	x22, x21, [sp, #48]
   14f0c:	ldp	x29, x30, [sp, #32]
   14f10:	add	sp, sp, #0x50
   14f14:	ret
   14f18:	sub	sp, sp, #0x70
   14f1c:	stp	x29, x30, [sp, #32]
   14f20:	stp	x26, x25, [sp, #48]
   14f24:	stp	x24, x23, [sp, #64]
   14f28:	stp	x22, x21, [sp, #80]
   14f2c:	stp	x20, x19, [sp, #96]
   14f30:	add	x29, sp, #0x20
   14f34:	mov	x8, x1
   14f38:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   14f3c:	mov	x19, x0
   14f40:	add	x1, x1, #0x84a
   14f44:	sub	x2, x29, #0x8
   14f48:	add	x3, sp, #0x10
   14f4c:	mov	x0, x8
   14f50:	str	wzr, [sp, #12]
   14f54:	bl	68d0 <PyArg_ParseTuple@plt>
   14f58:	cbz	w0, 1520c <PyInit__decimal@@Base+0xe6a8>
   14f5c:	ldur	x20, [x29, #-8]
   14f60:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   14f64:	add	x21, x21, #0x320
   14f68:	ldr	x0, [x20, #8]
   14f6c:	cmp	x0, x21
   14f70:	b.eq	14f84 <PyInit__decimal@@Base+0xe420>  // b.none
   14f74:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14f78:	add	x1, x1, #0x320
   14f7c:	bl	69b0 <PyType_IsSubtype@plt>
   14f80:	cbz	w0, 150cc <PyInit__decimal@@Base+0xe568>
   14f84:	ldr	x8, [x20]
   14f88:	add	x8, x8, #0x1
   14f8c:	str	x8, [x20]
   14f90:	ldr	x22, [sp, #16]
   14f94:	ldr	x0, [x22, #8]
   14f98:	cmp	x0, x21
   14f9c:	b.eq	14fb0 <PyInit__decimal@@Base+0xe44c>  // b.none
   14fa0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   14fa4:	add	x1, x1, #0x320
   14fa8:	bl	69b0 <PyType_IsSubtype@plt>
   14fac:	cbz	w0, 150f8 <PyInit__decimal@@Base+0xe594>
   14fb0:	ldr	x8, [x22]
   14fb4:	add	x8, x8, #0x1
   14fb8:	str	x8, [x22]
   14fbc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14fc0:	add	x0, x0, #0x320
   14fc4:	bl	6940 <_PyObject_New@plt>
   14fc8:	cbz	x0, 1509c <PyInit__decimal@@Base+0xe538>
   14fcc:	mov	w25, #0x30                  	// #48
   14fd0:	mov	x24, x0
   14fd4:	mov	x21, x0
   14fd8:	mov	w8, #0x4                   	// #4
   14fdc:	strb	w25, [x24, #24]!
   14fe0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   14fe4:	mov	x26, #0xffffffffffffffff    	// #-1
   14fe8:	stp	xzr, x8, [x24, #24]
   14fec:	add	x8, x24, #0x30
   14ff0:	add	x0, x0, #0x320
   14ff4:	stur	x26, [x24, #-8]
   14ff8:	stp	xzr, xzr, [x24, #8]
   14ffc:	str	x8, [x24, #40]
   15000:	bl	6940 <_PyObject_New@plt>
   15004:	cbz	x0, 15124 <PyInit__decimal@@Base+0xe5c0>
   15008:	mov	x1, x0
   1500c:	mov	w8, #0x4                   	// #4
   15010:	strb	w25, [x1, #24]!
   15014:	mov	x23, x0
   15018:	add	x2, x20, #0x18
   1501c:	add	x3, x22, #0x18
   15020:	stp	xzr, x8, [x1, #24]
   15024:	add	x8, x1, #0x30
   15028:	add	x4, x19, #0x10
   1502c:	add	x5, sp, #0xc
   15030:	mov	x0, x24
   15034:	stur	x26, [x1, #-8]
   15038:	stp	xzr, xzr, [x1, #8]
   1503c:	str	x8, [x1, #40]
   15040:	bl	25e14 <PyInit__decimal@@Base+0x1f2b0>
   15044:	ldr	x8, [x20]
   15048:	subs	x8, x8, #0x1
   1504c:	str	x8, [x20]
   15050:	b.ne	1505c <PyInit__decimal@@Base+0xe4f8>  // b.any
   15054:	mov	x0, x20
   15058:	bl	65c0 <_Py_Dealloc@plt>
   1505c:	ldr	x8, [x22]
   15060:	subs	x8, x8, #0x1
   15064:	str	x8, [x22]
   15068:	b.ne	15074 <PyInit__decimal@@Base+0xe510>  // b.any
   1506c:	mov	x0, x22
   15070:	bl	65c0 <_Py_Dealloc@plt>
   15074:	ldr	w1, [sp, #12]
   15078:	mov	x0, x19
   1507c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   15080:	cbz	w0, 1518c <PyInit__decimal@@Base+0xe628>
   15084:	ldr	x8, [x23]
   15088:	subs	x8, x8, #0x1
   1508c:	str	x8, [x23]
   15090:	b.ne	15154 <PyInit__decimal@@Base+0xe5f0>  // b.any
   15094:	mov	x0, x23
   15098:	b	15150 <PyInit__decimal@@Base+0xe5ec>
   1509c:	ldr	x8, [x20]
   150a0:	subs	x8, x8, #0x1
   150a4:	str	x8, [x20]
   150a8:	b.ne	150b4 <PyInit__decimal@@Base+0xe550>  // b.any
   150ac:	mov	x0, x20
   150b0:	bl	65c0 <_Py_Dealloc@plt>
   150b4:	ldr	x8, [x22]
   150b8:	subs	x8, x8, #0x1
   150bc:	str	x8, [x22]
   150c0:	b.ne	1520c <PyInit__decimal@@Base+0xe6a8>  // b.any
   150c4:	mov	x0, x22
   150c8:	b	15208 <PyInit__decimal@@Base+0xe6a4>
   150cc:	ldr	x8, [x20, #8]
   150d0:	ldrb	w9, [x8, #171]
   150d4:	tbnz	w9, #0, 1516c <PyInit__decimal@@Base+0xe608>
   150d8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   150dc:	ldr	x9, [x9, #3936]
   150e0:	ldr	x2, [x8, #24]
   150e4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   150e8:	add	x1, x1, #0xd63
   150ec:	ldr	x0, [x9]
   150f0:	bl	6a00 <PyErr_Format@plt>
   150f4:	b	1520c <PyInit__decimal@@Base+0xe6a8>
   150f8:	ldr	x8, [x22, #8]
   150fc:	ldrb	w9, [x8, #171]
   15100:	tbnz	w9, #0, 151d8 <PyInit__decimal@@Base+0xe674>
   15104:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15108:	ldr	x9, [x9, #3936]
   1510c:	ldr	x2, [x8, #24]
   15110:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15114:	add	x1, x1, #0xd63
   15118:	ldr	x0, [x9]
   1511c:	bl	6a00 <PyErr_Format@plt>
   15120:	b	151f4 <PyInit__decimal@@Base+0xe690>
   15124:	ldr	x8, [x20]
   15128:	subs	x8, x8, #0x1
   1512c:	str	x8, [x20]
   15130:	b.ne	1513c <PyInit__decimal@@Base+0xe5d8>  // b.any
   15134:	mov	x0, x20
   15138:	bl	65c0 <_Py_Dealloc@plt>
   1513c:	ldr	x8, [x22]
   15140:	subs	x8, x8, #0x1
   15144:	str	x8, [x22]
   15148:	b.ne	15154 <PyInit__decimal@@Base+0xe5f0>  // b.any
   1514c:	mov	x0, x22
   15150:	bl	65c0 <_Py_Dealloc@plt>
   15154:	ldr	x8, [x21]
   15158:	subs	x8, x8, #0x1
   1515c:	str	x8, [x21]
   15160:	b.ne	1520c <PyInit__decimal@@Base+0xe6a8>  // b.any
   15164:	mov	x0, x21
   15168:	b	15208 <PyInit__decimal@@Base+0xe6a4>
   1516c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15170:	add	x0, x0, #0x320
   15174:	mov	x1, x20
   15178:	mov	x2, x19
   1517c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15180:	mov	x20, x0
   15184:	cbnz	x0, 14f90 <PyInit__decimal@@Base+0xe42c>
   15188:	b	1520c <PyInit__decimal@@Base+0xe6a8>
   1518c:	adrp	x0, 36000 <PyInit__decimal@@Base+0x2f49c>
   15190:	add	x0, x0, #0xdd3
   15194:	mov	x1, x21
   15198:	mov	x2, x23
   1519c:	bl	67c0 <Py_BuildValue@plt>
   151a0:	ldr	x8, [x23]
   151a4:	mov	x19, x0
   151a8:	subs	x8, x8, #0x1
   151ac:	str	x8, [x23]
   151b0:	b.ne	151bc <PyInit__decimal@@Base+0xe658>  // b.any
   151b4:	mov	x0, x23
   151b8:	bl	65c0 <_Py_Dealloc@plt>
   151bc:	ldr	x8, [x21]
   151c0:	subs	x8, x8, #0x1
   151c4:	str	x8, [x21]
   151c8:	b.ne	15210 <PyInit__decimal@@Base+0xe6ac>  // b.any
   151cc:	mov	x0, x21
   151d0:	bl	65c0 <_Py_Dealloc@plt>
   151d4:	b	15210 <PyInit__decimal@@Base+0xe6ac>
   151d8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   151dc:	add	x0, x0, #0x320
   151e0:	mov	x1, x22
   151e4:	mov	x2, x19
   151e8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   151ec:	mov	x22, x0
   151f0:	cbnz	x0, 14fbc <PyInit__decimal@@Base+0xe458>
   151f4:	ldr	x8, [x20]
   151f8:	subs	x8, x8, #0x1
   151fc:	str	x8, [x20]
   15200:	b.ne	1520c <PyInit__decimal@@Base+0xe6a8>  // b.any
   15204:	mov	x0, x20
   15208:	bl	65c0 <_Py_Dealloc@plt>
   1520c:	mov	x19, xzr
   15210:	mov	x0, x19
   15214:	ldp	x20, x19, [sp, #96]
   15218:	ldp	x22, x21, [sp, #80]
   1521c:	ldp	x24, x23, [sp, #64]
   15220:	ldp	x26, x25, [sp, #48]
   15224:	ldp	x29, x30, [sp, #32]
   15228:	add	sp, sp, #0x70
   1522c:	ret
   15230:	sub	sp, sp, #0x50
   15234:	stp	x29, x30, [sp, #32]
   15238:	stp	x22, x21, [sp, #48]
   1523c:	stp	x20, x19, [sp, #64]
   15240:	add	x29, sp, #0x20
   15244:	mov	x8, x1
   15248:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1524c:	mov	x19, x0
   15250:	add	x1, x1, #0x84a
   15254:	sub	x2, x29, #0x8
   15258:	add	x3, sp, #0x10
   1525c:	mov	x0, x8
   15260:	str	wzr, [sp, #12]
   15264:	bl	68d0 <PyArg_ParseTuple@plt>
   15268:	cbz	w0, 1544c <PyInit__decimal@@Base+0xe8e8>
   1526c:	ldur	x20, [x29, #-8]
   15270:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   15274:	add	x22, x22, #0x320
   15278:	ldr	x0, [x20, #8]
   1527c:	cmp	x0, x22
   15280:	b.eq	15294 <PyInit__decimal@@Base+0xe730>  // b.none
   15284:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15288:	add	x1, x1, #0x320
   1528c:	bl	69b0 <PyType_IsSubtype@plt>
   15290:	cbz	w0, 153a0 <PyInit__decimal@@Base+0xe83c>
   15294:	ldr	x8, [x20]
   15298:	add	x8, x8, #0x1
   1529c:	str	x8, [x20]
   152a0:	ldr	x21, [sp, #16]
   152a4:	ldr	x0, [x21, #8]
   152a8:	cmp	x0, x22
   152ac:	b.eq	152c0 <PyInit__decimal@@Base+0xe75c>  // b.none
   152b0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   152b4:	add	x1, x1, #0x320
   152b8:	bl	69b0 <PyType_IsSubtype@plt>
   152bc:	cbz	w0, 153cc <PyInit__decimal@@Base+0xe868>
   152c0:	ldr	x8, [x21]
   152c4:	add	x8, x8, #0x1
   152c8:	str	x8, [x21]
   152cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   152d0:	add	x0, x0, #0x320
   152d4:	bl	6940 <_PyObject_New@plt>
   152d8:	cbz	x0, 15370 <PyInit__decimal@@Base+0xe80c>
   152dc:	mov	w8, #0x30                  	// #48
   152e0:	mov	x22, x0
   152e4:	strb	w8, [x0, #24]!
   152e8:	mov	x9, #0xffffffffffffffff    	// #-1
   152ec:	mov	w10, #0x4                   	// #4
   152f0:	add	x1, x20, #0x18
   152f4:	add	x2, x21, #0x18
   152f8:	add	x8, x0, #0x30
   152fc:	add	x3, x19, #0x10
   15300:	add	x4, sp, #0xc
   15304:	stur	x9, [x0, #-8]
   15308:	stp	xzr, xzr, [x0, #8]
   1530c:	stp	xzr, x10, [x0, #24]
   15310:	str	x8, [x0, #40]
   15314:	bl	298b4 <PyInit__decimal@@Base+0x22d50>
   15318:	ldr	x8, [x20]
   1531c:	subs	x8, x8, #0x1
   15320:	str	x8, [x20]
   15324:	b.ne	15330 <PyInit__decimal@@Base+0xe7cc>  // b.any
   15328:	mov	x0, x20
   1532c:	bl	65c0 <_Py_Dealloc@plt>
   15330:	ldr	x8, [x21]
   15334:	subs	x8, x8, #0x1
   15338:	str	x8, [x21]
   1533c:	b.ne	15348 <PyInit__decimal@@Base+0xe7e4>  // b.any
   15340:	mov	x0, x21
   15344:	bl	65c0 <_Py_Dealloc@plt>
   15348:	ldr	w1, [sp, #12]
   1534c:	mov	x0, x19
   15350:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   15354:	cbz	w0, 15450 <PyInit__decimal@@Base+0xe8ec>
   15358:	ldr	x8, [x22]
   1535c:	subs	x8, x8, #0x1
   15360:	str	x8, [x22]
   15364:	b.ne	1544c <PyInit__decimal@@Base+0xe8e8>  // b.any
   15368:	mov	x0, x22
   1536c:	b	15448 <PyInit__decimal@@Base+0xe8e4>
   15370:	ldr	x8, [x20]
   15374:	subs	x8, x8, #0x1
   15378:	str	x8, [x20]
   1537c:	b.ne	15388 <PyInit__decimal@@Base+0xe824>  // b.any
   15380:	mov	x0, x20
   15384:	bl	65c0 <_Py_Dealloc@plt>
   15388:	ldr	x8, [x21]
   1538c:	subs	x8, x8, #0x1
   15390:	str	x8, [x21]
   15394:	b.ne	1544c <PyInit__decimal@@Base+0xe8e8>  // b.any
   15398:	mov	x0, x21
   1539c:	b	15448 <PyInit__decimal@@Base+0xe8e4>
   153a0:	ldr	x8, [x20, #8]
   153a4:	ldrb	w9, [x8, #171]
   153a8:	tbnz	w9, #0, 153f8 <PyInit__decimal@@Base+0xe894>
   153ac:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   153b0:	ldr	x9, [x9, #3936]
   153b4:	ldr	x2, [x8, #24]
   153b8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   153bc:	add	x1, x1, #0xd63
   153c0:	ldr	x0, [x9]
   153c4:	bl	6a00 <PyErr_Format@plt>
   153c8:	b	1544c <PyInit__decimal@@Base+0xe8e8>
   153cc:	ldr	x8, [x21, #8]
   153d0:	ldrb	w9, [x8, #171]
   153d4:	tbnz	w9, #0, 15418 <PyInit__decimal@@Base+0xe8b4>
   153d8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   153dc:	ldr	x9, [x9, #3936]
   153e0:	ldr	x2, [x8, #24]
   153e4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   153e8:	add	x1, x1, #0xd63
   153ec:	ldr	x0, [x9]
   153f0:	bl	6a00 <PyErr_Format@plt>
   153f4:	b	15434 <PyInit__decimal@@Base+0xe8d0>
   153f8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   153fc:	add	x0, x0, #0x320
   15400:	mov	x1, x20
   15404:	mov	x2, x19
   15408:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1540c:	mov	x20, x0
   15410:	cbnz	x0, 152a0 <PyInit__decimal@@Base+0xe73c>
   15414:	b	1544c <PyInit__decimal@@Base+0xe8e8>
   15418:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1541c:	add	x0, x0, #0x320
   15420:	mov	x1, x21
   15424:	mov	x2, x19
   15428:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1542c:	mov	x21, x0
   15430:	cbnz	x0, 152cc <PyInit__decimal@@Base+0xe768>
   15434:	ldr	x8, [x20]
   15438:	subs	x8, x8, #0x1
   1543c:	str	x8, [x20]
   15440:	b.ne	1544c <PyInit__decimal@@Base+0xe8e8>  // b.any
   15444:	mov	x0, x20
   15448:	bl	65c0 <_Py_Dealloc@plt>
   1544c:	mov	x22, xzr
   15450:	mov	x0, x22
   15454:	ldp	x20, x19, [sp, #64]
   15458:	ldp	x22, x21, [sp, #48]
   1545c:	ldp	x29, x30, [sp, #32]
   15460:	add	sp, sp, #0x50
   15464:	ret
   15468:	sub	sp, sp, #0x50
   1546c:	stp	x29, x30, [sp, #32]
   15470:	stp	x22, x21, [sp, #48]
   15474:	stp	x20, x19, [sp, #64]
   15478:	add	x29, sp, #0x20
   1547c:	mov	x8, x1
   15480:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   15484:	mov	x19, x0
   15488:	add	x1, x1, #0x84a
   1548c:	sub	x2, x29, #0x8
   15490:	add	x3, sp, #0x10
   15494:	mov	x0, x8
   15498:	str	wzr, [sp, #12]
   1549c:	bl	68d0 <PyArg_ParseTuple@plt>
   154a0:	cbz	w0, 15684 <PyInit__decimal@@Base+0xeb20>
   154a4:	ldur	x20, [x29, #-8]
   154a8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   154ac:	add	x22, x22, #0x320
   154b0:	ldr	x0, [x20, #8]
   154b4:	cmp	x0, x22
   154b8:	b.eq	154cc <PyInit__decimal@@Base+0xe968>  // b.none
   154bc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   154c0:	add	x1, x1, #0x320
   154c4:	bl	69b0 <PyType_IsSubtype@plt>
   154c8:	cbz	w0, 155d8 <PyInit__decimal@@Base+0xea74>
   154cc:	ldr	x8, [x20]
   154d0:	add	x8, x8, #0x1
   154d4:	str	x8, [x20]
   154d8:	ldr	x21, [sp, #16]
   154dc:	ldr	x0, [x21, #8]
   154e0:	cmp	x0, x22
   154e4:	b.eq	154f8 <PyInit__decimal@@Base+0xe994>  // b.none
   154e8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   154ec:	add	x1, x1, #0x320
   154f0:	bl	69b0 <PyType_IsSubtype@plt>
   154f4:	cbz	w0, 15604 <PyInit__decimal@@Base+0xeaa0>
   154f8:	ldr	x8, [x21]
   154fc:	add	x8, x8, #0x1
   15500:	str	x8, [x21]
   15504:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15508:	add	x0, x0, #0x320
   1550c:	bl	6940 <_PyObject_New@plt>
   15510:	cbz	x0, 155a8 <PyInit__decimal@@Base+0xea44>
   15514:	mov	w8, #0x30                  	// #48
   15518:	mov	x22, x0
   1551c:	strb	w8, [x0, #24]!
   15520:	mov	x9, #0xffffffffffffffff    	// #-1
   15524:	mov	w10, #0x4                   	// #4
   15528:	add	x1, x20, #0x18
   1552c:	add	x2, x21, #0x18
   15530:	add	x8, x0, #0x30
   15534:	add	x3, x19, #0x10
   15538:	add	x4, sp, #0xc
   1553c:	stur	x9, [x0, #-8]
   15540:	stp	xzr, xzr, [x0, #8]
   15544:	stp	xzr, x10, [x0, #24]
   15548:	str	x8, [x0, #40]
   1554c:	bl	299b4 <PyInit__decimal@@Base+0x22e50>
   15550:	ldr	x8, [x20]
   15554:	subs	x8, x8, #0x1
   15558:	str	x8, [x20]
   1555c:	b.ne	15568 <PyInit__decimal@@Base+0xea04>  // b.any
   15560:	mov	x0, x20
   15564:	bl	65c0 <_Py_Dealloc@plt>
   15568:	ldr	x8, [x21]
   1556c:	subs	x8, x8, #0x1
   15570:	str	x8, [x21]
   15574:	b.ne	15580 <PyInit__decimal@@Base+0xea1c>  // b.any
   15578:	mov	x0, x21
   1557c:	bl	65c0 <_Py_Dealloc@plt>
   15580:	ldr	w1, [sp, #12]
   15584:	mov	x0, x19
   15588:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   1558c:	cbz	w0, 15688 <PyInit__decimal@@Base+0xeb24>
   15590:	ldr	x8, [x22]
   15594:	subs	x8, x8, #0x1
   15598:	str	x8, [x22]
   1559c:	b.ne	15684 <PyInit__decimal@@Base+0xeb20>  // b.any
   155a0:	mov	x0, x22
   155a4:	b	15680 <PyInit__decimal@@Base+0xeb1c>
   155a8:	ldr	x8, [x20]
   155ac:	subs	x8, x8, #0x1
   155b0:	str	x8, [x20]
   155b4:	b.ne	155c0 <PyInit__decimal@@Base+0xea5c>  // b.any
   155b8:	mov	x0, x20
   155bc:	bl	65c0 <_Py_Dealloc@plt>
   155c0:	ldr	x8, [x21]
   155c4:	subs	x8, x8, #0x1
   155c8:	str	x8, [x21]
   155cc:	b.ne	15684 <PyInit__decimal@@Base+0xeb20>  // b.any
   155d0:	mov	x0, x21
   155d4:	b	15680 <PyInit__decimal@@Base+0xeb1c>
   155d8:	ldr	x8, [x20, #8]
   155dc:	ldrb	w9, [x8, #171]
   155e0:	tbnz	w9, #0, 15630 <PyInit__decimal@@Base+0xeacc>
   155e4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   155e8:	ldr	x9, [x9, #3936]
   155ec:	ldr	x2, [x8, #24]
   155f0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   155f4:	add	x1, x1, #0xd63
   155f8:	ldr	x0, [x9]
   155fc:	bl	6a00 <PyErr_Format@plt>
   15600:	b	15684 <PyInit__decimal@@Base+0xeb20>
   15604:	ldr	x8, [x21, #8]
   15608:	ldrb	w9, [x8, #171]
   1560c:	tbnz	w9, #0, 15650 <PyInit__decimal@@Base+0xeaec>
   15610:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15614:	ldr	x9, [x9, #3936]
   15618:	ldr	x2, [x8, #24]
   1561c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15620:	add	x1, x1, #0xd63
   15624:	ldr	x0, [x9]
   15628:	bl	6a00 <PyErr_Format@plt>
   1562c:	b	1566c <PyInit__decimal@@Base+0xeb08>
   15630:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15634:	add	x0, x0, #0x320
   15638:	mov	x1, x20
   1563c:	mov	x2, x19
   15640:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15644:	mov	x20, x0
   15648:	cbnz	x0, 154d8 <PyInit__decimal@@Base+0xe974>
   1564c:	b	15684 <PyInit__decimal@@Base+0xeb20>
   15650:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15654:	add	x0, x0, #0x320
   15658:	mov	x1, x21
   1565c:	mov	x2, x19
   15660:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15664:	mov	x21, x0
   15668:	cbnz	x0, 15504 <PyInit__decimal@@Base+0xe9a0>
   1566c:	ldr	x8, [x20]
   15670:	subs	x8, x8, #0x1
   15674:	str	x8, [x20]
   15678:	b.ne	15684 <PyInit__decimal@@Base+0xeb20>  // b.any
   1567c:	mov	x0, x20
   15680:	bl	65c0 <_Py_Dealloc@plt>
   15684:	mov	x22, xzr
   15688:	mov	x0, x22
   1568c:	ldp	x20, x19, [sp, #64]
   15690:	ldp	x22, x21, [sp, #48]
   15694:	ldp	x29, x30, [sp, #32]
   15698:	add	sp, sp, #0x50
   1569c:	ret
   156a0:	sub	sp, sp, #0x50
   156a4:	stp	x29, x30, [sp, #32]
   156a8:	stp	x22, x21, [sp, #48]
   156ac:	stp	x20, x19, [sp, #64]
   156b0:	add	x29, sp, #0x20
   156b4:	mov	x8, x1
   156b8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   156bc:	mov	x19, x0
   156c0:	add	x1, x1, #0x84a
   156c4:	sub	x2, x29, #0x8
   156c8:	add	x3, sp, #0x10
   156cc:	mov	x0, x8
   156d0:	str	wzr, [sp, #12]
   156d4:	bl	68d0 <PyArg_ParseTuple@plt>
   156d8:	cbz	w0, 158bc <PyInit__decimal@@Base+0xed58>
   156dc:	ldur	x20, [x29, #-8]
   156e0:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   156e4:	add	x22, x22, #0x320
   156e8:	ldr	x0, [x20, #8]
   156ec:	cmp	x0, x22
   156f0:	b.eq	15704 <PyInit__decimal@@Base+0xeba0>  // b.none
   156f4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   156f8:	add	x1, x1, #0x320
   156fc:	bl	69b0 <PyType_IsSubtype@plt>
   15700:	cbz	w0, 15810 <PyInit__decimal@@Base+0xecac>
   15704:	ldr	x8, [x20]
   15708:	add	x8, x8, #0x1
   1570c:	str	x8, [x20]
   15710:	ldr	x21, [sp, #16]
   15714:	ldr	x0, [x21, #8]
   15718:	cmp	x0, x22
   1571c:	b.eq	15730 <PyInit__decimal@@Base+0xebcc>  // b.none
   15720:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15724:	add	x1, x1, #0x320
   15728:	bl	69b0 <PyType_IsSubtype@plt>
   1572c:	cbz	w0, 1583c <PyInit__decimal@@Base+0xecd8>
   15730:	ldr	x8, [x21]
   15734:	add	x8, x8, #0x1
   15738:	str	x8, [x21]
   1573c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15740:	add	x0, x0, #0x320
   15744:	bl	6940 <_PyObject_New@plt>
   15748:	cbz	x0, 157e0 <PyInit__decimal@@Base+0xec7c>
   1574c:	mov	w8, #0x30                  	// #48
   15750:	mov	x22, x0
   15754:	strb	w8, [x0, #24]!
   15758:	mov	x9, #0xffffffffffffffff    	// #-1
   1575c:	mov	w10, #0x4                   	// #4
   15760:	add	x1, x20, #0x18
   15764:	add	x2, x21, #0x18
   15768:	add	x8, x0, #0x30
   1576c:	add	x3, x19, #0x10
   15770:	add	x4, sp, #0xc
   15774:	stur	x9, [x0, #-8]
   15778:	stp	xzr, xzr, [x0, #8]
   1577c:	stp	xzr, x10, [x0, #24]
   15780:	str	x8, [x0, #40]
   15784:	bl	29ab4 <PyInit__decimal@@Base+0x22f50>
   15788:	ldr	x8, [x20]
   1578c:	subs	x8, x8, #0x1
   15790:	str	x8, [x20]
   15794:	b.ne	157a0 <PyInit__decimal@@Base+0xec3c>  // b.any
   15798:	mov	x0, x20
   1579c:	bl	65c0 <_Py_Dealloc@plt>
   157a0:	ldr	x8, [x21]
   157a4:	subs	x8, x8, #0x1
   157a8:	str	x8, [x21]
   157ac:	b.ne	157b8 <PyInit__decimal@@Base+0xec54>  // b.any
   157b0:	mov	x0, x21
   157b4:	bl	65c0 <_Py_Dealloc@plt>
   157b8:	ldr	w1, [sp, #12]
   157bc:	mov	x0, x19
   157c0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   157c4:	cbz	w0, 158c0 <PyInit__decimal@@Base+0xed5c>
   157c8:	ldr	x8, [x22]
   157cc:	subs	x8, x8, #0x1
   157d0:	str	x8, [x22]
   157d4:	b.ne	158bc <PyInit__decimal@@Base+0xed58>  // b.any
   157d8:	mov	x0, x22
   157dc:	b	158b8 <PyInit__decimal@@Base+0xed54>
   157e0:	ldr	x8, [x20]
   157e4:	subs	x8, x8, #0x1
   157e8:	str	x8, [x20]
   157ec:	b.ne	157f8 <PyInit__decimal@@Base+0xec94>  // b.any
   157f0:	mov	x0, x20
   157f4:	bl	65c0 <_Py_Dealloc@plt>
   157f8:	ldr	x8, [x21]
   157fc:	subs	x8, x8, #0x1
   15800:	str	x8, [x21]
   15804:	b.ne	158bc <PyInit__decimal@@Base+0xed58>  // b.any
   15808:	mov	x0, x21
   1580c:	b	158b8 <PyInit__decimal@@Base+0xed54>
   15810:	ldr	x8, [x20, #8]
   15814:	ldrb	w9, [x8, #171]
   15818:	tbnz	w9, #0, 15868 <PyInit__decimal@@Base+0xed04>
   1581c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15820:	ldr	x9, [x9, #3936]
   15824:	ldr	x2, [x8, #24]
   15828:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1582c:	add	x1, x1, #0xd63
   15830:	ldr	x0, [x9]
   15834:	bl	6a00 <PyErr_Format@plt>
   15838:	b	158bc <PyInit__decimal@@Base+0xed58>
   1583c:	ldr	x8, [x21, #8]
   15840:	ldrb	w9, [x8, #171]
   15844:	tbnz	w9, #0, 15888 <PyInit__decimal@@Base+0xed24>
   15848:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1584c:	ldr	x9, [x9, #3936]
   15850:	ldr	x2, [x8, #24]
   15854:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15858:	add	x1, x1, #0xd63
   1585c:	ldr	x0, [x9]
   15860:	bl	6a00 <PyErr_Format@plt>
   15864:	b	158a4 <PyInit__decimal@@Base+0xed40>
   15868:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1586c:	add	x0, x0, #0x320
   15870:	mov	x1, x20
   15874:	mov	x2, x19
   15878:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1587c:	mov	x20, x0
   15880:	cbnz	x0, 15710 <PyInit__decimal@@Base+0xebac>
   15884:	b	158bc <PyInit__decimal@@Base+0xed58>
   15888:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1588c:	add	x0, x0, #0x320
   15890:	mov	x1, x21
   15894:	mov	x2, x19
   15898:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1589c:	mov	x21, x0
   158a0:	cbnz	x0, 1573c <PyInit__decimal@@Base+0xebd8>
   158a4:	ldr	x8, [x20]
   158a8:	subs	x8, x8, #0x1
   158ac:	str	x8, [x20]
   158b0:	b.ne	158bc <PyInit__decimal@@Base+0xed58>  // b.any
   158b4:	mov	x0, x20
   158b8:	bl	65c0 <_Py_Dealloc@plt>
   158bc:	mov	x22, xzr
   158c0:	mov	x0, x22
   158c4:	ldp	x20, x19, [sp, #64]
   158c8:	ldp	x22, x21, [sp, #48]
   158cc:	ldp	x29, x30, [sp, #32]
   158d0:	add	sp, sp, #0x50
   158d4:	ret
   158d8:	sub	sp, sp, #0x50
   158dc:	stp	x29, x30, [sp, #32]
   158e0:	stp	x22, x21, [sp, #48]
   158e4:	stp	x20, x19, [sp, #64]
   158e8:	add	x29, sp, #0x20
   158ec:	mov	x8, x1
   158f0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   158f4:	mov	x19, x0
   158f8:	add	x1, x1, #0x84a
   158fc:	sub	x2, x29, #0x8
   15900:	add	x3, sp, #0x10
   15904:	mov	x0, x8
   15908:	str	wzr, [sp, #12]
   1590c:	bl	68d0 <PyArg_ParseTuple@plt>
   15910:	cbz	w0, 15af4 <PyInit__decimal@@Base+0xef90>
   15914:	ldur	x20, [x29, #-8]
   15918:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   1591c:	add	x22, x22, #0x320
   15920:	ldr	x0, [x20, #8]
   15924:	cmp	x0, x22
   15928:	b.eq	1593c <PyInit__decimal@@Base+0xedd8>  // b.none
   1592c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15930:	add	x1, x1, #0x320
   15934:	bl	69b0 <PyType_IsSubtype@plt>
   15938:	cbz	w0, 15a48 <PyInit__decimal@@Base+0xeee4>
   1593c:	ldr	x8, [x20]
   15940:	add	x8, x8, #0x1
   15944:	str	x8, [x20]
   15948:	ldr	x21, [sp, #16]
   1594c:	ldr	x0, [x21, #8]
   15950:	cmp	x0, x22
   15954:	b.eq	15968 <PyInit__decimal@@Base+0xee04>  // b.none
   15958:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1595c:	add	x1, x1, #0x320
   15960:	bl	69b0 <PyType_IsSubtype@plt>
   15964:	cbz	w0, 15a74 <PyInit__decimal@@Base+0xef10>
   15968:	ldr	x8, [x21]
   1596c:	add	x8, x8, #0x1
   15970:	str	x8, [x21]
   15974:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15978:	add	x0, x0, #0x320
   1597c:	bl	6940 <_PyObject_New@plt>
   15980:	cbz	x0, 15a18 <PyInit__decimal@@Base+0xeeb4>
   15984:	mov	w8, #0x30                  	// #48
   15988:	mov	x22, x0
   1598c:	strb	w8, [x0, #24]!
   15990:	mov	x9, #0xffffffffffffffff    	// #-1
   15994:	mov	w10, #0x4                   	// #4
   15998:	add	x1, x20, #0x18
   1599c:	add	x2, x21, #0x18
   159a0:	add	x8, x0, #0x30
   159a4:	add	x3, x19, #0x10
   159a8:	add	x4, sp, #0xc
   159ac:	stur	x9, [x0, #-8]
   159b0:	stp	xzr, xzr, [x0, #8]
   159b4:	stp	xzr, x10, [x0, #24]
   159b8:	str	x8, [x0, #40]
   159bc:	bl	29bb4 <PyInit__decimal@@Base+0x23050>
   159c0:	ldr	x8, [x20]
   159c4:	subs	x8, x8, #0x1
   159c8:	str	x8, [x20]
   159cc:	b.ne	159d8 <PyInit__decimal@@Base+0xee74>  // b.any
   159d0:	mov	x0, x20
   159d4:	bl	65c0 <_Py_Dealloc@plt>
   159d8:	ldr	x8, [x21]
   159dc:	subs	x8, x8, #0x1
   159e0:	str	x8, [x21]
   159e4:	b.ne	159f0 <PyInit__decimal@@Base+0xee8c>  // b.any
   159e8:	mov	x0, x21
   159ec:	bl	65c0 <_Py_Dealloc@plt>
   159f0:	ldr	w1, [sp, #12]
   159f4:	mov	x0, x19
   159f8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   159fc:	cbz	w0, 15af8 <PyInit__decimal@@Base+0xef94>
   15a00:	ldr	x8, [x22]
   15a04:	subs	x8, x8, #0x1
   15a08:	str	x8, [x22]
   15a0c:	b.ne	15af4 <PyInit__decimal@@Base+0xef90>  // b.any
   15a10:	mov	x0, x22
   15a14:	b	15af0 <PyInit__decimal@@Base+0xef8c>
   15a18:	ldr	x8, [x20]
   15a1c:	subs	x8, x8, #0x1
   15a20:	str	x8, [x20]
   15a24:	b.ne	15a30 <PyInit__decimal@@Base+0xeecc>  // b.any
   15a28:	mov	x0, x20
   15a2c:	bl	65c0 <_Py_Dealloc@plt>
   15a30:	ldr	x8, [x21]
   15a34:	subs	x8, x8, #0x1
   15a38:	str	x8, [x21]
   15a3c:	b.ne	15af4 <PyInit__decimal@@Base+0xef90>  // b.any
   15a40:	mov	x0, x21
   15a44:	b	15af0 <PyInit__decimal@@Base+0xef8c>
   15a48:	ldr	x8, [x20, #8]
   15a4c:	ldrb	w9, [x8, #171]
   15a50:	tbnz	w9, #0, 15aa0 <PyInit__decimal@@Base+0xef3c>
   15a54:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15a58:	ldr	x9, [x9, #3936]
   15a5c:	ldr	x2, [x8, #24]
   15a60:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15a64:	add	x1, x1, #0xd63
   15a68:	ldr	x0, [x9]
   15a6c:	bl	6a00 <PyErr_Format@plt>
   15a70:	b	15af4 <PyInit__decimal@@Base+0xef90>
   15a74:	ldr	x8, [x21, #8]
   15a78:	ldrb	w9, [x8, #171]
   15a7c:	tbnz	w9, #0, 15ac0 <PyInit__decimal@@Base+0xef5c>
   15a80:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15a84:	ldr	x9, [x9, #3936]
   15a88:	ldr	x2, [x8, #24]
   15a8c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15a90:	add	x1, x1, #0xd63
   15a94:	ldr	x0, [x9]
   15a98:	bl	6a00 <PyErr_Format@plt>
   15a9c:	b	15adc <PyInit__decimal@@Base+0xef78>
   15aa0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15aa4:	add	x0, x0, #0x320
   15aa8:	mov	x1, x20
   15aac:	mov	x2, x19
   15ab0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15ab4:	mov	x20, x0
   15ab8:	cbnz	x0, 15948 <PyInit__decimal@@Base+0xede4>
   15abc:	b	15af4 <PyInit__decimal@@Base+0xef90>
   15ac0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15ac4:	add	x0, x0, #0x320
   15ac8:	mov	x1, x21
   15acc:	mov	x2, x19
   15ad0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15ad4:	mov	x21, x0
   15ad8:	cbnz	x0, 15974 <PyInit__decimal@@Base+0xee10>
   15adc:	ldr	x8, [x20]
   15ae0:	subs	x8, x8, #0x1
   15ae4:	str	x8, [x20]
   15ae8:	b.ne	15af4 <PyInit__decimal@@Base+0xef90>  // b.any
   15aec:	mov	x0, x20
   15af0:	bl	65c0 <_Py_Dealloc@plt>
   15af4:	mov	x22, xzr
   15af8:	mov	x0, x22
   15afc:	ldp	x20, x19, [sp, #64]
   15b00:	ldp	x22, x21, [sp, #48]
   15b04:	ldp	x29, x30, [sp, #32]
   15b08:	add	sp, sp, #0x50
   15b0c:	ret
   15b10:	sub	sp, sp, #0x50
   15b14:	stp	x29, x30, [sp, #32]
   15b18:	stp	x22, x21, [sp, #48]
   15b1c:	stp	x20, x19, [sp, #64]
   15b20:	add	x29, sp, #0x20
   15b24:	mov	x8, x1
   15b28:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   15b2c:	mov	x19, x0
   15b30:	add	x1, x1, #0x84a
   15b34:	sub	x2, x29, #0x8
   15b38:	add	x3, sp, #0x10
   15b3c:	mov	x0, x8
   15b40:	str	wzr, [sp, #12]
   15b44:	bl	68d0 <PyArg_ParseTuple@plt>
   15b48:	cbz	w0, 15d2c <PyInit__decimal@@Base+0xf1c8>
   15b4c:	ldur	x20, [x29, #-8]
   15b50:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   15b54:	add	x22, x22, #0x320
   15b58:	ldr	x0, [x20, #8]
   15b5c:	cmp	x0, x22
   15b60:	b.eq	15b74 <PyInit__decimal@@Base+0xf010>  // b.none
   15b64:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15b68:	add	x1, x1, #0x320
   15b6c:	bl	69b0 <PyType_IsSubtype@plt>
   15b70:	cbz	w0, 15c80 <PyInit__decimal@@Base+0xf11c>
   15b74:	ldr	x8, [x20]
   15b78:	add	x8, x8, #0x1
   15b7c:	str	x8, [x20]
   15b80:	ldr	x21, [sp, #16]
   15b84:	ldr	x0, [x21, #8]
   15b88:	cmp	x0, x22
   15b8c:	b.eq	15ba0 <PyInit__decimal@@Base+0xf03c>  // b.none
   15b90:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15b94:	add	x1, x1, #0x320
   15b98:	bl	69b0 <PyType_IsSubtype@plt>
   15b9c:	cbz	w0, 15cac <PyInit__decimal@@Base+0xf148>
   15ba0:	ldr	x8, [x21]
   15ba4:	add	x8, x8, #0x1
   15ba8:	str	x8, [x21]
   15bac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15bb0:	add	x0, x0, #0x320
   15bb4:	bl	6940 <_PyObject_New@plt>
   15bb8:	cbz	x0, 15c50 <PyInit__decimal@@Base+0xf0ec>
   15bbc:	mov	w8, #0x30                  	// #48
   15bc0:	mov	x22, x0
   15bc4:	strb	w8, [x0, #24]!
   15bc8:	mov	x9, #0xffffffffffffffff    	// #-1
   15bcc:	mov	w10, #0x4                   	// #4
   15bd0:	add	x1, x20, #0x18
   15bd4:	add	x2, x21, #0x18
   15bd8:	add	x8, x0, #0x30
   15bdc:	add	x3, x19, #0x10
   15be0:	add	x4, sp, #0xc
   15be4:	stur	x9, [x0, #-8]
   15be8:	stp	xzr, xzr, [x0, #8]
   15bec:	stp	xzr, x10, [x0, #24]
   15bf0:	str	x8, [x0, #40]
   15bf4:	bl	284d4 <PyInit__decimal@@Base+0x21970>
   15bf8:	ldr	x8, [x20]
   15bfc:	subs	x8, x8, #0x1
   15c00:	str	x8, [x20]
   15c04:	b.ne	15c10 <PyInit__decimal@@Base+0xf0ac>  // b.any
   15c08:	mov	x0, x20
   15c0c:	bl	65c0 <_Py_Dealloc@plt>
   15c10:	ldr	x8, [x21]
   15c14:	subs	x8, x8, #0x1
   15c18:	str	x8, [x21]
   15c1c:	b.ne	15c28 <PyInit__decimal@@Base+0xf0c4>  // b.any
   15c20:	mov	x0, x21
   15c24:	bl	65c0 <_Py_Dealloc@plt>
   15c28:	ldr	w1, [sp, #12]
   15c2c:	mov	x0, x19
   15c30:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   15c34:	cbz	w0, 15d30 <PyInit__decimal@@Base+0xf1cc>
   15c38:	ldr	x8, [x22]
   15c3c:	subs	x8, x8, #0x1
   15c40:	str	x8, [x22]
   15c44:	b.ne	15d2c <PyInit__decimal@@Base+0xf1c8>  // b.any
   15c48:	mov	x0, x22
   15c4c:	b	15d28 <PyInit__decimal@@Base+0xf1c4>
   15c50:	ldr	x8, [x20]
   15c54:	subs	x8, x8, #0x1
   15c58:	str	x8, [x20]
   15c5c:	b.ne	15c68 <PyInit__decimal@@Base+0xf104>  // b.any
   15c60:	mov	x0, x20
   15c64:	bl	65c0 <_Py_Dealloc@plt>
   15c68:	ldr	x8, [x21]
   15c6c:	subs	x8, x8, #0x1
   15c70:	str	x8, [x21]
   15c74:	b.ne	15d2c <PyInit__decimal@@Base+0xf1c8>  // b.any
   15c78:	mov	x0, x21
   15c7c:	b	15d28 <PyInit__decimal@@Base+0xf1c4>
   15c80:	ldr	x8, [x20, #8]
   15c84:	ldrb	w9, [x8, #171]
   15c88:	tbnz	w9, #0, 15cd8 <PyInit__decimal@@Base+0xf174>
   15c8c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15c90:	ldr	x9, [x9, #3936]
   15c94:	ldr	x2, [x8, #24]
   15c98:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15c9c:	add	x1, x1, #0xd63
   15ca0:	ldr	x0, [x9]
   15ca4:	bl	6a00 <PyErr_Format@plt>
   15ca8:	b	15d2c <PyInit__decimal@@Base+0xf1c8>
   15cac:	ldr	x8, [x21, #8]
   15cb0:	ldrb	w9, [x8, #171]
   15cb4:	tbnz	w9, #0, 15cf8 <PyInit__decimal@@Base+0xf194>
   15cb8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15cbc:	ldr	x9, [x9, #3936]
   15cc0:	ldr	x2, [x8, #24]
   15cc4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15cc8:	add	x1, x1, #0xd63
   15ccc:	ldr	x0, [x9]
   15cd0:	bl	6a00 <PyErr_Format@plt>
   15cd4:	b	15d14 <PyInit__decimal@@Base+0xf1b0>
   15cd8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15cdc:	add	x0, x0, #0x320
   15ce0:	mov	x1, x20
   15ce4:	mov	x2, x19
   15ce8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15cec:	mov	x20, x0
   15cf0:	cbnz	x0, 15b80 <PyInit__decimal@@Base+0xf01c>
   15cf4:	b	15d2c <PyInit__decimal@@Base+0xf1c8>
   15cf8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15cfc:	add	x0, x0, #0x320
   15d00:	mov	x1, x21
   15d04:	mov	x2, x19
   15d08:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15d0c:	mov	x21, x0
   15d10:	cbnz	x0, 15bac <PyInit__decimal@@Base+0xf048>
   15d14:	ldr	x8, [x20]
   15d18:	subs	x8, x8, #0x1
   15d1c:	str	x8, [x20]
   15d20:	b.ne	15d2c <PyInit__decimal@@Base+0xf1c8>  // b.any
   15d24:	mov	x0, x20
   15d28:	bl	65c0 <_Py_Dealloc@plt>
   15d2c:	mov	x22, xzr
   15d30:	mov	x0, x22
   15d34:	ldp	x20, x19, [sp, #64]
   15d38:	ldp	x22, x21, [sp, #48]
   15d3c:	ldp	x29, x30, [sp, #32]
   15d40:	add	sp, sp, #0x50
   15d44:	ret
   15d48:	sub	sp, sp, #0x50
   15d4c:	stp	x29, x30, [sp, #32]
   15d50:	stp	x22, x21, [sp, #48]
   15d54:	stp	x20, x19, [sp, #64]
   15d58:	add	x29, sp, #0x20
   15d5c:	mov	x8, x1
   15d60:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   15d64:	mov	x19, x0
   15d68:	add	x1, x1, #0x84a
   15d6c:	sub	x2, x29, #0x8
   15d70:	add	x3, sp, #0x10
   15d74:	mov	x0, x8
   15d78:	str	wzr, [sp, #12]
   15d7c:	bl	68d0 <PyArg_ParseTuple@plt>
   15d80:	cbz	w0, 15f64 <PyInit__decimal@@Base+0xf400>
   15d84:	ldur	x20, [x29, #-8]
   15d88:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   15d8c:	add	x22, x22, #0x320
   15d90:	ldr	x0, [x20, #8]
   15d94:	cmp	x0, x22
   15d98:	b.eq	15dac <PyInit__decimal@@Base+0xf248>  // b.none
   15d9c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15da0:	add	x1, x1, #0x320
   15da4:	bl	69b0 <PyType_IsSubtype@plt>
   15da8:	cbz	w0, 15eb8 <PyInit__decimal@@Base+0xf354>
   15dac:	ldr	x8, [x20]
   15db0:	add	x8, x8, #0x1
   15db4:	str	x8, [x20]
   15db8:	ldr	x21, [sp, #16]
   15dbc:	ldr	x0, [x21, #8]
   15dc0:	cmp	x0, x22
   15dc4:	b.eq	15dd8 <PyInit__decimal@@Base+0xf274>  // b.none
   15dc8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15dcc:	add	x1, x1, #0x320
   15dd0:	bl	69b0 <PyType_IsSubtype@plt>
   15dd4:	cbz	w0, 15ee4 <PyInit__decimal@@Base+0xf380>
   15dd8:	ldr	x8, [x21]
   15ddc:	add	x8, x8, #0x1
   15de0:	str	x8, [x21]
   15de4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15de8:	add	x0, x0, #0x320
   15dec:	bl	6940 <_PyObject_New@plt>
   15df0:	cbz	x0, 15e88 <PyInit__decimal@@Base+0xf324>
   15df4:	mov	w8, #0x30                  	// #48
   15df8:	mov	x22, x0
   15dfc:	strb	w8, [x0, #24]!
   15e00:	mov	x9, #0xffffffffffffffff    	// #-1
   15e04:	mov	w10, #0x4                   	// #4
   15e08:	add	x1, x20, #0x18
   15e0c:	add	x2, x21, #0x18
   15e10:	add	x8, x0, #0x30
   15e14:	add	x3, x19, #0x10
   15e18:	add	x4, sp, #0xc
   15e1c:	stur	x9, [x0, #-8]
   15e20:	stp	xzr, xzr, [x0, #8]
   15e24:	stp	xzr, x10, [x0, #24]
   15e28:	str	x8, [x0, #40]
   15e2c:	bl	2a18c <PyInit__decimal@@Base+0x23628>
   15e30:	ldr	x8, [x20]
   15e34:	subs	x8, x8, #0x1
   15e38:	str	x8, [x20]
   15e3c:	b.ne	15e48 <PyInit__decimal@@Base+0xf2e4>  // b.any
   15e40:	mov	x0, x20
   15e44:	bl	65c0 <_Py_Dealloc@plt>
   15e48:	ldr	x8, [x21]
   15e4c:	subs	x8, x8, #0x1
   15e50:	str	x8, [x21]
   15e54:	b.ne	15e60 <PyInit__decimal@@Base+0xf2fc>  // b.any
   15e58:	mov	x0, x21
   15e5c:	bl	65c0 <_Py_Dealloc@plt>
   15e60:	ldr	w1, [sp, #12]
   15e64:	mov	x0, x19
   15e68:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   15e6c:	cbz	w0, 15f68 <PyInit__decimal@@Base+0xf404>
   15e70:	ldr	x8, [x22]
   15e74:	subs	x8, x8, #0x1
   15e78:	str	x8, [x22]
   15e7c:	b.ne	15f64 <PyInit__decimal@@Base+0xf400>  // b.any
   15e80:	mov	x0, x22
   15e84:	b	15f60 <PyInit__decimal@@Base+0xf3fc>
   15e88:	ldr	x8, [x20]
   15e8c:	subs	x8, x8, #0x1
   15e90:	str	x8, [x20]
   15e94:	b.ne	15ea0 <PyInit__decimal@@Base+0xf33c>  // b.any
   15e98:	mov	x0, x20
   15e9c:	bl	65c0 <_Py_Dealloc@plt>
   15ea0:	ldr	x8, [x21]
   15ea4:	subs	x8, x8, #0x1
   15ea8:	str	x8, [x21]
   15eac:	b.ne	15f64 <PyInit__decimal@@Base+0xf400>  // b.any
   15eb0:	mov	x0, x21
   15eb4:	b	15f60 <PyInit__decimal@@Base+0xf3fc>
   15eb8:	ldr	x8, [x20, #8]
   15ebc:	ldrb	w9, [x8, #171]
   15ec0:	tbnz	w9, #0, 15f10 <PyInit__decimal@@Base+0xf3ac>
   15ec4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15ec8:	ldr	x9, [x9, #3936]
   15ecc:	ldr	x2, [x8, #24]
   15ed0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15ed4:	add	x1, x1, #0xd63
   15ed8:	ldr	x0, [x9]
   15edc:	bl	6a00 <PyErr_Format@plt>
   15ee0:	b	15f64 <PyInit__decimal@@Base+0xf400>
   15ee4:	ldr	x8, [x21, #8]
   15ee8:	ldrb	w9, [x8, #171]
   15eec:	tbnz	w9, #0, 15f30 <PyInit__decimal@@Base+0xf3cc>
   15ef0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   15ef4:	ldr	x9, [x9, #3936]
   15ef8:	ldr	x2, [x8, #24]
   15efc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   15f00:	add	x1, x1, #0xd63
   15f04:	ldr	x0, [x9]
   15f08:	bl	6a00 <PyErr_Format@plt>
   15f0c:	b	15f4c <PyInit__decimal@@Base+0xf3e8>
   15f10:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15f14:	add	x0, x0, #0x320
   15f18:	mov	x1, x20
   15f1c:	mov	x2, x19
   15f20:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15f24:	mov	x20, x0
   15f28:	cbnz	x0, 15db8 <PyInit__decimal@@Base+0xf254>
   15f2c:	b	15f64 <PyInit__decimal@@Base+0xf400>
   15f30:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   15f34:	add	x0, x0, #0x320
   15f38:	mov	x1, x21
   15f3c:	mov	x2, x19
   15f40:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   15f44:	mov	x21, x0
   15f48:	cbnz	x0, 15de4 <PyInit__decimal@@Base+0xf280>
   15f4c:	ldr	x8, [x20]
   15f50:	subs	x8, x8, #0x1
   15f54:	str	x8, [x20]
   15f58:	b.ne	15f64 <PyInit__decimal@@Base+0xf400>  // b.any
   15f5c:	mov	x0, x20
   15f60:	bl	65c0 <_Py_Dealloc@plt>
   15f64:	mov	x22, xzr
   15f68:	mov	x0, x22
   15f6c:	ldp	x20, x19, [sp, #64]
   15f70:	ldp	x22, x21, [sp, #48]
   15f74:	ldp	x29, x30, [sp, #32]
   15f78:	add	sp, sp, #0x50
   15f7c:	ret
   15f80:	sub	sp, sp, #0x50
   15f84:	stp	x29, x30, [sp, #32]
   15f88:	stp	x22, x21, [sp, #48]
   15f8c:	stp	x20, x19, [sp, #64]
   15f90:	add	x29, sp, #0x20
   15f94:	mov	x8, x1
   15f98:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   15f9c:	mov	x19, x0
   15fa0:	add	x1, x1, #0x84a
   15fa4:	sub	x2, x29, #0x8
   15fa8:	add	x3, sp, #0x10
   15fac:	mov	x0, x8
   15fb0:	str	wzr, [sp, #12]
   15fb4:	bl	68d0 <PyArg_ParseTuple@plt>
   15fb8:	cbz	w0, 1619c <PyInit__decimal@@Base+0xf638>
   15fbc:	ldur	x20, [x29, #-8]
   15fc0:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   15fc4:	add	x22, x22, #0x320
   15fc8:	ldr	x0, [x20, #8]
   15fcc:	cmp	x0, x22
   15fd0:	b.eq	15fe4 <PyInit__decimal@@Base+0xf480>  // b.none
   15fd4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   15fd8:	add	x1, x1, #0x320
   15fdc:	bl	69b0 <PyType_IsSubtype@plt>
   15fe0:	cbz	w0, 160f0 <PyInit__decimal@@Base+0xf58c>
   15fe4:	ldr	x8, [x20]
   15fe8:	add	x8, x8, #0x1
   15fec:	str	x8, [x20]
   15ff0:	ldr	x21, [sp, #16]
   15ff4:	ldr	x0, [x21, #8]
   15ff8:	cmp	x0, x22
   15ffc:	b.eq	16010 <PyInit__decimal@@Base+0xf4ac>  // b.none
   16000:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16004:	add	x1, x1, #0x320
   16008:	bl	69b0 <PyType_IsSubtype@plt>
   1600c:	cbz	w0, 1611c <PyInit__decimal@@Base+0xf5b8>
   16010:	ldr	x8, [x21]
   16014:	add	x8, x8, #0x1
   16018:	str	x8, [x21]
   1601c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16020:	add	x0, x0, #0x320
   16024:	bl	6940 <_PyObject_New@plt>
   16028:	cbz	x0, 160c0 <PyInit__decimal@@Base+0xf55c>
   1602c:	mov	w8, #0x30                  	// #48
   16030:	mov	x22, x0
   16034:	strb	w8, [x0, #24]!
   16038:	mov	x9, #0xffffffffffffffff    	// #-1
   1603c:	mov	w10, #0x4                   	// #4
   16040:	add	x1, x20, #0x18
   16044:	add	x2, x21, #0x18
   16048:	add	x8, x0, #0x30
   1604c:	add	x3, x19, #0x10
   16050:	add	x4, sp, #0xc
   16054:	stur	x9, [x0, #-8]
   16058:	stp	xzr, xzr, [x0, #8]
   1605c:	stp	xzr, x10, [x0, #24]
   16060:	str	x8, [x0, #40]
   16064:	bl	2b984 <PyInit__decimal@@Base+0x24e20>
   16068:	ldr	x8, [x20]
   1606c:	subs	x8, x8, #0x1
   16070:	str	x8, [x20]
   16074:	b.ne	16080 <PyInit__decimal@@Base+0xf51c>  // b.any
   16078:	mov	x0, x20
   1607c:	bl	65c0 <_Py_Dealloc@plt>
   16080:	ldr	x8, [x21]
   16084:	subs	x8, x8, #0x1
   16088:	str	x8, [x21]
   1608c:	b.ne	16098 <PyInit__decimal@@Base+0xf534>  // b.any
   16090:	mov	x0, x21
   16094:	bl	65c0 <_Py_Dealloc@plt>
   16098:	ldr	w1, [sp, #12]
   1609c:	mov	x0, x19
   160a0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   160a4:	cbz	w0, 161a0 <PyInit__decimal@@Base+0xf63c>
   160a8:	ldr	x8, [x22]
   160ac:	subs	x8, x8, #0x1
   160b0:	str	x8, [x22]
   160b4:	b.ne	1619c <PyInit__decimal@@Base+0xf638>  // b.any
   160b8:	mov	x0, x22
   160bc:	b	16198 <PyInit__decimal@@Base+0xf634>
   160c0:	ldr	x8, [x20]
   160c4:	subs	x8, x8, #0x1
   160c8:	str	x8, [x20]
   160cc:	b.ne	160d8 <PyInit__decimal@@Base+0xf574>  // b.any
   160d0:	mov	x0, x20
   160d4:	bl	65c0 <_Py_Dealloc@plt>
   160d8:	ldr	x8, [x21]
   160dc:	subs	x8, x8, #0x1
   160e0:	str	x8, [x21]
   160e4:	b.ne	1619c <PyInit__decimal@@Base+0xf638>  // b.any
   160e8:	mov	x0, x21
   160ec:	b	16198 <PyInit__decimal@@Base+0xf634>
   160f0:	ldr	x8, [x20, #8]
   160f4:	ldrb	w9, [x8, #171]
   160f8:	tbnz	w9, #0, 16148 <PyInit__decimal@@Base+0xf5e4>
   160fc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16100:	ldr	x9, [x9, #3936]
   16104:	ldr	x2, [x8, #24]
   16108:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1610c:	add	x1, x1, #0xd63
   16110:	ldr	x0, [x9]
   16114:	bl	6a00 <PyErr_Format@plt>
   16118:	b	1619c <PyInit__decimal@@Base+0xf638>
   1611c:	ldr	x8, [x21, #8]
   16120:	ldrb	w9, [x8, #171]
   16124:	tbnz	w9, #0, 16168 <PyInit__decimal@@Base+0xf604>
   16128:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1612c:	ldr	x9, [x9, #3936]
   16130:	ldr	x2, [x8, #24]
   16134:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16138:	add	x1, x1, #0xd63
   1613c:	ldr	x0, [x9]
   16140:	bl	6a00 <PyErr_Format@plt>
   16144:	b	16184 <PyInit__decimal@@Base+0xf620>
   16148:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1614c:	add	x0, x0, #0x320
   16150:	mov	x1, x20
   16154:	mov	x2, x19
   16158:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1615c:	mov	x20, x0
   16160:	cbnz	x0, 15ff0 <PyInit__decimal@@Base+0xf48c>
   16164:	b	1619c <PyInit__decimal@@Base+0xf638>
   16168:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1616c:	add	x0, x0, #0x320
   16170:	mov	x1, x21
   16174:	mov	x2, x19
   16178:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1617c:	mov	x21, x0
   16180:	cbnz	x0, 1601c <PyInit__decimal@@Base+0xf4b8>
   16184:	ldr	x8, [x20]
   16188:	subs	x8, x8, #0x1
   1618c:	str	x8, [x20]
   16190:	b.ne	1619c <PyInit__decimal@@Base+0xf638>  // b.any
   16194:	mov	x0, x20
   16198:	bl	65c0 <_Py_Dealloc@plt>
   1619c:	mov	x22, xzr
   161a0:	mov	x0, x22
   161a4:	ldp	x20, x19, [sp, #64]
   161a8:	ldp	x22, x21, [sp, #48]
   161ac:	ldp	x29, x30, [sp, #32]
   161b0:	add	sp, sp, #0x50
   161b4:	ret
   161b8:	sub	sp, sp, #0x50
   161bc:	stp	x29, x30, [sp, #32]
   161c0:	stp	x22, x21, [sp, #48]
   161c4:	stp	x20, x19, [sp, #64]
   161c8:	add	x29, sp, #0x20
   161cc:	mov	x8, x1
   161d0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   161d4:	mov	x19, x0
   161d8:	add	x1, x1, #0x84a
   161dc:	sub	x2, x29, #0x8
   161e0:	add	x3, sp, #0x10
   161e4:	mov	x0, x8
   161e8:	str	wzr, [sp, #12]
   161ec:	bl	68d0 <PyArg_ParseTuple@plt>
   161f0:	cbz	w0, 163d4 <PyInit__decimal@@Base+0xf870>
   161f4:	ldur	x20, [x29, #-8]
   161f8:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   161fc:	add	x22, x22, #0x320
   16200:	ldr	x0, [x20, #8]
   16204:	cmp	x0, x22
   16208:	b.eq	1621c <PyInit__decimal@@Base+0xf6b8>  // b.none
   1620c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16210:	add	x1, x1, #0x320
   16214:	bl	69b0 <PyType_IsSubtype@plt>
   16218:	cbz	w0, 16328 <PyInit__decimal@@Base+0xf7c4>
   1621c:	ldr	x8, [x20]
   16220:	add	x8, x8, #0x1
   16224:	str	x8, [x20]
   16228:	ldr	x21, [sp, #16]
   1622c:	ldr	x0, [x21, #8]
   16230:	cmp	x0, x22
   16234:	b.eq	16248 <PyInit__decimal@@Base+0xf6e4>  // b.none
   16238:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1623c:	add	x1, x1, #0x320
   16240:	bl	69b0 <PyType_IsSubtype@plt>
   16244:	cbz	w0, 16354 <PyInit__decimal@@Base+0xf7f0>
   16248:	ldr	x8, [x21]
   1624c:	add	x8, x8, #0x1
   16250:	str	x8, [x21]
   16254:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16258:	add	x0, x0, #0x320
   1625c:	bl	6940 <_PyObject_New@plt>
   16260:	cbz	x0, 162f8 <PyInit__decimal@@Base+0xf794>
   16264:	mov	w8, #0x30                  	// #48
   16268:	mov	x22, x0
   1626c:	strb	w8, [x0, #24]!
   16270:	mov	x9, #0xffffffffffffffff    	// #-1
   16274:	mov	w10, #0x4                   	// #4
   16278:	add	x1, x20, #0x18
   1627c:	add	x2, x21, #0x18
   16280:	add	x8, x0, #0x30
   16284:	add	x3, x19, #0x10
   16288:	add	x4, sp, #0xc
   1628c:	stur	x9, [x0, #-8]
   16290:	stp	xzr, xzr, [x0, #8]
   16294:	stp	xzr, x10, [x0, #24]
   16298:	str	x8, [x0, #40]
   1629c:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   162a0:	ldr	x8, [x20]
   162a4:	subs	x8, x8, #0x1
   162a8:	str	x8, [x20]
   162ac:	b.ne	162b8 <PyInit__decimal@@Base+0xf754>  // b.any
   162b0:	mov	x0, x20
   162b4:	bl	65c0 <_Py_Dealloc@plt>
   162b8:	ldr	x8, [x21]
   162bc:	subs	x8, x8, #0x1
   162c0:	str	x8, [x21]
   162c4:	b.ne	162d0 <PyInit__decimal@@Base+0xf76c>  // b.any
   162c8:	mov	x0, x21
   162cc:	bl	65c0 <_Py_Dealloc@plt>
   162d0:	ldr	w1, [sp, #12]
   162d4:	mov	x0, x19
   162d8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   162dc:	cbz	w0, 163d8 <PyInit__decimal@@Base+0xf874>
   162e0:	ldr	x8, [x22]
   162e4:	subs	x8, x8, #0x1
   162e8:	str	x8, [x22]
   162ec:	b.ne	163d4 <PyInit__decimal@@Base+0xf870>  // b.any
   162f0:	mov	x0, x22
   162f4:	b	163d0 <PyInit__decimal@@Base+0xf86c>
   162f8:	ldr	x8, [x20]
   162fc:	subs	x8, x8, #0x1
   16300:	str	x8, [x20]
   16304:	b.ne	16310 <PyInit__decimal@@Base+0xf7ac>  // b.any
   16308:	mov	x0, x20
   1630c:	bl	65c0 <_Py_Dealloc@plt>
   16310:	ldr	x8, [x21]
   16314:	subs	x8, x8, #0x1
   16318:	str	x8, [x21]
   1631c:	b.ne	163d4 <PyInit__decimal@@Base+0xf870>  // b.any
   16320:	mov	x0, x21
   16324:	b	163d0 <PyInit__decimal@@Base+0xf86c>
   16328:	ldr	x8, [x20, #8]
   1632c:	ldrb	w9, [x8, #171]
   16330:	tbnz	w9, #0, 16380 <PyInit__decimal@@Base+0xf81c>
   16334:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16338:	ldr	x9, [x9, #3936]
   1633c:	ldr	x2, [x8, #24]
   16340:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16344:	add	x1, x1, #0xd63
   16348:	ldr	x0, [x9]
   1634c:	bl	6a00 <PyErr_Format@plt>
   16350:	b	163d4 <PyInit__decimal@@Base+0xf870>
   16354:	ldr	x8, [x21, #8]
   16358:	ldrb	w9, [x8, #171]
   1635c:	tbnz	w9, #0, 163a0 <PyInit__decimal@@Base+0xf83c>
   16360:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16364:	ldr	x9, [x9, #3936]
   16368:	ldr	x2, [x8, #24]
   1636c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16370:	add	x1, x1, #0xd63
   16374:	ldr	x0, [x9]
   16378:	bl	6a00 <PyErr_Format@plt>
   1637c:	b	163bc <PyInit__decimal@@Base+0xf858>
   16380:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16384:	add	x0, x0, #0x320
   16388:	mov	x1, x20
   1638c:	mov	x2, x19
   16390:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16394:	mov	x20, x0
   16398:	cbnz	x0, 16228 <PyInit__decimal@@Base+0xf6c4>
   1639c:	b	163d4 <PyInit__decimal@@Base+0xf870>
   163a0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   163a4:	add	x0, x0, #0x320
   163a8:	mov	x1, x21
   163ac:	mov	x2, x19
   163b0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   163b4:	mov	x21, x0
   163b8:	cbnz	x0, 16254 <PyInit__decimal@@Base+0xf6f0>
   163bc:	ldr	x8, [x20]
   163c0:	subs	x8, x8, #0x1
   163c4:	str	x8, [x20]
   163c8:	b.ne	163d4 <PyInit__decimal@@Base+0xf870>  // b.any
   163cc:	mov	x0, x20
   163d0:	bl	65c0 <_Py_Dealloc@plt>
   163d4:	mov	x22, xzr
   163d8:	mov	x0, x22
   163dc:	ldp	x20, x19, [sp, #64]
   163e0:	ldp	x22, x21, [sp, #48]
   163e4:	ldp	x29, x30, [sp, #32]
   163e8:	add	sp, sp, #0x50
   163ec:	ret
   163f0:	sub	sp, sp, #0x50
   163f4:	stp	x29, x30, [sp, #32]
   163f8:	stp	x22, x21, [sp, #48]
   163fc:	stp	x20, x19, [sp, #64]
   16400:	add	x29, sp, #0x20
   16404:	mov	x8, x1
   16408:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1640c:	mov	x19, x0
   16410:	add	x1, x1, #0x84a
   16414:	sub	x2, x29, #0x8
   16418:	add	x3, sp, #0x10
   1641c:	mov	x0, x8
   16420:	str	wzr, [sp, #12]
   16424:	bl	68d0 <PyArg_ParseTuple@plt>
   16428:	cbz	w0, 1660c <PyInit__decimal@@Base+0xfaa8>
   1642c:	ldur	x20, [x29, #-8]
   16430:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   16434:	add	x22, x22, #0x320
   16438:	ldr	x0, [x20, #8]
   1643c:	cmp	x0, x22
   16440:	b.eq	16454 <PyInit__decimal@@Base+0xf8f0>  // b.none
   16444:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16448:	add	x1, x1, #0x320
   1644c:	bl	69b0 <PyType_IsSubtype@plt>
   16450:	cbz	w0, 16560 <PyInit__decimal@@Base+0xf9fc>
   16454:	ldr	x8, [x20]
   16458:	add	x8, x8, #0x1
   1645c:	str	x8, [x20]
   16460:	ldr	x21, [sp, #16]
   16464:	ldr	x0, [x21, #8]
   16468:	cmp	x0, x22
   1646c:	b.eq	16480 <PyInit__decimal@@Base+0xf91c>  // b.none
   16470:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16474:	add	x1, x1, #0x320
   16478:	bl	69b0 <PyType_IsSubtype@plt>
   1647c:	cbz	w0, 1658c <PyInit__decimal@@Base+0xfa28>
   16480:	ldr	x8, [x21]
   16484:	add	x8, x8, #0x1
   16488:	str	x8, [x21]
   1648c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16490:	add	x0, x0, #0x320
   16494:	bl	6940 <_PyObject_New@plt>
   16498:	cbz	x0, 16530 <PyInit__decimal@@Base+0xf9cc>
   1649c:	mov	w8, #0x30                  	// #48
   164a0:	mov	x22, x0
   164a4:	strb	w8, [x0, #24]!
   164a8:	mov	x9, #0xffffffffffffffff    	// #-1
   164ac:	mov	w10, #0x4                   	// #4
   164b0:	add	x1, x20, #0x18
   164b4:	add	x2, x21, #0x18
   164b8:	add	x8, x0, #0x30
   164bc:	add	x3, x19, #0x10
   164c0:	add	x4, sp, #0xc
   164c4:	stur	x9, [x0, #-8]
   164c8:	stp	xzr, xzr, [x0, #8]
   164cc:	stp	xzr, x10, [x0, #24]
   164d0:	str	x8, [x0, #40]
   164d4:	bl	2bf14 <PyInit__decimal@@Base+0x253b0>
   164d8:	ldr	x8, [x20]
   164dc:	subs	x8, x8, #0x1
   164e0:	str	x8, [x20]
   164e4:	b.ne	164f0 <PyInit__decimal@@Base+0xf98c>  // b.any
   164e8:	mov	x0, x20
   164ec:	bl	65c0 <_Py_Dealloc@plt>
   164f0:	ldr	x8, [x21]
   164f4:	subs	x8, x8, #0x1
   164f8:	str	x8, [x21]
   164fc:	b.ne	16508 <PyInit__decimal@@Base+0xf9a4>  // b.any
   16500:	mov	x0, x21
   16504:	bl	65c0 <_Py_Dealloc@plt>
   16508:	ldr	w1, [sp, #12]
   1650c:	mov	x0, x19
   16510:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   16514:	cbz	w0, 16610 <PyInit__decimal@@Base+0xfaac>
   16518:	ldr	x8, [x22]
   1651c:	subs	x8, x8, #0x1
   16520:	str	x8, [x22]
   16524:	b.ne	1660c <PyInit__decimal@@Base+0xfaa8>  // b.any
   16528:	mov	x0, x22
   1652c:	b	16608 <PyInit__decimal@@Base+0xfaa4>
   16530:	ldr	x8, [x20]
   16534:	subs	x8, x8, #0x1
   16538:	str	x8, [x20]
   1653c:	b.ne	16548 <PyInit__decimal@@Base+0xf9e4>  // b.any
   16540:	mov	x0, x20
   16544:	bl	65c0 <_Py_Dealloc@plt>
   16548:	ldr	x8, [x21]
   1654c:	subs	x8, x8, #0x1
   16550:	str	x8, [x21]
   16554:	b.ne	1660c <PyInit__decimal@@Base+0xfaa8>  // b.any
   16558:	mov	x0, x21
   1655c:	b	16608 <PyInit__decimal@@Base+0xfaa4>
   16560:	ldr	x8, [x20, #8]
   16564:	ldrb	w9, [x8, #171]
   16568:	tbnz	w9, #0, 165b8 <PyInit__decimal@@Base+0xfa54>
   1656c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16570:	ldr	x9, [x9, #3936]
   16574:	ldr	x2, [x8, #24]
   16578:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1657c:	add	x1, x1, #0xd63
   16580:	ldr	x0, [x9]
   16584:	bl	6a00 <PyErr_Format@plt>
   16588:	b	1660c <PyInit__decimal@@Base+0xfaa8>
   1658c:	ldr	x8, [x21, #8]
   16590:	ldrb	w9, [x8, #171]
   16594:	tbnz	w9, #0, 165d8 <PyInit__decimal@@Base+0xfa74>
   16598:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1659c:	ldr	x9, [x9, #3936]
   165a0:	ldr	x2, [x8, #24]
   165a4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   165a8:	add	x1, x1, #0xd63
   165ac:	ldr	x0, [x9]
   165b0:	bl	6a00 <PyErr_Format@plt>
   165b4:	b	165f4 <PyInit__decimal@@Base+0xfa90>
   165b8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   165bc:	add	x0, x0, #0x320
   165c0:	mov	x1, x20
   165c4:	mov	x2, x19
   165c8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   165cc:	mov	x20, x0
   165d0:	cbnz	x0, 16460 <PyInit__decimal@@Base+0xf8fc>
   165d4:	b	1660c <PyInit__decimal@@Base+0xfaa8>
   165d8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   165dc:	add	x0, x0, #0x320
   165e0:	mov	x1, x21
   165e4:	mov	x2, x19
   165e8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   165ec:	mov	x21, x0
   165f0:	cbnz	x0, 1648c <PyInit__decimal@@Base+0xf928>
   165f4:	ldr	x8, [x20]
   165f8:	subs	x8, x8, #0x1
   165fc:	str	x8, [x20]
   16600:	b.ne	1660c <PyInit__decimal@@Base+0xfaa8>  // b.any
   16604:	mov	x0, x20
   16608:	bl	65c0 <_Py_Dealloc@plt>
   1660c:	mov	x22, xzr
   16610:	mov	x0, x22
   16614:	ldp	x20, x19, [sp, #64]
   16618:	ldp	x22, x21, [sp, #48]
   1661c:	ldp	x29, x30, [sp, #32]
   16620:	add	sp, sp, #0x50
   16624:	ret
   16628:	sub	sp, sp, #0x50
   1662c:	stp	x29, x30, [sp, #32]
   16630:	stp	x22, x21, [sp, #48]
   16634:	stp	x20, x19, [sp, #64]
   16638:	add	x29, sp, #0x20
   1663c:	mov	x8, x1
   16640:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   16644:	mov	x19, x0
   16648:	add	x1, x1, #0x84a
   1664c:	sub	x2, x29, #0x8
   16650:	add	x3, sp, #0x10
   16654:	mov	x0, x8
   16658:	str	wzr, [sp, #12]
   1665c:	bl	68d0 <PyArg_ParseTuple@plt>
   16660:	cbz	w0, 16844 <PyInit__decimal@@Base+0xfce0>
   16664:	ldur	x20, [x29, #-8]
   16668:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   1666c:	add	x22, x22, #0x320
   16670:	ldr	x0, [x20, #8]
   16674:	cmp	x0, x22
   16678:	b.eq	1668c <PyInit__decimal@@Base+0xfb28>  // b.none
   1667c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16680:	add	x1, x1, #0x320
   16684:	bl	69b0 <PyType_IsSubtype@plt>
   16688:	cbz	w0, 16798 <PyInit__decimal@@Base+0xfc34>
   1668c:	ldr	x8, [x20]
   16690:	add	x8, x8, #0x1
   16694:	str	x8, [x20]
   16698:	ldr	x21, [sp, #16]
   1669c:	ldr	x0, [x21, #8]
   166a0:	cmp	x0, x22
   166a4:	b.eq	166b8 <PyInit__decimal@@Base+0xfb54>  // b.none
   166a8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   166ac:	add	x1, x1, #0x320
   166b0:	bl	69b0 <PyType_IsSubtype@plt>
   166b4:	cbz	w0, 167c4 <PyInit__decimal@@Base+0xfc60>
   166b8:	ldr	x8, [x21]
   166bc:	add	x8, x8, #0x1
   166c0:	str	x8, [x21]
   166c4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   166c8:	add	x0, x0, #0x320
   166cc:	bl	6940 <_PyObject_New@plt>
   166d0:	cbz	x0, 16768 <PyInit__decimal@@Base+0xfc04>
   166d4:	mov	w8, #0x30                  	// #48
   166d8:	mov	x22, x0
   166dc:	strb	w8, [x0, #24]!
   166e0:	mov	x9, #0xffffffffffffffff    	// #-1
   166e4:	mov	w10, #0x4                   	// #4
   166e8:	add	x1, x20, #0x18
   166ec:	add	x2, x21, #0x18
   166f0:	add	x8, x0, #0x30
   166f4:	add	x3, x19, #0x10
   166f8:	add	x4, sp, #0xc
   166fc:	stur	x9, [x0, #-8]
   16700:	stp	xzr, xzr, [x0, #8]
   16704:	stp	xzr, x10, [x0, #24]
   16708:	str	x8, [x0, #40]
   1670c:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   16710:	ldr	x8, [x20]
   16714:	subs	x8, x8, #0x1
   16718:	str	x8, [x20]
   1671c:	b.ne	16728 <PyInit__decimal@@Base+0xfbc4>  // b.any
   16720:	mov	x0, x20
   16724:	bl	65c0 <_Py_Dealloc@plt>
   16728:	ldr	x8, [x21]
   1672c:	subs	x8, x8, #0x1
   16730:	str	x8, [x21]
   16734:	b.ne	16740 <PyInit__decimal@@Base+0xfbdc>  // b.any
   16738:	mov	x0, x21
   1673c:	bl	65c0 <_Py_Dealloc@plt>
   16740:	ldr	w1, [sp, #12]
   16744:	mov	x0, x19
   16748:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   1674c:	cbz	w0, 16848 <PyInit__decimal@@Base+0xfce4>
   16750:	ldr	x8, [x22]
   16754:	subs	x8, x8, #0x1
   16758:	str	x8, [x22]
   1675c:	b.ne	16844 <PyInit__decimal@@Base+0xfce0>  // b.any
   16760:	mov	x0, x22
   16764:	b	16840 <PyInit__decimal@@Base+0xfcdc>
   16768:	ldr	x8, [x20]
   1676c:	subs	x8, x8, #0x1
   16770:	str	x8, [x20]
   16774:	b.ne	16780 <PyInit__decimal@@Base+0xfc1c>  // b.any
   16778:	mov	x0, x20
   1677c:	bl	65c0 <_Py_Dealloc@plt>
   16780:	ldr	x8, [x21]
   16784:	subs	x8, x8, #0x1
   16788:	str	x8, [x21]
   1678c:	b.ne	16844 <PyInit__decimal@@Base+0xfce0>  // b.any
   16790:	mov	x0, x21
   16794:	b	16840 <PyInit__decimal@@Base+0xfcdc>
   16798:	ldr	x8, [x20, #8]
   1679c:	ldrb	w9, [x8, #171]
   167a0:	tbnz	w9, #0, 167f0 <PyInit__decimal@@Base+0xfc8c>
   167a4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   167a8:	ldr	x9, [x9, #3936]
   167ac:	ldr	x2, [x8, #24]
   167b0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   167b4:	add	x1, x1, #0xd63
   167b8:	ldr	x0, [x9]
   167bc:	bl	6a00 <PyErr_Format@plt>
   167c0:	b	16844 <PyInit__decimal@@Base+0xfce0>
   167c4:	ldr	x8, [x21, #8]
   167c8:	ldrb	w9, [x8, #171]
   167cc:	tbnz	w9, #0, 16810 <PyInit__decimal@@Base+0xfcac>
   167d0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   167d4:	ldr	x9, [x9, #3936]
   167d8:	ldr	x2, [x8, #24]
   167dc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   167e0:	add	x1, x1, #0xd63
   167e4:	ldr	x0, [x9]
   167e8:	bl	6a00 <PyErr_Format@plt>
   167ec:	b	1682c <PyInit__decimal@@Base+0xfcc8>
   167f0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   167f4:	add	x0, x0, #0x320
   167f8:	mov	x1, x20
   167fc:	mov	x2, x19
   16800:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16804:	mov	x20, x0
   16808:	cbnz	x0, 16698 <PyInit__decimal@@Base+0xfb34>
   1680c:	b	16844 <PyInit__decimal@@Base+0xfce0>
   16810:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16814:	add	x0, x0, #0x320
   16818:	mov	x1, x21
   1681c:	mov	x2, x19
   16820:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16824:	mov	x21, x0
   16828:	cbnz	x0, 166c4 <PyInit__decimal@@Base+0xfb60>
   1682c:	ldr	x8, [x20]
   16830:	subs	x8, x8, #0x1
   16834:	str	x8, [x20]
   16838:	b.ne	16844 <PyInit__decimal@@Base+0xfce0>  // b.any
   1683c:	mov	x0, x20
   16840:	bl	65c0 <_Py_Dealloc@plt>
   16844:	mov	x22, xzr
   16848:	mov	x0, x22
   1684c:	ldp	x20, x19, [sp, #64]
   16850:	ldp	x22, x21, [sp, #48]
   16854:	ldp	x29, x30, [sp, #32]
   16858:	add	sp, sp, #0x50
   1685c:	ret
   16860:	sub	sp, sp, #0x60
   16864:	stp	x29, x30, [sp, #32]
   16868:	stp	x24, x23, [sp, #48]
   1686c:	stp	x22, x21, [sp, #64]
   16870:	stp	x20, x19, [sp, #80]
   16874:	add	x29, sp, #0x20
   16878:	adrp	x23, 49000 <PyInit__decimal@@Base+0x4249c>
   1687c:	ldr	x23, [x23, #4008]
   16880:	mov	x8, x2
   16884:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   16888:	adrp	x3, 4c000 <PyInit__decimal@@Base+0x4549c>
   1688c:	mov	x20, x0
   16890:	add	x2, x2, #0x27a
   16894:	add	x3, x3, #0x338
   16898:	sub	x4, x29, #0x8
   1689c:	add	x5, sp, #0x10
   168a0:	add	x6, sp, #0x8
   168a4:	mov	x0, x1
   168a8:	mov	x1, x8
   168ac:	str	x23, [sp, #8]
   168b0:	str	wzr, [sp, #4]
   168b4:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   168b8:	cbz	w0, 16b9c <PyInit__decimal@@Base+0x10038>
   168bc:	ldur	x19, [x29, #-8]
   168c0:	adrp	x24, 4a000 <PyInit__decimal@@Base+0x4349c>
   168c4:	add	x24, x24, #0x320
   168c8:	ldr	x0, [x19, #8]
   168cc:	cmp	x0, x24
   168d0:	b.eq	168e4 <PyInit__decimal@@Base+0xfd80>  // b.none
   168d4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   168d8:	add	x1, x1, #0x320
   168dc:	bl	69b0 <PyType_IsSubtype@plt>
   168e0:	cbz	w0, 16a14 <PyInit__decimal@@Base+0xfeb0>
   168e4:	ldr	x8, [x19]
   168e8:	add	x8, x8, #0x1
   168ec:	str	x8, [x19]
   168f0:	ldr	x21, [sp, #16]
   168f4:	ldr	x0, [x21, #8]
   168f8:	cmp	x0, x24
   168fc:	b.eq	16910 <PyInit__decimal@@Base+0xfdac>  // b.none
   16900:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16904:	add	x1, x1, #0x320
   16908:	bl	69b0 <PyType_IsSubtype@plt>
   1690c:	cbz	w0, 16a40 <PyInit__decimal@@Base+0xfedc>
   16910:	ldr	x8, [x21]
   16914:	add	x8, x8, #0x1
   16918:	str	x8, [x21]
   1691c:	ldr	x22, [sp, #8]
   16920:	cmp	x22, x23
   16924:	b.eq	16954 <PyInit__decimal@@Base+0xfdf0>  // b.none
   16928:	ldr	x0, [x22, #8]
   1692c:	cmp	x0, x24
   16930:	b.eq	16944 <PyInit__decimal@@Base+0xfde0>  // b.none
   16934:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16938:	add	x1, x1, #0x320
   1693c:	bl	69b0 <PyType_IsSubtype@plt>
   16940:	cbz	w0, 16af0 <PyInit__decimal@@Base+0xff8c>
   16944:	ldr	x8, [x22]
   16948:	add	x8, x8, #0x1
   1694c:	str	x8, [x22]
   16950:	b	16958 <PyInit__decimal@@Base+0xfdf4>
   16954:	mov	x22, xzr
   16958:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1695c:	add	x0, x0, #0x320
   16960:	bl	6940 <_PyObject_New@plt>
   16964:	cbz	x0, 169c8 <PyInit__decimal@@Base+0xfe64>
   16968:	mov	w8, #0x30                  	// #48
   1696c:	mov	x23, x0
   16970:	strb	w8, [x0, #24]!
   16974:	mov	x9, #0xffffffffffffffff    	// #-1
   16978:	mov	w10, #0x4                   	// #4
   1697c:	add	x1, x19, #0x18
   16980:	add	x8, x0, #0x30
   16984:	add	x2, x21, #0x18
   16988:	stur	x9, [x0, #-8]
   1698c:	stp	xzr, xzr, [x0, #8]
   16990:	stp	xzr, x10, [x0, #24]
   16994:	str	x8, [x0, #40]
   16998:	cbz	x22, 16a6c <PyInit__decimal@@Base+0xff08>
   1699c:	add	x3, x22, #0x18
   169a0:	add	x4, x20, #0x10
   169a4:	add	x5, sp, #0x4
   169a8:	bl	2b0f0 <PyInit__decimal@@Base+0x2458c>
   169ac:	ldr	x8, [x22]
   169b0:	subs	x8, x8, #0x1
   169b4:	str	x8, [x22]
   169b8:	b.ne	16a78 <PyInit__decimal@@Base+0xff14>  // b.any
   169bc:	mov	x0, x22
   169c0:	bl	65c0 <_Py_Dealloc@plt>
   169c4:	b	16a78 <PyInit__decimal@@Base+0xff14>
   169c8:	ldr	x8, [x19]
   169cc:	subs	x8, x8, #0x1
   169d0:	str	x8, [x19]
   169d4:	b.ne	169e0 <PyInit__decimal@@Base+0xfe7c>  // b.any
   169d8:	mov	x0, x19
   169dc:	bl	65c0 <_Py_Dealloc@plt>
   169e0:	ldr	x8, [x21]
   169e4:	subs	x8, x8, #0x1
   169e8:	str	x8, [x21]
   169ec:	b.ne	169f8 <PyInit__decimal@@Base+0xfe94>  // b.any
   169f0:	mov	x0, x21
   169f4:	bl	65c0 <_Py_Dealloc@plt>
   169f8:	cbz	x22, 16b9c <PyInit__decimal@@Base+0x10038>
   169fc:	ldr	x8, [x22]
   16a00:	subs	x8, x8, #0x1
   16a04:	str	x8, [x22]
   16a08:	b.ne	16b9c <PyInit__decimal@@Base+0x10038>  // b.any
   16a0c:	mov	x0, x22
   16a10:	b	16b98 <PyInit__decimal@@Base+0x10034>
   16a14:	ldr	x8, [x19, #8]
   16a18:	ldrb	w9, [x8, #171]
   16a1c:	tbnz	w9, #0, 16ad0 <PyInit__decimal@@Base+0xff6c>
   16a20:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16a24:	ldr	x9, [x9, #3936]
   16a28:	ldr	x2, [x8, #24]
   16a2c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16a30:	add	x1, x1, #0xd63
   16a34:	ldr	x0, [x9]
   16a38:	bl	6a00 <PyErr_Format@plt>
   16a3c:	b	16b9c <PyInit__decimal@@Base+0x10038>
   16a40:	ldr	x8, [x21, #8]
   16a44:	ldrb	w9, [x8, #171]
   16a48:	tbnz	w9, #0, 16b1c <PyInit__decimal@@Base+0xffb8>
   16a4c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16a50:	ldr	x9, [x9, #3936]
   16a54:	ldr	x2, [x8, #24]
   16a58:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16a5c:	add	x1, x1, #0xd63
   16a60:	ldr	x0, [x9]
   16a64:	bl	6a00 <PyErr_Format@plt>
   16a68:	b	16b38 <PyInit__decimal@@Base+0xffd4>
   16a6c:	add	x3, x20, #0x10
   16a70:	add	x4, sp, #0x4
   16a74:	bl	2a2a4 <PyInit__decimal@@Base+0x23740>
   16a78:	ldr	x8, [x19]
   16a7c:	subs	x8, x8, #0x1
   16a80:	str	x8, [x19]
   16a84:	b.ne	16a90 <PyInit__decimal@@Base+0xff2c>  // b.any
   16a88:	mov	x0, x19
   16a8c:	bl	65c0 <_Py_Dealloc@plt>
   16a90:	ldr	x8, [x21]
   16a94:	subs	x8, x8, #0x1
   16a98:	str	x8, [x21]
   16a9c:	b.ne	16aa8 <PyInit__decimal@@Base+0xff44>  // b.any
   16aa0:	mov	x0, x21
   16aa4:	bl	65c0 <_Py_Dealloc@plt>
   16aa8:	ldr	w1, [sp, #4]
   16aac:	mov	x0, x20
   16ab0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   16ab4:	cbz	w0, 16ba0 <PyInit__decimal@@Base+0x1003c>
   16ab8:	ldr	x8, [x23]
   16abc:	subs	x8, x8, #0x1
   16ac0:	str	x8, [x23]
   16ac4:	b.ne	16b9c <PyInit__decimal@@Base+0x10038>  // b.any
   16ac8:	mov	x0, x23
   16acc:	b	16b98 <PyInit__decimal@@Base+0x10034>
   16ad0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16ad4:	add	x0, x0, #0x320
   16ad8:	mov	x1, x19
   16adc:	mov	x2, x20
   16ae0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16ae4:	mov	x19, x0
   16ae8:	cbnz	x0, 168f0 <PyInit__decimal@@Base+0xfd8c>
   16aec:	b	16b9c <PyInit__decimal@@Base+0x10038>
   16af0:	ldr	x8, [x22, #8]
   16af4:	ldrb	w9, [x8, #171]
   16af8:	tbnz	w9, #0, 16b50 <PyInit__decimal@@Base+0xffec>
   16afc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16b00:	ldr	x9, [x9, #3936]
   16b04:	ldr	x2, [x8, #24]
   16b08:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16b0c:	add	x1, x1, #0xd63
   16b10:	ldr	x0, [x9]
   16b14:	bl	6a00 <PyErr_Format@plt>
   16b18:	b	16b6c <PyInit__decimal@@Base+0x10008>
   16b1c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16b20:	add	x0, x0, #0x320
   16b24:	mov	x1, x21
   16b28:	mov	x2, x20
   16b2c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16b30:	mov	x21, x0
   16b34:	cbnz	x0, 1691c <PyInit__decimal@@Base+0xfdb8>
   16b38:	ldr	x8, [x19]
   16b3c:	subs	x8, x8, #0x1
   16b40:	str	x8, [x19]
   16b44:	b.ne	16b9c <PyInit__decimal@@Base+0x10038>  // b.any
   16b48:	mov	x0, x19
   16b4c:	b	16b98 <PyInit__decimal@@Base+0x10034>
   16b50:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16b54:	add	x0, x0, #0x320
   16b58:	mov	x1, x22
   16b5c:	mov	x2, x20
   16b60:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16b64:	mov	x22, x0
   16b68:	cbnz	x0, 16958 <PyInit__decimal@@Base+0xfdf4>
   16b6c:	ldr	x8, [x19]
   16b70:	subs	x8, x8, #0x1
   16b74:	str	x8, [x19]
   16b78:	b.ne	16b84 <PyInit__decimal@@Base+0x10020>  // b.any
   16b7c:	mov	x0, x19
   16b80:	bl	65c0 <_Py_Dealloc@plt>
   16b84:	ldr	x8, [x21]
   16b88:	subs	x8, x8, #0x1
   16b8c:	str	x8, [x21]
   16b90:	b.ne	16b9c <PyInit__decimal@@Base+0x10038>  // b.any
   16b94:	mov	x0, x21
   16b98:	bl	65c0 <_Py_Dealloc@plt>
   16b9c:	mov	x23, xzr
   16ba0:	mov	x0, x23
   16ba4:	ldp	x20, x19, [sp, #80]
   16ba8:	ldp	x22, x21, [sp, #64]
   16bac:	ldp	x24, x23, [sp, #48]
   16bb0:	ldp	x29, x30, [sp, #32]
   16bb4:	add	sp, sp, #0x60
   16bb8:	ret
   16bbc:	sub	sp, sp, #0x60
   16bc0:	stp	x29, x30, [sp, #32]
   16bc4:	str	x23, [sp, #48]
   16bc8:	stp	x22, x21, [sp, #64]
   16bcc:	stp	x20, x19, [sp, #80]
   16bd0:	add	x29, sp, #0x20
   16bd4:	mov	x8, x1
   16bd8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   16bdc:	mov	x19, x0
   16be0:	add	x1, x1, #0x849
   16be4:	add	x2, x29, #0x18
   16be8:	sub	x3, x29, #0x8
   16bec:	add	x4, sp, #0x10
   16bf0:	mov	x0, x8
   16bf4:	str	wzr, [sp, #12]
   16bf8:	bl	68d0 <PyArg_ParseTuple@plt>
   16bfc:	cbz	w0, 16eb8 <PyInit__decimal@@Base+0x10354>
   16c00:	ldr	x20, [x29, #24]
   16c04:	adrp	x23, 4a000 <PyInit__decimal@@Base+0x4349c>
   16c08:	add	x23, x23, #0x320
   16c0c:	ldr	x0, [x20, #8]
   16c10:	cmp	x0, x23
   16c14:	b.eq	16c28 <PyInit__decimal@@Base+0x100c4>  // b.none
   16c18:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16c1c:	add	x1, x1, #0x320
   16c20:	bl	69b0 <PyType_IsSubtype@plt>
   16c24:	cbz	w0, 16d4c <PyInit__decimal@@Base+0x101e8>
   16c28:	ldr	x8, [x20]
   16c2c:	add	x8, x8, #0x1
   16c30:	str	x8, [x20]
   16c34:	ldur	x21, [x29, #-8]
   16c38:	ldr	x0, [x21, #8]
   16c3c:	cmp	x0, x23
   16c40:	b.eq	16c54 <PyInit__decimal@@Base+0x100f0>  // b.none
   16c44:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16c48:	add	x1, x1, #0x320
   16c4c:	bl	69b0 <PyType_IsSubtype@plt>
   16c50:	cbz	w0, 16dc0 <PyInit__decimal@@Base+0x1025c>
   16c54:	ldr	x8, [x21]
   16c58:	add	x8, x8, #0x1
   16c5c:	str	x8, [x21]
   16c60:	ldr	x22, [sp, #16]
   16c64:	ldr	x0, [x22, #8]
   16c68:	cmp	x0, x23
   16c6c:	b.eq	16c80 <PyInit__decimal@@Base+0x1011c>  // b.none
   16c70:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16c74:	add	x1, x1, #0x320
   16c78:	bl	69b0 <PyType_IsSubtype@plt>
   16c7c:	cbz	w0, 16dec <PyInit__decimal@@Base+0x10288>
   16c80:	ldr	x8, [x22]
   16c84:	add	x8, x8, #0x1
   16c88:	str	x8, [x22]
   16c8c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16c90:	add	x0, x0, #0x320
   16c94:	bl	6940 <_PyObject_New@plt>
   16c98:	cbz	x0, 16d78 <PyInit__decimal@@Base+0x10214>
   16c9c:	mov	w8, #0x30                  	// #48
   16ca0:	mov	x23, x0
   16ca4:	strb	w8, [x0, #24]!
   16ca8:	mov	x9, #0xffffffffffffffff    	// #-1
   16cac:	mov	w10, #0x4                   	// #4
   16cb0:	add	x1, x20, #0x18
   16cb4:	add	x2, x21, #0x18
   16cb8:	add	x3, x22, #0x18
   16cbc:	add	x8, x0, #0x30
   16cc0:	add	x4, x19, #0x10
   16cc4:	add	x5, sp, #0xc
   16cc8:	stur	x9, [x0, #-8]
   16ccc:	stp	xzr, xzr, [x0, #8]
   16cd0:	stp	xzr, x10, [x0, #24]
   16cd4:	str	x8, [x0, #40]
   16cd8:	bl	275c8 <PyInit__decimal@@Base+0x20a64>
   16cdc:	ldr	x8, [x20]
   16ce0:	subs	x8, x8, #0x1
   16ce4:	str	x8, [x20]
   16ce8:	b.ne	16cf4 <PyInit__decimal@@Base+0x10190>  // b.any
   16cec:	mov	x0, x20
   16cf0:	bl	65c0 <_Py_Dealloc@plt>
   16cf4:	ldr	x8, [x21]
   16cf8:	subs	x8, x8, #0x1
   16cfc:	str	x8, [x21]
   16d00:	b.ne	16d0c <PyInit__decimal@@Base+0x101a8>  // b.any
   16d04:	mov	x0, x21
   16d08:	bl	65c0 <_Py_Dealloc@plt>
   16d0c:	ldr	x8, [x22]
   16d10:	subs	x8, x8, #0x1
   16d14:	str	x8, [x22]
   16d18:	b.ne	16d24 <PyInit__decimal@@Base+0x101c0>  // b.any
   16d1c:	mov	x0, x22
   16d20:	bl	65c0 <_Py_Dealloc@plt>
   16d24:	ldr	w1, [sp, #12]
   16d28:	mov	x0, x19
   16d2c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   16d30:	cbz	w0, 16ebc <PyInit__decimal@@Base+0x10358>
   16d34:	ldr	x8, [x23]
   16d38:	subs	x8, x8, #0x1
   16d3c:	str	x8, [x23]
   16d40:	b.ne	16eb8 <PyInit__decimal@@Base+0x10354>  // b.any
   16d44:	mov	x0, x23
   16d48:	b	16eb4 <PyInit__decimal@@Base+0x10350>
   16d4c:	ldr	x8, [x20, #8]
   16d50:	ldrb	w9, [x8, #171]
   16d54:	tbnz	w9, #0, 16e18 <PyInit__decimal@@Base+0x102b4>
   16d58:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16d5c:	ldr	x9, [x9, #3936]
   16d60:	ldr	x2, [x8, #24]
   16d64:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16d68:	add	x1, x1, #0xd63
   16d6c:	ldr	x0, [x9]
   16d70:	bl	6a00 <PyErr_Format@plt>
   16d74:	b	16eb8 <PyInit__decimal@@Base+0x10354>
   16d78:	ldr	x8, [x20]
   16d7c:	subs	x8, x8, #0x1
   16d80:	str	x8, [x20]
   16d84:	b.ne	16d90 <PyInit__decimal@@Base+0x1022c>  // b.any
   16d88:	mov	x0, x20
   16d8c:	bl	65c0 <_Py_Dealloc@plt>
   16d90:	ldr	x8, [x21]
   16d94:	subs	x8, x8, #0x1
   16d98:	str	x8, [x21]
   16d9c:	b.ne	16da8 <PyInit__decimal@@Base+0x10244>  // b.any
   16da0:	mov	x0, x21
   16da4:	bl	65c0 <_Py_Dealloc@plt>
   16da8:	ldr	x8, [x22]
   16dac:	subs	x8, x8, #0x1
   16db0:	str	x8, [x22]
   16db4:	b.ne	16eb8 <PyInit__decimal@@Base+0x10354>  // b.any
   16db8:	mov	x0, x22
   16dbc:	b	16eb4 <PyInit__decimal@@Base+0x10350>
   16dc0:	ldr	x8, [x21, #8]
   16dc4:	ldrb	w9, [x8, #171]
   16dc8:	tbnz	w9, #0, 16e38 <PyInit__decimal@@Base+0x102d4>
   16dcc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16dd0:	ldr	x9, [x9, #3936]
   16dd4:	ldr	x2, [x8, #24]
   16dd8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16ddc:	add	x1, x1, #0xd63
   16de0:	ldr	x0, [x9]
   16de4:	bl	6a00 <PyErr_Format@plt>
   16de8:	b	16e54 <PyInit__decimal@@Base+0x102f0>
   16dec:	ldr	x8, [x22, #8]
   16df0:	ldrb	w9, [x8, #171]
   16df4:	tbnz	w9, #0, 16e6c <PyInit__decimal@@Base+0x10308>
   16df8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16dfc:	ldr	x9, [x9, #3936]
   16e00:	ldr	x2, [x8, #24]
   16e04:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   16e08:	add	x1, x1, #0xd63
   16e0c:	ldr	x0, [x9]
   16e10:	bl	6a00 <PyErr_Format@plt>
   16e14:	b	16e88 <PyInit__decimal@@Base+0x10324>
   16e18:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16e1c:	add	x0, x0, #0x320
   16e20:	mov	x1, x20
   16e24:	mov	x2, x19
   16e28:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16e2c:	mov	x20, x0
   16e30:	cbnz	x0, 16c34 <PyInit__decimal@@Base+0x100d0>
   16e34:	b	16eb8 <PyInit__decimal@@Base+0x10354>
   16e38:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16e3c:	add	x0, x0, #0x320
   16e40:	mov	x1, x21
   16e44:	mov	x2, x19
   16e48:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16e4c:	mov	x21, x0
   16e50:	cbnz	x0, 16c60 <PyInit__decimal@@Base+0x100fc>
   16e54:	ldr	x8, [x20]
   16e58:	subs	x8, x8, #0x1
   16e5c:	str	x8, [x20]
   16e60:	b.ne	16eb8 <PyInit__decimal@@Base+0x10354>  // b.any
   16e64:	mov	x0, x20
   16e68:	b	16eb4 <PyInit__decimal@@Base+0x10350>
   16e6c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   16e70:	add	x0, x0, #0x320
   16e74:	mov	x1, x22
   16e78:	mov	x2, x19
   16e7c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   16e80:	mov	x22, x0
   16e84:	cbnz	x0, 16c8c <PyInit__decimal@@Base+0x10128>
   16e88:	ldr	x8, [x20]
   16e8c:	subs	x8, x8, #0x1
   16e90:	str	x8, [x20]
   16e94:	b.ne	16ea0 <PyInit__decimal@@Base+0x1033c>  // b.any
   16e98:	mov	x0, x20
   16e9c:	bl	65c0 <_Py_Dealloc@plt>
   16ea0:	ldr	x8, [x21]
   16ea4:	subs	x8, x8, #0x1
   16ea8:	str	x8, [x21]
   16eac:	b.ne	16eb8 <PyInit__decimal@@Base+0x10354>  // b.any
   16eb0:	mov	x0, x21
   16eb4:	bl	65c0 <_Py_Dealloc@plt>
   16eb8:	mov	x23, xzr
   16ebc:	mov	x0, x23
   16ec0:	ldp	x20, x19, [sp, #80]
   16ec4:	ldp	x22, x21, [sp, #64]
   16ec8:	ldr	x23, [sp, #48]
   16ecc:	ldp	x29, x30, [sp, #32]
   16ed0:	add	sp, sp, #0x60
   16ed4:	ret
   16ed8:	stp	x29, x30, [sp, #-16]!
   16edc:	mov	x29, sp
   16ee0:	add	x0, x0, #0x10
   16ee4:	bl	1fb7c <PyInit__decimal@@Base+0x19018>
   16ee8:	ldp	x29, x30, [sp], #16
   16eec:	b	6690 <PyLong_FromSsize_t@plt>
   16ef0:	stp	x29, x30, [sp, #-16]!
   16ef4:	mov	x29, sp
   16ef8:	add	x0, x0, #0x10
   16efc:	bl	1fb90 <PyInit__decimal@@Base+0x1902c>
   16f00:	ldp	x29, x30, [sp], #16
   16f04:	b	6690 <PyLong_FromSsize_t@plt>
   16f08:	b	e838 <PyInit__decimal@@Base+0x7cd4>
   16f0c:	stp	x29, x30, [sp, #-32]!
   16f10:	str	x19, [sp, #16]
   16f14:	mov	x29, sp
   16f18:	ldr	x0, [x1, #8]
   16f1c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   16f20:	add	x8, x8, #0x320
   16f24:	mov	x19, x1
   16f28:	cmp	x0, x8
   16f2c:	b.eq	16f40 <PyInit__decimal@@Base+0x103dc>  // b.none
   16f30:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16f34:	add	x1, x1, #0x320
   16f38:	bl	69b0 <PyType_IsSubtype@plt>
   16f3c:	cbz	w0, 16f70 <PyInit__decimal@@Base+0x1040c>
   16f40:	add	x0, x19, #0x18
   16f44:	bl	1fe58 <PyInit__decimal@@Base+0x192f4>
   16f48:	cbz	w0, 16f58 <PyInit__decimal@@Base+0x103f4>
   16f4c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   16f50:	ldr	x0, [x0, #4024]
   16f54:	b	16f60 <PyInit__decimal@@Base+0x103fc>
   16f58:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   16f5c:	ldr	x0, [x0, #3976]
   16f60:	ldr	x8, [x0]
   16f64:	add	x8, x8, #0x1
   16f68:	str	x8, [x0]
   16f6c:	b	16f8c <PyInit__decimal@@Base+0x10428>
   16f70:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   16f74:	ldr	x8, [x8, #3936]
   16f78:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   16f7c:	add	x1, x1, #0x722
   16f80:	ldr	x0, [x8]
   16f84:	bl	6640 <PyErr_SetString@plt>
   16f88:	mov	x0, xzr
   16f8c:	ldr	x19, [sp, #16]
   16f90:	ldp	x29, x30, [sp], #32
   16f94:	ret
   16f98:	stp	x29, x30, [sp, #-32]!
   16f9c:	stp	x20, x19, [sp, #16]
   16fa0:	mov	x29, sp
   16fa4:	ldr	x8, [x1, #8]
   16fa8:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   16fac:	add	x9, x9, #0x320
   16fb0:	mov	x19, x1
   16fb4:	cmp	x8, x9
   16fb8:	b.eq	16fd4 <PyInit__decimal@@Base+0x10470>  // b.none
   16fbc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   16fc0:	mov	x20, x0
   16fc4:	add	x1, x1, #0x320
   16fc8:	mov	x0, x8
   16fcc:	bl	69b0 <PyType_IsSubtype@plt>
   16fd0:	cbz	w0, 17028 <PyInit__decimal@@Base+0x104c4>
   16fd4:	ldr	x8, [x19]
   16fd8:	add	x8, x8, #0x1
   16fdc:	str	x8, [x19]
   16fe0:	add	x0, x19, #0x18
   16fe4:	bl	1fe60 <PyInit__decimal@@Base+0x192fc>
   16fe8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   16fec:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   16ff0:	ldr	x8, [x8, #4024]
   16ff4:	ldr	x9, [x9, #3976]
   16ff8:	cmp	w0, #0x0
   16ffc:	csel	x20, x9, x8, eq  // eq = none
   17000:	ldr	x8, [x20]
   17004:	add	x8, x8, #0x1
   17008:	str	x8, [x20]
   1700c:	ldr	x8, [x19]
   17010:	subs	x8, x8, #0x1
   17014:	str	x8, [x19]
   17018:	b.ne	17074 <PyInit__decimal@@Base+0x10510>  // b.any
   1701c:	mov	x0, x19
   17020:	bl	65c0 <_Py_Dealloc@plt>
   17024:	b	17074 <PyInit__decimal@@Base+0x10510>
   17028:	ldr	x8, [x19, #8]
   1702c:	ldrb	w9, [x8, #171]
   17030:	tbnz	w9, #0, 17054 <PyInit__decimal@@Base+0x104f0>
   17034:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17038:	ldr	x9, [x9, #3936]
   1703c:	ldr	x2, [x8, #24]
   17040:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17044:	add	x1, x1, #0xd63
   17048:	ldr	x0, [x9]
   1704c:	bl	6a00 <PyErr_Format@plt>
   17050:	b	17070 <PyInit__decimal@@Base+0x1050c>
   17054:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17058:	add	x0, x0, #0x320
   1705c:	mov	x1, x19
   17060:	mov	x2, x20
   17064:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17068:	mov	x19, x0
   1706c:	cbnz	x0, 16fe0 <PyInit__decimal@@Base+0x1047c>
   17070:	mov	x20, xzr
   17074:	mov	x0, x20
   17078:	ldp	x20, x19, [sp, #16]
   1707c:	ldp	x29, x30, [sp], #32
   17080:	ret
   17084:	stp	x29, x30, [sp, #-32]!
   17088:	stp	x20, x19, [sp, #16]
   1708c:	mov	x29, sp
   17090:	ldr	x8, [x1, #8]
   17094:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17098:	add	x9, x9, #0x320
   1709c:	mov	x19, x1
   170a0:	cmp	x8, x9
   170a4:	b.eq	170c0 <PyInit__decimal@@Base+0x1055c>  // b.none
   170a8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   170ac:	mov	x20, x0
   170b0:	add	x1, x1, #0x320
   170b4:	mov	x0, x8
   170b8:	bl	69b0 <PyType_IsSubtype@plt>
   170bc:	cbz	w0, 17114 <PyInit__decimal@@Base+0x105b0>
   170c0:	ldr	x8, [x19]
   170c4:	add	x8, x8, #0x1
   170c8:	str	x8, [x19]
   170cc:	add	x0, x19, #0x18
   170d0:	bl	1fe70 <PyInit__decimal@@Base+0x1930c>
   170d4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   170d8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   170dc:	ldr	x8, [x8, #4024]
   170e0:	ldr	x9, [x9, #3976]
   170e4:	cmp	w0, #0x0
   170e8:	csel	x20, x9, x8, eq  // eq = none
   170ec:	ldr	x8, [x20]
   170f0:	add	x8, x8, #0x1
   170f4:	str	x8, [x20]
   170f8:	ldr	x8, [x19]
   170fc:	subs	x8, x8, #0x1
   17100:	str	x8, [x19]
   17104:	b.ne	17160 <PyInit__decimal@@Base+0x105fc>  // b.any
   17108:	mov	x0, x19
   1710c:	bl	65c0 <_Py_Dealloc@plt>
   17110:	b	17160 <PyInit__decimal@@Base+0x105fc>
   17114:	ldr	x8, [x19, #8]
   17118:	ldrb	w9, [x8, #171]
   1711c:	tbnz	w9, #0, 17140 <PyInit__decimal@@Base+0x105dc>
   17120:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17124:	ldr	x9, [x9, #3936]
   17128:	ldr	x2, [x8, #24]
   1712c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17130:	add	x1, x1, #0xd63
   17134:	ldr	x0, [x9]
   17138:	bl	6a00 <PyErr_Format@plt>
   1713c:	b	1715c <PyInit__decimal@@Base+0x105f8>
   17140:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17144:	add	x0, x0, #0x320
   17148:	mov	x1, x19
   1714c:	mov	x2, x20
   17150:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17154:	mov	x19, x0
   17158:	cbnz	x0, 170cc <PyInit__decimal@@Base+0x10568>
   1715c:	mov	x20, xzr
   17160:	mov	x0, x20
   17164:	ldp	x20, x19, [sp, #16]
   17168:	ldp	x29, x30, [sp], #32
   1716c:	ret
   17170:	stp	x29, x30, [sp, #-32]!
   17174:	stp	x20, x19, [sp, #16]
   17178:	mov	x29, sp
   1717c:	ldr	x8, [x1, #8]
   17180:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17184:	add	x9, x9, #0x320
   17188:	mov	x19, x1
   1718c:	cmp	x8, x9
   17190:	b.eq	171ac <PyInit__decimal@@Base+0x10648>  // b.none
   17194:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17198:	mov	x20, x0
   1719c:	add	x1, x1, #0x320
   171a0:	mov	x0, x8
   171a4:	bl	69b0 <PyType_IsSubtype@plt>
   171a8:	cbz	w0, 17200 <PyInit__decimal@@Base+0x1069c>
   171ac:	ldr	x8, [x19]
   171b0:	add	x8, x8, #0x1
   171b4:	str	x8, [x19]
   171b8:	add	x0, x19, #0x18
   171bc:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   171c0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   171c4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   171c8:	ldr	x8, [x8, #4024]
   171cc:	ldr	x9, [x9, #3976]
   171d0:	cmp	w0, #0x0
   171d4:	csel	x20, x9, x8, eq  // eq = none
   171d8:	ldr	x8, [x20]
   171dc:	add	x8, x8, #0x1
   171e0:	str	x8, [x20]
   171e4:	ldr	x8, [x19]
   171e8:	subs	x8, x8, #0x1
   171ec:	str	x8, [x19]
   171f0:	b.ne	1724c <PyInit__decimal@@Base+0x106e8>  // b.any
   171f4:	mov	x0, x19
   171f8:	bl	65c0 <_Py_Dealloc@plt>
   171fc:	b	1724c <PyInit__decimal@@Base+0x106e8>
   17200:	ldr	x8, [x19, #8]
   17204:	ldrb	w9, [x8, #171]
   17208:	tbnz	w9, #0, 1722c <PyInit__decimal@@Base+0x106c8>
   1720c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17210:	ldr	x9, [x9, #3936]
   17214:	ldr	x2, [x8, #24]
   17218:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1721c:	add	x1, x1, #0xd63
   17220:	ldr	x0, [x9]
   17224:	bl	6a00 <PyErr_Format@plt>
   17228:	b	17248 <PyInit__decimal@@Base+0x106e4>
   1722c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17230:	add	x0, x0, #0x320
   17234:	mov	x1, x19
   17238:	mov	x2, x20
   1723c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17240:	mov	x19, x0
   17244:	cbnz	x0, 171b8 <PyInit__decimal@@Base+0x10654>
   17248:	mov	x20, xzr
   1724c:	mov	x0, x20
   17250:	ldp	x20, x19, [sp, #16]
   17254:	ldp	x29, x30, [sp], #32
   17258:	ret
   1725c:	stp	x29, x30, [sp, #-32]!
   17260:	stp	x20, x19, [sp, #16]
   17264:	mov	x29, sp
   17268:	ldr	x8, [x1, #8]
   1726c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17270:	add	x9, x9, #0x320
   17274:	mov	x19, x1
   17278:	cmp	x8, x9
   1727c:	mov	x20, x0
   17280:	b.eq	17298 <PyInit__decimal@@Base+0x10734>  // b.none
   17284:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17288:	add	x1, x1, #0x320
   1728c:	mov	x0, x8
   17290:	bl	69b0 <PyType_IsSubtype@plt>
   17294:	cbz	w0, 172f0 <PyInit__decimal@@Base+0x1078c>
   17298:	ldr	x8, [x19]
   1729c:	add	x8, x8, #0x1
   172a0:	str	x8, [x19]
   172a4:	add	x0, x19, #0x18
   172a8:	add	x1, x20, #0x10
   172ac:	bl	1ff20 <PyInit__decimal@@Base+0x193bc>
   172b0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   172b4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   172b8:	ldr	x8, [x8, #4024]
   172bc:	ldr	x9, [x9, #3976]
   172c0:	cmp	w0, #0x0
   172c4:	csel	x20, x9, x8, eq  // eq = none
   172c8:	ldr	x8, [x20]
   172cc:	add	x8, x8, #0x1
   172d0:	str	x8, [x20]
   172d4:	ldr	x8, [x19]
   172d8:	subs	x8, x8, #0x1
   172dc:	str	x8, [x19]
   172e0:	b.ne	1733c <PyInit__decimal@@Base+0x107d8>  // b.any
   172e4:	mov	x0, x19
   172e8:	bl	65c0 <_Py_Dealloc@plt>
   172ec:	b	1733c <PyInit__decimal@@Base+0x107d8>
   172f0:	ldr	x8, [x19, #8]
   172f4:	ldrb	w9, [x8, #171]
   172f8:	tbnz	w9, #0, 1731c <PyInit__decimal@@Base+0x107b8>
   172fc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17300:	ldr	x9, [x9, #3936]
   17304:	ldr	x2, [x8, #24]
   17308:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1730c:	add	x1, x1, #0xd63
   17310:	ldr	x0, [x9]
   17314:	bl	6a00 <PyErr_Format@plt>
   17318:	b	17338 <PyInit__decimal@@Base+0x107d4>
   1731c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17320:	add	x0, x0, #0x320
   17324:	mov	x1, x19
   17328:	mov	x2, x20
   1732c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17330:	mov	x19, x0
   17334:	cbnz	x0, 172a4 <PyInit__decimal@@Base+0x10740>
   17338:	mov	x20, xzr
   1733c:	mov	x0, x20
   17340:	ldp	x20, x19, [sp, #16]
   17344:	ldp	x29, x30, [sp], #32
   17348:	ret
   1734c:	stp	x29, x30, [sp, #-32]!
   17350:	stp	x20, x19, [sp, #16]
   17354:	mov	x29, sp
   17358:	ldr	x8, [x1, #8]
   1735c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17360:	add	x9, x9, #0x320
   17364:	mov	x19, x1
   17368:	cmp	x8, x9
   1736c:	b.eq	17388 <PyInit__decimal@@Base+0x10824>  // b.none
   17370:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17374:	mov	x20, x0
   17378:	add	x1, x1, #0x320
   1737c:	mov	x0, x8
   17380:	bl	69b0 <PyType_IsSubtype@plt>
   17384:	cbz	w0, 173dc <PyInit__decimal@@Base+0x10878>
   17388:	ldr	x8, [x19]
   1738c:	add	x8, x8, #0x1
   17390:	str	x8, [x19]
   17394:	add	x0, x19, #0x18
   17398:	bl	1fea4 <PyInit__decimal@@Base+0x19340>
   1739c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   173a0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   173a4:	ldr	x8, [x8, #4024]
   173a8:	ldr	x9, [x9, #3976]
   173ac:	cmp	w0, #0x0
   173b0:	csel	x20, x9, x8, eq  // eq = none
   173b4:	ldr	x8, [x20]
   173b8:	add	x8, x8, #0x1
   173bc:	str	x8, [x20]
   173c0:	ldr	x8, [x19]
   173c4:	subs	x8, x8, #0x1
   173c8:	str	x8, [x19]
   173cc:	b.ne	17428 <PyInit__decimal@@Base+0x108c4>  // b.any
   173d0:	mov	x0, x19
   173d4:	bl	65c0 <_Py_Dealloc@plt>
   173d8:	b	17428 <PyInit__decimal@@Base+0x108c4>
   173dc:	ldr	x8, [x19, #8]
   173e0:	ldrb	w9, [x8, #171]
   173e4:	tbnz	w9, #0, 17408 <PyInit__decimal@@Base+0x108a4>
   173e8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   173ec:	ldr	x9, [x9, #3936]
   173f0:	ldr	x2, [x8, #24]
   173f4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   173f8:	add	x1, x1, #0xd63
   173fc:	ldr	x0, [x9]
   17400:	bl	6a00 <PyErr_Format@plt>
   17404:	b	17424 <PyInit__decimal@@Base+0x108c0>
   17408:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1740c:	add	x0, x0, #0x320
   17410:	mov	x1, x19
   17414:	mov	x2, x20
   17418:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1741c:	mov	x19, x0
   17420:	cbnz	x0, 17394 <PyInit__decimal@@Base+0x10830>
   17424:	mov	x20, xzr
   17428:	mov	x0, x20
   1742c:	ldp	x20, x19, [sp, #16]
   17430:	ldp	x29, x30, [sp], #32
   17434:	ret
   17438:	stp	x29, x30, [sp, #-32]!
   1743c:	stp	x20, x19, [sp, #16]
   17440:	mov	x29, sp
   17444:	ldr	x8, [x1, #8]
   17448:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1744c:	add	x9, x9, #0x320
   17450:	mov	x19, x1
   17454:	cmp	x8, x9
   17458:	b.eq	17474 <PyInit__decimal@@Base+0x10910>  // b.none
   1745c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17460:	mov	x20, x0
   17464:	add	x1, x1, #0x320
   17468:	mov	x0, x8
   1746c:	bl	69b0 <PyType_IsSubtype@plt>
   17470:	cbz	w0, 174c8 <PyInit__decimal@@Base+0x10964>
   17474:	ldr	x8, [x19]
   17478:	add	x8, x8, #0x1
   1747c:	str	x8, [x19]
   17480:	add	x0, x19, #0x18
   17484:	bl	1feb0 <PyInit__decimal@@Base+0x1934c>
   17488:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1748c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17490:	ldr	x8, [x8, #4024]
   17494:	ldr	x9, [x9, #3976]
   17498:	cmp	w0, #0x0
   1749c:	csel	x20, x9, x8, eq  // eq = none
   174a0:	ldr	x8, [x20]
   174a4:	add	x8, x8, #0x1
   174a8:	str	x8, [x20]
   174ac:	ldr	x8, [x19]
   174b0:	subs	x8, x8, #0x1
   174b4:	str	x8, [x19]
   174b8:	b.ne	17514 <PyInit__decimal@@Base+0x109b0>  // b.any
   174bc:	mov	x0, x19
   174c0:	bl	65c0 <_Py_Dealloc@plt>
   174c4:	b	17514 <PyInit__decimal@@Base+0x109b0>
   174c8:	ldr	x8, [x19, #8]
   174cc:	ldrb	w9, [x8, #171]
   174d0:	tbnz	w9, #0, 174f4 <PyInit__decimal@@Base+0x10990>
   174d4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   174d8:	ldr	x9, [x9, #3936]
   174dc:	ldr	x2, [x8, #24]
   174e0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   174e4:	add	x1, x1, #0xd63
   174e8:	ldr	x0, [x9]
   174ec:	bl	6a00 <PyErr_Format@plt>
   174f0:	b	17510 <PyInit__decimal@@Base+0x109ac>
   174f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   174f8:	add	x0, x0, #0x320
   174fc:	mov	x1, x19
   17500:	mov	x2, x20
   17504:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17508:	mov	x19, x0
   1750c:	cbnz	x0, 17480 <PyInit__decimal@@Base+0x1091c>
   17510:	mov	x20, xzr
   17514:	mov	x0, x20
   17518:	ldp	x20, x19, [sp, #16]
   1751c:	ldp	x29, x30, [sp], #32
   17520:	ret
   17524:	stp	x29, x30, [sp, #-32]!
   17528:	stp	x20, x19, [sp, #16]
   1752c:	mov	x29, sp
   17530:	ldr	x8, [x1, #8]
   17534:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17538:	add	x9, x9, #0x320
   1753c:	mov	x19, x1
   17540:	cmp	x8, x9
   17544:	b.eq	17560 <PyInit__decimal@@Base+0x109fc>  // b.none
   17548:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1754c:	mov	x20, x0
   17550:	add	x1, x1, #0x320
   17554:	mov	x0, x8
   17558:	bl	69b0 <PyType_IsSubtype@plt>
   1755c:	cbz	w0, 175b4 <PyInit__decimal@@Base+0x10a50>
   17560:	ldr	x8, [x19]
   17564:	add	x8, x8, #0x1
   17568:	str	x8, [x19]
   1756c:	add	x0, x19, #0x18
   17570:	bl	1febc <PyInit__decimal@@Base+0x19358>
   17574:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   17578:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1757c:	ldr	x8, [x8, #4024]
   17580:	ldr	x9, [x9, #3976]
   17584:	cmp	w0, #0x0
   17588:	csel	x20, x9, x8, eq  // eq = none
   1758c:	ldr	x8, [x20]
   17590:	add	x8, x8, #0x1
   17594:	str	x8, [x20]
   17598:	ldr	x8, [x19]
   1759c:	subs	x8, x8, #0x1
   175a0:	str	x8, [x19]
   175a4:	b.ne	17600 <PyInit__decimal@@Base+0x10a9c>  // b.any
   175a8:	mov	x0, x19
   175ac:	bl	65c0 <_Py_Dealloc@plt>
   175b0:	b	17600 <PyInit__decimal@@Base+0x10a9c>
   175b4:	ldr	x8, [x19, #8]
   175b8:	ldrb	w9, [x8, #171]
   175bc:	tbnz	w9, #0, 175e0 <PyInit__decimal@@Base+0x10a7c>
   175c0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   175c4:	ldr	x9, [x9, #3936]
   175c8:	ldr	x2, [x8, #24]
   175cc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   175d0:	add	x1, x1, #0xd63
   175d4:	ldr	x0, [x9]
   175d8:	bl	6a00 <PyErr_Format@plt>
   175dc:	b	175fc <PyInit__decimal@@Base+0x10a98>
   175e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   175e4:	add	x0, x0, #0x320
   175e8:	mov	x1, x19
   175ec:	mov	x2, x20
   175f0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   175f4:	mov	x19, x0
   175f8:	cbnz	x0, 1756c <PyInit__decimal@@Base+0x10a08>
   175fc:	mov	x20, xzr
   17600:	mov	x0, x20
   17604:	ldp	x20, x19, [sp, #16]
   17608:	ldp	x29, x30, [sp], #32
   1760c:	ret
   17610:	stp	x29, x30, [sp, #-32]!
   17614:	stp	x20, x19, [sp, #16]
   17618:	mov	x29, sp
   1761c:	ldr	x8, [x1, #8]
   17620:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17624:	add	x9, x9, #0x320
   17628:	mov	x19, x1
   1762c:	cmp	x8, x9
   17630:	mov	x20, x0
   17634:	b.eq	1764c <PyInit__decimal@@Base+0x10ae8>  // b.none
   17638:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1763c:	add	x1, x1, #0x320
   17640:	mov	x0, x8
   17644:	bl	69b0 <PyType_IsSubtype@plt>
   17648:	cbz	w0, 176a4 <PyInit__decimal@@Base+0x10b40>
   1764c:	ldr	x8, [x19]
   17650:	add	x8, x8, #0x1
   17654:	str	x8, [x19]
   17658:	add	x0, x19, #0x18
   1765c:	add	x1, x20, #0x10
   17660:	bl	1ff64 <PyInit__decimal@@Base+0x19400>
   17664:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   17668:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1766c:	ldr	x8, [x8, #4024]
   17670:	ldr	x9, [x9, #3976]
   17674:	cmp	w0, #0x0
   17678:	csel	x20, x9, x8, eq  // eq = none
   1767c:	ldr	x8, [x20]
   17680:	add	x8, x8, #0x1
   17684:	str	x8, [x20]
   17688:	ldr	x8, [x19]
   1768c:	subs	x8, x8, #0x1
   17690:	str	x8, [x19]
   17694:	b.ne	176f0 <PyInit__decimal@@Base+0x10b8c>  // b.any
   17698:	mov	x0, x19
   1769c:	bl	65c0 <_Py_Dealloc@plt>
   176a0:	b	176f0 <PyInit__decimal@@Base+0x10b8c>
   176a4:	ldr	x8, [x19, #8]
   176a8:	ldrb	w9, [x8, #171]
   176ac:	tbnz	w9, #0, 176d0 <PyInit__decimal@@Base+0x10b6c>
   176b0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   176b4:	ldr	x9, [x9, #3936]
   176b8:	ldr	x2, [x8, #24]
   176bc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   176c0:	add	x1, x1, #0xd63
   176c4:	ldr	x0, [x9]
   176c8:	bl	6a00 <PyErr_Format@plt>
   176cc:	b	176ec <PyInit__decimal@@Base+0x10b88>
   176d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   176d4:	add	x0, x0, #0x320
   176d8:	mov	x1, x19
   176dc:	mov	x2, x20
   176e0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   176e4:	mov	x19, x0
   176e8:	cbnz	x0, 17658 <PyInit__decimal@@Base+0x10af4>
   176ec:	mov	x20, xzr
   176f0:	mov	x0, x20
   176f4:	ldp	x20, x19, [sp, #16]
   176f8:	ldp	x29, x30, [sp], #32
   176fc:	ret
   17700:	stp	x29, x30, [sp, #-32]!
   17704:	stp	x20, x19, [sp, #16]
   17708:	mov	x29, sp
   1770c:	ldr	x8, [x1, #8]
   17710:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17714:	add	x9, x9, #0x320
   17718:	mov	x19, x1
   1771c:	cmp	x8, x9
   17720:	b.eq	1773c <PyInit__decimal@@Base+0x10bd8>  // b.none
   17724:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17728:	mov	x20, x0
   1772c:	add	x1, x1, #0x320
   17730:	mov	x0, x8
   17734:	bl	69b0 <PyType_IsSubtype@plt>
   17738:	cbz	w0, 17790 <PyInit__decimal@@Base+0x10c2c>
   1773c:	ldr	x8, [x19]
   17740:	add	x8, x8, #0x1
   17744:	str	x8, [x19]
   17748:	add	x0, x19, #0x18
   1774c:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   17750:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   17754:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17758:	ldr	x8, [x8, #4024]
   1775c:	ldr	x9, [x9, #3976]
   17760:	cmp	w0, #0x0
   17764:	csel	x20, x9, x8, eq  // eq = none
   17768:	ldr	x8, [x20]
   1776c:	add	x8, x8, #0x1
   17770:	str	x8, [x20]
   17774:	ldr	x8, [x19]
   17778:	subs	x8, x8, #0x1
   1777c:	str	x8, [x19]
   17780:	b.ne	177dc <PyInit__decimal@@Base+0x10c78>  // b.any
   17784:	mov	x0, x19
   17788:	bl	65c0 <_Py_Dealloc@plt>
   1778c:	b	177dc <PyInit__decimal@@Base+0x10c78>
   17790:	ldr	x8, [x19, #8]
   17794:	ldrb	w9, [x8, #171]
   17798:	tbnz	w9, #0, 177bc <PyInit__decimal@@Base+0x10c58>
   1779c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   177a0:	ldr	x9, [x9, #3936]
   177a4:	ldr	x2, [x8, #24]
   177a8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   177ac:	add	x1, x1, #0xd63
   177b0:	ldr	x0, [x9]
   177b4:	bl	6a00 <PyErr_Format@plt>
   177b8:	b	177d8 <PyInit__decimal@@Base+0x10c74>
   177bc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   177c0:	add	x0, x0, #0x320
   177c4:	mov	x1, x19
   177c8:	mov	x2, x20
   177cc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   177d0:	mov	x19, x0
   177d4:	cbnz	x0, 17748 <PyInit__decimal@@Base+0x10be4>
   177d8:	mov	x20, xzr
   177dc:	mov	x0, x20
   177e0:	ldp	x20, x19, [sp, #16]
   177e4:	ldp	x29, x30, [sp], #32
   177e8:	ret
   177ec:	stp	x29, x30, [sp, #-32]!
   177f0:	stp	x20, x19, [sp, #16]
   177f4:	mov	x29, sp
   177f8:	ldr	x8, [x1, #8]
   177fc:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17800:	add	x9, x9, #0x320
   17804:	mov	x19, x1
   17808:	cmp	x8, x9
   1780c:	mov	x20, x0
   17810:	b.eq	17828 <PyInit__decimal@@Base+0x10cc4>  // b.none
   17814:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17818:	add	x1, x1, #0x320
   1781c:	mov	x0, x8
   17820:	bl	69b0 <PyType_IsSubtype@plt>
   17824:	cbz	w0, 17860 <PyInit__decimal@@Base+0x10cfc>
   17828:	ldr	x8, [x19]
   1782c:	add	x8, x8, #0x1
   17830:	str	x8, [x19]
   17834:	mov	x0, x19
   17838:	mov	x1, x20
   1783c:	bl	19b40 <PyInit__decimal@@Base+0x12fdc>
   17840:	ldr	x8, [x19]
   17844:	mov	x20, x0
   17848:	subs	x8, x8, #0x1
   1784c:	str	x8, [x19]
   17850:	b.ne	178ac <PyInit__decimal@@Base+0x10d48>  // b.any
   17854:	mov	x0, x19
   17858:	bl	65c0 <_Py_Dealloc@plt>
   1785c:	b	178ac <PyInit__decimal@@Base+0x10d48>
   17860:	ldr	x8, [x19, #8]
   17864:	ldrb	w9, [x8, #171]
   17868:	tbnz	w9, #0, 1788c <PyInit__decimal@@Base+0x10d28>
   1786c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17870:	ldr	x9, [x9, #3936]
   17874:	ldr	x2, [x8, #24]
   17878:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1787c:	add	x1, x1, #0xd63
   17880:	ldr	x0, [x9]
   17884:	bl	6a00 <PyErr_Format@plt>
   17888:	b	178a8 <PyInit__decimal@@Base+0x10d44>
   1788c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17890:	add	x0, x0, #0x320
   17894:	mov	x1, x19
   17898:	mov	x2, x20
   1789c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   178a0:	mov	x19, x0
   178a4:	cbnz	x0, 17834 <PyInit__decimal@@Base+0x10cd0>
   178a8:	mov	x20, xzr
   178ac:	mov	x0, x20
   178b0:	ldp	x20, x19, [sp, #16]
   178b4:	ldp	x29, x30, [sp], #32
   178b8:	ret
   178bc:	stp	x29, x30, [sp, #-32]!
   178c0:	str	x19, [sp, #16]
   178c4:	mov	x29, sp
   178c8:	ldr	x0, [x1, #8]
   178cc:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   178d0:	add	x8, x8, #0x320
   178d4:	mov	x19, x1
   178d8:	cmp	x0, x8
   178dc:	b.eq	178f0 <PyInit__decimal@@Base+0x10d8c>  // b.none
   178e0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   178e4:	add	x1, x1, #0x320
   178e8:	bl	69b0 <PyType_IsSubtype@plt>
   178ec:	cbz	w0, 17900 <PyInit__decimal@@Base+0x10d9c>
   178f0:	ldr	x8, [x19]
   178f4:	add	x8, x8, #0x1
   178f8:	str	x8, [x19]
   178fc:	b	1791c <PyInit__decimal@@Base+0x10db8>
   17900:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   17904:	ldr	x8, [x8, #3936]
   17908:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1790c:	add	x1, x1, #0x722
   17910:	ldr	x0, [x8]
   17914:	bl	6640 <PyErr_SetString@plt>
   17918:	mov	x19, xzr
   1791c:	mov	x0, x19
   17920:	ldr	x19, [sp, #16]
   17924:	ldp	x29, x30, [sp], #32
   17928:	ret
   1792c:	stp	x29, x30, [sp, #-48]!
   17930:	str	x21, [sp, #16]
   17934:	stp	x20, x19, [sp, #32]
   17938:	mov	x29, sp
   1793c:	str	wzr, [x29, #28]
   17940:	ldr	x8, [x1, #8]
   17944:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17948:	add	x9, x9, #0x320
   1794c:	mov	x19, x1
   17950:	cmp	x8, x9
   17954:	mov	x20, x0
   17958:	b.eq	17970 <PyInit__decimal@@Base+0x10e0c>  // b.none
   1795c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17960:	add	x1, x1, #0x320
   17964:	mov	x0, x8
   17968:	bl	69b0 <PyType_IsSubtype@plt>
   1796c:	cbz	w0, 17a1c <PyInit__decimal@@Base+0x10eb8>
   17970:	ldr	x8, [x19]
   17974:	add	x8, x8, #0x1
   17978:	str	x8, [x19]
   1797c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17980:	add	x0, x0, #0x320
   17984:	bl	6940 <_PyObject_New@plt>
   17988:	cbz	x0, 17a00 <PyInit__decimal@@Base+0x10e9c>
   1798c:	mov	w8, #0x30                  	// #48
   17990:	mov	x21, x0
   17994:	strb	w8, [x0, #24]!
   17998:	mov	x9, #0xffffffffffffffff    	// #-1
   1799c:	mov	w10, #0x4                   	// #4
   179a0:	add	x8, x0, #0x30
   179a4:	add	x1, x19, #0x18
   179a8:	add	x2, x29, #0x1c
   179ac:	stur	x9, [x0, #-8]
   179b0:	stp	xzr, xzr, [x0, #8]
   179b4:	stp	xzr, x10, [x0, #24]
   179b8:	str	x8, [x0, #40]
   179bc:	bl	22084 <PyInit__decimal@@Base+0x1b520>
   179c0:	ldr	x8, [x19]
   179c4:	subs	x8, x8, #0x1
   179c8:	str	x8, [x19]
   179cc:	b.ne	179d8 <PyInit__decimal@@Base+0x10e74>  // b.any
   179d0:	mov	x0, x19
   179d4:	bl	65c0 <_Py_Dealloc@plt>
   179d8:	ldr	w1, [x29, #28]
   179dc:	mov	x0, x20
   179e0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   179e4:	cbz	w0, 17a68 <PyInit__decimal@@Base+0x10f04>
   179e8:	ldr	x8, [x21]
   179ec:	subs	x8, x8, #0x1
   179f0:	str	x8, [x21]
   179f4:	b.ne	17a64 <PyInit__decimal@@Base+0x10f00>  // b.any
   179f8:	mov	x0, x21
   179fc:	b	17a14 <PyInit__decimal@@Base+0x10eb0>
   17a00:	ldr	x8, [x19]
   17a04:	subs	x8, x8, #0x1
   17a08:	str	x8, [x19]
   17a0c:	b.ne	17a64 <PyInit__decimal@@Base+0x10f00>  // b.any
   17a10:	mov	x0, x19
   17a14:	bl	65c0 <_Py_Dealloc@plt>
   17a18:	b	17a64 <PyInit__decimal@@Base+0x10f00>
   17a1c:	ldr	x8, [x19, #8]
   17a20:	ldrb	w9, [x8, #171]
   17a24:	tbnz	w9, #0, 17a48 <PyInit__decimal@@Base+0x10ee4>
   17a28:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17a2c:	ldr	x9, [x9, #3936]
   17a30:	ldr	x2, [x8, #24]
   17a34:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17a38:	add	x1, x1, #0xd63
   17a3c:	ldr	x0, [x9]
   17a40:	bl	6a00 <PyErr_Format@plt>
   17a44:	b	17a64 <PyInit__decimal@@Base+0x10f00>
   17a48:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17a4c:	add	x0, x0, #0x320
   17a50:	mov	x1, x19
   17a54:	mov	x2, x20
   17a58:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17a5c:	mov	x19, x0
   17a60:	cbnz	x0, 1797c <PyInit__decimal@@Base+0x10e18>
   17a64:	mov	x21, xzr
   17a68:	mov	x0, x21
   17a6c:	ldp	x20, x19, [sp, #32]
   17a70:	ldr	x21, [sp, #16]
   17a74:	ldp	x29, x30, [sp], #48
   17a78:	ret
   17a7c:	stp	x29, x30, [sp, #-32]!
   17a80:	stp	x20, x19, [sp, #16]
   17a84:	mov	x29, sp
   17a88:	ldr	x8, [x1, #8]
   17a8c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17a90:	add	x9, x9, #0x320
   17a94:	mov	x19, x1
   17a98:	cmp	x8, x9
   17a9c:	b.eq	17ab8 <PyInit__decimal@@Base+0x10f54>  // b.none
   17aa0:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17aa4:	mov	x20, x0
   17aa8:	add	x1, x1, #0x320
   17aac:	mov	x0, x8
   17ab0:	bl	69b0 <PyType_IsSubtype@plt>
   17ab4:	cbz	w0, 17ad4 <PyInit__decimal@@Base+0x10f70>
   17ab8:	ldr	x8, [x19]
   17abc:	add	x8, x8, #0x1
   17ac0:	str	x8, [x19]
   17ac4:	mov	x0, x19
   17ac8:	ldp	x20, x19, [sp, #16]
   17acc:	ldp	x29, x30, [sp], #32
   17ad0:	ret
   17ad4:	ldr	x8, [x19, #8]
   17ad8:	ldrb	w9, [x8, #171]
   17adc:	tbnz	w9, #0, 17b00 <PyInit__decimal@@Base+0x10f9c>
   17ae0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17ae4:	ldr	x9, [x9, #3936]
   17ae8:	ldr	x2, [x8, #24]
   17aec:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17af0:	add	x1, x1, #0xd63
   17af4:	ldr	x0, [x9]
   17af8:	bl	6a00 <PyErr_Format@plt>
   17afc:	b	17b1c <PyInit__decimal@@Base+0x10fb8>
   17b00:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17b04:	add	x0, x0, #0x320
   17b08:	mov	x1, x19
   17b0c:	mov	x2, x20
   17b10:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17b14:	mov	x19, x0
   17b18:	cbnz	x0, 17ac4 <PyInit__decimal@@Base+0x10f60>
   17b1c:	mov	x19, xzr
   17b20:	b	17ac4 <PyInit__decimal@@Base+0x10f60>
   17b24:	stp	x29, x30, [sp, #-48]!
   17b28:	str	x21, [sp, #16]
   17b2c:	stp	x20, x19, [sp, #32]
   17b30:	mov	x29, sp
   17b34:	str	wzr, [x29, #28]
   17b38:	ldr	x8, [x1, #8]
   17b3c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17b40:	add	x9, x9, #0x320
   17b44:	mov	x19, x1
   17b48:	cmp	x8, x9
   17b4c:	mov	x20, x0
   17b50:	b.eq	17b68 <PyInit__decimal@@Base+0x11004>  // b.none
   17b54:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17b58:	add	x1, x1, #0x320
   17b5c:	mov	x0, x8
   17b60:	bl	69b0 <PyType_IsSubtype@plt>
   17b64:	cbz	w0, 17c14 <PyInit__decimal@@Base+0x110b0>
   17b68:	ldr	x8, [x19]
   17b6c:	add	x8, x8, #0x1
   17b70:	str	x8, [x19]
   17b74:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17b78:	add	x0, x0, #0x320
   17b7c:	bl	6940 <_PyObject_New@plt>
   17b80:	cbz	x0, 17bf8 <PyInit__decimal@@Base+0x11094>
   17b84:	mov	w8, #0x30                  	// #48
   17b88:	mov	x21, x0
   17b8c:	strb	w8, [x0, #24]!
   17b90:	mov	x9, #0xffffffffffffffff    	// #-1
   17b94:	mov	w10, #0x4                   	// #4
   17b98:	add	x8, x0, #0x30
   17b9c:	add	x1, x19, #0x18
   17ba0:	add	x2, x29, #0x1c
   17ba4:	stur	x9, [x0, #-8]
   17ba8:	stp	xzr, xzr, [x0, #8]
   17bac:	stp	xzr, x10, [x0, #24]
   17bb0:	str	x8, [x0, #40]
   17bb4:	bl	220b8 <PyInit__decimal@@Base+0x1b554>
   17bb8:	ldr	x8, [x19]
   17bbc:	subs	x8, x8, #0x1
   17bc0:	str	x8, [x19]
   17bc4:	b.ne	17bd0 <PyInit__decimal@@Base+0x1106c>  // b.any
   17bc8:	mov	x0, x19
   17bcc:	bl	65c0 <_Py_Dealloc@plt>
   17bd0:	ldr	w1, [x29, #28]
   17bd4:	mov	x0, x20
   17bd8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   17bdc:	cbz	w0, 17c60 <PyInit__decimal@@Base+0x110fc>
   17be0:	ldr	x8, [x21]
   17be4:	subs	x8, x8, #0x1
   17be8:	str	x8, [x21]
   17bec:	b.ne	17c5c <PyInit__decimal@@Base+0x110f8>  // b.any
   17bf0:	mov	x0, x21
   17bf4:	b	17c0c <PyInit__decimal@@Base+0x110a8>
   17bf8:	ldr	x8, [x19]
   17bfc:	subs	x8, x8, #0x1
   17c00:	str	x8, [x19]
   17c04:	b.ne	17c5c <PyInit__decimal@@Base+0x110f8>  // b.any
   17c08:	mov	x0, x19
   17c0c:	bl	65c0 <_Py_Dealloc@plt>
   17c10:	b	17c5c <PyInit__decimal@@Base+0x110f8>
   17c14:	ldr	x8, [x19, #8]
   17c18:	ldrb	w9, [x8, #171]
   17c1c:	tbnz	w9, #0, 17c40 <PyInit__decimal@@Base+0x110dc>
   17c20:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17c24:	ldr	x9, [x9, #3936]
   17c28:	ldr	x2, [x8, #24]
   17c2c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17c30:	add	x1, x1, #0xd63
   17c34:	ldr	x0, [x9]
   17c38:	bl	6a00 <PyErr_Format@plt>
   17c3c:	b	17c5c <PyInit__decimal@@Base+0x110f8>
   17c40:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17c44:	add	x0, x0, #0x320
   17c48:	mov	x1, x19
   17c4c:	mov	x2, x20
   17c50:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17c54:	mov	x19, x0
   17c58:	cbnz	x0, 17b74 <PyInit__decimal@@Base+0x11010>
   17c5c:	mov	x21, xzr
   17c60:	mov	x0, x21
   17c64:	ldp	x20, x19, [sp, #32]
   17c68:	ldr	x21, [sp, #16]
   17c6c:	ldp	x29, x30, [sp], #48
   17c70:	ret
   17c74:	stp	x29, x30, [sp, #-48]!
   17c78:	str	x21, [sp, #16]
   17c7c:	stp	x20, x19, [sp, #32]
   17c80:	mov	x29, sp
   17c84:	str	wzr, [x29, #28]
   17c88:	ldr	x8, [x1, #8]
   17c8c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17c90:	add	x9, x9, #0x320
   17c94:	mov	x19, x1
   17c98:	cmp	x8, x9
   17c9c:	mov	x20, x0
   17ca0:	b.eq	17cb8 <PyInit__decimal@@Base+0x11154>  // b.none
   17ca4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17ca8:	add	x1, x1, #0x320
   17cac:	mov	x0, x8
   17cb0:	bl	69b0 <PyType_IsSubtype@plt>
   17cb4:	cbz	w0, 17d68 <PyInit__decimal@@Base+0x11204>
   17cb8:	ldr	x8, [x19]
   17cbc:	add	x8, x8, #0x1
   17cc0:	str	x8, [x19]
   17cc4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17cc8:	add	x0, x0, #0x320
   17ccc:	bl	6940 <_PyObject_New@plt>
   17cd0:	cbz	x0, 17d4c <PyInit__decimal@@Base+0x111e8>
   17cd4:	mov	w8, #0x30                  	// #48
   17cd8:	mov	x21, x0
   17cdc:	strb	w8, [x0, #24]!
   17ce0:	mov	x9, #0xffffffffffffffff    	// #-1
   17ce4:	mov	w10, #0x4                   	// #4
   17ce8:	add	x1, x19, #0x18
   17cec:	add	x8, x0, #0x30
   17cf0:	add	x2, x20, #0x10
   17cf4:	add	x3, x29, #0x1c
   17cf8:	stur	x9, [x0, #-8]
   17cfc:	stp	xzr, xzr, [x0, #8]
   17d00:	stp	xzr, x10, [x0, #24]
   17d04:	str	x8, [x0, #40]
   17d08:	bl	238b8 <PyInit__decimal@@Base+0x1cd54>
   17d0c:	ldr	x8, [x19]
   17d10:	subs	x8, x8, #0x1
   17d14:	str	x8, [x19]
   17d18:	b.ne	17d24 <PyInit__decimal@@Base+0x111c0>  // b.any
   17d1c:	mov	x0, x19
   17d20:	bl	65c0 <_Py_Dealloc@plt>
   17d24:	ldr	w1, [x29, #28]
   17d28:	mov	x0, x20
   17d2c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   17d30:	cbz	w0, 17db4 <PyInit__decimal@@Base+0x11250>
   17d34:	ldr	x8, [x21]
   17d38:	subs	x8, x8, #0x1
   17d3c:	str	x8, [x21]
   17d40:	b.ne	17db0 <PyInit__decimal@@Base+0x1124c>  // b.any
   17d44:	mov	x0, x21
   17d48:	b	17d60 <PyInit__decimal@@Base+0x111fc>
   17d4c:	ldr	x8, [x19]
   17d50:	subs	x8, x8, #0x1
   17d54:	str	x8, [x19]
   17d58:	b.ne	17db0 <PyInit__decimal@@Base+0x1124c>  // b.any
   17d5c:	mov	x0, x19
   17d60:	bl	65c0 <_Py_Dealloc@plt>
   17d64:	b	17db0 <PyInit__decimal@@Base+0x1124c>
   17d68:	ldr	x8, [x19, #8]
   17d6c:	ldrb	w9, [x8, #171]
   17d70:	tbnz	w9, #0, 17d94 <PyInit__decimal@@Base+0x11230>
   17d74:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17d78:	ldr	x9, [x9, #3936]
   17d7c:	ldr	x2, [x8, #24]
   17d80:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17d84:	add	x1, x1, #0xd63
   17d88:	ldr	x0, [x9]
   17d8c:	bl	6a00 <PyErr_Format@plt>
   17d90:	b	17db0 <PyInit__decimal@@Base+0x1124c>
   17d94:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17d98:	add	x0, x0, #0x320
   17d9c:	mov	x1, x19
   17da0:	mov	x2, x20
   17da4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17da8:	mov	x19, x0
   17dac:	cbnz	x0, 17cc4 <PyInit__decimal@@Base+0x11160>
   17db0:	mov	x21, xzr
   17db4:	mov	x0, x21
   17db8:	ldp	x20, x19, [sp, #32]
   17dbc:	ldr	x21, [sp, #16]
   17dc0:	ldp	x29, x30, [sp], #48
   17dc4:	ret
   17dc8:	stp	x29, x30, [sp, #-48]!
   17dcc:	str	x21, [sp, #16]
   17dd0:	stp	x20, x19, [sp, #32]
   17dd4:	mov	x29, sp
   17dd8:	str	wzr, [x29, #28]
   17ddc:	ldr	x8, [x1, #8]
   17de0:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17de4:	add	x9, x9, #0x320
   17de8:	mov	x19, x1
   17dec:	cmp	x8, x9
   17df0:	mov	x20, x0
   17df4:	b.eq	17e0c <PyInit__decimal@@Base+0x112a8>  // b.none
   17df8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17dfc:	add	x1, x1, #0x320
   17e00:	mov	x0, x8
   17e04:	bl	69b0 <PyType_IsSubtype@plt>
   17e08:	cbz	w0, 17ebc <PyInit__decimal@@Base+0x11358>
   17e0c:	ldr	x8, [x19]
   17e10:	add	x8, x8, #0x1
   17e14:	str	x8, [x19]
   17e18:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17e1c:	add	x0, x0, #0x320
   17e20:	bl	6940 <_PyObject_New@plt>
   17e24:	cbz	x0, 17ea0 <PyInit__decimal@@Base+0x1133c>
   17e28:	mov	w8, #0x30                  	// #48
   17e2c:	mov	x21, x0
   17e30:	strb	w8, [x0, #24]!
   17e34:	mov	x9, #0xffffffffffffffff    	// #-1
   17e38:	mov	w10, #0x4                   	// #4
   17e3c:	add	x1, x19, #0x18
   17e40:	add	x8, x0, #0x30
   17e44:	add	x2, x20, #0x10
   17e48:	add	x3, x29, #0x1c
   17e4c:	stur	x9, [x0, #-8]
   17e50:	stp	xzr, xzr, [x0, #8]
   17e54:	stp	xzr, x10, [x0, #24]
   17e58:	str	x8, [x0, #40]
   17e5c:	bl	23558 <PyInit__decimal@@Base+0x1c9f4>
   17e60:	ldr	x8, [x19]
   17e64:	subs	x8, x8, #0x1
   17e68:	str	x8, [x19]
   17e6c:	b.ne	17e78 <PyInit__decimal@@Base+0x11314>  // b.any
   17e70:	mov	x0, x19
   17e74:	bl	65c0 <_Py_Dealloc@plt>
   17e78:	ldr	w1, [x29, #28]
   17e7c:	mov	x0, x20
   17e80:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   17e84:	cbz	w0, 17f08 <PyInit__decimal@@Base+0x113a4>
   17e88:	ldr	x8, [x21]
   17e8c:	subs	x8, x8, #0x1
   17e90:	str	x8, [x21]
   17e94:	b.ne	17f04 <PyInit__decimal@@Base+0x113a0>  // b.any
   17e98:	mov	x0, x21
   17e9c:	b	17eb4 <PyInit__decimal@@Base+0x11350>
   17ea0:	ldr	x8, [x19]
   17ea4:	subs	x8, x8, #0x1
   17ea8:	str	x8, [x19]
   17eac:	b.ne	17f04 <PyInit__decimal@@Base+0x113a0>  // b.any
   17eb0:	mov	x0, x19
   17eb4:	bl	65c0 <_Py_Dealloc@plt>
   17eb8:	b	17f04 <PyInit__decimal@@Base+0x113a0>
   17ebc:	ldr	x8, [x19, #8]
   17ec0:	ldrb	w9, [x8, #171]
   17ec4:	tbnz	w9, #0, 17ee8 <PyInit__decimal@@Base+0x11384>
   17ec8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17ecc:	ldr	x9, [x9, #3936]
   17ed0:	ldr	x2, [x8, #24]
   17ed4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17ed8:	add	x1, x1, #0xd63
   17edc:	ldr	x0, [x9]
   17ee0:	bl	6a00 <PyErr_Format@plt>
   17ee4:	b	17f04 <PyInit__decimal@@Base+0x113a0>
   17ee8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17eec:	add	x0, x0, #0x320
   17ef0:	mov	x1, x19
   17ef4:	mov	x2, x20
   17ef8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17efc:	mov	x19, x0
   17f00:	cbnz	x0, 17e18 <PyInit__decimal@@Base+0x112b4>
   17f04:	mov	x21, xzr
   17f08:	mov	x0, x21
   17f0c:	ldp	x20, x19, [sp, #32]
   17f10:	ldr	x21, [sp, #16]
   17f14:	ldp	x29, x30, [sp], #48
   17f18:	ret
   17f1c:	stp	x29, x30, [sp, #-32]!
   17f20:	stp	x20, x19, [sp, #16]
   17f24:	mov	x29, sp
   17f28:	ldr	x8, [x1, #8]
   17f2c:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   17f30:	add	x9, x9, #0x320
   17f34:	mov	x19, x1
   17f38:	cmp	x8, x9
   17f3c:	mov	x20, x0
   17f40:	b.eq	17f58 <PyInit__decimal@@Base+0x113f4>  // b.none
   17f44:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   17f48:	add	x1, x1, #0x320
   17f4c:	mov	x0, x8
   17f50:	bl	69b0 <PyType_IsSubtype@plt>
   17f54:	cbz	w0, 17f9c <PyInit__decimal@@Base+0x11438>
   17f58:	ldr	x8, [x19]
   17f5c:	add	x8, x8, #0x1
   17f60:	str	x8, [x19]
   17f64:	add	x0, x19, #0x18
   17f68:	add	x1, x20, #0x10
   17f6c:	bl	2345c <PyInit__decimal@@Base+0x1c8f8>
   17f70:	ldr	x8, [x19]
   17f74:	mov	x20, x0
   17f78:	subs	x8, x8, #0x1
   17f7c:	str	x8, [x19]
   17f80:	b.ne	17f8c <PyInit__decimal@@Base+0x11428>  // b.any
   17f84:	mov	x0, x19
   17f88:	bl	65c0 <_Py_Dealloc@plt>
   17f8c:	mov	x0, x20
   17f90:	ldp	x20, x19, [sp, #16]
   17f94:	ldp	x29, x30, [sp], #32
   17f98:	b	6950 <PyUnicode_FromString@plt>
   17f9c:	ldr	x8, [x19, #8]
   17fa0:	ldrb	w9, [x8, #171]
   17fa4:	tbnz	w9, #0, 17fc8 <PyInit__decimal@@Base+0x11464>
   17fa8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   17fac:	ldr	x9, [x9, #3936]
   17fb0:	ldr	x2, [x8, #24]
   17fb4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   17fb8:	add	x1, x1, #0xd63
   17fbc:	ldr	x0, [x9]
   17fc0:	bl	6a00 <PyErr_Format@plt>
   17fc4:	b	17fe4 <PyInit__decimal@@Base+0x11480>
   17fc8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   17fcc:	add	x0, x0, #0x320
   17fd0:	mov	x1, x19
   17fd4:	mov	x2, x20
   17fd8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   17fdc:	mov	x19, x0
   17fe0:	cbnz	x0, 17f64 <PyInit__decimal@@Base+0x11400>
   17fe4:	ldp	x20, x19, [sp, #16]
   17fe8:	mov	x0, xzr
   17fec:	ldp	x29, x30, [sp], #32
   17ff0:	ret
   17ff4:	sub	sp, sp, #0x30
   17ff8:	stp	x29, x30, [sp, #16]
   17ffc:	stp	x20, x19, [sp, #32]
   18000:	add	x29, sp, #0x10
   18004:	ldr	x8, [x1, #8]
   18008:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1800c:	add	x9, x9, #0x320
   18010:	mov	x19, x1
   18014:	cmp	x8, x9
   18018:	mov	x20, x0
   1801c:	b.eq	18034 <PyInit__decimal@@Base+0x114d0>  // b.none
   18020:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18024:	add	x1, x1, #0x320
   18028:	mov	x0, x8
   1802c:	bl	69b0 <PyType_IsSubtype@plt>
   18030:	cbz	w0, 180a4 <PyInit__decimal@@Base+0x11540>
   18034:	ldr	x8, [x19]
   18038:	add	x8, x8, #0x1
   1803c:	str	x8, [x19]
   18040:	ldr	w2, [x20, #80]
   18044:	add	x1, x19, #0x18
   18048:	add	x0, sp, #0x8
   1804c:	bl	1df50 <PyInit__decimal@@Base+0x173ec>
   18050:	ldr	x8, [x19]
   18054:	mov	x20, x0
   18058:	subs	x8, x8, #0x1
   1805c:	str	x8, [x19]
   18060:	b.eq	18090 <PyInit__decimal@@Base+0x1152c>  // b.none
   18064:	tbnz	x20, #63, 1809c <PyInit__decimal@@Base+0x11538>
   18068:	ldr	x0, [sp, #8]
   1806c:	mov	x1, x20
   18070:	bl	a968 <PyInit__decimal@@Base+0x3e04>
   18074:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   18078:	ldr	x9, [x8, #1384]
   1807c:	ldr	x8, [sp, #8]
   18080:	mov	x19, x0
   18084:	mov	x0, x8
   18088:	blr	x9
   1808c:	b	180d0 <PyInit__decimal@@Base+0x1156c>
   18090:	mov	x0, x19
   18094:	bl	65c0 <_Py_Dealloc@plt>
   18098:	tbz	x20, #63, 18068 <PyInit__decimal@@Base+0x11504>
   1809c:	bl	65d0 <PyErr_NoMemory@plt>
   180a0:	b	180cc <PyInit__decimal@@Base+0x11568>
   180a4:	ldr	x8, [x19, #8]
   180a8:	ldrb	w9, [x8, #171]
   180ac:	tbnz	w9, #0, 180e4 <PyInit__decimal@@Base+0x11580>
   180b0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   180b4:	ldr	x9, [x9, #3936]
   180b8:	ldr	x2, [x8, #24]
   180bc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   180c0:	add	x1, x1, #0xd63
   180c4:	ldr	x0, [x9]
   180c8:	bl	6a00 <PyErr_Format@plt>
   180cc:	mov	x19, xzr
   180d0:	mov	x0, x19
   180d4:	ldp	x20, x19, [sp, #32]
   180d8:	ldp	x29, x30, [sp, #16]
   180dc:	add	sp, sp, #0x30
   180e0:	ret
   180e4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   180e8:	add	x0, x0, #0x320
   180ec:	mov	x1, x19
   180f0:	mov	x2, x20
   180f4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   180f8:	mov	x19, x0
   180fc:	cbnz	x0, 18040 <PyInit__decimal@@Base+0x114dc>
   18100:	b	180d0 <PyInit__decimal@@Base+0x1156c>
   18104:	sub	sp, sp, #0x30
   18108:	stp	x29, x30, [sp, #16]
   1810c:	stp	x20, x19, [sp, #32]
   18110:	add	x29, sp, #0x10
   18114:	ldr	x8, [x1, #8]
   18118:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1811c:	add	x9, x9, #0x320
   18120:	mov	x19, x1
   18124:	cmp	x8, x9
   18128:	mov	x20, x0
   1812c:	b.eq	18144 <PyInit__decimal@@Base+0x115e0>  // b.none
   18130:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18134:	add	x1, x1, #0x320
   18138:	mov	x0, x8
   1813c:	bl	69b0 <PyType_IsSubtype@plt>
   18140:	cbz	w0, 181b4 <PyInit__decimal@@Base+0x11650>
   18144:	ldr	x8, [x19]
   18148:	add	x8, x8, #0x1
   1814c:	str	x8, [x19]
   18150:	ldr	w2, [x20, #80]
   18154:	add	x1, x19, #0x18
   18158:	add	x0, sp, #0x8
   1815c:	bl	1df64 <PyInit__decimal@@Base+0x17400>
   18160:	ldr	x8, [x19]
   18164:	mov	x20, x0
   18168:	subs	x8, x8, #0x1
   1816c:	str	x8, [x19]
   18170:	b.eq	181a0 <PyInit__decimal@@Base+0x1163c>  // b.none
   18174:	tbnz	x20, #63, 181ac <PyInit__decimal@@Base+0x11648>
   18178:	ldr	x0, [sp, #8]
   1817c:	mov	x1, x20
   18180:	bl	a968 <PyInit__decimal@@Base+0x3e04>
   18184:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   18188:	ldr	x9, [x8, #1384]
   1818c:	ldr	x8, [sp, #8]
   18190:	mov	x19, x0
   18194:	mov	x0, x8
   18198:	blr	x9
   1819c:	b	181e0 <PyInit__decimal@@Base+0x1167c>
   181a0:	mov	x0, x19
   181a4:	bl	65c0 <_Py_Dealloc@plt>
   181a8:	tbz	x20, #63, 18178 <PyInit__decimal@@Base+0x11614>
   181ac:	bl	65d0 <PyErr_NoMemory@plt>
   181b0:	b	181dc <PyInit__decimal@@Base+0x11678>
   181b4:	ldr	x8, [x19, #8]
   181b8:	ldrb	w9, [x8, #171]
   181bc:	tbnz	w9, #0, 181f4 <PyInit__decimal@@Base+0x11690>
   181c0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   181c4:	ldr	x9, [x9, #3936]
   181c8:	ldr	x2, [x8, #24]
   181cc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   181d0:	add	x1, x1, #0xd63
   181d4:	ldr	x0, [x9]
   181d8:	bl	6a00 <PyErr_Format@plt>
   181dc:	mov	x19, xzr
   181e0:	mov	x0, x19
   181e4:	ldp	x20, x19, [sp, #32]
   181e8:	ldp	x29, x30, [sp, #16]
   181ec:	add	sp, sp, #0x30
   181f0:	ret
   181f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   181f8:	add	x0, x0, #0x320
   181fc:	mov	x1, x19
   18200:	mov	x2, x20
   18204:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18208:	mov	x19, x0
   1820c:	cbnz	x0, 18150 <PyInit__decimal@@Base+0x115ec>
   18210:	b	181e0 <PyInit__decimal@@Base+0x1167c>
   18214:	sub	sp, sp, #0x40
   18218:	stp	x29, x30, [sp, #16]
   1821c:	stp	x22, x21, [sp, #32]
   18220:	stp	x20, x19, [sp, #48]
   18224:	add	x29, sp, #0x10
   18228:	mov	x8, x1
   1822c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18230:	mov	x21, x0
   18234:	add	x1, x1, #0x84a
   18238:	add	x2, sp, #0x8
   1823c:	mov	x3, sp
   18240:	mov	x0, x8
   18244:	bl	68d0 <PyArg_ParseTuple@plt>
   18248:	cbz	w0, 18400 <PyInit__decimal@@Base+0x1189c>
   1824c:	ldr	x19, [sp, #8]
   18250:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   18254:	add	x22, x22, #0x320
   18258:	ldr	x0, [x19, #8]
   1825c:	cmp	x0, x22
   18260:	b.eq	18274 <PyInit__decimal@@Base+0x11710>  // b.none
   18264:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18268:	add	x1, x1, #0x320
   1826c:	bl	69b0 <PyType_IsSubtype@plt>
   18270:	cbz	w0, 18354 <PyInit__decimal@@Base+0x117f0>
   18274:	ldr	x8, [x19]
   18278:	add	x8, x8, #0x1
   1827c:	str	x8, [x19]
   18280:	ldr	x20, [sp]
   18284:	ldr	x0, [x20, #8]
   18288:	cmp	x0, x22
   1828c:	b.eq	182a0 <PyInit__decimal@@Base+0x1173c>  // b.none
   18290:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18294:	add	x1, x1, #0x320
   18298:	bl	69b0 <PyType_IsSubtype@plt>
   1829c:	cbz	w0, 18380 <PyInit__decimal@@Base+0x1181c>
   182a0:	ldr	x8, [x20]
   182a4:	add	x8, x8, #0x1
   182a8:	str	x8, [x20]
   182ac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   182b0:	add	x0, x0, #0x320
   182b4:	bl	6940 <_PyObject_New@plt>
   182b8:	cbz	x0, 18324 <PyInit__decimal@@Base+0x117c0>
   182bc:	mov	w8, #0x30                  	// #48
   182c0:	mov	x21, x0
   182c4:	strb	w8, [x0, #24]!
   182c8:	mov	x9, #0xffffffffffffffff    	// #-1
   182cc:	mov	w10, #0x4                   	// #4
   182d0:	add	x1, x19, #0x18
   182d4:	add	x8, x0, #0x30
   182d8:	add	x2, x20, #0x18
   182dc:	stur	x9, [x0, #-8]
   182e0:	stp	xzr, xzr, [x0, #8]
   182e4:	stp	xzr, x10, [x0, #24]
   182e8:	str	x8, [x0, #40]
   182ec:	bl	2258c <PyInit__decimal@@Base+0x1ba28>
   182f0:	ldr	x8, [x19]
   182f4:	subs	x8, x8, #0x1
   182f8:	str	x8, [x19]
   182fc:	b.ne	18308 <PyInit__decimal@@Base+0x117a4>  // b.any
   18300:	mov	x0, x19
   18304:	bl	65c0 <_Py_Dealloc@plt>
   18308:	ldr	x8, [x20]
   1830c:	subs	x8, x8, #0x1
   18310:	str	x8, [x20]
   18314:	b.ne	18404 <PyInit__decimal@@Base+0x118a0>  // b.any
   18318:	mov	x0, x20
   1831c:	bl	65c0 <_Py_Dealloc@plt>
   18320:	b	18404 <PyInit__decimal@@Base+0x118a0>
   18324:	ldr	x8, [x19]
   18328:	subs	x8, x8, #0x1
   1832c:	str	x8, [x19]
   18330:	b.ne	1833c <PyInit__decimal@@Base+0x117d8>  // b.any
   18334:	mov	x0, x19
   18338:	bl	65c0 <_Py_Dealloc@plt>
   1833c:	ldr	x8, [x20]
   18340:	subs	x8, x8, #0x1
   18344:	str	x8, [x20]
   18348:	b.ne	18400 <PyInit__decimal@@Base+0x1189c>  // b.any
   1834c:	mov	x0, x20
   18350:	b	183fc <PyInit__decimal@@Base+0x11898>
   18354:	ldr	x8, [x19, #8]
   18358:	ldrb	w9, [x8, #171]
   1835c:	tbnz	w9, #0, 183ac <PyInit__decimal@@Base+0x11848>
   18360:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18364:	ldr	x9, [x9, #3936]
   18368:	ldr	x2, [x8, #24]
   1836c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18370:	add	x1, x1, #0xd63
   18374:	ldr	x0, [x9]
   18378:	bl	6a00 <PyErr_Format@plt>
   1837c:	b	18400 <PyInit__decimal@@Base+0x1189c>
   18380:	ldr	x8, [x20, #8]
   18384:	ldrb	w9, [x8, #171]
   18388:	tbnz	w9, #0, 183cc <PyInit__decimal@@Base+0x11868>
   1838c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18390:	ldr	x9, [x9, #3936]
   18394:	ldr	x2, [x8, #24]
   18398:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1839c:	add	x1, x1, #0xd63
   183a0:	ldr	x0, [x9]
   183a4:	bl	6a00 <PyErr_Format@plt>
   183a8:	b	183e8 <PyInit__decimal@@Base+0x11884>
   183ac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   183b0:	add	x0, x0, #0x320
   183b4:	mov	x1, x19
   183b8:	mov	x2, x21
   183bc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   183c0:	mov	x19, x0
   183c4:	cbnz	x0, 18280 <PyInit__decimal@@Base+0x1171c>
   183c8:	b	18400 <PyInit__decimal@@Base+0x1189c>
   183cc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   183d0:	add	x0, x0, #0x320
   183d4:	mov	x1, x20
   183d8:	mov	x2, x21
   183dc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   183e0:	mov	x20, x0
   183e4:	cbnz	x0, 182ac <PyInit__decimal@@Base+0x11748>
   183e8:	ldr	x8, [x19]
   183ec:	subs	x8, x8, #0x1
   183f0:	str	x8, [x19]
   183f4:	b.ne	18400 <PyInit__decimal@@Base+0x1189c>  // b.any
   183f8:	mov	x0, x19
   183fc:	bl	65c0 <_Py_Dealloc@plt>
   18400:	mov	x21, xzr
   18404:	mov	x0, x21
   18408:	ldp	x20, x19, [sp, #48]
   1840c:	ldp	x22, x21, [sp, #32]
   18410:	ldp	x29, x30, [sp, #16]
   18414:	add	sp, sp, #0x40
   18418:	ret
   1841c:	sub	sp, sp, #0x40
   18420:	stp	x29, x30, [sp, #16]
   18424:	stp	x22, x21, [sp, #32]
   18428:	stp	x20, x19, [sp, #48]
   1842c:	add	x29, sp, #0x10
   18430:	mov	x8, x1
   18434:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18438:	mov	x21, x0
   1843c:	add	x1, x1, #0x84a
   18440:	add	x2, sp, #0x8
   18444:	mov	x3, sp
   18448:	mov	x0, x8
   1844c:	bl	68d0 <PyArg_ParseTuple@plt>
   18450:	cbz	w0, 18608 <PyInit__decimal@@Base+0x11aa4>
   18454:	ldr	x19, [sp, #8]
   18458:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   1845c:	add	x22, x22, #0x320
   18460:	ldr	x0, [x19, #8]
   18464:	cmp	x0, x22
   18468:	b.eq	1847c <PyInit__decimal@@Base+0x11918>  // b.none
   1846c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18470:	add	x1, x1, #0x320
   18474:	bl	69b0 <PyType_IsSubtype@plt>
   18478:	cbz	w0, 1855c <PyInit__decimal@@Base+0x119f8>
   1847c:	ldr	x8, [x19]
   18480:	add	x8, x8, #0x1
   18484:	str	x8, [x19]
   18488:	ldr	x20, [sp]
   1848c:	ldr	x0, [x20, #8]
   18490:	cmp	x0, x22
   18494:	b.eq	184a8 <PyInit__decimal@@Base+0x11944>  // b.none
   18498:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1849c:	add	x1, x1, #0x320
   184a0:	bl	69b0 <PyType_IsSubtype@plt>
   184a4:	cbz	w0, 18588 <PyInit__decimal@@Base+0x11a24>
   184a8:	ldr	x8, [x20]
   184ac:	add	x8, x8, #0x1
   184b0:	str	x8, [x20]
   184b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   184b8:	add	x0, x0, #0x320
   184bc:	bl	6940 <_PyObject_New@plt>
   184c0:	cbz	x0, 1852c <PyInit__decimal@@Base+0x119c8>
   184c4:	mov	w8, #0x30                  	// #48
   184c8:	mov	x21, x0
   184cc:	strb	w8, [x0, #24]!
   184d0:	mov	x9, #0xffffffffffffffff    	// #-1
   184d4:	mov	w10, #0x4                   	// #4
   184d8:	add	x1, x19, #0x18
   184dc:	add	x8, x0, #0x30
   184e0:	add	x2, x20, #0x18
   184e4:	stur	x9, [x0, #-8]
   184e8:	stp	xzr, xzr, [x0, #8]
   184ec:	stp	xzr, x10, [x0, #24]
   184f0:	str	x8, [x0, #40]
   184f4:	bl	22648 <PyInit__decimal@@Base+0x1bae4>
   184f8:	ldr	x8, [x19]
   184fc:	subs	x8, x8, #0x1
   18500:	str	x8, [x19]
   18504:	b.ne	18510 <PyInit__decimal@@Base+0x119ac>  // b.any
   18508:	mov	x0, x19
   1850c:	bl	65c0 <_Py_Dealloc@plt>
   18510:	ldr	x8, [x20]
   18514:	subs	x8, x8, #0x1
   18518:	str	x8, [x20]
   1851c:	b.ne	1860c <PyInit__decimal@@Base+0x11aa8>  // b.any
   18520:	mov	x0, x20
   18524:	bl	65c0 <_Py_Dealloc@plt>
   18528:	b	1860c <PyInit__decimal@@Base+0x11aa8>
   1852c:	ldr	x8, [x19]
   18530:	subs	x8, x8, #0x1
   18534:	str	x8, [x19]
   18538:	b.ne	18544 <PyInit__decimal@@Base+0x119e0>  // b.any
   1853c:	mov	x0, x19
   18540:	bl	65c0 <_Py_Dealloc@plt>
   18544:	ldr	x8, [x20]
   18548:	subs	x8, x8, #0x1
   1854c:	str	x8, [x20]
   18550:	b.ne	18608 <PyInit__decimal@@Base+0x11aa4>  // b.any
   18554:	mov	x0, x20
   18558:	b	18604 <PyInit__decimal@@Base+0x11aa0>
   1855c:	ldr	x8, [x19, #8]
   18560:	ldrb	w9, [x8, #171]
   18564:	tbnz	w9, #0, 185b4 <PyInit__decimal@@Base+0x11a50>
   18568:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1856c:	ldr	x9, [x9, #3936]
   18570:	ldr	x2, [x8, #24]
   18574:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18578:	add	x1, x1, #0xd63
   1857c:	ldr	x0, [x9]
   18580:	bl	6a00 <PyErr_Format@plt>
   18584:	b	18608 <PyInit__decimal@@Base+0x11aa4>
   18588:	ldr	x8, [x20, #8]
   1858c:	ldrb	w9, [x8, #171]
   18590:	tbnz	w9, #0, 185d4 <PyInit__decimal@@Base+0x11a70>
   18594:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18598:	ldr	x9, [x9, #3936]
   1859c:	ldr	x2, [x8, #24]
   185a0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   185a4:	add	x1, x1, #0xd63
   185a8:	ldr	x0, [x9]
   185ac:	bl	6a00 <PyErr_Format@plt>
   185b0:	b	185f0 <PyInit__decimal@@Base+0x11a8c>
   185b4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   185b8:	add	x0, x0, #0x320
   185bc:	mov	x1, x19
   185c0:	mov	x2, x21
   185c4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   185c8:	mov	x19, x0
   185cc:	cbnz	x0, 18488 <PyInit__decimal@@Base+0x11924>
   185d0:	b	18608 <PyInit__decimal@@Base+0x11aa4>
   185d4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   185d8:	add	x0, x0, #0x320
   185dc:	mov	x1, x20
   185e0:	mov	x2, x21
   185e4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   185e8:	mov	x20, x0
   185ec:	cbnz	x0, 184b4 <PyInit__decimal@@Base+0x11950>
   185f0:	ldr	x8, [x19]
   185f4:	subs	x8, x8, #0x1
   185f8:	str	x8, [x19]
   185fc:	b.ne	18608 <PyInit__decimal@@Base+0x11aa4>  // b.any
   18600:	mov	x0, x19
   18604:	bl	65c0 <_Py_Dealloc@plt>
   18608:	mov	x21, xzr
   1860c:	mov	x0, x21
   18610:	ldp	x20, x19, [sp, #48]
   18614:	ldp	x22, x21, [sp, #32]
   18618:	ldp	x29, x30, [sp, #16]
   1861c:	add	sp, sp, #0x40
   18620:	ret
   18624:	sub	sp, sp, #0x50
   18628:	stp	x29, x30, [sp, #32]
   1862c:	stp	x22, x21, [sp, #48]
   18630:	stp	x20, x19, [sp, #64]
   18634:	add	x29, sp, #0x20
   18638:	mov	x8, x1
   1863c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18640:	mov	x19, x0
   18644:	add	x1, x1, #0x84a
   18648:	sub	x2, x29, #0x8
   1864c:	add	x3, sp, #0x10
   18650:	mov	x0, x8
   18654:	str	wzr, [sp, #12]
   18658:	bl	68d0 <PyArg_ParseTuple@plt>
   1865c:	cbz	w0, 1883c <PyInit__decimal@@Base+0x11cd8>
   18660:	ldur	x20, [x29, #-8]
   18664:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   18668:	add	x22, x22, #0x320
   1866c:	ldr	x0, [x20, #8]
   18670:	cmp	x0, x22
   18674:	b.eq	18688 <PyInit__decimal@@Base+0x11b24>  // b.none
   18678:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1867c:	add	x1, x1, #0x320
   18680:	bl	69b0 <PyType_IsSubtype@plt>
   18684:	cbz	w0, 18790 <PyInit__decimal@@Base+0x11c2c>
   18688:	ldr	x8, [x20]
   1868c:	add	x8, x8, #0x1
   18690:	str	x8, [x20]
   18694:	ldr	x21, [sp, #16]
   18698:	ldr	x0, [x21, #8]
   1869c:	cmp	x0, x22
   186a0:	b.eq	186b4 <PyInit__decimal@@Base+0x11b50>  // b.none
   186a4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   186a8:	add	x1, x1, #0x320
   186ac:	bl	69b0 <PyType_IsSubtype@plt>
   186b0:	cbz	w0, 187bc <PyInit__decimal@@Base+0x11c58>
   186b4:	ldr	x8, [x21]
   186b8:	add	x8, x8, #0x1
   186bc:	str	x8, [x21]
   186c0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   186c4:	add	x0, x0, #0x320
   186c8:	bl	6940 <_PyObject_New@plt>
   186cc:	cbz	x0, 18760 <PyInit__decimal@@Base+0x11bfc>
   186d0:	mov	w8, #0x30                  	// #48
   186d4:	mov	x22, x0
   186d8:	strb	w8, [x0, #24]!
   186dc:	mov	x9, #0xffffffffffffffff    	// #-1
   186e0:	mov	w10, #0x4                   	// #4
   186e4:	add	x1, x20, #0x18
   186e8:	add	x8, x0, #0x30
   186ec:	add	x2, x21, #0x18
   186f0:	add	x3, sp, #0xc
   186f4:	stur	x9, [x0, #-8]
   186f8:	stp	xzr, xzr, [x0, #8]
   186fc:	stp	xzr, x10, [x0, #24]
   18700:	str	x8, [x0, #40]
   18704:	bl	220ec <PyInit__decimal@@Base+0x1b588>
   18708:	ldr	x8, [x20]
   1870c:	subs	x8, x8, #0x1
   18710:	str	x8, [x20]
   18714:	b.ne	18720 <PyInit__decimal@@Base+0x11bbc>  // b.any
   18718:	mov	x0, x20
   1871c:	bl	65c0 <_Py_Dealloc@plt>
   18720:	ldr	x8, [x21]
   18724:	subs	x8, x8, #0x1
   18728:	str	x8, [x21]
   1872c:	b.ne	18738 <PyInit__decimal@@Base+0x11bd4>  // b.any
   18730:	mov	x0, x21
   18734:	bl	65c0 <_Py_Dealloc@plt>
   18738:	ldr	w1, [sp, #12]
   1873c:	mov	x0, x19
   18740:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   18744:	cbz	w0, 18840 <PyInit__decimal@@Base+0x11cdc>
   18748:	ldr	x8, [x22]
   1874c:	subs	x8, x8, #0x1
   18750:	str	x8, [x22]
   18754:	b.ne	1883c <PyInit__decimal@@Base+0x11cd8>  // b.any
   18758:	mov	x0, x22
   1875c:	b	18838 <PyInit__decimal@@Base+0x11cd4>
   18760:	ldr	x8, [x20]
   18764:	subs	x8, x8, #0x1
   18768:	str	x8, [x20]
   1876c:	b.ne	18778 <PyInit__decimal@@Base+0x11c14>  // b.any
   18770:	mov	x0, x20
   18774:	bl	65c0 <_Py_Dealloc@plt>
   18778:	ldr	x8, [x21]
   1877c:	subs	x8, x8, #0x1
   18780:	str	x8, [x21]
   18784:	b.ne	1883c <PyInit__decimal@@Base+0x11cd8>  // b.any
   18788:	mov	x0, x21
   1878c:	b	18838 <PyInit__decimal@@Base+0x11cd4>
   18790:	ldr	x8, [x20, #8]
   18794:	ldrb	w9, [x8, #171]
   18798:	tbnz	w9, #0, 187e8 <PyInit__decimal@@Base+0x11c84>
   1879c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   187a0:	ldr	x9, [x9, #3936]
   187a4:	ldr	x2, [x8, #24]
   187a8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   187ac:	add	x1, x1, #0xd63
   187b0:	ldr	x0, [x9]
   187b4:	bl	6a00 <PyErr_Format@plt>
   187b8:	b	1883c <PyInit__decimal@@Base+0x11cd8>
   187bc:	ldr	x8, [x21, #8]
   187c0:	ldrb	w9, [x8, #171]
   187c4:	tbnz	w9, #0, 18808 <PyInit__decimal@@Base+0x11ca4>
   187c8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   187cc:	ldr	x9, [x9, #3936]
   187d0:	ldr	x2, [x8, #24]
   187d4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   187d8:	add	x1, x1, #0xd63
   187dc:	ldr	x0, [x9]
   187e0:	bl	6a00 <PyErr_Format@plt>
   187e4:	b	18824 <PyInit__decimal@@Base+0x11cc0>
   187e8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   187ec:	add	x0, x0, #0x320
   187f0:	mov	x1, x20
   187f4:	mov	x2, x19
   187f8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   187fc:	mov	x20, x0
   18800:	cbnz	x0, 18694 <PyInit__decimal@@Base+0x11b30>
   18804:	b	1883c <PyInit__decimal@@Base+0x11cd8>
   18808:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1880c:	add	x0, x0, #0x320
   18810:	mov	x1, x21
   18814:	mov	x2, x19
   18818:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   1881c:	mov	x21, x0
   18820:	cbnz	x0, 186c0 <PyInit__decimal@@Base+0x11b5c>
   18824:	ldr	x8, [x20]
   18828:	subs	x8, x8, #0x1
   1882c:	str	x8, [x20]
   18830:	b.ne	1883c <PyInit__decimal@@Base+0x11cd8>  // b.any
   18834:	mov	x0, x20
   18838:	bl	65c0 <_Py_Dealloc@plt>
   1883c:	mov	x22, xzr
   18840:	mov	x0, x22
   18844:	ldp	x20, x19, [sp, #64]
   18848:	ldp	x22, x21, [sp, #48]
   1884c:	ldp	x29, x30, [sp, #32]
   18850:	add	sp, sp, #0x50
   18854:	ret
   18858:	sub	sp, sp, #0x50
   1885c:	stp	x29, x30, [sp, #32]
   18860:	stp	x22, x21, [sp, #48]
   18864:	stp	x20, x19, [sp, #64]
   18868:	add	x29, sp, #0x20
   1886c:	mov	x8, x1
   18870:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18874:	mov	x19, x0
   18878:	add	x1, x1, #0x84a
   1887c:	sub	x2, x29, #0x8
   18880:	add	x3, sp, #0x10
   18884:	mov	x0, x8
   18888:	str	wzr, [sp, #12]
   1888c:	bl	68d0 <PyArg_ParseTuple@plt>
   18890:	cbz	w0, 18a74 <PyInit__decimal@@Base+0x11f10>
   18894:	ldur	x20, [x29, #-8]
   18898:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   1889c:	add	x22, x22, #0x320
   188a0:	ldr	x0, [x20, #8]
   188a4:	cmp	x0, x22
   188a8:	b.eq	188bc <PyInit__decimal@@Base+0x11d58>  // b.none
   188ac:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   188b0:	add	x1, x1, #0x320
   188b4:	bl	69b0 <PyType_IsSubtype@plt>
   188b8:	cbz	w0, 189c8 <PyInit__decimal@@Base+0x11e64>
   188bc:	ldr	x8, [x20]
   188c0:	add	x8, x8, #0x1
   188c4:	str	x8, [x20]
   188c8:	ldr	x21, [sp, #16]
   188cc:	ldr	x0, [x21, #8]
   188d0:	cmp	x0, x22
   188d4:	b.eq	188e8 <PyInit__decimal@@Base+0x11d84>  // b.none
   188d8:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   188dc:	add	x1, x1, #0x320
   188e0:	bl	69b0 <PyType_IsSubtype@plt>
   188e4:	cbz	w0, 189f4 <PyInit__decimal@@Base+0x11e90>
   188e8:	ldr	x8, [x21]
   188ec:	add	x8, x8, #0x1
   188f0:	str	x8, [x21]
   188f4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   188f8:	add	x0, x0, #0x320
   188fc:	bl	6940 <_PyObject_New@plt>
   18900:	cbz	x0, 18998 <PyInit__decimal@@Base+0x11e34>
   18904:	mov	w8, #0x30                  	// #48
   18908:	mov	x22, x0
   1890c:	strb	w8, [x0, #24]!
   18910:	mov	x9, #0xffffffffffffffff    	// #-1
   18914:	mov	w10, #0x4                   	// #4
   18918:	add	x1, x20, #0x18
   1891c:	add	x2, x21, #0x18
   18920:	add	x8, x0, #0x30
   18924:	add	x3, x19, #0x10
   18928:	add	x4, sp, #0xc
   1892c:	stur	x9, [x0, #-8]
   18930:	stp	xzr, xzr, [x0, #8]
   18934:	stp	xzr, x10, [x0, #24]
   18938:	str	x8, [x0, #40]
   1893c:	bl	22c54 <PyInit__decimal@@Base+0x1c0f0>
   18940:	ldr	x8, [x20]
   18944:	subs	x8, x8, #0x1
   18948:	str	x8, [x20]
   1894c:	b.ne	18958 <PyInit__decimal@@Base+0x11df4>  // b.any
   18950:	mov	x0, x20
   18954:	bl	65c0 <_Py_Dealloc@plt>
   18958:	ldr	x8, [x21]
   1895c:	subs	x8, x8, #0x1
   18960:	str	x8, [x21]
   18964:	b.ne	18970 <PyInit__decimal@@Base+0x11e0c>  // b.any
   18968:	mov	x0, x21
   1896c:	bl	65c0 <_Py_Dealloc@plt>
   18970:	ldr	w1, [sp, #12]
   18974:	mov	x0, x19
   18978:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   1897c:	cbz	w0, 18a78 <PyInit__decimal@@Base+0x11f14>
   18980:	ldr	x8, [x22]
   18984:	subs	x8, x8, #0x1
   18988:	str	x8, [x22]
   1898c:	b.ne	18a74 <PyInit__decimal@@Base+0x11f10>  // b.any
   18990:	mov	x0, x22
   18994:	b	18a70 <PyInit__decimal@@Base+0x11f0c>
   18998:	ldr	x8, [x20]
   1899c:	subs	x8, x8, #0x1
   189a0:	str	x8, [x20]
   189a4:	b.ne	189b0 <PyInit__decimal@@Base+0x11e4c>  // b.any
   189a8:	mov	x0, x20
   189ac:	bl	65c0 <_Py_Dealloc@plt>
   189b0:	ldr	x8, [x21]
   189b4:	subs	x8, x8, #0x1
   189b8:	str	x8, [x21]
   189bc:	b.ne	18a74 <PyInit__decimal@@Base+0x11f10>  // b.any
   189c0:	mov	x0, x21
   189c4:	b	18a70 <PyInit__decimal@@Base+0x11f0c>
   189c8:	ldr	x8, [x20, #8]
   189cc:	ldrb	w9, [x8, #171]
   189d0:	tbnz	w9, #0, 18a20 <PyInit__decimal@@Base+0x11ebc>
   189d4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   189d8:	ldr	x9, [x9, #3936]
   189dc:	ldr	x2, [x8, #24]
   189e0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   189e4:	add	x1, x1, #0xd63
   189e8:	ldr	x0, [x9]
   189ec:	bl	6a00 <PyErr_Format@plt>
   189f0:	b	18a74 <PyInit__decimal@@Base+0x11f10>
   189f4:	ldr	x8, [x21, #8]
   189f8:	ldrb	w9, [x8, #171]
   189fc:	tbnz	w9, #0, 18a40 <PyInit__decimal@@Base+0x11edc>
   18a00:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18a04:	ldr	x9, [x9, #3936]
   18a08:	ldr	x2, [x8, #24]
   18a0c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18a10:	add	x1, x1, #0xd63
   18a14:	ldr	x0, [x9]
   18a18:	bl	6a00 <PyErr_Format@plt>
   18a1c:	b	18a5c <PyInit__decimal@@Base+0x11ef8>
   18a20:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18a24:	add	x0, x0, #0x320
   18a28:	mov	x1, x20
   18a2c:	mov	x2, x19
   18a30:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18a34:	mov	x20, x0
   18a38:	cbnz	x0, 188c8 <PyInit__decimal@@Base+0x11d64>
   18a3c:	b	18a74 <PyInit__decimal@@Base+0x11f10>
   18a40:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18a44:	add	x0, x0, #0x320
   18a48:	mov	x1, x21
   18a4c:	mov	x2, x19
   18a50:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18a54:	mov	x21, x0
   18a58:	cbnz	x0, 188f4 <PyInit__decimal@@Base+0x11d90>
   18a5c:	ldr	x8, [x20]
   18a60:	subs	x8, x8, #0x1
   18a64:	str	x8, [x20]
   18a68:	b.ne	18a74 <PyInit__decimal@@Base+0x11f10>  // b.any
   18a6c:	mov	x0, x20
   18a70:	bl	65c0 <_Py_Dealloc@plt>
   18a74:	mov	x22, xzr
   18a78:	mov	x0, x22
   18a7c:	ldp	x20, x19, [sp, #64]
   18a80:	ldp	x22, x21, [sp, #48]
   18a84:	ldp	x29, x30, [sp, #32]
   18a88:	add	sp, sp, #0x50
   18a8c:	ret
   18a90:	sub	sp, sp, #0x50
   18a94:	stp	x29, x30, [sp, #32]
   18a98:	stp	x22, x21, [sp, #48]
   18a9c:	stp	x20, x19, [sp, #64]
   18aa0:	add	x29, sp, #0x20
   18aa4:	mov	x8, x1
   18aa8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18aac:	mov	x19, x0
   18ab0:	add	x1, x1, #0x84a
   18ab4:	sub	x2, x29, #0x8
   18ab8:	add	x3, sp, #0x10
   18abc:	mov	x0, x8
   18ac0:	str	wzr, [sp, #12]
   18ac4:	bl	68d0 <PyArg_ParseTuple@plt>
   18ac8:	cbz	w0, 18cac <PyInit__decimal@@Base+0x12148>
   18acc:	ldur	x20, [x29, #-8]
   18ad0:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   18ad4:	add	x22, x22, #0x320
   18ad8:	ldr	x0, [x20, #8]
   18adc:	cmp	x0, x22
   18ae0:	b.eq	18af4 <PyInit__decimal@@Base+0x11f90>  // b.none
   18ae4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18ae8:	add	x1, x1, #0x320
   18aec:	bl	69b0 <PyType_IsSubtype@plt>
   18af0:	cbz	w0, 18c00 <PyInit__decimal@@Base+0x1209c>
   18af4:	ldr	x8, [x20]
   18af8:	add	x8, x8, #0x1
   18afc:	str	x8, [x20]
   18b00:	ldr	x21, [sp, #16]
   18b04:	ldr	x0, [x21, #8]
   18b08:	cmp	x0, x22
   18b0c:	b.eq	18b20 <PyInit__decimal@@Base+0x11fbc>  // b.none
   18b10:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18b14:	add	x1, x1, #0x320
   18b18:	bl	69b0 <PyType_IsSubtype@plt>
   18b1c:	cbz	w0, 18c2c <PyInit__decimal@@Base+0x120c8>
   18b20:	ldr	x8, [x21]
   18b24:	add	x8, x8, #0x1
   18b28:	str	x8, [x21]
   18b2c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18b30:	add	x0, x0, #0x320
   18b34:	bl	6940 <_PyObject_New@plt>
   18b38:	cbz	x0, 18bd0 <PyInit__decimal@@Base+0x1206c>
   18b3c:	mov	w8, #0x30                  	// #48
   18b40:	mov	x22, x0
   18b44:	strb	w8, [x0, #24]!
   18b48:	mov	x9, #0xffffffffffffffff    	// #-1
   18b4c:	mov	w10, #0x4                   	// #4
   18b50:	add	x1, x20, #0x18
   18b54:	add	x2, x21, #0x18
   18b58:	add	x8, x0, #0x30
   18b5c:	add	x3, x19, #0x10
   18b60:	add	x4, sp, #0xc
   18b64:	stur	x9, [x0, #-8]
   18b68:	stp	xzr, xzr, [x0, #8]
   18b6c:	stp	xzr, x10, [x0, #24]
   18b70:	str	x8, [x0, #40]
   18b74:	bl	2395c <PyInit__decimal@@Base+0x1cdf8>
   18b78:	ldr	x8, [x20]
   18b7c:	subs	x8, x8, #0x1
   18b80:	str	x8, [x20]
   18b84:	b.ne	18b90 <PyInit__decimal@@Base+0x1202c>  // b.any
   18b88:	mov	x0, x20
   18b8c:	bl	65c0 <_Py_Dealloc@plt>
   18b90:	ldr	x8, [x21]
   18b94:	subs	x8, x8, #0x1
   18b98:	str	x8, [x21]
   18b9c:	b.ne	18ba8 <PyInit__decimal@@Base+0x12044>  // b.any
   18ba0:	mov	x0, x21
   18ba4:	bl	65c0 <_Py_Dealloc@plt>
   18ba8:	ldr	w1, [sp, #12]
   18bac:	mov	x0, x19
   18bb0:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   18bb4:	cbz	w0, 18cb0 <PyInit__decimal@@Base+0x1214c>
   18bb8:	ldr	x8, [x22]
   18bbc:	subs	x8, x8, #0x1
   18bc0:	str	x8, [x22]
   18bc4:	b.ne	18cac <PyInit__decimal@@Base+0x12148>  // b.any
   18bc8:	mov	x0, x22
   18bcc:	b	18ca8 <PyInit__decimal@@Base+0x12144>
   18bd0:	ldr	x8, [x20]
   18bd4:	subs	x8, x8, #0x1
   18bd8:	str	x8, [x20]
   18bdc:	b.ne	18be8 <PyInit__decimal@@Base+0x12084>  // b.any
   18be0:	mov	x0, x20
   18be4:	bl	65c0 <_Py_Dealloc@plt>
   18be8:	ldr	x8, [x21]
   18bec:	subs	x8, x8, #0x1
   18bf0:	str	x8, [x21]
   18bf4:	b.ne	18cac <PyInit__decimal@@Base+0x12148>  // b.any
   18bf8:	mov	x0, x21
   18bfc:	b	18ca8 <PyInit__decimal@@Base+0x12144>
   18c00:	ldr	x8, [x20, #8]
   18c04:	ldrb	w9, [x8, #171]
   18c08:	tbnz	w9, #0, 18c58 <PyInit__decimal@@Base+0x120f4>
   18c0c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18c10:	ldr	x9, [x9, #3936]
   18c14:	ldr	x2, [x8, #24]
   18c18:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18c1c:	add	x1, x1, #0xd63
   18c20:	ldr	x0, [x9]
   18c24:	bl	6a00 <PyErr_Format@plt>
   18c28:	b	18cac <PyInit__decimal@@Base+0x12148>
   18c2c:	ldr	x8, [x21, #8]
   18c30:	ldrb	w9, [x8, #171]
   18c34:	tbnz	w9, #0, 18c78 <PyInit__decimal@@Base+0x12114>
   18c38:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18c3c:	ldr	x9, [x9, #3936]
   18c40:	ldr	x2, [x8, #24]
   18c44:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18c48:	add	x1, x1, #0xd63
   18c4c:	ldr	x0, [x9]
   18c50:	bl	6a00 <PyErr_Format@plt>
   18c54:	b	18c94 <PyInit__decimal@@Base+0x12130>
   18c58:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18c5c:	add	x0, x0, #0x320
   18c60:	mov	x1, x20
   18c64:	mov	x2, x19
   18c68:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18c6c:	mov	x20, x0
   18c70:	cbnz	x0, 18b00 <PyInit__decimal@@Base+0x11f9c>
   18c74:	b	18cac <PyInit__decimal@@Base+0x12148>
   18c78:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18c7c:	add	x0, x0, #0x320
   18c80:	mov	x1, x21
   18c84:	mov	x2, x19
   18c88:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18c8c:	mov	x21, x0
   18c90:	cbnz	x0, 18b2c <PyInit__decimal@@Base+0x11fc8>
   18c94:	ldr	x8, [x20]
   18c98:	subs	x8, x8, #0x1
   18c9c:	str	x8, [x20]
   18ca0:	b.ne	18cac <PyInit__decimal@@Base+0x12148>  // b.any
   18ca4:	mov	x0, x20
   18ca8:	bl	65c0 <_Py_Dealloc@plt>
   18cac:	mov	x22, xzr
   18cb0:	mov	x0, x22
   18cb4:	ldp	x20, x19, [sp, #64]
   18cb8:	ldp	x22, x21, [sp, #48]
   18cbc:	ldp	x29, x30, [sp, #32]
   18cc0:	add	sp, sp, #0x50
   18cc4:	ret
   18cc8:	sub	sp, sp, #0x50
   18ccc:	stp	x29, x30, [sp, #32]
   18cd0:	stp	x22, x21, [sp, #48]
   18cd4:	stp	x20, x19, [sp, #64]
   18cd8:	add	x29, sp, #0x20
   18cdc:	mov	x8, x1
   18ce0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18ce4:	mov	x19, x0
   18ce8:	add	x1, x1, #0x84a
   18cec:	sub	x2, x29, #0x8
   18cf0:	add	x3, sp, #0x10
   18cf4:	mov	x0, x8
   18cf8:	str	wzr, [sp, #12]
   18cfc:	bl	68d0 <PyArg_ParseTuple@plt>
   18d00:	cbz	w0, 18ee4 <PyInit__decimal@@Base+0x12380>
   18d04:	ldur	x20, [x29, #-8]
   18d08:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   18d0c:	add	x22, x22, #0x320
   18d10:	ldr	x0, [x20, #8]
   18d14:	cmp	x0, x22
   18d18:	b.eq	18d2c <PyInit__decimal@@Base+0x121c8>  // b.none
   18d1c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18d20:	add	x1, x1, #0x320
   18d24:	bl	69b0 <PyType_IsSubtype@plt>
   18d28:	cbz	w0, 18e38 <PyInit__decimal@@Base+0x122d4>
   18d2c:	ldr	x8, [x20]
   18d30:	add	x8, x8, #0x1
   18d34:	str	x8, [x20]
   18d38:	ldr	x21, [sp, #16]
   18d3c:	ldr	x0, [x21, #8]
   18d40:	cmp	x0, x22
   18d44:	b.eq	18d58 <PyInit__decimal@@Base+0x121f4>  // b.none
   18d48:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18d4c:	add	x1, x1, #0x320
   18d50:	bl	69b0 <PyType_IsSubtype@plt>
   18d54:	cbz	w0, 18e64 <PyInit__decimal@@Base+0x12300>
   18d58:	ldr	x8, [x21]
   18d5c:	add	x8, x8, #0x1
   18d60:	str	x8, [x21]
   18d64:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18d68:	add	x0, x0, #0x320
   18d6c:	bl	6940 <_PyObject_New@plt>
   18d70:	cbz	x0, 18e08 <PyInit__decimal@@Base+0x122a4>
   18d74:	mov	w8, #0x30                  	// #48
   18d78:	mov	x22, x0
   18d7c:	strb	w8, [x0, #24]!
   18d80:	mov	x9, #0xffffffffffffffff    	// #-1
   18d84:	mov	w10, #0x4                   	// #4
   18d88:	add	x1, x20, #0x18
   18d8c:	add	x2, x21, #0x18
   18d90:	add	x8, x0, #0x30
   18d94:	add	x3, x19, #0x10
   18d98:	add	x4, sp, #0xc
   18d9c:	stur	x9, [x0, #-8]
   18da0:	stp	xzr, xzr, [x0, #8]
   18da4:	stp	xzr, x10, [x0, #24]
   18da8:	str	x8, [x0, #40]
   18dac:	bl	244fc <PyInit__decimal@@Base+0x1d998>
   18db0:	ldr	x8, [x20]
   18db4:	subs	x8, x8, #0x1
   18db8:	str	x8, [x20]
   18dbc:	b.ne	18dc8 <PyInit__decimal@@Base+0x12264>  // b.any
   18dc0:	mov	x0, x20
   18dc4:	bl	65c0 <_Py_Dealloc@plt>
   18dc8:	ldr	x8, [x21]
   18dcc:	subs	x8, x8, #0x1
   18dd0:	str	x8, [x21]
   18dd4:	b.ne	18de0 <PyInit__decimal@@Base+0x1227c>  // b.any
   18dd8:	mov	x0, x21
   18ddc:	bl	65c0 <_Py_Dealloc@plt>
   18de0:	ldr	w1, [sp, #12]
   18de4:	mov	x0, x19
   18de8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   18dec:	cbz	w0, 18ee8 <PyInit__decimal@@Base+0x12384>
   18df0:	ldr	x8, [x22]
   18df4:	subs	x8, x8, #0x1
   18df8:	str	x8, [x22]
   18dfc:	b.ne	18ee4 <PyInit__decimal@@Base+0x12380>  // b.any
   18e00:	mov	x0, x22
   18e04:	b	18ee0 <PyInit__decimal@@Base+0x1237c>
   18e08:	ldr	x8, [x20]
   18e0c:	subs	x8, x8, #0x1
   18e10:	str	x8, [x20]
   18e14:	b.ne	18e20 <PyInit__decimal@@Base+0x122bc>  // b.any
   18e18:	mov	x0, x20
   18e1c:	bl	65c0 <_Py_Dealloc@plt>
   18e20:	ldr	x8, [x21]
   18e24:	subs	x8, x8, #0x1
   18e28:	str	x8, [x21]
   18e2c:	b.ne	18ee4 <PyInit__decimal@@Base+0x12380>  // b.any
   18e30:	mov	x0, x21
   18e34:	b	18ee0 <PyInit__decimal@@Base+0x1237c>
   18e38:	ldr	x8, [x20, #8]
   18e3c:	ldrb	w9, [x8, #171]
   18e40:	tbnz	w9, #0, 18e90 <PyInit__decimal@@Base+0x1232c>
   18e44:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18e48:	ldr	x9, [x9, #3936]
   18e4c:	ldr	x2, [x8, #24]
   18e50:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18e54:	add	x1, x1, #0xd63
   18e58:	ldr	x0, [x9]
   18e5c:	bl	6a00 <PyErr_Format@plt>
   18e60:	b	18ee4 <PyInit__decimal@@Base+0x12380>
   18e64:	ldr	x8, [x21, #8]
   18e68:	ldrb	w9, [x8, #171]
   18e6c:	tbnz	w9, #0, 18eb0 <PyInit__decimal@@Base+0x1234c>
   18e70:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   18e74:	ldr	x9, [x9, #3936]
   18e78:	ldr	x2, [x8, #24]
   18e7c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   18e80:	add	x1, x1, #0xd63
   18e84:	ldr	x0, [x9]
   18e88:	bl	6a00 <PyErr_Format@plt>
   18e8c:	b	18ecc <PyInit__decimal@@Base+0x12368>
   18e90:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18e94:	add	x0, x0, #0x320
   18e98:	mov	x1, x20
   18e9c:	mov	x2, x19
   18ea0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18ea4:	mov	x20, x0
   18ea8:	cbnz	x0, 18d38 <PyInit__decimal@@Base+0x121d4>
   18eac:	b	18ee4 <PyInit__decimal@@Base+0x12380>
   18eb0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18eb4:	add	x0, x0, #0x320
   18eb8:	mov	x1, x21
   18ebc:	mov	x2, x19
   18ec0:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   18ec4:	mov	x21, x0
   18ec8:	cbnz	x0, 18d64 <PyInit__decimal@@Base+0x12200>
   18ecc:	ldr	x8, [x20]
   18ed0:	subs	x8, x8, #0x1
   18ed4:	str	x8, [x20]
   18ed8:	b.ne	18ee4 <PyInit__decimal@@Base+0x12380>  // b.any
   18edc:	mov	x0, x20
   18ee0:	bl	65c0 <_Py_Dealloc@plt>
   18ee4:	mov	x22, xzr
   18ee8:	mov	x0, x22
   18eec:	ldp	x20, x19, [sp, #64]
   18ef0:	ldp	x22, x21, [sp, #48]
   18ef4:	ldp	x29, x30, [sp, #32]
   18ef8:	add	sp, sp, #0x50
   18efc:	ret
   18f00:	sub	sp, sp, #0x50
   18f04:	stp	x29, x30, [sp, #32]
   18f08:	stp	x22, x21, [sp, #48]
   18f0c:	stp	x20, x19, [sp, #64]
   18f10:	add	x29, sp, #0x20
   18f14:	mov	x8, x1
   18f18:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   18f1c:	mov	x19, x0
   18f20:	add	x1, x1, #0x84a
   18f24:	sub	x2, x29, #0x8
   18f28:	add	x3, sp, #0x10
   18f2c:	mov	x0, x8
   18f30:	str	wzr, [sp, #12]
   18f34:	bl	68d0 <PyArg_ParseTuple@plt>
   18f38:	cbz	w0, 1911c <PyInit__decimal@@Base+0x125b8>
   18f3c:	ldur	x20, [x29, #-8]
   18f40:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   18f44:	add	x22, x22, #0x320
   18f48:	ldr	x0, [x20, #8]
   18f4c:	cmp	x0, x22
   18f50:	b.eq	18f64 <PyInit__decimal@@Base+0x12400>  // b.none
   18f54:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18f58:	add	x1, x1, #0x320
   18f5c:	bl	69b0 <PyType_IsSubtype@plt>
   18f60:	cbz	w0, 19070 <PyInit__decimal@@Base+0x1250c>
   18f64:	ldr	x8, [x20]
   18f68:	add	x8, x8, #0x1
   18f6c:	str	x8, [x20]
   18f70:	ldr	x21, [sp, #16]
   18f74:	ldr	x0, [x21, #8]
   18f78:	cmp	x0, x22
   18f7c:	b.eq	18f90 <PyInit__decimal@@Base+0x1242c>  // b.none
   18f80:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   18f84:	add	x1, x1, #0x320
   18f88:	bl	69b0 <PyType_IsSubtype@plt>
   18f8c:	cbz	w0, 1909c <PyInit__decimal@@Base+0x12538>
   18f90:	ldr	x8, [x21]
   18f94:	add	x8, x8, #0x1
   18f98:	str	x8, [x21]
   18f9c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   18fa0:	add	x0, x0, #0x320
   18fa4:	bl	6940 <_PyObject_New@plt>
   18fa8:	cbz	x0, 19040 <PyInit__decimal@@Base+0x124dc>
   18fac:	mov	w8, #0x30                  	// #48
   18fb0:	mov	x22, x0
   18fb4:	strb	w8, [x0, #24]!
   18fb8:	mov	x9, #0xffffffffffffffff    	// #-1
   18fbc:	mov	w10, #0x4                   	// #4
   18fc0:	add	x1, x20, #0x18
   18fc4:	add	x2, x21, #0x18
   18fc8:	add	x8, x0, #0x30
   18fcc:	add	x3, x19, #0x10
   18fd0:	add	x4, sp, #0xc
   18fd4:	stur	x9, [x0, #-8]
   18fd8:	stp	xzr, xzr, [x0, #8]
   18fdc:	stp	xzr, x10, [x0, #24]
   18fe0:	str	x8, [x0, #40]
   18fe4:	bl	23ed8 <PyInit__decimal@@Base+0x1d374>
   18fe8:	ldr	x8, [x20]
   18fec:	subs	x8, x8, #0x1
   18ff0:	str	x8, [x20]
   18ff4:	b.ne	19000 <PyInit__decimal@@Base+0x1249c>  // b.any
   18ff8:	mov	x0, x20
   18ffc:	bl	65c0 <_Py_Dealloc@plt>
   19000:	ldr	x8, [x21]
   19004:	subs	x8, x8, #0x1
   19008:	str	x8, [x21]
   1900c:	b.ne	19018 <PyInit__decimal@@Base+0x124b4>  // b.any
   19010:	mov	x0, x21
   19014:	bl	65c0 <_Py_Dealloc@plt>
   19018:	ldr	w1, [sp, #12]
   1901c:	mov	x0, x19
   19020:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19024:	cbz	w0, 19120 <PyInit__decimal@@Base+0x125bc>
   19028:	ldr	x8, [x22]
   1902c:	subs	x8, x8, #0x1
   19030:	str	x8, [x22]
   19034:	b.ne	1911c <PyInit__decimal@@Base+0x125b8>  // b.any
   19038:	mov	x0, x22
   1903c:	b	19118 <PyInit__decimal@@Base+0x125b4>
   19040:	ldr	x8, [x20]
   19044:	subs	x8, x8, #0x1
   19048:	str	x8, [x20]
   1904c:	b.ne	19058 <PyInit__decimal@@Base+0x124f4>  // b.any
   19050:	mov	x0, x20
   19054:	bl	65c0 <_Py_Dealloc@plt>
   19058:	ldr	x8, [x21]
   1905c:	subs	x8, x8, #0x1
   19060:	str	x8, [x21]
   19064:	b.ne	1911c <PyInit__decimal@@Base+0x125b8>  // b.any
   19068:	mov	x0, x21
   1906c:	b	19118 <PyInit__decimal@@Base+0x125b4>
   19070:	ldr	x8, [x20, #8]
   19074:	ldrb	w9, [x8, #171]
   19078:	tbnz	w9, #0, 190c8 <PyInit__decimal@@Base+0x12564>
   1907c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   19080:	ldr	x9, [x9, #3936]
   19084:	ldr	x2, [x8, #24]
   19088:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1908c:	add	x1, x1, #0xd63
   19090:	ldr	x0, [x9]
   19094:	bl	6a00 <PyErr_Format@plt>
   19098:	b	1911c <PyInit__decimal@@Base+0x125b8>
   1909c:	ldr	x8, [x21, #8]
   190a0:	ldrb	w9, [x8, #171]
   190a4:	tbnz	w9, #0, 190e8 <PyInit__decimal@@Base+0x12584>
   190a8:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   190ac:	ldr	x9, [x9, #3936]
   190b0:	ldr	x2, [x8, #24]
   190b4:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   190b8:	add	x1, x1, #0xd63
   190bc:	ldr	x0, [x9]
   190c0:	bl	6a00 <PyErr_Format@plt>
   190c4:	b	19104 <PyInit__decimal@@Base+0x125a0>
   190c8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   190cc:	add	x0, x0, #0x320
   190d0:	mov	x1, x20
   190d4:	mov	x2, x19
   190d8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   190dc:	mov	x20, x0
   190e0:	cbnz	x0, 18f70 <PyInit__decimal@@Base+0x1240c>
   190e4:	b	1911c <PyInit__decimal@@Base+0x125b8>
   190e8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   190ec:	add	x0, x0, #0x320
   190f0:	mov	x1, x21
   190f4:	mov	x2, x19
   190f8:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   190fc:	mov	x21, x0
   19100:	cbnz	x0, 18f9c <PyInit__decimal@@Base+0x12438>
   19104:	ldr	x8, [x20]
   19108:	subs	x8, x8, #0x1
   1910c:	str	x8, [x20]
   19110:	b.ne	1911c <PyInit__decimal@@Base+0x125b8>  // b.any
   19114:	mov	x0, x20
   19118:	bl	65c0 <_Py_Dealloc@plt>
   1911c:	mov	x22, xzr
   19120:	mov	x0, x22
   19124:	ldp	x20, x19, [sp, #64]
   19128:	ldp	x22, x21, [sp, #48]
   1912c:	ldp	x29, x30, [sp, #32]
   19130:	add	sp, sp, #0x50
   19134:	ret
   19138:	sub	sp, sp, #0x40
   1913c:	stp	x29, x30, [sp, #16]
   19140:	stp	x22, x21, [sp, #32]
   19144:	stp	x20, x19, [sp, #48]
   19148:	add	x29, sp, #0x10
   1914c:	mov	x8, x1
   19150:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19154:	mov	x20, x0
   19158:	add	x1, x1, #0x84a
   1915c:	add	x2, sp, #0x8
   19160:	mov	x3, sp
   19164:	mov	x0, x8
   19168:	bl	68d0 <PyArg_ParseTuple@plt>
   1916c:	cbz	w0, 192e0 <PyInit__decimal@@Base+0x1277c>
   19170:	ldr	x19, [sp, #8]
   19174:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   19178:	add	x22, x22, #0x320
   1917c:	ldr	x0, [x19, #8]
   19180:	cmp	x0, x22
   19184:	b.eq	19198 <PyInit__decimal@@Base+0x12634>  // b.none
   19188:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1918c:	add	x1, x1, #0x320
   19190:	bl	69b0 <PyType_IsSubtype@plt>
   19194:	cbz	w0, 19234 <PyInit__decimal@@Base+0x126d0>
   19198:	ldr	x8, [x19]
   1919c:	add	x8, x8, #0x1
   191a0:	str	x8, [x19]
   191a4:	ldr	x21, [sp]
   191a8:	ldr	x0, [x21, #8]
   191ac:	cmp	x0, x22
   191b0:	b.eq	191c4 <PyInit__decimal@@Base+0x12660>  // b.none
   191b4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   191b8:	add	x1, x1, #0x320
   191bc:	bl	69b0 <PyType_IsSubtype@plt>
   191c0:	cbz	w0, 19260 <PyInit__decimal@@Base+0x126fc>
   191c4:	ldr	x8, [x21]
   191c8:	add	x8, x8, #0x1
   191cc:	str	x8, [x21]
   191d0:	add	x0, x19, #0x18
   191d4:	add	x1, x21, #0x18
   191d8:	bl	2cc10 <PyInit__decimal@@Base+0x260ac>
   191dc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   191e0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   191e4:	ldr	x8, [x8, #4024]
   191e8:	ldr	x9, [x9, #3976]
   191ec:	cmp	w0, #0x0
   191f0:	csel	x20, x9, x8, eq  // eq = none
   191f4:	ldr	x8, [x20]
   191f8:	add	x8, x8, #0x1
   191fc:	str	x8, [x20]
   19200:	ldr	x8, [x19]
   19204:	subs	x8, x8, #0x1
   19208:	str	x8, [x19]
   1920c:	b.ne	19218 <PyInit__decimal@@Base+0x126b4>  // b.any
   19210:	mov	x0, x19
   19214:	bl	65c0 <_Py_Dealloc@plt>
   19218:	ldr	x8, [x21]
   1921c:	subs	x8, x8, #0x1
   19220:	str	x8, [x21]
   19224:	b.ne	192e4 <PyInit__decimal@@Base+0x12780>  // b.any
   19228:	mov	x0, x21
   1922c:	bl	65c0 <_Py_Dealloc@plt>
   19230:	b	192e4 <PyInit__decimal@@Base+0x12780>
   19234:	ldr	x8, [x19, #8]
   19238:	ldrb	w9, [x8, #171]
   1923c:	tbnz	w9, #0, 1928c <PyInit__decimal@@Base+0x12728>
   19240:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   19244:	ldr	x9, [x9, #3936]
   19248:	ldr	x2, [x8, #24]
   1924c:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   19250:	add	x1, x1, #0xd63
   19254:	ldr	x0, [x9]
   19258:	bl	6a00 <PyErr_Format@plt>
   1925c:	b	192e0 <PyInit__decimal@@Base+0x1277c>
   19260:	ldr	x8, [x21, #8]
   19264:	ldrb	w9, [x8, #171]
   19268:	tbnz	w9, #0, 192ac <PyInit__decimal@@Base+0x12748>
   1926c:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   19270:	ldr	x9, [x9, #3936]
   19274:	ldr	x2, [x8, #24]
   19278:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   1927c:	add	x1, x1, #0xd63
   19280:	ldr	x0, [x9]
   19284:	bl	6a00 <PyErr_Format@plt>
   19288:	b	192c8 <PyInit__decimal@@Base+0x12764>
   1928c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19290:	add	x0, x0, #0x320
   19294:	mov	x1, x19
   19298:	mov	x2, x20
   1929c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   192a0:	mov	x19, x0
   192a4:	cbnz	x0, 191a4 <PyInit__decimal@@Base+0x12640>
   192a8:	b	192e0 <PyInit__decimal@@Base+0x1277c>
   192ac:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   192b0:	add	x0, x0, #0x320
   192b4:	mov	x1, x21
   192b8:	mov	x2, x20
   192bc:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   192c0:	mov	x21, x0
   192c4:	cbnz	x0, 191d0 <PyInit__decimal@@Base+0x1266c>
   192c8:	ldr	x8, [x19]
   192cc:	subs	x8, x8, #0x1
   192d0:	str	x8, [x19]
   192d4:	b.ne	192e0 <PyInit__decimal@@Base+0x1277c>  // b.any
   192d8:	mov	x0, x19
   192dc:	bl	65c0 <_Py_Dealloc@plt>
   192e0:	mov	x20, xzr
   192e4:	mov	x0, x20
   192e8:	ldp	x20, x19, [sp, #48]
   192ec:	ldp	x22, x21, [sp, #32]
   192f0:	ldp	x29, x30, [sp, #16]
   192f4:	add	sp, sp, #0x40
   192f8:	ret
   192fc:	sub	sp, sp, #0x50
   19300:	stp	x29, x30, [sp, #32]
   19304:	stp	x22, x21, [sp, #48]
   19308:	stp	x20, x19, [sp, #64]
   1930c:	add	x29, sp, #0x20
   19310:	mov	x8, x1
   19314:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19318:	mov	x19, x0
   1931c:	add	x1, x1, #0x84a
   19320:	sub	x2, x29, #0x8
   19324:	add	x3, sp, #0x10
   19328:	mov	x0, x8
   1932c:	str	wzr, [sp, #12]
   19330:	bl	68d0 <PyArg_ParseTuple@plt>
   19334:	cbz	w0, 19518 <PyInit__decimal@@Base+0x129b4>
   19338:	ldur	x20, [x29, #-8]
   1933c:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   19340:	add	x22, x22, #0x320
   19344:	ldr	x0, [x20, #8]
   19348:	cmp	x0, x22
   1934c:	b.eq	19360 <PyInit__decimal@@Base+0x127fc>  // b.none
   19350:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   19354:	add	x1, x1, #0x320
   19358:	bl	69b0 <PyType_IsSubtype@plt>
   1935c:	cbz	w0, 1946c <PyInit__decimal@@Base+0x12908>
   19360:	ldr	x8, [x20]
   19364:	add	x8, x8, #0x1
   19368:	str	x8, [x20]
   1936c:	ldr	x21, [sp, #16]
   19370:	ldr	x0, [x21, #8]
   19374:	cmp	x0, x22
   19378:	b.eq	1938c <PyInit__decimal@@Base+0x12828>  // b.none
   1937c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   19380:	add	x1, x1, #0x320
   19384:	bl	69b0 <PyType_IsSubtype@plt>
   19388:	cbz	w0, 19498 <PyInit__decimal@@Base+0x12934>
   1938c:	ldr	x8, [x21]
   19390:	add	x8, x8, #0x1
   19394:	str	x8, [x21]
   19398:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1939c:	add	x0, x0, #0x320
   193a0:	bl	6940 <_PyObject_New@plt>
   193a4:	cbz	x0, 1943c <PyInit__decimal@@Base+0x128d8>
   193a8:	mov	w8, #0x30                  	// #48
   193ac:	mov	x22, x0
   193b0:	strb	w8, [x0, #24]!
   193b4:	mov	x9, #0xffffffffffffffff    	// #-1
   193b8:	mov	w10, #0x4                   	// #4
   193bc:	add	x1, x20, #0x18
   193c0:	add	x2, x21, #0x18
   193c4:	add	x8, x0, #0x30
   193c8:	add	x3, x19, #0x10
   193cc:	add	x4, sp, #0xc
   193d0:	stur	x9, [x0, #-8]
   193d4:	stp	xzr, xzr, [x0, #8]
   193d8:	stp	xzr, x10, [x0, #24]
   193dc:	str	x8, [x0, #40]
   193e0:	bl	2415c <PyInit__decimal@@Base+0x1d5f8>
   193e4:	ldr	x8, [x20]
   193e8:	subs	x8, x8, #0x1
   193ec:	str	x8, [x20]
   193f0:	b.ne	193fc <PyInit__decimal@@Base+0x12898>  // b.any
   193f4:	mov	x0, x20
   193f8:	bl	65c0 <_Py_Dealloc@plt>
   193fc:	ldr	x8, [x21]
   19400:	subs	x8, x8, #0x1
   19404:	str	x8, [x21]
   19408:	b.ne	19414 <PyInit__decimal@@Base+0x128b0>  // b.any
   1940c:	mov	x0, x21
   19410:	bl	65c0 <_Py_Dealloc@plt>
   19414:	ldr	w1, [sp, #12]
   19418:	mov	x0, x19
   1941c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19420:	cbz	w0, 1951c <PyInit__decimal@@Base+0x129b8>
   19424:	ldr	x8, [x22]
   19428:	subs	x8, x8, #0x1
   1942c:	str	x8, [x22]
   19430:	b.ne	19518 <PyInit__decimal@@Base+0x129b4>  // b.any
   19434:	mov	x0, x22
   19438:	b	19514 <PyInit__decimal@@Base+0x129b0>
   1943c:	ldr	x8, [x20]
   19440:	subs	x8, x8, #0x1
   19444:	str	x8, [x20]
   19448:	b.ne	19454 <PyInit__decimal@@Base+0x128f0>  // b.any
   1944c:	mov	x0, x20
   19450:	bl	65c0 <_Py_Dealloc@plt>
   19454:	ldr	x8, [x21]
   19458:	subs	x8, x8, #0x1
   1945c:	str	x8, [x21]
   19460:	b.ne	19518 <PyInit__decimal@@Base+0x129b4>  // b.any
   19464:	mov	x0, x21
   19468:	b	19514 <PyInit__decimal@@Base+0x129b0>
   1946c:	ldr	x8, [x20, #8]
   19470:	ldrb	w9, [x8, #171]
   19474:	tbnz	w9, #0, 194c4 <PyInit__decimal@@Base+0x12960>
   19478:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1947c:	ldr	x9, [x9, #3936]
   19480:	ldr	x2, [x8, #24]
   19484:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   19488:	add	x1, x1, #0xd63
   1948c:	ldr	x0, [x9]
   19490:	bl	6a00 <PyErr_Format@plt>
   19494:	b	19518 <PyInit__decimal@@Base+0x129b4>
   19498:	ldr	x8, [x21, #8]
   1949c:	ldrb	w9, [x8, #171]
   194a0:	tbnz	w9, #0, 194e4 <PyInit__decimal@@Base+0x12980>
   194a4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   194a8:	ldr	x9, [x9, #3936]
   194ac:	ldr	x2, [x8, #24]
   194b0:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   194b4:	add	x1, x1, #0xd63
   194b8:	ldr	x0, [x9]
   194bc:	bl	6a00 <PyErr_Format@plt>
   194c0:	b	19500 <PyInit__decimal@@Base+0x1299c>
   194c4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   194c8:	add	x0, x0, #0x320
   194cc:	mov	x1, x20
   194d0:	mov	x2, x19
   194d4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   194d8:	mov	x20, x0
   194dc:	cbnz	x0, 1936c <PyInit__decimal@@Base+0x12808>
   194e0:	b	19518 <PyInit__decimal@@Base+0x129b4>
   194e4:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   194e8:	add	x0, x0, #0x320
   194ec:	mov	x1, x21
   194f0:	mov	x2, x19
   194f4:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   194f8:	mov	x21, x0
   194fc:	cbnz	x0, 19398 <PyInit__decimal@@Base+0x12834>
   19500:	ldr	x8, [x20]
   19504:	subs	x8, x8, #0x1
   19508:	str	x8, [x20]
   1950c:	b.ne	19518 <PyInit__decimal@@Base+0x129b4>  // b.any
   19510:	mov	x0, x20
   19514:	bl	65c0 <_Py_Dealloc@plt>
   19518:	mov	x22, xzr
   1951c:	mov	x0, x22
   19520:	ldp	x20, x19, [sp, #64]
   19524:	ldp	x22, x21, [sp, #48]
   19528:	ldp	x29, x30, [sp, #32]
   1952c:	add	sp, sp, #0x50
   19530:	ret
   19534:	sub	sp, sp, #0x50
   19538:	stp	x29, x30, [sp, #32]
   1953c:	stp	x22, x21, [sp, #48]
   19540:	stp	x20, x19, [sp, #64]
   19544:	add	x29, sp, #0x20
   19548:	mov	x8, x1
   1954c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19550:	mov	x19, x0
   19554:	add	x1, x1, #0x84a
   19558:	sub	x2, x29, #0x8
   1955c:	add	x3, sp, #0x10
   19560:	mov	x0, x8
   19564:	str	wzr, [sp, #12]
   19568:	bl	68d0 <PyArg_ParseTuple@plt>
   1956c:	cbz	w0, 19750 <PyInit__decimal@@Base+0x12bec>
   19570:	ldur	x20, [x29, #-8]
   19574:	adrp	x22, 4a000 <PyInit__decimal@@Base+0x4349c>
   19578:	add	x22, x22, #0x320
   1957c:	ldr	x0, [x20, #8]
   19580:	cmp	x0, x22
   19584:	b.eq	19598 <PyInit__decimal@@Base+0x12a34>  // b.none
   19588:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1958c:	add	x1, x1, #0x320
   19590:	bl	69b0 <PyType_IsSubtype@plt>
   19594:	cbz	w0, 196a4 <PyInit__decimal@@Base+0x12b40>
   19598:	ldr	x8, [x20]
   1959c:	add	x8, x8, #0x1
   195a0:	str	x8, [x20]
   195a4:	ldr	x21, [sp, #16]
   195a8:	ldr	x0, [x21, #8]
   195ac:	cmp	x0, x22
   195b0:	b.eq	195c4 <PyInit__decimal@@Base+0x12a60>  // b.none
   195b4:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   195b8:	add	x1, x1, #0x320
   195bc:	bl	69b0 <PyType_IsSubtype@plt>
   195c0:	cbz	w0, 196d0 <PyInit__decimal@@Base+0x12b6c>
   195c4:	ldr	x8, [x21]
   195c8:	add	x8, x8, #0x1
   195cc:	str	x8, [x21]
   195d0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   195d4:	add	x0, x0, #0x320
   195d8:	bl	6940 <_PyObject_New@plt>
   195dc:	cbz	x0, 19674 <PyInit__decimal@@Base+0x12b10>
   195e0:	mov	w8, #0x30                  	// #48
   195e4:	mov	x22, x0
   195e8:	strb	w8, [x0, #24]!
   195ec:	mov	x9, #0xffffffffffffffff    	// #-1
   195f0:	mov	w10, #0x4                   	// #4
   195f4:	add	x1, x20, #0x18
   195f8:	add	x2, x21, #0x18
   195fc:	add	x8, x0, #0x30
   19600:	add	x3, x19, #0x10
   19604:	add	x4, sp, #0xc
   19608:	stur	x9, [x0, #-8]
   1960c:	stp	xzr, xzr, [x0, #8]
   19610:	stp	xzr, x10, [x0, #24]
   19614:	str	x8, [x0, #40]
   19618:	bl	243cc <PyInit__decimal@@Base+0x1d868>
   1961c:	ldr	x8, [x20]
   19620:	subs	x8, x8, #0x1
   19624:	str	x8, [x20]
   19628:	b.ne	19634 <PyInit__decimal@@Base+0x12ad0>  // b.any
   1962c:	mov	x0, x20
   19630:	bl	65c0 <_Py_Dealloc@plt>
   19634:	ldr	x8, [x21]
   19638:	subs	x8, x8, #0x1
   1963c:	str	x8, [x21]
   19640:	b.ne	1964c <PyInit__decimal@@Base+0x12ae8>  // b.any
   19644:	mov	x0, x21
   19648:	bl	65c0 <_Py_Dealloc@plt>
   1964c:	ldr	w1, [sp, #12]
   19650:	mov	x0, x19
   19654:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19658:	cbz	w0, 19754 <PyInit__decimal@@Base+0x12bf0>
   1965c:	ldr	x8, [x22]
   19660:	subs	x8, x8, #0x1
   19664:	str	x8, [x22]
   19668:	b.ne	19750 <PyInit__decimal@@Base+0x12bec>  // b.any
   1966c:	mov	x0, x22
   19670:	b	1974c <PyInit__decimal@@Base+0x12be8>
   19674:	ldr	x8, [x20]
   19678:	subs	x8, x8, #0x1
   1967c:	str	x8, [x20]
   19680:	b.ne	1968c <PyInit__decimal@@Base+0x12b28>  // b.any
   19684:	mov	x0, x20
   19688:	bl	65c0 <_Py_Dealloc@plt>
   1968c:	ldr	x8, [x21]
   19690:	subs	x8, x8, #0x1
   19694:	str	x8, [x21]
   19698:	b.ne	19750 <PyInit__decimal@@Base+0x12bec>  // b.any
   1969c:	mov	x0, x21
   196a0:	b	1974c <PyInit__decimal@@Base+0x12be8>
   196a4:	ldr	x8, [x20, #8]
   196a8:	ldrb	w9, [x8, #171]
   196ac:	tbnz	w9, #0, 196fc <PyInit__decimal@@Base+0x12b98>
   196b0:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   196b4:	ldr	x9, [x9, #3936]
   196b8:	ldr	x2, [x8, #24]
   196bc:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   196c0:	add	x1, x1, #0xd63
   196c4:	ldr	x0, [x9]
   196c8:	bl	6a00 <PyErr_Format@plt>
   196cc:	b	19750 <PyInit__decimal@@Base+0x12bec>
   196d0:	ldr	x8, [x21, #8]
   196d4:	ldrb	w9, [x8, #171]
   196d8:	tbnz	w9, #0, 1971c <PyInit__decimal@@Base+0x12bb8>
   196dc:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   196e0:	ldr	x9, [x9, #3936]
   196e4:	ldr	x2, [x8, #24]
   196e8:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   196ec:	add	x1, x1, #0xd63
   196f0:	ldr	x0, [x9]
   196f4:	bl	6a00 <PyErr_Format@plt>
   196f8:	b	19738 <PyInit__decimal@@Base+0x12bd4>
   196fc:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19700:	add	x0, x0, #0x320
   19704:	mov	x1, x20
   19708:	mov	x2, x19
   1970c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   19710:	mov	x20, x0
   19714:	cbnz	x0, 195a4 <PyInit__decimal@@Base+0x12a40>
   19718:	b	19750 <PyInit__decimal@@Base+0x12bec>
   1971c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19720:	add	x0, x0, #0x320
   19724:	mov	x1, x21
   19728:	mov	x2, x19
   1972c:	bl	a60c <PyInit__decimal@@Base+0x3aa8>
   19730:	mov	x21, x0
   19734:	cbnz	x0, 195d0 <PyInit__decimal@@Base+0x12a6c>
   19738:	ldr	x8, [x20]
   1973c:	subs	x8, x8, #0x1
   19740:	str	x8, [x20]
   19744:	b.ne	19750 <PyInit__decimal@@Base+0x12bec>  // b.any
   19748:	mov	x0, x20
   1974c:	bl	65c0 <_Py_Dealloc@plt>
   19750:	mov	x22, xzr
   19754:	mov	x0, x22
   19758:	ldp	x20, x19, [sp, #64]
   1975c:	ldp	x22, x21, [sp, #48]
   19760:	ldp	x29, x30, [sp, #32]
   19764:	add	sp, sp, #0x50
   19768:	ret
   1976c:	str	wzr, [x0, #44]
   19770:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   19774:	ldr	x0, [x0, #4008]
   19778:	ldr	x8, [x0]
   1977c:	add	x8, x8, #0x1
   19780:	str	x8, [x0]
   19784:	ret
   19788:	str	wzr, [x0, #40]
   1978c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   19790:	ldr	x0, [x0, #4008]
   19794:	ldr	x8, [x0]
   19798:	add	x8, x8, #0x1
   1979c:	str	x8, [x0]
   197a0:	ret
   197a4:	sub	sp, sp, #0x40
   197a8:	stp	x29, x30, [sp, #16]
   197ac:	str	x21, [sp, #32]
   197b0:	stp	x20, x19, [sp, #48]
   197b4:	add	x29, sp, #0x10
   197b8:	mov	x21, x0
   197bc:	ldr	w0, [x0, #44]
   197c0:	bl	19c10 <PyInit__decimal@@Base+0x130ac>
   197c4:	cbz	x0, 1985c <PyInit__decimal@@Base+0x12cf8>
   197c8:	mov	x19, x0
   197cc:	ldr	w0, [x21, #40]
   197d0:	bl	19c10 <PyInit__decimal@@Base+0x130ac>
   197d4:	cbz	x0, 19844 <PyInit__decimal@@Base+0x12ce0>
   197d8:	ldp	w8, w7, [x21, #52]
   197dc:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   197e0:	sxtw	x8, w8
   197e4:	add	x9, x9, #0x4e8
   197e8:	ldp	x1, x2, [x21, #8]
   197ec:	ldp	x5, x4, [x21, #24]
   197f0:	ldr	x3, [x9, x8, lsl #3]
   197f4:	ldr	w6, [x21, #80]
   197f8:	mov	x20, x0
   197fc:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   19800:	add	x0, x0, #0x73d
   19804:	stp	x19, x20, [sp]
   19808:	bl	67c0 <Py_BuildValue@plt>
   1980c:	ldr	x8, [x19]
   19810:	mov	x21, x0
   19814:	subs	x8, x8, #0x1
   19818:	str	x8, [x19]
   1981c:	b.ne	19828 <PyInit__decimal@@Base+0x12cc4>  // b.any
   19820:	mov	x0, x19
   19824:	bl	65c0 <_Py_Dealloc@plt>
   19828:	ldr	x8, [x20]
   1982c:	subs	x8, x8, #0x1
   19830:	str	x8, [x20]
   19834:	b.ne	19860 <PyInit__decimal@@Base+0x12cfc>  // b.any
   19838:	mov	x0, x20
   1983c:	bl	65c0 <_Py_Dealloc@plt>
   19840:	b	19860 <PyInit__decimal@@Base+0x12cfc>
   19844:	ldr	x8, [x19]
   19848:	subs	x8, x8, #0x1
   1984c:	str	x8, [x19]
   19850:	b.ne	1985c <PyInit__decimal@@Base+0x12cf8>  // b.any
   19854:	mov	x0, x19
   19858:	bl	65c0 <_Py_Dealloc@plt>
   1985c:	mov	x21, xzr
   19860:	mov	x0, x21
   19864:	ldp	x20, x19, [sp, #48]
   19868:	ldr	x21, [sp, #32]
   1986c:	ldp	x29, x30, [sp, #16]
   19870:	add	sp, sp, #0x40
   19874:	ret
   19878:	sub	sp, sp, #0x40
   1987c:	stp	x29, x30, [sp, #16]
   19880:	str	x21, [sp, #32]
   19884:	stp	x20, x19, [sp, #48]
   19888:	add	x29, sp, #0x10
   1988c:	mov	x8, x1
   19890:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19894:	mov	x19, x0
   19898:	add	x1, x1, #0x27c
   1989c:	add	x2, sp, #0x8
   198a0:	mov	x0, x8
   198a4:	str	xzr, [sp, #8]
   198a8:	bl	68d0 <PyArg_ParseTuple@plt>
   198ac:	cbz	w0, 19b14 <PyInit__decimal@@Base+0x12fb0>
   198b0:	ldr	x20, [sp, #8]
   198b4:	cbz	x20, 19960 <PyInit__decimal@@Base+0x12dfc>
   198b8:	ldr	x0, [x20, #8]
   198bc:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   198c0:	add	x8, x8, #0x320
   198c4:	cmp	x0, x8
   198c8:	b.eq	198dc <PyInit__decimal@@Base+0x12d78>  // b.none
   198cc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   198d0:	add	x1, x1, #0x320
   198d4:	bl	69b0 <PyType_IsSubtype@plt>
   198d8:	cbz	w0, 199f0 <PyInit__decimal@@Base+0x12e8c>
   198dc:	add	x21, x20, #0x18
   198e0:	mov	x0, x21
   198e4:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   198e8:	cbz	w0, 199dc <PyInit__decimal@@Base+0x12e78>
   198ec:	ldr	x8, [x19, #16]
   198f0:	ldrsw	x9, [x19, #56]
   198f4:	ldr	x10, [x21, #16]
   198f8:	sub	x8, x8, x9
   198fc:	cmp	x10, x8
   19900:	b.le	199dc <PyInit__decimal@@Base+0x12e78>
   19904:	mov	w1, #0x2                   	// #2
   19908:	mov	x0, x19
   1990c:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19910:	cbnz	w0, 19b14 <PyInit__decimal@@Base+0x12fb0>
   19914:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19918:	add	x0, x0, #0x320
   1991c:	bl	6940 <_PyObject_New@plt>
   19920:	mov	x20, x0
   19924:	cbz	x0, 19b18 <PyInit__decimal@@Base+0x12fb4>
   19928:	mov	w8, #0x30                  	// #48
   1992c:	mov	x0, x20
   19930:	strb	w8, [x0, #24]!
   19934:	mov	x9, #0xffffffffffffffff    	// #-1
   19938:	mov	w10, #0x4                   	// #4
   1993c:	add	x8, x0, #0x30
   19940:	mov	w2, #0x4                   	// #4
   19944:	mov	w1, wzr
   19948:	stur	x9, [x0, #-8]
   1994c:	stp	xzr, xzr, [x0, #8]
   19950:	stp	xzr, x10, [x0, #24]
   19954:	str	x8, [x0, #40]
   19958:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   1995c:	b	19b18 <PyInit__decimal@@Base+0x12fb4>
   19960:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19964:	add	x0, x0, #0x320
   19968:	str	wzr, [x29, #28]
   1996c:	bl	6940 <_PyObject_New@plt>
   19970:	mov	x20, x0
   19974:	cbz	x0, 19b18 <PyInit__decimal@@Base+0x12fb4>
   19978:	mov	w8, #0x30                  	// #48
   1997c:	mov	x0, x20
   19980:	strb	w8, [x0, #24]!
   19984:	mov	x9, #0xffffffffffffffff    	// #-1
   19988:	mov	w10, #0x4                   	// #4
   1998c:	add	x8, x0, #0x30
   19990:	add	x2, x19, #0x10
   19994:	add	x3, x29, #0x1c
   19998:	mov	x1, xzr
   1999c:	stur	x9, [x0, #-8]
   199a0:	stp	xzr, xzr, [x0, #8]
   199a4:	stp	xzr, x10, [x0, #24]
   199a8:	str	x8, [x0, #40]
   199ac:	bl	21014 <PyInit__decimal@@Base+0x1a4b0>
   199b0:	ldr	w1, [x29, #28]
   199b4:	mov	x0, x19
   199b8:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   199bc:	cbz	w0, 19b18 <PyInit__decimal@@Base+0x12fb4>
   199c0:	ldr	x8, [x20]
   199c4:	subs	x8, x8, #0x1
   199c8:	str	x8, [x20]
   199cc:	b.ne	19b14 <PyInit__decimal@@Base+0x12fb0>  // b.any
   199d0:	mov	x0, x20
   199d4:	bl	65c0 <_Py_Dealloc@plt>
   199d8:	b	19b14 <PyInit__decimal@@Base+0x12fb0>
   199dc:	mov	x0, x20
   199e0:	mov	x1, x19
   199e4:	bl	19b40 <PyInit__decimal@@Base+0x12fdc>
   199e8:	mov	x20, x0
   199ec:	b	19b18 <PyInit__decimal@@Base+0x12fb4>
   199f0:	ldr	x0, [x20, #8]
   199f4:	ldr	x8, [x0, #168]
   199f8:	tbnz	w8, #28, 19a58 <PyInit__decimal@@Base+0x12ef4>
   199fc:	tbnz	w8, #24, 19a8c <PyInit__decimal@@Base+0x12f28>
   19a00:	tst	x8, #0x6000000
   19a04:	b.eq	19ab4 <PyInit__decimal@@Base+0x12f50>  // b.none
   19a08:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19a0c:	ldr	x8, [x8, #3936]
   19a10:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   19a14:	add	x2, x2, #0x40d
   19a18:	mov	x0, x20
   19a1c:	ldr	x1, [x8]
   19a20:	bl	12930 <PyInit__decimal@@Base+0xbdcc>
   19a24:	mov	x20, x0
   19a28:	cbz	x0, 19b18 <PyInit__decimal@@Base+0x12fb4>
   19a2c:	mov	x0, x20
   19a30:	bl	12978 <PyInit__decimal@@Base+0xbe14>
   19a34:	ldr	x8, [x20]
   19a38:	mov	x21, x0
   19a3c:	subs	x8, x8, #0x1
   19a40:	str	x8, [x20]
   19a44:	b.ne	19a50 <PyInit__decimal@@Base+0x12eec>  // b.any
   19a48:	mov	x0, x20
   19a4c:	bl	65c0 <_Py_Dealloc@plt>
   19a50:	cbnz	x21, 19a70 <PyInit__decimal@@Base+0x12f0c>
   19a54:	b	19b14 <PyInit__decimal@@Base+0x12fb0>
   19a58:	mov	x0, x20
   19a5c:	mov	w1, wzr
   19a60:	mov	w2, wzr
   19a64:	bl	12664 <PyInit__decimal@@Base+0xbb00>
   19a68:	cbz	x0, 19b14 <PyInit__decimal@@Base+0x12fb0>
   19a6c:	mov	x21, x0
   19a70:	mov	x0, x21
   19a74:	mov	x1, x19
   19a78:	bl	19d24 <PyInit__decimal@@Base+0x131c0>
   19a7c:	mov	x20, x0
   19a80:	mov	x0, x21
   19a84:	bl	6550 <PyMem_Free@plt>
   19a88:	b	19b18 <PyInit__decimal@@Base+0x12fb4>
   19a8c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19a90:	add	x2, x19, #0x10
   19a94:	add	x0, x0, #0x320
   19a98:	add	x3, x29, #0x1c
   19a9c:	mov	x1, x20
   19aa0:	str	wzr, [x29, #28]
   19aa4:	bl	a6ec <PyInit__decimal@@Base+0x3b88>
   19aa8:	mov	x20, x0
   19aac:	cbnz	x0, 199b0 <PyInit__decimal@@Base+0x12e4c>
   19ab0:	b	19b18 <PyInit__decimal@@Base+0x12fb4>
   19ab4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19ab8:	ldr	x8, [x8, #3864]
   19abc:	cmp	x0, x8
   19ac0:	b.eq	19ad4 <PyInit__decimal@@Base+0x12f70>  // b.none
   19ac4:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   19ac8:	ldr	x1, [x1, #3864]
   19acc:	bl	69b0 <PyType_IsSubtype@plt>
   19ad0:	cbz	w0, 19af4 <PyInit__decimal@@Base+0x12f90>
   19ad4:	mov	w1, #0x400                 	// #1024
   19ad8:	mov	x0, x19
   19adc:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19ae0:	cbnz	w0, 19b14 <PyInit__decimal@@Base+0x12fb0>
   19ae4:	mov	x0, x20
   19ae8:	mov	x1, x19
   19aec:	bl	19ca0 <PyInit__decimal@@Base+0x1313c>
   19af0:	b	199e8 <PyInit__decimal@@Base+0x12e84>
   19af4:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   19af8:	ldr	x8, [x20, #8]
   19afc:	ldr	x9, [x9, #3936]
   19b00:	adrp	x1, 36000 <PyInit__decimal@@Base+0x2f49c>
   19b04:	add	x1, x1, #0xd63
   19b08:	ldr	x2, [x8, #24]
   19b0c:	ldr	x0, [x9]
   19b10:	bl	6a00 <PyErr_Format@plt>
   19b14:	mov	x20, xzr
   19b18:	mov	x0, x20
   19b1c:	ldp	x20, x19, [sp, #48]
   19b20:	ldr	x21, [sp, #32]
   19b24:	ldp	x29, x30, [sp, #16]
   19b28:	add	sp, sp, #0x40
   19b2c:	ret
   19b30:	mov	x8, x0
   19b34:	mov	x0, x1
   19b38:	mov	x1, x8
   19b3c:	b	19ca0 <PyInit__decimal@@Base+0x1313c>
   19b40:	sub	sp, sp, #0x40
   19b44:	stp	x29, x30, [sp, #16]
   19b48:	stp	x22, x21, [sp, #32]
   19b4c:	stp	x20, x19, [sp, #48]
   19b50:	add	x29, sp, #0x10
   19b54:	mov	x22, x0
   19b58:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19b5c:	add	x0, x0, #0x320
   19b60:	mov	x20, x1
   19b64:	stur	wzr, [x29, #-4]
   19b68:	bl	6940 <_PyObject_New@plt>
   19b6c:	mov	x19, x0
   19b70:	cbz	x0, 19bf8 <PyInit__decimal@@Base+0x13094>
   19b74:	mov	w8, #0x30                  	// #48
   19b78:	mov	x21, x19
   19b7c:	strb	w8, [x21, #24]!
   19b80:	mov	x9, #0xffffffffffffffff    	// #-1
   19b84:	mov	w10, #0x4                   	// #4
   19b88:	add	x8, x21, #0x30
   19b8c:	add	x1, x22, #0x18
   19b90:	sub	x2, x29, #0x4
   19b94:	mov	x0, x21
   19b98:	stur	x9, [x21, #-8]
   19b9c:	stp	xzr, xzr, [x21, #8]
   19ba0:	stp	xzr, x10, [x21, #24]
   19ba4:	str	x8, [x21, #40]
   19ba8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   19bac:	ldur	w1, [x29, #-4]
   19bb0:	mov	x0, x20
   19bb4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19bb8:	cbnz	w0, 19bdc <PyInit__decimal@@Base+0x13078>
   19bbc:	add	x1, x20, #0x10
   19bc0:	sub	x2, x29, #0x4
   19bc4:	mov	x0, x21
   19bc8:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   19bcc:	ldur	w1, [x29, #-4]
   19bd0:	mov	x0, x20
   19bd4:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19bd8:	cbz	w0, 19bf8 <PyInit__decimal@@Base+0x13094>
   19bdc:	ldr	x8, [x19]
   19be0:	subs	x8, x8, #0x1
   19be4:	str	x8, [x19]
   19be8:	b.ne	19bf4 <PyInit__decimal@@Base+0x13090>  // b.any
   19bec:	mov	x0, x19
   19bf0:	bl	65c0 <_Py_Dealloc@plt>
   19bf4:	mov	x19, xzr
   19bf8:	mov	x0, x19
   19bfc:	ldp	x20, x19, [sp, #48]
   19c00:	ldp	x22, x21, [sp, #32]
   19c04:	ldp	x29, x30, [sp, #16]
   19c08:	add	sp, sp, #0x40
   19c0c:	ret
   19c10:	stp	x29, x30, [sp, #-48]!
   19c14:	str	x21, [sp, #16]
   19c18:	stp	x20, x19, [sp, #32]
   19c1c:	mov	x29, sp
   19c20:	mov	w20, w0
   19c24:	mov	x0, xzr
   19c28:	bl	6490 <PyList_New@plt>
   19c2c:	mov	x19, x0
   19c30:	cbz	x0, 19c8c <PyInit__decimal@@Base+0x13128>
   19c34:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   19c38:	ldr	x8, [x8, #2568]
   19c3c:	cbz	x8, 19c8c <PyInit__decimal@@Base+0x13128>
   19c40:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   19c44:	add	x21, x21, #0xa28
   19c48:	ldur	w8, [x21, #-16]
   19c4c:	tst	w8, w20
   19c50:	b.eq	19c64 <PyInit__decimal@@Base+0x13100>  // b.none
   19c54:	ldur	x1, [x21, #-8]
   19c58:	mov	x0, x19
   19c5c:	bl	6760 <PyList_Append@plt>
   19c60:	tbnz	w0, #31, 19c70 <PyInit__decimal@@Base+0x1310c>
   19c64:	ldr	x8, [x21], #32
   19c68:	cbnz	x8, 19c48 <PyInit__decimal@@Base+0x130e4>
   19c6c:	b	19c8c <PyInit__decimal@@Base+0x13128>
   19c70:	ldr	x8, [x19]
   19c74:	subs	x8, x8, #0x1
   19c78:	str	x8, [x19]
   19c7c:	b.ne	19c88 <PyInit__decimal@@Base+0x13124>  // b.any
   19c80:	mov	x0, x19
   19c84:	bl	65c0 <_Py_Dealloc@plt>
   19c88:	mov	x19, xzr
   19c8c:	mov	x0, x19
   19c90:	ldp	x20, x19, [sp, #32]
   19c94:	ldr	x21, [sp, #16]
   19c98:	ldp	x29, x30, [sp], #48
   19c9c:	ret
   19ca0:	sub	sp, sp, #0x30
   19ca4:	stp	x29, x30, [sp, #16]
   19ca8:	stp	x20, x19, [sp, #32]
   19cac:	add	x29, sp, #0x10
   19cb0:	mov	x20, x1
   19cb4:	mov	x1, x0
   19cb8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19cbc:	add	x0, x0, #0x320
   19cc0:	mov	x2, x20
   19cc4:	stur	wzr, [x29, #-4]
   19cc8:	bl	a9d4 <PyInit__decimal@@Base+0x3e70>
   19ccc:	mov	x19, x0
   19cd0:	cbz	x0, 19d10 <PyInit__decimal@@Base+0x131ac>
   19cd4:	add	x0, x19, #0x18
   19cd8:	add	x1, x20, #0x10
   19cdc:	sub	x2, x29, #0x4
   19ce0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   19ce4:	ldur	w1, [x29, #-4]
   19ce8:	mov	x0, x20
   19cec:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19cf0:	cbz	w0, 19d10 <PyInit__decimal@@Base+0x131ac>
   19cf4:	ldr	x8, [x19]
   19cf8:	subs	x8, x8, #0x1
   19cfc:	str	x8, [x19]
   19d00:	b.ne	19d0c <PyInit__decimal@@Base+0x131a8>  // b.any
   19d04:	mov	x0, x19
   19d08:	bl	65c0 <_Py_Dealloc@plt>
   19d0c:	mov	x19, xzr
   19d10:	mov	x0, x19
   19d14:	ldp	x20, x19, [sp, #32]
   19d18:	ldp	x29, x30, [sp, #16]
   19d1c:	add	sp, sp, #0x30
   19d20:	ret
   19d24:	stp	x29, x30, [sp, #-48]!
   19d28:	str	x21, [sp, #16]
   19d2c:	stp	x20, x19, [sp, #32]
   19d30:	mov	x29, sp
   19d34:	mov	x21, x0
   19d38:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   19d3c:	add	x0, x0, #0x320
   19d40:	mov	x20, x1
   19d44:	str	wzr, [x29, #28]
   19d48:	bl	6940 <_PyObject_New@plt>
   19d4c:	mov	x19, x0
   19d50:	cbz	x0, 19db8 <PyInit__decimal@@Base+0x13254>
   19d54:	mov	w8, #0x30                  	// #48
   19d58:	mov	x0, x19
   19d5c:	strb	w8, [x0, #24]!
   19d60:	mov	x9, #0xffffffffffffffff    	// #-1
   19d64:	mov	w10, #0x4                   	// #4
   19d68:	add	x8, x0, #0x30
   19d6c:	add	x2, x20, #0x10
   19d70:	add	x3, x29, #0x1c
   19d74:	mov	x1, x21
   19d78:	stur	x9, [x0, #-8]
   19d7c:	stp	xzr, xzr, [x0, #8]
   19d80:	stp	xzr, x10, [x0, #24]
   19d84:	str	x8, [x0, #40]
   19d88:	bl	1d4d0 <PyInit__decimal@@Base+0x1696c>
   19d8c:	ldr	w1, [x29, #28]
   19d90:	mov	x0, x20
   19d94:	bl	a4c8 <PyInit__decimal@@Base+0x3964>
   19d98:	cbz	w0, 19db8 <PyInit__decimal@@Base+0x13254>
   19d9c:	ldr	x8, [x19]
   19da0:	subs	x8, x8, #0x1
   19da4:	str	x8, [x19]
   19da8:	b.ne	19db4 <PyInit__decimal@@Base+0x13250>  // b.any
   19dac:	mov	x0, x19
   19db0:	bl	65c0 <_Py_Dealloc@plt>
   19db4:	mov	x19, xzr
   19db8:	mov	x0, x19
   19dbc:	ldp	x20, x19, [sp, #32]
   19dc0:	ldr	x21, [sp, #16]
   19dc4:	ldp	x29, x30, [sp], #48
   19dc8:	ret
   19dcc:	stp	x29, x30, [sp, #-16]!
   19dd0:	mov	x29, sp
   19dd4:	add	x0, x0, #0x10
   19dd8:	bl	1c018 <PyInit__decimal@@Base+0x154b4>
   19ddc:	ldp	x29, x30, [sp], #16
   19de0:	b	6690 <PyLong_FromSsize_t@plt>
   19de4:	stp	x29, x30, [sp, #-32]!
   19de8:	stp	x20, x19, [sp, #16]
   19dec:	mov	x29, sp
   19df0:	mov	x19, x0
   19df4:	mov	x0, x1
   19df8:	bl	66e0 <PyLong_AsSsize_t@plt>
   19dfc:	mov	x20, x0
   19e00:	cmn	x0, #0x1
   19e04:	b.eq	19e20 <PyInit__decimal@@Base+0x132bc>  // b.none
   19e08:	add	x0, x19, #0x10
   19e0c:	mov	x1, x20
   19e10:	bl	1bec8 <PyInit__decimal@@Base+0x15364>
   19e14:	cbz	w0, 19e2c <PyInit__decimal@@Base+0x132c8>
   19e18:	mov	w0, wzr
   19e1c:	b	19e48 <PyInit__decimal@@Base+0x132e4>
   19e20:	bl	67d0 <PyErr_Occurred@plt>
   19e24:	cbnz	x0, 19e44 <PyInit__decimal@@Base+0x132e0>
   19e28:	b	19e08 <PyInit__decimal@@Base+0x132a4>
   19e2c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19e30:	ldr	x8, [x8, #3928]
   19e34:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19e38:	add	x1, x1, #0x767
   19e3c:	ldr	x0, [x8]
   19e40:	bl	6640 <PyErr_SetString@plt>
   19e44:	mov	w0, #0xffffffff            	// #-1
   19e48:	ldp	x20, x19, [sp, #16]
   19e4c:	ldp	x29, x30, [sp], #32
   19e50:	ret
   19e54:	stp	x29, x30, [sp, #-16]!
   19e58:	mov	x29, sp
   19e5c:	add	x0, x0, #0x10
   19e60:	bl	1c020 <PyInit__decimal@@Base+0x154bc>
   19e64:	ldp	x29, x30, [sp], #16
   19e68:	b	6690 <PyLong_FromSsize_t@plt>
   19e6c:	stp	x29, x30, [sp, #-32]!
   19e70:	stp	x20, x19, [sp, #16]
   19e74:	mov	x29, sp
   19e78:	mov	x19, x0
   19e7c:	mov	x0, x1
   19e80:	bl	66e0 <PyLong_AsSsize_t@plt>
   19e84:	mov	x20, x0
   19e88:	cmn	x0, #0x1
   19e8c:	b.eq	19ea8 <PyInit__decimal@@Base+0x13344>  // b.none
   19e90:	add	x0, x19, #0x10
   19e94:	mov	x1, x20
   19e98:	bl	1c058 <PyInit__decimal@@Base+0x154f4>
   19e9c:	cbz	w0, 19eb4 <PyInit__decimal@@Base+0x13350>
   19ea0:	mov	w0, wzr
   19ea4:	b	19ed0 <PyInit__decimal@@Base+0x1336c>
   19ea8:	bl	67d0 <PyErr_Occurred@plt>
   19eac:	cbnz	x0, 19ecc <PyInit__decimal@@Base+0x13368>
   19eb0:	b	19e90 <PyInit__decimal@@Base+0x1332c>
   19eb4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19eb8:	ldr	x8, [x8, #3928]
   19ebc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19ec0:	add	x1, x1, #0x78d
   19ec4:	ldr	x0, [x8]
   19ec8:	bl	6640 <PyErr_SetString@plt>
   19ecc:	mov	w0, #0xffffffff            	// #-1
   19ed0:	ldp	x20, x19, [sp, #16]
   19ed4:	ldp	x29, x30, [sp], #32
   19ed8:	ret
   19edc:	stp	x29, x30, [sp, #-16]!
   19ee0:	mov	x29, sp
   19ee4:	add	x0, x0, #0x10
   19ee8:	bl	1c028 <PyInit__decimal@@Base+0x154c4>
   19eec:	ldp	x29, x30, [sp], #16
   19ef0:	b	6690 <PyLong_FromSsize_t@plt>
   19ef4:	stp	x29, x30, [sp, #-32]!
   19ef8:	stp	x20, x19, [sp, #16]
   19efc:	mov	x29, sp
   19f00:	mov	x19, x0
   19f04:	mov	x0, x1
   19f08:	bl	66e0 <PyLong_AsSsize_t@plt>
   19f0c:	mov	x20, x0
   19f10:	cmn	x0, #0x1
   19f14:	b.eq	19f30 <PyInit__decimal@@Base+0x133cc>  // b.none
   19f18:	add	x0, x19, #0x10
   19f1c:	mov	x1, x20
   19f20:	bl	1c080 <PyInit__decimal@@Base+0x1551c>
   19f24:	cbz	w0, 19f3c <PyInit__decimal@@Base+0x133d8>
   19f28:	mov	w0, wzr
   19f2c:	b	19f58 <PyInit__decimal@@Base+0x133f4>
   19f30:	bl	67d0 <PyErr_Occurred@plt>
   19f34:	cbnz	x0, 19f54 <PyInit__decimal@@Base+0x133f0>
   19f38:	b	19f18 <PyInit__decimal@@Base+0x133b4>
   19f3c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19f40:	ldr	x8, [x8, #3928]
   19f44:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19f48:	add	x1, x1, #0x7b3
   19f4c:	ldr	x0, [x8]
   19f50:	bl	6640 <PyErr_SetString@plt>
   19f54:	mov	w0, #0xffffffff            	// #-1
   19f58:	ldp	x20, x19, [sp, #16]
   19f5c:	ldp	x29, x30, [sp], #32
   19f60:	ret
   19f64:	stp	x29, x30, [sp, #-16]!
   19f68:	mov	x29, sp
   19f6c:	add	x0, x0, #0x10
   19f70:	bl	1c030 <PyInit__decimal@@Base+0x154cc>
   19f74:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   19f78:	add	x8, x8, #0x5f8
   19f7c:	ldr	x0, [x8, w0, sxtw #3]
   19f80:	ldr	x8, [x0]
   19f84:	add	x8, x8, #0x1
   19f88:	str	x8, [x0]
   19f8c:	ldp	x29, x30, [sp], #16
   19f90:	ret
   19f94:	stp	x29, x30, [sp, #-32]!
   19f98:	str	x19, [sp, #16]
   19f9c:	mov	x29, sp
   19fa0:	mov	x19, x0
   19fa4:	mov	x0, x1
   19fa8:	bl	124ac <PyInit__decimal@@Base+0xb948>
   19fac:	cmn	w0, #0x1
   19fb0:	b.eq	19fe8 <PyInit__decimal@@Base+0x13484>  // b.none
   19fb4:	mov	w1, w0
   19fb8:	add	x0, x19, #0x10
   19fbc:	bl	1c0ac <PyInit__decimal@@Base+0x15548>
   19fc0:	cbz	w0, 19fcc <PyInit__decimal@@Base+0x13468>
   19fc4:	mov	w0, wzr
   19fc8:	b	19fe8 <PyInit__decimal@@Base+0x13484>
   19fcc:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   19fd0:	ldr	x8, [x8, #3920]
   19fd4:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   19fd8:	add	x1, x1, #0x7d9
   19fdc:	ldr	x0, [x8]
   19fe0:	bl	6640 <PyErr_SetString@plt>
   19fe4:	mov	w0, #0xffffffff            	// #-1
   19fe8:	ldr	x19, [sp, #16]
   19fec:	ldp	x29, x30, [sp], #32
   19ff0:	ret
   19ff4:	ldrsw	x0, [x0, #80]
   19ff8:	b	66d0 <PyLong_FromLong@plt>
   19ffc:	stp	x29, x30, [sp, #-32]!
   1a000:	str	x19, [sp, #16]
   1a004:	mov	x29, sp
   1a008:	mov	x19, x0
   1a00c:	mov	x0, x1
   1a010:	bl	66e0 <PyLong_AsSsize_t@plt>
   1a014:	cmn	x0, #0x1
   1a018:	b.eq	1a034 <PyInit__decimal@@Base+0x134d0>  // b.none
   1a01c:	mov	x8, x0
   1a020:	cmp	x0, #0x2
   1a024:	b.cs	1a03c <PyInit__decimal@@Base+0x134d8>  // b.hs, b.nlast
   1a028:	mov	w0, wzr
   1a02c:	str	w8, [x19, #80]
   1a030:	b	1a058 <PyInit__decimal@@Base+0x134f4>
   1a034:	bl	67d0 <PyErr_Occurred@plt>
   1a038:	cbnz	x0, 1a054 <PyInit__decimal@@Base+0x134f0>
   1a03c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a040:	ldr	x8, [x8, #3928]
   1a044:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a048:	add	x1, x1, #0x7fc
   1a04c:	ldr	x0, [x8]
   1a050:	bl	6640 <PyErr_SetString@plt>
   1a054:	mov	w0, #0xffffffff            	// #-1
   1a058:	ldr	x19, [sp, #16]
   1a05c:	ldp	x29, x30, [sp], #32
   1a060:	ret
   1a064:	stp	x29, x30, [sp, #-16]!
   1a068:	mov	x29, sp
   1a06c:	add	x0, x0, #0x10
   1a070:	bl	1c048 <PyInit__decimal@@Base+0x154e4>
   1a074:	sxtw	x0, w0
   1a078:	ldp	x29, x30, [sp], #16
   1a07c:	b	6690 <PyLong_FromSsize_t@plt>
   1a080:	stp	x29, x30, [sp, #-32]!
   1a084:	stp	x20, x19, [sp, #16]
   1a088:	mov	x29, sp
   1a08c:	mov	x19, x0
   1a090:	mov	x0, x1
   1a094:	bl	66e0 <PyLong_AsSsize_t@plt>
   1a098:	mov	x20, x0
   1a09c:	cmn	x0, #0x1
   1a0a0:	b.eq	1a0c4 <PyInit__decimal@@Base+0x13560>  // b.none
   1a0a4:	cmp	x20, w20, sxtw
   1a0a8:	mov	w8, #0x7fffffff            	// #2147483647
   1a0ac:	add	x0, x19, #0x10
   1a0b0:	csel	w1, w8, w20, ne  // ne = any
   1a0b4:	bl	1c100 <PyInit__decimal@@Base+0x1559c>
   1a0b8:	cbz	w0, 1a0d0 <PyInit__decimal@@Base+0x1356c>
   1a0bc:	mov	w0, wzr
   1a0c0:	b	1a0ec <PyInit__decimal@@Base+0x13588>
   1a0c4:	bl	67d0 <PyErr_Occurred@plt>
   1a0c8:	cbnz	x0, 1a0e8 <PyInit__decimal@@Base+0x13584>
   1a0cc:	b	1a0a4 <PyInit__decimal@@Base+0x13540>
   1a0d0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a0d4:	ldr	x8, [x8, #3928]
   1a0d8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a0dc:	add	x1, x1, #0x821
   1a0e0:	ldr	x0, [x8]
   1a0e4:	bl	6640 <PyErr_SetString@plt>
   1a0e8:	mov	w0, #0xffffffff            	// #-1
   1a0ec:	ldp	x20, x19, [sp, #16]
   1a0f0:	ldp	x29, x30, [sp], #32
   1a0f4:	ret
   1a0f8:	stp	x29, x30, [sp, #-64]!
   1a0fc:	stp	x24, x23, [sp, #16]
   1a100:	stp	x22, x21, [sp, #32]
   1a104:	stp	x20, x19, [sp, #48]
   1a108:	mov	x29, sp
   1a10c:	mov	x20, x0
   1a110:	bl	6900 <PyList_Size@plt>
   1a114:	cmp	x0, #0x1
   1a118:	b.lt	1a1a4 <PyInit__decimal@@Base+0x13640>  // b.tstop
   1a11c:	adrp	x24, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a120:	mov	x21, x0
   1a124:	mov	x22, xzr
   1a128:	mov	w19, wzr
   1a12c:	adrp	x23, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a130:	add	x24, x24, #0xa28
   1a134:	mov	x0, x20
   1a138:	mov	x1, x22
   1a13c:	bl	6a20 <PyList_GetItem@plt>
   1a140:	ldr	x8, [x23, #2568]
   1a144:	cbz	x8, 1a184 <PyInit__decimal@@Base+0x13620>
   1a148:	mov	x8, x24
   1a14c:	ldur	x9, [x8, #-8]
   1a150:	cmp	x9, x0
   1a154:	b.eq	1a164 <PyInit__decimal@@Base+0x13600>  // b.none
   1a158:	ldr	x9, [x8], #32
   1a15c:	cbnz	x9, 1a14c <PyInit__decimal@@Base+0x135e8>
   1a160:	b	1a184 <PyInit__decimal@@Base+0x13620>
   1a164:	ldur	w8, [x8, #-16]
   1a168:	tst	w8, #0x18000
   1a16c:	b.ne	1a1c0 <PyInit__decimal@@Base+0x1365c>  // b.any
   1a170:	add	x22, x22, #0x1
   1a174:	cmp	x22, x21
   1a178:	orr	w19, w8, w19
   1a17c:	b.ne	1a134 <PyInit__decimal@@Base+0x135d0>  // b.any
   1a180:	b	1a1a8 <PyInit__decimal@@Base+0x13644>
   1a184:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a188:	ldr	x8, [x8, #3968]
   1a18c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a190:	add	x1, x1, #0x875
   1a194:	ldr	x0, [x8]
   1a198:	bl	6640 <PyErr_SetString@plt>
   1a19c:	mov	w19, #0x8000                	// #32768
   1a1a0:	b	1a1a8 <PyInit__decimal@@Base+0x13644>
   1a1a4:	mov	w19, wzr
   1a1a8:	mov	w0, w19
   1a1ac:	ldp	x20, x19, [sp, #48]
   1a1b0:	ldp	x22, x21, [sp, #32]
   1a1b4:	ldp	x24, x23, [sp, #16]
   1a1b8:	ldp	x29, x30, [sp], #64
   1a1bc:	ret
   1a1c0:	mov	w19, w8
   1a1c4:	b	1a1a8 <PyInit__decimal@@Base+0x13644>
   1a1c8:	stp	x29, x30, [sp, #-32]!
   1a1cc:	str	x19, [sp, #16]
   1a1d0:	mov	x29, sp
   1a1d4:	mov	x19, x0
   1a1d8:	ldr	x0, [x0, #16]
   1a1dc:	cbz	x0, 1a1f4 <PyInit__decimal@@Base+0x13690>
   1a1e0:	ldr	x8, [x0]
   1a1e4:	subs	x8, x8, #0x1
   1a1e8:	str	x8, [x0]
   1a1ec:	b.ne	1a1f4 <PyInit__decimal@@Base+0x13690>  // b.any
   1a1f0:	bl	65c0 <_Py_Dealloc@plt>
   1a1f4:	ldr	x0, [x19, #24]
   1a1f8:	cbz	x0, 1a210 <PyInit__decimal@@Base+0x136ac>
   1a1fc:	ldr	x8, [x0]
   1a200:	subs	x8, x8, #0x1
   1a204:	str	x8, [x0]
   1a208:	b.ne	1a210 <PyInit__decimal@@Base+0x136ac>  // b.any
   1a20c:	bl	65c0 <_Py_Dealloc@plt>
   1a210:	mov	x0, x19
   1a214:	ldr	x19, [sp, #16]
   1a218:	ldp	x29, x30, [sp], #32
   1a21c:	b	6680 <PyObject_Free@plt>
   1a220:	stp	x29, x30, [sp, #-32]!
   1a224:	str	x19, [sp, #16]
   1a228:	mov	x29, sp
   1a22c:	ldr	x1, [x0, #16]
   1a230:	mov	x19, x0
   1a234:	mov	x0, xzr
   1a238:	bl	1a2b8 <PyInit__decimal@@Base+0x13754>
   1a23c:	cbz	x0, 1a264 <PyInit__decimal@@Base+0x13700>
   1a240:	ldr	x8, [x0]
   1a244:	subs	x8, x8, #0x1
   1a248:	str	x8, [x0]
   1a24c:	b.ne	1a254 <PyInit__decimal@@Base+0x136f0>  // b.any
   1a250:	bl	65c0 <_Py_Dealloc@plt>
   1a254:	ldr	x0, [x19, #16]
   1a258:	ldr	x8, [x0]
   1a25c:	add	x8, x8, #0x1
   1a260:	str	x8, [x0]
   1a264:	ldr	x19, [sp, #16]
   1a268:	ldp	x29, x30, [sp], #32
   1a26c:	ret
   1a270:	stp	x29, x30, [sp, #-16]!
   1a274:	mov	x29, sp
   1a278:	ldr	x1, [x0, #24]
   1a27c:	mov	x0, xzr
   1a280:	bl	1a2b8 <PyInit__decimal@@Base+0x13754>
   1a284:	cbz	x0, 1a2b0 <PyInit__decimal@@Base+0x1374c>
   1a288:	ldr	x8, [x0]
   1a28c:	subs	x8, x8, #0x1
   1a290:	str	x8, [x0]
   1a294:	b.ne	1a29c <PyInit__decimal@@Base+0x13738>  // b.any
   1a298:	bl	65c0 <_Py_Dealloc@plt>
   1a29c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   1a2a0:	ldr	x0, [x0, #4008]
   1a2a4:	ldr	x8, [x0]
   1a2a8:	add	x8, x8, #0x1
   1a2ac:	str	x8, [x0]
   1a2b0:	ldp	x29, x30, [sp], #16
   1a2b4:	ret
   1a2b8:	stp	x29, x30, [sp, #-32]!
   1a2bc:	stp	x20, x19, [sp, #16]
   1a2c0:	mov	x29, sp
   1a2c4:	ldr	x0, [x1, #8]
   1a2c8:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a2cc:	add	x8, x8, #0x4c0
   1a2d0:	mov	x19, x1
   1a2d4:	cmp	x0, x8
   1a2d8:	b.eq	1a2ec <PyInit__decimal@@Base+0x13788>  // b.none
   1a2dc:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a2e0:	add	x1, x1, #0x4c0
   1a2e4:	bl	69b0 <PyType_IsSubtype@plt>
   1a2e8:	cbz	w0, 1a38c <PyInit__decimal@@Base+0x13828>
   1a2ec:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a2f0:	ldr	x8, [x8, #1504]
   1a2f4:	cmp	x8, x19
   1a2f8:	b.eq	1a32c <PyInit__decimal@@Base+0x137c8>  // b.none
   1a2fc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a300:	ldr	x8, [x8, #1512]
   1a304:	cmp	x8, x19
   1a308:	b.eq	1a32c <PyInit__decimal@@Base+0x137c8>  // b.none
   1a30c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a310:	ldr	x8, [x8, #1520]
   1a314:	cmp	x8, x19
   1a318:	b.eq	1a32c <PyInit__decimal@@Base+0x137c8>  // b.none
   1a31c:	ldr	x8, [x19]
   1a320:	add	x8, x8, #0x1
   1a324:	str	x8, [x19]
   1a328:	b	1a360 <PyInit__decimal@@Base+0x137fc>
   1a32c:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a330:	add	x0, x0, #0x4c0
   1a334:	mov	x1, xzr
   1a338:	bl	6830 <PyObject_CallObject@plt>
   1a33c:	cbz	x0, 1a3e8 <PyInit__decimal@@Base+0x13884>
   1a340:	ldp	q1, q0, [x19, #32]
   1a344:	ldr	q2, [x19, #16]
   1a348:	stp	q1, q0, [x0, #32]
   1a34c:	str	q2, [x0, #16]
   1a350:	ldr	w8, [x19, #80]
   1a354:	stp	wzr, wzr, [x0, #44]
   1a358:	mov	x19, x0
   1a35c:	str	w8, [x0, #80]
   1a360:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a364:	ldr	x0, [x8, #1408]
   1a368:	mov	x1, x19
   1a36c:	bl	6670 <PyContextVar_Set@plt>
   1a370:	ldr	x8, [x19]
   1a374:	mov	x20, x0
   1a378:	subs	x8, x8, #0x1
   1a37c:	str	x8, [x19]
   1a380:	b.eq	1a3a8 <PyInit__decimal@@Base+0x13844>  // b.none
   1a384:	cbnz	x20, 1a3b4 <PyInit__decimal@@Base+0x13850>
   1a388:	b	1a3e4 <PyInit__decimal@@Base+0x13880>
   1a38c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a390:	ldr	x8, [x8, #3936]
   1a394:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a398:	add	x1, x1, #0x13a
   1a39c:	ldr	x0, [x8]
   1a3a0:	bl	6640 <PyErr_SetString@plt>
   1a3a4:	b	1a3e4 <PyInit__decimal@@Base+0x13880>
   1a3a8:	mov	x0, x19
   1a3ac:	bl	65c0 <_Py_Dealloc@plt>
   1a3b0:	cbz	x20, 1a3e4 <PyInit__decimal@@Base+0x13880>
   1a3b4:	ldr	x8, [x20]
   1a3b8:	subs	x8, x8, #0x1
   1a3bc:	str	x8, [x20]
   1a3c0:	b.ne	1a3cc <PyInit__decimal@@Base+0x13868>  // b.any
   1a3c4:	mov	x0, x20
   1a3c8:	bl	65c0 <_Py_Dealloc@plt>
   1a3cc:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   1a3d0:	ldr	x0, [x0, #4008]
   1a3d4:	ldr	x8, [x0]
   1a3d8:	add	x8, x8, #0x1
   1a3dc:	str	x8, [x0]
   1a3e0:	b	1a3e8 <PyInit__decimal@@Base+0x13884>
   1a3e4:	mov	x0, xzr
   1a3e8:	ldp	x20, x19, [sp, #16]
   1a3ec:	ldp	x29, x30, [sp], #32
   1a3f0:	ret
   1a3f4:	sub	sp, sp, #0x100
   1a3f8:	stp	x29, x30, [sp, #240]
   1a3fc:	add	x29, sp, #0xf0
   1a400:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a404:	ldr	x8, [x8, #2568]
   1a408:	cbz	x8, 1a48c <PyInit__decimal@@Base+0x13928>
   1a40c:	ldr	x10, [x0, #16]
   1a410:	adrp	x9, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a414:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   1a418:	adrp	x13, 37000 <PyInit__decimal@@Base+0x3049c>
   1a41c:	ldr	w10, [x10]
   1a420:	mov	w8, wzr
   1a424:	add	x9, x9, #0xa18
   1a428:	sub	x11, x29, #0x48
   1a42c:	add	x12, x12, #0x974
   1a430:	add	x13, x13, #0x979
   1a434:	add	x14, sp, #0x60
   1a438:	ldr	w16, [x9]
   1a43c:	ldur	x15, [x9, #-8]
   1a440:	ldr	x17, [x9, #16]
   1a444:	add	x9, x9, #0x20
   1a448:	tst	w16, w10
   1a44c:	str	x15, [x11, w8, sxtw #3]
   1a450:	csel	x15, x13, x12, eq  // eq = none
   1a454:	str	x15, [x14, w8, sxtw #3]
   1a458:	add	w8, w8, #0x1
   1a45c:	cbnz	x17, 1a438 <PyInit__decimal@@Base+0x138d4>
   1a460:	ldp	x1, x3, [x29, #-72]
   1a464:	ldp	x2, x4, [sp, #96]
   1a468:	ldp	x5, x7, [x29, #-56]
   1a46c:	ldp	x6, x8, [sp, #112]
   1a470:	ldp	x9, x10, [x29, #-40]
   1a474:	ldp	x11, x12, [sp, #128]
   1a478:	ldp	x13, x14, [x29, #-24]
   1a47c:	ldp	x15, x16, [sp, #144]
   1a480:	ldur	x17, [x29, #-8]
   1a484:	ldr	x18, [sp, #160]
   1a488:	b	1a48c <PyInit__decimal@@Base+0x13928>
   1a48c:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   1a490:	add	x0, x0, #0x97f
   1a494:	stp	x17, x18, [sp, #72]
   1a498:	stp	x14, x16, [sp, #56]
   1a49c:	stp	x13, x15, [sp, #40]
   1a4a0:	stp	x10, x12, [sp, #24]
   1a4a4:	stp	x9, x11, [sp, #8]
   1a4a8:	str	x8, [sp]
   1a4ac:	bl	6470 <PyUnicode_FromFormat@plt>
   1a4b0:	ldp	x29, x30, [sp, #240]
   1a4b4:	add	sp, sp, #0x100
   1a4b8:	ret
   1a4bc:	stp	x29, x30, [sp, #-32]!
   1a4c0:	stp	x20, x19, [sp, #16]
   1a4c4:	mov	x29, sp
   1a4c8:	orr	w8, w2, #0x1
   1a4cc:	cmp	w8, #0x3
   1a4d0:	b.ne	1a590 <PyInit__decimal@@Base+0x13a2c>  // b.any
   1a4d4:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a4d8:	ldr	x8, [x1, #8]
   1a4dc:	ldr	x9, [x9, #1480]
   1a4e0:	mov	w19, w2
   1a4e4:	mov	x20, x0
   1a4e8:	cmp	x8, x9
   1a4ec:	b.eq	1a514 <PyInit__decimal@@Base+0x139b0>  // b.none
   1a4f0:	ldrb	w8, [x8, #171]
   1a4f4:	tbz	w8, #5, 1a590 <PyInit__decimal@@Base+0x13a2c>
   1a4f8:	mov	x0, x1
   1a4fc:	bl	1333c <PyInit__decimal@@Base+0xc7d8>
   1a500:	tst	w0, #0x18000
   1a504:	b.eq	1a554 <PyInit__decimal@@Base+0x139f0>  // b.none
   1a508:	tbnz	w0, #15, 1a58c <PyInit__decimal@@Base+0x13a28>
   1a50c:	mov	x0, xzr
   1a510:	b	1a5a4 <PyInit__decimal@@Base+0x13a40>
   1a514:	ldr	x8, [x20, #16]
   1a518:	ldr	x9, [x1, #16]
   1a51c:	cmp	w19, #0x3
   1a520:	adrp	x10, 49000 <PyInit__decimal@@Base+0x4249c>
   1a524:	ldr	w8, [x8]
   1a528:	ldr	w9, [x9]
   1a52c:	cset	w11, eq  // eq = none
   1a530:	ldr	x10, [x10, #3976]
   1a534:	cmp	w8, w9
   1a538:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1a53c:	ldr	x9, [x9, #4024]
   1a540:	cset	w8, eq  // eq = none
   1a544:	eor	w8, w11, w8
   1a548:	cmp	w8, #0x0
   1a54c:	csel	x0, x9, x10, ne  // ne = any
   1a550:	b	1a598 <PyInit__decimal@@Base+0x13a34>
   1a554:	ldr	x8, [x20, #16]
   1a558:	cmp	w19, #0x3
   1a55c:	cset	w10, eq  // eq = none
   1a560:	adrp	x9, 49000 <PyInit__decimal@@Base+0x4249c>
   1a564:	ldr	w8, [x8]
   1a568:	ldr	x9, [x9, #3976]
   1a56c:	cmp	w8, w0
   1a570:	cset	w8, eq  // eq = none
   1a574:	eor	w8, w10, w8
   1a578:	adrp	x10, 49000 <PyInit__decimal@@Base+0x4249c>
   1a57c:	ldr	x10, [x10, #4024]
   1a580:	cmp	w8, #0x0
   1a584:	csel	x0, x10, x9, ne  // ne = any
   1a588:	b	1a598 <PyInit__decimal@@Base+0x13a34>
   1a58c:	bl	6720 <PyErr_Clear@plt>
   1a590:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   1a594:	ldr	x0, [x0, #3912]
   1a598:	ldr	x8, [x0]
   1a59c:	add	x8, x8, #0x1
   1a5a0:	str	x8, [x0]
   1a5a4:	ldp	x20, x19, [sp, #16]
   1a5a8:	ldp	x29, x30, [sp], #32
   1a5ac:	ret
   1a5b0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a5b4:	ldr	x8, [x8, #3872]
   1a5b8:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a5bc:	ldr	x0, [x9, #1496]
   1a5c0:	ldr	x1, [x8, #216]
   1a5c4:	br	x1
   1a5c8:	str	xzr, [x0, #16]
   1a5cc:	mov	w0, wzr
   1a5d0:	ret
   1a5d4:	mov	w0, #0x9                   	// #9
   1a5d8:	ret
   1a5dc:	stp	x29, x30, [sp, #-16]!
   1a5e0:	mov	x29, sp
   1a5e4:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a5e8:	ldr	x8, [x8, #2568]
   1a5ec:	cbz	x8, 1a60c <PyInit__decimal@@Base+0x13aa8>
   1a5f0:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a5f4:	add	x8, x8, #0xa28
   1a5f8:	ldur	x9, [x8, #-8]
   1a5fc:	cmp	x9, x1
   1a600:	b.eq	1a628 <PyInit__decimal@@Base+0x13ac4>  // b.none
   1a604:	ldr	x9, [x8], #32
   1a608:	cbnz	x9, 1a5f8 <PyInit__decimal@@Base+0x13a94>
   1a60c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a610:	ldr	x8, [x8, #3968]
   1a614:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a618:	add	x1, x1, #0x875
   1a61c:	ldr	x0, [x8]
   1a620:	bl	6640 <PyErr_SetString@plt>
   1a624:	b	1a634 <PyInit__decimal@@Base+0x13ad0>
   1a628:	ldur	w8, [x8, #-16]
   1a62c:	tst	w8, #0x18000
   1a630:	b.eq	1a640 <PyInit__decimal@@Base+0x13adc>  // b.none
   1a634:	mov	x0, xzr
   1a638:	ldp	x29, x30, [sp], #16
   1a63c:	ret
   1a640:	ldr	x9, [x0, #16]
   1a644:	ldr	w9, [x9]
   1a648:	tst	w9, w8
   1a64c:	b.eq	1a65c <PyInit__decimal@@Base+0x13af8>  // b.none
   1a650:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   1a654:	ldr	x0, [x0, #4024]
   1a658:	b	1a664 <PyInit__decimal@@Base+0x13b00>
   1a65c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x4249c>
   1a660:	ldr	x0, [x0, #3976]
   1a664:	ldr	x8, [x0]
   1a668:	add	x8, x8, #0x1
   1a66c:	str	x8, [x0]
   1a670:	b	1a638 <PyInit__decimal@@Base+0x13ad4>
   1a674:	stp	x29, x30, [sp, #-32]!
   1a678:	stp	x20, x19, [sp, #16]
   1a67c:	mov	x29, sp
   1a680:	cbz	x2, 1a6c4 <PyInit__decimal@@Base+0x13b60>
   1a684:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a688:	ldr	x8, [x8, #2568]
   1a68c:	cbz	x8, 1a6b0 <PyInit__decimal@@Base+0x13b4c>
   1a690:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a694:	mov	x19, x0
   1a698:	add	x8, x8, #0xa28
   1a69c:	ldur	x9, [x8, #-8]
   1a6a0:	cmp	x9, x1
   1a6a4:	b.eq	1a6ec <PyInit__decimal@@Base+0x13b88>  // b.none
   1a6a8:	ldr	x9, [x8], #32
   1a6ac:	cbnz	x9, 1a69c <PyInit__decimal@@Base+0x13b38>
   1a6b0:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a6b4:	ldr	x8, [x8, #3968]
   1a6b8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a6bc:	add	x1, x1, #0x875
   1a6c0:	b	1a6d4 <PyInit__decimal@@Base+0x13b70>
   1a6c4:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a6c8:	ldr	x8, [x8, #3928]
   1a6cc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a6d0:	add	x1, x1, #0xa19
   1a6d4:	ldr	x0, [x8]
   1a6d8:	bl	6640 <PyErr_SetString@plt>
   1a6dc:	mov	w0, #0xffffffff            	// #-1
   1a6e0:	ldp	x20, x19, [sp, #16]
   1a6e4:	ldp	x29, x30, [sp], #32
   1a6e8:	ret
   1a6ec:	ldur	w20, [x8, #-16]
   1a6f0:	tst	w20, #0x18000
   1a6f4:	b.ne	1a6dc <PyInit__decimal@@Base+0x13b78>  // b.any
   1a6f8:	mov	x0, x2
   1a6fc:	bl	68c0 <PyObject_IsTrue@plt>
   1a700:	tbnz	w0, #31, 1a6dc <PyInit__decimal@@Base+0x13b78>
   1a704:	cmp	w0, #0x1
   1a708:	b.ne	1a720 <PyInit__decimal@@Base+0x13bbc>  // b.any
   1a70c:	ldr	x8, [x19, #16]
   1a710:	mov	w0, wzr
   1a714:	ldr	w9, [x8]
   1a718:	orr	w9, w9, w20
   1a71c:	b	1a730 <PyInit__decimal@@Base+0x13bcc>
   1a720:	ldr	x8, [x19, #16]
   1a724:	mov	w0, wzr
   1a728:	ldr	w9, [x8]
   1a72c:	bic	w9, w9, w20
   1a730:	str	w9, [x8]
   1a734:	b	1a6e0 <PyInit__decimal@@Base+0x13b7c>
   1a738:	stp	x29, x30, [sp, #-64]!
   1a73c:	str	x23, [sp, #16]
   1a740:	stp	x22, x21, [sp, #32]
   1a744:	stp	x20, x19, [sp, #48]
   1a748:	mov	x29, sp
   1a74c:	ldr	x8, [x0, #16]
   1a750:	ldr	w20, [x8]
   1a754:	bl	6910 <PyDict_New@plt>
   1a758:	mov	x19, x0
   1a75c:	cbz	x0, 1a7c8 <PyInit__decimal@@Base+0x13c64>
   1a760:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a764:	ldr	x8, [x8, #2568]
   1a768:	cbz	x8, 1a7c8 <PyInit__decimal@@Base+0x13c64>
   1a76c:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
   1a770:	adrp	x23, 49000 <PyInit__decimal@@Base+0x4249c>
   1a774:	ldr	x22, [x22, #4024]
   1a778:	ldr	x23, [x23, #3976]
   1a77c:	adrp	x21, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a780:	add	x21, x21, #0xa28
   1a784:	ldur	w8, [x21, #-16]
   1a788:	ldur	x1, [x21, #-8]
   1a78c:	mov	x0, x19
   1a790:	tst	w8, w20
   1a794:	csel	x2, x23, x22, eq  // eq = none
   1a798:	bl	6990 <PyDict_SetItem@plt>
   1a79c:	tbnz	w0, #31, 1a7ac <PyInit__decimal@@Base+0x13c48>
   1a7a0:	ldr	x8, [x21], #32
   1a7a4:	cbnz	x8, 1a784 <PyInit__decimal@@Base+0x13c20>
   1a7a8:	b	1a7c8 <PyInit__decimal@@Base+0x13c64>
   1a7ac:	ldr	x8, [x19]
   1a7b0:	subs	x8, x8, #0x1
   1a7b4:	str	x8, [x19]
   1a7b8:	b.ne	1a7c4 <PyInit__decimal@@Base+0x13c60>  // b.any
   1a7bc:	mov	x0, x19
   1a7c0:	bl	65c0 <_Py_Dealloc@plt>
   1a7c4:	mov	x19, xzr
   1a7c8:	mov	x0, x19
   1a7cc:	ldp	x20, x19, [sp, #48]
   1a7d0:	ldp	x22, x21, [sp, #32]
   1a7d4:	ldr	x23, [sp, #16]
   1a7d8:	ldp	x29, x30, [sp], #64
   1a7dc:	ret
   1a7e0:	stp	x29, x30, [sp, #-48]!
   1a7e4:	str	x21, [sp, #16]
   1a7e8:	stp	x20, x19, [sp, #32]
   1a7ec:	mov	x29, sp
   1a7f0:	adrp	x20, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a7f4:	ldr	x0, [x20, #1408]
   1a7f8:	add	x2, x29, #0x18
   1a7fc:	mov	x1, xzr
   1a800:	bl	6730 <PyContextVar_Get@plt>
   1a804:	tbnz	w0, #31, 1a88c <PyInit__decimal@@Base+0x13d28>
   1a808:	ldr	x19, [x29, #24]
   1a80c:	cbnz	x19, 1a890 <PyInit__decimal@@Base+0x13d2c>
   1a810:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a814:	ldr	x21, [x8, #1504]
   1a818:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a81c:	add	x0, x0, #0x4c0
   1a820:	mov	x1, xzr
   1a824:	bl	6830 <PyObject_CallObject@plt>
   1a828:	mov	x19, x0
   1a82c:	cbz	x0, 1a890 <PyInit__decimal@@Base+0x13d2c>
   1a830:	ldp	q1, q0, [x21, #32]
   1a834:	ldr	q2, [x21, #16]
   1a838:	mov	x1, x19
   1a83c:	stp	q1, q0, [x19, #32]
   1a840:	str	q2, [x19, #16]
   1a844:	ldr	w8, [x21, #80]
   1a848:	stp	wzr, wzr, [x19, #44]
   1a84c:	str	w8, [x19, #80]
   1a850:	ldr	x0, [x20, #1408]
   1a854:	bl	6670 <PyContextVar_Set@plt>
   1a858:	cbz	x0, 1a874 <PyInit__decimal@@Base+0x13d10>
   1a85c:	ldr	x8, [x0]
   1a860:	subs	x8, x8, #0x1
   1a864:	str	x8, [x0]
   1a868:	b.ne	1a890 <PyInit__decimal@@Base+0x13d2c>  // b.any
   1a86c:	bl	65c0 <_Py_Dealloc@plt>
   1a870:	b	1a890 <PyInit__decimal@@Base+0x13d2c>
   1a874:	ldr	x8, [x19]
   1a878:	subs	x8, x8, #0x1
   1a87c:	str	x8, [x19]
   1a880:	b.ne	1a88c <PyInit__decimal@@Base+0x13d28>  // b.any
   1a884:	mov	x0, x19
   1a888:	bl	65c0 <_Py_Dealloc@plt>
   1a88c:	mov	x19, xzr
   1a890:	mov	x0, x19
   1a894:	ldp	x20, x19, [sp, #32]
   1a898:	ldr	x21, [sp, #16]
   1a89c:	ldp	x29, x30, [sp], #48
   1a8a0:	ret
   1a8a4:	sub	sp, sp, #0x50
   1a8a8:	stp	x29, x30, [sp, #16]
   1a8ac:	stp	x24, x23, [sp, #32]
   1a8b0:	stp	x22, x21, [sp, #48]
   1a8b4:	stp	x20, x19, [sp, #64]
   1a8b8:	add	x29, sp, #0x10
   1a8bc:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a8c0:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
   1a8c4:	ldr	x0, [x23, #1408]
   1a8c8:	ldr	x22, [x22, #4008]
   1a8cc:	mov	x20, x2
   1a8d0:	mov	x21, x1
   1a8d4:	add	x2, sp, #0x8
   1a8d8:	mov	x1, xzr
   1a8dc:	str	x22, [sp]
   1a8e0:	bl	6730 <PyContextVar_Get@plt>
   1a8e4:	tbnz	w0, #31, 1aa74 <PyInit__decimal@@Base+0x13f10>
   1a8e8:	ldr	x19, [sp, #8]
   1a8ec:	cbz	x19, 1a978 <PyInit__decimal@@Base+0x13e14>
   1a8f0:	ldr	x8, [x19]
   1a8f4:	subs	x8, x8, #0x1
   1a8f8:	str	x8, [x19]
   1a8fc:	b.ne	1a908 <PyInit__decimal@@Base+0x13da4>  // b.any
   1a900:	mov	x0, x19
   1a904:	bl	65c0 <_Py_Dealloc@plt>
   1a908:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   1a90c:	adrp	x3, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a910:	add	x2, x2, #0x27c
   1a914:	add	x3, x3, #0x4d8
   1a918:	mov	x4, sp
   1a91c:	mov	x0, x21
   1a920:	mov	x1, x20
   1a924:	bl	6510 <PyArg_ParseTupleAndKeywords@plt>
   1a928:	cbz	w0, 1aa74 <PyInit__decimal@@Base+0x13f10>
   1a92c:	ldr	x8, [sp]
   1a930:	cmp	x8, x22
   1a934:	b.eq	1a9dc <PyInit__decimal@@Base+0x13e78>  // b.none
   1a938:	ldr	x0, [x8, #8]
   1a93c:	adrp	x8, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a940:	add	x8, x8, #0x4c0
   1a944:	cmp	x0, x8
   1a948:	b.eq	1a9e0 <PyInit__decimal@@Base+0x13e7c>  // b.none
   1a94c:	adrp	x1, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a950:	add	x1, x1, #0x4c0
   1a954:	bl	69b0 <PyType_IsSubtype@plt>
   1a958:	cbnz	w0, 1a9e0 <PyInit__decimal@@Base+0x13e7c>
   1a95c:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1a960:	ldr	x8, [x8, #3936]
   1a964:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1a968:	add	x1, x1, #0x131
   1a96c:	ldr	x0, [x8]
   1a970:	bl	6640 <PyErr_SetString@plt>
   1a974:	b	1aa74 <PyInit__decimal@@Base+0x13f10>
   1a978:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1a97c:	ldr	x24, [x8, #1504]
   1a980:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a984:	add	x0, x0, #0x4c0
   1a988:	mov	x1, xzr
   1a98c:	bl	6830 <PyObject_CallObject@plt>
   1a990:	cbz	x0, 1aa74 <PyInit__decimal@@Base+0x13f10>
   1a994:	ldp	q1, q0, [x24, #32]
   1a998:	ldr	q2, [x24, #16]
   1a99c:	mov	x19, x0
   1a9a0:	mov	x1, x19
   1a9a4:	stp	q1, q0, [x0, #32]
   1a9a8:	str	q2, [x0, #16]
   1a9ac:	ldr	w8, [x24, #80]
   1a9b0:	stp	wzr, wzr, [x0, #44]
   1a9b4:	str	w8, [x0, #80]
   1a9b8:	ldr	x0, [x23, #1408]
   1a9bc:	bl	6670 <PyContextVar_Set@plt>
   1a9c0:	cbz	x0, 1aa5c <PyInit__decimal@@Base+0x13ef8>
   1a9c4:	ldr	x8, [x0]
   1a9c8:	subs	x8, x8, #0x1
   1a9cc:	str	x8, [x0]
   1a9d0:	b.ne	1a8f0 <PyInit__decimal@@Base+0x13d8c>  // b.any
   1a9d4:	bl	65c0 <_Py_Dealloc@plt>
   1a9d8:	b	1a8f0 <PyInit__decimal@@Base+0x13d8c>
   1a9dc:	str	x19, [sp]
   1a9e0:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a9e4:	add	x0, x0, #0x660
   1a9e8:	bl	6940 <_PyObject_New@plt>
   1a9ec:	cbz	x0, 1aa78 <PyInit__decimal@@Base+0x13f14>
   1a9f0:	ldr	x21, [sp]
   1a9f4:	mov	x20, x0
   1a9f8:	adrp	x0, 4a000 <PyInit__decimal@@Base+0x4349c>
   1a9fc:	add	x0, x0, #0x4c0
   1aa00:	mov	x1, xzr
   1aa04:	bl	6830 <PyObject_CallObject@plt>
   1aa08:	cbz	x0, 1aa40 <PyInit__decimal@@Base+0x13edc>
   1aa0c:	ldp	q1, q0, [x21, #32]
   1aa10:	ldr	q2, [x21, #16]
   1aa14:	stp	q1, q0, [x0, #32]
   1aa18:	str	q2, [x0, #16]
   1aa1c:	str	wzr, [x0, #48]
   1aa20:	ldr	w8, [x21, #80]
   1aa24:	str	w8, [x0, #80]
   1aa28:	stp	x0, x19, [x20, #16]
   1aa2c:	ldr	x8, [x19]
   1aa30:	mov	x0, x20
   1aa34:	add	x8, x8, #0x1
   1aa38:	str	x8, [x19]
   1aa3c:	b	1aa78 <PyInit__decimal@@Base+0x13f14>
   1aa40:	ldr	x8, [x20]
   1aa44:	stp	xzr, xzr, [x20, #16]
   1aa48:	subs	x8, x8, #0x1
   1aa4c:	str	x8, [x20]
   1aa50:	b.ne	1aa78 <PyInit__decimal@@Base+0x13f14>  // b.any
   1aa54:	mov	x0, x20
   1aa58:	b	1aa70 <PyInit__decimal@@Base+0x13f0c>
   1aa5c:	ldr	x8, [x19]
   1aa60:	subs	x8, x8, #0x1
   1aa64:	str	x8, [x19]
   1aa68:	b.ne	1aa74 <PyInit__decimal@@Base+0x13f10>  // b.any
   1aa6c:	mov	x0, x19
   1aa70:	bl	65c0 <_Py_Dealloc@plt>
   1aa74:	mov	x0, xzr
   1aa78:	ldp	x20, x19, [sp, #64]
   1aa7c:	ldp	x22, x21, [sp, #48]
   1aa80:	ldp	x24, x23, [sp, #32]
   1aa84:	ldp	x29, x30, [sp, #16]
   1aa88:	add	sp, sp, #0x50
   1aa8c:	ret
   1aa90:	mov	x8, x0
   1aa94:	cbz	x4, 1ab38 <PyInit__decimal@@Base+0x13fd4>
   1aa98:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1aa9c:	mov	x11, #0x76180000            	// #1981284352
   1aaa0:	movk	x9, #0x2304, lsl #32
   1aaa4:	movk	x11, #0xdcfb, lsl #32
   1aaa8:	mov	x10, xzr
   1aaac:	mov	x0, xzr
   1aab0:	movk	x9, #0x8ac7, lsl #48
   1aab4:	movk	x11, #0x7538, lsl #48
   1aab8:	ldr	x12, [x1, x10, lsl #3]
   1aabc:	ldr	x13, [x2, x10, lsl #3]
   1aac0:	add	x14, x12, x0
   1aac4:	add	x13, x14, x13
   1aac8:	cmp	x13, x12
   1aacc:	cset	w14, cc  // cc = lo, ul, last
   1aad0:	cmp	x13, x9
   1aad4:	cset	w15, hi  // hi = pmore
   1aad8:	orr	w0, w14, w15
   1aadc:	add	x12, x13, x11
   1aae0:	cmp	w0, #0x0
   1aae4:	csel	x12, x12, x13, ne  // ne = any
   1aae8:	str	x12, [x8, x10, lsl #3]
   1aaec:	add	x10, x10, #0x1
   1aaf0:	cmp	x4, x10
   1aaf4:	b.ne	1aab8 <PyInit__decimal@@Base+0x13f54>  // b.any
   1aaf8:	cbz	x0, 1ab3c <PyInit__decimal@@Base+0x13fd8>
   1aafc:	cmp	x4, x3
   1ab00:	b.cs	1ab3c <PyInit__decimal@@Base+0x13fd8>  // b.hs, b.nlast
   1ab04:	mov	w0, #0x1                   	// #1
   1ab08:	ldr	x10, [x1, x4, lsl #3]
   1ab0c:	add	x11, x9, #0x1
   1ab10:	add	x10, x10, x0
   1ab14:	cmp	x10, x11
   1ab18:	csel	x10, xzr, x10, eq  // eq = none
   1ab1c:	cset	w0, eq  // eq = none
   1ab20:	str	x10, [x8, x4, lsl #3]
   1ab24:	add	x4, x4, #0x1
   1ab28:	b.ne	1ab3c <PyInit__decimal@@Base+0x13fd8>  // b.any
   1ab2c:	cmp	x4, x3
   1ab30:	b.cc	1ab08 <PyInit__decimal@@Base+0x13fa4>  // b.lo, b.ul, b.last
   1ab34:	b	1ab3c <PyInit__decimal@@Base+0x13fd8>
   1ab38:	mov	x0, xzr
   1ab3c:	cmp	x4, x3
   1ab40:	b.cs	1ab60 <PyInit__decimal@@Base+0x13ffc>  // b.hs, b.nlast
   1ab44:	sub	x9, x3, x4
   1ab48:	add	x8, x8, x4, lsl #3
   1ab4c:	add	x10, x1, x4, lsl #3
   1ab50:	ldr	x11, [x10], #8
   1ab54:	subs	x9, x9, #0x1
   1ab58:	str	x11, [x8], #8
   1ab5c:	b.ne	1ab50 <PyInit__decimal@@Base+0x13fec>  // b.any
   1ab60:	ret
   1ab64:	cbz	x2, 1abf0 <PyInit__decimal@@Base+0x1408c>
   1ab68:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1ab6c:	mov	x9, #0x76180000            	// #1981284352
   1ab70:	movk	x8, #0x2304, lsl #32
   1ab74:	movk	x9, #0xdcfb, lsl #32
   1ab78:	mov	x12, xzr
   1ab7c:	movk	x8, #0x8ac7, lsl #48
   1ab80:	movk	x9, #0x7538, lsl #48
   1ab84:	mov	x10, x0
   1ab88:	mov	x11, x2
   1ab8c:	ldr	x13, [x10]
   1ab90:	ldr	x14, [x1], #8
   1ab94:	add	x12, x13, x12
   1ab98:	add	x14, x12, x14
   1ab9c:	cmp	x14, x13
   1aba0:	cset	w12, cc  // cc = lo, ul, last
   1aba4:	cmp	x14, x8
   1aba8:	cset	w16, hi  // hi = pmore
   1abac:	orr	w12, w12, w16
   1abb0:	add	x15, x14, x9
   1abb4:	cmp	w12, #0x0
   1abb8:	csel	x15, x15, x14, ne  // ne = any
   1abbc:	subs	x11, x11, #0x1
   1abc0:	str	x15, [x10], #8
   1abc4:	b.ne	1ab8c <PyInit__decimal@@Base+0x14028>  // b.any
   1abc8:	cmp	x14, x13
   1abcc:	b.cc	1abd8 <PyInit__decimal@@Base+0x14074>  // b.lo, b.ul, b.last
   1abd0:	cmp	x14, x8
   1abd4:	b.ls	1abf0 <PyInit__decimal@@Base+0x1408c>  // b.plast
   1abd8:	add	x9, x0, x2, lsl #3
   1abdc:	ldr	x10, [x9]
   1abe0:	cmp	x10, x8
   1abe4:	csinc	x10, xzr, x10, eq  // eq = none
   1abe8:	str	x10, [x9], #8
   1abec:	b.eq	1abdc <PyInit__decimal@@Base+0x14078>  // b.none
   1abf0:	ret
   1abf4:	ldr	x8, [x0]
   1abf8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   1abfc:	movk	x10, #0x2304, lsl #32
   1ac00:	movk	x10, #0x8ac7, lsl #48
   1ac04:	adds	x11, x8, x2
   1ac08:	mov	x9, #0x76180000            	// #1981284352
   1ac0c:	cset	w8, cs  // cs = hs, nlast
   1ac10:	cmp	x11, x10
   1ac14:	movk	x9, #0xdcfb, lsl #32
   1ac18:	cset	w12, hi  // hi = pmore
   1ac1c:	movk	x9, #0x7538, lsl #48
   1ac20:	orr	w8, w8, w12
   1ac24:	add	x9, x11, x9
   1ac28:	cmp	w8, #0x0
   1ac2c:	csel	x9, x9, x11, ne  // ne = any
   1ac30:	str	x9, [x0]
   1ac34:	cbz	w8, 1ac70 <PyInit__decimal@@Base+0x1410c>
   1ac38:	cmp	x1, #0x2
   1ac3c:	b.cc	1ac70 <PyInit__decimal@@Base+0x1410c>  // b.lo, b.ul, b.last
   1ac40:	mov	w9, #0x1                   	// #1
   1ac44:	add	x10, x10, #0x1
   1ac48:	ldr	x11, [x0, x9, lsl #3]
   1ac4c:	add	x11, x11, x8
   1ac50:	cmp	x11, x10
   1ac54:	cset	w8, eq  // eq = none
   1ac58:	csel	x11, xzr, x11, eq  // eq = none
   1ac5c:	str	x11, [x0, x9, lsl #3]
   1ac60:	b.ne	1ac70 <PyInit__decimal@@Base+0x1410c>  // b.any
   1ac64:	add	x9, x9, #0x1
   1ac68:	cmp	x9, x1
   1ac6c:	b.cc	1ac48 <PyInit__decimal@@Base+0x140e4>  // b.lo, b.ul, b.last
   1ac70:	mov	x0, x8
   1ac74:	ret
   1ac78:	cbz	x1, 1acc0 <PyInit__decimal@@Base+0x1415c>
   1ac7c:	mov	x10, #0x89e80000            	// #2313682944
   1ac80:	movk	x10, #0x2304, lsl #32
   1ac84:	mov	x8, x0
   1ac88:	mov	x9, xzr
   1ac8c:	mov	w0, #0x1                   	// #1
   1ac90:	movk	x10, #0x8ac7, lsl #48
   1ac94:	ldr	x11, [x8, x9, lsl #3]
   1ac98:	add	x11, x11, x0
   1ac9c:	cmp	x11, x10
   1aca0:	cset	w0, eq  // eq = none
   1aca4:	csel	x11, xzr, x11, eq  // eq = none
   1aca8:	str	x11, [x8, x9, lsl #3]
   1acac:	b.ne	1acbc <PyInit__decimal@@Base+0x14158>  // b.any
   1acb0:	add	x9, x9, #0x1
   1acb4:	cmp	x9, x1
   1acb8:	b.cc	1ac94 <PyInit__decimal@@Base+0x14130>  // b.lo, b.ul, b.last
   1acbc:	ret
   1acc0:	mov	w0, #0x1                   	// #1
   1acc4:	ret
   1acc8:	cbz	x4, 1ad48 <PyInit__decimal@@Base+0x141e4>
   1accc:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1acd0:	movk	x8, #0x2304, lsl #32
   1acd4:	mov	x9, xzr
   1acd8:	mov	x10, xzr
   1acdc:	movk	x8, #0x8ac7, lsl #48
   1ace0:	ldr	x12, [x2, x9, lsl #3]
   1ace4:	ldr	x11, [x1, x9, lsl #3]
   1ace8:	add	x12, x12, x10
   1acec:	subs	x13, x11, x12
   1acf0:	add	x14, x8, x13
   1acf4:	csinc	x13, x13, x14, cs  // cs = hs, nlast
   1acf8:	str	x13, [x0, x9, lsl #3]
   1acfc:	add	x9, x9, #0x1
   1ad00:	cset	w10, cc  // cc = lo, ul, last
   1ad04:	cmp	x4, x9
   1ad08:	b.ne	1ace0 <PyInit__decimal@@Base+0x1417c>  // b.any
   1ad0c:	cmp	x11, x12
   1ad10:	b.cs	1ad48 <PyInit__decimal@@Base+0x141e4>  // b.hs, b.nlast
   1ad14:	cmp	x4, x3
   1ad18:	b.cs	1ad48 <PyInit__decimal@@Base+0x141e4>  // b.hs, b.nlast
   1ad1c:	mov	w9, #0x1                   	// #1
   1ad20:	ldr	x10, [x1, x4, lsl #3]
   1ad24:	sub	x11, x10, x9
   1ad28:	cmp	x10, #0x0
   1ad2c:	csel	x11, x8, x11, eq  // eq = none
   1ad30:	cset	w9, eq  // eq = none
   1ad34:	str	x11, [x0, x4, lsl #3]
   1ad38:	add	x4, x4, #0x1
   1ad3c:	cbnz	x10, 1ad48 <PyInit__decimal@@Base+0x141e4>
   1ad40:	cmp	x4, x3
   1ad44:	b.cc	1ad20 <PyInit__decimal@@Base+0x141bc>  // b.lo, b.ul, b.last
   1ad48:	cmp	x4, x3
   1ad4c:	b.cs	1ad6c <PyInit__decimal@@Base+0x14208>  // b.hs, b.nlast
   1ad50:	sub	x8, x3, x4
   1ad54:	add	x9, x0, x4, lsl #3
   1ad58:	add	x10, x1, x4, lsl #3
   1ad5c:	ldr	x11, [x10], #8
   1ad60:	subs	x8, x8, #0x1
   1ad64:	str	x11, [x9], #8
   1ad68:	b.ne	1ad5c <PyInit__decimal@@Base+0x141f8>  // b.any
   1ad6c:	ret
   1ad70:	cbz	x2, 1add8 <PyInit__decimal@@Base+0x14274>
   1ad74:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1ad78:	movk	x8, #0x2304, lsl #32
   1ad7c:	mov	x9, xzr
   1ad80:	movk	x8, #0x8ac7, lsl #48
   1ad84:	mov	x10, x0
   1ad88:	mov	x11, x2
   1ad8c:	ldr	x12, [x10]
   1ad90:	ldr	x13, [x1], #8
   1ad94:	add	x13, x13, x9
   1ad98:	subs	x14, x12, x13
   1ad9c:	add	x15, x8, x14
   1ada0:	csinc	x14, x14, x15, cs  // cs = hs, nlast
   1ada4:	cset	w9, cc  // cc = lo, ul, last
   1ada8:	subs	x11, x11, #0x1
   1adac:	str	x14, [x10], #8
   1adb0:	b.ne	1ad8c <PyInit__decimal@@Base+0x14228>  // b.any
   1adb4:	cmp	x12, x13
   1adb8:	b.cs	1add8 <PyInit__decimal@@Base+0x14274>  // b.hs, b.nlast
   1adbc:	add	x9, x0, x2, lsl #3
   1adc0:	ldr	x10, [x9]
   1adc4:	sub	x11, x10, #0x1
   1adc8:	cmp	x10, #0x0
   1adcc:	csel	x11, x8, x11, eq  // eq = none
   1add0:	str	x11, [x9], #8
   1add4:	cbz	x10, 1adc0 <PyInit__decimal@@Base+0x1425c>
   1add8:	ret
   1addc:	mov	x13, xzr
   1ade0:	cbz	x2, 1ae78 <PyInit__decimal@@Base+0x14314>
   1ade4:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1ade8:	ldr	x8, [x8, #3856]
   1adec:	mov	x9, #0x89e80000            	// #2313682944
   1adf0:	mov	x10, #0x76180000            	// #1981284352
   1adf4:	movk	x9, #0x2304, lsl #32
   1adf8:	movk	x10, #0xdcfb, lsl #32
   1adfc:	movk	x9, #0x8ac7, lsl #48
   1ae00:	movk	x10, #0x7538, lsl #48
   1ae04:	mov	x11, x0
   1ae08:	mov	x12, x2
   1ae0c:	ldr	x14, [x1], #8
   1ae10:	umulh	x15, x14, x3
   1ae14:	mul	x14, x14, x3
   1ae18:	adds	x13, x13, x14
   1ae1c:	cinc	x14, x15, cs  // cs = hs, nlast
   1ae20:	and	x15, x9, x13, asr #63
   1ae24:	add	x15, x15, x13
   1ae28:	sub	x16, x14, x13, asr #63
   1ae2c:	umulh	x17, x16, x8
   1ae30:	mul	x16, x16, x8
   1ae34:	mvn	x15, x15
   1ae38:	cmp	x15, x16
   1ae3c:	add	x15, x14, x17
   1ae40:	cinc	x15, x15, cc  // cc = lo, ul, last
   1ae44:	mvn	x15, x15
   1ae48:	umulh	x16, x15, x9
   1ae4c:	mul	x17, x15, x9
   1ae50:	adds	x17, x13, x17
   1ae54:	add	x13, x14, x16
   1ae58:	cinc	x13, x13, cs  // cs = hs, nlast
   1ae5c:	add	x14, x13, x10
   1ae60:	sub	x13, x14, x15
   1ae64:	and	x14, x14, x9
   1ae68:	add	x14, x14, x17
   1ae6c:	subs	x12, x12, #0x1
   1ae70:	str	x14, [x11], #8
   1ae74:	b.ne	1ae0c <PyInit__decimal@@Base+0x142a8>  // b.any
   1ae78:	str	x13, [x0, x2, lsl #3]
   1ae7c:	ret
   1ae80:	cbz	x4, 1af54 <PyInit__decimal@@Base+0x143f0>
   1ae84:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1ae88:	ldr	x9, [x9, #3856]
   1ae8c:	mov	x10, #0x89e80000            	// #2313682944
   1ae90:	mov	x11, #0x76180000            	// #1981284352
   1ae94:	movk	x10, #0x2304, lsl #32
   1ae98:	movk	x11, #0xdcfb, lsl #32
   1ae9c:	mov	x8, xzr
   1aea0:	movk	x10, #0x8ac7, lsl #48
   1aea4:	movk	x11, #0x7538, lsl #48
   1aea8:	mov	x12, x0
   1aeac:	mov	x16, xzr
   1aeb0:	cbz	x3, 1af3c <PyInit__decimal@@Base+0x143d8>
   1aeb4:	mov	x13, x12
   1aeb8:	mov	x14, x1
   1aebc:	mov	x15, x3
   1aec0:	ldr	x17, [x14], #8
   1aec4:	ldr	x18, [x2, x8, lsl #3]
   1aec8:	ldr	x5, [x13]
   1aecc:	umulh	x6, x18, x17
   1aed0:	mul	x17, x18, x17
   1aed4:	adds	x17, x5, x17
   1aed8:	cinc	x18, x6, cs  // cs = hs, nlast
   1aedc:	adds	x16, x17, x16
   1aee0:	cinc	x17, x18, cs  // cs = hs, nlast
   1aee4:	and	x18, x10, x16, asr #63
   1aee8:	add	x18, x18, x16
   1aeec:	sub	x5, x17, x16, asr #63
   1aef0:	umulh	x6, x5, x9
   1aef4:	mul	x5, x5, x9
   1aef8:	mvn	x18, x18
   1aefc:	cmp	x18, x5
   1af00:	add	x18, x17, x6
   1af04:	cinc	x18, x18, cc  // cc = lo, ul, last
   1af08:	mvn	x18, x18
   1af0c:	umulh	x5, x18, x10
   1af10:	mul	x6, x18, x10
   1af14:	adds	x6, x16, x6
   1af18:	add	x16, x17, x5
   1af1c:	cinc	x16, x16, cs  // cs = hs, nlast
   1af20:	add	x17, x16, x11
   1af24:	sub	x16, x17, x18
   1af28:	and	x17, x17, x10
   1af2c:	add	x17, x17, x6
   1af30:	subs	x15, x15, #0x1
   1af34:	str	x17, [x13], #8
   1af38:	b.ne	1aec0 <PyInit__decimal@@Base+0x1435c>  // b.any
   1af3c:	add	x13, x8, x3
   1af40:	add	x8, x8, #0x1
   1af44:	cmp	x8, x4
   1af48:	add	x12, x12, #0x8
   1af4c:	str	x16, [x0, x13, lsl #3]
   1af50:	b.ne	1aeac <PyInit__decimal@@Base+0x14348>  // b.any
   1af54:	ret
   1af58:	stp	x29, x30, [sp, #-80]!
   1af5c:	str	x25, [sp, #16]
   1af60:	stp	x24, x23, [sp, #32]
   1af64:	stp	x22, x21, [sp, #48]
   1af68:	stp	x20, x19, [sp, #64]
   1af6c:	mov	x29, sp
   1af70:	cbz	x2, 1afd4 <PyInit__decimal@@Base+0x14470>
   1af74:	mov	x24, #0x89e80000            	// #2313682944
   1af78:	mov	x8, x0
   1af7c:	movk	x24, #0x2304, lsl #32
   1af80:	mov	x19, x3
   1af84:	mov	x20, x2
   1af88:	mov	x0, xzr
   1af8c:	sub	x22, x8, #0x8
   1af90:	sub	x23, x1, #0x8
   1af94:	movk	x24, #0x8ac7, lsl #48
   1af98:	ldr	x8, [x23, x20, lsl #3]
   1af9c:	mul	x10, x0, x24
   1afa0:	umulh	x9, x0, x24
   1afa4:	mov	x2, x19
   1afa8:	adds	x21, x8, x10
   1afac:	cinc	x1, x9, cs  // cs = hs, nlast
   1afb0:	mov	x0, x21
   1afb4:	mov	x3, xzr
   1afb8:	sub	x25, x20, #0x1
   1afbc:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1afc0:	str	x0, [x22, x20, lsl #3]
   1afc4:	msub	x0, x0, x19, x21
   1afc8:	mov	x20, x25
   1afcc:	cbnz	x25, 1af98 <PyInit__decimal@@Base+0x14434>
   1afd0:	b	1afd8 <PyInit__decimal@@Base+0x14474>
   1afd4:	mov	x0, xzr
   1afd8:	ldp	x20, x19, [sp, #64]
   1afdc:	ldp	x22, x21, [sp, #48]
   1afe0:	ldp	x24, x23, [sp, #32]
   1afe4:	ldr	x25, [sp, #16]
   1afe8:	ldp	x29, x30, [sp], #80
   1afec:	ret
   1aff0:	stp	x29, x30, [sp, #-96]!
   1aff4:	stp	x28, x27, [sp, #16]
   1aff8:	stp	x26, x25, [sp, #32]
   1affc:	stp	x24, x23, [sp, #48]
   1b000:	stp	x22, x21, [sp, #64]
   1b004:	stp	x20, x19, [sp, #80]
   1b008:	mov	x29, sp
   1b00c:	sub	sp, sp, #0x470
   1b010:	subs	x28, x4, x5
   1b014:	str	x0, [sp, #56]
   1b018:	b.cc	1b3b0 <PyInit__decimal@@Base+0x1484c>  // b.lo, b.ul, b.last
   1b01c:	sub	x24, x5, #0x1
   1b020:	ldr	x19, [x3, x24, lsl #3]
   1b024:	mov	x22, x4
   1b028:	mov	x25, x3
   1b02c:	mov	x27, x2
   1b030:	mov	x20, x1
   1b034:	cmp	x4, #0x40
   1b038:	str	x5, [sp, #64]
   1b03c:	b.cc	1b058 <PyInit__decimal@@Base+0x144f4>  // b.lo, b.ul, b.last
   1b040:	add	x0, x22, #0x1
   1b044:	mov	w1, #0x8                   	// #8
   1b048:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   1b04c:	mov	x21, x0
   1b050:	cbnz	x0, 1b05c <PyInit__decimal@@Base+0x144f8>
   1b054:	b	1b090 <PyInit__decimal@@Base+0x1452c>
   1b058:	add	x21, sp, #0x268
   1b05c:	ldr	x23, [sp, #64]
   1b060:	str	x20, [sp, #16]
   1b064:	cmp	x23, #0x40
   1b068:	b.cc	1b098 <PyInit__decimal@@Base+0x14534>  // b.lo, b.ul, b.last
   1b06c:	add	x0, x23, #0x1
   1b070:	mov	w1, #0x8                   	// #8
   1b074:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   1b078:	mov	x20, x0
   1b07c:	cbnz	x0, 1b09c <PyInit__decimal@@Base+0x14538>
   1b080:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1b084:	ldr	x8, [x8, #1384]
   1b088:	mov	x0, x21
   1b08c:	blr	x8
   1b090:	mov	w21, #0xffffffff            	// #-1
   1b094:	b	1b36c <PyInit__decimal@@Base+0x14808>
   1b098:	add	x20, sp, #0x68
   1b09c:	str	x24, [sp, #48]
   1b0a0:	mov	x24, #0x89e80000            	// #2313682944
   1b0a4:	movk	x24, #0x2304, lsl #32
   1b0a8:	movk	x24, #0x8ac7, lsl #48
   1b0ac:	add	x8, x19, #0x1
   1b0b0:	udiv	x19, x24, x8
   1b0b4:	mov	x0, x21
   1b0b8:	mov	x1, x27
   1b0bc:	mov	x2, x22
   1b0c0:	mov	x3, x19
   1b0c4:	bl	1addc <PyInit__decimal@@Base+0x14278>
   1b0c8:	mov	x0, x20
   1b0cc:	mov	x1, x25
   1b0d0:	mov	x2, x23
   1b0d4:	mov	x3, x19
   1b0d8:	str	x19, [sp, #8]
   1b0dc:	bl	1addc <PyInit__decimal@@Base+0x14278>
   1b0e0:	cmn	x28, #0x1
   1b0e4:	mov	x27, x23
   1b0e8:	b.eq	1b31c <PyInit__decimal@@Base+0x147b8>  // b.none
   1b0ec:	sub	x8, x27, #0x2
   1b0f0:	stp	x8, x21, [sp, #32]
   1b0f4:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1b0f8:	ldr	x26, [x8, #3856]
   1b0fc:	mov	x25, #0x89e80000            	// #2313682944
   1b100:	movk	x25, #0x2304, lsl #32
   1b104:	add	x8, sp, #0x58
   1b108:	movk	x25, #0x8ac7, lsl #48
   1b10c:	add	x9, x27, #0x1
   1b110:	add	x19, x8, #0x8
   1b114:	add	x22, x21, x22, lsl #3
   1b118:	add	x23, x21, x28, lsl #3
   1b11c:	str	x9, [sp, #24]
   1b120:	ldr	x10, [sp, #48]
   1b124:	mov	x8, x21
   1b128:	mov	x21, xzr
   1b12c:	mov	x9, xzr
   1b130:	ldr	x27, [x20, x10, lsl #3]
   1b134:	add	x8, x8, x28, lsl #3
   1b138:	stp	x8, x28, [sp, #72]
   1b13c:	ldr	x8, [x22, x21]
   1b140:	umulh	x10, x9, x25
   1b144:	mul	x9, x9, x25
   1b148:	mov	x2, x27
   1b14c:	adds	x28, x8, x9
   1b150:	cinc	x1, x10, cs  // cs = hs, nlast
   1b154:	mov	x0, x28
   1b158:	mov	x3, xzr
   1b15c:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1b160:	str	x0, [x19, x21]
   1b164:	sub	x21, x21, #0x8
   1b168:	cmn	x21, #0x10
   1b16c:	msub	x9, x27, x0, x28
   1b170:	b.ne	1b13c <PyInit__decimal@@Base+0x145d8>  // b.any
   1b174:	ldp	x10, x11, [sp, #88]
   1b178:	ldp	x18, x21, [sp, #32]
   1b17c:	ldr	x28, [sp, #80]
   1b180:	ldr	x16, [sp, #56]
   1b184:	mov	x17, #0x76180000            	// #1981284352
   1b188:	movk	x17, #0xdcfb, lsl #32
   1b18c:	madd	x8, x11, x24, x10
   1b190:	add	x12, x18, x28
   1b194:	movk	x17, #0x7538, lsl #48
   1b198:	cmp	x8, x24
   1b19c:	b.cs	1b218 <PyInit__decimal@@Base+0x146b4>  // b.hs, b.nlast
   1b1a0:	ldr	x10, [x20, x18, lsl #3]
   1b1a4:	umulh	x11, x10, x8
   1b1a8:	mul	x10, x10, x8
   1b1ac:	and	x13, x24, x10, asr #63
   1b1b0:	sub	x14, x11, x10, asr #63
   1b1b4:	add	x13, x13, x10
   1b1b8:	umulh	x15, x14, x26
   1b1bc:	mul	x14, x14, x26
   1b1c0:	mvn	x13, x13
   1b1c4:	add	x15, x15, x11
   1b1c8:	cmp	x13, x14
   1b1cc:	cinc	x13, x15, cc  // cc = lo, ul, last
   1b1d0:	mvn	x13, x13
   1b1d4:	add	x11, x11, x17
   1b1d8:	umulh	x14, x13, x25
   1b1dc:	mul	x15, x13, x25
   1b1e0:	adds	x10, x15, x10
   1b1e4:	add	x11, x11, x14
   1b1e8:	cinc	x14, x11, cs  // cs = hs, nlast
   1b1ec:	sub	x11, x14, x13
   1b1f0:	and	x13, x14, x24
   1b1f4:	cmp	x11, x9
   1b1f8:	add	x10, x13, x10
   1b1fc:	b.hi	1b218 <PyInit__decimal@@Base+0x146b4>  // b.pmore
   1b200:	cmp	x9, x11
   1b204:	b.ne	1b230 <PyInit__decimal@@Base+0x146cc>  // b.any
   1b208:	ldr	x11, [x21, x12, lsl #3]
   1b20c:	cmp	x10, x11
   1b210:	b.ls	1b310 <PyInit__decimal@@Base+0x147ac>  // b.plast
   1b214:	mov	x11, x9
   1b218:	adds	x9, x9, x27
   1b21c:	sub	x8, x8, #0x1
   1b220:	b.cs	1b230 <PyInit__decimal@@Base+0x146cc>  // b.hs, b.nlast
   1b224:	sub	x13, x24, #0x1
   1b228:	cmp	x9, x13
   1b22c:	b.ls	1b198 <PyInit__decimal@@Base+0x14634>  // b.plast
   1b230:	mov	x12, xzr
   1b234:	ldr	x27, [sp, #64]
   1b238:	mov	x9, xzr
   1b23c:	mov	x13, xzr
   1b240:	stp	x10, x11, [sp, #88]
   1b244:	ldr	x10, [x20, x9, lsl #3]
   1b248:	umulh	x11, x8, x10
   1b24c:	mul	x14, x8, x10
   1b250:	madd	x10, x12, x10, x11
   1b254:	adds	x11, x13, x14
   1b258:	cinc	x10, x10, cs  // cs = hs, nlast
   1b25c:	and	x13, x24, x11, asr #63
   1b260:	add	x13, x13, x11
   1b264:	sub	x14, x10, x11, asr #63
   1b268:	umulh	x15, x14, x26
   1b26c:	mul	x14, x14, x26
   1b270:	mvn	x13, x13
   1b274:	cmp	x13, x14
   1b278:	add	x13, x10, x15
   1b27c:	cinc	x13, x13, cc  // cc = lo, ul, last
   1b280:	mvn	x14, x13
   1b284:	mul	x15, x14, x25
   1b288:	add	x10, x10, x17
   1b28c:	umulh	x14, x14, x25
   1b290:	adds	x11, x11, x15
   1b294:	ldr	x15, [x23, x9, lsl #3]
   1b298:	add	x10, x10, x14
   1b29c:	cinc	x10, x10, cs  // cs = hs, nlast
   1b2a0:	add	x13, x13, x10
   1b2a4:	and	x10, x10, x24
   1b2a8:	add	x10, x10, x11
   1b2ac:	subs	x10, x15, x10
   1b2b0:	cinc	x11, x13, cc  // cc = lo, ul, last
   1b2b4:	add	x13, x10, x24
   1b2b8:	csel	x10, x13, x10, cc  // cc = lo, ul, last
   1b2bc:	str	x10, [x23, x9, lsl #3]
   1b2c0:	add	x9, x9, #0x1
   1b2c4:	cmp	x9, x27
   1b2c8:	add	x13, x11, #0x1
   1b2cc:	b.ls	1b244 <PyInit__decimal@@Base+0x146e0>  // b.plast
   1b2d0:	str	x8, [x16, x28, lsl #3]
   1b2d4:	cbz	x13, 1b2f8 <PyInit__decimal@@Base+0x14794>
   1b2d8:	ldr	x0, [sp, #72]
   1b2dc:	ldr	x3, [sp, #24]
   1b2e0:	sub	x8, x8, #0x1
   1b2e4:	mov	x2, x20
   1b2e8:	mov	x1, x0
   1b2ec:	mov	x4, x27
   1b2f0:	str	x8, [x16, x28, lsl #3]
   1b2f4:	bl	1aa90 <PyInit__decimal@@Base+0x13f2c>
   1b2f8:	mov	x8, x28
   1b2fc:	sub	x28, x28, #0x1
   1b300:	sub	x22, x22, #0x8
   1b304:	sub	x23, x23, #0x8
   1b308:	cbnz	x8, 1b120 <PyInit__decimal@@Base+0x145bc>
   1b30c:	b	1b31c <PyInit__decimal@@Base+0x147b8>
   1b310:	mov	x12, xzr
   1b314:	mov	x11, x9
   1b318:	b	1b234 <PyInit__decimal@@Base+0x146d0>
   1b31c:	ldr	x0, [sp, #16]
   1b320:	cbz	x0, 1b390 <PyInit__decimal@@Base+0x1482c>
   1b324:	ldr	x3, [sp, #8]
   1b328:	mov	x1, x21
   1b32c:	mov	x2, x27
   1b330:	bl	1af58 <PyInit__decimal@@Base+0x143f4>
   1b334:	mov	x0, x21
   1b338:	mov	w21, wzr
   1b33c:	add	x8, sp, #0x268
   1b340:	cmp	x0, x8
   1b344:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   1b348:	b.eq	1b354 <PyInit__decimal@@Base+0x147f0>  // b.none
   1b34c:	ldr	x8, [x19, #1384]
   1b350:	blr	x8
   1b354:	add	x8, sp, #0x68
   1b358:	cmp	x20, x8
   1b35c:	b.eq	1b36c <PyInit__decimal@@Base+0x14808>  // b.none
   1b360:	ldr	x8, [x19, #1384]
   1b364:	mov	x0, x20
   1b368:	blr	x8
   1b36c:	mov	w0, w21
   1b370:	add	sp, sp, #0x470
   1b374:	ldp	x20, x19, [sp, #80]
   1b378:	ldp	x22, x21, [sp, #64]
   1b37c:	ldp	x24, x23, [sp, #48]
   1b380:	ldp	x26, x25, [sp, #32]
   1b384:	ldp	x28, x27, [sp, #16]
   1b388:	ldp	x29, x30, [sp], #96
   1b38c:	ret
   1b390:	ldr	x9, [sp, #48]
   1b394:	tbnz	x9, #63, 1b334 <PyInit__decimal@@Base+0x147d0>
   1b398:	ldr	x8, [x21, x9, lsl #3]
   1b39c:	sub	x9, x9, #0x1
   1b3a0:	cbz	x8, 1b394 <PyInit__decimal@@Base+0x14830>
   1b3a4:	mov	x0, x21
   1b3a8:	mov	w21, #0x1                   	// #1
   1b3ac:	b	1b33c <PyInit__decimal@@Base+0x147d8>
   1b3b0:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   1b3b4:	ldr	x19, [x19, #3904]
   1b3b8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1b3bc:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   1b3c0:	add	x1, x1, #0xba8
   1b3c4:	ldr	x0, [x19]
   1b3c8:	add	x2, x2, #0xbb7
   1b3cc:	mov	w3, #0x25c                 	// #604
   1b3d0:	bl	6a60 <fprintf@plt>
   1b3d4:	ldr	x3, [x19]
   1b3d8:	adrp	x0, 37000 <PyInit__decimal@@Base+0x3049c>
   1b3dc:	add	x0, x0, #0xbf3
   1b3e0:	mov	w1, #0x29                  	// #41
   1b3e4:	mov	w2, #0x1                   	// #1
   1b3e8:	bl	6920 <fwrite@plt>
   1b3ec:	ldr	x1, [x19]
   1b3f0:	mov	w0, #0xa                   	// #10
   1b3f4:	bl	65a0 <fputc@plt>
   1b3f8:	bl	67b0 <abort@plt>
   1b3fc:	sub	sp, sp, #0x80
   1b400:	stp	x29, x30, [sp, #32]
   1b404:	stp	x28, x27, [sp, #48]
   1b408:	stp	x26, x25, [sp, #64]
   1b40c:	stp	x24, x23, [sp, #80]
   1b410:	stp	x22, x21, [sp, #96]
   1b414:	stp	x20, x19, [sp, #112]
   1b418:	add	x29, sp, #0x20
   1b41c:	mov	x8, #0x435f                	// #17247
   1b420:	movk	x8, #0xd79, lsl #16
   1b424:	movk	x8, #0x35e5, lsl #32
   1b428:	movk	x8, #0xd794, lsl #48
   1b42c:	umulh	x8, x4, x8
   1b430:	lsr	x19, x8, #4
   1b434:	mov	x8, #0xffffffffffffffed    	// #-19
   1b438:	mov	x21, x3
   1b43c:	mov	x23, x1
   1b440:	madd	x25, x19, x8, x4
   1b444:	mov	x20, x0
   1b448:	cbz	x25, 1b4ec <PyInit__decimal@@Base+0x14988>
   1b44c:	add	x8, x23, x21, lsl #3
   1b450:	mov	x24, x2
   1b454:	sub	x26, x2, #0x1
   1b458:	ldur	x2, [x8, #-8]
   1b45c:	mov	w8, #0x13                  	// #19
   1b460:	sub	x22, x8, x25
   1b464:	adrp	x27, 37000 <PyInit__decimal@@Base+0x3049c>
   1b468:	add	x0, sp, #0x8
   1b46c:	add	x1, sp, #0x10
   1b470:	mov	x3, x22
   1b474:	add	x27, x27, #0xe70
   1b478:	sub	x28, x21, #0x2
   1b47c:	bl	1b538 <PyInit__decimal@@Base+0x149d4>
   1b480:	ldr	x8, [sp, #8]
   1b484:	cbz	x8, 1b494 <PyInit__decimal@@Base+0x14930>
   1b488:	sub	x9, x24, #0x2
   1b48c:	str	x8, [x20, x26, lsl #3]
   1b490:	mov	x26, x9
   1b494:	ldr	x24, [x27, x25, lsl #3]
   1b498:	ldr	x25, [sp, #16]
   1b49c:	cmn	x28, #0x1
   1b4a0:	b.eq	1b4e0 <PyInit__decimal@@Base+0x1497c>  // b.none
   1b4a4:	add	x26, x20, x26, lsl #3
   1b4a8:	sub	x23, x23, #0x10
   1b4ac:	ldr	x2, [x23, x21, lsl #3]
   1b4b0:	add	x0, sp, #0x8
   1b4b4:	sub	x1, x29, #0x8
   1b4b8:	mov	x3, x22
   1b4bc:	bl	1b538 <PyInit__decimal@@Base+0x149d4>
   1b4c0:	ldr	x8, [sp, #8]
   1b4c4:	sub	x21, x21, #0x1
   1b4c8:	cmp	x21, #0x1
   1b4cc:	madd	x8, x25, x24, x8
   1b4d0:	str	x8, [x26], #-8
   1b4d4:	ldur	x25, [x29, #-8]
   1b4d8:	b.ne	1b4ac <PyInit__decimal@@Base+0x14948>  // b.any
   1b4dc:	str	x25, [sp, #16]
   1b4e0:	mul	x8, x25, x24
   1b4e4:	str	x8, [x20, x19, lsl #3]
   1b4e8:	b	1b510 <PyInit__decimal@@Base+0x149ac>
   1b4ec:	cbz	x21, 1b510 <PyInit__decimal@@Base+0x149ac>
   1b4f0:	add	x8, x20, x19, lsl #3
   1b4f4:	sub	x8, x8, #0x8
   1b4f8:	sub	x9, x23, #0x8
   1b4fc:	ldr	x10, [x9, x21, lsl #3]
   1b500:	subs	x11, x21, #0x1
   1b504:	str	x10, [x8, x21, lsl #3]
   1b508:	mov	x21, x11
   1b50c:	b.ne	1b4fc <PyInit__decimal@@Base+0x14998>  // b.any
   1b510:	mov	x0, x20
   1b514:	mov	x1, x19
   1b518:	ldp	x20, x19, [sp, #112]
   1b51c:	ldp	x22, x21, [sp, #96]
   1b520:	ldp	x24, x23, [sp, #80]
   1b524:	ldp	x26, x25, [sp, #64]
   1b528:	ldp	x28, x27, [sp, #48]
   1b52c:	ldp	x29, x30, [sp, #32]
   1b530:	add	sp, sp, #0x80
   1b534:	b	20038 <PyInit__decimal@@Base+0x194d4>
   1b538:	cmp	x3, #0x9
   1b53c:	b.hi	1b570 <PyInit__decimal@@Base+0x14a0c>  // b.pmore
   1b540:	cmp	x3, #0x4
   1b544:	b.hi	1b5c4 <PyInit__decimal@@Base+0x14a60>  // b.pmore
   1b548:	b.hi	1b8a0 <PyInit__decimal@@Base+0x14d3c>  // b.pmore
   1b54c:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1b550:	add	x8, x8, #0xba3
   1b554:	adr	x9, 1b564 <PyInit__decimal@@Base+0x14a00>
   1b558:	ldrb	w10, [x8, x3]
   1b55c:	add	x9, x9, x10, lsl #2
   1b560:	br	x9
   1b564:	str	x2, [x0]
   1b568:	str	xzr, [x1]
   1b56c:	ret
   1b570:	cmp	x3, #0xe
   1b574:	b.hi	1b610 <PyInit__decimal@@Base+0x14aac>  // b.pmore
   1b578:	sub	x8, x3, #0xa
   1b57c:	cmp	x8, #0x4
   1b580:	b.hi	1b8a0 <PyInit__decimal@@Base+0x14d3c>  // b.pmore
   1b584:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1b588:	add	x9, x9, #0xb99
   1b58c:	adr	x10, 1b59c <PyInit__decimal@@Base+0x14a38>
   1b590:	ldrb	w11, [x9, x8]
   1b594:	add	x10, x10, x11, lsl #2
   1b598:	br	x10
   1b59c:	mov	x8, #0xd5bf                	// #54719
   1b5a0:	movk	x8, #0xbded, lsl #16
   1b5a4:	movk	x8, #0xfece, lsl #32
   1b5a8:	movk	x8, #0xdbe6, lsl #48
   1b5ac:	mov	x9, #0xffffffffffff1c00    	// #-58368
   1b5b0:	movk	x9, #0xabf4, lsl #16
   1b5b4:	umulh	x8, x2, x8
   1b5b8:	movk	x9, #0xfffd, lsl #32
   1b5bc:	lsr	x8, x8, #33
   1b5c0:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b5c4:	sub	x8, x3, #0x5
   1b5c8:	cmp	x8, #0x4
   1b5cc:	b.hi	1b8a0 <PyInit__decimal@@Base+0x14d3c>  // b.pmore
   1b5d0:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1b5d4:	add	x9, x9, #0xb9e
   1b5d8:	adr	x10, 1b5e8 <PyInit__decimal@@Base+0x14a84>
   1b5dc:	ldrb	w11, [x9, x8]
   1b5e0:	add	x10, x10, x11, lsl #2
   1b5e4:	br	x10
   1b5e8:	mov	x9, #0x7843                	// #30787
   1b5ec:	movk	x9, #0x71b4, lsl #16
   1b5f0:	movk	x9, #0x5ac4, lsl #32
   1b5f4:	lsr	x8, x2, #5
   1b5f8:	movk	x9, #0xa7c, lsl #48
   1b5fc:	mov	x10, #0xffffffffffff7960    	// #-34464
   1b600:	umulh	x8, x8, x9
   1b604:	movk	x10, #0xfffe, lsl #16
   1b608:	lsr	x8, x8, #7
   1b60c:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b610:	sub	x8, x3, #0xf
   1b614:	cmp	x8, #0x4
   1b618:	b.hi	1b8a0 <PyInit__decimal@@Base+0x14d3c>  // b.pmore
   1b61c:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1b620:	add	x9, x9, #0xb94
   1b624:	adr	x10, 1b634 <PyInit__decimal@@Base+0x14ad0>
   1b628:	ldrb	w11, [x9, x8]
   1b62c:	add	x10, x10, x11, lsl #2
   1b630:	br	x10
   1b634:	mov	x9, #0xeac3                	// #60099
   1b638:	movk	x9, #0xf3dc, lsl #16
   1b63c:	movk	x9, #0x4075, lsl #32
   1b640:	mov	x10, #0x8000                	// #32768
   1b644:	lsr	x8, x2, #15
   1b648:	movk	x9, #0x2, lsl #48
   1b64c:	movk	x10, #0x5b39, lsl #16
   1b650:	movk	x10, #0x7281, lsl #32
   1b654:	umulh	x8, x8, x9
   1b658:	movk	x10, #0xfffc, lsl #48
   1b65c:	lsr	x8, x8, #20
   1b660:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b664:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1b668:	movk	x8, #0xcccd
   1b66c:	umulh	x8, x2, x8
   1b670:	mov	x9, #0xfffffffffffffff6    	// #-10
   1b674:	lsr	x8, x8, #3
   1b678:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b67c:	mov	x9, #0xf5c3                	// #62915
   1b680:	movk	x9, #0x5c28, lsl #16
   1b684:	movk	x9, #0xc28f, lsl #32
   1b688:	lsr	x8, x2, #2
   1b68c:	movk	x9, #0x28f5, lsl #48
   1b690:	umulh	x8, x8, x9
   1b694:	mov	x10, #0xffffffffffffff9c    	// #-100
   1b698:	lsr	x8, x8, #2
   1b69c:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b6a0:	mov	x9, #0xf7cf                	// #63439
   1b6a4:	movk	x9, #0xe353, lsl #16
   1b6a8:	movk	x9, #0x9ba5, lsl #32
   1b6ac:	lsr	x8, x2, #3
   1b6b0:	movk	x9, #0x20c4, lsl #48
   1b6b4:	umulh	x8, x8, x9
   1b6b8:	mov	x10, #0xfffffffffffffc18    	// #-1000
   1b6bc:	lsr	x8, x8, #4
   1b6c0:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b6c4:	mov	x8, #0x594b                	// #22859
   1b6c8:	movk	x8, #0x3886, lsl #16
   1b6cc:	movk	x8, #0xc5d6, lsl #32
   1b6d0:	movk	x8, #0x346d, lsl #48
   1b6d4:	umulh	x8, x2, x8
   1b6d8:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   1b6dc:	lsr	x8, x8, #11
   1b6e0:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b6e4:	mov	x8, #0xaaff                	// #43775
   1b6e8:	movk	x8, #0xcb24, lsl #16
   1b6ec:	movk	x8, #0xff0b, lsl #32
   1b6f0:	movk	x8, #0xafeb, lsl #48
   1b6f4:	mov	x9, #0xffffffffffff1800    	// #-59392
   1b6f8:	movk	x9, #0xb789, lsl #16
   1b6fc:	umulh	x8, x2, x8
   1b700:	movk	x9, #0xffe8, lsl #32
   1b704:	lsr	x8, x8, #36
   1b708:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b70c:	mov	x8, #0x2233                	// #8755
   1b710:	movk	x8, #0x5bd4, lsl #16
   1b714:	movk	x8, #0x3302, lsl #32
   1b718:	movk	x8, #0x232f, lsl #48
   1b71c:	mov	x9, #0xfffffffffffff000    	// #-4096
   1b720:	movk	x9, #0x2b5a, lsl #16
   1b724:	umulh	x8, x2, x8
   1b728:	movk	x9, #0xff17, lsl #32
   1b72c:	lsr	x8, x8, #37
   1b730:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b734:	mov	x8, #0x385                 	// #901
   1b738:	movk	x8, #0x92ed, lsl #16
   1b73c:	movk	x8, #0x84d0, lsl #32
   1b740:	movk	x8, #0x384b, lsl #48
   1b744:	mov	x9, #0xffffffffffff6000    	// #-40960
   1b748:	movk	x9, #0xb18d, lsl #16
   1b74c:	umulh	x8, x2, x8
   1b750:	movk	x9, #0xf6e7, lsl #32
   1b754:	lsr	x8, x8, #41
   1b758:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b75c:	mov	x8, #0xcd81                	// #52609
   1b760:	movk	x8, #0x5095, lsl #16
   1b764:	movk	x8, #0x4dc3, lsl #32
   1b768:	movk	x8, #0xb42, lsl #48
   1b76c:	mov	x9, #0xffffffffffffc000    	// #-16384
   1b770:	movk	x9, #0xef85, lsl #16
   1b774:	umulh	x8, x2, x8
   1b778:	movk	x9, #0xa50c, lsl #32
   1b77c:	lsr	x8, x8, #42
   1b780:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b784:	mov	x8, #0x34db                	// #13531
   1b788:	movk	x8, #0xd7b6, lsl #16
   1b78c:	movk	x8, #0xde82, lsl #32
   1b790:	movk	x8, #0x431b, lsl #48
   1b794:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   1b798:	umulh	x8, x2, x8
   1b79c:	movk	x9, #0xfff0, lsl #16
   1b7a0:	lsr	x8, x8, #18
   1b7a4:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b7a8:	mov	x8, #0x42bd                	// #17085
   1b7ac:	movk	x8, #0xe57a, lsl #16
   1b7b0:	movk	x8, #0x94d5, lsl #32
   1b7b4:	movk	x8, #0xd6bf, lsl #48
   1b7b8:	mov	x9, #0xffffffffffff6980    	// #-38528
   1b7bc:	umulh	x8, x2, x8
   1b7c0:	movk	x9, #0xff67, lsl #16
   1b7c4:	lsr	x8, x8, #23
   1b7c8:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b7cc:	mov	x8, #0xcefd                	// #52989
   1b7d0:	movk	x8, #0x8461, lsl #16
   1b7d4:	movk	x8, #0x7711, lsl #32
   1b7d8:	movk	x8, #0xabcc, lsl #48
   1b7dc:	mov	x9, #0xffffffffffff1f00    	// #-57600
   1b7e0:	umulh	x8, x2, x8
   1b7e4:	movk	x9, #0xfa0a, lsl #16
   1b7e8:	lsr	x8, x8, #26
   1b7ec:	b	1b83c <PyInit__decimal@@Base+0x14cd8>
   1b7f0:	mov	x9, #0x5a53                	// #23123
   1b7f4:	movk	x9, #0xa09b, lsl #16
   1b7f8:	movk	x9, #0xb82f, lsl #32
   1b7fc:	lsr	x8, x2, #9
   1b800:	movk	x9, #0x44, lsl #48
   1b804:	mov	x10, #0xffffffffffff3600    	// #-51712
   1b808:	umulh	x8, x8, x9
   1b80c:	movk	x10, #0xc465, lsl #16
   1b810:	lsr	x8, x8, #11
   1b814:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b818:	mov	x8, #0x7857                	// #30807
   1b81c:	movk	x8, #0xb113, lsl #16
   1b820:	movk	x8, #0x652f, lsl #32
   1b824:	movk	x8, #0x39a5, lsl #48
   1b828:	mov	x9, #0x903f0000            	// #2420047872
   1b82c:	movk	x9, #0x790d, lsl #32
   1b830:	umulh	x8, x2, x8
   1b834:	movk	x9, #0xffdc, lsl #48
   1b838:	lsr	x8, x8, #51
   1b83c:	str	x8, [x0]
   1b840:	madd	x8, x8, x9, x2
   1b844:	b	1b89c <PyInit__decimal@@Base+0x14d38>
   1b848:	mov	x9, #0x1b53                	// #6995
   1b84c:	movk	x9, #0xd519, lsl #16
   1b850:	lsr	x8, x2, #17
   1b854:	movk	x9, #0x5c3b, lsl #32
   1b858:	mov	x10, #0xa2760000            	// #2725642240
   1b85c:	movk	x10, #0xba87, lsl #32
   1b860:	umulh	x8, x8, x9
   1b864:	movk	x10, #0xfe9c, lsl #48
   1b868:	lsr	x8, x8, #22
   1b86c:	b	1b894 <PyInit__decimal@@Base+0x14d30>
   1b870:	mov	x9, #0x490f                	// #18703
   1b874:	movk	x9, #0x7747, lsl #16
   1b878:	lsr	x8, x2, #18
   1b87c:	movk	x9, #0x49c9, lsl #32
   1b880:	mov	x10, #0x589c0000            	// #1486618624
   1b884:	movk	x10, #0x494c, lsl #32
   1b888:	umulh	x8, x8, x9
   1b88c:	movk	x10, #0xf21f, lsl #48
   1b890:	lsr	x8, x8, #24
   1b894:	str	x8, [x0]
   1b898:	madd	x8, x8, x10, x2
   1b89c:	str	x8, [x1]
   1b8a0:	ret
   1b8a4:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1b8a8:	movk	x8, #0x2304, lsl #32
   1b8ac:	movk	x8, #0x8ac7, lsl #48
   1b8b0:	cmp	x2, x8
   1b8b4:	csinc	x8, xzr, x8, ls  // ls = plast
   1b8b8:	cset	w9, hi  // hi = pmore
   1b8bc:	sub	x8, x2, x8
   1b8c0:	str	x9, [x0]
   1b8c4:	b	1b89c <PyInit__decimal@@Base+0x14d38>
   1b8c8:	sub	sp, sp, #0x80
   1b8cc:	stp	x29, x30, [sp, #32]
   1b8d0:	str	x27, [sp, #48]
   1b8d4:	stp	x26, x25, [sp, #64]
   1b8d8:	stp	x24, x23, [sp, #80]
   1b8dc:	stp	x22, x21, [sp, #96]
   1b8e0:	stp	x20, x19, [sp, #112]
   1b8e4:	add	x29, sp, #0x20
   1b8e8:	mov	x8, #0x435f                	// #17247
   1b8ec:	movk	x8, #0xd79, lsl #16
   1b8f0:	movk	x8, #0x35e5, lsl #32
   1b8f4:	movk	x8, #0xd794, lsl #48
   1b8f8:	umulh	x8, x3, x8
   1b8fc:	mov	x9, #0xffffffffffffffed    	// #-19
   1b900:	lsr	x25, x8, #4
   1b904:	mov	x23, x3
   1b908:	mov	x21, x2
   1b90c:	mov	x20, x1
   1b910:	mov	x19, x0
   1b914:	madd	x22, x25, x9, x3
   1b918:	stp	xzr, xzr, [sp]
   1b91c:	cbz	x22, 1b97c <PyInit__decimal@@Base+0x14e18>
   1b920:	ldr	x2, [x20, x25, lsl #3]
   1b924:	add	x0, sp, #0x10
   1b928:	mov	x1, sp
   1b92c:	mov	x3, x22
   1b930:	bl	1b538 <PyInit__decimal@@Base+0x149d4>
   1b934:	ldr	x2, [sp]
   1b938:	sub	x3, x22, #0x1
   1b93c:	add	x0, sp, #0x8
   1b940:	mov	x1, sp
   1b944:	bl	1b538 <PyInit__decimal@@Base+0x149d4>
   1b948:	ldr	x24, [sp]
   1b94c:	cmp	x23, #0x13
   1b950:	b.cc	1b9f4 <PyInit__decimal@@Base+0x14e90>  // b.lo, b.ul, b.last
   1b954:	cbnz	x24, 1b9f4 <PyInit__decimal@@Base+0x14e90>
   1b958:	sub	x8, x20, #0x8
   1b95c:	mov	w24, #0x1                   	// #1
   1b960:	mov	x9, x25
   1b964:	subs	x10, x9, #0x1
   1b968:	b.lt	1b9ec <PyInit__decimal@@Base+0x14e88>  // b.tstop
   1b96c:	ldr	x11, [x8, x9, lsl #3]
   1b970:	mov	x9, x10
   1b974:	cbz	x11, 1b964 <PyInit__decimal@@Base+0x14e00>
   1b978:	b	1b9f0 <PyInit__decimal@@Base+0x14e8c>
   1b97c:	cmp	x23, #0x13
   1b980:	b.cs	1b98c <PyInit__decimal@@Base+0x14e28>  // b.hs, b.nlast
   1b984:	mov	x24, xzr
   1b988:	b	1ba7c <PyInit__decimal@@Base+0x14f18>
   1b98c:	add	x8, x20, x25, lsl #3
   1b990:	ldur	x8, [x8, #-8]
   1b994:	mov	x9, #0x490f                	// #18703
   1b998:	movk	x9, #0x7747, lsl #16
   1b99c:	movk	x9, #0x49c9, lsl #32
   1b9a0:	mov	x10, #0x589c0000            	// #1486618624
   1b9a4:	lsr	x11, x8, #18
   1b9a8:	movk	x10, #0x494c, lsl #32
   1b9ac:	umulh	x9, x11, x9
   1b9b0:	movk	x10, #0xf21f, lsl #48
   1b9b4:	lsr	x9, x9, #24
   1b9b8:	madd	x24, x9, x10, x8
   1b9bc:	stp	x24, x9, [sp]
   1b9c0:	cbnz	x24, 1ba7c <PyInit__decimal@@Base+0x14f18>
   1b9c4:	sub	x8, x20, #0x10
   1b9c8:	mov	w24, #0x1                   	// #1
   1b9cc:	mov	x9, x25
   1b9d0:	sub	x10, x9, #0x1
   1b9d4:	cmp	x10, #0x1
   1b9d8:	b.lt	1ba74 <PyInit__decimal@@Base+0x14f10>  // b.tstop
   1b9dc:	ldr	x11, [x8, x9, lsl #3]
   1b9e0:	mov	x9, x10
   1b9e4:	cbz	x11, 1b9d0 <PyInit__decimal@@Base+0x14e6c>
   1b9e8:	b	1ba78 <PyInit__decimal@@Base+0x14f14>
   1b9ec:	mov	x24, xzr
   1b9f0:	str	x24, [sp]
   1b9f4:	ldr	x23, [sp, #16]
   1b9f8:	add	x8, x25, #0x1
   1b9fc:	cmp	x8, x21
   1ba00:	b.cs	1ba64 <PyInit__decimal@@Base+0x14f00>  // b.hs, b.nlast
   1ba04:	mov	w9, #0x13                  	// #19
   1ba08:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1ba0c:	sub	x9, x9, x22
   1ba10:	add	x10, x10, #0xe70
   1ba14:	ldr	x26, [x10, x9, lsl #3]
   1ba18:	mvn	x9, x25
   1ba1c:	add	x21, x9, x21
   1ba20:	add	x20, x20, x8, lsl #3
   1ba24:	mov	x25, x21
   1ba28:	mov	x27, x19
   1ba2c:	ldr	x2, [x20], #8
   1ba30:	sub	x0, x29, #0x8
   1ba34:	add	x1, x29, #0x18
   1ba38:	mov	x3, x22
   1ba3c:	bl	1b538 <PyInit__decimal@@Base+0x149d4>
   1ba40:	ldr	x8, [x29, #24]
   1ba44:	subs	x25, x25, #0x1
   1ba48:	madd	x8, x8, x26, x23
   1ba4c:	str	x8, [x27], #8
   1ba50:	ldur	x23, [x29, #-8]
   1ba54:	b.ne	1ba2c <PyInit__decimal@@Base+0x14ec8>  // b.any
   1ba58:	str	x23, [sp, #16]
   1ba5c:	cbnz	x23, 1ba6c <PyInit__decimal@@Base+0x14f08>
   1ba60:	b	1baa0 <PyInit__decimal@@Base+0x14f3c>
   1ba64:	mov	x21, xzr
   1ba68:	cbz	x23, 1baa0 <PyInit__decimal@@Base+0x14f3c>
   1ba6c:	str	x23, [x19, x21, lsl #3]
   1ba70:	b	1baa0 <PyInit__decimal@@Base+0x14f3c>
   1ba74:	mov	x24, xzr
   1ba78:	str	x24, [sp]
   1ba7c:	subs	x8, x21, x25
   1ba80:	b.eq	1baa0 <PyInit__decimal@@Base+0x14f3c>  // b.none
   1ba84:	mov	x9, xzr
   1ba88:	add	x10, x20, x25, lsl #3
   1ba8c:	ldr	x11, [x10, x9, lsl #3]
   1ba90:	str	x11, [x19, x9, lsl #3]
   1ba94:	add	x9, x9, #0x1
   1ba98:	cmp	x9, x8
   1ba9c:	b.cc	1ba8c <PyInit__decimal@@Base+0x14f28>  // b.lo, b.ul, b.last
   1baa0:	ldr	x0, [sp, #8]
   1baa4:	cmp	x0, #0x5
   1baa8:	b.eq	1bab0 <PyInit__decimal@@Base+0x14f4c>  // b.none
   1baac:	cbnz	x0, 1bab8 <PyInit__decimal@@Base+0x14f54>
   1bab0:	cmp	x24, #0x0
   1bab4:	cinc	x0, x0, ne  // ne = any
   1bab8:	ldp	x20, x19, [sp, #112]
   1babc:	ldp	x22, x21, [sp, #96]
   1bac0:	ldp	x24, x23, [sp, #80]
   1bac4:	ldp	x26, x25, [sp, #64]
   1bac8:	ldr	x27, [sp, #48]
   1bacc:	ldp	x29, x30, [sp, #32]
   1bad0:	add	sp, sp, #0x80
   1bad4:	ret
   1bad8:	ldr	x9, [x0]
   1badc:	mov	x8, x0
   1bae0:	adds	x9, x9, x2
   1bae4:	cset	w10, cs  // cs = hs, nlast
   1bae8:	cmp	x9, x3
   1baec:	cset	w11, cs  // cs = hs, nlast
   1baf0:	orr	w0, w10, w11
   1baf4:	cmp	w0, #0x0
   1baf8:	csel	x10, x3, xzr, ne  // ne = any
   1bafc:	sub	x9, x9, x10
   1bb00:	str	x9, [x8]
   1bb04:	cbz	w0, 1bb3c <PyInit__decimal@@Base+0x14fd8>
   1bb08:	cmp	x1, #0x2
   1bb0c:	b.cc	1bb3c <PyInit__decimal@@Base+0x14fd8>  // b.lo, b.ul, b.last
   1bb10:	mov	w9, #0x1                   	// #1
   1bb14:	ldr	x10, [x8, x9, lsl #3]
   1bb18:	add	x10, x10, x0
   1bb1c:	cmp	x10, x3
   1bb20:	cset	w0, eq  // eq = none
   1bb24:	csel	x10, xzr, x10, eq  // eq = none
   1bb28:	str	x10, [x8, x9, lsl #3]
   1bb2c:	b.ne	1bb3c <PyInit__decimal@@Base+0x14fd8>  // b.any
   1bb30:	add	x9, x9, #0x1
   1bb34:	cmp	x9, x1
   1bb38:	b.cc	1bb14 <PyInit__decimal@@Base+0x14fb0>  // b.lo, b.ul, b.last
   1bb3c:	ret
   1bb40:	mov	x8, xzr
   1bb44:	cbz	x2, 1bbd4 <PyInit__decimal@@Base+0x15070>
   1bb48:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1bb4c:	ldr	x9, [x9, #3856]
   1bb50:	mov	x10, #0x89e80000            	// #2313682944
   1bb54:	mov	x11, #0x76180000            	// #1981284352
   1bb58:	movk	x10, #0x2304, lsl #32
   1bb5c:	movk	x11, #0xdcfb, lsl #32
   1bb60:	movk	x10, #0x8ac7, lsl #48
   1bb64:	movk	x11, #0x7538, lsl #48
   1bb68:	ldr	x12, [x1], #8
   1bb6c:	umulh	x13, x12, x3
   1bb70:	mul	x12, x12, x3
   1bb74:	adds	x8, x8, x12
   1bb78:	cinc	x12, x13, cs  // cs = hs, nlast
   1bb7c:	and	x13, x10, x8, asr #63
   1bb80:	add	x13, x13, x8
   1bb84:	sub	x14, x12, x8, asr #63
   1bb88:	umulh	x15, x14, x9
   1bb8c:	mul	x14, x14, x9
   1bb90:	mvn	x13, x13
   1bb94:	cmp	x13, x14
   1bb98:	add	x13, x12, x15
   1bb9c:	cinc	x13, x13, cc  // cc = lo, ul, last
   1bba0:	mvn	x13, x13
   1bba4:	umulh	x14, x13, x10
   1bba8:	mul	x15, x13, x10
   1bbac:	adds	x15, x8, x15
   1bbb0:	add	x8, x12, x14
   1bbb4:	cinc	x8, x8, cs  // cs = hs, nlast
   1bbb8:	add	x12, x8, x11
   1bbbc:	sub	x8, x12, x13
   1bbc0:	and	x12, x12, x10
   1bbc4:	add	x12, x12, x15
   1bbc8:	subs	x2, x2, #0x1
   1bbcc:	str	x12, [x0], #8
   1bbd0:	b.ne	1bb68 <PyInit__decimal@@Base+0x15004>  // b.any
   1bbd4:	mov	x0, x8
   1bbd8:	ret
   1bbdc:	cbz	x2, 1bc54 <PyInit__decimal@@Base+0x150f0>
   1bbe0:	stp	x29, x30, [sp, #-64]!
   1bbe4:	stp	x24, x23, [sp, #16]
   1bbe8:	stp	x22, x21, [sp, #32]
   1bbec:	stp	x20, x19, [sp, #48]
   1bbf0:	mov	x29, sp
   1bbf4:	mov	x19, x4
   1bbf8:	mov	x20, x3
   1bbfc:	mov	x21, x2
   1bc00:	mov	x22, x1
   1bc04:	mov	x23, x0
   1bc08:	mov	x0, xzr
   1bc0c:	ldr	x8, [x22], #8
   1bc10:	mov	x2, x19
   1bc14:	mov	x3, xzr
   1bc18:	umulh	x9, x8, x20
   1bc1c:	mul	x8, x8, x20
   1bc20:	adds	x24, x0, x8
   1bc24:	cinc	x1, x9, cs  // cs = hs, nlast
   1bc28:	mov	x0, x24
   1bc2c:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1bc30:	msub	x8, x0, x19, x24
   1bc34:	subs	x21, x21, #0x1
   1bc38:	str	x8, [x23], #8
   1bc3c:	b.ne	1bc0c <PyInit__decimal@@Base+0x150a8>  // b.any
   1bc40:	ldp	x20, x19, [sp, #48]
   1bc44:	ldp	x22, x21, [sp, #32]
   1bc48:	ldp	x24, x23, [sp, #16]
   1bc4c:	ldp	x29, x30, [sp], #64
   1bc50:	ret
   1bc54:	mov	x0, xzr
   1bc58:	ret
   1bc5c:	stp	x29, x30, [sp, #-80]!
   1bc60:	str	x25, [sp, #16]
   1bc64:	stp	x24, x23, [sp, #32]
   1bc68:	stp	x22, x21, [sp, #48]
   1bc6c:	stp	x20, x19, [sp, #64]
   1bc70:	mov	x29, sp
   1bc74:	cbz	x2, 1bcd0 <PyInit__decimal@@Base+0x1516c>
   1bc78:	mov	x8, x0
   1bc7c:	mov	x19, x4
   1bc80:	mov	x20, x3
   1bc84:	mov	x21, x2
   1bc88:	mov	x0, xzr
   1bc8c:	sub	x23, x8, #0x8
   1bc90:	sub	x24, x1, #0x8
   1bc94:	ldr	x8, [x24, x21, lsl #3]
   1bc98:	mul	x10, x0, x19
   1bc9c:	umulh	x9, x0, x19
   1bca0:	mov	x2, x20
   1bca4:	adds	x22, x8, x10
   1bca8:	cinc	x1, x9, cs  // cs = hs, nlast
   1bcac:	mov	x0, x22
   1bcb0:	mov	x3, xzr
   1bcb4:	sub	x25, x21, #0x1
   1bcb8:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1bcbc:	str	x0, [x23, x21, lsl #3]
   1bcc0:	msub	x0, x0, x20, x22
   1bcc4:	mov	x21, x25
   1bcc8:	cbnz	x25, 1bc94 <PyInit__decimal@@Base+0x15130>
   1bccc:	b	1bcd4 <PyInit__decimal@@Base+0x15170>
   1bcd0:	mov	x0, xzr
   1bcd4:	ldp	x20, x19, [sp, #64]
   1bcd8:	ldp	x22, x21, [sp, #48]
   1bcdc:	ldp	x24, x23, [sp, #32]
   1bce0:	ldr	x25, [sp, #16]
   1bce4:	ldp	x29, x30, [sp], #80
   1bce8:	ret
   1bcec:	mov	w0, #0x8                   	// #8
   1bcf0:	b	6500 <raise@plt>
   1bcf4:	stp	x29, x30, [sp, #-32]!
   1bcf8:	str	x19, [sp, #16]
   1bcfc:	mov	x29, sp
   1bd00:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1bd04:	ldrb	w9, [x8, #1592]
   1bd08:	cmp	w9, #0x1
   1bd0c:	b.eq	1bd38 <PyInit__decimal@@Base+0x151d4>  // b.none
   1bd10:	sub	x9, x0, #0x2
   1bd14:	cmp	x9, #0x3f
   1bd18:	b.cs	1bd88 <PyInit__decimal@@Base+0x15224>  // b.hs, b.nlast
   1bd1c:	ldr	x19, [sp, #16]
   1bd20:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   1bd24:	mov	w10, #0x1                   	// #1
   1bd28:	str	x0, [x9, #1352]
   1bd2c:	strb	w10, [x8, #1592]
   1bd30:	ldp	x29, x30, [sp], #32
   1bd34:	ret
   1bd38:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   1bd3c:	ldr	x19, [x19, #3904]
   1bd40:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1bd44:	adrp	x2, 38000 <PyInit__decimal@@Base+0x3149c>
   1bd48:	add	x1, x1, #0xff8
   1bd4c:	ldr	x0, [x19]
   1bd50:	add	x2, x2, #0x9
   1bd54:	mov	w3, #0x37                  	// #55
   1bd58:	bl	6a60 <fprintf@plt>
   1bd5c:	ldr	x3, [x19]
   1bd60:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   1bd64:	add	x0, x0, #0x43
   1bd68:	mov	w1, #0x44                  	// #68
   1bd6c:	mov	w2, #0x1                   	// #1
   1bd70:	bl	6920 <fwrite@plt>
   1bd74:	ldr	x1, [x19]
   1bd78:	ldr	x19, [sp, #16]
   1bd7c:	mov	w0, #0xa                   	// #10
   1bd80:	ldp	x29, x30, [sp], #32
   1bd84:	b	65a0 <fputc@plt>
   1bd88:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   1bd8c:	ldr	x19, [x19, #3904]
   1bd90:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   1bd94:	adrp	x2, 38000 <PyInit__decimal@@Base+0x3149c>
   1bd98:	add	x1, x1, #0xba8
   1bd9c:	ldr	x0, [x19]
   1bda0:	add	x2, x2, #0x9
   1bda4:	mov	w3, #0x3b                  	// #59
   1bda8:	bl	6a60 <fprintf@plt>
   1bdac:	ldr	x3, [x19]
   1bdb0:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   1bdb4:	add	x0, x0, #0x88
   1bdb8:	mov	w1, #0x1e                  	// #30
   1bdbc:	mov	w2, #0x1                   	// #1
   1bdc0:	bl	6920 <fwrite@plt>
   1bdc4:	ldr	x1, [x19]
   1bdc8:	mov	w0, #0xa                   	// #10
   1bdcc:	bl	65a0 <fputc@plt>
   1bdd0:	bl	67b0 <abort@plt>
   1bdd4:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1bdd8:	ldr	q0, [x8, #4016]
   1bddc:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1bde0:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1bde4:	ldr	d1, [x8, #4048]
   1bde8:	str	q0, [x0]
   1bdec:	ldr	d0, [x9, #4056]
   1bdf0:	mov	x8, #0x1                   	// #1
   1bdf4:	movk	x8, #0x589c, lsl #16
   1bdf8:	movk	x8, #0x494c, lsl #32
   1bdfc:	movk	x8, #0xf21f, lsl #48
   1be00:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1be04:	stp	d1, d0, [x0, #24]
   1be08:	ldr	d0, [x9, #4064]
   1be0c:	str	x8, [x0, #16]
   1be10:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1be14:	movk	x8, #0xb6b3, lsl #32
   1be18:	sub	x9, x1, #0x1
   1be1c:	movk	x8, #0xde0, lsl #48
   1be20:	cmp	x9, x8
   1be24:	str	d0, [x0, #40]
   1be28:	b.cc	1be40 <PyInit__decimal@@Base+0x152dc>  // b.lo, b.ul, b.last
   1be2c:	movi	v0.2s, #0x80
   1be30:	stur	d0, [x0, #28]
   1be34:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1be38:	ldr	x1, [x8, #1344]
   1be3c:	br	x1
   1be40:	mov	x9, #0x9436                	// #37942
   1be44:	movk	x9, #0x50d7, lsl #16
   1be48:	movk	x9, #0x435e, lsl #32
   1be4c:	add	x8, x1, #0x12
   1be50:	movk	x9, #0xd79, lsl #48
   1be54:	smulh	x8, x8, x9
   1be58:	add	x8, x8, x8, lsr #63
   1be5c:	lsl	x8, x8, #1
   1be60:	mov	w10, #0x2                   	// #2
   1be64:	cmp	x8, #0x2
   1be68:	csel	x8, x8, x10, gt
   1be6c:	cmp	x8, #0x40
   1be70:	mov	w9, #0x40                  	// #64
   1be74:	csel	x8, x8, x9, lt  // lt = tstop
   1be78:	str	x1, [x0]
   1be7c:	mov	x0, x8
   1be80:	b	1bcf4 <PyInit__decimal@@Base+0x15190>
   1be84:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1be88:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1be8c:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   1be90:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   1be94:	mov	x9, #0x1                   	// #1
   1be98:	ldr	q0, [x8, #4016]
   1be9c:	ldr	d1, [x10, #4048]
   1bea0:	ldr	d2, [x11, #4056]
   1bea4:	ldr	d3, [x12, #4064]
   1bea8:	movk	x9, #0x589c, lsl #16
   1beac:	movk	x9, #0x494c, lsl #32
   1beb0:	movk	x9, #0xf21f, lsl #48
   1beb4:	str	x9, [x0, #16]
   1beb8:	str	q0, [x0]
   1bebc:	stp	d1, d2, [x0, #24]
   1bec0:	str	d3, [x0, #40]
   1bec4:	ret
   1bec8:	mov	x9, #0xfffe                	// #65534
   1becc:	movk	x9, #0xa763, lsl #16
   1bed0:	movk	x9, #0xb6b3, lsl #32
   1bed4:	sub	x8, x1, #0x1
   1bed8:	movk	x9, #0xde0, lsl #48
   1bedc:	cmp	x8, x9
   1bee0:	b.ls	1beec <PyInit__decimal@@Base+0x15388>  // b.plast
   1bee4:	mov	w0, wzr
   1bee8:	ret
   1beec:	str	x1, [x0]
   1bef0:	mov	w0, #0x1                   	// #1
   1bef4:	ret
   1bef8:	ldp	w9, w8, [x0, #24]
   1befc:	orr	w10, w8, w1
   1bf00:	ands	w8, w9, w1
   1bf04:	str	w10, [x0, #28]
   1bf08:	b.eq	1bf1c <PyInit__decimal@@Base+0x153b8>  // b.none
   1bf0c:	str	w8, [x0, #32]
   1bf10:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1bf14:	ldr	x1, [x8, #1344]
   1bf18:	br	x1
   1bf1c:	ret
   1bf20:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf24:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf28:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf2c:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1bf30:	mov	x9, #0x1                   	// #1
   1bf34:	ldr	d1, [x10, #4048]
   1bf38:	ldr	d2, [x11, #4072]
   1bf3c:	ldr	d3, [x12, #4064]
   1bf40:	movk	x8, #0xb6b3, lsl #32
   1bf44:	movk	x9, #0x589c, lsl #16
   1bf48:	movk	x8, #0xde0, lsl #48
   1bf4c:	movk	x9, #0x494c, lsl #32
   1bf50:	movk	x9, #0xf21f, lsl #48
   1bf54:	dup	v0.2d, x8
   1bf58:	str	x9, [x0, #16]
   1bf5c:	str	q0, [x0]
   1bf60:	stp	d1, d2, [x0, #24]
   1bf64:	str	d3, [x0, #40]
   1bf68:	ret
   1bf6c:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf70:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf74:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf78:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   1bf7c:	mov	x9, #0x1                   	// #1
   1bf80:	ldr	q0, [x8, #4032]
   1bf84:	ldr	d1, [x10, #4080]
   1bf88:	ldr	d2, [x11, #4056]
   1bf8c:	ldr	d3, [x12, #4064]
   1bf90:	movk	x9, #0x589c, lsl #16
   1bf94:	movk	x9, #0x494c, lsl #32
   1bf98:	movk	x9, #0xf21f, lsl #48
   1bf9c:	str	x9, [x0, #16]
   1bfa0:	str	q0, [x0]
   1bfa4:	stp	d1, d2, [x0, #24]
   1bfa8:	str	d3, [x0, #40]
   1bfac:	ret
   1bfb0:	sub	w9, w1, #0x1
   1bfb4:	mov	x8, x0
   1bfb8:	cmp	w9, #0x1ff
   1bfbc:	mov	w0, #0xffffffff            	// #-1
   1bfc0:	b.hi	1c014 <PyInit__decimal@@Base+0x154b0>  // b.pmore
   1bfc4:	and	w9, w1, #0x1f
   1bfc8:	cbnz	w9, 1c014 <PyInit__decimal@@Base+0x154b0>
   1bfcc:	lsr	w9, w1, #5
   1bfd0:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1bfd4:	ldr	d0, [x10, #4072]
   1bfd8:	lsr	w10, w1, #4
   1bfdc:	lsl	w9, w9, #3
   1bfe0:	add	w9, w9, w1, lsr #5
   1bfe4:	mov	w11, #0x3                   	// #3
   1bfe8:	add	w10, w10, #0x3
   1bfec:	lsl	x10, x11, x10
   1bff0:	mov	w11, #0x1                   	// #1
   1bff4:	sub	w9, w9, #0x2
   1bff8:	mov	w0, wzr
   1bffc:	sub	x11, x11, x10
   1c000:	movi	v1.2s, #0x1
   1c004:	sxtw	x9, w9
   1c008:	stp	x11, xzr, [x8, #16]
   1c00c:	stp	x9, x10, [x8]
   1c010:	stp	d0, d1, [x8, #32]
   1c014:	ret
   1c018:	ldr	x0, [x0]
   1c01c:	ret
   1c020:	ldr	x0, [x0, #8]
   1c024:	ret
   1c028:	ldr	x0, [x0, #16]
   1c02c:	ret
   1c030:	ldr	w0, [x0, #36]
   1c034:	ret
   1c038:	ldr	w0, [x0, #24]
   1c03c:	ret
   1c040:	ldr	w0, [x0, #28]
   1c044:	ret
   1c048:	ldr	w0, [x0, #40]
   1c04c:	ret
   1c050:	ldr	w0, [x0, #44]
   1c054:	ret
   1c058:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c05c:	movk	x8, #0xb6b3, lsl #32
   1c060:	movk	x8, #0xde0, lsl #48
   1c064:	cmp	x1, x8
   1c068:	b.ls	1c074 <PyInit__decimal@@Base+0x15510>  // b.plast
   1c06c:	mov	w0, wzr
   1c070:	ret
   1c074:	str	x1, [x0, #8]
   1c078:	mov	w0, #0x1                   	// #1
   1c07c:	ret
   1c080:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   1c084:	movk	x8, #0xb6b3, lsl #32
   1c088:	movk	x8, #0xde0, lsl #48
   1c08c:	add	x9, x1, x8
   1c090:	cmp	x9, x8
   1c094:	b.ls	1c0a0 <PyInit__decimal@@Base+0x1553c>  // b.plast
   1c098:	mov	w0, wzr
   1c09c:	ret
   1c0a0:	str	x1, [x0, #16]
   1c0a4:	mov	w0, #0x1                   	// #1
   1c0a8:	ret
   1c0ac:	cmp	w1, #0x8
   1c0b0:	b.hi	1c0c0 <PyInit__decimal@@Base+0x1555c>  // b.pmore
   1c0b4:	str	w1, [x0, #36]
   1c0b8:	mov	w0, #0x1                   	// #1
   1c0bc:	ret
   1c0c0:	mov	w0, wzr
   1c0c4:	ret
   1c0c8:	lsr	w8, w1, #15
   1c0cc:	cbz	w8, 1c0d8 <PyInit__decimal@@Base+0x15574>
   1c0d0:	mov	w0, wzr
   1c0d4:	ret
   1c0d8:	str	w1, [x0, #24]
   1c0dc:	mov	w0, #0x1                   	// #1
   1c0e0:	ret
   1c0e4:	lsr	w8, w1, #15
   1c0e8:	cbz	w8, 1c0f4 <PyInit__decimal@@Base+0x15590>
   1c0ec:	mov	w0, wzr
   1c0f0:	ret
   1c0f4:	str	w1, [x0, #28]
   1c0f8:	mov	w0, #0x1                   	// #1
   1c0fc:	ret
   1c100:	cmp	w1, #0x1
   1c104:	b.ls	1c110 <PyInit__decimal@@Base+0x155ac>  // b.plast
   1c108:	mov	w0, wzr
   1c10c:	ret
   1c110:	str	w1, [x0, #40]
   1c114:	mov	w0, #0x1                   	// #1
   1c118:	ret
   1c11c:	cmp	w1, #0x1
   1c120:	b.ls	1c12c <PyInit__decimal@@Base+0x155c8>  // b.plast
   1c124:	mov	w0, wzr
   1c128:	ret
   1c12c:	str	w1, [x0, #44]
   1c130:	mov	w0, #0x1                   	// #1
   1c134:	ret
   1c138:	sub	sp, sp, #0x80
   1c13c:	stp	x29, x30, [sp, #32]
   1c140:	stp	x28, x27, [sp, #48]
   1c144:	stp	x26, x25, [sp, #64]
   1c148:	stp	x24, x23, [sp, #80]
   1c14c:	stp	x22, x21, [sp, #96]
   1c150:	stp	x20, x19, [sp, #112]
   1c154:	add	x29, sp, #0x20
   1c158:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1c15c:	add	x8, x8, #0xc20
   1c160:	ldr	x19, [x8, w3, sxtw #3]
   1c164:	mov	w27, w3
   1c168:	mov	x22, x2
   1c16c:	mov	x24, x1
   1c170:	subs	x26, x19, #0x2
   1c174:	mov	x20, x0
   1c178:	mov	w21, #0x1                   	// #1
   1c17c:	b.eq	1c1b8 <PyInit__decimal@@Base+0x15654>  // b.none
   1c180:	mov	x25, x22
   1c184:	tbz	w26, #0, 1c19c <PyInit__decimal@@Base+0x15638>
   1c188:	mov	x0, x21
   1c18c:	mov	x1, x25
   1c190:	mov	x2, x19
   1c194:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c198:	mov	x21, x0
   1c19c:	mov	x0, x25
   1c1a0:	mov	x1, x25
   1c1a4:	mov	x2, x19
   1c1a8:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c1ac:	lsr	x26, x26, #1
   1c1b0:	mov	x25, x0
   1c1b4:	cbnz	x26, 1c184 <PyInit__decimal@@Base+0x15620>
   1c1b8:	fmov	d0, x22
   1c1bc:	cnt	v0.8b, v0.8b
   1c1c0:	adrp	x10, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c1c4:	adrp	x11, 30000 <PyInit__decimal@@Base+0x2949c>
   1c1c8:	adrp	x8, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c1cc:	adrp	x9, 30000 <PyInit__decimal@@Base+0x2949c>
   1c1d0:	cmp	x22, #0x1, lsl #12
   1c1d4:	add	x10, x10, #0xd6c
   1c1d8:	add	x11, x11, #0x69c
   1c1dc:	uaddlv	h0, v0.8b
   1c1e0:	add	x8, x8, #0xdcc
   1c1e4:	add	x9, x9, #0xa78
   1c1e8:	csel	x10, x11, x10, hi  // hi = pmore
   1c1ec:	fmov	w11, s0
   1c1f0:	csel	x8, x9, x8, hi  // hi = pmore
   1c1f4:	cmp	x11, #0x1
   1c1f8:	adrp	x11, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c1fc:	adrp	x9, 1d000 <PyInit__decimal@@Base+0x1649c>
   1c200:	add	x11, x11, #0xe2c
   1c204:	add	x9, x9, #0x1e8
   1c208:	csel	x23, x11, x10, ne  // ne = any
   1c20c:	mov	x0, x20
   1c210:	mov	x1, x22
   1c214:	mov	w2, w27
   1c218:	csel	x25, x9, x8, ne  // ne = any
   1c21c:	blr	x23
   1c220:	cbz	w0, 1c320 <PyInit__decimal@@Base+0x157bc>
   1c224:	mov	x0, x24
   1c228:	mov	x1, x22
   1c22c:	mov	w2, w27
   1c230:	blr	x23
   1c234:	cbz	w0, 1c320 <PyInit__decimal@@Base+0x157bc>
   1c238:	subs	x28, x22, #0x1
   1c23c:	str	x25, [sp, #8]
   1c240:	stur	w27, [x29, #-12]
   1c244:	stur	x22, [x29, #-8]
   1c248:	b.eq	1c28c <PyInit__decimal@@Base+0x15728>  // b.none
   1c24c:	mov	x23, xzr
   1c250:	add	x22, x20, x23, lsl #3
   1c254:	add	x8, x24, x23, lsl #3
   1c258:	ldp	x0, x25, [x22]
   1c25c:	ldp	x1, x26, [x8]
   1c260:	mov	x2, x19
   1c264:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c268:	mov	x27, x0
   1c26c:	mov	x0, x25
   1c270:	mov	x1, x26
   1c274:	mov	x2, x19
   1c278:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c27c:	add	x23, x23, #0x2
   1c280:	cmp	x23, x28
   1c284:	stp	x27, x0, [x22]
   1c288:	b.cc	1c250 <PyInit__decimal@@Base+0x156ec>  // b.lo, b.ul, b.last
   1c28c:	ldur	x22, [x29, #-8]
   1c290:	ldur	w2, [x29, #-12]
   1c294:	ldr	x8, [sp, #8]
   1c298:	mov	x0, x20
   1c29c:	mov	x1, x22
   1c2a0:	blr	x8
   1c2a4:	cbz	w0, 1c320 <PyInit__decimal@@Base+0x157bc>
   1c2a8:	subs	x26, x22, #0x3
   1c2ac:	b.eq	1c31c <PyInit__decimal@@Base+0x157b8>  // b.none
   1c2b0:	mov	x27, xzr
   1c2b4:	add	x28, x20, x27, lsl #3
   1c2b8:	ldp	x0, x22, [x28]
   1c2bc:	ldp	x23, x24, [x28, #16]
   1c2c0:	mov	x1, x21
   1c2c4:	mov	x2, x19
   1c2c8:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c2cc:	mov	x25, x0
   1c2d0:	mov	x0, x22
   1c2d4:	mov	x1, x21
   1c2d8:	mov	x2, x19
   1c2dc:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c2e0:	mov	x22, x0
   1c2e4:	mov	x0, x23
   1c2e8:	mov	x1, x21
   1c2ec:	mov	x2, x19
   1c2f0:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c2f4:	mov	x23, x0
   1c2f8:	mov	x0, x24
   1c2fc:	mov	x1, x21
   1c300:	mov	x2, x19
   1c304:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c308:	add	x27, x27, #0x4
   1c30c:	cmp	x27, x26
   1c310:	stp	x25, x22, [x28]
   1c314:	stp	x23, x0, [x28, #16]
   1c318:	b.cc	1c2b4 <PyInit__decimal@@Base+0x15750>  // b.lo, b.ul, b.last
   1c31c:	mov	w0, #0x1                   	// #1
   1c320:	ldp	x20, x19, [sp, #112]
   1c324:	ldp	x22, x21, [sp, #96]
   1c328:	ldp	x24, x23, [sp, #80]
   1c32c:	ldp	x26, x25, [sp, #64]
   1c330:	ldp	x28, x27, [sp, #48]
   1c334:	ldp	x29, x30, [sp, #32]
   1c338:	add	sp, sp, #0x80
   1c33c:	ret
   1c340:	sub	sp, sp, #0x70
   1c344:	stp	x29, x30, [sp, #16]
   1c348:	stp	x28, x27, [sp, #32]
   1c34c:	stp	x26, x25, [sp, #48]
   1c350:	stp	x24, x23, [sp, #64]
   1c354:	stp	x22, x21, [sp, #80]
   1c358:	stp	x20, x19, [sp, #96]
   1c35c:	add	x29, sp, #0x10
   1c360:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1c364:	add	x8, x8, #0xc20
   1c368:	ldr	x19, [x8, w2, sxtw #3]
   1c36c:	mov	w23, w2
   1c370:	mov	x22, x1
   1c374:	mov	x20, x0
   1c378:	subs	x25, x19, #0x2
   1c37c:	mov	w21, #0x1                   	// #1
   1c380:	b.eq	1c3bc <PyInit__decimal@@Base+0x15858>  // b.none
   1c384:	mov	x24, x22
   1c388:	tbz	w25, #0, 1c3a0 <PyInit__decimal@@Base+0x1583c>
   1c38c:	mov	x0, x21
   1c390:	mov	x1, x24
   1c394:	mov	x2, x19
   1c398:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c39c:	mov	x21, x0
   1c3a0:	mov	x0, x24
   1c3a4:	mov	x1, x24
   1c3a8:	mov	x2, x19
   1c3ac:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c3b0:	lsr	x25, x25, #1
   1c3b4:	mov	x24, x0
   1c3b8:	cbnz	x25, 1c388 <PyInit__decimal@@Base+0x15824>
   1c3bc:	fmov	d0, x22
   1c3c0:	cnt	v0.8b, v0.8b
   1c3c4:	adrp	x8, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c3c8:	adrp	x9, 30000 <PyInit__decimal@@Base+0x2949c>
   1c3cc:	adrp	x10, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c3d0:	adrp	x11, 30000 <PyInit__decimal@@Base+0x2949c>
   1c3d4:	add	x8, x8, #0xd6c
   1c3d8:	add	x9, x9, #0x69c
   1c3dc:	cmp	x22, #0x1, lsl #12
   1c3e0:	add	x10, x10, #0xdcc
   1c3e4:	add	x11, x11, #0xa78
   1c3e8:	uaddlv	h0, v0.8b
   1c3ec:	csel	x8, x9, x8, hi  // hi = pmore
   1c3f0:	adrp	x9, 1c000 <PyInit__decimal@@Base+0x1549c>
   1c3f4:	csel	x10, x11, x10, hi  // hi = pmore
   1c3f8:	fmov	w11, s0
   1c3fc:	add	x9, x9, #0xe2c
   1c400:	cmp	x11, #0x1
   1c404:	adrp	x11, 1d000 <PyInit__decimal@@Base+0x1649c>
   1c408:	add	x11, x11, #0x1e8
   1c40c:	csel	x8, x9, x8, ne  // ne = any
   1c410:	mov	x0, x20
   1c414:	mov	x1, x22
   1c418:	mov	w2, w23
   1c41c:	csel	x24, x11, x10, ne  // ne = any
   1c420:	blr	x8
   1c424:	cbz	w0, 1c500 <PyInit__decimal@@Base+0x1599c>
   1c428:	subs	x27, x22, #0x1
   1c42c:	str	x24, [sp, #8]
   1c430:	b.eq	1c470 <PyInit__decimal@@Base+0x1590c>  // b.none
   1c434:	mov	x28, xzr
   1c438:	add	x26, x20, x28, lsl #3
   1c43c:	ldp	x0, x24, [x26]
   1c440:	mov	x2, x19
   1c444:	mov	x1, x0
   1c448:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c44c:	mov	x25, x0
   1c450:	mov	x0, x24
   1c454:	mov	x1, x24
   1c458:	mov	x2, x19
   1c45c:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c460:	add	x28, x28, #0x2
   1c464:	cmp	x28, x27
   1c468:	stp	x25, x0, [x26]
   1c46c:	b.cc	1c438 <PyInit__decimal@@Base+0x158d4>  // b.lo, b.ul, b.last
   1c470:	ldr	x8, [sp, #8]
   1c474:	mov	x0, x20
   1c478:	mov	x1, x22
   1c47c:	mov	w2, w23
   1c480:	blr	x8
   1c484:	cbz	w0, 1c500 <PyInit__decimal@@Base+0x1599c>
   1c488:	subs	x26, x22, #0x3
   1c48c:	b.eq	1c4fc <PyInit__decimal@@Base+0x15998>  // b.none
   1c490:	mov	x27, xzr
   1c494:	add	x28, x20, x27, lsl #3
   1c498:	ldp	x0, x22, [x28]
   1c49c:	ldp	x23, x24, [x28, #16]
   1c4a0:	mov	x1, x21
   1c4a4:	mov	x2, x19
   1c4a8:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c4ac:	mov	x25, x0
   1c4b0:	mov	x0, x22
   1c4b4:	mov	x1, x21
   1c4b8:	mov	x2, x19
   1c4bc:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c4c0:	mov	x22, x0
   1c4c4:	mov	x0, x23
   1c4c8:	mov	x1, x21
   1c4cc:	mov	x2, x19
   1c4d0:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c4d4:	mov	x23, x0
   1c4d8:	mov	x0, x24
   1c4dc:	mov	x1, x21
   1c4e0:	mov	x2, x19
   1c4e4:	bl	1c520 <PyInit__decimal@@Base+0x159bc>
   1c4e8:	add	x27, x27, #0x4
   1c4ec:	cmp	x27, x26
   1c4f0:	stp	x25, x22, [x28]
   1c4f4:	stp	x23, x0, [x28, #16]
   1c4f8:	b.cc	1c494 <PyInit__decimal@@Base+0x15930>  // b.lo, b.ul, b.last
   1c4fc:	mov	w0, #0x1                   	// #1
   1c500:	ldp	x20, x19, [sp, #96]
   1c504:	ldp	x22, x21, [sp, #80]
   1c508:	ldp	x24, x23, [sp, #64]
   1c50c:	ldp	x26, x25, [sp, #48]
   1c510:	ldp	x28, x27, [sp, #32]
   1c514:	ldp	x29, x30, [sp, #16]
   1c518:	add	sp, sp, #0x70
   1c51c:	ret
   1c520:	umulh	x8, x1, x0
   1c524:	mul	x9, x1, x0
   1c528:	tbnz	x2, #32, 1c574 <PyInit__decimal@@Base+0x15a10>
   1c52c:	tbnz	x2, #34, 1c5a0 <PyInit__decimal@@Base+0x15a3c>
   1c530:	subs	x9, x9, x8
   1c534:	lsr	x10, x8, #24
   1c538:	cset	w11, cc  // cc = lo, ul, last
   1c53c:	adds	x8, x9, x8, lsl #40
   1c540:	sub	x9, x10, x11
   1c544:	cinc	x9, x9, cs  // cs = hs, nlast
   1c548:	subs	x8, x8, x9
   1c54c:	lsr	x10, x9, #24
   1c550:	cset	w11, cc  // cc = lo, ul, last
   1c554:	adds	x8, x8, x9, lsl #40
   1c558:	sub	x9, x10, x11
   1c55c:	cinc	x9, x9, cs  // cs = hs, nlast
   1c560:	subs	x8, x8, x9
   1c564:	lsr	x10, x9, #24
   1c568:	cset	w11, cc  // cc = lo, ul, last
   1c56c:	adds	x8, x8, x9, lsl #40
   1c570:	b	1c5e0 <PyInit__decimal@@Base+0x15a7c>
   1c574:	subs	x9, x9, x8
   1c578:	lsr	x10, x8, #32
   1c57c:	cset	w11, cc  // cc = lo, ul, last
   1c580:	adds	x8, x9, x8, lsl #32
   1c584:	sub	x9, x10, x11
   1c588:	cinc	x9, x9, cs  // cs = hs, nlast
   1c58c:	subs	x8, x8, x9
   1c590:	lsr	x10, x9, #32
   1c594:	cset	w11, cc  // cc = lo, ul, last
   1c598:	adds	x8, x8, x9, lsl #32
   1c59c:	b	1c5e0 <PyInit__decimal@@Base+0x15a7c>
   1c5a0:	subs	x9, x9, x8
   1c5a4:	lsr	x10, x8, #30
   1c5a8:	cset	w11, cc  // cc = lo, ul, last
   1c5ac:	adds	x8, x9, x8, lsl #34
   1c5b0:	sub	x9, x10, x11
   1c5b4:	cinc	x9, x9, cs  // cs = hs, nlast
   1c5b8:	subs	x8, x8, x9
   1c5bc:	lsr	x10, x9, #30
   1c5c0:	cset	w11, cc  // cc = lo, ul, last
   1c5c4:	adds	x8, x8, x9, lsl #34
   1c5c8:	sub	x9, x10, x11
   1c5cc:	cinc	x9, x9, cs  // cs = hs, nlast
   1c5d0:	subs	x8, x8, x9
   1c5d4:	lsr	x10, x9, #30
   1c5d8:	cset	w11, cc  // cc = lo, ul, last
   1c5dc:	adds	x8, x8, x9, lsl #34
   1c5e0:	sub	x9, x10, x11
   1c5e4:	cset	w10, cs  // cs = hs, nlast
   1c5e8:	sbfx	x10, x10, #0, #1
   1c5ec:	cmp	x9, x10
   1c5f0:	ccmp	x8, x2, #0x2, eq  // eq = none
   1c5f4:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1c5f8:	sub	x0, x8, x9
   1c5fc:	ret
   1c600:	sub	sp, sp, #0xa0
   1c604:	stp	x29, x30, [sp, #64]
   1c608:	stp	x28, x27, [sp, #80]
   1c60c:	stp	x26, x25, [sp, #96]
   1c610:	stp	x24, x23, [sp, #112]
   1c614:	stp	x22, x21, [sp, #128]
   1c618:	stp	x20, x19, [sp, #144]
   1c61c:	add	x29, sp, #0x40
   1c620:	cbz	x3, 1c7dc <PyInit__decimal@@Base+0x15c78>
   1c624:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1c628:	add	x8, x8, #0xc20
   1c62c:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1c630:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   1c634:	ldp	x13, x24, [x8]
   1c638:	ldr	x9, [x9, #3152]
   1c63c:	ldr	x26, [x8, #16]
   1c640:	ldr	x8, [x10, #3160]
   1c644:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   1c648:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   1c64c:	mov	x19, x3
   1c650:	stp	x8, x9, [sp, #24]
   1c654:	ldr	x8, [x11, #3168]
   1c658:	mov	x21, x1
   1c65c:	mov	x22, x0
   1c660:	mov	x27, xzr
   1c664:	str	x8, [sp, #16]
   1c668:	ldr	x8, [x12, #3176]
   1c66c:	mov	x23, xzr
   1c670:	mov	x28, xzr
   1c674:	stur	x13, [x29, #-24]
   1c678:	str	x8, [sp, #8]
   1c67c:	ldr	x25, [x22]
   1c680:	ldr	x8, [x21], #8
   1c684:	ldr	x9, [x2], #8
   1c688:	ldr	x1, [sp, #32]
   1c68c:	cmp	x8, x24
   1c690:	stp	x9, x2, [x29, #-16]
   1c694:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1c698:	cmp	x25, x24
   1c69c:	sub	x8, x8, x9
   1c6a0:	csel	x9, xzr, x24, cc  // cc = lo, ul, last
   1c6a4:	sub	x9, x25, x9
   1c6a8:	subs	x8, x8, x9
   1c6ac:	csel	x9, x24, xzr, cc  // cc = lo, ul, last
   1c6b0:	add	x0, x8, x9
   1c6b4:	mov	x2, x24
   1c6b8:	bl	1c7fc <PyInit__decimal@@Base+0x15c98>
   1c6bc:	ldur	x9, [x29, #-24]
   1c6c0:	mov	x20, x27
   1c6c4:	mov	x2, x26
   1c6c8:	mov	x3, xzr
   1c6cc:	umulh	x8, x0, x9
   1c6d0:	mul	x9, x0, x9
   1c6d4:	adds	x25, x25, x9
   1c6d8:	cinc	x27, x8, cs  // cs = hs, nlast
   1c6dc:	udiv	x8, x27, x26
   1c6e0:	msub	x1, x8, x26, x27
   1c6e4:	mov	x0, x25
   1c6e8:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1c6ec:	ldur	x9, [x29, #-16]
   1c6f0:	msub	x8, x26, x0, x25
   1c6f4:	ldr	x1, [sp, #24]
   1c6f8:	mov	x2, x26
   1c6fc:	subs	x8, x9, x8
   1c700:	csel	x9, x26, xzr, cc  // cc = lo, ul, last
   1c704:	add	x0, x8, x9
   1c708:	bl	1c7fc <PyInit__decimal@@Base+0x15c98>
   1c70c:	ldp	x11, x9, [sp, #8]
   1c710:	mov	x2, #0x89e80000            	// #2313682944
   1c714:	movk	x2, #0x2304, lsl #32
   1c718:	movk	x2, #0x8ac7, lsl #48
   1c71c:	mul	x8, x9, x0
   1c720:	umulh	x9, x9, x0
   1c724:	umulh	x10, x11, x0
   1c728:	mul	x11, x11, x0
   1c72c:	adds	x9, x11, x9
   1c730:	add	x10, x20, x10
   1c734:	cinc	x10, x10, cs  // cs = hs, nlast
   1c738:	adds	x8, x25, x8
   1c73c:	add	x9, x9, x27
   1c740:	cinc	x9, x9, cs  // cs = hs, nlast
   1c744:	adds	x25, x8, x28
   1c748:	cinc	x8, x23, cs  // cs = hs, nlast
   1c74c:	cmp	x9, x27
   1c750:	add	x28, x8, x9
   1c754:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1c758:	cinc	x8, x10, cc  // cc = lo, ul, last
   1c75c:	cmp	x28, x23
   1c760:	movk	x9, #0x2304, lsl #32
   1c764:	mov	x20, #0x76180000            	// #1981284352
   1c768:	mov	x10, #0x89e80000            	// #2313682944
   1c76c:	cinc	x8, x8, cc  // cc = lo, ul, last
   1c770:	movk	x9, #0x8ac7, lsl #48
   1c774:	movk	x20, #0xdcfb, lsl #32
   1c778:	movk	x10, #0x2304, lsl #32
   1c77c:	cmp	x8, x9
   1c780:	movk	x20, #0x7538, lsl #48
   1c784:	movk	x10, #0x8ac7, lsl #48
   1c788:	add	x9, x8, x20
   1c78c:	cset	w27, hi  // hi = pmore
   1c790:	cmp	x8, x10
   1c794:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1c798:	mov	x0, x28
   1c79c:	mov	x3, xzr
   1c7a0:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1c7a4:	mov	x2, #0x89e80000            	// #2313682944
   1c7a8:	movk	x2, #0x2304, lsl #32
   1c7ac:	mov	x23, x0
   1c7b0:	madd	x1, x0, x20, x28
   1c7b4:	movk	x2, #0x8ac7, lsl #48
   1c7b8:	mov	x0, x25
   1c7bc:	mov	x3, xzr
   1c7c0:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   1c7c4:	ldur	x2, [x29, #-8]
   1c7c8:	madd	x8, x0, x20, x25
   1c7cc:	mov	x28, x0
   1c7d0:	subs	x19, x19, #0x1
   1c7d4:	str	x8, [x22], #8
   1c7d8:	b.ne	1c67c <PyInit__decimal@@Base+0x15b18>  // b.any
   1c7dc:	ldp	x20, x19, [sp, #144]
   1c7e0:	ldp	x22, x21, [sp, #128]
   1c7e4:	ldp	x24, x23, [sp, #112]
   1c7e8:	ldp	x26, x25, [sp, #96]
   1c7ec:	ldp	x28, x27, [sp, #80]
   1c7f0:	ldp	x29, x30, [sp, #64]
   1c7f4:	add	sp, sp, #0xa0
   1c7f8:	ret
   1c7fc:	umulh	x8, x1, x0
   1c800:	mul	x9, x1, x0
   1c804:	tbnz	x2, #32, 1c850 <PyInit__decimal@@Base+0x15cec>
   1c808:	tbnz	x2, #34, 1c87c <PyInit__decimal@@Base+0x15d18>
   1c80c:	subs	x9, x9, x8
   1c810:	lsr	x10, x8, #24
   1c814:	cset	w11, cc  // cc = lo, ul, last
   1c818:	adds	x8, x9, x8, lsl #40
   1c81c:	sub	x9, x10, x11
   1c820:	cinc	x9, x9, cs  // cs = hs, nlast
   1c824:	subs	x8, x8, x9
   1c828:	lsr	x10, x9, #24
   1c82c:	cset	w11, cc  // cc = lo, ul, last
   1c830:	adds	x8, x8, x9, lsl #40
   1c834:	sub	x9, x10, x11
   1c838:	cinc	x9, x9, cs  // cs = hs, nlast
   1c83c:	subs	x8, x8, x9
   1c840:	lsr	x10, x9, #24
   1c844:	cset	w11, cc  // cc = lo, ul, last
   1c848:	adds	x8, x8, x9, lsl #40
   1c84c:	b	1c8bc <PyInit__decimal@@Base+0x15d58>
   1c850:	subs	x9, x9, x8
   1c854:	lsr	x10, x8, #32
   1c858:	cset	w11, cc  // cc = lo, ul, last
   1c85c:	adds	x8, x9, x8, lsl #32
   1c860:	sub	x9, x10, x11
   1c864:	cinc	x9, x9, cs  // cs = hs, nlast
   1c868:	subs	x8, x8, x9
   1c86c:	lsr	x10, x9, #32
   1c870:	cset	w11, cc  // cc = lo, ul, last
   1c874:	adds	x8, x8, x9, lsl #32
   1c878:	b	1c8bc <PyInit__decimal@@Base+0x15d58>
   1c87c:	subs	x9, x9, x8
   1c880:	lsr	x10, x8, #30
   1c884:	cset	w11, cc  // cc = lo, ul, last
   1c888:	adds	x8, x9, x8, lsl #34
   1c88c:	sub	x9, x10, x11
   1c890:	cinc	x9, x9, cs  // cs = hs, nlast
   1c894:	subs	x8, x8, x9
   1c898:	lsr	x10, x9, #30
   1c89c:	cset	w11, cc  // cc = lo, ul, last
   1c8a0:	adds	x8, x8, x9, lsl #34
   1c8a4:	sub	x9, x10, x11
   1c8a8:	cinc	x9, x9, cs  // cs = hs, nlast
   1c8ac:	subs	x8, x8, x9
   1c8b0:	lsr	x10, x9, #30
   1c8b4:	cset	w11, cc  // cc = lo, ul, last
   1c8b8:	adds	x8, x8, x9, lsl #34
   1c8bc:	sub	x9, x10, x11
   1c8c0:	cset	w10, cs  // cs = hs, nlast
   1c8c4:	sbfx	x10, x10, #0, #1
   1c8c8:	cmp	x9, x10
   1c8cc:	ccmp	x8, x2, #0x2, eq  // eq = none
   1c8d0:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1c8d4:	sub	x0, x8, x9
   1c8d8:	ret
   1c8dc:	sub	sp, sp, #0xb0
   1c8e0:	stp	x29, x30, [sp, #80]
   1c8e4:	stp	x28, x27, [sp, #96]
   1c8e8:	stp	x26, x25, [sp, #112]
   1c8ec:	stp	x24, x23, [sp, #128]
   1c8f0:	stp	x22, x21, [sp, #144]
   1c8f4:	stp	x20, x19, [sp, #160]
   1c8f8:	add	x29, sp, #0x50
   1c8fc:	ldrsw	x8, [x2]
   1c900:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1c904:	add	x9, x9, #0xc20
   1c908:	lsr	x4, x1, #1
   1c90c:	ldr	x22, [x9, x8, lsl #3]
   1c910:	str	x2, [sp, #24]
   1c914:	stur	x1, [x29, #-24]
   1c918:	str	x0, [sp, #16]
   1c91c:	cbz	x4, 1c9dc <PyInit__decimal@@Base+0x15e78>
   1c920:	ldr	x8, [sp, #16]
   1c924:	mov	x20, xzr
   1c928:	lsl	x28, x4, #3
   1c92c:	add	x21, x8, #0x8
   1c930:	ldr	x8, [sp, #24]
   1c934:	add	x26, x8, #0x20
   1c938:	add	x19, x21, x28
   1c93c:	ldp	x8, x10, [x21, #-8]
   1c940:	ldur	x9, [x19, #-8]
   1c944:	ldr	x11, [x21, x4, lsl #3]
   1c948:	ldp	x1, x23, [x26, #-8]
   1c94c:	mov	x2, x22
   1c950:	adds	x12, x9, x8
   1c954:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1c958:	sub	x12, x12, x13
   1c95c:	cmp	x12, x22
   1c960:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1c964:	subs	x8, x8, x9
   1c968:	sub	x9, x12, x13
   1c96c:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1c970:	adds	x13, x11, x10
   1c974:	add	x0, x8, x12
   1c978:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1c97c:	sub	x8, x13, x8
   1c980:	cmp	x8, x22
   1c984:	stur	x9, [x21, #-8]
   1c988:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1c98c:	subs	x10, x10, x11
   1c990:	sub	x8, x8, x9
   1c994:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1c998:	str	x8, [x21]
   1c99c:	add	x24, x10, x9
   1c9a0:	mov	x27, x4
   1c9a4:	bl	1cc8c <PyInit__decimal@@Base+0x16128>
   1c9a8:	mov	x25, x0
   1c9ac:	mov	x0, x24
   1c9b0:	mov	x1, x23
   1c9b4:	mov	x2, x22
   1c9b8:	bl	1cc8c <PyInit__decimal@@Base+0x16128>
   1c9bc:	add	x20, x20, #0x2
   1c9c0:	mov	x4, x27
   1c9c4:	stur	x25, [x19, #-8]
   1c9c8:	str	x0, [x21, x27, lsl #3]
   1c9cc:	add	x21, x21, #0x10
   1c9d0:	cmp	x20, x27
   1c9d4:	add	x26, x26, #0x10
   1c9d8:	b.cc	1c938 <PyInit__decimal@@Base+0x15dd4>  // b.lo, b.ul, b.last
   1c9dc:	ldur	x1, [x29, #-24]
   1c9e0:	ldr	x0, [sp, #16]
   1c9e4:	cmp	x1, #0x4
   1c9e8:	b.cc	1cbbc <PyInit__decimal@@Base+0x16058>  // b.lo, b.ul, b.last
   1c9ec:	add	x8, x0, #0x8
   1c9f0:	str	x8, [sp, #8]
   1c9f4:	mov	w8, #0x2                   	// #2
   1c9f8:	str	x8, [sp, #32]
   1c9fc:	lsr	x28, x4, #1
   1ca00:	lsl	x9, x4, #3
   1ca04:	mov	x8, xzr
   1ca08:	lsl	x21, x4, #1
   1ca0c:	lsl	x27, x4, #4
   1ca10:	lsl	x10, x28, #3
   1ca14:	add	x11, x9, x28, lsl #3
   1ca18:	mov	x12, x0
   1ca1c:	ldr	x13, [x12]
   1ca20:	ldr	x14, [x12, x10]
   1ca24:	ldr	x15, [x12, x9]
   1ca28:	ldr	x16, [x12, x11]
   1ca2c:	add	x8, x8, x21
   1ca30:	adds	x17, x14, x13
   1ca34:	csel	x18, x22, xzr, cs  // cs = hs, nlast
   1ca38:	sub	x17, x17, x18
   1ca3c:	cmp	x17, x22
   1ca40:	csel	x18, xzr, x22, cc  // cc = lo, ul, last
   1ca44:	subs	x13, x13, x14
   1ca48:	sub	x14, x17, x18
   1ca4c:	csel	x17, x22, xzr, cc  // cc = lo, ul, last
   1ca50:	adds	x18, x16, x15
   1ca54:	str	x14, [x12]
   1ca58:	csel	x14, x22, xzr, cs  // cs = hs, nlast
   1ca5c:	sub	x14, x18, x14
   1ca60:	cmp	x14, x22
   1ca64:	add	x13, x13, x17
   1ca68:	csel	x17, xzr, x22, cc  // cc = lo, ul, last
   1ca6c:	subs	x15, x15, x16
   1ca70:	sub	x14, x14, x17
   1ca74:	csel	x16, x22, xzr, cc  // cc = lo, ul, last
   1ca78:	str	x14, [x12, x9]
   1ca7c:	add	x14, x15, x16
   1ca80:	cmp	x8, x1
   1ca84:	str	x13, [x12, x10]
   1ca88:	str	x14, [x12, x11]
   1ca8c:	add	x12, x12, x27
   1ca90:	b.cc	1ca1c <PyInit__decimal@@Base+0x15eb8>  // b.lo, b.ul, b.last
   1ca94:	cmp	x4, #0x4
   1ca98:	b.cc	1cbbc <PyInit__decimal@@Base+0x16058>  // b.lo, b.ul, b.last
   1ca9c:	ldr	x20, [sp, #8]
   1caa0:	add	x10, x4, x28
   1caa4:	mov	w9, #0x1                   	// #1
   1caa8:	stur	x10, [x29, #-8]
   1caac:	ldr	x8, [sp, #32]
   1cab0:	str	x9, [sp, #40]
   1cab4:	mov	x19, xzr
   1cab8:	stur	x20, [x29, #-32]
   1cabc:	mul	x8, x9, x8
   1cac0:	ldr	x9, [sp, #24]
   1cac4:	add	x8, x9, x8, lsl #3
   1cac8:	ldr	x8, [x8, #24]
   1cacc:	stur	x8, [x29, #-16]
   1cad0:	ldr	x8, [x20]
   1cad4:	ldr	x9, [x20, x28, lsl #3]
   1cad8:	ldur	x11, [x29, #-8]
   1cadc:	ldr	x10, [x20, x4, lsl #3]
   1cae0:	mov	x23, x22
   1cae4:	adds	x12, x9, x8
   1cae8:	ldr	x11, [x20, x11, lsl #3]
   1caec:	csel	x13, x22, xzr, cs  // cs = hs, nlast
   1caf0:	sub	x12, x12, x13
   1caf4:	cmp	x12, x22
   1caf8:	csel	x13, xzr, x22, cc  // cc = lo, ul, last
   1cafc:	subs	x8, x8, x9
   1cb00:	sub	x9, x12, x13
   1cb04:	csel	x12, x22, xzr, cc  // cc = lo, ul, last
   1cb08:	adds	x13, x11, x10
   1cb0c:	add	x0, x8, x12
   1cb10:	csel	x8, x22, xzr, cs  // cs = hs, nlast
   1cb14:	sub	x8, x13, x8
   1cb18:	cmp	x8, x22
   1cb1c:	str	x9, [x20]
   1cb20:	csel	x9, xzr, x22, cc  // cc = lo, ul, last
   1cb24:	subs	x10, x10, x11
   1cb28:	sub	x8, x8, x9
   1cb2c:	csel	x9, x22, xzr, cc  // cc = lo, ul, last
   1cb30:	ldur	x22, [x29, #-16]
   1cb34:	mov	x2, x23
   1cb38:	str	x8, [x20, x4, lsl #3]
   1cb3c:	add	x24, x10, x9
   1cb40:	mov	x1, x22
   1cb44:	mov	x26, x4
   1cb48:	bl	1cc8c <PyInit__decimal@@Base+0x16128>
   1cb4c:	mov	x25, x0
   1cb50:	mov	x0, x24
   1cb54:	mov	x1, x22
   1cb58:	mov	x2, x23
   1cb5c:	mov	x22, x23
   1cb60:	bl	1cc8c <PyInit__decimal@@Base+0x16128>
   1cb64:	ldur	x10, [x29, #-8]
   1cb68:	ldur	x1, [x29, #-24]
   1cb6c:	add	x19, x19, x21
   1cb70:	mov	x4, x26
   1cb74:	str	x25, [x20, x28, lsl #3]
   1cb78:	str	x0, [x20, x10, lsl #3]
   1cb7c:	cmp	x19, x1
   1cb80:	add	x20, x20, x27
   1cb84:	b.cc	1cad0 <PyInit__decimal@@Base+0x15f6c>  // b.lo, b.ul, b.last
   1cb88:	ldr	x9, [sp, #40]
   1cb8c:	ldur	x20, [x29, #-32]
   1cb90:	add	x9, x9, #0x1
   1cb94:	cmp	x9, x28
   1cb98:	add	x20, x20, #0x8
   1cb9c:	b.cc	1caac <PyInit__decimal@@Base+0x15f48>  // b.lo, b.ul, b.last
   1cba0:	ldr	x8, [sp, #32]
   1cba4:	ldr	x0, [sp, #16]
   1cba8:	cmp	x4, #0x3
   1cbac:	mov	x4, x28
   1cbb0:	lsl	x8, x8, #1
   1cbb4:	str	x8, [sp, #32]
   1cbb8:	b.hi	1c9fc <PyInit__decimal@@Base+0x15e98>  // b.pmore
   1cbbc:	mov	x8, xzr
   1cbc0:	mov	x11, xzr
   1cbc4:	mov	w9, #0x1f                  	// #31
   1cbc8:	mov	w10, #0x3f                  	// #63
   1cbcc:	cmp	x8, x11
   1cbd0:	b.ls	1cbe4 <PyInit__decimal@@Base+0x16080>  // b.plast
   1cbd4:	ldr	x12, [x0, x8, lsl #3]
   1cbd8:	ldr	x13, [x0, x11, lsl #3]
   1cbdc:	str	x12, [x0, x11, lsl #3]
   1cbe0:	str	x13, [x0, x8, lsl #3]
   1cbe4:	add	x12, x11, #0x1
   1cbe8:	lsr	x13, x12, #32
   1cbec:	tst	x12, #0xffffffff
   1cbf0:	csinc	x11, x13, x11, eq  // eq = none
   1cbf4:	csel	w13, w10, w9, eq  // eq = none
   1cbf8:	lsr	x15, x11, #16
   1cbfc:	tst	x11, #0xffff
   1cc00:	sub	w14, w13, #0x10
   1cc04:	csel	x11, x15, x11, eq  // eq = none
   1cc08:	csel	w13, w13, w14, eq  // eq = none
   1cc0c:	lsr	x15, x11, #8
   1cc10:	tst	x11, #0xff
   1cc14:	sub	w14, w13, #0x8
   1cc18:	csel	x11, x15, x11, eq  // eq = none
   1cc1c:	csel	w13, w13, w14, eq  // eq = none
   1cc20:	lsr	x15, x11, #4
   1cc24:	tst	x11, #0xf
   1cc28:	sub	w14, w13, #0x4
   1cc2c:	csel	x11, x15, x11, eq  // eq = none
   1cc30:	csel	w13, w13, w14, eq  // eq = none
   1cc34:	lsr	x15, x11, #2
   1cc38:	tst	x11, #0x3
   1cc3c:	sub	w14, w13, #0x2
   1cc40:	csel	x11, x15, x11, eq  // eq = none
   1cc44:	csel	w13, w13, w14, eq  // eq = none
   1cc48:	sbfx	x11, x11, #0, #1
   1cc4c:	add	w11, w13, w11
   1cc50:	add	w11, w11, #0x1
   1cc54:	lsr	x11, x1, x11
   1cc58:	sub	x11, x1, x11
   1cc5c:	cmp	x12, x1
   1cc60:	eor	x8, x11, x8
   1cc64:	mov	x11, x12
   1cc68:	b.cc	1cbcc <PyInit__decimal@@Base+0x16068>  // b.lo, b.ul, b.last
   1cc6c:	ldp	x20, x19, [sp, #160]
   1cc70:	ldp	x22, x21, [sp, #144]
   1cc74:	ldp	x24, x23, [sp, #128]
   1cc78:	ldp	x26, x25, [sp, #112]
   1cc7c:	ldp	x28, x27, [sp, #96]
   1cc80:	ldp	x29, x30, [sp, #80]
   1cc84:	add	sp, sp, #0xb0
   1cc88:	ret
   1cc8c:	umulh	x8, x1, x0
   1cc90:	mul	x9, x1, x0
   1cc94:	tbnz	x2, #32, 1cce0 <PyInit__decimal@@Base+0x1617c>
   1cc98:	tbnz	x2, #34, 1cd0c <PyInit__decimal@@Base+0x161a8>
   1cc9c:	subs	x9, x9, x8
   1cca0:	lsr	x10, x8, #24
   1cca4:	cset	w11, cc  // cc = lo, ul, last
   1cca8:	adds	x8, x9, x8, lsl #40
   1ccac:	sub	x9, x10, x11
   1ccb0:	cinc	x9, x9, cs  // cs = hs, nlast
   1ccb4:	subs	x8, x8, x9
   1ccb8:	lsr	x10, x9, #24
   1ccbc:	cset	w11, cc  // cc = lo, ul, last
   1ccc0:	adds	x8, x8, x9, lsl #40
   1ccc4:	sub	x9, x10, x11
   1ccc8:	cinc	x9, x9, cs  // cs = hs, nlast
   1cccc:	subs	x8, x8, x9
   1ccd0:	lsr	x10, x9, #24
   1ccd4:	cset	w11, cc  // cc = lo, ul, last
   1ccd8:	adds	x8, x8, x9, lsl #40
   1ccdc:	b	1cd4c <PyInit__decimal@@Base+0x161e8>
   1cce0:	subs	x9, x9, x8
   1cce4:	lsr	x10, x8, #32
   1cce8:	cset	w11, cc  // cc = lo, ul, last
   1ccec:	adds	x8, x9, x8, lsl #32
   1ccf0:	sub	x9, x10, x11
   1ccf4:	cinc	x9, x9, cs  // cs = hs, nlast
   1ccf8:	subs	x8, x8, x9
   1ccfc:	lsr	x10, x9, #32
   1cd00:	cset	w11, cc  // cc = lo, ul, last
   1cd04:	adds	x8, x8, x9, lsl #32
   1cd08:	b	1cd4c <PyInit__decimal@@Base+0x161e8>
   1cd0c:	subs	x9, x9, x8
   1cd10:	lsr	x10, x8, #30
   1cd14:	cset	w11, cc  // cc = lo, ul, last
   1cd18:	adds	x8, x9, x8, lsl #34
   1cd1c:	sub	x9, x10, x11
   1cd20:	cinc	x9, x9, cs  // cs = hs, nlast
   1cd24:	subs	x8, x8, x9
   1cd28:	lsr	x10, x9, #30
   1cd2c:	cset	w11, cc  // cc = lo, ul, last
   1cd30:	adds	x8, x8, x9, lsl #34
   1cd34:	sub	x9, x10, x11
   1cd38:	cinc	x9, x9, cs  // cs = hs, nlast
   1cd3c:	subs	x8, x8, x9
   1cd40:	lsr	x10, x9, #30
   1cd44:	cset	w11, cc  // cc = lo, ul, last
   1cd48:	adds	x8, x8, x9, lsl #34
   1cd4c:	sub	x9, x10, x11
   1cd50:	cset	w10, cs  // cs = hs, nlast
   1cd54:	sbfx	x10, x10, #0, #1
   1cd58:	cmp	x9, x10
   1cd5c:	ccmp	x8, x2, #0x2, eq  // eq = none
   1cd60:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1cd64:	sub	x0, x8, x9
   1cd68:	ret
   1cd6c:	stp	x29, x30, [sp, #-48]!
   1cd70:	str	x21, [sp, #16]
   1cd74:	stp	x20, x19, [sp, #32]
   1cd78:	mov	x29, sp
   1cd7c:	mov	x19, x1
   1cd80:	mov	x20, x0
   1cd84:	mov	w1, #0xffffffff            	// #-1
   1cd88:	mov	x0, x19
   1cd8c:	bl	30494 <PyInit__decimal@@Base+0x29930>
   1cd90:	cbz	x0, 1cdbc <PyInit__decimal@@Base+0x16258>
   1cd94:	mov	x21, x0
   1cd98:	mov	x0, x20
   1cd9c:	mov	x1, x19
   1cda0:	mov	x2, x21
   1cda4:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   1cda8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1cdac:	ldr	x8, [x8, #1384]
   1cdb0:	mov	x0, x21
   1cdb4:	blr	x8
   1cdb8:	mov	w0, #0x1                   	// #1
   1cdbc:	ldp	x20, x19, [sp, #32]
   1cdc0:	ldr	x21, [sp, #16]
   1cdc4:	ldp	x29, x30, [sp], #48
   1cdc8:	ret
   1cdcc:	stp	x29, x30, [sp, #-48]!
   1cdd0:	str	x21, [sp, #16]
   1cdd4:	stp	x20, x19, [sp, #32]
   1cdd8:	mov	x29, sp
   1cddc:	mov	x19, x1
   1cde0:	mov	x20, x0
   1cde4:	mov	w1, #0x1                   	// #1
   1cde8:	mov	x0, x19
   1cdec:	bl	30494 <PyInit__decimal@@Base+0x29930>
   1cdf0:	cbz	x0, 1ce1c <PyInit__decimal@@Base+0x162b8>
   1cdf4:	mov	x21, x0
   1cdf8:	mov	x0, x20
   1cdfc:	mov	x1, x19
   1ce00:	mov	x2, x21
   1ce04:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   1ce08:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1ce0c:	ldr	x8, [x8, #1384]
   1ce10:	mov	x0, x21
   1ce14:	blr	x8
   1ce18:	mov	w0, #0x1                   	// #1
   1ce1c:	ldp	x20, x19, [sp, #32]
   1ce20:	ldr	x21, [sp, #16]
   1ce24:	ldp	x29, x30, [sp], #48
   1ce28:	ret
   1ce2c:	sub	sp, sp, #0xb0
   1ce30:	stp	x29, x30, [sp, #80]
   1ce34:	stp	x28, x27, [sp, #96]
   1ce38:	stp	x26, x25, [sp, #112]
   1ce3c:	stp	x24, x23, [sp, #128]
   1ce40:	stp	x22, x21, [sp, #144]
   1ce44:	stp	x20, x19, [sp, #160]
   1ce48:	add	x29, sp, #0x50
   1ce4c:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1ce50:	add	x8, x8, #0xc20
   1ce54:	ldr	x23, [x8, w2, sxtw #3]
   1ce58:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1ce5c:	movk	x8, #0xaaab
   1ce60:	mov	x20, x0
   1ce64:	str	x1, [sp, #16]
   1ce68:	umulh	x8, x1, x8
   1ce6c:	sub	x0, x29, #0x18
   1ce70:	mov	w1, #0xffffffff            	// #-1
   1ce74:	lsr	x25, x8, #1
   1ce78:	str	w2, [sp, #12]
   1ce7c:	bl	30614 <PyInit__decimal@@Base+0x29ab0>
   1ce80:	add	x19, x20, x25, lsl #3
   1ce84:	cmp	x19, x20
   1ce88:	str	x20, [sp]
   1ce8c:	str	x25, [sp, #24]
   1ce90:	b.ls	1cfa8 <PyInit__decimal@@Base+0x16444>  // b.plast
   1ce94:	ldr	x22, [sp]
   1ce98:	lsl	x8, x25, #4
   1ce9c:	mov	x28, x8
   1cea0:	str	x8, [sp, #40]
   1cea4:	ldr	x20, [x22]
   1cea8:	ldr	x24, [x22, x25, lsl #3]
   1ceac:	ldr	x25, [x22, x28]
   1ceb0:	ldur	x26, [x29, #-16]
   1ceb4:	mov	x2, x23
   1ceb8:	adds	x8, x24, x20
   1cebc:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1cec0:	sub	x8, x8, x9
   1cec4:	cmp	x8, x23
   1cec8:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cecc:	sub	x8, x8, x9
   1ced0:	adds	x8, x8, x25
   1ced4:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1ced8:	sub	x8, x8, x9
   1cedc:	cmp	x8, x23
   1cee0:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cee4:	sub	x8, x8, x9
   1cee8:	mov	x0, x24
   1ceec:	mov	x1, x26
   1cef0:	stur	x8, [x29, #-32]
   1cef4:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cef8:	adds	x8, x0, x20
   1cefc:	ldur	x27, [x29, #-8]
   1cf00:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1cf04:	sub	x8, x8, x9
   1cf08:	cmp	x8, x23
   1cf0c:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cf10:	mov	x0, x25
   1cf14:	mov	x1, x27
   1cf18:	mov	x2, x23
   1cf1c:	sub	x21, x8, x9
   1cf20:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cf24:	adds	x8, x21, x0
   1cf28:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1cf2c:	sub	x8, x8, x9
   1cf30:	cmp	x8, x23
   1cf34:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cf38:	mov	x0, x24
   1cf3c:	mov	x1, x27
   1cf40:	mov	x2, x23
   1cf44:	sub	x21, x8, x9
   1cf48:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cf4c:	adds	x8, x0, x20
   1cf50:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1cf54:	sub	x8, x8, x9
   1cf58:	mov	x0, x25
   1cf5c:	ldr	x25, [sp, #24]
   1cf60:	cmp	x8, x23
   1cf64:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cf68:	mov	x1, x26
   1cf6c:	mov	x2, x23
   1cf70:	sub	x20, x8, x9
   1cf74:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cf78:	adds	x8, x20, x0
   1cf7c:	csel	x9, x23, xzr, cs  // cs = hs, nlast
   1cf80:	sub	x8, x8, x9
   1cf84:	cmp	x8, x23
   1cf88:	csel	x9, xzr, x23, cc  // cc = lo, ul, last
   1cf8c:	sub	x8, x8, x9
   1cf90:	str	x8, [x22, x28]
   1cf94:	ldur	x8, [x29, #-32]
   1cf98:	str	x21, [x22, x25, lsl #3]
   1cf9c:	str	x8, [x22], #8
   1cfa0:	cmp	x22, x19
   1cfa4:	b.cc	1cea4 <PyInit__decimal@@Base+0x16340>  // b.lo, b.ul, b.last
   1cfa8:	ldr	x0, [sp, #16]
   1cfac:	ldr	w2, [sp, #12]
   1cfb0:	mov	w1, #0xffffffff            	// #-1
   1cfb4:	bl	303bc <PyInit__decimal@@Base+0x29858>
   1cfb8:	sub	x24, x25, #0x1
   1cfbc:	lsl	x8, x25, #3
   1cfc0:	mov	w20, #0x1                   	// #1
   1cfc4:	stp	x0, x8, [sp, #32]
   1cfc8:	ldr	x26, [sp, #32]
   1cfcc:	mov	w25, #0x1                   	// #1
   1cfd0:	stur	x20, [x29, #-32]
   1cfd4:	tbz	w20, #0, 1cfec <PyInit__decimal@@Base+0x16488>
   1cfd8:	mov	x0, x25
   1cfdc:	mov	x1, x26
   1cfe0:	mov	x2, x23
   1cfe4:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cfe8:	mov	x25, x0
   1cfec:	mov	x0, x26
   1cff0:	mov	x1, x26
   1cff4:	mov	x2, x23
   1cff8:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1cffc:	lsr	x20, x20, #1
   1d000:	mov	x26, x0
   1d004:	cbnz	x20, 1cfd4 <PyInit__decimal@@Base+0x16470>
   1d008:	mov	x0, x25
   1d00c:	mov	x1, x25
   1d010:	mov	x2, x23
   1d014:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d018:	cbz	x24, 1d08c <PyInit__decimal@@Base+0x16528>
   1d01c:	mov	x26, x0
   1d020:	mov	x20, xzr
   1d024:	mov	w27, #0x1                   	// #1
   1d028:	add	x21, x19, x20, lsl #3
   1d02c:	ldp	x0, x28, [x21]
   1d030:	mov	x1, x27
   1d034:	mov	x2, x23
   1d038:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d03c:	mov	x22, x0
   1d040:	mov	x0, x28
   1d044:	mov	x1, x25
   1d048:	mov	x2, x23
   1d04c:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d050:	mov	x28, x0
   1d054:	mov	x0, x27
   1d058:	mov	x1, x26
   1d05c:	mov	x2, x23
   1d060:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d064:	mov	x27, x0
   1d068:	mov	x0, x25
   1d06c:	mov	x1, x26
   1d070:	mov	x2, x23
   1d074:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d078:	add	x20, x20, #0x2
   1d07c:	mov	x25, x0
   1d080:	cmp	x20, x24
   1d084:	stp	x22, x28, [x21]
   1d088:	b.cc	1d028 <PyInit__decimal@@Base+0x164c4>  // b.lo, b.ul, b.last
   1d08c:	ldur	x20, [x29, #-32]
   1d090:	ldr	x8, [sp, #40]
   1d094:	add	x20, x20, #0x1
   1d098:	cmp	x20, #0x3
   1d09c:	add	x19, x19, x8
   1d0a0:	b.ne	1cfc8 <PyInit__decimal@@Base+0x16464>  // b.any
   1d0a4:	ldr	x21, [sp]
   1d0a8:	ldr	x8, [sp, #16]
   1d0ac:	add	x19, x21, x8, lsl #3
   1d0b0:	cmp	x19, x21
   1d0b4:	b.ls	1d0e4 <PyInit__decimal@@Base+0x16580>  // b.plast
   1d0b8:	ldr	w20, [sp, #12]
   1d0bc:	ldr	x22, [sp, #24]
   1d0c0:	mov	x0, x21
   1d0c4:	mov	x1, x22
   1d0c8:	mov	w2, w20
   1d0cc:	bl	3069c <PyInit__decimal@@Base+0x29b38>
   1d0d0:	cbz	w0, 1d0e8 <PyInit__decimal@@Base+0x16584>
   1d0d4:	ldr	x8, [sp, #40]
   1d0d8:	add	x21, x21, x8
   1d0dc:	cmp	x21, x19
   1d0e0:	b.cc	1d0c0 <PyInit__decimal@@Base+0x1655c>  // b.lo, b.ul, b.last
   1d0e4:	mov	w0, #0x1                   	// #1
   1d0e8:	ldp	x20, x19, [sp, #160]
   1d0ec:	ldp	x22, x21, [sp, #144]
   1d0f0:	ldp	x24, x23, [sp, #128]
   1d0f4:	ldp	x26, x25, [sp, #112]
   1d0f8:	ldp	x28, x27, [sp, #96]
   1d0fc:	ldp	x29, x30, [sp, #80]
   1d100:	add	sp, sp, #0xb0
   1d104:	ret
   1d108:	umulh	x8, x1, x0
   1d10c:	mul	x9, x1, x0
   1d110:	tbnz	x2, #32, 1d15c <PyInit__decimal@@Base+0x165f8>
   1d114:	tbnz	x2, #34, 1d188 <PyInit__decimal@@Base+0x16624>
   1d118:	subs	x9, x9, x8
   1d11c:	lsr	x10, x8, #24
   1d120:	cset	w11, cc  // cc = lo, ul, last
   1d124:	adds	x8, x9, x8, lsl #40
   1d128:	sub	x9, x10, x11
   1d12c:	cinc	x9, x9, cs  // cs = hs, nlast
   1d130:	subs	x8, x8, x9
   1d134:	lsr	x10, x9, #24
   1d138:	cset	w11, cc  // cc = lo, ul, last
   1d13c:	adds	x8, x8, x9, lsl #40
   1d140:	sub	x9, x10, x11
   1d144:	cinc	x9, x9, cs  // cs = hs, nlast
   1d148:	subs	x8, x8, x9
   1d14c:	lsr	x10, x9, #24
   1d150:	cset	w11, cc  // cc = lo, ul, last
   1d154:	adds	x8, x8, x9, lsl #40
   1d158:	b	1d1c8 <PyInit__decimal@@Base+0x16664>
   1d15c:	subs	x9, x9, x8
   1d160:	lsr	x10, x8, #32
   1d164:	cset	w11, cc  // cc = lo, ul, last
   1d168:	adds	x8, x9, x8, lsl #32
   1d16c:	sub	x9, x10, x11
   1d170:	cinc	x9, x9, cs  // cs = hs, nlast
   1d174:	subs	x8, x8, x9
   1d178:	lsr	x10, x9, #32
   1d17c:	cset	w11, cc  // cc = lo, ul, last
   1d180:	adds	x8, x8, x9, lsl #32
   1d184:	b	1d1c8 <PyInit__decimal@@Base+0x16664>
   1d188:	subs	x9, x9, x8
   1d18c:	lsr	x10, x8, #30
   1d190:	cset	w11, cc  // cc = lo, ul, last
   1d194:	adds	x8, x9, x8, lsl #34
   1d198:	sub	x9, x10, x11
   1d19c:	cinc	x9, x9, cs  // cs = hs, nlast
   1d1a0:	subs	x8, x8, x9
   1d1a4:	lsr	x10, x9, #30
   1d1a8:	cset	w11, cc  // cc = lo, ul, last
   1d1ac:	adds	x8, x8, x9, lsl #34
   1d1b0:	sub	x9, x10, x11
   1d1b4:	cinc	x9, x9, cs  // cs = hs, nlast
   1d1b8:	subs	x8, x8, x9
   1d1bc:	lsr	x10, x9, #30
   1d1c0:	cset	w11, cc  // cc = lo, ul, last
   1d1c4:	adds	x8, x8, x9, lsl #34
   1d1c8:	sub	x9, x10, x11
   1d1cc:	cset	w10, cs  // cs = hs, nlast
   1d1d0:	sbfx	x10, x10, #0, #1
   1d1d4:	cmp	x9, x10
   1d1d8:	ccmp	x8, x2, #0x2, eq  // eq = none
   1d1dc:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   1d1e0:	sub	x0, x8, x9
   1d1e4:	ret
   1d1e8:	sub	sp, sp, #0xb0
   1d1ec:	stp	x29, x30, [sp, #80]
   1d1f0:	stp	x28, x27, [sp, #96]
   1d1f4:	stp	x26, x25, [sp, #112]
   1d1f8:	stp	x24, x23, [sp, #128]
   1d1fc:	stp	x22, x21, [sp, #144]
   1d200:	stp	x20, x19, [sp, #160]
   1d204:	add	x29, sp, #0x50
   1d208:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1d20c:	movk	x8, #0xaaab
   1d210:	umulh	x8, x1, x8
   1d214:	add	x19, x0, x1, lsl #3
   1d218:	lsr	x20, x8, #1
   1d21c:	mov	w23, w2
   1d220:	mov	x22, x0
   1d224:	cmp	x19, x0
   1d228:	lsl	x8, x20, #3
   1d22c:	stp	x1, x8, [sp, #32]
   1d230:	b.ls	1d25c <PyInit__decimal@@Base+0x166f8>  // b.plast
   1d234:	mov	x21, x22
   1d238:	mov	x0, x21
   1d23c:	mov	x1, x20
   1d240:	mov	w2, w23
   1d244:	bl	30a78 <PyInit__decimal@@Base+0x29f14>
   1d248:	cbz	w0, 1d4a8 <PyInit__decimal@@Base+0x16944>
   1d24c:	ldr	x8, [sp, #40]
   1d250:	add	x21, x21, x8
   1d254:	cmp	x21, x19
   1d258:	b.cc	1d238 <PyInit__decimal@@Base+0x166d4>  // b.lo, b.ul, b.last
   1d25c:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1d260:	add	x8, x8, #0xc20
   1d264:	ldr	x0, [sp, #32]
   1d268:	ldr	x21, [x8, w23, sxtw #3]
   1d26c:	mov	w1, #0x1                   	// #1
   1d270:	mov	w2, w23
   1d274:	mov	w19, #0x1                   	// #1
   1d278:	str	w23, [sp, #12]
   1d27c:	bl	303bc <PyInit__decimal@@Base+0x29858>
   1d280:	add	x23, x22, x20, lsl #3
   1d284:	stp	x22, x0, [sp, #16]
   1d288:	ldr	x26, [sp, #24]
   1d28c:	mov	w25, #0x1                   	// #1
   1d290:	stur	x19, [x29, #-32]
   1d294:	tbz	w19, #0, 1d2ac <PyInit__decimal@@Base+0x16748>
   1d298:	mov	x0, x25
   1d29c:	mov	x1, x26
   1d2a0:	mov	x2, x21
   1d2a4:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d2a8:	mov	x25, x0
   1d2ac:	mov	x0, x26
   1d2b0:	mov	x1, x26
   1d2b4:	mov	x2, x21
   1d2b8:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d2bc:	lsr	x19, x19, #1
   1d2c0:	mov	x26, x0
   1d2c4:	cbnz	x19, 1d294 <PyInit__decimal@@Base+0x16730>
   1d2c8:	mov	x0, x25
   1d2cc:	mov	x1, x25
   1d2d0:	mov	x2, x21
   1d2d4:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d2d8:	ldr	x8, [sp, #32]
   1d2dc:	cmp	x8, #0x3
   1d2e0:	b.cc	1d354 <PyInit__decimal@@Base+0x167f0>  // b.lo, b.ul, b.last
   1d2e4:	mov	x26, x0
   1d2e8:	mov	x19, xzr
   1d2ec:	mov	w27, #0x1                   	// #1
   1d2f0:	add	x24, x23, x19, lsl #3
   1d2f4:	ldp	x0, x28, [x24]
   1d2f8:	mov	x1, x27
   1d2fc:	mov	x2, x21
   1d300:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d304:	mov	x22, x0
   1d308:	mov	x0, x28
   1d30c:	mov	x1, x25
   1d310:	mov	x2, x21
   1d314:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d318:	mov	x28, x0
   1d31c:	mov	x0, x27
   1d320:	mov	x1, x26
   1d324:	mov	x2, x21
   1d328:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d32c:	mov	x27, x0
   1d330:	mov	x0, x25
   1d334:	mov	x1, x26
   1d338:	mov	x2, x21
   1d33c:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d340:	add	x19, x19, #0x2
   1d344:	mov	x25, x0
   1d348:	cmp	x19, x20
   1d34c:	stp	x22, x28, [x24]
   1d350:	b.cc	1d2f0 <PyInit__decimal@@Base+0x1678c>  // b.lo, b.ul, b.last
   1d354:	ldur	x19, [x29, #-32]
   1d358:	ldr	x8, [sp, #40]
   1d35c:	add	x19, x19, #0x1
   1d360:	cmp	x19, #0x3
   1d364:	add	x23, x23, x8
   1d368:	b.ne	1d288 <PyInit__decimal@@Base+0x16724>  // b.any
   1d36c:	ldr	w2, [sp, #12]
   1d370:	sub	x0, x29, #0x18
   1d374:	mov	w1, #0x1                   	// #1
   1d378:	mov	w23, #0x1                   	// #1
   1d37c:	bl	30614 <PyInit__decimal@@Base+0x29ab0>
   1d380:	ldr	x27, [sp, #16]
   1d384:	add	x8, x27, x20, lsl #3
   1d388:	cmp	x8, x27
   1d38c:	b.ls	1d4ac <PyInit__decimal@@Base+0x16948>  // b.plast
   1d390:	lsl	x9, x20, #4
   1d394:	mov	x28, x9
   1d398:	stp	x9, x8, [sp, #32]
   1d39c:	ldr	x19, [x27]
   1d3a0:	ldr	x22, [x27, x20, lsl #3]
   1d3a4:	ldr	x23, [x27, x28]
   1d3a8:	ldur	x24, [x29, #-16]
   1d3ac:	mov	x2, x21
   1d3b0:	adds	x8, x22, x19
   1d3b4:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d3b8:	sub	x8, x8, x9
   1d3bc:	cmp	x8, x21
   1d3c0:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d3c4:	sub	x8, x8, x9
   1d3c8:	adds	x8, x8, x23
   1d3cc:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d3d0:	sub	x8, x8, x9
   1d3d4:	cmp	x8, x21
   1d3d8:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d3dc:	sub	x8, x8, x9
   1d3e0:	mov	x0, x22
   1d3e4:	mov	x1, x24
   1d3e8:	stur	x8, [x29, #-32]
   1d3ec:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d3f0:	adds	x8, x0, x19
   1d3f4:	ldur	x25, [x29, #-8]
   1d3f8:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d3fc:	sub	x8, x8, x9
   1d400:	cmp	x8, x21
   1d404:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d408:	mov	x0, x23
   1d40c:	mov	x1, x25
   1d410:	mov	x2, x21
   1d414:	sub	x26, x8, x9
   1d418:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d41c:	adds	x8, x26, x0
   1d420:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d424:	sub	x8, x8, x9
   1d428:	cmp	x8, x21
   1d42c:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d430:	mov	x0, x22
   1d434:	mov	x1, x25
   1d438:	mov	x2, x21
   1d43c:	sub	x26, x8, x9
   1d440:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d444:	adds	x8, x0, x19
   1d448:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d44c:	sub	x8, x8, x9
   1d450:	cmp	x8, x21
   1d454:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d458:	mov	x0, x23
   1d45c:	mov	x1, x24
   1d460:	mov	x2, x21
   1d464:	sub	x19, x8, x9
   1d468:	bl	1d108 <PyInit__decimal@@Base+0x165a4>
   1d46c:	adds	x8, x19, x0
   1d470:	csel	x9, x21, xzr, cs  // cs = hs, nlast
   1d474:	sub	x8, x8, x9
   1d478:	cmp	x8, x21
   1d47c:	csel	x9, xzr, x21, cc  // cc = lo, ul, last
   1d480:	sub	x8, x8, x9
   1d484:	ldur	x9, [x29, #-32]
   1d488:	str	x8, [x27, x28]
   1d48c:	ldr	x8, [sp, #40]
   1d490:	str	x26, [x27, x20, lsl #3]
   1d494:	str	x9, [x27], #8
   1d498:	cmp	x27, x8
   1d49c:	b.cc	1d39c <PyInit__decimal@@Base+0x16838>  // b.lo, b.ul, b.last
   1d4a0:	mov	w23, #0x1                   	// #1
   1d4a4:	b	1d4ac <PyInit__decimal@@Base+0x16948>
   1d4a8:	mov	w23, wzr
   1d4ac:	mov	w0, w23
   1d4b0:	ldp	x20, x19, [sp, #160]
   1d4b4:	ldp	x22, x21, [sp, #144]
   1d4b8:	ldp	x24, x23, [sp, #128]
   1d4bc:	ldp	x26, x25, [sp, #112]
   1d4c0:	ldp	x28, x27, [sp, #96]
   1d4c4:	ldp	x29, x30, [sp, #80]
   1d4c8:	add	sp, sp, #0xb0
   1d4cc:	ret
   1d4d0:	sub	sp, sp, #0x60
   1d4d4:	stp	x29, x30, [sp, #16]
   1d4d8:	stp	x26, x25, [sp, #32]
   1d4dc:	stp	x24, x23, [sp, #48]
   1d4e0:	stp	x22, x21, [sp, #64]
   1d4e4:	stp	x20, x19, [sp, #80]
   1d4e8:	add	x29, sp, #0x10
   1d4ec:	mov	x23, x1
   1d4f0:	mov	w1, wzr
   1d4f4:	mov	x19, x3
   1d4f8:	mov	x21, x2
   1d4fc:	mov	x20, x0
   1d500:	bl	2054c <PyInit__decimal@@Base+0x199e8>
   1d504:	str	xzr, [x20, #24]
   1d508:	str	xzr, [x20, #8]
   1d50c:	ldrb	w8, [x23]
   1d510:	cmp	w8, #0x2d
   1d514:	b.eq	1d52c <PyInit__decimal@@Base+0x169c8>  // b.none
   1d518:	cmp	w8, #0x2b
   1d51c:	b.ne	1d540 <PyInit__decimal@@Base+0x169dc>  // b.any
   1d520:	mov	w1, wzr
   1d524:	add	x23, x23, #0x1
   1d528:	b	1d544 <PyInit__decimal@@Base+0x169e0>
   1d52c:	mov	x0, x20
   1d530:	bl	204b0 <PyInit__decimal@@Base+0x1994c>
   1d534:	add	x23, x23, #0x1
   1d538:	mov	w1, #0x1                   	// #1
   1d53c:	b	1d544 <PyInit__decimal@@Base+0x169e0>
   1d540:	mov	w1, wzr
   1d544:	adrp	x9, 36000 <PyInit__decimal@@Base+0x2f49c>
   1d548:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   1d54c:	mov	x8, xzr
   1d550:	add	x9, x9, #0xe40
   1d554:	add	x10, x10, #0xe7
   1d558:	ldrb	w11, [x23, x8]
   1d55c:	ldrb	w12, [x9, x8]
   1d560:	cmp	w11, w12
   1d564:	b.eq	1d574 <PyInit__decimal@@Base+0x16a10>  // b.none
   1d568:	ldrb	w12, [x10, x8]
   1d56c:	cmp	w11, w12
   1d570:	b.ne	1d598 <PyInit__decimal@@Base+0x16a34>  // b.any
   1d574:	add	x8, x8, #0x1
   1d578:	cmp	x8, #0x3
   1d57c:	b.ne	1d558 <PyInit__decimal@@Base+0x169f4>  // b.any
   1d580:	mov	w2, #0x4                   	// #4
   1d584:	mov	x0, x20
   1d588:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   1d58c:	ldrb	w8, [x23, #3]!
   1d590:	cbnz	w8, 1d5e8 <PyInit__decimal@@Base+0x16a84>
   1d594:	b	1d978 <PyInit__decimal@@Base+0x16e14>
   1d598:	adrp	x9, 36000 <PyInit__decimal@@Base+0x2f49c>
   1d59c:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   1d5a0:	mov	x8, xzr
   1d5a4:	add	x9, x9, #0xfc5
   1d5a8:	add	x10, x10, #0xe6
   1d5ac:	ldrb	w11, [x23, x8]
   1d5b0:	ldrb	w12, [x9, x8]
   1d5b4:	cmp	w11, w12
   1d5b8:	b.eq	1d5c8 <PyInit__decimal@@Base+0x16a64>  // b.none
   1d5bc:	ldrb	w12, [x10, x8]
   1d5c0:	cmp	w11, w12
   1d5c4:	b.ne	1d6fc <PyInit__decimal@@Base+0x16b98>  // b.any
   1d5c8:	add	x8, x8, #0x1
   1d5cc:	cmp	x8, #0x4
   1d5d0:	b.ne	1d5ac <PyInit__decimal@@Base+0x16a48>  // b.any
   1d5d4:	mov	w2, #0x8                   	// #8
   1d5d8:	mov	x0, x20
   1d5dc:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   1d5e0:	ldrb	w8, [x23, #4]!
   1d5e4:	cbz	w8, 1d978 <PyInit__decimal@@Base+0x16e14>
   1d5e8:	mov	x1, sp
   1d5ec:	mov	x0, x23
   1d5f0:	bl	1d9b4 <PyInit__decimal@@Base+0x16e50>
   1d5f4:	cbz	x0, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d5f8:	ldrb	w8, [x0]
   1d5fc:	mov	x22, x0
   1d600:	cbz	w8, 1d978 <PyInit__decimal@@Base+0x16e14>
   1d604:	ldr	x8, [sp]
   1d608:	ldr	x9, [x21]
   1d60c:	ldrsw	x10, [x21, #40]
   1d610:	sub	x8, x8, x22
   1d614:	sub	x9, x9, x10
   1d618:	cmp	x8, x9
   1d61c:	b.hi	1d968 <PyInit__decimal@@Base+0x16e04>  // b.pmore
   1d620:	mov	x25, xzr
   1d624:	mov	x9, #0x9436                	// #37942
   1d628:	movk	x9, #0x50d7, lsl #16
   1d62c:	movk	x9, #0x435e, lsl #32
   1d630:	movk	x9, #0xd79, lsl #48
   1d634:	smulh	x9, x8, x9
   1d638:	add	x9, x9, x9, lsr #63
   1d63c:	mov	x10, #0xffffffffffffffed    	// #-19
   1d640:	madd	x24, x9, x10, x8
   1d644:	cmp	x24, #0x0
   1d648:	cinc	x23, x9, ne  // ne = any
   1d64c:	cbz	x23, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d650:	mov	x0, x20
   1d654:	mov	x1, x23
   1d658:	mov	x2, x19
   1d65c:	bl	200ac <PyInit__decimal@@Base+0x19548>
   1d660:	cbz	w0, 1d86c <PyInit__decimal@@Base+0x16d08>
   1d664:	ldr	x8, [x20, #40]
   1d668:	cmp	w24, #0x1
   1d66c:	str	x23, [x20, #24]
   1d670:	b.lt	1d6a4 <PyInit__decimal@@Base+0x16b40>  // b.tstop
   1d674:	mov	x9, xzr
   1d678:	sub	x23, x23, #0x1
   1d67c:	mov	w10, #0xa                   	// #10
   1d680:	str	xzr, [x8, x23, lsl #3]
   1d684:	cmp	x22, x25
   1d688:	cinc	x22, x22, eq  // eq = none
   1d68c:	ldrb	w11, [x22], #1
   1d690:	subs	w24, w24, #0x1
   1d694:	madd	x9, x9, x10, x11
   1d698:	sub	x9, x9, #0x30
   1d69c:	str	x9, [x8, x23, lsl #3]
   1d6a0:	b.ne	1d684 <PyInit__decimal@@Base+0x16b20>  // b.any
   1d6a4:	cbz	x23, 1d6e0 <PyInit__decimal@@Base+0x16b7c>
   1d6a8:	mov	w9, #0xa                   	// #10
   1d6ac:	mov	x10, xzr
   1d6b0:	sub	x23, x23, #0x1
   1d6b4:	mov	w11, #0x13                  	// #19
   1d6b8:	str	xzr, [x8, x23, lsl #3]
   1d6bc:	cmp	x22, x25
   1d6c0:	cinc	x22, x22, eq  // eq = none
   1d6c4:	ldrb	w12, [x22], #1
   1d6c8:	subs	w11, w11, #0x1
   1d6cc:	madd	x10, x10, x9, x12
   1d6d0:	sub	x10, x10, #0x30
   1d6d4:	str	x10, [x8, x23, lsl #3]
   1d6d8:	b.ne	1d6bc <PyInit__decimal@@Base+0x16b58>  // b.any
   1d6dc:	cbnz	x23, 1d6ac <PyInit__decimal@@Base+0x16b48>
   1d6e0:	mov	x0, x20
   1d6e4:	bl	20308 <PyInit__decimal@@Base+0x197a4>
   1d6e8:	mov	x0, x20
   1d6ec:	mov	x1, x21
   1d6f0:	mov	x2, x19
   1d6f4:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   1d6f8:	b	1d978 <PyInit__decimal@@Base+0x16e14>
   1d6fc:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   1d700:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   1d704:	mov	x8, xzr
   1d708:	add	x9, x9, #0xeb
   1d70c:	add	x10, x10, #0xef
   1d710:	ldrb	w11, [x23, x8]
   1d714:	ldrb	w12, [x9, x8]
   1d718:	cmp	w11, w12
   1d71c:	b.eq	1d72c <PyInit__decimal@@Base+0x16bc8>  // b.none
   1d720:	ldrb	w12, [x10, x8]
   1d724:	cmp	w11, w12
   1d728:	b.ne	1d794 <PyInit__decimal@@Base+0x16c30>  // b.any
   1d72c:	add	x8, x8, #0x1
   1d730:	cmp	x8, #0x3
   1d734:	b.ne	1d710 <PyInit__decimal@@Base+0x16bac>  // b.any
   1d738:	ldrb	w10, [x23, #3]
   1d73c:	cbz	w10, 1d784 <PyInit__decimal@@Base+0x16c20>
   1d740:	adrp	x11, 38000 <PyInit__decimal@@Base+0x3149c>
   1d744:	adrp	x12, 38000 <PyInit__decimal@@Base+0x3149c>
   1d748:	mov	x8, xzr
   1d74c:	add	x9, x23, #0x4
   1d750:	add	x11, x11, #0xb82
   1d754:	add	x12, x12, #0xf3
   1d758:	ldrb	w13, [x11, x8]
   1d75c:	cmp	w13, w10, uxtb
   1d760:	b.eq	1d770 <PyInit__decimal@@Base+0x16c0c>  // b.none
   1d764:	ldrb	w13, [x12, x8]
   1d768:	cmp	w13, w10, uxtb
   1d76c:	b.ne	1d968 <PyInit__decimal@@Base+0x16e04>  // b.any
   1d770:	cmp	x8, #0x5
   1d774:	b.eq	1d784 <PyInit__decimal@@Base+0x16c20>  // b.none
   1d778:	ldrb	w10, [x9, x8]
   1d77c:	add	x8, x8, #0x1
   1d780:	b	1d758 <PyInit__decimal@@Base+0x16bf4>
   1d784:	mov	w2, #0x2                   	// #2
   1d788:	mov	x0, x20
   1d78c:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   1d790:	b	1d978 <PyInit__decimal@@Base+0x16e14>
   1d794:	mov	x25, xzr
   1d798:	mov	x26, xzr
   1d79c:	mov	x22, xzr
   1d7a0:	ldrb	w24, [x23]
   1d7a4:	cmp	w24, #0x44
   1d7a8:	b.le	1d7e4 <PyInit__decimal@@Base+0x16c80>
   1d7ac:	cmp	w24, #0x45
   1d7b0:	b.eq	1d7bc <PyInit__decimal@@Base+0x16c58>  // b.none
   1d7b4:	cmp	w24, #0x65
   1d7b8:	b.ne	1d80c <PyInit__decimal@@Base+0x16ca8>  // b.any
   1d7bc:	cbnz	x26, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d7c0:	mov	x8, x23
   1d7c4:	ldrb	w9, [x8, #1]!
   1d7c8:	cmp	w9, #0x2d
   1d7cc:	b.eq	1d7d8 <PyInit__decimal@@Base+0x16c74>  // b.none
   1d7d0:	cmp	w9, #0x2b
   1d7d4:	b.ne	1d800 <PyInit__decimal@@Base+0x16c9c>  // b.any
   1d7d8:	mov	x26, x23
   1d7dc:	mov	x23, x8
   1d7e0:	b	1d85c <PyInit__decimal@@Base+0x16cf8>
   1d7e4:	cmp	w24, #0x2e
   1d7e8:	b.ne	1d808 <PyInit__decimal@@Base+0x16ca4>  // b.any
   1d7ec:	orr	x8, x25, x26
   1d7f0:	cbnz	x8, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d7f4:	mov	x26, xzr
   1d7f8:	mov	x25, x23
   1d7fc:	b	1d85c <PyInit__decimal@@Base+0x16cf8>
   1d800:	mov	x26, x23
   1d804:	b	1d85c <PyInit__decimal@@Base+0x16cf8>
   1d808:	cbz	w24, 1d874 <PyInit__decimal@@Base+0x16d10>
   1d80c:	bl	6870 <__ctype_b_loc@plt>
   1d810:	ldr	x8, [x0]
   1d814:	ldrh	w9, [x8, x24, lsl #1]
   1d818:	tbz	w9, #11, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d81c:	cbnz	x22, 1d85c <PyInit__decimal@@Base+0x16cf8>
   1d820:	cbz	x26, 1d82c <PyInit__decimal@@Base+0x16cc8>
   1d824:	mov	x22, xzr
   1d828:	b	1d85c <PyInit__decimal@@Base+0x16cf8>
   1d82c:	cmp	w24, #0x30
   1d830:	b.ne	1d854 <PyInit__decimal@@Base+0x16cf0>  // b.any
   1d834:	ldrb	w9, [x23, #1]
   1d838:	ldrh	w10, [x8, x9, lsl #1]
   1d83c:	tbnz	w10, #11, 1d864 <PyInit__decimal@@Base+0x16d00>
   1d840:	cmp	w9, #0x2e
   1d844:	b.ne	1d854 <PyInit__decimal@@Base+0x16cf0>  // b.any
   1d848:	ldrb	w9, [x23, #2]
   1d84c:	ldrh	w8, [x8, x9, lsl #1]
   1d850:	tbnz	w8, #11, 1d864 <PyInit__decimal@@Base+0x16d00>
   1d854:	mov	x26, xzr
   1d858:	mov	x22, x23
   1d85c:	add	x23, x23, #0x1
   1d860:	b	1d7a0 <PyInit__decimal@@Base+0x16c3c>
   1d864:	mov	x26, xzr
   1d868:	b	1d824 <PyInit__decimal@@Base+0x16cc0>
   1d86c:	mov	w1, #0x200                 	// #512
   1d870:	b	1d96c <PyInit__decimal@@Base+0x16e08>
   1d874:	str	x23, [sp]
   1d878:	cbz	x22, 1d968 <PyInit__decimal@@Base+0x16e04>
   1d87c:	cbz	x26, 1d8cc <PyInit__decimal@@Base+0x16d68>
   1d880:	str	x26, [sp]
   1d884:	add	x24, x26, #0x1
   1d888:	bl	6a10 <__errno_location@plt>
   1d88c:	mov	x23, x0
   1d890:	str	wzr, [x0]
   1d894:	add	x1, sp, #0x8
   1d898:	mov	w2, #0xa                   	// #10
   1d89c:	mov	x0, x24
   1d8a0:	bl	6530 <strtoll@plt>
   1d8a4:	ldr	w8, [x23]
   1d8a8:	cbz	w8, 1d948 <PyInit__decimal@@Base+0x16de4>
   1d8ac:	cmp	w8, #0x22
   1d8b0:	str	x0, [x20, #8]
   1d8b4:	b.ne	1d968 <PyInit__decimal@@Base+0x16e04>  // b.any
   1d8b8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1d8bc:	add	x8, x0, x8
   1d8c0:	cmp	x8, #0x1
   1d8c4:	b.ls	1d8d0 <PyInit__decimal@@Base+0x16d6c>  // b.plast
   1d8c8:	b	1d968 <PyInit__decimal@@Base+0x16e04>
   1d8cc:	mov	x26, x23
   1d8d0:	mov	x9, #0xffffffffa763ffff    	// #-1486618625
   1d8d4:	movk	x9, #0xb6b3, lsl #32
   1d8d8:	movk	x9, #0xde0, lsl #48
   1d8dc:	sub	x8, x26, x22
   1d8e0:	cbz	x25, 1d91c <PyInit__decimal@@Base+0x16db8>
   1d8e4:	mvn	x10, x25
   1d8e8:	add	x10, x26, x10
   1d8ec:	cmp	x10, x9
   1d8f0:	b.hi	1d968 <PyInit__decimal@@Base+0x16e04>  // b.pmore
   1d8f4:	ldr	x11, [x20, #8]
   1d8f8:	cmp	x25, x22
   1d8fc:	eor	x12, x10, #0x8000000000000000
   1d900:	cset	w13, hi  // hi = pmore
   1d904:	sub	x10, x11, x10
   1d908:	cmp	x11, x12
   1d90c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   1d910:	sub	x8, x8, x13
   1d914:	csel	x10, x11, x10, lt  // lt = tstop
   1d918:	str	x10, [x20, #8]
   1d91c:	cmp	x8, x9
   1d920:	b.hi	1d968 <PyInit__decimal@@Base+0x16e04>  // b.pmore
   1d924:	ldr	x9, [x20, #8]
   1d928:	mov	x10, #0x1                   	// #1
   1d92c:	movk	x10, #0x4ec8, lsl #16
   1d930:	movk	x10, #0x6d67, lsl #32
   1d934:	movk	x10, #0x1bc1, lsl #48
   1d938:	cmp	x9, x10
   1d93c:	b.le	1d994 <PyInit__decimal@@Base+0x16e30>
   1d940:	str	x10, [x20, #8]
   1d944:	b	1d624 <PyInit__decimal@@Base+0x16ac0>
   1d948:	ldrb	w8, [x24]
   1d94c:	cbz	w8, 1d95c <PyInit__decimal@@Base+0x16df8>
   1d950:	ldr	x8, [sp, #8]
   1d954:	ldrb	w8, [x8]
   1d958:	cbz	w8, 1d9ac <PyInit__decimal@@Base+0x16e48>
   1d95c:	mov	w8, #0x16                  	// #22
   1d960:	str	w8, [x23]
   1d964:	str	x0, [x20, #8]
   1d968:	mov	w1, #0x2                   	// #2
   1d96c:	mov	x0, x20
   1d970:	mov	x2, x19
   1d974:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   1d978:	ldp	x20, x19, [sp, #80]
   1d97c:	ldp	x22, x21, [sp, #64]
   1d980:	ldp	x24, x23, [sp, #48]
   1d984:	ldp	x26, x25, [sp, #32]
   1d988:	ldp	x29, x30, [sp, #16]
   1d98c:	add	sp, sp, #0x60
   1d990:	ret
   1d994:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   1d998:	cmp	x9, x10
   1d99c:	b.ne	1d624 <PyInit__decimal@@Base+0x16ac0>  // b.any
   1d9a0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1d9a4:	str	x9, [x20, #8]
   1d9a8:	b	1d624 <PyInit__decimal@@Base+0x16ac0>
   1d9ac:	str	x0, [x20, #8]
   1d9b0:	b	1d8d0 <PyInit__decimal@@Base+0x16d6c>
   1d9b4:	stp	x29, x30, [sp, #-48]!
   1d9b8:	str	x21, [sp, #16]
   1d9bc:	stp	x20, x19, [sp, #32]
   1d9c0:	mov	x29, sp
   1d9c4:	mov	x19, x1
   1d9c8:	sub	x20, x0, #0x1
   1d9cc:	ldrb	w21, [x20, #1]!
   1d9d0:	cmp	x21, #0x30
   1d9d4:	b.eq	1d9cc <PyInit__decimal@@Base+0x16e68>  // b.none
   1d9d8:	bl	6870 <__ctype_b_loc@plt>
   1d9dc:	ldr	x8, [x0]
   1d9e0:	ldrh	w9, [x8, x21, lsl #1]
   1d9e4:	tbnz	w9, #11, 1d9f0 <PyInit__decimal@@Base+0x16e8c>
   1d9e8:	mov	x9, x20
   1d9ec:	b	1da00 <PyInit__decimal@@Base+0x16e9c>
   1d9f0:	mov	x9, x20
   1d9f4:	ldrb	w10, [x9, #1]!
   1d9f8:	ldrh	w10, [x8, x10, lsl #1]
   1d9fc:	tbnz	w10, #11, 1d9f4 <PyInit__decimal@@Base+0x16e90>
   1da00:	str	x9, [x19]
   1da04:	ldrb	w8, [x9]
   1da08:	ldr	x21, [sp, #16]
   1da0c:	cmp	w8, #0x0
   1da10:	csel	x0, x20, xzr, eq  // eq = none
   1da14:	ldp	x20, x19, [sp, #32]
   1da18:	ldp	x29, x30, [sp], #48
   1da1c:	ret
   1da20:	sub	sp, sp, #0x20
   1da24:	stp	x29, x30, [sp, #16]
   1da28:	add	x29, sp, #0x10
   1da2c:	cmp	w1, #0x0
   1da30:	mov	x8, x0
   1da34:	cset	w9, ne  // ne = any
   1da38:	orr	w2, w9, #0x2
   1da3c:	add	x0, sp, #0x8
   1da40:	mov	w3, #0x1                   	// #1
   1da44:	mov	x1, x8
   1da48:	bl	1da5c <PyInit__decimal@@Base+0x16ef8>
   1da4c:	ldr	x0, [sp, #8]
   1da50:	ldp	x29, x30, [sp, #16]
   1da54:	add	sp, sp, #0x20
   1da58:	ret
   1da5c:	stp	x29, x30, [sp, #-96]!
   1da60:	str	x27, [sp, #16]
   1da64:	stp	x26, x25, [sp, #32]
   1da68:	stp	x24, x23, [sp, #48]
   1da6c:	stp	x22, x21, [sp, #64]
   1da70:	stp	x20, x19, [sp, #80]
   1da74:	mov	x29, sp
   1da78:	mov	x19, x0
   1da7c:	mov	x0, x1
   1da80:	mov	x22, x3
   1da84:	mov	w20, w2
   1da88:	mov	x21, x1
   1da8c:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   1da90:	cbz	w0, 1dae0 <PyInit__decimal@@Base+0x16f7c>
   1da94:	mov	x0, x21
   1da98:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   1da9c:	cbz	w0, 1dab8 <PyInit__decimal@@Base+0x16f54>
   1daa0:	ldr	x8, [x21, #24]
   1daa4:	cmp	x8, #0x1
   1daa8:	b.lt	1dab8 <PyInit__decimal@@Base+0x16f54>  // b.tstop
   1daac:	ldr	x8, [x21, #16]
   1dab0:	add	x0, x8, #0xb
   1dab4:	b	1dabc <PyInit__decimal@@Base+0x16f58>
   1dab8:	mov	w0, #0xb                   	// #11
   1dabc:	mov	w1, #0x1                   	// #1
   1dac0:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   1dac4:	cbz	x0, 1dba8 <PyInit__decimal@@Base+0x17044>
   1dac8:	mov	x22, x0
   1dacc:	mov	x0, x21
   1dad0:	bl	1fe88 <PyInit__decimal@@Base+0x19324>
   1dad4:	cbz	w0, 1db50 <PyInit__decimal@@Base+0x16fec>
   1dad8:	mov	w8, #0x2d                  	// #45
   1dadc:	b	1dbcc <PyInit__decimal@@Base+0x17068>
   1dae0:	ldp	x8, x9, [x21, #8]
   1dae4:	add	x26, x8, x9
   1dae8:	tbz	w20, #3, 1daf4 <PyInit__decimal@@Base+0x16f90>
   1daec:	mov	x27, x22
   1daf0:	b	1db68 <PyInit__decimal@@Base+0x17004>
   1daf4:	tbnz	w20, #4, 1db64 <PyInit__decimal@@Base+0x17000>
   1daf8:	cmp	x8, #0x0
   1dafc:	b.gt	1db0c <PyInit__decimal@@Base+0x16fa8>
   1db00:	cmn	x26, #0x6
   1db04:	mov	x27, x26
   1db08:	b.gt	1db68 <PyInit__decimal@@Base+0x17004>
   1db0c:	tbz	w20, #2, 1daec <PyInit__decimal@@Base+0x16f88>
   1db10:	mov	x0, x21
   1db14:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   1db18:	cbz	w0, 1dee0 <PyInit__decimal@@Base+0x1737c>
   1db1c:	ldr	x8, [x21, #8]
   1db20:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1db24:	movk	x9, #0x5556
   1db28:	add	x8, x8, #0x2
   1db2c:	smulh	x9, x8, x9
   1db30:	add	x9, x9, x9, lsr #63
   1db34:	add	x9, x9, x9, lsl #1
   1db38:	sub	x8, x8, x9
   1db3c:	add	x9, x8, #0x3
   1db40:	cmp	x8, #0x0
   1db44:	csel	x8, x9, x8, lt  // lt = tstop
   1db48:	sub	x27, x8, #0x1
   1db4c:	b	1db68 <PyInit__decimal@@Base+0x17004>
   1db50:	tbnz	w20, #6, 1dbc8 <PyInit__decimal@@Base+0x17064>
   1db54:	mov	x23, x22
   1db58:	tbz	w20, #7, 1dbd4 <PyInit__decimal@@Base+0x17070>
   1db5c:	mov	w8, #0x2b                  	// #43
   1db60:	b	1dbcc <PyInit__decimal@@Base+0x17068>
   1db64:	mov	x27, x26
   1db68:	ldr	x8, [x21, #16]
   1db6c:	mov	w1, #0x1                   	// #1
   1db70:	subs	x9, x8, x27
   1db74:	add	x9, x9, #0x2
   1db78:	csel	x8, x8, x27, gt
   1db7c:	cmp	x27, #0x1
   1db80:	csel	x8, x9, x8, lt  // lt = tstop
   1db84:	add	x0, x8, #0x1a
   1db88:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   1db8c:	cbz	x0, 1dba8 <PyInit__decimal@@Base+0x17044>
   1db90:	mov	x22, x0
   1db94:	mov	x0, x21
   1db98:	bl	1fe88 <PyInit__decimal@@Base+0x19324>
   1db9c:	cbz	w0, 1dbb4 <PyInit__decimal@@Base+0x17050>
   1dba0:	mov	w8, #0x2d                  	// #45
   1dba4:	b	1dcac <PyInit__decimal@@Base+0x17148>
   1dba8:	str	xzr, [x19]
   1dbac:	mov	x0, #0xffffffffffffffff    	// #-1
   1dbb0:	b	1dec4 <PyInit__decimal@@Base+0x17360>
   1dbb4:	tbnz	w20, #6, 1dca8 <PyInit__decimal@@Base+0x17144>
   1dbb8:	mov	x23, x22
   1dbbc:	tbz	w20, #7, 1dcb4 <PyInit__decimal@@Base+0x17150>
   1dbc0:	mov	w8, #0x2b                  	// #43
   1dbc4:	b	1dcac <PyInit__decimal@@Base+0x17148>
   1dbc8:	mov	w8, #0x20                  	// #32
   1dbcc:	mov	x23, x22
   1dbd0:	strb	w8, [x23], #1
   1dbd4:	mov	x0, x21
   1dbd8:	bl	1fe7c <PyInit__decimal@@Base+0x19318>
   1dbdc:	cbz	w0, 1dc00 <PyInit__decimal@@Base+0x1709c>
   1dbe0:	mov	x0, x21
   1dbe4:	bl	1fea4 <PyInit__decimal@@Base+0x19340>
   1dbe8:	cbz	w0, 1dc24 <PyInit__decimal@@Base+0x170c0>
   1dbec:	mov	w8, #0x614e                	// #24910
   1dbf0:	movk	w8, #0x4e, lsl #16
   1dbf4:	str	w8, [x23]
   1dbf8:	mov	w8, #0x3                   	// #3
   1dbfc:	b	1dc38 <PyInit__decimal@@Base+0x170d4>
   1dc00:	mov	x0, x21
   1dc04:	bl	1fe70 <PyInit__decimal@@Base+0x1930c>
   1dc08:	cbz	w0, 1df10 <PyInit__decimal@@Base+0x173ac>
   1dc0c:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   1dc10:	add	x8, x8, #0xb7f
   1dc14:	ldr	x8, [x8]
   1dc18:	str	x8, [x23]
   1dc1c:	strb	wzr, [x23, #8]!
   1dc20:	b	1deac <PyInit__decimal@@Base+0x17348>
   1dc24:	mov	w8, #0x4e73                	// #20083
   1dc28:	movk	w8, #0x4e61, lsl #16
   1dc2c:	str	w8, [x23]
   1dc30:	mov	w8, #0x4                   	// #4
   1dc34:	strb	wzr, [x23, #4]
   1dc38:	ldr	x9, [x21, #24]
   1dc3c:	add	x23, x23, x8
   1dc40:	cmp	x9, #0x1
   1dc44:	b.lt	1deac <PyInit__decimal@@Base+0x17348>  // b.tstop
   1dc48:	mov	x0, x21
   1dc4c:	bl	1fba0 <PyInit__decimal@@Base+0x1903c>
   1dc50:	mov	x24, x0
   1dc54:	bl	1fa48 <PyInit__decimal@@Base+0x18ee4>
   1dc58:	mov	w2, w0
   1dc5c:	mov	x0, x23
   1dc60:	mov	x1, x24
   1dc64:	mov	x3, xzr
   1dc68:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dc6c:	ldr	x8, [x21, #24]
   1dc70:	mov	x23, x0
   1dc74:	subs	x24, x8, #0x2
   1dc78:	b.mi	1deac <PyInit__decimal@@Base+0x17348>  // b.first
   1dc7c:	ldr	x8, [x21, #40]
   1dc80:	mov	w2, #0x13                  	// #19
   1dc84:	mov	x0, x23
   1dc88:	mov	x3, xzr
   1dc8c:	ldr	x1, [x8, x24, lsl #3]
   1dc90:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dc94:	mov	x23, x0
   1dc98:	cmp	x24, #0x0
   1dc9c:	sub	x24, x24, #0x1
   1dca0:	b.gt	1dc7c <PyInit__decimal@@Base+0x17118>
   1dca4:	b	1deac <PyInit__decimal@@Base+0x17348>
   1dca8:	mov	w8, #0x20                  	// #32
   1dcac:	mov	x23, x22
   1dcb0:	strb	w8, [x23], #1
   1dcb4:	cmp	x27, #0x0
   1dcb8:	b.le	1dd2c <PyInit__decimal@@Base+0x171c8>
   1dcbc:	ldr	x8, [x21, #16]
   1dcc0:	cmp	x27, x8
   1dcc4:	b.ge	1ddbc <PyInit__decimal@@Base+0x17258>  // b.tcont
   1dcc8:	mov	x0, x21
   1dccc:	add	x24, x23, x27
   1dcd0:	bl	1fba0 <PyInit__decimal@@Base+0x1903c>
   1dcd4:	mov	x25, x0
   1dcd8:	bl	1fa48 <PyInit__decimal@@Base+0x18ee4>
   1dcdc:	mov	w2, w0
   1dce0:	mov	x0, x23
   1dce4:	mov	x1, x25
   1dce8:	mov	x3, x24
   1dcec:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dcf0:	ldr	x8, [x21, #24]
   1dcf4:	mov	x23, x0
   1dcf8:	subs	x25, x8, #0x2
   1dcfc:	b.mi	1de4c <PyInit__decimal@@Base+0x172e8>  // b.first
   1dd00:	ldr	x8, [x21, #40]
   1dd04:	mov	w2, #0x13                  	// #19
   1dd08:	mov	x0, x23
   1dd0c:	mov	x3, x24
   1dd10:	ldr	x1, [x8, x25, lsl #3]
   1dd14:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dd18:	mov	x23, x0
   1dd1c:	cmp	x25, #0x0
   1dd20:	sub	x25, x25, #0x1
   1dd24:	b.gt	1dd00 <PyInit__decimal@@Base+0x1719c>
   1dd28:	b	1de4c <PyInit__decimal@@Base+0x172e8>
   1dd2c:	neg	x2, x27
   1dd30:	mov	w8, #0x2e30                	// #11824
   1dd34:	cmp	x2, #0x1
   1dd38:	strh	w8, [x23], #2
   1dd3c:	b.lt	1dd5c <PyInit__decimal@@Base+0x171f8>  // b.tstop
   1dd40:	mov	w1, #0x30                  	// #48
   1dd44:	mov	x0, x23
   1dd48:	bl	6660 <memset@plt>
   1dd4c:	mov	x8, x27
   1dd50:	adds	x8, x8, #0x1
   1dd54:	add	x23, x23, #0x1
   1dd58:	b.cc	1dd50 <PyInit__decimal@@Base+0x171ec>  // b.lo, b.ul, b.last
   1dd5c:	mov	x0, x21
   1dd60:	bl	1fba0 <PyInit__decimal@@Base+0x1903c>
   1dd64:	mov	x24, x0
   1dd68:	bl	1fa48 <PyInit__decimal@@Base+0x18ee4>
   1dd6c:	mov	w2, w0
   1dd70:	mov	x0, x23
   1dd74:	mov	x1, x24
   1dd78:	mov	x3, xzr
   1dd7c:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dd80:	ldr	x8, [x21, #24]
   1dd84:	mov	x23, x0
   1dd88:	subs	x24, x8, #0x2
   1dd8c:	b.mi	1de4c <PyInit__decimal@@Base+0x172e8>  // b.first
   1dd90:	ldr	x8, [x21, #40]
   1dd94:	mov	w2, #0x13                  	// #19
   1dd98:	mov	x0, x23
   1dd9c:	mov	x3, xzr
   1dda0:	ldr	x1, [x8, x24, lsl #3]
   1dda4:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dda8:	mov	x23, x0
   1ddac:	cmp	x24, #0x0
   1ddb0:	sub	x24, x24, #0x1
   1ddb4:	b.gt	1dd90 <PyInit__decimal@@Base+0x1722c>
   1ddb8:	b	1de4c <PyInit__decimal@@Base+0x172e8>
   1ddbc:	mov	x0, x21
   1ddc0:	bl	1fba0 <PyInit__decimal@@Base+0x1903c>
   1ddc4:	mov	x24, x0
   1ddc8:	bl	1fa48 <PyInit__decimal@@Base+0x18ee4>
   1ddcc:	mov	w2, w0
   1ddd0:	mov	x0, x23
   1ddd4:	mov	x1, x24
   1ddd8:	mov	x3, xzr
   1dddc:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dde0:	ldr	x8, [x21, #24]
   1dde4:	mov	x23, x0
   1dde8:	subs	x24, x8, #0x2
   1ddec:	b.mi	1de18 <PyInit__decimal@@Base+0x172b4>  // b.first
   1ddf0:	ldr	x8, [x21, #40]
   1ddf4:	mov	w2, #0x13                  	// #19
   1ddf8:	mov	x0, x23
   1ddfc:	mov	x3, xzr
   1de00:	ldr	x1, [x8, x24, lsl #3]
   1de04:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1de08:	mov	x23, x0
   1de0c:	cmp	x24, #0x0
   1de10:	sub	x24, x24, #0x1
   1de14:	b.gt	1ddf0 <PyInit__decimal@@Base+0x1728c>
   1de18:	ldr	x8, [x21, #16]
   1de1c:	sub	x8, x27, x8
   1de20:	cmp	x8, #0x1
   1de24:	b.lt	1de4c <PyInit__decimal@@Base+0x172e8>  // b.tstop
   1de28:	mov	x8, xzr
   1de2c:	mov	w9, #0x30                  	// #48
   1de30:	strb	w9, [x23, x8]
   1de34:	ldr	x10, [x21, #16]
   1de38:	add	x8, x8, #0x1
   1de3c:	sub	x10, x27, x10
   1de40:	cmp	x8, x10
   1de44:	b.lt	1de30 <PyInit__decimal@@Base+0x172cc>  // b.tstop
   1de48:	add	x23, x23, x8
   1de4c:	tbnz	w20, #3, 1de58 <PyInit__decimal@@Base+0x172f4>
   1de50:	cmp	x26, x27
   1de54:	b.eq	1deac <PyInit__decimal@@Base+0x17348>  // b.none
   1de58:	tst	w20, #0x1
   1de5c:	mov	w8, #0x45                  	// #69
   1de60:	mov	w9, #0x65                  	// #101
   1de64:	sub	x10, x26, x27
   1de68:	csel	w8, w9, w8, eq  // eq = none
   1de6c:	cmp	x10, #0x0
   1de70:	mov	w11, #0x2b                  	// #43
   1de74:	mov	w12, #0x2d                  	// #45
   1de78:	cneg	x21, x10, mi  // mi = first
   1de7c:	strb	w8, [x23]
   1de80:	csel	w8, w12, w11, lt  // lt = tstop
   1de84:	mov	x0, x21
   1de88:	add	x24, x23, #0x2
   1de8c:	strb	w8, [x23, #1]
   1de90:	bl	1fa48 <PyInit__decimal@@Base+0x18ee4>
   1de94:	mov	w2, w0
   1de98:	mov	x0, x24
   1de9c:	mov	x1, x21
   1dea0:	mov	x3, xzr
   1dea4:	bl	1ee70 <PyInit__decimal@@Base+0x1830c>
   1dea8:	mov	x23, x0
   1deac:	tbz	w20, #5, 1deb8 <PyInit__decimal@@Base+0x17354>
   1deb0:	mov	w8, #0x25                  	// #37
   1deb4:	strb	w8, [x23], #1
   1deb8:	sub	x0, x23, x22
   1debc:	strb	wzr, [x23]
   1dec0:	str	x22, [x19]
   1dec4:	ldp	x20, x19, [sp, #80]
   1dec8:	ldp	x22, x21, [sp, #64]
   1decc:	ldp	x24, x23, [sp, #48]
   1ded0:	ldp	x26, x25, [sp, #32]
   1ded4:	ldr	x27, [sp, #16]
   1ded8:	ldp	x29, x30, [sp], #96
   1dedc:	ret
   1dee0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1dee4:	sub	x8, x26, #0x1
   1dee8:	movk	x9, #0x5556
   1deec:	smulh	x9, x8, x9
   1def0:	add	x9, x9, x9, lsr #63
   1def4:	add	x9, x9, x9, lsl #1
   1def8:	sub	x8, x8, x9
   1defc:	add	x9, x8, #0x3
   1df00:	cmp	x8, #0x0
   1df04:	csel	x8, x9, x8, lt  // lt = tstop
   1df08:	add	x27, x8, x22
   1df0c:	b	1db68 <PyInit__decimal@@Base+0x17004>
   1df10:	bl	67b0 <abort@plt>
   1df14:	sub	sp, sp, #0x20
   1df18:	stp	x29, x30, [sp, #16]
   1df1c:	add	x29, sp, #0x10
   1df20:	cmp	w1, #0x0
   1df24:	mov	x8, x0
   1df28:	cset	w9, ne  // ne = any
   1df2c:	orr	w2, w9, #0x4
   1df30:	add	x0, sp, #0x8
   1df34:	mov	w3, #0x1                   	// #1
   1df38:	mov	x1, x8
   1df3c:	bl	1da5c <PyInit__decimal@@Base+0x16ef8>
   1df40:	ldr	x0, [sp, #8]
   1df44:	ldp	x29, x30, [sp, #16]
   1df48:	add	sp, sp, #0x20
   1df4c:	ret
   1df50:	cmp	w2, #0x0
   1df54:	cset	w8, ne  // ne = any
   1df58:	orr	w2, w8, #0x2
   1df5c:	mov	w3, #0x1                   	// #1
   1df60:	b	1da5c <PyInit__decimal@@Base+0x16ef8>
   1df64:	cmp	w2, #0x0
   1df68:	cset	w8, ne  // ne = any
   1df6c:	orr	w2, w8, #0x4
   1df70:	mov	w3, #0x1                   	// #1
   1df74:	b	1da5c <PyInit__decimal@@Base+0x16ef8>
   1df78:	stp	x29, x30, [sp, #-32]!
   1df7c:	str	x19, [sp, #16]
   1df80:	mov	x29, sp
   1df84:	mov	x19, x0
   1df88:	ldr	x0, [x0, #24]
   1df8c:	bl	64c0 <strlen@plt>
   1df90:	sub	x8, x0, #0x1
   1df94:	cmp	x8, #0x3
   1df98:	b.ls	1dfa4 <PyInit__decimal@@Base+0x17440>  // b.plast
   1df9c:	mov	w0, #0xffffffff            	// #-1
   1dfa0:	b	1dfb4 <PyInit__decimal@@Base+0x17450>
   1dfa4:	ldr	x0, [x19, #32]
   1dfa8:	bl	64c0 <strlen@plt>
   1dfac:	cmp	x0, #0x4
   1dfb0:	csetm	w0, hi  // hi = pmore
   1dfb4:	ldr	x19, [sp, #16]
   1dfb8:	ldp	x29, x30, [sp], #32
   1dfbc:	ret
   1dfc0:	sub	sp, sp, #0x40
   1dfc4:	stp	x29, x30, [sp, #16]
   1dfc8:	stp	x22, x21, [sp, #32]
   1dfcc:	stp	x20, x19, [sp, #48]
   1dfd0:	add	x29, sp, #0x10
   1dfd4:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   1dfd8:	cmp	w2, #0x0
   1dfdc:	mov	w9, #0x47                  	// #71
   1dfe0:	ldr	q0, [x8, #176]
   1dfe4:	mov	w8, #0x67                  	// #103
   1dfe8:	csel	w8, w8, w9, eq  // eq = none
   1dfec:	mov	w9, #0x2d3e                	// #11582
   1dff0:	str	x1, [sp, #8]
   1dff4:	sturh	w9, [x0, #17]
   1dff8:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   1dffc:	add	x9, x9, #0xff
   1e000:	stp	x9, x9, [x0, #24]
   1e004:	strb	w8, [x0, #16]
   1e008:	str	q0, [x0]
   1e00c:	str	x9, [x0, #40]
   1e010:	ldrb	w10, [x1]
   1e014:	mov	x20, x1
   1e018:	mov	x19, x0
   1e01c:	add	x8, x0, #0x13
   1e020:	cbz	w10, 1e03c <PyInit__decimal@@Base+0x174d8>
   1e024:	sxtb	w9, w10
   1e028:	tbnz	w9, #31, 1e228 <PyInit__decimal@@Base+0x176c4>
   1e02c:	strb	w10, [x19, #19]
   1e030:	add	x8, x19, #0x14
   1e034:	mov	w9, #0x1                   	// #1
   1e038:	b	1e040 <PyInit__decimal@@Base+0x174dc>
   1e03c:	mov	w9, wzr
   1e040:	strb	wzr, [x8]
   1e044:	ldrb	w8, [x20]
   1e048:	cbz	w8, 1e080 <PyInit__decimal@@Base+0x1751c>
   1e04c:	add	x8, x20, x9
   1e050:	ldrb	w22, [x8]
   1e054:	sub	w9, w22, #0x3c
   1e058:	cmp	w9, #0x22
   1e05c:	b.hi	1e080 <PyInit__decimal@@Base+0x1751c>  // b.pmore
   1e060:	mov	w10, #0x1                   	// #1
   1e064:	lsl	x9, x10, x9
   1e068:	mov	x10, #0x7                   	// #7
   1e06c:	movk	x10, #0x4, lsl #32
   1e070:	tst	x9, x10
   1e074:	b.eq	1e080 <PyInit__decimal@@Base+0x1751c>  // b.none
   1e078:	mov	x20, x8
   1e07c:	b	1e0b4 <PyInit__decimal@@Base+0x17550>
   1e080:	mov	w8, #0x20                  	// #32
   1e084:	sturh	w8, [x19, #19]
   1e088:	ldrb	w22, [x20]
   1e08c:	mov	w8, wzr
   1e090:	sub	w9, w22, #0x3c
   1e094:	cmp	w9, #0x22
   1e098:	b.hi	1e0cc <PyInit__decimal@@Base+0x17568>  // b.pmore
   1e09c:	mov	w10, #0x1                   	// #1
   1e0a0:	lsl	x9, x10, x9
   1e0a4:	mov	x10, #0x7                   	// #7
   1e0a8:	movk	x10, #0x4, lsl #32
   1e0ac:	tst	x9, x10
   1e0b0:	b.eq	1e0cc <PyInit__decimal@@Base+0x17568>  // b.none
   1e0b4:	add	x9, x20, #0x1
   1e0b8:	str	x9, [sp, #8]
   1e0bc:	strb	w22, [x19, #17]
   1e0c0:	ldrb	w22, [x20, #1]
   1e0c4:	mov	w8, #0x1                   	// #1
   1e0c8:	mov	x20, x9
   1e0cc:	cmp	w22, #0x2d
   1e0d0:	b.hi	1e0fc <PyInit__decimal@@Base+0x17598>  // b.pmore
   1e0d4:	mov	w9, #0x1                   	// #1
   1e0d8:	lsl	x9, x9, x22
   1e0dc:	mov	x10, #0x280100000000        	// #43984760078336
   1e0e0:	tst	x9, x10
   1e0e4:	b.eq	1e0fc <PyInit__decimal@@Base+0x17598>  // b.none
   1e0e8:	add	x9, x20, #0x1
   1e0ec:	str	x9, [sp, #8]
   1e0f0:	strb	w22, [x19, #18]
   1e0f4:	ldrb	w22, [x20, #1]
   1e0f8:	mov	x20, x9
   1e0fc:	cmp	w22, #0x30
   1e100:	b.ne	1e12c <PyInit__decimal@@Base+0x175c8>  // b.any
   1e104:	cbnz	w8, 1e220 <PyInit__decimal@@Base+0x176bc>
   1e108:	mov	w8, #0x7a                  	// #122
   1e10c:	add	x9, x20, #0x1
   1e110:	strb	w8, [x19, #17]
   1e114:	str	x9, [sp, #8]
   1e118:	ldrb	w8, [x20]
   1e11c:	strb	wzr, [x19, #20]
   1e120:	strb	w8, [x19, #19]
   1e124:	ldrb	w22, [x20, #1]
   1e128:	mov	x20, x9
   1e12c:	bl	6870 <__ctype_b_loc@plt>
   1e130:	ldr	x8, [x0]
   1e134:	mov	x21, x0
   1e138:	ldrh	w8, [x8, w22, uxtw #1]
   1e13c:	tbnz	w8, #11, 1e218 <PyInit__decimal@@Base+0x176b4>
   1e140:	cmp	w22, #0x2c
   1e144:	b.ne	1e178 <PyInit__decimal@@Base+0x17614>  // b.any
   1e148:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   1e14c:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   1e150:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   1e154:	add	x8, x8, #0xf9
   1e158:	add	x9, x9, #0xfb
   1e15c:	add	x10, x10, #0xfd
   1e160:	add	x11, x20, #0x1
   1e164:	stp	x8, x9, [x19, #24]
   1e168:	str	x10, [x19, #40]
   1e16c:	str	x11, [sp, #8]
   1e170:	ldrb	w22, [x20, #1]
   1e174:	mov	x20, x11
   1e178:	cmp	w22, #0x2e
   1e17c:	b.ne	1e1d8 <PyInit__decimal@@Base+0x17674>  // b.any
   1e180:	add	x22, x20, #0x1
   1e184:	str	x22, [sp, #8]
   1e188:	ldr	x8, [x21]
   1e18c:	ldrb	w9, [x20, #1]
   1e190:	ldrh	w8, [x8, x9, lsl #1]
   1e194:	tbz	w8, #11, 1e220 <PyInit__decimal@@Base+0x176bc>
   1e198:	bl	6a10 <__errno_location@plt>
   1e19c:	mov	x20, x0
   1e1a0:	str	wzr, [x0]
   1e1a4:	add	x1, sp, #0x8
   1e1a8:	mov	w2, #0xa                   	// #10
   1e1ac:	mov	x0, x22
   1e1b0:	bl	6530 <strtoll@plt>
   1e1b4:	str	x0, [x19, #8]
   1e1b8:	ldr	w8, [x20]
   1e1bc:	mov	w0, wzr
   1e1c0:	cmp	w8, #0x16
   1e1c4:	b.eq	1e3ec <PyInit__decimal@@Base+0x17888>  // b.none
   1e1c8:	cmp	w8, #0x22
   1e1cc:	b.eq	1e3ec <PyInit__decimal@@Base+0x17888>  // b.none
   1e1d0:	ldr	x20, [sp, #8]
   1e1d4:	ldrb	w22, [x20]
   1e1d8:	sub	w8, w22, #0x45
   1e1dc:	cmp	w8, #0x29
   1e1e0:	b.hi	1e31c <PyInit__decimal@@Base+0x177b8>  // b.pmore
   1e1e4:	mov	w9, #0x1                   	// #1
   1e1e8:	lsl	x9, x9, x8
   1e1ec:	tst	x9, #0x700000007
   1e1f0:	b.eq	1e2b8 <PyInit__decimal@@Base+0x17754>  // b.none
   1e1f4:	add	x8, x20, #0x1
   1e1f8:	str	x8, [sp, #8]
   1e1fc:	ldrb	w9, [x20]
   1e200:	mov	x20, x8
   1e204:	strb	w9, [x19, #16]
   1e208:	ldrb	w8, [x20]
   1e20c:	cmp	w8, #0x0
   1e210:	cset	w0, eq  // eq = none
   1e214:	b	1e3ec <PyInit__decimal@@Base+0x17888>
   1e218:	cmp	w22, #0x30
   1e21c:	b.ne	1e240 <PyInit__decimal@@Base+0x176dc>  // b.any
   1e220:	mov	w0, wzr
   1e224:	b	1e3ec <PyInit__decimal@@Base+0x17888>
   1e228:	add	w9, w10, #0x3e
   1e22c:	and	w9, w9, #0xff
   1e230:	cmp	w9, #0x1e
   1e234:	b.cs	1e284 <PyInit__decimal@@Base+0x17720>  // b.hs, b.nlast
   1e238:	mov	w9, #0x2                   	// #2
   1e23c:	b	1e334 <PyInit__decimal@@Base+0x177d0>
   1e240:	bl	6a10 <__errno_location@plt>
   1e244:	mov	x22, x0
   1e248:	str	wzr, [x0]
   1e24c:	add	x1, sp, #0x8
   1e250:	mov	w2, #0xa                   	// #10
   1e254:	mov	x0, x20
   1e258:	bl	6530 <strtoll@plt>
   1e25c:	str	x0, [x19]
   1e260:	ldr	w8, [x22]
   1e264:	mov	w0, wzr
   1e268:	cmp	w8, #0x16
   1e26c:	b.eq	1e3ec <PyInit__decimal@@Base+0x17888>  // b.none
   1e270:	cmp	w8, #0x22
   1e274:	b.eq	1e3ec <PyInit__decimal@@Base+0x17888>  // b.none
   1e278:	ldr	x20, [sp, #8]
   1e27c:	ldrb	w22, [x20]
   1e280:	b	1e140 <PyInit__decimal@@Base+0x175dc>
   1e284:	cmp	w10, #0xe0
   1e288:	b.ne	1e29c <PyInit__decimal@@Base+0x17738>  // b.any
   1e28c:	mov	w9, #0x3                   	// #3
   1e290:	mov	w11, #0xbf                  	// #191
   1e294:	mov	w12, #0xa0                  	// #160
   1e298:	b	1e33c <PyInit__decimal@@Base+0x177d8>
   1e29c:	cmp	w10, #0xed
   1e2a0:	b.cc	1e330 <PyInit__decimal@@Base+0x177cc>  // b.lo, b.ul, b.last
   1e2a4:	cmp	w10, #0xed
   1e2a8:	b.ne	1e328 <PyInit__decimal@@Base+0x177c4>  // b.any
   1e2ac:	mov	w9, #0x3                   	// #3
   1e2b0:	mov	w11, #0x9f                  	// #159
   1e2b4:	b	1e338 <PyInit__decimal@@Base+0x177d4>
   1e2b8:	mov	w9, #0x1                   	// #1
   1e2bc:	lsl	x8, x9, x8
   1e2c0:	tst	x8, #0x20000000200
   1e2c4:	b.eq	1e31c <PyInit__decimal@@Base+0x177b8>  // b.none
   1e2c8:	ldr	x8, [x19, #32]
   1e2cc:	ldrb	w8, [x8]
   1e2d0:	cbnz	w8, 1e220 <PyInit__decimal@@Base+0x176bc>
   1e2d4:	add	x21, x20, #0x1
   1e2d8:	str	x21, [sp, #8]
   1e2dc:	ldrb	w8, [x20]
   1e2e0:	mov	w9, #0x67                  	// #103
   1e2e4:	cmp	w8, #0x4e
   1e2e8:	mov	w8, #0x47                  	// #71
   1e2ec:	csel	w8, w8, w9, eq  // eq = none
   1e2f0:	strb	w8, [x19, #16]
   1e2f4:	bl	6620 <localeconv@plt>
   1e2f8:	ldr	q0, [x0]
   1e2fc:	stur	q0, [x19, #24]
   1e300:	ldr	x8, [x0, #16]
   1e304:	mov	x0, x19
   1e308:	str	x8, [x19, #40]
   1e30c:	bl	1df78 <PyInit__decimal@@Base+0x17414>
   1e310:	mov	x20, x21
   1e314:	tbz	w0, #31, 1e208 <PyInit__decimal@@Base+0x176a4>
   1e318:	b	1e220 <PyInit__decimal@@Base+0x176bc>
   1e31c:	cmp	w22, #0x25
   1e320:	b.eq	1e1f4 <PyInit__decimal@@Base+0x17690>  // b.none
   1e324:	b	1e208 <PyInit__decimal@@Base+0x176a4>
   1e328:	cmp	w10, #0xf0
   1e32c:	b.cs	1e3a8 <PyInit__decimal@@Base+0x17844>  // b.hs, b.nlast
   1e330:	mov	w9, #0x3                   	// #3
   1e334:	mov	w11, #0xbf                  	// #191
   1e338:	mov	w12, #0x80                  	// #128
   1e33c:	strb	w10, [x8]
   1e340:	ldrb	w10, [x20, #1]
   1e344:	cmp	w12, w10
   1e348:	b.hi	1e3e4 <PyInit__decimal@@Base+0x17880>  // b.pmore
   1e34c:	cmp	w11, w10
   1e350:	b.cc	1e3e4 <PyInit__decimal@@Base+0x17880>  // b.lo, b.ul, b.last
   1e354:	cmp	w9, #0x3
   1e358:	strb	w10, [x19, #20]
   1e35c:	b.cc	1e398 <PyInit__decimal@@Base+0x17834>  // b.lo, b.ul, b.last
   1e360:	add	x10, x20, #0x2
   1e364:	add	x11, x19, #0x15
   1e368:	sub	x12, x9, #0x2
   1e36c:	ldrsb	w13, [x10]
   1e370:	tbz	w13, #31, 1e3e4 <PyInit__decimal@@Base+0x17880>
   1e374:	and	w13, w13, #0xff
   1e378:	cmp	w13, #0xbf
   1e37c:	b.hi	1e3e4 <PyInit__decimal@@Base+0x17880>  // b.pmore
   1e380:	add	x10, x10, #0x1
   1e384:	subs	x12, x12, #0x1
   1e388:	strb	w13, [x11], #1
   1e38c:	b.ne	1e36c <PyInit__decimal@@Base+0x17808>  // b.any
   1e390:	mov	x8, x9
   1e394:	b	1e39c <PyInit__decimal@@Base+0x17838>
   1e398:	mov	w8, #0x2                   	// #2
   1e39c:	add	x8, x19, x8
   1e3a0:	add	x8, x8, #0x13
   1e3a4:	b	1e040 <PyInit__decimal@@Base+0x174dc>
   1e3a8:	cmp	w10, #0xf0
   1e3ac:	b.ne	1e3c0 <PyInit__decimal@@Base+0x1785c>  // b.any
   1e3b0:	mov	w9, #0x4                   	// #4
   1e3b4:	mov	w11, #0xbf                  	// #191
   1e3b8:	mov	w12, #0x90                  	// #144
   1e3bc:	b	1e33c <PyInit__decimal@@Base+0x177d8>
   1e3c0:	cmp	w10, #0xf4
   1e3c4:	b.cs	1e3d0 <PyInit__decimal@@Base+0x1786c>  // b.hs, b.nlast
   1e3c8:	mov	w9, #0x4                   	// #4
   1e3cc:	b	1e334 <PyInit__decimal@@Base+0x177d0>
   1e3d0:	cmp	w10, #0xf4
   1e3d4:	b.ne	1e3e4 <PyInit__decimal@@Base+0x17880>  // b.any
   1e3d8:	mov	w9, #0x4                   	// #4
   1e3dc:	mov	w11, #0x8f                  	// #143
   1e3e0:	b	1e338 <PyInit__decimal@@Base+0x177d4>
   1e3e4:	mov	w0, wzr
   1e3e8:	strb	wzr, [x8]
   1e3ec:	ldp	x20, x19, [sp, #48]
   1e3f0:	ldp	x22, x21, [sp, #32]
   1e3f4:	ldp	x29, x30, [sp, #16]
   1e3f8:	add	sp, sp, #0x40
   1e3fc:	ret
   1e400:	stp	x29, x30, [sp, #-96]!
   1e404:	stp	x28, x27, [sp, #16]
   1e408:	stp	x26, x25, [sp, #32]
   1e40c:	stp	x24, x23, [sp, #48]
   1e410:	stp	x22, x21, [sp, #64]
   1e414:	stp	x20, x19, [sp, #80]
   1e418:	mov	x29, sp
   1e41c:	sub	sp, sp, #0x290
   1e420:	mov	w8, #0x30                  	// #48
   1e424:	mov	w9, #0x40                  	// #64
   1e428:	strb	w8, [sp, #80]
   1e42c:	add	x8, sp, #0x80
   1e430:	stp	xzr, xzr, [sp, #88]
   1e434:	stp	xzr, x9, [sp, #104]
   1e438:	str	x8, [sp, #120]
   1e43c:	ldr	x8, [x1]
   1e440:	mov	x26, #0xffffffffa763ffff    	// #-1486618625
   1e444:	movk	x26, #0xb6b3, lsl #32
   1e448:	movk	x26, #0xde0, lsl #48
   1e44c:	mov	x20, x3
   1e450:	cmp	x8, x26
   1e454:	b.le	1e46c <PyInit__decimal@@Base+0x17908>
   1e458:	ldr	w8, [x20]
   1e45c:	mov	x0, xzr
   1e460:	orr	w8, w8, #0x100
   1e464:	str	w8, [x20]
   1e468:	b	1ea94 <PyInit__decimal@@Base+0x17f30>
   1e46c:	ldrb	w25, [x1, #16]
   1e470:	mov	x24, x2
   1e474:	mov	x19, x1
   1e478:	mov	x22, x0
   1e47c:	bl	6870 <__ctype_b_loc@plt>
   1e480:	ldr	x8, [x0]
   1e484:	mov	x21, x0
   1e488:	ldrh	w8, [x8, x25, lsl #1]
   1e48c:	tbnz	w8, #8, 1e498 <PyInit__decimal@@Base+0x17934>
   1e490:	mov	w23, wzr
   1e494:	b	1e4a8 <PyInit__decimal@@Base+0x17944>
   1e498:	bl	65f0 <__ctype_tolower_loc@plt>
   1e49c:	ldr	x8, [x0]
   1e4a0:	mov	w23, #0x1                   	// #1
   1e4a4:	ldr	w25, [x8, x25, lsl #2]
   1e4a8:	ldrb	w8, [x19, #18]
   1e4ac:	cmp	w8, #0x2b
   1e4b0:	b.eq	1e4c4 <PyInit__decimal@@Base+0x17960>  // b.none
   1e4b4:	cmp	w8, #0x20
   1e4b8:	b.ne	1e4c8 <PyInit__decimal@@Base+0x17964>  // b.any
   1e4bc:	orr	w23, w23, #0x40
   1e4c0:	b	1e4c8 <PyInit__decimal@@Base+0x17964>
   1e4c4:	orr	w23, w23, #0x80
   1e4c8:	mov	x0, x22
   1e4cc:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   1e4d0:	cbz	w0, 1e5c0 <PyInit__decimal@@Base+0x17a5c>
   1e4d4:	ldrb	w8, [x19, #17]
   1e4d8:	cmp	w8, #0x7a
   1e4dc:	b.ne	1e504 <PyInit__decimal@@Base+0x179a0>  // b.any
   1e4e0:	ldp	q2, q0, [x19, #16]
   1e4e4:	ldr	q1, [x19]
   1e4e8:	mov	w8, #0x20                  	// #32
   1e4ec:	mov	w9, #0x3e                  	// #62
   1e4f0:	mov	x19, sp
   1e4f4:	stp	q2, q0, [sp, #16]
   1e4f8:	str	q1, [sp]
   1e4fc:	sturh	w8, [sp, #19]
   1e500:	strb	w9, [sp, #17]
   1e504:	and	w8, w25, #0xff
   1e508:	orr	w9, w23, #0x20
   1e50c:	cmp	w8, #0x25
   1e510:	csel	w23, w9, w23, eq  // eq = none
   1e514:	mov	w3, #0x1                   	// #1
   1e518:	add	x8, sp, #0x30
   1e51c:	add	x0, x8, #0x18
   1e520:	mov	x1, x22
   1e524:	mov	w2, w23
   1e528:	bl	1da5c <PyInit__decimal@@Base+0x16ef8>
   1e52c:	stp	x0, x0, [sp, #48]
   1e530:	tbnz	x0, #63, 1e604 <PyInit__decimal@@Base+0x17aa0>
   1e534:	ldr	x8, [x19, #24]
   1e538:	ldrb	w8, [x8]
   1e53c:	cbz	w8, 1e54c <PyInit__decimal@@Base+0x179e8>
   1e540:	mov	x0, x22
   1e544:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   1e548:	cbz	w0, 1e624 <PyInit__decimal@@Base+0x17ac0>
   1e54c:	ldr	x8, [x19]
   1e550:	cbz	x8, 1e9ac <PyInit__decimal@@Base+0x17e48>
   1e554:	ldr	x9, [sp, #56]
   1e558:	subs	x23, x8, x9
   1e55c:	b.le	1e9ac <PyInit__decimal@@Base+0x17e48>
   1e560:	ldrb	w25, [x19, #17]
   1e564:	add	x0, x19, #0x13
   1e568:	sturb	wzr, [x29, #-12]
   1e56c:	bl	64c0 <strlen@plt>
   1e570:	ldr	x8, [sp, #48]
   1e574:	mov	x21, x0
   1e578:	ldr	x0, [sp, #72]
   1e57c:	mul	x24, x21, x23
   1e580:	add	x8, x24, x8
   1e584:	add	x1, x8, #0x1
   1e588:	sub	x3, x29, #0xc
   1e58c:	mov	w2, #0x1                   	// #1
   1e590:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   1e594:	ldurb	w8, [x29, #-12]
   1e598:	mov	x22, x0
   1e59c:	str	x0, [sp, #72]
   1e5a0:	cbz	w8, 1e758 <PyInit__decimal@@Base+0x17bf4>
   1e5a4:	ldr	w8, [x20]
   1e5a8:	mov	x0, x22
   1e5ac:	orr	w8, w8, #0x200
   1e5b0:	str	w8, [x20]
   1e5b4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1e5b8:	ldr	x8, [x8, #1384]
   1e5bc:	b	1e64c <PyInit__decimal@@Base+0x17ae8>
   1e5c0:	and	w8, w25, #0xff
   1e5c4:	cmp	w8, #0x65
   1e5c8:	str	wzr, [sp]
   1e5cc:	b.gt	1e610 <PyInit__decimal@@Base+0x17aac>
   1e5d0:	cmp	w8, #0x25
   1e5d4:	b.ne	1e654 <PyInit__decimal@@Base+0x17af0>  // b.any
   1e5d8:	add	x0, sp, #0x50
   1e5dc:	mov	x1, x22
   1e5e0:	mov	x2, x20
   1e5e4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   1e5e8:	cbz	w0, 1ea90 <PyInit__decimal@@Base+0x17f2c>
   1e5ec:	ldr	x8, [sp, #88]
   1e5f0:	orr	w23, w23, #0x20
   1e5f4:	add	x22, sp, #0x50
   1e5f8:	add	x8, x8, #0x2
   1e5fc:	str	x8, [sp, #88]
   1e600:	b	1e618 <PyInit__decimal@@Base+0x17ab4>
   1e604:	ldr	w8, [x20]
   1e608:	orr	w8, w8, #0x200
   1e60c:	b	1ea84 <PyInit__decimal@@Base+0x17f20>
   1e610:	cmp	w8, #0x66
   1e614:	b.ne	1e664 <PyInit__decimal@@Base+0x17b00>  // b.any
   1e618:	orr	w23, w23, #0x10
   1e61c:	mov	w8, #0x66                  	// #102
   1e620:	b	1e670 <PyInit__decimal@@Base+0x17b0c>
   1e624:	ldr	x8, [sp, #56]
   1e628:	add	x9, x26, #0x24
   1e62c:	cmp	x8, x9
   1e630:	b.le	1e6ec <PyInit__decimal@@Base+0x17b88>
   1e634:	ldr	w8, [x20]
   1e638:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   1e63c:	orr	w8, w8, #0x100
   1e640:	str	w8, [x20]
   1e644:	ldr	x8, [x9, #1384]
   1e648:	ldr	x0, [sp, #72]
   1e64c:	blr	x8
   1e650:	b	1ea88 <PyInit__decimal@@Base+0x17f24>
   1e654:	cmp	w8, #0x65
   1e658:	b.ne	1eab4 <PyInit__decimal@@Base+0x17f50>  // b.any
   1e65c:	orr	w23, w23, #0x8
   1e660:	b	1e670 <PyInit__decimal@@Base+0x17b0c>
   1e664:	cmp	w8, #0x67
   1e668:	b.ne	1eab4 <PyInit__decimal@@Base+0x17f50>  // b.any
   1e66c:	orr	w23, w23, #0x2
   1e670:	ldr	x9, [x19, #8]
   1e674:	tbnz	x9, #63, 1e688 <PyInit__decimal@@Base+0x17b24>
   1e678:	cmp	x9, x26
   1e67c:	b.le	1e694 <PyInit__decimal@@Base+0x17b30>
   1e680:	mov	w8, #0x100                 	// #256
   1e684:	b	1ea7c <PyInit__decimal@@Base+0x17f18>
   1e688:	cmp	w8, #0x66
   1e68c:	b.eq	1e7cc <PyInit__decimal@@Base+0x17c68>  // b.none
   1e690:	b	1ea68 <PyInit__decimal@@Base+0x17f04>
   1e694:	and	w8, w8, #0x3
   1e698:	cmp	w8, #0x1
   1e69c:	b.eq	1e800 <PyInit__decimal@@Base+0x17c9c>  // b.none
   1e6a0:	cmp	w8, #0x2
   1e6a4:	b.eq	1e7b0 <PyInit__decimal@@Base+0x17c4c>  // b.none
   1e6a8:	cmp	w8, #0x3
   1e6ac:	b.ne	1ea68 <PyInit__decimal@@Base+0x17f04>  // b.any
   1e6b0:	ldr	x25, [x22, #16]
   1e6b4:	cmp	x9, #0x0
   1e6b8:	csinc	x27, x9, xzr, ne  // ne = any
   1e6bc:	cmp	x25, x27
   1e6c0:	b.le	1ea68 <PyInit__decimal@@Base+0x17f04>
   1e6c4:	ldr	x28, [x22, #8]
   1e6c8:	mov	x0, x22
   1e6cc:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   1e6d0:	cbnz	w0, 1e9e4 <PyInit__decimal@@Base+0x17e80>
   1e6d4:	mov	x0, x22
   1e6d8:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   1e6dc:	cbnz	w0, 1e9e4 <PyInit__decimal@@Base+0x17e80>
   1e6e0:	sub	x8, x28, x27
   1e6e4:	add	x25, x8, x25
   1e6e8:	b	1ea28 <PyInit__decimal@@Base+0x17ec4>
   1e6ec:	ldr	x22, [sp, #72]
   1e6f0:	mov	x23, xzr
   1e6f4:	ldrb	w8, [x22]
   1e6f8:	cmp	w8, #0x2d
   1e6fc:	b.hi	1ea00 <PyInit__decimal@@Base+0x17e9c>  // b.pmore
   1e700:	mov	w9, #0x1                   	// #1
   1e704:	lsl	x8, x9, x8
   1e708:	mov	x9, #0x280100000000        	// #43984760078336
   1e70c:	tst	x8, x9
   1e710:	mov	x24, x22
   1e714:	b.eq	1e720 <PyInit__decimal@@Base+0x17bbc>  // b.none
   1e718:	add	x24, x22, #0x1
   1e71c:	mov	x23, x22
   1e720:	ldr	x8, [x21]
   1e724:	add	x21, x24, #0x1
   1e728:	ldrb	w9, [x21], #1
   1e72c:	ldrh	w10, [x8, x9, lsl #1]
   1e730:	tbnz	w10, #11, 1e728 <PyInit__decimal@@Base+0x17bc4>
   1e734:	cmp	w9, #0x2e
   1e738:	sub	x8, x21, #0x1
   1e73c:	b.ne	1e81c <PyInit__decimal@@Base+0x17cb8>  // b.any
   1e740:	ldr	x9, [sp, #48]
   1e744:	ldr	x26, [x19, #24]
   1e748:	sub	x10, x22, x21
   1e74c:	add	x25, x9, x10
   1e750:	cbnz	x26, 1e848 <PyInit__decimal@@Base+0x17ce4>
   1e754:	b	1e82c <PyInit__decimal@@Base+0x17cc8>
   1e758:	cmp	w25, #0x7a
   1e75c:	mov	w8, #0x3d                  	// #61
   1e760:	csel	w8, w8, w25, eq  // eq = none
   1e764:	sub	w9, w8, #0x3d
   1e768:	cmp	w9, #0x2
   1e76c:	b.cs	1e8c4 <PyInit__decimal@@Base+0x17d60>  // b.hs, b.nlast
   1e770:	ldr	x20, [sp, #48]
   1e774:	cmp	w8, #0x3d
   1e778:	b.ne	1e8d8 <PyInit__decimal@@Base+0x17d74>  // b.any
   1e77c:	ldrb	w8, [x22]
   1e780:	mov	x25, xzr
   1e784:	cmp	w8, #0x2d
   1e788:	b.hi	1e8dc <PyInit__decimal@@Base+0x17d78>  // b.pmore
   1e78c:	mov	w9, #0x1                   	// #1
   1e790:	lsl	x8, x9, x8
   1e794:	mov	x9, #0x280100000000        	// #43984760078336
   1e798:	tst	x8, x9
   1e79c:	b.eq	1e8dc <PyInit__decimal@@Base+0x17d78>  // b.none
   1e7a0:	mov	x25, xzr
   1e7a4:	add	x22, x22, #0x1
   1e7a8:	sub	x20, x20, #0x1
   1e7ac:	b	1e8dc <PyInit__decimal@@Base+0x17d78>
   1e7b0:	neg	x2, x9
   1e7b4:	add	x0, sp, #0x50
   1e7b8:	mov	x4, sp
   1e7bc:	mov	x1, x22
   1e7c0:	mov	x3, x24
   1e7c4:	bl	2b758 <PyInit__decimal@@Base+0x24bf4>
   1e7c8:	add	x22, sp, #0x50
   1e7cc:	mov	x0, x22
   1e7d0:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   1e7d4:	cbz	w0, 1ea68 <PyInit__decimal@@Base+0x17f04>
   1e7d8:	ldr	x8, [x22, #8]
   1e7dc:	cmp	x8, #0x1
   1e7e0:	b.lt	1ea68 <PyInit__decimal@@Base+0x17f04>  // b.tstop
   1e7e4:	add	x0, sp, #0x50
   1e7e8:	mov	x4, sp
   1e7ec:	mov	x1, x22
   1e7f0:	mov	x2, xzr
   1e7f4:	mov	x3, x24
   1e7f8:	bl	2b758 <PyInit__decimal@@Base+0x24bf4>
   1e7fc:	b	1e9f4 <PyInit__decimal@@Base+0x17e90>
   1e800:	mov	x0, x22
   1e804:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   1e808:	ldr	x8, [x19, #8]
   1e80c:	cbz	w0, 1e9bc <PyInit__decimal@@Base+0x17e58>
   1e810:	mov	w9, #0x1                   	// #1
   1e814:	sub	x3, x9, x8
   1e818:	b	1ea6c <PyInit__decimal@@Base+0x17f08>
   1e81c:	ldr	x9, [sp, #48]
   1e820:	sub	x10, x22, x8
   1e824:	mov	x21, x8
   1e828:	add	x25, x10, x9
   1e82c:	ldr	x9, [x19, #32]
   1e830:	ldrb	w9, [x9]
   1e834:	cbz	w9, 1e54c <PyInit__decimal@@Base+0x179e8>
   1e838:	ldr	x9, [x19, #40]
   1e83c:	ldrb	w9, [x9]
   1e840:	cbz	w9, 1e54c <PyInit__decimal@@Base+0x179e8>
   1e844:	mov	x26, xzr
   1e848:	sub	x27, x8, x24
   1e84c:	add	x0, sp, #0x30
   1e850:	mov	x1, x23
   1e854:	mov	x2, x24
   1e858:	mov	x3, x27
   1e85c:	mov	x4, x26
   1e860:	mov	x5, x21
   1e864:	mov	x6, x25
   1e868:	mov	x7, x19
   1e86c:	str	xzr, [sp, #72]
   1e870:	bl	1f3a0 <PyInit__decimal@@Base+0x1883c>
   1e874:	ldr	x8, [sp, #48]
   1e878:	mov	w1, #0x1                   	// #1
   1e87c:	add	x0, x8, #0x1
   1e880:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   1e884:	str	x0, [sp, #72]
   1e888:	cbz	x0, 1e5a4 <PyInit__decimal@@Base+0x17a40>
   1e88c:	add	x0, sp, #0x30
   1e890:	mov	x1, x23
   1e894:	mov	x2, x24
   1e898:	mov	x3, x27
   1e89c:	mov	x4, x26
   1e8a0:	mov	x5, x21
   1e8a4:	mov	x6, x25
   1e8a8:	mov	x7, x19
   1e8ac:	bl	1f3a0 <PyInit__decimal@@Base+0x1883c>
   1e8b0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1e8b4:	ldr	x8, [x8, #1384]
   1e8b8:	mov	x0, x22
   1e8bc:	blr	x8
   1e8c0:	b	1e54c <PyInit__decimal@@Base+0x179e8>
   1e8c4:	cmp	w8, #0x3c
   1e8c8:	b.ne	1e8e8 <PyInit__decimal@@Base+0x17d84>  // b.any
   1e8cc:	mov	x26, xzr
   1e8d0:	mov	x25, x23
   1e8d4:	b	1e8f8 <PyInit__decimal@@Base+0x17d94>
   1e8d8:	mov	x25, xzr
   1e8dc:	mov	x27, x24
   1e8e0:	mov	x26, x23
   1e8e4:	b	1e900 <PyInit__decimal@@Base+0x17d9c>
   1e8e8:	cmp	x23, #0x0
   1e8ec:	cinc	x8, x23, lt  // lt = tstop
   1e8f0:	asr	x26, x8, #1
   1e8f4:	sub	x25, x23, x8, asr #1
   1e8f8:	ldr	x20, [sp, #48]
   1e8fc:	mul	x27, x26, x21
   1e900:	add	x0, x22, x27
   1e904:	mov	x1, x22
   1e908:	mov	x2, x20
   1e90c:	bl	6480 <memmove@plt>
   1e910:	cbz	x26, 1e950 <PyInit__decimal@@Base+0x17dec>
   1e914:	mov	x8, xzr
   1e918:	add	x9, x19, #0x13
   1e91c:	mov	x10, x22
   1e920:	cbz	x21, 1e940 <PyInit__decimal@@Base+0x17ddc>
   1e924:	mov	x11, x9
   1e928:	mov	x12, x21
   1e92c:	mov	x13, x10
   1e930:	ldrb	w14, [x11], #1
   1e934:	subs	x12, x12, #0x1
   1e938:	strb	w14, [x13], #1
   1e93c:	b.ne	1e930 <PyInit__decimal@@Base+0x17dcc>  // b.any
   1e940:	add	x8, x8, #0x1
   1e944:	cmp	x8, x26
   1e948:	add	x10, x10, x21
   1e94c:	b.ne	1e920 <PyInit__decimal@@Base+0x17dbc>  // b.any
   1e950:	cbz	x25, 1e994 <PyInit__decimal@@Base+0x17e30>
   1e954:	add	x9, x20, x27
   1e958:	mov	x8, xzr
   1e95c:	add	x9, x22, x9
   1e960:	add	x10, x19, #0x13
   1e964:	cbz	x21, 1e984 <PyInit__decimal@@Base+0x17e20>
   1e968:	mov	x11, x10
   1e96c:	mov	x12, x21
   1e970:	mov	x13, x9
   1e974:	ldrb	w14, [x11], #1
   1e978:	subs	x12, x12, #0x1
   1e97c:	strb	w14, [x13], #1
   1e980:	b.ne	1e974 <PyInit__decimal@@Base+0x17e10>  // b.any
   1e984:	add	x8, x8, #0x1
   1e988:	cmp	x8, x25
   1e98c:	add	x9, x9, x21
   1e990:	b.ne	1e964 <PyInit__decimal@@Base+0x17e00>  // b.any
   1e994:	ldp	x8, x9, [sp, #48]
   1e998:	ldr	x10, [sp, #72]
   1e99c:	add	x8, x8, x24
   1e9a0:	add	x9, x9, x23
   1e9a4:	stp	x8, x9, [sp, #48]
   1e9a8:	strb	wzr, [x10, x8]
   1e9ac:	add	x0, sp, #0x50
   1e9b0:	bl	20058 <PyInit__decimal@@Base+0x194f4>
   1e9b4:	ldr	x0, [sp, #72]
   1e9b8:	b	1ea94 <PyInit__decimal@@Base+0x17f30>
   1e9bc:	add	x27, x8, #0x1
   1e9c0:	cmp	x27, #0x0
   1e9c4:	b.le	1ea08 <PyInit__decimal@@Base+0x17ea4>
   1e9c8:	ldp	x25, x28, [x22, #8]
   1e9cc:	mov	x0, x22
   1e9d0:	bl	1fec8 <PyInit__decimal@@Base+0x19364>
   1e9d4:	cbnz	w0, 1e9e4 <PyInit__decimal@@Base+0x17e80>
   1e9d8:	mov	x0, x22
   1e9dc:	bl	1fed4 <PyInit__decimal@@Base+0x19370>
   1e9e0:	cbz	w0, 1ea20 <PyInit__decimal@@Base+0x17ebc>
   1e9e4:	add	x0, sp, #0x50
   1e9e8:	mov	x2, sp
   1e9ec:	mov	x1, x22
   1e9f0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   1e9f4:	mov	w3, #0x1                   	// #1
   1e9f8:	add	x22, sp, #0x50
   1e9fc:	b	1ea6c <PyInit__decimal@@Base+0x17f08>
   1ea00:	mov	x24, x22
   1ea04:	b	1e720 <PyInit__decimal@@Base+0x17bbc>
   1ea08:	add	x0, sp, #0x50
   1ea0c:	mov	x2, sp
   1ea10:	mov	w1, #0x100                 	// #256
   1ea14:	add	x22, sp, #0x50
   1ea18:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   1ea1c:	b	1ea68 <PyInit__decimal@@Base+0x17f04>
   1ea20:	sub	x8, x25, x27
   1ea24:	add	x25, x8, x28
   1ea28:	add	x0, sp, #0x50
   1ea2c:	mov	x4, sp
   1ea30:	mov	x1, x22
   1ea34:	mov	x2, x25
   1ea38:	mov	x3, x24
   1ea3c:	bl	2c778 <PyInit__decimal@@Base+0x25c14>
   1ea40:	ldr	x8, [sp, #96]
   1ea44:	cmp	x8, x27
   1ea48:	b.le	1e9f4 <PyInit__decimal@@Base+0x17e90>
   1ea4c:	add	x2, x25, #0x1
   1ea50:	add	x0, sp, #0x50
   1ea54:	add	x1, sp, #0x50
   1ea58:	mov	x4, sp
   1ea5c:	mov	x3, x24
   1ea60:	add	x22, sp, #0x50
   1ea64:	bl	2c778 <PyInit__decimal@@Base+0x25c14>
   1ea68:	mov	w3, #0x1                   	// #1
   1ea6c:	ldr	w8, [sp]
   1ea70:	mov	w9, #0x3be                 	// #958
   1ea74:	ands	w8, w8, w9
   1ea78:	b.eq	1e518 <PyInit__decimal@@Base+0x179b4>  // b.none
   1ea7c:	ldr	w9, [x20]
   1ea80:	orr	w8, w9, w8
   1ea84:	str	w8, [x20]
   1ea88:	add	x0, sp, #0x50
   1ea8c:	bl	20058 <PyInit__decimal@@Base+0x194f4>
   1ea90:	mov	x0, xzr
   1ea94:	add	sp, sp, #0x290
   1ea98:	ldp	x20, x19, [sp, #80]
   1ea9c:	ldp	x22, x21, [sp, #64]
   1eaa0:	ldp	x24, x23, [sp, #48]
   1eaa4:	ldp	x26, x25, [sp, #32]
   1eaa8:	ldp	x28, x27, [sp, #16]
   1eaac:	ldp	x29, x30, [sp], #96
   1eab0:	ret
   1eab4:	bl	67b0 <abort@plt>
   1eab8:	sub	sp, sp, #0x60
   1eabc:	stp	x29, x30, [sp, #48]
   1eac0:	str	x21, [sp, #64]
   1eac4:	stp	x20, x19, [sp, #80]
   1eac8:	add	x29, sp, #0x30
   1eacc:	mov	x20, x2
   1ead0:	mov	x21, x0
   1ead4:	mov	x0, sp
   1ead8:	mov	w2, #0x1                   	// #1
   1eadc:	mov	x19, x3
   1eae0:	bl	1dfc0 <PyInit__decimal@@Base+0x1745c>
   1eae4:	cbz	w0, 1eb00 <PyInit__decimal@@Base+0x17f9c>
   1eae8:	mov	x1, sp
   1eaec:	mov	x0, x21
   1eaf0:	mov	x2, x20
   1eaf4:	mov	x3, x19
   1eaf8:	bl	1e400 <PyInit__decimal@@Base+0x1789c>
   1eafc:	b	1eb10 <PyInit__decimal@@Base+0x17fac>
   1eb00:	ldr	w8, [x19]
   1eb04:	mov	x0, xzr
   1eb08:	orr	w8, w8, #0x100
   1eb0c:	str	w8, [x19]
   1eb10:	ldp	x20, x19, [sp, #80]
   1eb14:	ldr	x21, [sp, #64]
   1eb18:	ldp	x29, x30, [sp, #48]
   1eb1c:	add	sp, sp, #0x60
   1eb20:	ret
   1eb24:	stp	x29, x30, [sp, #-80]!
   1eb28:	str	x25, [sp, #16]
   1eb2c:	stp	x24, x23, [sp, #32]
   1eb30:	stp	x22, x21, [sp, #48]
   1eb34:	stp	x20, x19, [sp, #64]
   1eb38:	mov	x29, sp
   1eb3c:	adrp	x25, 49000 <PyInit__decimal@@Base+0x4249c>
   1eb40:	adrp	x23, 38000 <PyInit__decimal@@Base+0x3149c>
   1eb44:	mov	w21, w2
   1eb48:	mov	w22, w1
   1eb4c:	mov	x19, x0
   1eb50:	mov	x24, xzr
   1eb54:	add	x25, x25, #0xb68
   1eb58:	add	x23, x23, #0x100
   1eb5c:	mov	x20, x0
   1eb60:	strb	wzr, [x0]
   1eb64:	lsr	w8, w21, w24
   1eb68:	tbz	w8, #0, 1eb98 <PyInit__decimal@@Base+0x18034>
   1eb6c:	ldr	x3, [x25, x24, lsl #3]
   1eb70:	sxtw	x1, w22
   1eb74:	mov	x0, x20
   1eb78:	mov	x2, x23
   1eb7c:	bl	6600 <snprintf@plt>
   1eb80:	mov	w8, w0
   1eb84:	mov	w0, #0xffffffff            	// #-1
   1eb88:	tbnz	w8, #31, 1ebbc <PyInit__decimal@@Base+0x18058>
   1eb8c:	subs	w22, w22, w8
   1eb90:	b.le	1ebbc <PyInit__decimal@@Base+0x18058>
   1eb94:	add	x20, x20, w8, uxtw
   1eb98:	add	x24, x24, #0x1
   1eb9c:	cmp	x24, #0xf
   1eba0:	b.ne	1eb64 <PyInit__decimal@@Base+0x18000>  // b.any
   1eba4:	cmp	x20, x19
   1eba8:	mov	x8, x19
   1ebac:	b.eq	1ebb8 <PyInit__decimal@@Base+0x18054>  // b.none
   1ebb0:	strb	wzr, [x20, #-1]!
   1ebb4:	mov	x8, x20
   1ebb8:	sub	w0, w8, w19
   1ebbc:	ldp	x20, x19, [sp, #64]
   1ebc0:	ldp	x22, x21, [sp, #48]
   1ebc4:	ldp	x24, x23, [sp, #32]
   1ebc8:	ldr	x25, [sp, #16]
   1ebcc:	ldp	x29, x30, [sp], #80
   1ebd0:	ret
   1ebd4:	stp	x29, x30, [sp, #-80]!
   1ebd8:	stp	x26, x25, [sp, #16]
   1ebdc:	stp	x24, x23, [sp, #32]
   1ebe0:	stp	x22, x21, [sp, #48]
   1ebe4:	stp	x20, x19, [sp, #64]
   1ebe8:	mov	x29, sp
   1ebec:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1ebf0:	mov	w9, #0x5b                  	// #91
   1ebf4:	mov	x24, x0
   1ebf8:	add	x8, x8, #0xb68
   1ebfc:	cmp	x3, #0x0
   1ec00:	strh	w9, [x24], #1
   1ec04:	adrp	x22, 38000 <PyInit__decimal@@Base+0x3149c>
   1ec08:	mov	w20, w2
   1ec0c:	mov	x19, x0
   1ec10:	mov	x23, xzr
   1ec14:	csel	x25, x8, x3, eq  // eq = none
   1ec18:	sub	w26, w1, #0x1
   1ec1c:	add	x22, x22, #0x104
   1ec20:	mov	x21, x24
   1ec24:	lsr	w8, w20, w23
   1ec28:	tbz	w8, #0, 1ec58 <PyInit__decimal@@Base+0x180f4>
   1ec2c:	ldr	x3, [x25, x23, lsl #3]
   1ec30:	sxtw	x1, w26
   1ec34:	mov	x0, x21
   1ec38:	mov	x2, x22
   1ec3c:	bl	6600 <snprintf@plt>
   1ec40:	mov	w8, w0
   1ec44:	mov	w0, #0xffffffff            	// #-1
   1ec48:	tbnz	w8, #31, 1ec80 <PyInit__decimal@@Base+0x1811c>
   1ec4c:	subs	w26, w26, w8
   1ec50:	b.le	1ec80 <PyInit__decimal@@Base+0x1811c>
   1ec54:	add	x21, x21, w8, uxtw
   1ec58:	add	x23, x23, #0x1
   1ec5c:	cmp	x23, #0xf
   1ec60:	b.ne	1ec24 <PyInit__decimal@@Base+0x180c0>  // b.any
   1ec64:	sub	x8, x21, #0x2
   1ec68:	cmp	x21, x24
   1ec6c:	mov	w9, #0x5d                  	// #93
   1ec70:	csel	x8, x21, x8, eq  // eq = none
   1ec74:	strh	w9, [x8]
   1ec78:	sub	w8, w8, w19
   1ec7c:	add	w0, w8, #0x1
   1ec80:	ldp	x20, x19, [sp, #64]
   1ec84:	ldp	x22, x21, [sp, #48]
   1ec88:	ldp	x24, x23, [sp, #32]
   1ec8c:	ldp	x26, x25, [sp, #16]
   1ec90:	ldp	x29, x30, [sp], #80
   1ec94:	ret
   1ec98:	sub	sp, sp, #0x70
   1ec9c:	stp	x29, x30, [sp, #16]
   1eca0:	stp	x28, x27, [sp, #32]
   1eca4:	stp	x26, x25, [sp, #48]
   1eca8:	stp	x24, x23, [sp, #64]
   1ecac:	stp	x22, x21, [sp, #80]
   1ecb0:	stp	x20, x19, [sp, #96]
   1ecb4:	add	x29, sp, #0x10
   1ecb8:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1ecbc:	mov	w9, #0x5b                  	// #91
   1ecc0:	mov	x25, x0
   1ecc4:	add	x8, x8, #0xbe0
   1ecc8:	cmp	x3, #0x0
   1eccc:	strh	w9, [x25], #1
   1ecd0:	adrp	x22, 38000 <PyInit__decimal@@Base+0x3149c>
   1ecd4:	mov	w20, w2
   1ecd8:	mov	x23, xzr
   1ecdc:	mov	w24, wzr
   1ece0:	sub	w26, w1, #0x1
   1ece4:	mov	w27, #0x1                   	// #1
   1ece8:	csel	x28, x8, x3, eq  // eq = none
   1ecec:	mov	w19, #0x3ba                 	// #954
   1ecf0:	add	x22, x22, #0x104
   1ecf4:	mov	x21, x25
   1ecf8:	str	x0, [sp, #8]
   1ecfc:	lsl	w8, w27, w23
   1ed00:	ands	w8, w8, w20
   1ed04:	b.eq	1ed44 <PyInit__decimal@@Base+0x181e0>  // b.none
   1ed08:	tst	w8, w19
   1ed0c:	b.eq	1ed18 <PyInit__decimal@@Base+0x181b4>  // b.none
   1ed10:	cbnz	w24, 1ed44 <PyInit__decimal@@Base+0x181e0>
   1ed14:	mov	w24, #0x1                   	// #1
   1ed18:	ldr	x3, [x28, x23, lsl #3]
   1ed1c:	sxtw	x1, w26
   1ed20:	mov	x0, x21
   1ed24:	mov	x2, x22
   1ed28:	bl	6600 <snprintf@plt>
   1ed2c:	mov	w8, w0
   1ed30:	mov	w0, #0xffffffff            	// #-1
   1ed34:	tbnz	w8, #31, 1ed70 <PyInit__decimal@@Base+0x1820c>
   1ed38:	subs	w26, w26, w8
   1ed3c:	b.le	1ed70 <PyInit__decimal@@Base+0x1820c>
   1ed40:	add	x21, x21, w8, uxtw
   1ed44:	add	x23, x23, #0x1
   1ed48:	cmp	x23, #0xf
   1ed4c:	b.ne	1ecfc <PyInit__decimal@@Base+0x18198>  // b.any
   1ed50:	sub	x8, x21, #0x2
   1ed54:	cmp	x21, x25
   1ed58:	mov	w9, #0x5d                  	// #93
   1ed5c:	csel	x8, x21, x8, eq  // eq = none
   1ed60:	strh	w9, [x8]
   1ed64:	ldr	x9, [sp, #8]
   1ed68:	sub	w8, w8, w9
   1ed6c:	add	w0, w8, #0x1
   1ed70:	ldp	x20, x19, [sp, #96]
   1ed74:	ldp	x22, x21, [sp, #80]
   1ed78:	ldp	x24, x23, [sp, #64]
   1ed7c:	ldp	x26, x25, [sp, #48]
   1ed80:	ldp	x28, x27, [sp, #32]
   1ed84:	ldp	x29, x30, [sp, #16]
   1ed88:	add	sp, sp, #0x70
   1ed8c:	ret
   1ed90:	sub	sp, sp, #0x30
   1ed94:	stp	x29, x30, [sp, #16]
   1ed98:	stp	x20, x19, [sp, #32]
   1ed9c:	add	x29, sp, #0x10
   1eda0:	mov	x19, x0
   1eda4:	add	x0, sp, #0x8
   1eda8:	mov	w2, #0x3                   	// #3
   1edac:	mov	w3, #0x1                   	// #1
   1edb0:	bl	1da5c <PyInit__decimal@@Base+0x16ef8>
   1edb4:	ldr	x20, [sp, #8]
   1edb8:	cbz	x20, 1edec <PyInit__decimal@@Base+0x18288>
   1edbc:	adrp	x1, 38000 <PyInit__decimal@@Base+0x3149c>
   1edc0:	add	x1, x1, #0x109
   1edc4:	mov	x0, x19
   1edc8:	mov	x2, x20
   1edcc:	bl	6a60 <fprintf@plt>
   1edd0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1edd4:	ldr	x1, [x8, #1384]
   1edd8:	mov	x0, x20
   1eddc:	ldp	x20, x19, [sp, #32]
   1ede0:	ldp	x29, x30, [sp, #16]
   1ede4:	add	sp, sp, #0x30
   1ede8:	br	x1
   1edec:	mov	x1, x19
   1edf0:	ldp	x20, x19, [sp, #32]
   1edf4:	ldp	x29, x30, [sp, #16]
   1edf8:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   1edfc:	add	x0, x0, #0x10d
   1ee00:	add	sp, sp, #0x30
   1ee04:	b	64e0 <fputs@plt>
   1ee08:	stp	x29, x30, [sp, #-32]!
   1ee0c:	str	x19, [sp, #16]
   1ee10:	mov	x29, sp
   1ee14:	mov	x1, x0
   1ee18:	add	x0, x29, #0x18
   1ee1c:	mov	w2, #0x3                   	// #3
   1ee20:	mov	w3, #0x1                   	// #1
   1ee24:	bl	1da5c <PyInit__decimal@@Base+0x16ef8>
   1ee28:	ldr	x19, [x29, #24]
   1ee2c:	cbz	x19, 1ee50 <PyInit__decimal@@Base+0x182ec>
   1ee30:	mov	x0, x19
   1ee34:	bl	6800 <puts@plt>
   1ee38:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1ee3c:	ldr	x1, [x8, #1384]
   1ee40:	mov	x0, x19
   1ee44:	ldr	x19, [sp, #16]
   1ee48:	ldp	x29, x30, [sp], #32
   1ee4c:	br	x1
   1ee50:	adrp	x8, 49000 <PyInit__decimal@@Base+0x4249c>
   1ee54:	ldr	x8, [x8, #3904]
   1ee58:	ldr	x19, [sp, #16]
   1ee5c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   1ee60:	add	x0, x0, #0x10d
   1ee64:	ldr	x1, [x8]
   1ee68:	ldp	x29, x30, [sp], #32
   1ee6c:	b	64e0 <fputs@plt>
   1ee70:	sub	w8, w2, #0x2
   1ee74:	cmp	w8, #0x12
   1ee78:	b.hi	1f37c <PyInit__decimal@@Base+0x18818>  // b.pmore
   1ee7c:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   1ee80:	add	x9, x9, #0xc0
   1ee84:	adr	x10, 1ee94 <PyInit__decimal@@Base+0x18330>
   1ee88:	ldrh	w11, [x9, x8, lsl #1]
   1ee8c:	add	x10, x10, x11, lsl #2
   1ee90:	br	x10
   1ee94:	cmp	x0, x3
   1ee98:	b.ne	1eea4 <PyInit__decimal@@Base+0x18340>  // b.any
   1ee9c:	mov	w8, #0x2e                  	// #46
   1eea0:	strb	w8, [x0], #1
   1eea4:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1eea8:	movk	x8, #0x2304, lsl #32
   1eeac:	mov	x10, #0x76180000            	// #1981284352
   1eeb0:	movk	x8, #0x8ac7, lsl #48
   1eeb4:	movk	x10, #0xdcfb, lsl #32
   1eeb8:	mov	w9, #0x30                  	// #48
   1eebc:	movk	x10, #0x7538, lsl #48
   1eec0:	cmp	x1, x8
   1eec4:	add	x8, x8, #0x1
   1eec8:	add	x10, x1, x10
   1eecc:	cinc	w9, w9, hi  // hi = pmore
   1eed0:	cmp	x1, x8
   1eed4:	strb	w9, [x0], #1
   1eed8:	csel	x1, x1, x10, cc  // cc = lo, ul, last
   1eedc:	cmp	x0, x3
   1eee0:	b.ne	1eef0 <PyInit__decimal@@Base+0x1838c>  // b.any
   1eee4:	mov	w8, #0x2e                  	// #46
   1eee8:	mov	x0, x3
   1eeec:	strb	w8, [x0], #1
   1eef0:	mov	x9, #0x490f                	// #18703
   1eef4:	movk	x9, #0x7747, lsl #16
   1eef8:	lsr	x8, x1, #18
   1eefc:	movk	x9, #0x49c9, lsl #32
   1ef00:	mov	x10, #0xa7640000            	// #2808348672
   1ef04:	umulh	x8, x8, x9
   1ef08:	movk	x10, #0xb6b3, lsl #32
   1ef0c:	lsr	x8, x8, #24
   1ef10:	movk	x10, #0xde0, lsl #48
   1ef14:	add	w9, w8, #0x30
   1ef18:	strb	w9, [x0], #1
   1ef1c:	msub	x1, x8, x10, x1
   1ef20:	cmp	x0, x3
   1ef24:	b.ne	1ef34 <PyInit__decimal@@Base+0x183d0>  // b.any
   1ef28:	mov	w8, #0x2e                  	// #46
   1ef2c:	mov	x0, x3
   1ef30:	strb	w8, [x0], #1
   1ef34:	mov	x9, #0x1b53                	// #6995
   1ef38:	movk	x9, #0xd519, lsl #16
   1ef3c:	lsr	x8, x1, #17
   1ef40:	movk	x9, #0x5c3b, lsl #32
   1ef44:	mov	x10, #0x5d8a0000            	// #1569325056
   1ef48:	umulh	x8, x8, x9
   1ef4c:	movk	x10, #0x4578, lsl #32
   1ef50:	lsr	x8, x8, #22
   1ef54:	movk	x10, #0x163, lsl #48
   1ef58:	add	w9, w8, #0x30
   1ef5c:	strb	w9, [x0], #1
   1ef60:	msub	x1, x8, x10, x1
   1ef64:	cmp	x0, x3
   1ef68:	b.ne	1ef78 <PyInit__decimal@@Base+0x18414>  // b.any
   1ef6c:	mov	w8, #0x2e                  	// #46
   1ef70:	mov	x0, x3
   1ef74:	strb	w8, [x0], #1
   1ef78:	mov	x8, #0x7857                	// #30807
   1ef7c:	movk	x8, #0xb113, lsl #16
   1ef80:	movk	x8, #0x652f, lsl #32
   1ef84:	movk	x8, #0x39a5, lsl #48
   1ef88:	mov	x9, #0x6fc10000            	// #1874919424
   1ef8c:	umulh	x8, x1, x8
   1ef90:	movk	x9, #0x86f2, lsl #32
   1ef94:	lsr	x8, x8, #51
   1ef98:	movk	x9, #0x23, lsl #48
   1ef9c:	add	w10, w8, #0x30
   1efa0:	strb	w10, [x0], #1
   1efa4:	msub	x1, x8, x9, x1
   1efa8:	cmp	x0, x3
   1efac:	b.ne	1efbc <PyInit__decimal@@Base+0x18458>  // b.any
   1efb0:	mov	w8, #0x2e                  	// #46
   1efb4:	mov	x0, x3
   1efb8:	strb	w8, [x0], #1
   1efbc:	mov	x9, #0xeac3                	// #60099
   1efc0:	movk	x9, #0xf3dc, lsl #16
   1efc4:	movk	x9, #0x4075, lsl #32
   1efc8:	lsr	x8, x1, #15
   1efcc:	movk	x9, #0x2, lsl #48
   1efd0:	mov	x10, #0x3ffffffff8000       	// #1125899906809856
   1efd4:	umulh	x8, x8, x9
   1efd8:	movk	x10, #0xa4c6, lsl #16
   1efdc:	lsr	x8, x8, #20
   1efe0:	movk	x10, #0x8d7e, lsl #32
   1efe4:	add	w9, w8, #0x30
   1efe8:	strb	w9, [x0], #1
   1efec:	msub	x1, x8, x10, x1
   1eff0:	cmp	x0, x3
   1eff4:	b.ne	1f004 <PyInit__decimal@@Base+0x184a0>  // b.any
   1eff8:	mov	w8, #0x2e                  	// #46
   1effc:	mov	x0, x3
   1f000:	strb	w8, [x0], #1
   1f004:	mov	x8, #0xcd81                	// #52609
   1f008:	movk	x8, #0x5095, lsl #16
   1f00c:	movk	x8, #0x4dc3, lsl #32
   1f010:	movk	x8, #0xb42, lsl #48
   1f014:	mov	x9, #0x4000                	// #16384
   1f018:	umulh	x8, x1, x8
   1f01c:	movk	x9, #0x107a, lsl #16
   1f020:	lsr	x8, x8, #42
   1f024:	movk	x9, #0x5af3, lsl #32
   1f028:	add	w10, w8, #0x30
   1f02c:	strb	w10, [x0], #1
   1f030:	msub	x1, x8, x9, x1
   1f034:	cmp	x0, x3
   1f038:	b.ne	1f048 <PyInit__decimal@@Base+0x184e4>  // b.any
   1f03c:	mov	w8, #0x2e                  	// #46
   1f040:	mov	x0, x3
   1f044:	strb	w8, [x0], #1
   1f048:	mov	x8, #0x385                 	// #901
   1f04c:	movk	x8, #0x92ed, lsl #16
   1f050:	movk	x8, #0x84d0, lsl #32
   1f054:	movk	x8, #0x384b, lsl #48
   1f058:	mov	x9, #0xa000                	// #40960
   1f05c:	umulh	x8, x1, x8
   1f060:	movk	x9, #0x4e72, lsl #16
   1f064:	lsr	x8, x8, #41
   1f068:	movk	x9, #0x918, lsl #32
   1f06c:	add	w10, w8, #0x30
   1f070:	strb	w10, [x0], #1
   1f074:	msub	x1, x8, x9, x1
   1f078:	cmp	x0, x3
   1f07c:	b.ne	1f08c <PyInit__decimal@@Base+0x18528>  // b.any
   1f080:	mov	w8, #0x2e                  	// #46
   1f084:	mov	x0, x3
   1f088:	strb	w8, [x0], #1
   1f08c:	mov	x8, #0x2233                	// #8755
   1f090:	movk	x8, #0x5bd4, lsl #16
   1f094:	movk	x8, #0x3302, lsl #32
   1f098:	movk	x8, #0x232f, lsl #48
   1f09c:	mov	x9, #0x1000                	// #4096
   1f0a0:	umulh	x8, x1, x8
   1f0a4:	movk	x9, #0xd4a5, lsl #16
   1f0a8:	lsr	x8, x8, #37
   1f0ac:	movk	x9, #0xe8, lsl #32
   1f0b0:	add	w10, w8, #0x30
   1f0b4:	strb	w10, [x0], #1
   1f0b8:	msub	x1, x8, x9, x1
   1f0bc:	cmp	x0, x3
   1f0c0:	b.ne	1f0d0 <PyInit__decimal@@Base+0x1856c>  // b.any
   1f0c4:	mov	w8, #0x2e                  	// #46
   1f0c8:	mov	x0, x3
   1f0cc:	strb	w8, [x0], #1
   1f0d0:	mov	x8, #0xaaff                	// #43775
   1f0d4:	movk	x8, #0xcb24, lsl #16
   1f0d8:	movk	x8, #0xff0b, lsl #32
   1f0dc:	movk	x8, #0xafeb, lsl #48
   1f0e0:	mov	x9, #0xe800                	// #59392
   1f0e4:	umulh	x8, x1, x8
   1f0e8:	movk	x9, #0x4876, lsl #16
   1f0ec:	lsr	x8, x8, #36
   1f0f0:	movk	x9, #0x17, lsl #32
   1f0f4:	add	w10, w8, #0x30
   1f0f8:	strb	w10, [x0], #1
   1f0fc:	msub	x1, x8, x9, x1
   1f100:	cmp	x0, x3
   1f104:	b.ne	1f114 <PyInit__decimal@@Base+0x185b0>  // b.any
   1f108:	mov	w8, #0x2e                  	// #46
   1f10c:	mov	x0, x3
   1f110:	strb	w8, [x0], #1
   1f114:	mov	x8, #0xd5bf                	// #54719
   1f118:	movk	x8, #0xbded, lsl #16
   1f11c:	movk	x8, #0xfece, lsl #32
   1f120:	movk	x8, #0xdbe6, lsl #48
   1f124:	mov	x9, #0xe400                	// #58368
   1f128:	umulh	x8, x1, x8
   1f12c:	movk	x9, #0x540b, lsl #16
   1f130:	lsr	x8, x8, #33
   1f134:	movk	x9, #0x2, lsl #32
   1f138:	add	w10, w8, #0x30
   1f13c:	strb	w10, [x0], #1
   1f140:	msub	x1, x8, x9, x1
   1f144:	cmp	x0, x3
   1f148:	b.ne	1f158 <PyInit__decimal@@Base+0x185f4>  // b.any
   1f14c:	mov	w8, #0x2e                  	// #46
   1f150:	mov	x0, x3
   1f154:	strb	w8, [x0], #1
   1f158:	mov	x9, #0x5a53                	// #23123
   1f15c:	movk	x9, #0xa09b, lsl #16
   1f160:	movk	x9, #0xb82f, lsl #32
   1f164:	lsr	x8, x1, #9
   1f168:	movk	x9, #0x44, lsl #48
   1f16c:	umulh	x8, x8, x9
   1f170:	mov	w10, #0xca00                	// #51712
   1f174:	lsr	x8, x8, #11
   1f178:	movk	w10, #0x3b9a, lsl #16
   1f17c:	add	w9, w8, #0x30
   1f180:	strb	w9, [x0], #1
   1f184:	msub	x1, x8, x10, x1
   1f188:	cmp	x0, x3
   1f18c:	b.ne	1f19c <PyInit__decimal@@Base+0x18638>  // b.any
   1f190:	mov	w8, #0x2e                  	// #46
   1f194:	mov	x0, x3
   1f198:	strb	w8, [x0], #1
   1f19c:	mov	x8, #0xcefd                	// #52989
   1f1a0:	movk	x8, #0x8461, lsl #16
   1f1a4:	movk	x8, #0x7711, lsl #32
   1f1a8:	movk	x8, #0xabcc, lsl #48
   1f1ac:	umulh	x8, x1, x8
   1f1b0:	mov	w9, #0xe100                	// #57600
   1f1b4:	lsr	x8, x8, #26
   1f1b8:	movk	w9, #0x5f5, lsl #16
   1f1bc:	add	w10, w8, #0x30
   1f1c0:	strb	w10, [x0], #1
   1f1c4:	msub	x1, x8, x9, x1
   1f1c8:	cmp	x0, x3
   1f1cc:	b.ne	1f1dc <PyInit__decimal@@Base+0x18678>  // b.any
   1f1d0:	mov	w8, #0x2e                  	// #46
   1f1d4:	mov	x0, x3
   1f1d8:	strb	w8, [x0], #1
   1f1dc:	mov	x8, #0x42bd                	// #17085
   1f1e0:	movk	x8, #0xe57a, lsl #16
   1f1e4:	movk	x8, #0x94d5, lsl #32
   1f1e8:	movk	x8, #0xd6bf, lsl #48
   1f1ec:	umulh	x8, x1, x8
   1f1f0:	mov	w9, #0x9680                	// #38528
   1f1f4:	lsr	x8, x8, #23
   1f1f8:	movk	w9, #0x98, lsl #16
   1f1fc:	add	w10, w8, #0x30
   1f200:	strb	w10, [x0], #1
   1f204:	msub	x1, x8, x9, x1
   1f208:	cmp	x0, x3
   1f20c:	b.ne	1f21c <PyInit__decimal@@Base+0x186b8>  // b.any
   1f210:	mov	w8, #0x2e                  	// #46
   1f214:	mov	x0, x3
   1f218:	strb	w8, [x0], #1
   1f21c:	mov	x8, #0x34db                	// #13531
   1f220:	movk	x8, #0xd7b6, lsl #16
   1f224:	movk	x8, #0xde82, lsl #32
   1f228:	movk	x8, #0x431b, lsl #48
   1f22c:	umulh	x8, x1, x8
   1f230:	mov	w9, #0x4240                	// #16960
   1f234:	lsr	x8, x8, #18
   1f238:	movk	w9, #0xf, lsl #16
   1f23c:	add	w10, w8, #0x30
   1f240:	strb	w10, [x0], #1
   1f244:	msub	x1, x8, x9, x1
   1f248:	cmp	x0, x3
   1f24c:	b.ne	1f25c <PyInit__decimal@@Base+0x186f8>  // b.any
   1f250:	mov	w8, #0x2e                  	// #46
   1f254:	mov	x0, x3
   1f258:	strb	w8, [x0], #1
   1f25c:	mov	x9, #0x7843                	// #30787
   1f260:	movk	x9, #0x71b4, lsl #16
   1f264:	movk	x9, #0x5ac4, lsl #32
   1f268:	lsr	x8, x1, #5
   1f26c:	movk	x9, #0xa7c, lsl #48
   1f270:	umulh	x8, x8, x9
   1f274:	mov	w10, #0x86a0                	// #34464
   1f278:	lsr	x8, x8, #7
   1f27c:	movk	w10, #0x1, lsl #16
   1f280:	add	w9, w8, #0x30
   1f284:	strb	w9, [x0], #1
   1f288:	msub	x1, x8, x10, x1
   1f28c:	cmp	x0, x3
   1f290:	b.ne	1f2a0 <PyInit__decimal@@Base+0x1873c>  // b.any
   1f294:	mov	w8, #0x2e                  	// #46
   1f298:	mov	x0, x3
   1f29c:	strb	w8, [x0], #1
   1f2a0:	mov	x8, #0x594b                	// #22859
   1f2a4:	movk	x8, #0x3886, lsl #16
   1f2a8:	movk	x8, #0xc5d6, lsl #32
   1f2ac:	movk	x8, #0x346d, lsl #48
   1f2b0:	umulh	x8, x1, x8
   1f2b4:	lsr	x8, x8, #11
   1f2b8:	mov	w9, #0x2710                	// #10000
   1f2bc:	add	w10, w8, #0x30
   1f2c0:	strb	w10, [x0], #1
   1f2c4:	msub	x1, x8, x9, x1
   1f2c8:	cmp	x0, x3
   1f2cc:	b.ne	1f2dc <PyInit__decimal@@Base+0x18778>  // b.any
   1f2d0:	mov	w8, #0x2e                  	// #46
   1f2d4:	mov	x0, x3
   1f2d8:	strb	w8, [x0], #1
   1f2dc:	mov	x9, #0xf7cf                	// #63439
   1f2e0:	movk	x9, #0xe353, lsl #16
   1f2e4:	movk	x9, #0x9ba5, lsl #32
   1f2e8:	lsr	x8, x1, #3
   1f2ec:	movk	x9, #0x20c4, lsl #48
   1f2f0:	umulh	x8, x8, x9
   1f2f4:	lsr	x8, x8, #4
   1f2f8:	mov	w10, #0x3e8                 	// #1000
   1f2fc:	add	w9, w8, #0x30
   1f300:	strb	w9, [x0], #1
   1f304:	msub	x1, x8, x10, x1
   1f308:	cmp	x0, x3
   1f30c:	b.ne	1f31c <PyInit__decimal@@Base+0x187b8>  // b.any
   1f310:	mov	w8, #0x2e                  	// #46
   1f314:	mov	x0, x3
   1f318:	strb	w8, [x0], #1
   1f31c:	mov	x9, #0xf5c3                	// #62915
   1f320:	movk	x9, #0x5c28, lsl #16
   1f324:	movk	x9, #0xc28f, lsl #32
   1f328:	lsr	x8, x1, #2
   1f32c:	movk	x9, #0x28f5, lsl #48
   1f330:	umulh	x8, x8, x9
   1f334:	lsr	x8, x8, #2
   1f338:	mov	w10, #0x64                  	// #100
   1f33c:	add	w9, w8, #0x30
   1f340:	strb	w9, [x0], #1
   1f344:	msub	x1, x8, x10, x1
   1f348:	cmp	x0, x3
   1f34c:	b.ne	1f35c <PyInit__decimal@@Base+0x187f8>  // b.any
   1f350:	mov	w8, #0x2e                  	// #46
   1f354:	mov	x0, x3
   1f358:	strb	w8, [x0], #1
   1f35c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1f360:	movk	x8, #0xcccd
   1f364:	umulh	x8, x1, x8
   1f368:	lsr	x8, x8, #3
   1f36c:	mov	w9, #0xa                   	// #10
   1f370:	add	w10, w8, #0x30
   1f374:	strb	w10, [x0], #1
   1f378:	msub	x1, x8, x9, x1
   1f37c:	cmp	x0, x3
   1f380:	b.ne	1f390 <PyInit__decimal@@Base+0x1882c>  // b.any
   1f384:	mov	w8, #0x2e                  	// #46
   1f388:	strb	w8, [x3], #1
   1f38c:	mov	x0, x3
   1f390:	add	w8, w1, #0x30
   1f394:	strb	w8, [x0], #1
   1f398:	strb	wzr, [x0]
   1f39c:	ret
   1f3a0:	stp	x29, x30, [sp, #-96]!
   1f3a4:	stp	x28, x27, [sp, #16]
   1f3a8:	stp	x26, x25, [sp, #32]
   1f3ac:	stp	x24, x23, [sp, #48]
   1f3b0:	stp	x22, x21, [sp, #64]
   1f3b4:	stp	x20, x19, [sp, #80]
   1f3b8:	mov	x29, sp
   1f3bc:	mov	x19, x0
   1f3c0:	ldr	x0, [x7, #32]
   1f3c4:	cmp	x1, #0x0
   1f3c8:	mov	x21, x7
   1f3cc:	mov	x26, x6
   1f3d0:	mov	x27, x5
   1f3d4:	mov	x25, x4
   1f3d8:	mov	x23, x3
   1f3dc:	mov	x24, x2
   1f3e0:	mov	x20, x1
   1f3e4:	cset	w28, ne  // ne = any
   1f3e8:	bl	64c0 <strlen@plt>
   1f3ec:	ldr	x8, [x19]
   1f3f0:	ldr	x9, [x19, #24]
   1f3f4:	mov	x22, x0
   1f3f8:	stp	x26, x26, [x19]
   1f3fc:	sub	x10, x8, x26
   1f400:	str	x10, [x19, #16]
   1f404:	cbz	x9, 1f430 <PyInit__decimal@@Base+0x188cc>
   1f408:	cmp	x26, #0x1
   1f40c:	b.mi	1f430 <PyInit__decimal@@Base+0x188cc>  // b.first
   1f410:	add	x8, x8, x9
   1f414:	sub	x8, x8, #0x1
   1f418:	sub	x9, x27, #0x1
   1f41c:	ldrb	w10, [x9, x26]
   1f420:	sub	x26, x26, #0x1
   1f424:	cmp	x26, #0x0
   1f428:	strb	w10, [x8], #-1
   1f42c:	b.gt	1f41c <PyInit__decimal@@Base+0x188b8>
   1f430:	cbz	x25, 1f488 <PyInit__decimal@@Base+0x18924>
   1f434:	mov	x0, x25
   1f438:	bl	64c0 <strlen@plt>
   1f43c:	ldp	x10, x11, [x19]
   1f440:	ldp	x8, x9, [x19, #16]
   1f444:	cmp	x0, #0x0
   1f448:	add	x10, x10, x0
   1f44c:	cinc	x11, x11, gt
   1f450:	sub	x12, x8, x0
   1f454:	stp	x10, x11, [x19]
   1f458:	str	x12, [x19, #16]
   1f45c:	cbz	x9, 1f488 <PyInit__decimal@@Base+0x18924>
   1f460:	cmp	x0, #0x1
   1f464:	b.mi	1f488 <PyInit__decimal@@Base+0x18924>  // b.first
   1f468:	add	x8, x8, x9
   1f46c:	sub	x8, x8, #0x1
   1f470:	sub	x9, x25, #0x1
   1f474:	ldrb	w10, [x9, x0]
   1f478:	sub	x0, x0, #0x1
   1f47c:	cmp	x0, #0x0
   1f480:	strb	w10, [x8], #-1
   1f484:	b.gt	1f474 <PyInit__decimal@@Base+0x18910>
   1f488:	ldr	x25, [x21, #40]
   1f48c:	mov	w27, wzr
   1f490:	sub	x26, x24, #0x1
   1f494:	ldrb	w9, [x25]
   1f498:	and	x24, x9, #0xff
   1f49c:	mov	x8, x23
   1f4a0:	ands	w9, w9, #0xff
   1f4a4:	b.eq	1f4b8 <PyInit__decimal@@Base+0x18954>  // b.none
   1f4a8:	cmp	w9, #0xff
   1f4ac:	b.eq	1f4b8 <PyInit__decimal@@Base+0x18954>  // b.none
   1f4b0:	cmp	x24, x8
   1f4b4:	b.le	1f4bc <PyInit__decimal@@Base+0x18958>
   1f4b8:	mov	x24, x8
   1f4bc:	sub	x23, x8, x24
   1f4c0:	dup	v0.2d, x24
   1f4c4:	cbz	w27, 1f504 <PyInit__decimal@@Base+0x189a0>
   1f4c8:	ldr	q1, [x19]
   1f4cc:	ldr	x8, [x19, #16]
   1f4d0:	cmp	x24, #0x1
   1f4d4:	add	v0.2d, v1.2d, v0.2d
   1f4d8:	sub	x8, x8, x24
   1f4dc:	str	q0, [x19]
   1f4e0:	str	x8, [x19, #16]
   1f4e4:	b.mi	1f54c <PyInit__decimal@@Base+0x189e8>  // b.first
   1f4e8:	ldr	x9, [x19, #24]
   1f4ec:	cbz	x9, 1f54c <PyInit__decimal@@Base+0x189e8>
   1f4f0:	add	x0, x9, x8
   1f4f4:	mov	w1, #0x30                  	// #48
   1f4f8:	mov	x2, x24
   1f4fc:	bl	6660 <memset@plt>
   1f500:	b	1f54c <PyInit__decimal@@Base+0x189e8>
   1f504:	ldr	q1, [x19]
   1f508:	ldp	x9, x10, [x19, #16]
   1f50c:	add	v0.2d, v1.2d, v0.2d
   1f510:	sub	x11, x9, x24
   1f514:	str	q0, [x19]
   1f518:	str	x11, [x19, #16]
   1f51c:	cbz	x10, 1f54c <PyInit__decimal@@Base+0x189e8>
   1f520:	cmp	x24, #0x1
   1f524:	b.mi	1f54c <PyInit__decimal@@Base+0x189e8>  // b.first
   1f528:	add	x9, x10, x9
   1f52c:	sub	x9, x9, #0x1
   1f530:	add	x8, x26, x8
   1f534:	mov	x10, x24
   1f538:	ldrb	w11, [x8], #-1
   1f53c:	sub	x10, x10, #0x1
   1f540:	cmp	x10, #0x0
   1f544:	strb	w11, [x9], #-1
   1f548:	b.gt	1f538 <PyInit__decimal@@Base+0x189d4>
   1f54c:	cbnz	x23, 1f580 <PyInit__decimal@@Base+0x18a1c>
   1f550:	ldrb	w8, [x21, #17]
   1f554:	cmp	w8, #0x7a
   1f558:	b.ne	1f608 <PyInit__decimal@@Base+0x18aa4>  // b.any
   1f55c:	ldr	x8, [x19, #8]
   1f560:	ldr	x9, [x21]
   1f564:	add	x8, x8, x28
   1f568:	subs	x8, x9, x8
   1f56c:	b.le	1f608 <PyInit__decimal@@Base+0x18aa4>
   1f570:	ldrb	w9, [x25]
   1f574:	mov	w27, #0x1                   	// #1
   1f578:	sub	x24, x9, x24
   1f57c:	b	1f4a0 <PyInit__decimal@@Base+0x1893c>
   1f580:	cmp	x22, #0x1
   1f584:	b.lt	1f5e8 <PyInit__decimal@@Base+0x18a84>  // b.tstop
   1f588:	cmp	w27, #0x0
   1f58c:	ldp	x11, x12, [x19]
   1f590:	cset	w9, ne  // ne = any
   1f594:	cmp	x23, #0x1
   1f598:	cset	w10, gt
   1f59c:	and	w9, w9, w10
   1f5a0:	sub	x23, x23, x9
   1f5a4:	add	x9, x11, x22
   1f5a8:	ldr	x8, [x21, #32]
   1f5ac:	str	x9, [x19]
   1f5b0:	ldp	x9, x10, [x19, #16]
   1f5b4:	add	x11, x12, #0x1
   1f5b8:	str	x11, [x19, #8]
   1f5bc:	sub	x11, x9, x22
   1f5c0:	str	x11, [x19, #16]
   1f5c4:	cbz	x10, 1f5e8 <PyInit__decimal@@Base+0x18a84>
   1f5c8:	add	x9, x10, x9
   1f5cc:	sub	x8, x8, #0x1
   1f5d0:	sub	x9, x9, #0x1
   1f5d4:	mov	x10, x22
   1f5d8:	ldrb	w11, [x8, x10]
   1f5dc:	subs	x10, x10, #0x1
   1f5e0:	strb	w11, [x9], #-1
   1f5e4:	b.gt	1f5d8 <PyInit__decimal@@Base+0x18a74>
   1f5e8:	ldrb	w8, [x25]
   1f5ec:	mov	w9, wzr
   1f5f0:	cbz	w8, 1f498 <PyInit__decimal@@Base+0x18934>
   1f5f4:	mov	x8, x25
   1f5f8:	ldrb	w9, [x8, #1]!
   1f5fc:	cmp	w9, #0x0
   1f600:	csel	x25, x25, x8, eq  // eq = none
   1f604:	b	1f494 <PyInit__decimal@@Base+0x18930>
   1f608:	cbz	x20, 1f638 <PyInit__decimal@@Base+0x18ad4>
   1f60c:	ldr	q0, [x19]
   1f610:	ldp	x10, x8, [x19, #16]
   1f614:	mov	w9, #0x1                   	// #1
   1f618:	dup	v1.2d, x9
   1f61c:	add	v0.2d, v0.2d, v1.2d
   1f620:	sub	x9, x10, #0x1
   1f624:	str	q0, [x19]
   1f628:	str	x9, [x19, #16]
   1f62c:	cbz	x8, 1f648 <PyInit__decimal@@Base+0x18ae4>
   1f630:	ldrb	w10, [x20]
   1f634:	strb	w10, [x8, x9]
   1f638:	ldr	x8, [x19, #24]
   1f63c:	cbz	x8, 1f648 <PyInit__decimal@@Base+0x18ae4>
   1f640:	ldr	x9, [x19]
   1f644:	strb	wzr, [x8, x9]
   1f648:	ldp	x20, x19, [sp, #80]
   1f64c:	ldp	x22, x21, [sp, #64]
   1f650:	ldp	x24, x23, [sp, #48]
   1f654:	ldp	x26, x25, [sp, #32]
   1f658:	ldp	x28, x27, [sp, #16]
   1f65c:	ldp	x29, x30, [sp], #96
   1f660:	ret
   1f664:	stp	x29, x30, [sp, #-32]!
   1f668:	stp	x20, x19, [sp, #16]
   1f66c:	mov	x29, sp
   1f670:	umulh	x8, x1, x0
   1f674:	cmp	xzr, x8
   1f678:	mov	x19, xzr
   1f67c:	b.ne	1f6ac <PyInit__decimal@@Base+0x18b48>  // b.any
   1f680:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f684:	ldr	x8, [x8, #1360]
   1f688:	mul	x20, x1, x0
   1f68c:	mov	x0, x20
   1f690:	blr	x8
   1f694:	mov	x19, x0
   1f698:	cbz	x0, 1f6ac <PyInit__decimal@@Base+0x18b48>
   1f69c:	mov	x0, x19
   1f6a0:	mov	w1, wzr
   1f6a4:	mov	x2, x20
   1f6a8:	bl	6660 <memset@plt>
   1f6ac:	mov	x0, x19
   1f6b0:	ldp	x20, x19, [sp, #16]
   1f6b4:	ldp	x29, x30, [sp], #32
   1f6b8:	ret
   1f6bc:	umulh	x8, x1, x0
   1f6c0:	cmp	xzr, x8
   1f6c4:	b.eq	1f6d0 <PyInit__decimal@@Base+0x18b6c>  // b.none
   1f6c8:	mov	x0, xzr
   1f6cc:	ret
   1f6d0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f6d4:	ldr	x2, [x8, #1360]
   1f6d8:	mul	x0, x1, x0
   1f6dc:	br	x2
   1f6e0:	umulh	x8, x1, x0
   1f6e4:	cmp	xzr, x8
   1f6e8:	b.eq	1f6f4 <PyInit__decimal@@Base+0x18b90>  // b.none
   1f6ec:	mov	x0, xzr
   1f6f0:	ret
   1f6f4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f6f8:	ldr	x2, [x8, #1376]
   1f6fc:	br	x2
   1f700:	stp	x29, x30, [sp, #-32]!
   1f704:	stp	x20, x19, [sp, #16]
   1f708:	mov	x29, sp
   1f70c:	umulh	x8, x2, x1
   1f710:	mov	x19, x3
   1f714:	cmp	xzr, x8
   1f718:	mov	x20, x0
   1f71c:	b.ne	1f738 <PyInit__decimal@@Base+0x18bd4>  // b.any
   1f720:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f724:	ldr	x8, [x8, #1368]
   1f728:	mul	x1, x2, x1
   1f72c:	mov	x0, x20
   1f730:	blr	x8
   1f734:	cbnz	x0, 1f744 <PyInit__decimal@@Base+0x18be0>
   1f738:	mov	w8, #0x1                   	// #1
   1f73c:	mov	x0, x20
   1f740:	strb	w8, [x19]
   1f744:	ldp	x20, x19, [sp, #16]
   1f748:	ldp	x29, x30, [sp], #32
   1f74c:	ret
   1f750:	umulh	x8, x2, x1
   1f754:	cmp	xzr, x8
   1f758:	b.ne	1f768 <PyInit__decimal@@Base+0x18c04>  // b.any
   1f75c:	mul	x8, x2, x1
   1f760:	adds	x0, x8, x0
   1f764:	b.cc	1f770 <PyInit__decimal@@Base+0x18c0c>  // b.lo, b.ul, b.last
   1f768:	mov	x0, xzr
   1f76c:	ret
   1f770:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f774:	ldr	x1, [x8, #1360]
   1f778:	br	x1
   1f77c:	stp	x29, x30, [sp, #-48]!
   1f780:	str	x21, [sp, #16]
   1f784:	stp	x20, x19, [sp, #32]
   1f788:	mov	x29, sp
   1f78c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f790:	ldr	x8, [x8, #1352]
   1f794:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f798:	ldr	x9, [x21, #1360]
   1f79c:	cmp	x8, x0
   1f7a0:	csel	x20, x8, x0, gt
   1f7a4:	mov	w0, #0x30                  	// #48
   1f7a8:	blr	x9
   1f7ac:	mov	x19, x0
   1f7b0:	cbz	x0, 1f7fc <PyInit__decimal@@Base+0x18c98>
   1f7b4:	cmp	xzr, x20, lsr #61
   1f7b8:	b.eq	1f7c4 <PyInit__decimal@@Base+0x18c60>  // b.none
   1f7bc:	str	xzr, [x19, #40]
   1f7c0:	b	1f7e8 <PyInit__decimal@@Base+0x18c84>
   1f7c4:	ldr	x8, [x21, #1360]
   1f7c8:	lsl	x0, x20, #3
   1f7cc:	blr	x8
   1f7d0:	str	x0, [x19, #40]
   1f7d4:	cbz	x0, 1f7e8 <PyInit__decimal@@Base+0x18c84>
   1f7d8:	strb	wzr, [x19]
   1f7dc:	stp	xzr, xzr, [x19, #8]
   1f7e0:	stp	xzr, x20, [x19, #24]
   1f7e4:	b	1f7fc <PyInit__decimal@@Base+0x18c98>
   1f7e8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f7ec:	ldr	x8, [x8, #1384]
   1f7f0:	mov	x0, x19
   1f7f4:	blr	x8
   1f7f8:	mov	x19, xzr
   1f7fc:	mov	x0, x19
   1f800:	ldp	x20, x19, [sp, #32]
   1f804:	ldr	x21, [sp, #16]
   1f808:	ldp	x29, x30, [sp], #48
   1f80c:	ret
   1f810:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f814:	ldr	x0, [x8, #1352]
   1f818:	b	1f77c <PyInit__decimal@@Base+0x18c18>
   1f81c:	stp	x29, x30, [sp, #-32]!
   1f820:	stp	x20, x19, [sp, #16]
   1f824:	mov	x29, sp
   1f828:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f82c:	ldr	x8, [x8, #1352]
   1f830:	mov	x19, x0
   1f834:	mov	x0, x8
   1f838:	bl	1f77c <PyInit__decimal@@Base+0x18c18>
   1f83c:	mov	x20, x0
   1f840:	cbnz	x0, 1f850 <PyInit__decimal@@Base+0x18cec>
   1f844:	mov	w1, #0x200                 	// #512
   1f848:	mov	x0, x19
   1f84c:	bl	1bef8 <PyInit__decimal@@Base+0x15394>
   1f850:	mov	x0, x20
   1f854:	ldp	x20, x19, [sp, #16]
   1f858:	ldp	x29, x30, [sp], #32
   1f85c:	ret
   1f860:	stp	x29, x30, [sp, #-48]!
   1f864:	stp	x22, x21, [sp, #16]
   1f868:	stp	x20, x19, [sp, #32]
   1f86c:	mov	x29, sp
   1f870:	ldr	x21, [x0, #40]
   1f874:	mov	x19, x0
   1f878:	cmp	xzr, x1, lsr #61
   1f87c:	mov	x20, x2
   1f880:	b.eq	1f88c <PyInit__decimal@@Base+0x18d28>  // b.none
   1f884:	str	xzr, [x19, #40]
   1f888:	b	1f8cc <PyInit__decimal@@Base+0x18d68>
   1f88c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f890:	ldr	x8, [x8, #1360]
   1f894:	lsl	x0, x1, #3
   1f898:	mov	x22, x1
   1f89c:	blr	x8
   1f8a0:	str	x0, [x19, #40]
   1f8a4:	cbz	x0, 1f8cc <PyInit__decimal@@Base+0x18d68>
   1f8a8:	ldr	x8, [x19, #32]
   1f8ac:	mov	x1, x21
   1f8b0:	lsl	x2, x8, #3
   1f8b4:	bl	6460 <memcpy@plt>
   1f8b8:	mov	x0, x19
   1f8bc:	str	x22, [x19, #32]
   1f8c0:	bl	204f0 <PyInit__decimal@@Base+0x1998c>
   1f8c4:	mov	w0, #0x1                   	// #1
   1f8c8:	b	1f8f8 <PyInit__decimal@@Base+0x18d94>
   1f8cc:	mov	x0, x19
   1f8d0:	str	x21, [x19, #40]
   1f8d4:	bl	20488 <PyInit__decimal@@Base+0x19924>
   1f8d8:	mov	x0, x19
   1f8dc:	bl	204c0 <PyInit__decimal@@Base+0x1995c>
   1f8e0:	stp	xzr, xzr, [x19, #8]
   1f8e4:	str	xzr, [x19, #24]
   1f8e8:	ldr	w8, [x20]
   1f8ec:	mov	w0, wzr
   1f8f0:	orr	w8, w8, #0x200
   1f8f4:	str	w8, [x20]
   1f8f8:	ldp	x20, x19, [sp, #32]
   1f8fc:	ldp	x22, x21, [sp, #16]
   1f900:	ldp	x29, x30, [sp], #48
   1f904:	ret
   1f908:	stp	x29, x30, [sp, #-48]!
   1f90c:	stp	x22, x21, [sp, #16]
   1f910:	stp	x20, x19, [sp, #32]
   1f914:	mov	x29, sp
   1f918:	ldr	x22, [x0, #40]
   1f91c:	mov	x19, x0
   1f920:	lsr	x8, x1, #61
   1f924:	mov	x20, x2
   1f928:	cbz	x8, 1f934 <PyInit__decimal@@Base+0x18dd0>
   1f92c:	str	xzr, [x19, #40]
   1f930:	b	1f968 <PyInit__decimal@@Base+0x18e04>
   1f934:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f938:	ldr	x8, [x8, #1376]
   1f93c:	mov	x21, x1
   1f940:	mov	w1, #0x8                   	// #8
   1f944:	mov	x0, x21
   1f948:	blr	x8
   1f94c:	str	x0, [x19, #40]
   1f950:	cbz	x0, 1f968 <PyInit__decimal@@Base+0x18e04>
   1f954:	mov	x0, x19
   1f958:	str	x21, [x19, #32]
   1f95c:	bl	204f0 <PyInit__decimal@@Base+0x1998c>
   1f960:	mov	w0, #0x1                   	// #1
   1f964:	b	1f994 <PyInit__decimal@@Base+0x18e30>
   1f968:	mov	x0, x19
   1f96c:	str	x22, [x19, #40]
   1f970:	bl	20488 <PyInit__decimal@@Base+0x19924>
   1f974:	mov	x0, x19
   1f978:	bl	204c0 <PyInit__decimal@@Base+0x1995c>
   1f97c:	stp	xzr, xzr, [x19, #8]
   1f980:	str	xzr, [x19, #24]
   1f984:	ldr	w8, [x20]
   1f988:	mov	w0, wzr
   1f98c:	orr	w8, w8, #0x200
   1f990:	str	w8, [x20]
   1f994:	ldp	x20, x19, [sp, #32]
   1f998:	ldp	x22, x21, [sp, #16]
   1f99c:	ldp	x29, x30, [sp], #48
   1f9a0:	ret
   1f9a4:	stp	x29, x30, [sp, #-48]!
   1f9a8:	stp	x22, x21, [sp, #16]
   1f9ac:	stp	x20, x19, [sp, #32]
   1f9b0:	mov	x29, sp
   1f9b4:	ldr	x22, [x0, #40]
   1f9b8:	mov	x19, x0
   1f9bc:	mov	x21, x1
   1f9c0:	cmp	xzr, x1, lsr #61
   1f9c4:	mov	x20, x2
   1f9c8:	b.ne	1f9ec <PyInit__decimal@@Base+0x18e88>  // b.any
   1f9cc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   1f9d0:	ldr	x8, [x8, #1368]
   1f9d4:	lsl	x1, x21, #3
   1f9d8:	mov	x0, x22
   1f9dc:	blr	x8
   1f9e0:	cbz	x0, 1f9ec <PyInit__decimal@@Base+0x18e88>
   1f9e4:	stp	x21, x0, [x19, #32]
   1f9e8:	b	1fa28 <PyInit__decimal@@Base+0x18ec4>
   1f9ec:	ldr	x8, [x19, #32]
   1f9f0:	str	x22, [x19, #40]
   1f9f4:	cmp	x8, x21
   1f9f8:	b.ge	1fa28 <PyInit__decimal@@Base+0x18ec4>  // b.tcont
   1f9fc:	mov	x0, x19
   1fa00:	bl	20488 <PyInit__decimal@@Base+0x19924>
   1fa04:	mov	x0, x19
   1fa08:	bl	204c0 <PyInit__decimal@@Base+0x1995c>
   1fa0c:	stp	xzr, xzr, [x19, #8]
   1fa10:	str	xzr, [x19, #24]
   1fa14:	ldr	w8, [x20]
   1fa18:	mov	w0, wzr
   1fa1c:	orr	w8, w8, #0x200
   1fa20:	str	w8, [x20]
   1fa24:	b	1fa2c <PyInit__decimal@@Base+0x18ec8>
   1fa28:	mov	w0, #0x1                   	// #1
   1fa2c:	ldp	x20, x19, [sp, #32]
   1fa30:	ldp	x22, x21, [sp, #16]
   1fa34:	ldp	x29, x30, [sp], #48
   1fa38:	ret
   1fa3c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   1fa40:	add	x0, x0, #0xb78
   1fa44:	ret
   1fa48:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1fa4c:	add	x8, x8, #0xe70
   1fa50:	ldr	x9, [x8, #72]
   1fa54:	cmp	x9, x0
   1fa58:	b.ls	1fa84 <PyInit__decimal@@Base+0x18f20>  // b.plast
   1fa5c:	ldr	x9, [x8, #32]
   1fa60:	cmp	x9, x0
   1fa64:	b.ls	1faac <PyInit__decimal@@Base+0x18f48>  // b.plast
   1fa68:	ldr	x9, [x8, #16]
   1fa6c:	cmp	x9, x0
   1fa70:	b.ls	1faf0 <PyInit__decimal@@Base+0x18f8c>  // b.plast
   1fa74:	ldr	x8, [x8, #8]
   1fa78:	cmp	x8, x0
   1fa7c:	mov	w8, #0x1                   	// #1
   1fa80:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fa84:	ldr	x9, [x8, #112]
   1fa88:	cmp	x9, x0
   1fa8c:	b.ls	1fac8 <PyInit__decimal@@Base+0x18f64>  // b.plast
   1fa90:	ldr	x9, [x8, #88]
   1fa94:	cmp	x9, x0
   1fa98:	b.ls	1fb00 <PyInit__decimal@@Base+0x18f9c>  // b.plast
   1fa9c:	ldr	x8, [x8, #80]
   1faa0:	cmp	x8, x0
   1faa4:	mov	w8, #0xa                   	// #10
   1faa8:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1faac:	ldr	x9, [x8, #48]
   1fab0:	cmp	x9, x0
   1fab4:	b.ls	1fb1c <PyInit__decimal@@Base+0x18fb8>  // b.plast
   1fab8:	ldr	x8, [x8, #40]
   1fabc:	cmp	x8, x0
   1fac0:	mov	w8, #0x5                   	// #5
   1fac4:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fac8:	ldr	x9, [x8, #144]
   1facc:	cmp	x9, x0
   1fad0:	b.ls	1fb38 <PyInit__decimal@@Base+0x18fd4>  // b.plast
   1fad4:	ldr	x9, [x8, #128]
   1fad8:	cmp	x9, x0
   1fadc:	b.ls	1fb48 <PyInit__decimal@@Base+0x18fe4>  // b.plast
   1fae0:	ldr	x8, [x8, #120]
   1fae4:	cmp	x8, x0
   1fae8:	mov	w8, #0xf                   	// #15
   1faec:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1faf0:	ldr	x8, [x8, #24]
   1faf4:	cmp	x8, x0
   1faf8:	mov	w8, #0x3                   	// #3
   1fafc:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fb00:	ldr	x9, [x8, #104]
   1fb04:	cmp	x9, x0
   1fb08:	b.ls	1fb5c <PyInit__decimal@@Base+0x18ff8>  // b.plast
   1fb0c:	ldr	x8, [x8, #96]
   1fb10:	cmp	x8, x0
   1fb14:	mov	w8, #0xc                   	// #12
   1fb18:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fb1c:	ldr	x9, [x8, #64]
   1fb20:	cmp	x9, x0
   1fb24:	b.ls	1fb64 <PyInit__decimal@@Base+0x19000>  // b.plast
   1fb28:	ldr	x8, [x8, #56]
   1fb2c:	cmp	x8, x0
   1fb30:	mov	w8, #0x7                   	// #7
   1fb34:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fb38:	ldr	x8, [x8, #152]
   1fb3c:	cmp	x8, x0
   1fb40:	mov	w8, #0x13                  	// #19
   1fb44:	b	1fb54 <PyInit__decimal@@Base+0x18ff0>
   1fb48:	ldr	x8, [x8, #136]
   1fb4c:	cmp	x8, x0
   1fb50:	mov	w8, #0x11                  	// #17
   1fb54:	cinc	w0, w8, ls  // ls = plast
   1fb58:	ret
   1fb5c:	mov	w0, #0xe                   	// #14
   1fb60:	ret
   1fb64:	mov	w0, #0x9                   	// #9
   1fb68:	ret
   1fb6c:	ldp	x8, x9, [x0, #8]
   1fb70:	add	x8, x8, x9
   1fb74:	sub	x0, x8, #0x1
   1fb78:	ret
   1fb7c:	ldr	x8, [x0, #16]
   1fb80:	ldr	x9, [x0]
   1fb84:	sub	x8, x8, x9
   1fb88:	add	x0, x8, #0x1
   1fb8c:	ret
   1fb90:	ldp	x9, x8, [x0]
   1fb94:	sub	x8, x8, x9
   1fb98:	add	x0, x8, #0x1
   1fb9c:	ret
   1fba0:	ldr	x8, [x0, #40]
   1fba4:	ldr	x9, [x0, #24]
   1fba8:	add	x8, x8, x9, lsl #3
   1fbac:	ldur	x0, [x8, #-8]
   1fbb0:	ret
   1fbb4:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   1fbb8:	add	x8, x8, #0xe70
   1fbbc:	ldr	x9, [x8, #72]
   1fbc0:	cmp	x9, x0
   1fbc4:	b.ls	1fbf0 <PyInit__decimal@@Base+0x1908c>  // b.plast
   1fbc8:	ldr	x9, [x8, #32]
   1fbcc:	cmp	x9, x0
   1fbd0:	b.ls	1fc18 <PyInit__decimal@@Base+0x190b4>  // b.plast
   1fbd4:	ldr	x9, [x8, #16]
   1fbd8:	cmp	x9, x0
   1fbdc:	b.ls	1fc5c <PyInit__decimal@@Base+0x190f8>  // b.plast
   1fbe0:	ldr	x9, [x8, #8]
   1fbe4:	cmp	x9, x0
   1fbe8:	mov	w9, #0x1                   	// #1
   1fbec:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fbf0:	ldr	x9, [x8, #112]
   1fbf4:	cmp	x9, x0
   1fbf8:	b.ls	1fc34 <PyInit__decimal@@Base+0x190d0>  // b.plast
   1fbfc:	ldr	x9, [x8, #88]
   1fc00:	cmp	x9, x0
   1fc04:	b.ls	1fc6c <PyInit__decimal@@Base+0x19108>  // b.plast
   1fc08:	ldr	x9, [x8, #80]
   1fc0c:	cmp	x9, x0
   1fc10:	mov	w9, #0xa                   	// #10
   1fc14:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fc18:	ldr	x9, [x8, #48]
   1fc1c:	cmp	x9, x0
   1fc20:	b.ls	1fc88 <PyInit__decimal@@Base+0x19124>  // b.plast
   1fc24:	ldr	x9, [x8, #40]
   1fc28:	cmp	x9, x0
   1fc2c:	mov	w9, #0x5                   	// #5
   1fc30:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fc34:	ldr	x9, [x8, #144]
   1fc38:	cmp	x9, x0
   1fc3c:	b.ls	1fca4 <PyInit__decimal@@Base+0x19140>  // b.plast
   1fc40:	ldr	x9, [x8, #128]
   1fc44:	cmp	x9, x0
   1fc48:	b.ls	1fcb4 <PyInit__decimal@@Base+0x19150>  // b.plast
   1fc4c:	ldr	x9, [x8, #120]
   1fc50:	cmp	x9, x0
   1fc54:	mov	w9, #0xf                   	// #15
   1fc58:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fc5c:	ldr	x9, [x8, #24]
   1fc60:	cmp	x9, x0
   1fc64:	mov	w9, #0x3                   	// #3
   1fc68:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fc6c:	ldr	x9, [x8, #104]
   1fc70:	cmp	x9, x0
   1fc74:	b.ls	1fcd4 <PyInit__decimal@@Base+0x19170>  // b.plast
   1fc78:	ldr	x9, [x8, #96]
   1fc7c:	cmp	x9, x0
   1fc80:	mov	w9, #0xc                   	// #12
   1fc84:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fc88:	ldr	x9, [x8, #64]
   1fc8c:	cmp	x9, x0
   1fc90:	b.ls	1fcdc <PyInit__decimal@@Base+0x19178>  // b.plast
   1fc94:	ldr	x9, [x8, #56]
   1fc98:	cmp	x9, x0
   1fc9c:	mov	w9, #0x7                   	// #7
   1fca0:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fca4:	ldr	x9, [x8, #152]
   1fca8:	cmp	x9, x0
   1fcac:	mov	w9, #0x13                  	// #19
   1fcb0:	b	1fcc0 <PyInit__decimal@@Base+0x1915c>
   1fcb4:	ldr	x9, [x8, #136]
   1fcb8:	cmp	x9, x0
   1fcbc:	mov	w9, #0x11                  	// #17
   1fcc0:	cinc	x9, x9, ls  // ls = plast
   1fcc4:	add	x8, x8, x9, lsl #3
   1fcc8:	ldur	x8, [x8, #-8]
   1fccc:	udiv	x0, x0, x8
   1fcd0:	ret
   1fcd4:	mov	w9, #0xe                   	// #14
   1fcd8:	b	1fcc4 <PyInit__decimal@@Base+0x19160>
   1fcdc:	mov	w9, #0x9                   	// #9
   1fce0:	b	1fcc4 <PyInit__decimal@@Base+0x19160>
   1fce4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1fce8:	movk	x8, #0xcccd
   1fcec:	umulh	x8, x0, x8
   1fcf0:	lsr	x8, x8, #3
   1fcf4:	mov	w9, #0xa                   	// #10
   1fcf8:	msub	x0, x8, x9, x0
   1fcfc:	ret
   1fd00:	mov	x8, #0x9436                	// #37942
   1fd04:	movk	x8, #0x50d7, lsl #16
   1fd08:	movk	x8, #0x435e, lsl #32
   1fd0c:	movk	x8, #0xd79, lsl #48
   1fd10:	smulh	x8, x0, x8
   1fd14:	add	x8, x8, x8, lsr #63
   1fd18:	mov	x9, #0xffffffffffffffed    	// #-19
   1fd1c:	mul	x9, x8, x9
   1fd20:	cmn	x9, x0
   1fd24:	cinc	x0, x8, ne  // ne = any
   1fd28:	ret
   1fd2c:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   1fd30:	add	x9, x9, #0xe70
   1fd34:	ldr	x10, [x9, #72]
   1fd38:	cmp	x0, #0x0
   1fd3c:	cneg	x8, x0, mi  // mi = first
   1fd40:	cmp	x10, x8
   1fd44:	b.ls	1fd70 <PyInit__decimal@@Base+0x1920c>  // b.plast
   1fd48:	ldr	x10, [x9, #32]
   1fd4c:	cmp	x10, x8
   1fd50:	b.ls	1fd98 <PyInit__decimal@@Base+0x19234>  // b.plast
   1fd54:	ldr	x10, [x9, #16]
   1fd58:	cmp	x10, x8
   1fd5c:	b.ls	1fddc <PyInit__decimal@@Base+0x19278>  // b.plast
   1fd60:	ldr	x9, [x9, #8]
   1fd64:	cmp	x9, x8
   1fd68:	mov	w8, #0x1                   	// #1
   1fd6c:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fd70:	ldr	x10, [x9, #112]
   1fd74:	cmp	x10, x8
   1fd78:	b.ls	1fdb4 <PyInit__decimal@@Base+0x19250>  // b.plast
   1fd7c:	ldr	x10, [x9, #88]
   1fd80:	cmp	x10, x8
   1fd84:	b.ls	1fdec <PyInit__decimal@@Base+0x19288>  // b.plast
   1fd88:	ldr	x9, [x9, #80]
   1fd8c:	cmp	x9, x8
   1fd90:	mov	w8, #0xa                   	// #10
   1fd94:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fd98:	ldr	x10, [x9, #48]
   1fd9c:	cmp	x10, x8
   1fda0:	b.ls	1fe08 <PyInit__decimal@@Base+0x192a4>  // b.plast
   1fda4:	ldr	x9, [x9, #40]
   1fda8:	cmp	x9, x8
   1fdac:	mov	w8, #0x5                   	// #5
   1fdb0:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fdb4:	ldr	x10, [x9, #144]
   1fdb8:	cmp	x10, x8
   1fdbc:	b.ls	1fe24 <PyInit__decimal@@Base+0x192c0>  // b.plast
   1fdc0:	ldr	x10, [x9, #128]
   1fdc4:	cmp	x10, x8
   1fdc8:	b.ls	1fe34 <PyInit__decimal@@Base+0x192d0>  // b.plast
   1fdcc:	ldr	x9, [x9, #120]
   1fdd0:	cmp	x9, x8
   1fdd4:	mov	w8, #0xf                   	// #15
   1fdd8:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fddc:	ldr	x9, [x9, #24]
   1fde0:	cmp	x9, x8
   1fde4:	mov	w8, #0x3                   	// #3
   1fde8:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fdec:	ldr	x10, [x9, #104]
   1fdf0:	cmp	x10, x8
   1fdf4:	b.ls	1fe48 <PyInit__decimal@@Base+0x192e4>  // b.plast
   1fdf8:	ldr	x9, [x9, #96]
   1fdfc:	cmp	x9, x8
   1fe00:	mov	w8, #0xc                   	// #12
   1fe04:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fe08:	ldr	x10, [x9, #64]
   1fe0c:	cmp	x10, x8
   1fe10:	b.ls	1fe50 <PyInit__decimal@@Base+0x192ec>  // b.plast
   1fe14:	ldr	x9, [x9, #56]
   1fe18:	cmp	x9, x8
   1fe1c:	mov	w8, #0x7                   	// #7
   1fe20:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fe24:	ldr	x9, [x9, #152]
   1fe28:	cmp	x9, x8
   1fe2c:	mov	w8, #0x13                  	// #19
   1fe30:	b	1fe40 <PyInit__decimal@@Base+0x192dc>
   1fe34:	ldr	x9, [x9, #136]
   1fe38:	cmp	x9, x8
   1fe3c:	mov	w8, #0x11                  	// #17
   1fe40:	cinc	w0, w8, ls  // ls = plast
   1fe44:	ret
   1fe48:	mov	w0, #0xe                   	// #14
   1fe4c:	ret
   1fe50:	mov	w0, #0x9                   	// #9
   1fe54:	ret
   1fe58:	mov	w0, #0x1                   	// #1
   1fe5c:	ret
   1fe60:	ldrb	w8, [x0]
   1fe64:	tst	w8, #0xe
   1fe68:	cset	w0, eq  // eq = none
   1fe6c:	ret
   1fe70:	ldrb	w8, [x0]
   1fe74:	and	w0, w8, #0x2
   1fe78:	ret
   1fe7c:	ldrb	w8, [x0]
   1fe80:	and	w0, w8, #0xc
   1fe84:	ret
   1fe88:	ldrb	w8, [x0]
   1fe8c:	and	w0, w8, #0x1
   1fe90:	ret
   1fe94:	ldrb	w8, [x0]
   1fe98:	mvn	w8, w8
   1fe9c:	and	w0, w8, #0x1
   1fea0:	ret
   1fea4:	ldrb	w8, [x0]
   1fea8:	and	w0, w8, #0x4
   1feac:	ret
   1feb0:	ldrb	w8, [x0]
   1feb4:	and	w0, w8, #0x1
   1feb8:	ret
   1febc:	ldrb	w8, [x0]
   1fec0:	and	w0, w8, #0x8
   1fec4:	ret
   1fec8:	ldrb	w8, [x0]
   1fecc:	and	w0, w8, #0xe
   1fed0:	ret
   1fed4:	ldrb	w8, [x0]
   1fed8:	tst	w8, #0xe
   1fedc:	b.eq	1fee8 <PyInit__decimal@@Base+0x19384>  // b.none
   1fee0:	mov	w0, wzr
   1fee4:	ret
   1fee8:	ldr	x8, [x0, #40]
   1feec:	ldr	x9, [x0, #24]
   1fef0:	add	x8, x8, x9, lsl #3
   1fef4:	ldur	x8, [x8, #-8]
   1fef8:	cmp	x8, #0x0
   1fefc:	cset	w0, eq  // eq = none
   1ff00:	ret
   1ff04:	ldr	x8, [x0, #40]
   1ff08:	ldr	x9, [x0, #24]
   1ff0c:	add	x8, x8, x9, lsl #3
   1ff10:	ldur	x8, [x8, #-8]
   1ff14:	cmp	x8, #0x0
   1ff18:	cset	w0, eq  // eq = none
   1ff1c:	ret
   1ff20:	ldrb	w8, [x0]
   1ff24:	tst	w8, #0xe
   1ff28:	b.eq	1ff34 <PyInit__decimal@@Base+0x193d0>  // b.none
   1ff2c:	mov	w0, wzr
   1ff30:	ret
   1ff34:	ldr	x8, [x0, #40]
   1ff38:	ldr	x9, [x0, #24]
   1ff3c:	add	x8, x8, x9, lsl #3
   1ff40:	ldur	x8, [x8, #-8]
   1ff44:	cbz	x8, 1ff2c <PyInit__decimal@@Base+0x193c8>
   1ff48:	ldp	x8, x9, [x0, #8]
   1ff4c:	ldr	x10, [x1, #16]
   1ff50:	add	x8, x8, x9
   1ff54:	sub	x8, x8, #0x1
   1ff58:	cmp	x8, x10
   1ff5c:	cset	w0, ge  // ge = tcont
   1ff60:	ret
   1ff64:	ldrb	w8, [x0]
   1ff68:	tst	w8, #0xe
   1ff6c:	b.eq	1ff78 <PyInit__decimal@@Base+0x19414>  // b.none
   1ff70:	mov	w0, wzr
   1ff74:	ret
   1ff78:	ldr	x8, [x0, #40]
   1ff7c:	ldr	x9, [x0, #24]
   1ff80:	add	x8, x8, x9, lsl #3
   1ff84:	ldur	x8, [x8, #-8]
   1ff88:	cbz	x8, 1ff70 <PyInit__decimal@@Base+0x1940c>
   1ff8c:	ldp	x8, x9, [x0, #8]
   1ff90:	ldr	x10, [x1, #16]
   1ff94:	add	x8, x8, x9
   1ff98:	sub	x8, x8, #0x1
   1ff9c:	cmp	x8, x10
   1ffa0:	cset	w0, lt  // lt = tstop
   1ffa4:	ret
   1ffa8:	and	w0, w0, #0x1
   1ffac:	ret
   1ffb0:	ldr	x8, [x0, #40]
   1ffb4:	ldr	w8, [x8]
   1ffb8:	and	w0, w8, #0x1
   1ffbc:	ret
   1ffc0:	ldrb	w8, [x0]
   1ffc4:	and	w0, w8, #0x1
   1ffc8:	ret
   1ffcc:	ldrb	w8, [x0]
   1ffd0:	mov	w9, #0x1                   	// #1
   1ffd4:	ubfiz	w8, w8, #1, #1
   1ffd8:	sub	w0, w9, w8
   1ffdc:	ret
   1ffe0:	mov	w0, #0xa                   	// #10
   1ffe4:	ret
   1ffe8:	ldrb	w8, [x0]
   1ffec:	mov	w9, #0x1                   	// #1
   1fff0:	bic	w0, w9, w8, lsr #4
   1fff4:	ret
   1fff8:	ldrb	w8, [x0]
   1fffc:	and	w0, w8, #0x10
   20000:	ret
   20004:	ldrb	w8, [x0]
   20008:	cmp	w8, #0x20
   2000c:	cset	w0, cc  // cc = lo, ul, last
   20010:	ret
   20014:	ldrb	w8, [x0]
   20018:	and	w0, w8, #0x20
   2001c:	ret
   20020:	ldrb	w8, [x0]
   20024:	and	w0, w8, #0x40
   20028:	ret
   2002c:	ldrb	w8, [x0]
   20030:	and	w0, w8, #0x80
   20034:	ret
   20038:	cbz	x1, 20054 <PyInit__decimal@@Base+0x194f0>
   2003c:	stp	x29, x30, [sp, #-16]!
   20040:	mov	x29, sp
   20044:	lsl	x2, x1, #3
   20048:	mov	w1, wzr
   2004c:	bl	6660 <memset@plt>
   20050:	ldp	x29, x30, [sp], #16
   20054:	ret
   20058:	stp	x29, x30, [sp, #-32]!
   2005c:	stp	x20, x19, [sp, #16]
   20060:	mov	x29, sp
   20064:	ldrb	w8, [x0]
   20068:	mov	x19, x0
   2006c:	adrp	x20, 4c000 <PyInit__decimal@@Base+0x4549c>
   20070:	cmp	w8, #0x1f
   20074:	b.hi	20088 <PyInit__decimal@@Base+0x19524>  // b.pmore
   20078:	ldr	x8, [x20, #1384]
   2007c:	ldr	x0, [x19, #40]
   20080:	blr	x8
   20084:	ldrb	w8, [x19]
   20088:	tbnz	w8, #4, 200a0 <PyInit__decimal@@Base+0x1953c>
   2008c:	ldr	x1, [x20, #1384]
   20090:	mov	x0, x19
   20094:	ldp	x20, x19, [sp, #16]
   20098:	ldp	x29, x30, [sp], #32
   2009c:	br	x1
   200a0:	ldp	x20, x19, [sp, #16]
   200a4:	ldp	x29, x30, [sp], #32
   200a8:	ret
   200ac:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   200b0:	ldr	x9, [x8, #1352]
   200b4:	ldr	x8, [x0, #32]
   200b8:	cmp	x9, x1
   200bc:	csel	x1, x1, x9, lt  // lt = tstop
   200c0:	cmp	x1, x8
   200c4:	b.eq	200e0 <PyInit__decimal@@Base+0x1957c>  // b.none
   200c8:	ldrb	w9, [x0]
   200cc:	tbnz	w9, #5, 200d4 <PyInit__decimal@@Base+0x19570>
   200d0:	b	1f9a4 <PyInit__decimal@@Base+0x18e40>
   200d4:	cmp	x1, x8
   200d8:	b.le	200e0 <PyInit__decimal@@Base+0x1957c>
   200dc:	b	1f860 <PyInit__decimal@@Base+0x18cfc>
   200e0:	mov	w0, #0x1                   	// #1
   200e4:	ret
   200e8:	stp	x29, x30, [sp, #-32]!
   200ec:	stp	x20, x19, [sp, #16]
   200f0:	mov	x29, sp
   200f4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   200f8:	ldr	x9, [x8, #1352]
   200fc:	ldr	x8, [x0, #32]
   20100:	mov	x19, x0
   20104:	cmp	x9, x1
   20108:	csel	x20, x1, x9, lt  // lt = tstop
   2010c:	cmp	x20, x8
   20110:	b.eq	2014c <PyInit__decimal@@Base+0x195e8>  // b.none
   20114:	ldrb	w9, [x19]
   20118:	tbnz	w9, #5, 20130 <PyInit__decimal@@Base+0x195cc>
   2011c:	mov	x0, x19
   20120:	mov	x1, x20
   20124:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   20128:	cbnz	w0, 2014c <PyInit__decimal@@Base+0x195e8>
   2012c:	b	20164 <PyInit__decimal@@Base+0x19600>
   20130:	cmp	x20, x8
   20134:	b.le	2014c <PyInit__decimal@@Base+0x195e8>
   20138:	mov	x0, x19
   2013c:	mov	x1, x20
   20140:	ldp	x20, x19, [sp, #16]
   20144:	ldp	x29, x30, [sp], #32
   20148:	b	1f908 <PyInit__decimal@@Base+0x18da4>
   2014c:	cbz	x20, 20160 <PyInit__decimal@@Base+0x195fc>
   20150:	ldr	x0, [x19, #40]
   20154:	lsl	x2, x20, #3
   20158:	mov	w1, wzr
   2015c:	bl	6660 <memset@plt>
   20160:	mov	w0, #0x1                   	// #1
   20164:	ldp	x20, x19, [sp, #16]
   20168:	ldp	x29, x30, [sp], #32
   2016c:	ret
   20170:	sub	sp, sp, #0x30
   20174:	stp	x29, x30, [sp, #16]
   20178:	stp	x20, x19, [sp, #32]
   2017c:	add	x29, sp, #0x10
   20180:	ldrb	w8, [x0]
   20184:	tbnz	w8, #5, 201c8 <PyInit__decimal@@Base+0x19664>
   20188:	adrp	x20, 4c000 <PyInit__decimal@@Base+0x4549c>
   2018c:	ldr	x8, [x0, #32]
   20190:	ldr	x1, [x20, #1352]
   20194:	mov	x19, x0
   20198:	cmp	x8, x1
   2019c:	b.le	201c8 <PyInit__decimal@@Base+0x19664>
   201a0:	sturb	wzr, [x29, #-4]
   201a4:	ldr	x0, [x19, #40]
   201a8:	sub	x3, x29, #0x4
   201ac:	mov	w2, #0x8                   	// #8
   201b0:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   201b4:	str	x0, [x19, #40]
   201b8:	ldurb	w8, [x29, #-4]
   201bc:	cbnz	w8, 201c8 <PyInit__decimal@@Base+0x19664>
   201c0:	ldr	x8, [x20, #1352]
   201c4:	str	x8, [x19, #32]
   201c8:	ldp	x20, x19, [sp, #32]
   201cc:	ldp	x29, x30, [sp, #16]
   201d0:	add	sp, sp, #0x30
   201d4:	ret
   201d8:	stp	x29, x30, [sp, #-32]!
   201dc:	str	x19, [sp, #16]
   201e0:	mov	x29, sp
   201e4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   201e8:	ldr	x9, [x8, #1352]
   201ec:	str	wzr, [x29, #28]
   201f0:	ldr	x8, [x0, #32]
   201f4:	cmp	x9, x1
   201f8:	csel	x1, x1, x9, lt  // lt = tstop
   201fc:	cmp	x1, x8
   20200:	b.eq	20234 <PyInit__decimal@@Base+0x196d0>  // b.none
   20204:	ldrb	w9, [x0]
   20208:	mov	x19, x2
   2020c:	tbnz	w9, #5, 20220 <PyInit__decimal@@Base+0x196bc>
   20210:	add	x2, x29, #0x1c
   20214:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   20218:	cbnz	w0, 20234 <PyInit__decimal@@Base+0x196d0>
   2021c:	b	20244 <PyInit__decimal@@Base+0x196e0>
   20220:	cmp	x1, x8
   20224:	b.le	20234 <PyInit__decimal@@Base+0x196d0>
   20228:	add	x2, x29, #0x1c
   2022c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   20230:	cbz	w0, 20244 <PyInit__decimal@@Base+0x196e0>
   20234:	mov	w0, #0x1                   	// #1
   20238:	ldr	x19, [sp, #16]
   2023c:	ldp	x29, x30, [sp], #32
   20240:	ret
   20244:	ldr	w1, [x29, #28]
   20248:	mov	x0, x19
   2024c:	bl	1bef8 <PyInit__decimal@@Base+0x15394>
   20250:	mov	w0, wzr
   20254:	b	20238 <PyInit__decimal@@Base+0x196d4>
   20258:	stp	x29, x30, [sp, #-48]!
   2025c:	str	x21, [sp, #16]
   20260:	stp	x20, x19, [sp, #32]
   20264:	mov	x29, sp
   20268:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2026c:	ldr	x9, [x8, #1352]
   20270:	str	wzr, [x29, #28]
   20274:	ldr	x8, [x0, #32]
   20278:	mov	x19, x0
   2027c:	cmp	x9, x1
   20280:	csel	x21, x1, x9, lt  // lt = tstop
   20284:	cmp	x21, x8
   20288:	b.eq	202e0 <PyInit__decimal@@Base+0x1977c>  // b.none
   2028c:	ldrb	w9, [x19]
   20290:	mov	x20, x2
   20294:	tbnz	w9, #5, 202b0 <PyInit__decimal@@Base+0x1974c>
   20298:	add	x2, x29, #0x1c
   2029c:	mov	x0, x19
   202a0:	mov	x1, x21
   202a4:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   202a8:	cbnz	w0, 202e0 <PyInit__decimal@@Base+0x1977c>
   202ac:	b	202cc <PyInit__decimal@@Base+0x19768>
   202b0:	cmp	x21, x8
   202b4:	b.le	202e0 <PyInit__decimal@@Base+0x1977c>
   202b8:	add	x2, x29, #0x1c
   202bc:	mov	x0, x19
   202c0:	mov	x1, x21
   202c4:	bl	1f908 <PyInit__decimal@@Base+0x18da4>
   202c8:	cbnz	w0, 202f4 <PyInit__decimal@@Base+0x19790>
   202cc:	ldr	w1, [x29, #28]
   202d0:	mov	x0, x20
   202d4:	bl	1bef8 <PyInit__decimal@@Base+0x15394>
   202d8:	mov	w0, wzr
   202dc:	b	202f8 <PyInit__decimal@@Base+0x19794>
   202e0:	cbz	x21, 202f4 <PyInit__decimal@@Base+0x19790>
   202e4:	ldr	x0, [x19, #40]
   202e8:	lsl	x2, x21, #3
   202ec:	mov	w1, wzr
   202f0:	bl	6660 <memset@plt>
   202f4:	mov	w0, #0x1                   	// #1
   202f8:	ldp	x20, x19, [sp, #32]
   202fc:	ldr	x21, [sp, #16]
   20300:	ldp	x29, x30, [sp], #48
   20304:	ret
   20308:	ldr	x9, [x0, #40]
   2030c:	ldr	x8, [x0, #24]
   20310:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   20314:	add	x10, x10, #0xe70
   20318:	ldr	x11, [x10, #72]
   2031c:	add	x9, x9, x8, lsl #3
   20320:	ldur	x9, [x9, #-8]
   20324:	cmp	x11, x9
   20328:	b.ls	20354 <PyInit__decimal@@Base+0x197f0>  // b.plast
   2032c:	ldr	x11, [x10, #32]
   20330:	cmp	x11, x9
   20334:	b.ls	2037c <PyInit__decimal@@Base+0x19818>  // b.plast
   20338:	ldr	x11, [x10, #16]
   2033c:	cmp	x11, x9
   20340:	b.ls	203c0 <PyInit__decimal@@Base+0x1985c>  // b.plast
   20344:	ldr	x10, [x10, #8]
   20348:	cmp	x10, x9
   2034c:	mov	w9, #0x1                   	// #1
   20350:	b	20424 <PyInit__decimal@@Base+0x198c0>
   20354:	ldr	x11, [x10, #112]
   20358:	cmp	x11, x9
   2035c:	b.ls	20398 <PyInit__decimal@@Base+0x19834>  // b.plast
   20360:	ldr	x11, [x10, #88]
   20364:	cmp	x11, x9
   20368:	b.ls	203d0 <PyInit__decimal@@Base+0x1986c>  // b.plast
   2036c:	ldr	x10, [x10, #80]
   20370:	cmp	x10, x9
   20374:	mov	w9, #0xa                   	// #10
   20378:	b	20424 <PyInit__decimal@@Base+0x198c0>
   2037c:	ldr	x11, [x10, #48]
   20380:	cmp	x11, x9
   20384:	b.ls	203ec <PyInit__decimal@@Base+0x19888>  // b.plast
   20388:	ldr	x10, [x10, #40]
   2038c:	cmp	x10, x9
   20390:	mov	w9, #0x5                   	// #5
   20394:	b	20424 <PyInit__decimal@@Base+0x198c0>
   20398:	ldr	x11, [x10, #144]
   2039c:	cmp	x11, x9
   203a0:	b.ls	20408 <PyInit__decimal@@Base+0x198a4>  // b.plast
   203a4:	ldr	x11, [x10, #128]
   203a8:	cmp	x11, x9
   203ac:	b.ls	20418 <PyInit__decimal@@Base+0x198b4>  // b.plast
   203b0:	ldr	x10, [x10, #120]
   203b4:	cmp	x10, x9
   203b8:	mov	w9, #0xf                   	// #15
   203bc:	b	20424 <PyInit__decimal@@Base+0x198c0>
   203c0:	ldr	x10, [x10, #24]
   203c4:	cmp	x10, x9
   203c8:	mov	w9, #0x3                   	// #3
   203cc:	b	20424 <PyInit__decimal@@Base+0x198c0>
   203d0:	ldr	x11, [x10, #104]
   203d4:	cmp	x11, x9
   203d8:	b.ls	2043c <PyInit__decimal@@Base+0x198d8>  // b.plast
   203dc:	ldr	x10, [x10, #96]
   203e0:	cmp	x10, x9
   203e4:	mov	w9, #0xc                   	// #12
   203e8:	b	20424 <PyInit__decimal@@Base+0x198c0>
   203ec:	ldr	x11, [x10, #64]
   203f0:	cmp	x11, x9
   203f4:	b.ls	20444 <PyInit__decimal@@Base+0x198e0>  // b.plast
   203f8:	ldr	x10, [x10, #56]
   203fc:	cmp	x10, x9
   20400:	mov	w9, #0x7                   	// #7
   20404:	b	20424 <PyInit__decimal@@Base+0x198c0>
   20408:	ldr	x10, [x10, #152]
   2040c:	cmp	x10, x9
   20410:	mov	w9, #0x13                  	// #19
   20414:	b	20424 <PyInit__decimal@@Base+0x198c0>
   20418:	ldr	x10, [x10, #136]
   2041c:	cmp	x10, x9
   20420:	mov	w9, #0x11                  	// #17
   20424:	cinc	x9, x9, ls  // ls = plast
   20428:	mov	w10, #0x13                  	// #19
   2042c:	madd	x8, x8, x10, x9
   20430:	sub	x8, x8, #0x13
   20434:	str	x8, [x0, #16]
   20438:	ret
   2043c:	mov	w9, #0xe                   	// #14
   20440:	b	20428 <PyInit__decimal@@Base+0x198c4>
   20444:	mov	w9, #0x9                   	// #9
   20448:	b	20428 <PyInit__decimal@@Base+0x198c4>
   2044c:	ldrb	w8, [x0]
   20450:	and	w8, w8, #0xfe
   20454:	orr	w8, w8, w1
   20458:	strb	w8, [x0]
   2045c:	ret
   20460:	ldrb	w8, [x1]
   20464:	ldrb	w9, [x0]
   20468:	bfxil	w9, w8, #0, #1
   2046c:	strb	w9, [x0]
   20470:	ret
   20474:	ldrb	w8, [x0]
   20478:	and	w8, w8, #0xfffffff3
   2047c:	orr	w8, w8, #0x2
   20480:	strb	w8, [x0]
   20484:	ret
   20488:	ldrb	w8, [x0]
   2048c:	and	w8, w8, #0xfffffff1
   20490:	orr	w8, w8, #0x4
   20494:	strb	w8, [x0]
   20498:	ret
   2049c:	ldrb	w8, [x0]
   204a0:	and	w8, w8, #0xfffffff1
   204a4:	orr	w8, w8, #0x8
   204a8:	strb	w8, [x0]
   204ac:	ret
   204b0:	ldrb	w8, [x0]
   204b4:	orr	w8, w8, #0x1
   204b8:	strb	w8, [x0]
   204bc:	ret
   204c0:	ldrb	w8, [x0]
   204c4:	and	w8, w8, #0xfe
   204c8:	strb	w8, [x0]
   204cc:	ret
   204d0:	ldrb	w8, [x0]
   204d4:	and	w8, w8, #0xffffffef
   204d8:	strb	w8, [x0]
   204dc:	ret
   204e0:	ldrb	w8, [x0]
   204e4:	orr	w8, w8, #0x10
   204e8:	strb	w8, [x0]
   204ec:	ret
   204f0:	ldrb	w8, [x0]
   204f4:	and	w8, w8, #0x1f
   204f8:	strb	w8, [x0]
   204fc:	ret
   20500:	ldrb	w8, [x0]
   20504:	mov	w9, #0x20                  	// #32
   20508:	bfxil	w9, w8, #0, #5
   2050c:	strb	w9, [x0]
   20510:	ret
   20514:	ldrb	w8, [x0]
   20518:	mov	w9, #0x40                  	// #64
   2051c:	bfxil	w9, w8, #0, #5
   20520:	strb	w9, [x0]
   20524:	ret
   20528:	ldrb	w8, [x0]
   2052c:	mov	w9, #0x80                  	// #128
   20530:	bfxil	w9, w8, #0, #5
   20534:	strb	w9, [x0]
   20538:	ret
   2053c:	ldrb	w8, [x0]
   20540:	and	w8, w8, #0xf0
   20544:	strb	w8, [x0]
   20548:	ret
   2054c:	ldrb	w8, [x0]
   20550:	and	w8, w8, #0xf0
   20554:	orr	w8, w8, w1
   20558:	strb	w8, [x0]
   2055c:	ret
   20560:	ldrb	w8, [x1]
   20564:	ldrb	w9, [x0]
   20568:	bfxil	w9, w8, #0, #4
   2056c:	strb	w9, [x0]
   20570:	ret
   20574:	sub	sp, sp, #0x30
   20578:	stp	x29, x30, [sp, #16]
   2057c:	stp	x20, x19, [sp, #32]
   20580:	add	x29, sp, #0x10
   20584:	ldrb	w8, [x0]
   20588:	mov	x19, x0
   2058c:	tbnz	w8, #5, 205cc <PyInit__decimal@@Base+0x19a68>
   20590:	adrp	x20, 4c000 <PyInit__decimal@@Base+0x4549c>
   20594:	ldr	x8, [x19, #32]
   20598:	ldr	x1, [x20, #1352]
   2059c:	cmp	x8, x1
   205a0:	b.le	205cc <PyInit__decimal@@Base+0x19a68>
   205a4:	sturb	wzr, [x29, #-4]
   205a8:	ldr	x0, [x19, #40]
   205ac:	sub	x3, x29, #0x4
   205b0:	mov	w2, #0x8                   	// #8
   205b4:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   205b8:	str	x0, [x19, #40]
   205bc:	ldurb	w8, [x29, #-4]
   205c0:	cbnz	w8, 205cc <PyInit__decimal@@Base+0x19a68>
   205c4:	ldr	x8, [x20, #1352]
   205c8:	str	x8, [x19, #32]
   205cc:	ldr	x8, [x19, #40]
   205d0:	mov	w9, #0x1                   	// #1
   205d4:	dup	v0.2d, x9
   205d8:	str	q0, [x19, #16]
   205dc:	str	xzr, [x8]
   205e0:	ldp	x20, x19, [sp, #32]
   205e4:	ldp	x29, x30, [sp, #16]
   205e8:	add	sp, sp, #0x30
   205ec:	ret
   205f0:	stp	x29, x30, [sp, #-48]!
   205f4:	stp	x22, x21, [sp, #16]
   205f8:	stp	x20, x19, [sp, #32]
   205fc:	mov	x29, sp
   20600:	ldr	x8, [x1]
   20604:	mov	x9, #0x9436                	// #37942
   20608:	movk	x9, #0x50d7, lsl #16
   2060c:	movk	x9, #0x435e, lsl #32
   20610:	movk	x9, #0xd79, lsl #48
   20614:	adrp	x11, 4c000 <PyInit__decimal@@Base+0x4549c>
   20618:	smulh	x9, x8, x9
   2061c:	mov	x10, #0xffffffffffffffed    	// #-19
   20620:	ldr	x11, [x11, #1352]
   20624:	add	x12, x9, x9, lsr #63
   20628:	madd	x22, x12, x10, x8
   2062c:	cmp	x22, #0x0
   20630:	ldr	x9, [x0, #32]
   20634:	cinc	x21, x12, ne  // ne = any
   20638:	cmp	x11, x21
   2063c:	mov	x20, x1
   20640:	csel	x1, x21, x11, lt  // lt = tstop
   20644:	mov	x19, x0
   20648:	cmp	x1, x9
   2064c:	b.eq	20680 <PyInit__decimal@@Base+0x19b1c>  // b.none
   20650:	ldrb	w10, [x19]
   20654:	tbnz	w10, #5, 20668 <PyInit__decimal@@Base+0x19b04>
   20658:	mov	x0, x19
   2065c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   20660:	cbnz	w0, 2067c <PyInit__decimal@@Base+0x19b18>
   20664:	b	206d8 <PyInit__decimal@@Base+0x19b74>
   20668:	cmp	x1, x9
   2066c:	b.le	20680 <PyInit__decimal@@Base+0x19b1c>
   20670:	mov	x0, x19
   20674:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   20678:	cbz	w0, 206d8 <PyInit__decimal@@Base+0x19b74>
   2067c:	ldr	x8, [x20]
   20680:	stp	x8, x21, [x19, #16]
   20684:	cmp	x22, #0x1
   20688:	sub	x8, x21, #0x1
   2068c:	b.lt	206b0 <PyInit__decimal@@Base+0x19b4c>  // b.tstop
   20690:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   20694:	add	x9, x9, #0xe70
   20698:	ldr	x9, [x9, x22, lsl #3]
   2069c:	ldr	x10, [x19, #40]
   206a0:	sub	x11, x21, #0x2
   206a4:	sub	x9, x9, #0x1
   206a8:	str	x9, [x10, x8, lsl #3]
   206ac:	mov	x8, x11
   206b0:	tbnz	x8, #63, 206d8 <PyInit__decimal@@Base+0x19b74>
   206b4:	ldr	x9, [x19, #40]
   206b8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   206bc:	movk	x10, #0x2304, lsl #32
   206c0:	movk	x10, #0x8ac7, lsl #48
   206c4:	sub	x11, x8, #0x1
   206c8:	cmp	x8, #0x0
   206cc:	str	x10, [x9, x8, lsl #3]
   206d0:	mov	x8, x11
   206d4:	b.gt	206c4 <PyInit__decimal@@Base+0x19b60>
   206d8:	ldp	x20, x19, [sp, #32]
   206dc:	ldp	x22, x21, [sp, #16]
   206e0:	ldp	x29, x30, [sp], #48
   206e4:	ret
   206e8:	ldr	x9, [x0, #24]
   206ec:	cmp	x9, #0x1
   206f0:	b.lt	2071c <PyInit__decimal@@Base+0x19bb8>  // b.tstop
   206f4:	mov	x8, x0
   206f8:	ldr	x10, [x8, #40]
   206fc:	mov	x0, xzr
   20700:	mov	x11, xzr
   20704:	ldr	x8, [x10, x11, lsl #3]
   20708:	cbnz	x8, 20724 <PyInit__decimal@@Base+0x19bc0>
   2070c:	add	x11, x11, #0x1
   20710:	cmp	x11, x9
   20714:	add	x0, x0, #0x13
   20718:	b.lt	20704 <PyInit__decimal@@Base+0x19ba0>  // b.tstop
   2071c:	mov	x0, xzr
   20720:	b	2076c <PyInit__decimal@@Base+0x19c08>
   20724:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   20728:	movk	x9, #0xcccd
   2072c:	mul	x10, x8, x9
   20730:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   20734:	ror	x10, x10, #1
   20738:	movk	x11, #0x1999, lsl #48
   2073c:	cmp	x10, x11
   20740:	b.hi	2076c <PyInit__decimal@@Base+0x19c08>  // b.pmore
   20744:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
   20748:	movk	x10, #0x999a
   2074c:	movk	x10, #0x1999, lsl #48
   20750:	umulh	x8, x8, x9
   20754:	lsr	x8, x8, #3
   20758:	mul	x11, x8, x9
   2075c:	ror	x11, x11, #1
   20760:	cmp	x11, x10
   20764:	add	x0, x0, #0x1
   20768:	b.cc	20750 <PyInit__decimal@@Base+0x19bec>  // b.lo, b.ul, b.last
   2076c:	ret
   20770:	ldrb	w8, [x0]
   20774:	tst	w8, #0xe
   20778:	b.eq	20784 <PyInit__decimal@@Base+0x19c20>  // b.none
   2077c:	mov	w0, wzr
   20780:	ret
   20784:	b	20788 <PyInit__decimal@@Base+0x19c24>
   20788:	stp	x29, x30, [sp, #-32]!
   2078c:	str	x19, [sp, #16]
   20790:	mov	x29, sp
   20794:	ldr	x8, [x0, #40]
   20798:	ldr	x9, [x0, #24]
   2079c:	add	x8, x8, x9, lsl #3
   207a0:	ldur	x8, [x8, #-8]
   207a4:	cbz	x8, 207c4 <PyInit__decimal@@Base+0x19c60>
   207a8:	mov	x19, x0
   207ac:	bl	206e8 <PyInit__decimal@@Base+0x19b84>
   207b0:	ldr	x8, [x19, #8]
   207b4:	add	x8, x8, x0
   207b8:	lsr	x8, x8, #63
   207bc:	eor	w0, w8, #0x1
   207c0:	b	207c8 <PyInit__decimal@@Base+0x19c64>
   207c4:	mov	w0, #0x1                   	// #1
   207c8:	ldr	x19, [sp, #16]
   207cc:	ldp	x29, x30, [sp], #32
   207d0:	ret
   207d4:	ldr	x8, [x0, #40]
   207d8:	ldr	x9, [x0, #24]
   207dc:	add	x9, x8, x9, lsl #3
   207e0:	ldur	x9, [x9, #-8]
   207e4:	cbz	x9, 207f4 <PyInit__decimal@@Base+0x19c90>
   207e8:	ldr	x9, [x0, #8]
   207ec:	tbnz	x9, #63, 207fc <PyInit__decimal@@Base+0x19c98>
   207f0:	cbz	x9, 20840 <PyInit__decimal@@Base+0x19cdc>
   207f4:	mov	w0, wzr
   207f8:	ret
   207fc:	mov	x11, #0x435f                	// #17247
   20800:	movk	x11, #0xd79, lsl #16
   20804:	movk	x11, #0x35e5, lsl #32
   20808:	neg	x10, x9
   2080c:	movk	x11, #0xd794, lsl #48
   20810:	umulh	x10, x10, x11
   20814:	mov	x12, #0xffffffffffffffed    	// #-19
   20818:	neg	x9, x9
   2081c:	lsr	x10, x10, #4
   20820:	madd	x9, x10, x12, x9
   20824:	ldr	x8, [x8, x10, lsl #3]
   20828:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2082c:	add	x10, x10, #0xe70
   20830:	ldr	x9, [x10, x9, lsl #3]
   20834:	udiv	x8, x8, x9
   20838:	and	w0, w8, #0x1
   2083c:	ret
   20840:	ldr	w8, [x8]
   20844:	and	w0, w8, #0x1
   20848:	ret
   2084c:	stp	x29, x30, [sp, #-16]!
   20850:	mov	x29, sp
   20854:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   20858:	cmp	w0, #0x0
   2085c:	cset	w0, eq  // eq = none
   20860:	ldp	x29, x30, [sp], #16
   20864:	ret
   20868:	sub	sp, sp, #0x40
   2086c:	stp	x29, x30, [sp, #16]
   20870:	stp	x22, x21, [sp, #32]
   20874:	stp	x20, x19, [sp, #48]
   20878:	add	x29, sp, #0x10
   2087c:	ldrb	w8, [x0]
   20880:	mov	w20, w2
   20884:	mov	x19, x0
   20888:	mov	w21, w1
   2088c:	tbnz	w8, #5, 208d0 <PyInit__decimal@@Base+0x19d6c>
   20890:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   20894:	ldr	x9, [x19, #32]
   20898:	ldr	x1, [x22, #1352]
   2089c:	cmp	x9, x1
   208a0:	b.le	208d0 <PyInit__decimal@@Base+0x19d6c>
   208a4:	sturb	wzr, [x29, #-4]
   208a8:	ldr	x0, [x19, #40]
   208ac:	sub	x3, x29, #0x4
   208b0:	mov	w2, #0x8                   	// #8
   208b4:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   208b8:	str	x0, [x19, #40]
   208bc:	ldurb	w8, [x29, #-4]
   208c0:	cbnz	w8, 208cc <PyInit__decimal@@Base+0x19d68>
   208c4:	ldr	x8, [x22, #1352]
   208c8:	str	x8, [x19, #32]
   208cc:	ldrb	w8, [x19]
   208d0:	and	w8, w8, #0xf0
   208d4:	orr	w9, w20, w21
   208d8:	orr	w8, w9, w8
   208dc:	stp	xzr, xzr, [x19, #16]
   208e0:	strb	w8, [x19]
   208e4:	str	xzr, [x19, #8]
   208e8:	ldp	x20, x19, [sp, #48]
   208ec:	ldp	x22, x21, [sp, #32]
   208f0:	ldp	x29, x30, [sp, #16]
   208f4:	add	sp, sp, #0x40
   208f8:	ret
   208fc:	sub	sp, sp, #0x40
   20900:	stp	x29, x30, [sp, #16]
   20904:	stp	x22, x21, [sp, #32]
   20908:	stp	x20, x19, [sp, #48]
   2090c:	add	x29, sp, #0x10
   20910:	ldrb	w8, [x0]
   20914:	mov	x19, x2
   20918:	mov	x20, x0
   2091c:	mov	w21, w1
   20920:	tbnz	w8, #5, 20964 <PyInit__decimal@@Base+0x19e00>
   20924:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   20928:	ldr	x9, [x20, #32]
   2092c:	ldr	x1, [x22, #1352]
   20930:	cmp	x9, x1
   20934:	b.le	20964 <PyInit__decimal@@Base+0x19e00>
   20938:	sturb	wzr, [x29, #-4]
   2093c:	ldr	x0, [x20, #40]
   20940:	sub	x3, x29, #0x4
   20944:	mov	w2, #0x8                   	// #8
   20948:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   2094c:	str	x0, [x20, #40]
   20950:	ldurb	w8, [x29, #-4]
   20954:	cbnz	w8, 20960 <PyInit__decimal@@Base+0x19dfc>
   20958:	ldr	x8, [x22, #1352]
   2095c:	str	x8, [x20, #32]
   20960:	ldrb	w8, [x20]
   20964:	and	w8, w8, #0xf0
   20968:	orr	w8, w8, #0x4
   2096c:	stp	xzr, xzr, [x20, #16]
   20970:	strb	w8, [x20]
   20974:	str	xzr, [x20, #8]
   20978:	ldr	w8, [x19]
   2097c:	orr	w8, w8, w21
   20980:	str	w8, [x19]
   20984:	ldp	x20, x19, [sp, #48]
   20988:	ldp	x22, x21, [sp, #32]
   2098c:	ldp	x29, x30, [sp, #16]
   20990:	add	sp, sp, #0x40
   20994:	ret
   20998:	stp	x29, x30, [sp, #-48]!
   2099c:	str	x21, [sp, #16]
   209a0:	stp	x20, x19, [sp, #32]
   209a4:	mov	x29, sp
   209a8:	cmp	x1, #0x0
   209ac:	mov	x19, x3
   209b0:	mov	x20, x2
   209b4:	cneg	x2, x1, mi  // mi = first
   209b8:	lsr	x1, x1, #63
   209bc:	mov	x3, xzr
   209c0:	mov	x21, x0
   209c4:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   209c8:	mov	x0, x21
   209cc:	mov	x1, x20
   209d0:	mov	x2, x19
   209d4:	ldp	x20, x19, [sp, #32]
   209d8:	ldr	x21, [sp, #16]
   209dc:	ldp	x29, x30, [sp], #48
   209e0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   209e4:	ldrb	w8, [x0]
   209e8:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   209ec:	movk	x10, #0x2304, lsl #32
   209f0:	ldr	x9, [x0, #40]
   209f4:	movk	x10, #0x8ac7, lsl #48
   209f8:	cmp	x2, x10
   209fc:	and	w8, w8, #0xf0
   20a00:	csinc	x10, xzr, x10, ls  // ls = plast
   20a04:	mov	w12, #0x1                   	// #1
   20a08:	orr	w8, w8, w1
   20a0c:	sub	x11, x2, x10
   20a10:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   20a14:	strb	w8, [x0]
   20a18:	cset	w13, hi  // hi = pmore
   20a1c:	cinc	x8, x12, hi  // hi = pmore
   20a20:	str	x3, [x0, #8]
   20a24:	add	x10, x10, #0xe70
   20a28:	stp	x11, x13, [x9]
   20a2c:	add	x9, x9, x8, lsl #3
   20a30:	str	x8, [x0, #24]
   20a34:	ldur	x9, [x9, #-8]
   20a38:	ldr	x11, [x10, #72]
   20a3c:	cmp	x11, x9
   20a40:	b.ls	20a6c <PyInit__decimal@@Base+0x19f08>  // b.plast
   20a44:	ldr	x11, [x10, #32]
   20a48:	cmp	x11, x9
   20a4c:	b.ls	20a94 <PyInit__decimal@@Base+0x19f30>  // b.plast
   20a50:	ldr	x11, [x10, #16]
   20a54:	cmp	x11, x9
   20a58:	b.ls	20ad8 <PyInit__decimal@@Base+0x19f74>  // b.plast
   20a5c:	ldr	x10, [x10, #8]
   20a60:	cmp	x10, x9
   20a64:	mov	w9, #0x1                   	// #1
   20a68:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20a6c:	ldr	x11, [x10, #112]
   20a70:	cmp	x11, x9
   20a74:	b.ls	20ab0 <PyInit__decimal@@Base+0x19f4c>  // b.plast
   20a78:	ldr	x11, [x10, #88]
   20a7c:	cmp	x11, x9
   20a80:	b.ls	20ae8 <PyInit__decimal@@Base+0x19f84>  // b.plast
   20a84:	ldr	x10, [x10, #80]
   20a88:	cmp	x10, x9
   20a8c:	mov	w9, #0xa                   	// #10
   20a90:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20a94:	ldr	x11, [x10, #48]
   20a98:	cmp	x11, x9
   20a9c:	b.ls	20b04 <PyInit__decimal@@Base+0x19fa0>  // b.plast
   20aa0:	ldr	x10, [x10, #40]
   20aa4:	cmp	x10, x9
   20aa8:	mov	w9, #0x5                   	// #5
   20aac:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20ab0:	ldr	x11, [x10, #144]
   20ab4:	cmp	x11, x9
   20ab8:	b.ls	20b20 <PyInit__decimal@@Base+0x19fbc>  // b.plast
   20abc:	ldr	x11, [x10, #128]
   20ac0:	cmp	x11, x9
   20ac4:	b.ls	20b30 <PyInit__decimal@@Base+0x19fcc>  // b.plast
   20ac8:	ldr	x10, [x10, #120]
   20acc:	cmp	x10, x9
   20ad0:	mov	w9, #0xf                   	// #15
   20ad4:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20ad8:	ldr	x10, [x10, #24]
   20adc:	cmp	x10, x9
   20ae0:	mov	w9, #0x3                   	// #3
   20ae4:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20ae8:	ldr	x11, [x10, #104]
   20aec:	cmp	x11, x9
   20af0:	b.ls	20b54 <PyInit__decimal@@Base+0x19ff0>  // b.plast
   20af4:	ldr	x10, [x10, #96]
   20af8:	cmp	x10, x9
   20afc:	mov	w9, #0xc                   	// #12
   20b00:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20b04:	ldr	x11, [x10, #64]
   20b08:	cmp	x11, x9
   20b0c:	b.ls	20b5c <PyInit__decimal@@Base+0x19ff8>  // b.plast
   20b10:	ldr	x10, [x10, #56]
   20b14:	cmp	x10, x9
   20b18:	mov	w9, #0x7                   	// #7
   20b1c:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20b20:	ldr	x10, [x10, #152]
   20b24:	cmp	x10, x9
   20b28:	mov	w9, #0x13                  	// #19
   20b2c:	b	20b3c <PyInit__decimal@@Base+0x19fd8>
   20b30:	ldr	x10, [x10, #136]
   20b34:	cmp	x10, x9
   20b38:	mov	w9, #0x11                  	// #17
   20b3c:	cinc	x9, x9, ls  // ls = plast
   20b40:	mov	w10, #0x13                  	// #19
   20b44:	madd	x8, x8, x10, x9
   20b48:	sub	x8, x8, #0x13
   20b4c:	str	x8, [x0, #16]
   20b50:	ret
   20b54:	mov	w9, #0xe                   	// #14
   20b58:	b	20b40 <PyInit__decimal@@Base+0x19fdc>
   20b5c:	mov	w9, #0x9                   	// #9
   20b60:	b	20b40 <PyInit__decimal@@Base+0x19fdc>
   20b64:	stp	x29, x30, [sp, #-48]!
   20b68:	stp	x22, x21, [sp, #16]
   20b6c:	stp	x20, x19, [sp, #32]
   20b70:	mov	x29, sp
   20b74:	ldrb	w8, [x0]
   20b78:	mov	x21, x0
   20b7c:	mov	x20, x1
   20b80:	tst	w8, #0xe
   20b84:	b.eq	20ba8 <PyInit__decimal@@Base+0x1a044>  // b.none
   20b88:	tst	w8, #0xc
   20b8c:	b.eq	20e80 <PyInit__decimal@@Base+0x1a31c>  // b.none
   20b90:	mov	x0, x21
   20b94:	mov	x1, x20
   20b98:	ldp	x20, x19, [sp, #32]
   20b9c:	ldp	x22, x21, [sp, #16]
   20ba0:	ldp	x29, x30, [sp], #48
   20ba4:	b	21810 <PyInit__decimal@@Base+0x1acac>
   20ba8:	mov	x0, x21
   20bac:	mov	x1, x20
   20bb0:	mov	x19, x2
   20bb4:	bl	21b60 <PyInit__decimal@@Base+0x1affc>
   20bb8:	ldrb	w8, [x21]
   20bbc:	tst	w8, #0xe
   20bc0:	b.ne	20e80 <PyInit__decimal@@Base+0x1a31c>  // b.any
   20bc4:	ldr	x8, [x21, #16]
   20bc8:	ldr	x9, [x20]
   20bcc:	subs	x22, x8, x9
   20bd0:	b.le	20e80 <PyInit__decimal@@Base+0x1a31c>
   20bd4:	mov	x0, x21
   20bd8:	mov	x1, x22
   20bdc:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   20be0:	ldr	x8, [x21, #8]
   20be4:	add	x8, x8, x22
   20be8:	str	x8, [x21, #8]
   20bec:	ldr	w8, [x20, #36]
   20bf0:	mov	x22, x0
   20bf4:	cmp	w8, #0x7
   20bf8:	b.hi	20e64 <PyInit__decimal@@Base+0x1a300>  // b.pmore
   20bfc:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   20c00:	add	x9, x9, #0x1c0
   20c04:	adr	x10, 20c14 <PyInit__decimal@@Base+0x1a0b0>
   20c08:	ldrb	w11, [x9, x8]
   20c0c:	add	x10, x10, x11, lsl #2
   20c10:	br	x10
   20c14:	cmp	x22, #0x0
   20c18:	cset	w8, ne  // ne = any
   20c1c:	b	20cac <PyInit__decimal@@Base+0x1a148>
   20c20:	cbz	x22, 20d38 <PyInit__decimal@@Base+0x1a1d4>
   20c24:	ldrb	w8, [x21]
   20c28:	mvn	w8, w8
   20c2c:	b	20c64 <PyInit__decimal@@Base+0x1a100>
   20c30:	cbz	x22, 20d38 <PyInit__decimal@@Base+0x1a1d4>
   20c34:	ldrb	w8, [x21]
   20c38:	b	20c64 <PyInit__decimal@@Base+0x1a100>
   20c3c:	cmp	x22, #0x4
   20c40:	b	20c48 <PyInit__decimal@@Base+0x1a0e4>
   20c44:	cmp	x22, #0x5
   20c48:	cset	w8, hi  // hi = pmore
   20c4c:	b	20cac <PyInit__decimal@@Base+0x1a148>
   20c50:	cmp	x22, #0x5
   20c54:	b.hi	20cb0 <PyInit__decimal@@Base+0x1a14c>  // b.pmore
   20c58:	b.ne	20e64 <PyInit__decimal@@Base+0x1a300>  // b.any
   20c5c:	ldr	x8, [x21, #40]
   20c60:	ldr	w8, [x8]
   20c64:	and	w8, w8, #0x1
   20c68:	b	20cac <PyInit__decimal@@Base+0x1a148>
   20c6c:	ldr	x8, [x21, #40]
   20c70:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   20c74:	movk	x9, #0xcccd
   20c78:	mov	w10, #0xa                   	// #10
   20c7c:	ldr	x8, [x8]
   20c80:	cmp	x22, #0x0
   20c84:	cset	w11, ne  // ne = any
   20c88:	umulh	x9, x8, x9
   20c8c:	lsr	x9, x9, #3
   20c90:	msub	w8, w9, w10, w8
   20c94:	cmp	w8, #0x0
   20c98:	cset	w9, eq  // eq = none
   20c9c:	cmp	w8, #0x5
   20ca0:	cset	w8, eq  // eq = none
   20ca4:	orr	w8, w9, w8
   20ca8:	and	w8, w11, w8
   20cac:	cbz	w8, 20e64 <PyInit__decimal@@Base+0x1a300>
   20cb0:	ldr	x0, [x21, #40]
   20cb4:	ldr	x1, [x21, #24]
   20cb8:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   20cbc:	cbz	x0, 20cec <PyInit__decimal@@Base+0x1a188>
   20cc0:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   20cc4:	add	x8, x8, #0xe70
   20cc8:	ldr	x9, [x21, #40]
   20ccc:	ldr	x10, [x21, #24]
   20cd0:	ldr	x8, [x8, #144]
   20cd4:	add	x9, x9, x10, lsl #3
   20cd8:	stur	x8, [x9, #-8]
   20cdc:	ldr	x8, [x21, #8]
   20ce0:	add	x8, x8, #0x1
   20ce4:	str	x8, [x21, #8]
   20ce8:	b	20e54 <PyInit__decimal@@Base+0x1a2f0>
   20cec:	ldr	x9, [x21, #40]
   20cf0:	ldr	x8, [x21, #24]
   20cf4:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   20cf8:	add	x10, x10, #0xe70
   20cfc:	ldr	x11, [x10, #72]
   20d00:	add	x9, x9, x8, lsl #3
   20d04:	ldur	x9, [x9, #-8]
   20d08:	cmp	x11, x9
   20d0c:	b.ls	20d44 <PyInit__decimal@@Base+0x1a1e0>  // b.plast
   20d10:	ldr	x11, [x10, #32]
   20d14:	cmp	x11, x9
   20d18:	b.ls	20d6c <PyInit__decimal@@Base+0x1a208>  // b.plast
   20d1c:	ldr	x11, [x10, #16]
   20d20:	cmp	x11, x9
   20d24:	b.ls	20db0 <PyInit__decimal@@Base+0x1a24c>  // b.plast
   20d28:	ldr	x10, [x10, #8]
   20d2c:	cmp	x10, x9
   20d30:	mov	w9, #0x1                   	// #1
   20d34:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20d38:	ldr	w8, [x19]
   20d3c:	orr	w8, w8, #0x1000
   20d40:	b	20e7c <PyInit__decimal@@Base+0x1a318>
   20d44:	ldr	x11, [x10, #112]
   20d48:	cmp	x11, x9
   20d4c:	b.ls	20d88 <PyInit__decimal@@Base+0x1a224>  // b.plast
   20d50:	ldr	x11, [x10, #88]
   20d54:	cmp	x11, x9
   20d58:	b.ls	20dc0 <PyInit__decimal@@Base+0x1a25c>  // b.plast
   20d5c:	ldr	x10, [x10, #80]
   20d60:	cmp	x10, x9
   20d64:	mov	w9, #0xa                   	// #10
   20d68:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20d6c:	ldr	x11, [x10, #48]
   20d70:	cmp	x11, x9
   20d74:	b.ls	20ddc <PyInit__decimal@@Base+0x1a278>  // b.plast
   20d78:	ldr	x10, [x10, #40]
   20d7c:	cmp	x10, x9
   20d80:	mov	w9, #0x5                   	// #5
   20d84:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20d88:	ldr	x11, [x10, #144]
   20d8c:	cmp	x11, x9
   20d90:	b.ls	20df8 <PyInit__decimal@@Base+0x1a294>  // b.plast
   20d94:	ldr	x11, [x10, #128]
   20d98:	cmp	x11, x9
   20d9c:	b.ls	20e08 <PyInit__decimal@@Base+0x1a2a4>  // b.plast
   20da0:	ldr	x10, [x10, #120]
   20da4:	cmp	x10, x9
   20da8:	mov	w9, #0xf                   	// #15
   20dac:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20db0:	ldr	x10, [x10, #24]
   20db4:	cmp	x10, x9
   20db8:	mov	w9, #0x3                   	// #3
   20dbc:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20dc0:	ldr	x11, [x10, #104]
   20dc4:	cmp	x11, x9
   20dc8:	b.ls	20e90 <PyInit__decimal@@Base+0x1a32c>  // b.plast
   20dcc:	ldr	x10, [x10, #96]
   20dd0:	cmp	x10, x9
   20dd4:	mov	w9, #0xc                   	// #12
   20dd8:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20ddc:	ldr	x11, [x10, #64]
   20de0:	cmp	x11, x9
   20de4:	b.ls	20e98 <PyInit__decimal@@Base+0x1a334>  // b.plast
   20de8:	ldr	x10, [x10, #56]
   20dec:	cmp	x10, x9
   20df0:	mov	w9, #0x7                   	// #7
   20df4:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20df8:	ldr	x10, [x10, #152]
   20dfc:	cmp	x10, x9
   20e00:	mov	w9, #0x13                  	// #19
   20e04:	b	20e14 <PyInit__decimal@@Base+0x1a2b0>
   20e08:	ldr	x10, [x10, #136]
   20e0c:	cmp	x10, x9
   20e10:	mov	w9, #0x11                  	// #17
   20e14:	cinc	x9, x9, ls  // ls = plast
   20e18:	mov	w10, #0x13                  	// #19
   20e1c:	madd	x8, x8, x10, x9
   20e20:	sub	x8, x8, #0x13
   20e24:	str	x8, [x21, #16]
   20e28:	ldr	x9, [x20]
   20e2c:	cmp	x8, x9
   20e30:	b.le	20e64 <PyInit__decimal@@Base+0x1a300>
   20e34:	mov	w1, #0x1                   	// #1
   20e38:	mov	x0, x21
   20e3c:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   20e40:	ldr	x8, [x21, #8]
   20e44:	add	x8, x8, #0x1
   20e48:	str	x8, [x21, #8]
   20e4c:	ldr	x8, [x20]
   20e50:	str	x8, [x21, #16]
   20e54:	mov	x0, x21
   20e58:	mov	x1, x20
   20e5c:	mov	x2, x19
   20e60:	bl	21b60 <PyInit__decimal@@Base+0x1affc>
   20e64:	ldr	w8, [x19]
   20e68:	orr	w9, w8, #0x1000
   20e6c:	str	w9, [x19]
   20e70:	cbz	x22, 20e80 <PyInit__decimal@@Base+0x1a31c>
   20e74:	mov	w9, #0x1040                	// #4160
   20e78:	orr	w8, w8, w9
   20e7c:	str	w8, [x19]
   20e80:	ldp	x20, x19, [sp, #32]
   20e84:	ldp	x22, x21, [sp, #16]
   20e88:	ldp	x29, x30, [sp], #48
   20e8c:	ret
   20e90:	mov	w9, #0xe                   	// #14
   20e94:	b	20e18 <PyInit__decimal@@Base+0x1a2b4>
   20e98:	mov	w9, #0x9                   	// #9
   20e9c:	b	20e18 <PyInit__decimal@@Base+0x1a2b4>
   20ea0:	stp	x29, x30, [sp, #-48]!
   20ea4:	str	x21, [sp, #16]
   20ea8:	stp	x20, x19, [sp, #32]
   20eac:	mov	x29, sp
   20eb0:	mov	x19, x3
   20eb4:	mov	x20, x2
   20eb8:	mov	x2, x1
   20ebc:	mov	w1, wzr
   20ec0:	mov	x3, xzr
   20ec4:	mov	x21, x0
   20ec8:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   20ecc:	mov	x0, x21
   20ed0:	mov	x1, x20
   20ed4:	mov	x2, x19
   20ed8:	ldp	x20, x19, [sp, #32]
   20edc:	ldr	x21, [sp, #16]
   20ee0:	ldp	x29, x30, [sp], #48
   20ee4:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   20ee8:	stp	x29, x30, [sp, #-48]!
   20eec:	str	x21, [sp, #16]
   20ef0:	stp	x20, x19, [sp, #32]
   20ef4:	mov	x29, sp
   20ef8:	sxtw	x8, w1
   20efc:	cmp	x8, #0x0
   20f00:	mov	x19, x3
   20f04:	mov	x20, x2
   20f08:	cneg	x2, x8, mi  // mi = first
   20f0c:	lsr	x1, x8, #63
   20f10:	mov	x3, xzr
   20f14:	mov	x21, x0
   20f18:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   20f1c:	mov	x0, x21
   20f20:	mov	x1, x20
   20f24:	mov	x2, x19
   20f28:	ldp	x20, x19, [sp, #32]
   20f2c:	ldr	x21, [sp, #16]
   20f30:	ldp	x29, x30, [sp], #48
   20f34:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   20f38:	stp	x29, x30, [sp, #-48]!
   20f3c:	str	x21, [sp, #16]
   20f40:	stp	x20, x19, [sp, #32]
   20f44:	mov	x29, sp
   20f48:	mov	x19, x3
   20f4c:	mov	x20, x2
   20f50:	mov	w2, w1
   20f54:	mov	w1, wzr
   20f58:	mov	x3, xzr
   20f5c:	mov	x21, x0
   20f60:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   20f64:	mov	x0, x21
   20f68:	mov	x1, x20
   20f6c:	mov	x2, x19
   20f70:	ldp	x20, x19, [sp, #32]
   20f74:	ldr	x21, [sp, #16]
   20f78:	ldp	x29, x30, [sp], #48
   20f7c:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   20f80:	stp	x29, x30, [sp, #-48]!
   20f84:	str	x21, [sp, #16]
   20f88:	stp	x20, x19, [sp, #32]
   20f8c:	mov	x29, sp
   20f90:	cmp	x1, #0x0
   20f94:	mov	x19, x3
   20f98:	mov	x20, x2
   20f9c:	cneg	x2, x1, mi  // mi = first
   20fa0:	lsr	x1, x1, #63
   20fa4:	mov	x3, xzr
   20fa8:	mov	x21, x0
   20fac:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   20fb0:	mov	x0, x21
   20fb4:	mov	x1, x20
   20fb8:	mov	x2, x19
   20fbc:	ldp	x20, x19, [sp, #32]
   20fc0:	ldr	x21, [sp, #16]
   20fc4:	ldp	x29, x30, [sp], #48
   20fc8:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   20fcc:	stp	x29, x30, [sp, #-48]!
   20fd0:	str	x21, [sp, #16]
   20fd4:	stp	x20, x19, [sp, #32]
   20fd8:	mov	x29, sp
   20fdc:	mov	x19, x3
   20fe0:	mov	x20, x2
   20fe4:	mov	x2, x1
   20fe8:	mov	w1, wzr
   20fec:	mov	x3, xzr
   20ff0:	mov	x21, x0
   20ff4:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   20ff8:	mov	x0, x21
   20ffc:	mov	x1, x20
   21000:	mov	x2, x19
   21004:	ldp	x20, x19, [sp, #32]
   21008:	ldr	x21, [sp, #16]
   2100c:	ldp	x29, x30, [sp], #48
   21010:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   21014:	stp	x29, x30, [sp, #-64]!
   21018:	str	x23, [sp, #16]
   2101c:	stp	x22, x21, [sp, #32]
   21020:	stp	x20, x19, [sp, #48]
   21024:	mov	x29, sp
   21028:	ldrb	w8, [x0]
   2102c:	mov	x19, x3
   21030:	mov	x20, x2
   21034:	mov	x21, x0
   21038:	mov	x22, x1
   2103c:	tbnz	w8, #5, 2107c <PyInit__decimal@@Base+0x1a518>
   21040:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   21044:	ldr	x8, [x21, #32]
   21048:	ldr	x1, [x23, #1352]
   2104c:	cmp	x8, x1
   21050:	b.le	2107c <PyInit__decimal@@Base+0x1a518>
   21054:	strb	wzr, [x29, #28]
   21058:	ldr	x0, [x21, #40]
   2105c:	add	x3, x29, #0x1c
   21060:	mov	w2, #0x8                   	// #8
   21064:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   21068:	str	x0, [x21, #40]
   2106c:	ldrb	w8, [x29, #28]
   21070:	cbnz	w8, 2107c <PyInit__decimal@@Base+0x1a518>
   21074:	ldr	x8, [x23, #1352]
   21078:	str	x8, [x21, #32]
   2107c:	cmp	x22, #0x0
   21080:	cneg	x2, x22, mi  // mi = first
   21084:	lsr	x1, x22, #63
   21088:	mov	x0, x21
   2108c:	mov	x3, xzr
   21090:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   21094:	mov	x0, x21
   21098:	mov	x1, x20
   2109c:	mov	x2, x19
   210a0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   210a4:	ldp	x20, x19, [sp, #48]
   210a8:	ldp	x22, x21, [sp, #32]
   210ac:	ldr	x23, [sp, #16]
   210b0:	ldp	x29, x30, [sp], #64
   210b4:	ret
   210b8:	stp	x29, x30, [sp, #-48]!
   210bc:	str	x21, [sp, #16]
   210c0:	stp	x20, x19, [sp, #32]
   210c4:	mov	x29, sp
   210c8:	mov	x19, x3
   210cc:	mov	x20, x2
   210d0:	mov	x2, x1
   210d4:	mov	w1, wzr
   210d8:	mov	x3, xzr
   210dc:	mov	x21, x0
   210e0:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   210e4:	mov	x0, x21
   210e8:	mov	x1, x20
   210ec:	mov	x2, x19
   210f0:	ldp	x20, x19, [sp, #32]
   210f4:	ldr	x21, [sp, #16]
   210f8:	ldp	x29, x30, [sp], #48
   210fc:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   21100:	stp	x29, x30, [sp, #-64]!
   21104:	str	x23, [sp, #16]
   21108:	stp	x22, x21, [sp, #32]
   2110c:	stp	x20, x19, [sp, #48]
   21110:	mov	x29, sp
   21114:	ldrb	w8, [x0]
   21118:	mov	x21, x3
   2111c:	mov	x20, x2
   21120:	mov	x19, x0
   21124:	mov	w22, w1
   21128:	tbnz	w8, #5, 2116c <PyInit__decimal@@Base+0x1a608>
   2112c:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   21130:	ldr	x9, [x19, #32]
   21134:	ldr	x1, [x23, #1352]
   21138:	cmp	x9, x1
   2113c:	b.le	2116c <PyInit__decimal@@Base+0x1a608>
   21140:	strb	wzr, [x29, #28]
   21144:	ldr	x0, [x19, #40]
   21148:	add	x3, x29, #0x1c
   2114c:	mov	w2, #0x8                   	// #8
   21150:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   21154:	str	x0, [x19, #40]
   21158:	ldrb	w8, [x29, #28]
   2115c:	cbnz	w8, 21168 <PyInit__decimal@@Base+0x1a604>
   21160:	ldr	x8, [x23, #1352]
   21164:	str	x8, [x19, #32]
   21168:	ldrb	w8, [x19]
   2116c:	mov	x11, #0xffffffff89e7ffff    	// #-1981284353
   21170:	movk	x11, #0x2304, lsl #32
   21174:	and	w8, w8, #0xf0
   21178:	ldr	x9, [x19, #40]
   2117c:	movk	x11, #0x8ac7, lsl #48
   21180:	orr	w8, w8, w22
   21184:	cmp	x20, x11
   21188:	mov	w12, #0x1                   	// #1
   2118c:	strb	w8, [x19]
   21190:	csinc	x8, xzr, x11, ls  // ls = plast
   21194:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   21198:	sub	x11, x20, x8
   2119c:	cset	w13, hi  // hi = pmore
   211a0:	cinc	x8, x12, hi  // hi = pmore
   211a4:	str	x21, [x19, #8]
   211a8:	add	x10, x10, #0xe70
   211ac:	stp	x11, x13, [x9]
   211b0:	str	x8, [x19, #24]
   211b4:	add	x9, x9, x8, lsl #3
   211b8:	ldur	x9, [x9, #-8]
   211bc:	ldr	x11, [x10, #72]
   211c0:	cmp	x11, x9
   211c4:	b.ls	211f0 <PyInit__decimal@@Base+0x1a68c>  // b.plast
   211c8:	ldr	x11, [x10, #32]
   211cc:	cmp	x11, x9
   211d0:	b.ls	21218 <PyInit__decimal@@Base+0x1a6b4>  // b.plast
   211d4:	ldr	x11, [x10, #16]
   211d8:	cmp	x11, x9
   211dc:	b.ls	2125c <PyInit__decimal@@Base+0x1a6f8>  // b.plast
   211e0:	ldr	x10, [x10, #8]
   211e4:	cmp	x10, x9
   211e8:	mov	w9, #0x1                   	// #1
   211ec:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   211f0:	ldr	x11, [x10, #112]
   211f4:	cmp	x11, x9
   211f8:	b.ls	21234 <PyInit__decimal@@Base+0x1a6d0>  // b.plast
   211fc:	ldr	x11, [x10, #88]
   21200:	cmp	x11, x9
   21204:	b.ls	2126c <PyInit__decimal@@Base+0x1a708>  // b.plast
   21208:	ldr	x10, [x10, #80]
   2120c:	cmp	x10, x9
   21210:	mov	w9, #0xa                   	// #10
   21214:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   21218:	ldr	x11, [x10, #48]
   2121c:	cmp	x11, x9
   21220:	b.ls	21288 <PyInit__decimal@@Base+0x1a724>  // b.plast
   21224:	ldr	x10, [x10, #40]
   21228:	cmp	x10, x9
   2122c:	mov	w9, #0x5                   	// #5
   21230:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   21234:	ldr	x11, [x10, #144]
   21238:	cmp	x11, x9
   2123c:	b.ls	212a4 <PyInit__decimal@@Base+0x1a740>  // b.plast
   21240:	ldr	x11, [x10, #128]
   21244:	cmp	x11, x9
   21248:	b.ls	212b4 <PyInit__decimal@@Base+0x1a750>  // b.plast
   2124c:	ldr	x10, [x10, #120]
   21250:	cmp	x10, x9
   21254:	mov	w9, #0xf                   	// #15
   21258:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   2125c:	ldr	x10, [x10, #24]
   21260:	cmp	x10, x9
   21264:	mov	w9, #0x3                   	// #3
   21268:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   2126c:	ldr	x11, [x10, #104]
   21270:	cmp	x11, x9
   21274:	b.ls	212e8 <PyInit__decimal@@Base+0x1a784>  // b.plast
   21278:	ldr	x10, [x10, #96]
   2127c:	cmp	x10, x9
   21280:	mov	w9, #0xc                   	// #12
   21284:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   21288:	ldr	x11, [x10, #64]
   2128c:	cmp	x11, x9
   21290:	b.ls	212f0 <PyInit__decimal@@Base+0x1a78c>  // b.plast
   21294:	ldr	x10, [x10, #56]
   21298:	cmp	x10, x9
   2129c:	mov	w9, #0x7                   	// #7
   212a0:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   212a4:	ldr	x10, [x10, #152]
   212a8:	cmp	x10, x9
   212ac:	mov	w9, #0x13                  	// #19
   212b0:	b	212c0 <PyInit__decimal@@Base+0x1a75c>
   212b4:	ldr	x10, [x10, #136]
   212b8:	cmp	x10, x9
   212bc:	mov	w9, #0x11                  	// #17
   212c0:	cinc	x9, x9, ls  // ls = plast
   212c4:	mov	w10, #0x13                  	// #19
   212c8:	madd	x8, x8, x10, x9
   212cc:	sub	x8, x8, #0x13
   212d0:	str	x8, [x19, #16]
   212d4:	ldp	x20, x19, [sp, #48]
   212d8:	ldp	x22, x21, [sp, #32]
   212dc:	ldr	x23, [sp, #16]
   212e0:	ldp	x29, x30, [sp], #64
   212e4:	ret
   212e8:	mov	w9, #0xe                   	// #14
   212ec:	b	212c4 <PyInit__decimal@@Base+0x1a760>
   212f0:	mov	w9, #0x9                   	// #9
   212f4:	b	212c4 <PyInit__decimal@@Base+0x1a760>
   212f8:	sxtw	x1, w1
   212fc:	b	21014 <PyInit__decimal@@Base+0x1a4b0>
   21300:	stp	x29, x30, [sp, #-48]!
   21304:	str	x21, [sp, #16]
   21308:	stp	x20, x19, [sp, #32]
   2130c:	mov	x29, sp
   21310:	mov	x19, x3
   21314:	mov	x20, x2
   21318:	mov	w2, w1
   2131c:	mov	w1, wzr
   21320:	mov	x3, xzr
   21324:	mov	x21, x0
   21328:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2132c:	mov	x0, x21
   21330:	mov	x1, x20
   21334:	mov	x2, x19
   21338:	ldp	x20, x19, [sp, #32]
   2133c:	ldr	x21, [sp, #16]
   21340:	ldp	x29, x30, [sp], #48
   21344:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   21348:	b	21014 <PyInit__decimal@@Base+0x1a4b0>
   2134c:	stp	x29, x30, [sp, #-48]!
   21350:	str	x21, [sp, #16]
   21354:	stp	x20, x19, [sp, #32]
   21358:	mov	x29, sp
   2135c:	mov	x19, x3
   21360:	mov	x20, x2
   21364:	mov	x2, x1
   21368:	mov	w1, wzr
   2136c:	mov	x3, xzr
   21370:	mov	x21, x0
   21374:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   21378:	mov	x0, x21
   2137c:	mov	x1, x20
   21380:	mov	x2, x19
   21384:	ldp	x20, x19, [sp, #32]
   21388:	ldr	x21, [sp, #16]
   2138c:	ldp	x29, x30, [sp], #48
   21390:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   21394:	mov	x8, x0
   21398:	mov	w0, #0x1                   	// #1
   2139c:	mov	x2, x1
   213a0:	mov	x1, x8
   213a4:	b	213a8 <PyInit__decimal@@Base+0x1a844>
   213a8:	sub	sp, sp, #0xa0
   213ac:	stp	x29, x30, [sp, #64]
   213b0:	str	x27, [sp, #80]
   213b4:	stp	x26, x25, [sp, #96]
   213b8:	stp	x24, x23, [sp, #112]
   213bc:	stp	x22, x21, [sp, #128]
   213c0:	stp	x20, x19, [sp, #144]
   213c4:	add	x29, sp, #0x40
   213c8:	ldrb	w25, [x1]
   213cc:	mov	x19, x2
   213d0:	tst	w25, #0xe
   213d4:	b.eq	21408 <PyInit__decimal@@Base+0x1a8a4>  // b.none
   213d8:	ldr	w8, [x19]
   213dc:	mov	x0, #0xffffffffffffffff    	// #-1
   213e0:	orr	w8, w8, #0x100
   213e4:	str	w8, [x19]
   213e8:	ldp	x20, x19, [sp, #144]
   213ec:	ldp	x22, x21, [sp, #128]
   213f0:	ldp	x24, x23, [sp, #112]
   213f4:	ldp	x26, x25, [sp, #96]
   213f8:	ldr	x27, [sp, #80]
   213fc:	ldp	x29, x30, [sp, #64]
   21400:	add	sp, sp, #0xa0
   21404:	ret
   21408:	ldr	x20, [x1, #24]
   2140c:	ldr	x21, [x1, #40]
   21410:	mov	w8, w0
   21414:	mov	x22, x1
   21418:	sub	x27, x20, #0x1
   2141c:	ldr	x0, [x21, x27, lsl #3]
   21420:	cbz	x0, 213e8 <PyInit__decimal@@Base+0x1a884>
   21424:	cbz	w8, 2142c <PyInit__decimal@@Base+0x1a8c8>
   21428:	tbnz	w25, #0, 213d8 <PyInit__decimal@@Base+0x1a874>
   2142c:	ldp	x23, x24, [x22, #8]
   21430:	add	x26, x23, x24
   21434:	cmp	x26, #0x15
   21438:	b.ge	213d8 <PyInit__decimal@@Base+0x1a874>  // b.tcont
   2143c:	tbz	x23, #63, 21540 <PyInit__decimal@@Base+0x1a9dc>
   21440:	mov	x0, x22
   21444:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   21448:	cbz	w0, 213d8 <PyInit__decimal@@Base+0x1a874>
   2144c:	mov	x8, sp
   21450:	mov	w9, #0x30                  	// #48
   21454:	mov	w10, #0x2                   	// #2
   21458:	strb	w9, [sp, #16]
   2145c:	stp	x10, x8, [sp, #48]
   21460:	ldr	x8, [x21, x27, lsl #3]
   21464:	cbz	x8, 214bc <PyInit__decimal@@Base+0x1a958>
   21468:	neg	x3, x23
   2146c:	cmp	x24, x3
   21470:	b.le	214f4 <PyInit__decimal@@Base+0x1a990>
   21474:	mov	x8, #0x9436                	// #37942
   21478:	movk	x8, #0x50d7, lsl #16
   2147c:	movk	x8, #0x435e, lsl #32
   21480:	movk	x8, #0xd79, lsl #48
   21484:	smulh	x8, x26, x8
   21488:	add	x8, x8, x8, lsr #63
   2148c:	mov	x9, #0xffffffffffffffed    	// #-19
   21490:	mul	x9, x8, x9
   21494:	cmn	x9, x26
   21498:	mov	x0, sp
   2149c:	mov	x1, x21
   214a0:	mov	x2, x20
   214a4:	str	x26, [sp, #32]
   214a8:	cinc	x23, x8, ne  // ne = any
   214ac:	bl	1b8c8 <PyInit__decimal@@Base+0x14d64>
   214b0:	mov	x20, x23
   214b4:	str	x23, [sp, #40]
   214b8:	b	21510 <PyInit__decimal@@Base+0x1a9ac>
   214bc:	add	x8, sp, #0x10
   214c0:	cmp	x8, x22
   214c4:	b.eq	215d8 <PyInit__decimal@@Base+0x1aa74>  // b.none
   214c8:	lsl	x2, x20, #3
   214cc:	mov	x0, sp
   214d0:	mov	x1, x21
   214d4:	bl	6460 <memcpy@plt>
   214d8:	mov	w8, #0x30                  	// #48
   214dc:	bfxil	w8, w25, #0, #4
   214e0:	stp	x23, x24, [sp, #24]
   214e4:	str	x20, [sp, #40]
   214e8:	strb	w8, [sp, #16]
   214ec:	mov	x21, sp
   214f0:	b	21530 <PyInit__decimal@@Base+0x1a9cc>
   214f4:	cset	w2, eq  // eq = none
   214f8:	mov	x0, x21
   214fc:	mov	x1, x20
   21500:	bl	228c0 <PyInit__decimal@@Base+0x1bd5c>
   21504:	add	x0, sp, #0x10
   21508:	bl	20574 <PyInit__decimal@@Base+0x19a10>
   2150c:	ldr	x20, [sp, #40]
   21510:	ldrb	w8, [x22]
   21514:	ldrb	w9, [sp, #16]
   21518:	ldr	x24, [sp, #32]
   2151c:	ldr	x21, [sp, #56]
   21520:	bfxil	w9, w8, #0, #4
   21524:	strb	w9, [sp, #16]
   21528:	ldr	x8, [x22, #8]
   2152c:	str	x8, [sp, #24]
   21530:	str	xzr, [sp, #24]
   21534:	add	x8, x21, x20, lsl #3
   21538:	ldur	x0, [x8, #-8]
   2153c:	mov	x23, xzr
   21540:	mov	x8, #0x435f                	// #17247
   21544:	movk	x8, #0xd79, lsl #16
   21548:	movk	x8, #0x35e5, lsl #32
   2154c:	movk	x8, #0xd794, lsl #48
   21550:	umulh	x8, x24, x8
   21554:	mov	w9, #0x13                  	// #19
   21558:	lsr	x8, x8, #4
   2155c:	msub	x8, x8, x9, x24
   21560:	cmp	x8, #0x0
   21564:	csel	x8, x9, x8, eq  // eq = none
   21568:	cmp	x20, #0x1
   2156c:	b.le	215b4 <PyInit__decimal@@Base+0x1aa50>
   21570:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   21574:	mov	w9, #0x14                  	// #20
   21578:	add	x10, x10, #0xe70
   2157c:	add	x11, x21, x20, lsl #3
   21580:	sub	x9, x9, x8
   21584:	add	x8, x10, x8, lsl #3
   21588:	ldur	x11, [x11, #-16]
   2158c:	ldr	x9, [x10, x9, lsl #3]
   21590:	ldur	x8, [x8, #-8]
   21594:	umulh	x10, x9, x0
   21598:	udiv	x11, x11, x8
   2159c:	cmp	xzr, x10
   215a0:	madd	x0, x9, x0, x11
   215a4:	cset	w8, ne  // ne = any
   215a8:	cmp	x0, x11
   215ac:	b.cc	213d8 <PyInit__decimal@@Base+0x1a874>  // b.lo, b.ul, b.last
   215b0:	cbnz	w8, 213d8 <PyInit__decimal@@Base+0x1a874>
   215b4:	cmp	x23, #0x1
   215b8:	b.lt	213e8 <PyInit__decimal@@Base+0x1a884>  // b.tstop
   215bc:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   215c0:	add	x8, x8, #0xe70
   215c4:	ldr	x8, [x8, x23, lsl #3]
   215c8:	umulh	x9, x8, x0
   215cc:	cbnz	x9, 213d8 <PyInit__decimal@@Base+0x1a874>
   215d0:	mul	x0, x8, x0
   215d4:	b	213e8 <PyInit__decimal@@Base+0x1a884>
   215d8:	mov	x21, sp
   215dc:	b	21530 <PyInit__decimal@@Base+0x1a9cc>
   215e0:	mov	x2, x1
   215e4:	mov	x1, x0
   215e8:	mov	w0, wzr
   215ec:	b	213a8 <PyInit__decimal@@Base+0x1a844>
   215f0:	stp	x29, x30, [sp, #-32]!
   215f4:	stp	x20, x19, [sp, #16]
   215f8:	mov	x29, sp
   215fc:	mov	x19, x1
   21600:	mov	x20, x0
   21604:	mov	w0, wzr
   21608:	mov	x1, x20
   2160c:	mov	x2, x19
   21610:	bl	213a8 <PyInit__decimal@@Base+0x1a844>
   21614:	ldr	w9, [x19]
   21618:	tbnz	w9, #8, 2164c <PyInit__decimal@@Base+0x1aae8>
   2161c:	ldrb	w10, [x20]
   21620:	mov	x8, x0
   21624:	tbnz	x0, #63, 21634 <PyInit__decimal@@Base+0x1aad0>
   21628:	tst	w10, #0x1
   2162c:	cneg	x0, x8, ne  // ne = any
   21630:	b	21650 <PyInit__decimal@@Base+0x1aaec>
   21634:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   21638:	cmp	x8, x0
   2163c:	b.ne	21644 <PyInit__decimal@@Base+0x1aae0>  // b.any
   21640:	tbnz	w10, #0, 21650 <PyInit__decimal@@Base+0x1aaec>
   21644:	orr	w8, w9, #0x100
   21648:	str	w8, [x19]
   2164c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   21650:	ldp	x20, x19, [sp, #16]
   21654:	ldp	x29, x30, [sp], #32
   21658:	ret
   2165c:	mov	x8, x0
   21660:	mov	w0, #0x1                   	// #1
   21664:	mov	x2, x1
   21668:	mov	x1, x8
   2166c:	b	213a8 <PyInit__decimal@@Base+0x1a844>
   21670:	b	215f0 <PyInit__decimal@@Base+0x1aa8c>
   21674:	stp	x29, x30, [sp, #-32]!
   21678:	str	x19, [sp, #16]
   2167c:	mov	x29, sp
   21680:	mov	x19, x1
   21684:	mov	x1, x0
   21688:	mov	w0, #0x1                   	// #1
   2168c:	mov	x2, x19
   21690:	bl	213a8 <PyInit__decimal@@Base+0x1a844>
   21694:	ldr	w8, [x19]
   21698:	tbnz	w8, #8, 216ac <PyInit__decimal@@Base+0x1ab48>
   2169c:	lsr	x9, x0, #32
   216a0:	cbz	x9, 216b0 <PyInit__decimal@@Base+0x1ab4c>
   216a4:	orr	w8, w8, #0x100
   216a8:	str	w8, [x19]
   216ac:	mov	w0, #0xffffffff            	// #-1
   216b0:	ldr	x19, [sp, #16]
   216b4:	ldp	x29, x30, [sp], #32
   216b8:	ret
   216bc:	stp	x29, x30, [sp, #-32]!
   216c0:	str	x19, [sp, #16]
   216c4:	mov	x29, sp
   216c8:	mov	x19, x1
   216cc:	bl	215f0 <PyInit__decimal@@Base+0x1aa8c>
   216d0:	ldr	w8, [x19]
   216d4:	tbnz	w8, #8, 216e8 <PyInit__decimal@@Base+0x1ab84>
   216d8:	cmp	x0, w0, sxtw
   216dc:	b.eq	216ec <PyInit__decimal@@Base+0x1ab88>  // b.none
   216e0:	orr	w8, w8, #0x100
   216e4:	str	w8, [x19]
   216e8:	mov	w0, #0x7fffffff            	// #2147483647
   216ec:	ldr	x19, [sp, #16]
   216f0:	ldp	x29, x30, [sp], #32
   216f4:	ret
   216f8:	stp	x29, x30, [sp, #-32]!
   216fc:	stp	x20, x19, [sp, #16]
   21700:	mov	x29, sp
   21704:	ldrb	w8, [x1]
   21708:	tst	w8, #0xc
   2170c:	b.eq	21754 <PyInit__decimal@@Base+0x1abf0>  // b.none
   21710:	ldr	w9, [x3]
   21714:	and	w8, w8, #0x8
   21718:	mov	x19, x2
   2171c:	mov	x2, x3
   21720:	orr	w8, w9, w8, lsl #5
   21724:	mov	x20, x0
   21728:	str	w8, [x3]
   2172c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   21730:	ldrb	w8, [x20]
   21734:	mov	x0, x20
   21738:	mov	x1, x19
   2173c:	and	w8, w8, #0xfffffff1
   21740:	orr	w8, w8, #0x4
   21744:	strb	w8, [x20]
   21748:	bl	21810 <PyInit__decimal@@Base+0x1acac>
   2174c:	mov	w0, #0x1                   	// #1
   21750:	b	21758 <PyInit__decimal@@Base+0x1abf4>
   21754:	mov	w0, wzr
   21758:	ldp	x20, x19, [sp, #16]
   2175c:	ldp	x29, x30, [sp], #32
   21760:	ret
   21764:	stp	x29, x30, [sp, #-32]!
   21768:	stp	x20, x19, [sp, #16]
   2176c:	mov	x29, sp
   21770:	cmp	x0, x1
   21774:	b.eq	21800 <PyInit__decimal@@Base+0x1ac9c>  // b.none
   21778:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2177c:	ldr	x8, [x1, #24]
   21780:	ldr	x10, [x9, #1352]
   21784:	ldr	x9, [x0, #32]
   21788:	mov	x19, x1
   2178c:	mov	x20, x0
   21790:	cmp	x10, x8
   21794:	csel	x1, x8, x10, lt  // lt = tstop
   21798:	cmp	x1, x9
   2179c:	b.eq	217d0 <PyInit__decimal@@Base+0x1ac6c>  // b.none
   217a0:	ldrb	w10, [x20]
   217a4:	tbnz	w10, #5, 217b8 <PyInit__decimal@@Base+0x1ac54>
   217a8:	mov	x0, x20
   217ac:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   217b0:	cbnz	w0, 217cc <PyInit__decimal@@Base+0x1ac68>
   217b4:	b	21804 <PyInit__decimal@@Base+0x1aca0>
   217b8:	cmp	x1, x9
   217bc:	b.le	217d0 <PyInit__decimal@@Base+0x1ac6c>
   217c0:	mov	x0, x20
   217c4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   217c8:	cbz	w0, 21804 <PyInit__decimal@@Base+0x1aca0>
   217cc:	ldr	x8, [x19, #24]
   217d0:	ldrb	w9, [x19]
   217d4:	ldrb	w10, [x20]
   217d8:	ldr	x0, [x20, #40]
   217dc:	bfxil	w10, w9, #0, #4
   217e0:	strb	w10, [x20]
   217e4:	ldur	q0, [x19, #8]
   217e8:	str	x8, [x20, #24]
   217ec:	stur	q0, [x20, #8]
   217f0:	ldr	x8, [x19, #24]
   217f4:	ldr	x1, [x19, #40]
   217f8:	lsl	x2, x8, #3
   217fc:	bl	6460 <memcpy@plt>
   21800:	mov	w0, #0x1                   	// #1
   21804:	ldp	x20, x19, [sp, #16]
   21808:	ldp	x29, x30, [sp], #32
   2180c:	ret
   21810:	sub	sp, sp, #0x50
   21814:	stp	x29, x30, [sp, #16]
   21818:	stp	x24, x23, [sp, #32]
   2181c:	stp	x22, x21, [sp, #48]
   21820:	stp	x20, x19, [sp, #64]
   21824:	add	x29, sp, #0x10
   21828:	ldr	x8, [x0, #24]
   2182c:	cmp	x8, #0x1
   21830:	b.lt	21aa4 <PyInit__decimal@@Base+0x1af40>  // b.tstop
   21834:	ldr	x8, [x1]
   21838:	ldrsw	x9, [x1, #40]
   2183c:	mov	x20, x0
   21840:	ldr	x10, [x20, #16]!
   21844:	mov	x19, x0
   21848:	sub	x8, x8, x9
   2184c:	cmp	x10, x8
   21850:	b.le	21aa4 <PyInit__decimal@@Base+0x1af40>
   21854:	cbz	x8, 218b0 <PyInit__decimal@@Base+0x1ad4c>
   21858:	mov	x9, #0x9436                	// #37942
   2185c:	movk	x9, #0x50d7, lsl #16
   21860:	movk	x9, #0x435e, lsl #32
   21864:	movk	x9, #0xd79, lsl #48
   21868:	smulh	x9, x8, x9
   2186c:	mov	x10, #0xffffffffffffffed    	// #-19
   21870:	add	x9, x9, x9, lsr #63
   21874:	madd	x11, x9, x10, x8
   21878:	cmp	x11, #0x0
   2187c:	adrp	x23, 37000 <PyInit__decimal@@Base+0x3049c>
   21880:	cset	w10, ne  // ne = any
   21884:	cinc	x12, x9, ne  // ne = any
   21888:	add	x23, x23, #0xe70
   2188c:	cbz	x11, 218f8 <PyInit__decimal@@Base+0x1ad94>
   21890:	ldr	x8, [x19, #40]
   21894:	ldr	x11, [x23, x11, lsl #3]
   21898:	add	x12, x8, x12, lsl #3
   2189c:	ldur	x13, [x12, #-8]
   218a0:	udiv	x14, x13, x11
   218a4:	msub	x11, x14, x11, x13
   218a8:	stur	x11, [x12, #-8]
   218ac:	b	218fc <PyInit__decimal@@Base+0x1ad98>
   218b0:	ldrb	w8, [x19]
   218b4:	tbnz	w8, #5, 21aa0 <PyInit__decimal@@Base+0x1af3c>
   218b8:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   218bc:	ldr	x8, [x19, #32]
   218c0:	ldr	x1, [x21, #1352]
   218c4:	cmp	x8, x1
   218c8:	b.le	21aa0 <PyInit__decimal@@Base+0x1af3c>
   218cc:	sturb	wzr, [x29, #-4]
   218d0:	ldr	x0, [x19, #40]
   218d4:	sub	x3, x29, #0x4
   218d8:	mov	w2, #0x8                   	// #8
   218dc:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   218e0:	str	x0, [x19, #40]
   218e4:	ldurb	w8, [x29, #-4]
   218e8:	cbnz	w8, 21aa0 <PyInit__decimal@@Base+0x1af3c>
   218ec:	ldr	x8, [x21, #1352]
   218f0:	str	x8, [x19, #32]
   218f4:	b	21aa0 <PyInit__decimal@@Base+0x1af3c>
   218f8:	ldr	x8, [x19, #40]
   218fc:	add	x10, x9, x10
   21900:	mov	w11, #0x13                  	// #19
   21904:	sub	x9, x10, #0x1
   21908:	mul	x10, x10, x11
   2190c:	sub	x10, x10, #0x13
   21910:	add	x24, x9, #0x1
   21914:	mov	x21, x9
   21918:	cmp	x24, #0x2
   2191c:	mov	x22, x10
   21920:	b.lt	21934 <PyInit__decimal@@Base+0x1add0>  // b.tstop
   21924:	ldr	x11, [x8, x21, lsl #3]
   21928:	sub	x9, x21, #0x1
   2192c:	sub	x10, x22, #0x13
   21930:	cbz	x11, 21910 <PyInit__decimal@@Base+0x1adac>
   21934:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   21938:	ldr	x9, [x8, #1352]
   2193c:	ldr	x8, [x19, #32]
   21940:	cmp	x9, x24
   21944:	csinc	x1, x9, x21, ge  // ge = tcont
   21948:	cmp	x1, x8
   2194c:	b.eq	2197c <PyInit__decimal@@Base+0x1ae18>  // b.none
   21950:	ldrb	w9, [x19]
   21954:	tbnz	w9, #5, 21968 <PyInit__decimal@@Base+0x1ae04>
   21958:	add	x2, sp, #0x8
   2195c:	mov	x0, x19
   21960:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   21964:	b	2197c <PyInit__decimal@@Base+0x1ae18>
   21968:	cmp	x1, x8
   2196c:	b.le	2197c <PyInit__decimal@@Base+0x1ae18>
   21970:	add	x2, sp, #0x8
   21974:	mov	x0, x19
   21978:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2197c:	ldr	x8, [x19, #40]
   21980:	str	x24, [x19, #24]
   21984:	ldr	x10, [x23, #72]
   21988:	ldr	x9, [x8, x21, lsl #3]
   2198c:	cmp	x10, x9
   21990:	b.ls	219bc <PyInit__decimal@@Base+0x1ae58>  // b.plast
   21994:	ldr	x10, [x23, #32]
   21998:	cmp	x10, x9
   2199c:	b.ls	219e4 <PyInit__decimal@@Base+0x1ae80>  // b.plast
   219a0:	ldr	x10, [x23, #16]
   219a4:	cmp	x10, x9
   219a8:	b.ls	21a28 <PyInit__decimal@@Base+0x1aec4>  // b.plast
   219ac:	ldr	x10, [x23, #8]
   219b0:	cmp	x10, x9
   219b4:	mov	w9, #0x1                   	// #1
   219b8:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   219bc:	ldr	x10, [x23, #112]
   219c0:	cmp	x10, x9
   219c4:	b.ls	21a00 <PyInit__decimal@@Base+0x1ae9c>  // b.plast
   219c8:	ldr	x10, [x23, #88]
   219cc:	cmp	x10, x9
   219d0:	b.ls	21a38 <PyInit__decimal@@Base+0x1aed4>  // b.plast
   219d4:	ldr	x10, [x23, #80]
   219d8:	cmp	x10, x9
   219dc:	mov	w9, #0xa                   	// #10
   219e0:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   219e4:	ldr	x10, [x23, #48]
   219e8:	cmp	x10, x9
   219ec:	b.ls	21a54 <PyInit__decimal@@Base+0x1aef0>  // b.plast
   219f0:	ldr	x10, [x23, #40]
   219f4:	cmp	x10, x9
   219f8:	mov	w9, #0x5                   	// #5
   219fc:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a00:	ldr	x10, [x23, #144]
   21a04:	cmp	x10, x9
   21a08:	b.ls	21a70 <PyInit__decimal@@Base+0x1af0c>  // b.plast
   21a0c:	ldr	x10, [x23, #128]
   21a10:	cmp	x10, x9
   21a14:	b.ls	21a80 <PyInit__decimal@@Base+0x1af1c>  // b.plast
   21a18:	ldr	x10, [x23, #120]
   21a1c:	cmp	x10, x9
   21a20:	mov	w9, #0xf                   	// #15
   21a24:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a28:	ldr	x10, [x23, #24]
   21a2c:	cmp	x10, x9
   21a30:	mov	w9, #0x3                   	// #3
   21a34:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a38:	ldr	x10, [x23, #104]
   21a3c:	cmp	x10, x9
   21a40:	b.ls	21abc <PyInit__decimal@@Base+0x1af58>  // b.plast
   21a44:	ldr	x10, [x23, #96]
   21a48:	cmp	x10, x9
   21a4c:	mov	w9, #0xc                   	// #12
   21a50:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a54:	ldr	x10, [x23, #64]
   21a58:	cmp	x10, x9
   21a5c:	b.ls	21ac4 <PyInit__decimal@@Base+0x1af60>  // b.plast
   21a60:	ldr	x10, [x23, #56]
   21a64:	cmp	x10, x9
   21a68:	mov	w9, #0x7                   	// #7
   21a6c:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a70:	ldr	x10, [x23, #152]
   21a74:	cmp	x10, x9
   21a78:	mov	w9, #0x13                  	// #19
   21a7c:	b	21a8c <PyInit__decimal@@Base+0x1af28>
   21a80:	ldr	x10, [x23, #136]
   21a84:	cmp	x10, x9
   21a88:	mov	w9, #0x11                  	// #17
   21a8c:	cinc	x9, x9, ls  // ls = plast
   21a90:	add	x9, x9, x22
   21a94:	str	x9, [x20]
   21a98:	ldr	x8, [x8, x21, lsl #3]
   21a9c:	cbnz	x8, 21aa4 <PyInit__decimal@@Base+0x1af40>
   21aa0:	stp	xzr, xzr, [x20]
   21aa4:	ldp	x20, x19, [sp, #64]
   21aa8:	ldp	x22, x21, [sp, #48]
   21aac:	ldp	x24, x23, [sp, #32]
   21ab0:	ldp	x29, x30, [sp, #16]
   21ab4:	add	sp, sp, #0x50
   21ab8:	ret
   21abc:	mov	w9, #0xe                   	// #14
   21ac0:	b	21a90 <PyInit__decimal@@Base+0x1af2c>
   21ac4:	mov	w9, #0x9                   	// #9
   21ac8:	b	21a90 <PyInit__decimal@@Base+0x1af2c>
   21acc:	stp	x29, x30, [sp, #-32]!
   21ad0:	stp	x20, x19, [sp, #16]
   21ad4:	mov	x29, sp
   21ad8:	ldrb	w8, [x1]
   21adc:	ldrb	w9, [x2]
   21ae0:	orr	w10, w9, w8
   21ae4:	tst	w10, #0xc
   21ae8:	b.eq	21b08 <PyInit__decimal@@Base+0x1afa4>  // b.none
   21aec:	mov	x19, x3
   21af0:	mov	x20, x0
   21af4:	tbnz	w8, #3, 21b10 <PyInit__decimal@@Base+0x1afac>
   21af8:	tbnz	w9, #3, 21b18 <PyInit__decimal@@Base+0x1afb4>
   21afc:	tst	w8, #0x4
   21b00:	csel	x1, x2, x1, eq  // eq = none
   21b04:	b	21b28 <PyInit__decimal@@Base+0x1afc4>
   21b08:	mov	w0, wzr
   21b0c:	b	21b54 <PyInit__decimal@@Base+0x1aff0>
   21b10:	ldr	w8, [x4]
   21b14:	b	21b20 <PyInit__decimal@@Base+0x1afbc>
   21b18:	ldr	w8, [x4]
   21b1c:	mov	x1, x2
   21b20:	orr	w8, w8, #0x100
   21b24:	str	w8, [x4]
   21b28:	mov	x0, x20
   21b2c:	mov	x2, x4
   21b30:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   21b34:	ldrb	w8, [x20]
   21b38:	mov	x0, x20
   21b3c:	mov	x1, x19
   21b40:	and	w8, w8, #0xfffffff1
   21b44:	orr	w8, w8, #0x4
   21b48:	strb	w8, [x20]
   21b4c:	bl	21810 <PyInit__decimal@@Base+0x1acac>
   21b50:	mov	w0, #0x1                   	// #1
   21b54:	ldp	x20, x19, [sp, #16]
   21b58:	ldp	x29, x30, [sp], #32
   21b5c:	ret
   21b60:	stp	x29, x30, [sp, #-64]!
   21b64:	str	x23, [sp, #16]
   21b68:	stp	x22, x21, [sp, #32]
   21b6c:	stp	x20, x19, [sp, #48]
   21b70:	mov	x29, sp
   21b74:	ldp	x8, x10, [x0, #8]
   21b78:	ldr	x9, [x1, #8]
   21b7c:	mov	x20, x0
   21b80:	mov	x21, x1
   21b84:	add	x10, x8, x10
   21b88:	sub	x23, x10, #0x1
   21b8c:	cmp	x23, x9
   21b90:	mov	x19, x2
   21b94:	b.le	21be8 <PyInit__decimal@@Base+0x1b084>
   21b98:	ldr	x8, [x20, #40]
   21b9c:	ldr	x10, [x20, #24]
   21ba0:	add	x8, x8, x10, lsl #3
   21ba4:	ldur	x8, [x8, #-8]
   21ba8:	cbz	x8, 21ce4 <PyInit__decimal@@Base+0x1b180>
   21bac:	ldr	w8, [x21, #36]
   21bb0:	cmp	w8, #0x8
   21bb4:	b.hi	2201c <PyInit__decimal@@Base+0x1b4b8>  // b.pmore
   21bb8:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   21bbc:	add	x9, x9, #0x1d0
   21bc0:	adr	x10, 21bd0 <PyInit__decimal@@Base+0x1b06c>
   21bc4:	ldrb	w11, [x9, x8]
   21bc8:	add	x10, x10, x11, lsl #2
   21bcc:	br	x10
   21bd0:	ldrb	w8, [x20]
   21bd4:	and	w1, w8, #0x1
   21bd8:	mov	w2, #0x2                   	// #2
   21bdc:	mov	x0, x20
   21be0:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   21be4:	b	21d54 <PyInit__decimal@@Base+0x1b1f0>
   21be8:	ldr	w10, [x21, #40]
   21bec:	cbz	w10, 21c5c <PyInit__decimal@@Base+0x1b0f8>
   21bf0:	ldr	x10, [x21]
   21bf4:	sub	x9, x9, x10
   21bf8:	add	x9, x9, #0x1
   21bfc:	subs	x22, x8, x9
   21c00:	b.le	21c5c <PyInit__decimal@@Base+0x1b0f8>
   21c04:	mov	x0, x20
   21c08:	mov	x1, x20
   21c0c:	mov	x2, x22
   21c10:	mov	x3, x19
   21c14:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   21c18:	cbz	w0, 21ff8 <PyInit__decimal@@Base+0x1b494>
   21c1c:	ldr	x8, [x20, #8]
   21c20:	sub	x8, x8, x22
   21c24:	str	x8, [x20, #8]
   21c28:	ldr	w8, [x19]
   21c2c:	orr	w9, w8, #0x1
   21c30:	str	w9, [x19]
   21c34:	ldr	x9, [x20, #40]
   21c38:	ldr	x10, [x20, #24]
   21c3c:	add	x9, x9, x10, lsl #3
   21c40:	ldur	x9, [x9, #-8]
   21c44:	cbz	x9, 21ff8 <PyInit__decimal@@Base+0x1b494>
   21c48:	ldr	x9, [x21, #16]
   21c4c:	cmp	x23, x9
   21c50:	b.ge	21ff8 <PyInit__decimal@@Base+0x1b494>  // b.tcont
   21c54:	mov	w9, #0x2001                	// #8193
   21c58:	b	21d5c <PyInit__decimal@@Base+0x1b1f8>
   21c5c:	ldr	x9, [x21, #16]
   21c60:	cmp	x23, x9
   21c64:	b.ge	21ff8 <PyInit__decimal@@Base+0x1b494>  // b.tcont
   21c68:	ldr	x10, [x20, #40]
   21c6c:	ldr	x11, [x20, #24]
   21c70:	ldr	x12, [x21]
   21c74:	add	x10, x10, x11, lsl #3
   21c78:	ldur	x10, [x10, #-8]
   21c7c:	sub	x9, x9, x12
   21c80:	add	x22, x9, #0x1
   21c84:	cbz	x10, 21d04 <PyInit__decimal@@Base+0x1b1a0>
   21c88:	ldr	w9, [x19]
   21c8c:	subs	x1, x22, x8
   21c90:	orr	w9, w9, #0x2000
   21c94:	str	w9, [x19]
   21c98:	b.le	21ff8 <PyInit__decimal@@Base+0x1b494>
   21c9c:	mov	x0, x20
   21ca0:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   21ca4:	str	x22, [x20, #8]
   21ca8:	ldr	w9, [x21, #36]
   21cac:	mov	x21, x0
   21cb0:	cmp	w9, #0x7
   21cb4:	b.hi	21fb4 <PyInit__decimal@@Base+0x1b450>  // b.pmore
   21cb8:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   21cbc:	add	x10, x10, #0x1c8
   21cc0:	adr	x11, 21cd8 <PyInit__decimal@@Base+0x1b174>
   21cc4:	ldrb	w12, [x10, x9]
   21cc8:	add	x11, x11, x12, lsl #2
   21ccc:	lsl	x8, x21, #32
   21cd0:	sxtw	x9, w21
   21cd4:	br	x11
   21cd8:	cmp	x8, #0x0
   21cdc:	cset	w8, ne  // ne = any
   21ce0:	b	21e00 <PyInit__decimal@@Base+0x1b29c>
   21ce4:	str	x9, [x20, #8]
   21ce8:	ldr	w8, [x21, #40]
   21cec:	cbz	w8, 21fe4 <PyInit__decimal@@Base+0x1b480>
   21cf0:	ldr	x8, [x21]
   21cf4:	sub	x8, x9, x8
   21cf8:	add	x8, x8, #0x1
   21cfc:	str	x8, [x20, #8]
   21d00:	b	21fe4 <PyInit__decimal@@Base+0x1b480>
   21d04:	cmp	x22, x8
   21d08:	b.le	21ff8 <PyInit__decimal@@Base+0x1b494>
   21d0c:	str	x22, [x20, #8]
   21d10:	b	21fe4 <PyInit__decimal@@Base+0x1b480>
   21d14:	ldrb	w8, [x20]
   21d18:	tbnz	w8, #0, 21d34 <PyInit__decimal@@Base+0x1b1d0>
   21d1c:	mov	w2, #0x2                   	// #2
   21d20:	mov	x0, x20
   21d24:	mov	w1, wzr
   21d28:	b	21be0 <PyInit__decimal@@Base+0x1b07c>
   21d2c:	ldrb	w8, [x20]
   21d30:	tbnz	w8, #0, 21d64 <PyInit__decimal@@Base+0x1b200>
   21d34:	mov	x0, x20
   21d38:	mov	x1, x21
   21d3c:	mov	x2, x19
   21d40:	bl	205f0 <PyInit__decimal@@Base+0x19a8c>
   21d44:	ldp	x9, x8, [x21]
   21d48:	sub	x8, x8, x9
   21d4c:	add	x8, x8, #0x1
   21d50:	str	x8, [x20, #8]
   21d54:	ldr	w8, [x19]
   21d58:	mov	w9, #0x1840                	// #6208
   21d5c:	orr	w8, w8, w9
   21d60:	b	21ff4 <PyInit__decimal@@Base+0x1b490>
   21d64:	mov	w1, #0x1                   	// #1
   21d68:	b	21bd8 <PyInit__decimal@@Base+0x1b074>
   21d6c:	cbz	x8, 21fb4 <PyInit__decimal@@Base+0x1b450>
   21d70:	ldrb	w8, [x20]
   21d74:	mvn	w8, w8
   21d78:	b	21da4 <PyInit__decimal@@Base+0x1b240>
   21d7c:	cmp	x9, #0x5
   21d80:	b.hi	21e04 <PyInit__decimal@@Base+0x1b2a0>  // b.pmore
   21d84:	mov	x9, #0x500000000           	// #21474836480
   21d88:	cmp	x8, x9
   21d8c:	b.ne	21fb4 <PyInit__decimal@@Base+0x1b450>  // b.any
   21d90:	ldr	x8, [x20, #40]
   21d94:	ldr	w8, [x8]
   21d98:	b	21da4 <PyInit__decimal@@Base+0x1b240>
   21d9c:	cbz	x8, 21fb4 <PyInit__decimal@@Base+0x1b450>
   21da0:	ldrb	w8, [x20]
   21da4:	and	w8, w8, #0x1
   21da8:	b	21e00 <PyInit__decimal@@Base+0x1b29c>
   21dac:	cmp	x9, #0x4
   21db0:	b	21db8 <PyInit__decimal@@Base+0x1b254>
   21db4:	cmp	x9, #0x5
   21db8:	cset	w8, hi  // hi = pmore
   21dbc:	b	21e00 <PyInit__decimal@@Base+0x1b29c>
   21dc0:	ldr	x9, [x20, #40]
   21dc4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   21dc8:	movk	x10, #0xcccd
   21dcc:	mov	w11, #0xa                   	// #10
   21dd0:	ldr	x9, [x9]
   21dd4:	cmp	x8, #0x0
   21dd8:	cset	w8, ne  // ne = any
   21ddc:	umulh	x10, x9, x10
   21de0:	lsr	x10, x10, #3
   21de4:	msub	w9, w10, w11, w9
   21de8:	cmp	w9, #0x0
   21dec:	cset	w10, eq  // eq = none
   21df0:	cmp	w9, #0x5
   21df4:	cset	w9, eq  // eq = none
   21df8:	orr	w9, w10, w9
   21dfc:	and	w8, w8, w9
   21e00:	cbz	w8, 21fb4 <PyInit__decimal@@Base+0x1b450>
   21e04:	ldr	x0, [x20, #40]
   21e08:	ldr	x1, [x20, #24]
   21e0c:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   21e10:	cbz	x0, 21e4c <PyInit__decimal@@Base+0x1b2e8>
   21e14:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   21e18:	ldr	x10, [x9, #1352]
   21e1c:	ldp	x8, x9, [x20, #24]
   21e20:	add	x11, x8, #0x1
   21e24:	cmp	x10, x11
   21e28:	csinc	x1, x10, x8, ge  // ge = tcont
   21e2c:	cmp	x1, x9
   21e30:	b.eq	21e74 <PyInit__decimal@@Base+0x1b310>  // b.none
   21e34:	ldrb	w10, [x20]
   21e38:	tbnz	w10, #5, 21e58 <PyInit__decimal@@Base+0x1b2f4>
   21e3c:	mov	x0, x20
   21e40:	mov	x2, x19
   21e44:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   21e48:	b	21e6c <PyInit__decimal@@Base+0x1b308>
   21e4c:	ldr	x9, [x20, #40]
   21e50:	ldr	x8, [x20, #24]
   21e54:	b	21e8c <PyInit__decimal@@Base+0x1b328>
   21e58:	cmp	x1, x9
   21e5c:	b.le	21e74 <PyInit__decimal@@Base+0x1b310>
   21e60:	mov	x0, x20
   21e64:	mov	x2, x19
   21e68:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   21e6c:	cbz	w0, 21fb4 <PyInit__decimal@@Base+0x1b450>
   21e70:	ldr	x8, [x20, #24]
   21e74:	ldr	x9, [x20, #40]
   21e78:	mov	w10, #0x1                   	// #1
   21e7c:	str	x10, [x9, x8, lsl #3]
   21e80:	ldr	x8, [x20, #24]
   21e84:	add	x8, x8, #0x1
   21e88:	str	x8, [x20, #24]
   21e8c:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   21e90:	add	x9, x9, x8, lsl #3
   21e94:	add	x10, x10, #0xe70
   21e98:	ldur	x9, [x9, #-8]
   21e9c:	ldr	x11, [x10, #72]
   21ea0:	cmp	x11, x9
   21ea4:	b.ls	21ed0 <PyInit__decimal@@Base+0x1b36c>  // b.plast
   21ea8:	ldr	x11, [x10, #32]
   21eac:	cmp	x11, x9
   21eb0:	b.ls	21ef8 <PyInit__decimal@@Base+0x1b394>  // b.plast
   21eb4:	ldr	x11, [x10, #16]
   21eb8:	cmp	x11, x9
   21ebc:	b.ls	21f3c <PyInit__decimal@@Base+0x1b3d8>  // b.plast
   21ec0:	ldr	x10, [x10, #8]
   21ec4:	cmp	x10, x9
   21ec8:	mov	w9, #0x1                   	// #1
   21ecc:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21ed0:	ldr	x11, [x10, #112]
   21ed4:	cmp	x11, x9
   21ed8:	b.ls	21f14 <PyInit__decimal@@Base+0x1b3b0>  // b.plast
   21edc:	ldr	x11, [x10, #88]
   21ee0:	cmp	x11, x9
   21ee4:	b.ls	21f4c <PyInit__decimal@@Base+0x1b3e8>  // b.plast
   21ee8:	ldr	x10, [x10, #80]
   21eec:	cmp	x10, x9
   21ef0:	mov	w9, #0xa                   	// #10
   21ef4:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21ef8:	ldr	x11, [x10, #48]
   21efc:	cmp	x11, x9
   21f00:	b.ls	21f68 <PyInit__decimal@@Base+0x1b404>  // b.plast
   21f04:	ldr	x10, [x10, #40]
   21f08:	cmp	x10, x9
   21f0c:	mov	w9, #0x5                   	// #5
   21f10:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f14:	ldr	x11, [x10, #144]
   21f18:	cmp	x11, x9
   21f1c:	b.ls	21f84 <PyInit__decimal@@Base+0x1b420>  // b.plast
   21f20:	ldr	x11, [x10, #128]
   21f24:	cmp	x11, x9
   21f28:	b.ls	21f94 <PyInit__decimal@@Base+0x1b430>  // b.plast
   21f2c:	ldr	x10, [x10, #120]
   21f30:	cmp	x10, x9
   21f34:	mov	w9, #0xf                   	// #15
   21f38:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f3c:	ldr	x10, [x10, #24]
   21f40:	cmp	x10, x9
   21f44:	mov	w9, #0x3                   	// #3
   21f48:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f4c:	ldr	x11, [x10, #104]
   21f50:	cmp	x11, x9
   21f54:	b.ls	2200c <PyInit__decimal@@Base+0x1b4a8>  // b.plast
   21f58:	ldr	x10, [x10, #96]
   21f5c:	cmp	x10, x9
   21f60:	mov	w9, #0xc                   	// #12
   21f64:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f68:	ldr	x11, [x10, #64]
   21f6c:	cmp	x11, x9
   21f70:	b.ls	22014 <PyInit__decimal@@Base+0x1b4b0>  // b.plast
   21f74:	ldr	x10, [x10, #56]
   21f78:	cmp	x10, x9
   21f7c:	mov	w9, #0x7                   	// #7
   21f80:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f84:	ldr	x10, [x10, #152]
   21f88:	cmp	x10, x9
   21f8c:	mov	w9, #0x13                  	// #19
   21f90:	b	21fa0 <PyInit__decimal@@Base+0x1b43c>
   21f94:	ldr	x10, [x10, #136]
   21f98:	cmp	x10, x9
   21f9c:	mov	w9, #0x11                  	// #17
   21fa0:	cinc	x9, x9, ls  // ls = plast
   21fa4:	mov	w10, #0x13                  	// #19
   21fa8:	madd	x8, x8, x10, x9
   21fac:	sub	x8, x8, #0x13
   21fb0:	str	x8, [x20, #16]
   21fb4:	ldr	w8, [x19]
   21fb8:	orr	w9, w8, #0x1000
   21fbc:	str	w9, [x19]
   21fc0:	cbz	w21, 21ff8 <PyInit__decimal@@Base+0x1b494>
   21fc4:	mov	w9, #0x5040                	// #20544
   21fc8:	orr	w8, w8, w9
   21fcc:	str	w8, [x19]
   21fd0:	ldr	x8, [x20, #40]
   21fd4:	ldr	x9, [x20, #24]
   21fd8:	add	x8, x8, x9, lsl #3
   21fdc:	ldur	x8, [x8, #-8]
   21fe0:	cbnz	x8, 21ff8 <PyInit__decimal@@Base+0x1b494>
   21fe4:	mov	x0, x20
   21fe8:	bl	20574 <PyInit__decimal@@Base+0x19a10>
   21fec:	ldr	w8, [x19]
   21ff0:	orr	w8, w8, #0x1
   21ff4:	str	w8, [x19]
   21ff8:	ldp	x20, x19, [sp, #48]
   21ffc:	ldp	x22, x21, [sp, #32]
   22000:	ldr	x23, [sp, #16]
   22004:	ldp	x29, x30, [sp], #64
   22008:	ret
   2200c:	mov	w9, #0xe                   	// #14
   22010:	b	21fa4 <PyInit__decimal@@Base+0x1b440>
   22014:	mov	w9, #0x9                   	// #9
   22018:	b	21fa4 <PyInit__decimal@@Base+0x1b440>
   2201c:	bl	67b0 <abort@plt>
   22020:	stp	x29, x30, [sp, #-32]!
   22024:	stp	x20, x19, [sp, #16]
   22028:	mov	x29, sp
   2202c:	mov	x19, x0
   22030:	ldr	x0, [x0, #24]
   22034:	bl	1f77c <PyInit__decimal@@Base+0x18c18>
   22038:	mov	x20, x0
   2203c:	cbz	x0, 22074 <PyInit__decimal@@Base+0x1b510>
   22040:	ldr	x8, [x19, #24]
   22044:	ldr	x0, [x20, #40]
   22048:	ldr	x1, [x19, #40]
   2204c:	lsl	x2, x8, #3
   22050:	bl	6460 <memcpy@plt>
   22054:	ldrb	w8, [x19]
   22058:	ldrb	w9, [x20]
   2205c:	bfxil	w9, w8, #0, #4
   22060:	strb	w9, [x20]
   22064:	ldur	q0, [x19, #8]
   22068:	stur	q0, [x20, #8]
   2206c:	ldr	x8, [x19, #24]
   22070:	str	x8, [x20, #24]
   22074:	mov	x0, x20
   22078:	ldp	x20, x19, [sp, #16]
   2207c:	ldp	x29, x30, [sp], #32
   22080:	ret
   22084:	stp	x29, x30, [sp, #-32]!
   22088:	str	x19, [sp, #16]
   2208c:	mov	x29, sp
   22090:	mov	x19, x0
   22094:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   22098:	cbz	w0, 220ac <PyInit__decimal@@Base+0x1b548>
   2209c:	ldrb	w8, [x19]
   220a0:	mov	w0, #0x1                   	// #1
   220a4:	and	w8, w8, #0xfe
   220a8:	strb	w8, [x19]
   220ac:	ldr	x19, [sp, #16]
   220b0:	ldp	x29, x30, [sp], #32
   220b4:	ret
   220b8:	stp	x29, x30, [sp, #-32]!
   220bc:	str	x19, [sp, #16]
   220c0:	mov	x29, sp
   220c4:	mov	x19, x0
   220c8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   220cc:	cbz	w0, 220e0 <PyInit__decimal@@Base+0x1b57c>
   220d0:	ldrb	w8, [x19]
   220d4:	mov	w0, #0x1                   	// #1
   220d8:	eor	w8, w8, #0x1
   220dc:	strb	w8, [x19]
   220e0:	ldr	x19, [sp, #16]
   220e4:	ldp	x29, x30, [sp], #32
   220e8:	ret
   220ec:	stp	x29, x30, [sp, #-32]!
   220f0:	stp	x20, x19, [sp, #16]
   220f4:	mov	x29, sp
   220f8:	ldrb	w20, [x2]
   220fc:	mov	x2, x3
   22100:	mov	x19, x0
   22104:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   22108:	cbz	w0, 2211c <PyInit__decimal@@Base+0x1b5b8>
   2210c:	ldrb	w8, [x19]
   22110:	mov	w0, #0x1                   	// #1
   22114:	bfxil	w8, w20, #0, #1
   22118:	strb	w8, [x19]
   2211c:	ldp	x20, x19, [sp, #16]
   22120:	ldp	x29, x30, [sp], #32
   22124:	ret
   22128:	ldrb	w8, [x0]
   2212c:	tst	w8, #0xe
   22130:	b.ne	22140 <PyInit__decimal@@Base+0x1b5dc>  // b.any
   22134:	ldrb	w9, [x1]
   22138:	tst	w9, #0xe
   2213c:	b.eq	22168 <PyInit__decimal@@Base+0x1b604>  // b.none
   22140:	tst	w8, #0xc
   22144:	b.ne	22154 <PyInit__decimal@@Base+0x1b5f0>  // b.any
   22148:	ldrb	w8, [x1]
   2214c:	tst	w8, #0xc
   22150:	b.eq	22168 <PyInit__decimal@@Base+0x1b604>  // b.none
   22154:	ldr	w8, [x2]
   22158:	mov	w0, #0x7fffffff            	// #2147483647
   2215c:	orr	w8, w8, #0x100
   22160:	str	w8, [x2]
   22164:	ret
   22168:	b	2216c <PyInit__decimal@@Base+0x1b608>
   2216c:	stp	x29, x30, [sp, #-32]!
   22170:	str	x19, [sp, #16]
   22174:	mov	x29, sp
   22178:	cmp	x0, x1
   2217c:	b.eq	22234 <PyInit__decimal@@Base+0x1b6d0>  // b.none
   22180:	ldrb	w8, [x0]
   22184:	ldrb	w9, [x1]
   22188:	mov	x19, x0
   2218c:	tbnz	w8, #1, 221a0 <PyInit__decimal@@Base+0x1b63c>
   22190:	tbz	w9, #1, 221b0 <PyInit__decimal@@Base+0x1b64c>
   22194:	ubfiz	w8, w9, #1, #1
   22198:	sub	w0, w8, #0x1
   2219c:	b	22238 <PyInit__decimal@@Base+0x1b6d4>
   221a0:	tbz	w9, #1, 22220 <PyInit__decimal@@Base+0x1b6bc>
   221a4:	and	w9, w9, #0x1
   221a8:	and	w8, w8, #0x1
   221ac:	b	22228 <PyInit__decimal@@Base+0x1b6c4>
   221b0:	ldr	x10, [x19, #40]
   221b4:	ldr	x11, [x19, #24]
   221b8:	ldr	x12, [x1, #40]
   221bc:	ldr	x13, [x1, #24]
   221c0:	add	x10, x10, x11, lsl #3
   221c4:	ldur	x11, [x10, #-8]
   221c8:	add	x10, x12, x13, lsl #3
   221cc:	ldur	x10, [x10, #-8]
   221d0:	cbz	x11, 22230 <PyInit__decimal@@Base+0x1b6cc>
   221d4:	cbz	x10, 22220 <PyInit__decimal@@Base+0x1b6bc>
   221d8:	and	w10, w8, #0x1
   221dc:	and	w9, w9, #0x1
   221e0:	cmp	w10, w9
   221e4:	b.ne	22244 <PyInit__decimal@@Base+0x1b6e0>  // b.any
   221e8:	ldp	x9, x10, [x19, #8]
   221ec:	ldp	x11, x12, [x1, #8]
   221f0:	add	x10, x9, x10
   221f4:	add	x9, x11, x12
   221f8:	cmp	x10, x9
   221fc:	b.ne	2224c <PyInit__decimal@@Base+0x1b6e8>  // b.any
   22200:	mov	x0, x19
   22204:	bl	2e714 <PyInit__decimal@@Base+0x27bb0>
   22208:	ldrb	w8, [x19]
   2220c:	mov	w9, #0x1                   	// #1
   22210:	ubfiz	w8, w8, #1, #1
   22214:	sub	w8, w9, w8
   22218:	mul	w0, w8, w0
   2221c:	b	22238 <PyInit__decimal@@Base+0x1b6d4>
   22220:	ubfiz	w8, w8, #1, #1
   22224:	mov	w9, #0x1                   	// #1
   22228:	sub	w0, w9, w8
   2222c:	b	22238 <PyInit__decimal@@Base+0x1b6d4>
   22230:	cbnz	x10, 22194 <PyInit__decimal@@Base+0x1b630>
   22234:	mov	w0, wzr
   22238:	ldr	x19, [sp, #16]
   2223c:	ldp	x29, x30, [sp], #32
   22240:	ret
   22244:	sub	w0, w9, w10
   22248:	b	22238 <PyInit__decimal@@Base+0x1b6d4>
   2224c:	sub	x10, x10, #0x1
   22250:	sub	x9, x9, #0x1
   22254:	ubfiz	w8, w8, #1, #1
   22258:	mov	w11, #0x1                   	// #1
   2225c:	sub	w11, w11, w8
   22260:	sub	w8, w8, #0x1
   22264:	cmp	x10, x9
   22268:	csel	w0, w8, w11, lt  // lt = tstop
   2226c:	b	22238 <PyInit__decimal@@Base+0x1b6d4>
   22270:	stp	x29, x30, [sp, #-48]!
   22274:	str	x21, [sp, #16]
   22278:	stp	x20, x19, [sp, #32]
   2227c:	mov	x29, sp
   22280:	ldrb	w8, [x1]
   22284:	mov	x20, x2
   22288:	mov	x21, x1
   2228c:	mov	x19, x0
   22290:	tst	w8, #0xe
   22294:	b.ne	222a4 <PyInit__decimal@@Base+0x1b740>  // b.any
   22298:	ldrb	w8, [x20]
   2229c:	tst	w8, #0xe
   222a0:	b.eq	222c0 <PyInit__decimal@@Base+0x1b75c>  // b.none
   222a4:	mov	x0, x19
   222a8:	mov	x1, x21
   222ac:	mov	x2, x20
   222b0:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   222b4:	cbz	w0, 222c0 <PyInit__decimal@@Base+0x1b75c>
   222b8:	mov	w20, #0x7fffffff            	// #2147483647
   222bc:	b	222e8 <PyInit__decimal@@Base+0x1b784>
   222c0:	mov	x0, x21
   222c4:	mov	x1, x20
   222c8:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   222cc:	cmp	w0, #0x0
   222d0:	mov	w20, w0
   222d4:	lsr	w1, w0, #31
   222d8:	cset	w2, ne  // ne = any
   222dc:	mov	x0, x19
   222e0:	mov	x3, xzr
   222e4:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   222e8:	mov	w0, w20
   222ec:	ldp	x20, x19, [sp, #32]
   222f0:	ldr	x21, [sp, #16]
   222f4:	ldp	x29, x30, [sp], #48
   222f8:	ret
   222fc:	stp	x29, x30, [sp, #-48]!
   22300:	stp	x22, x21, [sp, #16]
   22304:	stp	x20, x19, [sp, #32]
   22308:	mov	x29, sp
   2230c:	ldrb	w8, [x1]
   22310:	mov	x20, x4
   22314:	mov	x21, x2
   22318:	mov	x22, x1
   2231c:	tst	w8, #0xe
   22320:	mov	x19, x0
   22324:	b.ne	22334 <PyInit__decimal@@Base+0x1b7d0>  // b.any
   22328:	ldrb	w8, [x21]
   2232c:	tst	w8, #0xe
   22330:	b.eq	22360 <PyInit__decimal@@Base+0x1b7fc>  // b.none
   22334:	mov	x0, x19
   22338:	mov	x1, x22
   2233c:	mov	x2, x21
   22340:	mov	x4, x20
   22344:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   22348:	cbz	w0, 22360 <PyInit__decimal@@Base+0x1b7fc>
   2234c:	ldr	w8, [x20]
   22350:	orr	w8, w8, #0x100
   22354:	str	w8, [x20]
   22358:	mov	w20, #0x7fffffff            	// #2147483647
   2235c:	b	22388 <PyInit__decimal@@Base+0x1b824>
   22360:	mov	x0, x22
   22364:	mov	x1, x21
   22368:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2236c:	cmp	w0, #0x0
   22370:	mov	w20, w0
   22374:	lsr	w1, w0, #31
   22378:	cset	w2, ne  // ne = any
   2237c:	mov	x0, x19
   22380:	mov	x3, xzr
   22384:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   22388:	mov	w0, w20
   2238c:	ldp	x20, x19, [sp, #32]
   22390:	ldp	x22, x21, [sp, #16]
   22394:	ldp	x29, x30, [sp], #48
   22398:	ret
   2239c:	sub	sp, sp, #0x80
   223a0:	stp	x29, x30, [sp, #96]
   223a4:	stp	x20, x19, [sp, #112]
   223a8:	add	x29, sp, #0x60
   223ac:	ldrb	w9, [x0]
   223b0:	ldrb	w8, [x1]
   223b4:	and	w10, w9, #0x1
   223b8:	and	w11, w8, #0x1
   223bc:	cmp	w10, w11
   223c0:	b.ne	223f8 <PyInit__decimal@@Base+0x1b894>  // b.any
   223c4:	mov	x20, x1
   223c8:	mov	x19, x0
   223cc:	tst	w9, #0xc
   223d0:	and	w10, w8, #0xc
   223d4:	b.eq	22400 <PyInit__decimal@@Base+0x1b89c>  // b.none
   223d8:	cbz	w10, 2240c <PyInit__decimal@@Base+0x1b8a8>
   223dc:	and	w10, w9, #0x4
   223e0:	and	w11, w8, #0x4
   223e4:	eor	w12, w10, w11
   223e8:	tbz	w12, #2, 22414 <PyInit__decimal@@Base+0x1b8b0>
   223ec:	lsr	w8, w10, #2
   223f0:	sub	w0, w8, w11, lsr #2
   223f4:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   223f8:	sub	w0, w11, w10
   223fc:	b	224d8 <PyInit__decimal@@Base+0x1b974>
   22400:	cbz	w10, 2247c <PyInit__decimal@@Base+0x1b918>
   22404:	mov	w0, #0xffffffff            	// #-1
   22408:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   2240c:	mov	w0, #0x1                   	// #1
   22410:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   22414:	ldr	x11, [x19, #24]
   22418:	ldr	x10, [x20, #24]
   2241c:	cmp	x11, #0x1
   22420:	b.lt	224a4 <PyInit__decimal@@Base+0x1b940>  // b.tstop
   22424:	cmp	x10, #0x1
   22428:	b.lt	224a4 <PyInit__decimal@@Base+0x1b940>  // b.tstop
   2242c:	ldr	x12, [x19, #16]
   22430:	add	x0, sp, #0x30
   22434:	mov	x1, sp
   22438:	stp	x12, x11, [sp, #64]
   2243c:	ldr	q0, [x19, #32]
   22440:	mov	w11, #0x40                  	// #64
   22444:	bfxil	w11, w9, #0, #5
   22448:	strb	w11, [sp, #48]
   2244c:	str	q0, [sp, #80]
   22450:	ldr	x9, [x20, #16]
   22454:	mov	w11, #0x40                  	// #64
   22458:	bfxil	w11, w8, #0, #5
   2245c:	stp	x9, x10, [sp, #16]
   22460:	ldr	q0, [x20, #32]
   22464:	strb	w11, [sp]
   22468:	str	xzr, [sp, #8]
   2246c:	str	xzr, [sp, #56]
   22470:	str	q0, [sp, #32]
   22474:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   22478:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   2247c:	mov	x0, x19
   22480:	mov	x1, x20
   22484:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   22488:	cbnz	w0, 224c4 <PyInit__decimal@@Base+0x1b960>
   2248c:	ldr	x8, [x19, #8]
   22490:	ldr	x9, [x20, #8]
   22494:	cmp	x8, x9
   22498:	b.ne	224bc <PyInit__decimal@@Base+0x1b958>  // b.any
   2249c:	mov	w0, wzr
   224a0:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   224a4:	cmp	x11, #0x0
   224a8:	cset	w8, gt
   224ac:	cmp	x10, #0x0
   224b0:	cset	w9, gt
   224b4:	sub	w0, w8, w9
   224b8:	b	224c4 <PyInit__decimal@@Base+0x1b960>
   224bc:	mov	w8, #0xffffffff            	// #-1
   224c0:	cneg	w0, w8, ge  // ge = tcont
   224c4:	ldrb	w8, [x19]
   224c8:	mov	w9, #0x1                   	// #1
   224cc:	ubfiz	w8, w8, #1, #1
   224d0:	sub	w8, w9, w8
   224d4:	mul	w0, w8, w0
   224d8:	ldp	x20, x19, [sp, #112]
   224dc:	ldp	x29, x30, [sp, #96]
   224e0:	add	sp, sp, #0x80
   224e4:	ret
   224e8:	cmp	x0, x1
   224ec:	b.eq	22508 <PyInit__decimal@@Base+0x1b9a4>  // b.none
   224f0:	ldrb	w9, [x0]
   224f4:	ldrb	w8, [x1]
   224f8:	tbnz	w9, #1, 22510 <PyInit__decimal@@Base+0x1b9ac>
   224fc:	tbz	w8, #1, 2251c <PyInit__decimal@@Base+0x1b9b8>
   22500:	mov	w0, #0xffffffff            	// #-1
   22504:	ret
   22508:	mov	w0, wzr
   2250c:	ret
   22510:	tst	w8, #0x2
   22514:	cset	w0, eq  // eq = none
   22518:	ret
   2251c:	ldr	x8, [x0, #40]
   22520:	ldr	x9, [x0, #24]
   22524:	ldr	x10, [x1, #40]
   22528:	ldr	x11, [x1, #24]
   2252c:	add	x8, x8, x9, lsl #3
   22530:	ldur	x9, [x8, #-8]
   22534:	add	x8, x10, x11, lsl #3
   22538:	ldur	x8, [x8, #-8]
   2253c:	cbz	x9, 22560 <PyInit__decimal@@Base+0x1b9fc>
   22540:	cbz	x8, 2256c <PyInit__decimal@@Base+0x1ba08>
   22544:	ldp	x8, x9, [x0, #8]
   22548:	ldp	x10, x11, [x1, #8]
   2254c:	add	x9, x8, x9
   22550:	add	x8, x10, x11
   22554:	cmp	x9, x8
   22558:	b.ne	22574 <PyInit__decimal@@Base+0x1ba10>  // b.any
   2255c:	b	2e714 <PyInit__decimal@@Base+0x27bb0>
   22560:	cmp	x8, #0x0
   22564:	csetm	w0, ne  // ne = any
   22568:	ret
   2256c:	mov	w0, #0x1                   	// #1
   22570:	ret
   22574:	sub	x9, x9, #0x1
   22578:	sub	x8, x8, #0x1
   2257c:	cmp	x9, x8
   22580:	mov	w8, #0xffffffff            	// #-1
   22584:	cneg	w0, w8, ge  // ge = tcont
   22588:	ret
   2258c:	stp	x29, x30, [sp, #-32]!
   22590:	stp	x20, x19, [sp, #16]
   22594:	mov	x29, sp
   22598:	mov	x19, x0
   2259c:	mov	x0, x1
   225a0:	mov	x1, x2
   225a4:	bl	2239c <PyInit__decimal@@Base+0x1b838>
   225a8:	cmp	w0, #0x0
   225ac:	mov	w20, w0
   225b0:	lsr	w1, w0, #31
   225b4:	cset	w2, ne  // ne = any
   225b8:	mov	x0, x19
   225bc:	mov	x3, xzr
   225c0:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   225c4:	mov	w0, w20
   225c8:	ldp	x20, x19, [sp, #16]
   225cc:	ldp	x29, x30, [sp], #32
   225d0:	ret
   225d4:	sub	sp, sp, #0x70
   225d8:	stp	x29, x30, [sp, #96]
   225dc:	add	x29, sp, #0x60
   225e0:	ldur	q0, [x0, #8]
   225e4:	ldrb	w8, [x0]
   225e8:	stur	q0, [sp, #56]
   225ec:	ldur	q0, [x0, #24]
   225f0:	and	w8, w8, #0x1e
   225f4:	orr	w8, w8, #0x40
   225f8:	stur	q0, [sp, #72]
   225fc:	ldr	x9, [x0, #40]
   22600:	add	x0, sp, #0x30
   22604:	str	x9, [sp, #88]
   22608:	ldur	q0, [x1, #8]
   2260c:	ldrb	w9, [x1]
   22610:	stur	q0, [sp, #8]
   22614:	ldur	q0, [x1, #24]
   22618:	and	w9, w9, #0x1e
   2261c:	orr	w9, w9, #0x40
   22620:	stur	q0, [sp, #24]
   22624:	ldr	x10, [x1, #40]
   22628:	mov	x1, sp
   2262c:	strb	w8, [sp, #48]
   22630:	strb	w9, [sp]
   22634:	str	x10, [sp, #40]
   22638:	bl	2239c <PyInit__decimal@@Base+0x1b838>
   2263c:	ldp	x29, x30, [sp, #96]
   22640:	add	sp, sp, #0x70
   22644:	ret
   22648:	stp	x29, x30, [sp, #-32]!
   2264c:	stp	x20, x19, [sp, #16]
   22650:	mov	x29, sp
   22654:	mov	x19, x0
   22658:	mov	x0, x1
   2265c:	mov	x1, x2
   22660:	bl	225d4 <PyInit__decimal@@Base+0x1ba70>
   22664:	cmp	w0, #0x0
   22668:	mov	w20, w0
   2266c:	lsr	w1, w0, #31
   22670:	cset	w2, ne  // ne = any
   22674:	mov	x0, x19
   22678:	mov	x3, xzr
   2267c:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   22680:	mov	w0, w20
   22684:	ldp	x20, x19, [sp, #16]
   22688:	ldp	x29, x30, [sp], #32
   2268c:	ret
   22690:	stp	x29, x30, [sp, #-48]!
   22694:	stp	x22, x21, [sp, #16]
   22698:	stp	x20, x19, [sp, #32]
   2269c:	mov	x29, sp
   226a0:	mov	x20, x1
   226a4:	mov	x19, x0
   226a8:	cbz	x2, 22730 <PyInit__decimal@@Base+0x1bbcc>
   226ac:	ldr	x1, [x20, #40]
   226b0:	ldr	x8, [x20, #24]
   226b4:	add	x9, x1, x8, lsl #3
   226b8:	ldur	x9, [x9, #-8]
   226bc:	cbz	x9, 22730 <PyInit__decimal@@Base+0x1bbcc>
   226c0:	ldr	x9, [x20, #16]
   226c4:	mov	x10, #0x9436                	// #37942
   226c8:	movk	x10, #0x50d7, lsl #16
   226cc:	movk	x10, #0x435e, lsl #32
   226d0:	movk	x10, #0xd79, lsl #48
   226d4:	add	x9, x9, x2
   226d8:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   226dc:	smulh	x10, x9, x10
   226e0:	mov	x11, #0xffffffffffffffed    	// #-19
   226e4:	ldr	x12, [x12, #1352]
   226e8:	add	x13, x10, x10, lsr #63
   226ec:	mul	x10, x13, x11
   226f0:	cmn	x10, x9
   226f4:	ldr	x10, [x19, #32]
   226f8:	cinc	x22, x13, ne  // ne = any
   226fc:	cmp	x12, x22
   22700:	csel	x9, x22, x12, lt  // lt = tstop
   22704:	mov	x21, x2
   22708:	cmp	x9, x10
   2270c:	b.eq	22770 <PyInit__decimal@@Base+0x1bc0c>  // b.none
   22710:	ldrb	w11, [x19]
   22714:	tbnz	w11, #5, 2274c <PyInit__decimal@@Base+0x1bbe8>
   22718:	mov	x0, x19
   2271c:	mov	x1, x9
   22720:	mov	x2, x3
   22724:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   22728:	cbnz	w0, 22768 <PyInit__decimal@@Base+0x1bc04>
   2272c:	b	227ac <PyInit__decimal@@Base+0x1bc48>
   22730:	mov	x0, x19
   22734:	mov	x1, x20
   22738:	ldp	x20, x19, [sp, #32]
   2273c:	ldp	x22, x21, [sp, #16]
   22740:	mov	x2, x3
   22744:	ldp	x29, x30, [sp], #48
   22748:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   2274c:	cmp	x9, x10
   22750:	b.le	22770 <PyInit__decimal@@Base+0x1bc0c>
   22754:	mov	x0, x19
   22758:	mov	x1, x9
   2275c:	mov	x2, x3
   22760:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   22764:	cbz	w0, 227ac <PyInit__decimal@@Base+0x1bc48>
   22768:	ldr	x1, [x20, #40]
   2276c:	ldr	x8, [x20, #24]
   22770:	ldr	x0, [x19, #40]
   22774:	mov	x2, x22
   22778:	mov	x3, x8
   2277c:	mov	x4, x21
   22780:	bl	1b3fc <PyInit__decimal@@Base+0x14898>
   22784:	ldrb	w8, [x20]
   22788:	ldrb	w9, [x19]
   2278c:	mov	w0, #0x1                   	// #1
   22790:	bfxil	w9, w8, #0, #4
   22794:	strb	w9, [x19]
   22798:	ldr	x8, [x20, #8]
   2279c:	str	x8, [x19, #8]
   227a0:	ldr	x8, [x20, #16]
   227a4:	add	x8, x8, x21
   227a8:	stp	x8, x22, [x19, #16]
   227ac:	ldp	x20, x19, [sp, #32]
   227b0:	ldp	x22, x21, [sp, #16]
   227b4:	ldp	x29, x30, [sp], #48
   227b8:	ret
   227bc:	stp	x29, x30, [sp, #-48]!
   227c0:	str	x21, [sp, #16]
   227c4:	stp	x20, x19, [sp, #32]
   227c8:	mov	x29, sp
   227cc:	mov	x20, xzr
   227d0:	cbz	x1, 228ac <PyInit__decimal@@Base+0x1bd48>
   227d4:	mov	x19, x0
   227d8:	ldr	x0, [x0, #40]
   227dc:	ldr	x8, [x19, #24]
   227e0:	add	x9, x0, x8, lsl #3
   227e4:	ldur	x9, [x9, #-8]
   227e8:	cbz	x9, 228ac <PyInit__decimal@@Base+0x1bd48>
   227ec:	ldr	x9, [x19, #16]
   227f0:	mov	x21, x1
   227f4:	cmp	x9, x1
   227f8:	b.le	22878 <PyInit__decimal@@Base+0x1bd14>
   227fc:	mov	x1, x0
   22800:	mov	x2, x8
   22804:	mov	x3, x21
   22808:	bl	1b8c8 <PyInit__decimal@@Base+0x14d64>
   2280c:	ldr	x8, [x19, #16]
   22810:	mov	x9, #0x9436                	// #37942
   22814:	movk	x9, #0x50d7, lsl #16
   22818:	movk	x9, #0x435e, lsl #32
   2281c:	movk	x9, #0xd79, lsl #48
   22820:	sub	x8, x8, x21
   22824:	adrp	x11, 4c000 <PyInit__decimal@@Base+0x4549c>
   22828:	str	x8, [x19, #16]
   2282c:	smulh	x9, x8, x9
   22830:	mov	x10, #0xffffffffffffffed    	// #-19
   22834:	add	x9, x9, x9, lsr #63
   22838:	ldr	x11, [x11, #1352]
   2283c:	mul	x10, x9, x10
   22840:	cmn	x10, x8
   22844:	ldr	x8, [x19, #32]
   22848:	cinc	x21, x9, ne  // ne = any
   2284c:	cmp	x11, x21
   22850:	csel	x1, x21, x11, lt  // lt = tstop
   22854:	cmp	x1, x8
   22858:	mov	x20, x0
   2285c:	b.eq	228a8 <PyInit__decimal@@Base+0x1bd44>  // b.none
   22860:	ldrb	w9, [x19]
   22864:	tbnz	w9, #5, 22894 <PyInit__decimal@@Base+0x1bd30>
   22868:	add	x2, x29, #0x1c
   2286c:	mov	x0, x19
   22870:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   22874:	b	228a8 <PyInit__decimal@@Base+0x1bd44>
   22878:	cset	w2, eq  // eq = none
   2287c:	mov	x1, x8
   22880:	bl	228c0 <PyInit__decimal@@Base+0x1bd5c>
   22884:	mov	x20, x0
   22888:	mov	x0, x19
   2288c:	bl	20574 <PyInit__decimal@@Base+0x19a10>
   22890:	b	228ac <PyInit__decimal@@Base+0x1bd48>
   22894:	cmp	x1, x8
   22898:	b.le	228a8 <PyInit__decimal@@Base+0x1bd44>
   2289c:	add	x2, x29, #0x1c
   228a0:	mov	x0, x19
   228a4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   228a8:	str	x21, [x19, #24]
   228ac:	mov	x0, x20
   228b0:	ldp	x20, x19, [sp, #32]
   228b4:	ldr	x21, [sp, #16]
   228b8:	ldp	x29, x30, [sp], #48
   228bc:	ret
   228c0:	sub	sp, sp, #0x30
   228c4:	stp	x29, x30, [sp, #16]
   228c8:	stp	x20, x19, [sp, #32]
   228cc:	add	x29, sp, #0x10
   228d0:	mov	x20, x1
   228d4:	mov	x19, x0
   228d8:	stp	xzr, xzr, [sp]
   228dc:	cbz	w2, 22924 <PyInit__decimal@@Base+0x1bdc0>
   228e0:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   228e4:	add	x9, x19, x20, lsl #3
   228e8:	add	x8, x8, #0xe70
   228ec:	ldur	x2, [x9, #-8]
   228f0:	ldr	x9, [x8, #72]
   228f4:	cmp	x9, x2
   228f8:	b.ls	22940 <PyInit__decimal@@Base+0x1bddc>  // b.plast
   228fc:	ldr	x9, [x8, #32]
   22900:	cmp	x9, x2
   22904:	b.ls	22968 <PyInit__decimal@@Base+0x1be04>  // b.plast
   22908:	ldr	x9, [x8, #16]
   2290c:	cmp	x9, x2
   22910:	b.ls	229ac <PyInit__decimal@@Base+0x1be48>  // b.plast
   22914:	ldr	x8, [x8, #8]
   22918:	cmp	x8, x2
   2291c:	mov	w8, #0x1                   	// #1
   22920:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   22924:	sub	x9, x20, #0x1
   22928:	mov	w8, #0x1                   	// #1
   2292c:	tbnz	x9, #63, 22a4c <PyInit__decimal@@Base+0x1bee8>
   22930:	ldr	x10, [x19, x9, lsl #3]
   22934:	sub	x9, x9, #0x1
   22938:	cbz	x10, 2292c <PyInit__decimal@@Base+0x1bdc8>
   2293c:	b	22a50 <PyInit__decimal@@Base+0x1beec>
   22940:	ldr	x9, [x8, #112]
   22944:	cmp	x9, x2
   22948:	b.ls	22984 <PyInit__decimal@@Base+0x1be20>  // b.plast
   2294c:	ldr	x9, [x8, #88]
   22950:	cmp	x9, x2
   22954:	b.ls	229bc <PyInit__decimal@@Base+0x1be58>  // b.plast
   22958:	ldr	x8, [x8, #80]
   2295c:	cmp	x8, x2
   22960:	mov	w8, #0xa                   	// #10
   22964:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   22968:	ldr	x9, [x8, #48]
   2296c:	cmp	x9, x2
   22970:	b.ls	229d8 <PyInit__decimal@@Base+0x1be74>  // b.plast
   22974:	ldr	x8, [x8, #40]
   22978:	cmp	x8, x2
   2297c:	mov	w8, #0x5                   	// #5
   22980:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   22984:	ldr	x9, [x8, #144]
   22988:	cmp	x9, x2
   2298c:	b.ls	229f4 <PyInit__decimal@@Base+0x1be90>  // b.plast
   22990:	ldr	x9, [x8, #128]
   22994:	cmp	x9, x2
   22998:	b.ls	22a04 <PyInit__decimal@@Base+0x1bea0>  // b.plast
   2299c:	ldr	x8, [x8, #120]
   229a0:	cmp	x8, x2
   229a4:	mov	w8, #0xf                   	// #15
   229a8:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   229ac:	ldr	x8, [x8, #24]
   229b0:	cmp	x8, x2
   229b4:	mov	w8, #0x3                   	// #3
   229b8:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   229bc:	ldr	x9, [x8, #104]
   229c0:	cmp	x9, x2
   229c4:	b.ls	22a7c <PyInit__decimal@@Base+0x1bf18>  // b.plast
   229c8:	ldr	x8, [x8, #96]
   229cc:	cmp	x8, x2
   229d0:	mov	w8, #0xc                   	// #12
   229d4:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   229d8:	ldr	x9, [x8, #64]
   229dc:	cmp	x9, x2
   229e0:	b.ls	22a84 <PyInit__decimal@@Base+0x1bf20>  // b.plast
   229e4:	ldr	x8, [x8, #56]
   229e8:	cmp	x8, x2
   229ec:	mov	w8, #0x7                   	// #7
   229f0:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   229f4:	ldr	x8, [x8, #152]
   229f8:	cmp	x8, x2
   229fc:	mov	w8, #0x13                  	// #19
   22a00:	b	22a10 <PyInit__decimal@@Base+0x1beac>
   22a04:	ldr	x8, [x8, #136]
   22a08:	cmp	x8, x2
   22a0c:	mov	w8, #0x11                  	// #17
   22a10:	cinc	x8, x8, ls  // ls = plast
   22a14:	sub	x3, x8, #0x1
   22a18:	add	x0, sp, #0x8
   22a1c:	mov	x1, sp
   22a20:	bl	2e934 <PyInit__decimal@@Base+0x27dd0>
   22a24:	ldr	x8, [sp]
   22a28:	subs	x9, x20, #0x2
   22a2c:	b.lt	22a54 <PyInit__decimal@@Base+0x1bef0>  // b.tstop
   22a30:	cbnz	x8, 22a54 <PyInit__decimal@@Base+0x1bef0>
   22a34:	mov	w8, #0x1                   	// #1
   22a38:	tbnz	x9, #63, 22a4c <PyInit__decimal@@Base+0x1bee8>
   22a3c:	ldr	x10, [x19, x9, lsl #3]
   22a40:	sub	x9, x9, #0x1
   22a44:	cbz	x10, 22a38 <PyInit__decimal@@Base+0x1bed4>
   22a48:	b	22a50 <PyInit__decimal@@Base+0x1beec>
   22a4c:	mov	x8, xzr
   22a50:	str	x8, [sp]
   22a54:	ldr	x0, [sp, #8]
   22a58:	cmp	x0, #0x5
   22a5c:	b.eq	22a64 <PyInit__decimal@@Base+0x1bf00>  // b.none
   22a60:	cbnz	x0, 22a6c <PyInit__decimal@@Base+0x1bf08>
   22a64:	cmp	x8, #0x0
   22a68:	cinc	x0, x0, ne  // ne = any
   22a6c:	ldp	x20, x19, [sp, #32]
   22a70:	ldp	x29, x30, [sp, #16]
   22a74:	add	sp, sp, #0x30
   22a78:	ret
   22a7c:	mov	w8, #0xe                   	// #14
   22a80:	b	22a14 <PyInit__decimal@@Base+0x1beb0>
   22a84:	mov	w8, #0x9                   	// #9
   22a88:	b	22a14 <PyInit__decimal@@Base+0x1beb0>
   22a8c:	stp	x29, x30, [sp, #-64]!
   22a90:	str	x23, [sp, #16]
   22a94:	stp	x22, x21, [sp, #32]
   22a98:	stp	x20, x19, [sp, #48]
   22a9c:	mov	x29, sp
   22aa0:	mov	x22, x3
   22aa4:	mov	x19, x1
   22aa8:	mov	x20, x0
   22aac:	cbz	x2, 22b48 <PyInit__decimal@@Base+0x1bfe4>
   22ab0:	ldr	x8, [x19, #40]
   22ab4:	ldr	x9, [x19, #24]
   22ab8:	add	x10, x8, x9, lsl #3
   22abc:	ldur	x10, [x10, #-8]
   22ac0:	cbz	x10, 22b48 <PyInit__decimal@@Base+0x1bfe4>
   22ac4:	ldr	x10, [x19, #16]
   22ac8:	mov	x21, x2
   22acc:	subs	x10, x10, x2
   22ad0:	b.le	22b64 <PyInit__decimal@@Base+0x1c000>
   22ad4:	mov	x11, #0x9436                	// #37942
   22ad8:	movk	x11, #0x50d7, lsl #16
   22adc:	movk	x11, #0x435e, lsl #32
   22ae0:	movk	x11, #0xd79, lsl #48
   22ae4:	smulh	x11, x10, x11
   22ae8:	mov	x12, #0xffffffffffffffed    	// #-19
   22aec:	add	x11, x11, x11, lsr #63
   22af0:	mul	x12, x11, x12
   22af4:	cmn	x12, x10
   22af8:	cinc	x23, x11, ne  // ne = any
   22afc:	cmp	x20, x19
   22b00:	str	x10, [x20, #16]
   22b04:	b.eq	22b84 <PyInit__decimal@@Base+0x1c020>  // b.none
   22b08:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
   22b0c:	ldr	x11, [x10, #1352]
   22b10:	ldr	x10, [x20, #32]
   22b14:	cmp	x11, x23
   22b18:	csel	x1, x23, x11, lt  // lt = tstop
   22b1c:	cmp	x1, x10
   22b20:	b.eq	22bf0 <PyInit__decimal@@Base+0x1c08c>  // b.none
   22b24:	ldrb	w11, [x20]
   22b28:	tbnz	w11, #5, 22bd0 <PyInit__decimal@@Base+0x1c06c>
   22b2c:	mov	x0, x20
   22b30:	mov	x2, x22
   22b34:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   22b38:	cbz	w0, 22be8 <PyInit__decimal@@Base+0x1c084>
   22b3c:	ldr	x8, [x19, #40]
   22b40:	ldr	x9, [x19, #24]
   22b44:	b	22bf0 <PyInit__decimal@@Base+0x1c08c>
   22b48:	mov	x0, x20
   22b4c:	mov	x1, x19
   22b50:	mov	x2, x22
   22b54:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   22b58:	cmp	w0, #0x0
   22b5c:	csetm	x21, eq  // eq = none
   22b60:	b	22c24 <PyInit__decimal@@Base+0x1c0c0>
   22b64:	cset	w2, eq  // eq = none
   22b68:	mov	x0, x8
   22b6c:	mov	x1, x9
   22b70:	bl	228c0 <PyInit__decimal@@Base+0x1bd5c>
   22b74:	mov	x21, x0
   22b78:	mov	x0, x20
   22b7c:	bl	20574 <PyInit__decimal@@Base+0x19a10>
   22b80:	b	22c0c <PyInit__decimal@@Base+0x1c0a8>
   22b84:	mov	x0, x8
   22b88:	mov	x1, x8
   22b8c:	mov	x2, x9
   22b90:	mov	x3, x21
   22b94:	bl	1b8c8 <PyInit__decimal@@Base+0x14d64>
   22b98:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   22b9c:	ldr	x9, [x8, #1352]
   22ba0:	ldr	x8, [x19, #32]
   22ba4:	mov	x21, x0
   22ba8:	cmp	x9, x23
   22bac:	csel	x1, x23, x9, lt  // lt = tstop
   22bb0:	cmp	x1, x8
   22bb4:	b.eq	22c08 <PyInit__decimal@@Base+0x1c0a4>  // b.none
   22bb8:	ldrb	w9, [x19]
   22bbc:	tbnz	w9, #5, 22c3c <PyInit__decimal@@Base+0x1c0d8>
   22bc0:	mov	x0, x19
   22bc4:	mov	x2, x22
   22bc8:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   22bcc:	b	22c08 <PyInit__decimal@@Base+0x1c0a4>
   22bd0:	cmp	x1, x10
   22bd4:	b.le	22bf0 <PyInit__decimal@@Base+0x1c08c>
   22bd8:	mov	x0, x20
   22bdc:	mov	x2, x22
   22be0:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   22be4:	cbnz	w0, 22b3c <PyInit__decimal@@Base+0x1bfd8>
   22be8:	mov	x21, #0xffffffffffffffff    	// #-1
   22bec:	b	22c24 <PyInit__decimal@@Base+0x1c0c0>
   22bf0:	ldr	x0, [x20, #40]
   22bf4:	mov	x1, x8
   22bf8:	mov	x2, x9
   22bfc:	mov	x3, x21
   22c00:	bl	1b8c8 <PyInit__decimal@@Base+0x14d64>
   22c04:	mov	x21, x0
   22c08:	str	x23, [x20, #24]
   22c0c:	ldrb	w8, [x19]
   22c10:	ldrb	w9, [x20]
   22c14:	bfxil	w9, w8, #0, #4
   22c18:	strb	w9, [x20]
   22c1c:	ldr	x8, [x19, #8]
   22c20:	str	x8, [x20, #8]
   22c24:	mov	x0, x21
   22c28:	ldp	x20, x19, [sp, #48]
   22c2c:	ldp	x22, x21, [sp, #32]
   22c30:	ldr	x23, [sp, #16]
   22c34:	ldp	x29, x30, [sp], #64
   22c38:	ret
   22c3c:	cmp	x1, x8
   22c40:	b.le	22c08 <PyInit__decimal@@Base+0x1c0a4>
   22c44:	mov	x0, x19
   22c48:	mov	x2, x22
   22c4c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   22c50:	b	22c08 <PyInit__decimal@@Base+0x1c0a4>
   22c54:	stp	x29, x30, [sp, #-80]!
   22c58:	stp	x26, x25, [sp, #16]
   22c5c:	stp	x24, x23, [sp, #32]
   22c60:	stp	x22, x21, [sp, #48]
   22c64:	stp	x20, x19, [sp, #64]
   22c68:	mov	x29, sp
   22c6c:	ldrb	w8, [x1]
   22c70:	mov	x21, x4
   22c74:	mov	x19, x0
   22c78:	tst	w8, #0xe
   22c7c:	b.ne	22ca8 <PyInit__decimal@@Base+0x1c144>  // b.any
   22c80:	ldrb	w9, [x2]
   22c84:	and	w10, w9, #0xe
   22c88:	bfxil	w10, w8, #0, #1
   22c8c:	and	w8, w9, #0x1
   22c90:	orr	w8, w8, w10
   22c94:	cbnz	w8, 22ca8 <PyInit__decimal@@Base+0x1c144>
   22c98:	ldr	x8, [x1, #8]
   22c9c:	cbnz	x8, 22ca8 <PyInit__decimal@@Base+0x1c144>
   22ca0:	ldr	x8, [x2, #8]
   22ca4:	cbz	x8, 22ccc <PyInit__decimal@@Base+0x1c168>
   22ca8:	mov	x0, x19
   22cac:	mov	x2, x21
   22cb0:	ldp	x20, x19, [sp, #64]
   22cb4:	ldp	x22, x21, [sp, #48]
   22cb8:	ldp	x24, x23, [sp, #32]
   22cbc:	ldp	x26, x25, [sp, #16]
   22cc0:	mov	w1, #0x100                 	// #256
   22cc4:	ldp	x29, x30, [sp], #80
   22cc8:	b	208fc <PyInit__decimal@@Base+0x19d98>
   22ccc:	ldr	x8, [x2, #16]
   22cd0:	ldr	x9, [x1, #16]
   22cd4:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   22cd8:	ldr	x10, [x23, #1352]
   22cdc:	mov	x20, x3
   22ce0:	cmp	x8, x9
   22ce4:	csel	x25, x2, x1, gt
   22ce8:	ldr	x9, [x25, #24]
   22cec:	ldr	x8, [x19, #32]
   22cf0:	csel	x24, x1, x2, gt
   22cf4:	cmp	x10, x9
   22cf8:	csel	x1, x9, x10, lt  // lt = tstop
   22cfc:	cmp	x1, x8
   22d00:	b.eq	22d34 <PyInit__decimal@@Base+0x1c1d0>  // b.none
   22d04:	ldrb	w9, [x19]
   22d08:	tbnz	w9, #5, 22d1c <PyInit__decimal@@Base+0x1c1b8>
   22d0c:	mov	x0, x19
   22d10:	mov	x2, x21
   22d14:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   22d18:	b	22d30 <PyInit__decimal@@Base+0x1c1cc>
   22d1c:	cmp	x1, x8
   22d20:	b.le	22d34 <PyInit__decimal@@Base+0x1c1d0>
   22d24:	mov	x0, x19
   22d28:	mov	x2, x21
   22d2c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   22d30:	cbz	w0, 22e44 <PyInit__decimal@@Base+0x1c2e0>
   22d34:	ldr	x12, [x24, #40]
   22d38:	ldr	x8, [x25, #40]
   22d3c:	ldr	x9, [x24, #24]
   22d40:	adrp	x22, 37000 <PyInit__decimal@@Base+0x3049c>
   22d44:	ldr	x11, [x12]
   22d48:	ldr	x10, [x8]
   22d4c:	sub	x9, x9, #0x1
   22d50:	cmp	x9, #0x1
   22d54:	add	x22, x22, #0xe70
   22d58:	mov	x9, xzr
   22d5c:	b.lt	22de8 <PyInit__decimal@@Base+0x1c284>  // b.tstop
   22d60:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   22d64:	movk	x13, #0xcccd
   22d68:	mov	w14, #0xa                   	// #10
   22d6c:	mov	x16, xzr
   22d70:	mov	x15, xzr
   22d74:	umulh	x17, x11, x13
   22d78:	umulh	x18, x10, x13
   22d7c:	lsr	x17, x17, #3
   22d80:	lsr	x18, x18, #3
   22d84:	msub	x11, x17, x14, x11
   22d88:	msub	x10, x18, x14, x10
   22d8c:	orr	w0, w10, w11
   22d90:	tst	x0, #0xe
   22d94:	b.ne	22ca8 <PyInit__decimal@@Base+0x1c144>  // b.any
   22d98:	tst	x10, x11
   22d9c:	b.eq	22da8 <PyInit__decimal@@Base+0x1c244>  // b.none
   22da0:	ldr	x10, [x22, x16]
   22da4:	b	22dac <PyInit__decimal@@Base+0x1c248>
   22da8:	mov	x10, xzr
   22dac:	add	x16, x16, #0x8
   22db0:	cmp	x16, #0x98
   22db4:	add	x15, x10, x15
   22db8:	mov	x10, x18
   22dbc:	mov	x11, x17
   22dc0:	b.ne	22d74 <PyInit__decimal@@Base+0x1c210>  // b.any
   22dc4:	ldr	x10, [x19, #40]
   22dc8:	str	x15, [x10, x9, lsl #3]
   22dcc:	ldr	x15, [x24, #24]
   22dd0:	add	x9, x9, #0x1
   22dd4:	ldr	x11, [x12, x9, lsl #3]
   22dd8:	ldr	x10, [x8, x9, lsl #3]
   22ddc:	sub	x15, x15, #0x1
   22de0:	cmp	x9, x15
   22de4:	b.lt	22d6c <PyInit__decimal@@Base+0x1c208>  // b.tstop
   22de8:	ldr	x26, [x22, #72]
   22dec:	cmp	x26, x11
   22df0:	b.ls	22e1c <PyInit__decimal@@Base+0x1c2b8>  // b.plast
   22df4:	ldr	x12, [x22, #32]
   22df8:	cmp	x12, x11
   22dfc:	b.ls	22e5c <PyInit__decimal@@Base+0x1c2f8>  // b.plast
   22e00:	ldr	x12, [x22, #16]
   22e04:	cmp	x12, x11
   22e08:	b.ls	22ea0 <PyInit__decimal@@Base+0x1c33c>  // b.plast
   22e0c:	ldr	x12, [x22, #8]
   22e10:	cmp	x12, x11
   22e14:	mov	w12, #0x1                   	// #1
   22e18:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22e1c:	ldr	x12, [x22, #112]
   22e20:	cmp	x12, x11
   22e24:	b.ls	22e78 <PyInit__decimal@@Base+0x1c314>  // b.plast
   22e28:	ldr	x12, [x22, #88]
   22e2c:	cmp	x12, x11
   22e30:	b.ls	22eb0 <PyInit__decimal@@Base+0x1c34c>  // b.plast
   22e34:	ldr	x12, [x22, #80]
   22e38:	cmp	x12, x11
   22e3c:	mov	w12, #0xa                   	// #10
   22e40:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22e44:	ldp	x20, x19, [sp, #64]
   22e48:	ldp	x22, x21, [sp, #48]
   22e4c:	ldp	x24, x23, [sp, #32]
   22e50:	ldp	x26, x25, [sp, #16]
   22e54:	ldp	x29, x30, [sp], #80
   22e58:	ret
   22e5c:	ldr	x12, [x22, #48]
   22e60:	cmp	x12, x11
   22e64:	b.ls	22ecc <PyInit__decimal@@Base+0x1c368>  // b.plast
   22e68:	ldr	x12, [x22, #40]
   22e6c:	cmp	x12, x11
   22e70:	mov	w12, #0x5                   	// #5
   22e74:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22e78:	ldr	x12, [x22, #144]
   22e7c:	cmp	x12, x11
   22e80:	b.ls	22ee8 <PyInit__decimal@@Base+0x1c384>  // b.plast
   22e84:	ldr	x12, [x22, #128]
   22e88:	cmp	x12, x11
   22e8c:	b.ls	22ef8 <PyInit__decimal@@Base+0x1c394>  // b.plast
   22e90:	ldr	x12, [x22, #120]
   22e94:	cmp	x12, x11
   22e98:	mov	w12, #0xf                   	// #15
   22e9c:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22ea0:	ldr	x12, [x22, #24]
   22ea4:	cmp	x12, x11
   22ea8:	mov	w12, #0x3                   	// #3
   22eac:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22eb0:	ldr	x12, [x22, #104]
   22eb4:	cmp	x12, x11
   22eb8:	b.ls	23064 <PyInit__decimal@@Base+0x1c500>  // b.plast
   22ebc:	ldr	x12, [x22, #96]
   22ec0:	cmp	x12, x11
   22ec4:	mov	w12, #0xc                   	// #12
   22ec8:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22ecc:	ldr	x12, [x22, #64]
   22ed0:	cmp	x12, x11
   22ed4:	b.ls	2306c <PyInit__decimal@@Base+0x1c508>  // b.plast
   22ed8:	ldr	x12, [x22, #56]
   22edc:	cmp	x12, x11
   22ee0:	mov	w12, #0x7                   	// #7
   22ee4:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22ee8:	ldr	x12, [x22, #152]
   22eec:	cmp	x12, x11
   22ef0:	mov	w12, #0x13                  	// #19
   22ef4:	b	22f04 <PyInit__decimal@@Base+0x1c3a0>
   22ef8:	ldr	x12, [x22, #136]
   22efc:	cmp	x12, x11
   22f00:	mov	w12, #0x11                  	// #17
   22f04:	cinc	x12, x12, ls  // ls = plast
   22f08:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   22f0c:	mov	x13, xzr
   22f10:	mov	x14, xzr
   22f14:	movk	x15, #0xcccd
   22f18:	mov	w16, #0xa                   	// #10
   22f1c:	mov	x18, x10
   22f20:	umulh	x10, x11, x15
   22f24:	umulh	x0, x18, x15
   22f28:	lsr	x17, x10, #3
   22f2c:	lsr	x10, x0, #3
   22f30:	msub	x11, x17, x16, x11
   22f34:	msub	x18, x10, x16, x18
   22f38:	orr	w0, w18, w11
   22f3c:	tst	x0, #0xe
   22f40:	b.ne	22ca8 <PyInit__decimal@@Base+0x1c144>  // b.any
   22f44:	tst	x18, x11
   22f48:	b.eq	22f54 <PyInit__decimal@@Base+0x1c3f0>  // b.none
   22f4c:	ldr	x11, [x22, x13, lsl #3]
   22f50:	b	22f58 <PyInit__decimal@@Base+0x1c3f4>
   22f54:	mov	x11, xzr
   22f58:	add	x13, x13, #0x1
   22f5c:	cmp	x13, x12
   22f60:	add	x14, x11, x14
   22f64:	mov	x11, x17
   22f68:	b.cc	22f1c <PyInit__decimal@@Base+0x1c3b8>  // b.lo, b.ul, b.last
   22f6c:	ldr	x11, [x19, #40]
   22f70:	sub	w12, w13, #0x1
   22f74:	cmp	w12, #0x11
   22f78:	str	x14, [x11, x9, lsl #3]
   22f7c:	b.hi	22fb4 <PyInit__decimal@@Base+0x1c450>  // b.pmore
   22f80:	sub	w12, w13, #0x1
   22f84:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   22f88:	movk	x13, #0xcccd
   22f8c:	mov	w14, #0xa                   	// #10
   22f90:	umulh	x15, x10, x13
   22f94:	lsr	x15, x15, #3
   22f98:	msub	x10, x15, x14, x10
   22f9c:	cmp	x10, #0x1
   22fa0:	b.hi	22ca8 <PyInit__decimal@@Base+0x1c144>  // b.pmore
   22fa4:	add	w12, w12, #0x1
   22fa8:	cmp	w12, #0x12
   22fac:	mov	x10, x15
   22fb0:	b.cc	22f90 <PyInit__decimal@@Base+0x1c42c>  // b.lo, b.ul, b.last
   22fb4:	ldr	x10, [x25, #24]
   22fb8:	add	x9, x9, #0x1
   22fbc:	cmp	x9, x10
   22fc0:	b.ge	23004 <PyInit__decimal@@Base+0x1c4a0>  // b.tcont
   22fc4:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
   22fc8:	movk	x12, #0xcccd
   22fcc:	mov	w13, #0xa                   	// #10
   22fd0:	ldr	x15, [x8, x9, lsl #3]
   22fd4:	mov	w14, #0x13                  	// #19
   22fd8:	umulh	x16, x15, x12
   22fdc:	lsr	x16, x16, #3
   22fe0:	msub	x15, x16, x13, x15
   22fe4:	cmp	x15, #0x1
   22fe8:	b.hi	22ca8 <PyInit__decimal@@Base+0x1c144>  // b.pmore
   22fec:	subs	w14, w14, #0x1
   22ff0:	mov	x15, x16
   22ff4:	b.ne	22fd8 <PyInit__decimal@@Base+0x1c474>  // b.any
   22ff8:	add	x9, x9, #0x1
   22ffc:	cmp	x9, x10
   23000:	b.lt	22fd0 <PyInit__decimal@@Base+0x1c46c>  // b.tstop
   23004:	ldrb	w8, [x19]
   23008:	str	xzr, [x19, #8]
   2300c:	sub	x10, x11, #0x8
   23010:	and	w9, w8, #0xf0
   23014:	strb	w9, [x19]
   23018:	ldr	x12, [x24, #24]
   2301c:	mov	x9, x12
   23020:	cmp	x12, #0x2
   23024:	b.lt	23034 <PyInit__decimal@@Base+0x1c4d0>  // b.tstop
   23028:	ldr	x11, [x10, x9, lsl #3]
   2302c:	sub	x12, x9, #0x1
   23030:	cbz	x11, 2301c <PyInit__decimal@@Base+0x1c4b8>
   23034:	str	x9, [x19, #24]
   23038:	ldr	x11, [x23, #1352]
   2303c:	ldr	x10, [x19, #32]
   23040:	cmp	x11, x9
   23044:	csel	x1, x9, x11, lt  // lt = tstop
   23048:	cmp	x1, x10
   2304c:	b.eq	23088 <PyInit__decimal@@Base+0x1c524>  // b.none
   23050:	tbnz	w8, #5, 23074 <PyInit__decimal@@Base+0x1c510>
   23054:	mov	x0, x19
   23058:	mov	x2, x21
   2305c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   23060:	b	23088 <PyInit__decimal@@Base+0x1c524>
   23064:	mov	w12, #0xe                   	// #14
   23068:	b	22f08 <PyInit__decimal@@Base+0x1c3a4>
   2306c:	mov	w12, #0x9                   	// #9
   23070:	b	22f08 <PyInit__decimal@@Base+0x1c3a4>
   23074:	cmp	x1, x10
   23078:	b.le	23088 <PyInit__decimal@@Base+0x1c524>
   2307c:	mov	x0, x19
   23080:	mov	x2, x21
   23084:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   23088:	ldr	x9, [x19, #40]
   2308c:	ldr	x8, [x19, #24]
   23090:	add	x9, x9, x8, lsl #3
   23094:	ldur	x9, [x9, #-8]
   23098:	cmp	x26, x9
   2309c:	b.ls	230c8 <PyInit__decimal@@Base+0x1c564>  // b.plast
   230a0:	ldr	x10, [x22, #32]
   230a4:	cmp	x10, x9
   230a8:	b.ls	230f0 <PyInit__decimal@@Base+0x1c58c>  // b.plast
   230ac:	ldr	x10, [x22, #16]
   230b0:	cmp	x10, x9
   230b4:	b.ls	23134 <PyInit__decimal@@Base+0x1c5d0>  // b.plast
   230b8:	ldr	x10, [x22, #8]
   230bc:	cmp	x10, x9
   230c0:	mov	w9, #0x1                   	// #1
   230c4:	b	23198 <PyInit__decimal@@Base+0x1c634>
   230c8:	ldr	x10, [x22, #112]
   230cc:	cmp	x10, x9
   230d0:	b.ls	2310c <PyInit__decimal@@Base+0x1c5a8>  // b.plast
   230d4:	ldr	x10, [x22, #88]
   230d8:	cmp	x10, x9
   230dc:	b.ls	23144 <PyInit__decimal@@Base+0x1c5e0>  // b.plast
   230e0:	ldr	x10, [x22, #80]
   230e4:	cmp	x10, x9
   230e8:	mov	w9, #0xa                   	// #10
   230ec:	b	23198 <PyInit__decimal@@Base+0x1c634>
   230f0:	ldr	x10, [x22, #48]
   230f4:	cmp	x10, x9
   230f8:	b.ls	23160 <PyInit__decimal@@Base+0x1c5fc>  // b.plast
   230fc:	ldr	x10, [x22, #40]
   23100:	cmp	x10, x9
   23104:	mov	w9, #0x5                   	// #5
   23108:	b	23198 <PyInit__decimal@@Base+0x1c634>
   2310c:	ldr	x10, [x22, #144]
   23110:	cmp	x10, x9
   23114:	b.ls	2317c <PyInit__decimal@@Base+0x1c618>  // b.plast
   23118:	ldr	x10, [x22, #128]
   2311c:	cmp	x10, x9
   23120:	b.ls	2318c <PyInit__decimal@@Base+0x1c628>  // b.plast
   23124:	ldr	x10, [x22, #120]
   23128:	cmp	x10, x9
   2312c:	mov	w9, #0xf                   	// #15
   23130:	b	23198 <PyInit__decimal@@Base+0x1c634>
   23134:	ldr	x10, [x22, #24]
   23138:	cmp	x10, x9
   2313c:	mov	w9, #0x3                   	// #3
   23140:	b	23198 <PyInit__decimal@@Base+0x1c634>
   23144:	ldr	x10, [x22, #104]
   23148:	cmp	x10, x9
   2314c:	b.ls	231cc <PyInit__decimal@@Base+0x1c668>  // b.plast
   23150:	ldr	x10, [x22, #96]
   23154:	cmp	x10, x9
   23158:	mov	w9, #0xc                   	// #12
   2315c:	b	23198 <PyInit__decimal@@Base+0x1c634>
   23160:	ldr	x10, [x22, #64]
   23164:	cmp	x10, x9
   23168:	b.ls	231d4 <PyInit__decimal@@Base+0x1c670>  // b.plast
   2316c:	ldr	x10, [x22, #56]
   23170:	cmp	x10, x9
   23174:	mov	w9, #0x7                   	// #7
   23178:	b	23198 <PyInit__decimal@@Base+0x1c634>
   2317c:	ldr	x10, [x22, #152]
   23180:	cmp	x10, x9
   23184:	mov	w9, #0x13                  	// #19
   23188:	b	23198 <PyInit__decimal@@Base+0x1c634>
   2318c:	ldr	x10, [x22, #136]
   23190:	cmp	x10, x9
   23194:	mov	w9, #0x11                  	// #17
   23198:	cinc	x9, x9, ls  // ls = plast
   2319c:	mov	w10, #0x13                  	// #19
   231a0:	madd	x8, x8, x10, x9
   231a4:	sub	x8, x8, #0x13
   231a8:	str	x8, [x19, #16]
   231ac:	mov	x0, x19
   231b0:	mov	x1, x20
   231b4:	ldp	x20, x19, [sp, #64]
   231b8:	ldp	x22, x21, [sp, #48]
   231bc:	ldp	x24, x23, [sp, #32]
   231c0:	ldp	x26, x25, [sp, #16]
   231c4:	ldp	x29, x30, [sp], #80
   231c8:	b	231dc <PyInit__decimal@@Base+0x1c678>
   231cc:	mov	w9, #0xe                   	// #14
   231d0:	b	2319c <PyInit__decimal@@Base+0x1c638>
   231d4:	mov	w9, #0x9                   	// #9
   231d8:	b	2319c <PyInit__decimal@@Base+0x1c638>
   231dc:	sub	sp, sp, #0x40
   231e0:	stp	x29, x30, [sp, #16]
   231e4:	stp	x22, x21, [sp, #32]
   231e8:	stp	x20, x19, [sp, #48]
   231ec:	add	x29, sp, #0x10
   231f0:	ldr	x20, [x0, #24]
   231f4:	mov	x19, x0
   231f8:	cmp	x20, #0x1
   231fc:	b.lt	23408 <PyInit__decimal@@Base+0x1c8a4>  // b.tstop
   23200:	ldr	x9, [x19, #16]
   23204:	ldr	x8, [x1]
   23208:	cmp	x9, x8
   2320c:	b.le	23408 <PyInit__decimal@@Base+0x1c8a4>
   23210:	mov	x9, #0x9436                	// #37942
   23214:	movk	x9, #0x50d7, lsl #16
   23218:	movk	x9, #0x435e, lsl #32
   2321c:	movk	x9, #0xd79, lsl #48
   23220:	smulh	x9, x8, x9
   23224:	mov	x10, #0xffffffffffffffed    	// #-19
   23228:	add	x9, x9, x9, lsr #63
   2322c:	madd	x12, x9, x10, x8
   23230:	cmp	x12, #0x0
   23234:	adrp	x22, 37000 <PyInit__decimal@@Base+0x3049c>
   23238:	cset	w10, ne  // ne = any
   2323c:	cinc	x8, x9, ne  // ne = any
   23240:	add	x22, x22, #0xe70
   23244:	cbz	x12, 23268 <PyInit__decimal@@Base+0x1c704>
   23248:	ldr	x11, [x19, #40]
   2324c:	ldr	x12, [x22, x12, lsl #3]
   23250:	add	x13, x11, x8, lsl #3
   23254:	ldur	x14, [x13, #-8]
   23258:	udiv	x15, x14, x12
   2325c:	msub	x12, x15, x12, x14
   23260:	stur	x12, [x13, #-8]
   23264:	b	2326c <PyInit__decimal@@Base+0x1c708>
   23268:	ldr	x11, [x19, #40]
   2326c:	add	x9, x9, x10
   23270:	mov	w10, #0x13                  	// #19
   23274:	mul	x9, x9, x10
   23278:	sub	x10, x9, #0x13
   2327c:	sub	x9, x11, #0x8
   23280:	mov	x20, x8
   23284:	cmp	x8, #0x2
   23288:	mov	x21, x10
   2328c:	b.lt	232a0 <PyInit__decimal@@Base+0x1c73c>  // b.tstop
   23290:	ldr	x11, [x9, x20, lsl #3]
   23294:	sub	x8, x20, #0x1
   23298:	sub	x10, x21, #0x13
   2329c:	cbz	x11, 23280 <PyInit__decimal@@Base+0x1c71c>
   232a0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   232a4:	ldr	x9, [x8, #1352]
   232a8:	ldr	x8, [x19, #32]
   232ac:	cmp	x9, x20
   232b0:	csel	x1, x20, x9, lt  // lt = tstop
   232b4:	cmp	x1, x8
   232b8:	b.eq	232e8 <PyInit__decimal@@Base+0x1c784>  // b.none
   232bc:	ldrb	w9, [x19]
   232c0:	tbnz	w9, #5, 232d4 <PyInit__decimal@@Base+0x1c770>
   232c4:	sub	x2, x29, #0x4
   232c8:	mov	x0, x19
   232cc:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   232d0:	b	232e8 <PyInit__decimal@@Base+0x1c784>
   232d4:	cmp	x1, x8
   232d8:	b.le	232e8 <PyInit__decimal@@Base+0x1c784>
   232dc:	sub	x2, x29, #0x4
   232e0:	mov	x0, x19
   232e4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   232e8:	ldr	x8, [x19, #40]
   232ec:	str	x20, [x19, #24]
   232f0:	ldr	x9, [x22, #72]
   232f4:	add	x8, x8, x20, lsl #3
   232f8:	ldur	x8, [x8, #-8]
   232fc:	cmp	x9, x8
   23300:	b.ls	2332c <PyInit__decimal@@Base+0x1c7c8>  // b.plast
   23304:	ldr	x9, [x22, #32]
   23308:	cmp	x9, x8
   2330c:	b.ls	23354 <PyInit__decimal@@Base+0x1c7f0>  // b.plast
   23310:	ldr	x9, [x22, #16]
   23314:	cmp	x9, x8
   23318:	b.ls	23398 <PyInit__decimal@@Base+0x1c834>  // b.plast
   2331c:	ldr	x9, [x22, #8]
   23320:	cmp	x9, x8
   23324:	mov	w8, #0x1                   	// #1
   23328:	b	233fc <PyInit__decimal@@Base+0x1c898>
   2332c:	ldr	x9, [x22, #112]
   23330:	cmp	x9, x8
   23334:	b.ls	23370 <PyInit__decimal@@Base+0x1c80c>  // b.plast
   23338:	ldr	x9, [x22, #88]
   2333c:	cmp	x9, x8
   23340:	b.ls	233a8 <PyInit__decimal@@Base+0x1c844>  // b.plast
   23344:	ldr	x9, [x22, #80]
   23348:	cmp	x9, x8
   2334c:	mov	w8, #0xa                   	// #10
   23350:	b	233fc <PyInit__decimal@@Base+0x1c898>
   23354:	ldr	x9, [x22, #48]
   23358:	cmp	x9, x8
   2335c:	b.ls	233c4 <PyInit__decimal@@Base+0x1c860>  // b.plast
   23360:	ldr	x9, [x22, #40]
   23364:	cmp	x9, x8
   23368:	mov	w8, #0x5                   	// #5
   2336c:	b	233fc <PyInit__decimal@@Base+0x1c898>
   23370:	ldr	x9, [x22, #144]
   23374:	cmp	x9, x8
   23378:	b.ls	233e0 <PyInit__decimal@@Base+0x1c87c>  // b.plast
   2337c:	ldr	x9, [x22, #128]
   23380:	cmp	x9, x8
   23384:	b.ls	233f0 <PyInit__decimal@@Base+0x1c88c>  // b.plast
   23388:	ldr	x9, [x22, #120]
   2338c:	cmp	x9, x8
   23390:	mov	w8, #0xf                   	// #15
   23394:	b	233fc <PyInit__decimal@@Base+0x1c898>
   23398:	ldr	x9, [x22, #24]
   2339c:	cmp	x9, x8
   233a0:	mov	w8, #0x3                   	// #3
   233a4:	b	233fc <PyInit__decimal@@Base+0x1c898>
   233a8:	ldr	x9, [x22, #104]
   233ac:	cmp	x9, x8
   233b0:	b.ls	2344c <PyInit__decimal@@Base+0x1c8e8>  // b.plast
   233b4:	ldr	x9, [x22, #96]
   233b8:	cmp	x9, x8
   233bc:	mov	w8, #0xc                   	// #12
   233c0:	b	233fc <PyInit__decimal@@Base+0x1c898>
   233c4:	ldr	x9, [x22, #64]
   233c8:	cmp	x9, x8
   233cc:	b.ls	23454 <PyInit__decimal@@Base+0x1c8f0>  // b.plast
   233d0:	ldr	x9, [x22, #56]
   233d4:	cmp	x9, x8
   233d8:	mov	w8, #0x7                   	// #7
   233dc:	b	233fc <PyInit__decimal@@Base+0x1c898>
   233e0:	ldr	x9, [x22, #152]
   233e4:	cmp	x9, x8
   233e8:	mov	w8, #0x13                  	// #19
   233ec:	b	233fc <PyInit__decimal@@Base+0x1c898>
   233f0:	ldr	x9, [x22, #136]
   233f4:	cmp	x9, x8
   233f8:	mov	w8, #0x11                  	// #17
   233fc:	cinc	x8, x8, ls  // ls = plast
   23400:	add	x8, x8, x21
   23404:	str	x8, [x19, #16]
   23408:	ldrb	w8, [x19]
   2340c:	tst	w8, #0xe
   23410:	b.ne	23438 <PyInit__decimal@@Base+0x1c8d4>  // b.any
   23414:	ldr	x9, [x19, #40]
   23418:	add	x9, x9, x20, lsl #3
   2341c:	ldur	x9, [x9, #-8]
   23420:	cbnz	x9, 23438 <PyInit__decimal@@Base+0x1c8d4>
   23424:	ldr	x3, [x19, #8]
   23428:	and	w1, w8, #0x1
   2342c:	mov	x0, x19
   23430:	mov	x2, xzr
   23434:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   23438:	ldp	x20, x19, [sp, #48]
   2343c:	ldp	x22, x21, [sp, #32]
   23440:	ldp	x29, x30, [sp, #16]
   23444:	add	sp, sp, #0x40
   23448:	ret
   2344c:	mov	w8, #0xe                   	// #14
   23450:	b	23400 <PyInit__decimal@@Base+0x1c89c>
   23454:	mov	w8, #0x9                   	// #9
   23458:	b	23400 <PyInit__decimal@@Base+0x1c89c>
   2345c:	ldrb	w8, [x0]
   23460:	tst	w8, #0xc
   23464:	b.eq	23484 <PyInit__decimal@@Base+0x1c920>  // b.none
   23468:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   2346c:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   23470:	add	x9, x9, #0x485
   23474:	add	x10, x10, #0x484
   23478:	tst	w8, #0x4
   2347c:	csel	x0, x10, x9, eq  // eq = none
   23480:	ret
   23484:	tbnz	w8, #0, 23498 <PyInit__decimal@@Base+0x1c934>
   23488:	tbz	w8, #1, 234a8 <PyInit__decimal@@Base+0x1c944>
   2348c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   23490:	add	x0, x0, #0xb7e
   23494:	ret
   23498:	tbz	w8, #1, 234bc <PyInit__decimal@@Base+0x1c958>
   2349c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   234a0:	add	x0, x0, #0xba1
   234a4:	ret
   234a8:	tst	w8, #0xe
   234ac:	b.eq	234d0 <PyInit__decimal@@Base+0x1c96c>  // b.none
   234b0:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   234b4:	add	x0, x0, #0xb96
   234b8:	ret
   234bc:	tst	w8, #0xe
   234c0:	b.eq	23508 <PyInit__decimal@@Base+0x1c9a4>  // b.none
   234c4:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   234c8:	add	x0, x0, #0xbb9
   234cc:	ret
   234d0:	ldr	x8, [x0, #40]
   234d4:	ldr	x9, [x0, #24]
   234d8:	add	x8, x8, x9, lsl #3
   234dc:	ldur	x8, [x8, #-8]
   234e0:	cbz	x8, 23540 <PyInit__decimal@@Base+0x1c9dc>
   234e4:	ldp	x8, x9, [x0, #8]
   234e8:	ldr	x10, [x1, #16]
   234ec:	add	x8, x8, x9
   234f0:	sub	x8, x8, #0x1
   234f4:	cmp	x8, x10
   234f8:	b.lt	234b0 <PyInit__decimal@@Base+0x1c94c>  // b.tstop
   234fc:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   23500:	add	x0, x0, #0xb8e
   23504:	ret
   23508:	ldr	x8, [x0, #40]
   2350c:	ldr	x9, [x0, #24]
   23510:	add	x8, x8, x9, lsl #3
   23514:	ldur	x8, [x8, #-8]
   23518:	cbz	x8, 2354c <PyInit__decimal@@Base+0x1c9e8>
   2351c:	ldp	x8, x9, [x0, #8]
   23520:	ldr	x10, [x1, #16]
   23524:	add	x8, x8, x9
   23528:	sub	x8, x8, #0x1
   2352c:	cmp	x8, x10
   23530:	b.lt	234c4 <PyInit__decimal@@Base+0x1c960>  // b.tstop
   23534:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   23538:	add	x0, x0, #0xbb1
   2353c:	ret
   23540:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   23544:	add	x0, x0, #0xb88
   23548:	ret
   2354c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   23550:	add	x0, x0, #0xbab
   23554:	ret
   23558:	stp	x29, x30, [sp, #-80]!
   2355c:	str	x25, [sp, #16]
   23560:	stp	x24, x23, [sp, #32]
   23564:	stp	x22, x21, [sp, #48]
   23568:	stp	x20, x19, [sp, #64]
   2356c:	mov	x29, sp
   23570:	ldrb	w8, [x1]
   23574:	mov	x21, x3
   23578:	mov	x19, x0
   2357c:	tst	w8, #0xf
   23580:	b.ne	23590 <PyInit__decimal@@Base+0x1ca2c>  // b.any
   23584:	ldr	x8, [x1, #8]
   23588:	mov	x22, x1
   2358c:	cbz	x8, 235b4 <PyInit__decimal@@Base+0x1ca50>
   23590:	mov	x0, x19
   23594:	mov	x2, x21
   23598:	ldp	x20, x19, [sp, #64]
   2359c:	ldp	x22, x21, [sp, #48]
   235a0:	ldp	x24, x23, [sp, #32]
   235a4:	ldr	x25, [sp, #16]
   235a8:	mov	w1, #0x100                 	// #256
   235ac:	ldp	x29, x30, [sp], #80
   235b0:	b	208fc <PyInit__decimal@@Base+0x19d98>
   235b4:	ldr	x8, [x22, #16]
   235b8:	ldr	x9, [x2]
   235bc:	mov	x10, #0x9436                	// #37942
   235c0:	movk	x10, #0x50d7, lsl #16
   235c4:	movk	x10, #0x435e, lsl #32
   235c8:	cmp	x8, x9
   235cc:	movk	x10, #0xd79, lsl #48
   235d0:	csel	x8, x9, x8, lt  // lt = tstop
   235d4:	adrp	x24, 4c000 <PyInit__decimal@@Base+0x4549c>
   235d8:	smulh	x10, x8, x10
   235dc:	mov	x11, #0xffffffffffffffed    	// #-19
   235e0:	ldr	x9, [x24, #1352]
   235e4:	add	x10, x10, x10, lsr #63
   235e8:	mul	x11, x10, x11
   235ec:	cmn	x11, x8
   235f0:	ldr	x8, [x19, #32]
   235f4:	cinc	x25, x10, ne  // ne = any
   235f8:	cmp	x9, x25
   235fc:	csel	x1, x25, x9, lt  // lt = tstop
   23600:	mov	x20, x2
   23604:	cmp	x1, x8
   23608:	b.eq	23640 <PyInit__decimal@@Base+0x1cadc>  // b.none
   2360c:	ldrb	w9, [x19]
   23610:	tbnz	w9, #5, 23628 <PyInit__decimal@@Base+0x1cac4>
   23614:	mov	x0, x19
   23618:	mov	x2, x21
   2361c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   23620:	cbnz	w0, 23640 <PyInit__decimal@@Base+0x1cadc>
   23624:	b	23734 <PyInit__decimal@@Base+0x1cbd0>
   23628:	cmp	x1, x8
   2362c:	b.le	23640 <PyInit__decimal@@Base+0x1cadc>
   23630:	mov	x0, x19
   23634:	mov	x2, x21
   23638:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2363c:	cbz	w0, 23734 <PyInit__decimal@@Base+0x1cbd0>
   23640:	adrp	x23, 37000 <PyInit__decimal@@Base+0x3049c>
   23644:	cmp	x25, #0x0
   23648:	add	x23, x23, #0xe70
   2364c:	b.le	236d4 <PyInit__decimal@@Base+0x1cb70>
   23650:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   23654:	mov	x8, xzr
   23658:	movk	x9, #0xcccd
   2365c:	mov	w10, #0xa                   	// #10
   23660:	ldr	x11, [x22, #24]
   23664:	cmp	x8, x11
   23668:	b.ge	23678 <PyInit__decimal@@Base+0x1cb14>  // b.tcont
   2366c:	ldr	x11, [x22, #40]
   23670:	ldr	x14, [x11, x8, lsl #3]
   23674:	b	2367c <PyInit__decimal@@Base+0x1cb18>
   23678:	mov	x14, xzr
   2367c:	mov	x12, xzr
   23680:	mov	x11, xzr
   23684:	umulh	x13, x14, x9
   23688:	lsr	x13, x13, #3
   2368c:	msub	x14, x13, x10, x14
   23690:	cmp	x14, #0x1
   23694:	b.hi	23590 <PyInit__decimal@@Base+0x1ca2c>  // b.pmore
   23698:	cbz	x14, 236a4 <PyInit__decimal@@Base+0x1cb40>
   2369c:	mov	x14, xzr
   236a0:	b	236a8 <PyInit__decimal@@Base+0x1cb44>
   236a4:	ldr	x14, [x23, x12]
   236a8:	add	x12, x12, #0x8
   236ac:	cmp	x12, #0x98
   236b0:	add	x11, x14, x11
   236b4:	mov	x14, x13
   236b8:	b.ne	23684 <PyInit__decimal@@Base+0x1cb20>  // b.any
   236bc:	ldr	x12, [x19, #40]
   236c0:	str	x11, [x12, x8, lsl #3]
   236c4:	add	x8, x8, #0x1
   236c8:	cmp	x8, x25
   236cc:	b.ne	23660 <PyInit__decimal@@Base+0x1cafc>  // b.any
   236d0:	b	236d8 <PyInit__decimal@@Base+0x1cb74>
   236d4:	ldr	x12, [x19, #40]
   236d8:	ldrb	w8, [x19]
   236dc:	sub	x10, x12, #0x8
   236e0:	str	xzr, [x19, #8]
   236e4:	and	w9, w8, #0xf0
   236e8:	strb	w9, [x19]
   236ec:	mov	x9, x25
   236f0:	cmp	x25, #0x2
   236f4:	b.lt	23704 <PyInit__decimal@@Base+0x1cba0>  // b.tstop
   236f8:	ldr	x11, [x10, x9, lsl #3]
   236fc:	sub	x25, x9, #0x1
   23700:	cbz	x11, 236ec <PyInit__decimal@@Base+0x1cb88>
   23704:	str	x9, [x19, #24]
   23708:	ldr	x11, [x24, #1352]
   2370c:	ldr	x10, [x19, #32]
   23710:	cmp	x11, x9
   23714:	csel	x1, x9, x11, lt  // lt = tstop
   23718:	cmp	x1, x10
   2371c:	b.eq	23760 <PyInit__decimal@@Base+0x1cbfc>  // b.none
   23720:	tbnz	w8, #5, 2374c <PyInit__decimal@@Base+0x1cbe8>
   23724:	mov	x0, x19
   23728:	mov	x2, x21
   2372c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   23730:	b	23760 <PyInit__decimal@@Base+0x1cbfc>
   23734:	ldp	x20, x19, [sp, #64]
   23738:	ldp	x22, x21, [sp, #48]
   2373c:	ldp	x24, x23, [sp, #32]
   23740:	ldr	x25, [sp, #16]
   23744:	ldp	x29, x30, [sp], #80
   23748:	ret
   2374c:	cmp	x1, x10
   23750:	b.le	23760 <PyInit__decimal@@Base+0x1cbfc>
   23754:	mov	x0, x19
   23758:	mov	x2, x21
   2375c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   23760:	ldr	x9, [x19, #40]
   23764:	ldr	x8, [x19, #24]
   23768:	ldr	x10, [x23, #72]
   2376c:	add	x9, x9, x8, lsl #3
   23770:	ldur	x9, [x9, #-8]
   23774:	cmp	x10, x9
   23778:	b.ls	237a4 <PyInit__decimal@@Base+0x1cc40>  // b.plast
   2377c:	ldr	x10, [x23, #32]
   23780:	cmp	x10, x9
   23784:	b.ls	237cc <PyInit__decimal@@Base+0x1cc68>  // b.plast
   23788:	ldr	x10, [x23, #16]
   2378c:	cmp	x10, x9
   23790:	b.ls	23810 <PyInit__decimal@@Base+0x1ccac>  // b.plast
   23794:	ldr	x10, [x23, #8]
   23798:	cmp	x10, x9
   2379c:	mov	w9, #0x1                   	// #1
   237a0:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   237a4:	ldr	x10, [x23, #112]
   237a8:	cmp	x10, x9
   237ac:	b.ls	237e8 <PyInit__decimal@@Base+0x1cc84>  // b.plast
   237b0:	ldr	x10, [x23, #88]
   237b4:	cmp	x10, x9
   237b8:	b.ls	23820 <PyInit__decimal@@Base+0x1ccbc>  // b.plast
   237bc:	ldr	x10, [x23, #80]
   237c0:	cmp	x10, x9
   237c4:	mov	w9, #0xa                   	// #10
   237c8:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   237cc:	ldr	x10, [x23, #48]
   237d0:	cmp	x10, x9
   237d4:	b.ls	2383c <PyInit__decimal@@Base+0x1ccd8>  // b.plast
   237d8:	ldr	x10, [x23, #40]
   237dc:	cmp	x10, x9
   237e0:	mov	w9, #0x5                   	// #5
   237e4:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   237e8:	ldr	x10, [x23, #144]
   237ec:	cmp	x10, x9
   237f0:	b.ls	23858 <PyInit__decimal@@Base+0x1ccf4>  // b.plast
   237f4:	ldr	x10, [x23, #128]
   237f8:	cmp	x10, x9
   237fc:	b.ls	23868 <PyInit__decimal@@Base+0x1cd04>  // b.plast
   23800:	ldr	x10, [x23, #120]
   23804:	cmp	x10, x9
   23808:	mov	w9, #0xf                   	// #15
   2380c:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   23810:	ldr	x10, [x23, #24]
   23814:	cmp	x10, x9
   23818:	mov	w9, #0x3                   	// #3
   2381c:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   23820:	ldr	x10, [x23, #104]
   23824:	cmp	x10, x9
   23828:	b.ls	238a8 <PyInit__decimal@@Base+0x1cd44>  // b.plast
   2382c:	ldr	x10, [x23, #96]
   23830:	cmp	x10, x9
   23834:	mov	w9, #0xc                   	// #12
   23838:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   2383c:	ldr	x10, [x23, #64]
   23840:	cmp	x10, x9
   23844:	b.ls	238b0 <PyInit__decimal@@Base+0x1cd4c>  // b.plast
   23848:	ldr	x10, [x23, #56]
   2384c:	cmp	x10, x9
   23850:	mov	w9, #0x7                   	// #7
   23854:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   23858:	ldr	x10, [x23, #152]
   2385c:	cmp	x10, x9
   23860:	mov	w9, #0x13                  	// #19
   23864:	b	23874 <PyInit__decimal@@Base+0x1cd10>
   23868:	ldr	x10, [x23, #136]
   2386c:	cmp	x10, x9
   23870:	mov	w9, #0x11                  	// #17
   23874:	cinc	x9, x9, ls  // ls = plast
   23878:	mov	w10, #0x13                  	// #19
   2387c:	madd	x8, x8, x10, x9
   23880:	sub	x8, x8, #0x13
   23884:	str	x8, [x19, #16]
   23888:	mov	x0, x19
   2388c:	mov	x1, x20
   23890:	ldp	x20, x19, [sp, #64]
   23894:	ldp	x22, x21, [sp, #48]
   23898:	ldp	x24, x23, [sp, #32]
   2389c:	ldr	x25, [sp, #16]
   238a0:	ldp	x29, x30, [sp], #80
   238a4:	b	231dc <PyInit__decimal@@Base+0x1c678>
   238a8:	mov	w9, #0xe                   	// #14
   238ac:	b	23878 <PyInit__decimal@@Base+0x1cd14>
   238b0:	mov	w9, #0x9                   	// #9
   238b4:	b	23878 <PyInit__decimal@@Base+0x1cd14>
   238b8:	stp	x29, x30, [sp, #-32]!
   238bc:	stp	x20, x19, [sp, #16]
   238c0:	mov	x29, sp
   238c4:	ldrb	w8, [x1]
   238c8:	mov	x19, x3
   238cc:	mov	x20, x0
   238d0:	tst	w8, #0xe
   238d4:	b.eq	23900 <PyInit__decimal@@Base+0x1cd9c>  // b.none
   238d8:	mov	x0, x20
   238dc:	mov	x3, x19
   238e0:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   238e4:	cbnz	w0, 23950 <PyInit__decimal@@Base+0x1cdec>
   238e8:	mov	x0, x20
   238ec:	ldp	x20, x19, [sp, #16]
   238f0:	mov	w2, #0x2                   	// #2
   238f4:	mov	w1, wzr
   238f8:	ldp	x29, x30, [sp], #32
   238fc:	b	20868 <PyInit__decimal@@Base+0x19d04>
   23900:	ldr	x8, [x1, #40]
   23904:	ldr	x9, [x1, #24]
   23908:	add	x8, x8, x9, lsl #3
   2390c:	ldur	x8, [x8, #-8]
   23910:	cbz	x8, 23934 <PyInit__decimal@@Base+0x1cdd0>
   23914:	ldp	x8, x9, [x1, #8]
   23918:	mov	x0, x20
   2391c:	mov	x3, x19
   23920:	ldp	x20, x19, [sp, #16]
   23924:	add	x8, x8, x9
   23928:	sub	x1, x8, #0x1
   2392c:	ldp	x29, x30, [sp], #32
   23930:	b	21014 <PyInit__decimal@@Base+0x1a4b0>
   23934:	mov	w1, #0x1                   	// #1
   23938:	mov	w2, #0x2                   	// #2
   2393c:	mov	x0, x20
   23940:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   23944:	ldr	w8, [x19]
   23948:	orr	w8, w8, #0x4
   2394c:	str	w8, [x19]
   23950:	ldp	x20, x19, [sp, #16]
   23954:	ldp	x29, x30, [sp], #32
   23958:	ret
   2395c:	stp	x29, x30, [sp, #-80]!
   23960:	str	x25, [sp, #16]
   23964:	stp	x24, x23, [sp, #32]
   23968:	stp	x22, x21, [sp, #48]
   2396c:	stp	x20, x19, [sp, #64]
   23970:	mov	x29, sp
   23974:	ldrb	w8, [x1]
   23978:	mov	x21, x4
   2397c:	mov	x19, x0
   23980:	tst	w8, #0xe
   23984:	b.ne	239b0 <PyInit__decimal@@Base+0x1ce4c>  // b.any
   23988:	ldrb	w9, [x2]
   2398c:	and	w10, w9, #0xe
   23990:	bfxil	w10, w8, #0, #1
   23994:	and	w8, w9, #0x1
   23998:	orr	w8, w8, w10
   2399c:	cbnz	w8, 239b0 <PyInit__decimal@@Base+0x1ce4c>
   239a0:	ldr	x8, [x1, #8]
   239a4:	cbnz	x8, 239b0 <PyInit__decimal@@Base+0x1ce4c>
   239a8:	ldr	x8, [x2, #8]
   239ac:	cbz	x8, 239d4 <PyInit__decimal@@Base+0x1ce70>
   239b0:	mov	x0, x19
   239b4:	mov	x2, x21
   239b8:	ldp	x20, x19, [sp, #64]
   239bc:	ldp	x22, x21, [sp, #48]
   239c0:	ldp	x24, x23, [sp, #32]
   239c4:	ldr	x25, [sp, #16]
   239c8:	mov	w1, #0x100                 	// #256
   239cc:	ldp	x29, x30, [sp], #80
   239d0:	b	208fc <PyInit__decimal@@Base+0x19d98>
   239d4:	ldr	x8, [x2, #16]
   239d8:	ldr	x9, [x1, #16]
   239dc:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   239e0:	ldr	x10, [x23, #1352]
   239e4:	mov	x20, x3
   239e8:	cmp	x8, x9
   239ec:	csel	x24, x2, x1, gt
   239f0:	ldr	x9, [x24, #24]
   239f4:	ldr	x8, [x19, #32]
   239f8:	csel	x25, x1, x2, gt
   239fc:	cmp	x10, x9
   23a00:	csel	x1, x9, x10, lt  // lt = tstop
   23a04:	cmp	x1, x8
   23a08:	b.eq	23a3c <PyInit__decimal@@Base+0x1ced8>  // b.none
   23a0c:	ldrb	w9, [x19]
   23a10:	tbnz	w9, #5, 23a24 <PyInit__decimal@@Base+0x1cec0>
   23a14:	mov	x0, x19
   23a18:	mov	x2, x21
   23a1c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   23a20:	b	23a38 <PyInit__decimal@@Base+0x1ced4>
   23a24:	cmp	x1, x8
   23a28:	b.le	23a3c <PyInit__decimal@@Base+0x1ced8>
   23a2c:	mov	x0, x19
   23a30:	mov	x2, x21
   23a34:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   23a38:	cbz	w0, 23b40 <PyInit__decimal@@Base+0x1cfdc>
   23a3c:	ldr	x12, [x25, #40]
   23a40:	ldr	x8, [x24, #40]
   23a44:	ldr	x9, [x25, #24]
   23a48:	adrp	x22, 37000 <PyInit__decimal@@Base+0x3049c>
   23a4c:	ldr	x11, [x12]
   23a50:	ldr	x10, [x8]
   23a54:	sub	x9, x9, #0x1
   23a58:	cmp	x9, #0x1
   23a5c:	add	x22, x22, #0xe70
   23a60:	mov	x9, xzr
   23a64:	b.lt	23ae4 <PyInit__decimal@@Base+0x1cf80>  // b.tstop
   23a68:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   23a6c:	movk	x13, #0xcccd
   23a70:	mov	w14, #0xa                   	// #10
   23a74:	mov	x16, xzr
   23a78:	mov	x15, xzr
   23a7c:	umulh	x17, x11, x13
   23a80:	umulh	x18, x10, x13
   23a84:	lsr	x17, x17, #3
   23a88:	lsr	x18, x18, #3
   23a8c:	msub	x11, x17, x14, x11
   23a90:	msub	x10, x18, x14, x10
   23a94:	orr	x10, x10, x11
   23a98:	tst	x10, #0xe
   23a9c:	b.ne	239b0 <PyInit__decimal@@Base+0x1ce4c>  // b.any
   23aa0:	cbz	x10, 23aa8 <PyInit__decimal@@Base+0x1cf44>
   23aa4:	ldr	x10, [x22, x16]
   23aa8:	add	x16, x16, #0x8
   23aac:	cmp	x16, #0x98
   23ab0:	add	x15, x10, x15
   23ab4:	mov	x10, x18
   23ab8:	mov	x11, x17
   23abc:	b.ne	23a7c <PyInit__decimal@@Base+0x1cf18>  // b.any
   23ac0:	ldr	x10, [x19, #40]
   23ac4:	str	x15, [x10, x9, lsl #3]
   23ac8:	ldr	x15, [x25, #24]
   23acc:	add	x9, x9, #0x1
   23ad0:	ldr	x11, [x12, x9, lsl #3]
   23ad4:	ldr	x10, [x8, x9, lsl #3]
   23ad8:	sub	x15, x15, #0x1
   23adc:	cmp	x9, x15
   23ae0:	b.lt	23a74 <PyInit__decimal@@Base+0x1cf10>  // b.tstop
   23ae4:	ldr	x25, [x22, #72]
   23ae8:	cmp	x25, x11
   23aec:	b.ls	23b18 <PyInit__decimal@@Base+0x1cfb4>  // b.plast
   23af0:	ldr	x12, [x22, #32]
   23af4:	cmp	x12, x11
   23af8:	b.ls	23b58 <PyInit__decimal@@Base+0x1cff4>  // b.plast
   23afc:	ldr	x12, [x22, #16]
   23b00:	cmp	x12, x11
   23b04:	b.ls	23b9c <PyInit__decimal@@Base+0x1d038>  // b.plast
   23b08:	ldr	x12, [x22, #8]
   23b0c:	cmp	x12, x11
   23b10:	mov	w12, #0x1                   	// #1
   23b14:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23b18:	ldr	x12, [x22, #112]
   23b1c:	cmp	x12, x11
   23b20:	b.ls	23b74 <PyInit__decimal@@Base+0x1d010>  // b.plast
   23b24:	ldr	x12, [x22, #88]
   23b28:	cmp	x12, x11
   23b2c:	b.ls	23bac <PyInit__decimal@@Base+0x1d048>  // b.plast
   23b30:	ldr	x12, [x22, #80]
   23b34:	cmp	x12, x11
   23b38:	mov	w12, #0xa                   	// #10
   23b3c:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23b40:	ldp	x20, x19, [sp, #64]
   23b44:	ldp	x22, x21, [sp, #48]
   23b48:	ldp	x24, x23, [sp, #32]
   23b4c:	ldr	x25, [sp, #16]
   23b50:	ldp	x29, x30, [sp], #80
   23b54:	ret
   23b58:	ldr	x12, [x22, #48]
   23b5c:	cmp	x12, x11
   23b60:	b.ls	23bc8 <PyInit__decimal@@Base+0x1d064>  // b.plast
   23b64:	ldr	x12, [x22, #40]
   23b68:	cmp	x12, x11
   23b6c:	mov	w12, #0x5                   	// #5
   23b70:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23b74:	ldr	x12, [x22, #144]
   23b78:	cmp	x12, x11
   23b7c:	b.ls	23be4 <PyInit__decimal@@Base+0x1d080>  // b.plast
   23b80:	ldr	x12, [x22, #128]
   23b84:	cmp	x12, x11
   23b88:	b.ls	23bf4 <PyInit__decimal@@Base+0x1d090>  // b.plast
   23b8c:	ldr	x12, [x22, #120]
   23b90:	cmp	x12, x11
   23b94:	mov	w12, #0xf                   	// #15
   23b98:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23b9c:	ldr	x12, [x22, #24]
   23ba0:	cmp	x12, x11
   23ba4:	mov	w12, #0x3                   	// #3
   23ba8:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23bac:	ldr	x12, [x22, #104]
   23bb0:	cmp	x12, x11
   23bb4:	b.ls	23d60 <PyInit__decimal@@Base+0x1d1fc>  // b.plast
   23bb8:	ldr	x12, [x22, #96]
   23bbc:	cmp	x12, x11
   23bc0:	mov	w12, #0xc                   	// #12
   23bc4:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23bc8:	ldr	x12, [x22, #64]
   23bcc:	cmp	x12, x11
   23bd0:	b.ls	23d68 <PyInit__decimal@@Base+0x1d204>  // b.plast
   23bd4:	ldr	x12, [x22, #56]
   23bd8:	cmp	x12, x11
   23bdc:	mov	w12, #0x7                   	// #7
   23be0:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23be4:	ldr	x12, [x22, #152]
   23be8:	cmp	x12, x11
   23bec:	mov	w12, #0x13                  	// #19
   23bf0:	b	23c00 <PyInit__decimal@@Base+0x1d09c>
   23bf4:	ldr	x12, [x22, #136]
   23bf8:	cmp	x12, x11
   23bfc:	mov	w12, #0x11                  	// #17
   23c00:	cinc	x13, x12, ls  // ls = plast
   23c04:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   23c08:	mov	x14, xzr
   23c0c:	mov	x12, xzr
   23c10:	movk	x15, #0xcccd
   23c14:	mov	w16, #0xa                   	// #10
   23c18:	mov	x18, x10
   23c1c:	umulh	x10, x11, x15
   23c20:	umulh	x0, x18, x15
   23c24:	lsr	x17, x10, #3
   23c28:	lsr	x10, x0, #3
   23c2c:	msub	x11, x17, x16, x11
   23c30:	msub	x18, x10, x16, x18
   23c34:	orr	x11, x18, x11
   23c38:	tst	x11, #0xe
   23c3c:	b.ne	239b0 <PyInit__decimal@@Base+0x1ce4c>  // b.any
   23c40:	cbz	x11, 23c48 <PyInit__decimal@@Base+0x1d0e4>
   23c44:	ldr	x11, [x22, x14, lsl #3]
   23c48:	add	x14, x14, #0x1
   23c4c:	cmp	x14, x13
   23c50:	add	x12, x11, x12
   23c54:	mov	x11, x17
   23c58:	b.cc	23c18 <PyInit__decimal@@Base+0x1d0b4>  // b.lo, b.ul, b.last
   23c5c:	sub	w11, w14, #0x1
   23c60:	cmp	w11, #0x11
   23c64:	b.hi	23ca0 <PyInit__decimal@@Base+0x1d13c>  // b.pmore
   23c68:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   23c6c:	movk	x11, #0xcccd
   23c70:	mov	w13, #0xa                   	// #10
   23c74:	umulh	x15, x10, x11
   23c78:	lsr	x15, x15, #3
   23c7c:	msub	x10, x15, x13, x10
   23c80:	cmp	x10, #0x1
   23c84:	b.hi	239b0 <PyInit__decimal@@Base+0x1ce4c>  // b.pmore
   23c88:	ldr	x16, [x22, x14, lsl #3]
   23c8c:	cmp	x14, #0x12
   23c90:	add	x14, x14, #0x1
   23c94:	madd	x12, x16, x10, x12
   23c98:	mov	x10, x15
   23c9c:	b.cc	23c74 <PyInit__decimal@@Base+0x1d110>  // b.lo, b.ul, b.last
   23ca0:	ldr	x10, [x19, #40]
   23ca4:	str	x12, [x10, x9, lsl #3]
   23ca8:	ldr	x13, [x24, #24]
   23cac:	add	x9, x9, #0x1
   23cb0:	cmp	x9, x13
   23cb4:	b.ge	23d04 <PyInit__decimal@@Base+0x1d1a0>  // b.tcont
   23cb8:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   23cbc:	movk	x11, #0xcccd
   23cc0:	mov	w12, #0xa                   	// #10
   23cc4:	ldr	x13, [x8, x9, lsl #3]
   23cc8:	mov	w14, #0x13                  	// #19
   23ccc:	mov	x16, x13
   23cd0:	umulh	x15, x16, x11
   23cd4:	lsr	x15, x15, #3
   23cd8:	msub	x16, x15, x12, x16
   23cdc:	cmp	x16, #0x1
   23ce0:	b.hi	239b0 <PyInit__decimal@@Base+0x1ce4c>  // b.pmore
   23ce4:	subs	w14, w14, #0x1
   23ce8:	mov	x16, x15
   23cec:	b.ne	23cd0 <PyInit__decimal@@Base+0x1d16c>  // b.any
   23cf0:	str	x13, [x10, x9, lsl #3]
   23cf4:	ldr	x13, [x24, #24]
   23cf8:	add	x9, x9, #0x1
   23cfc:	cmp	x9, x13
   23d00:	b.lt	23cc4 <PyInit__decimal@@Base+0x1d160>  // b.tstop
   23d04:	ldrb	w8, [x19]
   23d08:	sub	x10, x10, #0x8
   23d0c:	str	xzr, [x19, #8]
   23d10:	and	w9, w8, #0xf0
   23d14:	strb	w9, [x19]
   23d18:	mov	x9, x13
   23d1c:	cmp	x13, #0x2
   23d20:	b.lt	23d30 <PyInit__decimal@@Base+0x1d1cc>  // b.tstop
   23d24:	ldr	x11, [x10, x9, lsl #3]
   23d28:	sub	x13, x9, #0x1
   23d2c:	cbz	x11, 23d18 <PyInit__decimal@@Base+0x1d1b4>
   23d30:	str	x9, [x19, #24]
   23d34:	ldr	x11, [x23, #1352]
   23d38:	ldr	x10, [x19, #32]
   23d3c:	cmp	x11, x9
   23d40:	csel	x1, x9, x11, lt  // lt = tstop
   23d44:	cmp	x1, x10
   23d48:	b.eq	23d84 <PyInit__decimal@@Base+0x1d220>  // b.none
   23d4c:	tbnz	w8, #5, 23d70 <PyInit__decimal@@Base+0x1d20c>
   23d50:	mov	x0, x19
   23d54:	mov	x2, x21
   23d58:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   23d5c:	b	23d84 <PyInit__decimal@@Base+0x1d220>
   23d60:	mov	w13, #0xe                   	// #14
   23d64:	b	23c04 <PyInit__decimal@@Base+0x1d0a0>
   23d68:	mov	w13, #0x9                   	// #9
   23d6c:	b	23c04 <PyInit__decimal@@Base+0x1d0a0>
   23d70:	cmp	x1, x10
   23d74:	b.le	23d84 <PyInit__decimal@@Base+0x1d220>
   23d78:	mov	x0, x19
   23d7c:	mov	x2, x21
   23d80:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   23d84:	ldr	x9, [x19, #40]
   23d88:	ldr	x8, [x19, #24]
   23d8c:	add	x9, x9, x8, lsl #3
   23d90:	ldur	x9, [x9, #-8]
   23d94:	cmp	x25, x9
   23d98:	b.ls	23dc4 <PyInit__decimal@@Base+0x1d260>  // b.plast
   23d9c:	ldr	x10, [x22, #32]
   23da0:	cmp	x10, x9
   23da4:	b.ls	23dec <PyInit__decimal@@Base+0x1d288>  // b.plast
   23da8:	ldr	x10, [x22, #16]
   23dac:	cmp	x10, x9
   23db0:	b.ls	23e30 <PyInit__decimal@@Base+0x1d2cc>  // b.plast
   23db4:	ldr	x10, [x22, #8]
   23db8:	cmp	x10, x9
   23dbc:	mov	w9, #0x1                   	// #1
   23dc0:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23dc4:	ldr	x10, [x22, #112]
   23dc8:	cmp	x10, x9
   23dcc:	b.ls	23e08 <PyInit__decimal@@Base+0x1d2a4>  // b.plast
   23dd0:	ldr	x10, [x22, #88]
   23dd4:	cmp	x10, x9
   23dd8:	b.ls	23e40 <PyInit__decimal@@Base+0x1d2dc>  // b.plast
   23ddc:	ldr	x10, [x22, #80]
   23de0:	cmp	x10, x9
   23de4:	mov	w9, #0xa                   	// #10
   23de8:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23dec:	ldr	x10, [x22, #48]
   23df0:	cmp	x10, x9
   23df4:	b.ls	23e5c <PyInit__decimal@@Base+0x1d2f8>  // b.plast
   23df8:	ldr	x10, [x22, #40]
   23dfc:	cmp	x10, x9
   23e00:	mov	w9, #0x5                   	// #5
   23e04:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e08:	ldr	x10, [x22, #144]
   23e0c:	cmp	x10, x9
   23e10:	b.ls	23e78 <PyInit__decimal@@Base+0x1d314>  // b.plast
   23e14:	ldr	x10, [x22, #128]
   23e18:	cmp	x10, x9
   23e1c:	b.ls	23e88 <PyInit__decimal@@Base+0x1d324>  // b.plast
   23e20:	ldr	x10, [x22, #120]
   23e24:	cmp	x10, x9
   23e28:	mov	w9, #0xf                   	// #15
   23e2c:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e30:	ldr	x10, [x22, #24]
   23e34:	cmp	x10, x9
   23e38:	mov	w9, #0x3                   	// #3
   23e3c:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e40:	ldr	x10, [x22, #104]
   23e44:	cmp	x10, x9
   23e48:	b.ls	23ec8 <PyInit__decimal@@Base+0x1d364>  // b.plast
   23e4c:	ldr	x10, [x22, #96]
   23e50:	cmp	x10, x9
   23e54:	mov	w9, #0xc                   	// #12
   23e58:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e5c:	ldr	x10, [x22, #64]
   23e60:	cmp	x10, x9
   23e64:	b.ls	23ed0 <PyInit__decimal@@Base+0x1d36c>  // b.plast
   23e68:	ldr	x10, [x22, #56]
   23e6c:	cmp	x10, x9
   23e70:	mov	w9, #0x7                   	// #7
   23e74:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e78:	ldr	x10, [x22, #152]
   23e7c:	cmp	x10, x9
   23e80:	mov	w9, #0x13                  	// #19
   23e84:	b	23e94 <PyInit__decimal@@Base+0x1d330>
   23e88:	ldr	x10, [x22, #136]
   23e8c:	cmp	x10, x9
   23e90:	mov	w9, #0x11                  	// #17
   23e94:	cinc	x9, x9, ls  // ls = plast
   23e98:	mov	w10, #0x13                  	// #19
   23e9c:	madd	x8, x8, x10, x9
   23ea0:	sub	x8, x8, #0x13
   23ea4:	str	x8, [x19, #16]
   23ea8:	mov	x0, x19
   23eac:	mov	x1, x20
   23eb0:	ldp	x20, x19, [sp, #64]
   23eb4:	ldp	x22, x21, [sp, #48]
   23eb8:	ldp	x24, x23, [sp, #32]
   23ebc:	ldr	x25, [sp, #16]
   23ec0:	ldp	x29, x30, [sp], #80
   23ec4:	b	231dc <PyInit__decimal@@Base+0x1c678>
   23ec8:	mov	w9, #0xe                   	// #14
   23ecc:	b	23e98 <PyInit__decimal@@Base+0x1d334>
   23ed0:	mov	w9, #0x9                   	// #9
   23ed4:	b	23e98 <PyInit__decimal@@Base+0x1d334>
   23ed8:	stp	x29, x30, [sp, #-80]!
   23edc:	stp	x28, x25, [sp, #16]
   23ee0:	stp	x24, x23, [sp, #32]
   23ee4:	stp	x22, x21, [sp, #48]
   23ee8:	stp	x20, x19, [sp, #64]
   23eec:	mov	x29, sp
   23ef0:	sub	sp, sp, #0x6a0
   23ef4:	add	x10, sp, #0x498
   23ef8:	str	x10, [sp, #1168]
   23efc:	add	x10, sp, #0x268
   23f00:	mov	w8, #0x30                  	// #48
   23f04:	mov	w9, #0x40                  	// #64
   23f08:	str	x10, [sp, #608]
   23f0c:	add	x10, sp, #0x38
   23f10:	stur	wzr, [x29, #-4]
   23f14:	str	xzr, [sp, #1136]
   23f18:	str	xzr, [sp, #1144]
   23f1c:	str	xzr, [sp, #576]
   23f20:	str	xzr, [sp, #584]
   23f24:	stp	xzr, xzr, [sp, #16]
   23f28:	strb	w8, [sp, #1128]
   23f2c:	str	xzr, [sp, #1152]
   23f30:	str	x9, [sp, #1160]
   23f34:	strb	w8, [sp, #568]
   23f38:	str	xzr, [sp, #592]
   23f3c:	str	x9, [sp, #600]
   23f40:	strb	w8, [sp, #8]
   23f44:	stp	xzr, x9, [sp, #32]
   23f48:	str	x10, [sp, #48]
   23f4c:	ldrb	w8, [x1]
   23f50:	mov	x19, x4
   23f54:	mov	x20, x3
   23f58:	mov	x23, x2
   23f5c:	mov	x22, x1
   23f60:	tst	w8, #0xe
   23f64:	mov	x21, x0
   23f68:	b.ne	23f78 <PyInit__decimal@@Base+0x1d414>  // b.any
   23f6c:	ldrb	w8, [x23]
   23f70:	tst	w8, #0xe
   23f74:	b.eq	23f94 <PyInit__decimal@@Base+0x1d430>  // b.none
   23f78:	mov	x0, x21
   23f7c:	mov	x1, x22
   23f80:	mov	x2, x23
   23f84:	mov	x3, x20
   23f88:	mov	x4, x19
   23f8c:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   23f90:	cbnz	w0, 24090 <PyInit__decimal@@Base+0x1d52c>
   23f94:	ldr	x8, [x23, #8]
   23f98:	cbnz	x8, 24080 <PyInit__decimal@@Base+0x1d51c>
   23f9c:	ldrb	w8, [x23]
   23fa0:	tbnz	w8, #1, 24080 <PyInit__decimal@@Base+0x1d51c>
   23fa4:	sub	x1, x29, #0x4
   23fa8:	mov	x0, x23
   23fac:	bl	215f0 <PyInit__decimal@@Base+0x1aa8c>
   23fb0:	ldurb	w8, [x29, #-3]
   23fb4:	tbnz	w8, #0, 24080 <PyInit__decimal@@Base+0x1d51c>
   23fb8:	ldr	x24, [x20]
   23fbc:	mov	x23, x0
   23fc0:	cmp	x0, x24
   23fc4:	b.gt	24080 <PyInit__decimal@@Base+0x1d51c>
   23fc8:	neg	x8, x24
   23fcc:	cmp	x23, x8
   23fd0:	b.lt	24080 <PyInit__decimal@@Base+0x1d51c>  // b.tstop
   23fd4:	ldrb	w8, [x22]
   23fd8:	tbnz	w8, #1, 240ac <PyInit__decimal@@Base+0x1d548>
   23fdc:	ldr	x8, [x22, #16]
   23fe0:	cmp	x23, #0x0
   23fe4:	csel	x25, xzr, x24, ge  // ge = tcont
   23fe8:	cmp	x8, x24
   23fec:	b.le	24014 <PyInit__decimal@@Base+0x1d4b0>
   23ff0:	add	x0, sp, #0x468
   23ff4:	mov	x1, x22
   23ff8:	mov	x2, x19
   23ffc:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24000:	cbz	w0, 240c0 <PyInit__decimal@@Base+0x1d55c>
   24004:	add	x0, sp, #0x468
   24008:	mov	x1, x20
   2400c:	add	x22, sp, #0x468
   24010:	bl	231dc <PyInit__decimal@@Base+0x1c678>
   24014:	add	x2, x25, x23
   24018:	add	x0, sp, #0x238
   2401c:	mov	x1, x22
   24020:	mov	x3, x19
   24024:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   24028:	cbz	w0, 240c0 <PyInit__decimal@@Base+0x1d55c>
   2402c:	bic	x8, x24, x23, asr #63
   24030:	add	x0, sp, #0x238
   24034:	mov	x1, x20
   24038:	sub	x23, x8, x23
   2403c:	bl	231dc <PyInit__decimal@@Base+0x1c678>
   24040:	add	x0, sp, #0x8
   24044:	mov	x1, x22
   24048:	mov	x2, x23
   2404c:	mov	x3, x19
   24050:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   24054:	cmn	x0, #0x1
   24058:	b.eq	240c0 <PyInit__decimal@@Base+0x1d55c>  // b.none
   2405c:	ldrb	w8, [sp, #8]
   24060:	add	x1, sp, #0x238
   24064:	add	x2, sp, #0x8
   24068:	mov	x0, x21
   2406c:	and	w3, w8, #0x1
   24070:	mov	x4, x20
   24074:	mov	x5, x19
   24078:	bl	24ddc <PyInit__decimal@@Base+0x1e278>
   2407c:	b	240d0 <PyInit__decimal@@Base+0x1d56c>
   24080:	mov	w1, #0x100                 	// #256
   24084:	mov	x0, x21
   24088:	mov	x2, x19
   2408c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   24090:	add	sp, sp, #0x6a0
   24094:	ldp	x20, x19, [sp, #64]
   24098:	ldp	x22, x21, [sp, #48]
   2409c:	ldp	x24, x23, [sp, #32]
   240a0:	ldp	x28, x25, [sp, #16]
   240a4:	ldp	x29, x30, [sp], #80
   240a8:	ret
   240ac:	mov	x0, x21
   240b0:	mov	x1, x22
   240b4:	mov	x2, x19
   240b8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   240bc:	b	24090 <PyInit__decimal@@Base+0x1d52c>
   240c0:	mov	w1, #0x200                 	// #512
   240c4:	mov	x0, x21
   240c8:	mov	x2, x19
   240cc:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   240d0:	ldrb	w8, [sp, #1128]
   240d4:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   240d8:	cmp	w8, #0x1f
   240dc:	b.hi	240f0 <PyInit__decimal@@Base+0x1d58c>  // b.pmore
   240e0:	ldr	x8, [x19, #1384]
   240e4:	ldr	x0, [sp, #1168]
   240e8:	blr	x8
   240ec:	ldrb	w8, [sp, #1128]
   240f0:	tbnz	w8, #4, 24100 <PyInit__decimal@@Base+0x1d59c>
   240f4:	ldr	x8, [x19, #1384]
   240f8:	add	x0, sp, #0x468
   240fc:	blr	x8
   24100:	ldrb	w8, [sp, #568]
   24104:	cmp	w8, #0x1f
   24108:	b.hi	2411c <PyInit__decimal@@Base+0x1d5b8>  // b.pmore
   2410c:	ldr	x8, [x19, #1384]
   24110:	ldr	x0, [sp, #608]
   24114:	blr	x8
   24118:	ldrb	w8, [sp, #568]
   2411c:	tbnz	w8, #4, 2412c <PyInit__decimal@@Base+0x1d5c8>
   24120:	ldr	x8, [x19, #1384]
   24124:	add	x0, sp, #0x238
   24128:	blr	x8
   2412c:	ldrb	w8, [sp, #8]
   24130:	cmp	w8, #0x1f
   24134:	b.hi	24148 <PyInit__decimal@@Base+0x1d5e4>  // b.pmore
   24138:	ldr	x8, [x19, #1384]
   2413c:	ldr	x0, [sp, #48]
   24140:	blr	x8
   24144:	ldrb	w8, [sp, #8]
   24148:	tbnz	w8, #4, 24090 <PyInit__decimal@@Base+0x1d52c>
   2414c:	ldr	x8, [x19, #1384]
   24150:	add	x0, sp, #0x8
   24154:	blr	x8
   24158:	b	24090 <PyInit__decimal@@Base+0x1d52c>
   2415c:	stp	x29, x30, [sp, #-64]!
   24160:	str	x23, [sp, #16]
   24164:	stp	x22, x21, [sp, #32]
   24168:	stp	x20, x19, [sp, #48]
   2416c:	mov	x29, sp
   24170:	str	wzr, [x29, #28]
   24174:	ldrb	w8, [x1]
   24178:	mov	x19, x4
   2417c:	mov	x21, x3
   24180:	mov	x23, x2
   24184:	mov	x22, x1
   24188:	tst	w8, #0xe
   2418c:	mov	x20, x0
   24190:	b.ne	241a0 <PyInit__decimal@@Base+0x1d63c>  // b.any
   24194:	ldrb	w8, [x23]
   24198:	tst	w8, #0xe
   2419c:	b.eq	241bc <PyInit__decimal@@Base+0x1d658>  // b.none
   241a0:	mov	x0, x20
   241a4:	mov	x1, x22
   241a8:	mov	x2, x23
   241ac:	mov	x3, x21
   241b0:	mov	x4, x19
   241b4:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   241b8:	cbnz	w0, 2427c <PyInit__decimal@@Base+0x1d718>
   241bc:	ldr	x8, [x23, #8]
   241c0:	cbnz	x8, 2426c <PyInit__decimal@@Base+0x1d708>
   241c4:	ldrb	w8, [x23]
   241c8:	tbnz	w8, #1, 2426c <PyInit__decimal@@Base+0x1d708>
   241cc:	add	x2, x29, #0x1c
   241d0:	mov	w0, wzr
   241d4:	mov	x1, x23
   241d8:	bl	213a8 <PyInit__decimal@@Base+0x1a844>
   241dc:	ldp	x9, x8, [x21]
   241e0:	add	x8, x9, x8
   241e4:	cmp	x0, x8, lsl #1
   241e8:	b.hi	2426c <PyInit__decimal@@Base+0x1d708>  // b.pmore
   241ec:	ldrb	w8, [x29, #29]
   241f0:	tbnz	w8, #0, 2426c <PyInit__decimal@@Base+0x1d708>
   241f4:	ldrb	w8, [x22]
   241f8:	tbnz	w8, #1, 24290 <PyInit__decimal@@Base+0x1d72c>
   241fc:	ldrb	w8, [x23]
   24200:	ldr	x9, [x22, #8]
   24204:	mov	x11, #0x1                   	// #1
   24208:	mov	w10, #0x1                   	// #1
   2420c:	lsl	w8, w8, #1
   24210:	movk	x11, #0x4ec8, lsl #16
   24214:	and	x8, x8, #0x2
   24218:	movk	x11, #0x6d67, lsl #32
   2421c:	sub	x8, x10, x8
   24220:	movk	x11, #0x1bc1, lsl #48
   24224:	madd	x8, x8, x0, x9
   24228:	mov	x9, #0xffffffff626fffff    	// #-2643460097
   2422c:	cmp	x8, x11
   24230:	movk	x9, #0x2531, lsl #32
   24234:	csel	x8, x8, x11, lt  // lt = tstop
   24238:	movk	x9, #0xc87d, lsl #48
   2423c:	cmp	x8, x9
   24240:	mov	x0, x20
   24244:	mov	x1, x22
   24248:	mov	x2, x19
   2424c:	csel	x23, x8, x9, gt
   24250:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24254:	mov	x0, x20
   24258:	mov	x1, x21
   2425c:	mov	x2, x19
   24260:	str	x23, [x20, #8]
   24264:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   24268:	b	2427c <PyInit__decimal@@Base+0x1d718>
   2426c:	mov	w1, #0x100                 	// #256
   24270:	mov	x0, x20
   24274:	mov	x2, x19
   24278:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2427c:	ldp	x20, x19, [sp, #48]
   24280:	ldp	x22, x21, [sp, #32]
   24284:	ldr	x23, [sp, #16]
   24288:	ldp	x29, x30, [sp], #64
   2428c:	ret
   24290:	mov	x0, x20
   24294:	mov	x1, x22
   24298:	mov	x2, x19
   2429c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   242a0:	b	2427c <PyInit__decimal@@Base+0x1d718>
   242a4:	stp	x29, x30, [sp, #-64]!
   242a8:	str	x23, [sp, #16]
   242ac:	stp	x22, x21, [sp, #32]
   242b0:	stp	x20, x19, [sp, #48]
   242b4:	mov	x29, sp
   242b8:	ldrb	w8, [x1]
   242bc:	mov	x20, x4
   242c0:	mov	x21, x3
   242c4:	mov	x23, x1
   242c8:	tst	w8, #0xe
   242cc:	mov	x19, x0
   242d0:	b.eq	24300 <PyInit__decimal@@Base+0x1d79c>  // b.none
   242d4:	mov	x0, x19
   242d8:	mov	x1, x23
   242dc:	mov	x2, x21
   242e0:	mov	x3, x20
   242e4:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   242e8:	cbz	w0, 24344 <PyInit__decimal@@Base+0x1d7e0>
   242ec:	ldp	x20, x19, [sp, #48]
   242f0:	ldp	x22, x21, [sp, #32]
   242f4:	ldr	x23, [sp, #16]
   242f8:	ldp	x29, x30, [sp], #64
   242fc:	ret
   24300:	ldr	x8, [x21]
   24304:	mov	x22, x2
   24308:	tbnz	x2, #63, 24364 <PyInit__decimal@@Base+0x1d800>
   2430c:	cmp	x8, x22
   24310:	b.lt	24370 <PyInit__decimal@@Base+0x1d80c>  // b.tstop
   24314:	mov	x0, x19
   24318:	mov	x1, x23
   2431c:	mov	x2, x22
   24320:	mov	x3, x20
   24324:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   24328:	mov	x0, x19
   2432c:	mov	x1, x21
   24330:	ldp	x20, x19, [sp, #48]
   24334:	ldp	x22, x21, [sp, #32]
   24338:	ldr	x23, [sp, #16]
   2433c:	ldp	x29, x30, [sp], #64
   24340:	b	231dc <PyInit__decimal@@Base+0x1c678>
   24344:	mov	x0, x19
   24348:	mov	x1, x23
   2434c:	mov	x2, x20
   24350:	ldp	x20, x19, [sp, #48]
   24354:	ldp	x22, x21, [sp, #32]
   24358:	ldr	x23, [sp, #16]
   2435c:	ldp	x29, x30, [sp], #64
   24360:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   24364:	neg	x8, x8
   24368:	cmp	x8, x22
   2436c:	b.le	24390 <PyInit__decimal@@Base+0x1d82c>
   24370:	mov	x0, x19
   24374:	mov	x2, x20
   24378:	ldp	x20, x19, [sp, #48]
   2437c:	ldp	x22, x21, [sp, #32]
   24380:	ldr	x23, [sp, #16]
   24384:	mov	w1, #0x100                 	// #256
   24388:	ldp	x29, x30, [sp], #64
   2438c:	b	208fc <PyInit__decimal@@Base+0x19d98>
   24390:	mov	x0, x19
   24394:	mov	x1, x23
   24398:	mov	x2, x20
   2439c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   243a0:	cbz	w0, 242ec <PyInit__decimal@@Base+0x1d788>
   243a4:	mov	x0, x19
   243a8:	mov	x1, x21
   243ac:	bl	231dc <PyInit__decimal@@Base+0x1c678>
   243b0:	neg	x1, x22
   243b4:	mov	x0, x19
   243b8:	ldp	x20, x19, [sp, #48]
   243bc:	ldp	x22, x21, [sp, #32]
   243c0:	ldr	x23, [sp, #16]
   243c4:	ldp	x29, x30, [sp], #64
   243c8:	b	227bc <PyInit__decimal@@Base+0x1bc58>
   243cc:	stp	x29, x30, [sp, #-64]!
   243d0:	str	x23, [sp, #16]
   243d4:	stp	x22, x21, [sp, #32]
   243d8:	stp	x20, x19, [sp, #48]
   243dc:	mov	x29, sp
   243e0:	str	wzr, [x29, #28]
   243e4:	ldrb	w8, [x1]
   243e8:	mov	x20, x4
   243ec:	mov	x21, x3
   243f0:	mov	x23, x2
   243f4:	mov	x22, x1
   243f8:	tst	w8, #0xe
   243fc:	mov	x19, x0
   24400:	b.ne	24410 <PyInit__decimal@@Base+0x1d8ac>  // b.any
   24404:	ldrb	w8, [x23]
   24408:	tst	w8, #0xe
   2440c:	b.eq	2442c <PyInit__decimal@@Base+0x1d8c8>  // b.none
   24410:	mov	x0, x19
   24414:	mov	x1, x22
   24418:	mov	x2, x23
   2441c:	mov	x3, x21
   24420:	mov	x4, x20
   24424:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   24428:	cbnz	w0, 244ac <PyInit__decimal@@Base+0x1d948>
   2442c:	ldr	x8, [x23, #8]
   24430:	cbnz	x8, 2449c <PyInit__decimal@@Base+0x1d938>
   24434:	ldrb	w8, [x23]
   24438:	tbnz	w8, #1, 2449c <PyInit__decimal@@Base+0x1d938>
   2443c:	add	x1, x29, #0x1c
   24440:	mov	x0, x23
   24444:	bl	215f0 <PyInit__decimal@@Base+0x1aa8c>
   24448:	ldrb	w8, [x29, #29]
   2444c:	tbnz	w8, #0, 2449c <PyInit__decimal@@Base+0x1d938>
   24450:	ldr	x8, [x21]
   24454:	mov	x23, x0
   24458:	cmp	x0, x8
   2445c:	b.gt	2449c <PyInit__decimal@@Base+0x1d938>
   24460:	neg	x8, x8
   24464:	cmp	x23, x8
   24468:	b.lt	2449c <PyInit__decimal@@Base+0x1d938>  // b.tstop
   2446c:	ldrb	w8, [x22]
   24470:	tbnz	w8, #1, 244c0 <PyInit__decimal@@Base+0x1d95c>
   24474:	mov	x0, x19
   24478:	mov	x1, x22
   2447c:	tbnz	x23, #63, 244d4 <PyInit__decimal@@Base+0x1d970>
   24480:	mov	x2, x23
   24484:	mov	x3, x20
   24488:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2448c:	mov	x0, x19
   24490:	mov	x1, x21
   24494:	bl	231dc <PyInit__decimal@@Base+0x1c678>
   24498:	b	244ac <PyInit__decimal@@Base+0x1d948>
   2449c:	mov	w1, #0x100                 	// #256
   244a0:	mov	x0, x19
   244a4:	mov	x2, x20
   244a8:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   244ac:	ldp	x20, x19, [sp, #48]
   244b0:	ldp	x22, x21, [sp, #32]
   244b4:	ldr	x23, [sp, #16]
   244b8:	ldp	x29, x30, [sp], #64
   244bc:	ret
   244c0:	mov	x0, x19
   244c4:	mov	x1, x22
   244c8:	mov	x2, x20
   244cc:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   244d0:	b	244ac <PyInit__decimal@@Base+0x1d948>
   244d4:	mov	x2, x20
   244d8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   244dc:	cbz	w0, 244ac <PyInit__decimal@@Base+0x1d948>
   244e0:	mov	x0, x19
   244e4:	mov	x1, x21
   244e8:	bl	231dc <PyInit__decimal@@Base+0x1c678>
   244ec:	neg	x1, x23
   244f0:	mov	x0, x19
   244f4:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   244f8:	b	244ac <PyInit__decimal@@Base+0x1d948>
   244fc:	stp	x29, x30, [sp, #-80]!
   24500:	str	x25, [sp, #16]
   24504:	stp	x24, x23, [sp, #32]
   24508:	stp	x22, x21, [sp, #48]
   2450c:	stp	x20, x19, [sp, #64]
   24510:	mov	x29, sp
   24514:	ldrb	w8, [x1]
   24518:	mov	x21, x4
   2451c:	mov	x19, x0
   24520:	tst	w8, #0xe
   24524:	b.ne	24550 <PyInit__decimal@@Base+0x1d9ec>  // b.any
   24528:	ldrb	w9, [x2]
   2452c:	and	w10, w9, #0xe
   24530:	bfxil	w10, w8, #0, #1
   24534:	and	w8, w9, #0x1
   24538:	orr	w8, w8, w10
   2453c:	cbnz	w8, 24550 <PyInit__decimal@@Base+0x1d9ec>
   24540:	ldr	x8, [x1, #8]
   24544:	cbnz	x8, 24550 <PyInit__decimal@@Base+0x1d9ec>
   24548:	ldr	x8, [x2, #8]
   2454c:	cbz	x8, 24574 <PyInit__decimal@@Base+0x1da10>
   24550:	mov	x0, x19
   24554:	mov	x2, x21
   24558:	ldp	x20, x19, [sp, #64]
   2455c:	ldp	x22, x21, [sp, #48]
   24560:	ldp	x24, x23, [sp, #32]
   24564:	ldr	x25, [sp, #16]
   24568:	mov	w1, #0x100                 	// #256
   2456c:	ldp	x29, x30, [sp], #80
   24570:	b	208fc <PyInit__decimal@@Base+0x19d98>
   24574:	ldr	x8, [x2, #16]
   24578:	ldr	x9, [x1, #16]
   2457c:	adrp	x23, 4c000 <PyInit__decimal@@Base+0x4549c>
   24580:	ldr	x10, [x23, #1352]
   24584:	mov	x20, x3
   24588:	cmp	x8, x9
   2458c:	csel	x24, x2, x1, gt
   24590:	ldr	x9, [x24, #24]
   24594:	ldr	x8, [x19, #32]
   24598:	csel	x25, x1, x2, gt
   2459c:	cmp	x10, x9
   245a0:	csel	x1, x9, x10, lt  // lt = tstop
   245a4:	cmp	x1, x8
   245a8:	b.eq	245dc <PyInit__decimal@@Base+0x1da78>  // b.none
   245ac:	ldrb	w9, [x19]
   245b0:	tbnz	w9, #5, 245c4 <PyInit__decimal@@Base+0x1da60>
   245b4:	mov	x0, x19
   245b8:	mov	x2, x21
   245bc:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   245c0:	b	245d8 <PyInit__decimal@@Base+0x1da74>
   245c4:	cmp	x1, x8
   245c8:	b.le	245dc <PyInit__decimal@@Base+0x1da78>
   245cc:	mov	x0, x19
   245d0:	mov	x2, x21
   245d4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   245d8:	cbz	w0, 246ec <PyInit__decimal@@Base+0x1db88>
   245dc:	ldr	x12, [x25, #40]
   245e0:	ldr	x8, [x24, #40]
   245e4:	ldr	x9, [x25, #24]
   245e8:	adrp	x22, 37000 <PyInit__decimal@@Base+0x3049c>
   245ec:	ldr	x11, [x12]
   245f0:	ldr	x10, [x8]
   245f4:	sub	x9, x9, #0x1
   245f8:	cmp	x9, #0x1
   245fc:	add	x22, x22, #0xe70
   24600:	mov	x9, xzr
   24604:	b.lt	24690 <PyInit__decimal@@Base+0x1db2c>  // b.tstop
   24608:	mov	x13, #0xcccccccccccccccc    	// #-3689348814741910324
   2460c:	movk	x13, #0xcccd
   24610:	mov	w14, #0xa                   	// #10
   24614:	mov	x16, xzr
   24618:	mov	x15, xzr
   2461c:	umulh	x17, x11, x13
   24620:	umulh	x18, x10, x13
   24624:	lsr	x17, x17, #3
   24628:	lsr	x18, x18, #3
   2462c:	msub	x11, x17, x14, x11
   24630:	msub	x10, x18, x14, x10
   24634:	orr	w0, w10, w11
   24638:	tst	x0, #0xe
   2463c:	b.ne	24550 <PyInit__decimal@@Base+0x1d9ec>  // b.any
   24640:	cmp	x11, x10
   24644:	b.ne	24650 <PyInit__decimal@@Base+0x1daec>  // b.any
   24648:	mov	x10, xzr
   2464c:	b	24654 <PyInit__decimal@@Base+0x1daf0>
   24650:	ldr	x10, [x22, x16]
   24654:	add	x16, x16, #0x8
   24658:	cmp	x16, #0x98
   2465c:	add	x15, x10, x15
   24660:	mov	x10, x18
   24664:	mov	x11, x17
   24668:	b.ne	2461c <PyInit__decimal@@Base+0x1dab8>  // b.any
   2466c:	ldr	x10, [x19, #40]
   24670:	str	x15, [x10, x9, lsl #3]
   24674:	ldr	x15, [x25, #24]
   24678:	add	x9, x9, #0x1
   2467c:	ldr	x11, [x12, x9, lsl #3]
   24680:	ldr	x10, [x8, x9, lsl #3]
   24684:	sub	x15, x15, #0x1
   24688:	cmp	x9, x15
   2468c:	b.lt	24614 <PyInit__decimal@@Base+0x1dab0>  // b.tstop
   24690:	ldr	x25, [x22, #72]
   24694:	cmp	x25, x11
   24698:	b.ls	246c4 <PyInit__decimal@@Base+0x1db60>  // b.plast
   2469c:	ldr	x12, [x22, #32]
   246a0:	cmp	x12, x11
   246a4:	b.ls	24704 <PyInit__decimal@@Base+0x1dba0>  // b.plast
   246a8:	ldr	x12, [x22, #16]
   246ac:	cmp	x12, x11
   246b0:	b.ls	24748 <PyInit__decimal@@Base+0x1dbe4>  // b.plast
   246b4:	ldr	x12, [x22, #8]
   246b8:	cmp	x12, x11
   246bc:	mov	w12, #0x1                   	// #1
   246c0:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   246c4:	ldr	x12, [x22, #112]
   246c8:	cmp	x12, x11
   246cc:	b.ls	24720 <PyInit__decimal@@Base+0x1dbbc>  // b.plast
   246d0:	ldr	x12, [x22, #88]
   246d4:	cmp	x12, x11
   246d8:	b.ls	24758 <PyInit__decimal@@Base+0x1dbf4>  // b.plast
   246dc:	ldr	x12, [x22, #80]
   246e0:	cmp	x12, x11
   246e4:	mov	w12, #0xa                   	// #10
   246e8:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   246ec:	ldp	x20, x19, [sp, #64]
   246f0:	ldp	x22, x21, [sp, #48]
   246f4:	ldp	x24, x23, [sp, #32]
   246f8:	ldr	x25, [sp, #16]
   246fc:	ldp	x29, x30, [sp], #80
   24700:	ret
   24704:	ldr	x12, [x22, #48]
   24708:	cmp	x12, x11
   2470c:	b.ls	24774 <PyInit__decimal@@Base+0x1dc10>  // b.plast
   24710:	ldr	x12, [x22, #40]
   24714:	cmp	x12, x11
   24718:	mov	w12, #0x5                   	// #5
   2471c:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   24720:	ldr	x12, [x22, #144]
   24724:	cmp	x12, x11
   24728:	b.ls	24790 <PyInit__decimal@@Base+0x1dc2c>  // b.plast
   2472c:	ldr	x12, [x22, #128]
   24730:	cmp	x12, x11
   24734:	b.ls	247a0 <PyInit__decimal@@Base+0x1dc3c>  // b.plast
   24738:	ldr	x12, [x22, #120]
   2473c:	cmp	x12, x11
   24740:	mov	w12, #0xf                   	// #15
   24744:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   24748:	ldr	x12, [x22, #24]
   2474c:	cmp	x12, x11
   24750:	mov	w12, #0x3                   	// #3
   24754:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   24758:	ldr	x12, [x22, #104]
   2475c:	cmp	x12, x11
   24760:	b.ls	24918 <PyInit__decimal@@Base+0x1ddb4>  // b.plast
   24764:	ldr	x12, [x22, #96]
   24768:	cmp	x12, x11
   2476c:	mov	w12, #0xc                   	// #12
   24770:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   24774:	ldr	x12, [x22, #64]
   24778:	cmp	x12, x11
   2477c:	b.ls	24920 <PyInit__decimal@@Base+0x1ddbc>  // b.plast
   24780:	ldr	x12, [x22, #56]
   24784:	cmp	x12, x11
   24788:	mov	w12, #0x7                   	// #7
   2478c:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   24790:	ldr	x12, [x22, #152]
   24794:	cmp	x12, x11
   24798:	mov	w12, #0x13                  	// #19
   2479c:	b	247ac <PyInit__decimal@@Base+0x1dc48>
   247a0:	ldr	x12, [x22, #136]
   247a4:	cmp	x12, x11
   247a8:	mov	w12, #0x11                  	// #17
   247ac:	cinc	x13, x12, ls  // ls = plast
   247b0:	mov	x15, #0xcccccccccccccccc    	// #-3689348814741910324
   247b4:	mov	x14, xzr
   247b8:	mov	x12, xzr
   247bc:	movk	x15, #0xcccd
   247c0:	mov	w16, #0xa                   	// #10
   247c4:	mov	x18, x10
   247c8:	umulh	x10, x11, x15
   247cc:	umulh	x0, x18, x15
   247d0:	lsr	x17, x10, #3
   247d4:	lsr	x10, x0, #3
   247d8:	msub	x11, x17, x16, x11
   247dc:	msub	x18, x10, x16, x18
   247e0:	orr	w0, w18, w11
   247e4:	tst	x0, #0xe
   247e8:	b.ne	24550 <PyInit__decimal@@Base+0x1d9ec>  // b.any
   247ec:	cmp	x11, x18
   247f0:	b.ne	247fc <PyInit__decimal@@Base+0x1dc98>  // b.any
   247f4:	mov	x11, xzr
   247f8:	b	24800 <PyInit__decimal@@Base+0x1dc9c>
   247fc:	ldr	x11, [x22, x14, lsl #3]
   24800:	add	x14, x14, #0x1
   24804:	cmp	x14, x13
   24808:	add	x12, x11, x12
   2480c:	mov	x11, x17
   24810:	b.cc	247c4 <PyInit__decimal@@Base+0x1dc60>  // b.lo, b.ul, b.last
   24814:	sub	w11, w14, #0x1
   24818:	cmp	w11, #0x11
   2481c:	b.hi	24858 <PyInit__decimal@@Base+0x1dcf4>  // b.pmore
   24820:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   24824:	movk	x11, #0xcccd
   24828:	mov	w13, #0xa                   	// #10
   2482c:	umulh	x15, x10, x11
   24830:	lsr	x15, x15, #3
   24834:	msub	x10, x15, x13, x10
   24838:	cmp	x10, #0x1
   2483c:	b.hi	24550 <PyInit__decimal@@Base+0x1d9ec>  // b.pmore
   24840:	ldr	x16, [x22, x14, lsl #3]
   24844:	cmp	x14, #0x12
   24848:	add	x14, x14, #0x1
   2484c:	madd	x12, x16, x10, x12
   24850:	mov	x10, x15
   24854:	b.cc	2482c <PyInit__decimal@@Base+0x1dcc8>  // b.lo, b.ul, b.last
   24858:	ldr	x10, [x19, #40]
   2485c:	str	x12, [x10, x9, lsl #3]
   24860:	ldr	x13, [x24, #24]
   24864:	add	x9, x9, #0x1
   24868:	cmp	x9, x13
   2486c:	b.ge	248bc <PyInit__decimal@@Base+0x1dd58>  // b.tcont
   24870:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   24874:	movk	x11, #0xcccd
   24878:	mov	w12, #0xa                   	// #10
   2487c:	ldr	x13, [x8, x9, lsl #3]
   24880:	mov	w14, #0x13                  	// #19
   24884:	mov	x16, x13
   24888:	umulh	x15, x16, x11
   2488c:	lsr	x15, x15, #3
   24890:	msub	x16, x15, x12, x16
   24894:	cmp	x16, #0x1
   24898:	b.hi	24550 <PyInit__decimal@@Base+0x1d9ec>  // b.pmore
   2489c:	subs	w14, w14, #0x1
   248a0:	mov	x16, x15
   248a4:	b.ne	24888 <PyInit__decimal@@Base+0x1dd24>  // b.any
   248a8:	str	x13, [x10, x9, lsl #3]
   248ac:	ldr	x13, [x24, #24]
   248b0:	add	x9, x9, #0x1
   248b4:	cmp	x9, x13
   248b8:	b.lt	2487c <PyInit__decimal@@Base+0x1dd18>  // b.tstop
   248bc:	ldrb	w8, [x19]
   248c0:	sub	x10, x10, #0x8
   248c4:	str	xzr, [x19, #8]
   248c8:	and	w9, w8, #0xf0
   248cc:	strb	w9, [x19]
   248d0:	mov	x9, x13
   248d4:	cmp	x13, #0x2
   248d8:	b.lt	248e8 <PyInit__decimal@@Base+0x1dd84>  // b.tstop
   248dc:	ldr	x11, [x10, x9, lsl #3]
   248e0:	sub	x13, x9, #0x1
   248e4:	cbz	x11, 248d0 <PyInit__decimal@@Base+0x1dd6c>
   248e8:	str	x9, [x19, #24]
   248ec:	ldr	x11, [x23, #1352]
   248f0:	ldr	x10, [x19, #32]
   248f4:	cmp	x11, x9
   248f8:	csel	x1, x9, x11, lt  // lt = tstop
   248fc:	cmp	x1, x10
   24900:	b.eq	2493c <PyInit__decimal@@Base+0x1ddd8>  // b.none
   24904:	tbnz	w8, #5, 24928 <PyInit__decimal@@Base+0x1ddc4>
   24908:	mov	x0, x19
   2490c:	mov	x2, x21
   24910:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   24914:	b	2493c <PyInit__decimal@@Base+0x1ddd8>
   24918:	mov	w13, #0xe                   	// #14
   2491c:	b	247b0 <PyInit__decimal@@Base+0x1dc4c>
   24920:	mov	w13, #0x9                   	// #9
   24924:	b	247b0 <PyInit__decimal@@Base+0x1dc4c>
   24928:	cmp	x1, x10
   2492c:	b.le	2493c <PyInit__decimal@@Base+0x1ddd8>
   24930:	mov	x0, x19
   24934:	mov	x2, x21
   24938:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2493c:	ldr	x9, [x19, #40]
   24940:	ldr	x8, [x19, #24]
   24944:	add	x9, x9, x8, lsl #3
   24948:	ldur	x9, [x9, #-8]
   2494c:	cmp	x25, x9
   24950:	b.ls	2497c <PyInit__decimal@@Base+0x1de18>  // b.plast
   24954:	ldr	x10, [x22, #32]
   24958:	cmp	x10, x9
   2495c:	b.ls	249a4 <PyInit__decimal@@Base+0x1de40>  // b.plast
   24960:	ldr	x10, [x22, #16]
   24964:	cmp	x10, x9
   24968:	b.ls	249e8 <PyInit__decimal@@Base+0x1de84>  // b.plast
   2496c:	ldr	x10, [x22, #8]
   24970:	cmp	x10, x9
   24974:	mov	w9, #0x1                   	// #1
   24978:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   2497c:	ldr	x10, [x22, #112]
   24980:	cmp	x10, x9
   24984:	b.ls	249c0 <PyInit__decimal@@Base+0x1de5c>  // b.plast
   24988:	ldr	x10, [x22, #88]
   2498c:	cmp	x10, x9
   24990:	b.ls	249f8 <PyInit__decimal@@Base+0x1de94>  // b.plast
   24994:	ldr	x10, [x22, #80]
   24998:	cmp	x10, x9
   2499c:	mov	w9, #0xa                   	// #10
   249a0:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   249a4:	ldr	x10, [x22, #48]
   249a8:	cmp	x10, x9
   249ac:	b.ls	24a14 <PyInit__decimal@@Base+0x1deb0>  // b.plast
   249b0:	ldr	x10, [x22, #40]
   249b4:	cmp	x10, x9
   249b8:	mov	w9, #0x5                   	// #5
   249bc:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   249c0:	ldr	x10, [x22, #144]
   249c4:	cmp	x10, x9
   249c8:	b.ls	24a30 <PyInit__decimal@@Base+0x1decc>  // b.plast
   249cc:	ldr	x10, [x22, #128]
   249d0:	cmp	x10, x9
   249d4:	b.ls	24a40 <PyInit__decimal@@Base+0x1dedc>  // b.plast
   249d8:	ldr	x10, [x22, #120]
   249dc:	cmp	x10, x9
   249e0:	mov	w9, #0xf                   	// #15
   249e4:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   249e8:	ldr	x10, [x22, #24]
   249ec:	cmp	x10, x9
   249f0:	mov	w9, #0x3                   	// #3
   249f4:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   249f8:	ldr	x10, [x22, #104]
   249fc:	cmp	x10, x9
   24a00:	b.ls	24a80 <PyInit__decimal@@Base+0x1df1c>  // b.plast
   24a04:	ldr	x10, [x22, #96]
   24a08:	cmp	x10, x9
   24a0c:	mov	w9, #0xc                   	// #12
   24a10:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   24a14:	ldr	x10, [x22, #64]
   24a18:	cmp	x10, x9
   24a1c:	b.ls	24a88 <PyInit__decimal@@Base+0x1df24>  // b.plast
   24a20:	ldr	x10, [x22, #56]
   24a24:	cmp	x10, x9
   24a28:	mov	w9, #0x7                   	// #7
   24a2c:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   24a30:	ldr	x10, [x22, #152]
   24a34:	cmp	x10, x9
   24a38:	mov	w9, #0x13                  	// #19
   24a3c:	b	24a4c <PyInit__decimal@@Base+0x1dee8>
   24a40:	ldr	x10, [x22, #136]
   24a44:	cmp	x10, x9
   24a48:	mov	w9, #0x11                  	// #17
   24a4c:	cinc	x9, x9, ls  // ls = plast
   24a50:	mov	w10, #0x13                  	// #19
   24a54:	madd	x8, x8, x10, x9
   24a58:	sub	x8, x8, #0x13
   24a5c:	str	x8, [x19, #16]
   24a60:	mov	x0, x19
   24a64:	mov	x1, x20
   24a68:	ldp	x20, x19, [sp, #64]
   24a6c:	ldp	x22, x21, [sp, #48]
   24a70:	ldp	x24, x23, [sp, #32]
   24a74:	ldr	x25, [sp, #16]
   24a78:	ldp	x29, x30, [sp], #80
   24a7c:	b	231dc <PyInit__decimal@@Base+0x1c678>
   24a80:	mov	w9, #0xe                   	// #14
   24a84:	b	24a50 <PyInit__decimal@@Base+0x1deec>
   24a88:	mov	w9, #0x9                   	// #9
   24a8c:	b	24a50 <PyInit__decimal@@Base+0x1deec>
   24a90:	stp	x29, x30, [sp, #-48]!
   24a94:	stp	x22, x21, [sp, #16]
   24a98:	stp	x20, x19, [sp, #32]
   24a9c:	mov	x29, sp
   24aa0:	ldrb	w8, [x1]
   24aa4:	mov	x19, x3
   24aa8:	mov	x20, x2
   24aac:	mov	x21, x1
   24ab0:	tst	w8, #0xe
   24ab4:	mov	x22, x0
   24ab8:	b.eq	24ae8 <PyInit__decimal@@Base+0x1df84>  // b.none
   24abc:	mov	x0, x22
   24ac0:	mov	x1, x21
   24ac4:	mov	x2, x20
   24ac8:	mov	x3, x19
   24acc:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   24ad0:	cbz	w0, 24ae4 <PyInit__decimal@@Base+0x1df80>
   24ad4:	ldp	x20, x19, [sp, #32]
   24ad8:	ldp	x22, x21, [sp, #16]
   24adc:	ldp	x29, x30, [sp], #48
   24ae0:	ret
   24ae4:	ldrb	w8, [x21]
   24ae8:	mov	x0, x22
   24aec:	mov	x1, x21
   24af0:	mov	x2, x20
   24af4:	mov	x3, x19
   24af8:	tbnz	w8, #0, 24b0c <PyInit__decimal@@Base+0x1dfa8>
   24afc:	ldp	x20, x19, [sp, #32]
   24b00:	ldp	x22, x21, [sp, #16]
   24b04:	ldp	x29, x30, [sp], #48
   24b08:	b	24bf8 <PyInit__decimal@@Base+0x1e094>
   24b0c:	ldp	x20, x19, [sp, #32]
   24b10:	ldp	x22, x21, [sp, #16]
   24b14:	ldp	x29, x30, [sp], #48
   24b18:	b	24b1c <PyInit__decimal@@Base+0x1dfb8>
   24b1c:	stp	x29, x30, [sp, #-48]!
   24b20:	stp	x22, x21, [sp, #16]
   24b24:	stp	x20, x19, [sp, #32]
   24b28:	mov	x29, sp
   24b2c:	ldrb	w8, [x1]
   24b30:	mov	x19, x3
   24b34:	mov	x20, x2
   24b38:	mov	x22, x1
   24b3c:	tst	w8, #0xe
   24b40:	mov	x21, x0
   24b44:	b.eq	24b74 <PyInit__decimal@@Base+0x1e010>  // b.none
   24b48:	mov	x0, x21
   24b4c:	mov	x1, x22
   24b50:	mov	x2, x20
   24b54:	mov	x3, x19
   24b58:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   24b5c:	cbz	w0, 24b70 <PyInit__decimal@@Base+0x1e00c>
   24b60:	ldp	x20, x19, [sp, #32]
   24b64:	ldp	x22, x21, [sp, #16]
   24b68:	ldp	x29, x30, [sp], #48
   24b6c:	ret
   24b70:	ldrb	w8, [x22]
   24b74:	tst	w8, #0xe
   24b78:	b.ne	24b9c <PyInit__decimal@@Base+0x1e038>  // b.any
   24b7c:	ldr	x8, [x22, #40]
   24b80:	ldr	x9, [x22, #24]
   24b84:	add	x8, x8, x9, lsl #3
   24b88:	ldur	x8, [x8, #-8]
   24b8c:	cbnz	x8, 24b9c <PyInit__decimal@@Base+0x1e038>
   24b90:	ldr	w8, [x20, #36]
   24b94:	cmp	w8, #0x3
   24b98:	b.ne	24bd8 <PyInit__decimal@@Base+0x1e074>  // b.any
   24b9c:	mov	x0, x21
   24ba0:	mov	x1, x22
   24ba4:	mov	x2, x19
   24ba8:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24bac:	cbz	w0, 24bbc <PyInit__decimal@@Base+0x1e058>
   24bb0:	ldrb	w8, [x21]
   24bb4:	eor	w8, w8, #0x1
   24bb8:	strb	w8, [x21]
   24bbc:	mov	x0, x21
   24bc0:	mov	x1, x20
   24bc4:	mov	x2, x19
   24bc8:	ldp	x20, x19, [sp, #32]
   24bcc:	ldp	x22, x21, [sp, #16]
   24bd0:	ldp	x29, x30, [sp], #48
   24bd4:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   24bd8:	mov	x0, x21
   24bdc:	mov	x1, x22
   24be0:	mov	x2, x19
   24be4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24be8:	cbz	w0, 24bbc <PyInit__decimal@@Base+0x1e058>
   24bec:	ldrb	w8, [x21]
   24bf0:	and	w8, w8, #0xfe
   24bf4:	b	24bb8 <PyInit__decimal@@Base+0x1e054>
   24bf8:	stp	x29, x30, [sp, #-48]!
   24bfc:	stp	x22, x21, [sp, #16]
   24c00:	stp	x20, x19, [sp, #32]
   24c04:	mov	x29, sp
   24c08:	ldrb	w8, [x1]
   24c0c:	mov	x19, x3
   24c10:	mov	x20, x2
   24c14:	mov	x22, x1
   24c18:	tst	w8, #0xe
   24c1c:	mov	x21, x0
   24c20:	b.eq	24c50 <PyInit__decimal@@Base+0x1e0ec>  // b.none
   24c24:	mov	x0, x21
   24c28:	mov	x1, x22
   24c2c:	mov	x2, x20
   24c30:	mov	x3, x19
   24c34:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   24c38:	cbz	w0, 24c4c <PyInit__decimal@@Base+0x1e0e8>
   24c3c:	ldp	x20, x19, [sp, #32]
   24c40:	ldp	x22, x21, [sp, #16]
   24c44:	ldp	x29, x30, [sp], #48
   24c48:	ret
   24c4c:	ldrb	w8, [x22]
   24c50:	tst	w8, #0xe
   24c54:	b.ne	24c78 <PyInit__decimal@@Base+0x1e114>  // b.any
   24c58:	ldr	x8, [x22, #40]
   24c5c:	ldr	x9, [x22, #24]
   24c60:	add	x8, x8, x9, lsl #3
   24c64:	ldur	x8, [x8, #-8]
   24c68:	cbnz	x8, 24c78 <PyInit__decimal@@Base+0x1e114>
   24c6c:	ldr	w8, [x20, #36]
   24c70:	cmp	w8, #0x3
   24c74:	b.ne	24ca4 <PyInit__decimal@@Base+0x1e140>  // b.any
   24c78:	mov	x0, x21
   24c7c:	mov	x1, x22
   24c80:	mov	x2, x19
   24c84:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24c88:	mov	x0, x21
   24c8c:	mov	x1, x20
   24c90:	mov	x2, x19
   24c94:	ldp	x20, x19, [sp, #32]
   24c98:	ldp	x22, x21, [sp, #16]
   24c9c:	ldp	x29, x30, [sp], #48
   24ca0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   24ca4:	mov	x0, x21
   24ca8:	mov	x1, x22
   24cac:	mov	x2, x19
   24cb0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   24cb4:	cbz	w0, 24c88 <PyInit__decimal@@Base+0x1e124>
   24cb8:	ldrb	w8, [x21]
   24cbc:	and	w8, w8, #0xfe
   24cc0:	strb	w8, [x21]
   24cc4:	b	24c88 <PyInit__decimal@@Base+0x1e124>
   24cc8:	stp	x29, x30, [sp, #-64]!
   24ccc:	str	x23, [sp, #16]
   24cd0:	stp	x22, x21, [sp, #32]
   24cd4:	stp	x20, x19, [sp, #48]
   24cd8:	mov	x29, sp
   24cdc:	ldrb	w8, [x1]
   24ce0:	mov	x19, x4
   24ce4:	mov	x23, x3
   24ce8:	mov	x20, x2
   24cec:	mov	x22, x1
   24cf0:	tst	w8, #0xe
   24cf4:	mov	x21, x0
   24cf8:	b.ne	24d08 <PyInit__decimal@@Base+0x1e1a4>  // b.any
   24cfc:	ldrb	w8, [x20]
   24d00:	tst	w8, #0xe
   24d04:	b.eq	24d64 <PyInit__decimal@@Base+0x1e200>  // b.none
   24d08:	mov	x0, x21
   24d0c:	mov	x1, x22
   24d10:	mov	x2, x20
   24d14:	mov	x3, x23
   24d18:	mov	x4, x19
   24d1c:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   24d20:	cbz	w0, 24d38 <PyInit__decimal@@Base+0x1e1d4>
   24d24:	ldp	x20, x19, [sp, #48]
   24d28:	ldp	x22, x21, [sp, #32]
   24d2c:	ldr	x23, [sp, #16]
   24d30:	ldp	x29, x30, [sp], #64
   24d34:	ret
   24d38:	ldrb	w8, [x20]
   24d3c:	mov	x0, x21
   24d40:	mov	x1, x22
   24d44:	mov	x2, x20
   24d48:	mov	x4, x19
   24d4c:	ldp	x20, x19, [sp, #48]
   24d50:	ldp	x22, x21, [sp, #32]
   24d54:	ldr	x23, [sp, #16]
   24d58:	and	w3, w8, #0x1
   24d5c:	ldp	x29, x30, [sp], #64
   24d60:	b	24da0 <PyInit__decimal@@Base+0x1e23c>
   24d64:	and	w3, w8, #0x1
   24d68:	mov	x0, x21
   24d6c:	mov	x1, x22
   24d70:	mov	x2, x20
   24d74:	mov	x4, x23
   24d78:	mov	x5, x19
   24d7c:	bl	24ddc <PyInit__decimal@@Base+0x1e278>
   24d80:	mov	x0, x21
   24d84:	mov	x1, x23
   24d88:	mov	x2, x19
   24d8c:	ldp	x20, x19, [sp, #48]
   24d90:	ldp	x22, x21, [sp, #32]
   24d94:	ldr	x23, [sp, #16]
   24d98:	ldp	x29, x30, [sp], #64
   24d9c:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   24da0:	ldrb	w8, [x1]
   24da4:	tbnz	w8, #1, 24db4 <PyInit__decimal@@Base+0x1e250>
   24da8:	mov	w2, #0x2                   	// #2
   24dac:	mov	w1, w3
   24db0:	b	20868 <PyInit__decimal@@Base+0x19d04>
   24db4:	and	w1, w8, #0x1
   24db8:	cmp	w1, w3, uxtb
   24dbc:	b.eq	24dc8 <PyInit__decimal@@Base+0x1e264>  // b.none
   24dc0:	ldrb	w8, [x2]
   24dc4:	tbnz	w8, #1, 24dd0 <PyInit__decimal@@Base+0x1e26c>
   24dc8:	mov	w2, #0x2                   	// #2
   24dcc:	b	20868 <PyInit__decimal@@Base+0x19d04>
   24dd0:	mov	w1, #0x100                 	// #256
   24dd4:	mov	x2, x4
   24dd8:	b	208fc <PyInit__decimal@@Base+0x19d98>
   24ddc:	stp	x29, x30, [sp, #-96]!
   24de0:	stp	x28, x27, [sp, #16]
   24de4:	stp	x26, x25, [sp, #32]
   24de8:	stp	x24, x23, [sp, #48]
   24dec:	stp	x22, x21, [sp, #64]
   24df0:	stp	x20, x19, [sp, #80]
   24df4:	mov	x29, sp
   24df8:	sub	sp, sp, #0x280
   24dfc:	mov	w9, #0x40                  	// #64
   24e00:	stp	xzr, x9, [sp, #96]
   24e04:	mov	w9, #0x1                   	// #1
   24e08:	str	x9, [sp, #64]
   24e0c:	dup	v0.2d, x9
   24e10:	adrp	x9, 31000 <PyInit__decimal@@Base+0x2a49c>
   24e14:	stur	q0, [sp, #40]
   24e18:	ldr	q0, [x9, #2016]
   24e1c:	mov	w8, #0x30                  	// #48
   24e20:	strb	w8, [sp, #72]
   24e24:	add	x8, sp, #0x78
   24e28:	str	x8, [sp, #112]
   24e2c:	mov	w8, #0x90                  	// #144
   24e30:	add	x9, sp, #0x40
   24e34:	stp	xzr, xzr, [sp, #80]
   24e38:	strb	w8, [sp, #16]
   24e3c:	str	x9, [sp, #56]
   24e40:	stur	q0, [sp, #24]
   24e44:	ldr	x8, [x1, #8]
   24e48:	ldr	x9, [x2, #8]
   24e4c:	mov	x21, x5
   24e50:	mov	x25, x4
   24e54:	mov	w20, w3
   24e58:	mov	x24, x2
   24e5c:	mov	x23, x1
   24e60:	cmp	x8, x9
   24e64:	mov	x19, x0
   24e68:	b.ne	24e7c <PyInit__decimal@@Base+0x1e318>  // b.any
   24e6c:	str	x25, [sp, #8]
   24e70:	mov	w22, wzr
   24e74:	mov	x1, x23
   24e78:	b	24f38 <PyInit__decimal@@Base+0x1e3d4>
   24e7c:	cmp	x9, x8
   24e80:	csel	x1, x24, x23, gt
   24e84:	ldr	x8, [x1, #40]
   24e88:	ldr	x9, [x1, #24]
   24e8c:	cset	w22, gt
   24e90:	csel	x24, x23, x24, gt
   24e94:	add	x8, x8, x9, lsl #3
   24e98:	ldur	x8, [x8, #-8]
   24e9c:	cbz	x8, 24f34 <PyInit__decimal@@Base+0x1e3d0>
   24ea0:	ldr	x11, [x25]
   24ea4:	ldp	x9, x8, [x1, #8]
   24ea8:	ldp	x10, x12, [x24, #8]
   24eac:	mvn	x13, x11
   24eb0:	cmp	x8, x11
   24eb4:	add	x8, x8, x13
   24eb8:	csel	x8, xzr, x8, gt
   24ebc:	add	x11, x10, x12
   24ec0:	add	x8, x9, x8
   24ec4:	sub	x8, x8, #0x1
   24ec8:	sub	x11, x11, #0x1
   24ecc:	cmp	x11, x8
   24ed0:	b.ge	24f1c <PyInit__decimal@@Base+0x1e3b8>  // b.tcont
   24ed4:	ldrb	w9, [x24]
   24ed8:	mov	w10, #0x1                   	// #1
   24edc:	dup	v0.2d, x10
   24ee0:	mov	w10, #0x90                  	// #144
   24ee4:	bfxil	w10, w9, #0, #4
   24ee8:	str	x8, [sp, #24]
   24eec:	str	q0, [sp, #32]
   24ef0:	strb	w10, [sp, #16]
   24ef4:	ldr	x9, [x24, #40]
   24ef8:	ldr	x10, [x24, #24]
   24efc:	add	x24, sp, #0x10
   24f00:	add	x9, x9, x10, lsl #3
   24f04:	ldur	x9, [x9, #-8]
   24f08:	mov	x10, x8
   24f0c:	cmp	x9, #0x0
   24f10:	cset	w9, ne  // ne = any
   24f14:	str	x9, [sp, #64]
   24f18:	ldr	x9, [x1, #8]
   24f1c:	sub	x2, x9, x10
   24f20:	add	x0, sp, #0x48
   24f24:	mov	x3, x21
   24f28:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   24f2c:	cbz	w0, 250d0 <PyInit__decimal@@Base+0x1e56c>
   24f30:	add	x1, sp, #0x48
   24f34:	str	x25, [sp, #8]
   24f38:	ldr	x8, [x24, #8]
   24f3c:	adrp	x26, 4c000 <PyInit__decimal@@Base+0x4549c>
   24f40:	str	x8, [x19, #8]
   24f44:	ldr	x8, [x1, #24]
   24f48:	ldr	x9, [x24, #24]
   24f4c:	cmp	x8, x9
   24f50:	csel	x27, x24, x1, lt  // lt = tstop
   24f54:	ldr	x25, [x27, #24]
   24f58:	ldr	x9, [x26, #1352]
   24f5c:	ldr	x8, [x19, #32]
   24f60:	csel	x28, x1, x24, lt  // lt = tstop
   24f64:	cinc	w24, w22, lt  // lt = tstop
   24f68:	cmp	x9, x25
   24f6c:	csel	x1, x25, x9, lt  // lt = tstop
   24f70:	cmp	x1, x8
   24f74:	b.eq	24fac <PyInit__decimal@@Base+0x1e448>  // b.none
   24f78:	ldrb	w9, [x19]
   24f7c:	tbnz	w9, #5, 24f94 <PyInit__decimal@@Base+0x1e430>
   24f80:	mov	x0, x19
   24f84:	mov	x2, x21
   24f88:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   24f8c:	cbnz	w0, 24fac <PyInit__decimal@@Base+0x1e448>
   24f90:	b	252b4 <PyInit__decimal@@Base+0x1e750>
   24f94:	cmp	x1, x8
   24f98:	b.le	24fac <PyInit__decimal@@Base+0x1e448>
   24f9c:	mov	x0, x19
   24fa0:	mov	x2, x21
   24fa4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   24fa8:	cbz	w0, 252b4 <PyInit__decimal@@Base+0x1e750>
   24fac:	ldrb	w8, [x23]
   24fb0:	and	w8, w8, #0x1
   24fb4:	cmp	w8, w20, uxtb
   24fb8:	b.ne	25018 <PyInit__decimal@@Base+0x1e4b4>  // b.any
   24fbc:	ldr	x0, [x19, #40]
   24fc0:	ldr	x1, [x27, #40]
   24fc4:	ldr	x2, [x28, #40]
   24fc8:	ldr	x3, [x27, #24]
   24fcc:	ldr	x4, [x28, #24]
   24fd0:	bl	1aa90 <PyInit__decimal@@Base+0x13f2c>
   24fd4:	cbz	x0, 250c8 <PyInit__decimal@@Base+0x1e564>
   24fd8:	ldr	x23, [x27, #24]
   24fdc:	ldr	x9, [x26, #1352]
   24fe0:	ldr	x8, [x19, #32]
   24fe4:	mov	x22, x0
   24fe8:	add	x25, x23, #0x1
   24fec:	cmp	x9, x25
   24ff0:	csinc	x1, x9, x23, ge  // ge = tcont
   24ff4:	cmp	x1, x8
   24ff8:	b.eq	25170 <PyInit__decimal@@Base+0x1e60c>  // b.none
   24ffc:	ldrb	w9, [x19]
   25000:	tbnz	w9, #5, 25158 <PyInit__decimal@@Base+0x1e5f4>
   25004:	mov	x0, x19
   25008:	mov	x2, x21
   2500c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   25010:	cbnz	w0, 25170 <PyInit__decimal@@Base+0x1e60c>
   25014:	b	252b4 <PyInit__decimal@@Base+0x1e750>
   25018:	ldr	x3, [x27, #24]
   2501c:	ldr	x8, [x28, #24]
   25020:	cmp	x3, x8
   25024:	b.ne	25060 <PyInit__decimal@@Base+0x1e4fc>  // b.any
   25028:	sub	x8, x3, #0x1
   2502c:	tbnz	x8, #63, 25060 <PyInit__decimal@@Base+0x1e4fc>
   25030:	ldr	x9, [x27, #40]
   25034:	ldr	x10, [x28, #40]
   25038:	ldr	x9, [x9, x8, lsl #3]
   2503c:	ldr	x10, [x10, x8, lsl #3]
   25040:	sub	x8, x8, #0x1
   25044:	cmp	x9, x10
   25048:	b.eq	2502c <PyInit__decimal@@Base+0x1e4c8>  // b.none
   2504c:	csel	x8, x28, x27, cc  // cc = lo, ul, last
   25050:	ldr	x3, [x8, #24]
   25054:	csel	x28, x27, x28, cc  // cc = lo, ul, last
   25058:	cinc	w24, w24, cc  // cc = lo, ul, last
   2505c:	mov	x27, x8
   25060:	ldr	x0, [x19, #40]
   25064:	ldr	x1, [x27, #40]
   25068:	ldr	x2, [x28, #40]
   2506c:	ldr	x4, [x28, #24]
   25070:	bl	1acc8 <PyInit__decimal@@Base+0x14164>
   25074:	ldr	x8, [x19, #40]
   25078:	ldr	x9, [x27, #24]
   2507c:	sub	x8, x8, #0x8
   25080:	mov	x25, x9
   25084:	cmp	x9, #0x2
   25088:	b.lt	25098 <PyInit__decimal@@Base+0x1e534>  // b.tstop
   2508c:	ldr	x10, [x8, x25, lsl #3]
   25090:	sub	x9, x25, #0x1
   25094:	cbz	x10, 25080 <PyInit__decimal@@Base+0x1e51c>
   25098:	ldr	x9, [x26, #1352]
   2509c:	ldr	x8, [x19, #32]
   250a0:	cmp	x9, x25
   250a4:	csel	x1, x25, x9, lt  // lt = tstop
   250a8:	cmp	x1, x8
   250ac:	b.eq	250f8 <PyInit__decimal@@Base+0x1e594>  // b.none
   250b0:	ldrb	w9, [x19]
   250b4:	tbnz	w9, #5, 250e4 <PyInit__decimal@@Base+0x1e580>
   250b8:	mov	x0, x19
   250bc:	mov	x2, x21
   250c0:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   250c4:	b	250f8 <PyInit__decimal@@Base+0x1e594>
   250c8:	ldr	x8, [x19, #40]
   250cc:	b	25178 <PyInit__decimal@@Base+0x1e614>
   250d0:	mov	w1, #0x200                 	// #512
   250d4:	mov	x0, x19
   250d8:	mov	x2, x21
   250dc:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   250e0:	b	252b4 <PyInit__decimal@@Base+0x1e750>
   250e4:	cmp	x1, x8
   250e8:	b.le	250f8 <PyInit__decimal@@Base+0x1e594>
   250ec:	mov	x0, x19
   250f0:	mov	x2, x21
   250f4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   250f8:	str	x25, [x19, #24]
   250fc:	tbnz	w24, #0, 25108 <PyInit__decimal@@Base+0x1e5a4>
   25100:	ldrb	w8, [x23]
   25104:	and	w20, w8, #0x1
   25108:	ldrb	w8, [x19]
   2510c:	ldr	x10, [x19, #40]
   25110:	and	w8, w8, #0xfffffff0
   25114:	orr	w9, w8, w20
   25118:	strb	w9, [x19]
   2511c:	add	x8, x10, x25, lsl #3
   25120:	ldur	x8, [x8, #-8]
   25124:	cbnz	x8, 25194 <PyInit__decimal@@Base+0x1e630>
   25128:	and	w8, w9, #0xfe
   2512c:	strb	w8, [x19]
   25130:	ldr	x8, [sp, #8]
   25134:	ldr	w8, [x8, #36]
   25138:	cmp	w8, #0x3
   2513c:	b.ne	25150 <PyInit__decimal@@Base+0x1e5ec>  // b.any
   25140:	mov	x8, xzr
   25144:	orr	w9, w9, #0x1
   25148:	strb	w9, [x19]
   2514c:	b	25194 <PyInit__decimal@@Base+0x1e630>
   25150:	mov	x8, xzr
   25154:	b	25194 <PyInit__decimal@@Base+0x1e630>
   25158:	cmp	x1, x8
   2515c:	b.le	25170 <PyInit__decimal@@Base+0x1e60c>
   25160:	mov	x0, x19
   25164:	mov	x2, x21
   25168:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2516c:	cbz	w0, 252b4 <PyInit__decimal@@Base+0x1e750>
   25170:	ldr	x8, [x19, #40]
   25174:	str	x22, [x8, x23, lsl #3]
   25178:	ldrb	w9, [x19]
   2517c:	str	x25, [x19, #24]
   25180:	add	x8, x8, x25, lsl #3
   25184:	and	w9, w9, #0xf0
   25188:	orr	w9, w9, w20
   2518c:	strb	w9, [x19]
   25190:	ldur	x8, [x8, #-8]
   25194:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   25198:	add	x9, x9, #0xe70
   2519c:	ldr	x10, [x9, #72]
   251a0:	cmp	x10, x8
   251a4:	b.ls	251d0 <PyInit__decimal@@Base+0x1e66c>  // b.plast
   251a8:	ldr	x10, [x9, #32]
   251ac:	cmp	x10, x8
   251b0:	b.ls	251f8 <PyInit__decimal@@Base+0x1e694>  // b.plast
   251b4:	ldr	x10, [x9, #16]
   251b8:	cmp	x10, x8
   251bc:	b.ls	2523c <PyInit__decimal@@Base+0x1e6d8>  // b.plast
   251c0:	ldr	x9, [x9, #8]
   251c4:	cmp	x9, x8
   251c8:	mov	w8, #0x1                   	// #1
   251cc:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   251d0:	ldr	x10, [x9, #112]
   251d4:	cmp	x10, x8
   251d8:	b.ls	25214 <PyInit__decimal@@Base+0x1e6b0>  // b.plast
   251dc:	ldr	x10, [x9, #88]
   251e0:	cmp	x10, x8
   251e4:	b.ls	2524c <PyInit__decimal@@Base+0x1e6e8>  // b.plast
   251e8:	ldr	x9, [x9, #80]
   251ec:	cmp	x9, x8
   251f0:	mov	w8, #0xa                   	// #10
   251f4:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   251f8:	ldr	x10, [x9, #48]
   251fc:	cmp	x10, x8
   25200:	b.ls	25268 <PyInit__decimal@@Base+0x1e704>  // b.plast
   25204:	ldr	x9, [x9, #40]
   25208:	cmp	x9, x8
   2520c:	mov	w8, #0x5                   	// #5
   25210:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   25214:	ldr	x10, [x9, #144]
   25218:	cmp	x10, x8
   2521c:	b.ls	25284 <PyInit__decimal@@Base+0x1e720>  // b.plast
   25220:	ldr	x10, [x9, #128]
   25224:	cmp	x10, x8
   25228:	b.ls	25294 <PyInit__decimal@@Base+0x1e730>  // b.plast
   2522c:	ldr	x9, [x9, #120]
   25230:	cmp	x9, x8
   25234:	mov	w8, #0xf                   	// #15
   25238:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   2523c:	ldr	x9, [x9, #24]
   25240:	cmp	x9, x8
   25244:	mov	w8, #0x3                   	// #3
   25248:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   2524c:	ldr	x10, [x9, #104]
   25250:	cmp	x10, x8
   25254:	b.ls	25308 <PyInit__decimal@@Base+0x1e7a4>  // b.plast
   25258:	ldr	x9, [x9, #96]
   2525c:	cmp	x9, x8
   25260:	mov	w8, #0xc                   	// #12
   25264:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   25268:	ldr	x10, [x9, #64]
   2526c:	cmp	x10, x8
   25270:	b.ls	25310 <PyInit__decimal@@Base+0x1e7ac>  // b.plast
   25274:	ldr	x9, [x9, #56]
   25278:	cmp	x9, x8
   2527c:	mov	w8, #0x7                   	// #7
   25280:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   25284:	ldr	x9, [x9, #152]
   25288:	cmp	x9, x8
   2528c:	mov	w8, #0x13                  	// #19
   25290:	b	252a0 <PyInit__decimal@@Base+0x1e73c>
   25294:	ldr	x9, [x9, #136]
   25298:	cmp	x9, x8
   2529c:	mov	w8, #0x11                  	// #17
   252a0:	cinc	x8, x8, ls  // ls = plast
   252a4:	mov	w9, #0x13                  	// #19
   252a8:	madd	x8, x25, x9, x8
   252ac:	sub	x8, x8, #0x13
   252b0:	str	x8, [x19, #16]
   252b4:	ldrb	w8, [sp, #72]
   252b8:	cmp	w8, #0x1f
   252bc:	b.hi	252d4 <PyInit__decimal@@Base+0x1e770>  // b.pmore
   252c0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   252c4:	ldr	x8, [x8, #1384]
   252c8:	ldr	x0, [sp, #112]
   252cc:	blr	x8
   252d0:	ldrb	w8, [sp, #72]
   252d4:	tbnz	w8, #4, 252e8 <PyInit__decimal@@Base+0x1e784>
   252d8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   252dc:	ldr	x8, [x8, #1384]
   252e0:	add	x0, sp, #0x48
   252e4:	blr	x8
   252e8:	add	sp, sp, #0x280
   252ec:	ldp	x20, x19, [sp, #80]
   252f0:	ldp	x22, x21, [sp, #64]
   252f4:	ldp	x24, x23, [sp, #48]
   252f8:	ldp	x26, x25, [sp, #32]
   252fc:	ldp	x28, x27, [sp, #16]
   25300:	ldp	x29, x30, [sp], #96
   25304:	ret
   25308:	mov	w8, #0xe                   	// #14
   2530c:	b	252a4 <PyInit__decimal@@Base+0x1e740>
   25310:	mov	w8, #0x9                   	// #9
   25314:	b	252a4 <PyInit__decimal@@Base+0x1e740>
   25318:	stp	x29, x30, [sp, #-64]!
   2531c:	str	x23, [sp, #16]
   25320:	stp	x22, x21, [sp, #32]
   25324:	stp	x20, x19, [sp, #48]
   25328:	mov	x29, sp
   2532c:	ldrb	w8, [x1]
   25330:	mov	x19, x4
   25334:	mov	x23, x3
   25338:	mov	x20, x2
   2533c:	mov	x22, x1
   25340:	tst	w8, #0xe
   25344:	mov	x21, x0
   25348:	b.ne	25358 <PyInit__decimal@@Base+0x1e7f4>  // b.any
   2534c:	ldrb	w8, [x20]
   25350:	tst	w8, #0xe
   25354:	b.eq	253b8 <PyInit__decimal@@Base+0x1e854>  // b.none
   25358:	mov	x0, x21
   2535c:	mov	x1, x22
   25360:	mov	x2, x20
   25364:	mov	x3, x23
   25368:	mov	x4, x19
   2536c:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   25370:	cbz	w0, 25388 <PyInit__decimal@@Base+0x1e824>
   25374:	ldp	x20, x19, [sp, #48]
   25378:	ldp	x22, x21, [sp, #32]
   2537c:	ldr	x23, [sp, #16]
   25380:	ldp	x29, x30, [sp], #64
   25384:	ret
   25388:	ldrb	w8, [x20]
   2538c:	mov	x0, x21
   25390:	mov	x1, x22
   25394:	mov	x2, x20
   25398:	mov	x4, x19
   2539c:	ldp	x20, x19, [sp, #48]
   253a0:	ldp	x22, x21, [sp, #32]
   253a4:	ldr	x23, [sp, #16]
   253a8:	mvn	w8, w8
   253ac:	and	w3, w8, #0x1
   253b0:	ldp	x29, x30, [sp], #64
   253b4:	b	24da0 <PyInit__decimal@@Base+0x1e23c>
   253b8:	mvn	w8, w8
   253bc:	and	w3, w8, #0x1
   253c0:	mov	x0, x21
   253c4:	mov	x1, x22
   253c8:	mov	x2, x20
   253cc:	mov	x4, x23
   253d0:	mov	x5, x19
   253d4:	bl	24ddc <PyInit__decimal@@Base+0x1e278>
   253d8:	mov	x0, x21
   253dc:	mov	x1, x23
   253e0:	mov	x2, x19
   253e4:	ldp	x20, x19, [sp, #48]
   253e8:	ldp	x22, x21, [sp, #32]
   253ec:	ldr	x23, [sp, #16]
   253f0:	ldp	x29, x30, [sp], #64
   253f4:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   253f8:	stp	x29, x30, [sp, #-64]!
   253fc:	stp	x28, x23, [sp, #16]
   25400:	stp	x22, x21, [sp, #32]
   25404:	stp	x20, x19, [sp, #48]
   25408:	mov	x29, sp
   2540c:	sub	sp, sp, #0x260
   25410:	mov	x23, x0
   25414:	mov	w8, #0x30                  	// #48
   25418:	mov	w9, #0x40                  	// #64
   2541c:	add	x10, sp, #0x30
   25420:	sub	x0, x29, #0x30
   25424:	mov	x19, x4
   25428:	mov	x20, x3
   2542c:	mov	x21, x2
   25430:	mov	x22, x1
   25434:	stp	xzr, xzr, [sp, #8]
   25438:	strb	w8, [sp]
   2543c:	stp	xzr, x9, [sp, #24]
   25440:	str	x10, [sp, #40]
   25444:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   25448:	cmp	x21, #0x0
   2544c:	cneg	x2, x21, mi  // mi = first
   25450:	lsr	x1, x21, #63
   25454:	mov	x0, sp
   25458:	mov	x3, xzr
   2545c:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   25460:	mov	x0, sp
   25464:	sub	x1, x29, #0x30
   25468:	mov	x2, x19
   2546c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   25470:	mov	x2, sp
   25474:	mov	x0, x23
   25478:	mov	x1, x22
   2547c:	mov	x3, x20
   25480:	mov	x4, x19
   25484:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   25488:	ldrb	w8, [sp]
   2548c:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   25490:	cmp	w8, #0x1f
   25494:	b.hi	254a8 <PyInit__decimal@@Base+0x1e944>  // b.pmore
   25498:	ldr	x8, [x19, #1384]
   2549c:	ldr	x0, [sp, #40]
   254a0:	blr	x8
   254a4:	ldrb	w8, [sp]
   254a8:	tbnz	w8, #4, 254b8 <PyInit__decimal@@Base+0x1e954>
   254ac:	ldr	x8, [x19, #1384]
   254b0:	mov	x0, sp
   254b4:	blr	x8
   254b8:	add	sp, sp, #0x260
   254bc:	ldp	x20, x19, [sp, #48]
   254c0:	ldp	x22, x21, [sp, #32]
   254c4:	ldp	x28, x23, [sp, #16]
   254c8:	ldp	x29, x30, [sp], #64
   254cc:	ret
   254d0:	stp	x29, x30, [sp, #-64]!
   254d4:	stp	x28, x23, [sp, #16]
   254d8:	stp	x22, x21, [sp, #32]
   254dc:	stp	x20, x19, [sp, #48]
   254e0:	mov	x29, sp
   254e4:	sub	sp, sp, #0x260
   254e8:	mov	x23, x0
   254ec:	mov	w8, #0x30                  	// #48
   254f0:	mov	w9, #0x40                  	// #64
   254f4:	add	x10, sp, #0x30
   254f8:	sub	x0, x29, #0x30
   254fc:	mov	x19, x4
   25500:	mov	x20, x3
   25504:	mov	x21, x2
   25508:	mov	x22, x1
   2550c:	stp	xzr, xzr, [sp, #8]
   25510:	strb	w8, [sp]
   25514:	stp	xzr, x9, [sp, #24]
   25518:	str	x10, [sp, #40]
   2551c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   25520:	mov	x0, sp
   25524:	mov	w1, wzr
   25528:	mov	x2, x21
   2552c:	mov	x3, xzr
   25530:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   25534:	mov	x0, sp
   25538:	sub	x1, x29, #0x30
   2553c:	mov	x2, x19
   25540:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   25544:	mov	x2, sp
   25548:	mov	x0, x23
   2554c:	mov	x1, x22
   25550:	mov	x3, x20
   25554:	mov	x4, x19
   25558:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   2555c:	ldrb	w8, [sp]
   25560:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   25564:	cmp	w8, #0x1f
   25568:	b.hi	2557c <PyInit__decimal@@Base+0x1ea18>  // b.pmore
   2556c:	ldr	x8, [x19, #1384]
   25570:	ldr	x0, [sp, #40]
   25574:	blr	x8
   25578:	ldrb	w8, [sp]
   2557c:	tbnz	w8, #4, 2558c <PyInit__decimal@@Base+0x1ea28>
   25580:	ldr	x8, [x19, #1384]
   25584:	mov	x0, sp
   25588:	blr	x8
   2558c:	add	sp, sp, #0x260
   25590:	ldp	x20, x19, [sp, #48]
   25594:	ldp	x22, x21, [sp, #32]
   25598:	ldp	x28, x23, [sp, #16]
   2559c:	ldp	x29, x30, [sp], #64
   255a0:	ret
   255a4:	stp	x29, x30, [sp, #-64]!
   255a8:	stp	x28, x23, [sp, #16]
   255ac:	stp	x22, x21, [sp, #32]
   255b0:	stp	x20, x19, [sp, #48]
   255b4:	mov	x29, sp
   255b8:	sub	sp, sp, #0x260
   255bc:	mov	x23, x0
   255c0:	mov	w8, #0x30                  	// #48
   255c4:	mov	w9, #0x40                  	// #64
   255c8:	add	x10, sp, #0x30
   255cc:	sub	x0, x29, #0x30
   255d0:	mov	x19, x4
   255d4:	mov	x20, x3
   255d8:	mov	x21, x2
   255dc:	mov	x22, x1
   255e0:	stp	xzr, xzr, [sp, #8]
   255e4:	strb	w8, [sp]
   255e8:	stp	xzr, x9, [sp, #24]
   255ec:	str	x10, [sp, #40]
   255f0:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   255f4:	cmp	x21, #0x0
   255f8:	cneg	x2, x21, mi  // mi = first
   255fc:	lsr	x1, x21, #63
   25600:	mov	x0, sp
   25604:	mov	x3, xzr
   25608:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   2560c:	mov	x0, sp
   25610:	sub	x1, x29, #0x30
   25614:	mov	x2, x19
   25618:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2561c:	mov	x2, sp
   25620:	mov	x0, x23
   25624:	mov	x1, x22
   25628:	mov	x3, x20
   2562c:	mov	x4, x19
   25630:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   25634:	ldrb	w8, [sp]
   25638:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   2563c:	cmp	w8, #0x1f
   25640:	b.hi	25654 <PyInit__decimal@@Base+0x1eaf0>  // b.pmore
   25644:	ldr	x8, [x19, #1384]
   25648:	ldr	x0, [sp, #40]
   2564c:	blr	x8
   25650:	ldrb	w8, [sp]
   25654:	tbnz	w8, #4, 25664 <PyInit__decimal@@Base+0x1eb00>
   25658:	ldr	x8, [x19, #1384]
   2565c:	mov	x0, sp
   25660:	blr	x8
   25664:	add	sp, sp, #0x260
   25668:	ldp	x20, x19, [sp, #48]
   2566c:	ldp	x22, x21, [sp, #32]
   25670:	ldp	x28, x23, [sp, #16]
   25674:	ldp	x29, x30, [sp], #64
   25678:	ret
   2567c:	stp	x29, x30, [sp, #-64]!
   25680:	stp	x28, x23, [sp, #16]
   25684:	stp	x22, x21, [sp, #32]
   25688:	stp	x20, x19, [sp, #48]
   2568c:	mov	x29, sp
   25690:	sub	sp, sp, #0x260
   25694:	mov	x23, x0
   25698:	mov	w8, #0x30                  	// #48
   2569c:	mov	w9, #0x40                  	// #64
   256a0:	add	x10, sp, #0x30
   256a4:	sub	x0, x29, #0x30
   256a8:	mov	x19, x4
   256ac:	mov	x20, x3
   256b0:	mov	x21, x2
   256b4:	mov	x22, x1
   256b8:	stp	xzr, xzr, [sp, #8]
   256bc:	strb	w8, [sp]
   256c0:	stp	xzr, x9, [sp, #24]
   256c4:	str	x10, [sp, #40]
   256c8:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   256cc:	mov	x0, sp
   256d0:	mov	w1, wzr
   256d4:	mov	x2, x21
   256d8:	mov	x3, xzr
   256dc:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   256e0:	mov	x0, sp
   256e4:	sub	x1, x29, #0x30
   256e8:	mov	x2, x19
   256ec:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   256f0:	mov	x2, sp
   256f4:	mov	x0, x23
   256f8:	mov	x1, x22
   256fc:	mov	x3, x20
   25700:	mov	x4, x19
   25704:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   25708:	ldrb	w8, [sp]
   2570c:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   25710:	cmp	w8, #0x1f
   25714:	b.hi	25728 <PyInit__decimal@@Base+0x1ebc4>  // b.pmore
   25718:	ldr	x8, [x19, #1384]
   2571c:	ldr	x0, [sp, #40]
   25720:	blr	x8
   25724:	ldrb	w8, [sp]
   25728:	tbnz	w8, #4, 25738 <PyInit__decimal@@Base+0x1ebd4>
   2572c:	ldr	x8, [x19, #1384]
   25730:	mov	x0, sp
   25734:	blr	x8
   25738:	add	sp, sp, #0x260
   2573c:	ldp	x20, x19, [sp, #48]
   25740:	ldp	x22, x21, [sp, #32]
   25744:	ldp	x28, x23, [sp, #16]
   25748:	ldp	x29, x30, [sp], #64
   2574c:	ret
   25750:	sxtw	x2, w2
   25754:	b	253f8 <PyInit__decimal@@Base+0x1e894>
   25758:	mov	w2, w2
   2575c:	b	254d0 <PyInit__decimal@@Base+0x1e96c>
   25760:	b	253f8 <PyInit__decimal@@Base+0x1e894>
   25764:	b	254d0 <PyInit__decimal@@Base+0x1e96c>
   25768:	sxtw	x2, w2
   2576c:	b	255a4 <PyInit__decimal@@Base+0x1ea40>
   25770:	mov	w2, w2
   25774:	b	2567c <PyInit__decimal@@Base+0x1eb18>
   25778:	b	255a4 <PyInit__decimal@@Base+0x1ea40>
   2577c:	b	2567c <PyInit__decimal@@Base+0x1eb18>
   25780:	mov	x8, x0
   25784:	mov	x5, x4
   25788:	mov	x4, x3
   2578c:	mov	x3, x2
   25790:	mov	w0, #0x1                   	// #1
   25794:	mov	x2, x1
   25798:	mov	x1, x8
   2579c:	b	257a0 <PyInit__decimal@@Base+0x1ec3c>
   257a0:	stp	x29, x30, [sp, #-96]!
   257a4:	stp	x28, x27, [sp, #16]
   257a8:	stp	x26, x25, [sp, #32]
   257ac:	stp	x24, x23, [sp, #48]
   257b0:	stp	x22, x21, [sp, #64]
   257b4:	stp	x20, x19, [sp, #80]
   257b8:	mov	x29, sp
   257bc:	sub	sp, sp, #0x480
   257c0:	mov	w8, #0x30                  	// #48
   257c4:	mov	w9, #0x40                  	// #64
   257c8:	add	x10, sp, #0x278
   257cc:	str	xzr, [sp, #600]
   257d0:	str	xzr, [sp, #592]
   257d4:	strb	w8, [sp, #584]
   257d8:	str	xzr, [sp, #608]
   257dc:	str	x9, [sp, #616]
   257e0:	str	x10, [sp, #624]
   257e4:	ldrb	w8, [x2]
   257e8:	ldrb	w9, [x3]
   257ec:	mov	x19, x5
   257f0:	mov	x21, x4
   257f4:	mov	x24, x3
   257f8:	orr	w10, w8, w9
   257fc:	mov	x26, x2
   25800:	mov	x20, x1
   25804:	tst	w10, #0xe
   25808:	b.eq	25864 <PyInit__decimal@@Base+0x1ed00>  // b.none
   2580c:	mov	x0, x20
   25810:	mov	x1, x26
   25814:	mov	x2, x24
   25818:	mov	x3, x21
   2581c:	mov	x4, x19
   25820:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   25824:	cbnz	w0, 25d94 <PyInit__decimal@@Base+0x1f230>
   25828:	ldrb	w8, [x26]
   2582c:	ldrb	w9, [x24]
   25830:	tbnz	w8, #1, 25904 <PyInit__decimal@@Base+0x1eda0>
   25834:	ldr	x10, [x21, #16]
   25838:	ldr	x11, [x21]
   2583c:	eor	w8, w9, w8
   25840:	and	w1, w8, #0x1
   25844:	mov	x0, x20
   25848:	sub	x8, x10, x11
   2584c:	add	x3, x8, #0x1
   25850:	mov	x2, xzr
   25854:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   25858:	ldr	w8, [x19]
   2585c:	orr	w8, w8, #0x1
   25860:	b	258fc <PyInit__decimal@@Base+0x1ed98>
   25864:	ldr	x10, [x24, #40]
   25868:	ldr	x11, [x24, #24]
   2586c:	ldr	x12, [x26, #40]
   25870:	ldr	x13, [x26, #24]
   25874:	and	w27, w8, #0x1
   25878:	add	x10, x10, x11, lsl #3
   2587c:	ldur	x11, [x10, #-8]
   25880:	add	x10, x12, x13, lsl #3
   25884:	ldur	x10, [x10, #-8]
   25888:	and	w28, w9, #0x1
   2588c:	cbz	x11, 258e0 <PyInit__decimal@@Base+0x1ed7c>
   25890:	cbz	x10, 25920 <PyInit__decimal@@Base+0x1edbc>
   25894:	ldp	x12, x8, [x24, #8]
   25898:	ldp	x11, x9, [x26, #8]
   2589c:	ldr	x10, [x21]
   258a0:	mov	w22, w0
   258a4:	sub	x8, x8, x9
   258a8:	add	x8, x8, x10
   258ac:	add	x23, x8, #0x1
   258b0:	cmp	x23, #0x1
   258b4:	mvn	x25, x8
   258b8:	stp	x12, x11, [sp, #8]
   258bc:	b.lt	25948 <PyInit__decimal@@Base+0x1ede4>  // b.tstop
   258c0:	add	x0, sp, #0x248
   258c4:	mov	x1, x26
   258c8:	mov	x2, x23
   258cc:	mov	x3, x19
   258d0:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   258d4:	add	x26, sp, #0x248
   258d8:	cbnz	w0, 25968 <PyInit__decimal@@Base+0x1ee04>
   258dc:	b	25ae0 <PyInit__decimal@@Base+0x1ef7c>
   258e0:	cbz	x10, 259d8 <PyInit__decimal@@Base+0x1ee74>
   258e4:	eor	w1, w28, w27
   258e8:	mov	w2, #0x2                   	// #2
   258ec:	mov	x0, x20
   258f0:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   258f4:	ldr	w8, [x19]
   258f8:	orr	w8, w8, #0x4
   258fc:	str	w8, [x19]
   25900:	b	25d94 <PyInit__decimal@@Base+0x1f230>
   25904:	tbnz	w9, #1, 25940 <PyInit__decimal@@Base+0x1eddc>
   25908:	eor	w8, w9, w8
   2590c:	and	w1, w8, #0x1
   25910:	mov	w2, #0x2                   	// #2
   25914:	mov	x0, x20
   25918:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2591c:	b	25d94 <PyInit__decimal@@Base+0x1f230>
   25920:	ldr	x8, [x26, #8]
   25924:	ldr	x9, [x24, #8]
   25928:	eor	w1, w28, w27
   2592c:	mov	x0, x20
   25930:	mov	x2, xzr
   25934:	sub	x3, x8, x9
   25938:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2593c:	b	25d84 <PyInit__decimal@@Base+0x1f220>
   25940:	mov	w1, #0x100                 	// #256
   25944:	b	259dc <PyInit__decimal@@Base+0x1ee78>
   25948:	tbz	x23, #63, 25968 <PyInit__decimal@@Base+0x1ee04>
   2594c:	add	x0, sp, #0x248
   25950:	mov	x1, x24
   25954:	mov	x2, x25
   25958:	mov	x3, x19
   2595c:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   25960:	add	x24, sp, #0x248
   25964:	cbz	w0, 25ae0 <PyInit__decimal@@Base+0x1ef7c>
   25968:	ldr	x9, [x26, #24]
   2596c:	ldr	x5, [x24, #24]
   25970:	cmp	x24, x20
   25974:	str	x25, [sp]
   25978:	cset	w8, eq  // eq = none
   2597c:	sub	x9, x9, x5
   25980:	cmp	x26, x20
   25984:	add	x25, x9, #0x1
   25988:	cset	w9, eq  // eq = none
   2598c:	cmp	x25, x5
   25990:	cset	w10, gt
   25994:	and	w10, w8, w10
   25998:	adrp	x11, 4c000 <PyInit__decimal@@Base+0x4549c>
   2599c:	tbnz	w10, #0, 259a8 <PyInit__decimal@@Base+0x1ee44>
   259a0:	orr	w8, w8, w9
   259a4:	cbnz	w8, 25a08 <PyInit__decimal@@Base+0x1eea4>
   259a8:	ldr	x9, [x11, #1352]
   259ac:	ldr	x8, [x20, #32]
   259b0:	cmp	x9, x25
   259b4:	csel	x1, x25, x9, lt  // lt = tstop
   259b8:	cmp	x1, x8
   259bc:	b.eq	25a08 <PyInit__decimal@@Base+0x1eea4>  // b.none
   259c0:	ldrb	w9, [x20]
   259c4:	tbnz	w9, #5, 259ec <PyInit__decimal@@Base+0x1ee88>
   259c8:	mov	x0, x20
   259cc:	mov	x2, x19
   259d0:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   259d4:	b	25a00 <PyInit__decimal@@Base+0x1ee9c>
   259d8:	mov	w1, #0x10                  	// #16
   259dc:	mov	x0, x20
   259e0:	mov	x2, x19
   259e4:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   259e8:	b	25d94 <PyInit__decimal@@Base+0x1f230>
   259ec:	cmp	x1, x8
   259f0:	b.le	25a08 <PyInit__decimal@@Base+0x1eea4>
   259f4:	mov	x0, x20
   259f8:	mov	x2, x19
   259fc:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   25a00:	cbz	w0, 25ae0 <PyInit__decimal@@Base+0x1ef7c>
   25a04:	ldr	x5, [x24, #24]
   25a08:	cmp	x5, #0x1
   25a0c:	b.ne	25a2c <PyInit__decimal@@Base+0x1eec8>  // b.any
   25a10:	ldr	x8, [x24, #40]
   25a14:	ldr	x0, [x20, #40]
   25a18:	ldr	x1, [x26, #40]
   25a1c:	ldr	x2, [x26, #24]
   25a20:	ldr	x3, [x8]
   25a24:	bl	1af58 <PyInit__decimal@@Base+0x143f4>
   25a28:	b	25a54 <PyInit__decimal@@Base+0x1eef0>
   25a2c:	cmp	x5, #0x400
   25a30:	b.gt	25af4 <PyInit__decimal@@Base+0x1ef90>
   25a34:	ldr	x0, [x20, #40]
   25a38:	ldr	x2, [x26, #40]
   25a3c:	ldr	x3, [x24, #40]
   25a40:	ldr	x4, [x26, #24]
   25a44:	mov	x1, xzr
   25a48:	bl	1aff0 <PyInit__decimal@@Base+0x1448c>
   25a4c:	tbnz	w0, #31, 25ae0 <PyInit__decimal@@Base+0x1ef7c>
   25a50:	mov	w0, w0
   25a54:	ldp	x9, x8, [sp, #8]
   25a58:	ldr	x11, [sp]
   25a5c:	adrp	x13, 4c000 <PyInit__decimal@@Base+0x4549c>
   25a60:	sub	x10, x8, x9
   25a64:	ldr	x8, [x20, #40]
   25a68:	add	x12, x10, x11
   25a6c:	mov	w10, #0x13                  	// #19
   25a70:	mul	x10, x25, x10
   25a74:	sub	x9, x25, #0x1
   25a78:	sub	x10, x10, #0x13
   25a7c:	add	x24, x9, #0x1
   25a80:	mov	x25, x9
   25a84:	cmp	x24, #0x2
   25a88:	mov	x26, x10
   25a8c:	b.lt	25aa0 <PyInit__decimal@@Base+0x1ef3c>  // b.tstop
   25a90:	ldr	x11, [x8, x25, lsl #3]
   25a94:	sub	x9, x25, #0x1
   25a98:	sub	x10, x26, #0x13
   25a9c:	cbz	x11, 25a7c <PyInit__decimal@@Base+0x1ef18>
   25aa0:	ldr	x9, [x13, #1352]
   25aa4:	ldr	x8, [x20, #32]
   25aa8:	cmp	x9, x24
   25aac:	csinc	x1, x9, x25, ge  // ge = tcont
   25ab0:	cmp	x1, x8
   25ab4:	b.eq	25ba4 <PyInit__decimal@@Base+0x1f040>  // b.none
   25ab8:	ldrb	w9, [x20]
   25abc:	tbnz	w9, #5, 25b88 <PyInit__decimal@@Base+0x1f024>
   25ac0:	stp	x23, x0, [sp, #8]
   25ac4:	mov	x0, x20
   25ac8:	mov	x2, x19
   25acc:	mov	x23, x12
   25ad0:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   25ad4:	mov	x12, x23
   25ad8:	ldp	x23, x0, [sp, #8]
   25adc:	b	25ba4 <PyInit__decimal@@Base+0x1f040>
   25ae0:	mov	w1, #0x200                 	// #512
   25ae4:	mov	x0, x20
   25ae8:	mov	x2, x19
   25aec:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   25af0:	b	25d50 <PyInit__decimal@@Base+0x1f1ec>
   25af4:	mov	w8, #0x30                  	// #48
   25af8:	mov	w9, #0x40                  	// #64
   25afc:	add	x10, sp, #0x48
   25b00:	add	x1, sp, #0x18
   25b04:	mov	x0, x20
   25b08:	mov	x2, x26
   25b0c:	mov	x3, x24
   25b10:	mov	x4, x19
   25b14:	stp	xzr, xzr, [sp, #32]
   25b18:	strb	w8, [sp, #24]
   25b1c:	stp	xzr, x9, [sp, #48]
   25b20:	str	x10, [sp, #64]
   25b24:	bl	2ecc4 <PyInit__decimal@@Base+0x28160>
   25b28:	ldrb	w8, [x20]
   25b2c:	tst	w8, #0xe
   25b30:	b.ne	25b40 <PyInit__decimal@@Base+0x1efdc>  // b.any
   25b34:	ldrb	w8, [sp, #24]
   25b38:	tst	w8, #0xe
   25b3c:	b.eq	25dc4 <PyInit__decimal@@Base+0x1f260>  // b.none
   25b40:	mov	w2, #0x4                   	// #4
   25b44:	mov	x0, x20
   25b48:	mov	w1, wzr
   25b4c:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25b50:	ldrb	w8, [sp, #24]
   25b54:	cmp	w8, #0x1f
   25b58:	b.hi	25b70 <PyInit__decimal@@Base+0x1f00c>  // b.pmore
   25b5c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25b60:	ldr	x8, [x8, #1384]
   25b64:	ldr	x0, [sp, #64]
   25b68:	blr	x8
   25b6c:	ldrb	w8, [sp, #24]
   25b70:	tbnz	w8, #4, 25d50 <PyInit__decimal@@Base+0x1f1ec>
   25b74:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25b78:	ldr	x8, [x8, #1384]
   25b7c:	add	x0, sp, #0x18
   25b80:	blr	x8
   25b84:	b	25d50 <PyInit__decimal@@Base+0x1f1ec>
   25b88:	cmp	x1, x8
   25b8c:	b.le	25ba4 <PyInit__decimal@@Base+0x1f040>
   25b90:	stp	x12, x0, [sp, #8]
   25b94:	mov	x0, x20
   25b98:	mov	x2, x19
   25b9c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   25ba0:	ldp	x12, x0, [sp, #8]
   25ba4:	ldrb	w11, [x20]
   25ba8:	ldr	x8, [x20, #40]
   25bac:	eor	w9, w28, w27
   25bb0:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   25bb4:	and	w11, w11, #0xf0
   25bb8:	orr	w9, w11, w9
   25bbc:	str	x24, [x20, #24]
   25bc0:	add	x10, x10, #0xe70
   25bc4:	strb	w9, [x20]
   25bc8:	ldr	x9, [x8, x25, lsl #3]
   25bcc:	ldr	x11, [x10, #72]
   25bd0:	cmp	x11, x9
   25bd4:	b.ls	25c00 <PyInit__decimal@@Base+0x1f09c>  // b.plast
   25bd8:	ldr	x11, [x10, #32]
   25bdc:	cmp	x11, x9
   25be0:	b.ls	25c28 <PyInit__decimal@@Base+0x1f0c4>  // b.plast
   25be4:	ldr	x11, [x10, #16]
   25be8:	cmp	x11, x9
   25bec:	b.ls	25c6c <PyInit__decimal@@Base+0x1f108>  // b.plast
   25bf0:	ldr	x10, [x10, #8]
   25bf4:	cmp	x10, x9
   25bf8:	mov	w9, #0x1                   	// #1
   25bfc:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c00:	ldr	x11, [x10, #112]
   25c04:	cmp	x11, x9
   25c08:	b.ls	25c44 <PyInit__decimal@@Base+0x1f0e0>  // b.plast
   25c0c:	ldr	x11, [x10, #88]
   25c10:	cmp	x11, x9
   25c14:	b.ls	25c7c <PyInit__decimal@@Base+0x1f118>  // b.plast
   25c18:	ldr	x10, [x10, #80]
   25c1c:	cmp	x10, x9
   25c20:	mov	w9, #0xa                   	// #10
   25c24:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c28:	ldr	x11, [x10, #48]
   25c2c:	cmp	x11, x9
   25c30:	b.ls	25c98 <PyInit__decimal@@Base+0x1f134>  // b.plast
   25c34:	ldr	x10, [x10, #40]
   25c38:	cmp	x10, x9
   25c3c:	mov	w9, #0x5                   	// #5
   25c40:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c44:	ldr	x11, [x10, #144]
   25c48:	cmp	x11, x9
   25c4c:	b.ls	25cb4 <PyInit__decimal@@Base+0x1f150>  // b.plast
   25c50:	ldr	x11, [x10, #128]
   25c54:	cmp	x11, x9
   25c58:	b.ls	25cc4 <PyInit__decimal@@Base+0x1f160>  // b.plast
   25c5c:	ldr	x10, [x10, #120]
   25c60:	cmp	x10, x9
   25c64:	mov	w9, #0xf                   	// #15
   25c68:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c6c:	ldr	x10, [x10, #24]
   25c70:	cmp	x10, x9
   25c74:	mov	w9, #0x3                   	// #3
   25c78:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c7c:	ldr	x11, [x10, #104]
   25c80:	cmp	x11, x9
   25c84:	b.ls	25db4 <PyInit__decimal@@Base+0x1f250>  // b.plast
   25c88:	ldr	x10, [x10, #96]
   25c8c:	cmp	x10, x9
   25c90:	mov	w9, #0xc                   	// #12
   25c94:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25c98:	ldr	x11, [x10, #64]
   25c9c:	cmp	x11, x9
   25ca0:	b.ls	25dbc <PyInit__decimal@@Base+0x1f258>  // b.plast
   25ca4:	ldr	x10, [x10, #56]
   25ca8:	cmp	x10, x9
   25cac:	mov	w9, #0x7                   	// #7
   25cb0:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25cb4:	ldr	x10, [x10, #152]
   25cb8:	cmp	x10, x9
   25cbc:	mov	w9, #0x13                  	// #19
   25cc0:	b	25cd0 <PyInit__decimal@@Base+0x1f16c>
   25cc4:	ldr	x10, [x10, #136]
   25cc8:	cmp	x10, x9
   25ccc:	mov	w9, #0x11                  	// #17
   25cd0:	cinc	x9, x9, ls  // ls = plast
   25cd4:	add	x9, x9, x26
   25cd8:	str	x9, [x20, #16]
   25cdc:	cbz	x0, 25d14 <PyInit__decimal@@Base+0x1f1b0>
   25ce0:	ldr	x9, [x8]
   25ce4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   25ce8:	movk	x10, #0xcccd
   25cec:	mov	w11, #0xa                   	// #10
   25cf0:	umulh	x10, x9, x10
   25cf4:	lsr	x10, x10, #3
   25cf8:	msub	x10, x10, x11, x9
   25cfc:	cmp	x10, #0x5
   25d00:	b.eq	25d08 <PyInit__decimal@@Base+0x1f1a4>  // b.none
   25d04:	cbnz	x10, 25d4c <PyInit__decimal@@Base+0x1f1e8>
   25d08:	add	x9, x9, #0x1
   25d0c:	str	x9, [x8]
   25d10:	b	25d4c <PyInit__decimal@@Base+0x1f1e8>
   25d14:	cmp	w22, #0x1
   25d18:	b.ne	25d4c <PyInit__decimal@@Base+0x1f1e8>  // b.any
   25d1c:	cmp	x23, #0x1
   25d20:	b.lt	25d4c <PyInit__decimal@@Base+0x1f1e8>  // b.tstop
   25d24:	mov	x0, x20
   25d28:	mov	x24, x12
   25d2c:	bl	206e8 <PyInit__decimal@@Base+0x19b84>
   25d30:	cmp	x0, x23
   25d34:	csel	x22, x23, x0, gt
   25d38:	mov	x0, x20
   25d3c:	mov	x1, x22
   25d40:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   25d44:	mov	x12, x24
   25d48:	add	x12, x22, x24
   25d4c:	str	x12, [x20, #8]
   25d50:	ldrb	w8, [sp, #584]
   25d54:	cmp	w8, #0x1f
   25d58:	b.hi	25d70 <PyInit__decimal@@Base+0x1f20c>  // b.pmore
   25d5c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25d60:	ldr	x8, [x8, #1384]
   25d64:	ldr	x0, [sp, #624]
   25d68:	blr	x8
   25d6c:	ldrb	w8, [sp, #584]
   25d70:	tbnz	w8, #4, 25d84 <PyInit__decimal@@Base+0x1f220>
   25d74:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25d78:	ldr	x8, [x8, #1384]
   25d7c:	add	x0, sp, #0x248
   25d80:	blr	x8
   25d84:	mov	x0, x20
   25d88:	mov	x1, x21
   25d8c:	mov	x2, x19
   25d90:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   25d94:	add	sp, sp, #0x480
   25d98:	ldp	x20, x19, [sp, #80]
   25d9c:	ldp	x22, x21, [sp, #64]
   25da0:	ldp	x24, x23, [sp, #48]
   25da4:	ldp	x26, x25, [sp, #32]
   25da8:	ldp	x28, x27, [sp, #16]
   25dac:	ldp	x29, x30, [sp], #96
   25db0:	ret
   25db4:	mov	w9, #0xe                   	// #14
   25db8:	b	25cd4 <PyInit__decimal@@Base+0x1f170>
   25dbc:	mov	w9, #0x9                   	// #9
   25dc0:	b	25cd4 <PyInit__decimal@@Base+0x1f170>
   25dc4:	ldr	x0, [sp, #64]
   25dc8:	ldr	x9, [sp, #48]
   25dcc:	add	x9, x0, x9, lsl #3
   25dd0:	ldur	x9, [x9, #-8]
   25dd4:	cmp	x9, #0x0
   25dd8:	cset	w24, ne  // ne = any
   25ddc:	cmp	w8, #0x1f
   25de0:	b.hi	25df4 <PyInit__decimal@@Base+0x1f290>  // b.pmore
   25de4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25de8:	ldr	x8, [x8, #1384]
   25dec:	blr	x8
   25df0:	ldrb	w8, [sp, #24]
   25df4:	tbnz	w8, #4, 25e08 <PyInit__decimal@@Base+0x1f2a4>
   25df8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   25dfc:	ldr	x8, [x8, #1384]
   25e00:	add	x0, sp, #0x18
   25e04:	blr	x8
   25e08:	ldr	x25, [x20, #24]
   25e0c:	mov	x0, x24
   25e10:	b	25a54 <PyInit__decimal@@Base+0x1eef0>
   25e14:	stp	x29, x30, [sp, #-80]!
   25e18:	str	x25, [sp, #16]
   25e1c:	stp	x24, x23, [sp, #32]
   25e20:	stp	x22, x21, [sp, #48]
   25e24:	stp	x20, x19, [sp, #64]
   25e28:	mov	x29, sp
   25e2c:	ldrb	w8, [x2]
   25e30:	ldrb	w9, [x3]
   25e34:	mov	x19, x5
   25e38:	mov	x22, x4
   25e3c:	mov	x25, x3
   25e40:	eor	w10, w9, w8
   25e44:	orr	w8, w8, w9
   25e48:	mov	x24, x2
   25e4c:	mov	x20, x1
   25e50:	mov	x21, x0
   25e54:	tst	w8, #0xe
   25e58:	and	w23, w10, #0x1
   25e5c:	b.eq	25ea0 <PyInit__decimal@@Base+0x1f33c>  // b.none
   25e60:	mov	x0, x21
   25e64:	mov	x1, x24
   25e68:	mov	x2, x25
   25e6c:	mov	x3, x22
   25e70:	mov	x4, x19
   25e74:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   25e78:	cbz	w0, 25f04 <PyInit__decimal@@Base+0x1f3a0>
   25e7c:	mov	x0, x20
   25e80:	mov	x1, x21
   25e84:	mov	x2, x19
   25e88:	ldp	x20, x19, [sp, #64]
   25e8c:	ldp	x22, x21, [sp, #48]
   25e90:	ldp	x24, x23, [sp, #32]
   25e94:	ldr	x25, [sp, #16]
   25e98:	ldp	x29, x30, [sp], #80
   25e9c:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   25ea0:	ldr	x8, [x25, #40]
   25ea4:	ldr	x9, [x25, #24]
   25ea8:	add	x8, x8, x9, lsl #3
   25eac:	ldur	x8, [x8, #-8]
   25eb0:	cbz	x8, 25f60 <PyInit__decimal@@Base+0x1f3fc>
   25eb4:	mov	x0, x21
   25eb8:	mov	x1, x20
   25ebc:	mov	x2, x24
   25ec0:	mov	x3, x25
   25ec4:	mov	x4, x22
   25ec8:	mov	x5, x19
   25ecc:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   25ed0:	mov	x0, x21
   25ed4:	mov	x1, x22
   25ed8:	mov	x2, x19
   25edc:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   25ee0:	mov	x0, x20
   25ee4:	mov	x1, x22
   25ee8:	mov	x2, x19
   25eec:	ldp	x20, x19, [sp, #64]
   25ef0:	ldp	x22, x21, [sp, #48]
   25ef4:	ldp	x24, x23, [sp, #32]
   25ef8:	ldr	x25, [sp, #16]
   25efc:	ldp	x29, x30, [sp], #80
   25f00:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   25f04:	ldrb	w9, [x24]
   25f08:	ldrb	w8, [x25]
   25f0c:	tbnz	w9, #1, 25f8c <PyInit__decimal@@Base+0x1f428>
   25f10:	tbz	w8, #1, 26038 <PyInit__decimal@@Base+0x1f4d4>
   25f14:	mov	x0, x20
   25f18:	mov	x1, x24
   25f1c:	mov	x2, x19
   25f20:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   25f24:	cbz	w0, 26014 <PyInit__decimal@@Base+0x1f4b0>
   25f28:	mov	x0, x20
   25f2c:	mov	x1, x22
   25f30:	mov	x2, x19
   25f34:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   25f38:	mov	x0, x21
   25f3c:	mov	w1, w23
   25f40:	ldp	x20, x19, [sp, #64]
   25f44:	ldp	x22, x21, [sp, #48]
   25f48:	ldp	x24, x23, [sp, #32]
   25f4c:	ldr	x25, [sp, #16]
   25f50:	mov	x2, xzr
   25f54:	mov	x3, xzr
   25f58:	ldp	x29, x30, [sp], #80
   25f5c:	b	21100 <PyInit__decimal@@Base+0x1a59c>
   25f60:	ldr	x8, [x24, #40]
   25f64:	ldr	x9, [x24, #24]
   25f68:	add	x8, x8, x9, lsl #3
   25f6c:	ldur	x8, [x8, #-8]
   25f70:	cbz	x8, 25fcc <PyInit__decimal@@Base+0x1f468>
   25f74:	mov	w2, #0x2                   	// #2
   25f78:	mov	x0, x21
   25f7c:	mov	w1, w23
   25f80:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25f84:	mov	w21, #0x104                 	// #260
   25f88:	b	25fe0 <PyInit__decimal@@Base+0x1f47c>
   25f8c:	tbz	w8, #1, 25fa0 <PyInit__decimal@@Base+0x1f43c>
   25f90:	mov	w2, #0x4                   	// #4
   25f94:	mov	x0, x21
   25f98:	mov	w1, wzr
   25f9c:	b	25fac <PyInit__decimal@@Base+0x1f448>
   25fa0:	mov	w2, #0x2                   	// #2
   25fa4:	mov	x0, x21
   25fa8:	mov	w1, w23
   25fac:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25fb0:	mov	w2, #0x4                   	// #4
   25fb4:	mov	x0, x20
   25fb8:	mov	w1, wzr
   25fbc:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25fc0:	ldr	w8, [x19]
   25fc4:	orr	w8, w8, #0x100
   25fc8:	b	25ff8 <PyInit__decimal@@Base+0x1f494>
   25fcc:	mov	w2, #0x4                   	// #4
   25fd0:	mov	x0, x21
   25fd4:	mov	w1, wzr
   25fd8:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25fdc:	mov	w21, #0x10                  	// #16
   25fe0:	mov	w2, #0x4                   	// #4
   25fe4:	mov	x0, x20
   25fe8:	mov	w1, wzr
   25fec:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   25ff0:	ldr	w8, [x19]
   25ff4:	orr	w8, w8, w21
   25ff8:	str	w8, [x19]
   25ffc:	ldp	x20, x19, [sp, #64]
   26000:	ldp	x22, x21, [sp, #48]
   26004:	ldp	x24, x23, [sp, #32]
   26008:	ldr	x25, [sp, #16]
   2600c:	ldp	x29, x30, [sp], #80
   26010:	ret
   26014:	mov	x0, x21
   26018:	mov	x2, x19
   2601c:	ldp	x20, x19, [sp, #64]
   26020:	ldp	x22, x21, [sp, #48]
   26024:	ldp	x24, x23, [sp, #32]
   26028:	ldr	x25, [sp, #16]
   2602c:	mov	w1, #0x200                 	// #512
   26030:	ldp	x29, x30, [sp], #80
   26034:	b	208fc <PyInit__decimal@@Base+0x19d98>
   26038:	bl	67b0 <abort@plt>
   2603c:	stp	x29, x30, [sp, #-96]!
   26040:	stp	x28, x27, [sp, #16]
   26044:	stp	x26, x25, [sp, #32]
   26048:	stp	x24, x23, [sp, #48]
   2604c:	stp	x22, x21, [sp, #64]
   26050:	stp	x20, x19, [sp, #80]
   26054:	mov	x29, sp
   26058:	sub	sp, sp, #0x240
   2605c:	mov	w8, #0x30                  	// #48
   26060:	mov	w9, #0x40                  	// #64
   26064:	add	x10, sp, #0x38
   26068:	stp	xzr, xzr, [sp, #16]
   2606c:	strb	w8, [sp, #8]
   26070:	stp	xzr, x9, [sp, #32]
   26074:	str	x10, [sp, #48]
   26078:	ldrb	w10, [x2]
   2607c:	ldr	x12, [x2, #40]
   26080:	ldr	x13, [x2, #24]
   26084:	ldrb	w11, [x3]
   26088:	ldr	x8, [x2, #8]
   2608c:	ldr	x9, [x3, #8]
   26090:	and	w27, w10, #0x1
   26094:	add	x10, x12, x13, lsl #3
   26098:	ldur	x10, [x10, #-8]
   2609c:	mov	x24, x2
   260a0:	and	w11, w11, #0x1
   260a4:	subs	x2, x8, x9
   260a8:	mov	x20, x5
   260ac:	mov	x19, x1
   260b0:	mov	x21, x0
   260b4:	eor	w22, w11, w27
   260b8:	csel	x12, x9, x8, gt
   260bc:	cbz	x10, 260f8 <PyInit__decimal@@Base+0x1f594>
   260c0:	ldr	x10, [x24, #16]
   260c4:	ldr	x11, [x3, #16]
   260c8:	mov	x25, x3
   260cc:	add	x10, x2, x10
   260d0:	subs	x10, x10, x11
   260d4:	b.mi	26114 <PyInit__decimal@@Base+0x1f5b0>  // b.first
   260d8:	ldr	x11, [x4]
   260dc:	mov	x23, x4
   260e0:	cmp	x10, x11
   260e4:	b.le	26150 <PyInit__decimal@@Base+0x1f5ec>
   260e8:	ldr	w8, [x20]
   260ec:	orr	w8, w8, #0x8
   260f0:	str	w8, [x20]
   260f4:	b	263d8 <PyInit__decimal@@Base+0x1f874>
   260f8:	mov	x0, x19
   260fc:	mov	x1, x24
   26100:	mov	x2, x20
   26104:	mov	x23, x12
   26108:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2610c:	cbnz	w0, 26134 <PyInit__decimal@@Base+0x1f5d0>
   26110:	b	263d8 <PyInit__decimal@@Base+0x1f874>
   26114:	cmp	x8, x9
   26118:	b.le	26180 <PyInit__decimal@@Base+0x1f61c>
   2611c:	mov	x0, x19
   26120:	mov	x1, x24
   26124:	mov	x3, x20
   26128:	mov	x23, x12
   2612c:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   26130:	cbz	w0, 263d8 <PyInit__decimal@@Base+0x1f874>
   26134:	str	x23, [x19, #8]
   26138:	mov	x0, x21
   2613c:	mov	w1, w22
   26140:	mov	x2, xzr
   26144:	mov	x3, xzr
   26148:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2614c:	b	26428 <PyInit__decimal@@Base+0x1f8c4>
   26150:	cmp	x8, x9
   26154:	str	x12, [sp]
   26158:	b.eq	261b4 <PyInit__decimal@@Base+0x1f650>  // b.none
   2615c:	cmp	x2, #0x1
   26160:	b.lt	26198 <PyInit__decimal@@Base+0x1f634>  // b.tstop
   26164:	add	x0, sp, #0x8
   26168:	mov	x1, x24
   2616c:	mov	x3, x20
   26170:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   26174:	add	x24, sp, #0x8
   26178:	cbnz	w0, 261b4 <PyInit__decimal@@Base+0x1f650>
   2617c:	b	263d8 <PyInit__decimal@@Base+0x1f874>
   26180:	mov	x0, x19
   26184:	mov	x1, x24
   26188:	mov	x2, x20
   2618c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   26190:	cbnz	w0, 26138 <PyInit__decimal@@Base+0x1f5d4>
   26194:	b	263d8 <PyInit__decimal@@Base+0x1f874>
   26198:	neg	x2, x2
   2619c:	add	x0, sp, #0x8
   261a0:	mov	x1, x25
   261a4:	mov	x3, x20
   261a8:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   261ac:	add	x25, sp, #0x8
   261b0:	cbz	w0, 263d8 <PyInit__decimal@@Base+0x1f874>
   261b4:	ldr	x8, [x24, #24]
   261b8:	ldr	x28, [x25, #24]
   261bc:	cmp	x24, x21
   261c0:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   261c4:	sub	x9, x8, x28
   261c8:	add	x26, x9, #0x1
   261cc:	b.ne	261d8 <PyInit__decimal@@Base+0x1f674>  // b.any
   261d0:	cmp	x26, x8
   261d4:	b.lt	26238 <PyInit__decimal@@Base+0x1f6d4>  // b.tstop
   261d8:	cmp	x25, x21
   261dc:	b.ne	261e8 <PyInit__decimal@@Base+0x1f684>  // b.any
   261e0:	cmp	x26, x28
   261e4:	b.lt	26238 <PyInit__decimal@@Base+0x1f6d4>  // b.tstop
   261e8:	ldr	x9, [x12, #1352]
   261ec:	ldr	x8, [x21, #32]
   261f0:	cmp	x9, x26
   261f4:	csel	x1, x26, x9, lt  // lt = tstop
   261f8:	cmp	x1, x8
   261fc:	b.eq	26238 <PyInit__decimal@@Base+0x1f6d4>  // b.none
   26200:	ldrb	w9, [x21]
   26204:	tbnz	w9, #5, 26218 <PyInit__decimal@@Base+0x1f6b4>
   26208:	mov	x0, x21
   2620c:	mov	x2, x20
   26210:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   26214:	b	2622c <PyInit__decimal@@Base+0x1f6c8>
   26218:	cmp	x1, x8
   2621c:	b.le	26238 <PyInit__decimal@@Base+0x1f6d4>
   26220:	mov	x0, x21
   26224:	mov	x2, x20
   26228:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2622c:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   26230:	cbz	w0, 263d8 <PyInit__decimal@@Base+0x1f874>
   26234:	ldr	x28, [x25, #24]
   26238:	cmp	x24, x19
   2623c:	b.ne	26250 <PyInit__decimal@@Base+0x1f6ec>  // b.any
   26240:	ldr	x8, [x24, #24]
   26244:	mov	x5, x28
   26248:	cmp	x28, x8
   2624c:	b.lt	262a8 <PyInit__decimal@@Base+0x1f744>  // b.tstop
   26250:	ldr	x9, [x12, #1352]
   26254:	ldr	x8, [x19, #32]
   26258:	mov	x5, x28
   2625c:	cmp	x9, x28
   26260:	csel	x1, x28, x9, lt  // lt = tstop
   26264:	cmp	x1, x8
   26268:	b.eq	262a8 <PyInit__decimal@@Base+0x1f744>  // b.none
   2626c:	ldrb	w9, [x19]
   26270:	tbnz	w9, #5, 26284 <PyInit__decimal@@Base+0x1f720>
   26274:	mov	x0, x19
   26278:	mov	x2, x20
   2627c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   26280:	b	2629c <PyInit__decimal@@Base+0x1f738>
   26284:	cmp	x1, x8
   26288:	mov	x5, x28
   2628c:	b.le	262a8 <PyInit__decimal@@Base+0x1f744>
   26290:	mov	x0, x19
   26294:	mov	x2, x20
   26298:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2629c:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   262a0:	cbz	w0, 263d8 <PyInit__decimal@@Base+0x1f874>
   262a4:	ldr	x5, [x25, #24]
   262a8:	cmp	x5, #0x1
   262ac:	b.ne	262e8 <PyInit__decimal@@Base+0x1f784>  // b.any
   262b0:	ldr	x2, [x24, #24]
   262b4:	ldr	x0, [x21, #40]
   262b8:	cmp	x2, #0x1
   262bc:	b.ne	26320 <PyInit__decimal@@Base+0x1f7bc>  // b.any
   262c0:	ldr	x8, [x24, #40]
   262c4:	ldr	x9, [x25, #40]
   262c8:	ldr	x10, [x19, #40]
   262cc:	ldr	x8, [x8]
   262d0:	ldr	x9, [x9]
   262d4:	udiv	x11, x8, x9
   262d8:	msub	x8, x11, x9, x8
   262dc:	str	x11, [x0]
   262e0:	str	x8, [x10]
   262e4:	b	2633c <PyInit__decimal@@Base+0x1f7d8>
   262e8:	cmp	x5, #0x400
   262ec:	b.gt	263a4 <PyInit__decimal@@Base+0x1f840>
   262f0:	ldr	x0, [x21, #40]
   262f4:	ldr	x1, [x19, #40]
   262f8:	ldr	x2, [x24, #40]
   262fc:	ldr	x3, [x25, #40]
   26300:	ldr	x4, [x24, #24]
   26304:	bl	1aff0 <PyInit__decimal@@Base+0x1448c>
   26308:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   2630c:	cmn	w0, #0x1
   26310:	b.ne	2633c <PyInit__decimal@@Base+0x1f7d8>  // b.any
   26314:	ldr	w8, [x20]
   26318:	orr	w8, w8, #0x200
   2631c:	b	260f0 <PyInit__decimal@@Base+0x1f58c>
   26320:	ldr	x8, [x25, #40]
   26324:	ldr	x1, [x24, #40]
   26328:	ldr	x3, [x8]
   2632c:	bl	1af58 <PyInit__decimal@@Base+0x143f4>
   26330:	ldr	x8, [x19, #40]
   26334:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   26338:	str	x0, [x8]
   2633c:	ldr	x8, [x21, #40]
   26340:	mov	w10, #0x13                  	// #19
   26344:	mul	x10, x26, x10
   26348:	sub	x9, x26, #0x1
   2634c:	sub	x10, x10, #0x13
   26350:	add	x24, x9, #0x1
   26354:	mov	x25, x9
   26358:	cmp	x24, #0x2
   2635c:	mov	x26, x10
   26360:	b.lt	26374 <PyInit__decimal@@Base+0x1f810>  // b.tstop
   26364:	ldr	x11, [x8, x25, lsl #3]
   26368:	sub	x9, x25, #0x1
   2636c:	sub	x10, x26, #0x13
   26370:	cbz	x11, 26350 <PyInit__decimal@@Base+0x1f7ec>
   26374:	ldr	x9, [x12, #1352]
   26378:	ldr	x8, [x21, #32]
   2637c:	cmp	x9, x24
   26380:	csinc	x1, x9, x25, ge  // ge = tcont
   26384:	cmp	x1, x8
   26388:	b.eq	26460 <PyInit__decimal@@Base+0x1f8fc>  // b.none
   2638c:	ldrb	w9, [x21]
   26390:	tbnz	w9, #5, 26448 <PyInit__decimal@@Base+0x1f8e4>
   26394:	mov	x0, x21
   26398:	mov	x2, x20
   2639c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   263a0:	b	2645c <PyInit__decimal@@Base+0x1f8f8>
   263a4:	mov	x0, x21
   263a8:	mov	x1, x19
   263ac:	mov	x2, x24
   263b0:	mov	x3, x25
   263b4:	mov	x4, x20
   263b8:	bl	2ecc4 <PyInit__decimal@@Base+0x28160>
   263bc:	ldrb	w8, [x21]
   263c0:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   263c4:	tst	w8, #0xe
   263c8:	b.ne	263d8 <PyInit__decimal@@Base+0x1f874>  // b.any
   263cc:	ldrb	w8, [x19]
   263d0:	tst	w8, #0xe
   263d4:	b.eq	26758 <PyInit__decimal@@Base+0x1fbf4>  // b.none
   263d8:	mov	w2, #0x4                   	// #4
   263dc:	mov	x0, x21
   263e0:	mov	w1, wzr
   263e4:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   263e8:	mov	w2, #0x4                   	// #4
   263ec:	mov	x0, x19
   263f0:	mov	w1, wzr
   263f4:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   263f8:	ldrb	w8, [sp, #8]
   263fc:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   26400:	cmp	w8, #0x1f
   26404:	b.hi	26418 <PyInit__decimal@@Base+0x1f8b4>  // b.pmore
   26408:	ldr	x8, [x19, #1384]
   2640c:	ldr	x0, [sp, #48]
   26410:	blr	x8
   26414:	ldrb	w8, [sp, #8]
   26418:	tbnz	w8, #4, 26428 <PyInit__decimal@@Base+0x1f8c4>
   2641c:	ldr	x8, [x19, #1384]
   26420:	add	x0, sp, #0x8
   26424:	blr	x8
   26428:	add	sp, sp, #0x240
   2642c:	ldp	x20, x19, [sp, #80]
   26430:	ldp	x22, x21, [sp, #64]
   26434:	ldp	x24, x23, [sp, #48]
   26438:	ldp	x26, x25, [sp, #32]
   2643c:	ldp	x28, x27, [sp, #16]
   26440:	ldp	x29, x30, [sp], #96
   26444:	ret
   26448:	cmp	x1, x8
   2644c:	b.le	26460 <PyInit__decimal@@Base+0x1f8fc>
   26450:	mov	x0, x21
   26454:	mov	x2, x20
   26458:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2645c:	adrp	x12, 4c000 <PyInit__decimal@@Base+0x4549c>
   26460:	ldr	x8, [x21, #40]
   26464:	str	x24, [x21, #24]
   26468:	adrp	x24, 37000 <PyInit__decimal@@Base+0x3049c>
   2646c:	add	x24, x24, #0xe70
   26470:	ldr	x8, [x8, x25, lsl #3]
   26474:	ldr	x25, [x24, #72]
   26478:	cmp	x25, x8
   2647c:	b.ls	264a8 <PyInit__decimal@@Base+0x1f944>  // b.plast
   26480:	ldr	x9, [x24, #32]
   26484:	cmp	x9, x8
   26488:	b.ls	264d0 <PyInit__decimal@@Base+0x1f96c>  // b.plast
   2648c:	ldr	x9, [x24, #16]
   26490:	cmp	x9, x8
   26494:	b.ls	26514 <PyInit__decimal@@Base+0x1f9b0>  // b.plast
   26498:	ldr	x9, [x24, #8]
   2649c:	cmp	x9, x8
   264a0:	mov	w8, #0x1                   	// #1
   264a4:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   264a8:	ldr	x9, [x24, #112]
   264ac:	cmp	x9, x8
   264b0:	b.ls	264ec <PyInit__decimal@@Base+0x1f988>  // b.plast
   264b4:	ldr	x9, [x24, #88]
   264b8:	cmp	x9, x8
   264bc:	b.ls	26524 <PyInit__decimal@@Base+0x1f9c0>  // b.plast
   264c0:	ldr	x9, [x24, #80]
   264c4:	cmp	x9, x8
   264c8:	mov	w8, #0xa                   	// #10
   264cc:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   264d0:	ldr	x9, [x24, #48]
   264d4:	cmp	x9, x8
   264d8:	b.ls	26540 <PyInit__decimal@@Base+0x1f9dc>  // b.plast
   264dc:	ldr	x9, [x24, #40]
   264e0:	cmp	x9, x8
   264e4:	mov	w8, #0x5                   	// #5
   264e8:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   264ec:	ldr	x9, [x24, #144]
   264f0:	cmp	x9, x8
   264f4:	b.ls	2655c <PyInit__decimal@@Base+0x1f9f8>  // b.plast
   264f8:	ldr	x9, [x24, #128]
   264fc:	cmp	x9, x8
   26500:	b.ls	2656c <PyInit__decimal@@Base+0x1fa08>  // b.plast
   26504:	ldr	x9, [x24, #120]
   26508:	cmp	x9, x8
   2650c:	mov	w8, #0xf                   	// #15
   26510:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   26514:	ldr	x9, [x24, #24]
   26518:	cmp	x9, x8
   2651c:	mov	w8, #0x3                   	// #3
   26520:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   26524:	ldr	x9, [x24, #104]
   26528:	cmp	x9, x8
   2652c:	b.ls	266c8 <PyInit__decimal@@Base+0x1fb64>  // b.plast
   26530:	ldr	x9, [x24, #96]
   26534:	cmp	x9, x8
   26538:	mov	w8, #0xc                   	// #12
   2653c:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   26540:	ldr	x9, [x24, #64]
   26544:	cmp	x9, x8
   26548:	b.ls	266d0 <PyInit__decimal@@Base+0x1fb6c>  // b.plast
   2654c:	ldr	x9, [x24, #56]
   26550:	cmp	x9, x8
   26554:	mov	w8, #0x7                   	// #7
   26558:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   2655c:	ldr	x9, [x24, #152]
   26560:	cmp	x9, x8
   26564:	mov	w8, #0x13                  	// #19
   26568:	b	26578 <PyInit__decimal@@Base+0x1fa14>
   2656c:	ldr	x9, [x24, #136]
   26570:	cmp	x9, x8
   26574:	mov	w8, #0x11                  	// #17
   26578:	cinc	x8, x8, ls  // ls = plast
   2657c:	ldrb	w9, [x21]
   26580:	add	x8, x8, x26
   26584:	stp	xzr, x8, [x21, #8]
   26588:	and	w9, w9, #0xf0
   2658c:	orr	w9, w9, w22
   26590:	strb	w9, [x21]
   26594:	ldr	x9, [x23]
   26598:	cmp	x8, x9
   2659c:	b.gt	260e8 <PyInit__decimal@@Base+0x1f584>
   265a0:	ldr	x8, [x19, #40]
   265a4:	mov	w10, #0x13                  	// #19
   265a8:	mul	x10, x28, x10
   265ac:	sub	x9, x28, #0x1
   265b0:	sub	x10, x10, #0x13
   265b4:	add	x23, x9, #0x1
   265b8:	mov	x22, x9
   265bc:	cmp	x23, #0x2
   265c0:	mov	x21, x10
   265c4:	b.lt	265d8 <PyInit__decimal@@Base+0x1fa74>  // b.tstop
   265c8:	ldr	x11, [x8, x22, lsl #3]
   265cc:	sub	x9, x22, #0x1
   265d0:	sub	x10, x21, #0x13
   265d4:	cbz	x11, 265b4 <PyInit__decimal@@Base+0x1fa50>
   265d8:	ldr	x9, [x12, #1352]
   265dc:	ldr	x8, [x19, #32]
   265e0:	cmp	x9, x23
   265e4:	csinc	x1, x9, x22, ge  // ge = tcont
   265e8:	cmp	x1, x8
   265ec:	b.eq	2661c <PyInit__decimal@@Base+0x1fab8>  // b.none
   265f0:	ldrb	w9, [x19]
   265f4:	tbnz	w9, #5, 26608 <PyInit__decimal@@Base+0x1faa4>
   265f8:	mov	x0, x19
   265fc:	mov	x2, x20
   26600:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   26604:	b	2661c <PyInit__decimal@@Base+0x1fab8>
   26608:	cmp	x1, x8
   2660c:	b.le	2661c <PyInit__decimal@@Base+0x1fab8>
   26610:	mov	x0, x19
   26614:	mov	x2, x20
   26618:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2661c:	ldr	x8, [x19, #40]
   26620:	str	x23, [x19, #24]
   26624:	ldr	x8, [x8, x22, lsl #3]
   26628:	cmp	x25, x8
   2662c:	b.ls	26658 <PyInit__decimal@@Base+0x1faf4>  // b.plast
   26630:	ldr	x9, [x24, #32]
   26634:	cmp	x9, x8
   26638:	b.ls	26680 <PyInit__decimal@@Base+0x1fb1c>  // b.plast
   2663c:	ldr	x9, [x24, #16]
   26640:	cmp	x9, x8
   26644:	b.ls	266d8 <PyInit__decimal@@Base+0x1fb74>  // b.plast
   26648:	ldr	x9, [x24, #8]
   2664c:	cmp	x9, x8
   26650:	mov	w8, #0x1                   	// #1
   26654:	b	26734 <PyInit__decimal@@Base+0x1fbd0>
   26658:	ldr	x9, [x24, #112]
   2665c:	cmp	x9, x8
   26660:	b.ls	2669c <PyInit__decimal@@Base+0x1fb38>  // b.plast
   26664:	ldr	x9, [x24, #88]
   26668:	cmp	x9, x8
   2666c:	b.ls	266e8 <PyInit__decimal@@Base+0x1fb84>  // b.plast
   26670:	ldr	x9, [x24, #80]
   26674:	cmp	x9, x8
   26678:	mov	w8, #0xa                   	// #10
   2667c:	b	26734 <PyInit__decimal@@Base+0x1fbd0>
   26680:	ldr	x9, [x24, #48]
   26684:	cmp	x9, x8
   26688:	b.ls	26708 <PyInit__decimal@@Base+0x1fba4>  // b.plast
   2668c:	ldr	x9, [x24, #40]
   26690:	cmp	x9, x8
   26694:	mov	w8, #0x5                   	// #5
   26698:	b	26734 <PyInit__decimal@@Base+0x1fbd0>
   2669c:	ldr	x9, [x24, #144]
   266a0:	cmp	x9, x8
   266a4:	b.ls	26728 <PyInit__decimal@@Base+0x1fbc4>  // b.plast
   266a8:	ldr	x9, [x24, #128]
   266ac:	ldr	x10, [sp]
   266b0:	cmp	x9, x8
   266b4:	b.ls	26764 <PyInit__decimal@@Base+0x1fc00>  // b.plast
   266b8:	ldr	x9, [x24, #120]
   266bc:	cmp	x9, x8
   266c0:	mov	w8, #0xf                   	// #15
   266c4:	b	26738 <PyInit__decimal@@Base+0x1fbd4>
   266c8:	mov	w8, #0xe                   	// #14
   266cc:	b	2657c <PyInit__decimal@@Base+0x1fa18>
   266d0:	mov	w8, #0x9                   	// #9
   266d4:	b	2657c <PyInit__decimal@@Base+0x1fa18>
   266d8:	ldr	x9, [x24, #24]
   266dc:	cmp	x9, x8
   266e0:	mov	w8, #0x3                   	// #3
   266e4:	b	26734 <PyInit__decimal@@Base+0x1fbd0>
   266e8:	ldr	x9, [x24, #104]
   266ec:	ldr	x10, [sp]
   266f0:	cmp	x9, x8
   266f4:	b.ls	26774 <PyInit__decimal@@Base+0x1fc10>  // b.plast
   266f8:	ldr	x9, [x24, #96]
   266fc:	cmp	x9, x8
   26700:	mov	w8, #0xc                   	// #12
   26704:	b	26738 <PyInit__decimal@@Base+0x1fbd4>
   26708:	ldr	x9, [x24, #64]
   2670c:	ldr	x10, [sp]
   26710:	cmp	x9, x8
   26714:	b.ls	2677c <PyInit__decimal@@Base+0x1fc18>  // b.plast
   26718:	ldr	x9, [x24, #56]
   2671c:	cmp	x9, x8
   26720:	mov	w8, #0x7                   	// #7
   26724:	b	26738 <PyInit__decimal@@Base+0x1fbd4>
   26728:	ldr	x9, [x24, #152]
   2672c:	cmp	x9, x8
   26730:	mov	w8, #0x13                  	// #19
   26734:	ldr	x10, [sp]
   26738:	cinc	x8, x8, ls  // ls = plast
   2673c:	ldrb	w9, [x19]
   26740:	add	x8, x8, x21
   26744:	stp	x10, x8, [x19, #8]
   26748:	and	w9, w9, #0xf0
   2674c:	orr	w9, w9, w27
   26750:	strb	w9, [x19]
   26754:	b	263f8 <PyInit__decimal@@Base+0x1f894>
   26758:	ldr	x26, [x21, #24]
   2675c:	ldr	x28, [x19, #24]
   26760:	b	2633c <PyInit__decimal@@Base+0x1f7d8>
   26764:	ldr	x9, [x24, #136]
   26768:	cmp	x9, x8
   2676c:	mov	w8, #0x11                  	// #17
   26770:	b	26738 <PyInit__decimal@@Base+0x1fbd4>
   26774:	mov	w8, #0xe                   	// #14
   26778:	b	2673c <PyInit__decimal@@Base+0x1fbd8>
   2677c:	mov	w8, #0x9                   	// #9
   26780:	b	2673c <PyInit__decimal@@Base+0x1fbd8>
   26784:	stp	x29, x30, [sp, #-80]!
   26788:	str	x28, [sp, #16]
   2678c:	stp	x24, x23, [sp, #32]
   26790:	stp	x22, x21, [sp, #48]
   26794:	stp	x20, x19, [sp, #64]
   26798:	mov	x29, sp
   2679c:	sub	sp, sp, #0x230
   267a0:	mov	w8, #0x30                  	// #48
   267a4:	mov	w9, #0x40                  	// #64
   267a8:	add	x10, sp, #0x30
   267ac:	stp	xzr, xzr, [sp, #8]
   267b0:	strb	w8, [sp]
   267b4:	stp	xzr, x9, [sp, #24]
   267b8:	str	x10, [sp, #40]
   267bc:	ldrb	w8, [x1]
   267c0:	ldrb	w9, [x2]
   267c4:	mov	x19, x4
   267c8:	mov	x21, x3
   267cc:	mov	x23, x2
   267d0:	eor	w10, w9, w8
   267d4:	orr	w8, w8, w9
   267d8:	mov	x24, x1
   267dc:	mov	x20, x0
   267e0:	tst	w8, #0xe
   267e4:	and	w22, w10, #0x1
   267e8:	b.eq	26830 <PyInit__decimal@@Base+0x1fccc>  // b.none
   267ec:	mov	x0, x20
   267f0:	mov	x1, x24
   267f4:	mov	x2, x23
   267f8:	mov	x3, x21
   267fc:	mov	x4, x19
   26800:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   26804:	cbnz	w0, 2690c <PyInit__decimal@@Base+0x1fda8>
   26808:	ldrb	w9, [x24]
   2680c:	ldrb	w8, [x23]
   26810:	tbnz	w9, #1, 268dc <PyInit__decimal@@Base+0x1fd78>
   26814:	tbz	w8, #1, 26928 <PyInit__decimal@@Base+0x1fdc4>
   26818:	mov	x0, x20
   2681c:	mov	w1, w22
   26820:	mov	x2, xzr
   26824:	mov	x3, xzr
   26828:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2682c:	b	2690c <PyInit__decimal@@Base+0x1fda8>
   26830:	ldr	x8, [x23, #40]
   26834:	ldr	x9, [x23, #24]
   26838:	add	x8, x8, x9, lsl #3
   2683c:	ldur	x8, [x8, #-8]
   26840:	cbz	x8, 268a8 <PyInit__decimal@@Base+0x1fd44>
   26844:	mov	x1, sp
   26848:	mov	x0, x20
   2684c:	mov	x2, x24
   26850:	mov	x3, x23
   26854:	mov	x4, x21
   26858:	mov	x5, x19
   2685c:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   26860:	ldrb	w8, [sp]
   26864:	cmp	w8, #0x1f
   26868:	b.hi	26880 <PyInit__decimal@@Base+0x1fd1c>  // b.pmore
   2686c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26870:	ldr	x8, [x8, #1384]
   26874:	ldr	x0, [sp, #40]
   26878:	blr	x8
   2687c:	ldrb	w8, [sp]
   26880:	tbnz	w8, #4, 26894 <PyInit__decimal@@Base+0x1fd30>
   26884:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26888:	ldr	x8, [x8, #1384]
   2688c:	mov	x0, sp
   26890:	blr	x8
   26894:	mov	x0, x20
   26898:	mov	x1, x21
   2689c:	mov	x2, x19
   268a0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   268a4:	b	2690c <PyInit__decimal@@Base+0x1fda8>
   268a8:	ldr	x8, [x24, #40]
   268ac:	ldr	x9, [x24, #24]
   268b0:	add	x8, x8, x9, lsl #3
   268b4:	ldur	x8, [x8, #-8]
   268b8:	cbz	x8, 268fc <PyInit__decimal@@Base+0x1fd98>
   268bc:	mov	w2, #0x2                   	// #2
   268c0:	mov	x0, x20
   268c4:	mov	w1, w22
   268c8:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   268cc:	ldr	w8, [x19]
   268d0:	orr	w8, w8, #0x4
   268d4:	str	w8, [x19]
   268d8:	b	2690c <PyInit__decimal@@Base+0x1fda8>
   268dc:	tbnz	w8, #1, 268f4 <PyInit__decimal@@Base+0x1fd90>
   268e0:	mov	w2, #0x2                   	// #2
   268e4:	mov	x0, x20
   268e8:	mov	w1, w22
   268ec:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   268f0:	b	2690c <PyInit__decimal@@Base+0x1fda8>
   268f4:	mov	w1, #0x100                 	// #256
   268f8:	b	26900 <PyInit__decimal@@Base+0x1fd9c>
   268fc:	mov	w1, #0x10                  	// #16
   26900:	mov	x0, x20
   26904:	mov	x2, x19
   26908:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2690c:	add	sp, sp, #0x230
   26910:	ldp	x20, x19, [sp, #64]
   26914:	ldp	x22, x21, [sp, #48]
   26918:	ldp	x24, x23, [sp, #32]
   2691c:	ldr	x28, [sp, #16]
   26920:	ldp	x29, x30, [sp], #80
   26924:	ret
   26928:	bl	67b0 <abort@plt>
   2692c:	stp	x29, x30, [sp, #-64]!
   26930:	stp	x28, x23, [sp, #16]
   26934:	stp	x22, x21, [sp, #32]
   26938:	stp	x20, x19, [sp, #48]
   2693c:	mov	x29, sp
   26940:	sub	sp, sp, #0x260
   26944:	mov	x23, x0
   26948:	mov	w8, #0x30                  	// #48
   2694c:	mov	w9, #0x40                  	// #64
   26950:	add	x10, sp, #0x30
   26954:	sub	x0, x29, #0x30
   26958:	mov	x19, x4
   2695c:	mov	x20, x3
   26960:	mov	x21, x2
   26964:	mov	x22, x1
   26968:	stp	xzr, xzr, [sp, #8]
   2696c:	strb	w8, [sp]
   26970:	stp	xzr, x9, [sp, #24]
   26974:	str	x10, [sp, #40]
   26978:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2697c:	cmp	x21, #0x0
   26980:	cneg	x2, x21, mi  // mi = first
   26984:	lsr	x1, x21, #63
   26988:	mov	x0, sp
   2698c:	mov	x3, xzr
   26990:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   26994:	mov	x0, sp
   26998:	sub	x1, x29, #0x30
   2699c:	mov	x2, x19
   269a0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   269a4:	mov	x3, sp
   269a8:	mov	w0, #0x1                   	// #1
   269ac:	mov	x1, x23
   269b0:	mov	x2, x22
   269b4:	mov	x4, x20
   269b8:	mov	x5, x19
   269bc:	bl	257a0 <PyInit__decimal@@Base+0x1ec3c>
   269c0:	ldrb	w8, [sp]
   269c4:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   269c8:	cmp	w8, #0x1f
   269cc:	b.hi	269e0 <PyInit__decimal@@Base+0x1fe7c>  // b.pmore
   269d0:	ldr	x8, [x19, #1384]
   269d4:	ldr	x0, [sp, #40]
   269d8:	blr	x8
   269dc:	ldrb	w8, [sp]
   269e0:	tbnz	w8, #4, 269f0 <PyInit__decimal@@Base+0x1fe8c>
   269e4:	ldr	x8, [x19, #1384]
   269e8:	mov	x0, sp
   269ec:	blr	x8
   269f0:	add	sp, sp, #0x260
   269f4:	ldp	x20, x19, [sp, #48]
   269f8:	ldp	x22, x21, [sp, #32]
   269fc:	ldp	x28, x23, [sp, #16]
   26a00:	ldp	x29, x30, [sp], #64
   26a04:	ret
   26a08:	stp	x29, x30, [sp, #-64]!
   26a0c:	stp	x28, x23, [sp, #16]
   26a10:	stp	x22, x21, [sp, #32]
   26a14:	stp	x20, x19, [sp, #48]
   26a18:	mov	x29, sp
   26a1c:	sub	sp, sp, #0x260
   26a20:	mov	x23, x0
   26a24:	mov	w8, #0x30                  	// #48
   26a28:	mov	w9, #0x40                  	// #64
   26a2c:	add	x10, sp, #0x30
   26a30:	sub	x0, x29, #0x30
   26a34:	mov	x19, x4
   26a38:	mov	x20, x3
   26a3c:	mov	x21, x2
   26a40:	mov	x22, x1
   26a44:	stp	xzr, xzr, [sp, #8]
   26a48:	strb	w8, [sp]
   26a4c:	stp	xzr, x9, [sp, #24]
   26a50:	str	x10, [sp, #40]
   26a54:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   26a58:	mov	x0, sp
   26a5c:	mov	w1, wzr
   26a60:	mov	x2, x21
   26a64:	mov	x3, xzr
   26a68:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   26a6c:	mov	x0, sp
   26a70:	sub	x1, x29, #0x30
   26a74:	mov	x2, x19
   26a78:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   26a7c:	mov	x3, sp
   26a80:	mov	w0, #0x1                   	// #1
   26a84:	mov	x1, x23
   26a88:	mov	x2, x22
   26a8c:	mov	x4, x20
   26a90:	mov	x5, x19
   26a94:	bl	257a0 <PyInit__decimal@@Base+0x1ec3c>
   26a98:	ldrb	w8, [sp]
   26a9c:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   26aa0:	cmp	w8, #0x1f
   26aa4:	b.hi	26ab8 <PyInit__decimal@@Base+0x1ff54>  // b.pmore
   26aa8:	ldr	x8, [x19, #1384]
   26aac:	ldr	x0, [sp, #40]
   26ab0:	blr	x8
   26ab4:	ldrb	w8, [sp]
   26ab8:	tbnz	w8, #4, 26ac8 <PyInit__decimal@@Base+0x1ff64>
   26abc:	ldr	x8, [x19, #1384]
   26ac0:	mov	x0, sp
   26ac4:	blr	x8
   26ac8:	add	sp, sp, #0x260
   26acc:	ldp	x20, x19, [sp, #48]
   26ad0:	ldp	x22, x21, [sp, #32]
   26ad4:	ldp	x28, x23, [sp, #16]
   26ad8:	ldp	x29, x30, [sp], #64
   26adc:	ret
   26ae0:	sxtw	x2, w2
   26ae4:	b	2692c <PyInit__decimal@@Base+0x1fdc8>
   26ae8:	mov	w2, w2
   26aec:	b	26a08 <PyInit__decimal@@Base+0x1fea4>
   26af0:	b	2692c <PyInit__decimal@@Base+0x1fdc8>
   26af4:	b	26a08 <PyInit__decimal@@Base+0x1fea4>
   26af8:	stp	x29, x30, [sp, #-80]!
   26afc:	stp	x28, x25, [sp, #16]
   26b00:	stp	x24, x23, [sp, #32]
   26b04:	stp	x22, x21, [sp, #48]
   26b08:	stp	x20, x19, [sp, #64]
   26b0c:	mov	x29, sp
   26b10:	sub	sp, sp, #0x900
   26b14:	ldrb	w8, [x1]
   26b18:	mov	x20, x3
   26b1c:	mov	x21, x2
   26b20:	mov	x22, x1
   26b24:	tst	w8, #0xe
   26b28:	mov	x19, x0
   26b2c:	b.eq	26b64 <PyInit__decimal@@Base+0x20000>  // b.none
   26b30:	mov	x0, x19
   26b34:	mov	x1, x22
   26b38:	mov	x2, x21
   26b3c:	mov	x3, x20
   26b40:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   26b44:	cbnz	w0, 26f24 <PyInit__decimal@@Base+0x203c0>
   26b48:	ldrb	w8, [x22]
   26b4c:	tbnz	w8, #0, 26c28 <PyInit__decimal@@Base+0x200c4>
   26b50:	mov	w2, #0x2                   	// #2
   26b54:	mov	x0, x19
   26b58:	mov	w1, wzr
   26b5c:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   26b60:	b	26f24 <PyInit__decimal@@Base+0x203c0>
   26b64:	ldr	x8, [x22, #40]
   26b68:	ldr	x9, [x22, #24]
   26b6c:	add	x8, x8, x9, lsl #3
   26b70:	ldur	x8, [x8, #-8]
   26b74:	cbz	x8, 26c18 <PyInit__decimal@@Base+0x200b4>
   26b78:	ldp	q2, q0, [x21, #16]
   26b7c:	ldr	q1, [x21]
   26b80:	add	x24, sp, #0x240
   26b84:	mov	w8, #0x6                   	// #6
   26b88:	str	q0, [x24, #1712]
   26b8c:	str	q2, [x24, #1696]
   26b90:	str	q1, [x24, #1680]
   26b94:	stur	w8, [x29, #-12]
   26b98:	ldr	w8, [x21, #44]
   26b9c:	cbz	w8, 26c40 <PyInit__decimal@@Base+0x200dc>
   26ba0:	mov	w8, #0x30                  	// #48
   26ba4:	add	x10, sp, #0x6d0
   26ba8:	strb	w8, [sp, #1696]
   26bac:	str	x10, [x24, #1160]
   26bb0:	add	x10, sp, #0x4a0
   26bb4:	mov	w9, #0x40                  	// #64
   26bb8:	strb	w8, [sp, #1136]
   26bbc:	str	x10, [x24, #600]
   26bc0:	add	x10, sp, #0x270
   26bc4:	strb	w8, [sp, #576]
   26bc8:	stp	x9, x10, [x24, #32]
   26bcc:	add	x10, sp, #0x40
   26bd0:	cmp	x19, x22
   26bd4:	stp	xzr, xzr, [sp, #24]
   26bd8:	str	xzr, [x24, #1128]
   26bdc:	str	xzr, [x24, #1144]
   26be0:	str	xzr, [x24, #1136]
   26be4:	str	x9, [x24, #1152]
   26be8:	str	xzr, [x24, #568]
   26bec:	str	xzr, [x24, #584]
   26bf0:	str	xzr, [x24, #576]
   26bf4:	str	x9, [x24, #592]
   26bf8:	stp	xzr, xzr, [x24, #8]
   26bfc:	str	xzr, [x24, #24]
   26c00:	strb	w8, [sp, #16]
   26c04:	stp	xzr, x9, [sp, #40]
   26c08:	str	x10, [sp, #56]
   26c0c:	b.eq	26cd0 <PyInit__decimal@@Base+0x2016c>  // b.none
   26c10:	mov	x23, x22
   26c14:	b	26ce8 <PyInit__decimal@@Base+0x20184>
   26c18:	mov	w2, #0x1                   	// #1
   26c1c:	mov	x0, x19
   26c20:	mov	w1, wzr
   26c24:	b	26c34 <PyInit__decimal@@Base+0x200d0>
   26c28:	mov	x0, x19
   26c2c:	mov	w1, wzr
   26c30:	mov	x2, xzr
   26c34:	mov	x3, xzr
   26c38:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   26c3c:	b	26f24 <PyInit__decimal@@Base+0x203c0>
   26c40:	sub	x2, x29, #0x30
   26c44:	mov	x0, x19
   26c48:	mov	x1, x22
   26c4c:	mov	x3, x20
   26c50:	bl	26f40 <PyInit__decimal@@Base+0x203dc>
   26c54:	sub	x1, x29, #0x30
   26c58:	mov	x0, x19
   26c5c:	mov	x2, x20
   26c60:	bl	27558 <PyInit__decimal@@Base+0x209f4>
   26c64:	ldp	x8, x10, [x19, #8]
   26c68:	ldr	x9, [x24, #1696]
   26c6c:	add	x10, x8, x10
   26c70:	sub	x10, x10, #0x1
   26c74:	cmp	x10, x9
   26c78:	b.ge	26cbc <PyInit__decimal@@Base+0x20158>  // b.tcont
   26c7c:	ldrb	w10, [x19]
   26c80:	tst	w10, #0xe
   26c84:	b.ne	26c9c <PyInit__decimal@@Base+0x20138>  // b.any
   26c88:	ldr	x10, [x19, #40]
   26c8c:	ldr	x11, [x19, #24]
   26c90:	add	x10, x10, x11, lsl #3
   26c94:	ldur	x10, [x10, #-8]
   26c98:	cbz	x10, 26cbc <PyInit__decimal@@Base+0x20158>
   26c9c:	ldr	x10, [x24, #1680]
   26ca0:	sub	x9, x9, x10
   26ca4:	add	x9, x9, #0x1
   26ca8:	cmp	x8, x9
   26cac:	b.ge	26cbc <PyInit__decimal@@Base+0x20158>  // b.tcont
   26cb0:	ldr	w8, [x20]
   26cb4:	orr	w8, w8, #0x4000
   26cb8:	str	w8, [x20]
   26cbc:	sub	x1, x29, #0x30
   26cc0:	mov	x0, x19
   26cc4:	mov	x2, x20
   26cc8:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   26ccc:	b	26f24 <PyInit__decimal@@Base+0x203c0>
   26cd0:	add	x0, sp, #0x10
   26cd4:	mov	x1, x22
   26cd8:	mov	x2, x20
   26cdc:	add	x23, sp, #0x10
   26ce0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   26ce4:	cbz	w0, 26f14 <PyInit__decimal@@Base+0x203b0>
   26ce8:	stur	wzr, [x29, #-8]
   26cec:	ldr	x8, [x21]
   26cf0:	sub	x9, x29, #0x30
   26cf4:	add	x22, x9, #0x1c
   26cf8:	add	x25, x8, #0x3
   26cfc:	sub	x2, x29, #0x30
   26d00:	add	x3, sp, #0xc
   26d04:	mov	x0, x19
   26d08:	mov	x1, x23
   26d0c:	str	x25, [x24, #1680]
   26d10:	str	wzr, [sp, #12]
   26d14:	bl	26f40 <PyInit__decimal@@Base+0x203dc>
   26d18:	ldr	w8, [sp, #12]
   26d1c:	ldr	w9, [x20]
   26d20:	add	x0, sp, #0x240
   26d24:	mov	w2, #0x1                   	// #1
   26d28:	tst	w8, #0x4000
   26d2c:	orr	w9, w9, w8
   26d30:	str	w9, [x20]
   26d34:	ldp	x9, x10, [x19, #8]
   26d38:	ldr	x11, [x24, #1680]
   26d3c:	mov	w1, wzr
   26d40:	add	x10, x10, x9
   26d44:	sub	x10, x10, x11
   26d48:	csel	x3, x10, x9, eq  // eq = none
   26d4c:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   26d50:	ldr	x8, [x21]
   26d54:	add	x0, sp, #0x6a0
   26d58:	add	x2, sp, #0x240
   26d5c:	sub	x3, x29, #0x30
   26d60:	mov	x1, x19
   26d64:	mov	x4, x22
   26d68:	str	x8, [x24, #1680]
   26d6c:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   26d70:	add	x0, sp, #0x470
   26d74:	add	x2, sp, #0x240
   26d78:	sub	x3, x29, #0x30
   26d7c:	mov	x1, x19
   26d80:	mov	x4, x22
   26d84:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   26d88:	ldrb	w8, [x19]
   26d8c:	tst	w8, #0xe
   26d90:	b.ne	26dc0 <PyInit__decimal@@Base+0x2025c>  // b.any
   26d94:	ldr	x8, [x19, #40]
   26d98:	ldr	x9, [x19, #24]
   26d9c:	add	x8, x8, x9, lsl #3
   26da0:	ldur	x8, [x8, #-8]
   26da4:	cbz	x8, 26dc0 <PyInit__decimal@@Base+0x2025c>
   26da8:	add	x0, sp, #0x6a0
   26dac:	add	x1, sp, #0x470
   26db0:	mov	x2, x20
   26db4:	bl	22128 <PyInit__decimal@@Base+0x1b5c4>
   26db8:	add	x25, x25, #0x13
   26dbc:	cbnz	w0, 26cfc <PyInit__decimal@@Base+0x20198>
   26dc0:	ldr	w8, [x21, #40]
   26dc4:	sub	x1, x29, #0x30
   26dc8:	mov	x0, x19
   26dcc:	mov	x2, x20
   26dd0:	stur	w8, [x29, #-8]
   26dd4:	bl	27558 <PyInit__decimal@@Base+0x209f4>
   26dd8:	ldp	x8, x10, [x19, #8]
   26ddc:	ldr	x9, [x24, #1696]
   26de0:	add	x10, x8, x10
   26de4:	sub	x10, x10, #0x1
   26de8:	cmp	x10, x9
   26dec:	b.ge	26e30 <PyInit__decimal@@Base+0x202cc>  // b.tcont
   26df0:	ldrb	w10, [x19]
   26df4:	tst	w10, #0xe
   26df8:	b.ne	26e10 <PyInit__decimal@@Base+0x202ac>  // b.any
   26dfc:	ldr	x10, [x19, #40]
   26e00:	ldr	x11, [x19, #24]
   26e04:	add	x10, x10, x11, lsl #3
   26e08:	ldur	x10, [x10, #-8]
   26e0c:	cbz	x10, 26e30 <PyInit__decimal@@Base+0x202cc>
   26e10:	ldr	x10, [x24, #1680]
   26e14:	sub	x9, x9, x10
   26e18:	add	x9, x9, #0x1
   26e1c:	cmp	x8, x9
   26e20:	b.ge	26e30 <PyInit__decimal@@Base+0x202cc>  // b.tcont
   26e24:	ldr	w8, [x20]
   26e28:	orr	w8, w8, #0x4000
   26e2c:	str	w8, [x20]
   26e30:	sub	x1, x29, #0x30
   26e34:	mov	x0, x19
   26e38:	mov	x2, x20
   26e3c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   26e40:	ldrb	w8, [sp, #1696]
   26e44:	cmp	w8, #0x1f
   26e48:	b.hi	26e60 <PyInit__decimal@@Base+0x202fc>  // b.pmore
   26e4c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26e50:	ldr	x8, [x8, #1384]
   26e54:	ldr	x0, [x24, #1160]
   26e58:	blr	x8
   26e5c:	ldrb	w8, [sp, #1696]
   26e60:	tbnz	w8, #4, 26e74 <PyInit__decimal@@Base+0x20310>
   26e64:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26e68:	ldr	x8, [x8, #1384]
   26e6c:	add	x0, sp, #0x6a0
   26e70:	blr	x8
   26e74:	ldrb	w8, [sp, #1136]
   26e78:	cmp	w8, #0x1f
   26e7c:	b.hi	26e94 <PyInit__decimal@@Base+0x20330>  // b.pmore
   26e80:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26e84:	ldr	x8, [x8, #1384]
   26e88:	ldr	x0, [x24, #600]
   26e8c:	blr	x8
   26e90:	ldrb	w8, [sp, #1136]
   26e94:	tbnz	w8, #4, 26ea8 <PyInit__decimal@@Base+0x20344>
   26e98:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26e9c:	ldr	x8, [x8, #1384]
   26ea0:	add	x0, sp, #0x470
   26ea4:	blr	x8
   26ea8:	ldrb	w8, [sp, #576]
   26eac:	cmp	w8, #0x1f
   26eb0:	b.hi	26ec8 <PyInit__decimal@@Base+0x20364>  // b.pmore
   26eb4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26eb8:	ldr	x8, [x8, #1384]
   26ebc:	ldr	x0, [x24, #40]
   26ec0:	blr	x8
   26ec4:	ldrb	w8, [sp, #576]
   26ec8:	tbnz	w8, #4, 26edc <PyInit__decimal@@Base+0x20378>
   26ecc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26ed0:	ldr	x8, [x8, #1384]
   26ed4:	add	x0, sp, #0x240
   26ed8:	blr	x8
   26edc:	ldrb	w8, [sp, #16]
   26ee0:	cmp	w8, #0x1f
   26ee4:	b.hi	26efc <PyInit__decimal@@Base+0x20398>  // b.pmore
   26ee8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26eec:	ldr	x8, [x8, #1384]
   26ef0:	ldr	x0, [sp, #56]
   26ef4:	blr	x8
   26ef8:	ldrb	w8, [sp, #16]
   26efc:	tbnz	w8, #4, 26f24 <PyInit__decimal@@Base+0x203c0>
   26f00:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   26f04:	ldr	x8, [x8, #1384]
   26f08:	add	x0, sp, #0x10
   26f0c:	blr	x8
   26f10:	b	26f24 <PyInit__decimal@@Base+0x203c0>
   26f14:	mov	w1, #0x200                 	// #512
   26f18:	mov	x0, x22
   26f1c:	mov	x2, x20
   26f20:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   26f24:	add	sp, sp, #0x900
   26f28:	ldp	x20, x19, [sp, #64]
   26f2c:	ldp	x22, x21, [sp, #48]
   26f30:	ldp	x24, x23, [sp, #32]
   26f34:	ldp	x28, x25, [sp, #16]
   26f38:	ldp	x29, x30, [sp], #80
   26f3c:	ret
   26f40:	stp	x29, x30, [sp, #-96]!
   26f44:	stp	x28, x27, [sp, #16]
   26f48:	stp	x26, x25, [sp, #32]
   26f4c:	stp	x24, x23, [sp, #48]
   26f50:	stp	x22, x21, [sp, #64]
   26f54:	stp	x20, x19, [sp, #80]
   26f58:	mov	x29, sp
   26f5c:	sub	sp, sp, #0x510
   26f60:	mov	w8, #0x30                  	// #48
   26f64:	add	x10, sp, #0x2a0
   26f68:	str	x10, [sp, #664]
   26f6c:	add	x10, sp, #0x70
   26f70:	strb	w8, [sp, #624]
   26f74:	strb	w8, [sp, #64]
   26f78:	mov	w8, #0x1                   	// #1
   26f7c:	str	x10, [sp, #104]
   26f80:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
   26f84:	dup	v0.2d, x8
   26f88:	stur	q0, [sp, #32]
   26f8c:	ldr	q0, [x10, #2016]
   26f90:	mov	w9, #0x40                  	// #64
   26f94:	str	x9, [sp, #656]
   26f98:	stp	xzr, x9, [sp, #88]
   26f9c:	mov	w9, #0x90                  	// #144
   26fa0:	add	x10, sp, #0x38
   26fa4:	str	xzr, [sp, #632]
   26fa8:	str	xzr, [sp, #640]
   26fac:	stp	xzr, xzr, [sp, #72]
   26fb0:	str	xzr, [sp, #648]
   26fb4:	stp	x10, x8, [sp, #48]
   26fb8:	strb	w9, [sp, #8]
   26fbc:	stur	q0, [sp, #16]
   26fc0:	ldr	x8, [x1, #40]
   26fc4:	ldr	x9, [x1, #24]
   26fc8:	mov	x20, x0
   26fcc:	add	x10, x8, x9, lsl #3
   26fd0:	ldur	x10, [x10, #-8]
   26fd4:	cbz	x10, 27018 <PyInit__decimal@@Base+0x204b4>
   26fd8:	ldp	x11, x10, [x1, #8]
   26fdc:	mov	x19, x3
   26fe0:	mov	x22, x2
   26fe4:	mov	x21, x1
   26fe8:	add	x12, x11, x10
   26fec:	bic	x23, x12, x12, asr #63
   26ff0:	cmp	x23, #0x14
   26ff4:	b.lt	27030 <PyInit__decimal@@Base+0x204cc>  // b.tstop
   26ff8:	ldrb	w8, [x21]
   26ffc:	tbnz	w8, #0, 27108 <PyInit__decimal@@Base+0x205a4>
   27000:	mov	w2, #0x2                   	// #2
   27004:	mov	x0, x20
   27008:	mov	w1, wzr
   2700c:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   27010:	mov	w8, #0x1840                	// #6208
   27014:	b	2712c <PyInit__decimal@@Base+0x205c8>
   27018:	mov	w2, #0x1                   	// #1
   2701c:	mov	x0, x20
   27020:	mov	w1, wzr
   27024:	mov	x3, xzr
   27028:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2702c:	b	27528 <PyInit__decimal@@Base+0x209c4>
   27030:	mov	w12, #0x9                   	// #9
   27034:	mov	w13, #0x90                  	// #144
   27038:	stur	x12, [x29, #-16]
   2703c:	sturb	w13, [x29, #-64]
   27040:	ldr	x13, [x22]
   27044:	mov	w14, #0x1                   	// #1
   27048:	sub	x12, x29, #0x10
   2704c:	dup	v0.2d, x14
   27050:	stp	x14, x12, [x29, #-32]
   27054:	mvn	x12, x13
   27058:	stur	q0, [x29, #-48]
   2705c:	stur	x12, [x29, #-56]
   27060:	ldrb	w12, [x21]
   27064:	stp	x11, x10, [x29, #-104]
   27068:	stur	x9, [x29, #-88]
   2706c:	ldr	x9, [x21, #32]
   27070:	mov	w10, #0x50                  	// #80
   27074:	and	w11, w12, #0xe
   27078:	sub	x0, x29, #0x70
   2707c:	stp	x9, x8, [x29, #-80]
   27080:	orr	w8, w11, w10
   27084:	sub	x1, x29, #0x40
   27088:	sturb	w8, [x29, #-112]
   2708c:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   27090:	cmp	w0, #0x0
   27094:	b.le	27138 <PyInit__decimal@@Base+0x205d4>
   27098:	sub	x0, x29, #0x40
   2709c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   270a0:	ldr	x8, [x22]
   270a4:	mov	w9, #0xa                   	// #10
   270a8:	mov	w10, #0x6                   	// #6
   270ac:	mov	x0, x20
   270b0:	add	x8, x23, x8
   270b4:	add	x8, x8, #0x2
   270b8:	cmp	x8, #0xa
   270bc:	csel	x8, x8, x9, gt
   270c0:	mov	x1, x21
   270c4:	mov	x2, x19
   270c8:	stur	x8, [x29, #-64]
   270cc:	stur	w10, [x29, #-28]
   270d0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   270d4:	cbz	w0, 27528 <PyInit__decimal@@Base+0x209c4>
   270d8:	ldr	x8, [x20, #8]
   270dc:	mov	x10, #0x10000000000000      	// #4503599627370496
   270e0:	sub	x8, x8, x23
   270e4:	str	x8, [x20, #8]
   270e8:	ldur	x9, [x29, #-64]
   270ec:	cmp	x9, x10
   270f0:	b.le	27154 <PyInit__decimal@@Base+0x205f0>
   270f4:	mov	w1, #0x100                 	// #256
   270f8:	mov	x0, x20
   270fc:	mov	x2, x19
   27100:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   27104:	b	27528 <PyInit__decimal@@Base+0x209c4>
   27108:	ldr	x8, [x22, #16]
   2710c:	ldr	x9, [x22]
   27110:	mov	x0, x20
   27114:	mov	w1, wzr
   27118:	mov	x2, xzr
   2711c:	sub	x8, x8, x9
   27120:	add	x3, x8, #0x1
   27124:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   27128:	mov	w8, #0x7041                	// #28737
   2712c:	ldr	w9, [x19]
   27130:	orr	w8, w9, w8
   27134:	b	27524 <PyInit__decimal@@Base+0x209c0>
   27138:	mov	w2, #0x1                   	// #1
   2713c:	mov	x0, x20
   27140:	mov	w1, wzr
   27144:	mov	x3, xzr
   27148:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2714c:	ldr	w8, [x19]
   27150:	b	2751c <PyInit__decimal@@Base+0x209b8>
   27154:	adrp	x24, 37000 <PyInit__decimal@@Base+0x3049c>
   27158:	add	x24, x24, #0xe70
   2715c:	ldr	x25, [x24, #72]
   27160:	cmp	x25, x9
   27164:	b.ls	27190 <PyInit__decimal@@Base+0x2062c>  // b.plast
   27168:	ldr	x10, [x24, #32]
   2716c:	cmp	x10, x9
   27170:	b.ls	271b8 <PyInit__decimal@@Base+0x20654>  // b.plast
   27174:	ldr	x10, [x24, #16]
   27178:	cmp	x10, x9
   2717c:	b.ls	271fc <PyInit__decimal@@Base+0x20698>  // b.plast
   27180:	ldr	x10, [x24, #8]
   27184:	cmp	x10, x9
   27188:	mov	w10, #0x1                   	// #1
   2718c:	b	27260 <PyInit__decimal@@Base+0x206fc>
   27190:	ldr	x10, [x24, #112]
   27194:	cmp	x10, x9
   27198:	b.ls	271d4 <PyInit__decimal@@Base+0x20670>  // b.plast
   2719c:	ldr	x10, [x24, #88]
   271a0:	cmp	x10, x9
   271a4:	b.ls	2720c <PyInit__decimal@@Base+0x206a8>  // b.plast
   271a8:	ldr	x10, [x24, #80]
   271ac:	cmp	x10, x9
   271b0:	mov	w10, #0xa                   	// #10
   271b4:	b	27260 <PyInit__decimal@@Base+0x206fc>
   271b8:	ldr	x10, [x24, #48]
   271bc:	cmp	x10, x9
   271c0:	b.ls	27228 <PyInit__decimal@@Base+0x206c4>  // b.plast
   271c4:	ldr	x10, [x24, #40]
   271c8:	cmp	x10, x9
   271cc:	mov	w10, #0x5                   	// #5
   271d0:	b	27260 <PyInit__decimal@@Base+0x206fc>
   271d4:	ldr	x10, [x24, #144]
   271d8:	cmp	x10, x9
   271dc:	b.ls	27244 <PyInit__decimal@@Base+0x206e0>  // b.plast
   271e0:	ldr	x10, [x24, #128]
   271e4:	cmp	x10, x9
   271e8:	b.ls	27254 <PyInit__decimal@@Base+0x206f0>  // b.plast
   271ec:	ldr	x10, [x24, #120]
   271f0:	cmp	x10, x9
   271f4:	mov	w10, #0xf                   	// #15
   271f8:	b	27260 <PyInit__decimal@@Base+0x206fc>
   271fc:	ldr	x10, [x24, #24]
   27200:	cmp	x10, x9
   27204:	mov	w10, #0x3                   	// #3
   27208:	b	27260 <PyInit__decimal@@Base+0x206fc>
   2720c:	ldr	x10, [x24, #104]
   27210:	cmp	x10, x9
   27214:	b.ls	27548 <PyInit__decimal@@Base+0x209e4>  // b.plast
   27218:	ldr	x10, [x24, #96]
   2721c:	cmp	x10, x9
   27220:	mov	w10, #0xc                   	// #12
   27224:	b	27260 <PyInit__decimal@@Base+0x206fc>
   27228:	ldr	x10, [x24, #64]
   2722c:	cmp	x10, x9
   27230:	b.ls	27550 <PyInit__decimal@@Base+0x209ec>  // b.plast
   27234:	ldr	x10, [x24, #56]
   27238:	cmp	x10, x9
   2723c:	mov	w10, #0x7                   	// #7
   27240:	b	27260 <PyInit__decimal@@Base+0x206fc>
   27244:	ldr	x10, [x24, #152]
   27248:	cmp	x10, x9
   2724c:	mov	w10, #0x13                  	// #19
   27250:	b	27260 <PyInit__decimal@@Base+0x206fc>
   27254:	ldr	x10, [x24, #136]
   27258:	cmp	x10, x9
   2725c:	mov	w10, #0x11                  	// #17
   27260:	cinc	x10, x10, ls  // ls = plast
   27264:	ldr	x11, [x20, #16]
   27268:	scvtf	d0, x9
   2726c:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   27270:	adrp	x12, 38000 <PyInit__decimal@@Base+0x3149c>
   27274:	ldr	d1, [x9, #2896]
   27278:	ldr	d2, [x12, #2904]
   2727c:	add	x8, x8, x11
   27280:	mvn	x8, x8
   27284:	fmul	d0, d0, d1
   27288:	add	x8, x8, x10
   2728c:	fadd	d0, d0, d2
   27290:	scvtf	d1, x8
   27294:	fdiv	d0, d0, d1
   27298:	fcvtps	x21, d0
   2729c:	cmp	x21, #0x3
   272a0:	b.le	272d4 <PyInit__decimal@@Base+0x20770>
   272a4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   272a8:	cmp	x21, x8
   272ac:	b.eq	270f4 <PyInit__decimal@@Base+0x20590>  // b.none
   272b0:	add	x0, sp, #0x40
   272b4:	mov	w2, #0x1                   	// #1
   272b8:	mov	w1, wzr
   272bc:	mov	x3, xzr
   272c0:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   272c4:	cmp	x21, #0x2
   272c8:	b.lt	27488 <PyInit__decimal@@Base+0x20924>  // b.tstop
   272cc:	sub	x8, x21, #0x1
   272d0:	b	272ec <PyInit__decimal@@Base+0x20788>
   272d4:	add	x0, sp, #0x40
   272d8:	mov	w2, #0x1                   	// #1
   272dc:	mov	w1, wzr
   272e0:	mov	x3, xzr
   272e4:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   272e8:	mov	w8, #0x2                   	// #2
   272ec:	sub	x10, x29, #0x40
   272f0:	adrp	x21, 49000 <PyInit__decimal@@Base+0x4249c>
   272f4:	add	x9, sp, #0x38
   272f8:	sub	x26, x8, #0x1
   272fc:	mov	w28, #0x13                  	// #19
   27300:	add	x21, x21, #0xc88
   27304:	mov	w27, #0xa                   	// #10
   27308:	add	x22, x10, #0x1c
   2730c:	add	x8, x26, #0x1
   27310:	str	x8, [x9]
   27314:	ldr	x8, [sp, #32]
   27318:	add	x9, x9, x8, lsl #3
   2731c:	ldur	x9, [x9, #-8]
   27320:	cmp	x25, x9
   27324:	b.ls	27350 <PyInit__decimal@@Base+0x207ec>  // b.plast
   27328:	ldr	x10, [x24, #32]
   2732c:	cmp	x10, x9
   27330:	b.ls	27378 <PyInit__decimal@@Base+0x20814>  // b.plast
   27334:	ldr	x10, [x24, #16]
   27338:	cmp	x10, x9
   2733c:	b.ls	273bc <PyInit__decimal@@Base+0x20858>  // b.plast
   27340:	ldr	x10, [x24, #8]
   27344:	cmp	x10, x9
   27348:	mov	w9, #0x1                   	// #1
   2734c:	b	27420 <PyInit__decimal@@Base+0x208bc>
   27350:	ldr	x10, [x24, #112]
   27354:	cmp	x10, x9
   27358:	b.ls	27394 <PyInit__decimal@@Base+0x20830>  // b.plast
   2735c:	ldr	x10, [x24, #88]
   27360:	cmp	x10, x9
   27364:	b.ls	273cc <PyInit__decimal@@Base+0x20868>  // b.plast
   27368:	ldr	x10, [x24, #80]
   2736c:	cmp	x10, x9
   27370:	cinc	x9, x27, ls  // ls = plast
   27374:	b	27424 <PyInit__decimal@@Base+0x208c0>
   27378:	ldr	x10, [x24, #48]
   2737c:	cmp	x10, x9
   27380:	b.ls	273e8 <PyInit__decimal@@Base+0x20884>  // b.plast
   27384:	ldr	x10, [x24, #40]
   27388:	cmp	x10, x9
   2738c:	mov	w9, #0x5                   	// #5
   27390:	b	27420 <PyInit__decimal@@Base+0x208bc>
   27394:	ldr	x10, [x24, #144]
   27398:	cmp	x10, x9
   2739c:	b.ls	27404 <PyInit__decimal@@Base+0x208a0>  // b.plast
   273a0:	ldr	x10, [x24, #128]
   273a4:	cmp	x10, x9
   273a8:	b.ls	27414 <PyInit__decimal@@Base+0x208b0>  // b.plast
   273ac:	ldr	x10, [x24, #120]
   273b0:	cmp	x10, x9
   273b4:	mov	w9, #0xf                   	// #15
   273b8:	b	27420 <PyInit__decimal@@Base+0x208bc>
   273bc:	ldr	x10, [x24, #24]
   273c0:	cmp	x10, x9
   273c4:	mov	w9, #0x3                   	// #3
   273c8:	b	27420 <PyInit__decimal@@Base+0x208bc>
   273cc:	ldr	x10, [x24, #104]
   273d0:	cmp	x10, x9
   273d4:	b.ls	27478 <PyInit__decimal@@Base+0x20914>  // b.plast
   273d8:	ldr	x10, [x24, #96]
   273dc:	cmp	x10, x9
   273e0:	mov	w9, #0xc                   	// #12
   273e4:	b	27420 <PyInit__decimal@@Base+0x208bc>
   273e8:	ldr	x10, [x24, #64]
   273ec:	cmp	x10, x9
   273f0:	b.ls	27480 <PyInit__decimal@@Base+0x2091c>  // b.plast
   273f4:	ldr	x10, [x24, #56]
   273f8:	cmp	x10, x9
   273fc:	mov	w9, #0x7                   	// #7
   27400:	b	27420 <PyInit__decimal@@Base+0x208bc>
   27404:	ldr	x10, [x24, #152]
   27408:	cmp	x10, x9
   2740c:	cinc	x9, x28, ls  // ls = plast
   27410:	b	27424 <PyInit__decimal@@Base+0x208c0>
   27414:	ldr	x10, [x24, #136]
   27418:	cmp	x10, x9
   2741c:	mov	w9, #0x11                  	// #17
   27420:	cinc	x9, x9, ls  // ls = plast
   27424:	madd	x8, x8, x28, x9
   27428:	sub	x8, x8, #0x13
   2742c:	add	x1, sp, #0x270
   27430:	add	x3, sp, #0x8
   27434:	sub	x4, x29, #0x40
   27438:	mov	w0, #0x1                   	// #1
   2743c:	mov	x2, x20
   27440:	mov	x5, x22
   27444:	str	x8, [sp, #24]
   27448:	bl	257a0 <PyInit__decimal@@Base+0x1ec3c>
   2744c:	add	x0, sp, #0x40
   27450:	add	x1, sp, #0x40
   27454:	add	x2, sp, #0x270
   27458:	sub	x4, x29, #0x40
   2745c:	mov	x3, x21
   27460:	mov	x5, x22
   27464:	bl	275c8 <PyInit__decimal@@Base+0x20a64>
   27468:	subs	x26, x26, #0x1
   2746c:	b.lt	27488 <PyInit__decimal@@Base+0x20924>  // b.tstop
   27470:	ldr	x9, [sp, #48]
   27474:	b	2730c <PyInit__decimal@@Base+0x207a8>
   27478:	mov	w9, #0xe                   	// #14
   2747c:	b	27424 <PyInit__decimal@@Base+0x208c0>
   27480:	mov	w9, #0x9                   	// #9
   27484:	b	27424 <PyInit__decimal@@Base+0x208c0>
   27488:	ldr	x2, [x24, x23, lsl #3]
   2748c:	add	x1, sp, #0x40
   27490:	sub	x4, x29, #0x40
   27494:	mov	x0, x20
   27498:	mov	w3, wzr
   2749c:	mov	x5, x19
   274a0:	bl	2f794 <PyInit__decimal@@Base+0x28c30>
   274a4:	ldrb	w8, [sp, #624]
   274a8:	cmp	w8, #0x1f
   274ac:	b.hi	274c4 <PyInit__decimal@@Base+0x20960>  // b.pmore
   274b0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   274b4:	ldr	x8, [x8, #1384]
   274b8:	ldr	x0, [sp, #664]
   274bc:	blr	x8
   274c0:	ldrb	w8, [sp, #624]
   274c4:	tbnz	w8, #4, 274d8 <PyInit__decimal@@Base+0x20974>
   274c8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   274cc:	ldr	x8, [x8, #1384]
   274d0:	add	x0, sp, #0x270
   274d4:	blr	x8
   274d8:	ldrb	w8, [sp, #64]
   274dc:	cmp	w8, #0x1f
   274e0:	b.hi	274f8 <PyInit__decimal@@Base+0x20994>  // b.pmore
   274e4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   274e8:	ldr	x8, [x8, #1384]
   274ec:	ldr	x0, [sp, #104]
   274f0:	blr	x8
   274f4:	ldrb	w8, [sp, #64]
   274f8:	tbnz	w8, #4, 2750c <PyInit__decimal@@Base+0x209a8>
   274fc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   27500:	ldr	x8, [x8, #1384]
   27504:	add	x0, sp, #0x40
   27508:	blr	x8
   2750c:	ldur	w8, [x29, #-36]
   27510:	ldr	w9, [x19]
   27514:	and	w8, w8, #0x3fe
   27518:	orr	w8, w8, w9
   2751c:	mov	w9, #0x1040                	// #4160
   27520:	orr	w8, w8, w9
   27524:	str	w8, [x19]
   27528:	add	sp, sp, #0x510
   2752c:	ldp	x20, x19, [sp, #80]
   27530:	ldp	x22, x21, [sp, #64]
   27534:	ldp	x24, x23, [sp, #48]
   27538:	ldp	x26, x25, [sp, #32]
   2753c:	ldp	x28, x27, [sp, #16]
   27540:	ldp	x29, x30, [sp], #96
   27544:	ret
   27548:	mov	w10, #0xe                   	// #14
   2754c:	b	27264 <PyInit__decimal@@Base+0x20700>
   27550:	mov	w10, #0x9                   	// #9
   27554:	b	27264 <PyInit__decimal@@Base+0x20700>
   27558:	stp	x29, x30, [sp, #-32]!
   2755c:	stp	x20, x19, [sp, #16]
   27560:	mov	x29, sp
   27564:	ldrb	w8, [x0]
   27568:	tst	w8, #0xe
   2756c:	b.eq	2757c <PyInit__decimal@@Base+0x20a18>  // b.none
   27570:	ldp	x20, x19, [sp, #16]
   27574:	ldp	x29, x30, [sp], #32
   27578:	ret
   2757c:	ldr	x8, [x0, #40]
   27580:	ldr	x9, [x0, #24]
   27584:	mov	x19, x0
   27588:	add	x8, x8, x9, lsl #3
   2758c:	ldur	x8, [x8, #-8]
   27590:	cbz	x8, 27570 <PyInit__decimal@@Base+0x20a0c>
   27594:	ldr	x8, [x19, #16]
   27598:	ldr	x9, [x1]
   2759c:	subs	x20, x9, x8
   275a0:	b.le	27570 <PyInit__decimal@@Base+0x20a0c>
   275a4:	mov	x3, x2
   275a8:	mov	x0, x19
   275ac:	mov	x1, x19
   275b0:	mov	x2, x20
   275b4:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   275b8:	ldr	x8, [x19, #8]
   275bc:	sub	x8, x8, x20
   275c0:	str	x8, [x19, #8]
   275c4:	b	27570 <PyInit__decimal@@Base+0x20a0c>
   275c8:	stp	x29, x30, [sp, #-80]!
   275cc:	str	x25, [sp, #16]
   275d0:	stp	x24, x23, [sp, #32]
   275d4:	stp	x22, x21, [sp, #48]
   275d8:	stp	x20, x19, [sp, #64]
   275dc:	mov	x29, sp
   275e0:	mov	x19, x5
   275e4:	mov	x21, x4
   275e8:	mov	x24, x2
   275ec:	mov	x25, x1
   275f0:	mov	x22, x0
   275f4:	cmp	x0, x3
   275f8:	str	wzr, [x29, #28]
   275fc:	b.eq	2760c <PyInit__decimal@@Base+0x20aa8>  // b.none
   27600:	mov	x23, x3
   27604:	mov	x20, xzr
   27608:	b	27620 <PyInit__decimal@@Base+0x20abc>
   2760c:	mov	x0, x22
   27610:	bl	22020 <PyInit__decimal@@Base+0x1b4bc>
   27614:	mov	x23, x0
   27618:	mov	x20, x0
   2761c:	cbz	x0, 276b4 <PyInit__decimal@@Base+0x20b50>
   27620:	add	x4, x29, #0x1c
   27624:	mov	x0, x22
   27628:	mov	x1, x25
   2762c:	mov	x2, x24
   27630:	mov	x3, x21
   27634:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   27638:	ldrb	w8, [x29, #29]
   2763c:	tbnz	w8, #0, 27658 <PyInit__decimal@@Base+0x20af4>
   27640:	add	x4, x29, #0x1c
   27644:	mov	x0, x22
   27648:	mov	x1, x22
   2764c:	mov	x2, x23
   27650:	mov	x3, x21
   27654:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   27658:	cbz	x20, 2768c <PyInit__decimal@@Base+0x20b28>
   2765c:	ldrb	w8, [x20]
   27660:	adrp	x21, 4c000 <PyInit__decimal@@Base+0x4549c>
   27664:	cmp	w8, #0x1f
   27668:	b.hi	2767c <PyInit__decimal@@Base+0x20b18>  // b.pmore
   2766c:	ldr	x8, [x21, #1384]
   27670:	ldr	x0, [x20, #40]
   27674:	blr	x8
   27678:	ldrb	w8, [x20]
   2767c:	tbnz	w8, #4, 2768c <PyInit__decimal@@Base+0x20b28>
   27680:	ldr	x8, [x21, #1384]
   27684:	mov	x0, x20
   27688:	blr	x8
   2768c:	ldr	w8, [x29, #28]
   27690:	ldr	w9, [x19]
   27694:	orr	w8, w9, w8
   27698:	str	w8, [x19]
   2769c:	ldp	x20, x19, [sp, #64]
   276a0:	ldp	x22, x21, [sp, #48]
   276a4:	ldp	x24, x23, [sp, #32]
   276a8:	ldr	x25, [sp, #16]
   276ac:	ldp	x29, x30, [sp], #80
   276b0:	ret
   276b4:	mov	w1, #0x200                 	// #512
   276b8:	mov	x0, x22
   276bc:	mov	x2, x19
   276c0:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   276c4:	b	2769c <PyInit__decimal@@Base+0x20b38>
   276c8:	stp	x29, x30, [sp, #-96]!
   276cc:	stp	x28, x27, [sp, #16]
   276d0:	stp	x26, x25, [sp, #32]
   276d4:	stp	x24, x23, [sp, #48]
   276d8:	stp	x22, x21, [sp, #64]
   276dc:	stp	x20, x19, [sp, #80]
   276e0:	mov	x29, sp
   276e4:	sub	sp, sp, #0x220
   276e8:	ldrb	w8, [x1]
   276ec:	mov	x20, x4
   276f0:	mov	x21, x2
   276f4:	mov	x22, x1
   276f8:	tst	w8, #0xe
   276fc:	mov	x19, x0
   27700:	b.ne	27710 <PyInit__decimal@@Base+0x20bac>  // b.any
   27704:	ldrb	w8, [x21]
   27708:	tst	w8, #0xe
   2770c:	b.eq	2778c <PyInit__decimal@@Base+0x20c28>  // b.none
   27710:	mov	x0, x19
   27714:	mov	x1, x22
   27718:	mov	x2, x21
   2771c:	mov	x4, x20
   27720:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   27724:	cbnz	w0, 27f34 <PyInit__decimal@@Base+0x213d0>
   27728:	ldrb	w8, [x22]
   2772c:	tbnz	w8, #1, 27754 <PyInit__decimal@@Base+0x20bf0>
   27730:	tst	w8, #0xe
   27734:	b.ne	2774c <PyInit__decimal@@Base+0x20be8>  // b.any
   27738:	ldr	x9, [x22, #40]
   2773c:	ldr	x10, [x22, #24]
   27740:	add	x9, x9, x10, lsl #3
   27744:	ldur	x9, [x9, #-8]
   27748:	cbz	x9, 27a34 <PyInit__decimal@@Base+0x20ed0>
   2774c:	ldrb	w9, [x21]
   27750:	b	27774 <PyInit__decimal@@Base+0x20c10>
   27754:	ldrb	w9, [x21]
   27758:	tst	w9, #0xe
   2775c:	b.ne	27774 <PyInit__decimal@@Base+0x20c10>  // b.any
   27760:	ldr	x10, [x21, #40]
   27764:	ldr	x11, [x21, #24]
   27768:	add	x10, x10, x11, lsl #3
   2776c:	ldur	x10, [x10, #-8]
   27770:	cbz	x10, 27a34 <PyInit__decimal@@Base+0x20ed0>
   27774:	eor	w8, w9, w8
   27778:	and	w1, w8, #0x1
   2777c:	mov	w2, #0x2                   	// #2
   27780:	mov	x0, x19
   27784:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   27788:	b	27f34 <PyInit__decimal@@Base+0x213d0>
   2778c:	ldr	x8, [x21, #24]
   27790:	ldr	x9, [x22, #24]
   27794:	adrp	x2, 4c000 <PyInit__decimal@@Base+0x4549c>
   27798:	cmp	x8, x9
   2779c:	csel	x28, x21, x22, gt
   277a0:	csel	x27, x22, x21, gt
   277a4:	ldr	x26, [x28, #24]
   277a8:	ldr	x25, [x27, #24]
   277ac:	cmp	x26, #0x1
   277b0:	add	x23, x25, x26
   277b4:	str	x23, [sp, #16]
   277b8:	b.ne	2784c <PyInit__decimal@@Base+0x20ce8>  // b.any
   277bc:	ldr	x8, [x28, #40]
   277c0:	ldr	x9, [x27, #40]
   277c4:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   277c8:	ldr	x11, [x11, #3856]
   277cc:	ldr	x8, [x8]
   277d0:	ldr	x9, [x9]
   277d4:	mov	x10, #0x89e80000            	// #2313682944
   277d8:	movk	x10, #0x2304, lsl #32
   277dc:	movk	x10, #0x8ac7, lsl #48
   277e0:	umulh	x13, x9, x8
   277e4:	mul	x8, x9, x8
   277e8:	sub	x9, x13, x8, asr #63
   277ec:	umulh	x14, x9, x11
   277f0:	mul	x9, x9, x11
   277f4:	and	x11, x10, x8, asr #63
   277f8:	add	x11, x11, x8
   277fc:	mvn	x11, x11
   27800:	add	x14, x14, x13
   27804:	cmp	x11, x9
   27808:	cinc	x9, x14, cc  // cc = lo, ul, last
   2780c:	mvn	x9, x9
   27810:	mov	x12, #0x76180000            	// #1981284352
   27814:	umulh	x11, x9, x10
   27818:	mul	x14, x9, x10
   2781c:	movk	x12, #0xdcfb, lsl #32
   27820:	adds	x8, x14, x8
   27824:	add	x11, x13, x11
   27828:	ldr	x24, [x19, #40]
   2782c:	movk	x12, #0x7538, lsl #48
   27830:	cinc	x11, x11, cs  // cs = hs, nlast
   27834:	add	x11, x11, x12
   27838:	and	x10, x11, x10
   2783c:	sub	x9, x11, x9
   27840:	add	x8, x10, x8
   27844:	stp	x8, x9, [x24]
   27848:	b	27d64 <PyInit__decimal@@Base+0x21200>
   2784c:	cmp	x23, #0x40
   27850:	b.hi	27a3c <PyInit__decimal@@Base+0x20ed8>  // b.pmore
   27854:	cmp	x26, #0x2
   27858:	b.ne	27a80 <PyInit__decimal@@Base+0x20f1c>  // b.any
   2785c:	ldr	x11, [x28, #40]
   27860:	ldr	x12, [x27, #40]
   27864:	mov	x8, #0x89e80000            	// #2313682944
   27868:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2786c:	ldr	x13, [x11]
   27870:	ldr	x14, [x12]
   27874:	movk	x8, #0x2304, lsl #32
   27878:	ldr	x10, [x10, #3856]
   2787c:	movk	x8, #0x8ac7, lsl #48
   27880:	umulh	x15, x14, x13
   27884:	mul	x13, x14, x13
   27888:	and	x14, x8, x13, asr #63
   2788c:	sub	x16, x15, x13, asr #63
   27890:	add	x14, x14, x13
   27894:	umulh	x17, x16, x10
   27898:	mul	x16, x16, x10
   2789c:	mvn	x14, x14
   278a0:	add	x17, x17, x15
   278a4:	cmp	x14, x16
   278a8:	cinc	x14, x17, cc  // cc = lo, ul, last
   278ac:	mvn	x14, x14
   278b0:	mov	x9, #0x76180000            	// #1981284352
   278b4:	umulh	x16, x14, x8
   278b8:	mul	x17, x14, x8
   278bc:	movk	x9, #0xdcfb, lsl #32
   278c0:	adds	x13, x17, x13
   278c4:	add	x15, x15, x16
   278c8:	movk	x9, #0x7538, lsl #48
   278cc:	cinc	x15, x15, cs  // cs = hs, nlast
   278d0:	add	x15, x15, x9
   278d4:	sub	x14, x15, x14
   278d8:	and	x15, x15, x8
   278dc:	add	x13, x15, x13
   278e0:	stp	x13, x14, [sp, #24]
   278e4:	ldr	x13, [x11, #8]
   278e8:	ldr	x15, [x12]
   278ec:	umulh	x16, x15, x13
   278f0:	mul	x13, x15, x13
   278f4:	adds	x13, x14, x13
   278f8:	cinc	x14, x16, cs  // cs = hs, nlast
   278fc:	and	x15, x8, x13, asr #63
   27900:	add	x15, x15, x13
   27904:	sub	x16, x14, x13, asr #63
   27908:	umulh	x17, x16, x10
   2790c:	mul	x16, x16, x10
   27910:	mvn	x15, x15
   27914:	cmp	x15, x16
   27918:	add	x15, x14, x17
   2791c:	cinc	x15, x15, cc  // cc = lo, ul, last
   27920:	mvn	x15, x15
   27924:	umulh	x16, x15, x8
   27928:	mul	x17, x15, x8
   2792c:	adds	x17, x13, x17
   27930:	add	x13, x14, x16
   27934:	cinc	x13, x13, cs  // cs = hs, nlast
   27938:	add	x14, x13, x9
   2793c:	sub	x13, x14, x15
   27940:	and	x14, x14, x8
   27944:	cmp	x25, #0x1
   27948:	add	x14, x14, x17
   2794c:	stp	x14, x13, [sp, #32]
   27950:	b.eq	27b7c <PyInit__decimal@@Base+0x21018>  // b.none
   27954:	ldr	x15, [x11]
   27958:	ldr	x16, [x12, #8]
   2795c:	umulh	x17, x16, x15
   27960:	mul	x15, x16, x15
   27964:	adds	x14, x14, x15
   27968:	cinc	x15, x17, cs  // cs = hs, nlast
   2796c:	and	x16, x8, x14, asr #63
   27970:	add	x16, x16, x14
   27974:	sub	x17, x15, x14, asr #63
   27978:	mul	x18, x17, x10
   2797c:	mvn	x16, x16
   27980:	umulh	x17, x17, x10
   27984:	cmp	x16, x18
   27988:	add	x16, x15, x9
   2798c:	add	x15, x15, x17
   27990:	cinc	x15, x15, cc  // cc = lo, ul, last
   27994:	mvn	x15, x15
   27998:	umulh	x17, x15, x8
   2799c:	mul	x18, x15, x8
   279a0:	adds	x14, x14, x18
   279a4:	add	x16, x16, x17
   279a8:	cinc	x16, x16, cs  // cs = hs, nlast
   279ac:	sub	x15, x16, x15
   279b0:	and	x16, x16, x8
   279b4:	add	x14, x16, x14
   279b8:	str	x15, [sp, #48]
   279bc:	str	x14, [sp, #32]
   279c0:	ldr	x11, [x11, #8]
   279c4:	ldr	x12, [x12, #8]
   279c8:	umulh	x14, x12, x11
   279cc:	mul	x11, x12, x11
   279d0:	adds	x11, x13, x11
   279d4:	cinc	x12, x14, cs  // cs = hs, nlast
   279d8:	adds	x11, x15, x11
   279dc:	cinc	x12, x12, cs  // cs = hs, nlast
   279e0:	and	x13, x8, x11, asr #63
   279e4:	add	x13, x13, x11
   279e8:	sub	x14, x12, x11, asr #63
   279ec:	umulh	x15, x14, x10
   279f0:	mul	x10, x14, x10
   279f4:	mvn	x13, x13
   279f8:	cmp	x13, x10
   279fc:	add	x10, x12, x15
   27a00:	cinc	x10, x10, cc  // cc = lo, ul, last
   27a04:	mvn	x10, x10
   27a08:	add	x9, x12, x9
   27a0c:	umulh	x12, x10, x8
   27a10:	mul	x13, x10, x8
   27a14:	adds	x11, x11, x13
   27a18:	add	x9, x9, x12
   27a1c:	cinc	x9, x9, cs  // cs = hs, nlast
   27a20:	and	x8, x9, x8
   27a24:	sub	x10, x9, x10
   27a28:	add	x8, x8, x11
   27a2c:	stp	x8, x10, [sp, #40]
   27a30:	b	27b7c <PyInit__decimal@@Base+0x21018>
   27a34:	mov	w1, #0x100                 	// #256
   27a38:	b	27eac <PyInit__decimal@@Base+0x21348>
   27a3c:	cmp	x25, #0x100
   27a40:	b.gt	27ac0 <PyInit__decimal@@Base+0x20f5c>
   27a44:	mov	w1, #0x8                   	// #8
   27a48:	mov	x0, x23
   27a4c:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   27a50:	cbz	x0, 27ea8 <PyInit__decimal@@Base+0x21344>
   27a54:	ldr	x3, [x27, #24]
   27a58:	mov	x24, x0
   27a5c:	cmp	x3, #0x1
   27a60:	b.ne	27c24 <PyInit__decimal@@Base+0x210c0>  // b.any
   27a64:	ldr	x8, [x27, #40]
   27a68:	ldr	x1, [x28, #40]
   27a6c:	ldr	x2, [x28, #24]
   27a70:	mov	x0, x24
   27a74:	ldr	x3, [x8]
   27a78:	bl	1addc <PyInit__decimal@@Base+0x14278>
   27a7c:	b	27d2c <PyInit__decimal@@Base+0x211c8>
   27a80:	mov	x24, x2
   27a84:	cbz	x23, 27a9c <PyInit__decimal@@Base+0x20f38>
   27a88:	lsl	x2, x23, #3
   27a8c:	add	x0, sp, #0x18
   27a90:	mov	w1, wzr
   27a94:	bl	6660 <memset@plt>
   27a98:	ldr	x25, [x27, #24]
   27a9c:	cmp	x25, #0x1
   27aa0:	b.ne	27b60 <PyInit__decimal@@Base+0x20ffc>  // b.any
   27aa4:	ldr	x8, [x27, #40]
   27aa8:	ldr	x1, [x28, #40]
   27aac:	ldr	x2, [x28, #24]
   27ab0:	add	x0, sp, #0x18
   27ab4:	ldr	x3, [x8]
   27ab8:	bl	1addc <PyInit__decimal@@Base+0x14278>
   27abc:	b	27b78 <PyInit__decimal@@Base+0x21014>
   27ac0:	cmp	x23, #0x400
   27ac4:	b.hi	27bb0 <PyInit__decimal@@Base+0x2104c>  // b.pmore
   27ac8:	mvn	x8, x25
   27acc:	cmp	x26, x8
   27ad0:	b.hi	27f64 <PyInit__decimal@@Base+0x21400>  // b.pmore
   27ad4:	add	x8, x26, #0x1
   27ad8:	lsr	x8, x8, #1
   27adc:	add	x8, x8, #0x1
   27ae0:	mov	w9, #0x3                   	// #3
   27ae4:	umulh	x9, x8, x9
   27ae8:	cmp	xzr, x9
   27aec:	b.ne	27f98 <PyInit__decimal@@Base+0x21434>  // b.any
   27af0:	ldr	x9, [x28, #40]
   27af4:	add	x8, x8, x8, lsl #1
   27af8:	mov	w1, #0x8                   	// #8
   27afc:	str	x9, [sp]
   27b00:	ldr	x9, [x27, #40]
   27b04:	str	x9, [sp, #8]
   27b08:	add	x9, x23, #0x1
   27b0c:	cmp	x8, x9
   27b10:	csel	x0, x8, x9, hi  // hi = pmore
   27b14:	str	x0, [sp, #16]
   27b18:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   27b1c:	cbz	x0, 27ea8 <PyInit__decimal@@Base+0x21344>
   27b20:	mov	x24, x0
   27b24:	mov	w1, #0x10                  	// #16
   27b28:	mov	x0, x26
   27b2c:	bl	2fd1c <PyInit__decimal@@Base+0x291b8>
   27b30:	cbz	x0, 27cc8 <PyInit__decimal@@Base+0x21164>
   27b34:	mov	w1, #0x8                   	// #8
   27b38:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   27b3c:	cbz	x0, 27cb4 <PyInit__decimal@@Base+0x21150>
   27b40:	ldp	x1, x2, [sp]
   27b44:	mov	x23, x0
   27b48:	mov	x0, x24
   27b4c:	mov	x3, x23
   27b50:	mov	x4, x26
   27b54:	mov	x5, x25
   27b58:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   27b5c:	b	27d1c <PyInit__decimal@@Base+0x211b8>
   27b60:	ldr	x1, [x27, #40]
   27b64:	ldr	x2, [x28, #40]
   27b68:	ldr	x4, [x28, #24]
   27b6c:	add	x0, sp, #0x18
   27b70:	mov	x3, x25
   27b74:	bl	1ae80 <PyInit__decimal@@Base+0x1431c>
   27b78:	mov	x2, x24
   27b7c:	ldr	x9, [x2, #1352]
   27b80:	ldr	x8, [x19, #32]
   27b84:	cmp	x9, x23
   27b88:	csel	x1, x23, x9, lt  // lt = tstop
   27b8c:	cmp	x1, x8
   27b90:	b.eq	27bfc <PyInit__decimal@@Base+0x21098>  // b.none
   27b94:	ldrb	w9, [x19]
   27b98:	tbnz	w9, #5, 27bdc <PyInit__decimal@@Base+0x21078>
   27b9c:	mov	x24, x2
   27ba0:	mov	x0, x19
   27ba4:	mov	x2, x20
   27ba8:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   27bac:	b	27bf4 <PyInit__decimal@@Base+0x21090>
   27bb0:	ldr	x0, [x28, #40]
   27bb4:	ldr	x1, [x27, #40]
   27bb8:	mov	x8, #0x300000000           	// #12884901888
   27bbc:	cmp	x23, x8
   27bc0:	b.hi	27c3c <PyInit__decimal@@Base+0x210d8>  // b.pmore
   27bc4:	add	x4, sp, #0x10
   27bc8:	mov	x2, x26
   27bcc:	mov	x3, x25
   27bd0:	bl	2f950 <PyInit__decimal@@Base+0x28dec>
   27bd4:	mov	x24, x0
   27bd8:	b	27d2c <PyInit__decimal@@Base+0x211c8>
   27bdc:	cmp	x1, x8
   27be0:	b.le	27bfc <PyInit__decimal@@Base+0x21098>
   27be4:	mov	x24, x2
   27be8:	mov	x0, x19
   27bec:	mov	x2, x20
   27bf0:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   27bf4:	mov	x2, x24
   27bf8:	cbz	w0, 27f34 <PyInit__decimal@@Base+0x213d0>
   27bfc:	ldr	x24, [x19, #40]
   27c00:	cbz	x23, 27d64 <PyInit__decimal@@Base+0x21200>
   27c04:	mov	x8, xzr
   27c08:	add	x9, sp, #0x18
   27c0c:	ldr	x10, [x9, x8, lsl #3]
   27c10:	str	x10, [x24, x8, lsl #3]
   27c14:	add	x8, x8, #0x1
   27c18:	cmp	x23, x8
   27c1c:	b.ne	27c0c <PyInit__decimal@@Base+0x210a8>  // b.any
   27c20:	b	27d64 <PyInit__decimal@@Base+0x21200>
   27c24:	ldr	x1, [x27, #40]
   27c28:	ldr	x2, [x28, #40]
   27c2c:	ldr	x4, [x28, #24]
   27c30:	mov	x0, x24
   27c34:	bl	1ae80 <PyInit__decimal@@Base+0x1431c>
   27c38:	b	27d2c <PyInit__decimal@@Base+0x211c8>
   27c3c:	mvn	x8, x25
   27c40:	cmp	x26, x8
   27c44:	b.hi	27f64 <PyInit__decimal@@Base+0x21400>  // b.pmore
   27c48:	cmn	x23, #0x1
   27c4c:	b.eq	27f64 <PyInit__decimal@@Base+0x21400>  // b.none
   27c50:	add	x8, x26, #0x1
   27c54:	lsr	x8, x8, #1
   27c58:	add	x8, x8, #0x1
   27c5c:	mov	w9, #0x3                   	// #3
   27c60:	umulh	x9, x8, x9
   27c64:	cmp	xzr, x9
   27c68:	stp	x1, x0, [sp]
   27c6c:	b.ne	27f98 <PyInit__decimal@@Base+0x21434>  // b.any
   27c70:	add	x9, x23, #0x1
   27c74:	add	x8, x8, x8, lsl #1
   27c78:	cmp	x8, x9
   27c7c:	csel	x0, x8, x9, hi  // hi = pmore
   27c80:	mov	w1, #0x8                   	// #8
   27c84:	str	x0, [sp, #16]
   27c88:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   27c8c:	cbz	x0, 27ea8 <PyInit__decimal@@Base+0x21344>
   27c90:	mov	x24, x0
   27c94:	mov	x1, #0x180000000           	// #6442450944
   27c98:	mov	x0, x26
   27c9c:	bl	2fd1c <PyInit__decimal@@Base+0x291b8>
   27ca0:	cbz	x0, 27ce4 <PyInit__decimal@@Base+0x21180>
   27ca4:	mov	w1, #0x8                   	// #8
   27ca8:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   27cac:	mov	x23, x0
   27cb0:	cbnz	x0, 27ce8 <PyInit__decimal@@Base+0x21184>
   27cb4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   27cb8:	ldr	x8, [x8, #1384]
   27cbc:	mov	x0, x24
   27cc0:	blr	x8
   27cc4:	b	27ea8 <PyInit__decimal@@Base+0x21344>
   27cc8:	ldp	x1, x2, [sp]
   27ccc:	mov	x0, x24
   27cd0:	mov	x3, xzr
   27cd4:	mov	x4, x26
   27cd8:	mov	x5, x25
   27cdc:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   27ce0:	b	27d2c <PyInit__decimal@@Base+0x211c8>
   27ce4:	mov	x23, xzr
   27ce8:	ldp	x2, x1, [sp]
   27cec:	mov	x0, x24
   27cf0:	mov	x3, x23
   27cf4:	mov	x4, x26
   27cf8:	mov	x5, x25
   27cfc:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   27d00:	cbnz	w0, 27d18 <PyInit__decimal@@Base+0x211b4>
   27d04:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   27d08:	ldr	x8, [x8, #1384]
   27d0c:	mov	x0, x24
   27d10:	blr	x8
   27d14:	mov	x24, xzr
   27d18:	cbz	x23, 27d2c <PyInit__decimal@@Base+0x211c8>
   27d1c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   27d20:	ldr	x8, [x8, #1384]
   27d24:	mov	x0, x23
   27d28:	blr	x8
   27d2c:	cbz	x24, 27ea8 <PyInit__decimal@@Base+0x21344>
   27d30:	ldrb	w8, [x19]
   27d34:	cmp	w8, #0x1f
   27d38:	b.hi	27d50 <PyInit__decimal@@Base+0x211ec>  // b.pmore
   27d3c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   27d40:	ldr	x8, [x8, #1384]
   27d44:	ldr	x0, [x19, #40]
   27d48:	blr	x8
   27d4c:	ldrb	w8, [x19]
   27d50:	ldr	x23, [sp, #16]
   27d54:	and	w8, w8, #0x1f
   27d58:	adrp	x2, 4c000 <PyInit__decimal@@Base+0x4549c>
   27d5c:	strb	w8, [x19]
   27d60:	stp	x23, x24, [x19, #32]
   27d64:	ldrb	w9, [x22]
   27d68:	ldrb	w10, [x21]
   27d6c:	ldrb	w8, [x19]
   27d70:	eor	w9, w10, w9
   27d74:	and	w10, w8, #0xf0
   27d78:	bfxil	w10, w9, #0, #1
   27d7c:	strb	w10, [x19]
   27d80:	ldr	x9, [x28, #8]
   27d84:	ldr	x10, [x27, #8]
   27d88:	add	x9, x10, x9
   27d8c:	sub	x10, x24, #0x8
   27d90:	str	x9, [x19, #8]
   27d94:	mov	x9, x23
   27d98:	cmp	x23, #0x2
   27d9c:	b.lt	27dac <PyInit__decimal@@Base+0x21248>  // b.tstop
   27da0:	ldr	x11, [x10, x9, lsl #3]
   27da4:	sub	x23, x9, #0x1
   27da8:	cbz	x11, 27d94 <PyInit__decimal@@Base+0x21230>
   27dac:	str	x9, [x19, #24]
   27db0:	ldr	x11, [x2, #1352]
   27db4:	ldr	x10, [x19, #32]
   27db8:	cmp	x11, x9
   27dbc:	csel	x1, x9, x11, lt  // lt = tstop
   27dc0:	cmp	x1, x10
   27dc4:	b.eq	27df0 <PyInit__decimal@@Base+0x2128c>  // b.none
   27dc8:	tbnz	w8, #5, 27ddc <PyInit__decimal@@Base+0x21278>
   27dcc:	mov	x0, x19
   27dd0:	mov	x2, x20
   27dd4:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   27dd8:	b	27df0 <PyInit__decimal@@Base+0x2128c>
   27ddc:	cmp	x1, x10
   27de0:	b.le	27df0 <PyInit__decimal@@Base+0x2128c>
   27de4:	mov	x0, x19
   27de8:	mov	x2, x20
   27dec:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   27df0:	ldr	x9, [x19, #40]
   27df4:	ldr	x8, [x19, #24]
   27df8:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   27dfc:	add	x10, x10, #0xe70
   27e00:	ldr	x11, [x10, #72]
   27e04:	add	x9, x9, x8, lsl #3
   27e08:	ldur	x9, [x9, #-8]
   27e0c:	cmp	x11, x9
   27e10:	b.ls	27e3c <PyInit__decimal@@Base+0x212d8>  // b.plast
   27e14:	ldr	x11, [x10, #32]
   27e18:	cmp	x11, x9
   27e1c:	b.ls	27e64 <PyInit__decimal@@Base+0x21300>  // b.plast
   27e20:	ldr	x11, [x10, #16]
   27e24:	cmp	x11, x9
   27e28:	b.ls	27ebc <PyInit__decimal@@Base+0x21358>  // b.plast
   27e2c:	ldr	x10, [x10, #8]
   27e30:	cmp	x10, x9
   27e34:	mov	w9, #0x1                   	// #1
   27e38:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27e3c:	ldr	x11, [x10, #112]
   27e40:	cmp	x11, x9
   27e44:	b.ls	27e80 <PyInit__decimal@@Base+0x2131c>  // b.plast
   27e48:	ldr	x11, [x10, #88]
   27e4c:	cmp	x11, x9
   27e50:	b.ls	27ecc <PyInit__decimal@@Base+0x21368>  // b.plast
   27e54:	ldr	x10, [x10, #80]
   27e58:	cmp	x10, x9
   27e5c:	mov	w9, #0xa                   	// #10
   27e60:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27e64:	ldr	x11, [x10, #48]
   27e68:	cmp	x11, x9
   27e6c:	b.ls	27ee8 <PyInit__decimal@@Base+0x21384>  // b.plast
   27e70:	ldr	x10, [x10, #40]
   27e74:	cmp	x10, x9
   27e78:	mov	w9, #0x5                   	// #5
   27e7c:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27e80:	ldr	x11, [x10, #144]
   27e84:	cmp	x11, x9
   27e88:	b.ls	27f04 <PyInit__decimal@@Base+0x213a0>  // b.plast
   27e8c:	ldr	x11, [x10, #128]
   27e90:	cmp	x11, x9
   27e94:	b.ls	27f14 <PyInit__decimal@@Base+0x213b0>  // b.plast
   27e98:	ldr	x10, [x10, #120]
   27e9c:	cmp	x10, x9
   27ea0:	mov	w9, #0xf                   	// #15
   27ea4:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27ea8:	mov	w1, #0x200                 	// #512
   27eac:	mov	x0, x19
   27eb0:	mov	x2, x20
   27eb4:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   27eb8:	b	27f34 <PyInit__decimal@@Base+0x213d0>
   27ebc:	ldr	x10, [x10, #24]
   27ec0:	cmp	x10, x9
   27ec4:	mov	w9, #0x3                   	// #3
   27ec8:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27ecc:	ldr	x11, [x10, #104]
   27ed0:	cmp	x11, x9
   27ed4:	b.ls	27f54 <PyInit__decimal@@Base+0x213f0>  // b.plast
   27ed8:	ldr	x10, [x10, #96]
   27edc:	cmp	x10, x9
   27ee0:	mov	w9, #0xc                   	// #12
   27ee4:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27ee8:	ldr	x11, [x10, #64]
   27eec:	cmp	x11, x9
   27ef0:	b.ls	27f5c <PyInit__decimal@@Base+0x213f8>  // b.plast
   27ef4:	ldr	x10, [x10, #56]
   27ef8:	cmp	x10, x9
   27efc:	mov	w9, #0x7                   	// #7
   27f00:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27f04:	ldr	x10, [x10, #152]
   27f08:	cmp	x10, x9
   27f0c:	mov	w9, #0x13                  	// #19
   27f10:	b	27f20 <PyInit__decimal@@Base+0x213bc>
   27f14:	ldr	x10, [x10, #136]
   27f18:	cmp	x10, x9
   27f1c:	mov	w9, #0x11                  	// #17
   27f20:	cinc	x9, x9, ls  // ls = plast
   27f24:	mov	w10, #0x13                  	// #19
   27f28:	madd	x8, x8, x10, x9
   27f2c:	sub	x8, x8, #0x13
   27f30:	str	x8, [x19, #16]
   27f34:	add	sp, sp, #0x220
   27f38:	ldp	x20, x19, [sp, #80]
   27f3c:	ldp	x22, x21, [sp, #64]
   27f40:	ldp	x24, x23, [sp, #48]
   27f44:	ldp	x26, x25, [sp, #32]
   27f48:	ldp	x28, x27, [sp, #16]
   27f4c:	ldp	x29, x30, [sp], #96
   27f50:	ret
   27f54:	mov	w9, #0xe                   	// #14
   27f58:	b	27f24 <PyInit__decimal@@Base+0x213c0>
   27f5c:	mov	w9, #0x9                   	// #9
   27f60:	b	27f24 <PyInit__decimal@@Base+0x213c0>
   27f64:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   27f68:	ldr	x19, [x19, #3904]
   27f6c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   27f70:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   27f74:	add	x1, x1, #0xba8
   27f78:	ldr	x0, [x19]
   27f7c:	add	x2, x2, #0xbb7
   27f80:	mov	w3, #0x253                 	// #595
   27f84:	bl	6a60 <fprintf@plt>
   27f88:	ldr	x3, [x19]
   27f8c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   27f90:	add	x0, x0, #0xc3d
   27f94:	b	27fc8 <PyInit__decimal@@Base+0x21464>
   27f98:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   27f9c:	ldr	x19, [x19, #3904]
   27fa0:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   27fa4:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   27fa8:	add	x1, x1, #0xba8
   27fac:	ldr	x0, [x19]
   27fb0:	add	x2, x2, #0xbb7
   27fb4:	mov	w3, #0x26c                 	// #620
   27fb8:	bl	6a60 <fprintf@plt>
   27fbc:	ldr	x3, [x19]
   27fc0:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   27fc4:	add	x0, x0, #0xc67
   27fc8:	mov	w1, #0x29                  	// #41
   27fcc:	mov	w2, #0x1                   	// #1
   27fd0:	bl	6920 <fwrite@plt>
   27fd4:	ldr	x1, [x19]
   27fd8:	mov	w0, #0xa                   	// #10
   27fdc:	bl	65a0 <fputc@plt>
   27fe0:	bl	67b0 <abort@plt>
   27fe4:	stp	x29, x30, [sp, #-80]!
   27fe8:	str	x28, [sp, #16]
   27fec:	stp	x24, x23, [sp, #32]
   27ff0:	stp	x22, x21, [sp, #48]
   27ff4:	stp	x20, x19, [sp, #64]
   27ff8:	mov	x29, sp
   27ffc:	sub	sp, sp, #0x4d0
   28000:	mov	w9, #0x30                  	// #48
   28004:	strb	w9, [sp, #576]
   28008:	mov	w9, #0x40                  	// #64
   2800c:	str	x9, [sp, #608]
   28010:	add	x9, sp, #0x270
   28014:	str	x9, [sp, #616]
   28018:	mov	w9, #0x90                  	// #144
   2801c:	strb	w9, [sp, #520]
   28020:	mov	w9, #0x1                   	// #1
   28024:	add	x8, sp, #0x208
   28028:	dup	v0.2d, x9
   2802c:	adrp	x9, 31000 <PyInit__decimal@@Base+0x2a49c>
   28030:	stur	q0, [x8, #24]
   28034:	ldr	q0, [x9, #1984]
   28038:	mov	x19, x2
   2803c:	mov	x21, x1
   28040:	mov	w9, #0xa                   	// #10
   28044:	stur	q0, [x8, #8]
   28048:	mov	w8, #0x4c0                 	// #1216
   2804c:	sub	x8, x8, x1
   28050:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   28054:	str	x9, [sp, #568]
   28058:	add	x9, sp, #0x238
   2805c:	bic	x2, x8, x8, asr #63
   28060:	add	x1, x1, #0xc58
   28064:	mov	x3, x19
   28068:	mov	x20, x0
   2806c:	str	xzr, [sp, #584]
   28070:	str	xzr, [sp, #592]
   28074:	str	xzr, [sp, #600]
   28078:	str	x9, [sp, #560]
   2807c:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   28080:	cmn	x0, #0x1
   28084:	b.eq	280e4 <PyInit__decimal@@Base+0x21580>  // b.none
   28088:	ldr	x8, [x20, #16]
   2808c:	mov	w9, #0x1                   	// #1
   28090:	mov	x22, x0
   28094:	sub	x0, x29, #0x60
   28098:	sub	x8, x9, x8
   2809c:	str	x8, [x20, #8]
   280a0:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   280a4:	cmp	x21, #0x4bf
   280a8:	b.gt	280f8 <PyInit__decimal@@Base+0x21594>
   280ac:	ldur	w8, [x29, #-60]
   280b0:	stur	x21, [x29, #-96]
   280b4:	cmp	w8, #0x7
   280b8:	b.hi	28498 <PyInit__decimal@@Base+0x21934>  // b.pmore
   280bc:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   280c0:	add	x9, x9, #0x1d9
   280c4:	adr	x10, 280d4 <PyInit__decimal@@Base+0x21570>
   280c8:	ldrb	w11, [x9, x8]
   280cc:	add	x10, x10, x11, lsl #2
   280d0:	br	x10
   280d4:	cmp	x22, #0x0
   280d8:	cset	w8, ne  // ne = any
   280dc:	cbnz	w8, 282e8 <PyInit__decimal@@Base+0x21784>
   280e0:	b	28498 <PyInit__decimal@@Base+0x21934>
   280e4:	mov	w1, #0x200                 	// #512
   280e8:	mov	x0, x20
   280ec:	mov	x2, x19
   280f0:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   280f4:	b	284a8 <PyInit__decimal@@Base+0x21944>
   280f8:	sub	x0, x29, #0x30
   280fc:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   28100:	mov	w8, #0x8                   	// #8
   28104:	stur	w8, [x29, #-12]
   28108:	ldr	x8, [x20, #8]
   2810c:	add	x10, x21, #0x2
   28110:	neg	x8, x8
   28114:	cmp	x10, x8
   28118:	b.le	28238 <PyInit__decimal@@Base+0x216d4>
   2811c:	mov	w9, #0xffffffff            	// #-1
   28120:	add	x11, sp, #0x8
   28124:	add	x12, x10, #0x2
   28128:	add	x10, x10, #0x3
   2812c:	cmp	x12, #0x0
   28130:	csel	x10, x10, x12, lt  // lt = tstop
   28134:	asr	x10, x10, #1
   28138:	add	w9, w9, #0x1
   2813c:	cmp	x10, x8
   28140:	str	x10, [x11, w9, sxtw #3]
   28144:	b.gt	28124 <PyInit__decimal@@Base+0x215c0>
   28148:	tbnz	w9, #31, 28238 <PyInit__decimal@@Base+0x216d4>
   2814c:	ldrb	w8, [x20]
   28150:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
   28154:	mov	w23, w9
   28158:	add	x24, sp, #0x8
   2815c:	add	x22, x22, #0xc88
   28160:	ldr	x9, [x24, x23, lsl #3]
   28164:	eor	w8, w8, #0x1
   28168:	add	x0, sp, #0x240
   2816c:	sub	x2, x29, #0x30
   28170:	lsl	x9, x9, #1
   28174:	add	x9, x9, #0x3
   28178:	mov	x1, x20
   2817c:	mov	x3, x19
   28180:	stur	x9, [x29, #-48]
   28184:	strb	w8, [x20]
   28188:	bl	26f40 <PyInit__decimal@@Base+0x203dc>
   2818c:	ldrb	w8, [x20]
   28190:	add	x0, sp, #0x240
   28194:	add	x1, sp, #0x208
   28198:	add	x2, sp, #0x240
   2819c:	eor	w8, w8, #0x1
   281a0:	sub	x3, x29, #0x30
   281a4:	mov	x4, x19
   281a8:	strb	w8, [x20]
   281ac:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   281b0:	add	x0, sp, #0x240
   281b4:	sub	x1, x29, #0x30
   281b8:	mov	x2, x19
   281bc:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   281c0:	add	x0, sp, #0x240
   281c4:	add	x1, sp, #0x240
   281c8:	sub	x3, x29, #0x60
   281cc:	mov	x2, x22
   281d0:	mov	x4, x19
   281d4:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   281d8:	add	x2, sp, #0x240
   281dc:	sub	x3, x29, #0x60
   281e0:	mov	x0, x20
   281e4:	mov	x1, x20
   281e8:	mov	x4, x19
   281ec:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   281f0:	ldrb	w8, [x20]
   281f4:	tst	w8, #0xe
   281f8:	b.ne	28204 <PyInit__decimal@@Base+0x216a0>  // b.any
   281fc:	subs	x23, x23, #0x1
   28200:	b.ge	28160 <PyInit__decimal@@Base+0x215fc>  // b.tcont
   28204:	ldrb	w8, [sp, #576]
   28208:	cmp	w8, #0x1f
   2820c:	b.hi	28224 <PyInit__decimal@@Base+0x216c0>  // b.pmore
   28210:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28214:	ldr	x8, [x8, #1384]
   28218:	ldr	x0, [sp, #616]
   2821c:	blr	x8
   28220:	ldrb	w8, [sp, #576]
   28224:	tbnz	w8, #4, 28238 <PyInit__decimal@@Base+0x216d4>
   28228:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2822c:	ldr	x8, [x8, #1384]
   28230:	add	x0, sp, #0x240
   28234:	blr	x8
   28238:	sub	x1, x29, #0x60
   2823c:	mov	x0, x20
   28240:	mov	x2, x19
   28244:	stur	x21, [x29, #-96]
   28248:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2824c:	b	284a8 <PyInit__decimal@@Base+0x21944>
   28250:	cbz	x22, 28498 <PyInit__decimal@@Base+0x21934>
   28254:	ldrb	w8, [x20]
   28258:	mvn	w8, w8
   2825c:	b	28298 <PyInit__decimal@@Base+0x21734>
   28260:	cbz	x22, 28498 <PyInit__decimal@@Base+0x21934>
   28264:	ldrb	w8, [x20]
   28268:	b	28298 <PyInit__decimal@@Base+0x21734>
   2826c:	cmp	x22, #0x4
   28270:	b	28278 <PyInit__decimal@@Base+0x21714>
   28274:	cmp	x22, #0x5
   28278:	cset	w8, hi  // hi = pmore
   2827c:	cbnz	w8, 282e8 <PyInit__decimal@@Base+0x21784>
   28280:	b	28498 <PyInit__decimal@@Base+0x21934>
   28284:	cmp	x22, #0x5
   28288:	b.hi	282e8 <PyInit__decimal@@Base+0x21784>  // b.pmore
   2828c:	b.ne	28498 <PyInit__decimal@@Base+0x21934>  // b.any
   28290:	ldr	x8, [x20, #40]
   28294:	ldr	w8, [x8]
   28298:	and	w8, w8, #0x1
   2829c:	cbnz	w8, 282e8 <PyInit__decimal@@Base+0x21784>
   282a0:	b	28498 <PyInit__decimal@@Base+0x21934>
   282a4:	ldr	x8, [x20, #40]
   282a8:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   282ac:	movk	x9, #0xcccd
   282b0:	mov	w10, #0xa                   	// #10
   282b4:	ldr	x8, [x8]
   282b8:	cmp	x22, #0x0
   282bc:	cset	w11, ne  // ne = any
   282c0:	umulh	x9, x8, x9
   282c4:	lsr	x9, x9, #3
   282c8:	msub	w8, w9, w10, w8
   282cc:	cmp	w8, #0x0
   282d0:	cset	w9, eq  // eq = none
   282d4:	cmp	w8, #0x5
   282d8:	cset	w8, eq  // eq = none
   282dc:	orr	w8, w9, w8
   282e0:	and	w8, w11, w8
   282e4:	cbz	w8, 28498 <PyInit__decimal@@Base+0x21934>
   282e8:	ldr	x0, [x20, #40]
   282ec:	ldr	x1, [x20, #24]
   282f0:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   282f4:	cbz	x0, 28330 <PyInit__decimal@@Base+0x217cc>
   282f8:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   282fc:	ldr	x10, [x9, #1352]
   28300:	ldp	x8, x9, [x20, #24]
   28304:	add	x11, x8, #0x1
   28308:	cmp	x10, x11
   2830c:	csinc	x1, x10, x8, ge  // ge = tcont
   28310:	cmp	x1, x9
   28314:	b.eq	28358 <PyInit__decimal@@Base+0x217f4>  // b.none
   28318:	ldrb	w10, [x20]
   2831c:	tbnz	w10, #5, 2833c <PyInit__decimal@@Base+0x217d8>
   28320:	mov	x0, x20
   28324:	mov	x2, x19
   28328:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2832c:	b	28350 <PyInit__decimal@@Base+0x217ec>
   28330:	ldr	x9, [x20, #40]
   28334:	ldr	x8, [x20, #24]
   28338:	b	28370 <PyInit__decimal@@Base+0x2180c>
   2833c:	cmp	x1, x9
   28340:	b.le	28358 <PyInit__decimal@@Base+0x217f4>
   28344:	mov	x0, x20
   28348:	mov	x2, x19
   2834c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   28350:	cbz	w0, 28498 <PyInit__decimal@@Base+0x21934>
   28354:	ldr	x8, [x20, #24]
   28358:	ldr	x9, [x20, #40]
   2835c:	mov	w10, #0x1                   	// #1
   28360:	str	x10, [x9, x8, lsl #3]
   28364:	ldr	x8, [x20, #24]
   28368:	add	x8, x8, #0x1
   2836c:	str	x8, [x20, #24]
   28370:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   28374:	add	x9, x9, x8, lsl #3
   28378:	add	x10, x10, #0xe70
   2837c:	ldur	x9, [x9, #-8]
   28380:	ldr	x11, [x10, #72]
   28384:	cmp	x11, x9
   28388:	b.ls	283b4 <PyInit__decimal@@Base+0x21850>  // b.plast
   2838c:	ldr	x11, [x10, #32]
   28390:	cmp	x11, x9
   28394:	b.ls	283dc <PyInit__decimal@@Base+0x21878>  // b.plast
   28398:	ldr	x11, [x10, #16]
   2839c:	cmp	x11, x9
   283a0:	b.ls	28420 <PyInit__decimal@@Base+0x218bc>  // b.plast
   283a4:	ldr	x10, [x10, #8]
   283a8:	cmp	x10, x9
   283ac:	mov	w9, #0x1                   	// #1
   283b0:	b	28484 <PyInit__decimal@@Base+0x21920>
   283b4:	ldr	x11, [x10, #112]
   283b8:	cmp	x11, x9
   283bc:	b.ls	283f8 <PyInit__decimal@@Base+0x21894>  // b.plast
   283c0:	ldr	x11, [x10, #88]
   283c4:	cmp	x11, x9
   283c8:	b.ls	28430 <PyInit__decimal@@Base+0x218cc>  // b.plast
   283cc:	ldr	x10, [x10, #80]
   283d0:	cmp	x10, x9
   283d4:	mov	w9, #0xa                   	// #10
   283d8:	b	28484 <PyInit__decimal@@Base+0x21920>
   283dc:	ldr	x11, [x10, #48]
   283e0:	cmp	x11, x9
   283e4:	b.ls	2844c <PyInit__decimal@@Base+0x218e8>  // b.plast
   283e8:	ldr	x10, [x10, #40]
   283ec:	cmp	x10, x9
   283f0:	mov	w9, #0x5                   	// #5
   283f4:	b	28484 <PyInit__decimal@@Base+0x21920>
   283f8:	ldr	x11, [x10, #144]
   283fc:	cmp	x11, x9
   28400:	b.ls	28468 <PyInit__decimal@@Base+0x21904>  // b.plast
   28404:	ldr	x11, [x10, #128]
   28408:	cmp	x11, x9
   2840c:	b.ls	28478 <PyInit__decimal@@Base+0x21914>  // b.plast
   28410:	ldr	x10, [x10, #120]
   28414:	cmp	x10, x9
   28418:	mov	w9, #0xf                   	// #15
   2841c:	b	28484 <PyInit__decimal@@Base+0x21920>
   28420:	ldr	x10, [x10, #24]
   28424:	cmp	x10, x9
   28428:	mov	w9, #0x3                   	// #3
   2842c:	b	28484 <PyInit__decimal@@Base+0x21920>
   28430:	ldr	x11, [x10, #104]
   28434:	cmp	x11, x9
   28438:	b.ls	284c4 <PyInit__decimal@@Base+0x21960>  // b.plast
   2843c:	ldr	x10, [x10, #96]
   28440:	cmp	x10, x9
   28444:	mov	w9, #0xc                   	// #12
   28448:	b	28484 <PyInit__decimal@@Base+0x21920>
   2844c:	ldr	x11, [x10, #64]
   28450:	cmp	x11, x9
   28454:	b.ls	284cc <PyInit__decimal@@Base+0x21968>  // b.plast
   28458:	ldr	x10, [x10, #56]
   2845c:	cmp	x10, x9
   28460:	mov	w9, #0x7                   	// #7
   28464:	b	28484 <PyInit__decimal@@Base+0x21920>
   28468:	ldr	x10, [x10, #152]
   2846c:	cmp	x10, x9
   28470:	mov	w9, #0x13                  	// #19
   28474:	b	28484 <PyInit__decimal@@Base+0x21920>
   28478:	ldr	x10, [x10, #136]
   2847c:	cmp	x10, x9
   28480:	mov	w9, #0x11                  	// #17
   28484:	cinc	x9, x9, ls  // ls = plast
   28488:	mov	w10, #0x13                  	// #19
   2848c:	madd	x8, x8, x10, x9
   28490:	sub	x8, x8, #0x13
   28494:	str	x8, [x20, #16]
   28498:	ldr	w8, [x19]
   2849c:	mov	w9, #0x1040                	// #4160
   284a0:	orr	w8, w8, w9
   284a4:	str	w8, [x19]
   284a8:	add	sp, sp, #0x4d0
   284ac:	ldp	x20, x19, [sp, #64]
   284b0:	ldp	x22, x21, [sp, #48]
   284b4:	ldp	x24, x23, [sp, #32]
   284b8:	ldr	x28, [sp, #16]
   284bc:	ldp	x29, x30, [sp], #80
   284c0:	ret
   284c4:	mov	w9, #0xe                   	// #14
   284c8:	b	28488 <PyInit__decimal@@Base+0x21924>
   284cc:	mov	w9, #0x9                   	// #9
   284d0:	b	28488 <PyInit__decimal@@Base+0x21924>
   284d4:	stp	x29, x30, [sp, #-48]!
   284d8:	str	x21, [sp, #16]
   284dc:	stp	x20, x19, [sp, #32]
   284e0:	mov	x29, sp
   284e4:	mov	x19, x4
   284e8:	mov	x20, x3
   284ec:	mov	x21, x0
   284f0:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   284f4:	mov	x0, x21
   284f8:	mov	x1, x20
   284fc:	mov	x2, x19
   28500:	ldp	x20, x19, [sp, #32]
   28504:	ldr	x21, [sp, #16]
   28508:	ldp	x29, x30, [sp], #48
   2850c:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   28510:	stp	x29, x30, [sp, #-80]!
   28514:	str	x28, [sp, #16]
   28518:	stp	x24, x23, [sp, #32]
   2851c:	stp	x22, x21, [sp, #48]
   28520:	stp	x20, x19, [sp, #64]
   28524:	mov	x29, sp
   28528:	sub	sp, sp, #0x8f0
   2852c:	ldrb	w8, [x1]
   28530:	mov	x20, x3
   28534:	mov	x21, x2
   28538:	mov	x22, x1
   2853c:	tst	w8, #0xe
   28540:	mov	x19, x0
   28544:	b.eq	28578 <PyInit__decimal@@Base+0x21a14>  // b.none
   28548:	mov	x0, x19
   2854c:	mov	x1, x22
   28550:	mov	x2, x21
   28554:	mov	x3, x20
   28558:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2855c:	cbnz	w0, 2873c <PyInit__decimal@@Base+0x21bd8>
   28560:	ldrb	w8, [x22]
   28564:	tbnz	w8, #0, 285fc <PyInit__decimal@@Base+0x21a98>
   28568:	mov	w2, #0x2                   	// #2
   2856c:	mov	x0, x19
   28570:	mov	w1, wzr
   28574:	b	28738 <PyInit__decimal@@Base+0x21bd4>
   28578:	ldr	x9, [x22, #40]
   2857c:	ldr	x10, [x22, #24]
   28580:	add	x9, x9, x10, lsl #3
   28584:	ldur	x9, [x9, #-8]
   28588:	cbz	x9, 28610 <PyInit__decimal@@Base+0x21aac>
   2858c:	tbnz	w8, #0, 285fc <PyInit__decimal@@Base+0x21a98>
   28590:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   28594:	add	x1, x1, #0xc88
   28598:	mov	x0, x22
   2859c:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   285a0:	cbz	w0, 28620 <PyInit__decimal@@Base+0x21abc>
   285a4:	ldp	x8, x9, [x22, #8]
   285a8:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   285ac:	add	x10, x10, #0xe70
   285b0:	ldr	x11, [x10, #72]
   285b4:	add	x8, x8, x9
   285b8:	sub	x8, x8, #0x1
   285bc:	eor	x9, x8, x8, asr #63
   285c0:	lsl	x9, x9, #1
   285c4:	cmp	x9, #0x0
   285c8:	cneg	x9, x9, mi  // mi = first
   285cc:	cmp	x11, x9
   285d0:	b.ls	28638 <PyInit__decimal@@Base+0x21ad4>  // b.plast
   285d4:	ldr	x11, [x10, #32]
   285d8:	cmp	x11, x9
   285dc:	b.ls	28660 <PyInit__decimal@@Base+0x21afc>  // b.plast
   285e0:	ldr	x11, [x10, #16]
   285e4:	cmp	x11, x9
   285e8:	b.ls	286a4 <PyInit__decimal@@Base+0x21b40>  // b.plast
   285ec:	ldr	x10, [x10, #8]
   285f0:	cmp	x10, x9
   285f4:	mov	w9, #0x1                   	// #1
   285f8:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   285fc:	mov	w1, #0x100                 	// #256
   28600:	mov	x0, x19
   28604:	mov	x2, x20
   28608:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2860c:	b	2873c <PyInit__decimal@@Base+0x21bd8>
   28610:	mov	w1, #0x1                   	// #1
   28614:	mov	w2, #0x2                   	// #2
   28618:	mov	x0, x19
   2861c:	b	28738 <PyInit__decimal@@Base+0x21bd4>
   28620:	mov	x0, x19
   28624:	mov	w1, wzr
   28628:	mov	x2, xzr
   2862c:	mov	x3, xzr
   28630:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   28634:	b	2873c <PyInit__decimal@@Base+0x21bd8>
   28638:	ldr	x11, [x10, #112]
   2863c:	cmp	x11, x9
   28640:	b.ls	2867c <PyInit__decimal@@Base+0x21b18>  // b.plast
   28644:	ldr	x11, [x10, #88]
   28648:	cmp	x11, x9
   2864c:	b.ls	286b4 <PyInit__decimal@@Base+0x21b50>  // b.plast
   28650:	ldr	x10, [x10, #80]
   28654:	cmp	x10, x9
   28658:	mov	w9, #0xa                   	// #10
   2865c:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   28660:	ldr	x11, [x10, #48]
   28664:	cmp	x11, x9
   28668:	b.ls	286d0 <PyInit__decimal@@Base+0x21b6c>  // b.plast
   2866c:	ldr	x10, [x10, #40]
   28670:	cmp	x10, x9
   28674:	mov	w9, #0x5                   	// #5
   28678:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   2867c:	ldr	x11, [x10, #144]
   28680:	cmp	x11, x9
   28684:	b.ls	286ec <PyInit__decimal@@Base+0x21b88>  // b.plast
   28688:	ldr	x11, [x10, #128]
   2868c:	cmp	x11, x9
   28690:	b.ls	286fc <PyInit__decimal@@Base+0x21b98>  // b.plast
   28694:	ldr	x10, [x10, #120]
   28698:	cmp	x10, x9
   2869c:	mov	w9, #0xf                   	// #15
   286a0:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   286a4:	ldr	x10, [x10, #24]
   286a8:	cmp	x10, x9
   286ac:	mov	w9, #0x3                   	// #3
   286b0:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   286b4:	ldr	x11, [x10, #104]
   286b8:	cmp	x11, x9
   286bc:	b.ls	28a90 <PyInit__decimal@@Base+0x21f2c>  // b.plast
   286c0:	ldr	x10, [x10, #96]
   286c4:	cmp	x10, x9
   286c8:	mov	w9, #0xc                   	// #12
   286cc:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   286d0:	ldr	x11, [x10, #64]
   286d4:	cmp	x11, x9
   286d8:	b.ls	28a98 <PyInit__decimal@@Base+0x21f34>  // b.plast
   286dc:	ldr	x10, [x10, #56]
   286e0:	cmp	x10, x9
   286e4:	mov	w9, #0x7                   	// #7
   286e8:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   286ec:	ldr	x10, [x10, #152]
   286f0:	cmp	x10, x9
   286f4:	mov	w9, #0x13                  	// #19
   286f8:	b	28708 <PyInit__decimal@@Base+0x21ba4>
   286fc:	ldr	x10, [x10, #136]
   28700:	cmp	x10, x9
   28704:	mov	w9, #0x11                  	// #17
   28708:	cinc	x9, x9, ls  // ls = plast
   2870c:	ldr	x10, [x21, #8]
   28710:	sub	x9, x9, #0x1
   28714:	cmp	x10, x9
   28718:	b.ge	28758 <PyInit__decimal@@Base+0x21bf4>  // b.tcont
   2871c:	ldr	w9, [x20]
   28720:	mov	w10, #0x1840                	// #6208
   28724:	lsr	x1, x8, #63
   28728:	mov	w2, #0x2                   	// #2
   2872c:	orr	w9, w9, w10
   28730:	mov	x0, x19
   28734:	str	w9, [x20]
   28738:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2873c:	add	sp, sp, #0x8f0
   28740:	ldp	x20, x19, [sp, #64]
   28744:	ldp	x22, x21, [sp, #48]
   28748:	ldp	x24, x23, [sp, #32]
   2874c:	ldr	x28, [sp, #16]
   28750:	ldp	x29, x30, [sp], #80
   28754:	ret
   28758:	ldp	q1, q0, [x21, #16]
   2875c:	ldr	q2, [x21]
   28760:	mov	w8, #0x6                   	// #6
   28764:	stp	q1, q0, [x29, #-32]
   28768:	stur	q2, [x29, #-48]
   2876c:	stur	w8, [x29, #-12]
   28770:	ldr	w8, [x21, #44]
   28774:	cbz	w8, 287f8 <PyInit__decimal@@Base+0x21c94>
   28778:	add	x10, sp, #0x6c0
   2877c:	str	x10, [sp, #1720]
   28780:	add	x10, sp, #0x490
   28784:	str	x10, [sp, #1160]
   28788:	add	x10, sp, #0x260
   2878c:	mov	w8, #0x30                  	// #48
   28790:	mov	w9, #0x40                  	// #64
   28794:	str	x10, [sp, #600]
   28798:	add	x10, sp, #0x30
   2879c:	cmp	x19, x22
   287a0:	str	xzr, [sp, #1688]
   287a4:	str	xzr, [sp, #1696]
   287a8:	str	xzr, [sp, #1128]
   287ac:	str	xzr, [sp, #1136]
   287b0:	str	xzr, [sp, #568]
   287b4:	str	xzr, [sp, #576]
   287b8:	stp	xzr, xzr, [sp, #8]
   287bc:	strb	w8, [sp, #1680]
   287c0:	str	xzr, [sp, #1704]
   287c4:	str	x9, [sp, #1712]
   287c8:	strb	w8, [sp, #1120]
   287cc:	str	xzr, [sp, #1144]
   287d0:	str	x9, [sp, #1152]
   287d4:	strb	w8, [sp, #560]
   287d8:	str	xzr, [sp, #584]
   287dc:	str	x9, [sp, #592]
   287e0:	strb	w8, [sp]
   287e4:	stp	xzr, x9, [sp, #24]
   287e8:	str	x10, [sp, #40]
   287ec:	b.eq	28878 <PyInit__decimal@@Base+0x21d14>  // b.none
   287f0:	mov	x23, x22
   287f4:	b	28890 <PyInit__decimal@@Base+0x21d2c>
   287f8:	sub	x2, x29, #0x30
   287fc:	mov	x0, x19
   28800:	mov	x1, x22
   28804:	mov	x3, x20
   28808:	bl	28aac <PyInit__decimal@@Base+0x21f48>
   2880c:	ldp	x8, x10, [x19, #8]
   28810:	ldur	x9, [x29, #-32]
   28814:	add	x10, x8, x10
   28818:	sub	x10, x10, #0x1
   2881c:	cmp	x10, x9
   28820:	b.ge	28864 <PyInit__decimal@@Base+0x21d00>  // b.tcont
   28824:	ldrb	w10, [x19]
   28828:	tst	w10, #0xe
   2882c:	b.ne	28844 <PyInit__decimal@@Base+0x21ce0>  // b.any
   28830:	ldr	x10, [x19, #40]
   28834:	ldr	x11, [x19, #24]
   28838:	add	x10, x10, x11, lsl #3
   2883c:	ldur	x10, [x10, #-8]
   28840:	cbz	x10, 28864 <PyInit__decimal@@Base+0x21d00>
   28844:	ldur	x10, [x29, #-48]
   28848:	sub	x9, x9, x10
   2884c:	add	x9, x9, #0x1
   28850:	cmp	x8, x9
   28854:	b.ge	28864 <PyInit__decimal@@Base+0x21d00>  // b.tcont
   28858:	ldr	w8, [x20]
   2885c:	orr	w8, w8, #0x4000
   28860:	str	w8, [x20]
   28864:	sub	x1, x29, #0x30
   28868:	mov	x0, x19
   2886c:	mov	x2, x20
   28870:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   28874:	b	2873c <PyInit__decimal@@Base+0x21bd8>
   28878:	mov	x0, sp
   2887c:	mov	x1, x22
   28880:	mov	x2, x20
   28884:	mov	x23, sp
   28888:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2888c:	cbz	w0, 28aa0 <PyInit__decimal@@Base+0x21f3c>
   28890:	stur	wzr, [x29, #-8]
   28894:	ldr	x8, [x21]
   28898:	sub	x9, x29, #0x30
   2889c:	add	x22, x9, #0x1c
   288a0:	add	x24, x8, #0x3
   288a4:	sub	x2, x29, #0x30
   288a8:	mov	x0, x19
   288ac:	mov	x1, x23
   288b0:	mov	x3, x20
   288b4:	stur	x24, [x29, #-48]
   288b8:	bl	28aac <PyInit__decimal@@Base+0x21f48>
   288bc:	ldp	x8, x9, [x19, #8]
   288c0:	ldur	x10, [x29, #-48]
   288c4:	add	x0, sp, #0x230
   288c8:	mov	w2, #0x1                   	// #1
   288cc:	add	x8, x9, x8
   288d0:	sub	x3, x8, x10
   288d4:	mov	w1, wzr
   288d8:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   288dc:	ldr	x8, [x21]
   288e0:	add	x0, sp, #0x690
   288e4:	add	x2, sp, #0x230
   288e8:	sub	x3, x29, #0x30
   288ec:	mov	x1, x19
   288f0:	mov	x4, x22
   288f4:	stur	x8, [x29, #-48]
   288f8:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   288fc:	add	x0, sp, #0x460
   28900:	add	x2, sp, #0x230
   28904:	sub	x3, x29, #0x30
   28908:	mov	x1, x19
   2890c:	mov	x4, x22
   28910:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   28914:	ldrb	w8, [x19]
   28918:	tst	w8, #0xe
   2891c:	b.ne	2894c <PyInit__decimal@@Base+0x21de8>  // b.any
   28920:	ldr	x8, [x19, #40]
   28924:	ldr	x9, [x19, #24]
   28928:	add	x8, x8, x9, lsl #3
   2892c:	ldur	x8, [x8, #-8]
   28930:	cbz	x8, 2894c <PyInit__decimal@@Base+0x21de8>
   28934:	add	x0, sp, #0x690
   28938:	add	x1, sp, #0x460
   2893c:	mov	x2, x20
   28940:	bl	22128 <PyInit__decimal@@Base+0x1b5c4>
   28944:	add	x24, x24, #0x13
   28948:	cbnz	w0, 288a4 <PyInit__decimal@@Base+0x21d40>
   2894c:	ldr	w8, [x21, #40]
   28950:	ldur	x9, [x29, #-32]
   28954:	stur	w8, [x29, #-8]
   28958:	ldp	x8, x10, [x19, #8]
   2895c:	add	x10, x8, x10
   28960:	sub	x10, x10, #0x1
   28964:	cmp	x10, x9
   28968:	b.ge	289ac <PyInit__decimal@@Base+0x21e48>  // b.tcont
   2896c:	ldrb	w10, [x19]
   28970:	tst	w10, #0xe
   28974:	b.ne	2898c <PyInit__decimal@@Base+0x21e28>  // b.any
   28978:	ldr	x10, [x19, #40]
   2897c:	ldr	x11, [x19, #24]
   28980:	add	x10, x10, x11, lsl #3
   28984:	ldur	x10, [x10, #-8]
   28988:	cbz	x10, 289ac <PyInit__decimal@@Base+0x21e48>
   2898c:	ldur	x10, [x29, #-48]
   28990:	sub	x9, x9, x10
   28994:	add	x9, x9, #0x1
   28998:	cmp	x8, x9
   2899c:	b.ge	289ac <PyInit__decimal@@Base+0x21e48>  // b.tcont
   289a0:	ldr	w8, [x20]
   289a4:	orr	w8, w8, #0x4000
   289a8:	str	w8, [x20]
   289ac:	sub	x1, x29, #0x30
   289b0:	mov	x0, x19
   289b4:	mov	x2, x20
   289b8:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   289bc:	ldrb	w8, [sp, #1680]
   289c0:	cmp	w8, #0x1f
   289c4:	b.hi	289dc <PyInit__decimal@@Base+0x21e78>  // b.pmore
   289c8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   289cc:	ldr	x8, [x8, #1384]
   289d0:	ldr	x0, [sp, #1720]
   289d4:	blr	x8
   289d8:	ldrb	w8, [sp, #1680]
   289dc:	tbnz	w8, #4, 289f0 <PyInit__decimal@@Base+0x21e8c>
   289e0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   289e4:	ldr	x8, [x8, #1384]
   289e8:	add	x0, sp, #0x690
   289ec:	blr	x8
   289f0:	ldrb	w8, [sp, #1120]
   289f4:	cmp	w8, #0x1f
   289f8:	b.hi	28a10 <PyInit__decimal@@Base+0x21eac>  // b.pmore
   289fc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a00:	ldr	x8, [x8, #1384]
   28a04:	ldr	x0, [sp, #1160]
   28a08:	blr	x8
   28a0c:	ldrb	w8, [sp, #1120]
   28a10:	tbnz	w8, #4, 28a24 <PyInit__decimal@@Base+0x21ec0>
   28a14:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a18:	ldr	x8, [x8, #1384]
   28a1c:	add	x0, sp, #0x460
   28a20:	blr	x8
   28a24:	ldrb	w8, [sp, #560]
   28a28:	cmp	w8, #0x1f
   28a2c:	b.hi	28a44 <PyInit__decimal@@Base+0x21ee0>  // b.pmore
   28a30:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a34:	ldr	x8, [x8, #1384]
   28a38:	ldr	x0, [sp, #600]
   28a3c:	blr	x8
   28a40:	ldrb	w8, [sp, #560]
   28a44:	tbnz	w8, #4, 28a58 <PyInit__decimal@@Base+0x21ef4>
   28a48:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a4c:	ldr	x8, [x8, #1384]
   28a50:	add	x0, sp, #0x230
   28a54:	blr	x8
   28a58:	ldrb	w8, [sp]
   28a5c:	cmp	w8, #0x1f
   28a60:	b.hi	28a78 <PyInit__decimal@@Base+0x21f14>  // b.pmore
   28a64:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a68:	ldr	x8, [x8, #1384]
   28a6c:	ldr	x0, [sp, #40]
   28a70:	blr	x8
   28a74:	ldrb	w8, [sp]
   28a78:	tbnz	w8, #4, 2873c <PyInit__decimal@@Base+0x21bd8>
   28a7c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   28a80:	ldr	x8, [x8, #1384]
   28a84:	mov	x0, sp
   28a88:	blr	x8
   28a8c:	b	2873c <PyInit__decimal@@Base+0x21bd8>
   28a90:	mov	w9, #0xe                   	// #14
   28a94:	b	2870c <PyInit__decimal@@Base+0x21ba8>
   28a98:	mov	w9, #0x9                   	// #9
   28a9c:	b	2870c <PyInit__decimal@@Base+0x21ba8>
   28aa0:	mov	w1, #0x200                 	// #512
   28aa4:	mov	x0, x22
   28aa8:	b	28604 <PyInit__decimal@@Base+0x21aa0>
   28aac:	stp	x29, x30, [sp, #-96]!
   28ab0:	stp	x28, x27, [sp, #16]
   28ab4:	stp	x26, x25, [sp, #32]
   28ab8:	stp	x24, x23, [sp, #48]
   28abc:	stp	x22, x21, [sp, #64]
   28ac0:	stp	x20, x19, [sp, #80]
   28ac4:	mov	x29, sp
   28ac8:	sub	sp, sp, #0x8f0
   28acc:	add	x10, sp, #0x690
   28ad0:	str	x10, [sp, #1672]
   28ad4:	add	x10, sp, #0x460
   28ad8:	mov	x21, x2
   28adc:	mov	x20, x0
   28ae0:	mov	w8, #0x30                  	// #48
   28ae4:	mov	w9, #0x40                  	// #64
   28ae8:	str	x10, [sp, #1112]
   28aec:	add	x10, sp, #0x230
   28af0:	add	x0, sp, #0x660
   28af4:	mov	x2, x3
   28af8:	mov	x19, x3
   28afc:	mov	x22, x1
   28b00:	str	xzr, [sp, #1640]
   28b04:	str	xzr, [sp, #1648]
   28b08:	str	xzr, [sp, #1080]
   28b0c:	str	xzr, [sp, #1088]
   28b10:	str	xzr, [sp, #520]
   28b14:	str	xzr, [sp, #528]
   28b18:	strb	w8, [sp, #1632]
   28b1c:	str	xzr, [sp, #1656]
   28b20:	str	x9, [sp, #1664]
   28b24:	strb	w8, [sp, #1072]
   28b28:	str	xzr, [sp, #1096]
   28b2c:	str	x9, [sp, #1104]
   28b30:	strb	w8, [sp, #512]
   28b34:	str	xzr, [sp, #536]
   28b38:	str	x9, [sp, #544]
   28b3c:	str	x10, [sp, #552]
   28b40:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   28b44:	cbz	w0, 28e2c <PyInit__decimal@@Base+0x222c8>
   28b48:	ldr	x10, [sp, #1648]
   28b4c:	mov	x11, #0x435f                	// #17247
   28b50:	ldr	x8, [sp, #1672]
   28b54:	ldr	x9, [sp, #1656]
   28b58:	movk	x11, #0xd79, lsl #16
   28b5c:	movk	x11, #0x35e5, lsl #32
   28b60:	movk	x11, #0xd794, lsl #48
   28b64:	umulh	x11, x10, x11
   28b68:	mov	w12, #0x13                  	// #19
   28b6c:	add	x13, x8, x9, lsl #3
   28b70:	lsr	x11, x11, #4
   28b74:	msub	x10, x11, x12, x10
   28b78:	ldur	x23, [x13, #-8]
   28b7c:	cmp	x10, #0x0
   28b80:	csel	x10, x12, x10, eq  // eq = none
   28b84:	adrp	x26, 37000 <PyInit__decimal@@Base+0x3049c>
   28b88:	cmp	x10, #0x3
   28b8c:	add	x26, x26, #0xe70
   28b90:	b.cs	28bc4 <PyInit__decimal@@Base+0x22060>  // b.hs, b.nlast
   28b94:	cmp	x9, #0x2
   28b98:	b.lt	28bd0 <PyInit__decimal@@Base+0x2206c>  // b.tstop
   28b9c:	mov	w11, #0x3                   	// #3
   28ba0:	add	x8, x8, x9, lsl #3
   28ba4:	add	x9, x26, x10, lsl #3
   28ba8:	sub	x10, x11, x10
   28bac:	ldur	x8, [x8, #-16]
   28bb0:	ldr	x9, [x9, #128]
   28bb4:	ldr	x10, [x26, x10, lsl #3]
   28bb8:	udiv	x8, x8, x9
   28bbc:	madd	x23, x10, x23, x8
   28bc0:	b	28bd0 <PyInit__decimal@@Base+0x2206c>
   28bc4:	add	x8, x26, x10, lsl #3
   28bc8:	ldur	x8, [x8, #-24]
   28bcc:	udiv	x23, x23, x8
   28bd0:	cmp	x23, #0x9
   28bd4:	b.hi	28be4 <PyInit__decimal@@Base+0x22080>  // b.pmore
   28bd8:	add	x8, x23, x23, lsl #2
   28bdc:	lsl	x23, x8, #1
   28be0:	b	28bec <PyInit__decimal@@Base+0x22088>
   28be4:	cmp	x23, #0x63
   28be8:	b.hi	28bf4 <PyInit__decimal@@Base+0x22090>  // b.pmore
   28bec:	add	x8, x23, x23, lsl #2
   28bf0:	lsl	x23, x8, #1
   28bf4:	ldrb	w8, [x20]
   28bf8:	ldp	x22, x24, [x22, #8]
   28bfc:	sub	x25, x23, #0x64
   28c00:	tbnz	w8, #5, 28c44 <PyInit__decimal@@Base+0x220e0>
   28c04:	adrp	x27, 4c000 <PyInit__decimal@@Base+0x4549c>
   28c08:	ldr	x9, [x20, #32]
   28c0c:	ldr	x1, [x27, #1352]
   28c10:	cmp	x9, x1
   28c14:	b.le	28c44 <PyInit__decimal@@Base+0x220e0>
   28c18:	strb	wzr, [sp]
   28c1c:	ldr	x0, [x20, #40]
   28c20:	mov	x3, sp
   28c24:	mov	w2, #0x8                   	// #8
   28c28:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   28c2c:	str	x0, [x20, #40]
   28c30:	ldrb	w8, [sp]
   28c34:	cbnz	w8, 28c40 <PyInit__decimal@@Base+0x220dc>
   28c38:	ldr	x8, [x27, #1352]
   28c3c:	str	x8, [x20, #32]
   28c40:	ldrb	w8, [x20]
   28c44:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   28c48:	add	x9, x9, #0x410
   28c4c:	ldr	x10, [x20, #40]
   28c50:	ldrh	w9, [x9, x25, lsl #1]
   28c54:	and	w8, w8, #0xf0
   28c58:	mov	w11, #0x1                   	// #1
   28c5c:	mov	x12, #0xfffffffffffffffd    	// #-3
   28c60:	strb	w8, [x20]
   28c64:	str	x9, [x10]
   28c68:	str	x11, [x20, #24]
   28c6c:	str	x12, [x20, #8]
   28c70:	ldr	x9, [x10]
   28c74:	ldr	x10, [x26, #72]
   28c78:	cmp	x10, x9
   28c7c:	b.ls	28ca8 <PyInit__decimal@@Base+0x22144>  // b.plast
   28c80:	ldr	x10, [x26, #32]
   28c84:	cmp	x10, x9
   28c88:	b.ls	28cd0 <PyInit__decimal@@Base+0x2216c>  // b.plast
   28c8c:	ldr	x10, [x26, #16]
   28c90:	cmp	x10, x9
   28c94:	b.ls	28d14 <PyInit__decimal@@Base+0x221b0>  // b.plast
   28c98:	ldr	x10, [x26, #8]
   28c9c:	cmp	x10, x9
   28ca0:	mov	w9, #0x1                   	// #1
   28ca4:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28ca8:	ldr	x10, [x26, #112]
   28cac:	cmp	x10, x9
   28cb0:	b.ls	28cec <PyInit__decimal@@Base+0x22188>  // b.plast
   28cb4:	ldr	x10, [x26, #88]
   28cb8:	cmp	x10, x9
   28cbc:	b.ls	28d24 <PyInit__decimal@@Base+0x221c0>  // b.plast
   28cc0:	ldr	x10, [x26, #80]
   28cc4:	cmp	x10, x9
   28cc8:	mov	w9, #0xa                   	// #10
   28ccc:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28cd0:	ldr	x10, [x26, #48]
   28cd4:	cmp	x10, x9
   28cd8:	b.ls	28d40 <PyInit__decimal@@Base+0x221dc>  // b.plast
   28cdc:	ldr	x10, [x26, #40]
   28ce0:	cmp	x10, x9
   28ce4:	mov	w9, #0x5                   	// #5
   28ce8:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28cec:	ldr	x10, [x26, #144]
   28cf0:	cmp	x10, x9
   28cf4:	b.ls	28d5c <PyInit__decimal@@Base+0x221f8>  // b.plast
   28cf8:	ldr	x10, [x26, #128]
   28cfc:	cmp	x10, x9
   28d00:	b.ls	28d6c <PyInit__decimal@@Base+0x22208>  // b.plast
   28d04:	ldr	x10, [x26, #120]
   28d08:	cmp	x10, x9
   28d0c:	mov	w9, #0xf                   	// #15
   28d10:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28d14:	ldr	x10, [x26, #24]
   28d18:	cmp	x10, x9
   28d1c:	mov	w9, #0x3                   	// #3
   28d20:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28d24:	ldr	x10, [x26, #104]
   28d28:	cmp	x10, x9
   28d2c:	b.ls	290c8 <PyInit__decimal@@Base+0x22564>  // b.plast
   28d30:	ldr	x10, [x26, #96]
   28d34:	cmp	x10, x9
   28d38:	mov	w9, #0xc                   	// #12
   28d3c:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28d40:	ldr	x10, [x26, #64]
   28d44:	cmp	x10, x9
   28d48:	b.ls	290d0 <PyInit__decimal@@Base+0x2256c>  // b.plast
   28d4c:	ldr	x10, [x26, #56]
   28d50:	cmp	x10, x9
   28d54:	mov	w9, #0x7                   	// #7
   28d58:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28d5c:	ldr	x10, [x26, #152]
   28d60:	cmp	x10, x9
   28d64:	mov	w9, #0x13                  	// #19
   28d68:	b	28d78 <PyInit__decimal@@Base+0x22214>
   28d6c:	ldr	x10, [x26, #136]
   28d70:	cmp	x10, x9
   28d74:	mov	w9, #0x11                  	// #17
   28d78:	cinc	x9, x9, ls  // ls = plast
   28d7c:	cmp	x25, #0x190
   28d80:	str	x9, [x20, #16]
   28d84:	b.hi	28da0 <PyInit__decimal@@Base+0x2223c>  // b.pmore
   28d88:	mov	w8, #0x1                   	// #1
   28d8c:	add	x9, x22, x24
   28d90:	sub	x8, x8, x24
   28d94:	str	x8, [sp, #1640]
   28d98:	sub	x22, x9, #0x1
   28d9c:	b	28db4 <PyInit__decimal@@Base+0x22250>
   28da0:	neg	x9, x24
   28da4:	add	x22, x22, x24
   28da8:	orr	w8, w8, #0x1
   28dac:	str	x9, [sp, #1640]
   28db0:	strb	w8, [x20]
   28db4:	sub	x0, x29, #0x60
   28db8:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   28dbc:	sub	x0, x29, #0x30
   28dc0:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   28dc4:	mov	w8, #0x8                   	// #8
   28dc8:	stur	w8, [x29, #-12]
   28dcc:	ldr	x8, [x21]
   28dd0:	sub	x9, x23, #0x74
   28dd4:	cmp	x9, #0x310
   28dd8:	add	x25, x8, #0x2
   28ddc:	b.cc	28ea0 <PyInit__decimal@@Base+0x2233c>  // b.lo, b.ul, b.last
   28de0:	cbnz	x22, 28ea0 <PyInit__decimal@@Base+0x2233c>
   28de4:	adrp	x24, 49000 <PyInit__decimal@@Base+0x4249c>
   28de8:	add	x24, x24, #0xc88
   28dec:	add	x0, sp, #0x660
   28df0:	mov	x1, x24
   28df4:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   28df8:	sub	x8, x29, #0x60
   28dfc:	mov	w23, w0
   28e00:	add	x5, x8, #0x1c
   28e04:	add	x0, sp, #0x200
   28e08:	add	x1, sp, #0x660
   28e0c:	sub	x4, x29, #0x60
   28e10:	mov	w3, #0x1                   	// #1
   28e14:	mov	x2, x24
   28e18:	bl	24ddc <PyInit__decimal@@Base+0x1e278>
   28e1c:	ldurh	w8, [x29, #-68]
   28e20:	mov	w9, #0x3be                 	// #958
   28e24:	tst	w8, w9
   28e28:	b.eq	28e40 <PyInit__decimal@@Base+0x222dc>  // b.none
   28e2c:	mov	w1, #0x200                 	// #512
   28e30:	mov	x0, x20
   28e34:	mov	x2, x19
   28e38:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   28e3c:	b	29010 <PyInit__decimal@@Base+0x224ac>
   28e40:	ldr	x8, [sp, #520]
   28e44:	tbz	w23, #31, 28e50 <PyInit__decimal@@Base+0x222ec>
   28e48:	add	x8, x8, #0x1
   28e4c:	str	x8, [sp, #520]
   28e50:	ldr	x11, [x21, #16]
   28e54:	ldr	x12, [x21]
   28e58:	ldr	x9, [sp, #528]
   28e5c:	sub	x10, x8, #0x1
   28e60:	sub	x11, x11, x12
   28e64:	add	x13, x10, x9
   28e68:	add	x11, x11, #0x1
   28e6c:	cmp	x13, x11
   28e70:	b.ge	28e8c <PyInit__decimal@@Base+0x22328>  // b.tcont
   28e74:	lsr	w1, w23, #31
   28e78:	sub	x3, x11, #0x1
   28e7c:	mov	w2, #0x1                   	// #1
   28e80:	mov	x0, x20
   28e84:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   28e88:	b	29010 <PyInit__decimal@@Base+0x224ac>
   28e8c:	add	x8, x8, x9
   28e90:	sub	x8, x8, #0x2
   28e94:	and	x8, x8, x8, asr #63
   28e98:	sub	x25, x25, x8
   28e9c:	str	x10, [sp, #520]
   28ea0:	cmp	x25, #0x3
   28ea4:	b.lt	28fd0 <PyInit__decimal@@Base+0x2246c>  // b.tstop
   28ea8:	mov	w9, #0xffffffff            	// #-1
   28eac:	mov	x8, sp
   28eb0:	mov	x10, x25
   28eb4:	add	x11, x10, #0x2
   28eb8:	add	x10, x10, #0x3
   28ebc:	cmp	x11, #0x0
   28ec0:	csel	x10, x10, x11, lt  // lt = tstop
   28ec4:	add	w9, w9, #0x1
   28ec8:	asr	x10, x10, #1
   28ecc:	cmp	x11, #0x5
   28ed0:	str	x10, [x8, w9, sxtw #3]
   28ed4:	b.gt	28eb4 <PyInit__decimal@@Base+0x22350>
   28ed8:	tbnz	w9, #31, 28fd0 <PyInit__decimal@@Base+0x2246c>
   28edc:	ldrb	w8, [x20]
   28ee0:	adrp	x21, 49000 <PyInit__decimal@@Base+0x4249c>
   28ee4:	mov	w26, w9
   28ee8:	mov	x27, sp
   28eec:	add	x21, x21, #0xc88
   28ef0:	ldr	x9, [x27, x26, lsl #3]
   28ef4:	eor	w8, w8, #0x1
   28ef8:	add	x0, sp, #0x200
   28efc:	sub	x2, x29, #0x30
   28f00:	lsl	x9, x9, #1
   28f04:	add	x9, x9, #0x3
   28f08:	mov	x1, x20
   28f0c:	mov	x3, x19
   28f10:	stur	x9, [x29, #-48]
   28f14:	strb	w8, [x20]
   28f18:	bl	26f40 <PyInit__decimal@@Base+0x203dc>
   28f1c:	ldrb	w8, [x20]
   28f20:	eor	w8, w8, #0x1
   28f24:	strb	w8, [x20]
   28f28:	ldr	x8, [sp, #1648]
   28f2c:	ldur	x9, [x29, #-48]
   28f30:	subs	x24, x8, x9
   28f34:	b.le	28f60 <PyInit__decimal@@Base+0x223fc>
   28f38:	add	x0, sp, #0x430
   28f3c:	add	x1, sp, #0x660
   28f40:	mov	x2, x24
   28f44:	mov	x3, x19
   28f48:	add	x23, sp, #0x430
   28f4c:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   28f50:	ldr	x8, [sp, #1080]
   28f54:	add	x8, x8, x24
   28f58:	str	x8, [sp, #1080]
   28f5c:	b	28f64 <PyInit__decimal@@Base+0x22400>
   28f60:	add	x23, sp, #0x660
   28f64:	add	x0, sp, #0x200
   28f68:	add	x2, sp, #0x200
   28f6c:	sub	x3, x29, #0x30
   28f70:	mov	x1, x23
   28f74:	mov	x4, x19
   28f78:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   28f7c:	add	x0, sp, #0x200
   28f80:	sub	x1, x29, #0x30
   28f84:	mov	x2, x19
   28f88:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   28f8c:	add	x0, sp, #0x200
   28f90:	add	x1, sp, #0x200
   28f94:	sub	x3, x29, #0x60
   28f98:	mov	x2, x21
   28f9c:	mov	x4, x19
   28fa0:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   28fa4:	add	x2, sp, #0x200
   28fa8:	sub	x3, x29, #0x60
   28fac:	mov	x0, x20
   28fb0:	mov	x1, x20
   28fb4:	mov	x4, x19
   28fb8:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   28fbc:	ldrb	w8, [x20]
   28fc0:	tst	w8, #0xe
   28fc4:	b.ne	28fd0 <PyInit__decimal@@Base+0x2246c>  // b.any
   28fc8:	subs	x26, x26, #0x1
   28fcc:	b.ge	28ef0 <PyInit__decimal@@Base+0x2238c>  // b.tcont
   28fd0:	add	x1, x25, #0x1
   28fd4:	add	x0, sp, #0x660
   28fd8:	mov	x2, x19
   28fdc:	bl	27fe4 <PyInit__decimal@@Base+0x21480>
   28fe0:	add	x0, sp, #0x200
   28fe4:	add	x1, sp, #0x660
   28fe8:	sub	x3, x29, #0x60
   28fec:	mov	x2, x22
   28ff0:	mov	x4, x19
   28ff4:	bl	29cb4 <PyInit__decimal@@Base+0x23150>
   28ff8:	add	x1, sp, #0x200
   28ffc:	sub	x3, x29, #0x60
   29000:	mov	x0, x20
   29004:	mov	x2, x20
   29008:	mov	x4, x19
   2900c:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   29010:	ldr	w8, [x19]
   29014:	mov	w9, #0x1040                	// #4160
   29018:	orr	w8, w8, w9
   2901c:	str	w8, [x19]
   29020:	ldrb	w8, [sp, #1632]
   29024:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   29028:	cmp	w8, #0x1f
   2902c:	b.hi	29040 <PyInit__decimal@@Base+0x224dc>  // b.pmore
   29030:	ldr	x8, [x19, #1384]
   29034:	ldr	x0, [sp, #1672]
   29038:	blr	x8
   2903c:	ldrb	w8, [sp, #1632]
   29040:	tbnz	w8, #4, 29050 <PyInit__decimal@@Base+0x224ec>
   29044:	ldr	x8, [x19, #1384]
   29048:	add	x0, sp, #0x660
   2904c:	blr	x8
   29050:	ldrb	w8, [sp, #1072]
   29054:	cmp	w8, #0x1f
   29058:	b.hi	2906c <PyInit__decimal@@Base+0x22508>  // b.pmore
   2905c:	ldr	x8, [x19, #1384]
   29060:	ldr	x0, [sp, #1112]
   29064:	blr	x8
   29068:	ldrb	w8, [sp, #1072]
   2906c:	tbnz	w8, #4, 2907c <PyInit__decimal@@Base+0x22518>
   29070:	ldr	x8, [x19, #1384]
   29074:	add	x0, sp, #0x430
   29078:	blr	x8
   2907c:	ldrb	w8, [sp, #512]
   29080:	cmp	w8, #0x1f
   29084:	b.hi	29098 <PyInit__decimal@@Base+0x22534>  // b.pmore
   29088:	ldr	x8, [x19, #1384]
   2908c:	ldr	x0, [sp, #552]
   29090:	blr	x8
   29094:	ldrb	w8, [sp, #512]
   29098:	tbnz	w8, #4, 290a8 <PyInit__decimal@@Base+0x22544>
   2909c:	ldr	x8, [x19, #1384]
   290a0:	add	x0, sp, #0x200
   290a4:	blr	x8
   290a8:	add	sp, sp, #0x8f0
   290ac:	ldp	x20, x19, [sp, #80]
   290b0:	ldp	x22, x21, [sp, #64]
   290b4:	ldp	x24, x23, [sp, #48]
   290b8:	ldp	x26, x25, [sp, #32]
   290bc:	ldp	x28, x27, [sp, #16]
   290c0:	ldp	x29, x30, [sp], #96
   290c4:	ret
   290c8:	mov	w9, #0xe                   	// #14
   290cc:	b	28d7c <PyInit__decimal@@Base+0x22218>
   290d0:	mov	w9, #0x9                   	// #9
   290d4:	b	28d7c <PyInit__decimal@@Base+0x22218>
   290d8:	stp	x29, x30, [sp, #-80]!
   290dc:	str	x28, [sp, #16]
   290e0:	stp	x24, x23, [sp, #32]
   290e4:	stp	x22, x21, [sp, #48]
   290e8:	stp	x20, x19, [sp, #64]
   290ec:	mov	x29, sp
   290f0:	sub	sp, sp, #0x8f0
   290f4:	ldp	q1, q0, [x2, #16]
   290f8:	ldr	q2, [x2]
   290fc:	mov	w8, #0x6                   	// #6
   29100:	mov	x19, x3
   29104:	stp	q1, q0, [x29, #-32]
   29108:	stur	q2, [x29, #-48]
   2910c:	stur	w8, [x29, #-12]
   29110:	ldrb	w8, [x1]
   29114:	mov	x21, x2
   29118:	mov	x22, x1
   2911c:	mov	x20, x0
   29120:	tst	w8, #0xe
   29124:	b.eq	29158 <PyInit__decimal@@Base+0x225f4>  // b.none
   29128:	mov	x0, x20
   2912c:	mov	x1, x22
   29130:	mov	x2, x21
   29134:	mov	x3, x19
   29138:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2913c:	cbnz	w0, 29460 <PyInit__decimal@@Base+0x228fc>
   29140:	ldrb	w8, [x22]
   29144:	tbnz	w8, #0, 291ac <PyInit__decimal@@Base+0x22648>
   29148:	mov	w2, #0x2                   	// #2
   2914c:	mov	x0, x20
   29150:	mov	w1, wzr
   29154:	b	2945c <PyInit__decimal@@Base+0x228f8>
   29158:	ldr	x9, [x22, #40]
   2915c:	ldr	x11, [x22, #24]
   29160:	add	x10, x9, x11, lsl #3
   29164:	ldur	x12, [x10, #-8]
   29168:	cbz	x12, 291c0 <PyInit__decimal@@Base+0x2265c>
   2916c:	tbnz	w8, #0, 291ac <PyInit__decimal@@Base+0x22648>
   29170:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   29174:	add	x8, x8, #0xe70
   29178:	ldr	x10, [x8, #72]
   2917c:	cmp	x10, x12
   29180:	b.ls	291d0 <PyInit__decimal@@Base+0x2266c>  // b.plast
   29184:	ldr	x13, [x8, #32]
   29188:	cmp	x13, x12
   2918c:	b.ls	291f8 <PyInit__decimal@@Base+0x22694>  // b.plast
   29190:	ldr	x13, [x8, #16]
   29194:	cmp	x13, x12
   29198:	b.ls	2923c <PyInit__decimal@@Base+0x226d8>  // b.plast
   2919c:	ldr	x13, [x8, #8]
   291a0:	cmp	x13, x12
   291a4:	mov	w13, #0x1                   	// #1
   291a8:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   291ac:	mov	w1, #0x100                 	// #256
   291b0:	mov	x0, x20
   291b4:	mov	x2, x19
   291b8:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   291bc:	b	29460 <PyInit__decimal@@Base+0x228fc>
   291c0:	mov	w1, #0x1                   	// #1
   291c4:	mov	w2, #0x2                   	// #2
   291c8:	mov	x0, x20
   291cc:	b	2945c <PyInit__decimal@@Base+0x228f8>
   291d0:	ldr	x13, [x8, #112]
   291d4:	cmp	x13, x12
   291d8:	b.ls	29214 <PyInit__decimal@@Base+0x226b0>  // b.plast
   291dc:	ldr	x13, [x8, #88]
   291e0:	cmp	x13, x12
   291e4:	b.ls	2924c <PyInit__decimal@@Base+0x226e8>  // b.plast
   291e8:	ldr	x13, [x8, #80]
   291ec:	cmp	x13, x12
   291f0:	mov	w13, #0xa                   	// #10
   291f4:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   291f8:	ldr	x13, [x8, #48]
   291fc:	cmp	x13, x12
   29200:	b.ls	29268 <PyInit__decimal@@Base+0x22704>  // b.plast
   29204:	ldr	x13, [x8, #40]
   29208:	cmp	x13, x12
   2920c:	mov	w13, #0x5                   	// #5
   29210:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   29214:	ldr	x13, [x8, #144]
   29218:	cmp	x13, x12
   2921c:	b.ls	29284 <PyInit__decimal@@Base+0x22720>  // b.plast
   29220:	ldr	x13, [x8, #128]
   29224:	cmp	x13, x12
   29228:	b.ls	29294 <PyInit__decimal@@Base+0x22730>  // b.plast
   2922c:	ldr	x13, [x8, #120]
   29230:	cmp	x13, x12
   29234:	mov	w13, #0xf                   	// #15
   29238:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   2923c:	ldr	x13, [x8, #24]
   29240:	cmp	x13, x12
   29244:	mov	w13, #0x3                   	// #3
   29248:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   2924c:	ldr	x13, [x8, #104]
   29250:	cmp	x13, x12
   29254:	b.ls	29410 <PyInit__decimal@@Base+0x228ac>  // b.plast
   29258:	ldr	x13, [x8, #96]
   2925c:	cmp	x13, x12
   29260:	mov	w13, #0xc                   	// #12
   29264:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   29268:	ldr	x13, [x8, #64]
   2926c:	cmp	x13, x12
   29270:	b.ls	29418 <PyInit__decimal@@Base+0x228b4>  // b.plast
   29274:	ldr	x13, [x8, #56]
   29278:	cmp	x13, x12
   2927c:	mov	w13, #0x7                   	// #7
   29280:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   29284:	ldr	x13, [x8, #152]
   29288:	cmp	x13, x12
   2928c:	mov	w13, #0x13                  	// #19
   29290:	b	292a0 <PyInit__decimal@@Base+0x2273c>
   29294:	ldr	x13, [x8, #136]
   29298:	cmp	x13, x12
   2929c:	mov	w13, #0x11                  	// #17
   292a0:	cinc	x13, x13, ls  // ls = plast
   292a4:	add	x13, x8, x13, lsl #3
   292a8:	ldur	x13, [x13, #-8]
   292ac:	cmp	x13, x12
   292b0:	b.ne	292c8 <PyInit__decimal@@Base+0x22764>  // b.any
   292b4:	sub	x11, x11, #0x2
   292b8:	tbnz	x11, #63, 29338 <PyInit__decimal@@Base+0x227d4>
   292bc:	ldr	x12, [x9, x11, lsl #3]
   292c0:	sub	x11, x11, #0x1
   292c4:	cbz	x12, 292b8 <PyInit__decimal@@Base+0x22754>
   292c8:	ldp	x9, x11, [x22, #8]
   292cc:	add	x9, x9, x11
   292d0:	sub	x9, x9, #0x1
   292d4:	eor	x11, x9, x9, asr #63
   292d8:	cmp	x11, #0x0
   292dc:	cneg	x11, x11, mi  // mi = first
   292e0:	cmp	x10, x11
   292e4:	b.ls	29310 <PyInit__decimal@@Base+0x227ac>  // b.plast
   292e8:	ldr	x10, [x8, #32]
   292ec:	cmp	x10, x11
   292f0:	b.ls	29374 <PyInit__decimal@@Base+0x22810>  // b.plast
   292f4:	ldr	x10, [x8, #16]
   292f8:	cmp	x10, x11
   292fc:	b.ls	293b8 <PyInit__decimal@@Base+0x22854>  // b.plast
   29300:	ldr	x8, [x8, #8]
   29304:	cmp	x8, x11
   29308:	mov	w8, #0x1                   	// #1
   2930c:	b	2942c <PyInit__decimal@@Base+0x228c8>
   29310:	ldr	x10, [x8, #112]
   29314:	cmp	x10, x11
   29318:	b.ls	29390 <PyInit__decimal@@Base+0x2282c>  // b.plast
   2931c:	ldr	x10, [x8, #88]
   29320:	cmp	x10, x11
   29324:	b.ls	293c8 <PyInit__decimal@@Base+0x22864>  // b.plast
   29328:	ldr	x8, [x8, #80]
   2932c:	cmp	x8, x11
   29330:	mov	w8, #0xa                   	// #10
   29334:	b	2942c <PyInit__decimal@@Base+0x228c8>
   29338:	ldp	x8, x9, [x22, #8]
   2933c:	mov	w10, #0x1                   	// #1
   29340:	mov	x0, x20
   29344:	mov	x3, xzr
   29348:	add	x8, x8, x9
   2934c:	subs	x9, x8, #0x1
   29350:	sub	x8, x10, x8
   29354:	csel	x2, x9, x8, pl  // pl = nfrst
   29358:	lsr	x1, x9, #63
   2935c:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   29360:	sub	x1, x29, #0x30
   29364:	mov	x0, x20
   29368:	mov	x2, x19
   2936c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29370:	b	29460 <PyInit__decimal@@Base+0x228fc>
   29374:	ldr	x10, [x8, #48]
   29378:	cmp	x10, x11
   2937c:	b.ls	293e4 <PyInit__decimal@@Base+0x22880>  // b.plast
   29380:	ldr	x8, [x8, #40]
   29384:	cmp	x8, x11
   29388:	mov	w8, #0x5                   	// #5
   2938c:	b	2942c <PyInit__decimal@@Base+0x228c8>
   29390:	ldr	x10, [x8, #144]
   29394:	cmp	x10, x11
   29398:	b.ls	29400 <PyInit__decimal@@Base+0x2289c>  // b.plast
   2939c:	ldr	x10, [x8, #128]
   293a0:	cmp	x10, x11
   293a4:	b.ls	29420 <PyInit__decimal@@Base+0x228bc>  // b.plast
   293a8:	ldr	x8, [x8, #120]
   293ac:	cmp	x8, x11
   293b0:	mov	w8, #0xf                   	// #15
   293b4:	b	2942c <PyInit__decimal@@Base+0x228c8>
   293b8:	ldr	x8, [x8, #24]
   293bc:	cmp	x8, x11
   293c0:	mov	w8, #0x3                   	// #3
   293c4:	b	2942c <PyInit__decimal@@Base+0x228c8>
   293c8:	ldr	x10, [x8, #104]
   293cc:	cmp	x10, x11
   293d0:	b.ls	29794 <PyInit__decimal@@Base+0x22c30>  // b.plast
   293d4:	ldr	x8, [x8, #96]
   293d8:	cmp	x8, x11
   293dc:	mov	w8, #0xc                   	// #12
   293e0:	b	2942c <PyInit__decimal@@Base+0x228c8>
   293e4:	ldr	x10, [x8, #64]
   293e8:	cmp	x10, x11
   293ec:	b.ls	2979c <PyInit__decimal@@Base+0x22c38>  // b.plast
   293f0:	ldr	x8, [x8, #56]
   293f4:	cmp	x8, x11
   293f8:	mov	w8, #0x7                   	// #7
   293fc:	b	2942c <PyInit__decimal@@Base+0x228c8>
   29400:	ldr	x8, [x8, #152]
   29404:	cmp	x8, x11
   29408:	mov	w8, #0x13                  	// #19
   2940c:	b	2942c <PyInit__decimal@@Base+0x228c8>
   29410:	mov	w13, #0xe                   	// #14
   29414:	b	292a4 <PyInit__decimal@@Base+0x22740>
   29418:	mov	w13, #0x9                   	// #9
   2941c:	b	292a4 <PyInit__decimal@@Base+0x22740>
   29420:	ldr	x8, [x8, #136]
   29424:	cmp	x8, x11
   29428:	mov	w8, #0x11                  	// #17
   2942c:	cinc	x8, x8, ls  // ls = plast
   29430:	ldr	x10, [x21, #8]
   29434:	sub	x8, x8, #0x1
   29438:	cmp	x10, x8
   2943c:	b.ge	2947c <PyInit__decimal@@Base+0x22918>  // b.tcont
   29440:	ldr	w8, [x19]
   29444:	mov	w10, #0x1840                	// #6208
   29448:	lsr	x1, x9, #63
   2944c:	mov	w2, #0x2                   	// #2
   29450:	orr	w8, w8, w10
   29454:	mov	x0, x20
   29458:	str	w8, [x19]
   2945c:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   29460:	add	sp, sp, #0x8f0
   29464:	ldp	x20, x19, [sp, #64]
   29468:	ldp	x22, x21, [sp, #48]
   2946c:	ldp	x24, x23, [sp, #32]
   29470:	ldr	x28, [sp, #16]
   29474:	ldp	x29, x30, [sp], #80
   29478:	ret
   2947c:	ldr	w8, [x21, #44]
   29480:	cbz	w8, 29504 <PyInit__decimal@@Base+0x229a0>
   29484:	add	x10, sp, #0x6c0
   29488:	str	x10, [sp, #1720]
   2948c:	add	x10, sp, #0x490
   29490:	str	x10, [sp, #1160]
   29494:	add	x10, sp, #0x260
   29498:	mov	w8, #0x30                  	// #48
   2949c:	mov	w9, #0x40                  	// #64
   294a0:	str	x10, [sp, #600]
   294a4:	add	x10, sp, #0x30
   294a8:	cmp	x20, x22
   294ac:	str	xzr, [sp, #1688]
   294b0:	str	xzr, [sp, #1696]
   294b4:	str	xzr, [sp, #1128]
   294b8:	str	xzr, [sp, #1136]
   294bc:	str	xzr, [sp, #568]
   294c0:	str	xzr, [sp, #576]
   294c4:	stp	xzr, xzr, [sp, #8]
   294c8:	strb	w8, [sp, #1680]
   294cc:	str	xzr, [sp, #1704]
   294d0:	str	x9, [sp, #1712]
   294d4:	strb	w8, [sp, #1120]
   294d8:	str	xzr, [sp, #1144]
   294dc:	str	x9, [sp, #1152]
   294e0:	strb	w8, [sp, #560]
   294e4:	str	xzr, [sp, #584]
   294e8:	str	x9, [sp, #592]
   294ec:	strb	w8, [sp]
   294f0:	stp	xzr, x9, [sp, #24]
   294f4:	str	x10, [sp, #40]
   294f8:	b.eq	29578 <PyInit__decimal@@Base+0x22a14>  // b.none
   294fc:	mov	x23, x22
   29500:	b	29590 <PyInit__decimal@@Base+0x22a2c>
   29504:	sub	x3, x29, #0x30
   29508:	mov	w0, #0x1                   	// #1
   2950c:	mov	x1, x20
   29510:	mov	x2, x22
   29514:	mov	x4, x19
   29518:	bl	297b0 <PyInit__decimal@@Base+0x22c4c>
   2951c:	ldp	x8, x10, [x20, #8]
   29520:	ldur	x9, [x29, #-32]
   29524:	add	x10, x8, x10
   29528:	sub	x10, x10, #0x1
   2952c:	cmp	x10, x9
   29530:	b.ge	29460 <PyInit__decimal@@Base+0x228fc>  // b.tcont
   29534:	ldrb	w10, [x20]
   29538:	tst	w10, #0xe
   2953c:	b.ne	29554 <PyInit__decimal@@Base+0x229f0>  // b.any
   29540:	ldr	x10, [x20, #40]
   29544:	ldr	x11, [x20, #24]
   29548:	add	x10, x10, x11, lsl #3
   2954c:	ldur	x10, [x10, #-8]
   29550:	cbz	x10, 29460 <PyInit__decimal@@Base+0x228fc>
   29554:	ldur	x10, [x29, #-48]
   29558:	sub	x9, x9, x10
   2955c:	add	x9, x9, #0x1
   29560:	cmp	x8, x9
   29564:	b.ge	29460 <PyInit__decimal@@Base+0x228fc>  // b.tcont
   29568:	ldr	w8, [x19]
   2956c:	orr	w8, w8, #0x4000
   29570:	str	w8, [x19]
   29574:	b	29460 <PyInit__decimal@@Base+0x228fc>
   29578:	mov	x0, sp
   2957c:	mov	x1, x22
   29580:	mov	x2, x19
   29584:	mov	x23, sp
   29588:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2958c:	cbz	w0, 297a4 <PyInit__decimal@@Base+0x22c40>
   29590:	stur	wzr, [x29, #-8]
   29594:	ldr	x8, [x21]
   29598:	sub	x9, x29, #0x30
   2959c:	add	x22, x9, #0x1c
   295a0:	add	x24, x8, #0x3
   295a4:	sub	x3, x29, #0x30
   295a8:	mov	w0, wzr
   295ac:	mov	x1, x20
   295b0:	mov	x2, x23
   295b4:	mov	x4, x19
   295b8:	stur	x24, [x29, #-48]
   295bc:	bl	297b0 <PyInit__decimal@@Base+0x22c4c>
   295c0:	ldp	x8, x9, [x20, #8]
   295c4:	ldur	x10, [x29, #-48]
   295c8:	add	x0, sp, #0x230
   295cc:	mov	w2, #0x1                   	// #1
   295d0:	add	x8, x9, x8
   295d4:	sub	x3, x8, x10
   295d8:	mov	w1, wzr
   295dc:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   295e0:	ldr	x8, [x21]
   295e4:	add	x0, sp, #0x690
   295e8:	add	x2, sp, #0x230
   295ec:	sub	x3, x29, #0x30
   295f0:	mov	x1, x20
   295f4:	mov	x4, x22
   295f8:	stur	x8, [x29, #-48]
   295fc:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   29600:	add	x0, sp, #0x460
   29604:	add	x2, sp, #0x230
   29608:	sub	x3, x29, #0x30
   2960c:	mov	x1, x20
   29610:	mov	x4, x22
   29614:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   29618:	ldrb	w8, [x20]
   2961c:	tst	w8, #0xe
   29620:	b.ne	29650 <PyInit__decimal@@Base+0x22aec>  // b.any
   29624:	ldr	x8, [x20, #40]
   29628:	ldr	x9, [x20, #24]
   2962c:	add	x8, x8, x9, lsl #3
   29630:	ldur	x8, [x8, #-8]
   29634:	cbz	x8, 29650 <PyInit__decimal@@Base+0x22aec>
   29638:	add	x0, sp, #0x690
   2963c:	add	x1, sp, #0x460
   29640:	mov	x2, x19
   29644:	bl	22128 <PyInit__decimal@@Base+0x1b5c4>
   29648:	add	x24, x24, #0x13
   2964c:	cbnz	w0, 295a4 <PyInit__decimal@@Base+0x22a40>
   29650:	ldr	w8, [x21, #40]
   29654:	ldur	x9, [x29, #-32]
   29658:	stur	w8, [x29, #-8]
   2965c:	ldp	x8, x10, [x20, #8]
   29660:	add	x10, x8, x10
   29664:	sub	x10, x10, #0x1
   29668:	cmp	x10, x9
   2966c:	b.ge	296b0 <PyInit__decimal@@Base+0x22b4c>  // b.tcont
   29670:	ldrb	w10, [x20]
   29674:	tst	w10, #0xe
   29678:	b.ne	29690 <PyInit__decimal@@Base+0x22b2c>  // b.any
   2967c:	ldr	x10, [x20, #40]
   29680:	ldr	x11, [x20, #24]
   29684:	add	x10, x10, x11, lsl #3
   29688:	ldur	x10, [x10, #-8]
   2968c:	cbz	x10, 296b0 <PyInit__decimal@@Base+0x22b4c>
   29690:	ldur	x10, [x29, #-48]
   29694:	sub	x9, x9, x10
   29698:	add	x9, x9, #0x1
   2969c:	cmp	x8, x9
   296a0:	b.ge	296b0 <PyInit__decimal@@Base+0x22b4c>  // b.tcont
   296a4:	ldr	w8, [x19]
   296a8:	orr	w8, w8, #0x4000
   296ac:	str	w8, [x19]
   296b0:	sub	x1, x29, #0x30
   296b4:	mov	x0, x20
   296b8:	mov	x2, x19
   296bc:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   296c0:	ldrb	w8, [sp, #1680]
   296c4:	cmp	w8, #0x1f
   296c8:	b.hi	296e0 <PyInit__decimal@@Base+0x22b7c>  // b.pmore
   296cc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   296d0:	ldr	x8, [x8, #1384]
   296d4:	ldr	x0, [sp, #1720]
   296d8:	blr	x8
   296dc:	ldrb	w8, [sp, #1680]
   296e0:	tbnz	w8, #4, 296f4 <PyInit__decimal@@Base+0x22b90>
   296e4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   296e8:	ldr	x8, [x8, #1384]
   296ec:	add	x0, sp, #0x690
   296f0:	blr	x8
   296f4:	ldrb	w8, [sp, #1120]
   296f8:	cmp	w8, #0x1f
   296fc:	b.hi	29714 <PyInit__decimal@@Base+0x22bb0>  // b.pmore
   29700:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   29704:	ldr	x8, [x8, #1384]
   29708:	ldr	x0, [sp, #1160]
   2970c:	blr	x8
   29710:	ldrb	w8, [sp, #1120]
   29714:	tbnz	w8, #4, 29728 <PyInit__decimal@@Base+0x22bc4>
   29718:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2971c:	ldr	x8, [x8, #1384]
   29720:	add	x0, sp, #0x460
   29724:	blr	x8
   29728:	ldrb	w8, [sp, #560]
   2972c:	cmp	w8, #0x1f
   29730:	b.hi	29748 <PyInit__decimal@@Base+0x22be4>  // b.pmore
   29734:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   29738:	ldr	x8, [x8, #1384]
   2973c:	ldr	x0, [sp, #600]
   29740:	blr	x8
   29744:	ldrb	w8, [sp, #560]
   29748:	tbnz	w8, #4, 2975c <PyInit__decimal@@Base+0x22bf8>
   2974c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   29750:	ldr	x8, [x8, #1384]
   29754:	add	x0, sp, #0x230
   29758:	blr	x8
   2975c:	ldrb	w8, [sp]
   29760:	cmp	w8, #0x1f
   29764:	b.hi	2977c <PyInit__decimal@@Base+0x22c18>  // b.pmore
   29768:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2976c:	ldr	x8, [x8, #1384]
   29770:	ldr	x0, [sp, #40]
   29774:	blr	x8
   29778:	ldrb	w8, [sp]
   2977c:	tbnz	w8, #4, 29460 <PyInit__decimal@@Base+0x228fc>
   29780:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   29784:	ldr	x8, [x8, #1384]
   29788:	mov	x0, sp
   2978c:	blr	x8
   29790:	b	29460 <PyInit__decimal@@Base+0x228fc>
   29794:	mov	w8, #0xe                   	// #14
   29798:	b	29430 <PyInit__decimal@@Base+0x228cc>
   2979c:	mov	w8, #0x9                   	// #9
   297a0:	b	29430 <PyInit__decimal@@Base+0x228cc>
   297a4:	mov	w1, #0x200                 	// #512
   297a8:	mov	x0, x22
   297ac:	b	291b4 <PyInit__decimal@@Base+0x22650>
   297b0:	stp	x29, x30, [sp, #-64]!
   297b4:	stp	x28, x23, [sp, #16]
   297b8:	stp	x22, x21, [sp, #32]
   297bc:	stp	x20, x19, [sp, #48]
   297c0:	mov	x29, sp
   297c4:	sub	sp, sp, #0x260
   297c8:	mov	w23, w0
   297cc:	mov	w8, #0x30                  	// #48
   297d0:	mov	w9, #0x40                  	// #64
   297d4:	add	x10, sp, #0x30
   297d8:	sub	x0, x29, #0x30
   297dc:	mov	x19, x4
   297e0:	mov	x21, x3
   297e4:	mov	x22, x2
   297e8:	mov	x20, x1
   297ec:	stp	xzr, xzr, [sp, #8]
   297f0:	strb	w8, [sp]
   297f4:	stp	xzr, x9, [sp, #24]
   297f8:	str	x10, [sp, #40]
   297fc:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   29800:	ldr	x8, [x21]
   29804:	sub	x2, x29, #0x30
   29808:	mov	x0, x20
   2980c:	mov	x1, x22
   29810:	add	x8, x8, #0x3
   29814:	mov	x3, x19
   29818:	stur	x8, [x29, #-48]
   2981c:	bl	28aac <PyInit__decimal@@Base+0x21f48>
   29820:	ldur	x1, [x29, #-48]
   29824:	mov	x0, sp
   29828:	mov	x2, x19
   2982c:	bl	27fe4 <PyInit__decimal@@Base+0x21480>
   29830:	cmp	w23, #0x1
   29834:	b.ne	29850 <PyInit__decimal@@Base+0x22cec>  // b.any
   29838:	ldp	q1, q0, [x21, #16]
   2983c:	ldr	q2, [x21]
   29840:	mov	w8, #0x6                   	// #6
   29844:	stp	q1, q0, [x29, #-32]
   29848:	stur	q2, [x29, #-48]
   2984c:	stur	w8, [x29, #-12]
   29850:	mov	x3, sp
   29854:	sub	x4, x29, #0x30
   29858:	mov	w0, wzr
   2985c:	mov	x1, x20
   29860:	mov	x2, x20
   29864:	mov	x5, x19
   29868:	bl	257a0 <PyInit__decimal@@Base+0x1ec3c>
   2986c:	ldrb	w8, [sp]
   29870:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   29874:	cmp	w8, #0x1f
   29878:	b.hi	2988c <PyInit__decimal@@Base+0x22d28>  // b.pmore
   2987c:	ldr	x8, [x19, #1384]
   29880:	ldr	x0, [sp, #40]
   29884:	blr	x8
   29888:	ldrb	w8, [sp]
   2988c:	tbnz	w8, #4, 2989c <PyInit__decimal@@Base+0x22d38>
   29890:	ldr	x8, [x19, #1384]
   29894:	mov	x0, sp
   29898:	blr	x8
   2989c:	add	sp, sp, #0x260
   298a0:	ldp	x20, x19, [sp, #48]
   298a4:	ldp	x22, x21, [sp, #32]
   298a8:	ldp	x28, x23, [sp, #16]
   298ac:	ldp	x29, x30, [sp], #64
   298b0:	ret
   298b4:	stp	x29, x30, [sp, #-64]!
   298b8:	str	x23, [sp, #16]
   298bc:	stp	x22, x21, [sp, #32]
   298c0:	stp	x20, x19, [sp, #48]
   298c4:	mov	x29, sp
   298c8:	ldrb	w9, [x1]
   298cc:	ldrb	w8, [x2]
   298d0:	mov	x19, x4
   298d4:	mov	x20, x3
   298d8:	mov	x22, x2
   298dc:	mov	x23, x1
   298e0:	mov	x21, x0
   298e4:	tbz	w9, #2, 298f0 <PyInit__decimal@@Base+0x22d8c>
   298e8:	and	w10, w8, #0xc
   298ec:	cbz	w10, 29984 <PyInit__decimal@@Base+0x22e20>
   298f0:	tst	w9, #0xc
   298f4:	b.ne	29904 <PyInit__decimal@@Base+0x22da0>  // b.any
   298f8:	tbz	w8, #2, 29904 <PyInit__decimal@@Base+0x22da0>
   298fc:	mov	x22, x23
   29900:	b	29984 <PyInit__decimal@@Base+0x22e20>
   29904:	mov	x0, x21
   29908:	mov	x1, x23
   2990c:	mov	x2, x22
   29910:	mov	x3, x20
   29914:	mov	x4, x19
   29918:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2991c:	cbz	w0, 29934 <PyInit__decimal@@Base+0x22dd0>
   29920:	ldp	x20, x19, [sp, #48]
   29924:	ldp	x22, x21, [sp, #32]
   29928:	ldr	x23, [sp, #16]
   2992c:	ldp	x29, x30, [sp], #64
   29930:	ret
   29934:	mov	x0, x23
   29938:	mov	x1, x22
   2993c:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   29940:	cbnz	w0, 2997c <PyInit__decimal@@Base+0x22e18>
   29944:	ldrb	w8, [x23]
   29948:	ldrb	w9, [x22]
   2994c:	and	w10, w8, #0x1
   29950:	and	w9, w9, #0x1
   29954:	subs	w0, w9, w10
   29958:	b.ne	2997c <PyInit__decimal@@Base+0x22e18>  // b.any
   2995c:	ldr	x9, [x23, #8]
   29960:	ldr	x10, [x22, #8]
   29964:	ubfiz	w8, w8, #1, #1
   29968:	mov	w11, #0x1                   	// #1
   2996c:	sub	w11, w11, w8
   29970:	sub	w8, w8, #0x1
   29974:	cmp	x9, x10
   29978:	csel	w0, w8, w11, lt  // lt = tstop
   2997c:	cmp	w0, #0x0
   29980:	csel	x22, x22, x23, lt  // lt = tstop
   29984:	mov	x0, x21
   29988:	mov	x1, x22
   2998c:	mov	x2, x19
   29990:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29994:	mov	x0, x21
   29998:	mov	x1, x20
   2999c:	mov	x2, x19
   299a0:	ldp	x20, x19, [sp, #48]
   299a4:	ldp	x22, x21, [sp, #32]
   299a8:	ldr	x23, [sp, #16]
   299ac:	ldp	x29, x30, [sp], #64
   299b0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   299b4:	stp	x29, x30, [sp, #-64]!
   299b8:	str	x23, [sp, #16]
   299bc:	stp	x22, x21, [sp, #32]
   299c0:	stp	x20, x19, [sp, #48]
   299c4:	mov	x29, sp
   299c8:	ldrb	w9, [x1]
   299cc:	ldrb	w8, [x2]
   299d0:	mov	x19, x4
   299d4:	mov	x20, x3
   299d8:	mov	x22, x2
   299dc:	mov	x23, x1
   299e0:	mov	x21, x0
   299e4:	tbz	w9, #2, 299f0 <PyInit__decimal@@Base+0x22e8c>
   299e8:	and	w10, w8, #0xc
   299ec:	cbz	w10, 29a84 <PyInit__decimal@@Base+0x22f20>
   299f0:	tst	w9, #0xc
   299f4:	b.ne	29a04 <PyInit__decimal@@Base+0x22ea0>  // b.any
   299f8:	tbz	w8, #2, 29a04 <PyInit__decimal@@Base+0x22ea0>
   299fc:	mov	x22, x23
   29a00:	b	29a84 <PyInit__decimal@@Base+0x22f20>
   29a04:	mov	x0, x21
   29a08:	mov	x1, x23
   29a0c:	mov	x2, x22
   29a10:	mov	x3, x20
   29a14:	mov	x4, x19
   29a18:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   29a1c:	cbz	w0, 29a34 <PyInit__decimal@@Base+0x22ed0>
   29a20:	ldp	x20, x19, [sp, #48]
   29a24:	ldp	x22, x21, [sp, #32]
   29a28:	ldr	x23, [sp, #16]
   29a2c:	ldp	x29, x30, [sp], #64
   29a30:	ret
   29a34:	mov	x0, x23
   29a38:	mov	x1, x22
   29a3c:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   29a40:	cbnz	w0, 29a7c <PyInit__decimal@@Base+0x22f18>
   29a44:	ldrb	w8, [x23]
   29a48:	ldrb	w9, [x22]
   29a4c:	and	w10, w8, #0x1
   29a50:	and	w9, w9, #0x1
   29a54:	subs	w0, w9, w10
   29a58:	b.ne	29a7c <PyInit__decimal@@Base+0x22f18>  // b.any
   29a5c:	ldr	x9, [x23, #8]
   29a60:	ldr	x10, [x22, #8]
   29a64:	ubfiz	w8, w8, #1, #1
   29a68:	mov	w11, #0x1                   	// #1
   29a6c:	sub	w11, w11, w8
   29a70:	sub	w8, w8, #0x1
   29a74:	cmp	x9, x10
   29a78:	csel	w0, w8, w11, lt  // lt = tstop
   29a7c:	cmp	w0, #0x0
   29a80:	csel	x22, x22, x23, lt  // lt = tstop
   29a84:	mov	x0, x21
   29a88:	mov	x1, x22
   29a8c:	mov	x2, x19
   29a90:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29a94:	mov	x0, x21
   29a98:	mov	x1, x20
   29a9c:	mov	x2, x19
   29aa0:	ldp	x20, x19, [sp, #48]
   29aa4:	ldp	x22, x21, [sp, #32]
   29aa8:	ldr	x23, [sp, #16]
   29aac:	ldp	x29, x30, [sp], #64
   29ab0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   29ab4:	stp	x29, x30, [sp, #-64]!
   29ab8:	str	x23, [sp, #16]
   29abc:	stp	x22, x21, [sp, #32]
   29ac0:	stp	x20, x19, [sp, #48]
   29ac4:	mov	x29, sp
   29ac8:	ldrb	w9, [x1]
   29acc:	ldrb	w8, [x2]
   29ad0:	mov	x19, x4
   29ad4:	mov	x20, x3
   29ad8:	mov	x22, x2
   29adc:	mov	x23, x1
   29ae0:	mov	x21, x0
   29ae4:	tbz	w9, #2, 29af0 <PyInit__decimal@@Base+0x22f8c>
   29ae8:	and	w10, w8, #0xc
   29aec:	cbz	w10, 29b84 <PyInit__decimal@@Base+0x23020>
   29af0:	tst	w9, #0xc
   29af4:	b.ne	29b04 <PyInit__decimal@@Base+0x22fa0>  // b.any
   29af8:	tbz	w8, #2, 29b04 <PyInit__decimal@@Base+0x22fa0>
   29afc:	mov	x22, x23
   29b00:	b	29b84 <PyInit__decimal@@Base+0x23020>
   29b04:	mov	x0, x21
   29b08:	mov	x1, x23
   29b0c:	mov	x2, x22
   29b10:	mov	x3, x20
   29b14:	mov	x4, x19
   29b18:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   29b1c:	cbz	w0, 29b34 <PyInit__decimal@@Base+0x22fd0>
   29b20:	ldp	x20, x19, [sp, #48]
   29b24:	ldp	x22, x21, [sp, #32]
   29b28:	ldr	x23, [sp, #16]
   29b2c:	ldp	x29, x30, [sp], #64
   29b30:	ret
   29b34:	mov	x0, x23
   29b38:	mov	x1, x22
   29b3c:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   29b40:	cbnz	w0, 29b7c <PyInit__decimal@@Base+0x23018>
   29b44:	ldrb	w8, [x23]
   29b48:	ldrb	w9, [x22]
   29b4c:	and	w10, w8, #0x1
   29b50:	and	w9, w9, #0x1
   29b54:	subs	w0, w9, w10
   29b58:	b.ne	29b7c <PyInit__decimal@@Base+0x23018>  // b.any
   29b5c:	ldr	x9, [x23, #8]
   29b60:	ldr	x10, [x22, #8]
   29b64:	ubfiz	w8, w8, #1, #1
   29b68:	mov	w11, #0x1                   	// #1
   29b6c:	sub	w11, w11, w8
   29b70:	sub	w8, w8, #0x1
   29b74:	cmp	x9, x10
   29b78:	csel	w0, w8, w11, lt  // lt = tstop
   29b7c:	cmp	w0, #0x0
   29b80:	csel	x22, x23, x22, lt  // lt = tstop
   29b84:	mov	x0, x21
   29b88:	mov	x1, x22
   29b8c:	mov	x2, x19
   29b90:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29b94:	mov	x0, x21
   29b98:	mov	x1, x20
   29b9c:	mov	x2, x19
   29ba0:	ldp	x20, x19, [sp, #48]
   29ba4:	ldp	x22, x21, [sp, #32]
   29ba8:	ldr	x23, [sp, #16]
   29bac:	ldp	x29, x30, [sp], #64
   29bb0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   29bb4:	stp	x29, x30, [sp, #-64]!
   29bb8:	str	x23, [sp, #16]
   29bbc:	stp	x22, x21, [sp, #32]
   29bc0:	stp	x20, x19, [sp, #48]
   29bc4:	mov	x29, sp
   29bc8:	ldrb	w9, [x1]
   29bcc:	ldrb	w8, [x2]
   29bd0:	mov	x19, x4
   29bd4:	mov	x20, x3
   29bd8:	mov	x22, x2
   29bdc:	mov	x23, x1
   29be0:	mov	x21, x0
   29be4:	tbz	w9, #2, 29bf0 <PyInit__decimal@@Base+0x2308c>
   29be8:	and	w10, w8, #0xc
   29bec:	cbz	w10, 29c84 <PyInit__decimal@@Base+0x23120>
   29bf0:	tst	w9, #0xc
   29bf4:	b.ne	29c04 <PyInit__decimal@@Base+0x230a0>  // b.any
   29bf8:	tbz	w8, #2, 29c04 <PyInit__decimal@@Base+0x230a0>
   29bfc:	mov	x22, x23
   29c00:	b	29c84 <PyInit__decimal@@Base+0x23120>
   29c04:	mov	x0, x21
   29c08:	mov	x1, x23
   29c0c:	mov	x2, x22
   29c10:	mov	x3, x20
   29c14:	mov	x4, x19
   29c18:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   29c1c:	cbz	w0, 29c34 <PyInit__decimal@@Base+0x230d0>
   29c20:	ldp	x20, x19, [sp, #48]
   29c24:	ldp	x22, x21, [sp, #32]
   29c28:	ldr	x23, [sp, #16]
   29c2c:	ldp	x29, x30, [sp], #64
   29c30:	ret
   29c34:	mov	x0, x23
   29c38:	mov	x1, x22
   29c3c:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   29c40:	cbnz	w0, 29c7c <PyInit__decimal@@Base+0x23118>
   29c44:	ldrb	w8, [x23]
   29c48:	ldrb	w9, [x22]
   29c4c:	and	w10, w8, #0x1
   29c50:	and	w9, w9, #0x1
   29c54:	subs	w0, w9, w10
   29c58:	b.ne	29c7c <PyInit__decimal@@Base+0x23118>  // b.any
   29c5c:	ldr	x9, [x23, #8]
   29c60:	ldr	x10, [x22, #8]
   29c64:	ubfiz	w8, w8, #1, #1
   29c68:	mov	w11, #0x1                   	// #1
   29c6c:	sub	w11, w11, w8
   29c70:	sub	w8, w8, #0x1
   29c74:	cmp	x9, x10
   29c78:	csel	w0, w8, w11, lt  // lt = tstop
   29c7c:	cmp	w0, #0x0
   29c80:	csel	x22, x23, x22, lt  // lt = tstop
   29c84:	mov	x0, x21
   29c88:	mov	x1, x22
   29c8c:	mov	x2, x19
   29c90:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29c94:	mov	x0, x21
   29c98:	mov	x1, x20
   29c9c:	mov	x2, x19
   29ca0:	ldp	x20, x19, [sp, #48]
   29ca4:	ldp	x22, x21, [sp, #32]
   29ca8:	ldr	x23, [sp, #16]
   29cac:	ldp	x29, x30, [sp], #64
   29cb0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   29cb4:	stp	x29, x30, [sp, #-64]!
   29cb8:	stp	x28, x23, [sp, #16]
   29cbc:	stp	x22, x21, [sp, #32]
   29cc0:	stp	x20, x19, [sp, #48]
   29cc4:	mov	x29, sp
   29cc8:	sub	sp, sp, #0x260
   29ccc:	mov	x23, x0
   29cd0:	mov	w8, #0x30                  	// #48
   29cd4:	mov	w9, #0x40                  	// #64
   29cd8:	add	x10, sp, #0x30
   29cdc:	sub	x0, x29, #0x30
   29ce0:	mov	x19, x4
   29ce4:	mov	x20, x3
   29ce8:	mov	x21, x2
   29cec:	mov	x22, x1
   29cf0:	stp	xzr, xzr, [sp, #8]
   29cf4:	strb	w8, [sp]
   29cf8:	stp	xzr, x9, [sp, #24]
   29cfc:	str	x10, [sp, #40]
   29d00:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   29d04:	cmp	x21, #0x0
   29d08:	cneg	x2, x21, mi  // mi = first
   29d0c:	lsr	x1, x21, #63
   29d10:	mov	x0, sp
   29d14:	mov	x3, xzr
   29d18:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   29d1c:	mov	x0, sp
   29d20:	sub	x1, x29, #0x30
   29d24:	mov	x2, x19
   29d28:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29d2c:	mov	x2, sp
   29d30:	mov	x0, x23
   29d34:	mov	x1, x22
   29d38:	mov	x3, x20
   29d3c:	mov	x4, x19
   29d40:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   29d44:	mov	x0, x23
   29d48:	mov	x1, x20
   29d4c:	mov	x2, x19
   29d50:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29d54:	ldrb	w8, [sp]
   29d58:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   29d5c:	cmp	w8, #0x1f
   29d60:	b.hi	29d74 <PyInit__decimal@@Base+0x23210>  // b.pmore
   29d64:	ldr	x8, [x19, #1384]
   29d68:	ldr	x0, [sp, #40]
   29d6c:	blr	x8
   29d70:	ldrb	w8, [sp]
   29d74:	tbnz	w8, #4, 29d84 <PyInit__decimal@@Base+0x23220>
   29d78:	ldr	x8, [x19, #1384]
   29d7c:	mov	x0, sp
   29d80:	blr	x8
   29d84:	add	sp, sp, #0x260
   29d88:	ldp	x20, x19, [sp, #48]
   29d8c:	ldp	x22, x21, [sp, #32]
   29d90:	ldp	x28, x23, [sp, #16]
   29d94:	ldp	x29, x30, [sp], #64
   29d98:	ret
   29d9c:	stp	x29, x30, [sp, #-64]!
   29da0:	stp	x28, x23, [sp, #16]
   29da4:	stp	x22, x21, [sp, #32]
   29da8:	stp	x20, x19, [sp, #48]
   29dac:	mov	x29, sp
   29db0:	sub	sp, sp, #0x260
   29db4:	mov	x23, x0
   29db8:	mov	w8, #0x30                  	// #48
   29dbc:	mov	w9, #0x40                  	// #64
   29dc0:	add	x10, sp, #0x30
   29dc4:	sub	x0, x29, #0x30
   29dc8:	mov	x19, x4
   29dcc:	mov	x20, x3
   29dd0:	mov	x21, x2
   29dd4:	mov	x22, x1
   29dd8:	stp	xzr, xzr, [sp, #8]
   29ddc:	strb	w8, [sp]
   29de0:	stp	xzr, x9, [sp, #24]
   29de4:	str	x10, [sp, #40]
   29de8:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   29dec:	mov	x0, sp
   29df0:	mov	w1, wzr
   29df4:	mov	x2, x21
   29df8:	mov	x3, xzr
   29dfc:	bl	209e4 <PyInit__decimal@@Base+0x19e80>
   29e00:	mov	x0, sp
   29e04:	sub	x1, x29, #0x30
   29e08:	mov	x2, x19
   29e0c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29e10:	mov	x2, sp
   29e14:	mov	x0, x23
   29e18:	mov	x1, x22
   29e1c:	mov	x3, x20
   29e20:	mov	x4, x19
   29e24:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   29e28:	mov	x0, x23
   29e2c:	mov	x1, x20
   29e30:	mov	x2, x19
   29e34:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29e38:	ldrb	w8, [sp]
   29e3c:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   29e40:	cmp	w8, #0x1f
   29e44:	b.hi	29e58 <PyInit__decimal@@Base+0x232f4>  // b.pmore
   29e48:	ldr	x8, [x19, #1384]
   29e4c:	ldr	x0, [sp, #40]
   29e50:	blr	x8
   29e54:	ldrb	w8, [sp]
   29e58:	tbnz	w8, #4, 29e68 <PyInit__decimal@@Base+0x23304>
   29e5c:	ldr	x8, [x19, #1384]
   29e60:	mov	x0, sp
   29e64:	blr	x8
   29e68:	add	sp, sp, #0x260
   29e6c:	ldp	x20, x19, [sp, #48]
   29e70:	ldp	x22, x21, [sp, #32]
   29e74:	ldp	x28, x23, [sp, #16]
   29e78:	ldp	x29, x30, [sp], #64
   29e7c:	ret
   29e80:	sxtw	x2, w2
   29e84:	b	29cb4 <PyInit__decimal@@Base+0x23150>
   29e88:	mov	w2, w2
   29e8c:	b	29d9c <PyInit__decimal@@Base+0x23238>
   29e90:	b	29cb4 <PyInit__decimal@@Base+0x23150>
   29e94:	b	29d9c <PyInit__decimal@@Base+0x23238>
   29e98:	sub	sp, sp, #0xa0
   29e9c:	stp	x29, x30, [sp, #112]
   29ea0:	stp	x22, x21, [sp, #128]
   29ea4:	stp	x20, x19, [sp, #144]
   29ea8:	add	x29, sp, #0x70
   29eac:	mov	w8, #0x90                  	// #144
   29eb0:	strb	w8, [sp, #8]
   29eb4:	ldr	x8, [x2, #16]
   29eb8:	ldr	x9, [x2]
   29ebc:	mov	w10, #0x1                   	// #1
   29ec0:	dup	v0.2d, x10
   29ec4:	stur	q0, [sp, #24]
   29ec8:	sub	x11, x8, x9
   29ecc:	str	x11, [sp, #16]
   29ed0:	add	x11, sp, #0x38
   29ed4:	str	x10, [sp, #40]
   29ed8:	stp	x11, x10, [sp, #48]
   29edc:	ldrb	w10, [x1]
   29ee0:	mov	x19, x3
   29ee4:	mov	x22, x2
   29ee8:	mov	x21, x1
   29eec:	tst	w10, #0xe
   29ef0:	mov	x20, x0
   29ef4:	b.eq	29f54 <PyInit__decimal@@Base+0x233f0>  // b.none
   29ef8:	mov	x0, x20
   29efc:	mov	x1, x21
   29f00:	mov	x2, x22
   29f04:	mov	x3, x19
   29f08:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   29f0c:	cbnz	w0, 29ff8 <PyInit__decimal@@Base+0x23494>
   29f10:	ldrb	w8, [x21]
   29f14:	tbnz	w8, #0, 29fe8 <PyInit__decimal@@Base+0x23484>
   29f18:	ldrb	w8, [x20]
   29f1c:	mov	x0, x20
   29f20:	mov	x1, x22
   29f24:	mov	x2, x19
   29f28:	and	w8, w8, #0xf0
   29f2c:	strb	w8, [x20]
   29f30:	bl	205f0 <PyInit__decimal@@Base+0x19a8c>
   29f34:	ldrb	w8, [x20]
   29f38:	tst	w8, #0xc
   29f3c:	b.ne	29ff8 <PyInit__decimal@@Base+0x23494>  // b.any
   29f40:	ldp	x9, x8, [x22]
   29f44:	sub	x8, x8, x9
   29f48:	add	x8, x8, #0x1
   29f4c:	str	x8, [x20, #8]
   29f50:	b	29ff8 <PyInit__decimal@@Base+0x23494>
   29f54:	stur	x9, [x29, #-48]
   29f58:	ldr	x9, [x22, #8]
   29f5c:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   29f60:	stp	x8, xzr, [x29, #-32]
   29f64:	ldr	d0, [x10, #2912]
   29f68:	stur	x9, [x29, #-40]
   29f6c:	ldr	x8, [x22, #40]
   29f70:	mov	x0, x20
   29f74:	mov	x1, x21
   29f78:	mov	x2, x19
   29f7c:	stur	x8, [x29, #-8]
   29f80:	stur	d0, [x29, #-16]
   29f84:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29f88:	cbz	w0, 29ff8 <PyInit__decimal@@Base+0x23494>
   29f8c:	sub	x8, x29, #0x30
   29f90:	add	x22, x8, #0x1c
   29f94:	sub	x1, x29, #0x30
   29f98:	mov	x0, x20
   29f9c:	mov	x2, x22
   29fa0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   29fa4:	ldur	w8, [x29, #-20]
   29fa8:	tst	w8, #0x3fe
   29fac:	b.ne	29fd0 <PyInit__decimal@@Base+0x2346c>  // b.any
   29fb0:	add	x2, sp, #0x8
   29fb4:	sub	x3, x29, #0x30
   29fb8:	mov	x0, x20
   29fbc:	mov	x1, x21
   29fc0:	mov	x4, x22
   29fc4:	stur	wzr, [x29, #-20]
   29fc8:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   29fcc:	ldur	w8, [x29, #-20]
   29fd0:	ldr	w9, [x19]
   29fd4:	mov	w10, #0x3be                 	// #958
   29fd8:	and	w8, w8, w10
   29fdc:	orr	w8, w9, w8
   29fe0:	str	w8, [x19]
   29fe4:	b	29ff8 <PyInit__decimal@@Base+0x23494>
   29fe8:	mov	x0, x20
   29fec:	mov	x1, x21
   29ff0:	mov	x2, x19
   29ff4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   29ff8:	ldp	x20, x19, [sp, #144]
   29ffc:	ldp	x22, x21, [sp, #128]
   2a000:	ldp	x29, x30, [sp, #112]
   2a004:	add	sp, sp, #0xa0
   2a008:	ret
   2a00c:	sub	sp, sp, #0xa0
   2a010:	stp	x29, x30, [sp, #112]
   2a014:	stp	x22, x21, [sp, #128]
   2a018:	stp	x20, x19, [sp, #144]
   2a01c:	add	x29, sp, #0x70
   2a020:	mov	w8, #0x90                  	// #144
   2a024:	strb	w8, [sp, #8]
   2a028:	ldr	x8, [x2, #16]
   2a02c:	ldr	x9, [x2]
   2a030:	mov	w10, #0x1                   	// #1
   2a034:	dup	v0.2d, x10
   2a038:	stur	q0, [sp, #24]
   2a03c:	sub	x11, x8, x9
   2a040:	str	x11, [sp, #16]
   2a044:	add	x11, sp, #0x38
   2a048:	str	x10, [sp, #40]
   2a04c:	stp	x11, x10, [sp, #48]
   2a050:	ldrb	w10, [x1]
   2a054:	mov	x19, x3
   2a058:	mov	x22, x2
   2a05c:	mov	x21, x1
   2a060:	tst	w10, #0xe
   2a064:	mov	x20, x0
   2a068:	b.eq	2a0a0 <PyInit__decimal@@Base+0x2353c>  // b.none
   2a06c:	mov	x0, x20
   2a070:	mov	x1, x21
   2a074:	mov	x2, x22
   2a078:	mov	x3, x19
   2a07c:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2a080:	cbnz	w0, 2a178 <PyInit__decimal@@Base+0x23614>
   2a084:	ldrb	w8, [x21]
   2a088:	tbnz	w8, #0, 2a134 <PyInit__decimal@@Base+0x235d0>
   2a08c:	mov	x0, x20
   2a090:	mov	x1, x21
   2a094:	mov	x2, x19
   2a098:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2a09c:	b	2a178 <PyInit__decimal@@Base+0x23614>
   2a0a0:	stur	x9, [x29, #-48]
   2a0a4:	ldr	x9, [x22, #8]
   2a0a8:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   2a0ac:	stp	x8, xzr, [x29, #-32]
   2a0b0:	ldr	d0, [x10, #2920]
   2a0b4:	stur	x9, [x29, #-40]
   2a0b8:	ldr	x8, [x22, #40]
   2a0bc:	mov	x0, x20
   2a0c0:	mov	x1, x21
   2a0c4:	mov	x2, x19
   2a0c8:	stur	x8, [x29, #-8]
   2a0cc:	stur	d0, [x29, #-16]
   2a0d0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2a0d4:	cbz	w0, 2a178 <PyInit__decimal@@Base+0x23614>
   2a0d8:	sub	x8, x29, #0x30
   2a0dc:	add	x22, x8, #0x1c
   2a0e0:	sub	x1, x29, #0x30
   2a0e4:	mov	x0, x20
   2a0e8:	mov	x2, x22
   2a0ec:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2a0f0:	ldur	w8, [x29, #-20]
   2a0f4:	tst	w8, #0x3fe
   2a0f8:	b.ne	2a11c <PyInit__decimal@@Base+0x235b8>  // b.any
   2a0fc:	add	x2, sp, #0x8
   2a100:	sub	x3, x29, #0x30
   2a104:	mov	x0, x20
   2a108:	mov	x1, x21
   2a10c:	mov	x4, x22
   2a110:	stur	wzr, [x29, #-20]
   2a114:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   2a118:	ldur	w8, [x29, #-20]
   2a11c:	ldr	w9, [x19]
   2a120:	mov	w10, #0x3be                 	// #958
   2a124:	and	w8, w8, w10
   2a128:	orr	w8, w9, w8
   2a12c:	str	w8, [x19]
   2a130:	b	2a178 <PyInit__decimal@@Base+0x23614>
   2a134:	ldrb	w8, [x20]
   2a138:	mov	x0, x20
   2a13c:	mov	x1, x22
   2a140:	mov	x2, x19
   2a144:	and	w8, w8, #0xf0
   2a148:	strb	w8, [x20]
   2a14c:	bl	205f0 <PyInit__decimal@@Base+0x19a8c>
   2a150:	ldrb	w8, [x20]
   2a154:	tst	w8, #0xc
   2a158:	b.ne	2a178 <PyInit__decimal@@Base+0x23614>  // b.any
   2a15c:	and	w8, w8, #0xf0
   2a160:	orr	w8, w8, #0x1
   2a164:	strb	w8, [x20]
   2a168:	ldp	x9, x8, [x22]
   2a16c:	sub	x8, x8, x9
   2a170:	add	x8, x8, #0x1
   2a174:	str	x8, [x20, #8]
   2a178:	ldp	x20, x19, [sp, #144]
   2a17c:	ldp	x22, x21, [sp, #128]
   2a180:	ldp	x29, x30, [sp, #112]
   2a184:	add	sp, sp, #0xa0
   2a188:	ret
   2a18c:	stp	x29, x30, [sp, #-64]!
   2a190:	str	x23, [sp, #16]
   2a194:	stp	x22, x21, [sp, #32]
   2a198:	stp	x20, x19, [sp, #48]
   2a19c:	mov	x29, sp
   2a1a0:	mov	x19, x4
   2a1a4:	mov	x21, x3
   2a1a8:	mov	x23, x2
   2a1ac:	mov	x22, x1
   2a1b0:	mov	x20, x0
   2a1b4:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2a1b8:	cbz	w0, 2a1d0 <PyInit__decimal@@Base+0x2366c>
   2a1bc:	ldp	x20, x19, [sp, #48]
   2a1c0:	ldp	x22, x21, [sp, #32]
   2a1c4:	ldr	x23, [sp, #16]
   2a1c8:	ldp	x29, x30, [sp], #64
   2a1cc:	ret
   2a1d0:	mov	x0, x22
   2a1d4:	mov	x1, x23
   2a1d8:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2a1dc:	cbz	w0, 2a1fc <PyInit__decimal@@Base+0x23698>
   2a1e0:	tbnz	w0, #31, 2a224 <PyInit__decimal@@Base+0x236c0>
   2a1e4:	mov	x0, x20
   2a1e8:	mov	x1, x22
   2a1ec:	mov	x2, x21
   2a1f0:	mov	x3, x19
   2a1f4:	bl	29e98 <PyInit__decimal@@Base+0x23334>
   2a1f8:	b	2a238 <PyInit__decimal@@Base+0x236d4>
   2a1fc:	ldrb	w21, [x23]
   2a200:	mov	x0, x20
   2a204:	mov	x1, x22
   2a208:	mov	x2, x19
   2a20c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2a210:	cbz	w0, 2a1bc <PyInit__decimal@@Base+0x23658>
   2a214:	ldrb	w8, [x20]
   2a218:	bfxil	w8, w21, #0, #1
   2a21c:	strb	w8, [x20]
   2a220:	b	2a1bc <PyInit__decimal@@Base+0x23658>
   2a224:	mov	x0, x20
   2a228:	mov	x1, x22
   2a22c:	mov	x2, x21
   2a230:	mov	x3, x19
   2a234:	bl	2a00c <PyInit__decimal@@Base+0x234a8>
   2a238:	ldrb	w8, [x20]
   2a23c:	tbnz	w8, #1, 2a290 <PyInit__decimal@@Base+0x2372c>
   2a240:	ldp	x9, x10, [x20, #8]
   2a244:	ldr	x11, [x21, #16]
   2a248:	add	x9, x9, x10
   2a24c:	sub	x9, x9, #0x1
   2a250:	cmp	x9, x11
   2a254:	b.ge	2a1bc <PyInit__decimal@@Base+0x23658>  // b.tcont
   2a258:	ldr	w9, [x19]
   2a25c:	mov	w10, #0x7040                	// #28736
   2a260:	tst	w8, #0xe
   2a264:	orr	w10, w9, w10
   2a268:	str	w10, [x19]
   2a26c:	b.ne	2a1bc <PyInit__decimal@@Base+0x23658>  // b.any
   2a270:	ldr	x8, [x20, #40]
   2a274:	ldr	x10, [x20, #24]
   2a278:	add	x8, x8, x10, lsl #3
   2a27c:	ldur	x8, [x8, #-8]
   2a280:	cbnz	x8, 2a1bc <PyInit__decimal@@Base+0x23658>
   2a284:	mov	w8, #0x7041                	// #28737
   2a288:	orr	w8, w9, w8
   2a28c:	b	2a29c <PyInit__decimal@@Base+0x23738>
   2a290:	ldr	w8, [x19]
   2a294:	mov	w9, #0x1840                	// #6208
   2a298:	orr	w8, w8, w9
   2a29c:	str	w8, [x19]
   2a2a0:	b	2a1bc <PyInit__decimal@@Base+0x23658>
   2a2a4:	stp	x29, x30, [sp, #-96]!
   2a2a8:	stp	x28, x27, [sp, #16]
   2a2ac:	stp	x26, x25, [sp, #32]
   2a2b0:	stp	x24, x23, [sp, #48]
   2a2b4:	stp	x22, x21, [sp, #64]
   2a2b8:	stp	x20, x19, [sp, #80]
   2a2bc:	mov	x29, sp
   2a2c0:	sub	sp, sp, #0x520
   2a2c4:	ldrb	w8, [x1]
   2a2c8:	mov	x20, x4
   2a2cc:	mov	x21, x3
   2a2d0:	mov	x23, x2
   2a2d4:	mov	x24, x1
   2a2d8:	tst	w8, #0xe
   2a2dc:	mov	x19, x0
   2a2e0:	b.ne	2a2f0 <PyInit__decimal@@Base+0x2378c>  // b.any
   2a2e4:	ldrb	w26, [x23]
   2a2e8:	tst	w26, #0xe
   2a2ec:	b.eq	2a330 <PyInit__decimal@@Base+0x237cc>  // b.none
   2a2f0:	mov	x0, x19
   2a2f4:	mov	x1, x24
   2a2f8:	mov	x2, x23
   2a2fc:	mov	x3, x21
   2a300:	mov	x4, x20
   2a304:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2a308:	cbz	w0, 2a32c <PyInit__decimal@@Base+0x237c8>
   2a30c:	add	sp, sp, #0x520
   2a310:	ldp	x20, x19, [sp, #80]
   2a314:	ldp	x22, x21, [sp, #64]
   2a318:	ldp	x24, x23, [sp, #48]
   2a31c:	ldp	x26, x25, [sp, #32]
   2a320:	ldp	x28, x27, [sp, #16]
   2a324:	ldp	x29, x30, [sp], #96
   2a328:	ret
   2a32c:	ldrb	w26, [x23]
   2a330:	ands	w27, w26, #0xe
   2a334:	b.eq	2a344 <PyInit__decimal@@Base+0x237e0>  // b.none
   2a338:	mov	w25, wzr
   2a33c:	mov	w22, wzr
   2a340:	b	2a374 <PyInit__decimal@@Base+0x23810>
   2a344:	mov	x0, x23
   2a348:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2a34c:	cbz	w0, 2a338 <PyInit__decimal@@Base+0x237d4>
   2a350:	ldrb	w8, [x24]
   2a354:	tbnz	w8, #0, 2a360 <PyInit__decimal@@Base+0x237fc>
   2a358:	mov	w22, wzr
   2a35c:	b	2a370 <PyInit__decimal@@Base+0x2380c>
   2a360:	mov	x0, x23
   2a364:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   2a368:	cmp	w0, #0x0
   2a36c:	cset	w22, ne  // ne = any
   2a370:	mov	w25, #0x1                   	// #1
   2a374:	ldrb	w8, [x24]
   2a378:	tst	w8, #0xe
   2a37c:	b.ne	2a394 <PyInit__decimal@@Base+0x23830>  // b.any
   2a380:	ldr	x9, [x24, #40]
   2a384:	ldr	x10, [x24, #24]
   2a388:	add	x9, x9, x10, lsl #3
   2a38c:	ldur	x9, [x9, #-8]
   2a390:	cbz	x9, 2a4e8 <PyInit__decimal@@Base+0x23984>
   2a394:	tbnz	w8, #0, 2a3f4 <PyInit__decimal@@Base+0x23890>
   2a398:	tbz	w26, #1, 2a3fc <PyInit__decimal@@Base+0x23898>
   2a39c:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2a3a0:	add	x1, x1, #0xc88
   2a3a4:	mov	x0, x24
   2a3a8:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2a3ac:	cbz	w0, 2a560 <PyInit__decimal@@Base+0x239fc>
   2a3b0:	ldrb	w8, [x23]
   2a3b4:	mov	w9, #0x1                   	// #1
   2a3b8:	ubfiz	w8, w8, #1, #1
   2a3bc:	sub	w8, w9, w8
   2a3c0:	mul	w8, w8, w0
   2a3c4:	tbnz	w8, #31, 2a504 <PyInit__decimal@@Base+0x239a0>
   2a3c8:	mov	w2, #0x2                   	// #2
   2a3cc:	mov	x0, x19
   2a3d0:	mov	w1, w22
   2a3d4:	add	sp, sp, #0x520
   2a3d8:	ldp	x20, x19, [sp, #80]
   2a3dc:	ldp	x22, x21, [sp, #64]
   2a3e0:	ldp	x24, x23, [sp, #48]
   2a3e4:	ldp	x26, x25, [sp, #32]
   2a3e8:	ldp	x28, x27, [sp, #16]
   2a3ec:	ldp	x29, x30, [sp], #96
   2a3f0:	b	20868 <PyInit__decimal@@Base+0x19d04>
   2a3f4:	tbnz	w26, #1, 2a534 <PyInit__decimal@@Base+0x239d0>
   2a3f8:	cbz	w25, 2a534 <PyInit__decimal@@Base+0x239d0>
   2a3fc:	cbz	w27, 2a4b8 <PyInit__decimal@@Base+0x23954>
   2a400:	mov	w9, wzr
   2a404:	tbnz	w8, #1, 2a4d4 <PyInit__decimal@@Base+0x23970>
   2a408:	cbnz	w9, 2a4d8 <PyInit__decimal@@Base+0x23974>
   2a40c:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2a410:	add	x1, x1, #0xc88
   2a414:	mov	x0, x24
   2a418:	str	wzr, [sp, #584]
   2a41c:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   2a420:	cbz	w0, 2a5b4 <PyInit__decimal@@Base+0x23a50>
   2a424:	ldrb	w8, [x24]
   2a428:	ldr	x9, [x24, #8]
   2a42c:	and	w8, w8, #0xe
   2a430:	mov	w10, #0x50                  	// #80
   2a434:	orr	w10, w8, w10
   2a438:	stur	x9, [x29, #-112]
   2a43c:	ldp	q0, q1, [x24, #16]
   2a440:	sturb	w10, [x29, #-120]
   2a444:	mov	w11, #0x30                  	// #48
   2a448:	stur	q0, [x29, #-104]
   2a44c:	stur	q1, [x29, #-88]
   2a450:	fmov	x8, d0
   2a454:	ldp	x26, x27, [x23, #8]
   2a458:	add	x8, x8, x9
   2a45c:	mov	w9, #0x40                  	// #64
   2a460:	sub	x28, x8, #0x1
   2a464:	stp	xzr, x9, [x29, #-40]
   2a468:	add	x9, sp, #0x18
   2a46c:	cmp	x28, #0x1
   2a470:	sturb	w11, [x29, #-64]
   2a474:	stur	x9, [x29, #-24]
   2a478:	stp	xzr, xzr, [x29, #-56]
   2a47c:	b.lt	2a600 <PyInit__decimal@@Base+0x23a9c>  // b.tstop
   2a480:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   2a484:	add	x8, x8, #0xe70
   2a488:	ldr	x9, [x8, #72]
   2a48c:	cmp	x9, x28
   2a490:	b.ls	2a648 <PyInit__decimal@@Base+0x23ae4>  // b.plast
   2a494:	ldr	x9, [x8, #32]
   2a498:	cmp	x9, x28
   2a49c:	b.ls	2a700 <PyInit__decimal@@Base+0x23b9c>  // b.plast
   2a4a0:	ldr	x9, [x8, #16]
   2a4a4:	cmp	x9, x28
   2a4a8:	b.ls	2a764 <PyInit__decimal@@Base+0x23c00>  // b.plast
   2a4ac:	ldr	x8, [x8, #8]
   2a4b0:	cmp	x8, x28
   2a4b4:	b	2a640 <PyInit__decimal@@Base+0x23adc>
   2a4b8:	ldr	x9, [x23, #40]
   2a4bc:	ldr	x10, [x23, #24]
   2a4c0:	add	x9, x9, x10, lsl #3
   2a4c4:	ldur	x9, [x9, #-8]
   2a4c8:	cmp	x9, #0x0
   2a4cc:	cset	w9, eq  // eq = none
   2a4d0:	tbz	w8, #1, 2a408 <PyInit__decimal@@Base+0x238a4>
   2a4d4:	cbz	w9, 2a5ac <PyInit__decimal@@Base+0x23a48>
   2a4d8:	mov	w2, #0x1                   	// #1
   2a4dc:	mov	x0, x19
   2a4e0:	mov	w1, w22
   2a4e4:	b	2a510 <PyInit__decimal@@Base+0x239ac>
   2a4e8:	cbnz	w27, 2a500 <PyInit__decimal@@Base+0x2399c>
   2a4ec:	ldr	x8, [x23, #40]
   2a4f0:	ldr	x9, [x23, #24]
   2a4f4:	add	x8, x8, x9, lsl #3
   2a4f8:	ldur	x8, [x8, #-8]
   2a4fc:	cbz	x8, 2a534 <PyInit__decimal@@Base+0x239d0>
   2a500:	tbnz	w26, #0, 2a3c8 <PyInit__decimal@@Base+0x23864>
   2a504:	mov	x0, x19
   2a508:	mov	w1, w22
   2a50c:	mov	x2, xzr
   2a510:	mov	x3, xzr
   2a514:	add	sp, sp, #0x520
   2a518:	ldp	x20, x19, [sp, #80]
   2a51c:	ldp	x22, x21, [sp, #64]
   2a520:	ldp	x24, x23, [sp, #48]
   2a524:	ldp	x26, x25, [sp, #32]
   2a528:	ldp	x28, x27, [sp, #16]
   2a52c:	ldp	x29, x30, [sp], #96
   2a530:	b	21100 <PyInit__decimal@@Base+0x1a59c>
   2a534:	mov	w1, #0x100                 	// #256
   2a538:	mov	x0, x19
   2a53c:	mov	x2, x20
   2a540:	add	sp, sp, #0x520
   2a544:	ldp	x20, x19, [sp, #80]
   2a548:	ldp	x22, x21, [sp, #64]
   2a54c:	ldp	x24, x23, [sp, #48]
   2a550:	ldp	x26, x25, [sp, #32]
   2a554:	ldp	x28, x27, [sp, #16]
   2a558:	ldp	x29, x30, [sp], #96
   2a55c:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2a560:	ldr	x21, [x21]
   2a564:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2a568:	add	x1, x1, #0xc88
   2a56c:	mov	x0, x19
   2a570:	sub	x2, x21, #0x1
   2a574:	mov	x3, x20
   2a578:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2a57c:	ldrb	w8, [x19]
   2a580:	mov	w9, #0x1                   	// #1
   2a584:	sub	x9, x9, x21
   2a588:	str	x9, [x19, #8]
   2a58c:	and	w8, w8, #0xf0
   2a590:	orr	w8, w8, w22
   2a594:	strb	w8, [x19]
   2a598:	ldr	w8, [x20]
   2a59c:	mov	w9, #0x1040                	// #4160
   2a5a0:	orr	w8, w8, w9
   2a5a4:	str	w8, [x20]
   2a5a8:	b	2a30c <PyInit__decimal@@Base+0x237a8>
   2a5ac:	tbz	w26, #0, 2a3c8 <PyInit__decimal@@Base+0x23864>
   2a5b0:	b	2a504 <PyInit__decimal@@Base+0x239a0>
   2a5b4:	mov	x0, x23
   2a5b8:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2a5bc:	cbz	w0, 2a66c <PyInit__decimal@@Base+0x23b08>
   2a5c0:	ldrb	w8, [x23]
   2a5c4:	tbnz	w8, #0, 2a6e8 <PyInit__decimal@@Base+0x23b84>
   2a5c8:	ldr	x8, [x24, #8]
   2a5cc:	add	x4, sp, #0x248
   2a5d0:	mov	x0, x19
   2a5d4:	mov	x1, x23
   2a5d8:	neg	x2, x8
   2a5dc:	mov	x3, x21
   2a5e0:	bl	29cb4 <PyInit__decimal@@Base+0x23150>
   2a5e4:	ldr	w8, [sp, #584]
   2a5e8:	mov	w9, #0x3be                 	// #958
   2a5ec:	ands	w8, w8, w9
   2a5f0:	b.eq	2a80c <PyInit__decimal@@Base+0x23ca8>  // b.none
   2a5f4:	ldr	w9, [x20]
   2a5f8:	orr	w8, w9, w8
   2a5fc:	b	2a5a4 <PyInit__decimal@@Base+0x23a40>
   2a600:	cmn	x28, #0x2
   2a604:	b.gt	2a684 <PyInit__decimal@@Base+0x23b20>
   2a608:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   2a60c:	add	x9, x9, #0xe70
   2a610:	ldr	x10, [x9, #72]
   2a614:	neg	x8, x8
   2a618:	cmp	x10, x8
   2a61c:	b.ls	2a73c <PyInit__decimal@@Base+0x23bd8>  // b.plast
   2a620:	ldr	x10, [x9, #32]
   2a624:	cmp	x10, x8
   2a628:	b.ls	2a878 <PyInit__decimal@@Base+0x23d14>  // b.plast
   2a62c:	ldr	x10, [x9, #16]
   2a630:	cmp	x10, x8
   2a634:	b.ls	2a8c8 <PyInit__decimal@@Base+0x23d64>  // b.plast
   2a638:	ldr	x9, [x9, #8]
   2a63c:	cmp	x9, x8
   2a640:	mov	w8, #0x1                   	// #1
   2a644:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a648:	ldr	x9, [x8, #112]
   2a64c:	cmp	x9, x28
   2a650:	b.ls	2a718 <PyInit__decimal@@Base+0x23bb4>  // b.plast
   2a654:	ldr	x9, [x8, #88]
   2a658:	cmp	x9, x28
   2a65c:	b.ls	2a770 <PyInit__decimal@@Base+0x23c0c>  // b.plast
   2a660:	ldr	x8, [x8, #80]
   2a664:	cmp	x8, x28
   2a668:	b	2a75c <PyInit__decimal@@Base+0x23bf8>
   2a66c:	ldrb	w8, [x24]
   2a670:	tbnz	w8, #0, 2a428 <PyInit__decimal@@Base+0x238c4>
   2a674:	ldr	x8, [x21]
   2a678:	sub	x23, x8, #0x1
   2a67c:	mov	w8, #0x1040                	// #4160
   2a680:	b	2a834 <PyInit__decimal@@Base+0x23cd0>
   2a684:	add	x0, sp, #0x248
   2a688:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2a68c:	adrp	x2, 49000 <PyInit__decimal@@Base+0x4249c>
   2a690:	add	x2, x2, #0xc88
   2a694:	sub	x0, x29, #0x40
   2a698:	sub	x1, x29, #0x78
   2a69c:	add	x3, sp, #0x248
   2a6a0:	mov	x4, x20
   2a6a4:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   2a6a8:	ldurb	w8, [x29, #-64]
   2a6ac:	tst	w8, #0xe
   2a6b0:	b.eq	2a7ac <PyInit__decimal@@Base+0x23c48>  // b.none
   2a6b4:	cmp	w8, #0x1f
   2a6b8:	adrp	x28, 4c000 <PyInit__decimal@@Base+0x4549c>
   2a6bc:	b.hi	2a6d0 <PyInit__decimal@@Base+0x23b6c>  // b.pmore
   2a6c0:	ldr	x8, [x28, #1384]
   2a6c4:	ldur	x0, [x29, #-24]
   2a6c8:	blr	x8
   2a6cc:	ldurb	w8, [x29, #-64]
   2a6d0:	tbnz	w8, #4, 2a6e0 <PyInit__decimal@@Base+0x23b7c>
   2a6d4:	ldr	x8, [x28, #1384]
   2a6d8:	sub	x0, x29, #0x40
   2a6dc:	blr	x8
   2a6e0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2a6e4:	b	2a944 <PyInit__decimal@@Base+0x23de0>
   2a6e8:	mov	w2, #0x1                   	// #1
   2a6ec:	mov	x0, x19
   2a6f0:	mov	w1, w22
   2a6f4:	mov	x3, xzr
   2a6f8:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2a6fc:	b	2a30c <PyInit__decimal@@Base+0x237a8>
   2a700:	ldr	x9, [x8, #48]
   2a704:	cmp	x9, x28
   2a708:	b.ls	2a788 <PyInit__decimal@@Base+0x23c24>  // b.plast
   2a70c:	ldr	x8, [x8, #40]
   2a710:	cmp	x8, x28
   2a714:	b	2a88c <PyInit__decimal@@Base+0x23d28>
   2a718:	ldr	x9, [x8, #144]
   2a71c:	cmp	x9, x28
   2a720:	b.ls	2a7a0 <PyInit__decimal@@Base+0x23c3c>  // b.plast
   2a724:	ldr	x9, [x8, #128]
   2a728:	cmp	x9, x28
   2a72c:	b.ls	2a8bc <PyInit__decimal@@Base+0x23d58>  // b.plast
   2a730:	ldr	x8, [x8, #120]
   2a734:	cmp	x8, x28
   2a738:	b	2a8b4 <PyInit__decimal@@Base+0x23d50>
   2a73c:	ldr	x10, [x9, #112]
   2a740:	cmp	x10, x8
   2a744:	b.ls	2a894 <PyInit__decimal@@Base+0x23d30>  // b.plast
   2a748:	ldr	x10, [x9, #88]
   2a74c:	cmp	x10, x8
   2a750:	b.ls	2a8d8 <PyInit__decimal@@Base+0x23d74>  // b.plast
   2a754:	ldr	x9, [x9, #80]
   2a758:	cmp	x9, x8
   2a75c:	mov	w8, #0xa                   	// #10
   2a760:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a764:	ldr	x8, [x8, #24]
   2a768:	cmp	x8, x28
   2a76c:	b	2a8d0 <PyInit__decimal@@Base+0x23d6c>
   2a770:	ldr	x9, [x8, #104]
   2a774:	cmp	x9, x28
   2a778:	b.ls	2a8f4 <PyInit__decimal@@Base+0x23d90>  // b.plast
   2a77c:	ldr	x8, [x8, #96]
   2a780:	cmp	x8, x28
   2a784:	b	2a8ec <PyInit__decimal@@Base+0x23d88>
   2a788:	ldr	x9, [x8, #64]
   2a78c:	cmp	x9, x28
   2a790:	b.ls	2a918 <PyInit__decimal@@Base+0x23db4>  // b.plast
   2a794:	ldr	x8, [x8, #56]
   2a798:	cmp	x8, x28
   2a79c:	b	2a910 <PyInit__decimal@@Base+0x23dac>
   2a7a0:	ldr	x8, [x8, #152]
   2a7a4:	cmp	x8, x28
   2a7a8:	b	2a928 <PyInit__decimal@@Base+0x23dc4>
   2a7ac:	ldur	x9, [x29, #-56]
   2a7b0:	cmp	w8, #0x1f
   2a7b4:	str	x9, [sp, #16]
   2a7b8:	ldur	x9, [x29, #-48]
   2a7bc:	str	x9, [sp, #8]
   2a7c0:	b.hi	2a7d8 <PyInit__decimal@@Base+0x23c74>  // b.pmore
   2a7c4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2a7c8:	ldr	x8, [x8, #1384]
   2a7cc:	ldur	x0, [x29, #-24]
   2a7d0:	blr	x8
   2a7d4:	ldurb	w8, [x29, #-64]
   2a7d8:	tbnz	w8, #4, 2a7ec <PyInit__decimal@@Base+0x23c88>
   2a7dc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2a7e0:	ldr	x8, [x8, #1384]
   2a7e4:	sub	x0, x29, #0x40
   2a7e8:	blr	x8
   2a7ec:	ldr	x9, [sp, #16]
   2a7f0:	cmp	x28, #0x0
   2a7f4:	mov	x8, #0xfffffffffffffffd    	// #-3
   2a7f8:	cinc	x8, x8, ne  // ne = any
   2a7fc:	add	x8, x9, x8
   2a800:	ldr	x9, [sp, #8]
   2a804:	add	x9, x8, x9
   2a808:	b	2a944 <PyInit__decimal@@Base+0x23de0>
   2a80c:	add	x1, sp, #0x248
   2a810:	mov	x0, x19
   2a814:	bl	215f0 <PyInit__decimal@@Base+0x1aa8c>
   2a818:	ldr	x8, [x21]
   2a81c:	mov	x23, x0
   2a820:	sub	x9, x8, #0x1
   2a824:	cmp	x0, x9
   2a828:	b.le	2a840 <PyInit__decimal@@Base+0x23cdc>
   2a82c:	mov	w8, #0x1000                	// #4096
   2a830:	mov	x23, x9
   2a834:	ldr	w9, [x20]
   2a838:	orr	w8, w9, w8
   2a83c:	str	w8, [x20]
   2a840:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2a844:	add	x1, x1, #0xc88
   2a848:	mov	x0, x19
   2a84c:	mov	x2, x23
   2a850:	mov	x3, x20
   2a854:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2a858:	cbz	w0, 2a30c <PyInit__decimal@@Base+0x237a8>
   2a85c:	ldrb	w8, [x19]
   2a860:	neg	x9, x23
   2a864:	str	x9, [x19, #8]
   2a868:	and	w8, w8, #0xf0
   2a86c:	orr	w8, w8, w22
   2a870:	strb	w8, [x19]
   2a874:	b	2a30c <PyInit__decimal@@Base+0x237a8>
   2a878:	ldr	x10, [x9, #48]
   2a87c:	cmp	x10, x8
   2a880:	b.ls	2a8fc <PyInit__decimal@@Base+0x23d98>  // b.plast
   2a884:	ldr	x9, [x9, #40]
   2a888:	cmp	x9, x8
   2a88c:	mov	w8, #0x5                   	// #5
   2a890:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a894:	ldr	x10, [x9, #144]
   2a898:	cmp	x10, x8
   2a89c:	b.ls	2a920 <PyInit__decimal@@Base+0x23dbc>  // b.plast
   2a8a0:	ldr	x10, [x9, #128]
   2a8a4:	cmp	x10, x8
   2a8a8:	b.ls	2a930 <PyInit__decimal@@Base+0x23dcc>  // b.plast
   2a8ac:	ldr	x9, [x9, #120]
   2a8b0:	cmp	x9, x8
   2a8b4:	mov	w8, #0xf                   	// #15
   2a8b8:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a8bc:	ldr	x8, [x8, #136]
   2a8c0:	cmp	x8, x28
   2a8c4:	b	2a938 <PyInit__decimal@@Base+0x23dd4>
   2a8c8:	ldr	x9, [x9, #24]
   2a8cc:	cmp	x9, x8
   2a8d0:	mov	w8, #0x3                   	// #3
   2a8d4:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a8d8:	ldr	x10, [x9, #104]
   2a8dc:	cmp	x10, x8
   2a8e0:	b.ls	2a8f4 <PyInit__decimal@@Base+0x23d90>  // b.plast
   2a8e4:	ldr	x9, [x9, #96]
   2a8e8:	cmp	x9, x8
   2a8ec:	mov	w8, #0xc                   	// #12
   2a8f0:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a8f4:	mov	w8, #0xe                   	// #14
   2a8f8:	b	2a940 <PyInit__decimal@@Base+0x23ddc>
   2a8fc:	ldr	x10, [x9, #64]
   2a900:	cmp	x10, x8
   2a904:	b.ls	2a918 <PyInit__decimal@@Base+0x23db4>  // b.plast
   2a908:	ldr	x9, [x9, #56]
   2a90c:	cmp	x9, x8
   2a910:	mov	w8, #0x7                   	// #7
   2a914:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a918:	mov	w8, #0x9                   	// #9
   2a91c:	b	2a940 <PyInit__decimal@@Base+0x23ddc>
   2a920:	ldr	x9, [x9, #152]
   2a924:	cmp	x9, x8
   2a928:	mov	w8, #0x13                  	// #19
   2a92c:	b	2a93c <PyInit__decimal@@Base+0x23dd8>
   2a930:	ldr	x9, [x9, #136]
   2a934:	cmp	x9, x8
   2a938:	mov	w8, #0x11                  	// #17
   2a93c:	cinc	x8, x8, ls  // ls = plast
   2a940:	sub	x9, x8, #0x1
   2a944:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2a948:	cmp	x9, x8
   2a94c:	b.ne	2a964 <PyInit__decimal@@Base+0x23e00>  // b.any
   2a950:	mov	w1, #0x200                 	// #512
   2a954:	mov	x0, x19
   2a958:	mov	x2, x20
   2a95c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2a960:	b	2a30c <PyInit__decimal@@Base+0x237a8>
   2a964:	ldp	x8, x10, [x29, #-112]
   2a968:	ldrb	w12, [x23]
   2a96c:	add	x11, x26, x27
   2a970:	add	x8, x8, x10
   2a974:	sub	x8, x8, #0x1
   2a978:	lsr	x10, x8, #63
   2a97c:	and	w8, w12, #0x1
   2a980:	cmp	w8, w10
   2a984:	sub	x10, x11, #0x1
   2a988:	b.ne	2a9d4 <PyInit__decimal@@Base+0x23e70>  // b.any
   2a98c:	ldr	x11, [x21, #8]
   2a990:	adrp	x12, 37000 <PyInit__decimal@@Base+0x3049c>
   2a994:	add	x12, x12, #0xe70
   2a998:	ldr	x13, [x12, #72]
   2a99c:	cmp	x11, #0x0
   2a9a0:	cneg	x11, x11, mi  // mi = first
   2a9a4:	cmp	x13, x11
   2a9a8:	b.ls	2aa28 <PyInit__decimal@@Base+0x23ec4>  // b.plast
   2a9ac:	ldr	x13, [x12, #32]
   2a9b0:	cmp	x13, x11
   2a9b4:	b.ls	2aa78 <PyInit__decimal@@Base+0x23f14>  // b.plast
   2a9b8:	ldr	x13, [x12, #16]
   2a9bc:	cmp	x13, x11
   2a9c0:	b.ls	2ab00 <PyInit__decimal@@Base+0x23f9c>  // b.plast
   2a9c4:	ldr	x12, [x12, #8]
   2a9c8:	cmp	x12, x11
   2a9cc:	mov	w11, #0x1                   	// #1
   2a9d0:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2a9d4:	ldr	x11, [x21, #16]
   2a9d8:	ldr	x12, [x21]
   2a9dc:	adrp	x13, 37000 <PyInit__decimal@@Base+0x3049c>
   2a9e0:	add	x13, x13, #0xe70
   2a9e4:	ldr	x14, [x13, #72]
   2a9e8:	sub	x12, x11, x12
   2a9ec:	adds	x11, x12, #0x1
   2a9f0:	mvn	x15, x12
   2a9f4:	csinc	x12, x15, x12, mi  // mi = first
   2a9f8:	cmp	x14, x12
   2a9fc:	b.ls	2aa50 <PyInit__decimal@@Base+0x23eec>  // b.plast
   2aa00:	ldr	x14, [x13, #32]
   2aa04:	cmp	x14, x12
   2aa08:	b.ls	2aa94 <PyInit__decimal@@Base+0x23f30>  // b.plast
   2aa0c:	ldr	x14, [x13, #16]
   2aa10:	cmp	x14, x12
   2aa14:	b.ls	2ab10 <PyInit__decimal@@Base+0x23fac>  // b.plast
   2aa18:	ldr	x13, [x13, #8]
   2aa1c:	cmp	x13, x12
   2aa20:	mov	w12, #0x1                   	// #1
   2aa24:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2aa28:	ldr	x13, [x12, #112]
   2aa2c:	cmp	x13, x11
   2aa30:	b.ls	2aab0 <PyInit__decimal@@Base+0x23f4c>  // b.plast
   2aa34:	ldr	x13, [x12, #88]
   2aa38:	cmp	x13, x11
   2aa3c:	b.ls	2ab20 <PyInit__decimal@@Base+0x23fbc>  // b.plast
   2aa40:	ldr	x12, [x12, #80]
   2aa44:	cmp	x12, x11
   2aa48:	mov	w11, #0xa                   	// #10
   2aa4c:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2aa50:	ldr	x14, [x13, #112]
   2aa54:	cmp	x14, x12
   2aa58:	b.ls	2aad8 <PyInit__decimal@@Base+0x23f74>  // b.plast
   2aa5c:	ldr	x14, [x13, #88]
   2aa60:	cmp	x14, x12
   2aa64:	b.ls	2ab3c <PyInit__decimal@@Base+0x23fd8>  // b.plast
   2aa68:	ldr	x13, [x13, #80]
   2aa6c:	cmp	x13, x12
   2aa70:	mov	w12, #0xa                   	// #10
   2aa74:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2aa78:	ldr	x13, [x12, #48]
   2aa7c:	cmp	x13, x11
   2aa80:	b.ls	2ab58 <PyInit__decimal@@Base+0x23ff4>  // b.plast
   2aa84:	ldr	x12, [x12, #40]
   2aa88:	cmp	x12, x11
   2aa8c:	mov	w11, #0x5                   	// #5
   2aa90:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2aa94:	ldr	x14, [x13, #48]
   2aa98:	cmp	x14, x12
   2aa9c:	b.ls	2ab74 <PyInit__decimal@@Base+0x24010>  // b.plast
   2aaa0:	ldr	x13, [x13, #40]
   2aaa4:	cmp	x13, x12
   2aaa8:	mov	w12, #0x5                   	// #5
   2aaac:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2aab0:	ldr	x13, [x12, #144]
   2aab4:	cmp	x13, x11
   2aab8:	b.ls	2ab90 <PyInit__decimal@@Base+0x2402c>  // b.plast
   2aabc:	ldr	x13, [x12, #128]
   2aac0:	cmp	x13, x11
   2aac4:	b.ls	2abb0 <PyInit__decimal@@Base+0x2404c>  // b.plast
   2aac8:	ldr	x12, [x12, #120]
   2aacc:	cmp	x12, x11
   2aad0:	mov	w11, #0xf                   	// #15
   2aad4:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2aad8:	ldr	x14, [x13, #144]
   2aadc:	cmp	x14, x12
   2aae0:	b.ls	2aba0 <PyInit__decimal@@Base+0x2403c>  // b.plast
   2aae4:	ldr	x14, [x13, #128]
   2aae8:	cmp	x14, x12
   2aaec:	b.ls	2abe4 <PyInit__decimal@@Base+0x24080>  // b.plast
   2aaf0:	ldr	x13, [x13, #120]
   2aaf4:	cmp	x13, x12
   2aaf8:	mov	w12, #0xf                   	// #15
   2aafc:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2ab00:	ldr	x12, [x12, #24]
   2ab04:	cmp	x12, x11
   2ab08:	mov	w11, #0x3                   	// #3
   2ab0c:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2ab10:	ldr	x13, [x13, #24]
   2ab14:	cmp	x13, x12
   2ab18:	mov	w12, #0x3                   	// #3
   2ab1c:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2ab20:	ldr	x13, [x12, #104]
   2ab24:	cmp	x13, x11
   2ab28:	b.ls	2b01c <PyInit__decimal@@Base+0x244b8>  // b.plast
   2ab2c:	ldr	x12, [x12, #96]
   2ab30:	cmp	x12, x11
   2ab34:	mov	w11, #0xc                   	// #12
   2ab38:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2ab3c:	ldr	x14, [x13, #104]
   2ab40:	cmp	x14, x12
   2ab44:	b.ls	2b024 <PyInit__decimal@@Base+0x244c0>  // b.plast
   2ab48:	ldr	x13, [x13, #96]
   2ab4c:	cmp	x13, x12
   2ab50:	mov	w12, #0xc                   	// #12
   2ab54:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2ab58:	ldr	x13, [x12, #64]
   2ab5c:	cmp	x13, x11
   2ab60:	b.ls	2b02c <PyInit__decimal@@Base+0x244c8>  // b.plast
   2ab64:	ldr	x12, [x12, #56]
   2ab68:	cmp	x12, x11
   2ab6c:	mov	w11, #0x7                   	// #7
   2ab70:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2ab74:	ldr	x14, [x13, #64]
   2ab78:	cmp	x14, x12
   2ab7c:	b.ls	2b034 <PyInit__decimal@@Base+0x244d0>  // b.plast
   2ab80:	ldr	x13, [x13, #56]
   2ab84:	cmp	x13, x12
   2ab88:	mov	w12, #0x7                   	// #7
   2ab8c:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2ab90:	ldr	x12, [x12, #152]
   2ab94:	cmp	x12, x11
   2ab98:	mov	w11, #0x13                  	// #19
   2ab9c:	b	2abbc <PyInit__decimal@@Base+0x24058>
   2aba0:	ldr	x13, [x13, #152]
   2aba4:	cmp	x13, x12
   2aba8:	mov	w12, #0x13                  	// #19
   2abac:	b	2abf0 <PyInit__decimal@@Base+0x2408c>
   2abb0:	ldr	x12, [x12, #136]
   2abb4:	cmp	x12, x11
   2abb8:	mov	w11, #0x11                  	// #17
   2abbc:	cinc	x11, x11, ls  // ls = plast
   2abc0:	add	x9, x9, x10
   2abc4:	cmp	x9, x11
   2abc8:	b.le	2ac18 <PyInit__decimal@@Base+0x240b4>
   2abcc:	mov	x3, #0x1                   	// #1
   2abd0:	movk	x3, #0x4ec8, lsl #16
   2abd4:	movk	x3, #0x6d67, lsl #32
   2abd8:	mov	w2, #0x1                   	// #1
   2abdc:	movk	x3, #0x1bc1, lsl #48
   2abe0:	b	2ac08 <PyInit__decimal@@Base+0x240a4>
   2abe4:	ldr	x13, [x13, #136]
   2abe8:	cmp	x13, x12
   2abec:	mov	w12, #0x11                  	// #17
   2abf0:	cinc	x12, x12, ls  // ls = plast
   2abf4:	add	x9, x9, x10
   2abf8:	cmp	x9, x12
   2abfc:	b.le	2ac18 <PyInit__decimal@@Base+0x240b4>
   2ac00:	sub	x3, x11, #0x1
   2ac04:	mov	w2, #0x1                   	// #1
   2ac08:	mov	x0, x19
   2ac0c:	mov	w1, w22
   2ac10:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2ac14:	b	2b0dc <PyInit__decimal@@Base+0x24578>
   2ac18:	cbz	w25, 2acac <PyInit__decimal@@Base+0x24148>
   2ac1c:	mov	w9, #0x30                  	// #48
   2ac20:	mov	w10, #0x40                  	// #64
   2ac24:	add	x11, sp, #0x18
   2ac28:	add	x12, sp, #0x248
   2ac2c:	stp	xzr, xzr, [x29, #-208]
   2ac30:	str	xzr, [sp, #544]
   2ac34:	str	xzr, [sp, #552]
   2ac38:	sturb	w9, [x29, #-216]
   2ac3c:	stp	xzr, x10, [x29, #-192]
   2ac40:	stur	x11, [x29, #-176]
   2ac44:	strb	w9, [sp, #536]
   2ac48:	str	xzr, [sp, #560]
   2ac4c:	str	x10, [sp, #568]
   2ac50:	str	x12, [sp, #576]
   2ac54:	ldur	q0, [x21, #8]
   2ac58:	sub	x25, x29, #0xa8
   2ac5c:	ldr	x9, [x21]
   2ac60:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   2ac64:	stur	q0, [x25, #8]
   2ac68:	stur	xzr, [x29, #-144]
   2ac6c:	ldr	w10, [x21, #44]
   2ac70:	ldr	d0, [x11, #4072]
   2ac74:	stp	wzr, w10, [x29, #-128]
   2ac78:	ldp	x11, x10, [x23, #8]
   2ac7c:	stur	d0, [x29, #-136]
   2ac80:	add	x9, x9, x10
   2ac84:	add	x9, x9, x11
   2ac88:	add	x9, x9, #0x2
   2ac8c:	stur	x9, [x29, #-168]
   2ac90:	cbnz	w8, 2adb8 <PyInit__decimal@@Base+0x24254>
   2ac94:	sub	x0, x29, #0xd8
   2ac98:	mov	x1, x24
   2ac9c:	mov	x2, x20
   2aca0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2aca4:	cbnz	w0, 2adf0 <PyInit__decimal@@Base+0x2428c>
   2aca8:	b	2af88 <PyInit__decimal@@Base+0x24424>
   2acac:	mov	w8, #0x30                  	// #48
   2acb0:	mov	w9, #0x40                  	// #64
   2acb4:	add	x10, sp, #0x18
   2acb8:	sub	x0, x29, #0x40
   2acbc:	mov	x1, x23
   2acc0:	mov	x2, x20
   2acc4:	stp	xzr, xzr, [x29, #-56]
   2acc8:	sturb	w8, [x29, #-64]
   2accc:	stp	xzr, x9, [x29, #-40]
   2acd0:	stur	x10, [x29, #-24]
   2acd4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2acd8:	cbz	w0, 2af9c <PyInit__decimal@@Base+0x24438>
   2acdc:	add	x0, sp, #0x248
   2ace0:	add	x22, sp, #0x248
   2ace4:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2ace8:	ldr	x8, [x24, #16]
   2acec:	ldr	x9, [x21]
   2acf0:	mov	w10, #0x6                   	// #6
   2acf4:	str	w10, [sp, #620]
   2acf8:	add	x22, x22, #0x1c
   2acfc:	cmp	x8, x9
   2ad00:	csel	x8, x8, x9, gt
   2ad04:	add	x8, x8, #0x17
   2ad08:	str	x8, [sp, #584]
   2ad0c:	ldr	w8, [x21, #44]
   2ad10:	add	x2, sp, #0x248
   2ad14:	mov	x0, x19
   2ad18:	mov	x1, x24
   2ad1c:	mov	x3, x22
   2ad20:	str	w8, [sp, #628]
   2ad24:	bl	28510 <PyInit__decimal@@Base+0x219ac>
   2ad28:	sub	x2, x29, #0x40
   2ad2c:	add	x3, sp, #0x248
   2ad30:	mov	x0, x19
   2ad34:	mov	x1, x19
   2ad38:	mov	x4, x22
   2ad3c:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2ad40:	add	x1, sp, #0x248
   2ad44:	mov	x0, x19
   2ad48:	mov	x2, x22
   2ad4c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2ad50:	add	x2, sp, #0x248
   2ad54:	mov	x0, x19
   2ad58:	mov	x1, x19
   2ad5c:	mov	x3, x20
   2ad60:	bl	26af8 <PyInit__decimal@@Base+0x1ff94>
   2ad64:	ldurb	w8, [x29, #-64]
   2ad68:	cmp	w8, #0x1f
   2ad6c:	b.hi	2ad84 <PyInit__decimal@@Base+0x24220>  // b.pmore
   2ad70:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2ad74:	ldr	x8, [x8, #1384]
   2ad78:	ldur	x0, [x29, #-24]
   2ad7c:	blr	x8
   2ad80:	ldurb	w8, [x29, #-64]
   2ad84:	tbnz	w8, #4, 2ad98 <PyInit__decimal@@Base+0x24234>
   2ad88:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2ad8c:	ldr	x8, [x8, #1384]
   2ad90:	sub	x0, x29, #0x40
   2ad94:	blr	x8
   2ad98:	ldr	w8, [sp, #612]
   2ad9c:	ldr	w9, [x20]
   2ada0:	and	w8, w8, #0x3fe
   2ada4:	orr	w8, w9, w8
   2ada8:	mov	w9, #0x1040                	// #4160
   2adac:	orr	w8, w8, w9
   2adb0:	str	w8, [x20]
   2adb4:	b	2afac <PyInit__decimal@@Base+0x24448>
   2adb8:	adrp	x2, 49000 <PyInit__decimal@@Base+0x4249c>
   2adbc:	add	x8, x9, #0x1
   2adc0:	add	x2, x2, #0xc88
   2adc4:	sub	x1, x29, #0xd8
   2adc8:	sub	x4, x29, #0xa8
   2adcc:	mov	w0, #0x1                   	// #1
   2add0:	mov	x3, x24
   2add4:	mov	x5, x20
   2add8:	stur	x8, [x29, #-168]
   2addc:	bl	257a0 <PyInit__decimal@@Base+0x1ec3c>
   2ade0:	ldrh	w8, [x20]
   2ade4:	mov	w9, #0x3be                 	// #958
   2ade8:	tst	w8, w9
   2adec:	b.ne	2af88 <PyInit__decimal@@Base+0x24424>  // b.any
   2adf0:	sub	x8, x29, #0xa8
   2adf4:	add	x2, x8, #0x1c
   2adf8:	mov	w0, wzr
   2adfc:	mov	x1, x23
   2ae00:	bl	213a8 <PyInit__decimal@@Base+0x1a844>
   2ae04:	ldurb	w8, [x29, #-139]
   2ae08:	tbnz	w8, #0, 2ae2c <PyInit__decimal@@Base+0x242c8>
   2ae0c:	mov	x2, x0
   2ae10:	sub	x1, x29, #0xd8
   2ae14:	sub	x4, x29, #0xa8
   2ae18:	mov	x0, x19
   2ae1c:	mov	w3, w22
   2ae20:	mov	x5, x20
   2ae24:	bl	2f794 <PyInit__decimal@@Base+0x28c30>
   2ae28:	b	2b04c <PyInit__decimal@@Base+0x244e8>
   2ae2c:	add	x0, sp, #0x218
   2ae30:	mov	x1, x23
   2ae34:	mov	x2, x20
   2ae38:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2ae3c:	cbz	w0, 2af88 <PyInit__decimal@@Base+0x24424>
   2ae40:	adrp	x11, 31000 <PyInit__decimal@@Base+0x2a49c>
   2ae44:	ldr	q0, [x11, #2016]
   2ae48:	mov	w10, #0x1                   	// #1
   2ae4c:	mov	w8, #0x2                   	// #2
   2ae50:	mov	w9, #0x90                  	// #144
   2ae54:	sub	x12, x29, #0x48
   2ae58:	dup	v1.2d, x10
   2ae5c:	sub	x0, x29, #0x40
   2ae60:	stur	wzr, [x29, #-12]
   2ae64:	stp	x12, x8, [x29, #-80]
   2ae68:	sturb	w9, [x29, #-120]
   2ae6c:	stur	q1, [x25, #72]
   2ae70:	stur	q0, [x25, #56]
   2ae74:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2ae78:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2ae7c:	add	x1, x1, #0xc88
   2ae80:	mov	x0, x19
   2ae84:	mov	x2, x20
   2ae88:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2ae8c:	ldrb	w8, [sp, #536]
   2ae90:	tst	w8, #0xe
   2ae94:	b.ne	2aeac <PyInit__decimal@@Base+0x24348>  // b.any
   2ae98:	ldr	x8, [sp, #576]
   2ae9c:	ldr	x9, [sp, #560]
   2aea0:	add	x8, x8, x9, lsl #3
   2aea4:	ldur	x8, [x8, #-8]
   2aea8:	cbz	x8, 2b03c <PyInit__decimal@@Base+0x244d8>
   2aeac:	add	x0, sp, #0x218
   2aeb0:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   2aeb4:	cbz	w0, 2af14 <PyInit__decimal@@Base+0x243b0>
   2aeb8:	sub	x2, x29, #0xd8
   2aebc:	sub	x3, x29, #0xa8
   2aec0:	sub	x4, x29, #0xc
   2aec4:	mov	x0, x19
   2aec8:	mov	x1, x19
   2aecc:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2aed0:	sub	x1, x29, #0xa8
   2aed4:	sub	x2, x29, #0xc
   2aed8:	mov	x0, x19
   2aedc:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2aee0:	ldur	w9, [x29, #-12]
   2aee4:	ldr	w8, [x20]
   2aee8:	orr	w8, w8, w9
   2aeec:	str	w8, [x20]
   2aef0:	ldrb	w8, [x19]
   2aef4:	tst	w8, #0xe
   2aef8:	b.ne	2b040 <PyInit__decimal@@Base+0x244dc>  // b.any
   2aefc:	tbz	w9, #0, 2af14 <PyInit__decimal@@Base+0x243b0>
   2af00:	ldr	x9, [x19, #40]
   2af04:	ldr	x10, [x19, #24]
   2af08:	add	x9, x9, x10, lsl #3
   2af0c:	ldur	x9, [x9, #-8]
   2af10:	cbz	x9, 2b040 <PyInit__decimal@@Base+0x244dc>
   2af14:	sub	x0, x29, #0xd8
   2af18:	sub	x1, x29, #0xd8
   2af1c:	sub	x2, x29, #0xd8
   2af20:	sub	x3, x29, #0xa8
   2af24:	sub	x4, x29, #0xc
   2af28:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2af2c:	sub	x0, x29, #0xd8
   2af30:	sub	x1, x29, #0xa8
   2af34:	sub	x2, x29, #0xc
   2af38:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2af3c:	add	x0, sp, #0x218
   2af40:	add	x1, sp, #0x218
   2af44:	sub	x2, x29, #0x78
   2af48:	sub	x3, x29, #0x40
   2af4c:	sub	x4, x29, #0xc
   2af50:	bl	26784 <PyInit__decimal@@Base+0x1fc20>
   2af54:	ldurb	w8, [x29, #-216]
   2af58:	tst	w8, #0xc
   2af5c:	b.ne	2af6c <PyInit__decimal@@Base+0x24408>  // b.any
   2af60:	ldrb	w8, [sp, #536]
   2af64:	tst	w8, #0xc
   2af68:	b.eq	2ae90 <PyInit__decimal@@Base+0x2432c>  // b.none
   2af6c:	ldur	w8, [x29, #-12]
   2af70:	mov	w9, #0x3be                 	// #958
   2af74:	mov	x0, x19
   2af78:	mov	x2, x20
   2af7c:	and	w1, w8, w9
   2af80:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2af84:	b	2b04c <PyInit__decimal@@Base+0x244e8>
   2af88:	mov	w2, #0x4                   	// #4
   2af8c:	mov	x0, x19
   2af90:	mov	w1, wzr
   2af94:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2af98:	b	2b074 <PyInit__decimal@@Base+0x24510>
   2af9c:	mov	w1, #0x200                 	// #512
   2afa0:	mov	x0, x19
   2afa4:	mov	x2, x20
   2afa8:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2afac:	ldrb	w8, [x19]
   2afb0:	tst	w8, #0xe
   2afb4:	b.ne	2aff4 <PyInit__decimal@@Base+0x24490>  // b.any
   2afb8:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2afbc:	add	x1, x1, #0xc88
   2afc0:	mov	x0, x19
   2afc4:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2afc8:	cbnz	w0, 2aff4 <PyInit__decimal@@Base+0x24490>
   2afcc:	ldr	x22, [x21]
   2afd0:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2afd4:	add	x1, x1, #0xc88
   2afd8:	mov	x0, x19
   2afdc:	sub	x2, x22, #0x1
   2afe0:	mov	x3, x20
   2afe4:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2afe8:	mov	w8, #0x1                   	// #1
   2afec:	sub	x8, x8, x22
   2aff0:	str	x8, [x19, #8]
   2aff4:	ldrb	w8, [x19]
   2aff8:	tbz	w8, #1, 2b0dc <PyInit__decimal@@Base+0x24578>
   2affc:	mov	x3, #0x1                   	// #1
   2b000:	movk	x3, #0x4ec8, lsl #16
   2b004:	movk	x3, #0x6d67, lsl #32
   2b008:	mov	w2, #0x1                   	// #1
   2b00c:	movk	x3, #0x1bc1, lsl #48
   2b010:	mov	x0, x19
   2b014:	mov	w1, wzr
   2b018:	b	2ac10 <PyInit__decimal@@Base+0x240ac>
   2b01c:	mov	w11, #0xe                   	// #14
   2b020:	b	2abc0 <PyInit__decimal@@Base+0x2405c>
   2b024:	mov	w12, #0xe                   	// #14
   2b028:	b	2abf4 <PyInit__decimal@@Base+0x24090>
   2b02c:	mov	w11, #0x9                   	// #9
   2b030:	b	2abc0 <PyInit__decimal@@Base+0x2405c>
   2b034:	mov	w12, #0x9                   	// #9
   2b038:	b	2abf4 <PyInit__decimal@@Base+0x24090>
   2b03c:	ldrb	w8, [x19]
   2b040:	and	w8, w8, #0xfe
   2b044:	orr	w8, w8, w22
   2b048:	strb	w8, [x19]
   2b04c:	ldrb	w8, [x19]
   2b050:	tbz	w8, #1, 2b074 <PyInit__decimal@@Base+0x24510>
   2b054:	mov	x3, #0x1                   	// #1
   2b058:	movk	x3, #0x4ec8, lsl #16
   2b05c:	movk	x3, #0x6d67, lsl #32
   2b060:	mov	w2, #0x1                   	// #1
   2b064:	movk	x3, #0x1bc1, lsl #48
   2b068:	mov	x0, x19
   2b06c:	mov	w1, w22
   2b070:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2b074:	ldurb	w8, [x29, #-216]
   2b078:	cmp	w8, #0x1f
   2b07c:	b.hi	2b094 <PyInit__decimal@@Base+0x24530>  // b.pmore
   2b080:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b084:	ldr	x8, [x8, #1384]
   2b088:	ldur	x0, [x29, #-176]
   2b08c:	blr	x8
   2b090:	ldurb	w8, [x29, #-216]
   2b094:	tbnz	w8, #4, 2b0a8 <PyInit__decimal@@Base+0x24544>
   2b098:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b09c:	ldr	x8, [x8, #1384]
   2b0a0:	sub	x0, x29, #0xd8
   2b0a4:	blr	x8
   2b0a8:	ldrb	w8, [sp, #536]
   2b0ac:	cmp	w8, #0x1f
   2b0b0:	b.hi	2b0c8 <PyInit__decimal@@Base+0x24564>  // b.pmore
   2b0b4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b0b8:	ldr	x8, [x8, #1384]
   2b0bc:	ldr	x0, [sp, #576]
   2b0c0:	blr	x8
   2b0c4:	ldrb	w8, [sp, #536]
   2b0c8:	tbnz	w8, #4, 2b0dc <PyInit__decimal@@Base+0x24578>
   2b0cc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b0d0:	ldr	x8, [x8, #1384]
   2b0d4:	add	x0, sp, #0x218
   2b0d8:	blr	x8
   2b0dc:	mov	x0, x19
   2b0e0:	mov	x1, x21
   2b0e4:	mov	x2, x20
   2b0e8:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2b0ec:	b	2a30c <PyInit__decimal@@Base+0x237a8>
   2b0f0:	stp	x29, x30, [sp, #-96]!
   2b0f4:	str	x28, [sp, #16]
   2b0f8:	stp	x26, x25, [sp, #32]
   2b0fc:	stp	x24, x23, [sp, #48]
   2b100:	stp	x22, x21, [sp, #64]
   2b104:	stp	x20, x19, [sp, #80]
   2b108:	mov	x29, sp
   2b10c:	sub	sp, sp, #0x980
   2b110:	add	x10, sp, #0x720
   2b114:	str	x10, [sp, #1816]
   2b118:	add	x10, sp, #0x4f0
   2b11c:	str	x10, [sp, #1256]
   2b120:	add	x10, sp, #0x2c0
   2b124:	str	x10, [sp, #696]
   2b128:	add	x10, sp, #0x90
   2b12c:	str	x10, [sp, #136]
   2b130:	mov	w10, #0x1                   	// #1
   2b134:	dup	v0.2d, x10
   2b138:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
   2b13c:	stur	q0, [sp, #72]
   2b140:	ldr	q0, [x10, #2016]
   2b144:	mov	w8, #0x30                  	// #48
   2b148:	mov	w9, #0x40                  	// #64
   2b14c:	strb	w8, [sp, #1776]
   2b150:	strb	w8, [sp, #1216]
   2b154:	strb	w8, [sp, #656]
   2b158:	strb	w8, [sp, #96]
   2b15c:	mov	w8, #0x2                   	// #2
   2b160:	str	x9, [sp, #1808]
   2b164:	str	x9, [sp, #1248]
   2b168:	str	x9, [sp, #688]
   2b16c:	stp	xzr, x9, [sp, #120]
   2b170:	mov	w9, #0x90                  	// #144
   2b174:	add	x10, x29, #0x18
   2b178:	str	xzr, [sp, #1784]
   2b17c:	str	xzr, [sp, #1792]
   2b180:	str	xzr, [sp, #1224]
   2b184:	str	xzr, [sp, #1232]
   2b188:	str	xzr, [sp, #664]
   2b18c:	str	xzr, [sp, #672]
   2b190:	stp	xzr, xzr, [sp, #104]
   2b194:	str	xzr, [sp, #1800]
   2b198:	str	xzr, [sp, #1240]
   2b19c:	str	xzr, [sp, #680]
   2b1a0:	str	x8, [x29, #24]
   2b1a4:	strb	w9, [sp, #48]
   2b1a8:	str	x10, [sp, #88]
   2b1ac:	stur	q0, [sp, #56]
   2b1b0:	ldrb	w26, [x1]
   2b1b4:	ldrb	w25, [x2]
   2b1b8:	mov	x19, x5
   2b1bc:	mov	x21, x4
   2b1c0:	mov	x24, x3
   2b1c4:	orr	w8, w26, w25
   2b1c8:	mov	x22, x2
   2b1cc:	mov	x23, x1
   2b1d0:	tst	w8, #0xe
   2b1d4:	mov	x20, x0
   2b1d8:	b.ne	2b1e8 <PyInit__decimal@@Base+0x24684>  // b.any
   2b1dc:	ldrb	w8, [x24]
   2b1e0:	tst	w8, #0xe
   2b1e4:	b.eq	2b220 <PyInit__decimal@@Base+0x246bc>  // b.none
   2b1e8:	ldrb	w8, [x24]
   2b1ec:	orr	w9, w25, w26
   2b1f0:	orr	w9, w9, w8
   2b1f4:	tst	w9, #0xc
   2b1f8:	b.eq	2b37c <PyInit__decimal@@Base+0x24818>  // b.none
   2b1fc:	tbnz	w26, #3, 2b218 <PyInit__decimal@@Base+0x246b4>
   2b200:	tbnz	w25, #3, 2b278 <PyInit__decimal@@Base+0x24714>
   2b204:	tbnz	w8, #3, 2b284 <PyInit__decimal@@Base+0x24720>
   2b208:	tbnz	w26, #2, 2b294 <PyInit__decimal@@Base+0x24730>
   2b20c:	tst	w25, #0x4
   2b210:	csel	x23, x24, x22, eq  // eq = none
   2b214:	b	2b294 <PyInit__decimal@@Base+0x24730>
   2b218:	ldr	w8, [x19]
   2b21c:	b	2b28c <PyInit__decimal@@Base+0x24728>
   2b220:	mov	x0, x23
   2b224:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2b228:	cbz	w0, 2b37c <PyInit__decimal@@Base+0x24818>
   2b22c:	mov	x0, x22
   2b230:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2b234:	cbz	w0, 2b37c <PyInit__decimal@@Base+0x24818>
   2b238:	mov	x0, x24
   2b23c:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2b240:	cbz	w0, 2b37c <PyInit__decimal@@Base+0x24818>
   2b244:	ldr	x8, [x24, #40]
   2b248:	ldr	x9, [x24, #24]
   2b24c:	add	x8, x8, x9, lsl #3
   2b250:	ldur	x8, [x8, #-8]
   2b254:	cbz	x8, 2b37c <PyInit__decimal@@Base+0x24818>
   2b258:	ldp	x9, x8, [x24, #8]
   2b25c:	ldr	x10, [x21]
   2b260:	add	x8, x9, x8
   2b264:	cmp	x8, x10
   2b268:	b.gt	2b37c <PyInit__decimal@@Base+0x24818>
   2b26c:	tbnz	w26, #0, 2b2c4 <PyInit__decimal@@Base+0x24760>
   2b270:	mov	w21, wzr
   2b274:	b	2b2d4 <PyInit__decimal@@Base+0x24770>
   2b278:	ldr	w8, [x19]
   2b27c:	mov	x23, x22
   2b280:	b	2b28c <PyInit__decimal@@Base+0x24728>
   2b284:	ldr	w8, [x19]
   2b288:	mov	x23, x24
   2b28c:	orr	w8, w8, #0x100
   2b290:	str	w8, [x19]
   2b294:	mov	x0, x20
   2b298:	mov	x1, x23
   2b29c:	mov	x2, x19
   2b2a0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2b2a4:	ldrb	w8, [x20]
   2b2a8:	mov	x0, x20
   2b2ac:	mov	x1, x21
   2b2b0:	and	w8, w8, #0xfffffff1
   2b2b4:	orr	w8, w8, #0x4
   2b2b8:	strb	w8, [x20]
   2b2bc:	bl	21810 <PyInit__decimal@@Base+0x1acac>
   2b2c0:	b	2b38c <PyInit__decimal@@Base+0x24828>
   2b2c4:	mov	x0, x22
   2b2c8:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   2b2cc:	cmp	w0, #0x0
   2b2d0:	cset	w21, ne  // ne = any
   2b2d4:	ldr	x8, [x22, #40]
   2b2d8:	ldr	x9, [x22, #24]
   2b2dc:	add	x8, x8, x9, lsl #3
   2b2e0:	ldur	x8, [x8, #-8]
   2b2e4:	cbz	x8, 2b344 <PyInit__decimal@@Base+0x247e0>
   2b2e8:	tbnz	w25, #0, 2b37c <PyInit__decimal@@Base+0x24818>
   2b2ec:	ldr	x8, [x23, #40]
   2b2f0:	ldr	x9, [x23, #24]
   2b2f4:	add	x8, x8, x9, lsl #3
   2b2f8:	ldur	x8, [x8, #-8]
   2b2fc:	cbz	x8, 2b3ac <PyInit__decimal@@Base+0x24848>
   2b300:	sub	x0, x29, #0x60
   2b304:	sub	x25, x29, #0x60
   2b308:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2b30c:	add	x4, x25, #0x1c
   2b310:	add	x0, sp, #0x290
   2b314:	sub	x3, x29, #0x60
   2b318:	mov	x1, x24
   2b31c:	mov	x2, xzr
   2b320:	bl	2c36c <PyInit__decimal@@Base+0x25808>
   2b324:	ldur	w8, [x29, #-68]
   2b328:	mov	w9, #0x3be                 	// #958
   2b32c:	ands	w1, w8, w9
   2b330:	b.eq	2b3c4 <PyInit__decimal@@Base+0x24860>  // b.none
   2b334:	mov	x0, x20
   2b338:	mov	x2, x19
   2b33c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2b340:	b	2b5b0 <PyInit__decimal@@Base+0x24a4c>
   2b344:	ldr	x8, [x23, #40]
   2b348:	ldr	x9, [x23, #24]
   2b34c:	add	x8, x8, x9, lsl #3
   2b350:	ldur	x8, [x8, #-8]
   2b354:	cbz	x8, 2b37c <PyInit__decimal@@Base+0x24818>
   2b358:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2b35c:	add	x1, x1, #0xc88
   2b360:	mov	x0, x24
   2b364:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   2b368:	cmp	w0, #0x0
   2b36c:	cset	w2, ne  // ne = any
   2b370:	mov	x0, x20
   2b374:	mov	w1, w21
   2b378:	b	2b3b8 <PyInit__decimal@@Base+0x24854>
   2b37c:	mov	w1, #0x100                 	// #256
   2b380:	mov	x0, x20
   2b384:	mov	x2, x19
   2b388:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2b38c:	add	sp, sp, #0x980
   2b390:	ldp	x20, x19, [sp, #80]
   2b394:	ldp	x22, x21, [sp, #64]
   2b398:	ldp	x24, x23, [sp, #48]
   2b39c:	ldp	x26, x25, [sp, #32]
   2b3a0:	ldr	x28, [sp, #16]
   2b3a4:	ldp	x29, x30, [sp], #96
   2b3a8:	ret
   2b3ac:	mov	x0, x20
   2b3b0:	mov	w1, w21
   2b3b4:	mov	x2, xzr
   2b3b8:	mov	x3, xzr
   2b3bc:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2b3c0:	b	2b38c <PyInit__decimal@@Base+0x24828>
   2b3c4:	ldrb	w8, [sp, #656]
   2b3c8:	add	x1, sp, #0x6f0
   2b3cc:	sub	x3, x29, #0x60
   2b3d0:	mov	w0, #0x1                   	// #1
   2b3d4:	and	w8, w8, #0xfe
   2b3d8:	mov	x2, x23
   2b3dc:	mov	x4, x19
   2b3e0:	stur	wzr, [x29, #-68]
   2b3e4:	strb	w8, [sp, #656]
   2b3e8:	bl	2c7cc <PyInit__decimal@@Base+0x25c68>
   2b3ec:	ldrb	w8, [sp, #1776]
   2b3f0:	ldr	x23, [sp, #1784]
   2b3f4:	add	x1, sp, #0x4c0
   2b3f8:	sub	x3, x29, #0x60
   2b3fc:	and	w8, w8, #0xfe
   2b400:	mov	w0, #0x1                   	// #1
   2b404:	mov	x2, x22
   2b408:	mov	x4, x19
   2b40c:	strb	w8, [sp, #1776]
   2b410:	str	xzr, [sp, #1784]
   2b414:	bl	2c7cc <PyInit__decimal@@Base+0x25c68>
   2b418:	ldr	x24, [sp, #1224]
   2b41c:	add	x0, sp, #0x6f0
   2b420:	add	x1, sp, #0x6f0
   2b424:	add	x2, sp, #0x290
   2b428:	sub	x3, x29, #0x60
   2b42c:	mov	x4, x19
   2b430:	str	xzr, [sp, #1224]
   2b434:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b438:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2b43c:	add	x1, x1, #0xc88
   2b440:	mov	x0, x20
   2b444:	mov	x2, x23
   2b448:	mov	x3, x19
   2b44c:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2b450:	add	x2, sp, #0x290
   2b454:	sub	x3, x29, #0x60
   2b458:	mov	x0, x20
   2b45c:	mov	x1, x20
   2b460:	mov	x4, x19
   2b464:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b468:	add	x0, sp, #0x6f0
   2b46c:	add	x1, sp, #0x6f0
   2b470:	sub	x3, x29, #0x60
   2b474:	mov	x2, x20
   2b478:	mov	x4, x19
   2b47c:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2b480:	add	x0, sp, #0x6f0
   2b484:	add	x1, sp, #0x6f0
   2b488:	add	x2, sp, #0x290
   2b48c:	sub	x3, x29, #0x60
   2b490:	mov	x4, x19
   2b494:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b498:	ldrb	w8, [sp, #1776]
   2b49c:	tst	w8, #0xe
   2b4a0:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b4a4:	ldrb	w9, [sp, #1216]
   2b4a8:	tst	w9, #0xe
   2b4ac:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b4b0:	ldrb	w9, [sp, #656]
   2b4b4:	tst	w9, #0xe
   2b4b8:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b4bc:	cmp	x24, #0x1
   2b4c0:	b.lt	2b598 <PyInit__decimal@@Base+0x24a34>  // b.tstop
   2b4c4:	adrp	x22, 49000 <PyInit__decimal@@Base+0x4249c>
   2b4c8:	mov	x23, xzr
   2b4cc:	add	x22, x22, #0xc88
   2b4d0:	sub	x0, x29, #0x30
   2b4d4:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2b4d8:	add	x0, sp, #0x60
   2b4dc:	mov	x1, x22
   2b4e0:	mov	x2, x19
   2b4e4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2b4e8:	mov	w25, #0xa                   	// #10
   2b4ec:	tbz	w25, #0, 2b520 <PyInit__decimal@@Base+0x249bc>
   2b4f0:	add	x0, sp, #0x60
   2b4f4:	add	x1, sp, #0x60
   2b4f8:	add	x2, sp, #0x6f0
   2b4fc:	sub	x3, x29, #0x30
   2b500:	mov	x4, x19
   2b504:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2b508:	add	x0, sp, #0x60
   2b50c:	add	x1, sp, #0x60
   2b510:	add	x2, sp, #0x290
   2b514:	sub	x3, x29, #0x30
   2b518:	mov	x4, x19
   2b51c:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b520:	add	x0, sp, #0x6f0
   2b524:	add	x1, sp, #0x6f0
   2b528:	add	x2, sp, #0x6f0
   2b52c:	sub	x3, x29, #0x30
   2b530:	mov	x4, x19
   2b534:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2b538:	add	x0, sp, #0x6f0
   2b53c:	add	x1, sp, #0x6f0
   2b540:	add	x2, sp, #0x290
   2b544:	sub	x3, x29, #0x30
   2b548:	mov	x4, x19
   2b54c:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b550:	lsr	x25, x25, #1
   2b554:	cbnz	x25, 2b4ec <PyInit__decimal@@Base+0x24988>
   2b558:	ldr	q0, [sp, #1776]
   2b55c:	ldr	q1, [sp, #1792]
   2b560:	ldp	q2, q3, [sp, #96]
   2b564:	add	x23, x23, #0x1
   2b568:	cmp	x23, x24
   2b56c:	stp	q0, q1, [sp, #96]
   2b570:	ldr	q0, [sp, #128]
   2b574:	ldr	q1, [sp, #1808]
   2b578:	stp	q2, q3, [sp]
   2b57c:	str	q2, [sp, #1776]
   2b580:	str	q0, [sp, #32]
   2b584:	str	q1, [sp, #128]
   2b588:	str	q3, [sp, #1792]
   2b58c:	str	q0, [sp, #1808]
   2b590:	b.ne	2b4d0 <PyInit__decimal@@Base+0x2496c>  // b.any
   2b594:	ldrb	w8, [sp, #1776]
   2b598:	tst	w8, #0xe
   2b59c:	b.eq	2b668 <PyInit__decimal@@Base+0x24b04>  // b.none
   2b5a0:	mov	w2, #0x4                   	// #4
   2b5a4:	mov	x0, x20
   2b5a8:	mov	w1, wzr
   2b5ac:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2b5b0:	ldrb	w8, [sp, #1776]
   2b5b4:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b5b8:	cmp	w8, #0x1f
   2b5bc:	b.hi	2b5d0 <PyInit__decimal@@Base+0x24a6c>  // b.pmore
   2b5c0:	ldr	x8, [x19, #1384]
   2b5c4:	ldr	x0, [sp, #1816]
   2b5c8:	blr	x8
   2b5cc:	ldrb	w8, [sp, #1776]
   2b5d0:	tbnz	w8, #4, 2b5e0 <PyInit__decimal@@Base+0x24a7c>
   2b5d4:	ldr	x8, [x19, #1384]
   2b5d8:	add	x0, sp, #0x6f0
   2b5dc:	blr	x8
   2b5e0:	ldrb	w8, [sp, #1216]
   2b5e4:	cmp	w8, #0x1f
   2b5e8:	b.hi	2b5fc <PyInit__decimal@@Base+0x24a98>  // b.pmore
   2b5ec:	ldr	x8, [x19, #1384]
   2b5f0:	ldr	x0, [sp, #1256]
   2b5f4:	blr	x8
   2b5f8:	ldrb	w8, [sp, #1216]
   2b5fc:	tbnz	w8, #4, 2b60c <PyInit__decimal@@Base+0x24aa8>
   2b600:	ldr	x8, [x19, #1384]
   2b604:	add	x0, sp, #0x4c0
   2b608:	blr	x8
   2b60c:	ldrb	w8, [sp, #656]
   2b610:	cmp	w8, #0x1f
   2b614:	b.hi	2b628 <PyInit__decimal@@Base+0x24ac4>  // b.pmore
   2b618:	ldr	x8, [x19, #1384]
   2b61c:	ldr	x0, [sp, #696]
   2b620:	blr	x8
   2b624:	ldrb	w8, [sp, #656]
   2b628:	tbnz	w8, #4, 2b638 <PyInit__decimal@@Base+0x24ad4>
   2b62c:	ldr	x8, [x19, #1384]
   2b630:	add	x0, sp, #0x290
   2b634:	blr	x8
   2b638:	ldrb	w8, [sp, #96]
   2b63c:	cmp	w8, #0x1f
   2b640:	b.hi	2b654 <PyInit__decimal@@Base+0x24af0>  // b.pmore
   2b644:	ldr	x8, [x19, #1384]
   2b648:	ldr	x0, [sp, #136]
   2b64c:	blr	x8
   2b650:	ldrb	w8, [sp, #96]
   2b654:	tbnz	w8, #4, 2b38c <PyInit__decimal@@Base+0x24828>
   2b658:	ldr	x8, [x19, #1384]
   2b65c:	add	x0, sp, #0x60
   2b660:	blr	x8
   2b664:	b	2b38c <PyInit__decimal@@Base+0x24828>
   2b668:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2b66c:	add	x1, x1, #0xc88
   2b670:	mov	x0, x20
   2b674:	mov	x2, x19
   2b678:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2b67c:	ldrb	w8, [sp, #1216]
   2b680:	tst	w8, #0xe
   2b684:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b688:	ldr	x8, [sp, #1256]
   2b68c:	ldr	x9, [sp, #1240]
   2b690:	add	x8, x8, x9, lsl #3
   2b694:	ldur	x8, [x8, #-8]
   2b698:	cbz	x8, 2b724 <PyInit__decimal@@Base+0x24bc0>
   2b69c:	add	x0, sp, #0x4c0
   2b6a0:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   2b6a4:	cbz	w0, 2b6d8 <PyInit__decimal@@Base+0x24b74>
   2b6a8:	add	x2, sp, #0x6f0
   2b6ac:	sub	x3, x29, #0x60
   2b6b0:	mov	x0, x20
   2b6b4:	mov	x1, x20
   2b6b8:	mov	x4, x19
   2b6bc:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2b6c0:	add	x2, sp, #0x290
   2b6c4:	sub	x3, x29, #0x60
   2b6c8:	mov	x0, x20
   2b6cc:	mov	x1, x20
   2b6d0:	mov	x4, x19
   2b6d4:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b6d8:	add	x0, sp, #0x6f0
   2b6dc:	add	x1, sp, #0x6f0
   2b6e0:	add	x2, sp, #0x6f0
   2b6e4:	sub	x3, x29, #0x60
   2b6e8:	mov	x4, x19
   2b6ec:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2b6f0:	add	x0, sp, #0x6f0
   2b6f4:	add	x1, sp, #0x6f0
   2b6f8:	add	x2, sp, #0x290
   2b6fc:	sub	x3, x29, #0x60
   2b700:	mov	x4, x19
   2b704:	bl	2b7b0 <PyInit__decimal@@Base+0x24c4c>
   2b708:	add	x0, sp, #0x4c0
   2b70c:	add	x1, sp, #0x4c0
   2b710:	add	x2, sp, #0x30
   2b714:	sub	x3, x29, #0x60
   2b718:	mov	x4, x19
   2b71c:	bl	26784 <PyInit__decimal@@Base+0x1fc20>
   2b720:	b	2b67c <PyInit__decimal@@Base+0x24b18>
   2b724:	ldrb	w8, [sp, #1776]
   2b728:	tst	w8, #0xe
   2b72c:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b730:	ldrb	w8, [sp, #656]
   2b734:	tst	w8, #0xe
   2b738:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b73c:	ldrb	w8, [x20]
   2b740:	tst	w8, #0xe
   2b744:	b.ne	2b5a0 <PyInit__decimal@@Base+0x24a3c>  // b.any
   2b748:	and	w8, w8, #0xfe
   2b74c:	orr	w8, w8, w21
   2b750:	strb	w8, [x20]
   2b754:	b	2b5b0 <PyInit__decimal@@Base+0x24a4c>
   2b758:	mov	x8, #0xfffd                	// #65533
   2b75c:	movk	x8, #0x4ec7, lsl #16
   2b760:	mov	x9, #0xfffe                	// #65534
   2b764:	movk	x8, #0x6d67, lsl #32
   2b768:	movk	x9, #0xf62b, lsl #16
   2b76c:	movk	x8, #0x1bc1, lsl #48
   2b770:	movk	x9, #0x241a, lsl #32
   2b774:	add	x8, x2, x8
   2b778:	movk	x9, #0x29a2, lsl #48
   2b77c:	cmp	x8, x9
   2b780:	b.cc	2b790 <PyInit__decimal@@Base+0x24c2c>  // b.lo, b.ul, b.last
   2b784:	mov	w1, #0x100                 	// #256
   2b788:	mov	x2, x4
   2b78c:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2b790:	b	2c36c <PyInit__decimal@@Base+0x25808>
   2b794:	mov	x8, x0
   2b798:	mov	x4, x3
   2b79c:	mov	x3, x2
   2b7a0:	mov	w0, #0x1                   	// #1
   2b7a4:	mov	x2, x1
   2b7a8:	mov	x1, x8
   2b7ac:	b	2c7cc <PyInit__decimal@@Base+0x25c68>
   2b7b0:	stp	x29, x30, [sp, #-64]!
   2b7b4:	stp	x28, x23, [sp, #16]
   2b7b8:	stp	x22, x21, [sp, #32]
   2b7bc:	stp	x20, x19, [sp, #48]
   2b7c0:	mov	x29, sp
   2b7c4:	sub	sp, sp, #0x230
   2b7c8:	mov	w8, #0x30                  	// #48
   2b7cc:	strb	w8, [sp]
   2b7d0:	mov	w8, #0x40                  	// #64
   2b7d4:	stp	xzr, x8, [sp, #24]
   2b7d8:	add	x8, sp, #0x30
   2b7dc:	stp	xzr, xzr, [sp, #8]
   2b7e0:	str	x8, [sp, #40]
   2b7e4:	ldrb	w8, [x1]
   2b7e8:	mov	x19, x4
   2b7ec:	mov	x21, x3
   2b7f0:	mov	x23, x2
   2b7f4:	mov	x22, x1
   2b7f8:	tst	w8, #0xe
   2b7fc:	mov	x20, x0
   2b800:	b.ne	2b810 <PyInit__decimal@@Base+0x24cac>  // b.any
   2b804:	ldrb	w8, [x23]
   2b808:	tst	w8, #0xe
   2b80c:	b.eq	2b850 <PyInit__decimal@@Base+0x24cec>  // b.none
   2b810:	mov	x0, x20
   2b814:	mov	x1, x22
   2b818:	mov	x2, x23
   2b81c:	mov	x3, x21
   2b820:	mov	x4, x19
   2b824:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2b828:	cbnz	w0, 2b8ec <PyInit__decimal@@Base+0x24d88>
   2b82c:	ldrb	w8, [x22]
   2b830:	tbnz	w8, #1, 2b8dc <PyInit__decimal@@Base+0x24d78>
   2b834:	ldrb	w8, [x23]
   2b838:	tbz	w8, #1, 2b90c <PyInit__decimal@@Base+0x24da8>
   2b83c:	mov	x0, x20
   2b840:	mov	x1, x22
   2b844:	mov	x2, x19
   2b848:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2b84c:	b	2b8b4 <PyInit__decimal@@Base+0x24d50>
   2b850:	ldr	x8, [x23, #40]
   2b854:	ldr	x9, [x23, #24]
   2b858:	add	x8, x8, x9, lsl #3
   2b85c:	ldur	x8, [x8, #-8]
   2b860:	cbz	x8, 2b8c8 <PyInit__decimal@@Base+0x24d64>
   2b864:	mov	x0, sp
   2b868:	mov	x1, x20
   2b86c:	mov	x2, x22
   2b870:	mov	x3, x23
   2b874:	mov	x4, x21
   2b878:	mov	x5, x19
   2b87c:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   2b880:	ldrb	w8, [sp]
   2b884:	cmp	w8, #0x1f
   2b888:	b.hi	2b8a0 <PyInit__decimal@@Base+0x24d3c>  // b.pmore
   2b88c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b890:	ldr	x8, [x8, #1384]
   2b894:	ldr	x0, [sp, #40]
   2b898:	blr	x8
   2b89c:	ldrb	w8, [sp]
   2b8a0:	tbnz	w8, #4, 2b8b4 <PyInit__decimal@@Base+0x24d50>
   2b8a4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2b8a8:	ldr	x8, [x8, #1384]
   2b8ac:	mov	x0, sp
   2b8b0:	blr	x8
   2b8b4:	mov	x0, x20
   2b8b8:	mov	x1, x21
   2b8bc:	mov	x2, x19
   2b8c0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2b8c4:	b	2b8ec <PyInit__decimal@@Base+0x24d88>
   2b8c8:	ldr	x8, [x22, #40]
   2b8cc:	ldr	x9, [x22, #24]
   2b8d0:	add	x8, x8, x9, lsl #3
   2b8d4:	ldur	x8, [x8, #-8]
   2b8d8:	cbz	x8, 2b904 <PyInit__decimal@@Base+0x24da0>
   2b8dc:	mov	w1, #0x100                 	// #256
   2b8e0:	mov	x0, x20
   2b8e4:	mov	x2, x19
   2b8e8:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2b8ec:	add	sp, sp, #0x230
   2b8f0:	ldp	x20, x19, [sp, #48]
   2b8f4:	ldp	x22, x21, [sp, #32]
   2b8f8:	ldp	x28, x23, [sp, #16]
   2b8fc:	ldp	x29, x30, [sp], #64
   2b900:	ret
   2b904:	mov	w1, #0x10                  	// #16
   2b908:	b	2b8e0 <PyInit__decimal@@Base+0x24d7c>
   2b90c:	bl	67b0 <abort@plt>
   2b910:	stp	x29, x30, [sp, #-48]!
   2b914:	str	x21, [sp, #16]
   2b918:	stp	x20, x19, [sp, #32]
   2b91c:	mov	x29, sp
   2b920:	mov	x19, x4
   2b924:	add	x4, x29, #0x1c
   2b928:	mov	x21, x3
   2b92c:	mov	x20, x0
   2b930:	str	wzr, [x29, #28]
   2b934:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2b938:	add	x2, x29, #0x1c
   2b93c:	mov	x0, x20
   2b940:	mov	x1, x21
   2b944:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2b948:	ldr	w8, [x29, #28]
   2b94c:	ldr	w9, [x19]
   2b950:	mov	w10, #0x1041                	// #4161
   2b954:	tst	w8, w10
   2b958:	orr	w9, w9, w8
   2b95c:	str	w9, [x19]
   2b960:	b.eq	2b974 <PyInit__decimal@@Base+0x24e10>  // b.none
   2b964:	mov	w1, #0x100                 	// #256
   2b968:	mov	x0, x20
   2b96c:	mov	x2, x19
   2b970:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2b974:	ldp	x20, x19, [sp, #32]
   2b978:	ldr	x21, [sp, #16]
   2b97c:	ldp	x29, x30, [sp], #48
   2b980:	ret
   2b984:	stp	x29, x30, [sp, #-64]!
   2b988:	str	x23, [sp, #16]
   2b98c:	stp	x22, x21, [sp, #32]
   2b990:	stp	x20, x19, [sp, #48]
   2b994:	mov	x29, sp
   2b998:	ldrb	w8, [x1]
   2b99c:	mov	x19, x4
   2b9a0:	mov	x21, x3
   2b9a4:	mov	x23, x2
   2b9a8:	mov	x22, x1
   2b9ac:	tst	w8, #0xe
   2b9b0:	mov	x20, x0
   2b9b4:	b.ne	2b9c4 <PyInit__decimal@@Base+0x24e60>  // b.any
   2b9b8:	ldrb	w9, [x23]
   2b9bc:	tst	w9, #0xe
   2b9c0:	b.eq	2ba24 <PyInit__decimal@@Base+0x24ec0>  // b.none
   2b9c4:	mov	x0, x20
   2b9c8:	mov	x1, x22
   2b9cc:	mov	x2, x23
   2b9d0:	mov	x3, x21
   2b9d4:	mov	x4, x19
   2b9d8:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2b9dc:	cbz	w0, 2b9f4 <PyInit__decimal@@Base+0x24e90>
   2b9e0:	ldp	x20, x19, [sp, #48]
   2b9e4:	ldp	x22, x21, [sp, #32]
   2b9e8:	ldr	x23, [sp, #16]
   2b9ec:	ldp	x29, x30, [sp], #64
   2b9f0:	ret
   2b9f4:	ldrb	w8, [x22]
   2b9f8:	tbz	w8, #1, 2bdb0 <PyInit__decimal@@Base+0x2524c>
   2b9fc:	ldrb	w8, [x23]
   2ba00:	tbz	w8, #1, 2bdb0 <PyInit__decimal@@Base+0x2524c>
   2ba04:	mov	x0, x20
   2ba08:	mov	x1, x22
   2ba0c:	mov	x2, x19
   2ba10:	ldp	x20, x19, [sp, #48]
   2ba14:	ldp	x22, x21, [sp, #32]
   2ba18:	ldr	x23, [sp, #16]
   2ba1c:	ldp	x29, x30, [sp], #64
   2ba20:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   2ba24:	ldr	x23, [x23, #8]
   2ba28:	ldr	x9, [x21, #8]
   2ba2c:	cmp	x23, x9
   2ba30:	b.gt	2bdb0 <PyInit__decimal@@Base+0x2524c>
   2ba34:	ldr	x10, [x21, #16]
   2ba38:	ldr	x9, [x21]
   2ba3c:	sub	x10, x10, x9
   2ba40:	add	x10, x10, #0x1
   2ba44:	cmp	x23, x10
   2ba48:	b.lt	2bdb0 <PyInit__decimal@@Base+0x2524c>  // b.tstop
   2ba4c:	ldr	x10, [x22, #40]
   2ba50:	ldr	x11, [x22, #24]
   2ba54:	add	x10, x10, x11, lsl #3
   2ba58:	ldur	x10, [x10, #-8]
   2ba5c:	cbz	x10, 2ba98 <PyInit__decimal@@Base+0x24f34>
   2ba60:	ldp	x8, x10, [x22, #8]
   2ba64:	sub	x2, x8, x23
   2ba68:	add	x8, x10, x2
   2ba6c:	cmp	x8, x9
   2ba70:	b.gt	2bdb0 <PyInit__decimal@@Base+0x2524c>
   2ba74:	tbnz	x2, #63, 2bacc <PyInit__decimal@@Base+0x24f68>
   2ba78:	mov	x0, x20
   2ba7c:	mov	x1, x22
   2ba80:	mov	x3, x19
   2ba84:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2ba88:	cbz	w0, 2b9e0 <PyInit__decimal@@Base+0x24e7c>
   2ba8c:	mov	w8, wzr
   2ba90:	str	x23, [x20, #8]
   2ba94:	b	2bd80 <PyInit__decimal@@Base+0x2521c>
   2ba98:	and	w1, w8, #0x1
   2ba9c:	mov	x0, x20
   2baa0:	mov	x2, xzr
   2baa4:	mov	x3, x23
   2baa8:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2baac:	mov	x0, x20
   2bab0:	mov	x1, x21
   2bab4:	mov	x2, x19
   2bab8:	ldp	x20, x19, [sp, #48]
   2babc:	ldp	x22, x21, [sp, #32]
   2bac0:	ldr	x23, [sp, #16]
   2bac4:	ldp	x29, x30, [sp], #64
   2bac8:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   2bacc:	neg	x2, x2
   2bad0:	mov	x0, x20
   2bad4:	mov	x1, x22
   2bad8:	mov	x3, x19
   2badc:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2bae0:	cmn	x0, #0x1
   2bae4:	b.eq	2b9e0 <PyInit__decimal@@Base+0x24e7c>  // b.none
   2bae8:	str	x23, [x20, #8]
   2baec:	ldr	w8, [x21, #36]
   2baf0:	mov	x22, x0
   2baf4:	cmp	w8, #0x7
   2baf8:	b.hi	2bd70 <PyInit__decimal@@Base+0x2520c>  // b.pmore
   2bafc:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2bb00:	add	x9, x9, #0x1e1
   2bb04:	adr	x10, 2bb14 <PyInit__decimal@@Base+0x24fb0>
   2bb08:	ldrb	w11, [x9, x8]
   2bb0c:	add	x10, x10, x11, lsl #2
   2bb10:	br	x10
   2bb14:	cmp	x22, #0x0
   2bb18:	cset	w8, ne  // ne = any
   2bb1c:	b	2bbac <PyInit__decimal@@Base+0x25048>
   2bb20:	cbz	x22, 2bd70 <PyInit__decimal@@Base+0x2520c>
   2bb24:	ldrb	w8, [x20]
   2bb28:	mvn	w8, w8
   2bb2c:	b	2bb64 <PyInit__decimal@@Base+0x25000>
   2bb30:	cbz	x22, 2bd70 <PyInit__decimal@@Base+0x2520c>
   2bb34:	ldrb	w8, [x20]
   2bb38:	b	2bb64 <PyInit__decimal@@Base+0x25000>
   2bb3c:	cmp	x22, #0x4
   2bb40:	b	2bb48 <PyInit__decimal@@Base+0x24fe4>
   2bb44:	cmp	x22, #0x5
   2bb48:	cset	w8, hi  // hi = pmore
   2bb4c:	b	2bbac <PyInit__decimal@@Base+0x25048>
   2bb50:	cmp	x22, #0x5
   2bb54:	b.hi	2bbb0 <PyInit__decimal@@Base+0x2504c>  // b.pmore
   2bb58:	b.ne	2bd70 <PyInit__decimal@@Base+0x2520c>  // b.any
   2bb5c:	ldr	x8, [x20, #40]
   2bb60:	ldr	w8, [x8]
   2bb64:	and	w8, w8, #0x1
   2bb68:	b	2bbac <PyInit__decimal@@Base+0x25048>
   2bb6c:	ldr	x8, [x20, #40]
   2bb70:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2bb74:	movk	x9, #0xcccd
   2bb78:	mov	w10, #0xa                   	// #10
   2bb7c:	ldr	x8, [x8]
   2bb80:	cmp	x22, #0x0
   2bb84:	cset	w11, ne  // ne = any
   2bb88:	umulh	x9, x8, x9
   2bb8c:	lsr	x9, x9, #3
   2bb90:	msub	w8, w9, w10, w8
   2bb94:	cmp	w8, #0x0
   2bb98:	cset	w9, eq  // eq = none
   2bb9c:	cmp	w8, #0x5
   2bba0:	cset	w8, eq  // eq = none
   2bba4:	orr	w8, w9, w8
   2bba8:	and	w8, w11, w8
   2bbac:	cbz	w8, 2bd70 <PyInit__decimal@@Base+0x2520c>
   2bbb0:	ldr	x0, [x20, #40]
   2bbb4:	ldr	x1, [x20, #24]
   2bbb8:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   2bbbc:	cbz	x0, 2bbf8 <PyInit__decimal@@Base+0x25094>
   2bbc0:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2bbc4:	ldr	x10, [x9, #1352]
   2bbc8:	ldp	x8, x9, [x20, #24]
   2bbcc:	add	x11, x8, #0x1
   2bbd0:	cmp	x10, x11
   2bbd4:	csinc	x1, x10, x8, ge  // ge = tcont
   2bbd8:	cmp	x1, x9
   2bbdc:	b.eq	2bc20 <PyInit__decimal@@Base+0x250bc>  // b.none
   2bbe0:	ldrb	w10, [x20]
   2bbe4:	tbnz	w10, #5, 2bc04 <PyInit__decimal@@Base+0x250a0>
   2bbe8:	mov	x0, x20
   2bbec:	mov	x2, x19
   2bbf0:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2bbf4:	b	2bc18 <PyInit__decimal@@Base+0x250b4>
   2bbf8:	ldr	x9, [x20, #40]
   2bbfc:	ldr	x8, [x20, #24]
   2bc00:	b	2bc38 <PyInit__decimal@@Base+0x250d4>
   2bc04:	cmp	x1, x9
   2bc08:	b.le	2bc20 <PyInit__decimal@@Base+0x250bc>
   2bc0c:	mov	x0, x20
   2bc10:	mov	x2, x19
   2bc14:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2bc18:	cbz	w0, 2b9e0 <PyInit__decimal@@Base+0x24e7c>
   2bc1c:	ldr	x8, [x20, #24]
   2bc20:	ldr	x9, [x20, #40]
   2bc24:	mov	w10, #0x1                   	// #1
   2bc28:	str	x10, [x9, x8, lsl #3]
   2bc2c:	ldr	x8, [x20, #24]
   2bc30:	add	x8, x8, #0x1
   2bc34:	str	x8, [x20, #24]
   2bc38:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2bc3c:	add	x9, x9, x8, lsl #3
   2bc40:	add	x10, x10, #0xe70
   2bc44:	ldur	x9, [x9, #-8]
   2bc48:	ldr	x11, [x10, #72]
   2bc4c:	cmp	x11, x9
   2bc50:	b.ls	2bc7c <PyInit__decimal@@Base+0x25118>  // b.plast
   2bc54:	ldr	x11, [x10, #32]
   2bc58:	cmp	x11, x9
   2bc5c:	b.ls	2bca4 <PyInit__decimal@@Base+0x25140>  // b.plast
   2bc60:	ldr	x11, [x10, #16]
   2bc64:	cmp	x11, x9
   2bc68:	b.ls	2bce8 <PyInit__decimal@@Base+0x25184>  // b.plast
   2bc6c:	ldr	x10, [x10, #8]
   2bc70:	cmp	x10, x9
   2bc74:	mov	w9, #0x1                   	// #1
   2bc78:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bc7c:	ldr	x11, [x10, #112]
   2bc80:	cmp	x11, x9
   2bc84:	b.ls	2bcc0 <PyInit__decimal@@Base+0x2515c>  // b.plast
   2bc88:	ldr	x11, [x10, #88]
   2bc8c:	cmp	x11, x9
   2bc90:	b.ls	2bcf8 <PyInit__decimal@@Base+0x25194>  // b.plast
   2bc94:	ldr	x10, [x10, #80]
   2bc98:	cmp	x10, x9
   2bc9c:	mov	w9, #0xa                   	// #10
   2bca0:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bca4:	ldr	x11, [x10, #48]
   2bca8:	cmp	x11, x9
   2bcac:	b.ls	2bd14 <PyInit__decimal@@Base+0x251b0>  // b.plast
   2bcb0:	ldr	x10, [x10, #40]
   2bcb4:	cmp	x10, x9
   2bcb8:	mov	w9, #0x5                   	// #5
   2bcbc:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bcc0:	ldr	x11, [x10, #144]
   2bcc4:	cmp	x11, x9
   2bcc8:	b.ls	2bd30 <PyInit__decimal@@Base+0x251cc>  // b.plast
   2bccc:	ldr	x11, [x10, #128]
   2bcd0:	cmp	x11, x9
   2bcd4:	b.ls	2bd40 <PyInit__decimal@@Base+0x251dc>  // b.plast
   2bcd8:	ldr	x10, [x10, #120]
   2bcdc:	cmp	x10, x9
   2bce0:	mov	w9, #0xf                   	// #15
   2bce4:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bce8:	ldr	x10, [x10, #24]
   2bcec:	cmp	x10, x9
   2bcf0:	mov	w9, #0x3                   	// #3
   2bcf4:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bcf8:	ldr	x11, [x10, #104]
   2bcfc:	cmp	x11, x9
   2bd00:	b.ls	2bde0 <PyInit__decimal@@Base+0x2527c>  // b.plast
   2bd04:	ldr	x10, [x10, #96]
   2bd08:	cmp	x10, x9
   2bd0c:	mov	w9, #0xc                   	// #12
   2bd10:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bd14:	ldr	x11, [x10, #64]
   2bd18:	cmp	x11, x9
   2bd1c:	b.ls	2bde8 <PyInit__decimal@@Base+0x25284>  // b.plast
   2bd20:	ldr	x10, [x10, #56]
   2bd24:	cmp	x10, x9
   2bd28:	mov	w9, #0x7                   	// #7
   2bd2c:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bd30:	ldr	x10, [x10, #152]
   2bd34:	cmp	x10, x9
   2bd38:	mov	w9, #0x13                  	// #19
   2bd3c:	b	2bd4c <PyInit__decimal@@Base+0x251e8>
   2bd40:	ldr	x10, [x10, #136]
   2bd44:	cmp	x10, x9
   2bd48:	mov	w9, #0x11                  	// #17
   2bd4c:	cinc	x9, x9, ls  // ls = plast
   2bd50:	mov	w10, #0x13                  	// #19
   2bd54:	madd	x8, x8, x10, x9
   2bd58:	sub	x8, x8, #0x13
   2bd5c:	str	x8, [x20, #16]
   2bd60:	ldr	x9, [x21]
   2bd64:	cmp	x8, x9
   2bd68:	b.gt	2bdb0 <PyInit__decimal@@Base+0x2524c>
   2bd6c:	ldr	x23, [x20, #8]
   2bd70:	cmp	x22, #0x0
   2bd74:	mov	w8, #0x1040                	// #4160
   2bd78:	mov	w9, #0x1000                	// #4096
   2bd7c:	csel	w8, w9, w8, eq  // eq = none
   2bd80:	ldr	x9, [x20, #16]
   2bd84:	ldr	x10, [x21, #8]
   2bd88:	add	x9, x23, x9
   2bd8c:	sub	x9, x9, #0x1
   2bd90:	cmp	x9, x10
   2bd94:	b.gt	2bdb0 <PyInit__decimal@@Base+0x2524c>
   2bd98:	ldr	x10, [x21, #16]
   2bd9c:	ldr	x11, [x21]
   2bda0:	sub	x10, x10, x11
   2bda4:	add	x10, x10, #0x1
   2bda8:	cmp	x9, x10
   2bdac:	b.ge	2bdd0 <PyInit__decimal@@Base+0x2526c>  // b.tcont
   2bdb0:	mov	x0, x20
   2bdb4:	mov	x2, x19
   2bdb8:	ldp	x20, x19, [sp, #48]
   2bdbc:	ldp	x22, x21, [sp, #32]
   2bdc0:	ldr	x23, [sp, #16]
   2bdc4:	mov	w1, #0x100                 	// #256
   2bdc8:	ldp	x29, x30, [sp], #64
   2bdcc:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2bdd0:	ldr	w9, [x19]
   2bdd4:	orr	w8, w9, w8
   2bdd8:	str	w8, [x19]
   2bddc:	b	2baac <PyInit__decimal@@Base+0x24f48>
   2bde0:	mov	w9, #0xe                   	// #14
   2bde4:	b	2bd50 <PyInit__decimal@@Base+0x251ec>
   2bde8:	mov	w9, #0x9                   	// #9
   2bdec:	b	2bd50 <PyInit__decimal@@Base+0x251ec>
   2bdf0:	stp	x29, x30, [sp, #-64]!
   2bdf4:	str	x23, [sp, #16]
   2bdf8:	stp	x22, x21, [sp, #32]
   2bdfc:	stp	x20, x19, [sp, #48]
   2be00:	mov	x29, sp
   2be04:	ldrb	w23, [x1]
   2be08:	mov	x21, x3
   2be0c:	mov	x20, x2
   2be10:	mov	x22, x1
   2be14:	tst	w23, #0xe
   2be18:	mov	x19, x0
   2be1c:	b.eq	2be54 <PyInit__decimal@@Base+0x252f0>  // b.none
   2be20:	mov	x1, x22
   2be24:	mov	x2, x20
   2be28:	mov	x3, x21
   2be2c:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2be30:	cbnz	w0, 2bedc <PyInit__decimal@@Base+0x25378>
   2be34:	mov	x0, x19
   2be38:	mov	x1, x22
   2be3c:	mov	x2, x21
   2be40:	ldp	x20, x19, [sp, #48]
   2be44:	ldp	x22, x21, [sp, #32]
   2be48:	ldr	x23, [sp, #16]
   2be4c:	ldp	x29, x30, [sp], #64
   2be50:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   2be54:	mov	x1, x22
   2be58:	mov	x2, x21
   2be5c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2be60:	cbz	w0, 2bedc <PyInit__decimal@@Base+0x25378>
   2be64:	mov	x0, x19
   2be68:	mov	x1, x20
   2be6c:	mov	x2, x21
   2be70:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2be74:	ldrb	w8, [x19]
   2be78:	tst	w8, #0xe
   2be7c:	b.ne	2bedc <PyInit__decimal@@Base+0x25378>  // b.any
   2be80:	ldr	x8, [x19, #40]
   2be84:	ldr	x9, [x19, #24]
   2be88:	add	x8, x8, x9, lsl #3
   2be8c:	ldur	x8, [x8, #-8]
   2be90:	cbz	x8, 2bef0 <PyInit__decimal@@Base+0x2538c>
   2be94:	mov	x0, x19
   2be98:	bl	206e8 <PyInit__decimal@@Base+0x19b84>
   2be9c:	ldr	w9, [x20, #40]
   2bea0:	ldr	x8, [x20, #8]
   2bea4:	cbz	w9, 2beb4 <PyInit__decimal@@Base+0x25350>
   2bea8:	ldr	x9, [x20]
   2beac:	sub	x8, x8, x9
   2beb0:	add	x8, x8, #0x1
   2beb4:	ldr	x9, [x19, #8]
   2beb8:	sub	x8, x8, x9
   2bebc:	cmp	x0, x8
   2bec0:	csel	x20, x8, x0, gt
   2bec4:	mov	x0, x19
   2bec8:	mov	x1, x20
   2becc:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   2bed0:	ldr	x8, [x19, #8]
   2bed4:	add	x8, x20, x8
   2bed8:	str	x8, [x19, #8]
   2bedc:	ldp	x20, x19, [sp, #48]
   2bee0:	ldp	x22, x21, [sp, #32]
   2bee4:	ldr	x23, [sp, #16]
   2bee8:	ldp	x29, x30, [sp], #64
   2beec:	ret
   2bef0:	and	w1, w23, #0x1
   2bef4:	mov	x0, x19
   2bef8:	ldp	x20, x19, [sp, #48]
   2befc:	ldp	x22, x21, [sp, #32]
   2bf00:	ldr	x23, [sp, #16]
   2bf04:	mov	x2, xzr
   2bf08:	mov	x3, xzr
   2bf0c:	ldp	x29, x30, [sp], #64
   2bf10:	b	21100 <PyInit__decimal@@Base+0x1a59c>
   2bf14:	stp	x29, x30, [sp, #-96]!
   2bf18:	stp	x28, x27, [sp, #16]
   2bf1c:	stp	x26, x25, [sp, #32]
   2bf20:	stp	x24, x23, [sp, #48]
   2bf24:	stp	x22, x21, [sp, #64]
   2bf28:	stp	x20, x19, [sp, #80]
   2bf2c:	mov	x29, sp
   2bf30:	sub	sp, sp, #0x490
   2bf34:	add	x10, sp, #0x260
   2bf38:	mov	w8, #0x30                  	// #48
   2bf3c:	mov	w9, #0x40                  	// #64
   2bf40:	str	x10, [sp, #600]
   2bf44:	add	x10, sp, #0x30
   2bf48:	str	xzr, [sp, #568]
   2bf4c:	str	xzr, [sp, #576]
   2bf50:	stp	xzr, xzr, [sp, #8]
   2bf54:	strb	w8, [sp, #560]
   2bf58:	str	xzr, [sp, #584]
   2bf5c:	str	x9, [sp, #592]
   2bf60:	strb	w8, [sp]
   2bf64:	stp	xzr, x9, [sp, #24]
   2bf68:	str	x10, [sp, #40]
   2bf6c:	ldrb	w8, [x1]
   2bf70:	mov	x19, x4
   2bf74:	mov	x20, x3
   2bf78:	mov	x24, x2
   2bf7c:	mov	x22, x1
   2bf80:	tst	w8, #0xe
   2bf84:	mov	x21, x0
   2bf88:	b.ne	2bf98 <PyInit__decimal@@Base+0x25434>  // b.any
   2bf8c:	ldrb	w8, [x24]
   2bf90:	tst	w8, #0xe
   2bf94:	b.eq	2bfe8 <PyInit__decimal@@Base+0x25484>  // b.none
   2bf98:	mov	x0, x21
   2bf9c:	mov	x1, x22
   2bfa0:	mov	x2, x24
   2bfa4:	mov	x3, x20
   2bfa8:	mov	x4, x19
   2bfac:	bl	21acc <PyInit__decimal@@Base+0x1af68>
   2bfb0:	cbnz	w0, 2c030 <PyInit__decimal@@Base+0x254cc>
   2bfb4:	ldrb	w8, [x22]
   2bfb8:	tbnz	w8, #1, 2c020 <PyInit__decimal@@Base+0x254bc>
   2bfbc:	ldrb	w8, [x24]
   2bfc0:	tbz	w8, #1, 2c368 <PyInit__decimal@@Base+0x25804>
   2bfc4:	mov	x0, x21
   2bfc8:	mov	x1, x22
   2bfcc:	mov	x2, x19
   2bfd0:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2bfd4:	mov	x0, x21
   2bfd8:	mov	x1, x20
   2bfdc:	mov	x2, x19
   2bfe0:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2bfe4:	b	2c030 <PyInit__decimal@@Base+0x254cc>
   2bfe8:	ldr	x8, [x24, #40]
   2bfec:	ldr	x9, [x24, #24]
   2bff0:	add	x8, x8, x9, lsl #3
   2bff4:	ldur	x8, [x8, #-8]
   2bff8:	cbz	x8, 2c00c <PyInit__decimal@@Base+0x254a8>
   2bffc:	cmp	x21, x24
   2c000:	b.eq	2c050 <PyInit__decimal@@Base+0x254ec>  // b.none
   2c004:	mov	x23, x24
   2c008:	b	2c068 <PyInit__decimal@@Base+0x25504>
   2c00c:	ldr	x8, [x22, #40]
   2c010:	ldr	x9, [x22, #24]
   2c014:	add	x8, x8, x9, lsl #3
   2c018:	ldur	x8, [x8, #-8]
   2c01c:	cbz	x8, 2c0fc <PyInit__decimal@@Base+0x25598>
   2c020:	mov	w1, #0x100                 	// #256
   2c024:	mov	x0, x21
   2c028:	mov	x2, x19
   2c02c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2c030:	add	sp, sp, #0x490
   2c034:	ldp	x20, x19, [sp, #80]
   2c038:	ldp	x22, x21, [sp, #64]
   2c03c:	ldp	x24, x23, [sp, #48]
   2c040:	ldp	x26, x25, [sp, #32]
   2c044:	ldp	x28, x27, [sp, #16]
   2c048:	ldp	x29, x30, [sp], #96
   2c04c:	ret
   2c050:	add	x0, sp, #0x230
   2c054:	mov	x1, x24
   2c058:	mov	x2, x19
   2c05c:	add	x23, sp, #0x230
   2c060:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2c064:	cbz	w0, 2c104 <PyInit__decimal@@Base+0x255a0>
   2c068:	mov	x0, sp
   2c06c:	mov	x1, x21
   2c070:	mov	x2, x22
   2c074:	mov	x3, x23
   2c078:	mov	x4, x20
   2c07c:	mov	x5, x19
   2c080:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   2c084:	ldrb	w8, [sp]
   2c088:	tst	w8, #0xc
   2c08c:	b.ne	2c09c <PyInit__decimal@@Base+0x25538>  // b.any
   2c090:	ldrb	w8, [x21]
   2c094:	tst	w8, #0xc
   2c098:	b.eq	2c110 <PyInit__decimal@@Base+0x255ac>  // b.none
   2c09c:	ldrb	w8, [sp, #560]
   2c0a0:	adrp	x22, 4c000 <PyInit__decimal@@Base+0x4549c>
   2c0a4:	cmp	w8, #0x1f
   2c0a8:	b.hi	2c0bc <PyInit__decimal@@Base+0x25558>  // b.pmore
   2c0ac:	ldr	x8, [x22, #1384]
   2c0b0:	ldr	x0, [sp, #600]
   2c0b4:	blr	x8
   2c0b8:	ldrb	w8, [sp, #560]
   2c0bc:	tbnz	w8, #4, 2c0cc <PyInit__decimal@@Base+0x25568>
   2c0c0:	ldr	x8, [x22, #1384]
   2c0c4:	add	x0, sp, #0x230
   2c0c8:	blr	x8
   2c0cc:	ldrb	w8, [sp]
   2c0d0:	cmp	w8, #0x1f
   2c0d4:	b.hi	2c0e8 <PyInit__decimal@@Base+0x25584>  // b.pmore
   2c0d8:	ldr	x8, [x22, #1384]
   2c0dc:	ldr	x0, [sp, #40]
   2c0e0:	blr	x8
   2c0e4:	ldrb	w8, [sp]
   2c0e8:	tbnz	w8, #4, 2bfd4 <PyInit__decimal@@Base+0x25470>
   2c0ec:	ldr	x8, [x22, #1384]
   2c0f0:	mov	x0, sp
   2c0f4:	blr	x8
   2c0f8:	b	2bfd4 <PyInit__decimal@@Base+0x25470>
   2c0fc:	mov	w1, #0x10                  	// #16
   2c100:	b	2c024 <PyInit__decimal@@Base+0x254c0>
   2c104:	mov	w1, #0x200                 	// #512
   2c108:	mov	x0, x24
   2c10c:	b	2c028 <PyInit__decimal@@Base+0x254c4>
   2c110:	ldr	x8, [x21, #40]
   2c114:	ldr	x9, [x21, #24]
   2c118:	add	x8, x8, x9, lsl #3
   2c11c:	ldur	x8, [x8, #-8]
   2c120:	cbz	x8, 2c09c <PyInit__decimal@@Base+0x25538>
   2c124:	ldp	x8, x9, [x23, #8]
   2c128:	ldp	x10, x11, [x21, #8]
   2c12c:	add	x8, x8, x9
   2c130:	sub	x8, x8, x10
   2c134:	sub	x8, x8, x11
   2c138:	add	x8, x8, #0x1
   2c13c:	cmp	x8, #0x2
   2c140:	b.hi	2c09c <PyInit__decimal@@Base+0x25538>  // b.pmore
   2c144:	ldr	x8, [sp, #40]
   2c148:	ldr	x9, [sp, #24]
   2c14c:	adrp	x11, 37000 <PyInit__decimal@@Base+0x3049c>
   2c150:	add	x11, x11, #0xe70
   2c154:	ldr	x12, [x11, #72]
   2c158:	add	x10, x8, x9, lsl #3
   2c15c:	ldur	x10, [x10, #-8]
   2c160:	cmp	x12, x10
   2c164:	b.ls	2c190 <PyInit__decimal@@Base+0x2562c>  // b.plast
   2c168:	ldr	x12, [x11, #32]
   2c16c:	cmp	x12, x10
   2c170:	b.ls	2c1b8 <PyInit__decimal@@Base+0x25654>  // b.plast
   2c174:	ldr	x12, [x11, #16]
   2c178:	cmp	x12, x10
   2c17c:	b.ls	2c1fc <PyInit__decimal@@Base+0x25698>  // b.plast
   2c180:	ldr	x12, [x11, #8]
   2c184:	cmp	x12, x10
   2c188:	mov	w12, #0x1                   	// #1
   2c18c:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c190:	ldr	x12, [x11, #112]
   2c194:	cmp	x12, x10
   2c198:	b.ls	2c1d4 <PyInit__decimal@@Base+0x25670>  // b.plast
   2c19c:	ldr	x12, [x11, #88]
   2c1a0:	cmp	x12, x10
   2c1a4:	b.ls	2c20c <PyInit__decimal@@Base+0x256a8>  // b.plast
   2c1a8:	ldr	x12, [x11, #80]
   2c1ac:	cmp	x12, x10
   2c1b0:	mov	w12, #0xa                   	// #10
   2c1b4:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c1b8:	ldr	x12, [x11, #48]
   2c1bc:	cmp	x12, x10
   2c1c0:	b.ls	2c228 <PyInit__decimal@@Base+0x256c4>  // b.plast
   2c1c4:	ldr	x12, [x11, #40]
   2c1c8:	cmp	x12, x10
   2c1cc:	mov	w12, #0x5                   	// #5
   2c1d0:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c1d4:	ldr	x12, [x11, #144]
   2c1d8:	cmp	x12, x10
   2c1dc:	b.ls	2c244 <PyInit__decimal@@Base+0x256e0>  // b.plast
   2c1e0:	ldr	x12, [x11, #128]
   2c1e4:	cmp	x12, x10
   2c1e8:	b.ls	2c254 <PyInit__decimal@@Base+0x256f0>  // b.plast
   2c1ec:	ldr	x12, [x11, #120]
   2c1f0:	cmp	x12, x10
   2c1f4:	mov	w12, #0xf                   	// #15
   2c1f8:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c1fc:	ldr	x12, [x11, #24]
   2c200:	cmp	x12, x10
   2c204:	mov	w12, #0x3                   	// #3
   2c208:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c20c:	ldr	x12, [x11, #104]
   2c210:	cmp	x12, x10
   2c214:	b.ls	2c358 <PyInit__decimal@@Base+0x257f4>  // b.plast
   2c218:	ldr	x12, [x11, #96]
   2c21c:	cmp	x12, x10
   2c220:	mov	w12, #0xc                   	// #12
   2c224:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c228:	ldr	x12, [x11, #64]
   2c22c:	cmp	x12, x10
   2c230:	b.ls	2c360 <PyInit__decimal@@Base+0x257fc>  // b.plast
   2c234:	ldr	x12, [x11, #56]
   2c238:	cmp	x12, x10
   2c23c:	mov	w12, #0x7                   	// #7
   2c240:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c244:	ldr	x12, [x11, #152]
   2c248:	cmp	x12, x10
   2c24c:	mov	w12, #0x13                  	// #19
   2c250:	b	2c260 <PyInit__decimal@@Base+0x256fc>
   2c254:	ldr	x12, [x11, #136]
   2c258:	cmp	x12, x10
   2c25c:	mov	w12, #0x11                  	// #17
   2c260:	cinc	x12, x12, ls  // ls = plast
   2c264:	ldr	x11, [x11, x12, lsl #3]
   2c268:	sub	x11, x11, #0x1
   2c26c:	cmp	x11, x10
   2c270:	b.ne	2c298 <PyInit__decimal@@Base+0x25734>  // b.any
   2c274:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   2c278:	movk	x10, #0x2304, lsl #32
   2c27c:	sub	x9, x9, #0x2
   2c280:	movk	x10, #0x8ac7, lsl #48
   2c284:	tbnz	x9, #63, 2c2a0 <PyInit__decimal@@Base+0x2573c>
   2c288:	ldr	x11, [x8, x9, lsl #3]
   2c28c:	sub	x9, x9, #0x1
   2c290:	cmp	x11, x10
   2c294:	b.eq	2c284 <PyInit__decimal@@Base+0x25720>  // b.none
   2c298:	mov	w25, wzr
   2c29c:	b	2c2a4 <PyInit__decimal@@Base+0x25740>
   2c2a0:	mov	w25, #0x1                   	// #1
   2c2a4:	ldr	x26, [sp, #16]
   2c2a8:	mov	x0, sp
   2c2ac:	bl	207d4 <PyInit__decimal@@Base+0x19c70>
   2c2b0:	mov	w24, w0
   2c2b4:	sub	x0, x29, #0x30
   2c2b8:	sub	x27, x29, #0x30
   2c2bc:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2c2c0:	ldrb	w8, [x22]
   2c2c4:	ldrb	w9, [x23]
   2c2c8:	add	x5, x27, #0x1c
   2c2cc:	mov	x0, sp
   2c2d0:	and	w8, w8, #0x1
   2c2d4:	and	w9, w9, #0x1
   2c2d8:	eor	w10, w8, #0x1
   2c2dc:	cmp	w8, w9
   2c2e0:	csel	w3, w10, w9, eq  // eq = none
   2c2e4:	sub	x4, x29, #0x30
   2c2e8:	mov	x1, x21
   2c2ec:	mov	x2, x23
   2c2f0:	bl	24ddc <PyInit__decimal@@Base+0x1e278>
   2c2f4:	ldur	w8, [x29, #-20]
   2c2f8:	mov	w9, #0x3be                 	// #958
   2c2fc:	ands	w1, w8, w9
   2c300:	b.eq	2c314 <PyInit__decimal@@Base+0x257b0>  // b.none
   2c304:	mov	x0, x21
   2c308:	mov	x2, x19
   2c30c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2c310:	b	2c09c <PyInit__decimal@@Base+0x25538>
   2c314:	mov	x0, sp
   2c318:	mov	x1, x21
   2c31c:	bl	224e8 <PyInit__decimal@@Base+0x1b984>
   2c320:	tbnz	w0, #31, 2c32c <PyInit__decimal@@Base+0x257c8>
   2c324:	cbz	w24, 2c09c <PyInit__decimal@@Base+0x25538>
   2c328:	cbnz	w0, 2c09c <PyInit__decimal@@Base+0x25538>
   2c32c:	cbz	w25, 2c344 <PyInit__decimal@@Base+0x257e0>
   2c330:	ldr	x8, [x20]
   2c334:	cmp	x26, x8
   2c338:	b.ne	2c344 <PyInit__decimal@@Base+0x257e0>  // b.any
   2c33c:	mov	w1, #0x8                   	// #8
   2c340:	b	2c304 <PyInit__decimal@@Base+0x257a0>
   2c344:	mov	x1, sp
   2c348:	mov	x0, x21
   2c34c:	mov	x2, x19
   2c350:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2c354:	b	2c09c <PyInit__decimal@@Base+0x25538>
   2c358:	mov	w12, #0xe                   	// #14
   2c35c:	b	2c264 <PyInit__decimal@@Base+0x25700>
   2c360:	mov	w12, #0x9                   	// #9
   2c364:	b	2c264 <PyInit__decimal@@Base+0x25700>
   2c368:	bl	67b0 <abort@plt>
   2c36c:	stp	x29, x30, [sp, #-64]!
   2c370:	str	x23, [sp, #16]
   2c374:	stp	x22, x21, [sp, #32]
   2c378:	stp	x20, x19, [sp, #48]
   2c37c:	mov	x29, sp
   2c380:	ldrb	w8, [x1]
   2c384:	mov	x19, x4
   2c388:	mov	x21, x0
   2c38c:	tst	w8, #0xe
   2c390:	b.eq	2c3b0 <PyInit__decimal@@Base+0x2584c>  // b.none
   2c394:	mov	x0, x21
   2c398:	mov	x2, x19
   2c39c:	ldp	x20, x19, [sp, #48]
   2c3a0:	ldp	x22, x21, [sp, #32]
   2c3a4:	ldr	x23, [sp, #16]
   2c3a8:	ldp	x29, x30, [sp], #64
   2c3ac:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   2c3b0:	ldr	x9, [x1, #40]
   2c3b4:	ldr	x10, [x1, #24]
   2c3b8:	mov	x23, x2
   2c3bc:	add	x9, x9, x10, lsl #3
   2c3c0:	ldur	x9, [x9, #-8]
   2c3c4:	cbz	x9, 2c418 <PyInit__decimal@@Base+0x258b4>
   2c3c8:	ldr	x8, [x1, #8]
   2c3cc:	mov	x20, x3
   2c3d0:	subs	x2, x8, x23
   2c3d4:	b.mi	2c43c <PyInit__decimal@@Base+0x258d8>  // b.first
   2c3d8:	ldr	x8, [x1, #16]
   2c3dc:	mov	x9, #0x1                   	// #1
   2c3e0:	movk	x9, #0xa764, lsl #16
   2c3e4:	movk	x9, #0xb6b3, lsl #32
   2c3e8:	add	x8, x8, x2
   2c3ec:	movk	x9, #0xde0, lsl #48
   2c3f0:	cmp	x8, x9
   2c3f4:	b.lt	2c48c <PyInit__decimal@@Base+0x25928>  // b.tstop
   2c3f8:	mov	x0, x21
   2c3fc:	mov	x2, x19
   2c400:	ldp	x20, x19, [sp, #48]
   2c404:	ldp	x22, x21, [sp, #32]
   2c408:	ldr	x23, [sp, #16]
   2c40c:	mov	w1, #0x100                 	// #256
   2c410:	ldp	x29, x30, [sp], #64
   2c414:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2c418:	mov	x0, x21
   2c41c:	mov	x3, x23
   2c420:	ldp	x20, x19, [sp, #48]
   2c424:	ldp	x22, x21, [sp, #32]
   2c428:	ldr	x23, [sp, #16]
   2c42c:	and	w1, w8, #0x1
   2c430:	mov	x2, xzr
   2c434:	ldp	x29, x30, [sp], #64
   2c438:	b	21100 <PyInit__decimal@@Base+0x1a59c>
   2c43c:	neg	x2, x2
   2c440:	mov	x0, x21
   2c444:	mov	x3, x19
   2c448:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2c44c:	cmn	x0, #0x1
   2c450:	b.eq	2c718 <PyInit__decimal@@Base+0x25bb4>  // b.none
   2c454:	str	x23, [x21, #8]
   2c458:	ldr	w8, [x20, #36]
   2c45c:	mov	x22, x0
   2c460:	cmp	w8, #0x7
   2c464:	b.hi	2c6f0 <PyInit__decimal@@Base+0x25b8c>  // b.pmore
   2c468:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2c46c:	add	x9, x9, #0x1e9
   2c470:	adr	x10, 2c480 <PyInit__decimal@@Base+0x2591c>
   2c474:	ldrb	w11, [x9, x8]
   2c478:	add	x10, x10, x11, lsl #2
   2c47c:	br	x10
   2c480:	cmp	x22, #0x0
   2c484:	cset	w8, ne  // ne = any
   2c488:	b	2c530 <PyInit__decimal@@Base+0x259cc>
   2c48c:	mov	x0, x21
   2c490:	mov	x3, x19
   2c494:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2c498:	cbz	w0, 2c718 <PyInit__decimal@@Base+0x25bb4>
   2c49c:	str	x23, [x21, #8]
   2c4a0:	b	2c70c <PyInit__decimal@@Base+0x25ba8>
   2c4a4:	cbz	x22, 2c588 <PyInit__decimal@@Base+0x25a24>
   2c4a8:	ldrb	w8, [x21]
   2c4ac:	mvn	w8, w8
   2c4b0:	b	2c4e8 <PyInit__decimal@@Base+0x25984>
   2c4b4:	cbz	x22, 2c588 <PyInit__decimal@@Base+0x25a24>
   2c4b8:	ldrb	w8, [x21]
   2c4bc:	b	2c4e8 <PyInit__decimal@@Base+0x25984>
   2c4c0:	cmp	x22, #0x4
   2c4c4:	b	2c4cc <PyInit__decimal@@Base+0x25968>
   2c4c8:	cmp	x22, #0x5
   2c4cc:	cset	w8, hi  // hi = pmore
   2c4d0:	b	2c530 <PyInit__decimal@@Base+0x259cc>
   2c4d4:	cmp	x22, #0x5
   2c4d8:	b.hi	2c534 <PyInit__decimal@@Base+0x259d0>  // b.pmore
   2c4dc:	b.ne	2c6f0 <PyInit__decimal@@Base+0x25b8c>  // b.any
   2c4e0:	ldr	x8, [x21, #40]
   2c4e4:	ldr	w8, [x8]
   2c4e8:	and	w8, w8, #0x1
   2c4ec:	b	2c530 <PyInit__decimal@@Base+0x259cc>
   2c4f0:	ldr	x8, [x21, #40]
   2c4f4:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2c4f8:	movk	x9, #0xcccd
   2c4fc:	mov	w10, #0xa                   	// #10
   2c500:	ldr	x8, [x8]
   2c504:	cmp	x22, #0x0
   2c508:	cset	w11, ne  // ne = any
   2c50c:	umulh	x9, x8, x9
   2c510:	lsr	x9, x9, #3
   2c514:	msub	w8, w9, w10, w8
   2c518:	cmp	w8, #0x0
   2c51c:	cset	w9, eq  // eq = none
   2c520:	cmp	w8, #0x5
   2c524:	cset	w8, eq  // eq = none
   2c528:	orr	w8, w9, w8
   2c52c:	and	w8, w11, w8
   2c530:	cbz	w8, 2c6f0 <PyInit__decimal@@Base+0x25b8c>
   2c534:	ldr	x0, [x21, #40]
   2c538:	ldr	x1, [x21, #24]
   2c53c:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   2c540:	cbz	x0, 2c57c <PyInit__decimal@@Base+0x25a18>
   2c544:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2c548:	ldr	x10, [x9, #1352]
   2c54c:	ldp	x8, x9, [x21, #24]
   2c550:	add	x11, x8, #0x1
   2c554:	cmp	x10, x11
   2c558:	csinc	x1, x10, x8, ge  // ge = tcont
   2c55c:	cmp	x1, x9
   2c560:	b.eq	2c5b0 <PyInit__decimal@@Base+0x25a4c>  // b.none
   2c564:	ldrb	w10, [x21]
   2c568:	tbnz	w10, #5, 2c594 <PyInit__decimal@@Base+0x25a30>
   2c56c:	mov	x0, x21
   2c570:	mov	x2, x19
   2c574:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2c578:	b	2c5a8 <PyInit__decimal@@Base+0x25a44>
   2c57c:	ldr	x9, [x21, #40]
   2c580:	ldr	x8, [x21, #24]
   2c584:	b	2c5c8 <PyInit__decimal@@Base+0x25a64>
   2c588:	ldr	w8, [x19]
   2c58c:	orr	w8, w8, #0x1000
   2c590:	b	2c708 <PyInit__decimal@@Base+0x25ba4>
   2c594:	cmp	x1, x9
   2c598:	b.le	2c5b0 <PyInit__decimal@@Base+0x25a4c>
   2c59c:	mov	x0, x21
   2c5a0:	mov	x2, x19
   2c5a4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2c5a8:	cbz	w0, 2c6f0 <PyInit__decimal@@Base+0x25b8c>
   2c5ac:	ldr	x8, [x21, #24]
   2c5b0:	ldr	x9, [x21, #40]
   2c5b4:	mov	w10, #0x1                   	// #1
   2c5b8:	str	x10, [x9, x8, lsl #3]
   2c5bc:	ldr	x8, [x21, #24]
   2c5c0:	add	x8, x8, #0x1
   2c5c4:	str	x8, [x21, #24]
   2c5c8:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2c5cc:	add	x9, x9, x8, lsl #3
   2c5d0:	add	x10, x10, #0xe70
   2c5d4:	ldur	x9, [x9, #-8]
   2c5d8:	ldr	x11, [x10, #72]
   2c5dc:	cmp	x11, x9
   2c5e0:	b.ls	2c60c <PyInit__decimal@@Base+0x25aa8>  // b.plast
   2c5e4:	ldr	x11, [x10, #32]
   2c5e8:	cmp	x11, x9
   2c5ec:	b.ls	2c634 <PyInit__decimal@@Base+0x25ad0>  // b.plast
   2c5f0:	ldr	x11, [x10, #16]
   2c5f4:	cmp	x11, x9
   2c5f8:	b.ls	2c678 <PyInit__decimal@@Base+0x25b14>  // b.plast
   2c5fc:	ldr	x10, [x10, #8]
   2c600:	cmp	x10, x9
   2c604:	mov	w9, #0x1                   	// #1
   2c608:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c60c:	ldr	x11, [x10, #112]
   2c610:	cmp	x11, x9
   2c614:	b.ls	2c650 <PyInit__decimal@@Base+0x25aec>  // b.plast
   2c618:	ldr	x11, [x10, #88]
   2c61c:	cmp	x11, x9
   2c620:	b.ls	2c688 <PyInit__decimal@@Base+0x25b24>  // b.plast
   2c624:	ldr	x10, [x10, #80]
   2c628:	cmp	x10, x9
   2c62c:	mov	w9, #0xa                   	// #10
   2c630:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c634:	ldr	x11, [x10, #48]
   2c638:	cmp	x11, x9
   2c63c:	b.ls	2c6a4 <PyInit__decimal@@Base+0x25b40>  // b.plast
   2c640:	ldr	x10, [x10, #40]
   2c644:	cmp	x10, x9
   2c648:	mov	w9, #0x5                   	// #5
   2c64c:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c650:	ldr	x11, [x10, #144]
   2c654:	cmp	x11, x9
   2c658:	b.ls	2c6c0 <PyInit__decimal@@Base+0x25b5c>  // b.plast
   2c65c:	ldr	x11, [x10, #128]
   2c660:	cmp	x11, x9
   2c664:	b.ls	2c6d0 <PyInit__decimal@@Base+0x25b6c>  // b.plast
   2c668:	ldr	x10, [x10, #120]
   2c66c:	cmp	x10, x9
   2c670:	mov	w9, #0xf                   	// #15
   2c674:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c678:	ldr	x10, [x10, #24]
   2c67c:	cmp	x10, x9
   2c680:	mov	w9, #0x3                   	// #3
   2c684:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c688:	ldr	x11, [x10, #104]
   2c68c:	cmp	x11, x9
   2c690:	b.ls	2c768 <PyInit__decimal@@Base+0x25c04>  // b.plast
   2c694:	ldr	x10, [x10, #96]
   2c698:	cmp	x10, x9
   2c69c:	mov	w9, #0xc                   	// #12
   2c6a0:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c6a4:	ldr	x11, [x10, #64]
   2c6a8:	cmp	x11, x9
   2c6ac:	b.ls	2c770 <PyInit__decimal@@Base+0x25c0c>  // b.plast
   2c6b0:	ldr	x10, [x10, #56]
   2c6b4:	cmp	x10, x9
   2c6b8:	mov	w9, #0x7                   	// #7
   2c6bc:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c6c0:	ldr	x10, [x10, #152]
   2c6c4:	cmp	x10, x9
   2c6c8:	mov	w9, #0x13                  	// #19
   2c6cc:	b	2c6dc <PyInit__decimal@@Base+0x25b78>
   2c6d0:	ldr	x10, [x10, #136]
   2c6d4:	cmp	x10, x9
   2c6d8:	mov	w9, #0x11                  	// #17
   2c6dc:	cinc	x9, x9, ls  // ls = plast
   2c6e0:	mov	w10, #0x13                  	// #19
   2c6e4:	madd	x8, x8, x10, x9
   2c6e8:	sub	x8, x8, #0x13
   2c6ec:	str	x8, [x21, #16]
   2c6f0:	ldr	w8, [x19]
   2c6f4:	orr	w9, w8, #0x1000
   2c6f8:	str	w9, [x19]
   2c6fc:	cbz	x22, 2c70c <PyInit__decimal@@Base+0x25ba8>
   2c700:	mov	w9, #0x1040                	// #4160
   2c704:	orr	w8, w8, w9
   2c708:	str	w8, [x19]
   2c70c:	ldrb	w8, [x21]
   2c710:	tst	w8, #0xe
   2c714:	b.eq	2c72c <PyInit__decimal@@Base+0x25bc8>  // b.none
   2c718:	ldp	x20, x19, [sp, #48]
   2c71c:	ldp	x22, x21, [sp, #32]
   2c720:	ldr	x23, [sp, #16]
   2c724:	ldp	x29, x30, [sp], #64
   2c728:	ret
   2c72c:	ldr	x8, [x21, #40]
   2c730:	ldr	x9, [x21, #24]
   2c734:	add	x8, x8, x9, lsl #3
   2c738:	ldur	x8, [x8, #-8]
   2c73c:	cbz	x8, 2c718 <PyInit__decimal@@Base+0x25bb4>
   2c740:	ldp	x8, x9, [x21, #8]
   2c744:	ldr	x10, [x20, #16]
   2c748:	add	x8, x8, x9
   2c74c:	sub	x8, x8, #0x1
   2c750:	cmp	x8, x10
   2c754:	b.ge	2c718 <PyInit__decimal@@Base+0x25bb4>  // b.tcont
   2c758:	ldr	w8, [x19]
   2c75c:	orr	w8, w8, #0x2000
   2c760:	str	w8, [x19]
   2c764:	b	2c718 <PyInit__decimal@@Base+0x25bb4>
   2c768:	mov	w9, #0xe                   	// #14
   2c76c:	b	2c6e0 <PyInit__decimal@@Base+0x25b7c>
   2c770:	mov	w9, #0x9                   	// #9
   2c774:	b	2c6e0 <PyInit__decimal@@Base+0x25b7c>
   2c778:	mov	x8, #0xfffc                	// #65532
   2c77c:	movk	x8, #0xf62b, lsl #16
   2c780:	mov	x9, #0xfffd                	// #65533
   2c784:	movk	x8, #0x241a, lsl #32
   2c788:	movk	x9, #0x9d8f, lsl #16
   2c78c:	movk	x8, #0x29a2, lsl #48
   2c790:	movk	x9, #0xdace, lsl #32
   2c794:	add	x8, x2, x8
   2c798:	movk	x9, #0x3782, lsl #48
   2c79c:	cmp	x8, x9
   2c7a0:	b.cc	2c7b0 <PyInit__decimal@@Base+0x25c4c>  // b.lo, b.ul, b.last
   2c7a4:	mov	w1, #0x100                 	// #256
   2c7a8:	mov	x2, x4
   2c7ac:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2c7b0:	b	2c36c <PyInit__decimal@@Base+0x25808>
   2c7b4:	mov	x4, x3
   2c7b8:	mov	x3, x2
   2c7bc:	mov	x2, x1
   2c7c0:	mov	x1, x0
   2c7c4:	mov	w0, wzr
   2c7c8:	b	2c7cc <PyInit__decimal@@Base+0x25c68>
   2c7cc:	stp	x29, x30, [sp, #-64]!
   2c7d0:	str	x23, [sp, #16]
   2c7d4:	stp	x22, x21, [sp, #32]
   2c7d8:	stp	x20, x19, [sp, #48]
   2c7dc:	mov	x29, sp
   2c7e0:	ldrb	w8, [x2]
   2c7e4:	mov	x19, x4
   2c7e8:	mov	x23, x3
   2c7ec:	mov	x22, x2
   2c7f0:	mov	x20, x1
   2c7f4:	tst	w8, #0xe
   2c7f8:	b.eq	2c828 <PyInit__decimal@@Base+0x25cc4>  // b.none
   2c7fc:	mov	x0, x20
   2c800:	mov	x1, x22
   2c804:	mov	x2, x23
   2c808:	mov	x3, x19
   2c80c:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2c810:	cbz	w0, 2c830 <PyInit__decimal@@Base+0x25ccc>
   2c814:	ldp	x20, x19, [sp, #48]
   2c818:	ldp	x22, x21, [sp, #32]
   2c81c:	ldr	x23, [sp, #16]
   2c820:	ldp	x29, x30, [sp], #64
   2c824:	ret
   2c828:	ldr	x9, [x22, #8]
   2c82c:	tbnz	x9, #63, 2c850 <PyInit__decimal@@Base+0x25cec>
   2c830:	mov	x0, x20
   2c834:	mov	x1, x22
   2c838:	mov	x2, x19
   2c83c:	ldp	x20, x19, [sp, #48]
   2c840:	ldp	x22, x21, [sp, #32]
   2c844:	ldr	x23, [sp, #16]
   2c848:	ldp	x29, x30, [sp], #64
   2c84c:	b	21764 <PyInit__decimal@@Base+0x1ac00>
   2c850:	ldr	x10, [x22, #40]
   2c854:	ldr	x11, [x22, #24]
   2c858:	add	x10, x10, x11, lsl #3
   2c85c:	ldur	x10, [x10, #-8]
   2c860:	cbz	x10, 2c8c4 <PyInit__decimal@@Base+0x25d60>
   2c864:	mov	w21, w0
   2c868:	neg	x2, x9
   2c86c:	mov	x0, x20
   2c870:	mov	x1, x22
   2c874:	mov	x3, x19
   2c878:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2c87c:	cmn	x0, #0x1
   2c880:	b.eq	2c814 <PyInit__decimal@@Base+0x25cb0>  // b.none
   2c884:	cmp	w21, #0x1
   2c888:	str	xzr, [x20, #8]
   2c88c:	b.hi	2c814 <PyInit__decimal@@Base+0x25cb0>  // b.pmore
   2c890:	ldr	w8, [x23, #36]
   2c894:	mov	x22, x0
   2c898:	cmp	w8, #0x7
   2c89c:	b.hi	2cb28 <PyInit__decimal@@Base+0x25fc4>  // b.pmore
   2c8a0:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2c8a4:	add	x9, x9, #0x1f1
   2c8a8:	adr	x10, 2c8b8 <PyInit__decimal@@Base+0x25d54>
   2c8ac:	ldrb	w11, [x9, x8]
   2c8b0:	add	x10, x10, x11, lsl #2
   2c8b4:	br	x10
   2c8b8:	cmp	x22, #0x0
   2c8bc:	cset	w8, ne  // ne = any
   2c8c0:	b	2c974 <PyInit__decimal@@Base+0x25e10>
   2c8c4:	mov	x0, x20
   2c8c8:	ldp	x20, x19, [sp, #48]
   2c8cc:	ldp	x22, x21, [sp, #32]
   2c8d0:	ldr	x23, [sp, #16]
   2c8d4:	and	w1, w8, #0x1
   2c8d8:	mov	x2, xzr
   2c8dc:	mov	x3, xzr
   2c8e0:	ldp	x29, x30, [sp], #64
   2c8e4:	b	21100 <PyInit__decimal@@Base+0x1a59c>
   2c8e8:	cbz	x22, 2cb28 <PyInit__decimal@@Base+0x25fc4>
   2c8ec:	ldrb	w8, [x20]
   2c8f0:	mvn	w8, w8
   2c8f4:	b	2c92c <PyInit__decimal@@Base+0x25dc8>
   2c8f8:	cbz	x22, 2cb28 <PyInit__decimal@@Base+0x25fc4>
   2c8fc:	ldrb	w8, [x20]
   2c900:	b	2c92c <PyInit__decimal@@Base+0x25dc8>
   2c904:	cmp	x22, #0x4
   2c908:	b	2c910 <PyInit__decimal@@Base+0x25dac>
   2c90c:	cmp	x22, #0x5
   2c910:	cset	w8, hi  // hi = pmore
   2c914:	b	2c974 <PyInit__decimal@@Base+0x25e10>
   2c918:	cmp	x22, #0x5
   2c91c:	b.hi	2c978 <PyInit__decimal@@Base+0x25e14>  // b.pmore
   2c920:	b.ne	2cb28 <PyInit__decimal@@Base+0x25fc4>  // b.any
   2c924:	ldr	x8, [x20, #40]
   2c928:	ldr	w8, [x8]
   2c92c:	and	w8, w8, #0x1
   2c930:	b	2c974 <PyInit__decimal@@Base+0x25e10>
   2c934:	ldr	x8, [x20, #40]
   2c938:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2c93c:	movk	x9, #0xcccd
   2c940:	mov	w10, #0xa                   	// #10
   2c944:	ldr	x8, [x8]
   2c948:	cmp	x22, #0x0
   2c94c:	cset	w11, ne  // ne = any
   2c950:	umulh	x9, x8, x9
   2c954:	lsr	x9, x9, #3
   2c958:	msub	w8, w9, w10, w8
   2c95c:	cmp	w8, #0x0
   2c960:	cset	w9, eq  // eq = none
   2c964:	cmp	w8, #0x5
   2c968:	cset	w8, eq  // eq = none
   2c96c:	orr	w8, w9, w8
   2c970:	and	w8, w11, w8
   2c974:	cbz	w8, 2cb28 <PyInit__decimal@@Base+0x25fc4>
   2c978:	ldr	x0, [x20, #40]
   2c97c:	ldr	x1, [x20, #24]
   2c980:	bl	1ac78 <PyInit__decimal@@Base+0x14114>
   2c984:	cbz	x0, 2c9c0 <PyInit__decimal@@Base+0x25e5c>
   2c988:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2c98c:	ldr	x10, [x9, #1352]
   2c990:	ldp	x8, x9, [x20, #24]
   2c994:	add	x11, x8, #0x1
   2c998:	cmp	x10, x11
   2c99c:	csinc	x1, x10, x8, ge  // ge = tcont
   2c9a0:	cmp	x1, x9
   2c9a4:	b.eq	2c9e8 <PyInit__decimal@@Base+0x25e84>  // b.none
   2c9a8:	ldrb	w10, [x20]
   2c9ac:	tbnz	w10, #5, 2c9cc <PyInit__decimal@@Base+0x25e68>
   2c9b0:	mov	x0, x20
   2c9b4:	mov	x2, x19
   2c9b8:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2c9bc:	b	2c9e0 <PyInit__decimal@@Base+0x25e7c>
   2c9c0:	ldr	x9, [x20, #40]
   2c9c4:	ldr	x8, [x20, #24]
   2c9c8:	b	2ca00 <PyInit__decimal@@Base+0x25e9c>
   2c9cc:	cmp	x1, x9
   2c9d0:	b.le	2c9e8 <PyInit__decimal@@Base+0x25e84>
   2c9d4:	mov	x0, x20
   2c9d8:	mov	x2, x19
   2c9dc:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2c9e0:	cbz	w0, 2cb28 <PyInit__decimal@@Base+0x25fc4>
   2c9e4:	ldr	x8, [x20, #24]
   2c9e8:	ldr	x9, [x20, #40]
   2c9ec:	mov	w10, #0x1                   	// #1
   2c9f0:	str	x10, [x9, x8, lsl #3]
   2c9f4:	ldr	x8, [x20, #24]
   2c9f8:	add	x8, x8, #0x1
   2c9fc:	str	x8, [x20, #24]
   2ca00:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2ca04:	add	x9, x9, x8, lsl #3
   2ca08:	add	x10, x10, #0xe70
   2ca0c:	ldur	x9, [x9, #-8]
   2ca10:	ldr	x11, [x10, #72]
   2ca14:	cmp	x11, x9
   2ca18:	b.ls	2ca44 <PyInit__decimal@@Base+0x25ee0>  // b.plast
   2ca1c:	ldr	x11, [x10, #32]
   2ca20:	cmp	x11, x9
   2ca24:	b.ls	2ca6c <PyInit__decimal@@Base+0x25f08>  // b.plast
   2ca28:	ldr	x11, [x10, #16]
   2ca2c:	cmp	x11, x9
   2ca30:	b.ls	2cab0 <PyInit__decimal@@Base+0x25f4c>  // b.plast
   2ca34:	ldr	x10, [x10, #8]
   2ca38:	cmp	x10, x9
   2ca3c:	mov	w9, #0x1                   	// #1
   2ca40:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2ca44:	ldr	x11, [x10, #112]
   2ca48:	cmp	x11, x9
   2ca4c:	b.ls	2ca88 <PyInit__decimal@@Base+0x25f24>  // b.plast
   2ca50:	ldr	x11, [x10, #88]
   2ca54:	cmp	x11, x9
   2ca58:	b.ls	2cac0 <PyInit__decimal@@Base+0x25f5c>  // b.plast
   2ca5c:	ldr	x10, [x10, #80]
   2ca60:	cmp	x10, x9
   2ca64:	mov	w9, #0xa                   	// #10
   2ca68:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2ca6c:	ldr	x11, [x10, #48]
   2ca70:	cmp	x11, x9
   2ca74:	b.ls	2cadc <PyInit__decimal@@Base+0x25f78>  // b.plast
   2ca78:	ldr	x10, [x10, #40]
   2ca7c:	cmp	x10, x9
   2ca80:	mov	w9, #0x5                   	// #5
   2ca84:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2ca88:	ldr	x11, [x10, #144]
   2ca8c:	cmp	x11, x9
   2ca90:	b.ls	2caf8 <PyInit__decimal@@Base+0x25f94>  // b.plast
   2ca94:	ldr	x11, [x10, #128]
   2ca98:	cmp	x11, x9
   2ca9c:	b.ls	2cb08 <PyInit__decimal@@Base+0x25fa4>  // b.plast
   2caa0:	ldr	x10, [x10, #120]
   2caa4:	cmp	x10, x9
   2caa8:	mov	w9, #0xf                   	// #15
   2caac:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2cab0:	ldr	x10, [x10, #24]
   2cab4:	cmp	x10, x9
   2cab8:	mov	w9, #0x3                   	// #3
   2cabc:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2cac0:	ldr	x11, [x10, #104]
   2cac4:	cmp	x11, x9
   2cac8:	b.ls	2cb4c <PyInit__decimal@@Base+0x25fe8>  // b.plast
   2cacc:	ldr	x10, [x10, #96]
   2cad0:	cmp	x10, x9
   2cad4:	mov	w9, #0xc                   	// #12
   2cad8:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2cadc:	ldr	x11, [x10, #64]
   2cae0:	cmp	x11, x9
   2cae4:	b.ls	2cb54 <PyInit__decimal@@Base+0x25ff0>  // b.plast
   2cae8:	ldr	x10, [x10, #56]
   2caec:	cmp	x10, x9
   2caf0:	mov	w9, #0x7                   	// #7
   2caf4:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2caf8:	ldr	x10, [x10, #152]
   2cafc:	cmp	x10, x9
   2cb00:	mov	w9, #0x13                  	// #19
   2cb04:	b	2cb14 <PyInit__decimal@@Base+0x25fb0>
   2cb08:	ldr	x10, [x10, #136]
   2cb0c:	cmp	x10, x9
   2cb10:	mov	w9, #0x11                  	// #17
   2cb14:	cinc	x9, x9, ls  // ls = plast
   2cb18:	mov	w10, #0x13                  	// #19
   2cb1c:	madd	x8, x8, x10, x9
   2cb20:	sub	x8, x8, #0x13
   2cb24:	str	x8, [x20, #16]
   2cb28:	cbnz	w21, 2c814 <PyInit__decimal@@Base+0x25cb0>
   2cb2c:	ldr	w8, [x19]
   2cb30:	orr	w9, w8, #0x1000
   2cb34:	str	w9, [x19]
   2cb38:	cbz	x22, 2c814 <PyInit__decimal@@Base+0x25cb0>
   2cb3c:	mov	w9, #0x1040                	// #4160
   2cb40:	orr	w8, w8, w9
   2cb44:	str	w8, [x19]
   2cb48:	b	2c814 <PyInit__decimal@@Base+0x25cb0>
   2cb4c:	mov	w9, #0xe                   	// #14
   2cb50:	b	2cb18 <PyInit__decimal@@Base+0x25fb4>
   2cb54:	mov	w9, #0x9                   	// #9
   2cb58:	b	2cb18 <PyInit__decimal@@Base+0x25fb4>
   2cb5c:	mov	x8, x0
   2cb60:	mov	x4, x3
   2cb64:	mov	x3, x2
   2cb68:	mov	w0, #0x2                   	// #2
   2cb6c:	mov	x2, x1
   2cb70:	mov	x1, x8
   2cb74:	b	2c7cc <PyInit__decimal@@Base+0x25c68>
   2cb78:	sub	sp, sp, #0x40
   2cb7c:	stp	x29, x30, [sp, #48]
   2cb80:	add	x29, sp, #0x30
   2cb84:	ldp	q1, q0, [x2, #16]
   2cb88:	ldr	q2, [x2]
   2cb8c:	mov	x8, x1
   2cb90:	mov	x4, x3
   2cb94:	mov	x1, x0
   2cb98:	mov	w9, #0x3                   	// #3
   2cb9c:	mov	x3, sp
   2cba0:	mov	w0, #0x1                   	// #1
   2cba4:	mov	x2, x8
   2cba8:	stp	q1, q0, [sp, #16]
   2cbac:	str	q2, [sp]
   2cbb0:	str	w9, [sp, #36]
   2cbb4:	bl	2c7cc <PyInit__decimal@@Base+0x25c68>
   2cbb8:	ldp	x29, x30, [sp, #48]
   2cbbc:	add	sp, sp, #0x40
   2cbc0:	ret
   2cbc4:	sub	sp, sp, #0x40
   2cbc8:	stp	x29, x30, [sp, #48]
   2cbcc:	add	x29, sp, #0x30
   2cbd0:	ldp	q1, q0, [x2, #16]
   2cbd4:	ldr	q2, [x2]
   2cbd8:	mov	x8, x1
   2cbdc:	mov	x4, x3
   2cbe0:	mov	x1, x0
   2cbe4:	mov	w9, #0x2                   	// #2
   2cbe8:	mov	x3, sp
   2cbec:	mov	w0, #0x1                   	// #1
   2cbf0:	mov	x2, x8
   2cbf4:	stp	q1, q0, [sp, #16]
   2cbf8:	str	q2, [sp]
   2cbfc:	str	w9, [sp, #36]
   2cc00:	bl	2c7cc <PyInit__decimal@@Base+0x25c68>
   2cc04:	ldp	x29, x30, [sp, #48]
   2cc08:	add	sp, sp, #0x40
   2cc0c:	ret
   2cc10:	ldrb	w8, [x0]
   2cc14:	tst	w8, #0xe
   2cc18:	b.ne	2cc28 <PyInit__decimal@@Base+0x260c4>  // b.any
   2cc1c:	ldrb	w9, [x1]
   2cc20:	tst	w9, #0xe
   2cc24:	b.eq	2cc5c <PyInit__decimal@@Base+0x260f8>  // b.none
   2cc28:	tst	w8, #0xc
   2cc2c:	b.eq	2cc44 <PyInit__decimal@@Base+0x260e0>  // b.none
   2cc30:	ldrb	w9, [x1]
   2cc34:	tst	w9, #0xc
   2cc38:	b.eq	2cc44 <PyInit__decimal@@Base+0x260e0>  // b.none
   2cc3c:	mov	w0, #0x1                   	// #1
   2cc40:	ret
   2cc44:	tbnz	w8, #1, 2cc50 <PyInit__decimal@@Base+0x260ec>
   2cc48:	mov	w0, wzr
   2cc4c:	ret
   2cc50:	ldrb	w8, [x1]
   2cc54:	ubfx	w0, w8, #1, #1
   2cc58:	ret
   2cc5c:	ldr	x8, [x0, #8]
   2cc60:	ldr	x9, [x1, #8]
   2cc64:	cmp	x8, x9
   2cc68:	cset	w0, eq  // eq = none
   2cc6c:	ret
   2cc70:	stp	x29, x30, [sp, #-96]!
   2cc74:	stp	x28, x27, [sp, #16]
   2cc78:	stp	x26, x25, [sp, #32]
   2cc7c:	stp	x24, x23, [sp, #48]
   2cc80:	stp	x22, x21, [sp, #64]
   2cc84:	stp	x20, x19, [sp, #80]
   2cc88:	mov	x29, sp
   2cc8c:	sub	sp, sp, #0x770
   2cc90:	ldrb	w9, [x1]
   2cc94:	mov	x19, x3
   2cc98:	mov	x21, x2
   2cc9c:	mov	x23, x1
   2cca0:	tst	w9, #0xe
   2cca4:	mov	x20, x0
   2cca8:	b.eq	2ccf8 <PyInit__decimal@@Base+0x26194>  // b.none
   2ccac:	mov	x0, x20
   2ccb0:	mov	x1, x23
   2ccb4:	mov	x2, x21
   2ccb8:	mov	x3, x19
   2ccbc:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2ccc0:	cbnz	w0, 2d424 <PyInit__decimal@@Base+0x268c0>
   2ccc4:	ldrb	w8, [x23]
   2ccc8:	tbnz	w8, #0, 2cdf4 <PyInit__decimal@@Base+0x26290>
   2cccc:	ldr	x8, [x21, #16]
   2ccd0:	ldr	x9, [x21]
   2ccd4:	mov	x0, x20
   2ccd8:	mov	w1, wzr
   2ccdc:	mov	x2, xzr
   2cce0:	sub	x8, x8, x9
   2cce4:	add	x3, x8, #0x1
   2cce8:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2ccec:	ldr	w8, [x19]
   2ccf0:	orr	w8, w8, #0x1
   2ccf4:	b	2ce34 <PyInit__decimal@@Base+0x262d0>
   2ccf8:	ldr	x8, [x23, #40]
   2ccfc:	ldr	x12, [x23, #24]
   2cd00:	and	w1, w9, #0x1
   2cd04:	add	x10, x8, x12, lsl #3
   2cd08:	ldur	x10, [x10, #-8]
   2cd0c:	cbz	x10, 2ce20 <PyInit__decimal@@Base+0x262bc>
   2cd10:	cbnz	w1, 2cdf4 <PyInit__decimal@@Base+0x26290>
   2cd14:	mov	w10, #0x50                  	// #80
   2cd18:	bfxil	w10, w9, #0, #4
   2cd1c:	ldr	x24, [x21]
   2cd20:	stur	wzr, [x29, #-12]
   2cd24:	sturb	w10, [x29, #-160]
   2cd28:	ldp	x10, x9, [x23, #8]
   2cd2c:	adrp	x15, 38000 <PyInit__decimal@@Base+0x3149c>
   2cd30:	ldr	q1, [x15, #2848]
   2cd34:	mov	w14, #0x1                   	// #1
   2cd38:	add	x11, sp, #0x200
   2cd3c:	mov	w13, #0x90                  	// #144
   2cd40:	stp	x10, x9, [x29, #-152]
   2cd44:	adrp	x16, 31000 <PyInit__decimal@@Base+0x2a49c>
   2cd48:	dup	v0.2d, x14
   2cd4c:	stur	x12, [x29, #-136]
   2cd50:	and	x15, x10, #0xfffffffffffffffe
   2cd54:	ldr	x12, [x23, #32]
   2cd58:	strb	w13, [sp, #568]
   2cd5c:	stp	q1, q0, [x11, #64]
   2cd60:	ldr	q1, [x16, #2016]
   2cd64:	neg	x16, x15
   2cd68:	cmp	x16, #0x0
   2cd6c:	sub	x14, x14, x15
   2cd70:	csneg	x25, x14, x15, lt  // lt = tstop
   2cd74:	add	x14, sp, #0x4d0
   2cd78:	str	x14, [sp, #1224]
   2cd7c:	mov	w14, #0x30                  	// #48
   2cd80:	strb	w14, [sp, #1184]
   2cd84:	strb	w14, [sp, #624]
   2cd88:	mov	w14, #0x40                  	// #64
   2cd8c:	str	x14, [sp, #1216]
   2cd90:	str	x14, [sp, #656]
   2cd94:	add	x14, sp, #0x2a0
   2cd98:	str	x14, [sp, #664]
   2cd9c:	mov	w14, #0x5                   	// #5
   2cda0:	str	x14, [sp, #616]
   2cda4:	add	x14, sp, #0x268
   2cda8:	str	x14, [sp, #608]
   2cdac:	mov	w14, #0x3                   	// #3
   2cdb0:	strb	w13, [sp, #512]
   2cdb4:	stur	q0, [x11, #24]
   2cdb8:	stur	q1, [x11, #8]
   2cdbc:	add	x11, sp, #0x230
   2cdc0:	cmp	x20, x23
   2cdc4:	str	xzr, [sp, #1208]
   2cdc8:	str	xzr, [sp, #648]
   2cdcc:	str	x14, [sp, #560]
   2cdd0:	str	xzr, [sp, #1192]
   2cdd4:	str	xzr, [sp, #1200]
   2cdd8:	str	xzr, [sp, #632]
   2cddc:	str	xzr, [sp, #640]
   2cde0:	stp	x12, x8, [x29, #-128]
   2cde4:	str	x11, [sp, #552]
   2cde8:	b.eq	2ce3c <PyInit__decimal@@Base+0x262d8>  // b.none
   2cdec:	sub	x22, x29, #0xa0
   2cdf0:	b	2ce50 <PyInit__decimal@@Base+0x262ec>
   2cdf4:	mov	w1, #0x100                 	// #256
   2cdf8:	mov	x0, x20
   2cdfc:	mov	x2, x19
   2ce00:	add	sp, sp, #0x770
   2ce04:	ldp	x20, x19, [sp, #80]
   2ce08:	ldp	x22, x21, [sp, #64]
   2ce0c:	ldp	x24, x23, [sp, #48]
   2ce10:	ldp	x26, x25, [sp, #32]
   2ce14:	ldp	x28, x27, [sp, #16]
   2ce18:	ldp	x29, x30, [sp], #96
   2ce1c:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2ce20:	mov	w2, #0x2                   	// #2
   2ce24:	mov	x0, x20
   2ce28:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2ce2c:	ldr	w8, [x19]
   2ce30:	orr	w8, w8, #0x4
   2ce34:	str	w8, [x19]
   2ce38:	b	2d424 <PyInit__decimal@@Base+0x268c0>
   2ce3c:	mov	x0, x23
   2ce40:	bl	22020 <PyInit__decimal@@Base+0x1b4bc>
   2ce44:	cbz	x0, 2d124 <PyInit__decimal@@Base+0x265c0>
   2ce48:	ldp	x10, x9, [x0, #8]
   2ce4c:	mov	x22, x0
   2ce50:	adrp	x26, 37000 <PyInit__decimal@@Base+0x3049c>
   2ce54:	add	w8, w9, w10
   2ce58:	add	x26, x26, #0xe70
   2ce5c:	tbnz	w8, #0, 2ceec <PyInit__decimal@@Base+0x26388>
   2ce60:	mov	x13, #0x435f                	// #17247
   2ce64:	movk	x13, #0xd79, lsl #16
   2ce68:	movk	x13, #0x35e5, lsl #32
   2ce6c:	ldr	x11, [x22, #40]
   2ce70:	ldr	x12, [x22, #24]
   2ce74:	movk	x13, #0xd794, lsl #48
   2ce78:	mov	w8, #0x2                   	// #2
   2ce7c:	umulh	x13, x9, x13
   2ce80:	cmp	x9, #0x8
   2ce84:	mov	w10, #0x8                   	// #8
   2ce88:	mov	w14, #0x13                  	// #19
   2ce8c:	sub	x8, x8, x9
   2ce90:	lsr	x13, x13, #4
   2ce94:	csel	x10, x9, x10, lt  // lt = tstop
   2ce98:	str	x8, [x22, #8]
   2ce9c:	msub	x13, x13, x14, x9
   2cea0:	add	x9, x11, x12, lsl #3
   2cea4:	ldur	x9, [x9, #-8]
   2cea8:	cmp	x13, #0x0
   2ceac:	csel	x13, x14, x13, eq  // eq = none
   2ceb0:	cmp	x13, w10, uxtw
   2ceb4:	and	x14, x10, #0xffffffff
   2ceb8:	b.cs	2cf78 <PyInit__decimal@@Base+0x26414>  // b.hs, b.nlast
   2cebc:	cmp	x12, #0x2
   2cec0:	b.lt	2cf84 <PyInit__decimal@@Base+0x26420>  // b.tstop
   2cec4:	add	x11, x11, x12, lsl #3
   2cec8:	sub	x12, x13, x14
   2cecc:	add	x12, x26, x12, lsl #3
   2ced0:	sub	x15, x14, x13
   2ced4:	ldur	x11, [x11, #-16]
   2ced8:	ldr	x12, [x12, #152]
   2cedc:	ldr	x13, [x26, x15, lsl #3]
   2cee0:	udiv	x11, x11, x12
   2cee4:	madd	x9, x13, x9, x11
   2cee8:	b	2cf84 <PyInit__decimal@@Base+0x26420>
   2ceec:	mov	x13, #0x435f                	// #17247
   2cef0:	movk	x13, #0xd79, lsl #16
   2cef4:	movk	x13, #0x35e5, lsl #32
   2cef8:	ldr	x11, [x22, #40]
   2cefc:	ldr	x12, [x22, #24]
   2cf00:	movk	x13, #0xd794, lsl #48
   2cf04:	mov	w8, #0x1                   	// #1
   2cf08:	umulh	x13, x9, x13
   2cf0c:	cmp	x9, #0x7
   2cf10:	mov	w10, #0x7                   	// #7
   2cf14:	mov	w14, #0x13                  	// #19
   2cf18:	sub	x8, x8, x9
   2cf1c:	lsr	x13, x13, #4
   2cf20:	csel	x10, x9, x10, lt  // lt = tstop
   2cf24:	str	x8, [x22, #8]
   2cf28:	msub	x13, x13, x14, x9
   2cf2c:	add	x9, x11, x12, lsl #3
   2cf30:	ldur	x9, [x9, #-8]
   2cf34:	cmp	x13, #0x0
   2cf38:	csel	x13, x14, x13, eq  // eq = none
   2cf3c:	cmp	x13, w10, uxtw
   2cf40:	and	x14, x10, #0xffffffff
   2cf44:	b.cs	2cf94 <PyInit__decimal@@Base+0x26430>  // b.hs, b.nlast
   2cf48:	cmp	x12, #0x2
   2cf4c:	b.lt	2cfa0 <PyInit__decimal@@Base+0x2643c>  // b.tstop
   2cf50:	add	x11, x11, x12, lsl #3
   2cf54:	sub	x12, x13, x14
   2cf58:	add	x12, x26, x12, lsl #3
   2cf5c:	sub	x15, x14, x13
   2cf60:	ldur	x11, [x11, #-16]
   2cf64:	ldr	x12, [x12, #152]
   2cf68:	ldr	x13, [x26, x15, lsl #3]
   2cf6c:	udiv	x11, x11, x12
   2cf70:	madd	x9, x13, x9, x11
   2cf74:	b	2cfa0 <PyInit__decimal@@Base+0x2643c>
   2cf78:	sub	x11, x13, x14
   2cf7c:	ldr	x11, [x26, x11, lsl #3]
   2cf80:	udiv	x9, x9, x11
   2cf84:	cmp	w10, #0x7
   2cf88:	b.gt	2cfbc <PyInit__decimal@@Base+0x26458>
   2cf8c:	mov	x11, #0x800000000           	// #34359738368
   2cf90:	b	2cfac <PyInit__decimal@@Base+0x26448>
   2cf94:	sub	x11, x13, x14
   2cf98:	ldr	x11, [x26, x11, lsl #3]
   2cf9c:	udiv	x9, x9, x11
   2cfa0:	cmp	w10, #0x6
   2cfa4:	b.gt	2cfbc <PyInit__decimal@@Base+0x26458>
   2cfa8:	mov	x11, #0x700000000           	// #30064771072
   2cfac:	sub	x10, x11, x10, lsl #32
   2cfb0:	asr	x10, x10, #29
   2cfb4:	ldr	x10, [x26, x10]
   2cfb8:	mul	x9, x10, x9
   2cfbc:	ldr	x10, [x23, #8]
   2cfc0:	asr	x25, x25, #1
   2cfc4:	mov	w12, #0x3e8                 	// #1000
   2cfc8:	mov	w11, #0x2710                	// #10000
   2cfcc:	add	x13, x12, x11
   2cfd0:	lsr	x27, x13, #1
   2cfd4:	mul	x14, x27, x27
   2cfd8:	cmp	x14, x9
   2cfdc:	b.hi	2cff8 <PyInit__decimal@@Base+0x26494>  // b.pmore
   2cfe0:	orr	x12, x13, #0x1
   2cfe4:	add	x12, x14, x12
   2cfe8:	cmp	x12, x9
   2cfec:	b.hi	2d000 <PyInit__decimal@@Base+0x2649c>  // b.pmore
   2cff0:	add	x12, x27, #0x1
   2cff4:	b	2cfcc <PyInit__decimal@@Base+0x26468>
   2cff8:	sub	x11, x27, #0x1
   2cffc:	b	2cfcc <PyInit__decimal@@Base+0x26468>
   2d000:	ldrb	w9, [x20]
   2d004:	sub	x8, x10, x8
   2d008:	cmp	x8, #0x0
   2d00c:	cinc	x23, x8, lt  // lt = tstop
   2d010:	tbnz	w9, #5, 2d054 <PyInit__decimal@@Base+0x264f0>
   2d014:	adrp	x28, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d018:	ldr	x8, [x20, #32]
   2d01c:	ldr	x1, [x28, #1352]
   2d020:	cmp	x8, x1
   2d024:	b.le	2d054 <PyInit__decimal@@Base+0x264f0>
   2d028:	strb	wzr, [sp]
   2d02c:	ldr	x0, [x20, #40]
   2d030:	mov	x3, sp
   2d034:	mov	w2, #0x8                   	// #8
   2d038:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   2d03c:	str	x0, [x20, #40]
   2d040:	ldrb	w8, [sp]
   2d044:	cbnz	w8, 2d050 <PyInit__decimal@@Base+0x264ec>
   2d048:	ldr	x8, [x28, #1352]
   2d04c:	str	x8, [x20, #32]
   2d050:	ldrb	w9, [x20]
   2d054:	ldr	x10, [x20, #40]
   2d058:	and	w8, w9, #0xf0
   2d05c:	mov	w9, #0xca00                	// #51712
   2d060:	movk	w9, #0x3b9a, lsl #16
   2d064:	mov	w11, #0x1                   	// #1
   2d068:	mov	x12, #0xfffffffffffffffa    	// #-6
   2d06c:	strb	w8, [x20]
   2d070:	udiv	x8, x9, x27
   2d074:	str	x8, [x10]
   2d078:	str	x11, [x20, #24]
   2d07c:	str	x12, [x20, #8]
   2d080:	ldr	x8, [x10]
   2d084:	ldr	x9, [x26, #72]
   2d088:	cmp	x9, x8
   2d08c:	b.ls	2d0b8 <PyInit__decimal@@Base+0x26554>  // b.plast
   2d090:	ldr	x9, [x26, #32]
   2d094:	cmp	x9, x8
   2d098:	b.ls	2d0e0 <PyInit__decimal@@Base+0x2657c>  // b.plast
   2d09c:	ldr	x9, [x26, #16]
   2d0a0:	cmp	x9, x8
   2d0a4:	b.ls	2d138 <PyInit__decimal@@Base+0x265d4>  // b.plast
   2d0a8:	ldr	x9, [x26, #8]
   2d0ac:	cmp	x9, x8
   2d0b0:	mov	w8, #0x1                   	// #1
   2d0b4:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d0b8:	ldr	x9, [x26, #112]
   2d0bc:	cmp	x9, x8
   2d0c0:	b.ls	2d0fc <PyInit__decimal@@Base+0x26598>  // b.plast
   2d0c4:	ldr	x9, [x26, #88]
   2d0c8:	cmp	x9, x8
   2d0cc:	b.ls	2d148 <PyInit__decimal@@Base+0x265e4>  // b.plast
   2d0d0:	ldr	x9, [x26, #80]
   2d0d4:	cmp	x9, x8
   2d0d8:	mov	w8, #0xa                   	// #10
   2d0dc:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d0e0:	ldr	x9, [x26, #48]
   2d0e4:	cmp	x9, x8
   2d0e8:	b.ls	2d164 <PyInit__decimal@@Base+0x26600>  // b.plast
   2d0ec:	ldr	x9, [x26, #40]
   2d0f0:	cmp	x9, x8
   2d0f4:	mov	w8, #0x5                   	// #5
   2d0f8:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d0fc:	ldr	x9, [x26, #144]
   2d100:	cmp	x9, x8
   2d104:	b.ls	2d180 <PyInit__decimal@@Base+0x2661c>  // b.plast
   2d108:	ldr	x9, [x26, #128]
   2d10c:	cmp	x9, x8
   2d110:	b.ls	2d190 <PyInit__decimal@@Base+0x2662c>  // b.plast
   2d114:	ldr	x9, [x26, #120]
   2d118:	cmp	x9, x8
   2d11c:	mov	w8, #0xf                   	// #15
   2d120:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d124:	mov	w1, #0x200                 	// #512
   2d128:	mov	x0, x23
   2d12c:	mov	x2, x19
   2d130:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2d134:	b	2d414 <PyInit__decimal@@Base+0x268b0>
   2d138:	ldr	x9, [x26, #24]
   2d13c:	cmp	x9, x8
   2d140:	mov	w8, #0x3                   	// #3
   2d144:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d148:	ldr	x9, [x26, #104]
   2d14c:	cmp	x9, x8
   2d150:	b.ls	2d444 <PyInit__decimal@@Base+0x268e0>  // b.plast
   2d154:	ldr	x9, [x26, #96]
   2d158:	cmp	x9, x8
   2d15c:	mov	w8, #0xc                   	// #12
   2d160:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d164:	ldr	x9, [x26, #64]
   2d168:	cmp	x9, x8
   2d16c:	b.ls	2d44c <PyInit__decimal@@Base+0x268e8>  // b.plast
   2d170:	ldr	x9, [x26, #56]
   2d174:	cmp	x9, x8
   2d178:	mov	w8, #0x7                   	// #7
   2d17c:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d180:	ldr	x9, [x26, #152]
   2d184:	cmp	x9, x8
   2d188:	mov	w8, #0x13                  	// #19
   2d18c:	b	2d19c <PyInit__decimal@@Base+0x26638>
   2d190:	ldr	x9, [x26, #136]
   2d194:	cmp	x9, x8
   2d198:	mov	w8, #0x11                  	// #17
   2d19c:	cinc	x8, x8, ls  // ls = plast
   2d1a0:	sub	x0, x29, #0x70
   2d1a4:	asr	x26, x23, #1
   2d1a8:	str	x8, [x20, #16]
   2d1ac:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2d1b0:	sub	x0, x29, #0x40
   2d1b4:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2d1b8:	add	x9, x24, #0x3
   2d1bc:	mov	w8, #0x8                   	// #8
   2d1c0:	cmp	x9, #0x4
   2d1c4:	stur	w8, [x29, #-28]
   2d1c8:	b.lt	2d310 <PyInit__decimal@@Base+0x267ac>  // b.tstop
   2d1cc:	mov	w8, #0xffffffff            	// #-1
   2d1d0:	mov	x10, sp
   2d1d4:	add	x11, x9, #0x3
   2d1d8:	add	x9, x9, #0x4
   2d1dc:	cmp	x11, #0x0
   2d1e0:	csel	x9, x9, x11, lt  // lt = tstop
   2d1e4:	add	w8, w8, #0x1
   2d1e8:	asr	x9, x9, #1
   2d1ec:	cmp	x11, #0x7
   2d1f0:	str	x9, [x10, w8, sxtw #3]
   2d1f4:	b.gt	2d1d4 <PyInit__decimal@@Base+0x26670>
   2d1f8:	tbnz	w8, #31, 2d310 <PyInit__decimal@@Base+0x267ac>
   2d1fc:	mov	w27, w8
   2d200:	mov	x28, sp
   2d204:	ldr	x8, [x28, x27, lsl #3]
   2d208:	add	x0, sp, #0x4a0
   2d20c:	sub	x3, x29, #0x70
   2d210:	sub	x4, x29, #0xc
   2d214:	lsl	x8, x8, #1
   2d218:	add	x8, x8, #0x2
   2d21c:	mov	x1, x20
   2d220:	mov	x2, x20
   2d224:	stur	x8, [x29, #-64]
   2d228:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2d22c:	add	x0, sp, #0x4a0
   2d230:	sub	x1, x29, #0x70
   2d234:	sub	x2, x29, #0xc
   2d238:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d23c:	ldr	x8, [x22, #16]
   2d240:	ldur	x9, [x29, #-64]
   2d244:	mov	x23, x22
   2d248:	subs	x24, x8, x9
   2d24c:	b.le	2d274 <PyInit__decimal@@Base+0x26710>
   2d250:	add	x0, sp, #0x270
   2d254:	sub	x3, x29, #0xc
   2d258:	mov	x1, x22
   2d25c:	mov	x2, x24
   2d260:	add	x23, sp, #0x270
   2d264:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2d268:	ldr	x8, [sp, #632]
   2d26c:	add	x8, x8, x24
   2d270:	str	x8, [sp, #632]
   2d274:	add	x0, sp, #0x270
   2d278:	add	x2, sp, #0x4a0
   2d27c:	sub	x3, x29, #0x40
   2d280:	sub	x4, x29, #0xc
   2d284:	mov	x1, x23
   2d288:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2d28c:	add	x0, sp, #0x270
   2d290:	sub	x1, x29, #0x40
   2d294:	sub	x2, x29, #0xc
   2d298:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d29c:	add	x0, sp, #0x270
   2d2a0:	add	x1, sp, #0x200
   2d2a4:	add	x2, sp, #0x270
   2d2a8:	sub	x3, x29, #0x70
   2d2ac:	sub	x4, x29, #0xc
   2d2b0:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   2d2b4:	add	x2, sp, #0x270
   2d2b8:	sub	x3, x29, #0x40
   2d2bc:	sub	x4, x29, #0xc
   2d2c0:	mov	x0, x20
   2d2c4:	mov	x1, x20
   2d2c8:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2d2cc:	sub	x1, x29, #0x40
   2d2d0:	sub	x2, x29, #0xc
   2d2d4:	mov	x0, x20
   2d2d8:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d2dc:	add	x2, sp, #0x238
   2d2e0:	sub	x3, x29, #0x70
   2d2e4:	sub	x4, x29, #0xc
   2d2e8:	mov	x0, x20
   2d2ec:	mov	x1, x20
   2d2f0:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2d2f4:	sub	x1, x29, #0x70
   2d2f8:	sub	x2, x29, #0xc
   2d2fc:	mov	x0, x20
   2d300:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d304:	cmp	x27, #0x0
   2d308:	sub	x27, x27, #0x1
   2d30c:	b.gt	2d204 <PyInit__decimal@@Base+0x266a0>
   2d310:	ldr	x8, [x20, #8]
   2d314:	mov	x0, x20
   2d318:	sub	x23, x8, x26
   2d31c:	str	x23, [x20, #8]
   2d320:	bl	206e8 <PyInit__decimal@@Base+0x19b84>
   2d324:	sub	x8, x25, x23
   2d328:	cmp	x0, x8
   2d32c:	csel	x23, x8, x0, gt
   2d330:	cmp	x23, #0x1
   2d334:	b.lt	2d350 <PyInit__decimal@@Base+0x267ec>  // b.tstop
   2d338:	mov	x0, x20
   2d33c:	mov	x1, x23
   2d340:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   2d344:	ldr	x8, [x20, #8]
   2d348:	add	x8, x8, x23
   2d34c:	str	x8, [x20, #8]
   2d350:	ldrb	w8, [sp, #1184]
   2d354:	cmp	w8, #0x1f
   2d358:	b.hi	2d370 <PyInit__decimal@@Base+0x2680c>  // b.pmore
   2d35c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d360:	ldr	x8, [x8, #1384]
   2d364:	ldr	x0, [sp, #1224]
   2d368:	blr	x8
   2d36c:	ldrb	w8, [sp, #1184]
   2d370:	tbnz	w8, #4, 2d384 <PyInit__decimal@@Base+0x26820>
   2d374:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d378:	ldr	x8, [x8, #1384]
   2d37c:	add	x0, sp, #0x4a0
   2d380:	blr	x8
   2d384:	ldrb	w8, [sp, #624]
   2d388:	cmp	w8, #0x1f
   2d38c:	b.hi	2d3a4 <PyInit__decimal@@Base+0x26840>  // b.pmore
   2d390:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d394:	ldr	x8, [x8, #1384]
   2d398:	ldr	x0, [sp, #664]
   2d39c:	blr	x8
   2d3a0:	ldrb	w8, [sp, #624]
   2d3a4:	tbnz	w8, #4, 2d3b8 <PyInit__decimal@@Base+0x26854>
   2d3a8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d3ac:	ldr	x8, [x8, #1384]
   2d3b0:	add	x0, sp, #0x270
   2d3b4:	blr	x8
   2d3b8:	sub	x8, x29, #0xa0
   2d3bc:	cmp	x22, x8
   2d3c0:	b.eq	2d3f8 <PyInit__decimal@@Base+0x26894>  // b.none
   2d3c4:	ldrb	w8, [x22]
   2d3c8:	cmp	w8, #0x1f
   2d3cc:	b.hi	2d3e4 <PyInit__decimal@@Base+0x26880>  // b.pmore
   2d3d0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d3d4:	ldr	x8, [x8, #1384]
   2d3d8:	ldr	x0, [x22, #40]
   2d3dc:	blr	x8
   2d3e0:	ldrb	w8, [x22]
   2d3e4:	tbnz	w8, #4, 2d3f8 <PyInit__decimal@@Base+0x26894>
   2d3e8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d3ec:	ldr	x8, [x8, #1384]
   2d3f0:	mov	x0, x22
   2d3f4:	blr	x8
   2d3f8:	ldur	w8, [x29, #-12]
   2d3fc:	ldr	w9, [x19]
   2d400:	and	w8, w8, #0x3fe
   2d404:	orr	w8, w9, w8
   2d408:	mov	w9, #0x1040                	// #4160
   2d40c:	orr	w8, w8, w9
   2d410:	str	w8, [x19]
   2d414:	mov	x0, x20
   2d418:	mov	x1, x21
   2d41c:	mov	x2, x19
   2d420:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d424:	add	sp, sp, #0x770
   2d428:	ldp	x20, x19, [sp, #80]
   2d42c:	ldp	x22, x21, [sp, #64]
   2d430:	ldp	x24, x23, [sp, #48]
   2d434:	ldp	x26, x25, [sp, #32]
   2d438:	ldp	x28, x27, [sp, #16]
   2d43c:	ldp	x29, x30, [sp], #96
   2d440:	ret
   2d444:	mov	w8, #0xe                   	// #14
   2d448:	b	2d1a0 <PyInit__decimal@@Base+0x2663c>
   2d44c:	mov	w8, #0x9                   	// #9
   2d450:	b	2d1a0 <PyInit__decimal@@Base+0x2663c>
   2d454:	stp	x29, x30, [sp, #-96]!
   2d458:	str	x28, [sp, #16]
   2d45c:	stp	x26, x25, [sp, #32]
   2d460:	stp	x24, x23, [sp, #48]
   2d464:	stp	x22, x21, [sp, #64]
   2d468:	stp	x20, x19, [sp, #80]
   2d46c:	mov	x29, sp
   2d470:	sub	sp, sp, #0x700
   2d474:	add	x10, sp, #0x4d0
   2d478:	str	x10, [sp, #1224]
   2d47c:	add	x10, sp, #0x2a0
   2d480:	str	x10, [sp, #664]
   2d484:	add	x10, sp, #0x70
   2d488:	str	x10, [sp, #104]
   2d48c:	mov	w10, #0x1                   	// #1
   2d490:	dup	v0.2d, x10
   2d494:	adrp	x10, 31000 <PyInit__decimal@@Base+0x2a49c>
   2d498:	stur	q0, [sp, #32]
   2d49c:	ldr	q0, [x10, #2016]
   2d4a0:	mov	w8, #0x30                  	// #48
   2d4a4:	mov	w9, #0x40                  	// #64
   2d4a8:	strb	w8, [sp, #1184]
   2d4ac:	strb	w8, [sp, #624]
   2d4b0:	strb	w8, [sp, #64]
   2d4b4:	mov	w8, #0x2                   	// #2
   2d4b8:	str	x9, [sp, #1216]
   2d4bc:	str	x9, [sp, #656]
   2d4c0:	stp	xzr, x9, [sp, #88]
   2d4c4:	mov	w9, #0x90                  	// #144
   2d4c8:	add	x10, sp, #0x38
   2d4cc:	str	xzr, [sp, #1192]
   2d4d0:	str	xzr, [sp, #1200]
   2d4d4:	str	xzr, [sp, #632]
   2d4d8:	str	xzr, [sp, #640]
   2d4dc:	stp	xzr, xzr, [sp, #72]
   2d4e0:	str	xzr, [sp, #1208]
   2d4e4:	str	xzr, [sp, #648]
   2d4e8:	stp	x10, x8, [sp, #48]
   2d4ec:	strb	w9, [sp, #8]
   2d4f0:	stur	q0, [sp, #16]
   2d4f4:	ldr	x9, [x1, #8]
   2d4f8:	ldrb	w8, [x1]
   2d4fc:	mov	x19, x3
   2d500:	mov	x20, x2
   2d504:	and	x10, x9, #0xfffffffffffffffe
   2d508:	tst	x9, #0xfffffffffffffffe
   2d50c:	orr	x9, x10, #0x1
   2d510:	mov	x23, x1
   2d514:	csel	x9, x9, x10, lt  // lt = tstop
   2d518:	tst	w8, #0xe
   2d51c:	mov	x21, x0
   2d520:	b.eq	2d558 <PyInit__decimal@@Base+0x269f4>  // b.none
   2d524:	mov	x0, x21
   2d528:	mov	x1, x23
   2d52c:	mov	x2, x20
   2d530:	mov	x3, x19
   2d534:	bl	216f8 <PyInit__decimal@@Base+0x1ab94>
   2d538:	cbnz	w0, 2d8b0 <PyInit__decimal@@Base+0x26d4c>
   2d53c:	ldrb	w8, [x23]
   2d540:	tbnz	w8, #0, 2d5b4 <PyInit__decimal@@Base+0x26a50>
   2d544:	mov	w2, #0x2                   	// #2
   2d548:	mov	x0, x21
   2d54c:	mov	w1, wzr
   2d550:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2d554:	b	2d8b0 <PyInit__decimal@@Base+0x26d4c>
   2d558:	ldr	x10, [x23, #40]
   2d55c:	ldr	x11, [x23, #24]
   2d560:	asr	x22, x9, #1
   2d564:	and	w1, w8, #0x1
   2d568:	add	x10, x10, x11, lsl #3
   2d56c:	ldur	x10, [x10, #-8]
   2d570:	cbz	x10, 2d5c8 <PyInit__decimal@@Base+0x26a64>
   2d574:	cbnz	w1, 2d5b4 <PyInit__decimal@@Base+0x26a50>
   2d578:	sub	x0, x29, #0x30
   2d57c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2d580:	ldr	x24, [x20]
   2d584:	add	x0, sp, #0x4a0
   2d588:	mov	x1, x23
   2d58c:	mov	x2, x19
   2d590:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2d594:	cbz	w0, 2d7d8 <PyInit__decimal@@Base+0x26c74>
   2d598:	str	xzr, [sp, #1192]
   2d59c:	ldrb	w8, [x23, #8]
   2d5a0:	tbnz	w8, #0, 2d5e4 <PyInit__decimal@@Base+0x26a80>
   2d5a4:	ldr	x8, [x23, #16]
   2d5a8:	add	x8, x8, #0x1
   2d5ac:	asr	x8, x8, #1
   2d5b0:	b	2d608 <PyInit__decimal@@Base+0x26aa4>
   2d5b4:	mov	w1, #0x100                 	// #256
   2d5b8:	mov	x0, x21
   2d5bc:	mov	x2, x19
   2d5c0:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2d5c4:	b	2d8b0 <PyInit__decimal@@Base+0x26d4c>
   2d5c8:	mov	x0, x21
   2d5cc:	mov	x2, xzr
   2d5d0:	mov	x3, x22
   2d5d4:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2d5d8:	mov	x0, x21
   2d5dc:	mov	x1, x20
   2d5e0:	b	2d8a8 <PyInit__decimal@@Base+0x26d44>
   2d5e4:	add	x0, sp, #0x4a0
   2d5e8:	add	x1, sp, #0x4a0
   2d5ec:	mov	w2, #0x1                   	// #1
   2d5f0:	mov	x3, x19
   2d5f4:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2d5f8:	cbz	w0, 2d7d8 <PyInit__decimal@@Base+0x26c74>
   2d5fc:	ldr	x8, [x23, #16]
   2d600:	asr	x8, x8, #1
   2d604:	add	x8, x8, #0x1
   2d608:	add	x24, x24, #0x1
   2d60c:	subs	x23, x24, x8
   2d610:	b.mi	2d634 <PyInit__decimal@@Base+0x26ad0>  // b.first
   2d614:	lsl	x2, x23, #1
   2d618:	add	x0, sp, #0x4a0
   2d61c:	add	x1, sp, #0x4a0
   2d620:	mov	x3, x19
   2d624:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2d628:	cbz	w0, 2d7d8 <PyInit__decimal@@Base+0x26c74>
   2d62c:	mov	w26, #0x1                   	// #1
   2d630:	b	2d648 <PyInit__decimal@@Base+0x26ae4>
   2d634:	neg	x1, x23, lsl #1
   2d638:	add	x0, sp, #0x4a0
   2d63c:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   2d640:	cmp	x0, #0x0
   2d644:	cset	w26, eq  // eq = none
   2d648:	adrp	x1, 49000 <PyInit__decimal@@Base+0x4249c>
   2d64c:	add	x1, x1, #0xc88
   2d650:	mov	x0, x21
   2d654:	mov	x2, x24
   2d658:	mov	x3, x19
   2d65c:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2d660:	cbz	w0, 2d7d8 <PyInit__decimal@@Base+0x26c74>
   2d664:	sub	x8, x29, #0x30
   2d668:	add	x24, x8, #0x1c
   2d66c:	add	x0, sp, #0x270
   2d670:	add	x1, sp, #0x40
   2d674:	add	x2, sp, #0x4a0
   2d678:	sub	x4, x29, #0x30
   2d67c:	mov	x3, x21
   2d680:	mov	x5, x24
   2d684:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   2d688:	ldrb	w8, [x21]
   2d68c:	tst	w8, #0xe
   2d690:	b.eq	2d6a4 <PyInit__decimal@@Base+0x26b40>  // b.none
   2d694:	ldur	w8, [x29, #-20]
   2d698:	mov	w9, #0x3be                 	// #958
   2d69c:	and	w1, w8, w9
   2d6a0:	b	2d7dc <PyInit__decimal@@Base+0x26c78>
   2d6a4:	sub	x25, x22, x23
   2d6a8:	ldrb	w8, [sp, #624]
   2d6ac:	tst	w8, #0xe
   2d6b0:	b.ne	2d694 <PyInit__decimal@@Base+0x26b30>  // b.any
   2d6b4:	add	x1, sp, #0x270
   2d6b8:	mov	x0, x21
   2d6bc:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2d6c0:	cmp	w0, #0x1
   2d6c4:	b.lt	2d734 <PyInit__decimal@@Base+0x26bd0>  // b.tstop
   2d6c8:	add	x2, sp, #0x270
   2d6cc:	sub	x3, x29, #0x30
   2d6d0:	mov	x0, x21
   2d6d4:	mov	x1, x21
   2d6d8:	mov	x4, x24
   2d6dc:	bl	2d8d0 <PyInit__decimal@@Base+0x26d6c>
   2d6e0:	ldrb	w8, [x21]
   2d6e4:	tst	w8, #0xe
   2d6e8:	b.ne	2d694 <PyInit__decimal@@Base+0x26b30>  // b.any
   2d6ec:	add	x1, sp, #0x40
   2d6f0:	add	x3, sp, #0x8
   2d6f4:	sub	x4, x29, #0x30
   2d6f8:	mov	x0, x21
   2d6fc:	mov	x2, x21
   2d700:	mov	x5, x24
   2d704:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   2d708:	add	x0, sp, #0x270
   2d70c:	add	x1, sp, #0x40
   2d710:	add	x2, sp, #0x4a0
   2d714:	sub	x4, x29, #0x30
   2d718:	mov	x3, x21
   2d71c:	mov	x5, x24
   2d720:	bl	2603c <PyInit__decimal@@Base+0x1f4d8>
   2d724:	ldrb	w8, [x21]
   2d728:	tst	w8, #0xe
   2d72c:	b.eq	2d6a8 <PyInit__decimal@@Base+0x26b44>  // b.none
   2d730:	b	2d694 <PyInit__decimal@@Base+0x26b30>
   2d734:	cbz	w26, 2d76c <PyInit__decimal@@Base+0x26c08>
   2d738:	add	x0, sp, #0x40
   2d73c:	sub	x3, x29, #0x30
   2d740:	mov	x1, x21
   2d744:	mov	x2, x21
   2d748:	mov	x4, x24
   2d74c:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2d750:	ldrb	w8, [sp, #64]
   2d754:	tst	w8, #0xe
   2d758:	b.ne	2d694 <PyInit__decimal@@Base+0x26b30>  // b.any
   2d75c:	add	x0, sp, #0x40
   2d760:	add	x1, sp, #0x4a0
   2d764:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2d768:	cbz	w0, 2d7ac <PyInit__decimal@@Base+0x26c48>
   2d76c:	ldr	x8, [x21, #40]
   2d770:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2d774:	movk	x10, #0xcccd
   2d778:	mov	w11, #0xa                   	// #10
   2d77c:	ldr	x9, [x8]
   2d780:	umulh	x10, x9, x10
   2d784:	lsr	x10, x10, #3
   2d788:	msub	w10, w10, w11, w9
   2d78c:	cmp	w10, #0x5
   2d790:	b.eq	2d798 <PyInit__decimal@@Base+0x26c34>  // b.none
   2d794:	cbnz	w10, 2d7a0 <PyInit__decimal@@Base+0x26c3c>
   2d798:	add	x9, x9, #0x1
   2d79c:	str	x9, [x8]
   2d7a0:	mov	x22, x25
   2d7a4:	str	x22, [x21, #8]
   2d7a8:	b	2d7e8 <PyInit__decimal@@Base+0x26c84>
   2d7ac:	tbnz	x23, #63, 2d7c0 <PyInit__decimal@@Base+0x26c5c>
   2d7b0:	mov	x0, x21
   2d7b4:	mov	x1, x23
   2d7b8:	bl	227bc <PyInit__decimal@@Base+0x1bc58>
   2d7bc:	b	2d7a4 <PyInit__decimal@@Base+0x26c40>
   2d7c0:	neg	x2, x23
   2d7c4:	mov	x0, x21
   2d7c8:	mov	x1, x21
   2d7cc:	mov	x3, x19
   2d7d0:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2d7d4:	cbnz	w0, 2d7a4 <PyInit__decimal@@Base+0x26c40>
   2d7d8:	mov	w1, #0x200                 	// #512
   2d7dc:	mov	x0, x21
   2d7e0:	mov	x2, x19
   2d7e4:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2d7e8:	ldrb	w8, [sp, #1184]
   2d7ec:	cmp	w8, #0x1f
   2d7f0:	b.hi	2d808 <PyInit__decimal@@Base+0x26ca4>  // b.pmore
   2d7f4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d7f8:	ldr	x8, [x8, #1384]
   2d7fc:	ldr	x0, [sp, #1224]
   2d800:	blr	x8
   2d804:	ldrb	w8, [sp, #1184]
   2d808:	tbnz	w8, #4, 2d81c <PyInit__decimal@@Base+0x26cb8>
   2d80c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d810:	ldr	x8, [x8, #1384]
   2d814:	add	x0, sp, #0x4a0
   2d818:	blr	x8
   2d81c:	ldrb	w8, [sp, #624]
   2d820:	cmp	w8, #0x1f
   2d824:	b.hi	2d83c <PyInit__decimal@@Base+0x26cd8>  // b.pmore
   2d828:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d82c:	ldr	x8, [x8, #1384]
   2d830:	ldr	x0, [sp, #664]
   2d834:	blr	x8
   2d838:	ldrb	w8, [sp, #624]
   2d83c:	tbnz	w8, #4, 2d850 <PyInit__decimal@@Base+0x26cec>
   2d840:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d844:	ldr	x8, [x8, #1384]
   2d848:	add	x0, sp, #0x270
   2d84c:	blr	x8
   2d850:	ldrb	w8, [sp, #64]
   2d854:	cmp	w8, #0x1f
   2d858:	b.hi	2d870 <PyInit__decimal@@Base+0x26d0c>  // b.pmore
   2d85c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d860:	ldr	x8, [x8, #1384]
   2d864:	ldr	x0, [sp, #104]
   2d868:	blr	x8
   2d86c:	ldrb	w8, [sp, #64]
   2d870:	sub	x22, x29, #0x30
   2d874:	tbnz	w8, #4, 2d888 <PyInit__decimal@@Base+0x26d24>
   2d878:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2d87c:	ldr	x8, [x8, #1384]
   2d880:	add	x0, sp, #0x40
   2d884:	blr	x8
   2d888:	ldp	q1, q0, [x20, #16]
   2d88c:	ldr	q2, [x20]
   2d890:	mov	w8, #0x6                   	// #6
   2d894:	sub	x1, x29, #0x30
   2d898:	stp	q1, q0, [x22, #16]
   2d89c:	str	q2, [x22]
   2d8a0:	stur	w8, [x29, #-12]
   2d8a4:	mov	x0, x21
   2d8a8:	mov	x2, x19
   2d8ac:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2d8b0:	add	sp, sp, #0x700
   2d8b4:	ldp	x20, x19, [sp, #80]
   2d8b8:	ldp	x22, x21, [sp, #64]
   2d8bc:	ldp	x24, x23, [sp, #48]
   2d8c0:	ldp	x26, x25, [sp, #32]
   2d8c4:	ldr	x28, [sp, #16]
   2d8c8:	ldp	x29, x30, [sp], #96
   2d8cc:	ret
   2d8d0:	sub	sp, sp, #0x30
   2d8d4:	stp	x29, x30, [sp, #16]
   2d8d8:	stp	x20, x19, [sp, #32]
   2d8dc:	add	x29, sp, #0x10
   2d8e0:	mov	x19, x4
   2d8e4:	sub	x4, x29, #0x4
   2d8e8:	mov	x20, x0
   2d8ec:	stur	wzr, [x29, #-4]
   2d8f0:	bl	24cc8 <PyInit__decimal@@Base+0x1e164>
   2d8f4:	ldur	w8, [x29, #-4]
   2d8f8:	ldr	w9, [x19]
   2d8fc:	mov	w10, #0x1041                	// #4161
   2d900:	tst	w8, w10
   2d904:	orr	w9, w9, w8
   2d908:	str	w9, [x19]
   2d90c:	b.eq	2d920 <PyInit__decimal@@Base+0x26dbc>  // b.none
   2d910:	mov	w1, #0x100                 	// #256
   2d914:	mov	x0, x20
   2d918:	mov	x2, x19
   2d91c:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2d920:	ldp	x20, x19, [sp, #32]
   2d924:	ldp	x29, x30, [sp, #16]
   2d928:	add	sp, sp, #0x30
   2d92c:	ret
   2d930:	str	d8, [sp, #-32]!
   2d934:	stp	x29, x30, [sp, #8]
   2d938:	str	x19, [sp, #24]
   2d93c:	mov	x29, sp
   2d940:	ldrb	w8, [x0]
   2d944:	tst	w8, #0xe
   2d948:	b.ne	2d960 <PyInit__decimal@@Base+0x26dfc>  // b.any
   2d94c:	ldr	x8, [x0, #40]
   2d950:	ldr	x9, [x0, #24]
   2d954:	add	x8, x8, x9, lsl #3
   2d958:	ldur	x8, [x8, #-8]
   2d95c:	cbz	x8, 2d9ac <PyInit__decimal@@Base+0x26e48>
   2d960:	ldp	x9, x8, [x0, #8]
   2d964:	mov	x19, #0xffffffffffffffff    	// #-1
   2d968:	add	x8, x9, x8
   2d96c:	mov	x9, #0xbcfe                	// #48382
   2d970:	movk	x9, #0xa84f, lsl #16
   2d974:	movk	x9, #0xa209, lsl #32
   2d978:	movk	x9, #0x9, lsl #48
   2d97c:	cmp	x8, x9
   2d980:	b.hi	2d9b0 <PyInit__decimal@@Base+0x26e4c>  // b.pmore
   2d984:	ucvtf	d0, w1
   2d988:	ucvtf	d8, x8
   2d98c:	bl	6610 <log10@plt>
   2d990:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
   2d994:	fdiv	d0, d8, d0
   2d998:	fmov	d1, x8
   2d99c:	fcvtzu	x9, d0
   2d9a0:	fcmp	d0, d1
   2d9a4:	csinc	x19, x19, x9, gt
   2d9a8:	b	2d9b0 <PyInit__decimal@@Base+0x26e4c>
   2d9ac:	mov	w19, #0x1                   	// #1
   2d9b0:	mov	x0, x19
   2d9b4:	ldr	x19, [sp, #24]
   2d9b8:	ldp	x29, x30, [sp, #8]
   2d9bc:	ldr	d8, [sp], #32
   2d9c0:	ret
   2d9c4:	stp	x29, x30, [sp, #-96]!
   2d9c8:	stp	x28, x27, [sp, #16]
   2d9cc:	stp	x26, x25, [sp, #32]
   2d9d0:	stp	x24, x23, [sp, #48]
   2d9d4:	stp	x22, x21, [sp, #64]
   2d9d8:	stp	x20, x19, [sp, #80]
   2d9dc:	mov	x29, sp
   2d9e0:	sub	sp, sp, #0x240
   2d9e4:	mov	w8, #0x30                  	// #48
   2d9e8:	strb	w8, [sp]
   2d9ec:	mov	w8, #0x40                  	// #64
   2d9f0:	stp	xzr, x8, [sp, #24]
   2d9f4:	add	x8, sp, #0x30
   2d9f8:	stp	xzr, xzr, [sp, #8]
   2d9fc:	str	x8, [sp, #40]
   2da00:	ldrb	w24, [x3]
   2da04:	mov	x19, x4
   2da08:	tst	w24, #0xe
   2da0c:	b.eq	2da44 <PyInit__decimal@@Base+0x26ee0>  // b.none
   2da10:	ldr	w8, [x19]
   2da14:	mov	x22, #0xffffffffffffffff    	// #-1
   2da18:	orr	w8, w8, #0x100
   2da1c:	str	w8, [x19]
   2da20:	mov	x0, x22
   2da24:	add	sp, sp, #0x240
   2da28:	ldp	x20, x19, [sp, #80]
   2da2c:	ldp	x22, x21, [sp, #64]
   2da30:	ldp	x24, x23, [sp, #48]
   2da34:	ldp	x26, x25, [sp, #32]
   2da38:	ldp	x28, x27, [sp, #16]
   2da3c:	ldp	x29, x30, [sp], #96
   2da40:	ret
   2da44:	mov	x20, x0
   2da48:	mov	x0, x3
   2da4c:	mov	x23, x3
   2da50:	mov	w22, w2
   2da54:	mov	x21, x1
   2da58:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2da5c:	cbz	w0, 2da10 <PyInit__decimal@@Base+0x26eac>
   2da60:	ldr	x0, [x20]
   2da64:	cbz	x0, 2daa8 <PyInit__decimal@@Base+0x26f44>
   2da68:	mov	w26, wzr
   2da6c:	tst	w24, #0xe
   2da70:	b.ne	2da88 <PyInit__decimal@@Base+0x26f24>  // b.any
   2da74:	ldr	x8, [x23, #40]
   2da78:	ldr	x9, [x23, #24]
   2da7c:	add	x8, x8, x9, lsl #3
   2da80:	ldur	x8, [x8, #-8]
   2da84:	cbz	x8, 2dbec <PyInit__decimal@@Base+0x27088>
   2da88:	ldr	x2, [x23, #8]
   2da8c:	tbnz	x2, #63, 2dadc <PyInit__decimal@@Base+0x26f78>
   2da90:	mov	x0, sp
   2da94:	mov	x1, x23
   2da98:	mov	x3, x19
   2da9c:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2daa0:	cbnz	w0, 2daf8 <PyInit__decimal@@Base+0x26f94>
   2daa4:	b	2db8c <PyInit__decimal@@Base+0x27028>
   2daa8:	mov	x0, x23
   2daac:	mov	w1, w22
   2dab0:	bl	2d930 <PyInit__decimal@@Base+0x26dcc>
   2dab4:	cmn	x0, #0x1
   2dab8:	b.eq	2da10 <PyInit__decimal@@Base+0x26eac>  // b.none
   2dabc:	mov	w1, #0x2                   	// #2
   2dac0:	mov	x21, x0
   2dac4:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   2dac8:	str	x0, [x20]
   2dacc:	cbz	x0, 2dba4 <PyInit__decimal@@Base+0x27040>
   2dad0:	ldrb	w24, [x23]
   2dad4:	mov	w26, #0x1                   	// #1
   2dad8:	b	2da6c <PyInit__decimal@@Base+0x26f08>
   2dadc:	neg	x2, x2
   2dae0:	mov	x0, sp
   2dae4:	mov	x1, x23
   2dae8:	mov	x3, x19
   2daec:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2daf0:	cmn	x0, #0x1
   2daf4:	b.eq	2db8c <PyInit__decimal@@Base+0x27028>  // b.none
   2daf8:	ldr	x23, [sp, #40]
   2dafc:	ldr	x25, [sp, #24]
   2db00:	mov	x28, xzr
   2db04:	mov	w24, w22
   2db08:	sub	x27, x23, #0x8
   2db0c:	cmp	x28, x21
   2db10:	add	x22, x28, #0x1
   2db14:	b.cc	2db40 <PyInit__decimal@@Base+0x26fdc>  // b.lo, b.ul, b.last
   2db18:	sturb	wzr, [x29, #-12]
   2db1c:	ldr	x0, [x20]
   2db20:	sub	x3, x29, #0xc
   2db24:	mov	w2, #0x2                   	// #2
   2db28:	mov	x1, x22
   2db2c:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   2db30:	str	x0, [x20]
   2db34:	ldurb	w8, [x29, #-12]
   2db38:	mov	x21, x22
   2db3c:	cbnz	w8, 2db8c <PyInit__decimal@@Base+0x27028>
   2db40:	mov	x0, x23
   2db44:	mov	x1, x23
   2db48:	mov	x2, x25
   2db4c:	mov	x3, x24
   2db50:	bl	1af58 <PyInit__decimal@@Base+0x143f4>
   2db54:	ldr	x8, [x20]
   2db58:	mov	x9, x25
   2db5c:	strh	w0, [x8, x28, lsl #1]
   2db60:	ldr	x8, [x27, x9, lsl #3]
   2db64:	mov	x25, x9
   2db68:	cmp	x9, #0x2
   2db6c:	b.lt	2db7c <PyInit__decimal@@Base+0x27018>  // b.tstop
   2db70:	sub	x9, x25, #0x1
   2db74:	cbz	x8, 2db60 <PyInit__decimal@@Base+0x26ffc>
   2db78:	mov	w8, #0x1                   	// #1
   2db7c:	mov	x28, x22
   2db80:	cbnz	x8, 2db0c <PyInit__decimal@@Base+0x26fa8>
   2db84:	cmn	x22, #0x1
   2db88:	b.ne	2dbb4 <PyInit__decimal@@Base+0x27050>  // b.any
   2db8c:	cbz	w26, 2dba4 <PyInit__decimal@@Base+0x27040>
   2db90:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2db94:	ldr	x8, [x8, #1384]
   2db98:	ldr	x0, [x20]
   2db9c:	blr	x8
   2dba0:	str	xzr, [x20]
   2dba4:	ldr	w8, [x19]
   2dba8:	mov	x22, #0xffffffffffffffff    	// #-1
   2dbac:	orr	w8, w8, #0x200
   2dbb0:	str	w8, [x19]
   2dbb4:	ldrb	w8, [sp]
   2dbb8:	cmp	w8, #0x1f
   2dbbc:	b.hi	2dbd4 <PyInit__decimal@@Base+0x27070>  // b.pmore
   2dbc0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2dbc4:	ldr	x8, [x8, #1384]
   2dbc8:	ldr	x0, [sp, #40]
   2dbcc:	blr	x8
   2dbd0:	ldrb	w8, [sp]
   2dbd4:	tbnz	w8, #4, 2da20 <PyInit__decimal@@Base+0x26ebc>
   2dbd8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2dbdc:	ldr	x8, [x8, #1384]
   2dbe0:	mov	x0, sp
   2dbe4:	blr	x8
   2dbe8:	b	2da20 <PyInit__decimal@@Base+0x26ebc>
   2dbec:	strh	wzr, [x0]
   2dbf0:	mov	w22, #0x1                   	// #1
   2dbf4:	b	2da20 <PyInit__decimal@@Base+0x26ebc>
   2dbf8:	stp	x29, x30, [sp, #-96]!
   2dbfc:	stp	x28, x27, [sp, #16]
   2dc00:	stp	x26, x25, [sp, #32]
   2dc04:	stp	x24, x23, [sp, #48]
   2dc08:	stp	x22, x21, [sp, #64]
   2dc0c:	stp	x20, x19, [sp, #80]
   2dc10:	mov	x29, sp
   2dc14:	sub	sp, sp, #0x240
   2dc18:	mov	w8, #0x30                  	// #48
   2dc1c:	strb	w8, [sp]
   2dc20:	mov	w8, #0x40                  	// #64
   2dc24:	stp	xzr, x8, [sp, #24]
   2dc28:	add	x8, sp, #0x30
   2dc2c:	stp	xzr, xzr, [sp, #8]
   2dc30:	str	x8, [sp, #40]
   2dc34:	ldrb	w24, [x3]
   2dc38:	mov	x19, x4
   2dc3c:	tst	w24, #0xe
   2dc40:	b.eq	2dc78 <PyInit__decimal@@Base+0x27114>  // b.none
   2dc44:	ldr	w8, [x19]
   2dc48:	mov	x22, #0xffffffffffffffff    	// #-1
   2dc4c:	orr	w8, w8, #0x100
   2dc50:	str	w8, [x19]
   2dc54:	mov	x0, x22
   2dc58:	add	sp, sp, #0x240
   2dc5c:	ldp	x20, x19, [sp, #80]
   2dc60:	ldp	x22, x21, [sp, #64]
   2dc64:	ldp	x24, x23, [sp, #48]
   2dc68:	ldp	x26, x25, [sp, #32]
   2dc6c:	ldp	x28, x27, [sp, #16]
   2dc70:	ldp	x29, x30, [sp], #96
   2dc74:	ret
   2dc78:	mov	x20, x0
   2dc7c:	mov	x0, x3
   2dc80:	mov	x23, x3
   2dc84:	mov	w22, w2
   2dc88:	mov	x21, x1
   2dc8c:	bl	20788 <PyInit__decimal@@Base+0x19c24>
   2dc90:	cbz	w0, 2dc44 <PyInit__decimal@@Base+0x270e0>
   2dc94:	ldr	x0, [x20]
   2dc98:	cbz	x0, 2dcdc <PyInit__decimal@@Base+0x27178>
   2dc9c:	mov	w26, wzr
   2dca0:	tst	w24, #0xe
   2dca4:	b.ne	2dcbc <PyInit__decimal@@Base+0x27158>  // b.any
   2dca8:	ldr	x8, [x23, #40]
   2dcac:	ldr	x9, [x23, #24]
   2dcb0:	add	x8, x8, x9, lsl #3
   2dcb4:	ldur	x8, [x8, #-8]
   2dcb8:	cbz	x8, 2de2c <PyInit__decimal@@Base+0x272c8>
   2dcbc:	ldr	x2, [x23, #8]
   2dcc0:	tbnz	x2, #63, 2dd10 <PyInit__decimal@@Base+0x271ac>
   2dcc4:	mov	x0, sp
   2dcc8:	mov	x1, x23
   2dccc:	mov	x3, x19
   2dcd0:	bl	22690 <PyInit__decimal@@Base+0x1bb2c>
   2dcd4:	cbnz	w0, 2dd2c <PyInit__decimal@@Base+0x271c8>
   2dcd8:	b	2ddcc <PyInit__decimal@@Base+0x27268>
   2dcdc:	mov	x0, x23
   2dce0:	mov	w1, w22
   2dce4:	bl	2d930 <PyInit__decimal@@Base+0x26dcc>
   2dce8:	cmn	x0, #0x1
   2dcec:	b.eq	2dc44 <PyInit__decimal@@Base+0x270e0>  // b.none
   2dcf0:	mov	w1, #0x4                   	// #4
   2dcf4:	mov	x21, x0
   2dcf8:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   2dcfc:	str	x0, [x20]
   2dd00:	cbz	x0, 2dde4 <PyInit__decimal@@Base+0x27280>
   2dd04:	ldrb	w24, [x23]
   2dd08:	mov	w26, #0x1                   	// #1
   2dd0c:	b	2dca0 <PyInit__decimal@@Base+0x2713c>
   2dd10:	neg	x2, x2
   2dd14:	mov	x0, sp
   2dd18:	mov	x1, x23
   2dd1c:	mov	x3, x19
   2dd20:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2dd24:	cmn	x0, #0x1
   2dd28:	b.eq	2ddcc <PyInit__decimal@@Base+0x27268>  // b.none
   2dd2c:	ldr	x23, [sp, #40]
   2dd30:	ldr	x25, [sp, #24]
   2dd34:	mov	x28, xzr
   2dd38:	mov	w24, w22
   2dd3c:	sub	x27, x23, #0x8
   2dd40:	cmp	x28, x21
   2dd44:	add	x22, x28, #0x1
   2dd48:	b.cc	2dd74 <PyInit__decimal@@Base+0x27210>  // b.lo, b.ul, b.last
   2dd4c:	sturb	wzr, [x29, #-12]
   2dd50:	ldr	x0, [x20]
   2dd54:	sub	x3, x29, #0xc
   2dd58:	mov	w2, #0x4                   	// #4
   2dd5c:	mov	x1, x22
   2dd60:	bl	1f700 <PyInit__decimal@@Base+0x18b9c>
   2dd64:	str	x0, [x20]
   2dd68:	ldurb	w8, [x29, #-12]
   2dd6c:	mov	x21, x22
   2dd70:	cbnz	w8, 2ddcc <PyInit__decimal@@Base+0x27268>
   2dd74:	mov	x4, #0x89e80000            	// #2313682944
   2dd78:	movk	x4, #0x2304, lsl #32
   2dd7c:	movk	x4, #0x8ac7, lsl #48
   2dd80:	mov	x0, x23
   2dd84:	mov	x1, x23
   2dd88:	mov	x2, x25
   2dd8c:	mov	x3, x24
   2dd90:	bl	1bc5c <PyInit__decimal@@Base+0x150f8>
   2dd94:	ldr	x8, [x20]
   2dd98:	mov	x9, x25
   2dd9c:	str	w0, [x8, x28, lsl #2]
   2dda0:	ldr	x8, [x27, x9, lsl #3]
   2dda4:	mov	x25, x9
   2dda8:	cmp	x9, #0x2
   2ddac:	b.lt	2ddbc <PyInit__decimal@@Base+0x27258>  // b.tstop
   2ddb0:	sub	x9, x25, #0x1
   2ddb4:	cbz	x8, 2dda0 <PyInit__decimal@@Base+0x2723c>
   2ddb8:	mov	w8, #0x1                   	// #1
   2ddbc:	mov	x28, x22
   2ddc0:	cbnz	x8, 2dd40 <PyInit__decimal@@Base+0x271dc>
   2ddc4:	cmn	x22, #0x1
   2ddc8:	b.ne	2ddf4 <PyInit__decimal@@Base+0x27290>  // b.any
   2ddcc:	cbz	w26, 2dde4 <PyInit__decimal@@Base+0x27280>
   2ddd0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2ddd4:	ldr	x8, [x8, #1384]
   2ddd8:	ldr	x0, [x20]
   2dddc:	blr	x8
   2dde0:	str	xzr, [x20]
   2dde4:	ldr	w8, [x19]
   2dde8:	mov	x22, #0xffffffffffffffff    	// #-1
   2ddec:	orr	w8, w8, #0x200
   2ddf0:	str	w8, [x19]
   2ddf4:	ldrb	w8, [sp]
   2ddf8:	cmp	w8, #0x1f
   2ddfc:	b.hi	2de14 <PyInit__decimal@@Base+0x272b0>  // b.pmore
   2de00:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2de04:	ldr	x8, [x8, #1384]
   2de08:	ldr	x0, [sp, #40]
   2de0c:	blr	x8
   2de10:	ldrb	w8, [sp]
   2de14:	tbnz	w8, #4, 2dc54 <PyInit__decimal@@Base+0x270f0>
   2de18:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2de1c:	ldr	x8, [x8, #1384]
   2de20:	mov	x0, sp
   2de24:	blr	x8
   2de28:	b	2dc54 <PyInit__decimal@@Base+0x270f0>
   2de2c:	str	wzr, [x0]
   2de30:	mov	w22, #0x1                   	// #1
   2de34:	b	2dc54 <PyInit__decimal@@Base+0x270f0>
   2de38:	str	d8, [sp, #-112]!
   2de3c:	stp	x29, x30, [sp, #16]
   2de40:	stp	x28, x27, [sp, #32]
   2de44:	stp	x26, x25, [sp, #48]
   2de48:	stp	x24, x23, [sp, #64]
   2de4c:	stp	x22, x21, [sp, #80]
   2de50:	stp	x20, x19, [sp, #96]
   2de54:	mov	x29, sp
   2de58:	mov	x8, #0x20000000000000      	// #9007199254740992
   2de5c:	mov	x19, x6
   2de60:	cmp	x2, x8
   2de64:	mov	x21, x0
   2de68:	b.hi	2df28 <PyInit__decimal@@Base+0x273c4>  // b.pmore
   2de6c:	ucvtf	d0, w4
   2de70:	mov	x20, x5
   2de74:	mov	w24, w4
   2de78:	mov	w23, w3
   2de7c:	mov	x25, x2
   2de80:	mov	x26, x1
   2de84:	ucvtf	d8, x2
   2de88:	bl	6610 <log10@plt>
   2de8c:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   2de90:	ldr	d1, [x8, #2928]
   2de94:	fmov	d2, #1.900000000000000000e+01
   2de98:	fdiv	d0, d0, d2
   2de9c:	fmul	d0, d0, d8
   2dea0:	fcmp	d0, d1
   2dea4:	b.ge	2df28 <PyInit__decimal@@Base+0x273c4>  // b.tcont
   2dea8:	fcvtzs	x8, d0
   2deac:	add	x28, x8, #0x1
   2deb0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2deb4:	cmp	x28, x8
   2deb8:	b.eq	2df28 <PyInit__decimal@@Base+0x273c4>  // b.none
   2debc:	mov	w1, #0x8                   	// #8
   2dec0:	mov	x0, x25
   2dec4:	bl	1f6bc <PyInit__decimal@@Base+0x18b58>
   2dec8:	cbz	x0, 2df54 <PyInit__decimal@@Base+0x273f0>
   2decc:	mov	x22, x0
   2ded0:	str	x20, [x29, #8]
   2ded4:	cbz	x25, 2def0 <PyInit__decimal@@Base+0x2738c>
   2ded8:	mov	x8, x22
   2dedc:	mov	x9, x25
   2dee0:	ldrh	w10, [x26], #2
   2dee4:	subs	x9, x9, #0x1
   2dee8:	str	x10, [x8], #8
   2deec:	b.ne	2dee0 <PyInit__decimal@@Base+0x2737c>  // b.any
   2def0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2def4:	ldr	x9, [x8, #1352]
   2def8:	ldr	x8, [x21, #32]
   2defc:	cmp	x9, x28
   2df00:	csel	x1, x28, x9, lt  // lt = tstop
   2df04:	cmp	x1, x8
   2df08:	b.eq	2df74 <PyInit__decimal@@Base+0x27410>  // b.none
   2df0c:	ldrb	w9, [x21]
   2df10:	tbnz	w9, #5, 2df5c <PyInit__decimal@@Base+0x273f8>
   2df14:	mov	x0, x21
   2df18:	mov	x2, x19
   2df1c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2df20:	cbnz	w0, 2df74 <PyInit__decimal@@Base+0x27410>
   2df24:	b	2e274 <PyInit__decimal@@Base+0x27710>
   2df28:	mov	w1, #0x100                 	// #256
   2df2c:	mov	x0, x21
   2df30:	mov	x2, x19
   2df34:	ldp	x20, x19, [sp, #96]
   2df38:	ldp	x22, x21, [sp, #80]
   2df3c:	ldp	x24, x23, [sp, #64]
   2df40:	ldp	x26, x25, [sp, #48]
   2df44:	ldp	x28, x27, [sp, #32]
   2df48:	ldp	x29, x30, [sp, #16]
   2df4c:	ldr	d8, [sp], #112
   2df50:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2df54:	mov	w1, #0x200                 	// #512
   2df58:	b	2df2c <PyInit__decimal@@Base+0x273c8>
   2df5c:	cmp	x1, x8
   2df60:	b.le	2df74 <PyInit__decimal@@Base+0x27410>
   2df64:	mov	x0, x21
   2df68:	mov	x2, x19
   2df6c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2df70:	cbz	w0, 2e274 <PyInit__decimal@@Base+0x27710>
   2df74:	subs	x8, x25, #0x1
   2df78:	ldr	x8, [x22, x8, lsl #3]
   2df7c:	ldr	x0, [x21, #40]
   2df80:	str	x8, [x0]
   2df84:	b.eq	2e0d0 <PyInit__decimal@@Base+0x2756c>  // b.none
   2df88:	sub	x20, x25, #0x2
   2df8c:	mov	w25, w24
   2df90:	mov	w24, #0x1                   	// #1
   2df94:	mov	x1, x0
   2df98:	mov	x2, x24
   2df9c:	mov	x3, x25
   2dfa0:	bl	1bb40 <PyInit__decimal@@Base+0x14fdc>
   2dfa4:	cbz	x0, 2dff0 <PyInit__decimal@@Base+0x2748c>
   2dfa8:	mov	x27, x0
   2dfac:	cmp	x24, x28
   2dfb0:	add	x26, x24, #0x1
   2dfb4:	b.lt	2e01c <PyInit__decimal@@Base+0x274b8>  // b.tstop
   2dfb8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2dfbc:	ldr	x9, [x8, #1352]
   2dfc0:	ldr	x8, [x21, #32]
   2dfc4:	mov	x28, x26
   2dfc8:	cmp	x9, x26
   2dfcc:	csel	x1, x26, x9, lt  // lt = tstop
   2dfd0:	cmp	x1, x8
   2dfd4:	b.eq	2e01c <PyInit__decimal@@Base+0x274b8>  // b.none
   2dfd8:	ldrb	w9, [x21]
   2dfdc:	tbnz	w9, #5, 2dffc <PyInit__decimal@@Base+0x27498>
   2dfe0:	mov	x0, x21
   2dfe4:	mov	x2, x19
   2dfe8:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2dfec:	b	2e014 <PyInit__decimal@@Base+0x274b0>
   2dff0:	ldr	x0, [x21, #40]
   2dff4:	mov	x26, x24
   2dff8:	b	2e024 <PyInit__decimal@@Base+0x274c0>
   2dffc:	cmp	x1, x8
   2e000:	mov	x28, x26
   2e004:	b.le	2e01c <PyInit__decimal@@Base+0x274b8>
   2e008:	mov	x0, x21
   2e00c:	mov	x2, x19
   2e010:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e014:	mov	x28, x26
   2e018:	cbz	w0, 2e274 <PyInit__decimal@@Base+0x27710>
   2e01c:	ldr	x0, [x21, #40]
   2e020:	str	x27, [x0, x24, lsl #3]
   2e024:	ldr	x2, [x22, x20, lsl #3]
   2e028:	mov	x1, x26
   2e02c:	bl	1abf4 <PyInit__decimal@@Base+0x14090>
   2e030:	cbz	x0, 2e07c <PyInit__decimal@@Base+0x27518>
   2e034:	mov	x27, x0
   2e038:	cmp	x26, x28
   2e03c:	add	x24, x26, #0x1
   2e040:	b.lt	2e0a8 <PyInit__decimal@@Base+0x27544>  // b.tstop
   2e044:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e048:	ldr	x9, [x8, #1352]
   2e04c:	ldr	x8, [x21, #32]
   2e050:	mov	x28, x24
   2e054:	cmp	x9, x24
   2e058:	csel	x1, x24, x9, lt  // lt = tstop
   2e05c:	cmp	x1, x8
   2e060:	b.eq	2e0a8 <PyInit__decimal@@Base+0x27544>  // b.none
   2e064:	ldrb	w9, [x21]
   2e068:	tbnz	w9, #5, 2e088 <PyInit__decimal@@Base+0x27524>
   2e06c:	mov	x0, x21
   2e070:	mov	x2, x19
   2e074:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e078:	b	2e0a0 <PyInit__decimal@@Base+0x2753c>
   2e07c:	mov	x24, x26
   2e080:	cbnz	x20, 2e0b4 <PyInit__decimal@@Base+0x27550>
   2e084:	b	2e0c0 <PyInit__decimal@@Base+0x2755c>
   2e088:	cmp	x1, x8
   2e08c:	mov	x28, x24
   2e090:	b.le	2e0a8 <PyInit__decimal@@Base+0x27544>
   2e094:	mov	x0, x21
   2e098:	mov	x2, x19
   2e09c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e0a0:	mov	x28, x24
   2e0a4:	cbz	w0, 2e274 <PyInit__decimal@@Base+0x27710>
   2e0a8:	ldr	x8, [x21, #40]
   2e0ac:	str	x27, [x8, x26, lsl #3]
   2e0b0:	cbz	x20, 2e0c0 <PyInit__decimal@@Base+0x2755c>
   2e0b4:	ldr	x0, [x21, #40]
   2e0b8:	sub	x20, x20, #0x1
   2e0bc:	b	2df94 <PyInit__decimal@@Base+0x27430>
   2e0c0:	cmn	x24, #0x1
   2e0c4:	b.eq	2e274 <PyInit__decimal@@Base+0x27710>  // b.none
   2e0c8:	ldr	x0, [x21, #40]
   2e0cc:	b	2e0d4 <PyInit__decimal@@Base+0x27570>
   2e0d0:	mov	w24, #0x1                   	// #1
   2e0d4:	ldrb	w8, [x21]
   2e0d8:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2e0dc:	str	xzr, [x21, #8]
   2e0e0:	str	x24, [x21, #24]
   2e0e4:	and	w8, w8, #0xfffffff0
   2e0e8:	orr	w8, w8, w23
   2e0ec:	add	x9, x0, x24, lsl #3
   2e0f0:	add	x10, x10, #0xe70
   2e0f4:	strb	w8, [x21]
   2e0f8:	ldur	x9, [x9, #-8]
   2e0fc:	ldr	x11, [x10, #72]
   2e100:	cmp	x11, x9
   2e104:	b.ls	2e130 <PyInit__decimal@@Base+0x275cc>  // b.plast
   2e108:	ldr	x11, [x10, #32]
   2e10c:	cmp	x11, x9
   2e110:	b.ls	2e158 <PyInit__decimal@@Base+0x275f4>  // b.plast
   2e114:	ldr	x11, [x10, #16]
   2e118:	cmp	x11, x9
   2e11c:	b.ls	2e19c <PyInit__decimal@@Base+0x27638>  // b.plast
   2e120:	ldr	x10, [x10, #8]
   2e124:	cmp	x10, x9
   2e128:	mov	w9, #0x1                   	// #1
   2e12c:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e130:	ldr	x11, [x10, #112]
   2e134:	cmp	x11, x9
   2e138:	b.ls	2e174 <PyInit__decimal@@Base+0x27610>  // b.plast
   2e13c:	ldr	x11, [x10, #88]
   2e140:	cmp	x11, x9
   2e144:	b.ls	2e1ac <PyInit__decimal@@Base+0x27648>  // b.plast
   2e148:	ldr	x10, [x10, #80]
   2e14c:	cmp	x10, x9
   2e150:	mov	w9, #0xa                   	// #10
   2e154:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e158:	ldr	x11, [x10, #48]
   2e15c:	cmp	x11, x9
   2e160:	b.ls	2e1d0 <PyInit__decimal@@Base+0x2766c>  // b.plast
   2e164:	ldr	x10, [x10, #40]
   2e168:	cmp	x10, x9
   2e16c:	mov	w9, #0x5                   	// #5
   2e170:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e174:	ldr	x11, [x10, #144]
   2e178:	cmp	x11, x9
   2e17c:	b.ls	2e1ec <PyInit__decimal@@Base+0x27688>  // b.plast
   2e180:	ldr	x11, [x10, #128]
   2e184:	cmp	x11, x9
   2e188:	b.ls	2e1fc <PyInit__decimal@@Base+0x27698>  // b.plast
   2e18c:	ldr	x10, [x10, #120]
   2e190:	cmp	x10, x9
   2e194:	mov	w9, #0xf                   	// #15
   2e198:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e19c:	ldr	x10, [x10, #24]
   2e1a0:	cmp	x10, x9
   2e1a4:	mov	w9, #0x3                   	// #3
   2e1a8:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e1ac:	ldr	x11, [x10, #104]
   2e1b0:	ldr	x20, [x29, #8]
   2e1b4:	cmp	x11, x9
   2e1b8:	b.ls	2e2a0 <PyInit__decimal@@Base+0x2773c>  // b.plast
   2e1bc:	ldr	x10, [x10, #96]
   2e1c0:	cmp	x10, x9
   2e1c4:	mov	w9, #0xc                   	// #12
   2e1c8:	cinc	x9, x9, ls  // ls = plast
   2e1cc:	b	2e210 <PyInit__decimal@@Base+0x276ac>
   2e1d0:	ldr	x11, [x10, #64]
   2e1d4:	cmp	x11, x9
   2e1d8:	b.ls	2e2a8 <PyInit__decimal@@Base+0x27744>  // b.plast
   2e1dc:	ldr	x10, [x10, #56]
   2e1e0:	cmp	x10, x9
   2e1e4:	mov	w9, #0x7                   	// #7
   2e1e8:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e1ec:	ldr	x10, [x10, #152]
   2e1f0:	cmp	x10, x9
   2e1f4:	mov	w9, #0x13                  	// #19
   2e1f8:	b	2e208 <PyInit__decimal@@Base+0x276a4>
   2e1fc:	ldr	x10, [x10, #136]
   2e200:	cmp	x10, x9
   2e204:	mov	w9, #0x11                  	// #17
   2e208:	cinc	x9, x9, ls  // ls = plast
   2e20c:	ldr	x20, [x29, #8]
   2e210:	mov	w10, #0x13                  	// #19
   2e214:	madd	x9, x24, x10, x9
   2e218:	sub	x9, x9, #0x13
   2e21c:	str	x9, [x21, #16]
   2e220:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e224:	ldr	x10, [x9, #1352]
   2e228:	ldr	x9, [x21, #32]
   2e22c:	cmp	x10, x24
   2e230:	csel	x1, x24, x10, lt  // lt = tstop
   2e234:	cmp	x1, x9
   2e238:	b.eq	2e264 <PyInit__decimal@@Base+0x27700>  // b.none
   2e23c:	tbnz	w8, #5, 2e250 <PyInit__decimal@@Base+0x276ec>
   2e240:	mov	x0, x21
   2e244:	mov	x2, x19
   2e248:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e24c:	b	2e264 <PyInit__decimal@@Base+0x27700>
   2e250:	cmp	x1, x9
   2e254:	b.le	2e264 <PyInit__decimal@@Base+0x27700>
   2e258:	mov	x0, x21
   2e25c:	mov	x2, x19
   2e260:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e264:	mov	x0, x21
   2e268:	mov	x1, x20
   2e26c:	mov	x2, x19
   2e270:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2e274:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e278:	ldr	x1, [x8, #1384]
   2e27c:	mov	x0, x22
   2e280:	ldp	x20, x19, [sp, #96]
   2e284:	ldp	x22, x21, [sp, #80]
   2e288:	ldp	x24, x23, [sp, #64]
   2e28c:	ldp	x26, x25, [sp, #48]
   2e290:	ldp	x28, x27, [sp, #32]
   2e294:	ldp	x29, x30, [sp, #16]
   2e298:	ldr	d8, [sp], #112
   2e29c:	br	x1
   2e2a0:	mov	w9, #0xe                   	// #14
   2e2a4:	b	2e210 <PyInit__decimal@@Base+0x276ac>
   2e2a8:	mov	w9, #0x9                   	// #9
   2e2ac:	b	2e20c <PyInit__decimal@@Base+0x276a8>
   2e2b0:	str	d8, [sp, #-112]!
   2e2b4:	stp	x29, x30, [sp, #16]
   2e2b8:	stp	x28, x27, [sp, #32]
   2e2bc:	stp	x26, x25, [sp, #48]
   2e2c0:	stp	x24, x23, [sp, #64]
   2e2c4:	stp	x22, x21, [sp, #80]
   2e2c8:	stp	x20, x19, [sp, #96]
   2e2cc:	mov	x29, sp
   2e2d0:	mov	x8, #0x20000000000000      	// #9007199254740992
   2e2d4:	mov	x19, x6
   2e2d8:	cmp	x2, x8
   2e2dc:	mov	x21, x0
   2e2e0:	b.ls	2e310 <PyInit__decimal@@Base+0x277ac>  // b.plast
   2e2e4:	mov	x0, x21
   2e2e8:	mov	x2, x19
   2e2ec:	ldp	x20, x19, [sp, #96]
   2e2f0:	ldp	x22, x21, [sp, #80]
   2e2f4:	ldp	x24, x23, [sp, #64]
   2e2f8:	ldp	x26, x25, [sp, #48]
   2e2fc:	ldp	x28, x27, [sp, #32]
   2e300:	ldp	x29, x30, [sp, #16]
   2e304:	mov	w1, #0x100                 	// #256
   2e308:	ldr	d8, [sp], #112
   2e30c:	b	208fc <PyInit__decimal@@Base+0x19d98>
   2e310:	ucvtf	d0, w4
   2e314:	mov	x20, x5
   2e318:	mov	w25, w4
   2e31c:	mov	w23, w3
   2e320:	mov	x22, x2
   2e324:	mov	x24, x1
   2e328:	ucvtf	d8, x2
   2e32c:	bl	6610 <log10@plt>
   2e330:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   2e334:	ldr	d1, [x8, #2928]
   2e338:	fmov	d2, #1.900000000000000000e+01
   2e33c:	fdiv	d0, d0, d2
   2e340:	fmul	d0, d0, d8
   2e344:	fcmp	d0, d1
   2e348:	b.ge	2e2e4 <PyInit__decimal@@Base+0x27780>  // b.tcont
   2e34c:	fcvtzs	x8, d0
   2e350:	add	x28, x8, #0x1
   2e354:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2e358:	cmp	x28, x8
   2e35c:	b.eq	2e2e4 <PyInit__decimal@@Base+0x27780>  // b.none
   2e360:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e364:	ldr	x9, [x8, #1352]
   2e368:	ldr	x8, [x21, #32]
   2e36c:	str	x20, [x29, #8]
   2e370:	cmp	x9, x28
   2e374:	csel	x1, x28, x9, lt  // lt = tstop
   2e378:	cmp	x1, x8
   2e37c:	b.eq	2e3b4 <PyInit__decimal@@Base+0x27850>  // b.none
   2e380:	ldrb	w9, [x21]
   2e384:	tbnz	w9, #5, 2e39c <PyInit__decimal@@Base+0x27838>
   2e388:	mov	x0, x21
   2e38c:	mov	x2, x19
   2e390:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e394:	cbnz	w0, 2e3b4 <PyInit__decimal@@Base+0x27850>
   2e398:	b	2e580 <PyInit__decimal@@Base+0x27a1c>
   2e39c:	cmp	x1, x8
   2e3a0:	b.le	2e3b4 <PyInit__decimal@@Base+0x27850>
   2e3a4:	mov	x0, x21
   2e3a8:	mov	x2, x19
   2e3ac:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e3b0:	cbz	w0, 2e580 <PyInit__decimal@@Base+0x27a1c>
   2e3b4:	subs	x8, x22, #0x1
   2e3b8:	ldr	w8, [x24, x8, lsl #2]
   2e3bc:	ldr	x0, [x21, #40]
   2e3c0:	str	x8, [x0]
   2e3c4:	b.eq	2e524 <PyInit__decimal@@Base+0x279c0>  // b.none
   2e3c8:	mov	w25, w25
   2e3cc:	sub	x20, x22, #0x2
   2e3d0:	mov	w22, #0x1                   	// #1
   2e3d4:	mov	x4, #0x89e80000            	// #2313682944
   2e3d8:	movk	x4, #0x2304, lsl #32
   2e3dc:	movk	x4, #0x8ac7, lsl #48
   2e3e0:	mov	x1, x0
   2e3e4:	mov	x2, x22
   2e3e8:	mov	x3, x25
   2e3ec:	bl	1bbdc <PyInit__decimal@@Base+0x15078>
   2e3f0:	cbz	x0, 2e43c <PyInit__decimal@@Base+0x278d8>
   2e3f4:	mov	x27, x0
   2e3f8:	cmp	x22, x28
   2e3fc:	add	x26, x22, #0x1
   2e400:	b.lt	2e468 <PyInit__decimal@@Base+0x27904>  // b.tstop
   2e404:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e408:	ldr	x9, [x8, #1352]
   2e40c:	ldr	x8, [x21, #32]
   2e410:	mov	x28, x26
   2e414:	cmp	x9, x26
   2e418:	csel	x1, x26, x9, lt  // lt = tstop
   2e41c:	cmp	x1, x8
   2e420:	b.eq	2e468 <PyInit__decimal@@Base+0x27904>  // b.none
   2e424:	ldrb	w9, [x21]
   2e428:	tbnz	w9, #5, 2e448 <PyInit__decimal@@Base+0x278e4>
   2e42c:	mov	x0, x21
   2e430:	mov	x2, x19
   2e434:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e438:	b	2e460 <PyInit__decimal@@Base+0x278fc>
   2e43c:	ldr	x0, [x21, #40]
   2e440:	mov	x26, x22
   2e444:	b	2e470 <PyInit__decimal@@Base+0x2790c>
   2e448:	cmp	x1, x8
   2e44c:	mov	x28, x26
   2e450:	b.le	2e468 <PyInit__decimal@@Base+0x27904>
   2e454:	mov	x0, x21
   2e458:	mov	x2, x19
   2e45c:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e460:	mov	x28, x26
   2e464:	cbz	w0, 2e580 <PyInit__decimal@@Base+0x27a1c>
   2e468:	ldr	x0, [x21, #40]
   2e46c:	str	x27, [x0, x22, lsl #3]
   2e470:	ldr	w2, [x24, x20, lsl #2]
   2e474:	mov	x3, #0x89e80000            	// #2313682944
   2e478:	movk	x3, #0x2304, lsl #32
   2e47c:	movk	x3, #0x8ac7, lsl #48
   2e480:	mov	x1, x26
   2e484:	bl	1bad8 <PyInit__decimal@@Base+0x14f74>
   2e488:	cbz	x0, 2e4d4 <PyInit__decimal@@Base+0x27970>
   2e48c:	mov	x27, x0
   2e490:	cmp	x26, x28
   2e494:	add	x22, x26, #0x1
   2e498:	b.lt	2e500 <PyInit__decimal@@Base+0x2799c>  // b.tstop
   2e49c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e4a0:	ldr	x9, [x8, #1352]
   2e4a4:	ldr	x8, [x21, #32]
   2e4a8:	mov	x28, x22
   2e4ac:	cmp	x9, x22
   2e4b0:	csel	x1, x22, x9, lt  // lt = tstop
   2e4b4:	cmp	x1, x8
   2e4b8:	b.eq	2e500 <PyInit__decimal@@Base+0x2799c>  // b.none
   2e4bc:	ldrb	w9, [x21]
   2e4c0:	tbnz	w9, #5, 2e4e0 <PyInit__decimal@@Base+0x2797c>
   2e4c4:	mov	x0, x21
   2e4c8:	mov	x2, x19
   2e4cc:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e4d0:	b	2e4f8 <PyInit__decimal@@Base+0x27994>
   2e4d4:	mov	x22, x26
   2e4d8:	cbnz	x20, 2e50c <PyInit__decimal@@Base+0x279a8>
   2e4dc:	b	2e518 <PyInit__decimal@@Base+0x279b4>
   2e4e0:	cmp	x1, x8
   2e4e4:	mov	x28, x22
   2e4e8:	b.le	2e500 <PyInit__decimal@@Base+0x2799c>
   2e4ec:	mov	x0, x21
   2e4f0:	mov	x2, x19
   2e4f4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e4f8:	mov	x28, x22
   2e4fc:	cbz	w0, 2e580 <PyInit__decimal@@Base+0x27a1c>
   2e500:	ldr	x8, [x21, #40]
   2e504:	str	x27, [x8, x26, lsl #3]
   2e508:	cbz	x20, 2e518 <PyInit__decimal@@Base+0x279b4>
   2e50c:	ldr	x0, [x21, #40]
   2e510:	sub	x20, x20, #0x1
   2e514:	b	2e3d4 <PyInit__decimal@@Base+0x27870>
   2e518:	cmn	x22, #0x1
   2e51c:	b.eq	2e580 <PyInit__decimal@@Base+0x27a1c>  // b.none
   2e520:	ldr	x0, [x21, #40]
   2e524:	ldrb	w8, [x21]
   2e528:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   2e52c:	str	xzr, [x21, #8]
   2e530:	str	x22, [x21, #24]
   2e534:	and	w8, w8, #0xfffffff0
   2e538:	orr	w8, w8, w23
   2e53c:	add	x9, x0, x22, lsl #3
   2e540:	add	x10, x10, #0xe70
   2e544:	strb	w8, [x21]
   2e548:	ldur	x9, [x9, #-8]
   2e54c:	ldr	x11, [x10, #72]
   2e550:	cmp	x11, x9
   2e554:	b.ls	2e5a0 <PyInit__decimal@@Base+0x27a3c>  // b.plast
   2e558:	ldr	x11, [x10, #32]
   2e55c:	cmp	x11, x9
   2e560:	b.ls	2e5c8 <PyInit__decimal@@Base+0x27a64>  // b.plast
   2e564:	ldr	x11, [x10, #16]
   2e568:	cmp	x11, x9
   2e56c:	b.ls	2e610 <PyInit__decimal@@Base+0x27aac>  // b.plast
   2e570:	ldr	x10, [x10, #8]
   2e574:	cmp	x10, x9
   2e578:	mov	w9, #0x1                   	// #1
   2e57c:	b	2e66c <PyInit__decimal@@Base+0x27b08>
   2e580:	ldp	x20, x19, [sp, #96]
   2e584:	ldp	x22, x21, [sp, #80]
   2e588:	ldp	x24, x23, [sp, #64]
   2e58c:	ldp	x26, x25, [sp, #48]
   2e590:	ldp	x28, x27, [sp, #32]
   2e594:	ldp	x29, x30, [sp, #16]
   2e598:	ldr	d8, [sp], #112
   2e59c:	ret
   2e5a0:	ldr	x11, [x10, #112]
   2e5a4:	cmp	x11, x9
   2e5a8:	b.ls	2e5e4 <PyInit__decimal@@Base+0x27a80>  // b.plast
   2e5ac:	ldr	x11, [x10, #88]
   2e5b0:	cmp	x11, x9
   2e5b4:	b.ls	2e620 <PyInit__decimal@@Base+0x27abc>  // b.plast
   2e5b8:	ldr	x10, [x10, #80]
   2e5bc:	cmp	x10, x9
   2e5c0:	mov	w9, #0xa                   	// #10
   2e5c4:	b	2e66c <PyInit__decimal@@Base+0x27b08>
   2e5c8:	ldr	x11, [x10, #48]
   2e5cc:	cmp	x11, x9
   2e5d0:	b.ls	2e640 <PyInit__decimal@@Base+0x27adc>  // b.plast
   2e5d4:	ldr	x10, [x10, #40]
   2e5d8:	cmp	x10, x9
   2e5dc:	mov	w9, #0x5                   	// #5
   2e5e0:	b	2e66c <PyInit__decimal@@Base+0x27b08>
   2e5e4:	ldr	x11, [x10, #144]
   2e5e8:	cmp	x11, x9
   2e5ec:	b.ls	2e660 <PyInit__decimal@@Base+0x27afc>  // b.plast
   2e5f0:	ldr	x11, [x10, #128]
   2e5f4:	ldr	x20, [x29, #8]
   2e5f8:	cmp	x11, x9
   2e5fc:	b.ls	2e6f4 <PyInit__decimal@@Base+0x27b90>  // b.plast
   2e600:	ldr	x10, [x10, #120]
   2e604:	cmp	x10, x9
   2e608:	mov	w9, #0xf                   	// #15
   2e60c:	b	2e670 <PyInit__decimal@@Base+0x27b0c>
   2e610:	ldr	x10, [x10, #24]
   2e614:	cmp	x10, x9
   2e618:	mov	w9, #0x3                   	// #3
   2e61c:	b	2e66c <PyInit__decimal@@Base+0x27b08>
   2e620:	ldr	x11, [x10, #104]
   2e624:	ldr	x20, [x29, #8]
   2e628:	cmp	x11, x9
   2e62c:	b.ls	2e704 <PyInit__decimal@@Base+0x27ba0>  // b.plast
   2e630:	ldr	x10, [x10, #96]
   2e634:	cmp	x10, x9
   2e638:	mov	w9, #0xc                   	// #12
   2e63c:	b	2e670 <PyInit__decimal@@Base+0x27b0c>
   2e640:	ldr	x11, [x10, #64]
   2e644:	ldr	x20, [x29, #8]
   2e648:	cmp	x11, x9
   2e64c:	b.ls	2e70c <PyInit__decimal@@Base+0x27ba8>  // b.plast
   2e650:	ldr	x10, [x10, #56]
   2e654:	cmp	x10, x9
   2e658:	mov	w9, #0x7                   	// #7
   2e65c:	b	2e670 <PyInit__decimal@@Base+0x27b0c>
   2e660:	ldr	x10, [x10, #152]
   2e664:	cmp	x10, x9
   2e668:	mov	w9, #0x13                  	// #19
   2e66c:	ldr	x20, [x29, #8]
   2e670:	cinc	x9, x9, ls  // ls = plast
   2e674:	mov	w10, #0x13                  	// #19
   2e678:	madd	x9, x22, x10, x9
   2e67c:	sub	x9, x9, #0x13
   2e680:	str	x9, [x21, #16]
   2e684:	adrp	x9, 4c000 <PyInit__decimal@@Base+0x4549c>
   2e688:	ldr	x10, [x9, #1352]
   2e68c:	ldr	x9, [x21, #32]
   2e690:	cmp	x10, x22
   2e694:	csel	x1, x22, x10, lt  // lt = tstop
   2e698:	cmp	x1, x9
   2e69c:	b.eq	2e6c8 <PyInit__decimal@@Base+0x27b64>  // b.none
   2e6a0:	tbnz	w8, #5, 2e6b4 <PyInit__decimal@@Base+0x27b50>
   2e6a4:	mov	x0, x21
   2e6a8:	mov	x2, x19
   2e6ac:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2e6b0:	b	2e6c8 <PyInit__decimal@@Base+0x27b64>
   2e6b4:	cmp	x1, x9
   2e6b8:	b.le	2e6c8 <PyInit__decimal@@Base+0x27b64>
   2e6bc:	mov	x0, x21
   2e6c0:	mov	x2, x19
   2e6c4:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2e6c8:	mov	x0, x21
   2e6cc:	mov	x1, x20
   2e6d0:	mov	x2, x19
   2e6d4:	ldp	x20, x19, [sp, #96]
   2e6d8:	ldp	x22, x21, [sp, #80]
   2e6dc:	ldp	x24, x23, [sp, #64]
   2e6e0:	ldp	x26, x25, [sp, #48]
   2e6e4:	ldp	x28, x27, [sp, #32]
   2e6e8:	ldp	x29, x30, [sp, #16]
   2e6ec:	ldr	d8, [sp], #112
   2e6f0:	b	20b64 <PyInit__decimal@@Base+0x1a000>
   2e6f4:	ldr	x10, [x10, #136]
   2e6f8:	cmp	x10, x9
   2e6fc:	mov	w9, #0x11                  	// #17
   2e700:	b	2e670 <PyInit__decimal@@Base+0x27b0c>
   2e704:	mov	w9, #0xe                   	// #14
   2e708:	b	2e674 <PyInit__decimal@@Base+0x27b10>
   2e70c:	mov	w9, #0x9                   	// #9
   2e710:	b	2e674 <PyInit__decimal@@Base+0x27b10>
   2e714:	stp	x29, x30, [sp, #-16]!
   2e718:	mov	x29, sp
   2e71c:	ldr	x8, [x0, #8]
   2e720:	ldr	x9, [x1, #8]
   2e724:	subs	x4, x8, x9
   2e728:	b.ne	2e760 <PyInit__decimal@@Base+0x27bfc>  // b.any
   2e72c:	ldr	x8, [x0, #24]
   2e730:	sub	x8, x8, #0x1
   2e734:	tbnz	x8, #63, 2e78c <PyInit__decimal@@Base+0x27c28>
   2e738:	ldr	x9, [x0, #40]
   2e73c:	ldr	x10, [x1, #40]
   2e740:	ldr	x9, [x9, x8, lsl #3]
   2e744:	ldr	x10, [x10, x8, lsl #3]
   2e748:	sub	x8, x8, #0x1
   2e74c:	cmp	x9, x10
   2e750:	b.eq	2e734 <PyInit__decimal@@Base+0x27bd0>  // b.none
   2e754:	mov	w8, #0xffffffff            	// #-1
   2e758:	cneg	w0, w8, cs  // cs = hs, nlast
   2e75c:	b	2e790 <PyInit__decimal@@Base+0x27c2c>
   2e760:	cmp	x4, #0x1
   2e764:	b.lt	2e798 <PyInit__decimal@@Base+0x27c34>  // b.tstop
   2e768:	ldr	x8, [x1, #40]
   2e76c:	ldr	x9, [x0, #40]
   2e770:	ldr	x2, [x1, #24]
   2e774:	ldr	x3, [x0, #24]
   2e778:	mov	x0, x8
   2e77c:	mov	x1, x9
   2e780:	bl	2e7bc <PyInit__decimal@@Base+0x27c58>
   2e784:	neg	w0, w0
   2e788:	b	2e790 <PyInit__decimal@@Base+0x27c2c>
   2e78c:	mov	w0, wzr
   2e790:	ldp	x29, x30, [sp], #16
   2e794:	ret
   2e798:	ldr	x8, [x0, #40]
   2e79c:	ldr	x9, [x1, #40]
   2e7a0:	ldr	x2, [x0, #24]
   2e7a4:	ldr	x3, [x1, #24]
   2e7a8:	neg	x4, x4
   2e7ac:	mov	x0, x8
   2e7b0:	mov	x1, x9
   2e7b4:	ldp	x29, x30, [sp], #16
   2e7b8:	b	2e7bc <PyInit__decimal@@Base+0x27c58>
   2e7bc:	sub	sp, sp, #0x70
   2e7c0:	stp	x29, x30, [sp, #32]
   2e7c4:	stp	x26, x25, [sp, #48]
   2e7c8:	stp	x24, x23, [sp, #64]
   2e7cc:	stp	x22, x21, [sp, #80]
   2e7d0:	stp	x20, x19, [sp, #96]
   2e7d4:	add	x29, sp, #0x20
   2e7d8:	mov	x8, #0x435f                	// #17247
   2e7dc:	movk	x8, #0xd79, lsl #16
   2e7e0:	movk	x8, #0x35e5, lsl #32
   2e7e4:	movk	x8, #0xd794, lsl #48
   2e7e8:	umulh	x8, x4, x8
   2e7ec:	lsr	x24, x8, #4
   2e7f0:	mov	x8, #0xffffffffffffffed    	// #-19
   2e7f4:	mov	x20, x3
   2e7f8:	mov	x22, x1
   2e7fc:	madd	x25, x24, x8, x4
   2e800:	mov	x19, x0
   2e804:	cbz	x25, 2e8dc <PyInit__decimal@@Base+0x27d78>
   2e808:	add	x8, x22, x20, lsl #3
   2e80c:	mov	x23, x2
   2e810:	ldur	x2, [x8, #-8]
   2e814:	mov	w8, #0x13                  	// #19
   2e818:	sub	x21, x8, x25
   2e81c:	add	x0, sp, #0x8
   2e820:	add	x1, sp, #0x10
   2e824:	mov	x3, x21
   2e828:	sub	x26, x23, #0x1
   2e82c:	bl	2e934 <PyInit__decimal@@Base+0x27dd0>
   2e830:	ldr	x8, [sp, #8]
   2e834:	cbz	x8, 2e848 <PyInit__decimal@@Base+0x27ce4>
   2e838:	ldr	x9, [x19, x26, lsl #3]
   2e83c:	cmp	x9, x8
   2e840:	b.ne	2e910 <PyInit__decimal@@Base+0x27dac>  // b.any
   2e844:	sub	x26, x23, #0x2
   2e848:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   2e84c:	add	x8, x8, #0xe70
   2e850:	ldr	x23, [x8, x25, lsl #3]
   2e854:	ldr	x25, [sp, #16]
   2e858:	sub	x8, x20, #0x2
   2e85c:	cmn	x8, #0x1
   2e860:	b.eq	2e8ac <PyInit__decimal@@Base+0x27d48>  // b.none
   2e864:	add	x26, x19, x26, lsl #3
   2e868:	sub	x22, x22, #0x10
   2e86c:	ldr	x2, [x22, x20, lsl #3]
   2e870:	add	x0, sp, #0x8
   2e874:	sub	x1, x29, #0x8
   2e878:	mov	x3, x21
   2e87c:	bl	2e934 <PyInit__decimal@@Base+0x27dd0>
   2e880:	ldr	x8, [sp, #8]
   2e884:	ldr	x9, [x26]
   2e888:	madd	x8, x25, x23, x8
   2e88c:	cmp	x9, x8
   2e890:	b.ne	2e90c <PyInit__decimal@@Base+0x27da8>  // b.any
   2e894:	ldur	x25, [x29, #-8]
   2e898:	sub	x20, x20, #0x1
   2e89c:	cmp	x20, #0x1
   2e8a0:	sub	x26, x26, #0x8
   2e8a4:	b.ne	2e86c <PyInit__decimal@@Base+0x27d08>  // b.any
   2e8a8:	str	x25, [sp, #16]
   2e8ac:	ldr	x8, [x19, x24, lsl #3]
   2e8b0:	mul	x9, x25, x23
   2e8b4:	cmp	x8, x9
   2e8b8:	b.ne	2e910 <PyInit__decimal@@Base+0x27dac>  // b.any
   2e8bc:	sub	x8, x19, #0x8
   2e8c0:	subs	x9, x24, #0x1
   2e8c4:	b.lt	2e904 <PyInit__decimal@@Base+0x27da0>  // b.tstop
   2e8c8:	ldr	x10, [x8, x24, lsl #3]
   2e8cc:	mov	x24, x9
   2e8d0:	cbz	x10, 2e8c0 <PyInit__decimal@@Base+0x27d5c>
   2e8d4:	mov	w0, #0x1                   	// #1
   2e8d8:	b	2e918 <PyInit__decimal@@Base+0x27db4>
   2e8dc:	add	x8, x19, x24, lsl #3
   2e8e0:	sub	x8, x8, #0x8
   2e8e4:	sub	x9, x22, #0x8
   2e8e8:	cbz	x20, 2e8bc <PyInit__decimal@@Base+0x27d58>
   2e8ec:	ldr	x10, [x8, x20, lsl #3]
   2e8f0:	ldr	x11, [x9, x20, lsl #3]
   2e8f4:	sub	x20, x20, #0x1
   2e8f8:	cmp	x10, x11
   2e8fc:	b.eq	2e8e8 <PyInit__decimal@@Base+0x27d84>  // b.none
   2e900:	b	2e910 <PyInit__decimal@@Base+0x27dac>
   2e904:	mov	w0, wzr
   2e908:	b	2e918 <PyInit__decimal@@Base+0x27db4>
   2e90c:	str	x25, [sp, #16]
   2e910:	mov	w8, #0xffffffff            	// #-1
   2e914:	cneg	w0, w8, cs  // cs = hs, nlast
   2e918:	ldp	x20, x19, [sp, #96]
   2e91c:	ldp	x22, x21, [sp, #80]
   2e920:	ldp	x24, x23, [sp, #64]
   2e924:	ldp	x26, x25, [sp, #48]
   2e928:	ldp	x29, x30, [sp, #32]
   2e92c:	add	sp, sp, #0x70
   2e930:	ret
   2e934:	cmp	x3, #0x9
   2e938:	b.hi	2e96c <PyInit__decimal@@Base+0x27e08>  // b.pmore
   2e93c:	cmp	x3, #0x4
   2e940:	b.hi	2e9c0 <PyInit__decimal@@Base+0x27e5c>  // b.pmore
   2e944:	b.hi	2ec9c <PyInit__decimal@@Base+0x28138>  // b.pmore
   2e948:	adrp	x8, 38000 <PyInit__decimal@@Base+0x3149c>
   2e94c:	add	x8, x8, #0x208
   2e950:	adr	x9, 2e960 <PyInit__decimal@@Base+0x27dfc>
   2e954:	ldrb	w10, [x8, x3]
   2e958:	add	x9, x9, x10, lsl #2
   2e95c:	br	x9
   2e960:	str	x2, [x0]
   2e964:	str	xzr, [x1]
   2e968:	ret
   2e96c:	cmp	x3, #0xe
   2e970:	b.hi	2ea0c <PyInit__decimal@@Base+0x27ea8>  // b.pmore
   2e974:	sub	x8, x3, #0xa
   2e978:	cmp	x8, #0x4
   2e97c:	b.hi	2ec9c <PyInit__decimal@@Base+0x28138>  // b.pmore
   2e980:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2e984:	add	x9, x9, #0x1fe
   2e988:	adr	x10, 2e998 <PyInit__decimal@@Base+0x27e34>
   2e98c:	ldrb	w11, [x9, x8]
   2e990:	add	x10, x10, x11, lsl #2
   2e994:	br	x10
   2e998:	mov	x8, #0xd5bf                	// #54719
   2e99c:	movk	x8, #0xbded, lsl #16
   2e9a0:	movk	x8, #0xfece, lsl #32
   2e9a4:	movk	x8, #0xdbe6, lsl #48
   2e9a8:	mov	x9, #0xffffffffffff1c00    	// #-58368
   2e9ac:	movk	x9, #0xabf4, lsl #16
   2e9b0:	umulh	x8, x2, x8
   2e9b4:	movk	x9, #0xfffd, lsl #32
   2e9b8:	lsr	x8, x8, #33
   2e9bc:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2e9c0:	sub	x8, x3, #0x5
   2e9c4:	cmp	x8, #0x4
   2e9c8:	b.hi	2ec9c <PyInit__decimal@@Base+0x28138>  // b.pmore
   2e9cc:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2e9d0:	add	x9, x9, #0x203
   2e9d4:	adr	x10, 2e9e4 <PyInit__decimal@@Base+0x27e80>
   2e9d8:	ldrb	w11, [x9, x8]
   2e9dc:	add	x10, x10, x11, lsl #2
   2e9e0:	br	x10
   2e9e4:	mov	x9, #0x7843                	// #30787
   2e9e8:	movk	x9, #0x71b4, lsl #16
   2e9ec:	movk	x9, #0x5ac4, lsl #32
   2e9f0:	lsr	x8, x2, #5
   2e9f4:	movk	x9, #0xa7c, lsl #48
   2e9f8:	mov	x10, #0xffffffffffff7960    	// #-34464
   2e9fc:	umulh	x8, x8, x9
   2ea00:	movk	x10, #0xfffe, lsl #16
   2ea04:	lsr	x8, x8, #7
   2ea08:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2ea0c:	sub	x8, x3, #0xf
   2ea10:	cmp	x8, #0x4
   2ea14:	b.hi	2ec9c <PyInit__decimal@@Base+0x28138>  // b.pmore
   2ea18:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2ea1c:	add	x9, x9, #0x1f9
   2ea20:	adr	x10, 2ea30 <PyInit__decimal@@Base+0x27ecc>
   2ea24:	ldrb	w11, [x9, x8]
   2ea28:	add	x10, x10, x11, lsl #2
   2ea2c:	br	x10
   2ea30:	mov	x9, #0xeac3                	// #60099
   2ea34:	movk	x9, #0xf3dc, lsl #16
   2ea38:	movk	x9, #0x4075, lsl #32
   2ea3c:	mov	x10, #0x8000                	// #32768
   2ea40:	lsr	x8, x2, #15
   2ea44:	movk	x9, #0x2, lsl #48
   2ea48:	movk	x10, #0x5b39, lsl #16
   2ea4c:	movk	x10, #0x7281, lsl #32
   2ea50:	umulh	x8, x8, x9
   2ea54:	movk	x10, #0xfffc, lsl #48
   2ea58:	lsr	x8, x8, #20
   2ea5c:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2ea60:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   2ea64:	movk	x8, #0xcccd
   2ea68:	umulh	x8, x2, x8
   2ea6c:	mov	x9, #0xfffffffffffffff6    	// #-10
   2ea70:	lsr	x8, x8, #3
   2ea74:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2ea78:	mov	x9, #0xf5c3                	// #62915
   2ea7c:	movk	x9, #0x5c28, lsl #16
   2ea80:	movk	x9, #0xc28f, lsl #32
   2ea84:	lsr	x8, x2, #2
   2ea88:	movk	x9, #0x28f5, lsl #48
   2ea8c:	umulh	x8, x8, x9
   2ea90:	mov	x10, #0xffffffffffffff9c    	// #-100
   2ea94:	lsr	x8, x8, #2
   2ea98:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2ea9c:	mov	x9, #0xf7cf                	// #63439
   2eaa0:	movk	x9, #0xe353, lsl #16
   2eaa4:	movk	x9, #0x9ba5, lsl #32
   2eaa8:	lsr	x8, x2, #3
   2eaac:	movk	x9, #0x20c4, lsl #48
   2eab0:	umulh	x8, x8, x9
   2eab4:	mov	x10, #0xfffffffffffffc18    	// #-1000
   2eab8:	lsr	x8, x8, #4
   2eabc:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2eac0:	mov	x8, #0x594b                	// #22859
   2eac4:	movk	x8, #0x3886, lsl #16
   2eac8:	movk	x8, #0xc5d6, lsl #32
   2eacc:	movk	x8, #0x346d, lsl #48
   2ead0:	umulh	x8, x2, x8
   2ead4:	mov	x9, #0xffffffffffffd8f0    	// #-10000
   2ead8:	lsr	x8, x8, #11
   2eadc:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eae0:	mov	x8, #0xaaff                	// #43775
   2eae4:	movk	x8, #0xcb24, lsl #16
   2eae8:	movk	x8, #0xff0b, lsl #32
   2eaec:	movk	x8, #0xafeb, lsl #48
   2eaf0:	mov	x9, #0xffffffffffff1800    	// #-59392
   2eaf4:	movk	x9, #0xb789, lsl #16
   2eaf8:	umulh	x8, x2, x8
   2eafc:	movk	x9, #0xffe8, lsl #32
   2eb00:	lsr	x8, x8, #36
   2eb04:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eb08:	mov	x8, #0x2233                	// #8755
   2eb0c:	movk	x8, #0x5bd4, lsl #16
   2eb10:	movk	x8, #0x3302, lsl #32
   2eb14:	movk	x8, #0x232f, lsl #48
   2eb18:	mov	x9, #0xfffffffffffff000    	// #-4096
   2eb1c:	movk	x9, #0x2b5a, lsl #16
   2eb20:	umulh	x8, x2, x8
   2eb24:	movk	x9, #0xff17, lsl #32
   2eb28:	lsr	x8, x8, #37
   2eb2c:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eb30:	mov	x8, #0x385                 	// #901
   2eb34:	movk	x8, #0x92ed, lsl #16
   2eb38:	movk	x8, #0x84d0, lsl #32
   2eb3c:	movk	x8, #0x384b, lsl #48
   2eb40:	mov	x9, #0xffffffffffff6000    	// #-40960
   2eb44:	movk	x9, #0xb18d, lsl #16
   2eb48:	umulh	x8, x2, x8
   2eb4c:	movk	x9, #0xf6e7, lsl #32
   2eb50:	lsr	x8, x8, #41
   2eb54:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eb58:	mov	x8, #0xcd81                	// #52609
   2eb5c:	movk	x8, #0x5095, lsl #16
   2eb60:	movk	x8, #0x4dc3, lsl #32
   2eb64:	movk	x8, #0xb42, lsl #48
   2eb68:	mov	x9, #0xffffffffffffc000    	// #-16384
   2eb6c:	movk	x9, #0xef85, lsl #16
   2eb70:	umulh	x8, x2, x8
   2eb74:	movk	x9, #0xa50c, lsl #32
   2eb78:	lsr	x8, x8, #42
   2eb7c:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eb80:	mov	x8, #0x34db                	// #13531
   2eb84:	movk	x8, #0xd7b6, lsl #16
   2eb88:	movk	x8, #0xde82, lsl #32
   2eb8c:	movk	x8, #0x431b, lsl #48
   2eb90:	mov	x9, #0xffffffffffffbdc0    	// #-16960
   2eb94:	umulh	x8, x2, x8
   2eb98:	movk	x9, #0xfff0, lsl #16
   2eb9c:	lsr	x8, x8, #18
   2eba0:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2eba4:	mov	x8, #0x42bd                	// #17085
   2eba8:	movk	x8, #0xe57a, lsl #16
   2ebac:	movk	x8, #0x94d5, lsl #32
   2ebb0:	movk	x8, #0xd6bf, lsl #48
   2ebb4:	mov	x9, #0xffffffffffff6980    	// #-38528
   2ebb8:	umulh	x8, x2, x8
   2ebbc:	movk	x9, #0xff67, lsl #16
   2ebc0:	lsr	x8, x8, #23
   2ebc4:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2ebc8:	mov	x8, #0xcefd                	// #52989
   2ebcc:	movk	x8, #0x8461, lsl #16
   2ebd0:	movk	x8, #0x7711, lsl #32
   2ebd4:	movk	x8, #0xabcc, lsl #48
   2ebd8:	mov	x9, #0xffffffffffff1f00    	// #-57600
   2ebdc:	umulh	x8, x2, x8
   2ebe0:	movk	x9, #0xfa0a, lsl #16
   2ebe4:	lsr	x8, x8, #26
   2ebe8:	b	2ec38 <PyInit__decimal@@Base+0x280d4>
   2ebec:	mov	x9, #0x5a53                	// #23123
   2ebf0:	movk	x9, #0xa09b, lsl #16
   2ebf4:	movk	x9, #0xb82f, lsl #32
   2ebf8:	lsr	x8, x2, #9
   2ebfc:	movk	x9, #0x44, lsl #48
   2ec00:	mov	x10, #0xffffffffffff3600    	// #-51712
   2ec04:	umulh	x8, x8, x9
   2ec08:	movk	x10, #0xc465, lsl #16
   2ec0c:	lsr	x8, x8, #11
   2ec10:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2ec14:	mov	x8, #0x7857                	// #30807
   2ec18:	movk	x8, #0xb113, lsl #16
   2ec1c:	movk	x8, #0x652f, lsl #32
   2ec20:	movk	x8, #0x39a5, lsl #48
   2ec24:	mov	x9, #0x903f0000            	// #2420047872
   2ec28:	movk	x9, #0x790d, lsl #32
   2ec2c:	umulh	x8, x2, x8
   2ec30:	movk	x9, #0xffdc, lsl #48
   2ec34:	lsr	x8, x8, #51
   2ec38:	str	x8, [x0]
   2ec3c:	madd	x8, x8, x9, x2
   2ec40:	b	2ec98 <PyInit__decimal@@Base+0x28134>
   2ec44:	mov	x9, #0x1b53                	// #6995
   2ec48:	movk	x9, #0xd519, lsl #16
   2ec4c:	lsr	x8, x2, #17
   2ec50:	movk	x9, #0x5c3b, lsl #32
   2ec54:	mov	x10, #0xa2760000            	// #2725642240
   2ec58:	movk	x10, #0xba87, lsl #32
   2ec5c:	umulh	x8, x8, x9
   2ec60:	movk	x10, #0xfe9c, lsl #48
   2ec64:	lsr	x8, x8, #22
   2ec68:	b	2ec90 <PyInit__decimal@@Base+0x2812c>
   2ec6c:	mov	x9, #0x490f                	// #18703
   2ec70:	movk	x9, #0x7747, lsl #16
   2ec74:	lsr	x8, x2, #18
   2ec78:	movk	x9, #0x49c9, lsl #32
   2ec7c:	mov	x10, #0x589c0000            	// #1486618624
   2ec80:	movk	x10, #0x494c, lsl #32
   2ec84:	umulh	x8, x8, x9
   2ec88:	movk	x10, #0xf21f, lsl #48
   2ec8c:	lsr	x8, x8, #24
   2ec90:	str	x8, [x0]
   2ec94:	madd	x8, x8, x10, x2
   2ec98:	str	x8, [x1]
   2ec9c:	ret
   2eca0:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   2eca4:	movk	x8, #0x2304, lsl #32
   2eca8:	movk	x8, #0x8ac7, lsl #48
   2ecac:	cmp	x2, x8
   2ecb0:	csinc	x8, xzr, x8, ls  // ls = plast
   2ecb4:	cset	w9, hi  // hi = pmore
   2ecb8:	sub	x8, x2, x8
   2ecbc:	str	x9, [x0]
   2ecc0:	b	2ec98 <PyInit__decimal@@Base+0x28134>
   2ecc4:	stp	x29, x30, [sp, #-96]!
   2ecc8:	stp	x28, x27, [sp, #16]
   2eccc:	stp	x26, x25, [sp, #32]
   2ecd0:	stp	x24, x23, [sp, #48]
   2ecd4:	stp	x22, x21, [sp, #64]
   2ecd8:	stp	x20, x19, [sp, #80]
   2ecdc:	mov	x29, sp
   2ece0:	sub	sp, sp, #0x7e0
   2ece4:	ldr	q0, [x2, #16]
   2ece8:	ldrb	w8, [x2]
   2ecec:	mov	x22, x4
   2ecf0:	mov	x24, x3
   2ecf4:	stur	q0, [sp, #88]
   2ecf8:	ldr	q0, [x2, #32]
   2ecfc:	and	w8, w8, #0x1e
   2ed00:	orr	w8, w8, #0x40
   2ed04:	mov	x25, x2
   2ed08:	stur	q0, [sp, #104]
   2ed0c:	ldr	q0, [x3, #16]
   2ed10:	ldrb	w9, [x3]
   2ed14:	mov	x19, x1
   2ed18:	mov	x20, x0
   2ed1c:	stur	q0, [sp, #40]
   2ed20:	ldr	q0, [x3, #32]
   2ed24:	and	w9, w9, #0x1e
   2ed28:	cmp	x0, x2
   2ed2c:	strb	w8, [sp, #72]
   2ed30:	orr	w8, w9, #0x40
   2ed34:	str	xzr, [sp, #80]
   2ed38:	strb	w8, [sp, #24]
   2ed3c:	stur	q0, [sp, #56]
   2ed40:	str	xzr, [sp, #32]
   2ed44:	b.eq	2ed54 <PyInit__decimal@@Base+0x281f0>  // b.none
   2ed48:	cmp	x20, x24
   2ed4c:	mov	x23, x20
   2ed50:	b.ne	2ed60 <PyInit__decimal@@Base+0x281fc>  // b.any
   2ed54:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
   2ed58:	mov	x23, x0
   2ed5c:	cbz	x0, 2eee0 <PyInit__decimal@@Base+0x2837c>
   2ed60:	cmp	x19, x25
   2ed64:	b.eq	2ed74 <PyInit__decimal@@Base+0x28210>  // b.none
   2ed68:	cmp	x19, x24
   2ed6c:	mov	x21, x19
   2ed70:	b.ne	2ed80 <PyInit__decimal@@Base+0x2821c>  // b.any
   2ed74:	bl	1f810 <PyInit__decimal@@Base+0x18cac>
   2ed78:	mov	x21, x0
   2ed7c:	cbz	x0, 2ef68 <PyInit__decimal@@Base+0x28404>
   2ed80:	add	x0, sp, #0x78
   2ed84:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2ed88:	ldr	x10, [x25, #16]
   2ed8c:	ldr	x9, [x24, #16]
   2ed90:	mov	x8, #0xffffffffa763ffff    	// #-1486618625
   2ed94:	movk	x8, #0xb6b3, lsl #32
   2ed98:	movk	x8, #0xde0, lsl #48
   2ed9c:	sub	x9, x10, x9
   2eda0:	add	x9, x9, #0x4
   2eda4:	cmp	x10, x8
   2eda8:	str	x9, [sp, #120]
   2edac:	b.gt	2eed4 <PyInit__decimal@@Base+0x28370>
   2edb0:	cmp	x9, x8
   2edb4:	b.gt	2eed4 <PyInit__decimal@@Base+0x28370>
   2edb8:	ldur	q0, [sp, #48]
   2edbc:	mov	w10, #0x30                  	// #48
   2edc0:	mov	w11, #0x40                  	// #64
   2edc4:	add	x12, sp, #0x540
   2edc8:	strb	w10, [sp, #1296]
   2edcc:	strb	w10, [sp, #736]
   2edd0:	mov	w10, #0x1                   	// #1
   2edd4:	add	x8, sp, #0x2a8
   2edd8:	mov	w14, #0x2                   	// #2
   2eddc:	str	x12, [sp, #1336]
   2ede0:	mov	w12, #0x90                  	// #144
   2ede4:	str	x11, [sp, #1328]
   2ede8:	str	x11, [sp, #768]
   2edec:	adrp	x11, 31000 <PyInit__decimal@@Base+0x2a49c>
   2edf0:	adrp	x27, 37000 <PyInit__decimal@@Base+0x3049c>
   2edf4:	dup	v1.2d, x10
   2edf8:	sub	x17, x29, #0xa0
   2edfc:	ldp	x15, x28, [sp, #32]
   2ee00:	str	x14, [sp, #728]
   2ee04:	mov	w14, #0x50                  	// #80
   2ee08:	strb	w12, [sp, #680]
   2ee0c:	add	x27, x27, #0xe70
   2ee10:	mov	x10, #0x435f                	// #17247
   2ee14:	stur	q1, [x8, #24]
   2ee18:	ldr	q1, [x11, #2016]
   2ee1c:	ldr	x9, [sp, #64]
   2ee20:	movk	x10, #0xd79, lsl #16
   2ee24:	stur	q0, [x17, #24]
   2ee28:	sturb	w14, [x29, #-160]
   2ee2c:	ldr	x14, [x27, #136]
   2ee30:	movk	x10, #0x35e5, lsl #32
   2ee34:	add	x13, sp, #0x310
   2ee38:	movk	x10, #0xd794, lsl #48
   2ee3c:	str	x13, [sp, #776]
   2ee40:	add	x13, sp, #0x2d8
   2ee44:	stur	q1, [x8, #8]
   2ee48:	neg	x8, x28
   2ee4c:	umulh	x10, x28, x10
   2ee50:	fmov	x11, d0
   2ee54:	str	xzr, [sp, #1304]
   2ee58:	str	xzr, [sp, #1312]
   2ee5c:	str	xzr, [sp, #744]
   2ee60:	str	xzr, [sp, #752]
   2ee64:	str	xzr, [sp, #1320]
   2ee68:	str	xzr, [sp, #760]
   2ee6c:	mov	w12, #0x13                  	// #19
   2ee70:	str	x13, [sp, #720]
   2ee74:	stur	x9, [x29, #-120]
   2ee78:	stp	x8, x28, [x29, #-152]
   2ee7c:	add	x8, x9, x11, lsl #3
   2ee80:	stp	xzr, x14, [sp, #168]
   2ee84:	lsr	x10, x10, #4
   2ee88:	ldrb	w16, [sp, #24]
   2ee8c:	msub	x10, x10, x12, x28
   2ee90:	ldur	x8, [x8, #-8]
   2ee94:	cmp	x10, #0x0
   2ee98:	csel	x12, x12, x10, eq  // eq = none
   2ee9c:	cmp	x12, #0x13
   2eea0:	add	x10, sp, #0x78
   2eea4:	b.cs	2eef0 <PyInit__decimal@@Base+0x2838c>  // b.hs, b.nlast
   2eea8:	cmp	x11, #0x2
   2eeac:	b.lt	2eefc <PyInit__decimal@@Base+0x28398>  // b.tstop
   2eeb0:	mov	w13, #0x13                  	// #19
   2eeb4:	add	x9, x9, x11, lsl #3
   2eeb8:	sub	x11, x13, x12
   2eebc:	ldur	x9, [x9, #-16]
   2eec0:	ldr	x12, [x27, x12, lsl #3]
   2eec4:	ldr	x11, [x27, x11, lsl #3]
   2eec8:	udiv	x9, x9, x12
   2eecc:	madd	x8, x11, x8, x9
   2eed0:	b	2eefc <PyInit__decimal@@Base+0x28398>
   2eed4:	ldr	w8, [x22]
   2eed8:	orr	w8, w8, #0x8
   2eedc:	b	2f4a8 <PyInit__decimal@@Base+0x28944>
   2eee0:	ldr	w8, [x22]
   2eee4:	orr	w8, w8, #0x200
   2eee8:	str	w8, [x22]
   2eeec:	b	2f52c <PyInit__decimal@@Base+0x289c8>
   2eef0:	add	x9, x27, x12, lsl #3
   2eef4:	ldur	x9, [x9, #-152]
   2eef8:	udiv	x8, x8, x9
   2eefc:	ldr	x26, [x27, #72]
   2ef00:	add	x24, x10, #0x1c
   2ef04:	str	x15, [sp, #16]
   2ef08:	str	w16, [sp, #12]
   2ef0c:	cmp	x26, x8
   2ef10:	str	x14, [sp]
   2ef14:	b.ls	2ef40 <PyInit__decimal@@Base+0x283dc>  // b.plast
   2ef18:	ldr	x9, [x27, #32]
   2ef1c:	cmp	x9, x8
   2ef20:	b.ls	2ef74 <PyInit__decimal@@Base+0x28410>  // b.plast
   2ef24:	ldr	x9, [x27, #16]
   2ef28:	cmp	x9, x8
   2ef2c:	b.ls	2efb8 <PyInit__decimal@@Base+0x28454>  // b.plast
   2ef30:	ldr	x9, [x27, #8]
   2ef34:	cmp	x9, x8
   2ef38:	mov	w9, #0x1                   	// #1
   2ef3c:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2ef40:	ldr	x9, [x27, #112]
   2ef44:	cmp	x9, x8
   2ef48:	b.ls	2ef90 <PyInit__decimal@@Base+0x2842c>  // b.plast
   2ef4c:	ldr	x9, [x27, #88]
   2ef50:	cmp	x9, x8
   2ef54:	b.ls	2efc8 <PyInit__decimal@@Base+0x28464>  // b.plast
   2ef58:	ldr	x9, [x27, #80]
   2ef5c:	cmp	x9, x8
   2ef60:	mov	w9, #0xa                   	// #10
   2ef64:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2ef68:	ldr	w8, [x22]
   2ef6c:	orr	w8, w8, #0x200
   2ef70:	b	2f4a8 <PyInit__decimal@@Base+0x28944>
   2ef74:	ldr	x9, [x27, #48]
   2ef78:	cmp	x9, x8
   2ef7c:	b.ls	2efe4 <PyInit__decimal@@Base+0x28480>  // b.plast
   2ef80:	ldr	x9, [x27, #40]
   2ef84:	cmp	x9, x8
   2ef88:	mov	w9, #0x5                   	// #5
   2ef8c:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2ef90:	ldr	x9, [x27, #144]
   2ef94:	cmp	x9, x8
   2ef98:	b.ls	2f000 <PyInit__decimal@@Base+0x2849c>  // b.plast
   2ef9c:	ldr	x9, [x27, #128]
   2efa0:	cmp	x9, x8
   2efa4:	b.ls	2f010 <PyInit__decimal@@Base+0x284ac>  // b.plast
   2efa8:	ldr	x9, [x27, #120]
   2efac:	cmp	x9, x8
   2efb0:	mov	w9, #0xf                   	// #15
   2efb4:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2efb8:	ldr	x9, [x27, #24]
   2efbc:	cmp	x9, x8
   2efc0:	mov	w9, #0x3                   	// #3
   2efc4:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2efc8:	ldr	x9, [x27, #104]
   2efcc:	cmp	x9, x8
   2efd0:	b.ls	2f1c8 <PyInit__decimal@@Base+0x28664>  // b.plast
   2efd4:	ldr	x9, [x27, #96]
   2efd8:	cmp	x9, x8
   2efdc:	mov	w9, #0xc                   	// #12
   2efe0:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2efe4:	ldr	x9, [x27, #64]
   2efe8:	cmp	x9, x8
   2efec:	b.ls	2f1d0 <PyInit__decimal@@Base+0x2866c>  // b.plast
   2eff0:	ldr	x9, [x27, #56]
   2eff4:	cmp	x9, x8
   2eff8:	mov	w9, #0x7                   	// #7
   2effc:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2f000:	ldr	x9, [x27, #152]
   2f004:	cmp	x9, x8
   2f008:	mov	w9, #0x13                  	// #19
   2f00c:	b	2f018 <PyInit__decimal@@Base+0x284b4>
   2f010:	cmp	x14, x8
   2f014:	mov	w9, #0x11                  	// #17
   2f018:	cinc	x9, x9, ls  // ls = plast
   2f01c:	adrp	x10, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f020:	mov	w11, #0x13                  	// #19
   2f024:	ldr	x12, [x10, #1352]
   2f028:	sub	x9, x11, x9
   2f02c:	ldr	x10, [x21, #32]
   2f030:	ldr	x9, [x27, x9, lsl #3]
   2f034:	cmp	x12, #0x2
   2f038:	mov	w11, #0x2                   	// #2
   2f03c:	csel	x1, x12, x11, gt
   2f040:	cmp	x1, x10
   2f044:	mul	x25, x9, x8
   2f048:	b.eq	2f078 <PyInit__decimal@@Base+0x28514>  // b.none
   2f04c:	ldrb	w8, [x21]
   2f050:	tbnz	w8, #5, 2f064 <PyInit__decimal@@Base+0x28500>
   2f054:	mov	x0, x21
   2f058:	mov	x2, x24
   2f05c:	bl	1f9a4 <PyInit__decimal@@Base+0x18e40>
   2f060:	b	2f078 <PyInit__decimal@@Base+0x28514>
   2f064:	cmp	x1, x10
   2f068:	b.le	2f078 <PyInit__decimal@@Base+0x28514>
   2f06c:	mov	x0, x21
   2f070:	mov	x2, x24
   2f074:	bl	1f860 <PyInit__decimal@@Base+0x18cfc>
   2f078:	ldr	x0, [x21, #40]
   2f07c:	add	x1, sp, #0xa8
   2f080:	mov	w2, #0x2                   	// #2
   2f084:	mov	x3, x25
   2f088:	bl	1af58 <PyInit__decimal@@Base+0x143f4>
   2f08c:	ldrb	w8, [x21]
   2f090:	ldr	x10, [x21, #40]
   2f094:	mov	x9, #0xffffffffffffffef    	// #-17
   2f098:	str	x9, [x21, #8]
   2f09c:	and	w8, w8, #0xf0
   2f0a0:	strb	w8, [x21]
   2f0a4:	ldr	x8, [x10, #8]
   2f0a8:	mov	w9, #0x1                   	// #1
   2f0ac:	cmp	x8, #0x0
   2f0b0:	cinc	x8, x9, ne  // ne = any
   2f0b4:	str	x8, [x21, #24]
   2f0b8:	add	x9, x10, x8, lsl #3
   2f0bc:	ldur	x9, [x9, #-8]
   2f0c0:	cmp	x26, x9
   2f0c4:	b.ls	2f0f0 <PyInit__decimal@@Base+0x2858c>  // b.plast
   2f0c8:	ldr	x10, [x27, #32]
   2f0cc:	cmp	x10, x9
   2f0d0:	b.ls	2f118 <PyInit__decimal@@Base+0x285b4>  // b.plast
   2f0d4:	ldr	x10, [x27, #16]
   2f0d8:	cmp	x10, x9
   2f0dc:	b.ls	2f160 <PyInit__decimal@@Base+0x285fc>  // b.plast
   2f0e0:	ldr	x10, [x27, #8]
   2f0e4:	cmp	x10, x9
   2f0e8:	mov	w9, #0x1                   	// #1
   2f0ec:	b	2f1bc <PyInit__decimal@@Base+0x28658>
   2f0f0:	ldr	x10, [x27, #112]
   2f0f4:	cmp	x10, x9
   2f0f8:	b.ls	2f134 <PyInit__decimal@@Base+0x285d0>  // b.plast
   2f0fc:	ldr	x10, [x27, #88]
   2f100:	cmp	x10, x9
   2f104:	b.ls	2f170 <PyInit__decimal@@Base+0x2860c>  // b.plast
   2f108:	ldr	x10, [x27, #80]
   2f10c:	cmp	x10, x9
   2f110:	mov	w9, #0xa                   	// #10
   2f114:	b	2f1bc <PyInit__decimal@@Base+0x28658>
   2f118:	ldr	x10, [x27, #48]
   2f11c:	cmp	x10, x9
   2f120:	b.ls	2f190 <PyInit__decimal@@Base+0x2862c>  // b.plast
   2f124:	ldr	x10, [x27, #40]
   2f128:	cmp	x10, x9
   2f12c:	mov	w9, #0x5                   	// #5
   2f130:	b	2f1bc <PyInit__decimal@@Base+0x28658>
   2f134:	ldr	x10, [x27, #144]
   2f138:	cmp	x10, x9
   2f13c:	b.ls	2f1b0 <PyInit__decimal@@Base+0x2864c>  // b.plast
   2f140:	ldr	x10, [x27, #128]
   2f144:	sub	x25, x29, #0xa0
   2f148:	cmp	x10, x9
   2f14c:	b.ls	2f1d8 <PyInit__decimal@@Base+0x28674>  // b.plast
   2f150:	ldr	x10, [x27, #120]
   2f154:	cmp	x10, x9
   2f158:	mov	w9, #0xf                   	// #15
   2f15c:	b	2f1e4 <PyInit__decimal@@Base+0x28680>
   2f160:	ldr	x10, [x27, #24]
   2f164:	cmp	x10, x9
   2f168:	mov	w9, #0x3                   	// #3
   2f16c:	b	2f1bc <PyInit__decimal@@Base+0x28658>
   2f170:	ldr	x10, [x27, #104]
   2f174:	sub	x25, x29, #0xa0
   2f178:	cmp	x10, x9
   2f17c:	b.ls	2f1ec <PyInit__decimal@@Base+0x28688>  // b.plast
   2f180:	ldr	x10, [x27, #96]
   2f184:	cmp	x10, x9
   2f188:	mov	w9, #0xc                   	// #12
   2f18c:	b	2f1e4 <PyInit__decimal@@Base+0x28680>
   2f190:	ldr	x10, [x27, #64]
   2f194:	sub	x25, x29, #0xa0
   2f198:	cmp	x10, x9
   2f19c:	b.ls	2f1f4 <PyInit__decimal@@Base+0x28690>  // b.plast
   2f1a0:	ldr	x10, [x27, #56]
   2f1a4:	cmp	x10, x9
   2f1a8:	mov	w9, #0x7                   	// #7
   2f1ac:	b	2f1e4 <PyInit__decimal@@Base+0x28680>
   2f1b0:	ldr	x10, [x27, #152]
   2f1b4:	cmp	x10, x9
   2f1b8:	mov	w9, #0x13                  	// #19
   2f1bc:	cinc	x9, x9, ls  // ls = plast
   2f1c0:	sub	x25, x29, #0xa0
   2f1c4:	b	2f1f8 <PyInit__decimal@@Base+0x28694>
   2f1c8:	mov	w9, #0xe                   	// #14
   2f1cc:	b	2f01c <PyInit__decimal@@Base+0x284b8>
   2f1d0:	mov	w9, #0x9                   	// #9
   2f1d4:	b	2f01c <PyInit__decimal@@Base+0x284b8>
   2f1d8:	ldr	x10, [sp]
   2f1dc:	cmp	x10, x9
   2f1e0:	mov	w9, #0x11                  	// #17
   2f1e4:	cinc	x9, x9, ls  // ls = plast
   2f1e8:	b	2f1f8 <PyInit__decimal@@Base+0x28694>
   2f1ec:	mov	w9, #0xe                   	// #14
   2f1f0:	b	2f1f8 <PyInit__decimal@@Base+0x28694>
   2f1f4:	mov	w9, #0x9                   	// #9
   2f1f8:	mov	w10, #0x13                  	// #19
   2f1fc:	madd	x8, x8, x10, x9
   2f200:	sub	x8, x8, #0x13
   2f204:	sub	x0, x29, #0x40
   2f208:	str	x8, [x21, #16]
   2f20c:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2f210:	sub	x0, x29, #0x70
   2f214:	bl	1bf20 <PyInit__decimal@@Base+0x153bc>
   2f218:	mov	x9, #0xff9d                	// #65437
   2f21c:	ldr	x12, [sp, #120]
   2f220:	movk	x9, #0x589b, lsl #16
   2f224:	adrp	x10, 38000 <PyInit__decimal@@Base+0x3149c>
   2f228:	mov	x11, #0x63                  	// #99
   2f22c:	movk	x9, #0x494c, lsl #32
   2f230:	movk	x11, #0xa764, lsl #16
   2f234:	ldr	q0, [x10, #2864]
   2f238:	movk	x9, #0xf21f, lsl #48
   2f23c:	movk	x11, #0xb6b3, lsl #32
   2f240:	movk	x11, #0xde0, lsl #48
   2f244:	stur	x9, [x29, #-96]
   2f248:	add	x9, x12, #0x2
   2f24c:	mov	w8, #0x8                   	// #8
   2f250:	dup	v1.2d, x11
   2f254:	cmp	x9, #0x11
   2f258:	stur	w8, [x29, #-76]
   2f25c:	stur	w8, [x29, #-28]
   2f260:	stur	q0, [x25, #104]
   2f264:	str	q1, [x25, #48]
   2f268:	b.lt	2f364 <PyInit__decimal@@Base+0x28800>  // b.tstop
   2f26c:	mov	w8, #0xffffffff            	// #-1
   2f270:	add	x10, sp, #0xa8
   2f274:	add	x11, x9, #0x1
   2f278:	add	x12, x9, #0x2
   2f27c:	cmp	x11, #0x0
   2f280:	csinc	x9, x12, x9, lt  // lt = tstop
   2f284:	add	w8, w8, #0x1
   2f288:	asr	x9, x9, #1
   2f28c:	cmp	x11, #0x21
   2f290:	str	x9, [x10, w8, sxtw #3]
   2f294:	b.gt	2f274 <PyInit__decimal@@Base+0x28710>
   2f298:	tbnz	w8, #31, 2f364 <PyInit__decimal@@Base+0x28800>
   2f29c:	mov	w26, w8
   2f2a0:	add	x27, sp, #0xa8
   2f2a4:	add	x0, sp, #0x510
   2f2a8:	sub	x3, x29, #0x70
   2f2ac:	mov	x1, x21
   2f2b0:	mov	x2, x21
   2f2b4:	mov	x4, x24
   2f2b8:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2f2bc:	ldr	x8, [x27, x26, lsl #3]
   2f2c0:	ldur	x9, [x29, #-144]
   2f2c4:	lsl	x8, x8, #1
   2f2c8:	add	x8, x8, #0x5
   2f2cc:	subs	x2, x9, x8
   2f2d0:	stur	x8, [x29, #-64]
   2f2d4:	b.le	2f2fc <PyInit__decimal@@Base+0x28798>
   2f2d8:	add	x0, sp, #0x2e0
   2f2dc:	sub	x1, x29, #0xa0
   2f2e0:	mov	x3, x24
   2f2e4:	add	x25, sp, #0x2e0
   2f2e8:	bl	22a8c <PyInit__decimal@@Base+0x1bf28>
   2f2ec:	ldur	x8, [x29, #-64]
   2f2f0:	neg	x8, x8
   2f2f4:	str	x8, [sp, #744]
   2f2f8:	b	2f300 <PyInit__decimal@@Base+0x2879c>
   2f2fc:	sub	x25, x29, #0xa0
   2f300:	add	x0, sp, #0x2e0
   2f304:	add	x2, sp, #0x510
   2f308:	sub	x3, x29, #0x40
   2f30c:	mov	x1, x25
   2f310:	mov	x4, x24
   2f314:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2f318:	add	x0, sp, #0x2e0
   2f31c:	sub	x1, x29, #0x40
   2f320:	mov	x2, x24
   2f324:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2f328:	add	x0, sp, #0x510
   2f32c:	add	x2, sp, #0x2a8
   2f330:	sub	x3, x29, #0x70
   2f334:	mov	x1, x21
   2f338:	mov	x4, x24
   2f33c:	bl	2b910 <PyInit__decimal@@Base+0x24dac>
   2f340:	add	x1, sp, #0x510
   2f344:	add	x2, sp, #0x2e0
   2f348:	sub	x3, x29, #0x70
   2f34c:	mov	x0, x21
   2f350:	mov	x4, x24
   2f354:	bl	2f734 <PyInit__decimal@@Base+0x28bd0>
   2f358:	cmp	x26, #0x0
   2f35c:	sub	x26, x26, #0x1
   2f360:	b.gt	2f2a4 <PyInit__decimal@@Base+0x28740>
   2f364:	ldrb	w8, [x21]
   2f368:	tst	w8, #0xe
   2f36c:	b.ne	2f398 <PyInit__decimal@@Base+0x28834>  // b.any
   2f370:	ldr	w9, [sp, #12]
   2f374:	ldr	x11, [sp, #16]
   2f378:	ldr	x10, [x21, #8]
   2f37c:	and	w8, w8, #0xf0
   2f380:	and	w9, w9, #0x1
   2f384:	add	x11, x28, x11
   2f388:	orr	w8, w8, w9
   2f38c:	sub	x9, x10, x11
   2f390:	str	x9, [x21, #8]
   2f394:	strb	w8, [x21]
   2f398:	ldrb	w8, [sp, #1296]
   2f39c:	cmp	w8, #0x1f
   2f3a0:	b.hi	2f3b8 <PyInit__decimal@@Base+0x28854>  // b.pmore
   2f3a4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f3a8:	ldr	x8, [x8, #1384]
   2f3ac:	ldr	x0, [sp, #1336]
   2f3b0:	blr	x8
   2f3b4:	ldrb	w8, [sp, #1296]
   2f3b8:	tbnz	w8, #4, 2f3cc <PyInit__decimal@@Base+0x28868>
   2f3bc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f3c0:	ldr	x8, [x8, #1384]
   2f3c4:	add	x0, sp, #0x510
   2f3c8:	blr	x8
   2f3cc:	ldrb	w8, [sp, #736]
   2f3d0:	cmp	w8, #0x1f
   2f3d4:	b.hi	2f3ec <PyInit__decimal@@Base+0x28888>  // b.pmore
   2f3d8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f3dc:	ldr	x8, [x8, #1384]
   2f3e0:	ldr	x0, [sp, #776]
   2f3e4:	blr	x8
   2f3e8:	ldrb	w8, [sp, #736]
   2f3ec:	tbnz	w8, #4, 2f400 <PyInit__decimal@@Base+0x2889c>
   2f3f0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f3f4:	ldr	x8, [x8, #1384]
   2f3f8:	add	x0, sp, #0x2e0
   2f3fc:	blr	x8
   2f400:	add	x1, sp, #0x78
   2f404:	mov	x0, x21
   2f408:	mov	x2, x24
   2f40c:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2f410:	add	x1, sp, #0x48
   2f414:	add	x3, sp, #0x78
   2f418:	mov	x0, x23
   2f41c:	mov	x2, x21
   2f420:	mov	x4, x24
   2f424:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2f428:	add	x3, sp, #0x78
   2f42c:	mov	w0, #0x2                   	// #2
   2f430:	mov	x1, x23
   2f434:	mov	x2, x23
   2f438:	mov	x4, x24
   2f43c:	bl	2c7cc <PyInit__decimal@@Base+0x25c68>
   2f440:	ldr	x8, [sp, #88]
   2f444:	adrp	x9, 38000 <PyInit__decimal@@Base+0x3149c>
   2f448:	ldr	q0, [x9, #2880]
   2f44c:	add	x1, sp, #0x18
   2f450:	add	x8, x8, #0x3
   2f454:	add	x3, sp, #0x78
   2f458:	mov	x0, x21
   2f45c:	mov	x2, x23
   2f460:	mov	x4, x24
   2f464:	str	x8, [sp, #120]
   2f468:	stur	q0, [sp, #128]
   2f46c:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2f470:	add	x1, sp, #0x48
   2f474:	add	x3, sp, #0x78
   2f478:	mov	x0, x21
   2f47c:	mov	x2, x21
   2f480:	mov	x4, x24
   2f484:	bl	2f734 <PyInit__decimal@@Base+0x28bd0>
   2f488:	ldrb	w8, [x23]
   2f48c:	tst	w8, #0xe
   2f490:	b.eq	2f56c <PyInit__decimal@@Base+0x28a08>  // b.none
   2f494:	ldr	w8, [sp, #148]
   2f498:	ldr	w9, [x22]
   2f49c:	mov	w10, #0x3be                 	// #958
   2f4a0:	and	w8, w8, w10
   2f4a4:	orr	w8, w9, w8
   2f4a8:	str	w8, [x22]
   2f4ac:	cbz	x23, 2f4ec <PyInit__decimal@@Base+0x28988>
   2f4b0:	cmp	x23, x20
   2f4b4:	b.eq	2f4ec <PyInit__decimal@@Base+0x28988>  // b.none
   2f4b8:	ldrb	w8, [x23]
   2f4bc:	cmp	w8, #0x1f
   2f4c0:	b.hi	2f4d8 <PyInit__decimal@@Base+0x28974>  // b.pmore
   2f4c4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f4c8:	ldr	x8, [x8, #1384]
   2f4cc:	ldr	x0, [x23, #40]
   2f4d0:	blr	x8
   2f4d4:	ldrb	w8, [x23]
   2f4d8:	tbnz	w8, #4, 2f4ec <PyInit__decimal@@Base+0x28988>
   2f4dc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f4e0:	ldr	x8, [x8, #1384]
   2f4e4:	mov	x0, x23
   2f4e8:	blr	x8
   2f4ec:	cbz	x21, 2f52c <PyInit__decimal@@Base+0x289c8>
   2f4f0:	cmp	x21, x19
   2f4f4:	b.eq	2f52c <PyInit__decimal@@Base+0x289c8>  // b.none
   2f4f8:	ldrb	w8, [x21]
   2f4fc:	cmp	w8, #0x1f
   2f500:	b.hi	2f518 <PyInit__decimal@@Base+0x289b4>  // b.pmore
   2f504:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f508:	ldr	x8, [x8, #1384]
   2f50c:	ldr	x0, [x21, #40]
   2f510:	blr	x8
   2f514:	ldrb	w8, [x21]
   2f518:	tbnz	w8, #4, 2f52c <PyInit__decimal@@Base+0x289c8>
   2f51c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f520:	ldr	x8, [x8, #1384]
   2f524:	mov	x0, x21
   2f528:	blr	x8
   2f52c:	mov	w2, #0x4                   	// #4
   2f530:	mov	x0, x20
   2f534:	mov	w1, wzr
   2f538:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2f53c:	mov	w2, #0x4                   	// #4
   2f540:	mov	x0, x19
   2f544:	mov	w1, wzr
   2f548:	bl	20868 <PyInit__decimal@@Base+0x19d04>
   2f54c:	add	sp, sp, #0x7e0
   2f550:	ldp	x20, x19, [sp, #80]
   2f554:	ldp	x22, x21, [sp, #64]
   2f558:	ldp	x24, x23, [sp, #48]
   2f55c:	ldp	x26, x25, [sp, #32]
   2f560:	ldp	x28, x27, [sp, #16]
   2f564:	ldp	x29, x30, [sp], #96
   2f568:	ret
   2f56c:	adrp	x25, 49000 <PyInit__decimal@@Base+0x4249c>
   2f570:	adrp	x27, 49000 <PyInit__decimal@@Base+0x4249c>
   2f574:	adrp	x28, 49000 <PyInit__decimal@@Base+0x4249c>
   2f578:	mov	w26, #0x4                   	// #4
   2f57c:	add	x25, x25, #0xcb8
   2f580:	add	x27, x27, #0xce8
   2f584:	add	x28, x28, #0xc88
   2f588:	ldrb	w8, [x21]
   2f58c:	tst	w8, #0xe
   2f590:	b.ne	2f494 <PyInit__decimal@@Base+0x28930>  // b.any
   2f594:	subs	w26, w26, #0x1
   2f598:	b.eq	2f624 <PyInit__decimal@@Base+0x28ac0>  // b.none
   2f59c:	mov	x0, x25
   2f5a0:	mov	x1, x21
   2f5a4:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2f5a8:	cmp	w0, #0x1
   2f5ac:	b.ne	2f5d0 <PyInit__decimal@@Base+0x28a6c>  // b.any
   2f5b0:	add	x2, sp, #0x18
   2f5b4:	add	x3, sp, #0x78
   2f5b8:	mov	x0, x21
   2f5bc:	mov	x1, x21
   2f5c0:	mov	x4, x24
   2f5c4:	bl	2d8d0 <PyInit__decimal@@Base+0x26d6c>
   2f5c8:	mov	x2, x27
   2f5cc:	b	2f600 <PyInit__decimal@@Base+0x28a9c>
   2f5d0:	add	x1, sp, #0x18
   2f5d4:	mov	x0, x21
   2f5d8:	bl	2216c <PyInit__decimal@@Base+0x1b608>
   2f5dc:	cmn	w0, #0x1
   2f5e0:	b.eq	2f678 <PyInit__decimal@@Base+0x28b14>  // b.none
   2f5e4:	add	x2, sp, #0x18
   2f5e8:	add	x3, sp, #0x78
   2f5ec:	mov	x0, x21
   2f5f0:	mov	x1, x21
   2f5f4:	mov	x4, x24
   2f5f8:	bl	2f734 <PyInit__decimal@@Base+0x28bd0>
   2f5fc:	mov	x2, x28
   2f600:	add	x3, sp, #0x78
   2f604:	mov	x0, x23
   2f608:	mov	x1, x23
   2f60c:	mov	x4, x24
   2f610:	bl	2d8d0 <PyInit__decimal@@Base+0x26d6c>
   2f614:	ldrb	w8, [x23]
   2f618:	tst	w8, #0xe
   2f61c:	b.eq	2f588 <PyInit__decimal@@Base+0x28a24>  // b.none
   2f620:	b	2f494 <PyInit__decimal@@Base+0x28930>
   2f624:	adrp	x24, 49000 <PyInit__decimal@@Base+0x4249c>
   2f628:	ldr	x24, [x24, #3904]
   2f62c:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   2f630:	adrp	x2, 38000 <PyInit__decimal@@Base+0x3149c>
   2f634:	add	x1, x1, #0xff8
   2f638:	ldr	x0, [x24]
   2f63c:	add	x2, x2, #0xbc4
   2f640:	mov	w3, #0x1d0c                	// #7436
   2f644:	bl	6a60 <fprintf@plt>
   2f648:	ldr	x3, [x24]
   2f64c:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   2f650:	add	x0, x0, #0xc00
   2f654:	mov	w1, #0x3c                  	// #60
   2f658:	mov	w2, #0x1                   	// #1
   2f65c:	bl	6920 <fwrite@plt>
   2f660:	ldr	x1, [x24]
   2f664:	mov	w0, #0xa                   	// #10
   2f668:	bl	65a0 <fputc@plt>
   2f66c:	ldr	w8, [x22]
   2f670:	orr	w8, w8, #0x100
   2f674:	b	2f4a8 <PyInit__decimal@@Base+0x28944>
   2f678:	cmp	x23, x20
   2f67c:	b.eq	2f6c8 <PyInit__decimal@@Base+0x28b64>  // b.none
   2f680:	mov	x0, x20
   2f684:	mov	x1, x23
   2f688:	mov	x2, x22
   2f68c:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2f690:	cbz	w0, 2f4ac <PyInit__decimal@@Base+0x28948>
   2f694:	ldrb	w8, [x23]
   2f698:	cmp	w8, #0x1f
   2f69c:	b.hi	2f6b4 <PyInit__decimal@@Base+0x28b50>  // b.pmore
   2f6a0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f6a4:	ldr	x8, [x8, #1384]
   2f6a8:	ldr	x0, [x23, #40]
   2f6ac:	blr	x8
   2f6b0:	ldrb	w8, [x23]
   2f6b4:	tbnz	w8, #4, 2f6c8 <PyInit__decimal@@Base+0x28b64>
   2f6b8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f6bc:	ldr	x8, [x8, #1384]
   2f6c0:	mov	x0, x23
   2f6c4:	blr	x8
   2f6c8:	cmp	x21, x19
   2f6cc:	b.eq	2f718 <PyInit__decimal@@Base+0x28bb4>  // b.none
   2f6d0:	mov	x0, x19
   2f6d4:	mov	x1, x21
   2f6d8:	mov	x2, x22
   2f6dc:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2f6e0:	cbz	w0, 2f4ac <PyInit__decimal@@Base+0x28948>
   2f6e4:	ldrb	w8, [x21]
   2f6e8:	cmp	w8, #0x1f
   2f6ec:	b.hi	2f704 <PyInit__decimal@@Base+0x28ba0>  // b.pmore
   2f6f0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f6f4:	ldr	x8, [x8, #1384]
   2f6f8:	ldr	x0, [x21, #40]
   2f6fc:	blr	x8
   2f700:	ldrb	w8, [x21]
   2f704:	tbnz	w8, #4, 2f718 <PyInit__decimal@@Base+0x28bb4>
   2f708:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2f70c:	ldr	x8, [x8, #1384]
   2f710:	mov	x0, x21
   2f714:	blr	x8
   2f718:	ldr	w8, [sp, #148]
   2f71c:	ldr	w9, [x22]
   2f720:	mov	w10, #0x3be                 	// #958
   2f724:	and	w8, w8, w10
   2f728:	orr	w8, w9, w8
   2f72c:	str	w8, [x22]
   2f730:	b	2f54c <PyInit__decimal@@Base+0x289e8>
   2f734:	sub	sp, sp, #0x30
   2f738:	stp	x29, x30, [sp, #16]
   2f73c:	stp	x20, x19, [sp, #32]
   2f740:	add	x29, sp, #0x10
   2f744:	mov	x19, x4
   2f748:	sub	x4, x29, #0x4
   2f74c:	mov	x20, x0
   2f750:	stur	wzr, [x29, #-4]
   2f754:	bl	25318 <PyInit__decimal@@Base+0x1e7b4>
   2f758:	ldur	w8, [x29, #-4]
   2f75c:	ldr	w9, [x19]
   2f760:	mov	w10, #0x1041                	// #4161
   2f764:	tst	w8, w10
   2f768:	orr	w9, w9, w8
   2f76c:	str	w9, [x19]
   2f770:	b.eq	2f784 <PyInit__decimal@@Base+0x28c20>  // b.none
   2f774:	mov	w1, #0x100                 	// #256
   2f778:	mov	x0, x20
   2f77c:	mov	x2, x19
   2f780:	bl	208fc <PyInit__decimal@@Base+0x19d98>
   2f784:	ldp	x20, x19, [sp, #32]
   2f788:	ldp	x29, x30, [sp, #16]
   2f78c:	add	sp, sp, #0x30
   2f790:	ret
   2f794:	stp	x29, x30, [sp, #-80]!
   2f798:	str	x25, [sp, #16]
   2f79c:	stp	x24, x23, [sp, #32]
   2f7a0:	stp	x22, x21, [sp, #48]
   2f7a4:	stp	x20, x19, [sp, #64]
   2f7a8:	mov	x29, sp
   2f7ac:	mov	w19, w3
   2f7b0:	mov	x20, x0
   2f7b4:	str	wzr, [x29, #28]
   2f7b8:	cbz	x2, 2f900 <PyInit__decimal@@Base+0x28d9c>
   2f7bc:	mov	x23, x2
   2f7c0:	mov	x0, x20
   2f7c4:	mov	x2, x5
   2f7c8:	mov	x21, x5
   2f7cc:	mov	x22, x4
   2f7d0:	mov	x24, x1
   2f7d4:	bl	21764 <PyInit__decimal@@Base+0x1ac00>
   2f7d8:	cbz	w0, 2f938 <PyInit__decimal@@Base+0x28dd4>
   2f7dc:	lsr	x8, x23, #32
   2f7e0:	cmp	x8, #0x0
   2f7e4:	csel	x8, x23, x8, eq  // eq = none
   2f7e8:	lsr	x12, x8, #16
   2f7ec:	cset	w10, ne  // ne = any
   2f7f0:	cmp	x12, #0x0
   2f7f4:	mov	w9, #0x10                  	// #16
   2f7f8:	csel	x8, x8, x12, eq  // eq = none
   2f7fc:	lsl	w11, w10, #5
   2f800:	bfi	w9, w10, #5, #1
   2f804:	lsr	x10, x8, #8
   2f808:	csel	w9, w11, w9, eq  // eq = none
   2f80c:	cmp	x10, #0x0
   2f810:	csel	x8, x8, x10, eq  // eq = none
   2f814:	orr	w11, w9, #0x8
   2f818:	lsr	x10, x8, #4
   2f81c:	csel	w9, w9, w11, eq  // eq = none
   2f820:	cmp	x10, #0x0
   2f824:	csel	x8, x8, x10, eq  // eq = none
   2f828:	orr	w11, w9, #0x4
   2f82c:	lsr	x10, x8, #2
   2f830:	csel	w9, w9, w11, eq  // eq = none
   2f834:	cmp	x10, #0x0
   2f838:	csel	x8, x8, x10, eq  // eq = none
   2f83c:	add	w11, w9, #0x2
   2f840:	lsr	x10, x8, #1
   2f844:	csel	w9, w9, w11, eq  // eq = none
   2f848:	cmp	x10, #0x0
   2f84c:	csel	w8, w8, w10, eq  // eq = none
   2f850:	cinc	w9, w9, ne  // ne = any
   2f854:	add	w8, w9, w8
   2f858:	adrp	x9, 37000 <PyInit__decimal@@Base+0x3049c>
   2f85c:	sub	w8, w8, #0x1
   2f860:	add	x9, x9, #0xc70
   2f864:	ldr	x8, [x9, w8, sxtw #3]
   2f868:	lsr	x25, x8, #1
   2f86c:	cbz	x25, 2f918 <PyInit__decimal@@Base+0x28db4>
   2f870:	add	x4, x29, #0x1c
   2f874:	mov	x0, x20
   2f878:	mov	x1, x20
   2f87c:	mov	x2, x20
   2f880:	mov	x3, x22
   2f884:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2f888:	add	x2, x29, #0x1c
   2f88c:	mov	x0, x20
   2f890:	mov	x1, x22
   2f894:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2f898:	tst	x25, x23
   2f89c:	b.eq	2f8c8 <PyInit__decimal@@Base+0x28d64>  // b.none
   2f8a0:	add	x4, x29, #0x1c
   2f8a4:	mov	x0, x20
   2f8a8:	mov	x1, x20
   2f8ac:	mov	x2, x24
   2f8b0:	mov	x3, x22
   2f8b4:	bl	276c8 <PyInit__decimal@@Base+0x20b64>
   2f8b8:	add	x2, x29, #0x1c
   2f8bc:	mov	x0, x20
   2f8c0:	mov	x1, x22
   2f8c4:	bl	20b64 <PyInit__decimal@@Base+0x1a000>
   2f8c8:	ldrb	w8, [x20]
   2f8cc:	tst	w8, #0xe
   2f8d0:	b.ne	2f8f8 <PyInit__decimal@@Base+0x28d94>  // b.any
   2f8d4:	ldr	x9, [x20, #40]
   2f8d8:	ldr	x10, [x20, #24]
   2f8dc:	add	x9, x9, x10, lsl #3
   2f8e0:	ldur	x9, [x9, #-8]
   2f8e4:	cbnz	x9, 2f8f0 <PyInit__decimal@@Base+0x28d8c>
   2f8e8:	ldrb	w9, [x29, #28]
   2f8ec:	tbnz	w9, #0, 2f8f8 <PyInit__decimal@@Base+0x28d94>
   2f8f0:	lsr	x25, x25, #1
   2f8f4:	cbnz	x25, 2f870 <PyInit__decimal@@Base+0x28d0c>
   2f8f8:	ldr	w9, [x29, #28]
   2f8fc:	b	2f920 <PyInit__decimal@@Base+0x28dbc>
   2f900:	mov	w2, #0x1                   	// #1
   2f904:	mov	x0, x20
   2f908:	mov	w1, w19
   2f90c:	mov	x3, xzr
   2f910:	bl	21100 <PyInit__decimal@@Base+0x1a59c>
   2f914:	b	2f938 <PyInit__decimal@@Base+0x28dd4>
   2f918:	ldrb	w8, [x20]
   2f91c:	mov	w9, wzr
   2f920:	ldr	w10, [x21]
   2f924:	and	w8, w8, #0xfe
   2f928:	orr	w8, w8, w19
   2f92c:	orr	w9, w10, w9
   2f930:	str	w9, [x21]
   2f934:	strb	w8, [x20]
   2f938:	ldp	x20, x19, [sp, #64]
   2f93c:	ldp	x22, x21, [sp, #48]
   2f940:	ldp	x24, x23, [sp, #32]
   2f944:	ldr	x25, [sp, #16]
   2f948:	ldp	x29, x30, [sp], #80
   2f94c:	ret
   2f950:	sub	sp, sp, #0x80
   2f954:	stp	x29, x30, [sp, #32]
   2f958:	stp	x28, x27, [sp, #48]
   2f95c:	stp	x26, x25, [sp, #64]
   2f960:	stp	x24, x23, [sp, #80]
   2f964:	stp	x22, x21, [sp, #96]
   2f968:	stp	x20, x19, [sp, #112]
   2f96c:	add	x29, sp, #0x20
   2f970:	mvn	x8, x3
   2f974:	cmp	x8, x2
   2f978:	b.cc	2fcd0 <PyInit__decimal@@Base+0x2916c>  // b.lo, b.ul, b.last
   2f97c:	add	x23, x3, x2
   2f980:	lsr	x9, x23, #32
   2f984:	cmp	x9, #0x0
   2f988:	csel	x9, x23, x9, eq  // eq = none
   2f98c:	lsr	x12, x9, #16
   2f990:	cset	w10, ne  // ne = any
   2f994:	cmp	x12, #0x0
   2f998:	mov	w8, #0x10                  	// #16
   2f99c:	csel	x9, x9, x12, eq  // eq = none
   2f9a0:	lsl	w11, w10, #5
   2f9a4:	bfi	w8, w10, #5, #1
   2f9a8:	lsr	x10, x9, #8
   2f9ac:	csel	w8, w11, w8, eq  // eq = none
   2f9b0:	cmp	x10, #0x0
   2f9b4:	csel	x9, x9, x10, eq  // eq = none
   2f9b8:	orr	w11, w8, #0x8
   2f9bc:	lsr	x10, x9, #4
   2f9c0:	csel	w8, w8, w11, eq  // eq = none
   2f9c4:	cmp	x10, #0x0
   2f9c8:	csel	x9, x9, x10, eq  // eq = none
   2f9cc:	orr	w11, w8, #0x4
   2f9d0:	lsr	x10, x9, #2
   2f9d4:	csel	w8, w8, w11, eq  // eq = none
   2f9d8:	cmp	x10, #0x0
   2f9dc:	csel	x9, x9, x10, eq  // eq = none
   2f9e0:	add	w11, w8, #0x2
   2f9e4:	lsr	x10, x9, #1
   2f9e8:	csel	w8, w8, w11, eq  // eq = none
   2f9ec:	cmp	x10, #0x0
   2f9f0:	csel	w9, w9, w10, eq  // eq = none
   2f9f4:	cinc	w8, w8, ne  // ne = any
   2f9f8:	add	w8, w8, w9
   2f9fc:	sub	w8, w8, #0x1
   2fa00:	mov	x20, x4
   2fa04:	mov	x25, x3
   2fa08:	mov	x27, x2
   2fa0c:	mov	x24, x1
   2fa10:	mov	x26, x0
   2fa14:	cmp	x23, #0x400
   2fa18:	sxtw	x8, w8
   2fa1c:	str	x23, [x4]
   2fa20:	b.hi	2fa44 <PyInit__decimal@@Base+0x28ee0>  // b.pmore
   2fa24:	mov	w9, #0x1                   	// #1
   2fa28:	lsl	x8, x9, x8
   2fa2c:	cmp	x8, x23
   2fa30:	cset	w9, ne  // ne = any
   2fa34:	lsl	x23, x8, x9
   2fa38:	cmn	x23, #0x1
   2fa3c:	b.ne	2faa8 <PyInit__decimal@@Base+0x28f44>  // b.any
   2fa40:	b	2faa0 <PyInit__decimal@@Base+0x28f3c>
   2fa44:	mov	x9, #0x100000000           	// #4294967296
   2fa48:	cmp	x23, x9
   2fa4c:	b.hi	2fa78 <PyInit__decimal@@Base+0x28f14>  // b.pmore
   2fa50:	mov	w9, #0x1                   	// #1
   2fa54:	lsl	x8, x9, x8
   2fa58:	cmp	x8, x23
   2fa5c:	b.eq	2faa8 <PyInit__decimal@@Base+0x28f44>  // b.none
   2fa60:	lsr	x9, x8, #1
   2fa64:	add	x8, x8, x8, lsr #1
   2fa68:	cmp	x8, x23
   2fa6c:	csel	x9, x9, xzr, cc  // cc = lo, ul, last
   2fa70:	add	x23, x9, x8
   2fa74:	b	2fa38 <PyInit__decimal@@Base+0x28ed4>
   2fa78:	mov	x8, #0x180000000           	// #6442450944
   2fa7c:	movk	x8, #0x1
   2fa80:	cmp	x23, x8
   2fa84:	b.cs	2fa90 <PyInit__decimal@@Base+0x28f2c>  // b.hs, b.nlast
   2fa88:	mov	x23, #0x180000000           	// #6442450944
   2fa8c:	b	2faa8 <PyInit__decimal@@Base+0x28f44>
   2fa90:	mov	x8, #0x300000000           	// #12884901888
   2fa94:	cmp	x23, x8
   2fa98:	mov	x23, #0x300000000           	// #12884901888
   2fa9c:	b.ls	2faa8 <PyInit__decimal@@Base+0x28f44>  // b.plast
   2faa0:	mov	x19, xzr
   2faa4:	b	2fc40 <PyInit__decimal@@Base+0x290dc>
   2faa8:	mov	w1, #0x8                   	// #8
   2faac:	mov	x0, x23
   2fab0:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   2fab4:	mov	x19, x0
   2fab8:	cbz	x0, 2fc40 <PyInit__decimal@@Base+0x290dc>
   2fabc:	mov	w1, #0x8                   	// #8
   2fac0:	mov	x0, x23
   2fac4:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   2fac8:	mov	x21, x0
   2facc:	cbz	x0, 2fc00 <PyInit__decimal@@Base+0x2909c>
   2fad0:	mov	w1, #0x8                   	// #8
   2fad4:	mov	x0, x23
   2fad8:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   2fadc:	mov	x22, x0
   2fae0:	cbz	x0, 2fc04 <PyInit__decimal@@Base+0x290a0>
   2fae4:	lsl	x27, x27, #3
   2fae8:	mov	x0, x19
   2faec:	mov	x1, x26
   2faf0:	mov	x2, x27
   2faf4:	bl	6460 <memcpy@plt>
   2faf8:	mov	x0, x21
   2fafc:	mov	x1, x26
   2fb00:	mov	x2, x27
   2fb04:	bl	6460 <memcpy@plt>
   2fb08:	mov	x0, x22
   2fb0c:	mov	x1, x26
   2fb10:	mov	x2, x27
   2fb14:	bl	6460 <memcpy@plt>
   2fb18:	cmp	x26, x24
   2fb1c:	b.eq	2fc64 <PyInit__decimal@@Base+0x29100>  // b.none
   2fb20:	mov	w1, #0x8                   	// #8
   2fb24:	mov	x0, x23
   2fb28:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   2fb2c:	cbz	x0, 2fc04 <PyInit__decimal@@Base+0x290a0>
   2fb30:	lsl	x27, x25, #3
   2fb34:	mov	x1, x24
   2fb38:	mov	x2, x27
   2fb3c:	mov	x26, x0
   2fb40:	bl	6460 <memcpy@plt>
   2fb44:	mov	x0, x19
   2fb48:	mov	x1, x26
   2fb4c:	mov	x2, x23
   2fb50:	mov	w3, wzr
   2fb54:	bl	1c138 <PyInit__decimal@@Base+0x155d4>
   2fb58:	cbz	w0, 2fcbc <PyInit__decimal@@Base+0x29158>
   2fb5c:	mov	x0, x26
   2fb60:	mov	x1, x24
   2fb64:	mov	x2, x27
   2fb68:	bl	6460 <memcpy@plt>
   2fb6c:	subs	x8, x23, x25
   2fb70:	add	x28, x26, x25, lsl #3
   2fb74:	lsl	x25, x8, #3
   2fb78:	stur	x8, [x29, #-8]
   2fb7c:	b.eq	2fb90 <PyInit__decimal@@Base+0x2902c>  // b.none
   2fb80:	mov	x0, x28
   2fb84:	mov	w1, wzr
   2fb88:	mov	x2, x25
   2fb8c:	bl	6660 <memset@plt>
   2fb90:	mov	w3, #0x1                   	// #1
   2fb94:	mov	x0, x21
   2fb98:	mov	x1, x26
   2fb9c:	mov	x2, x23
   2fba0:	stp	x25, x28, [sp, #8]
   2fba4:	bl	1c138 <PyInit__decimal@@Base+0x155d4>
   2fba8:	cbz	w0, 2fcbc <PyInit__decimal@@Base+0x29158>
   2fbac:	mov	x0, x26
   2fbb0:	mov	x1, x24
   2fbb4:	mov	x2, x27
   2fbb8:	bl	6460 <memcpy@plt>
   2fbbc:	ldur	x8, [x29, #-8]
   2fbc0:	cbz	x8, 2fbd0 <PyInit__decimal@@Base+0x2906c>
   2fbc4:	ldp	x2, x0, [sp, #8]
   2fbc8:	mov	w1, wzr
   2fbcc:	bl	6660 <memset@plt>
   2fbd0:	mov	w3, #0x2                   	// #2
   2fbd4:	mov	x0, x22
   2fbd8:	mov	x1, x26
   2fbdc:	mov	x2, x23
   2fbe0:	bl	1c138 <PyInit__decimal@@Base+0x155d4>
   2fbe4:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2fbe8:	ldr	x8, [x8, #1384]
   2fbec:	mov	w23, w0
   2fbf0:	mov	x0, x26
   2fbf4:	blr	x8
   2fbf8:	cbnz	w23, 2fca0 <PyInit__decimal@@Base+0x2913c>
   2fbfc:	b	2fc04 <PyInit__decimal@@Base+0x290a0>
   2fc00:	mov	x22, xzr
   2fc04:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2fc08:	ldr	x8, [x8, #1384]
   2fc0c:	mov	x0, x19
   2fc10:	blr	x8
   2fc14:	mov	x19, xzr
   2fc18:	cbz	x21, 2fc2c <PyInit__decimal@@Base+0x290c8>
   2fc1c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2fc20:	ldr	x8, [x8, #1384]
   2fc24:	mov	x0, x21
   2fc28:	blr	x8
   2fc2c:	cbz	x22, 2fc40 <PyInit__decimal@@Base+0x290dc>
   2fc30:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2fc34:	ldr	x8, [x8, #1384]
   2fc38:	mov	x0, x22
   2fc3c:	blr	x8
   2fc40:	mov	x0, x19
   2fc44:	ldp	x20, x19, [sp, #112]
   2fc48:	ldp	x22, x21, [sp, #96]
   2fc4c:	ldp	x24, x23, [sp, #80]
   2fc50:	ldp	x26, x25, [sp, #64]
   2fc54:	ldp	x28, x27, [sp, #48]
   2fc58:	ldp	x29, x30, [sp, #32]
   2fc5c:	add	sp, sp, #0x80
   2fc60:	ret
   2fc64:	mov	x0, x19
   2fc68:	mov	x1, x23
   2fc6c:	mov	w2, wzr
   2fc70:	bl	1c340 <PyInit__decimal@@Base+0x157dc>
   2fc74:	cbz	w0, 2fc04 <PyInit__decimal@@Base+0x290a0>
   2fc78:	mov	w2, #0x1                   	// #1
   2fc7c:	mov	x0, x21
   2fc80:	mov	x1, x23
   2fc84:	bl	1c340 <PyInit__decimal@@Base+0x157dc>
   2fc88:	cbz	w0, 2fc04 <PyInit__decimal@@Base+0x290a0>
   2fc8c:	mov	w2, #0x2                   	// #2
   2fc90:	mov	x0, x22
   2fc94:	mov	x1, x23
   2fc98:	bl	1c340 <PyInit__decimal@@Base+0x157dc>
   2fc9c:	cbz	w0, 2fc04 <PyInit__decimal@@Base+0x290a0>
   2fca0:	ldr	x3, [x20]
   2fca4:	mov	x0, x19
   2fca8:	mov	x1, x21
   2fcac:	mov	x2, x22
   2fcb0:	bl	1c600 <PyInit__decimal@@Base+0x15a9c>
   2fcb4:	cbnz	x21, 2fc1c <PyInit__decimal@@Base+0x290b8>
   2fcb8:	b	2fc2c <PyInit__decimal@@Base+0x290c8>
   2fcbc:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   2fcc0:	ldr	x8, [x8, #1384]
   2fcc4:	mov	x0, x26
   2fcc8:	blr	x8
   2fccc:	b	2fc04 <PyInit__decimal@@Base+0x290a0>
   2fcd0:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   2fcd4:	ldr	x19, [x19, #3904]
   2fcd8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   2fcdc:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   2fce0:	add	x1, x1, #0xba8
   2fce4:	ldr	x0, [x19]
   2fce8:	add	x2, x2, #0xbb7
   2fcec:	mov	w3, #0x253                 	// #595
   2fcf0:	bl	6a60 <fprintf@plt>
   2fcf4:	ldr	x3, [x19]
   2fcf8:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   2fcfc:	add	x0, x0, #0xc3d
   2fd00:	mov	w1, #0x29                  	// #41
   2fd04:	mov	w2, #0x1                   	// #1
   2fd08:	bl	6920 <fwrite@plt>
   2fd0c:	ldr	x1, [x19]
   2fd10:	mov	w0, #0xa                   	// #10
   2fd14:	bl	65a0 <fputc@plt>
   2fd18:	bl	67b0 <abort@plt>
   2fd1c:	stp	x29, x30, [sp, #-32]!
   2fd20:	str	x19, [sp, #16]
   2fd24:	mov	x29, sp
   2fd28:	cmp	x0, x1
   2fd2c:	b.ls	2fd5c <PyInit__decimal@@Base+0x291f8>  // b.plast
   2fd30:	add	x8, x0, #0x1
   2fd34:	lsr	x8, x8, #1
   2fd38:	add	x0, x8, #0x1
   2fd3c:	adds	x19, x0, x0
   2fd40:	b.cs	2fd6c <PyInit__decimal@@Base+0x29208>  // b.hs, b.nlast
   2fd44:	bl	2fd1c <PyInit__decimal@@Base+0x291b8>
   2fd48:	mvn	x8, x0
   2fd4c:	cmp	x19, x8
   2fd50:	b.hi	2fda0 <PyInit__decimal@@Base+0x2923c>  // b.pmore
   2fd54:	add	x0, x0, x19
   2fd58:	b	2fd60 <PyInit__decimal@@Base+0x291fc>
   2fd5c:	mov	x0, xzr
   2fd60:	ldr	x19, [sp, #16]
   2fd64:	ldp	x29, x30, [sp], #32
   2fd68:	ret
   2fd6c:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   2fd70:	ldr	x19, [x19, #3904]
   2fd74:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   2fd78:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   2fd7c:	add	x1, x1, #0xba8
   2fd80:	ldr	x0, [x19]
   2fd84:	add	x2, x2, #0xbb7
   2fd88:	mov	w3, #0x26c                 	// #620
   2fd8c:	bl	6a60 <fprintf@plt>
   2fd90:	ldr	x3, [x19]
   2fd94:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   2fd98:	add	x0, x0, #0xc67
   2fd9c:	b	2fdd0 <PyInit__decimal@@Base+0x2926c>
   2fda0:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   2fda4:	ldr	x19, [x19, #3904]
   2fda8:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   2fdac:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   2fdb0:	add	x1, x1, #0xba8
   2fdb4:	ldr	x0, [x19]
   2fdb8:	add	x2, x2, #0xbb7
   2fdbc:	mov	w3, #0x253                 	// #595
   2fdc0:	bl	6a60 <fprintf@plt>
   2fdc4:	ldr	x3, [x19]
   2fdc8:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   2fdcc:	add	x0, x0, #0xc3d
   2fdd0:	mov	w1, #0x29                  	// #41
   2fdd4:	mov	w2, #0x1                   	// #1
   2fdd8:	bl	6920 <fwrite@plt>
   2fddc:	ldr	x1, [x19]
   2fde0:	mov	w0, #0xa                   	// #10
   2fde4:	bl	65a0 <fputc@plt>
   2fde8:	bl	67b0 <abort@plt>
   2fdec:	sub	sp, sp, #0x80
   2fdf0:	stp	x29, x30, [sp, #32]
   2fdf4:	stp	x28, x27, [sp, #48]
   2fdf8:	stp	x26, x25, [sp, #64]
   2fdfc:	stp	x24, x23, [sp, #80]
   2fe00:	stp	x22, x21, [sp, #96]
   2fe04:	stp	x20, x19, [sp, #112]
   2fe08:	add	x29, sp, #0x20
   2fe0c:	mov	x24, x5
   2fe10:	mov	x25, x4
   2fe14:	mov	x21, x2
   2fe18:	mov	x23, x1
   2fe1c:	cmp	x4, #0x10
   2fe20:	mov	x20, x0
   2fe24:	b.hi	2fe5c <PyInit__decimal@@Base+0x292f8>  // b.pmore
   2fe28:	mov	x0, x20
   2fe2c:	mov	x1, x23
   2fe30:	mov	x2, x21
   2fe34:	mov	x3, x25
   2fe38:	mov	x4, x24
   2fe3c:	ldp	x20, x19, [sp, #112]
   2fe40:	ldp	x22, x21, [sp, #96]
   2fe44:	ldp	x24, x23, [sp, #80]
   2fe48:	ldp	x26, x25, [sp, #64]
   2fe4c:	ldp	x28, x27, [sp, #48]
   2fe50:	ldp	x29, x30, [sp, #32]
   2fe54:	add	sp, sp, #0x80
   2fe58:	b	1ae80 <PyInit__decimal@@Base+0x1431c>
   2fe5c:	add	x27, x25, #0x1
   2fe60:	lsr	x22, x27, #1
   2fe64:	mov	x19, x3
   2fe68:	cmp	x22, x24
   2fe6c:	b.cs	2ffd0 <PyInit__decimal@@Base+0x2946c>  // b.hs, b.nlast
   2fe70:	lsl	x26, x22, #3
   2fe74:	mov	x0, x19
   2fe78:	mov	x1, x23
   2fe7c:	mov	x2, x26
   2fe80:	bl	6460 <memcpy@plt>
   2fe84:	sub	x25, x25, x22
   2fe88:	add	x1, x23, x22, lsl #3
   2fe8c:	mov	x0, x19
   2fe90:	mov	x2, x25
   2fe94:	str	xzr, [x19, x22, lsl #3]
   2fe98:	str	x1, [sp, #16]
   2fe9c:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   2fea0:	add	x28, x22, #0x1
   2fea4:	stur	x27, [x29, #-8]
   2fea8:	add	x27, x19, x28, lsl #3
   2feac:	mov	x0, x27
   2feb0:	mov	x1, x21
   2feb4:	mov	x2, x26
   2feb8:	bl	6460 <memcpy@plt>
   2febc:	add	x26, x21, x22, lsl #3
   2fec0:	sub	x24, x24, x22
   2fec4:	add	x8, x28, x22
   2fec8:	mov	x0, x27
   2fecc:	mov	x1, x26
   2fed0:	mov	x2, x24
   2fed4:	str	xzr, [x19, x8, lsl #3]
   2fed8:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   2fedc:	add	x0, x20, x22, lsl #3
   2fee0:	add	x3, x19, x28, lsl #4
   2fee4:	mov	x1, x19
   2fee8:	mov	x2, x27
   2feec:	mov	x4, x28
   2fef0:	mov	x5, x28
   2fef4:	str	x0, [sp, #8]
   2fef8:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   2fefc:	mov	w27, #0x8                   	// #8
   2ff00:	bfi	x27, x25, #4, #60
   2ff04:	mov	x0, x19
   2ff08:	mov	w1, wzr
   2ff0c:	mov	x2, x27
   2ff10:	bl	6660 <memset@plt>
   2ff14:	ldr	x1, [sp, #16]
   2ff18:	add	x3, x19, x27
   2ff1c:	mov	x0, x19
   2ff20:	mov	x2, x26
   2ff24:	mov	x4, x25
   2ff28:	mov	x5, x24
   2ff2c:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   2ff30:	ldur	x27, [x29, #-8]
   2ff34:	add	x24, x25, x24
   2ff38:	mov	x1, x19
   2ff3c:	mov	x2, x24
   2ff40:	and	x26, x27, #0xfffffffffffffffe
   2ff44:	add	x0, x20, x26, lsl #3
   2ff48:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   2ff4c:	ldr	x25, [sp, #8]
   2ff50:	mov	x1, x19
   2ff54:	mov	x2, x24
   2ff58:	mov	x0, x25
   2ff5c:	bl	1ad70 <PyInit__decimal@@Base+0x1420c>
   2ff60:	lsl	x8, x27, #3
   2ff64:	orr	x24, x8, #0x8
   2ff68:	mov	x0, x19
   2ff6c:	mov	w1, wzr
   2ff70:	mov	x2, x24
   2ff74:	bl	6660 <memset@plt>
   2ff78:	add	x3, x19, x24
   2ff7c:	mov	x0, x19
   2ff80:	mov	x1, x23
   2ff84:	mov	x2, x21
   2ff88:	mov	x4, x22
   2ff8c:	mov	x5, x22
   2ff90:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   2ff94:	mov	x0, x20
   2ff98:	mov	x1, x19
   2ff9c:	mov	x2, x26
   2ffa0:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   2ffa4:	mov	x0, x25
   2ffa8:	mov	x1, x19
   2ffac:	mov	x2, x26
   2ffb0:	ldp	x20, x19, [sp, #112]
   2ffb4:	ldp	x22, x21, [sp, #96]
   2ffb8:	ldp	x24, x23, [sp, #80]
   2ffbc:	ldp	x26, x25, [sp, #64]
   2ffc0:	ldp	x28, x27, [sp, #48]
   2ffc4:	ldp	x29, x30, [sp, #32]
   2ffc8:	add	sp, sp, #0x80
   2ffcc:	b	1ad70 <PyInit__decimal@@Base+0x1420c>
   2ffd0:	sub	x25, x25, x22
   2ffd4:	mov	w26, #0x8                   	// #8
   2ffd8:	cmp	x25, x24
   2ffdc:	b.cs	30010 <PyInit__decimal@@Base+0x294ac>  // b.hs, b.nlast
   2ffe0:	bfi	x26, x24, #4, #60
   2ffe4:	mov	x0, x19
   2ffe8:	mov	w1, wzr
   2ffec:	mov	x2, x26
   2fff0:	bl	6660 <memset@plt>
   2fff4:	add	x2, x23, x22, lsl #3
   2fff8:	add	x3, x19, x26
   2fffc:	mov	x0, x19
   30000:	mov	x1, x21
   30004:	mov	x4, x24
   30008:	mov	x5, x25
   3000c:	b	3003c <PyInit__decimal@@Base+0x294d8>
   30010:	bfi	x26, x25, #4, #60
   30014:	mov	x0, x19
   30018:	mov	w1, wzr
   3001c:	mov	x2, x26
   30020:	bl	6660 <memset@plt>
   30024:	add	x1, x23, x22, lsl #3
   30028:	add	x3, x19, x26
   3002c:	mov	x0, x19
   30030:	mov	x2, x21
   30034:	mov	x4, x25
   30038:	mov	x5, x24
   3003c:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   30040:	add	x0, x20, x22, lsl #3
   30044:	add	x2, x25, x24
   30048:	mov	x1, x19
   3004c:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30050:	lsl	x8, x27, #3
   30054:	orr	x25, x8, #0x8
   30058:	mov	x0, x19
   3005c:	mov	w1, wzr
   30060:	mov	x2, x25
   30064:	bl	6660 <memset@plt>
   30068:	add	x3, x19, x25
   3006c:	mov	x0, x19
   30070:	mov	x1, x23
   30074:	mov	x2, x21
   30078:	mov	x4, x22
   3007c:	mov	x5, x24
   30080:	bl	2fdec <PyInit__decimal@@Base+0x29288>
   30084:	add	x2, x22, x24
   30088:	mov	x0, x20
   3008c:	mov	x1, x19
   30090:	ldp	x20, x19, [sp, #112]
   30094:	ldp	x22, x21, [sp, #96]
   30098:	ldp	x24, x23, [sp, #80]
   3009c:	ldp	x26, x25, [sp, #64]
   300a0:	ldp	x28, x27, [sp, #48]
   300a4:	ldp	x29, x30, [sp, #32]
   300a8:	add	sp, sp, #0x80
   300ac:	b	1ab64 <PyInit__decimal@@Base+0x14000>
   300b0:	sub	sp, sp, #0x90
   300b4:	stp	x29, x30, [sp, #48]
   300b8:	stp	x28, x27, [sp, #64]
   300bc:	stp	x26, x25, [sp, #80]
   300c0:	stp	x24, x23, [sp, #96]
   300c4:	stp	x22, x21, [sp, #112]
   300c8:	stp	x20, x19, [sp, #128]
   300cc:	add	x29, sp, #0x30
   300d0:	mov	x8, #0x180000000           	// #6442450944
   300d4:	mov	x24, x5
   300d8:	mov	x25, x4
   300dc:	mov	x21, x2
   300e0:	mov	x22, x1
   300e4:	cmp	x4, x8
   300e8:	mov	x28, x0
   300ec:	b.hi	30114 <PyInit__decimal@@Base+0x295b0>  // b.pmore
   300f0:	cmp	x24, #0xc0
   300f4:	b.hi	30284 <PyInit__decimal@@Base+0x29720>  // b.pmore
   300f8:	mov	x0, x28
   300fc:	mov	x1, x21
   30100:	mov	x2, x22
   30104:	mov	x3, x24
   30108:	mov	x4, x25
   3010c:	bl	1ae80 <PyInit__decimal@@Base+0x1431c>
   30110:	b	30398 <PyInit__decimal@@Base+0x29834>
   30114:	add	x19, x25, #0x1
   30118:	lsr	x23, x19, #1
   3011c:	mov	x20, x3
   30120:	cmp	x23, x24
   30124:	b.cs	302cc <PyInit__decimal@@Base+0x29768>  // b.hs, b.nlast
   30128:	lsl	x27, x23, #3
   3012c:	mov	x0, x20
   30130:	mov	x1, x22
   30134:	mov	x2, x27
   30138:	str	x19, [sp, #8]
   3013c:	bl	6460 <memcpy@plt>
   30140:	add	x1, x22, x23, lsl #3
   30144:	sub	x2, x25, x23
   30148:	mov	x0, x20
   3014c:	str	xzr, [x20, x23, lsl #3]
   30150:	str	x1, [sp, #24]
   30154:	stur	x2, [x29, #-16]
   30158:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   3015c:	add	x19, x23, #0x1
   30160:	add	x26, x20, x19, lsl #3
   30164:	mov	x0, x26
   30168:	mov	x1, x21
   3016c:	mov	x2, x27
   30170:	bl	6460 <memcpy@plt>
   30174:	add	x25, x21, x23, lsl #3
   30178:	sub	x27, x24, x23
   3017c:	add	x8, x19, x23
   30180:	mov	x0, x26
   30184:	mov	x1, x25
   30188:	mov	x2, x27
   3018c:	str	xzr, [x20, x8, lsl #3]
   30190:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30194:	add	x24, x28, x23, lsl #3
   30198:	add	x3, x20, x19, lsl #4
   3019c:	mov	x0, x24
   301a0:	mov	x1, x20
   301a4:	mov	x2, x26
   301a8:	mov	x4, x19
   301ac:	mov	x5, x19
   301b0:	str	x28, [sp, #16]
   301b4:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   301b8:	cbz	w0, 3039c <PyInit__decimal@@Base+0x29838>
   301bc:	ldur	x26, [x29, #-16]
   301c0:	mov	w19, #0x8                   	// #8
   301c4:	mov	x0, x20
   301c8:	mov	w1, wzr
   301cc:	bfi	x19, x26, #4, #60
   301d0:	mov	x2, x19
   301d4:	bl	6660 <memset@plt>
   301d8:	ldr	x1, [sp, #24]
   301dc:	add	x3, x20, x19
   301e0:	mov	x0, x20
   301e4:	mov	x2, x25
   301e8:	mov	x4, x26
   301ec:	mov	x5, x27
   301f0:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   301f4:	cbz	w0, 3039c <PyInit__decimal@@Base+0x29838>
   301f8:	ldp	x25, x28, [sp, #8]
   301fc:	ldur	x8, [x29, #-16]
   30200:	mov	x1, x20
   30204:	and	x26, x25, #0xfffffffffffffffe
   30208:	add	x19, x8, x27
   3020c:	add	x0, x28, x26, lsl #3
   30210:	mov	x2, x19
   30214:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30218:	mov	x0, x24
   3021c:	mov	x1, x20
   30220:	mov	x2, x19
   30224:	bl	1ad70 <PyInit__decimal@@Base+0x1420c>
   30228:	lsl	x8, x25, #3
   3022c:	orr	x19, x8, #0x8
   30230:	mov	x0, x20
   30234:	mov	w1, wzr
   30238:	mov	x2, x19
   3023c:	bl	6660 <memset@plt>
   30240:	add	x3, x20, x19
   30244:	mov	x0, x20
   30248:	mov	x1, x22
   3024c:	mov	x2, x21
   30250:	mov	x4, x23
   30254:	mov	x5, x23
   30258:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   3025c:	cbz	w0, 3039c <PyInit__decimal@@Base+0x29838>
   30260:	mov	x0, x28
   30264:	mov	x1, x20
   30268:	mov	x2, x26
   3026c:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30270:	mov	x0, x24
   30274:	mov	x1, x20
   30278:	mov	x2, x26
   3027c:	bl	1ad70 <PyInit__decimal@@Base+0x1420c>
   30280:	b	30398 <PyInit__decimal@@Base+0x29834>
   30284:	sub	x4, x29, #0x8
   30288:	mov	x0, x22
   3028c:	mov	x1, x21
   30290:	mov	x2, x25
   30294:	mov	x3, x24
   30298:	bl	2f950 <PyInit__decimal@@Base+0x28dec>
   3029c:	cbz	x0, 3039c <PyInit__decimal@@Base+0x29838>
   302a0:	mov	x20, x0
   302a4:	add	x8, x24, x25
   302a8:	lsl	x2, x8, #3
   302ac:	mov	x0, x28
   302b0:	mov	x1, x20
   302b4:	bl	6460 <memcpy@plt>
   302b8:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   302bc:	ldr	x8, [x8, #1384]
   302c0:	mov	x0, x20
   302c4:	blr	x8
   302c8:	b	30398 <PyInit__decimal@@Base+0x29834>
   302cc:	sub	x25, x25, x23
   302d0:	mov	w26, #0x8                   	// #8
   302d4:	cmp	x25, x24
   302d8:	b.cs	3030c <PyInit__decimal@@Base+0x297a8>  // b.hs, b.nlast
   302dc:	bfi	x26, x24, #4, #60
   302e0:	mov	x0, x20
   302e4:	mov	w1, wzr
   302e8:	mov	x2, x26
   302ec:	bl	6660 <memset@plt>
   302f0:	add	x2, x22, x23, lsl #3
   302f4:	add	x3, x20, x26
   302f8:	mov	x0, x20
   302fc:	mov	x1, x21
   30300:	mov	x4, x24
   30304:	mov	x5, x25
   30308:	b	30338 <PyInit__decimal@@Base+0x297d4>
   3030c:	bfi	x26, x25, #4, #60
   30310:	mov	x0, x20
   30314:	mov	w1, wzr
   30318:	mov	x2, x26
   3031c:	bl	6660 <memset@plt>
   30320:	add	x1, x22, x23, lsl #3
   30324:	add	x3, x20, x26
   30328:	mov	x0, x20
   3032c:	mov	x2, x21
   30330:	mov	x4, x25
   30334:	mov	x5, x24
   30338:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   3033c:	cbz	w0, 3039c <PyInit__decimal@@Base+0x29838>
   30340:	add	x0, x28, x23, lsl #3
   30344:	add	x2, x25, x24
   30348:	mov	x1, x20
   3034c:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30350:	lsl	x8, x19, #3
   30354:	orr	x25, x8, #0x8
   30358:	mov	x0, x20
   3035c:	mov	w1, wzr
   30360:	mov	x2, x25
   30364:	bl	6660 <memset@plt>
   30368:	add	x3, x20, x25
   3036c:	mov	x0, x20
   30370:	mov	x1, x22
   30374:	mov	x2, x21
   30378:	mov	x4, x23
   3037c:	mov	x5, x24
   30380:	bl	300b0 <PyInit__decimal@@Base+0x2954c>
   30384:	cbz	w0, 3039c <PyInit__decimal@@Base+0x29838>
   30388:	add	x2, x23, x24
   3038c:	mov	x0, x28
   30390:	mov	x1, x20
   30394:	bl	1ab64 <PyInit__decimal@@Base+0x14000>
   30398:	mov	w0, #0x1                   	// #1
   3039c:	ldp	x20, x19, [sp, #128]
   303a0:	ldp	x22, x21, [sp, #112]
   303a4:	ldp	x24, x23, [sp, #96]
   303a8:	ldp	x26, x25, [sp, #80]
   303ac:	ldp	x28, x27, [sp, #64]
   303b0:	ldp	x29, x30, [sp, #48]
   303b4:	add	sp, sp, #0x90
   303b8:	ret
   303bc:	stp	x29, x30, [sp, #-48]!
   303c0:	stp	x22, x21, [sp, #16]
   303c4:	stp	x20, x19, [sp, #32]
   303c8:	mov	x29, sp
   303cc:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   303d0:	add	x8, x8, #0xc20
   303d4:	ldr	x19, [x8, w2, sxtw #3]
   303d8:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   303dc:	add	x8, x8, #0xc38
   303e0:	ldr	x20, [x8, w2, sxtw #3]
   303e4:	sub	x8, x19, #0x1
   303e8:	cmn	w1, #0x1
   303ec:	udiv	x22, x8, x0
   303f0:	b.eq	30438 <PyInit__decimal@@Base+0x298d4>  // b.none
   303f4:	cmp	x8, x0
   303f8:	b.cc	3047c <PyInit__decimal@@Base+0x29918>  // b.lo, b.ul, b.last
   303fc:	mov	w21, #0x1                   	// #1
   30400:	tbz	w22, #0, 30418 <PyInit__decimal@@Base+0x298b4>
   30404:	mov	x0, x21
   30408:	mov	x1, x20
   3040c:	mov	x2, x19
   30410:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30414:	mov	x21, x0
   30418:	mov	x0, x20
   3041c:	mov	x1, x20
   30420:	mov	x2, x19
   30424:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30428:	lsr	x22, x22, #1
   3042c:	mov	x20, x0
   30430:	cbnz	x22, 30400 <PyInit__decimal@@Base+0x2989c>
   30434:	b	30480 <PyInit__decimal@@Base+0x2991c>
   30438:	subs	x22, x8, x22
   3043c:	b.eq	3047c <PyInit__decimal@@Base+0x29918>  // b.none
   30440:	mov	w21, #0x1                   	// #1
   30444:	tbz	w22, #0, 3045c <PyInit__decimal@@Base+0x298f8>
   30448:	mov	x0, x21
   3044c:	mov	x1, x20
   30450:	mov	x2, x19
   30454:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30458:	mov	x21, x0
   3045c:	mov	x0, x20
   30460:	mov	x1, x20
   30464:	mov	x2, x19
   30468:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   3046c:	lsr	x22, x22, #1
   30470:	mov	x20, x0
   30474:	cbnz	x22, 30444 <PyInit__decimal@@Base+0x298e0>
   30478:	b	30480 <PyInit__decimal@@Base+0x2991c>
   3047c:	mov	w21, #0x1                   	// #1
   30480:	mov	x0, x21
   30484:	ldp	x20, x19, [sp, #32]
   30488:	ldp	x22, x21, [sp, #16]
   3048c:	ldp	x29, x30, [sp], #48
   30490:	ret
   30494:	stp	x29, x30, [sp, #-64]!
   30498:	stp	x24, x23, [sp, #16]
   3049c:	stp	x22, x21, [sp, #32]
   304a0:	stp	x20, x19, [sp, #48]
   304a4:	mov	x29, sp
   304a8:	lsr	x19, x0, #1
   304ac:	mov	w23, w2
   304b0:	mov	w22, w1
   304b4:	mov	x24, x0
   304b8:	mov	w0, #0x18                  	// #24
   304bc:	mov	w2, #0x8                   	// #8
   304c0:	mov	x1, x19
   304c4:	bl	1f750 <PyInit__decimal@@Base+0x18bec>
   304c8:	mov	x20, x0
   304cc:	cbz	x0, 3051c <PyInit__decimal@@Base+0x299b8>
   304d0:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   304d4:	add	x8, x8, #0xc20
   304d8:	ldr	x21, [x8, w23, sxtw #3]
   304dc:	mov	x0, x24
   304e0:	mov	w1, w22
   304e4:	mov	w2, w23
   304e8:	bl	303bc <PyInit__decimal@@Base+0x29858>
   304ec:	str	w23, [x20]
   304f0:	stp	x21, x0, [x20, #8]
   304f4:	cbz	x19, 3051c <PyInit__decimal@@Base+0x299b8>
   304f8:	mov	x22, x0
   304fc:	add	x23, x20, #0x18
   30500:	mov	w0, #0x1                   	// #1
   30504:	mov	x1, x22
   30508:	mov	x2, x21
   3050c:	str	x0, [x23], #8
   30510:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30514:	subs	x19, x19, #0x1
   30518:	b.ne	30504 <PyInit__decimal@@Base+0x299a0>  // b.any
   3051c:	mov	x0, x20
   30520:	ldp	x20, x19, [sp, #48]
   30524:	ldp	x22, x21, [sp, #32]
   30528:	ldp	x24, x23, [sp, #16]
   3052c:	ldp	x29, x30, [sp], #64
   30530:	ret
   30534:	umulh	x8, x1, x0
   30538:	mul	x9, x1, x0
   3053c:	tbnz	x2, #32, 30588 <PyInit__decimal@@Base+0x29a24>
   30540:	tbnz	x2, #34, 305b4 <PyInit__decimal@@Base+0x29a50>
   30544:	subs	x9, x9, x8
   30548:	lsr	x10, x8, #24
   3054c:	cset	w11, cc  // cc = lo, ul, last
   30550:	adds	x8, x9, x8, lsl #40
   30554:	sub	x9, x10, x11
   30558:	cinc	x9, x9, cs  // cs = hs, nlast
   3055c:	subs	x8, x8, x9
   30560:	lsr	x10, x9, #24
   30564:	cset	w11, cc  // cc = lo, ul, last
   30568:	adds	x8, x8, x9, lsl #40
   3056c:	sub	x9, x10, x11
   30570:	cinc	x9, x9, cs  // cs = hs, nlast
   30574:	subs	x8, x8, x9
   30578:	lsr	x10, x9, #24
   3057c:	cset	w11, cc  // cc = lo, ul, last
   30580:	adds	x8, x8, x9, lsl #40
   30584:	b	305f4 <PyInit__decimal@@Base+0x29a90>
   30588:	subs	x9, x9, x8
   3058c:	lsr	x10, x8, #32
   30590:	cset	w11, cc  // cc = lo, ul, last
   30594:	adds	x8, x9, x8, lsl #32
   30598:	sub	x9, x10, x11
   3059c:	cinc	x9, x9, cs  // cs = hs, nlast
   305a0:	subs	x8, x8, x9
   305a4:	lsr	x10, x9, #32
   305a8:	cset	w11, cc  // cc = lo, ul, last
   305ac:	adds	x8, x8, x9, lsl #32
   305b0:	b	305f4 <PyInit__decimal@@Base+0x29a90>
   305b4:	subs	x9, x9, x8
   305b8:	lsr	x10, x8, #30
   305bc:	cset	w11, cc  // cc = lo, ul, last
   305c0:	adds	x8, x9, x8, lsl #34
   305c4:	sub	x9, x10, x11
   305c8:	cinc	x9, x9, cs  // cs = hs, nlast
   305cc:	subs	x8, x8, x9
   305d0:	lsr	x10, x9, #30
   305d4:	cset	w11, cc  // cc = lo, ul, last
   305d8:	adds	x8, x8, x9, lsl #34
   305dc:	sub	x9, x10, x11
   305e0:	cinc	x9, x9, cs  // cs = hs, nlast
   305e4:	subs	x8, x8, x9
   305e8:	lsr	x10, x9, #30
   305ec:	cset	w11, cc  // cc = lo, ul, last
   305f0:	adds	x8, x8, x9, lsl #34
   305f4:	sub	x9, x10, x11
   305f8:	cset	w10, cs  // cs = hs, nlast
   305fc:	sbfx	x10, x10, #0, #1
   30600:	cmp	x9, x10
   30604:	ccmp	x8, x2, #0x2, eq  // eq = none
   30608:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   3060c:	sub	x0, x8, x9
   30610:	ret
   30614:	stp	x29, x30, [sp, #-64]!
   30618:	str	x23, [sp, #16]
   3061c:	stp	x22, x21, [sp, #32]
   30620:	stp	x20, x19, [sp, #48]
   30624:	mov	x29, sp
   30628:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   3062c:	add	x8, x8, #0xc20
   30630:	ldr	x20, [x8, w2, sxtw #3]
   30634:	mov	x19, x0
   30638:	mov	w0, #0x3                   	// #3
   3063c:	bl	303bc <PyInit__decimal@@Base+0x29858>
   30640:	mov	x22, x0
   30644:	mov	w21, #0x1                   	// #1
   30648:	mov	w23, #0x2                   	// #2
   3064c:	stp	x21, x0, [x19]
   30650:	tbz	w23, #0, 30668 <PyInit__decimal@@Base+0x29b04>
   30654:	mov	x0, x21
   30658:	mov	x1, x22
   3065c:	mov	x2, x20
   30660:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30664:	mov	x21, x0
   30668:	mov	x0, x22
   3066c:	mov	x1, x22
   30670:	mov	x2, x20
   30674:	bl	30534 <PyInit__decimal@@Base+0x299d0>
   30678:	lsr	x23, x23, #1
   3067c:	mov	x22, x0
   30680:	cbnz	x23, 30650 <PyInit__decimal@@Base+0x29aec>
   30684:	str	x21, [x19, #16]
   30688:	ldp	x20, x19, [sp, #48]
   3068c:	ldp	x22, x21, [sp, #32]
   30690:	ldr	x23, [sp, #16]
   30694:	ldp	x29, x30, [sp], #64
   30698:	ret
   3069c:	sub	sp, sp, #0xa0
   306a0:	stp	x29, x30, [sp, #64]
   306a4:	stp	x28, x27, [sp, #80]
   306a8:	stp	x26, x25, [sp, #96]
   306ac:	stp	x24, x23, [sp, #112]
   306b0:	stp	x22, x21, [sp, #128]
   306b4:	stp	x20, x19, [sp, #144]
   306b8:	add	x29, sp, #0x40
   306bc:	lsr	x8, x1, #32
   306c0:	cmp	x8, #0x0
   306c4:	mov	w9, #0x10                  	// #16
   306c8:	cset	w11, ne  // ne = any
   306cc:	csel	x8, x1, x8, eq  // eq = none
   306d0:	lsl	w12, w11, #5
   306d4:	bfi	w9, w11, #5, #1
   306d8:	lsr	x11, x8, #16
   306dc:	cmp	x11, #0x0
   306e0:	csel	x8, x8, x11, eq  // eq = none
   306e4:	lsr	x11, x8, #8
   306e8:	csel	w9, w12, w9, eq  // eq = none
   306ec:	cmp	x11, #0x0
   306f0:	csel	x8, x8, x11, eq  // eq = none
   306f4:	orr	w12, w9, #0x8
   306f8:	lsr	x11, x8, #4
   306fc:	csel	w9, w9, w12, eq  // eq = none
   30700:	cmp	x11, #0x0
   30704:	csel	x8, x8, x11, eq  // eq = none
   30708:	orr	w12, w9, #0x4
   3070c:	lsr	x11, x8, #2
   30710:	csel	w9, w9, w12, eq  // eq = none
   30714:	cmp	x11, #0x0
   30718:	csel	x8, x8, x11, eq  // eq = none
   3071c:	add	w12, w9, #0x2
   30720:	lsr	x11, x8, #1
   30724:	csel	w9, w9, w12, eq  // eq = none
   30728:	cmp	x11, #0x0
   3072c:	csel	w8, w8, w11, eq  // eq = none
   30730:	cinc	w9, w9, ne  // ne = any
   30734:	add	w8, w9, w8
   30738:	sub	w8, w8, #0x1
   3073c:	sxtw	x8, w8
   30740:	mov	w10, #0x1                   	// #1
   30744:	lsr	x9, x8, #1
   30748:	sub	x20, x8, x8, lsr #1
   3074c:	lsl	x21, x10, x9
   30750:	lsl	x28, x10, x20
   30754:	mov	w23, w2
   30758:	mov	x24, x1
   3075c:	mov	x1, x28
   30760:	mov	x2, x21
   30764:	mov	x22, x0
   30768:	stur	x9, [x29, #-16]
   3076c:	bl	30dcc <PyInit__decimal@@Base+0x2a268>
   30770:	cbz	w0, 30978 <PyInit__decimal@@Base+0x29e14>
   30774:	mov	w1, #0xffffffff            	// #-1
   30778:	mov	x0, x28
   3077c:	mov	w2, w23
   30780:	bl	30494 <PyInit__decimal@@Base+0x29930>
   30784:	cbz	x0, 30978 <PyInit__decimal@@Base+0x29e14>
   30788:	add	x27, x22, x24, lsl #3
   3078c:	mov	x26, x0
   30790:	cmp	x27, x22
   30794:	b.ls	307bc <PyInit__decimal@@Base+0x29c58>  // b.plast
   30798:	lsl	x19, x28, #3
   3079c:	mov	x25, x22
   307a0:	mov	x0, x25
   307a4:	mov	x1, x28
   307a8:	mov	x2, x26
   307ac:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   307b0:	add	x25, x25, x19
   307b4:	cmp	x25, x27
   307b8:	b.cc	307a0 <PyInit__decimal@@Base+0x29c3c>  // b.lo, b.ul, b.last
   307bc:	mov	x0, x22
   307c0:	mov	x1, x21
   307c4:	mov	x2, x28
   307c8:	bl	30dcc <PyInit__decimal@@Base+0x2a268>
   307cc:	cbz	w0, 30900 <PyInit__decimal@@Base+0x29d9c>
   307d0:	mov	w1, #0xffffffff            	// #-1
   307d4:	mov	x0, x24
   307d8:	mov	w2, w23
   307dc:	stp	x27, x26, [sp]
   307e0:	str	w23, [sp, #20]
   307e4:	bl	303bc <PyInit__decimal@@Base+0x29858>
   307e8:	stur	x0, [x29, #-24]
   307ec:	cbz	x20, 308ec <PyInit__decimal@@Base+0x29d88>
   307f0:	ldr	w9, [sp, #20]
   307f4:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   307f8:	add	x8, x8, #0xc20
   307fc:	mov	w20, #0x1                   	// #1
   30800:	ldr	x25, [x8, w9, sxtw #3]
   30804:	stp	x28, x22, [sp, #24]
   30808:	ldur	x27, [x29, #-24]
   3080c:	mov	w26, #0x1                   	// #1
   30810:	mov	x19, x20
   30814:	tbz	w19, #0, 3082c <PyInit__decimal@@Base+0x29cc8>
   30818:	mov	x0, x26
   3081c:	mov	x1, x27
   30820:	mov	x2, x25
   30824:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30828:	mov	x26, x0
   3082c:	mov	x0, x27
   30830:	mov	x1, x27
   30834:	mov	x2, x25
   30838:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   3083c:	lsr	x19, x19, #1
   30840:	mov	x27, x0
   30844:	cbnz	x19, 30814 <PyInit__decimal@@Base+0x29cb0>
   30848:	mov	x0, x26
   3084c:	mov	x1, x26
   30850:	mov	x2, x25
   30854:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30858:	ldur	x8, [x29, #-16]
   3085c:	mov	x27, x0
   30860:	mov	x23, xzr
   30864:	mov	w28, #0x1                   	// #1
   30868:	lsl	x8, x20, x8
   3086c:	add	x19, x22, x8, lsl #3
   30870:	stur	x20, [x29, #-8]
   30874:	add	x22, x19, x23, lsl #3
   30878:	ldp	x0, x20, [x22]
   3087c:	mov	x1, x28
   30880:	mov	x2, x25
   30884:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30888:	mov	x24, x0
   3088c:	mov	x0, x20
   30890:	mov	x1, x26
   30894:	mov	x2, x25
   30898:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   3089c:	mov	x20, x0
   308a0:	mov	x0, x28
   308a4:	mov	x1, x27
   308a8:	mov	x2, x25
   308ac:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   308b0:	mov	x28, x0
   308b4:	mov	x0, x26
   308b8:	mov	x1, x27
   308bc:	mov	x2, x25
   308c0:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   308c4:	add	x23, x23, #0x2
   308c8:	mov	x26, x0
   308cc:	cmp	x23, x21
   308d0:	stp	x24, x20, [x22]
   308d4:	b.cc	30874 <PyInit__decimal@@Base+0x29d10>  // b.lo, b.ul, b.last
   308d8:	ldur	x20, [x29, #-8]
   308dc:	ldp	x28, x22, [sp, #24]
   308e0:	add	x20, x20, #0x1
   308e4:	cmp	x20, x28
   308e8:	b.cc	30808 <PyInit__decimal@@Base+0x29ca4>  // b.lo, b.ul, b.last
   308ec:	cmp	x21, x28
   308f0:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   308f4:	b.ne	30918 <PyInit__decimal@@Base+0x29db4>  // b.any
   308f8:	ldp	x24, x23, [sp]
   308fc:	b	30940 <PyInit__decimal@@Base+0x29ddc>
   30900:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   30904:	ldr	x8, [x8, #1384]
   30908:	mov	x0, x26
   3090c:	blr	x8
   30910:	mov	w0, wzr
   30914:	b	30978 <PyInit__decimal@@Base+0x29e14>
   30918:	ldr	x8, [x19, #1384]
   3091c:	ldr	x0, [sp, #8]
   30920:	blr	x8
   30924:	ldr	w2, [sp, #20]
   30928:	mov	w1, #0xffffffff            	// #-1
   3092c:	mov	x0, x21
   30930:	bl	30494 <PyInit__decimal@@Base+0x29930>
   30934:	ldr	x24, [sp]
   30938:	mov	x23, x0
   3093c:	cbz	x0, 30978 <PyInit__decimal@@Base+0x29e14>
   30940:	cmp	x24, x22
   30944:	b.ls	30968 <PyInit__decimal@@Base+0x29e04>  // b.plast
   30948:	lsl	x20, x21, #3
   3094c:	mov	x0, x22
   30950:	mov	x1, x21
   30954:	mov	x2, x23
   30958:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   3095c:	add	x22, x22, x20
   30960:	cmp	x22, x24
   30964:	b.cc	3094c <PyInit__decimal@@Base+0x29de8>  // b.lo, b.ul, b.last
   30968:	ldr	x8, [x19, #1384]
   3096c:	mov	x0, x23
   30970:	blr	x8
   30974:	mov	w0, #0x1                   	// #1
   30978:	ldp	x20, x19, [sp, #144]
   3097c:	ldp	x22, x21, [sp, #128]
   30980:	ldp	x24, x23, [sp, #112]
   30984:	ldp	x26, x25, [sp, #96]
   30988:	ldp	x28, x27, [sp, #80]
   3098c:	ldp	x29, x30, [sp, #64]
   30990:	add	sp, sp, #0xa0
   30994:	ret
   30998:	umulh	x8, x1, x0
   3099c:	mul	x9, x1, x0
   309a0:	tbnz	x2, #32, 309ec <PyInit__decimal@@Base+0x29e88>
   309a4:	tbnz	x2, #34, 30a18 <PyInit__decimal@@Base+0x29eb4>
   309a8:	subs	x9, x9, x8
   309ac:	lsr	x10, x8, #24
   309b0:	cset	w11, cc  // cc = lo, ul, last
   309b4:	adds	x8, x9, x8, lsl #40
   309b8:	sub	x9, x10, x11
   309bc:	cinc	x9, x9, cs  // cs = hs, nlast
   309c0:	subs	x8, x8, x9
   309c4:	lsr	x10, x9, #24
   309c8:	cset	w11, cc  // cc = lo, ul, last
   309cc:	adds	x8, x8, x9, lsl #40
   309d0:	sub	x9, x10, x11
   309d4:	cinc	x9, x9, cs  // cs = hs, nlast
   309d8:	subs	x8, x8, x9
   309dc:	lsr	x10, x9, #24
   309e0:	cset	w11, cc  // cc = lo, ul, last
   309e4:	adds	x8, x8, x9, lsl #40
   309e8:	b	30a58 <PyInit__decimal@@Base+0x29ef4>
   309ec:	subs	x9, x9, x8
   309f0:	lsr	x10, x8, #32
   309f4:	cset	w11, cc  // cc = lo, ul, last
   309f8:	adds	x8, x9, x8, lsl #32
   309fc:	sub	x9, x10, x11
   30a00:	cinc	x9, x9, cs  // cs = hs, nlast
   30a04:	subs	x8, x8, x9
   30a08:	lsr	x10, x9, #32
   30a0c:	cset	w11, cc  // cc = lo, ul, last
   30a10:	adds	x8, x8, x9, lsl #32
   30a14:	b	30a58 <PyInit__decimal@@Base+0x29ef4>
   30a18:	subs	x9, x9, x8
   30a1c:	lsr	x10, x8, #30
   30a20:	cset	w11, cc  // cc = lo, ul, last
   30a24:	adds	x8, x9, x8, lsl #34
   30a28:	sub	x9, x10, x11
   30a2c:	cinc	x9, x9, cs  // cs = hs, nlast
   30a30:	subs	x8, x8, x9
   30a34:	lsr	x10, x9, #30
   30a38:	cset	w11, cc  // cc = lo, ul, last
   30a3c:	adds	x8, x8, x9, lsl #34
   30a40:	sub	x9, x10, x11
   30a44:	cinc	x9, x9, cs  // cs = hs, nlast
   30a48:	subs	x8, x8, x9
   30a4c:	lsr	x10, x9, #30
   30a50:	cset	w11, cc  // cc = lo, ul, last
   30a54:	adds	x8, x8, x9, lsl #34
   30a58:	sub	x9, x10, x11
   30a5c:	cset	w10, cs  // cs = hs, nlast
   30a60:	sbfx	x10, x10, #0, #1
   30a64:	cmp	x9, x10
   30a68:	ccmp	x8, x2, #0x2, eq  // eq = none
   30a6c:	csel	x9, xzr, x2, cc  // cc = lo, ul, last
   30a70:	sub	x0, x8, x9
   30a74:	ret
   30a78:	sub	sp, sp, #0xa0
   30a7c:	stp	x29, x30, [sp, #64]
   30a80:	stp	x28, x27, [sp, #80]
   30a84:	stp	x26, x25, [sp, #96]
   30a88:	stp	x24, x23, [sp, #112]
   30a8c:	stp	x22, x21, [sp, #128]
   30a90:	stp	x20, x19, [sp, #144]
   30a94:	add	x29, sp, #0x40
   30a98:	lsr	x8, x1, #32
   30a9c:	cmp	x8, #0x0
   30aa0:	csel	x8, x1, x8, eq  // eq = none
   30aa4:	lsr	x12, x8, #16
   30aa8:	cset	w10, ne  // ne = any
   30aac:	cmp	x12, #0x0
   30ab0:	mov	w9, #0x10                  	// #16
   30ab4:	csel	x8, x8, x12, eq  // eq = none
   30ab8:	lsl	w11, w10, #5
   30abc:	bfi	w9, w10, #5, #1
   30ac0:	lsr	x10, x8, #8
   30ac4:	csel	w9, w11, w9, eq  // eq = none
   30ac8:	cmp	x10, #0x0
   30acc:	csel	x8, x8, x10, eq  // eq = none
   30ad0:	orr	w11, w9, #0x8
   30ad4:	lsr	x10, x8, #4
   30ad8:	csel	w9, w9, w11, eq  // eq = none
   30adc:	cmp	x10, #0x0
   30ae0:	csel	x8, x8, x10, eq  // eq = none
   30ae4:	orr	w11, w9, #0x4
   30ae8:	lsr	x10, x8, #2
   30aec:	csel	w9, w9, w11, eq  // eq = none
   30af0:	cmp	x10, #0x0
   30af4:	csel	x8, x8, x10, eq  // eq = none
   30af8:	add	w11, w9, #0x2
   30afc:	lsr	x10, x8, #1
   30b00:	csel	w9, w9, w11, eq  // eq = none
   30b04:	cmp	x10, #0x0
   30b08:	csel	w8, w8, w10, eq  // eq = none
   30b0c:	cinc	w9, w9, ne  // ne = any
   30b10:	add	w8, w9, w8
   30b14:	sub	w8, w8, #0x1
   30b18:	sxtw	x19, w8
   30b1c:	lsr	x8, x19, #1
   30b20:	mov	w20, #0x1                   	// #1
   30b24:	lsl	x21, x20, x8
   30b28:	mov	x24, x1
   30b2c:	mov	x23, x0
   30b30:	mov	w1, #0x1                   	// #1
   30b34:	mov	x0, x21
   30b38:	mov	w22, w2
   30b3c:	stur	x8, [x29, #-16]
   30b40:	bl	30494 <PyInit__decimal@@Base+0x29930>
   30b44:	cbz	x0, 30d60 <PyInit__decimal@@Base+0x2a1fc>
   30b48:	sub	x19, x19, x19, lsr #1
   30b4c:	add	x28, x23, x24, lsl #3
   30b50:	mov	x27, x0
   30b54:	cmp	x28, x23
   30b58:	lsl	x26, x20, x19
   30b5c:	b.ls	30b84 <PyInit__decimal@@Base+0x2a020>  // b.plast
   30b60:	lsl	x20, x21, #3
   30b64:	mov	x25, x23
   30b68:	mov	x0, x25
   30b6c:	mov	x1, x21
   30b70:	mov	x2, x27
   30b74:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   30b78:	add	x25, x25, x20
   30b7c:	cmp	x25, x28
   30b80:	b.cc	30b68 <PyInit__decimal@@Base+0x2a004>  // b.lo, b.ul, b.last
   30b84:	mov	w1, #0x1                   	// #1
   30b88:	mov	x0, x24
   30b8c:	mov	w2, w22
   30b90:	str	x28, [sp]
   30b94:	str	x27, [sp, #16]
   30b98:	str	w22, [sp, #12]
   30b9c:	bl	303bc <PyInit__decimal@@Base+0x29858>
   30ba0:	stur	x0, [x29, #-24]
   30ba4:	cbz	x19, 30ca4 <PyInit__decimal@@Base+0x2a140>
   30ba8:	ldr	w9, [sp, #12]
   30bac:	adrp	x8, 37000 <PyInit__decimal@@Base+0x3049c>
   30bb0:	add	x8, x8, #0xc20
   30bb4:	mov	w20, #0x1                   	// #1
   30bb8:	ldr	x25, [x8, w9, sxtw #3]
   30bbc:	stp	x26, x23, [sp, #24]
   30bc0:	ldur	x27, [x29, #-24]
   30bc4:	mov	w26, #0x1                   	// #1
   30bc8:	mov	x19, x20
   30bcc:	tbz	w19, #0, 30be4 <PyInit__decimal@@Base+0x2a080>
   30bd0:	mov	x0, x26
   30bd4:	mov	x1, x27
   30bd8:	mov	x2, x25
   30bdc:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30be0:	mov	x26, x0
   30be4:	mov	x0, x27
   30be8:	mov	x1, x27
   30bec:	mov	x2, x25
   30bf0:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30bf4:	lsr	x19, x19, #1
   30bf8:	mov	x27, x0
   30bfc:	cbnz	x19, 30bcc <PyInit__decimal@@Base+0x2a068>
   30c00:	mov	x0, x26
   30c04:	mov	x1, x26
   30c08:	mov	x2, x25
   30c0c:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30c10:	ldur	x8, [x29, #-16]
   30c14:	mov	x27, x0
   30c18:	mov	x22, xzr
   30c1c:	mov	w28, #0x1                   	// #1
   30c20:	lsl	x8, x20, x8
   30c24:	add	x24, x23, x8, lsl #3
   30c28:	stur	x20, [x29, #-8]
   30c2c:	add	x23, x24, x22, lsl #3
   30c30:	ldp	x0, x20, [x23]
   30c34:	mov	x1, x28
   30c38:	mov	x2, x25
   30c3c:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30c40:	mov	x19, x0
   30c44:	mov	x0, x20
   30c48:	mov	x1, x26
   30c4c:	mov	x2, x25
   30c50:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30c54:	mov	x20, x0
   30c58:	mov	x0, x28
   30c5c:	mov	x1, x27
   30c60:	mov	x2, x25
   30c64:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30c68:	mov	x28, x0
   30c6c:	mov	x0, x26
   30c70:	mov	x1, x27
   30c74:	mov	x2, x25
   30c78:	bl	30998 <PyInit__decimal@@Base+0x29e34>
   30c7c:	add	x22, x22, #0x2
   30c80:	mov	x26, x0
   30c84:	cmp	x22, x21
   30c88:	stp	x19, x20, [x23]
   30c8c:	b.cc	30c2c <PyInit__decimal@@Base+0x2a0c8>  // b.lo, b.ul, b.last
   30c90:	ldur	x20, [x29, #-8]
   30c94:	ldp	x26, x23, [sp, #24]
   30c98:	add	x20, x20, #0x1
   30c9c:	cmp	x20, x26
   30ca0:	b.cc	30bc0 <PyInit__decimal@@Base+0x2a05c>  // b.lo, b.ul, b.last
   30ca4:	mov	x0, x23
   30ca8:	mov	x1, x26
   30cac:	mov	x2, x21
   30cb0:	bl	30dcc <PyInit__decimal@@Base+0x2a268>
   30cb4:	cbz	w0, 30cd0 <PyInit__decimal@@Base+0x2a16c>
   30cb8:	cmp	x26, x21
   30cbc:	adrp	x19, 4c000 <PyInit__decimal@@Base+0x4549c>
   30cc0:	b.ne	30ce8 <PyInit__decimal@@Base+0x2a184>  // b.any
   30cc4:	ldr	x24, [sp, #16]
   30cc8:	ldr	x25, [sp]
   30ccc:	b	30d10 <PyInit__decimal@@Base+0x2a1ac>
   30cd0:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   30cd4:	ldr	x8, [x8, #1384]
   30cd8:	ldr	x0, [sp, #16]
   30cdc:	blr	x8
   30ce0:	mov	w0, wzr
   30ce4:	b	30d60 <PyInit__decimal@@Base+0x2a1fc>
   30ce8:	ldr	x8, [x19, #1384]
   30cec:	ldr	x0, [sp, #16]
   30cf0:	blr	x8
   30cf4:	ldr	w2, [sp, #12]
   30cf8:	mov	w1, #0x1                   	// #1
   30cfc:	mov	x0, x26
   30d00:	bl	30494 <PyInit__decimal@@Base+0x29930>
   30d04:	ldr	x25, [sp]
   30d08:	mov	x24, x0
   30d0c:	cbz	x0, 30d60 <PyInit__decimal@@Base+0x2a1fc>
   30d10:	cmp	x25, x23
   30d14:	b.ls	30d3c <PyInit__decimal@@Base+0x2a1d8>  // b.plast
   30d18:	lsl	x22, x26, #3
   30d1c:	mov	x20, x23
   30d20:	mov	x0, x20
   30d24:	mov	x1, x26
   30d28:	mov	x2, x24
   30d2c:	bl	1c8dc <PyInit__decimal@@Base+0x15d78>
   30d30:	add	x20, x20, x22
   30d34:	cmp	x20, x25
   30d38:	b.cc	30d20 <PyInit__decimal@@Base+0x2a1bc>  // b.lo, b.ul, b.last
   30d3c:	ldr	x8, [x19, #1384]
   30d40:	mov	x0, x24
   30d44:	blr	x8
   30d48:	mov	x0, x23
   30d4c:	mov	x1, x21
   30d50:	mov	x2, x26
   30d54:	bl	30dcc <PyInit__decimal@@Base+0x2a268>
   30d58:	cmp	w0, #0x0
   30d5c:	cset	w0, ne  // ne = any
   30d60:	ldp	x20, x19, [sp, #144]
   30d64:	ldp	x22, x21, [sp, #128]
   30d68:	ldp	x24, x23, [sp, #112]
   30d6c:	ldp	x26, x25, [sp, #96]
   30d70:	ldp	x28, x27, [sp, #80]
   30d74:	ldp	x29, x30, [sp, #64]
   30d78:	add	sp, sp, #0xa0
   30d7c:	ret
   30d80:	cbz	x2, 30dc8 <PyInit__decimal@@Base+0x2a264>
   30d84:	mov	x8, xzr
   30d88:	lsl	x9, x3, #3
   30d8c:	lsl	x10, x2, #3
   30d90:	cbz	x3, 30db4 <PyInit__decimal@@Base+0x2a250>
   30d94:	mov	x11, x0
   30d98:	mov	x12, x1
   30d9c:	mov	x13, x3
   30da0:	ldr	x14, [x12], #8
   30da4:	subs	x13, x13, #0x1
   30da8:	str	x14, [x11]
   30dac:	add	x11, x11, x10
   30db0:	b.ne	30da0 <PyInit__decimal@@Base+0x2a23c>  // b.any
   30db4:	add	x8, x8, #0x1
   30db8:	add	x1, x1, x9
   30dbc:	cmp	x8, x2
   30dc0:	add	x0, x0, #0x8
   30dc4:	b.ne	30d90 <PyInit__decimal@@Base+0x2a22c>  // b.any
   30dc8:	ret
   30dcc:	stp	x29, x30, [sp, #-48]!
   30dd0:	stp	x22, x21, [sp, #16]
   30dd4:	stp	x20, x19, [sp, #32]
   30dd8:	mov	x29, sp
   30ddc:	umulh	x8, x2, x1
   30de0:	cmp	xzr, x8
   30de4:	b.ne	30eb4 <PyInit__decimal@@Base+0x2a350>  // b.any
   30de8:	mov	x21, x2
   30dec:	mov	x19, x1
   30df0:	mov	x20, x0
   30df4:	cmp	x2, x1
   30df8:	b.ne	30e08 <PyInit__decimal@@Base+0x2a2a4>  // b.any
   30dfc:	mov	x0, x20
   30e00:	mov	x1, x21
   30e04:	b	30e50 <PyInit__decimal@@Base+0x2a2ec>
   30e08:	adds	x8, x19, x19
   30e0c:	b.cs	30eb4 <PyInit__decimal@@Base+0x2a350>  // b.hs, b.nlast
   30e10:	cmp	x8, x21
   30e14:	mul	x22, x21, x19
   30e18:	b.ne	30e68 <PyInit__decimal@@Base+0x2a304>  // b.any
   30e1c:	mov	x0, x20
   30e20:	mov	x1, x19
   30e24:	mov	x2, x21
   30e28:	mov	w3, wzr
   30e2c:	bl	311c0 <PyInit__decimal@@Base+0x2a65c>
   30e30:	cbz	w0, 30e58 <PyInit__decimal@@Base+0x2a2f4>
   30e34:	mov	x0, x20
   30e38:	mov	x1, x19
   30e3c:	bl	30f00 <PyInit__decimal@@Base+0x2a39c>
   30e40:	lsl	x8, x22, #2
   30e44:	and	x8, x8, #0xfffffffffffffff8
   30e48:	add	x0, x20, x8
   30e4c:	mov	x1, x19
   30e50:	bl	30f00 <PyInit__decimal@@Base+0x2a39c>
   30e54:	mov	w0, #0x1                   	// #1
   30e58:	ldp	x20, x19, [sp, #32]
   30e5c:	ldp	x22, x21, [sp, #16]
   30e60:	ldp	x29, x30, [sp], #48
   30e64:	ret
   30e68:	adds	x8, x21, x21
   30e6c:	b.cs	30eb4 <PyInit__decimal@@Base+0x2a350>  // b.hs, b.nlast
   30e70:	cmp	x8, x19
   30e74:	b.ne	30efc <PyInit__decimal@@Base+0x2a398>  // b.any
   30e78:	mov	x0, x20
   30e7c:	mov	x1, x21
   30e80:	bl	30f00 <PyInit__decimal@@Base+0x2a39c>
   30e84:	lsl	x8, x22, #2
   30e88:	and	x8, x8, #0xfffffffffffffff8
   30e8c:	add	x0, x20, x8
   30e90:	mov	x1, x21
   30e94:	bl	30f00 <PyInit__decimal@@Base+0x2a39c>
   30e98:	mov	w3, #0x1                   	// #1
   30e9c:	mov	x0, x20
   30ea0:	mov	x1, x21
   30ea4:	mov	x2, x19
   30ea8:	bl	311c0 <PyInit__decimal@@Base+0x2a65c>
   30eac:	cbnz	w0, 30e54 <PyInit__decimal@@Base+0x2a2f0>
   30eb0:	b	30e58 <PyInit__decimal@@Base+0x2a2f4>
   30eb4:	adrp	x19, 49000 <PyInit__decimal@@Base+0x4249c>
   30eb8:	ldr	x19, [x19, #3904]
   30ebc:	adrp	x1, 37000 <PyInit__decimal@@Base+0x3049c>
   30ec0:	adrp	x2, 37000 <PyInit__decimal@@Base+0x3049c>
   30ec4:	add	x1, x1, #0xba8
   30ec8:	ldr	x0, [x19]
   30ecc:	add	x2, x2, #0xbb7
   30ed0:	mov	w3, #0x26c                 	// #620
   30ed4:	bl	6a60 <fprintf@plt>
   30ed8:	ldr	x3, [x19]
   30edc:	adrp	x0, 38000 <PyInit__decimal@@Base+0x3149c>
   30ee0:	add	x0, x0, #0xc67
   30ee4:	mov	w1, #0x29                  	// #41
   30ee8:	mov	w2, #0x1                   	// #1
   30eec:	bl	6920 <fwrite@plt>
   30ef0:	ldr	x1, [x19]
   30ef4:	mov	w0, #0xa                   	// #10
   30ef8:	bl	65a0 <fputc@plt>
   30efc:	bl	67b0 <abort@plt>
   30f00:	stp	x29, x30, [sp, #-96]!
   30f04:	stp	x28, x27, [sp, #16]
   30f08:	stp	x26, x25, [sp, #32]
   30f0c:	stp	x24, x23, [sp, #48]
   30f10:	stp	x22, x21, [sp, #64]
   30f14:	stp	x20, x19, [sp, #80]
   30f18:	mov	x29, sp
   30f1c:	sub	sp, sp, #0x40, lsl #12
   30f20:	sub	sp, sp, #0x60
   30f24:	mov	x19, x0
   30f28:	mov	x8, x1
   30f2c:	str	x1, [sp, #72]
   30f30:	mov	x28, x8
   30f34:	cmp	x8, #0x80
   30f38:	lsr	x8, x8, #1
   30f3c:	b.hi	30f30 <PyInit__decimal@@Base+0x2a3cc>  // b.pmore
   30f40:	ldr	x8, [sp, #72]
   30f44:	cbz	x8, 3119c <PyInit__decimal@@Base+0x2a638>
   30f48:	ldr	x8, [sp, #72]
   30f4c:	add	x9, sp, #0x58
   30f50:	lsl	x21, x28, #3
   30f54:	mov	x25, xzr
   30f58:	lsl	x26, x8, #3
   30f5c:	sub	x8, x28, #0x1
   30f60:	str	x8, [sp, #56]
   30f64:	add	x8, sp, #0x20, lsl #12
   30f68:	add	x8, x8, #0x58
   30f6c:	add	x11, x8, #0x8
   30f70:	add	x8, x8, x28, lsl #3
   30f74:	stp	x8, x11, [sp, #40]
   30f78:	mul	x8, x26, x28
   30f7c:	add	x10, x26, #0x8
   30f80:	str	x8, [sp, #64]
   30f84:	add	x8, x9, #0x8
   30f88:	str	x8, [sp, #32]
   30f8c:	mul	x8, x10, x28
   30f90:	add	x20, x21, #0x8
   30f94:	str	x8, [sp, #8]
   30f98:	add	x8, x9, x28, lsl #3
   30f9c:	str	x8, [sp, #24]
   30fa0:	mov	x27, x19
   30fa4:	str	x19, [sp, #16]
   30fa8:	str	x25, [sp, #80]
   30fac:	cbz	x28, 31038 <PyInit__decimal@@Base+0x2a4d4>
   30fb0:	add	x22, sp, #0x20, lsl #12
   30fb4:	add	x22, x22, #0x58
   30fb8:	mov	x23, x19
   30fbc:	mov	x24, x28
   30fc0:	mov	x0, x22
   30fc4:	mov	x1, x23
   30fc8:	mov	x2, x21
   30fcc:	bl	6460 <memcpy@plt>
   30fd0:	subs	x24, x24, #0x1
   30fd4:	add	x23, x23, x26
   30fd8:	add	x22, x22, x21
   30fdc:	b.ne	30fc0 <PyInit__decimal@@Base+0x2a45c>  // b.any
   30fe0:	cbz	x28, 31038 <PyInit__decimal@@Base+0x2a4d4>
   30fe4:	ldp	x9, x10, [sp, #40]
   30fe8:	ldr	x11, [sp, #56]
   30fec:	mov	x8, xzr
   30ff0:	add	x8, x8, #0x1
   30ff4:	cmp	x8, x28
   30ff8:	b.cs	31024 <PyInit__decimal@@Base+0x2a4c0>  // b.hs, b.nlast
   30ffc:	mov	x12, x9
   31000:	mov	x13, x10
   31004:	mov	x14, x11
   31008:	ldr	x15, [x12]
   3100c:	ldr	x16, [x13]
   31010:	subs	x14, x14, #0x1
   31014:	str	x15, [x13], #8
   31018:	str	x16, [x12]
   3101c:	add	x12, x12, x21
   31020:	b.ne	31008 <PyInit__decimal@@Base+0x2a4a4>  // b.any
   31024:	sub	x11, x11, #0x1
   31028:	add	x10, x10, x20
   3102c:	cmp	x8, x28
   31030:	add	x9, x9, x20
   31034:	b.ne	30ff0 <PyInit__decimal@@Base+0x2a48c>  // b.any
   31038:	ldr	x8, [sp, #80]
   3103c:	cmp	x8, x25
   31040:	b.ne	3107c <PyInit__decimal@@Base+0x2a518>  // b.any
   31044:	cbz	x28, 31168 <PyInit__decimal@@Base+0x2a604>
   31048:	add	x22, sp, #0x20, lsl #12
   3104c:	add	x22, x22, #0x58
   31050:	mov	x23, x19
   31054:	mov	x24, x28
   31058:	mov	x0, x23
   3105c:	mov	x1, x22
   31060:	mov	x2, x21
   31064:	bl	6460 <memcpy@plt>
   31068:	subs	x24, x24, #0x1
   3106c:	add	x22, x22, x21
   31070:	add	x23, x23, x26
   31074:	b.ne	31058 <PyInit__decimal@@Base+0x2a4f4>  // b.any
   31078:	b	31168 <PyInit__decimal@@Base+0x2a604>
   3107c:	cbz	x28, 31168 <PyInit__decimal@@Base+0x2a604>
   31080:	add	x22, sp, #0x58
   31084:	mov	x23, x27
   31088:	mov	x24, x28
   3108c:	mov	x0, x22
   31090:	mov	x1, x23
   31094:	mov	x2, x21
   31098:	bl	6460 <memcpy@plt>
   3109c:	subs	x24, x24, #0x1
   310a0:	add	x23, x23, x26
   310a4:	add	x22, x22, x21
   310a8:	b.ne	3108c <PyInit__decimal@@Base+0x2a528>  // b.any
   310ac:	cbz	x28, 31168 <PyInit__decimal@@Base+0x2a604>
   310b0:	ldp	x9, x10, [sp, #24]
   310b4:	ldr	x11, [sp, #56]
   310b8:	mov	x8, xzr
   310bc:	add	x8, x8, #0x1
   310c0:	cmp	x8, x28
   310c4:	b.cs	310f0 <PyInit__decimal@@Base+0x2a58c>  // b.hs, b.nlast
   310c8:	mov	x12, x9
   310cc:	mov	x13, x10
   310d0:	mov	x14, x11
   310d4:	ldr	x15, [x12]
   310d8:	ldr	x16, [x13]
   310dc:	subs	x14, x14, #0x1
   310e0:	str	x15, [x13], #8
   310e4:	str	x16, [x12]
   310e8:	add	x12, x12, x21
   310ec:	b.ne	310d4 <PyInit__decimal@@Base+0x2a570>  // b.any
   310f0:	sub	x11, x11, #0x1
   310f4:	add	x10, x10, x20
   310f8:	cmp	x8, x28
   310fc:	add	x9, x9, x20
   31100:	b.ne	310bc <PyInit__decimal@@Base+0x2a558>  // b.any
   31104:	cbz	x28, 31168 <PyInit__decimal@@Base+0x2a604>
   31108:	add	x22, sp, #0x20, lsl #12
   3110c:	add	x22, x22, #0x58
   31110:	mov	x23, x27
   31114:	mov	x24, x28
   31118:	mov	x0, x23
   3111c:	mov	x1, x22
   31120:	mov	x2, x21
   31124:	bl	6460 <memcpy@plt>
   31128:	subs	x24, x24, #0x1
   3112c:	add	x22, x22, x21
   31130:	add	x23, x23, x26
   31134:	b.ne	31118 <PyInit__decimal@@Base+0x2a5b4>  // b.any
   31138:	cbz	x28, 31168 <PyInit__decimal@@Base+0x2a604>
   3113c:	add	x22, sp, #0x58
   31140:	mov	x23, x19
   31144:	mov	x24, x28
   31148:	mov	x0, x23
   3114c:	mov	x1, x22
   31150:	mov	x2, x21
   31154:	bl	6460 <memcpy@plt>
   31158:	subs	x24, x24, #0x1
   3115c:	add	x22, x22, x21
   31160:	add	x23, x23, x26
   31164:	b.ne	31148 <PyInit__decimal@@Base+0x2a5e4>  // b.any
   31168:	ldr	x8, [sp, #72]
   3116c:	add	x25, x25, x28
   31170:	add	x19, x19, x21
   31174:	cmp	x25, x8
   31178:	ldr	x8, [sp, #64]
   3117c:	add	x27, x27, x8
   31180:	b.cc	30fac <PyInit__decimal@@Base+0x2a448>  // b.lo, b.ul, b.last
   31184:	ldp	x8, x25, [sp, #72]
   31188:	add	x25, x25, x28
   3118c:	cmp	x25, x8
   31190:	ldp	x8, x19, [sp, #8]
   31194:	add	x19, x19, x8
   31198:	b.cc	30fa0 <PyInit__decimal@@Base+0x2a43c>  // b.lo, b.ul, b.last
   3119c:	add	sp, sp, #0x40, lsl #12
   311a0:	add	sp, sp, #0x60
   311a4:	ldp	x20, x19, [sp, #80]
   311a8:	ldp	x22, x21, [sp, #64]
   311ac:	ldp	x24, x23, [sp, #48]
   311b0:	ldp	x26, x25, [sp, #32]
   311b4:	ldp	x28, x27, [sp, #16]
   311b8:	ldp	x29, x30, [sp], #96
   311bc:	ret
   311c0:	stp	x29, x30, [sp, #-96]!
   311c4:	stp	x28, x27, [sp, #16]
   311c8:	stp	x26, x25, [sp, #32]
   311cc:	stp	x24, x23, [sp, #48]
   311d0:	stp	x22, x21, [sp, #64]
   311d4:	stp	x20, x19, [sp, #80]
   311d8:	mov	x29, sp
   311dc:	sub	sp, sp, #0x10, lsl #12
   311e0:	sub	sp, sp, #0x80
   311e4:	mov	x19, x2
   311e8:	mov	x20, x1
   311ec:	mov	x21, x0
   311f0:	mov	x23, x1
   311f4:	cbz	w3, 31204 <PyInit__decimal@@Base+0x2a6a0>
   311f8:	cmp	w3, #0x1
   311fc:	b.ne	31464 <PyInit__decimal@@Base+0x2a900>  // b.any
   31200:	mov	w23, #0x2                   	// #2
   31204:	lsr	x8, x20, #3
   31208:	add	x0, x8, #0x1
   3120c:	mov	w1, #0x8                   	// #8
   31210:	bl	1f6e0 <PyInit__decimal@@Base+0x18b7c>
   31214:	cbz	x0, 31440 <PyInit__decimal@@Base+0x2a8dc>
   31218:	mov	x22, x0
   3121c:	str	x23, [sp, #32]
   31220:	str	x19, [sp, #104]
   31224:	cbz	x20, 3142c <PyInit__decimal@@Base+0x2a8c8>
   31228:	ldr	x8, [sp, #104]
   3122c:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   31230:	mov	w27, #0x1                   	// #1
   31234:	add	x10, x10, #0xc70
   31238:	sub	x9, x8, #0x1
   3123c:	lsr	x8, x8, #1
   31240:	str	x9, [sp, #24]
   31244:	str	x8, [sp, #40]
   31248:	stp	x20, x21, [sp]
   3124c:	lsr	x20, x27, #6
   31250:	and	x8, x27, #0x3f
   31254:	ldr	x9, [x22, x20, lsl #3]
   31258:	ldr	x8, [x10, x8, lsl #3]
   3125c:	ldr	x28, [sp, #40]
   31260:	tst	x8, x9
   31264:	str	x8, [sp, #72]
   31268:	b.ne	31414 <PyInit__decimal@@Base+0x2a8b0>  // b.any
   3126c:	cbz	x28, 31414 <PyInit__decimal@@Base+0x2a8b0>
   31270:	ldr	x19, [sp, #104]
   31274:	ldp	x23, x9, [sp, #24]
   31278:	add	x26, sp, #0x8, lsl #12
   3127c:	mov	x3, xzr
   31280:	mul	x8, x27, x19
   31284:	lsl	x8, x8, #2
   31288:	mul	x25, x27, x9
   3128c:	and	x8, x8, #0xfffffffffffffff8
   31290:	add	x8, x21, x8
   31294:	umulh	x1, x27, x9
   31298:	mov	x0, x25
   3129c:	mov	x2, x23
   312a0:	add	x24, sp, #0x78
   312a4:	add	x26, x26, #0x78
   312a8:	str	x8, [sp, #64]
   312ac:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   312b0:	msub	x9, x23, x0, x25
   312b4:	mul	x8, x9, x19
   312b8:	mov	x10, xzr
   312bc:	mov	x19, x9
   312c0:	lsr	x8, x8, #1
   312c4:	stp	x8, x9, [sp, #48]
   312c8:	str	x27, [sp, #80]
   312cc:	str	x20, [sp, #16]
   312d0:	ldr	x9, [sp, #64]
   312d4:	add	x11, x10, #0x1, lsl #12
   312d8:	sub	x8, x28, x10
   312dc:	lsl	x8, x8, #3
   312e0:	add	x1, x9, x10, lsl #3
   312e4:	cmp	x11, x28
   312e8:	mov	w9, #0x8000                	// #32768
   312ec:	csel	x25, x9, x8, cc  // cc = lo, ul, last
   312f0:	mov	x0, x26
   312f4:	mov	x2, x25
   312f8:	str	x11, [sp, #88]
   312fc:	mov	x23, x10
   31300:	bl	6460 <memcpy@plt>
   31304:	cmp	x19, x27
   31308:	str	x23, [sp, #96]
   3130c:	b.ne	3131c <PyInit__decimal@@Base+0x2a7b8>  // b.any
   31310:	ldr	x8, [sp, #48]
   31314:	mov	x27, x26
   31318:	b	313cc <PyInit__decimal@@Base+0x2a868>
   3131c:	add	x8, x21, x23, lsl #3
   31320:	str	x8, [sp, #112]
   31324:	ldr	x8, [sp, #48]
   31328:	ldr	x28, [sp, #80]
   3132c:	mov	x20, x22
   31330:	ldp	x22, x23, [sp, #24]
   31334:	adrp	x21, 37000 <PyInit__decimal@@Base+0x3049c>
   31338:	add	x21, x21, #0xc70
   3133c:	ldr	x9, [sp, #112]
   31340:	mov	x27, x24
   31344:	mov	x24, x26
   31348:	mov	x0, x27
   3134c:	add	x26, x9, x8, lsl #3
   31350:	mov	x1, x26
   31354:	mov	x2, x25
   31358:	bl	6460 <memcpy@plt>
   3135c:	mov	x0, x26
   31360:	mov	x1, x24
   31364:	mov	x2, x25
   31368:	bl	6460 <memcpy@plt>
   3136c:	lsr	x9, x19, #3
   31370:	and	x8, x19, #0x3f
   31374:	and	x9, x9, #0x1ffffffffffffff8
   31378:	ldr	x8, [x21, x8, lsl #3]
   3137c:	ldr	x10, [x20, x9]
   31380:	mul	x26, x19, x23
   31384:	umulh	x1, x19, x23
   31388:	mov	x0, x26
   3138c:	orr	x8, x10, x8
   31390:	mov	x2, x22
   31394:	mov	x3, xzr
   31398:	str	x8, [x20, x9]
   3139c:	bl	31468 <PyInit__decimal@@Base+0x2a904>
   313a0:	ldr	x8, [sp, #104]
   313a4:	msub	x19, x22, x0, x26
   313a8:	cmp	x19, x28
   313ac:	mov	x26, x27
   313b0:	mul	x8, x19, x8
   313b4:	lsr	x8, x8, #1
   313b8:	b.ne	3133c <PyInit__decimal@@Base+0x2a7d8>  // b.any
   313bc:	ldr	x28, [sp, #40]
   313c0:	mov	x22, x20
   313c4:	ldp	x21, x20, [sp, #8]
   313c8:	mov	x26, x27
   313cc:	ldr	x9, [sp, #96]
   313d0:	add	x8, x21, x8, lsl #3
   313d4:	mov	x1, x26
   313d8:	mov	x2, x25
   313dc:	add	x0, x8, x9, lsl #3
   313e0:	mov	x19, x24
   313e4:	bl	6460 <memcpy@plt>
   313e8:	ldr	x8, [x22, x20, lsl #3]
   313ec:	ldr	x9, [sp, #72]
   313f0:	ldr	x10, [sp, #88]
   313f4:	mov	x24, x27
   313f8:	mov	x26, x19
   313fc:	ldr	x27, [sp, #80]
   31400:	ldr	x19, [sp, #56]
   31404:	orr	x8, x8, x9
   31408:	cmp	x10, x28
   3140c:	str	x8, [x22, x20, lsl #3]
   31410:	b.cc	312d0 <PyInit__decimal@@Base+0x2a76c>  // b.lo, b.ul, b.last
   31414:	ldr	x20, [sp]
   31418:	add	x27, x27, #0x2
   3141c:	adrp	x10, 37000 <PyInit__decimal@@Base+0x3049c>
   31420:	add	x10, x10, #0xc70
   31424:	cmp	x27, x20
   31428:	b.ls	3124c <PyInit__decimal@@Base+0x2a6e8>  // b.plast
   3142c:	adrp	x8, 4c000 <PyInit__decimal@@Base+0x4549c>
   31430:	ldr	x8, [x8, #1384]
   31434:	mov	x0, x22
   31438:	blr	x8
   3143c:	mov	w0, #0x1                   	// #1
   31440:	add	sp, sp, #0x10, lsl #12
   31444:	add	sp, sp, #0x80
   31448:	ldp	x20, x19, [sp, #80]
   3144c:	ldp	x22, x21, [sp, #64]
   31450:	ldp	x24, x23, [sp, #48]
   31454:	ldp	x26, x25, [sp, #32]
   31458:	ldp	x28, x27, [sp, #16]
   3145c:	ldp	x29, x30, [sp], #96
   31460:	ret
   31464:	bl	67b0 <abort@plt>
   31468:	mov	x4, x2
   3146c:	mov	x5, x0
   31470:	mov	x6, x1
   31474:	cbnz	x3, 31510 <PyInit__decimal@@Base+0x2a9ac>
   31478:	cmp	x2, x1
   3147c:	b.ls	31624 <PyInit__decimal@@Base+0x2aac0>  // b.plast
   31480:	clz	x0, x2
   31484:	cbz	x0, 314a0 <PyInit__decimal@@Base+0x2a93c>
   31488:	neg	w1, w0
   3148c:	lsl	x2, x6, x0
   31490:	lsl	x4, x4, x0
   31494:	lsr	x6, x5, x1
   31498:	orr	x6, x6, x2
   3149c:	lsl	x5, x5, x0
   314a0:	lsr	x3, x4, #32
   314a4:	and	x7, x4, #0xffffffff
   314a8:	udiv	x2, x6, x3
   314ac:	mov	x0, x2
   314b0:	msub	x2, x2, x3, x6
   314b4:	mul	x6, x7, x0
   314b8:	extr	x1, x2, x5, #32
   314bc:	cmp	x6, x1
   314c0:	b.ls	314d4 <PyInit__decimal@@Base+0x2a970>  // b.plast
   314c4:	adds	x1, x4, x1
   314c8:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   314cc:	b.hi	31794 <PyInit__decimal@@Base+0x2ac30>  // b.pmore
   314d0:	sub	x0, x0, #0x1
   314d4:	sub	x1, x1, x6
   314d8:	udiv	x6, x1, x3
   314dc:	msub	x1, x6, x3, x1
   314e0:	mov	x2, x6
   314e4:	mul	x7, x7, x6
   314e8:	bfi	x5, x1, #32, #32
   314ec:	cmp	x7, x5
   314f0:	b.ls	31504 <PyInit__decimal@@Base+0x2a9a0>  // b.plast
   314f4:	adds	x5, x4, x5
   314f8:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   314fc:	cinc	x2, x6, ls  // ls = plast
   31500:	sub	x2, x2, #0x2
   31504:	orr	x0, x2, x0, lsl #32
   31508:	mov	x1, #0x0                   	// #0
   3150c:	ret
   31510:	cmp	x3, x1
   31514:	b.ls	31524 <PyInit__decimal@@Base+0x2a9c0>  // b.plast
   31518:	mov	x1, #0x0                   	// #0
   3151c:	mov	x0, #0x0                   	// #0
   31520:	ret
   31524:	clz	x7, x3
   31528:	cbz	x7, 3173c <PyInit__decimal@@Base+0x2abd8>
   3152c:	mov	x4, #0x40                  	// #64
   31530:	sub	x4, x4, x7
   31534:	lsl	x3, x3, x7
   31538:	lsr	x5, x2, x4
   3153c:	orr	x3, x5, x3
   31540:	lsr	x6, x1, x4
   31544:	and	x8, x3, #0xffffffff
   31548:	lsr	x10, x3, #32
   3154c:	lsr	x4, x0, x4
   31550:	lsl	x1, x1, x7
   31554:	orr	x1, x4, x1
   31558:	lsl	x2, x2, x7
   3155c:	udiv	x5, x6, x10
   31560:	mov	x4, x5
   31564:	msub	x5, x5, x10, x6
   31568:	mul	x6, x8, x4
   3156c:	extr	x5, x5, x1, #32
   31570:	cmp	x6, x5
   31574:	b.ls	31588 <PyInit__decimal@@Base+0x2aa24>  // b.plast
   31578:	adds	x5, x3, x5
   3157c:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   31580:	b.hi	3177c <PyInit__decimal@@Base+0x2ac18>  // b.pmore
   31584:	sub	x4, x4, #0x1
   31588:	sub	x6, x5, x6
   3158c:	udiv	x9, x6, x10
   31590:	msub	x6, x9, x10, x6
   31594:	mov	x5, x9
   31598:	mul	x8, x8, x9
   3159c:	bfi	x1, x6, #32, #32
   315a0:	cmp	x8, x1
   315a4:	b.ls	315b8 <PyInit__decimal@@Base+0x2aa54>  // b.plast
   315a8:	adds	x1, x3, x1
   315ac:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   315b0:	b.hi	31764 <PyInit__decimal@@Base+0x2ac00>  // b.pmore
   315b4:	sub	x5, x9, #0x1
   315b8:	orr	x4, x5, x4, lsl #32
   315bc:	and	x9, x2, #0xffffffff
   315c0:	mov	w5, w5
   315c4:	lsr	x2, x2, #32
   315c8:	lsr	x6, x4, #32
   315cc:	sub	x1, x1, x8
   315d0:	mov	x10, #0x100000000           	// #4294967296
   315d4:	mul	x11, x5, x9
   315d8:	mul	x8, x6, x9
   315dc:	madd	x5, x5, x2, x8
   315e0:	mul	x2, x6, x2
   315e4:	add	x3, x5, x11, lsr #32
   315e8:	add	x5, x2, x10
   315ec:	cmp	x8, x3
   315f0:	csel	x2, x5, x2, hi  // hi = pmore
   315f4:	add	x2, x2, x3, lsr #32
   315f8:	cmp	x1, x2
   315fc:	b.cc	31618 <PyInit__decimal@@Base+0x2aab4>  // b.lo, b.ul, b.last
   31600:	and	x11, x11, #0xffffffff
   31604:	lsl	x0, x0, x7
   31608:	add	x3, x11, x3, lsl #32
   3160c:	cmp	x0, x3
   31610:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   31614:	b.ne	3174c <PyInit__decimal@@Base+0x2abe8>  // b.any
   31618:	sub	x0, x4, #0x1
   3161c:	mov	x1, #0x0                   	// #0
   31620:	ret
   31624:	cbnz	x2, 31630 <PyInit__decimal@@Base+0x2aacc>
   31628:	mov	x2, #0x1                   	// #1
   3162c:	udiv	x4, x2, x4
   31630:	clz	x8, x4
   31634:	cbnz	x8, 316ac <PyInit__decimal@@Base+0x2ab48>
   31638:	lsr	x6, x4, #32
   3163c:	and	x7, x4, #0xffffffff
   31640:	sub	x2, x1, x4
   31644:	mov	x1, #0x1                   	// #1
   31648:	udiv	x3, x2, x6
   3164c:	mov	x0, x3
   31650:	msub	x3, x3, x6, x2
   31654:	mul	x8, x0, x7
   31658:	extr	x2, x3, x5, #32
   3165c:	cmp	x8, x2
   31660:	b.ls	31674 <PyInit__decimal@@Base+0x2ab10>  // b.plast
   31664:	adds	x2, x4, x2
   31668:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   3166c:	b.hi	31788 <PyInit__decimal@@Base+0x2ac24>  // b.pmore
   31670:	sub	x0, x0, #0x1
   31674:	sub	x2, x2, x8
   31678:	udiv	x8, x2, x6
   3167c:	msub	x2, x8, x6, x2
   31680:	mov	x3, x8
   31684:	mul	x7, x8, x7
   31688:	bfi	x5, x2, #32, #32
   3168c:	cmp	x7, x5
   31690:	b.ls	316a4 <PyInit__decimal@@Base+0x2ab40>  // b.plast
   31694:	adds	x4, x4, x5
   31698:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   3169c:	cinc	x3, x8, ls  // ls = plast
   316a0:	sub	x3, x3, #0x2
   316a4:	orr	x0, x3, x0, lsl #32
   316a8:	ret
   316ac:	lsl	x4, x4, x8
   316b0:	mov	x3, #0x40                  	// #64
   316b4:	sub	x3, x3, x8
   316b8:	lsr	x6, x4, #32
   316bc:	lsl	x2, x1, x8
   316c0:	and	x7, x4, #0xffffffff
   316c4:	lsr	x1, x1, x3
   316c8:	lsr	x3, x0, x3
   316cc:	orr	x3, x3, x2
   316d0:	udiv	x2, x1, x6
   316d4:	lsl	x5, x0, x8
   316d8:	msub	x1, x2, x6, x1
   316dc:	mov	x0, x2
   316e0:	mul	x2, x7, x2
   316e4:	extr	x1, x1, x3, #32
   316e8:	cmp	x2, x1
   316ec:	b.ls	31700 <PyInit__decimal@@Base+0x2ab9c>  // b.plast
   316f0:	adds	x1, x4, x1
   316f4:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   316f8:	b.hi	31758 <PyInit__decimal@@Base+0x2abf4>  // b.pmore
   316fc:	sub	x0, x0, #0x1
   31700:	sub	x1, x1, x2
   31704:	udiv	x2, x1, x6
   31708:	msub	x1, x2, x6, x1
   3170c:	mov	x8, x2
   31710:	mul	x2, x7, x2
   31714:	bfi	x3, x1, #32, #32
   31718:	cmp	x2, x3
   3171c:	b.ls	31730 <PyInit__decimal@@Base+0x2abcc>  // b.plast
   31720:	adds	x3, x4, x3
   31724:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   31728:	b.hi	31770 <PyInit__decimal@@Base+0x2ac0c>  // b.pmore
   3172c:	sub	x8, x8, #0x1
   31730:	sub	x2, x3, x2
   31734:	orr	x1, x8, x0, lsl #32
   31738:	b	31648 <PyInit__decimal@@Base+0x2aae4>
   3173c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   31740:	mov	x1, #0x0                   	// #0
   31744:	cset	x0, ls  // ls = plast
   31748:	ret
   3174c:	mov	x0, x4
   31750:	mov	x1, #0x0                   	// #0
   31754:	ret
   31758:	sub	x0, x0, #0x2
   3175c:	add	x1, x1, x4
   31760:	b	31700 <PyInit__decimal@@Base+0x2ab9c>
   31764:	sub	x5, x9, #0x2
   31768:	add	x1, x1, x3
   3176c:	b	315b8 <PyInit__decimal@@Base+0x2aa54>
   31770:	sub	x8, x8, #0x2
   31774:	add	x3, x3, x4
   31778:	b	31730 <PyInit__decimal@@Base+0x2abcc>
   3177c:	sub	x4, x4, #0x2
   31780:	add	x5, x5, x3
   31784:	b	31588 <PyInit__decimal@@Base+0x2aa24>
   31788:	sub	x0, x0, #0x2
   3178c:	add	x2, x2, x4
   31790:	b	31674 <PyInit__decimal@@Base+0x2ab10>
   31794:	sub	x0, x0, #0x2
   31798:	add	x1, x1, x4
   3179c:	b	314d4 <PyInit__decimal@@Base+0x2a970>

Disassembly of section .fini:

00000000000317a0 <.fini>:
   317a0:	stp	x29, x30, [sp, #-16]!
   317a4:	mov	x29, sp
   317a8:	ldp	x29, x30, [sp], #16
   317ac:	ret
