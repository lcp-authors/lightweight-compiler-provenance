In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMCoroutines.a_clang_-O2:

Coroutines.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x19, x0
      10:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      14:	mov	x0, x19
      18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      1c:	mov	x0, x19
      20:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      24:	mov	x0, x19
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #32
      30:	b	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>

0000000000000034 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE>:
      34:	sub	sp, sp, #0xd0
      38:	stp	x29, x30, [sp, #160]
      3c:	str	x21, [sp, #176]
      40:	stp	x20, x19, [sp, #192]
      44:	add	x29, sp, #0xa0
      48:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      4c:	adrp	x20, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      50:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      54:	add	x8, x8, #0x0
      58:	add	x20, x20, #0x0
      5c:	add	x21, x21, #0x0
      60:	sub	x2, x29, #0x20
      64:	mov	w1, wzr
      68:	mov	x19, x0
      6c:	stp	x21, x20, [x29, #-16]
      70:	stur	x8, [x29, #-32]
      74:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      78:	ldur	x8, [x29, #-16]
      7c:	cbz	x8, 90 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x5c>
      80:	sub	x0, x29, #0x20
      84:	sub	x1, x29, #0x20
      88:	mov	w2, #0x3                   	// #3
      8c:	blr	x8
      90:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      94:	add	x8, x8, #0x0
      98:	sub	x2, x29, #0x40
      9c:	mov	w1, #0x6                   	// #6
      a0:	mov	x0, x19
      a4:	stp	x21, x20, [x29, #-48]
      a8:	stur	x8, [x29, #-64]
      ac:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      b0:	ldur	x8, [x29, #-48]
      b4:	cbz	x8, c8 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x94>
      b8:	sub	x0, x29, #0x40
      bc:	sub	x1, x29, #0x40
      c0:	mov	w2, #0x3                   	// #3
      c4:	blr	x8
      c8:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      cc:	add	x8, x8, #0x0
      d0:	add	x2, sp, #0x40
      d4:	mov	w1, #0x9                   	// #9
      d8:	mov	x0, x19
      dc:	stp	x21, x20, [sp, #80]
      e0:	str	x8, [sp, #64]
      e4:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      e8:	ldr	x8, [sp, #80]
      ec:	cbz	x8, 100 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0xcc>
      f0:	add	x0, sp, #0x40
      f4:	add	x1, sp, #0x40
      f8:	mov	w2, #0x3                   	// #3
      fc:	blr	x8
     100:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     104:	add	x8, x8, #0x0
     108:	add	x2, sp, #0x20
     10c:	mov	w1, #0x3                   	// #3
     110:	mov	x0, x19
     114:	stp	x21, x20, [sp, #48]
     118:	str	x8, [sp, #32]
     11c:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     120:	ldr	x8, [sp, #48]
     124:	cbz	x8, 138 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x104>
     128:	add	x0, sp, #0x20
     12c:	add	x1, sp, #0x20
     130:	mov	w2, #0x3                   	// #3
     134:	blr	x8
     138:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     13c:	add	x8, x8, #0x0
     140:	mov	x2, sp
     144:	mov	w1, #0x4                   	// #4
     148:	mov	x0, x19
     14c:	stp	x21, x20, [sp, #16]
     150:	str	x8, [sp]
     154:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     158:	ldr	x8, [sp, #16]
     15c:	cbz	x8, 170 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x13c>
     160:	mov	x0, sp
     164:	mov	x1, sp
     168:	mov	w2, #0x3                   	// #3
     16c:	blr	x8
     170:	ldp	x20, x19, [sp, #192]
     174:	ldr	x21, [sp, #176]
     178:	ldp	x29, x30, [sp, #160]
     17c:	add	sp, sp, #0xd0
     180:	ret

0000000000000184 <_ZL23addCoroutineEarlyPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     184:	stp	x29, x30, [sp, #-32]!
     188:	str	x19, [sp, #16]
     18c:	mov	x29, sp
     190:	mov	x19, x1
     194:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
     198:	ldr	x8, [x19]
     19c:	mov	x1, x0
     1a0:	mov	x0, x19
     1a4:	ldr	x19, [sp, #16]
     1a8:	ldr	x2, [x8, #16]
     1ac:	ldp	x29, x30, [sp], #32
     1b0:	br	x2

00000000000001b4 <_ZL22addCoroutineOpt0PassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     1b4:	stp	x29, x30, [sp, #-32]!
     1b8:	str	x19, [sp, #16]
     1bc:	mov	x29, sp
     1c0:	mov	x19, x1
     1c4:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     1c8:	ldr	x8, [x19]
     1cc:	mov	x1, x0
     1d0:	mov	x0, x19
     1d4:	ldr	x8, [x8, #16]
     1d8:	blr	x8
     1dc:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     1e0:	ldr	x8, [x19]
     1e4:	mov	x1, x0
     1e8:	mov	x0, x19
     1ec:	ldr	x8, [x8, #16]
     1f0:	blr	x8
     1f4:	bl	0 <_ZN4llvm21createBarrierNoopPassEv>
     1f8:	ldr	x8, [x19]
     1fc:	mov	x1, x0
     200:	mov	x0, x19
     204:	ldr	x8, [x8, #16]
     208:	blr	x8
     20c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     210:	ldr	x8, [x19]
     214:	mov	x1, x0
     218:	mov	x0, x19
     21c:	ldr	x19, [sp, #16]
     220:	ldr	x2, [x8, #16]
     224:	ldp	x29, x30, [sp], #32
     228:	br	x2

000000000000022c <_ZL21addCoroutineSCCPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     22c:	stp	x29, x30, [sp, #-32]!
     230:	str	x19, [sp, #16]
     234:	mov	x29, sp
     238:	mov	x19, x1
     23c:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     240:	ldr	x8, [x19]
     244:	mov	x1, x0
     248:	mov	x0, x19
     24c:	ldr	x19, [sp, #16]
     250:	ldr	x2, [x8, #16]
     254:	ldp	x29, x30, [sp], #32
     258:	br	x2

000000000000025c <_ZL33addCoroutineScalarOptimizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     25c:	stp	x29, x30, [sp, #-32]!
     260:	str	x19, [sp, #16]
     264:	mov	x29, sp
     268:	mov	x19, x1
     26c:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     270:	ldr	x8, [x19]
     274:	mov	x1, x0
     278:	mov	x0, x19
     27c:	ldr	x19, [sp, #16]
     280:	ldr	x2, [x8, #16]
     284:	ldp	x29, x30, [sp], #32
     288:	br	x2

000000000000028c <_ZL31addCoroutineOptimizerLastPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     28c:	stp	x29, x30, [sp, #-32]!
     290:	str	x19, [sp, #16]
     294:	mov	x29, sp
     298:	mov	x19, x1
     29c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     2a0:	ldr	x8, [x19]
     2a4:	mov	x1, x0
     2a8:	mov	x0, x19
     2ac:	ldr	x19, [sp, #16]
     2b0:	ldr	x2, [x8, #16]
     2b4:	ldp	x29, x30, [sp], #32
     2b8:	br	x2

00000000000002bc <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>:
     2bc:	stp	x29, x30, [sp, #-32]!
     2c0:	str	x19, [sp, #16]
     2c4:	mov	x29, sp
     2c8:	str	x1, [x0]
     2cc:	mov	x19, x0
     2d0:	ldr	x0, [x1]
     2d4:	mov	w1, wzr
     2d8:	str	x0, [x19, #8]
     2dc:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     2e0:	ldr	x8, [x19, #8]
     2e4:	str	x0, [x19, #16]
     2e8:	mov	x0, x8
     2ec:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     2f0:	ldr	x8, [x19, #16]
     2f4:	add	x1, x29, #0x18
     2f8:	mov	w2, #0x1                   	// #1
     2fc:	mov	w3, wzr
     300:	str	x8, [x29, #24]
     304:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     308:	ldr	x8, [x19, #16]
     30c:	str	x0, [x19, #24]
     310:	mov	x0, x8
     314:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     318:	str	x0, [x19, #32]
     31c:	ldr	x19, [sp, #16]
     320:	ldp	x29, x30, [sp], #32
     324:	ret

0000000000000328 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>:
     328:	sub	sp, sp, #0x70
     32c:	stp	x29, x30, [sp, #48]
     330:	str	x23, [sp, #64]
     334:	stp	x22, x21, [sp, #80]
     338:	stp	x20, x19, [sp, #96]
     33c:	add	x29, sp, #0x30
     340:	mov	x20, x0
     344:	ldr	x0, [x0, #8]
     348:	mov	x19, x3
     34c:	mov	w23, w2
     350:	mov	x21, x1
     354:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
     358:	sxtw	x1, w23
     35c:	mov	w2, wzr
     360:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
     364:	ldr	x8, [x20]
     368:	mov	x22, x0
     36c:	mov	w1, #0x22                  	// #34
     370:	mov	x2, xzr
     374:	mov	x0, x8
     378:	mov	x3, xzr
     37c:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
     380:	add	w8, w23, #0x1
     384:	cmp	w8, #0x3
     388:	b.hi	410 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE+0xe8>  // b.pmore
     38c:	stp	x21, x22, [x29, #-16]
     390:	mov	w22, #0x101                 	// #257
     394:	sub	x1, x29, #0x10
     398:	add	x3, sp, #0x8
     39c:	mov	w2, #0x2                   	// #2
     3a0:	mov	x4, x19
     3a4:	stp	xzr, xzr, [sp, #8]
     3a8:	strh	w22, [sp, #24]
     3ac:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     3b0:	mov	x21, x0
     3b4:	mov	w0, #0x38                  	// #56
     3b8:	mov	w1, #0x1                   	// #1
     3bc:	bl	0 <_ZN4llvm4UsernwEmj>
     3c0:	ldr	x8, [x20, #24]
     3c4:	mov	x20, x0
     3c8:	mov	w1, wzr
     3cc:	mov	x0, x8
     3d0:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     3d4:	mov	x2, x0
     3d8:	add	x3, sp, #0x8
     3dc:	mov	x0, x20
     3e0:	mov	x1, x21
     3e4:	mov	x4, x19
     3e8:	stp	xzr, xzr, [sp, #8]
     3ec:	strh	w22, [sp, #24]
     3f0:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     3f4:	mov	x0, x20
     3f8:	ldp	x20, x19, [sp, #96]
     3fc:	ldp	x22, x21, [sp, #80]
     400:	ldr	x23, [sp, #64]
     404:	ldp	x29, x30, [sp, #48]
     408:	add	sp, sp, #0x70
     40c:	ret
     410:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     414:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     418:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     41c:	add	x0, x0, #0x0
     420:	add	x1, x1, #0x0
     424:	add	x3, x3, #0x0
     428:	mov	w2, #0x73                  	// #115
     42c:	bl	0 <__assert_fail>

0000000000000430 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>:
     430:	stp	x29, x30, [sp, #-64]!
     434:	stp	x24, x23, [sp, #16]
     438:	stp	x22, x21, [sp, #32]
     43c:	stp	x20, x19, [sp, #48]
     440:	mov	x29, sp
     444:	cbz	x2, 49c <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x6c>
     448:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     44c:	mov	x19, x1
     450:	mov	x20, x0
     454:	add	x24, x1, x2, lsl #4
     458:	add	x21, x21, #0x0
     45c:	ldp	x22, x23, [x19]
     460:	mov	w1, #0x14                  	// #20
     464:	mov	x0, x21
     468:	mov	x2, x22
     46c:	mov	x3, x23
     470:	bl	0 <_ZN4llvm9Intrinsic25lookupLLVMIntrinsicByNameENS_8ArrayRefIPKcEENS_9StringRefE>
     474:	cmn	w0, #0x1
     478:	b.eq	4bc <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x8c>  // b.none
     47c:	mov	x0, x20
     480:	mov	x1, x22
     484:	mov	x2, x23
     488:	bl	0 <_ZNK4llvm6Module13getNamedValueENS_9StringRefE>
     48c:	cbnz	x0, 4a4 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x74>
     490:	add	x19, x19, #0x10
     494:	cmp	x19, x24
     498:	b.ne	45c <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x2c>  // b.any
     49c:	mov	w0, wzr
     4a0:	b	4a8 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x78>
     4a4:	mov	w0, #0x1                   	// #1
     4a8:	ldp	x20, x19, [sp, #48]
     4ac:	ldp	x22, x21, [sp, #32]
     4b0:	ldp	x24, x23, [sp, #16]
     4b4:	ldp	x29, x30, [sp], #64
     4b8:	ret
     4bc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c8:	add	x0, x0, #0x0
     4cc:	add	x1, x1, #0x0
     4d0:	add	x3, x3, #0x0
     4d4:	mov	w2, #0x9d                  	// #157
     4d8:	bl	0 <__assert_fail>

00000000000004dc <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>:
     4dc:	sub	sp, sp, #0x70
     4e0:	stp	x29, x30, [sp, #48]
     4e4:	str	x23, [sp, #64]
     4e8:	stp	x22, x21, [sp, #80]
     4ec:	stp	x20, x19, [sp, #96]
     4f0:	add	x29, sp, #0x30
     4f4:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4f8:	ldr	d0, [x8]
     4fc:	mov	x8, sp
     500:	add	x21, x8, #0x10
     504:	mov	w20, w1
     508:	mov	x19, x0
     50c:	str	x21, [sp]
     510:	str	d0, [sp, #8]
     514:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     518:	ldr	x22, [x19, #8]
     51c:	cbnz	x22, 54c <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x70>
     520:	ldr	w8, [sp, #8]
     524:	cbz	w8, 618 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x13c>
     528:	tbz	w20, #0, 5d4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xf8>
     52c:	mov	x0, x19
     530:	bl	0 <_ZNK4llvm5Value10getContextEv>
     534:	mov	w1, wzr
     538:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     53c:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     540:	b	5e4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x108>
     544:	ldr	x22, [x22, #8]
     548:	cbz	x22, 520 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x44>
     54c:	mov	x0, x22
     550:	bl	0 <_ZNK4llvm3Use7getUserEv>
     554:	cbz	x0, 648 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x16c>
     558:	ldrb	w8, [x0, #16]
     55c:	mov	x23, x0
     560:	cmp	w8, #0x50
     564:	b.ne	544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>  // b.any
     568:	ldur	x8, [x23, #-24]
     56c:	cbz	x8, 544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>
     570:	ldrb	w9, [x8, #16]
     574:	cbnz	w9, 544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>
     578:	ldrb	w9, [x8, #33]
     57c:	tbz	w9, #5, 544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>
     580:	ldr	w8, [x8, #36]
     584:	cmp	w8, #0x17
     588:	b.ne	544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>  // b.any
     58c:	ldp	w8, w9, [sp, #8]
     590:	cmp	w8, w9
     594:	b.cs	5b8 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xdc>  // b.hs, b.nlast
     598:	ldr	x9, [sp]
     59c:	str	x23, [x9, w8, uxtw #3]
     5a0:	ldp	w8, w9, [sp, #8]
     5a4:	cmp	w8, w9
     5a8:	b.cs	668 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x18c>  // b.hs, b.nlast
     5ac:	add	w8, w8, #0x1
     5b0:	str	w8, [sp, #8]
     5b4:	b	544 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x68>
     5b8:	mov	x0, sp
     5bc:	mov	w3, #0x8                   	// #8
     5c0:	mov	x1, x21
     5c4:	mov	x2, xzr
     5c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     5cc:	ldr	w8, [sp, #8]
     5d0:	b	598 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xbc>
     5d4:	ldr	x8, [sp]
     5d8:	mov	w1, #0x1                   	// #1
     5dc:	ldr	x0, [x8]
     5e0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     5e4:	ldr	w8, [sp, #8]
     5e8:	mov	x19, x0
     5ec:	cbz	w8, 618 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x13c>
     5f0:	ldr	x21, [sp]
     5f4:	lsl	x22, x8, #3
     5f8:	ldr	x20, [x21], #8
     5fc:	mov	x1, x19
     600:	mov	x0, x20
     604:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     608:	mov	x0, x20
     60c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     610:	subs	x22, x22, #0x8
     614:	b.ne	5f8 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x11c>  // b.any
     618:	ldr	x0, [sp]
     61c:	mov	x8, sp
     620:	add	x8, x8, #0x10
     624:	cmp	x0, x8
     628:	b.eq	630 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x154>  // b.none
     62c:	bl	0 <free>
     630:	ldp	x20, x19, [sp, #96]
     634:	ldp	x22, x21, [sp, #80]
     638:	ldr	x23, [sp, #64]
     63c:	ldp	x29, x30, [sp, #48]
     640:	add	sp, sp, #0x70
     644:	ret
     648:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     64c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     650:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     654:	add	x0, x0, #0x0
     658:	add	x1, x1, #0x0
     65c:	add	x3, x3, #0x0
     660:	mov	w2, #0x69                  	// #105
     664:	bl	0 <__assert_fail>
     668:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     66c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     670:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     674:	add	x0, x0, #0x0
     678:	add	x1, x1, #0x0
     67c:	add	x3, x3, #0x0
     680:	mov	w2, #0x43                  	// #67
     684:	bl	0 <__assert_fail>

0000000000000688 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>:
     688:	sub	sp, sp, #0xa0
     68c:	stp	x29, x30, [sp, #80]
     690:	stp	x26, x25, [sp, #96]
     694:	stp	x24, x23, [sp, #112]
     698:	stp	x22, x21, [sp, #128]
     69c:	stp	x20, x19, [sp, #144]
     6a0:	add	x29, sp, #0x50
     6a4:	ldr	x9, [x3, #24]
     6a8:	cbz	x9, 8cc <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>
     6ac:	add	x8, x3, #0x10
     6b0:	mov	x19, x4
     6b4:	mov	x20, x3
     6b8:	mov	x22, x2
     6bc:	mov	x21, x1
     6c0:	mov	x10, x8
     6c4:	ldr	x11, [x9, #32]
     6c8:	add	x12, x9, #0x18
     6cc:	add	x13, x9, #0x10
     6d0:	cmp	x11, x0
     6d4:	csel	x10, x10, x9, cc  // cc = lo, ul, last
     6d8:	csel	x9, x12, x13, cc  // cc = lo, ul, last
     6dc:	ldr	x9, [x9]
     6e0:	cbnz	x9, 6c4 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x3c>
     6e4:	cmp	x10, x8
     6e8:	b.eq	8cc <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>  // b.none
     6ec:	ldr	x9, [x10, #32]
     6f0:	cmp	x9, x0
     6f4:	csel	x9, x8, x10, hi  // hi = pmore
     6f8:	cmp	x9, x8
     6fc:	b.eq	8cc <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>  // b.none
     700:	ldr	x23, [x9, #40]
     704:	ldp	x8, x9, [x23, #8]
     708:	cmp	x8, x9
     70c:	b.eq	76c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xe4>  // b.none
     710:	mov	w25, #0x101                 	// #257
     714:	mov	w24, #0x1                   	// #1
     718:	movk	w25, #0x1, lsl #16
     71c:	b	734 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xac>
     720:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
     724:	ldp	x8, x0, [x23, #8]
     728:	cmp	x8, x0
     72c:	mov	x9, x0
     730:	b.eq	76c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xe4>  // b.none
     734:	ldur	x10, [x9, #-8]
     738:	sub	x0, x9, #0x20
     73c:	ldr	w11, [x10, #32]
     740:	sub	w11, w11, #0x1
     744:	str	w11, [x10, #32]
     748:	str	x0, [x23, #16]
     74c:	ldur	x9, [x9, #-16]
     750:	add	x9, x9, #0x10
     754:	cmp	x9, #0x10
     758:	b.hi	720 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x98>  // b.pmore
     75c:	lsl	x9, x24, x9
     760:	tst	x9, x25
     764:	b.ne	728 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xa0>  // b.any
     768:	b	720 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x98>
     76c:	mov	x0, x20
     770:	mov	x1, x23
     774:	bl	8ec <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     778:	ldr	x24, [x19, #16]!
     77c:	mov	x8, sp
     780:	add	x23, x8, #0x10
     784:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     788:	ldr	x9, [x19, #8]
     78c:	ldr	d0, [x8]
     790:	str	x23, [sp]
     794:	sub	x26, x9, x24
     798:	asr	x25, x26, #3
     79c:	cmp	x25, #0x9
     7a0:	str	d0, [sp, #8]
     7a4:	b.cc	7bc <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x134>  // b.lo, b.ul, b.last
     7a8:	mov	x0, sp
     7ac:	mov	w3, #0x8                   	// #8
     7b0:	mov	x1, x23
     7b4:	mov	x2, x25
     7b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7bc:	cbz	x26, 7d8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x150>
     7c0:	ldr	x8, [sp]
     7c4:	ldr	w9, [sp, #8]
     7c8:	mov	x1, x24
     7cc:	mov	x2, x26
     7d0:	add	x0, x8, x9, lsl #3
     7d4:	bl	0 <memmove>
     7d8:	ldp	w8, w9, [sp, #8]
     7dc:	add	x8, x25, x8
     7e0:	cmp	x8, x9
     7e4:	b.hi	8ac <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x224>  // b.pmore
     7e8:	str	w8, [sp, #8]
     7ec:	cbz	x22, 868 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1e0>
     7f0:	lsl	x24, x22, #3
     7f4:	ldr	x1, [x21]
     7f8:	mov	x0, x20
     7fc:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     800:	ldp	w8, w9, [sp, #8]
     804:	mov	x22, x0
     808:	cmp	w8, w9
     80c:	b.cs	848 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1c0>  // b.hs, b.nlast
     810:	ldr	x9, [sp]
     814:	str	x22, [x9, w8, uxtw #3]
     818:	ldp	w8, w9, [sp, #8]
     81c:	cmp	w8, w9
     820:	b.cs	8ac <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x224>  // b.hs, b.nlast
     824:	add	w8, w8, #0x1
     828:	mov	x0, x20
     82c:	mov	x1, x22
     830:	str	w8, [sp, #8]
     834:	bl	8ec <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     838:	subs	x24, x24, #0x8
     83c:	add	x21, x21, #0x8
     840:	b.ne	7f4 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x16c>  // b.any
     844:	b	864 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc>
     848:	mov	x0, sp
     84c:	mov	w3, #0x8                   	// #8
     850:	mov	x1, x23
     854:	mov	x2, xzr
     858:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     85c:	ldr	w8, [sp, #8]
     860:	b	810 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x188>
     864:	ldr	w8, [sp, #8]
     868:	ldr	x1, [sp]
     86c:	mov	x0, x19
     870:	add	x2, x1, w8, uxtw #3
     874:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     878:	ldr	x0, [sp]
     87c:	mov	x8, sp
     880:	add	x8, x8, #0x10
     884:	cmp	x0, x8
     888:	b.eq	890 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x208>  // b.none
     88c:	bl	0 <free>
     890:	ldp	x20, x19, [sp, #144]
     894:	ldp	x22, x21, [sp, #128]
     898:	ldp	x24, x23, [sp, #112]
     89c:	ldp	x26, x25, [sp, #96]
     8a0:	ldp	x29, x30, [sp, #80]
     8a4:	add	sp, sp, #0xa0
     8a8:	ret
     8ac:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8b0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8b4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8b8:	add	x0, x0, #0x0
     8bc:	add	x1, x1, #0x0
     8c0:	add	x3, x3, #0x0
     8c4:	mov	w2, #0x43                  	// #67
     8c8:	bl	0 <__assert_fail>
     8cc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8d0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8d4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8d8:	add	x0, x0, #0x0
     8dc:	add	x1, x1, #0x0
     8e0:	add	x3, x3, #0x0
     8e4:	mov	w2, #0x82                  	// #130
     8e8:	bl	0 <__assert_fail>

00000000000008ec <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>:
     8ec:	sub	sp, sp, #0x70
     8f0:	stp	x29, x30, [sp, #32]
     8f4:	stp	x26, x25, [sp, #48]
     8f8:	stp	x24, x23, [sp, #64]
     8fc:	stp	x22, x21, [sp, #80]
     900:	stp	x20, x19, [sp, #96]
     904:	add	x29, sp, #0x20
     908:	ldr	x21, [x1]
     90c:	mov	x19, x1
     910:	mov	x20, x0
     914:	add	x0, sp, #0x8
     918:	mov	x1, x21
     91c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     920:	ldp	x23, x25, [sp, #8]
     924:	ldr	x26, [sp, #24]
     928:	add	x24, x21, #0x48
     92c:	cmp	x23, x24
     930:	cset	w8, ne  // ne = any
     934:	cmp	x26, #0x0
     938:	cset	w9, ne  // ne = any
     93c:	cmp	x24, x25
     940:	b.ne	94c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>  // b.any
     944:	and	w8, w8, w9
     948:	cbz	w8, a40 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x154>
     94c:	ldrb	w8, [x26]
     950:	tbnz	w8, #2, a7c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x190>
     954:	sub	x8, x26, #0x18
     958:	cmp	x26, #0x0
     95c:	csel	x21, xzr, x8, eq  // eq = none
     960:	cbz	x26, a9c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x1b0>
     964:	ldrb	w8, [x21, #16]
     968:	sub	w8, w8, #0x1d
     96c:	cmp	w8, #0x33
     970:	b.hi	9d4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>  // b.pmore
     974:	mov	w9, #0x1                   	// #1
     978:	lsl	x8, x9, x8
     97c:	mov	x9, #0x41                  	// #65
     980:	movk	x9, #0x8, lsl #48
     984:	tst	x8, x9
     988:	b.eq	9d4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>  // b.none
     98c:	ldur	x22, [x21, #-24]
     990:	cbz	x22, 9c4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     994:	ldrb	w8, [x22, #16]
     998:	cbnz	w8, 9c4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     99c:	ldr	w0, [x22, #36]
     9a0:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
     9a4:	tbz	w0, #0, 9c4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     9a8:	ldrb	w8, [x22, #33]
     9ac:	tbnz	w8, #5, 9d4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>
     9b0:	mov	x0, x20
     9b4:	mov	x1, x22
     9b8:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     9bc:	mov	x2, x0
     9c0:	b	9c8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xdc>
     9c4:	ldr	x2, [x20, #64]
     9c8:	mov	x0, x19
     9cc:	mov	x1, x21
     9d0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     9d4:	ldrb	w8, [x25]
     9d8:	tbnz	w8, #2, a5c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x170>
     9dc:	ldr	x26, [x26, #8]
     9e0:	sub	x8, x25, #0x18
     9e4:	cmp	x25, #0x0
     9e8:	csel	x8, xzr, x8, eq  // eq = none
     9ec:	add	x8, x8, #0x28
     9f0:	cmp	x8, x26
     9f4:	b.ne	a20 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x134>  // b.any
     9f8:	ldr	x25, [x25, #8]
     9fc:	cmp	x23, x25
     a00:	b.eq	a20 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x134>  // b.none
     a04:	ldrb	w8, [x25]
     a08:	tbnz	w8, #2, a5c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x170>
     a0c:	sub	x8, x25, #0x18
     a10:	cmp	x25, #0x0
     a14:	csel	x8, xzr, x8, eq  // eq = none
     a18:	ldr	x26, [x8, #48]
     a1c:	b	9ec <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x100>
     a20:	cmp	x23, x24
     a24:	cset	w8, ne  // ne = any
     a28:	cmp	x26, #0x0
     a2c:	cset	w9, ne  // ne = any
     a30:	cmp	x24, x25
     a34:	b.ne	94c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>  // b.any
     a38:	and	w8, w8, w9
     a3c:	tbnz	w8, #0, 94c <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>
     a40:	ldp	x20, x19, [sp, #96]
     a44:	ldp	x22, x21, [sp, #80]
     a48:	ldp	x24, x23, [sp, #64]
     a4c:	ldp	x26, x25, [sp, #48]
     a50:	ldp	x29, x30, [sp, #32]
     a54:	add	sp, sp, #0x70
     a58:	ret
     a5c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a60:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a64:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a68:	add	x0, x0, #0x0
     a6c:	add	x1, x1, #0x0
     a70:	add	x3, x3, #0x0
     a74:	mov	w2, #0x8b                  	// #139
     a78:	bl	0 <__assert_fail>
     a7c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a80:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a84:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a88:	add	x0, x0, #0x0
     a8c:	add	x1, x1, #0x0
     a90:	add	x3, x3, #0x0
     a94:	mov	w2, #0x8b                  	// #139
     a98:	bl	0 <__assert_fail>
     a9c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     aa0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     aa4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     aa8:	add	x0, x0, #0x0
     aac:	add	x1, x1, #0x0
     ab0:	add	x3, x3, #0x0
     ab4:	mov	w2, #0x69                  	// #105
     ab8:	bl	0 <__assert_fail>

0000000000000abc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>:
     abc:	sub	sp, sp, #0x150
     ac0:	stp	x29, x30, [sp, #240]
     ac4:	stp	x28, x27, [sp, #256]
     ac8:	stp	x26, x25, [sp, #272]
     acc:	stp	x24, x23, [sp, #288]
     ad0:	stp	x22, x21, [sp, #304]
     ad4:	stp	x20, x19, [sp, #320]
     ad8:	add	x29, sp, #0xf0
     adc:	adrp	x9, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ae0:	ldr	d0, [x9]
     ae4:	adrp	x10, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ae8:	str	xzr, [x0]
     aec:	str	wzr, [x0, #16]
     af0:	str	wzr, [x0, #64]
     af4:	str	wzr, [x0, #96]
     af8:	stp	xzr, xzr, [x0, #184]
     afc:	str	xzr, [x0, #176]
     b00:	str	d0, [sp, #128]
     b04:	ldr	d0, [x10]
     b08:	add	x8, sp, #0x78
     b0c:	add	x9, sp, #0x58
     b10:	str	x0, [sp, #48]
     b14:	add	x21, x8, #0x10
     b18:	add	x22, x9, #0x10
     b1c:	sub	x0, x29, #0x28
     b20:	mov	x20, x1
     b24:	str	x21, [sp, #120]
     b28:	str	x22, [sp, #88]
     b2c:	str	d0, [sp, #96]
     b30:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b34:	ldp	x27, x23, [x29, #-40]
     b38:	ldur	x25, [x29, #-24]
     b3c:	add	x28, x20, #0x48
     b40:	cmp	x27, x28
     b44:	cset	w8, ne  // ne = any
     b48:	cmp	x25, #0x0
     b4c:	cset	w9, ne  // ne = any
     b50:	cmp	x28, x23
     b54:	b.ne	f48 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x48c>  // b.any
     b58:	and	w8, w8, w9
     b5c:	cbnz	w8, f48 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x48c>
     b60:	mov	w26, wzr
     b64:	str	xzr, [sp, #16]
     b68:	ldr	x23, [sp, #48]
     b6c:	ldr	x0, [x23]
     b70:	cbz	x0, 1494 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9d8>
     b74:	mov	w1, wzr
     b78:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b7c:	cbz	x0, 1ae0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1024>
     b80:	ldrb	w8, [x0, #16]
     b84:	mov	x21, x0
     b88:	cmp	w8, #0x50
     b8c:	b.ne	1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>  // b.any
     b90:	ldur	x8, [x21, #-24]
     b94:	cbz	x8, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
     b98:	ldrb	w9, [x8, #16]
     b9c:	cbnz	w9, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
     ba0:	ldrb	w9, [x8, #33]
     ba4:	tbz	w9, #5, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
     ba8:	ldr	w19, [x8, #36]
     bac:	sub	w8, w19, #0x18
     bb0:	cmp	w8, #0x3
     bb4:	b.cs	1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>  // b.hs, b.nlast
     bb8:	sub	w8, w19, #0x19
     bbc:	cmp	w8, #0x2
     bc0:	b.cs	15c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb04>  // b.hs, b.nlast
     bc4:	mov	x0, x21
     bc8:	bl	1cc8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>
     bcc:	cmp	w19, #0x19
     bd0:	mov	w8, #0x1                   	// #1
     bd4:	cinc	w8, w8, ne  // ne = any
     bd8:	mov	w1, #0x3                   	// #3
     bdc:	mov	x0, x21
     be0:	str	w8, [x23, #168]
     be4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     be8:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     bec:	cbz	x0, 1b00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1044>
     bf0:	ldrb	w8, [x0, #16]
     bf4:	mov	x19, x0
     bf8:	cbnz	w8, 1b20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1064>
     bfc:	mov	w1, #0x4                   	// #4
     c00:	mov	x0, x21
     c04:	str	x19, [x23, #200]
     c08:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c0c:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c10:	cbz	x0, 1b00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1044>
     c14:	ldrb	w8, [x0, #16]
     c18:	cbnz	w8, 1b20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1064>
     c1c:	str	x0, [x23, #208]
     c20:	mov	w1, #0x5                   	// #5
     c24:	mov	x0, x21
     c28:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c2c:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c30:	cbz	x0, 1b00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1044>
     c34:	ldrb	w8, [x0, #16]
     c38:	cbnz	w8, 1b20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1064>
     c3c:	stp	x0, xzr, [x23, #216]
     c40:	mov	x0, x23
     c44:	strb	wzr, [x23, #232]
     c48:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c4c:	ldr	w8, [x23, #168]
     c50:	str	x0, [sp, #32]
     c54:	str	x1, [sp, #80]
     c58:	sub	w8, w8, #0x1
     c5c:	cmp	w8, #0x2
     c60:	b.cs	1c28 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
     c64:	ldr	x8, [x23, #200]
     c68:	ldr	x9, [x8, #24]
     c6c:	cbz	x9, 1c48 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x118c>
     c70:	ldrb	w8, [x9, #8]
     c74:	str	x19, [sp, #8]
     c78:	cmp	w8, #0xc
     c7c:	b.ne	1c68 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11ac>  // b.any
     c80:	ldr	w8, [x23, #96]
     c84:	cbz	w8, 176c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcb0>
     c88:	ldr	x11, [sp, #48]
     c8c:	ldr	x10, [x9, #16]
     c90:	ldr	w9, [x9, #12]
     c94:	ldr	x25, [x11, #88]
     c98:	ldr	x11, [sp, #80]
     c9c:	lsl	x9, x9, #3
     ca0:	add	x10, x10, #0x10
     ca4:	add	x8, x25, x8, lsl #3
     ca8:	str	x8, [sp, #64]
     cac:	sub	x8, x9, #0x8
     cb0:	cmp	x11, #0x0
     cb4:	lsl	x11, x11, #3
     cb8:	asr	x8, x8, #3
     cbc:	cset	w12, ne  // ne = any
     cc0:	sub	x11, x11, #0x8
     cc4:	sub	x8, x8, #0x1
     cc8:	str	w12, [sp, #72]
     ccc:	str	x11, [sp, #24]
     cd0:	str	x10, [sp, #40]
     cd4:	str	x8, [sp, #56]
     cd8:	b	cec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x230>
     cdc:	ldr	x8, [sp, #64]
     ce0:	add	x25, x25, #0x8
     ce4:	cmp	x25, x8
     ce8:	b.eq	176c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcb0>  // b.none
     cec:	ldr	x26, [x25]
     cf0:	cbz	x26, 19f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf38>
     cf4:	ldur	x8, [x26, #-24]
     cf8:	ldrb	w9, [x8, #16]
     cfc:	cmp	w9, #0x0
     d00:	csel	x8, x8, xzr, eq  // eq = none
     d04:	ldr	w8, [x8, #36]
     d08:	cmp	w8, #0x24
     d0c:	b.ne	1a14 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf58>  // b.any
     d10:	ldrb	w8, [x26, #16]
     d14:	ldr	w19, [x26, #20]
     d18:	cmp	w8, #0x50
     d1c:	b.eq	d4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x290>  // b.none
     d20:	cmp	w8, #0x23
     d24:	b.eq	d38 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x27c>  // b.none
     d28:	cmp	w8, #0x1d
     d2c:	b.ne	1a2c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf70>  // b.any
     d30:	mov	x20, #0xfffffffffffffffe    	// #-2
     d34:	b	d50 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x294>
     d38:	mov	x0, x26
     d3c:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
     d40:	mov	x8, xzr
     d44:	sub	x20, x8, w0, uxtw
     d48:	b	d50 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x294>
     d4c:	mov	x20, xzr
     d50:	and	x19, x19, #0xfffffff
     d54:	mov	w23, #0x18                  	// #24
     d58:	mneg	x8, x19, x23
     d5c:	mov	x0, x26
     d60:	add	x21, x26, x8
     d64:	madd	x22, x20, x23, x26
     d68:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     d6c:	mov	w10, w0
     d70:	mneg	x8, x10, x23
     d74:	add	x8, x22, x8
     d78:	ldr	x9, [sp, #80]
     d7c:	sub	x8, x8, #0x18
     d80:	cmp	x21, x8
     d84:	mov	w11, #0x18                  	// #24
     d88:	cset	w8, ne  // ne = any
     d8c:	cbz	x9, eb4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3f8>
     d90:	ldr	w9, [sp, #72]
     d94:	b.eq	eb8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.none
     d98:	mov	x8, #0xffffffffffffffe8    	// #-24
     d9c:	mul	x19, x19, x8
     da0:	madd	x22, x20, x8, x19
     da4:	ldp	x20, x28, [sp, #24]
     da8:	mov	x9, #0xffffffffffffffd0    	// #-48
     dac:	msub	x27, x10, x11, x9
     db0:	mov	x23, x26
     db4:	add	x21, x23, x19
     db8:	ldr	x8, [x21]
     dbc:	ldr	x1, [x28]
     dc0:	ldr	x0, [x8]
     dc4:	cmp	x0, x1
     dc8:	b.eq	e84 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c8>  // b.none
     dcc:	bl	0 <_ZN4llvm8CastInst13isBitCastableEPNS_4TypeES2_>
     dd0:	tbz	w0, #0, 18ac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xdf0>
     dd4:	mov	w0, #0x38                  	// #56
     dd8:	mov	w1, #0x1                   	// #1
     ddc:	bl	0 <_ZN4llvm4UsernwEmj>
     de0:	ldr	x1, [x23, x19]
     de4:	ldr	x2, [x28]
     de8:	mov	w8, #0x101                 	// #257
     dec:	sub	x3, x29, #0x28
     df0:	mov	x4, x26
     df4:	mov	x24, x0
     df8:	stp	xzr, xzr, [x29, #-40]
     dfc:	sturh	w8, [x29, #-24]
     e00:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     e04:	ldr	x8, [x23, x19]
     e08:	cbz	x8, e34 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x378>
     e0c:	add	x9, x23, x19
     e10:	ldp	x10, x8, [x9, #8]
     e14:	and	x8, x8, #0xfffffffffffffffc
     e18:	str	x10, [x8]
     e1c:	ldr	x9, [x9, #8]
     e20:	cbz	x9, e34 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x378>
     e24:	ldr	x10, [x9, #16]
     e28:	and	x10, x10, #0x3
     e2c:	orr	x8, x10, x8
     e30:	str	x8, [x9, #16]
     e34:	str	x24, [x23, x19]
     e38:	cbz	x24, e84 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c8>
     e3c:	ldr	x9, [x24, #8]!
     e40:	add	x8, x23, x19
     e44:	mov	x10, x8
     e48:	str	x9, [x10, #8]!
     e4c:	cbz	x9, e68 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3ac>
     e50:	tst	x10, #0x3
     e54:	b.ne	18d0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe14>  // b.any
     e58:	ldr	x11, [x9, #16]
     e5c:	and	x11, x11, #0x3
     e60:	orr	x10, x11, x10
     e64:	str	x10, [x9, #16]
     e68:	tst	x24, #0x3
     e6c:	b.ne	18d0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe14>  // b.any
     e70:	ldr	x9, [x8, #16]
     e74:	and	x9, x9, #0x3
     e78:	orr	x9, x9, x24
     e7c:	str	x9, [x8, #16]
     e80:	str	x21, [x24]
     e84:	cmp	x22, x27
     e88:	cset	w8, ne  // ne = any
     e8c:	cmp	x20, #0x0
     e90:	cset	w9, ne  // ne = any
     e94:	cbz	x20, eb8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     e98:	add	x28, x28, #0x8
     e9c:	cmp	x22, x27
     ea0:	sub	x27, x27, #0x18
     ea4:	add	x23, x23, #0x18
     ea8:	sub	x20, x20, #0x8
     eac:	b.ne	db4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2f8>  // b.any
     eb0:	b	eb8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     eb4:	ldr	w9, [sp, #72]
     eb8:	tbnz	w9, #0, 1930 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe74>
     ebc:	cbnz	w8, 1930 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe74>
     ec0:	ldr	x9, [x26]
     ec4:	ldr	x10, [sp, #56]
     ec8:	stur	x9, [x29, #-40]
     ecc:	ldrb	w8, [x9, #8]
     ed0:	cbz	w8, ef4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x438>
     ed4:	cbz	x9, 1a68 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfac>
     ed8:	cmp	w8, #0xd
     edc:	b.ne	f08 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x44c>  // b.any
     ee0:	ldr	x8, [x9, #16]
     ee4:	ldr	w9, [x9, #12]
     ee8:	cmp	x9, x10
     eec:	b.eq	f18 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x45c>  // b.none
     ef0:	b	1a44 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf88>
     ef4:	mov	x8, xzr
     ef8:	mov	x9, xzr
     efc:	cmp	x9, x10
     f00:	b.eq	f18 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x45c>  // b.none
     f04:	b	1a44 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf88>
     f08:	sub	x8, x29, #0x28
     f0c:	mov	w9, #0x1                   	// #1
     f10:	cmp	x9, x10
     f14:	b.ne	1a44 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf88>  // b.any
     f18:	cbz	x10, cdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x220>
     f1c:	ldr	x9, [sp, #40]
     f20:	cbz	x10, 1868 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xdac>
     f24:	ldr	x11, [x8]
     f28:	ldr	x12, [x9]
     f2c:	cmp	x11, x12
     f30:	b.ne	1888 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xdcc>  // b.any
     f34:	subs	x10, x10, #0x1
     f38:	add	x9, x9, #0x8
     f3c:	add	x8, x8, #0x8
     f40:	b.ne	f20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x464>  // b.any
     f44:	b	cdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x220>
     f48:	ldr	x8, [sp, #48]
     f4c:	adrp	x11, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f50:	mov	w26, wzr
     f54:	add	x11, x11, #0x0
     f58:	add	x9, x8, #0x8
     f5c:	str	x9, [sp, #80]
     f60:	add	x9, x8, #0x38
     f64:	str	x9, [sp, #56]
     f68:	add	x9, x8, #0x58
     f6c:	str	x9, [sp, #72]
     f70:	add	x9, x8, #0x18
     f74:	str	x9, [sp, #40]
     f78:	add	x9, x8, #0x68
     f7c:	add	x8, x8, #0x48
     f80:	str	xzr, [sp, #16]
     f84:	str	x9, [sp, #64]
     f88:	str	x8, [sp, #32]
     f8c:	ldrb	w8, [x25]
     f90:	tbnz	w8, #2, 1954 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe98>
     f94:	sub	x8, x25, #0x18
     f98:	cmp	x25, #0x0
     f9c:	csel	x24, xzr, x8, eq  // eq = none
     fa0:	cbz	x25, 1974 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xeb8>
     fa4:	ldrb	w8, [x24, #16]
     fa8:	cmp	w8, #0x50
     fac:	b.ne	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>  // b.any
     fb0:	ldur	x8, [x24, #-24]
     fb4:	cbz	x8, fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
     fb8:	ldrb	w9, [x8, #16]
     fbc:	cbnz	w9, fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
     fc0:	ldrb	w9, [x8, #33]
     fc4:	tbnz	w9, #5, 1038 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x57c>
     fc8:	ldrb	w8, [x23]
     fcc:	tbnz	w8, #2, 18f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe34>
     fd0:	ldr	x25, [x25, #8]
     fd4:	sub	x8, x23, #0x18
     fd8:	cmp	x23, #0x0
     fdc:	csel	x8, xzr, x8, eq  // eq = none
     fe0:	add	x8, x8, #0x28
     fe4:	cmp	x8, x25
     fe8:	b.ne	1014 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x558>  // b.any
     fec:	ldr	x23, [x23, #8]
     ff0:	cmp	x27, x23
     ff4:	b.eq	1014 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x558>  // b.none
     ff8:	ldrb	w8, [x23]
     ffc:	tbnz	w8, #2, 18f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe34>
    1000:	sub	x8, x23, #0x18
    1004:	cmp	x23, #0x0
    1008:	csel	x8, xzr, x8, eq  // eq = none
    100c:	ldr	x25, [x8, #48]
    1010:	b	fe0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x524>
    1014:	cmp	x27, x28
    1018:	cset	w8, ne  // ne = any
    101c:	cmp	x25, #0x0
    1020:	cset	w9, ne  // ne = any
    1024:	cmp	x28, x23
    1028:	b.ne	f8c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x4d0>  // b.any
    102c:	and	w8, w8, w9
    1030:	tbnz	w8, #0, f8c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x4d0>
    1034:	b	b68 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xac>
    1038:	ldr	w8, [x8, #36]
    103c:	sub	w8, w8, #0x12
    1040:	cmp	w8, #0x12
    1044:	b.hi	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>  // b.pmore
    1048:	adr	x9, fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    104c:	ldrb	w10, [x11, x8]
    1050:	add	x9, x9, x10, lsl #2
    1054:	br	x9
    1058:	mov	x0, x24
    105c:	mov	w1, wzr
    1060:	str	x22, [sp, #24]
    1064:	mov	x22, x21
    1068:	mov	w21, w26
    106c:	mov	x26, x11
    1070:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1074:	cbz	x0, 1ae0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1024>
    1078:	ldrb	w8, [x0, #16]
    107c:	cmp	w8, #0x50
    1080:	b.ne	1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>  // b.any
    1084:	ldur	x8, [x0, #-24]
    1088:	cbz	x8, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
    108c:	ldrb	w9, [x8, #16]
    1090:	cbnz	w9, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
    1094:	ldrb	w9, [x8, #33]
    1098:	tbz	w9, #5, 1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
    109c:	ldr	w8, [x8, #36]
    10a0:	sub	w9, w8, #0x18
    10a4:	cmp	w9, #0x3
    10a8:	b.cs	1aa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>  // b.hs, b.nlast
    10ac:	cmp	w8, #0x18
    10b0:	b.ne	10bc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x600>  // b.any
    10b4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    10b8:	cbnz	x1, 11c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x704>
    10bc:	ldr	x19, [sp, #48]
    10c0:	ldr	x8, [x19]
    10c4:	cbnz	x8, 1b40 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1084>
    10c8:	ldr	x8, [x24, #56]
    10cc:	mov	x0, x24
    10d0:	stur	x8, [x29, #-40]
    10d4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    10d8:	mov	x1, x0
    10dc:	sub	x0, x29, #0x28
    10e0:	mov	w3, #0x23                  	// #35
    10e4:	mov	w2, wzr
    10e8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    10ec:	str	x0, [x24, #56]
    10f0:	stur	x0, [x29, #-40]
    10f4:	mov	x0, x24
    10f8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    10fc:	mov	x1, x0
    1100:	sub	x0, x29, #0x28
    1104:	mov	w3, #0x15                  	// #21
    1108:	mov	w2, wzr
    110c:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    1110:	str	x0, [x24, #56]
    1114:	stur	x0, [x29, #-40]
    1118:	mov	x0, x24
    111c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1120:	mov	x1, x0
    1124:	sub	x0, x29, #0x28
    1128:	mov	w2, #0xffffffff            	// #-1
    112c:	mov	w3, #0x19                  	// #25
    1130:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    1134:	str	x0, [x24, #56]
    1138:	str	x24, [x19]
    113c:	b	11c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x704>
    1140:	ldr	x19, [sp, #48]
    1144:	str	x22, [sp, #24]
    1148:	mov	x22, x21
    114c:	mov	w21, w26
    1150:	ldp	w8, w9, [x19, #96]
    1154:	cmp	w8, w9
    1158:	b.cs	1398 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x8dc>  // b.hs, b.nlast
    115c:	ldr	x9, [x19, #88]
    1160:	str	x24, [x9, w8, uxtw #3]
    1164:	ldp	w8, w9, [x19, #96]
    1168:	cmp	w8, w9
    116c:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    1170:	add	w8, w8, #0x1
    1174:	mov	w1, #0x1                   	// #1
    1178:	mov	x0, x24
    117c:	mov	x26, x11
    1180:	str	w8, [x19, #96]
    1184:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1188:	cbz	x0, 1b60 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10a4>
    118c:	ldrb	w8, [x0, #16]
    1190:	cmp	w8, #0x11
    1194:	b.cs	1b80 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10c4>  // b.hs, b.nlast
    1198:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    119c:	tbz	w0, #0, 11c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x704>
    11a0:	tbnz	w21, #0, 1b50 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1094>
    11a4:	ldr	x8, [sp, #48]
    11a8:	mov	x11, x26
    11ac:	mov	w26, #0x1                   	// #1
    11b0:	ldr	w8, [x8, #96]
    11b4:	sub	x8, x8, #0x1
    11b8:	str	x8, [sp, #16]
    11bc:	b	11c8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x70c>
    11c0:	mov	x11, x26
    11c4:	mov	w26, w21
    11c8:	mov	x21, x22
    11cc:	ldr	x22, [sp, #24]
    11d0:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    11d4:	ldr	x19, [sp, #48]
    11d8:	str	w26, [sp, #24]
    11dc:	ldp	w8, w9, [x19, #16]
    11e0:	cmp	w8, w9
    11e4:	b.cs	13b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x8fc>  // b.hs, b.nlast
    11e8:	ldr	x9, [x19, #8]
    11ec:	str	x24, [x9, w8, uxtw #3]
    11f0:	ldp	w8, w9, [x19, #16]
    11f4:	cmp	w8, w9
    11f8:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    11fc:	ldr	x9, [x19, #8]
    1200:	add	x8, x8, #0x1
    1204:	str	w8, [x19, #16]
    1208:	mov	w1, #0x1                   	// #1
    120c:	add	x8, x9, x8, lsl #3
    1210:	ldur	x0, [x8, #-8]
    1214:	mov	x26, x11
    1218:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    121c:	cbz	x0, 1b60 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10a4>
    1220:	ldrb	w8, [x0, #16]
    1224:	cmp	w8, #0x11
    1228:	b.cs	1b80 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10c4>  // b.hs, b.nlast
    122c:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    1230:	tbnz	w0, #0, 1298 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7dc>
    1234:	ldr	x8, [sp, #48]
    1238:	ldr	w8, [x8, #16]
    123c:	cmp	w8, #0x2
    1240:	b.cc	1298 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7dc>  // b.lo, b.ul, b.last
    1244:	ldr	x8, [sp, #80]
    1248:	mov	w1, #0x1                   	// #1
    124c:	ldr	x8, [x8]
    1250:	ldr	x0, [x8]
    1254:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1258:	cbz	x0, 1b60 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10a4>
    125c:	ldrb	w8, [x0, #16]
    1260:	cmp	w8, #0x11
    1264:	b.cs	1b80 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10c4>  // b.hs, b.nlast
    1268:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    126c:	tbz	w0, #0, 1ba0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10e4>
    1270:	ldr	x8, [sp, #48]
    1274:	ldr	w8, [x8, #16]
    1278:	cbz	w8, 1bb0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10f4>
    127c:	ldr	x9, [sp, #80]
    1280:	ldr	x9, [x9]
    1284:	add	x8, x9, x8, lsl #3
    1288:	ldur	x10, [x8, #-8]
    128c:	ldr	x11, [x9]
    1290:	str	x10, [x9]
    1294:	stur	x11, [x8, #-8]
    1298:	mov	x11, x26
    129c:	ldr	w26, [sp, #24]
    12a0:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    12a4:	ldr	x19, [sp, #48]
    12a8:	ldp	w8, w9, [x19, #96]
    12ac:	cmp	w8, w9
    12b0:	b.cs	13dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x920>  // b.hs, b.nlast
    12b4:	ldr	x9, [x19, #88]
    12b8:	str	x24, [x9, w8, uxtw #3]
    12bc:	ldp	w8, w9, [x19, #96]
    12c0:	cmp	w8, w9
    12c4:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    12c8:	add	w8, w8, #0x1
    12cc:	str	w8, [x19, #96]
    12d0:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    12d4:	ldp	w8, w9, [sp, #128]
    12d8:	cmp	w8, w9
    12dc:	b.cs	1414 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x958>  // b.hs, b.nlast
    12e0:	ldr	x9, [sp, #120]
    12e4:	str	x24, [x9, w8, uxtw #3]
    12e8:	ldp	w8, w9, [sp, #128]
    12ec:	cmp	w8, w9
    12f0:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    12f4:	add	w8, w8, #0x1
    12f8:	str	w8, [sp, #128]
    12fc:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    1300:	mov	x0, x24
    1304:	mov	x19, x11
    1308:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    130c:	ldr	x8, [x24, #8]
    1310:	cbz	x8, 134c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x890>
    1314:	mov	x11, x19
    1318:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    131c:	ldr	x19, [sp, #48]
    1320:	ldp	w8, w9, [x19, #64]
    1324:	cmp	w8, w9
    1328:	b.cs	1438 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x97c>  // b.hs, b.nlast
    132c:	ldr	x9, [x19, #56]
    1330:	str	x24, [x9, w8, uxtw #3]
    1334:	ldp	w8, w9, [x19, #64]
    1338:	cmp	w8, w9
    133c:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    1340:	add	w8, w8, #0x1
    1344:	str	w8, [x19, #64]
    1348:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    134c:	ldur	x8, [x24, #-24]
    1350:	ldrb	w9, [x8, #16]
    1354:	cmp	w9, #0x0
    1358:	csel	x8, x8, xzr, eq  // eq = none
    135c:	ldr	w8, [x8, #36]
    1360:	cmp	w8, #0x20
    1364:	b.ne	1bd0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1114>  // b.any
    1368:	ldp	w8, w9, [sp, #96]
    136c:	mov	x11, x19
    1370:	cmp	w8, w9
    1374:	b.cs	1474 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9b8>  // b.hs, b.nlast
    1378:	ldr	x9, [sp, #88]
    137c:	str	x24, [x9, w8, uxtw #3]
    1380:	ldp	w8, w9, [sp, #96]
    1384:	cmp	w8, w9
    1388:	b.cs	1bf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1134>  // b.hs, b.nlast
    138c:	add	w8, w8, #0x1
    1390:	str	w8, [sp, #96]
    1394:	b	fc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    1398:	ldp	x1, x0, [sp, #64]
    139c:	mov	w3, #0x8                   	// #8
    13a0:	mov	x2, xzr
    13a4:	mov	x26, x11
    13a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13ac:	ldr	w8, [x19, #96]
    13b0:	mov	x11, x26
    13b4:	b	115c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x6a0>
    13b8:	ldr	x0, [sp, #80]
    13bc:	ldr	x1, [sp, #40]
    13c0:	mov	w3, #0x8                   	// #8
    13c4:	mov	x2, xzr
    13c8:	mov	x26, x11
    13cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13d0:	ldr	w8, [x19, #16]
    13d4:	mov	x11, x26
    13d8:	b	11e8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x72c>
    13dc:	ldp	x1, x0, [sp, #64]
    13e0:	mov	w3, #0x8                   	// #8
    13e4:	mov	x2, xzr
    13e8:	str	x22, [sp, #24]
    13ec:	mov	x22, x21
    13f0:	mov	w21, w26
    13f4:	mov	x26, x11
    13f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13fc:	mov	x11, x26
    1400:	mov	w26, w21
    1404:	mov	x21, x22
    1408:	ldr	x22, [sp, #24]
    140c:	ldr	w8, [x19, #96]
    1410:	b	12b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7f8>
    1414:	add	x0, sp, #0x78
    1418:	mov	w3, #0x8                   	// #8
    141c:	mov	x1, x21
    1420:	mov	x2, xzr
    1424:	mov	x19, x11
    1428:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    142c:	ldr	w8, [sp, #128]
    1430:	mov	x11, x19
    1434:	b	12e0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x824>
    1438:	ldr	x0, [sp, #56]
    143c:	ldr	x1, [sp, #32]
    1440:	mov	w3, #0x8                   	// #8
    1444:	mov	x2, xzr
    1448:	str	x22, [sp, #24]
    144c:	mov	x22, x21
    1450:	mov	w21, w26
    1454:	mov	x26, x11
    1458:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    145c:	mov	x11, x26
    1460:	mov	w26, w21
    1464:	mov	x21, x22
    1468:	ldr	x22, [sp, #24]
    146c:	ldr	w8, [x19, #64]
    1470:	b	132c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x870>
    1474:	add	x0, sp, #0x58
    1478:	mov	w3, #0x8                   	// #8
    147c:	mov	x1, x22
    1480:	mov	x2, xzr
    1484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1488:	ldr	w8, [sp, #96]
    148c:	mov	x11, x19
    1490:	b	1378 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x8bc>
    1494:	mov	x0, x20
    1498:	bl	0 <_ZNK4llvm8Function10getContextEv>
    149c:	mov	w1, wzr
    14a0:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    14a4:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    14a8:	ldr	w8, [sp, #128]
    14ac:	cbz	w8, 14dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa20>
    14b0:	ldr	x19, [sp, #120]
    14b4:	mov	x20, x0
    14b8:	lsl	x22, x8, #3
    14bc:	ldr	x21, [x19], #8
    14c0:	mov	x1, x20
    14c4:	mov	x0, x21
    14c8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    14cc:	mov	x0, x21
    14d0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    14d4:	subs	x22, x22, #0x8
    14d8:	b.ne	14bc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa00>  // b.any
    14dc:	ldr	w8, [x23, #96]
    14e0:	cbz	w8, 158c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xad0>
    14e4:	ldr	x19, [x23, #88]
    14e8:	lsl	x21, x8, #3
    14ec:	b	14fc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa40>
    14f0:	subs	x21, x21, #0x8
    14f4:	add	x19, x19, #0x8
    14f8:	b.eq	158c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xad0>  // b.none
    14fc:	ldr	x20, [x19]
    1500:	ldr	x0, [x20]
    1504:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    1508:	mov	x1, x0
    150c:	mov	x0, x20
    1510:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1514:	mov	x0, x20
    1518:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    151c:	cbz	x20, 1994 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xed8>
    1520:	ldur	x8, [x20, #-24]
    1524:	ldrb	w9, [x8, #16]
    1528:	cmp	w9, #0x0
    152c:	csel	x8, x8, xzr, eq  // eq = none
    1530:	ldr	w8, [x8, #36]
    1534:	cmp	w8, #0x23
    1538:	b.ne	14f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa34>  // b.any
    153c:	mov	x0, x20
    1540:	mov	w1, wzr
    1544:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1548:	cbz	x0, 19d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf18>
    154c:	ldrb	w8, [x0, #16]
    1550:	cmp	w8, #0x10
    1554:	b.eq	14f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa34>  // b.none
    1558:	cmp	w8, #0x50
    155c:	b.ne	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>  // b.any
    1560:	ldur	x8, [x0, #-24]
    1564:	cbz	x8, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1568:	ldrb	w9, [x8, #16]
    156c:	cbnz	w9, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1570:	ldrb	w9, [x8, #33]
    1574:	tbz	w9, #5, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1578:	ldr	w8, [x8, #36]
    157c:	cmp	w8, #0x20
    1580:	b.ne	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>  // b.any
    1584:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1588:	b	14f0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa34>
    158c:	ldr	w8, [x23, #16]
    1590:	cbz	w8, 17c8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd0c>
    1594:	ldr	x19, [x23, #8]
    1598:	lsl	x20, x8, #3
    159c:	ldr	x0, [x19], #8
    15a0:	mov	w1, wzr
    15a4:	mov	w2, wzr
    15a8:	mov	x3, xzr
    15ac:	mov	x4, xzr
    15b0:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    15b4:	subs	x20, x20, #0x8
    15b8:	b.ne	159c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xae0>  // b.any
    15bc:	b	17c8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd0c>
    15c0:	cmp	w19, #0x18
    15c4:	b.ne	1c10 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1154>  // b.any
    15c8:	and	w8, w26, #0x1
    15cc:	mov	x0, x21
    15d0:	str	wzr, [x23, #168]
    15d4:	strb	w8, [x23, #224]
    15d8:	str	xzr, [x23, #200]
    15dc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    15e0:	ldr	w8, [x23, #96]
    15e4:	stp	x0, xzr, [x23, #208]
    15e8:	cbz	w8, 176c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcb0>
    15ec:	ldr	x9, [sp, #48]
    15f0:	lsl	x23, x8, #3
    15f4:	mov	w24, #0x101                 	// #257
    15f8:	ldr	x22, [x9, #88]
    15fc:	b	161c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb60>
    1600:	mov	x0, x20
    1604:	mov	w1, wzr
    1608:	mov	x2, x21
    160c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1610:	subs	x23, x23, #0x8
    1614:	add	x22, x22, #0x8
    1618:	b.eq	176c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcb0>  // b.none
    161c:	ldr	x20, [x22]
    1620:	cbz	x20, 1994 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xed8>
    1624:	ldur	x8, [x20, #-24]
    1628:	ldrb	w9, [x8, #16]
    162c:	cmp	w9, #0x0
    1630:	csel	x8, x8, xzr, eq  // eq = none
    1634:	ldr	w8, [x8, #36]
    1638:	cmp	w8, #0x23
    163c:	b.ne	1a88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfcc>  // b.any
    1640:	mov	x0, x20
    1644:	mov	w1, wzr
    1648:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    164c:	cbz	x0, 19d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf18>
    1650:	ldrb	w8, [x0, #16]
    1654:	cmp	w8, #0x10
    1658:	b.eq	168c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xbd0>  // b.none
    165c:	cmp	w8, #0x50
    1660:	b.ne	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>  // b.any
    1664:	ldur	x8, [x0, #-24]
    1668:	cbz	x8, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    166c:	ldrb	w9, [x8, #16]
    1670:	cbnz	w9, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1674:	ldrb	w9, [x8, #33]
    1678:	tbz	w9, #5, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    167c:	ldr	w8, [x8, #36]
    1680:	cmp	w8, #0x20
    1684:	b.eq	1610 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb54>  // b.none
    1688:	b	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    168c:	ldr	x8, [sp, #48]
    1690:	mov	x0, x20
    1694:	ldr	x19, [x8]
    1698:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    169c:	mov	w1, #0x20                  	// #32
    16a0:	mov	x2, xzr
    16a4:	mov	x3, xzr
    16a8:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    16ac:	sub	x1, x29, #0x10
    16b0:	sub	x3, x29, #0x28
    16b4:	mov	w2, #0x1                   	// #1
    16b8:	mov	x4, x20
    16bc:	stur	x19, [x29, #-16]
    16c0:	stp	xzr, xzr, [x29, #-40]
    16c4:	sturh	w24, [x29, #-24]
    16c8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    16cc:	cbz	x0, 1ac0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1004>
    16d0:	ldrb	w8, [x0, #16]
    16d4:	mov	x21, x0
    16d8:	cmp	w8, #0x50
    16dc:	b.ne	19b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef8>  // b.any
    16e0:	ldur	x8, [x21, #-24]
    16e4:	cbz	x8, 19b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef8>
    16e8:	ldrb	w9, [x8, #16]
    16ec:	cbnz	w9, 19b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef8>
    16f0:	ldrb	w9, [x8, #33]
    16f4:	tbz	w9, #5, 19b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef8>
    16f8:	ldr	w8, [x8, #36]
    16fc:	cmp	w8, #0x20
    1700:	b.ne	19b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef8>  // b.any
    1704:	mov	x0, x20
    1708:	mov	w1, wzr
    170c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1710:	cbz	x0, 19d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf18>
    1714:	ldrb	w8, [x0, #16]
    1718:	cmp	w8, #0x10
    171c:	b.eq	1600 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb44>  // b.none
    1720:	cmp	w8, #0x50
    1724:	b.ne	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>  // b.any
    1728:	ldur	x8, [x0, #-24]
    172c:	cbz	x8, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1730:	ldrb	w9, [x8, #16]
    1734:	cbnz	w9, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1738:	ldrb	w9, [x8, #33]
    173c:	tbz	w9, #5, 1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>
    1740:	ldr	w8, [x8, #36]
    1744:	cmp	w8, #0x20
    1748:	b.ne	1910 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe54>  // b.any
    174c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1750:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1754:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1758:	add	x0, x0, #0x0
    175c:	add	x1, x1, #0x0
    1760:	add	x3, x3, #0x0
    1764:	mov	w2, #0xf3                  	// #243
    1768:	bl	0 <__assert_fail>
    176c:	ldr	w8, [sp, #128]
    1770:	ldr	x22, [sp, #48]
    1774:	cbz	w8, 17a0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce4>
    1778:	ldr	x19, [sp, #120]
    177c:	lsl	x21, x8, #3
    1780:	ldr	x20, [x19], #8
    1784:	ldr	x1, [x22]
    1788:	mov	x0, x20
    178c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1790:	mov	x0, x20
    1794:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1798:	subs	x21, x21, #0x8
    179c:	b.ne	1780 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcc4>  // b.any
    17a0:	ldr	w8, [x22, #168]
    17a4:	cbz	w8, 1818 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd5c>
    17a8:	ldr	w8, [sp, #96]
    17ac:	cbz	w8, 17c8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd0c>
    17b0:	ldr	x19, [sp, #88]
    17b4:	lsl	x20, x8, #3
    17b8:	ldr	x0, [x19], #8
    17bc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    17c0:	subs	x20, x20, #0x8
    17c4:	b.ne	17b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcfc>  // b.any
    17c8:	ldr	x0, [sp, #88]
    17cc:	add	x8, sp, #0x58
    17d0:	add	x8, x8, #0x10
    17d4:	cmp	x0, x8
    17d8:	b.eq	17e0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd24>  // b.none
    17dc:	bl	0 <free>
    17e0:	ldr	x0, [sp, #120]
    17e4:	add	x8, sp, #0x78
    17e8:	add	x8, x8, #0x10
    17ec:	cmp	x0, x8
    17f0:	b.eq	17f8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd3c>  // b.none
    17f4:	bl	0 <free>
    17f8:	ldp	x20, x19, [sp, #320]
    17fc:	ldp	x22, x21, [sp, #304]
    1800:	ldp	x24, x23, [sp, #288]
    1804:	ldp	x26, x25, [sp, #272]
    1808:	ldp	x28, x27, [sp, #256]
    180c:	ldp	x29, x30, [sp, #240]
    1810:	add	sp, sp, #0x150
    1814:	ret
    1818:	ldrb	w8, [x22, #224]
    181c:	cbz	w8, 17a8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcec>
    1820:	ldr	w8, [x22, #96]
    1824:	ldr	x10, [sp, #16]
    1828:	sub	x9, x8, #0x1
    182c:	cmp	x10, x9
    1830:	b.eq	17a8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcec>  // b.none
    1834:	ldr	x9, [sp, #16]
    1838:	cmp	x9, x8
    183c:	b.cs	1c88 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11cc>  // b.hs, b.nlast
    1840:	cbz	w8, 1ca8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11ec>
    1844:	ldr	x9, [x22, #88]
    1848:	ldr	x10, [sp, #16]
    184c:	add	x8, x9, x8, lsl #3
    1850:	lsl	x10, x10, #3
    1854:	ldur	x11, [x8, #-8]
    1858:	ldr	x12, [x9, x10]
    185c:	str	x11, [x9, x10]
    1860:	stur	x12, [x8, #-8]
    1864:	b	17a8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcec>
    1868:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    186c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1870:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1874:	add	x0, x0, #0x0
    1878:	add	x1, x1, #0x0
    187c:	add	x3, x3, #0x0
    1880:	mov	w2, #0xfa                  	// #250
    1884:	bl	0 <__assert_fail>
    1888:	mov	x0, x26
    188c:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1890:	ldr	x0, [sp, #8]
    1894:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1898:	bl	0 <_ZNK4llvm4Type4dumpEv>
    189c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18a0:	add	x0, x0, #0x0
    18a4:	mov	w1, #0x1                   	// #1
    18a8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    18ac:	mov	x0, x26
    18b0:	bl	0 <_ZNK4llvm5Value4dumpEv>
    18b4:	ldr	x0, [sp, #8]
    18b8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18bc:	bl	0 <_ZNK4llvm4Type4dumpEv>
    18c0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18c4:	add	x0, x0, #0x0
    18c8:	mov	w1, #0x1                   	// #1
    18cc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    18d0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18d4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18d8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18dc:	add	x0, x0, #0x0
    18e0:	add	x1, x1, #0x0
    18e4:	add	x3, x3, #0x0
    18e8:	mov	w2, #0xb3                  	// #179
    18ec:	bl	0 <__assert_fail>
    18f0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18f4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18f8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18fc:	add	x0, x0, #0x0
    1900:	add	x1, x1, #0x0
    1904:	add	x3, x3, #0x0
    1908:	mov	w2, #0x8b                  	// #139
    190c:	bl	0 <__assert_fail>
    1910:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1914:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1918:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    191c:	add	x0, x0, #0x0
    1920:	add	x1, x1, #0x0
    1924:	add	x3, x3, #0x0
    1928:	mov	w2, #0x17c                 	// #380
    192c:	bl	0 <__assert_fail>
    1930:	mov	x0, x26
    1934:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1938:	ldr	x0, [sp, #8]
    193c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1940:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1944:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1948:	add	x0, x0, #0x0
    194c:	mov	w1, #0x1                   	// #1
    1950:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1954:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1958:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    195c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1960:	add	x0, x0, #0x0
    1964:	add	x1, x1, #0x0
    1968:	add	x3, x3, #0x0
    196c:	mov	w2, #0x8b                  	// #139
    1970:	bl	0 <__assert_fail>
    1974:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1978:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    197c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1980:	add	x0, x0, #0x0
    1984:	add	x1, x1, #0x0
    1988:	add	x3, x3, #0x0
    198c:	mov	w2, #0x69                  	// #105
    1990:	bl	0 <__assert_fail>
    1994:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1998:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    199c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a0:	add	x0, x0, #0x0
    19a4:	add	x1, x1, #0x0
    19a8:	add	x3, x3, #0x0
    19ac:	mov	w2, #0x69                  	// #105
    19b0:	bl	0 <__assert_fail>
    19b4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19b8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19bc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19c0:	add	x0, x0, #0x0
    19c4:	add	x1, x1, #0x0
    19c8:	add	x3, x3, #0x0
    19cc:	mov	w2, #0x108                 	// #264
    19d0:	bl	0 <__assert_fail>
    19d4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19d8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19dc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19e0:	add	x0, x0, #0x0
    19e4:	add	x1, x1, #0x0
    19e8:	add	x3, x3, #0x0
    19ec:	mov	w2, #0x69                  	// #105
    19f0:	bl	0 <__assert_fail>
    19f4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19f8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19fc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a00:	add	x0, x0, #0x0
    1a04:	add	x1, x1, #0x0
    1a08:	add	x3, x3, #0x0
    1a0c:	mov	w2, #0x69                  	// #105
    1a10:	bl	0 <__assert_fail>
    1a14:	mov	x0, x26
    1a18:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1a1c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a20:	add	x0, x0, #0x0
    1a24:	mov	w1, #0x1                   	// #1
    1a28:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1a2c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a30:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a34:	add	x0, x0, #0x0
    1a38:	add	x1, x1, #0x0
    1a3c:	mov	w2, #0x46a                 	// #1130
    1a40:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1a44:	mov	x0, x26
    1a48:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1a4c:	ldr	x0, [sp, #8]
    1a50:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a54:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1a58:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a5c:	add	x0, x0, #0x0
    1a60:	mov	w1, #0x1                   	// #1
    1a64:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1a68:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a6c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a70:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a74:	add	x0, x0, #0x0
    1a78:	add	x1, x1, #0x0
    1a7c:	add	x3, x3, #0x0
    1a80:	mov	w2, #0x69                  	// #105
    1a84:	bl	0 <__assert_fail>
    1a88:	mov	x0, x20
    1a8c:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1a90:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a94:	add	x0, x0, #0x0
    1a98:	mov	w1, #0x1                   	// #1
    1a9c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1aa0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aa4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aa8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aac:	add	x0, x0, #0x0
    1ab0:	add	x1, x1, #0x0
    1ab4:	add	x3, x3, #0x0
    1ab8:	mov	w2, #0x108                 	// #264
    1abc:	bl	0 <__assert_fail>
    1ac0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ac4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ac8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1acc:	add	x0, x0, #0x0
    1ad0:	add	x1, x1, #0x0
    1ad4:	add	x3, x3, #0x0
    1ad8:	mov	w2, #0x69                  	// #105
    1adc:	bl	0 <__assert_fail>
    1ae0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ae4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ae8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aec:	add	x0, x0, #0x0
    1af0:	add	x1, x1, #0x0
    1af4:	add	x3, x3, #0x0
    1af8:	mov	w2, #0x69                  	// #105
    1afc:	bl	0 <__assert_fail>
    1b00:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b04:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b08:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b0c:	add	x0, x0, #0x0
    1b10:	add	x1, x1, #0x0
    1b14:	add	x3, x3, #0x0
    1b18:	mov	w2, #0x69                  	// #105
    1b1c:	bl	0 <__assert_fail>
    1b20:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b24:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b28:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b2c:	add	x0, x0, #0x0
    1b30:	add	x1, x1, #0x0
    1b34:	add	x3, x3, #0x0
    1b38:	mov	w2, #0x108                 	// #264
    1b3c:	bl	0 <__assert_fail>
    1b40:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b44:	add	x0, x0, #0x0
    1b48:	mov	w1, #0x1                   	// #1
    1b4c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1b50:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b54:	add	x0, x0, #0x0
    1b58:	mov	w1, #0x1                   	// #1
    1b5c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1b60:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b64:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b68:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b6c:	add	x0, x0, #0x0
    1b70:	add	x1, x1, #0x0
    1b74:	add	x3, x3, #0x0
    1b78:	mov	w2, #0x69                  	// #105
    1b7c:	bl	0 <__assert_fail>
    1b80:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b84:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b88:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b8c:	add	x0, x0, #0x0
    1b90:	add	x1, x1, #0x0
    1b94:	add	x3, x3, #0x0
    1b98:	mov	w2, #0x108                 	// #264
    1b9c:	bl	0 <__assert_fail>
    1ba0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ba4:	add	x0, x0, #0x0
    1ba8:	mov	w1, #0x1                   	// #1
    1bac:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1bb0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bbc:	add	x0, x0, #0x0
    1bc0:	add	x1, x1, #0x0
    1bc4:	add	x3, x3, #0x0
    1bc8:	mov	w2, #0x9e                  	// #158
    1bcc:	bl	0 <__assert_fail>
    1bd0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bd4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bd8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bdc:	add	x0, x0, #0x0
    1be0:	add	x1, x1, #0x0
    1be4:	add	x3, x3, #0x0
    1be8:	mov	w2, #0x108                 	// #264
    1bec:	bl	0 <__assert_fail>
    1bf0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bf4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bf8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bfc:	add	x0, x0, #0x0
    1c00:	add	x1, x1, #0x0
    1c04:	add	x3, x3, #0x0
    1c08:	mov	w2, #0x43                  	// #67
    1c0c:	bl	0 <__assert_fail>
    1c10:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c14:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c18:	add	x0, x0, #0x0
    1c1c:	add	x1, x1, #0x0
    1c20:	mov	w2, #0x1d5                 	// #469
    1c24:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1c28:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c2c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c30:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c34:	add	x0, x0, #0x0
    1c38:	add	x1, x1, #0x0
    1c3c:	add	x3, x3, #0x0
    1c40:	mov	w2, #0xbb                  	// #187
    1c44:	bl	0 <__assert_fail>
    1c48:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c4c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c50:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c54:	add	x0, x0, #0x0
    1c58:	add	x1, x1, #0x0
    1c5c:	add	x3, x3, #0x0
    1c60:	mov	w2, #0x69                  	// #105
    1c64:	bl	0 <__assert_fail>
    1c68:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c6c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c70:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c74:	add	x0, x0, #0x0
    1c78:	add	x1, x1, #0x0
    1c7c:	add	x3, x3, #0x0
    1c80:	mov	w2, #0x108                 	// #264
    1c84:	bl	0 <__assert_fail>
    1c88:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c8c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c90:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c94:	add	x0, x0, #0x0
    1c98:	add	x1, x1, #0x0
    1c9c:	add	x3, x3, #0x0
    1ca0:	mov	w2, #0x95                  	// #149
    1ca4:	bl	0 <__assert_fail>
    1ca8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cac:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cb0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cb4:	add	x0, x0, #0x0
    1cb8:	add	x1, x1, #0x0
    1cbc:	add	x3, x3, #0x0
    1cc0:	mov	w2, #0xa7                  	// #167
    1cc4:	bl	0 <__assert_fail>

0000000000001cc8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>:
    1cc8:	stp	x29, x30, [sp, #-48]!
    1ccc:	stp	x22, x21, [sp, #16]
    1cd0:	stp	x20, x19, [sp, #32]
    1cd4:	mov	x29, sp
    1cd8:	mov	w1, wzr
    1cdc:	mov	x19, x0
    1ce0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ce4:	cbz	x0, 1f3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>
    1ce8:	ldrb	w8, [x0, #16]
    1cec:	mov	x2, x0
    1cf0:	cmp	w8, #0xd
    1cf4:	b.ne	1f88 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2c0>  // b.any
    1cf8:	mov	w1, #0x1                   	// #1
    1cfc:	mov	x0, x19
    1d00:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d04:	cbz	x0, 1f3c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>
    1d08:	ldrb	w8, [x0, #16]
    1d0c:	mov	x2, x0
    1d10:	cmp	w8, #0xd
    1d14:	b.ne	1f98 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2d0>  // b.any
    1d18:	mov	w1, #0x3                   	// #3
    1d1c:	mov	x0, x19
    1d20:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d24:	mov	x21, x0
    1d28:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1d2c:	cbz	x0, 1f1c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1d30:	ldrb	w8, [x0, #16]
    1d34:	mov	x20, x0
    1d38:	cbnz	w8, 1fa8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e0>
    1d3c:	ldr	x21, [x20, #24]
    1d40:	cbz	x21, 1edc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1d44:	ldrb	w8, [x21, #8]
    1d48:	cmp	w8, #0xc
    1d4c:	b.ne	1efc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1d50:	cbz	x19, 1fbc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2f4>
    1d54:	ldur	x8, [x19, #-24]
    1d58:	ldrb	w9, [x8, #16]
    1d5c:	cmp	w9, #0x0
    1d60:	csel	x8, x8, xzr, eq  // eq = none
    1d64:	ldr	w8, [x8, #36]
    1d68:	cmp	w8, #0x19
    1d6c:	b.ne	1de0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x118>  // b.any
    1d70:	ldr	x8, [x21, #16]
    1d74:	ldr	x22, [x8]
    1d78:	ldr	w8, [x22, #8]
    1d7c:	and	w9, w8, #0xff
    1d80:	cmp	w9, #0xf
    1d84:	b.eq	1db4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0xec>  // b.none
    1d88:	cbz	x22, 2034 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x36c>
    1d8c:	and	w8, w8, #0x1ff
    1d90:	cmp	w8, #0x10d
    1d94:	b.ne	2014 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>  // b.any
    1d98:	ldr	w8, [x22, #12]
    1d9c:	cbz	w8, 2014 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>
    1da0:	ldr	x8, [x22, #16]
    1da4:	ldr	x8, [x8]
    1da8:	ldrb	w8, [x8, #8]
    1dac:	cmp	w8, #0xf
    1db0:	b.ne	2014 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>  // b.any
    1db4:	mov	x0, x19
    1db8:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1dbc:	ldr	x8, [x0, #24]
    1dc0:	cbz	x8, 1edc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1dc4:	ldrb	w9, [x8, #8]
    1dc8:	cmp	w9, #0xc
    1dcc:	b.ne	1efc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1dd0:	ldr	x8, [x8, #16]
    1dd4:	ldr	x8, [x8]
    1dd8:	cmp	x22, x8
    1ddc:	b.ne	2020 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x358>  // b.any
    1de0:	ldr	w8, [x21, #12]
    1de4:	cmp	w8, #0x1
    1de8:	b.eq	1f5c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x294>  // b.none
    1dec:	ldr	x8, [x21, #16]
    1df0:	ldr	x8, [x8, #8]
    1df4:	ldrb	w8, [x8, #8]
    1df8:	cmp	w8, #0xf
    1dfc:	b.ne	1f5c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x294>  // b.any
    1e00:	mov	w1, #0x4                   	// #4
    1e04:	mov	x0, x19
    1e08:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e0c:	mov	x20, x0
    1e10:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1e14:	cbz	x0, 1f1c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1e18:	ldrb	w8, [x0, #16]
    1e1c:	mov	x2, x0
    1e20:	cbnz	w8, 1fdc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x314>
    1e24:	ldr	x8, [x2, #24]
    1e28:	cbz	x8, 1edc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1e2c:	ldrb	w9, [x8, #8]
    1e30:	cmp	w9, #0xc
    1e34:	b.ne	1efc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1e38:	ldr	x9, [x8, #16]
    1e3c:	ldr	x10, [x9]
    1e40:	ldrb	w10, [x10, #8]
    1e44:	cmp	w10, #0xf
    1e48:	b.ne	1fe8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x320>  // b.any
    1e4c:	ldr	w8, [x8, #12]
    1e50:	cmp	w8, #0x2
    1e54:	b.ne	1f68 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2a0>  // b.any
    1e58:	ldr	x8, [x9, #8]
    1e5c:	ldrb	w8, [x8, #8]
    1e60:	cmp	w8, #0xb
    1e64:	b.ne	1f68 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2a0>  // b.any
    1e68:	mov	w1, #0x5                   	// #5
    1e6c:	mov	x0, x19
    1e70:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1e74:	mov	x20, x0
    1e78:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1e7c:	cbz	x0, 1f1c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1e80:	ldrb	w8, [x0, #16]
    1e84:	mov	x2, x0
    1e88:	cbnz	w8, 1ff8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x330>
    1e8c:	ldr	x8, [x2, #24]
    1e90:	cbz	x8, 1edc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1e94:	ldrb	w9, [x8, #8]
    1e98:	cmp	w9, #0xc
    1e9c:	b.ne	1efc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1ea0:	ldr	x9, [x8, #16]
    1ea4:	ldr	x10, [x9]
    1ea8:	ldrb	w10, [x10, #8]
    1eac:	cbnz	w10, 2004 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x33c>
    1eb0:	ldr	w8, [x8, #12]
    1eb4:	cmp	w8, #0x2
    1eb8:	b.ne	1f78 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2b0>  // b.any
    1ebc:	ldr	x8, [x9, #8]
    1ec0:	ldrb	w8, [x8, #8]
    1ec4:	cmp	w8, #0xf
    1ec8:	b.ne	1f78 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2b0>  // b.any
    1ecc:	ldp	x20, x19, [sp, #32]
    1ed0:	ldp	x22, x21, [sp, #16]
    1ed4:	ldp	x29, x30, [sp], #48
    1ed8:	ret
    1edc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ee0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ee4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ee8:	add	x0, x0, #0x0
    1eec:	add	x1, x1, #0x0
    1ef0:	add	x3, x3, #0x0
    1ef4:	mov	w2, #0x69                  	// #105
    1ef8:	bl	0 <__assert_fail>
    1efc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f00:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f04:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f08:	add	x0, x0, #0x0
    1f0c:	add	x1, x1, #0x0
    1f10:	add	x3, x3, #0x0
    1f14:	mov	w2, #0x108                 	// #264
    1f18:	bl	0 <__assert_fail>
    1f1c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f20:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f24:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f28:	add	x0, x0, #0x0
    1f2c:	add	x1, x1, #0x0
    1f30:	add	x3, x3, #0x0
    1f34:	mov	w2, #0x69                  	// #105
    1f38:	bl	0 <__assert_fail>
    1f3c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f40:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f44:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f48:	add	x0, x0, #0x0
    1f4c:	add	x1, x1, #0x0
    1f50:	add	x3, x3, #0x0
    1f54:	mov	w2, #0x69                  	// #105
    1f58:	bl	0 <__assert_fail>
    1f5c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f60:	add	x1, x1, #0x0
    1f64:	b	2028 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    1f68:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f6c:	add	x1, x1, #0x0
    1f70:	mov	x0, x19
    1f74:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1f78:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f7c:	add	x1, x1, #0x0
    1f80:	mov	x0, x19
    1f84:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1f88:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f8c:	add	x1, x1, #0x0
    1f90:	mov	x0, x19
    1f94:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1f98:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f9c:	add	x1, x1, #0x0
    1fa0:	mov	x0, x19
    1fa4:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1fa8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fac:	add	x1, x1, #0x0
    1fb0:	mov	x0, x19
    1fb4:	mov	x2, x21
    1fb8:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1fbc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fc0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fc4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fc8:	add	x0, x0, #0x0
    1fcc:	add	x1, x1, #0x0
    1fd0:	add	x3, x3, #0x0
    1fd4:	mov	w2, #0x69                  	// #105
    1fd8:	bl	0 <__assert_fail>
    1fdc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fe0:	add	x1, x1, #0x0
    1fe4:	b	2028 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    1fe8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fec:	add	x1, x1, #0x0
    1ff0:	mov	x0, x19
    1ff4:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    1ff8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ffc:	add	x1, x1, #0x0
    2000:	b	2028 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    2004:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2008:	add	x1, x1, #0x0
    200c:	mov	x0, x19
    2010:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2014:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2018:	add	x1, x1, #0x0
    201c:	b	2028 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    2020:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2024:	add	x1, x1, #0x0
    2028:	mov	x0, x19
    202c:	mov	x2, x20
    2030:	bl	25e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2034:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2038:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    203c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2040:	add	x0, x0, #0x0
    2044:	add	x1, x1, #0x0
    2048:	add	x3, x3, #0x0
    204c:	mov	w2, #0x69                  	// #105
    2050:	bl	0 <__assert_fail>

0000000000002054 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    2054:	sub	sp, sp, #0x70
    2058:	stp	x29, x30, [sp, #64]
    205c:	stp	x22, x21, [sp, #80]
    2060:	stp	x20, x19, [sp, #96]
    2064:	add	x29, sp, #0x40
    2068:	str	x2, [sp, #32]
    206c:	ldr	w8, [x0, #168]
    2070:	sub	w9, w8, #0x1
    2074:	cmp	w9, #0x2
    2078:	b.cs	21a4 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x150>  // b.hs, b.nlast
    207c:	ldr	x20, [x0, #208]
    2080:	ldr	x8, [x20, #24]
    2084:	cbz	x8, 21c0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x16c>
    2088:	ldrb	w9, [x8, #8]
    208c:	cmp	w9, #0xc
    2090:	b.ne	21e0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x18c>  // b.any
    2094:	ldr	x8, [x8, #16]
    2098:	mov	w22, #0x101                 	// #257
    209c:	mov	x21, x1
    20a0:	mov	x19, x3
    20a4:	ldr	x1, [x8, #8]
    20a8:	stp	xzr, xzr, [sp, #8]
    20ac:	strh	w22, [sp, #24]
    20b0:	ldr	x8, [x2]
    20b4:	cmp	x8, x1
    20b8:	b.eq	210c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xb8>  // b.none
    20bc:	ldrb	w8, [x2, #16]
    20c0:	cmp	w8, #0x10
    20c4:	b.ls	20fc <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xa8>  // b.plast
    20c8:	mov	w8, #0x101                 	// #257
    20cc:	sub	x3, x29, #0x18
    20d0:	mov	x0, x2
    20d4:	mov	w2, wzr
    20d8:	mov	x4, xzr
    20dc:	stp	xzr, xzr, [x29, #-24]
    20e0:	sturh	w8, [x29, #-8]
    20e4:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
    20e8:	mov	x1, x0
    20ec:	add	x2, sp, #0x8
    20f0:	mov	x0, x21
    20f4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20f8:	b	2108 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xb4>
    20fc:	mov	x0, x2
    2100:	mov	w2, wzr
    2104:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
    2108:	mov	x2, x0
    210c:	str	x2, [sp, #32]
    2110:	stp	xzr, xzr, [x29, #-24]
    2114:	sturh	w22, [x29, #-8]
    2118:	ldr	x8, [x20]
    211c:	ldrb	w9, [x8, #8]
    2120:	cmp	w9, #0xf
    2124:	b.ne	2200 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1ac>  // b.any
    2128:	ldr	x8, [x8, #16]
    212c:	ldr	x1, [x8]
    2130:	cbz	x1, 21c0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x16c>
    2134:	ldrb	w8, [x1, #8]
    2138:	cmp	w8, #0xc
    213c:	b.ne	21e0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x18c>  // b.any
    2140:	add	x3, sp, #0x20
    2144:	sub	x5, x29, #0x18
    2148:	mov	w4, #0x1                   	// #1
    214c:	mov	x0, x21
    2150:	mov	x2, x20
    2154:	mov	x6, xzr
    2158:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    215c:	ldrh	w8, [x20, #18]
    2160:	ldrh	w9, [x0, #18]
    2164:	mov	x21, x0
    2168:	mov	x1, x21
    216c:	lsr	w8, w8, #2
    2170:	and	w8, w8, #0xffc
    2174:	and	w9, w9, #0xffff8003
    2178:	orr	w8, w8, w9
    217c:	strh	w8, [x0, #18]
    2180:	mov	x0, x19
    2184:	mov	x2, x20
    2188:	bl	2238 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>
    218c:	mov	x0, x21
    2190:	ldp	x20, x19, [sp, #96]
    2194:	ldp	x22, x21, [sp, #80]
    2198:	ldp	x29, x30, [sp, #64]
    219c:	add	sp, sp, #0x70
    21a0:	ret
    21a4:	cbnz	w8, 2220 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1cc>
    21a8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21ac:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21b0:	add	x0, x0, #0x0
    21b4:	add	x1, x1, #0x0
    21b8:	mov	w2, #0x1f7                 	// #503
    21bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    21c0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21c4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21c8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21cc:	add	x0, x0, #0x0
    21d0:	add	x1, x1, #0x0
    21d4:	add	x3, x3, #0x0
    21d8:	mov	w2, #0x69                  	// #105
    21dc:	bl	0 <__assert_fail>
    21e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21e4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21e8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21ec:	add	x0, x0, #0x0
    21f0:	add	x1, x1, #0x0
    21f4:	add	x3, x3, #0x0
    21f8:	mov	w2, #0x108                 	// #264
    21fc:	bl	0 <__assert_fail>
    2200:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2204:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2208:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    220c:	add	x0, x0, #0x0
    2210:	add	x1, x1, #0x0
    2214:	add	x3, x3, #0x0
    2218:	mov	w2, #0x17e                 	// #382
    221c:	bl	0 <__assert_fail>
    2220:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2224:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2228:	add	x0, x0, #0x0
    222c:	add	x1, x1, #0x0
    2230:	mov	w2, #0x205                 	// #517
    2234:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000002238 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>:
    2238:	stp	x29, x30, [sp, #-48]!
    223c:	str	x21, [sp, #16]
    2240:	stp	x20, x19, [sp, #32]
    2244:	mov	x29, sp
    2248:	cbz	x0, 230c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xd4>
    224c:	mov	x21, x0
    2250:	mov	x0, x1
    2254:	mov	x20, x2
    2258:	mov	x19, x1
    225c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    2260:	ldr	x9, [x21, #24]
    2264:	cbz	x9, 231c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>
    2268:	add	x8, x21, #0x10
    226c:	mov	x11, x9
    2270:	mov	x10, x8
    2274:	ldr	x12, [x11, #32]
    2278:	add	x13, x11, #0x18
    227c:	add	x14, x11, #0x10
    2280:	cmp	x12, x0
    2284:	csel	x10, x10, x11, cc  // cc = lo, ul, last
    2288:	csel	x11, x13, x14, cc  // cc = lo, ul, last
    228c:	ldr	x11, [x11]
    2290:	cbnz	x11, 2274 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0x3c>
    2294:	cmp	x10, x8
    2298:	b.eq	231c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    229c:	ldr	x11, [x10, #32]
    22a0:	cmp	x11, x0
    22a4:	csel	x10, x8, x10, hi  // hi = pmore
    22a8:	cmp	x10, x8
    22ac:	b.eq	231c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    22b0:	ldr	x0, [x10, #40]
    22b4:	mov	x10, x8
    22b8:	ldr	x11, [x9, #32]
    22bc:	add	x12, x9, #0x18
    22c0:	add	x13, x9, #0x10
    22c4:	cmp	x11, x20
    22c8:	csel	x10, x10, x9, cc  // cc = lo, ul, last
    22cc:	csel	x9, x12, x13, cc  // cc = lo, ul, last
    22d0:	ldr	x9, [x9]
    22d4:	cbnz	x9, 22b8 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0x80>
    22d8:	cmp	x10, x8
    22dc:	b.eq	231c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    22e0:	ldr	x9, [x10, #32]
    22e4:	cmp	x9, x20
    22e8:	csel	x9, x8, x10, hi  // hi = pmore
    22ec:	cmp	x9, x8
    22f0:	b.eq	231c <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE+0xe4>  // b.none
    22f4:	ldr	x2, [x9, #40]
    22f8:	mov	x1, x19
    22fc:	ldp	x20, x19, [sp, #32]
    2300:	ldr	x21, [sp, #16]
    2304:	ldp	x29, x30, [sp], #48
    2308:	b	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    230c:	ldp	x20, x19, [sp, #32]
    2310:	ldr	x21, [sp, #16]
    2314:	ldp	x29, x30, [sp], #48
    2318:	ret
    231c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2320:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2324:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2328:	add	x0, x0, #0x0
    232c:	add	x1, x1, #0x0
    2330:	add	x3, x3, #0x0
    2334:	mov	w2, #0x82                  	// #130
    2338:	bl	0 <__assert_fail>

000000000000233c <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    233c:	sub	sp, sp, #0x70
    2340:	stp	x29, x30, [sp, #64]
    2344:	stp	x22, x21, [sp, #80]
    2348:	stp	x20, x19, [sp, #96]
    234c:	add	x29, sp, #0x40
    2350:	str	x2, [sp, #32]
    2354:	ldr	w8, [x0, #168]
    2358:	sub	w9, w8, #0x1
    235c:	cmp	w9, #0x2
    2360:	b.cs	2490 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x154>  // b.hs, b.nlast
    2364:	ldr	x20, [x0, #216]
    2368:	ldr	x8, [x20, #24]
    236c:	cbz	x8, 24ac <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x170>
    2370:	ldrb	w9, [x8, #8]
    2374:	cmp	w9, #0xc
    2378:	b.ne	24cc <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x190>  // b.any
    237c:	ldr	x8, [x8, #16]
    2380:	mov	w22, #0x101                 	// #257
    2384:	mov	x19, x3
    2388:	mov	x21, x1
    238c:	ldr	x8, [x8, #8]
    2390:	stp	xzr, xzr, [sp, #8]
    2394:	strh	w22, [sp, #24]
    2398:	ldr	x9, [x2]
    239c:	cmp	x9, x8
    23a0:	b.eq	2400 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xc4>  // b.none
    23a4:	ldrb	w9, [x2, #16]
    23a8:	cmp	w9, #0x10
    23ac:	b.ls	23e8 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xac>  // b.plast
    23b0:	mov	w9, #0x101                 	// #257
    23b4:	sub	x3, x29, #0x18
    23b8:	mov	w0, #0x31                  	// #49
    23bc:	mov	x1, x2
    23c0:	mov	x2, x8
    23c4:	mov	x4, xzr
    23c8:	stp	xzr, xzr, [x29, #-24]
    23cc:	sturh	w9, [x29, #-8]
    23d0:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    23d4:	mov	x1, x0
    23d8:	add	x2, sp, #0x8
    23dc:	mov	x0, x21
    23e0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    23e4:	b	23fc <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xc0>
    23e8:	mov	w0, #0x31                  	// #49
    23ec:	mov	x1, x2
    23f0:	mov	x2, x8
    23f4:	mov	w3, wzr
    23f8:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    23fc:	mov	x2, x0
    2400:	str	x2, [sp, #32]
    2404:	stp	xzr, xzr, [x29, #-24]
    2408:	sturh	w22, [x29, #-8]
    240c:	ldr	x8, [x20]
    2410:	ldrb	w9, [x8, #8]
    2414:	cmp	w9, #0xf
    2418:	b.ne	24ec <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1b0>  // b.any
    241c:	ldr	x8, [x8, #16]
    2420:	ldr	x1, [x8]
    2424:	cbz	x1, 24ac <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x170>
    2428:	ldrb	w8, [x1, #8]
    242c:	cmp	w8, #0xc
    2430:	b.ne	24cc <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x190>  // b.any
    2434:	add	x3, sp, #0x20
    2438:	sub	x5, x29, #0x18
    243c:	mov	w4, #0x1                   	// #1
    2440:	mov	x0, x21
    2444:	mov	x2, x20
    2448:	mov	x6, xzr
    244c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2450:	ldrh	w8, [x20, #18]
    2454:	ldrh	w9, [x0, #18]
    2458:	mov	x1, x0
    245c:	mov	x2, x20
    2460:	lsr	w8, w8, #2
    2464:	and	w8, w8, #0xffc
    2468:	and	w9, w9, #0xffff8003
    246c:	orr	w8, w8, w9
    2470:	strh	w8, [x0, #18]
    2474:	mov	x0, x19
    2478:	bl	2238 <_ZL18addCallToCallGraphPN4llvm9CallGraphEPNS_8CallInstEPNS_8FunctionE>
    247c:	ldp	x20, x19, [sp, #96]
    2480:	ldp	x22, x21, [sp, #80]
    2484:	ldp	x29, x30, [sp, #64]
    2488:	add	sp, sp, #0x70
    248c:	ret
    2490:	cbnz	w8, 250c <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1d0>
    2494:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2498:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    249c:	add	x0, x0, #0x0
    24a0:	add	x1, x1, #0x0
    24a4:	mov	w2, #0x20c                 	// #524
    24a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    24ac:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24b0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24b4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24b8:	add	x0, x0, #0x0
    24bc:	add	x1, x1, #0x0
    24c0:	add	x3, x3, #0x0
    24c4:	mov	w2, #0x69                  	// #105
    24c8:	bl	0 <__assert_fail>
    24cc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24d0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24d4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24d8:	add	x0, x0, #0x0
    24dc:	add	x1, x1, #0x0
    24e0:	add	x3, x3, #0x0
    24e4:	mov	w2, #0x108                 	// #264
    24e8:	bl	0 <__assert_fail>
    24ec:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24f0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24f4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24f8:	add	x0, x0, #0x0
    24fc:	add	x1, x1, #0x0
    2500:	add	x3, x3, #0x0
    2504:	mov	w2, #0x17e                 	// #382
    2508:	bl	0 <__assert_fail>
    250c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2510:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2514:	add	x0, x0, #0x0
    2518:	add	x1, x1, #0x0
    251c:	mov	w2, #0x219                 	// #537
    2520:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000002524 <LLVMAddCoroEarlyPass>:
    2524:	stp	x29, x30, [sp, #-32]!
    2528:	str	x19, [sp, #16]
    252c:	mov	x29, sp
    2530:	mov	x19, x0
    2534:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
    2538:	ldr	x8, [x19]
    253c:	mov	x1, x0
    2540:	mov	x0, x19
    2544:	ldr	x19, [sp, #16]
    2548:	ldr	x2, [x8, #16]
    254c:	ldp	x29, x30, [sp], #32
    2550:	br	x2

0000000000002554 <LLVMAddCoroSplitPass>:
    2554:	stp	x29, x30, [sp, #-32]!
    2558:	str	x19, [sp, #16]
    255c:	mov	x29, sp
    2560:	mov	x19, x0
    2564:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
    2568:	ldr	x8, [x19]
    256c:	mov	x1, x0
    2570:	mov	x0, x19
    2574:	ldr	x19, [sp, #16]
    2578:	ldr	x2, [x8, #16]
    257c:	ldp	x29, x30, [sp], #32
    2580:	br	x2

0000000000002584 <LLVMAddCoroElidePass>:
    2584:	stp	x29, x30, [sp, #-32]!
    2588:	str	x19, [sp, #16]
    258c:	mov	x29, sp
    2590:	mov	x19, x0
    2594:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
    2598:	ldr	x8, [x19]
    259c:	mov	x1, x0
    25a0:	mov	x0, x19
    25a4:	ldr	x19, [sp, #16]
    25a8:	ldr	x2, [x8, #16]
    25ac:	ldp	x29, x30, [sp], #32
    25b0:	br	x2

00000000000025b4 <LLVMAddCoroCleanupPass>:
    25b4:	stp	x29, x30, [sp, #-32]!
    25b8:	str	x19, [sp, #16]
    25bc:	mov	x29, sp
    25c0:	mov	x19, x0
    25c4:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
    25c8:	ldr	x8, [x19]
    25cc:	mov	x1, x0
    25d0:	mov	x0, x19
    25d4:	ldr	x19, [sp, #16]
    25d8:	ldr	x2, [x8, #16]
    25dc:	ldp	x29, x30, [sp], #32
    25e0:	br	x2

00000000000025e4 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>:
    25e4:	stp	x29, x30, [sp, #-32]!
    25e8:	stp	x20, x19, [sp, #16]
    25ec:	mov	x29, sp
    25f0:	mov	x20, x2
    25f4:	mov	x19, x1
    25f8:	bl	0 <_ZNK4llvm5Value4dumpEv>
    25fc:	cbz	x20, 2690 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0xac>
    2600:	bl	0 <_ZN4llvm4errsEv>
    2604:	ldp	x9, x8, [x0, #16]
    2608:	sub	x9, x9, x8
    260c:	cmp	x9, #0x8
    2610:	b.hi	2628 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x44>  // b.pmore
    2614:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2618:	add	x1, x1, #0x0
    261c:	mov	w2, #0x9                   	// #9
    2620:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2624:	b	264c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x68>
    2628:	adrp	x9, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    262c:	add	x9, x9, #0x0
    2630:	ldr	x9, [x9]
    2634:	mov	w10, #0x20                  	// #32
    2638:	strb	w10, [x8, #8]
    263c:	str	x9, [x8]
    2640:	ldr	x8, [x0, #24]
    2644:	add	x8, x8, #0x9
    2648:	str	x8, [x0, #24]
    264c:	bl	0 <_ZN4llvm4errsEv>
    2650:	mov	x1, x0
    2654:	mov	w2, #0x1                   	// #1
    2658:	mov	x0, x20
    265c:	mov	x3, xzr
    2660:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    2664:	bl	0 <_ZN4llvm4errsEv>
    2668:	ldp	x9, x8, [x0, #16]
    266c:	cmp	x8, x9
    2670:	b.cs	2688 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0xa4>  // b.hs, b.nlast
    2674:	add	x9, x8, #0x1
    2678:	mov	w10, #0xa                   	// #10
    267c:	str	x9, [x0, #24]
    2680:	strb	w10, [x8]
    2684:	b	2690 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0xac>
    2688:	mov	w1, #0xa                   	// #10
    268c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2690:	mov	w1, #0x1                   	// #1
    2694:	mov	x0, x19
    2698:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0]
  1c:	cbz	x8, d0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xd0>
  20:	ldrb	w9, [x8, #8]
  24:	cmp	w9, #0xf
  28:	b.ne	f0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xf0>  // b.any
  2c:	ldr	x24, [x8, #24]
  30:	cbz	x24, 110 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x110>
  34:	ldrb	w8, [x24, #8]
  38:	cmp	w8, #0xc
  3c:	b.ne	130 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x130>  // b.any
  40:	mov	x20, x2
  44:	add	w25, w20, #0x1
  48:	mov	x21, x0
  4c:	mov	x22, x1
  50:	mov	w0, #0x48                  	// #72
  54:	mov	w1, w25
  58:	mov	x23, x4
  5c:	mov	x19, x3
  60:	bl	0 <_ZN4llvm4UsernwEmj>
  64:	ldr	x8, [x24, #16]
  68:	mov	w9, #0x18                  	// #24
  6c:	mov	w2, #0x38                  	// #56
  70:	mov	w4, w25
  74:	ldr	x1, [x8]
  78:	mvn	x8, x20
  7c:	madd	x3, x8, x9, x0
  80:	mov	x5, x23
  84:	mov	x26, x0
  88:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  8c:	mov	x0, x26
  90:	mov	x1, x24
  94:	mov	x2, x21
  98:	mov	x3, x22
  9c:	mov	x4, x20
  a0:	mov	x5, xzr
  a4:	mov	x6, xzr
  a8:	mov	x7, x19
  ac:	str	xzr, [x26, #56]
  b0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
  b4:	mov	x0, x26
  b8:	ldp	x20, x19, [sp, #64]
  bc:	ldp	x22, x21, [sp, #48]
  c0:	ldp	x24, x23, [sp, #32]
  c4:	ldp	x26, x25, [sp, #16]
  c8:	ldp	x29, x30, [sp], #80
  cc:	ret
  d0:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  d4:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  d8:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x69                  	// #105
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  f8:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x108                 	// #264
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 118:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x69                  	// #105
 12c:	bl	0 <__assert_fail>
 130:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 138:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x108                 	// #264
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, e0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe0>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa0>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	120 <_ZNK4llvm10CoroIdInst7getInfoEv+0x120>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 158 <_ZNK4llvm10CoroIdInst7getInfoEv+0x158>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, ac <_ZNK4llvm10CoroIdInst7getInfoEv+0xac>
  98:	mov	x1, xzr
  9c:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  a0:	mov	x0, xzr
  a4:	mov	x1, xzr
  a8:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  ac:	cmp	w8, #0x6
  b0:	b.ne	178 <_ZNK4llvm10CoroIdInst7getInfoEv+0x178>  // b.any
  b4:	ldr	x19, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret
  c0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xa8                  	// #168
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x69                  	// #105
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x108                 	// #264
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	mov	w2, #0x16d                 	// #365
 134:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x8d                  	// #141
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 15c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x69                  	// #105
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 17c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x108                 	// #264
 194:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst10getPromiseEv:

0000000000000000 <_ZNK4llvm10CoroIdInst10getPromiseEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w1, #0x1                   	// #1
   c:	bl	0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  10:	cbz	x0, 48 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x48>
  14:	ldrb	w8, [x0, #16]
  18:	cmp	w8, #0xf
  1c:	b.ne	2c <_ZNK4llvm10CoroIdInst10getPromiseEv+0x2c>  // b.any
  20:	mov	x0, xzr
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  30:	cbz	x0, 68 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x68>
  34:	ldrb	w8, [x0, #16]
  38:	cmp	w8, #0x37
  3c:	b.ne	88 <_ZNK4llvm10CoroIdInst10getPromiseEv+0x88>  // b.any
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  4c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  50:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x69                  	// #105
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  6c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  70:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  8c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  90:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst10getPromiseEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x108                 	// #264
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	74 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x74>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 94 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x94>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	b4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xb4>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, d4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xd4>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	64 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x64>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x1, xzr
  68:	mov	x0, xzr
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xae                  	// #174
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  bc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x108                 	// #264
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  dc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8Function15getFunctionTypeEv:

0000000000000000 <_ZNK4llvm8Function15getFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #24]
   c:	cbz	x0, 24 <_ZNK4llvm8Function15getFunctionTypeEv+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	cmp	w8, #0xc
  18:	b.ne	44 <_ZNK4llvm8Function15getFunctionTypeEv+0x44>  // b.any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  28:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  2c:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x69                  	// #105
  40:	bl	0 <__assert_fail>
  44:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  48:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  4c:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x108                 	// #264
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x22, x1
  1c:	mov	x20, x0
  20:	stp	x2, x1, [sp]
  24:	cbz	x1, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  28:	ldur	x8, [x22, #-24]
  2c:	cbz	x8, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  40:	ldr	w0, [x8, #36]
  44:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  48:	tbnz	w0, #0, e0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xe0>
  4c:	ldp	x21, x8, [x20, #16]
  50:	cmp	x21, x8
  54:	b.eq	a8 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xa8>  // b.none
  58:	add	x8, x22, #0x10
  5c:	mov	w9, #0x6                   	// #6
  60:	cmp	x8, #0x10
  64:	stp	x9, xzr, [x21]
  68:	str	x22, [x21, #16]
  6c:	b.hi	8c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x8c>  // b.pmore
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	x8, x9, x8
  78:	mov	w9, #0x101                 	// #257
  7c:	movk	w9, #0x1, lsl #16
  80:	tst	x8, x9
  84:	mov	x8, x21
  88:	b.ne	98 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x98>  // b.any
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  94:	ldr	x8, [x20, #16]
  98:	add	x8, x8, #0x20
  9c:	str	x19, [x21, #24]
  a0:	str	x8, [x20, #16]
  a4:	b	c0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xc0>
  a8:	add	x0, x20, #0x8
  ac:	add	x2, sp, #0x8
  b0:	mov	x3, sp
  b4:	mov	x1, x21
  b8:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  bc:	ldr	x19, [sp]
  c0:	ldr	w8, [x19, #32]
  c4:	add	w8, w8, #0x1
  c8:	str	w8, [x19, #32]
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e4:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e8:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xeb                  	// #235
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x26, x25, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x25, x26
  2c:	cmp	x8, x9
  30:	b.eq	254 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x254>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x26
  68:	mov	x23, x3
  6c:	mov	x24, x2
  70:	mov	x19, x0
  74:	mov	x22, x1
  78:	asr	x27, x8, #5
  7c:	str	x9, [sp, #8]
  80:	cbz	x9, 94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
  84:	lsl	x0, x9, #5
  88:	bl	0 <_Znwm>
  8c:	mov	x21, x0
  90:	b	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
  94:	mov	x21, xzr
  98:	ldr	x9, [x24]
  9c:	add	x0, x21, x27, lsl #5
  a0:	mov	w8, #0x6                   	// #6
  a4:	stp	x8, xzr, [x0]
  a8:	add	x8, x9, #0x10
  ac:	cmp	x8, #0x10
  b0:	str	x9, [x0, #16]
  b4:	b.hi	d0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>  // b.pmore
  b8:	mov	w9, #0x1                   	// #1
  bc:	lsl	x8, x9, x8
  c0:	mov	w9, #0x101                 	// #257
  c4:	movk	w9, #0x1, lsl #16
  c8:	tst	x8, x9
  cc:	b.ne	d4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  d0:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  d4:	ldr	x8, [x23]
  d8:	add	x9, x21, x27, lsl #5
  dc:	cmp	x26, x22
  e0:	mov	x23, x21
  e4:	str	x8, [x9, #24]
  e8:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
  ec:	mov	w28, #0x101                 	// #257
  f0:	mov	w24, #0x6                   	// #6
  f4:	mov	w27, #0x1                   	// #1
  f8:	movk	w28, #0x1, lsl #16
  fc:	mov	x23, x21
 100:	mov	x20, x26
 104:	b	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 108:	ldr	x8, [x20]
 10c:	mov	x0, x23
 110:	and	x1, x8, #0xfffffffffffffff8
 114:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 118:	ldr	x8, [x20, #24]
 11c:	add	x20, x20, #0x20
 120:	cmp	x22, x20
 124:	str	x8, [x23, #24]
 128:	add	x23, x23, #0x20
 12c:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
 130:	stp	x24, xzr, [x23]
 134:	ldr	x9, [x20, #16]
 138:	add	x8, x9, #0x10
 13c:	cmp	x8, #0x10
 140:	str	x9, [x23, #16]
 144:	b.hi	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.pmore
 148:	lsl	x8, x27, x8
 14c:	tst	x8, x28
 150:	b.ne	118 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.any
 154:	b	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>
 158:	cmp	x25, x22
 15c:	add	x23, x23, #0x20
 160:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 164:	mov	w28, #0x101                 	// #257
 168:	mov	w24, #0x6                   	// #6
 16c:	mov	w27, #0x1                   	// #1
 170:	movk	w28, #0x1, lsl #16
 174:	b	1a0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a0>
 178:	ldr	x8, [x22]
 17c:	mov	x0, x23
 180:	and	x1, x8, #0xfffffffffffffff8
 184:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 188:	ldr	x8, [x22, #24]
 18c:	add	x22, x22, #0x20
 190:	cmp	x25, x22
 194:	str	x8, [x23, #24]
 198:	add	x23, x23, #0x20
 19c:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 1a0:	stp	x24, xzr, [x23]
 1a4:	ldr	x9, [x22, #16]
 1a8:	add	x8, x9, #0x10
 1ac:	cmp	x8, #0x10
 1b0:	str	x9, [x23, #16]
 1b4:	b.hi	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>  // b.pmore
 1b8:	lsl	x8, x27, x8
 1bc:	tst	x8, x28
 1c0:	b.ne	188 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>  // b.any
 1c4:	b	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>
 1c8:	cmp	x26, x25
 1cc:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1d0:	mov	w24, #0x101                 	// #257
 1d4:	mov	w20, #0x1                   	// #1
 1d8:	movk	w24, #0x1, lsl #16
 1dc:	mov	x22, x26
 1e0:	b	1f8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>
 1e4:	mov	x0, x22
 1e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1ec:	add	x22, x22, #0x20
 1f0:	cmp	x25, x22
 1f4:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1f8:	ldr	x8, [x22, #16]
 1fc:	add	x8, x8, #0x10
 200:	cmp	x8, #0x10
 204:	b.hi	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>  // b.pmore
 208:	lsl	x8, x20, x8
 20c:	tst	x8, x24
 210:	b.ne	1ec <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ec>  // b.any
 214:	b	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>
 218:	cbz	x26, 224 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x224>
 21c:	mov	x0, x26
 220:	bl	0 <_ZdlPv>
 224:	stp	x21, x23, [x19]
 228:	ldr	x8, [sp, #8]
 22c:	add	x8, x21, x8, lsl #5
 230:	str	x8, [x19, #16]
 234:	ldp	x20, x19, [sp, #96]
 238:	ldp	x22, x21, [sp, #80]
 23c:	ldp	x24, x23, [sp, #64]
 240:	ldp	x26, x25, [sp, #48]
 244:	ldp	x28, x27, [sp, #32]
 248:	ldp	x29, x30, [sp, #16]
 24c:	add	sp, sp, #0x70
 250:	ret
 254:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_>:
   0:	ldr	x3, [x0]
   4:	mov	x0, x1
   8:	mov	x1, x2
   c:	br	x3

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x2
   4:	b.eq	1c <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x1c>  // b.none
   8:	cmp	w2, #0x1
   c:	b.ne	24 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x24>  // b.any
  10:	str	x1, [x0]
  14:	mov	w0, wzr
  18:	ret
  1c:	ldr	x8, [x1]
  20:	str	x8, [x0]
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x5
  1c:	mov	x8, x4
  20:	ldp	x4, x5, [x0, #48]
  24:	mov	x21, x6
  28:	mov	x20, x0
  2c:	mov	w9, #0x101                 	// #257
  30:	add	x6, sp, #0x8
  34:	mov	x0, x1
  38:	mov	x1, x2
  3c:	mov	x2, x3
  40:	mov	x3, x8
  44:	mov	x7, xzr
  48:	stp	xzr, xzr, [sp, #8]
  4c:	strh	w9, [sp, #24]
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  54:	ldrb	w8, [x20, #44]
  58:	mov	x22, x0
  5c:	cbz	w8, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  60:	add	x0, x22, #0x38
  64:	mov	w1, #0xffffffff            	// #-1
  68:	mov	w2, #0x39                  	// #57
  6c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  70:	tbnz	w0, #0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  74:	mov	w1, #0x39                  	// #57
  78:	mov	x0, x22
  7c:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
  80:	tbz	w0, #0, 188 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x188>
  84:	cbz	x22, 1b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1b4>
  88:	ldrb	w9, [x22, #16]
  8c:	subs	w8, w9, #0x18
  90:	b.cs	a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xa0>  // b.hs, b.nlast
  94:	cmp	w9, #0x5
  98:	b.ne	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.any
  9c:	ldrh	w8, [x22, #18]
  a0:	cmp	w8, #0x39
  a4:	b.hi	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.pmore
  a8:	mov	x10, #0x5000                	// #20480
  ac:	mov	w9, #0x1                   	// #1
  b0:	movk	x10, #0x125, lsl #16
  b4:	lsl	x9, x9, x8
  b8:	movk	x10, #0x40, lsl #48
  bc:	tst	x9, x10
  c0:	b.eq	118 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x118>  // b.none
  c4:	ldr	w23, [x20, #40]
  c8:	cbnz	x21, d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd4>
  cc:	ldr	x21, [x20, #32]
  d0:	cbz	x21, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xe4>
  d4:	mov	w1, #0x3                   	// #3
  d8:	mov	x0, x22
  dc:	mov	x2, x21
  e0:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  e4:	mov	x0, x22
  e8:	mov	x1, x23
  ec:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  f0:	mov	x0, x20
  f4:	mov	x1, x22
  f8:	mov	x2, x19
  fc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 100:	ldp	x20, x19, [sp, #80]
 104:	ldp	x22, x21, [sp, #64]
 108:	ldr	x23, [sp, #48]
 10c:	ldp	x29, x30, [sp, #32]
 110:	add	sp, sp, #0x60
 114:	ret
 118:	mov	w9, #0x1                   	// #1
 11c:	lsl	x8, x9, x8
 120:	tst	x8, #0x380000000000000
 124:	b.eq	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.none
 128:	ldr	x8, [x22]
 12c:	cbz	x8, 144 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x144>
 130:	ldrb	w9, [x8, #8]
 134:	cmp	w9, #0xe
 138:	b.ne	164 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x164>  // b.any
 13c:	ldr	x8, [x8, #24]
 140:	cbnz	x8, 130 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x130>
 144:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 148:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 14c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x69                  	// #105
 160:	bl	0 <__assert_fail>
 164:	cmp	w9, #0x10
 168:	b.ne	178 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x178>  // b.any
 16c:	ldr	x8, [x8, #16]
 170:	ldr	x8, [x8]
 174:	ldrb	w9, [x8, #8]
 178:	sub	w8, w9, #0x1
 17c:	cmp	w8, #0x5
 180:	b.ls	c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xc4>  // b.plast
 184:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>
 188:	ldr	x8, [x22, #56]
 18c:	mov	x0, x22
 190:	str	x8, [sp, #8]
 194:	bl	0 <_ZNK4llvm5Value10getContextEv>
 198:	mov	x1, x0
 19c:	add	x0, sp, #0x8
 1a0:	mov	w2, #0xffffffff            	// #-1
 1a4:	mov	w3, #0x39                  	// #57
 1a8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 1ac:	str	x0, [x22, #56]
 1b0:	b	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x88>
 1b4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1b8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1bc:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x69                  	// #105
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	w8, #0x38                  	// #56
  24:	mov	x26, x7
  28:	mov	x20, x5
  2c:	mov	x21, x4
  30:	mov	x22, x3
  34:	mov	x23, x2
  38:	mov	x24, x1
  3c:	mov	x25, x0
  40:	madd	x28, x5, x8, x4
  44:	str	x6, [sp, #8]
  48:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  4c:	mov	w8, #0x38                  	// #56
  50:	mul	x8, x20, x8
  54:	sub	x8, x8, #0x38
  58:	cmp	x8, #0x70
  5c:	b.cs	74 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x74>  // b.hs, b.nlast
  60:	mov	w9, wzr
  64:	mov	x8, x21
  68:	b	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>
  6c:	mov	w9, wzr
  70:	b	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>
  74:	mov	x11, #0x2493                	// #9363
  78:	movk	x11, #0x9249, lsl #16
  7c:	movk	x11, #0x4924, lsl #32
  80:	lsr	x8, x8, #3
  84:	movk	x11, #0x2492, lsl #48
  88:	umulh	x8, x8, x11
  8c:	add	x11, x8, #0x1
  90:	mov	w13, #0x38                  	// #56
  94:	and	x12, x11, #0xffffffffffffffe
  98:	mov	w9, wzr
  9c:	mov	w10, wzr
  a0:	madd	x8, x12, x13, x21
  a4:	add	x13, x21, #0x60
  a8:	mov	x14, x12
  ac:	ldp	x18, x15, [x13, #-8]
  b0:	ldp	x17, x16, [x13, #-64]
  b4:	subs	x14, x14, #0x2
  b8:	add	x13, x13, #0x70
  bc:	sub	x15, x15, x18
  c0:	sub	x16, x16, x17
  c4:	lsr	x16, x16, #3
  c8:	lsr	x15, x15, #3
  cc:	add	w9, w9, w16
  d0:	add	w10, w10, w15
  d4:	b.ne	ac <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xac>  // b.any
  d8:	cmp	x11, x12
  dc:	add	w9, w10, w9
  e0:	b.eq	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>  // b.none
  e4:	ldp	x11, x10, [x8, #32]
  e8:	add	x8, x8, #0x38
  ec:	cmp	x28, x8
  f0:	sub	x10, x10, x11
  f4:	lsr	x10, x10, #3
  f8:	add	w9, w9, w10
  fc:	b.ne	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>  // b.any
 100:	add	w19, w22, #0x1
 104:	add	w1, w9, w19
 108:	lsl	w2, w20, #4
 10c:	mov	w0, #0x48                  	// #72
 110:	bl	0 <_ZN4llvm4UsernwEmjj>
 114:	ldr	x8, [x25, #16]
 118:	mov	x27, x0
 11c:	ldr	x1, [x8]
 120:	cbz	x20, 144 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x144>
 124:	mov	w8, #0x38                  	// #56
 128:	mul	x8, x20, x8
 12c:	sub	x8, x8, #0x38
 130:	cmp	x8, #0x70
 134:	b.cs	150 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x150>  // b.hs, b.nlast
 138:	mov	w9, wzr
 13c:	mov	x8, x21
 140:	b	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>
 144:	mov	w10, wzr
 148:	mov	x8, x22
 14c:	b	28c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x28c>
 150:	mov	x11, #0x2493                	// #9363
 154:	movk	x11, #0x9249, lsl #16
 158:	movk	x11, #0x4924, lsl #32
 15c:	lsr	x8, x8, #3
 160:	movk	x11, #0x2492, lsl #48
 164:	umulh	x8, x8, x11
 168:	add	x11, x8, #0x1
 16c:	mov	w13, #0x38                  	// #56
 170:	and	x12, x11, #0xffffffffffffffe
 174:	mov	w9, wzr
 178:	mov	w10, wzr
 17c:	madd	x8, x12, x13, x21
 180:	add	x13, x21, #0x60
 184:	mov	x14, x12
 188:	ldp	x18, x15, [x13, #-8]
 18c:	ldp	x17, x16, [x13, #-64]
 190:	subs	x14, x14, #0x2
 194:	add	x13, x13, #0x70
 198:	sub	x15, x15, x18
 19c:	sub	x16, x16, x17
 1a0:	lsr	x16, x16, #3
 1a4:	lsr	x15, x15, #3
 1a8:	add	w9, w9, w16
 1ac:	add	w10, w10, w15
 1b0:	b.ne	188 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x188>  // b.any
 1b4:	cmp	x11, x12
 1b8:	add	w9, w10, w9
 1bc:	b.eq	1dc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1dc>  // b.none
 1c0:	ldp	x11, x10, [x8, #32]
 1c4:	add	x8, x8, #0x38
 1c8:	cmp	x28, x8
 1cc:	sub	x10, x10, x11
 1d0:	lsr	x10, x10, #3
 1d4:	add	w9, w9, w10
 1d8:	b.ne	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>  // b.any
 1dc:	mov	w8, #0x38                  	// #56
 1e0:	mul	x8, x20, x8
 1e4:	sub	x12, x8, #0x38
 1e8:	cmp	x12, #0x70
 1ec:	mov	w8, w9
 1f0:	mov	w10, wzr
 1f4:	b.cs	200 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x200>  // b.hs, b.nlast
 1f8:	mov	x9, x21
 1fc:	b	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>
 200:	lsr	x9, x12, #3
 204:	mov	x12, #0x2493                	// #9363
 208:	movk	x12, #0x9249, lsl #16
 20c:	movk	x12, #0x4924, lsl #32
 210:	movk	x12, #0x2492, lsl #48
 214:	umulh	x9, x9, x12
 218:	add	x12, x9, #0x1
 21c:	mov	w14, #0x38                  	// #56
 220:	and	x13, x12, #0xffffffffffffffe
 224:	mov	w11, wzr
 228:	madd	x9, x13, x14, x21
 22c:	add	x14, x21, #0x60
 230:	mov	x15, x13
 234:	ldp	x0, x16, [x14, #-8]
 238:	ldp	x18, x17, [x14, #-64]
 23c:	subs	x15, x15, #0x2
 240:	add	x14, x14, #0x70
 244:	sub	x16, x16, x0
 248:	sub	x17, x17, x18
 24c:	lsr	x17, x17, #3
 250:	lsr	x16, x16, #3
 254:	add	w10, w10, w17
 258:	add	w11, w11, w16
 25c:	b.ne	234 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x234>  // b.any
 260:	cmp	x12, x13
 264:	add	w10, w11, w10
 268:	b.eq	288 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x288>  // b.none
 26c:	ldp	x12, x11, [x9, #32]
 270:	add	x9, x9, #0x38
 274:	cmp	x28, x9
 278:	sub	x11, x11, x12
 27c:	lsr	x11, x11, #3
 280:	add	w10, w10, w11
 284:	b.ne	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>  // b.any
 288:	add	x8, x22, x8
 28c:	mvn	x8, x8
 290:	mov	w9, #0x18                  	// #24
 294:	madd	x3, x8, x9, x27
 298:	add	w4, w10, w19
 29c:	mov	w2, #0x38                  	// #56
 2a0:	mov	x0, x27
 2a4:	mov	x5, x26
 2a8:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 2ac:	ldr	x7, [sp, #8]
 2b0:	mov	x0, x27
 2b4:	mov	x1, x25
 2b8:	mov	x2, x24
 2bc:	mov	x3, x23
 2c0:	mov	x4, x22
 2c4:	mov	x5, x21
 2c8:	mov	x6, x20
 2cc:	str	xzr, [x27, #56]
 2d0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 2d4:	mov	x0, x27
 2d8:	ldp	x20, x19, [sp, #96]
 2dc:	ldp	x22, x21, [sp, #80]
 2e0:	ldp	x24, x23, [sp, #64]
 2e4:	ldp	x26, x25, [sp, #48]
 2e8:	ldp	x28, x27, [sp, #32]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x70
 2f4:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

CoroCleanup.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  10:	add	x8, x8, #0x0
  14:	add	x9, sp, #0x8
  18:	stp	x0, x8, [sp, #8]
  1c:	str	x9, [sp, #24]
  20:	adrp	x0, 0 <_ZSt15__once_callable>
  24:	ldr	x1, [x0]
  28:	add	x0, x0, #0x0
  2c:	blr	x1
  30:	mrs	x8, tpidr_el0
  34:	add	x9, sp, #0x10
  38:	str	x9, [x8, x0]
  3c:	adrp	x0, 0 <_ZSt11__once_call>
  40:	ldr	x1, [x0]
  44:	add	x0, x0, #0x0
  48:	blr	x1
  4c:	adrp	x10, 0 <__pthread_key_create>
  50:	ldr	x10, [x10]
  54:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  58:	add	x9, x9, #0x0
  5c:	str	x9, [x8, x0]
  60:	cbz	x10, 88 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE+0x88>
  64:	adrp	x1, 0 <__once_proxy>
  68:	ldr	x1, [x1]
  6c:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  70:	add	x0, x0, #0x0
  74:	bl	0 <pthread_once>
  78:	cbnz	w0, 8c <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE+0x8c>
  7c:	ldp	x29, x30, [sp, #32]
  80:	add	sp, sp, #0x30
  84:	ret
  88:	mov	w0, #0xffffffff            	// #-1
  8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL35initializeCoroCleanupLegacyPassOnceRN4llvm12PassRegistryE>:
  90:	stp	x29, x30, [sp, #-32]!
  94:	stp	x20, x19, [sp, #16]
  98:	mov	x29, sp
  9c:	mov	x19, x0
  a0:	mov	w0, #0x50                  	// #80
  a4:	bl	0 <_Znwm>
  a8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  ac:	add	x8, x8, #0x0
  b0:	mov	w9, #0x26                  	// #38
  b4:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  b8:	add	x10, x10, #0x0
  bc:	stp	x8, x9, [x0]
  c0:	mov	w8, #0xc                   	// #12
  c4:	stp	x10, x8, [x0, #16]
  c8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  cc:	add	x8, x8, #0x0
  d0:	str	x8, [x0, #32]
  d4:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  d8:	mov	x20, x0
  dc:	add	x8, x8, #0x0
  e0:	strh	wzr, [x0, #40]
  e4:	strb	wzr, [x0, #42]
  e8:	stp	xzr, xzr, [x0, #48]
  ec:	stp	xzr, x8, [x0, #64]
  f0:	mov	w2, #0x1                   	// #1
  f4:	mov	x0, x19
  f8:	mov	x1, x20
  fc:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
 100:	mov	x0, x20
 104:	ldp	x20, x19, [sp, #16]
 108:	ldp	x29, x30, [sp], #32
 10c:	ret

0000000000000110 <_ZN4llvm27createCoroCleanupLegacyPassEv>:
 110:	sub	sp, sp, #0x30
 114:	stp	x29, x30, [sp, #16]
 118:	str	x19, [sp, #32]
 11c:	add	x29, sp, #0x10
 120:	mov	w0, #0x28                  	// #40
 124:	bl	0 <_Znwm>
 128:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 12c:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 130:	add	x8, x8, #0x0
 134:	mov	w9, #0x2                   	// #2
 138:	add	x10, x10, #0x0
 13c:	mov	x19, x0
 140:	stp	xzr, x8, [x0, #8]
 144:	str	w9, [x0, #24]
 148:	str	x10, [x0]
 14c:	str	xzr, [x0, #32]
 150:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 154:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 158:	add	x8, x8, #0x0
 15c:	add	x9, x29, #0x18
 160:	str	x0, [x29, #24]
 164:	stp	x8, x9, [sp]
 168:	adrp	x0, 0 <_ZSt15__once_callable>
 16c:	ldr	x1, [x0]
 170:	add	x0, x0, #0x0
 174:	blr	x1
 178:	mrs	x8, tpidr_el0
 17c:	mov	x9, sp
 180:	str	x9, [x8, x0]
 184:	adrp	x0, 0 <_ZSt11__once_call>
 188:	ldr	x1, [x0]
 18c:	add	x0, x0, #0x0
 190:	blr	x1
 194:	adrp	x10, 0 <__pthread_key_create>
 198:	ldr	x10, [x10]
 19c:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1a0:	add	x9, x9, #0x0
 1a4:	str	x9, [x8, x0]
 1a8:	cbz	x10, 1d8 <_ZN4llvm27createCoroCleanupLegacyPassEv+0xc8>
 1ac:	adrp	x1, 0 <__once_proxy>
 1b0:	ldr	x1, [x1]
 1b4:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <pthread_once>
 1c0:	cbnz	w0, 1dc <_ZN4llvm27createCoroCleanupLegacyPassEv+0xcc>
 1c4:	mov	x0, x19
 1c8:	ldr	x19, [sp, #32]
 1cc:	ldp	x29, x30, [sp, #16]
 1d0:	add	sp, sp, #0x30
 1d4:	ret
 1d8:	mov	w0, #0xffffffff            	// #-1
 1dc:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv>:
 1e0:	sub	sp, sp, #0x30
 1e4:	stp	x29, x30, [sp, #16]
 1e8:	str	x19, [sp, #32]
 1ec:	add	x29, sp, #0x10
 1f0:	mov	w0, #0x28                  	// #40
 1f4:	bl	0 <_Znwm>
 1f8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1fc:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 200:	add	x8, x8, #0x0
 204:	mov	w9, #0x2                   	// #2
 208:	add	x10, x10, #0x0
 20c:	mov	x19, x0
 210:	stp	xzr, x8, [x0, #8]
 214:	str	w9, [x0, #24]
 218:	str	x10, [x0]
 21c:	str	xzr, [x0, #32]
 220:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 224:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 228:	add	x8, x8, #0x0
 22c:	add	x9, x29, #0x18
 230:	str	x0, [x29, #24]
 234:	stp	x8, x9, [sp]
 238:	adrp	x0, 0 <_ZSt15__once_callable>
 23c:	ldr	x1, [x0]
 240:	add	x0, x0, #0x0
 244:	blr	x1
 248:	mrs	x8, tpidr_el0
 24c:	mov	x9, sp
 250:	str	x9, [x8, x0]
 254:	adrp	x0, 0 <_ZSt11__once_call>
 258:	ldr	x1, [x0]
 25c:	add	x0, x0, #0x0
 260:	blr	x1
 264:	adrp	x10, 0 <__pthread_key_create>
 268:	ldr	x10, [x10]
 26c:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 270:	add	x9, x9, #0x0
 274:	str	x9, [x8, x0]
 278:	cbz	x10, 2a8 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv+0xc8>
 27c:	adrp	x1, 0 <__once_proxy>
 280:	ldr	x1, [x1]
 284:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 288:	add	x0, x0, #0x0
 28c:	bl	0 <pthread_once>
 290:	cbnz	w0, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv+0xcc>
 294:	mov	x0, x19
 298:	ldr	x19, [sp, #32]
 29c:	ldp	x29, x30, [sp, #16]
 2a0:	add	sp, sp, #0x30
 2a4:	ret
 2a8:	mov	w0, #0xffffffff            	// #-1
 2ac:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b0 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev>:
 2b0:	stp	x29, x30, [sp, #-32]!
 2b4:	stp	x20, x19, [sp, #16]
 2b8:	mov	x29, sp
 2bc:	ldr	x20, [x0, #32]
 2c0:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 2c4:	mov	x19, x0
 2c8:	add	x8, x8, #0x0
 2cc:	str	x8, [x0]
 2d0:	cbz	x20, 2ec <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev+0x3c>
 2d4:	mov	x0, x20
 2d8:	ldr	x1, [x0, #40]!
 2dc:	cbz	x1, 2e4 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev+0x34>
 2e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 2e4:	mov	x0, x20
 2e8:	bl	0 <_ZdlPv>
 2ec:	str	xzr, [x19, #32]
 2f0:	mov	x0, x19
 2f4:	ldp	x20, x19, [sp, #16]
 2f8:	ldp	x29, x30, [sp], #32
 2fc:	b	0 <_ZN4llvm4PassD2Ev>

0000000000000300 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev>:
 300:	stp	x29, x30, [sp, #-32]!
 304:	stp	x20, x19, [sp, #16]
 308:	mov	x29, sp
 30c:	ldr	x20, [x0, #32]
 310:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 314:	mov	x19, x0
 318:	add	x8, x8, #0x0
 31c:	str	x8, [x0]
 320:	cbz	x20, 33c <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev+0x3c>
 324:	mov	x0, x20
 328:	ldr	x1, [x0, #40]!
 32c:	cbz	x1, 334 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev+0x34>
 330:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 334:	mov	x0, x20
 338:	bl	0 <_ZdlPv>
 33c:	mov	x0, x19
 340:	str	xzr, [x19, #32]
 344:	bl	0 <_ZN4llvm4PassD2Ev>
 348:	mov	x0, x19
 34c:	ldp	x20, x19, [sp, #16]
 350:	ldp	x29, x30, [sp], #32
 354:	b	0 <_ZdlPv>

0000000000000358 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy11getPassNameEv>:
 358:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 35c:	add	x0, x0, #0x0
 360:	mov	w1, #0x11                  	// #17
 364:	ret

0000000000000368 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE>:
 368:	sub	sp, sp, #0xa0
 36c:	stp	x29, x30, [sp, #112]
 370:	str	x21, [sp, #128]
 374:	stp	x20, x19, [sp, #144]
 378:	add	x29, sp, #0x70
 37c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 380:	add	x8, x8, #0x0
 384:	ldp	q0, q1, [x8, #48]
 388:	ldp	q2, q3, [x8, #80]
 38c:	mov	x20, x1
 390:	mov	x19, x0
 394:	stp	q0, q1, [sp, #48]
 398:	ldr	q0, [x8]
 39c:	ldp	q1, q4, [x8, #16]
 3a0:	mov	x1, sp
 3a4:	mov	w2, #0x7                   	// #7
 3a8:	mov	x0, x20
 3ac:	stp	q2, q3, [sp, #80]
 3b0:	stp	q0, q1, [sp]
 3b4:	str	q4, [sp, #32]
 3b8:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
 3bc:	tbz	w0, #0, 41c <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 3c0:	mov	w0, #0x70                  	// #112
 3c4:	bl	0 <_Znwm>
 3c8:	mov	x1, x20
 3cc:	mov	x21, x0
 3d0:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
 3d4:	ldr	x8, [x21, #8]
 3d8:	mov	w9, #0x200                 	// #512
 3dc:	str	wzr, [x21, #80]
 3e0:	strb	wzr, [x21, #86]
 3e4:	stp	x8, xzr, [x21, #64]
 3e8:	stp	xzr, xzr, [x21, #40]
 3ec:	strh	w9, [x21, #84]
 3f0:	str	xzr, [x21, #56]
 3f4:	stp	xzr, xzr, [x21, #88]
 3f8:	ldr	x20, [x19, #32]
 3fc:	str	x21, [x19, #32]
 400:	cbz	x20, 41c <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 404:	mov	x0, x20
 408:	ldr	x1, [x0, #40]!
 40c:	cbz	x1, 414 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xac>
 410:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 414:	mov	x0, x20
 418:	bl	0 <_ZdlPv>
 41c:	ldp	x20, x19, [sp, #144]
 420:	ldr	x21, [sp, #128]
 424:	ldp	x29, x30, [sp, #112]
 428:	mov	w0, wzr
 42c:	add	sp, sp, #0xa0
 430:	ret

0000000000000434 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 434:	ldr	x8, [x0, #32]
 438:	cbz	x8, 440 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE+0xc>
 43c:	ret
 440:	mov	w8, #0x1                   	// #1
 444:	strb	w8, [x1, #160]
 448:	ret

000000000000044c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE>:
 44c:	sub	sp, sp, #0xc0
 450:	stp	x29, x30, [sp, #96]
 454:	stp	x28, x27, [sp, #112]
 458:	stp	x26, x25, [sp, #128]
 45c:	stp	x24, x23, [sp, #144]
 460:	stp	x22, x21, [sp, #160]
 464:	stp	x20, x19, [sp, #176]
 468:	add	x29, sp, #0x60
 46c:	ldr	x26, [x0, #32]
 470:	cbz	x26, 7ac <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x360>
 474:	add	x0, sp, #0x10
 478:	mov	x19, x1
 47c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 480:	adrp	x28, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 484:	mov	w8, wzr
 488:	add	x27, x19, #0x48
 48c:	add	x20, x26, #0x28
 490:	add	x28, x28, #0x0
 494:	mov	w25, #0x101                 	// #257
 498:	ldr	x9, [sp, #16]
 49c:	ldr	x10, [sp, #24]
 4a0:	cmp	x10, x27
 4a4:	b.eq	4b0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x64>  // b.none
 4a8:	ldr	x11, [sp, #32]
 4ac:	b	4c0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x74>
 4b0:	cmp	x27, x9
 4b4:	b.eq	72c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2e0>  // b.none
 4b8:	ldr	x11, [sp, #32]
 4bc:	cbz	x11, 72c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2e0>
 4c0:	ldr	x12, [x11, #8]
 4c4:	str	x12, [sp, #32]
 4c8:	ldrb	w13, [x10]
 4cc:	tbnz	w13, #2, 7d0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x384>
 4d0:	sub	x13, x10, #0x18
 4d4:	cmp	x10, #0x0
 4d8:	csel	x13, xzr, x13, eq  // eq = none
 4dc:	add	x13, x13, #0x28
 4e0:	cmp	x13, x12
 4e4:	b.ne	514 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xc8>  // b.any
 4e8:	ldr	x10, [x10, #8]
 4ec:	cmp	x9, x10
 4f0:	str	x10, [sp, #24]
 4f4:	b.eq	514 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xc8>  // b.none
 4f8:	ldrb	w12, [x10]
 4fc:	tbnz	w12, #2, 7d0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x384>
 500:	sub	x12, x10, #0x18
 504:	cmp	x10, #0x0
 508:	csel	x12, xzr, x12, eq  // eq = none
 50c:	ldr	x12, [x12, #48]
 510:	b	4c4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x78>
 514:	ldrb	w10, [x11]
 518:	tbnz	w10, #2, 7f0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
 51c:	sub	x10, x11, #0x18
 520:	cmp	x11, #0x0
 524:	csel	x21, xzr, x10, eq  // eq = none
 528:	cbz	x11, 810 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c4>
 52c:	ldrb	w10, [x21, #16]
 530:	cmp	w10, #0x50
 534:	b.ne	49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>  // b.any
 538:	ldur	x10, [x21, #-24]
 53c:	cbz	x10, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 540:	ldrb	w11, [x10, #16]
 544:	cbnz	w11, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 548:	ldrb	w11, [x10, #33]
 54c:	tbz	w11, #5, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 550:	ldr	w10, [x10, #36]
 554:	sub	w10, w10, #0xe
 558:	cmp	w10, #0x14
 55c:	b.hi	49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>  // b.pmore
 560:	adr	x11, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 564:	ldrb	w12, [x28, x10]
 568:	add	x11, x11, x12, lsl #2
 56c:	br	x11
 570:	ldr	x0, [x26, #8]
 574:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
 578:	b	710 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2c4>
 57c:	mov	w1, #0x1                   	// #1
 580:	mov	x0, x21
 584:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 588:	b	710 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2c4>
 58c:	ldr	x0, [x26, #8]
 590:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
 594:	b	710 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x2c4>
 598:	mov	x0, x20
 59c:	mov	x1, x21
 5a0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5a4:	mov	x0, x21
 5a8:	mov	w1, wzr
 5ac:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5b0:	mov	x23, x0
 5b4:	mov	x0, x21
 5b8:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5bc:	str	w0, [sp, #12]
 5c0:	mov	x0, x21
 5c4:	bl	0 <_ZNK4llvm5Value10getContextEv>
 5c8:	ldr	x8, [x26, #64]
 5cc:	mov	x24, x0
 5d0:	mov	w1, wzr
 5d4:	mov	x0, x8
 5d8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 5dc:	str	x0, [sp, #40]
 5e0:	ldr	x0, [x26, #64]
 5e4:	mov	w1, wzr
 5e8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 5ec:	str	x0, [sp, #48]
 5f0:	add	x1, sp, #0x28
 5f4:	mov	w2, #0x2                   	// #2
 5f8:	mov	x0, x24
 5fc:	mov	w3, wzr
 600:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
 604:	mov	w1, wzr
 608:	mov	x24, x0
 60c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 610:	mov	x22, x0
 614:	mov	x0, x20
 618:	mov	x1, x21
 61c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 620:	stp	xzr, xzr, [x29, #-24]
 624:	sturh	w25, [x29, #-8]
 628:	ldr	x8, [x23]
 62c:	cmp	x8, x22
 630:	b.eq	68c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x240>  // b.none
 634:	ldrb	w8, [x23, #16]
 638:	cmp	w8, #0x10
 63c:	b.ls	674 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x228>  // b.plast
 640:	add	x3, sp, #0x28
 644:	mov	w0, #0x31                  	// #49
 648:	mov	x1, x23
 64c:	mov	x2, x22
 650:	mov	x4, xzr
 654:	stp	xzr, xzr, [sp, #40]
 658:	strh	w25, [sp, #56]
 65c:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
 660:	mov	x1, x0
 664:	sub	x2, x29, #0x18
 668:	mov	x0, x20
 66c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 670:	b	688 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x23c>
 674:	mov	w0, #0x31                  	// #49
 678:	mov	x1, x23
 67c:	mov	x2, x22
 680:	mov	w3, wzr
 684:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
 688:	mov	x23, x0
 68c:	ldr	w22, [sp, #12]
 690:	add	x5, sp, #0x28
 694:	mov	x0, x20
 698:	mov	x1, x24
 69c:	mov	x2, x23
 6a0:	mov	w3, wzr
 6a4:	mov	w4, w22
 6a8:	stp	xzr, xzr, [sp, #40]
 6ac:	strh	w25, [sp, #56]
 6b0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 6b4:	ldr	w8, [x24, #12]
 6b8:	cmp	w8, w22
 6bc:	b.ls	830 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3e4>  // b.plast
 6c0:	ldr	x8, [x24, #16]
 6c4:	mov	x23, x0
 6c8:	mov	w0, #0x40                  	// #64
 6cc:	mov	w1, #0x1                   	// #1
 6d0:	ldr	x22, [x8, w22, uxtw #3]
 6d4:	stp	xzr, xzr, [x29, #-24]
 6d8:	sturh	w25, [x29, #-8]
 6dc:	bl	0 <_ZN4llvm4UsernwEmj>
 6e0:	add	x3, sp, #0x28
 6e4:	mov	x1, x22
 6e8:	mov	x2, x23
 6ec:	mov	x4, xzr
 6f0:	mov	x24, x0
 6f4:	stp	xzr, xzr, [sp, #40]
 6f8:	strh	w25, [sp, #56]
 6fc:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
 700:	sub	x2, x29, #0x18
 704:	mov	x0, x20
 708:	mov	x1, x24
 70c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 710:	mov	x1, x0
 714:	mov	x0, x21
 718:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 71c:	mov	x0, x21
 720:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 724:	mov	w8, #0x1                   	// #1
 728:	b	498 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x4c>
 72c:	tbz	w8, #0, 7ac <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x360>
 730:	ldr	x1, [x19, #40]
 734:	sub	x0, x29, #0x18
 738:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
 73c:	add	x5, sp, #0x28
 740:	mov	w0, #0x1                   	// #1
 744:	mov	w3, #0x1                   	// #1
 748:	mov	w1, wzr
 74c:	mov	w2, wzr
 750:	mov	w4, wzr
 754:	str	xzr, [sp, #56]
 758:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
 75c:	mov	x1, x0
 760:	sub	x0, x29, #0x18
 764:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
 768:	ldr	x8, [sp, #56]
 76c:	cbz	x8, 780 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x334>
 770:	add	x0, sp, #0x28
 774:	add	x1, sp, #0x28
 778:	mov	w2, #0x3                   	// #3
 77c:	blr	x8
 780:	sub	x0, x29, #0x18
 784:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
 788:	sub	x0, x29, #0x18
 78c:	mov	x1, x19
 790:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
 794:	sub	x0, x29, #0x18
 798:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
 79c:	sub	x0, x29, #0x18
 7a0:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
 7a4:	mov	w0, #0x1                   	// #1
 7a8:	b	7b0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x364>
 7ac:	mov	w0, wzr
 7b0:	ldp	x20, x19, [sp, #176]
 7b4:	ldp	x22, x21, [sp, #160]
 7b8:	ldp	x24, x23, [sp, #144]
 7bc:	ldp	x26, x25, [sp, #128]
 7c0:	ldp	x28, x27, [sp, #112]
 7c4:	ldp	x29, x30, [sp, #96]
 7c8:	add	sp, sp, #0xc0
 7cc:	ret
 7d0:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7d4:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7d8:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7dc:	add	x0, x0, #0x0
 7e0:	add	x1, x1, #0x0
 7e4:	add	x3, x3, #0x0
 7e8:	mov	w2, #0x8b                  	// #139
 7ec:	bl	0 <__assert_fail>
 7f0:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7f4:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7f8:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 7fc:	add	x0, x0, #0x0
 800:	add	x1, x1, #0x0
 804:	add	x3, x3, #0x0
 808:	mov	w2, #0x8b                  	// #139
 80c:	bl	0 <__assert_fail>
 810:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 814:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 818:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 81c:	add	x0, x0, #0x0
 820:	add	x1, x1, #0x0
 824:	add	x3, x3, #0x0
 828:	mov	w2, #0x69                  	// #105
 82c:	bl	0 <__assert_fail>
 830:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 834:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 838:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 83c:	add	x0, x0, #0x0
 840:	add	x1, x1, #0x0
 844:	add	x3, x3, #0x0
 848:	mov	w2, #0x160                 	// #352
 84c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	98 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x98>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	7c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x7c>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 80 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x80>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	b	8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  7c:	ldr	x1, [x29, #24]
  80:	cbz	x1, 8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  84:	add	x0, x29, #0x18
  88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  9c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a0:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x8e                  	// #142
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroSubFnInst8getIndexEv:

0000000000000000 <_ZNK4llvm13CoroSubFnInst8getIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  14:	cbz	x0, 7c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x7c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	9c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x9c>  // b.any
  24:	ldr	w8, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w8, #0x40
  30:	b.hi	4c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x4c>  // b.pmore
  34:	cbz	w8, dc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xdc>
  38:	ldr	x9, [x19]
  3c:	neg	x8, x8
  40:	lsl	x9, x9, x8
  44:	asr	x0, x9, x8
  48:	b	64 <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x64>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  54:	cmp	w0, #0x41
  58:	b.cs	fc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xfc>  // b.hs, b.nlast
  5c:	ldr	x8, [x19]
  60:	ldr	x0, [x8]
  64:	add	x8, x0, #0x1
  68:	cmp	x8, #0x3
  6c:	b.hi	bc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xbc>  // b.pmore
  70:	ldr	x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  80:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  84:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x108                 	// #264
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x34                  	// #52
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x307                 	// #775
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 100:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 104:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x663                 	// #1635
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cbz	w19, b0 <_ZNK4llvm5APInt16getMinSignedBitsEv+0xb0>
  14:	sub	w9, w19, #0x1
  18:	mov	w8, #0x1                   	// #1
  1c:	cmp	w19, #0x40
  20:	lsl	x8, x8, x9
  24:	b.hi	30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>  // b.pmore
  28:	mov	x9, x0
  2c:	b	3c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x3c>
  30:	ldr	x10, [x0]
  34:	lsr	w9, w9, #6
  38:	add	x9, x10, w9, uxtw #3
  3c:	ldr	x9, [x9]
  40:	tst	x9, x8
  44:	b.eq	74 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x74>  // b.none
  48:	cmp	w19, #0x40
  4c:	b.hi	90 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x90>  // b.pmore
  50:	ldr	x8, [x0]
  54:	neg	x9, x19
  58:	lsl	x8, x8, x9
  5c:	mvn	x9, x8
  60:	cmn	x8, #0x1
  64:	clz	x8, x9
  68:	mov	w9, #0x40                  	// #64
  6c:	csel	w0, w9, w8, eq  // eq = none
  70:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  74:	cmp	w19, #0x40
  78:	b.hi	98 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x98>  // b.pmore
  7c:	ldr	x8, [x0]
  80:	clz	x8, x8
  84:	add	w8, w19, w8
  88:	sub	w0, w8, #0x40
  8c:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  90:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  94:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  98:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  9c:	sub	w8, w19, w0
  a0:	ldr	x19, [sp, #16]
  a4:	add	w0, w8, #0x1
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b4:	adrp	x1, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b8:	adrp	x3, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x472                 	// #1138
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 12c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x12c>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x69                  	// #105
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroEarly.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroEarlyLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	mov	w0, #0x50                  	// #80
      a4:	bl	0 <_Znwm>
      a8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      ac:	add	x8, x8, #0x0
      b0:	mov	w9, #0x20                  	// #32
      b4:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      b8:	add	x10, x10, #0x0
      bc:	stp	x8, x9, [x0]
      c0:	mov	w8, #0xa                   	// #10
      c4:	stp	x10, x8, [x0, #16]
      c8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      cc:	add	x8, x8, #0x0
      d0:	str	x8, [x0, #32]
      d4:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      d8:	mov	x20, x0
      dc:	add	x8, x8, #0x0
      e0:	strh	wzr, [x0, #40]
      e4:	strb	wzr, [x0, #42]
      e8:	stp	xzr, xzr, [x0, #48]
      ec:	stp	xzr, x8, [x0, #64]
      f0:	mov	w2, #0x1                   	// #1
      f4:	mov	x0, x19
      f8:	mov	x1, x20
      fc:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     100:	mov	x0, x20
     104:	ldp	x20, x19, [sp, #16]
     108:	ldp	x29, x30, [sp], #32
     10c:	ret

0000000000000110 <_ZN4llvm25createCoroEarlyLegacyPassEv>:
     110:	sub	sp, sp, #0x30
     114:	stp	x29, x30, [sp, #16]
     118:	str	x19, [sp, #32]
     11c:	add	x29, sp, #0x10
     120:	mov	w0, #0x28                  	// #40
     124:	bl	0 <_Znwm>
     128:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     12c:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     130:	add	x8, x8, #0x0
     134:	mov	w9, #0x2                   	// #2
     138:	add	x10, x10, #0x0
     13c:	mov	x19, x0
     140:	stp	xzr, x8, [x0, #8]
     144:	str	w9, [x0, #24]
     148:	str	x10, [x0]
     14c:	str	xzr, [x0, #32]
     150:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     154:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     158:	add	x8, x8, #0x0
     15c:	add	x9, x29, #0x18
     160:	str	x0, [x29, #24]
     164:	stp	x8, x9, [sp]
     168:	adrp	x0, 0 <_ZSt15__once_callable>
     16c:	ldr	x1, [x0]
     170:	add	x0, x0, #0x0
     174:	blr	x1
     178:	mrs	x8, tpidr_el0
     17c:	mov	x9, sp
     180:	str	x9, [x8, x0]
     184:	adrp	x0, 0 <_ZSt11__once_call>
     188:	ldr	x1, [x0]
     18c:	add	x0, x0, #0x0
     190:	blr	x1
     194:	adrp	x10, 0 <__pthread_key_create>
     198:	ldr	x10, [x10]
     19c:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1a0:	add	x9, x9, #0x0
     1a4:	str	x9, [x8, x0]
     1a8:	cbz	x10, 1d8 <_ZN4llvm25createCoroEarlyLegacyPassEv+0xc8>
     1ac:	adrp	x1, 0 <__once_proxy>
     1b0:	ldr	x1, [x1]
     1b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1b8:	add	x0, x0, #0x0
     1bc:	bl	0 <pthread_once>
     1c0:	cbnz	w0, 1dc <_ZN4llvm25createCoroEarlyLegacyPassEv+0xcc>
     1c4:	mov	x0, x19
     1c8:	ldr	x19, [sp, #32]
     1cc:	ldp	x29, x30, [sp, #16]
     1d0:	add	sp, sp, #0x30
     1d4:	ret
     1d8:	mov	w0, #0xffffffff            	// #-1
     1dc:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv>:
     1e0:	sub	sp, sp, #0x30
     1e4:	stp	x29, x30, [sp, #16]
     1e8:	str	x19, [sp, #32]
     1ec:	add	x29, sp, #0x10
     1f0:	mov	w0, #0x28                  	// #40
     1f4:	bl	0 <_Znwm>
     1f8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1fc:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     200:	add	x8, x8, #0x0
     204:	mov	w9, #0x2                   	// #2
     208:	add	x10, x10, #0x0
     20c:	mov	x19, x0
     210:	stp	xzr, x8, [x0, #8]
     214:	str	w9, [x0, #24]
     218:	str	x10, [x0]
     21c:	str	xzr, [x0, #32]
     220:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     224:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     228:	add	x8, x8, #0x0
     22c:	add	x9, x29, #0x18
     230:	str	x0, [x29, #24]
     234:	stp	x8, x9, [sp]
     238:	adrp	x0, 0 <_ZSt15__once_callable>
     23c:	ldr	x1, [x0]
     240:	add	x0, x0, #0x0
     244:	blr	x1
     248:	mrs	x8, tpidr_el0
     24c:	mov	x9, sp
     250:	str	x9, [x8, x0]
     254:	adrp	x0, 0 <_ZSt11__once_call>
     258:	ldr	x1, [x0]
     25c:	add	x0, x0, #0x0
     260:	blr	x1
     264:	adrp	x10, 0 <__pthread_key_create>
     268:	ldr	x10, [x10]
     26c:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     270:	add	x9, x9, #0x0
     274:	str	x9, [x8, x0]
     278:	cbz	x10, 2a8 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv+0xc8>
     27c:	adrp	x1, 0 <__once_proxy>
     280:	ldr	x1, [x1]
     284:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     288:	add	x0, x0, #0x0
     28c:	bl	0 <pthread_once>
     290:	cbnz	w0, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv+0xcc>
     294:	mov	x0, x19
     298:	ldr	x19, [sp, #32]
     29c:	ldp	x29, x30, [sp, #16]
     2a0:	add	sp, sp, #0x30
     2a4:	ret
     2a8:	mov	w0, #0xffffffff            	// #-1
     2ac:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b0 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev>:
     2b0:	stp	x29, x30, [sp, #-32]!
     2b4:	stp	x20, x19, [sp, #16]
     2b8:	mov	x29, sp
     2bc:	ldr	x20, [x0, #32]
     2c0:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     2c4:	mov	x19, x0
     2c8:	add	x8, x8, #0x0
     2cc:	str	x8, [x0]
     2d0:	cbz	x20, 2ec <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev+0x3c>
     2d4:	mov	x0, x20
     2d8:	ldr	x1, [x0, #40]!
     2dc:	cbz	x1, 2e4 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev+0x34>
     2e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     2e4:	mov	x0, x20
     2e8:	bl	0 <_ZdlPv>
     2ec:	str	xzr, [x19, #32]
     2f0:	mov	x0, x19
     2f4:	ldp	x20, x19, [sp, #16]
     2f8:	ldp	x29, x30, [sp], #32
     2fc:	b	0 <_ZN4llvm4PassD2Ev>

0000000000000300 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev>:
     300:	stp	x29, x30, [sp, #-32]!
     304:	stp	x20, x19, [sp, #16]
     308:	mov	x29, sp
     30c:	ldr	x20, [x0, #32]
     310:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     314:	mov	x19, x0
     318:	add	x8, x8, #0x0
     31c:	str	x8, [x0]
     320:	cbz	x20, 33c <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev+0x3c>
     324:	mov	x0, x20
     328:	ldr	x1, [x0, #40]!
     32c:	cbz	x1, 334 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev+0x34>
     330:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     334:	mov	x0, x20
     338:	bl	0 <_ZdlPv>
     33c:	mov	x0, x19
     340:	str	xzr, [x19, #32]
     344:	bl	0 <_ZN4llvm4PassD2Ev>
     348:	mov	x0, x19
     34c:	ldp	x20, x19, [sp, #16]
     350:	ldp	x29, x30, [sp], #32
     354:	b	0 <_ZdlPv>

0000000000000358 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy11getPassNameEv>:
     358:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     35c:	add	x0, x0, #0x0
     360:	mov	w1, #0x20                  	// #32
     364:	ret

0000000000000368 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE>:
     368:	sub	sp, sp, #0xe0
     36c:	stp	x29, x30, [sp, #176]
     370:	str	x21, [sp, #192]
     374:	stp	x20, x19, [sp, #208]
     378:	add	x29, sp, #0xb0
     37c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     380:	add	x8, x8, #0x0
     384:	ldp	q0, q1, [x8, #128]
     388:	ldp	q5, q2, [x8, #96]
     38c:	ldr	q3, [x8, #160]
     390:	mov	x20, x1
     394:	mov	x19, x0
     398:	stp	q2, q0, [sp, #112]
     39c:	ldp	q4, q0, [x8, #48]
     3a0:	ldr	q2, [x8, #80]
     3a4:	stp	q1, q3, [sp, #144]
     3a8:	ldp	q3, q1, [x8, #16]
     3ac:	stp	q4, q0, [sp, #48]
     3b0:	ldr	q0, [x8]
     3b4:	mov	x1, sp
     3b8:	mov	w2, #0xb                   	// #11
     3bc:	mov	x0, x20
     3c0:	stp	q2, q5, [sp, #80]
     3c4:	stp	q0, q3, [sp]
     3c8:	str	q1, [sp, #32]
     3cc:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     3d0:	tbz	w0, #0, 458 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xf0>
     3d4:	mov	w0, #0x80                  	// #128
     3d8:	bl	0 <_Znwm>
     3dc:	mov	x1, x20
     3e0:	mov	x21, x0
     3e4:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
     3e8:	ldr	x0, [x21, #8]
     3ec:	mov	w8, #0x200                 	// #512
     3f0:	str	wzr, [x21, #80]
     3f4:	strb	wzr, [x21, #86]
     3f8:	stp	x0, xzr, [x21, #64]
     3fc:	stp	xzr, xzr, [x21, #40]
     400:	strh	w8, [x21, #84]
     404:	str	xzr, [x21, #56]
     408:	stp	xzr, xzr, [x21, #88]
     40c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     410:	ldr	x8, [x21, #16]
     414:	mov	x1, sp
     418:	mov	w2, #0x1                   	// #1
     41c:	mov	w3, wzr
     420:	str	x8, [sp]
     424:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     428:	mov	w1, wzr
     42c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     430:	stp	x0, xzr, [x21, #112]
     434:	ldr	x20, [x19, #32]
     438:	str	x21, [x19, #32]
     43c:	cbz	x20, 458 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xf0>
     440:	mov	x0, x20
     444:	ldr	x1, [x0, #40]!
     448:	cbz	x1, 450 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xe8>
     44c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     450:	mov	x0, x20
     454:	bl	0 <_ZdlPv>
     458:	ldp	x20, x19, [sp, #208]
     45c:	ldr	x21, [sp, #192]
     460:	ldp	x29, x30, [sp, #176]
     464:	mov	w0, wzr
     468:	add	sp, sp, #0xe0
     46c:	ret

0000000000000470 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     470:	mov	x0, x1
     474:	b	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>

0000000000000478 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE>:
     478:	sub	sp, sp, #0x130
     47c:	stp	x29, x30, [sp, #208]
     480:	stp	x28, x27, [sp, #224]
     484:	stp	x26, x25, [sp, #240]
     488:	stp	x24, x23, [sp, #256]
     48c:	stp	x22, x21, [sp, #272]
     490:	stp	x20, x19, [sp, #288]
     494:	add	x29, sp, #0xd0
     498:	ldr	x23, [x0, #32]
     49c:	cbz	x23, edc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa64>
     4a0:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4a4:	ldr	d0, [x8]
     4a8:	add	x8, sp, #0x68
     4ac:	add	x8, x8, #0x10
     4b0:	add	x0, sp, #0x50
     4b4:	mov	x26, x1
     4b8:	str	x8, [sp, #40]
     4bc:	str	x8, [sp, #104]
     4c0:	str	d0, [sp, #112]
     4c4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4c8:	mov	x27, #0x41                  	// #65
     4cc:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4d0:	mov	w25, wzr
     4d4:	add	x20, x26, #0x48
     4d8:	add	x19, x23, #0x28
     4dc:	mov	w22, #0x1                   	// #1
     4e0:	movk	x27, #0x8, lsl #48
     4e4:	add	x24, x24, #0x0
     4e8:	str	x23, [sp, #64]
     4ec:	stp	xzr, x19, [sp, #48]
     4f0:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     4f4:	stur	x0, [x29, #-32]
     4f8:	sub	x0, x29, #0x20
     4fc:	mov	w1, wzr
     500:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     504:	ldur	x8, [x29, #-32]
     508:	mov	x1, x0
     50c:	mov	x0, x23
     510:	mov	w2, wzr
     514:	and	x3, x8, #0xfffffffffffffff8
     518:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     51c:	mov	x1, x0
     520:	sub	x0, x29, #0x20
     524:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     528:	sub	x0, x29, #0x20
     52c:	mov	w1, #0x8                   	// #8
     530:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     534:	mov	w25, #0x1                   	// #1
     538:	ldp	x9, x8, [sp, #80]
     53c:	cmp	x8, x20
     540:	b.eq	54c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd4>  // b.none
     544:	ldr	x21, [sp, #96]
     548:	b	55c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xe4>
     54c:	cmp	x20, x9
     550:	b.eq	e90 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa18>  // b.none
     554:	ldr	x21, [sp, #96]
     558:	cbz	x21, e90 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa18>
     55c:	ldr	x10, [x21, #8]
     560:	str	x10, [sp, #96]
     564:	ldrb	w11, [x8]
     568:	tbnz	w11, #2, f04 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa8c>
     56c:	sub	x11, x8, #0x18
     570:	cmp	x8, #0x0
     574:	csel	x11, xzr, x11, eq  // eq = none
     578:	add	x11, x11, #0x28
     57c:	cmp	x11, x10
     580:	b.ne	5b0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x138>  // b.any
     584:	ldr	x8, [x8, #8]
     588:	cmp	x9, x8
     58c:	str	x8, [sp, #88]
     590:	b.eq	5b0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x138>  // b.none
     594:	ldrb	w10, [x8]
     598:	tbnz	w10, #2, f04 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa8c>
     59c:	sub	x10, x8, #0x18
     5a0:	cmp	x8, #0x0
     5a4:	csel	x10, xzr, x10, eq  // eq = none
     5a8:	ldr	x10, [x10, #48]
     5ac:	b	560 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xe8>
     5b0:	ldrb	w8, [x21]
     5b4:	tbnz	w8, #2, f24 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaac>
     5b8:	sub	x8, x21, #0x18
     5bc:	cmp	x21, #0x0
     5c0:	csel	x28, xzr, x8, eq  // eq = none
     5c4:	mov	x0, x28
     5c8:	str	xzr, [sp, #72]
     5cc:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     5d0:	cmp	x0, #0x8
     5d4:	str	x0, [sp, #72]
     5d8:	b.cc	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>  // b.lo, b.ul, b.last
     5dc:	ands	x8, x0, #0xfffffffffffffff8
     5e0:	b.eq	f64 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaec>  // b.none
     5e4:	ldrb	w9, [x8, #16]
     5e8:	sub	w9, w9, #0x1d
     5ec:	cmp	w9, #0x33
     5f0:	b.hi	f44 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xacc>  // b.pmore
     5f4:	lsl	x9, x22, x9
     5f8:	tst	x9, x27
     5fc:	b.eq	f44 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xacc>  // b.none
     600:	ldur	x8, [x8, #-24]
     604:	cbz	x8, f84 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb0c>
     608:	ldrb	w9, [x8, #16]
     60c:	cbnz	w9, 538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     610:	ldr	w8, [x8, #36]
     614:	sub	w8, w8, #0x13
     618:	cmp	w8, #0x10
     61c:	b.hi	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>  // b.pmore
     620:	adr	x9, 4f4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7c>
     624:	ldrh	w10, [x24, x8, lsl #1]
     628:	add	x9, x9, x10, lsl #2
     62c:	br	x9
     630:	mov	x0, x26
     634:	bl	0 <_ZNK4llvm8Function10getContextEv>
     638:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     63c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     640:	mov	w2, #0x12                  	// #18
     644:	mov	w4, #0x1                   	// #1
     648:	add	x1, x1, #0x0
     64c:	add	x3, x3, #0x0
     650:	mov	w25, #0x1                   	// #1
     654:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     658:	mov	x2, x0
     65c:	mov	w1, #0xffffffff            	// #-1
     660:	mov	x0, x26
     664:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     668:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     66c:	cbz	x21, 10e4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc6c>
     670:	ldrb	w8, [x28, #16]
     674:	cmp	w8, #0x50
     678:	b.ne	1004 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb8c>  // b.any
     67c:	ldur	x8, [x28, #-24]
     680:	cbz	x8, 1004 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb8c>
     684:	ldrb	w9, [x8, #16]
     688:	cbnz	w9, 1004 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb8c>
     68c:	ldrb	w9, [x8, #33]
     690:	tbz	w9, #5, 1004 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb8c>
     694:	ldr	w8, [x8, #36]
     698:	cmp	w8, #0x1e
     69c:	b.ne	1004 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb8c>  // b.any
     6a0:	mov	x0, x28
     6a4:	mov	w1, wzr
     6a8:	mov	x22, x26
     6ac:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     6b0:	mov	x24, x0
     6b4:	mov	x0, x28
     6b8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     6bc:	ldr	x8, [x23, #64]
     6c0:	mov	w26, w0
     6c4:	mov	x0, x8
     6c8:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
     6cc:	mov	x25, x0
     6d0:	ldr	x8, [x23, #112]
     6d4:	ldr	x0, [x23, #8]
     6d8:	sub	x1, x29, #0x20
     6dc:	mov	w2, #0x3                   	// #3
     6e0:	mov	w3, wzr
     6e4:	stp	x8, x8, [x29, #-32]
     6e8:	stur	x25, [x29, #-16]
     6ec:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
     6f0:	ldr	x8, [x23]
     6f4:	mov	x21, x0
     6f8:	mov	x0, x8
     6fc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
     700:	mov	x1, x21
     704:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
     708:	ldr	w8, [x0, #12]
     70c:	and	w8, w8, #0x7fffffff
     710:	cmp	w8, #0x2
     714:	b.ls	1104 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc8c>  // b.plast
     718:	cbz	w26, 1124 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xcac>
     71c:	ldr	x21, [x0, #32]
     720:	mov	w1, #0x2                   	// #2
     724:	mov	x0, x28
     728:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     72c:	cbz	x0, 1084 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0c>
     730:	ldrb	w8, [x0, #16]
     734:	cmp	w8, #0x11
     738:	b.cs	10a4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc2c>  // b.hs, b.nlast
     73c:	mov	w8, w26
     740:	add	x9, x8, x21
     744:	sub	x9, x9, #0x1
     748:	udiv	x9, x9, x8
     74c:	mul	x23, x9, x8
     750:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     754:	ldr	x19, [sp, #56]
     758:	mov	w21, w0
     75c:	mov	x1, x28
     760:	mov	x0, x19
     764:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     768:	tst	w21, #0x1
     76c:	cneg	w3, w23, ne  // ne = any
     770:	mov	w8, #0x101                 	// #257
     774:	sub	x4, x29, #0x20
     778:	mov	x0, x19
     77c:	mov	x1, x25
     780:	mov	x2, x24
     784:	stp	xzr, xzr, [x29, #-32]
     788:	sturh	w8, [x29, #-16]
     78c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     790:	mov	x1, x0
     794:	mov	x0, x28
     798:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     79c:	mov	x0, x28
     7a0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     7a4:	ldr	x23, [sp, #64]
     7a8:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     7ac:	mov	w25, #0x1                   	// #1
     7b0:	mov	x26, x22
     7b4:	mov	w22, #0x1                   	// #1
     7b8:	add	x24, x24, #0x0
     7bc:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     7c0:	cbz	x21, 1144 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xccc>
     7c4:	ldrb	w8, [x28, #16]
     7c8:	cmp	w8, #0x50
     7cc:	b.ne	fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>  // b.any
     7d0:	ldur	x8, [x28, #-24]
     7d4:	cbz	x8, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     7d8:	ldrb	w9, [x8, #16]
     7dc:	cbnz	w9, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     7e0:	ldrb	w9, [x8, #33]
     7e4:	tbz	w9, #5, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     7e8:	ldr	w8, [x8, #36]
     7ec:	cmp	w8, #0x18
     7f0:	b.ne	fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>  // b.any
     7f4:	mov	x0, x28
     7f8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     7fc:	cbz	x1, c6c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7f4>
     800:	mov	w25, #0x1                   	// #1
     804:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     808:	cbz	x21, 1164 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xcec>
     80c:	ldrb	w8, [x28, #16]
     810:	cmp	w8, #0x50
     814:	b.ne	1024 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>  // b.any
     818:	ldur	x8, [x28, #-24]
     81c:	cbz	x8, 1024 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>
     820:	ldrb	w9, [x8, #16]
     824:	cbnz	w9, 1024 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>
     828:	ldrb	w9, [x8, #33]
     82c:	tbz	w9, #5, 1024 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>
     830:	ldr	w8, [x8, #36]
     834:	cmp	w8, #0x15
     838:	b.ne	1024 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>  // b.any
     83c:	mov	w1, #0x1                   	// #1
     840:	mov	x0, x28
     844:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     848:	cbz	x0, 1084 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0c>
     84c:	ldrb	w8, [x0, #16]
     850:	cmp	w8, #0x11
     854:	b.cs	10a4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc2c>  // b.hs, b.nlast
     858:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     85c:	tbz	w0, #0, c54 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7dc>
     860:	mov	w25, #0x1                   	// #1
     864:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     868:	cbz	x21, 1184 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd0c>
     86c:	ldrb	w8, [x28, #16]
     870:	cmp	w8, #0x50
     874:	b.ne	1044 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbcc>  // b.any
     878:	ldur	x8, [x28, #-24]
     87c:	cbz	x8, 1044 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbcc>
     880:	ldrb	w9, [x8, #16]
     884:	cbnz	w9, 1044 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbcc>
     888:	ldrb	w9, [x8, #33]
     88c:	tbz	w9, #5, 1044 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbcc>
     890:	ldr	w8, [x8, #36]
     894:	cmp	w8, #0x17
     898:	b.ne	1044 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbcc>  // b.any
     89c:	ldp	w8, w9, [sp, #112]
     8a0:	cmp	w8, w9
     8a4:	b.cs	e74 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9fc>  // b.hs, b.nlast
     8a8:	ldr	x9, [sp, #104]
     8ac:	str	x28, [x9, w8, uxtw #3]
     8b0:	ldp	w8, w9, [sp, #112]
     8b4:	cmp	w8, w9
     8b8:	b.cs	11a4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd2c>  // b.hs, b.nlast
     8bc:	add	w8, w8, #0x1
     8c0:	str	w8, [sp, #112]
     8c4:	mov	w25, #0x1                   	// #1
     8c8:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     8cc:	stur	x0, [x29, #-32]
     8d0:	sub	x0, x29, #0x20
     8d4:	mov	w1, wzr
     8d8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     8dc:	ldur	x8, [x29, #-32]
     8e0:	mov	x1, x0
     8e4:	mov	w2, #0x1                   	// #1
     8e8:	mov	x0, x23
     8ec:	and	x3, x8, #0xfffffffffffffff8
     8f0:	mov	w25, #0x1                   	// #1
     8f4:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     8f8:	mov	x1, x0
     8fc:	sub	x0, x29, #0x20
     900:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     904:	sub	x0, x29, #0x20
     908:	mov	w1, #0x8                   	// #8
     90c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     910:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     914:	cbz	x21, 10c4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc4c>
     918:	ldrb	w8, [x28, #16]
     91c:	cmp	w8, #0x50
     920:	b.ne	fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>  // b.any
     924:	ldur	x8, [x28, #-24]
     928:	cbz	x8, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     92c:	ldrb	w9, [x8, #16]
     930:	cbnz	w9, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     934:	ldrb	w8, [x8, #33]
     938:	tbz	w8, #5, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     93c:	mov	x0, x28
     940:	mov	w1, wzr
     944:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     948:	ldr	x8, [x23, #16]
     94c:	mov	x24, x0
     950:	mov	w1, wzr
     954:	mov	x0, x8
     958:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     95c:	mov	x25, x0
     960:	mov	x0, x19
     964:	mov	x1, x28
     968:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     96c:	mov	w21, #0x101                 	// #257
     970:	stp	xzr, xzr, [x29, #-56]
     974:	sturh	w21, [x29, #-40]
     978:	ldr	x8, [x24]
     97c:	mov	x27, x26
     980:	cmp	x8, x25
     984:	b.eq	d70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8f8>  // b.none
     988:	ldrb	w8, [x24, #16]
     98c:	cmp	w8, #0x10
     990:	b.ls	d78 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x900>  // b.plast
     994:	sub	x3, x29, #0x20
     998:	mov	w0, #0x31                  	// #49
     99c:	mov	x1, x24
     9a0:	mov	x2, x25
     9a4:	mov	x4, xzr
     9a8:	stp	xzr, xzr, [x29, #-32]
     9ac:	sturh	w21, [x29, #-16]
     9b0:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
     9b4:	mov	x1, x0
     9b8:	sub	x2, x29, #0x38
     9bc:	mov	x0, x19
     9c0:	mov	x26, x19
     9c4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     9c8:	b	d90 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x918>
     9cc:	cbz	x21, 10c4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc4c>
     9d0:	ldrb	w8, [x28, #16]
     9d4:	cmp	w8, #0x50
     9d8:	b.ne	fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>  // b.any
     9dc:	ldur	x8, [x28, #-24]
     9e0:	cbz	x8, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     9e4:	ldrb	w9, [x8, #16]
     9e8:	cbnz	w9, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     9ec:	ldrb	w8, [x8, #33]
     9f0:	tbz	w8, #5, fa4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>
     9f4:	ldr	x8, [x23, #120]
     9f8:	cbnz	x8, b94 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x71c>
     9fc:	str	x26, [sp, #32]
     a00:	ldr	x26, [x23, #64]
     a04:	mov	x0, x28
     a08:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
     a0c:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     a10:	mov	x24, x0
     a14:	mov	w2, #0xe                   	// #14
     a18:	mov	x0, x26
     a1c:	add	x1, x1, #0x0
     a20:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
     a24:	mov	w1, wzr
     a28:	mov	x25, x0
     a2c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     a30:	mov	x21, x0
     a34:	mov	x0, x26
     a38:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     a3c:	sub	x1, x29, #0x20
     a40:	mov	w2, #0x1                   	// #1
     a44:	mov	w3, wzr
     a48:	stur	x21, [x29, #-32]
     a4c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     a50:	mov	w1, wzr
     a54:	mov	x21, x0
     a58:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     a5c:	stp	x0, x0, [x29, #-32]
     a60:	sub	x1, x29, #0x20
     a64:	mov	w2, #0x2                   	// #2
     a68:	mov	x0, x25
     a6c:	mov	w3, wzr
     a70:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
     a74:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     a78:	add	x8, x8, #0x0
     a7c:	mov	w19, #0x103                 	// #259
     a80:	mov	w0, #0x78                  	// #120
     a84:	stp	x8, xzr, [x29, #-32]
     a88:	sturh	w19, [x29, #-16]
     a8c:	bl	0 <_ZN4llvm4UsernwEm>
     a90:	sub	x4, x29, #0x20
     a94:	mov	w2, #0x8                   	// #8
     a98:	mov	w3, #0xffffffff            	// #-1
     a9c:	mov	x1, x21
     aa0:	mov	x5, x24
     aa4:	mov	x23, x0
     aa8:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
     aac:	ldrh	w8, [x23, #18]
     ab0:	mov	w0, #0x40                  	// #64
     ab4:	and	w8, w8, #0xffffc00f
     ab8:	orr	w8, w8, #0x80
     abc:	strh	w8, [x23, #18]
     ac0:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     ac4:	add	x8, x8, #0x0
     ac8:	stp	x8, xzr, [x29, #-32]
     acc:	sturh	w19, [x29, #-16]
     ad0:	bl	0 <_Znwm>
     ad4:	sub	x2, x29, #0x20
     ad8:	mov	x1, x26
     adc:	mov	x3, x23
     ae0:	mov	x4, xzr
     ae4:	mov	x21, x0
     ae8:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     aec:	mov	w0, #0x38                  	// #56
     af0:	mov	w1, wzr
     af4:	bl	0 <_ZN4llvm4UsernwEmj>
     af8:	mov	x1, x26
     afc:	ldr	x27, [sp, #32]
     b00:	ldr	x26, [sp, #56]
     b04:	mov	x2, x21
     b08:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
     b0c:	sub	x1, x29, #0x38
     b10:	mov	w2, #0x2                   	// #2
     b14:	mov	x0, x25
     b18:	stp	x23, x23, [x29, #-56]
     b1c:	bl	0 <_ZN4llvm14ConstantStruct3getEPNS_10StructTypeENS_8ArrayRefIPNS_8ConstantEEE>
     b20:	mov	x21, x0
     b24:	mov	w0, #0x58                  	// #88
     b28:	mov	w1, #0x1                   	// #1
     b2c:	bl	0 <_ZN4llvm4UsernwEmj>
     b30:	ldr	x2, [x21]
     b34:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     b38:	add	x8, x8, #0x0
     b3c:	sturh	w19, [x29, #-16]
     b40:	mov	x19, x26
     b44:	mov	x26, x27
     b48:	mov	x27, #0x41                  	// #65
     b4c:	sub	x6, x29, #0x20
     b50:	mov	w3, #0x1                   	// #1
     b54:	mov	w4, #0x8                   	// #8
     b58:	mov	x1, x24
     b5c:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     b60:	mov	x5, x21
     b64:	mov	x7, xzr
     b68:	mov	x23, x0
     b6c:	stp	x8, xzr, [x29, #-32]
     b70:	movk	x27, #0x8, lsl #48
     b74:	strb	wzr, [sp, #16]
     b78:	str	wzr, [sp, #8]
     b7c:	str	wzr, [sp]
     b80:	add	x24, x24, #0x0
     b84:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
     b88:	ldr	x8, [sp, #64]
     b8c:	str	x23, [x8, #120]
     b90:	ldr	x23, [sp, #64]
     b94:	mov	x0, x19
     b98:	mov	x1, x28
     b9c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     ba0:	ldr	x1, [x23, #120]
     ba4:	mov	w8, #0x101                 	// #257
     ba8:	ldr	x2, [x23, #16]
     bac:	stp	xzr, xzr, [x29, #-56]
     bb0:	sturh	w8, [x29, #-40]
     bb4:	ldr	x8, [x1]
     bb8:	cmp	x8, x2
     bbc:	b.eq	e5c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9e4>  // b.none
     bc0:	ldrb	w8, [x1, #16]
     bc4:	cmp	w8, #0x10
     bc8:	b.ls	e4c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9d4>  // b.plast
     bcc:	mov	w8, #0x101                 	// #257
     bd0:	sub	x3, x29, #0x20
     bd4:	mov	w0, #0x31                  	// #49
     bd8:	mov	x4, xzr
     bdc:	stp	xzr, xzr, [x29, #-32]
     be0:	sturh	w8, [x29, #-16]
     be4:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
     be8:	mov	x1, x0
     bec:	sub	x2, x29, #0x38
     bf0:	mov	x0, x19
     bf4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     bf8:	b	e58 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9e0>
     bfc:	cbz	x21, 11c4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd4c>
     c00:	ldrb	w8, [x28, #16]
     c04:	cmp	w8, #0x50
     c08:	b.ne	1064 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbec>  // b.any
     c0c:	ldur	x8, [x28, #-24]
     c10:	cbz	x8, 1064 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbec>
     c14:	ldrb	w9, [x8, #16]
     c18:	cbnz	w9, 1064 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbec>
     c1c:	ldrb	w9, [x8, #33]
     c20:	tbz	w9, #5, 1064 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbec>
     c24:	ldr	w8, [x8, #36]
     c28:	cmp	w8, #0x23
     c2c:	b.ne	1064 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbec>  // b.any
     c30:	mov	w1, #0x1                   	// #1
     c34:	mov	x0, x28
     c38:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c3c:	cbz	x0, 1084 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0c>
     c40:	ldrb	w8, [x0, #16]
     c44:	cmp	w8, #0x11
     c48:	b.cs	10a4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc2c>  // b.hs, b.nlast
     c4c:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     c50:	tbz	w0, #0, c64 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7ec>
     c54:	add	x0, sp, #0x48
     c58:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c5c:	mov	w25, #0x1                   	// #1
     c60:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     c64:	mov	w25, #0x1                   	// #1
     c68:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     c6c:	mov	x0, x26
     c70:	bl	0 <_ZNK4llvm8Function10getContextEv>
     c74:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c78:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c7c:	mov	w2, #0x12                  	// #18
     c80:	mov	w4, #0x1                   	// #1
     c84:	add	x1, x1, #0x0
     c88:	add	x3, x3, #0x0
     c8c:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     c90:	mov	x2, x0
     c94:	mov	w1, #0xffffffff            	// #-1
     c98:	mov	x0, x26
     c9c:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     ca0:	mov	x0, x28
     ca4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     ca8:	ldr	x24, [x28, #8]
     cac:	cbnz	x24, d04 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x88c>
     cb0:	mov	x0, x28
     cb4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     cb8:	ldrb	w8, [x28, #16]
     cbc:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     cc0:	add	x24, x24, #0x0
     cc4:	cmp	w8, #0x50
     cc8:	b.ne	fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>  // b.any
     ccc:	ldur	x8, [x28, #-24]
     cd0:	cbz	x8, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     cd4:	ldrb	w9, [x8, #16]
     cd8:	cbnz	w9, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     cdc:	ldrb	w9, [x8, #33]
     ce0:	tbz	w9, #5, fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>
     ce4:	ldr	w8, [x8, #36]
     ce8:	cmp	w8, #0x18
     cec:	b.ne	fc4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb4c>  // b.any
     cf0:	mov	w25, #0x1                   	// #1
     cf4:	str	x28, [sp, #48]
     cf8:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     cfc:	ldr	x24, [x24, #8]
     d00:	cbz	x24, cb0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x838>
     d04:	mov	x0, x24
     d08:	bl	0 <_ZNK4llvm3Use7getUserEv>
     d0c:	cbz	x0, fe4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb6c>
     d10:	ldrb	w8, [x0, #16]
     d14:	mov	x25, x0
     d18:	cmp	w8, #0x50
     d1c:	b.ne	cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>  // b.any
     d20:	ldur	x8, [x25, #-24]
     d24:	cbz	x8, cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>
     d28:	ldrb	w9, [x8, #16]
     d2c:	cbnz	w9, cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>
     d30:	ldrb	w9, [x8, #33]
     d34:	tbz	w9, #5, cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>
     d38:	ldr	w8, [x8, #36]
     d3c:	cmp	w8, #0x12
     d40:	b.ne	cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>  // b.any
     d44:	ldr	x8, [x25, #56]
     d48:	mov	x0, x25
     d4c:	stur	x8, [x29, #-32]
     d50:	bl	0 <_ZNK4llvm5Value10getContextEv>
     d54:	mov	x1, x0
     d58:	sub	x0, x29, #0x20
     d5c:	mov	w2, #0xffffffff            	// #-1
     d60:	mov	w3, #0x19                  	// #25
     d64:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
     d68:	str	x0, [x25, #56]
     d6c:	b	cfc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x884>
     d70:	mov	x26, x19
     d74:	b	d94 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>
     d78:	mov	w0, #0x31                  	// #49
     d7c:	mov	x1, x24
     d80:	mov	x2, x25
     d84:	mov	w3, wzr
     d88:	mov	x26, x19
     d8c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
     d90:	mov	x24, x0
     d94:	stp	xzr, xzr, [x29, #-56]
     d98:	sturh	w21, [x29, #-40]
     d9c:	ldr	x8, [x24]
     da0:	mov	w19, #0x101                 	// #257
     da4:	ldrb	w9, [x8, #8]
     da8:	cmp	w9, #0xf
     dac:	b.ne	11e4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd6c>  // b.any
     db0:	ldr	x8, [x8, #16]
     db4:	mov	w0, #0x40                  	// #64
     db8:	mov	w1, #0x1                   	// #1
     dbc:	mov	w25, #0x1                   	// #1
     dc0:	ldr	x21, [x8]
     dc4:	bl	0 <_ZN4llvm4UsernwEmj>
     dc8:	sub	x3, x29, #0x20
     dcc:	mov	x1, x21
     dd0:	mov	x2, x24
     dd4:	mov	x4, xzr
     dd8:	mov	x23, x0
     ddc:	stp	xzr, xzr, [x29, #-32]
     de0:	sturh	w19, [x29, #-16]
     de4:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     de8:	sub	x2, x29, #0x38
     dec:	mov	x0, x26
     df0:	mov	x1, x23
     df4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     df8:	ldr	x23, [sp, #64]
     dfc:	mov	x2, x0
     e00:	sub	x4, x29, #0x20
     e04:	mov	w1, #0x20                  	// #32
     e08:	ldr	x3, [x23, #32]
     e0c:	mov	x0, x26
     e10:	stp	xzr, xzr, [x29, #-32]
     e14:	sturh	w19, [x29, #-16]
     e18:	mov	x19, x26
     e1c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     e20:	mov	x1, x0
     e24:	mov	x0, x28
     e28:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     e2c:	mov	x0, x28
     e30:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     e34:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     e38:	mov	x26, x27
     e3c:	mov	x27, #0x41                  	// #65
     e40:	add	x24, x24, #0x0
     e44:	movk	x27, #0x8, lsl #48
     e48:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     e4c:	mov	w0, #0x31                  	// #49
     e50:	mov	w3, wzr
     e54:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
     e58:	mov	x1, x0
     e5c:	mov	x0, x28
     e60:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     e64:	mov	x0, x28
     e68:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     e6c:	mov	w25, #0x1                   	// #1
     e70:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     e74:	ldr	x1, [sp, #40]
     e78:	add	x0, sp, #0x68
     e7c:	mov	w3, #0x8                   	// #8
     e80:	mov	x2, xzr
     e84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     e88:	ldr	w8, [sp, #112]
     e8c:	b	8a8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x430>
     e90:	ldr	x21, [sp, #48]
     e94:	cbz	x21, ec0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa48>
     e98:	ldr	w8, [sp, #112]
     e9c:	cbz	w8, ec0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa48>
     ea0:	ldr	x19, [sp, #104]
     ea4:	lsl	x20, x8, #3
     ea8:	ldr	x0, [x19], #8
     eac:	mov	w1, wzr
     eb0:	mov	x2, x21
     eb4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     eb8:	subs	x20, x20, #0x8
     ebc:	b.ne	ea8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa30>  // b.any
     ec0:	ldr	x0, [sp, #104]
     ec4:	add	x8, sp, #0x68
     ec8:	add	x8, x8, #0x10
     ecc:	cmp	x0, x8
     ed0:	b.eq	ee0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa68>  // b.none
     ed4:	bl	0 <free>
     ed8:	b	ee0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa68>
     edc:	mov	w25, wzr
     ee0:	and	w0, w25, #0x1
     ee4:	ldp	x20, x19, [sp, #288]
     ee8:	ldp	x22, x21, [sp, #272]
     eec:	ldp	x24, x23, [sp, #256]
     ef0:	ldp	x26, x25, [sp, #240]
     ef4:	ldp	x28, x27, [sp, #224]
     ef8:	ldp	x29, x30, [sp, #208]
     efc:	add	sp, sp, #0x130
     f00:	ret
     f04:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f08:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f0c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f10:	add	x0, x0, #0x0
     f14:	add	x1, x1, #0x0
     f18:	add	x3, x3, #0x0
     f1c:	mov	w2, #0x8b                  	// #139
     f20:	bl	0 <__assert_fail>
     f24:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f28:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f2c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f30:	add	x0, x0, #0x0
     f34:	add	x1, x1, #0x0
     f38:	add	x3, x3, #0x0
     f3c:	mov	w2, #0x8b                  	// #139
     f40:	bl	0 <__assert_fail>
     f44:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f48:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f4c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f50:	add	x0, x0, #0x0
     f54:	add	x1, x1, #0x0
     f58:	add	x3, x3, #0x0
     f5c:	mov	w2, #0x108                 	// #264
     f60:	bl	0 <__assert_fail>
     f64:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f68:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f6c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f70:	add	x0, x0, #0x0
     f74:	add	x1, x1, #0x0
     f78:	add	x3, x3, #0x0
     f7c:	mov	w2, #0x69                  	// #105
     f80:	bl	0 <__assert_fail>
     f84:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f88:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f8c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f90:	add	x0, x0, #0x0
     f94:	add	x1, x1, #0x0
     f98:	add	x3, x3, #0x0
     f9c:	mov	w2, #0x69                  	// #105
     fa0:	bl	0 <__assert_fail>
     fa4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fa8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fac:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fb0:	add	x0, x0, #0x0
     fb4:	add	x1, x1, #0x0
     fb8:	add	x3, x3, #0x0
     fbc:	mov	w2, #0x108                 	// #264
     fc0:	bl	0 <__assert_fail>
     fc4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fc8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fcc:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fd0:	add	x0, x0, #0x0
     fd4:	add	x1, x1, #0x0
     fd8:	add	x3, x3, #0x0
     fdc:	mov	w2, #0x108                 	// #264
     fe0:	bl	0 <__assert_fail>
     fe4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fe8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fec:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     ff0:	add	x0, x0, #0x0
     ff4:	add	x1, x1, #0x0
     ff8:	add	x3, x3, #0x0
     ffc:	mov	w2, #0x69                  	// #105
    1000:	bl	0 <__assert_fail>
    1004:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1008:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    100c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1010:	add	x0, x0, #0x0
    1014:	add	x1, x1, #0x0
    1018:	add	x3, x3, #0x0
    101c:	mov	w2, #0x108                 	// #264
    1020:	bl	0 <__assert_fail>
    1024:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1028:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    102c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1030:	add	x0, x0, #0x0
    1034:	add	x1, x1, #0x0
    1038:	add	x3, x3, #0x0
    103c:	mov	w2, #0x108                 	// #264
    1040:	bl	0 <__assert_fail>
    1044:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1048:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    104c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1050:	add	x0, x0, #0x0
    1054:	add	x1, x1, #0x0
    1058:	add	x3, x3, #0x0
    105c:	mov	w2, #0x108                 	// #264
    1060:	bl	0 <__assert_fail>
    1064:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1068:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    106c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1070:	add	x0, x0, #0x0
    1074:	add	x1, x1, #0x0
    1078:	add	x3, x3, #0x0
    107c:	mov	w2, #0x108                 	// #264
    1080:	bl	0 <__assert_fail>
    1084:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1088:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    108c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1090:	add	x0, x0, #0x0
    1094:	add	x1, x1, #0x0
    1098:	add	x3, x3, #0x0
    109c:	mov	w2, #0x69                  	// #105
    10a0:	bl	0 <__assert_fail>
    10a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10b0:	add	x0, x0, #0x0
    10b4:	add	x1, x1, #0x0
    10b8:	add	x3, x3, #0x0
    10bc:	mov	w2, #0x108                 	// #264
    10c0:	bl	0 <__assert_fail>
    10c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10d0:	add	x0, x0, #0x0
    10d4:	add	x1, x1, #0x0
    10d8:	add	x3, x3, #0x0
    10dc:	mov	w2, #0x69                  	// #105
    10e0:	bl	0 <__assert_fail>
    10e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10f0:	add	x0, x0, #0x0
    10f4:	add	x1, x1, #0x0
    10f8:	add	x3, x3, #0x0
    10fc:	mov	w2, #0x69                  	// #105
    1100:	bl	0 <__assert_fail>
    1104:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1108:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    110c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1110:	add	x0, x0, #0x0
    1114:	add	x1, x1, #0x0
    1118:	add	x3, x3, #0x0
    111c:	mov	w2, #0x260                 	// #608
    1120:	bl	0 <__assert_fail>
    1124:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1128:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    112c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1130:	add	x0, x0, #0x0
    1134:	add	x1, x1, #0x0
    1138:	add	x3, x3, #0x0
    113c:	mov	w2, #0x2ce                 	// #718
    1140:	bl	0 <__assert_fail>
    1144:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1148:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    114c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1150:	add	x0, x0, #0x0
    1154:	add	x1, x1, #0x0
    1158:	add	x3, x3, #0x0
    115c:	mov	w2, #0x69                  	// #105
    1160:	bl	0 <__assert_fail>
    1164:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1168:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    116c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1170:	add	x0, x0, #0x0
    1174:	add	x1, x1, #0x0
    1178:	add	x3, x3, #0x0
    117c:	mov	w2, #0x69                  	// #105
    1180:	bl	0 <__assert_fail>
    1184:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1188:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    118c:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1190:	add	x0, x0, #0x0
    1194:	add	x1, x1, #0x0
    1198:	add	x3, x3, #0x0
    119c:	mov	w2, #0x69                  	// #105
    11a0:	bl	0 <__assert_fail>
    11a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11b0:	add	x0, x0, #0x0
    11b4:	add	x1, x1, #0x0
    11b8:	add	x3, x3, #0x0
    11bc:	mov	w2, #0x43                  	// #67
    11c0:	bl	0 <__assert_fail>
    11c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11d0:	add	x0, x0, #0x0
    11d4:	add	x1, x1, #0x0
    11d8:	add	x3, x3, #0x0
    11dc:	mov	w2, #0x69                  	// #105
    11e0:	bl	0 <__assert_fail>
    11e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11f0:	add	x0, x0, #0x0
    11f4:	add	x1, x1, #0x0
    11f8:	add	x3, x3, #0x0
    11fc:	mov	w2, #0x17e                 	// #382
    1200:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	and	x8, x9, #0x6
  14:	cmp	x8, #0x4
  18:	and	x19, x9, #0xfffffffffffffff8
  1c:	b.eq	58 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x58>  // b.none
  20:	cmp	x8, #0x2
  24:	b.ne	88 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x88>  // b.any
  28:	cbz	x19, cc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xcc>
  2c:	ldrb	w8, [x19, #16]
  30:	cmp	w8, #0x50
  34:	b.eq	98 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x98>  // b.none
  38:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  3c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  40:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>
  58:	cbz	x19, ec <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xec>
  5c:	ldrb	w8, [x19, #16]
  60:	cmp	w8, #0x23
  64:	b.eq	98 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x98>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  6c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  70:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x108                 	// #264
  84:	bl	0 <__assert_fail>
  88:	cbz	x19, 10c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x10c>
  8c:	ldrb	w8, [x19, #16]
  90:	cmp	w8, #0x1d
  94:	b.ne	12c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x12c>  // b.any
  98:	ldr	x8, [x19, #56]
  9c:	mov	x0, x19
  a0:	str	x8, [x29, #24]
  a4:	bl	0 <_ZNK4llvm5Value10getContextEv>
  a8:	mov	x1, x0
  ac:	add	x0, x29, #0x18
  b0:	mov	w2, #0xffffffff            	// #-1
  b4:	mov	w3, #0x19                  	// #25
  b8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  bc:	str	x0, [x19, #56]
  c0:	ldr	x19, [sp, #16]
  c4:	ldp	x29, x30, [sp], #32
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 110:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 114:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 130:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 134:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x108                 	// #264
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, e0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe0>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa0>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	120 <_ZNK4llvm10CoroIdInst7getInfoEv+0x120>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 158 <_ZNK4llvm10CoroIdInst7getInfoEv+0x158>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, ac <_ZNK4llvm10CoroIdInst7getInfoEv+0xac>
  98:	mov	x1, xzr
  9c:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  a0:	mov	x0, xzr
  a4:	mov	x1, xzr
  a8:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  ac:	cmp	w8, #0x6
  b0:	b.ne	178 <_ZNK4llvm10CoroIdInst7getInfoEv+0x178>  // b.any
  b4:	ldr	x19, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret
  c0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xa8                  	// #168
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x69                  	// #105
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x108                 	// #264
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	mov	w2, #0x16d                 	// #365
 134:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x8d                  	// #141
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 15c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x69                  	// #105
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 17c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x108                 	// #264
 194:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10CoroIdInst16setCoroutineSelfEv:

0000000000000000 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x2                   	// #2
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  18:	cbz	x0, 68 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x68>
  1c:	ldrb	w8, [x0, #16]
  20:	cmp	w8, #0xf
  24:	b.ne	88 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x88>  // b.any
  28:	mov	x0, x19
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	w1, wzr
  34:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  44:	mov	x1, x20
  48:	mov	w2, wzr
  4c:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
  50:	mov	x2, x0
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #16]
  5c:	mov	w1, #0x2                   	// #2
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  68:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  6c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  70:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  8c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  90:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xbb                  	// #187
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 80 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x80>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	6c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x6c>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x54>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	tst	x0, #0x7
  58:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  5c:	and	x8, x0, #0xfffffffffffffff9
  60:	orr	x0, x8, #0x4
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	tst	x0, #0x7
  70:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  74:	and	x0, x0, #0xfffffffffffffff9
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  84:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  88:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x69                  	// #105
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0xb3                  	// #179
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	98 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x98>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	7c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x7c>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 80 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x80>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	b	8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  7c:	ldr	x1, [x29, #24]
  80:	cbz	x1, 8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  84:	add	x0, x29, #0x18
  88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  9c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a0:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x8e                  	// #142
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	and	x8, x9, #0x6
  10:	cmp	x8, #0x4
  14:	and	x0, x9, #0xfffffffffffffff8
  18:	b.eq	54 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x54>  // b.none
  1c:	cmp	x8, #0x2
  20:	b.ne	84 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x84>  // b.any
  24:	cbz	x0, 9c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x9c>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.eq	94 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x0, bc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xbc>
  58:	ldrb	w8, [x0, #16]
  5c:	cmp	w8, #0x23
  60:	b.eq	94 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  6c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x0, dc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xdc>
  88:	ldrb	w8, [x0, #16]
  8c:	cmp	w8, #0x1d
  90:	b.ne	fc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xfc>  // b.any
  94:	ldp	x29, x30, [sp], #16
  98:	b	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  9c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ands	x8, x8, #0xfffffffffffffff8
  10:	b.eq	118 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x118>  // b.none
  14:	ldr	x9, [x1]
  18:	cbz	x9, 138 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x138>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0xf
  24:	b.ne	158 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x158>  // b.any
  28:	ldrb	w10, [x8, #16]
  2c:	sub	w10, w10, #0x1d
  30:	cmp	w10, #0x33
  34:	b.hi	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.pmore
  38:	mov	w11, #0x1                   	// #1
  3c:	mov	x12, #0x41                  	// #65
  40:	lsl	x11, x11, x10
  44:	movk	x12, #0x8, lsl #48
  48:	tst	x11, x12
  4c:	b.eq	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.none
  50:	ldr	x9, [x9, #24]
  54:	ldr	x11, [x8, #64]
  58:	cmp	x9, x11
  5c:	b.ne	178 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x178>  // b.any
  60:	cmp	w10, #0x33
  64:	b.hi	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.pmore
  68:	mov	w9, #0x1                   	// #1
  6c:	lsl	x9, x9, x10
  70:	mov	x10, #0x41                  	// #65
  74:	movk	x10, #0x8, lsl #48
  78:	tst	x9, x10
  7c:	b.eq	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.none
  80:	mov	x9, x8
  84:	ldr	x10, [x9, #-24]!
  88:	cbz	x10, b0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xb0>
  8c:	ldp	x11, x10, [x8, #-16]
  90:	and	x10, x10, #0xfffffffffffffffc
  94:	str	x11, [x10]
  98:	ldur	x11, [x8, #-16]
  9c:	cbz	x11, b0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xb0>
  a0:	ldr	x12, [x11, #16]
  a4:	and	x12, x12, #0x3
  a8:	orr	x10, x12, x10
  ac:	str	x10, [x11, #16]
  b0:	stur	x1, [x8, #-24]
  b4:	ldr	x10, [x1, #8]!
  b8:	mov	x11, x8
  bc:	str	x10, [x11, #-16]!
  c0:	cbz	x10, d4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xd4>
  c4:	ldr	x12, [x10, #16]
  c8:	and	x12, x12, #0x3
  cc:	orr	x11, x12, x11
  d0:	str	x11, [x10, #16]
  d4:	tst	x1, #0x3
  d8:	b.ne	198 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x198>  // b.any
  dc:	ldur	x10, [x8, #-8]
  e0:	and	x10, x10, #0x3
  e4:	orr	x10, x10, x1
  e8:	stur	x10, [x8, #-8]
  ec:	str	x9, [x1]
  f0:	ldp	x29, x30, [sp], #16
  f4:	ret
  f8:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  fc:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 100:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 11c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 120:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x83                  	// #131
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 13c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 140:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 15c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 160:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x108                 	// #264
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 17c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 180:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x86                  	// #134
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 19c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 1a0:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0xb3                  	// #179
 1b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	and	x9, x8, #0x6
  10:	cmp	x9, #0x4
  14:	and	x8, x8, #0xfffffffffffffff8
  18:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x54>  // b.none
  1c:	cmp	x9, #0x2
  20:	b.ne	84 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x84>  // b.any
  24:	cbz	x8, 104 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x104>
  28:	ldrb	w9, [x8, #16]
  2c:	cmp	w9, #0x50
  30:	b.eq	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  38:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  3c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x8, 124 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x124>
  58:	ldrb	w9, [x8, #16]
  5c:	cmp	w9, #0x23
  60:	b.eq	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  68:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  6c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x8, 144 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x144>
  88:	ldrb	w9, [x8, #16]
  8c:	cmp	w9, #0x1d
  90:	b.ne	164 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x164>  // b.any
  94:	cmp	w1, #0x400
  98:	b.cs	c4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xc4>  // b.hs, b.nlast
  9c:	ldrh	w9, [x8, #18]!
  a0:	mov	w10, w9
  a4:	bfi	w10, w1, #2, #30
  a8:	sxth	w10, w10
  ac:	tbnz	w10, #31, e4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xe4>
  b0:	and	w9, w9, #0x8000
  b4:	orr	w9, w10, w9
  b8:	strh	w9, [x8]
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  c8:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  cc:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x558                 	// #1368
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  e8:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  ec:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x2fd                 	// #765
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 108:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 10c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 128:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 12c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x69                  	// #105
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 148:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 14c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x69                  	// #105
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 168:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 16c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x108                 	// #264
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroPromiseInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	w0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x4
  24:	mov	w23, w3
  28:	mov	x20, x2
  2c:	mov	x22, x1
  30:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  34:	mov	w1, w23
  38:	mov	w2, wzr
  3c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  40:	str	x0, [x29, #24]
  44:	cbz	x20, d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xd4>
  48:	ldrb	w8, [x20, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	9c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0x9c>  // b.plast
  54:	mov	w8, #0x101                 	// #257
  58:	add	x2, x29, #0x18
  5c:	add	x4, sp, #0x8
  60:	mov	w3, #0x1                   	// #1
  64:	mov	x0, x22
  68:	mov	x1, x20
  6c:	mov	x5, xzr
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  7c:	mov	w1, #0x1                   	// #1
  80:	mov	x20, x0
  84:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  88:	mov	x0, x21
  8c:	mov	x1, x20
  90:	mov	x2, x19
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  98:	b	bc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xbc>
  9c:	add	x2, x29, #0x18
  a0:	mov	w3, #0x1                   	// #1
  a4:	mov	w4, #0x1                   	// #1
  a8:	mov	x0, x22
  ac:	mov	x1, x20
  b0:	mov	x5, xzr
  b4:	mov	x6, xzr
  b8:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  bc:	ldp	x20, x19, [sp, #80]
  c0:	ldp	x22, x21, [sp, #64]
  c4:	ldr	x23, [sp, #48]
  c8:	ldp	x29, x30, [sp, #32]
  cc:	add	sp, sp, #0x60
  d0:	ret
  d4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  d8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  dc:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 12c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x12c>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x69                  	// #105
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x21, x2
  2c:	mov	w23, w1
  30:	mov	x22, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x20, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  40:	ldrb	w8, [x20, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xa4>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	mov	w8, #0x101                 	// #257
  5c:	add	x4, sp, #0x8
  60:	mov	w1, w23
  64:	mov	x2, x21
  68:	mov	x3, x20
  6c:	mov	x24, x0
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  7c:	mov	x0, x22
  80:	mov	x1, x24
  84:	mov	x2, x19
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  8c:	ldp	x20, x19, [sp, #80]
  90:	ldp	x22, x21, [sp, #64]
  94:	ldp	x24, x23, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x60
  a0:	ret
  a4:	mov	w0, w23
  a8:	mov	x1, x21
  ac:	mov	x2, x20
  b0:	ldp	x20, x19, [sp, #80]
  b4:	ldp	x22, x21, [sp, #64]
  b8:	ldp	x24, x23, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w3, wzr
  c4:	add	sp, sp, #0x60
  c8:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  cc:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x24, [x2]
  20:	cbz	x24, b8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xb8>
  24:	mov	x20, x0
  28:	ldr	x0, [x24]
  2c:	ldrb	w25, [x24, #8]
  30:	mov	x19, x4
  34:	mov	x21, x3
  38:	mov	x22, x2
  3c:	mov	w23, w1
  40:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  44:	cmp	w25, #0x10
  48:	mov	x3, x0
  4c:	b.ne	70 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0x70>  // b.any
  50:	ldr	x8, [x24, #32]
  54:	lsr	x9, x8, #32
  58:	cbnz	x9, d8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xd8>
  5c:	ldrb	w9, [x24, #40]
  60:	mov	x0, x3
  64:	orr	x1, x8, x9, lsl #32
  68:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  6c:	mov	x3, x0
  70:	mov	w2, #0x35                  	// #53
  74:	mov	x0, x20
  78:	mov	x1, x3
  7c:	mov	w3, w23
  80:	mov	x4, x22
  84:	mov	x5, x21
  88:	mov	x6, x19
  8c:	mov	x7, xzr
  90:	str	xzr, [sp]
  94:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  98:	mov	x0, x20
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  b8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  bc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  dc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x220                 	// #544
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroElide.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroElideLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	bl	0 <_ZN4llvm34initializeAAResultsWrapperPassPassERNS_12PassRegistryE>
      a4:	mov	w0, #0x50                  	// #80
      a8:	bl	0 <_Znwm>
      ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      b0:	add	x8, x8, #0x0
      b4:	mov	w9, #0x41                  	// #65
      b8:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      bc:	add	x10, x10, #0x0
      c0:	stp	x8, x9, [x0]
      c4:	mov	w8, #0xa                   	// #10
      c8:	stp	x10, x8, [x0, #16]
      cc:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      d0:	add	x8, x8, #0x0
      d4:	str	x8, [x0, #32]
      d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      dc:	mov	x20, x0
      e0:	add	x8, x8, #0x0
      e4:	strh	wzr, [x0, #40]
      e8:	strb	wzr, [x0, #42]
      ec:	stp	xzr, xzr, [x0, #48]
      f0:	stp	xzr, x8, [x0, #64]
      f4:	mov	w2, #0x1                   	// #1
      f8:	mov	x0, x19
      fc:	mov	x1, x20
     100:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     104:	mov	x0, x20
     108:	ldp	x20, x19, [sp, #16]
     10c:	ldp	x29, x30, [sp], #32
     110:	ret

0000000000000114 <_ZN4llvm25createCoroElideLegacyPassEv>:
     114:	sub	sp, sp, #0x30
     118:	stp	x29, x30, [sp, #16]
     11c:	str	x19, [sp, #32]
     120:	add	x29, sp, #0x10
     124:	mov	w0, #0x28                  	// #40
     128:	bl	0 <_Znwm>
     12c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     130:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     134:	add	x8, x8, #0x0
     138:	mov	w9, #0x2                   	// #2
     13c:	add	x10, x10, #0x0
     140:	mov	x19, x0
     144:	stp	xzr, x8, [x0, #8]
     148:	str	w9, [x0, #24]
     14c:	str	x10, [x0]
     150:	str	xzr, [x0, #32]
     154:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     158:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     15c:	add	x8, x8, #0x0
     160:	add	x9, x29, #0x18
     164:	str	x0, [x29, #24]
     168:	stp	x8, x9, [sp]
     16c:	adrp	x0, 0 <_ZSt15__once_callable>
     170:	ldr	x1, [x0]
     174:	add	x0, x0, #0x0
     178:	blr	x1
     17c:	mrs	x8, tpidr_el0
     180:	mov	x9, sp
     184:	str	x9, [x8, x0]
     188:	adrp	x0, 0 <_ZSt11__once_call>
     18c:	ldr	x1, [x0]
     190:	add	x0, x0, #0x0
     194:	blr	x1
     198:	adrp	x10, 0 <__pthread_key_create>
     19c:	ldr	x10, [x10]
     1a0:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1a4:	add	x9, x9, #0x0
     1a8:	str	x9, [x8, x0]
     1ac:	cbz	x10, 1dc <_ZN4llvm25createCoroElideLegacyPassEv+0xc8>
     1b0:	adrp	x1, 0 <__once_proxy>
     1b4:	ldr	x1, [x1]
     1b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1bc:	add	x0, x0, #0x0
     1c0:	bl	0 <pthread_once>
     1c4:	cbnz	w0, 1e0 <_ZN4llvm25createCoroElideLegacyPassEv+0xcc>
     1c8:	mov	x0, x19
     1cc:	ldr	x19, [sp, #32]
     1d0:	ldp	x29, x30, [sp, #16]
     1d4:	add	sp, sp, #0x30
     1d8:	ret
     1dc:	mov	w0, #0xffffffff            	// #-1
     1e0:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e4 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv>:
     1e4:	sub	sp, sp, #0x30
     1e8:	stp	x29, x30, [sp, #16]
     1ec:	str	x19, [sp, #32]
     1f0:	add	x29, sp, #0x10
     1f4:	mov	w0, #0x28                  	// #40
     1f8:	bl	0 <_Znwm>
     1fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     200:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     204:	add	x8, x8, #0x0
     208:	mov	w9, #0x2                   	// #2
     20c:	add	x10, x10, #0x0
     210:	mov	x19, x0
     214:	stp	xzr, x8, [x0, #8]
     218:	str	w9, [x0, #24]
     21c:	str	x10, [x0]
     220:	str	xzr, [x0, #32]
     224:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     228:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     22c:	add	x8, x8, #0x0
     230:	add	x9, x29, #0x18
     234:	str	x0, [x29, #24]
     238:	stp	x8, x9, [sp]
     23c:	adrp	x0, 0 <_ZSt15__once_callable>
     240:	ldr	x1, [x0]
     244:	add	x0, x0, #0x0
     248:	blr	x1
     24c:	mrs	x8, tpidr_el0
     250:	mov	x9, sp
     254:	str	x9, [x8, x0]
     258:	adrp	x0, 0 <_ZSt11__once_call>
     25c:	ldr	x1, [x0]
     260:	add	x0, x0, #0x0
     264:	blr	x1
     268:	adrp	x10, 0 <__pthread_key_create>
     26c:	ldr	x10, [x10]
     270:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     274:	add	x9, x9, #0x0
     278:	str	x9, [x8, x0]
     27c:	cbz	x10, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv+0xc8>
     280:	adrp	x1, 0 <__once_proxy>
     284:	ldr	x1, [x1]
     288:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     28c:	add	x0, x0, #0x0
     290:	bl	0 <pthread_once>
     294:	cbnz	w0, 2b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv+0xcc>
     298:	mov	x0, x19
     29c:	ldr	x19, [sp, #32]
     2a0:	ldp	x29, x30, [sp, #16]
     2a4:	add	sp, sp, #0x30
     2a8:	ret
     2ac:	mov	w0, #0xffffffff            	// #-1
     2b0:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b4 <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev>:
     2b4:	stp	x29, x30, [sp, #-32]!
     2b8:	str	x19, [sp, #16]
     2bc:	mov	x29, sp
     2c0:	mov	x19, x0
     2c4:	ldr	x0, [x0, #32]
     2c8:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     2cc:	add	x8, x8, #0x0
     2d0:	str	x8, [x19]
     2d4:	cbz	x0, 2dc <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev+0x28>
     2d8:	bl	19d0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     2dc:	str	xzr, [x19, #32]
     2e0:	mov	x0, x19
     2e4:	ldr	x19, [sp, #16]
     2e8:	ldp	x29, x30, [sp], #32
     2ec:	b	0 <_ZN4llvm4PassD2Ev>

00000000000002f0 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev>:
     2f0:	stp	x29, x30, [sp, #-32]!
     2f4:	str	x19, [sp, #16]
     2f8:	mov	x29, sp
     2fc:	mov	x19, x0
     300:	ldr	x0, [x0, #32]
     304:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     308:	add	x8, x8, #0x0
     30c:	str	x8, [x19]
     310:	cbz	x0, 318 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev+0x28>
     314:	bl	19d0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     318:	mov	x0, x19
     31c:	str	xzr, [x19, #32]
     320:	bl	0 <_ZN4llvm4PassD2Ev>
     324:	mov	x0, x19
     328:	ldr	x19, [sp, #16]
     32c:	ldp	x29, x30, [sp], #32
     330:	b	0 <_ZdlPv>

0000000000000334 <_ZNK12_GLOBAL__N_115CoroElideLegacy11getPassNameEv>:
     334:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     338:	add	x0, x0, #0x0
     33c:	mov	w1, #0x11                  	// #17
     340:	ret

0000000000000344 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE>:
     344:	sub	sp, sp, #0x40
     348:	stp	x29, x30, [sp, #16]
     34c:	str	x21, [sp, #32]
     350:	stp	x20, x19, [sp, #48]
     354:	add	x29, sp, #0x10
     358:	mov	x20, x1
     35c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     360:	mov	x19, x0
     364:	add	x8, x8, #0x0
     368:	mov	w9, #0xc                   	// #12
     36c:	mov	x1, sp
     370:	mov	w2, #0x1                   	// #1
     374:	mov	x0, x20
     378:	stp	x8, x9, [sp]
     37c:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     380:	tbz	w0, #0, 400 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     384:	mov	w0, #0x100                 	// #256
     388:	bl	0 <_Znwm>
     38c:	mov	x1, x20
     390:	mov	x21, x0
     394:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
     398:	add	x8, x21, #0x38
     39c:	str	x8, [x21, #40]
     3a0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     3a4:	ldr	d0, [x8]
     3a8:	add	x8, x21, #0x68
     3ac:	str	x8, [x21, #88]
     3b0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     3b4:	ldr	d1, [x8]
     3b8:	add	x8, x21, #0x80
     3bc:	str	x8, [x21, #112]
     3c0:	add	x8, x21, #0x98
     3c4:	str	x8, [x21, #136]
     3c8:	add	x8, x21, #0xc8
     3cc:	str	x8, [x21, #184]
     3d0:	add	x8, x21, #0xf8
     3d4:	str	x8, [x21, #232]
     3d8:	str	d0, [x21, #48]
     3dc:	str	d1, [x21, #96]
     3e0:	str	d1, [x21, #120]
     3e4:	str	d0, [x21, #144]
     3e8:	str	d0, [x21, #192]
     3ec:	str	d1, [x21, #240]
     3f0:	ldr	x0, [x19, #32]
     3f4:	str	x21, [x19, #32]
     3f8:	cbz	x0, 400 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     3fc:	bl	19d0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     400:	ldp	x20, x19, [sp, #48]
     404:	ldr	x21, [sp, #32]
     408:	ldp	x29, x30, [sp, #16]
     40c:	mov	w0, wzr
     410:	add	sp, sp, #0x40
     414:	ret

0000000000000418 <_ZNK12_GLOBAL__N_115CoroElideLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     418:	stp	x29, x30, [sp, #-32]!
     41c:	str	x19, [sp, #16]
     420:	mov	x29, sp
     424:	mov	x19, x1
     428:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     42c:	ldr	x1, [x1]
     430:	mov	x0, x19
     434:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     438:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     43c:	ldr	x1, [x1]
     440:	mov	x0, x19
     444:	ldr	x19, [sp, #16]
     448:	ldp	x29, x30, [sp], #32
     44c:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>

0000000000000450 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE>:
     450:	sub	sp, sp, #0x1f0
     454:	stp	d9, d8, [sp, #384]
     458:	stp	x29, x30, [sp, #400]
     45c:	stp	x28, x27, [sp, #416]
     460:	stp	x26, x25, [sp, #432]
     464:	stp	x24, x23, [sp, #448]
     468:	stp	x22, x21, [sp, #464]
     46c:	stp	x20, x19, [sp, #480]
     470:	add	x29, sp, #0x180
     474:	ldr	x8, [x0, #32]
     478:	cbz	x8, 4f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa4>
     47c:	mov	x21, x0
     480:	mov	x20, x1
     484:	add	x0, x1, #0x70
     488:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     48c:	add	x1, x1, #0x0
     490:	mov	w2, #0x12                  	// #18
     494:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     498:	str	x21, [sp, #48]
     49c:	tbz	w0, #0, 4fc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xac>
     4a0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     4a4:	ldr	d0, [x8]
     4a8:	add	x8, sp, #0x60
     4ac:	add	x21, x8, #0x10
     4b0:	sub	x0, x29, #0x70
     4b4:	mov	x1, x20
     4b8:	str	x21, [sp, #96]
     4bc:	str	d0, [sp, #104]
     4c0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     4c4:	ldp	x22, x24, [x29, #-112]
     4c8:	ldur	x25, [x29, #-96]
     4cc:	add	x23, x20, #0x48
     4d0:	cmp	x22, x23
     4d4:	cset	w8, ne  // ne = any
     4d8:	cmp	x25, #0x0
     4dc:	cset	w9, ne  // ne = any
     4e0:	cmp	x23, x24
     4e4:	b.ne	520 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd0>  // b.any
     4e8:	and	w8, w8, w9
     4ec:	cbz	w8, 60c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1bc>
     4f0:	b	520 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd0>
     4f4:	mov	w22, wzr
     4f8:	b	15c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1178>
     4fc:	mov	w22, wzr
     500:	b	6e0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x290>
     504:	add	x0, sp, #0x60
     508:	mov	w3, #0x8                   	// #8
     50c:	mov	x1, x21
     510:	mov	x2, xzr
     514:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     518:	ldr	w8, [sp, #104]
     51c:	b	584 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x134>
     520:	ldrb	w8, [x25]
     524:	tbnz	w8, #2, 16a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1258>
     528:	sub	x8, x25, #0x18
     52c:	cmp	x25, #0x0
     530:	csel	x19, xzr, x8, eq  // eq = none
     534:	cbz	x25, 1800 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13b0>
     538:	ldrb	w8, [x19, #16]
     53c:	cmp	w8, #0x50
     540:	b.ne	5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>  // b.any
     544:	ldur	x8, [x19, #-24]
     548:	cbz	x8, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>
     54c:	ldrb	w9, [x8, #16]
     550:	cbnz	w9, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>
     554:	ldrb	w9, [x8, #33]
     558:	tbz	w9, #5, 5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>
     55c:	ldr	w8, [x8, #36]
     560:	cmp	w8, #0x22
     564:	b.ne	5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>  // b.any
     568:	mov	x0, x19
     56c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     570:	cmn	w0, #0x1
     574:	b.ne	5a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x150>  // b.any
     578:	ldp	w8, w9, [sp, #104]
     57c:	cmp	w8, w9
     580:	b.cs	504 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb4>  // b.hs, b.nlast
     584:	ldr	x9, [sp, #96]
     588:	str	x19, [x9, w8, uxtw #3]
     58c:	ldp	w8, w9, [sp, #104]
     590:	cmp	w8, w9
     594:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     598:	add	w8, w8, #0x1
     59c:	str	w8, [sp, #104]
     5a0:	ldrb	w8, [x24]
     5a4:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
     5a8:	ldr	x25, [x25, #8]
     5ac:	sub	x8, x24, #0x18
     5b0:	cmp	x24, #0x0
     5b4:	csel	x8, xzr, x8, eq  // eq = none
     5b8:	add	x8, x8, #0x28
     5bc:	cmp	x8, x25
     5c0:	b.ne	5ec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x19c>  // b.any
     5c4:	ldr	x24, [x24, #8]
     5c8:	cmp	x22, x24
     5cc:	b.eq	5ec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x19c>  // b.none
     5d0:	ldrb	w8, [x24]
     5d4:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
     5d8:	sub	x8, x24, #0x18
     5dc:	cmp	x24, #0x0
     5e0:	csel	x8, xzr, x8, eq  // eq = none
     5e4:	ldr	x25, [x8, #48]
     5e8:	b	5b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x168>
     5ec:	cmp	x22, x23
     5f0:	cset	w8, ne  // ne = any
     5f4:	cmp	x25, #0x0
     5f8:	cset	w9, ne  // ne = any
     5fc:	cmp	x23, x24
     600:	b.ne	520 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd0>  // b.any
     604:	and	w8, w8, w9
     608:	tbnz	w8, #0, 520 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd0>
     60c:	ldr	w8, [sp, #104]
     610:	cbz	w8, 6b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x268>
     614:	ldr	x0, [x20, #40]
     618:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     61c:	add	x1, x1, #0x0
     620:	mov	w2, #0x13                  	// #19
     624:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     628:	ldr	x21, [sp, #48]
     62c:	cbz	x0, 1990 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1540>
     630:	ldr	w8, [sp, #104]
     634:	cbz	w8, 6c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x274>
     638:	ldr	x21, [sp, #96]
     63c:	mov	x19, x0
     640:	ldr	x9, [x21]
     644:	ldr	x1, [x9]
     648:	ldr	x9, [x0]
     64c:	cmp	x9, x1
     650:	b.eq	688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x238>  // b.none
     654:	ldrb	w8, [x9, #8]
     658:	cmp	w8, #0xf
     65c:	b.ne	19b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1560>  // b.any
     660:	ldrb	w8, [x1, #8]
     664:	cmp	w8, #0xf
     668:	b.ne	19b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1560>  // b.any
     66c:	mov	x0, x19
     670:	mov	w2, wzr
     674:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
     678:	ldr	w8, [sp, #104]
     67c:	cbz	w8, 6b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x260>
     680:	ldr	x21, [sp, #96]
     684:	mov	x19, x0
     688:	add	x22, x21, x8, lsl #3
     68c:	ldr	x0, [x21], #8
     690:	mov	x1, x19
     694:	mov	x2, xzr
     698:	mov	x3, xzr
     69c:	mov	x4, xzr
     6a0:	mov	x5, xzr
     6a4:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
     6a8:	cmp	x22, x21
     6ac:	b.ne	68c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x23c>  // b.any
     6b0:	mov	w22, #0x1                   	// #1
     6b4:	b	6bc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x26c>
     6b8:	mov	w22, wzr
     6bc:	ldr	x21, [sp, #48]
     6c0:	b	6c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x278>
     6c4:	mov	w22, #0x1                   	// #1
     6c8:	ldr	x0, [sp, #96]
     6cc:	add	x8, sp, #0x60
     6d0:	add	x8, x8, #0x10
     6d4:	cmp	x0, x8
     6d8:	b.eq	6e0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x290>  // b.none
     6dc:	bl	0 <free>
     6e0:	ldr	x8, [x21, #32]
     6e4:	sub	x0, x29, #0x70
     6e8:	mov	x1, x20
     6ec:	str	wzr, [x8, #48]
     6f0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     6f4:	ldp	x21, x24, [x29, #-112]
     6f8:	ldur	x25, [x29, #-96]
     6fc:	add	x23, x20, #0x48
     700:	cmp	x21, x23
     704:	cset	w8, ne  // ne = any
     708:	cmp	x25, #0x0
     70c:	cset	w9, ne  // ne = any
     710:	cmp	x23, x24
     714:	b.ne	740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>  // b.any
     718:	and	w8, w8, w9
     71c:	cbz	w8, 860 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x410>
     720:	b	740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>
     724:	add	x0, x20, #0x28
     728:	add	x1, x0, #0x10
     72c:	mov	w3, #0x8                   	// #8
     730:	mov	x2, xzr
     734:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     738:	ldr	w8, [x20, #48]
     73c:	b	7d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x388>
     740:	ldrb	w8, [x25]
     744:	tbnz	w8, #2, 16a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1258>
     748:	sub	x8, x25, #0x18
     74c:	cmp	x25, #0x0
     750:	csel	x19, xzr, x8, eq  // eq = none
     754:	cbz	x25, 1760 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1310>
     758:	ldrb	w8, [x19, #16]
     75c:	cmp	w8, #0x50
     760:	b.ne	7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>  // b.any
     764:	ldur	x8, [x19, #-24]
     768:	cbz	x8, 7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
     76c:	ldrb	w9, [x8, #16]
     770:	cbnz	w9, 7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
     774:	ldrb	w9, [x8, #33]
     778:	tbz	w9, #5, 7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
     77c:	ldr	w8, [x8, #36]
     780:	cmp	w8, #0x18
     784:	b.ne	7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>  // b.any
     788:	mov	x0, x19
     78c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     790:	cbz	x1, 7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
     794:	mov	w1, #0x2                   	// #2
     798:	mov	x0, x19
     79c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     7a0:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     7a4:	cbz	x0, 1910 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14c0>
     7a8:	ldrb	w8, [x0, #16]
     7ac:	mov	x20, x0
     7b0:	cbnz	w8, 1930 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14e0>
     7b4:	mov	x0, x19
     7b8:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     7bc:	cmp	x0, x20
     7c0:	b.eq	7f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>  // b.none
     7c4:	ldr	x8, [sp, #48]
     7c8:	ldr	x20, [x8, #32]
     7cc:	ldp	w8, w9, [x20, #48]
     7d0:	cmp	w8, w9
     7d4:	b.cs	724 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2d4>  // b.hs, b.nlast
     7d8:	ldr	x9, [x20, #40]
     7dc:	str	x19, [x9, w8, uxtw #3]
     7e0:	ldp	w8, w9, [x20, #48]
     7e4:	cmp	w8, w9
     7e8:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     7ec:	add	w8, w8, #0x1
     7f0:	str	w8, [x20, #48]
     7f4:	ldrb	w8, [x24]
     7f8:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
     7fc:	ldr	x25, [x25, #8]
     800:	sub	x8, x24, #0x18
     804:	cmp	x24, #0x0
     808:	csel	x8, xzr, x8, eq  // eq = none
     80c:	add	x8, x8, #0x28
     810:	cmp	x8, x25
     814:	b.ne	840 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3f0>  // b.any
     818:	ldr	x24, [x24, #8]
     81c:	cmp	x21, x24
     820:	b.eq	840 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3f0>  // b.none
     824:	ldrb	w8, [x24]
     828:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
     82c:	sub	x8, x24, #0x18
     830:	cmp	x24, #0x0
     834:	csel	x8, xzr, x8, eq  // eq = none
     838:	ldr	x25, [x8, #48]
     83c:	b	80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>
     840:	cmp	x21, x23
     844:	cset	w8, ne  // ne = any
     848:	cmp	x25, #0x0
     84c:	cset	w9, ne  // ne = any
     850:	cmp	x23, x24
     854:	b.ne	740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>  // b.any
     858:	and	w8, w8, w9
     85c:	tbnz	w8, #0, 740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>
     860:	ldr	x19, [sp, #48]
     864:	ldr	x8, [x19, #32]
     868:	ldr	w8, [x8, #48]
     86c:	cbz	w8, 15c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1178>
     870:	ldr	x9, [x19, #8]
     874:	cbz	x9, 1950 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1500>
     878:	ldr	x8, [x9]
     87c:	ldr	x9, [x9, #8]
     880:	cmp	x8, x9
     884:	b.eq	18d0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1480>  // b.none
     888:	adrp	x10, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     88c:	ldr	x10, [x10]
     890:	mov	x0, xzr
     894:	ldp	x11, x12, [x8]
     898:	cmp	x11, x10
     89c:	csel	x0, x12, x0, eq  // eq = none
     8a0:	b.eq	8b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x460>  // b.none
     8a4:	add	x8, x8, #0x10
     8a8:	cmp	x8, x9
     8ac:	b.ne	894 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x444>  // b.any
     8b0:	cbz	x0, 18d0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1480>
     8b4:	ldr	x8, [x0]
     8b8:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     8bc:	ldr	x8, [x8, #96]
     8c0:	ldr	x1, [x1]
     8c4:	blr	x8
     8c8:	ldr	x10, [x19, #8]
     8cc:	cbz	x10, 1970 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1520>
     8d0:	ldr	x9, [x10]
     8d4:	ldr	x10, [x10, #8]
     8d8:	cmp	x9, x10
     8dc:	b.eq	18f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14a0>  // b.none
     8e0:	mov	x8, x0
     8e4:	ldr	x8, [x8, #32]
     8e8:	mov	x0, xzr
     8ec:	str	x8, [sp, #88]
     8f0:	adrp	x8, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     8f4:	ldr	x8, [x8]
     8f8:	ldp	x11, x12, [x9]
     8fc:	cmp	x11, x8
     900:	csel	x0, x12, x0, eq  // eq = none
     904:	b.eq	914 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4c4>  // b.none
     908:	add	x9, x9, #0x10
     90c:	cmp	x9, x10
     910:	b.ne	8f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4a8>  // b.any
     914:	cbz	x0, 18f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14a0>
     918:	ldr	x8, [x0]
     91c:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     920:	ldr	x8, [x8, #96]
     924:	ldr	x1, [x1]
     928:	blr	x8
     92c:	ldr	x21, [x19, #32]
     930:	ldr	w8, [x21, #48]
     934:	cbz	w8, 15c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1178>
     938:	ldr	x20, [x21, #40]
     93c:	adrp	x11, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     940:	adrp	x12, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     944:	ldr	d8, [x11]
     948:	ldr	d9, [x12]
     94c:	sub	x14, x29, #0xb8
     950:	sub	x13, x29, #0x70
     954:	add	x9, sp, #0x60
     958:	sub	x10, x29, #0x70
     95c:	add	x11, x14, #0x28
     960:	add	x28, x0, #0x20
     964:	add	x13, x13, #0x28
     968:	str	x11, [sp, #8]
     96c:	add	x11, x9, #0x28
     970:	add	x10, x10, #0x10
     974:	add	x22, x9, #0x10
     978:	add	x8, x20, x8, lsl #3
     97c:	str	x13, [sp, #16]
     980:	str	x10, [sp, #80]
     984:	stp	x11, x8, [sp, #32]
     988:	ldr	x19, [x20]
     98c:	str	wzr, [x21, #96]
     990:	str	wzr, [x21, #120]
     994:	str	wzr, [x21, #240]
     998:	mov	x0, x19
     99c:	str	wzr, [x21, #144]
     9a0:	str	wzr, [x21, #192]
     9a4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     9a8:	ldr	x23, [x19, #8]
     9ac:	str	x19, [sp, #72]
     9b0:	cbz	x23, b0c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6bc>
     9b4:	add	x24, x21, #0x58
     9b8:	add	x8, x21, #0x70
     9bc:	str	x8, [sp, #64]
     9c0:	add	x8, x21, #0x80
     9c4:	add	x27, x21, #0xe8
     9c8:	add	x26, x24, #0x10
     9cc:	add	x19, x21, #0xf8
     9d0:	str	x8, [sp, #56]
     9d4:	b	9e0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x590>
     9d8:	ldr	x23, [x23, #8]
     9dc:	cbz	x23, b0c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6bc>
     9e0:	mov	x0, x23
     9e4:	bl	0 <_ZNK4llvm3Use7getUserEv>
     9e8:	cbz	x0, 1650 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1200>
     9ec:	ldrb	w8, [x0, #16]
     9f0:	mov	x25, x0
     9f4:	cmp	w8, #0x50
     9f8:	b.ne	9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>  // b.any
     9fc:	ldur	x8, [x25, #-24]
     a00:	cbz	x8, 9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     a04:	ldrb	w9, [x8, #16]
     a08:	cbnz	w9, 9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     a0c:	ldrb	w9, [x8, #33]
     a10:	tbz	w9, #5, 9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     a14:	ldr	w9, [x8, #36]
     a18:	cmp	w9, #0x12
     a1c:	b.ne	a4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5fc>  // b.any
     a20:	ldp	w8, w9, [x21, #96]
     a24:	cmp	w8, w9
     a28:	b.cs	abc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x66c>  // b.hs, b.nlast
     a2c:	ldr	x9, [x21, #88]
     a30:	str	x25, [x9, w8, uxtw #3]
     a34:	ldp	w8, w9, [x21, #96]
     a38:	cmp	w8, w9
     a3c:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     a40:	add	w8, w8, #0x1
     a44:	str	w8, [x21, #96]
     a48:	b	9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     a4c:	ldr	w9, [x8, #36]
     a50:	cmp	w9, #0xe
     a54:	b.ne	a84 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x634>  // b.any
     a58:	ldp	w8, w9, [x21, #120]
     a5c:	cmp	w8, w9
     a60:	b.cs	ad8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x688>  // b.hs, b.nlast
     a64:	ldr	x9, [x21, #112]
     a68:	str	x25, [x9, w8, uxtw #3]
     a6c:	ldp	w8, w9, [x21, #120]
     a70:	cmp	w8, w9
     a74:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     a78:	add	w8, w8, #0x1
     a7c:	str	w8, [x21, #120]
     a80:	b	9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     a84:	ldr	w8, [x8, #36]
     a88:	cmp	w8, #0x17
     a8c:	b.ne	9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>  // b.any
     a90:	ldp	w8, w9, [x21, #240]
     a94:	cmp	w8, w9
     a98:	b.cs	af0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6a0>  // b.hs, b.nlast
     a9c:	ldr	x9, [x21, #232]
     aa0:	str	x25, [x9, w8, uxtw #3]
     aa4:	ldp	w8, w9, [x21, #240]
     aa8:	cmp	w8, w9
     aac:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     ab0:	add	w8, w8, #0x1
     ab4:	str	w8, [x21, #240]
     ab8:	b	9d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x588>
     abc:	mov	w3, #0x8                   	// #8
     ac0:	mov	x0, x24
     ac4:	mov	x1, x26
     ac8:	mov	x2, xzr
     acc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ad0:	ldr	w8, [x21, #96]
     ad4:	b	a2c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5dc>
     ad8:	ldp	x1, x0, [sp, #56]
     adc:	mov	w3, #0x8                   	// #8
     ae0:	mov	x2, xzr
     ae4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ae8:	ldr	w8, [x21, #120]
     aec:	b	a64 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x614>
     af0:	mov	w3, #0x8                   	// #8
     af4:	mov	x0, x27
     af8:	mov	x1, x19
     afc:	mov	x2, xzr
     b00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b04:	ldr	w8, [x21, #240]
     b08:	b	a9c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x64c>
     b0c:	ldr	w8, [x21, #96]
     b10:	add	x26, x21, #0x88
     b14:	add	x9, x21, #0xb8
     b18:	str	x9, [sp, #64]
     b1c:	cbz	w8, c3c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7ec>
     b20:	ldr	x23, [x21, #88]
     b24:	ldr	x9, [sp, #64]
     b28:	add	x24, x26, #0x10
     b2c:	add	x19, x23, x8, lsl #3
     b30:	add	x9, x9, #0x10
     b34:	str	x9, [sp, #56]
     b38:	b	b48 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6f8>
     b3c:	add	x23, x23, #0x8
     b40:	cmp	x23, x19
     b44:	b.eq	c3c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7ec>  // b.none
     b48:	ldr	x25, [x23]
     b4c:	mov	x0, x25
     b50:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     b54:	ldr	x25, [x25, #8]
     b58:	cbz	x25, b3c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6ec>
     b5c:	mov	x0, x25
     b60:	bl	0 <_ZNK4llvm3Use7getUserEv>
     b64:	cbz	x0, 15f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11a0>
     b68:	ldrb	w8, [x0, #16]
     b6c:	mov	x27, x0
     b70:	cmp	w8, #0x50
     b74:	b.ne	b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>  // b.any
     b78:	ldur	x8, [x27, #-24]
     b7c:	cbz	x8, b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>
     b80:	ldrb	w9, [x8, #16]
     b84:	cbnz	w9, b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>
     b88:	ldrb	w9, [x8, #33]
     b8c:	tbz	w9, #5, b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>
     b90:	ldr	w8, [x8, #36]
     b94:	cmp	w8, #0x22
     b98:	b.ne	b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>  // b.any
     b9c:	mov	x0, x27
     ba0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     ba4:	cmp	w0, #0x1
     ba8:	b.eq	bdc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x78c>  // b.none
     bac:	cbnz	w0, 1670 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1220>
     bb0:	ldp	w8, w9, [x21, #144]
     bb4:	cmp	w8, w9
     bb8:	b.cs	c08 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7b8>  // b.hs, b.nlast
     bbc:	ldr	x9, [x21, #136]
     bc0:	str	x27, [x9, w8, uxtw #3]
     bc4:	ldp	w8, w9, [x21, #144]
     bc8:	cmp	w8, w9
     bcc:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     bd0:	add	w8, w8, #0x1
     bd4:	str	w8, [x21, #144]
     bd8:	b	b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>
     bdc:	ldp	w8, w9, [x21, #192]
     be0:	cmp	w8, w9
     be4:	b.cs	c24 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7d4>  // b.hs, b.nlast
     be8:	ldr	x9, [x21, #184]
     bec:	str	x27, [x9, w8, uxtw #3]
     bf0:	ldp	w8, w9, [x21, #192]
     bf4:	cmp	w8, w9
     bf8:	b.cs	1630 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e0>  // b.hs, b.nlast
     bfc:	add	w8, w8, #0x1
     c00:	str	w8, [x21, #192]
     c04:	b	b54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x704>
     c08:	mov	w3, #0x8                   	// #8
     c0c:	mov	x0, x26
     c10:	mov	x1, x24
     c14:	mov	x2, xzr
     c18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c1c:	ldr	w8, [x21, #144]
     c20:	b	bbc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x76c>
     c24:	ldp	x1, x0, [sp, #56]
     c28:	mov	w3, #0x8                   	// #8
     c2c:	mov	x2, xzr
     c30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c34:	ldr	w8, [x21, #192]
     c38:	b	be8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x798>
     c3c:	ldr	x23, [sp, #72]
     c40:	mov	x0, x23
     c44:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     c48:	cbz	x1, 1780 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1330>
     c4c:	mov	x19, x1
     c50:	sub	x1, x29, #0x70
     c54:	mov	w2, #0x1                   	// #1
     c58:	mov	x0, x19
     c5c:	mov	x3, xzr
     c60:	stur	wzr, [x29, #-112]
     c64:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     c68:	mov	x1, x26
     c6c:	mov	x24, x0
     c70:	bl	1a70 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     c74:	mov	x0, x23
     c78:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     c7c:	ldr	w8, [x21, #120]
     c80:	cbz	w8, fcc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb7c>
     c84:	ldr	x8, [sp, #16]
     c88:	stur	d8, [x29, #-88]
     c8c:	stur	wzr, [x29, #-80]
     c90:	add	x27, x0, #0x48
     c94:	stp	xzr, x8, [x29, #-112]
     c98:	stur	x8, [x29, #-96]
     c9c:	ldr	x26, [x0, #80]
     ca0:	str	x19, [sp, #56]
     ca4:	b	cac <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x85c>
     ca8:	ldr	x26, [x26, #8]
     cac:	cmp	x27, x26
     cb0:	b.eq	dd8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x988>  // b.none
     cb4:	ldrb	w8, [x26]
     cb8:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
     cbc:	sub	x8, x26, #0x18
     cc0:	cmp	x26, #0x0
     cc4:	csel	x0, xzr, x8, eq  // eq = none
     cc8:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     ccc:	mov	x19, x0
     cd0:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
     cd4:	cbnz	w0, ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x858>
     cd8:	ldrb	w8, [x19, #16]
     cdc:	sub	w8, w8, #0x1d
     ce0:	cmp	w8, #0x6
     ce4:	b.cc	ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x858>  // b.lo, b.ul, b.last
     ce8:	ldp	x9, x8, [x29, #-104]
     cec:	cmp	x8, x9
     cf0:	b.eq	d48 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8f8>  // b.none
     cf4:	sub	x0, x29, #0x70
     cf8:	mov	x1, x19
     cfc:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
     d00:	ldp	x9, x8, [x29, #-104]
     d04:	sub	x11, x29, #0x70
     d08:	add	x10, x11, #0x1c
     d0c:	add	x11, x11, #0x18
     d10:	cmp	x8, x9
     d14:	csel	x9, x10, x11, eq  // eq = none
     d18:	ldr	w9, [x9]
     d1c:	add	x8, x8, x9, lsl #3
     d20:	cmp	x8, x0
     d24:	b.cc	1688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1238>  // b.lo, b.ul, b.last
     d28:	b.eq	ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x858>  // b.none
     d2c:	ldr	x9, [x0]
     d30:	cmn	x9, #0x2
     d34:	b.cc	ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x858>  // b.lo, b.ul, b.last
     d38:	add	x0, x0, #0x8
     d3c:	cmp	x8, x0
     d40:	b.ne	d2c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8dc>  // b.any
     d44:	b	ca8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x858>
     d48:	ldur	w9, [x29, #-84]
     d4c:	cbz	w9, da0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x950>
     d50:	mov	x0, xzr
     d54:	lsl	x10, x9, #3
     d58:	mov	x11, x8
     d5c:	ldr	x12, [x11]
     d60:	cmp	x12, x19
     d64:	b.eq	dd0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x980>  // b.none
     d68:	cmn	x12, #0x2
     d6c:	csel	x0, x11, x0, eq  // eq = none
     d70:	subs	x10, x10, #0x8
     d74:	add	x11, x11, #0x8
     d78:	b.ne	d5c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x90c>  // b.any
     d7c:	cbz	x0, da0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x950>
     d80:	str	x19, [x0]
     d84:	ldur	w8, [x29, #-80]
     d88:	ldur	x9, [x29, #-112]
     d8c:	sub	w8, w8, #0x1
     d90:	add	x9, x9, #0x1
     d94:	stur	w8, [x29, #-80]
     d98:	stur	x9, [x29, #-112]
     d9c:	b	d00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8b0>
     da0:	ldur	w10, [x29, #-88]
     da4:	cmp	w9, w10
     da8:	b.cs	cf4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8a4>  // b.hs, b.nlast
     dac:	add	w10, w9, #0x1
     db0:	lsl	x9, x9, #3
     db4:	stur	w10, [x29, #-84]
     db8:	str	x19, [x8, x9]
     dbc:	ldp	x8, x10, [x29, #-112]
     dc0:	add	x8, x8, #0x1
     dc4:	stur	x8, [x29, #-112]
     dc8:	add	x0, x10, x9
     dcc:	b	d00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8b0>
     dd0:	mov	x0, x11
     dd4:	b	d00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8b0>
     dd8:	ldr	x19, [sp, #8]
     ddc:	stur	d9, [x29, #-160]
     de0:	stur	wzr, [x29, #-152]
     de4:	stp	xzr, x19, [x29, #-184]
     de8:	stur	x19, [x29, #-168]
     dec:	ldr	w8, [x21, #192]
     df0:	cbz	w8, ff4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xba4>
     df4:	ldr	x26, [x21, #184]
     df8:	str	x24, [sp, #24]
     dfc:	add	x27, x26, x8, lsl #3
     e00:	b	e10 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9c0>
     e04:	add	x26, x26, #0x8
     e08:	cmp	x26, x27
     e0c:	b.eq	fb8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>  // b.none
     e10:	ldp	x8, x23, [x29, #-104]
     e14:	sub	x10, x29, #0x70
     e18:	add	x9, x10, #0x1c
     e1c:	add	x10, x10, #0x18
     e20:	cmp	x23, x8
     e24:	csel	x8, x9, x10, eq  // eq = none
     e28:	ldr	w8, [x8]
     e2c:	ldr	x19, [x26]
     e30:	add	x24, x23, x8, lsl #3
     e34:	cbz	w8, e5c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa0c>
     e38:	lsl	x9, x8, #3
     e3c:	add	x8, x9, x23
     e40:	ldr	x10, [x23]
     e44:	cmn	x10, #0x2
     e48:	b.cc	e5c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa0c>  // b.lo, b.ul, b.last
     e4c:	subs	x9, x9, #0x8
     e50:	add	x23, x23, #0x8
     e54:	b.ne	e40 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9f0>  // b.any
     e58:	mov	x23, x8
     e5c:	cmp	x23, x24
     e60:	b.eq	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>  // b.none
     e64:	ldur	x25, [x29, #-112]
     e68:	cmp	x23, x24
     e6c:	b.cs	16c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1278>  // b.hs, b.nlast
     e70:	ldr	x2, [x23]
     e74:	mov	x0, x28
     e78:	mov	x1, x19
     e7c:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
     e80:	tbnz	w0, #0, ec8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa78>
     e84:	ldur	x8, [x29, #-112]
     e88:	cmp	x8, x25
     e8c:	b.ne	16e8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1298>  // b.any
     e90:	add	x23, x23, #0x8
     e94:	cmp	x23, x24
     e98:	b.hi	1688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1238>  // b.pmore
     e9c:	b.eq	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>  // b.none
     ea0:	ldr	x8, [x23]
     ea4:	cmn	x8, #0x2
     ea8:	b.cc	ebc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa6c>  // b.lo, b.ul, b.last
     eac:	add	x23, x23, #0x8
     eb0:	cmp	x24, x23
     eb4:	b.ne	ea0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa50>  // b.any
     eb8:	b	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>
     ebc:	cmp	x24, x23
     ec0:	b.ne	e68 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa18>  // b.any
     ec4:	b	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>
     ec8:	ldp	x9, x8, [x29, #-176]
     ecc:	cmp	x8, x9
     ed0:	b.eq	f28 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xad8>  // b.none
     ed4:	sub	x0, x29, #0xb8
     ed8:	mov	x1, x19
     edc:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
     ee0:	ldp	x9, x8, [x29, #-176]
     ee4:	sub	x11, x29, #0xb8
     ee8:	add	x10, x11, #0x1c
     eec:	add	x11, x11, #0x18
     ef0:	cmp	x8, x9
     ef4:	csel	x9, x10, x11, eq  // eq = none
     ef8:	ldr	w9, [x9]
     efc:	add	x8, x8, x9, lsl #3
     f00:	cmp	x8, x0
     f04:	b.cc	1688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1238>  // b.lo, b.ul, b.last
     f08:	b.eq	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>  // b.none
     f0c:	ldr	x9, [x0]
     f10:	cmn	x9, #0x2
     f14:	b.cc	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>  // b.lo, b.ul, b.last
     f18:	add	x0, x0, #0x8
     f1c:	cmp	x8, x0
     f20:	b.ne	f0c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xabc>  // b.any
     f24:	b	e04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9b4>
     f28:	ldur	w9, [x29, #-156]
     f2c:	cbz	w9, f80 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb30>
     f30:	mov	x0, xzr
     f34:	lsl	x10, x9, #3
     f38:	mov	x11, x8
     f3c:	ldr	x12, [x11]
     f40:	cmp	x12, x19
     f44:	b.eq	fb0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb60>  // b.none
     f48:	cmn	x12, #0x2
     f4c:	csel	x0, x11, x0, eq  // eq = none
     f50:	subs	x10, x10, #0x8
     f54:	add	x11, x11, #0x8
     f58:	b.ne	f3c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xaec>  // b.any
     f5c:	cbz	x0, f80 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb30>
     f60:	str	x19, [x0]
     f64:	ldur	w8, [x29, #-152]
     f68:	ldur	x9, [x29, #-184]
     f6c:	sub	w8, w8, #0x1
     f70:	add	x9, x9, #0x1
     f74:	stur	w8, [x29, #-152]
     f78:	stur	x9, [x29, #-184]
     f7c:	b	ee0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa90>
     f80:	ldur	w10, [x29, #-160]
     f84:	cmp	w9, w10
     f88:	b.cs	ed4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa84>  // b.hs, b.nlast
     f8c:	add	w10, w9, #0x1
     f90:	lsl	x9, x9, #3
     f94:	stur	w10, [x29, #-156]
     f98:	str	x19, [x8, x9]
     f9c:	ldp	x8, x10, [x29, #-184]
     fa0:	add	x8, x8, #0x1
     fa4:	stur	x8, [x29, #-184]
     fa8:	add	x0, x10, x9
     fac:	b	ee0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa90>
     fb0:	mov	x0, x11
     fb4:	b	ee0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa90>
     fb8:	ldp	x10, x19, [x29, #-176]
     fbc:	ldp	w9, w8, [x29, #-160]
     fc0:	ldr	x23, [sp, #72]
     fc4:	ldr	x24, [sp, #24]
     fc8:	b	ffc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>
     fcc:	mov	w8, #0x1                   	// #1
     fd0:	sub	x1, x29, #0x70
     fd4:	mov	w2, #0x1                   	// #1
     fd8:	mov	x0, x19
     fdc:	mov	x3, xzr
     fe0:	stur	w8, [x29, #-112]
     fe4:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     fe8:	ldr	x1, [sp, #64]
     fec:	bl	1a70 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
     ff0:	b	1594 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1144>
     ff4:	mov	w9, #0x4                   	// #4
     ff8:	mov	x10, x19
     ffc:	ldr	x11, [sp, #32]
    1000:	cmp	x19, x10
    1004:	csel	w8, w8, w9, eq  // eq = none
    1008:	add	x26, x19, w8, uxtw #3
    100c:	stp	xzr, x11, [sp, #96]
    1010:	str	x11, [sp, #112]
    1014:	str	d8, [sp, #120]
    1018:	str	wzr, [sp, #128]
    101c:	cbz	w8, 1044 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf4>
    1020:	lsl	x9, x8, #3
    1024:	add	x8, x9, x19
    1028:	ldr	x10, [x19]
    102c:	cmn	x10, #0x2
    1030:	b.cc	1044 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf4>  // b.lo, b.ul, b.last
    1034:	subs	x9, x9, #0x8
    1038:	add	x19, x19, #0x8
    103c:	b.ne	1028 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbd8>  // b.any
    1040:	mov	x19, x8
    1044:	cmp	x19, x26
    1048:	b.eq	11c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd78>  // b.none
    104c:	ldur	x27, [x29, #-184]
    1050:	cmp	x19, x26
    1054:	b.cs	17a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1350>  // b.hs, b.nlast
    1058:	ldr	x0, [x19]
    105c:	mov	w1, wzr
    1060:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1064:	cbz	x0, 17e0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1390>
    1068:	ldrb	w8, [x0, #16]
    106c:	mov	x1, x0
    1070:	cmp	w8, #0x50
    1074:	b.ne	15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>  // b.any
    1078:	ldur	x8, [x1, #-24]
    107c:	cbz	x8, 15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>
    1080:	ldrb	w9, [x8, #16]
    1084:	cbnz	w9, 15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>
    1088:	ldrb	w9, [x8, #33]
    108c:	tbz	w9, #5, 15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>
    1090:	ldr	w8, [x8, #36]
    1094:	cmp	w8, #0x12
    1098:	b.ne	15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>  // b.any
    109c:	ldp	x8, x9, [sp, #104]
    10a0:	cmp	x9, x8
    10a4:	b.eq	1130 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xce0>  // b.none
    10a8:	add	x0, sp, #0x60
    10ac:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
    10b0:	mov	x8, x0
    10b4:	ldp	x9, x0, [sp, #104]
    10b8:	ldp	w11, w10, [sp, #120]
    10bc:	cmp	x0, x9
    10c0:	csel	w11, w10, w11, eq  // eq = none
    10c4:	add	x11, x0, w11, uxtw #3
    10c8:	cmp	x11, x8
    10cc:	b.cc	1688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1238>  // b.lo, b.ul, b.last
    10d0:	b.eq	10ec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc9c>  // b.none
    10d4:	ldr	x12, [x8]
    10d8:	cmn	x12, #0x2
    10dc:	b.cc	10ec <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc9c>  // b.lo, b.ul, b.last
    10e0:	add	x8, x8, #0x8
    10e4:	cmp	x11, x8
    10e8:	b.ne	10d4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc84>  // b.any
    10ec:	ldur	x8, [x29, #-184]
    10f0:	cmp	x8, x27
    10f4:	b.ne	17c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1370>  // b.any
    10f8:	add	x19, x19, #0x8
    10fc:	cmp	x19, x26
    1100:	b.hi	1688 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1238>  // b.pmore
    1104:	b.eq	11c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd70>  // b.none
    1108:	ldr	x8, [x19]
    110c:	cmn	x8, #0x2
    1110:	b.cc	1124 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcd4>  // b.lo, b.ul, b.last
    1114:	add	x19, x19, #0x8
    1118:	cmp	x26, x19
    111c:	b.ne	1108 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcb8>  // b.any
    1120:	b	11c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd70>
    1124:	cmp	x26, x19
    1128:	b.ne	1050 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc00>  // b.any
    112c:	b	11c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd70>
    1130:	ldr	w10, [sp, #124]
    1134:	cbz	w10, 1188 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd38>
    1138:	mov	x8, xzr
    113c:	lsl	x11, x10, #3
    1140:	mov	x12, x9
    1144:	ldr	x13, [x12]
    1148:	cmp	x13, x1
    114c:	b.eq	11b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd68>  // b.none
    1150:	cmn	x13, #0x2
    1154:	csel	x8, x12, x8, eq  // eq = none
    1158:	subs	x11, x11, #0x8
    115c:	add	x12, x12, #0x8
    1160:	b.ne	1144 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcf4>  // b.any
    1164:	cbz	x8, 1188 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd38>
    1168:	str	x1, [x8]
    116c:	ldr	w9, [sp, #128]
    1170:	ldr	x10, [sp, #96]
    1174:	sub	w9, w9, #0x1
    1178:	add	x10, x10, #0x1
    117c:	str	w9, [sp, #128]
    1180:	str	x10, [sp, #96]
    1184:	b	10b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc64>
    1188:	ldr	w8, [sp, #120]
    118c:	cmp	w10, w8
    1190:	b.cs	10a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc58>  // b.hs, b.nlast
    1194:	add	w8, w10, #0x1
    1198:	lsl	x10, x10, #3
    119c:	str	w8, [sp, #124]
    11a0:	str	x1, [x9, x10]
    11a4:	ldp	x8, x9, [sp, #96]
    11a8:	add	x8, x8, #0x1
    11ac:	str	x8, [sp, #96]
    11b0:	add	x8, x9, x10
    11b4:	b	10b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc64>
    11b8:	mov	x8, x12
    11bc:	b	10b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc64>
    11c0:	ldr	w8, [sp, #128]
    11c4:	b	11d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd88>
    11c8:	ldr	x0, [sp, #32]
    11cc:	mov	w8, wzr
    11d0:	mov	w10, wzr
    11d4:	mov	x9, x0
    11d8:	ldr	w11, [x21, #96]
    11dc:	sub	w8, w10, w8
    11e0:	cmp	w11, w8
    11e4:	cset	w19, eq  // eq = none
    11e8:	cmp	x0, x9
    11ec:	b.eq	11f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xda4>  // b.none
    11f0:	bl	0 <free>
    11f4:	ldp	x8, x0, [x29, #-176]
    11f8:	cmp	x0, x8
    11fc:	b.eq	1204 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xdb4>  // b.none
    1200:	bl	0 <free>
    1204:	ldp	x8, x0, [x29, #-104]
    1208:	cmp	x0, x8
    120c:	b.eq	1214 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xdc4>  // b.none
    1210:	bl	0 <free>
    1214:	ldr	x0, [sp, #56]
    1218:	cmp	w19, #0x0
    121c:	mov	w8, #0x1                   	// #1
    1220:	cinc	w8, w8, ne  // ne = any
    1224:	sub	x1, x29, #0x70
    1228:	mov	w2, #0x1                   	// #1
    122c:	mov	x3, xzr
    1230:	stur	w8, [x29, #-112]
    1234:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
    1238:	ldr	x1, [sp, #64]
    123c:	bl	1a70 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>
    1240:	cbz	w19, 1594 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1144>
    1244:	cbz	x24, 1820 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13d0>
    1248:	ldrb	w8, [x24, #16]
    124c:	cbnz	w8, 1840 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13f0>
    1250:	ldrb	w8, [x24, #18]
    1254:	tbz	w8, #0, 1260 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe10>
    1258:	mov	x0, x24
    125c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    1260:	ldr	x8, [x24, #88]
    1264:	ldr	x8, [x8]
    1268:	cbz	x8, 1860 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1410>
    126c:	ldrb	w9, [x8, #8]
    1270:	cmp	w9, #0xf
    1274:	b.ne	1880 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1430>  // b.any
    1278:	ldr	x19, [x8, #24]
    127c:	mov	x0, x23
    1280:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1284:	ldr	w8, [x21, #48]
    1288:	cbz	w8, 18a0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1450>
    128c:	ldr	x8, [x21, #40]
    1290:	mov	x23, x0
    1294:	ldr	x24, [x19]
    1298:	ldr	x0, [x8]
    129c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    12a0:	ldr	x8, [x0, #80]
    12a4:	ldrb	w9, [x8]
    12a8:	tbnz	w9, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    12ac:	sub	x9, x8, #0x18
    12b0:	cmp	x8, #0x0
    12b4:	csel	x9, xzr, x9, eq  // eq = none
    12b8:	ldr	x8, [x9, #48]
    12bc:	add	x9, x9, #0x28
    12c0:	cmp	x9, x8
    12c4:	b.eq	1728 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12d8>  // b.none
    12c8:	ldrb	w10, [x8]
    12cc:	tbnz	w10, #2, 16a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1258>
    12d0:	sub	x10, x8, #0x18
    12d4:	cmp	x8, #0x0
    12d8:	csel	x25, xzr, x10, eq  // eq = none
    12dc:	cbz	x8, 1708 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12b8>
    12e0:	ldrb	w10, [x25, #16]
    12e4:	cmp	w10, #0x37
    12e8:	b.ne	12fc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xeac>  // b.any
    12ec:	ldr	x8, [x8, #8]
    12f0:	cmp	x9, x8
    12f4:	b.ne	12c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe78>  // b.any
    12f8:	b	1728 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12d8>
    12fc:	mov	x0, x24
    1300:	stp	x20, x23, [sp, #56]
    1304:	mov	x20, x28
    1308:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    130c:	ldr	w8, [x21, #120]
    1310:	cbz	w8, 1340 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xef0>
    1314:	ldr	x28, [x21, #112]
    1318:	mov	x26, x0
    131c:	lsl	x23, x8, #3
    1320:	ldr	x27, [x28], #8
    1324:	mov	x1, x26
    1328:	mov	x0, x27
    132c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1330:	mov	x0, x27
    1334:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1338:	subs	x23, x23, #0x8
    133c:	b.ne	1320 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xed0>  // b.any
    1340:	ldr	x8, [sp, #64]
    1344:	ldr	x0, [x8, #40]
    1348:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    134c:	mov	x26, x0
    1350:	mov	w0, #0x40                  	// #64
    1354:	mov	w1, #0x1                   	// #1
    1358:	bl	0 <_ZN4llvm4UsernwEmj>
    135c:	ldr	w2, [x26, #4]
    1360:	mov	w8, #0x101                 	// #257
    1364:	sub	x3, x29, #0x70
    1368:	mov	x1, x19
    136c:	mov	x4, x25
    1370:	mov	x23, x0
    1374:	stp	xzr, xzr, [x29, #-112]
    1378:	sturh	w8, [x29, #-96]
    137c:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>
    1380:	mov	w0, #0x38                  	// #56
    1384:	mov	w1, #0x1                   	// #1
    1388:	bl	0 <_ZN4llvm4UsernwEmj>
    138c:	mov	x19, x0
    1390:	mov	x0, x24
    1394:	mov	w1, wzr
    1398:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    139c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    13a0:	add	x8, x8, #0x0
    13a4:	mov	x2, x0
    13a8:	stp	x8, xzr, [x29, #-112]
    13ac:	mov	w8, #0x103                 	// #259
    13b0:	sub	x3, x29, #0x70
    13b4:	mov	x0, x19
    13b8:	mov	x1, x23
    13bc:	mov	x4, x25
    13c0:	sturh	w8, [x29, #-96]
    13c4:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
    13c8:	ldr	w8, [x21, #96]
    13cc:	cbz	w8, 13f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xfa8>
    13d0:	ldr	x21, [x21, #88]
    13d4:	lsl	x25, x8, #3
    13d8:	ldr	x24, [x21], #8
    13dc:	mov	x1, x19
    13e0:	mov	x0, x24
    13e4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    13e8:	mov	x0, x24
    13ec:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    13f0:	subs	x25, x25, #0x8
    13f4:	b.ne	13d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xf88>  // b.any
    13f8:	mov	x0, x23
    13fc:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1400:	mov	x19, x0
    1404:	sub	x0, x29, #0x70
    1408:	mov	x1, x19
    140c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1410:	ldp	x21, x24, [x29, #-112]
    1414:	ldur	x25, [x29, #-96]
    1418:	add	x19, x19, #0x48
    141c:	cmp	x21, x19
    1420:	cset	w8, ne  // ne = any
    1424:	cmp	x25, #0x0
    1428:	cset	w9, ne  // ne = any
    142c:	cmp	x19, x24
    1430:	b.ne	1478 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1028>  // b.any
    1434:	mov	x28, x20
    1438:	and	w8, w8, w9
    143c:	cbz	w8, 1584 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1134>
    1440:	b	1478 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1028>
    1444:	ldr	x24, [x24, #8]
    1448:	cmp	x21, x24
    144c:	b.eq	1564 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1114>  // b.none
    1450:	ldrb	w8, [x24]
    1454:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    1458:	sub	x8, x24, #0x18
    145c:	cmp	x24, #0x0
    1460:	csel	x8, xzr, x8, eq  // eq = none
    1464:	ldr	x25, [x8, #48]
    1468:	add	x8, x8, #0x28
    146c:	cmp	x8, x25
    1470:	b.eq	1444 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xff4>  // b.none
    1474:	b	1564 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1114>
    1478:	ldrb	w8, [x25]
    147c:	tbnz	w8, #2, 16a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1258>
    1480:	sub	x8, x25, #0x18
    1484:	cmp	x25, #0x0
    1488:	csel	x26, xzr, x8, eq  // eq = none
    148c:	cbz	x25, 1740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12f0>
    1490:	ldrb	w8, [x26, #16]
    1494:	cmp	w8, #0x50
    1498:	b.ne	153c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10ec>  // b.any
    149c:	ldrh	w8, [x26, #18]
    14a0:	and	w8, w8, #0x3
    14a4:	sub	w8, w8, #0x1
    14a8:	cmp	w8, #0x1
    14ac:	b.hi	153c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10ec>  // b.pmore
    14b0:	ldr	w8, [x26, #20]
    14b4:	tbnz	w8, #30, 14d0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1080>
    14b8:	and	w8, w8, #0xfffffff
    14bc:	mov	w9, #0x18                  	// #24
    14c0:	mneg	x9, x8, x9
    14c4:	add	x27, x26, x9
    14c8:	cbnz	x8, 14dc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x108c>
    14cc:	b	153c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10ec>
    14d0:	ldur	x27, [x26, #-8]
    14d4:	and	x8, x8, #0xfffffff
    14d8:	cbz	x8, 153c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10ec>
    14dc:	add	x8, x8, x8, lsl #1
    14e0:	lsl	x28, x8, #3
    14e4:	ldr	x8, [x27], #24
    14e8:	mov	x9, #0xffffffffffffffff    	// #-1
    14ec:	movi	v0.2d, #0x0
    14f0:	sub	x1, x29, #0x70
    14f4:	stp	x8, x9, [x29, #-112]
    14f8:	ldp	x8, x0, [sp, #80]
    14fc:	add	x2, sp, #0x60
    1500:	stp	x23, x9, [sp, #96]
    1504:	stp	q0, q0, [x22]
    1508:	stp	q0, q0, [x8]
    150c:	bl	0 <_ZN4llvm9AAResults5aliasERKNS_14MemoryLocationES3_>
    1510:	tst	w0, #0xff
    1514:	b.ne	1524 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10d4>  // b.any
    1518:	subs	x28, x28, #0x18
    151c:	b.ne	14e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1094>  // b.any
    1520:	b	153c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10ec>
    1524:	ldrh	w8, [x26, #18]
    1528:	and	w9, w8, #0x3
    152c:	cmp	w9, #0x2
    1530:	b.eq	18c0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1470>  // b.none
    1534:	and	w8, w8, #0xfffc
    1538:	strh	w8, [x26, #18]
    153c:	ldrb	w8, [x24]
    1540:	tbnz	w8, #2, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    1544:	ldr	x25, [x25, #8]
    1548:	sub	x8, x24, #0x18
    154c:	cmp	x24, #0x0
    1550:	csel	x8, xzr, x8, eq  // eq = none
    1554:	add	x8, x8, #0x28
    1558:	cmp	x8, x25
    155c:	mov	x28, x20
    1560:	b.eq	1444 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xff4>  // b.none
    1564:	cmp	x21, x19
    1568:	cset	w8, ne  // ne = any
    156c:	cmp	x25, #0x0
    1570:	cset	w9, ne  // ne = any
    1574:	and	w8, w8, w9
    1578:	tbnz	w8, #0, 1478 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1028>
    157c:	cmp	x19, x24
    1580:	b.ne	1478 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1028>  // b.any
    1584:	ldr	x0, [sp, #72]
    1588:	mov	w1, #0x1                   	// #1
    158c:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    1590:	ldr	x20, [sp, #56]
    1594:	ldr	x8, [sp, #40]
    1598:	add	x20, x20, #0x8
    159c:	cmp	x20, x8
    15a0:	b.eq	15c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1174>  // b.none
    15a4:	ldr	x8, [sp, #48]
    15a8:	ldr	x21, [x8, #32]
    15ac:	b	988 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x538>
    15b0:	ldp	x9, x0, [sp, #104]
    15b4:	mov	w19, wzr
    15b8:	cmp	x0, x9
    15bc:	b.ne	11f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xda0>  // b.any
    15c0:	b	11f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xda4>
    15c4:	mov	w22, #0x1                   	// #1
    15c8:	mov	w0, w22
    15cc:	ldp	x20, x19, [sp, #480]
    15d0:	ldp	x22, x21, [sp, #464]
    15d4:	ldp	x24, x23, [sp, #448]
    15d8:	ldp	x26, x25, [sp, #432]
    15dc:	ldp	x28, x27, [sp, #416]
    15e0:	ldp	x29, x30, [sp, #400]
    15e4:	ldp	d9, d8, [sp, #384]
    15e8:	add	sp, sp, #0x1f0
    15ec:	ret
    15f0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    15f4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    15f8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    15fc:	add	x0, x0, #0x0
    1600:	add	x1, x1, #0x0
    1604:	add	x3, x3, #0x0
    1608:	mov	w2, #0x69                  	// #105
    160c:	bl	0 <__assert_fail>
    1610:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1614:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1618:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    161c:	add	x0, x0, #0x0
    1620:	add	x1, x1, #0x0
    1624:	add	x3, x3, #0x0
    1628:	mov	w2, #0x8b                  	// #139
    162c:	bl	0 <__assert_fail>
    1630:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1634:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1638:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    163c:	add	x0, x0, #0x0
    1640:	add	x1, x1, #0x0
    1644:	add	x3, x3, #0x0
    1648:	mov	w2, #0x43                  	// #67
    164c:	bl	0 <__assert_fail>
    1650:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1654:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1658:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    165c:	add	x0, x0, #0x0
    1660:	add	x1, x1, #0x0
    1664:	add	x3, x3, #0x0
    1668:	mov	w2, #0x69                  	// #105
    166c:	bl	0 <__assert_fail>
    1670:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1674:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1678:	add	x0, x0, #0x0
    167c:	add	x1, x1, #0x0
    1680:	mov	w2, #0xe0                  	// #224
    1684:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1688:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    168c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1690:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1694:	add	x0, x0, #0x0
    1698:	add	x1, x1, #0x0
    169c:	add	x3, x3, #0x0
    16a0:	mov	w2, #0xf8                  	// #248
    16a4:	bl	0 <__assert_fail>
    16a8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16ac:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16b0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16b4:	add	x0, x0, #0x0
    16b8:	add	x1, x1, #0x0
    16bc:	add	x3, x3, #0x0
    16c0:	mov	w2, #0x8b                  	// #139
    16c4:	bl	0 <__assert_fail>
    16c8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16cc:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16d0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16d4:	add	x0, x0, #0x0
    16d8:	add	x1, x1, #0x0
    16dc:	add	x3, x3, #0x0
    16e0:	mov	w2, #0x121                 	// #289
    16e4:	bl	0 <__assert_fail>
    16e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16f4:	add	x0, x0, #0x0
    16f8:	add	x1, x1, #0x0
    16fc:	add	x3, x3, #0x0
    1700:	mov	w2, #0x126                 	// #294
    1704:	bl	0 <__assert_fail>
    1708:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    170c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1710:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1714:	add	x0, x0, #0x0
    1718:	add	x1, x1, #0x0
    171c:	add	x3, x3, #0x0
    1720:	mov	w2, #0x69                  	// #105
    1724:	bl	0 <__assert_fail>
    1728:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    172c:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1730:	add	x0, x0, #0x0
    1734:	add	x1, x1, #0x0
    1738:	mov	w2, #0x68                  	// #104
    173c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1740:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1744:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1748:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    174c:	add	x0, x0, #0x0
    1750:	add	x1, x1, #0x0
    1754:	add	x3, x3, #0x0
    1758:	mov	w2, #0x69                  	// #105
    175c:	bl	0 <__assert_fail>
    1760:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1764:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1768:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    176c:	add	x0, x0, #0x0
    1770:	add	x1, x1, #0x0
    1774:	add	x3, x3, #0x0
    1778:	mov	w2, #0x69                  	// #105
    177c:	bl	0 <__assert_fail>
    1780:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1784:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1788:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    178c:	add	x0, x0, #0x0
    1790:	add	x1, x1, #0x0
    1794:	add	x3, x3, #0x0
    1798:	mov	w2, #0xe8                  	// #232
    179c:	bl	0 <__assert_fail>
    17a0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17a8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17ac:	add	x0, x0, #0x0
    17b0:	add	x1, x1, #0x0
    17b4:	add	x3, x3, #0x0
    17b8:	mov	w2, #0x121                 	// #289
    17bc:	bl	0 <__assert_fail>
    17c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17c4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17c8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17cc:	add	x0, x0, #0x0
    17d0:	add	x1, x1, #0x0
    17d4:	add	x3, x3, #0x0
    17d8:	mov	w2, #0x126                 	// #294
    17dc:	bl	0 <__assert_fail>
    17e0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17e4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17e8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17ec:	add	x0, x0, #0x0
    17f0:	add	x1, x1, #0x0
    17f4:	add	x3, x3, #0x0
    17f8:	mov	w2, #0x69                  	// #105
    17fc:	bl	0 <__assert_fail>
    1800:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1804:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1808:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    180c:	add	x0, x0, #0x0
    1810:	add	x1, x1, #0x0
    1814:	add	x3, x3, #0x0
    1818:	mov	w2, #0x69                  	// #105
    181c:	bl	0 <__assert_fail>
    1820:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1824:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1828:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    182c:	add	x0, x0, #0x0
    1830:	add	x1, x1, #0x0
    1834:	add	x3, x3, #0x0
    1838:	mov	w2, #0x69                  	// #105
    183c:	bl	0 <__assert_fail>
    1840:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1844:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1848:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    184c:	add	x0, x0, #0x0
    1850:	add	x1, x1, #0x0
    1854:	add	x3, x3, #0x0
    1858:	mov	w2, #0x108                 	// #264
    185c:	bl	0 <__assert_fail>
    1860:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1864:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1868:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    186c:	add	x0, x0, #0x0
    1870:	add	x1, x1, #0x0
    1874:	add	x3, x3, #0x0
    1878:	mov	w2, #0x69                  	// #105
    187c:	bl	0 <__assert_fail>
    1880:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1884:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1888:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    188c:	add	x0, x0, #0x0
    1890:	add	x1, x1, #0x0
    1894:	add	x3, x3, #0x0
    1898:	mov	w2, #0x108                 	// #264
    189c:	bl	0 <__assert_fail>
    18a0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18a8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18ac:	add	x0, x0, #0x0
    18b0:	add	x1, x1, #0x0
    18b4:	add	x3, x3, #0x0
    18b8:	mov	w2, #0x9e                  	// #158
    18bc:	bl	0 <__assert_fail>
    18c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18c4:	add	x0, x0, #0x0
    18c8:	mov	w1, #0x1                   	// #1
    18cc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    18d0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18d4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18d8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18dc:	add	x0, x0, #0x0
    18e0:	add	x1, x1, #0x0
    18e4:	add	x3, x3, #0x0
    18e8:	mov	w2, #0xeb                  	// #235
    18ec:	bl	0 <__assert_fail>
    18f0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18f4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18f8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18fc:	add	x0, x0, #0x0
    1900:	add	x1, x1, #0x0
    1904:	add	x3, x3, #0x0
    1908:	mov	w2, #0xeb                  	// #235
    190c:	bl	0 <__assert_fail>
    1910:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1914:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1918:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    191c:	add	x0, x0, #0x0
    1920:	add	x1, x1, #0x0
    1924:	add	x3, x3, #0x0
    1928:	mov	w2, #0x69                  	// #105
    192c:	bl	0 <__assert_fail>
    1930:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1934:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1938:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    193c:	add	x0, x0, #0x0
    1940:	add	x1, x1, #0x0
    1944:	add	x3, x3, #0x0
    1948:	mov	w2, #0x108                 	// #264
    194c:	bl	0 <__assert_fail>
    1950:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1954:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1958:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    195c:	add	x0, x0, #0x0
    1960:	add	x1, x1, #0x0
    1964:	add	x3, x3, #0x0
    1968:	mov	w2, #0xdd                  	// #221
    196c:	bl	0 <__assert_fail>
    1970:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1974:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1978:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    197c:	add	x0, x0, #0x0
    1980:	add	x1, x1, #0x0
    1984:	add	x3, x3, #0x0
    1988:	mov	w2, #0xdd                  	// #221
    198c:	bl	0 <__assert_fail>
    1990:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1994:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1998:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    199c:	add	x0, x0, #0x0
    19a0:	add	x1, x1, #0x0
    19a4:	add	x3, x3, #0x0
    19a8:	mov	w2, #0x10d                 	// #269
    19ac:	bl	0 <__assert_fail>
    19b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19bc:	add	x0, x0, #0x0
    19c0:	add	x1, x1, #0x0
    19c4:	add	x3, x3, #0x0
    19c8:	mov	w2, #0x3b                  	// #59
    19cc:	bl	0 <__assert_fail>

00000000000019d0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>:
    19d0:	cbz	x0, 1a6c <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x9c>
    19d4:	stp	x29, x30, [sp, #-32]!
    19d8:	str	x19, [sp, #16]
    19dc:	mov	x29, sp
    19e0:	mov	x19, x0
    19e4:	ldr	x0, [x0, #232]
    19e8:	add	x8, x19, #0xf8
    19ec:	cmp	x0, x8
    19f0:	b.eq	19f8 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x28>  // b.none
    19f4:	bl	0 <free>
    19f8:	ldr	x0, [x19, #184]
    19fc:	add	x8, x19, #0xc8
    1a00:	cmp	x0, x8
    1a04:	b.eq	1a0c <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x3c>  // b.none
    1a08:	bl	0 <free>
    1a0c:	ldr	x0, [x19, #136]
    1a10:	add	x8, x19, #0x98
    1a14:	cmp	x0, x8
    1a18:	b.eq	1a20 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x50>  // b.none
    1a1c:	bl	0 <free>
    1a20:	ldr	x0, [x19, #112]
    1a24:	add	x8, x19, #0x80
    1a28:	cmp	x0, x8
    1a2c:	b.eq	1a34 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x64>  // b.none
    1a30:	bl	0 <free>
    1a34:	ldr	x0, [x19, #88]
    1a38:	add	x8, x19, #0x68
    1a3c:	cmp	x0, x8
    1a40:	b.eq	1a48 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x78>  // b.none
    1a44:	bl	0 <free>
    1a48:	ldr	x0, [x19, #40]
    1a4c:	add	x8, x19, #0x38
    1a50:	cmp	x0, x8
    1a54:	b.eq	1a5c <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x8c>  // b.none
    1a58:	bl	0 <free>
    1a5c:	mov	x0, x19
    1a60:	ldr	x19, [sp, #16]
    1a64:	ldp	x29, x30, [sp], #32
    1a68:	b	0 <_ZdlPv>
    1a6c:	ret

0000000000001a70 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE>:
    1a70:	stp	x29, x30, [sp, #-48]!
    1a74:	str	x21, [sp, #16]
    1a78:	stp	x20, x19, [sp, #32]
    1a7c:	mov	x29, sp
    1a80:	ldr	w8, [x1, #8]
    1a84:	cbz	w8, 1b04 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x94>
    1a88:	ldr	x21, [x1]
    1a8c:	mov	x20, x1
    1a90:	mov	x19, x0
    1a94:	ldr	x9, [x21]
    1a98:	ldr	x1, [x9]
    1a9c:	ldr	x9, [x0]
    1aa0:	cmp	x9, x1
    1aa4:	b.eq	1adc <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x6c>  // b.none
    1aa8:	ldrb	w8, [x9, #8]
    1aac:	cmp	w8, #0xf
    1ab0:	b.ne	1b14 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0xa4>  // b.any
    1ab4:	ldrb	w8, [x1, #8]
    1ab8:	cmp	w8, #0xf
    1abc:	b.ne	1b14 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0xa4>  // b.any
    1ac0:	mov	x0, x19
    1ac4:	mov	w2, wzr
    1ac8:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
    1acc:	ldr	w8, [x20, #8]
    1ad0:	cbz	w8, 1b04 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x94>
    1ad4:	ldr	x21, [x20]
    1ad8:	mov	x19, x0
    1adc:	add	x20, x21, x8, lsl #3
    1ae0:	ldr	x0, [x21], #8
    1ae4:	mov	x1, x19
    1ae8:	mov	x2, xzr
    1aec:	mov	x3, xzr
    1af0:	mov	x4, xzr
    1af4:	mov	x5, xzr
    1af8:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
    1afc:	cmp	x20, x21
    1b00:	b.ne	1ae0 <_ZL19replaceWithConstantPN4llvm8ConstantERNS_15SmallVectorImplIPNS_13CoroSubFnInstEEE+0x70>  // b.any
    1b04:	ldp	x20, x19, [sp, #32]
    1b08:	ldr	x21, [sp, #16]
    1b0c:	ldp	x29, x30, [sp], #48
    1b10:	ret
    1b14:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b18:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b20:	add	x0, x0, #0x0
    1b24:	add	x1, x1, #0x0
    1b28:	add	x3, x3, #0x0
    1b2c:	mov	w2, #0x3b                  	// #59
    1b30:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, e0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe0>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	100 <_ZNK4llvm10CoroIdInst7getInfoEv+0x100>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa0>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	120 <_ZNK4llvm10CoroIdInst7getInfoEv+0x120>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, c0 <_ZNK4llvm10CoroIdInst7getInfoEv+0xc0>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 138 <_ZNK4llvm10CoroIdInst7getInfoEv+0x138>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 158 <_ZNK4llvm10CoroIdInst7getInfoEv+0x158>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, ac <_ZNK4llvm10CoroIdInst7getInfoEv+0xac>
  98:	mov	x1, xzr
  9c:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  a0:	mov	x0, xzr
  a4:	mov	x1, xzr
  a8:	b	b4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xb4>
  ac:	cmp	w8, #0x6
  b0:	b.ne	178 <_ZNK4llvm10CoroIdInst7getInfoEv+0x178>  // b.any
  b4:	ldr	x19, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret
  c0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xa8                  	// #168
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e4:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x69                  	// #105
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 104:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x108                 	// #264
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 124:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	mov	w2, #0x16d                 	// #365
 134:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 138:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 13c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 140:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x8d                  	// #141
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 15c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x69                  	// #105
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 17c:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x108                 	// #264
 194:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13CoroSubFnInst8getIndexEv:

0000000000000000 <_ZNK4llvm13CoroSubFnInst8getIndexEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  14:	cbz	x0, 7c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x7c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	9c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x9c>  // b.any
  24:	ldr	w8, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w8, #0x40
  30:	b.hi	4c <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x4c>  // b.pmore
  34:	cbz	w8, dc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xdc>
  38:	ldr	x9, [x19]
  3c:	neg	x8, x8
  40:	lsl	x9, x9, x8
  44:	asr	x0, x9, x8
  48:	b	64 <_ZNK4llvm13CoroSubFnInst8getIndexEv+0x64>
  4c:	mov	x0, x19
  50:	bl	0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  54:	cmp	w0, #0x41
  58:	b.cs	fc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xfc>  // b.hs, b.nlast
  5c:	ldr	x8, [x19]
  60:	ldr	x0, [x8]
  64:	add	x8, x0, #0x1
  68:	cmp	x8, #0x3
  6c:	b.hi	bc <_ZNK4llvm13CoroSubFnInst8getIndexEv+0xbc>  // b.pmore
  70:	ldr	x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  80:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  84:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x108                 	// #264
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x34                  	// #52
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e0:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e4:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x307                 	// #775
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 100:	adrp	x1, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 104:	adrp	x3, 0 <_ZNK4llvm13CoroSubFnInst8getIndexEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x663                 	// #1635
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt16getMinSignedBitsEv:

0000000000000000 <_ZNK4llvm5APInt16getMinSignedBitsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cbz	w19, b0 <_ZNK4llvm5APInt16getMinSignedBitsEv+0xb0>
  14:	sub	w9, w19, #0x1
  18:	mov	w8, #0x1                   	// #1
  1c:	cmp	w19, #0x40
  20:	lsl	x8, x8, x9
  24:	b.hi	30 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x30>  // b.pmore
  28:	mov	x9, x0
  2c:	b	3c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x3c>
  30:	ldr	x10, [x0]
  34:	lsr	w9, w9, #6
  38:	add	x9, x10, w9, uxtw #3
  3c:	ldr	x9, [x9]
  40:	tst	x9, x8
  44:	b.eq	74 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x74>  // b.none
  48:	cmp	w19, #0x40
  4c:	b.hi	90 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x90>  // b.pmore
  50:	ldr	x8, [x0]
  54:	neg	x9, x19
  58:	lsl	x8, x8, x9
  5c:	mvn	x9, x8
  60:	cmn	x8, #0x1
  64:	clz	x8, x9
  68:	mov	w9, #0x40                  	// #64
  6c:	csel	w0, w9, w8, eq  // eq = none
  70:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  74:	cmp	w19, #0x40
  78:	b.hi	98 <_ZNK4llvm5APInt16getMinSignedBitsEv+0x98>  // b.pmore
  7c:	ldr	x8, [x0]
  80:	clz	x8, x8
  84:	add	w8, w19, w8
  88:	sub	w0, w8, #0x40
  8c:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  90:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  94:	b	9c <_ZNK4llvm5APInt16getMinSignedBitsEv+0x9c>
  98:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  9c:	sub	w8, w19, w0
  a0:	ldr	x19, [sp, #16]
  a4:	add	w0, w8, #0x1
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b4:	adrp	x1, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  b8:	adrp	x3, 0 <_ZNK4llvm5APInt16getMinSignedBitsEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x472                 	// #1138
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroFrame.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>:
       0:	stp	x29, x30, [sp, #-80]!
       4:	stp	x26, x25, [sp, #16]
       8:	stp	x24, x23, [sp, #32]
       c:	stp	x22, x21, [sp, #48]
      10:	stp	x20, x19, [sp, #64]
      14:	mov	x29, sp
      18:	mov	x19, x3
      1c:	mov	x22, x2
      20:	mov	x23, x1
      24:	mov	x20, x0
      28:	bl	0 <_ZN4llvm4dbgsEv>
      2c:	mov	x21, x0
      30:	ldp	x8, x0, [x0, #16]
      34:	sub	x8, x8, x0
      38:	cmp	x22, x8
      3c:	b.ls	5c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x5c>  // b.plast
      40:	mov	x0, x21
      44:	mov	x1, x23
      48:	mov	x2, x22
      4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      50:	mov	x21, x0
      54:	ldr	x0, [x0, #24]
      58:	b	78 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x78>
      5c:	cbz	x22, 78 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x78>
      60:	mov	x1, x23
      64:	mov	x2, x22
      68:	bl	0 <memcpy>
      6c:	ldr	x8, [x21, #24]
      70:	add	x0, x8, x22
      74:	str	x0, [x21, #24]
      78:	ldr	x8, [x21, #16]
      7c:	cmp	x8, x0
      80:	b.ne	a4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xa4>  // b.any
      84:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      88:	add	x1, x1, #0x0
      8c:	mov	w2, #0x1                   	// #1
      90:	mov	x0, x21
      94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      98:	ldr	w8, [x19, #16]
      9c:	cbnz	w8, c0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xc0>
      a0:	b	1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>
      a4:	mov	w8, #0x3a                  	// #58
      a8:	strb	w8, [x0]
      ac:	ldr	x8, [x21, #24]
      b0:	add	x8, x8, #0x1
      b4:	str	x8, [x21, #24]
      b8:	ldr	w8, [x19, #16]
      bc:	cbz	w8, 1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>
      c0:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      c4:	mov	x24, xzr
      c8:	sub	x25, x8, #0x1
      cc:	add	x21, x21, #0x0
      d0:	mov	w26, #0x20                  	// #32
      d4:	ldr	x9, [x19, #8]
      d8:	ubfx	x8, x24, #6, #26
      dc:	cmp	x9, x8
      e0:	b.ls	224 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x224>  // b.plast
      e4:	ldr	x9, [x19]
      e8:	ldr	x8, [x9, x8, lsl #3]
      ec:	lsr	x8, x8, x24
      f0:	tbz	w8, #0, 18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
      f4:	bl	0 <_ZN4llvm4dbgsEv>
      f8:	ldp	x9, x8, [x0, #16]
      fc:	mov	x22, x0
     100:	cmp	x9, x8
     104:	b.ne	120 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x120>  // b.any
     108:	mov	w2, #0x1                   	// #1
     10c:	mov	x0, x22
     110:	mov	x1, x21
     114:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     118:	mov	x22, x0
     11c:	b	130 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x130>
     120:	strb	w26, [x8]
     124:	ldr	x8, [x22, #24]
     128:	add	x8, x8, #0x1
     12c:	str	x8, [x22, #24]
     130:	ldr	w8, [x20, #8]
     134:	cmp	w8, w24
     138:	b.ls	244 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x244>  // b.plast
     13c:	ldr	x8, [x20]
     140:	ldr	x0, [x8, x24, lsl #3]
     144:	bl	0 <_ZNK4llvm5Value7getNameEv>
     148:	ldp	x9, x8, [x22, #16]
     14c:	mov	x23, x1
     150:	sub	x9, x9, x8
     154:	cmp	x1, x9
     158:	mov	x1, x0
     15c:	b.ls	170 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x170>  // b.plast
     160:	mov	x0, x22
     164:	mov	x2, x23
     168:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     16c:	b	18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
     170:	cbz	x23, 18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
     174:	mov	x0, x8
     178:	mov	x2, x23
     17c:	bl	0 <memcpy>
     180:	ldr	x8, [x22, #24]
     184:	add	x8, x8, x23
     188:	str	x8, [x22, #24]
     18c:	cmp	x25, x24
     190:	b.eq	1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>  // b.none
     194:	ldr	w8, [x19, #16]
     198:	add	x24, x24, #0x1
     19c:	cmp	w8, w24
     1a0:	b.hi	d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xd4>  // b.pmore
     1a4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1a8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1ac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1b0:	add	x0, x0, #0x0
     1b4:	add	x1, x1, #0x0
     1b8:	add	x3, x3, #0x0
     1bc:	mov	w2, #0x1f0                 	// #496
     1c0:	bl	0 <__assert_fail>
     1c4:	bl	0 <_ZN4llvm4dbgsEv>
     1c8:	ldp	x9, x8, [x0, #16]
     1cc:	cmp	x9, x8
     1d0:	b.ne	1f8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1f8>  // b.any
     1d4:	ldp	x20, x19, [sp, #64]
     1d8:	ldp	x22, x21, [sp, #48]
     1dc:	ldp	x24, x23, [sp, #32]
     1e0:	ldp	x26, x25, [sp, #16]
     1e4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1e8:	add	x1, x1, #0x0
     1ec:	mov	w2, #0x1                   	// #1
     1f0:	ldp	x29, x30, [sp], #80
     1f4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1f8:	mov	w9, #0xa                   	// #10
     1fc:	strb	w9, [x8]
     200:	ldr	x8, [x0, #24]
     204:	add	x8, x8, #0x1
     208:	str	x8, [x0, #24]
     20c:	ldp	x20, x19, [sp, #64]
     210:	ldp	x22, x21, [sp, #48]
     214:	ldp	x24, x23, [sp, #32]
     218:	ldp	x26, x25, [sp, #16]
     21c:	ldp	x29, x30, [sp], #80
     220:	ret
     224:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     228:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     22c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     230:	add	x0, x0, #0x0
     234:	add	x1, x1, #0x0
     238:	add	x3, x3, #0x0
     23c:	mov	w2, #0x1ab                 	// #427
     240:	bl	0 <__assert_fail>
     244:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     248:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     24c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     250:	add	x0, x0, #0x0
     254:	add	x1, x1, #0x0
     258:	add	x3, x3, #0x0
     25c:	mov	w2, #0x99                  	// #153
     260:	bl	0 <__assert_fail>

0000000000000264 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>:
     264:	stp	x29, x30, [sp, #-96]!
     268:	stp	x28, x27, [sp, #16]
     26c:	stp	x26, x25, [sp, #32]
     270:	stp	x24, x23, [sp, #48]
     274:	stp	x22, x21, [sp, #64]
     278:	stp	x20, x19, [sp, #80]
     27c:	mov	x29, sp
     280:	ldr	w25, [x0, #280]
     284:	cbz	w25, 3b0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x14c>
     288:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     28c:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     290:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     294:	mov	x19, x0
     298:	mov	x26, xzr
     29c:	mov	x27, xzr
     2a0:	add	x20, x20, #0x0
     2a4:	add	x21, x21, #0x0
     2a8:	add	x22, x22, #0x0
     2ac:	mov	w28, #0xa3a                 	// #2618
     2b0:	ldr	w8, [x19, #8]
     2b4:	cmp	w8, w27
     2b8:	b.ls	438 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1d4>  // b.plast
     2bc:	ldr	x8, [x19]
     2c0:	ldr	x24, [x8, x27, lsl #3]
     2c4:	bl	0 <_ZN4llvm4dbgsEv>
     2c8:	mov	x23, x0
     2cc:	mov	x0, x24
     2d0:	bl	0 <_ZNK4llvm5Value7getNameEv>
     2d4:	ldp	x9, x8, [x23, #16]
     2d8:	mov	x24, x1
     2dc:	sub	x9, x9, x8
     2e0:	cmp	x1, x9
     2e4:	mov	x1, x0
     2e8:	b.ls	304 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xa0>  // b.plast
     2ec:	mov	x0, x23
     2f0:	mov	x2, x24
     2f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2f8:	ldr	x8, [x0, #24]
     2fc:	mov	x23, x0
     300:	b	320 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xbc>
     304:	cbz	x24, 320 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xbc>
     308:	mov	x0, x8
     30c:	mov	x2, x24
     310:	bl	0 <memcpy>
     314:	ldr	x8, [x23, #24]
     318:	add	x8, x8, x24
     31c:	str	x8, [x23, #24]
     320:	ldr	x9, [x23, #16]
     324:	sub	x9, x9, x8
     328:	cmp	x9, #0x1
     32c:	b.hi	344 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xe0>  // b.pmore
     330:	mov	w2, #0x2                   	// #2
     334:	mov	x0, x23
     338:	mov	x1, x20
     33c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     340:	b	354 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xf0>
     344:	strh	w28, [x8]
     348:	ldr	x8, [x23, #24]
     34c:	add	x8, x8, #0x2
     350:	str	x8, [x23, #24]
     354:	ldr	w8, [x19, #280]
     358:	cmp	x27, x8
     35c:	b.cs	418 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1b4>  // b.hs, b.nlast
     360:	ldr	x8, [x19, #272]
     364:	mov	w2, #0xb                   	// #11
     368:	mov	x0, x19
     36c:	mov	x1, x21
     370:	add	x3, x8, x26
     374:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     378:	ldr	w8, [x19, #280]
     37c:	cmp	x27, x8
     380:	b.cs	418 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1b4>  // b.hs, b.nlast
     384:	ldr	x8, [x19, #272]
     388:	mov	w2, #0xb                   	// #11
     38c:	mov	x0, x19
     390:	mov	x1, x22
     394:	add	x8, x8, x26
     398:	add	x3, x8, #0x18
     39c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3a0:	add	x27, x27, #0x1
     3a4:	cmp	x25, x27
     3a8:	add	x26, x26, #0x38
     3ac:	b.ne	2b0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x4c>  // b.any
     3b0:	bl	0 <_ZN4llvm4dbgsEv>
     3b4:	ldp	x9, x8, [x0, #16]
     3b8:	cmp	x9, x8
     3bc:	b.ne	3e8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x184>  // b.any
     3c0:	ldp	x20, x19, [sp, #80]
     3c4:	ldp	x22, x21, [sp, #64]
     3c8:	ldp	x24, x23, [sp, #48]
     3cc:	ldp	x26, x25, [sp, #32]
     3d0:	ldp	x28, x27, [sp, #16]
     3d4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3d8:	add	x1, x1, #0x0
     3dc:	mov	w2, #0x1                   	// #1
     3e0:	ldp	x29, x30, [sp], #96
     3e4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3e8:	mov	w9, #0xa                   	// #10
     3ec:	strb	w9, [x8]
     3f0:	ldr	x8, [x0, #24]
     3f4:	add	x8, x8, #0x1
     3f8:	str	x8, [x0, #24]
     3fc:	ldp	x20, x19, [sp, #80]
     400:	ldp	x22, x21, [sp, #64]
     404:	ldp	x24, x23, [sp, #48]
     408:	ldp	x26, x25, [sp, #32]
     40c:	ldp	x28, x27, [sp, #16]
     410:	ldp	x29, x30, [sp], #96
     414:	ret
     418:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     41c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     420:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     424:	add	x0, x0, #0x0
     428:	add	x1, x1, #0x0
     42c:	add	x3, x3, #0x0
     430:	mov	w2, #0x99                  	// #153
     434:	bl	0 <__assert_fail>
     438:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     43c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     440:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     444:	add	x0, x0, #0x0
     448:	add	x1, x1, #0x0
     44c:	add	x3, x3, #0x0
     450:	mov	w2, #0x99                  	// #153
     454:	bl	0 <__assert_fail>

0000000000000458 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>:
     458:	str	d10, [sp, #-128]!
     45c:	stp	d9, d8, [sp, #16]
     460:	stp	x29, x30, [sp, #32]
     464:	stp	x28, x27, [sp, #48]
     468:	stp	x26, x25, [sp, #64]
     46c:	stp	x24, x23, [sp, #80]
     470:	stp	x22, x21, [sp, #96]
     474:	stp	x20, x19, [sp, #112]
     478:	mov	x29, sp
     47c:	sub	sp, sp, #0xad0
     480:	mov	x23, x1
     484:	mov	x19, x0
     488:	bl	0 <_ZN4llvm15LowerDbgDeclareERNS_8FunctionE>
     48c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     490:	ldr	d9, [x8]
     494:	add	x8, sp, #0xc8
     498:	mov	x9, x19
     49c:	add	x19, x8, #0x10
     4a0:	str	x19, [sp, #200]
     4a4:	str	d9, [sp, #208]
     4a8:	ldrb	w8, [x9, #18]
     4ac:	str	x9, [sp, #32]
     4b0:	tbnz	w8, #0, 4c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x68>
     4b4:	ldr	x22, [x9, #88]
     4b8:	mov	x8, x22
     4bc:	b	4f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x98>
     4c0:	ldr	x0, [sp, #32]
     4c4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     4c8:	ldr	x9, [sp, #32]
     4cc:	ldrb	w8, [x9, #18]
     4d0:	ldr	x22, [x9, #88]
     4d4:	tbnz	w8, #0, 4e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x88>
     4d8:	mov	x8, x22
     4dc:	b	4f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x98>
     4e0:	ldr	x0, [sp, #32]
     4e4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     4e8:	ldr	x9, [sp, #32]
     4ec:	ldr	x8, [x9, #88]
     4f0:	ldr	x9, [x9, #96]
     4f4:	mov	w10, #0x28                  	// #40
     4f8:	str	x23, [sp, #24]
     4fc:	madd	x20, x9, x10, x8
     500:	cmp	x20, x22
     504:	b.eq	730 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d8>  // b.none
     508:	mov	x0, x22
     50c:	bl	0 <_ZNK4llvm8Argument17hasSwiftErrorAttrEv>
     510:	tbnz	w0, #0, 524 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcc>
     514:	add	x22, x22, #0x28
     518:	cmp	x20, x22
     51c:	b.ne	508 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb0>  // b.any
     520:	b	730 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d8>
     524:	ldr	x8, [sp, #32]
     528:	ldr	x8, [x8, #80]
     52c:	ldrb	w9, [x8]
     530:	tbnz	w9, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
     534:	sub	x9, x8, #0x18
     538:	cmp	x8, #0x0
     53c:	csel	x0, xzr, x9, eq  // eq = none
     540:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
     544:	mov	x20, x0
     548:	bl	0 <_ZNK4llvm5Value10getContextEv>
     54c:	stp	x0, xzr, [sp, #504]
     550:	mov	w8, #0x200                 	// #512
     554:	add	x0, sp, #0x1e0
     558:	mov	x1, x20
     55c:	str	wzr, [sp, #520]
     560:	strb	wzr, [sp, #526]
     564:	stp	xzr, xzr, [sp, #488]
     568:	str	xzr, [sp, #480]
     56c:	strh	w8, [sp, #524]
     570:	str	xzr, [sp, #536]
     574:	str	xzr, [sp, #528]
     578:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     57c:	ldr	x8, [x22]
     580:	cbz	x8, 3f44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3aec>
     584:	ldr	w9, [x8, #8]
     588:	and	w10, w9, #0xff
     58c:	cmp	w10, #0xf
     590:	b.ne	3f64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b0c>  // b.any
     594:	ldr	x20, [x8, #24]
     598:	mov	w24, #0x101                 	// #257
     59c:	mov	w0, #0x40                  	// #64
     5a0:	mov	w1, #0x1                   	// #1
     5a4:	lsr	w21, w9, #8
     5a8:	stp	xzr, xzr, [sp, #408]
     5ac:	strh	w24, [sp, #424]
     5b0:	bl	0 <_ZN4llvm4UsernwEmj>
     5b4:	sub	x4, x29, #0xc8
     5b8:	mov	x1, x20
     5bc:	mov	w2, w21
     5c0:	mov	x3, xzr
     5c4:	mov	x5, xzr
     5c8:	mov	x23, x0
     5cc:	stp	xzr, xzr, [x29, #-200]
     5d0:	sturh	w24, [x29, #-184]
     5d4:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     5d8:	add	x0, sp, #0x1e0
     5dc:	add	x2, sp, #0x198
     5e0:	mov	x1, x23
     5e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5e8:	mov	x21, x0
     5ec:	mov	x0, x22
     5f0:	mov	x1, x21
     5f4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     5f8:	mov	x0, x20
     5fc:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
     600:	mov	x22, x0
     604:	mov	w0, #0x40                  	// #64
     608:	mov	w1, #0x2                   	// #2
     60c:	bl	0 <_ZN4llvm4UsernwEmj>
     610:	mov	x1, x22
     614:	mov	x2, x21
     618:	mov	w3, wzr
     61c:	mov	x4, xzr
     620:	mov	x23, x0
     624:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
     628:	add	x0, sp, #0x1e0
     62c:	sub	x2, x29, #0xc8
     630:	mov	x1, x23
     634:	stp	xzr, xzr, [x29, #-200]
     638:	sturh	w24, [x29, #-184]
     63c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     640:	ldr	x26, [sp, #24]
     644:	ldr	w8, [x26, #96]
     648:	cbz	w8, 66c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x214>
     64c:	ldr	x22, [x26, #88]
     650:	lsl	x23, x8, #3
     654:	ldr	x0, [x22], #8
     658:	mov	x1, x21
     65c:	mov	x2, x26
     660:	bl	5780 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
     664:	subs	x23, x23, #0x8
     668:	b.ne	654 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc>  // b.any
     66c:	ldr	w8, [x26, #16]
     670:	cbz	w8, 6e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x290>
     674:	ldr	x23, [x26, #8]
     678:	lsl	x24, x8, #3
     67c:	mov	w25, #0x101                 	// #257
     680:	ldr	x1, [x23], #8
     684:	add	x0, sp, #0x1e0
     688:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     68c:	mov	w0, #0x40                  	// #64
     690:	mov	w1, #0x1                   	// #1
     694:	stp	xzr, xzr, [sp, #408]
     698:	strh	w25, [sp, #424]
     69c:	bl	0 <_ZN4llvm4UsernwEmj>
     6a0:	sub	x3, x29, #0xc8
     6a4:	mov	x1, x20
     6a8:	mov	x2, x21
     6ac:	mov	x4, xzr
     6b0:	mov	x22, x0
     6b4:	stp	xzr, xzr, [x29, #-200]
     6b8:	sturh	w25, [x29, #-184]
     6bc:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     6c0:	add	x0, sp, #0x1e0
     6c4:	add	x2, sp, #0x198
     6c8:	mov	x1, x22
     6cc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     6d0:	mov	x1, x0
     6d4:	add	x0, sp, #0x1e0
     6d8:	mov	x2, x26
     6dc:	bl	5ae4 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
     6e0:	subs	x24, x24, #0x8
     6e4:	b.ne	680 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x228>  // b.any
     6e8:	ldp	w8, w9, [sp, #208]
     6ec:	cmp	w8, w9
     6f0:	b.cs	2874 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x241c>  // b.hs, b.nlast
     6f4:	ldr	x9, [sp, #200]
     6f8:	ldr	x23, [sp, #24]
     6fc:	str	x21, [x9, w8, uxtw #3]
     700:	ldp	w8, w9, [sp, #208]
     704:	cmp	w8, w9
     708:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
     70c:	add	w8, w8, #0x1
     710:	mov	x0, x21
     714:	mov	x1, x23
     718:	str	w8, [sp, #208]
     71c:	bl	55f8 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     720:	ldr	x1, [sp, #480]
     724:	cbz	x1, 730 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d8>
     728:	add	x0, sp, #0x1e0
     72c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     730:	ldr	x8, [sp, #32]
     734:	ldr	x8, [x8, #80]
     738:	ldrb	w9, [x8]
     73c:	tbnz	w9, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
     740:	sub	x9, x8, #0x18
     744:	cmp	x8, #0x0
     748:	csel	x8, xzr, x9, eq  // eq = none
     74c:	ldr	x21, [x8, #48]
     750:	add	x22, x8, #0x28
     754:	b	784 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32c>
     758:	ldr	x9, [sp, #200]
     75c:	str	x20, [x9, w8, uxtw #3]
     760:	ldp	w8, w9, [sp, #208]
     764:	cmp	w8, w9
     768:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
     76c:	add	w8, w8, #0x1
     770:	mov	x0, x20
     774:	mov	x1, x23
     778:	str	w8, [sp, #208]
     77c:	bl	55f8 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     780:	ldr	x21, [x21, #8]
     784:	cmp	x22, x21
     788:	b.eq	7ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x394>  // b.none
     78c:	ldrb	w8, [x21]
     790:	tbnz	w8, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     794:	sub	x8, x21, #0x18
     798:	cmp	x21, #0x0
     79c:	csel	x8, xzr, x8, eq  // eq = none
     7a0:	cbz	x21, 3df4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x399c>
     7a4:	ldrb	w9, [x8, #16]
     7a8:	cmp	w9, #0x37
     7ac:	csel	x20, x8, xzr, eq  // eq = none
     7b0:	cbz	x20, 780 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x328>
     7b4:	ldrh	w8, [x20, #18]
     7b8:	tbz	w8, #6, 780 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x328>
     7bc:	and	w8, w8, #0xffffffbf
     7c0:	strh	w8, [x20, #18]
     7c4:	ldp	w8, w9, [sp, #208]
     7c8:	cmp	w8, w9
     7cc:	b.cc	758 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x300>  // b.lo, b.ul, b.last
     7d0:	add	x0, sp, #0xc8
     7d4:	mov	w3, #0x8                   	// #8
     7d8:	mov	x1, x19
     7dc:	mov	x2, xzr
     7e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7e4:	ldr	w8, [sp, #208]
     7e8:	b	758 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x300>
     7ec:	ldr	w8, [sp, #208]
     7f0:	cbz	w8, 8c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x46c>
     7f4:	add	x8, sp, #0x1e0
     7f8:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     7fc:	ldr	d0, [x9]
     800:	add	x20, x8, #0x10
     804:	ldr	x8, [sp, #32]
     808:	add	x0, sp, #0x1e0
     80c:	str	wzr, [sp, #556]
     810:	str	xzr, [sp, #520]
     814:	stp	xzr, xzr, [sp, #504]
     818:	str	wzr, [sp, #528]
     81c:	strb	wzr, [sp, #552]
     820:	str	x20, [sp, #480]
     824:	str	d0, [sp, #488]
     828:	str	xzr, [sp, #536]
     82c:	str	x8, [sp, #544]
     830:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
     834:	ldr	x0, [sp, #200]
     838:	ldr	w1, [sp, #208]
     83c:	add	x2, sp, #0x1e0
     840:	mov	x3, xzr
     844:	bl	0 <_ZN4llvm15PromoteMemToRegENS_8ArrayRefIPNS_10AllocaInstEEERNS_13DominatorTreeEPNS_15AssumptionCacheE>
     848:	ldr	w8, [sp, #528]
     84c:	cbz	w8, 8a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x448>
     850:	ldr	x9, [sp, #512]
     854:	lsl	x22, x8, #4
     858:	add	x21, x9, #0x8
     85c:	b	878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x420>
     860:	mov	x0, x19
     864:	bl	0 <_ZdlPv>
     868:	str	xzr, [x21]
     86c:	subs	x22, x22, #0x10
     870:	add	x21, x21, #0x10
     874:	b.eq	8a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x448>  // b.none
     878:	ldur	x8, [x21, #-8]
     87c:	orr	x8, x8, #0x8
     880:	cmn	x8, #0x8
     884:	b.eq	86c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x414>  // b.none
     888:	ldr	x19, [x21]
     88c:	cbz	x19, 868 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x410>
     890:	ldr	x0, [x19, #24]
     894:	cbz	x0, 860 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x408>
     898:	bl	0 <_ZdlPv>
     89c:	b	860 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x408>
     8a0:	ldr	x0, [sp, #512]
     8a4:	bl	0 <_ZdlPv>
     8a8:	ldr	x8, [sp, #504]
     8ac:	ldr	x0, [sp, #480]
     8b0:	add	x8, x8, #0x1
     8b4:	cmp	x0, x20
     8b8:	str	x8, [sp, #504]
     8bc:	b.eq	8c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x46c>  // b.none
     8c0:	bl	0 <free>
     8c4:	ldr	x0, [sp, #200]
     8c8:	add	x8, sp, #0xc8
     8cc:	add	x8, x8, #0x10
     8d0:	cmp	x0, x8
     8d4:	b.eq	8dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x484>  // b.none
     8d8:	bl	0 <free>
     8dc:	ldr	w8, [x23, #168]
     8e0:	cbnz	w8, 8f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4a0>
     8e4:	ldr	x8, [x23, #208]
     8e8:	cbz	x8, 8f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4a0>
     8ec:	mov	x0, x23
     8f0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     8f4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     8f8:	ldr	w8, [x23, #96]
     8fc:	ldr	x12, [sp, #32]
     900:	adrp	x23, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     904:	add	x22, sp, #0x1e0
     908:	add	x23, x23, #0x0
     90c:	cbz	w8, c60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x808>
     910:	ldr	x9, [sp, #24]
     914:	adrp	x28, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     918:	lsl	x25, x8, #3
     91c:	mov	w27, #0x103                 	// #259
     920:	ldr	x24, [x9, #88]
     924:	mov	w26, #0x3                   	// #3
     928:	add	x28, x28, #0x0
     92c:	b	950 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4f8>
     930:	add	x1, x20, #0x18
     934:	add	x2, sp, #0x1e0
     938:	mov	x0, x19
     93c:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     940:	ldr	x12, [sp, #32]
     944:	subs	x25, x25, #0x8
     948:	add	x24, x24, #0x8
     94c:	b.eq	c60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x808>  // b.none
     950:	ldr	x19, [x24]
     954:	cbz	x19, 3dd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x397c>
     958:	ldur	x8, [x19, #-24]
     95c:	ldrb	w9, [x8, #16]
     960:	cmp	w9, #0x0
     964:	csel	x8, x8, xzr, eq  // eq = none
     968:	ldr	w8, [x8, #36]
     96c:	cmp	w8, #0x23
     970:	b.ne	b1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6c4>  // b.any
     974:	mov	x0, x19
     978:	mov	w1, wzr
     97c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     980:	cbz	x0, 3e34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39dc>
     984:	ldrb	w8, [x0, #16]
     988:	mov	x20, x0
     98c:	cmp	w8, #0x10
     990:	b.eq	b1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6c4>  // b.none
     994:	cmp	w8, #0x50
     998:	b.ne	3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>  // b.any
     99c:	ldur	x8, [x20, #-24]
     9a0:	cbz	x8, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
     9a4:	ldrb	w9, [x8, #16]
     9a8:	cbnz	w9, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
     9ac:	ldrb	w9, [x8, #33]
     9b0:	tbz	w9, #5, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
     9b4:	ldr	w8, [x8, #36]
     9b8:	cmp	w8, #0x20
     9bc:	b.ne	3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>  // b.any
     9c0:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9c4:	add	x8, x8, #0x0
     9c8:	stp	x8, xzr, [x29, #-200]
     9cc:	sturh	w27, [x29, #-184]
     9d0:	ldr	x21, [x20, #40]
     9d4:	ldr	x8, [x21, #48]
     9d8:	ldrb	w9, [x8]
     9dc:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     9e0:	sub	x9, x8, #0x18
     9e4:	cmp	x8, #0x0
     9e8:	csel	x8, xzr, x9, eq  // eq = none
     9ec:	cmp	x8, x20
     9f0:	b.eq	a08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5b0>  // b.none
     9f4:	add	x1, x20, #0x18
     9f8:	sub	x2, x29, #0xc8
     9fc:	mov	x0, x21
     a00:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     a04:	b	a20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5c8>
     a08:	mov	x0, x21
     a0c:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     a10:	cbz	x0, 9f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x59c>
     a14:	sub	x1, x29, #0xc8
     a18:	mov	x0, x21
     a1c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     a20:	ldp	x8, x9, [x20, #32]
     a24:	add	x9, x9, #0x28
     a28:	cmp	x9, x8
     a2c:	b.eq	a48 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5f0>  // b.none
     a30:	ldrb	w9, [x8]
     a34:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     a38:	sub	x9, x8, #0x18
     a3c:	cmp	x8, #0x0
     a40:	csel	x21, xzr, x9, eq  // eq = none
     a44:	b	a4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5f4>
     a48:	mov	x21, xzr
     a4c:	ldurb	w8, [x29, #-184]
     a50:	stp	x23, xzr, [sp, #200]
     a54:	strh	w27, [sp, #216]
     a58:	cmp	w8, #0x1
     a5c:	b.eq	a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x61c>  // b.none
     a60:	cbnz	w8, a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x630>
     a64:	mov	w8, #0x100                 	// #256
     a68:	stp	xzr, xzr, [sp, #480]
     a6c:	strh	w8, [sp, #496]
     a70:	b	acc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x674>
     a74:	ldur	q0, [sp, #200]
     a78:	ldr	x8, [sp, #216]
     a7c:	str	q0, [x22]
     a80:	str	x8, [sp, #496]
     a84:	b	acc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x674>
     a88:	ldurb	w9, [x29, #-183]
     a8c:	ldur	x10, [x29, #-200]
     a90:	strb	w26, [sp, #496]
     a94:	cmp	w9, #0x1
     a98:	sub	x9, x29, #0xc8
     a9c:	csel	x9, x10, x9, eq  // eq = none
     aa0:	mov	w10, #0x2                   	// #2
     aa4:	csel	w8, w8, w10, eq  // eq = none
     aa8:	cmp	w8, #0x2
     aac:	stp	x23, x9, [sp, #480]
     ab0:	strb	w8, [sp, #497]
     ab4:	b.ne	acc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x674>  // b.any
     ab8:	ldrb	w8, [x9, #16]
     abc:	cbz	w8, 3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>
     ac0:	ldrb	w8, [x9, #17]
     ac4:	cmp	w8, #0x1
     ac8:	b.eq	3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>  // b.none
     acc:	ldr	x20, [x21, #40]
     ad0:	ldr	x8, [x20, #48]
     ad4:	ldrb	w9, [x8]
     ad8:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     adc:	sub	x9, x8, #0x18
     ae0:	cmp	x8, #0x0
     ae4:	csel	x8, xzr, x9, eq  // eq = none
     ae8:	cmp	x8, x21
     aec:	b.eq	b04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6ac>  // b.none
     af0:	add	x1, x21, #0x18
     af4:	add	x2, sp, #0x1e0
     af8:	mov	x0, x20
     afc:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     b00:	b	b1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6c4>
     b04:	mov	x0, x20
     b08:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     b0c:	cbz	x0, af0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x698>
     b10:	add	x1, sp, #0x1e0
     b14:	mov	x0, x20
     b18:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     b1c:	stp	x28, xzr, [x29, #-200]
     b20:	sturh	w27, [x29, #-184]
     b24:	ldr	x20, [x19, #40]
     b28:	ldr	x8, [x20, #48]
     b2c:	ldrb	w9, [x8]
     b30:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     b34:	sub	x9, x8, #0x18
     b38:	cmp	x8, #0x0
     b3c:	csel	x8, xzr, x9, eq  // eq = none
     b40:	cmp	x8, x19
     b44:	b.eq	b5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x704>  // b.none
     b48:	add	x1, x19, #0x18
     b4c:	sub	x2, x29, #0xc8
     b50:	mov	x0, x20
     b54:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     b58:	b	b74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x71c>
     b5c:	mov	x0, x20
     b60:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     b64:	cbz	x0, b48 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6f0>
     b68:	sub	x1, x29, #0xc8
     b6c:	mov	x0, x20
     b70:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     b74:	ldp	x8, x9, [x19, #32]
     b78:	add	x9, x9, #0x28
     b7c:	cmp	x9, x8
     b80:	b.eq	b9c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x744>  // b.none
     b84:	ldrb	w9, [x8]
     b88:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     b8c:	sub	x9, x8, #0x18
     b90:	cmp	x8, #0x0
     b94:	csel	x20, xzr, x9, eq  // eq = none
     b98:	b	ba0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x748>
     b9c:	mov	x20, xzr
     ba0:	ldurb	w8, [x29, #-184]
     ba4:	stp	x23, xzr, [sp, #200]
     ba8:	strh	w27, [sp, #216]
     bac:	cmp	w8, #0x1
     bb0:	b.eq	bc8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x770>  // b.none
     bb4:	cbnz	w8, bdc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x784>
     bb8:	mov	w8, #0x100                 	// #256
     bbc:	stp	xzr, xzr, [sp, #480]
     bc0:	strh	w8, [sp, #496]
     bc4:	b	c20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7c8>
     bc8:	ldur	q0, [sp, #200]
     bcc:	ldr	x8, [sp, #216]
     bd0:	str	q0, [x22]
     bd4:	str	x8, [sp, #496]
     bd8:	b	c20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7c8>
     bdc:	ldurb	w9, [x29, #-183]
     be0:	ldur	x10, [x29, #-200]
     be4:	strb	w26, [sp, #496]
     be8:	cmp	w9, #0x1
     bec:	sub	x9, x29, #0xc8
     bf0:	csel	x9, x10, x9, eq  // eq = none
     bf4:	mov	w10, #0x2                   	// #2
     bf8:	csel	w8, w8, w10, eq  // eq = none
     bfc:	cmp	w8, #0x2
     c00:	stp	x23, x9, [sp, #480]
     c04:	strb	w8, [sp, #497]
     c08:	b.ne	c20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7c8>  // b.any
     c0c:	ldrb	w8, [x9, #16]
     c10:	cbz	w8, 3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>
     c14:	ldrb	w8, [x9, #17]
     c18:	cmp	w8, #0x1
     c1c:	b.eq	3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>  // b.none
     c20:	ldr	x19, [x20, #40]
     c24:	ldr	x8, [x19, #48]
     c28:	ldrb	w9, [x8]
     c2c:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     c30:	sub	x9, x8, #0x18
     c34:	cmp	x8, #0x0
     c38:	csel	x8, xzr, x9, eq  // eq = none
     c3c:	cmp	x8, x20
     c40:	b.ne	930 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4d8>  // b.any
     c44:	mov	x0, x19
     c48:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     c4c:	cbz	x0, 930 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4d8>
     c50:	add	x1, sp, #0x1e0
     c54:	mov	x0, x19
     c58:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     c5c:	b	940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4e8>
     c60:	ldr	x8, [sp, #24]
     c64:	ldr	w8, [x8, #16]
     c68:	cbz	w8, df8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9a0>
     c6c:	ldr	x9, [sp, #24]
     c70:	adrp	x24, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c74:	lsl	x21, x8, #3
     c78:	add	x24, x24, #0x0
     c7c:	ldr	x20, [x9, #8]
     c80:	mov	w25, #0x103                 	// #259
     c84:	mov	w27, #0x100                 	// #256
     c88:	mov	w28, #0x2                   	// #2
     c8c:	mov	w22, #0x3                   	// #3
     c90:	b	cb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x85c>
     c94:	add	x1, x26, #0x18
     c98:	add	x2, sp, #0x1e0
     c9c:	mov	x0, x19
     ca0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     ca4:	ldr	x12, [sp, #32]
     ca8:	subs	x21, x21, #0x8
     cac:	add	x20, x20, #0x8
     cb0:	b.eq	df8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9a0>  // b.none
     cb4:	ldr	x26, [x20]
     cb8:	stp	x24, xzr, [x29, #-200]
     cbc:	sturh	w25, [x29, #-184]
     cc0:	ldr	x19, [x26, #40]
     cc4:	ldr	x8, [x19, #48]
     cc8:	ldrb	w9, [x8]
     ccc:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     cd0:	sub	x9, x8, #0x18
     cd4:	cmp	x8, #0x0
     cd8:	csel	x8, xzr, x9, eq  // eq = none
     cdc:	cmp	x8, x26
     ce0:	b.eq	cf8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8a0>  // b.none
     ce4:	add	x1, x26, #0x18
     ce8:	sub	x2, x29, #0xc8
     cec:	mov	x0, x19
     cf0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
     cf4:	b	d10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8b8>
     cf8:	mov	x0, x19
     cfc:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     d00:	cbz	x0, ce4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x88c>
     d04:	sub	x1, x29, #0xc8
     d08:	mov	x0, x19
     d0c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     d10:	ldp	x8, x9, [x26, #32]
     d14:	add	x9, x9, #0x28
     d18:	cmp	x9, x8
     d1c:	b.eq	d38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8e0>  // b.none
     d20:	ldrb	w9, [x8]
     d24:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     d28:	sub	x9, x8, #0x18
     d2c:	cmp	x8, #0x0
     d30:	csel	x26, xzr, x9, eq  // eq = none
     d34:	b	d3c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x8e4>
     d38:	mov	x26, xzr
     d3c:	ldurb	w8, [x29, #-184]
     d40:	stp	x23, xzr, [sp, #200]
     d44:	strh	w25, [sp, #216]
     d48:	cmp	w8, #0x1
     d4c:	b.eq	d60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x908>  // b.none
     d50:	cbnz	w8, d78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x920>
     d54:	stp	xzr, xzr, [sp, #480]
     d58:	strh	w27, [sp, #496]
     d5c:	b	db8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x960>
     d60:	ldur	q0, [sp, #200]
     d64:	ldr	x8, [sp, #216]
     d68:	add	x9, sp, #0x1e0
     d6c:	str	q0, [x9]
     d70:	str	x8, [sp, #496]
     d74:	b	db8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x960>
     d78:	ldurb	w9, [x29, #-183]
     d7c:	ldur	x10, [x29, #-200]
     d80:	strb	w22, [sp, #496]
     d84:	cmp	w9, #0x1
     d88:	sub	x9, x29, #0xc8
     d8c:	csel	w8, w8, w28, eq  // eq = none
     d90:	csel	x9, x10, x9, eq  // eq = none
     d94:	cmp	w8, #0x2
     d98:	stp	x23, x9, [sp, #480]
     d9c:	strb	w8, [sp, #497]
     da0:	b.ne	db8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x960>  // b.any
     da4:	ldrb	w8, [x9, #16]
     da8:	cbz	w8, 3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>
     dac:	ldrb	w8, [x9, #17]
     db0:	cmp	w8, #0x1
     db4:	b.eq	3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>  // b.none
     db8:	ldr	x19, [x26, #40]
     dbc:	ldr	x8, [x19, #48]
     dc0:	ldrb	w9, [x8]
     dc4:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     dc8:	sub	x9, x8, #0x18
     dcc:	cmp	x8, #0x0
     dd0:	csel	x8, xzr, x9, eq  // eq = none
     dd4:	cmp	x8, x26
     dd8:	b.ne	c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x83c>  // b.any
     ddc:	mov	x0, x19
     de0:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     de4:	cbz	x0, c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x83c>
     de8:	add	x1, sp, #0x1e0
     dec:	mov	x0, x19
     df0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     df4:	b	ca4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x84c>
     df8:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     dfc:	ldr	d8, [x8]
     e00:	add	x8, sp, #0xc8
     e04:	add	x19, x8, #0x10
     e08:	str	x19, [sp, #200]
     e0c:	str	d8, [sp, #208]
     e10:	ldr	x20, [x12, #80]
     e14:	add	x8, x12, #0x48
     e18:	str	x8, [sp, #40]
     e1c:	cmp	x8, x20
     e20:	b.eq	16d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x127c>  // b.none
     e24:	mov	w8, wzr
     e28:	mov	w9, #0x8                   	// #8
     e2c:	b	e5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa04>
     e30:	ldr	x9, [sp, #200]
     e34:	str	x21, [x9, w8, uxtw #3]
     e38:	ldp	w8, w9, [sp, #208]
     e3c:	cmp	w8, w9
     e40:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
     e44:	add	w8, w8, #0x1
     e48:	str	w8, [sp, #208]
     e4c:	ldr	x20, [x20, #8]
     e50:	ldr	x10, [sp, #40]
     e54:	cmp	x10, x20
     e58:	b.eq	ecc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa74>  // b.none
     e5c:	ldrb	w10, [x20]
     e60:	tbnz	w10, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
     e64:	sub	x10, x20, #0x18
     e68:	cmp	x20, #0x0
     e6c:	csel	x21, xzr, x10, eq  // eq = none
     e70:	ldr	x10, [x21, #48]
     e74:	ldrb	w11, [x10]
     e78:	tbnz	w11, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
     e7c:	sub	x11, x10, #0x18
     e80:	cmp	x10, #0x0
     e84:	csel	x11, xzr, x11, eq  // eq = none
     e88:	cbz	x10, 39b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x355c>
     e8c:	ldrb	w10, [x11, #16]
     e90:	cmp	w10, #0x4f
     e94:	b.ne	e4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9f4>  // b.any
     e98:	ldr	w10, [x11, #20]
     e9c:	tst	w10, #0xffffffe
     ea0:	b.eq	e4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9f4>  // b.none
     ea4:	cmp	w8, w9
     ea8:	b.cc	e30 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9d8>  // b.lo, b.ul, b.last
     eac:	add	x0, sp, #0xc8
     eb0:	mov	w3, #0x8                   	// #8
     eb4:	mov	x1, x19
     eb8:	mov	x2, xzr
     ebc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ec0:	ldr	x12, [sp, #32]
     ec4:	ldr	w8, [sp, #208]
     ec8:	b	e30 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9d8>
     ecc:	ldr	x20, [sp, #200]
     ed0:	cbz	w8, 16b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1260>
     ed4:	add	x8, x20, w8, uxtw #3
     ed8:	str	x8, [sp, #48]
     edc:	add	x8, sp, #0x1e0
     ee0:	sub	x9, x29, #0xc8
     ee4:	mov	w19, #0x18                  	// #24
     ee8:	add	x21, x8, #0x10
     eec:	add	x8, x9, #0x12
     ef0:	str	x8, [sp, #96]
     ef4:	str	x21, [sp, #16]
     ef8:	b	f0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xab4>
     efc:	ldr	x8, [sp, #48]
     f00:	add	x20, x20, #0x8
     f04:	cmp	x20, x8
     f08:	b.eq	16b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1258>  // b.none
     f0c:	ldr	x0, [x20]
     f10:	str	x0, [x29, #8]
     f14:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     f18:	mov	x24, x0
     f1c:	cbz	x0, fa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb48>
     f20:	ldrb	w8, [x24, #16]
     f24:	cmp	w8, #0x5a
     f28:	b.ne	fa8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb50>  // b.any
     f2c:	ldr	x23, [x24]
     f30:	mov	w8, #0x101                 	// #257
     f34:	mov	w0, #0x40                  	// #64
     f38:	stp	xzr, xzr, [sp, #480]
     f3c:	strh	w8, [sp, #496]
     f40:	bl	0 <_ZN4llvm4UsernwEm>
     f44:	mov	w2, #0x37                  	// #55
     f48:	mov	x1, x23
     f4c:	mov	x3, xzr
     f50:	mov	w4, wzr
     f54:	mov	x5, x24
     f58:	mov	x22, x0
     f5c:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
     f60:	mov	w25, #0x1                   	// #1
     f64:	add	x1, sp, #0x1e0
     f68:	mov	x0, x22
     f6c:	str	w25, [x22, #56]
     f70:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     f74:	ldr	w1, [x22, #56]
     f78:	mov	w2, #0x1                   	// #1
     f7c:	mov	x0, x22
     f80:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
     f84:	mov	x0, x22
     f88:	mov	x1, x24
     f8c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     f90:	mov	x0, x24
     f94:	mov	x1, x22
     f98:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     f9c:	b	fb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb5c>
     fa0:	mov	w25, wzr
     fa4:	b	fb0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb58>
     fa8:	mov	w25, wzr
     fac:	mov	x24, xzr
     fb0:	mov	x22, xzr
     fb4:	ldr	x23, [x29, #8]
     fb8:	mov	x0, x23
     fbc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     fc0:	ldr	x23, [x23, #8]
     fc4:	cbz	x23, fec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb94>
     fc8:	mov	x0, x23
     fcc:	bl	0 <_ZNK4llvm3Use7getUserEv>
     fd0:	cbz	x0, 3b74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x371c>
     fd4:	ldrb	w8, [x0, #16]
     fd8:	cmp	w8, #0x18
     fdc:	b.cc	fc0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb68>  // b.lo, b.ul, b.last
     fe0:	sub	w8, w8, #0x19
     fe4:	cmp	w8, #0xb
     fe8:	b.cs	fc0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb68>  // b.hs, b.nlast
     fec:	add	x0, sp, #0x1e0
     ff0:	mov	x1, x23
     ff4:	mov	x2, xzr
     ff8:	str	w25, [sp, #56]
     ffc:	stp	x20, x24, [sp, #64]
    1000:	str	x21, [sp, #480]
    1004:	str	d8, [sp, #488]
    1008:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    100c:	ldr	w8, [sp, #488]
    1010:	ldr	x20, [x29, #8]
    1014:	cbz	w8, 1684 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x122c>
    1018:	ldr	x9, [sp, #480]
    101c:	add	x8, x9, x8, lsl #3
    1020:	str	x8, [sp, #80]
    1024:	ldr	x23, [x9]
    1028:	mov	x0, x20
    102c:	str	x9, [sp, #88]
    1030:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    1034:	mov	x25, x0
    1038:	cbnz	x22, 1068 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc10>
    103c:	ldrb	w8, [x25, #16]
    1040:	sub	w8, w8, #0x22
    1044:	cmp	w8, #0x38
    1048:	b.hi	1664 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x120c>  // b.pmore
    104c:	mov	w9, #0x1                   	// #1
    1050:	lsl	x8, x9, x8
    1054:	mov	x9, #0x1                   	// #1
    1058:	movk	x9, #0x600, lsl #32
    105c:	movk	x9, #0x100, lsl #48
    1060:	tst	x8, x9
    1064:	b.eq	1664 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x120c>  // b.none
    1068:	mov	x0, x23
    106c:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    1070:	mov	w8, #0x101                 	// #257
    1074:	stp	xzr, xzr, [x29, #-200]
    1078:	sturh	w8, [x29, #-184]
    107c:	ldr	x26, [x23, #56]
    1080:	mov	x27, x0
    1084:	mov	w0, #0x40                  	// #64
    1088:	bl	0 <_Znwm>
    108c:	sub	x2, x29, #0xc8
    1090:	mov	x1, x27
    1094:	mov	x3, x26
    1098:	mov	x4, x20
    109c:	mov	x24, x0
    10a0:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    10a4:	mov	x0, x23
    10a8:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    10ac:	cbz	x0, 3c2c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37d4>
    10b0:	ldrb	w8, [x0, #16]
    10b4:	cmp	w8, #0x22
    10b8:	b.eq	117c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd24>  // b.none
    10bc:	cmp	w8, #0x20
    10c0:	b.eq	10d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc80>  // b.none
    10c4:	cmp	w8, #0x1d
    10c8:	b.ne	3c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37bc>  // b.any
    10cc:	mov	x1, x24
    10d0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    10d4:	b	1184 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd2c>
    10d8:	ldrb	w8, [x0, #18]
    10dc:	tbz	w8, #0, 3d4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38f4>
    10e0:	ldr	w8, [x0, #20]
    10e4:	add	x9, x0, #0x18
    10e8:	and	x10, x8, #0xfffffff
    10ec:	mneg	x8, x10, x19
    10f0:	add	x8, x9, x8
    10f4:	ldr	x11, [x8]
    10f8:	neg	x10, x10
    10fc:	cbz	x11, 1128 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcd0>
    1100:	madd	x12, x10, x19, x9
    1104:	ldp	x13, x11, [x12, #8]
    1108:	and	x11, x11, #0xfffffffffffffffc
    110c:	str	x13, [x11]
    1110:	ldr	x12, [x12, #8]
    1114:	cbz	x12, 1128 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcd0>
    1118:	ldr	x13, [x12, #16]
    111c:	and	x13, x13, #0x3
    1120:	orr	x11, x13, x11
    1124:	str	x11, [x12, #16]
    1128:	str	x24, [x8]
    112c:	mov	x11, x24
    1130:	ldr	x12, [x11, #8]!
    1134:	madd	x13, x10, x19, x9
    1138:	str	x12, [x13, #8]!
    113c:	cbz	x12, 1158 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd00>
    1140:	tst	x13, #0x3
    1144:	b.ne	3c8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3834>  // b.any
    1148:	ldr	x14, [x12, #16]
    114c:	and	x14, x14, #0x3
    1150:	orr	x13, x14, x13
    1154:	str	x13, [x12, #16]
    1158:	tst	x11, #0x3
    115c:	b.ne	3c8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3834>  // b.any
    1160:	madd	x9, x10, x19, x9
    1164:	ldr	x10, [x9, #16]!
    1168:	and	x10, x10, #0x3
    116c:	orr	x10, x10, x11
    1170:	str	x10, [x9]
    1174:	str	x8, [x11]
    1178:	b	1184 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd2c>
    117c:	mov	x1, x24
    1180:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1184:	ldr	x8, [x20, #48]
    1188:	ldrb	w9, [x8]
    118c:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    1190:	mov	w9, wzr
    1194:	b	11bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd64>
    1198:	and	w11, w11, #0xfffffff
    119c:	mneg	x11, x11, x19
    11a0:	add	x10, x10, x11
    11a4:	madd	x10, x12, x19, x10
    11a8:	add	x10, x10, w9, uxtw #3
    11ac:	str	x24, [x10, #8]
    11b0:	ldr	x8, [x8, #8]
    11b4:	ldrb	w10, [x8]
    11b8:	tbnz	w10, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    11bc:	cbz	x8, 3a14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35bc>
    11c0:	ldurb	w10, [x8, #-8]
    11c4:	cmp	w10, #0x4f
    11c8:	b.ne	1268 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe10>  // b.any
    11cc:	sub	x10, x8, #0x18
    11d0:	cmp	x22, x10
    11d4:	b.eq	1268 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe10>  // b.none
    11d8:	ldr	w11, [x10, #20]
    11dc:	tbnz	w11, #30, 11f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd98>
    11e0:	and	x12, x11, #0xfffffff
    11e4:	mneg	x12, x12, x19
    11e8:	add	x13, x10, x12
    11ec:	b	11f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd9c>
    11f0:	ldur	x13, [x10, #-8]
    11f4:	ldr	w12, [x10, #56]
    11f8:	madd	x13, x12, x19, x13
    11fc:	add	x13, x13, w9, uxtw #3
    1200:	ldr	x13, [x13, #8]
    1204:	cmp	x13, x23
    1208:	b.eq	1254 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdfc>  // b.none
    120c:	and	x13, x11, #0xfffffff
    1210:	cbz	w13, 3974 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x351c>
    1214:	mneg	x14, x13, x19
    1218:	orr	x15, xzr, #0x8
    121c:	mov	x9, xzr
    1220:	add	x14, x10, x14
    1224:	madd	x15, x12, x19, x15
    1228:	mov	x16, x14
    122c:	tbz	w11, #30, 1234 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xddc>
    1230:	ldur	x16, [x10, #-8]
    1234:	add	x16, x16, x15
    1238:	ldr	x16, [x16, x9, lsl #3]
    123c:	cmp	x16, x23
    1240:	b.eq	125c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe04>  // b.none
    1244:	add	x9, x9, #0x1
    1248:	cmp	x13, x9
    124c:	b.ne	1228 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdd0>  // b.any
    1250:	b	3974 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x351c>
    1254:	cmn	w9, #0x1
    1258:	b.eq	3974 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x351c>  // b.none
    125c:	tbz	w11, #30, 1198 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd40>
    1260:	ldur	x10, [x10, #-8]
    1264:	b	11a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd4c>
    1268:	cbz	x22, 12b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe5c>
    126c:	ldr	x0, [sp, #72]
    1270:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    1274:	mov	x25, x0
    1278:	mov	w0, #0x38                  	// #56
    127c:	mov	w1, #0x1                   	// #1
    1280:	bl	0 <_ZN4llvm4UsernwEmj>
    1284:	mov	x1, x20
    1288:	mov	x2, x24
    128c:	mov	x26, x0
    1290:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_>
    1294:	mov	x0, x25
    1298:	mov	x1, x26
    129c:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
    12a0:	mov	x0, x22
    12a4:	mov	x1, x25
    12a8:	mov	x2, x24
    12ac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    12b0:	b	135c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf04>
    12b4:	cbz	x25, 3d0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38b4>
    12b8:	ldrb	w8, [x25, #16]
    12bc:	sub	w9, w8, #0x4b
    12c0:	cmp	w9, #0x1
    12c4:	b.ls	12ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe94>  // b.plast
    12c8:	cmp	w8, #0x22
    12cc:	b.ne	3d8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3934>  // b.any
    12d0:	ldr	w9, [x25, #20]
    12d4:	and	x8, x9, #0xfffffff
    12d8:	cbz	w8, 3da4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x394c>
    12dc:	tbnz	w9, #30, 12f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe9c>
    12e0:	mneg	x8, x8, x19
    12e4:	add	x8, x25, x8
    12e8:	b	12f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xea0>
    12ec:	sub	x8, x25, #0x18
    12f0:	b	12f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xea0>
    12f4:	ldur	x8, [x25, #-8]
    12f8:	ldr	x26, [x8]
    12fc:	mov	w8, #0x101                 	// #257
    1300:	mov	w0, #0x38                  	// #56
    1304:	mov	w1, #0x1                   	// #1
    1308:	stp	xzr, xzr, [x29, #-200]
    130c:	sturh	w8, [x29, #-184]
    1310:	bl	0 <_ZN4llvm4UsernwEmj>
    1314:	sub	x6, x29, #0xc8
    1318:	mov	w1, #0x33                  	// #51
    131c:	mov	w5, #0x1                   	// #1
    1320:	mov	x2, x26
    1324:	mov	x3, xzr
    1328:	mov	x4, xzr
    132c:	mov	x7, x24
    1330:	mov	x25, x0
    1334:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
    1338:	cbz	x25, 3d2c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38d4>
    133c:	mov	w0, #0x38                  	// #56
    1340:	mov	w1, #0x2                   	// #2
    1344:	bl	0 <_ZN4llvm4UsernwEmj>
    1348:	mov	w3, #0x2                   	// #2
    134c:	mov	x1, x25
    1350:	mov	x2, x20
    1354:	mov	x4, x24
    1358:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjS4_>
    135c:	mov	x0, x20
    1360:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1364:	sub	x8, x29, #0x60
    1368:	str	x8, [sp, #408]
    136c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1370:	add	x8, x8, #0x0
    1374:	stp	x0, x1, [x29, #-96]
    1378:	str	x8, [sp, #416]
    137c:	mov	w8, #0x305                 	// #773
    1380:	mov	x0, x23
    1384:	strh	w8, [sp, #424]
    1388:	bl	0 <_ZNK4llvm5Value7getNameEv>
    138c:	ldrb	w8, [sp, #424]
    1390:	stp	x0, x1, [sp, #152]
    1394:	cmp	w8, #0x1
    1398:	b.eq	13b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf58>  // b.none
    139c:	cbnz	w8, 13d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf80>
    13a0:	mov	w8, #0x100                 	// #256
    13a4:	stp	xzr, xzr, [x29, #-200]
    13a8:	sturh	w8, [x29, #-184]
    13ac:	b	1424 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfcc>
    13b0:	add	x10, sp, #0x98
    13b4:	stp	x10, xzr, [x29, #-200]
    13b8:	mov	w10, #0x105                 	// #261
    13bc:	ldr	w8, [sp, #104]
    13c0:	ldrh	w9, [sp, #108]
    13c4:	sturh	w10, [x29, #-184]
    13c8:	ldr	x10, [sp, #96]
    13cc:	strh	w9, [x10, #4]
    13d0:	str	w8, [x10]
    13d4:	b	1424 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfcc>
    13d8:	ldrb	w9, [sp, #425]
    13dc:	ldr	x10, [sp, #408]
    13e0:	cmp	w9, #0x1
    13e4:	mov	w9, #0x2                   	// #2
    13e8:	csel	w9, w8, w9, eq  // eq = none
    13ec:	add	x8, sp, #0x198
    13f0:	csel	x8, x10, x8, eq  // eq = none
    13f4:	add	x10, sp, #0x98
    13f8:	sturb	w9, [x29, #-184]
    13fc:	cmp	w9, #0x2
    1400:	mov	w9, #0x5                   	// #5
    1404:	stp	x8, x10, [x29, #-200]
    1408:	sturb	w9, [x29, #-183]
    140c:	b.ne	1424 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfcc>  // b.any
    1410:	ldrb	w9, [x8, #16]
    1414:	cbz	w9, 3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>
    1418:	ldrb	w8, [x8, #17]
    141c:	cmp	w8, #0x1
    1420:	b.eq	3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>  // b.none
    1424:	sub	x1, x29, #0xc8
    1428:	mov	x0, x24
    142c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    1430:	ldr	x8, [x20, #48]
    1434:	ldrb	w9, [x8]
    1438:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    143c:	sub	x9, x8, #0x18
    1440:	cmp	x8, #0x0
    1444:	csel	x25, xzr, x9, eq  // eq = none
    1448:	cbz	x8, 39b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x355c>
    144c:	ldrb	w8, [x25, #16]
    1450:	cmp	w8, #0x4f
    1454:	b.ne	3b94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x373c>  // b.any
    1458:	ldr	w9, [x25, #20]
    145c:	and	x11, x9, #0xfffffff
    1460:	cbz	w11, 2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2438>
    1464:	ldr	w13, [x25, #56]
    1468:	mneg	x10, x11, x19
    146c:	add	x12, x11, x11, lsl #1
    1470:	orr	x14, xzr, #0x8
    1474:	mov	w26, wzr
    1478:	mov	x8, xzr
    147c:	add	x10, x25, x10
    1480:	lsl	x12, x12, #3
    1484:	madd	x13, x13, x19, x14
    1488:	mov	x14, x10
    148c:	tbz	w9, #30, 1494 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x103c>
    1490:	ldur	x14, [x25, #-8]
    1494:	ldr	x14, [x14, x13]
    1498:	cmp	x14, x24
    149c:	b.eq	14b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1060>  // b.none
    14a0:	add	x8, x8, #0x18
    14a4:	add	w26, w26, #0x1
    14a8:	cmp	x12, x8
    14ac:	add	x13, x13, #0x8
    14b0:	b.ne	1488 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1030>  // b.any
    14b4:	b	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2438>
    14b8:	cmp	w11, w26
    14bc:	b.ls	2890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2438>  // b.plast
    14c0:	tbz	w9, #30, 14c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1070>
    14c4:	ldur	x10, [x25, #-8]
    14c8:	ldr	x27, [x10, x8]
    14cc:	ldr	x28, [x27]
    14d0:	mov	x0, x27
    14d4:	bl	0 <_ZNK4llvm5Value7getNameEv>
    14d8:	sub	x8, x29, #0x60
    14dc:	str	x8, [sp, #408]
    14e0:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    14e4:	add	x8, x8, #0x0
    14e8:	stp	x0, x1, [x29, #-96]
    14ec:	str	x8, [sp, #416]
    14f0:	mov	w8, #0x305                 	// #773
    14f4:	mov	x0, x20
    14f8:	strh	w8, [sp, #424]
    14fc:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1500:	ldrb	w8, [sp, #424]
    1504:	stp	x0, x1, [sp, #152]
    1508:	cmp	w8, #0x1
    150c:	b.eq	1524 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10cc>  // b.none
    1510:	cbnz	w8, 154c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10f4>
    1514:	mov	w8, #0x100                 	// #256
    1518:	stp	xzr, xzr, [x29, #-200]
    151c:	sturh	w8, [x29, #-184]
    1520:	b	1598 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1140>
    1524:	add	x10, sp, #0x98
    1528:	stp	x10, xzr, [x29, #-200]
    152c:	mov	w10, #0x105                 	// #261
    1530:	ldr	w8, [sp, #104]
    1534:	ldrh	w9, [sp, #108]
    1538:	sturh	w10, [x29, #-184]
    153c:	ldr	x10, [sp, #96]
    1540:	strh	w9, [x10, #4]
    1544:	str	w8, [x10]
    1548:	b	1598 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1140>
    154c:	ldrb	w9, [sp, #425]
    1550:	ldr	x10, [sp, #408]
    1554:	cmp	w9, #0x1
    1558:	mov	w9, #0x2                   	// #2
    155c:	csel	w9, w8, w9, eq  // eq = none
    1560:	add	x8, sp, #0x198
    1564:	csel	x8, x10, x8, eq  // eq = none
    1568:	add	x10, sp, #0x98
    156c:	sturb	w9, [x29, #-184]
    1570:	cmp	w9, #0x2
    1574:	mov	w9, #0x5                   	// #5
    1578:	stp	x8, x10, [x29, #-200]
    157c:	sturb	w9, [x29, #-183]
    1580:	b.ne	1598 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1140>  // b.any
    1584:	ldrb	w9, [x8, #16]
    1588:	cbz	w9, 3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>
    158c:	ldrb	w8, [x8, #17]
    1590:	cmp	w8, #0x1
    1594:	b.eq	3a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35dc>  // b.none
    1598:	ldr	x8, [x24, #48]
    159c:	ldrb	w9, [x8]
    15a0:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    15a4:	sub	x9, x8, #0x18
    15a8:	cmp	x8, #0x0
    15ac:	mov	w0, #0x40                  	// #64
    15b0:	csel	x21, xzr, x9, eq  // eq = none
    15b4:	bl	0 <_ZN4llvm4UsernwEm>
    15b8:	mov	w2, #0x37                  	// #55
    15bc:	mov	x1, x28
    15c0:	mov	x3, xzr
    15c4:	mov	w4, wzr
    15c8:	mov	x5, x21
    15cc:	mov	x20, x0
    15d0:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
    15d4:	mov	w8, #0x1                   	// #1
    15d8:	sub	x1, x29, #0xc8
    15dc:	mov	x0, x20
    15e0:	str	w8, [x20, #56]
    15e4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    15e8:	ldr	w1, [x20, #56]
    15ec:	mov	w2, #0x1                   	// #1
    15f0:	mov	x0, x20
    15f4:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
    15f8:	mov	x0, x20
    15fc:	mov	x1, x27
    1600:	mov	x2, x23
    1604:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1608:	mov	x0, x25
    160c:	mov	w1, w26
    1610:	mov	x2, x20
    1614:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1618:	ldp	x8, x9, [x25, #32]
    161c:	ldr	x20, [x29, #8]
    1620:	add	x9, x9, #0x28
    1624:	cmp	x9, x8
    1628:	b.eq	39b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x355c>  // b.none
    162c:	ldrb	w9, [x8]
    1630:	tbnz	w9, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    1634:	cbz	x8, 39b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x355c>
    1638:	sub	x8, x8, #0x18
    163c:	ldrb	w9, [x8, #16]
    1640:	cmp	w9, #0x4f
    1644:	csel	x25, x8, xzr, eq  // eq = none
    1648:	cmp	x25, x22
    164c:	b.ne	1458 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1000>  // b.any
    1650:	ldp	x8, x9, [sp, #80]
    1654:	add	x9, x9, #0x8
    1658:	cmp	x9, x8
    165c:	b.ne	1024 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xbcc>  // b.any
    1660:	b	1684 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x122c>
    1664:	mov	x0, x23
    1668:	mov	x1, x20
    166c:	mov	x2, xzr
    1670:	mov	x3, xzr
    1674:	mov	x4, xzr
    1678:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
    167c:	mov	x24, x0
    1680:	b	135c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xf04>
    1684:	ldr	w8, [sp, #56]
    1688:	tbz	w8, #0, 1694 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x123c>
    168c:	ldr	x0, [sp, #72]
    1690:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1694:	ldr	x0, [sp, #480]
    1698:	ldr	x21, [sp, #16]
    169c:	ldr	x20, [sp, #64]
    16a0:	cmp	x0, x21
    16a4:	b.eq	efc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xaa4>  // b.none
    16a8:	bl	0 <free>
    16ac:	b	efc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xaa4>
    16b0:	ldr	x20, [sp, #200]
    16b4:	ldr	x12, [sp, #32]
    16b8:	add	x8, sp, #0xc8
    16bc:	add	x8, x8, #0x10
    16c0:	cmp	x20, x8
    16c4:	b.eq	16d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x127c>  // b.none
    16c8:	mov	x0, x20
    16cc:	bl	0 <free>
    16d0:	ldr	x12, [sp, #32]
    16d4:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    16d8:	ldr	d10, [x8]
    16dc:	add	x21, sp, #0x1e0
    16e0:	add	x19, x21, #0x10
    16e4:	str	x19, [sp, #480]
    16e8:	str	d10, [sp, #488]
    16ec:	ldr	x20, [x12, #80]
    16f0:	ldr	x8, [sp, #40]
    16f4:	cmp	x8, x20
    16f8:	b.eq	17a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x134c>  // b.none
    16fc:	mov	w8, wzr
    1700:	mov	w9, #0x20                  	// #32
    1704:	ldrb	w10, [x20]
    1708:	tbnz	w10, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    170c:	sub	x10, x20, #0x18
    1710:	cmp	x20, #0x0
    1714:	csel	x22, xzr, x10, eq  // eq = none
    1718:	cmp	w8, w9
    171c:	b.cs	1754 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12fc>  // b.hs, b.nlast
    1720:	ldr	x9, [sp, #480]
    1724:	str	x22, [x9, w8, uxtw #3]
    1728:	ldr	w8, [sp, #488]
    172c:	ldr	w9, [sp, #492]
    1730:	cmp	w8, w9
    1734:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    1738:	add	x8, x8, #0x1
    173c:	str	w8, [sp, #488]
    1740:	ldr	x20, [x20, #8]
    1744:	ldr	x10, [sp, #40]
    1748:	cmp	x10, x20
    174c:	b.ne	1704 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12ac>  // b.any
    1750:	b	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>
    1754:	add	x0, sp, #0x1e0
    1758:	mov	w3, #0x8                   	// #8
    175c:	mov	x1, x19
    1760:	mov	x2, xzr
    1764:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1768:	ldr	w8, [sp, #488]
    176c:	b	1720 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12c8>
    1770:	ldr	x19, [sp, #480]
    1774:	clz	x9, x8
    1778:	mov	w10, #0x7e                  	// #126
    177c:	sub	x2, x10, x9, lsl #1
    1780:	add	x20, x19, x8, lsl #3
    1784:	mov	x0, x19
    1788:	mov	x1, x20
    178c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1790:	mov	x0, x19
    1794:	mov	x1, x20
    1798:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    179c:	ldr	w25, [sp, #488]
    17a0:	b	17a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1350>
    17a4:	mov	w25, wzr
    17a8:	add	x22, x21, #0x120
    17ac:	mov	w8, w25
    17b0:	str	d10, [sp, #760]
    17b4:	str	x22, [sp, #752]
    17b8:	str	x8, [sp, #48]
    17bc:	cbz	w25, 19ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1554>
    17c0:	cmp	w25, #0x21
    17c4:	b.cc	18c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1468>  // b.lo, b.ul, b.last
    17c8:	ldr	x10, [sp, #48]
    17cc:	mov	w8, #0x40                  	// #64
    17d0:	mov	w9, #0xffffffff            	// #-1
    17d4:	cmp	x10, #0x40
    17d8:	csel	x8, x10, x8, hi  // hi = pmore
    17dc:	cmp	x8, x9
    17e0:	csel	x20, x8, x9, cc  // cc = lo, ul, last
    17e4:	mov	w8, #0x38                  	// #56
    17e8:	mul	x0, x20, x8
    17ec:	bl	0 <malloc>
    17f0:	cbnz	x0, 18b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1458>
    17f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    17f8:	add	x0, x0, #0x0
    17fc:	mov	w1, #0x1                   	// #1
    1800:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1804:	ldr	w9, [sp, #760]
    1808:	ldr	x19, [sp, #752]
    180c:	cbz	w9, 189c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1444>
    1810:	mov	w10, #0x38                  	// #56
    1814:	mov	x8, xzr
    1818:	madd	x9, x9, x10, x19
    181c:	mov	x10, x19
    1820:	ldr	q0, [x19, x8]
    1824:	str	q0, [x8]
    1828:	ldr	w11, [x10, #16]
    182c:	str	w11, [x8, #16]
    1830:	ldur	q0, [x10, #24]
    1834:	stp	xzr, xzr, [x10]
    1838:	str	wzr, [x10, #16]
    183c:	stur	q0, [x8, #24]
    1840:	ldr	w11, [x10, #40]
    1844:	str	w11, [x8, #40]
    1848:	ldrh	w11, [x10, #48]
    184c:	stp	xzr, xzr, [x10, #24]
    1850:	str	wzr, [x10, #40]
    1854:	add	x10, x10, #0x38
    1858:	cmp	x10, x9
    185c:	strh	w11, [x8, #48]
    1860:	add	x8, x8, #0x38
    1864:	b.ne	1820 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13c8>  // b.any
    1868:	ldr	w8, [sp, #760]
    186c:	ldr	x19, [sp, #752]
    1870:	cbz	w8, 189c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1444>
    1874:	mov	w9, #0x38                  	// #56
    1878:	mul	x23, x8, x9
    187c:	add	x24, x19, x23
    1880:	ldur	x0, [x24, #-32]
    1884:	bl	0 <free>
    1888:	ldur	x0, [x24, #-56]
    188c:	bl	0 <free>
    1890:	subs	x23, x23, #0x38
    1894:	b.ne	187c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1424>  // b.any
    1898:	ldr	x19, [sp, #752]
    189c:	cmp	x19, x22
    18a0:	b.eq	18ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1454>  // b.none
    18a4:	mov	x0, x19
    18a8:	bl	0 <free>
    18ac:	mov	x0, xzr
    18b0:	ldr	w8, [sp, #760]
    18b4:	str	x0, [sp, #752]
    18b8:	str	w20, [sp, #764]
    18bc:	b	18cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1474>
    18c0:	mov	x8, xzr
    18c4:	mov	w20, #0x20                  	// #32
    18c8:	mov	x0, x22
    18cc:	ldr	x9, [sp, #48]
    18d0:	cmp	x8, x9
    18d4:	b.eq	191c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14c4>  // b.none
    18d8:	ldr	x10, [sp, #48]
    18dc:	mov	w9, #0x38                  	// #56
    18e0:	mov	x11, #0x2493                	// #9363
    18e4:	movk	x11, #0x9249, lsl #16
    18e8:	sub	x10, x10, x8
    18ec:	madd	x0, x8, x9, x0
    18f0:	mul	x8, x10, x9
    18f4:	movk	x11, #0x4924, lsl #32
    18f8:	sub	x8, x8, #0x38
    18fc:	movk	x11, #0x2492, lsl #48
    1900:	lsr	x8, x8, #3
    1904:	umulh	x8, x8, x11
    1908:	orr	x10, xzr, #0x38
    190c:	madd	x2, x8, x9, x10
    1910:	mov	w1, wzr
    1914:	bl	0 <memset>
    1918:	ldr	w20, [sp, #764]
    191c:	cmp	w20, w25
    1920:	b.cc	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.lo, b.ul, b.last
    1924:	mov	x20, xzr
    1928:	mov	w22, #0x38                  	// #56
    192c:	mov	w23, #0x1                   	// #1
    1930:	str	w25, [sp, #760]
    1934:	ldr	x24, [sp, #752]
    1938:	mov	w1, w25
    193c:	mov	w2, wzr
    1940:	madd	x19, x20, x22, x24
    1944:	mov	x0, x19
    1948:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    194c:	add	x0, x19, #0x18
    1950:	mov	w1, w25
    1954:	mov	w2, wzr
    1958:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    195c:	ldr	x8, [x19]
    1960:	cbz	x8, 3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>
    1964:	madd	x9, x20, x22, x24
    1968:	ldr	x10, [x9, #8]
    196c:	ubfx	x9, x20, #6, #26
    1970:	cmp	x10, x9
    1974:	b.ls	3a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x363c>  // b.plast
    1978:	lsl	x9, x9, #3
    197c:	ldr	x10, [x8, x9]
    1980:	lsl	x11, x23, x20
    1984:	add	x20, x20, #0x1
    1988:	orr	x10, x10, x11
    198c:	ldr	x11, [sp, #48]
    1990:	str	x10, [x8, x9]
    1994:	cmp	x20, x11
    1998:	b.eq	19ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1554>  // b.none
    199c:	ldr	w8, [sp, #760]
    19a0:	cmp	x20, x8
    19a4:	b.cc	1934 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14dc>  // b.lo, b.ul, b.last
    19a8:	b	1c04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ac>
    19ac:	ldr	x5, [sp, #24]
    19b0:	ldr	w14, [x5, #16]
    19b4:	cbz	w14, 1a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15fc>
    19b8:	ldr	x8, [x5, #8]
    19bc:	ldr	x9, [sp, #480]
    19c0:	ldr	w10, [sp, #488]
    19c4:	ldr	w11, [sp, #760]
    19c8:	ldr	x12, [sp, #752]
    19cc:	mov	w13, #0x38                  	// #56
    19d0:	add	x14, x8, x14, lsl #3
    19d4:	add	x15, x9, x10, lsl #3
    19d8:	mov	w16, #0x1                   	// #1
    19dc:	ldr	x17, [x8]
    19e0:	ldr	x18, [x17, #40]
    19e4:	mov	x17, x9
    19e8:	cbz	w10, 1a1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15c4>
    19ec:	mov	x17, x9
    19f0:	mov	x0, x10
    19f4:	lsr	x1, x0, #1
    19f8:	add	x2, x17, x1, lsl #3
    19fc:	ldr	x3, [x2], #8
    1a00:	mvn	x4, x1
    1a04:	add	x0, x0, x4
    1a08:	cmp	x3, x18
    1a0c:	csel	x0, x0, x1, cc  // cc = lo, ul, last
    1a10:	csel	x17, x2, x17, cc  // cc = lo, ul, last
    1a14:	cmp	x0, #0x0
    1a18:	b.gt	19f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x159c>
    1a1c:	cmp	x17, x15
    1a20:	b.eq	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.none
    1a24:	ldr	x0, [x17]
    1a28:	cmp	x0, x18
    1a2c:	b.ne	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.any
    1a30:	sub	x17, x17, x9
    1a34:	asr	x17, x17, #3
    1a38:	cmp	x17, x11
    1a3c:	b.cs	1c04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ac>  // b.hs, b.nlast
    1a40:	add	x8, x8, #0x8
    1a44:	madd	x17, x17, x13, x12
    1a48:	cmp	x8, x14
    1a4c:	strb	w16, [x17, #49]
    1a50:	b.ne	19dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1584>  // b.any
    1a54:	ldr	w8, [x5, #96]
    1a58:	cbz	w8, 1c24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17cc>
    1a5c:	ldr	x9, [sp, #24]
    1a60:	mov	w22, #0x38                  	// #56
    1a64:	mov	w24, #0x1                   	// #1
    1a68:	ldr	x20, [x9, #88]
    1a6c:	add	x23, x20, x8, lsl #3
    1a70:	b	1a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x163c>
    1a74:	ldr	x9, [sp, #752]
    1a78:	madd	x1, x8, x22, x9
    1a7c:	add	x0, x1, #0x18
    1a80:	strb	w24, [x1, #48]
    1a84:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1a88:	add	x20, x20, #0x8
    1a8c:	cmp	x20, x23
    1a90:	b.eq	1c24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17cc>  // b.none
    1a94:	ldr	x19, [x20]
    1a98:	ldr	w11, [sp, #488]
    1a9c:	ldr	x8, [sp, #480]
    1aa0:	ldr	x9, [x19, #40]
    1aa4:	cbz	w11, 1adc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1684>
    1aa8:	mov	x10, x8
    1aac:	mov	x12, x11
    1ab0:	lsr	x13, x12, #1
    1ab4:	add	x14, x10, x13, lsl #3
    1ab8:	ldr	x15, [x14], #8
    1abc:	mvn	x16, x13
    1ac0:	add	x12, x12, x16
    1ac4:	cmp	x15, x9
    1ac8:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    1acc:	csel	x10, x14, x10, cc  // cc = lo, ul, last
    1ad0:	cmp	x12, #0x0
    1ad4:	b.gt	1ab0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1658>
    1ad8:	b	1ae4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x168c>
    1adc:	mov	x11, xzr
    1ae0:	mov	x10, x8
    1ae4:	add	x11, x8, x11, lsl #3
    1ae8:	cmp	x10, x11
    1aec:	b.eq	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.none
    1af0:	ldr	x11, [x10]
    1af4:	cmp	x11, x9
    1af8:	b.ne	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.any
    1afc:	ldr	w9, [sp, #760]
    1b00:	sub	x8, x10, x8
    1b04:	asr	x8, x8, #3
    1b08:	cmp	x8, x9
    1b0c:	b.cs	1c04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ac>  // b.hs, b.nlast
    1b10:	ldr	x9, [sp, #752]
    1b14:	madd	x1, x8, x22, x9
    1b18:	add	x0, x1, #0x18
    1b1c:	strb	w24, [x1, #48]
    1b20:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b24:	cbz	x19, 3dd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x397c>
    1b28:	ldur	x8, [x19, #-24]
    1b2c:	ldrb	w9, [x8, #16]
    1b30:	cmp	w9, #0x0
    1b34:	csel	x8, x8, xzr, eq  // eq = none
    1b38:	ldr	w8, [x8, #36]
    1b3c:	cmp	w8, #0x23
    1b40:	b.ne	1a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1630>  // b.any
    1b44:	mov	x0, x19
    1b48:	mov	w1, wzr
    1b4c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b50:	cbz	x0, 3e34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39dc>
    1b54:	ldrb	w8, [x0, #16]
    1b58:	cmp	w8, #0x10
    1b5c:	b.eq	1a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1630>  // b.none
    1b60:	cmp	w8, #0x50
    1b64:	b.ne	3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>  // b.any
    1b68:	ldur	x8, [x0, #-24]
    1b6c:	cbz	x8, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
    1b70:	ldrb	w9, [x8, #16]
    1b74:	cbnz	w9, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
    1b78:	ldrb	w9, [x8, #33]
    1b7c:	tbz	w9, #5, 3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>
    1b80:	ldr	w8, [x8, #36]
    1b84:	cmp	w8, #0x20
    1b88:	b.ne	3d6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3914>  // b.any
    1b8c:	ldr	x9, [x0, #40]
    1b90:	ldr	w11, [sp, #488]
    1b94:	ldr	x8, [sp, #480]
    1b98:	cbz	w11, 1bd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1778>
    1b9c:	mov	x10, x8
    1ba0:	mov	x12, x11
    1ba4:	lsr	x13, x12, #1
    1ba8:	add	x14, x10, x13, lsl #3
    1bac:	ldr	x15, [x14], #8
    1bb0:	mvn	x16, x13
    1bb4:	add	x12, x12, x16
    1bb8:	cmp	x15, x9
    1bbc:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    1bc0:	csel	x10, x14, x10, cc  // cc = lo, ul, last
    1bc4:	cmp	x12, #0x0
    1bc8:	b.gt	1ba4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x174c>
    1bcc:	b	1bd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1780>
    1bd0:	mov	x11, xzr
    1bd4:	mov	x10, x8
    1bd8:	add	x11, x8, x11, lsl #3
    1bdc:	cmp	x10, x11
    1be0:	b.eq	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.none
    1be4:	ldr	x11, [x10]
    1be8:	cmp	x11, x9
    1bec:	b.ne	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.any
    1bf0:	ldr	w9, [sp, #760]
    1bf4:	sub	x8, x10, x8
    1bf8:	asr	x8, x8, #3
    1bfc:	cmp	x8, x9
    1c00:	b.cc	1a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x161c>  // b.lo, b.ul, b.last
    1c04:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c08:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c0c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c10:	add	x0, x0, #0x0
    1c14:	add	x1, x1, #0x0
    1c18:	add	x3, x3, #0x0
    1c1c:	mov	w2, #0x95                  	// #149
    1c20:	bl	0 <__assert_fail>
    1c24:	add	x8, x21, #0x110
    1c28:	str	w25, [sp, #16]
    1c2c:	stp	x8, xzr, [sp]
    1c30:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
    1c34:	ldr	x27, [x27]
    1c38:	adrp	x26, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c3c:	add	x26, x26, #0x0
    1c40:	b	1c48 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17f0>
    1c44:	tbz	w21, #0, 237c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f24>
    1c48:	ldrb	w8, [x27]
    1c4c:	cbz	w8, 1cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x189c>
    1c50:	mov	x0, x26
    1c54:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1c58:	tbz	w0, #0, 1cbc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1864>
    1c5c:	bl	0 <_ZN4llvm4dbgsEv>
    1c60:	ldp	x9, x8, [x0, #16]
    1c64:	sub	x9, x9, x8
    1c68:	cmp	x9, #0x9
    1c6c:	b.hi	1c84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x182c>  // b.pmore
    1c70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c74:	mov	w2, #0xa                   	// #10
    1c78:	add	x1, x1, #0x0
    1c7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c80:	b	1ca8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1850>
    1c84:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1c88:	add	x9, x9, #0x0
    1c8c:	ldr	x9, [x9]
    1c90:	mov	w10, #0x206e                	// #8302
    1c94:	strh	w10, [x8, #8]
    1c98:	str	x9, [x8]
    1c9c:	ldr	x8, [x0, #24]
    1ca0:	add	x8, x8, #0xa
    1ca4:	str	x8, [x0, #24]
    1ca8:	ldr	x8, [sp, #8]
    1cac:	add	w8, w8, #0x1
    1cb0:	sxtw	x1, w8
    1cb4:	str	x8, [sp, #8]
    1cb8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1cbc:	ldrb	w8, [x27]
    1cc0:	cbz	w8, 1cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x189c>
    1cc4:	mov	x0, x26
    1cc8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1ccc:	tbz	w0, #0, 1cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x189c>
    1cd0:	bl	0 <_ZN4llvm4dbgsEv>
    1cd4:	ldp	x9, x8, [x0, #16]
    1cd8:	sub	x9, x9, x8
    1cdc:	cmp	x9, #0xe
    1ce0:	b.hi	2350 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ef8>  // b.pmore
    1ce4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1ce8:	mov	w2, #0xf                   	// #15
    1cec:	add	x1, x1, #0x0
    1cf0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1cf4:	ldr	w8, [sp, #16]
    1cf8:	cbz	w8, 237c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f24>
    1cfc:	mov	w21, wzr
    1d00:	mov	x22, xzr
    1d04:	b	1d18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18c0>
    1d08:	ldp	x8, x22, [sp, #48]
    1d0c:	add	x22, x22, #0x1
    1d10:	cmp	x22, x8
    1d14:	b.eq	1c44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ec>  // b.none
    1d18:	ldr	w8, [sp, #760]
    1d1c:	cmp	x22, x8
    1d20:	b.cs	1c04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ac>  // b.hs, b.nlast
    1d24:	cbz	w8, 3af4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x369c>
    1d28:	ldr	w8, [sp, #488]
    1d2c:	mov	w23, #0x38                  	// #56
    1d30:	cmp	w8, w22
    1d34:	b.ls	3b14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36bc>  // b.plast
    1d38:	ldr	x8, [sp, #480]
    1d3c:	ldr	x19, [sp, #752]
    1d40:	ldr	x0, [x8, x22, lsl #3]
    1d44:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    1d48:	str	x22, [sp, #56]
    1d4c:	cbz	x0, 1d08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18b0>
    1d50:	mov	x25, x0
    1d54:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    1d58:	cbz	w0, 1d08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18b0>
    1d5c:	madd	x19, x22, x23, x19
    1d60:	add	x8, x19, #0x18
    1d64:	stp	x8, x19, [sp, #80]
    1d68:	add	x8, x19, #0x30
    1d6c:	mov	x20, xzr
    1d70:	str	x8, [sp, #72]
    1d74:	mov	w8, w0
    1d78:	str	x8, [sp, #64]
    1d7c:	str	x25, [sp, #96]
    1d80:	mov	x0, x25
    1d84:	mov	w1, w20
    1d88:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    1d8c:	ldr	w10, [sp, #488]
    1d90:	ldr	x8, [sp, #480]
    1d94:	mov	x23, x0
    1d98:	cbz	w10, 1dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1978>
    1d9c:	mov	x9, x8
    1da0:	mov	x11, x10
    1da4:	lsr	x12, x11, #1
    1da8:	add	x13, x9, x12, lsl #3
    1dac:	ldr	x14, [x13], #8
    1db0:	mvn	x15, x12
    1db4:	add	x11, x11, x15
    1db8:	cmp	x14, x23
    1dbc:	csel	x11, x11, x12, cc  // cc = lo, ul, last
    1dc0:	csel	x9, x13, x9, cc  // cc = lo, ul, last
    1dc4:	cmp	x11, #0x0
    1dc8:	b.gt	1da4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x194c>
    1dcc:	b	1dd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1980>
    1dd0:	mov	x10, xzr
    1dd4:	mov	x9, x8
    1dd8:	add	x10, x8, x10, lsl #3
    1ddc:	cmp	x9, x10
    1de0:	b.eq	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.none
    1de4:	ldr	x10, [x9]
    1de8:	cmp	x10, x23
    1dec:	b.ne	39d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x357c>  // b.any
    1df0:	ldr	w10, [sp, #760]
    1df4:	sub	x22, x9, x8
    1df8:	asr	x28, x22, #3
    1dfc:	str	w21, [x29, #8]
    1e00:	cmp	x28, x10
    1e04:	b.cs	1c04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x17ac>  // b.hs, b.nlast
    1e08:	mov	x21, x26
    1e0c:	ldr	x26, [sp, #752]
    1e10:	mov	w10, #0x38                  	// #56
    1e14:	stp	xzr, xzr, [sp, #200]
    1e18:	madd	x25, x28, x10, x26
    1e1c:	mov	x8, x25
    1e20:	ldr	w9, [x8, #16]!
    1e24:	str	w9, [sp, #216]
    1e28:	cbz	w9, 1e64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a0c>
    1e2c:	ldr	w8, [x8]
    1e30:	add	w8, w8, #0x3f
    1e34:	lsr	w24, w8, #6
    1e38:	lsl	x19, x24, #3
    1e3c:	mov	x0, x19
    1e40:	bl	0 <malloc>
    1e44:	cbnz	x0, 1e78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a20>
    1e48:	cbz	w24, 1e6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a14>
    1e4c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1e50:	mov	w1, #0x1                   	// #1
    1e54:	add	x0, x0, #0x0
    1e58:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1e5c:	mov	x0, xzr
    1e60:	b	1e78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a20>
    1e64:	stp	xzr, xzr, [sp, #200]
    1e68:	b	1e8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a34>
    1e6c:	mov	w0, #0x1                   	// #1
    1e70:	bl	0 <malloc>
    1e74:	cbz	x0, 1e4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19f4>
    1e78:	stp	x0, x24, [sp, #200]
    1e7c:	ldr	x1, [x25]
    1e80:	mov	x2, x19
    1e84:	bl	0 <memcpy>
    1e88:	mov	w10, #0x38                  	// #56
    1e8c:	madd	x8, x28, x10, x26
    1e90:	stp	xzr, xzr, [x29, #-200]
    1e94:	ldr	w9, [x8, #40]!
    1e98:	sub	x19, x8, #0x10
    1e9c:	stur	w9, [x29, #-184]
    1ea0:	cbz	w9, 1edc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a84>
    1ea4:	ldr	w8, [x8]
    1ea8:	add	w8, w8, #0x3f
    1eac:	lsr	w27, w8, #6
    1eb0:	lsl	x24, x27, #3
    1eb4:	mov	x0, x24
    1eb8:	bl	0 <malloc>
    1ebc:	cbnz	x0, 1ef4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a9c>
    1ec0:	cbz	w27, 1ee8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a90>
    1ec4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1ec8:	mov	w1, #0x1                   	// #1
    1ecc:	add	x0, x0, #0x0
    1ed0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1ed4:	mov	x0, xzr
    1ed8:	b	1ef4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a9c>
    1edc:	mov	x24, x27
    1ee0:	stp	xzr, xzr, [x29, #-200]
    1ee4:	b	1f0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ab4>
    1ee8:	mov	w0, #0x1                   	// #1
    1eec:	bl	0 <malloc>
    1ef0:	cbz	x0, 1ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a6c>
    1ef4:	stp	x0, x27, [x29, #-200]
    1ef8:	ldr	x1, [x19]
    1efc:	mov	x2, x24
    1f00:	bl	0 <memcpy>
    1f04:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1f08:	ldr	x24, [x24]
    1f0c:	ldr	x27, [sp, #88]
    1f10:	mov	x0, x25
    1f14:	mov	x1, x27
    1f18:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f1c:	ldr	x1, [sp, #80]
    1f20:	mov	x0, x19
    1f24:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f28:	ldr	x8, [sp, #72]
    1f2c:	ldrb	w8, [x8]
    1f30:	cbz	w8, 1f40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ae8>
    1f34:	mov	x0, x19
    1f38:	mov	x1, x27
    1f3c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f40:	mov	w9, #0x38                  	// #56
    1f44:	madd	x8, x28, x9, x26
    1f48:	ldrb	w8, [x8, #48]
    1f4c:	cbz	w8, 1fd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b80>
    1f50:	mov	x0, x19
    1f54:	mov	x1, x25
    1f58:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f5c:	mov	x26, x21
    1f60:	mov	x27, x24
    1f64:	sub	x1, x29, #0xc8
    1f68:	mov	x0, x19
    1f6c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f70:	tbz	w0, #0, 1f88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b30>
    1f74:	add	x1, sp, #0xc8
    1f78:	mov	x0, x25
    1f7c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f80:	eor	w28, w0, #0x1
    1f84:	b	1f8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b34>
    1f88:	mov	w28, #0x1                   	// #1
    1f8c:	sub	x1, x29, #0xc8
    1f90:	mov	x0, x19
    1f94:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f98:	tbnz	w0, #0, 21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    1f9c:	ldrb	w8, [x27]
    1fa0:	cbz	w8, 21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    1fa4:	mov	x0, x26
    1fa8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1fac:	tbz	w0, #0, 213c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ce4>
    1fb0:	bl	0 <_ZN4llvm4dbgsEv>
    1fb4:	ldp	x9, x8, [x0, #16]
    1fb8:	sub	x9, x9, x8
    1fbc:	cmp	x9, #0x6
    1fc0:	b.hi	2048 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1bf0>  // b.pmore
    1fc4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1fc8:	mov	w2, #0x7                   	// #7
    1fcc:	add	x1, x1, #0x0
    1fd0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fd4:	b	206c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c14>
    1fd8:	madd	x8, x28, x9, x26
    1fdc:	ldrb	w8, [x8, #49]
    1fe0:	mov	x27, x24
    1fe4:	cbz	w8, 200c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1bb4>
    1fe8:	madd	x8, x28, x9, x26
    1fec:	ldr	x8, [x8, #32]
    1ff0:	mov	x26, x21
    1ff4:	cbz	x8, 1f64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b0c>
    1ff8:	ldr	x0, [x19]
    1ffc:	lsl	x2, x8, #3
    2000:	mov	w1, wzr
    2004:	bl	0 <memset>
    2008:	b	1f64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b0c>
    200c:	madd	x8, x28, x9, x26
    2010:	ldr	x9, [x8, #32]
    2014:	ubfx	x8, x28, #6, #26
    2018:	cmp	x9, x8
    201c:	b.ls	3a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x363c>  // b.plast
    2020:	ldr	x9, [x19]
    2024:	lsl	x8, x8, #3
    2028:	lsr	x11, x22, #3
    202c:	mov	w12, #0x1                   	// #1
    2030:	ldr	x10, [x9, x8]
    2034:	lsl	x11, x12, x11
    2038:	mov	x26, x21
    203c:	bic	x10, x10, x11
    2040:	str	x10, [x9, x8]
    2044:	b	1f64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b0c>
    2048:	mov	w9, #0x636f                	// #25455
    204c:	movk	w9, #0x206b, lsl #16
    2050:	stur	w9, [x8, #3]
    2054:	mov	w9, #0x620a                	// #25098
    2058:	movk	w9, #0x6f6c, lsl #16
    205c:	str	w9, [x8]
    2060:	ldr	x8, [x0, #24]
    2064:	add	x8, x8, #0x7
    2068:	str	x8, [x0, #24]
    206c:	ldr	x1, [sp, #56]
    2070:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2074:	ldp	x9, x8, [x0, #16]
    2078:	mov	x24, x0
    207c:	sub	x9, x9, x8
    2080:	cmp	x9, #0x9
    2084:	b.hi	20a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c4c>  // b.pmore
    2088:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    208c:	mov	w2, #0xa                   	// #10
    2090:	mov	x0, x24
    2094:	add	x1, x1, #0x0
    2098:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    209c:	mov	x24, x0
    20a0:	b	20c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c70>
    20a4:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    20a8:	add	x9, x9, #0x0
    20ac:	ldr	x9, [x9]
    20b0:	mov	w10, #0x2072                	// #8306
    20b4:	strh	w10, [x8, #8]
    20b8:	str	x9, [x8]
    20bc:	ldr	x8, [x24, #24]
    20c0:	add	x8, x8, #0xa
    20c4:	str	x8, [x24, #24]
    20c8:	mov	x0, x23
    20cc:	bl	0 <_ZNK4llvm5Value7getNameEv>
    20d0:	ldp	x9, x8, [x24, #16]
    20d4:	mov	x22, x1
    20d8:	sub	x9, x9, x8
    20dc:	cmp	x1, x9
    20e0:	mov	x1, x0
    20e4:	b.ls	2100 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ca8>  // b.plast
    20e8:	mov	x0, x24
    20ec:	mov	x2, x22
    20f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    20f4:	ldr	x8, [x0, #24]
    20f8:	mov	x24, x0
    20fc:	b	211c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1cc4>
    2100:	cbz	x22, 211c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1cc4>
    2104:	mov	x0, x8
    2108:	mov	x2, x22
    210c:	bl	0 <memcpy>
    2110:	ldr	x8, [x24, #24]
    2114:	add	x8, x8, x22
    2118:	str	x8, [x24, #24]
    211c:	ldr	x9, [x24, #16]
    2120:	cmp	x9, x8
    2124:	b.ne	2198 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d40>  // b.any
    2128:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    212c:	mov	w2, #0x1                   	// #1
    2130:	mov	x0, x24
    2134:	add	x1, x1, #0x0
    2138:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    213c:	ldrb	w8, [x27]
    2140:	cbz	w8, 21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    2144:	mov	x0, x26
    2148:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    214c:	tbz	w0, #0, 2168 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d10>
    2150:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2154:	add	x0, sp, #0x1e0
    2158:	mov	w2, #0x7                   	// #7
    215c:	add	x1, x1, #0x0
    2160:	mov	x3, x19
    2164:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2168:	ldrb	w8, [x27]
    216c:	cbz	w8, 21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    2170:	mov	x0, x26
    2174:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2178:	tbz	w0, #0, 21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    217c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2180:	add	x0, sp, #0x1e0
    2184:	sub	x3, x29, #0xc8
    2188:	mov	w2, #0xa                   	// #10
    218c:	add	x1, x1, #0x0
    2190:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2194:	b	21b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d5c>
    2198:	mov	w9, #0xa                   	// #10
    219c:	strb	w9, [x8]
    21a0:	ldr	x8, [x24, #24]
    21a4:	add	x8, x8, #0x1
    21a8:	str	x8, [x24, #24]
    21ac:	ldrb	w8, [x27]
    21b0:	cbnz	w8, 2144 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1cec>
    21b4:	add	x1, sp, #0xc8
    21b8:	mov	x0, x25
    21bc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21c0:	tbnz	w0, #0, 2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    21c4:	ldrb	w8, [x27]
    21c8:	cbz	w8, 2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    21cc:	mov	x0, x26
    21d0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    21d4:	tbz	w0, #0, 2298 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e40>
    21d8:	bl	0 <_ZN4llvm4dbgsEv>
    21dc:	ldp	x9, x8, [x0, #16]
    21e0:	sub	x9, x9, x8
    21e4:	cmp	x9, #0x6
    21e8:	b.hi	2200 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1da8>  // b.pmore
    21ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21f0:	mov	w2, #0x7                   	// #7
    21f4:	add	x1, x1, #0x0
    21f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21fc:	b	2224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dcc>
    2200:	mov	w9, #0x636f                	// #25455
    2204:	movk	w9, #0x206b, lsl #16
    2208:	stur	w9, [x8, #3]
    220c:	mov	w9, #0x620a                	// #25098
    2210:	movk	w9, #0x6f6c, lsl #16
    2214:	str	w9, [x8]
    2218:	ldr	x8, [x0, #24]
    221c:	add	x8, x8, #0x7
    2220:	str	x8, [x0, #24]
    2224:	ldr	x1, [sp, #56]
    2228:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    222c:	ldp	x9, x8, [x0, #16]
    2230:	sub	x9, x9, x8
    2234:	cmp	x9, #0x9
    2238:	b.hi	2250 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1df8>  // b.pmore
    223c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2240:	mov	w2, #0xa                   	// #10
    2244:	add	x1, x1, #0x0
    2248:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    224c:	b	2274 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e1c>
    2250:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2254:	add	x9, x9, #0x0
    2258:	ldr	x9, [x9]
    225c:	mov	w10, #0x2072                	// #8306
    2260:	strh	w10, [x8, #8]
    2264:	str	x9, [x8]
    2268:	ldr	x8, [x0, #24]
    226c:	add	x8, x8, #0xa
    2270:	str	x8, [x0, #24]
    2274:	mov	x1, x23
    2278:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    227c:	ldp	x9, x8, [x0, #16]
    2280:	cmp	x9, x8
    2284:	b.ne	22f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e9c>  // b.any
    2288:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    228c:	mov	w2, #0x1                   	// #1
    2290:	add	x1, x1, #0x0
    2294:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2298:	ldrb	w8, [x27]
    229c:	cbz	w8, 2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    22a0:	mov	x0, x26
    22a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22a8:	tbz	w0, #0, 22c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e6c>
    22ac:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22b0:	add	x0, sp, #0x1e0
    22b4:	mov	w2, #0x9                   	// #9
    22b8:	add	x1, x1, #0x0
    22bc:	mov	x3, x25
    22c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22c4:	ldrb	w8, [x27]
    22c8:	cbz	w8, 2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    22cc:	mov	x0, x26
    22d0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22d4:	tbz	w0, #0, 2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    22d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22dc:	add	x0, sp, #0x1e0
    22e0:	add	x3, sp, #0xc8
    22e4:	mov	w2, #0x9                   	// #9
    22e8:	add	x1, x1, #0x0
    22ec:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22f0:	b	2310 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb8>
    22f4:	mov	w9, #0xa                   	// #10
    22f8:	strb	w9, [x8]
    22fc:	ldr	x8, [x0, #24]
    2300:	add	x8, x8, #0x1
    2304:	str	x8, [x0, #24]
    2308:	ldrb	w8, [x27]
    230c:	cbnz	w8, 22a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e48>
    2310:	ldur	x0, [x29, #-200]
    2314:	bl	0 <free>
    2318:	ldr	x0, [sp, #200]
    231c:	bl	0 <free>
    2320:	ldr	x25, [sp, #96]
    2324:	mov	x0, x25
    2328:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    232c:	cmp	x20, w0, sxtw
    2330:	b.ge	39f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x359c>  // b.tcont
    2334:	ldr	x8, [sp, #64]
    2338:	ldr	w21, [x29, #8]
    233c:	add	x20, x20, #0x1
    2340:	cmp	x20, x8
    2344:	orr	w21, w21, w28
    2348:	b.ne	1d80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1928>  // b.any
    234c:	b	1d08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18b0>
    2350:	adrp	x10, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2354:	add	x10, x10, #0x0
    2358:	ldur	x9, [x10, #7]
    235c:	ldr	x10, [x10]
    2360:	stur	x9, [x8, #7]
    2364:	str	x10, [x8]
    2368:	ldr	x8, [x0, #24]
    236c:	add	x8, x8, #0xf
    2370:	str	x8, [x0, #24]
    2374:	ldr	w8, [sp, #16]
    2378:	cbnz	w8, 1cfc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18a4>
    237c:	ldrb	w8, [x27]
    2380:	cbz	w8, 239c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f44>
    2384:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2388:	add	x0, x0, #0x0
    238c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2390:	tbz	w0, #0, 239c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f44>
    2394:	add	x0, sp, #0x1e0
    2398:	bl	264 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>
    239c:	ldr	x0, [sp, #32]
    23a0:	bl	0 <_ZNK4llvm8Function10getContextEv>
    23a4:	mov	w8, #0x200                 	// #512
    23a8:	add	x9, sp, #0xc8
    23ac:	add	x10, sp, #0x98
    23b0:	add	x11, sp, #0x68
    23b4:	mov	w21, wzr
    23b8:	sub	x28, x29, #0x60
    23bc:	mov	w22, #0x105                 	// #261
    23c0:	strh	w8, [sp, #452]
    23c4:	add	x9, x9, #0x10
    23c8:	add	x10, x10, #0x10
    23cc:	add	x8, x11, #0x10
    23d0:	stp	x0, xzr, [sp, #432]
    23d4:	str	wzr, [sp, #448]
    23d8:	strb	wzr, [sp, #454]
    23dc:	stp	xzr, xzr, [sp, #416]
    23e0:	str	xzr, [sp, #408]
    23e4:	stp	xzr, xzr, [sp, #456]
    23e8:	str	d8, [sp, #208]
    23ec:	str	d9, [sp, #160]
    23f0:	str	d9, [sp, #112]
    23f4:	str	x9, [x29, #8]
    23f8:	str	x9, [sp, #200]
    23fc:	stp	x10, x8, [sp, #80]
    2400:	str	x10, [sp, #152]
    2404:	str	x8, [sp, #104]
    2408:	b	241c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc4>
    240c:	add	w21, w21, #0x1
    2410:	cmp	w21, #0x4
    2414:	str	wzr, [sp, #208]
    2418:	b.eq	26f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2298>  // b.none
    241c:	ldr	x1, [sp, #32]
    2420:	sub	x0, x29, #0xc8
    2424:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2428:	ldp	x27, x20, [x29, #-200]
    242c:	ldr	x10, [sp, #40]
    2430:	ldur	x19, [x29, #-184]
    2434:	cmp	x27, x10
    2438:	cset	w8, ne  // ne = any
    243c:	cmp	x19, #0x0
    2440:	cset	w9, ne  // ne = any
    2444:	cmp	x10, x20
    2448:	b.ne	2454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ffc>  // b.any
    244c:	and	w8, w8, w9
    2450:	cbz	w8, 25a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2150>
    2454:	ldrb	w8, [x19]
    2458:	tbnz	w8, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    245c:	sub	x8, x19, #0x18
    2460:	cmp	x19, #0x0
    2464:	csel	x24, xzr, x8, eq  // eq = none
    2468:	ldrb	w8, [x24, #16]
    246c:	cmp	w8, #0x51
    2470:	b.eq	24a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2048>  // b.none
    2474:	sub	w9, w8, #0x4d
    2478:	cmp	w9, #0x2
    247c:	b.cc	24a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2048>  // b.lo, b.ul, b.last
    2480:	sub	w9, w8, #0x25
    2484:	cmp	w9, #0x12
    2488:	b.cc	24a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2048>  // b.lo, b.ul, b.last
    248c:	cmp	w8, #0x3a
    2490:	b.eq	24a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2048>  // b.none
    2494:	sub	w8, w8, #0x3e
    2498:	cmp	w8, #0xc
    249c:	b.hi	24b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2058>  // b.pmore
    24a0:	mov	x0, x24
    24a4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    24a8:	ldr	x25, [x24, #8]
    24ac:	cbnz	x25, 2504 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20ac>
    24b0:	ldrb	w8, [x20]
    24b4:	tbnz	w8, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    24b8:	ldr	x19, [x19, #8]
    24bc:	sub	x8, x20, #0x18
    24c0:	cmp	x20, #0x0
    24c4:	csel	x8, xzr, x8, eq  // eq = none
    24c8:	add	x8, x8, #0x28
    24cc:	cmp	x8, x19
    24d0:	b.ne	2584 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x212c>  // b.any
    24d4:	ldr	x20, [x20, #8]
    24d8:	cmp	x27, x20
    24dc:	b.eq	2584 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x212c>  // b.none
    24e0:	ldrb	w8, [x20]
    24e4:	tbnz	w8, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    24e8:	sub	x8, x20, #0x18
    24ec:	cmp	x20, #0x0
    24f0:	csel	x8, xzr, x8, eq  // eq = none
    24f4:	ldr	x19, [x8, #48]
    24f8:	b	24c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2070>
    24fc:	ldr	x25, [x25, #8]
    2500:	cbz	x25, 24b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2058>
    2504:	mov	x0, x25
    2508:	bl	0 <_ZNK4llvm3Use7getUserEv>
    250c:	stur	x0, [x29, #-200]
    2510:	ldrb	w8, [x24, #16]
    2514:	ldr	x1, [x24, #40]
    2518:	mov	x26, x0
    251c:	cmp	w8, #0x50
    2520:	b.ne	255c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2104>  // b.any
    2524:	ldur	x8, [x24, #-24]
    2528:	cbz	x8, 255c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2104>
    252c:	ldrb	w9, [x8, #16]
    2530:	cbnz	w9, 255c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2104>
    2534:	ldrb	w9, [x8, #33]
    2538:	tbz	w9, #5, 255c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2104>
    253c:	ldr	w8, [x8, #36]
    2540:	sub	w8, w8, #0x23
    2544:	cmp	w8, #0x1
    2548:	b.hi	255c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2104>  // b.pmore
    254c:	mov	x0, x1
    2550:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2554:	mov	x1, x0
    2558:	cbz	x0, 3c6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3814>
    255c:	add	x0, sp, #0x1e0
    2560:	mov	x2, x26
    2564:	bl	5c6c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2568:	tbz	w0, #0, 24fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20a4>
    256c:	add	x0, sp, #0xc8
    2570:	sub	x1, x29, #0x60
    2574:	sub	x2, x29, #0xc8
    2578:	stur	x24, [x29, #-96]
    257c:	bl	3fc4 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    2580:	b	24fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20a4>
    2584:	ldr	x10, [sp, #40]
    2588:	cmp	x27, x10
    258c:	cset	w8, ne  // ne = any
    2590:	cmp	x19, #0x0
    2594:	cset	w9, ne  // ne = any
    2598:	cmp	x10, x20
    259c:	b.ne	2454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ffc>  // b.any
    25a0:	and	w8, w8, w9
    25a4:	tbnz	w8, #0, 2454 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ffc>
    25a8:	adrp	x9, 0 <_ZN4llvm9DebugFlagE>
    25ac:	ldr	w8, [sp, #208]
    25b0:	ldr	x9, [x9]
    25b4:	cbz	w8, 26f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2298>
    25b8:	ldrb	w9, [x9]
    25bc:	cbz	w9, 25ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2194>
    25c0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25c4:	add	x0, x0, #0x0
    25c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    25cc:	tbz	w0, #0, 25e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x218c>
    25d0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    25d4:	add	x2, sp, #0xc8
    25d8:	mov	w1, #0x10                  	// #16
    25dc:	add	x0, x0, #0x0
    25e0:	bl	40cc <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    25e4:	ldr	w8, [sp, #208]
    25e8:	cbz	w8, 240c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fb4>
    25ec:	ldr	x19, [sp, #200]
    25f0:	mov	w9, #0x18                  	// #24
    25f4:	mov	x23, xzr
    25f8:	mov	x25, xzr
    25fc:	madd	x20, x8, x9, x19
    2600:	mov	x24, xzr
    2604:	b	2624 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21cc>
    2608:	mov	x0, x27
    260c:	mov	x1, x24
    2610:	mov	x2, x25
    2614:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    2618:	add	x19, x19, #0x18
    261c:	cmp	x20, x19
    2620:	b.eq	240c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fb4>  // b.none
    2624:	ldr	x8, [x19]
    2628:	cmp	x24, x8
    262c:	b.eq	264c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21f4>  // b.none
    2630:	cbz	x8, 3bb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x375c>
    2634:	ldrb	w9, [x8, #16]
    2638:	cmp	w9, #0x17
    263c:	b.ls	3bd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x377c>  // b.plast
    2640:	mov	x25, xzr
    2644:	mov	x23, xzr
    2648:	mov	x24, x8
    264c:	ldr	x27, [x19, #8]
    2650:	ldr	x26, [x27, #40]
    2654:	cmp	x23, x26
    2658:	b.eq	26b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2260>  // b.none
    265c:	cbz	x24, 3bf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x379c>
    2660:	mov	x0, x24
    2664:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    2668:	mov	x25, x0
    266c:	mov	x0, x24
    2670:	bl	0 <_ZNK4llvm5Value7getNameEv>
    2674:	stp	x0, x1, [x29, #-96]
    2678:	sub	x1, x29, #0xc8
    267c:	mov	x0, x25
    2680:	sturh	w22, [x29, #-184]
    2684:	stp	x28, xzr, [x29, #-200]
    2688:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    268c:	mov	x0, x26
    2690:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    2694:	ldrb	w8, [x0]
    2698:	tbnz	w8, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    269c:	sub	x8, x0, #0x18
    26a0:	cmp	x0, #0x0
    26a4:	csel	x1, xzr, x8, eq  // eq = none
    26a8:	mov	x0, x25
    26ac:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
    26b0:	ldr	x27, [x19, #8]
    26b4:	mov	x23, x26
    26b8:	cbz	x27, 39b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x355c>
    26bc:	ldrb	w8, [x27, #16]
    26c0:	cmp	w8, #0x4f
    26c4:	b.ne	2608 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21b0>  // b.any
    26c8:	ldr	w8, [x27, #20]
    26cc:	and	w8, w8, #0xfffffff
    26d0:	cmp	w8, #0x1
    26d4:	b.ne	3c4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37f4>  // b.any
    26d8:	mov	x0, x27
    26dc:	mov	x1, x25
    26e0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    26e4:	mov	x0, x27
    26e8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    26ec:	b	2618 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21c0>
    26f0:	ldr	x9, [sp, #32]
    26f4:	ldrb	w8, [x9, #18]
    26f8:	tbnz	w8, #0, 2708 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22b0>
    26fc:	ldr	x19, [x9, #88]
    2700:	mov	x8, x19
    2704:	b	2738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    2708:	ldr	x0, [sp, #32]
    270c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    2710:	ldr	x9, [sp, #32]
    2714:	ldrb	w8, [x9, #18]
    2718:	ldr	x19, [x9, #88]
    271c:	tbnz	w8, #0, 2728 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22d0>
    2720:	mov	x8, x19
    2724:	b	2738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    2728:	ldr	x0, [sp, #32]
    272c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    2730:	ldr	x9, [sp, #32]
    2734:	ldr	x8, [x9, #88]
    2738:	ldr	x9, [x9, #96]
    273c:	mov	w10, #0x28                  	// #40
    2740:	madd	x21, x9, x10, x8
    2744:	cmp	x21, x19
    2748:	b.eq	2824 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23cc>  // b.none
    274c:	mov	w22, #0x18                  	// #24
    2750:	mov	w23, #0xffffffff            	// #-1
    2754:	b	2764 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x230c>
    2758:	add	x19, x19, #0x28
    275c:	cmp	x19, x21
    2760:	b.eq	2824 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23cc>  // b.none
    2764:	mov	x0, x19
    2768:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    276c:	ldr	x20, [x19, #8]
    2770:	cbnz	x20, 2780 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2328>
    2774:	b	2758 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2300>
    2778:	ldr	x20, [x20, #8]
    277c:	cbz	x20, 2758 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2300>
    2780:	mov	x0, x20
    2784:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2788:	ldr	x8, [x19, #24]
    278c:	ldr	x8, [x8, #80]
    2790:	ldrb	w9, [x8]
    2794:	tbnz	w9, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    2798:	mov	x24, x0
    279c:	sub	x9, x8, #0x18
    27a0:	cmp	x8, #0x0
    27a4:	csel	x1, xzr, x9, eq  // eq = none
    27a8:	add	x0, sp, #0x1e0
    27ac:	mov	x2, x24
    27b0:	bl	5c6c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    27b4:	tbz	w0, #0, 2778 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2320>
    27b8:	ldp	w8, w9, [sp, #208]
    27bc:	cmp	w8, w9
    27c0:	b.cs	2808 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23b0>  // b.hs, b.nlast
    27c4:	ldr	x9, [sp, #200]
    27c8:	umaddl	x10, w8, w22, x9
    27cc:	str	x19, [x10], #8
    27d0:	cbz	x24, 3b74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x371c>
    27d4:	ldrb	w11, [x24, #16]
    27d8:	cmp	w11, #0x17
    27dc:	b.ls	3ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x367c>  // b.plast
    27e0:	mov	w8, w8
    27e4:	madd	x9, x8, x22, x9
    27e8:	str	x24, [x10]
    27ec:	str	w23, [x9, #16]
    27f0:	ldr	w9, [sp, #212]
    27f4:	cmp	w8, w9
    27f8:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    27fc:	add	w8, w8, #0x1
    2800:	str	w8, [sp, #208]
    2804:	b	2778 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2320>
    2808:	ldr	x1, [x29, #8]
    280c:	add	x0, sp, #0xc8
    2810:	mov	w3, #0x18                  	// #24
    2814:	mov	x2, xzr
    2818:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    281c:	ldr	w8, [sp, #208]
    2820:	b	27c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x236c>
    2824:	ldr	x1, [sp, #32]
    2828:	sub	x0, x29, #0xc8
    282c:	sub	x19, x29, #0xc8
    2830:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2834:	ldp	x26, x27, [x29, #-200]
    2838:	ldr	x10, [sp, #40]
    283c:	ldur	x21, [x29, #-184]
    2840:	add	x28, x19, #0x28
    2844:	add	x25, x19, #0x30
    2848:	cmp	x26, x10
    284c:	cset	w8, ne  // ne = any
    2850:	cmp	x21, #0x0
    2854:	cset	w9, ne  // ne = any
    2858:	cmp	x10, x27
    285c:	add	x10, x19, #0x8
    2860:	str	x10, [sp, #96]
    2864:	b.ne	28e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2490>  // b.any
    2868:	and	w8, w8, w9
    286c:	cbz	w8, 2e40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29e8>
    2870:	b	28e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2490>
    2874:	add	x0, sp, #0xc8
    2878:	mov	w3, #0x8                   	// #8
    287c:	mov	x1, x19
    2880:	mov	x2, xzr
    2884:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2888:	ldr	w8, [sp, #208]
    288c:	b	6f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29c>
    2890:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2894:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2898:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    289c:	add	x0, x0, #0x0
    28a0:	add	x1, x1, #0x0
    28a4:	add	x3, x3, #0x0
    28a8:	mov	w2, #0xadf                 	// #2783
    28ac:	bl	0 <__assert_fail>
    28b0:	ldr	x1, [sp, #80]
    28b4:	add	x0, sp, #0x98
    28b8:	mov	w3, #0x8                   	// #8
    28bc:	mov	x2, xzr
    28c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    28c4:	ldr	w8, [sp, #160]
    28c8:	b	2c6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2814>
    28cc:	ldr	x1, [sp, #88]
    28d0:	add	x0, sp, #0x68
    28d4:	mov	w3, #0x8                   	// #8
    28d8:	mov	x2, xzr
    28dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    28e0:	ldr	w8, [sp, #112]
    28e4:	b	2ca0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2848>
    28e8:	ldrb	w8, [x21]
    28ec:	tbnz	w8, #2, 3994 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x353c>
    28f0:	sub	x8, x21, #0x18
    28f4:	cmp	x21, #0x0
    28f8:	csel	x19, xzr, x8, eq  // eq = none
    28fc:	ldrb	w8, [x19, #16]
    2900:	cmp	w8, #0x50
    2904:	b.ne	2920 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24c8>  // b.any
    2908:	ldur	x9, [x19, #-24]
    290c:	cbz	x9, 2920 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24c8>
    2910:	ldrb	w10, [x9, #16]
    2914:	cbnz	w10, 2920 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24c8>
    2918:	ldrb	w10, [x9, #33]
    291c:	tbnz	w10, #5, 2c38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27e0>
    2920:	ldr	x9, [sp, #24]
    2924:	ldr	x9, [x9]
    2928:	cmp	x19, x9
    292c:	b.eq	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>  // b.none
    2930:	ldr	x9, [sp, #24]
    2934:	ldr	w9, [x9, #168]
    2938:	cbnz	w9, 294c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f4>
    293c:	ldr	x9, [sp, #24]
    2940:	ldr	x9, [x9, #208]
    2944:	cmp	x9, x19
    2948:	b.eq	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>  // b.none
    294c:	cbz	x21, 3eb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a5c>
    2950:	cmp	w8, #0x50
    2954:	b.ne	2b8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2734>  // b.any
    2958:	ldur	x8, [x19, #-24]
    295c:	cbz	x8, 2b8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2734>
    2960:	ldrb	w9, [x8, #16]
    2964:	cbnz	w9, 2b70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2718>
    2968:	ldrb	w9, [x8, #33]
    296c:	tbz	w9, #5, 2b70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2718>
    2970:	ldr	w9, [x8, #36]
    2974:	cmp	w9, #0xf
    2978:	b.ne	2b70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2718>  // b.any
    297c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2980:	ldr	d0, [x8]
    2984:	mov	x0, x19
    2988:	stp	xzr, x28, [x29, #-200]
    298c:	stur	x28, [x29, #-184]
    2990:	stur	d0, [x29, #-176]
    2994:	stur	wzr, [x29, #-168]
    2998:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    299c:	ldr	x20, [x19, #8]
    29a0:	cbnz	x20, 2b20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c8>
    29a4:	ldr	x0, [x19, #40]
    29a8:	sub	x1, x29, #0xc8
    29ac:	bl	6128 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    29b0:	ldp	x9, x8, [x29, #-192]
    29b4:	ldr	x22, [sp, #24]
    29b8:	mov	w20, w0
    29bc:	cmp	x8, x9
    29c0:	b.eq	29cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2574>  // b.none
    29c4:	mov	x0, x8
    29c8:	bl	0 <free>
    29cc:	tbz	w20, #0, 2c60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2808>
    29d0:	mov	x0, x19
    29d4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    29d8:	mov	w8, #0x200                 	// #512
    29dc:	sturh	w8, [x29, #-156]
    29e0:	ldr	x8, [sp, #96]
    29e4:	stp	x0, xzr, [x29, #-176]
    29e8:	sub	x0, x29, #0xc8
    29ec:	mov	x1, x19
    29f0:	stur	xzr, [x29, #-200]
    29f4:	stur	wzr, [x29, #-160]
    29f8:	sturb	wzr, [x29, #-154]
    29fc:	stp	xzr, xzr, [x8]
    2a00:	stp	xzr, xzr, [x25]
    2a04:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a08:	mov	x0, x19
    2a0c:	mov	w1, wzr
    2a10:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a14:	mov	x2, x0
    2a18:	sub	x1, x29, #0xc8
    2a1c:	mov	x0, x22
    2a20:	mov	x3, xzr
    2a24:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2a28:	mov	x20, x0
    2a2c:	mov	x0, x19
    2a30:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2a34:	ldr	x24, [x19, #8]
    2a38:	cbz	x24, 2c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x283c>
    2a3c:	mov	x23, x25
    2a40:	mov	x0, x24
    2a44:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2a48:	cbz	x0, 3b34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36dc>
    2a4c:	ldrb	w8, [x0, #16]
    2a50:	mov	x25, x0
    2a54:	cmp	w8, #0x50
    2a58:	b.ne	3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>  // b.any
    2a5c:	ldur	x8, [x25, #-24]
    2a60:	cbz	x8, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    2a64:	ldrb	w9, [x8, #16]
    2a68:	cbnz	w9, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    2a6c:	ldrb	w9, [x8, #33]
    2a70:	tbz	w9, #5, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    2a74:	ldr	w9, [x8, #36]
    2a78:	cmp	w9, #0x11
    2a7c:	b.ne	2a90 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2638>  // b.any
    2a80:	mov	x0, x25
    2a84:	mov	x1, x20
    2a88:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2a8c:	b	2abc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2664>
    2a90:	ldr	w8, [x8, #36]
    2a94:	cmp	w8, #0x10
    2a98:	b.ne	3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>  // b.any
    2a9c:	sub	x0, x29, #0xc8
    2aa0:	mov	x1, x25
    2aa4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2aa8:	sub	x1, x29, #0xc8
    2aac:	mov	x0, x22
    2ab0:	mov	x2, x20
    2ab4:	mov	x3, xzr
    2ab8:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2abc:	ldrb	w8, [x25, #16]
    2ac0:	cmp	w8, #0x17
    2ac4:	b.ls	3ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x367c>  // b.plast
    2ac8:	ldp	w8, w9, [sp, #112]
    2acc:	cmp	w8, w9
    2ad0:	b.cs	2afc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26a4>  // b.hs, b.nlast
    2ad4:	ldr	x9, [sp, #104]
    2ad8:	str	x25, [x9, w8, uxtw #3]
    2adc:	ldp	w8, w9, [sp, #112]
    2ae0:	cmp	w8, w9
    2ae4:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    2ae8:	add	w8, w8, #0x1
    2aec:	str	w8, [sp, #112]
    2af0:	ldr	x24, [x24, #8]
    2af4:	cbnz	x24, 2a40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25e8>
    2af8:	b	2c8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2834>
    2afc:	ldr	x1, [sp, #88]
    2b00:	add	x0, sp, #0x68
    2b04:	mov	w3, #0x8                   	// #8
    2b08:	mov	x2, xzr
    2b0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b10:	ldr	w8, [sp, #112]
    2b14:	b	2ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x267c>
    2b18:	ldr	x20, [x20, #8]
    2b1c:	cbz	x20, 29a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x254c>
    2b20:	mov	x0, x20
    2b24:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2b28:	cbz	x0, 3b54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36fc>
    2b2c:	ldrb	w8, [x0, #16]
    2b30:	cmp	w8, #0x50
    2b34:	b.ne	2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>  // b.any
    2b38:	ldur	x8, [x0, #-24]
    2b3c:	cbz	x8, 2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>
    2b40:	ldrb	w9, [x8, #16]
    2b44:	cbnz	w9, 2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>
    2b48:	ldrb	w9, [x8, #33]
    2b4c:	tbz	w9, #5, 2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>
    2b50:	ldr	w8, [x8, #36]
    2b54:	cmp	w8, #0x10
    2b58:	b.ne	2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>  // b.any
    2b5c:	ldr	x1, [x0, #40]
    2b60:	sub	x8, x29, #0x60
    2b64:	sub	x0, x29, #0xc8
    2b68:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b6c:	b	2b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26c0>
    2b70:	ldrb	w9, [x8, #16]
    2b74:	cbnz	w9, 2b8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2734>
    2b78:	ldrb	w9, [x8, #33]
    2b7c:	tbz	w9, #5, 2b8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2734>
    2b80:	ldr	w8, [x8, #36]
    2b84:	cmp	w8, #0x11
    2b88:	b.eq	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>  // b.none
    2b8c:	mov	x0, x19
    2b90:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2b94:	ldr	x20, [x19, #8]
    2b98:	cbnz	x20, 2bbc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2764>
    2b9c:	b	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2ba0:	add	x0, sp, #0xc8
    2ba4:	sub	x1, x29, #0x60
    2ba8:	sub	x2, x29, #0xc8
    2bac:	stur	x19, [x29, #-96]
    2bb0:	bl	3fc4 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    2bb4:	ldr	x20, [x20, #8]
    2bb8:	cbz	x20, 2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2bbc:	mov	x0, x20
    2bc0:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2bc4:	stur	x0, [x29, #-200]
    2bc8:	ldrb	w8, [x19, #16]
    2bcc:	ldr	x1, [x19, #40]
    2bd0:	mov	x24, x0
    2bd4:	cmp	w8, #0x50
    2bd8:	b.ne	2c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27bc>  // b.any
    2bdc:	ldur	x8, [x19, #-24]
    2be0:	cbz	x8, 2c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27bc>
    2be4:	ldrb	w9, [x8, #16]
    2be8:	cbnz	w9, 2c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27bc>
    2bec:	ldrb	w9, [x8, #33]
    2bf0:	tbz	w9, #5, 2c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27bc>
    2bf4:	ldr	w8, [x8, #36]
    2bf8:	sub	w8, w8, #0x23
    2bfc:	cmp	w8, #0x1
    2c00:	b.hi	2c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27bc>  // b.pmore
    2c04:	mov	x0, x1
    2c08:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2c0c:	mov	x1, x0
    2c10:	cbz	x0, 3c6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3814>
    2c14:	add	x0, sp, #0x1e0
    2c18:	mov	x2, x24
    2c1c:	bl	5c6c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2c20:	tbz	w0, #0, 2bb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x275c>
    2c24:	ldr	x8, [x19]
    2c28:	ldrb	w8, [x8, #8]
    2c2c:	cmp	w8, #0xa
    2c30:	b.ne	2ba0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2748>  // b.any
    2c34:	b	3dc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x396c>
    2c38:	ldr	w10, [x9, #36]
    2c3c:	cmp	w10, #0x18
    2c40:	b.eq	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>  // b.none
    2c44:	ldr	w10, [x9, #36]
    2c48:	cmp	w10, #0x20
    2c4c:	b.eq	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>  // b.none
    2c50:	ldr	w9, [x9, #36]
    2c54:	cmp	w9, #0x23
    2c58:	b.ne	2920 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24c8>  // b.any
    2c5c:	b	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2c60:	ldp	w8, w9, [sp, #160]
    2c64:	cmp	w8, w9
    2c68:	b.cs	28b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2458>  // b.hs, b.nlast
    2c6c:	ldr	x9, [sp, #152]
    2c70:	str	x19, [x9, w8, uxtw #3]
    2c74:	ldp	w8, w9, [sp, #160]
    2c78:	cmp	w8, w9
    2c7c:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    2c80:	add	w8, w8, #0x1
    2c84:	str	w8, [sp, #160]
    2c88:	b	2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2c8c:	mov	x25, x23
    2c90:	b	2c98 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2840>
    2c94:	ldp	w8, w9, [sp, #112]
    2c98:	cmp	w8, w9
    2c9c:	b.cs	28cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2474>  // b.hs, b.nlast
    2ca0:	ldr	x9, [sp, #104]
    2ca4:	str	x19, [x9, w8, uxtw #3]
    2ca8:	ldp	w8, w9, [sp, #112]
    2cac:	cmp	w8, w9
    2cb0:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    2cb4:	add	w8, w8, #0x1
    2cb8:	str	w8, [sp, #112]
    2cbc:	cbz	x20, 3bb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x375c>
    2cc0:	ldrb	w8, [x20, #16]
    2cc4:	cmp	w8, #0x17
    2cc8:	b.ls	3bd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x377c>  // b.plast
    2ccc:	ldur	x1, [x29, #-200]
    2cd0:	cbz	x1, 2cdc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2884>
    2cd4:	sub	x0, x29, #0xc8
    2cd8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2cdc:	mov	x0, x20
    2ce0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2ce4:	ldr	x19, [x20, #8]
    2ce8:	cbz	x19, 2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2cec:	mov	w22, #0x18                  	// #24
    2cf0:	mov	w23, #0xffffffff            	// #-1
    2cf4:	b	2d08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28b0>
    2cf8:	add	w8, w8, #0x1
    2cfc:	str	w8, [sp, #208]
    2d00:	ldr	x19, [x19, #8]
    2d04:	cbz	x19, 2dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2978>
    2d08:	mov	x0, x19
    2d0c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2d10:	ldrb	w8, [x20, #16]
    2d14:	ldr	x1, [x20, #40]
    2d18:	mov	x24, x0
    2d1c:	cmp	w8, #0x50
    2d20:	b.ne	2d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2904>  // b.any
    2d24:	ldur	x8, [x20, #-24]
    2d28:	cbz	x8, 2d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2904>
    2d2c:	ldrb	w9, [x8, #16]
    2d30:	cbnz	w9, 2d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2904>
    2d34:	ldrb	w9, [x8, #33]
    2d38:	tbz	w9, #5, 2d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2904>
    2d3c:	ldr	w8, [x8, #36]
    2d40:	sub	w8, w8, #0x23
    2d44:	cmp	w8, #0x1
    2d48:	b.hi	2d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2904>  // b.pmore
    2d4c:	mov	x0, x1
    2d50:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2d54:	mov	x1, x0
    2d58:	cbz	x0, 3c6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3814>
    2d5c:	add	x0, sp, #0x1e0
    2d60:	mov	x2, x24
    2d64:	bl	5c6c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2d68:	tbz	w0, #0, 2d00 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28a8>
    2d6c:	ldp	w8, w9, [sp, #208]
    2d70:	cmp	w8, w9
    2d74:	b.cs	2db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x295c>  // b.hs, b.nlast
    2d78:	ldr	x9, [sp, #200]
    2d7c:	umaddl	x10, w8, w22, x9
    2d80:	str	x20, [x10], #8
    2d84:	cbz	x24, 3b74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x371c>
    2d88:	ldrb	w11, [x24, #16]
    2d8c:	cmp	w11, #0x17
    2d90:	b.ls	3ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x367c>  // b.plast
    2d94:	mov	w8, w8
    2d98:	madd	x9, x8, x22, x9
    2d9c:	str	x24, [x10]
    2da0:	str	w23, [x9, #16]
    2da4:	ldr	w9, [sp, #212]
    2da8:	cmp	w8, w9
    2dac:	b.cc	2cf8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28a0>  // b.lo, b.ul, b.last
    2db0:	b	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>
    2db4:	ldr	x1, [x29, #8]
    2db8:	add	x0, sp, #0xc8
    2dbc:	mov	w3, #0x18                  	// #24
    2dc0:	mov	x2, xzr
    2dc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2dc8:	ldr	w8, [sp, #208]
    2dcc:	b	2d78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2920>
    2dd0:	ldrb	w8, [x27]
    2dd4:	tbnz	w8, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    2dd8:	ldr	x21, [x21, #8]
    2ddc:	sub	x8, x27, #0x18
    2de0:	cmp	x27, #0x0
    2de4:	csel	x8, xzr, x8, eq  // eq = none
    2de8:	add	x8, x8, #0x28
    2dec:	cmp	x8, x21
    2df0:	b.ne	2e1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29c4>  // b.any
    2df4:	ldr	x27, [x27, #8]
    2df8:	cmp	x26, x27
    2dfc:	b.eq	2e1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29c4>  // b.none
    2e00:	ldrb	w8, [x27]
    2e04:	tbnz	w8, #2, 3a54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35fc>
    2e08:	sub	x8, x27, #0x18
    2e0c:	cmp	x27, #0x0
    2e10:	csel	x8, xzr, x8, eq  // eq = none
    2e14:	ldr	x21, [x8, #48]
    2e18:	b	2de8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2990>
    2e1c:	ldr	x10, [sp, #40]
    2e20:	cmp	x26, x10
    2e24:	cset	w8, ne  // ne = any
    2e28:	cmp	x21, #0x0
    2e2c:	cset	w9, ne  // ne = any
    2e30:	cmp	x10, x27
    2e34:	b.ne	28e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2490>  // b.any
    2e38:	and	w8, w8, w9
    2e3c:	tbnz	w8, #0, 28e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2490>
    2e40:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    2e44:	ldr	x8, [x8]
    2e48:	ldrb	w8, [x8]
    2e4c:	cbz	w8, 2e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a1c>
    2e50:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e54:	add	x0, x0, #0x0
    2e58:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2e5c:	tbz	w0, #0, 2e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a1c>
    2e60:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2e64:	add	x0, x0, #0x0
    2e68:	add	x2, sp, #0xc8
    2e6c:	mov	w1, #0x6                   	// #6
    2e70:	bl	40cc <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    2e74:	ldr	x19, [sp, #32]
    2e78:	mov	x0, x19
    2e7c:	bl	0 <_ZNK4llvm8Function10getContextEv>
    2e80:	ldr	x8, [x19, #40]
    2e84:	mov	x22, x0
    2e88:	mov	x0, x8
    2e8c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    2e90:	stp	x0, x22, [x29, #-48]
    2e94:	mov	x0, x19
    2e98:	stur	wzr, [x29, #-32]
    2e9c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    2ea0:	sub	x8, x29, #0x60
    2ea4:	mov	x23, x0
    2ea8:	mov	x20, x1
    2eac:	cmp	x1, #0x21
    2eb0:	add	x19, x8, #0x10
    2eb4:	stur	x19, [x29, #-96]
    2eb8:	stur	d10, [x29, #-88]
    2ebc:	b.cc	2ed4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a7c>  // b.lo, b.ul, b.last
    2ec0:	sub	x0, x29, #0x60
    2ec4:	mov	w3, #0x1                   	// #1
    2ec8:	mov	x1, x19
    2ecc:	mov	x2, x20
    2ed0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ed4:	cbz	x20, 2ef0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a98>
    2ed8:	ldur	x8, [x29, #-96]
    2edc:	ldur	w9, [x29, #-88]
    2ee0:	mov	x1, x23
    2ee4:	mov	x2, x20
    2ee8:	add	x0, x8, x9
    2eec:	bl	0 <memcpy>
    2ef0:	ldp	w8, w9, [x29, #-88]
    2ef4:	add	x8, x20, x8
    2ef8:	cmp	x8, x9
    2efc:	b.hi	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.pmore
    2f00:	ldr	x23, [sp, #24]
    2f04:	and	x10, x8, #0xffffffff
    2f08:	sub	x9, x9, x10
    2f0c:	cmp	x9, #0x5
    2f10:	stur	w8, [x29, #-88]
    2f14:	b.hi	2f30 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ad8>  // b.pmore
    2f18:	add	x2, x10, #0x6
    2f1c:	sub	x0, x29, #0x60
    2f20:	mov	w3, #0x1                   	// #1
    2f24:	mov	x1, x19
    2f28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f2c:	ldur	w8, [x29, #-88]
    2f30:	ldur	x9, [x29, #-96]
    2f34:	mov	w11, #0x462e                	// #17966
    2f38:	mov	w10, #0x656d                	// #25965
    2f3c:	movk	w11, #0x6172, lsl #16
    2f40:	add	x8, x9, w8, uxtw
    2f44:	strh	w10, [x8, #4]
    2f48:	str	w11, [x8]
    2f4c:	ldp	w8, w9, [x29, #-88]
    2f50:	add	x8, x8, #0x6
    2f54:	cmp	x8, x9
    2f58:	b.hi	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.pmore
    2f5c:	ldur	x1, [x29, #-96]
    2f60:	and	x2, x8, #0xffffffff
    2f64:	mov	x0, x22
    2f68:	stur	w8, [x29, #-88]
    2f6c:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
    2f70:	sub	x8, x29, #0xc8
    2f74:	add	x20, x8, #0x10
    2f78:	stur	x20, [x29, #-200]
    2f7c:	stur	d8, [x29, #-192]
    2f80:	ldr	w8, [x23, #168]
    2f84:	mov	x19, x0
    2f88:	cbz	w8, 2f9c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2b44>
    2f8c:	mov	x21, xzr
    2f90:	ldr	w9, [sp, #208]
    2f94:	cbnz	w9, 30f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c98>
    2f98:	b	3334 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2edc>
    2f9c:	ldr	x21, [x23, #208]
    2fa0:	mov	x0, x19
    2fa4:	mov	w1, wzr
    2fa8:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2fac:	mov	x23, x0
    2fb0:	mov	x0, x22
    2fb4:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    2fb8:	sub	x1, x29, #0x18
    2fbc:	mov	w2, #0x1                   	// #1
    2fc0:	mov	w3, wzr
    2fc4:	stur	x23, [x29, #-24]
    2fc8:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    2fcc:	mov	w1, wzr
    2fd0:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2fd4:	ldr	x8, [sp, #24]
    2fd8:	mov	w9, #0x40                  	// #64
    2fdc:	mov	x24, x0
    2fe0:	ldr	w8, [x8, #96]
    2fe4:	sub	x8, x8, #0x1
    2fe8:	clz	x8, x8
    2fec:	sub	w8, w9, w8
    2ff0:	cmp	w8, #0x1
    2ff4:	csinc	w25, w8, wzr, hi  // hi = pmore
    2ff8:	cbz	x21, 3018 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2bc0>
    2ffc:	ldr	x8, [x21]
    3000:	cbz	x8, 3f44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3aec>
    3004:	ldrb	w9, [x8, #8]
    3008:	cmp	w9, #0xf
    300c:	b.ne	3f64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b0c>  // b.any
    3010:	ldr	x23, [x8, #24]
    3014:	b	3024 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2bcc>
    3018:	mov	x0, x22
    301c:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    3020:	mov	x23, x0
    3024:	mov	x0, x22
    3028:	mov	w1, w25
    302c:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    3030:	ldp	w8, w9, [x29, #-192]
    3034:	mov	x22, x0
    3038:	cmp	w8, w9
    303c:	b.cs	3904 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34ac>  // b.hs, b.nlast
    3040:	ldur	x9, [x29, #-200]
    3044:	str	x24, [x9, w8, uxtw #3]
    3048:	ldp	w8, w9, [x29, #-192]
    304c:	cmp	w8, w9
    3050:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    3054:	add	w8, w8, #0x1
    3058:	cmp	w8, w9
    305c:	stur	w8, [x29, #-192]
    3060:	b.cs	3920 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34c8>  // b.hs, b.nlast
    3064:	ldur	x9, [x29, #-200]
    3068:	str	x24, [x9, w8, uxtw #3]
    306c:	ldp	w8, w9, [x29, #-192]
    3070:	cmp	w8, w9
    3074:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    3078:	add	w8, w8, #0x1
    307c:	cmp	w8, w9
    3080:	stur	w8, [x29, #-192]
    3084:	b.cs	393c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34e4>  // b.hs, b.nlast
    3088:	ldur	x9, [x29, #-200]
    308c:	str	x23, [x9, w8, uxtw #3]
    3090:	ldp	w8, w9, [x29, #-192]
    3094:	cmp	w8, w9
    3098:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    309c:	add	w8, w8, #0x1
    30a0:	cmp	w8, w9
    30a4:	stur	w8, [x29, #-192]
    30a8:	b.cs	3958 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3500>  // b.hs, b.nlast
    30ac:	ldur	x9, [x29, #-200]
    30b0:	str	x22, [x9, w8, uxtw #3]
    30b4:	ldp	w8, w9, [x29, #-192]
    30b8:	cmp	w8, w9
    30bc:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    30c0:	ldur	x22, [x29, #-200]
    30c4:	add	x8, x8, #0x1
    30c8:	lsl	x23, x8, #3
    30cc:	stur	w8, [x29, #-192]
    30d0:	ldr	x1, [x22], #8
    30d4:	sub	x0, x29, #0x30
    30d8:	bl	625c <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    30dc:	subs	x23, x23, #0x8
    30e0:	b.ne	30d0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c78>  // b.any
    30e4:	ldr	x23, [sp, #24]
    30e8:	ldr	w9, [sp, #208]
    30ec:	cbz	w9, 3334 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2edc>
    30f0:	ldr	x10, [sp, #200]
    30f4:	add	x9, x9, x9, lsl #1
    30f8:	mov	x8, xzr
    30fc:	lsl	x24, x9, #3
    3100:	add	x25, x10, #0x10
    3104:	mov	w26, #0x1                   	// #1
    3108:	b	311c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2cc4>
    310c:	mov	x8, x21
    3110:	subs	x24, x24, #0x18
    3114:	add	x25, x25, #0x18
    3118:	b.eq	3334 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2edc>  // b.none
    311c:	ldur	x27, [x25, #-16]
    3120:	cmp	x8, x27
    3124:	b.eq	3110 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2cb8>  // b.none
    3128:	cmp	x27, x21
    312c:	b.eq	310c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2cb4>  // b.none
    3130:	cbz	x27, 3e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a1c>
    3134:	ldrb	w8, [x27, #16]
    3138:	cmp	w8, #0x37
    313c:	b.ne	324c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2df4>  // b.any
    3140:	ldrh	w8, [x27, #18]
    3144:	ldr	x22, [x27, #56]
    3148:	and	w9, w8, #0x1f
    314c:	add	w9, w9, #0xff
    3150:	orr	w9, w9, #0x100
    3154:	tst	w8, #0x1f
    3158:	csel	w8, wzr, w9, eq  // eq = none
    315c:	tbz	w8, #8, 3204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dac>
    3160:	lsl	x23, x26, x8
    3164:	cbz	w23, 3204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dac>
    3168:	ldur	x0, [x29, #-48]
    316c:	mov	x1, x22
    3170:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3174:	cbz	w0, 3f04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3aac>
    3178:	ldur	w8, [x29, #-32]
    317c:	mov	w9, w0
    3180:	and	x10, x23, #0xffffffff
    3184:	neg	x11, x10
    3188:	sub	x12, x8, #0x1
    318c:	add	x13, x12, x9
    3190:	add	x10, x12, x10
    3194:	udiv	x12, x13, x9
    3198:	and	x10, x10, x11
    319c:	mul	x11, x12, x9
    31a0:	cmp	x11, x10
    31a4:	csel	w9, w10, w11, cc  // cc = lo, ul, last
    31a8:	cmp	x11, x10
    31ac:	b.eq	3204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dac>  // b.none
    31b0:	sub	w23, w9, w8
    31b4:	cbz	w23, 3204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dac>
    31b8:	ldur	x0, [x29, #-40]
    31bc:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    31c0:	mov	w1, w23
    31c4:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    31c8:	cbz	x0, 3204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dac>
    31cc:	ldp	w8, w9, [x29, #-192]
    31d0:	mov	x23, x0
    31d4:	cmp	w8, w9
    31d8:	b.cs	3318 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ec0>  // b.hs, b.nlast
    31dc:	ldur	x9, [x29, #-200]
    31e0:	str	x23, [x9, w8, uxtw #3]
    31e4:	ldp	w8, w9, [x29, #-192]
    31e8:	cmp	w8, w9
    31ec:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    31f0:	add	w8, w8, #0x1
    31f4:	sub	x0, x29, #0x30
    31f8:	mov	x1, x23
    31fc:	stur	w8, [x29, #-192]
    3200:	bl	625c <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    3204:	ldur	x8, [x27, #-24]
    3208:	cbz	x8, 3ed4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a7c>
    320c:	ldrb	w9, [x8, #16]
    3210:	cmp	w9, #0xd
    3214:	b.ne	3ef4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a9c>  // b.any
    3218:	ldr	w28, [x8, #32]
    321c:	add	x23, x8, #0x18
    3220:	cmp	w28, #0x40
    3224:	b.ls	3240 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2de8>  // b.plast
    3228:	mov	x0, x23
    322c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3230:	sub	w8, w28, w0
    3234:	cmp	w8, #0x41
    3238:	b.cs	3f24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3acc>  // b.hs, b.nlast
    323c:	ldr	x23, [x23]
    3240:	ldr	x1, [x23]
    3244:	ldr	x23, [sp, #24]
    3248:	b	3254 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dfc>
    324c:	ldr	x22, [x27]
    3250:	mov	w1, #0x1                   	// #1
    3254:	ldr	w8, [x25]
    3258:	cmn	w8, #0x1
    325c:	b.ne	3e94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a3c>  // b.any
    3260:	ldur	w8, [x29, #-192]
    3264:	cmp	x1, #0x1
    3268:	str	w8, [x25]
    326c:	b.ne	3294 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e3c>  // b.any
    3270:	ldur	w9, [x29, #-188]
    3274:	cmp	w8, w9
    3278:	b.cs	32e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e88>  // b.hs, b.nlast
    327c:	ldur	x9, [x29, #-200]
    3280:	str	x22, [x9, w8, uxtw #3]
    3284:	ldp	w8, w9, [x29, #-192]
    3288:	cmp	w8, w9
    328c:	b.cc	32c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e6c>  // b.lo, b.ul, b.last
    3290:	b	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>
    3294:	mov	x0, x22
    3298:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    329c:	ldp	w8, w9, [x29, #-192]
    32a0:	mov	x23, x0
    32a4:	cmp	w8, w9
    32a8:	b.cs	32fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ea4>  // b.hs, b.nlast
    32ac:	ldur	x9, [x29, #-200]
    32b0:	str	x23, [x9, w8, uxtw #3]
    32b4:	ldp	w8, w9, [x29, #-192]
    32b8:	ldr	x23, [sp, #24]
    32bc:	cmp	w8, w9
    32c0:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    32c4:	add	w8, w8, #0x1
    32c8:	sub	x0, x29, #0x30
    32cc:	mov	x1, x22
    32d0:	stur	w8, [x29, #-192]
    32d4:	bl	625c <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>
    32d8:	mov	x8, x27
    32dc:	b	3110 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2cb8>
    32e0:	sub	x0, x29, #0xc8
    32e4:	mov	w3, #0x8                   	// #8
    32e8:	mov	x1, x20
    32ec:	mov	x2, xzr
    32f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    32f4:	ldur	w8, [x29, #-192]
    32f8:	b	327c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e24>
    32fc:	sub	x0, x29, #0xc8
    3300:	mov	w3, #0x8                   	// #8
    3304:	mov	x1, x20
    3308:	mov	x2, xzr
    330c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3310:	ldur	w8, [x29, #-192]
    3314:	b	32ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e54>
    3318:	sub	x0, x29, #0xc8
    331c:	mov	w3, #0x8                   	// #8
    3320:	mov	x1, x20
    3324:	mov	x2, xzr
    3328:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    332c:	ldur	w8, [x29, #-192]
    3330:	b	31dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d84>
    3334:	ldur	x1, [x29, #-200]
    3338:	ldur	w2, [x29, #-192]
    333c:	mov	x0, x19
    3340:	mov	w3, wzr
    3344:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
    3348:	ldr	w8, [x23, #168]
    334c:	sub	w8, w8, #0x1
    3350:	cmp	w8, #0x2
    3354:	b.cs	33f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2fa0>  // b.hs, b.nlast
    3358:	ldr	x8, [sp, #32]
    335c:	ldr	x0, [x8, #40]
    3360:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    3364:	mov	x22, x0
    3368:	mov	x0, x23
    336c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3370:	mov	x20, x0
    3374:	mov	x0, x22
    3378:	mov	x1, x19
    337c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3380:	mov	x23, x0
    3384:	mov	x24, x1
    3388:	mov	x0, x22
    338c:	mov	x1, x19
    3390:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3394:	cbz	w0, 3f84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b2c>
    3398:	and	w8, w24, #0xff
    339c:	cbnz	w8, 3fa4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b4c>
    33a0:	mov	w8, w0
    33a4:	add	x9, x23, #0x7
    33a8:	add	x9, x8, x9, lsr #3
    33ac:	sub	x9, x9, #0x1
    33b0:	udiv	x9, x9, x8
    33b4:	mov	x0, x20
    33b8:	mul	x21, x9, x8
    33bc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    33c0:	cmp	x21, x0
    33c4:	b.ls	33d0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2f78>  // b.plast
    33c8:	mov	w8, wzr
    33cc:	b	33f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2f98>
    33d0:	mov	x0, x22
    33d4:	mov	x1, x19
    33d8:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    33dc:	mov	w22, w0
    33e0:	mov	x0, x20
    33e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    33e8:	cmp	x0, w22, uxtw
    33ec:	cset	w8, cs  // cs = hs, nlast
    33f0:	ldr	x23, [sp, #24]
    33f4:	strb	w8, [x23, #232]
    33f8:	ldur	x0, [x29, #-200]
    33fc:	sub	x8, x29, #0xc8
    3400:	add	x8, x8, #0x10
    3404:	cmp	x0, x8
    3408:	b.eq	3410 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2fb8>  // b.none
    340c:	bl	0 <free>
    3410:	ldur	x0, [x29, #-96]
    3414:	sub	x8, x29, #0x60
    3418:	add	x8, x8, #0x10
    341c:	cmp	x0, x8
    3420:	b.eq	3428 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2fd0>  // b.none
    3424:	bl	0 <free>
    3428:	add	x0, sp, #0xc8
    342c:	mov	x1, x23
    3430:	str	x19, [x23, #176]
    3434:	bl	4288 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>
    3438:	str	x0, [x23, #184]
    343c:	ldr	w8, [sp, #160]
    3440:	cbz	w8, 37fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33a4>
    3444:	ldr	x21, [sp, #152]
    3448:	sub	x9, x29, #0xc8
    344c:	add	x10, x9, #0x30
    3450:	add	x27, x9, #0x8
    3454:	add	x8, x21, x8, lsl #3
    3458:	mov	w28, #0x101                 	// #257
    345c:	str	x10, [x29, #8]
    3460:	str	x8, [sp, #96]
    3464:	b	3478 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3020>
    3468:	ldr	x8, [sp, #96]
    346c:	add	x21, x21, #0x8
    3470:	cmp	x21, x8
    3474:	b.eq	37fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33a4>  // b.none
    3478:	ldr	x20, [x21]
    347c:	mov	x0, x20
    3480:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    3484:	mov	x22, x0
    3488:	mov	x0, x20
    348c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    3490:	mov	w8, #0x200                 	// #512
    3494:	sturh	w8, [x29, #-156]
    3498:	ldr	x8, [x29, #8]
    349c:	stp	x0, xzr, [x29, #-176]
    34a0:	sub	x0, x29, #0xc8
    34a4:	mov	x1, x20
    34a8:	stur	xzr, [x29, #-200]
    34ac:	stur	wzr, [x29, #-160]
    34b0:	sturb	wzr, [x29, #-154]
    34b4:	stp	xzr, xzr, [x27]
    34b8:	stp	xzr, xzr, [x8]
    34bc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    34c0:	mov	x0, x20
    34c4:	stur	xzr, [x29, #-24]
    34c8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    34cc:	ldr	x23, [x20, #8]
    34d0:	cbnz	x23, 3594 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x313c>
    34d4:	ldur	x0, [x29, #-176]
    34d8:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    34dc:	mov	x23, x0
    34e0:	mov	x0, x20
    34e4:	mov	w1, wzr
    34e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    34ec:	ldur	x8, [x29, #-192]
    34f0:	stp	xzr, xzr, [x29, #-48]
    34f4:	sturh	w28, [x29, #-32]
    34f8:	mov	x24, x0
    34fc:	ldr	x8, [x8, #56]
    3500:	ldr	x8, [x8, #40]
    3504:	mov	x0, x8
    3508:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    350c:	mov	x25, x0
    3510:	mov	w0, #0x40                  	// #64
    3514:	mov	w1, #0x1                   	// #1
    3518:	bl	0 <_ZN4llvm4UsernwEmj>
    351c:	ldr	w2, [x25, #4]
    3520:	sub	x4, x29, #0x60
    3524:	mov	x1, x23
    3528:	mov	x3, x24
    352c:	mov	x5, xzr
    3530:	mov	x26, x0
    3534:	stp	xzr, xzr, [x29, #-96]
    3538:	sturh	w28, [x29, #-80]
    353c:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    3540:	sub	x0, x29, #0xc8
    3544:	sub	x2, x29, #0x30
    3548:	mov	x1, x26
    354c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3550:	mov	x23, x0
    3554:	mov	x0, x20
    3558:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    355c:	cbz	w0, 3648 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x31f0>
    3560:	mov	w8, w0
    3564:	fmov	d0, x8
    3568:	cnt	v0.8b, v0.8b
    356c:	uaddlv	h0, v0.8b
    3570:	fmov	w9, s0
    3574:	cmp	x9, #0x1
    3578:	b.ne	3e54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39fc>  // b.any
    357c:	clz	x8, x8
    3580:	eor	x8, x8, #0x3f
    3584:	mov	w9, #0x100                 	// #256
    3588:	b	3650 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x31f8>
    358c:	ldr	x23, [x23, #8]
    3590:	cbz	x23, 34d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x307c>
    3594:	mov	x0, x23
    3598:	bl	0 <_ZNK4llvm3Use7getUserEv>
    359c:	cbz	x0, 3b54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36fc>
    35a0:	ldrb	w8, [x0, #16]
    35a4:	cmp	w8, #0x50
    35a8:	b.ne	358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>  // b.any
    35ac:	ldur	x8, [x0, #-24]
    35b0:	cbz	x8, 358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>
    35b4:	ldrb	w9, [x8, #16]
    35b8:	cbnz	w9, 358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>
    35bc:	ldrb	w9, [x8, #33]
    35c0:	tbz	w9, #5, 358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>
    35c4:	ldr	w8, [x8, #36]
    35c8:	cmp	w8, #0x10
    35cc:	b.ne	358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>  // b.any
    35d0:	ldr	x0, [x0, #40]
    35d4:	mov	w1, #0x3                   	// #3
    35d8:	bl	658c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    35dc:	tbnz	w0, #0, 358c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3134>
    35e0:	mov	w1, #0xf5                  	// #245
    35e4:	mov	x0, x22
    35e8:	mov	x2, xzr
    35ec:	mov	x3, xzr
    35f0:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    35f4:	stp	xzr, xzr, [x29, #-96]
    35f8:	sturh	w28, [x29, #-80]
    35fc:	ldr	x8, [x0]
    3600:	ldrb	w9, [x8, #8]
    3604:	cmp	w9, #0xf
    3608:	b.ne	3cac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3854>  // b.any
    360c:	ldr	x8, [x8, #16]
    3610:	ldr	x1, [x8]
    3614:	cbz	x1, 3ccc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3874>
    3618:	ldrb	w8, [x1, #8]
    361c:	cmp	w8, #0xc
    3620:	b.ne	3cec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3894>  // b.any
    3624:	mov	x2, x0
    3628:	sub	x0, x29, #0xc8
    362c:	sub	x5, x29, #0x60
    3630:	mov	x3, xzr
    3634:	mov	x4, xzr
    3638:	mov	x6, xzr
    363c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3640:	stur	x0, [x29, #-24]
    3644:	b	34d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x307c>
    3648:	mov	x8, xzr
    364c:	mov	x9, xzr
    3650:	and	x10, x19, #0xffffffffffff0000
    3654:	orr	x8, x8, x10
    3658:	orr	x19, x8, x9
    365c:	mov	x0, x23
    3660:	mov	x1, x19
    3664:	bl	0 <_ZN4llvm10AllocaInst12setAlignmentENS_10MaybeAlignE>
    3668:	mov	x0, x20
    366c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3670:	ldr	x24, [x20, #8]
    3674:	cbz	x24, 37a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x334c>
    3678:	mov	x0, x24
    367c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3680:	cbz	x0, 3b34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36dc>
    3684:	ldrb	w8, [x0, #16]
    3688:	mov	x25, x0
    368c:	cmp	w8, #0x50
    3690:	b.ne	3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>  // b.any
    3694:	ldur	x8, [x25, #-24]
    3698:	cbz	x8, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    369c:	ldrb	w9, [x8, #16]
    36a0:	cbnz	w9, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    36a4:	ldrb	w9, [x8, #33]
    36a8:	tbz	w9, #5, 3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>
    36ac:	ldr	w9, [x8, #36]
    36b0:	cmp	w9, #0x11
    36b4:	b.ne	36c8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3270>  // b.any
    36b8:	mov	x0, x25
    36bc:	mov	x1, x23
    36c0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    36c4:	b	3748 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32f0>
    36c8:	ldr	w8, [x8, #36]
    36cc:	cmp	w8, #0x10
    36d0:	b.ne	3a74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x361c>  // b.any
    36d4:	ldur	x8, [x29, #-24]
    36d8:	cbz	x8, 3748 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32f0>
    36dc:	sub	x0, x29, #0xc8
    36e0:	mov	x1, x25
    36e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36e8:	mov	w1, #0xf4                  	// #244
    36ec:	mov	x0, x22
    36f0:	mov	x2, xzr
    36f4:	mov	x3, xzr
    36f8:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    36fc:	stp	xzr, xzr, [x29, #-96]
    3700:	sturh	w28, [x29, #-80]
    3704:	ldr	x8, [x0]
    3708:	ldrb	w9, [x8, #8]
    370c:	cmp	w9, #0xf
    3710:	b.ne	3cac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3854>  // b.any
    3714:	ldr	x8, [x8, #16]
    3718:	ldr	x1, [x8]
    371c:	cbz	x1, 3ccc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3874>
    3720:	ldrb	w8, [x1, #8]
    3724:	cmp	w8, #0xc
    3728:	b.ne	3cec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3894>  // b.any
    372c:	mov	x2, x0
    3730:	sub	x0, x29, #0xc8
    3734:	sub	x3, x29, #0x18
    3738:	sub	x5, x29, #0x60
    373c:	mov	w4, #0x1                   	// #1
    3740:	mov	x6, xzr
    3744:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3748:	ldrb	w8, [x25, #16]
    374c:	cmp	w8, #0x17
    3750:	b.ls	3ad4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x367c>  // b.plast
    3754:	ldp	w8, w9, [sp, #112]
    3758:	cmp	w8, w9
    375c:	b.cs	3788 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3330>  // b.hs, b.nlast
    3760:	ldr	x9, [sp, #104]
    3764:	str	x25, [x9, w8, uxtw #3]
    3768:	ldp	w8, w9, [sp, #112]
    376c:	cmp	w8, w9
    3770:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    3774:	add	w8, w8, #0x1
    3778:	str	w8, [sp, #112]
    377c:	ldr	x24, [x24, #8]
    3780:	cbnz	x24, 3678 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3220>
    3784:	b	37a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3350>
    3788:	ldr	x1, [sp, #88]
    378c:	add	x0, sp, #0x68
    3790:	mov	w3, #0x8                   	// #8
    3794:	mov	x2, xzr
    3798:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    379c:	ldr	w8, [sp, #112]
    37a0:	b	3760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3308>
    37a4:	ldp	w8, w9, [sp, #112]
    37a8:	cmp	w8, w9
    37ac:	b.cs	37e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3388>  // b.hs, b.nlast
    37b0:	ldr	x9, [sp, #104]
    37b4:	str	x20, [x9, w8, uxtw #3]
    37b8:	ldp	w8, w9, [sp, #112]
    37bc:	cmp	w8, w9
    37c0:	b.cs	3ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x365c>  // b.hs, b.nlast
    37c4:	ldur	x1, [x29, #-200]
    37c8:	add	w8, w8, #0x1
    37cc:	str	w8, [sp, #112]
    37d0:	cbz	x1, 3468 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3010>
    37d4:	sub	x0, x29, #0xc8
    37d8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    37dc:	b	3468 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3010>
    37e0:	ldr	x1, [sp, #88]
    37e4:	add	x0, sp, #0x68
    37e8:	mov	w3, #0x8                   	// #8
    37ec:	mov	x2, xzr
    37f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    37f4:	ldr	w8, [sp, #112]
    37f8:	b	37b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3358>
    37fc:	ldr	w8, [sp, #112]
    3800:	ldr	x19, [sp, #104]
    3804:	cbz	w8, 3820 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33c8>
    3808:	lsl	x20, x8, #3
    380c:	ldr	x0, [x19], #8
    3810:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3814:	subs	x20, x20, #0x8
    3818:	b.ne	380c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33b4>  // b.any
    381c:	ldr	x19, [sp, #104]
    3820:	add	x8, sp, #0x68
    3824:	add	x8, x8, #0x10
    3828:	cmp	x19, x8
    382c:	b.eq	3838 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33e0>  // b.none
    3830:	mov	x0, x19
    3834:	bl	0 <free>
    3838:	ldr	x0, [sp, #152]
    383c:	add	x8, sp, #0x98
    3840:	add	x8, x8, #0x10
    3844:	cmp	x0, x8
    3848:	b.eq	3850 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f8>  // b.none
    384c:	bl	0 <free>
    3850:	ldr	x0, [sp, #200]
    3854:	add	x8, sp, #0xc8
    3858:	add	x8, x8, #0x10
    385c:	cmp	x0, x8
    3860:	b.eq	3868 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3410>  // b.none
    3864:	bl	0 <free>
    3868:	ldr	x1, [sp, #408]
    386c:	cbz	x1, 3878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3420>
    3870:	add	x0, sp, #0x198
    3874:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3878:	ldr	w8, [sp, #760]
    387c:	ldr	x19, [sp, #752]
    3880:	cbz	w8, 38ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3454>
    3884:	mov	w9, #0x38                  	// #56
    3888:	mul	x20, x8, x9
    388c:	add	x21, x19, x20
    3890:	ldur	x0, [x21, #-32]
    3894:	bl	0 <free>
    3898:	ldur	x0, [x21, #-56]
    389c:	bl	0 <free>
    38a0:	subs	x20, x20, #0x38
    38a4:	b.ne	388c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3434>  // b.any
    38a8:	ldr	x19, [sp, #752]
    38ac:	ldr	x8, [sp]
    38b0:	add	x8, x8, #0x10
    38b4:	cmp	x19, x8
    38b8:	b.eq	38c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x346c>  // b.none
    38bc:	mov	x0, x19
    38c0:	bl	0 <free>
    38c4:	ldr	x0, [sp, #480]
    38c8:	add	x8, sp, #0x1e0
    38cc:	add	x8, x8, #0x10
    38d0:	cmp	x0, x8
    38d4:	b.eq	38dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3484>  // b.none
    38d8:	bl	0 <free>
    38dc:	add	sp, sp, #0xad0
    38e0:	ldp	x20, x19, [sp, #112]
    38e4:	ldp	x22, x21, [sp, #96]
    38e8:	ldp	x24, x23, [sp, #80]
    38ec:	ldp	x26, x25, [sp, #64]
    38f0:	ldp	x28, x27, [sp, #48]
    38f4:	ldp	x29, x30, [sp, #32]
    38f8:	ldp	d9, d8, [sp, #16]
    38fc:	ldr	d10, [sp], #128
    3900:	ret
    3904:	sub	x0, x29, #0xc8
    3908:	mov	w3, #0x8                   	// #8
    390c:	mov	x1, x20
    3910:	mov	x2, xzr
    3914:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3918:	ldur	w8, [x29, #-192]
    391c:	b	3040 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2be8>
    3920:	sub	x0, x29, #0xc8
    3924:	mov	w3, #0x8                   	// #8
    3928:	mov	x1, x20
    392c:	mov	x2, xzr
    3930:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3934:	ldur	w8, [x29, #-192]
    3938:	b	3064 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c0c>
    393c:	sub	x0, x29, #0xc8
    3940:	mov	w3, #0x8                   	// #8
    3944:	mov	x1, x20
    3948:	mov	x2, xzr
    394c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3950:	ldur	w8, [x29, #-192]
    3954:	b	3088 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c30>
    3958:	sub	x0, x29, #0xc8
    395c:	mov	w3, #0x8                   	// #8
    3960:	mov	x1, x20
    3964:	mov	x2, xzr
    3968:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    396c:	ldur	w8, [x29, #-192]
    3970:	b	30ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c54>
    3974:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3978:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    397c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3980:	add	x0, x0, #0x0
    3984:	add	x1, x1, #0x0
    3988:	add	x3, x3, #0x0
    398c:	mov	w2, #0x33d                 	// #829
    3990:	bl	0 <__assert_fail>
    3994:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3998:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    399c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39a0:	add	x0, x0, #0x0
    39a4:	add	x1, x1, #0x0
    39a8:	add	x3, x3, #0x0
    39ac:	mov	w2, #0x8b                  	// #139
    39b0:	bl	0 <__assert_fail>
    39b4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39bc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39c0:	add	x0, x0, #0x0
    39c4:	add	x1, x1, #0x0
    39c8:	add	x3, x3, #0x0
    39cc:	mov	w2, #0x69                  	// #105
    39d0:	bl	0 <__assert_fail>
    39d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39dc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39e0:	add	x0, x0, #0x0
    39e4:	add	x1, x1, #0x0
    39e8:	add	x3, x3, #0x0
    39ec:	mov	w2, #0x3a                  	// #58
    39f0:	bl	0 <__assert_fail>
    39f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39f8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39fc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a00:	add	x0, x0, #0x0
    3a04:	add	x1, x1, #0x0
    3a08:	add	x3, x3, #0x0
    3a0c:	mov	w2, #0xda                  	// #218
    3a10:	bl	0 <__assert_fail>
    3a14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a20:	add	x0, x0, #0x0
    3a24:	add	x1, x1, #0x0
    3a28:	add	x3, x3, #0x0
    3a2c:	mov	w2, #0x5b                  	// #91
    3a30:	bl	0 <__assert_fail>
    3a34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a40:	add	x0, x0, #0x0
    3a44:	add	x1, x1, #0x0
    3a48:	add	x3, x3, #0x0
    3a4c:	mov	w2, #0xb8                  	// #184
    3a50:	bl	0 <__assert_fail>
    3a54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a60:	add	x0, x0, #0x0
    3a64:	add	x1, x1, #0x0
    3a68:	add	x3, x3, #0x0
    3a6c:	mov	w2, #0x8b                  	// #139
    3a70:	bl	0 <__assert_fail>
    3a74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a80:	add	x0, x0, #0x0
    3a84:	add	x1, x1, #0x0
    3a88:	add	x3, x3, #0x0
    3a8c:	mov	w2, #0x108                 	// #264
    3a90:	bl	0 <__assert_fail>
    3a94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3aa0:	add	x0, x0, #0x0
    3aa4:	add	x1, x1, #0x0
    3aa8:	add	x3, x3, #0x0
    3aac:	mov	w2, #0x1ab                 	// #427
    3ab0:	bl	0 <__assert_fail>
    3ab4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ab8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3abc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ac0:	add	x0, x0, #0x0
    3ac4:	add	x1, x1, #0x0
    3ac8:	add	x3, x3, #0x0
    3acc:	mov	w2, #0x43                  	// #67
    3ad0:	bl	0 <__assert_fail>
    3ad4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ad8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3adc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ae0:	add	x0, x0, #0x0
    3ae4:	add	x1, x1, #0x0
    3ae8:	add	x3, x3, #0x0
    3aec:	mov	w2, #0x108                 	// #264
    3af0:	bl	0 <__assert_fail>
    3af4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3af8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3afc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b00:	add	x0, x0, #0x0
    3b04:	add	x1, x1, #0x0
    3b08:	add	x3, x3, #0x0
    3b0c:	mov	w2, #0x99                  	// #153
    3b10:	bl	0 <__assert_fail>
    3b14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b20:	add	x0, x0, #0x0
    3b24:	add	x1, x1, #0x0
    3b28:	add	x3, x3, #0x0
    3b2c:	mov	w2, #0x99                  	// #153
    3b30:	bl	0 <__assert_fail>
    3b34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b40:	add	x0, x0, #0x0
    3b44:	add	x1, x1, #0x0
    3b48:	add	x3, x3, #0x0
    3b4c:	mov	w2, #0x69                  	// #105
    3b50:	bl	0 <__assert_fail>
    3b54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b60:	add	x0, x0, #0x0
    3b64:	add	x1, x1, #0x0
    3b68:	add	x3, x3, #0x0
    3b6c:	mov	w2, #0x69                  	// #105
    3b70:	bl	0 <__assert_fail>
    3b74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b80:	add	x0, x0, #0x0
    3b84:	add	x1, x1, #0x0
    3b88:	add	x3, x3, #0x0
    3b8c:	mov	w2, #0x69                  	// #105
    3b90:	bl	0 <__assert_fail>
    3b94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3b9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ba0:	add	x0, x0, #0x0
    3ba4:	add	x1, x1, #0x0
    3ba8:	add	x3, x3, #0x0
    3bac:	mov	w2, #0x108                 	// #264
    3bb0:	bl	0 <__assert_fail>
    3bb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bbc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bc0:	add	x0, x0, #0x0
    3bc4:	add	x1, x1, #0x0
    3bc8:	add	x3, x3, #0x0
    3bcc:	mov	w2, #0x69                  	// #105
    3bd0:	bl	0 <__assert_fail>
    3bd4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bd8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bdc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3be0:	add	x0, x0, #0x0
    3be4:	add	x1, x1, #0x0
    3be8:	add	x3, x3, #0x0
    3bec:	mov	w2, #0x108                 	// #264
    3bf0:	bl	0 <__assert_fail>
    3bf4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bf8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3bfc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c00:	add	x0, x0, #0x0
    3c04:	add	x1, x1, #0x0
    3c08:	add	x3, x3, #0x0
    3c0c:	mov	w2, #0x69                  	// #105
    3c10:	bl	0 <__assert_fail>
    3c14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c1c:	add	x0, x0, #0x0
    3c20:	add	x1, x1, #0x0
    3c24:	mov	w2, #0x324                 	// #804
    3c28:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3c2c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c30:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c34:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c38:	add	x0, x0, #0x0
    3c3c:	add	x1, x1, #0x0
    3c40:	add	x3, x3, #0x0
    3c44:	mov	w2, #0x69                  	// #105
    3c48:	bl	0 <__assert_fail>
    3c4c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c50:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c54:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c58:	add	x0, x0, #0x0
    3c5c:	add	x1, x1, #0x0
    3c60:	add	x3, x3, #0x0
    3c64:	mov	w2, #0x3d4                 	// #980
    3c68:	bl	0 <__assert_fail>
    3c6c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c74:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c78:	add	x0, x0, #0x0
    3c7c:	add	x1, x1, #0x0
    3c80:	add	x3, x3, #0x0
    3c84:	mov	w2, #0x95                  	// #149
    3c88:	bl	0 <__assert_fail>
    3c8c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c90:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c94:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c98:	add	x0, x0, #0x0
    3c9c:	add	x1, x1, #0x0
    3ca0:	add	x3, x3, #0x0
    3ca4:	mov	w2, #0xb3                  	// #179
    3ca8:	bl	0 <__assert_fail>
    3cac:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cb0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cb4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cb8:	add	x0, x0, #0x0
    3cbc:	add	x1, x1, #0x0
    3cc0:	add	x3, x3, #0x0
    3cc4:	mov	w2, #0x17e                 	// #382
    3cc8:	bl	0 <__assert_fail>
    3ccc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cd0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cd4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cd8:	add	x0, x0, #0x0
    3cdc:	add	x1, x1, #0x0
    3ce0:	add	x3, x3, #0x0
    3ce4:	mov	w2, #0x69                  	// #105
    3ce8:	bl	0 <__assert_fail>
    3cec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cf0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cf4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cf8:	add	x0, x0, #0x0
    3cfc:	add	x1, x1, #0x0
    3d00:	add	x3, x3, #0x0
    3d04:	mov	w2, #0x108                 	// #264
    3d08:	bl	0 <__assert_fail>
    3d0c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d10:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d14:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d18:	add	x0, x0, #0x0
    3d1c:	add	x1, x1, #0x0
    3d20:	add	x3, x3, #0x0
    3d24:	mov	w2, #0x69                  	// #105
    3d28:	bl	0 <__assert_fail>
    3d2c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d30:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d34:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d38:	add	x0, x0, #0x0
    3d3c:	add	x1, x1, #0x0
    3d40:	add	x3, x3, #0x0
    3d44:	mov	w2, #0x11f6                	// #4598
    3d48:	bl	0 <__assert_fail>
    3d4c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d50:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d54:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d58:	add	x0, x0, #0x0
    3d5c:	add	x1, x1, #0x0
    3d60:	add	x3, x3, #0x0
    3d64:	mov	w2, #0x1214                	// #4628
    3d68:	bl	0 <__assert_fail>
    3d6c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d74:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d78:	add	x0, x0, #0x0
    3d7c:	add	x1, x1, #0x0
    3d80:	add	x3, x3, #0x0
    3d84:	mov	w2, #0x17c                 	// #380
    3d88:	bl	0 <__assert_fail>
    3d8c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d90:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d94:	add	x0, x0, #0x0
    3d98:	add	x1, x1, #0x0
    3d9c:	mov	w2, #0x35c                 	// #860
    3da0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3da4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3da8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3db0:	add	x0, x0, #0x0
    3db4:	add	x1, x1, #0x0
    3db8:	add	x3, x3, #0x0
    3dbc:	mov	w2, #0x1126                	// #4390
    3dc0:	bl	0 <__assert_fail>
    3dc4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dc8:	add	x0, x0, #0x0
    3dcc:	mov	w1, #0x1                   	// #1
    3dd0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3dd4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dd8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ddc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3de0:	add	x0, x0, #0x0
    3de4:	add	x1, x1, #0x0
    3de8:	add	x3, x3, #0x0
    3dec:	mov	w2, #0x69                  	// #105
    3df0:	bl	0 <__assert_fail>
    3df4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3df8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dfc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e00:	add	x0, x0, #0x0
    3e04:	add	x1, x1, #0x0
    3e08:	add	x3, x3, #0x0
    3e0c:	mov	w2, #0x69                  	// #105
    3e10:	bl	0 <__assert_fail>
    3e14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e20:	add	x0, x0, #0x0
    3e24:	add	x1, x1, #0x0
    3e28:	add	x3, x3, #0x0
    3e2c:	mov	w2, #0x194                 	// #404
    3e30:	bl	0 <__assert_fail>
    3e34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e40:	add	x0, x0, #0x0
    3e44:	add	x1, x1, #0x0
    3e48:	add	x3, x3, #0x0
    3e4c:	mov	w2, #0x69                  	// #105
    3e50:	bl	0 <__assert_fail>
    3e54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e60:	add	x0, x0, #0x0
    3e64:	add	x1, x1, #0x0
    3e68:	add	x3, x3, #0x0
    3e6c:	mov	w2, #0x88                  	// #136
    3e70:	bl	0 <__assert_fail>
    3e74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e80:	add	x0, x0, #0x0
    3e84:	add	x1, x1, #0x0
    3e88:	add	x3, x3, #0x0
    3e8c:	mov	w2, #0x69                  	// #105
    3e90:	bl	0 <__assert_fail>
    3e94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ea0:	add	x0, x0, #0x0
    3ea4:	add	x1, x1, #0x0
    3ea8:	add	x3, x3, #0x0
    3eac:	mov	w2, #0x137                 	// #311
    3eb0:	bl	0 <__assert_fail>
    3eb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3eb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ebc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ec0:	add	x0, x0, #0x0
    3ec4:	add	x1, x1, #0x0
    3ec8:	add	x3, x3, #0x0
    3ecc:	mov	w2, #0x69                  	// #105
    3ed0:	bl	0 <__assert_fail>
    3ed4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ed8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3edc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ee0:	add	x0, x0, #0x0
    3ee4:	add	x1, x1, #0x0
    3ee8:	add	x3, x3, #0x0
    3eec:	mov	w2, #0x69                  	// #105
    3ef0:	bl	0 <__assert_fail>
    3ef4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ef8:	add	x0, x0, #0x0
    3efc:	mov	w1, #0x1                   	// #1
    3f00:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3f04:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f08:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f0c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f10:	add	x0, x0, #0x0
    3f14:	add	x1, x1, #0x0
    3f18:	add	x3, x3, #0x0
    3f1c:	mov	w2, #0x2ce                 	// #718
    3f20:	bl	0 <__assert_fail>
    3f24:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f28:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f2c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f30:	add	x0, x0, #0x0
    3f34:	add	x1, x1, #0x0
    3f38:	add	x3, x3, #0x0
    3f3c:	mov	w2, #0x657                 	// #1623
    3f40:	bl	0 <__assert_fail>
    3f44:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f48:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f4c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f50:	add	x0, x0, #0x0
    3f54:	add	x1, x1, #0x0
    3f58:	add	x3, x3, #0x0
    3f5c:	mov	w2, #0x69                  	// #105
    3f60:	bl	0 <__assert_fail>
    3f64:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f68:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f6c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f70:	add	x0, x0, #0x0
    3f74:	add	x1, x1, #0x0
    3f78:	add	x3, x3, #0x0
    3f7c:	mov	w2, #0x108                 	// #264
    3f80:	bl	0 <__assert_fail>
    3f84:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f88:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f8c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f90:	add	x0, x0, #0x0
    3f94:	add	x1, x1, #0x0
    3f98:	add	x3, x3, #0x0
    3f9c:	mov	w2, #0xc7                  	// #199
    3fa0:	bl	0 <__assert_fail>
    3fa4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fa8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fb0:	add	x0, x0, #0x0
    3fb4:	add	x1, x1, #0x0
    3fb8:	add	x3, x3, #0x0
    3fbc:	mov	w2, #0x7d                  	// #125
    3fc0:	bl	0 <__assert_fail>

0000000000003fc4 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>:
    3fc4:	stp	x29, x30, [sp, #-48]!
    3fc8:	str	x21, [sp, #16]
    3fcc:	stp	x20, x19, [sp, #32]
    3fd0:	mov	x29, sp
    3fd4:	ldp	w8, w9, [x0, #8]
    3fd8:	mov	x20, x2
    3fdc:	mov	x19, x0
    3fe0:	mov	x21, x1
    3fe4:	cmp	w8, w9
    3fe8:	b.cs	4050 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x8c>  // b.hs, b.nlast
    3fec:	ldr	x9, [x19]
    3ff0:	ldr	x12, [x21]
    3ff4:	ldr	x10, [x20]
    3ff8:	mov	w11, #0x18                  	// #24
    3ffc:	umaddl	x11, w8, w11, x9
    4000:	str	x12, [x11], #8
    4004:	cbz	x10, 406c <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xa8>
    4008:	ldrb	w12, [x10, #16]
    400c:	cmp	w12, #0x17
    4010:	b.ls	408c <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xc8>  // b.plast
    4014:	mov	w8, w8
    4018:	str	x10, [x11]
    401c:	mov	w10, #0x18                  	// #24
    4020:	madd	x9, x8, x10, x9
    4024:	mov	w10, #0xffffffff            	// #-1
    4028:	str	w10, [x9, #16]
    402c:	ldr	w9, [x19, #12]
    4030:	cmp	w8, w9
    4034:	b.cs	40ac <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xe8>  // b.hs, b.nlast
    4038:	add	w8, w8, #0x1
    403c:	str	w8, [x19, #8]
    4040:	ldp	x20, x19, [sp, #32]
    4044:	ldr	x21, [sp, #16]
    4048:	ldp	x29, x30, [sp], #48
    404c:	ret
    4050:	add	x1, x19, #0x10
    4054:	mov	w3, #0x18                  	// #24
    4058:	mov	x0, x19
    405c:	mov	x2, xzr
    4060:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4064:	ldr	w8, [x19, #8]
    4068:	b	3fec <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x28>
    406c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4070:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4074:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4078:	add	x0, x0, #0x0
    407c:	add	x1, x1, #0x0
    4080:	add	x3, x3, #0x0
    4084:	mov	w2, #0x69                  	// #105
    4088:	bl	0 <__assert_fail>
    408c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4090:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4094:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4098:	add	x0, x0, #0x0
    409c:	add	x1, x1, #0x0
    40a0:	add	x3, x3, #0x0
    40a4:	mov	w2, #0x108                 	// #264
    40a8:	bl	0 <__assert_fail>
    40ac:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40b0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40b4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40b8:	add	x0, x0, #0x0
    40bc:	add	x1, x1, #0x0
    40c0:	add	x3, x3, #0x0
    40c4:	mov	w2, #0x43                  	// #67
    40c8:	bl	0 <__assert_fail>

00000000000040cc <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>:
    40cc:	stp	x29, x30, [sp, #-64]!
    40d0:	stp	x24, x23, [sp, #16]
    40d4:	stp	x22, x21, [sp, #32]
    40d8:	stp	x20, x19, [sp, #48]
    40dc:	mov	x29, sp
    40e0:	mov	x19, x2
    40e4:	mov	x21, x1
    40e8:	mov	x22, x0
    40ec:	bl	0 <_ZN4llvm4dbgsEv>
    40f0:	ldp	x9, x8, [x0, #16]
    40f4:	mov	x20, x0
    40f8:	sub	x9, x9, x8
    40fc:	cmp	x9, #0xd
    4100:	b.hi	4124 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x58>  // b.pmore
    4104:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4108:	add	x1, x1, #0x0
    410c:	mov	w2, #0xe                   	// #14
    4110:	mov	x0, x20
    4114:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4118:	mov	x20, x0
    411c:	ldr	x0, [x0, #24]
    4120:	b	4148 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x7c>
    4124:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4128:	add	x9, x9, #0x0
    412c:	ldur	x10, [x9, #6]
    4130:	ldr	x9, [x9]
    4134:	stur	x10, [x8, #6]
    4138:	str	x9, [x8]
    413c:	ldr	x8, [x20, #24]
    4140:	add	x0, x8, #0xe
    4144:	str	x0, [x20, #24]
    4148:	ldr	x8, [x20, #16]
    414c:	sub	x8, x8, x0
    4150:	cmp	x21, x8
    4154:	b.ls	4174 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xa8>  // b.plast
    4158:	mov	x0, x20
    415c:	mov	x1, x22
    4160:	mov	x2, x21
    4164:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4168:	mov	x20, x0
    416c:	ldr	x0, [x0, #24]
    4170:	b	4190 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xc4>
    4174:	cbz	x21, 4190 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xc4>
    4178:	mov	x1, x22
    417c:	mov	x2, x21
    4180:	bl	0 <memcpy>
    4184:	ldr	x8, [x20, #24]
    4188:	add	x0, x8, x21
    418c:	str	x0, [x20, #24]
    4190:	ldr	x8, [x20, #16]
    4194:	sub	x8, x8, x0
    4198:	cmp	x8, #0xe
    419c:	b.hi	41c0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xf4>  // b.pmore
    41a0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41a4:	add	x1, x1, #0x0
    41a8:	mov	w2, #0xf                   	// #15
    41ac:	mov	x0, x20
    41b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    41b4:	ldr	w8, [x19, #8]
    41b8:	cbnz	w8, 41ec <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x120>
    41bc:	b	4274 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1a8>
    41c0:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41c4:	add	x8, x8, #0x0
    41c8:	ldur	x9, [x8, #7]
    41cc:	ldr	x8, [x8]
    41d0:	stur	x9, [x0, #7]
    41d4:	str	x8, [x0]
    41d8:	ldr	x8, [x20, #24]
    41dc:	add	x8, x8, #0xf
    41e0:	str	x8, [x20, #24]
    41e4:	ldr	w8, [x19, #8]
    41e8:	cbz	w8, 4274 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1a8>
    41ec:	ldr	x21, [x19]
    41f0:	mov	w9, #0x18                  	// #24
    41f4:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41f8:	mov	x22, xzr
    41fc:	add	x19, x19, #0x0
    4200:	madd	x23, x8, x9, x21
    4204:	mov	w24, #0x20                  	// #32
    4208:	b	4238 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x16c>
    420c:	ldr	x9, [x19]
    4210:	strb	w24, [x8, #8]
    4214:	str	x9, [x8]
    4218:	ldr	x8, [x0, #24]
    421c:	add	x8, x8, #0x9
    4220:	str	x8, [x0, #24]
    4224:	ldr	x0, [x21, #8]
    4228:	bl	0 <_ZNK4llvm5Value4dumpEv>
    422c:	add	x21, x21, #0x18
    4230:	cmp	x21, x23
    4234:	b.eq	4274 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1a8>  // b.none
    4238:	ldr	x20, [x21]
    423c:	cmp	x22, x20
    4240:	b.eq	4250 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x184>  // b.none
    4244:	mov	x0, x20
    4248:	bl	0 <_ZNK4llvm5Value4dumpEv>
    424c:	mov	x22, x20
    4250:	bl	0 <_ZN4llvm4dbgsEv>
    4254:	ldp	x9, x8, [x0, #16]
    4258:	sub	x9, x9, x8
    425c:	cmp	x9, #0x8
    4260:	b.hi	420c <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x140>  // b.pmore
    4264:	mov	w2, #0x9                   	// #9
    4268:	mov	x1, x19
    426c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4270:	b	4224 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x158>
    4274:	ldp	x20, x19, [sp, #48]
    4278:	ldp	x22, x21, [sp, #32]
    427c:	ldp	x24, x23, [sp, #16]
    4280:	ldp	x29, x30, [sp], #64
    4284:	ret

0000000000004288 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>:
    4288:	stp	d9, d8, [sp, #-112]!
    428c:	stp	x29, x30, [sp, #16]
    4290:	stp	x28, x27, [sp, #32]
    4294:	stp	x26, x25, [sp, #48]
    4298:	stp	x24, x23, [sp, #64]
    429c:	stp	x22, x21, [sp, #80]
    42a0:	stp	x20, x19, [sp, #96]
    42a4:	mov	x29, sp
    42a8:	sub	sp, sp, #0x310
    42ac:	ldr	x19, [x1]
    42b0:	mov	x21, x0
    42b4:	mov	x27, x1
    42b8:	mov	x0, x19
    42bc:	bl	0 <_ZNK4llvm5Value10getContextEv>
    42c0:	ldp	x8, x9, [x19, #32]
    42c4:	mov	x22, x0
    42c8:	add	x9, x9, #0x28
    42cc:	cmp	x9, x8
    42d0:	b.eq	42ec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x64>  // b.none
    42d4:	ldrb	w9, [x8]
    42d8:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    42dc:	sub	x9, x8, #0x18
    42e0:	cmp	x8, #0x0
    42e4:	csel	x23, xzr, x9, eq  // eq = none
    42e8:	b	42f0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x68>
    42ec:	mov	x23, xzr
    42f0:	mov	x0, x23
    42f4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    42f8:	stp	x0, xzr, [sp, #344]
    42fc:	mov	w8, #0x200                 	// #512
    4300:	add	x0, sp, #0x140
    4304:	mov	x1, x23
    4308:	str	wzr, [sp, #360]
    430c:	strb	wzr, [sp, #366]
    4310:	stp	xzr, xzr, [sp, #328]
    4314:	str	xzr, [sp, #320]
    4318:	strh	w8, [sp, #364]
    431c:	stp	xzr, xzr, [sp, #368]
    4320:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4324:	ldr	x0, [x27, #176]
    4328:	mov	w1, wzr
    432c:	str	x0, [sp, #312]
    4330:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    4334:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4338:	add	x8, x8, #0x0
    433c:	mov	w9, #0x103                 	// #259
    4340:	stp	x8, xzr, [sp, #224]
    4344:	strh	w9, [sp, #240]
    4348:	ldr	x8, [x19]
    434c:	cmp	x8, x0
    4350:	b.eq	4398 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x110>  // b.none
    4354:	ldrb	w8, [x19, #16]
    4358:	mov	x2, x0
    435c:	cmp	w8, #0x10
    4360:	b.ls	43a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x118>  // b.plast
    4364:	mov	w8, #0x101                 	// #257
    4368:	add	x3, sp, #0x188
    436c:	mov	w0, #0x31                  	// #49
    4370:	mov	x1, x19
    4374:	mov	x4, xzr
    4378:	stp	xzr, xzr, [sp, #392]
    437c:	strh	w8, [sp, #408]
    4380:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    4384:	mov	x1, x0
    4388:	add	x0, sp, #0x140
    438c:	add	x2, sp, #0xe0
    4390:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4394:	b	43b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x128>
    4398:	mov	x0, x19
    439c:	b	43b4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12c>
    43a0:	mov	w0, #0x31                  	// #49
    43a4:	mov	x1, x19
    43a8:	mov	w3, wzr
    43ac:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    43b0:	cbz	x0, 55d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1350>
    43b4:	ldrb	w8, [x0, #16]
    43b8:	cmp	w8, #0x17
    43bc:	b.ls	54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1250>  // b.plast
    43c0:	str	x0, [sp, #304]
    43c4:	mov	x0, x19
    43c8:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    43cc:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    43d0:	ldr	d0, [x9]
    43d4:	add	x8, sp, #0xe0
    43d8:	add	x8, x8, #0x10
    43dc:	stp	xzr, x0, [sp, #280]
    43e0:	add	x0, sp, #0xe0
    43e4:	str	wzr, [sp, #300]
    43e8:	stp	xzr, xzr, [sp, #256]
    43ec:	str	xzr, [sp, #248]
    43f0:	str	wzr, [sp, #272]
    43f4:	strb	wzr, [sp, #296]
    43f8:	str	x8, [sp, #224]
    43fc:	str	d0, [sp, #232]
    4400:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
    4404:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4408:	ldr	d8, [x8]
    440c:	add	x8, sp, #0x90
    4410:	add	x8, x8, #0x10
    4414:	str	x8, [sp, #144]
    4418:	str	d8, [sp, #152]
    441c:	ldr	w8, [x27, #168]
    4420:	cbnz	w8, 4440 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1b8>
    4424:	ldr	x8, [x27, #208]
    4428:	cbz	x8, 4440 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1b8>
    442c:	str	x8, [sp, #160]
    4430:	mov	w8, #0x2                   	// #2
    4434:	mov	w9, #0x1                   	// #1
    4438:	str	w8, [sp, #168]
    443c:	str	w9, [sp, #152]
    4440:	add	x8, sp, #0x140
    4444:	add	x9, sp, #0x138
    4448:	add	x10, sp, #0x130
    444c:	stp	x22, x8, [sp, #112]
    4450:	stp	x9, x10, [sp, #128]
    4454:	ldr	w8, [x21, #8]
    4458:	cbz	w8, 4978 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6f0>
    445c:	ldr	x9, [x21]
    4460:	add	x8, x8, x8, lsl #1
    4464:	mov	x23, xzr
    4468:	mov	x24, xzr
    446c:	mov	x22, xzr
    4470:	mov	w21, #0xffffffff            	// #-1
    4474:	add	x26, sp, #0x40
    4478:	lsl	x28, x8, #3
    447c:	add	x20, x9, #0x8
    4480:	b	44a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x218>
    4484:	mov	x0, x25
    4488:	mov	x1, x22
    448c:	mov	x2, x24
    4490:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    4494:	subs	x28, x28, #0x18
    4498:	add	x20, x20, #0x18
    449c:	b.eq	4978 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6f0>  // b.none
    44a0:	ldur	x9, [x20, #-8]
    44a4:	mov	x8, x23
    44a8:	cmp	x22, x9
    44ac:	b.eq	4808 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x580>  // b.none
    44b0:	ldr	w21, [x20, #8]
    44b4:	cmn	w21, #0x1
    44b8:	b.eq	5358 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10d0>  // b.none
    44bc:	cbz	x9, 52f8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1070>
    44c0:	ldrb	w8, [x9, #16]
    44c4:	mov	x22, x9
    44c8:	cmp	w8, #0x37
    44cc:	csel	x23, x9, xzr, eq  // eq = none
    44d0:	cbz	x23, 4510 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x288>
    44d4:	ldp	w8, w9, [sp, #152]
    44d8:	cmp	w8, w9
    44dc:	b.cs	4964 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6dc>  // b.hs, b.nlast
    44e0:	ldr	x10, [sp, #144]
    44e4:	cmp	w8, w9
    44e8:	add	x9, x10, w8, uxtw #4
    44ec:	str	x23, [x9]
    44f0:	str	w21, [x9, #8]
    44f4:	b.cs	52a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1018>  // b.hs, b.nlast
    44f8:	add	w8, w8, #0x1
    44fc:	mov	x0, x23
    4500:	str	w8, [sp, #152]
    4504:	bl	0 <_ZNK4llvm10AllocaInst14isStaticAllocaEv>
    4508:	tbnz	w0, #0, 4800 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x578>
    450c:	b	53b8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1130>
    4510:	cmp	w8, #0x4e
    4514:	b.gt	455c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x2d4>
    4518:	cmp	w8, #0x11
    451c:	b.eq	45d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x350>  // b.none
    4520:	cmp	w8, #0x1d
    4524:	b.ne	45a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x320>  // b.any
    4528:	ldur	x1, [x22, #-72]
    452c:	cbz	x1, 54f8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1270>
    4530:	ldrb	w8, [x1, #16]
    4534:	cmp	w8, #0x12
    4538:	b.ne	5518 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1290>  // b.any
    453c:	ldr	x0, [x22, #40]
    4540:	mov	x2, xzr
    4544:	mov	x3, xzr
    4548:	mov	x4, xzr
    454c:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
    4550:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4554:	mov	x25, x0
    4558:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    455c:	cmp	w8, #0x4f
    4560:	b.eq	460c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x384>  // b.none
    4564:	cmp	w8, #0x50
    4568:	b.ne	45a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x320>  // b.any
    456c:	ldur	x9, [x22, #-24]
    4570:	cbz	x9, 45b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    4574:	ldrb	w10, [x9, #16]
    4578:	cbnz	w10, 45b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    457c:	ldrb	w10, [x9, #33]
    4580:	tbz	w10, #5, 45b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    4584:	ldr	w9, [x9, #36]
    4588:	sub	w9, w9, #0x23
    458c:	cmp	w9, #0x1
    4590:	b.hi	45b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>  // b.pmore
    4594:	ldr	x0, [x22, #40]
    4598:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    459c:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    45a0:	mov	x25, x0
    45a4:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    45a8:	cmp	w8, #0x17
    45ac:	b.ls	54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1250>  // b.plast
    45b0:	sub	w8, w8, #0x19
    45b4:	cmp	w8, #0xa
    45b8:	b.ls	5538 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12b0>  // b.plast
    45bc:	add	x0, sp, #0xe0
    45c0:	mov	x1, x19
    45c4:	mov	x2, x22
    45c8:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    45cc:	tbz	w0, #0, 467c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3f4>
    45d0:	ldp	x8, x9, [x22, #32]
    45d4:	b	4684 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x3fc>
    45d8:	ldr	x8, [sp, #304]
    45dc:	ldp	x8, x9, [x8, #32]
    45e0:	add	x9, x9, #0x28
    45e4:	cmp	x9, x8
    45e8:	b.eq	46d0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x448>  // b.none
    45ec:	ldrb	w9, [x8]
    45f0:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    45f4:	sub	x9, x8, #0x18
    45f8:	cmp	x8, #0x0
    45fc:	csel	x25, xzr, x9, eq  // eq = none
    4600:	ldr	x0, [x22, #24]
    4604:	cbnz	x0, 46dc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x454>
    4608:	b	5598 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1310>
    460c:	ldr	x23, [x22, #40]
    4610:	mov	x0, x23
    4614:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4618:	cbz	x0, 5558 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12d0>
    461c:	ldrb	w8, [x0, #16]
    4620:	mov	x25, x0
    4624:	cmp	w8, #0x22
    4628:	b.ne	46b0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x428>  // b.any
    462c:	ldr	x23, [x25, #40]
    4630:	add	x1, x25, #0x18
    4634:	mov	w8, #0x101                 	// #257
    4638:	add	x2, sp, #0x188
    463c:	mov	x0, x23
    4640:	stp	xzr, xzr, [sp, #392]
    4644:	strh	w8, [sp, #408]
    4648:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    464c:	mov	x24, x0
    4650:	mov	x0, x23
    4654:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4658:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    465c:	ldr	w9, [x25, #20]
    4660:	and	x8, x9, #0xfffffff
    4664:	cbz	w8, 5578 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12f0>
    4668:	tbnz	w9, #30, 46ec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x464>
    466c:	mov	w9, #0x18                  	// #24
    4670:	mneg	x8, x8, x9
    4674:	add	x8, x25, x8
    4678:	b	46f0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x468>
    467c:	ldr	x8, [sp, #304]
    4680:	ldp	x8, x9, [x8, #32]
    4684:	add	x9, x9, #0x28
    4688:	cmp	x9, x8
    468c:	b.eq	46a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x420>  // b.none
    4690:	ldrb	w9, [x8]
    4694:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    4698:	sub	x9, x8, #0x18
    469c:	cmp	x8, #0x0
    46a0:	csel	x25, xzr, x9, eq  // eq = none
    46a4:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    46a8:	mov	x25, xzr
    46ac:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    46b0:	mov	x0, x23
    46b4:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    46b8:	ldrb	w8, [x0]
    46bc:	tbnz	w8, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    46c0:	sub	x8, x0, #0x18
    46c4:	cmp	x0, #0x0
    46c8:	csel	x25, xzr, x8, eq  // eq = none
    46cc:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    46d0:	mov	x25, xzr
    46d4:	ldr	x0, [x22, #24]
    46d8:	cbz	x0, 5598 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1310>
    46dc:	ldr	w1, [x22, #32]
    46e0:	mov	w2, #0x17                  	// #23
    46e4:	bl	0 <_ZN4llvm8Function15removeParamAttrEjNS_9Attribute8AttrKindE>
    46e8:	b	4770 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4e8>
    46ec:	ldur	x8, [x25, #-8]
    46f0:	ldr	x25, [x8]
    46f4:	mov	w8, #0x101                 	// #257
    46f8:	mov	w0, #0x38                  	// #56
    46fc:	mov	w1, #0x1                   	// #1
    4700:	str	x27, [sp, #16]
    4704:	stp	xzr, xzr, [sp, #392]
    4708:	strh	w8, [sp, #408]
    470c:	bl	0 <_ZN4llvm4UsernwEmj>
    4710:	add	x6, sp, #0x188
    4714:	mov	w1, #0x33                  	// #51
    4718:	mov	w5, #0x1                   	// #1
    471c:	mov	x2, x25
    4720:	mov	x3, xzr
    4724:	mov	x4, xzr
    4728:	mov	x7, x23
    472c:	mov	x26, x0
    4730:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
    4734:	cbz	x26, 55b8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1330>
    4738:	cmp	x24, #0x0
    473c:	mov	w8, #0x1                   	// #1
    4740:	cinc	w27, w8, ne  // ne = any
    4744:	mov	w0, #0x38                  	// #56
    4748:	mov	w1, w27
    474c:	bl	0 <_ZN4llvm4UsernwEmj>
    4750:	mov	x1, x26
    4754:	mov	x2, x24
    4758:	mov	w3, w27
    475c:	mov	x4, x23
    4760:	mov	x25, x0
    4764:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjS4_>
    4768:	ldr	x27, [sp, #16]
    476c:	add	x26, sp, #0x40
    4770:	add	x0, sp, #0x140
    4774:	mov	x1, x25
    4778:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    477c:	ldp	x24, x23, [sp, #304]
    4780:	mov	x0, x22
    4784:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4788:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    478c:	add	x8, x8, #0x0
    4790:	stp	x0, x1, [sp, #64]
    4794:	stp	x26, x8, [sp, #392]
    4798:	mov	w8, #0x305                 	// #773
    479c:	add	x0, sp, #0x140
    47a0:	add	x5, sp, #0x188
    47a4:	mov	x1, x23
    47a8:	mov	x2, x24
    47ac:	mov	w3, wzr
    47b0:	mov	w4, w21
    47b4:	strh	w8, [sp, #408]
    47b8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47bc:	mov	x23, x0
    47c0:	mov	w0, #0x40                  	// #64
    47c4:	mov	w1, #0x2                   	// #2
    47c8:	bl	0 <_ZN4llvm4UsernwEmj>
    47cc:	mov	x1, x22
    47d0:	mov	x2, x23
    47d4:	mov	w3, wzr
    47d8:	mov	x4, xzr
    47dc:	mov	x24, x0
    47e0:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    47e4:	mov	w8, #0x101                 	// #257
    47e8:	add	x0, sp, #0x140
    47ec:	add	x2, sp, #0x188
    47f0:	mov	x1, x24
    47f4:	stp	xzr, xzr, [sp, #392]
    47f8:	strh	w8, [sp, #408]
    47fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4800:	mov	x24, xzr
    4804:	mov	x8, xzr
    4808:	ldr	x25, [x20]
    480c:	ldr	x23, [x25, #40]
    4810:	cmp	x8, x23
    4814:	b.eq	4928 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6a0>  // b.none
    4818:	mov	x0, x23
    481c:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    4820:	ldrb	w8, [x0]
    4824:	tbnz	w8, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    4828:	cmn	w21, #0x1
    482c:	b.eq	5378 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10f0>  // b.none
    4830:	sub	x8, x0, #0x18
    4834:	cmp	x0, #0x0
    4838:	csel	x1, xzr, x8, eq  // eq = none
    483c:	add	x0, sp, #0x140
    4840:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4844:	add	x0, sp, #0x70
    4848:	mov	w1, w21
    484c:	mov	x2, x22
    4850:	bl	6370 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    4854:	mov	x24, x0
    4858:	mov	x0, x22
    485c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4860:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4864:	add	x8, x8, #0x0
    4868:	stp	x0, x1, [sp, #64]
    486c:	stp	x26, x8, [sp, #392]
    4870:	mov	w8, #0x305                 	// #773
    4874:	add	x1, sp, #0x188
    4878:	mov	x0, x24
    487c:	strh	w8, [sp, #408]
    4880:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    4884:	cbz	x22, 52f8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1070>
    4888:	ldrb	w8, [x22, #16]
    488c:	cmp	w8, #0x37
    4890:	b.eq	491c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x694>  // b.none
    4894:	ldr	x8, [sp, #312]
    4898:	ldr	w9, [x8, #12]
    489c:	cmp	w9, w21
    48a0:	b.ls	53c8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1140>  // b.plast
    48a4:	ldr	x8, [x8, #16]
    48a8:	mov	x0, x22
    48ac:	ldr	x25, [x8, w21, uxtw #3]
    48b0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    48b4:	add	x8, sp, #0x28
    48b8:	str	x8, [sp, #64]
    48bc:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    48c0:	add	x8, x8, #0x0
    48c4:	stp	x0, x1, [sp, #40]
    48c8:	str	x8, [sp, #72]
    48cc:	mov	w8, #0x305                 	// #773
    48d0:	mov	w0, #0x40                  	// #64
    48d4:	mov	w1, #0x1                   	// #1
    48d8:	strh	w8, [sp, #80]
    48dc:	bl	0 <_ZN4llvm4UsernwEmj>
    48e0:	mov	w8, #0x101                 	// #257
    48e4:	add	x3, sp, #0x188
    48e8:	mov	x1, x25
    48ec:	mov	x2, x24
    48f0:	mov	x4, xzr
    48f4:	mov	x26, x0
    48f8:	stp	xzr, xzr, [sp, #392]
    48fc:	strh	w8, [sp, #408]
    4900:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    4904:	add	x0, sp, #0x140
    4908:	add	x2, sp, #0x40
    490c:	mov	x1, x26
    4910:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4914:	mov	x24, x0
    4918:	add	x26, sp, #0x40
    491c:	ldr	x25, [x20]
    4920:	cbnz	x25, 4930 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6a8>
    4924:	b	5318 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1090>
    4928:	mov	x23, x8
    492c:	cbz	x25, 5318 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1090>
    4930:	ldrb	w8, [x25, #16]
    4934:	cmp	w8, #0x4f
    4938:	b.ne	4484 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1fc>  // b.any
    493c:	ldr	w8, [x25, #20]
    4940:	and	w8, w8, #0xfffffff
    4944:	cmp	w8, #0x1
    4948:	b.ne	5398 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1110>  // b.any
    494c:	mov	x0, x25
    4950:	mov	x1, x24
    4954:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    4958:	mov	x0, x25
    495c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4960:	b	4494 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x20c>
    4964:	add	x0, sp, #0x90
    4968:	mov	x1, xzr
    496c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4970:	ldp	w8, w9, [sp, #152]
    4974:	b	44e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x258>
    4978:	ldr	x8, [sp, #304]
    497c:	ldp	x8, x0, [x8, #32]
    4980:	add	x9, x0, #0x28
    4984:	cmp	x9, x8
    4988:	b.eq	49a4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x71c>  // b.none
    498c:	ldrb	w9, [x8]
    4990:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    4994:	sub	x9, x8, #0x18
    4998:	cmp	x8, #0x0
    499c:	csel	x8, xzr, x9, eq  // eq = none
    49a0:	b	49a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x720>
    49a4:	mov	x8, xzr
    49a8:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    49ac:	add	x9, x9, #0x0
    49b0:	mov	w20, #0x103                 	// #259
    49b4:	add	x1, x8, #0x18
    49b8:	add	x2, sp, #0x188
    49bc:	stp	x9, xzr, [sp, #392]
    49c0:	strh	w20, [sp, #408]
    49c4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    49c8:	ldr	x8, [x0, #48]
    49cc:	ldrb	w9, [x8]
    49d0:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    49d4:	sub	x9, x8, #0x18
    49d8:	cmp	x8, #0x0
    49dc:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    49e0:	csel	x9, xzr, x9, eq  // eq = none
    49e4:	add	x8, x8, #0x0
    49e8:	add	x1, x9, #0x18
    49ec:	add	x2, sp, #0x188
    49f0:	mov	x21, x0
    49f4:	stp	x8, xzr, [sp, #392]
    49f8:	strh	w20, [sp, #408]
    49fc:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4a00:	str	x21, [x27, #192]
    4a04:	ldr	x8, [x21, #48]
    4a08:	ldrb	w9, [x8]
    4a0c:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    4a10:	sub	x9, x8, #0x18
    4a14:	cmp	x8, #0x0
    4a18:	csel	x1, xzr, x9, eq  // eq = none
    4a1c:	add	x0, sp, #0x140
    4a20:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4a24:	ldr	w8, [sp, #152]
    4a28:	add	x9, sp, #0x40
    4a2c:	add	x9, x9, #0x10
    4a30:	str	x9, [sp]
    4a34:	str	x9, [sp, #64]
    4a38:	str	d8, [sp, #72]
    4a3c:	cbz	w8, 5174 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xeec>
    4a40:	ldr	x24, [sp, #144]
    4a44:	mov	w20, wzr
    4a48:	add	x25, x24, x8, lsl #4
    4a4c:	b	4a5c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7d4>
    4a50:	add	x24, x24, #0x10
    4a54:	cmp	x24, x25
    4a58:	b.eq	4b50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8c8>  // b.none
    4a5c:	ldr	x21, [x24]
    4a60:	str	wzr, [sp, #72]
    4a64:	mov	x0, x21
    4a68:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4a6c:	ldr	x22, [x21, #8]
    4a70:	cbnz	x22, 4ad0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x848>
    4a74:	ldr	w8, [sp, #72]
    4a78:	cbz	w8, 4a50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7c8>
    4a7c:	ldr	w1, [x24, #8]
    4a80:	add	x0, sp, #0x70
    4a84:	mov	x2, x21
    4a88:	bl	6370 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    4a8c:	mov	x1, x21
    4a90:	mov	x22, x0
    4a94:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    4a98:	ldr	w8, [sp, #72]
    4a9c:	cbz	w8, 4a50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7c8>
    4aa0:	ldr	x23, [sp, #64]
    4aa4:	lsl	x26, x8, #3
    4aa8:	ldr	x0, [x23], #8
    4aac:	mov	x1, x21
    4ab0:	mov	x2, x22
    4ab4:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    4ab8:	subs	x26, x26, #0x8
    4abc:	b.ne	4aa8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x820>  // b.any
    4ac0:	b	4a50 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7c8>
    4ac4:	mov	w20, #0x1                   	// #1
    4ac8:	ldr	x22, [x22, #8]
    4acc:	cbz	x22, 4a74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7ec>
    4ad0:	mov	x0, x22
    4ad4:	bl	0 <_ZNK4llvm3Use7getUserEv>
    4ad8:	cbz	x0, 5260 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfd8>
    4adc:	ldrb	w8, [x0, #16]
    4ae0:	mov	x23, x0
    4ae4:	cmp	w8, #0x17
    4ae8:	b.ls	5280 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xff8>  // b.plast
    4aec:	add	x0, sp, #0xe0
    4af0:	mov	x1, x19
    4af4:	mov	x2, x23
    4af8:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    4afc:	tbz	w0, #0, 4ac4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x83c>
    4b00:	ldp	w8, w9, [sp, #72]
    4b04:	cmp	w8, w9
    4b08:	b.cs	4b34 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8ac>  // b.hs, b.nlast
    4b0c:	ldr	x9, [sp, #64]
    4b10:	str	x23, [x9, w8, uxtw #3]
    4b14:	ldp	w8, w9, [sp, #72]
    4b18:	cmp	w8, w9
    4b1c:	b.cs	52a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1018>  // b.hs, b.nlast
    4b20:	add	w8, w8, #0x1
    4b24:	str	w8, [sp, #72]
    4b28:	ldr	x22, [x22, #8]
    4b2c:	cbnz	x22, 4ad0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x848>
    4b30:	b	4a74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7ec>
    4b34:	ldr	x1, [sp]
    4b38:	add	x0, sp, #0x40
    4b3c:	mov	w3, #0x8                   	// #8
    4b40:	mov	x2, xzr
    4b44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b48:	ldr	w8, [sp, #72]
    4b4c:	b	4b0c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x884>
    4b50:	tbz	w20, #0, 5174 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xeec>
    4b54:	ldr	x8, [sp, #304]
    4b58:	ldp	x8, x9, [x8, #32]
    4b5c:	add	x9, x9, #0x28
    4b60:	cmp	x9, x8
    4b64:	b.eq	4b80 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8f8>  // b.none
    4b68:	ldrb	w9, [x8]
    4b6c:	tbnz	w9, #2, 5338 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10b0>
    4b70:	sub	x9, x8, #0x18
    4b74:	cmp	x8, #0x0
    4b78:	csel	x1, xzr, x9, eq  // eq = none
    4b7c:	b	4b84 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8fc>
    4b80:	mov	x1, xzr
    4b84:	add	x0, sp, #0x140
    4b88:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b8c:	ldr	w8, [sp, #152]
    4b90:	cbz	w8, 5174 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xeec>
    4b94:	ldr	x23, [sp, #144]
    4b98:	adrp	x10, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4b9c:	adrp	x11, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4ba0:	ldr	d8, [x10]
    4ba4:	ldr	d9, [x11]
    4ba8:	add	x9, sp, #0x188
    4bac:	mov	w12, #0x3                   	// #3
    4bb0:	mov	w25, #0x1                   	// #1
    4bb4:	mov	w22, #0x18                  	// #24
    4bb8:	add	x28, x9, #0x8
    4bbc:	add	x21, x9, #0x28
    4bc0:	add	x20, x9, #0x110
    4bc4:	dup	v0.2d, x12
    4bc8:	add	x8, x23, x8, lsl #4
    4bcc:	str	q0, [sp, #16]
    4bd0:	str	x8, [sp, #8]
    4bd4:	b	4bec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x964>
    4bd8:	ldr	x8, [sp, #8]
    4bdc:	add	x23, x23, #0x10
    4be0:	mov	w25, #0x1                   	// #1
    4be4:	cmp	x23, x8
    4be8:	b.eq	5174 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xeec>  // b.none
    4bec:	ldr	x24, [x23]
    4bf0:	mov	x0, x24
    4bf4:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    4bf8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    4bfc:	add	x8, sp, #0xe0
    4c00:	str	x0, [sp, #392]
    4c04:	stp	xzr, xzr, [x28]
    4c08:	str	x21, [sp, #416]
    4c0c:	str	d8, [sp, #424]
    4c10:	str	xzr, [sp, #624]
    4c14:	str	x20, [sp, #632]
    4c18:	str	x20, [sp, #640]
    4c1c:	str	d9, [sp, #648]
    4c20:	str	wzr, [sp, #656]
    4c24:	str	w25, [sp, #752]
    4c28:	str	xzr, [sp, #744]
    4c2c:	str	x8, [sp, #760]
    4c30:	str	x19, [sp, #768]
    4c34:	ldr	x1, [x24]
    4c38:	ldrb	w8, [x1, #8]
    4c3c:	cmp	w8, #0xf
    4c40:	b.ne	53e8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1160>  // b.any
    4c44:	bl	0 <_ZNK4llvm10DataLayout12getIndexTypeEPNS_4TypeE>
    4c48:	cbz	x0, 5408 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1180>
    4c4c:	ldrb	w8, [x0, #8]
    4c50:	cmp	w8, #0xb
    4c54:	b.ne	5428 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11a0>  // b.any
    4c58:	strb	w25, [sp, #736]
    4c5c:	ldr	w8, [x0, #8]
    4c60:	lsr	w8, w8, #8
    4c64:	str	w8, [sp, #48]
    4c68:	cbz	w8, 5448 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11c0>
    4c6c:	cmp	w8, #0x40
    4c70:	b.hi	4c7c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x9f4>  // b.pmore
    4c74:	str	xzr, [sp, #40]
    4c78:	b	4c8c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa04>
    4c7c:	add	x0, sp, #0x28
    4c80:	mov	x1, xzr
    4c84:	mov	w2, wzr
    4c88:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    4c8c:	ldr	w8, [sp, #752]
    4c90:	cmp	w8, #0x41
    4c94:	b.cc	4ca4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa1c>  // b.lo, b.ul, b.last
    4c98:	ldr	x0, [sp, #744]
    4c9c:	cbz	x0, 4ca4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa1c>
    4ca0:	bl	0 <_ZdaPv>
    4ca4:	ldr	x8, [sp, #40]
    4ca8:	ldr	w9, [sp, #48]
    4cac:	ldr	q1, [sp, #16]
    4cb0:	add	x0, sp, #0x188
    4cb4:	str	x8, [sp, #744]
    4cb8:	str	w9, [sp, #752]
    4cbc:	add	x8, sp, #0x188
    4cc0:	ldur	q0, [x8, #8]
    4cc4:	mov	x1, x24
    4cc8:	and	v0.16b, v0.16b, v1.16b
    4ccc:	stur	q0, [x8, #8]
    4cd0:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    4cd4:	b	4cdc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa54>
    4cd8:	tbnz	w26, #2, 4f28 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xca0>
    4cdc:	ldr	w9, [sp, #424]
    4ce0:	cbz	w9, 4f28 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xca0>
    4ce4:	ldr	x8, [sp, #416]
    4ce8:	madd	x10, x9, x22, x8
    4cec:	ldur	w27, [x10, #-8]
    4cf0:	stur	wzr, [x10, #-8]
    4cf4:	ldr	w11, [sp, #428]
    4cf8:	ldp	x8, x25, [x10, #-24]
    4cfc:	sub	x9, x9, #0x1
    4d00:	cmp	x9, x11
    4d04:	b.hi	52a0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1018>  // b.pmore
    4d08:	str	w9, [sp, #424]
    4d0c:	and	x0, x8, #0xfffffffffffffff8
    4d10:	ubfx	w9, w8, #2, #1
    4d14:	str	x0, [sp, #728]
    4d18:	strb	w9, [sp, #736]
    4d1c:	tbz	w8, #2, 4d4c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xac4>
    4d20:	ldr	w8, [sp, #752]
    4d24:	cmp	w8, #0x41
    4d28:	b.cc	4d40 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xab8>  // b.lo, b.ul, b.last
    4d2c:	ldr	x8, [sp, #744]
    4d30:	cbz	x8, 4d40 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xab8>
    4d34:	mov	x0, x8
    4d38:	bl	0 <_ZdaPv>
    4d3c:	ldr	x0, [sp, #728]
    4d40:	str	w27, [sp, #752]
    4d44:	mov	w27, wzr
    4d48:	str	x25, [sp, #744]
    4d4c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    4d50:	cbz	x0, 5260 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfd8>
    4d54:	ldrb	w8, [x0, #16]
    4d58:	mov	x26, x0
    4d5c:	cmp	w8, #0x17
    4d60:	b.ls	5280 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xff8>  // b.plast
    4d64:	ldr	x0, [sp, #760]
    4d68:	ldr	x2, [sp, #768]
    4d6c:	mov	x1, x26
    4d70:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    4d74:	tbz	w0, #0, 4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>
    4d78:	ldrb	w8, [x26, #16]
    4d7c:	sub	w8, w8, #0x19
    4d80:	cmp	w8, #0x42
    4d84:	b.hi	52c0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1038>  // b.pmore
    4d88:	adrp	x11, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4d8c:	add	x11, x11, #0x0
    4d90:	adr	x9, 4da0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb18>
    4d94:	ldrb	w10, [x11, x8]
    4d98:	add	x9, x9, x10, lsl #2
    4d9c:	br	x9
    4da0:	ldr	x8, [sp, #400]
    4da4:	tst	x26, #0x7
    4da8:	orr	x8, x8, #0x4
    4dac:	str	x8, [sp, #400]
    4db0:	b.ne	52d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1050>  // b.any
    4db4:	and	x8, x8, #0x7
    4db8:	orr	x8, x8, x26
    4dbc:	str	x8, [sp, #400]
    4dc0:	ldr	x26, [sp, #400]
    4dc4:	cbz	x25, 4cd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa50>
    4dc8:	cmp	w27, #0x41
    4dcc:	b.cc	4cd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa50>  // b.lo, b.ul, b.last
    4dd0:	mov	x0, x25
    4dd4:	bl	0 <_ZdaPv>
    4dd8:	b	4cd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa50>
    4ddc:	ldur	x8, [x26, #-24]
    4de0:	cbz	x8, 4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>
    4de4:	ldrb	w9, [x8, #16]
    4de8:	cbz	w9, 4eb4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc2c>
    4dec:	tst	x26, #0x7
    4df0:	b.ne	5468 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11e0>  // b.any
    4df4:	ldr	x9, [sp, #408]
    4df8:	and	x8, x26, #0xfffffffffffffff8
    4dfc:	mov	x10, x8
    4e00:	cmp	x26, #0x7
    4e04:	bfxil	x10, x9, #0, #2
    4e08:	orr	x9, x10, #0x4
    4e0c:	str	x9, [sp, #408]
    4e10:	b.ls	5488 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1200>  // b.plast
    4e14:	ldrb	w9, [x8, #16]
    4e18:	cmp	w9, #0x23
    4e1c:	b.eq	4e24 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb9c>  // b.none
    4e20:	cmp	w9, #0x1d
    4e24:	ldr	x9, [sp, #400]
    4e28:	and	x9, x9, #0x3
    4e2c:	orr	x8, x8, x9
    4e30:	orr	x8, x8, #0x4
    4e34:	b	4dbc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb34>
    4e38:	mov	x0, x26
    4e3c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4e40:	ldr	x8, [x26, #8]
    4e44:	cbz	x8, 4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>
    4e48:	add	x0, sp, #0x188
    4e4c:	mov	x1, x26
    4e50:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase18adjustOffsetForGEPERNS_17GetElementPtrInstE>
    4e54:	tbnz	w0, #0, 4e80 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xbf8>
    4e58:	ldr	w8, [sp, #752]
    4e5c:	strb	wzr, [sp, #736]
    4e60:	cmp	w8, #0x41
    4e64:	b.cc	4e74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xbec>  // b.lo, b.ul, b.last
    4e68:	ldr	x0, [sp, #744]
    4e6c:	cbz	x0, 4e74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xbec>
    4e70:	bl	0 <_ZdaPv>
    4e74:	mov	w8, #0x1                   	// #1
    4e78:	str	xzr, [sp, #744]
    4e7c:	str	w8, [sp, #752]
    4e80:	add	x0, sp, #0x188
    4e84:	mov	x1, x26
    4e88:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    4e8c:	b	4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>
    4e90:	ldr	x8, [sp, #408]
    4e94:	tst	x26, #0x7
    4e98:	orr	x8, x8, #0x4
    4e9c:	str	x8, [sp, #408]
    4ea0:	b.ne	52d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1050>  // b.any
    4ea4:	and	x8, x8, #0x7
    4ea8:	orr	x8, x8, x26
    4eac:	str	x8, [sp, #408]
    4eb0:	b	4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>
    4eb4:	ldr	w8, [x8, #36]
    4eb8:	cmp	w8, #0xad
    4ebc:	b.le	4eec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc64>
    4ec0:	cmp	w8, #0x104
    4ec4:	b.gt	4f00 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc78>
    4ec8:	sub	w9, w8, #0xae
    4ecc:	cmp	w9, #0x4
    4ed0:	b.hi	4f18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc90>  // b.pmore
    4ed4:	mov	w10, #0x1                   	// #1
    4ed8:	lsl	w9, w10, w9
    4edc:	mov	w10, #0x15                  	// #21
    4ee0:	tst	w9, w10
    4ee4:	b.ne	4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>  // b.any
    4ee8:	b	4f18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc90>
    4eec:	sub	w9, w8, #0x2a
    4ef0:	cmp	w9, #0x3
    4ef4:	b.cc	4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>  // b.lo, b.ul, b.last
    4ef8:	cbz	w8, 4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>
    4efc:	b	4f18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc90>
    4f00:	cmp	w8, #0x105
    4f04:	b.eq	4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>  // b.none
    4f08:	cmp	w8, #0x106
    4f0c:	b.eq	4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>  // b.none
    4f10:	cmp	w8, #0x107
    4f14:	b.eq	4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>  // b.none
    4f18:	sub	w8, w8, #0x93
    4f1c:	cmp	w8, #0x2
    4f20:	b.cc	4dc0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb38>  // b.lo, b.ul, b.last
    4f24:	b	4dec <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>
    4f28:	ldp	x8, x9, [sp, #400]
    4f2c:	orr	w10, w9, w8
    4f30:	tbnz	w10, #2, 4f3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcb4>
    4f34:	mov	w27, wzr
    4f38:	b	501c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd94>
    4f3c:	and	x10, x9, #0xfffffffffffffff8
    4f40:	and	x8, x8, #0xfffffffffffffff8
    4f44:	tst	x9, #0xfffffffffffffff8
    4f48:	csel	x25, x8, x10, eq  // eq = none
    4f4c:	mov	w27, #0x1                   	// #1
    4f50:	cbz	x25, 501c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd94>
    4f54:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    4f58:	ldr	x8, [x8]
    4f5c:	ldrb	w8, [x8]
    4f60:	cbz	w8, 501c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd94>
    4f64:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4f68:	add	x0, x0, #0x0
    4f6c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4f70:	tbz	w0, #0, 5018 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd90>
    4f74:	bl	0 <_ZN4llvm4dbgsEv>
    4f78:	ldp	x9, x8, [x0, #16]
    4f7c:	mov	x26, x0
    4f80:	sub	x9, x9, x8
    4f84:	cmp	x9, #0x2d
    4f88:	b.hi	4fa8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd20>  // b.pmore
    4f8c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4f90:	mov	w2, #0x2e                  	// #46
    4f94:	mov	x0, x26
    4f98:	add	x1, x1, #0x0
    4f9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4fa0:	mov	x26, x0
    4fa4:	b	4fcc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd44>
    4fa8:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4fac:	add	x9, x9, #0x0
    4fb0:	ldur	q0, [x9, #30]
    4fb4:	ldp	q2, q1, [x9]
    4fb8:	stur	q0, [x8, #30]
    4fbc:	stp	q2, q1, [x8]
    4fc0:	ldr	x8, [x26, #24]
    4fc4:	add	x8, x8, #0x2e
    4fc8:	str	x8, [x26, #24]
    4fcc:	mov	x0, x25
    4fd0:	mov	x1, x26
    4fd4:	mov	w2, wzr
    4fd8:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    4fdc:	ldp	x9, x8, [x26, #16]
    4fe0:	cmp	x9, x8
    4fe4:	b.ne	5004 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd7c>  // b.any
    4fe8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4fec:	mov	w2, #0x1                   	// #1
    4ff0:	mov	x0, x26
    4ff4:	add	x1, x1, #0x0
    4ff8:	mov	w27, #0x1                   	// #1
    4ffc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5000:	b	501c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd94>
    5004:	mov	w9, #0xa                   	// #10
    5008:	strb	w9, [x8]
    500c:	ldr	x8, [x26, #24]
    5010:	add	x8, x8, #0x1
    5014:	str	x8, [x26, #24]
    5018:	mov	w27, #0x1                   	// #1
    501c:	ldr	w8, [sp, #752]
    5020:	cmp	w8, #0x41
    5024:	b.cc	5034 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdac>  // b.lo, b.ul, b.last
    5028:	ldr	x0, [sp, #744]
    502c:	cbz	x0, 5034 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdac>
    5030:	bl	0 <_ZdaPv>
    5034:	ldr	x0, [sp, #640]
    5038:	ldr	x8, [sp, #632]
    503c:	cmp	x0, x8
    5040:	b.eq	5048 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc0>  // b.none
    5044:	bl	0 <free>
    5048:	ldr	x9, [sp, #624]
    504c:	ldr	w8, [sp, #424]
    5050:	ldr	x25, [sp, #416]
    5054:	add	x9, x9, #0x1
    5058:	str	x9, [sp, #624]
    505c:	cbz	w8, 5098 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe10>
    5060:	add	x8, x8, x8, lsl #1
    5064:	lsl	x26, x8, #3
    5068:	b	5074 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdec>
    506c:	subs	x26, x26, #0x18
    5070:	b.eq	5094 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe0c>  // b.none
    5074:	add	x8, x25, x26
    5078:	ldur	w9, [x8, #-8]
    507c:	cmp	w9, #0x41
    5080:	b.cc	506c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xde4>  // b.lo, b.ul, b.last
    5084:	ldur	x0, [x8, #-16]
    5088:	cbz	x0, 506c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xde4>
    508c:	bl	0 <_ZdaPv>
    5090:	b	506c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xde4>
    5094:	ldr	x25, [sp, #416]
    5098:	cmp	x25, x21
    509c:	b.eq	50a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe20>  // b.none
    50a0:	mov	x0, x25
    50a4:	bl	0 <free>
    50a8:	cbz	w27, 4bd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x950>
    50ac:	mov	x0, x24
    50b0:	bl	0 <_ZNK4llvm10AllocaInst17isArrayAllocationEv>
    50b4:	tbnz	w0, #0, 54a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1220>
    50b8:	ldr	w1, [x23, #8]
    50bc:	add	x0, sp, #0x70
    50c0:	mov	x2, x24
    50c4:	bl	6370 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    50c8:	mov	w22, #0x101                 	// #257
    50cc:	stp	xzr, xzr, [sp, #40]
    50d0:	strh	w22, [sp, #56]
    50d4:	ldr	x8, [x24]
    50d8:	ldrb	w9, [x8, #8]
    50dc:	cmp	w9, #0xf
    50e0:	b.ne	54b8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1230>  // b.any
    50e4:	ldr	x8, [x8, #16]
    50e8:	mov	x25, x0
    50ec:	mov	w0, #0x40                  	// #64
    50f0:	mov	w1, #0x1                   	// #1
    50f4:	ldr	x26, [x8]
    50f8:	bl	0 <_ZN4llvm4UsernwEmj>
    50fc:	add	x3, sp, #0x188
    5100:	mov	x1, x26
    5104:	mov	x2, x24
    5108:	mov	x4, xzr
    510c:	mov	x27, x0
    5110:	stp	xzr, xzr, [sp, #392]
    5114:	strh	w22, [sp, #408]
    5118:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    511c:	add	x0, sp, #0x140
    5120:	add	x2, sp, #0x28
    5124:	mov	x1, x27
    5128:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    512c:	mov	x24, x0
    5130:	mov	w0, #0x40                  	// #64
    5134:	mov	w1, #0x2                   	// #2
    5138:	bl	0 <_ZN4llvm4UsernwEmj>
    513c:	mov	x1, x24
    5140:	mov	x2, x25
    5144:	mov	w3, wzr
    5148:	mov	x4, xzr
    514c:	mov	x26, x0
    5150:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    5154:	add	x0, sp, #0x140
    5158:	add	x2, sp, #0x188
    515c:	mov	x1, x26
    5160:	stp	xzr, xzr, [sp, #392]
    5164:	strh	w22, [sp, #408]
    5168:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    516c:	mov	w22, #0x18                  	// #24
    5170:	b	4bd8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x950>
    5174:	ldr	x0, [sp, #64]
    5178:	ldr	x8, [sp]
    517c:	ldr	x19, [sp, #304]
    5180:	cmp	x0, x8
    5184:	b.eq	518c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf04>  // b.none
    5188:	bl	0 <free>
    518c:	ldr	x0, [sp, #144]
    5190:	add	x8, sp, #0x90
    5194:	add	x8, x8, #0x10
    5198:	cmp	x0, x8
    519c:	b.eq	51a4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>  // b.none
    51a0:	bl	0 <free>
    51a4:	ldr	w8, [sp, #272]
    51a8:	cbz	w8, 51fc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf74>
    51ac:	ldr	x9, [sp, #256]
    51b0:	lsl	x22, x8, #4
    51b4:	add	x21, x9, #0x8
    51b8:	b	51d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf4c>
    51bc:	mov	x0, x20
    51c0:	bl	0 <_ZdlPv>
    51c4:	str	xzr, [x21]
    51c8:	subs	x22, x22, #0x10
    51cc:	add	x21, x21, #0x10
    51d0:	b.eq	51fc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf74>  // b.none
    51d4:	ldur	x8, [x21, #-8]
    51d8:	orr	x8, x8, #0x8
    51dc:	cmn	x8, #0x8
    51e0:	b.eq	51c8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf40>  // b.none
    51e4:	ldr	x20, [x21]
    51e8:	cbz	x20, 51c4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf3c>
    51ec:	ldr	x0, [x20, #24]
    51f0:	cbz	x0, 51bc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf34>
    51f4:	bl	0 <_ZdlPv>
    51f8:	b	51bc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf34>
    51fc:	ldr	x0, [sp, #256]
    5200:	bl	0 <_ZdlPv>
    5204:	ldr	x8, [sp, #248]
    5208:	ldr	x0, [sp, #224]
    520c:	add	x9, sp, #0xe0
    5210:	add	x9, x9, #0x10
    5214:	add	x8, x8, #0x1
    5218:	cmp	x0, x9
    521c:	str	x8, [sp, #248]
    5220:	b.eq	5228 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfa0>  // b.none
    5224:	bl	0 <free>
    5228:	ldr	x1, [sp, #320]
    522c:	cbz	x1, 5238 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfb0>
    5230:	add	x0, sp, #0x140
    5234:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    5238:	mov	x0, x19
    523c:	add	sp, sp, #0x310
    5240:	ldp	x20, x19, [sp, #96]
    5244:	ldp	x22, x21, [sp, #80]
    5248:	ldp	x24, x23, [sp, #64]
    524c:	ldp	x26, x25, [sp, #48]
    5250:	ldp	x28, x27, [sp, #32]
    5254:	ldp	x29, x30, [sp, #16]
    5258:	ldp	d9, d8, [sp], #112
    525c:	ret
    5260:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5264:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5268:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    526c:	add	x0, x0, #0x0
    5270:	add	x1, x1, #0x0
    5274:	add	x3, x3, #0x0
    5278:	mov	w2, #0x69                  	// #105
    527c:	bl	0 <__assert_fail>
    5280:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5284:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5288:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    528c:	add	x0, x0, #0x0
    5290:	add	x1, x1, #0x0
    5294:	add	x3, x3, #0x0
    5298:	mov	w2, #0x108                 	// #264
    529c:	bl	0 <__assert_fail>
    52a0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52a4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52a8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52ac:	add	x0, x0, #0x0
    52b0:	add	x1, x1, #0x0
    52b4:	add	x3, x3, #0x0
    52b8:	mov	w2, #0x43                  	// #67
    52bc:	bl	0 <__assert_fail>
    52c0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52c4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52c8:	add	x0, x0, #0x0
    52cc:	add	x1, x1, #0x0
    52d0:	mov	w2, #0x7a                  	// #122
    52d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    52d8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52e0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52e4:	add	x0, x0, #0x0
    52e8:	add	x1, x1, #0x0
    52ec:	add	x3, x3, #0x0
    52f0:	mov	w2, #0xb3                  	// #179
    52f4:	bl	0 <__assert_fail>
    52f8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    52fc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5300:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5304:	add	x0, x0, #0x0
    5308:	add	x1, x1, #0x0
    530c:	add	x3, x3, #0x0
    5310:	mov	w2, #0x69                  	// #105
    5314:	bl	0 <__assert_fail>
    5318:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    531c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5320:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5324:	add	x0, x0, #0x0
    5328:	add	x1, x1, #0x0
    532c:	add	x3, x3, #0x0
    5330:	mov	w2, #0x69                  	// #105
    5334:	bl	0 <__assert_fail>
    5338:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    533c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5340:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5344:	add	x0, x0, #0x0
    5348:	add	x1, x1, #0x0
    534c:	add	x3, x3, #0x0
    5350:	mov	w2, #0x8b                  	// #139
    5354:	bl	0 <__assert_fail>
    5358:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    535c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5360:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5364:	add	x0, x0, #0x0
    5368:	add	x1, x1, #0x0
    536c:	add	x3, x3, #0x0
    5370:	mov	w2, #0x133                 	// #307
    5374:	bl	0 <__assert_fail>
    5378:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    537c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5380:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5384:	add	x0, x0, #0x0
    5388:	add	x1, x1, #0x0
    538c:	add	x3, x3, #0x0
    5390:	mov	w2, #0x281                 	// #641
    5394:	bl	0 <__assert_fail>
    5398:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    539c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53a0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53a4:	add	x0, x0, #0x0
    53a8:	add	x1, x1, #0x0
    53ac:	add	x3, x3, #0x0
    53b0:	mov	w2, #0x2dd                 	// #733
    53b4:	bl	0 <__assert_fail>
    53b8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53bc:	add	x0, x0, #0x0
    53c0:	mov	w1, #0x1                   	// #1
    53c4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    53c8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53cc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53d0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53d4:	add	x0, x0, #0x0
    53d8:	add	x1, x1, #0x0
    53dc:	add	x3, x3, #0x0
    53e0:	mov	w2, #0x160                 	// #352
    53e4:	bl	0 <__assert_fail>
    53e8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53f0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    53f4:	add	x0, x0, #0x0
    53f8:	add	x1, x1, #0x0
    53fc:	add	x3, x3, #0x0
    5400:	mov	w2, #0xe0                  	// #224
    5404:	bl	0 <__assert_fail>
    5408:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    540c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5410:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5414:	add	x0, x0, #0x0
    5418:	add	x1, x1, #0x0
    541c:	add	x3, x3, #0x0
    5420:	mov	w2, #0x69                  	// #105
    5424:	bl	0 <__assert_fail>
    5428:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    542c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5430:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5434:	add	x0, x0, #0x0
    5438:	add	x1, x1, #0x0
    543c:	add	x3, x3, #0x0
    5440:	mov	w2, #0x108                 	// #264
    5444:	bl	0 <__assert_fail>
    5448:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    544c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5450:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5454:	add	x0, x0, #0x0
    5458:	add	x1, x1, #0x0
    545c:	add	x3, x3, #0x0
    5460:	mov	w2, #0x117                 	// #279
    5464:	bl	0 <__assert_fail>
    5468:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    546c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5470:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5474:	add	x0, x0, #0x0
    5478:	add	x1, x1, #0x0
    547c:	add	x3, x3, #0x0
    5480:	mov	w2, #0xb3                  	// #179
    5484:	bl	0 <__assert_fail>
    5488:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    548c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5490:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5494:	add	x0, x0, #0x0
    5498:	add	x1, x1, #0x0
    549c:	add	x3, x3, #0x0
    54a0:	mov	w2, #0x120                 	// #288
    54a4:	bl	0 <__assert_fail>
    54a8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54ac:	add	x0, x0, #0x0
    54b0:	mov	w1, #0x1                   	// #1
    54b4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    54b8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54bc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54c0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54c4:	add	x0, x0, #0x0
    54c8:	add	x1, x1, #0x0
    54cc:	add	x3, x3, #0x0
    54d0:	mov	w2, #0x17e                 	// #382
    54d4:	bl	0 <__assert_fail>
    54d8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54e0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54e4:	add	x0, x0, #0x0
    54e8:	add	x1, x1, #0x0
    54ec:	add	x3, x3, #0x0
    54f0:	mov	w2, #0x108                 	// #264
    54f4:	bl	0 <__assert_fail>
    54f8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54fc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5500:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5504:	add	x0, x0, #0x0
    5508:	add	x1, x1, #0x0
    550c:	add	x3, x3, #0x0
    5510:	mov	w2, #0x5b                  	// #91
    5514:	bl	0 <__assert_fail>
    5518:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    551c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5520:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5524:	add	x0, x0, #0x0
    5528:	add	x1, x1, #0x0
    552c:	add	x3, x3, #0x0
    5530:	mov	w2, #0xfa                  	// #250
    5534:	bl	0 <__assert_fail>
    5538:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    553c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5540:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5544:	add	x0, x0, #0x0
    5548:	add	x1, x1, #0x0
    554c:	add	x3, x3, #0x0
    5550:	mov	w2, #0x2be                 	// #702
    5554:	bl	0 <__assert_fail>
    5558:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    555c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5560:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5564:	add	x0, x0, #0x0
    5568:	add	x1, x1, #0x0
    556c:	add	x3, x3, #0x0
    5570:	mov	w2, #0x69                  	// #105
    5574:	bl	0 <__assert_fail>
    5578:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    557c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5580:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5584:	add	x0, x0, #0x0
    5588:	add	x1, x1, #0x0
    558c:	add	x3, x3, #0x0
    5590:	mov	w2, #0x1126                	// #4390
    5594:	bl	0 <__assert_fail>
    5598:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    559c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55a0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55a4:	add	x0, x0, #0x0
    55a8:	add	x1, x1, #0x0
    55ac:	add	x3, x3, #0x0
    55b0:	mov	w2, #0x30                  	// #48
    55b4:	bl	0 <__assert_fail>
    55b8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55bc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55c0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55c4:	add	x0, x0, #0x0
    55c8:	add	x1, x1, #0x0
    55cc:	add	x3, x3, #0x0
    55d0:	mov	w2, #0x11f6                	// #4598
    55d4:	bl	0 <__assert_fail>
    55d8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55e0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55e4:	add	x0, x0, #0x0
    55e8:	add	x1, x1, #0x0
    55ec:	add	x3, x3, #0x0
    55f0:	mov	w2, #0x69                  	// #105
    55f4:	bl	0 <__assert_fail>

00000000000055f8 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    55f8:	stp	x29, x30, [sp, #-64]!
    55fc:	str	x23, [sp, #16]
    5600:	stp	x22, x21, [sp, #32]
    5604:	stp	x20, x19, [sp, #48]
    5608:	mov	x29, sp
    560c:	mov	x20, x1
    5610:	mov	x19, x0
    5614:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5618:	ldr	x22, [x19, #8]
    561c:	cbnz	x22, 5644 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x4c>
    5620:	mov	x0, x19
    5624:	bl	0 <_ZN4llvm18isAllocaPromotableEPKNS_10AllocaInstE>
    5628:	tbz	w0, #0, 5760 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x168>
    562c:	ldp	x20, x19, [sp, #48]
    5630:	ldp	x22, x21, [sp, #32]
    5634:	ldr	x23, [sp, #16]
    5638:	ldp	x29, x30, [sp], #64
    563c:	ret
    5640:	cbz	x22, 5620 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x28>
    5644:	mov	x23, x22
    5648:	mov	x21, x22
    564c:	ldr	x22, [x23, #8]!
    5650:	mov	x0, x21
    5654:	bl	0 <_ZNK4llvm3Use7getUserEv>
    5658:	cbz	x0, 5700 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x108>
    565c:	ldrb	w8, [x0, #16]
    5660:	sub	w9, w8, #0x38
    5664:	cmp	w9, #0x2
    5668:	b.cc	5640 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>  // b.lo, b.ul, b.last
    566c:	cmp	w8, #0x1d
    5670:	b.eq	567c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x84>  // b.none
    5674:	cmp	w8, #0x50
    5678:	b.ne	5720 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x128>  // b.any
    567c:	mov	x1, x19
    5680:	mov	x2, x20
    5684:	bl	5780 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
    5688:	ldr	x8, [x21]
    568c:	cbz	x8, 56b4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xbc>
    5690:	ldp	x9, x8, [x21, #8]
    5694:	and	x8, x8, #0xfffffffffffffffc
    5698:	str	x9, [x8]
    569c:	ldr	x9, [x21, #8]
    56a0:	cbz	x9, 56b4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xbc>
    56a4:	ldr	x10, [x9, #16]
    56a8:	and	x10, x10, #0x3
    56ac:	orr	x8, x10, x8
    56b0:	str	x8, [x9, #16]
    56b4:	str	x0, [x21]
    56b8:	cbz	x0, 5640 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>
    56bc:	ldr	x8, [x0, #8]!
    56c0:	str	x8, [x23]
    56c4:	cbz	x8, 56e0 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xe8>
    56c8:	tst	x23, #0x3
    56cc:	b.ne	5740 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x148>  // b.any
    56d0:	ldr	x9, [x8, #16]
    56d4:	and	x9, x9, #0x3
    56d8:	orr	x9, x9, x23
    56dc:	str	x9, [x8, #16]
    56e0:	tst	x0, #0x3
    56e4:	b.ne	5740 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x148>  // b.any
    56e8:	ldr	x8, [x21, #16]
    56ec:	and	x8, x8, #0x3
    56f0:	orr	x8, x8, x0
    56f4:	str	x8, [x21, #16]
    56f8:	str	x21, [x0]
    56fc:	b	5640 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>
    5700:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5704:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5708:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    570c:	add	x0, x0, #0x0
    5710:	add	x1, x1, #0x0
    5714:	add	x3, x3, #0x0
    5718:	mov	w2, #0x69                  	// #105
    571c:	bl	0 <__assert_fail>
    5720:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5724:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5728:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    572c:	add	x0, x0, #0x0
    5730:	add	x1, x1, #0x0
    5734:	add	x3, x3, #0x0
    5738:	mov	w2, #0x4d8                 	// #1240
    573c:	bl	0 <__assert_fail>
    5740:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5744:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5748:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    574c:	add	x0, x0, #0x0
    5750:	add	x1, x1, #0x0
    5754:	add	x3, x3, #0x0
    5758:	mov	w2, #0xb3                  	// #179
    575c:	bl	0 <__assert_fail>
    5760:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5764:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5768:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    576c:	add	x0, x0, #0x0
    5770:	add	x1, x1, #0x0
    5774:	add	x3, x3, #0x0
    5778:	mov	w2, #0x4e2                 	// #1250
    577c:	bl	0 <__assert_fail>

0000000000005780 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    5780:	sub	sp, sp, #0xc0
    5784:	stp	x29, x30, [sp, #128]
    5788:	stp	x24, x23, [sp, #144]
    578c:	stp	x22, x21, [sp, #160]
    5790:	stp	x20, x19, [sp, #176]
    5794:	add	x29, sp, #0x80
    5798:	ldr	x22, [x1, #56]
    579c:	mov	x20, x2
    57a0:	mov	x19, x1
    57a4:	mov	x23, x0
    57a8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    57ac:	stp	x0, xzr, [sp, #56]
    57b0:	mov	w8, #0x200                 	// #512
    57b4:	add	x0, sp, #0x20
    57b8:	mov	x1, x23
    57bc:	str	wzr, [sp, #72]
    57c0:	strb	wzr, [sp, #78]
    57c4:	stp	xzr, xzr, [sp, #40]
    57c8:	str	xzr, [sp, #32]
    57cc:	strh	w8, [sp, #76]
    57d0:	stp	xzr, xzr, [sp, #80]
    57d4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57d8:	mov	w24, #0x101                 	// #257
    57dc:	mov	w0, #0x40                  	// #64
    57e0:	mov	w1, #0x1                   	// #1
    57e4:	stp	xzr, xzr, [sp, #8]
    57e8:	strh	w24, [sp, #24]
    57ec:	bl	0 <_ZN4llvm4UsernwEmj>
    57f0:	sub	x3, x29, #0x18
    57f4:	mov	x1, x22
    57f8:	mov	x2, x19
    57fc:	mov	x4, xzr
    5800:	mov	x21, x0
    5804:	stp	xzr, xzr, [x29, #-24]
    5808:	sturh	w24, [x29, #-8]
    580c:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    5810:	add	x0, sp, #0x20
    5814:	add	x2, sp, #0x8
    5818:	mov	x1, x21
    581c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5820:	mov	x1, x0
    5824:	add	x0, sp, #0x20
    5828:	mov	x2, x20
    582c:	bl	5ae4 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
    5830:	cbz	x23, 59c4 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x244>
    5834:	ldrb	w8, [x23, #16]
    5838:	mov	x21, x0
    583c:	cmp	w8, #0x1d
    5840:	b.eq	5874 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0xf4>  // b.none
    5844:	cmp	w8, #0x50
    5848:	b.ne	59e4 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x264>  // b.any
    584c:	ldp	x8, x9, [x23, #32]
    5850:	add	x9, x9, #0x28
    5854:	cmp	x9, x8
    5858:	b.eq	5894 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x114>  // b.none
    585c:	ldrb	w9, [x8]
    5860:	tbnz	w9, #2, 5ac4 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x344>
    5864:	sub	x9, x8, #0x18
    5868:	cmp	x8, #0x0
    586c:	csel	x1, xzr, x9, eq  // eq = none
    5870:	b	5898 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x118>
    5874:	ldur	x0, [x23, #-72]
    5878:	cbz	x0, 5a84 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x304>
    587c:	ldrb	w8, [x0, #16]
    5880:	cmp	w8, #0x12
    5884:	b.ne	5aa4 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x324>  // b.any
    5888:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    588c:	mov	x1, x0
    5890:	b	5898 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x118>
    5894:	mov	x1, xzr
    5898:	add	x0, sp, #0x20
    589c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58a0:	mov	x0, x22
    58a4:	mov	x1, xzr
    58a8:	mov	x2, xzr
    58ac:	mov	w3, wzr
    58b0:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    58b4:	mov	w1, wzr
    58b8:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    58bc:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    58c0:	mov	w8, #0x101                 	// #257
    58c4:	stp	xzr, xzr, [x29, #-24]
    58c8:	sturh	w8, [x29, #-8]
    58cc:	ldr	x8, [x0]
    58d0:	ldrb	w9, [x8, #8]
    58d4:	cmp	w9, #0xf
    58d8:	b.ne	5a04 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x284>  // b.any
    58dc:	ldr	x8, [x8, #16]
    58e0:	ldr	x1, [x8]
    58e4:	cbz	x1, 5a24 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2a4>
    58e8:	ldrb	w8, [x1, #8]
    58ec:	cmp	w8, #0xc
    58f0:	b.ne	5a44 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2c4>  // b.any
    58f4:	mov	x2, x0
    58f8:	add	x0, sp, #0x20
    58fc:	sub	x5, x29, #0x18
    5900:	mov	x3, xzr
    5904:	mov	x4, xzr
    5908:	mov	x6, xzr
    590c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5910:	ldp	w8, w9, [x20, #144]
    5914:	mov	x22, x0
    5918:	cmp	w8, w9
    591c:	b.cs	59a8 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x228>  // b.hs, b.nlast
    5920:	ldr	x9, [x20, #136]
    5924:	str	x22, [x9, w8, uxtw #3]
    5928:	ldp	w8, w9, [x20, #144]
    592c:	cmp	w8, w9
    5930:	b.cs	5a64 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2e4>  // b.hs, b.nlast
    5934:	add	w8, w8, #0x1
    5938:	mov	w0, #0x40                  	// #64
    593c:	mov	w1, #0x2                   	// #2
    5940:	str	w8, [x20, #144]
    5944:	bl	0 <_ZN4llvm4UsernwEmj>
    5948:	mov	x1, x22
    594c:	mov	x2, x19
    5950:	mov	w3, wzr
    5954:	mov	x4, xzr
    5958:	mov	x20, x0
    595c:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    5960:	mov	w8, #0x101                 	// #257
    5964:	add	x0, sp, #0x20
    5968:	sub	x2, x29, #0x18
    596c:	mov	x1, x20
    5970:	stp	xzr, xzr, [x29, #-24]
    5974:	sturh	w8, [x29, #-8]
    5978:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    597c:	ldr	x1, [sp, #32]
    5980:	cbz	x1, 598c <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x20c>
    5984:	add	x0, sp, #0x20
    5988:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    598c:	mov	x0, x21
    5990:	ldp	x20, x19, [sp, #176]
    5994:	ldp	x22, x21, [sp, #160]
    5998:	ldp	x24, x23, [sp, #144]
    599c:	ldp	x29, x30, [sp, #128]
    59a0:	add	sp, sp, #0xc0
    59a4:	ret
    59a8:	add	x0, x20, #0x88
    59ac:	add	x1, x0, #0x10
    59b0:	mov	w3, #0x8                   	// #8
    59b4:	mov	x2, xzr
    59b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    59bc:	ldr	w8, [x20, #144]
    59c0:	b	5920 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x1a0>
    59c4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59c8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59cc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59d0:	add	x0, x0, #0x0
    59d4:	add	x1, x1, #0x0
    59d8:	add	x3, x3, #0x0
    59dc:	mov	w2, #0x69                  	// #105
    59e0:	bl	0 <__assert_fail>
    59e4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59e8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59ec:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59f0:	add	x0, x0, #0x0
    59f4:	add	x1, x1, #0x0
    59f8:	add	x3, x3, #0x0
    59fc:	mov	w2, #0x108                 	// #264
    5a00:	bl	0 <__assert_fail>
    5a04:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a08:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a0c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a10:	add	x0, x0, #0x0
    5a14:	add	x1, x1, #0x0
    5a18:	add	x3, x3, #0x0
    5a1c:	mov	w2, #0x17e                 	// #382
    5a20:	bl	0 <__assert_fail>
    5a24:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a28:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a2c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a30:	add	x0, x0, #0x0
    5a34:	add	x1, x1, #0x0
    5a38:	add	x3, x3, #0x0
    5a3c:	mov	w2, #0x69                  	// #105
    5a40:	bl	0 <__assert_fail>
    5a44:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a48:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a4c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a50:	add	x0, x0, #0x0
    5a54:	add	x1, x1, #0x0
    5a58:	add	x3, x3, #0x0
    5a5c:	mov	w2, #0x108                 	// #264
    5a60:	bl	0 <__assert_fail>
    5a64:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a68:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a6c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a70:	add	x0, x0, #0x0
    5a74:	add	x1, x1, #0x0
    5a78:	add	x3, x3, #0x0
    5a7c:	mov	w2, #0x43                  	// #67
    5a80:	bl	0 <__assert_fail>
    5a84:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a88:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a8c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a90:	add	x0, x0, #0x0
    5a94:	add	x1, x1, #0x0
    5a98:	add	x3, x3, #0x0
    5a9c:	mov	w2, #0x5b                  	// #91
    5aa0:	bl	0 <__assert_fail>
    5aa4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5aa8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5aac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ab0:	add	x0, x0, #0x0
    5ab4:	add	x1, x1, #0x0
    5ab8:	add	x3, x3, #0x0
    5abc:	mov	w2, #0xfa                  	// #250
    5ac0:	bl	0 <__assert_fail>
    5ac4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ac8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5acc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ad0:	add	x0, x0, #0x0
    5ad4:	add	x1, x1, #0x0
    5ad8:	add	x3, x3, #0x0
    5adc:	mov	w2, #0x8b                  	// #139
    5ae0:	bl	0 <__assert_fail>

0000000000005ae4 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>:
    5ae4:	sub	sp, sp, #0x50
    5ae8:	stp	x29, x30, [sp, #32]
    5aec:	str	x21, [sp, #48]
    5af0:	stp	x20, x19, [sp, #64]
    5af4:	add	x29, sp, #0x20
    5af8:	ldr	x8, [x1]
    5afc:	mov	x21, x1
    5b00:	mov	x20, x0
    5b04:	mov	w1, wzr
    5b08:	mov	x0, x8
    5b0c:	mov	x19, x2
    5b10:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5b14:	ldr	x8, [x21]
    5b18:	add	x1, sp, #0x8
    5b1c:	mov	w2, #0x1                   	// #1
    5b20:	mov	w3, wzr
    5b24:	str	x8, [sp, #8]
    5b28:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    5b2c:	mov	w1, wzr
    5b30:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5b34:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    5b38:	mov	w8, #0x101                 	// #257
    5b3c:	str	x21, [x29, #24]
    5b40:	stp	xzr, xzr, [sp, #8]
    5b44:	strh	w8, [sp, #24]
    5b48:	ldr	x8, [x0]
    5b4c:	ldrb	w9, [x8, #8]
    5b50:	cmp	w9, #0xf
    5b54:	b.ne	5bec <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x108>  // b.any
    5b58:	ldr	x8, [x8, #16]
    5b5c:	ldr	x1, [x8]
    5b60:	cbz	x1, 5c0c <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x128>
    5b64:	ldrb	w8, [x1, #8]
    5b68:	cmp	w8, #0xc
    5b6c:	b.ne	5c2c <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x148>  // b.any
    5b70:	mov	x2, x0
    5b74:	add	x3, x29, #0x18
    5b78:	add	x5, sp, #0x8
    5b7c:	mov	w4, #0x1                   	// #1
    5b80:	mov	x0, x20
    5b84:	mov	x6, xzr
    5b88:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5b8c:	ldp	w8, w9, [x19, #144]
    5b90:	mov	x20, x0
    5b94:	cmp	w8, w9
    5b98:	b.cs	5bd0 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0xec>  // b.hs, b.nlast
    5b9c:	ldr	x9, [x19, #136]
    5ba0:	str	x20, [x9, w8, uxtw #3]
    5ba4:	ldp	w8, w9, [x19, #144]
    5ba8:	cmp	w8, w9
    5bac:	b.cs	5c4c <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x168>  // b.hs, b.nlast
    5bb0:	add	w8, w8, #0x1
    5bb4:	str	w8, [x19, #144]
    5bb8:	mov	x0, x20
    5bbc:	ldp	x20, x19, [sp, #64]
    5bc0:	ldr	x21, [sp, #48]
    5bc4:	ldp	x29, x30, [sp, #32]
    5bc8:	add	sp, sp, #0x50
    5bcc:	ret
    5bd0:	add	x0, x19, #0x88
    5bd4:	add	x1, x0, #0x10
    5bd8:	mov	w3, #0x8                   	// #8
    5bdc:	mov	x2, xzr
    5be0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5be4:	ldr	w8, [x19, #144]
    5be8:	b	5b9c <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0xb8>
    5bec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bf0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bf4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bf8:	add	x0, x0, #0x0
    5bfc:	add	x1, x1, #0x0
    5c00:	add	x3, x3, #0x0
    5c04:	mov	w2, #0x17e                 	// #382
    5c08:	bl	0 <__assert_fail>
    5c0c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c10:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c14:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c18:	add	x0, x0, #0x0
    5c1c:	add	x1, x1, #0x0
    5c20:	add	x3, x3, #0x0
    5c24:	mov	w2, #0x69                  	// #105
    5c28:	bl	0 <__assert_fail>
    5c2c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c30:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c34:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c38:	add	x0, x0, #0x0
    5c3c:	add	x1, x1, #0x0
    5c40:	add	x3, x3, #0x0
    5c44:	mov	w2, #0x108                 	// #264
    5c48:	bl	0 <__assert_fail>
    5c4c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c50:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c54:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c58:	add	x0, x0, #0x0
    5c5c:	add	x1, x1, #0x0
    5c60:	add	x3, x3, #0x0
    5c64:	mov	w2, #0x43                  	// #67
    5c68:	bl	0 <__assert_fail>

0000000000005c6c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>:
    5c6c:	stp	x29, x30, [sp, #-64]!
    5c70:	stp	x24, x23, [sp, #16]
    5c74:	stp	x22, x21, [sp, #32]
    5c78:	stp	x20, x19, [sp, #48]
    5c7c:	mov	x29, sp
    5c80:	cbz	x2, 60a8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x43c>
    5c84:	ldrb	w8, [x2, #16]
    5c88:	cmp	w8, #0x17
    5c8c:	b.ls	60c8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x45c>  // b.plast
    5c90:	mov	x19, x1
    5c94:	mov	x21, x0
    5c98:	cmp	w8, #0x4f
    5c9c:	b.ne	5cb4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x48>  // b.any
    5ca0:	ldr	w8, [x2, #20]
    5ca4:	tst	w8, #0xffffffe
    5ca8:	b.eq	5d14 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xa8>  // b.none
    5cac:	mov	w21, wzr
    5cb0:	b	6030 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3c4>
    5cb4:	ldr	x20, [x2, #40]
    5cb8:	cmp	w8, #0x50
    5cbc:	b.ne	5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    5cc0:	ldur	x8, [x2, #-24]
    5cc4:	cbz	x8, 5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    5cc8:	ldrb	w9, [x8, #16]
    5ccc:	cbnz	w9, 5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    5cd0:	ldrb	w9, [x8, #33]
    5cd4:	tbz	w9, #5, 5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    5cd8:	ldr	w8, [x8, #36]
    5cdc:	cmp	w8, #0x24
    5ce0:	b.ne	5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    5ce4:	mov	x0, x20
    5ce8:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    5cec:	mov	x20, x0
    5cf0:	cbnz	x0, 5d18 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    5cf4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5cf8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5cfc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5d00:	add	x0, x0, #0x0
    5d04:	add	x1, x1, #0x0
    5d08:	add	x3, x3, #0x0
    5d0c:	mov	w2, #0x83                  	// #131
    5d10:	bl	0 <__assert_fail>
    5d14:	ldr	x20, [x2, #40]
    5d18:	ldr	w10, [x21, #8]
    5d1c:	ldr	x8, [x21]
    5d20:	cbz	w10, 5d5c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xf0>
    5d24:	mov	x9, x8
    5d28:	mov	x11, x10
    5d2c:	lsr	x12, x11, #1
    5d30:	add	x13, x9, x12, lsl #3
    5d34:	ldr	x14, [x13], #8
    5d38:	mvn	x15, x12
    5d3c:	add	x11, x11, x15
    5d40:	cmp	x14, x19
    5d44:	csel	x11, x11, x12, cc  // cc = lo, ul, last
    5d48:	csel	x9, x13, x9, cc  // cc = lo, ul, last
    5d4c:	cmp	x11, #0x0
    5d50:	b.gt	5d2c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xc0>
    5d54:	mov	x11, x10
    5d58:	b	5d64 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xf8>
    5d5c:	mov	x11, xzr
    5d60:	mov	x9, x8
    5d64:	add	x11, x8, x11, lsl #3
    5d68:	cmp	x9, x11
    5d6c:	b.eq	6048 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>  // b.none
    5d70:	ldr	x11, [x9]
    5d74:	cmp	x11, x19
    5d78:	b.ne	6048 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>  // b.any
    5d7c:	cbz	w10, 5db4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x148>
    5d80:	mov	x11, x8
    5d84:	mov	x12, x10
    5d88:	lsr	x13, x12, #1
    5d8c:	add	x14, x11, x13, lsl #3
    5d90:	ldr	x15, [x14], #8
    5d94:	mvn	x16, x13
    5d98:	add	x12, x12, x16
    5d9c:	cmp	x15, x20
    5da0:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    5da4:	csel	x11, x14, x11, cc  // cc = lo, ul, last
    5da8:	cmp	x12, #0x0
    5dac:	b.gt	5d88 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x11c>
    5db0:	b	5dbc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x150>
    5db4:	mov	x10, xzr
    5db8:	mov	x11, x8
    5dbc:	add	x10, x8, x10, lsl #3
    5dc0:	cmp	x11, x10
    5dc4:	b.eq	6048 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>  // b.none
    5dc8:	ldr	x10, [x11]
    5dcc:	cmp	x10, x20
    5dd0:	b.ne	6048 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>  // b.any
    5dd4:	ldr	w12, [x21, #280]
    5dd8:	sub	x10, x11, x8
    5ddc:	asr	x10, x10, #3
    5de0:	cmp	x10, x12
    5de4:	b.cs	60e8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x47c>  // b.hs, b.nlast
    5de8:	ldr	x11, [x21, #272]
    5dec:	mov	w12, #0x38                  	// #56
    5df0:	sub	x8, x9, x8
    5df4:	lsr	x9, x8, #3
    5df8:	madd	x12, x10, x12, x11
    5dfc:	ldr	w12, [x12, #16]
    5e00:	cmp	w12, w9
    5e04:	b.ls	6068 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3fc>  // b.plast
    5e08:	mov	w12, #0x38                  	// #56
    5e0c:	madd	x12, x10, x12, x11
    5e10:	ldr	x12, [x12, #8]
    5e14:	ubfx	x8, x8, #9, #26
    5e18:	cmp	x12, x8
    5e1c:	b.ls	6088 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x41c>  // b.plast
    5e20:	mov	w12, #0x38                  	// #56
    5e24:	mul	x12, x10, x12
    5e28:	ldr	x12, [x11, x12]
    5e2c:	mov	w13, #0x1                   	// #1
    5e30:	lsl	x23, x13, x9
    5e34:	ldr	x12, [x12, x8, lsl #3]
    5e38:	tst	x12, x23
    5e3c:	b.eq	6108 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x49c>  // b.none
    5e40:	mov	w12, #0x38                  	// #56
    5e44:	madd	x12, x10, x12, x11
    5e48:	ldr	w12, [x12, #40]
    5e4c:	cmp	w12, w9
    5e50:	b.ls	6068 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3fc>  // b.plast
    5e54:	mov	w9, #0x38                  	// #56
    5e58:	madd	x9, x10, x9, x11
    5e5c:	ldr	x9, [x9, #32]
    5e60:	cmp	x9, x8
    5e64:	b.ls	6088 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x41c>  // b.plast
    5e68:	mov	w9, #0x38                  	// #56
    5e6c:	madd	x9, x10, x9, x11
    5e70:	ldr	x9, [x9, #24]
    5e74:	ldr	x24, [x9, x8, lsl #3]
    5e78:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    5e7c:	ldr	x8, [x8]
    5e80:	tst	x24, x23
    5e84:	cset	w21, ne  // ne = any
    5e88:	ldrb	w8, [x8]
    5e8c:	cbz	w8, 6030 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3c4>
    5e90:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5e94:	add	x0, x0, #0x0
    5e98:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    5e9c:	tbz	w0, #0, 6030 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3c4>
    5ea0:	bl	0 <_ZN4llvm4dbgsEv>
    5ea4:	mov	x22, x0
    5ea8:	mov	x0, x20
    5eac:	bl	0 <_ZNK4llvm5Value7getNameEv>
    5eb0:	ldp	x9, x8, [x22, #16]
    5eb4:	mov	x20, x1
    5eb8:	sub	x9, x9, x8
    5ebc:	cmp	x1, x9
    5ec0:	mov	x1, x0
    5ec4:	b.ls	5ee0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x274>  // b.plast
    5ec8:	mov	x0, x22
    5ecc:	mov	x2, x20
    5ed0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5ed4:	ldr	x8, [x0, #24]
    5ed8:	mov	x22, x0
    5edc:	b	5efc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x290>
    5ee0:	cbz	x20, 5efc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x290>
    5ee4:	mov	x0, x8
    5ee8:	mov	x2, x20
    5eec:	bl	0 <memcpy>
    5ef0:	ldr	x8, [x22, #24]
    5ef4:	add	x8, x8, x20
    5ef8:	str	x8, [x22, #24]
    5efc:	ldr	x9, [x22, #16]
    5f00:	sub	x9, x9, x8
    5f04:	cmp	x9, #0x3
    5f08:	b.hi	5f28 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2bc>  // b.pmore
    5f0c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f10:	add	x1, x1, #0x0
    5f14:	mov	w2, #0x4                   	// #4
    5f18:	mov	x0, x22
    5f1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5f20:	mov	x22, x0
    5f24:	b	5f40 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2d4>
    5f28:	mov	w9, #0x3d20                	// #15648
    5f2c:	movk	w9, #0x203e, lsl #16
    5f30:	str	w9, [x8]
    5f34:	ldr	x8, [x22, #24]
    5f38:	add	x8, x8, #0x4
    5f3c:	str	x8, [x22, #24]
    5f40:	mov	x0, x19
    5f44:	bl	0 <_ZNK4llvm5Value7getNameEv>
    5f48:	ldp	x9, x8, [x22, #16]
    5f4c:	mov	x19, x1
    5f50:	sub	x9, x9, x8
    5f54:	cmp	x1, x9
    5f58:	mov	x1, x0
    5f5c:	b.ls	5f78 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x30c>  // b.plast
    5f60:	mov	x0, x22
    5f64:	mov	x2, x19
    5f68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5f6c:	ldr	x8, [x0, #24]
    5f70:	mov	x22, x0
    5f74:	b	5f94 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x328>
    5f78:	cbz	x19, 5f94 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x328>
    5f7c:	mov	x0, x8
    5f80:	mov	x2, x19
    5f84:	bl	0 <memcpy>
    5f88:	ldr	x8, [x22, #24]
    5f8c:	add	x8, x8, x19
    5f90:	str	x8, [x22, #24]
    5f94:	ldr	x9, [x22, #16]
    5f98:	and	x19, x24, x23
    5f9c:	sub	x9, x9, x8
    5fa0:	cmp	x9, #0xa
    5fa4:	b.hi	5fc4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x358>  // b.pmore
    5fa8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5fac:	add	x1, x1, #0x0
    5fb0:	mov	w2, #0xb                   	// #11
    5fb4:	mov	x0, x22
    5fb8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5fbc:	mov	x22, x0
    5fc0:	b	5fec <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x380>
    5fc4:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5fc8:	add	x9, x9, #0x0
    5fcc:	ldr	x9, [x9]
    5fd0:	mov	w10, #0x6920                	// #26912
    5fd4:	movk	w10, #0x2073, lsl #16
    5fd8:	stur	w10, [x8, #7]
    5fdc:	str	x9, [x8]
    5fe0:	ldr	x8, [x22, #24]
    5fe4:	add	x8, x8, #0xb
    5fe8:	str	x8, [x22, #24]
    5fec:	cmp	x19, #0x0
    5ff0:	cset	w1, ne  // ne = any
    5ff4:	mov	x0, x22
    5ff8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    5ffc:	ldp	x9, x8, [x0, #16]
    6000:	cmp	x9, x8
    6004:	b.ne	601c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3b0>  // b.any
    6008:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    600c:	add	x1, x1, #0x0
    6010:	mov	w2, #0x1                   	// #1
    6014:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6018:	b	6030 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3c4>
    601c:	mov	w9, #0xa                   	// #10
    6020:	strb	w9, [x8]
    6024:	ldr	x8, [x0, #24]
    6028:	add	x8, x8, #0x1
    602c:	str	x8, [x0, #24]
    6030:	mov	w0, w21
    6034:	ldp	x20, x19, [sp, #48]
    6038:	ldp	x22, x21, [sp, #32]
    603c:	ldp	x24, x23, [sp, #16]
    6040:	ldp	x29, x30, [sp], #64
    6044:	ret
    6048:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    604c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6050:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6054:	add	x0, x0, #0x0
    6058:	add	x1, x1, #0x0
    605c:	add	x3, x3, #0x0
    6060:	mov	w2, #0x3a                  	// #58
    6064:	bl	0 <__assert_fail>
    6068:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    606c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6070:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6074:	add	x0, x0, #0x0
    6078:	add	x1, x1, #0x0
    607c:	add	x3, x3, #0x0
    6080:	mov	w2, #0x1f0                 	// #496
    6084:	bl	0 <__assert_fail>
    6088:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    608c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6090:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6094:	add	x0, x0, #0x0
    6098:	add	x1, x1, #0x0
    609c:	add	x3, x3, #0x0
    60a0:	mov	w2, #0x1ab                 	// #427
    60a4:	bl	0 <__assert_fail>
    60a8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60ac:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60b0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60b4:	add	x0, x0, #0x0
    60b8:	add	x1, x1, #0x0
    60bc:	add	x3, x3, #0x0
    60c0:	mov	w2, #0x69                  	// #105
    60c4:	bl	0 <__assert_fail>
    60c8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60cc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60d0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60d4:	add	x0, x0, #0x0
    60d8:	add	x1, x1, #0x0
    60dc:	add	x3, x3, #0x0
    60e0:	mov	w2, #0x108                 	// #264
    60e4:	bl	0 <__assert_fail>
    60e8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60f0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60f4:	add	x0, x0, #0x0
    60f8:	add	x1, x1, #0x0
    60fc:	add	x3, x3, #0x0
    6100:	mov	w2, #0x99                  	// #153
    6104:	bl	0 <__assert_fail>
    6108:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    610c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6110:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6114:	add	x0, x0, #0x0
    6118:	add	x1, x1, #0x0
    611c:	add	x3, x3, #0x0
    6120:	mov	w2, #0x6c                  	// #108
    6124:	bl	0 <__assert_fail>

0000000000006128 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>:
    6128:	sub	sp, sp, #0x60
    612c:	stp	x29, x30, [sp, #48]
    6130:	stp	x22, x21, [sp, #64]
    6134:	stp	x20, x19, [sp, #80]
    6138:	add	x29, sp, #0x30
    613c:	mov	x20, x0
    6140:	mov	x19, x1
    6144:	add	x8, sp, #0x8
    6148:	mov	x0, x1
    614c:	mov	x1, x20
    6150:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6154:	ldrb	w8, [sp, #40]
    6158:	cbz	w8, 6204 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xdc>
    615c:	ldr	x8, [x20, #48]
    6160:	ldrb	w9, [x8]
    6164:	tbnz	w9, #2, 623c <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x114>
    6168:	sub	x9, x8, #0x18
    616c:	cmp	x8, #0x0
    6170:	csel	x8, xzr, x9, eq  // eq = none
    6174:	ldrb	w9, [x8, #16]
    6178:	cmp	w9, #0x50
    617c:	b.ne	61b0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x88>  // b.any
    6180:	ldur	x8, [x8, #-24]
    6184:	cbz	x8, 61b0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x88>
    6188:	ldrb	w9, [x8, #16]
    618c:	cbnz	w9, 61b0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x88>
    6190:	ldrb	w9, [x8, #33]
    6194:	tbz	w9, #5, 61b0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x88>
    6198:	ldr	w8, [x8, #36]
    619c:	sub	w8, w8, #0x23
    61a0:	cmp	w8, #0x2
    61a4:	b.cs	61b0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x88>  // b.hs, b.nlast
    61a8:	mov	w0, #0x1                   	// #1
    61ac:	b	6208 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xe0>
    61b0:	mov	x0, x20
    61b4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    61b8:	cbz	x0, 6208 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xe0>
    61bc:	mov	x20, x0
    61c0:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    61c4:	cbz	w0, 6208 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xe0>
    61c8:	mov	x21, xzr
    61cc:	mov	w22, w0
    61d0:	mov	x0, x20
    61d4:	mov	w1, w21
    61d8:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    61dc:	mov	x1, x19
    61e0:	bl	6128 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    61e4:	tbnz	w0, #0, 61a8 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x80>
    61e8:	mov	x0, x20
    61ec:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    61f0:	cmp	x21, w0, sxtw
    61f4:	b.ge	621c <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xf4>  // b.tcont
    61f8:	add	x21, x21, #0x1
    61fc:	cmp	x22, x21
    6200:	b.ne	61d0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xa8>  // b.any
    6204:	mov	w0, wzr
    6208:	ldp	x20, x19, [sp, #80]
    620c:	ldp	x22, x21, [sp, #64]
    6210:	ldp	x29, x30, [sp, #48]
    6214:	add	sp, sp, #0x60
    6218:	ret
    621c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6220:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6224:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6228:	add	x0, x0, #0x0
    622c:	add	x1, x1, #0x0
    6230:	add	x3, x3, #0x0
    6234:	mov	w2, #0xda                  	// #218
    6238:	bl	0 <__assert_fail>
    623c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6240:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6244:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6248:	add	x0, x0, #0x0
    624c:	add	x1, x1, #0x0
    6250:	add	x3, x3, #0x0
    6254:	mov	w2, #0x8b                  	// #139
    6258:	bl	0 <__assert_fail>

000000000000625c <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE>:
    625c:	stp	x29, x30, [sp, #-64]!
    6260:	str	x23, [sp, #16]
    6264:	stp	x22, x21, [sp, #32]
    6268:	stp	x20, x19, [sp, #48]
    626c:	mov	x29, sp
    6270:	mov	x19, x0
    6274:	ldr	x0, [x0]
    6278:	mov	x20, x1
    627c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    6280:	ldr	w8, [x19, #16]
    6284:	sub	w9, w0, #0x1
    6288:	tst	w8, w9
    628c:	b.eq	62ac <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0x50>  // b.none
    6290:	cbz	w0, 6350 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0xf4>
    6294:	mov	w9, w0
    6298:	add	x8, x9, x8
    629c:	sub	x8, x8, #0x1
    62a0:	udiv	x8, x8, x9
    62a4:	mul	w8, w8, w9
    62a8:	str	w8, [x19, #16]
    62ac:	ldr	x23, [x19]
    62b0:	mov	x1, x20
    62b4:	mov	x0, x23
    62b8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    62bc:	mov	x21, x0
    62c0:	mov	x22, x1
    62c4:	mov	x0, x23
    62c8:	mov	x1, x20
    62cc:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    62d0:	cbz	w0, 6310 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0xb4>
    62d4:	and	w8, w22, #0xff
    62d8:	cbnz	w8, 6330 <_ZN12_GLOBAL__N_117PaddingCalculator7addTypeEPN4llvm4TypeE+0xd4>
    62dc:	mov	w8, w0
    62e0:	add	x9, x21, #0x7
    62e4:	ldr	w10, [x19, #16]
    62e8:	add	x9, x8, x9, lsr #3
    62ec:	sub	x9, x9, #0x1
    62f0:	udiv	x9, x9, x8
    62f4:	madd	w8, w9, w8, w10
    62f8:	str	w8, [x19, #16]
    62fc:	ldp	x20, x19, [sp, #48]
    6300:	ldp	x22, x21, [sp, #32]
    6304:	ldr	x23, [sp, #16]
    6308:	ldp	x29, x30, [sp], #64
    630c:	ret
    6310:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6314:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6318:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    631c:	add	x0, x0, #0x0
    6320:	add	x1, x1, #0x0
    6324:	add	x3, x3, #0x0
    6328:	mov	w2, #0xc7                  	// #199
    632c:	bl	0 <__assert_fail>
    6330:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6334:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6338:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    633c:	add	x0, x0, #0x0
    6340:	add	x1, x1, #0x0
    6344:	add	x3, x3, #0x0
    6348:	mov	w2, #0x7d                  	// #125
    634c:	bl	0 <__assert_fail>
    6350:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6354:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6358:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    635c:	add	x0, x0, #0x0
    6360:	add	x1, x1, #0x0
    6364:	add	x3, x3, #0x0
    6368:	mov	w2, #0x2ce                 	// #718
    636c:	bl	0 <__assert_fail>

0000000000006370 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>:
    6370:	sub	sp, sp, #0x70
    6374:	stp	x29, x30, [sp, #64]
    6378:	stp	x22, x21, [sp, #80]
    637c:	stp	x20, x19, [sp, #96]
    6380:	add	x29, sp, #0x40
    6384:	mov	x19, x0
    6388:	ldr	x0, [x0]
    638c:	mov	x21, x2
    6390:	mov	w20, w1
    6394:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    6398:	mov	x1, xzr
    639c:	mov	w2, wzr
    63a0:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    63a4:	str	x0, [sp]
    63a8:	ldr	x0, [x19]
    63ac:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    63b0:	mov	w1, w20
    63b4:	mov	w2, wzr
    63b8:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    63bc:	str	x0, [sp, #8]
    63c0:	ldr	q0, [sp]
    63c4:	add	x8, sp, #0x18
    63c8:	mov	x9, #0x2                   	// #2
    63cc:	movk	x9, #0x3, lsl #32
    63d0:	add	x20, x8, #0x10
    63d4:	stur	q0, [sp, #40]
    63d8:	stp	x20, x9, [sp, #24]
    63dc:	cbz	x21, 64fc <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x18c>
    63e0:	ldrb	w8, [x21, #16]
    63e4:	cmp	w8, #0x37
    63e8:	b.ne	647c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x10c>  // b.any
    63ec:	ldur	x8, [x21, #-24]
    63f0:	cbz	x8, 651c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1ac>
    63f4:	ldrb	w9, [x8, #16]
    63f8:	cmp	w9, #0xd
    63fc:	b.ne	653c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1cc>  // b.any
    6400:	ldr	w22, [x8, #32]
    6404:	add	x21, x8, #0x18
    6408:	cmp	w22, #0x40
    640c:	b.ls	6428 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xb8>  // b.plast
    6410:	mov	x0, x21
    6414:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    6418:	sub	w8, w22, w0
    641c:	cmp	w8, #0x41
    6420:	b.cs	654c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1dc>  // b.hs, b.nlast
    6424:	ldr	x21, [x21]
    6428:	ldr	x8, [x21]
    642c:	cmp	x8, #0x2
    6430:	b.cc	647c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x10c>  // b.lo, b.ul, b.last
    6434:	ldr	x0, [x19]
    6438:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    643c:	mov	x1, xzr
    6440:	mov	w2, wzr
    6444:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    6448:	ldp	w8, w9, [sp, #32]
    644c:	mov	x21, x0
    6450:	cmp	w8, w9
    6454:	b.cs	64e0 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x170>  // b.hs, b.nlast
    6458:	ldr	x9, [sp, #24]
    645c:	str	x21, [x9, w8, uxtw #3]
    6460:	ldp	w8, w9, [sp, #32]
    6464:	cmp	w8, w9
    6468:	b.cs	656c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1fc>  // b.hs, b.nlast
    646c:	ldr	x20, [sp, #24]
    6470:	add	x4, x8, #0x1
    6474:	str	w4, [sp, #32]
    6478:	b	6480 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x110>
    647c:	mov	w4, #0x2                   	// #2
    6480:	ldp	x8, x9, [x19, #16]
    6484:	ldr	x0, [x19, #8]
    6488:	mov	x5, sp
    648c:	mov	x3, x20
    6490:	ldr	x1, [x8]
    6494:	ldr	x2, [x9]
    6498:	mov	w8, #0x101                 	// #257
    649c:	stp	xzr, xzr, [sp]
    64a0:	strh	w8, [sp, #16]
    64a4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    64a8:	ldr	x8, [sp, #24]
    64ac:	add	x9, sp, #0x18
    64b0:	add	x9, x9, #0x10
    64b4:	mov	x19, x0
    64b8:	cmp	x8, x9
    64bc:	b.eq	64c8 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x158>  // b.none
    64c0:	mov	x0, x8
    64c4:	bl	0 <free>
    64c8:	mov	x0, x19
    64cc:	ldp	x20, x19, [sp, #96]
    64d0:	ldp	x22, x21, [sp, #80]
    64d4:	ldp	x29, x30, [sp, #64]
    64d8:	add	sp, sp, #0x70
    64dc:	ret
    64e0:	add	x0, sp, #0x18
    64e4:	mov	w3, #0x8                   	// #8
    64e8:	mov	x1, x20
    64ec:	mov	x2, xzr
    64f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    64f4:	ldr	w8, [sp, #32]
    64f8:	b	6458 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xe8>
    64fc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6500:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6504:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6508:	add	x0, x0, #0x0
    650c:	add	x1, x1, #0x0
    6510:	add	x3, x3, #0x0
    6514:	mov	w2, #0x69                  	// #105
    6518:	bl	0 <__assert_fail>
    651c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6520:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6524:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6528:	add	x0, x0, #0x0
    652c:	add	x1, x1, #0x0
    6530:	add	x3, x3, #0x0
    6534:	mov	w2, #0x69                  	// #105
    6538:	bl	0 <__assert_fail>
    653c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6540:	add	x0, x0, #0x0
    6544:	mov	w1, #0x1                   	// #1
    6548:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    654c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6550:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6554:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6558:	add	x0, x0, #0x0
    655c:	add	x1, x1, #0x0
    6560:	add	x3, x3, #0x0
    6564:	mov	w2, #0x657                 	// #1623
    6568:	bl	0 <__assert_fail>
    656c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6570:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6574:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6578:	add	x0, x0, #0x0
    657c:	add	x1, x1, #0x0
    6580:	add	x3, x3, #0x0
    6584:	mov	w2, #0x43                  	// #67
    6588:	bl	0 <__assert_fail>

000000000000658c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>:
    658c:	stp	x29, x30, [sp, #-48]!
    6590:	stp	x22, x21, [sp, #16]
    6594:	stp	x20, x19, [sp, #32]
    6598:	mov	x29, sp
    659c:	cbz	w1, 664c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xc0>
    65a0:	ldr	x8, [x0, #48]
    65a4:	ldrb	w9, [x8]
    65a8:	tbnz	w9, #2, 6680 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xf4>
    65ac:	sub	x9, x8, #0x18
    65b0:	cmp	x8, #0x0
    65b4:	csel	x8, xzr, x9, eq  // eq = none
    65b8:	ldrb	w9, [x8, #16]
    65bc:	mov	w19, w1
    65c0:	cmp	w9, #0x50
    65c4:	b.ne	65f0 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x64>  // b.any
    65c8:	ldur	x8, [x8, #-24]
    65cc:	cbz	x8, 65f0 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x64>
    65d0:	ldrb	w9, [x8, #16]
    65d4:	cbnz	w9, 65f0 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x64>
    65d8:	ldrb	w9, [x8, #33]
    65dc:	tbz	w9, #5, 65f0 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x64>
    65e0:	ldr	w8, [x8, #36]
    65e4:	sub	w8, w8, #0x23
    65e8:	cmp	w8, #0x2
    65ec:	b.cc	6644 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb8>  // b.lo, b.ul, b.last
    65f0:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    65f4:	cbz	x0, 6644 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb8>
    65f8:	mov	x20, x0
    65fc:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    6600:	cbz	w0, 6644 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xb8>
    6604:	mov	x21, xzr
    6608:	sub	w19, w19, #0x1
    660c:	mov	w22, w0
    6610:	mov	x0, x20
    6614:	mov	w1, w21
    6618:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    661c:	mov	w1, w19
    6620:	bl	658c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    6624:	tbz	w0, #0, 664c <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xc0>
    6628:	mov	x0, x20
    662c:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    6630:	cmp	x21, w0, sxtw
    6634:	b.ge	6660 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xd4>  // b.tcont
    6638:	add	x21, x21, #0x1
    663c:	cmp	x22, x21
    6640:	b.ne	6610 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x84>  // b.any
    6644:	mov	w0, #0x1                   	// #1
    6648:	b	6650 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xc4>
    664c:	mov	w0, wzr
    6650:	ldp	x20, x19, [sp, #32]
    6654:	ldp	x22, x21, [sp, #16]
    6658:	ldp	x29, x30, [sp], #48
    665c:	ret
    6660:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6664:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6668:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    666c:	add	x0, x0, #0x0
    6670:	add	x1, x1, #0x0
    6674:	add	x3, x3, #0x0
    6678:	mov	w2, #0xda                  	// #218
    667c:	bl	0 <__assert_fail>
    6680:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6684:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6688:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    668c:	add	x0, x0, #0x0
    6690:	add	x1, x1, #0x0
    6694:	add	x3, x3, #0x0
    6698:	mov	w2, #0x8b                  	// #139
    669c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 84 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x84>
  10:	ldr	x0, [x0]
  14:	mov	w1, wzr
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xa4>
  20:	ldrb	w8, [x0, #16]
  24:	cmp	w8, #0x50
  28:	b.ne	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.any
  2c:	ldur	x8, [x0, #-24]
  30:	cbz	x8, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  34:	ldrb	w9, [x8, #16]
  38:	cbnz	w9, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  3c:	ldrb	w9, [x8, #33]
  40:	tbz	w9, #5, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  44:	ldr	w8, [x8, #36]
  48:	sub	w9, w8, #0x18
  4c:	cmp	w9, #0x3
  50:	b.cs	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.hs, b.nlast
  54:	cmp	w8, #0x18
  58:	b.ne	c4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xc4>  // b.any
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x86                  	// #134
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10CoroIdInst12clearPromiseEv:

0000000000000000 <_ZN4llvm10CoroIdInst12clearPromiseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  18:	mov	x19, x0
  1c:	mov	x0, x20
  20:	bl	0 <_ZNK4llvm5Value10getContextEv>
  24:	mov	w1, wzr
  28:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  2c:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
  30:	mov	x2, x0
  34:	mov	w1, #0x1                   	// #1
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  40:	cbz	x19, d0 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xd0>
  44:	ldrb	w8, [x19, #16]
  48:	cmp	w8, #0x37
  4c:	b.eq	a0 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xa0>  // b.none
  50:	cmp	w8, #0x49
  54:	b.eq	60 <_ZN4llvm10CoroIdInst12clearPromiseEv+0x60>  // b.none
  58:	cmp	w8, #0x3a
  5c:	b.ne	f0 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xf0>  // b.any
  60:	mov	x0, x19
  64:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  68:	ldr	x8, [x19, #8]
  6c:	cbz	x8, ac <_ZN4llvm10CoroIdInst12clearPromiseEv+0xac>
  70:	mov	x0, x20
  74:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  78:	ldp	x8, x9, [x0, #32]
  7c:	add	x9, x9, #0x28
  80:	cmp	x9, x8
  84:	b.eq	bc <_ZN4llvm10CoroIdInst12clearPromiseEv+0xbc>  // b.none
  88:	ldrb	w9, [x8]
  8c:	tbnz	w9, #2, 110 <_ZN4llvm10CoroIdInst12clearPromiseEv+0x110>
  90:	sub	x9, x8, #0x18
  94:	cmp	x8, #0x0
  98:	csel	x1, xzr, x9, eq  // eq = none
  9c:	b	c0 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xc0>
  a0:	ldp	x20, x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	mov	x0, x19
  b0:	ldp	x20, x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	b	0 <_ZN4llvm11Instruction15eraseFromParentEv>
  bc:	mov	x1, xzr
  c0:	mov	x0, x19
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldp	x29, x30, [sp], #32
  cc:	b	0 <_ZN4llvm11Instruction10moveBeforeEPS0_>
  d0:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  d4:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  d8:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x69                  	// #105
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  f4:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  f8:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x83                  	// #131
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 114:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 118:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x8b                  	// #139
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	98 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x98>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	7c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x7c>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 80 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x80>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	b	8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  7c:	ldr	x1, [x29, #24]
  80:	cbz	x1, 8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  84:	add	x0, x29, #0x18
  88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  9c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a0:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x8e                  	// #142
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x5
  1c:	mov	x8, x4
  20:	ldp	x4, x5, [x0, #48]
  24:	mov	x21, x6
  28:	mov	x20, x0
  2c:	mov	w9, #0x101                 	// #257
  30:	add	x6, sp, #0x8
  34:	mov	x0, x1
  38:	mov	x1, x2
  3c:	mov	x2, x3
  40:	mov	x3, x8
  44:	mov	x7, xzr
  48:	stp	xzr, xzr, [sp, #8]
  4c:	strh	w9, [sp, #24]
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  54:	ldrb	w8, [x20, #44]
  58:	mov	x22, x0
  5c:	cbz	w8, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  60:	add	x0, x22, #0x38
  64:	mov	w1, #0xffffffff            	// #-1
  68:	mov	w2, #0x39                  	// #57
  6c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  70:	tbnz	w0, #0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  74:	mov	w1, #0x39                  	// #57
  78:	mov	x0, x22
  7c:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
  80:	tbz	w0, #0, 188 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x188>
  84:	cbz	x22, 1b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1b4>
  88:	ldrb	w9, [x22, #16]
  8c:	subs	w8, w9, #0x18
  90:	b.cs	a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xa0>  // b.hs, b.nlast
  94:	cmp	w9, #0x5
  98:	b.ne	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.any
  9c:	ldrh	w8, [x22, #18]
  a0:	cmp	w8, #0x39
  a4:	b.hi	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.pmore
  a8:	mov	x10, #0x5000                	// #20480
  ac:	mov	w9, #0x1                   	// #1
  b0:	movk	x10, #0x125, lsl #16
  b4:	lsl	x9, x9, x8
  b8:	movk	x10, #0x40, lsl #48
  bc:	tst	x9, x10
  c0:	b.eq	118 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x118>  // b.none
  c4:	ldr	w23, [x20, #40]
  c8:	cbnz	x21, d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd4>
  cc:	ldr	x21, [x20, #32]
  d0:	cbz	x21, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xe4>
  d4:	mov	w1, #0x3                   	// #3
  d8:	mov	x0, x22
  dc:	mov	x2, x21
  e0:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  e4:	mov	x0, x22
  e8:	mov	x1, x23
  ec:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  f0:	mov	x0, x20
  f4:	mov	x1, x22
  f8:	mov	x2, x19
  fc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 100:	ldp	x20, x19, [sp, #80]
 104:	ldp	x22, x21, [sp, #64]
 108:	ldr	x23, [sp, #48]
 10c:	ldp	x29, x30, [sp, #32]
 110:	add	sp, sp, #0x60
 114:	ret
 118:	mov	w9, #0x1                   	// #1
 11c:	lsl	x8, x9, x8
 120:	tst	x8, #0x380000000000000
 124:	b.eq	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>  // b.none
 128:	ldr	x8, [x22]
 12c:	cbz	x8, 144 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x144>
 130:	ldrb	w9, [x8, #8]
 134:	cmp	w9, #0xe
 138:	b.ne	164 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x164>  // b.any
 13c:	ldr	x8, [x8, #24]
 140:	cbnz	x8, 130 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x130>
 144:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 148:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 14c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x69                  	// #105
 160:	bl	0 <__assert_fail>
 164:	cmp	w9, #0x10
 168:	b.ne	178 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x178>  // b.any
 16c:	ldr	x8, [x8, #16]
 170:	ldr	x8, [x8]
 174:	ldrb	w9, [x8, #8]
 178:	sub	w8, w9, #0x1
 17c:	cmp	w8, #0x5
 180:	b.ls	c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xc4>  // b.plast
 184:	b	f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xf0>
 188:	ldr	x8, [x22, #56]
 18c:	mov	x0, x22
 190:	str	x8, [sp, #8]
 194:	bl	0 <_ZNK4llvm5Value10getContextEv>
 198:	mov	x1, x0
 19c:	add	x0, sp, #0x8
 1a0:	mov	w2, #0xffffffff            	// #-1
 1a4:	mov	w3, #0x39                  	// #57
 1a8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 1ac:	str	x0, [x22, #56]
 1b0:	b	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x88>
 1b4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1b8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1bc:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x69                  	// #105
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	w8, #0x38                  	// #56
  24:	mov	x26, x7
  28:	mov	x20, x5
  2c:	mov	x21, x4
  30:	mov	x22, x3
  34:	mov	x23, x2
  38:	mov	x24, x1
  3c:	mov	x25, x0
  40:	madd	x28, x5, x8, x4
  44:	str	x6, [sp, #8]
  48:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  4c:	mov	w8, #0x38                  	// #56
  50:	mul	x8, x20, x8
  54:	sub	x8, x8, #0x38
  58:	cmp	x8, #0x70
  5c:	b.cs	74 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x74>  // b.hs, b.nlast
  60:	mov	w9, wzr
  64:	mov	x8, x21
  68:	b	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>
  6c:	mov	w9, wzr
  70:	b	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>
  74:	mov	x11, #0x2493                	// #9363
  78:	movk	x11, #0x9249, lsl #16
  7c:	movk	x11, #0x4924, lsl #32
  80:	lsr	x8, x8, #3
  84:	movk	x11, #0x2492, lsl #48
  88:	umulh	x8, x8, x11
  8c:	add	x11, x8, #0x1
  90:	mov	w13, #0x38                  	// #56
  94:	and	x12, x11, #0xffffffffffffffe
  98:	mov	w9, wzr
  9c:	mov	w10, wzr
  a0:	madd	x8, x12, x13, x21
  a4:	add	x13, x21, #0x60
  a8:	mov	x14, x12
  ac:	ldp	x18, x15, [x13, #-8]
  b0:	ldp	x17, x16, [x13, #-64]
  b4:	subs	x14, x14, #0x2
  b8:	add	x13, x13, #0x70
  bc:	sub	x15, x15, x18
  c0:	sub	x16, x16, x17
  c4:	lsr	x16, x16, #3
  c8:	lsr	x15, x15, #3
  cc:	add	w9, w9, w16
  d0:	add	w10, w10, w15
  d4:	b.ne	ac <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xac>  // b.any
  d8:	cmp	x11, x12
  dc:	add	w9, w10, w9
  e0:	b.eq	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>  // b.none
  e4:	ldp	x11, x10, [x8, #32]
  e8:	add	x8, x8, #0x38
  ec:	cmp	x28, x8
  f0:	sub	x10, x10, x11
  f4:	lsr	x10, x10, #3
  f8:	add	w9, w9, w10
  fc:	b.ne	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>  // b.any
 100:	add	w19, w22, #0x1
 104:	add	w1, w9, w19
 108:	lsl	w2, w20, #4
 10c:	mov	w0, #0x48                  	// #72
 110:	bl	0 <_ZN4llvm4UsernwEmjj>
 114:	ldr	x8, [x25, #16]
 118:	mov	x27, x0
 11c:	ldr	x1, [x8]
 120:	cbz	x20, 144 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x144>
 124:	mov	w8, #0x38                  	// #56
 128:	mul	x8, x20, x8
 12c:	sub	x8, x8, #0x38
 130:	cmp	x8, #0x70
 134:	b.cs	150 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x150>  // b.hs, b.nlast
 138:	mov	w9, wzr
 13c:	mov	x8, x21
 140:	b	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>
 144:	mov	w10, wzr
 148:	mov	x8, x22
 14c:	b	28c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x28c>
 150:	mov	x11, #0x2493                	// #9363
 154:	movk	x11, #0x9249, lsl #16
 158:	movk	x11, #0x4924, lsl #32
 15c:	lsr	x8, x8, #3
 160:	movk	x11, #0x2492, lsl #48
 164:	umulh	x8, x8, x11
 168:	add	x11, x8, #0x1
 16c:	mov	w13, #0x38                  	// #56
 170:	and	x12, x11, #0xffffffffffffffe
 174:	mov	w9, wzr
 178:	mov	w10, wzr
 17c:	madd	x8, x12, x13, x21
 180:	add	x13, x21, #0x60
 184:	mov	x14, x12
 188:	ldp	x18, x15, [x13, #-8]
 18c:	ldp	x17, x16, [x13, #-64]
 190:	subs	x14, x14, #0x2
 194:	add	x13, x13, #0x70
 198:	sub	x15, x15, x18
 19c:	sub	x16, x16, x17
 1a0:	lsr	x16, x16, #3
 1a4:	lsr	x15, x15, #3
 1a8:	add	w9, w9, w16
 1ac:	add	w10, w10, w15
 1b0:	b.ne	188 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x188>  // b.any
 1b4:	cmp	x11, x12
 1b8:	add	w9, w10, w9
 1bc:	b.eq	1dc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1dc>  // b.none
 1c0:	ldp	x11, x10, [x8, #32]
 1c4:	add	x8, x8, #0x38
 1c8:	cmp	x28, x8
 1cc:	sub	x10, x10, x11
 1d0:	lsr	x10, x10, #3
 1d4:	add	w9, w9, w10
 1d8:	b.ne	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>  // b.any
 1dc:	mov	w8, #0x38                  	// #56
 1e0:	mul	x8, x20, x8
 1e4:	sub	x12, x8, #0x38
 1e8:	cmp	x12, #0x70
 1ec:	mov	w8, w9
 1f0:	mov	w10, wzr
 1f4:	b.cs	200 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x200>  // b.hs, b.nlast
 1f8:	mov	x9, x21
 1fc:	b	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>
 200:	lsr	x9, x12, #3
 204:	mov	x12, #0x2493                	// #9363
 208:	movk	x12, #0x9249, lsl #16
 20c:	movk	x12, #0x4924, lsl #32
 210:	movk	x12, #0x2492, lsl #48
 214:	umulh	x9, x9, x12
 218:	add	x12, x9, #0x1
 21c:	mov	w14, #0x38                  	// #56
 220:	and	x13, x12, #0xffffffffffffffe
 224:	mov	w11, wzr
 228:	madd	x9, x13, x14, x21
 22c:	add	x14, x21, #0x60
 230:	mov	x15, x13
 234:	ldp	x0, x16, [x14, #-8]
 238:	ldp	x18, x17, [x14, #-64]
 23c:	subs	x15, x15, #0x2
 240:	add	x14, x14, #0x70
 244:	sub	x16, x16, x0
 248:	sub	x17, x17, x18
 24c:	lsr	x17, x17, #3
 250:	lsr	x16, x16, #3
 254:	add	w10, w10, w17
 258:	add	w11, w11, w16
 25c:	b.ne	234 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x234>  // b.any
 260:	cmp	x12, x13
 264:	add	w10, w11, w10
 268:	b.eq	288 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x288>  // b.none
 26c:	ldp	x12, x11, [x9, #32]
 270:	add	x9, x9, #0x38
 274:	cmp	x28, x9
 278:	sub	x11, x11, x12
 27c:	lsr	x11, x11, #3
 280:	add	w10, w10, w11
 284:	b.ne	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>  // b.any
 288:	add	x8, x22, x8
 28c:	mvn	x8, x8
 290:	mov	w9, #0x18                  	// #24
 294:	madd	x3, x8, x9, x27
 298:	add	w4, w10, w19
 29c:	mov	w2, #0x38                  	// #56
 2a0:	mov	x0, x27
 2a4:	mov	x5, x26
 2a8:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 2ac:	ldr	x7, [sp, #8]
 2b0:	mov	x0, x27
 2b4:	mov	x1, x25
 2b8:	mov	x2, x24
 2bc:	mov	x3, x23
 2c0:	mov	x4, x22
 2c4:	mov	x5, x21
 2c8:	mov	x6, x20
 2cc:	str	xzr, [x27, #56]
 2d0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 2d4:	mov	x0, x27
 2d8:	ldp	x20, x19, [sp, #96]
 2dc:	ldp	x22, x21, [sp, #80]
 2e0:	ldp	x24, x23, [sp, #64]
 2e4:	ldp	x26, x25, [sp, #48]
 2e8:	ldp	x28, x27, [sp, #32]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x70
 2f4:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst12getCoroBeginEv:

0000000000000000 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  14:	ldr	x19, [x19, #8]
  18:	cbz	x19, 64 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x64>
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm3Use7getUserEv>
  24:	cbz	x0, 7c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x7c>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.ne	14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>  // b.any
  34:	ldur	x8, [x0, #-24]
  38:	cbz	x8, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  3c:	ldrb	w9, [x8, #16]
  40:	cbnz	w9, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  44:	ldrb	w9, [x8, #33]
  48:	tbz	w9, #5, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  4c:	ldr	w8, [x8, #36]
  50:	cmp	w8, #0x12
  54:	b.ne	14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>  // b.any
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  68:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	mov	w2, #0x60                  	// #96
  78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  7c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  80:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  84:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w10, w8, #0xfffffff
  24:	cmp	w10, w9
  28:	mov	x21, x1
  2c:	b.ne	3c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x3c>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	tbz	w8, #30, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  40:	and	w9, w8, #0xfffffff
  44:	mov	w10, #0xfffffff             	// #268435455
  48:	cmp	w9, w10
  4c:	b.eq	e0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xe0>  // b.none
  50:	add	w9, w9, #0x1
  54:	and	w8, w8, #0xf0000000
  58:	orr	w8, w9, w8
  5c:	and	w9, w9, #0xfffffff
  60:	sub	w1, w9, #0x1
  64:	mov	x0, x20
  68:	mov	x2, x21
  6c:	str	w8, [x20, #20]
  70:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  74:	cbz	x19, 100 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x100>
  78:	ldr	w10, [x20, #20]
  7c:	and	x9, x10, #0xfffffff
  80:	sub	w8, w9, #0x1
  84:	tbnz	w10, #30, 98 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x98>
  88:	mov	w10, #0x18                  	// #24
  8c:	mneg	x9, x9, x10
  90:	add	x9, x20, x9
  94:	b	9c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x9c>
  98:	ldur	x9, [x20, #-8]
  9c:	ldr	w10, [x20, #56]
  a0:	mov	w11, #0x18                  	// #24
  a4:	ldr	x21, [sp, #16]
  a8:	madd	x9, x10, x11, x9
  ac:	add	x8, x9, w8, uxtw #3
  b0:	str	x19, [x8, #8]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xd8                  	// #216
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xd9                  	// #217
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa82                 	// #2690
 11c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 100 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x100>
   c:	ldr	x8, [x0]
  10:	ldr	x9, [x2]
  14:	cmp	x8, x9
  18:	b.ne	120 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x120>  // b.any
  1c:	ldr	w9, [x0, #20]
  20:	and	x8, x9, #0xfffffff
  24:	cmp	w8, w1
  28:	b.ls	140 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x140>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x0, x8
  3c:	b	44 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x44>
  40:	ldur	x8, [x0, #-8]
  44:	mov	w9, #0x18                  	// #24
  48:	umaddl	x9, w1, w9, x8
  4c:	ldr	x11, [x9]
  50:	mov	w10, w1
  54:	cbz	x11, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  58:	mov	w11, #0x18                  	// #24
  5c:	madd	x12, x10, x11, x8
  60:	ldp	x13, x11, [x12, #8]
  64:	and	x11, x11, #0xfffffffffffffffc
  68:	str	x13, [x11]
  6c:	ldr	x12, [x12, #8]
  70:	cbz	x12, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  74:	ldr	x13, [x12, #16]
  78:	and	x13, x13, #0x3
  7c:	orr	x11, x13, x11
  80:	str	x11, [x12, #16]
  84:	str	x2, [x9]
  88:	ldr	x11, [x2, #8]!
  8c:	mov	w12, #0x18                  	// #24
  90:	madd	x12, x10, x12, x8
  94:	str	x11, [x12, #8]!
  98:	cbz	x11, b4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xb4>
  9c:	tst	x12, #0x3
  a0:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  a4:	ldr	x13, [x11, #16]
  a8:	and	x13, x13, #0x3
  ac:	orr	x12, x13, x12
  b0:	str	x12, [x11, #16]
  b4:	tst	x2, #0x3
  b8:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  bc:	mov	w11, #0x18                  	// #24
  c0:	madd	x8, x10, x11, x8
  c4:	ldr	x10, [x8, #16]!
  c8:	and	x10, x10, #0x3
  cc:	orr	x10, x10, x2
  d0:	str	x10, [x8]
  d4:	str	x9, [x2]
  d8:	ldp	x29, x30, [sp], #16
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xb3                  	// #179
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa5e                 	// #2654
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 124:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 128:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0xa60                 	// #2656
 13c:	bl	0 <__assert_fail>
 140:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 144:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 148:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0xadf                 	// #2783
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	cmp	x1, x2
  20:	mov	x19, x0
  24:	mov	x23, xzr
  28:	b.eq	74 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x74>  // b.none
  2c:	mov	x22, x21
  30:	b	40 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x40>
  34:	cmp	x22, x20
  38:	add	x23, x23, #0x1
  3c:	b.eq	74 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x74>  // b.none
  40:	cbz	x22, f8 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xf8>
  44:	ldr	x22, [x22, #8]
  48:	cbz	x22, 34 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x34>
  4c:	mov	x0, x22
  50:	bl	0 <_ZNK4llvm3Use7getUserEv>
  54:	cbz	x0, d8 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xd8>
  58:	ldrb	w8, [x0, #16]
  5c:	cmp	w8, #0x18
  60:	b.cc	44 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x44>  // b.lo, b.ul, b.last
  64:	sub	w8, w8, #0x19
  68:	cmp	w8, #0xb
  6c:	b.cs	44 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x44>  // b.hs, b.nlast
  70:	b	34 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x34>
  74:	ldp	w8, w9, [x19, #8]
  78:	sub	x9, x9, x8
  7c:	cmp	x23, x9
  80:	b.ls	9c <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x9c>  // b.plast
  84:	add	x2, x23, x8
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  98:	ldr	w8, [x19, #8]
  9c:	ldr	x9, [x19]
  a0:	mov	x0, x21
  a4:	mov	x1, x20
  a8:	add	x2, x9, x8, lsl #3
  ac:	bl	0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  b0:	ldp	w8, w9, [x19, #8]
  b4:	add	x8, x23, x8
  b8:	cmp	x8, x9
  bc:	b.hi	118 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x118>  // b.pmore
  c0:	str	w8, [x19, #8]
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x69                  	// #105
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  fc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x50                  	// #80
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 11c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x43                  	// #67
 134:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_:

0000000000000000 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	mov	x19, x2
  18:	b.eq	88 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x88>  // b.none
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	b	34 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x34>
  28:	cmp	x21, x20
  2c:	add	x19, x19, #0x8
  30:	b.eq	88 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x88>  // b.none
  34:	cbz	x21, bc <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0xbc>
  38:	mov	x0, x21
  3c:	bl	0 <_ZNK4llvm3Use7getUserEv>
  40:	cbz	x0, 9c <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x9c>
  44:	ldrb	w8, [x0, #16]
  48:	cmp	w8, #0x17
  4c:	b.ls	dc <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0xdc>  // b.plast
  50:	ldr	x8, [x0, #40]
  54:	str	x8, [x19]
  58:	ldr	x21, [x21, #8]
  5c:	cbz	x21, 28 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x28>
  60:	mov	x0, x21
  64:	bl	0 <_ZNK4llvm3Use7getUserEv>
  68:	cbz	x0, 9c <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x9c>
  6c:	ldrb	w8, [x0, #16]
  70:	cmp	w8, #0x18
  74:	b.cc	58 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x58>  // b.lo, b.ul, b.last
  78:	sub	w8, w8, #0x19
  7c:	cmp	w8, #0xb
  80:	b.cs	58 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x58>  // b.hs, b.nlast
  84:	b	28 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x28>
  88:	mov	x0, x19
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldr	x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x4a                  	// #74
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x8, x0
   c:	ldr	x9, [x8, #-48]!
  10:	cbz	x9, 38 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x38>
  14:	ldp	x10, x9, [x0, #-40]
  18:	and	x9, x9, #0xfffffffffffffffc
  1c:	str	x10, [x9]
  20:	ldur	x10, [x0, #-40]
  24:	cbz	x10, 38 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x38>
  28:	ldr	x11, [x10, #16]
  2c:	and	x11, x11, #0x3
  30:	orr	x9, x11, x9
  34:	str	x9, [x10, #16]
  38:	str	x1, [x8]
  3c:	cbz	x1, 80 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x80>
  40:	ldr	x9, [x1, #8]!
  44:	str	x9, [x0, #-40]!
  48:	cbz	x9, 64 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x64>
  4c:	tst	x0, #0x3
  50:	b.ne	88 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x88>  // b.any
  54:	ldr	x10, [x9, #16]
  58:	and	x10, x10, #0x3
  5c:	orr	x10, x10, x0
  60:	str	x10, [x9, #16]
  64:	tst	x1, #0x3
  68:	b.ne	88 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE+0x88>  // b.any
  6c:	ldr	x9, [x8, #16]
  70:	and	x9, x9, #0x3
  74:	orr	x9, x9, x1
  78:	str	x9, [x8, #16]
  7c:	str	x8, [x1]
  80:	ldp	x29, x30, [sp], #16
  84:	ret
  88:	adrp	x0, 0 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE>
  8c:	adrp	x1, 0 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE>
  90:	adrp	x3, 0 <_ZN4llvm10InvokeInst13setUnwindDestEPNS_10BasicBlockE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xb3                  	// #179
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x1, dc <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xdc>
   c:	ldrb	w8, [x0, #18]
  10:	tbz	w8, #0, fc <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xfc>
  14:	ldr	w9, [x0, #20]
  18:	and	x8, x9, #0xfffffff
  1c:	cmp	w8, #0x1
  20:	b.ls	11c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x11c>  // b.plast
  24:	tbnz	w9, #30, 38 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x38>
  28:	mov	w9, #0x18                  	// #24
  2c:	mneg	x8, x8, x9
  30:	add	x8, x0, x8
  34:	b	3c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x3c>
  38:	ldur	x8, [x0, #-8]
  3c:	mov	x9, x8
  40:	ldr	x10, [x9, #24]!
  44:	cbz	x10, 6c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x6c>
  48:	ldp	x11, x10, [x8, #32]
  4c:	and	x10, x10, #0xfffffffffffffffc
  50:	str	x11, [x10]
  54:	ldr	x11, [x8, #32]
  58:	cbz	x11, 6c <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x6c>
  5c:	ldr	x12, [x11, #16]
  60:	and	x12, x12, #0x3
  64:	orr	x10, x12, x10
  68:	str	x10, [x11, #16]
  6c:	str	x1, [x8, #24]
  70:	ldr	x10, [x1, #8]!
  74:	mov	x11, x8
  78:	str	x10, [x11, #32]!
  7c:	cbz	x10, 98 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0x98>
  80:	tst	x11, #0x3
  84:	b.ne	bc <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xbc>  // b.any
  88:	ldr	x12, [x10, #16]
  8c:	and	x12, x12, #0x3
  90:	orr	x11, x12, x11
  94:	str	x11, [x10, #16]
  98:	tst	x1, #0x3
  9c:	b.ne	bc <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE+0xbc>  // b.any
  a0:	ldr	x10, [x8, #40]
  a4:	and	x10, x10, #0x3
  a8:	orr	x10, x10, x1
  ac:	str	x10, [x8, #40]
  b0:	str	x9, [x1]
  b4:	ldp	x29, x30, [sp], #16
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  c0:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  c4:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0xb3                  	// #179
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  e0:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  e4:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x10c3                	// #4291
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 100:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 104:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x10c4                	// #4292
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 120:	adrp	x1, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 124:	adrp	x3, 0 <_ZN4llvm15CatchSwitchInst13setUnwindDestEPNS_10BasicBlockE>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x1126                	// #4390
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x22, [x0, #8]
  14:	mov	w8, w1
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	cmp	x8, x22, lsl #6
  24:	mov	w21, w2
  28:	b.ls	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.plast
  2c:	mov	x0, x19
  30:	mov	w1, w20
  34:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  38:	ldr	x9, [x19, #8]
  3c:	and	x8, x22, #0xffffffff
  40:	subs	x9, x9, x8
  44:	b.cc	100 <_ZN4llvm9BitVector6resizeEjb+0x100>  // b.lo, b.ul, b.last
  48:	b.eq	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.none
  4c:	ldr	x10, [x19]
  50:	lsl	x2, x9, #3
  54:	sbfx	w1, w21, #0, #1
  58:	add	x0, x10, x8, lsl #3
  5c:	bl	0 <memset>
  60:	ldr	w8, [x19, #16]
  64:	cmp	w8, w20
  68:	b.cs	7c <_ZN4llvm9BitVector6resizeEjb+0x7c>  // b.hs, b.nlast
  6c:	and	w1, w21, #0x1
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  78:	ldr	w8, [x19, #16]
  7c:	cmp	w8, w20
  80:	str	w20, [x19, #16]
  84:	b.hi	8c <_ZN4llvm9BitVector6resizeEjb+0x8c>  // b.pmore
  88:	tbz	w21, #0, f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>
  8c:	ldr	x8, [x19, #8]
  90:	add	w9, w20, #0x3f
  94:	lsr	w21, w9, #6
  98:	subs	x8, x8, x21
  9c:	b.ls	bc <_ZN4llvm9BitVector6resizeEjb+0xbc>  // b.plast
  a0:	b.eq	bc <_ZN4llvm9BitVector6resizeEjb+0xbc>  // b.none
  a4:	ldr	x9, [x19]
  a8:	lsl	x2, x8, #3
  ac:	mov	w1, wzr
  b0:	add	x0, x9, x21, lsl #3
  b4:	bl	0 <memset>
  b8:	ldr	w20, [x19, #16]
  bc:	ands	w8, w20, #0x3f
  c0:	b.eq	f0 <_ZN4llvm9BitVector6resizeEjb+0xf0>  // b.none
  c4:	ldr	x10, [x19, #8]
  c8:	sub	w9, w21, #0x1
  cc:	cmp	x10, x9
  d0:	b.ls	120 <_ZN4llvm9BitVector6resizeEjb+0x120>  // b.plast
  d4:	ldr	x10, [x19]
  d8:	lsl	x9, x9, #3
  dc:	mov	x12, #0xffffffffffffffff    	// #-1
  e0:	lsl	x8, x12, x8
  e4:	ldr	x11, [x10, x9]
  e8:	bic	x8, x11, x8
  ec:	str	x8, [x10, x9]
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldp	x22, x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	ret
 100:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 104:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 108:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x174                 	// #372
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 124:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 128:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0x1ab                 	// #427
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVectoroRERKS0_:

0000000000000000 <_ZN4llvm9BitVectoroRERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x1, #16]
  18:	mov	x19, x0
  1c:	cmp	w8, w1
  20:	b.cs	34 <_ZN4llvm9BitVectoroRERKS0_+0x34>  // b.hs, b.nlast
  24:	mov	x0, x19
  28:	mov	w2, wzr
  2c:	bl	0 <_ZN4llvm9BitVectoroRERKS0_>
  30:	ldr	w1, [x20, #16]
  34:	add	w8, w1, #0x3f
  38:	lsr	w8, w8, #6
  3c:	cbz	w8, 84 <_ZN4llvm9BitVectoroRERKS0_+0x84>
  40:	mov	x9, xzr
  44:	ldr	x10, [x20, #8]
  48:	cmp	x10, x9
  4c:	b.ls	94 <_ZN4llvm9BitVectoroRERKS0_+0x94>  // b.plast
  50:	ldr	x10, [x19, #8]
  54:	cmp	x10, x9
  58:	b.ls	94 <_ZN4llvm9BitVectoroRERKS0_+0x94>  // b.plast
  5c:	ldr	x10, [x20]
  60:	ldr	x11, [x19]
  64:	lsl	x12, x9, #3
  68:	add	x9, x9, #0x1
  6c:	ldr	x10, [x10, x12]
  70:	ldr	x13, [x11, x12]
  74:	cmp	x8, x9
  78:	orr	x10, x13, x10
  7c:	str	x10, [x11, x12]
  80:	b.ne	44 <_ZN4llvm9BitVectoroRERKS0_+0x44>  // b.any
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	adrp	x0, 0 <_ZN4llvm9BitVectoroRERKS0_>
  98:	adrp	x1, 0 <_ZN4llvm9BitVectoroRERKS0_>
  9c:	adrp	x3, 0 <_ZN4llvm9BitVectoroRERKS0_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x1ab                 	// #427
  b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x81
  18:	b.lt	104 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x104>  // b.tstop
  1c:	mov	x19, x0
  20:	mov	x20, x2
  24:	add	x22, x0, #0x8
  28:	b	48 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x48>
  2c:	mov	x0, x21
  30:	mov	x2, x20
  34:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  38:	sub	x8, x21, x19
  3c:	cmp	x8, #0x80
  40:	mov	x1, x21
  44:	b.le	104 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x104>
  48:	cbz	x20, 114 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x114>
  4c:	lsr	x8, x8, #4
  50:	ldr	x9, [x19, #8]
  54:	ldr	x11, [x19, x8, lsl #3]
  58:	ldur	x10, [x1, #-8]
  5c:	sub	x20, x20, #0x1
  60:	cmp	x9, x11
  64:	b.cs	78 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x78>  // b.hs, b.nlast
  68:	cmp	x11, x10
  6c:	b.cs	88 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x88>  // b.hs, b.nlast
  70:	ldr	x9, [x19]
  74:	b	c0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xc0>
  78:	cmp	x9, x10
  7c:	b.cs	a8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xa8>  // b.hs, b.nlast
  80:	ldr	x8, [x19]
  84:	b	a0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xa0>
  88:	ldr	x8, [x19]
  8c:	cmp	x9, x10
  90:	b.cs	a0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xa0>  // b.hs, b.nlast
  94:	str	x10, [x19]
  98:	stur	x8, [x1, #-8]
  9c:	b	c8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xc8>
  a0:	stp	x9, x8, [x19]
  a4:	b	c8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xc8>
  a8:	ldr	x9, [x19]
  ac:	cmp	x11, x10
  b0:	b.cs	c0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xc0>  // b.hs, b.nlast
  b4:	str	x10, [x19]
  b8:	stur	x9, [x1, #-8]
  bc:	b	c8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xc8>
  c0:	str	x11, [x19]
  c4:	str	x9, [x19, x8, lsl #3]
  c8:	mov	x8, x1
  cc:	mov	x9, x22
  d0:	ldr	x11, [x19]
  d4:	ldr	x10, [x9], #8
  d8:	cmp	x10, x11
  dc:	b.cc	d4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd4>  // b.lo, b.ul, b.last
  e0:	sub	x21, x9, #0x8
  e4:	ldr	x12, [x8, #-8]!
  e8:	cmp	x11, x12
  ec:	b.cc	e4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xe4>  // b.lo, b.ul, b.last
  f0:	cmp	x21, x8
  f4:	b.cs	2c <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x2c>  // b.hs, b.nlast
  f8:	stur	x12, [x9, #-8]
  fc:	str	x10, [x8]
 100:	b	d0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd0>
 104:	ldp	x20, x19, [sp, #32]
 108:	ldp	x22, x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	mov	x2, x1
 124:	ldp	x29, x30, [sp], #48
 128:	b	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>

Disassembly of section .text._ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	cmp	x8, #0x81
  28:	b.lt	b4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xb4>  // b.tstop
  2c:	add	x21, x20, #0x8
  30:	mov	w22, #0x1                   	// #1
  34:	mov	x23, x21
  38:	mov	x24, x20
  3c:	b	68 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x68>
  40:	lsl	x2, x22, #3
  44:	mov	x0, x21
  48:	mov	x1, x20
  4c:	bl	0 <memmove>
  50:	mov	x8, x20
  54:	add	x22, x22, #0x1
  58:	cmp	x22, #0x10
  5c:	add	x23, x23, #0x8
  60:	str	x25, [x8]
  64:	b.eq	14c <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x14c>  // b.none
  68:	mov	x8, x24
  6c:	add	x24, x20, x22, lsl #3
  70:	ldr	x25, [x24]
  74:	ldr	x9, [x20]
  78:	cmp	x25, x9
  7c:	b.cc	40 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x40>  // b.lo, b.ul, b.last
  80:	ldr	x8, [x8]
  84:	cmp	x8, x25
  88:	mov	x8, x24
  8c:	b.ls	54 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x54>  // b.plast
  90:	mov	x9, x23
  94:	mov	x8, x23
  98:	ldr	x10, [x8, #-8]!
  9c:	ldur	x11, [x9, #-16]
  a0:	str	x10, [x9]
  a4:	cmp	x11, x25
  a8:	mov	x9, x8
  ac:	b.hi	98 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x98>  // b.pmore
  b0:	b	54 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x54>
  b4:	cmp	x20, x19
  b8:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  bc:	add	x9, x20, #0x8
  c0:	cmp	x9, x19
  c4:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  c8:	mov	x21, x20
  cc:	b	e4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xe4>
  d0:	mov	x8, x20
  d4:	add	x9, x21, #0x8
  d8:	cmp	x9, x19
  dc:	str	x22, [x8]
  e0:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  e4:	ldr	x22, [x21, #8]
  e8:	ldr	x10, [x20]
  ec:	mov	x8, x21
  f0:	mov	x21, x9
  f4:	cmp	x22, x10
  f8:	b.cs	118 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x118>  // b.hs, b.nlast
  fc:	subs	x2, x21, x20
 100:	b.eq	d0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd0>  // b.none
 104:	sub	x8, x8, x2
 108:	add	x0, x8, #0x10
 10c:	mov	x1, x20
 110:	bl	0 <memmove>
 114:	b	d0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd0>
 118:	ldr	x8, [x8]
 11c:	cmp	x8, x22
 120:	mov	x8, x21
 124:	b.ls	d4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd4>  // b.plast
 128:	mov	x9, x21
 12c:	mov	x8, x21
 130:	ldr	x10, [x8, #-8]!
 134:	ldur	x11, [x9, #-16]
 138:	str	x10, [x9]
 13c:	cmp	x11, x22
 140:	mov	x9, x8
 144:	b.hi	130 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x130>  // b.pmore
 148:	b	d4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd4>
 14c:	add	x8, x20, #0x80
 150:	cmp	x8, x19
 154:	b.ne	180 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x180>  // b.any
 158:	ldp	x20, x19, [sp, #64]
 15c:	ldp	x22, x21, [sp, #48]
 160:	ldp	x24, x23, [sp, #32]
 164:	ldr	x25, [sp, #16]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	add	x8, x8, #0x8
 174:	cmp	x8, x19
 178:	str	x9, [x10]
 17c:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
 180:	ldp	x10, x9, [x8, #-8]
 184:	cmp	x10, x9
 188:	mov	x10, x8
 18c:	b.ls	170 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x170>  // b.plast
 190:	mov	x11, x8
 194:	mov	x10, x8
 198:	ldr	x12, [x10, #-8]!
 19c:	ldur	x13, [x11, #-16]
 1a0:	str	x12, [x11]
 1a4:	cmp	x13, x9
 1a8:	mov	x11, x10
 1ac:	b.hi	198 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x198>  // b.pmore
 1b0:	b	170 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x170>

Disassembly of section .text._ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_:

0000000000000000 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_>:
   0:	sub	x8, x1, x0
   4:	cmp	x8, #0x10
   8:	asr	x9, x8, #3
   c:	b.ge	1f8 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x1f8>  // b.tcont
  10:	cmp	x1, x2
  14:	b.cs	108 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x108>  // b.hs, b.nlast
  18:	sub	x10, x9, #0x1
  1c:	sub	x11, x9, #0x2
  20:	cmp	x10, #0x0
  24:	csel	x9, x9, x10, lt  // lt = tstop
  28:	cmp	x11, #0x0
  2c:	csel	x11, x10, x11, lt  // lt = tstop
  30:	asr	x9, x9, #1
  34:	asr	x10, x11, #1
  38:	orr	x11, x11, #0x1
  3c:	mov	x12, x1
  40:	b	58 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x58>
  44:	mov	x15, x14
  48:	str	x13, [x0, x15, lsl #3]
  4c:	add	x12, x12, #0x8
  50:	cmp	x12, x2
  54:	b.cs	108 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x108>  // b.hs, b.nlast
  58:	ldr	x13, [x12]
  5c:	ldr	x14, [x0]
  60:	cmp	x13, x14
  64:	b.cs	4c <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x4c>  // b.hs, b.nlast
  68:	cmp	x8, #0x11
  6c:	str	x14, [x12]
  70:	b.lt	b4 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xb4>  // b.tstop
  74:	mov	x15, xzr
  78:	lsl	x14, x15, #1
  7c:	mov	w16, #0x1                   	// #1
  80:	add	x14, x14, #0x2
  84:	bfi	x16, x15, #1, #63
  88:	ldr	x17, [x0, x14, lsl #3]
  8c:	ldr	x18, [x0, x16, lsl #3]
  90:	cmp	x17, x18
  94:	csel	x14, x16, x14, cc  // cc = lo, ul, last
  98:	ldr	x16, [x0, x14, lsl #3]
  9c:	cmp	x14, x9
  a0:	str	x16, [x0, x15, lsl #3]
  a4:	mov	x15, x14
  a8:	b.lt	78 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x78>  // b.tstop
  ac:	tbz	w8, #3, bc <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xbc>
  b0:	b	d0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xd0>
  b4:	mov	x14, xzr
  b8:	tbnz	w8, #3, d0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xd0>
  bc:	cmp	x14, x10
  c0:	b.ne	d0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xd0>  // b.any
  c4:	ldr	x14, [x0, x11, lsl #3]
  c8:	str	x14, [x0, x10, lsl #3]
  cc:	mov	x14, x11
  d0:	cmp	x14, #0x1
  d4:	b.lt	44 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x44>  // b.tstop
  d8:	sub	x15, x14, #0x1
  dc:	cmp	x15, #0x0
  e0:	csel	x15, x14, x15, lt  // lt = tstop
  e4:	asr	x15, x15, #1
  e8:	ldr	x16, [x0, x15, lsl #3]
  ec:	cmp	x16, x13
  f0:	b.cs	44 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x44>  // b.hs, b.nlast
  f4:	cmp	x14, #0x2
  f8:	str	x16, [x0, x14, lsl #3]
  fc:	mov	x14, x15
 100:	b.gt	d8 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0xd8>
 104:	b	48 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x48>
 108:	cmp	x8, #0x9
 10c:	b.ge	124 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x124>  // b.tcont
 110:	ret
 114:	mov	x11, x10
 118:	cmp	x9, #0x8
 11c:	str	x8, [x0, x11, lsl #3]
 120:	b.le	110 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x110>
 124:	ldr	x8, [x1, #-8]!
 128:	ldr	x13, [x0]
 12c:	sub	x9, x1, x0
 130:	asr	x12, x9, #3
 134:	sub	x11, x12, #0x1
 138:	cmp	x11, #0x0
 13c:	csel	x10, x12, x11, lt  // lt = tstop
 140:	cmp	x9, #0x11
 144:	str	x13, [x1]
 148:	b.lt	190 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x190>  // b.tstop
 14c:	mov	x14, xzr
 150:	asr	x13, x10, #1
 154:	lsl	x10, x14, #1
 158:	mov	w15, #0x1                   	// #1
 15c:	add	x10, x10, #0x2
 160:	bfi	x15, x14, #1, #63
 164:	ldr	x16, [x0, x10, lsl #3]
 168:	ldr	x17, [x0, x15, lsl #3]
 16c:	cmp	x16, x17
 170:	csel	x10, x15, x10, cc  // cc = lo, ul, last
 174:	ldr	x15, [x0, x10, lsl #3]
 178:	cmp	x10, x13
 17c:	str	x15, [x0, x14, lsl #3]
 180:	mov	x14, x10
 184:	b.lt	154 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x154>  // b.tstop
 188:	tbz	w9, #3, 198 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x198>
 18c:	b	1c0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x1c0>
 190:	mov	x10, xzr
 194:	tbnz	w9, #3, 1c0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x1c0>
 198:	sub	x12, x12, #0x2
 19c:	cmp	x12, #0x0
 1a0:	csel	x11, x11, x12, lt  // lt = tstop
 1a4:	cmp	x10, x11, asr #1
 1a8:	b.ne	1c0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x1c0>  // b.any
 1ac:	mov	w11, #0x1                   	// #1
 1b0:	bfi	x11, x10, #1, #63
 1b4:	ldr	x12, [x0, x11, lsl #3]
 1b8:	str	x12, [x0, x10, lsl #3]
 1bc:	mov	x10, x11
 1c0:	cmp	x10, #0x1
 1c4:	b.lt	114 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x114>  // b.tstop
 1c8:	sub	x11, x10, #0x1
 1cc:	cmp	x11, #0x0
 1d0:	csel	x11, x10, x11, lt  // lt = tstop
 1d4:	asr	x11, x11, #1
 1d8:	ldr	x12, [x0, x11, lsl #3]
 1dc:	cmp	x12, x8
 1e0:	b.cs	114 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x114>  // b.hs, b.nlast
 1e4:	cmp	x10, #0x2
 1e8:	str	x12, [x0, x10, lsl #3]
 1ec:	mov	x10, x11
 1f0:	b.gt	1c8 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x1c8>
 1f4:	b	118 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x118>
 1f8:	sub	x10, x9, #0x2
 1fc:	sub	x11, x9, #0x1
 200:	cmp	x10, #0x0
 204:	csel	x12, x11, x10, lt  // lt = tstop
 208:	cmp	x11, #0x0
 20c:	asr	x10, x12, #1
 210:	csel	x11, x9, x11, lt  // lt = tstop
 214:	asr	x11, x11, #1
 218:	orr	x12, x12, #0x1
 21c:	mov	x14, x10
 220:	b	234 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x234>
 224:	mov	x16, x15
 228:	str	x14, [x0, x16, lsl #3]
 22c:	sub	x14, x13, #0x1
 230:	cbz	x13, 10 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x10>
 234:	mov	x13, x14
 238:	ldr	x14, [x0, x14, lsl #3]
 23c:	cmp	x11, x13
 240:	mov	x15, x13
 244:	b.le	280 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x280>
 248:	mov	x16, x13
 24c:	lsl	x15, x16, #1
 250:	mov	w17, #0x1                   	// #1
 254:	add	x15, x15, #0x2
 258:	bfi	x17, x16, #1, #63
 25c:	ldr	x18, [x0, x15, lsl #3]
 260:	ldr	x3, [x0, x17, lsl #3]
 264:	cmp	x18, x3
 268:	csel	x15, x17, x15, cc  // cc = lo, ul, last
 26c:	ldr	x17, [x0, x15, lsl #3]
 270:	cmp	x15, x11
 274:	str	x17, [x0, x16, lsl #3]
 278:	mov	x16, x15
 27c:	b.lt	24c <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x24c>  // b.tstop
 280:	tbnz	w8, #3, 298 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x298>
 284:	cmp	x15, x10
 288:	b.ne	298 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x298>  // b.any
 28c:	ldr	x15, [x0, x12, lsl #3]
 290:	str	x15, [x0, x10, lsl #3]
 294:	mov	x15, x12
 298:	cmp	x15, x13
 29c:	b.le	224 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x224>
 2a0:	sub	x16, x15, #0x1
 2a4:	cmp	x16, #0x0
 2a8:	csel	x16, x15, x16, lt  // lt = tstop
 2ac:	asr	x16, x16, #1
 2b0:	ldr	x17, [x0, x16, lsl #3]
 2b4:	cmp	x17, x14
 2b8:	b.cs	224 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x224>  // b.hs, b.nlast
 2bc:	cmp	x16, x13
 2c0:	str	x17, [x0, x15, lsl #3]
 2c4:	mov	x15, x16
 2c8:	b.gt	2a0 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x2a0>
 2cc:	b	228 <_ZSt14__partial_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_S7_T0_+0x228>

Disassembly of section .text._ZN4llvm9BitVector4growEj:

0000000000000000 <_ZN4llvm9BitVector4growEj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #8]
  18:	add	w9, w1, #0x3f
  1c:	lsr	w9, w9, #6
  20:	lsl	x8, x8, #1
  24:	cmp	x8, x9
  28:	csel	x22, x8, x9, hi  // hi = pmore
  2c:	cbz	x22, f4 <_ZN4llvm9BitVector4growEj+0xf4>
  30:	mov	x19, x0
  34:	ldr	x0, [x0]
  38:	lsl	x21, x22, #3
  3c:	mov	x1, x21
  40:	bl	0 <realloc>
  44:	mov	x20, x0
  48:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  4c:	cbz	x21, 68 <_ZN4llvm9BitVector4growEj+0x68>
  50:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  54:	add	x0, x0, #0x0
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  60:	mov	x20, xzr
  64:	b	88 <_ZN4llvm9BitVector4growEj+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  78:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  7c:	add	x0, x0, #0x0
  80:	mov	w1, #0x1                   	// #1
  84:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  88:	ldr	w23, [x19, #16]
  8c:	stp	x20, x22, [x19]
  90:	add	w8, w23, #0x3f
  94:	lsr	w21, w8, #6
  98:	subs	x8, x22, x21
  9c:	b.ls	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.plast
  a0:	b.eq	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.none
  a4:	add	x0, x20, x21, lsl #3
  a8:	lsl	x2, x8, #3
  ac:	mov	w1, wzr
  b0:	bl	0 <memset>
  b4:	and	x8, x23, #0x3f
  b8:	cbz	w8, e0 <_ZN4llvm9BitVector4growEj+0xe0>
  bc:	sub	w9, w21, #0x1
  c0:	cmp	x22, x9
  c4:	b.ls	114 <_ZN4llvm9BitVector4growEj+0x114>  // b.plast
  c8:	lsl	x9, x9, #3
  cc:	ldr	x10, [x20, x9]
  d0:	mov	x11, #0xffffffffffffffff    	// #-1
  d4:	lsl	x8, x11, x8
  d8:	bic	x8, x10, x8
  dc:	str	x8, [x20, x9]
  e0:	ldp	x20, x19, [sp, #48]
  e4:	ldp	x22, x21, [sp, #32]
  e8:	ldr	x23, [sp, #16]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  f8:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
  fc:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x376                 	// #886
 110:	bl	0 <__assert_fail>
 114:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
 118:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
 11c:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1ab                 	// #427
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector15set_unused_bitsEb:

0000000000000000 <_ZN4llvm9BitVector15set_unused_bitsEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #16]
  14:	ldr	x9, [x0, #8]
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	add	w10, w8, #0x3f
  24:	lsr	w21, w10, #6
  28:	subs	x9, x9, x21
  2c:	b.ls	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.plast
  30:	b.eq	4c <_ZN4llvm9BitVector15set_unused_bitsEb+0x4c>  // b.none
  34:	ldr	x8, [x19]
  38:	lsl	x2, x9, #3
  3c:	sbfx	w1, w20, #0, #1
  40:	add	x0, x8, x21, lsl #3
  44:	bl	0 <memset>
  48:	ldr	w8, [x19, #16]
  4c:	ands	w8, w8, #0x3f
  50:	b.eq	9c <_ZN4llvm9BitVector15set_unused_bitsEb+0x9c>  // b.none
  54:	ldr	x10, [x19, #8]
  58:	mov	x9, #0xffffffffffffffff    	// #-1
  5c:	lsl	x8, x9, x8
  60:	sub	w9, w21, #0x1
  64:	cmp	x10, x9
  68:	tbz	w20, #0, 84 <_ZN4llvm9BitVector15set_unused_bitsEb+0x84>
  6c:	b.ls	ac <_ZN4llvm9BitVector15set_unused_bitsEb+0xac>  // b.plast
  70:	ldr	x10, [x19]
  74:	lsl	x9, x9, #3
  78:	ldr	x11, [x10, x9]
  7c:	orr	x8, x11, x8
  80:	b	98 <_ZN4llvm9BitVector15set_unused_bitsEb+0x98>
  84:	b.ls	ac <_ZN4llvm9BitVector15set_unused_bitsEb+0xac>  // b.plast
  88:	ldr	x10, [x19]
  8c:	lsl	x9, x9, #3
  90:	ldr	x11, [x10, x9]
  94:	bic	x8, x11, x8
  98:	str	x8, [x10, x9]
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret
  ac:	adrp	x0, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b0:	adrp	x1, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b4:	adrp	x3, 0 <_ZN4llvm9BitVector15set_unused_bitsEb>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x1ab                 	// #427
  c8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVectoreqERKS0_:

0000000000000000 <_ZNK4llvm9BitVectoreqERKS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #16]
   c:	ldr	w9, [x1, #16]
  10:	add	w8, w8, #0x3f
  14:	add	w9, w9, #0x3f
  18:	lsr	w8, w8, #6
  1c:	lsr	w9, w9, #6
  20:	cmp	w9, w8
  24:	csel	w10, w9, w8, cc  // cc = lo, ul, last
  28:	cbz	w10, 70 <_ZNK4llvm9BitVectoreqERKS0_+0x70>
  2c:	ldr	x11, [x0, #8]
  30:	mov	x12, xzr
  34:	cmp	x11, x12
  38:	b.ls	e8 <_ZNK4llvm9BitVectoreqERKS0_+0xe8>  // b.plast
  3c:	ldr	x13, [x1, #8]
  40:	cmp	x13, x12
  44:	b.ls	e8 <_ZNK4llvm9BitVectoreqERKS0_+0xe8>  // b.plast
  48:	ldr	x13, [x0]
  4c:	ldr	x14, [x1]
  50:	lsl	x15, x12, #3
  54:	ldr	x13, [x13, x15]
  58:	ldr	x14, [x14, x15]
  5c:	cmp	x13, x14
  60:	b.ne	dc <_ZNK4llvm9BitVectoreqERKS0_+0xdc>  // b.any
  64:	add	x12, x12, #0x1
  68:	cmp	w10, w12
  6c:	b.ne	34 <_ZNK4llvm9BitVectoreqERKS0_+0x34>  // b.any
  70:	cmp	w8, w9
  74:	b.ls	a4 <_ZNK4llvm9BitVectoreqERKS0_+0xa4>  // b.plast
  78:	ldr	x9, [x0, #8]
  7c:	mov	w10, w10
  80:	cmp	x9, x10
  84:	b.ls	e8 <_ZNK4llvm9BitVectoreqERKS0_+0xe8>  // b.plast
  88:	ldr	x11, [x0]
  8c:	ldr	x11, [x11, x10, lsl #3]
  90:	cbnz	x11, dc <_ZNK4llvm9BitVectoreqERKS0_+0xdc>
  94:	add	w10, w10, #0x1
  98:	cmp	w8, w10
  9c:	b.ne	7c <_ZNK4llvm9BitVectoreqERKS0_+0x7c>  // b.any
  a0:	b	d0 <_ZNK4llvm9BitVectoreqERKS0_+0xd0>
  a4:	b.eq	d0 <_ZNK4llvm9BitVectoreqERKS0_+0xd0>  // b.none
  a8:	ldr	x10, [x1, #8]
  ac:	mov	w8, w8
  b0:	cmp	x10, x8
  b4:	b.ls	e8 <_ZNK4llvm9BitVectoreqERKS0_+0xe8>  // b.plast
  b8:	ldr	x11, [x1]
  bc:	ldr	x11, [x11, x8, lsl #3]
  c0:	cbnz	x11, dc <_ZNK4llvm9BitVectoreqERKS0_+0xdc>
  c4:	add	w8, w8, #0x1
  c8:	cmp	w9, w8
  cc:	b.ne	ac <_ZNK4llvm9BitVectoreqERKS0_+0xac>  // b.any
  d0:	mov	w0, #0x1                   	// #1
  d4:	ldp	x29, x30, [sp], #16
  d8:	ret
  dc:	mov	w0, wzr
  e0:	ldp	x29, x30, [sp], #16
  e4:	ret
  e8:	adrp	x0, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  ec:	adrp	x1, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  f0:	adrp	x3, 0 <_ZNK4llvm9BitVectoreqERKS0_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x1ab                 	// #427
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x10, x9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	cmp	x9, x10
  1c:	b.eq	88 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x88>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  28:	ldp	x9, x8, [x19, #8]
  2c:	mov	w10, #0x18                  	// #24
  30:	cmp	x8, x9
  34:	mov	w9, #0x1c                  	// #28
  38:	csel	x9, x9, x10, eq  // eq = none
  3c:	ldr	w9, [x19, x9]
  40:	add	x8, x8, x9, lsl #3
  44:	cmp	x8, x0
  48:	b.cc	11c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x11c>  // b.lo, b.ul, b.last
  4c:	b.eq	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.none
  50:	ldr	x9, [x0]
  54:	cmn	x9, #0x2
  58:	b.cc	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.lo, b.ul, b.last
  5c:	add	x0, x0, #0x8
  60:	cmp	x8, x0
  64:	b.ne	50 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x50>  // b.any
  68:	mov	x0, x8
  6c:	ldr	x9, [x19]
  70:	stp	x0, x8, [x20]
  74:	strb	w1, [x20, #32]
  78:	stp	x19, x9, [x20, #16]
  7c:	ldp	x20, x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
  88:	ldr	w8, [x19, #28]
  8c:	cbz	w8, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  90:	mov	x0, xzr
  94:	lsl	x10, x8, #3
  98:	mov	x11, x9
  9c:	ldr	x12, [x11]
  a0:	cmp	x12, x1
  a4:	b.eq	110 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x110>  // b.none
  a8:	cmn	x12, #0x2
  ac:	csel	x0, x11, x0, eq  // eq = none
  b0:	subs	x10, x10, #0x8
  b4:	add	x11, x11, #0x8
  b8:	b.ne	9c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x9c>  // b.any
  bc:	cbz	x0, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  c0:	str	x1, [x0]
  c4:	ldr	w8, [x19, #32]
  c8:	ldr	x9, [x19]
  cc:	sub	w8, w8, #0x1
  d0:	add	x9, x9, #0x1
  d4:	str	w8, [x19, #32]
  d8:	b	104 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x104>
  dc:	ldr	w10, [x19, #24]
  e0:	cmp	w8, w10
  e4:	b.cs	20 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x20>  // b.hs, b.nlast
  e8:	add	w10, w8, #0x1
  ec:	lsl	x8, x8, #3
  f0:	str	w10, [x19, #28]
  f4:	str	x1, [x9, x8]
  f8:	ldp	x9, x10, [x19]
  fc:	add	x9, x9, #0x1
 100:	add	x0, x10, x8
 104:	str	x9, [x19]
 108:	mov	w1, #0x1                   	// #1
 10c:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 110:	mov	w1, wzr
 114:	mov	x0, x11
 118:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 11c:	adrp	x0, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 124:	adrp	x3, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0xf8                  	// #248
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getRetconCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	90 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x90>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	mov	w1, wzr
  20:	bl	0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  24:	cbz	x0, b0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0xb0>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.ne	70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>  // b.any
  34:	ldur	x8, [x0, #-24]
  38:	cbz	x8, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  3c:	ldrb	w9, [x8, #16]
  40:	cbnz	w9, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  44:	ldrb	w9, [x8, #33]
  48:	tbz	w9, #5, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  4c:	ldr	w8, [x8, #36]
  50:	sub	w9, w8, #0x18
  54:	cmp	w9, #0x3
  58:	b.cs	70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>  // b.hs, b.nlast
  5c:	sub	w8, w8, #0x19
  60:	cmp	w8, #0x2
  64:	b.cs	d0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0xd0>  // b.hs, b.nlast
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  74:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  78:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x8c                  	// #140
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  b4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  b8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x69                  	// #105
  cc:	bl	0 <__assert_fail>
  d0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  d4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  d8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x108                 	// #264
  ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 64 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x64>
  34:	mov	w8, w0
  38:	add	x9, x20, #0x7
  3c:	tst	w19, #0xff
  40:	add	x9, x8, x9, lsr #3
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x22, x21, [sp, #16]
  4c:	sub	x9, x9, #0x1
  50:	udiv	x9, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	mul	x0, x9, x8
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc7                  	// #199
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, wzr
  10:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  14:	cbz	x0, 5c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	x0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  60:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  64:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  80:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  84:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	x0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 12c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x12c>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x69                  	// #105
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	cbz	x2, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xe4>
  18:	ldrb	w9, [x2, #16]
  1c:	mov	x19, x5
  20:	mov	x8, x4
  24:	mov	x20, x0
  28:	cmp	w9, #0x10
  2c:	b.ls	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x88>  // b.plast
  30:	mov	w9, #0x101                 	// #257
  34:	add	x4, sp, #0x8
  38:	mov	x0, x1
  3c:	mov	x1, x2
  40:	mov	x2, x3
  44:	mov	x3, x8
  48:	mov	x5, xzr
  4c:	stp	xzr, xzr, [sp, #8]
  50:	strh	w9, [sp, #24]
  54:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  58:	mov	w1, #0x1                   	// #1
  5c:	mov	x21, x0
  60:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  64:	mov	x0, x20
  68:	mov	x1, x21
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  74:	ldp	x20, x19, [sp, #64]
  78:	ldr	x21, [sp, #48]
  7c:	ldp	x29, x30, [sp, #32]
  80:	add	sp, sp, #0x50
  84:	ret
  88:	cbz	x8, b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xb4>
  8c:	mov	x9, x3
  90:	mov	x10, x8
  94:	ldr	x11, [x9]
  98:	cbz	x11, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xe4>
  9c:	ldrb	w11, [x11, #16]
  a0:	cmp	w11, #0x11
  a4:	b.cs	30 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x30>  // b.hs, b.nlast
  a8:	subs	x10, x10, #0x1
  ac:	add	x9, x9, #0x8
  b0:	b.ne	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x94>  // b.any
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldr	x21, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x1
  c8:	mov	x1, x2
  cc:	mov	x2, x3
  d0:	mov	x3, x8
  d4:	mov	x5, xzr
  d8:	mov	x6, xzr
  dc:	add	sp, sp, #0x50
  e0:	b	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  e4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  e8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  ec:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x69                  	// #105
 100:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	w0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

CoroSplit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroSplitLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	bl	0 <_ZN4llvm34initializeCallGraphWrapperPassPassERNS_12PassRegistryE>
      a4:	mov	w0, #0x50                  	// #80
      a8:	bl	0 <_Znwm>
      ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      b0:	add	x8, x8, #0x0
      b4:	mov	w9, #0x41                  	// #65
      b8:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      bc:	add	x10, x10, #0x0
      c0:	stp	x8, x9, [x0]
      c4:	mov	w8, #0xa                   	// #10
      c8:	stp	x10, x8, [x0, #16]
      cc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      d0:	add	x8, x8, #0x0
      d4:	str	x8, [x0, #32]
      d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      dc:	mov	x20, x0
      e0:	add	x8, x8, #0x0
      e4:	strh	wzr, [x0, #40]
      e8:	strb	wzr, [x0, #42]
      ec:	stp	xzr, xzr, [x0, #48]
      f0:	stp	xzr, x8, [x0, #64]
      f4:	mov	w2, #0x1                   	// #1
      f8:	mov	x0, x19
      fc:	mov	x1, x20
     100:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     104:	mov	x0, x20
     108:	ldp	x20, x19, [sp, #16]
     10c:	ldp	x29, x30, [sp], #32
     110:	ret

0000000000000114 <_ZN4llvm25createCoroSplitLegacyPassEv>:
     114:	sub	sp, sp, #0x30
     118:	stp	x29, x30, [sp, #16]
     11c:	str	x19, [sp, #32]
     120:	add	x29, sp, #0x10
     124:	mov	w0, #0x20                  	// #32
     128:	bl	0 <_Znwm>
     12c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     130:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     134:	add	x8, x8, #0x0
     138:	mov	w9, #0x3                   	// #3
     13c:	add	x10, x10, #0x0
     140:	mov	x19, x0
     144:	stp	xzr, x8, [x0, #8]
     148:	str	w9, [x0, #24]
     14c:	str	x10, [x0]
     150:	strb	wzr, [x0, #28]
     154:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     158:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     15c:	add	x8, x8, #0x0
     160:	add	x9, x29, #0x18
     164:	str	x0, [x29, #24]
     168:	stp	x8, x9, [sp]
     16c:	adrp	x0, 0 <_ZSt15__once_callable>
     170:	ldr	x1, [x0]
     174:	add	x0, x0, #0x0
     178:	blr	x1
     17c:	mrs	x8, tpidr_el0
     180:	mov	x9, sp
     184:	str	x9, [x8, x0]
     188:	adrp	x0, 0 <_ZSt11__once_call>
     18c:	ldr	x1, [x0]
     190:	add	x0, x0, #0x0
     194:	blr	x1
     198:	adrp	x10, 0 <__pthread_key_create>
     19c:	ldr	x10, [x10]
     1a0:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1a4:	add	x9, x9, #0x0
     1a8:	str	x9, [x8, x0]
     1ac:	cbz	x10, 1dc <_ZN4llvm25createCoroSplitLegacyPassEv+0xc8>
     1b0:	adrp	x1, 0 <__once_proxy>
     1b4:	ldr	x1, [x1]
     1b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1bc:	add	x0, x0, #0x0
     1c0:	bl	0 <pthread_once>
     1c4:	cbnz	w0, 1e0 <_ZN4llvm25createCoroSplitLegacyPassEv+0xcc>
     1c8:	mov	x0, x19
     1cc:	ldr	x19, [sp, #32]
     1d0:	ldp	x29, x30, [sp, #16]
     1d4:	add	sp, sp, #0x30
     1d8:	ret
     1dc:	mov	w0, #0xffffffff            	// #-1
     1e0:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e4 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv>:
     1e4:	sub	sp, sp, #0x30
     1e8:	stp	x29, x30, [sp, #16]
     1ec:	str	x19, [sp, #32]
     1f0:	add	x29, sp, #0x10
     1f4:	mov	w0, #0x20                  	// #32
     1f8:	bl	0 <_Znwm>
     1fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     200:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     204:	add	x8, x8, #0x0
     208:	mov	w9, #0x3                   	// #3
     20c:	add	x10, x10, #0x0
     210:	mov	x19, x0
     214:	stp	xzr, x8, [x0, #8]
     218:	str	w9, [x0, #24]
     21c:	str	x10, [x0]
     220:	strb	wzr, [x0, #28]
     224:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     228:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     22c:	add	x8, x8, #0x0
     230:	add	x9, x29, #0x18
     234:	str	x0, [x29, #24]
     238:	stp	x8, x9, [sp]
     23c:	adrp	x0, 0 <_ZSt15__once_callable>
     240:	ldr	x1, [x0]
     244:	add	x0, x0, #0x0
     248:	blr	x1
     24c:	mrs	x8, tpidr_el0
     250:	mov	x9, sp
     254:	str	x9, [x8, x0]
     258:	adrp	x0, 0 <_ZSt11__once_call>
     25c:	ldr	x1, [x0]
     260:	add	x0, x0, #0x0
     264:	blr	x1
     268:	adrp	x10, 0 <__pthread_key_create>
     26c:	ldr	x10, [x10]
     270:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     274:	add	x9, x9, #0x0
     278:	str	x9, [x8, x0]
     27c:	cbz	x10, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv+0xc8>
     280:	adrp	x1, 0 <__once_proxy>
     284:	ldr	x1, [x1]
     288:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     28c:	add	x0, x0, #0x0
     290:	bl	0 <pthread_once>
     294:	cbnz	w0, 2b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv+0xcc>
     298:	mov	x0, x19
     29c:	ldr	x19, [sp, #32]
     2a0:	ldp	x29, x30, [sp, #16]
     2a4:	add	sp, sp, #0x30
     2a8:	ret
     2ac:	mov	w0, #0xffffffff            	// #-1
     2b0:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b4 <_ZN12_GLOBAL__N_115CoroSplitLegacyD0Ev>:
     2b4:	stp	x29, x30, [sp, #-32]!
     2b8:	str	x19, [sp, #16]
     2bc:	mov	x29, sp
     2c0:	mov	x19, x0
     2c4:	bl	0 <_ZN4llvm4PassD2Ev>
     2c8:	mov	x0, x19
     2cc:	ldr	x19, [sp, #16]
     2d0:	ldp	x29, x30, [sp], #32
     2d4:	b	0 <_ZdlPv>

00000000000002d8 <_ZNK12_GLOBAL__N_115CoroSplitLegacy11getPassNameEv>:
     2d8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     2dc:	add	x0, x0, #0x0
     2e0:	mov	w1, #0x13                  	// #19
     2e4:	ret

00000000000002e8 <_ZNK12_GLOBAL__N_115CoroSplitLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     2e8:	b	0 <_ZNK4llvm16CallGraphSCCPass16getAnalysisUsageERNS_13AnalysisUsageE>

00000000000002ec <_ZN12_GLOBAL__N_115CoroSplitLegacy16doInitializationERN4llvm9CallGraphE>:
     2ec:	sub	sp, sp, #0x40
     2f0:	stp	x29, x30, [sp, #32]
     2f4:	str	x19, [sp, #48]
     2f8:	add	x29, sp, #0x20
     2fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     300:	add	x8, x8, #0x0
     304:	mov	x19, x0
     308:	ldp	q0, q1, [x8]
     30c:	ldr	x0, [x1]
     310:	mov	x1, sp
     314:	mov	w2, #0x2                   	// #2
     318:	stp	q0, q1, [sp]
     31c:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     320:	and	w8, w0, #0x1
     324:	strb	w8, [x19, #28]
     328:	ldr	x19, [sp, #48]
     32c:	ldp	x29, x30, [sp, #32]
     330:	mov	w0, wzr
     334:	add	sp, sp, #0x40
     338:	ret

000000000000033c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE>:
     33c:	stp	d11, d10, [sp, #-128]!
     340:	stp	d9, d8, [sp, #16]
     344:	stp	x29, x30, [sp, #32]
     348:	stp	x28, x27, [sp, #48]
     34c:	stp	x26, x25, [sp, #64]
     350:	stp	x24, x23, [sp, #80]
     354:	stp	x22, x21, [sp, #96]
     358:	stp	x20, x19, [sp, #112]
     35c:	mov	x29, sp
     360:	sub	sp, sp, #0x2d0
     364:	ldrb	w8, [x0, #28]
     368:	cbz	w8, 3a8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x6c>
     36c:	ldr	x8, [x1]
     370:	mov	x20, x0
     374:	mov	x26, x1
     378:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     37c:	ldr	x0, [x8]
     380:	add	x1, x1, #0x0
     384:	mov	w2, #0x18                  	// #24
     388:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     38c:	cbz	x0, 3b0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x74>
     390:	mov	x19, x0
     394:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     398:	ldr	x8, [x19, #8]
     39c:	cmp	x8, #0x0
     3a0:	csel	x27, xzr, x19, eq  // eq = none
     3a4:	b	3b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x78>
     3a8:	mov	w19, wzr
     3ac:	b	1884 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1548>
     3b0:	mov	x27, xzr
     3b4:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3b8:	ldr	d8, [x8]
     3bc:	add	x8, sp, #0x98
     3c0:	add	x21, x8, #0x10
     3c4:	str	x21, [sp, #152]
     3c8:	str	d8, [sp, #160]
     3cc:	mov	x19, x26
     3d0:	ldr	x23, [x19, #16]!
     3d4:	ldr	x24, [x19, #8]
     3d8:	cmp	x23, x24
     3dc:	b.eq	468 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x12c>  // b.none
     3e0:	adrp	x22, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3e4:	add	x22, x22, #0x0
     3e8:	b	414 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd8>
     3ec:	ldr	x9, [sp, #152]
     3f0:	str	x25, [x9, w8, uxtw #3]
     3f4:	ldp	w8, w9, [sp, #160]
     3f8:	cmp	w8, w9
     3fc:	b.cs	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.hs, b.nlast
     400:	add	w8, w8, #0x1
     404:	str	w8, [sp, #160]
     408:	add	x23, x23, #0x8
     40c:	cmp	x24, x23
     410:	b.eq	45c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x120>  // b.none
     414:	ldr	x8, [x23]
     418:	ldr	x25, [x8]
     41c:	cbz	x25, 408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcc>
     420:	add	x0, x25, #0x70
     424:	mov	w2, #0x12                  	// #18
     428:	mov	x1, x22
     42c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     430:	tbz	w0, #0, 408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcc>
     434:	ldp	w8, w9, [sp, #160]
     438:	cmp	w8, w9
     43c:	b.cc	3ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb0>  // b.lo, b.ul, b.last
     440:	add	x0, sp, #0x98
     444:	mov	w3, #0x8                   	// #8
     448:	mov	x1, x21
     44c:	mov	x2, xzr
     450:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     454:	ldr	w8, [sp, #160]
     458:	b	3ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb0>
     45c:	ldr	w8, [sp, #160]
     460:	cbz	x27, 470 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x134>
     464:	b	47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     468:	mov	w8, wzr
     46c:	cbnz	x27, 47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     470:	cbnz	w8, 47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     474:	mov	w19, wzr
     478:	b	186c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1530>
     47c:	ldr	x9, [x20, #8]
     480:	cbz	x9, 1c8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1950>
     484:	ldr	x8, [x9]
     488:	ldr	x9, [x9, #8]
     48c:	cmp	x8, x9
     490:	b.eq	1c6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1930>  // b.none
     494:	adrp	x10, 0 <_ZN4llvm20CallGraphWrapperPass2IDE>
     498:	ldr	x10, [x10]
     49c:	mov	x0, xzr
     4a0:	ldp	x11, x12, [x8]
     4a4:	cmp	x11, x10
     4a8:	csel	x0, x12, x0, eq  // eq = none
     4ac:	b.eq	4bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x180>  // b.none
     4b0:	add	x8, x8, #0x10
     4b4:	cmp	x8, x9
     4b8:	b.ne	4a0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x164>  // b.any
     4bc:	cbz	x0, 1c6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1930>
     4c0:	ldr	x8, [x0]
     4c4:	adrp	x1, 0 <_ZN4llvm20CallGraphWrapperPass2IDE>
     4c8:	ldr	x8, [x8, #96]
     4cc:	ldr	x1, [x1]
     4d0:	blr	x8
     4d4:	ldr	w8, [sp, #160]
     4d8:	ldr	x25, [x0, #32]
     4dc:	cbz	w8, 185c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1520>
     4e0:	ldr	x22, [x25]
     4e4:	adrp	x23, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     4e8:	add	x23, x23, #0x0
     4ec:	mov	w2, #0x13                  	// #19
     4f0:	mov	x0, x22
     4f4:	mov	x1, x23
     4f8:	str	x27, [sp, #24]
     4fc:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     500:	cbnz	x0, 690 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x354>
     504:	ldr	x20, [x22]
     508:	mov	x0, x20
     50c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     510:	mov	x21, x0
     514:	mov	x0, x20
     518:	mov	w1, wzr
     51c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     520:	str	x0, [sp, #200]
     524:	add	x1, sp, #0xc8
     528:	mov	w2, #0x1                   	// #1
     52c:	mov	x0, x21
     530:	mov	w3, wzr
     534:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     538:	mov	x21, x0
     53c:	mov	w24, #0x103                 	// #259
     540:	mov	w0, #0x78                  	// #120
     544:	stp	x23, xzr, [sp, #200]
     548:	strh	w24, [sp, #216]
     54c:	bl	0 <_ZN4llvm4UsernwEm>
     550:	add	x4, sp, #0xc8
     554:	mov	w2, #0x8                   	// #8
     558:	mov	w3, #0xffffffff            	// #-1
     55c:	mov	x1, x21
     560:	mov	x5, x22
     564:	mov	x23, x0
     568:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
     56c:	mov	w1, #0xffffffff            	// #-1
     570:	mov	w2, #0x3                   	// #3
     574:	mov	x0, x23
     578:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9Attribute8AttrKindE>
     57c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     580:	add	x8, x8, #0x0
     584:	mov	w0, #0x40                  	// #64
     588:	stp	x8, xzr, [sp, #200]
     58c:	strh	w24, [sp, #216]
     590:	bl	0 <_Znwm>
     594:	add	x2, sp, #0xc8
     598:	mov	x1, x20
     59c:	mov	x3, x23
     5a0:	mov	x4, xzr
     5a4:	mov	x21, x0
     5a8:	add	x22, sp, #0xc8
     5ac:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     5b0:	mov	w0, #0x38                  	// #56
     5b4:	mov	w1, wzr
     5b8:	bl	0 <_ZN4llvm4UsernwEmj>
     5bc:	mov	x1, x20
     5c0:	mov	x2, x21
     5c4:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
     5c8:	mov	x0, x25
     5cc:	mov	x1, x23
     5d0:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     5d4:	ldp	x23, x8, [x26, #16]
     5d8:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     5dc:	ldr	d0, [x9]
     5e0:	mov	x20, x0
     5e4:	sub	x21, x8, x23
     5e8:	asr	x24, x21, #3
     5ec:	add	x22, x22, #0x10
     5f0:	cmp	x24, #0x9
     5f4:	str	x22, [sp, #200]
     5f8:	str	d0, [sp, #208]
     5fc:	b.cc	614 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x2d8>  // b.lo, b.ul, b.last
     600:	add	x0, sp, #0xc8
     604:	mov	w3, #0x8                   	// #8
     608:	mov	x1, x22
     60c:	mov	x2, x24
     610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     614:	cbz	x21, 630 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x2f4>
     618:	ldr	x8, [sp, #200]
     61c:	ldr	w9, [sp, #208]
     620:	mov	x1, x23
     624:	mov	x2, x21
     628:	add	x0, x8, x9, lsl #3
     62c:	bl	0 <memmove>
     630:	ldp	w8, w9, [sp, #208]
     634:	add	x8, x24, x8
     638:	cmp	x8, x9
     63c:	b.hi	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.pmore
     640:	cmp	w9, w8
     644:	str	w8, [sp, #208]
     648:	b.ls	18b0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1574>  // b.plast
     64c:	ldr	x9, [sp, #200]
     650:	str	x20, [x9, w8, uxtw #3]
     654:	ldp	w8, w9, [sp, #208]
     658:	cmp	w8, w9
     65c:	b.cs	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.hs, b.nlast
     660:	ldr	x1, [sp, #200]
     664:	add	x8, x8, #0x1
     668:	mov	x0, x19
     66c:	str	w8, [sp, #208]
     670:	add	x2, x1, x8, lsl #3
     674:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     678:	ldr	x0, [sp, #200]
     67c:	add	x8, sp, #0xc8
     680:	add	x8, x8, #0x10
     684:	cmp	x0, x8
     688:	b.eq	690 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x354>  // b.none
     68c:	bl	0 <free>
     690:	ldr	w8, [sp, #160]
     694:	cbz	w8, 1844 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1508>
     698:	add	x9, sp, #0xc8
     69c:	add	x15, x9, #0x18
     6a0:	add	x12, x25, #0x8
     6a4:	str	x15, [sp, #120]
     6a8:	add	x15, x9, #0x48
     6ac:	str	x12, [sp, #72]
     6b0:	add	x12, x25, #0x10
     6b4:	str	x15, [sp, #112]
     6b8:	add	x15, x9, #0x58
     6bc:	ldr	x28, [sp, #152]
     6c0:	sub	x10, x29, #0x88
     6c4:	str	x12, [sp, #64]
     6c8:	adrp	x12, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6cc:	adrp	x13, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6d0:	adrp	x14, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6d4:	str	x15, [sp, #32]
     6d8:	add	x15, x9, #0x68
     6dc:	add	x9, x9, #0x98
     6e0:	sub	x11, x29, #0xd8
     6e4:	stp	x9, x15, [sp, #96]
     6e8:	ldr	d9, [x12]
     6ec:	add	x9, x10, #0x28
     6f0:	ldr	d10, [x13]
     6f4:	ldr	d11, [x14]
     6f8:	str	x9, [sp, #80]
     6fc:	add	x9, x11, #0x10
     700:	adrp	x24, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     704:	str	x9, [sp, #136]
     708:	add	x9, x10, #0x30
     70c:	mov	w21, #0x1                   	// #1
     710:	add	x24, x24, #0x0
     714:	str	x9, [sp, #16]
     718:	add	x9, x10, #0x8
     71c:	add	x8, x28, x8, lsl #3
     720:	str	x9, [sp, #8]
     724:	str	x8, [sp, #88]
     728:	stp	x25, x26, [sp, #40]
     72c:	b	748 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x40c>
     730:	add	x0, sp, #0x1b8
     734:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
     738:	ldr	x8, [sp, #88]
     73c:	add	x28, x28, #0x8
     740:	cmp	x28, x8
     744:	b.eq	1844 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1508>  // b.none
     748:	ldr	x27, [x28]
     74c:	mov	w1, #0xffffffff            	// #-1
     750:	mov	w3, #0x12                  	// #18
     754:	mov	x2, x24
     758:	add	x0, x27, #0x70
     75c:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     760:	str	x0, [sp, #144]
     764:	add	x0, sp, #0x90
     768:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     76c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     770:	ldr	x8, [x8]
     774:	mov	x19, x0
     778:	mov	x20, x1
     77c:	ldrb	w8, [x8]
     780:	cbz	w8, 900 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x5c4>
     784:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     788:	add	x0, x0, #0x0
     78c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     790:	tbz	w0, #0, 900 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x5c4>
     794:	bl	0 <_ZN4llvm4dbgsEv>
     798:	ldp	x9, x8, [x0, #16]
     79c:	mov	x22, x0
     7a0:	sub	x9, x9, x8
     7a4:	cmp	x9, #0x20
     7a8:	b.hi	7c8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x48c>  // b.pmore
     7ac:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7b0:	mov	w2, #0x21                  	// #33
     7b4:	mov	x0, x22
     7b8:	add	x1, x1, #0x0
     7bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7c0:	mov	x22, x0
     7c4:	b	7ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4b0>
     7c8:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7cc:	add	x9, x9, #0x0
     7d0:	ldp	q1, q0, [x9]
     7d4:	mov	w9, #0x27                  	// #39
     7d8:	strb	w9, [x8, #32]
     7dc:	stp	q1, q0, [x8]
     7e0:	ldr	x8, [x22, #24]
     7e4:	add	x8, x8, #0x21
     7e8:	str	x8, [x22, #24]
     7ec:	mov	x0, x27
     7f0:	bl	0 <_ZNK4llvm5Value7getNameEv>
     7f4:	ldp	x9, x8, [x22, #16]
     7f8:	mov	x21, x1
     7fc:	sub	x9, x9, x8
     800:	cmp	x1, x9
     804:	mov	x1, x0
     808:	b.ls	824 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4e8>  // b.plast
     80c:	mov	x0, x22
     810:	mov	x2, x21
     814:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     818:	ldr	x8, [x0, #24]
     81c:	mov	x22, x0
     820:	b	840 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x504>
     824:	cbz	x21, 840 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x504>
     828:	mov	x0, x8
     82c:	mov	x2, x21
     830:	bl	0 <memcpy>
     834:	ldr	x8, [x22, #24]
     838:	add	x8, x8, x21
     83c:	str	x8, [x22, #24]
     840:	ldr	x9, [x22, #16]
     844:	mov	w21, #0x1                   	// #1
     848:	sub	x9, x9, x8
     84c:	cmp	x9, #0x8
     850:	b.hi	874 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x538>  // b.pmore
     854:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     858:	mov	w2, #0x9                   	// #9
     85c:	mov	x0, x22
     860:	add	x1, x1, #0x0
     864:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     868:	mov	x22, x0
     86c:	ldr	x0, [x0, #24]
     870:	b	898 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x55c>
     874:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     878:	add	x9, x9, #0x0
     87c:	ldr	x9, [x9]
     880:	mov	w10, #0x20                  	// #32
     884:	strb	w10, [x8, #8]
     888:	str	x9, [x8]
     88c:	ldr	x8, [x22, #24]
     890:	add	x0, x8, #0x9
     894:	str	x0, [x22, #24]
     898:	ldr	x8, [x22, #16]
     89c:	sub	x8, x8, x0
     8a0:	cmp	x20, x8
     8a4:	b.ls	8c4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x588>  // b.plast
     8a8:	mov	x0, x22
     8ac:	mov	x1, x19
     8b0:	mov	x2, x20
     8b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8b8:	mov	x22, x0
     8bc:	ldr	x0, [x0, #24]
     8c0:	b	8e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x5a4>
     8c4:	cbz	x20, 8e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x5a4>
     8c8:	mov	x1, x19
     8cc:	mov	x2, x20
     8d0:	bl	0 <memcpy>
     8d4:	ldr	x8, [x22, #24]
     8d8:	add	x0, x8, x20
     8dc:	str	x0, [x22, #24]
     8e0:	ldr	x8, [x22, #16]
     8e4:	cmp	x8, x0
     8e8:	b.ne	ac0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x784>  // b.any
     8ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     8f0:	mov	w2, #0x1                   	// #1
     8f4:	mov	x0, x22
     8f8:	add	x1, x1, #0x0
     8fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     900:	cmp	x20, #0x1
     904:	b.ne	adc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x7a0>  // b.any
     908:	ldrb	w8, [x19]
     90c:	cmp	w8, #0x30
     910:	b.ne	adc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x7a0>  // b.any
     914:	ldr	x20, [x27, #40]
     918:	mov	x0, x27
     91c:	bl	0 <_ZNK4llvm8Function10getContextEv>
     920:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     924:	mov	x19, x0
     928:	mov	w2, #0x13                  	// #19
     92c:	mov	x0, x20
     930:	add	x1, x1, #0x0
     934:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     938:	cbz	x0, 1c0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18d0>
     93c:	mov	x0, x27
     940:	bl	0 <_ZNK4llvm8Function10getContextEv>
     944:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     948:	mov	w2, #0x12                  	// #18
     94c:	mov	w4, #0x1                   	// #1
     950:	mov	x1, x24
     954:	add	x3, x3, #0x0
     958:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     95c:	mov	x2, x0
     960:	mov	w1, #0xffffffff            	// #-1
     964:	mov	x0, x27
     968:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     96c:	add	x0, sp, #0xc8
     970:	mov	x1, x20
     974:	bl	0 <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>
     978:	ldr	x8, [x27, #80]
     97c:	ldrb	w9, [x8]
     980:	tbnz	w9, #2, 1c2c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18f0>
     984:	sub	x9, x8, #0x18
     988:	cmp	x8, #0x0
     98c:	csel	x0, xzr, x9, eq  // eq = none
     990:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     994:	mov	x20, x0
     998:	mov	x0, x19
     99c:	mov	w1, wzr
     9a0:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     9a4:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     9a8:	mov	x21, x0
     9ac:	add	x0, sp, #0xc8
     9b0:	mov	w2, #0xffffffff            	// #-1
     9b4:	mov	x1, x21
     9b8:	mov	x3, x20
     9bc:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     9c0:	mov	x22, x0
     9c4:	mov	x0, x19
     9c8:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     9cc:	mov	x23, x0
     9d0:	mov	x0, x19
     9d4:	mov	w1, wzr
     9d8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     9dc:	stur	x0, [x29, #-136]
     9e0:	sub	x1, x29, #0x88
     9e4:	mov	w2, #0x1                   	// #1
     9e8:	mov	x0, x23
     9ec:	mov	w3, wzr
     9f0:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     9f4:	mov	x23, x0
     9f8:	mov	w8, #0x101                 	// #257
     9fc:	mov	w0, #0x48                  	// #72
     a00:	mov	w1, #0x2                   	// #2
     a04:	stur	x21, [x29, #-216]
     a08:	stp	xzr, xzr, [x29, #-136]
     a0c:	sturh	w8, [x29, #-120]
     a10:	bl	0 <_ZN4llvm4UsernwEmj>
     a14:	ldr	x8, [x23, #16]
     a18:	sub	x3, x0, #0x30
     a1c:	mov	w2, #0x38                  	// #56
     a20:	mov	w4, #0x2                   	// #2
     a24:	ldr	x1, [x8]
     a28:	mov	x5, x20
     a2c:	mov	x19, x0
     a30:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
     a34:	sub	x3, x29, #0xd8
     a38:	sub	x7, x29, #0x88
     a3c:	mov	w4, #0x1                   	// #1
     a40:	mov	x0, x19
     a44:	mov	x1, x23
     a48:	mov	x2, x22
     a4c:	mov	x5, xzr
     a50:	mov	x6, xzr
     a54:	str	xzr, [x19, #56]
     a58:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
     a5c:	ldp	x13, x8, [sp, #64]
     a60:	mov	w21, #0x1                   	// #1
     a64:	ldr	x9, [x8, #16]
     a68:	cbz	x9, 1bac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1870>
     a6c:	mov	x8, x13
     a70:	ldr	x10, [x9, #32]
     a74:	add	x11, x9, #0x18
     a78:	add	x12, x9, #0x10
     a7c:	cmp	x10, x27
     a80:	csel	x8, x8, x9, cc  // cc = lo, ul, last
     a84:	csel	x9, x11, x12, cc  // cc = lo, ul, last
     a88:	ldr	x9, [x9]
     a8c:	cbnz	x9, a70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x734>
     a90:	cmp	x8, x13
     a94:	b.eq	1bac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1870>  // b.none
     a98:	ldr	x9, [x8, #32]
     a9c:	cmp	x9, x27
     aa0:	csel	x8, x13, x8, hi  // hi = pmore
     aa4:	cmp	x8, x13
     aa8:	b.eq	1bac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1870>  // b.none
     aac:	ldr	x0, [x8, #40]
     ab0:	ldr	x2, [x25, #64]
     ab4:	mov	x1, x19
     ab8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     abc:	b	738 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x3fc>
     ac0:	mov	w8, #0xa                   	// #10
     ac4:	strb	w8, [x0]
     ac8:	ldr	x8, [x22, #24]
     acc:	add	x8, x8, #0x1
     ad0:	str	x8, [x22, #24]
     ad4:	cmp	x20, #0x1
     ad8:	b.eq	908 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x5cc>  // b.none
     adc:	ldr	x8, [x27, #112]
     ae0:	mov	x0, x27
     ae4:	str	x8, [sp, #200]
     ae8:	bl	0 <_ZNK4llvm8Function10getContextEv>
     aec:	mov	x1, x0
     af0:	add	x0, sp, #0xc8
     af4:	mov	w2, #0xffffffff            	// #-1
     af8:	mov	w4, #0x12                  	// #18
     afc:	mov	x3, x24
     b00:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9StringRefE>
     b04:	str	x0, [x27, #112]
     b08:	add	x0, sp, #0x1b8
     b0c:	bl	0 <_ZN4llvm21PrettyStackTraceEntryC2Ev>
     b10:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b14:	add	x8, x8, #0x0
     b18:	mov	x0, x27
     b1c:	mov	x1, xzr
     b20:	mov	x2, xzr
     b24:	str	x8, [sp, #440]
     b28:	str	x27, [sp, #456]
     b2c:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
     b30:	ldr	x8, [sp, #120]
     b34:	add	x0, sp, #0xc8
     b38:	mov	x1, x27
     b3c:	str	d8, [sp, #216]
     b40:	str	x8, [sp, #208]
     b44:	ldr	x8, [sp, #112]
     b48:	str	d9, [sp, #264]
     b4c:	str	d8, [sp, #296]
     b50:	str	d9, [sp, #344]
     b54:	str	x8, [sp, #256]
     b58:	ldr	x8, [sp, #104]
     b5c:	str	x8, [sp, #288]
     b60:	ldr	x8, [sp, #96]
     b64:	str	x8, [sp, #336]
     b68:	bl	0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>
     b6c:	ldr	x8, [sp, #200]
     b70:	cbz	x8, 17f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14b4>
     b74:	ldr	w8, [sp, #368]
     b78:	str	x27, [sp, #128]
     b7c:	cbnz	w8, 1408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10cc>
     b80:	ldr	w24, [sp, #296]
     b84:	cbz	w24, 1408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10cc>
     b88:	str	x28, [sp, #56]
     b8c:	mov	x28, xzr
     b90:	ldr	x8, [sp, #288]
     b94:	ldr	x27, [x8, x28, lsl #3]
     b98:	cbz	x27, 19ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1670>
     b9c:	ldur	x8, [x27, #-24]
     ba0:	ldrb	w9, [x8, #16]
     ba4:	cmp	w9, #0x0
     ba8:	csel	x8, x8, xzr, eq  // eq = none
     bac:	ldr	w8, [x8, #36]
     bb0:	cmp	w8, #0x23
     bb4:	b.ne	19ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16b0>  // b.any
     bb8:	ldr	x0, [x27, #40]
     bbc:	ldr	x19, [sp, #200]
     bc0:	add	x8, x27, #0x18
     bc4:	ldr	x9, [x0, #48]
     bc8:	cmp	x9, x8
     bcc:	b.eq	bec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8b0>  // b.none
     bd0:	ldr	x8, [x8]
     bd4:	and	x8, x8, #0xfffffffffffffff8
     bd8:	ldrb	w9, [x8]
     bdc:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
     be0:	cbz	x8, bec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8b0>
     be4:	sub	x0, x8, #0x18
     be8:	b	bf8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8bc>
     bec:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     bf0:	cbz	x0, 13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>
     bf4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     bf8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     bfc:	cmp	x0, #0x8
     c00:	b.cc	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.lo, b.ul, b.last
     c04:	ands	x25, x0, #0xfffffffffffffff8
     c08:	b.eq	1a0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d0>  // b.none
     c0c:	ldrb	w8, [x25, #16]
     c10:	sub	w8, w8, #0x1d
     c14:	cmp	w8, #0x33
     c18:	b.hi	196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>  // b.pmore
     c1c:	mov	x9, #0x41                  	// #65
     c20:	lsl	x8, x21, x8
     c24:	movk	x9, #0x8, lsl #48
     c28:	tst	x8, x9
     c2c:	b.eq	196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>  // b.none
     c30:	ldur	x0, [x25, #-24]
     c34:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c38:	cbz	x0, 1a2c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f0>
     c3c:	ldrb	w8, [x0, #16]
     c40:	mov	x26, x0
     c44:	cmp	w8, #0x50
     c48:	b.ne	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.any
     c4c:	ldur	x8, [x26, #-24]
     c50:	cbz	x8, 13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>
     c54:	ldrb	w9, [x8, #16]
     c58:	cbnz	w9, 13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>
     c5c:	ldrb	w9, [x8, #33]
     c60:	tbz	w9, #5, 13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>
     c64:	ldr	w8, [x8, #36]
     c68:	cmp	w8, #0x22
     c6c:	b.ne	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.any
     c70:	mov	x0, x26
     c74:	mov	w1, wzr
     c78:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c7c:	cmp	x0, x19
     c80:	b.ne	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.any
     c84:	mov	x0, x27
     c88:	mov	w1, wzr
     c8c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c90:	cbz	x0, 1a4c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1710>
     c94:	ldrb	w8, [x0, #16]
     c98:	mov	x20, x0
     c9c:	cmp	w8, #0x10
     ca0:	b.eq	cd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x998>  // b.none
     ca4:	cmp	w8, #0x50
     ca8:	b.ne	198c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1650>  // b.any
     cac:	ldur	x8, [x20, #-24]
     cb0:	cbz	x8, 198c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1650>
     cb4:	ldrb	w9, [x8, #16]
     cb8:	cbnz	w9, 198c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1650>
     cbc:	ldrb	w9, [x8, #33]
     cc0:	tbz	w9, #5, 198c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1650>
     cc4:	ldr	w8, [x8, #36]
     cc8:	cmp	w8, #0x20
     ccc:	b.eq	cd8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x99c>  // b.none
     cd0:	b	198c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1650>
     cd4:	mov	x20, xzr
     cd8:	ldp	x8, x22, [x20, #32]
     cdc:	ldr	x19, [x25, #40]
     ce0:	add	x9, x22, #0x28
     ce4:	cmp	x9, x8
     ce8:	b.eq	d0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9d0>  // b.none
     cec:	ldrb	w9, [x8]
     cf0:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
     cf4:	sub	x9, x8, #0x18
     cf8:	cmp	x8, #0x0
     cfc:	csel	x23, xzr, x9, eq  // eq = none
     d00:	cmp	x22, x19
     d04:	b.ne	d18 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9dc>  // b.any
     d08:	b	f7c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc40>
     d0c:	mov	x23, xzr
     d10:	cmp	x22, x19
     d14:	b.eq	f7c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc40>  // b.none
     d18:	cbz	x23, d70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa34>
     d1c:	ldrb	w8, [x23, #16]
     d20:	cmp	w8, #0x50
     d24:	b.ne	d40 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa04>  // b.any
     d28:	ldur	x8, [x23, #-24]
     d2c:	cbz	x8, d40 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa04>
     d30:	ldrb	w9, [x8, #16]
     d34:	cbnz	w9, d40 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa04>
     d38:	ldrb	w8, [x8, #33]
     d3c:	tbnz	w8, #5, d50 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa14>
     d40:	mov	x0, x23
     d44:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d48:	cmp	x0, #0x7
     d4c:	b.hi	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.pmore
     d50:	ldp	x8, x9, [x23, #32]
     d54:	add	x9, x9, #0x28
     d58:	cmp	x9, x8
     d5c:	b.eq	d70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa34>  // b.none
     d60:	ldrb	w9, [x8]
     d64:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
     d68:	sub	x23, x8, #0x18
     d6c:	cbnz	x8, d1c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9e0>
     d70:	mov	x0, x19
     d74:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     d78:	cmp	x0, x25
     d7c:	b.eq	df8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xabc>  // b.none
     d80:	mov	x23, x0
     d84:	b	d94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa58>
     d88:	mov	x23, xzr
     d8c:	cmp	x23, x25
     d90:	b.eq	df8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xabc>  // b.none
     d94:	cbz	x23, 192c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15f0>
     d98:	ldrb	w8, [x23, #16]
     d9c:	cmp	w8, #0x50
     da0:	b.ne	dbc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa80>  // b.any
     da4:	ldur	x8, [x23, #-24]
     da8:	cbz	x8, dbc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa80>
     dac:	ldrb	w9, [x8, #16]
     db0:	cbnz	w9, dbc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa80>
     db4:	ldrb	w8, [x8, #33]
     db8:	tbnz	w8, #5, dcc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa90>
     dbc:	mov	x0, x23
     dc0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     dc4:	cmp	x0, #0x7
     dc8:	b.hi	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.pmore
     dcc:	ldp	x8, x9, [x23, #32]
     dd0:	add	x9, x9, #0x28
     dd4:	cmp	x9, x8
     dd8:	b.eq	d88 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa4c>  // b.none
     ddc:	ldrb	w9, [x8]
     de0:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
     de4:	sub	x9, x8, #0x18
     de8:	cmp	x8, #0x0
     dec:	csel	x23, xzr, x9, eq  // eq = none
     df0:	cmp	x23, x25
     df4:	b.ne	d94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa58>  // b.any
     df8:	ldr	x8, [sp, #80]
     dfc:	sub	x0, x29, #0x88
     e00:	mov	x1, x22
     e04:	stur	d10, [x29, #-112]
     e08:	stp	xzr, x8, [x29, #-136]
     e0c:	stur	x8, [x29, #-120]
     e10:	ldr	x8, [sp, #136]
     e14:	stur	wzr, [x29, #-104]
     e18:	stur	d11, [x29, #-208]
     e1c:	stur	x8, [x29, #-216]
     e20:	sub	x8, x29, #0x100
     e24:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e28:	ldp	w8, w9, [x29, #-208]
     e2c:	cmp	w8, w9
     e30:	b.cs	13b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1078>  // b.hs, b.nlast
     e34:	ldur	x9, [x29, #-216]
     e38:	str	x19, [x9, w8, uxtw #3]
     e3c:	ldp	w8, w10, [x29, #-208]
     e40:	cmp	w8, w10
     e44:	b.cs	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.hs, b.nlast
     e48:	add	x9, x8, #0x1
     e4c:	cmp	x8, x10
     e50:	stur	w9, [x29, #-208]
     e54:	b.hi	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.pmore
     e58:	ldur	x10, [x29, #-216]
     e5c:	sub	x0, x29, #0x88
     e60:	add	x9, x10, x9, lsl #3
     e64:	ldur	x21, [x9, #-8]
     e68:	stur	w8, [x29, #-208]
     e6c:	sub	x8, x29, #0x100
     e70:	mov	x1, x21
     e74:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e78:	mov	x0, x21
     e7c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     e80:	ldr	x23, [x21, #8]
     e84:	cbnz	x23, e94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb58>
     e88:	b	eb8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb7c>
     e8c:	ldr	x23, [x23, #8]
     e90:	cbz	x23, f5c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc20>
     e94:	mov	x0, x23
     e98:	bl	0 <_ZNK4llvm3Use7getUserEv>
     e9c:	cbz	x0, 18cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1590>
     ea0:	ldrb	w8, [x0, #16]
     ea4:	cmp	w8, #0x18
     ea8:	b.cc	e8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb50>  // b.lo, b.ul, b.last
     eac:	sub	w8, w8, #0x19
     eb0:	cmp	w8, #0xb
     eb4:	b.cs	e8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb50>  // b.hs, b.nlast
     eb8:	cbz	x23, f5c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc20>
     ebc:	mov	x0, x23
     ec0:	bl	0 <_ZNK4llvm3Use7getUserEv>
     ec4:	cbz	x0, 18cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1590>
     ec8:	ldrb	w8, [x0, #16]
     ecc:	cmp	w8, #0x18
     ed0:	b.cc	194c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1610>  // b.lo, b.ul, b.last
     ed4:	ldr	x21, [x0, #40]
     ed8:	sub	x0, x29, #0x88
     edc:	mov	x1, x21
     ee0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     ee4:	cbnz	w0, f10 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbd4>
     ee8:	ldp	w8, w9, [x29, #-208]
     eec:	cmp	w8, w9
     ef0:	b.cs	f40 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc04>  // b.hs, b.nlast
     ef4:	ldur	x9, [x29, #-216]
     ef8:	str	x21, [x9, w8, uxtw #3]
     efc:	ldp	w8, w9, [x29, #-208]
     f00:	cmp	w8, w9
     f04:	b.cs	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>  // b.hs, b.nlast
     f08:	add	w8, w8, #0x1
     f0c:	stur	w8, [x29, #-208]
     f10:	ldr	x23, [x23, #8]
     f14:	cbz	x23, f5c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc20>
     f18:	mov	x0, x23
     f1c:	bl	0 <_ZNK4llvm3Use7getUserEv>
     f20:	cbz	x0, 18cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1590>
     f24:	ldrb	w8, [x0, #16]
     f28:	cmp	w8, #0x18
     f2c:	b.cc	f10 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbd4>  // b.lo, b.ul, b.last
     f30:	sub	w8, w8, #0x19
     f34:	cmp	w8, #0xb
     f38:	b.cs	f10 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbd4>  // b.hs, b.nlast
     f3c:	b	ed4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb98>
     f40:	ldr	x1, [sp, #136]
     f44:	sub	x0, x29, #0xd8
     f48:	mov	w3, #0x8                   	// #8
     f4c:	mov	x2, xzr
     f50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f54:	ldur	w8, [x29, #-208]
     f58:	b	ef4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbb8>
     f5c:	ldur	w9, [x29, #-208]
     f60:	cbz	w9, fec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcb0>
     f64:	ldur	w10, [x29, #-204]
     f68:	sub	x8, x9, #0x1
     f6c:	cmp	x8, x10
     f70:	b.ls	e58 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb1c>  // b.plast
     f74:	b	18ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15b0>
     f78:	mov	x23, xzr
     f7c:	cmp	x23, x25
     f80:	b.eq	1280 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf44>  // b.none
     f84:	cbz	x23, 192c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15f0>
     f88:	ldrb	w8, [x23, #16]
     f8c:	cmp	w8, #0x50
     f90:	b.ne	fac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc70>  // b.any
     f94:	ldur	x8, [x23, #-24]
     f98:	cbz	x8, fac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc70>
     f9c:	ldrb	w9, [x8, #16]
     fa0:	cbnz	w9, fac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc70>
     fa4:	ldrb	w8, [x8, #33]
     fa8:	tbnz	w8, #5, fbc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc80>
     fac:	mov	x0, x23
     fb0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     fb4:	cmp	x0, #0x7
     fb8:	b.hi	13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>  // b.pmore
     fbc:	ldp	x8, x9, [x23, #32]
     fc0:	add	x9, x9, #0x28
     fc4:	cmp	x9, x8
     fc8:	b.eq	f78 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc3c>  // b.none
     fcc:	ldrb	w9, [x8]
     fd0:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
     fd4:	sub	x9, x8, #0x18
     fd8:	cmp	x8, #0x0
     fdc:	csel	x23, xzr, x9, eq  // eq = none
     fe0:	cmp	x23, x25
     fe4:	b.ne	f84 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc48>  // b.any
     fe8:	b	1280 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf44>
     fec:	ldp	x9, x8, [x29, #-128]
     ff0:	cmp	x8, x9
     ff4:	b.eq	1028 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcec>  // b.none
     ff8:	sub	x0, x29, #0x88
     ffc:	mov	x1, x22
    1000:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    1004:	ldr	x9, [x0]
    1008:	ldp	x8, x10, [x29, #-128]
    100c:	cmp	x9, x22
    1010:	b.eq	1058 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd1c>  // b.none
    1014:	ldp	w11, w9, [x29, #-112]
    1018:	cmp	x10, x8
    101c:	csel	w11, w9, w11, eq  // eq = none
    1020:	add	x0, x10, w11, uxtw #3
    1024:	b	1068 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd2c>
    1028:	ldur	w9, [x29, #-108]
    102c:	add	x0, x8, w9, uxtw #3
    1030:	cbz	w9, 1064 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd28>
    1034:	mov	x10, xzr
    1038:	lsl	x11, x9, #3
    103c:	ldr	x12, [x8, x10]
    1040:	cmp	x12, x22
    1044:	b.eq	1060 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd24>  // b.none
    1048:	add	x10, x10, #0x8
    104c:	cmp	x11, x10
    1050:	b.ne	103c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd00>  // b.any
    1054:	b	1064 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd28>
    1058:	ldur	w9, [x29, #-108]
    105c:	b	1068 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd2c>
    1060:	add	x0, x8, x10
    1064:	mov	x10, x8
    1068:	ldur	w11, [x29, #-112]
    106c:	cmp	x10, x8
    1070:	csel	w9, w9, w11, eq  // eq = none
    1074:	add	x9, x10, w9, uxtw #3
    1078:	cmp	x0, x9
    107c:	b.eq	10a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd68>  // b.none
    1080:	ldr	x8, [x0]
    1084:	cmp	x8, x22
    1088:	b.ne	1a6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1730>  // b.any
    108c:	mov	x8, #0xfffffffffffffffe    	// #-2
    1090:	str	x8, [x0]
    1094:	ldur	w9, [x29, #-104]
    1098:	ldp	x8, x10, [x29, #-128]
    109c:	add	w9, w9, #0x1
    10a0:	stur	w9, [x29, #-104]
    10a4:	cmp	x10, x8
    10a8:	b.eq	10dc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xda0>  // b.none
    10ac:	sub	x0, x29, #0x88
    10b0:	mov	x1, x19
    10b4:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    10b8:	ldr	x9, [x0]
    10bc:	ldp	x8, x21, [x29, #-128]
    10c0:	cmp	x9, x19
    10c4:	b.eq	110c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdd0>  // b.none
    10c8:	ldp	w10, w9, [x29, #-112]
    10cc:	cmp	x21, x8
    10d0:	csel	w10, w9, w10, eq  // eq = none
    10d4:	add	x0, x21, w10, uxtw #3
    10d8:	b	111c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xde0>
    10dc:	ldur	w9, [x29, #-108]
    10e0:	add	x0, x8, w9, uxtw #3
    10e4:	cbz	w9, 1118 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xddc>
    10e8:	mov	x10, xzr
    10ec:	lsl	x11, x9, #3
    10f0:	ldr	x12, [x8, x10]
    10f4:	cmp	x12, x19
    10f8:	b.eq	1114 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdd8>  // b.none
    10fc:	add	x10, x10, #0x8
    1100:	cmp	x11, x10
    1104:	b.ne	10f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdb4>  // b.any
    1108:	b	1118 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xddc>
    110c:	ldur	w9, [x29, #-108]
    1110:	b	111c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xde0>
    1114:	add	x0, x8, x10
    1118:	mov	x21, x8
    111c:	ldur	w10, [x29, #-112]
    1120:	cmp	x21, x8
    1124:	csel	w11, w9, w10, eq  // eq = none
    1128:	add	x11, x21, w11, uxtw #3
    112c:	cmp	x0, x11
    1130:	b.eq	115c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe20>  // b.none
    1134:	ldr	x8, [x0]
    1138:	cmp	x8, x19
    113c:	b.ne	1a6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1730>  // b.any
    1140:	mov	x8, #0xfffffffffffffffe    	// #-2
    1144:	str	x8, [x0]
    1148:	ldp	w9, w11, [x29, #-108]
    114c:	ldp	x8, x21, [x29, #-128]
    1150:	ldur	w10, [x29, #-112]
    1154:	add	w11, w11, #0x1
    1158:	stur	w11, [x29, #-104]
    115c:	cmp	x21, x8
    1160:	csel	w8, w9, w10, eq  // eq = none
    1164:	add	x22, x21, w8, uxtw #3
    1168:	cbz	w8, 1190 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe54>
    116c:	lsl	x9, x8, #3
    1170:	add	x8, x9, x21
    1174:	ldr	x10, [x21]
    1178:	cmn	x10, #0x2
    117c:	b.cc	1190 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe54>  // b.lo, b.ul, b.last
    1180:	subs	x9, x9, #0x8
    1184:	add	x21, x21, #0x8
    1188:	b.ne	1174 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe38>  // b.any
    118c:	mov	x21, x8
    1190:	cmp	x21, x22
    1194:	b.eq	1248 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf0c>  // b.none
    1198:	ldur	x23, [x29, #-136]
    119c:	cmp	x21, x22
    11a0:	b.cs	1a8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1750>  // b.hs, b.nlast
    11a4:	ldr	x0, [x21]
    11a8:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    11ac:	cbz	x0, 1208 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xecc>
    11b0:	mov	x19, x0
    11b4:	ldrb	w8, [x19, #16]
    11b8:	cmp	w8, #0x50
    11bc:	b.ne	11d8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe9c>  // b.any
    11c0:	ldur	x8, [x19, #-24]
    11c4:	cbz	x8, 11d8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe9c>
    11c8:	ldrb	w9, [x8, #16]
    11cc:	cbnz	w9, 11d8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe9c>
    11d0:	ldrb	w8, [x8, #33]
    11d4:	tbnz	w8, #5, 11e8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xeac>
    11d8:	mov	x0, x19
    11dc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    11e0:	cmp	x0, #0x7
    11e4:	b.hi	1250 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf14>  // b.pmore
    11e8:	ldp	x8, x9, [x19, #32]
    11ec:	add	x9, x9, #0x28
    11f0:	cmp	x9, x8
    11f4:	b.eq	1208 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xecc>  // b.none
    11f8:	ldrb	w9, [x8]
    11fc:	tbnz	w9, #2, 190c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15d0>
    1200:	sub	x19, x8, #0x18
    1204:	cbnz	x8, 11b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe78>
    1208:	ldur	x8, [x29, #-136]
    120c:	cmp	x8, x23
    1210:	b.ne	1aac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1770>  // b.any
    1214:	add	x21, x21, #0x8
    1218:	cmp	x21, x22
    121c:	b.hi	1acc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1790>  // b.pmore
    1220:	b.eq	1248 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf0c>  // b.none
    1224:	ldr	x8, [x21]
    1228:	cmn	x8, #0x2
    122c:	b.cc	1240 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf04>  // b.lo, b.ul, b.last
    1230:	add	x21, x21, #0x8
    1234:	cmp	x22, x21
    1238:	b.ne	1224 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xee8>  // b.any
    123c:	b	1248 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf0c>
    1240:	cmp	x22, x21
    1244:	b.ne	119c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe60>  // b.any
    1248:	mov	w19, wzr
    124c:	b	1254 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf18>
    1250:	mov	w19, #0x1                   	// #1
    1254:	ldur	x0, [x29, #-216]
    1258:	ldr	x8, [sp, #136]
    125c:	mov	w21, #0x1                   	// #1
    1260:	cmp	x0, x8
    1264:	b.eq	126c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf30>  // b.none
    1268:	bl	0 <free>
    126c:	ldp	x8, x0, [x29, #-128]
    1270:	cmp	x0, x8
    1274:	b.eq	127c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf40>  // b.none
    1278:	bl	0 <free>
    127c:	tbnz	w19, #0, 13d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1094>
    1280:	mov	w1, #0x1                   	// #1
    1284:	mov	x0, x26
    1288:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    128c:	cbz	x0, 1aec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17b0>
    1290:	ldrb	w8, [x0, #16]
    1294:	mov	x1, x0
    1298:	cmp	w8, #0xd
    129c:	b.ne	1b0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17d0>  // b.any
    12a0:	mov	x0, x27
    12a4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    12a8:	mov	x0, x27
    12ac:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    12b0:	mov	x0, x20
    12b4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    12b8:	ldrb	w8, [x25, #16]
    12bc:	ldr	x27, [sp, #128]
    12c0:	cmp	w8, #0x1d
    12c4:	b.ne	12f8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfbc>  // b.any
    12c8:	ldur	x19, [x25, #-72]
    12cc:	cbz	x19, 1b2c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17f0>
    12d0:	ldrb	w8, [x19, #16]
    12d4:	cmp	w8, #0x12
    12d8:	b.ne	1b4c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1810>  // b.any
    12dc:	mov	w0, #0x38                  	// #56
    12e0:	mov	w1, #0x1                   	// #1
    12e4:	bl	0 <_ZN4llvm4UsernwEmj>
    12e8:	mov	x1, x19
    12ec:	mov	x2, x25
    12f0:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
    12f4:	ldrb	w8, [x25, #16]
    12f8:	sub	w8, w8, #0x1d
    12fc:	cmp	w8, #0x33
    1300:	b.hi	196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>  // b.pmore
    1304:	mov	x9, #0x41                  	// #65
    1308:	lsl	x8, x21, x8
    130c:	movk	x9, #0x8, lsl #48
    1310:	tst	x8, x9
    1314:	b.eq	196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>  // b.none
    1318:	ldur	x19, [x25, #-24]
    131c:	mov	x0, x25
    1320:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1324:	cmp	x19, x26
    1328:	b.eq	1350 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1014>  // b.none
    132c:	mov	x0, x19
    1330:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1334:	ldr	x8, [x19, #8]
    1338:	cbnz	x8, 1350 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1014>
    133c:	ldrb	w8, [x19, #16]
    1340:	cmp	w8, #0x18
    1344:	b.cc	1350 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1014>  // b.lo, b.ul, b.last
    1348:	mov	x0, x19
    134c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1350:	mov	x0, x26
    1354:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1358:	ldr	x8, [x26, #8]
    135c:	cbnz	x8, 1368 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x102c>
    1360:	mov	x0, x26
    1364:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1368:	sub	x24, x24, #0x1
    136c:	cmp	x24, x28
    1370:	b.eq	13f4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10b8>  // b.none
    1374:	ldr	w8, [sp, #296]
    1378:	cmp	x28, x8
    137c:	b.cs	19cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1690>  // b.hs, b.nlast
    1380:	cmp	x24, x8
    1384:	b.cs	19cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1690>  // b.hs, b.nlast
    1388:	ldr	x8, [sp, #288]
    138c:	lsl	x9, x28, #3
    1390:	lsl	x10, x24, #3
    1394:	ldr	x11, [x8, x10]
    1398:	ldr	x12, [x8, x9]
    139c:	str	x11, [x8, x9]
    13a0:	str	x12, [x8, x10]
    13a4:	ldr	x8, [sp, #288]
    13a8:	ldr	x27, [x8, x9]
    13ac:	cbnz	x27, b9c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x860>
    13b0:	b	19ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1670>
    13b4:	ldr	x1, [sp, #136]
    13b8:	sub	x0, x29, #0xd8
    13bc:	mov	w3, #0x8                   	// #8
    13c0:	mov	x2, xzr
    13c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13c8:	ldur	w8, [x29, #-208]
    13cc:	b	e34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xaf8>
    13d0:	add	x28, x28, #0x1
    13d4:	cmp	x28, x24
    13d8:	b.eq	13ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10b0>  // b.none
    13dc:	ldr	w8, [sp, #296]
    13e0:	cmp	x28, x8
    13e4:	b.cc	b90 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x854>  // b.lo, b.ul, b.last
    13e8:	b	19cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1690>
    13ec:	ldr	x27, [sp, #128]
    13f0:	mov	x28, x24
    13f4:	ldr	x0, [sp, #32]
    13f8:	mov	x1, x28
    13fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1400:	ldp	x25, x26, [sp, #40]
    1404:	ldr	x28, [sp, #56]
    1408:	add	x1, sp, #0xc8
    140c:	mov	x0, x27
    1410:	bl	0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>
    1414:	ldr	w8, [sp, #264]
    1418:	cbz	w8, 14bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1180>
    141c:	ldr	x9, [sp, #256]
    1420:	add	x8, x9, x8, lsl #3
    1424:	ldur	x19, [x8, #-8]
    1428:	mov	x0, x19
    142c:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1430:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1434:	ldr	x22, [sp, #376]
    1438:	mov	x23, x0
    143c:	mov	x1, x22
    1440:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1444:	mov	x20, x0
    1448:	mov	x21, x1
    144c:	mov	x0, x23
    1450:	mov	x1, x22
    1454:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    1458:	cbz	w0, 1bcc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1890>
    145c:	and	w8, w21, #0xff
    1460:	cbnz	w8, 1bec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18b0>
    1464:	mov	w8, w0
    1468:	add	x9, x20, #0x7
    146c:	add	x9, x8, x9, lsr #3
    1470:	ldr	x0, [x19]
    1474:	sub	x9, x9, #0x1
    1478:	udiv	x9, x9, x8
    147c:	mul	x1, x9, x8
    1480:	mov	w2, wzr
    1484:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeEmb>
    1488:	ldr	w8, [sp, #264]
    148c:	cbz	w8, 14bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1180>
    1490:	ldr	x21, [sp, #256]
    1494:	mov	x19, x0
    1498:	lsl	x22, x8, #3
    149c:	ldr	x20, [x21], #8
    14a0:	mov	x1, x19
    14a4:	mov	x0, x20
    14a8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    14ac:	mov	x0, x20
    14b0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    14b4:	subs	x22, x22, #0x8
    14b8:	b.ne	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.any
    14bc:	ldr	w8, [sp, #296]
    14c0:	ldr	x9, [sp, #136]
    14c4:	stur	d8, [x29, #-208]
    14c8:	stur	x9, [x29, #-216]
    14cc:	cbz	w8, 14f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11b4>
    14d0:	add	x1, sp, #0xc8
    14d4:	sub	x2, x29, #0xd8
    14d8:	mov	x0, x27
    14dc:	bl	2040 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE>
    14e0:	adrp	x24, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    14e4:	mov	w21, #0x1                   	// #1
    14e8:	add	x24, x24, #0x0
    14ec:	b	177c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1440>
    14f0:	ldr	x19, [sp, #200]
    14f4:	mov	w1, wzr
    14f8:	mov	x0, x19
    14fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1500:	cbz	x0, 1c4c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1910>
    1504:	ldrb	w8, [x0, #16]
    1508:	adrp	x24, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    150c:	mov	x22, x0
    1510:	add	x24, x24, #0x0
    1514:	cmp	w8, #0x50
    1518:	b.ne	1b8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1850>  // b.any
    151c:	ldur	x8, [x22, #-24]
    1520:	cbz	x8, 1b8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1850>
    1524:	ldrb	w9, [x8, #16]
    1528:	cbnz	w9, 1b8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1850>
    152c:	ldrb	w9, [x8, #33]
    1530:	tbz	w9, #5, 1b8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1850>
    1534:	ldr	w8, [x8, #36]
    1538:	sub	w8, w8, #0x18
    153c:	cmp	w8, #0x3
    1540:	b.cs	1b8c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1850>  // b.hs, b.nlast
    1544:	mov	x0, x22
    1548:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    154c:	ldr	x23, [x22, #8]
    1550:	mov	w21, #0x1                   	// #1
    1554:	cbnz	x23, 158c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1250>
    1558:	mov	x20, xzr
    155c:	ldr	w8, [sp, #368]
    1560:	sub	w9, w8, #0x1
    1564:	cmp	w9, #0x2
    1568:	b.cs	15d0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1294>  // b.hs, b.nlast
    156c:	ldr	x0, [x19]
    1570:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    1574:	mov	x1, x0
    1578:	mov	x0, x19
    157c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1580:	b	1774 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1438>
    1584:	ldr	x23, [x23, #8]
    1588:	cbz	x23, 1558 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x121c>
    158c:	mov	x0, x23
    1590:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1594:	cbz	x0, 1b6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1830>
    1598:	ldrb	w8, [x0, #16]
    159c:	mov	x20, x0
    15a0:	cmp	w8, #0x50
    15a4:	b.ne	1584 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1248>  // b.any
    15a8:	ldur	x8, [x20, #-24]
    15ac:	cbz	x8, 1584 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1248>
    15b0:	ldrb	w9, [x8, #16]
    15b4:	cbnz	w9, 1584 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1248>
    15b8:	ldrb	w9, [x8, #33]
    15bc:	tbz	w9, #5, 1584 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1248>
    15c0:	ldr	w8, [x8, #36]
    15c4:	cmp	w8, #0xe
    15c8:	b.ne	1584 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1248>  // b.any
    15cc:	b	155c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1220>
    15d0:	cbnz	w8, 1774 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1438>
    15d4:	ldur	x8, [x22, #-24]
    15d8:	ldrb	w9, [x8, #16]
    15dc:	cmp	w9, #0x0
    15e0:	csel	x8, x8, xzr, eq  // eq = none
    15e4:	ldr	w8, [x8, #36]
    15e8:	cmp	w8, #0x18
    15ec:	b.ne	1cac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1970>  // b.any
    15f0:	cmp	x20, #0x0
    15f4:	cset	w1, ne  // ne = any
    15f8:	mov	x0, x22
    15fc:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    1600:	cbz	x20, 1710 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x13d4>
    1604:	mov	x0, x20
    1608:	bl	0 <_ZNK4llvm5Value10getContextEv>
    160c:	mov	w8, #0x200                 	// #512
    1610:	sturh	w8, [x29, #-92]
    1614:	ldr	x8, [sp, #8]
    1618:	stur	xzr, [x29, #-136]
    161c:	stp	x0, xzr, [x29, #-112]
    1620:	stur	wzr, [x29, #-96]
    1624:	sturb	wzr, [x29, #-90]
    1628:	stp	xzr, xzr, [x8]
    162c:	ldr	x8, [sp, #16]
    1630:	sub	x0, x29, #0x88
    1634:	mov	x1, x20
    1638:	stp	xzr, xzr, [x8]
    163c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1640:	ldur	x8, [x29, #-128]
    1644:	mov	w27, #0x101                 	// #257
    1648:	stp	xzr, xzr, [x29, #-32]
    164c:	sturh	w27, [x29, #-16]
    1650:	ldr	x8, [x8, #56]
    1654:	ldr	x21, [sp, #376]
    1658:	ldr	x0, [x8, #40]
    165c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1660:	mov	x22, x0
    1664:	mov	w0, #0x40                  	// #64
    1668:	mov	w1, #0x1                   	// #1
    166c:	bl	0 <_ZN4llvm4UsernwEmj>
    1670:	ldr	w2, [x22, #4]
    1674:	sub	x4, x29, #0x100
    1678:	mov	x1, x21
    167c:	mov	x3, xzr
    1680:	mov	x5, xzr
    1684:	mov	x23, x0
    1688:	stp	xzr, xzr, [x29, #-256]
    168c:	sturh	w27, [x29, #-240]
    1690:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    1694:	sub	x0, x29, #0x88
    1698:	sub	x2, x29, #0x20
    169c:	mov	x1, x23
    16a0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    16a4:	ldur	x8, [x29, #-112]
    16a8:	mov	x22, x0
    16ac:	mov	w1, wzr
    16b0:	mov	x0, x8
    16b4:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    16b8:	stp	xzr, xzr, [x29, #-32]
    16bc:	sturh	w27, [x29, #-16]
    16c0:	ldr	x8, [x22]
    16c4:	cmp	x8, x0
    16c8:	b.eq	1734 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x13f8>  // b.none
    16cc:	ldrb	w8, [x22, #16]
    16d0:	mov	x2, x0
    16d4:	cmp	w8, #0x10
    16d8:	b.ls	1720 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x13e4>  // b.plast
    16dc:	mov	w8, #0x101                 	// #257
    16e0:	sub	x3, x29, #0x100
    16e4:	mov	w0, #0x31                  	// #49
    16e8:	mov	x1, x22
    16ec:	mov	x4, xzr
    16f0:	stp	xzr, xzr, [x29, #-256]
    16f4:	sturh	w8, [x29, #-240]
    16f8:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    16fc:	mov	x1, x0
    1700:	sub	x0, x29, #0x88
    1704:	sub	x2, x29, #0x20
    1708:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    170c:	b	1730 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x13f4>
    1710:	mov	w1, #0x1                   	// #1
    1714:	mov	x0, x19
    1718:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    171c:	b	1574 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1238>
    1720:	mov	w0, #0x31                  	// #49
    1724:	mov	x1, x22
    1728:	mov	w3, wzr
    172c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    1730:	mov	x22, x0
    1734:	ldur	x0, [x29, #-112]
    1738:	ldr	x27, [sp, #128]
    173c:	mov	w21, #0x1                   	// #1
    1740:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    1744:	mov	x1, x0
    1748:	mov	x0, x20
    174c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1750:	mov	x0, x20
    1754:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1758:	mov	x0, x19
    175c:	mov	x1, x22
    1760:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1764:	ldur	x1, [x29, #-136]
    1768:	cbz	x1, 1774 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1438>
    176c:	sub	x0, x29, #0x88
    1770:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    1774:	mov	x0, x19
    1778:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    177c:	add	x1, sp, #0xc8
    1780:	mov	x0, x27
    1784:	mov	x2, xzr
    1788:	bl	4348 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    178c:	ldr	w8, [sp, #216]
    1790:	cbz	w8, 17bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1480>
    1794:	ldr	x19, [sp, #208]
    1798:	lsl	x20, x8, #3
    179c:	ldr	x0, [x19], #8
    17a0:	ldr	x2, [sp, #384]
    17a4:	add	x1, sp, #0xc8
    17a8:	mov	w3, wzr
    17ac:	mov	x4, x25
    17b0:	bl	6148 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    17b4:	subs	x20, x20, #0x8
    17b8:	b.ne	179c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1460>  // b.any
    17bc:	mov	x0, x27
    17c0:	bl	46a8 <_ZL16postSplitCleanupRN4llvm8FunctionE>
    17c4:	ldur	x1, [x29, #-216]
    17c8:	ldur	w2, [x29, #-208]
    17cc:	mov	x0, x27
    17d0:	mov	x3, x25
    17d4:	mov	x4, x26
    17d8:	bl	0 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>
    17dc:	ldur	x0, [x29, #-216]
    17e0:	ldr	x8, [sp, #136]
    17e4:	cmp	x0, x8
    17e8:	b.eq	17f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14b4>  // b.none
    17ec:	bl	0 <free>
    17f0:	ldr	x0, [sp, #336]
    17f4:	ldr	x8, [sp, #96]
    17f8:	cmp	x0, x8
    17fc:	b.eq	1804 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14c8>  // b.none
    1800:	bl	0 <free>
    1804:	ldr	x0, [sp, #288]
    1808:	ldr	x8, [sp, #104]
    180c:	cmp	x0, x8
    1810:	b.eq	1818 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14dc>  // b.none
    1814:	bl	0 <free>
    1818:	ldr	x0, [sp, #256]
    181c:	ldr	x8, [sp, #112]
    1820:	cmp	x0, x8
    1824:	b.eq	182c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14f0>  // b.none
    1828:	bl	0 <free>
    182c:	ldr	x0, [sp, #208]
    1830:	ldr	x8, [sp, #120]
    1834:	cmp	x0, x8
    1838:	b.eq	730 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x3f4>  // b.none
    183c:	bl	0 <free>
    1840:	b	730 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x3f4>
    1844:	ldr	x0, [sp, #24]
    1848:	cbz	x0, 1854 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1518>
    184c:	mov	x1, x25
    1850:	bl	1ccc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
    1854:	mov	w19, #0x1                   	// #1
    1858:	b	186c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1530>
    185c:	mov	x0, x27
    1860:	mov	x1, x25
    1864:	bl	1ccc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
    1868:	mov	w19, w0
    186c:	ldr	x0, [sp, #152]
    1870:	add	x8, sp, #0x98
    1874:	add	x8, x8, #0x10
    1878:	cmp	x0, x8
    187c:	b.eq	1884 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1548>  // b.none
    1880:	bl	0 <free>
    1884:	and	w0, w19, #0x1
    1888:	add	sp, sp, #0x2d0
    188c:	ldp	x20, x19, [sp, #112]
    1890:	ldp	x22, x21, [sp, #96]
    1894:	ldp	x24, x23, [sp, #80]
    1898:	ldp	x26, x25, [sp, #64]
    189c:	ldp	x28, x27, [sp, #48]
    18a0:	ldp	x29, x30, [sp, #32]
    18a4:	ldp	d9, d8, [sp, #16]
    18a8:	ldp	d11, d10, [sp], #128
    18ac:	ret
    18b0:	add	x0, sp, #0xc8
    18b4:	mov	w3, #0x8                   	// #8
    18b8:	mov	x1, x22
    18bc:	mov	x2, xzr
    18c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    18c4:	ldr	w8, [sp, #208]
    18c8:	b	64c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x310>
    18cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18d8:	add	x0, x0, #0x0
    18dc:	add	x1, x1, #0x0
    18e0:	add	x3, x3, #0x0
    18e4:	mov	w2, #0x69                  	// #105
    18e8:	bl	0 <__assert_fail>
    18ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18f0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18f4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    18f8:	add	x0, x0, #0x0
    18fc:	add	x1, x1, #0x0
    1900:	add	x3, x3, #0x0
    1904:	mov	w2, #0x43                  	// #67
    1908:	bl	0 <__assert_fail>
    190c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1910:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1914:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1918:	add	x0, x0, #0x0
    191c:	add	x1, x1, #0x0
    1920:	add	x3, x3, #0x0
    1924:	mov	w2, #0x8b                  	// #139
    1928:	bl	0 <__assert_fail>
    192c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1930:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1934:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1938:	add	x0, x0, #0x0
    193c:	add	x1, x1, #0x0
    1940:	add	x3, x3, #0x0
    1944:	mov	w2, #0x69                  	// #105
    1948:	bl	0 <__assert_fail>
    194c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1950:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1954:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1958:	add	x0, x0, #0x0
    195c:	add	x1, x1, #0x0
    1960:	add	x3, x3, #0x0
    1964:	mov	w2, #0x108                 	// #264
    1968:	bl	0 <__assert_fail>
    196c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1970:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1974:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1978:	add	x0, x0, #0x0
    197c:	add	x1, x1, #0x0
    1980:	add	x3, x3, #0x0
    1984:	mov	w2, #0x108                 	// #264
    1988:	bl	0 <__assert_fail>
    198c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1990:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1994:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1998:	add	x0, x0, #0x0
    199c:	add	x1, x1, #0x0
    19a0:	add	x3, x3, #0x0
    19a4:	mov	w2, #0x17c                 	// #380
    19a8:	bl	0 <__assert_fail>
    19ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19b8:	add	x0, x0, #0x0
    19bc:	add	x1, x1, #0x0
    19c0:	add	x3, x3, #0x0
    19c4:	mov	w2, #0x69                  	// #105
    19c8:	bl	0 <__assert_fail>
    19cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19d8:	add	x0, x0, #0x0
    19dc:	add	x1, x1, #0x0
    19e0:	add	x3, x3, #0x0
    19e4:	mov	w2, #0x95                  	// #149
    19e8:	bl	0 <__assert_fail>
    19ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19f0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19f4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19f8:	add	x0, x0, #0x0
    19fc:	add	x1, x1, #0x0
    1a00:	add	x3, x3, #0x0
    1a04:	mov	w2, #0x108                 	// #264
    1a08:	bl	0 <__assert_fail>
    1a0c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a10:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a14:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a18:	add	x0, x0, #0x0
    1a1c:	add	x1, x1, #0x0
    1a20:	add	x3, x3, #0x0
    1a24:	mov	w2, #0x69                  	// #105
    1a28:	bl	0 <__assert_fail>
    1a2c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a30:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a34:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a38:	add	x0, x0, #0x0
    1a3c:	add	x1, x1, #0x0
    1a40:	add	x3, x3, #0x0
    1a44:	mov	w2, #0x69                  	// #105
    1a48:	bl	0 <__assert_fail>
    1a4c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a50:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a54:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a58:	add	x0, x0, #0x0
    1a5c:	add	x1, x1, #0x0
    1a60:	add	x3, x3, #0x0
    1a64:	mov	w2, #0x69                  	// #105
    1a68:	bl	0 <__assert_fail>
    1a6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a70:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a74:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a78:	add	x0, x0, #0x0
    1a7c:	add	x1, x1, #0x0
    1a80:	add	x3, x3, #0x0
    1a84:	mov	w2, #0xa7                  	// #167
    1a88:	bl	0 <__assert_fail>
    1a8c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a90:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a94:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a98:	add	x0, x0, #0x0
    1a9c:	add	x1, x1, #0x0
    1aa0:	add	x3, x3, #0x0
    1aa4:	mov	w2, #0x121                 	// #289
    1aa8:	bl	0 <__assert_fail>
    1aac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ab0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ab4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ab8:	add	x0, x0, #0x0
    1abc:	add	x1, x1, #0x0
    1ac0:	add	x3, x3, #0x0
    1ac4:	mov	w2, #0x126                 	// #294
    1ac8:	bl	0 <__assert_fail>
    1acc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ad0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ad4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ad8:	add	x0, x0, #0x0
    1adc:	add	x1, x1, #0x0
    1ae0:	add	x3, x3, #0x0
    1ae4:	mov	w2, #0xf8                  	// #248
    1ae8:	bl	0 <__assert_fail>
    1aec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1af0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1af4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1af8:	add	x0, x0, #0x0
    1afc:	add	x1, x1, #0x0
    1b00:	add	x3, x3, #0x0
    1b04:	mov	w2, #0x69                  	// #105
    1b08:	bl	0 <__assert_fail>
    1b0c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b10:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b14:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b18:	add	x0, x0, #0x0
    1b1c:	add	x1, x1, #0x0
    1b20:	add	x3, x3, #0x0
    1b24:	mov	w2, #0x108                 	// #264
    1b28:	bl	0 <__assert_fail>
    1b2c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b30:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b34:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b38:	add	x0, x0, #0x0
    1b3c:	add	x1, x1, #0x0
    1b40:	add	x3, x3, #0x0
    1b44:	mov	w2, #0x5b                  	// #91
    1b48:	bl	0 <__assert_fail>
    1b4c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b50:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b54:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b58:	add	x0, x0, #0x0
    1b5c:	add	x1, x1, #0x0
    1b60:	add	x3, x3, #0x0
    1b64:	mov	w2, #0xfa                  	// #250
    1b68:	bl	0 <__assert_fail>
    1b6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b70:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b74:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b78:	add	x0, x0, #0x0
    1b7c:	add	x1, x1, #0x0
    1b80:	add	x3, x3, #0x0
    1b84:	mov	w2, #0x69                  	// #105
    1b88:	bl	0 <__assert_fail>
    1b8c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b90:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b94:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b98:	add	x0, x0, #0x0
    1b9c:	add	x1, x1, #0x0
    1ba0:	add	x3, x3, #0x0
    1ba4:	mov	w2, #0x108                 	// #264
    1ba8:	bl	0 <__assert_fail>
    1bac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bb0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bb4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bb8:	add	x0, x0, #0x0
    1bbc:	add	x1, x1, #0x0
    1bc0:	add	x3, x3, #0x0
    1bc4:	mov	w2, #0x82                  	// #130
    1bc8:	bl	0 <__assert_fail>
    1bcc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bd0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bd4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bd8:	add	x0, x0, #0x0
    1bdc:	add	x1, x1, #0x0
    1be0:	add	x3, x3, #0x0
    1be4:	mov	w2, #0xc7                  	// #199
    1be8:	bl	0 <__assert_fail>
    1bec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bf0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bf4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bf8:	add	x0, x0, #0x0
    1bfc:	add	x1, x1, #0x0
    1c00:	add	x3, x3, #0x0
    1c04:	mov	w2, #0x7d                  	// #125
    1c08:	bl	0 <__assert_fail>
    1c0c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c10:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c14:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c18:	add	x0, x0, #0x0
    1c1c:	add	x1, x1, #0x0
    1c20:	add	x3, x3, #0x0
    1c24:	mov	w2, #0x579                 	// #1401
    1c28:	bl	0 <__assert_fail>
    1c2c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c30:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c34:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c38:	add	x0, x0, #0x0
    1c3c:	add	x1, x1, #0x0
    1c40:	add	x3, x3, #0x0
    1c44:	mov	w2, #0x8b                  	// #139
    1c48:	bl	0 <__assert_fail>
    1c4c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c50:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c54:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c58:	add	x0, x0, #0x0
    1c5c:	add	x1, x1, #0x0
    1c60:	add	x3, x3, #0x0
    1c64:	mov	w2, #0x69                  	// #105
    1c68:	bl	0 <__assert_fail>
    1c6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c70:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c74:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c78:	add	x0, x0, #0x0
    1c7c:	add	x1, x1, #0x0
    1c80:	add	x3, x3, #0x0
    1c84:	mov	w2, #0xeb                  	// #235
    1c88:	bl	0 <__assert_fail>
    1c8c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c90:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c94:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c98:	add	x0, x0, #0x0
    1c9c:	add	x1, x1, #0x0
    1ca0:	add	x3, x3, #0x0
    1ca4:	mov	w2, #0xdd                  	// #221
    1ca8:	bl	0 <__assert_fail>
    1cac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cb0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cb4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cb8:	add	x0, x0, #0x0
    1cbc:	add	x1, x1, #0x0
    1cc0:	add	x3, x3, #0x0
    1cc4:	mov	w2, #0x108                 	// #264
    1cc8:	bl	0 <__assert_fail>

0000000000001ccc <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>:
    1ccc:	sub	sp, sp, #0x80
    1cd0:	stp	x29, x30, [sp, #32]
    1cd4:	stp	x28, x27, [sp, #48]
    1cd8:	stp	x26, x25, [sp, #64]
    1cdc:	stp	x24, x23, [sp, #80]
    1ce0:	stp	x22, x21, [sp, #96]
    1ce4:	stp	x20, x19, [sp, #112]
    1ce8:	add	x29, sp, #0x20
    1cec:	mov	x19, x1
    1cf0:	mov	x20, x0
    1cf4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1cf8:	ldr	x0, [x20, #8]
    1cfc:	cbz	x0, 1f40 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x274>
    1d00:	add	x8, x19, #0x8
    1d04:	mov	x27, #0x41                  	// #65
    1d08:	str	x8, [sp, #16]
    1d0c:	add	x8, x19, #0x10
    1d10:	movk	x27, #0x8, lsl #48
    1d14:	str	x8, [sp, #8]
    1d18:	b	1d24 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x58>
    1d1c:	ldur	x0, [x29, #-8]
    1d20:	cbz	x0, 1f3c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x270>
    1d24:	ldr	x8, [x0, #8]
    1d28:	stur	x8, [x29, #-8]
    1d2c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1d30:	cbz	x0, 1fe0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x314>
    1d34:	ldrb	w8, [x0, #16]
    1d38:	mov	x20, x0
    1d3c:	cmp	w8, #0x50
    1d40:	b.ne	2000 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x334>  // b.any
    1d44:	mov	x0, x20
    1d48:	mov	w1, wzr
    1d4c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d50:	mov	x19, x0
    1d54:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1d58:	cbz	x0, 2020 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x354>
    1d5c:	ldrb	w8, [x0, #16]
    1d60:	mov	x21, x0
    1d64:	cbz	w8, 1d74 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xa8>
    1d68:	mov	x23, xzr
    1d6c:	mov	x22, xzr
    1d70:	b	1e14 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x148>
    1d74:	mov	x0, x20
    1d78:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1d7c:	ldp	x14, x8, [sp, #8]
    1d80:	ldr	x8, [x8, #16]
    1d84:	cbz	x8, 1fc0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f4>
    1d88:	mov	x10, x8
    1d8c:	mov	x9, x14
    1d90:	ldr	x11, [x10, #32]
    1d94:	add	x12, x10, #0x18
    1d98:	add	x13, x10, #0x10
    1d9c:	cmp	x11, x0
    1da0:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    1da4:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    1da8:	ldr	x10, [x10]
    1dac:	cbnz	x10, 1d90 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xc4>
    1db0:	cmp	x9, x14
    1db4:	b.eq	1fc0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f4>  // b.none
    1db8:	ldr	x10, [x9, #32]
    1dbc:	cmp	x10, x0
    1dc0:	csel	x9, x14, x9, hi  // hi = pmore
    1dc4:	cmp	x9, x14
    1dc8:	b.eq	1fc0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f4>  // b.none
    1dcc:	ldr	x22, [x9, #40]
    1dd0:	mov	x9, x14
    1dd4:	ldr	x10, [x8, #32]
    1dd8:	add	x11, x8, #0x18
    1ddc:	add	x12, x8, #0x10
    1de0:	cmp	x10, x21
    1de4:	csel	x9, x9, x8, cc  // cc = lo, ul, last
    1de8:	csel	x8, x11, x12, cc  // cc = lo, ul, last
    1dec:	ldr	x8, [x8]
    1df0:	cbnz	x8, 1dd4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x108>
    1df4:	cmp	x9, x14
    1df8:	b.eq	1fc0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f4>  // b.none
    1dfc:	ldr	x8, [x9, #32]
    1e00:	cmp	x8, x21
    1e04:	csel	x8, x14, x9, hi  // hi = pmore
    1e08:	cmp	x8, x14
    1e0c:	b.eq	1fc0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f4>  // b.none
    1e10:	ldr	x23, [x8, #40]
    1e14:	mov	x0, x20
    1e18:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1e1c:	ldr	x28, [x20, #8]
    1e20:	cbnz	x28, 1e88 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1bc>
    1e24:	mov	x0, x20
    1e28:	mov	x1, x19
    1e2c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1e30:	mov	x0, x20
    1e34:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1e38:	cbz	x19, 1fa0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d4>
    1e3c:	ldrb	w8, [x19, #16]
    1e40:	cmp	w8, #0x49
    1e44:	b.ne	1d1c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x50>  // b.any
    1e48:	mov	x0, x19
    1e4c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1e50:	ldr	x8, [x19, #8]
    1e54:	cbnz	x8, 1d1c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x50>
    1e58:	ldur	x20, [x19, #-24]
    1e5c:	mov	x0, x19
    1e60:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1e64:	mov	x19, x20
    1e68:	cbnz	x20, 1e3c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x170>
    1e6c:	b	1fa0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2d4>
    1e70:	mov	x0, x24
    1e74:	mov	x1, x21
    1e78:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1e7c:	mov	x0, x24
    1e80:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1e84:	cbz	x28, 1e24 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x158>
    1e88:	mov	x0, x28
    1e8c:	ldr	x28, [x28, #8]
    1e90:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1e94:	cbz	x0, 1f80 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2b4>
    1e98:	ldrb	w8, [x0, #16]
    1e9c:	mov	x24, x0
    1ea0:	cmp	w8, #0x49
    1ea4:	b.ne	1e84 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1b8>  // b.any
    1ea8:	ldr	x8, [x24]
    1eac:	ldr	x9, [x21]
    1eb0:	cmp	x8, x9
    1eb4:	b.ne	1e84 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1b8>  // b.any
    1eb8:	cbz	x22, 1e70 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1a4>
    1ebc:	mov	x0, x24
    1ec0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1ec4:	ldr	x25, [x24, #8]
    1ec8:	cbnz	x25, 1ed8 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x20c>
    1ecc:	b	1e70 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1a4>
    1ed0:	ldr	x25, [x25, #8]
    1ed4:	cbz	x25, 1e70 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1a4>
    1ed8:	mov	x0, x25
    1edc:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1ee0:	cbz	x0, 1f60 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x294>
    1ee4:	ldrb	w8, [x0, #16]
    1ee8:	mov	x26, x0
    1eec:	cmp	w8, #0x18
    1ef0:	b.cc	1ed0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x204>  // b.lo, b.ul, b.last
    1ef4:	sub	w8, w8, #0x1d
    1ef8:	cmp	w8, #0x33
    1efc:	b.hi	1ed0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x204>  // b.pmore
    1f00:	mov	w9, #0x1                   	// #1
    1f04:	lsl	x8, x9, x8
    1f08:	tst	x8, x27
    1f0c:	b.eq	1ed0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x204>  // b.none
    1f10:	sub	x8, x26, #0x18
    1f14:	cmp	x25, x8
    1f18:	b.ne	1ed0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x204>  // b.any
    1f1c:	mov	x0, x22
    1f20:	mov	x1, x26
    1f24:	bl	0 <_ZN4llvm13CallGraphNode17removeCallEdgeForERNS_8CallBaseE>
    1f28:	mov	x0, x22
    1f2c:	mov	x1, x26
    1f30:	mov	x2, x23
    1f34:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f38:	b	1ed0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x204>
    1f3c:	mov	w0, #0x1                   	// #1
    1f40:	ldp	x20, x19, [sp, #112]
    1f44:	ldp	x22, x21, [sp, #96]
    1f48:	ldp	x24, x23, [sp, #80]
    1f4c:	ldp	x26, x25, [sp, #64]
    1f50:	ldp	x28, x27, [sp, #48]
    1f54:	ldp	x29, x30, [sp, #32]
    1f58:	add	sp, sp, #0x80
    1f5c:	ret
    1f60:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f64:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f68:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f6c:	add	x0, x0, #0x0
    1f70:	add	x1, x1, #0x0
    1f74:	add	x3, x3, #0x0
    1f78:	mov	w2, #0x69                  	// #105
    1f7c:	bl	0 <__assert_fail>
    1f80:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f84:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f88:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1f8c:	add	x0, x0, #0x0
    1f90:	add	x1, x1, #0x0
    1f94:	add	x3, x3, #0x0
    1f98:	mov	w2, #0x69                  	// #105
    1f9c:	bl	0 <__assert_fail>
    1fa0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fa4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fa8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fac:	add	x0, x0, #0x0
    1fb0:	add	x1, x1, #0x0
    1fb4:	add	x3, x3, #0x0
    1fb8:	mov	w2, #0x69                  	// #105
    1fbc:	bl	0 <__assert_fail>
    1fc0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fc4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fc8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fcc:	add	x0, x0, #0x0
    1fd0:	add	x1, x1, #0x0
    1fd4:	add	x3, x3, #0x0
    1fd8:	mov	w2, #0x82                  	// #130
    1fdc:	bl	0 <__assert_fail>
    1fe0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fe4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fe8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1fec:	add	x0, x0, #0x0
    1ff0:	add	x1, x1, #0x0
    1ff4:	add	x3, x3, #0x0
    1ff8:	mov	w2, #0x69                  	// #105
    1ffc:	bl	0 <__assert_fail>
    2000:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2004:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2008:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    200c:	add	x0, x0, #0x0
    2010:	add	x1, x1, #0x0
    2014:	add	x3, x3, #0x0
    2018:	mov	w2, #0x108                 	// #264
    201c:	bl	0 <__assert_fail>
    2020:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2024:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2028:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    202c:	add	x0, x0, #0x0
    2030:	add	x1, x1, #0x0
    2034:	add	x3, x3, #0x0
    2038:	mov	w2, #0x69                  	// #105
    203c:	bl	0 <__assert_fail>

0000000000002040 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE>:
    2040:	str	d8, [sp, #-112]!
    2044:	stp	x29, x30, [sp, #16]
    2048:	stp	x28, x27, [sp, #32]
    204c:	stp	x26, x25, [sp, #48]
    2050:	stp	x24, x23, [sp, #64]
    2054:	stp	x22, x21, [sp, #80]
    2058:	stp	x20, x19, [sp, #96]
    205c:	mov	x29, sp
    2060:	sub	sp, sp, #0x190
    2064:	ldr	w8, [x1, #168]
    2068:	mov	x19, x1
    206c:	stp	x2, x0, [sp, #64]
    2070:	sub	w9, w8, #0x1
    2074:	cmp	w9, #0x2
    2078:	b.cs	212c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xec>  // b.hs, b.nlast
    207c:	ldr	w8, [x2, #8]
    2080:	cbnz	w8, 41e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21a8>
    2084:	ldr	x20, [sp, #72]
    2088:	mov	w1, #0xffffffff            	// #-1
    208c:	mov	w2, #0x1f                  	// #31
    2090:	mov	x0, x20
    2094:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    2098:	mov	w2, #0x15                  	// #21
    209c:	mov	x0, x20
    20a0:	mov	w1, wzr
    20a4:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    20a8:	mov	w2, #0x23                  	// #35
    20ac:	mov	x0, x20
    20b0:	mov	w1, wzr
    20b4:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    20b8:	ldr	x0, [x19]
    20bc:	mov	w1, wzr
    20c0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20c4:	cbz	x0, 4208 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21c8>
    20c8:	ldrb	w8, [x0, #16]
    20cc:	mov	x23, x0
    20d0:	cmp	w8, #0x50
    20d4:	b.ne	4110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d0>  // b.any
    20d8:	ldur	x8, [x23, #-24]
    20dc:	cbz	x8, 4110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d0>
    20e0:	ldrb	w9, [x8, #16]
    20e4:	cbnz	w9, 4110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d0>
    20e8:	ldrb	w9, [x8, #33]
    20ec:	tbz	w9, #5, 4110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d0>
    20f0:	ldr	w8, [x8, #36]
    20f4:	sub	w9, w8, #0x18
    20f8:	cmp	w9, #0x3
    20fc:	b.cs	4110 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d0>  // b.hs, b.nlast
    2100:	ldr	x20, [sp, #64]
    2104:	sub	w8, w8, #0x19
    2108:	cmp	w8, #0x2
    210c:	b.cs	4228 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21e8>  // b.hs, b.nlast
    2110:	ldrb	w8, [x19, #232]
    2114:	cbz	w8, 2810 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x7d0>
    2118:	mov	w1, #0x2                   	// #2
    211c:	mov	x0, x23
    2120:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2124:	mov	x22, x0
    2128:	b	2a18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x9d8>
    212c:	cbnz	w8, 41d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2190>
    2130:	ldr	x20, [sp, #72]
    2134:	mov	x0, x20
    2138:	bl	0 <_ZNK4llvm8Function10getContextEv>
    213c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2140:	mov	x22, x0
    2144:	add	x8, x8, #0x0
    2148:	mov	w24, #0x103                 	// #259
    214c:	mov	w0, #0x40                  	// #64
    2150:	stp	x8, xzr, [sp, #80]
    2154:	strh	w24, [sp, #96]
    2158:	bl	0 <_Znwm>
    215c:	add	x2, sp, #0x50
    2160:	mov	x1, x22
    2164:	mov	x3, x20
    2168:	mov	x4, xzr
    216c:	mov	x21, x0
    2170:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    2174:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2178:	add	x8, x8, #0x0
    217c:	mov	w0, #0x40                  	// #64
    2180:	stp	x8, xzr, [sp, #80]
    2184:	strh	w24, [sp, #96]
    2188:	bl	0 <_Znwm>
    218c:	add	x2, sp, #0x50
    2190:	mov	x1, x22
    2194:	mov	x3, x20
    2198:	mov	x4, xzr
    219c:	mov	x25, x0
    21a0:	str	x22, [sp, #56]
    21a4:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    21a8:	mov	x0, x21
    21ac:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    21b0:	mov	w8, #0x200                 	// #512
    21b4:	add	x9, x21, #0x28
    21b8:	stp	x0, xzr, [sp, #104]
    21bc:	str	wzr, [sp, #120]
    21c0:	strb	wzr, [sp, #126]
    21c4:	stp	xzr, xzr, [sp, #128]
    21c8:	stp	xzr, x21, [sp, #80]
    21cc:	strh	w8, [sp, #124]
    21d0:	str	x9, [sp, #96]
    21d4:	ldp	x1, x2, [x19, #176]
    21d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    21dc:	add	x8, x8, #0x0
    21e0:	add	x0, sp, #0x50
    21e4:	sub	x5, x29, #0x50
    21e8:	mov	w4, #0x3                   	// #3
    21ec:	mov	w3, wzr
    21f0:	stp	x8, xzr, [x29, #-80]
    21f4:	sturh	w24, [x29, #-64]
    21f8:	stp	x21, x1, [sp, #32]
    21fc:	str	x2, [sp, #48]
    2200:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2204:	mov	x20, x0
    2208:	mov	x0, x19
    220c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2210:	mov	x22, x0
    2214:	mov	w0, #0x40                  	// #64
    2218:	mov	w1, #0x1                   	// #1
    221c:	bl	0 <_ZN4llvm4UsernwEmj>
    2220:	mov	w21, #0x101                 	// #257
    2224:	sub	x3, x29, #0x50
    2228:	mov	x1, x22
    222c:	mov	x2, x20
    2230:	mov	x4, xzr
    2234:	mov	x23, x0
    2238:	stp	xzr, xzr, [x29, #-80]
    223c:	sturh	w21, [x29, #-64]
    2240:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    2244:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2248:	add	x8, x8, #0x0
    224c:	add	x0, sp, #0x50
    2250:	sub	x2, x29, #0x20
    2254:	mov	x1, x23
    2258:	stp	x8, xzr, [x29, #-32]
    225c:	sturh	w24, [x29, #-16]
    2260:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2264:	ldr	w20, [x19, #96]
    2268:	mov	x22, x0
    226c:	mov	w0, #0x40                  	// #64
    2270:	bl	0 <_ZN4llvm4UsernwEm>
    2274:	mov	x1, x22
    2278:	mov	x2, x25
    227c:	mov	w3, w20
    2280:	mov	x4, xzr
    2284:	mov	x23, x0
    2288:	str	x25, [sp, #24]
    228c:	bl	0 <_ZN4llvm10SwitchInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
    2290:	add	x0, sp, #0x50
    2294:	sub	x2, x29, #0x50
    2298:	mov	x1, x23
    229c:	stp	xzr, xzr, [x29, #-80]
    22a0:	sturh	w21, [x29, #-64]
    22a4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22a8:	str	x0, [x19, #200]
    22ac:	stur	xzr, [x29, #-104]
    22b0:	ldr	w8, [x19, #96]
    22b4:	cbz	w8, 26c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x684>
    22b8:	ldr	x26, [x19, #88]
    22bc:	mov	x27, x0
    22c0:	mov	x20, xzr
    22c4:	lsl	x21, x8, #3
    22c8:	ldr	x28, [x26]
    22cc:	cbz	x28, 3fb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f70>
    22d0:	ldur	x8, [x28, #-24]
    22d4:	ldrb	w9, [x8, #16]
    22d8:	cmp	w9, #0x0
    22dc:	csel	x8, x8, xzr, eq  // eq = none
    22e0:	ldr	w8, [x8, #36]
    22e4:	cmp	w8, #0x23
    22e8:	b.ne	3fd0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f90>  // b.any
    22ec:	mov	x0, x19
    22f0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22f4:	mov	x1, x20
    22f8:	mov	w2, wzr
    22fc:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    2300:	mov	x24, x0
    2304:	mov	x0, x28
    2308:	mov	w1, wzr
    230c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2310:	cbz	x0, 3ff0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fb0>
    2314:	ldrb	w8, [x0, #16]
    2318:	mov	x22, x0
    231c:	cmp	w8, #0x10
    2320:	b.eq	2354 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x314>  // b.none
    2324:	cmp	w8, #0x50
    2328:	b.ne	3d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cf8>  // b.any
    232c:	ldur	x8, [x22, #-24]
    2330:	cbz	x8, 3d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cf8>
    2334:	ldrb	w9, [x8, #16]
    2338:	cbnz	w9, 3d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cf8>
    233c:	ldrb	w9, [x8, #33]
    2340:	tbz	w9, #5, 3d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cf8>
    2344:	ldr	w8, [x8, #36]
    2348:	cmp	w8, #0x20
    234c:	b.eq	2358 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x318>  // b.none
    2350:	b	3d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cf8>
    2354:	mov	x22, xzr
    2358:	add	x0, sp, #0x50
    235c:	mov	x1, x22
    2360:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2364:	mov	w1, #0x1                   	// #1
    2368:	mov	x0, x28
    236c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2370:	cbz	x0, 4010 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fd0>
    2374:	ldrb	w8, [x0, #16]
    2378:	cmp	w8, #0x11
    237c:	b.cs	4030 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ff0>  // b.hs, b.nlast
    2380:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    2384:	tbz	w0, #0, 2428 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x3e8>
    2388:	ldp	x1, x2, [sp, #40]
    238c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2390:	add	x8, x8, #0x0
    2394:	stp	x8, xzr, [x29, #-80]
    2398:	mov	w8, #0x103                 	// #259
    239c:	add	x0, sp, #0x50
    23a0:	sub	x5, x29, #0x50
    23a4:	mov	w3, wzr
    23a8:	mov	w4, wzr
    23ac:	sturh	w8, [x29, #-64]
    23b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    23b4:	ldr	x8, [x0]
    23b8:	cbz	x8, 3f30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef0>
    23bc:	ldrb	w9, [x8, #8]
    23c0:	cmp	w9, #0xf
    23c4:	b.ne	3f50 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f10>  // b.any
    23c8:	mov	x20, x0
    23cc:	ldr	x0, [x8, #24]
    23d0:	cbz	x0, 3f30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef0>
    23d4:	ldrb	w8, [x0, #8]
    23d8:	cmp	w8, #0xf
    23dc:	b.ne	3f50 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f10>  // b.any
    23e0:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    23e4:	mov	x23, x0
    23e8:	mov	w0, #0x40                  	// #64
    23ec:	mov	w1, #0x2                   	// #2
    23f0:	bl	0 <_ZN4llvm4UsernwEmj>
    23f4:	mov	x1, x23
    23f8:	mov	x2, x20
    23fc:	mov	w3, wzr
    2400:	mov	x4, xzr
    2404:	mov	x25, x0
    2408:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    240c:	mov	w8, #0x101                 	// #257
    2410:	stp	xzr, xzr, [x29, #-80]
    2414:	sturh	w8, [x29, #-64]
    2418:	add	x0, sp, #0x50
    241c:	sub	x2, x29, #0x50
    2420:	mov	x1, x25
    2424:	b	2494 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x454>
    2428:	ldp	x1, x2, [sp, #40]
    242c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2430:	add	x8, x8, #0x0
    2434:	stp	x8, xzr, [x29, #-80]
    2438:	mov	w8, #0x103                 	// #259
    243c:	add	x0, sp, #0x50
    2440:	sub	x5, x29, #0x50
    2444:	mov	w4, #0x3                   	// #3
    2448:	mov	w3, wzr
    244c:	sturh	w8, [x29, #-64]
    2450:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2454:	mov	x20, x0
    2458:	mov	w0, #0x40                  	// #64
    245c:	mov	w1, #0x2                   	// #2
    2460:	bl	0 <_ZN4llvm4UsernwEmj>
    2464:	mov	x1, x24
    2468:	mov	x2, x20
    246c:	mov	w3, wzr
    2470:	mov	x4, xzr
    2474:	mov	x23, x0
    2478:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    247c:	mov	w8, #0x101                 	// #257
    2480:	add	x0, sp, #0x50
    2484:	sub	x2, x29, #0x50
    2488:	mov	x1, x23
    248c:	stp	xzr, xzr, [x29, #-80]
    2490:	sturh	w8, [x29, #-64]
    2494:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2498:	ldr	x0, [sp, #56]
    249c:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
    24a0:	mov	x1, x0
    24a4:	mov	x0, x22
    24a8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    24ac:	mov	x0, x22
    24b0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    24b4:	ldr	x22, [x28, #40]
    24b8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24bc:	add	x8, x8, #0x0
    24c0:	stur	x8, [x29, #-80]
    24c4:	sub	x8, x29, #0x68
    24c8:	stur	x8, [x29, #-72]
    24cc:	mov	w8, #0xb03                 	// #2819
    24d0:	add	x1, x28, #0x18
    24d4:	sub	x2, x29, #0x50
    24d8:	mov	x0, x22
    24dc:	sturh	w8, [x29, #-64]
    24e0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    24e4:	ldp	x8, x9, [x28, #32]
    24e8:	mov	x23, x0
    24ec:	add	x9, x9, #0x28
    24f0:	cmp	x9, x8
    24f4:	b.eq	2510 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x4d0>  // b.none
    24f8:	ldrb	w9, [x8]
    24fc:	tbnz	w9, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    2500:	sub	x9, x8, #0x18
    2504:	cmp	x8, #0x0
    2508:	csel	x20, xzr, x9, eq  // eq = none
    250c:	b	2514 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x4d4>
    2510:	mov	x20, xzr
    2514:	mov	x0, x23
    2518:	bl	0 <_ZNK4llvm5Value7getNameEv>
    251c:	sub	x8, x29, #0x20
    2520:	stur	x8, [x29, #-80]
    2524:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2528:	add	x8, x8, #0x0
    252c:	stp	x0, x1, [x29, #-32]
    2530:	stur	x8, [x29, #-72]
    2534:	mov	w8, #0x305                 	// #773
    2538:	add	x1, x20, #0x18
    253c:	sub	x2, x29, #0x50
    2540:	mov	x0, x23
    2544:	sturh	w8, [x29, #-64]
    2548:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    254c:	mov	x20, x0
    2550:	mov	x0, x27
    2554:	mov	x1, x24
    2558:	mov	x2, x23
    255c:	bl	0 <_ZN4llvm10SwitchInst7addCaseEPNS_11ConstantIntEPNS_10BasicBlockE>
    2560:	mov	x0, x22
    2564:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    2568:	cbz	x0, 3d58 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d18>
    256c:	ldrb	w8, [x0, #16]
    2570:	cmp	w8, #0x1a
    2574:	b.ne	3d78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d38>  // b.any
    2578:	ldr	x8, [x0, #-24]!
    257c:	cbz	x8, 25a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x564>
    2580:	ldp	x9, x8, [x0, #8]
    2584:	and	x8, x8, #0xfffffffffffffffc
    2588:	str	x9, [x8]
    258c:	ldr	x9, [x0, #8]
    2590:	cbz	x9, 25a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x564>
    2594:	ldr	x10, [x9, #16]
    2598:	and	x10, x10, #0x3
    259c:	orr	x8, x10, x8
    25a0:	str	x8, [x9, #16]
    25a4:	str	x20, [x0]
    25a8:	cbz	x20, 25f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x5b4>
    25ac:	mov	x8, x20
    25b0:	ldr	x9, [x8, #8]!
    25b4:	mov	x10, x0
    25b8:	str	x9, [x10, #8]!
    25bc:	cbz	x9, 25d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x598>
    25c0:	tst	x10, #0x3
    25c4:	b.ne	3d98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d58>  // b.any
    25c8:	ldr	x11, [x9, #16]
    25cc:	and	x11, x11, #0x3
    25d0:	orr	x10, x11, x10
    25d4:	str	x10, [x9, #16]
    25d8:	tst	x8, #0x3
    25dc:	b.ne	3d98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d58>  // b.any
    25e0:	ldr	x9, [x0, #16]
    25e4:	and	x9, x9, #0x3
    25e8:	orr	x9, x9, x8
    25ec:	str	x9, [x0, #16]
    25f0:	str	x0, [x8]
    25f4:	ldr	x0, [sp, #104]
    25f8:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    25fc:	mov	w8, #0x101                 	// #257
    2600:	stp	xzr, xzr, [x29, #-80]
    2604:	sturh	w8, [x29, #-64]
    2608:	ldr	x8, [x20, #48]
    260c:	ldrb	w9, [x8]
    2610:	tbnz	w9, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    2614:	mov	x20, x0
    2618:	sub	x9, x8, #0x18
    261c:	cmp	x8, #0x0
    2620:	mov	w0, #0x40                  	// #64
    2624:	csel	x24, xzr, x9, eq  // eq = none
    2628:	bl	0 <_ZN4llvm4UsernwEm>
    262c:	mov	w2, #0x37                  	// #55
    2630:	mov	x1, x20
    2634:	mov	x3, xzr
    2638:	mov	w4, wzr
    263c:	mov	x5, x24
    2640:	mov	x25, x0
    2644:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
    2648:	mov	w8, #0x2                   	// #2
    264c:	sub	x1, x29, #0x50
    2650:	mov	x0, x25
    2654:	str	w8, [x25, #56]
    2658:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    265c:	ldr	w1, [x25, #56]
    2660:	mov	w2, #0x1                   	// #1
    2664:	mov	x0, x25
    2668:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
    266c:	mov	x0, x28
    2670:	mov	x1, x25
    2674:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2678:	ldr	x0, [sp, #104]
    267c:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    2680:	mov	w1, #0xff                  	// #255
    2684:	mov	w2, wzr
    2688:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    268c:	mov	x1, x0
    2690:	mov	x0, x25
    2694:	mov	x2, x22
    2698:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    269c:	mov	x0, x25
    26a0:	mov	x1, x28
    26a4:	mov	x2, x23
    26a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    26ac:	ldur	x8, [x29, #-104]
    26b0:	subs	x21, x21, #0x8
    26b4:	add	x26, x26, #0x8
    26b8:	add	x20, x8, #0x1
    26bc:	stur	x20, [x29, #-104]
    26c0:	b.ne	22c8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x288>  // b.any
    26c4:	ldr	x9, [sp, #24]
    26c8:	mov	w0, #0x38                  	// #56
    26cc:	mov	w1, wzr
    26d0:	add	x8, x9, #0x28
    26d4:	stp	x9, x8, [sp, #88]
    26d8:	bl	0 <_ZN4llvm4UsernwEmj>
    26dc:	ldr	x1, [sp, #104]
    26e0:	mov	x2, xzr
    26e4:	mov	x20, x0
    26e8:	bl	0 <_ZN4llvm15UnreachableInstC1ERNS_11LLVMContextEPNS_11InstructionE>
    26ec:	mov	w8, #0x101                 	// #257
    26f0:	add	x0, sp, #0x50
    26f4:	sub	x2, x29, #0x50
    26f8:	mov	x1, x20
    26fc:	stp	xzr, xzr, [x29, #-80]
    2700:	sturh	w8, [x29, #-64]
    2704:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2708:	ldr	x8, [sp, #32]
    270c:	str	x8, [x19, #216]
    2710:	ldr	x1, [sp, #80]
    2714:	cbz	x1, 2720 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x6e0>
    2718:	add	x0, sp, #0x50
    271c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2720:	ldr	x21, [sp, #72]
    2724:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2728:	add	x8, x8, #0x0
    272c:	mov	w20, #0x103                 	// #259
    2730:	add	x1, sp, #0x50
    2734:	mov	x0, x21
    2738:	mov	x2, x19
    273c:	mov	w3, wzr
    2740:	stp	x8, xzr, [sp, #80]
    2744:	strh	w20, [sp, #96]
    2748:	bl	48a0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    274c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2750:	mov	x22, x0
    2754:	add	x8, x8, #0x0
    2758:	add	x1, sp, #0x50
    275c:	mov	w3, #0x1                   	// #1
    2760:	mov	x0, x21
    2764:	mov	x2, x19
    2768:	stp	x8, xzr, [sp, #80]
    276c:	strh	w20, [sp, #96]
    2770:	bl	48a0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    2774:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2778:	mov	x28, x0
    277c:	add	x8, x8, #0x0
    2780:	add	x1, sp, #0x50
    2784:	mov	w3, #0x2                   	// #2
    2788:	mov	x0, x21
    278c:	mov	x2, x19
    2790:	stp	x8, xzr, [sp, #80]
    2794:	strh	w20, [sp, #96]
    2798:	add	x20, sp, #0x50
    279c:	bl	48a0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    27a0:	mov	x27, x0
    27a4:	mov	x0, x22
    27a8:	bl	46a8 <_ZL16postSplitCleanupRN4llvm8FunctionE>
    27ac:	mov	x0, x28
    27b0:	bl	46a8 <_ZL16postSplitCleanupRN4llvm8FunctionE>
    27b4:	mov	x0, x27
    27b8:	bl	46a8 <_ZL16postSplitCleanupRN4llvm8FunctionE>
    27bc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    27c0:	ldr	d8, [x8]
    27c4:	add	x25, x20, #0x10
    27c8:	sub	x0, x29, #0x50
    27cc:	mov	x1, x22
    27d0:	str	x25, [sp, #80]
    27d4:	str	d8, [sp, #88]
    27d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    27dc:	ldur	x20, [x29, #-80]
    27e0:	str	x22, [sp, #48]
    27e4:	add	x21, x22, #0x48
    27e8:	ldp	x22, x23, [x29, #-72]
    27ec:	cmp	x20, x21
    27f0:	cset	w8, ne  // ne = any
    27f4:	cmp	x23, #0x0
    27f8:	cset	w9, ne  // ne = any
    27fc:	cmp	x21, x22
    2800:	b.ne	3348 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1308>  // b.any
    2804:	and	w8, w8, w9
    2808:	cbz	w8, 3444 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1404>
    280c:	b	3348 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1308>
    2810:	mov	x0, x23
    2814:	bl	0 <_ZNK4llvm5Value10getContextEv>
    2818:	stp	x0, xzr, [sp, #104]
    281c:	mov	w8, #0x200                 	// #512
    2820:	add	x0, sp, #0x50
    2824:	mov	x1, x23
    2828:	str	wzr, [sp, #120]
    282c:	strb	wzr, [sp, #126]
    2830:	stp	xzr, xzr, [sp, #88]
    2834:	str	xzr, [sp, #80]
    2838:	strh	w8, [sp, #124]
    283c:	stp	xzr, xzr, [sp, #128]
    2840:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2844:	ldr	x8, [sp, #72]
    2848:	ldr	x0, [x8, #40]
    284c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    2850:	ldr	x24, [x19, #176]
    2854:	mov	x25, x0
    2858:	mov	x1, x24
    285c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2860:	mov	x20, x0
    2864:	mov	x22, x1
    2868:	mov	x0, x25
    286c:	mov	x1, x24
    2870:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    2874:	cbz	w0, 4308 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22c8>
    2878:	and	w8, w22, #0xff
    287c:	cbnz	w8, 4328 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22e8>
    2880:	mov	w8, w0
    2884:	add	x9, x20, #0x7
    2888:	ldr	x0, [sp, #104]
    288c:	add	x9, x8, x9, lsr #3
    2890:	sub	x9, x9, #0x1
    2894:	udiv	x9, x9, x8
    2898:	mul	x20, x9, x8
    289c:	bl	0 <_ZN4llvm4Type10getInt64TyERNS_11LLVMContextE>
    28a0:	mov	x1, x20
    28a4:	mov	w2, wzr
    28a8:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    28ac:	mov	x2, x0
    28b0:	add	x1, sp, #0x50
    28b4:	mov	x0, x19
    28b8:	mov	x3, xzr
    28bc:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    28c0:	ldr	x8, [x19]
    28c4:	mov	w21, #0x101                 	// #257
    28c8:	mov	x22, x0
    28cc:	ldr	x2, [x8]
    28d0:	stp	xzr, xzr, [x29, #-32]
    28d4:	sturh	w21, [x29, #-16]
    28d8:	ldr	x8, [x0]
    28dc:	cmp	x8, x2
    28e0:	b.eq	2938 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x8f8>  // b.none
    28e4:	ldrb	w8, [x22, #16]
    28e8:	cmp	w8, #0x10
    28ec:	b.ls	2924 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x8e4>  // b.plast
    28f0:	mov	w8, #0x101                 	// #257
    28f4:	sub	x3, x29, #0x50
    28f8:	mov	w0, #0x31                  	// #49
    28fc:	mov	x1, x22
    2900:	mov	x4, xzr
    2904:	stp	xzr, xzr, [x29, #-80]
    2908:	sturh	w8, [x29, #-64]
    290c:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2910:	mov	x1, x0
    2914:	add	x0, sp, #0x50
    2918:	sub	x2, x29, #0x20
    291c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2920:	b	2934 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x8f4>
    2924:	mov	w0, #0x31                  	// #49
    2928:	mov	x1, x22
    292c:	mov	w3, wzr
    2930:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    2934:	mov	x22, x0
    2938:	mov	w1, #0x2                   	// #2
    293c:	mov	x0, x23
    2940:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2944:	ldr	x8, [x22]
    2948:	mov	x20, x0
    294c:	mov	w1, wzr
    2950:	mov	x0, x8
    2954:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2958:	stp	xzr, xzr, [x29, #-32]
    295c:	sturh	w21, [x29, #-16]
    2960:	ldr	x8, [x20]
    2964:	cmp	x8, x0
    2968:	b.eq	29c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x984>  // b.none
    296c:	ldrb	w8, [x20, #16]
    2970:	mov	x2, x0
    2974:	cmp	w8, #0x10
    2978:	b.ls	29b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x970>  // b.plast
    297c:	mov	w8, #0x101                 	// #257
    2980:	sub	x3, x29, #0x50
    2984:	mov	w0, #0x31                  	// #49
    2988:	mov	x1, x20
    298c:	mov	x4, xzr
    2990:	stp	xzr, xzr, [x29, #-80]
    2994:	sturh	w8, [x29, #-64]
    2998:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    299c:	mov	x1, x0
    29a0:	add	x0, sp, #0x50
    29a4:	sub	x2, x29, #0x20
    29a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29ac:	b	29c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x980>
    29b0:	mov	w0, #0x31                  	// #49
    29b4:	mov	x1, x20
    29b8:	mov	w3, wzr
    29bc:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    29c0:	mov	x20, x0
    29c4:	mov	w0, #0x40                  	// #64
    29c8:	mov	w1, #0x2                   	// #2
    29cc:	bl	0 <_ZN4llvm4UsernwEmj>
    29d0:	mov	x1, x22
    29d4:	mov	x2, x20
    29d8:	mov	w3, wzr
    29dc:	mov	x4, xzr
    29e0:	mov	x23, x0
    29e4:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    29e8:	mov	w8, #0x101                 	// #257
    29ec:	add	x0, sp, #0x50
    29f0:	sub	x2, x29, #0x50
    29f4:	mov	x1, x23
    29f8:	stp	xzr, xzr, [x29, #-80]
    29fc:	sturh	w8, [x29, #-64]
    2a00:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2a04:	ldr	x1, [sp, #80]
    2a08:	cbz	x1, 2a14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x9d4>
    2a0c:	add	x0, sp, #0x50
    2a10:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2a14:	ldr	x20, [sp, #64]
    2a18:	ldr	x8, [x19, #184]
    2a1c:	mov	w9, #0x6                   	// #6
    2a20:	stp	xzr, xzr, [sp, #88]
    2a24:	str	x9, [sp, #80]
    2a28:	cbz	x8, 2a44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa04>
    2a2c:	orr	x9, x8, #0x8
    2a30:	cmn	x9, #0x8
    2a34:	str	x8, [sp, #96]
    2a38:	b.eq	2a44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa04>  // b.none
    2a3c:	add	x0, sp, #0x50
    2a40:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    2a44:	ldr	x0, [x19]
    2a48:	mov	x1, x22
    2a4c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2a50:	ldr	x8, [sp, #96]
    2a54:	add	x9, x8, #0x10
    2a58:	cmp	x9, #0x10
    2a5c:	b.hi	2a78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa38>  // b.pmore
    2a60:	mov	w10, #0x1                   	// #1
    2a64:	lsl	x9, x10, x9
    2a68:	mov	w10, #0x101                 	// #257
    2a6c:	movk	w10, #0x1, lsl #16
    2a70:	tst	x9, x10
    2a74:	b.ne	4190 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2150>  // b.any
    2a78:	ldrb	w9, [x8, #16]
    2a7c:	cmp	w9, #0x17
    2a80:	b.ls	4248 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2208>  // b.plast
    2a84:	orr	x9, x8, #0x8
    2a88:	cmn	x9, #0x8
    2a8c:	str	x8, [x19, #184]
    2a90:	b.eq	2a9c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa5c>  // b.none
    2a94:	add	x0, sp, #0x50
    2a98:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    2a9c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2aa0:	ldr	d0, [x8]
    2aa4:	sub	x8, x29, #0x50
    2aa8:	ldr	x9, [sp, #72]
    2aac:	add	x21, x8, #0x10
    2ab0:	stur	x21, [x29, #-80]
    2ab4:	stur	d0, [x29, #-72]
    2ab8:	ldr	w2, [x19, #96]
    2abc:	ldr	w8, [x20, #12]
    2ac0:	ldr	x9, [x9, #64]
    2ac4:	cmp	w8, w2
    2ac8:	str	x9, [sp, #56]
    2acc:	b.cs	2ae4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xaa4>  // b.hs, b.nlast
    2ad0:	add	x1, x20, #0x10
    2ad4:	mov	w3, #0x8                   	// #8
    2ad8:	mov	x0, x20
    2adc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ae0:	ldr	w2, [x19, #96]
    2ae4:	str	xzr, [x29, #8]
    2ae8:	cbz	w2, 30c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1084>
    2aec:	mov	w9, w2
    2af0:	str	x9, [sp, #48]
    2af4:	add	x9, x20, #0x10
    2af8:	stp	x9, x21, [sp, #24]
    2afc:	add	x9, sp, #0x50
    2b00:	mov	x8, xzr
    2b04:	mov	x25, xzr
    2b08:	mov	w21, #0x101                 	// #257
    2b0c:	add	x9, x9, #0x30
    2b10:	str	x9, [sp, #40]
    2b14:	cmp	x8, w2, uxtw
    2b18:	b.cs	3d18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cd8>  // b.hs, b.nlast
    2b1c:	ldr	x9, [x19, #88]
    2b20:	ldr	x26, [x9, x8, lsl #3]
    2b24:	cbz	x26, 3e58 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e18>
    2b28:	ldur	x8, [x26, #-24]
    2b2c:	ldrb	w9, [x8, #16]
    2b30:	cmp	w9, #0x0
    2b34:	csel	x8, x8, xzr, eq  // eq = none
    2b38:	ldr	w8, [x8, #36]
    2b3c:	cmp	w8, #0x24
    2b40:	b.ne	3e78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e38>  // b.any
    2b44:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b48:	ldr	x0, [sp, #72]
    2b4c:	ldr	x3, [sp, #56]
    2b50:	add	x8, x8, #0x0
    2b54:	str	x8, [sp, #80]
    2b58:	add	x8, x29, #0x8
    2b5c:	str	x8, [sp, #88]
    2b60:	mov	w8, #0xb03                 	// #2819
    2b64:	add	x2, sp, #0x50
    2b68:	mov	x1, x19
    2b6c:	strh	w8, [sp, #96]
    2b70:	bl	5f98 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>
    2b74:	ldp	w8, w9, [x20, #8]
    2b78:	mov	x28, x0
    2b7c:	cmp	w8, w9
    2b80:	b.cs	308c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x104c>  // b.hs, b.nlast
    2b84:	ldr	x9, [x20]
    2b88:	str	x28, [x9, w8, uxtw #3]
    2b8c:	ldp	w8, w9, [x20, #8]
    2b90:	cmp	w8, w9
    2b94:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    2b98:	add	w8, w8, #0x1
    2b9c:	str	w8, [x20, #8]
    2ba0:	ldr	x27, [x26, #40]
    2ba4:	add	x1, x26, #0x18
    2ba8:	add	x2, sp, #0x50
    2bac:	stp	xzr, xzr, [sp, #80]
    2bb0:	mov	x0, x27
    2bb4:	strh	w21, [sp, #96]
    2bb8:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    2bbc:	mov	x20, x0
    2bc0:	mov	x0, x27
    2bc4:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    2bc8:	cbz	x0, 3d58 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d18>
    2bcc:	ldrb	w8, [x0, #16]
    2bd0:	mov	x24, x0
    2bd4:	cmp	w8, #0x1a
    2bd8:	b.ne	3d78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d38>  // b.any
    2bdc:	cbnz	x25, 2efc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xebc>
    2be0:	ldr	x23, [sp, #72]
    2be4:	mov	x0, x23
    2be8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    2bec:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2bf0:	add	x8, x8, #0x0
    2bf4:	mov	x22, x0
    2bf8:	stp	x8, xzr, [sp, #80]
    2bfc:	mov	w8, #0x103                 	// #259
    2c00:	mov	w0, #0x40                  	// #64
    2c04:	strh	w8, [sp, #96]
    2c08:	bl	0 <_Znwm>
    2c0c:	add	x2, sp, #0x50
    2c10:	mov	x1, x22
    2c14:	mov	x3, x23
    2c18:	mov	x4, x20
    2c1c:	mov	x25, x0
    2c20:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    2c24:	mov	x0, x25
    2c28:	str	x25, [x19, #224]
    2c2c:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    2c30:	mov	w8, #0x200                 	// #512
    2c34:	ldr	x9, [sp, #40]
    2c38:	strh	w8, [sp, #124]
    2c3c:	ldur	w8, [x29, #-72]
    2c40:	stp	xzr, x25, [sp, #80]
    2c44:	stp	x0, xzr, [sp, #104]
    2c48:	str	wzr, [sp, #120]
    2c4c:	strb	wzr, [sp, #126]
    2c50:	stp	xzr, xzr, [x9]
    2c54:	add	x9, x25, #0x28
    2c58:	str	x9, [sp, #96]
    2c5c:	cbnz	w8, 4090 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2050>
    2c60:	ldr	x1, [x28]
    2c64:	cbz	x1, 3f30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef0>
    2c68:	ldrb	w8, [x1, #8]
    2c6c:	cmp	w8, #0xf
    2c70:	b.ne	3f50 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f10>  // b.any
    2c74:	ldr	w2, [x19, #96]
    2c78:	add	x0, sp, #0x50
    2c7c:	sub	x3, x29, #0x20
    2c80:	stp	xzr, xzr, [x29, #-32]
    2c84:	sturh	w21, [x29, #-16]
    2c88:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c8c:	ldp	w8, w9, [x29, #-72]
    2c90:	mov	x20, x0
    2c94:	cmp	w8, w9
    2c98:	b.cs	30a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1068>  // b.hs, b.nlast
    2c9c:	ldur	x9, [x29, #-80]
    2ca0:	str	x20, [x9, w8, uxtw #3]
    2ca4:	ldp	w8, w9, [x29, #-72]
    2ca8:	cmp	w8, w9
    2cac:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    2cb0:	add	w8, w8, #0x1
    2cb4:	mov	x0, x19
    2cb8:	stur	w8, [x29, #-72]
    2cbc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2cc0:	cbz	x1, 2d40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xd00>
    2cc4:	mov	x20, x0
    2cc8:	lsl	x23, x1, #3
    2ccc:	ldr	x1, [x20]
    2cd0:	ldr	w2, [x19, #96]
    2cd4:	add	x0, sp, #0x50
    2cd8:	sub	x3, x29, #0x20
    2cdc:	stp	xzr, xzr, [x29, #-32]
    2ce0:	sturh	w21, [x29, #-16]
    2ce4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ce8:	ldp	w8, w9, [x29, #-72]
    2cec:	mov	x22, x0
    2cf0:	cmp	w8, w9
    2cf4:	b.cs	2d24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xce4>  // b.hs, b.nlast
    2cf8:	ldur	x9, [x29, #-80]
    2cfc:	str	x22, [x9, w8, uxtw #3]
    2d00:	ldp	w8, w9, [x29, #-72]
    2d04:	cmp	w8, w9
    2d08:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    2d0c:	add	w8, w8, #0x1
    2d10:	subs	x23, x23, #0x8
    2d14:	add	x20, x20, #0x8
    2d18:	stur	w8, [x29, #-72]
    2d1c:	b.ne	2ccc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xc8c>  // b.any
    2d20:	b	2d40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xd00>
    2d24:	ldr	x1, [sp, #32]
    2d28:	sub	x0, x29, #0x50
    2d2c:	mov	w3, #0x8                   	// #8
    2d30:	mov	x2, xzr
    2d34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2d38:	ldur	w8, [x29, #-72]
    2d3c:	b	2cf8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xcb8>
    2d40:	ldr	x8, [sp, #72]
    2d44:	ldr	x8, [x8, #24]
    2d48:	cbz	x8, 40b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2070>
    2d4c:	ldrb	w9, [x8, #8]
    2d50:	cmp	w9, #0xc
    2d54:	b.ne	40d0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2090>  // b.any
    2d58:	ldr	x9, [x8, #16]
    2d5c:	ldur	w8, [x29, #-72]
    2d60:	ldr	x20, [x9]
    2d64:	cmp	w8, #0x1
    2d68:	mov	x2, x20
    2d6c:	b.eq	2d94 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xd54>  // b.none
    2d70:	cbz	x20, 4130 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20f0>
    2d74:	ldrb	w9, [x20, #8]
    2d78:	cmp	w9, #0xd
    2d7c:	b.ne	4150 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2110>  // b.any
    2d80:	ldr	w9, [x20, #12]
    2d84:	cbz	w9, 4170 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2130>
    2d88:	cbz	w8, 3c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>
    2d8c:	ldr	x8, [x20, #16]
    2d90:	ldr	x2, [x8]
    2d94:	ldur	x8, [x29, #-80]
    2d98:	ldr	x22, [x8]
    2d9c:	stp	xzr, xzr, [x29, #-104]
    2da0:	sturh	w21, [x29, #-88]
    2da4:	ldr	x8, [x22]
    2da8:	cmp	x8, x2
    2dac:	b.eq	2e00 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xdc0>  // b.none
    2db0:	ldrb	w8, [x22, #16]
    2db4:	cmp	w8, #0x10
    2db8:	b.ls	2dec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xdac>  // b.plast
    2dbc:	sub	x3, x29, #0x20
    2dc0:	mov	w0, #0x31                  	// #49
    2dc4:	mov	x1, x22
    2dc8:	mov	x4, xzr
    2dcc:	stp	xzr, xzr, [x29, #-32]
    2dd0:	sturh	w21, [x29, #-16]
    2dd4:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2dd8:	mov	x1, x0
    2ddc:	add	x0, sp, #0x50
    2de0:	sub	x2, x29, #0x68
    2de4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2de8:	b	2dfc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xdbc>
    2dec:	mov	w0, #0x31                  	// #49
    2df0:	mov	x1, x22
    2df4:	mov	w3, wzr
    2df8:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    2dfc:	mov	x22, x0
    2e00:	ldur	w8, [x29, #-72]
    2e04:	cmp	w8, #0x1
    2e08:	b.eq	2eac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe6c>  // b.none
    2e0c:	mov	x0, x20
    2e10:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    2e14:	mov	x1, x0
    2e18:	add	x0, sp, #0x50
    2e1c:	sub	x3, x29, #0x68
    2e20:	sub	x5, x29, #0x20
    2e24:	mov	w4, #0x1                   	// #1
    2e28:	mov	x2, x22
    2e2c:	stur	wzr, [x29, #-104]
    2e30:	stp	xzr, xzr, [x29, #-32]
    2e34:	sturh	w21, [x29, #-16]
    2e38:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e3c:	ldur	w8, [x29, #-72]
    2e40:	mov	x22, x0
    2e44:	cmp	w8, #0x1
    2e48:	b.eq	2eac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe6c>  // b.none
    2e4c:	cbz	w8, 3c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>
    2e50:	mov	w9, #0x2                   	// #2
    2e54:	sub	x20, x9, x8
    2e58:	mov	w23, #0x1                   	// #1
    2e5c:	ldur	x8, [x29, #-80]
    2e60:	add	x0, sp, #0x50
    2e64:	sub	x3, x29, #0x68
    2e68:	sub	x5, x29, #0x20
    2e6c:	ldr	x2, [x8, x23, lsl #3]
    2e70:	mov	w4, #0x1                   	// #1
    2e74:	mov	x1, x22
    2e78:	stur	w23, [x29, #-104]
    2e7c:	stp	xzr, xzr, [x29, #-32]
    2e80:	sturh	w21, [x29, #-16]
    2e84:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2e88:	add	x8, x20, x23
    2e8c:	cmp	x8, #0x1
    2e90:	mov	x22, x0
    2e94:	b.eq	2eac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe6c>  // b.none
    2e98:	ldur	w8, [x29, #-72]
    2e9c:	add	x23, x23, #0x1
    2ea0:	cmp	x23, x8
    2ea4:	b.cc	2e5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe1c>  // b.lo, b.ul, b.last
    2ea8:	b	3c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>
    2eac:	ldr	x20, [sp, #104]
    2eb0:	cmp	x22, #0x0
    2eb4:	cset	w1, ne  // ne = any
    2eb8:	mov	w0, #0x38                  	// #56
    2ebc:	bl	0 <_ZN4llvm4UsernwEmj>
    2ec0:	mov	x1, x20
    2ec4:	mov	x2, x22
    2ec8:	mov	x3, xzr
    2ecc:	mov	x23, x0
    2ed0:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    2ed4:	add	x0, sp, #0x50
    2ed8:	sub	x2, x29, #0x20
    2edc:	mov	x1, x23
    2ee0:	stp	xzr, xzr, [x29, #-32]
    2ee4:	sturh	w21, [x29, #-16]
    2ee8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2eec:	ldr	x1, [sp, #80]
    2ef0:	cbz	x1, 2efc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xebc>
    2ef4:	add	x0, sp, #0x50
    2ef8:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2efc:	ldr	x8, [x24, #-24]!
    2f00:	cbz	x8, 2f28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xee8>
    2f04:	ldp	x9, x8, [x24, #8]
    2f08:	and	x8, x8, #0xfffffffffffffffc
    2f0c:	str	x9, [x8]
    2f10:	ldr	x9, [x24, #8]
    2f14:	cbz	x9, 2f28 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xee8>
    2f18:	ldr	x10, [x9, #16]
    2f1c:	and	x10, x10, #0x3
    2f20:	orr	x8, x10, x8
    2f24:	str	x8, [x9, #16]
    2f28:	str	x25, [x24]
    2f2c:	cbz	x25, 2f78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf38>
    2f30:	mov	x8, x25
    2f34:	ldr	x9, [x8, #8]!
    2f38:	mov	x10, x24
    2f3c:	str	x9, [x10, #8]!
    2f40:	cbz	x9, 2f5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf1c>
    2f44:	tst	x10, #0x3
    2f48:	b.ne	3d98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d58>  // b.any
    2f4c:	ldr	x11, [x9, #16]
    2f50:	and	x11, x11, #0x3
    2f54:	orr	x10, x11, x10
    2f58:	str	x10, [x9, #16]
    2f5c:	tst	x8, #0x3
    2f60:	b.ne	3d98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d58>  // b.any
    2f64:	ldr	x9, [x24, #16]
    2f68:	and	x9, x9, #0x3
    2f6c:	orr	x9, x9, x8
    2f70:	str	x9, [x24, #16]
    2f74:	str	x24, [x8]
    2f78:	ldur	w8, [x29, #-72]
    2f7c:	cbz	w8, 3c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>
    2f80:	ldur	x8, [x29, #-80]
    2f84:	mov	x1, x28
    2f88:	mov	x2, x27
    2f8c:	ldr	x0, [x8]
    2f90:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f94:	ldrb	w8, [x26, #16]
    2f98:	ldr	w20, [x26, #20]
    2f9c:	cmp	w8, #0x50
    2fa0:	b.eq	2fd4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf94>  // b.none
    2fa4:	cmp	w8, #0x23
    2fa8:	mov	w28, #0x18                  	// #24
    2fac:	b.eq	2fc0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf80>  // b.none
    2fb0:	cmp	w8, #0x1d
    2fb4:	b.ne	3e98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e58>  // b.any
    2fb8:	mov	x22, #0xfffffffffffffffe    	// #-2
    2fbc:	b	2fdc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf9c>
    2fc0:	mov	x0, x26
    2fc4:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    2fc8:	mov	x8, xzr
    2fcc:	sub	x22, x8, w0, uxtw
    2fd0:	b	2fdc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf9c>
    2fd4:	mov	x22, xzr
    2fd8:	mov	w28, #0x18                  	// #24
    2fdc:	and	x23, x20, #0xfffffff
    2fe0:	mneg	x8, x23, x28
    2fe4:	mov	x0, x26
    2fe8:	add	x20, x26, x8
    2fec:	madd	x24, x22, x28, x26
    2ff0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ff4:	mov	w8, w0
    2ff8:	mneg	x9, x8, x28
    2ffc:	add	x9, x24, x9
    3000:	sub	x9, x9, #0x18
    3004:	cmp	x20, x9
    3008:	b.eq	3058 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1018>  // b.none
    300c:	mul	x8, x8, x28
    3010:	add	x9, x22, x23
    3014:	neg	x8, x8
    3018:	madd	x8, x9, x28, x8
    301c:	sub	x22, x8, #0x18
    3020:	mov	w8, #0x1                   	// #1
    3024:	ldur	w9, [x29, #-72]
    3028:	cmp	x8, x9
    302c:	b.cs	3c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>  // b.hs, b.nlast
    3030:	ldur	x9, [x29, #-80]
    3034:	mov	x2, x27
    3038:	add	x23, x8, #0x1
    303c:	ldr	x0, [x9, x8, lsl #3]
    3040:	ldr	x1, [x20], #24
    3044:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3048:	subs	x22, x22, #0x18
    304c:	mov	x8, x23
    3050:	b.ne	3024 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xfe4>  // b.any
    3054:	b	305c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x101c>
    3058:	mov	w23, #0x1                   	// #1
    305c:	ldur	w8, [x29, #-72]
    3060:	cmp	x23, x8
    3064:	b.ne	3eb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e70>  // b.any
    3068:	ldr	x8, [x29, #8]
    306c:	ldr	x9, [sp, #48]
    3070:	ldr	x20, [sp, #64]
    3074:	add	x8, x8, #0x1
    3078:	str	x8, [x29, #8]
    307c:	ldr	w2, [x19, #96]
    3080:	cmp	x8, x9
    3084:	b.ne	2b14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xad4>  // b.any
    3088:	b	30c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1084>
    308c:	ldr	x1, [sp, #24]
    3090:	mov	w3, #0x8                   	// #8
    3094:	mov	x0, x20
    3098:	mov	x2, xzr
    309c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30a0:	ldr	w8, [x20, #8]
    30a4:	b	2b84 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xb44>
    30a8:	ldr	x1, [sp, #32]
    30ac:	sub	x0, x29, #0x50
    30b0:	mov	w3, #0x8                   	// #8
    30b4:	mov	x2, xzr
    30b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30bc:	ldur	w8, [x29, #-72]
    30c0:	b	2c9c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xc5c>
    30c4:	ldr	w8, [x20, #8]
    30c8:	cmp	w8, w2
    30cc:	b.ne	4268 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2228>  // b.any
    30d0:	mov	w8, w2
    30d4:	stur	xzr, [x29, #-104]
    30d8:	str	x8, [sp, #56]
    30dc:	cbz	w8, 3320 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x12e0>
    30e0:	ldr	x9, [x19, #88]
    30e4:	ldr	x21, [sp, #72]
    30e8:	add	x10, sp, #0x50
    30ec:	mov	w28, #0x101                 	// #257
    30f0:	mov	x8, xzr
    30f4:	add	x22, x10, #0x28
    30f8:	add	x25, x10, #0xa8
    30fc:	add	x11, x10, #0x78
    3100:	add	x26, x10, #0x80
    3104:	add	x27, x10, #0xc0
    3108:	mov	w24, #0x1                   	// #1
    310c:	movk	w28, #0x1, lsl #16
    3110:	str	x11, [sp, #48]
    3114:	ldr	x10, [x20]
    3118:	ldr	x20, [x9]
    311c:	mov	w0, #0x2000                	// #8192
    3120:	ldr	x23, [x10, x8, lsl #3]
    3124:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3128:	add	x8, x8, #0x0
    312c:	stur	x8, [x29, #-32]
    3130:	sub	x8, x29, #0x68
    3134:	stur	x8, [x29, #-24]
    3138:	mov	w8, #0xb03                 	// #2819
    313c:	sturh	w8, [x29, #-16]
    3140:	sub	x8, x29, #0x20
    3144:	stp	x8, x19, [sp, #96]
    3148:	mov	w8, #0x3                   	// #3
    314c:	str	w8, [sp, #112]
    3150:	mov	w8, #0x80                  	// #128
    3154:	str	xzr, [sp, #120]
    3158:	stp	x21, x23, [sp, #80]
    315c:	str	w8, [sp, #144]
    3160:	bl	0 <_Znwm>
    3164:	str	x0, [sp, #128]
    3168:	mov	x0, x22
    316c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3170:	mov	x0, x21
    3174:	strb	wzr, [sp, #152]
    3178:	strb	wzr, [sp, #184]
    317c:	bl	0 <_ZNK4llvm8Function10getContextEv>
    3180:	mov	w8, #0x200                 	// #512
    3184:	str	xzr, [sp, #200]
    3188:	stp	x0, xzr, [sp, #224]
    318c:	str	wzr, [sp, #240]
    3190:	strh	w8, [sp, #244]
    3194:	strb	wzr, [sp, #246]
    3198:	stp	xzr, xzr, [x26]
    319c:	stp	xzr, xzr, [x25]
    31a0:	stp	xzr, xzr, [x27]
    31a4:	str	x20, [sp, #288]
    31a8:	ldr	w8, [x19, #168]
    31ac:	sub	w8, w8, #0x1
    31b0:	cmp	w8, #0x2
    31b4:	b.cs	3ed0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e90>  // b.hs, b.nlast
    31b8:	cbz	x23, 3ef0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1eb0>
    31bc:	cbz	x20, 3f10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed0>
    31c0:	add	x0, sp, #0x50
    31c4:	bl	4ab0 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    31c8:	ldr	x1, [sp, #200]
    31cc:	cbz	x1, 31d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1198>
    31d0:	ldr	x0, [sp, #48]
    31d4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    31d8:	ldrb	w8, [sp, #184]
    31dc:	cbz	w8, 3240 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1200>
    31e0:	ldr	w8, [sp, #176]
    31e4:	cbz	w8, 3228 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11e8>
    31e8:	ldr	x9, [sp, #160]
    31ec:	lsl	x23, x8, #4
    31f0:	add	x20, x9, #0x8
    31f4:	b	3204 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11c4>
    31f8:	subs	x23, x23, #0x10
    31fc:	add	x20, x20, #0x10
    3200:	b.eq	3228 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11e8>  // b.none
    3204:	ldur	x8, [x20, #-8]
    3208:	orr	x8, x8, #0x4
    320c:	cmn	x8, #0x4
    3210:	b.eq	31f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11b8>  // b.none
    3214:	ldr	x1, [x20]
    3218:	cbz	x1, 31f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11b8>
    321c:	mov	x0, x20
    3220:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3224:	b	31f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11b8>
    3228:	ldr	x0, [sp, #160]
    322c:	bl	0 <_ZdlPv>
    3230:	ldr	x8, [sp, #152]
    3234:	strb	wzr, [sp, #184]
    3238:	add	x8, x8, #0x1
    323c:	str	x8, [sp, #152]
    3240:	ldr	w8, [sp, #144]
    3244:	cbz	w8, 32c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1280>
    3248:	ldr	x9, [sp, #128]
    324c:	lsl	x23, x8, #6
    3250:	add	x20, x9, #0x28
    3254:	b	326c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x122c>
    3258:	sub	x0, x20, #0x20
    325c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    3260:	subs	x23, x23, #0x40
    3264:	add	x20, x20, #0x40
    3268:	b.eq	32c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1280>  // b.none
    326c:	ldur	x8, [x20, #-16]
    3270:	orr	x9, x8, #0x8
    3274:	cmn	x9, #0x8
    3278:	b.eq	32a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1264>  // b.none
    327c:	ldr	x9, [x20, #16]
    3280:	add	x9, x9, #0x10
    3284:	cmp	x9, #0x10
    3288:	b.hi	3298 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1258>  // b.pmore
    328c:	lsl	x9, x24, x9
    3290:	tst	x9, x28
    3294:	b.ne	32a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1264>  // b.any
    3298:	mov	x0, x20
    329c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    32a0:	ldur	x8, [x20, #-16]
    32a4:	add	x8, x8, #0x10
    32a8:	cmp	x8, #0x10
    32ac:	b.hi	3258 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1218>  // b.pmore
    32b0:	lsl	x8, x24, x8
    32b4:	tst	x8, x28
    32b8:	b.ne	3260 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1220>  // b.any
    32bc:	b	3258 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1218>
    32c0:	ldr	x0, [sp, #128]
    32c4:	bl	0 <_ZdlPv>
    32c8:	ldur	x8, [x29, #-104]
    32cc:	ldp	x9, x20, [sp, #56]
    32d0:	add	x8, x8, #0x1
    32d4:	cmp	x8, x9
    32d8:	stur	x8, [x29, #-104]
    32dc:	b.eq	3320 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x12e0>  // b.none
    32e0:	ldr	w9, [x19, #96]
    32e4:	cmp	x8, x9
    32e8:	b.cs	3d18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cd8>  // b.hs, b.nlast
    32ec:	ldr	w9, [x20, #8]
    32f0:	ldr	x10, [x19, #88]
    32f4:	cmp	x8, x9
    32f8:	add	x9, x10, x8, lsl #3
    32fc:	b.cc	3114 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x10d4>  // b.lo, b.ul, b.last
    3300:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3304:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3308:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    330c:	add	x0, x0, #0x0
    3310:	add	x1, x1, #0x0
    3314:	add	x3, x3, #0x0
    3318:	mov	w2, #0x95                  	// #149
    331c:	bl	0 <__assert_fail>
    3320:	ldur	x0, [x29, #-80]
    3324:	sub	x8, x29, #0x50
    3328:	b	3bf0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1bb0>
    332c:	add	x0, sp, #0x50
    3330:	mov	w3, #0x8                   	// #8
    3334:	mov	x1, x25
    3338:	mov	x2, xzr
    333c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3340:	ldr	w8, [sp, #88]
    3344:	b	33bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x137c>
    3348:	ldrb	w8, [x23]
    334c:	tbnz	w8, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    3350:	sub	x8, x23, #0x18
    3354:	cmp	x23, #0x0
    3358:	csel	x8, xzr, x8, eq  // eq = none
    335c:	cbz	x23, 4070 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2030>
    3360:	ldrb	w9, [x8, #16]
    3364:	cmp	w9, #0x50
    3368:	csel	x24, x8, xzr, eq  // eq = none
    336c:	cbz	x24, 33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>
    3370:	ldur	x0, [x24, #-24]
    3374:	cbz	x0, 33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>
    3378:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    337c:	cbz	x0, 41b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2170>
    3380:	ldrb	w8, [x0, #16]
    3384:	cmp	w8, #0x50
    3388:	b.ne	33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>  // b.any
    338c:	ldur	x8, [x0, #-24]
    3390:	cbz	x8, 33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>
    3394:	ldrb	w9, [x8, #16]
    3398:	cbnz	w9, 33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>
    339c:	ldrb	w9, [x8, #33]
    33a0:	tbz	w9, #5, 33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>
    33a4:	ldr	w8, [x8, #36]
    33a8:	cmp	w8, #0x22
    33ac:	b.ne	33d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1398>  // b.any
    33b0:	ldp	w8, w9, [sp, #88]
    33b4:	cmp	w8, w9
    33b8:	b.cs	332c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x12ec>  // b.hs, b.nlast
    33bc:	ldr	x9, [sp, #80]
    33c0:	str	x24, [x9, w8, uxtw #3]
    33c4:	ldp	w8, w9, [sp, #88]
    33c8:	cmp	w8, w9
    33cc:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    33d0:	add	w8, w8, #0x1
    33d4:	str	w8, [sp, #88]
    33d8:	ldrb	w8, [x22]
    33dc:	tbnz	w8, #2, 3cf8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cb8>
    33e0:	ldr	x23, [x23, #8]
    33e4:	sub	x8, x22, #0x18
    33e8:	cmp	x22, #0x0
    33ec:	csel	x8, xzr, x8, eq  // eq = none
    33f0:	add	x8, x8, #0x28
    33f4:	cmp	x8, x23
    33f8:	b.ne	3424 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13e4>  // b.any
    33fc:	ldr	x22, [x22, #8]
    3400:	cmp	x20, x22
    3404:	b.eq	3424 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13e4>  // b.none
    3408:	ldrb	w8, [x22]
    340c:	tbnz	w8, #2, 3cf8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cb8>
    3410:	sub	x8, x22, #0x18
    3414:	cmp	x22, #0x0
    3418:	csel	x8, xzr, x8, eq  // eq = none
    341c:	ldr	x23, [x8, #48]
    3420:	b	33f0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13b0>
    3424:	cmp	x20, x21
    3428:	cset	w8, ne  // ne = any
    342c:	cmp	x23, #0x0
    3430:	cset	w9, ne  // ne = any
    3434:	and	w8, w8, w9
    3438:	tbnz	w8, #0, 3348 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1308>
    343c:	cmp	x21, x22
    3440:	b.ne	3348 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1308>  // b.any
    3444:	ldr	w8, [sp, #88]
    3448:	cbz	w8, 3774 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1734>
    344c:	ldr	x21, [sp, #80]
    3450:	stp	x28, x27, [sp, #32]
    3454:	mov	w28, #0x18                  	// #24
    3458:	mov	w24, #0xfffffffe            	// #-2
    345c:	add	x23, x21, x8, lsl #3
    3460:	str	wzr, [sp, #56]
    3464:	b	347c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x143c>
    3468:	ldur	x0, [x29, #-72]
    346c:	bl	0 <_ZdlPv>
    3470:	add	x21, x21, #0x8
    3474:	cmp	x21, x23
    3478:	b.eq	3758 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1718>  // b.none
    347c:	ldr	x22, [x21]
    3480:	ldp	x8, x9, [x22, #32]
    3484:	add	x9, x9, #0x28
    3488:	cmp	x9, x8
    348c:	b.eq	34a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1468>  // b.none
    3490:	ldrb	w9, [x8]
    3494:	tbnz	w9, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    3498:	sub	x9, x8, #0x18
    349c:	cmp	x8, #0x0
    34a0:	csel	x25, xzr, x9, eq  // eq = none
    34a4:	b	34ac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x146c>
    34a8:	mov	x25, xzr
    34ac:	stp	xzr, xzr, [x29, #-80]
    34b0:	stur	wzr, [x29, #-56]
    34b4:	stur	xzr, [x29, #-64]
    34b8:	ldrb	w8, [x25, #16]
    34bc:	mov	x0, xzr
    34c0:	sub	w9, w8, #0x19
    34c4:	cmp	w9, #0xa
    34c8:	b.hi	346c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x142c>  // b.pmore
    34cc:	mov	x27, xzr
    34d0:	mov	x26, x25
    34d4:	b	3518 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14d8>
    34d8:	cmp	w9, w8
    34dc:	ccmp	w8, w24, #0x4, hi  // hi = pmore
    34e0:	csinc	w1, wzr, w8, eq  // eq = none
    34e4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    34e8:	mov	x20, x0
    34ec:	sub	x2, x29, #0x50
    34f0:	mov	x0, x26
    34f4:	mov	x1, x20
    34f8:	bl	65dc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>
    34fc:	mov	x0, x20
    3500:	bl	0 <_ZNK4llvm10BasicBlock29getFirstNonPHIOrDbgOrLifetimeEv>
    3504:	ldrb	w8, [x0, #16]
    3508:	mov	x26, x0
    350c:	sub	w9, w8, #0x19
    3510:	cmp	w9, #0xb
    3514:	b.cs	3468 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1428>  // b.hs, b.nlast
    3518:	cbz	x26, 3cb8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c78>
    351c:	and	w9, w8, #0xff
    3520:	cmp	w9, #0x1a
    3524:	b.eq	3558 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1518>  // b.none
    3528:	cmp	w9, #0x19
    352c:	b.eq	3670 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1630>  // b.none
    3530:	and	w8, w8, #0xff
    3534:	cmp	w8, #0x1b
    3538:	b.ne	3468 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1428>  // b.any
    353c:	ldr	w8, [x26, #20]
    3540:	and	x9, x8, #0xfffffff
    3544:	cbz	w9, 3dd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d98>
    3548:	tbnz	w8, #30, 3588 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1548>
    354c:	mneg	x9, x9, x28
    3550:	add	x9, x26, x9
    3554:	b	358c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x154c>
    3558:	ldr	w8, [x26, #20]
    355c:	and	w8, w8, #0xfffffff
    3560:	cmp	w8, #0x1
    3564:	b.ne	3468 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1428>  // b.any
    3568:	ldur	x20, [x26, #-24]
    356c:	cbz	x20, 357c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x153c>
    3570:	ldrb	w8, [x20, #16]
    3574:	cmp	w8, #0x12
    3578:	b.ne	3f90 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f50>  // b.any
    357c:	cmp	x26, x25
    3580:	csel	x27, x20, x27, eq  // eq = none
    3584:	b	34ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14ac>
    3588:	ldur	x9, [x26, #-8]
    358c:	ldr	x4, [x9]
    3590:	ldur	w9, [x29, #-56]
    3594:	ldur	x10, [x29, #-72]
    3598:	cbz	w9, 35f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x15b4>
    359c:	orr	x11, x4, #0x8
    35a0:	cmn	x11, #0x8
    35a4:	b.eq	3db8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d78>  // b.none
    35a8:	ubfx	x11, x4, #4, #28
    35ac:	eor	w12, w11, w4, lsr #9
    35b0:	sub	w11, w9, #0x1
    35b4:	and	w12, w12, w11
    35b8:	add	x13, x10, w12, uxtw #4
    35bc:	ldr	x14, [x13]
    35c0:	cmp	x14, x4
    35c4:	b.eq	35f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x15b8>  // b.none
    35c8:	mov	w15, #0x1                   	// #1
    35cc:	cmn	x14, #0x8
    35d0:	b.eq	35f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x15b4>  // b.none
    35d4:	add	w12, w12, w15
    35d8:	and	w12, w12, w11
    35dc:	add	x13, x10, w12, uxtw #4
    35e0:	ldr	x14, [x13]
    35e4:	add	w15, w15, #0x1
    35e8:	cmp	x14, x4
    35ec:	b.eq	35f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x15b8>  // b.none
    35f0:	b	35cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x158c>
    35f4:	add	x13, x10, x9, lsl #4
    35f8:	add	x9, x10, x9, lsl #4
    35fc:	cmp	x13, x9
    3600:	b.eq	3608 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x15c8>  // b.none
    3604:	ldr	x4, [x13, #8]
    3608:	cbz	x4, 3df8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1db8>
    360c:	ldrb	w9, [x4, #16]
    3610:	cmp	w9, #0xd
    3614:	b.ne	3468 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1428>  // b.any
    3618:	ubfx	w8, w8, #1, #27
    361c:	sub	w3, w8, #0x1
    3620:	mov	x0, x26
    3624:	mov	x1, xzr
    3628:	mov	x2, x26
    362c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3630:	cmp	x0, x26
    3634:	b.ne	3e18 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1dd8>  // b.any
    3638:	ldr	w8, [x26, #20]
    363c:	ubfx	w8, w8, #1, #27
    3640:	sub	w8, w8, #0x1
    3644:	cmp	x1, x8
    3648:	csel	x0, x0, x26, ne  // ne = any
    364c:	ldr	w9, [x0, #20]
    3650:	csel	w8, w1, w24, ne  // ne = any
    3654:	cmn	w8, #0x2
    3658:	ubfx	w9, w9, #1, #27
    365c:	sub	w9, w9, #0x1
    3660:	b.eq	34d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1498>  // b.none
    3664:	cmp	w9, w8
    3668:	b.hi	34d8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1498>  // b.pmore
    366c:	b	3e38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1df8>
    3670:	cmp	x26, x25
    3674:	b.eq	3734 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16f4>  // b.none
    3678:	cbz	x27, 3720 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16e0>
    367c:	mov	x0, x27
    3680:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    3684:	cmp	x0, x1
    3688:	b.eq	3720 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16e0>  // b.none
    368c:	mov	x27, x0
    3690:	mov	x20, x1
    3694:	ldr	w8, [x27, #20]
    3698:	and	x9, x8, #0xfffffff
    369c:	cbz	w9, 36f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b8>
    36a0:	ldr	w12, [x27, #56]
    36a4:	ldr	x10, [x25, #40]
    36a8:	mneg	x11, x9, x28
    36ac:	orr	x13, xzr, #0x8
    36b0:	mov	x1, xzr
    36b4:	add	x11, x27, x11
    36b8:	madd	x12, x12, x28, x13
    36bc:	mov	x13, x11
    36c0:	tbz	w8, #30, 36c8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1688>
    36c4:	ldur	x13, [x27, #-8]
    36c8:	add	x13, x13, x12
    36cc:	ldr	x13, [x13, x1, lsl #3]
    36d0:	cmp	x13, x10
    36d4:	b.eq	36e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16a8>  // b.none
    36d8:	add	x1, x1, #0x1
    36dc:	cmp	x9, x1
    36e0:	b.ne	36bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x167c>  // b.any
    36e4:	b	36f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b4>
    36e8:	mov	w2, #0x1                   	// #1
    36ec:	mov	x0, x27
    36f0:	bl	0 <_ZN4llvm7PHINode19removeIncomingValueEjb>
    36f4:	cbz	x27, 40f0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20b0>
    36f8:	ldr	x8, [x27, #32]
    36fc:	ldrb	w9, [x8]
    3700:	tbnz	w9, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    3704:	cbz	x8, 3f70 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f30>
    3708:	ldurb	w9, [x8, #-8]
    370c:	sub	x8, x8, #0x18
    3710:	cmp	w9, #0x4f
    3714:	csel	x27, x8, xzr, eq  // eq = none
    3718:	cmp	x27, x20
    371c:	b.ne	3694 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1654>  // b.any
    3720:	mov	x0, x26
    3724:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    3728:	mov	x1, x0
    372c:	mov	x0, x25
    3730:	bl	0 <_ZN4llvm19ReplaceInstWithInstEPNS_11InstructionES1_>
    3734:	ldur	x0, [x29, #-72]
    3738:	bl	0 <_ZdlPv>
    373c:	ldrh	w8, [x22, #18]
    3740:	and	w8, w8, #0xfffc
    3744:	orr	w8, w8, #0x2
    3748:	strh	w8, [x22, #18]
    374c:	mov	w8, #0x1                   	// #1
    3750:	str	w8, [sp, #56]
    3754:	b	3470 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1430>
    3758:	ldp	x28, x27, [sp, #32]
    375c:	ldr	w8, [sp, #56]
    3760:	tbz	w8, #0, 3774 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1734>
    3764:	ldr	x0, [sp, #48]
    3768:	mov	x1, xzr
    376c:	mov	x2, xzr
    3770:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    3774:	ldr	x0, [sp, #80]
    3778:	add	x8, sp, #0x50
    377c:	add	x8, x8, #0x10
    3780:	cmp	x0, x8
    3784:	b.eq	378c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x174c>  // b.none
    3788:	bl	0 <free>
    378c:	ldr	w8, [x19, #168]
    3790:	cbnz	w8, 4288 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2248>
    3794:	ldr	x8, [x19, #184]
    3798:	ldr	x23, [sp, #48]
    379c:	ldp	x8, x9, [x8, #32]
    37a0:	add	x9, x9, #0x28
    37a4:	cmp	x9, x8
    37a8:	b.eq	37c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1784>  // b.none
    37ac:	ldrb	w9, [x8]
    37b0:	tbnz	w9, #2, 3cd8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c98>
    37b4:	sub	x9, x8, #0x18
    37b8:	cmp	x8, #0x0
    37bc:	csel	x20, xzr, x9, eq  // eq = none
    37c0:	b	37c8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1788>
    37c4:	mov	x20, xzr
    37c8:	mov	x0, x20
    37cc:	bl	0 <_ZNK4llvm5Value10getContextEv>
    37d0:	stp	x0, xzr, [sp, #104]
    37d4:	mov	w8, #0x200                 	// #512
    37d8:	add	x0, sp, #0x50
    37dc:	mov	x1, x20
    37e0:	str	wzr, [sp, #120]
    37e4:	strb	wzr, [sp, #126]
    37e8:	stp	xzr, xzr, [sp, #88]
    37ec:	str	xzr, [sp, #80]
    37f0:	strh	w8, [sp, #124]
    37f4:	stp	xzr, xzr, [sp, #128]
    37f8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    37fc:	ldp	x1, x2, [x19, #176]
    3800:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3804:	add	x8, x8, #0x0
    3808:	mov	w22, #0x103                 	// #259
    380c:	add	x0, sp, #0x50
    3810:	sub	x5, x29, #0x50
    3814:	mov	w3, wzr
    3818:	mov	w4, wzr
    381c:	stp	x8, xzr, [x29, #-80]
    3820:	sturh	w22, [x29, #-64]
    3824:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3828:	mov	x20, x0
    382c:	mov	w0, #0x40                  	// #64
    3830:	mov	w1, #0x2                   	// #2
    3834:	bl	0 <_ZN4llvm4UsernwEmj>
    3838:	mov	x1, x23
    383c:	mov	x2, x20
    3840:	mov	w3, wzr
    3844:	mov	x4, xzr
    3848:	mov	x25, x0
    384c:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    3850:	mov	w21, #0x101                 	// #257
    3854:	add	x0, sp, #0x50
    3858:	sub	x2, x29, #0x50
    385c:	mov	x1, x25
    3860:	stp	xzr, xzr, [x29, #-80]
    3864:	sturh	w21, [x29, #-64]
    3868:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    386c:	mov	x0, x19
    3870:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3874:	mov	x20, x0
    3878:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    387c:	ldr	x20, [x20, #8]
    3880:	cbnz	x20, 39f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19b4>
    3884:	mov	x20, x28
    3888:	ldp	x1, x2, [x19, #176]
    388c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3890:	add	x8, x8, #0x0
    3894:	add	x0, sp, #0x50
    3898:	sub	x5, x29, #0x50
    389c:	mov	w4, #0x1                   	// #1
    38a0:	mov	w3, wzr
    38a4:	stp	x8, xzr, [x29, #-80]
    38a8:	sturh	w22, [x29, #-64]
    38ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38b0:	mov	x25, x0
    38b4:	mov	w0, #0x40                  	// #64
    38b8:	mov	w1, #0x2                   	// #2
    38bc:	bl	0 <_ZN4llvm4UsernwEmj>
    38c0:	mov	x1, x20
    38c4:	mov	x2, x25
    38c8:	mov	w3, wzr
    38cc:	mov	x4, xzr
    38d0:	mov	x26, x0
    38d4:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    38d8:	add	x0, sp, #0x50
    38dc:	sub	x2, x29, #0x50
    38e0:	mov	x1, x26
    38e4:	stp	xzr, xzr, [x29, #-80]
    38e8:	sturh	w21, [x29, #-64]
    38ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38f0:	ldr	x1, [sp, #80]
    38f4:	cbz	x1, 3900 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x18c0>
    38f8:	add	x0, sp, #0x50
    38fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3900:	ldr	x20, [sp, #64]
    3904:	ldr	w8, [x20, #8]
    3908:	cbnz	w8, 42a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2268>
    390c:	ldr	w8, [x20, #12]
    3910:	cbz	w8, 3c24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1be4>
    3914:	mov	x8, xzr
    3918:	ldr	x9, [x20]
    391c:	str	x23, [x9, x8, lsl #3]
    3920:	ldp	w8, w9, [x20, #8]
    3924:	cmp	w8, w9
    3928:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    392c:	add	w8, w8, #0x1
    3930:	cmp	w8, w9
    3934:	str	w8, [x20, #8]
    3938:	b.cs	3c40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c00>  // b.hs, b.nlast
    393c:	ldr	x9, [x20]
    3940:	str	x28, [x9, w8, uxtw #3]
    3944:	ldp	w8, w9, [x20, #8]
    3948:	cmp	w8, w9
    394c:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    3950:	add	w8, w8, #0x1
    3954:	cmp	w8, w9
    3958:	str	w8, [x20, #8]
    395c:	b.cs	3c5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c1c>  // b.hs, b.nlast
    3960:	ldr	x9, [x20]
    3964:	str	x27, [x9, w8, uxtw #3]
    3968:	ldp	w8, w9, [x20, #8]
    396c:	cmp	w8, w9
    3970:	b.cs	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.hs, b.nlast
    3974:	add	x22, x8, #0x1
    3978:	str	w22, [x20, #8]
    397c:	ldr	w8, [x19, #168]
    3980:	cbnz	w8, 42c8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2288>
    3984:	ldr	x20, [x20]
    3988:	add	x8, sp, #0x50
    398c:	lsl	x21, x22, #3
    3990:	add	x1, x8, #0x10
    3994:	cmp	x22, #0x5
    3998:	str	x1, [sp, #80]
    399c:	str	d8, [sp, #88]
    39a0:	b.cc	39b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1974>  // b.lo, b.ul, b.last
    39a4:	add	x0, sp, #0x50
    39a8:	mov	w3, #0x8                   	// #8
    39ac:	mov	x2, x22
    39b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    39b4:	cmp	x21, #0x0
    39b8:	b.le	3a60 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a20>
    39bc:	lsr	x10, x21, #3
    39c0:	ldr	x13, [sp, #80]
    39c4:	ldr	w8, [sp, #88]
    39c8:	cmp	x10, #0x0
    39cc:	cset	w9, ne  // ne = any
    39d0:	sub	x9, x10, x9
    39d4:	add	x11, x9, #0x1
    39d8:	cmp	x11, #0x4
    39dc:	add	x9, x13, x8, lsl #3
    39e0:	b.cs	3a68 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a28>  // b.hs, b.nlast
    39e4:	mov	x12, x20
    39e8:	b	3ae4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1aa4>
    39ec:	ldr	x20, [x20, #8]
    39f0:	cbz	x20, 3884 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1844>
    39f4:	mov	x0, x20
    39f8:	bl	0 <_ZNK4llvm3Use7getUserEv>
    39fc:	cbz	x0, 4050 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2010>
    3a00:	ldrb	w8, [x0, #16]
    3a04:	mov	x1, x0
    3a08:	cmp	w8, #0x50
    3a0c:	b.ne	39ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>  // b.any
    3a10:	ldur	x8, [x1, #-24]
    3a14:	cbz	x8, 39ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>
    3a18:	ldrb	w9, [x8, #16]
    3a1c:	cbnz	w9, 39ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>
    3a20:	ldrb	w9, [x8, #33]
    3a24:	tbz	w9, #5, 39ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>
    3a28:	ldr	w8, [x8, #36]
    3a2c:	cmp	w8, #0xe
    3a30:	b.ne	39ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>  // b.any
    3a34:	mov	w8, #0x101                 	// #257
    3a38:	add	x0, sp, #0x50
    3a3c:	sub	x4, x29, #0x50
    3a40:	mov	x2, x28
    3a44:	mov	x3, x27
    3a48:	mov	x5, xzr
    3a4c:	stp	xzr, xzr, [x29, #-80]
    3a50:	sturh	w8, [x29, #-64]
    3a54:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a58:	mov	x20, x0
    3a5c:	b	3888 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1848>
    3a60:	ldr	w8, [sp, #88]
    3a64:	b	3afc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1abc>
    3a68:	cmp	x10, #0x0
    3a6c:	cset	w12, ne  // ne = any
    3a70:	sub	x14, x10, x12
    3a74:	add	x14, x20, x14, lsl #3
    3a78:	add	x14, x14, #0x8
    3a7c:	cmp	x9, x14
    3a80:	b.cs	3aa0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a60>  // b.hs, b.nlast
    3a84:	add	x14, x10, x8
    3a88:	sub	x12, x14, x12
    3a8c:	add	x12, x13, x12, lsl #3
    3a90:	add	x12, x12, #0x8
    3a94:	cmp	x20, x12
    3a98:	mov	x12, x20
    3a9c:	b.cc	3ae4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1aa4>  // b.lo, b.ul, b.last
    3aa0:	and	x14, x11, #0xfffffffffffffffc
    3aa4:	add	x13, x13, x8, lsl #3
    3aa8:	lsl	x12, x14, #3
    3aac:	add	x15, x20, #0x10
    3ab0:	sub	x10, x10, x14
    3ab4:	add	x9, x9, x12
    3ab8:	add	x12, x20, x12
    3abc:	add	x13, x13, #0x10
    3ac0:	mov	x16, x14
    3ac4:	ldp	q0, q1, [x15, #-16]
    3ac8:	add	x15, x15, #0x20
    3acc:	subs	x16, x16, #0x4
    3ad0:	stp	q0, q1, [x13, #-16]
    3ad4:	add	x13, x13, #0x20
    3ad8:	b.ne	3ac4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a84>  // b.any
    3adc:	cmp	x11, x14
    3ae0:	b.eq	3afc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1abc>  // b.none
    3ae4:	add	x10, x10, #0x1
    3ae8:	ldr	x11, [x12], #8
    3aec:	sub	x10, x10, #0x1
    3af0:	cmp	x10, #0x1
    3af4:	str	x11, [x9], #8
    3af8:	b.gt	3ae8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1aa8>
    3afc:	ldr	w9, [sp, #92]
    3b00:	add	x8, x8, x22
    3b04:	cmp	x8, x9
    3b08:	b.hi	3c98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c58>  // b.pmore
    3b0c:	str	w8, [sp, #88]
    3b10:	cbz	w8, 42e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22a8>
    3b14:	ldr	x9, [x20]
    3b18:	ldr	x0, [x9]
    3b1c:	cbz	x0, 3f30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef0>
    3b20:	ldrb	w10, [x0, #8]
    3b24:	cmp	w10, #0xf
    3b28:	b.ne	3f50 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f10>  // b.any
    3b2c:	ldr	x20, [x9, #40]
    3b30:	and	x1, x8, #0xffffffff
    3b34:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    3b38:	ldr	x1, [sp, #80]
    3b3c:	ldr	w2, [sp, #88]
    3b40:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    3b44:	mov	x21, x0
    3b48:	mov	w0, #0x58                  	// #88
    3b4c:	mov	w1, #0x1                   	// #1
    3b50:	bl	0 <_ZN4llvm4UsernwEmj>
    3b54:	ldr	x24, [sp, #72]
    3b58:	ldr	x22, [x21]
    3b5c:	mov	x23, x0
    3b60:	mov	x0, x24
    3b64:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3b68:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3b6c:	stp	x0, x1, [x29, #-32]
    3b70:	sub	x8, x29, #0x20
    3b74:	add	x9, x9, #0x0
    3b78:	mov	w10, #0x305                 	// #773
    3b7c:	sub	x6, x29, #0x50
    3b80:	mov	w3, #0x1                   	// #1
    3b84:	mov	w4, #0x8                   	// #8
    3b88:	mov	x0, x23
    3b8c:	mov	x1, x20
    3b90:	mov	x2, x22
    3b94:	mov	x5, x21
    3b98:	mov	x7, xzr
    3b9c:	stp	x8, x9, [x29, #-80]
    3ba0:	sturh	w10, [x29, #-64]
    3ba4:	strb	wzr, [sp, #16]
    3ba8:	str	wzr, [sp, #8]
    3bac:	str	wzr, [sp]
    3bb0:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    3bb4:	mov	x0, x24
    3bb8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    3bbc:	mov	w1, wzr
    3bc0:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    3bc4:	mov	x1, x0
    3bc8:	mov	x0, x23
    3bcc:	bl	0 <_ZN4llvm12ConstantExpr14getPointerCastEPNS_8ConstantEPNS_4TypeE>
    3bd0:	mov	x20, x0
    3bd4:	mov	x0, x19
    3bd8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3bdc:	mov	w1, #0x3                   	// #3
    3be0:	mov	x2, x20
    3be4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3be8:	ldr	x0, [sp, #80]
    3bec:	add	x8, sp, #0x50
    3bf0:	add	x8, x8, #0x10
    3bf4:	cmp	x0, x8
    3bf8:	b.eq	3c00 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1bc0>  // b.none
    3bfc:	bl	0 <free>
    3c00:	add	sp, sp, #0x190
    3c04:	ldp	x20, x19, [sp, #96]
    3c08:	ldp	x22, x21, [sp, #80]
    3c0c:	ldp	x24, x23, [sp, #64]
    3c10:	ldp	x26, x25, [sp, #48]
    3c14:	ldp	x28, x27, [sp, #32]
    3c18:	ldp	x29, x30, [sp, #16]
    3c1c:	ldr	d8, [sp], #112
    3c20:	ret
    3c24:	add	x1, x20, #0x10
    3c28:	mov	w3, #0x8                   	// #8
    3c2c:	mov	x0, x20
    3c30:	mov	x2, xzr
    3c34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c38:	ldr	w8, [x20, #8]
    3c3c:	b	3918 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x18d8>
    3c40:	add	x1, x20, #0x10
    3c44:	mov	w3, #0x8                   	// #8
    3c48:	mov	x0, x20
    3c4c:	mov	x2, xzr
    3c50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c54:	ldr	w8, [x20, #8]
    3c58:	b	393c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x18fc>
    3c5c:	add	x1, x20, #0x10
    3c60:	mov	w3, #0x8                   	// #8
    3c64:	mov	x0, x20
    3c68:	mov	x2, xzr
    3c6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c70:	ldr	w8, [x20, #8]
    3c74:	b	3960 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1920>
    3c78:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c80:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c84:	add	x0, x0, #0x0
    3c88:	add	x1, x1, #0x0
    3c8c:	add	x3, x3, #0x0
    3c90:	mov	w2, #0x95                  	// #149
    3c94:	bl	0 <__assert_fail>
    3c98:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ca0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ca4:	add	x0, x0, #0x0
    3ca8:	add	x1, x1, #0x0
    3cac:	add	x3, x3, #0x0
    3cb0:	mov	w2, #0x43                  	// #67
    3cb4:	bl	0 <__assert_fail>
    3cb8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cbc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cc0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cc4:	add	x0, x0, #0x0
    3cc8:	add	x1, x1, #0x0
    3ccc:	add	x3, x3, #0x0
    3cd0:	mov	w2, #0x69                  	// #105
    3cd4:	bl	0 <__assert_fail>
    3cd8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cdc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ce0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ce4:	add	x0, x0, #0x0
    3ce8:	add	x1, x1, #0x0
    3cec:	add	x3, x3, #0x0
    3cf0:	mov	w2, #0x8b                  	// #139
    3cf4:	bl	0 <__assert_fail>
    3cf8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cfc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d00:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d04:	add	x0, x0, #0x0
    3d08:	add	x1, x1, #0x0
    3d0c:	add	x3, x3, #0x0
    3d10:	mov	w2, #0x8b                  	// #139
    3d14:	bl	0 <__assert_fail>
    3d18:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d20:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d24:	add	x0, x0, #0x0
    3d28:	add	x1, x1, #0x0
    3d2c:	add	x3, x3, #0x0
    3d30:	mov	w2, #0x95                  	// #149
    3d34:	bl	0 <__assert_fail>
    3d38:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d3c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d40:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d44:	add	x0, x0, #0x0
    3d48:	add	x1, x1, #0x0
    3d4c:	add	x3, x3, #0x0
    3d50:	mov	w2, #0x17c                 	// #380
    3d54:	bl	0 <__assert_fail>
    3d58:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d5c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d60:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d64:	add	x0, x0, #0x0
    3d68:	add	x1, x1, #0x0
    3d6c:	add	x3, x3, #0x0
    3d70:	mov	w2, #0x69                  	// #105
    3d74:	bl	0 <__assert_fail>
    3d78:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d80:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d84:	add	x0, x0, #0x0
    3d88:	add	x1, x1, #0x0
    3d8c:	add	x3, x3, #0x0
    3d90:	mov	w2, #0x108                 	// #264
    3d94:	bl	0 <__assert_fail>
    3d98:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3da0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3da4:	add	x0, x0, #0x0
    3da8:	add	x1, x1, #0x0
    3dac:	add	x3, x3, #0x0
    3db0:	mov	w2, #0xb3                  	// #179
    3db4:	bl	0 <__assert_fail>
    3db8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3dbc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3dc0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3dc4:	add	x0, x0, #0x0
    3dc8:	add	x1, x1, #0x0
    3dcc:	add	x3, x3, #0x0
    3dd0:	mov	w2, #0x252                 	// #594
    3dd4:	bl	0 <__assert_fail>
    3dd8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ddc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3de0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3de4:	add	x0, x0, #0x0
    3de8:	add	x1, x1, #0x0
    3dec:	add	x3, x3, #0x0
    3df0:	mov	w2, #0xdbe                 	// #3518
    3df4:	bl	0 <__assert_fail>
    3df8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3dfc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e00:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e04:	add	x0, x0, #0x0
    3e08:	add	x1, x1, #0x0
    3e0c:	add	x3, x3, #0x0
    3e10:	mov	w2, #0x69                  	// #105
    3e14:	bl	0 <__assert_fail>
    3e18:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e20:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e24:	add	x0, x0, #0x0
    3e28:	add	x1, x1, #0x0
    3e2c:	add	x3, x3, #0x0
    3e30:	mov	w2, #0xc91                 	// #3217
    3e34:	bl	0 <__assert_fail>
    3e38:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e3c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e40:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e44:	add	x0, x0, #0x0
    3e48:	add	x1, x1, #0x0
    3e4c:	add	x3, x3, #0x0
    3e50:	mov	w2, #0xc81                 	// #3201
    3e54:	bl	0 <__assert_fail>
    3e58:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e5c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e60:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e64:	add	x0, x0, #0x0
    3e68:	add	x1, x1, #0x0
    3e6c:	add	x3, x3, #0x0
    3e70:	mov	w2, #0x69                  	// #105
    3e74:	bl	0 <__assert_fail>
    3e78:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e80:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e84:	add	x0, x0, #0x0
    3e88:	add	x1, x1, #0x0
    3e8c:	add	x3, x3, #0x0
    3e90:	mov	w2, #0x108                 	// #264
    3e94:	bl	0 <__assert_fail>
    3e98:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3e9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ea0:	add	x0, x0, #0x0
    3ea4:	add	x1, x1, #0x0
    3ea8:	mov	w2, #0x46a                 	// #1130
    3eac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3eb0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3eb4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3eb8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ebc:	add	x0, x0, #0x0
    3ec0:	add	x1, x1, #0x0
    3ec4:	add	x3, x3, #0x0
    3ec8:	mov	w2, #0x528                 	// #1320
    3ecc:	bl	0 <__assert_fail>
    3ed0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ed4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ed8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3edc:	add	x0, x0, #0x0
    3ee0:	add	x1, x1, #0x0
    3ee4:	add	x3, x3, #0x0
    3ee8:	mov	w2, #0x7b                  	// #123
    3eec:	bl	0 <__assert_fail>
    3ef0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ef4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ef8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3efc:	add	x0, x0, #0x0
    3f00:	add	x1, x1, #0x0
    3f04:	add	x3, x3, #0x0
    3f08:	mov	w2, #0x7c                  	// #124
    3f0c:	bl	0 <__assert_fail>
    3f10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f18:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f1c:	add	x0, x0, #0x0
    3f20:	add	x1, x1, #0x0
    3f24:	add	x3, x3, #0x0
    3f28:	mov	w2, #0x7d                  	// #125
    3f2c:	bl	0 <__assert_fail>
    3f30:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f34:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f38:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f3c:	add	x0, x0, #0x0
    3f40:	add	x1, x1, #0x0
    3f44:	add	x3, x3, #0x0
    3f48:	mov	w2, #0x69                  	// #105
    3f4c:	bl	0 <__assert_fail>
    3f50:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f54:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f58:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f5c:	add	x0, x0, #0x0
    3f60:	add	x1, x1, #0x0
    3f64:	add	x3, x3, #0x0
    3f68:	mov	w2, #0x108                 	// #264
    3f6c:	bl	0 <__assert_fail>
    3f70:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f74:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f78:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f7c:	add	x0, x0, #0x0
    3f80:	add	x1, x1, #0x0
    3f84:	add	x3, x3, #0x0
    3f88:	mov	w2, #0x5b                  	// #91
    3f8c:	bl	0 <__assert_fail>
    3f90:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f94:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f98:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3f9c:	add	x0, x0, #0x0
    3fa0:	add	x1, x1, #0x0
    3fa4:	add	x3, x3, #0x0
    3fa8:	mov	w2, #0x134                 	// #308
    3fac:	bl	0 <__assert_fail>
    3fb0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fb4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fb8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fbc:	add	x0, x0, #0x0
    3fc0:	add	x1, x1, #0x0
    3fc4:	add	x3, x3, #0x0
    3fc8:	mov	w2, #0x69                  	// #105
    3fcc:	bl	0 <__assert_fail>
    3fd0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fd4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fd8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fdc:	add	x0, x0, #0x0
    3fe0:	add	x1, x1, #0x0
    3fe4:	add	x3, x3, #0x0
    3fe8:	mov	w2, #0x108                 	// #264
    3fec:	bl	0 <__assert_fail>
    3ff0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ff4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ff8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ffc:	add	x0, x0, #0x0
    4000:	add	x1, x1, #0x0
    4004:	add	x3, x3, #0x0
    4008:	mov	w2, #0x69                  	// #105
    400c:	bl	0 <__assert_fail>
    4010:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4014:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4018:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    401c:	add	x0, x0, #0x0
    4020:	add	x1, x1, #0x0
    4024:	add	x3, x3, #0x0
    4028:	mov	w2, #0x69                  	// #105
    402c:	bl	0 <__assert_fail>
    4030:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4034:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4038:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    403c:	add	x0, x0, #0x0
    4040:	add	x1, x1, #0x0
    4044:	add	x3, x3, #0x0
    4048:	mov	w2, #0x108                 	// #264
    404c:	bl	0 <__assert_fail>
    4050:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4054:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4058:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    405c:	add	x0, x0, #0x0
    4060:	add	x1, x1, #0x0
    4064:	add	x3, x3, #0x0
    4068:	mov	w2, #0x69                  	// #105
    406c:	bl	0 <__assert_fail>
    4070:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4074:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4078:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    407c:	add	x0, x0, #0x0
    4080:	add	x1, x1, #0x0
    4084:	add	x3, x3, #0x0
    4088:	mov	w2, #0x69                  	// #105
    408c:	bl	0 <__assert_fail>
    4090:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4094:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4098:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    409c:	add	x0, x0, #0x0
    40a0:	add	x1, x1, #0x0
    40a4:	add	x3, x3, #0x0
    40a8:	mov	w2, #0x4ff                 	// #1279
    40ac:	bl	0 <__assert_fail>
    40b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40bc:	add	x0, x0, #0x0
    40c0:	add	x1, x1, #0x0
    40c4:	add	x3, x3, #0x0
    40c8:	mov	w2, #0x69                  	// #105
    40cc:	bl	0 <__assert_fail>
    40d0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40d4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40d8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40dc:	add	x0, x0, #0x0
    40e0:	add	x1, x1, #0x0
    40e4:	add	x3, x3, #0x0
    40e8:	mov	w2, #0x108                 	// #264
    40ec:	bl	0 <__assert_fail>
    40f0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40f4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40f8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40fc:	add	x0, x0, #0x0
    4100:	add	x1, x1, #0x0
    4104:	add	x3, x3, #0x0
    4108:	mov	w2, #0x13d                 	// #317
    410c:	bl	0 <__assert_fail>
    4110:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4114:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4118:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    411c:	add	x0, x0, #0x0
    4120:	add	x1, x1, #0x0
    4124:	add	x3, x3, #0x0
    4128:	mov	w2, #0x108                 	// #264
    412c:	bl	0 <__assert_fail>
    4130:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4134:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4138:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    413c:	add	x0, x0, #0x0
    4140:	add	x1, x1, #0x0
    4144:	add	x3, x3, #0x0
    4148:	mov	w2, #0x69                  	// #105
    414c:	bl	0 <__assert_fail>
    4150:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4154:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4158:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    415c:	add	x0, x0, #0x0
    4160:	add	x1, x1, #0x0
    4164:	add	x3, x3, #0x0
    4168:	mov	w2, #0x108                 	// #264
    416c:	bl	0 <__assert_fail>
    4170:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4174:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4178:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    417c:	add	x0, x0, #0x0
    4180:	add	x1, x1, #0x0
    4184:	add	x3, x3, #0x0
    4188:	mov	w2, #0x160                 	// #352
    418c:	bl	0 <__assert_fail>
    4190:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4194:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4198:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    419c:	add	x0, x0, #0x0
    41a0:	add	x1, x1, #0x0
    41a4:	add	x3, x3, #0x0
    41a8:	mov	w2, #0x161                 	// #353
    41ac:	bl	0 <__assert_fail>
    41b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41bc:	add	x0, x0, #0x0
    41c0:	add	x1, x1, #0x0
    41c4:	add	x3, x3, #0x0
    41c8:	mov	w2, #0x69                  	// #105
    41cc:	bl	0 <__assert_fail>
    41d0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41d4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41d8:	add	x0, x0, #0x0
    41dc:	add	x1, x1, #0x0
    41e0:	mov	w2, #0x54a                 	// #1354
    41e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    41e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41f4:	add	x0, x0, #0x0
    41f8:	add	x1, x1, #0x0
    41fc:	add	x3, x3, #0x0
    4200:	mov	w2, #0x4b6                 	// #1206
    4204:	bl	0 <__assert_fail>
    4208:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    420c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4210:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4214:	add	x0, x0, #0x0
    4218:	add	x1, x1, #0x0
    421c:	add	x3, x3, #0x0
    4220:	mov	w2, #0x69                  	// #105
    4224:	bl	0 <__assert_fail>
    4228:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    422c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4230:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4234:	add	x0, x0, #0x0
    4238:	add	x1, x1, #0x0
    423c:	add	x3, x3, #0x0
    4240:	mov	w2, #0x108                 	// #264
    4244:	bl	0 <__assert_fail>
    4248:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    424c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4250:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4254:	add	x0, x0, #0x0
    4258:	add	x1, x1, #0x0
    425c:	add	x3, x3, #0x0
    4260:	mov	w2, #0x168                 	// #360
    4264:	bl	0 <__assert_fail>
    4268:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    426c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4270:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4274:	add	x0, x0, #0x0
    4278:	add	x1, x1, #0x0
    427c:	add	x3, x3, #0x0
    4280:	mov	w2, #0x52b                 	// #1323
    4284:	bl	0 <__assert_fail>
    4288:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    428c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4290:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4294:	add	x0, x0, #0x0
    4298:	add	x1, x1, #0x0
    429c:	add	x3, x3, #0x0
    42a0:	mov	w2, #0x34e                 	// #846
    42a4:	bl	0 <__assert_fail>
    42a8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42ac:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42b0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42b4:	add	x0, x0, #0x0
    42b8:	add	x1, x1, #0x0
    42bc:	add	x3, x3, #0x0
    42c0:	mov	w2, #0x4a7                 	// #1191
    42c4:	bl	0 <__assert_fail>
    42c8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42cc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42d0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42d4:	add	x0, x0, #0x0
    42d8:	add	x1, x1, #0x0
    42dc:	add	x3, x3, #0x0
    42e0:	mov	w2, #0x338                 	// #824
    42e4:	bl	0 <__assert_fail>
    42e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42f4:	add	x0, x0, #0x0
    42f8:	add	x1, x1, #0x0
    42fc:	add	x3, x3, #0x0
    4300:	mov	w2, #0x33b                 	// #827
    4304:	bl	0 <__assert_fail>
    4308:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    430c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4310:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4314:	add	x0, x0, #0x0
    4318:	add	x1, x1, #0x0
    431c:	add	x3, x3, #0x0
    4320:	mov	w2, #0xc7                  	// #199
    4324:	bl	0 <__assert_fail>
    4328:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    432c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4330:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4334:	add	x0, x0, #0x0
    4338:	add	x1, x1, #0x0
    433c:	add	x3, x3, #0x0
    4340:	mov	w2, #0x7d                  	// #125
    4344:	bl	0 <__assert_fail>

0000000000004348 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>:
    4348:	sub	sp, sp, #0x100
    434c:	stp	x29, x30, [sp, #160]
    4350:	stp	x28, x27, [sp, #176]
    4354:	stp	x26, x25, [sp, #192]
    4358:	stp	x24, x23, [sp, #208]
    435c:	stp	x22, x21, [sp, #224]
    4360:	stp	x20, x19, [sp, #240]
    4364:	add	x29, sp, #0xa0
    4368:	sub	x8, x29, #0x20
    436c:	stp	x0, xzr, [x29, #-40]
    4370:	stur	x8, [x29, #-48]
    4374:	ldr	w8, [x1, #144]
    4378:	mov	x20, x2
    437c:	str	x1, [sp, #8]
    4380:	cbz	w8, 4604 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x2bc>
    4384:	ldr	x9, [sp, #8]
    4388:	lsl	x26, x8, #3
    438c:	mov	w27, #0x18                  	// #24
    4390:	ldr	x25, [x9, #136]
    4394:	add	x9, sp, #0x28
    4398:	add	x28, x9, #0x30
    439c:	add	x19, x9, #0x8
    43a0:	b	43b0 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x68>
    43a4:	subs	x26, x26, #0x8
    43a8:	add	x25, x25, #0x8
    43ac:	b.eq	4604 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x2bc>  // b.none
    43b0:	ldr	x22, [x25]
    43b4:	mov	x21, x22
    43b8:	cbz	x20, 43e0 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x98>
    43bc:	add	x1, sp, #0x28
    43c0:	mov	x0, x20
    43c4:	str	x22, [sp, #40]
    43c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43cc:	ldr	x21, [x0, #16]
    43d0:	cbz	x21, 4648 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x300>
    43d4:	ldrb	w8, [x21, #16]
    43d8:	cmp	w8, #0x50
    43dc:	b.ne	4668 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x320>  // b.any
    43e0:	mov	x0, x21
    43e4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    43e8:	stp	x0, xzr, [sp, #64]
    43ec:	mov	w8, #0x200                 	// #512
    43f0:	add	x0, sp, #0x28
    43f4:	mov	x1, x21
    43f8:	str	xzr, [sp, #40]
    43fc:	str	wzr, [sp, #80]
    4400:	strh	w8, [sp, #84]
    4404:	strb	wzr, [sp, #86]
    4408:	stp	xzr, xzr, [x19]
    440c:	stp	xzr, xzr, [x28]
    4410:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4414:	ldrb	w8, [x22, #16]
    4418:	cmp	w8, #0x50
    441c:	b.eq	444c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x104>  // b.none
    4420:	cmp	w8, #0x23
    4424:	b.eq	4438 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0xf0>  // b.none
    4428:	cmp	w8, #0x1d
    442c:	b.ne	4630 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x2e8>  // b.any
    4430:	mov	x8, #0xfffffffffffffffe    	// #-2
    4434:	b	4450 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x108>
    4438:	mov	x0, x22
    443c:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    4440:	mov	x8, xzr
    4444:	sub	x8, x8, w0, uxtw
    4448:	b	4450 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x108>
    444c:	mov	x8, xzr
    4450:	sub	x23, x22, #0x18
    4454:	mov	x0, x22
    4458:	madd	x24, x8, x27, x23
    445c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4460:	ldr	w8, [x22, #20]
    4464:	mov	w9, w0
    4468:	mneg	x9, x9, x27
    446c:	add	x9, x24, x9
    4470:	and	x8, x8, #0xfffffff
    4474:	mneg	x8, x8, x27
    4478:	add	x8, x22, x8
    447c:	sub	x8, x9, x8
    4480:	mov	w9, #0xaaab                	// #43691
    4484:	lsr	x8, x8, #3
    4488:	movk	w9, #0xaaaa, lsl #16
    448c:	mul	w8, w8, w9
    4490:	cbz	w8, 44b8 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x170>
    4494:	ldrb	w8, [x22, #16]
    4498:	cmp	w8, #0x50
    449c:	b.eq	4534 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1ec>  // b.none
    44a0:	cmp	w8, #0x23
    44a4:	b.eq	4520 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1d8>  // b.none
    44a8:	cmp	w8, #0x1d
    44ac:	b.ne	4630 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x2e8>  // b.any
    44b0:	mov	x8, #0xfffffffffffffffe    	// #-2
    44b4:	b	4538 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1f0>
    44b8:	ldr	x22, [x22]
    44bc:	sub	x0, x29, #0x30
    44c0:	mov	x1, x22
    44c4:	bl	68d4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    44c8:	mov	x23, x0
    44cc:	mov	w27, #0x101                 	// #257
    44d0:	mov	w0, #0x40                  	// #64
    44d4:	mov	w1, #0x1                   	// #1
    44d8:	stp	xzr, xzr, [sp, #16]
    44dc:	strh	w27, [sp, #32]
    44e0:	bl	0 <_ZN4llvm4UsernwEmj>
    44e4:	sub	x3, x29, #0x18
    44e8:	mov	x1, x22
    44ec:	mov	x2, x23
    44f0:	mov	x4, xzr
    44f4:	mov	x24, x0
    44f8:	stp	xzr, xzr, [x29, #-24]
    44fc:	sturh	w27, [x29, #-8]
    4500:	mov	w27, #0x18                  	// #24
    4504:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    4508:	add	x0, sp, #0x28
    450c:	add	x2, sp, #0x10
    4510:	mov	x1, x24
    4514:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4518:	mov	x22, x0
    451c:	b	45dc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x294>
    4520:	mov	x0, x22
    4524:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    4528:	mov	x8, xzr
    452c:	sub	x8, x8, w0, uxtw
    4530:	b	4538 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1f0>
    4534:	mov	x8, xzr
    4538:	mov	x0, x22
    453c:	madd	x23, x8, x27, x23
    4540:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4544:	ldr	w8, [x22, #20]
    4548:	mov	w9, w0
    454c:	mneg	x9, x9, x27
    4550:	add	x9, x23, x9
    4554:	and	x8, x8, #0xfffffff
    4558:	mneg	x8, x8, x27
    455c:	add	x8, x22, x8
    4560:	sub	x8, x9, x8
    4564:	mov	w9, #0xaaab                	// #43691
    4568:	lsr	x8, x8, #3
    456c:	movk	w9, #0xaaaa, lsl #16
    4570:	mul	w8, w8, w9
    4574:	cmp	w8, #0x1
    4578:	b.ne	4688 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x340>  // b.any
    457c:	mov	x0, x21
    4580:	mov	w1, wzr
    4584:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4588:	ldr	x1, [x0]
    458c:	mov	x23, x0
    4590:	sub	x0, x29, #0x30
    4594:	bl	68d4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    4598:	mov	x22, x0
    459c:	mov	w0, #0x40                  	// #64
    45a0:	mov	w1, #0x2                   	// #2
    45a4:	bl	0 <_ZN4llvm4UsernwEmj>
    45a8:	mov	x1, x23
    45ac:	mov	x2, x22
    45b0:	mov	w3, wzr
    45b4:	mov	x4, xzr
    45b8:	mov	x24, x0
    45bc:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    45c0:	mov	w8, #0x101                 	// #257
    45c4:	add	x0, sp, #0x28
    45c8:	sub	x2, x29, #0x18
    45cc:	mov	x1, x24
    45d0:	stp	xzr, xzr, [x29, #-24]
    45d4:	sturh	w8, [x29, #-8]
    45d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45dc:	mov	x0, x21
    45e0:	mov	x1, x22
    45e4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    45e8:	mov	x0, x21
    45ec:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    45f0:	ldr	x1, [sp, #40]
    45f4:	cbz	x1, 43a4 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x5c>
    45f8:	add	x0, sp, #0x28
    45fc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4600:	b	43a4 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x5c>
    4604:	cbnz	x20, 4610 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x2c8>
    4608:	ldr	x8, [sp, #8]
    460c:	str	wzr, [x8, #144]
    4610:	ldp	x20, x19, [sp, #240]
    4614:	ldp	x22, x21, [sp, #224]
    4618:	ldp	x24, x23, [sp, #208]
    461c:	ldp	x26, x25, [sp, #192]
    4620:	ldp	x28, x27, [sp, #176]
    4624:	ldp	x29, x30, [sp, #160]
    4628:	add	sp, sp, #0x100
    462c:	ret
    4630:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4634:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4638:	add	x0, x0, #0x0
    463c:	add	x1, x1, #0x0
    4640:	mov	w2, #0x46a                 	// #1130
    4644:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4648:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    464c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4650:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4654:	add	x0, x0, #0x0
    4658:	add	x1, x1, #0x0
    465c:	add	x3, x3, #0x0
    4660:	mov	w2, #0x5b                  	// #91
    4664:	bl	0 <__assert_fail>
    4668:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    466c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4670:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4674:	add	x0, x0, #0x0
    4678:	add	x1, x1, #0x0
    467c:	add	x3, x3, #0x0
    4680:	mov	w2, #0x101                 	// #257
    4684:	bl	0 <__assert_fail>
    4688:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    468c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4690:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4694:	add	x0, x0, #0x0
    4698:	add	x1, x1, #0x0
    469c:	add	x3, x3, #0x0
    46a0:	mov	w2, #0x21b                 	// #539
    46a4:	bl	0 <__assert_fail>

00000000000046a8 <_ZL16postSplitCleanupRN4llvm8FunctionE>:
    46a8:	sub	sp, sp, #0x80
    46ac:	stp	x29, x30, [sp, #96]
    46b0:	str	x19, [sp, #112]
    46b4:	add	x29, sp, #0x60
    46b8:	mov	x1, xzr
    46bc:	mov	x2, xzr
    46c0:	mov	x19, x0
    46c4:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    46c8:	mov	x0, x19
    46cc:	mov	x1, xzr
    46d0:	bl	0 <_ZN4llvm14verifyFunctionERKNS_8FunctionEPNS_11raw_ostreamE>
    46d4:	ldr	x1, [x19, #40]
    46d8:	sub	x0, x29, #0x18
    46dc:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
    46e0:	bl	0 <_ZN4llvm14createSCCPPassEv>
    46e4:	mov	x1, x0
    46e8:	sub	x0, x29, #0x18
    46ec:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    46f0:	add	x5, sp, #0x28
    46f4:	mov	w0, #0x1                   	// #1
    46f8:	mov	w3, #0x1                   	// #1
    46fc:	mov	w1, wzr
    4700:	mov	w2, wzr
    4704:	mov	w4, wzr
    4708:	str	xzr, [sp, #56]
    470c:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    4710:	mov	x1, x0
    4714:	sub	x0, x29, #0x18
    4718:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    471c:	ldr	x8, [sp, #56]
    4720:	cbz	x8, 4734 <_ZL16postSplitCleanupRN4llvm8FunctionE+0x8c>
    4724:	add	x0, sp, #0x28
    4728:	add	x1, sp, #0x28
    472c:	mov	w2, #0x3                   	// #3
    4730:	blr	x8
    4734:	mov	w0, wzr
    4738:	bl	0 <_ZN4llvm18createEarlyCSEPassEb>
    473c:	mov	x1, x0
    4740:	sub	x0, x29, #0x18
    4744:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4748:	add	x5, sp, #0x8
    474c:	mov	w0, #0x1                   	// #1
    4750:	mov	w3, #0x1                   	// #1
    4754:	mov	w1, wzr
    4758:	mov	w2, wzr
    475c:	mov	w4, wzr
    4760:	str	xzr, [sp, #24]
    4764:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    4768:	mov	x1, x0
    476c:	sub	x0, x29, #0x18
    4770:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4774:	ldr	x8, [sp, #24]
    4778:	cbz	x8, 478c <_ZL16postSplitCleanupRN4llvm8FunctionE+0xe4>
    477c:	add	x0, sp, #0x8
    4780:	add	x1, sp, #0x8
    4784:	mov	w2, #0x3                   	// #3
    4788:	blr	x8
    478c:	sub	x0, x29, #0x18
    4790:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
    4794:	sub	x0, x29, #0x18
    4798:	mov	x1, x19
    479c:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
    47a0:	sub	x0, x29, #0x18
    47a4:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
    47a8:	sub	x0, x29, #0x18
    47ac:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
    47b0:	ldr	x19, [sp, #112]
    47b4:	ldp	x29, x30, [sp, #96]
    47b8:	add	sp, sp, #0x80
    47bc:	ret

00000000000047c0 <_ZN12_GLOBAL__N_124PrettyStackTraceFunctionD0Ev>:
    47c0:	stp	x29, x30, [sp, #-32]!
    47c4:	str	x19, [sp, #16]
    47c8:	mov	x29, sp
    47cc:	mov	x19, x0
    47d0:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
    47d4:	mov	x0, x19
    47d8:	ldr	x19, [sp, #16]
    47dc:	ldp	x29, x30, [sp], #32
    47e0:	b	0 <_ZdlPv>

00000000000047e4 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE>:
    47e4:	stp	x29, x30, [sp, #-32]!
    47e8:	stp	x20, x19, [sp, #16]
    47ec:	mov	x29, sp
    47f0:	ldp	x9, x8, [x1, #16]
    47f4:	mov	x19, x1
    47f8:	mov	x20, x0
    47fc:	sub	x9, x9, x8
    4800:	cmp	x9, #0x19
    4804:	b.hi	4820 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x3c>  // b.pmore
    4808:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    480c:	add	x1, x1, #0x0
    4810:	mov	w2, #0x1a                  	// #26
    4814:	mov	x0, x19
    4818:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    481c:	b	4844 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x60>
    4820:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4824:	add	x9, x9, #0x0
    4828:	ldur	q0, [x9, #10]
    482c:	ldr	q1, [x9]
    4830:	stur	q0, [x8, #10]
    4834:	str	q1, [x8]
    4838:	ldr	x8, [x19, #24]
    483c:	add	x8, x8, #0x1a
    4840:	str	x8, [x19, #24]
    4844:	ldr	x0, [x20, #16]
    4848:	mov	x1, x19
    484c:	mov	w2, wzr
    4850:	ldr	x3, [x0, #40]
    4854:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    4858:	ldp	x9, x8, [x19, #16]
    485c:	cmp	x9, x8
    4860:	b.ne	4880 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x9c>  // b.any
    4864:	mov	x0, x19
    4868:	ldp	x20, x19, [sp, #16]
    486c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4870:	add	x1, x1, #0x0
    4874:	mov	w2, #0x1                   	// #1
    4878:	ldp	x29, x30, [sp], #32
    487c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4880:	mov	w9, #0xa                   	// #10
    4884:	strb	w9, [x8]
    4888:	ldr	x8, [x19, #24]
    488c:	add	x8, x8, #0x1
    4890:	str	x8, [x19, #24]
    4894:	ldp	x20, x19, [sp, #16]
    4898:	ldp	x29, x30, [sp], #32
    489c:	ret

00000000000048a0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>:
    48a0:	sub	sp, sp, #0x120
    48a4:	stp	x29, x30, [sp, #224]
    48a8:	stp	x28, x23, [sp, #240]
    48ac:	stp	x22, x21, [sp, #256]
    48b0:	stp	x20, x19, [sp, #272]
    48b4:	add	x29, sp, #0xe0
    48b8:	mov	x20, x0
    48bc:	stp	x0, xzr, [sp, #8]
    48c0:	add	x8, sp, #0x8
    48c4:	mov	w9, #0x80                  	// #128
    48c8:	mov	w0, #0x2000                	// #8192
    48cc:	mov	x19, x2
    48d0:	stp	x1, x2, [sp, #24]
    48d4:	str	w3, [sp, #40]
    48d8:	str	xzr, [sp, #48]
    48dc:	add	x21, x8, #0x28
    48e0:	str	w9, [sp, #72]
    48e4:	bl	0 <_Znwm>
    48e8:	str	x0, [sp, #56]
    48ec:	mov	x0, x21
    48f0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48f4:	mov	x0, x20
    48f8:	strb	wzr, [sp, #80]
    48fc:	strb	wzr, [sp, #112]
    4900:	bl	0 <_ZNK4llvm8Function10getContextEv>
    4904:	mov	w8, #0x200                 	// #512
    4908:	stp	x0, xzr, [sp, #152]
    490c:	str	wzr, [sp, #168]
    4910:	strb	wzr, [sp, #174]
    4914:	stp	xzr, xzr, [sp, #136]
    4918:	str	xzr, [sp, #128]
    491c:	stp	xzr, xzr, [sp, #176]
    4920:	stp	xzr, xzr, [sp, #208]
    4924:	strh	w8, [sp, #172]
    4928:	str	xzr, [sp, #200]
    492c:	ldr	w8, [x19, #168]
    4930:	cbnz	w8, 4a70 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1d0>
    4934:	add	x0, sp, #0x8
    4938:	add	x20, sp, #0x8
    493c:	bl	4ab0 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    4940:	ldr	x19, [sp, #16]
    4944:	cbz	x19, 4a90 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1f0>
    4948:	ldr	x1, [sp, #128]
    494c:	cbz	x1, 4958 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xb8>
    4950:	add	x0, x20, #0x78
    4954:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4958:	ldrb	w8, [sp, #112]
    495c:	cbz	w8, 49c0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x120>
    4960:	ldr	w8, [sp, #104]
    4964:	cbz	w8, 49a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x108>
    4968:	ldr	x9, [sp, #88]
    496c:	lsl	x21, x8, #4
    4970:	add	x20, x9, #0x8
    4974:	b	4984 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xe4>
    4978:	subs	x21, x21, #0x10
    497c:	add	x20, x20, #0x10
    4980:	b.eq	49a8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x108>  // b.none
    4984:	ldur	x8, [x20, #-8]
    4988:	orr	x8, x8, #0x4
    498c:	cmn	x8, #0x4
    4990:	b.eq	4978 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xd8>  // b.none
    4994:	ldr	x1, [x20]
    4998:	cbz	x1, 4978 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xd8>
    499c:	mov	x0, x20
    49a0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    49a4:	b	4978 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xd8>
    49a8:	ldr	x0, [sp, #88]
    49ac:	bl	0 <_ZdlPv>
    49b0:	ldr	x8, [sp, #80]
    49b4:	strb	wzr, [sp, #112]
    49b8:	add	x8, x8, #0x1
    49bc:	str	x8, [sp, #80]
    49c0:	ldr	w8, [sp, #72]
    49c4:	cbz	w8, 4a4c <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1ac>
    49c8:	ldr	x9, [sp, #56]
    49cc:	mov	w23, #0x101                 	// #257
    49d0:	lsl	x21, x8, #6
    49d4:	mov	w22, #0x1                   	// #1
    49d8:	add	x20, x9, #0x28
    49dc:	movk	w23, #0x1, lsl #16
    49e0:	b	49f8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x158>
    49e4:	sub	x0, x20, #0x20
    49e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    49ec:	subs	x21, x21, #0x40
    49f0:	add	x20, x20, #0x40
    49f4:	b.eq	4a4c <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1ac>  // b.none
    49f8:	ldur	x8, [x20, #-16]
    49fc:	orr	x9, x8, #0x8
    4a00:	cmn	x9, #0x8
    4a04:	b.eq	4a30 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x190>  // b.none
    4a08:	ldr	x9, [x20, #16]
    4a0c:	add	x9, x9, #0x10
    4a10:	cmp	x9, #0x10
    4a14:	b.hi	4a24 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x184>  // b.pmore
    4a18:	lsl	x9, x22, x9
    4a1c:	tst	x9, x23
    4a20:	b.ne	4a30 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x190>  // b.any
    4a24:	mov	x0, x20
    4a28:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    4a2c:	ldur	x8, [x20, #-16]
    4a30:	add	x8, x8, #0x10
    4a34:	cmp	x8, #0x10
    4a38:	b.hi	49e4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x144>  // b.pmore
    4a3c:	lsl	x8, x22, x8
    4a40:	tst	x8, x23
    4a44:	b.ne	49ec <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x14c>  // b.any
    4a48:	b	49e4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x144>
    4a4c:	ldr	x0, [sp, #56]
    4a50:	bl	0 <_ZdlPv>
    4a54:	mov	x0, x19
    4a58:	ldp	x20, x19, [sp, #272]
    4a5c:	ldp	x22, x21, [sp, #256]
    4a60:	ldp	x28, x23, [sp, #240]
    4a64:	ldp	x29, x30, [sp, #224]
    4a68:	add	sp, sp, #0x120
    4a6c:	ret
    4a70:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a74:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a78:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a7c:	add	x0, x0, #0x0
    4a80:	add	x1, x1, #0x0
    4a84:	add	x3, x3, #0x0
    4a88:	mov	w2, #0x71                  	// #113
    4a8c:	bl	0 <__assert_fail>
    4a90:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a94:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a98:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a9c:	add	x0, x0, #0x0
    4aa0:	add	x1, x1, #0x0
    4aa4:	add	x3, x3, #0x0
    4aa8:	mov	w2, #0x81                  	// #129
    4aac:	bl	0 <__assert_fail>

0000000000004ab0 <_ZN12_GLOBAL__N_110CoroCloner6createEv>:
    4ab0:	sub	sp, sp, #0x150
    4ab4:	stp	x29, x30, [sp, #240]
    4ab8:	stp	x28, x27, [sp, #256]
    4abc:	stp	x26, x25, [sp, #272]
    4ac0:	stp	x24, x23, [sp, #288]
    4ac4:	stp	x22, x21, [sp, #304]
    4ac8:	stp	x20, x19, [sp, #320]
    4acc:	add	x29, sp, #0xf0
    4ad0:	ldr	x8, [x0, #8]
    4ad4:	mov	x19, x0
    4ad8:	cbnz	x8, 4af4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x44>
    4adc:	ldr	x0, [x19]
    4ae0:	ldp	x2, x1, [x19, #16]
    4ae4:	ldr	x8, [x0, #40]
    4ae8:	add	x3, x8, #0x18
    4aec:	bl	5f98 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>
    4af0:	str	x0, [x19, #8]
    4af4:	ldr	x20, [x19]
    4af8:	ldrb	w8, [x20, #18]
    4afc:	tbnz	w8, #0, 4b0c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x5c>
    4b00:	ldr	x23, [x20, #88]
    4b04:	mov	x8, x23
    4b08:	b	4b34 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x84>
    4b0c:	mov	x0, x20
    4b10:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    4b14:	ldrb	w8, [x20, #18]
    4b18:	ldr	x23, [x20, #88]
    4b1c:	tbnz	w8, #0, 4b28 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x78>
    4b20:	mov	x8, x23
    4b24:	b	4b34 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x84>
    4b28:	mov	x0, x20
    4b2c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    4b30:	ldr	x8, [x20, #88]
    4b34:	ldr	x9, [x20, #96]
    4b38:	mov	w10, #0x28                  	// #40
    4b3c:	madd	x24, x9, x10, x8
    4b40:	cmp	x24, x23
    4b44:	b.eq	4bdc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12c>  // b.none
    4b48:	mov	w26, #0x101                 	// #257
    4b4c:	add	x20, x19, #0x28
    4b50:	mov	w25, #0x1                   	// #1
    4b54:	movk	w26, #0x1, lsl #16
    4b58:	b	4b70 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc0>
    4b5c:	mov	x0, x21
    4b60:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    4b64:	add	x23, x23, #0x28
    4b68:	cmp	x24, x23
    4b6c:	b.eq	4bdc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12c>  // b.none
    4b70:	ldr	x0, [x23]
    4b74:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    4b78:	mov	x22, x0
    4b7c:	add	x1, sp, #0x8
    4b80:	mov	x0, x20
    4b84:	str	x23, [sp, #8]
    4b88:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b8c:	ldr	x8, [x0, #16]
    4b90:	cmp	x8, x22
    4b94:	b.eq	4b64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb4>  // b.none
    4b98:	add	x8, x8, #0x10
    4b9c:	mov	x21, x0
    4ba0:	cmp	x8, #0x10
    4ba4:	b.hi	4bb4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x104>  // b.pmore
    4ba8:	lsl	x8, x25, x8
    4bac:	tst	x8, x26
    4bb0:	b.ne	4bbc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10c>  // b.any
    4bb4:	mov	x0, x21
    4bb8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    4bbc:	add	x8, x22, #0x10
    4bc0:	cmp	x8, #0x10
    4bc4:	str	x22, [x21, #16]
    4bc8:	b.hi	4b5c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xac>  // b.pmore
    4bcc:	lsl	x8, x25, x8
    4bd0:	tst	x8, x26
    4bd4:	b.ne	4b64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb4>  // b.any
    4bd8:	b	4b5c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xac>
    4bdc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4be0:	ldr	d0, [x8]
    4be4:	sub	x8, x29, #0x70
    4be8:	add	x8, x8, #0x10
    4bec:	stur	x8, [x29, #-112]
    4bf0:	stur	d0, [x29, #-104]
    4bf4:	ldr	x8, [x19, #8]
    4bf8:	add	x20, x19, #0x28
    4bfc:	adrp	x5, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4c00:	add	x5, x5, #0x0
    4c04:	ldr	w21, [x8, #32]
    4c08:	sub	x4, x29, #0x70
    4c0c:	mov	w3, #0x1                   	// #1
    4c10:	mov	x2, x20
    4c14:	and	w9, w21, #0xfffffff0
    4c18:	tst	w21, #0x30
    4c1c:	orr	w10, w9, #0x4000
    4c20:	csel	w9, w9, w10, eq  // eq = none
    4c24:	str	w9, [x8, #32]
    4c28:	ldp	x1, x0, [x19]
    4c2c:	mov	x6, xzr
    4c30:	mov	x7, xzr
    4c34:	ubfx	w22, w21, #4, #2
    4c38:	and	w23, w21, #0xf
    4c3c:	str	xzr, [sp]
    4c40:	bl	0 <_ZN4llvm17CloneFunctionIntoEPNS_8FunctionEPKS0_RNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS7_NS_3sys10SmartMutexILb0EEEEEEEbRNS_15SmallVectorImplIPNS_10ReturnInstEEEPKcPNS_14ClonedCodeInfoEPNS_20ValueMapTypeRemapperEPNS_17ValueMaterializerE>
    4c44:	ldr	x8, [x19, #8]
    4c48:	sub	w9, w23, #0x7
    4c4c:	cmp	w9, #0x1
    4c50:	ldr	w10, [x8, #32]
    4c54:	b.hi	4c68 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b8>  // b.pmore
    4c58:	and	w9, w10, #0xffffffc0
    4c5c:	orr	w9, w9, w23
    4c60:	str	w9, [x8, #32]
    4c64:	b	4c80 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1d0>
    4c68:	and	w9, w10, #0xfffffff0
    4c6c:	cmp	w23, #0x9
    4c70:	orr	w9, w9, w23
    4c74:	b.eq	4c84 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1d4>  // b.none
    4c78:	and	w10, w10, #0x30
    4c7c:	cbz	w10, 4c84 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1d4>
    4c80:	orr	w9, w9, #0x4000
    4c84:	str	w9, [x8, #32]
    4c88:	ldr	x8, [x19, #8]
    4c8c:	ldr	w9, [x8, #32]
    4c90:	and	w11, w9, #0xf
    4c94:	sub	w10, w11, #0x7
    4c98:	cbz	w22, 4ca4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1f4>
    4c9c:	cmp	w10, #0x2
    4ca0:	b.cc	5cb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1200>  // b.lo, b.ul, b.last
    4ca4:	cmp	w11, #0x9
    4ca8:	bfi	w9, w22, #4, #2
    4cac:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4cb0:	ccmp	w10, #0x1, #0x0, eq  // eq = none
    4cb4:	orr	w10, w9, #0x4000
    4cb8:	csel	w9, w9, w10, hi  // hi = pmore
    4cbc:	str	w9, [x8, #32]
    4cc0:	ldr	x8, [x19, #8]
    4cc4:	and	w10, w21, #0xc0
    4cc8:	ldr	w9, [x8, #32]
    4ccc:	and	w9, w9, #0xffffff3f
    4cd0:	orr	w9, w9, w10
    4cd4:	str	w9, [x8, #32]
    4cd8:	ldr	x8, [x19, #8]
    4cdc:	and	w10, w21, #0x300
    4ce0:	ldr	w9, [x8, #32]
    4ce4:	and	w9, w9, #0xfffffcff
    4ce8:	orr	w9, w9, w10
    4cec:	str	w9, [x8, #32]
    4cf0:	ldr	x0, [x19, #8]
    4cf4:	bl	0 <_ZNK4llvm8Function10getContextEv>
    4cf8:	ldr	x8, [x19, #8]
    4cfc:	mov	x21, x0
    4d00:	ldr	x8, [x8, #112]
    4d04:	stp	xzr, x8, [sp, #112]
    4d08:	ldr	x8, [x19, #24]
    4d0c:	ldr	w9, [x8, #168]
    4d10:	sub	w10, w9, #0x1
    4d14:	cmp	w10, #0x2
    4d18:	b.cs	4d2c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x27c>  // b.hs, b.nlast
    4d1c:	ldr	x8, [x8, #200]
    4d20:	ldr	x8, [x8, #112]
    4d24:	str	x8, [sp, #112]
    4d28:	b	4d6c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2bc>
    4d2c:	cbnz	w9, 4d6c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2bc>
    4d30:	add	x0, sp, #0x78
    4d34:	bl	0 <_ZNK4llvm13AttributeList15getFnAttributesEv>
    4d38:	mov	x1, x0
    4d3c:	add	x0, sp, #0x8
    4d40:	add	x22, sp, #0x8
    4d44:	bl	0 <_ZN4llvm11AttrBuilderC1ENS_12AttributeSetE>
    4d48:	add	x0, sp, #0x70
    4d4c:	add	x3, sp, #0x8
    4d50:	mov	w2, #0xffffffff            	// #-1
    4d54:	mov	x1, x21
    4d58:	bl	0 <_ZNK4llvm13AttributeList13addAttributesERNS_11LLVMContextEjRKNS_11AttrBuilderE>
    4d5c:	ldr	x1, [sp, #40]
    4d60:	str	x0, [sp, #112]
    4d64:	add	x0, x22, #0x10
    4d68:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4d6c:	add	x0, sp, #0x70
    4d70:	mov	w2, #0x1                   	// #1
    4d74:	mov	w3, #0x23                  	// #35
    4d78:	mov	x1, x21
    4d7c:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    4d80:	str	x0, [sp, #112]
    4d84:	add	x0, sp, #0x70
    4d88:	mov	w2, #0x1                   	// #1
    4d8c:	mov	w3, #0x15                  	// #21
    4d90:	mov	x1, x21
    4d94:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    4d98:	str	x0, [sp, #112]
    4d9c:	ldr	x8, [x19, #24]
    4da0:	ldr	w8, [x8, #168]
    4da4:	orr	w8, w8, #0x2
    4da8:	cmp	w8, #0x2
    4dac:	b.ne	4de4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x334>  // b.any
    4db0:	ldur	w8, [x29, #-104]
    4db4:	cbz	w8, 4de4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x334>
    4db8:	ldur	x21, [x29, #-112]
    4dbc:	lsl	x22, x8, #3
    4dc0:	ldr	x0, [x21], #8
    4dc4:	mov	w1, wzr
    4dc8:	mov	w2, wzr
    4dcc:	mov	x3, xzr
    4dd0:	mov	x4, xzr
    4dd4:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    4dd8:	subs	x22, x22, #0x8
    4ddc:	b.ne	4dc0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x310>  // b.any
    4de0:	ldr	x0, [sp, #112]
    4de4:	ldr	x8, [x19, #8]
    4de8:	str	x0, [x8, #112]
    4dec:	ldr	x8, [x19, #24]
    4df0:	ldr	x9, [x19, #8]
    4df4:	ldr	w10, [x8, #168]
    4df8:	sub	w11, w10, #0x1
    4dfc:	cmp	w11, #0x2
    4e00:	b.cs	4e14 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x364>  // b.hs, b.nlast
    4e04:	ldr	x10, [x8, #200]
    4e08:	ldrh	w10, [x10, #18]
    4e0c:	and	w10, w10, #0x3ff0
    4e10:	b	4e1c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x36c>
    4e14:	cbnz	w10, 5cd0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1220>
    4e18:	mov	w10, #0x80                  	// #128
    4e1c:	ldrh	w11, [x9, #18]
    4e20:	add	x1, sp, #0x8
    4e24:	mov	x0, x20
    4e28:	and	w11, w11, #0xffffc00f
    4e2c:	orr	w10, w11, w10
    4e30:	strh	w10, [x9, #18]
    4e34:	ldr	x8, [x8, #192]
    4e38:	str	x8, [sp, #8]
    4e3c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4e40:	ldr	x22, [x0, #16]
    4e44:	cbz	x22, 5c70 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11c0>
    4e48:	ldrb	w8, [x22, #16]
    4e4c:	cmp	w8, #0x12
    4e50:	b.ne	5c90 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11e0>  // b.any
    4e54:	ldr	x8, [x19, #16]
    4e58:	ldrb	w9, [x8, #16]
    4e5c:	cmp	w9, #0x1
    4e60:	b.eq	4e78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3c8>  // b.none
    4e64:	cbnz	w9, 4ea0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3f0>
    4e68:	mov	w8, #0x100                 	// #256
    4e6c:	stp	xzr, xzr, [sp, #8]
    4e70:	strh	w8, [sp, #24]
    4e74:	b	4eec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x43c>
    4e78:	ldur	w10, [x29, #-32]
    4e7c:	ldurh	w11, [x29, #-28]
    4e80:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4e84:	add	x8, x8, #0x0
    4e88:	mov	w9, #0x103                 	// #259
    4e8c:	stp	x8, xzr, [sp, #8]
    4e90:	strh	w9, [sp, #24]
    4e94:	stur	w10, [sp, #26]
    4e98:	strh	w11, [sp, #30]
    4e9c:	b	4eec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x43c>
    4ea0:	ldrb	w10, [x8, #17]
    4ea4:	cmp	w10, #0x1
    4ea8:	b.ne	4eb4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x404>  // b.any
    4eac:	ldr	x8, [x8]
    4eb0:	b	4eb8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x408>
    4eb4:	mov	w9, #0x2                   	// #2
    4eb8:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ebc:	add	x10, x10, #0x0
    4ec0:	mov	w11, #0x3                   	// #3
    4ec4:	cmp	w9, #0x2
    4ec8:	stp	x10, x8, [sp, #8]
    4ecc:	strb	w11, [sp, #24]
    4ed0:	strb	w9, [sp, #25]
    4ed4:	b.ne	4eec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x43c>  // b.any
    4ed8:	ldrb	w9, [x8, #16]
    4edc:	cbz	w9, 5e98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x13e8>
    4ee0:	ldrb	w8, [x8, #17]
    4ee4:	cmp	w8, #0x1
    4ee8:	b.eq	5e98 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x13e8>  // b.none
    4eec:	add	x1, sp, #0x8
    4ef0:	mov	x0, x22
    4ef4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    4ef8:	ldr	x8, [x19, #8]
    4efc:	ldr	x8, [x8, #80]
    4f00:	ldrb	w9, [x8]
    4f04:	tbnz	w9, #2, 5bf0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1140>
    4f08:	sub	x9, x8, #0x18
    4f0c:	cmp	x8, #0x0
    4f10:	csel	x1, xzr, x9, eq  // eq = none
    4f14:	mov	x0, x22
    4f18:	bl	0 <_ZN4llvm10BasicBlock10moveBeforeEPS0_>
    4f1c:	mov	x0, x22
    4f20:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4f24:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4f28:	mov	x0, x22
    4f2c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4f30:	ldr	x8, [x22, #8]
    4f34:	cbz	x8, 5bd0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1120>
    4f38:	ldr	x8, [x8, #8]
    4f3c:	cbnz	x8, 5bd0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1120>
    4f40:	mov	x0, x22
    4f44:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4f48:	ldr	x0, [x22, #8]
    4f4c:	cbz	x0, 5ce8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1238>
    4f50:	bl	0 <_ZNK4llvm3Use7getUserEv>
    4f54:	cbz	x0, 5d08 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1258>
    4f58:	ldrb	w8, [x0, #16]
    4f5c:	mov	x23, x0
    4f60:	cmp	w8, #0x1a
    4f64:	b.ne	5d28 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1278>  // b.any
    4f68:	ldr	w8, [x23, #20]
    4f6c:	and	w8, w8, #0xfffffff
    4f70:	cmp	w8, #0x1
    4f74:	b.ne	5d48 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1298>  // b.any
    4f78:	add	x21, x19, #0x78
    4f7c:	mov	x0, x21
    4f80:	mov	x1, x23
    4f84:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4f88:	mov	w0, #0x38                  	// #56
    4f8c:	mov	w1, wzr
    4f90:	bl	0 <_ZN4llvm4UsernwEmj>
    4f94:	ldr	x1, [x19, #144]
    4f98:	mov	x2, xzr
    4f9c:	mov	x24, x0
    4fa0:	bl	0 <_ZN4llvm15UnreachableInstC1ERNS_11LLVMContextEPNS_11InstructionE>
    4fa4:	mov	w8, #0x101                 	// #257
    4fa8:	add	x2, sp, #0x8
    4fac:	mov	x0, x21
    4fb0:	mov	x1, x24
    4fb4:	stp	xzr, xzr, [sp, #8]
    4fb8:	strh	w8, [sp, #24]
    4fbc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fc0:	mov	x0, x23
    4fc4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4fc8:	ldr	x8, [x19, #24]
    4fcc:	add	x9, x22, #0x28
    4fd0:	stp	x22, x9, [x19, #128]
    4fd4:	ldr	w9, [x8, #168]
    4fd8:	sub	w10, w9, #0x1
    4fdc:	cmp	w10, #0x2
    4fe0:	b.cs	509c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x5ec>  // b.hs, b.nlast
    4fe4:	ldr	x8, [x19, #208]
    4fe8:	add	x1, sp, #0x8
    4fec:	mov	x0, x20
    4ff0:	str	x8, [sp, #8]
    4ff4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ff8:	ldr	x8, [x0, #16]
    4ffc:	cbz	x8, 5dc0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1310>
    5000:	ldrb	w9, [x8, #16]
    5004:	cmp	w9, #0x50
    5008:	b.ne	5bb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1100>  // b.any
    500c:	ldur	x9, [x8, #-24]
    5010:	cbz	x9, 5bb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1100>
    5014:	ldrb	w10, [x9, #16]
    5018:	cbnz	w10, 5bb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1100>
    501c:	ldrb	w10, [x9, #33]
    5020:	tbz	w10, #5, 5bb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1100>
    5024:	ldr	w9, [x9, #36]
    5028:	cmp	w9, #0x24
    502c:	b.ne	5bb0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1100>  // b.any
    5030:	ldp	x8, x9, [x8, #32]
    5034:	add	x9, x9, #0x28
    5038:	cmp	x9, x8
    503c:	b.eq	5d68 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12b8>  // b.none
    5040:	ldrb	w9, [x8]
    5044:	tbnz	w9, #2, 5c50 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11a0>
    5048:	cbz	x8, 5d68 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12b8>
    504c:	ldurb	w9, [x8, #-8]
    5050:	cmp	w9, #0x1a
    5054:	b.ne	5de0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1330>  // b.any
    5058:	ldur	w9, [x8, #-4]
    505c:	and	w9, w9, #0xfffffff
    5060:	cmp	w9, #0x1
    5064:	b.ne	5e00 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1350>  // b.any
    5068:	ldur	x22, [x8, #-48]
    506c:	cbz	x22, 50c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x618>
    5070:	ldrb	w8, [x22, #16]
    5074:	cmp	w8, #0x12
    5078:	b.eq	50c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x618>  // b.none
    507c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5080:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5084:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5088:	add	x0, x0, #0x0
    508c:	add	x1, x1, #0x0
    5090:	add	x3, x3, #0x0
    5094:	mov	w2, #0x134                 	// #308
    5098:	bl	0 <__assert_fail>
    509c:	cbnz	w9, 5100 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x650>
    50a0:	ldr	x8, [x8, #216]
    50a4:	add	x1, sp, #0x8
    50a8:	mov	x0, x20
    50ac:	str	x8, [sp, #8]
    50b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    50b4:	ldr	x22, [x0, #16]
    50b8:	cbz	x22, 5c70 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11c0>
    50bc:	ldrb	w8, [x22, #16]
    50c0:	cmp	w8, #0x12
    50c4:	b.ne	5c90 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11e0>  // b.any
    50c8:	mov	w0, #0x38                  	// #56
    50cc:	mov	w1, #0x1                   	// #1
    50d0:	bl	0 <_ZN4llvm4UsernwEmj>
    50d4:	mov	x1, x22
    50d8:	mov	x2, xzr
    50dc:	mov	x23, x0
    50e0:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
    50e4:	mov	w8, #0x101                 	// #257
    50e8:	add	x2, sp, #0x8
    50ec:	mov	x0, x21
    50f0:	mov	x1, x23
    50f4:	stp	xzr, xzr, [sp, #8]
    50f8:	strh	w8, [sp, #24]
    50fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5100:	ldr	x8, [x19, #8]
    5104:	ldr	x8, [x8, #80]
    5108:	ldrb	w9, [x8]
    510c:	tbnz	w9, #2, 5bf0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1140>
    5110:	sub	x9, x8, #0x18
    5114:	cmp	x8, #0x0
    5118:	csel	x8, xzr, x9, eq  // eq = none
    511c:	ldr	x8, [x8, #48]
    5120:	ldrb	w9, [x8]
    5124:	tbnz	w9, #2, 5c50 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11a0>
    5128:	sub	x9, x8, #0x18
    512c:	cmp	x8, #0x0
    5130:	csel	x1, xzr, x9, eq  // eq = none
    5134:	mov	x0, x21
    5138:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    513c:	ldr	x8, [x19, #24]
    5140:	ldr	w9, [x8, #168]
    5144:	sub	w10, w9, #0x1
    5148:	cmp	w10, #0x2
    514c:	b.cs	51e0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x730>  // b.hs, b.nlast
    5150:	ldr	x22, [x19, #8]
    5154:	ldrb	w9, [x22, #18]
    5158:	tbz	w9, #0, 5168 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x6b8>
    515c:	mov	x0, x22
    5160:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5164:	ldr	x8, [x19, #24]
    5168:	ldr	x0, [x8, #176]
    516c:	ldr	x22, [x22, #88]
    5170:	mov	w1, wzr
    5174:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5178:	ldr	x8, [x19, #24]
    517c:	mov	x2, x0
    5180:	ldrb	w8, [x8, #232]
    5184:	cbz	w8, 5200 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x750>
    5188:	mov	w8, #0x101                 	// #257
    518c:	stp	xzr, xzr, [x29, #-32]
    5190:	sturh	w8, [x29, #-16]
    5194:	ldr	x8, [x22]
    5198:	cmp	x8, x2
    519c:	b.eq	52f4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x844>  // b.none
    51a0:	ldrb	w8, [x22, #16]
    51a4:	cmp	w8, #0x10
    51a8:	b.ls	5268 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7b8>  // b.plast
    51ac:	mov	w8, #0x101                 	// #257
    51b0:	add	x3, sp, #0x8
    51b4:	mov	w0, #0x31                  	// #49
    51b8:	mov	x1, x22
    51bc:	mov	x4, xzr
    51c0:	stp	xzr, xzr, [sp, #8]
    51c4:	strh	w8, [sp, #24]
    51c8:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    51cc:	mov	x1, x0
    51d0:	sub	x2, x29, #0x20
    51d4:	mov	x0, x21
    51d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    51dc:	b	52f0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x840>
    51e0:	cbnz	w9, 5d88 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12d8>
    51e4:	ldr	x22, [x19, #8]
    51e8:	ldrb	w8, [x22, #18]
    51ec:	tbz	w8, #0, 51f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x748>
    51f0:	mov	x0, x22
    51f4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    51f8:	ldr	x22, [x22, #88]
    51fc:	b	52f4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x844>
    5200:	mov	x0, x2
    5204:	mov	w1, wzr
    5208:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    520c:	mov	w23, #0x101                 	// #257
    5210:	stp	xzr, xzr, [x29, #-32]
    5214:	sturh	w23, [x29, #-16]
    5218:	ldr	x8, [x22]
    521c:	cmp	x8, x0
    5220:	b.eq	5290 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7e0>  // b.none
    5224:	ldrb	w8, [x22, #16]
    5228:	mov	x2, x0
    522c:	cmp	w8, #0x10
    5230:	b.ls	527c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7cc>  // b.plast
    5234:	mov	w8, #0x101                 	// #257
    5238:	add	x3, sp, #0x8
    523c:	mov	w0, #0x31                  	// #49
    5240:	mov	x1, x22
    5244:	mov	x4, xzr
    5248:	stp	xzr, xzr, [sp, #8]
    524c:	strh	w8, [sp, #24]
    5250:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    5254:	mov	x1, x0
    5258:	sub	x2, x29, #0x20
    525c:	mov	x0, x21
    5260:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5264:	b	528c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7dc>
    5268:	mov	w0, #0x31                  	// #49
    526c:	mov	x1, x22
    5270:	mov	w3, wzr
    5274:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    5278:	b	52f0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x840>
    527c:	mov	w0, #0x31                  	// #49
    5280:	mov	x1, x22
    5284:	mov	w3, wzr
    5288:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    528c:	mov	x22, x0
    5290:	stp	xzr, xzr, [x29, #-32]
    5294:	sturh	w23, [x29, #-16]
    5298:	ldr	x8, [x22]
    529c:	ldrb	w9, [x8, #8]
    52a0:	cmp	w9, #0xf
    52a4:	b.ne	5ef8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1448>  // b.any
    52a8:	ldr	x8, [x8, #16]
    52ac:	mov	w0, #0x40                  	// #64
    52b0:	mov	w1, #0x1                   	// #1
    52b4:	ldr	x23, [x8]
    52b8:	bl	0 <_ZN4llvm4UsernwEmj>
    52bc:	mov	w8, #0x101                 	// #257
    52c0:	add	x3, sp, #0x8
    52c4:	mov	x1, x23
    52c8:	mov	x2, x22
    52cc:	mov	x4, xzr
    52d0:	mov	x24, x0
    52d4:	stp	xzr, xzr, [sp, #8]
    52d8:	strh	w8, [sp, #24]
    52dc:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    52e0:	sub	x2, x29, #0x20
    52e4:	mov	x0, x21
    52e8:	mov	x1, x24
    52ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    52f0:	mov	x22, x0
    52f4:	ldr	x8, [x19, #24]
    52f8:	str	x22, [x19, #192]
    52fc:	add	x1, sp, #0x8
    5300:	mov	x0, x20
    5304:	ldr	x8, [x8, #184]
    5308:	str	x8, [sp, #8]
    530c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5310:	ldr	x22, [x0, #16]
    5314:	ldr	x0, [x19, #192]
    5318:	mov	x1, x22
    531c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    5320:	ldr	x1, [x19, #192]
    5324:	mov	x0, x22
    5328:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    532c:	ldr	x0, [x19, #144]
    5330:	ldr	x22, [x19, #192]
    5334:	mov	w1, wzr
    5338:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    533c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5340:	add	x8, x8, #0x0
    5344:	mov	w9, #0x103                 	// #259
    5348:	stp	x8, xzr, [x29, #-32]
    534c:	sturh	w9, [x29, #-16]
    5350:	ldr	x8, [x22]
    5354:	cmp	x8, x0
    5358:	b.eq	53b4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x904>  // b.none
    535c:	ldrb	w8, [x22, #16]
    5360:	mov	x2, x0
    5364:	cmp	w8, #0x10
    5368:	b.ls	53a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8f0>  // b.plast
    536c:	mov	w8, #0x101                 	// #257
    5370:	add	x3, sp, #0x8
    5374:	mov	w0, #0x31                  	// #49
    5378:	mov	x1, x22
    537c:	mov	x4, xzr
    5380:	stp	xzr, xzr, [sp, #8]
    5384:	strh	w8, [sp, #24]
    5388:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    538c:	mov	x1, x0
    5390:	sub	x2, x29, #0x20
    5394:	mov	x0, x21
    5398:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    539c:	b	53b0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x900>
    53a0:	mov	w0, #0x31                  	// #49
    53a4:	mov	x1, x22
    53a8:	mov	w3, wzr
    53ac:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    53b0:	mov	x22, x0
    53b4:	ldr	x8, [x19, #24]
    53b8:	add	x1, sp, #0x8
    53bc:	mov	x0, x20
    53c0:	ldr	x8, [x8]
    53c4:	str	x8, [sp, #8]
    53c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    53cc:	ldr	x0, [x0, #16]
    53d0:	cbz	x0, 5da0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x12f0>
    53d4:	mov	x1, x22
    53d8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    53dc:	ldr	x8, [x19, #24]
    53e0:	ldr	w9, [x8, #168]
    53e4:	sub	w10, w9, #0x1
    53e8:	cmp	w10, #0x2
    53ec:	b.cs	548c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x9dc>  // b.hs, b.nlast
    53f0:	ldr	x8, [x19, #208]
    53f4:	cbz	x8, 5e20 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1370>
    53f8:	add	x1, sp, #0x8
    53fc:	mov	x0, x20
    5400:	str	x8, [sp, #8]
    5404:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5408:	mov	w8, #0x6                   	// #6
    540c:	stp	x8, xzr, [x29, #-32]
    5410:	ldr	x22, [x0, #16]
    5414:	add	x8, x22, #0x10
    5418:	cmp	x8, #0x10
    541c:	stur	x22, [x29, #-16]
    5420:	b.hi	543c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x98c>  // b.pmore
    5424:	mov	w9, #0x1                   	// #1
    5428:	lsl	x8, x9, x8
    542c:	mov	w9, #0x101                 	// #257
    5430:	movk	w9, #0x1, lsl #16
    5434:	tst	x8, x9
    5438:	b.ne	5450 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x9a0>  // b.any
    543c:	ldr	x8, [x0]
    5440:	sub	x0, x29, #0x20
    5444:	and	x1, x8, #0xfffffffffffffff8
    5448:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
    544c:	ldur	x22, [x29, #-16]
    5450:	mov	x0, x22
    5454:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5458:	ldr	x8, [x22, #8]
    545c:	cbz	x8, 5728 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc78>
    5460:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5464:	ldr	d0, [x8]
    5468:	add	x8, sp, #0x8
    546c:	add	x22, x8, #0x10
    5470:	str	x22, [sp, #8]
    5474:	str	d0, [sp, #16]
    5478:	ldr	x23, [x19, #8]
    547c:	ldrb	w8, [x23, #18]
    5480:	tbnz	w8, #0, 5538 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa88>
    5484:	ldr	x25, [x23, #88]
    5488:	b	555c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xaac>
    548c:	cbnz	w9, 58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>
    5490:	ldrb	w9, [x8, #224]
    5494:	cbz	w9, 58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>
    5498:	ldr	x8, [x8, #200]
    549c:	add	x1, sp, #0x8
    54a0:	mov	x0, x20
    54a4:	str	x8, [sp, #8]
    54a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    54ac:	ldr	x22, [x0, #16]
    54b0:	cbz	x22, 5f18 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1468>
    54b4:	ldrb	w8, [x22, #16]
    54b8:	cmp	w8, #0x1b
    54bc:	b.ne	5f38 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1488>  // b.any
    54c0:	ldr	w8, [x22, #20]
    54c4:	ubfx	w8, w8, #1, #27
    54c8:	sub	w8, w8, #0x1
    54cc:	cbz	w8, 5eb8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1408>
    54d0:	sub	x24, x8, #0x1
    54d4:	cmp	w8, w24
    54d8:	b.cc	5eb8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1408>  // b.lo, b.ul, b.last
    54dc:	cmn	w24, #0x2
    54e0:	b.eq	54ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa3c>  // b.none
    54e4:	cmp	w8, w24
    54e8:	b.ls	5f58 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x14a8>  // b.plast
    54ec:	cmp	w8, w24
    54f0:	mov	w8, #0xfffffffe            	// #-2
    54f4:	ccmp	w24, w8, #0x4, hi  // hi = pmore
    54f8:	csinc	w1, wzr, w24, eq  // eq = none
    54fc:	mov	x0, x22
    5500:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5504:	mov	x23, x0
    5508:	mov	x0, x22
    550c:	mov	x1, x22
    5510:	mov	x2, x24
    5514:	bl	0 <_ZN4llvm10SwitchInst10removeCaseENS0_16CaseIteratorImplINS0_10CaseHandleEEE>
    5518:	ldr	w8, [x19, #32]
    551c:	sub	w9, w8, #0x1
    5520:	cmp	w9, #0x2
    5524:	b.cc	575c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcac>  // b.lo, b.ul, b.last
    5528:	cbz	w8, 58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>
    552c:	cmp	w8, #0x3
    5530:	b.eq	58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>  // b.none
    5534:	b	5e40 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1390>
    5538:	mov	x0, x23
    553c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5540:	ldr	x24, [x19, #8]
    5544:	ldr	x25, [x23, #88]
    5548:	ldrb	w8, [x24, #18]
    554c:	tbz	w8, #0, 5558 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xaa8>
    5550:	mov	x0, x24
    5554:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5558:	mov	x23, x24
    555c:	ldp	x8, x9, [x23, #88]
    5560:	mov	w10, #0x28                  	// #40
    5564:	add	x24, x25, #0x28
    5568:	madd	x23, x9, x10, x8
    556c:	cmp	x24, x23
    5570:	b.eq	55c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb18>  // b.none
    5574:	ldp	w8, w9, [sp, #16]
    5578:	cmp	w8, w9
    557c:	b.cs	55ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xafc>  // b.hs, b.nlast
    5580:	ldr	x9, [sp, #8]
    5584:	str	x24, [x9, w8, uxtw #3]
    5588:	ldp	w8, w9, [sp, #16]
    558c:	cmp	w8, w9
    5590:	b.cs	5b50 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10a0>  // b.hs, b.nlast
    5594:	add	x24, x24, #0x28
    5598:	add	w8, w8, #0x1
    559c:	cmp	x23, x24
    55a0:	str	w8, [sp, #16]
    55a4:	b.ne	5578 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xac8>  // b.any
    55a8:	b	55c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb18>
    55ac:	add	x0, sp, #0x8
    55b0:	mov	w3, #0x8                   	// #8
    55b4:	mov	x1, x22
    55b8:	mov	x2, xzr
    55bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    55c0:	ldr	w8, [sp, #16]
    55c4:	b	5580 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xad0>
    55c8:	ldur	x22, [x29, #-16]
    55cc:	ldr	x8, [x22]
    55d0:	cbz	x8, 5ed8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1428>
    55d4:	ldrb	w8, [x8, #8]
    55d8:	cmp	w8, #0xd
    55dc:	b.ne	56ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc3c>  // b.any
    55e0:	mov	x0, x22
    55e4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    55e8:	ldr	x23, [x22, #8]
    55ec:	cbnz	x23, 5690 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbe0>
    55f0:	ldur	x22, [x29, #-16]
    55f4:	mov	x0, x22
    55f8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    55fc:	ldr	x8, [x22, #8]
    5600:	cbz	x8, 5710 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc60>
    5604:	ldur	x8, [x29, #-16]
    5608:	ldr	x0, [x8]
    560c:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    5610:	ldr	w8, [sp, #16]
    5614:	mov	x1, x0
    5618:	cbz	w8, 5704 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc54>
    561c:	mov	x22, xzr
    5620:	sub	x23, x8, #0x1
    5624:	mov	w24, #0x101                 	// #257
    5628:	ldr	x8, [sp, #8]
    562c:	sub	x3, x29, #0x24
    5630:	sub	x5, x29, #0x40
    5634:	mov	w4, #0x1                   	// #1
    5638:	ldr	x2, [x8, x22, lsl #3]
    563c:	mov	x0, x21
    5640:	stur	w22, [x29, #-36]
    5644:	stp	xzr, xzr, [x29, #-64]
    5648:	sturh	w24, [x29, #-48]
    564c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5650:	cmp	x23, x22
    5654:	mov	x1, x0
    5658:	b.eq	5704 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc54>  // b.none
    565c:	ldr	w8, [sp, #16]
    5660:	add	x22, x22, #0x1
    5664:	cmp	x22, x8
    5668:	b.cc	5628 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb78>  // b.lo, b.ul, b.last
    566c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5670:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5674:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5678:	add	x0, x0, #0x0
    567c:	add	x1, x1, #0x0
    5680:	add	x3, x3, #0x0
    5684:	mov	w2, #0x95                  	// #149
    5688:	bl	0 <__assert_fail>
    568c:	cbz	x23, 55f0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb40>
    5690:	mov	x0, x23
    5694:	ldr	x23, [x23, #8]
    5698:	bl	0 <_ZNK4llvm3Use7getUserEv>
    569c:	cbz	x0, 5b90 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10e0>
    56a0:	ldrb	w8, [x0, #16]
    56a4:	mov	x22, x0
    56a8:	cmp	w8, #0x58
    56ac:	b.ne	568c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbdc>  // b.any
    56b0:	ldr	w8, [x22, #64]
    56b4:	cmp	w8, #0x1
    56b8:	b.ne	568c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbdc>  // b.any
    56bc:	ldr	x8, [x22, #56]
    56c0:	ldr	w9, [sp, #16]
    56c4:	ldr	w8, [x8]
    56c8:	cmp	w9, w8
    56cc:	b.ls	566c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbbc>  // b.plast
    56d0:	ldr	x9, [sp, #8]
    56d4:	mov	x0, x22
    56d8:	ldr	x1, [x9, x8, lsl #3]
    56dc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    56e0:	mov	x0, x22
    56e4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    56e8:	b	568c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbdc>
    56ec:	ldr	w8, [sp, #16]
    56f0:	cmp	w8, #0x1
    56f4:	b.ne	5f78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x14c8>  // b.any
    56f8:	ldr	x8, [sp, #8]
    56fc:	ldr	x1, [x8]
    5700:	b	5708 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc58>
    5704:	ldur	x22, [x29, #-16]
    5708:	mov	x0, x22
    570c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    5710:	ldr	x0, [sp, #8]
    5714:	add	x8, sp, #0x8
    5718:	add	x8, x8, #0x10
    571c:	cmp	x0, x8
    5720:	b.eq	5728 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc78>  // b.none
    5724:	bl	0 <free>
    5728:	ldur	x8, [x29, #-16]
    572c:	add	x8, x8, #0x10
    5730:	cmp	x8, #0x10
    5734:	b.hi	5750 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xca0>  // b.pmore
    5738:	mov	w9, #0x1                   	// #1
    573c:	lsl	x8, x9, x8
    5740:	mov	w9, #0x101                 	// #257
    5744:	movk	w9, #0x1, lsl #16
    5748:	tst	x8, x9
    574c:	b.ne	58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>  // b.any
    5750:	sub	x0, x29, #0x20
    5754:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5758:	b	58a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xdf0>
    575c:	add	x1, x22, #0x18
    5760:	ldr	x22, [x22, #40]
    5764:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5768:	add	x8, x8, #0x0
    576c:	mov	w25, #0x103                 	// #259
    5770:	add	x2, sp, #0x8
    5774:	mov	x0, x22
    5778:	stp	x8, xzr, [sp, #8]
    577c:	strh	w25, [sp, #24]
    5780:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    5784:	mov	x24, x0
    5788:	mov	x0, x22
    578c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    5790:	mov	x1, x0
    5794:	mov	x0, x21
    5798:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    579c:	ldr	x8, [x19, #24]
    57a0:	ldr	x2, [x19, #192]
    57a4:	add	x5, sp, #0x8
    57a8:	mov	x0, x21
    57ac:	ldr	x1, [x8, #176]
    57b0:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    57b4:	add	x8, x8, #0x0
    57b8:	mov	w3, wzr
    57bc:	mov	w4, wzr
    57c0:	stp	x8, xzr, [sp, #8]
    57c4:	strh	w25, [sp, #24]
    57c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    57cc:	ldr	x8, [x19, #24]
    57d0:	mov	x25, x0
    57d4:	mov	x0, x8
    57d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    57dc:	mov	x26, x0
    57e0:	mov	w28, #0x101                 	// #257
    57e4:	mov	w0, #0x40                  	// #64
    57e8:	mov	w1, #0x1                   	// #1
    57ec:	stp	xzr, xzr, [x29, #-32]
    57f0:	sturh	w28, [x29, #-16]
    57f4:	bl	0 <_ZN4llvm4UsernwEmj>
    57f8:	add	x3, sp, #0x8
    57fc:	mov	x1, x26
    5800:	mov	x2, x25
    5804:	mov	x4, xzr
    5808:	mov	x27, x0
    580c:	stp	xzr, xzr, [sp, #8]
    5810:	strh	w28, [sp, #24]
    5814:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    5818:	sub	x2, x29, #0x20
    581c:	mov	x0, x21
    5820:	mov	x1, x27
    5824:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5828:	stp	xzr, xzr, [sp, #8]
    582c:	strh	w28, [sp, #24]
    5830:	mov	x25, x0
    5834:	ldr	x0, [x0]
    5838:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    583c:	mov	x3, x0
    5840:	add	x4, sp, #0x8
    5844:	mov	w1, #0x20                  	// #32
    5848:	mov	x0, x21
    584c:	mov	x2, x25
    5850:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5854:	mov	x25, x0
    5858:	mov	w0, #0x38                  	// #56
    585c:	mov	w1, #0x3                   	// #3
    5860:	bl	0 <_ZN4llvm4UsernwEmj>
    5864:	mov	x1, x23
    5868:	mov	x2, x24
    586c:	mov	x3, x25
    5870:	mov	x4, xzr
    5874:	mov	x26, x0
    5878:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_PNS_5ValueEPNS_11InstructionE>
    587c:	add	x2, sp, #0x8
    5880:	mov	x0, x21
    5884:	mov	x1, x26
    5888:	stp	xzr, xzr, [sp, #8]
    588c:	strh	w28, [sp, #24]
    5890:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5894:	mov	x0, x22
    5898:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    589c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    58a0:	ldr	x1, [x19, #24]
    58a4:	ldr	w8, [x1, #168]
    58a8:	sub	w9, w8, #0x1
    58ac:	cmp	w9, #0x2
    58b0:	b.cc	5984 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xed4>  // b.lo, b.ul, b.last
    58b4:	cbnz	w8, 58ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe3c>
    58b8:	ldrsw	x8, [x19, #32]
    58bc:	cmp	w8, #0x4
    58c0:	b.cs	5e40 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1390>  // b.hs, b.nlast
    58c4:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    58c8:	add	x9, x9, #0x0
    58cc:	ldr	x0, [x19, #144]
    58d0:	ldr	x21, [x9, x8, lsl #3]
    58d4:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    58d8:	mov	x1, x21
    58dc:	mov	w2, wzr
    58e0:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    58e4:	ldr	x1, [x19, #24]
    58e8:	mov	x21, x0
    58ec:	ldr	w8, [x1, #96]
    58f0:	cbz	w8, 5984 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xed4>
    58f4:	ldr	x23, [x1, #88]
    58f8:	lsl	x24, x8, #3
    58fc:	b	590c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe5c>
    5900:	subs	x24, x24, #0x8
    5904:	add	x23, x23, #0x8
    5908:	b.eq	5980 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xed0>  // b.none
    590c:	ldr	x8, [x23]
    5910:	ldr	x9, [x19, #208]
    5914:	cmp	x8, x9
    5918:	b.eq	5900 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe50>  // b.none
    591c:	add	x1, sp, #0x8
    5920:	mov	x0, x20
    5924:	str	x8, [sp, #8]
    5928:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    592c:	ldr	x22, [x0, #16]
    5930:	cbz	x22, 5b70 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10c0>
    5934:	ldrb	w8, [x22, #16]
    5938:	cmp	w8, #0x50
    593c:	b.ne	5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1060>  // b.any
    5940:	ldur	x8, [x22, #-24]
    5944:	cbz	x8, 5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1060>
    5948:	ldrb	w9, [x8, #16]
    594c:	cbnz	w9, 5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1060>
    5950:	ldrb	w9, [x8, #33]
    5954:	tbz	w9, #5, 5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1060>
    5958:	ldr	w8, [x8, #36]
    595c:	sub	w8, w8, #0x23
    5960:	cmp	w8, #0x2
    5964:	b.cs	5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1060>  // b.hs, b.nlast
    5968:	mov	x0, x22
    596c:	mov	x1, x21
    5970:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    5974:	mov	x0, x22
    5978:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    597c:	b	5900 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe50>
    5980:	ldr	x1, [x19, #24]
    5984:	ldr	x0, [x19, #8]
    5988:	mov	x2, x20
    598c:	bl	4348 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    5990:	ldr	x8, [x19, #24]
    5994:	ldr	w9, [x8, #16]
    5998:	cbz	w9, 5a14 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf64>
    599c:	ldr	x21, [x8, #8]
    59a0:	lsl	x22, x9, #3
    59a4:	ldr	x8, [x21]
    59a8:	add	x1, sp, #0x8
    59ac:	mov	x0, x20
    59b0:	str	x8, [sp, #8]
    59b4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    59b8:	ldr	x0, [x0, #16]
    59bc:	cbz	x0, 5b30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1080>
    59c0:	ldrb	w8, [x0, #16]
    59c4:	cmp	w8, #0x50
    59c8:	b.ne	5af0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1040>  // b.any
    59cc:	ldur	x8, [x0, #-24]
    59d0:	cbz	x8, 5af0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1040>
    59d4:	ldrb	w9, [x8, #16]
    59d8:	cbnz	w9, 5af0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1040>
    59dc:	ldrb	w9, [x8, #33]
    59e0:	tbz	w9, #5, 5af0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1040>
    59e4:	ldr	w8, [x8, #36]
    59e8:	cmp	w8, #0x15
    59ec:	b.ne	5af0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1040>  // b.any
    59f0:	ldr	x1, [x19, #24]
    59f4:	ldr	x2, [x19, #192]
    59f8:	mov	w3, #0x1                   	// #1
    59fc:	mov	x4, xzr
    5a00:	bl	6148 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    5a04:	subs	x22, x22, #0x8
    5a08:	add	x21, x21, #0x8
    5a0c:	b.ne	59a4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xef4>  // b.any
    5a10:	ldr	x8, [x19, #24]
    5a14:	ldr	w9, [x8, #168]
    5a18:	cbnz	w9, 5ab8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1008>
    5a1c:	ldr	x0, [x8]
    5a20:	mov	w1, wzr
    5a24:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5a28:	cbz	x0, 5e58 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x13a8>
    5a2c:	ldrb	w8, [x0, #16]
    5a30:	cmp	w8, #0x50
    5a34:	b.ne	5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1160>  // b.any
    5a38:	ldur	x8, [x0, #-24]
    5a3c:	cbz	x8, 5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1160>
    5a40:	ldrb	w9, [x8, #16]
    5a44:	cbnz	w9, 5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1160>
    5a48:	ldrb	w9, [x8, #33]
    5a4c:	tbz	w9, #5, 5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1160>
    5a50:	ldr	w8, [x8, #36]
    5a54:	sub	w8, w8, #0x18
    5a58:	cmp	w8, #0x3
    5a5c:	b.cs	5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1160>  // b.hs, b.nlast
    5a60:	str	x0, [sp, #8]
    5a64:	add	x1, sp, #0x8
    5a68:	mov	x0, x20
    5a6c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5a70:	ldr	x0, [x0, #16]
    5a74:	cbz	x0, 5e78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x13c8>
    5a78:	ldrb	w8, [x0, #16]
    5a7c:	cmp	w8, #0x50
    5a80:	b.ne	5c30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1180>  // b.any
    5a84:	ldur	x8, [x0, #-24]
    5a88:	cbz	x8, 5c30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1180>
    5a8c:	ldrb	w9, [x8, #16]
    5a90:	cbnz	w9, 5c30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1180>
    5a94:	ldrb	w9, [x8, #33]
    5a98:	tbz	w9, #5, 5c30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1180>
    5a9c:	ldr	w8, [x8, #36]
    5aa0:	cmp	w8, #0x18
    5aa4:	b.ne	5c30 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1180>  // b.any
    5aa8:	ldr	w8, [x19, #32]
    5aac:	cmp	w8, #0x2
    5ab0:	cset	w1, eq  // eq = none
    5ab4:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    5ab8:	ldur	x0, [x29, #-112]
    5abc:	sub	x8, x29, #0x70
    5ac0:	add	x8, x8, #0x10
    5ac4:	cmp	x0, x8
    5ac8:	b.eq	5ad0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1020>  // b.none
    5acc:	bl	0 <free>
    5ad0:	ldp	x20, x19, [sp, #320]
    5ad4:	ldp	x22, x21, [sp, #304]
    5ad8:	ldp	x24, x23, [sp, #288]
    5adc:	ldp	x26, x25, [sp, #272]
    5ae0:	ldp	x28, x27, [sp, #256]
    5ae4:	ldp	x29, x30, [sp, #240]
    5ae8:	add	sp, sp, #0x150
    5aec:	ret
    5af0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5af4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5af8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5afc:	add	x0, x0, #0x0
    5b00:	add	x1, x1, #0x0
    5b04:	add	x3, x3, #0x0
    5b08:	mov	w2, #0x101                 	// #257
    5b0c:	bl	0 <__assert_fail>
    5b10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b18:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b1c:	add	x0, x0, #0x0
    5b20:	add	x1, x1, #0x0
    5b24:	add	x3, x3, #0x0
    5b28:	mov	w2, #0x101                 	// #257
    5b2c:	bl	0 <__assert_fail>
    5b30:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b34:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b38:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b3c:	add	x0, x0, #0x0
    5b40:	add	x1, x1, #0x0
    5b44:	add	x3, x3, #0x0
    5b48:	mov	w2, #0x5b                  	// #91
    5b4c:	bl	0 <__assert_fail>
    5b50:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b54:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b58:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b5c:	add	x0, x0, #0x0
    5b60:	add	x1, x1, #0x0
    5b64:	add	x3, x3, #0x0
    5b68:	mov	w2, #0x43                  	// #67
    5b6c:	bl	0 <__assert_fail>
    5b70:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b74:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b78:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b7c:	add	x0, x0, #0x0
    5b80:	add	x1, x1, #0x0
    5b84:	add	x3, x3, #0x0
    5b88:	mov	w2, #0x5b                  	// #91
    5b8c:	bl	0 <__assert_fail>
    5b90:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b94:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b98:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b9c:	add	x0, x0, #0x0
    5ba0:	add	x1, x1, #0x0
    5ba4:	add	x3, x3, #0x0
    5ba8:	mov	w2, #0x69                  	// #105
    5bac:	bl	0 <__assert_fail>
    5bb0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bb4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bb8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bbc:	add	x0, x0, #0x0
    5bc0:	add	x1, x1, #0x0
    5bc4:	add	x3, x3, #0x0
    5bc8:	mov	w2, #0x101                 	// #257
    5bcc:	bl	0 <__assert_fail>
    5bd0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bd4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bd8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bdc:	add	x0, x0, #0x0
    5be0:	add	x1, x1, #0x0
    5be4:	add	x3, x3, #0x0
    5be8:	mov	w2, #0x23f                 	// #575
    5bec:	bl	0 <__assert_fail>
    5bf0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bf4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bf8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bfc:	add	x0, x0, #0x0
    5c00:	add	x1, x1, #0x0
    5c04:	add	x3, x3, #0x0
    5c08:	mov	w2, #0x8b                  	// #139
    5c0c:	bl	0 <__assert_fail>
    5c10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c18:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c1c:	add	x0, x0, #0x0
    5c20:	add	x1, x1, #0x0
    5c24:	add	x3, x3, #0x0
    5c28:	mov	w2, #0x108                 	// #264
    5c2c:	bl	0 <__assert_fail>
    5c30:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c34:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c38:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c3c:	add	x0, x0, #0x0
    5c40:	add	x1, x1, #0x0
    5c44:	add	x3, x3, #0x0
    5c48:	mov	w2, #0x101                 	// #257
    5c4c:	bl	0 <__assert_fail>
    5c50:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c54:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c58:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c5c:	add	x0, x0, #0x0
    5c60:	add	x1, x1, #0x0
    5c64:	add	x3, x3, #0x0
    5c68:	mov	w2, #0x8b                  	// #139
    5c6c:	bl	0 <__assert_fail>
    5c70:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c74:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c78:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c7c:	add	x0, x0, #0x0
    5c80:	add	x1, x1, #0x0
    5c84:	add	x3, x3, #0x0
    5c88:	mov	w2, #0x5b                  	// #91
    5c8c:	bl	0 <__assert_fail>
    5c90:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c94:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c98:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c9c:	add	x0, x0, #0x0
    5ca0:	add	x1, x1, #0x0
    5ca4:	add	x3, x3, #0x0
    5ca8:	mov	w2, #0x101                 	// #257
    5cac:	bl	0 <__assert_fail>
    5cb0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cb4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cb8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cbc:	add	x0, x0, #0x0
    5cc0:	add	x1, x1, #0x0
    5cc4:	add	x3, x3, #0x0
    5cc8:	mov	w2, #0xf4                  	// #244
    5ccc:	bl	0 <__assert_fail>
    5cd0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cd4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cd8:	add	x0, x0, #0x0
    5cdc:	add	x1, x1, #0x0
    5ce0:	mov	w2, #0xcb                  	// #203
    5ce4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5ce8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cf0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cf4:	add	x0, x0, #0x0
    5cf8:	add	x1, x1, #0x0
    5cfc:	add	x3, x3, #0x0
    5d00:	mov	w2, #0x99                  	// #153
    5d04:	bl	0 <__assert_fail>
    5d08:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d0c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d10:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d14:	add	x0, x0, #0x0
    5d18:	add	x1, x1, #0x0
    5d1c:	add	x3, x3, #0x0
    5d20:	mov	w2, #0x69                  	// #105
    5d24:	bl	0 <__assert_fail>
    5d28:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d2c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d30:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d34:	add	x0, x0, #0x0
    5d38:	add	x1, x1, #0x0
    5d3c:	add	x3, x3, #0x0
    5d40:	mov	w2, #0x108                 	// #264
    5d44:	bl	0 <__assert_fail>
    5d48:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d4c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d50:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d54:	add	x0, x0, #0x0
    5d58:	add	x1, x1, #0x0
    5d5c:	add	x3, x3, #0x0
    5d60:	mov	w2, #0x241                 	// #577
    5d64:	bl	0 <__assert_fail>
    5d68:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d6c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d70:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d74:	add	x0, x0, #0x0
    5d78:	add	x1, x1, #0x0
    5d7c:	add	x3, x3, #0x0
    5d80:	mov	w2, #0x69                  	// #105
    5d84:	bl	0 <__assert_fail>
    5d88:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d8c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d90:	add	x0, x0, #0x0
    5d94:	add	x1, x1, #0x0
    5d98:	mov	w2, #0x27c                 	// #636
    5d9c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5da0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5da4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5da8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5dac:	add	x0, x0, #0x0
    5db0:	add	x1, x1, #0x0
    5db4:	add	x3, x3, #0x0
    5db8:	mov	w2, #0x5b                  	// #91
    5dbc:	bl	0 <__assert_fail>
    5dc0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5dc4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5dc8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5dcc:	add	x0, x0, #0x0
    5dd0:	add	x1, x1, #0x0
    5dd4:	add	x3, x3, #0x0
    5dd8:	mov	w2, #0x5b                  	// #91
    5ddc:	bl	0 <__assert_fail>
    5de0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5de4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5de8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5dec:	add	x0, x0, #0x0
    5df0:	add	x1, x1, #0x0
    5df4:	add	x3, x3, #0x0
    5df8:	mov	w2, #0x108                 	// #264
    5dfc:	bl	0 <__assert_fail>
    5e00:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e04:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e08:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e0c:	add	x0, x0, #0x0
    5e10:	add	x1, x1, #0x0
    5e14:	add	x3, x3, #0x0
    5e18:	mov	w2, #0x25c                 	// #604
    5e1c:	bl	0 <__assert_fail>
    5e20:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e24:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e28:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e2c:	add	x0, x0, #0x0
    5e30:	add	x1, x1, #0x0
    5e34:	add	x3, x3, #0x0
    5e38:	mov	w2, #0x2f2                 	// #754
    5e3c:	bl	0 <__assert_fail>
    5e40:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e44:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e48:	add	x0, x0, #0x0
    5e4c:	add	x1, x1, #0x0
    5e50:	mov	w2, #0x91                  	// #145
    5e54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5e58:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e5c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e60:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e64:	add	x0, x0, #0x0
    5e68:	add	x1, x1, #0x0
    5e6c:	add	x3, x3, #0x0
    5e70:	mov	w2, #0x69                  	// #105
    5e74:	bl	0 <__assert_fail>
    5e78:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e80:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e84:	add	x0, x0, #0x0
    5e88:	add	x1, x1, #0x0
    5e8c:	add	x3, x3, #0x0
    5e90:	mov	w2, #0x5b                  	// #91
    5e94:	bl	0 <__assert_fail>
    5e98:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e9c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ea0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ea4:	add	x0, x0, #0x0
    5ea8:	add	x1, x1, #0x0
    5eac:	add	x3, x3, #0x0
    5eb0:	mov	w2, #0xb8                  	// #184
    5eb4:	bl	0 <__assert_fail>
    5eb8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ebc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ec0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ec4:	add	x0, x0, #0x0
    5ec8:	add	x1, x1, #0x0
    5ecc:	add	x3, x3, #0x0
    5ed0:	mov	w2, #0xcdd                 	// #3293
    5ed4:	bl	0 <__assert_fail>
    5ed8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5edc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ee0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5ee4:	add	x0, x0, #0x0
    5ee8:	add	x1, x1, #0x0
    5eec:	add	x3, x3, #0x0
    5ef0:	mov	w2, #0x69                  	// #105
    5ef4:	bl	0 <__assert_fail>
    5ef8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5efc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f00:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f04:	add	x0, x0, #0x0
    5f08:	add	x1, x1, #0x0
    5f0c:	add	x3, x3, #0x0
    5f10:	mov	w2, #0x17e                 	// #382
    5f14:	bl	0 <__assert_fail>
    5f18:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f20:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f24:	add	x0, x0, #0x0
    5f28:	add	x1, x1, #0x0
    5f2c:	add	x3, x3, #0x0
    5f30:	mov	w2, #0x5b                  	// #91
    5f34:	bl	0 <__assert_fail>
    5f38:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f3c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f40:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f44:	add	x0, x0, #0x0
    5f48:	add	x1, x1, #0x0
    5f4c:	add	x3, x3, #0x0
    5f50:	mov	w2, #0x101                 	// #257
    5f54:	bl	0 <__assert_fail>
    5f58:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f5c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f60:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f64:	add	x0, x0, #0x0
    5f68:	add	x1, x1, #0x0
    5f6c:	add	x3, x3, #0x0
    5f70:	mov	w2, #0xc81                 	// #3201
    5f74:	bl	0 <__assert_fail>
    5f78:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f7c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f80:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f84:	add	x0, x0, #0x0
    5f88:	add	x1, x1, #0x0
    5f8c:	add	x3, x3, #0x0
    5f90:	mov	w2, #0x1b0                 	// #432
    5f94:	bl	0 <__assert_fail>

0000000000005f98 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE>:
    5f98:	sub	sp, sp, #0x90
    5f9c:	stp	x29, x30, [sp, #80]
    5fa0:	str	x23, [sp, #96]
    5fa4:	stp	x22, x21, [sp, #112]
    5fa8:	stp	x20, x19, [sp, #128]
    5fac:	add	x29, sp, #0x50
    5fb0:	ldr	x23, [x0, #40]
    5fb4:	mov	x22, x0
    5fb8:	mov	x0, x1
    5fbc:	mov	x19, x3
    5fc0:	mov	x21, x2
    5fc4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5fc8:	mov	x20, x0
    5fcc:	mov	x0, x22
    5fd0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    5fd4:	mov	w8, #0x105                 	// #261
    5fd8:	add	x9, sp, #0x8
    5fdc:	stp	x0, x1, [sp, #8]
    5fe0:	strh	w8, [sp, #40]
    5fe4:	stp	x9, xzr, [sp, #24]
    5fe8:	ldrb	w8, [x21, #16]
    5fec:	cmp	w8, #0x1
    5ff0:	b.eq	6008 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x70>  // b.none
    5ff4:	cbnz	w8, 601c <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x84>
    5ff8:	mov	w8, #0x100                 	// #256
    5ffc:	stp	xzr, xzr, [x29, #-32]
    6000:	sturh	w8, [x29, #-16]
    6004:	b	6064 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0xcc>
    6008:	ldur	q0, [sp, #24]
    600c:	ldr	x8, [sp, #40]
    6010:	stur	q0, [x29, #-32]
    6014:	stur	x8, [x29, #-16]
    6018:	b	6064 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0xcc>
    601c:	ldrb	w9, [x21, #17]
    6020:	cmp	w9, #0x1
    6024:	b.ne	6030 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x98>  // b.any
    6028:	ldr	x21, [x21]
    602c:	b	6034 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x9c>
    6030:	mov	w8, #0x2                   	// #2
    6034:	add	x9, sp, #0x8
    6038:	mov	w10, #0x5                   	// #5
    603c:	cmp	w8, #0x2
    6040:	stp	x9, x21, [x29, #-32]
    6044:	sturb	w10, [x29, #-16]
    6048:	sturb	w8, [x29, #-15]
    604c:	b.ne	6064 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0xcc>  // b.any
    6050:	ldrb	w8, [x21, #16]
    6054:	cbz	w8, 6128 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x190>
    6058:	ldrb	w8, [x21, #17]
    605c:	cmp	w8, #0x1
    6060:	b.eq	6128 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x190>  // b.none
    6064:	mov	w0, #0x78                  	// #120
    6068:	bl	0 <_ZN4llvm4UsernwEm>
    606c:	sub	x4, x29, #0x20
    6070:	mov	w2, #0x7                   	// #7
    6074:	mov	w3, #0xffffffff            	// #-1
    6078:	mov	x1, x20
    607c:	mov	x5, xzr
    6080:	mov	x21, x0
    6084:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
    6088:	mov	w2, #0x23                  	// #35
    608c:	mov	x0, x21
    6090:	mov	w1, wzr
    6094:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    6098:	mov	w2, #0x15                  	// #21
    609c:	mov	x0, x21
    60a0:	mov	w1, wzr
    60a4:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    60a8:	add	x0, x23, #0x18
    60ac:	mov	x1, x21
    60b0:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_8FunctionEE13addNodeToListEPS1_>
    60b4:	mov	x8, x21
    60b8:	ldr	x9, [x8, #56]!
    60bc:	ldr	x10, [x19]
    60c0:	str	x19, [x21, #64]
    60c4:	tst	x8, #0x7
    60c8:	and	x11, x10, #0xfffffffffffffff8
    60cc:	bfxil	x10, x9, #0, #3
    60d0:	str	x10, [x8]
    60d4:	str	x8, [x11, #8]
    60d8:	b.ne	6108 <_ZL22createCloneDeclarationRN4llvm8FunctionERNS_4coro5ShapeERKNS_5TwineENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE+0x170>  // b.any
    60dc:	ldr	x9, [x19]
    60e0:	mov	x0, x21
    60e4:	ldr	x23, [sp, #96]
    60e8:	and	x9, x9, #0x7
    60ec:	orr	x8, x9, x8
    60f0:	str	x8, [x19]
    60f4:	ldp	x20, x19, [sp, #128]
    60f8:	ldp	x22, x21, [sp, #112]
    60fc:	ldp	x29, x30, [sp, #80]
    6100:	add	sp, sp, #0x90
    6104:	ret
    6108:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    610c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6110:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6114:	add	x0, x0, #0x0
    6118:	add	x1, x1, #0x0
    611c:	add	x3, x3, #0x0
    6120:	mov	w2, #0xb3                  	// #179
    6124:	bl	0 <__assert_fail>
    6128:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    612c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6130:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6134:	add	x0, x0, #0x0
    6138:	add	x1, x1, #0x0
    613c:	add	x3, x3, #0x0
    6140:	mov	w2, #0xb8                  	// #184
    6144:	bl	0 <__assert_fail>

0000000000006148 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>:
    6148:	sub	sp, sp, #0xc0
    614c:	stp	x29, x30, [sp, #128]
    6150:	str	x23, [sp, #144]
    6154:	stp	x22, x21, [sp, #160]
    6158:	stp	x20, x19, [sp, #176]
    615c:	add	x29, sp, #0x80
    6160:	mov	x22, x1
    6164:	mov	w1, #0x1                   	// #1
    6168:	mov	x21, x4
    616c:	mov	w20, w3
    6170:	mov	x23, x2
    6174:	mov	x19, x0
    6178:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    617c:	cbz	x0, 64bc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x374>
    6180:	ldrb	w8, [x0, #16]
    6184:	cmp	w8, #0x11
    6188:	b.cs	64dc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x394>  // b.hs, b.nlast
    618c:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    6190:	tbz	w0, #0, 61f8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0xb0>
    6194:	mov	x0, x19
    6198:	bl	0 <_ZNK4llvm5Value10getContextEv>
    619c:	stp	x0, xzr, [sp, #80]
    61a0:	mov	w8, #0x200                 	// #512
    61a4:	add	x0, sp, #0x38
    61a8:	mov	x1, x19
    61ac:	str	wzr, [sp, #96]
    61b0:	strb	wzr, [sp, #102]
    61b4:	stp	xzr, xzr, [sp, #64]
    61b8:	str	xzr, [sp, #56]
    61bc:	strh	w8, [sp, #100]
    61c0:	stp	xzr, xzr, [sp, #104]
    61c4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    61c8:	ldr	w8, [x22, #168]
    61cc:	sub	w9, w8, #0x1
    61d0:	cmp	w9, #0x2
    61d4:	b.cs	624c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x104>  // b.hs, b.nlast
    61d8:	ldrb	w8, [x22, #232]
    61dc:	cbnz	w8, 6254 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    61e0:	add	x1, sp, #0x38
    61e4:	mov	x0, x22
    61e8:	mov	x2, x23
    61ec:	mov	x3, x21
    61f0:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    61f4:	b	6254 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    61f8:	mov	x0, x19
    61fc:	bl	0 <_ZNK4llvm5Value10getContextEv>
    6200:	stp	x0, xzr, [sp, #80]
    6204:	mov	w8, #0x200                 	// #512
    6208:	add	x0, sp, #0x38
    620c:	mov	x1, x19
    6210:	str	wzr, [sp, #96]
    6214:	strb	wzr, [sp, #102]
    6218:	stp	xzr, xzr, [sp, #64]
    621c:	str	xzr, [sp, #56]
    6220:	strh	w8, [sp, #100]
    6224:	stp	xzr, xzr, [sp, #104]
    6228:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    622c:	ldr	w8, [x22, #168]
    6230:	cmp	w8, #0x2
    6234:	b.eq	63e0 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x298>  // b.none
    6238:	cmp	w8, #0x1
    623c:	b.eq	62f0 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1a8>  // b.none
    6240:	cbnz	w8, 643c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2f4>
    6244:	tbnz	w20, #0, 63fc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2b4>
    6248:	b	6468 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    624c:	cbnz	w8, 6254 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    6250:	tbz	w20, #0, 6468 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    6254:	mov	x8, sp
    6258:	mov	w1, #0x1                   	// #1
    625c:	mov	x0, x19
    6260:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6264:	ldrb	w8, [sp, #24]
    6268:	cbz	w8, 6468 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    626c:	ldr	x8, [sp, #8]
    6270:	cbz	x8, 64fc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3b4>
    6274:	ldr	x8, [sp]
    6278:	ldr	x21, [x8]
    627c:	cbz	x21, 651c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3d4>
    6280:	ldrb	w8, [x21, #16]
    6284:	cmp	w8, #0x4b
    6288:	b.ne	653c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3f4>  // b.any
    628c:	mov	w0, #0x38                  	// #56
    6290:	mov	w1, #0x1                   	// #1
    6294:	bl	0 <_ZN4llvm4UsernwEmj>
    6298:	mov	w3, #0x1                   	// #1
    629c:	mov	x1, x21
    62a0:	mov	x2, xzr
    62a4:	mov	x4, xzr
    62a8:	mov	x22, x0
    62ac:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
    62b0:	mov	w23, #0x101                 	// #257
    62b4:	add	x0, sp, #0x38
    62b8:	add	x2, sp, #0x20
    62bc:	mov	x1, x22
    62c0:	stp	xzr, xzr, [sp, #32]
    62c4:	strh	w23, [sp, #48]
    62c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    62cc:	mov	x21, x0
    62d0:	ldr	x0, [x19, #40]
    62d4:	add	x1, x19, #0x18
    62d8:	add	x2, sp, #0x20
    62dc:	stp	xzr, xzr, [sp, #32]
    62e0:	strh	w23, [sp, #48]
    62e4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    62e8:	ldr	x0, [x21, #40]
    62ec:	b	6460 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x318>
    62f0:	ldrb	w8, [x22, #232]
    62f4:	cbnz	w8, 630c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1c4>
    62f8:	add	x1, sp, #0x38
    62fc:	mov	x0, x22
    6300:	mov	x2, x23
    6304:	mov	x3, x21
    6308:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    630c:	mov	x0, x22
    6310:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6314:	ldr	x8, [x0, #16]
    6318:	ldr	x0, [x8]
    631c:	cbz	x0, 655c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x414>
    6320:	ldrb	w21, [x0, #8]
    6324:	cmp	w21, #0xd
    6328:	csel	x22, x0, xzr, eq  // eq = none
    632c:	mov	w8, w21
    6330:	b.ne	634c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x204>  // b.any
    6334:	ldr	w8, [x22, #12]
    6338:	cbz	w8, 659c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x454>
    633c:	ldr	x8, [x22, #16]
    6340:	ldr	x0, [x8]
    6344:	cbz	x0, 65bc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x474>
    6348:	ldrb	w8, [x0, #8]
    634c:	cmp	w8, #0xf
    6350:	b.ne	657c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x434>  // b.any
    6354:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    6358:	cmp	w21, #0xd
    635c:	mov	x21, x0
    6360:	b.ne	639c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x254>  // b.any
    6364:	mov	x0, x22
    6368:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    636c:	mov	x1, x0
    6370:	mov	w8, #0x101                 	// #257
    6374:	add	x0, sp, #0x38
    6378:	add	x3, sp, #0x20
    637c:	mov	x5, sp
    6380:	mov	w4, #0x1                   	// #1
    6384:	mov	x2, x21
    6388:	str	wzr, [sp, #32]
    638c:	stp	xzr, xzr, [sp]
    6390:	strh	w8, [sp, #16]
    6394:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6398:	mov	x21, x0
    639c:	ldr	x22, [sp, #80]
    63a0:	cmp	x21, #0x0
    63a4:	cset	w1, ne  // ne = any
    63a8:	mov	w0, #0x38                  	// #56
    63ac:	bl	0 <_ZN4llvm4UsernwEmj>
    63b0:	mov	x1, x22
    63b4:	mov	x2, x21
    63b8:	mov	x3, xzr
    63bc:	mov	x23, x0
    63c0:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    63c4:	mov	w8, #0x101                 	// #257
    63c8:	add	x0, sp, #0x38
    63cc:	mov	x2, sp
    63d0:	mov	x1, x23
    63d4:	stp	xzr, xzr, [sp]
    63d8:	strh	w8, [sp, #16]
    63dc:	b	6438 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2f0>
    63e0:	ldrb	w8, [x22, #232]
    63e4:	cbnz	w8, 63fc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2b4>
    63e8:	add	x1, sp, #0x38
    63ec:	mov	x0, x22
    63f0:	mov	x2, x23
    63f4:	mov	x3, x21
    63f8:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    63fc:	ldr	x21, [sp, #80]
    6400:	mov	w0, #0x38                  	// #56
    6404:	mov	w1, wzr
    6408:	bl	0 <_ZN4llvm4UsernwEmj>
    640c:	mov	x1, x21
    6410:	mov	x2, xzr
    6414:	mov	x3, xzr
    6418:	mov	x22, x0
    641c:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    6420:	mov	w8, #0x101                 	// #257
    6424:	stp	xzr, xzr, [sp]
    6428:	strh	w8, [sp, #16]
    642c:	add	x0, sp, #0x38
    6430:	mov	x2, sp
    6434:	mov	x1, x22
    6438:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    643c:	ldr	x21, [x19, #40]
    6440:	add	x1, x19, #0x18
    6444:	mov	w8, #0x101                 	// #257
    6448:	mov	x2, sp
    644c:	mov	x0, x21
    6450:	stp	xzr, xzr, [sp]
    6454:	strh	w8, [sp, #16]
    6458:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    645c:	mov	x0, x21
    6460:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6464:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    6468:	ldr	x1, [sp, #56]
    646c:	cbz	x1, 6478 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x330>
    6470:	add	x0, sp, #0x38
    6474:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    6478:	mov	x0, x19
    647c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    6480:	tbz	w20, #0, 648c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x344>
    6484:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
    6488:	b	6490 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x348>
    648c:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    6490:	mov	x1, x0
    6494:	mov	x0, x19
    6498:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    649c:	mov	x0, x19
    64a0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    64a4:	ldp	x20, x19, [sp, #176]
    64a8:	ldp	x22, x21, [sp, #160]
    64ac:	ldr	x23, [sp, #144]
    64b0:	ldp	x29, x30, [sp, #128]
    64b4:	add	sp, sp, #0xc0
    64b8:	ret
    64bc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64c0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64c4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64c8:	add	x0, x0, #0x0
    64cc:	add	x1, x1, #0x0
    64d0:	add	x3, x3, #0x0
    64d4:	mov	w2, #0x69                  	// #105
    64d8:	bl	0 <__assert_fail>
    64dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64e8:	add	x0, x0, #0x0
    64ec:	add	x1, x1, #0x0
    64f0:	add	x3, x3, #0x0
    64f4:	mov	w2, #0x108                 	// #264
    64f8:	bl	0 <__assert_fail>
    64fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6500:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6504:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6508:	add	x0, x0, #0x0
    650c:	add	x1, x1, #0x0
    6510:	add	x3, x3, #0x0
    6514:	mov	w2, #0xfa                  	// #250
    6518:	bl	0 <__assert_fail>
    651c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6520:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6524:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6528:	add	x0, x0, #0x0
    652c:	add	x1, x1, #0x0
    6530:	add	x3, x3, #0x0
    6534:	mov	w2, #0x5b                  	// #91
    6538:	bl	0 <__assert_fail>
    653c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6540:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6544:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6548:	add	x0, x0, #0x0
    654c:	add	x1, x1, #0x0
    6550:	add	x3, x3, #0x0
    6554:	mov	w2, #0xfa                  	// #250
    6558:	bl	0 <__assert_fail>
    655c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6560:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6564:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6568:	add	x0, x0, #0x0
    656c:	add	x1, x1, #0x0
    6570:	add	x3, x3, #0x0
    6574:	mov	w2, #0x69                  	// #105
    6578:	bl	0 <__assert_fail>
    657c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6580:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6584:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6588:	add	x0, x0, #0x0
    658c:	add	x1, x1, #0x0
    6590:	add	x3, x3, #0x0
    6594:	mov	w2, #0x108                 	// #264
    6598:	bl	0 <__assert_fail>
    659c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65a0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65a8:	add	x0, x0, #0x0
    65ac:	add	x1, x1, #0x0
    65b0:	add	x3, x3, #0x0
    65b4:	mov	w2, #0x160                 	// #352
    65b8:	bl	0 <__assert_fail>
    65bc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65c0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65c4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    65c8:	add	x0, x0, #0x0
    65cc:	add	x1, x1, #0x0
    65d0:	add	x3, x3, #0x0
    65d4:	mov	w2, #0x69                  	// #105
    65d8:	bl	0 <__assert_fail>

00000000000065dc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>:
    65dc:	sub	sp, sp, #0x60
    65e0:	stp	x29, x30, [sp, #16]
    65e4:	stp	x26, x25, [sp, #32]
    65e8:	stp	x24, x23, [sp, #48]
    65ec:	stp	x22, x21, [sp, #64]
    65f0:	stp	x20, x19, [sp, #80]
    65f4:	add	x29, sp, #0x10
    65f8:	ldr	x22, [x0, #40]
    65fc:	mov	x0, x1
    6600:	mov	x19, x2
    6604:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    6608:	cmp	x0, x1
    660c:	b.eq	67d8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1fc>  // b.none
    6610:	mov	x21, x0
    6614:	mov	x20, x1
    6618:	mov	w23, #0x18                  	// #24
    661c:	orr	x24, xzr, #0x8
    6620:	mov	x25, #0xfffffffffffffff0    	// #-16
    6624:	ldr	w9, [x21, #20]
    6628:	and	x11, x9, #0xfffffff
    662c:	cbz	w11, 67f4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x218>
    6630:	ldr	w14, [x21, #56]
    6634:	mneg	x10, x11, x23
    6638:	add	x13, x11, x11, lsl #1
    663c:	mov	w12, wzr
    6640:	mov	x8, xzr
    6644:	add	x10, x21, x10
    6648:	lsl	x13, x13, #3
    664c:	madd	x14, x14, x23, x24
    6650:	mov	x15, x10
    6654:	tbz	w9, #30, 665c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x80>
    6658:	ldur	x15, [x21, #-8]
    665c:	ldr	x15, [x15, x14]
    6660:	cmp	x15, x22
    6664:	b.eq	6680 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xa4>  // b.none
    6668:	add	x8, x8, #0x18
    666c:	add	w12, w12, #0x1
    6670:	cmp	x13, x8
    6674:	add	x14, x14, #0x8
    6678:	b.ne	6650 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x74>  // b.any
    667c:	b	67f4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x218>
    6680:	cmp	w11, w12
    6684:	b.ls	6854 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x278>  // b.plast
    6688:	tbz	w9, #30, 6690 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xb4>
    668c:	ldur	x10, [x21, #-8]
    6690:	ldr	x26, [x10, x8]
    6694:	ldr	w9, [x19, #24]
    6698:	ldr	x8, [x19, #8]
    669c:	cbz	w9, 66f8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x11c>
    66a0:	orr	x10, x26, #0x8
    66a4:	cmn	x10, #0x8
    66a8:	b.eq	6814 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x238>  // b.none
    66ac:	ubfx	x10, x26, #4, #28
    66b0:	eor	w11, w10, w26, lsr #9
    66b4:	sub	w10, w9, #0x1
    66b8:	and	w11, w11, w10
    66bc:	add	x12, x8, w11, uxtw #4
    66c0:	ldr	x13, [x12]
    66c4:	cmp	x13, x26
    66c8:	b.eq	66fc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x120>  // b.none
    66cc:	mov	w14, #0x1                   	// #1
    66d0:	cmn	x13, #0x8
    66d4:	b.eq	66f8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x11c>  // b.none
    66d8:	add	w11, w11, w14
    66dc:	and	w11, w11, w10
    66e0:	add	x12, x8, w11, uxtw #4
    66e4:	ldr	x13, [x12]
    66e8:	add	w14, w14, #0x1
    66ec:	cmp	x13, x26
    66f0:	b.eq	66fc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x120>  // b.none
    66f4:	b	66d0 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xf4>
    66f8:	add	x12, x8, x9, lsl #4
    66fc:	add	x10, x8, x9, lsl #4
    6700:	cmp	x12, x10
    6704:	b.eq	670c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x130>  // b.none
    6708:	ldr	x26, [x12, #8]
    670c:	str	x21, [sp, #8]
    6710:	cbz	w9, 677c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1a0>
    6714:	orr	x10, x21, #0x8
    6718:	cmn	x10, #0x8
    671c:	b.eq	6834 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x258>  // b.none
    6720:	ubfx	x10, x21, #4, #28
    6724:	eor	w10, w10, w21, lsr #9
    6728:	sub	w9, w9, #0x1
    672c:	and	w10, w10, w9
    6730:	add	x0, x8, w10, uxtw #4
    6734:	ldr	x12, [x0]
    6738:	cmp	x12, x21
    673c:	b.eq	6798 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1bc>  // b.none
    6740:	mov	x11, xzr
    6744:	mov	w13, #0x1                   	// #1
    6748:	cmn	x12, #0x8
    674c:	b.eq	67cc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1f0>  // b.none
    6750:	cmp	x11, #0x0
    6754:	add	w10, w10, w13
    6758:	ccmp	x12, x25, #0x0, eq  // eq = none
    675c:	and	w10, w10, w9
    6760:	csel	x11, x11, x0, ne  // ne = any
    6764:	add	x0, x8, w10, uxtw #4
    6768:	ldr	x12, [x0]
    676c:	add	w13, w13, #0x1
    6770:	cmp	x12, x21
    6774:	b.eq	6798 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1bc>  // b.none
    6778:	b	6748 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x16c>
    677c:	mov	x3, xzr
    6780:	add	x1, sp, #0x8
    6784:	add	x2, sp, #0x8
    6788:	mov	x0, x19
    678c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6790:	ldr	x8, [sp, #8]
    6794:	stp	x8, xzr, [x0]
    6798:	str	x26, [x0, #8]
    679c:	cbz	x21, 6874 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x298>
    67a0:	ldr	x8, [x21, #32]
    67a4:	ldrb	w9, [x8]
    67a8:	tbnz	w9, #2, 6894 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x2b8>
    67ac:	cbz	x8, 68b4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x2d8>
    67b0:	ldurb	w9, [x8, #-8]
    67b4:	sub	x8, x8, #0x18
    67b8:	cmp	w9, #0x4f
    67bc:	csel	x21, x8, xzr, eq  // eq = none
    67c0:	cmp	x21, x20
    67c4:	b.ne	6624 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x48>  // b.any
    67c8:	b	67d8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1fc>
    67cc:	cmp	x11, #0x0
    67d0:	csel	x3, x0, x11, eq  // eq = none
    67d4:	b	6780 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1a4>
    67d8:	ldp	x20, x19, [sp, #80]
    67dc:	ldp	x22, x21, [sp, #64]
    67e0:	ldp	x24, x23, [sp, #48]
    67e4:	ldp	x26, x25, [sp, #32]
    67e8:	ldp	x29, x30, [sp, #16]
    67ec:	add	sp, sp, #0x60
    67f0:	ret
    67f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6800:	add	x0, x0, #0x0
    6804:	add	x1, x1, #0x0
    6808:	add	x3, x3, #0x0
    680c:	mov	w2, #0xab5                 	// #2741
    6810:	bl	0 <__assert_fail>
    6814:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6818:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    681c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6820:	add	x0, x0, #0x0
    6824:	add	x1, x1, #0x0
    6828:	add	x3, x3, #0x0
    682c:	mov	w2, #0x252                 	// #594
    6830:	bl	0 <__assert_fail>
    6834:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6838:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    683c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6840:	add	x0, x0, #0x0
    6844:	add	x1, x1, #0x0
    6848:	add	x3, x3, #0x0
    684c:	mov	w2, #0x252                 	// #594
    6850:	bl	0 <__assert_fail>
    6854:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6858:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    685c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6860:	add	x0, x0, #0x0
    6864:	add	x1, x1, #0x0
    6868:	add	x3, x3, #0x0
    686c:	mov	w2, #0xadf                 	// #2783
    6870:	bl	0 <__assert_fail>
    6874:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6878:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    687c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6880:	add	x0, x0, #0x0
    6884:	add	x1, x1, #0x0
    6888:	add	x3, x3, #0x0
    688c:	mov	w2, #0x13d                 	// #317
    6890:	bl	0 <__assert_fail>
    6894:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6898:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    689c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68a0:	add	x0, x0, #0x0
    68a4:	add	x1, x1, #0x0
    68a8:	add	x3, x3, #0x0
    68ac:	mov	w2, #0x8b                  	// #139
    68b0:	bl	0 <__assert_fail>
    68b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68c0:	add	x0, x0, #0x0
    68c4:	add	x1, x1, #0x0
    68c8:	add	x3, x3, #0x0
    68cc:	mov	w2, #0x5b                  	// #91
    68d0:	bl	0 <__assert_fail>

00000000000068d4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>:
    68d4:	sub	sp, sp, #0xc0
    68d8:	stp	x29, x30, [sp, #128]
    68dc:	str	x23, [sp, #144]
    68e0:	stp	x22, x21, [sp, #160]
    68e4:	stp	x20, x19, [sp, #176]
    68e8:	add	x29, sp, #0x80
    68ec:	ldr	x8, [x0]
    68f0:	mov	x19, x1
    68f4:	ldr	x21, [x8]
    68f8:	cbz	x21, 693c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x68>
    68fc:	ldr	x8, [x21]
    6900:	ldrb	w9, [x8, #8]
    6904:	cmp	w9, #0xf
    6908:	b.ne	6ad0 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1fc>  // b.any
    690c:	ldr	x8, [x8, #16]
    6910:	ldr	x8, [x8]
    6914:	cmp	x8, x19
    6918:	b.eq	6ab4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>  // b.none
    691c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6920:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6924:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6928:	add	x0, x0, #0x0
    692c:	add	x1, x1, #0x0
    6930:	add	x3, x3, #0x0
    6934:	mov	w2, #0x1f9                 	// #505
    6938:	bl	0 <__assert_fail>
    693c:	ldr	x22, [x0, #8]
    6940:	mov	x20, x0
    6944:	ldrb	w8, [x22, #18]
    6948:	tbnz	w8, #0, 6958 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x84>
    694c:	ldr	x21, [x22, #88]
    6950:	mov	x8, x21
    6954:	b	6980 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xac>
    6958:	mov	x0, x22
    695c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    6960:	ldrb	w8, [x22, #18]
    6964:	ldr	x21, [x22, #88]
    6968:	tbnz	w8, #0, 6974 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xa0>
    696c:	mov	x8, x21
    6970:	b	6980 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xac>
    6974:	mov	x0, x22
    6978:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    697c:	ldr	x8, [x22, #88]
    6980:	ldr	x9, [x22, #96]
    6984:	mov	w10, #0x28                  	// #40
    6988:	madd	x22, x9, x10, x8
    698c:	cmp	x22, x21
    6990:	b.eq	69ac <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xd8>  // b.none
    6994:	mov	x0, x21
    6998:	bl	0 <_ZNK4llvm5Value12isSwiftErrorEv>
    699c:	tbnz	w0, #0, 6a8c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1b8>
    69a0:	add	x21, x21, #0x28
    69a4:	cmp	x22, x21
    69a8:	b.ne	6994 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xc0>  // b.any
    69ac:	ldr	x8, [x20, #8]
    69b0:	ldr	x8, [x8, #80]
    69b4:	ldrb	w9, [x8]
    69b8:	tbnz	w9, #2, 6af0 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x21c>
    69bc:	sub	x9, x8, #0x18
    69c0:	cmp	x8, #0x0
    69c4:	csel	x0, xzr, x9, eq  // eq = none
    69c8:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    69cc:	mov	x21, x0
    69d0:	bl	0 <_ZNK4llvm5Value10getContextEv>
    69d4:	stp	x0, xzr, [sp, #56]
    69d8:	mov	w8, #0x200                 	// #512
    69dc:	add	x0, sp, #0x20
    69e0:	mov	x1, x21
    69e4:	str	wzr, [sp, #72]
    69e8:	strb	wzr, [sp, #78]
    69ec:	stp	xzr, xzr, [sp, #40]
    69f0:	str	xzr, [sp, #32]
    69f4:	strh	w8, [sp, #76]
    69f8:	stp	xzr, xzr, [sp, #80]
    69fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a00:	ldr	x8, [sp, #40]
    6a04:	mov	w23, #0x101                 	// #257
    6a08:	stp	xzr, xzr, [sp, #8]
    6a0c:	strh	w23, [sp, #24]
    6a10:	ldr	x8, [x8, #56]
    6a14:	ldr	x0, [x8, #40]
    6a18:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    6a1c:	mov	x21, x0
    6a20:	mov	w0, #0x40                  	// #64
    6a24:	mov	w1, #0x1                   	// #1
    6a28:	bl	0 <_ZN4llvm4UsernwEmj>
    6a2c:	ldr	w2, [x21, #4]
    6a30:	sub	x4, x29, #0x18
    6a34:	mov	x1, x19
    6a38:	mov	x3, xzr
    6a3c:	mov	x5, xzr
    6a40:	mov	x22, x0
    6a44:	stp	xzr, xzr, [x29, #-24]
    6a48:	sturh	w23, [x29, #-8]
    6a4c:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    6a50:	add	x0, sp, #0x20
    6a54:	add	x2, sp, #0x8
    6a58:	mov	x1, x22
    6a5c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a60:	ldrh	w8, [x0, #18]
    6a64:	mov	x21, x0
    6a68:	orr	w8, w8, #0x40
    6a6c:	strh	w8, [x0, #18]
    6a70:	ldr	x8, [x20]
    6a74:	str	x0, [x8]
    6a78:	ldr	x1, [sp, #32]
    6a7c:	cbz	x1, 6ab4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>
    6a80:	add	x0, sp, #0x20
    6a84:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    6a88:	b	6ab4 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>
    6a8c:	ldr	x8, [x20]
    6a90:	str	x21, [x8]
    6a94:	ldr	x8, [x21]
    6a98:	ldrb	w9, [x8, #8]
    6a9c:	cmp	w9, #0xf
    6aa0:	b.ne	6ad0 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1fc>  // b.any
    6aa4:	ldr	x8, [x8, #16]
    6aa8:	ldr	x8, [x8]
    6aac:	cmp	x8, x19
    6ab0:	b.ne	6b10 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x23c>  // b.any
    6ab4:	mov	x0, x21
    6ab8:	ldp	x20, x19, [sp, #176]
    6abc:	ldp	x22, x21, [sp, #160]
    6ac0:	ldr	x23, [sp, #144]
    6ac4:	ldp	x29, x30, [sp, #128]
    6ac8:	add	sp, sp, #0xc0
    6acc:	ret
    6ad0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ad4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ad8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6adc:	add	x0, x0, #0x0
    6ae0:	add	x1, x1, #0x0
    6ae4:	add	x3, x3, #0x0
    6ae8:	mov	w2, #0x17e                 	// #382
    6aec:	bl	0 <__assert_fail>
    6af0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6af4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6af8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6afc:	add	x0, x0, #0x0
    6b00:	add	x1, x1, #0x0
    6b04:	add	x3, x3, #0x0
    6b08:	mov	w2, #0x8b                  	// #139
    6b0c:	bl	0 <__assert_fail>
    6b10:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b14:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b18:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b1c:	add	x0, x0, #0x0
    6b20:	add	x1, x1, #0x0
    6b24:	add	x3, x3, #0x0
    6b28:	mov	w2, #0x202                 	// #514
    6b2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv:

0000000000000000 <_ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE:

0000000000000000 <_ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x22, x1
  1c:	mov	x20, x0
  20:	stp	x2, x1, [sp]
  24:	cbz	x1, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  28:	ldur	x8, [x22, #-24]
  2c:	cbz	x8, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  40:	ldr	w0, [x8, #36]
  44:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  48:	tbnz	w0, #0, e0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xe0>
  4c:	ldp	x21, x8, [x20, #16]
  50:	cmp	x21, x8
  54:	b.eq	a8 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xa8>  // b.none
  58:	add	x8, x22, #0x10
  5c:	mov	w9, #0x6                   	// #6
  60:	cmp	x8, #0x10
  64:	stp	x9, xzr, [x21]
  68:	str	x22, [x21, #16]
  6c:	b.hi	8c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x8c>  // b.pmore
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	x8, x9, x8
  78:	mov	w9, #0x101                 	// #257
  7c:	movk	w9, #0x1, lsl #16
  80:	tst	x8, x9
  84:	mov	x8, x21
  88:	b.ne	98 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x98>  // b.any
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  94:	ldr	x8, [x20, #16]
  98:	add	x8, x8, #0x20
  9c:	str	x19, [x21, #24]
  a0:	str	x8, [x20, #16]
  a4:	b	c0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xc0>
  a8:	add	x0, x20, #0x8
  ac:	add	x2, sp, #0x8
  b0:	mov	x3, sp
  b4:	mov	x1, x21
  b8:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  bc:	ldr	x19, [sp]
  c0:	ldr	w8, [x19, #32]
  c4:	add	w8, w8, #0x1
  c8:	str	w8, [x19, #32]
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e4:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e8:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xeb                  	// #235
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x26, x25, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x25, x26
  2c:	cmp	x8, x9
  30:	b.eq	254 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x254>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x26
  68:	mov	x23, x3
  6c:	mov	x24, x2
  70:	mov	x19, x0
  74:	mov	x22, x1
  78:	asr	x27, x8, #5
  7c:	str	x9, [sp, #8]
  80:	cbz	x9, 94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
  84:	lsl	x0, x9, #5
  88:	bl	0 <_Znwm>
  8c:	mov	x21, x0
  90:	b	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
  94:	mov	x21, xzr
  98:	ldr	x9, [x24]
  9c:	add	x0, x21, x27, lsl #5
  a0:	mov	w8, #0x6                   	// #6
  a4:	stp	x8, xzr, [x0]
  a8:	add	x8, x9, #0x10
  ac:	cmp	x8, #0x10
  b0:	str	x9, [x0, #16]
  b4:	b.hi	d0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>  // b.pmore
  b8:	mov	w9, #0x1                   	// #1
  bc:	lsl	x8, x9, x8
  c0:	mov	w9, #0x101                 	// #257
  c4:	movk	w9, #0x1, lsl #16
  c8:	tst	x8, x9
  cc:	b.ne	d4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  d0:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  d4:	ldr	x8, [x23]
  d8:	add	x9, x21, x27, lsl #5
  dc:	cmp	x26, x22
  e0:	mov	x23, x21
  e4:	str	x8, [x9, #24]
  e8:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
  ec:	mov	w28, #0x101                 	// #257
  f0:	mov	w24, #0x6                   	// #6
  f4:	mov	w27, #0x1                   	// #1
  f8:	movk	w28, #0x1, lsl #16
  fc:	mov	x23, x21
 100:	mov	x20, x26
 104:	b	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 108:	ldr	x8, [x20]
 10c:	mov	x0, x23
 110:	and	x1, x8, #0xfffffffffffffff8
 114:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 118:	ldr	x8, [x20, #24]
 11c:	add	x20, x20, #0x20
 120:	cmp	x22, x20
 124:	str	x8, [x23, #24]
 128:	add	x23, x23, #0x20
 12c:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
 130:	stp	x24, xzr, [x23]
 134:	ldr	x9, [x20, #16]
 138:	add	x8, x9, #0x10
 13c:	cmp	x8, #0x10
 140:	str	x9, [x23, #16]
 144:	b.hi	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.pmore
 148:	lsl	x8, x27, x8
 14c:	tst	x8, x28
 150:	b.ne	118 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.any
 154:	b	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>
 158:	cmp	x25, x22
 15c:	add	x23, x23, #0x20
 160:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 164:	mov	w28, #0x101                 	// #257
 168:	mov	w24, #0x6                   	// #6
 16c:	mov	w27, #0x1                   	// #1
 170:	movk	w28, #0x1, lsl #16
 174:	b	1a0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a0>
 178:	ldr	x8, [x22]
 17c:	mov	x0, x23
 180:	and	x1, x8, #0xfffffffffffffff8
 184:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 188:	ldr	x8, [x22, #24]
 18c:	add	x22, x22, #0x20
 190:	cmp	x25, x22
 194:	str	x8, [x23, #24]
 198:	add	x23, x23, #0x20
 19c:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 1a0:	stp	x24, xzr, [x23]
 1a4:	ldr	x9, [x22, #16]
 1a8:	add	x8, x9, #0x10
 1ac:	cmp	x8, #0x10
 1b0:	str	x9, [x23, #16]
 1b4:	b.hi	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>  // b.pmore
 1b8:	lsl	x8, x27, x8
 1bc:	tst	x8, x28
 1c0:	b.ne	188 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>  // b.any
 1c4:	b	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>
 1c8:	cmp	x26, x25
 1cc:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1d0:	mov	w24, #0x101                 	// #257
 1d4:	mov	w20, #0x1                   	// #1
 1d8:	movk	w24, #0x1, lsl #16
 1dc:	mov	x22, x26
 1e0:	b	1f8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>
 1e4:	mov	x0, x22
 1e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1ec:	add	x22, x22, #0x20
 1f0:	cmp	x25, x22
 1f4:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1f8:	ldr	x8, [x22, #16]
 1fc:	add	x8, x8, #0x10
 200:	cmp	x8, #0x10
 204:	b.hi	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>  // b.pmore
 208:	lsl	x8, x20, x8
 20c:	tst	x8, x24
 210:	b.ne	1ec <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ec>  // b.any
 214:	b	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>
 218:	cbz	x26, 224 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x224>
 21c:	mov	x0, x26
 220:	bl	0 <_ZdlPv>
 224:	stp	x21, x23, [x19]
 228:	ldr	x8, [sp, #8]
 22c:	add	x8, x21, x8, lsl #5
 230:	str	x8, [x19, #16]
 234:	ldp	x20, x19, [sp, #96]
 238:	ldp	x22, x21, [sp, #80]
 23c:	ldp	x24, x23, [sp, #64]
 240:	ldp	x26, x25, [sp, #48]
 244:	ldp	x28, x27, [sp, #32]
 248:	ldp	x29, x30, [sp, #16]
 24c:	add	sp, sp, #0x70
 250:	ret
 254:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	90 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x90>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	84 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x84>
  34:	b.cs	84 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x84>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x8, x8, #3
  6c:	lsl	x10, x20, #3
  70:	sub	x2, x10, x8
  74:	add	x0, x9, x8
  78:	mov	w1, wzr
  7c:	bl	0 <memset>
  80:	b	20 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm+0x20>
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_18AnyCoroSuspendInstEE6resizeEm>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 80 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x80>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	6c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x6c>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x54>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	tst	x0, #0x7
  58:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  5c:	and	x8, x0, #0xfffffffffffffff9
  60:	orr	x0, x8, #0x4
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	tst	x0, #0x7
  70:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  74:	and	x0, x0, #0xfffffffffffffff9
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  84:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  88:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x69                  	// #105
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0xb3                  	// #179
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x10, x9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	cmp	x9, x10
  1c:	b.eq	88 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x88>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  28:	ldp	x9, x8, [x19, #8]
  2c:	mov	w10, #0x18                  	// #24
  30:	cmp	x8, x9
  34:	mov	w9, #0x1c                  	// #28
  38:	csel	x9, x9, x10, eq  // eq = none
  3c:	ldr	w9, [x19, x9]
  40:	add	x8, x8, x9, lsl #3
  44:	cmp	x8, x0
  48:	b.cc	11c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x11c>  // b.lo, b.ul, b.last
  4c:	b.eq	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.none
  50:	ldr	x9, [x0]
  54:	cmn	x9, #0x2
  58:	b.cc	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.lo, b.ul, b.last
  5c:	add	x0, x0, #0x8
  60:	cmp	x8, x0
  64:	b.ne	50 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x50>  // b.any
  68:	mov	x0, x8
  6c:	ldr	x9, [x19]
  70:	stp	x0, x8, [x20]
  74:	strb	w1, [x20, #32]
  78:	stp	x19, x9, [x20, #16]
  7c:	ldp	x20, x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
  88:	ldr	w8, [x19, #28]
  8c:	cbz	w8, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  90:	mov	x0, xzr
  94:	lsl	x10, x8, #3
  98:	mov	x11, x9
  9c:	ldr	x12, [x11]
  a0:	cmp	x12, x1
  a4:	b.eq	110 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x110>  // b.none
  a8:	cmn	x12, #0x2
  ac:	csel	x0, x11, x0, eq  // eq = none
  b0:	subs	x10, x10, #0x8
  b4:	add	x11, x11, #0x8
  b8:	b.ne	9c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x9c>  // b.any
  bc:	cbz	x0, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  c0:	str	x1, [x0]
  c4:	ldr	w8, [x19, #32]
  c8:	ldr	x9, [x19]
  cc:	sub	w8, w8, #0x1
  d0:	add	x9, x9, #0x1
  d4:	str	w8, [x19, #32]
  d8:	b	104 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x104>
  dc:	ldr	w10, [x19, #24]
  e0:	cmp	w8, w10
  e4:	b.cs	20 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x20>  // b.hs, b.nlast
  e8:	add	w10, w8, #0x1
  ec:	lsl	x8, x8, #3
  f0:	str	w10, [x19, #28]
  f4:	str	x1, [x9, x8]
  f8:	ldp	x9, x10, [x19]
  fc:	add	x9, x9, #0x1
 100:	add	x0, x10, x8
 104:	str	x9, [x19]
 108:	mov	w1, #0x1                   	// #1
 10c:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 110:	mov	w1, wzr
 114:	mov	x0, x11
 118:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 11c:	adrp	x0, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 124:	adrp	x3, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0xf8                  	// #248
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_:

0000000000000000 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x9, x8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x9
  1c:	b.eq	58 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x58>  // b.none
  20:	mov	x0, x19
  24:	mov	x1, x20
  28:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  2c:	ldr	x10, [x0]
  30:	ldp	x8, x9, [x19, #8]
  34:	cmp	x10, x20
  38:	b.eq	90 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x90>  // b.none
  3c:	cmp	x9, x8
  40:	mov	w10, #0x18                  	// #24
  44:	mov	w11, #0x1c                  	// #28
  48:	csel	x10, x11, x10, eq  // eq = none
  4c:	ldr	w10, [x19, x10]
  50:	add	x0, x9, x10, lsl #3
  54:	b	90 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x90>
  58:	ldr	w10, [x19, #28]
  5c:	add	x0, x8, x10, lsl #3
  60:	cbz	w10, 8c <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x8c>
  64:	mov	x9, xzr
  68:	lsl	x10, x10, #3
  6c:	ldr	x11, [x8, x9]
  70:	cmp	x11, x20
  74:	b.eq	88 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x88>  // b.none
  78:	add	x9, x9, #0x8
  7c:	cmp	x10, x9
  80:	b.ne	6c <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x6c>  // b.any
  84:	b	8c <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0x8c>
  88:	add	x0, x8, x9
  8c:	mov	x9, x8
  90:	cmp	x9, x8
  94:	mov	w10, #0x18                  	// #24
  98:	mov	w11, #0x1c                  	// #28
  9c:	csel	x10, x11, x10, eq  // eq = none
  a0:	ldr	w10, [x19, x10]
  a4:	add	x10, x9, x10, lsl #3
  a8:	cmp	x10, x0
  ac:	b.cc	fc <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0xfc>  // b.lo, b.ul, b.last
  b0:	b.eq	d0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0xd0>  // b.none
  b4:	ldr	x11, [x0]
  b8:	cmn	x11, #0x2
  bc:	b.cc	d0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0xd0>  // b.lo, b.ul, b.last
  c0:	add	x0, x0, #0x8
  c4:	cmp	x10, x0
  c8:	b.ne	b4 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_+0xb4>  // b.any
  cc:	mov	x0, x10
  d0:	cmp	x9, x8
  d4:	mov	w8, #0x18                  	// #24
  d8:	mov	w10, #0x1c                  	// #28
  dc:	csel	x8, x10, x8, eq  // eq = none
  e0:	ldr	w8, [x19, x8]
  e4:	ldp	x20, x19, [sp, #16]
  e8:	add	x8, x9, x8, lsl #3
  ec:	cmp	x0, x8
  f0:	cset	w0, ne  // ne = any
  f4:	ldp	x29, x30, [sp], #32
  f8:	ret
  fc:	adrp	x0, 0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>
 100:	adrp	x1, 0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>
 104:	adrp	x3, 0 <_ZNK4llvm15SmallPtrSetImplIPNS_10BasicBlockEE5countEPKS1_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0xf8                  	// #248
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 64 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x64>
  34:	mov	w8, w0
  38:	add	x9, x20, #0x7
  3c:	tst	w19, #0xff
  40:	add	x9, x8, x9, lsr #3
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x22, x21, [sp, #16]
  4c:	sub	x9, x9, #0x1
  50:	udiv	x9, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	mul	x0, x9, x8
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc7                  	// #199
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	98 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x98>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	7c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x7c>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 80 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x80>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	b	8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  7c:	ldr	x1, [x29, #24]
  80:	cbz	x1, 8c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x8c>
  84:	add	x0, x29, #0x18
  88:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  9c:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a0:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x8e                  	// #142
  b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape12getIndexTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape12getIndexTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 44 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x44>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 64 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x64>
  18:	ldr	w9, [x8, #12]
  1c:	cmp	w9, #0x3
  20:	b.ls	84 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x84>  // b.plast
  24:	ldr	x8, [x8, #16]
  28:	ldr	x0, [x8, #24]
  2c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xa4>
  30:	ldrb	w8, [x0, #8]
  34:	cmp	w8, #0xb
  38:	b.ne	c4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xc4>  // b.any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  48:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  4c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x91                  	// #145
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x92                  	// #146
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x160                 	// #352
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w10, w8, #0xfffffff
  24:	cmp	w10, w9
  28:	mov	x21, x1
  2c:	b.ne	3c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x3c>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	tbz	w8, #30, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  40:	and	w9, w8, #0xfffffff
  44:	mov	w10, #0xfffffff             	// #268435455
  48:	cmp	w9, w10
  4c:	b.eq	e0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xe0>  // b.none
  50:	add	w9, w9, #0x1
  54:	and	w8, w8, #0xf0000000
  58:	orr	w8, w9, w8
  5c:	and	w9, w9, #0xfffffff
  60:	sub	w1, w9, #0x1
  64:	mov	x0, x20
  68:	mov	x2, x21
  6c:	str	w8, [x20, #20]
  70:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  74:	cbz	x19, 100 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x100>
  78:	ldr	w10, [x20, #20]
  7c:	and	x9, x10, #0xfffffff
  80:	sub	w8, w9, #0x1
  84:	tbnz	w10, #30, 98 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x98>
  88:	mov	w10, #0x18                  	// #24
  8c:	mneg	x9, x9, x10
  90:	add	x9, x20, x9
  94:	b	9c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x9c>
  98:	ldur	x9, [x20, #-8]
  9c:	ldr	w10, [x20, #56]
  a0:	mov	w11, #0x18                  	// #24
  a4:	ldr	x21, [sp, #16]
  a8:	madd	x9, x10, x11, x9
  ac:	add	x8, x9, w8, uxtw #3
  b0:	str	x19, [x8, #8]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xd8                  	// #216
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xd9                  	// #217
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa82                 	// #2690
 11c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, cc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xcc>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 12c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x12c>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	ec <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xec>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	80 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x80>  // b.any
  74:	cbz	x8, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  78:	ldr	w1, [x8, #32]
  7c:	b	bc <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xbc>
  80:	cbz	x20, a4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xa4>
  84:	lsl	x8, x20, #3
  88:	ldr	x9, [x19], #8
  8c:	ldr	x9, [x9]
  90:	ldrb	w10, [x9, #8]
  94:	cmp	w10, #0x10
  98:	b.eq	b4 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb4>  // b.none
  9c:	subs	x8, x8, #0x8
  a0:	b.ne	88 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x88>  // b.any
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	cbz	x9, 10c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x10c>
  b8:	ldr	w1, [x9, #32]
  bc:	ldp	x20, x19, [sp, #32]
  c0:	ldr	x21, [sp, #16]
  c4:	ldp	x29, x30, [sp], #48
  c8:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  cc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x375                 	// #885
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x108                 	// #264
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x69                  	// #105
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 100 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x100>
   c:	ldr	x8, [x0]
  10:	ldr	x9, [x2]
  14:	cmp	x8, x9
  18:	b.ne	120 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x120>  // b.any
  1c:	ldr	w9, [x0, #20]
  20:	and	x8, x9, #0xfffffff
  24:	cmp	w8, w1
  28:	b.ls	140 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x140>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x0, x8
  3c:	b	44 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x44>
  40:	ldur	x8, [x0, #-8]
  44:	mov	w9, #0x18                  	// #24
  48:	umaddl	x9, w1, w9, x8
  4c:	ldr	x11, [x9]
  50:	mov	w10, w1
  54:	cbz	x11, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  58:	mov	w11, #0x18                  	// #24
  5c:	madd	x12, x10, x11, x8
  60:	ldp	x13, x11, [x12, #8]
  64:	and	x11, x11, #0xfffffffffffffffc
  68:	str	x13, [x11]
  6c:	ldr	x12, [x12, #8]
  70:	cbz	x12, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  74:	ldr	x13, [x12, #16]
  78:	and	x13, x13, #0x3
  7c:	orr	x11, x13, x11
  80:	str	x11, [x12, #16]
  84:	str	x2, [x9]
  88:	ldr	x11, [x2, #8]!
  8c:	mov	w12, #0x18                  	// #24
  90:	madd	x12, x10, x12, x8
  94:	str	x11, [x12, #8]!
  98:	cbz	x11, b4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xb4>
  9c:	tst	x12, #0x3
  a0:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  a4:	ldr	x13, [x11, #16]
  a8:	and	x13, x13, #0x3
  ac:	orr	x12, x13, x12
  b0:	str	x12, [x11, #16]
  b4:	tst	x2, #0x3
  b8:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  bc:	mov	w11, #0x18                  	// #24
  c0:	madd	x8, x10, x11, x8
  c4:	ldr	x10, [x8, #16]!
  c8:	and	x10, x10, #0x3
  cc:	orr	x10, x10, x2
  d0:	str	x10, [x8]
  d4:	str	x9, [x2]
  d8:	ldp	x29, x30, [sp], #16
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xb3                  	// #179
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa5e                 	// #2654
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 124:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 128:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0xa60                 	// #2656
 13c:	bl	0 <__assert_fail>
 140:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 144:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 148:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0xadf                 	// #2783
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	str	x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	ldr	w8, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	sub	w9, w8, #0x1
  24:	tst	w8, w9
  28:	b.ne	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x118>  // b.any
  2c:	adrp	x11, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
  30:	ldr	x11, [x11]
  34:	mov	w9, #0x2                   	// #2
  38:	mov	x10, #0xfffffffffffffff8    	// #-8
  3c:	stp	xzr, x10, [sp, #24]
  40:	add	x19, x11, #0x10
  44:	stp	x19, x9, [sp, #8]
  48:	str	xzr, [sp, #40]
  4c:	cbz	w8, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x100>
  50:	ldr	x10, [x0, #8]
  54:	lsl	x11, x8, #6
  58:	mov	w23, #0x101                 	// #257
  5c:	mov	x8, #0xfffffffffffffff8    	// #-8
  60:	mov	w9, #0x2                   	// #2
  64:	mov	w20, #0x1                   	// #1
  68:	sub	x21, x11, #0x40
  6c:	add	x22, x10, #0x10
  70:	movk	w23, #0x1, lsl #16
  74:	and	x10, x9, #0x6
  78:	mov	x0, x22
  7c:	add	x9, x8, #0x10
  80:	str	x10, [x0, #-8]!
  84:	cmp	x9, #0x10
  88:	stp	xzr, x8, [x22]
  8c:	b.hi	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x9c>  // b.pmore
  90:	lsl	x8, x20, x9
  94:	tst	x8, x23
  98:	b.ne	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xa8>  // b.any
  9c:	ldr	x8, [sp, #16]
  a0:	and	x1, x8, #0xfffffffffffffff8
  a4:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  a8:	stur	x19, [x22, #-16]
  ac:	ldr	x8, [sp, #40]
  b0:	str	x8, [x22, #16]
  b4:	cbz	x21, cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xcc>
  b8:	ldr	x9, [sp, #16]
  bc:	ldr	x8, [sp, #32]
  c0:	sub	x21, x21, #0x40
  c4:	add	x22, x22, #0x40
  c8:	b	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x74>
  cc:	ldr	x8, [sp, #32]
  d0:	add	x8, x8, #0x10
  d4:	cmp	x8, #0x10
  d8:	b.hi	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xf4>  // b.pmore
  dc:	mov	w9, #0x1                   	// #1
  e0:	lsl	x8, x9, x8
  e4:	mov	w9, #0x101                 	// #257
  e8:	movk	w9, #0x1, lsl #16
  ec:	tst	x8, x9
  f0:	b.ne	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x100>  // b.any
  f4:	add	x8, sp, #0x8
  f8:	add	x0, x8, #0x8
  fc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 100:	ldp	x20, x19, [sp, #96]
 104:	ldp	x22, x21, [sp, #80]
 108:	ldr	x23, [sp, #64]
 10c:	ldp	x29, x30, [sp, #48]
 110:	add	sp, sp, #0x70
 114:	ret
 118:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 11c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 120:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x15c                 	// #348
 134:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	ldr	x8, [x0, #8]
  14:	mov	x20, x0
  18:	and	x9, x8, #0x6
  1c:	stp	x9, xzr, [sp, #16]
  20:	ldr	x10, [x0, #24]
  24:	add	x9, sp, #0x8
  28:	add	x19, x9, #0x8
  2c:	add	x9, x10, #0x10
  30:	cmp	x9, #0x10
  34:	str	x10, [sp, #32]
  38:	b.hi	54 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x54>  // b.pmore
  3c:	mov	w10, #0x1                   	// #1
  40:	lsl	x9, x10, x9
  44:	mov	w10, #0x101                 	// #257
  48:	movk	w10, #0x1, lsl #16
  4c:	tst	x9, x10
  50:	b.ne	60 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x60>  // b.any
  54:	and	x1, x8, #0xfffffffffffffff8
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  60:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  64:	ldr	x8, [x8]
  68:	add	x1, sp, #0x8
  6c:	add	x8, x8, #0x10
  70:	str	x8, [sp, #8]
  74:	ldr	x0, [x20, #32]
  78:	str	x0, [sp, #40]
  7c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  80:	ldr	x8, [sp, #32]
  84:	add	x8, x8, #0x10
  88:	cmp	x8, #0x10
  8c:	b.hi	a8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0xa8>  // b.pmore
  90:	mov	w9, #0x1                   	// #1
  94:	lsl	x8, x9, x8
  98:	mov	w9, #0x101                 	// #257
  9c:	movk	w9, #0x1, lsl #16
  a0:	tst	x8, x9
  a4:	b.ne	b0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0xb0>  // b.any
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  b0:	ldp	x20, x19, [sp, #64]
  b4:	ldp	x29, x30, [sp, #48]
  b8:	add	sp, sp, #0x50
  bc:	ret

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>:
   0:	sub	sp, sp, #0xf0
   4:	stp	x29, x30, [sp, #176]
   8:	stp	x24, x23, [sp, #192]
   c:	stp	x22, x21, [sp, #208]
  10:	stp	x20, x19, [sp, #224]
  14:	add	x29, sp, #0xb0
  18:	cbz	x1, 29c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x29c>
  1c:	ldr	x8, [x0, #8]
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	and	x9, x8, #0x6
  2c:	stp	x9, xzr, [x29, #-32]
  30:	ldr	x10, [x0, #24]
  34:	sub	x9, x29, #0x28
  38:	add	x19, x9, #0x8
  3c:	add	x9, x10, #0x10
  40:	cmp	x9, #0x10
  44:	stur	x10, [x29, #-16]
  48:	b.hi	64 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x64>  // b.pmore
  4c:	mov	w10, #0x1                   	// #1
  50:	lsl	x9, x10, x9
  54:	mov	w10, #0x101                 	// #257
  58:	movk	w10, #0x1, lsl #16
  5c:	tst	x9, x10
  60:	b.ne	70 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x70>  // b.any
  64:	and	x1, x8, #0xfffffffffffffff8
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  70:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  74:	ldr	x8, [x8]
  78:	add	x8, x8, #0x10
  7c:	stur	x8, [x29, #-40]
  80:	ldr	x21, [x21, #32]
  84:	stur	x21, [x29, #-8]
  88:	ldr	w8, [x21, #24]
  8c:	ldr	x9, [x21, #8]
  90:	cbz	w8, 100 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x100>
  94:	ldur	x10, [x29, #-16]
  98:	orr	x11, x10, #0x8
  9c:	cmn	x11, #0x8
  a0:	b.eq	27c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x27c>  // b.none
  a4:	ubfx	x11, x10, #4, #28
  a8:	eor	w11, w11, w10, lsr #9
  ac:	sub	w12, w8, #0x1
  b0:	and	w11, w11, w12
  b4:	add	x13, x9, x11, lsl #6
  b8:	ldr	x13, [x13, #24]
  bc:	cmp	x13, x10
  c0:	b.ne	d0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xd0>  // b.any
  c4:	add	x22, x9, x11, lsl #6
  c8:	add	x23, x9, x8, lsl #6
  cc:	b	108 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x108>
  d0:	mov	w14, #0x1                   	// #1
  d4:	cmn	x13, #0x8
  d8:	b.eq	100 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x100>  // b.none
  dc:	add	w11, w11, w14
  e0:	and	w11, w11, w12
  e4:	add	x13, x9, x11, lsl #6
  e8:	ldr	x13, [x13, #24]
  ec:	add	w14, w14, #0x1
  f0:	cmp	x13, x10
  f4:	b.ne	d4 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xd4>  // b.any
  f8:	mov	w11, w11
  fc:	b	c4 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xc4>
 100:	add	x22, x9, x8, lsl #6
 104:	mov	x23, x22
 108:	add	x8, x9, x8, lsl #6
 10c:	cmp	x22, x8
 110:	b.eq	234 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x234>  // b.none
 114:	mov	w8, #0x6                   	// #6
 118:	ldr	x24, [x21]
 11c:	stp	x8, xzr, [x29, #-64]
 120:	ldr	x9, [x22, #56]
 124:	add	x8, x9, #0x10
 128:	cmp	x8, #0x10
 12c:	stur	x9, [x29, #-48]
 130:	b.hi	150 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x150>  // b.pmore
 134:	mov	w9, #0x1                   	// #1
 138:	lsl	x8, x9, x8
 13c:	mov	w9, #0x101                 	// #257
 140:	movk	w9, #0x1, lsl #16
 144:	tst	x8, x9
 148:	mov	x0, x21
 14c:	b.ne	164 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x164>  // b.any
 150:	ldr	x8, [x22, #40]
 154:	sub	x0, x29, #0x40
 158:	and	x1, x8, #0xfffffffffffffff8
 15c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 160:	ldur	x0, [x29, #-8]
 164:	add	x1, sp, #0x50
 168:	stp	x21, x24, [sp, #80]
 16c:	stp	x22, x23, [sp, #96]
 170:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 174:	ldur	x9, [x29, #-48]
 178:	ldur	x21, [x29, #-8]
 17c:	mov	w8, #0x6                   	// #6
 180:	stp	x20, x8, [sp, #48]
 184:	add	x8, x9, #0x10
 188:	cmp	x8, #0x10
 18c:	stp	xzr, x9, [sp, #64]
 190:	b.hi	1ac <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1ac>  // b.pmore
 194:	mov	w9, #0x1                   	// #1
 198:	lsl	x8, x9, x8
 19c:	mov	w9, #0x101                 	// #257
 1a0:	movk	w9, #0x1, lsl #16
 1a4:	tst	x8, x9
 1a8:	b.ne	1c0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1c0>  // b.any
 1ac:	ldur	x8, [x29, #-64]
 1b0:	add	x9, sp, #0x30
 1b4:	add	x0, x9, #0x8
 1b8:	and	x1, x8, #0xfffffffffffffff8
 1bc:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 1c0:	add	x8, sp, #0x8
 1c4:	add	x1, sp, #0x30
 1c8:	mov	x0, x21
 1cc:	add	x20, sp, #0x30
 1d0:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 1d4:	ldr	x8, [sp, #72]
 1d8:	add	x8, x8, #0x10
 1dc:	cmp	x8, #0x10
 1e0:	b.hi	1fc <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1fc>  // b.pmore
 1e4:	mov	w9, #0x1                   	// #1
 1e8:	lsl	x8, x9, x8
 1ec:	mov	w9, #0x101                 	// #257
 1f0:	movk	w9, #0x1, lsl #16
 1f4:	tst	x8, x9
 1f8:	b.ne	204 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x204>  // b.any
 1fc:	add	x0, x20, #0x8
 200:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 204:	ldur	x8, [x29, #-48]
 208:	add	x8, x8, #0x10
 20c:	cmp	x8, #0x10
 210:	b.hi	22c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x22c>  // b.pmore
 214:	mov	w9, #0x1                   	// #1
 218:	lsl	x8, x9, x8
 21c:	mov	w9, #0x101                 	// #257
 220:	movk	w9, #0x1, lsl #16
 224:	tst	x8, x9
 228:	b.ne	234 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x234>  // b.any
 22c:	sub	x0, x29, #0x40
 230:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 234:	ldur	x8, [x29, #-16]
 238:	add	x8, x8, #0x10
 23c:	cmp	x8, #0x10
 240:	b.hi	25c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x25c>  // b.pmore
 244:	mov	w9, #0x1                   	// #1
 248:	lsl	x8, x9, x8
 24c:	mov	w9, #0x101                 	// #257
 250:	movk	w9, #0x1, lsl #16
 254:	tst	x8, x9
 258:	b.ne	264 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x264>  // b.any
 25c:	mov	x0, x19
 260:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 264:	ldp	x20, x19, [sp, #224]
 268:	ldp	x22, x21, [sp, #208]
 26c:	ldp	x24, x23, [sp, #192]
 270:	ldp	x29, x30, [sp, #176]
 274:	add	sp, sp, #0xf0
 278:	ret
 27c:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 280:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 284:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 288:	add	x0, x0, #0x0
 28c:	add	x1, x1, #0x0
 290:	add	x3, x3, #0x0
 294:	mov	w2, #0x252                 	// #594
 298:	bl	0 <__assert_fail>
 29c:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2a0:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2a4:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2a8:	add	x0, x0, #0x0
 2ac:	add	x1, x1, #0x0
 2b0:	add	x3, x3, #0x0
 2b4:	mov	w2, #0x69                  	// #105
 2b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	str	x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	w9, [x0, #24]
  18:	cbz	w9, 15c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x15c>
  1c:	ldr	x8, [x1, #24]
  20:	orr	x10, x8, #0x8
  24:	cmn	x10, #0x8
  28:	b.eq	174 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x174>  // b.none
  2c:	ldr	x20, [x0, #8]
  30:	ubfx	x10, x8, #4, #28
  34:	eor	w10, w10, w8, lsr #9
  38:	sub	w9, w9, #0x1
  3c:	and	w21, w10, w9
  40:	add	x10, x20, x21, lsl #6
  44:	ldr	x10, [x10, #24]
  48:	mov	x19, x0
  4c:	cmp	x10, x8
  50:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x12c>  // b.any
  54:	add	x8, x20, x21, lsl #6
  58:	ldr	x9, [x8, #56]
  5c:	add	x9, x9, #0x10
  60:	cmp	x9, #0x10
  64:	b.hi	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x80>  // b.pmore
  68:	mov	w10, #0x1                   	// #1
  6c:	lsl	x9, x10, x9
  70:	mov	w10, #0x101                 	// #257
  74:	movk	w10, #0x1, lsl #16
  78:	tst	x9, x10
  7c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x88>  // b.any
  80:	add	x0, x8, #0x28
  84:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  88:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  8c:	ldr	x10, [x10]
  90:	mov	x9, #0xfffffffffffffff0    	// #-16
  94:	mov	w8, #0x2                   	// #2
  98:	add	x20, x20, x21, lsl #6
  9c:	stp	xzr, x9, [sp, #24]
  a0:	add	x9, x10, #0x10
  a4:	stp	x9, x8, [sp, #8]
  a8:	str	xzr, [sp, #40]
  ac:	mov	x21, x20
  b0:	ldr	x8, [x21, #24]!
  b4:	cmn	x8, #0x10
  b8:	b.eq	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd8>  // b.none
  bc:	cmn	x8, #0x8
  c0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd0>  // b.none
  c4:	cbz	x8, d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd0>
  c8:	sub	x0, x21, #0x10
  cc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  d0:	mov	x8, #0xfffffffffffffff0    	// #-16
  d4:	str	x8, [x21]
  d8:	str	xzr, [x20, #32]
  dc:	ldr	x8, [sp, #32]
  e0:	add	x8, x8, #0x10
  e4:	cmp	x8, #0x10
  e8:	b.hi	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x104>  // b.pmore
  ec:	mov	w9, #0x1                   	// #1
  f0:	lsl	x8, x9, x8
  f4:	mov	w9, #0x101                 	// #257
  f8:	movk	w9, #0x1, lsl #16
  fc:	tst	x8, x9
 100:	b.ne	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x110>  // b.any
 104:	add	x8, sp, #0x8
 108:	add	x0, x8, #0x8
 10c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 110:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 114:	ldr	d0, [x19, #16]
 118:	ldr	d1, [x8]
 11c:	mov	w0, #0x1                   	// #1
 120:	add	v0.2s, v0.2s, v1.2s
 124:	str	d0, [x19, #16]
 128:	b	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x160>
 12c:	mov	w11, #0x1                   	// #1
 130:	cmn	x10, #0x8
 134:	b.eq	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x15c>  // b.none
 138:	add	w10, w21, w11
 13c:	and	w21, w10, w9
 140:	add	x10, x20, x21, lsl #6
 144:	ldr	x10, [x10, #24]
 148:	add	w11, w11, #0x1
 14c:	cmp	x10, x8
 150:	b.ne	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x130>  // b.any
 154:	mov	w21, w21
 158:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x54>
 15c:	mov	w0, wzr
 160:	ldp	x20, x19, [sp, #80]
 164:	ldr	x21, [sp, #64]
 168:	ldp	x29, x30, [sp, #48]
 16c:	add	sp, sp, #0x60
 170:	ret
 174:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 178:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 17c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x252                 	// #594
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	ldp	x8, x9, [x1]
  14:	ldr	x8, [x8]
  18:	cmp	x8, x9
  1c:	b.ne	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xfc>  // b.any
  20:	ldr	x20, [x1, #16]
  24:	mov	x19, x0
  28:	ldr	x8, [x20, #56]
  2c:	add	x8, x8, #0x10
  30:	cmp	x8, #0x10
  34:	b.hi	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x50>  // b.pmore
  38:	mov	w9, #0x1                   	// #1
  3c:	lsl	x8, x9, x8
  40:	mov	w9, #0x101                 	// #257
  44:	movk	w9, #0x1, lsl #16
  48:	tst	x8, x9
  4c:	b.ne	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x58>  // b.any
  50:	add	x0, x20, #0x28
  54:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  58:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  5c:	ldr	x10, [x10]
  60:	mov	x9, #0xfffffffffffffff0    	// #-16
  64:	mov	w8, #0x2                   	// #2
  68:	stp	xzr, x9, [sp, #24]
  6c:	add	x9, x10, #0x10
  70:	stp	x9, x8, [sp, #8]
  74:	str	xzr, [sp, #40]
  78:	ldr	x8, [x20, #24]
  7c:	cmn	x8, #0x10
  80:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xa0>  // b.none
  84:	cmn	x8, #0x8
  88:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x98>  // b.none
  8c:	cbz	x8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x98>
  90:	add	x0, x20, #0x8
  94:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  98:	mov	x8, #0xfffffffffffffff0    	// #-16
  9c:	str	x8, [x20, #24]
  a0:	str	xzr, [x20, #32]
  a4:	ldr	x8, [sp, #32]
  a8:	add	x8, x8, #0x10
  ac:	cmp	x8, #0x10
  b0:	b.hi	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xcc>  // b.pmore
  b4:	mov	w9, #0x1                   	// #1
  b8:	lsl	x8, x9, x8
  bc:	mov	w9, #0x101                 	// #257
  c0:	movk	w9, #0x1, lsl #16
  c4:	tst	x8, x9
  c8:	b.ne	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xd8>  // b.any
  cc:	add	x8, sp, #0x8
  d0:	add	x0, x8, #0x8
  d4:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  d8:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  dc:	ldr	d0, [x19, #16]
  e0:	ldr	d1, [x8]
  e4:	add	v0.2s, v0.2s, v1.2s
  e8:	str	d0, [x19, #16]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x29, x30, [sp, #48]
  f4:	add	sp, sp, #0x50
  f8:	ret
  fc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 100:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 104:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x4b3                 	// #1203
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E:

0000000000000000 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>:
   0:	sub	sp, sp, #0xd0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x24, x23, [sp, #160]
   c:	stp	x22, x21, [sp, #176]
  10:	stp	x20, x19, [sp, #192]
  14:	add	x29, sp, #0x90
  18:	ldr	x9, [x1]
  1c:	mov	x19, x8
  20:	mov	x8, sp
  24:	mov	x22, x1
  28:	add	x10, x9, #0x10
  2c:	mov	x21, x0
  30:	add	x20, x8, #0x8
  34:	mov	w8, #0x2                   	// #2
  38:	cmp	x10, #0x10
  3c:	stp	x8, xzr, [sp, #8]
  40:	str	x9, [sp, #24]
  44:	b.hi	60 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x60>  // b.pmore
  48:	mov	w11, #0x1                   	// #1
  4c:	lsl	x10, x11, x10
  50:	mov	w11, #0x101                 	// #257
  54:	movk	w11, #0x1, lsl #16
  58:	tst	x10, x11
  5c:	b.ne	70 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x70>  // b.any
  60:	mov	x0, x20
  64:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  68:	ldr	x8, [sp, #8]
  6c:	ldr	x9, [sp, #24]
  70:	adrp	x24, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
  74:	ldr	x24, [x24]
  78:	add	x11, sp, #0x28
  7c:	add	x10, x9, #0x10
  80:	and	x12, x8, #0x6
  84:	add	x13, x24, #0x10
  88:	add	x23, x11, #0x8
  8c:	cmp	x10, #0x10
  90:	stp	x12, xzr, [sp, #48]
  94:	str	x13, [sp]
  98:	str	x21, [sp, #32]
  9c:	str	x9, [sp, #64]
  a0:	b.hi	c0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xc0>  // b.pmore
  a4:	mov	w9, #0x1                   	// #1
  a8:	lsl	x9, x9, x10
  ac:	mov	w10, #0x101                 	// #257
  b0:	movk	w10, #0x1, lsl #16
  b4:	tst	x9, x10
  b8:	mov	x9, x21
  bc:	b.ne	d0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xd0>  // b.any
  c0:	and	x1, x8, #0xfffffffffffffff8
  c4:	mov	x0, x23
  c8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  cc:	ldr	x9, [sp, #32]
  d0:	add	x8, x24, #0x10
  d4:	mov	w10, #0x6                   	// #6
  d8:	str	x8, [sp, #40]
  dc:	stp	x9, x10, [sp, #72]
  e0:	ldr	x9, [x22, #24]
  e4:	add	x8, sp, #0x28
  e8:	add	x24, x8, #0x28
  ec:	add	x8, x9, #0x10
  f0:	cmp	x8, #0x10
  f4:	stp	xzr, x9, [sp, #88]
  f8:	b.hi	114 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x114>  // b.pmore
  fc:	mov	w9, #0x1                   	// #1
 100:	lsl	x8, x9, x8
 104:	mov	w9, #0x101                 	// #257
 108:	movk	w9, #0x1, lsl #16
 10c:	tst	x8, x9
 110:	b.ne	124 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x124>  // b.any
 114:	ldr	x8, [x22, #8]
 118:	mov	x0, x24
 11c:	and	x1, x8, #0xfffffffffffffff8
 120:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 124:	sub	x8, x29, #0x28
 128:	add	x1, sp, #0x28
 12c:	mov	x0, x21
 130:	mov	x2, x24
 134:	add	x22, sp, #0x28
 138:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
 13c:	ldr	x8, [sp, #96]
 140:	add	x8, x8, #0x10
 144:	cmp	x8, #0x10
 148:	b.hi	164 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x164>  // b.pmore
 14c:	mov	w9, #0x1                   	// #1
 150:	lsl	x8, x9, x8
 154:	mov	w9, #0x101                 	// #257
 158:	movk	w9, #0x1, lsl #16
 15c:	tst	x8, x9
 160:	b.ne	16c <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x16c>  // b.any
 164:	add	x0, x22, #0x28
 168:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 16c:	ldr	x8, [sp, #64]
 170:	add	x8, x8, #0x10
 174:	cmp	x8, #0x10
 178:	b.hi	194 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x194>  // b.pmore
 17c:	mov	w9, #0x1                   	// #1
 180:	lsl	x8, x9, x8
 184:	mov	w9, #0x101                 	// #257
 188:	movk	w9, #0x1, lsl #16
 18c:	tst	x8, x9
 190:	b.ne	19c <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x19c>  // b.any
 194:	mov	x0, x23
 198:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 19c:	ldr	x8, [sp, #24]
 1a0:	add	x8, x8, #0x10
 1a4:	cmp	x8, #0x10
 1a8:	b.hi	1c4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1c4>  // b.pmore
 1ac:	mov	w9, #0x1                   	// #1
 1b0:	lsl	x8, x9, x8
 1b4:	mov	w9, #0x101                 	// #257
 1b8:	movk	w9, #0x1, lsl #16
 1bc:	tst	x8, x9
 1c0:	b.ne	1cc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1cc>  // b.any
 1c4:	mov	x0, x20
 1c8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1cc:	ldur	q0, [x29, #-24]
 1d0:	ldur	q1, [x29, #-40]
 1d4:	ldurb	w8, [x29, #-8]
 1d8:	ldp	x22, x21, [sp, #176]
 1dc:	ldp	x24, x23, [sp, #160]
 1e0:	stp	q1, q0, [x19]
 1e4:	strb	w8, [x19, #32]
 1e8:	ldp	x20, x19, [sp, #192]
 1ec:	ldp	x29, x30, [sp, #144]
 1f0:	add	sp, sp, #0xd0
 1f4:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w9, [x0, #24]
  10:	mov	x3, x2
  14:	mov	x2, x1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	cbz	w9, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x60>
  24:	ldr	x10, [x2, #24]
  28:	orr	x8, x10, #0x8
  2c:	cmn	x8, #0x8
  30:	b.eq	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xe8>  // b.none
  34:	ldr	x8, [x19, #8]
  38:	ubfx	x11, x10, #4, #28
  3c:	eor	w12, w11, w10, lsr #9
  40:	sub	w11, w9, #0x1
  44:	and	w12, w12, w11
  48:	add	x0, x8, x12, lsl #6
  4c:	ldr	x14, [x0, #24]
  50:	cmp	x14, x10
  54:	b.ne	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x9c>  // b.any
  58:	mov	w10, wzr
  5c:	b	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x78>
  60:	mov	x1, xzr
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  6c:	ldr	x8, [x19, #8]
  70:	ldr	w9, [x19, #24]
  74:	mov	w10, #0x1                   	// #1
  78:	ldr	x11, [x19]
  7c:	mov	w9, w9
  80:	add	x8, x8, x9, lsl #6
  84:	stp	x0, x8, [x20, #16]
  88:	stp	x19, x11, [x20]
  8c:	strb	w10, [x20, #32]
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret
  9c:	mov	x13, xzr
  a0:	mov	w16, #0x1                   	// #1
  a4:	mov	x15, #0xfffffffffffffff0    	// #-16
  a8:	cmn	x14, #0x8
  ac:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xdc>  // b.none
  b0:	cmp	x13, #0x0
  b4:	add	w12, w12, w16
  b8:	ccmp	x14, x15, #0x0, eq  // eq = none
  bc:	and	w12, w12, w11
  c0:	csel	x13, x13, x0, ne  // ne = any
  c4:	add	x0, x8, x12, lsl #6
  c8:	ldr	x14, [x0, #24]
  cc:	add	w16, w16, #0x1
  d0:	cmp	x14, x10
  d4:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x58>  // b.none
  d8:	b	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xa8>
  dc:	cmp	x13, #0x0
  e0:	csel	x1, x0, x13, eq  // eq = none
  e4:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x64>
  e8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  ec:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  f0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x252                 	// #594
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x3, x1
  18:	mov	x1, x2
  1c:	mov	x21, x2
  20:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_>
  24:	ldr	x9, [x0, #24]
  28:	ldr	x8, [x21, #24]
  2c:	mov	x20, x0
  30:	cmp	x9, x8
  34:	b.eq	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0xa4>  // b.none
  38:	add	x9, x9, #0x10
  3c:	cmp	x9, #0x10
  40:	add	x22, x20, #0x8
  44:	b.hi	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0x60>  // b.pmore
  48:	mov	w10, #0x1                   	// #1
  4c:	lsl	x9, x10, x9
  50:	mov	w10, #0x101                 	// #257
  54:	movk	w10, #0x1, lsl #16
  58:	tst	x9, x10
  5c:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0x6c>  // b.any
  60:	mov	x0, x22
  64:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  68:	ldr	x8, [x21, #24]
  6c:	add	x9, x8, #0x10
  70:	cmp	x9, #0x10
  74:	str	x8, [x20, #24]
  78:	b.hi	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0x94>  // b.pmore
  7c:	mov	w8, #0x1                   	// #1
  80:	lsl	x8, x8, x9
  84:	mov	w9, #0x101                 	// #257
  88:	movk	w9, #0x1, lsl #16
  8c:	tst	x8, x9
  90:	b.ne	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0xa4>  // b.any
  94:	ldr	x8, [x21, #8]
  98:	mov	x0, x22
  9c:	and	x1, x8, #0xfffffffffffffff8
  a0:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  a4:	ldr	x8, [x21, #32]
  a8:	mov	w9, #0x6                   	// #6
  ac:	mov	x0, x20
  b0:	str	x9, [x0, #40]!
  b4:	stur	x8, [x0, #-8]
  b8:	str	xzr, [x0, #8]
  bc:	ldr	x9, [x19, #16]
  c0:	add	x8, x9, #0x10
  c4:	cmp	x8, #0x10
  c8:	str	x9, [x0, #16]
  cc:	b.hi	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0xe8>  // b.pmore
  d0:	mov	w9, #0x1                   	// #1
  d4:	lsl	x8, x9, x8
  d8:	mov	w9, #0x101                 	// #257
  dc:	movk	w9, #0x1, lsl #16
  e0:	tst	x8, x9
  e4:	b.ne	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16InsertIntoBucketISC_JS6_EEEPSH_SL_OT_DpOT0_+0xf4>  // b.any
  e8:	ldr	x8, [x19]
  ec:	and	x1, x8, #0xfffffffffffffff8
  f0:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  f4:	mov	x0, x20
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldp	x22, x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3, #24]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1a4>
  a0:	ldr	x8, [x20, #24]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, x11, lsl #6
  c8:	ldr	x13, [x3, #24]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, x11, lsl #6
 100:	ldr	x13, [x3, #24]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1a4>
 124:	ldr	x8, [x20, #24]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, x11, lsl #6
 14c:	ldr	x13, [x3, #24]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, x11, lsl #6
 184:	ldr	x13, [x3, #24]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x19, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x20, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #6
  54:	bl	0 <_Znwm>
  58:	str	x0, [x20, #8]
  5c:	cbz	x19, 84 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj+0x84>
  60:	add	x2, x19, x21, lsl #6
  64:	mov	x0, x20
  68:	mov	x1, x19
  6c:	bl	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>
  70:	mov	x0, x19
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	b	0 <_ZN4llvm8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEES5_NS_12DenseMapInfoISB_EENS_6detail12DenseMapPairISB_S5_EEE4growEj>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	str	x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	mov	x19, x2
  24:	mov	x20, x1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  30:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  34:	ldr	x10, [x10]
  38:	mov	x9, #0xfffffffffffffff8    	// #-8
  3c:	mov	w8, #0x2                   	// #2
  40:	stp	x9, xzr, [sp, #64]
  44:	mov	x24, #0xfffffffffffffff0    	// #-16
  48:	cmp	x20, x19
  4c:	add	x9, x10, #0x10
  50:	stp	x8, xzr, [sp, #48]
  54:	stp	xzr, x24, [sp, #16]
  58:	stp	xzr, x9, [sp, #32]
  5c:	stp	x9, x8, [sp]
  60:	b.eq	25c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x25c>  // b.none
  64:	mov	w26, #0x101                 	// #257
  68:	mov	x9, #0xfffffffffffffff8    	// #-8
  6c:	mov	w25, #0x1                   	// #1
  70:	movk	w26, #0x1, lsl #16
  74:	mov	w27, #0x6                   	// #6
  78:	mov	x10, #0xfffffffffffffff0    	// #-16
  7c:	ldr	x8, [x20, #24]
  80:	cmp	x8, x9
  84:	b.eq	1ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1ec>  // b.none
  88:	cmp	x8, x10
  8c:	b.eq	1ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1ec>  // b.none
  90:	ldr	w10, [x21, #24]
  94:	cbz	w10, 114 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x114>
  98:	orr	x9, x8, #0x8
  9c:	cmn	x9, #0x8
  a0:	b.eq	2b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2b0>  // b.none
  a4:	ldr	x9, [x21, #8]
  a8:	ubfx	x11, x8, #4, #28
  ac:	eor	w11, w11, w8, lsr #9
  b0:	sub	w10, w10, #0x1
  b4:	and	w11, w11, w10
  b8:	add	x12, x9, x11, lsl #6
  bc:	ldr	x13, [x12, #24]
  c0:	cmp	x13, x8
  c4:	b.eq	2d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2d0>  // b.none
  c8:	mov	x12, xzr
  cc:	mov	w14, #0x1                   	// #1
  d0:	cmn	x13, #0x8
  d4:	add	x15, x9, x11, lsl #6
  d8:	b.eq	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x108>  // b.none
  dc:	add	w11, w11, w14
  e0:	cmp	x12, #0x0
  e4:	and	w11, w11, w10
  e8:	ccmp	x13, x24, #0x0, eq  // eq = none
  ec:	add	x13, x9, x11, lsl #6
  f0:	ldr	x13, [x13, #24]
  f4:	csel	x12, x12, x15, ne  // ne = any
  f8:	add	w14, w14, #0x1
  fc:	cmp	x13, x8
 100:	b.ne	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0xd0>  // b.any
 104:	b	2d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2d0>
 108:	cmp	x12, #0x0
 10c:	csel	x22, x15, x12, eq  // eq = none
 110:	b	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x118>
 114:	mov	x22, xzr
 118:	ldr	x9, [x22, #24]
 11c:	cmp	x9, x8
 120:	b.eq	178 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x178>  // b.none
 124:	add	x9, x9, #0x10
 128:	cmp	x9, #0x10
 12c:	add	x23, x22, #0x8
 130:	b.hi	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x140>  // b.pmore
 134:	lsl	x9, x25, x9
 138:	tst	x9, x26
 13c:	b.ne	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x14c>  // b.any
 140:	mov	x0, x23
 144:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 148:	ldr	x8, [x20, #24]
 14c:	add	x9, x8, #0x10
 150:	cmp	x9, #0x10
 154:	str	x8, [x22, #24]
 158:	b.hi	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x168>  // b.pmore
 15c:	lsl	x8, x25, x9
 160:	tst	x8, x26
 164:	b.ne	178 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x178>  // b.any
 168:	ldr	x8, [x20, #8]
 16c:	mov	x0, x23
 170:	and	x1, x8, #0xfffffffffffffff8
 174:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 178:	ldr	x8, [x20, #32]
 17c:	str	x27, [x22, #40]!
 180:	str	xzr, [x22, #8]
 184:	add	x23, x20, #0x28
 188:	stur	x8, [x22, #-8]
 18c:	ldr	x9, [x20, #56]
 190:	add	x8, x9, #0x10
 194:	cmp	x8, #0x10
 198:	str	x9, [x22, #16]
 19c:	b.hi	1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1ac>  // b.pmore
 1a0:	lsl	x8, x25, x8
 1a4:	tst	x8, x26
 1a8:	b.ne	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1bc>  // b.any
 1ac:	ldr	x8, [x23]
 1b0:	mov	x0, x22
 1b4:	and	x1, x8, #0xfffffffffffffff8
 1b8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 1bc:	ldr	w8, [x21, #16]
 1c0:	add	w8, w8, #0x1
 1c4:	str	w8, [x21, #16]
 1c8:	ldr	x8, [x20, #56]
 1cc:	add	x8, x8, #0x10
 1d0:	cmp	x8, #0x10
 1d4:	b.hi	1e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1e4>  // b.pmore
 1d8:	lsl	x8, x25, x8
 1dc:	tst	x8, x26
 1e0:	b.ne	1ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1ec>  // b.any
 1e4:	mov	x0, x23
 1e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1ec:	ldr	x8, [x20, #24]
 1f0:	add	x8, x8, #0x10
 1f4:	cmp	x8, #0x10
 1f8:	b.hi	208 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x208>  // b.pmore
 1fc:	lsl	x8, x25, x8
 200:	tst	x8, x26
 204:	b.ne	210 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x210>  // b.any
 208:	add	x0, x20, #0x8
 20c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 210:	add	x20, x20, #0x40
 214:	cmp	x20, x19
 218:	b.eq	228 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x228>  // b.none
 21c:	ldr	x9, [sp, #64]
 220:	ldr	x10, [sp, #24]
 224:	b	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x7c>
 228:	ldr	x8, [sp, #24]
 22c:	add	x8, x8, #0x10
 230:	cmp	x8, #0x10
 234:	b.hi	250 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x250>  // b.pmore
 238:	mov	w9, #0x1                   	// #1
 23c:	lsl	x8, x9, x8
 240:	mov	w9, #0x101                 	// #257
 244:	movk	w9, #0x1, lsl #16
 248:	tst	x8, x9
 24c:	b.ne	25c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x25c>  // b.any
 250:	mov	x8, sp
 254:	add	x0, x8, #0x8
 258:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 25c:	ldr	x8, [sp, #64]
 260:	add	x8, x8, #0x10
 264:	cmp	x8, #0x10
 268:	b.hi	284 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x284>  // b.pmore
 26c:	mov	w9, #0x1                   	// #1
 270:	lsl	x8, x9, x8
 274:	mov	w9, #0x101                 	// #257
 278:	movk	w9, #0x1, lsl #16
 27c:	tst	x8, x9
 280:	b.ne	290 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x290>  // b.any
 284:	add	x8, sp, #0x28
 288:	add	x0, x8, #0x8
 28c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 290:	ldp	x20, x19, [sp, #160]
 294:	ldp	x22, x21, [sp, #144]
 298:	ldp	x24, x23, [sp, #128]
 29c:	ldp	x26, x25, [sp, #112]
 2a0:	ldr	x27, [sp, #96]
 2a4:	ldp	x29, x30, [sp, #80]
 2a8:	add	sp, sp, #0xb0
 2ac:	ret
 2b0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2b4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2b8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x252                 	// #594
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2d4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2d8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x17a                 	// #378
 2ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_:

0000000000000000 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	str	x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	x9, [x1]
  18:	add	x8, sp, #0x8
  1c:	add	x19, x8, #0x8
  20:	mov	w8, #0x2                   	// #2
  24:	stp	x8, xzr, [sp, #16]
  28:	add	x8, x9, #0x10
  2c:	mov	x21, x0
  30:	cmp	x8, #0x10
  34:	str	x9, [sp, #32]
  38:	b.hi	54 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x54>  // b.pmore
  3c:	mov	w9, #0x1                   	// #1
  40:	lsl	x8, x9, x8
  44:	mov	w9, #0x101                 	// #257
  48:	movk	w9, #0x1, lsl #16
  4c:	tst	x8, x9
  50:	b.ne	5c <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x5c>  // b.any
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  5c:	adrp	x8, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
  60:	ldr	x8, [x8]
  64:	str	x21, [sp, #40]
  68:	add	x8, x8, #0x10
  6c:	str	x8, [sp, #8]
  70:	ldr	w10, [x21, #24]
  74:	cbz	w10, ec <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0xec>
  78:	ldr	x8, [sp, #32]
  7c:	orr	x9, x8, #0x8
  80:	cmn	x9, #0x8
  84:	b.eq	1e8 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x1e8>  // b.none
  88:	ldr	x9, [x21, #8]
  8c:	ubfx	x11, x8, #4, #28
  90:	eor	w11, w11, w8, lsr #9
  94:	sub	w10, w10, #0x1
  98:	and	w11, w11, w10
  9c:	add	x20, x9, x11, lsl #6
  a0:	ldr	x13, [x20, #24]
  a4:	cmp	x13, x8
  a8:	b.eq	194 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x194>  // b.none
  ac:	mov	x12, xzr
  b0:	mov	w15, #0x1                   	// #1
  b4:	mov	x14, #0xfffffffffffffff0    	// #-16
  b8:	cmn	x13, #0x8
  bc:	b.eq	1dc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x1dc>  // b.none
  c0:	cmp	x12, #0x0
  c4:	add	w11, w11, w15
  c8:	ccmp	x13, x14, #0x0, eq  // eq = none
  cc:	and	w11, w11, w10
  d0:	csel	x12, x12, x20, ne  // ne = any
  d4:	add	x20, x9, x11, lsl #6
  d8:	ldr	x13, [x20, #24]
  dc:	add	w15, w15, #0x1
  e0:	cmp	x13, x8
  e4:	b.eq	194 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x194>  // b.none
  e8:	b	b8 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0xb8>
  ec:	mov	x3, xzr
  f0:	add	x1, sp, #0x8
  f4:	add	x2, sp, #0x8
  f8:	mov	x0, x21
  fc:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
 100:	ldr	x9, [x0, #24]
 104:	ldr	x8, [sp, #32]
 108:	mov	x20, x0
 10c:	cmp	x9, x8
 110:	b.eq	180 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x180>  // b.none
 114:	add	x9, x9, #0x10
 118:	cmp	x9, #0x10
 11c:	add	x21, x20, #0x8
 120:	b.hi	13c <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x13c>  // b.pmore
 124:	mov	w10, #0x1                   	// #1
 128:	lsl	x9, x10, x9
 12c:	mov	w10, #0x101                 	// #257
 130:	movk	w10, #0x1, lsl #16
 134:	tst	x9, x10
 138:	b.ne	148 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x148>  // b.any
 13c:	mov	x0, x21
 140:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 144:	ldr	x8, [sp, #32]
 148:	add	x9, x8, #0x10
 14c:	cmp	x9, #0x10
 150:	str	x8, [x20, #24]
 154:	b.hi	170 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x170>  // b.pmore
 158:	mov	w8, #0x1                   	// #1
 15c:	lsl	x8, x8, x9
 160:	mov	w9, #0x101                 	// #257
 164:	movk	w9, #0x1, lsl #16
 168:	tst	x8, x9
 16c:	b.ne	180 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x180>  // b.any
 170:	ldr	x8, [sp, #16]
 174:	mov	x0, x21
 178:	and	x1, x8, #0xfffffffffffffff8
 17c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 180:	ldr	x8, [sp, #40]
 184:	mov	w9, #0x6                   	// #6
 188:	stp	xzr, xzr, [x20, #48]
 18c:	stp	x8, x9, [x20, #32]
 190:	ldr	x8, [sp, #32]
 194:	add	x8, x8, #0x10
 198:	cmp	x8, #0x10
 19c:	add	x20, x20, #0x28
 1a0:	b.hi	1bc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x1bc>  // b.pmore
 1a4:	mov	w9, #0x1                   	// #1
 1a8:	lsl	x8, x9, x8
 1ac:	mov	w9, #0x101                 	// #257
 1b0:	movk	w9, #0x1, lsl #16
 1b4:	tst	x8, x9
 1b8:	b.ne	1c4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0x1c4>  // b.any
 1bc:	mov	x0, x19
 1c0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1c4:	mov	x0, x20
 1c8:	ldp	x20, x19, [sp, #80]
 1cc:	ldr	x21, [sp, #64]
 1d0:	ldp	x29, x30, [sp, #48]
 1d4:	add	sp, sp, #0x60
 1d8:	ret
 1dc:	cmp	x12, #0x0
 1e0:	csel	x3, x20, x12, eq  // eq = none
 1e4:	b	f0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_+0xf0>
 1e8:	adrp	x0, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
 1ec:	adrp	x1, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
 1f0:	adrp	x3, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEixERKS3_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x252                 	// #594
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape21getResumeFunctionTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w9, w8, #0x1
  10:	cmp	w9, #0x2
  14:	b.cs	38 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x38>  // b.hs, b.nlast
  18:	ldr	x8, [x0, #200]
  1c:	ldr	x0, [x8, #24]
  20:	cbz	x0, 58 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x58>
  24:	ldrb	w8, [x0, #8]
  28:	cmp	w8, #0xc
  2c:	b.ne	90 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x90>  // b.any
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	cbnz	w8, 78 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x78>
  3c:	bl	0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  40:	ldrb	w8, [x0, #8]
  44:	cmp	w8, #0xf
  48:	b.ne	b0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0xb0>  // b.any
  4c:	ldr	x8, [x0, #16]
  50:	ldr	x0, [x8]
  54:	cbnz	x0, 24 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x24>
  58:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  7c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0xa9                  	// #169
  8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x17e                 	// #382
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 40 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x40>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 60 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x60>
  18:	ldr	w9, [x8, #12]
  1c:	cbz	w9, 80 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x80>
  20:	ldr	x8, [x8, #16]
  24:	ldr	x0, [x8]
  28:	cbz	x0, a0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xa0>
  2c:	ldrb	w8, [x0, #8]
  30:	cmp	w8, #0xf
  34:	b.ne	c0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xc0>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  44:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  48:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x9a                  	// #154
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  64:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  68:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x9b                  	// #155
  7c:	bl	0 <__assert_fail>
  80:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  84:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  88:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x160                 	// #352
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x69                  	// #105
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x108                 	// #264
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x6c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x6c>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  3c:	ldr	x0, [x20, #64]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x50
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x54>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x20, #32]
  58:	add	x8, x20, #0x30
  5c:	cmp	x0, x8
  60:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>  // b.none
  64:	bl	0 <_ZdlPv>
  68:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x21, x2
  2c:	mov	w23, w1
  30:	mov	x22, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x20, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  40:	ldrb	w8, [x20, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xa4>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	mov	w8, #0x101                 	// #257
  5c:	add	x4, sp, #0x8
  60:	mov	w1, w23
  64:	mov	x2, x21
  68:	mov	x3, x20
  6c:	mov	x24, x0
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  7c:	mov	x0, x22
  80:	mov	x1, x24
  84:	mov	x2, x19
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  8c:	ldp	x20, x19, [sp, #80]
  90:	ldp	x22, x21, [sp, #64]
  94:	ldp	x24, x23, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x60
  a0:	ret
  a4:	mov	w0, w23
  a8:	mov	x1, x21
  ac:	mov	x2, x20
  b0:	ldp	x20, x19, [sp, #80]
  b4:	ldp	x22, x21, [sp, #64]
  b8:	ldp	x24, x23, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w3, wzr
  c4:	add	sp, sp, #0x60
  c8:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  cc:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x24, [x2]
  20:	cbz	x24, b8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xb8>
  24:	mov	x20, x0
  28:	ldr	x0, [x24]
  2c:	ldrb	w25, [x24, #8]
  30:	mov	x19, x4
  34:	mov	x21, x3
  38:	mov	x22, x2
  3c:	mov	w23, w1
  40:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  44:	cmp	w25, #0x10
  48:	mov	x3, x0
  4c:	b.ne	70 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0x70>  // b.any
  50:	ldr	x8, [x24, #32]
  54:	lsr	x9, x8, #32
  58:	cbnz	x9, d8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xd8>
  5c:	ldrb	w9, [x24, #40]
  60:	mov	x0, x3
  64:	orr	x1, x8, x9, lsl #32
  68:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  6c:	mov	x3, x0
  70:	mov	w2, #0x35                  	// #53
  74:	mov	x0, x20
  78:	mov	x1, x3
  7c:	mov	w3, w23
  80:	mov	x4, x22
  84:	mov	x5, x21
  88:	mov	x6, x19
  8c:	mov	x7, xzr
  90:	str	xzr, [sp]
  94:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  98:	mov	x0, x20
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  b8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  bc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  dc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x220                 	// #544
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x114>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x20, x5
  28:	mov	x19, x4
  2c:	mov	x21, x3
  30:	mov	x22, x2
  34:	mov	x24, x1
  38:	mov	x23, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	54 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x54>  // b.pmore
  44:	cbz	x22, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x114>
  48:	ldrb	w8, [x22, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0xe4>  // b.plast
  54:	mov	w8, #0x101                 	// #257
  58:	mov	w0, #0x58                  	// #88
  5c:	mov	w1, #0x2                   	// #2
  60:	stp	xzr, xzr, [sp, #8]
  64:	strh	w8, [sp, #24]
  68:	bl	0 <_ZN4llvm4UsernwEmj>
  6c:	ldr	x1, [x24]
  70:	sub	x3, x0, #0x30
  74:	mov	w2, #0x41                  	// #65
  78:	mov	w4, #0x2                   	// #2
  7c:	mov	x5, xzr
  80:	mov	x25, x0
  84:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  88:	adrp	x8, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  8c:	ldr	d0, [x8]
  90:	add	x8, x25, #0x48
  94:	add	x5, sp, #0x8
  98:	mov	x0, x25
  9c:	mov	x1, x24
  a0:	mov	x2, x22
  a4:	mov	x3, x21
  a8:	mov	x4, x19
  ac:	str	x8, [x25, #56]
  b0:	str	d0, [x25, #64]
  b4:	bl	0 <_ZN4llvm15InsertValueInst4initEPNS_5ValueES2_NS_8ArrayRefIjEERKNS_5TwineE>
  b8:	mov	x0, x23
  bc:	mov	x1, x25
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  c8:	ldp	x20, x19, [sp, #96]
  cc:	ldp	x22, x21, [sp, #80]
  d0:	ldp	x24, x23, [sp, #64]
  d4:	ldr	x25, [sp, #48]
  d8:	ldp	x29, x30, [sp, #32]
  dc:	add	sp, sp, #0x70
  e0:	ret
  e4:	mov	x0, x24
  e8:	mov	x1, x22
  ec:	mov	x2, x21
  f0:	mov	x3, x19
  f4:	ldp	x20, x19, [sp, #96]
  f8:	ldp	x22, x21, [sp, #80]
  fc:	ldp	x24, x23, [sp, #64]
 100:	ldr	x25, [sp, #48]
 104:	ldp	x29, x30, [sp, #32]
 108:	mov	x4, xzr
 10c:	add	sp, sp, #0x70
 110:	b	0 <_ZN4llvm12ConstantExpr14getInsertValueEPNS_8ConstantES2_NS_8ArrayRefIjEEPNS_4TypeE>
 114:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 118:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 11c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x69                  	// #105
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase16getOperandBundleEj:

0000000000000000 <_ZNK4llvm8CallBase16getOperandBundleEj>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	ldr	w9, [x0, #20]
  1c:	mov	w20, w1
  20:	mov	x21, x0
  24:	mov	x19, x8
  28:	tbnz	w9, #31, 38 <_ZNK4llvm8CallBase16getOperandBundleEj+0x38>
  2c:	mov	x22, xzr
  30:	mov	x8, xzr
  34:	b	60 <_ZNK4llvm8CallBase16getOperandBundleEj+0x60>
  38:	mov	x0, x21
  3c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  40:	ldr	w8, [x21, #20]
  44:	mov	x22, x0
  48:	tbnz	w8, #31, 54 <_ZNK4llvm8CallBase16getOperandBundleEj+0x54>
  4c:	mov	x8, xzr
  50:	b	60 <_ZNK4llvm8CallBase16getOperandBundleEj+0x60>
  54:	mov	x0, x21
  58:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  5c:	add	x8, x0, x1
  60:	sub	x8, x8, x22
  64:	lsr	x23, x8, #4
  68:	cbz	w23, a8 <_ZNK4llvm8CallBase16getOperandBundleEj+0xa8>
  6c:	mov	w24, wzr
  70:	mov	w22, wzr
  74:	add	x8, sp, #0x8
  78:	mov	x0, x21
  7c:	mov	w1, w22
  80:	bl	0 <_ZNK4llvm8CallBase16getOperandBundleEj>
  84:	ldr	x8, [sp, #24]
  88:	add	w22, w22, #0x1
  8c:	ldr	w8, [x8, #8]
  90:	cmp	w8, w20
  94:	cinc	w24, w24, eq  // eq = none
  98:	cmp	w23, w22
  9c:	b.ne	74 <_ZNK4llvm8CallBase16getOperandBundleEj+0x74>  // b.any
  a0:	cmp	w24, #0x2
  a4:	b.cs	15c <_ZNK4llvm8CallBase16getOperandBundleEj+0x15c>  // b.hs, b.nlast
  a8:	ldr	w8, [x21, #20]
  ac:	tbnz	w8, #31, bc <_ZNK4llvm8CallBase16getOperandBundleEj+0xbc>
  b0:	mov	x22, xzr
  b4:	mov	x8, xzr
  b8:	b	e4 <_ZNK4llvm8CallBase16getOperandBundleEj+0xe4>
  bc:	mov	x0, x21
  c0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  c4:	ldr	w8, [x21, #20]
  c8:	mov	x22, x0
  cc:	tbnz	w8, #31, d8 <_ZNK4llvm8CallBase16getOperandBundleEj+0xd8>
  d0:	mov	x8, xzr
  d4:	b	e4 <_ZNK4llvm8CallBase16getOperandBundleEj+0xe4>
  d8:	mov	x0, x21
  dc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  e0:	add	x8, x0, x1
  e4:	sub	x8, x8, x22
  e8:	lsr	x23, x8, #4
  ec:	cbz	w23, 120 <_ZNK4llvm8CallBase16getOperandBundleEj+0x120>
  f0:	mov	w22, wzr
  f4:	add	x8, sp, #0x8
  f8:	mov	x0, x21
  fc:	mov	w1, w22
 100:	bl	0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 104:	ldr	x8, [sp, #24]
 108:	ldr	w8, [x8, #8]
 10c:	cmp	w8, w20
 110:	b.eq	12c <_ZNK4llvm8CallBase16getOperandBundleEj+0x12c>  // b.none
 114:	add	w22, w22, #0x1
 118:	cmp	w23, w22
 11c:	b.ne	f4 <_ZNK4llvm8CallBase16getOperandBundleEj+0xf4>  // b.any
 120:	strb	wzr, [x19]
 124:	strb	wzr, [x19, #24]
 128:	b	144 <_ZNK4llvm8CallBase16getOperandBundleEj+0x144>
 12c:	ldr	x8, [sp, #24]
 130:	ldur	q0, [sp, #8]
 134:	mov	w9, #0x1                   	// #1
 138:	strb	w9, [x19, #24]
 13c:	str	x8, [x19, #16]
 140:	str	q0, [x19]
 144:	ldp	x20, x19, [sp, #80]
 148:	ldp	x22, x21, [sp, #64]
 14c:	ldp	x24, x23, [sp, #48]
 150:	ldp	x29, x30, [sp, #32]
 154:	add	sp, sp, #0x60
 158:	ret
 15c:	adrp	x0, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 160:	adrp	x1, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 164:	adrp	x3, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x745                 	// #1861
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #20]
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	tbnz	w9, #31, 30 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x30>
  24:	mov	x22, xzr
  28:	mov	x8, xzr
  2c:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  38:	ldr	w8, [x19, #20]
  3c:	mov	x22, x0
  40:	tbnz	w8, #31, 4c <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x4c>
  44:	mov	x8, xzr
  48:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  54:	add	x8, x0, x1
  58:	sub	x8, x8, x22
  5c:	lsr	x8, x8, #4
  60:	cmp	w8, w21
  64:	b.ls	b0 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0xb0>  // b.plast
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  70:	ldr	w9, [x19, #20]
  74:	add	x8, x0, w21, uxtw #4
  78:	ldp	w11, w12, [x8, #8]
  7c:	mov	w10, #0x18                  	// #24
  80:	ldr	x8, [x8]
  84:	and	x9, x9, #0xfffffff
  88:	mneg	x9, x9, x10
  8c:	add	x9, x19, x9
  90:	sub	x12, x12, x11
  94:	madd	x9, x11, x10, x9
  98:	stp	x9, x12, [x20]
  9c:	str	x8, [x20, #16]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b4:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b8:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x716                 	// #1814
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	7c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x7c>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	b	2c <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x2c>
  7c:	ldp	x29, x30, [sp], #16
  80:	ret
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x188>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x9
  6c:	add	x9, x9, x8, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x9, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x140>  // b.none
  88:	mov	w9, wzr
  8c:	sub	w10, w8, #0x1
  90:	mov	x11, #0xfffffffffffffff0    	// #-16
  94:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xc0>
  98:	cmp	x16, #0x0
  9c:	csel	x13, x14, x16, eq  // eq = none
  a0:	str	x12, [x13]
  a4:	ldr	x12, [x1, #8]
  a8:	add	w9, w9, #0x1
  ac:	str	x12, [x13, #8]
  b0:	str	w9, [x0, #16]
  b4:	add	x1, x1, #0x10
  b8:	cmp	x1, x2
  bc:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x140>  // b.none
  c0:	ldr	x12, [x1]
  c4:	orr	x13, x12, #0x8
  c8:	cmn	x13, #0x8
  cc:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb4>  // b.none
  d0:	cbz	w8, 138 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x138>
  d4:	cmn	x12, #0x8
  d8:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x168>  // b.none
  dc:	ldr	x13, [x0, #8]
  e0:	ubfx	x14, x12, #4, #28
  e4:	eor	w14, w14, w12, lsr #9
  e8:	and	w15, w14, w10
  ec:	add	x14, x13, w15, uxtw #4
  f0:	ldr	x17, [x14]
  f4:	cmp	x17, x12
  f8:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x148>  // b.none
  fc:	mov	x16, xzr
 100:	mov	w18, #0x1                   	// #1
 104:	cmn	x17, #0x8
 108:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x98>  // b.none
 10c:	cmp	x16, #0x0
 110:	add	w15, w15, w18
 114:	ccmp	x17, x11, #0x0, eq  // eq = none
 118:	and	w15, w15, w10
 11c:	csel	x16, x16, x14, ne  // ne = any
 120:	add	x14, x13, w15, uxtw #4
 124:	ldr	x17, [x14]
 128:	add	w18, w18, #0x1
 12c:	cmp	x17, x12
 130:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x104>  // b.any
 134:	b	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x148>
 138:	mov	x13, xzr
 13c:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa0>
 140:	ldp	x29, x30, [sp], #16
 144:	ret
 148:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 14c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 150:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x17a                 	// #378
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 16c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 170:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x252                 	// #594
 184:	bl	0 <__assert_fail>
 188:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 18c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 190:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 194:	add	x0, x0, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x3, x3, #0x0
 1a0:	mov	w2, #0x15c                 	// #348
 1a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, x0
   c:	b.ne	350 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x350>  // b.any
  10:	sub	x8, x3, x1
  14:	cmp	x8, #0x4
  18:	b.lt	158 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x158>  // b.tstop
  1c:	lsr	x10, x8, #2
  20:	ldr	w8, [x2, #20]
  24:	mov	w9, #0x18                  	// #24
  28:	lsl	w12, w1, #1
  2c:	add	x10, x10, #0x1
  30:	and	x11, x8, #0xfffffff
  34:	ubfx	w13, w8, #1, #27
  38:	mneg	x14, x11, x9
  3c:	sub	w13, w13, #0x1
  40:	add	x14, x2, x14
  44:	add	w15, w12, #0x4
  48:	mov	x16, x1
  4c:	mov	x12, x16
  50:	cmp	w13, w12
  54:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
  58:	sub	w16, w15, #0x2
  5c:	cmp	w11, w16
  60:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
  64:	mov	x17, x14
  68:	tbz	w8, #30, 70 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x70>
  6c:	ldur	x17, [x2, #-8]
  70:	umull	x16, w16, w9
  74:	ldr	x16, [x17, x16]
  78:	cmp	x16, x4
  7c:	b.eq	1d0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1d0>  // b.none
  80:	cmn	x1, #0x1
  84:	b.lt	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.tstop
  88:	add	x16, x12, #0x1
  8c:	cmp	w13, w16
  90:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
  94:	cmp	w13, w16
  98:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
  9c:	cmp	w11, w15
  a0:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
  a4:	mov	x17, x14
  a8:	tbz	w8, #30, b0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0xb0>
  ac:	ldur	x17, [x2, #-8]
  b0:	umull	x18, w15, w9
  b4:	ldr	x17, [x17, x18]
  b8:	cmp	x17, x4
  bc:	b.eq	1dc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1dc>  // b.none
  c0:	add	x16, x16, #0x1
  c4:	cmp	w13, w16
  c8:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
  cc:	cmp	w13, w16
  d0:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
  d4:	add	w17, w15, #0x2
  d8:	cmp	w11, w17
  dc:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
  e0:	mov	x18, x14
  e4:	tbz	w8, #30, ec <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0xec>
  e8:	ldur	x18, [x2, #-8]
  ec:	umull	x17, w17, w9
  f0:	ldr	x17, [x18, x17]
  f4:	cmp	x17, x4
  f8:	b.eq	1e4 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1e4>  // b.none
  fc:	add	x16, x16, #0x1
 100:	cmp	w13, w16
 104:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
 108:	cmp	w13, w16
 10c:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
 110:	add	w17, w15, #0x4
 114:	cmp	w11, w17
 118:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
 11c:	mov	x18, x14
 120:	tbz	w8, #30, 128 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x128>
 124:	ldur	x18, [x2, #-8]
 128:	umull	x17, w17, w9
 12c:	ldr	x17, [x18, x17]
 130:	cmp	x17, x4
 134:	b.eq	1ec <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1ec>  // b.none
 138:	add	x16, x16, #0x1
 13c:	cmp	w13, w16
 140:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
 144:	sub	x10, x10, #0x1
 148:	cmp	x10, #0x2
 14c:	add	w15, w15, #0x8
 150:	b.ge	4c <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x4c>  // b.tcont
 154:	add	x1, x12, #0x4
 158:	sub	x8, x3, x1
 15c:	cmp	x8, #0x3
 160:	b.eq	194 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x194>  // b.none
 164:	cmp	x8, #0x2
 168:	b.eq	184 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x184>  // b.none
 16c:	cmp	x8, #0x1
 170:	b.ne	300 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x300>  // b.any
 174:	ldr	w9, [x2, #20]
 178:	ubfx	w8, w9, #1, #27
 17c:	sub	w8, w8, #0x1
 180:	b	280 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x280>
 184:	ldr	w9, [x2, #20]
 188:	ubfx	w8, w9, #1, #27
 18c:	sub	w8, w8, #0x1
 190:	b	224 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x224>
 194:	ldr	w9, [x2, #20]
 198:	ubfx	w8, w9, #1, #27
 19c:	sub	w8, w8, #0x1
 1a0:	cmp	w8, w1
 1a4:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
 1a8:	lsl	w10, w1, #1
 1ac:	add	w10, w10, #0x2
 1b0:	and	x11, x9, #0xfffffff
 1b4:	cmp	w11, w10
 1b8:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
 1bc:	tbnz	w9, #30, 1f8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1f8>
 1c0:	mov	w12, #0x18                  	// #24
 1c4:	mneg	x11, x11, x12
 1c8:	add	x11, x2, x11
 1cc:	b	1fc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1fc>
 1d0:	mov	x2, x0
 1d4:	mov	x3, x12
 1d8:	b	300 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x300>
 1dc:	add	x3, x12, #0x1
 1e0:	b	1f0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1f0>
 1e4:	add	x3, x12, #0x2
 1e8:	b	1f0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x1f0>
 1ec:	add	x3, x12, #0x3
 1f0:	mov	x2, x0
 1f4:	b	300 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x300>
 1f8:	ldur	x11, [x2, #-8]
 1fc:	mov	w12, #0x18                  	// #24
 200:	umull	x10, w10, w12
 204:	ldr	x10, [x11, x10]
 208:	cmp	x10, x4
 20c:	b.eq	2f8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2f8>  // b.none
 210:	cmn	x1, #0x1
 214:	b.lt	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.tstop
 218:	add	x1, x1, #0x1
 21c:	cmp	w8, w1
 220:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
 224:	cmp	w8, w1
 228:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
 22c:	lsl	w10, w1, #1
 230:	add	w10, w10, #0x2
 234:	and	w11, w9, #0xfffffff
 238:	cmp	w11, w10
 23c:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
 240:	tbnz	w9, #30, 254 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x254>
 244:	mov	w12, #0x18                  	// #24
 248:	mneg	x11, x11, x12
 24c:	add	x11, x2, x11
 250:	b	258 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x258>
 254:	ldur	x11, [x2, #-8]
 258:	mov	w12, #0x18                  	// #24
 25c:	umull	x10, w10, w12
 260:	ldr	x10, [x11, x10]
 264:	cmp	x10, x4
 268:	b.eq	2f8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2f8>  // b.none
 26c:	cmn	x1, #0x1
 270:	b.lt	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.tstop
 274:	add	x1, x1, #0x1
 278:	cmp	w8, w1
 27c:	b.cc	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.lo, b.ul, b.last
 280:	cmp	w8, w1
 284:	b.ls	310 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x310>  // b.plast
 288:	lsl	w10, w1, #1
 28c:	add	w10, w10, #0x2
 290:	and	w11, w9, #0xfffffff
 294:	cmp	w11, w10
 298:	b.ls	330 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x330>  // b.plast
 29c:	tbnz	w9, #30, 2b0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2b0>
 2a0:	mov	w9, #0x18                  	// #24
 2a4:	mneg	x9, x11, x9
 2a8:	add	x9, x2, x9
 2ac:	b	2b4 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2b4>
 2b0:	ldur	x9, [x2, #-8]
 2b4:	mov	w11, #0x18                  	// #24
 2b8:	umull	x10, w10, w11
 2bc:	ldr	x9, [x9, x10]
 2c0:	cmp	x9, x4
 2c4:	b.eq	2f8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2f8>  // b.none
 2c8:	cmn	x1, #0x1
 2cc:	b.lt	2d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2d8>  // b.tstop
 2d0:	cmp	w8, w1
 2d4:	b.hi	300 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x300>  // b.pmore
 2d8:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 2dc:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 2e0:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 2e4:	add	x0, x0, #0x0
 2e8:	add	x1, x1, #0x0
 2ec:	add	x3, x3, #0x0
 2f0:	mov	w2, #0xcd4                 	// #3284
 2f4:	bl	0 <__assert_fail>
 2f8:	mov	x2, x0
 2fc:	mov	x3, x1
 300:	mov	x0, x2
 304:	mov	x1, x3
 308:	ldp	x29, x30, [sp], #16
 30c:	ret
 310:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 314:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 318:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 31c:	add	x0, x0, #0x0
 320:	add	x1, x1, #0x0
 324:	add	x3, x3, #0x0
 328:	mov	w2, #0xc79                 	// #3193
 32c:	bl	0 <__assert_fail>
 330:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 334:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 338:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 33c:	add	x0, x0, #0x0
 340:	add	x1, x1, #0x0
 344:	add	x3, x3, #0x0
 348:	mov	w2, #0xdbe                 	// #3518
 34c:	bl	0 <__assert_fail>
 350:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 354:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 358:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 35c:	add	x0, x0, #0x0
 360:	add	x1, x1, #0x0
 364:	add	x3, x3, #0x0
 368:	mov	w2, #0xce2                 	// #3298
 36c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 84 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x84>
  10:	ldr	x0, [x0]
  14:	mov	w1, wzr
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xa4>
  20:	ldrb	w8, [x0, #16]
  24:	cmp	w8, #0x50
  28:	b.ne	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.any
  2c:	ldur	x8, [x0, #-24]
  30:	cbz	x8, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  34:	ldrb	w9, [x8, #16]
  38:	cbnz	w9, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  3c:	ldrb	w9, [x8, #33]
  40:	tbz	w9, #5, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  44:	ldr	w8, [x8, #36]
  48:	sub	w9, w8, #0x18
  4c:	cmp	w9, #0x3
  50:	b.cs	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.hs, b.nlast
  54:	cmp	w8, #0x18
  58:	b.ne	c4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xc4>  // b.any
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x86                  	// #134
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x22, x5
  28:	mov	x19, x4
  2c:	mov	x23, x3
  30:	mov	x24, x2
  34:	mov	x25, x1
  38:	mov	x20, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  44:	cbz	x24, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  48:	ldrb	w8, [x24, #16]
  4c:	cmp	w8, #0x10
  50:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  54:	cbz	x23, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  58:	ldrb	w8, [x23, #16]
  5c:	cmp	w8, #0x10
  60:	b.ls	23c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x23c>  // b.plast
  64:	mov	w8, #0x101                 	// #257
  68:	mov	w0, #0x38                  	// #56
  6c:	mov	w1, #0x3                   	// #3
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm4UsernwEmj>
  7c:	ldr	x1, [x24]
  80:	sub	x3, x0, #0x48
  84:	mov	w2, #0x39                  	// #57
  88:	mov	w4, #0x3                   	// #3
  8c:	mov	x5, xzr
  90:	mov	x21, x0
  94:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  98:	mov	x0, x21
  9c:	mov	x1, x25
  a0:	mov	x2, x24
  a4:	mov	x3, x23
  a8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
  ac:	add	x1, sp, #0x8
  b0:	mov	x0, x21
  b4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  b8:	cbz	x22, 13c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x13c>
  bc:	ldr	x8, [x22, #48]
  c0:	cbz	x8, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xf0>
  c4:	mov	w1, #0x2                   	// #2
  c8:	mov	x0, x22
  cc:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
  d0:	ldr	x8, [x22, #48]
  d4:	mov	x23, x0
  d8:	cbnz	x8, 104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x104>
  dc:	ldrsh	w8, [x22, #18]
  e0:	tbnz	w8, #31, 104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x104>
  e4:	mov	x22, xzr
  e8:	cbnz	x23, 118 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x118>
  ec:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x128>
  f0:	ldrsh	w8, [x22, #18]
  f4:	tbnz	w8, #31, c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xc4>
  f8:	mov	x23, xzr
  fc:	ldrsh	w8, [x22, #18]
 100:	tbz	w8, #31, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xe4>
 104:	mov	w1, #0xf                   	// #15
 108:	mov	x0, x22
 10c:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
 110:	mov	x22, x0
 114:	cbz	x23, 128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x128>
 118:	mov	w1, #0x2                   	// #2
 11c:	mov	x0, x21
 120:	mov	x2, x23
 124:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 128:	cbz	x22, 13c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x13c>
 12c:	mov	w1, #0xf                   	// #15
 130:	mov	x0, x21
 134:	mov	x2, x22
 138:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 13c:	cbz	x21, 288 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x288>
 140:	ldrb	w9, [x21, #16]
 144:	subs	w8, w9, #0x18
 148:	b.cs	158 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x158>  // b.hs, b.nlast
 14c:	cmp	w9, #0x5
 150:	b.ne	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.any
 154:	ldrh	w8, [x21, #18]
 158:	cmp	w8, #0x39
 15c:	b.hi	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.pmore
 160:	mov	x10, #0x5000                	// #20480
 164:	mov	w9, #0x1                   	// #1
 168:	movk	x10, #0x125, lsl #16
 16c:	lsl	x9, x9, x8
 170:	movk	x10, #0x40, lsl #48
 174:	tst	x9, x10
 178:	b.eq	1cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1cc>  // b.none
 17c:	ldr	x2, [x20, #32]
 180:	ldr	w22, [x20, #40]
 184:	cbz	x2, 194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x194>
 188:	mov	w1, #0x3                   	// #3
 18c:	mov	x0, x21
 190:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 194:	mov	x0, x21
 198:	mov	x1, x22
 19c:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 1a0:	mov	x0, x20
 1a4:	mov	x1, x21
 1a8:	mov	x2, x19
 1ac:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 1b0:	ldp	x20, x19, [sp, #96]
 1b4:	ldp	x22, x21, [sp, #80]
 1b8:	ldp	x24, x23, [sp, #64]
 1bc:	ldr	x25, [sp, #48]
 1c0:	ldp	x29, x30, [sp, #32]
 1c4:	add	sp, sp, #0x70
 1c8:	ret
 1cc:	mov	w9, #0x1                   	// #1
 1d0:	lsl	x8, x9, x8
 1d4:	tst	x8, #0x380000000000000
 1d8:	b.eq	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.none
 1dc:	ldr	x8, [x21]
 1e0:	cbz	x8, 1f8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1f8>
 1e4:	ldrb	w9, [x8, #8]
 1e8:	cmp	w9, #0xe
 1ec:	b.ne	218 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x218>  // b.any
 1f0:	ldr	x8, [x8, #24]
 1f4:	cbnz	x8, 1e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1e4>
 1f8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 1fc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 200:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 204:	add	x0, x0, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x3, x3, #0x0
 210:	mov	w2, #0x69                  	// #105
 214:	bl	0 <__assert_fail>
 218:	cmp	w9, #0x10
 21c:	b.ne	22c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x22c>  // b.any
 220:	ldr	x8, [x8, #16]
 224:	ldr	x8, [x8]
 228:	ldrb	w9, [x8, #8]
 22c:	sub	w8, w9, #0x1
 230:	cmp	w8, #0x5
 234:	b.ls	17c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x17c>  // b.plast
 238:	b	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>
 23c:	mov	x0, x25
 240:	mov	x1, x24
 244:	mov	x2, x23
 248:	ldp	x20, x19, [sp, #96]
 24c:	ldp	x22, x21, [sp, #80]
 250:	ldp	x24, x23, [sp, #64]
 254:	ldr	x25, [sp, #48]
 258:	ldp	x29, x30, [sp, #32]
 25c:	mov	x3, xzr
 260:	add	sp, sp, #0x70
 264:	b	0 <_ZN4llvm12ConstantExpr9getSelectEPNS_8ConstantES2_S2_PNS_4TypeE>
 268:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 26c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 270:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 274:	add	x0, x0, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x3, x3, #0x0
 280:	mov	w2, #0x69                  	// #105
 284:	bl	0 <__assert_fail>
 288:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 28c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 290:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 294:	add	x0, x0, #0x0
 298:	add	x1, x1, #0x0
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x69                  	// #105
 2a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_:

0000000000000000 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x2
  14:	mov	x22, x1
  18:	mov	x20, x0
  1c:	mov	x0, x1
  20:	mov	x1, x2
  24:	mov	x2, x3
  28:	mov	x19, x3
  2c:	bl	0 <_ZN4llvm10SelectInst18areInvalidOperandsEPNS_5ValueES2_S2_>
  30:	cbnz	x0, 1d4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1d4>
  34:	ldr	x8, [x20, #-72]!
  38:	cbz	x8, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  3c:	ldp	x9, x8, [x20, #8]
  40:	and	x8, x8, #0xfffffffffffffffc
  44:	str	x9, [x8]
  48:	ldr	x9, [x20, #8]
  4c:	cbz	x9, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  50:	ldr	x10, [x9, #16]
  54:	and	x10, x10, #0x3
  58:	orr	x8, x10, x8
  5c:	str	x8, [x9, #16]
  60:	str	x22, [x20]
  64:	cbz	x22, ac <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xac>
  68:	ldr	x8, [x22, #8]!
  6c:	mov	x9, x20
  70:	str	x8, [x9, #8]!
  74:	cbz	x8, 90 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x90>
  78:	tst	x9, #0x3
  7c:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  80:	ldr	x10, [x8, #16]
  84:	and	x10, x10, #0x3
  88:	orr	x9, x10, x9
  8c:	str	x9, [x8, #16]
  90:	tst	x22, #0x3
  94:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  98:	ldr	x8, [x20, #16]
  9c:	and	x8, x8, #0x3
  a0:	orr	x8, x8, x22
  a4:	str	x8, [x20, #16]
  a8:	str	x20, [x22]
  ac:	mov	x8, x20
  b0:	ldr	x9, [x8, #24]!
  b4:	cbz	x9, dc <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xdc>
  b8:	ldp	x10, x9, [x20, #32]
  bc:	and	x9, x9, #0xfffffffffffffffc
  c0:	str	x10, [x9]
  c4:	ldr	x10, [x20, #32]
  c8:	cbz	x10, dc <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xdc>
  cc:	ldr	x11, [x10, #16]
  d0:	and	x11, x11, #0x3
  d4:	orr	x9, x11, x9
  d8:	str	x9, [x10, #16]
  dc:	str	x21, [x8]
  e0:	cbz	x21, 128 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x128>
  e4:	ldr	x9, [x21, #8]!
  e8:	mov	x10, x20
  ec:	str	x9, [x10, #32]!
  f0:	cbz	x9, 10c <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x10c>
  f4:	tst	x10, #0x3
  f8:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  fc:	ldr	x11, [x9, #16]
 100:	and	x11, x11, #0x3
 104:	orr	x10, x11, x10
 108:	str	x10, [x9, #16]
 10c:	tst	x21, #0x3
 110:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 114:	ldr	x9, [x20, #40]
 118:	and	x9, x9, #0x3
 11c:	orr	x9, x9, x21
 120:	str	x9, [x20, #40]
 124:	str	x8, [x21]
 128:	mov	x8, x20
 12c:	ldr	x9, [x8, #48]!
 130:	cbz	x9, 158 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x158>
 134:	ldp	x10, x9, [x20, #56]
 138:	and	x9, x9, #0xfffffffffffffffc
 13c:	str	x10, [x9]
 140:	ldr	x10, [x20, #56]
 144:	cbz	x10, 158 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x158>
 148:	ldr	x11, [x10, #16]
 14c:	and	x11, x11, #0x3
 150:	orr	x9, x11, x9
 154:	str	x9, [x10, #16]
 158:	str	x19, [x8]
 15c:	cbz	x19, 1a4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1a4>
 160:	ldr	x9, [x19, #8]!
 164:	mov	x10, x20
 168:	str	x9, [x10, #56]!
 16c:	cbz	x9, 188 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x188>
 170:	tst	x10, #0x3
 174:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 178:	ldr	x11, [x9, #16]
 17c:	and	x11, x11, #0x3
 180:	orr	x10, x11, x10
 184:	str	x10, [x9, #16]
 188:	tst	x19, #0x3
 18c:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 190:	ldr	x9, [x20, #64]
 194:	and	x9, x9, #0x3
 198:	orr	x9, x9, x19
 19c:	str	x9, [x20, #64]
 1a0:	str	x8, [x19]
 1a4:	ldp	x20, x19, [sp, #32]
 1a8:	ldp	x22, x21, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	ret
 1b4:	adrp	x0, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1b8:	adrp	x1, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1bc:	adrp	x3, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0xb3                  	// #179
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x0, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1d8:	adrp	x1, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1dc:	adrp	x3, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1e0:	add	x0, x0, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x6cb                 	// #1739
 1f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x20, x0
  1c:	mov	w8, #0x101                 	// #257
  20:	mov	w0, #0x40                  	// #64
  24:	mov	x19, x3
  28:	mov	w22, w2
  2c:	mov	x23, x1
  30:	stp	xzr, xzr, [sp, #8]
  34:	strh	w8, [sp, #24]
  38:	bl	0 <_ZN4llvm4UsernwEm>
  3c:	mov	w2, #0x37                  	// #55
  40:	mov	x1, x23
  44:	mov	x3, xzr
  48:	mov	w4, wzr
  4c:	mov	x5, xzr
  50:	mov	x21, x0
  54:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  58:	add	x1, sp, #0x8
  5c:	mov	x0, x21
  60:	str	w22, [x21, #56]
  64:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  68:	ldr	w1, [x21, #56]
  6c:	mov	w2, #0x1                   	// #1
  70:	mov	x0, x21
  74:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
  78:	cbz	x21, 174 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x174>
  7c:	ldrb	w9, [x21, #16]
  80:	subs	w8, w9, #0x18
  84:	b.cs	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x94>  // b.hs, b.nlast
  88:	cmp	w9, #0x5
  8c:	b.ne	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.any
  90:	ldrh	w8, [x21, #18]
  94:	cmp	w8, #0x39
  98:	b.hi	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.pmore
  9c:	mov	x10, #0x5000                	// #20480
  a0:	mov	w9, #0x1                   	// #1
  a4:	movk	x10, #0x125, lsl #16
  a8:	lsl	x9, x9, x8
  ac:	movk	x10, #0x40, lsl #48
  b0:	tst	x9, x10
  b4:	b.eq	104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x104>  // b.none
  b8:	ldr	x2, [x20, #32]
  bc:	ldr	w22, [x20, #40]
  c0:	cbz	x2, d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xd0>
  c4:	mov	w1, #0x3                   	// #3
  c8:	mov	x0, x21
  cc:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  d0:	mov	x0, x21
  d4:	mov	x1, x22
  d8:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  dc:	mov	x0, x20
  e0:	mov	x1, x21
  e4:	mov	x2, x19
  e8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  ec:	ldp	x20, x19, [sp, #80]
  f0:	ldp	x22, x21, [sp, #64]
  f4:	ldr	x23, [sp, #48]
  f8:	ldp	x29, x30, [sp, #32]
  fc:	add	sp, sp, #0x60
 100:	ret
 104:	mov	w9, #0x1                   	// #1
 108:	lsl	x8, x9, x8
 10c:	tst	x8, #0x380000000000000
 110:	b.eq	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.none
 114:	ldr	x8, [x21]
 118:	cbz	x8, 130 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x130>
 11c:	ldrb	w9, [x8, #8]
 120:	cmp	w9, #0xe
 124:	b.ne	150 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x150>  // b.any
 128:	ldr	x8, [x8, #24]
 12c:	cbnz	x8, 11c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x11c>
 130:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 134:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 138:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x69                  	// #105
 14c:	bl	0 <__assert_fail>
 150:	cmp	w9, #0x10
 154:	b.ne	164 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x164>  // b.any
 158:	ldr	x8, [x8, #16]
 15c:	ldr	x8, [x8]
 160:	ldrb	w9, [x8, #8]
 164:	sub	w8, w9, #0x1
 168:	cmp	w8, #0x5
 16c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xb8>  // b.plast
 170:	b	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>
 174:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 178:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 17c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x69                  	// #105
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	74 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x74>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 94 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x94>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	b4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xb4>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, d4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xd4>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	64 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x64>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x1, xzr
  68:	mov	x0, xzr
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xae                  	// #174
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  bc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x108                 	// #264
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  dc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1
