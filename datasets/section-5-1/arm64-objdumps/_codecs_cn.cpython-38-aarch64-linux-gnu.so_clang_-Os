
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_cn.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002d38 <.init>:
    2d38:	stp	x29, x30, [sp, #-16]!
    2d3c:	mov	x29, sp
    2d40:	bl	2e60 <PyCapsule_New@plt+0x10>
    2d44:	ldp	x29, x30, [sp], #16
    2d48:	ret

Disassembly of section .plt:

0000000000002d50 <PyObject_GetAttrString@plt-0x20>:
    2d50:	stp	x16, x30, [sp, #-16]!
    2d54:	adrp	x16, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2d58:	ldr	x17, [x16, #4088]
    2d5c:	add	x16, x16, #0xff8
    2d60:	br	x17
    2d64:	nop
    2d68:	nop
    2d6c:	nop

0000000000002d70 <PyObject_GetAttrString@plt>:
    2d70:	adrp	x16, 33000 <PyObject_GetAttrString>
    2d74:	ldr	x17, [x16]
    2d78:	add	x16, x16, #0x0
    2d7c:	br	x17

0000000000002d80 <__cxa_finalize@plt>:
    2d80:	adrp	x16, 33000 <PyObject_GetAttrString>
    2d84:	ldr	x17, [x16, #8]
    2d88:	add	x16, x16, #0x8
    2d8c:	br	x17

0000000000002d90 <_Py_Dealloc@plt>:
    2d90:	adrp	x16, 33000 <PyObject_GetAttrString>
    2d94:	ldr	x17, [x16, #16]
    2d98:	add	x16, x16, #0x10
    2d9c:	br	x17

0000000000002da0 <PyErr_SetString@plt>:
    2da0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2da4:	ldr	x17, [x16, #24]
    2da8:	add	x16, x16, #0x18
    2dac:	br	x17

0000000000002db0 <memset@plt>:
    2db0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2db4:	ldr	x17, [x16, #32]
    2db8:	add	x16, x16, #0x20
    2dbc:	br	x17

0000000000002dc0 <__gmon_start__@plt>:
    2dc0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2dc4:	ldr	x17, [x16, #40]
    2dc8:	add	x16, x16, #0x28
    2dcc:	br	x17

0000000000002dd0 <PyModule_Create2@plt>:
    2dd0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2dd4:	ldr	x17, [x16, #48]
    2dd8:	add	x16, x16, #0x30
    2ddc:	br	x17

0000000000002de0 <PyImport_ImportModuleNoBlock@plt>:
    2de0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2de4:	ldr	x17, [x16, #56]
    2de8:	add	x16, x16, #0x38
    2dec:	br	x17

0000000000002df0 <PyObject_CallFunctionObjArgs@plt>:
    2df0:	adrp	x16, 33000 <PyObject_GetAttrString>
    2df4:	ldr	x17, [x16, #64]
    2df8:	add	x16, x16, #0x40
    2dfc:	br	x17

0000000000002e00 <strcmp@plt>:
    2e00:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e04:	ldr	x17, [x16, #72]
    2e08:	add	x16, x16, #0x48
    2e0c:	br	x17

0000000000002e10 <_PyUnicodeWriter_WriteChar@plt>:
    2e10:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e14:	ldr	x17, [x16, #80]
    2e18:	add	x16, x16, #0x50
    2e1c:	br	x17

0000000000002e20 <PyUnicode_AsUTF8@plt>:
    2e20:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e24:	ldr	x17, [x16, #88]
    2e28:	add	x16, x16, #0x58
    2e2c:	br	x17

0000000000002e30 <strcpy@plt>:
    2e30:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e34:	ldr	x17, [x16, #96]
    2e38:	add	x16, x16, #0x60
    2e3c:	br	x17

0000000000002e40 <PyModule_AddObject@plt>:
    2e40:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e44:	ldr	x17, [x16, #104]
    2e48:	add	x16, x16, #0x68
    2e4c:	br	x17

0000000000002e50 <PyCapsule_New@plt>:
    2e50:	adrp	x16, 33000 <PyObject_GetAttrString>
    2e54:	ldr	x17, [x16, #112]
    2e58:	add	x16, x16, #0x70
    2e5c:	br	x17

Disassembly of section .text:

0000000000002e60 <PyInit__codecs_cn@@Base-0xd4>:
    2e60:	adrp	x0, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2e64:	ldr	x0, [x0, #4048]
    2e68:	cbz	x0, 2e70 <PyCapsule_New@plt+0x20>
    2e6c:	b	2dc0 <__gmon_start__@plt>
    2e70:	ret
    2e74:	nop
    2e78:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2e7c:	add	x0, x0, #0x128
    2e80:	adrp	x1, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2e84:	add	x1, x1, #0x128
    2e88:	cmp	x1, x0
    2e8c:	b.eq	2ea4 <PyCapsule_New@plt+0x54>  // b.none
    2e90:	adrp	x1, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2e94:	ldr	x1, [x1, #4024]
    2e98:	cbz	x1, 2ea4 <PyCapsule_New@plt+0x54>
    2e9c:	mov	x16, x1
    2ea0:	br	x16
    2ea4:	ret
    2ea8:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2eac:	add	x0, x0, #0x128
    2eb0:	adrp	x1, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2eb4:	add	x1, x1, #0x128
    2eb8:	sub	x1, x1, x0
    2ebc:	lsr	x2, x1, #63
    2ec0:	add	x1, x2, x1, asr #3
    2ec4:	cmp	xzr, x1, asr #1
    2ec8:	asr	x1, x1, #1
    2ecc:	b.eq	2ee4 <PyCapsule_New@plt+0x94>  // b.none
    2ed0:	adrp	x2, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2ed4:	ldr	x2, [x2, #4056]
    2ed8:	cbz	x2, 2ee4 <PyCapsule_New@plt+0x94>
    2edc:	mov	x16, x2
    2ee0:	br	x16
    2ee4:	ret
    2ee8:	stp	x29, x30, [sp, #-32]!
    2eec:	mov	x29, sp
    2ef0:	str	x19, [sp, #16]
    2ef4:	adrp	x19, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2ef8:	ldrb	w0, [x19, #296]
    2efc:	cbnz	w0, 2f24 <PyCapsule_New@plt+0xd4>
    2f00:	adrp	x0, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2f04:	ldr	x0, [x0, #4032]
    2f08:	cbz	x0, 2f18 <PyCapsule_New@plt+0xc8>
    2f0c:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2f10:	ldr	x0, [x0, #120]
    2f14:	bl	2d80 <__cxa_finalize@plt>
    2f18:	bl	2e78 <PyCapsule_New@plt+0x28>
    2f1c:	mov	w0, #0x1                   	// #1
    2f20:	strb	w0, [x19, #296]
    2f24:	ldr	x19, [sp, #16]
    2f28:	ldp	x29, x30, [sp], #32
    2f2c:	ret
    2f30:	b	2ea8 <PyCapsule_New@plt+0x58>

0000000000002f34 <PyInit__codecs_cn@@Base>:
    2f34:	sub	sp, sp, #0x150
    2f38:	stp	x29, x30, [sp, #256]
    2f3c:	str	x28, [sp, #272]
    2f40:	stp	x24, x23, [sp, #288]
    2f44:	stp	x22, x21, [sp, #304]
    2f48:	stp	x20, x19, [sp, #320]
    2f4c:	add	x29, sp, #0x100
    2f50:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    2f54:	add	x0, x0, #0x80
    2f58:	mov	w1, #0x3f5                 	// #1013
    2f5c:	bl	2dd0 <PyModule_Create2@plt>
    2f60:	mov	x19, x0
    2f64:	cbz	x0, 2fe4 <PyInit__codecs_cn@@Base+0xb0>
    2f68:	mov	x8, sp
    2f6c:	adrp	x20, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    2f70:	mov	w23, #0x5f5f                	// #24415
    2f74:	adrp	x22, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    2f78:	add	x20, x20, #0xd58
    2f7c:	movk	w23, #0x616d, lsl #16
    2f80:	mov	w24, #0x5f70                	// #24432
    2f84:	add	x21, x8, #0x6
    2f88:	add	x22, x22, #0x9c
    2f8c:	mov	x0, sp
    2f90:	mov	w2, #0x100                 	// #256
    2f94:	mov	w1, wzr
    2f98:	bl	2db0 <memset@plt>
    2f9c:	ldr	x1, [x20]
    2fa0:	mov	x0, x21
    2fa4:	str	w23, [sp]
    2fa8:	strh	w24, [sp, #4]
    2fac:	bl	2e30 <strcpy@plt>
    2fb0:	mov	x0, x20
    2fb4:	mov	x1, x22
    2fb8:	mov	x2, xzr
    2fbc:	bl	2e50 <PyCapsule_New@plt>
    2fc0:	mov	x2, x0
    2fc4:	mov	x1, sp
    2fc8:	mov	x0, x19
    2fcc:	bl	2e40 <PyModule_AddObject@plt>
    2fd0:	cmn	w0, #0x1
    2fd4:	b.eq	2fe4 <PyInit__codecs_cn@@Base+0xb0>  // b.none
    2fd8:	ldr	x8, [x20, #24]!
    2fdc:	ldrb	w8, [x8]
    2fe0:	cbnz	w8, 2f8c <PyInit__codecs_cn@@Base+0x58>
    2fe4:	mov	x0, x19
    2fe8:	ldp	x20, x19, [sp, #320]
    2fec:	ldp	x22, x21, [sp, #304]
    2ff0:	ldp	x24, x23, [sp, #288]
    2ff4:	ldr	x28, [sp, #272]
    2ff8:	ldp	x29, x30, [sp, #256]
    2ffc:	add	sp, sp, #0x150
    3000:	ret
    3004:	stp	x29, x30, [sp, #-48]!
    3008:	stp	x22, x21, [sp, #16]
    300c:	stp	x20, x19, [sp, #32]
    3010:	mov	x29, sp
    3014:	ldr	x8, [x1, #8]
    3018:	ldrb	w8, [x8, #171]
    301c:	tbnz	w8, #4, 3040 <PyInit__codecs_cn@@Base+0x10c>
    3020:	adrp	x8, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    3024:	ldr	x8, [x8, #4040]
    3028:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    302c:	add	x1, x1, #0x60
    3030:	ldr	x0, [x8]
    3034:	bl	2da0 <PyErr_SetString@plt>
    3038:	mov	x19, xzr
    303c:	b	30e0 <PyInit__codecs_cn@@Base+0x1ac>
    3040:	mov	x0, x1
    3044:	bl	2e20 <PyUnicode_AsUTF8@plt>
    3048:	mov	x19, x0
    304c:	cbz	x0, 30e0 <PyInit__codecs_cn@@Base+0x1ac>
    3050:	adrp	x22, 33000 <PyInit__codecs_cn@@Base+0x300cc>
    3054:	ldr	x20, [x22, #304]
    3058:	cbz	x20, 30f4 <PyInit__codecs_cn@@Base+0x1c0>
    305c:	adrp	x21, 2d000 <PyInit__codecs_cn@@Base+0x2a0cc>
    3060:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    3064:	add	x21, x21, #0xbf0
    3068:	add	x0, x0, #0xd2
    306c:	mov	x1, x19
    3070:	bl	2e00 <strcmp@plt>
    3074:	cbz	w0, 3098 <PyInit__codecs_cn@@Base+0x164>
    3078:	ldr	x0, [x21, #72]!
    307c:	ldrb	w8, [x0]
    3080:	cbnz	w8, 306c <PyInit__codecs_cn@@Base+0x138>
    3084:	adrp	x8, 32000 <PyInit__codecs_cn@@Base+0x2f0cc>
    3088:	ldr	x8, [x8, #4064]
    308c:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    3090:	add	x1, x1, #0x80
    3094:	b	3030 <PyInit__codecs_cn@@Base+0xfc>
    3098:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    309c:	add	x1, x1, #0x9c
    30a0:	mov	x0, x21
    30a4:	mov	x2, xzr
    30a8:	bl	2e50 <PyCapsule_New@plt>
    30ac:	cbz	x0, 3038 <PyInit__codecs_cn@@Base+0x104>
    30b0:	mov	x21, x0
    30b4:	mov	x0, x20
    30b8:	mov	x1, x21
    30bc:	mov	x2, xzr
    30c0:	bl	2df0 <PyObject_CallFunctionObjArgs@plt>
    30c4:	ldr	x8, [x21]
    30c8:	mov	x19, x0
    30cc:	subs	x8, x8, #0x1
    30d0:	str	x8, [x21]
    30d4:	b.ne	30e0 <PyInit__codecs_cn@@Base+0x1ac>  // b.any
    30d8:	mov	x0, x21
    30dc:	bl	2d90 <_Py_Dealloc@plt>
    30e0:	mov	x0, x19
    30e4:	ldp	x20, x19, [sp, #32]
    30e8:	ldp	x22, x21, [sp, #16]
    30ec:	ldp	x29, x30, [sp], #48
    30f0:	ret
    30f4:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    30f8:	add	x0, x0, #0xb3
    30fc:	bl	2de0 <PyImport_ImportModuleNoBlock@plt>
    3100:	cbz	x0, 3038 <PyInit__codecs_cn@@Base+0x104>
    3104:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x10cc>
    3108:	add	x1, x1, #0xc3
    310c:	mov	x21, x0
    3110:	bl	2d70 <PyObject_GetAttrString@plt>
    3114:	str	x0, [x22, #304]
    3118:	ldr	x8, [x21]
    311c:	mov	x20, x0
    3120:	subs	x8, x8, #0x1
    3124:	str	x8, [x21]
    3128:	b.eq	3134 <PyInit__codecs_cn@@Base+0x200>  // b.none
    312c:	cbnz	x20, 305c <PyInit__codecs_cn@@Base+0x128>
    3130:	b	3038 <PyInit__codecs_cn@@Base+0x104>
    3134:	mov	x0, x21
    3138:	bl	2d90 <_Py_Dealloc@plt>
    313c:	ldr	x20, [x22, #304]
    3140:	cbnz	x20, 305c <PyInit__codecs_cn@@Base+0x128>
    3144:	b	3038 <PyInit__codecs_cn@@Base+0x104>
    3148:	ldr	x9, [x4]
    314c:	cmp	x9, x5
    3150:	b.ge	3238 <PyInit__codecs_cn@@Base+0x304>  // b.tcont
    3154:	adrp	x8, 2d000 <PyInit__codecs_cn@@Base+0x2a0cc>
    3158:	mov	w0, #0x1                   	// #1
    315c:	add	x8, x8, #0xd58
    3160:	cmp	w2, #0x2
    3164:	b.eq	3178 <PyInit__codecs_cn@@Base+0x244>  // b.none
    3168:	cmp	w2, #0x1
    316c:	b.ne	3180 <PyInit__codecs_cn@@Base+0x24c>  // b.any
    3170:	ldrb	w9, [x3, x9]
    3174:	b	3184 <PyInit__codecs_cn@@Base+0x250>
    3178:	ldrh	w9, [x3, x9, lsl #1]
    317c:	b	3184 <PyInit__codecs_cn@@Base+0x250>
    3180:	ldr	w9, [x3, x9, lsl #2]
    3184:	cmp	w9, #0x7f
    3188:	b.hi	31a8 <PyInit__codecs_cn@@Base+0x274>  // b.pmore
    318c:	cmp	x7, #0x1
    3190:	b.lt	3240 <PyInit__codecs_cn@@Base+0x30c>  // b.tstop
    3194:	ldr	x11, [x6]
    3198:	mov	x10, #0xffffffffffffffff    	// #-1
    319c:	strb	w9, [x11]
    31a0:	mov	w11, #0x1                   	// #1
    31a4:	b	3214 <PyInit__codecs_cn@@Base+0x2e0>
    31a8:	lsr	w10, w9, #16
    31ac:	cbnz	w10, 323c <PyInit__codecs_cn@@Base+0x308>
    31b0:	cmp	x7, #0x2
    31b4:	b.lt	3240 <PyInit__codecs_cn@@Base+0x30c>  // b.tstop
    31b8:	lsr	w11, w9, #8
    31bc:	lsl	x10, x11, #4
    31c0:	ldr	x10, [x8, x10]
    31c4:	cbz	x10, 323c <PyInit__codecs_cn@@Base+0x308>
    31c8:	add	x11, x8, x11, lsl #4
    31cc:	ldrb	w13, [x11, #8]
    31d0:	and	w12, w9, #0xff
    31d4:	subs	w9, w12, w13
    31d8:	b.cc	323c <PyInit__codecs_cn@@Base+0x308>  // b.lo, b.ul, b.last
    31dc:	ldrb	w11, [x11, #9]
    31e0:	cmp	w12, w11
    31e4:	b.hi	323c <PyInit__codecs_cn@@Base+0x308>  // b.pmore
    31e8:	ldrsh	w9, [x10, w9, uxtw #1]
    31ec:	tbnz	w9, #31, 323c <PyInit__codecs_cn@@Base+0x308>
    31f0:	ldr	x10, [x6]
    31f4:	lsr	w11, w9, #8
    31f8:	orr	w11, w11, #0x80
    31fc:	orr	w9, w9, #0x80
    3200:	strb	w11, [x10]
    3204:	ldr	x11, [x6]
    3208:	mov	x10, #0xfffffffffffffffe    	// #-2
    320c:	strb	w9, [x11, #1]
    3210:	mov	w11, #0x2                   	// #2
    3214:	ldr	x9, [x4]
    3218:	add	x7, x7, x10
    321c:	add	x9, x9, #0x1
    3220:	str	x9, [x4]
    3224:	ldr	x12, [x6]
    3228:	cmp	x9, x5
    322c:	add	x11, x12, x11
    3230:	str	x11, [x6]
    3234:	b.lt	3160 <PyInit__codecs_cn@@Base+0x22c>  // b.tstop
    3238:	mov	x0, xzr
    323c:	ret
    3240:	mov	x0, #0xffffffffffffffff    	// #-1
    3244:	ret
    3248:	stp	x29, x30, [sp, #-64]!
    324c:	stp	x24, x23, [sp, #16]
    3250:	stp	x22, x21, [sp, #32]
    3254:	stp	x20, x19, [sp, #48]
    3258:	mov	x29, sp
    325c:	cmp	x3, #0x1
    3260:	b.lt	3324 <PyInit__codecs_cn@@Base+0x3f0>  // b.tstop
    3264:	ldr	x8, [x2]
    3268:	adrp	x23, 2e000 <PyInit__codecs_cn@@Base+0x2b0cc>
    326c:	mov	x20, x4
    3270:	mov	x21, x3
    3274:	mov	x22, x2
    3278:	mov	w19, #0x1                   	// #1
    327c:	add	x23, x23, #0xd58
    3280:	mov	w24, #0xfffe                	// #65534
    3284:	ldrsb	w9, [x8]
    3288:	tbnz	w9, #31, 32a8 <PyInit__codecs_cn@@Base+0x374>
    328c:	and	w1, w9, #0xff
    3290:	mov	x0, x20
    3294:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3298:	tbnz	w0, #31, 332c <PyInit__codecs_cn@@Base+0x3f8>
    329c:	mov	x8, #0xffffffffffffffff    	// #-1
    32a0:	mov	w9, #0x1                   	// #1
    32a4:	b	330c <PyInit__codecs_cn@@Base+0x3d8>
    32a8:	cmp	x21, #0x2
    32ac:	b.lt	3334 <PyInit__codecs_cn@@Base+0x400>  // b.tstop
    32b0:	and	x9, x9, #0xff
    32b4:	eor	x10, x9, #0x80
    32b8:	lsl	x9, x10, #4
    32bc:	ldr	x9, [x23, x9]
    32c0:	cbz	x9, 3338 <PyInit__codecs_cn@@Base+0x404>
    32c4:	ldrb	w12, [x8, #1]
    32c8:	add	x11, x23, x10, lsl #4
    32cc:	ldrb	w8, [x11, #8]
    32d0:	eor	x10, x12, #0x80
    32d4:	cmp	w10, w8
    32d8:	b.cc	3338 <PyInit__codecs_cn@@Base+0x404>  // b.lo, b.ul, b.last
    32dc:	ldrb	w11, [x11, #9]
    32e0:	cmp	w10, w11
    32e4:	b.hi	3338 <PyInit__codecs_cn@@Base+0x404>  // b.pmore
    32e8:	sub	x8, x10, x8
    32ec:	ldrh	w1, [x9, x8, lsl #1]
    32f0:	cmp	w1, w24
    32f4:	b.eq	3338 <PyInit__codecs_cn@@Base+0x404>  // b.none
    32f8:	mov	x0, x20
    32fc:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3300:	tbnz	w0, #31, 332c <PyInit__codecs_cn@@Base+0x3f8>
    3304:	mov	x8, #0xfffffffffffffffe    	// #-2
    3308:	mov	w9, #0x2                   	// #2
    330c:	ldr	x10, [x22]
    3310:	add	x21, x21, x8
    3314:	cmp	x21, #0x0
    3318:	add	x8, x10, x9
    331c:	str	x8, [x22]
    3320:	b.gt	3284 <PyInit__codecs_cn@@Base+0x350>
    3324:	mov	x19, xzr
    3328:	b	3338 <PyInit__codecs_cn@@Base+0x404>
    332c:	mov	x19, #0xfffffffffffffffc    	// #-4
    3330:	b	3338 <PyInit__codecs_cn@@Base+0x404>
    3334:	mov	x19, #0xfffffffffffffffe    	// #-2
    3338:	mov	x0, x19
    333c:	ldp	x20, x19, [sp, #48]
    3340:	ldp	x22, x21, [sp, #32]
    3344:	ldp	x24, x23, [sp, #16]
    3348:	ldp	x29, x30, [sp], #64
    334c:	ret
    3350:	ldr	x13, [x4]
    3354:	cmp	x13, x5
    3358:	b.ge	34a0 <PyInit__codecs_cn@@Base+0x56c>  // b.tcont
    335c:	adrp	x9, 2d000 <PyInit__codecs_cn@@Base+0x2a0cc>
    3360:	mov	w0, #0x1                   	// #1
    3364:	mov	w8, #0x2014                	// #8212
    3368:	add	x9, x9, #0xd58
    336c:	mov	w10, #0xffff                	// #65535
    3370:	mov	w11, #0x2015                	// #8213
    3374:	mov	w12, #0x30fb                	// #12539
    3378:	cmp	w2, #0x2
    337c:	b.eq	3390 <PyInit__codecs_cn@@Base+0x45c>  // b.none
    3380:	cmp	w2, #0x1
    3384:	b.ne	3398 <PyInit__codecs_cn@@Base+0x464>  // b.any
    3388:	ldrb	w13, [x3, x13]
    338c:	b	339c <PyInit__codecs_cn@@Base+0x468>
    3390:	ldrh	w13, [x3, x13, lsl #1]
    3394:	b	339c <PyInit__codecs_cn@@Base+0x468>
    3398:	ldr	w13, [x3, x13, lsl #2]
    339c:	cmp	w13, #0x7f
    33a0:	b.hi	33c0 <PyInit__codecs_cn@@Base+0x48c>  // b.pmore
    33a4:	cmp	x7, #0x1
    33a8:	b.lt	34a8 <PyInit__codecs_cn@@Base+0x574>  // b.tstop
    33ac:	ldr	x15, [x6]
    33b0:	mov	x14, #0xffffffffffffffff    	// #-1
    33b4:	strb	w13, [x15]
    33b8:	mov	w15, #0x1                   	// #1
    33bc:	b	347c <PyInit__codecs_cn@@Base+0x548>
    33c0:	lsr	w14, w13, #16
    33c4:	cbnz	w14, 34a4 <PyInit__codecs_cn@@Base+0x570>
    33c8:	cmp	x7, #0x2
    33cc:	b.lt	34a8 <PyInit__codecs_cn@@Base+0x574>  // b.tstop
    33d0:	cmp	w13, w8
    33d4:	b.gt	33f0 <PyInit__codecs_cn@@Base+0x4bc>
    33d8:	cmp	w13, #0xb7
    33dc:	b.eq	3400 <PyInit__codecs_cn@@Base+0x4cc>  // b.none
    33e0:	cmp	w13, w8
    33e4:	b.ne	3410 <PyInit__codecs_cn@@Base+0x4dc>  // b.any
    33e8:	mov	w13, #0xa1aa                	// #41386
    33ec:	b	344c <PyInit__codecs_cn@@Base+0x518>
    33f0:	cmp	w13, w11
    33f4:	b.ne	3408 <PyInit__codecs_cn@@Base+0x4d4>  // b.any
    33f8:	mov	w13, #0xa844                	// #43076
    33fc:	b	344c <PyInit__codecs_cn@@Base+0x518>
    3400:	mov	w13, #0xa1a4                	// #41380
    3404:	b	344c <PyInit__codecs_cn@@Base+0x518>
    3408:	cmp	w13, w12
    340c:	b.eq	34a4 <PyInit__codecs_cn@@Base+0x570>  // b.none
    3410:	lsr	w15, w13, #8
    3414:	lsl	x14, x15, #4
    3418:	ldr	x14, [x9, x14]
    341c:	cbz	x14, 34a4 <PyInit__codecs_cn@@Base+0x570>
    3420:	add	x15, x9, x15, lsl #4
    3424:	ldrb	w17, [x15, #8]
    3428:	and	w16, w13, #0xff
    342c:	subs	w13, w16, w17
    3430:	b.cc	34a4 <PyInit__codecs_cn@@Base+0x570>  // b.lo, b.ul, b.last
    3434:	ldrb	w15, [x15, #9]
    3438:	cmp	w16, w15
    343c:	b.hi	34a4 <PyInit__codecs_cn@@Base+0x570>  // b.pmore
    3440:	ldrh	w13, [x14, w13, uxtw #1]
    3444:	cmp	w13, w10
    3448:	b.eq	34a4 <PyInit__codecs_cn@@Base+0x570>  // b.none
    344c:	ldr	x14, [x6]
    3450:	lsr	w16, w13, #8
    3454:	orr	w16, w16, #0x80
    3458:	sxth	w15, w13
    345c:	strb	w16, [x14]
    3460:	ldr	x16, [x6]
    3464:	orr	w17, w13, #0x80
    3468:	cmp	w15, #0x0
    346c:	mov	x14, #0xfffffffffffffffe    	// #-2
    3470:	csel	w13, w17, w13, ge  // ge = tcont
    3474:	mov	w15, #0x2                   	// #2
    3478:	strb	w13, [x16, #1]
    347c:	ldr	x13, [x4]
    3480:	add	x7, x7, x14
    3484:	add	x13, x13, #0x1
    3488:	str	x13, [x4]
    348c:	ldr	x16, [x6]
    3490:	cmp	x13, x5
    3494:	add	x15, x16, x15
    3498:	str	x15, [x6]
    349c:	b.lt	3378 <PyInit__codecs_cn@@Base+0x444>  // b.tstop
    34a0:	mov	x0, xzr
    34a4:	ret
    34a8:	mov	x0, #0xffffffffffffffff    	// #-1
    34ac:	ret
    34b0:	stp	x29, x30, [sp, #-80]!
    34b4:	str	x25, [sp, #16]
    34b8:	stp	x24, x23, [sp, #32]
    34bc:	stp	x22, x21, [sp, #48]
    34c0:	stp	x20, x19, [sp, #64]
    34c4:	mov	x29, sp
    34c8:	cmp	x3, #0x1
    34cc:	b.lt	3620 <PyInit__codecs_cn@@Base+0x6ec>  // b.tstop
    34d0:	ldr	x8, [x2]
    34d4:	adrp	x23, 2e000 <PyInit__codecs_cn@@Base+0x2b0cc>
    34d8:	adrp	x24, 2f000 <PyInit__codecs_cn@@Base+0x2c0cc>
    34dc:	mov	x20, x4
    34e0:	mov	x21, x3
    34e4:	mov	x22, x2
    34e8:	mov	w19, #0x1                   	// #1
    34ec:	add	x23, x23, #0xd58
    34f0:	add	x24, x24, #0xd58
    34f4:	mov	w25, #0xfffe                	// #65534
    34f8:	ldrsb	w9, [x8]
    34fc:	and	w1, w9, #0xff
    3500:	tbnz	w9, #31, 351c <PyInit__codecs_cn@@Base+0x5e8>
    3504:	mov	x0, x20
    3508:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    350c:	tbnz	w0, #31, 3628 <PyInit__codecs_cn@@Base+0x6f4>
    3510:	mov	x8, #0xffffffffffffffff    	// #-1
    3514:	mov	w9, #0x1                   	// #1
    3518:	b	35fc <PyInit__codecs_cn@@Base+0x6c8>
    351c:	cmp	x21, #0x2
    3520:	b.lt	3630 <PyInit__codecs_cn@@Base+0x6fc>  // b.tstop
    3524:	cmp	w1, #0xa8
    3528:	b.eq	3550 <PyInit__codecs_cn@@Base+0x61c>  // b.none
    352c:	cmp	w1, #0xa1
    3530:	b.ne	3564 <PyInit__codecs_cn@@Base+0x630>  // b.any
    3534:	ldrb	w10, [x8, #1]
    3538:	cmp	w10, #0xa4
    353c:	b.eq	3618 <PyInit__codecs_cn@@Base+0x6e4>  // b.none
    3540:	cmp	w10, #0xaa
    3544:	b.ne	3564 <PyInit__codecs_cn@@Base+0x630>  // b.any
    3548:	mov	w1, #0x2014                	// #8212
    354c:	b	35e8 <PyInit__codecs_cn@@Base+0x6b4>
    3550:	ldrb	w10, [x8, #1]
    3554:	cmp	w10, #0x44
    3558:	b.ne	3564 <PyInit__codecs_cn@@Base+0x630>  // b.any
    355c:	mov	w1, #0x2015                	// #8213
    3560:	b	35e8 <PyInit__codecs_cn@@Base+0x6b4>
    3564:	and	x9, x9, #0xff
    3568:	eor	x11, x9, #0x80
    356c:	lsl	x10, x11, #4
    3570:	ldr	x10, [x23, x10]
    3574:	cbz	x10, 35ac <PyInit__codecs_cn@@Base+0x678>
    3578:	ldrb	w12, [x8, #1]
    357c:	add	x13, x23, x11, lsl #4
    3580:	ldrb	w11, [x13, #8]
    3584:	eor	x12, x12, #0x80
    3588:	cmp	w12, w11
    358c:	b.cc	35ac <PyInit__codecs_cn@@Base+0x678>  // b.lo, b.ul, b.last
    3590:	ldrb	w13, [x13, #9]
    3594:	cmp	w12, w13
    3598:	b.hi	35ac <PyInit__codecs_cn@@Base+0x678>  // b.pmore
    359c:	sub	x11, x12, x11
    35a0:	ldrh	w1, [x10, x11, lsl #1]
    35a4:	cmp	w1, w25
    35a8:	b.ne	35e8 <PyInit__codecs_cn@@Base+0x6b4>  // b.any
    35ac:	lsl	x10, x9, #4
    35b0:	ldr	x10, [x24, x10]
    35b4:	cbz	x10, 3634 <PyInit__codecs_cn@@Base+0x700>
    35b8:	add	x11, x24, x9, lsl #4
    35bc:	ldrb	w8, [x8, #1]
    35c0:	ldrb	w9, [x11, #8]
    35c4:	cmp	w8, w9
    35c8:	b.cc	3634 <PyInit__codecs_cn@@Base+0x700>  // b.lo, b.ul, b.last
    35cc:	ldrb	w11, [x11, #9]
    35d0:	cmp	w8, w11
    35d4:	b.hi	3634 <PyInit__codecs_cn@@Base+0x700>  // b.pmore
    35d8:	sub	x8, x8, x9
    35dc:	ldrh	w1, [x10, x8, lsl #1]
    35e0:	cmp	w1, w25
    35e4:	b.eq	3634 <PyInit__codecs_cn@@Base+0x700>  // b.none
    35e8:	mov	x0, x20
    35ec:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    35f0:	tbnz	w0, #31, 3628 <PyInit__codecs_cn@@Base+0x6f4>
    35f4:	mov	x8, #0xfffffffffffffffe    	// #-2
    35f8:	mov	w9, #0x2                   	// #2
    35fc:	ldr	x10, [x22]
    3600:	add	x21, x21, x8
    3604:	cmp	x21, #0x0
    3608:	add	x8, x10, x9
    360c:	str	x8, [x22]
    3610:	b.gt	34f8 <PyInit__codecs_cn@@Base+0x5c4>
    3614:	b	3620 <PyInit__codecs_cn@@Base+0x6ec>
    3618:	mov	w1, #0xb7                  	// #183
    361c:	b	35e8 <PyInit__codecs_cn@@Base+0x6b4>
    3620:	mov	x19, xzr
    3624:	b	3634 <PyInit__codecs_cn@@Base+0x700>
    3628:	mov	x19, #0xfffffffffffffffc    	// #-4
    362c:	b	3634 <PyInit__codecs_cn@@Base+0x700>
    3630:	mov	x19, #0xfffffffffffffffe    	// #-2
    3634:	mov	x0, x19
    3638:	ldp	x20, x19, [sp, #64]
    363c:	ldp	x22, x21, [sp, #48]
    3640:	ldp	x24, x23, [sp, #32]
    3644:	ldr	x25, [sp, #16]
    3648:	ldp	x29, x30, [sp], #80
    364c:	ret
    3650:	str	x25, [sp, #-64]!
    3654:	stp	x24, x23, [sp, #16]
    3658:	stp	x22, x21, [sp, #32]
    365c:	stp	x20, x19, [sp, #48]
    3660:	ldr	x20, [x4]
    3664:	cmp	x20, x5
    3668:	b.ge	397c <PyInit__codecs_cn@@Base+0xa48>  // b.tcont
    366c:	mov	w8, #0xcccd                	// #52429
    3670:	mov	w10, #0x2083                	// #8323
    3674:	mov	w12, #0x8069                	// #32873
    3678:	mov	w13, #0x19af                	// #6575
    367c:	adrp	x15, 2d000 <PyInit__codecs_cn@@Base+0x2a0cc>
    3680:	adrp	x17, 30000 <PyInit__codecs_cn@@Base+0x2d0cc>
    3684:	adrp	x18, 1a000 <PyInit__codecs_cn@@Base+0x170cc>
    3688:	mov	w0, #0x1                   	// #1
    368c:	movk	w8, #0xcccc, lsl #16
    3690:	mov	w9, #0xa                   	// #10
    3694:	movk	w10, #0x8208, lsl #16
    3698:	mov	w11, #0x7e                  	// #126
    369c:	movk	w12, #0x6806, lsl #16
    36a0:	movk	w13, #0x14ce, lsl #16
    36a4:	mov	w14, #0x2014                	// #8212
    36a8:	add	x15, x15, #0xd58
    36ac:	mov	w16, #0xffff                	// #65535
    36b0:	add	x17, x17, #0xd58
    36b4:	add	x18, x18, #0x284
    36b8:	mov	w1, #0x30fb                	// #12539
    36bc:	mov	w19, #0x2015                	// #8213
    36c0:	cmp	w2, #0x2
    36c4:	b.eq	36d8 <PyInit__codecs_cn@@Base+0x7a4>  // b.none
    36c8:	cmp	w2, #0x1
    36cc:	b.ne	36e0 <PyInit__codecs_cn@@Base+0x7ac>  // b.any
    36d0:	ldrb	w20, [x3, x20]
    36d4:	b	36e4 <PyInit__codecs_cn@@Base+0x7b0>
    36d8:	ldrh	w20, [x3, x20, lsl #1]
    36dc:	b	36e4 <PyInit__codecs_cn@@Base+0x7b0>
    36e0:	ldr	w20, [x3, x20, lsl #2]
    36e4:	cmp	w20, #0x7f
    36e8:	b.hi	3708 <PyInit__codecs_cn@@Base+0x7d4>  // b.pmore
    36ec:	cmp	x7, #0x1
    36f0:	b.lt	3994 <PyInit__codecs_cn@@Base+0xa60>  // b.tstop
    36f4:	ldr	x22, [x6]
    36f8:	mov	x21, #0xffffffffffffffff    	// #-1
    36fc:	strb	w20, [x22]
    3700:	mov	w22, #0x1                   	// #1
    3704:	b	3808 <PyInit__codecs_cn@@Base+0x8d4>
    3708:	subs	w21, w20, #0x10, lsl #12
    370c:	b.cc	3794 <PyInit__codecs_cn@@Base+0x860>  // b.lo, b.ul, b.last
    3710:	cmp	x7, #0x4
    3714:	b.lt	3994 <PyInit__codecs_cn@@Base+0xa60>  // b.tstop
    3718:	umull	x20, w21, w8
    371c:	ldr	x22, [x6]
    3720:	lsr	x23, x20, #35
    3724:	msub	w24, w23, w9, w21
    3728:	lsr	x20, x20, #36
    372c:	orr	w24, w24, #0x30
    3730:	mul	x20, x20, x10
    3734:	strb	w24, [x22, #3]
    3738:	lsr	x20, x20, #37
    373c:	msub	w20, w20, w11, w23
    3740:	ldr	x23, [x6]
    3744:	lsr	w22, w21, #2
    3748:	umull	x22, w22, w12
    374c:	sub	w20, w20, #0x7f
    3750:	lsr	x22, x22, #39
    3754:	strb	w20, [x23, #2]
    3758:	mul	x20, x22, x8
    375c:	ldr	x23, [x6]
    3760:	lsr	x20, x20, #35
    3764:	msub	w20, w20, w9, w22
    3768:	orr	w20, w20, #0x30
    376c:	strb	w20, [x23, #1]
    3770:	lsr	w24, w21, #3
    3774:	ldr	x20, [x6]
    3778:	umull	x22, w24, w13
    377c:	lsr	x22, x22, #39
    3780:	sub	w22, w22, #0x70
    3784:	mov	x21, #0xfffffffffffffffc    	// #-4
    3788:	strb	w22, [x20]
    378c:	mov	w22, #0x4                   	// #4
    3790:	b	3808 <PyInit__codecs_cn@@Base+0x8d4>
    3794:	cmp	x7, #0x2
    3798:	b.lt	3994 <PyInit__codecs_cn@@Base+0xa60>  // b.tstop
    379c:	cmp	w20, w14
    37a0:	b.gt	37bc <PyInit__codecs_cn@@Base+0x888>
    37a4:	cmp	w20, #0xb7
    37a8:	b.eq	37d4 <PyInit__codecs_cn@@Base+0x8a0>  // b.none
    37ac:	cmp	w20, w14
    37b0:	b.ne	3838 <PyInit__codecs_cn@@Base+0x904>  // b.any
    37b4:	mov	w22, #0xa1aa                	// #41386
    37b8:	b	37d8 <PyInit__codecs_cn@@Base+0x8a4>
    37bc:	cmp	w20, w1
    37c0:	b.eq	3830 <PyInit__codecs_cn@@Base+0x8fc>  // b.none
    37c4:	cmp	w20, w19
    37c8:	b.ne	3838 <PyInit__codecs_cn@@Base+0x904>  // b.any
    37cc:	mov	w22, #0xa844                	// #43076
    37d0:	b	37d8 <PyInit__codecs_cn@@Base+0x8a4>
    37d4:	mov	w22, #0xa1a4                	// #41380
    37d8:	ldr	x21, [x6]
    37dc:	lsr	w23, w22, #8
    37e0:	orr	w23, w23, #0x80
    37e4:	sxth	w20, w22
    37e8:	strb	w23, [x21]
    37ec:	ldr	x23, [x6]
    37f0:	orr	w24, w22, #0x80
    37f4:	cmp	w20, #0x0
    37f8:	mov	x21, #0xfffffffffffffffe    	// #-2
    37fc:	csel	w20, w24, w22, ge  // ge = tcont
    3800:	mov	w22, #0x2                   	// #2
    3804:	strb	w20, [x23, #1]
    3808:	ldr	x20, [x4]
    380c:	add	x7, x7, x21
    3810:	add	x20, x20, #0x1
    3814:	str	x20, [x4]
    3818:	ldr	x23, [x6]
    381c:	add	x22, x23, x22
    3820:	str	x22, [x6]
    3824:	cmp	x20, x5
    3828:	b.lt	36c0 <PyInit__codecs_cn@@Base+0x78c>  // b.tstop
    382c:	b	397c <PyInit__codecs_cn@@Base+0xa48>
    3830:	mov	w21, #0x30                  	// #48
    3834:	b	3874 <PyInit__codecs_cn@@Base+0x940>
    3838:	lsr	w21, w20, #8
    383c:	lsl	x22, x21, #4
    3840:	ldr	x22, [x15, x22]
    3844:	cbz	x22, 3874 <PyInit__codecs_cn@@Base+0x940>
    3848:	add	x24, x15, x21, lsl #4
    384c:	ldrb	w23, [x24, #8]
    3850:	and	w25, w20, #0xff
    3854:	subs	w23, w25, w23
    3858:	b.cc	3874 <PyInit__codecs_cn@@Base+0x940>  // b.lo, b.ul, b.last
    385c:	ldrb	w24, [x24, #9]
    3860:	cmp	w25, w24
    3864:	b.hi	3874 <PyInit__codecs_cn@@Base+0x940>  // b.pmore
    3868:	ldrh	w22, [x22, w23, uxtw #1]
    386c:	cmp	w22, w16
    3870:	b.ne	37d8 <PyInit__codecs_cn@@Base+0x8a4>  // b.any
    3874:	lsl	x22, x21, #4
    3878:	ldr	x22, [x17, x22]
    387c:	cbz	x22, 38ac <PyInit__codecs_cn@@Base+0x978>
    3880:	add	x23, x17, x21, lsl #4
    3884:	ldrb	w21, [x23, #8]
    3888:	and	w24, w20, #0xff
    388c:	subs	w21, w24, w21
    3890:	b.cc	38ac <PyInit__codecs_cn@@Base+0x978>  // b.lo, b.ul, b.last
    3894:	ldrb	w23, [x23, #9]
    3898:	cmp	w24, w23
    389c:	b.hi	38ac <PyInit__codecs_cn@@Base+0x978>  // b.pmore
    38a0:	ldrh	w22, [x22, w21, uxtw #1]
    38a4:	cmp	w22, w16
    38a8:	b.ne	37d8 <PyInit__codecs_cn@@Base+0x8a4>  // b.any
    38ac:	subs	x7, x7, #0x4
    38b0:	b.lt	3994 <PyInit__codecs_cn@@Base+0xa60>  // b.tstop
    38b4:	mov	w22, #0x80                  	// #128
    38b8:	mov	x21, x18
    38bc:	subs	w22, w20, w22
    38c0:	b.cc	38d0 <PyInit__codecs_cn@@Base+0x99c>  // b.lo, b.ul, b.last
    38c4:	ldur	w23, [x21, #-4]
    38c8:	cmp	w20, w23
    38cc:	b.ls	38e0 <PyInit__codecs_cn@@Base+0x9ac>  // b.plast
    38d0:	ldr	w22, [x21, #4]
    38d4:	add	x21, x21, #0xc
    38d8:	cbnz	w22, 38bc <PyInit__codecs_cn@@Base+0x988>
    38dc:	b	3980 <PyInit__codecs_cn@@Base+0xa4c>
    38e0:	ldrh	w20, [x21]
    38e4:	ldr	x23, [x6]
    38e8:	add	w20, w22, w20
    38ec:	umull	x22, w20, w8
    38f0:	lsr	x24, x22, #35
    38f4:	msub	w25, w24, w9, w20
    38f8:	orr	w25, w25, #0x30
    38fc:	strb	w25, [x23, #3]
    3900:	lsr	x22, x22, #36
    3904:	mul	x22, x22, x10
    3908:	ldr	x25, [x6]
    390c:	lsr	x22, x22, #37
    3910:	lsr	w23, w20, #2
    3914:	msub	w22, w22, w11, w24
    3918:	umull	x23, w23, w12
    391c:	sub	w22, w22, #0x7f
    3920:	lsr	x23, x23, #39
    3924:	strb	w22, [x25, #2]
    3928:	mul	x24, x23, x8
    392c:	ldr	x22, [x6]
    3930:	lsr	x24, x24, #35
    3934:	msub	w23, w24, w9, w23
    3938:	orr	w23, w23, #0x30
    393c:	strb	w23, [x22, #1]
    3940:	lsr	w20, w20, #3
    3944:	ldr	x22, [x6]
    3948:	umull	x20, w20, w13
    394c:	lsr	x20, x20, #39
    3950:	sub	w20, w20, #0x7f
    3954:	strb	w20, [x22]
    3958:	ldr	x20, [x4]
    395c:	add	x20, x20, #0x1
    3960:	str	x20, [x4]
    3964:	ldr	x22, [x6]
    3968:	add	x22, x22, #0x4
    396c:	str	x22, [x6]
    3970:	ldur	w21, [x21, #-8]
    3974:	cbnz	w21, 3824 <PyInit__codecs_cn@@Base+0x8f0>
    3978:	b	3980 <PyInit__codecs_cn@@Base+0xa4c>
    397c:	mov	x0, xzr
    3980:	ldp	x20, x19, [sp, #48]
    3984:	ldp	x22, x21, [sp, #32]
    3988:	ldp	x24, x23, [sp, #16]
    398c:	ldr	x25, [sp], #64
    3990:	ret
    3994:	mov	x0, #0xffffffffffffffff    	// #-1
    3998:	b	3980 <PyInit__codecs_cn@@Base+0xa4c>
    399c:	stp	x29, x30, [sp, #-96]!
    39a0:	stp	x28, x27, [sp, #16]
    39a4:	stp	x26, x25, [sp, #32]
    39a8:	stp	x24, x23, [sp, #48]
    39ac:	stp	x22, x21, [sp, #64]
    39b0:	stp	x20, x19, [sp, #80]
    39b4:	mov	x29, sp
    39b8:	cmp	x3, #0x1
    39bc:	b.lt	3c54 <PyInit__codecs_cn@@Base+0xd20>  // b.tstop
    39c0:	ldr	x9, [x2]
    39c4:	adrp	x8, 1a000 <PyInit__codecs_cn@@Base+0x170cc>
    39c8:	add	x8, x8, #0x27c
    39cc:	mov	w26, #0x1db8                	// #7608
    39d0:	adrp	x27, 31000 <PyInit__codecs_cn@@Base+0x2e0cc>
    39d4:	mov	x20, x4
    39d8:	mov	x21, x3
    39dc:	mov	x22, x2
    39e0:	mov	w19, #0x1                   	// #1
    39e4:	mov	w23, #0xa                   	// #10
    39e8:	mov	w24, #0x4ec                 	// #1260
    39ec:	mov	w25, #0x99fb                	// #39419
    39f0:	movk	w26, #0xfffe, lsl #16
    39f4:	sub	x28, x8, #0xc
    39f8:	add	x27, x27, #0xd58
    39fc:	ldrsb	w11, [x9]
    3a00:	and	w1, w11, #0xff
    3a04:	tbnz	w11, #31, 3a20 <PyInit__codecs_cn@@Base+0xaec>
    3a08:	mov	x0, x20
    3a0c:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3a10:	tbnz	w0, #31, 3c5c <PyInit__codecs_cn@@Base+0xd28>
    3a14:	mov	x8, #0xffffffffffffffff    	// #-1
    3a18:	mov	w9, #0x1                   	// #1
    3a1c:	b	3c3c <PyInit__codecs_cn@@Base+0xd08>
    3a20:	cmp	x21, #0x2
    3a24:	b.lt	3c64 <PyInit__codecs_cn@@Base+0xd30>  // b.tstop
    3a28:	ldrb	w8, [x9, #1]
    3a2c:	sub	w10, w8, #0x30
    3a30:	cmp	w10, #0x9
    3a34:	b.hi	3ac8 <PyInit__codecs_cn@@Base+0xb94>  // b.pmore
    3a38:	cmp	x21, #0x4
    3a3c:	b.lt	3c64 <PyInit__codecs_cn@@Base+0xd30>  // b.tstop
    3a40:	ldrb	w8, [x9, #3]
    3a44:	sub	w8, w8, #0x30
    3a48:	cmp	w8, #0x9
    3a4c:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3a50:	add	w11, w1, #0x7f
    3a54:	and	w12, w11, #0xff
    3a58:	cmp	w12, #0x7d
    3a5c:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3a60:	ldrb	w9, [x9, #2]
    3a64:	add	w9, w9, #0x7f
    3a68:	and	w12, w9, #0xff
    3a6c:	cmp	w12, #0x7d
    3a70:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3a74:	and	w11, w11, #0xff
    3a78:	cmp	w11, #0x3
    3a7c:	b.hi	3afc <PyInit__codecs_cn@@Base+0xbc8>  // b.pmore
    3a80:	mul	w11, w11, w23
    3a84:	add	w10, w11, w10, uxtb
    3a88:	mul	w10, w10, w24
    3a8c:	and	w9, w9, #0xff
    3a90:	madd	w9, w9, w23, w10
    3a94:	add	w8, w9, w8, uxtb
    3a98:	cmp	w8, w25
    3a9c:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3aa0:	mov	x9, x28
    3aa4:	ldrh	w10, [x9, #32]
    3aa8:	add	x9, x9, #0xc
    3aac:	cmp	w8, w10
    3ab0:	b.cs	3aa4 <PyInit__codecs_cn@@Base+0xb70>  // b.hs, b.nlast
    3ab4:	ldr	w10, [x9]
    3ab8:	ldrh	w9, [x9, #8]
    3abc:	add	w8, w10, w8
    3ac0:	sub	w1, w8, w9
    3ac4:	b	3b2c <PyInit__codecs_cn@@Base+0xbf8>
    3ac8:	and	x9, x11, #0xff
    3acc:	cmp	w9, #0xa1
    3ad0:	b.ne	3ae4 <PyInit__codecs_cn@@Base+0xbb0>  // b.any
    3ad4:	cmp	w8, #0xaa
    3ad8:	b.ne	3ae4 <PyInit__codecs_cn@@Base+0xbb0>  // b.any
    3adc:	mov	w1, #0x2014                	// #8212
    3ae0:	b	3c28 <PyInit__codecs_cn@@Base+0xcf4>
    3ae4:	cmp	w9, #0xa8
    3ae8:	b.ne	3b44 <PyInit__codecs_cn@@Base+0xc10>  // b.any
    3aec:	cmp	w8, #0x44
    3af0:	b.ne	3b44 <PyInit__codecs_cn@@Base+0xc10>  // b.any
    3af4:	mov	w1, #0x2015                	// #8213
    3af8:	b	3c28 <PyInit__codecs_cn@@Base+0xcf4>
    3afc:	cmp	w11, #0xf
    3b00:	b.cc	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.lo, b.ul, b.last
    3b04:	mul	w11, w11, w23
    3b08:	and	w9, w9, #0xff
    3b0c:	add	w10, w11, w10, uxtb
    3b10:	mul	w9, w9, w23
    3b14:	madd	w9, w10, w24, w9
    3b18:	add	w8, w9, w8, uxtb
    3b1c:	add	w1, w8, w26
    3b20:	lsr	w8, w1, #16
    3b24:	cmp	w8, #0x10
    3b28:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3b2c:	mov	x0, x20
    3b30:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3b34:	mov	x8, #0xfffffffffffffffc    	// #-4
    3b38:	tbnz	w0, #31, 3c5c <PyInit__codecs_cn@@Base+0xd28>
    3b3c:	mov	w9, #0x4                   	// #4
    3b40:	b	3c3c <PyInit__codecs_cn@@Base+0xd08>
    3b44:	cmp	w9, #0xa1
    3b48:	b.ne	3b5c <PyInit__codecs_cn@@Base+0xc28>  // b.any
    3b4c:	cmp	w8, #0xa4
    3b50:	b.ne	3b5c <PyInit__codecs_cn@@Base+0xc28>  // b.any
    3b54:	mov	w1, #0xb7                  	// #183
    3b58:	b	3c28 <PyInit__codecs_cn@@Base+0xcf4>
    3b5c:	eor	x11, x9, #0x80
    3b60:	adrp	x12, 2e000 <PyInit__codecs_cn@@Base+0x2b0cc>
    3b64:	lsl	x10, x11, #4
    3b68:	add	x12, x12, #0xd58
    3b6c:	ldr	x10, [x12, x10]
    3b70:	cbz	x10, 3bac <PyInit__codecs_cn@@Base+0xc78>
    3b74:	adrp	x12, 2e000 <PyInit__codecs_cn@@Base+0x2b0cc>
    3b78:	add	x12, x12, #0xd58
    3b7c:	add	x12, x12, x11, lsl #4
    3b80:	ldrb	w11, [x12, #8]
    3b84:	eor	w13, w8, #0x80
    3b88:	subs	w11, w13, w11
    3b8c:	b.cc	3bac <PyInit__codecs_cn@@Base+0xc78>  // b.lo, b.ul, b.last
    3b90:	ldrb	w12, [x12, #9]
    3b94:	cmp	w13, w12
    3b98:	b.hi	3bac <PyInit__codecs_cn@@Base+0xc78>  // b.pmore
    3b9c:	ldrh	w1, [x10, w11, sxtw #1]
    3ba0:	mov	w10, #0xfffe                	// #65534
    3ba4:	cmp	w1, w10
    3ba8:	b.ne	3c28 <PyInit__codecs_cn@@Base+0xcf4>  // b.any
    3bac:	adrp	x11, 2f000 <PyInit__codecs_cn@@Base+0x2c0cc>
    3bb0:	lsl	x10, x9, #4
    3bb4:	add	x11, x11, #0xd58
    3bb8:	ldr	x11, [x11, x10]
    3bbc:	cbz	x11, 3bf4 <PyInit__codecs_cn@@Base+0xcc0>
    3bc0:	adrp	x12, 2f000 <PyInit__codecs_cn@@Base+0x2c0cc>
    3bc4:	add	x12, x12, #0xd58
    3bc8:	add	x13, x12, x9, lsl #4
    3bcc:	ldrb	w12, [x13, #8]
    3bd0:	subs	w12, w8, w12
    3bd4:	b.cc	3bf4 <PyInit__codecs_cn@@Base+0xcc0>  // b.lo, b.ul, b.last
    3bd8:	ldrb	w13, [x13, #9]
    3bdc:	cmp	w8, w13
    3be0:	b.hi	3bf4 <PyInit__codecs_cn@@Base+0xcc0>  // b.pmore
    3be4:	ldrh	w1, [x11, w12, sxtw #1]
    3be8:	mov	w11, #0xfffe                	// #65534
    3bec:	cmp	w1, w11
    3bf0:	b.ne	3c28 <PyInit__codecs_cn@@Base+0xcf4>  // b.any
    3bf4:	ldr	x10, [x27, x10]
    3bf8:	cbz	x10, 3c68 <PyInit__codecs_cn@@Base+0xd34>
    3bfc:	add	x11, x27, x9, lsl #4
    3c00:	ldrb	w9, [x11, #8]
    3c04:	subs	w9, w8, w9
    3c08:	b.cc	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.lo, b.ul, b.last
    3c0c:	ldrb	w11, [x11, #9]
    3c10:	cmp	w8, w11
    3c14:	b.hi	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.pmore
    3c18:	ldrh	w1, [x10, w9, sxtw #1]
    3c1c:	mov	w8, #0xfffe                	// #65534
    3c20:	cmp	w1, w8
    3c24:	b.eq	3c68 <PyInit__codecs_cn@@Base+0xd34>  // b.none
    3c28:	mov	x0, x20
    3c2c:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3c30:	tbnz	w0, #31, 3c5c <PyInit__codecs_cn@@Base+0xd28>
    3c34:	mov	x8, #0xfffffffffffffffe    	// #-2
    3c38:	mov	w9, #0x2                   	// #2
    3c3c:	ldr	x10, [x22]
    3c40:	add	x21, x21, x8
    3c44:	cmp	x21, #0x0
    3c48:	add	x9, x10, x9
    3c4c:	str	x9, [x22]
    3c50:	b.gt	39fc <PyInit__codecs_cn@@Base+0xac8>
    3c54:	mov	x19, xzr
    3c58:	b	3c68 <PyInit__codecs_cn@@Base+0xd34>
    3c5c:	mov	x19, #0xfffffffffffffffc    	// #-4
    3c60:	b	3c68 <PyInit__codecs_cn@@Base+0xd34>
    3c64:	mov	x19, #0xfffffffffffffffe    	// #-2
    3c68:	mov	x0, x19
    3c6c:	ldp	x20, x19, [sp, #80]
    3c70:	ldp	x22, x21, [sp, #64]
    3c74:	ldp	x24, x23, [sp, #48]
    3c78:	ldp	x26, x25, [sp, #32]
    3c7c:	ldp	x28, x27, [sp, #16]
    3c80:	ldp	x29, x30, [sp], #96
    3c84:	ret
    3c88:	ldr	x14, [x4]
    3c8c:	cmp	x14, x5
    3c90:	b.ge	3e2c <PyInit__codecs_cn@@Base+0xef8>  // b.tcont
    3c94:	adrp	x11, 2d000 <PyInit__codecs_cn@@Base+0x2a0cc>
    3c98:	mov	x8, x0
    3c9c:	mov	w9, #0x7e                  	// #126
    3ca0:	mov	w10, #0x7d                  	// #125
    3ca4:	mov	w0, #0x1                   	// #1
    3ca8:	add	x11, x11, #0xd58
    3cac:	mov	w12, #0x7b                  	// #123
    3cb0:	cmp	w2, #0x2
    3cb4:	b.eq	3cc8 <PyInit__codecs_cn@@Base+0xd94>  // b.none
    3cb8:	cmp	w2, #0x1
    3cbc:	b.ne	3cd0 <PyInit__codecs_cn@@Base+0xd9c>  // b.any
    3cc0:	ldrb	w14, [x3, x14]
    3cc4:	b	3cd4 <PyInit__codecs_cn@@Base+0xda0>
    3cc8:	ldrh	w14, [x3, x14, lsl #1]
    3ccc:	b	3cd4 <PyInit__codecs_cn@@Base+0xda0>
    3cd0:	ldr	w14, [x3, x14, lsl #2]
    3cd4:	cmp	w14, #0x7f
    3cd8:	b.hi	3d54 <PyInit__codecs_cn@@Base+0xe20>  // b.pmore
    3cdc:	ldrb	w13, [x8]
    3ce0:	cbz	w13, 3d0c <PyInit__codecs_cn@@Base+0xdd8>
    3ce4:	subs	x7, x7, #0x2
    3ce8:	b.lt	3e34 <PyInit__codecs_cn@@Base+0xf00>  // b.tstop
    3cec:	ldr	x13, [x6]
    3cf0:	strb	w9, [x13]
    3cf4:	ldr	x13, [x6]
    3cf8:	strb	w10, [x13, #1]
    3cfc:	ldr	x13, [x6]
    3d00:	add	x13, x13, #0x2
    3d04:	str	x13, [x6]
    3d08:	strb	wzr, [x8]
    3d0c:	subs	x13, x7, #0x1
    3d10:	b.lt	3e34 <PyInit__codecs_cn@@Base+0xf00>  // b.tstop
    3d14:	ldr	x15, [x6]
    3d18:	cmp	w14, #0x7e
    3d1c:	strb	w14, [x15]
    3d20:	ldr	x15, [x4]
    3d24:	add	x15, x15, #0x1
    3d28:	str	x15, [x4]
    3d2c:	ldr	x15, [x6]
    3d30:	add	x15, x15, #0x1
    3d34:	str	x15, [x6]
    3d38:	b.ne	3e1c <PyInit__codecs_cn@@Base+0xee8>  // b.any
    3d3c:	subs	x13, x7, #0x2
    3d40:	b.lt	3e34 <PyInit__codecs_cn@@Base+0xf00>  // b.tstop
    3d44:	strb	w9, [x15]
    3d48:	ldr	x14, [x6]
    3d4c:	add	x14, x14, #0x1
    3d50:	b	3dcc <PyInit__codecs_cn@@Base+0xe98>
    3d54:	lsr	w13, w14, #16
    3d58:	cbnz	w13, 3e30 <PyInit__codecs_cn@@Base+0xefc>
    3d5c:	lsr	w15, w14, #8
    3d60:	lsl	x13, x15, #4
    3d64:	ldr	x13, [x11, x13]
    3d68:	cbz	x13, 3e30 <PyInit__codecs_cn@@Base+0xefc>
    3d6c:	add	x15, x11, x15, lsl #4
    3d70:	ldrb	w17, [x15, #8]
    3d74:	and	w16, w14, #0xff
    3d78:	subs	w14, w16, w17
    3d7c:	b.cc	3e30 <PyInit__codecs_cn@@Base+0xefc>  // b.lo, b.ul, b.last
    3d80:	ldrb	w15, [x15, #9]
    3d84:	cmp	w16, w15
    3d88:	b.hi	3e30 <PyInit__codecs_cn@@Base+0xefc>  // b.pmore
    3d8c:	ldrsh	w14, [x13, w14, uxtw #1]
    3d90:	tbnz	w14, #31, 3e30 <PyInit__codecs_cn@@Base+0xefc>
    3d94:	ldrb	w13, [x8]
    3d98:	cbz	w13, 3dd4 <PyInit__codecs_cn@@Base+0xea0>
    3d9c:	subs	x13, x7, #0x2
    3da0:	b.lt	3e34 <PyInit__codecs_cn@@Base+0xf00>  // b.tstop
    3da4:	ldr	x15, [x6]
    3da8:	lsr	w16, w14, #8
    3dac:	strb	w16, [x15]
    3db0:	ldr	x15, [x6]
    3db4:	strb	w14, [x15, #1]
    3db8:	ldr	x14, [x4]
    3dbc:	add	x14, x14, #0x1
    3dc0:	str	x14, [x4]
    3dc4:	ldr	x14, [x6]
    3dc8:	add	x14, x14, #0x2
    3dcc:	str	x14, [x6]
    3dd0:	b	3e1c <PyInit__codecs_cn@@Base+0xee8>
    3dd4:	subs	x13, x7, #0x4
    3dd8:	b.lt	3e34 <PyInit__codecs_cn@@Base+0xf00>  // b.tstop
    3ddc:	ldr	x15, [x6]
    3de0:	lsr	w16, w14, #8
    3de4:	strb	w9, [x15]
    3de8:	ldr	x15, [x6]
    3dec:	strb	w12, [x15, #1]
    3df0:	ldr	x15, [x6]
    3df4:	strb	w16, [x15, #2]
    3df8:	ldr	x15, [x6]
    3dfc:	strb	w14, [x15, #3]
    3e00:	ldr	x14, [x4]
    3e04:	add	x14, x14, #0x1
    3e08:	str	x14, [x4]
    3e0c:	ldr	x14, [x6]
    3e10:	add	x14, x14, #0x4
    3e14:	str	x14, [x6]
    3e18:	strb	w0, [x8]
    3e1c:	ldr	x14, [x4]
    3e20:	mov	x7, x13
    3e24:	cmp	x14, x5
    3e28:	b.lt	3cb0 <PyInit__codecs_cn@@Base+0xd7c>  // b.tstop
    3e2c:	mov	x0, xzr
    3e30:	ret
    3e34:	mov	x0, #0xffffffffffffffff    	// #-1
    3e38:	ret
    3e3c:	strb	wzr, [x0]
    3e40:	mov	w0, wzr
    3e44:	ret
    3e48:	ldrb	w9, [x0]
    3e4c:	cbz	w9, 3e60 <PyInit__codecs_cn@@Base+0xf2c>
    3e50:	cmp	x3, #0x2
    3e54:	b.ge	3e68 <PyInit__codecs_cn@@Base+0xf34>  // b.tcont
    3e58:	mov	x0, #0xffffffffffffffff    	// #-1
    3e5c:	ret
    3e60:	mov	x0, xzr
    3e64:	ret
    3e68:	ldr	x9, [x2]
    3e6c:	mov	w10, #0x7e                  	// #126
    3e70:	mov	x8, x0
    3e74:	mov	x0, xzr
    3e78:	strb	w10, [x9]
    3e7c:	ldr	x9, [x2]
    3e80:	mov	w10, #0x7d                  	// #125
    3e84:	strb	w10, [x9, #1]
    3e88:	strb	wzr, [x8]
    3e8c:	ldr	x8, [x2]
    3e90:	add	x8, x8, #0x2
    3e94:	str	x8, [x2]
    3e98:	ret
    3e9c:	stp	x29, x30, [sp, #-80]!
    3ea0:	str	x25, [sp, #16]
    3ea4:	stp	x24, x23, [sp, #32]
    3ea8:	stp	x22, x21, [sp, #48]
    3eac:	stp	x20, x19, [sp, #64]
    3eb0:	mov	x29, sp
    3eb4:	cmp	x3, #0x1
    3eb8:	b.lt	3ff4 <PyInit__codecs_cn@@Base+0x10c0>  // b.tstop
    3ebc:	ldr	x8, [x2]
    3ec0:	adrp	x24, 2e000 <PyInit__codecs_cn@@Base+0x2b0cc>
    3ec4:	mov	x20, x4
    3ec8:	mov	x21, x3
    3ecc:	mov	x22, x2
    3ed0:	mov	x23, x0
    3ed4:	mov	w19, #0x1                   	// #1
    3ed8:	add	x24, x24, #0xd58
    3edc:	mov	w25, #0xfffe                	// #65534
    3ee0:	ldrb	w1, [x8]
    3ee4:	cmp	w1, #0x7e
    3ee8:	b.ne	3f20 <PyInit__codecs_cn@@Base+0xfec>  // b.any
    3eec:	cmp	x21, #0x2
    3ef0:	b.lt	4014 <PyInit__codecs_cn@@Base+0x10e0>  // b.tstop
    3ef4:	ldrb	w8, [x8, #1]
    3ef8:	cmp	w8, #0x7c
    3efc:	b.gt	3f74 <PyInit__codecs_cn@@Base+0x1040>
    3f00:	cmp	w8, #0xa
    3f04:	b.eq	3fb8 <PyInit__codecs_cn@@Base+0x1084>  // b.none
    3f08:	cmp	w8, #0x7b
    3f0c:	b.ne	3ff8 <PyInit__codecs_cn@@Base+0x10c4>  // b.any
    3f10:	ldrb	w8, [x23]
    3f14:	cbnz	w8, 3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3f18:	strb	w19, [x23]
    3f1c:	b	3fd4 <PyInit__codecs_cn@@Base+0x10a0>
    3f20:	tbnz	w1, #7, 3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3f24:	ldrb	w9, [x23]
    3f28:	cbz	w9, 3fa0 <PyInit__codecs_cn@@Base+0x106c>
    3f2c:	cmp	x21, #0x2
    3f30:	b.lt	4014 <PyInit__codecs_cn@@Base+0x10e0>  // b.tstop
    3f34:	lsl	x9, x1, #4
    3f38:	ldr	x9, [x24, x9]
    3f3c:	cbz	x9, 3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3f40:	add	x11, x24, x1, lsl #4
    3f44:	ldrb	w8, [x8, #1]
    3f48:	ldrb	w10, [x11, #8]
    3f4c:	cmp	w8, w10
    3f50:	b.cc	3ff8 <PyInit__codecs_cn@@Base+0x10c4>  // b.lo, b.ul, b.last
    3f54:	ldrb	w11, [x11, #9]
    3f58:	cmp	w8, w11
    3f5c:	b.hi	3ff8 <PyInit__codecs_cn@@Base+0x10c4>  // b.pmore
    3f60:	sub	x8, x8, x10
    3f64:	ldrh	w1, [x9, x8, lsl #1]
    3f68:	cmp	w1, w25
    3f6c:	b.ne	3f90 <PyInit__codecs_cn@@Base+0x105c>  // b.any
    3f70:	b	3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3f74:	cmp	w8, #0x7d
    3f78:	b.eq	3fc4 <PyInit__codecs_cn@@Base+0x1090>  // b.none
    3f7c:	cmp	w8, #0x7e
    3f80:	b.ne	3ff8 <PyInit__codecs_cn@@Base+0x10c4>  // b.any
    3f84:	ldrb	w8, [x23]
    3f88:	cbnz	w8, 3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3f8c:	mov	w1, #0x7e                  	// #126
    3f90:	mov	x0, x20
    3f94:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3f98:	tbz	w0, #31, 3fd4 <PyInit__codecs_cn@@Base+0x10a0>
    3f9c:	b	401c <PyInit__codecs_cn@@Base+0x10e8>
    3fa0:	mov	x0, x20
    3fa4:	bl	2e10 <_PyUnicodeWriter_WriteChar@plt>
    3fa8:	tbnz	w0, #31, 401c <PyInit__codecs_cn@@Base+0x10e8>
    3fac:	mov	x8, #0xffffffffffffffff    	// #-1
    3fb0:	mov	w9, #0x1                   	// #1
    3fb4:	b	3fdc <PyInit__codecs_cn@@Base+0x10a8>
    3fb8:	ldrb	w8, [x23]
    3fbc:	cbz	w8, 3fd4 <PyInit__codecs_cn@@Base+0x10a0>
    3fc0:	b	3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    3fc4:	ldrb	w8, [x23]
    3fc8:	cmp	w8, #0x1
    3fcc:	b.ne	3ff8 <PyInit__codecs_cn@@Base+0x10c4>  // b.any
    3fd0:	strb	wzr, [x23]
    3fd4:	mov	x8, #0xfffffffffffffffe    	// #-2
    3fd8:	mov	w9, #0x2                   	// #2
    3fdc:	ldr	x10, [x22]
    3fe0:	add	x21, x21, x8
    3fe4:	cmp	x21, #0x0
    3fe8:	add	x8, x10, x9
    3fec:	str	x8, [x22]
    3ff0:	b.gt	3ee0 <PyInit__codecs_cn@@Base+0xfac>
    3ff4:	mov	x19, xzr
    3ff8:	mov	x0, x19
    3ffc:	ldp	x20, x19, [sp, #64]
    4000:	ldp	x22, x21, [sp, #48]
    4004:	ldp	x24, x23, [sp, #32]
    4008:	ldr	x25, [sp, #16]
    400c:	ldp	x29, x30, [sp], #80
    4010:	ret
    4014:	mov	x19, #0xfffffffffffffffe    	// #-2
    4018:	b	3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    401c:	mov	x19, #0xfffffffffffffffc    	// #-4
    4020:	b	3ff8 <PyInit__codecs_cn@@Base+0x10c4>
    4024:	strb	wzr, [x0]
    4028:	mov	w0, wzr
    402c:	ret
    4030:	strb	wzr, [x0]
    4034:	mov	x0, xzr
    4038:	ret

Disassembly of section .fini:

000000000000403c <.fini>:
    403c:	stp	x29, x30, [sp, #-16]!
    4040:	mov	x29, sp
    4044:	ldp	x29, x30, [sp], #16
    4048:	ret
