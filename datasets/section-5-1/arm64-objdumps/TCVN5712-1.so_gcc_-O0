
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//TCVN5712-1.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006e8 <.init>:
 6e8:	stp	x29, x30, [sp, #-16]!
 6ec:	mov	x29, sp
 6f0:	bl	7a0 <__assert_fail@plt+0x10>
 6f4:	ldp	x29, x30, [sp], #16
 6f8:	ret

Disassembly of section .plt:

0000000000000700 <__cxa_finalize@plt-0x20>:
 700:	stp	x16, x30, [sp, #-16]!
 704:	adrp	x16, 12000 <gconv@@Base+0x116a8>
 708:	ldr	x17, [x16, #4088]
 70c:	add	x16, x16, #0xff8
 710:	br	x17
 714:	nop
 718:	nop
 71c:	nop

0000000000000720 <__cxa_finalize@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16]
 728:	add	x16, x16, #0x0
 72c:	br	x17

0000000000000730 <__gconv_transliterate@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #8]
 738:	add	x16, x16, #0x8
 73c:	br	x17

0000000000000740 <__stack_chk_fail@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #16]
 748:	add	x16, x16, #0x10
 74c:	br	x17

0000000000000750 <__gmon_start__@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #24]
 758:	add	x16, x16, #0x18
 75c:	br	x17

0000000000000760 <abort@plt>:
 760:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 764:	ldr	x17, [x16, #32]
 768:	add	x16, x16, #0x20
 76c:	br	x17

0000000000000770 <strcmp@plt>:
 770:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 774:	ldr	x17, [x16, #40]
 778:	add	x16, x16, #0x28
 77c:	br	x17

0000000000000780 <_dl_mcount_wrapper_check@plt>:
 780:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 784:	ldr	x17, [x16, #48]
 788:	add	x16, x16, #0x30
 78c:	br	x17

0000000000000790 <__assert_fail@plt>:
 790:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16, #56]
 798:	add	x16, x16, #0x38
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <gconv_init@@Base-0x128>:
     7a0:	adrp	x0, 12000 <gconv@@Base+0x116a8>
     7a4:	ldr	x0, [x0, #4048]
     7a8:	cbz	x0, 7b0 <__assert_fail@plt+0x20>
     7ac:	b	750 <__gmon_start__@plt>
     7b0:	ret
     7b4:	nop
     7b8:	adrp	x0, 13000 <gconv@@Base+0x126a8>
     7bc:	add	x0, x0, #0x48
     7c0:	adrp	x1, 13000 <gconv@@Base+0x126a8>
     7c4:	add	x1, x1, #0x48
     7c8:	cmp	x1, x0
     7cc:	b.eq	7e4 <__assert_fail@plt+0x54>  // b.none
     7d0:	adrp	x1, 12000 <gconv@@Base+0x116a8>
     7d4:	ldr	x1, [x1, #4024]
     7d8:	cbz	x1, 7e4 <__assert_fail@plt+0x54>
     7dc:	mov	x16, x1
     7e0:	br	x16
     7e4:	ret
     7e8:	adrp	x0, 13000 <gconv@@Base+0x126a8>
     7ec:	add	x0, x0, #0x48
     7f0:	adrp	x1, 13000 <gconv@@Base+0x126a8>
     7f4:	add	x1, x1, #0x48
     7f8:	sub	x1, x1, x0
     7fc:	lsr	x2, x1, #63
     800:	add	x1, x2, x1, asr #3
     804:	cmp	xzr, x1, asr #1
     808:	asr	x1, x1, #1
     80c:	b.eq	824 <__assert_fail@plt+0x94>  // b.none
     810:	adrp	x2, 12000 <gconv@@Base+0x116a8>
     814:	ldr	x2, [x2, #4064]
     818:	cbz	x2, 824 <__assert_fail@plt+0x94>
     81c:	mov	x16, x2
     820:	br	x16
     824:	ret
     828:	stp	x29, x30, [sp, #-32]!
     82c:	mov	x29, sp
     830:	str	x19, [sp, #16]
     834:	adrp	x19, 13000 <gconv@@Base+0x126a8>
     838:	ldrb	w0, [x19, #72]
     83c:	cbnz	w0, 864 <__assert_fail@plt+0xd4>
     840:	adrp	x0, 12000 <gconv@@Base+0x116a8>
     844:	ldr	x0, [x0, #4032]
     848:	cbz	x0, 858 <__assert_fail@plt+0xc8>
     84c:	adrp	x0, 13000 <gconv@@Base+0x126a8>
     850:	ldr	x0, [x0, #64]
     854:	bl	720 <__cxa_finalize@plt>
     858:	bl	7b8 <__assert_fail@plt+0x28>
     85c:	mov	w0, #0x1                   	// #1
     860:	strb	w0, [x19, #72]
     864:	ldr	x19, [sp, #16]
     868:	ldp	x29, x30, [sp], #32
     86c:	ret
     870:	b	7e8 <__assert_fail@plt+0x58>
     874:	nop
     878:	and	w1, w1, #0xff
     87c:	cmp	w1, #0x17
     880:	b.hi	8a0 <__assert_fail@plt+0x110>  // b.pmore
     884:	adrp	x0, 1000 <gconv@@Base+0x6a8>
     888:	add	x0, x0, #0xf60
     88c:	ldrh	w1, [x0, w1, sxtw #1]
     890:	sub	w0, w1, #0x41
     894:	cmp	w0, #0x16f
     898:	csinv	w0, w1, wzr, hi  // hi = pmore
     89c:	ret
     8a0:	tbz	w1, #7, 890 <__assert_fail@plt+0x100>
     8a4:	adrp	x0, 1000 <gconv@@Base+0x6a8>
     8a8:	add	x0, x0, #0xf60
     8ac:	add	x0, x0, #0x30
     8b0:	sub	w1, w1, #0x80
     8b4:	ldrh	w1, [x0, w1, sxtw #1]
     8b8:	sub	w0, w1, #0x41
     8bc:	cmp	w0, #0x16f
     8c0:	csinv	w0, w1, wzr, hi  // hi = pmore
     8c4:	ret

00000000000008c8 <gconv_init@@Base>:
     8c8:	stp	x29, x30, [sp, #-32]!
     8cc:	mov	x29, sp
     8d0:	stp	x19, x20, [sp, #16]
     8d4:	mov	x19, x0
     8d8:	adrp	x20, 1000 <gconv@@Base+0x6a8>
     8dc:	ldr	x0, [x0, #24]
     8e0:	add	x20, x20, #0xdc8
     8e4:	mov	x1, x20
     8e8:	bl	770 <strcmp@plt>
     8ec:	cbnz	w0, 924 <gconv_init@@Base+0x5c>
     8f0:	adrp	x0, 0 <__cxa_finalize@plt-0x720>
     8f4:	mov	x2, #0x100000001           	// #4294967297
     8f8:	add	x0, x0, #0x878
     8fc:	mov	x1, #0x400000004           	// #17179869188
     900:	str	x0, [x19, #48]
     904:	stp	x2, x1, [x19, #72]
     908:	str	xzr, [x19, #96]
     90c:	mov	w1, #0x1                   	// #1
     910:	mov	w0, #0x0                   	// #0
     914:	str	w1, [x19, #88]
     918:	ldp	x19, x20, [sp, #16]
     91c:	ldp	x29, x30, [sp], #32
     920:	ret
     924:	ldr	x0, [x19, #32]
     928:	mov	x1, x20
     92c:	bl	770 <strcmp@plt>
     930:	cbnz	w0, 950 <gconv_init@@Base+0x88>
     934:	mov	x1, #0x1                   	// #1
     938:	mov	x0, #0xffffffffffffffff    	// #-1
     93c:	mov	x2, #0x400000004           	// #17179869188
     940:	movk	x1, #0x2, lsl #32
     944:	stp	x2, x1, [x19, #72]
     948:	str	x0, [x19, #96]
     94c:	b	90c <gconv_init@@Base+0x44>
     950:	mov	w0, #0x1                   	// #1
     954:	b	918 <gconv_init@@Base+0x50>

0000000000000958 <gconv@@Base>:
     958:	stp	x29, x30, [sp, #-256]!
     95c:	mov	x14, x0
     960:	mov	x11, x2
     964:	mov	x29, sp
     968:	stp	x21, x22, [sp, #32]
     96c:	mov	x21, x1
     970:	adrp	x1, 12000 <gconv@@Base+0x116a8>
     974:	stp	x19, x20, [sp, #16]
     978:	mov	x13, x4
     97c:	ldr	w19, [x21, #16]
     980:	ldr	x1, [x1, #4056]
     984:	stp	x23, x24, [sp, #48]
     988:	mov	x20, x3
     98c:	ldr	x0, [x1]
     990:	str	x0, [sp, #248]
     994:	mov	x0, #0x0                   	// #0
     998:	stp	x25, x26, [sp, #64]
     99c:	mov	x23, x5
     9a0:	stp	x27, x28, [sp, #80]
     9a4:	mov	w24, w7
     9a8:	add	x25, x14, #0x68
     9ac:	add	x26, x21, #0x30
     9b0:	and	w1, w19, #0x1
     9b4:	mov	x22, #0x0                   	// #0
     9b8:	tbnz	w19, #0, 9d8 <gconv@@Base+0x80>
     9bc:	ldr	x0, [x14, #104]
     9c0:	ldr	x22, [x25, #40]
     9c4:	cbz	x0, 9d8 <gconv@@Base+0x80>
     9c8:	adrp	x0, 12000 <gconv@@Base+0x116a8>
     9cc:	ldr	x0, [x0, #4040]
     9d0:	ldr	x0, [x0]
     9d4:	eor	x22, x22, x0
     9d8:	cbnz	w6, 13c0 <gconv@@Base+0xa68>
     9dc:	cmp	x13, #0x0
     9e0:	add	x0, sp, #0xd0
     9e4:	csel	x1, x21, x13, eq  // eq = none
     9e8:	cmp	x23, #0x0
     9ec:	ldr	x9, [x21, #32]
     9f0:	csel	x0, x0, xzr, ne  // ne = any
     9f4:	ldr	x10, [x1]
     9f8:	str	x0, [sp, #168]
     9fc:	ldr	x0, [x14, #96]
     a00:	cmp	w24, #0x0
     a04:	cset	w1, ne  // ne = any
     a08:	ldr	w15, [x9]
     a0c:	str	w1, [sp, #180]
     a10:	cmp	x0, #0x0
     a14:	str	xzr, [sp, #208]
     a18:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     a1c:	ldr	x8, [x11]
     a20:	ldr	x28, [x21, #8]
     a24:	b.ne	f84 <gconv@@Base+0x62c>  // b.any
     a28:	adrp	x1, 1000 <gconv@@Base+0x6a8>
     a2c:	add	x12, x1, #0xf60
     a30:	add	x1, x12, #0x240
     a34:	str	w15, [sp, #120]
     a38:	stp	x13, x14, [sp, #128]
     a3c:	mov	x27, x10
     a40:	stp	x25, x26, [sp, #144]
     a44:	mov	x25, x28
     a48:	mov	x26, x8
     a4c:	str	w24, [sp, #160]
     a50:	mov	x28, x21
     a54:	str	x1, [sp, #184]
     a58:	mov	x24, x9
     a5c:	cbz	x0, b64 <gconv@@Base+0x20c>
     a60:	stp	x26, x27, [sp, #224]
     a64:	mov	x19, x27
     a68:	ldr	w7, [x28, #16]
     a6c:	cmp	x20, x26
     a70:	b.eq	14ec <gconv@@Base+0xb94>  // b.none
     a74:	mov	x1, x26
     a78:	add	x5, sp, #0xe8
     a7c:	mov	w21, #0x4                   	// #4
     a80:	add	x3, x1, #0x4
     a84:	cmp	x20, x3
     a88:	b.cc	ce0 <gconv@@Base+0x388>  // b.lo, b.ul, b.last
     a8c:	cmp	x25, x19
     a90:	b.ls	dac <gconv@@Base+0x454>  // b.plast
     a94:	ldr	w2, [x1]
     a98:	mov	w4, #0x67                  	// #103
     a9c:	cmp	w2, #0xa0
     aa0:	sub	w6, w2, #0x18
     aa4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     aa8:	ccmp	w6, w4, #0x0, ne  // ne = any
     aac:	b.hi	c60 <gconv@@Base+0x308>  // b.pmore
     ab0:	add	x1, x19, #0x1
     ab4:	str	x1, [sp, #232]
     ab8:	strb	w2, [x19]
     abc:	ldp	x1, x19, [sp, #224]
     ac0:	add	x1, x1, #0x4
     ac4:	str	x1, [sp, #224]
     ac8:	cmp	x20, x1
     acc:	b.ne	a80 <gconv@@Base+0x128>  // b.any
     ad0:	ldr	x0, [sp, #128]
     ad4:	str	x1, [x11]
     ad8:	cbnz	x0, d30 <gconv@@Base+0x3d8>
     adc:	ldp	w1, w0, [x28, #16]
     ae0:	add	w0, w0, #0x1
     ae4:	str	w0, [x28, #20]
     ae8:	tbnz	w1, #0, ed0 <gconv@@Base+0x578>
     aec:	cmp	x27, x19
     af0:	b.cs	f7c <gconv@@Base+0x624>  // b.hs, b.nlast
     af4:	ldr	x1, [x28]
     af8:	mov	x0, x22
     afc:	stp	x11, x12, [sp, #104]
     b00:	str	x1, [sp, #216]
     b04:	bl	780 <_dl_mcount_wrapper_check@plt>
     b08:	ldp	x0, x1, [sp, #144]
     b0c:	mov	x5, x23
     b10:	ldr	w7, [sp, #160]
     b14:	mov	x3, x19
     b18:	add	x2, sp, #0xd8
     b1c:	mov	w6, #0x0                   	// #0
     b20:	mov	x4, #0x0                   	// #0
     b24:	blr	x22
     b28:	mov	w7, w0
     b2c:	cmp	w0, #0x4
     b30:	ldp	x11, x12, [sp, #104]
     b34:	b.eq	db8 <gconv@@Base+0x460>  // b.none
     b38:	ldr	x15, [sp, #216]
     b3c:	cmp	x15, x19
     b40:	b.ne	e30 <gconv@@Base+0x4d8>  // b.any
     b44:	cbnz	w7, 1494 <gconv@@Base+0xb3c>
     b48:	ldr	w0, [x24]
     b4c:	str	w0, [sp, #120]
     b50:	ldr	x0, [sp, #136]
     b54:	ldr	x26, [x11]
     b58:	ldr	x0, [x0, #96]
     b5c:	ldr	x27, [x28]
     b60:	cbnz	x0, a60 <gconv@@Base+0x108>
     b64:	cmp	x20, x26
     b68:	b.eq	1484 <gconv@@Base+0xb2c>  // b.none
     b6c:	add	x4, x27, #0x4
     b70:	cmp	x25, x4
     b74:	b.cc	1344 <gconv@@Base+0x9ec>  // b.lo, b.ul, b.last
     b78:	mov	x3, x26
     b7c:	ldr	w1, [sp, #120]
     b80:	mov	x19, x27
     b84:	add	x15, x12, #0x30
     b88:	ldrb	w0, [x3]
     b8c:	asr	w1, w1, #3
     b90:	cmp	w0, #0x17
     b94:	b.hi	c38 <gconv@@Base+0x2e0>  // b.pmore
     b98:	ldrh	w0, [x12, x0, lsl #1]
     b9c:	sub	w2, w0, #0x41
     ba0:	cbz	w1, c50 <gconv@@Base+0x2f8>
     ba4:	sub	w5, w0, #0x300
     ba8:	cmp	w5, #0x3f
     bac:	b.hi	bf0 <gconv@@Base+0x298>  // b.pmore
     bb0:	cmp	w0, #0x303
     bb4:	b.eq	f70 <gconv@@Base+0x618>  // b.none
     bb8:	b.hi	d70 <gconv@@Base+0x418>  // b.pmore
     bbc:	cmp	w0, #0x300
     bc0:	b.ne	cec <gconv@@Base+0x394>  // b.any
     bc4:	mov	w6, #0x0                   	// #0
     bc8:	mov	x7, #0x1b                  	// #27
     bcc:	cmp	w1, #0x40
     bd0:	b.ls	d00 <gconv@@Base+0x3a8>  // b.plast
     bd4:	adrp	x5, 1000 <gconv@@Base+0x6a8>
     bd8:	add	x5, x5, #0xf60
     bdc:	ubfiz	x8, x7, #2, #32
     be0:	add	x5, x5, #0x320
     be4:	ldrh	w5, [x5, x8]
     be8:	cmp	w5, w1
     bec:	b.cs	109c <gconv@@Base+0x744>  // b.hs, b.nlast
     bf0:	str	w1, [x19]
     bf4:	cmp	w2, #0x16f
     bf8:	str	wzr, [x24]
     bfc:	b.hi	d08 <gconv@@Base+0x3b0>  // b.pmore
     c00:	mov	x19, x4
     c04:	lsl	w0, w0, #3
     c08:	str	w0, [x24]
     c0c:	add	x3, x3, #0x1
     c10:	cmp	x20, x3
     c14:	b.eq	d20 <gconv@@Base+0x3c8>  // b.none
     c18:	add	x4, x19, #0x4
     c1c:	cmp	x25, x4
     c20:	b.cc	df4 <gconv@@Base+0x49c>  // b.lo, b.ul, b.last
     c24:	ldr	w1, [x24]
     c28:	ldrb	w0, [x3]
     c2c:	asr	w1, w1, #3
     c30:	cmp	w0, #0x17
     c34:	b.ls	b98 <gconv@@Base+0x240>  // b.plast
     c38:	cmp	w0, #0x7f
     c3c:	b.ls	d84 <gconv@@Base+0x42c>  // b.plast
     c40:	sub	w0, w0, #0x80
     c44:	ldrh	w0, [x15, x0, lsl #1]
     c48:	sub	w2, w0, #0x41
     c4c:	cbnz	w1, ba4 <gconv@@Base+0x24c>
     c50:	cmp	w2, #0x16f
     c54:	b.ls	c04 <gconv@@Base+0x2ac>  // b.plast
     c58:	str	w0, [x19], #4
     c5c:	b	c0c <gconv@@Base+0x2b4>
     c60:	cmp	w2, #0x10
     c64:	b.hi	c94 <gconv@@Base+0x33c>  // b.pmore
     c68:	sub	w2, w2, #0x1
     c6c:	add	x1, x12, #0x130
     c70:	ldrb	w1, [x1, w2, uxtw]
     c74:	cbz	w1, cc0 <gconv@@Base+0x368>
     c78:	add	x2, x19, #0x1
     c7c:	str	x2, [sp, #232]
     c80:	strb	w1, [x19]
     c84:	ldp	x1, x19, [sp, #224]
     c88:	add	x1, x1, #0x4
     c8c:	str	x1, [sp, #224]
     c90:	b	ac8 <gconv@@Base+0x170>
     c94:	sub	w1, w2, #0xc0
     c98:	cmp	w1, #0x69
     c9c:	b.hi	dc8 <gconv@@Base+0x470>  // b.pmore
     ca0:	add	x0, x12, #0x130
     ca4:	sub	w1, w2, #0xb0
     ca8:	ldrb	w1, [x0, w1, uxtw]
     cac:	cbnz	w1, c78 <gconv@@Base+0x320>
     cb0:	sub	w1, w2, #0xd1
     cb4:	mov	w0, #0x1dc2                	// #7618
     cb8:	cmp	w1, w0
     cbc:	b.ls	1520 <gconv@@Base+0xbc8>  // b.plast
     cc0:	ldr	x0, [sp, #168]
     cc4:	cbz	x0, 18a0 <gconv@@Base+0xf48>
     cc8:	ldr	w0, [x28, #16]
     ccc:	tbnz	w0, #3, 1370 <gconv@@Base+0xa18>
     cd0:	ldr	x1, [sp, #224]
     cd4:	tbnz	w7, #1, 1140 <gconv@@Base+0x7e8>
     cd8:	mov	w21, #0x6                   	// #6
     cdc:	b	ad0 <gconv@@Base+0x178>
     ce0:	mov	w21, #0x7                   	// #7
     ce4:	ldr	x1, [sp, #224]
     ce8:	b	ad0 <gconv@@Base+0x178>
     cec:	cmp	w0, #0x301
     cf0:	b.ne	1db0 <gconv@@Base+0x1458>  // b.any
     cf4:	cmp	w1, #0x40
     cf8:	b.hi	108c <gconv@@Base+0x734>  // b.pmore
     cfc:	nop
     d00:	str	w1, [x19]
     d04:	str	wzr, [x24]
     d08:	add	x19, x19, #0x8
     d0c:	cmp	x25, x19
     d10:	mov	x19, x4
     d14:	b.cc	c10 <gconv@@Base+0x2b8>  // b.lo, b.ul, b.last
     d18:	str	w0, [x19], #4
     d1c:	b	c0c <gconv@@Base+0x2b4>
     d20:	mov	w21, #0x4                   	// #4
     d24:	str	x3, [x11]
     d28:	ldr	x0, [sp, #128]
     d2c:	cbz	x0, adc <gconv@@Base+0x184>
     d30:	mov	w27, w21
     d34:	str	x19, [x0]
     d38:	adrp	x0, 12000 <gconv@@Base+0x116a8>
     d3c:	ldr	x0, [x0, #4056]
     d40:	ldr	x1, [sp, #248]
     d44:	ldr	x0, [x0]
     d48:	eor	x0, x1, x0
     d4c:	cbnz	x0, 1d74 <gconv@@Base+0x141c>
     d50:	mov	w0, w27
     d54:	ldp	x19, x20, [sp, #16]
     d58:	ldp	x21, x22, [sp, #32]
     d5c:	ldp	x23, x24, [sp, #48]
     d60:	ldp	x25, x26, [sp, #64]
     d64:	ldp	x27, x28, [sp, #80]
     d68:	ldp	x29, x30, [sp], #256
     d6c:	ret
     d70:	cmp	w0, #0x309
     d74:	b.ne	d98 <gconv@@Base+0x440>  // b.any
     d78:	mov	w6, #0x70                  	// #112
     d7c:	mov	x7, #0x87                  	// #135
     d80:	b	bcc <gconv@@Base+0x274>
     d84:	sub	w2, w0, #0x41
     d88:	cbnz	w1, bf0 <gconv@@Base+0x298>
     d8c:	cmp	w2, #0x16f
     d90:	b.hi	c58 <gconv@@Base+0x300>  // b.pmore
     d94:	b	c04 <gconv@@Base+0x2ac>
     d98:	cmp	w0, #0x323
     d9c:	b.ne	1db0 <gconv@@Base+0x1458>  // b.any
     da0:	mov	w6, #0x88                  	// #136
     da4:	mov	x7, #0xb9                  	// #185
     da8:	b	bcc <gconv@@Base+0x274>
     dac:	mov	w21, #0x5                   	// #5
     db0:	ldr	x1, [sp, #224]
     db4:	b	ad0 <gconv@@Base+0x178>
     db8:	mov	w7, w21
     dbc:	cmp	w21, #0x5
     dc0:	b.ne	b44 <gconv@@Base+0x1ec>  // b.any
     dc4:	b	b48 <gconv@@Base+0x1f0>
     dc8:	sub	w0, w2, #0x168
     dcc:	cmp	w0, #0x1
     dd0:	b.ls	f5c <gconv@@Base+0x604>  // b.plast
     dd4:	sub	w0, w2, #0x1a0
     dd8:	cmp	w0, #0x10
     ddc:	b.hi	e00 <gconv@@Base+0x4a8>  // b.pmore
     de0:	add	x0, x12, #0x130
     de4:	sub	w1, w2, #0x124
     de8:	ldrb	w1, [x0, w1, uxtw]
     dec:	cbnz	w1, c78 <gconv@@Base+0x320>
     df0:	b	cb0 <gconv@@Base+0x358>
     df4:	mov	w21, #0x5                   	// #5
     df8:	str	x3, [x11]
     dfc:	b	d28 <gconv@@Base+0x3d0>
     e00:	sub	w0, w2, #0x300
     e04:	cmp	w0, #0x23
     e08:	b.ls	112c <gconv@@Base+0x7d4>  // b.plast
     e0c:	mov	w8, #0xffffe160            	// #-7840
     e10:	add	w0, w2, w8
     e14:	cmp	w0, #0x59
     e18:	b.hi	14a4 <gconv@@Base+0xb4c>  // b.pmore
     e1c:	add	x0, x12, #0x130
     e20:	mov	w6, #0xffffe211            	// #-7663
     e24:	add	w2, w2, w6
     e28:	ldrb	w1, [x0, w2, uxtw]
     e2c:	b	c74 <gconv@@Base+0x31c>
     e30:	ldr	w0, [sp, #120]
     e34:	str	x26, [x11]
     e38:	str	w0, [x24]
     e3c:	ldr	x0, [sp, #136]
     e40:	ldr	x0, [x0, #96]
     e44:	cbz	x0, 1160 <gconv@@Base+0x808>
     e48:	stp	x26, x27, [sp, #224]
     e4c:	cmp	x20, x26
     e50:	ldr	w19, [x28, #16]
     e54:	b.eq	18d0 <gconv@@Base+0xf78>  // b.none
     e58:	mov	x0, x27
     e5c:	add	x21, sp, #0xe8
     e60:	mov	x5, #0x4                   	// #4
     e64:	add	x3, x26, #0x4
     e68:	cmp	x20, x3
     e6c:	b.cc	14bc <gconv@@Base+0xb64>  // b.lo, b.ul, b.last
     e70:	cmp	x15, x0
     e74:	b.ls	14f8 <gconv@@Base+0xba0>  // b.plast
     e78:	ldr	w2, [x26]
     e7c:	mov	w1, #0x67                  	// #103
     e80:	cmp	w2, #0xa0
     e84:	sub	w4, w2, #0x18
     e88:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     e8c:	ccmp	w4, w1, #0x0, ne  // ne = any
     e90:	b.hi	1310 <gconv@@Base+0x9b8>  // b.pmore
     e94:	add	x1, x0, #0x1
     e98:	str	x1, [sp, #232]
     e9c:	strb	w2, [x0]
     ea0:	ldp	x26, x0, [sp, #224]
     ea4:	add	x26, x26, #0x4
     ea8:	str	x26, [sp, #224]
     eac:	cmp	x20, x26
     eb0:	b.ne	e64 <gconv@@Base+0x50c>  // b.any
     eb4:	ldr	x15, [sp, #216]
     eb8:	str	x20, [x11]
     ebc:	cmp	x0, x15
     ec0:	b.ne	1464 <gconv@@Base+0xb0c>  // b.any
     ec4:	cmp	x5, #0x5
     ec8:	b.eq	1508 <gconv@@Base+0xbb0>  // b.none
     ecc:	b	14cc <gconv@@Base+0xb74>
     ed0:	ldr	x0, [x23]
     ed4:	mov	w27, w21
     ed8:	ldr	x1, [sp, #208]
     edc:	mov	x21, x28
     ee0:	ldr	x14, [sp, #136]
     ee4:	str	x19, [x28]
     ee8:	add	x0, x0, x1
     eec:	str	x0, [x23]
     ef0:	ldr	x0, [x14, #96]
     ef4:	cmp	x0, #0x0
     ef8:	ldr	w0, [sp, #180]
     efc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     f00:	ccmp	w27, #0x7, #0x0, ne  // ne = any
     f04:	b.ne	d38 <gconv@@Base+0x3e0>  // b.any
     f08:	ldr	x0, [x11]
     f0c:	sub	x2, x20, x0
     f10:	cmp	x2, #0x3
     f14:	b.gt	1d78 <gconv@@Base+0x1420>
     f18:	ldr	x4, [x21, #32]
     f1c:	cmp	x0, x20
     f20:	add	x0, x0, #0x1
     f24:	add	x1, x4, #0x4
     f28:	b.cs	1a28 <gconv@@Base+0x10d0>  // b.hs, b.nlast
     f2c:	str	x0, [x11]
     f30:	cmp	x20, x0
     f34:	add	x0, x0, #0x1
     f38:	ldurb	w3, [x0, #-2]
     f3c:	strb	w3, [x1], #1
     f40:	b.ne	f2c <gconv@@Base+0x5d4>  // b.any
     f44:	mov	w1, w2
     f48:	ldr	w0, [x4]
     f4c:	and	w0, w0, #0xfffffff8
     f50:	orr	w0, w0, w1
     f54:	str	w0, [x4]
     f58:	b	d38 <gconv@@Base+0x3e0>
     f5c:	add	x0, x12, #0x130
     f60:	sub	w1, w2, #0xee
     f64:	ldrb	w1, [x0, w1, uxtw]
     f68:	cbnz	w1, c78 <gconv@@Base+0x320>
     f6c:	b	cb0 <gconv@@Base+0x358>
     f70:	mov	w6, #0x4e                  	// #78
     f74:	mov	x7, #0x6f                  	// #111
     f78:	b	bcc <gconv@@Base+0x274>
     f7c:	mov	w7, w21
     f80:	b	b44 <gconv@@Base+0x1ec>
     f84:	ands	w1, w15, #0x7
     f88:	b.eq	a28 <gconv@@Base+0xd0>  // b.none
     f8c:	cbnz	x13, 1d54 <gconv@@Base+0x13fc>
     f90:	stp	x8, x10, [sp, #224]
     f94:	cmp	w1, #0x4
     f98:	b.hi	1d34 <gconv@@Base+0x13dc>  // b.pmore
     f9c:	mov	w12, w1
     fa0:	cbz	w1, 163c <gconv@@Base+0xce4>
     fa4:	add	x4, x9, #0x3
     fa8:	add	x7, sp, #0xf0
     fac:	mov	x0, #0x1                   	// #1
     fb0:	add	x1, x7, x0
     fb4:	ldrb	w3, [x4, x0]
     fb8:	cmp	x0, x12
     fbc:	add	x0, x0, #0x1
     fc0:	sturb	w3, [x1, #-1]
     fc4:	b.ne	fb0 <gconv@@Base+0x658>  // b.any
     fc8:	mov	x0, #0x4                   	// #4
     fcc:	sub	x0, x0, x12
     fd0:	add	x0, x8, x0
     fd4:	cmp	x20, x0
     fd8:	b.cc	1764 <gconv@@Base+0xe0c>  // b.lo, b.ul, b.last
     fdc:	add	x0, x8, #0x1
     fe0:	add	x7, sp, #0xf0
     fe4:	cmp	x10, x28
     fe8:	b.cs	1634 <gconv@@Base+0xcdc>  // b.hs, b.nlast
     fec:	add	x12, x12, #0x1
     ff0:	str	x0, [sp, #224]
     ff4:	add	x1, x7, x12
     ff8:	cmp	x12, #0x3
     ffc:	ldurb	w2, [x0, #-1]
    1000:	ccmp	x20, x0, #0x0, ls  // ls = plast
    1004:	add	x0, x0, #0x1
    1008:	sturb	w2, [x1, #-1]
    100c:	b.hi	fec <gconv@@Base+0x694>  // b.pmore
    1010:	ldr	w0, [sp, #240]
    1014:	mov	w1, #0x67                  	// #103
    1018:	str	x7, [sp, #224]
    101c:	cmp	w0, #0xa0
    1020:	sub	w2, w0, #0x18
    1024:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    1028:	ccmp	w2, w1, #0x0, ne  // ne = any
    102c:	b.hi	15f0 <gconv@@Base+0xc98>  // b.pmore
    1030:	add	x1, x10, #0x1
    1034:	str	x1, [sp, #232]
    1038:	strb	w0, [x10]
    103c:	ldr	x0, [sp, #224]
    1040:	add	x0, x0, #0x4
    1044:	str	x0, [sp, #224]
    1048:	cmp	x0, x7
    104c:	b.eq	16a8 <gconv@@Base+0xd50>  // b.none
    1050:	ldr	w1, [x9]
    1054:	sub	x0, x0, x7
    1058:	and	x2, x1, #0x7
    105c:	cmp	x0, x2
    1060:	b.le	1bf8 <gconv@@Base+0x12a0>
    1064:	ldr	x8, [x11]
    1068:	sub	x0, x0, x2
    106c:	and	w1, w1, #0xfffffff8
    1070:	add	x8, x8, x0
    1074:	str	x8, [x11]
    1078:	mov	w15, w1
    107c:	ldr	x0, [x14, #96]
    1080:	ldr	x10, [sp, #232]
    1084:	str	w1, [x9]
    1088:	b	a28 <gconv@@Base+0xd0>
    108c:	cmp	w1, #0x1b0
    1090:	b.hi	d00 <gconv@@Base+0x3a8>  // b.pmore
    1094:	mov	x7, #0x4d                  	// #77
    1098:	mov	w6, #0x1c                  	// #28
    109c:	add	w5, w6, w7
    10a0:	adrp	x8, 1000 <gconv@@Base+0x6a8>
    10a4:	add	x10, x8, #0xf60
    10a8:	lsr	w9, w5, #1
    10ac:	add	x10, x10, #0x320
    10b0:	lsr	w5, w5, #1
    10b4:	lsl	x8, x9, #2
    10b8:	ldrh	w8, [x10, x8]
    10bc:	cmp	w8, w1
    10c0:	b.eq	10f4 <gconv@@Base+0x79c>  // b.none
    10c4:	cmp	w8, w1
    10c8:	b.ls	1118 <gconv@@Base+0x7c0>  // b.plast
    10cc:	cmp	w5, w6
    10d0:	b.eq	bf0 <gconv@@Base+0x298>  // b.none
    10d4:	mov	w7, w5
    10d8:	add	w5, w7, w6
    10dc:	lsr	w9, w5, #1
    10e0:	lsr	w5, w5, #1
    10e4:	lsl	x8, x9, #2
    10e8:	ldrh	w8, [x10, x8]
    10ec:	cmp	w8, w1
    10f0:	b.ne	10c4 <gconv@@Base+0x76c>  // b.any
    10f4:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    10f8:	add	x0, x0, #0xf60
    10fc:	add	x9, x0, x9, lsl #2
    1100:	add	x3, x3, #0x1
    1104:	ldrh	w0, [x9, #802]
    1108:	str	w0, [x19]
    110c:	mov	x19, x4
    1110:	str	wzr, [x24]
    1114:	b	c10 <gconv@@Base+0x2b8>
    1118:	cmp	w5, w6
    111c:	b.eq	179c <gconv@@Base+0xe44>  // b.none
    1120:	mov	w6, w5
    1124:	add	w5, w7, w6
    1128:	b	10dc <gconv@@Base+0x784>
    112c:	add	x0, x12, #0x130
    1130:	sub	w1, w2, #0x273
    1134:	ldrb	w1, [x0, w1, uxtw]
    1138:	cbnz	w1, c78 <gconv@@Base+0x320>
    113c:	b	cb0 <gconv@@Base+0x358>
    1140:	ldr	x2, [sp, #168]
    1144:	add	x1, x1, #0x4
    1148:	mov	w21, #0x6                   	// #6
    114c:	str	x1, [sp, #224]
    1150:	ldr	x0, [x2]
    1154:	add	x0, x0, #0x1
    1158:	str	x0, [x2]
    115c:	b	ac8 <gconv@@Base+0x170>
    1160:	cmp	x20, x26
    1164:	b.eq	18d0 <gconv@@Base+0xf78>  // b.none
    1168:	add	x3, x27, #0x4
    116c:	mov	x0, x27
    1170:	cmp	x15, x3
    1174:	add	x16, x12, #0x30
    1178:	b.cc	1944 <gconv@@Base+0xfec>  // b.lo, b.ul, b.last
    117c:	ldr	w2, [sp, #120]
    1180:	ldrb	w1, [x26]
    1184:	asr	w2, w2, #3
    1188:	cmp	w1, #0x17
    118c:	b.hi	12e0 <gconv@@Base+0x988>  // b.pmore
    1190:	ldrh	w1, [x12, x1, lsl #1]
    1194:	sub	w4, w1, #0x41
    1198:	cbz	w2, 12fc <gconv@@Base+0x9a4>
    119c:	sub	w5, w1, #0x300
    11a0:	cmp	w5, #0x3f
    11a4:	b.hi	1358 <gconv@@Base+0xa00>  // b.pmore
    11a8:	cmp	w1, #0x303
    11ac:	b.eq	16e4 <gconv@@Base+0xd8c>  // b.none
    11b0:	b.ls	126c <gconv@@Base+0x914>  // b.plast
    11b4:	cmp	w1, #0x309
    11b8:	b.eq	159c <gconv@@Base+0xc44>  // b.none
    11bc:	cmp	w1, #0x323
    11c0:	b.ne	1db0 <gconv@@Base+0x1458>  // b.any
    11c4:	mov	x5, #0xb9                  	// #185
    11c8:	mov	w6, #0x88                  	// #136
    11cc:	cmp	w2, #0x40
    11d0:	b.ls	1298 <gconv@@Base+0x940>  // b.plast
    11d4:	adrp	x8, 1000 <gconv@@Base+0x6a8>
    11d8:	add	x8, x8, #0xf60
    11dc:	ubfiz	x9, x5, #2, #32
    11e0:	add	x8, x8, #0x320
    11e4:	ldrh	w8, [x8, x9]
    11e8:	cmp	w2, w8
    11ec:	b.hi	1358 <gconv@@Base+0xa00>  // b.pmore
    11f0:	add	w8, w5, w6
    11f4:	adrp	x9, 1000 <gconv@@Base+0x6a8>
    11f8:	add	x13, x9, #0xf60
    11fc:	lsr	w9, w8, #1
    1200:	add	x13, x13, #0x320
    1204:	lsr	w8, w8, #1
    1208:	lsl	x10, x9, #2
    120c:	ldrh	w10, [x13, x10]
    1210:	cmp	w2, w10
    1214:	b.eq	1248 <gconv@@Base+0x8f0>  // b.none
    1218:	cmp	w10, w2
    121c:	b.ls	16b8 <gconv@@Base+0xd60>  // b.plast
    1220:	cmp	w6, w8
    1224:	b.eq	1358 <gconv@@Base+0xa00>  // b.none
    1228:	mov	w5, w8
    122c:	add	w8, w6, w5
    1230:	lsr	w9, w8, #1
    1234:	lsr	w8, w8, #1
    1238:	lsl	x10, x9, #2
    123c:	ldrh	w10, [x13, x10]
    1240:	cmp	w10, w2
    1244:	b.ne	1218 <gconv@@Base+0x8c0>  // b.any
    1248:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    124c:	add	x1, x1, #0xf60
    1250:	add	x9, x1, x9, lsl #2
    1254:	add	x26, x26, #0x1
    1258:	ldrh	w1, [x9, #802]
    125c:	str	w1, [x0]
    1260:	mov	x0, x3
    1264:	str	wzr, [x24]
    1268:	b	12b8 <gconv@@Base+0x960>
    126c:	cmp	w1, #0x300
    1270:	b.eq	1580 <gconv@@Base+0xc28>  // b.none
    1274:	cmp	w1, #0x301
    1278:	b.ne	1db0 <gconv@@Base+0x1458>  // b.any
    127c:	cmp	w2, #0x40
    1280:	b.ls	1298 <gconv@@Base+0x940>  // b.plast
    1284:	cmp	w2, #0x1b0
    1288:	b.hi	1298 <gconv@@Base+0x940>  // b.pmore
    128c:	mov	w6, #0x1c                  	// #28
    1290:	mov	x5, #0x4d                  	// #77
    1294:	b	11f0 <gconv@@Base+0x898>
    1298:	str	w2, [x0]
    129c:	str	wzr, [x24]
    12a0:	add	x0, x0, #0x8
    12a4:	cmp	x15, x0
    12a8:	mov	x0, x3
    12ac:	b.cc	12b8 <gconv@@Base+0x960>  // b.lo, b.ul, b.last
    12b0:	str	w1, [x0], #4
    12b4:	add	x26, x26, #0x1
    12b8:	cmp	x20, x26
    12bc:	b.eq	16c8 <gconv@@Base+0xd70>  // b.none
    12c0:	add	x3, x0, #0x4
    12c4:	cmp	x15, x3
    12c8:	b.cc	1628 <gconv@@Base+0xcd0>  // b.lo, b.ul, b.last
    12cc:	ldr	w2, [x24]
    12d0:	ldrb	w1, [x26]
    12d4:	asr	w2, w2, #3
    12d8:	cmp	w1, #0x17
    12dc:	b.ls	1190 <gconv@@Base+0x838>  // b.plast
    12e0:	cmp	w1, #0x7f
    12e4:	b.ls	12f4 <gconv@@Base+0x99c>  // b.plast
    12e8:	sub	w1, w1, #0x80
    12ec:	ldrh	w1, [x16, x1, lsl #1]
    12f0:	b	1194 <gconv@@Base+0x83c>
    12f4:	sub	w4, w1, #0x41
    12f8:	cbnz	w2, 1358 <gconv@@Base+0xa00>
    12fc:	cmp	w4, #0x16f
    1300:	b.hi	12b0 <gconv@@Base+0x958>  // b.pmore
    1304:	lsl	w1, w1, #3
    1308:	str	w1, [x24]
    130c:	b	12b4 <gconv@@Base+0x95c>
    1310:	cmp	w2, #0x10
    1314:	b.hi	13f8 <gconv@@Base+0xaa0>  // b.pmore
    1318:	sub	w2, w2, #0x1
    131c:	add	x1, x12, #0x130
    1320:	ldrb	w1, [x1, w2, uxtw]
    1324:	cbz	w1, 143c <gconv@@Base+0xae4>
    1328:	add	x2, x0, #0x1
    132c:	str	x2, [sp, #232]
    1330:	strb	w1, [x0]
    1334:	ldp	x26, x0, [sp, #224]
    1338:	add	x26, x26, #0x4
    133c:	str	x26, [sp, #224]
    1340:	b	eac <gconv@@Base+0x554>
    1344:	mov	x3, x26
    1348:	mov	x19, x27
    134c:	mov	w21, #0x5                   	// #5
    1350:	str	x3, [x11]
    1354:	b	d28 <gconv@@Base+0x3d0>
    1358:	str	w2, [x0]
    135c:	cmp	w4, #0x16f
    1360:	str	wzr, [x24]
    1364:	b.hi	12a0 <gconv@@Base+0x948>  // b.pmore
    1368:	mov	x0, x3
    136c:	b	1304 <gconv@@Base+0x9ac>
    1370:	ldr	x2, [x11]
    1374:	mov	x4, x20
    1378:	ldr	x0, [sp, #136]
    137c:	add	x3, sp, #0xe0
    1380:	ldr	x6, [sp, #168]
    1384:	mov	x1, x28
    1388:	stp	x5, x11, [sp, #104]
    138c:	str	w7, [sp, #192]
    1390:	str	x12, [sp, #200]
    1394:	bl	730 <__gconv_transliterate@plt>
    1398:	ldr	w7, [sp, #192]
    139c:	mov	w21, w0
    13a0:	cmp	w0, #0x6
    13a4:	ldp	x5, x11, [sp, #104]
    13a8:	ldr	x12, [sp, #200]
    13ac:	b.eq	1620 <gconv@@Base+0xcc8>  // b.none
    13b0:	cmp	w0, #0x5
    13b4:	ldp	x1, x19, [sp, #224]
    13b8:	b.ne	ac8 <gconv@@Base+0x170>  // b.any
    13bc:	b	ad0 <gconv@@Base+0x178>
    13c0:	cbnz	x13, 1ca4 <gconv@@Base+0x134c>
    13c4:	cmp	w6, #0x1
    13c8:	ldr	x19, [x21, #32]
    13cc:	b.ne	15a8 <gconv@@Base+0xc50>  // b.any
    13d0:	ldr	w20, [x19]
    13d4:	ldr	x2, [x21]
    13d8:	cbz	w20, 13e8 <gconv@@Base+0xa90>
    13dc:	ldr	x0, [x14, #96]
    13e0:	cbz	x0, 180c <gconv@@Base+0xeb4>
    13e4:	str	wzr, [x19]
    13e8:	cbz	w1, 1880 <gconv@@Base+0xf28>
    13ec:	mov	w27, #0x0                   	// #0
    13f0:	str	x2, [x21]
    13f4:	b	d38 <gconv@@Base+0x3e0>
    13f8:	sub	w1, w2, #0xc0
    13fc:	cmp	w1, #0x69
    1400:	b.ls	158c <gconv@@Base+0xc34>  // b.plast
    1404:	sub	w1, w2, #0x168
    1408:	cmp	w1, #0x1
    140c:	b.ls	16d4 <gconv@@Base+0xd7c>  // b.plast
    1410:	sub	w1, w2, #0x1a0
    1414:	cmp	w1, #0x10
    1418:	b.hi	17c0 <gconv@@Base+0xe68>  // b.pmore
    141c:	add	x1, x12, #0x130
    1420:	sub	w3, w2, #0x124
    1424:	ldrb	w1, [x1, w3, uxtw]
    1428:	cbnz	w1, 1328 <gconv@@Base+0x9d0>
    142c:	sub	w3, w2, #0xd1
    1430:	mov	w1, #0x1dc2                	// #7618
    1434:	cmp	w3, w1
    1438:	b.ls	19c8 <gconv@@Base+0x1070>  // b.plast
    143c:	ldr	x1, [sp, #168]
    1440:	cbz	x1, 14bc <gconv@@Base+0xb64>
    1444:	ldr	w1, [x28, #16]
    1448:	tbnz	w1, #3, 18e0 <gconv@@Base+0xf88>
    144c:	ldr	x8, [sp, #224]
    1450:	tbnz	w19, #1, 196c <gconv@@Base+0x1014>
    1454:	ldr	x1, [sp, #216]
    1458:	str	x8, [x11]
    145c:	cmp	x1, x0
    1460:	b.eq	14cc <gconv@@Base+0xb74>  // b.none
    1464:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1468:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    146c:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1470:	add	x3, x3, #0xf58
    1474:	add	x1, x1, #0xdd8
    1478:	add	x0, x0, #0xef0
    147c:	mov	w2, #0x2ea                 	// #746
    1480:	bl	790 <__assert_fail@plt>
    1484:	mov	x3, x20
    1488:	mov	x19, x27
    148c:	mov	w21, #0x4                   	// #4
    1490:	b	d24 <gconv@@Base+0x3cc>
    1494:	mov	x21, x28
    1498:	mov	w27, w7
    149c:	ldr	x14, [sp, #136]
    14a0:	b	ef0 <gconv@@Base+0x598>
    14a4:	mov	w0, #0x1c00                	// #7168
    14a8:	cmp	w0, w2, lsr #7
    14ac:	b.ne	cb0 <gconv@@Base+0x358>  // b.any
    14b0:	mov	x1, x3
    14b4:	str	x3, [sp, #224]
    14b8:	b	ac8 <gconv@@Base+0x170>
    14bc:	ldp	x1, x2, [sp, #216]
    14c0:	str	x2, [x11]
    14c4:	cmp	x1, x0
    14c8:	b.ne	1464 <gconv@@Base+0xb0c>  // b.any
    14cc:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    14d0:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    14d4:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    14d8:	add	x3, x3, #0xf58
    14dc:	add	x1, x1, #0xdd8
    14e0:	add	x0, x0, #0xf08
    14e4:	mov	w2, #0x2eb                 	// #747
    14e8:	bl	790 <__assert_fail@plt>
    14ec:	mov	x1, x20
    14f0:	mov	w21, #0x4                   	// #4
    14f4:	b	ad0 <gconv@@Base+0x178>
    14f8:	ldp	x1, x2, [sp, #216]
    14fc:	str	x2, [x11]
    1500:	cmp	x1, x0
    1504:	b.ne	1464 <gconv@@Base+0xb0c>  // b.any
    1508:	cmp	x0, x27
    150c:	b.ne	b44 <gconv@@Base+0x1ec>  // b.any
    1510:	ldr	w0, [x28, #20]
    1514:	sub	w0, w0, #0x1
    1518:	str	w0, [x28, #20]
    151c:	b	b44 <gconv@@Base+0x1ec>
    1520:	mov	w0, #0x1e33                	// #7731
    1524:	mov	w1, #0x1b                  	// #27
    1528:	cmp	w2, w0
    152c:	b.eq	1660 <gconv@@Base+0xd08>  // b.none
    1530:	mov	w4, #0x37                  	// #55
    1534:	mov	w3, #0x0                   	// #0
    1538:	ldr	x6, [sp, #184]
    153c:	b	1568 <gconv@@Base+0xc10>
    1540:	cmp	w1, w3
    1544:	b.eq	cc0 <gconv@@Base+0x368>  // b.none
    1548:	mov	w4, w1
    154c:	add	w1, w3, w4
    1550:	lsr	w0, w1, #1
    1554:	lsr	w1, w1, #1
    1558:	lsl	x0, x0, #2
    155c:	ldrh	w0, [x6, x0]
    1560:	cmp	w2, w0
    1564:	b.eq	1660 <gconv@@Base+0xd08>  // b.none
    1568:	cmp	w2, w0
    156c:	b.cc	1540 <gconv@@Base+0xbe8>  // b.lo, b.ul, b.last
    1570:	cmp	w1, w3
    1574:	b.eq	1648 <gconv@@Base+0xcf0>  // b.none
    1578:	mov	w3, w1
    157c:	b	154c <gconv@@Base+0xbf4>
    1580:	mov	w6, #0x0                   	// #0
    1584:	mov	x5, #0x1b                  	// #27
    1588:	b	11cc <gconv@@Base+0x874>
    158c:	add	x1, x12, #0x130
    1590:	sub	w3, w2, #0xb0
    1594:	ldrb	w1, [x1, w3, uxtw]
    1598:	b	1428 <gconv@@Base+0xad0>
    159c:	mov	x5, #0x87                  	// #135
    15a0:	mov	w6, #0x70                  	// #112
    15a4:	b	11cc <gconv@@Base+0x874>
    15a8:	str	xzr, [x19]
    15ac:	mov	w27, #0x0                   	// #0
    15b0:	ldr	w0, [x21, #16]
    15b4:	tbnz	w0, #0, d38 <gconv@@Base+0x3e0>
    15b8:	mov	x0, x22
    15bc:	str	w6, [sp, #104]
    15c0:	bl	780 <_dl_mcount_wrapper_check@plt>
    15c4:	ldr	w6, [sp, #104]
    15c8:	mov	w7, w24
    15cc:	mov	x5, x23
    15d0:	mov	x1, x26
    15d4:	mov	x0, x25
    15d8:	mov	x4, #0x0                   	// #0
    15dc:	mov	x3, #0x0                   	// #0
    15e0:	mov	x2, #0x0                   	// #0
    15e4:	blr	x22
    15e8:	mov	w27, w0
    15ec:	b	d38 <gconv@@Base+0x3e0>
    15f0:	cmp	w0, #0x10
    15f4:	b.hi	16f0 <gconv@@Base+0xd98>  // b.pmore
    15f8:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    15fc:	add	x1, x1, #0xf60
    1600:	sub	w0, w0, #0x1
    1604:	add	x1, x1, #0x130
    1608:	ldrb	w1, [x1, w0, uxtw]
    160c:	cbz	w1, 1724 <gconv@@Base+0xdcc>
    1610:	add	x0, x10, #0x1
    1614:	str	x0, [sp, #232]
    1618:	strb	w1, [x10]
    161c:	b	103c <gconv@@Base+0x6e4>
    1620:	ldr	x19, [sp, #232]
    1624:	b	cd0 <gconv@@Base+0x378>
    1628:	mov	x5, #0x5                   	// #5
    162c:	str	x26, [x11]
    1630:	b	ebc <gconv@@Base+0x564>
    1634:	mov	w27, #0x5                   	// #5
    1638:	b	d38 <gconv@@Base+0x3e0>
    163c:	mov	x0, #0x4                   	// #4
    1640:	mov	x12, #0x0                   	// #0
    1644:	b	fd0 <gconv@@Base+0x678>
    1648:	ldr	x1, [sp, #184]
    164c:	ubfiz	x0, x4, #2, #32
    1650:	ldrh	w0, [x1, x0]
    1654:	cmp	w2, w0
    1658:	b.ne	cc0 <gconv@@Base+0x368>  // b.any
    165c:	mov	w1, w4
    1660:	add	x0, x19, #0x1
    1664:	cmp	x25, x0
    1668:	b.ls	dac <gconv@@Base+0x454>  // b.plast
    166c:	ldr	x2, [sp, #184]
    1670:	str	x0, [sp, #232]
    1674:	add	x1, x2, w1, uxtw #2
    1678:	ldrb	w0, [x1, #2]
    167c:	strb	w0, [x19]
    1680:	ldrb	w1, [x1, #3]
    1684:	ldr	x0, [sp, #232]
    1688:	add	x2, x0, #0x1
    168c:	str	x2, [sp, #232]
    1690:	strb	w1, [x0]
    1694:	ldp	x2, x19, [sp, #224]
    1698:	add	x1, x2, #0x4
    169c:	str	x1, [sp, #224]
    16a0:	b	ac8 <gconv@@Base+0x170>
    16a4:	cbnz	w27, d38 <gconv@@Base+0x3e0>
    16a8:	ldr	w15, [x9]
    16ac:	ldr	x8, [x11]
    16b0:	ldr	x0, [x14, #96]
    16b4:	b	a28 <gconv@@Base+0xd0>
    16b8:	cmp	w6, w8
    16bc:	b.eq	1ac8 <gconv@@Base+0x1170>  // b.none
    16c0:	mov	w6, w8
    16c4:	b	122c <gconv@@Base+0x8d4>
    16c8:	mov	x5, #0x4                   	// #4
    16cc:	str	x26, [x11]
    16d0:	b	ebc <gconv@@Base+0x564>
    16d4:	add	x1, x12, #0x130
    16d8:	sub	w3, w2, #0xee
    16dc:	ldrb	w1, [x1, w3, uxtw]
    16e0:	b	1428 <gconv@@Base+0xad0>
    16e4:	mov	x5, #0x6f                  	// #111
    16e8:	mov	w6, #0x4e                  	// #78
    16ec:	b	11cc <gconv@@Base+0x874>
    16f0:	sub	w1, w0, #0xc0
    16f4:	cmp	w1, #0x69
    16f8:	b.hi	17dc <gconv@@Base+0xe84>  // b.pmore
    16fc:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1700:	add	x1, x1, #0xf60
    1704:	add	x1, x1, #0x130
    1708:	sub	w2, w0, #0xb0
    170c:	ldrb	w1, [x1, w2, uxtw]
    1710:	cbnz	w1, 1610 <gconv@@Base+0xcb8>
    1714:	sub	w2, w0, #0xd1
    1718:	mov	w1, #0x1dc2                	// #7618
    171c:	cmp	w2, w1
    1720:	b.ls	1a60 <gconv@@Base+0x1108>  // b.plast
    1724:	ldr	x0, [sp, #168]
    1728:	cbz	x0, 175c <gconv@@Base+0xe04>
    172c:	tbnz	w19, #3, 1aec <gconv@@Base+0x1194>
    1730:	tbz	w19, #1, 175c <gconv@@Base+0xe04>
    1734:	mov	x0, x7
    1738:	ldr	x2, [sp, #168]
    173c:	add	x0, x0, #0x4
    1740:	str	x0, [sp, #224]
    1744:	ldr	x1, [x2]
    1748:	add	x0, x1, #0x1
    174c:	str	x0, [x2]
    1750:	ldr	x0, [sp, #224]
    1754:	cmp	x0, x7
    1758:	b.ne	1050 <gconv@@Base+0x6f8>  // b.any
    175c:	mov	w27, #0x6                   	// #6
    1760:	b	d38 <gconv@@Base+0x3e0>
    1764:	str	x20, [x11]
    1768:	cmp	x8, x20
    176c:	b.cs	1794 <gconv@@Base+0xe3c>  // b.hs, b.nlast
    1770:	add	x8, x8, #0x1
    1774:	add	x9, x9, x12
    1778:	str	x8, [sp, #224]
    177c:	cmp	x8, x20
    1780:	add	x9, x9, #0x1
    1784:	add	x8, x8, #0x1
    1788:	ldurb	w0, [x8, #-2]
    178c:	strb	w0, [x9, #3]
    1790:	b.ne	1778 <gconv@@Base+0xe20>  // b.any
    1794:	mov	w27, #0x7                   	// #7
    1798:	b	d38 <gconv@@Base+0x3e0>
    179c:	adrp	x5, 1000 <gconv@@Base+0x6a8>
    17a0:	add	x5, x5, #0xf60
    17a4:	ubfiz	x6, x7, #2, #32
    17a8:	add	x5, x5, #0x320
    17ac:	ldrh	w5, [x5, x6]
    17b0:	cmp	w5, w1
    17b4:	b.ne	bf0 <gconv@@Base+0x298>  // b.any
    17b8:	mov	x9, x7
    17bc:	b	10f4 <gconv@@Base+0x79c>
    17c0:	sub	w1, w2, #0x300
    17c4:	cmp	w1, #0x23
    17c8:	b.hi	18ac <gconv@@Base+0xf54>  // b.pmore
    17cc:	add	x1, x12, #0x130
    17d0:	sub	w3, w2, #0x273
    17d4:	ldrb	w1, [x1, w3, uxtw]
    17d8:	b	1428 <gconv@@Base+0xad0>
    17dc:	sub	w1, w0, #0x168
    17e0:	cmp	w1, #0x1
    17e4:	b.ls	1954 <gconv@@Base+0xffc>  // b.plast
    17e8:	sub	w1, w0, #0x1a0
    17ec:	cmp	w1, #0x10
    17f0:	b.hi	19a4 <gconv@@Base+0x104c>  // b.pmore
    17f4:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    17f8:	add	x1, x1, #0xf60
    17fc:	add	x1, x1, #0x130
    1800:	sub	w2, w0, #0x124
    1804:	ldrb	w1, [x1, w2, uxtw]
    1808:	b	1710 <gconv@@Base+0xdb8>
    180c:	ldr	x0, [x21, #8]
    1810:	add	x28, x2, #0x4
    1814:	cmp	x28, x0
    1818:	b.hi	1634 <gconv@@Base+0xcdc>  // b.pmore
    181c:	asr	w0, w20, #3
    1820:	str	w0, [x2]
    1824:	ldr	w0, [x21, #16]
    1828:	str	wzr, [x19]
    182c:	tbnz	w0, #0, 1cc4 <gconv@@Base+0x136c>
    1830:	mov	x0, x22
    1834:	str	x2, [sp, #232]
    1838:	bl	780 <_dl_mcount_wrapper_check@plt>
    183c:	mov	w7, w24
    1840:	mov	x5, x23
    1844:	mov	x3, x28
    1848:	add	x2, sp, #0xe8
    184c:	mov	x1, x26
    1850:	mov	x0, x25
    1854:	mov	w6, #0x0                   	// #0
    1858:	mov	x4, #0x0                   	// #0
    185c:	blr	x22
    1860:	mov	w27, w0
    1864:	cmp	w0, #0x4
    1868:	b.eq	1880 <gconv@@Base+0xf28>  // b.none
    186c:	ldr	x0, [sp, #232]
    1870:	cmp	x28, x0
    1874:	b.eq	187c <gconv@@Base+0xf24>  // b.none
    1878:	str	w20, [x19]
    187c:	cbnz	w27, d38 <gconv@@Base+0x3e0>
    1880:	mov	x0, x22
    1884:	bl	780 <_dl_mcount_wrapper_check@plt>
    1888:	mov	w7, w24
    188c:	mov	x5, x23
    1890:	mov	x1, x26
    1894:	mov	x0, x25
    1898:	mov	w6, #0x1                   	// #1
    189c:	b	15d8 <gconv@@Base+0xc80>
    18a0:	mov	w21, #0x6                   	// #6
    18a4:	ldr	x1, [sp, #224]
    18a8:	b	ad0 <gconv@@Base+0x178>
    18ac:	mov	w4, #0xffffe160            	// #-7840
    18b0:	add	w1, w2, w4
    18b4:	cmp	w1, #0x59
    18b8:	b.hi	198c <gconv@@Base+0x1034>  // b.pmore
    18bc:	mov	w1, #0xffffe211            	// #-7663
    18c0:	add	w2, w2, w1
    18c4:	add	x1, x12, #0x130
    18c8:	ldrb	w1, [x1, w2, uxtw]
    18cc:	b	1324 <gconv@@Base+0x9cc>
    18d0:	str	x20, [x11]
    18d4:	cmp	x15, x27
    18d8:	b.eq	14cc <gconv@@Base+0xb74>  // b.none
    18dc:	b	1464 <gconv@@Base+0xb0c>
    18e0:	ldr	x2, [x11]
    18e4:	mov	x5, x21
    18e8:	ldr	x0, [sp, #136]
    18ec:	mov	x4, x20
    18f0:	ldr	x6, [sp, #168]
    18f4:	add	x3, sp, #0xe0
    18f8:	mov	x1, x28
    18fc:	stp	x11, x15, [sp, #104]
    1900:	str	w7, [sp, #120]
    1904:	str	x12, [sp, #192]
    1908:	bl	730 <__gconv_transliterate@plt>
    190c:	sxtw	x5, w0
    1910:	ldr	w7, [sp, #120]
    1914:	cmp	w5, #0x6
    1918:	ldp	x11, x15, [sp, #104]
    191c:	ldr	x12, [sp, #192]
    1920:	b.eq	1bc4 <gconv@@Base+0x126c>  // b.none
    1924:	cmp	w5, #0x5
    1928:	ldp	x26, x0, [sp, #224]
    192c:	b.ne	eac <gconv@@Base+0x554>  // b.any
    1930:	ldr	x1, [sp, #216]
    1934:	str	x26, [x11]
    1938:	cmp	x0, x1
    193c:	b.eq	1508 <gconv@@Base+0xbb0>  // b.none
    1940:	b	1464 <gconv@@Base+0xb0c>
    1944:	str	x26, [x11]
    1948:	cmp	x15, x27
    194c:	b.eq	1510 <gconv@@Base+0xbb8>  // b.none
    1950:	b	1464 <gconv@@Base+0xb0c>
    1954:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1958:	add	x1, x1, #0xf60
    195c:	add	x1, x1, #0x130
    1960:	sub	w2, w0, #0xee
    1964:	ldrb	w1, [x1, w2, uxtw]
    1968:	b	1710 <gconv@@Base+0xdb8>
    196c:	ldr	x2, [sp, #168]
    1970:	add	x26, x8, #0x4
    1974:	mov	x5, #0x6                   	// #6
    1978:	str	x26, [sp, #224]
    197c:	ldr	x1, [x2]
    1980:	add	x1, x1, #0x1
    1984:	str	x1, [x2]
    1988:	b	eac <gconv@@Base+0x554>
    198c:	mov	w1, #0x1c00                	// #7168
    1990:	cmp	w1, w2, lsr #7
    1994:	b.ne	142c <gconv@@Base+0xad4>  // b.any
    1998:	mov	x26, x3
    199c:	str	x3, [sp, #224]
    19a0:	b	eac <gconv@@Base+0x554>
    19a4:	sub	w1, w0, #0x300
    19a8:	cmp	w1, #0x23
    19ac:	b.hi	1bcc <gconv@@Base+0x1274>  // b.pmore
    19b0:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    19b4:	add	x1, x1, #0xf60
    19b8:	add	x1, x1, #0x130
    19bc:	sub	w2, w0, #0x273
    19c0:	ldrb	w1, [x1, w2, uxtw]
    19c4:	b	1710 <gconv@@Base+0xdb8>
    19c8:	mov	w4, #0x1e33                	// #7731
    19cc:	cmp	w2, w4
    19d0:	b.eq	1c9c <gconv@@Base+0x1344>  // b.none
    19d4:	mov	w6, #0x0                   	// #0
    19d8:	mov	w1, #0x1b                  	// #27
    19dc:	mov	w3, #0x37                  	// #55
    19e0:	ldr	x8, [sp, #184]
    19e4:	b	1a10 <gconv@@Base+0x10b8>
    19e8:	cmp	w1, w6
    19ec:	b.eq	143c <gconv@@Base+0xae4>  // b.none
    19f0:	mov	w3, w1
    19f4:	add	w1, w3, w6
    19f8:	lsr	w4, w1, #1
    19fc:	lsr	w1, w1, #1
    1a00:	lsl	x4, x4, #2
    1a04:	ldrh	w4, [x8, x4]
    1a08:	cmp	w2, w4
    1a0c:	b.eq	1a30 <gconv@@Base+0x10d8>  // b.none
    1a10:	cmp	w2, w4
    1a14:	b.cc	19e8 <gconv@@Base+0x1090>  // b.lo, b.ul, b.last
    1a18:	cmp	w1, w6
    1a1c:	b.eq	1d98 <gconv@@Base+0x1440>  // b.none
    1a20:	mov	w6, w1
    1a24:	b	19f4 <gconv@@Base+0x109c>
    1a28:	mov	w1, #0x0                   	// #0
    1a2c:	b	f48 <gconv@@Base+0x5f0>
    1a30:	mov	w3, w1
    1a34:	add	x1, x0, #0x1
    1a38:	cmp	x15, x1
    1a3c:	b.ls	14f8 <gconv@@Base+0xba0>  // b.plast
    1a40:	ldr	x2, [sp, #184]
    1a44:	str	x1, [sp, #232]
    1a48:	add	x3, x2, w3, uxtw #2
    1a4c:	ldrb	w1, [x3, #2]
    1a50:	strb	w1, [x0]
    1a54:	ldrb	w1, [x3, #3]
    1a58:	ldr	x0, [sp, #232]
    1a5c:	b	1328 <gconv@@Base+0x9d0>
    1a60:	mov	w2, #0x1e33                	// #7731
    1a64:	cmp	w0, w2
    1a68:	b.eq	1d2c <gconv@@Base+0x13d4>  // b.none
    1a6c:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1a70:	add	x3, x3, #0xf60
    1a74:	add	x3, x3, #0x240
    1a78:	mov	w1, #0x1b                  	// #27
    1a7c:	mov	w4, #0x37                  	// #55
    1a80:	mov	w5, #0x0                   	// #0
    1a84:	b	1ab0 <gconv@@Base+0x1158>
    1a88:	cmp	w1, w5
    1a8c:	b.eq	1724 <gconv@@Base+0xdcc>  // b.none
    1a90:	mov	w4, w1
    1a94:	add	w1, w5, w4
    1a98:	lsr	w2, w1, #1
    1a9c:	lsr	w1, w1, #1
    1aa0:	lsl	x2, x2, #2
    1aa4:	ldrh	w2, [x3, x2]
    1aa8:	cmp	w0, w2
    1aac:	b.eq	1cec <gconv@@Base+0x1394>  // b.none
    1ab0:	cmp	w2, w0
    1ab4:	b.hi	1a88 <gconv@@Base+0x1130>  // b.pmore
    1ab8:	cmp	w1, w5
    1abc:	b.eq	1ccc <gconv@@Base+0x1374>  // b.none
    1ac0:	mov	w5, w1
    1ac4:	b	1a94 <gconv@@Base+0x113c>
    1ac8:	adrp	x6, 1000 <gconv@@Base+0x6a8>
    1acc:	add	x6, x6, #0xf60
    1ad0:	ubfiz	x8, x5, #2, #32
    1ad4:	add	x6, x6, #0x320
    1ad8:	ldrh	w6, [x6, x8]
    1adc:	cmp	w6, w2
    1ae0:	b.ne	1358 <gconv@@Base+0xa00>  // b.any
    1ae4:	mov	x9, x5
    1ae8:	b	1248 <gconv@@Base+0x8f0>
    1aec:	add	x4, x7, x12
    1af0:	mov	x6, x0
    1af4:	mov	x2, x8
    1af8:	mov	x0, x14
    1afc:	add	x5, sp, #0xe8
    1b00:	add	x3, sp, #0xe0
    1b04:	mov	x1, x21
    1b08:	stp	x14, x4, [sp, #104]
    1b0c:	stp	x7, x12, [sp, #120]
    1b10:	stp	x9, x10, [sp, #136]
    1b14:	stp	x11, x13, [sp, #152]
    1b18:	bl	730 <__gconv_transliterate@plt>
    1b1c:	mov	w27, w0
    1b20:	cmp	w0, #0x6
    1b24:	ldr	x14, [sp, #104]
    1b28:	ldr	x7, [sp, #120]
    1b2c:	ldr	x9, [sp, #136]
    1b30:	ldp	x11, x13, [sp, #152]
    1b34:	b.eq	1c30 <gconv@@Base+0x12d8>  // b.none
    1b38:	ldr	x0, [sp, #224]
    1b3c:	ldr	x4, [sp, #112]
    1b40:	cmp	x0, x7
    1b44:	ldr	x12, [sp, #128]
    1b48:	ldr	x10, [sp, #144]
    1b4c:	b.ne	1050 <gconv@@Base+0x6f8>  // b.any
    1b50:	cmp	w27, #0x7
    1b54:	b.ne	16a4 <gconv@@Base+0xd4c>  // b.any
    1b58:	add	x0, x7, #0x4
    1b5c:	cmp	x4, x0
    1b60:	b.eq	1c7c <gconv@@Base+0x1324>  // b.none
    1b64:	ldr	w0, [x9]
    1b68:	ldr	x1, [x11]
    1b6c:	and	x2, x0, #0x7
    1b70:	sub	x2, x12, x2
    1b74:	and	w0, w0, #0xfffffff8
    1b78:	add	x1, x1, x2
    1b7c:	str	x1, [x11]
    1b80:	cmp	x12, w0, sxtw
    1b84:	b.le	1c5c <gconv@@Base+0x1304>
    1b88:	cmp	x12, #0x4
    1b8c:	b.hi	1c3c <gconv@@Base+0x12e4>  // b.pmore
    1b90:	orr	w0, w0, w12
    1b94:	str	w0, [x9]
    1b98:	cmp	x4, x7
    1b9c:	b.ls	1794 <gconv@@Base+0xe3c>  // b.plast
    1ba0:	add	x9, x9, #0x4
    1ba4:	add	x7, x7, #0x1
    1ba8:	str	x7, [sp, #224]
    1bac:	cmp	x4, x7
    1bb0:	ldurb	w0, [x7, #-1]
    1bb4:	strb	w0, [x9], #1
    1bb8:	b.ne	1ba4 <gconv@@Base+0x124c>  // b.any
    1bbc:	mov	w27, #0x7                   	// #7
    1bc0:	b	d38 <gconv@@Base+0x3e0>
    1bc4:	ldr	x0, [sp, #232]
    1bc8:	b	144c <gconv@@Base+0xaf4>
    1bcc:	mov	w16, #0xffffe160            	// #-7840
    1bd0:	add	w1, w0, w16
    1bd4:	cmp	w1, #0x59
    1bd8:	b.hi	1c18 <gconv@@Base+0x12c0>  // b.pmore
    1bdc:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1be0:	add	x1, x1, #0xf60
    1be4:	add	x1, x1, #0x130
    1be8:	mov	w15, #0xffffe211            	// #-7663
    1bec:	add	w0, w0, w15
    1bf0:	ldrb	w1, [x1, x0]
    1bf4:	b	160c <gconv@@Base+0xcb4>
    1bf8:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1bfc:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1c00:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1c04:	add	x3, x3, #0xf40
    1c08:	add	x1, x1, #0xe08
    1c0c:	add	x0, x0, #0xe48
    1c10:	mov	w2, #0x1c9                 	// #457
    1c14:	bl	790 <__assert_fail@plt>
    1c18:	mov	w1, #0x1c00                	// #7168
    1c1c:	cmp	w1, w0, lsr #7
    1c20:	b.ne	1714 <gconv@@Base+0xdbc>  // b.any
    1c24:	add	x0, x7, #0x4
    1c28:	str	x0, [sp, #224]
    1c2c:	b	1050 <gconv@@Base+0x6f8>
    1c30:	tbz	w19, #1, 1750 <gconv@@Base+0xdf8>
    1c34:	ldr	x0, [sp, #224]
    1c38:	b	1738 <gconv@@Base+0xde0>
    1c3c:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1c40:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1c44:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1c48:	add	x3, x3, #0xf40
    1c4c:	add	x1, x1, #0xe08
    1c50:	add	x0, x0, #0xec0
    1c54:	mov	w2, #0x1e6                 	// #486
    1c58:	bl	790 <__assert_fail@plt>
    1c5c:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1c60:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1c64:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1c68:	add	x3, x3, #0xf40
    1c6c:	add	x1, x1, #0xe08
    1c70:	add	x0, x0, #0xe98
    1c74:	mov	w2, #0x1e5                 	// #485
    1c78:	bl	790 <__assert_fail@plt>
    1c7c:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1c80:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1c84:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1c88:	add	x3, x3, #0xf40
    1c8c:	add	x1, x1, #0xe08
    1c90:	add	x0, x0, #0xe70
    1c94:	mov	w2, #0x1db                 	// #475
    1c98:	bl	790 <__assert_fail@plt>
    1c9c:	mov	w3, #0x1b                  	// #27
    1ca0:	b	1a34 <gconv@@Base+0x10dc>
    1ca4:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1ca8:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1cac:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1cb0:	add	x3, x3, #0xf58
    1cb4:	add	x1, x1, #0xdd8
    1cb8:	add	x0, x0, #0xdf0
    1cbc:	mov	w2, #0x1a4                 	// #420
    1cc0:	bl	790 <__assert_fail@plt>
    1cc4:	mov	x2, x28
    1cc8:	b	13ec <gconv@@Base+0xa94>
    1ccc:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1cd0:	add	x1, x1, #0xf60
    1cd4:	add	x1, x1, #0x240
    1cd8:	ubfiz	x2, x4, #2, #32
    1cdc:	ldrh	w1, [x1, x2]
    1ce0:	cmp	w0, w1
    1ce4:	b.ne	1724 <gconv@@Base+0xdcc>  // b.any
    1ce8:	mov	w1, w4
    1cec:	add	x2, x10, #0x1
    1cf0:	cmp	x28, x2
    1cf4:	b.ls	1634 <gconv@@Base+0xcdc>  // b.plast
    1cf8:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1cfc:	add	x0, x0, #0xf60
    1d00:	add	x0, x0, #0x240
    1d04:	str	x2, [sp, #232]
    1d08:	add	x1, x0, w1, uxtw #2
    1d0c:	ldrb	w0, [x1, #2]
    1d10:	strb	w0, [x10]
    1d14:	ldrb	w1, [x1, #3]
    1d18:	ldr	x0, [sp, #232]
    1d1c:	add	x2, x0, #0x1
    1d20:	str	x2, [sp, #232]
    1d24:	strb	w1, [x0]
    1d28:	b	103c <gconv@@Base+0x6e4>
    1d2c:	mov	w1, #0x1b                  	// #27
    1d30:	b	1cec <gconv@@Base+0x1394>
    1d34:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1d38:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1d3c:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1d40:	add	x3, x3, #0xf40
    1d44:	add	x1, x1, #0xe08
    1d48:	add	x0, x0, #0xe18
    1d4c:	mov	w2, #0x18b                 	// #395
    1d50:	bl	790 <__assert_fail@plt>
    1d54:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1d58:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1d5c:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1d60:	add	x3, x3, #0xf58
    1d64:	add	x1, x1, #0xdd8
    1d68:	add	x0, x0, #0xdf0
    1d6c:	mov	w2, #0x234                 	// #564
    1d70:	bl	790 <__assert_fail@plt>
    1d74:	bl	740 <__stack_chk_fail@plt>
    1d78:	adrp	x3, 1000 <gconv@@Base+0x6a8>
    1d7c:	adrp	x1, 1000 <gconv@@Base+0x6a8>
    1d80:	adrp	x0, 1000 <gconv@@Base+0x6a8>
    1d84:	add	x3, x3, #0xf58
    1d88:	add	x1, x1, #0xdd8
    1d8c:	add	x0, x0, #0xf28
    1d90:	mov	w2, #0x31e                 	// #798
    1d94:	bl	790 <__assert_fail@plt>
    1d98:	ldr	x4, [sp, #184]
    1d9c:	ubfiz	x1, x3, #2, #32
    1da0:	ldrh	w1, [x4, x1]
    1da4:	cmp	w2, w1
    1da8:	b.ne	143c <gconv@@Base+0xae4>  // b.any
    1dac:	b	1a34 <gconv@@Base+0x10dc>
    1db0:	bl	760 <abort@plt>

Disassembly of section .fini:

0000000000001db4 <.fini>:
    1db4:	stp	x29, x30, [sp, #-16]!
    1db8:	mov	x29, sp
    1dbc:	ldp	x29, x30, [sp], #16
    1dc0:	ret
