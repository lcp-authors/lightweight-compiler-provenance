
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs1.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_ufs_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	nop

0000000000000020 <grub_ufs_read_inode>:
  20:	stp	x29, x30, [sp, #-16]!
  24:	mov	x4, x2
  28:	mov	x29, sp
  2c:	ldp	w5, w6, [x0, #184]
  30:	ldp	w2, w7, [x0, #24]
  34:	udiv	w3, w1, w5
  38:	bic	w7, w3, w7
  3c:	msub	w5, w3, w5, w1
  40:	mul	w3, w3, w6
  44:	mul	w7, w7, w2
  48:	cbz	x4, a4 <grub_ufs_read_inode+0x84>
  4c:	ldr	w1, [x0, #16]
  50:	negs	w6, w5
  54:	and	w6, w6, #0x3
  58:	and	w2, w5, #0x3
  5c:	ldr	w8, [x0, #100]
  60:	csneg	w2, w2, w6, mi  // mi = first
  64:	add	w3, w3, w1
  68:	cmp	w5, #0x0
  6c:	add	w1, w5, #0x3
  70:	add	w3, w3, w7
  74:	ldr	x0, [x0, #1376]
  78:	csel	w5, w1, w5, lt  // lt = tstop
  7c:	lsl	w1, w3, w8
  80:	sbfiz	x2, x2, #7, #32
  84:	add	w1, w1, w5, asr #2
  88:	mov	x3, #0x80                  	// #128
  8c:	bl	0 <grub_disk_read>
  90:	adrp	x0, 0 <grub_ufs_close>
  94:	ldp	x29, x30, [sp], #16
  98:	ldr	x0, [x0]
  9c:	ldr	w0, [x0]
  a0:	ret
  a4:	add	x4, x0, #0x568
  a8:	str	w1, [x0, #1512]
  ac:	b	4c <grub_ufs_read_inode+0x2c>
	...

00000000000000b8 <grub_ufs_mount>:
  b8:	stp	x29, x30, [sp, #-64]!
  bc:	mov	x29, sp
  c0:	stp	x19, x20, [sp, #16]
  c4:	stp	x21, x22, [sp, #32]
  c8:	mov	x21, x0
  cc:	mov	x0, #0x5f8                 	// #1528
  d0:	bl	0 <grub_malloc>
  d4:	mov	x19, x0
  d8:	cbz	x0, 194 <grub_ufs_mount+0xdc>
  dc:	adrp	x0, 0 <grub_ufs_close>
  e0:	ldr	x20, [x0]
  e4:	ldr	w1, [x20]
  e8:	cmn	w1, #0x1
  ec:	b.eq	1f0 <grub_ufs_mount+0x138>  // b.none
  f0:	adrp	x0, 0 <grub_ufs_close>
  f4:	str	x23, [sp, #48]
  f8:	mov	w23, #0x1954                	// #6484
  fc:	ldr	x22, [x0]
 100:	movk	w23, #0x1, lsl #16
 104:	b	114 <grub_ufs_mount+0x5c>
 108:	ldr	w1, [x20, #4]!
 10c:	cmn	w1, #0x1
 110:	b.eq	1d8 <grub_ufs_mount+0x120>  // b.none
 114:	sxtw	x1, w1
 118:	mov	x4, x19
 11c:	mov	x0, x21
 120:	mov	x3, #0x560                 	// #1376
 124:	mov	x2, #0x0                   	// #0
 128:	bl	0 <grub_disk_read>
 12c:	ldr	w1, [x22]
 130:	cbnz	w1, 1a8 <grub_ufs_mount+0xf0>
 134:	ldr	w1, [x19, #1372]
 138:	cmp	w1, w23
 13c:	b.ne	108 <grub_ufs_mount+0x50>  // b.any
 140:	ldr	w1, [x19, #48]
 144:	sub	w0, w1, #0x1
 148:	tst	w0, w1
 14c:	cbz	w1, 108 <grub_ufs_mount+0x50>
 150:	b.ne	108 <grub_ufs_mount+0x50>  // b.any
 154:	ldr	w0, [x19, #184]
 158:	cbz	w0, 108 <grub_ufs_mount+0x50>
 15c:	str	wzr, [x19, #1520]
 160:	cmp	w1, #0x1
 164:	b.eq	188 <grub_ufs_mount+0xd0>  // b.none
 168:	mov	w0, #0x1                   	// #1
 16c:	mov	w4, w0
 170:	mov	w2, w0
 174:	add	w0, w0, #0x1
 178:	lsl	w3, w4, w2
 17c:	cmp	w3, w1
 180:	b.cc	170 <grub_ufs_mount+0xb8>  // b.lo, b.ul, b.last
 184:	str	w2, [x19, #1520]
 188:	ldr	x23, [sp, #48]
 18c:	str	x21, [x19, #1376]
 190:	str	wzr, [x19, #1516]
 194:	mov	x0, x19
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldp	x21, x22, [sp, #32]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	ldr	x23, [sp, #48]
 1ac:	cmp	w1, #0x0
 1b0:	ccmp	w1, #0xb, #0x4, ne  // ne = any
 1b4:	b.eq	1dc <grub_ufs_mount+0x124>  // b.none
 1b8:	mov	x0, x19
 1bc:	mov	x19, #0x0                   	// #0
 1c0:	bl	0 <grub_free>
 1c4:	mov	x0, x19
 1c8:	ldp	x19, x20, [sp, #16]
 1cc:	ldp	x21, x22, [sp, #32]
 1d0:	ldp	x29, x30, [sp], #64
 1d4:	ret
 1d8:	ldr	x23, [sp, #48]
 1dc:	adrp	x1, 0 <grub_ufs_close>
 1e0:	mov	w0, #0x9                   	// #9
 1e4:	ldr	x1, [x1]
 1e8:	bl	0 <grub_error>
 1ec:	b	1b8 <grub_ufs_mount+0x100>
 1f0:	adrp	x0, 0 <grub_ufs_close>
 1f4:	ldr	x0, [x0]
 1f8:	ldr	w1, [x0]
 1fc:	b	1ac <grub_ufs_mount+0xf4>
	...

0000000000000218 <grub_ufs_mtime>:
 218:	stp	x29, x30, [sp, #-48]!
 21c:	adrp	x2, 0 <grub_ufs_close>
 220:	mov	x29, sp
 224:	str	x21, [sp, #32]
 228:	ldr	x21, [x2]
 22c:	stp	x19, x20, [sp, #16]
 230:	mov	x19, x0
 234:	mov	x20, x1
 238:	ldr	x0, [x21]
 23c:	bl	0 <grub_dl_ref>
 240:	ldr	x0, [x19]
 244:	bl	b8 <grub_ufs_mount>
 248:	mov	x19, x0
 24c:	mov	w1, #0x0                   	// #0
 250:	cbz	x0, 258 <grub_ufs_mtime+0x40>
 254:	ldr	w1, [x0, #32]
 258:	ldr	x0, [x21]
 25c:	str	w1, [x20]
 260:	bl	0 <grub_dl_unref>
 264:	mov	x0, x19
 268:	bl	0 <grub_free>
 26c:	adrp	x0, 0 <grub_ufs_close>
 270:	ldp	x19, x20, [sp, #16]
 274:	ldr	x0, [x0]
 278:	ldr	x21, [sp, #32]
 27c:	ldr	w0, [x0]
 280:	ldp	x29, x30, [sp], #48
 284:	ret
	...

0000000000000298 <grub_ufs_uuid>:
 298:	stp	x29, x30, [sp, #-48]!
 29c:	adrp	x2, 0 <grub_ufs_close>
 2a0:	mov	x29, sp
 2a4:	stp	x19, x20, [sp, #16]
 2a8:	mov	x20, x1
 2ac:	ldr	x19, [x0]
 2b0:	str	x21, [sp, #32]
 2b4:	ldr	x21, [x2]
 2b8:	ldr	x0, [x21]
 2bc:	bl	0 <grub_dl_ref>
 2c0:	mov	x0, x19
 2c4:	bl	b8 <grub_ufs_mount>
 2c8:	mov	x19, x0
 2cc:	cbz	x0, 2d8 <grub_ufs_uuid+0x40>
 2d0:	ldr	x0, [x0, #144]
 2d4:	cbnz	x0, 308 <grub_ufs_uuid+0x70>
 2d8:	str	xzr, [x20]
 2dc:	ldr	x0, [x21]
 2e0:	bl	0 <grub_dl_unref>
 2e4:	mov	x0, x19
 2e8:	bl	0 <grub_free>
 2ec:	adrp	x0, 0 <grub_ufs_close>
 2f0:	ldp	x19, x20, [sp, #16]
 2f4:	ldr	x0, [x0]
 2f8:	ldr	x21, [sp, #32]
 2fc:	ldr	w0, [x0]
 300:	ldp	x29, x30, [sp], #48
 304:	ret
 308:	adrp	x0, 0 <grub_ufs_close>
 30c:	ldp	w1, w2, [x19, #144]
 310:	ldr	x0, [x0]
 314:	bl	0 <grub_xasprintf>
 318:	str	x0, [x20]
 31c:	b	2dc <grub_ufs_uuid+0x44>
	...

0000000000000338 <grub_ufs_label>:
 338:	stp	x29, x30, [sp, #-48]!
 33c:	adrp	x2, 0 <grub_ufs_close>
 340:	mov	x29, sp
 344:	str	x21, [sp, #32]
 348:	ldr	x21, [x2]
 34c:	stp	x19, x20, [sp, #16]
 350:	mov	x19, x0
 354:	mov	x20, x1
 358:	ldr	x0, [x21]
 35c:	bl	0 <grub_dl_ref>
 360:	ldr	x0, [x19]
 364:	str	xzr, [x20]
 368:	bl	b8 <grub_ufs_mount>
 36c:	mov	x19, x0
 370:	cbz	x0, 380 <grub_ufs_label+0x48>
 374:	add	x0, x0, #0x2a8
 378:	bl	0 <grub_strdup>
 37c:	str	x0, [x20]
 380:	ldr	x0, [x21]
 384:	bl	0 <grub_dl_unref>
 388:	mov	x0, x19
 38c:	bl	0 <grub_free>
 390:	adrp	x0, 0 <grub_ufs_close>
 394:	ldp	x19, x20, [sp, #16]
 398:	ldr	x0, [x0]
 39c:	ldr	x21, [sp, #32]
 3a0:	ldr	w0, [x0]
 3a4:	ldp	x29, x30, [sp], #48
 3a8:	ret
 3ac:	nop
	...

00000000000003c0 <grub_ufs_read_file>:
 3c0:	stp	x29, x30, [sp, #-176]!
 3c4:	mov	x29, sp
 3c8:	stp	x23, x24, [sp, #48]
 3cc:	mov	x24, x0
 3d0:	ldr	x0, [x0, #1392]
 3d4:	stp	x19, x20, [sp, #16]
 3d8:	mov	x19, x3
 3dc:	add	x3, x4, x3
 3e0:	stp	x25, x26, [sp, #64]
 3e4:	cmp	x3, x0
 3e8:	stp	x27, x28, [sp, #80]
 3ec:	mov	x25, x5
 3f0:	stp	x1, x2, [sp, #104]
 3f4:	str	x3, [sp, #120]
 3f8:	str	x4, [sp, #152]
 3fc:	b.ls	40c <grub_ufs_read_file+0x4c>  // b.plast
 400:	sub	x1, x0, x19
 404:	str	x0, [sp, #120]
 408:	str	x1, [sp, #152]
 40c:	ldr	w27, [x24, #48]
 410:	ldr	x1, [sp, #120]
 414:	mov	w20, w27
 418:	ldr	w0, [x24, #1520]
 41c:	sub	x20, x20, #0x1
 420:	add	x20, x20, x1
 424:	lsr	x28, x19, x0
 428:	lsr	x20, x20, x0
 42c:	cmp	x20, x28
 430:	b.ls	544 <grub_ufs_read_file+0x184>  // b.plast
 434:	adrp	x0, 0 <grub_ufs_close>
 438:	stp	x21, x22, [sp, #32]
 43c:	sub	x22, x20, #0x1
 440:	ldr	x21, [x0]
 444:	mov	w26, #0x1                   	// #1
 448:	cmp	x28, #0xb
 44c:	b.ls	584 <grub_ufs_read_file+0x1c4>  // b.plast
 450:	ldr	w10, [x24, #1520]
 454:	sub	x0, x28, #0xc
 458:	ldr	w23, [x24, #100]
 45c:	sub	w10, w10, #0x2
 460:	lsl	w9, w26, w10
 464:	sxtw	x12, w9
 468:	cmp	x0, w9, sxtw
 46c:	b.cc	648 <grub_ufs_read_file+0x288>  // b.lo, b.ul, b.last
 470:	smull	x2, w9, w9
 474:	sub	x12, x0, x12
 478:	cmp	x12, x2
 47c:	b.cc	670 <grub_ufs_read_file+0x2b0>  // b.lo, b.ul, b.last
 480:	lsl	w1, w10, #1
 484:	sub	x12, x12, x2
 488:	add	w0, w1, w10
 48c:	lsr	x0, x12, x0
 490:	cbz	x0, 5b4 <grub_ufs_read_file+0x1f4>
 494:	adrp	x0, 0 <grub_ufs_close>
 498:	ldr	x1, [x0]
 49c:	mov	w0, #0x9                   	// #9
 4a0:	bl	0 <grub_error>
 4a4:	mov	x1, #0x0                   	// #0
 4a8:	ldr	w0, [x21]
 4ac:	cbnz	w0, 594 <grub_ufs_read_file+0x1d4>
 4b0:	mov	w2, w27
 4b4:	cmp	x22, x28
 4b8:	b.ne	4d4 <grub_ufs_read_file+0x114>  // b.any
 4bc:	ldr	w0, [x24, #48]
 4c0:	ldr	x3, [sp, #120]
 4c4:	sub	w2, w0, #0x1
 4c8:	mov	w0, w0
 4cc:	ands	x2, x2, x3
 4d0:	csel	x2, x0, x2, eq  // eq = none
 4d4:	ldr	w0, [x24, #1520]
 4d8:	mov	w23, #0x0                   	// #0
 4dc:	lsr	x0, x19, x0
 4e0:	cmp	x0, x28
 4e4:	b.eq	560 <grub_ufs_read_file+0x1a0>  // b.none
 4e8:	cbz	x1, 574 <grub_ufs_read_file+0x1b4>
 4ec:	ldr	x0, [x24, #1376]
 4f0:	mov	x3, x2
 4f4:	ldr	x5, [sp, #104]
 4f8:	mov	x4, x25
 4fc:	ldr	w8, [x24, #100]
 500:	sxtw	x2, w23
 504:	str	x5, [x0, #48]
 508:	ldr	x5, [sp, #112]
 50c:	str	x5, [x0, #56]
 510:	lsl	x1, x1, x8
 514:	bl	0 <grub_disk_read>
 518:	ldr	x1, [x24, #1376]
 51c:	ldr	w0, [x21]
 520:	str	xzr, [x1, #48]
 524:	cbnz	w0, 594 <grub_ufs_read_file+0x1d4>
 528:	ldr	w27, [x24, #48]
 52c:	add	x28, x28, #0x1
 530:	cmp	x20, x28
 534:	sub	w9, w27, w23
 538:	add	x25, x25, x9
 53c:	b.ne	448 <grub_ufs_read_file+0x88>  // b.any
 540:	ldp	x21, x22, [sp, #32]
 544:	ldp	x19, x20, [sp, #16]
 548:	ldp	x23, x24, [sp, #48]
 54c:	ldp	x25, x26, [sp, #64]
 550:	ldp	x27, x28, [sp, #80]
 554:	ldr	x0, [sp, #152]
 558:	ldp	x29, x30, [sp], #176
 55c:	ret
 560:	sub	w8, w27, #0x1
 564:	and	x8, x8, x19
 568:	mov	w23, w8
 56c:	sub	x2, x2, w8, sxtw
 570:	cbnz	x1, 4ec <grub_ufs_read_file+0x12c>
 574:	mov	x0, x25
 578:	mov	w1, #0x0                   	// #0
 57c:	bl	0 <grub_memset>
 580:	b	528 <grub_ufs_read_file+0x168>
 584:	add	x0, x24, #0x590
 588:	ldr	w1, [x0, x28, lsl #2]
 58c:	ldr	w0, [x21]
 590:	cbz	w0, 4b0 <grub_ufs_read_file+0xf0>
 594:	mov	x0, #0xffffffffffffffff    	// #-1
 598:	ldp	x19, x20, [sp, #16]
 59c:	ldp	x21, x22, [sp, #32]
 5a0:	ldp	x23, x24, [sp, #48]
 5a4:	ldp	x25, x26, [sp, #64]
 5a8:	ldp	x27, x28, [sp, #80]
 5ac:	ldp	x29, x30, [sp], #176
 5b0:	ret
 5b4:	ldr	x0, [x24, #1376]
 5b8:	lsr	x2, x12, x1
 5bc:	ldr	w1, [x24, #1480]
 5c0:	lsl	x2, x2, #2
 5c4:	add	x4, sp, #0xac
 5c8:	mov	x3, #0x4                   	// #4
 5cc:	str	x12, [sp, #128]
 5d0:	lsl	x1, x1, x23
 5d4:	str	w10, [sp, #136]
 5d8:	str	w9, [sp, #148]
 5dc:	bl	0 <grub_disk_read>
 5e0:	ldr	w9, [sp, #148]
 5e4:	add	x4, sp, #0xac
 5e8:	ldr	x12, [sp, #128]
 5ec:	sub	w9, w9, #0x1
 5f0:	ldr	w10, [sp, #136]
 5f4:	mov	x3, #0x4                   	// #4
 5f8:	ldr	x0, [x24, #1376]
 5fc:	sxtw	x9, w9
 600:	ldr	w1, [sp, #172]
 604:	lsr	x2, x12, x10
 608:	and	x2, x2, x9
 60c:	stp	x9, x12, [sp, #128]
 610:	lsl	x2, x2, #2
 614:	lsl	x1, x1, x23
 618:	bl	0 <grub_disk_read>
 61c:	ldp	x9, x12, [sp, #128]
 620:	add	x4, sp, #0xac
 624:	ldr	x0, [x24, #1376]
 628:	mov	x3, #0x4                   	// #4
 62c:	ldr	w1, [sp, #172]
 630:	and	x12, x12, x9
 634:	lsl	x1, x1, x23
 638:	lsl	x2, x12, #2
 63c:	bl	0 <grub_disk_read>
 640:	ldr	w1, [sp, #172]
 644:	b	4a8 <grub_ufs_read_file+0xe8>
 648:	ldr	x0, [x24, #1376]
 64c:	lsl	x2, x28, #2
 650:	ldr	w1, [x24, #1472]
 654:	sub	x2, x2, #0x30
 658:	add	x4, sp, #0xac
 65c:	mov	x3, #0x4                   	// #4
 660:	lsl	x1, x1, x23
 664:	bl	0 <grub_disk_read>
 668:	ldr	w1, [sp, #172]
 66c:	b	4a8 <grub_ufs_read_file+0xe8>
 670:	ldr	x0, [x24, #1376]
 674:	lsr	x2, x12, x10
 678:	ldr	w1, [x24, #1476]
 67c:	lsl	x2, x2, #2
 680:	add	x4, sp, #0xac
 684:	mov	x3, #0x4                   	// #4
 688:	str	x12, [sp, #128]
 68c:	lsl	x1, x1, x23
 690:	str	w9, [sp, #136]
 694:	bl	0 <grub_disk_read>
 698:	ldr	w9, [sp, #136]
 69c:	add	x4, sp, #0xac
 6a0:	ldr	x12, [sp, #128]
 6a4:	sub	w2, w9, #0x1
 6a8:	ldr	x0, [x24, #1376]
 6ac:	sxtw	x2, w2
 6b0:	ldr	w1, [sp, #172]
 6b4:	and	x2, x2, x12
 6b8:	mov	x3, #0x4                   	// #4
 6bc:	lsl	x2, x2, #2
 6c0:	lsl	x1, x1, x23
 6c4:	bl	0 <grub_disk_read>
 6c8:	ldr	w1, [sp, #172]
 6cc:	b	4a8 <grub_ufs_read_file+0xe8>
	...

00000000000006e0 <grub_ufs_read>:
 6e0:	mov	x6, x0
 6e4:	mov	x5, x1
 6e8:	ldr	x3, [x0, #24]
 6ec:	mov	x4, x2
 6f0:	ldp	x0, x1, [x0, #80]
 6f4:	ldr	x2, [x6, #96]
 6f8:	b	3c0 <grub_ufs_read_file>
 6fc:	nop

0000000000000700 <grub_ufs_find_file>:
 700:	stp	x29, x30, [sp, #-112]!
 704:	mov	x29, sp
 708:	stp	x21, x22, [sp, #32]
 70c:	mov	x21, x0
 710:	mov	x0, x1
 714:	stp	x25, x26, [sp, #64]
 718:	mov	x26, x1
 71c:	bl	0 <grub_strlen>
 720:	add	x0, x0, #0x2
 724:	bl	0 <grub_malloc>
 728:	cbz	x0, 888 <grub_ufs_find_file+0x188>
 72c:	stp	x23, x24, [sp, #48]
 730:	mov	x24, x26
 734:	mov	x23, x0
 738:	stp	x19, x20, [sp, #16]
 73c:	stp	x27, x28, [sp, #80]
 740:	adrp	x27, 0 <grub_ufs_close>
 744:	ldrb	w0, [x24]
 748:	cmp	w0, #0x2f
 74c:	b.ne	75c <grub_ufs_find_file+0x5c>  // b.any
 750:	ldrb	w0, [x24, #1]!
 754:	cmp	w0, #0x2f
 758:	b.eq	750 <grub_ufs_find_file+0x50>  // b.none
 75c:	cbz	w0, 994 <grub_ufs_find_file+0x294>
 760:	ldrh	w0, [x21, #1384]
 764:	and	w0, w0, #0xe000
 768:	cmp	w0, #0x4, lsl #12
 76c:	b.ne	978 <grub_ufs_find_file+0x278>  // b.any
 770:	ldrb	w0, [x24]
 774:	mov	x25, x24
 778:	cmp	w0, #0x2f
 77c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 780:	b.eq	798 <grub_ufs_find_file+0x98>  // b.none
 784:	nop
 788:	ldrb	w0, [x25, #1]!
 78c:	cmp	w0, #0x2f
 790:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 794:	b.ne	788 <grub_ufs_find_file+0x88>  // b.any
 798:	ldr	x0, [x21, #1392]
 79c:	cbz	x0, 868 <grub_ufs_find_file+0x168>
 7a0:	sub	x22, x25, x24
 7a4:	mov	w19, #0x0                   	// #0
 7a8:	mov	x20, #0x0                   	// #0
 7ac:	b	818 <grub_ufs_find_file+0x118>
 7b0:	ldrh	w28, [sp, #110]
 7b4:	add	x3, x20, #0x8
 7b8:	mov	x5, x23
 7bc:	mov	x2, #0x0                   	// #0
 7c0:	cmp	x28, x22
 7c4:	b.lt	800 <grub_ufs_find_file+0x100>  // b.tstop
 7c8:	cinc	x4, x22, ne  // ne = any
 7cc:	mov	x0, x21
 7d0:	mov	x1, #0x0                   	// #0
 7d4:	bl	3c0 <grub_ufs_read_file>
 7d8:	tbnz	x0, #63, 838 <grub_ufs_find_file+0x138>
 7dc:	mov	x2, x22
 7e0:	mov	x1, x23
 7e4:	mov	x0, x24
 7e8:	bl	0 <grub_strncmp>
 7ec:	cbnz	w0, 800 <grub_ufs_find_file+0x100>
 7f0:	cmp	x28, x22
 7f4:	b.eq	8a4 <grub_ufs_find_file+0x1a4>  // b.none
 7f8:	ldrb	w0, [x23, x22]
 7fc:	cbz	w0, 8a4 <grub_ufs_find_file+0x1a4>
 800:	ldrh	w1, [sp, #108]
 804:	ldr	x0, [x21, #1392]
 808:	add	w20, w19, w1
 80c:	mov	x19, x20
 810:	cmp	x0, w20, uxtw
 814:	b.ls	868 <grub_ufs_find_file+0x168>  // b.plast
 818:	add	x5, sp, #0x68
 81c:	mov	x3, x20
 820:	mov	x0, x21
 824:	mov	x4, #0x8                   	// #8
 828:	mov	x2, #0x0                   	// #0
 82c:	mov	x1, #0x0                   	// #0
 830:	bl	3c0 <grub_ufs_read_file>
 834:	tbz	x0, #63, 7b0 <grub_ufs_find_file+0xb0>
 838:	adrp	x0, 0 <grub_ufs_close>
 83c:	ldr	x19, [x0]
 840:	mov	x0, x23
 844:	bl	0 <grub_free>
 848:	ldr	w0, [x19]
 84c:	ldp	x19, x20, [sp, #16]
 850:	ldp	x23, x24, [sp, #48]
 854:	ldp	x27, x28, [sp, #80]
 858:	ldp	x21, x22, [sp, #32]
 85c:	ldp	x25, x26, [sp, #64]
 860:	ldp	x29, x30, [sp], #112
 864:	ret
 868:	adrp	x1, 0 <grub_ufs_close>
 86c:	mov	x2, x26
 870:	mov	w0, #0x5                   	// #5
 874:	ldr	x1, [x1]
 878:	bl	0 <grub_error>
 87c:	adrp	x0, 0 <grub_ufs_close>
 880:	ldr	x19, [x0]
 884:	b	840 <grub_ufs_find_file+0x140>
 888:	adrp	x0, 0 <grub_ufs_close>
 88c:	ldp	x21, x22, [sp, #32]
 890:	ldr	x0, [x0]
 894:	ldp	x25, x26, [sp, #64]
 898:	ldr	w0, [x0]
 89c:	ldp	x29, x30, [sp], #112
 8a0:	ret
 8a4:	ldr	w1, [sp, #104]
 8a8:	mov	x0, x21
 8ac:	ldr	w20, [x21, #1512]
 8b0:	mov	x2, #0x0                   	// #0
 8b4:	bl	20 <grub_ufs_read_inode>
 8b8:	ldrh	w0, [x21, #1384]
 8bc:	and	w0, w0, #0xe000
 8c0:	cmp	w0, #0xa, lsl #12
 8c4:	b.eq	8d0 <grub_ufs_find_file+0x1d0>  // b.none
 8c8:	mov	x24, x25
 8cc:	b	744 <grub_ufs_find_file+0x44>
 8d0:	ldr	w0, [x21, #1516]
 8d4:	ldr	x22, [x21, #1392]
 8d8:	add	w0, w0, #0x1
 8dc:	str	w0, [x21, #1516]
 8e0:	cmp	w0, #0x8
 8e4:	b.gt	9b0 <grub_ufs_find_file+0x2b0>
 8e8:	add	x0, x22, #0x1
 8ec:	bl	0 <grub_malloc>
 8f0:	mov	x19, x0
 8f4:	cbz	x0, 964 <grub_ufs_find_file+0x264>
 8f8:	ldr	w1, [x21, #1488]
 8fc:	cbnz	w1, 90c <grub_ufs_find_file+0x20c>
 900:	ldr	x1, [x21, #1392]
 904:	cmp	x1, #0x3c
 908:	b.ls	9c4 <grub_ufs_find_file+0x2c4>  // b.plast
 90c:	mov	x5, x19
 910:	mov	x4, x22
 914:	mov	x0, x21
 918:	mov	x3, #0x0                   	// #0
 91c:	mov	x2, #0x0                   	// #0
 920:	mov	x1, #0x0                   	// #0
 924:	bl	3c0 <grub_ufs_read_file>
 928:	tbnz	x0, #63, 95c <grub_ufs_find_file+0x25c>
 92c:	strb	wzr, [x19, x22]
 930:	mov	x0, x21
 934:	mov	x2, #0x0                   	// #0
 938:	ldrb	w1, [x19]
 93c:	cmp	w1, #0x2f
 940:	mov	w1, #0x2                   	// #2
 944:	csel	w1, w20, w1, ne  // ne = any
 948:	bl	20 <grub_ufs_read_inode>
 94c:	cbnz	w0, 95c <grub_ufs_find_file+0x25c>
 950:	mov	x1, x19
 954:	mov	x0, x21
 958:	bl	700 <grub_ufs_find_file>
 95c:	mov	x0, x19
 960:	bl	0 <grub_free>
 964:	ldr	x19, [x27]
 968:	ldr	w0, [x19]
 96c:	cbnz	w0, 840 <grub_ufs_find_file+0x140>
 970:	mov	x24, x25
 974:	b	744 <grub_ufs_find_file+0x44>
 978:	adrp	x1, 0 <grub_ufs_close>
 97c:	mov	w0, #0x4                   	// #4
 980:	ldr	x1, [x1]
 984:	bl	0 <grub_error>
 988:	adrp	x0, 0 <grub_ufs_close>
 98c:	ldr	x19, [x0]
 990:	b	840 <grub_ufs_find_file+0x140>
 994:	mov	x0, x23
 998:	bl	0 <grub_free>
 99c:	mov	w0, #0x0                   	// #0
 9a0:	ldp	x19, x20, [sp, #16]
 9a4:	ldp	x23, x24, [sp, #48]
 9a8:	ldp	x27, x28, [sp, #80]
 9ac:	b	858 <grub_ufs_find_file+0x158>
 9b0:	adrp	x1, 0 <grub_ufs_close>
 9b4:	mov	w0, #0x19                  	// #25
 9b8:	ldr	x1, [x1]
 9bc:	bl	0 <grub_error>
 9c0:	b	964 <grub_ufs_find_file+0x264>
 9c4:	add	x1, x21, #0x590
 9c8:	bl	0 <grub_strcpy>
 9cc:	b	92c <grub_ufs_find_file+0x22c>
	...

00000000000009f0 <grub_ufs_dir>:
 9f0:	stp	x29, x30, [sp, #-240]!
 9f4:	mov	x29, sp
 9f8:	ldr	x0, [x0]
 9fc:	stp	x19, x20, [sp, #16]
 a00:	mov	x20, x1
 a04:	stp	x21, x22, [sp, #32]
 a08:	mov	x21, x2
 a0c:	mov	x22, x3
 a10:	bl	b8 <grub_ufs_mount>
 a14:	cbz	x0, a8c <grub_ufs_dir+0x9c>
 a18:	mov	x19, x0
 a1c:	mov	x2, #0x0                   	// #0
 a20:	mov	w1, #0x2                   	// #2
 a24:	stp	x23, x24, [sp, #48]
 a28:	bl	20 <grub_ufs_read_inode>
 a2c:	adrp	x0, 0 <grub_ufs_close>
 a30:	ldr	x23, [x0]
 a34:	ldr	w0, [x23]
 a38:	cbnz	w0, a78 <grub_ufs_dir+0x88>
 a3c:	cbz	x20, a4c <grub_ufs_dir+0x5c>
 a40:	ldrb	w0, [x20]
 a44:	cmp	w0, #0x2f
 a48:	b.eq	aa8 <grub_ufs_dir+0xb8>  // b.none
 a4c:	adrp	x1, 0 <grub_ufs_close>
 a50:	mov	x2, x20
 a54:	mov	w0, #0x7                   	// #7
 a58:	ldr	x1, [x1]
 a5c:	bl	0 <grub_error>
 a60:	ldr	w0, [x23]
 a64:	ldp	x19, x20, [sp, #16]
 a68:	ldp	x21, x22, [sp, #32]
 a6c:	ldp	x23, x24, [sp, #48]
 a70:	ldp	x29, x30, [sp], #240
 a74:	ret
 a78:	ldp	x19, x20, [sp, #16]
 a7c:	ldp	x21, x22, [sp, #32]
 a80:	ldp	x23, x24, [sp, #48]
 a84:	ldp	x29, x30, [sp], #240
 a88:	ret
 a8c:	adrp	x0, 0 <grub_ufs_close>
 a90:	ldp	x19, x20, [sp, #16]
 a94:	ldr	x0, [x0]
 a98:	ldp	x21, x22, [sp, #32]
 a9c:	ldr	w0, [x0]
 aa0:	ldp	x29, x30, [sp], #240
 aa4:	ret
 aa8:	mov	x1, x20
 aac:	mov	x0, x19
 ab0:	bl	700 <grub_ufs_find_file>
 ab4:	ldr	w24, [x23]
 ab8:	cbnz	w24, bd4 <grub_ufs_dir+0x1e4>
 abc:	ldrh	w0, [x19, #1384]
 ac0:	and	w0, w0, #0xe000
 ac4:	cmp	w0, #0x4, lsl #12
 ac8:	b.ne	bf4 <grub_ufs_dir+0x204>  // b.any
 acc:	ldr	x0, [x19, #1392]
 ad0:	cbz	x0, bd4 <grub_ufs_dir+0x1e4>
 ad4:	stp	x25, x26, [sp, #64]
 ad8:	mov	x26, #0x0                   	// #0
 adc:	b	bb0 <grub_ufs_dir+0x1c0>
 ae0:	ldrh	w0, [sp, #92]
 ae4:	cbz	w0, bd0 <grub_ufs_dir+0x1e0>
 ae8:	ldrh	w4, [sp, #94]
 aec:	add	w0, w4, #0x1
 af0:	and	x25, x4, #0xffff
 af4:	sxtw	x0, w0
 af8:	bl	0 <grub_malloc>
 afc:	mov	x2, #0x10                  	// #16
 b00:	mov	x20, x0
 b04:	mov	w1, #0x0                   	// #0
 b08:	add	x0, sp, #0x60
 b0c:	cbz	x20, bd0 <grub_ufs_dir+0x1e0>
 b10:	bl	0 <grub_memset>
 b14:	mov	x2, #0x0                   	// #0
 b18:	mov	x1, #0x0                   	// #0
 b1c:	add	x3, x26, #0x8
 b20:	mov	x5, x20
 b24:	mov	x4, x25
 b28:	mov	x0, x19
 b2c:	bl	3c0 <grub_ufs_read_file>
 b30:	mov	x1, x0
 b34:	add	x2, sp, #0x70
 b38:	mov	x0, x19
 b3c:	tbnz	x1, #63, c08 <grub_ufs_dir+0x218>
 b40:	strb	wzr, [x20, x25]
 b44:	ldr	w1, [sp, #88]
 b48:	bl	20 <grub_ufs_read_inode>
 b4c:	ldrh	w0, [sp, #112]
 b50:	add	x1, sp, #0x60
 b54:	ldrb	w3, [sp, #96]
 b58:	mov	x2, x22
 b5c:	and	w0, w0, #0xe000
 b60:	ldr	w5, [sp, #136]
 b64:	cmp	w0, #0x4, lsl #12
 b68:	and	w3, w3, #0xfffffffc
 b6c:	cset	w4, eq  // eq = none
 b70:	str	w5, [sp, #100]
 b74:	orr	w4, w4, #0x2
 b78:	mov	x0, x20
 b7c:	orr	w3, w3, w4
 b80:	strb	w3, [sp, #96]
 b84:	blr	x21
 b88:	mov	w1, w0
 b8c:	mov	x0, x20
 b90:	cbnz	w1, c18 <grub_ufs_dir+0x228>
 b94:	bl	0 <grub_free>
 b98:	ldrh	w1, [sp, #92]
 b9c:	ldr	x0, [x19, #1392]
 ba0:	add	w26, w24, w1
 ba4:	mov	x24, x26
 ba8:	cmp	x0, w26, uxtw
 bac:	b.ls	bd0 <grub_ufs_dir+0x1e0>  // b.plast
 bb0:	add	x5, sp, #0x58
 bb4:	mov	x3, x26
 bb8:	mov	x0, x19
 bbc:	mov	x4, #0x8                   	// #8
 bc0:	mov	x2, #0x0                   	// #0
 bc4:	mov	x1, #0x0                   	// #0
 bc8:	bl	3c0 <grub_ufs_read_file>
 bcc:	tbz	x0, #63, ae0 <grub_ufs_dir+0xf0>
 bd0:	ldp	x25, x26, [sp, #64]
 bd4:	mov	x0, x19
 bd8:	bl	0 <grub_free>
 bdc:	ldr	w0, [x23]
 be0:	ldp	x19, x20, [sp, #16]
 be4:	ldp	x21, x22, [sp, #32]
 be8:	ldp	x23, x24, [sp, #48]
 bec:	ldp	x29, x30, [sp], #240
 bf0:	ret
 bf4:	adrp	x1, 0 <grub_ufs_close>
 bf8:	mov	w0, #0x4                   	// #4
 bfc:	ldr	x1, [x1]
 c00:	bl	0 <grub_error>
 c04:	b	bd4 <grub_ufs_dir+0x1e4>
 c08:	mov	x0, x20
 c0c:	bl	0 <grub_free>
 c10:	ldp	x25, x26, [sp, #64]
 c14:	b	bd4 <grub_ufs_dir+0x1e4>
 c18:	bl	0 <grub_free>
 c1c:	ldp	x25, x26, [sp, #64]
 c20:	b	bd4 <grub_ufs_dir+0x1e4>
 c24:	nop
	...

0000000000000c40 <grub_ufs_open>:
 c40:	stp	x29, x30, [sp, #-48]!
 c44:	mov	x29, sp
 c48:	stp	x21, x22, [sp, #32]
 c4c:	mov	x21, x0
 c50:	ldr	x0, [x0, #8]
 c54:	stp	x19, x20, [sp, #16]
 c58:	mov	x20, x1
 c5c:	ldr	x0, [x0]
 c60:	bl	b8 <grub_ufs_mount>
 c64:	cbz	x0, cc0 <grub_ufs_open+0x80>
 c68:	mov	x19, x0
 c6c:	mov	x2, #0x0                   	// #0
 c70:	mov	w1, #0x2                   	// #2
 c74:	bl	20 <grub_ufs_read_inode>
 c78:	adrp	x0, 0 <grub_ufs_close>
 c7c:	ldr	x22, [x0]
 c80:	ldr	w0, [x22]
 c84:	cbnz	w0, cdc <grub_ufs_open+0x9c>
 c88:	cbz	x20, c98 <grub_ufs_open+0x58>
 c8c:	ldrb	w0, [x20]
 c90:	cmp	w0, #0x2f
 c94:	b.eq	cf8 <grub_ufs_open+0xb8>  // b.none
 c98:	adrp	x1, 0 <grub_ufs_close>
 c9c:	mov	x2, x20
 ca0:	mov	w0, #0x7                   	// #7
 ca4:	ldr	x1, [x1]
 ca8:	bl	0 <grub_error>
 cac:	ldr	w0, [x22]
 cb0:	ldp	x19, x20, [sp, #16]
 cb4:	ldp	x21, x22, [sp, #32]
 cb8:	ldp	x29, x30, [sp], #48
 cbc:	ret
 cc0:	adrp	x0, 0 <grub_ufs_close>
 cc4:	ldp	x19, x20, [sp, #16]
 cc8:	ldr	x0, [x0]
 ccc:	ldp	x21, x22, [sp, #32]
 cd0:	ldr	w0, [x0]
 cd4:	ldp	x29, x30, [sp], #48
 cd8:	ret
 cdc:	mov	x0, x19
 ce0:	bl	0 <grub_free>
 ce4:	ldr	w0, [x22]
 ce8:	ldp	x19, x20, [sp, #16]
 cec:	ldp	x21, x22, [sp, #32]
 cf0:	ldp	x29, x30, [sp], #48
 cf4:	ret
 cf8:	mov	x1, x20
 cfc:	mov	x0, x19
 d00:	bl	700 <grub_ufs_find_file>
 d04:	ldr	w0, [x22]
 d08:	cbnz	w0, cdc <grub_ufs_open+0x9c>
 d0c:	ldr	x1, [x19, #1392]
 d10:	str	x1, [x21, #64]
 d14:	str	x19, [x21, #80]
 d18:	ldp	x19, x20, [sp, #16]
 d1c:	ldp	x21, x22, [sp, #32]
 d20:	ldp	x29, x30, [sp], #48
 d24:	ret
	...

0000000000000d38 <grub_mod_init>:
 d38:	stp	x29, x30, [sp, #-32]!
 d3c:	adrp	x2, 0 <grub_ufs_close>
 d40:	adrp	x1, 0 <grub_ufs_close>
 d44:	mov	x29, sp
 d48:	str	x19, [sp, #16]
 d4c:	mov	x19, x0
 d50:	ldr	x0, [x2]
 d54:	ldr	x1, [x1]
 d58:	add	x1, x1, #0x18
 d5c:	bl	0 <grub_list_push>
 d60:	adrp	x0, 0 <grub_ufs_close>
 d64:	ldr	x0, [x0]
 d68:	str	x19, [x0]
 d6c:	ldr	x19, [sp, #16]
 d70:	ldp	x29, x30, [sp], #32
 d74:	ret
	...

0000000000000d90 <grub_mod_fini>:
 d90:	adrp	x0, 0 <grub_ufs_close>
 d94:	ldr	x0, [x0]
 d98:	add	x0, x0, #0x18
 d9c:	b	0 <grub_list_remove>
	...
