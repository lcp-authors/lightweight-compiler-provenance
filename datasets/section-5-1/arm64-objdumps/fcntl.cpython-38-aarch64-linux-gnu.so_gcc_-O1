
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x1136c>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xc44>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1068:	add	x0, x0, #0x1e8
    106c:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x1236c>
    1070:	add	x1, x1, #0x1e8
    1074:	cmp	x0, x1
    1078:	b.eq	10a4 <ioctl@plt+0x64>  // b.none
    107c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1080:	ldr	x1, [x1, #4000]
    1084:	cbz	x1, 10a4 <ioctl@plt+0x64>
    1088:	stp	x29, x30, [sp, #-16]!
    108c:	mov	x29, sp
    1090:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1094:	add	x0, x0, #0x1e8
    1098:	blr	x1
    109c:	ldp	x29, x30, [sp], #16
    10a0:	ret
    10a4:	ret
    10a8:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    10ac:	add	x0, x0, #0x1e8
    10b0:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x1236c>
    10b4:	add	x1, x1, #0x1e8
    10b8:	sub	x0, x0, x1
    10bc:	lsr	x1, x0, #63
    10c0:	add	x0, x1, x0, asr #3
    10c4:	cmp	xzr, x0, asr #1
    10c8:	b.eq	10f8 <ioctl@plt+0xb8>  // b.none
    10cc:	asr	x1, x0, #1
    10d0:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x1136c>
    10d4:	ldr	x2, [x2, #4064]
    10d8:	cbz	x2, 10f8 <ioctl@plt+0xb8>
    10dc:	stp	x29, x30, [sp, #-16]!
    10e0:	mov	x29, sp
    10e4:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    10e8:	add	x0, x0, #0x1e8
    10ec:	blr	x2
    10f0:	ldp	x29, x30, [sp], #16
    10f4:	ret
    10f8:	ret
    10fc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1100:	ldrb	w0, [x0, #488]
    1104:	cbnz	w0, 1140 <ioctl@plt+0x100>
    1108:	stp	x29, x30, [sp, #-16]!
    110c:	mov	x29, sp
    1110:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1114:	ldr	x0, [x0, #4016]
    1118:	cbz	x0, 1128 <ioctl@plt+0xe8>
    111c:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1120:	ldr	x0, [x0, #216]
    1124:	bl	ef0 <__cxa_finalize@plt>
    1128:	bl	1064 <ioctl@plt+0x24>
    112c:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1130:	mov	w1, #0x1                   	// #1
    1134:	strb	w1, [x0, #488]
    1138:	ldp	x29, x30, [sp], #16
    113c:	ret
    1140:	ret
    1144:	stp	x29, x30, [sp, #-16]!
    1148:	mov	x29, sp
    114c:	bl	10a8 <ioctl@plt+0x68>
    1150:	ldp	x29, x30, [sp], #16
    1154:	ret
    1158:	stp	x29, x30, [sp, #-112]!
    115c:	mov	x29, sp
    1160:	stp	x19, x20, [sp, #16]
    1164:	mov	x19, x1
    1168:	mov	x20, x2
    116c:	sub	x0, x2, #0x2
    1170:	cmp	x0, #0x3
    1174:	b.ls	1194 <ioctl@plt+0x154>  // b.plast
    1178:	mov	x3, #0x5                   	// #5
    117c:	mov	x2, #0x2                   	// #2
    1180:	mov	x1, x20
    1184:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x36c>
    1188:	add	x0, x0, #0x148
    118c:	bl	f80 <_PyArg_CheckPositional@plt>
    1190:	cbz	w0, 1464 <ioctl@plt+0x424>
    1194:	stp	x21, x22, [sp, #32]
    1198:	ldr	x0, [x19]
    119c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    11a0:	mov	w21, w0
    11a4:	mov	x0, #0x0                   	// #0
    11a8:	tbnz	w21, #31, 1270 <ioctl@plt+0x230>
    11ac:	ldr	x0, [x19, #8]
    11b0:	ldr	x0, [x0, #8]
    11b4:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    11b8:	ldr	x1, [x1, #4008]
    11bc:	cmp	x0, x1
    11c0:	b.eq	1278 <ioctl@plt+0x238>  // b.none
    11c4:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    11c8:	ldr	x1, [x1, #4008]
    11cc:	bl	1010 <PyType_IsSubtype@plt>
    11d0:	mov	w22, w0
    11d4:	cbnz	w0, 1278 <ioctl@plt+0x238>
    11d8:	stp	x23, x24, [sp, #48]
    11dc:	str	x25, [sp, #64]
    11e0:	ldr	x0, [x19, #8]
    11e4:	bl	1030 <_PyLong_AsInt@plt>
    11e8:	mov	w24, w0
    11ec:	cmn	w0, #0x1
    11f0:	b.eq	12a4 <ioctl@plt+0x264>  // b.none
    11f4:	cmp	x20, #0x2
    11f8:	b.le	1308 <ioctl@plt+0x2c8>
    11fc:	ldr	x25, [x19, #16]
    1200:	cmp	x20, #0x3
    1204:	b.le	132c <ioctl@plt+0x2ec>
    1208:	ldr	x23, [x19, #24]
    120c:	cmp	x20, #0x4
    1210:	b.le	1310 <ioctl@plt+0x2d0>
    1214:	ldr	x0, [x19, #32]
    1218:	ldr	x0, [x0, #8]
    121c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1220:	ldr	x1, [x1, #4008]
    1224:	cmp	x0, x1
    1228:	b.eq	12dc <ioctl@plt+0x29c>  // b.none
    122c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1230:	ldr	x1, [x1, #4008]
    1234:	bl	1010 <PyType_IsSubtype@plt>
    1238:	cbnz	w0, 12dc <ioctl@plt+0x29c>
    123c:	ldr	x0, [x19, #32]
    1240:	bl	1030 <_PyLong_AsInt@plt>
    1244:	mov	w22, w0
    1248:	cmn	w0, #0x1
    124c:	b.ne	1310 <ioctl@plt+0x2d0>  // b.any
    1250:	bl	f90 <PyErr_Occurred@plt>
    1254:	mov	x1, x0
    1258:	mov	x0, #0x0                   	// #0
    125c:	cbz	x1, 1310 <ioctl@plt+0x2d0>
    1260:	ldp	x21, x22, [sp, #32]
    1264:	ldp	x23, x24, [sp, #48]
    1268:	ldr	x25, [sp, #64]
    126c:	b	1298 <ioctl@plt+0x258>
    1270:	ldp	x21, x22, [sp, #32]
    1274:	b	1298 <ioctl@plt+0x258>
    1278:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    127c:	add	x1, x1, #0x150
    1280:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1284:	ldr	x0, [x0, #4032]
    1288:	ldr	x0, [x0]
    128c:	bl	f10 <PyErr_SetString@plt>
    1290:	mov	x0, #0x0                   	// #0
    1294:	ldp	x21, x22, [sp, #32]
    1298:	ldp	x19, x20, [sp, #16]
    129c:	ldp	x29, x30, [sp], #112
    12a0:	ret
    12a4:	bl	f90 <PyErr_Occurred@plt>
    12a8:	mov	x23, x0
    12ac:	mov	x0, #0x0                   	// #0
    12b0:	cbnz	x23, 12cc <ioctl@plt+0x28c>
    12b4:	cmp	x20, #0x2
    12b8:	b.le	13e4 <ioctl@plt+0x3a4>
    12bc:	ldr	x25, [x19, #16]
    12c0:	cmp	x20, #0x3
    12c4:	b.gt	1208 <ioctl@plt+0x1c8>
    12c8:	b	1318 <ioctl@plt+0x2d8>
    12cc:	ldp	x21, x22, [sp, #32]
    12d0:	ldp	x23, x24, [sp, #48]
    12d4:	ldr	x25, [sp, #64]
    12d8:	b	1298 <ioctl@plt+0x258>
    12dc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    12e0:	add	x1, x1, #0x150
    12e4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    12e8:	ldr	x0, [x0, #4032]
    12ec:	ldr	x0, [x0]
    12f0:	bl	f10 <PyErr_SetString@plt>
    12f4:	mov	x0, #0x0                   	// #0
    12f8:	ldp	x21, x22, [sp, #32]
    12fc:	ldp	x23, x24, [sp, #48]
    1300:	ldr	x25, [sp, #64]
    1304:	b	1298 <ioctl@plt+0x258>
    1308:	mov	x23, #0x0                   	// #0
    130c:	mov	x25, #0x0                   	// #0
    1310:	cmp	w24, #0x8
    1314:	b.eq	1334 <ioctl@plt+0x2f4>  // b.none
    1318:	tbnz	w24, #0, 13e8 <ioctl@plt+0x3a8>
    131c:	tbz	w24, #1, 13f0 <ioctl@plt+0x3b0>
    1320:	mov	w0, #0x1                   	// #1
    1324:	strh	w0, [sp, #80]
    1328:	b	133c <ioctl@plt+0x2fc>
    132c:	mov	x23, #0x0                   	// #0
    1330:	b	1310 <ioctl@plt+0x2d0>
    1334:	mov	w0, #0x2                   	// #2
    1338:	strh	w0, [sp, #80]
    133c:	str	xzr, [sp, #96]
    1340:	str	xzr, [sp, #88]
    1344:	cbz	x23, 135c <ioctl@plt+0x31c>
    1348:	mov	x0, x23
    134c:	bl	fb0 <PyLong_AsLong@plt>
    1350:	str	x0, [sp, #88]
    1354:	bl	f90 <PyErr_Occurred@plt>
    1358:	cbnz	x0, 1408 <ioctl@plt+0x3c8>
    135c:	cbz	x25, 1374 <ioctl@plt+0x334>
    1360:	mov	x0, x25
    1364:	bl	fb0 <PyLong_AsLong@plt>
    1368:	str	x0, [sp, #96]
    136c:	bl	f90 <PyErr_Occurred@plt>
    1370:	cbnz	x0, 1408 <ioctl@plt+0x3c8>
    1374:	strh	w22, [sp, #82]
    1378:	tst	x24, #0x4
    137c:	mov	w22, #0x6                   	// #6
    1380:	mov	w0, #0x7                   	// #7
    1384:	csel	w22, w22, w0, ne  // ne = any
    1388:	add	x23, sp, #0x50
    138c:	bl	fe0 <PyEval_SaveThread@plt>
    1390:	mov	x20, x0
    1394:	mov	x2, x23
    1398:	mov	w1, w22
    139c:	mov	w0, w21
    13a0:	bl	fd0 <fcntl64@plt>
    13a4:	mov	w19, w0
    13a8:	mov	x0, x20
    13ac:	bl	ec0 <PyEval_RestoreThread@plt>
    13b0:	cmn	w19, #0x1
    13b4:	b.ne	141c <ioctl@plt+0x3dc>  // b.any
    13b8:	bl	1020 <__errno_location@plt>
    13bc:	ldr	w0, [x0]
    13c0:	cmp	w0, #0x4
    13c4:	b.ne	1444 <ioctl@plt+0x404>  // b.any
    13c8:	bl	1000 <PyErr_CheckSignals@plt>
    13cc:	cbz	w0, 138c <ioctl@plt+0x34c>
    13d0:	mov	x0, #0x0                   	// #0
    13d4:	ldp	x21, x22, [sp, #32]
    13d8:	ldp	x23, x24, [sp, #48]
    13dc:	ldr	x25, [sp, #64]
    13e0:	b	1298 <ioctl@plt+0x258>
    13e4:	mov	x25, x23
    13e8:	strh	wzr, [sp, #80]
    13ec:	b	133c <ioctl@plt+0x2fc>
    13f0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    13f4:	add	x1, x1, #0x178
    13f8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    13fc:	ldr	x0, [x0, #4024]
    1400:	ldr	x0, [x0]
    1404:	bl	f10 <PyErr_SetString@plt>
    1408:	mov	x0, #0x0                   	// #0
    140c:	ldp	x21, x22, [sp, #32]
    1410:	ldp	x23, x24, [sp, #48]
    1414:	ldr	x25, [sp, #64]
    1418:	b	1298 <ioctl@plt+0x258>
    141c:	tbnz	w19, #31, 1444 <ioctl@plt+0x404>
    1420:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1424:	ldr	x0, [x0, #4056]
    1428:	ldr	x1, [x0]
    142c:	add	x1, x1, #0x1
    1430:	str	x1, [x0]
    1434:	ldp	x21, x22, [sp, #32]
    1438:	ldp	x23, x24, [sp, #48]
    143c:	ldr	x25, [sp, #64]
    1440:	b	1298 <ioctl@plt+0x258>
    1444:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1448:	ldr	x0, [x0, #4040]
    144c:	ldr	x0, [x0]
    1450:	bl	ed0 <PyErr_SetFromErrno@plt>
    1454:	ldp	x21, x22, [sp, #32]
    1458:	ldp	x23, x24, [sp, #48]
    145c:	ldr	x25, [sp, #64]
    1460:	b	1298 <ioctl@plt+0x258>
    1464:	mov	x0, #0x0                   	// #0
    1468:	b	1298 <ioctl@plt+0x258>
    146c:	sub	sp, sp, #0x4a0
    1470:	stp	x29, x30, [sp]
    1474:	mov	x29, sp
    1478:	stp	x19, x20, [sp, #16]
    147c:	stp	x21, x22, [sp, #32]
    1480:	mov	w22, w1
    1484:	mov	w21, w2
    1488:	str	wzr, [sp, #1180]
    148c:	cbz	x3, 16ec <ioctl@plt+0x6ac>
    1490:	mov	x19, x3
    1494:	mov	w20, w4
    1498:	add	x2, sp, #0x448
    149c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    14a0:	add	x1, x1, #0x198
    14a4:	mov	x0, x3
    14a8:	bl	f30 <_PyArg_Parse_SizeT@plt>
    14ac:	cbz	w0, 15fc <ioctl@plt+0x5bc>
    14b0:	stp	x23, x24, [sp, #48]
    14b4:	ldr	x23, [sp, #1096]
    14b8:	ldr	x19, [sp, #1112]
    14bc:	cbz	w20, 1530 <ioctl@plt+0x4f0>
    14c0:	cmp	x19, #0x400
    14c4:	b.le	1514 <ioctl@plt+0x4d4>
    14c8:	add	x0, sp, #0x40
    14cc:	cmp	x23, x0
    14d0:	b.eq	1550 <ioctl@plt+0x510>  // b.none
    14d4:	mov	x2, x23
    14d8:	mov	w1, w21
    14dc:	mov	w0, w22
    14e0:	bl	1040 <ioctl@plt>
    14e4:	mov	w21, w0
    14e8:	cmp	w20, #0x0
    14ec:	cset	w20, ne  // ne = any
    14f0:	add	x0, sp, #0x448
    14f4:	bl	ee0 <PyBuffer_Release@plt>
    14f8:	tbnz	w21, #31, 15e0 <ioctl@plt+0x5a0>
    14fc:	cbnz	w20, 15a4 <ioctl@plt+0x564>
    1500:	mov	x1, x19
    1504:	add	x0, sp, #0x40
    1508:	bl	f00 <PyBytes_FromStringAndSize@plt>
    150c:	ldp	x23, x24, [sp, #48]
    1510:	b	171c <ioctl@plt+0x6dc>
    1514:	add	x24, sp, #0x40
    1518:	mov	x2, x19
    151c:	mov	x1, x23
    1520:	mov	x0, x24
    1524:	bl	ea0 <memcpy@plt>
    1528:	strb	wzr, [x24, x19]
    152c:	b	1550 <ioctl@plt+0x510>
    1530:	cmp	x19, #0x400
    1534:	b.gt	15b4 <ioctl@plt+0x574>
    1538:	add	x24, sp, #0x40
    153c:	mov	x2, x19
    1540:	mov	x1, x23
    1544:	mov	x0, x24
    1548:	bl	ea0 <memcpy@plt>
    154c:	strb	wzr, [x24, x19]
    1550:	bl	fe0 <PyEval_SaveThread@plt>
    1554:	mov	x24, x0
    1558:	add	x2, sp, #0x40
    155c:	mov	w1, w21
    1560:	mov	w0, w22
    1564:	bl	1040 <ioctl@plt>
    1568:	mov	w21, w0
    156c:	mov	x0, x24
    1570:	bl	ec0 <PyEval_RestoreThread@plt>
    1574:	cmp	w20, #0x0
    1578:	cset	w20, ne  // ne = any
    157c:	cmp	x19, #0x400
    1580:	ccmp	w20, #0x0, #0x4, le
    1584:	b.eq	14f0 <ioctl@plt+0x4b0>  // b.none
    1588:	mov	x2, x19
    158c:	add	x1, sp, #0x40
    1590:	mov	x0, x23
    1594:	bl	ea0 <memcpy@plt>
    1598:	add	x0, sp, #0x448
    159c:	bl	ee0 <PyBuffer_Release@plt>
    15a0:	tbnz	w21, #31, 15e0 <ioctl@plt+0x5a0>
    15a4:	sxtw	x0, w21
    15a8:	bl	f40 <PyLong_FromLong@plt>
    15ac:	ldp	x23, x24, [sp, #48]
    15b0:	b	171c <ioctl@plt+0x6dc>
    15b4:	add	x0, sp, #0x448
    15b8:	bl	ee0 <PyBuffer_Release@plt>
    15bc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    15c0:	add	x1, x1, #0x1a8
    15c4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    15c8:	ldr	x0, [x0, #4024]
    15cc:	ldr	x0, [x0]
    15d0:	bl	f10 <PyErr_SetString@plt>
    15d4:	mov	x0, #0x0                   	// #0
    15d8:	ldp	x23, x24, [sp, #48]
    15dc:	b	171c <ioctl@plt+0x6dc>
    15e0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    15e4:	ldr	x0, [x0, #4040]
    15e8:	ldr	x0, [x0]
    15ec:	bl	ed0 <PyErr_SetFromErrno@plt>
    15f0:	mov	x0, #0x0                   	// #0
    15f4:	ldp	x23, x24, [sp, #48]
    15f8:	b	171c <ioctl@plt+0x6dc>
    15fc:	bl	f50 <PyErr_Clear@plt>
    1600:	add	x2, sp, #0x448
    1604:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1608:	add	x1, x1, #0x1c8
    160c:	mov	x0, x19
    1610:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1614:	cbz	w0, 16d0 <ioctl@plt+0x690>
    1618:	ldr	x1, [sp, #1096]
    161c:	ldr	x20, [sp, #1112]
    1620:	cmp	x20, #0x400
    1624:	b.gt	1684 <ioctl@plt+0x644>
    1628:	stp	x23, x24, [sp, #48]
    162c:	add	x19, sp, #0x40
    1630:	mov	x2, x20
    1634:	mov	x0, x19
    1638:	bl	ea0 <memcpy@plt>
    163c:	strb	wzr, [x19, x20]
    1640:	bl	fe0 <PyEval_SaveThread@plt>
    1644:	mov	x23, x0
    1648:	mov	x2, x19
    164c:	mov	w1, w21
    1650:	mov	w0, w22
    1654:	bl	1040 <ioctl@plt>
    1658:	mov	w19, w0
    165c:	mov	x0, x23
    1660:	bl	ec0 <PyEval_RestoreThread@plt>
    1664:	tbnz	w19, #31, 16ac <ioctl@plt+0x66c>
    1668:	add	x0, sp, #0x448
    166c:	bl	ee0 <PyBuffer_Release@plt>
    1670:	mov	x1, x20
    1674:	add	x0, sp, #0x40
    1678:	bl	f00 <PyBytes_FromStringAndSize@plt>
    167c:	ldp	x23, x24, [sp, #48]
    1680:	b	171c <ioctl@plt+0x6dc>
    1684:	add	x0, sp, #0x448
    1688:	bl	ee0 <PyBuffer_Release@plt>
    168c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1690:	add	x1, x1, #0x1a8
    1694:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1698:	ldr	x0, [x0, #4024]
    169c:	ldr	x0, [x0]
    16a0:	bl	f10 <PyErr_SetString@plt>
    16a4:	mov	x0, #0x0                   	// #0
    16a8:	b	171c <ioctl@plt+0x6dc>
    16ac:	add	x0, sp, #0x448
    16b0:	bl	ee0 <PyBuffer_Release@plt>
    16b4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    16b8:	ldr	x0, [x0, #4040]
    16bc:	ldr	x0, [x0]
    16c0:	bl	ed0 <PyErr_SetFromErrno@plt>
    16c4:	mov	x0, #0x0                   	// #0
    16c8:	ldp	x23, x24, [sp, #48]
    16cc:	b	171c <ioctl@plt+0x6dc>
    16d0:	bl	f50 <PyErr_Clear@plt>
    16d4:	add	x2, sp, #0x49c
    16d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    16dc:	add	x1, x1, #0x1d8
    16e0:	mov	x0, x19
    16e4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    16e8:	cbz	w0, 1748 <ioctl@plt+0x708>
    16ec:	bl	fe0 <PyEval_SaveThread@plt>
    16f0:	mov	x20, x0
    16f4:	ldr	w2, [sp, #1180]
    16f8:	mov	w1, w21
    16fc:	mov	w0, w22
    1700:	bl	1040 <ioctl@plt>
    1704:	mov	w19, w0
    1708:	mov	x0, x20
    170c:	bl	ec0 <PyEval_RestoreThread@plt>
    1710:	tbnz	w19, #31, 1730 <ioctl@plt+0x6f0>
    1714:	sxtw	x0, w19
    1718:	bl	f40 <PyLong_FromLong@plt>
    171c:	ldp	x19, x20, [sp, #16]
    1720:	ldp	x21, x22, [sp, #32]
    1724:	ldp	x29, x30, [sp]
    1728:	add	sp, sp, #0x4a0
    172c:	ret
    1730:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1734:	ldr	x0, [x0, #4040]
    1738:	ldr	x0, [x0]
    173c:	bl	ed0 <PyErr_SetFromErrno@plt>
    1740:	mov	x0, #0x0                   	// #0
    1744:	b	171c <ioctl@plt+0x6dc>
    1748:	mov	x0, #0x0                   	// #0
    174c:	b	171c <ioctl@plt+0x6dc>
    1750:	sub	sp, sp, #0x460
    1754:	stp	x29, x30, [sp]
    1758:	mov	x29, sp
    175c:	stp	x19, x20, [sp, #16]
    1760:	stp	x21, x22, [sp, #32]
    1764:	mov	w21, w1
    1768:	mov	w22, w2
    176c:	str	wzr, [sp, #1116]
    1770:	cbz	x3, 1870 <ioctl@plt+0x830>
    1774:	mov	x19, x3
    1778:	add	x3, sp, #0x448
    177c:	add	x2, sp, #0x450
    1780:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1784:	add	x1, x1, #0x240
    1788:	mov	x0, x19
    178c:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1790:	cbz	w0, 1854 <ioctl@plt+0x814>
    1794:	ldr	x2, [sp, #1096]
    1798:	cmp	x2, #0x400
    179c:	b.hi	1804 <ioctl@plt+0x7c4>  // b.pmore
    17a0:	str	x23, [sp, #48]
    17a4:	ldr	x1, [sp, #1104]
    17a8:	add	x0, sp, #0x48
    17ac:	bl	ea0 <memcpy@plt>
    17b0:	add	x23, sp, #0x48
    17b4:	bl	fe0 <PyEval_SaveThread@plt>
    17b8:	mov	x20, x0
    17bc:	mov	x2, x23
    17c0:	mov	w1, w22
    17c4:	mov	w0, w21
    17c8:	bl	fd0 <fcntl64@plt>
    17cc:	mov	w19, w0
    17d0:	mov	x0, x20
    17d4:	bl	ec0 <PyEval_RestoreThread@plt>
    17d8:	cmn	w19, #0x1
    17dc:	b.ne	1824 <ioctl@plt+0x7e4>  // b.any
    17e0:	bl	1020 <__errno_location@plt>
    17e4:	ldr	w0, [x0]
    17e8:	cmp	w0, #0x4
    17ec:	b.ne	183c <ioctl@plt+0x7fc>  // b.any
    17f0:	bl	1000 <PyErr_CheckSignals@plt>
    17f4:	cbz	w0, 17b4 <ioctl@plt+0x774>
    17f8:	mov	x0, #0x0                   	// #0
    17fc:	ldr	x23, [sp, #48]
    1800:	b	18c8 <ioctl@plt+0x888>
    1804:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1808:	add	x1, x1, #0x248
    180c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1810:	ldr	x0, [x0, #4024]
    1814:	ldr	x0, [x0]
    1818:	bl	f10 <PyErr_SetString@plt>
    181c:	mov	x0, #0x0                   	// #0
    1820:	b	18c8 <ioctl@plt+0x888>
    1824:	tbnz	w19, #31, 183c <ioctl@plt+0x7fc>
    1828:	ldr	x1, [sp, #1096]
    182c:	add	x0, sp, #0x48
    1830:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1834:	ldr	x23, [sp, #48]
    1838:	b	18c8 <ioctl@plt+0x888>
    183c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1840:	ldr	x0, [x0, #4040]
    1844:	ldr	x0, [x0]
    1848:	bl	ed0 <PyErr_SetFromErrno@plt>
    184c:	ldr	x23, [sp, #48]
    1850:	b	18c8 <ioctl@plt+0x888>
    1854:	bl	f50 <PyErr_Clear@plt>
    1858:	add	x2, sp, #0x45c
    185c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1860:	add	x1, x1, #0x268
    1864:	mov	x0, x19
    1868:	bl	f30 <_PyArg_Parse_SizeT@plt>
    186c:	cbz	w0, 18f0 <ioctl@plt+0x8b0>
    1870:	bl	fe0 <PyEval_SaveThread@plt>
    1874:	mov	x20, x0
    1878:	ldr	w2, [sp, #1116]
    187c:	mov	w1, w22
    1880:	mov	w0, w21
    1884:	bl	fd0 <fcntl64@plt>
    1888:	mov	w19, w0
    188c:	mov	x0, x20
    1890:	bl	ec0 <PyEval_RestoreThread@plt>
    1894:	cmn	w19, #0x1
    1898:	b.ne	18bc <ioctl@plt+0x87c>  // b.any
    189c:	bl	1020 <__errno_location@plt>
    18a0:	ldr	w0, [x0]
    18a4:	cmp	w0, #0x4
    18a8:	b.ne	18dc <ioctl@plt+0x89c>  // b.any
    18ac:	bl	1000 <PyErr_CheckSignals@plt>
    18b0:	cbz	w0, 1870 <ioctl@plt+0x830>
    18b4:	mov	x0, #0x0                   	// #0
    18b8:	b	18c8 <ioctl@plt+0x888>
    18bc:	tbnz	w19, #31, 18dc <ioctl@plt+0x89c>
    18c0:	sxtw	x0, w19
    18c4:	bl	f40 <PyLong_FromLong@plt>
    18c8:	ldp	x19, x20, [sp, #16]
    18cc:	ldp	x21, x22, [sp, #32]
    18d0:	ldp	x29, x30, [sp]
    18d4:	add	sp, sp, #0x460
    18d8:	ret
    18dc:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    18e0:	ldr	x0, [x0, #4040]
    18e4:	ldr	x0, [x0]
    18e8:	bl	ed0 <PyErr_SetFromErrno@plt>
    18ec:	b	18c8 <ioctl@plt+0x888>
    18f0:	mov	x0, #0x0                   	// #0
    18f4:	b	18c8 <ioctl@plt+0x888>
    18f8:	stp	x29, x30, [sp, #-64]!
    18fc:	mov	x29, sp
    1900:	stp	x19, x20, [sp, #16]
    1904:	stp	x21, x22, [sp, #32]
    1908:	mov	x22, x0
    190c:	mov	x19, x1
    1910:	mov	x20, x2
    1914:	sub	x0, x2, #0x2
    1918:	cmp	x0, #0x1
    191c:	b.ls	193c <ioctl@plt+0x8fc>  // b.plast
    1920:	mov	x3, #0x3                   	// #3
    1924:	mov	x2, #0x2                   	// #2
    1928:	mov	x1, x20
    192c:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x36c>
    1930:	add	x0, x0, #0x2d0
    1934:	bl	f80 <_PyArg_CheckPositional@plt>
    1938:	cbz	w0, 19fc <ioctl@plt+0x9bc>
    193c:	ldr	x0, [x19]
    1940:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1944:	mov	w21, w0
    1948:	mov	x0, #0x0                   	// #0
    194c:	tbnz	w21, #31, 19b4 <ioctl@plt+0x974>
    1950:	ldr	x0, [x19, #8]
    1954:	ldr	x0, [x0, #8]
    1958:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    195c:	ldr	x1, [x1, #4008]
    1960:	cmp	x0, x1
    1964:	b.eq	19c4 <ioctl@plt+0x984>  // b.none
    1968:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    196c:	ldr	x1, [x1, #4008]
    1970:	bl	1010 <PyType_IsSubtype@plt>
    1974:	cbnz	w0, 19c4 <ioctl@plt+0x984>
    1978:	str	x23, [sp, #48]
    197c:	ldr	x0, [x19, #8]
    1980:	bl	1030 <_PyLong_AsInt@plt>
    1984:	mov	w23, w0
    1988:	cmn	w0, #0x1
    198c:	b.eq	19e4 <ioctl@plt+0x9a4>  // b.none
    1990:	mov	x3, #0x0                   	// #0
    1994:	cmp	x20, #0x2
    1998:	b.le	19a0 <ioctl@plt+0x960>
    199c:	ldr	x3, [x19, #16]
    19a0:	mov	w2, w23
    19a4:	mov	w1, w21
    19a8:	mov	x0, x22
    19ac:	bl	1750 <ioctl@plt+0x710>
    19b0:	ldr	x23, [sp, #48]
    19b4:	ldp	x19, x20, [sp, #16]
    19b8:	ldp	x21, x22, [sp, #32]
    19bc:	ldp	x29, x30, [sp], #64
    19c0:	ret
    19c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    19c8:	add	x1, x1, #0x150
    19cc:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    19d0:	ldr	x0, [x0, #4032]
    19d4:	ldr	x0, [x0]
    19d8:	bl	f10 <PyErr_SetString@plt>
    19dc:	mov	x0, #0x0                   	// #0
    19e0:	b	19b4 <ioctl@plt+0x974>
    19e4:	bl	f90 <PyErr_Occurred@plt>
    19e8:	mov	x1, x0
    19ec:	mov	x0, #0x0                   	// #0
    19f0:	cbz	x1, 1990 <ioctl@plt+0x950>
    19f4:	ldr	x23, [sp, #48]
    19f8:	b	19b4 <ioctl@plt+0x974>
    19fc:	mov	x0, #0x0                   	// #0
    1a00:	b	19b4 <ioctl@plt+0x974>
    1a04:	stp	x29, x30, [sp, #-64]!
    1a08:	mov	x29, sp
    1a0c:	stp	x19, x20, [sp, #16]
    1a10:	stp	x21, x22, [sp, #32]
    1a14:	mov	x22, x0
    1a18:	mov	x19, x1
    1a1c:	mov	x20, x2
    1a20:	sub	x0, x2, #0x2
    1a24:	cmp	x0, #0x2
    1a28:	b.ls	1a48 <ioctl@plt+0xa08>  // b.plast
    1a2c:	mov	x3, #0x4                   	// #4
    1a30:	mov	x2, #0x2                   	// #2
    1a34:	mov	x1, x20
    1a38:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x36c>
    1a3c:	add	x0, x0, #0x2d8
    1a40:	bl	f80 <_PyArg_CheckPositional@plt>
    1a44:	cbz	w0, 1b38 <ioctl@plt+0xaf8>
    1a48:	ldr	x0, [x19]
    1a4c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1a50:	mov	w21, w0
    1a54:	mov	x0, #0x0                   	// #0
    1a58:	tbnz	w21, #31, 1b28 <ioctl@plt+0xae8>
    1a5c:	ldr	x0, [x19, #8]
    1a60:	ldr	x0, [x0, #8]
    1a64:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1a68:	ldr	x1, [x1, #4008]
    1a6c:	cmp	x0, x1
    1a70:	b.eq	1ad0 <ioctl@plt+0xa90>  // b.none
    1a74:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1a78:	ldr	x1, [x1, #4008]
    1a7c:	bl	1010 <PyType_IsSubtype@plt>
    1a80:	cbnz	w0, 1ad0 <ioctl@plt+0xa90>
    1a84:	stp	x23, x24, [sp, #48]
    1a88:	ldr	x0, [x19, #8]
    1a8c:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    1a90:	mov	x23, x0
    1a94:	cmn	w0, #0x1
    1a98:	b.eq	1af0 <ioctl@plt+0xab0>  // b.none
    1a9c:	cmp	x20, #0x2
    1aa0:	b.le	1b08 <ioctl@plt+0xac8>
    1aa4:	ldr	x24, [x19, #16]
    1aa8:	mov	w4, #0x1                   	// #1
    1aac:	cmp	x20, #0x3
    1ab0:	b.le	1b10 <ioctl@plt+0xad0>
    1ab4:	ldr	x0, [x19, #24]
    1ab8:	bl	fc0 <PyObject_IsTrue@plt>
    1abc:	mov	w4, w0
    1ac0:	tbz	w0, #31, 1b10 <ioctl@plt+0xad0>
    1ac4:	mov	x0, #0x0                   	// #0
    1ac8:	ldp	x23, x24, [sp, #48]
    1acc:	b	1b28 <ioctl@plt+0xae8>
    1ad0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1ad4:	add	x1, x1, #0x150
    1ad8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1adc:	ldr	x0, [x0, #4032]
    1ae0:	ldr	x0, [x0]
    1ae4:	bl	f10 <PyErr_SetString@plt>
    1ae8:	mov	x0, #0x0                   	// #0
    1aec:	b	1b28 <ioctl@plt+0xae8>
    1af0:	bl	f90 <PyErr_Occurred@plt>
    1af4:	mov	x1, x0
    1af8:	mov	x0, #0x0                   	// #0
    1afc:	cbz	x1, 1a9c <ioctl@plt+0xa5c>
    1b00:	ldp	x23, x24, [sp, #48]
    1b04:	b	1b28 <ioctl@plt+0xae8>
    1b08:	mov	w4, #0x1                   	// #1
    1b0c:	mov	x24, #0x0                   	// #0
    1b10:	mov	x3, x24
    1b14:	mov	w2, w23
    1b18:	mov	w1, w21
    1b1c:	mov	x0, x22
    1b20:	bl	146c <ioctl@plt+0x42c>
    1b24:	ldp	x23, x24, [sp, #48]
    1b28:	ldp	x19, x20, [sp, #16]
    1b2c:	ldp	x21, x22, [sp, #32]
    1b30:	ldp	x29, x30, [sp], #64
    1b34:	ret
    1b38:	mov	x0, #0x0                   	// #0
    1b3c:	b	1b28 <ioctl@plt+0xae8>
    1b40:	stp	x29, x30, [sp, #-48]!
    1b44:	mov	x29, sp
    1b48:	stp	x19, x20, [sp, #16]
    1b4c:	mov	x19, x1
    1b50:	cmp	x2, #0x2
    1b54:	b.eq	1b74 <ioctl@plt+0xb34>  // b.none
    1b58:	mov	x1, x2
    1b5c:	mov	x3, #0x2                   	// #2
    1b60:	mov	x2, x3
    1b64:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x36c>
    1b68:	add	x0, x0, #0x2e0
    1b6c:	bl	f80 <_PyArg_CheckPositional@plt>
    1b70:	cbz	w0, 1c8c <ioctl@plt+0xc4c>
    1b74:	ldr	x0, [x19]
    1b78:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1b7c:	mov	w20, w0
    1b80:	mov	x0, #0x0                   	// #0
    1b84:	tbnz	w20, #31, 1c68 <ioctl@plt+0xc28>
    1b88:	ldr	x0, [x19, #8]
    1b8c:	ldr	x0, [x0, #8]
    1b90:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1b94:	ldr	x1, [x1, #4008]
    1b98:	cmp	x0, x1
    1b9c:	b.eq	1c14 <ioctl@plt+0xbd4>  // b.none
    1ba0:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x1136c>
    1ba4:	ldr	x1, [x1, #4008]
    1ba8:	bl	1010 <PyType_IsSubtype@plt>
    1bac:	cbnz	w0, 1c14 <ioctl@plt+0xbd4>
    1bb0:	stp	x21, x22, [sp, #32]
    1bb4:	ldr	x0, [x19, #8]
    1bb8:	bl	1030 <_PyLong_AsInt@plt>
    1bbc:	mov	w22, w0
    1bc0:	cmn	w0, #0x1
    1bc4:	b.eq	1c34 <ioctl@plt+0xbf4>  // b.none
    1bc8:	bl	fe0 <PyEval_SaveThread@plt>
    1bcc:	mov	x21, x0
    1bd0:	mov	w1, w22
    1bd4:	mov	w0, w20
    1bd8:	bl	f20 <flock@plt>
    1bdc:	mov	w19, w0
    1be0:	mov	x0, x21
    1be4:	bl	ec0 <PyEval_RestoreThread@plt>
    1be8:	cmn	w19, #0x1
    1bec:	b.ne	1c4c <ioctl@plt+0xc0c>  // b.any
    1bf0:	bl	1020 <__errno_location@plt>
    1bf4:	ldr	w0, [x0]
    1bf8:	cmp	w0, #0x4
    1bfc:	b.ne	1c74 <ioctl@plt+0xc34>  // b.any
    1c00:	bl	1000 <PyErr_CheckSignals@plt>
    1c04:	cbz	w0, 1bc8 <ioctl@plt+0xb88>
    1c08:	mov	x0, #0x0                   	// #0
    1c0c:	ldp	x21, x22, [sp, #32]
    1c10:	b	1c68 <ioctl@plt+0xc28>
    1c14:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1c18:	add	x1, x1, #0x150
    1c1c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1c20:	ldr	x0, [x0, #4032]
    1c24:	ldr	x0, [x0]
    1c28:	bl	f10 <PyErr_SetString@plt>
    1c2c:	mov	x0, #0x0                   	// #0
    1c30:	b	1c68 <ioctl@plt+0xc28>
    1c34:	bl	f90 <PyErr_Occurred@plt>
    1c38:	mov	x1, x0
    1c3c:	mov	x0, #0x0                   	// #0
    1c40:	cbz	x1, 1bc8 <ioctl@plt+0xb88>
    1c44:	ldp	x21, x22, [sp, #32]
    1c48:	b	1c68 <ioctl@plt+0xc28>
    1c4c:	tbnz	w19, #31, 1c74 <ioctl@plt+0xc34>
    1c50:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1c54:	ldr	x0, [x0, #4056]
    1c58:	ldr	x1, [x0]
    1c5c:	add	x1, x1, #0x1
    1c60:	str	x1, [x0]
    1c64:	ldp	x21, x22, [sp, #32]
    1c68:	ldp	x19, x20, [sp, #16]
    1c6c:	ldp	x29, x30, [sp], #48
    1c70:	ret
    1c74:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x1136c>
    1c78:	ldr	x0, [x0, #4040]
    1c7c:	ldr	x0, [x0]
    1c80:	bl	ed0 <PyErr_SetFromErrno@plt>
    1c84:	ldp	x21, x22, [sp, #32]
    1c88:	b	1c68 <ioctl@plt+0xc28>
    1c8c:	mov	x0, #0x0                   	// #0
    1c90:	b	1c68 <ioctl@plt+0xc28>

0000000000001c94 <PyInit_fcntl@@Base>:
    1c94:	stp	x29, x30, [sp, #-32]!
    1c98:	mov	x29, sp
    1c9c:	str	x19, [sp, #16]
    1ca0:	mov	w1, #0x3f5                 	// #1013
    1ca4:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x1236c>
    1ca8:	add	x0, x0, #0xe0
    1cac:	bl	fa0 <PyModule_Create2@plt>
    1cb0:	mov	x19, x0
    1cb4:	cbz	x0, 2120 <PyInit_fcntl@@Base+0x48c>
    1cb8:	mov	x2, #0x1                   	// #1
    1cbc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1cc0:	add	x1, x1, #0x2e8
    1cc4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cc8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1ccc:	mov	x2, #0x2                   	// #2
    1cd0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1cd4:	add	x1, x1, #0x2f0
    1cd8:	mov	x0, x19
    1cdc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ce0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1ce4:	mov	x2, #0x4                   	// #4
    1ce8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1cec:	add	x1, x1, #0x2f8
    1cf0:	mov	x0, x19
    1cf4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cf8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1cfc:	mov	x2, #0x8                   	// #8
    1d00:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d04:	add	x1, x1, #0x300
    1d08:	mov	x0, x19
    1d0c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d10:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d14:	mov	x2, #0x20                  	// #32
    1d18:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d1c:	add	x1, x1, #0x308
    1d20:	mov	x0, x19
    1d24:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d28:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d2c:	mov	x2, #0x40                  	// #64
    1d30:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d34:	add	x1, x1, #0x318
    1d38:	mov	x0, x19
    1d3c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d40:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d44:	mov	x2, #0x80                  	// #128
    1d48:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d4c:	add	x1, x1, #0x328
    1d50:	mov	x0, x19
    1d54:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d58:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d5c:	mov	x2, #0xc0                  	// #192
    1d60:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d64:	add	x1, x1, #0x338
    1d68:	mov	x0, x19
    1d6c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d70:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d74:	mov	x2, #0x0                   	// #0
    1d78:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d7c:	add	x1, x1, #0x340
    1d80:	mov	x0, x19
    1d84:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d88:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1d8c:	mov	x2, #0x406                 	// #1030
    1d90:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1d94:	add	x1, x1, #0x348
    1d98:	mov	x0, x19
    1d9c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1da0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1da4:	mov	x2, #0x1                   	// #1
    1da8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1dac:	add	x1, x1, #0x358
    1db0:	mov	x0, x19
    1db4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1db8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1dbc:	mov	x2, #0x2                   	// #2
    1dc0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1dc4:	add	x1, x1, #0x360
    1dc8:	mov	x0, x19
    1dcc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1dd0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1dd4:	mov	x2, #0x3                   	// #3
    1dd8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1ddc:	add	x1, x1, #0x368
    1de0:	mov	x0, x19
    1de4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1de8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1dec:	mov	x2, #0x4                   	// #4
    1df0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1df4:	add	x1, x1, #0x370
    1df8:	mov	x0, x19
    1dfc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e00:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e04:	mov	x2, #0x5                   	// #5
    1e08:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e0c:	add	x1, x1, #0x378
    1e10:	mov	x0, x19
    1e14:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e18:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e1c:	mov	x2, #0x6                   	// #6
    1e20:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e24:	add	x1, x1, #0x380
    1e28:	mov	x0, x19
    1e2c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e30:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e34:	mov	x2, #0x7                   	// #7
    1e38:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e3c:	add	x1, x1, #0x388
    1e40:	mov	x0, x19
    1e44:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e48:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e4c:	mov	x2, #0x9                   	// #9
    1e50:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e54:	add	x1, x1, #0x398
    1e58:	mov	x0, x19
    1e5c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e60:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e64:	mov	x2, #0x8                   	// #8
    1e68:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e6c:	add	x1, x1, #0x3a8
    1e70:	mov	x0, x19
    1e74:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e78:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e7c:	mov	x2, #0xb                   	// #11
    1e80:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e84:	add	x1, x1, #0x3b8
    1e88:	mov	x0, x19
    1e8c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e90:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1e94:	mov	x2, #0xa                   	// #10
    1e98:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1e9c:	add	x1, x1, #0x3c8
    1ea0:	mov	x0, x19
    1ea4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ea8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1eac:	mov	x2, #0x0                   	// #0
    1eb0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1eb4:	add	x1, x1, #0x3d8
    1eb8:	mov	x0, x19
    1ebc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ec0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1ec4:	mov	x2, #0x1                   	// #1
    1ec8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1ecc:	add	x1, x1, #0x3e0
    1ed0:	mov	x0, x19
    1ed4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ed8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1edc:	mov	x2, #0x2                   	// #2
    1ee0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1ee4:	add	x1, x1, #0x3e8
    1ee8:	mov	x0, x19
    1eec:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ef0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1ef4:	mov	x2, #0x5                   	// #5
    1ef8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1efc:	add	x1, x1, #0x3f0
    1f00:	mov	x0, x19
    1f04:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f08:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f0c:	mov	x2, #0x6                   	// #6
    1f10:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f14:	add	x1, x1, #0x400
    1f18:	mov	x0, x19
    1f1c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f20:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f24:	mov	x2, #0x7                   	// #7
    1f28:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f2c:	add	x1, x1, #0x410
    1f30:	mov	x0, x19
    1f34:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f38:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f3c:	mov	x2, #0x2000                	// #8192
    1f40:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f44:	add	x1, x1, #0x420
    1f48:	mov	x0, x19
    1f4c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f50:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f54:	mov	x2, #0x400                 	// #1024
    1f58:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f5c:	add	x1, x1, #0x428
    1f60:	mov	x0, x19
    1f64:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f68:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f6c:	mov	x2, #0x401                 	// #1025
    1f70:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f74:	add	x1, x1, #0x438
    1f78:	mov	x0, x19
    1f7c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f80:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f84:	mov	x2, #0x402                 	// #1026
    1f88:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1f8c:	add	x1, x1, #0x448
    1f90:	mov	x0, x19
    1f94:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f98:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1f9c:	mov	x2, #0x4                   	// #4
    1fa0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1fa4:	add	x1, x1, #0x458
    1fa8:	mov	x0, x19
    1fac:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fb0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1fb4:	mov	x2, #0x8                   	// #8
    1fb8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1fbc:	add	x1, x1, #0x460
    1fc0:	mov	x0, x19
    1fc4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fc8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1fcc:	mov	x2, #0x1                   	// #1
    1fd0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1fd4:	add	x1, x1, #0x468
    1fd8:	mov	x0, x19
    1fdc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fe0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1fe4:	mov	x2, #0x1                   	// #1
    1fe8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    1fec:	add	x1, x1, #0x478
    1ff0:	mov	x0, x19
    1ff4:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ff8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    1ffc:	mov	x2, #0x2                   	// #2
    2000:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    2004:	add	x1, x1, #0x488
    2008:	mov	x0, x19
    200c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2010:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    2014:	mov	x2, #0x4                   	// #4
    2018:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    201c:	add	x1, x1, #0x498
    2020:	mov	x0, x19
    2024:	bl	eb0 <PyModule_AddIntConstant@plt>
    2028:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    202c:	mov	x2, #0x8                   	// #8
    2030:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    2034:	add	x1, x1, #0x4a8
    2038:	mov	x0, x19
    203c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2040:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    2044:	mov	x2, #0x10                  	// #16
    2048:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    204c:	add	x1, x1, #0x4b8
    2050:	mov	x0, x19
    2054:	bl	eb0 <PyModule_AddIntConstant@plt>
    2058:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    205c:	mov	x2, #0x20                  	// #32
    2060:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    2064:	add	x1, x1, #0x4c8
    2068:	mov	x0, x19
    206c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2070:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    2074:	mov	x2, #0x80000000            	// #2147483648
    2078:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    207c:	add	x1, x1, #0x4d8
    2080:	mov	x0, x19
    2084:	bl	eb0 <PyModule_AddIntConstant@plt>
    2088:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    208c:	mov	x2, #0x409                 	// #1033
    2090:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    2094:	add	x1, x1, #0x4e8
    2098:	mov	x0, x19
    209c:	bl	eb0 <PyModule_AddIntConstant@plt>
    20a0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    20a4:	mov	x2, #0x40a                 	// #1034
    20a8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    20ac:	add	x1, x1, #0x4f8
    20b0:	mov	x0, x19
    20b4:	bl	eb0 <PyModule_AddIntConstant@plt>
    20b8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    20bc:	mov	x2, #0x1                   	// #1
    20c0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    20c4:	add	x1, x1, #0x508
    20c8:	mov	x0, x19
    20cc:	bl	eb0 <PyModule_AddIntConstant@plt>
    20d0:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    20d4:	mov	x2, #0x2                   	// #2
    20d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    20dc:	add	x1, x1, #0x518
    20e0:	mov	x0, x19
    20e4:	bl	eb0 <PyModule_AddIntConstant@plt>
    20e8:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    20ec:	mov	x2, #0x4                   	// #4
    20f0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    20f4:	add	x1, x1, #0x528
    20f8:	mov	x0, x19
    20fc:	bl	eb0 <PyModule_AddIntConstant@plt>
    2100:	cbnz	w0, 2130 <PyInit_fcntl@@Base+0x49c>
    2104:	mov	x2, #0x8                   	// #8
    2108:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x36c>
    210c:	add	x1, x1, #0x538
    2110:	mov	x0, x19
    2114:	bl	eb0 <PyModule_AddIntConstant@plt>
    2118:	cmp	w0, #0x0
    211c:	csel	x19, x19, xzr, eq  // eq = none
    2120:	mov	x0, x19
    2124:	ldr	x19, [sp, #16]
    2128:	ldp	x29, x30, [sp], #32
    212c:	ret
    2130:	mov	x19, #0x0                   	// #0
    2134:	b	2120 <PyInit_fcntl@@Base+0x48c>

Disassembly of section .fini:

0000000000002138 <.fini>:
    2138:	stp	x29, x30, [sp, #-16]!
    213c:	mov	x29, sp
    2140:	ldp	x29, x30, [sp], #16
    2144:	ret
