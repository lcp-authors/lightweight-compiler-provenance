
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004026c0 <.init>:
  4026c0:	stp	x29, x30, [sp, #-16]!
  4026c4:	mov	x29, sp
  4026c8:	bl	402e90 <wcrtomb@plt+0x60>
  4026cc:	ldp	x29, x30, [sp], #16
  4026d0:	ret

Disassembly of section .plt:

00000000004026e0 <mbrtowc@plt-0x20>:
  4026e0:	stp	x16, x30, [sp, #-16]!
  4026e4:	adrp	x16, 42f000 <_obstack_memory_used@@Base+0x1dd74>
  4026e8:	ldr	x17, [x16, #4088]
  4026ec:	add	x16, x16, #0xff8
  4026f0:	br	x17
  4026f4:	nop
  4026f8:	nop
  4026fc:	nop

0000000000402700 <mbrtowc@plt>:
  402700:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16]
  402708:	add	x16, x16, #0x0
  40270c:	br	x17

0000000000402710 <memcpy@plt>:
  402710:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #8]
  402718:	add	x16, x16, #0x8
  40271c:	br	x17

0000000000402720 <memmove@plt>:
  402720:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #16]
  402728:	add	x16, x16, #0x10
  40272c:	br	x17

0000000000402730 <isalpha@plt>:
  402730:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #24]
  402738:	add	x16, x16, #0x18
  40273c:	br	x17

0000000000402740 <fwrite_unlocked@plt>:
  402740:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #32]
  402748:	add	x16, x16, #0x20
  40274c:	br	x17

0000000000402750 <strlen@plt>:
  402750:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #40]
  402758:	add	x16, x16, #0x28
  40275c:	br	x17

0000000000402760 <fputs@plt>:
  402760:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #48]
  402768:	add	x16, x16, #0x30
  40276c:	br	x17

0000000000402770 <__sprintf_chk@plt>:
  402770:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #56]
  402778:	add	x16, x16, #0x38
  40277c:	br	x17

0000000000402780 <acl_set_fd@plt>:
  402780:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #64]
  402788:	add	x16, x16, #0x40
  40278c:	br	x17

0000000000402790 <exit@plt>:
  402790:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #72]
  402798:	add	x16, x16, #0x48
  40279c:	br	x17

00000000004027a0 <error@plt>:
  4027a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #80]
  4027a8:	add	x16, x16, #0x50
  4027ac:	br	x17

00000000004027b0 <acl_entries@plt>:
  4027b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #88]
  4027b8:	add	x16, x16, #0x58
  4027bc:	br	x17

00000000004027c0 <wctype@plt>:
  4027c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #96]
  4027c8:	add	x16, x16, #0x60
  4027cc:	br	x17

00000000004027d0 <readlink@plt>:
  4027d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #104]
  4027d8:	add	x16, x16, #0x68
  4027dc:	br	x17

00000000004027e0 <ferror_unlocked@plt>:
  4027e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #112]
  4027e8:	add	x16, x16, #0x70
  4027ec:	br	x17

00000000004027f0 <ftell@plt>:
  4027f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #120]
  4027f8:	add	x16, x16, #0x78
  4027fc:	br	x17

0000000000402800 <__cxa_atexit@plt>:
  402800:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #128]
  402808:	add	x16, x16, #0x80
  40280c:	br	x17

0000000000402810 <qsort@plt>:
  402810:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #136]
  402818:	add	x16, x16, #0x88
  40281c:	br	x17

0000000000402820 <setvbuf@plt>:
  402820:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #144]
  402828:	add	x16, x16, #0x90
  40282c:	br	x17

0000000000402830 <isblank@plt>:
  402830:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #152]
  402838:	add	x16, x16, #0x98
  40283c:	br	x17

0000000000402840 <__fwriting@plt>:
  402840:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #160]
  402848:	add	x16, x16, #0xa0
  40284c:	br	x17

0000000000402850 <fileno@plt>:
  402850:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #168]
  402858:	add	x16, x16, #0xa8
  40285c:	br	x17

0000000000402860 <putc_unlocked@plt>:
  402860:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #176]
  402868:	add	x16, x16, #0xb0
  40286c:	br	x17

0000000000402870 <acl_delete_def_file@plt>:
  402870:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #184]
  402878:	add	x16, x16, #0xb8
  40287c:	br	x17

0000000000402880 <fclose@plt>:
  402880:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #192]
  402888:	add	x16, x16, #0xc0
  40288c:	br	x17

0000000000402890 <atoi@plt>:
  402890:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #200]
  402898:	add	x16, x16, #0xc8
  40289c:	br	x17

00000000004028a0 <wctob@plt>:
  4028a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #208]
  4028a8:	add	x16, x16, #0xd0
  4028ac:	br	x17

00000000004028b0 <nl_langinfo@plt>:
  4028b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #216]
  4028b8:	add	x16, x16, #0xd8
  4028bc:	br	x17

00000000004028c0 <fopen@plt>:
  4028c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #224]
  4028c8:	add	x16, x16, #0xe0
  4028cc:	br	x17

00000000004028d0 <isspace@plt>:
  4028d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #232]
  4028d8:	add	x16, x16, #0xe8
  4028dc:	br	x17

00000000004028e0 <iswctype@plt>:
  4028e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #240]
  4028e8:	add	x16, x16, #0xf0
  4028ec:	br	x17

00000000004028f0 <malloc@plt>:
  4028f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #248]
  4028f8:	add	x16, x16, #0xf8
  4028fc:	br	x17

0000000000402900 <toupper@plt>:
  402900:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #256]
  402908:	add	x16, x16, #0x100
  40290c:	br	x17

0000000000402910 <chmod@plt>:
  402910:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #264]
  402918:	add	x16, x16, #0x108
  40291c:	br	x17

0000000000402920 <getdelim@plt>:
  402920:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #272]
  402928:	add	x16, x16, #0x110
  40292c:	br	x17

0000000000402930 <islower@plt>:
  402930:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #280]
  402938:	add	x16, x16, #0x118
  40293c:	br	x17

0000000000402940 <isxdigit@plt>:
  402940:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #288]
  402948:	add	x16, x16, #0x120
  40294c:	br	x17

0000000000402950 <popen@plt>:
  402950:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #296]
  402958:	add	x16, x16, #0x128
  40295c:	br	x17

0000000000402960 <strncmp@plt>:
  402960:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #304]
  402968:	add	x16, x16, #0x130
  40296c:	br	x17

0000000000402970 <bindtextdomain@plt>:
  402970:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #312]
  402978:	add	x16, x16, #0x138
  40297c:	br	x17

0000000000402980 <isdigit@plt>:
  402980:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #320]
  402988:	add	x16, x16, #0x140
  40298c:	br	x17

0000000000402990 <__libc_start_main@plt>:
  402990:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #328]
  402998:	add	x16, x16, #0x148
  40299c:	br	x17

00000000004029a0 <strverscmp@plt>:
  4029a0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #336]
  4029a8:	add	x16, x16, #0x150
  4029ac:	br	x17

00000000004029b0 <__printf_chk@plt>:
  4029b0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #344]
  4029b8:	add	x16, x16, #0x158
  4029bc:	br	x17

00000000004029c0 <acl_get_tag_type@plt>:
  4029c0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #352]
  4029c8:	add	x16, x16, #0x160
  4029cc:	br	x17

00000000004029d0 <memset@plt>:
  4029d0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #360]
  4029d8:	add	x16, x16, #0x168
  4029dc:	br	x17

00000000004029e0 <fdopen@plt>:
  4029e0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #368]
  4029e8:	add	x16, x16, #0x170
  4029ec:	br	x17

00000000004029f0 <fchmod@plt>:
  4029f0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #376]
  4029f8:	add	x16, x16, #0x178
  4029fc:	br	x17

0000000000402a00 <putchar_unlocked@plt>:
  402a00:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #384]
  402a08:	add	x16, x16, #0x180
  402a0c:	br	x17

0000000000402a10 <__vfprintf_chk@plt>:
  402a10:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #392]
  402a18:	add	x16, x16, #0x188
  402a1c:	br	x17

0000000000402a20 <calloc@plt>:
  402a20:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #400]
  402a28:	add	x16, x16, #0x190
  402a2c:	br	x17

0000000000402a30 <bcmp@plt>:
  402a30:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #408]
  402a38:	add	x16, x16, #0x198
  402a3c:	br	x17

0000000000402a40 <isupper@plt>:
  402a40:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #416]
  402a48:	add	x16, x16, #0x1a0
  402a4c:	br	x17

0000000000402a50 <realloc@plt>:
  402a50:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #424]
  402a58:	add	x16, x16, #0x1a8
  402a5c:	br	x17

0000000000402a60 <__ctype_toupper_loc@plt>:
  402a60:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #432]
  402a68:	add	x16, x16, #0x1b0
  402a6c:	br	x17

0000000000402a70 <acl_set_file@plt>:
  402a70:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #440]
  402a78:	add	x16, x16, #0x1b8
  402a7c:	br	x17

0000000000402a80 <rewind@plt>:
  402a80:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #448]
  402a88:	add	x16, x16, #0x1c0
  402a8c:	br	x17

0000000000402a90 <acl_from_mode@plt>:
  402a90:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #456]
  402a98:	add	x16, x16, #0x1c8
  402a9c:	br	x17

0000000000402aa0 <acl_get_fd@plt>:
  402aa0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #464]
  402aa8:	add	x16, x16, #0x1d0
  402aac:	br	x17

0000000000402ab0 <strdup@plt>:
  402ab0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #472]
  402ab8:	add	x16, x16, #0x1d8
  402abc:	br	x17

0000000000402ac0 <getc_unlocked@plt>:
  402ac0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #480]
  402ac8:	add	x16, x16, #0x1e0
  402acc:	br	x17

0000000000402ad0 <strerror@plt>:
  402ad0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #488]
  402ad8:	add	x16, x16, #0x1e8
  402adc:	br	x17

0000000000402ae0 <strrchr@plt>:
  402ae0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #496]
  402ae8:	add	x16, x16, #0x1f0
  402aec:	br	x17

0000000000402af0 <__gmon_start__@plt>:
  402af0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #504]
  402af8:	add	x16, x16, #0x1f8
  402afc:	br	x17

0000000000402b00 <btowc@plt>:
  402b00:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #512]
  402b08:	add	x16, x16, #0x200
  402b0c:	br	x17

0000000000402b10 <abort@plt>:
  402b10:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #520]
  402b18:	add	x16, x16, #0x208
  402b1c:	br	x17

0000000000402b20 <mkostemp@plt>:
  402b20:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #528]
  402b28:	add	x16, x16, #0x210
  402b2c:	br	x17

0000000000402b30 <iscntrl@plt>:
  402b30:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #536]
  402b38:	add	x16, x16, #0x218
  402b3c:	br	x17

0000000000402b40 <mbsinit@plt>:
  402b40:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #544]
  402b48:	add	x16, x16, #0x220
  402b4c:	br	x17

0000000000402b50 <ispunct@plt>:
  402b50:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #552]
  402b58:	add	x16, x16, #0x228
  402b5c:	br	x17

0000000000402b60 <puts@plt>:
  402b60:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #560]
  402b68:	add	x16, x16, #0x230
  402b6c:	br	x17

0000000000402b70 <fread_unlocked@plt>:
  402b70:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #568]
  402b78:	add	x16, x16, #0x238
  402b7c:	br	x17

0000000000402b80 <textdomain@plt>:
  402b80:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #576]
  402b88:	add	x16, x16, #0x240
  402b8c:	br	x17

0000000000402b90 <getopt_long@plt>:
  402b90:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #584]
  402b98:	add	x16, x16, #0x248
  402b9c:	br	x17

0000000000402ba0 <__fprintf_chk@plt>:
  402ba0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #592]
  402ba8:	add	x16, x16, #0x250
  402bac:	br	x17

0000000000402bb0 <strcmp@plt>:
  402bb0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #600]
  402bb8:	add	x16, x16, #0x258
  402bbc:	br	x17

0000000000402bc0 <__ctype_b_loc@plt>:
  402bc0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #608]
  402bc8:	add	x16, x16, #0x260
  402bcc:	br	x17

0000000000402bd0 <acl_get_file@plt>:
  402bd0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #616]
  402bd8:	add	x16, x16, #0x268
  402bdc:	br	x17

0000000000402be0 <free@plt>:
  402be0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #624]
  402be8:	add	x16, x16, #0x270
  402bec:	br	x17

0000000000402bf0 <ungetc@plt>:
  402bf0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #632]
  402bf8:	add	x16, x16, #0x278
  402bfc:	br	x17

0000000000402c00 <__ctype_get_mb_cur_max@plt>:
  402c00:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #640]
  402c08:	add	x16, x16, #0x280
  402c0c:	br	x17

0000000000402c10 <acl_get_entry@plt>:
  402c10:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #648]
  402c18:	add	x16, x16, #0x288
  402c1c:	br	x17

0000000000402c20 <strchr@plt>:
  402c20:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #656]
  402c28:	add	x16, x16, #0x290
  402c2c:	br	x17

0000000000402c30 <feof_unlocked@plt>:
  402c30:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #664]
  402c38:	add	x16, x16, #0x298
  402c3c:	br	x17

0000000000402c40 <memrchr@plt>:
  402c40:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #672]
  402c48:	add	x16, x16, #0x2a0
  402c4c:	br	x17

0000000000402c50 <rename@plt>:
  402c50:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #680]
  402c58:	add	x16, x16, #0x2a8
  402c5c:	br	x17

0000000000402c60 <fflush_unlocked@plt>:
  402c60:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #688]
  402c68:	add	x16, x16, #0x2b0
  402c6c:	br	x17

0000000000402c70 <dcngettext@plt>:
  402c70:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #696]
  402c78:	add	x16, x16, #0x2b8
  402c7c:	br	x17

0000000000402c80 <strcpy@plt>:
  402c80:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #704]
  402c88:	add	x16, x16, #0x2c0
  402c8c:	br	x17

0000000000402c90 <clearerr_unlocked@plt>:
  402c90:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #712]
  402c98:	add	x16, x16, #0x2c8
  402c9c:	br	x17

0000000000402ca0 <__lxstat@plt>:
  402ca0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #720]
  402ca8:	add	x16, x16, #0x2d0
  402cac:	br	x17

0000000000402cb0 <memchr@plt>:
  402cb0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #728]
  402cb8:	add	x16, x16, #0x2d8
  402cbc:	br	x17

0000000000402cc0 <isatty@plt>:
  402cc0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #736]
  402cc8:	add	x16, x16, #0x2e0
  402ccc:	br	x17

0000000000402cd0 <isgraph@plt>:
  402cd0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #744]
  402cd8:	add	x16, x16, #0x2e8
  402cdc:	br	x17

0000000000402ce0 <iswalnum@plt>:
  402ce0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #752]
  402ce8:	add	x16, x16, #0x2f0
  402cec:	br	x17

0000000000402cf0 <__fxstat@plt>:
  402cf0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #760]
  402cf8:	add	x16, x16, #0x2f8
  402cfc:	br	x17

0000000000402d00 <strstr@plt>:
  402d00:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #768]
  402d08:	add	x16, x16, #0x300
  402d0c:	br	x17

0000000000402d10 <dcgettext@plt>:
  402d10:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #776]
  402d18:	add	x16, x16, #0x308
  402d1c:	br	x17

0000000000402d20 <fputs_unlocked@plt>:
  402d20:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #784]
  402d28:	add	x16, x16, #0x310
  402d2c:	br	x17

0000000000402d30 <strcoll@plt>:
  402d30:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #792]
  402d38:	add	x16, x16, #0x318
  402d3c:	br	x17

0000000000402d40 <isalnum@plt>:
  402d40:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #800]
  402d48:	add	x16, x16, #0x320
  402d4c:	br	x17

0000000000402d50 <pclose@plt>:
  402d50:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #808]
  402d58:	add	x16, x16, #0x328
  402d5c:	br	x17

0000000000402d60 <towupper@plt>:
  402d60:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #816]
  402d68:	add	x16, x16, #0x330
  402d6c:	br	x17

0000000000402d70 <iswprint@plt>:
  402d70:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #824]
  402d78:	add	x16, x16, #0x338
  402d7c:	br	x17

0000000000402d80 <umask@plt>:
  402d80:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #832]
  402d88:	add	x16, x16, #0x340
  402d8c:	br	x17

0000000000402d90 <__assert_fail@plt>:
  402d90:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #840]
  402d98:	add	x16, x16, #0x348
  402d9c:	br	x17

0000000000402da0 <__errno_location@plt>:
  402da0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #848]
  402da8:	add	x16, x16, #0x350
  402dac:	br	x17

0000000000402db0 <tolower@plt>:
  402db0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #856]
  402db8:	add	x16, x16, #0x358
  402dbc:	br	x17

0000000000402dc0 <getenv@plt>:
  402dc0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #864]
  402dc8:	add	x16, x16, #0x360
  402dcc:	br	x17

0000000000402dd0 <unlink@plt>:
  402dd0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #872]
  402dd8:	add	x16, x16, #0x368
  402ddc:	br	x17

0000000000402de0 <fchown@plt>:
  402de0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #880]
  402de8:	add	x16, x16, #0x370
  402dec:	br	x17

0000000000402df0 <towlower@plt>:
  402df0:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #888]
  402df8:	add	x16, x16, #0x378
  402dfc:	br	x17

0000000000402e00 <isprint@plt>:
  402e00:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #896]
  402e08:	add	x16, x16, #0x380
  402e0c:	br	x17

0000000000402e10 <setlocale@plt>:
  402e10:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #904]
  402e18:	add	x16, x16, #0x388
  402e1c:	br	x17

0000000000402e20 <acl_free@plt>:
  402e20:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #912]
  402e28:	add	x16, x16, #0x390
  402e2c:	br	x17

0000000000402e30 <wcrtomb@plt>:
  402e30:	adrp	x16, 430000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #920]
  402e38:	add	x16, x16, #0x398
  402e3c:	br	x17

Disassembly of section .text:

0000000000402e40 <_obstack_begin@@Base-0xe134>:
  402e40:	mov	x29, #0x0                   	// #0
  402e44:	mov	x30, #0x0                   	// #0
  402e48:	mov	x5, x0
  402e4c:	ldr	x1, [sp]
  402e50:	add	x2, sp, #0x8
  402e54:	mov	x6, sp
  402e58:	movz	x0, #0x0, lsl #48
  402e5c:	movk	x0, #0x0, lsl #32
  402e60:	movk	x0, #0x40, lsl #16
  402e64:	movk	x0, #0x8654
  402e68:	movz	x3, #0x0, lsl #48
  402e6c:	movk	x3, #0x0, lsl #32
  402e70:	movk	x3, #0x41, lsl #16
  402e74:	movk	x3, #0xce78
  402e78:	movz	x4, #0x0, lsl #48
  402e7c:	movk	x4, #0x0, lsl #32
  402e80:	movk	x4, #0x41, lsl #16
  402e84:	movk	x4, #0xcef8
  402e88:	bl	402990 <__libc_start_main@plt>
  402e8c:	bl	402b10 <abort@plt>
  402e90:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1dd74>
  402e94:	ldr	x0, [x0, #4064]
  402e98:	cbz	x0, 402ea0 <wcrtomb@plt+0x70>
  402e9c:	b	402af0 <__gmon_start__@plt>
  402ea0:	ret
  402ea4:	nop
  402ea8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402eac:	add	x0, x0, #0x4f8
  402eb0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402eb4:	add	x1, x1, #0x4f8
  402eb8:	cmp	x1, x0
  402ebc:	b.eq	402ed4 <wcrtomb@plt+0xa4>  // b.none
  402ec0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xad74>
  402ec4:	ldr	x1, [x1, #3912]
  402ec8:	cbz	x1, 402ed4 <wcrtomb@plt+0xa4>
  402ecc:	mov	x16, x1
  402ed0:	br	x16
  402ed4:	ret
  402ed8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402edc:	add	x0, x0, #0x4f8
  402ee0:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402ee4:	add	x1, x1, #0x4f8
  402ee8:	sub	x1, x1, x0
  402eec:	lsr	x2, x1, #63
  402ef0:	add	x1, x2, x1, asr #3
  402ef4:	cmp	xzr, x1, asr #1
  402ef8:	asr	x1, x1, #1
  402efc:	b.eq	402f14 <wcrtomb@plt+0xe4>  // b.none
  402f00:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xad74>
  402f04:	ldr	x2, [x2, #3920]
  402f08:	cbz	x2, 402f14 <wcrtomb@plt+0xe4>
  402f0c:	mov	x16, x2
  402f10:	br	x16
  402f14:	ret
  402f18:	stp	x29, x30, [sp, #-32]!
  402f1c:	mov	x29, sp
  402f20:	str	x19, [sp, #16]
  402f24:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f28:	ldrb	w0, [x19, #1328]
  402f2c:	cbnz	w0, 402f3c <wcrtomb@plt+0x10c>
  402f30:	bl	402ea8 <wcrtomb@plt+0x78>
  402f34:	mov	w0, #0x1                   	// #1
  402f38:	strb	w0, [x19, #1328]
  402f3c:	ldr	x19, [sp, #16]
  402f40:	ldp	x29, x30, [sp], #32
  402f44:	ret
  402f48:	b	402ed8 <wcrtomb@plt+0xa8>
  402f4c:	stp	x29, x30, [sp, #-32]!
  402f50:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f54:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f58:	stp	x20, x19, [sp, #16]
  402f5c:	ldr	x8, [x8, #1336]
  402f60:	ldr	x20, [x9, #1280]
  402f64:	mov	x19, x0
  402f68:	mov	x29, sp
  402f6c:	cbnz	x8, 402fb0 <wcrtomb@plt+0x180>
  402f70:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  402f74:	add	x1, x1, #0x42a
  402f78:	mov	w2, #0x5                   	// #5
  402f7c:	mov	x0, xzr
  402f80:	bl	402d10 <dcgettext@plt>
  402f84:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f88:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f8c:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f90:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402f94:	ldr	x3, [x8, #1968]
  402f98:	ldr	x8, [x10, #1552]
  402f9c:	ldr	x10, [x11, #1544]
  402fa0:	ldr	x4, [x9, #1352]
  402fa4:	mov	x2, x0
  402fa8:	sub	x5, x8, x10
  402fac:	b	402fdc <wcrtomb@plt+0x1ac>
  402fb0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  402fb4:	add	x1, x1, #0x410
  402fb8:	mov	w2, #0x5                   	// #5
  402fbc:	mov	x0, xzr
  402fc0:	bl	402d10 <dcgettext@plt>
  402fc4:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402fc8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  402fcc:	add	x9, x9, #0x538
  402fd0:	ldr	x3, [x8, #1968]
  402fd4:	ldp	x4, x5, [x9]
  402fd8:	mov	x2, x0
  402fdc:	mov	w1, #0x1                   	// #1
  402fe0:	mov	x0, x20
  402fe4:	mov	x6, x19
  402fe8:	bl	402ba0 <__fprintf_chk@plt>
  402fec:	mov	w0, #0x1                   	// #1
  402ff0:	bl	402790 <exit@plt>
  402ff4:	sub	sp, sp, #0x70
  402ff8:	stp	x22, x21, [sp, #80]
  402ffc:	stp	x20, x19, [sp, #96]
  403000:	mov	x19, x0
  403004:	cmp	x1, #0x1
  403008:	mov	x21, x0
  40300c:	stp	x29, x30, [sp, #16]
  403010:	stp	x28, x27, [sp, #32]
  403014:	stp	x26, x25, [sp, #48]
  403018:	stp	x24, x23, [sp, #64]
  40301c:	add	x29, sp, #0x10
  403020:	str	xzr, [sp, #8]
  403024:	b.lt	4033c0 <wcrtomb@plt+0x590>  // b.tstop
  403028:	mov	w20, w2
  40302c:	mov	w28, wzr
  403030:	add	x24, x19, x1
  403034:	adrp	x25, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403038:	adrp	x27, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40303c:	mov	x22, x19
  403040:	mov	x21, x19
  403044:	ldr	w8, [x25, #2292]
  403048:	cmp	w8, #0x1
  40304c:	b.eq	403070 <wcrtomb@plt+0x240>  // b.none
  403050:	sub	x2, x24, x22
  403054:	add	x3, sp, #0x8
  403058:	mov	x0, xzr
  40305c:	mov	x1, x22
  403060:	bl	410f04 <wcrtomb@plt+0xe0d4>
  403064:	mov	x23, x0
  403068:	cmp	w23, #0x1
  40306c:	b.ne	403100 <wcrtomb@plt+0x2d0>  // b.any
  403070:	ldrb	w8, [x22]
  403074:	cmp	w8, #0x5c
  403078:	b.ne	4030c4 <wcrtomb@plt+0x294>  // b.any
  40307c:	cbnz	w28, 4030c4 <wcrtomb@plt+0x294>
  403080:	add	x26, x22, #0x1
  403084:	cmp	x26, x24
  403088:	b.cs	4030c4 <wcrtomb@plt+0x294>  // b.hs, b.nlast
  40308c:	ldrb	w8, [x26]
  403090:	sub	w9, w8, #0x61
  403094:	cmp	w9, #0x17
  403098:	b.hi	40319c <wcrtomb@plt+0x36c>  // b.pmore
  40309c:	adrp	x12, 41c000 <_obstack_memory_used@@Base+0xad74>
  4030a0:	add	x12, x12, #0xf58
  4030a4:	adr	x11, 4030b8 <wcrtomb@plt+0x288>
  4030a8:	ldrb	w10, [x12, x9]
  4030ac:	add	x11, x11, x10, lsl #2
  4030b0:	mov	w10, #0xa                   	// #10
  4030b4:	br	x11
  4030b8:	mov	w28, wzr
  4030bc:	mov	w8, #0x7                   	// #7
  4030c0:	b	403334 <wcrtomb@plt+0x504>
  4030c4:	cmp	w20, #0x2
  4030c8:	b.ne	403180 <wcrtomb@plt+0x350>  // b.any
  4030cc:	ldr	w9, [x27, #2296]
  4030d0:	cbz	w9, 403180 <wcrtomb@plt+0x350>
  4030d4:	cmp	w8, #0x3c
  4030d8:	b.le	403144 <wcrtomb@plt+0x314>
  4030dc:	cmp	w8, #0x3d
  4030e0:	b.eq	403154 <wcrtomb@plt+0x324>  // b.none
  4030e4:	cmp	w8, #0x5d
  4030e8:	b.eq	40316c <wcrtomb@plt+0x33c>  // b.none
  4030ec:	cmp	w8, #0x5b
  4030f0:	b.ne	403180 <wcrtomb@plt+0x350>  // b.any
  4030f4:	cmp	w28, #0x0
  4030f8:	csinv	w28, w28, wzr, ne  // ne = any
  4030fc:	b	403180 <wcrtomb@plt+0x350>
  403100:	lsl	x8, x23, #32
  403104:	mov	x9, #0xffffffff00000000    	// #-4294967296
  403108:	cmp	x8, x9
  40310c:	b.ne	403118 <wcrtomb@plt+0x2e8>  // b.any
  403110:	mov	w23, #0x1                   	// #1
  403114:	b	403128 <wcrtomb@plt+0x2f8>
  403118:	mov	x9, #0xfffffffe00000000    	// #-8589934592
  40311c:	cmp	x8, x9
  403120:	b.eq	403110 <wcrtomb@plt+0x2e0>  // b.none
  403124:	cbz	w23, 403110 <wcrtomb@plt+0x2e0>
  403128:	sxtw	x2, w23
  40312c:	mov	x0, x21
  403130:	mov	x1, x22
  403134:	bl	402720 <memmove@plt>
  403138:	add	x21, x21, w23, sxtw
  40313c:	add	x23, x22, w23, sxtw
  403140:	b	40318c <wcrtomb@plt+0x35c>
  403144:	cmp	w8, #0x2e
  403148:	b.eq	403154 <wcrtomb@plt+0x324>  // b.none
  40314c:	cmp	w8, #0x3a
  403150:	b.ne	403180 <wcrtomb@plt+0x350>  // b.any
  403154:	cmn	w28, #0x1
  403158:	b.ne	403180 <wcrtomb@plt+0x350>  // b.any
  40315c:	ldurb	w9, [x22, #-1]
  403160:	cmp	w9, #0x5b
  403164:	csinv	w28, w8, wzr, eq  // eq = none
  403168:	b	403180 <wcrtomb@plt+0x350>
  40316c:	add	w8, w28, #0x1
  403170:	cmp	w8, #0x2
  403174:	b.cs	403340 <wcrtomb@plt+0x510>  // b.hs, b.nlast
  403178:	mov	w28, wzr
  40317c:	mov	w8, #0x5d                  	// #93
  403180:	mov	x26, x22
  403184:	add	x23, x26, #0x1
  403188:	strb	w8, [x21], #1
  40318c:	cmp	x23, x24
  403190:	mov	x22, x23
  403194:	b.cc	403044 <wcrtomb@plt+0x214>  // b.lo, b.ul, b.last
  403198:	b	4033c0 <wcrtomb@plt+0x590>
  40319c:	cmp	w8, #0xa
  4031a0:	b.ne	4031b0 <wcrtomb@plt+0x380>  // b.any
  4031a4:	mov	w28, wzr
  4031a8:	mov	w8, #0xa                   	// #10
  4031ac:	b	403334 <wcrtomb@plt+0x504>
  4031b0:	cbz	w20, 4031c0 <wcrtomb@plt+0x390>
  4031b4:	mov	w8, #0x5c                  	// #92
  4031b8:	strb	w8, [x21], #1
  4031bc:	ldrb	w8, [x26]
  4031c0:	mov	w28, wzr
  4031c4:	b	403184 <wcrtomb@plt+0x354>
  4031c8:	mov	w28, wzr
  4031cc:	mov	w8, #0xc                   	// #12
  4031d0:	b	403334 <wcrtomb@plt+0x504>
  4031d4:	mov	w10, #0x10                  	// #16
  4031d8:	b	403224 <wcrtomb@plt+0x3f4>
  4031dc:	add	x23, x22, #0x2
  4031e0:	cmp	x23, x24
  4031e4:	b.cs	4033a0 <wcrtomb@plt+0x570>  // b.hs, b.nlast
  4031e8:	bl	402a60 <__ctype_toupper_loc@plt>
  4031ec:	ldr	x8, [x0]
  4031f0:	ldrb	w9, [x23]
  4031f4:	ldr	w8, [x8, x9, lsl #2]
  4031f8:	eor	w8, w8, #0x40
  4031fc:	strb	w8, [x21], #1
  403200:	ldrb	w8, [x23]
  403204:	cmp	w8, #0x5c
  403208:	b.ne	4033b0 <wcrtomb@plt+0x580>  // b.any
  40320c:	ldrb	w8, [x22, #3]
  403210:	cmp	w8, #0x5c
  403214:	b.ne	4033e4 <wcrtomb@plt+0x5b4>  // b.any
  403218:	mov	w8, #0x3                   	// #3
  40321c:	b	4033b4 <wcrtomb@plt+0x584>
  403220:	mov	w10, #0x8                   	// #8
  403224:	add	x23, x22, #0x2
  403228:	cmp	x23, x24
  40322c:	b.cs	403374 <wcrtomb@plt+0x544>  // b.hs, b.nlast
  403230:	adrp	x18, 41c000 <_obstack_memory_used@@Base+0xad74>
  403234:	mov	x11, xzr
  403238:	mov	w9, wzr
  40323c:	mov	w12, #0x1                   	// #1
  403240:	add	x18, x18, #0xf70
  403244:	add	x13, x22, x11
  403248:	ldrb	w14, [x13, #2]
  40324c:	sub	w15, w14, #0x30
  403250:	cmp	w15, #0x36
  403254:	b.hi	40335c <wcrtomb@plt+0x52c>  // b.pmore
  403258:	adr	x16, 403270 <wcrtomb@plt+0x440>
  40325c:	ldrb	w17, [x18, x15]
  403260:	add	x16, x16, x17, lsl #2
  403264:	mov	w14, wzr
  403268:	mov	w15, #0x8                   	// #8
  40326c:	br	x16
  403270:	mov	w15, #0xa                   	// #10
  403274:	b	4032a4 <wcrtomb@plt+0x474>
  403278:	mov	w15, #0xc                   	// #12
  40327c:	b	4032a4 <wcrtomb@plt+0x474>
  403280:	mov	w15, #0xd                   	// #13
  403284:	b	4032a4 <wcrtomb@plt+0x474>
  403288:	mov	w15, #0xb                   	// #11
  40328c:	b	4032a4 <wcrtomb@plt+0x474>
  403290:	mov	w15, #0xf                   	// #15
  403294:	b	4032a4 <wcrtomb@plt+0x474>
  403298:	mov	w15, #0xe                   	// #14
  40329c:	b	4032a4 <wcrtomb@plt+0x474>
  4032a0:	mov	w15, #0x9                   	// #9
  4032a4:	cmp	w15, w10
  4032a8:	mov	w14, w15
  4032ac:	b.cs	40335c <wcrtomb@plt+0x52c>  // b.hs, b.nlast
  4032b0:	mul	w12, w12, w10
  4032b4:	madd	w9, w9, w10, w14
  4032b8:	cmp	w12, #0xff
  4032bc:	add	x13, x11, #0x1
  4032c0:	b.hi	403368 <wcrtomb@plt+0x538>  // b.pmore
  4032c4:	add	x11, x22, x11
  4032c8:	add	x11, x11, #0x3
  4032cc:	cmp	x11, x24
  4032d0:	mov	x11, x13
  4032d4:	b.cc	403244 <wcrtomb@plt+0x414>  // b.lo, b.ul, b.last
  4032d8:	b	403368 <wcrtomb@plt+0x538>
  4032dc:	mov	w14, #0x6                   	// #6
  4032e0:	b	4032b0 <wcrtomb@plt+0x480>
  4032e4:	mov	w14, #0x3                   	// #3
  4032e8:	b	4032b0 <wcrtomb@plt+0x480>
  4032ec:	mov	w14, #0x1                   	// #1
  4032f0:	b	4032b0 <wcrtomb@plt+0x480>
  4032f4:	mov	w14, #0x4                   	// #4
  4032f8:	b	4032b0 <wcrtomb@plt+0x480>
  4032fc:	mov	w14, #0x5                   	// #5
  403300:	b	4032b0 <wcrtomb@plt+0x480>
  403304:	mov	w14, #0x2                   	// #2
  403308:	b	4032b0 <wcrtomb@plt+0x480>
  40330c:	mov	w14, #0x7                   	// #7
  403310:	b	4032b0 <wcrtomb@plt+0x480>
  403314:	mov	w28, wzr
  403318:	mov	w8, #0xd                   	// #13
  40331c:	b	403334 <wcrtomb@plt+0x504>
  403320:	mov	w28, wzr
  403324:	mov	w8, #0x9                   	// #9
  403328:	b	403334 <wcrtomb@plt+0x504>
  40332c:	mov	w28, wzr
  403330:	mov	w8, #0xb                   	// #11
  403334:	strb	w8, [x21], #1
  403338:	add	x23, x22, #0x2
  40333c:	b	40318c <wcrtomb@plt+0x35c>
  403340:	ldurb	w8, [x22, #-2]
  403344:	cmp	w28, w8
  403348:	b.eq	40317c <wcrtomb@plt+0x34c>  // b.none
  40334c:	ldurb	w8, [x22, #-1]
  403350:	cmp	w28, w8
  403354:	csinv	w28, w28, wzr, ne  // ne = any
  403358:	b	40317c <wcrtomb@plt+0x34c>
  40335c:	add	x23, x13, #0x2
  403360:	cbnz	x11, 403370 <wcrtomb@plt+0x540>
  403364:	b	403374 <wcrtomb@plt+0x544>
  403368:	add	x8, x22, x13
  40336c:	add	x23, x8, #0x2
  403370:	mov	w8, w9
  403374:	cmp	w20, #0x1
  403378:	b.ne	403398 <wcrtomb@plt+0x568>  // b.any
  40337c:	and	w9, w8, #0xff
  403380:	cmp	w9, #0x5c
  403384:	b.eq	403390 <wcrtomb@plt+0x560>  // b.none
  403388:	cmp	w9, #0x26
  40338c:	b.ne	403398 <wcrtomb@plt+0x568>  // b.any
  403390:	mov	w9, #0x5c                  	// #92
  403394:	strb	w9, [x21], #1
  403398:	mov	w28, wzr
  40339c:	b	403188 <wcrtomb@plt+0x358>
  4033a0:	mov	w28, wzr
  4033a4:	cbz	w20, 40318c <wcrtomb@plt+0x35c>
  4033a8:	mov	w8, #0x5c                  	// #92
  4033ac:	b	403188 <wcrtomb@plt+0x358>
  4033b0:	mov	w8, #0x2                   	// #2
  4033b4:	mov	w28, wzr
  4033b8:	add	x23, x26, x8
  4033bc:	b	40318c <wcrtomb@plt+0x35c>
  4033c0:	sub	x0, x21, x19
  4033c4:	ldp	x20, x19, [sp, #96]
  4033c8:	ldp	x22, x21, [sp, #80]
  4033cc:	ldp	x24, x23, [sp, #64]
  4033d0:	ldp	x26, x25, [sp, #48]
  4033d4:	ldp	x28, x27, [sp, #32]
  4033d8:	ldp	x29, x30, [sp, #16]
  4033dc:	add	sp, sp, #0x70
  4033e0:	ret
  4033e4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4033e8:	add	x0, x0, #0x366
  4033ec:	bl	402f4c <wcrtomb@plt+0x11c>
  4033f0:	stp	x29, x30, [sp, #-48]!
  4033f4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4033f8:	str	x21, [sp, #16]
  4033fc:	add	x9, x1, x2
  403400:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403404:	str	xzr, [x8, #1568]
  403408:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40340c:	str	x9, [x21, #1560]
  403410:	ldr	x9, [x8, #1360]
  403414:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403418:	stp	x20, x19, [sp, #32]
  40341c:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403420:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403424:	add	x10, x10, #0x538
  403428:	add	x9, x9, #0x1
  40342c:	mov	x29, sp
  403430:	str	x1, [x19, #1544]
  403434:	str	x1, [x20, #1552]
  403438:	stp	xzr, xzr, [x10]
  40343c:	str	x9, [x8, #1360]
  403440:	str	x9, [x10, #16]
  403444:	bl	403470 <wcrtomb@plt+0x640>
  403448:	str	xzr, [x19, #1544]
  40344c:	str	xzr, [x20, #1552]
  403450:	str	xzr, [x21, #1560]
  403454:	ldp	x20, x19, [sp, #32]
  403458:	ldr	x21, [sp, #16]
  40345c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403460:	mov	w9, #0x1                   	// #1
  403464:	strb	w9, [x8, #1368]
  403468:	ldp	x29, x30, [sp], #48
  40346c:	ret
  403470:	sub	sp, sp, #0xe0
  403474:	stp	x28, x27, [sp, #144]
  403478:	mov	x27, x0
  40347c:	stp	x29, x30, [sp, #128]
  403480:	stp	x26, x25, [sp, #160]
  403484:	stp	x24, x23, [sp, #176]
  403488:	stp	x22, x21, [sp, #192]
  40348c:	stp	x20, x19, [sp, #208]
  403490:	add	x29, sp, #0x80
  403494:	cbnz	x0, 4034d4 <wcrtomb@plt+0x6a4>
  403498:	mov	w0, #0x1                   	// #1
  40349c:	mov	w1, #0x18                  	// #24
  4034a0:	bl	410e08 <wcrtomb@plt+0xdfd8>
  4034a4:	mov	x27, x0
  4034a8:	stp	xzr, xzr, [x0, #8]
  4034ac:	str	xzr, [x0]
  4034b0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4034b4:	adrp	x3, 410000 <wcrtomb@plt+0xd1d0>
  4034b8:	adrp	x4, 402000 <mbrtowc@plt-0x700>
  4034bc:	add	x0, x0, #0x598
  4034c0:	add	x3, x3, #0xe00
  4034c4:	add	x4, x4, #0xbe0
  4034c8:	mov	x1, xzr
  4034cc:	mov	x2, xzr
  4034d0:	bl	410f74 <_obstack_begin@@Base>
  4034d4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4034d8:	ldr	x8, [x8, #1384]
  4034dc:	cbz	x8, 4034ec <wcrtomb@plt+0x6bc>
  4034e0:	mov	w1, #0xa                   	// #10
  4034e4:	mov	x0, xzr
  4034e8:	bl	404610 <wcrtomb@plt+0x17e0>
  4034ec:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4034f0:	ldr	q0, [x8, #992]
  4034f4:	mov	x23, #0x3333333333333333    	// #3689348814741910323
  4034f8:	movk	x23, #0x3334
  4034fc:	movk	x23, #0x333, lsl #48
  403500:	mov	w19, #0x28                  	// #40
  403504:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403508:	mov	w28, #0x1                   	// #1
  40350c:	str	q0, [sp, #32]
  403510:	bl	404740 <wcrtomb@plt+0x1910>
  403514:	cmp	w0, #0x3b
  403518:	b.eq	403510 <wcrtomb@plt+0x6e0>  // b.none
  40351c:	mov	w20, w0
  403520:	bl	402bc0 <__ctype_b_loc@plt>
  403524:	ldr	x8, [x0]
  403528:	ldrh	w8, [x8, w20, sxtw #1]
  40352c:	tbnz	w8, #13, 403510 <wcrtomb@plt+0x6e0>
  403530:	cmn	w20, #0x1
  403534:	b.eq	40418c <wcrtomb@plt+0x135c>  // b.none
  403538:	ldp	x8, x21, [x27, #8]
  40353c:	mov	x26, x0
  403540:	cmp	x21, x8
  403544:	b.ne	403578 <wcrtomb@plt+0x748>  // b.any
  403548:	add	x8, x21, #0x28
  40354c:	cmp	x8, x23
  403550:	str	x8, [x27, #8]
  403554:	b.cs	4041e4 <wcrtomb@plt+0x13b4>  // b.hs, b.nlast
  403558:	ldr	x0, [x27]
  40355c:	add	x8, x8, x8, lsl #2
  403560:	lsl	x1, x8, #3
  403564:	bl	410d00 <wcrtomb@plt+0xded0>
  403568:	ldr	x21, [x27, #16]
  40356c:	mov	x25, x0
  403570:	str	x0, [x27]
  403574:	b	40357c <wcrtomb@plt+0x74c>
  403578:	ldr	x25, [x27]
  40357c:	madd	x22, x21, x19, x25
  403580:	add	x0, sp, #0x40
  403584:	mov	w1, w20
  403588:	stp	xzr, xzr, [x22]
  40358c:	stur	xzr, [x22, #14]
  403590:	bl	4047c0 <wcrtomb@plt+0x1990>
  403594:	tbz	w0, #0, 403634 <wcrtomb@plt+0x804>
  403598:	ldr	w8, [sp, #64]
  40359c:	and	w8, w8, #0xfffffffe
  4035a0:	cmp	w8, #0x4
  4035a4:	b.eq	4041e8 <wcrtomb@plt+0x13b8>  // b.none
  4035a8:	add	x0, sp, #0x40
  4035ac:	mov	w1, #0x20                  	// #32
  4035b0:	bl	410e34 <wcrtomb@plt+0xe004>
  4035b4:	str	x0, [x22]
  4035b8:	bl	404990 <wcrtomb@plt+0x1b60>
  4035bc:	mov	w20, w0
  4035c0:	cmp	w0, #0x2c
  4035c4:	b.ne	4035f8 <wcrtomb@plt+0x7c8>  // b.any
  4035c8:	bl	404990 <wcrtomb@plt+0x1b60>
  4035cc:	mov	w1, w0
  4035d0:	add	x0, sp, #0x40
  4035d4:	bl	4047c0 <wcrtomb@plt+0x1990>
  4035d8:	tbz	w0, #0, 404218 <wcrtomb@plt+0x13e8>
  4035dc:	add	x0, sp, #0x40
  4035e0:	mov	w1, #0x20                  	// #32
  4035e4:	bl	410e34 <wcrtomb@plt+0xe004>
  4035e8:	madd	x8, x21, x19, x25
  4035ec:	str	x0, [x8, #8]
  4035f0:	bl	404990 <wcrtomb@plt+0x1b60>
  4035f4:	mov	w20, w0
  4035f8:	ldr	x8, [x22]
  4035fc:	ldr	w9, [x8]
  403600:	cmp	w9, #0x2
  403604:	b.ne	403634 <wcrtomb@plt+0x804>  // b.any
  403608:	ldr	x8, [x8, #8]
  40360c:	cbnz	x8, 403634 <wcrtomb@plt+0x804>
  403610:	madd	x8, x21, x19, x25
  403614:	ldr	x8, [x8, #8]
  403618:	cbz	x8, 404224 <wcrtomb@plt+0x13f4>
  40361c:	ldr	w8, [x8]
  403620:	cmp	w8, #0x1
  403624:	b.ne	404224 <wcrtomb@plt+0x13f4>  // b.any
  403628:	ldr	w8, [x24, #2296]
  40362c:	cmp	w8, #0x2
  403630:	b.eq	404224 <wcrtomb@plt+0x13f4>  // b.none
  403634:	cmp	w20, #0x21
  403638:	b.ne	403654 <wcrtomb@plt+0x824>  // b.any
  40363c:	madd	x8, x21, x19, x25
  403640:	strb	w28, [x8, #20]
  403644:	bl	404990 <wcrtomb@plt+0x1b60>
  403648:	mov	w20, w0
  40364c:	cmp	w0, #0x21
  403650:	b.eq	4041f4 <wcrtomb@plt+0x13c4>  // b.none
  403654:	ldr	w8, [x24, #2296]
  403658:	cmp	w8, #0x2
  40365c:	b.ne	403690 <wcrtomb@plt+0x860>  // b.any
  403660:	sub	w8, w20, #0x3d
  403664:	cmp	w8, #0x3d
  403668:	b.hi	403690 <wcrtomb@plt+0x860>  // b.pmore
  40366c:	mov	x10, #0x1                   	// #1
  403670:	movk	x10, #0x9010, lsl #32
  403674:	lsl	x9, x28, x8
  403678:	movk	x10, #0x20, lsl #48
  40367c:	tst	x9, x10
  403680:	b.eq	4037a8 <wcrtomb@plt+0x978>  // b.none
  403684:	madd	x8, x21, x19, x25
  403688:	ldr	x8, [x8, #8]
  40368c:	cbnz	x8, 404200 <wcrtomb@plt+0x13d0>
  403690:	sub	w8, w20, #0x3a
  403694:	madd	x9, x21, x19, x25
  403698:	cmp	w8, #0x43
  40369c:	strb	w20, [x9, #21]
  4036a0:	b.hi	4037c8 <wcrtomb@plt+0x998>  // b.pmore
  4036a4:	adrp	x11, 41c000 <_obstack_memory_used@@Base+0xad74>
  4036a8:	add	x11, x11, #0xfa8
  4036ac:	adr	x9, 4036bc <wcrtomb@plt+0x88c>
  4036b0:	ldrh	w10, [x11, x8, lsl #1]
  4036b4:	add	x9, x9, x10, lsl #2
  4036b8:	br	x9
  4036bc:	bl	404b9c <wcrtomb@plt+0x1d6c>
  4036c0:	ldr	x8, [x27, #16]
  4036c4:	add	x8, x8, #0x1
  4036c8:	str	x8, [x27, #16]
  4036cc:	b	403510 <wcrtomb@plt+0x6e0>
  4036d0:	bl	404990 <wcrtomb@plt+0x1b60>
  4036d4:	cmp	w0, #0x5c
  4036d8:	b.eq	403790 <wcrtomb@plt+0x960>  // b.none
  4036dc:	cmn	w0, #0x1
  4036e0:	b.eq	404230 <wcrtomb@plt+0x1400>  // b.none
  4036e4:	ldr	w8, [x24, #2296]
  4036e8:	cmp	w8, #0x2
  4036ec:	b.eq	404230 <wcrtomb@plt+0x1400>  // b.none
  4036f0:	bl	404c00 <wcrtomb@plt+0x1dd0>
  4036f4:	mov	w1, #0xa                   	// #10
  4036f8:	b	403798 <wcrtomb@plt+0x968>
  4036fc:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403700:	ldr	x20, [x21, #1400]
  403704:	ldr	x22, [x27, #16]
  403708:	bl	404a18 <wcrtomb@plt+0x1be8>
  40370c:	mov	x2, x0
  403710:	mov	x0, x20
  403714:	mov	x1, x22
  403718:	mov	x3, xzr
  40371c:	bl	404abc <wcrtomb@plt+0x1c8c>
  403720:	str	x0, [x21, #1400]
  403724:	b	4036c0 <wcrtomb@plt+0x890>
  403728:	madd	x8, x21, x19, x25
  40372c:	ldr	x8, [x8, #8]
  403730:	cbnz	x8, 404200 <wcrtomb@plt+0x13d0>
  403734:	bl	404990 <wcrtomb@plt+0x1b60>
  403738:	ldr	x8, [x26]
  40373c:	and	w9, w0, #0xff
  403740:	ldrh	w8, [x8, w9, uxtw #1]
  403744:	tbz	w8, #11, 403764 <wcrtomb@plt+0x934>
  403748:	ldr	w8, [x24, #2296]
  40374c:	cmp	w8, #0x2
  403750:	b.eq	403764 <wcrtomb@plt+0x934>  // b.none
  403754:	bl	404c8c <wcrtomb@plt+0x1e5c>
  403758:	madd	x8, x21, x19, x25
  40375c:	str	w0, [x8, #24]
  403760:	b	4036bc <wcrtomb@plt+0x88c>
  403764:	madd	x8, x21, x19, x25
  403768:	mov	w9, #0xffffffff            	// #-1
  40376c:	str	w9, [x8, #24]
  403770:	bl	404c00 <wcrtomb@plt+0x1dd0>
  403774:	b	4036bc <wcrtomb@plt+0x88c>
  403778:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40377c:	ldr	x1, [x8, #1144]
  403780:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403784:	mov	w2, #0x1                   	// #1
  403788:	add	x0, x0, #0x590
  40378c:	b	403920 <wcrtomb@plt+0xaf0>
  403790:	bl	404740 <wcrtomb@plt+0x1910>
  403794:	mov	w1, w0
  403798:	madd	x8, x21, x19, x25
  40379c:	add	x0, x8, #0x18
  4037a0:	bl	404610 <wcrtomb@plt+0x17e0>
  4037a4:	b	4036c0 <wcrtomb@plt+0x890>
  4037a8:	mov	x9, #0x8200                	// #33280
  4037ac:	movk	x9, #0x4b0, lsl #16
  4037b0:	movk	x9, #0x100, lsl #32
  4037b4:	lsl	x8, x28, x8
  4037b8:	movk	x9, #0x2200, lsl #48
  4037bc:	tst	x8, x9
  4037c0:	b.eq	403690 <wcrtomb@plt+0x860>  // b.none
  4037c4:	b	4041dc <wcrtomb@plt+0x13ac>
  4037c8:	cmp	w20, #0x23
  4037cc:	b.ne	4041c8 <wcrtomb@plt+0x1398>  // b.any
  4037d0:	ldr	x8, [x22]
  4037d4:	cbnz	x8, 404248 <wcrtomb@plt+0x1418>
  4037d8:	bl	404740 <wcrtomb@plt+0x1910>
  4037dc:	mov	w20, w0
  4037e0:	cmp	w0, #0x6e
  4037e4:	b.ne	404170 <wcrtomb@plt+0x1340>  // b.any
  4037e8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4037ec:	ldr	x8, [x8, #1344]
  4037f0:	cmp	x8, #0x1
  4037f4:	b.hi	404170 <wcrtomb@plt+0x1340>  // b.pmore
  4037f8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4037fc:	ldrb	w8, [x8, #1368]
  403800:	cbnz	w8, 404170 <wcrtomb@plt+0x1340>
  403804:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403808:	ldr	x8, [x8, #1544]
  40380c:	cbz	x8, 404150 <wcrtomb@plt+0x1320>
  403810:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403814:	ldr	x9, [x9, #1552]
  403818:	add	x8, x8, #0x2
  40381c:	cmp	x9, x8
  403820:	b.ne	404170 <wcrtomb@plt+0x1340>  // b.any
  403824:	b	404168 <wcrtomb@plt+0x1338>
  403828:	bl	404d08 <wcrtomb@plt+0x1ed8>
  40382c:	mov	x20, x0
  403830:	bl	409994 <wcrtomb@plt+0x6b64>
  403834:	ldrb	w8, [x0]
  403838:	cbz	w8, 404254 <wcrtomb@plt+0x1424>
  40383c:	bl	410e78 <wcrtomb@plt+0xe048>
  403840:	madd	x8, x21, x19, x25
  403844:	str	x0, [x8, #24]
  403848:	mov	x0, x20
  40384c:	b	4040e4 <wcrtomb@plt+0x12b4>
  403850:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403854:	ldrb	w8, [x8, #1900]
  403858:	cbnz	w8, 4042e8 <wcrtomb@plt+0x14b8>
  40385c:	bl	404990 <wcrtomb@plt+0x1b60>
  403860:	cmp	w0, #0xa
  403864:	b.eq	403870 <wcrtomb@plt+0xa40>  // b.none
  403868:	cmn	w0, #0x1
  40386c:	b.ne	4036d4 <wcrtomb@plt+0x8a4>  // b.any
  403870:	madd	x8, x21, x19, x25
  403874:	str	xzr, [x8, #32]
  403878:	b	4036c0 <wcrtomb@plt+0x890>
  40387c:	ldr	x8, [x22]
  403880:	cbnz	x8, 404260 <wcrtomb@plt+0x1430>
  403884:	bl	404a18 <wcrtomb@plt+0x1be8>
  403888:	ldrb	w8, [x0]
  40388c:	cbz	w8, 40426c <wcrtomb@plt+0x143c>
  403890:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403894:	mov	x20, x0
  403898:	ldr	x0, [x22, #1408]
  40389c:	ldr	x1, [x27, #16]
  4038a0:	mov	x2, x20
  4038a4:	mov	x3, xzr
  4038a8:	bl	404abc <wcrtomb@plt+0x1c8c>
  4038ac:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4038b0:	ldrb	w8, [x8, #1904]
  4038b4:	str	x0, [x22, #1408]
  4038b8:	cbz	w8, 4036c0 <wcrtomb@plt+0x890>
  4038bc:	mov	x0, x20
  4038c0:	bl	402ab0 <strdup@plt>
  4038c4:	b	403924 <wcrtomb@plt+0xaf4>
  4038c8:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4038cc:	ldr	x8, [x20, #1376]
  4038d0:	cbz	x8, 404278 <wcrtomb@plt+0x1448>
  4038d4:	ldr	x8, [x22]
  4038d8:	cbnz	x8, 404284 <wcrtomb@plt+0x1454>
  4038dc:	bl	404b9c <wcrtomb@plt+0x1d6c>
  4038e0:	ldr	x8, [x20, #1376]
  4038e4:	ldr	x9, [x27]
  4038e8:	ldr	x11, [x27, #16]
  4038ec:	ldr	x10, [x8]
  4038f0:	madd	x9, x10, x19, x9
  4038f4:	str	x11, [x9, #24]
  4038f8:	cbz	x8, 403e00 <wcrtomb@plt+0xfd0>
  4038fc:	ldr	x0, [x8, #8]
  403900:	ldr	x19, [x8, #40]
  403904:	bl	402be0 <free@plt>
  403908:	b	403e04 <wcrtomb@plt+0xfd4>
  40390c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403910:	ldr	x1, [x8, #1136]
  403914:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403918:	add	x0, x0, #0x588
  40391c:	mov	w2, wzr
  403920:	bl	404d84 <wcrtomb@plt+0x1f54>
  403924:	madd	x8, x21, x19, x25
  403928:	str	x0, [x8, #24]
  40392c:	b	4036c0 <wcrtomb@plt+0x890>
  403930:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403934:	ldr	x0, [x20, #1376]
  403938:	ldr	x1, [x27, #16]
  40393c:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403940:	mov	x2, xzr
  403944:	add	x3, x3, #0x538
  403948:	bl	404abc <wcrtomb@plt+0x1c8c>
  40394c:	str	x0, [x20, #1376]
  403950:	madd	x8, x21, x19, x25
  403954:	ldrb	w9, [x8, #20]
  403958:	cmp	w9, #0x0
  40395c:	cset	w9, eq  // eq = none
  403960:	strb	w9, [x8, #20]
  403964:	b	4036c0 <wcrtomb@plt+0x890>
  403968:	bl	404a18 <wcrtomb@plt+0x1be8>
  40396c:	ldrb	w8, [x0]
  403970:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  403974:	mov	x20, x0
  403978:	add	x1, x1, #0x479
  40397c:	cmp	w8, #0x0
  403980:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  403984:	add	x8, x8, #0x475
  403988:	csel	x0, x8, x0, eq  // eq = none
  40398c:	bl	4029a0 <strverscmp@plt>
  403990:	cmp	w0, #0x1
  403994:	b.ge	404290 <wcrtomb@plt+0x1460>  // b.tcont
  403998:	mov	x0, x20
  40399c:	bl	402be0 <free@plt>
  4039a0:	str	wzr, [x24, #2296]
  4039a4:	b	403510 <wcrtomb@plt+0x6e0>
  4039a8:	bl	404740 <wcrtomb@plt+0x1910>
  4039ac:	mov	w1, #0x1                   	// #1
  4039b0:	mov	w20, w0
  4039b4:	bl	404f60 <wcrtomb@plt+0x2130>
  4039b8:	cbz	x0, 40429c <wcrtomb@plt+0x146c>
  4039bc:	mov	x22, x0
  4039c0:	mov	w0, w20
  4039c4:	mov	w1, wzr
  4039c8:	bl	404f60 <wcrtomb@plt+0x2130>
  4039cc:	cbz	x0, 40429c <wcrtomb@plt+0x146c>
  4039d0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4039d4:	add	x8, x8, #0x5b0
  4039d8:	ldp	x8, x9, [x8]
  4039dc:	mov	x28, x0
  4039e0:	sub	x9, x9, x8
  4039e4:	cmp	x9, #0x27
  4039e8:	b.hi	403a04 <wcrtomb@plt+0xbd4>  // b.pmore
  4039ec:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4039f0:	add	x20, x20, #0x598
  4039f4:	mov	w1, #0x28                  	// #40
  4039f8:	mov	x0, x20
  4039fc:	bl	41107c <_obstack_newchunk@@Base>
  403a00:	ldr	x8, [x20, #24]
  403a04:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403a08:	add	x9, x9, #0x5a8
  403a0c:	ldr	x24, [x9]
  403a10:	add	x8, x8, #0x28
  403a14:	str	x8, [x9, #8]
  403a18:	cmp	x8, x24
  403a1c:	b.ne	403a30 <wcrtomb@plt+0xc00>  // b.any
  403a20:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403a24:	ldrb	w9, [x10, #1512]
  403a28:	orr	w9, w9, #0x2
  403a2c:	strb	w9, [x10, #1512]
  403a30:	adrp	x13, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403a34:	add	x13, x13, #0x5a0
  403a38:	ldr	x9, [x13, #40]
  403a3c:	ldr	x10, [x13]
  403a40:	ldr	x11, [x13, #24]
  403a44:	madd	x14, x21, x19, x25
  403a48:	add	x8, x9, x8
  403a4c:	bic	x8, x8, x9
  403a50:	sub	x12, x11, x10
  403a54:	sub	x9, x8, x10
  403a58:	cmp	x9, x12
  403a5c:	csel	x8, x11, x8, hi  // hi = pmore
  403a60:	stp	x8, x8, [x13, #8]
  403a64:	str	x24, [x14, #24]!
  403a68:	mov	x0, x28
  403a6c:	stp	x14, x22, [sp, #48]
  403a70:	bl	409994 <wcrtomb@plt+0x6b64>
  403a74:	mov	x20, x0
  403a78:	mov	x0, x28
  403a7c:	bl	40999c <wcrtomb@plt+0x6b6c>
  403a80:	ldrb	w8, [x24, #32]
  403a84:	mov	x23, x0
  403a88:	mov	x0, x20
  403a8c:	mov	x1, x23
  403a90:	and	w8, w8, #0xf
  403a94:	strb	w8, [x24, #32]
  403a98:	bl	410e34 <wcrtomb@plt+0xe004>
  403a9c:	mov	w2, #0x1                   	// #1
  403aa0:	mov	x1, x23
  403aa4:	mov	x21, x0
  403aa8:	bl	402ff4 <wcrtomb@plt+0x1c4>
  403aac:	cmp	x0, #0x1
  403ab0:	add	x23, x21, x0
  403ab4:	b.lt	403e10 <wcrtomb@plt+0xfe0>  // b.tstop
  403ab8:	mov	w25, wzr
  403abc:	mov	w2, wzr
  403ac0:	sub	x19, x29, #0x20
  403ac4:	mov	x22, x21
  403ac8:	ldrb	w8, [x22]
  403acc:	cmp	w8, #0x26
  403ad0:	b.eq	403b30 <wcrtomb@plt+0xd00>  // b.none
  403ad4:	cmp	w8, #0x5c
  403ad8:	b.ne	403b58 <wcrtomb@plt+0xd28>  // b.any
  403adc:	sub	x1, x22, x21
  403ae0:	mov	x0, x21
  403ae4:	bl	4051f4 <wcrtomb@plt+0x23c4>
  403ae8:	add	x8, x22, #0x1
  403aec:	mov	x20, x0
  403af0:	cmp	x8, x23
  403af4:	str	x0, [x19, #24]
  403af8:	b.eq	403b20 <wcrtomb@plt+0xcf0>  // b.none
  403afc:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403b00:	ldr	w9, [x9, #2296]
  403b04:	cmp	w9, #0x2
  403b08:	b.ne	403b64 <wcrtomb@plt+0xd34>  // b.any
  403b0c:	ldr	x10, [x26]
  403b10:	ldrb	w9, [x8]
  403b14:	ldrh	w10, [x10, x9, lsl #1]
  403b18:	tbnz	w10, #11, 403b68 <wcrtomb@plt+0xd38>
  403b1c:	strb	w9, [x22]
  403b20:	ldr	x9, [x20, #8]
  403b24:	add	x9, x9, #0x1
  403b28:	str	x9, [x20, #8]
  403b2c:	b	403b94 <wcrtomb@plt+0xd64>
  403b30:	sub	x1, x22, x21
  403b34:	mov	x0, x21
  403b38:	bl	4051f4 <wcrtomb@plt+0x23c4>
  403b3c:	mov	x20, x0
  403b40:	add	x21, x22, #0x1
  403b44:	mov	x8, x22
  403b48:	mov	w2, w25
  403b4c:	str	x0, [x19, #24]
  403b50:	str	wzr, [x0, #16]
  403b54:	b	403b9c <wcrtomb@plt+0xd6c>
  403b58:	mov	x8, x22
  403b5c:	mov	x20, x19
  403b60:	b	403b9c <wcrtomb@plt+0xd6c>
  403b64:	ldrb	w9, [x8]
  403b68:	cmp	w9, #0x44
  403b6c:	b.gt	403bb0 <wcrtomb@plt+0xd80>
  403b70:	sub	w10, w9, #0x30
  403b74:	cmp	w10, #0xa
  403b78:	b.cs	403b1c <wcrtomb@plt+0xcec>  // b.hs, b.nlast
  403b7c:	str	w10, [x20, #16]
  403b80:	ldrb	w9, [x24, #32]
  403b84:	cmp	w10, w9, lsr #4
  403b88:	b.le	403b94 <wcrtomb@plt+0xd64>
  403b8c:	bfi	w9, w10, #4, #28
  403b90:	strb	w9, [x24, #32]
  403b94:	mov	w2, w25
  403b98:	add	x21, x22, #0x2
  403b9c:	add	x22, x8, #0x1
  403ba0:	cmp	x22, x23
  403ba4:	mov	x19, x20
  403ba8:	b.cc	403ac8 <wcrtomb@plt+0xc98>  // b.lo, b.ul, b.last
  403bac:	b	403e18 <wcrtomb@plt+0xfe8>
  403bb0:	cmp	w9, #0x54
  403bb4:	b.le	403bd8 <wcrtomb@plt+0xda8>
  403bb8:	cmp	w9, #0x55
  403bbc:	b.eq	403c08 <wcrtomb@plt+0xdd8>  // b.none
  403bc0:	cmp	w9, #0x6c
  403bc4:	b.eq	403bf4 <wcrtomb@plt+0xdc4>  // b.none
  403bc8:	cmp	w9, #0x75
  403bcc:	b.ne	403b1c <wcrtomb@plt+0xcec>  // b.any
  403bd0:	orr	w2, w25, #0x4
  403bd4:	b	403b98 <wcrtomb@plt+0xd68>
  403bd8:	cmp	w9, #0x45
  403bdc:	b.eq	403bfc <wcrtomb@plt+0xdcc>  // b.none
  403be0:	cmp	w9, #0x4c
  403be4:	b.ne	403b1c <wcrtomb@plt+0xcec>  // b.any
  403be8:	mov	w2, #0x2                   	// #2
  403bec:	mov	w25, #0x2                   	// #2
  403bf0:	b	403b98 <wcrtomb@plt+0xd68>
  403bf4:	orr	w2, w25, #0x8
  403bf8:	b	403b98 <wcrtomb@plt+0xd68>
  403bfc:	mov	w2, wzr
  403c00:	mov	w25, wzr
  403c04:	b	403b98 <wcrtomb@plt+0xd68>
  403c08:	mov	w2, #0x1                   	// #1
  403c0c:	mov	w25, #0x1                   	// #1
  403c10:	b	403b98 <wcrtomb@plt+0xd68>
  403c14:	bl	404740 <wcrtomb@plt+0x1910>
  403c18:	mov	w1, wzr
  403c1c:	mov	w20, w0
  403c20:	bl	404f60 <wcrtomb@plt+0x2130>
  403c24:	cbz	x0, 4042a8 <wcrtomb@plt+0x1478>
  403c28:	mov	x26, x0
  403c2c:	bl	409994 <wcrtomb@plt+0x6b64>
  403c30:	mov	x28, x0
  403c34:	mov	x0, x26
  403c38:	bl	40999c <wcrtomb@plt+0x6b6c>
  403c3c:	mov	x1, x0
  403c40:	mov	x0, x28
  403c44:	mov	w2, wzr
  403c48:	bl	402ff4 <wcrtomb@plt+0x1c4>
  403c4c:	mov	x24, x0
  403c50:	mov	w0, w20
  403c54:	mov	w1, wzr
  403c58:	bl	404f60 <wcrtomb@plt+0x2130>
  403c5c:	cbz	x0, 4042a8 <wcrtomb@plt+0x1478>
  403c60:	mov	x22, x0
  403c64:	bl	409994 <wcrtomb@plt+0x6b64>
  403c68:	mov	x20, x0
  403c6c:	mov	x0, x22
  403c70:	bl	40999c <wcrtomb@plt+0x6b6c>
  403c74:	mov	x1, x0
  403c78:	mov	x0, x20
  403c7c:	mov	w2, wzr
  403c80:	bl	402ff4 <wcrtomb@plt+0x1c4>
  403c84:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403c88:	ldr	w8, [x8, #2292]
  403c8c:	str	x0, [sp, #56]
  403c90:	cmp	w8, #0x2
  403c94:	b.lt	403d14 <wcrtomb@plt+0xee4>  // b.tstop
  403c98:	mov	w1, #0x8                   	// #8
  403c9c:	mov	x0, x24
  403ca0:	str	x22, [sp, #48]
  403ca4:	str	x26, [sp, #16]
  403ca8:	bl	410e08 <wcrtomb@plt+0xdfd8>
  403cac:	mov	x22, x0
  403cb0:	stur	xzr, [x29, #-32]
  403cb4:	cbz	x24, 403fc4 <wcrtomb@plt+0x1194>
  403cb8:	mov	x23, xzr
  403cbc:	mov	x26, xzr
  403cc0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403cc4:	ldr	w8, [x8, #2292]
  403cc8:	cmp	w8, #0x1
  403ccc:	b.ne	403cd8 <wcrtomb@plt+0xea8>  // b.any
  403cd0:	mov	w0, #0x1                   	// #1
  403cd4:	b	403cec <wcrtomb@plt+0xebc>
  403cd8:	add	x1, x28, x23
  403cdc:	sub	x2, x24, x23
  403ce0:	sub	x3, x29, #0x20
  403ce4:	mov	x0, xzr
  403ce8:	bl	410f04 <wcrtomb@plt+0xe0d4>
  403cec:	sub	x8, x0, #0x1
  403cf0:	cmn	x8, #0x4
  403cf4:	csinc	x8, x0, xzr, ls  // ls = plast
  403cf8:	add	x19, x26, #0x1
  403cfc:	add	x23, x8, x23
  403d00:	cmp	x24, x23
  403d04:	str	x8, [x22, x26, lsl #3]
  403d08:	mov	x26, x19
  403d0c:	b.hi	403cc0 <wcrtomb@plt+0xe90>  // b.pmore
  403d10:	b	403fc8 <wcrtomb@plt+0x1198>
  403d14:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403d18:	add	x9, x9, #0x5b0
  403d1c:	ldp	x9, x8, [x9]
  403d20:	sub	x8, x8, x9
  403d24:	cmp	x8, #0xff
  403d28:	b.hi	403d4c <wcrtomb@plt+0xf1c>  // b.pmore
  403d2c:	str	x22, [sp, #48]
  403d30:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403d34:	add	x22, x22, #0x598
  403d38:	mov	w1, #0x100                 	// #256
  403d3c:	mov	x0, x22
  403d40:	bl	41107c <_obstack_newchunk@@Base>
  403d44:	ldr	x9, [x22, #24]
  403d48:	ldr	x22, [sp, #48]
  403d4c:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403d50:	add	x10, x10, #0x5a8
  403d54:	ldr	x8, [x10]
  403d58:	add	x9, x9, #0x100
  403d5c:	str	x9, [x10, #8]
  403d60:	cmp	x9, x8
  403d64:	b.ne	403d78 <wcrtomb@plt+0xf48>  // b.any
  403d68:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403d6c:	ldrb	w10, [x11, #1512]
  403d70:	orr	w10, w10, #0x2
  403d74:	strb	w10, [x11, #1512]
  403d78:	adrp	x14, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403d7c:	add	x14, x14, #0x5a0
  403d80:	ldr	x10, [x14, #40]
  403d84:	ldr	x11, [x14]
  403d88:	ldr	x12, [x14, #24]
  403d8c:	movi	v1.16b, #0x10
  403d90:	add	x9, x10, x9
  403d94:	bic	x9, x9, x10
  403d98:	sub	x13, x12, x11
  403d9c:	sub	x10, x9, x11
  403da0:	cmp	x10, x13
  403da4:	ldr	x10, [sp, #56]
  403da8:	csel	x9, x12, x9, hi  // hi = pmore
  403dac:	stp	x9, x9, [x14, #8]
  403db0:	cmp	x24, x10
  403db4:	b.ne	40420c <wcrtomb@plt+0x13dc>  // b.any
  403db8:	ldr	q0, [sp, #32]
  403dbc:	mov	x9, xzr
  403dc0:	str	q0, [x8, x9]
  403dc4:	add	x9, x9, #0x10
  403dc8:	cmp	x9, #0x100
  403dcc:	add	v0.16b, v0.16b, v1.16b
  403dd0:	b.ne	403dc0 <wcrtomb@plt+0xf90>  // b.any
  403dd4:	cbz	x24, 403dec <wcrtomb@plt+0xfbc>
  403dd8:	ldrb	w9, [x20], #1
  403ddc:	ldrb	w10, [x28], #1
  403de0:	subs	x24, x24, #0x1
  403de4:	strb	w9, [x8, x10]
  403de8:	b.ne	403dd8 <wcrtomb@plt+0xfa8>  // b.any
  403dec:	madd	x9, x21, x19, x25
  403df0:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403df4:	mov	w28, #0x1                   	// #1
  403df8:	str	x8, [x9, #24]
  403dfc:	b	4040d4 <wcrtomb@plt+0x12a4>
  403e00:	mov	x19, xzr
  403e04:	str	x19, [x20, #1376]
  403e08:	mov	w19, #0x28                  	// #40
  403e0c:	b	4036c0 <wcrtomb@plt+0x890>
  403e10:	mov	w2, wzr
  403e14:	sub	x20, x29, #0x20
  403e18:	cmp	x21, x23
  403e1c:	b.cs	403e34 <wcrtomb@plt+0x1004>  // b.hs, b.nlast
  403e20:	sub	x1, x23, x21
  403e24:	mov	x0, x21
  403e28:	bl	4051f4 <wcrtomb@plt+0x23c4>
  403e2c:	str	x0, [x20, #24]
  403e30:	mov	x20, x0
  403e34:	str	xzr, [x20, #24]
  403e38:	ldur	x8, [x29, #-8]
  403e3c:	ldr	x25, [sp, #48]
  403e40:	mov	x23, #0x3333333333333333    	// #3689348814741910323
  403e44:	movk	x23, #0x3334
  403e48:	mov	x0, x28
  403e4c:	movk	x23, #0x333, lsl #48
  403e50:	mov	w19, #0x28                  	// #40
  403e54:	str	x8, [x24, #8]
  403e58:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  403e5c:	ldr	x21, [x25]
  403e60:	mov	w20, wzr
  403e64:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403e68:	mov	w28, #0x1                   	// #1
  403e6c:	ldrb	w8, [x21, #32]
  403e70:	mov	x22, x21
  403e74:	str	xzr, [x21, #24]
  403e78:	and	w8, w8, #0xf0
  403e7c:	strb	w8, [x21, #32]
  403e80:	str	xzr, [x22, #16]!
  403e84:	bl	404990 <wcrtomb@plt+0x1b60>
  403e88:	cmp	w0, #0x64
  403e8c:	b.gt	403ed4 <wcrtomb@plt+0x10a4>
  403e90:	cmp	w0, #0x22
  403e94:	b.le	403f74 <wcrtomb@plt+0x1144>
  403e98:	sub	w8, w0, #0x30
  403e9c:	cmp	w8, #0x1d
  403ea0:	b.hi	4040f8 <wcrtomb@plt+0x12c8>  // b.pmore
  403ea4:	adrp	x11, 41d000 <_obstack_memory_used@@Base+0xbd74>
  403ea8:	add	x11, x11, #0x30
  403eac:	adr	x9, 403ebc <wcrtomb@plt+0x108c>
  403eb0:	ldrb	w10, [x11, x8]
  403eb4:	add	x9, x9, x10, lsl #2
  403eb8:	br	x9
  403ebc:	ldr	x8, [x22]
  403ec0:	cbnz	x8, 4042b4 <wcrtomb@plt+0x1484>
  403ec4:	bl	404c8c <wcrtomb@plt+0x1e5c>
  403ec8:	str	x0, [x22]
  403ecc:	cbnz	x0, 403e84 <wcrtomb@plt+0x1054>
  403ed0:	b	4042c0 <wcrtomb@plt+0x1490>
  403ed4:	sub	w8, w0, #0x65
  403ed8:	cmp	w8, #0xb
  403edc:	b.hi	403f9c <wcrtomb@plt+0x116c>  // b.pmore
  403ee0:	adrp	x11, 41d000 <_obstack_memory_used@@Base+0xbd74>
  403ee4:	add	x11, x11, #0x4e
  403ee8:	adr	x9, 403ef8 <wcrtomb@plt+0x10c8>
  403eec:	ldrb	w10, [x11, x8]
  403ef0:	add	x9, x9, x10, lsl #2
  403ef4:	br	x9
  403ef8:	ldr	w8, [x24, #2296]
  403efc:	cmp	w8, #0x2
  403f00:	b.eq	40423c <wcrtomb@plt+0x140c>  // b.none
  403f04:	ldrb	w8, [x21, #32]
  403f08:	orr	w8, w8, #0x8
  403f0c:	b	403f6c <wcrtomb@plt+0x113c>
  403f10:	ldr	w8, [x24, #2296]
  403f14:	cmp	w8, #0x2
  403f18:	b.eq	40423c <wcrtomb@plt+0x140c>  // b.none
  403f1c:	mov	w8, #0x2                   	// #2
  403f20:	b	403f34 <wcrtomb@plt+0x1104>
  403f24:	ldr	w8, [x24, #2296]
  403f28:	cmp	w8, #0x2
  403f2c:	b.eq	40423c <wcrtomb@plt+0x140c>  // b.none
  403f30:	mov	w8, #0x4                   	// #4
  403f34:	orr	w20, w20, w8
  403f38:	b	403e84 <wcrtomb@plt+0x1054>
  403f3c:	ldrb	w8, [x21, #32]
  403f40:	tbnz	w8, #0, 4042d0 <wcrtomb@plt+0x14a0>
  403f44:	orr	w8, w8, #0x1
  403f48:	b	403f6c <wcrtomb@plt+0x113c>
  403f4c:	ldrb	w8, [x21, #32]
  403f50:	tst	w8, #0x6
  403f54:	b.ne	4042dc <wcrtomb@plt+0x14ac>  // b.any
  403f58:	ubfx	w9, w8, #3, #1
  403f5c:	lsl	w9, w28, w9
  403f60:	ubfiz	w9, w9, #1, #2
  403f64:	and	w8, w8, #0xfffffff9
  403f68:	orr	w8, w9, w8
  403f6c:	strb	w8, [x21, #32]
  403f70:	b	403e84 <wcrtomb@plt+0x1054>
  403f74:	cmn	w0, #0x1
  403f78:	b.eq	404104 <wcrtomb@plt+0x12d4>  // b.none
  403f7c:	cmp	w0, #0xa
  403f80:	b.eq	404104 <wcrtomb@plt+0x12d4>  // b.none
  403f84:	cmp	w0, #0xd
  403f88:	b.ne	40423c <wcrtomb@plt+0x140c>  // b.any
  403f8c:	bl	404740 <wcrtomb@plt+0x1910>
  403f90:	cmp	w0, #0xa
  403f94:	b.eq	404104 <wcrtomb@plt+0x12d4>  // b.none
  403f98:	b	40423c <wcrtomb@plt+0x140c>
  403f9c:	cmp	w0, #0x77
  403fa0:	b.ne	4040ec <wcrtomb@plt+0x12bc>  // b.any
  403fa4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403fa8:	ldr	x1, [x8, #1144]
  403fac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  403fb0:	mov	w2, #0x1                   	// #1
  403fb4:	add	x0, x0, #0x590
  403fb8:	bl	404d84 <wcrtomb@plt+0x1f54>
  403fbc:	str	x0, [x21, #24]
  403fc0:	b	404104 <wcrtomb@plt+0x12d4>
  403fc4:	mov	x19, xzr
  403fc8:	mov	w0, #0x1                   	// #1
  403fcc:	bfi	x0, x19, #1, #63
  403fd0:	mov	w1, #0x8                   	// #8
  403fd4:	str	x27, [sp, #24]
  403fd8:	stur	xzr, [x29, #-32]
  403fdc:	bl	410e08 <wcrtomb@plt+0xdfd8>
  403fe0:	mov	w8, #0x28                  	// #40
  403fe4:	madd	x8, x21, x8, x25
  403fe8:	mov	x27, xzr
  403fec:	str	x0, [x8, #24]
  403ff0:	str	x0, [sp, #8]
  403ff4:	cbz	x19, 40409c <wcrtomb@plt+0x126c>
  403ff8:	add	x23, x0, #0x8
  403ffc:	mov	x26, x19
  404000:	ldr	x8, [sp, #56]
  404004:	subs	x25, x8, x27
  404008:	b.ls	40420c <wcrtomb@plt+0x13dc>  // b.plast
  40400c:	ldr	x21, [x22]
  404010:	add	x0, x21, #0x1
  404014:	bl	410e00 <wcrtomb@plt+0xdfd0>
  404018:	mov	x1, x28
  40401c:	mov	x2, x21
  404020:	mov	x24, x0
  404024:	stur	x0, [x23, #-8]
  404028:	bl	402710 <memcpy@plt>
  40402c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404030:	ldr	w8, [x8, #2292]
  404034:	add	x28, x28, x21
  404038:	strb	wzr, [x24, x21]
  40403c:	cmp	w8, #0x1
  404040:	b.ne	40404c <wcrtomb@plt+0x121c>  // b.any
  404044:	mov	w0, #0x1                   	// #1
  404048:	b	404060 <wcrtomb@plt+0x1230>
  40404c:	add	x1, x20, x27
  404050:	sub	x3, x29, #0x20
  404054:	mov	x0, xzr
  404058:	mov	x2, x25
  40405c:	bl	410f04 <wcrtomb@plt+0xe0d4>
  404060:	sub	x8, x0, #0x1
  404064:	cmn	x8, #0x4
  404068:	csinc	x21, x0, xzr, ls  // ls = plast
  40406c:	add	x0, x21, #0x1
  404070:	bl	410e00 <wcrtomb@plt+0xdfd0>
  404074:	add	x1, x20, x27
  404078:	mov	x2, x21
  40407c:	mov	x24, x0
  404080:	str	x0, [x23], #16
  404084:	bl	402710 <memcpy@plt>
  404088:	add	x27, x21, x27
  40408c:	subs	x26, x26, #0x1
  404090:	add	x22, x22, #0x8
  404094:	strb	wzr, [x24, x21]
  404098:	b.ne	404000 <wcrtomb@plt+0x11d0>  // b.any
  40409c:	ldr	x9, [sp, #56]
  4040a0:	lsl	x8, x19, #4
  4040a4:	cmp	x9, x27
  4040a8:	ldr	x9, [sp, #8]
  4040ac:	str	xzr, [x9, x8]
  4040b0:	b.ne	40420c <wcrtomb@plt+0x13dc>  // b.any
  4040b4:	ldp	x26, x27, [sp, #16]
  4040b8:	ldr	x22, [sp, #48]
  4040bc:	mov	x23, #0x3333333333333333    	// #3689348814741910323
  4040c0:	movk	x23, #0x3334
  4040c4:	movk	x23, #0x333, lsl #48
  4040c8:	mov	w19, #0x28                  	// #40
  4040cc:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4040d0:	mov	w28, #0x1                   	// #1
  4040d4:	bl	404b9c <wcrtomb@plt+0x1d6c>
  4040d8:	mov	x0, x26
  4040dc:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  4040e0:	mov	x0, x22
  4040e4:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  4040e8:	b	4036c0 <wcrtomb@plt+0x890>
  4040ec:	cmp	w0, #0x7d
  4040f0:	b.eq	404100 <wcrtomb@plt+0x12d0>  // b.none
  4040f4:	b	40423c <wcrtomb@plt+0x140c>
  4040f8:	cmp	w0, #0x23
  4040fc:	b.ne	40423c <wcrtomb@plt+0x140c>  // b.any
  404100:	bl	404c00 <wcrtomb@plt+0x1dd0>
  404104:	ldr	x8, [x25]
  404108:	ldr	x21, [sp, #56]
  40410c:	mov	w1, w20
  404110:	ldrb	w8, [x8, #32]
  404114:	mov	x0, x21
  404118:	lsr	w8, w8, #4
  40411c:	add	w2, w8, #0x1
  404120:	bl	407fe8 <wcrtomb@plt+0x51b8>
  404124:	ldr	x8, [x25]
  404128:	str	x0, [x8]
  40412c:	mov	x0, x21
  404130:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404134:	ldr	x8, [x25]
  404138:	ldrb	w8, [x8, #32]
  40413c:	tbz	w8, #3, 4036c0 <wcrtomb@plt+0x890>
  404140:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404144:	ldrb	w8, [x8, #1900]
  404148:	cbz	w8, 4036c0 <wcrtomb@plt+0x890>
  40414c:	b	4042e8 <wcrtomb@plt+0x14b8>
  404150:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404154:	ldr	x0, [x8, #1568]
  404158:	cbz	x0, 404170 <wcrtomb@plt+0x1340>
  40415c:	bl	4027f0 <ftell@plt>
  404160:	cmp	x0, #0x2
  404164:	b.ne	404170 <wcrtomb@plt+0x1340>  // b.any
  404168:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40416c:	strb	w28, [x8, #1888]
  404170:	cmn	w20, #0x1
  404174:	b.eq	403510 <wcrtomb@plt+0x6e0>  // b.none
  404178:	cmp	w20, #0xa
  40417c:	b.eq	403510 <wcrtomb@plt+0x6e0>  // b.none
  404180:	bl	404740 <wcrtomb@plt+0x1910>
  404184:	mov	w20, w0
  404188:	b	404170 <wcrtomb@plt+0x1340>
  40418c:	ldr	w8, [x24, #2296]
  404190:	cmp	w8, #0x2
  404194:	b.ne	4041a4 <wcrtomb@plt+0x1374>  // b.any
  404198:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40419c:	ldr	x8, [x8, #1384]
  4041a0:	cbnz	x8, 4042f4 <wcrtomb@plt+0x14c4>
  4041a4:	mov	x0, x27
  4041a8:	ldp	x20, x19, [sp, #208]
  4041ac:	ldp	x22, x21, [sp, #192]
  4041b0:	ldp	x24, x23, [sp, #176]
  4041b4:	ldp	x26, x25, [sp, #160]
  4041b8:	ldp	x28, x27, [sp, #144]
  4041bc:	ldp	x29, x30, [sp, #128]
  4041c0:	add	sp, sp, #0xe0
  4041c4:	ret
  4041c8:	cmn	w20, #0x1
  4041cc:	b.ne	4041dc <wcrtomb@plt+0x13ac>  // b.any
  4041d0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4041d4:	add	x1, x1, #0x15f
  4041d8:	b	4042fc <wcrtomb@plt+0x14cc>
  4041dc:	mov	w0, w20
  4041e0:	bl	4049c4 <wcrtomb@plt+0x1b94>
  4041e4:	bl	410ec0 <wcrtomb@plt+0xe090>
  4041e8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4041ec:	add	x1, x1, #0x77
  4041f0:	b	4042fc <wcrtomb@plt+0x14cc>
  4041f4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4041f8:	add	x1, x1, #0x5a
  4041fc:	b	4042fc <wcrtomb@plt+0x14cc>
  404200:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404204:	add	x1, x1, #0x16f
  404208:	b	4042fc <wcrtomb@plt+0x14cc>
  40420c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404210:	add	x1, x1, #0x28c
  404214:	b	4042fc <wcrtomb@plt+0x14cc>
  404218:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40421c:	add	x1, x1, #0x68
  404220:	b	4042fc <wcrtomb@plt+0x14cc>
  404224:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404228:	add	x1, x1, #0x30b
  40422c:	b	4042fc <wcrtomb@plt+0x14cc>
  404230:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404234:	add	x1, x1, #0xde
  404238:	b	4042fc <wcrtomb@plt+0x14cc>
  40423c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404240:	add	x1, x1, #0x1da
  404244:	b	4042fc <wcrtomb@plt+0x14cc>
  404248:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40424c:	add	x1, x1, #0x13b
  404250:	b	4042fc <wcrtomb@plt+0x14cc>
  404254:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404258:	add	x1, x1, #0x3b6
  40425c:	b	4042fc <wcrtomb@plt+0x14cc>
  404260:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404264:	add	x1, x1, #0x11e
  404268:	b	4042fc <wcrtomb@plt+0x14cc>
  40426c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404270:	add	x1, x1, #0x354
  404274:	b	4042fc <wcrtomb@plt+0x14cc>
  404278:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40427c:	add	x1, x1, #0xb0
  404280:	b	4042fc <wcrtomb@plt+0x14cc>
  404284:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404288:	add	x1, x1, #0xff
  40428c:	b	4042fc <wcrtomb@plt+0x14cc>
  404290:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404294:	add	x1, x1, #0x2ed
  404298:	b	4042fc <wcrtomb@plt+0x14cc>
  40429c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042a0:	add	x1, x1, #0x1a8
  4042a4:	b	4042c8 <wcrtomb@plt+0x1498>
  4042a8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042ac:	add	x1, x1, #0x1c1
  4042b0:	b	4042c8 <wcrtomb@plt+0x1498>
  4042b4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042b8:	add	x1, x1, #0x238
  4042bc:	b	4042fc <wcrtomb@plt+0x14cc>
  4042c0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042c4:	add	x1, x1, #0x25f
  4042c8:	mov	w2, #0x5                   	// #5
  4042cc:	b	404304 <wcrtomb@plt+0x14d4>
  4042d0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042d4:	add	x1, x1, #0x214
  4042d8:	b	4042fc <wcrtomb@plt+0x14cc>
  4042dc:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042e0:	add	x1, x1, #0x1f0
  4042e4:	b	4042fc <wcrtomb@plt+0x14cc>
  4042e8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042ec:	add	x1, x1, #0x38e
  4042f0:	b	4042fc <wcrtomb@plt+0x14cc>
  4042f4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4042f8:	add	x1, x1, #0x341
  4042fc:	mov	w2, #0x5                   	// #5
  404300:	mov	x0, xzr
  404304:	bl	402d10 <dcgettext@plt>
  404308:	bl	402f4c <wcrtomb@plt+0x11c>
  40430c:	stp	x29, x30, [sp, #-48]!
  404310:	stp	x22, x21, [sp, #16]
  404314:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404318:	ldr	x8, [x22, #1312]
  40431c:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404320:	stp	x20, x19, [sp, #32]
  404324:	mov	x19, x1
  404328:	str	x8, [x21, #1568]
  40432c:	ldrb	w8, [x1]
  404330:	mov	x20, x0
  404334:	mov	x29, sp
  404338:	cmp	w8, #0x2d
  40433c:	b.ne	404348 <wcrtomb@plt+0x1518>  // b.any
  404340:	ldrb	w8, [x19, #1]
  404344:	cbz	w8, 404360 <wcrtomb@plt+0x1530>
  404348:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40434c:	add	x1, x1, #0x450
  404350:	mov	w2, #0x1                   	// #1
  404354:	mov	x0, x19
  404358:	bl	408fc0 <wcrtomb@plt+0x6190>
  40435c:	str	x0, [x21, #1568]
  404360:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404364:	ldr	q0, [x8, #1008]
  404368:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40436c:	add	x8, x8, #0x538
  404370:	mov	x0, x20
  404374:	str	x19, [x8]
  404378:	stur	q0, [x8, #8]
  40437c:	bl	403470 <wcrtomb@plt+0x640>
  404380:	ldr	x8, [x21, #1568]
  404384:	ldr	x9, [x22, #1312]
  404388:	mov	x19, x0
  40438c:	cmp	x8, x9
  404390:	b.eq	40439c <wcrtomb@plt+0x156c>  // b.none
  404394:	mov	x0, x8
  404398:	bl	409534 <wcrtomb@plt+0x6704>
  40439c:	str	xzr, [x21, #1568]
  4043a0:	mov	x0, x19
  4043a4:	ldp	x20, x19, [sp, #32]
  4043a8:	ldp	x22, x21, [sp, #16]
  4043ac:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4043b0:	mov	w9, #0x1                   	// #1
  4043b4:	strb	w9, [x8, #1368]
  4043b8:	ldp	x29, x30, [sp], #48
  4043bc:	ret
  4043c0:	stp	x29, x30, [sp, #-80]!
  4043c4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4043c8:	ldr	x8, [x8, #1376]
  4043cc:	stp	x26, x25, [sp, #16]
  4043d0:	stp	x24, x23, [sp, #32]
  4043d4:	stp	x22, x21, [sp, #48]
  4043d8:	stp	x20, x19, [sp, #64]
  4043dc:	mov	x29, sp
  4043e0:	cbnz	x8, 404500 <wcrtomb@plt+0x16d0>
  4043e4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4043e8:	ldr	x20, [x22, #1384]
  4043ec:	mov	x19, x0
  4043f0:	cbz	x20, 404438 <wcrtomb@plt+0x1608>
  4043f4:	mov	x0, x20
  4043f8:	bl	40999c <wcrtomb@plt+0x6b6c>
  4043fc:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404400:	ldr	x8, [x23, #1392]
  404404:	str	x0, [x8, #8]
  404408:	cbz	x0, 40442c <wcrtomb@plt+0x15fc>
  40440c:	mov	x21, x0
  404410:	mov	x0, x20
  404414:	bl	409994 <wcrtomb@plt+0x6b64>
  404418:	mov	x1, x21
  40441c:	bl	410e34 <wcrtomb@plt+0xe004>
  404420:	ldr	x8, [x23, #1392]
  404424:	str	x0, [x8]
  404428:	ldr	x20, [x22, #1384]
  40442c:	mov	x0, x20
  404430:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404434:	str	xzr, [x22, #1384]
  404438:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40443c:	ldr	x22, [x23, #1400]
  404440:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404444:	cbz	x22, 4044a8 <wcrtomb@plt+0x1678>
  404448:	add	x24, x19, #0x10
  40444c:	mov	w25, #0x28                  	// #40
  404450:	ldr	x26, [x21, #1408]
  404454:	ldr	x20, [x22, #8]
  404458:	cbz	x26, 404474 <wcrtomb@plt+0x1644>
  40445c:	ldr	x0, [x26, #8]
  404460:	mov	x1, x20
  404464:	bl	402bb0 <strcmp@plt>
  404468:	cbz	w0, 404480 <wcrtomb@plt+0x1650>
  40446c:	ldr	x26, [x26, #40]
  404470:	cbnz	x26, 40445c <wcrtomb@plt+0x162c>
  404474:	ldrb	w8, [x20]
  404478:	mov	x26, x24
  40447c:	cbnz	w8, 4044e4 <wcrtomb@plt+0x16b4>
  404480:	ldr	x8, [x19]
  404484:	ldr	x9, [x22]
  404488:	ldr	x10, [x26]
  40448c:	madd	x8, x9, x25, x8
  404490:	str	x10, [x8, #24]
  404494:	ldr	x0, [x22, #8]
  404498:	ldr	x20, [x22, #40]
  40449c:	bl	402be0 <free@plt>
  4044a0:	mov	x22, x20
  4044a4:	cbnz	x20, 404450 <wcrtomb@plt+0x1620>
  4044a8:	ldr	x8, [x21, #1408]
  4044ac:	str	xzr, [x23, #1400]
  4044b0:	cbz	x8, 4044c8 <wcrtomb@plt+0x1698>
  4044b4:	ldr	x0, [x8, #8]
  4044b8:	ldr	x19, [x8, #40]
  4044bc:	bl	402be0 <free@plt>
  4044c0:	mov	x8, x19
  4044c4:	cbnz	x19, 4044b4 <wcrtomb@plt+0x1684>
  4044c8:	str	xzr, [x21, #1408]
  4044cc:	ldp	x20, x19, [sp, #64]
  4044d0:	ldp	x22, x21, [sp, #48]
  4044d4:	ldp	x24, x23, [sp, #32]
  4044d8:	ldp	x26, x25, [sp, #16]
  4044dc:	ldp	x29, x30, [sp], #80
  4044e0:	ret
  4044e4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4044e8:	add	x1, x1, #0x453
  4044ec:	mov	w2, #0x5                   	// #5
  4044f0:	mov	x0, xzr
  4044f4:	bl	402d10 <dcgettext@plt>
  4044f8:	ldr	x1, [x22, #8]
  4044fc:	bl	408e74 <wcrtomb@plt+0x6044>
  404500:	ldr	x9, [x8, #32]
  404504:	ldr	q0, [x8, #16]
  404508:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40450c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404510:	add	x8, x8, #0x538
  404514:	add	x1, x1, #0xa2
  404518:	mov	w2, #0x5                   	// #5
  40451c:	mov	x0, xzr
  404520:	str	x9, [x8, #16]
  404524:	str	q0, [x8]
  404528:	bl	402d10 <dcgettext@plt>
  40452c:	bl	402f4c <wcrtomb@plt+0x11c>
  404530:	stp	x29, x30, [sp, #-32]!
  404534:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404538:	str	x19, [sp, #16]
  40453c:	ldr	x19, [x8, #1416]
  404540:	mov	x29, sp
  404544:	cbz	x19, 40455c <wcrtomb@plt+0x172c>
  404548:	ldr	x0, [x19, #16]
  40454c:	cbz	x0, 404554 <wcrtomb@plt+0x1724>
  404550:	bl	402a80 <rewind@plt>
  404554:	ldr	x19, [x19, #24]
  404558:	cbnz	x19, 404548 <wcrtomb@plt+0x1718>
  40455c:	ldr	x19, [sp, #16]
  404560:	ldp	x29, x30, [sp], #32
  404564:	ret
  404568:	stp	x29, x30, [sp, #-48]!
  40456c:	stp	x20, x19, [sp, #32]
  404570:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404574:	ldr	x20, [x19, #1416]
  404578:	str	x21, [sp, #16]
  40457c:	mov	x29, sp
  404580:	cbz	x20, 40459c <wcrtomb@plt+0x176c>
  404584:	ldr	x0, [x20]
  404588:	cbz	x0, 404594 <wcrtomb@plt+0x1764>
  40458c:	bl	402be0 <free@plt>
  404590:	str	xzr, [x20]
  404594:	ldr	x20, [x20, #24]
  404598:	cbnz	x20, 404584 <wcrtomb@plt+0x1754>
  40459c:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4045a0:	ldr	x21, [x20, #1424]
  4045a4:	cbz	x21, 4045c0 <wcrtomb@plt+0x1790>
  4045a8:	ldr	x0, [x21]
  4045ac:	cbz	x0, 4045b8 <wcrtomb@plt+0x1788>
  4045b0:	bl	402be0 <free@plt>
  4045b4:	str	xzr, [x21]
  4045b8:	ldr	x21, [x21, #24]
  4045bc:	cbnz	x21, 4045a8 <wcrtomb@plt+0x1778>
  4045c0:	ldr	x21, [x19, #1416]
  4045c4:	cbz	x21, 4045dc <wcrtomb@plt+0x17ac>
  4045c8:	ldr	x0, [x21, #16]
  4045cc:	cbz	x0, 4045d4 <wcrtomb@plt+0x17a4>
  4045d0:	bl	409534 <wcrtomb@plt+0x6704>
  4045d4:	ldr	x21, [x21, #24]
  4045d8:	cbnz	x21, 4045c8 <wcrtomb@plt+0x1798>
  4045dc:	ldr	x21, [x20, #1424]
  4045e0:	cbz	x21, 4045f8 <wcrtomb@plt+0x17c8>
  4045e4:	ldr	x0, [x21, #16]
  4045e8:	cbz	x0, 4045f0 <wcrtomb@plt+0x17c0>
  4045ec:	bl	409534 <wcrtomb@plt+0x6704>
  4045f0:	ldr	x21, [x21, #24]
  4045f4:	cbnz	x21, 4045e4 <wcrtomb@plt+0x17b4>
  4045f8:	str	xzr, [x20, #1424]
  4045fc:	str	xzr, [x19, #1416]
  404600:	ldp	x20, x19, [sp, #32]
  404604:	ldr	x21, [sp, #16]
  404608:	ldp	x29, x30, [sp], #48
  40460c:	ret
  404610:	stp	x29, x30, [sp, #-48]!
  404614:	stp	x22, x21, [sp, #16]
  404618:	stp	x20, x19, [sp, #32]
  40461c:	mov	w20, w1
  404620:	mov	x19, x0
  404624:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404628:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40462c:	mov	x29, sp
  404630:	cbz	x0, 404650 <wcrtomb@plt+0x1820>
  404634:	ldr	x0, [x21, #1384]
  404638:	cbz	x0, 404640 <wcrtomb@plt+0x1810>
  40463c:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404640:	bl	409950 <wcrtomb@plt+0x6b20>
  404644:	str	x0, [x21, #1384]
  404648:	stp	xzr, xzr, [x19]
  40464c:	str	x19, [x22, #1392]
  404650:	cmn	w20, #0x1
  404654:	b.eq	4046f4 <wcrtomb@plt+0x18c4>  // b.none
  404658:	cmp	w20, #0xa
  40465c:	b.eq	40466c <wcrtomb@plt+0x183c>  // b.none
  404660:	ldr	x0, [x21, #1384]
  404664:	mov	w1, w20
  404668:	bl	409a88 <wcrtomb@plt+0x6c58>
  40466c:	bl	404740 <wcrtomb@plt+0x1910>
  404670:	mov	w20, w0
  404674:	cmp	w0, #0x5c
  404678:	b.eq	404704 <wcrtomb@plt+0x18d4>  // b.none
  40467c:	cmn	w20, #0x1
  404680:	b.eq	40468c <wcrtomb@plt+0x185c>  // b.none
  404684:	cmp	w20, #0xa
  404688:	b.ne	404660 <wcrtomb@plt+0x1830>  // b.any
  40468c:	ldr	x0, [x21, #1384]
  404690:	mov	w1, #0xa                   	// #10
  404694:	bl	409a88 <wcrtomb@plt+0x6c58>
  404698:	ldr	x20, [x21, #1384]
  40469c:	ldr	x8, [x22, #1392]
  4046a0:	cmp	x19, #0x0
  4046a4:	mov	x0, x20
  4046a8:	csel	x22, x19, x8, ne  // ne = any
  4046ac:	bl	409994 <wcrtomb@plt+0x6b64>
  4046b0:	mov	x19, x0
  4046b4:	mov	x0, x20
  4046b8:	bl	40999c <wcrtomb@plt+0x6b6c>
  4046bc:	mov	x1, x0
  4046c0:	mov	x0, x19
  4046c4:	mov	w2, wzr
  4046c8:	bl	402ff4 <wcrtomb@plt+0x1c4>
  4046cc:	str	x0, [x22, #8]
  4046d0:	mov	x19, x0
  4046d4:	ldr	x0, [x21, #1384]
  4046d8:	bl	409994 <wcrtomb@plt+0x6b64>
  4046dc:	mov	x1, x19
  4046e0:	bl	410e34 <wcrtomb@plt+0xe004>
  4046e4:	str	x0, [x22]
  4046e8:	ldr	x0, [x21, #1384]
  4046ec:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  4046f0:	str	xzr, [x21, #1384]
  4046f4:	ldp	x20, x19, [sp, #32]
  4046f8:	ldp	x22, x21, [sp, #16]
  4046fc:	ldp	x29, x30, [sp], #48
  404700:	ret
  404704:	bl	404740 <wcrtomb@plt+0x1910>
  404708:	ldr	x8, [x21, #1384]
  40470c:	cmn	w0, #0x1
  404710:	b.eq	404728 <wcrtomb@plt+0x18f8>  // b.none
  404714:	mov	w20, w0
  404718:	mov	w1, #0x5c                  	// #92
  40471c:	mov	x0, x8
  404720:	bl	409a88 <wcrtomb@plt+0x6c58>
  404724:	b	404660 <wcrtomb@plt+0x1830>
  404728:	ldp	x20, x19, [sp, #32]
  40472c:	ldp	x22, x21, [sp, #16]
  404730:	mov	w1, #0xa                   	// #10
  404734:	mov	x0, x8
  404738:	ldp	x29, x30, [sp], #48
  40473c:	b	409a88 <wcrtomb@plt+0x6c58>
  404740:	stp	x29, x30, [sp, #-32]!
  404744:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404748:	ldr	x9, [x8, #1552]
  40474c:	str	x19, [sp, #16]
  404750:	mov	x29, sp
  404754:	cbz	x9, 404778 <wcrtomb@plt+0x1948>
  404758:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40475c:	ldr	x10, [x10, #1560]
  404760:	cmp	x9, x10
  404764:	b.cs	40478c <wcrtomb@plt+0x195c>  // b.hs, b.nlast
  404768:	add	x10, x9, #0x1
  40476c:	str	x10, [x8, #1552]
  404770:	ldrb	w0, [x9]
  404774:	b	40479c <wcrtomb@plt+0x196c>
  404778:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40477c:	ldr	x0, [x19, #1568]
  404780:	cbz	x0, 40478c <wcrtomb@plt+0x195c>
  404784:	bl	402c30 <feof_unlocked@plt>
  404788:	cbz	w0, 404794 <wcrtomb@plt+0x1964>
  40478c:	mov	w0, #0xffffffff            	// #-1
  404790:	b	4047b4 <wcrtomb@plt+0x1984>
  404794:	ldr	x0, [x19, #1568]
  404798:	bl	402ac0 <getc_unlocked@plt>
  40479c:	cmp	w0, #0xa
  4047a0:	b.ne	4047b4 <wcrtomb@plt+0x1984>  // b.any
  4047a4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4047a8:	ldr	x9, [x8, #1344]
  4047ac:	add	x9, x9, #0x1
  4047b0:	str	x9, [x8, #1344]
  4047b4:	ldr	x19, [sp, #16]
  4047b8:	ldp	x29, x30, [sp], #32
  4047bc:	ret
  4047c0:	stp	x29, x30, [sp, #-48]!
  4047c4:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4047c8:	ldr	q0, [x8, #1024]
  4047cc:	stp	x20, x19, [sp, #32]
  4047d0:	mov	w20, w1
  4047d4:	mov	x19, x0
  4047d8:	cmp	w1, #0x5c
  4047dc:	stp	x22, x21, [sp, #16]
  4047e0:	mov	x29, sp
  4047e4:	str	wzr, [x0]
  4047e8:	stur	q0, [x0, #8]
  4047ec:	str	xzr, [x0, #24]
  4047f0:	b.eq	4047fc <wcrtomb@plt+0x19cc>  // b.none
  4047f4:	cmp	w20, #0x2f
  4047f8:	b.ne	4048ac <wcrtomb@plt+0x1a7c>  // b.any
  4047fc:	mov	w8, #0x1                   	// #1
  404800:	cmp	w20, #0x5c
  404804:	str	w8, [x19]
  404808:	b.ne	404814 <wcrtomb@plt+0x19e4>  // b.any
  40480c:	bl	404740 <wcrtomb@plt+0x1910>
  404810:	mov	w20, w0
  404814:	mov	w1, #0x1                   	// #1
  404818:	mov	w0, w20
  40481c:	bl	404f60 <wcrtomb@plt+0x2130>
  404820:	cbz	x0, 40497c <wcrtomb@plt+0x1b4c>
  404824:	mov	x20, x0
  404828:	bl	404990 <wcrtomb@plt+0x1b60>
  40482c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404830:	ldr	w8, [x22, #2296]
  404834:	cmp	w8, #0x2
  404838:	b.ne	404844 <wcrtomb@plt+0x1a14>  // b.any
  40483c:	mov	w21, wzr
  404840:	b	404878 <wcrtomb@plt+0x1a48>
  404844:	mov	w21, wzr
  404848:	cmp	w0, #0x49
  40484c:	b.eq	404860 <wcrtomb@plt+0x1a30>  // b.none
  404850:	cmp	w0, #0x4d
  404854:	b.ne	404878 <wcrtomb@plt+0x1a48>  // b.any
  404858:	mov	w8, #0x4                   	// #4
  40485c:	b	404864 <wcrtomb@plt+0x1a34>
  404860:	mov	w8, #0x2                   	// #2
  404864:	orr	w21, w21, w8
  404868:	bl	404990 <wcrtomb@plt+0x1b60>
  40486c:	ldr	w8, [x22, #2296]
  404870:	cmp	w8, #0x2
  404874:	b.ne	404848 <wcrtomb@plt+0x1a18>  // b.any
  404878:	bl	404c00 <wcrtomb@plt+0x1dd0>
  40487c:	mov	x0, x20
  404880:	mov	w1, w21
  404884:	mov	w2, wzr
  404888:	bl	407fe8 <wcrtomb@plt+0x51b8>
  40488c:	str	x0, [x19, #24]
  404890:	mov	x0, x20
  404894:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404898:	mov	w0, #0x1                   	// #1
  40489c:	ldp	x20, x19, [sp, #32]
  4048a0:	ldp	x22, x21, [sp, #16]
  4048a4:	ldp	x29, x30, [sp], #48
  4048a8:	ret
  4048ac:	bl	402bc0 <__ctype_b_loc@plt>
  4048b0:	ldr	x8, [x0]
  4048b4:	and	w9, w20, #0xff
  4048b8:	ldrh	w8, [x8, w9, uxtw #1]
  4048bc:	tbnz	w8, #11, 404908 <wcrtomb@plt+0x1ad8>
  4048c0:	cmp	w20, #0x2b
  4048c4:	cset	w8, ne  // ne = any
  4048c8:	cmp	w20, #0x7e
  4048cc:	cset	w9, ne  // ne = any
  4048d0:	and	w8, w8, w9
  4048d4:	tbnz	w8, #0, 404950 <wcrtomb@plt+0x1b20>
  4048d8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4048dc:	ldr	w8, [x8, #2296]
  4048e0:	cmp	w8, #0x2
  4048e4:	b.eq	404950 <wcrtomb@plt+0x1b20>  // b.none
  4048e8:	bl	404990 <wcrtomb@plt+0x1b60>
  4048ec:	bl	404c8c <wcrtomb@plt+0x1e5c>
  4048f0:	str	x0, [x19, #16]
  4048f4:	cbz	x0, 404898 <wcrtomb@plt+0x1a68>
  4048f8:	cmp	w20, #0x2b
  4048fc:	b.ne	404970 <wcrtomb@plt+0x1b40>  // b.any
  404900:	mov	w8, #0x4                   	// #4
  404904:	b	404974 <wcrtomb@plt+0x1b44>
  404908:	mov	w0, w20
  40490c:	bl	404c8c <wcrtomb@plt+0x1e5c>
  404910:	mov	w8, #0x2                   	// #2
  404914:	str	x0, [x19, #8]
  404918:	str	w8, [x19]
  40491c:	bl	404990 <wcrtomb@plt+0x1b60>
  404920:	cmp	w0, #0x7e
  404924:	b.ne	404960 <wcrtomb@plt+0x1b30>  // b.any
  404928:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40492c:	ldr	w8, [x8, #2296]
  404930:	cmp	w8, #0x2
  404934:	b.eq	404960 <wcrtomb@plt+0x1b30>  // b.none
  404938:	bl	404990 <wcrtomb@plt+0x1b60>
  40493c:	bl	404c8c <wcrtomb@plt+0x1e5c>
  404940:	cbz	x0, 404898 <wcrtomb@plt+0x1a68>
  404944:	str	x0, [x19, #16]
  404948:	mov	w8, #0x3                   	// #3
  40494c:	b	404974 <wcrtomb@plt+0x1b44>
  404950:	cmp	w20, #0x24
  404954:	b.ne	404968 <wcrtomb@plt+0x1b38>  // b.any
  404958:	mov	w8, #0x6                   	// #6
  40495c:	b	404974 <wcrtomb@plt+0x1b44>
  404960:	bl	404c00 <wcrtomb@plt+0x1dd0>
  404964:	b	404898 <wcrtomb@plt+0x1a68>
  404968:	mov	w0, wzr
  40496c:	b	40489c <wcrtomb@plt+0x1a6c>
  404970:	mov	w8, #0x5                   	// #5
  404974:	str	w8, [x19]
  404978:	b	404898 <wcrtomb@plt+0x1a68>
  40497c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404980:	add	x1, x1, #0x18d
  404984:	mov	w2, #0x5                   	// #5
  404988:	bl	402d10 <dcgettext@plt>
  40498c:	bl	402f4c <wcrtomb@plt+0x11c>
  404990:	stp	x29, x30, [sp, #-32]!
  404994:	str	x19, [sp, #16]
  404998:	mov	x29, sp
  40499c:	bl	404740 <wcrtomb@plt+0x1910>
  4049a0:	mov	w19, w0
  4049a4:	bl	402bc0 <__ctype_b_loc@plt>
  4049a8:	ldr	x8, [x0]
  4049ac:	ldrh	w8, [x8, w19, sxtw #1]
  4049b0:	tbnz	w8, #0, 40499c <wcrtomb@plt+0x1b6c>
  4049b4:	mov	w0, w19
  4049b8:	ldr	x19, [sp, #16]
  4049bc:	ldp	x29, x30, [sp], #32
  4049c0:	ret
  4049c4:	stp	x29, x30, [sp, #-48]!
  4049c8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4049cc:	stp	x20, x19, [sp, #32]
  4049d0:	mov	w19, w0
  4049d4:	add	x1, x1, #0x32b
  4049d8:	mov	w2, #0x5                   	// #5
  4049dc:	mov	x0, xzr
  4049e0:	str	x21, [sp, #16]
  4049e4:	mov	x29, sp
  4049e8:	bl	402d10 <dcgettext@plt>
  4049ec:	mov	x20, x0
  4049f0:	bl	402750 <strlen@plt>
  4049f4:	bl	410cb0 <wcrtomb@plt+0xde80>
  4049f8:	and	w4, w19, #0xff
  4049fc:	mov	w1, #0x1                   	// #1
  404a00:	mov	x2, #0xffffffffffffffff    	// #-1
  404a04:	mov	x3, x20
  404a08:	mov	x21, x0
  404a0c:	bl	402770 <__sprintf_chk@plt>
  404a10:	mov	x0, x21
  404a14:	bl	402f4c <wcrtomb@plt+0x11c>
  404a18:	stp	x29, x30, [sp, #-32]!
  404a1c:	stp	x20, x19, [sp, #16]
  404a20:	mov	x29, sp
  404a24:	bl	409950 <wcrtomb@plt+0x6b20>
  404a28:	mov	x19, x0
  404a2c:	bl	404990 <wcrtomb@plt+0x1b60>
  404a30:	mov	w20, w0
  404a34:	cmn	w0, #0x1
  404a38:	b.eq	404a80 <wcrtomb@plt+0x1c50>  // b.none
  404a3c:	cmp	w20, #0xa
  404a40:	b.eq	404a80 <wcrtomb@plt+0x1c50>  // b.none
  404a44:	bl	402bc0 <__ctype_b_loc@plt>
  404a48:	ldr	x8, [x0]
  404a4c:	ldrh	w8, [x8, w20, sxtw #1]
  404a50:	tbnz	w8, #0, 404a80 <wcrtomb@plt+0x1c50>
  404a54:	cmp	w20, #0x23
  404a58:	b.eq	404a80 <wcrtomb@plt+0x1c50>  // b.none
  404a5c:	cmp	w20, #0x3b
  404a60:	b.eq	404a80 <wcrtomb@plt+0x1c50>  // b.none
  404a64:	cmp	w20, #0x7d
  404a68:	b.eq	404a80 <wcrtomb@plt+0x1c50>  // b.none
  404a6c:	mov	x0, x19
  404a70:	mov	w1, w20
  404a74:	bl	409a88 <wcrtomb@plt+0x6c58>
  404a78:	bl	404740 <wcrtomb@plt+0x1910>
  404a7c:	b	404a30 <wcrtomb@plt+0x1c00>
  404a80:	mov	w0, w20
  404a84:	bl	404c00 <wcrtomb@plt+0x1dd0>
  404a88:	mov	x0, x19
  404a8c:	mov	w1, wzr
  404a90:	bl	409a88 <wcrtomb@plt+0x6c58>
  404a94:	mov	x0, x19
  404a98:	bl	409994 <wcrtomb@plt+0x6b64>
  404a9c:	bl	410e78 <wcrtomb@plt+0xe048>
  404aa0:	mov	x20, x0
  404aa4:	mov	x0, x19
  404aa8:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404aac:	mov	x0, x20
  404ab0:	ldp	x20, x19, [sp, #16]
  404ab4:	ldp	x29, x30, [sp], #32
  404ab8:	ret
  404abc:	stp	x29, x30, [sp, #-64]!
  404ac0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ac4:	add	x8, x8, #0x5b0
  404ac8:	ldp	x8, x9, [x8]
  404acc:	stp	x22, x21, [sp, #32]
  404ad0:	stp	x20, x19, [sp, #48]
  404ad4:	mov	x19, x3
  404ad8:	sub	x9, x9, x8
  404adc:	mov	x21, x2
  404ae0:	mov	x22, x1
  404ae4:	cmp	x9, #0x2f
  404ae8:	mov	x20, x0
  404aec:	str	x23, [sp, #16]
  404af0:	mov	x29, sp
  404af4:	b.hi	404b10 <wcrtomb@plt+0x1ce0>  // b.pmore
  404af8:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404afc:	add	x23, x23, #0x598
  404b00:	mov	w1, #0x30                  	// #48
  404b04:	mov	x0, x23
  404b08:	bl	41107c <_obstack_newchunk@@Base>
  404b0c:	ldr	x8, [x23, #24]
  404b10:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404b14:	add	x9, x9, #0x5a8
  404b18:	ldr	x0, [x9]
  404b1c:	add	x8, x8, #0x30
  404b20:	str	x8, [x9, #8]
  404b24:	cmp	x8, x0
  404b28:	b.ne	404b3c <wcrtomb@plt+0x1d0c>  // b.any
  404b2c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404b30:	ldrb	w10, [x9, #1512]
  404b34:	orr	w10, w10, #0x2
  404b38:	strb	w10, [x9, #1512]
  404b3c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404b40:	add	x9, x9, #0x5a0
  404b44:	ldr	x10, [x9, #40]
  404b48:	ldr	x11, [x9]
  404b4c:	ldr	x12, [x9, #24]
  404b50:	add	x8, x10, x8
  404b54:	bic	x8, x8, x10
  404b58:	sub	x13, x12, x11
  404b5c:	sub	x10, x8, x11
  404b60:	cmp	x10, x13
  404b64:	csel	x8, x12, x8, hi  // hi = pmore
  404b68:	stp	x8, x8, [x9, #8]
  404b6c:	stp	x22, x21, [x0]
  404b70:	cbz	x19, 404b84 <wcrtomb@plt+0x1d54>
  404b74:	ldr	x8, [x19, #16]
  404b78:	ldr	q0, [x19]
  404b7c:	str	x8, [x0, #32]
  404b80:	str	q0, [x0, #16]
  404b84:	str	x20, [x0, #40]
  404b88:	ldp	x20, x19, [sp, #48]
  404b8c:	ldp	x22, x21, [sp, #32]
  404b90:	ldr	x23, [sp, #16]
  404b94:	ldp	x29, x30, [sp], #64
  404b98:	ret
  404b9c:	stp	x29, x30, [sp, #-16]!
  404ba0:	mov	x29, sp
  404ba4:	bl	404990 <wcrtomb@plt+0x1b60>
  404ba8:	cmp	w0, #0x22
  404bac:	b.le	404bd0 <wcrtomb@plt+0x1da0>
  404bb0:	cmp	w0, #0x7d
  404bb4:	b.eq	404bc8 <wcrtomb@plt+0x1d98>  // b.none
  404bb8:	cmp	w0, #0x3b
  404bbc:	b.eq	404be0 <wcrtomb@plt+0x1db0>  // b.none
  404bc0:	cmp	w0, #0x23
  404bc4:	b.ne	404be8 <wcrtomb@plt+0x1db8>  // b.any
  404bc8:	ldp	x29, x30, [sp], #16
  404bcc:	b	404c00 <wcrtomb@plt+0x1dd0>
  404bd0:	cmn	w0, #0x1
  404bd4:	b.eq	404be0 <wcrtomb@plt+0x1db0>  // b.none
  404bd8:	cmp	w0, #0xa
  404bdc:	b.ne	404be8 <wcrtomb@plt+0x1db8>  // b.any
  404be0:	ldp	x29, x30, [sp], #16
  404be4:	ret
  404be8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404bec:	add	x1, x1, #0xbf
  404bf0:	mov	w2, #0x5                   	// #5
  404bf4:	mov	x0, xzr
  404bf8:	bl	402d10 <dcgettext@plt>
  404bfc:	bl	402f4c <wcrtomb@plt+0x11c>
  404c00:	stp	x29, x30, [sp, #-16]!
  404c04:	cmn	w0, #0x1
  404c08:	mov	x29, sp
  404c0c:	b.eq	404c60 <wcrtomb@plt+0x1e30>  // b.none
  404c10:	mov	w8, w0
  404c14:	cmp	w0, #0xa
  404c18:	b.ne	404c30 <wcrtomb@plt+0x1e00>  // b.any
  404c1c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404c20:	ldr	x10, [x9, #1344]
  404c24:	cbz	x10, 404c30 <wcrtomb@plt+0x1e00>
  404c28:	sub	x10, x10, #0x1
  404c2c:	str	x10, [x9, #1344]
  404c30:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404c34:	ldr	x9, [x10, #1552]
  404c38:	cbz	x9, 404c68 <wcrtomb@plt+0x1e38>
  404c3c:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404c40:	ldr	x11, [x11, #1544]
  404c44:	cmp	x9, x11
  404c48:	b.ls	404c7c <wcrtomb@plt+0x1e4c>  // b.plast
  404c4c:	sub	x11, x9, #0x1
  404c50:	str	x11, [x10, #1552]
  404c54:	ldurb	w9, [x9, #-1]
  404c58:	cmp	w9, w8
  404c5c:	b.ne	404c7c <wcrtomb@plt+0x1e4c>  // b.any
  404c60:	ldp	x29, x30, [sp], #16
  404c64:	ret
  404c68:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404c6c:	ldr	x1, [x9, #1568]
  404c70:	mov	w0, w8
  404c74:	ldp	x29, x30, [sp], #16
  404c78:	b	402bf0 <ungetc@plt>
  404c7c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404c80:	add	x0, x0, #0x47d
  404c84:	mov	w1, w8
  404c88:	bl	408e74 <wcrtomb@plt+0x6044>
  404c8c:	stp	x29, x30, [sp, #-48]!
  404c90:	stp	x22, x21, [sp, #16]
  404c94:	stp	x20, x19, [sp, #32]
  404c98:	mov	x29, sp
  404c9c:	mov	w19, w0
  404ca0:	bl	402bc0 <__ctype_b_loc@plt>
  404ca4:	ldr	x8, [x0]
  404ca8:	and	w9, w19, #0xff
  404cac:	ldrh	w8, [x8, w9, uxtw #1]
  404cb0:	tbnz	w8, #11, 404cbc <wcrtomb@plt+0x1e8c>
  404cb4:	mov	x20, xzr
  404cb8:	b	404cec <wcrtomb@plt+0x1ebc>
  404cbc:	mov	x21, x0
  404cc0:	mov	x20, xzr
  404cc4:	mov	w22, #0xa                   	// #10
  404cc8:	mul	x8, x20, x22
  404ccc:	add	x8, x8, w19, sxtw
  404cd0:	sub	x20, x8, #0x30
  404cd4:	bl	404740 <wcrtomb@plt+0x1910>
  404cd8:	ldr	x8, [x21]
  404cdc:	and	w9, w0, #0xff
  404ce0:	mov	w19, w0
  404ce4:	ldrh	w8, [x8, w9, uxtw #1]
  404ce8:	tbnz	w8, #11, 404cc8 <wcrtomb@plt+0x1e98>
  404cec:	mov	w0, w19
  404cf0:	bl	404c00 <wcrtomb@plt+0x1dd0>
  404cf4:	mov	x0, x20
  404cf8:	ldp	x20, x19, [sp, #32]
  404cfc:	ldp	x22, x21, [sp, #16]
  404d00:	ldp	x29, x30, [sp], #48
  404d04:	ret
  404d08:	stp	x29, x30, [sp, #-32]!
  404d0c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404d10:	ldrb	w8, [x8, #1900]
  404d14:	str	x19, [sp, #16]
  404d18:	mov	x29, sp
  404d1c:	cbnz	w8, 404d6c <wcrtomb@plt+0x1f3c>
  404d20:	bl	409950 <wcrtomb@plt+0x6b20>
  404d24:	mov	x19, x0
  404d28:	bl	404990 <wcrtomb@plt+0x1b60>
  404d2c:	mov	w1, w0
  404d30:	cmn	w0, #0x1
  404d34:	b.eq	404d50 <wcrtomb@plt+0x1f20>  // b.none
  404d38:	cmp	w1, #0xa
  404d3c:	b.eq	404d50 <wcrtomb@plt+0x1f20>  // b.none
  404d40:	mov	x0, x19
  404d44:	bl	409a88 <wcrtomb@plt+0x6c58>
  404d48:	bl	404740 <wcrtomb@plt+0x1910>
  404d4c:	b	404d2c <wcrtomb@plt+0x1efc>
  404d50:	mov	x0, x19
  404d54:	mov	w1, wzr
  404d58:	bl	409a88 <wcrtomb@plt+0x6c58>
  404d5c:	mov	x0, x19
  404d60:	ldr	x19, [sp, #16]
  404d64:	ldp	x29, x30, [sp], #32
  404d68:	ret
  404d6c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404d70:	add	x1, x1, #0x38e
  404d74:	mov	w2, #0x5                   	// #5
  404d78:	mov	x0, xzr
  404d7c:	bl	402d10 <dcgettext@plt>
  404d80:	bl	402f4c <wcrtomb@plt+0x11c>
  404d84:	stp	x29, x30, [sp, #-80]!
  404d88:	stp	x26, x25, [sp, #16]
  404d8c:	stp	x24, x23, [sp, #32]
  404d90:	stp	x22, x21, [sp, #48]
  404d94:	stp	x20, x19, [sp, #64]
  404d98:	mov	x29, sp
  404d9c:	mov	w21, w2
  404da0:	mov	x22, x1
  404da4:	mov	x20, x0
  404da8:	bl	404d08 <wcrtomb@plt+0x1ed8>
  404dac:	mov	x19, x0
  404db0:	bl	409994 <wcrtomb@plt+0x6b64>
  404db4:	ldrb	w8, [x0]
  404db8:	cbz	w8, 404f48 <wcrtomb@plt+0x2118>
  404dbc:	ldr	x24, [x20]
  404dc0:	mov	x23, x0
  404dc4:	cbz	x24, 404de0 <wcrtomb@plt+0x1fb0>
  404dc8:	ldr	x0, [x24]
  404dcc:	mov	x1, x23
  404dd0:	bl	402bb0 <strcmp@plt>
  404dd4:	cbz	w0, 404de8 <wcrtomb@plt+0x1fb8>
  404dd8:	ldr	x24, [x24, #24]
  404ddc:	cbnz	x24, 404dc8 <wcrtomb@plt+0x1f98>
  404de0:	mov	w25, wzr
  404de4:	b	404dec <wcrtomb@plt+0x1fbc>
  404de8:	mov	w25, #0x1                   	// #1
  404dec:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404df0:	ldr	w8, [x8, #2296]
  404df4:	cbz	w8, 404eb8 <wcrtomb@plt+0x2088>
  404df8:	tbnz	w25, #0, 404f24 <wcrtomb@plt+0x20f4>
  404dfc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404e00:	add	x8, x8, #0x5b0
  404e04:	ldp	x8, x9, [x8]
  404e08:	sub	x9, x9, x8
  404e0c:	cmp	x9, #0x1f
  404e10:	b.hi	404e2c <wcrtomb@plt+0x1ffc>  // b.pmore
  404e14:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404e18:	add	x24, x24, #0x598
  404e1c:	mov	w1, #0x20                  	// #32
  404e20:	mov	x0, x24
  404e24:	bl	41107c <_obstack_newchunk@@Base>
  404e28:	ldr	x8, [x24, #24]
  404e2c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404e30:	add	x9, x9, #0x5a8
  404e34:	ldr	x24, [x9]
  404e38:	add	x8, x8, #0x20
  404e3c:	str	x8, [x9, #8]
  404e40:	cmp	x8, x24
  404e44:	b.ne	404e58 <wcrtomb@plt+0x2028>  // b.any
  404e48:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404e4c:	ldrb	w10, [x9, #1512]
  404e50:	orr	w10, w10, #0x2
  404e54:	strb	w10, [x9, #1512]
  404e58:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404e5c:	add	x9, x9, #0x5a0
  404e60:	ldr	x10, [x9, #40]
  404e64:	ldr	x11, [x9]
  404e68:	ldr	x12, [x9, #24]
  404e6c:	mov	x0, x23
  404e70:	add	x8, x10, x8
  404e74:	bic	x8, x8, x10
  404e78:	sub	x13, x12, x11
  404e7c:	sub	x10, x8, x11
  404e80:	cmp	x10, x13
  404e84:	csel	x8, x12, x8, hi  // hi = pmore
  404e88:	stp	x8, x8, [x9, #8]
  404e8c:	bl	410e78 <wcrtomb@plt+0xe048>
  404e90:	mov	x1, x22
  404e94:	mov	w2, w21
  404e98:	str	x0, [x24]
  404e9c:	bl	408fc0 <wcrtomb@plt+0x6190>
  404ea0:	str	x0, [x24, #16]
  404ea4:	strb	wzr, [x24, #8]
  404ea8:	ldr	x8, [x20]
  404eac:	str	x8, [x24, #24]
  404eb0:	str	x24, [x20]
  404eb4:	b	404f24 <wcrtomb@plt+0x20f4>
  404eb8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ebc:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ec0:	adrp	x12, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ec4:	adrp	x13, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ec8:	ldr	x8, [x8, #1312]
  404ecc:	ldr	x10, [x10, #1304]
  404ed0:	ldr	x12, [x12, #1280]
  404ed4:	ldr	x0, [x13, #944]
  404ed8:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404edc:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ee0:	adrp	x13, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ee4:	str	x8, [x9, #1520]
  404ee8:	str	x10, [x11, #1528]
  404eec:	str	x12, [x13, #1536]
  404ef0:	cbz	x0, 404df8 <wcrtomb@plt+0x1fc8>
  404ef4:	adrp	x26, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404ef8:	add	x26, x26, #0x3b0
  404efc:	mov	x1, x23
  404f00:	bl	402bb0 <strcmp@plt>
  404f04:	cbz	w0, 404f14 <wcrtomb@plt+0x20e4>
  404f08:	ldr	x0, [x26, #40]!
  404f0c:	cbnz	x0, 404efc <wcrtomb@plt+0x20cc>
  404f10:	b	404df8 <wcrtomb@plt+0x1fc8>
  404f14:	ldr	x8, [x26, #32]
  404f18:	mov	x24, x26
  404f1c:	ldr	x8, [x8]
  404f20:	str	x8, [x26, #16]
  404f24:	mov	x0, x19
  404f28:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  404f2c:	mov	x0, x24
  404f30:	ldp	x20, x19, [sp, #64]
  404f34:	ldp	x22, x21, [sp, #48]
  404f38:	ldp	x24, x23, [sp, #32]
  404f3c:	ldp	x26, x25, [sp, #16]
  404f40:	ldp	x29, x30, [sp], #80
  404f44:	ret
  404f48:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  404f4c:	add	x1, x1, #0x3b6
  404f50:	mov	w2, #0x5                   	// #5
  404f54:	mov	x0, xzr
  404f58:	bl	402d10 <dcgettext@plt>
  404f5c:	bl	402f4c <wcrtomb@plt+0x11c>
  404f60:	sub	sp, sp, #0x70
  404f64:	stp	x24, x23, [sp, #64]
  404f68:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  404f6c:	ldr	w8, [x24, #2292]
  404f70:	stp	x22, x21, [sp, #80]
  404f74:	stp	x20, x19, [sp, #96]
  404f78:	mov	w20, w1
  404f7c:	mov	w21, w0
  404f80:	cmp	w8, #0x1
  404f84:	stp	x29, x30, [sp, #16]
  404f88:	stp	x28, x27, [sp, #32]
  404f8c:	stp	x26, x25, [sp, #48]
  404f90:	add	x29, sp, #0x10
  404f94:	str	xzr, [sp, #8]
  404f98:	b.eq	404fac <wcrtomb@plt+0x217c>  // b.none
  404f9c:	add	x1, sp, #0x8
  404fa0:	mov	w0, w21
  404fa4:	bl	407eb8 <wcrtomb@plt+0x5088>
  404fa8:	cbnz	w0, 4051e8 <wcrtomb@plt+0x23b8>
  404fac:	str	xzr, [sp, #8]
  404fb0:	bl	409950 <wcrtomb@plt+0x6b20>
  404fb4:	mov	x26, #0x800000000000        	// #140737488355328
  404fb8:	mov	x19, x0
  404fbc:	mov	w25, #0x1                   	// #1
  404fc0:	movk	x26, #0x4800, lsl #48
  404fc4:	mov	w27, #0x801                 	// #2049
  404fc8:	bl	404740 <wcrtomb@plt+0x1910>
  404fcc:	mov	w22, w0
  404fd0:	cmn	w0, #0x1
  404fd4:	b.eq	4051a8 <wcrtomb@plt+0x2378>  // b.none
  404fd8:	cmp	w22, #0xa
  404fdc:	b.eq	4051a8 <wcrtomb@plt+0x2378>  // b.none
  404fe0:	ldr	w8, [x24, #2292]
  404fe4:	cmp	w8, #0x1
  404fe8:	b.eq	404ffc <wcrtomb@plt+0x21cc>  // b.none
  404fec:	add	x1, sp, #0x8
  404ff0:	mov	w0, w22
  404ff4:	bl	407eb8 <wcrtomb@plt+0x5088>
  404ff8:	cbnz	w0, 4050c4 <wcrtomb@plt+0x2294>
  404ffc:	cmp	w22, w21
  405000:	b.eq	4051c4 <wcrtomb@plt+0x2394>  // b.none
  405004:	cmp	w22, #0x5c
  405008:	b.ne	405078 <wcrtomb@plt+0x2248>  // b.any
  40500c:	bl	404740 <wcrtomb@plt+0x1910>
  405010:	cmn	w0, #0x1
  405014:	b.eq	4051b8 <wcrtomb@plt+0x2388>  // b.none
  405018:	cmp	w20, #0x0
  40501c:	cset	w8, ne  // ne = any
  405020:	cmp	w0, #0x6e
  405024:	mov	w23, w0
  405028:	cset	w9, eq  // eq = none
  40502c:	cmp	w0, #0xa
  405030:	mov	w22, #0xa                   	// #10
  405034:	b.eq	4050c4 <wcrtomb@plt+0x2294>  // b.none
  405038:	and	w8, w8, w9
  40503c:	tbnz	w8, #0, 4050c4 <wcrtomb@plt+0x2294>
  405040:	cmp	w20, #0x0
  405044:	cset	w8, eq  // eq = none
  405048:	cmp	w23, #0x26
  40504c:	cset	w9, eq  // eq = none
  405050:	cmp	w23, w21
  405054:	b.ne	405064 <wcrtomb@plt+0x2234>  // b.any
  405058:	and	w8, w8, w9
  40505c:	mov	w22, w21
  405060:	cbz	w8, 4050c4 <wcrtomb@plt+0x2294>
  405064:	mov	w1, #0x5c                  	// #92
  405068:	mov	x0, x19
  40506c:	bl	409a88 <wcrtomb@plt+0x6c58>
  405070:	mov	w22, w23
  405074:	b	4050c4 <wcrtomb@plt+0x2294>
  405078:	cbz	w20, 4050c4 <wcrtomb@plt+0x2294>
  40507c:	cmp	w22, #0x5b
  405080:	b.ne	4050c4 <wcrtomb@plt+0x2294>  // b.any
  405084:	mov	w1, #0x5b                  	// #91
  405088:	mov	x0, x19
  40508c:	bl	409a88 <wcrtomb@plt+0x6c58>
  405090:	bl	404740 <wcrtomb@plt+0x1910>
  405094:	mov	w22, w0
  405098:	cmp	w0, #0x5e
  40509c:	b.ne	4050b4 <wcrtomb@plt+0x2284>  // b.any
  4050a0:	mov	w1, #0x5e                  	// #94
  4050a4:	mov	x0, x19
  4050a8:	bl	409a88 <wcrtomb@plt+0x6c58>
  4050ac:	bl	404740 <wcrtomb@plt+0x1910>
  4050b0:	mov	w22, w0
  4050b4:	cmp	w22, #0x5d
  4050b8:	mov	w23, wzr
  4050bc:	b.ne	4050e8 <wcrtomb@plt+0x22b8>  // b.any
  4050c0:	b	4050d4 <wcrtomb@plt+0x22a4>
  4050c4:	mov	x0, x19
  4050c8:	mov	w1, w22
  4050cc:	bl	409a88 <wcrtomb@plt+0x6c58>
  4050d0:	b	404fc8 <wcrtomb@plt+0x2198>
  4050d4:	mov	x0, x19
  4050d8:	mov	w1, w22
  4050dc:	bl	409a88 <wcrtomb@plt+0x6c58>
  4050e0:	bl	404740 <wcrtomb@plt+0x1910>
  4050e4:	mov	w22, w0
  4050e8:	ldr	w8, [x24, #2292]
  4050ec:	cmp	w8, #0x1
  4050f0:	b.ne	4050fc <wcrtomb@plt+0x22cc>  // b.any
  4050f4:	mov	w0, wzr
  4050f8:	b	405108 <wcrtomb@plt+0x22d8>
  4050fc:	add	x1, sp, #0x8
  405100:	mov	w0, w22
  405104:	bl	407eb8 <wcrtomb@plt+0x5088>
  405108:	add	w8, w22, #0x1
  40510c:	cmp	w8, #0x3e
  405110:	b.hi	405150 <wcrtomb@plt+0x2320>  // b.pmore
  405114:	lsl	x9, x25, x8
  405118:	tst	x9, x26
  40511c:	b.eq	405144 <wcrtomb@plt+0x2314>  // b.none
  405120:	cbnz	w0, 4050d4 <wcrtomb@plt+0x22a4>
  405124:	cmp	w23, #0x1
  405128:	b.eq	405184 <wcrtomb@plt+0x2354>  // b.none
  40512c:	cmp	w23, #0x2
  405130:	b.ne	4051a0 <wcrtomb@plt+0x2370>  // b.any
  405134:	cmp	w22, w28
  405138:	b.ne	405190 <wcrtomb@plt+0x2360>  // b.any
  40513c:	mov	w23, #0x3                   	// #3
  405140:	b	405188 <wcrtomb@plt+0x2358>
  405144:	lsl	x8, x25, x8
  405148:	tst	x8, x27
  40514c:	b.ne	4051a8 <wcrtomb@plt+0x2378>  // b.any
  405150:	cmp	w22, #0x5b
  405154:	b.eq	405174 <wcrtomb@plt+0x2344>  // b.none
  405158:	cmp	w22, #0x5d
  40515c:	b.ne	4051a0 <wcrtomb@plt+0x2370>  // b.any
  405160:	cbnz	w0, 4050d4 <wcrtomb@plt+0x22a4>
  405164:	cmp	w23, #0x2
  405168:	b.cs	405198 <wcrtomb@plt+0x2368>  // b.hs, b.nlast
  40516c:	mov	w22, #0x5d                  	// #93
  405170:	b	4050c4 <wcrtomb@plt+0x2294>
  405174:	cbnz	w0, 4050d4 <wcrtomb@plt+0x22a4>
  405178:	cmp	w23, #0x0
  40517c:	csinc	w23, w23, wzr, ne  // ne = any
  405180:	b	4050d4 <wcrtomb@plt+0x22a4>
  405184:	mov	w23, #0x2                   	// #2
  405188:	mov	w28, w22
  40518c:	b	4050d4 <wcrtomb@plt+0x22a4>
  405190:	mov	w23, #0x2                   	// #2
  405194:	b	4051a0 <wcrtomb@plt+0x2370>
  405198:	cmp	w23, #0x3
  40519c:	csel	w23, wzr, w23, eq  // eq = none
  4051a0:	and	w23, w23, #0xfffffffe
  4051a4:	b	4050d4 <wcrtomb@plt+0x22a4>
  4051a8:	cmp	w22, #0xa
  4051ac:	b.ne	4051b8 <wcrtomb@plt+0x2388>  // b.any
  4051b0:	mov	w0, #0xa                   	// #10
  4051b4:	bl	404c00 <wcrtomb@plt+0x1dd0>
  4051b8:	mov	x0, x19
  4051bc:	bl	409ae8 <wcrtomb@plt+0x6cb8>
  4051c0:	mov	x19, xzr
  4051c4:	mov	x0, x19
  4051c8:	ldp	x20, x19, [sp, #96]
  4051cc:	ldp	x22, x21, [sp, #80]
  4051d0:	ldp	x24, x23, [sp, #64]
  4051d4:	ldp	x26, x25, [sp, #48]
  4051d8:	ldp	x28, x27, [sp, #32]
  4051dc:	ldp	x29, x30, [sp, #16]
  4051e0:	add	sp, sp, #0x70
  4051e4:	ret
  4051e8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4051ec:	add	x0, x0, #0x2ba
  4051f0:	bl	402f4c <wcrtomb@plt+0x11c>
  4051f4:	stp	x29, x30, [sp, #-48]!
  4051f8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4051fc:	add	x8, x8, #0x5b0
  405200:	ldp	x8, x9, [x8]
  405204:	stp	x22, x21, [sp, #16]
  405208:	stp	x20, x19, [sp, #32]
  40520c:	mov	w19, w2
  405210:	sub	x9, x9, x8
  405214:	mov	x20, x1
  405218:	cmp	x9, #0x1f
  40521c:	mov	x21, x0
  405220:	mov	x29, sp
  405224:	b.hi	405240 <wcrtomb@plt+0x2410>  // b.pmore
  405228:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40522c:	add	x22, x22, #0x598
  405230:	mov	w1, #0x20                  	// #32
  405234:	mov	x0, x22
  405238:	bl	41107c <_obstack_newchunk@@Base>
  40523c:	ldr	x8, [x22, #24]
  405240:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405244:	add	x9, x9, #0x5a8
  405248:	ldr	x0, [x9]
  40524c:	add	x8, x8, #0x20
  405250:	str	x8, [x9, #8]
  405254:	cmp	x8, x0
  405258:	b.ne	40526c <wcrtomb@plt+0x243c>  // b.any
  40525c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405260:	ldrb	w10, [x9, #1512]
  405264:	orr	w10, w10, #0x2
  405268:	strb	w10, [x9, #1512]
  40526c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405270:	add	x9, x9, #0x5a0
  405274:	ldr	x10, [x9, #40]
  405278:	ldr	x11, [x9]
  40527c:	ldr	x12, [x9, #24]
  405280:	add	x8, x10, x8
  405284:	bic	x8, x8, x10
  405288:	sub	x10, x12, x11
  40528c:	sub	x11, x8, x11
  405290:	cmp	x11, x10
  405294:	mov	w10, #0xffffffff            	// #-1
  405298:	csel	x8, x12, x8, hi  // hi = pmore
  40529c:	stp	x8, x8, [x9, #8]
  4052a0:	stp	x21, x20, [x0]
  4052a4:	stp	w10, w19, [x0, #16]
  4052a8:	ldp	x20, x19, [sp, #32]
  4052ac:	ldp	x22, x21, [sp, #16]
  4052b0:	ldp	x29, x30, [sp], #48
  4052b4:	ret
  4052b8:	stp	x29, x30, [sp, #-32]!
  4052bc:	stp	x20, x19, [sp, #16]
  4052c0:	mov	x29, sp
  4052c4:	mov	w20, w0
  4052c8:	bl	402bc0 <__ctype_b_loc@plt>
  4052cc:	and	w19, w20, #0xff
  4052d0:	cmp	w19, #0x5c
  4052d4:	b.eq	4052f8 <wcrtomb@plt+0x24c8>  // b.none
  4052d8:	ldr	x8, [x0]
  4052dc:	and	x9, x20, #0xff
  4052e0:	ldrh	w8, [x8, x9, lsl #1]
  4052e4:	tbz	w8, #14, 4052f8 <wcrtomb@plt+0x24c8>
  4052e8:	mov	w0, w19
  4052ec:	ldp	x20, x19, [sp, #16]
  4052f0:	ldp	x29, x30, [sp], #32
  4052f4:	b	402a00 <putchar_unlocked@plt>
  4052f8:	mov	w0, #0x5c                  	// #92
  4052fc:	bl	402a00 <putchar_unlocked@plt>
  405300:	sub	w8, w19, #0x7
  405304:	cmp	w8, #0x6
  405308:	b.hi	40532c <wcrtomb@plt+0x24fc>  // b.pmore
  40530c:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405310:	add	x9, x9, #0x4d0
  405314:	adr	x10, 405324 <wcrtomb@plt+0x24f4>
  405318:	ldrb	w11, [x9, x8]
  40531c:	add	x10, x10, x11, lsl #2
  405320:	br	x10
  405324:	mov	w0, #0x61                  	// #97
  405328:	b	4052ec <wcrtomb@plt+0x24bc>
  40532c:	cmp	w19, #0x5c
  405330:	b.ne	40533c <wcrtomb@plt+0x250c>  // b.any
  405334:	mov	w0, #0x5c                  	// #92
  405338:	b	4052ec <wcrtomb@plt+0x24bc>
  40533c:	mov	w2, w19
  405340:	ldp	x20, x19, [sp, #16]
  405344:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405348:	add	x1, x1, #0x530
  40534c:	mov	w0, #0x1                   	// #1
  405350:	ldp	x29, x30, [sp], #32
  405354:	b	4029b0 <__printf_chk@plt>
  405358:	mov	w0, #0x74                  	// #116
  40535c:	b	4052ec <wcrtomb@plt+0x24bc>
  405360:	mov	w0, #0x6e                  	// #110
  405364:	b	4052ec <wcrtomb@plt+0x24bc>
  405368:	mov	w0, #0x76                  	// #118
  40536c:	b	4052ec <wcrtomb@plt+0x24bc>
  405370:	mov	w0, #0x66                  	// #102
  405374:	b	4052ec <wcrtomb@plt+0x24bc>
  405378:	mov	w0, #0x72                  	// #114
  40537c:	b	4052ec <wcrtomb@plt+0x24bc>
  405380:	stp	x29, x30, [sp, #-80]!
  405384:	stp	x26, x25, [sp, #16]
  405388:	stp	x24, x23, [sp, #32]
  40538c:	stp	x22, x21, [sp, #48]
  405390:	stp	x20, x19, [sp, #64]
  405394:	mov	x29, sp
  405398:	cbz	x0, 4054ac <wcrtomb@plt+0x267c>
  40539c:	ldrb	w9, [x1, #21]
  4053a0:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4053a4:	ldr	w8, [x22, #1576]
  4053a8:	mov	x19, x1
  4053ac:	mov	x20, x0
  4053b0:	cmp	w9, #0x7d
  4053b4:	b.ne	4053c0 <wcrtomb@plt+0x2590>  // b.any
  4053b8:	sub	w8, w8, #0x1
  4053bc:	str	w8, [x22, #1576]
  4053c0:	cmp	w8, #0x1
  4053c4:	b.lt	4053f4 <wcrtomb@plt+0x25c4>  // b.tstop
  4053c8:	adrp	x21, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4053cc:	mov	w23, wzr
  4053d0:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4053d4:	add	x21, x21, #0x720
  4053d8:	ldr	x1, [x24, #1304]
  4053dc:	mov	x0, x21
  4053e0:	bl	402d20 <fputs_unlocked@plt>
  4053e4:	ldr	w8, [x22, #1576]
  4053e8:	add	w23, w23, #0x1
  4053ec:	cmp	w23, w8
  4053f0:	b.lt	4053d8 <wcrtomb@plt+0x25a8>  // b.tstop
  4053f4:	ldr	x0, [x19]
  4053f8:	bl	405848 <wcrtomb@plt+0x2a18>
  4053fc:	ldr	x8, [x19, #8]
  405400:	cbz	x8, 405414 <wcrtomb@plt+0x25e4>
  405404:	mov	w0, #0x2c                  	// #44
  405408:	bl	402a00 <putchar_unlocked@plt>
  40540c:	ldr	x0, [x19, #8]
  405410:	b	405418 <wcrtomb@plt+0x25e8>
  405414:	mov	x0, xzr
  405418:	bl	405848 <wcrtomb@plt+0x2a18>
  40541c:	ldrb	w8, [x19, #20]
  405420:	ldrb	w9, [x19, #21]
  405424:	cmp	w8, #0x0
  405428:	cset	w8, ne  // ne = any
  40542c:	cmp	w9, #0x7b
  405430:	cset	w9, eq  // eq = none
  405434:	cmp	w8, w9
  405438:	b.eq	405444 <wcrtomb@plt+0x2614>  // b.none
  40543c:	mov	w0, #0x21                  	// #33
  405440:	bl	402a00 <putchar_unlocked@plt>
  405444:	ldr	x8, [x19]
  405448:	cbnz	x8, 405454 <wcrtomb@plt+0x2624>
  40544c:	ldr	x8, [x19, #8]
  405450:	cbz	x8, 40545c <wcrtomb@plt+0x262c>
  405454:	mov	w0, #0x20                  	// #32
  405458:	bl	402a00 <putchar_unlocked@plt>
  40545c:	ldrb	w0, [x19, #21]
  405460:	bl	402a00 <putchar_unlocked@plt>
  405464:	ldrb	w9, [x19, #21]
  405468:	sub	w8, w9, #0x3a
  40546c:	cmp	w8, #0x43
  405470:	b.hi	4057e0 <wcrtomb@plt+0x29b0>  // b.pmore
  405474:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405478:	add	x9, x9, #0x4d7
  40547c:	adr	x10, 40548c <wcrtomb@plt+0x265c>
  405480:	ldrb	w11, [x9, x8]
  405484:	add	x10, x10, x11, lsl #2
  405488:	br	x10
  40548c:	mov	w0, #0xa                   	// #10
  405490:	bl	402a00 <putchar_unlocked@plt>
  405494:	ldrb	w8, [x19, #21]
  405498:	cmp	w8, #0x7b
  40549c:	b.ne	4054ac <wcrtomb@plt+0x267c>  // b.any
  4054a0:	ldr	w8, [x22, #1576]
  4054a4:	add	w8, w8, #0x1
  4054a8:	str	w8, [x22, #1576]
  4054ac:	ldp	x20, x19, [sp, #64]
  4054b0:	ldp	x22, x21, [sp, #48]
  4054b4:	ldp	x24, x23, [sp, #32]
  4054b8:	ldp	x26, x25, [sp, #16]
  4054bc:	ldp	x29, x30, [sp], #80
  4054c0:	ret
  4054c4:	ldr	w2, [x19, #24]
  4054c8:	cmn	w2, #0x1
  4054cc:	b.eq	40548c <wcrtomb@plt+0x265c>  // b.none
  4054d0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4054d4:	add	x1, x1, #0x827
  4054d8:	mov	w0, #0x1                   	// #1
  4054dc:	bl	4029b0 <__printf_chk@plt>
  4054e0:	b	40548c <wcrtomb@plt+0x265c>
  4054e4:	ldr	x8, [x19, #24]
  4054e8:	ldr	x9, [x20, #16]
  4054ec:	cmp	x8, x9
  4054f0:	b.cs	40548c <wcrtomb@plt+0x265c>  // b.hs, b.nlast
  4054f4:	ldr	x9, [x20]
  4054f8:	mov	w10, #0x28                  	// #40
  4054fc:	madd	x8, x8, x10, x9
  405500:	ldr	x2, [x8, #24]
  405504:	cbz	x2, 40548c <wcrtomb@plt+0x265c>
  405508:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40550c:	add	x1, x1, #0x450
  405510:	b	405590 <wcrtomb@plt+0x2760>
  405514:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405518:	ldr	x1, [x20, #1304]
  40551c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405520:	add	x0, x0, #0x5b7
  405524:	bl	402d20 <fputs_unlocked@plt>
  405528:	ldr	x2, [x19, #32]
  40552c:	cbz	x2, 40548c <wcrtomb@plt+0x265c>
  405530:	ldr	x0, [x19, #24]
  405534:	ldr	x3, [x20, #1304]
  405538:	b	405560 <wcrtomb@plt+0x2730>
  40553c:	ldr	x8, [x19, #24]
  405540:	cbz	x8, 40548c <wcrtomb@plt+0x265c>
  405544:	ldr	x0, [x8]
  405548:	b	405578 <wcrtomb@plt+0x2748>
  40554c:	mov	w0, #0x20                  	// #32
  405550:	bl	402a00 <putchar_unlocked@plt>
  405554:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405558:	ldp	x0, x2, [x19, #24]
  40555c:	ldr	x3, [x8, #1304]
  405560:	mov	w1, #0x1                   	// #1
  405564:	bl	402740 <fwrite_unlocked@plt>
  405568:	b	40548c <wcrtomb@plt+0x265c>
  40556c:	mov	w0, #0x20                  	// #32
  405570:	bl	402a00 <putchar_unlocked@plt>
  405574:	ldr	x0, [x19, #24]
  405578:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40557c:	ldr	x1, [x8, #1304]
  405580:	b	405634 <wcrtomb@plt+0x2804>
  405584:	ldr	x2, [x19, #24]
  405588:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40558c:	add	x1, x1, #0x451
  405590:	mov	w0, #0x1                   	// #1
  405594:	bl	4029b0 <__printf_chk@plt>
  405598:	b	40548c <wcrtomb@plt+0x265c>
  40559c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4055a0:	ldr	w20, [x8, #2292]
  4055a4:	mov	w0, #0x2f                  	// #47
  4055a8:	bl	402a00 <putchar_unlocked@plt>
  4055ac:	cmp	w20, #0x1
  4055b0:	b.le	405780 <wcrtomb@plt+0x2950>
  4055b4:	ldr	x8, [x19, #24]
  4055b8:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4055bc:	ldr	x0, [x8]
  4055c0:	cbz	x0, 4055e0 <wcrtomb@plt+0x27b0>
  4055c4:	mov	w21, #0x2                   	// #2
  4055c8:	ldr	x1, [x20, #1304]
  4055cc:	bl	402d20 <fputs_unlocked@plt>
  4055d0:	ldr	x8, [x19, #24]
  4055d4:	ldr	x0, [x8, w21, uxtw #3]
  4055d8:	add	w21, w21, #0x2
  4055dc:	cbnz	x0, 4055c8 <wcrtomb@plt+0x2798>
  4055e0:	mov	w0, #0x2f                  	// #47
  4055e4:	bl	402a00 <putchar_unlocked@plt>
  4055e8:	ldr	x8, [x19, #24]
  4055ec:	ldr	x9, [x8]
  4055f0:	cbz	x9, 4057d4 <wcrtomb@plt+0x29a4>
  4055f4:	mov	w21, #0x1                   	// #1
  4055f8:	ldr	x0, [x8, w21, uxtw #3]
  4055fc:	ldr	x1, [x20, #1304]
  405600:	bl	402d20 <fputs_unlocked@plt>
  405604:	ldr	x8, [x19, #24]
  405608:	add	w9, w21, #0x1
  40560c:	add	w21, w21, #0x2
  405610:	ldr	x9, [x8, w9, uxtw #3]
  405614:	cbnz	x9, 4055f8 <wcrtomb@plt+0x27c8>
  405618:	b	4057d4 <wcrtomb@plt+0x29a4>
  40561c:	mov	w0, #0x20                  	// #32
  405620:	bl	402a00 <putchar_unlocked@plt>
  405624:	ldr	x8, [x19, #24]
  405628:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40562c:	ldr	x1, [x9, #1304]
  405630:	ldr	x0, [x8]
  405634:	bl	402d20 <fputs_unlocked@plt>
  405638:	b	40548c <wcrtomb@plt+0x265c>
  40563c:	ldr	x21, [x19, #24]
  405640:	cbz	x21, 40548c <wcrtomb@plt+0x265c>
  405644:	ldr	x0, [x21]
  405648:	bl	4059a4 <wcrtomb@plt+0x2b74>
  40564c:	ldr	x23, [x21, #8]
  405650:	cbz	x23, 405704 <wcrtomb@plt+0x28d4>
  405654:	adrp	x20, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405658:	adrp	x25, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40565c:	mov	w26, wzr
  405660:	add	x20, x20, #0x5b9
  405664:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405668:	add	x25, x25, #0x524
  40566c:	ldr	w8, [x23, #20]
  405670:	cmp	w8, w26
  405674:	b.eq	4056bc <wcrtomb@plt+0x288c>  // b.none
  405678:	mov	w0, #0x5c                  	// #92
  40567c:	bl	402a00 <putchar_unlocked@plt>
  405680:	ldrsw	x8, [x23, #20]
  405684:	cmp	w8, #0x3
  405688:	b.cs	405694 <wcrtomb@plt+0x2864>  // b.hs, b.nlast
  40568c:	ldr	w0, [x25, x8, lsl #2]
  405690:	b	4056b4 <wcrtomb@plt+0x2884>
  405694:	and	w8, w8, #0xc
  405698:	cmp	w8, #0x4
  40569c:	b.eq	4056b0 <wcrtomb@plt+0x2880>  // b.none
  4056a0:	cmp	w8, #0x8
  4056a4:	b.ne	4056b8 <wcrtomb@plt+0x2888>  // b.any
  4056a8:	mov	w0, #0x6c                  	// #108
  4056ac:	b	4056b4 <wcrtomb@plt+0x2884>
  4056b0:	mov	w0, #0x75                  	// #117
  4056b4:	bl	402a00 <putchar_unlocked@plt>
  4056b8:	ldr	w26, [x23, #20]
  4056bc:	ldr	x2, [x23, #8]
  4056c0:	cbz	x2, 4056d4 <wcrtomb@plt+0x28a4>
  4056c4:	ldr	x0, [x23]
  4056c8:	ldr	x3, [x24, #1304]
  4056cc:	mov	w1, #0x1                   	// #1
  4056d0:	bl	402740 <fwrite_unlocked@plt>
  4056d4:	ldr	w2, [x23, #16]
  4056d8:	cmn	w2, #0x1
  4056dc:	b.eq	4056fc <wcrtomb@plt+0x28cc>  // b.none
  4056e0:	cbnz	w2, 4056f0 <wcrtomb@plt+0x28c0>
  4056e4:	mov	w0, #0x26                  	// #38
  4056e8:	bl	402a00 <putchar_unlocked@plt>
  4056ec:	b	4056fc <wcrtomb@plt+0x28cc>
  4056f0:	mov	w0, #0x1                   	// #1
  4056f4:	mov	x1, x20
  4056f8:	bl	4029b0 <__printf_chk@plt>
  4056fc:	ldr	x23, [x23, #24]
  405700:	cbnz	x23, 40566c <wcrtomb@plt+0x283c>
  405704:	mov	w0, #0x2f                  	// #47
  405708:	bl	402a00 <putchar_unlocked@plt>
  40570c:	ldr	x0, [x21]
  405710:	mov	w1, wzr
  405714:	bl	405a3c <wcrtomb@plt+0x2c0c>
  405718:	ldrb	w8, [x21, #32]
  40571c:	tbz	w8, #0, 40572c <wcrtomb@plt+0x28fc>
  405720:	mov	w0, #0x67                  	// #103
  405724:	bl	402a00 <putchar_unlocked@plt>
  405728:	ldrb	w8, [x21, #32]
  40572c:	tbz	w8, #3, 40573c <wcrtomb@plt+0x290c>
  405730:	mov	w0, #0x65                  	// #101
  405734:	bl	402a00 <putchar_unlocked@plt>
  405738:	ldrb	w8, [x21, #32]
  40573c:	tst	w8, #0x6
  405740:	b.eq	40574c <wcrtomb@plt+0x291c>  // b.none
  405744:	mov	w0, #0x70                  	// #112
  405748:	bl	402a00 <putchar_unlocked@plt>
  40574c:	ldr	x2, [x21, #16]
  405750:	cbz	x2, 405764 <wcrtomb@plt+0x2934>
  405754:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405758:	add	x1, x1, #0x558
  40575c:	mov	w0, #0x1                   	// #1
  405760:	bl	4029b0 <__printf_chk@plt>
  405764:	ldr	x8, [x21, #24]
  405768:	cbz	x8, 40548c <wcrtomb@plt+0x265c>
  40576c:	mov	w0, #0x77                  	// #119
  405770:	bl	402a00 <putchar_unlocked@plt>
  405774:	ldr	x8, [x21, #24]
  405778:	cbnz	x8, 405544 <wcrtomb@plt+0x2714>
  40577c:	b	40548c <wcrtomb@plt+0x265c>
  405780:	mov	x20, xzr
  405784:	ldr	x8, [x19, #24]
  405788:	ldrb	w8, [x8, x20]
  40578c:	cmp	w8, w20, uxtb
  405790:	b.eq	40579c <wcrtomb@plt+0x296c>  // b.none
  405794:	mov	w0, w20
  405798:	bl	402a00 <putchar_unlocked@plt>
  40579c:	add	x20, x20, #0x1
  4057a0:	cmp	x20, #0x100
  4057a4:	b.ne	405784 <wcrtomb@plt+0x2954>  // b.any
  4057a8:	mov	w0, #0x2f                  	// #47
  4057ac:	bl	402a00 <putchar_unlocked@plt>
  4057b0:	mov	x20, xzr
  4057b4:	ldr	x8, [x19, #24]
  4057b8:	ldrb	w0, [x8, x20]
  4057bc:	cmp	x20, x0
  4057c0:	b.eq	4057c8 <wcrtomb@plt+0x2998>  // b.none
  4057c4:	bl	402a00 <putchar_unlocked@plt>
  4057c8:	add	x20, x20, #0x1
  4057cc:	cmp	x20, #0x100
  4057d0:	b.ne	4057b4 <wcrtomb@plt+0x2984>  // b.any
  4057d4:	mov	w0, #0x2f                  	// #47
  4057d8:	bl	402a00 <putchar_unlocked@plt>
  4057dc:	b	40548c <wcrtomb@plt+0x265c>
  4057e0:	cmp	w9, #0x23
  4057e4:	b.ne	405808 <wcrtomb@plt+0x29d8>  // b.any
  4057e8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4057ec:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4057f0:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4057f4:	add	x0, x0, #0x477
  4057f8:	add	x1, x1, #0x562
  4057fc:	add	x3, x3, #0x56e
  405800:	mov	w2, #0x123                 	// #291
  405804:	bl	402d90 <__assert_fail@plt>
  405808:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40580c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405810:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405814:	add	x0, x0, #0x477
  405818:	add	x1, x1, #0x562
  40581c:	add	x3, x3, #0x56e
  405820:	mov	w2, #0x194                 	// #404
  405824:	bl	402d90 <__assert_fail@plt>
  405828:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40582c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405830:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405834:	add	x0, x0, #0x477
  405838:	add	x1, x1, #0x562
  40583c:	add	x3, x3, #0x56e
  405840:	mov	w2, #0x17e                 	// #382
  405844:	bl	402d90 <__assert_fail@plt>
  405848:	stp	x29, x30, [sp, #-32]!
  40584c:	str	x19, [sp, #16]
  405850:	mov	x29, sp
  405854:	cbz	x0, 40589c <wcrtomb@plt+0x2a6c>
  405858:	ldr	w8, [x0]
  40585c:	mov	x19, x0
  405860:	cmp	w8, #0x6
  405864:	b.hi	40589c <wcrtomb@plt+0x2a6c>  // b.pmore
  405868:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40586c:	add	x9, x9, #0x51b
  405870:	adr	x10, 405880 <wcrtomb@plt+0x2a50>
  405874:	ldrb	w11, [x9, x8]
  405878:	add	x10, x10, x11, lsl #2
  40587c:	br	x10
  405880:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405884:	ldr	x1, [x8, #1304]
  405888:	ldr	x19, [sp, #16]
  40588c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405890:	add	x0, x0, #0x543
  405894:	ldp	x29, x30, [sp], #32
  405898:	b	402d20 <fputs_unlocked@plt>
  40589c:	ldr	x19, [sp, #16]
  4058a0:	ldp	x29, x30, [sp], #32
  4058a4:	ret
  4058a8:	ldr	x0, [x19, #24]
  4058ac:	bl	4059a4 <wcrtomb@plt+0x2b74>
  4058b0:	ldr	x0, [x19, #24]
  4058b4:	ldr	x19, [sp, #16]
  4058b8:	mov	w1, #0x1                   	// #1
  4058bc:	ldp	x29, x30, [sp], #32
  4058c0:	b	405a3c <wcrtomb@plt+0x2c0c>
  4058c4:	ldr	x2, [x19, #8]
  4058c8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4058cc:	add	x1, x1, #0x558
  4058d0:	b	40590c <wcrtomb@plt+0x2adc>
  4058d4:	ldp	x2, x3, [x19, #8]
  4058d8:	ldr	x19, [sp, #16]
  4058dc:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4058e0:	add	x1, x1, #0x54f
  4058e4:	mov	w0, #0x1                   	// #1
  4058e8:	ldp	x29, x30, [sp], #32
  4058ec:	b	4029b0 <__printf_chk@plt>
  4058f0:	ldr	x2, [x19, #16]
  4058f4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4058f8:	add	x1, x1, #0x557
  4058fc:	b	40590c <wcrtomb@plt+0x2adc>
  405900:	ldr	x2, [x19, #16]
  405904:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405908:	add	x1, x1, #0x552
  40590c:	ldr	x19, [sp, #16]
  405910:	mov	w0, #0x1                   	// #1
  405914:	ldp	x29, x30, [sp], #32
  405918:	b	4029b0 <__printf_chk@plt>
  40591c:	ldr	x19, [sp, #16]
  405920:	mov	w0, #0x24                  	// #36
  405924:	ldp	x29, x30, [sp], #32
  405928:	b	402a00 <putchar_unlocked@plt>
  40592c:	cbz	x0, 4059a0 <wcrtomb@plt+0x2b70>
  405930:	stp	x29, x30, [sp, #-48]!
  405934:	stp	x20, x19, [sp, #32]
  405938:	mov	x19, x0
  40593c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405940:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405944:	mov	w8, #0x1                   	// #1
  405948:	add	x0, x0, #0x536
  40594c:	stp	x22, x21, [sp, #16]
  405950:	mov	x29, sp
  405954:	str	w8, [x20, #1576]
  405958:	bl	402b60 <puts@plt>
  40595c:	ldr	x8, [x19, #16]
  405960:	cbz	x8, 405990 <wcrtomb@plt+0x2b60>
  405964:	mov	x21, xzr
  405968:	mov	x22, xzr
  40596c:	ldr	x8, [x19]
  405970:	mov	x0, x19
  405974:	add	x1, x8, x21
  405978:	bl	405380 <wcrtomb@plt+0x2550>
  40597c:	ldr	x8, [x19, #16]
  405980:	add	x22, x22, #0x1
  405984:	add	x21, x21, #0x28
  405988:	cmp	x22, x8
  40598c:	b.cc	40596c <wcrtomb@plt+0x2b3c>  // b.lo, b.ul, b.last
  405990:	str	wzr, [x20, #1576]
  405994:	ldp	x20, x19, [sp, #32]
  405998:	ldp	x22, x21, [sp, #16]
  40599c:	ldp	x29, x30, [sp], #48
  4059a0:	ret
  4059a4:	stp	x29, x30, [sp, #-48]!
  4059a8:	stp	x22, x21, [sp, #16]
  4059ac:	stp	x20, x19, [sp, #32]
  4059b0:	mov	x29, sp
  4059b4:	cbz	x0, 405a1c <wcrtomb@plt+0x2bec>
  4059b8:	mov	x19, x0
  4059bc:	mov	w0, #0x2f                  	// #47
  4059c0:	bl	402a00 <putchar_unlocked@plt>
  4059c4:	ldr	x20, [x19, #72]
  4059c8:	cbz	x20, 405a08 <wcrtomb@plt+0x2bd8>
  4059cc:	add	x21, x19, #0x5a
  4059d0:	adrp	x19, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4059d4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4059d8:	add	x19, x19, #0x55f
  4059dc:	ldrb	w0, [x21]
  4059e0:	sub	x20, x20, #0x1
  4059e4:	cmp	w0, #0x2f
  4059e8:	b.ne	4059fc <wcrtomb@plt+0x2bcc>  // b.any
  4059ec:	ldr	x1, [x22, #1304]
  4059f0:	mov	x0, x19
  4059f4:	bl	402d20 <fputs_unlocked@plt>
  4059f8:	b	405a00 <wcrtomb@plt+0x2bd0>
  4059fc:	bl	4052b8 <wcrtomb@plt+0x2488>
  405a00:	add	x21, x21, #0x1
  405a04:	cbnz	x20, 4059dc <wcrtomb@plt+0x2bac>
  405a08:	ldp	x20, x19, [sp, #32]
  405a0c:	ldp	x22, x21, [sp, #16]
  405a10:	mov	w0, #0x2f                  	// #47
  405a14:	ldp	x29, x30, [sp], #48
  405a18:	b	402a00 <putchar_unlocked@plt>
  405a1c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405a20:	ldr	x1, [x8, #1304]
  405a24:	ldp	x20, x19, [sp, #32]
  405a28:	ldp	x22, x21, [sp, #16]
  405a2c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405a30:	add	x0, x0, #0x55c
  405a34:	ldp	x29, x30, [sp], #48
  405a38:	b	402d20 <fputs_unlocked@plt>
  405a3c:	stp	x29, x30, [sp, #-32]!
  405a40:	stp	x20, x19, [sp, #16]
  405a44:	mov	x29, sp
  405a48:	cbz	x0, 405a78 <wcrtomb@plt+0x2c48>
  405a4c:	ldr	w8, [x0, #64]
  405a50:	mov	w19, w1
  405a54:	mov	x20, x0
  405a58:	tbz	w8, #1, 405a74 <wcrtomb@plt+0x2c44>
  405a5c:	tst	w19, #0x1
  405a60:	mov	w8, #0x69                  	// #105
  405a64:	mov	w9, #0x49                  	// #73
  405a68:	csel	w0, w9, w8, ne  // ne = any
  405a6c:	bl	402a00 <putchar_unlocked@plt>
  405a70:	ldr	w8, [x20, #64]
  405a74:	tbnz	w8, #2, 405a84 <wcrtomb@plt+0x2c54>
  405a78:	ldp	x20, x19, [sp, #16]
  405a7c:	ldp	x29, x30, [sp], #32
  405a80:	ret
  405a84:	tst	w19, #0x1
  405a88:	ldp	x20, x19, [sp, #16]
  405a8c:	mov	w8, #0x6d                  	// #109
  405a90:	mov	w9, #0x4d                  	// #77
  405a94:	csel	w0, w9, w8, ne  // ne = any
  405a98:	ldp	x29, x30, [sp], #32
  405a9c:	b	402a00 <putchar_unlocked@plt>
  405aa0:	stp	x29, x30, [sp, #-96]!
  405aa4:	stp	x28, x27, [sp, #16]
  405aa8:	stp	x26, x25, [sp, #32]
  405aac:	stp	x24, x23, [sp, #48]
  405ab0:	stp	x22, x21, [sp, #64]
  405ab4:	stp	x20, x19, [sp, #80]
  405ab8:	mov	x29, sp
  405abc:	sub	sp, sp, #0x1, lsl #12
  405ac0:	sub	sp, sp, #0x1e0
  405ac4:	mov	x21, x0
  405ac8:	mov	w0, #0x33                  	// #51
  405acc:	mov	x20, x1
  405ad0:	bl	410e00 <wcrtomb@plt+0xdfd0>
  405ad4:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405ad8:	ldr	q0, [x9, #1472]
  405adc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ae0:	add	x8, x8, #0x630
  405ae4:	mov	w19, #0x1                   	// #1
  405ae8:	stp	x0, x0, [x8]
  405aec:	mov	w0, #0x1                   	// #1
  405af0:	strb	w19, [x8, #32]
  405af4:	str	q0, [sp, #16]
  405af8:	str	q0, [x8, #16]
  405afc:	stur	xzr, [x8, #36]
  405b00:	bl	410e00 <wcrtomb@plt+0xdfd0>
  405b04:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405b08:	add	x23, x23, #0x660
  405b0c:	stp	x0, x0, [x23]
  405b10:	mov	w0, #0x1                   	// #1
  405b14:	stp	xzr, xzr, [x23, #16]
  405b18:	strb	w19, [x23, #32]
  405b1c:	stur	xzr, [x23, #36]
  405b20:	bl	410e00 <wcrtomb@plt+0xdfd0>
  405b24:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405b28:	add	x8, x8, #0x690
  405b2c:	stp	x0, x0, [x8]
  405b30:	stp	xzr, xzr, [x8, #16]
  405b34:	strb	w19, [x8, #32]
  405b38:	stur	xzr, [x8, #36]
  405b3c:	strb	w19, [sp, #88]
  405b40:	cbz	x20, 405b54 <wcrtomb@plt+0x2d24>
  405b44:	ldr	x8, [x20]
  405b48:	cbz	x8, 405b54 <wcrtomb@plt+0x2d24>
  405b4c:	str	x20, [sp, #64]
  405b50:	b	405b6c <wcrtomb@plt+0x2d3c>
  405b54:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405b58:	ldr	x8, [x8, #1912]
  405b5c:	cbnz	x8, 406fd8 <wcrtomb@plt+0x41a8>
  405b60:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405b64:	add	x8, x8, #0x458
  405b68:	str	x8, [sp, #64]
  405b6c:	adrp	x8, 406000 <wcrtomb@plt+0x31d0>
  405b70:	add	x8, x8, #0xff0
  405b74:	add	x0, sp, #0x40
  405b78:	mov	x1, x21
  405b7c:	mov	w2, wzr
  405b80:	stp	xzr, xzr, [sp, #72]
  405b84:	str	x8, [sp, #96]
  405b88:	str	xzr, [sp, #248]
  405b8c:	bl	406ff8 <wcrtomb@plt+0x41c8>
  405b90:	mov	w19, wzr
  405b94:	tbz	w0, #0, 406f6c <wcrtomb@plt+0x413c>
  405b98:	add	x8, sp, #0x140
  405b9c:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405ba0:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ba4:	mov	w25, #0x28                  	// #40
  405ba8:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405bac:	add	x27, x27, #0x72d
  405bb0:	orr	x9, x8, #0x1
  405bb4:	orr	x8, x8, #0x2
  405bb8:	stp	x9, x8, [sp, #40]
  405bbc:	ldrb	w8, [x24, #1904]
  405bc0:	cbz	w8, 405c08 <wcrtomb@plt+0x2dd8>
  405bc4:	ldr	x0, [sp, #248]
  405bc8:	cbz	x0, 405bd4 <wcrtomb@plt+0x2da4>
  405bcc:	bl	402850 <fileno@plt>
  405bd0:	cbz	w0, 405bdc <wcrtomb@plt+0x2dac>
  405bd4:	ldr	x2, [sp, #112]
  405bd8:	b	405be4 <wcrtomb@plt+0x2db4>
  405bdc:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405be0:	add	x2, x2, #0x713
  405be4:	ldr	x3, [sp, #80]
  405be8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405bec:	mov	w0, #0x1                   	// #1
  405bf0:	add	x1, x1, #0x6fb
  405bf4:	bl	4029b0 <__printf_chk@plt>
  405bf8:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405bfc:	add	x0, x0, #0x630
  405c00:	bl	407140 <wcrtomb@plt+0x4310>
  405c04:	ldrb	w8, [x24, #1904]
  405c08:	ldr	x9, [x21, #16]
  405c0c:	cmp	w8, #0x0
  405c10:	cset	w8, ne  // ne = any
  405c14:	cmp	x9, #0x1
  405c18:	b.lt	406e5c <wcrtomb@plt+0x402c>  // b.tstop
  405c1c:	ldr	x26, [x21]
  405c20:	madd	x28, x9, x25, x26
  405c24:	str	x28, [sp, #56]
  405c28:	tbz	w8, #0, 405c44 <wcrtomb@plt+0x2e14>
  405c2c:	ldr	x1, [x20, #1304]
  405c30:	mov	x0, x27
  405c34:	bl	402d20 <fputs_unlocked@plt>
  405c38:	mov	x0, x21
  405c3c:	mov	x1, x26
  405c40:	bl	405380 <wcrtomb@plt+0x2550>
  405c44:	ldr	x8, [x26]
  405c48:	cbz	x8, 405d8c <wcrtomb@plt+0x2f5c>
  405c4c:	ldr	w9, [x26, #16]
  405c50:	ldr	x0, [x26, #8]
  405c54:	cmp	w9, #0x1
  405c58:	b.ne	405c8c <wcrtomb@plt+0x2e5c>  // b.any
  405c5c:	ldr	w8, [x0]
  405c60:	cmp	w8, #0x2
  405c64:	b.ne	405d3c <wcrtomb@plt+0x2f0c>  // b.any
  405c68:	ldr	x8, [sp, #80]
  405c6c:	ldr	x9, [x0, #8]
  405c70:	cmp	x8, x9
  405c74:	b.cc	405c80 <wcrtomb@plt+0x2e50>  // b.lo, b.ul, b.last
  405c78:	mov	w10, #0x2                   	// #2
  405c7c:	str	w10, [x26, #16]
  405c80:	cmp	x8, x9
  405c84:	cset	w8, ls  // ls = plast
  405c88:	b	405d90 <wcrtomb@plt+0x2f60>
  405c8c:	cbz	x0, 405cb8 <wcrtomb@plt+0x2e88>
  405c90:	ldr	w10, [x8]
  405c94:	cmp	w10, #0x2
  405c98:	b.ne	405ccc <wcrtomb@plt+0x2e9c>  // b.any
  405c9c:	cmp	w9, #0x2
  405ca0:	b.eq	405d54 <wcrtomb@plt+0x2f24>  // b.none
  405ca4:	ldr	x9, [sp, #80]
  405ca8:	ldr	x8, [x8, #8]
  405cac:	cmp	x9, x8
  405cb0:	b.cs	405ce0 <wcrtomb@plt+0x2eb0>  // b.hs, b.nlast
  405cb4:	b	405d54 <wcrtomb@plt+0x2f24>
  405cb8:	add	x1, sp, #0x40
  405cbc:	mov	x0, x8
  405cc0:	bl	407b30 <wcrtomb@plt+0x4d00>
  405cc4:	mov	w8, w0
  405cc8:	b	405d90 <wcrtomb@plt+0x2f60>
  405ccc:	add	x1, sp, #0x40
  405cd0:	mov	x0, x8
  405cd4:	bl	407b30 <wcrtomb@plt+0x4d00>
  405cd8:	tbz	w0, #0, 405d54 <wcrtomb@plt+0x2f24>
  405cdc:	ldr	x0, [x26, #8]
  405ce0:	mov	w8, #0x1                   	// #1
  405ce4:	str	w8, [x26, #16]
  405ce8:	ldr	w9, [x0]
  405cec:	sub	w9, w9, #0x1
  405cf0:	cmp	w9, #0x4
  405cf4:	b.hi	405d3c <wcrtomb@plt+0x2f0c>  // b.pmore
  405cf8:	adrp	x12, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405cfc:	add	x12, x12, #0x5d0
  405d00:	adr	x10, 405d10 <wcrtomb@plt+0x2ee0>
  405d04:	ldrb	w11, [x12, x9]
  405d08:	add	x10, x10, x11, lsl #2
  405d0c:	br	x10
  405d10:	ldr	x8, [sp, #80]
  405d14:	ldr	x9, [x0, #8]
  405d18:	cmp	x8, x9
  405d1c:	b.cc	405d28 <wcrtomb@plt+0x2ef8>  // b.lo, b.ul, b.last
  405d20:	mov	w10, #0x2                   	// #2
  405d24:	str	w10, [x26, #16]
  405d28:	cmp	x8, x9
  405d2c:	b.ls	405d8c <wcrtomb@plt+0x2f5c>  // b.plast
  405d30:	ldr	x0, [x26]
  405d34:	add	x1, sp, #0x40
  405d38:	b	405cc0 <wcrtomb@plt+0x2e90>
  405d3c:	add	x1, sp, #0x40
  405d40:	bl	407b30 <wcrtomb@plt+0x4d00>
  405d44:	tbz	w0, #0, 405d8c <wcrtomb@plt+0x2f5c>
  405d48:	mov	w8, #0x2                   	// #2
  405d4c:	str	w8, [x26, #16]
  405d50:	b	405d8c <wcrtomb@plt+0x2f5c>
  405d54:	mov	w8, wzr
  405d58:	b	405d90 <wcrtomb@plt+0x2f60>
  405d5c:	ldr	x8, [sp, #80]
  405d60:	ldr	x9, [x0, #16]
  405d64:	add	x8, x9, x8
  405d68:	b	405d88 <wcrtomb@plt+0x2f58>
  405d6c:	ldr	x8, [sp, #80]
  405d70:	ldr	x9, [x0, #16]
  405d74:	add	x10, x9, x8
  405d78:	udiv	x11, x8, x9
  405d7c:	neg	x8, x8
  405d80:	madd	x8, x11, x9, x8
  405d84:	add	x8, x10, x8
  405d88:	str	x8, [x0, #8]
  405d8c:	mov	w8, #0x1                   	// #1
  405d90:	ldrb	w9, [x26, #20]
  405d94:	and	w8, w8, #0x1
  405d98:	cmp	w9, w8
  405d9c:	b.ne	405dbc <wcrtomb@plt+0x2f8c>  // b.any
  405da0:	add	x26, x26, #0x28
  405da4:	ldrb	w8, [x24, #1904]
  405da8:	cmp	w8, #0x0
  405dac:	cset	w8, ne  // ne = any
  405db0:	cmp	x26, x28
  405db4:	b.cc	405c28 <wcrtomb@plt+0x2df8>  // b.lo, b.ul, b.last
  405db8:	b	406e5c <wcrtomb@plt+0x402c>
  405dbc:	ldrb	w1, [x26, #21]
  405dc0:	sub	w8, w1, #0x3a
  405dc4:	cmp	w8, #0x43
  405dc8:	b.hi	405e34 <wcrtomb@plt+0x3004>  // b.pmore
  405dcc:	adrp	x11, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405dd0:	add	x11, x11, #0x5d6
  405dd4:	adr	x9, 405da0 <wcrtomb@plt+0x2f70>
  405dd8:	ldrh	w10, [x11, x8, lsl #1]
  405ddc:	add	x9, x9, x10, lsl #2
  405de0:	br	x9
  405de4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405de8:	ldrb	w8, [x8, #1752]
  405dec:	cbz	w8, 405e14 <wcrtomb@plt+0x2fe4>
  405df0:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405df4:	add	x19, x19, #0x6d8
  405df8:	ldr	x3, [x19, #8]
  405dfc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e00:	add	x0, x0, #0x468
  405e04:	mov	w1, #0x1                   	// #1
  405e08:	mov	w2, #0x1                   	// #1
  405e0c:	bl	409244 <wcrtomb@plt+0x6414>
  405e10:	strb	wzr, [x19]
  405e14:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e18:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e1c:	ldr	x3, [sp, #80]
  405e20:	ldr	x0, [x19, #1760]
  405e24:	ldrb	w4, [x8, #1128]
  405e28:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405e2c:	add	x2, x2, #0x74b
  405e30:	b	406088 <wcrtomb@plt+0x3258>
  405e34:	cmp	w1, #0x23
  405e38:	b.eq	405da0 <wcrtomb@plt+0x2f70>  // b.none
  405e3c:	b	406fb0 <wcrtomb@plt+0x4180>
  405e40:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e44:	ldr	x8, [x8, #1824]
  405e48:	ldr	x20, [x26, #24]
  405e4c:	cbz	x8, 406700 <wcrtomb@plt+0x38d0>
  405e50:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e54:	str	xzr, [x8, #1816]
  405e58:	b	406724 <wcrtomb@plt+0x38f4>
  405e5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e60:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e64:	add	x0, x0, #0x630
  405e68:	add	x1, x1, #0x660
  405e6c:	bl	407a64 <wcrtomb@plt+0x4c34>
  405e70:	b	4065a4 <wcrtomb@plt+0x3774>
  405e74:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e78:	add	x19, x19, #0x638
  405e7c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405e80:	ldp	x22, x27, [x19]
  405e84:	ldrb	w1, [x8, #1128]
  405e88:	mov	x0, x22
  405e8c:	mov	x2, x27
  405e90:	bl	402cb0 <memchr@plt>
  405e94:	ldrb	w8, [x19, #24]
  405e98:	sub	x9, x0, x22
  405e9c:	cmp	x0, #0x0
  405ea0:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ea4:	and	w8, w8, #0x1
  405ea8:	csel	x1, x9, x27, ne  // ne = any
  405eac:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  405eb0:	csinc	w2, w8, wzr, eq  // eq = none
  405eb4:	add	x3, x3, #0x6d0
  405eb8:	mov	x0, x22
  405ebc:	b	406588 <wcrtomb@plt+0x3758>
  405ec0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ec4:	ldrb	w1, [x8, #1128]
  405ec8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ecc:	add	x8, x8, #0x638
  405ed0:	ldp	x22, x26, [x8]
  405ed4:	mov	x0, x22
  405ed8:	mov	x2, x26
  405edc:	bl	402cb0 <memchr@plt>
  405ee0:	cbz	x0, 406ed0 <wcrtomb@plt+0x40a0>
  405ee4:	adrp	x12, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ee8:	add	x12, x12, #0x638
  405eec:	ldr	x9, [x12, #16]
  405ef0:	add	x8, x0, #0x1
  405ef4:	add	x10, x26, x22
  405ef8:	sub	x11, x22, x8
  405efc:	sub	x10, x10, x8
  405f00:	stp	x8, x10, [x12]
  405f04:	add	x8, x11, x9
  405f08:	str	x8, [x12, #16]
  405f0c:	ldrb	w8, [x24, #1904]
  405f10:	ldr	x26, [x21]
  405f14:	cbz	w8, 405da4 <wcrtomb@plt+0x2f74>
  405f18:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405f1c:	add	x0, x0, #0x630
  405f20:	bl	407140 <wcrtomb@plt+0x4310>
  405f24:	b	405da4 <wcrtomb@plt+0x2f74>
  405f28:	mov	w0, #0x1                   	// #1
  405f2c:	mov	w1, #0x28                  	// #40
  405f30:	bl	410e08 <wcrtomb@plt+0xdfd8>
  405f34:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405f38:	ldr	x9, [x8, #1776]
  405f3c:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405f40:	add	x10, x10, #0x6c0
  405f44:	movi	v0.2d, #0x0
  405f48:	add	x11, x9, #0x18
  405f4c:	cmp	x9, #0x0
  405f50:	csel	x9, x10, x11, eq  // eq = none
  405f54:	strb	wzr, [x0, #32]
  405f58:	stp	q0, q0, [x0]
  405f5c:	str	x0, [x9]
  405f60:	str	x0, [x8, #1776]
  405f64:	ldr	x8, [x26, #24]
  405f68:	str	x8, [x0, #8]
  405f6c:	ldr	x8, [x26, #32]
  405f70:	str	x8, [x0, #16]
  405f74:	b	405da0 <wcrtomb@plt+0x2f70>
  405f78:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405f7c:	add	x8, x8, #0x638
  405f80:	ldp	x0, x1, [x8]
  405f84:	ldrb	w2, [x8, #24]
  405f88:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405f8c:	add	x3, x3, #0x6d0
  405f90:	b	406648 <wcrtomb@plt+0x3818>
  405f94:	ldr	x8, [x26, #24]
  405f98:	ldr	x0, [x8, #16]
  405f9c:	cbz	x0, 405da0 <wcrtomb@plt+0x2f70>
  405fa0:	bl	402c30 <feof_unlocked@plt>
  405fa4:	cbnz	w0, 405da0 <wcrtomb@plt+0x2f70>
  405fa8:	str	xzr, [sp, #264]
  405fac:	ldr	x8, [x26, #24]
  405fb0:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405fb4:	ldrb	w2, [x9, #1128]
  405fb8:	add	x0, sp, #0x108
  405fbc:	ldr	x3, [x8, #16]
  405fc0:	add	x1, sp, #0x140
  405fc4:	bl	40941c <wcrtomb@plt+0x65ec>
  405fc8:	mov	x22, x0
  405fcc:	cmn	w22, #0x1
  405fd0:	b.eq	406cf0 <wcrtomb@plt+0x3ec0>  // b.none
  405fd4:	mov	w0, #0x1                   	// #1
  405fd8:	mov	w1, #0x28                  	// #40
  405fdc:	mov	w19, #0x1                   	// #1
  405fe0:	bl	410e08 <wcrtomb@plt+0xdfd8>
  405fe4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405fe8:	ldr	x9, [x8, #1776]
  405fec:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  405ff0:	add	x10, x10, #0x6c0
  405ff4:	movi	v0.2d, #0x0
  405ff8:	add	x11, x9, #0x18
  405ffc:	cmp	x9, #0x0
  406000:	csel	x9, x10, x11, eq  // eq = none
  406004:	strb	wzr, [x0, #32]
  406008:	stp	q0, q0, [x0]
  40600c:	str	x0, [x9]
  406010:	ldr	x9, [sp, #264]
  406014:	sxtw	x10, w22
  406018:	str	x0, [x8, #1776]
  40601c:	strb	w19, [x0, #32]
  406020:	stp	x9, x10, [x0, #8]
  406024:	b	405da0 <wcrtomb@plt+0x2f70>
  406028:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40602c:	ldrb	w9, [x8, #1736]
  406030:	tbz	w9, #0, 406618 <wcrtomb@plt+0x37e8>
  406034:	strb	wzr, [x8, #1736]
  406038:	b	405da0 <wcrtomb@plt+0x2f70>
  40603c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406040:	ldrb	w8, [x8, #1752]
  406044:	cbz	w8, 40606c <wcrtomb@plt+0x323c>
  406048:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40604c:	add	x19, x19, #0x6d8
  406050:	ldr	x3, [x19, #8]
  406054:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406058:	add	x0, x0, #0x468
  40605c:	mov	w1, #0x1                   	// #1
  406060:	mov	w2, #0x1                   	// #1
  406064:	bl	409244 <wcrtomb@plt+0x6414>
  406068:	strb	wzr, [x19]
  40606c:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406070:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406074:	ldr	x3, [sp, #112]
  406078:	ldr	x0, [x19, #1760]
  40607c:	ldrb	w4, [x8, #1128]
  406080:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406084:	add	x2, x2, #0x751
  406088:	mov	w1, #0x1                   	// #1
  40608c:	bl	402ba0 <__fprintf_chk@plt>
  406090:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406094:	ldrb	w8, [x8, #1884]
  406098:	cbnz	w8, 4069e4 <wcrtomb@plt+0x3bb4>
  40609c:	b	405da0 <wcrtomb@plt+0x2f70>
  4060a0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4060a4:	ldr	w9, [x8, #2292]
  4060a8:	cmp	w9, #0x2
  4060ac:	b.lt	4066a0 <wcrtomb@plt+0x3870>  // b.tstop
  4060b0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4060b4:	ldr	x8, [x8, #1600]
  4060b8:	ldr	x25, [x26, #24]
  4060bc:	str	x21, [sp, #8]
  4060c0:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4060c4:	str	xzr, [sp, #320]
  4060c8:	cbz	x8, 4066e0 <wcrtomb@plt+0x38b0>
  4060cc:	mov	x23, xzr
  4060d0:	cmp	w9, #0x1
  4060d4:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4060d8:	b.ne	4060e4 <wcrtomb@plt+0x32b4>  // b.any
  4060dc:	mov	w0, #0x1                   	// #1
  4060e0:	b	4060fc <wcrtomb@plt+0x32cc>
  4060e4:	ldr	x9, [x19, #1592]
  4060e8:	sub	x2, x8, x23
  4060ec:	add	x3, sp, #0x140
  4060f0:	mov	x0, xzr
  4060f4:	add	x1, x9, x23
  4060f8:	bl	410f04 <wcrtomb@plt+0xe0d4>
  4060fc:	ldr	x1, [x25]
  406100:	sub	x8, x0, #0x1
  406104:	cmn	x8, #0x4
  406108:	csinc	x27, x0, xzr, ls  // ls = plast
  40610c:	cbz	x1, 40620c <wcrtomb@plt+0x33dc>
  406110:	ldr	x24, [x19, #1592]
  406114:	mov	x2, x27
  406118:	add	x22, x24, x23
  40611c:	mov	x0, x22
  406120:	bl	402960 <strncmp@plt>
  406124:	mov	w19, wzr
  406128:	cbz	w0, 406148 <wcrtomb@plt+0x3318>
  40612c:	add	w19, w19, #0x2
  406130:	ldr	x1, [x25, w19, uxtw #3]
  406134:	cbz	x1, 40620c <wcrtomb@plt+0x33dc>
  406138:	mov	x0, x22
  40613c:	mov	x2, x27
  406140:	bl	402960 <strncmp@plt>
  406144:	cbnz	w0, 40612c <wcrtomb@plt+0x32fc>
  406148:	orr	w20, w19, #0x1
  40614c:	ldr	x22, [x25, w20, uxtw #3]
  406150:	ldrb	w8, [x22]
  406154:	cbz	w8, 406168 <wcrtomb@plt+0x3338>
  406158:	mov	x0, x22
  40615c:	bl	402750 <strlen@plt>
  406160:	mov	x28, x0
  406164:	b	40616c <wcrtomb@plt+0x333c>
  406168:	mov	w28, #0x1                   	// #1
  40616c:	subs	x19, x28, x27
  406170:	b.ls	4061a8 <wcrtomb@plt+0x3378>  // b.plast
  406174:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406178:	add	x8, x8, #0x640
  40617c:	ldp	x9, x8, [x8]
  406180:	add	x9, x19, x9
  406184:	add	x1, x9, #0x1
  406188:	cmp	x8, x1
  40618c:	b.cs	4061b0 <wcrtomb@plt+0x3380>  // b.hs, b.nlast
  406190:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406194:	add	x21, x21, #0x630
  406198:	mov	x0, x21
  40619c:	bl	407878 <wcrtomb@plt+0x4a48>
  4061a0:	ldr	x24, [x21, #8]
  4061a4:	b	4061b0 <wcrtomb@plt+0x3380>
  4061a8:	mov	x21, x23
  4061ac:	b.cs	4061ec <wcrtomb@plt+0x33bc>  // b.hs, b.nlast
  4061b0:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4061b4:	add	x21, x21, #0x638
  4061b8:	ldr	x9, [x21, #8]
  4061bc:	add	x8, x24, x23
  4061c0:	add	x1, x8, x27
  4061c4:	add	x0, x8, x28
  4061c8:	add	x8, x23, x27
  4061cc:	sub	x8, x9, x8
  4061d0:	add	x2, x8, #0x1
  4061d4:	bl	402720 <memmove@plt>
  4061d8:	ldp	x24, x8, [x21]
  4061dc:	add	x8, x8, x19
  4061e0:	str	x8, [x21, #8]
  4061e4:	ldr	x22, [x25, x20, lsl #3]
  4061e8:	add	x21, x19, x23
  4061ec:	add	x0, x24, x23
  4061f0:	mov	x1, x22
  4061f4:	mov	x2, x28
  4061f8:	bl	402710 <memcpy@plt>
  4061fc:	ldr	x28, [sp, #56]
  406200:	mov	x23, x21
  406204:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406208:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40620c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406210:	ldr	x8, [x8, #1600]
  406214:	add	x23, x23, x27
  406218:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40621c:	add	x27, x27, #0x72d
  406220:	cmp	x8, x23
  406224:	b.ls	4066e0 <wcrtomb@plt+0x38b0>  // b.plast
  406228:	ldr	w9, [x21, #2292]
  40622c:	b	4060d0 <wcrtomb@plt+0x32a0>
  406230:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406234:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406238:	add	x0, x0, #0x660
  40623c:	add	x1, x1, #0x630
  406240:	bl	407a64 <wcrtomb@plt+0x4c34>
  406244:	b	4066f4 <wcrtomb@plt+0x38c4>
  406248:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40624c:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406250:	add	x0, x0, #0x630
  406254:	add	x1, x1, #0x660
  406258:	b	4065a0 <wcrtomb@plt+0x3770>
  40625c:	ldp	x0, x8, [x26, #24]
  406260:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406264:	add	x3, x3, #0x6d0
  406268:	mov	w2, #0x1                   	// #1
  40626c:	sub	x1, x8, #0x1
  406270:	b	406648 <wcrtomb@plt+0x3818>
  406274:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406278:	ldr	x8, [x8, #1824]
  40627c:	ldr	x20, [x26, #32]
  406280:	cbz	x8, 4068a0 <wcrtomb@plt+0x3a70>
  406284:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406288:	str	xzr, [x8, #1816]
  40628c:	b	4068c4 <wcrtomb@plt+0x3a94>
  406290:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406294:	add	x11, x11, #0x630
  406298:	ldr	w8, [x11, #32]
  40629c:	ldp	q1, q0, [x11]
  4062a0:	ldp	q2, q3, [x23]
  4062a4:	ldr	w9, [x23, #32]
  4062a8:	ldrb	w10, [x24, #1904]
  4062ac:	stp	q1, q0, [x23]
  4062b0:	stp	q2, q3, [x11]
  4062b4:	str	w9, [x11, #32]
  4062b8:	str	w8, [x23, #32]
  4062bc:	cbz	w10, 405da0 <wcrtomb@plt+0x2f70>
  4062c0:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4062c4:	add	x0, x0, #0x630
  4062c8:	bl	407140 <wcrtomb@plt+0x4310>
  4062cc:	b	4065ac <wcrtomb@plt+0x377c>
  4062d0:	ldrb	w8, [x24, #1904]
  4062d4:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4062d8:	str	xzr, [x9, #1600]
  4062dc:	cbnz	w8, 406e4c <wcrtomb@plt+0x401c>
  4062e0:	b	405da0 <wcrtomb@plt+0x2f70>
  4062e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4062e8:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4062ec:	add	x0, x0, #0x630
  4062f0:	add	x1, x1, #0x468
  4062f4:	mov	w2, #0x1                   	// #1
  4062f8:	bl	4077a4 <wcrtomb@plt+0x4974>
  4062fc:	add	x0, sp, #0x40
  406300:	bl	407ab4 <wcrtomb@plt+0x4c84>
  406304:	tbnz	w0, #0, 406ee8 <wcrtomb@plt+0x40b8>
  406308:	add	x0, sp, #0x40
  40630c:	mov	w2, #0x1                   	// #1
  406310:	mov	x1, x21
  406314:	bl	406ff8 <wcrtomb@plt+0x41c8>
  406318:	tbnz	w0, #0, 4066f4 <wcrtomb@plt+0x38c4>
  40631c:	b	406ee8 <wcrtomb@plt+0x40b8>
  406320:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406324:	add	x10, x10, #0x638
  406328:	ldr	w8, [x26, #24]
  40632c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406330:	ldp	x20, x22, [x10]
  406334:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406338:	add	x10, x10, #0x6d8
  40633c:	ldr	x9, [x9, #1152]
  406340:	ldrb	w11, [x10]
  406344:	ldr	x27, [x10, #8]
  406348:	cmn	w8, #0x1
  40634c:	csel	x24, x9, x8, eq  // eq = none
  406350:	str	x21, [sp, #8]
  406354:	cbz	w11, 406378 <wcrtomb@plt+0x3548>
  406358:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40635c:	add	x0, x0, #0x468
  406360:	mov	w1, #0x1                   	// #1
  406364:	mov	w2, #0x1                   	// #1
  406368:	mov	x3, x27
  40636c:	bl	409244 <wcrtomb@plt+0x6414>
  406370:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406374:	strb	wzr, [x8, #1752]
  406378:	cbz	x22, 4064cc <wcrtomb@plt+0x369c>
  40637c:	mov	x25, xzr
  406380:	sxtw	x23, w24
  406384:	ldrsb	w19, [x20]
  406388:	tbnz	w19, #31, 4063a0 <wcrtomb@plt+0x3570>
  40638c:	and	x21, x19, #0xff
  406390:	bl	402bc0 <__ctype_b_loc@plt>
  406394:	ldr	x8, [x0]
  406398:	ldrh	w8, [x8, x21, lsl #1]
  40639c:	tbnz	w8, #14, 4063d8 <wcrtomb@plt+0x35a8>
  4063a0:	mov	w8, #0x5c                  	// #92
  4063a4:	strb	w8, [sp, #320]
  4063a8:	ldrb	w4, [x20]
  4063ac:	sub	w8, w4, #0x7
  4063b0:	cmp	w8, #0x6
  4063b4:	b.hi	40640c <wcrtomb@plt+0x35dc>  // b.pmore
  4063b8:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4063bc:	add	x9, x9, #0x65e
  4063c0:	adr	x10, 4063d0 <wcrtomb@plt+0x35a0>
  4063c4:	ldrb	w11, [x9, x8]
  4063c8:	add	x10, x10, x11, lsl #2
  4063cc:	br	x10
  4063d0:	mov	w8, #0x61                  	// #97
  4063d4:	b	40644c <wcrtomb@plt+0x361c>
  4063d8:	strb	w19, [sp, #320]
  4063dc:	ldrb	w8, [x20]
  4063e0:	cmp	w8, #0x5c
  4063e4:	ldr	x8, [sp, #40]
  4063e8:	b.ne	406454 <wcrtomb@plt+0x3624>  // b.any
  4063ec:	mov	w8, #0x5c                  	// #92
  4063f0:	b	40644c <wcrtomb@plt+0x361c>
  4063f4:	mov	w8, #0x76                  	// #118
  4063f8:	b	40644c <wcrtomb@plt+0x361c>
  4063fc:	mov	w8, #0x74                  	// #116
  406400:	b	40644c <wcrtomb@plt+0x361c>
  406404:	mov	w8, #0x6e                  	// #110
  406408:	b	40644c <wcrtomb@plt+0x361c>
  40640c:	ldr	x19, [sp, #40]
  406410:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406414:	add	x3, x3, #0x531
  406418:	mov	w1, #0x1                   	// #1
  40641c:	mov	w2, #0xb3                  	// #179
  406420:	mov	x0, x19
  406424:	bl	402770 <__sprintf_chk@plt>
  406428:	mov	x0, x19
  40642c:	bl	402750 <strlen@plt>
  406430:	add	x8, x19, x0
  406434:	b	406454 <wcrtomb@plt+0x3624>
  406438:	mov	w8, #0x62                  	// #98
  40643c:	b	40644c <wcrtomb@plt+0x361c>
  406440:	mov	w8, #0x66                  	// #102
  406444:	b	40644c <wcrtomb@plt+0x361c>
  406448:	mov	w8, #0x72                  	// #114
  40644c:	strb	w8, [sp, #321]
  406450:	ldr	x8, [sp, #48]
  406454:	add	x9, sp, #0x140
  406458:	sub	x22, x22, #0x1
  40645c:	cmp	w24, #0x1
  406460:	sub	x28, x8, x9
  406464:	b.lt	4064a8 <wcrtomb@plt+0x3678>  // b.tstop
  406468:	add	x8, x28, x25
  40646c:	cmp	x8, x23
  406470:	b.cc	4064a8 <wcrtomb@plt+0x3678>  // b.lo, b.ul, b.last
  406474:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406478:	add	x0, x0, #0x5b7
  40647c:	mov	w1, #0x1                   	// #1
  406480:	mov	w2, #0x1                   	// #1
  406484:	mov	x3, x27
  406488:	bl	409244 <wcrtomb@plt+0x6414>
  40648c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406490:	add	x0, x0, #0x468
  406494:	mov	w1, #0x1                   	// #1
  406498:	mov	w2, #0x1                   	// #1
  40649c:	mov	x3, x27
  4064a0:	bl	409244 <wcrtomb@plt+0x6414>
  4064a4:	mov	x25, xzr
  4064a8:	add	x0, sp, #0x140
  4064ac:	mov	w1, #0x1                   	// #1
  4064b0:	mov	x2, x28
  4064b4:	mov	x3, x27
  4064b8:	bl	409244 <wcrtomb@plt+0x6414>
  4064bc:	add	x25, x25, x28
  4064c0:	ldr	x28, [sp, #56]
  4064c4:	add	x20, x20, #0x1
  4064c8:	cbnz	x22, 406384 <wcrtomb@plt+0x3554>
  4064cc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4064d0:	add	x0, x0, #0x7a0
  4064d4:	mov	w1, #0x1                   	// #1
  4064d8:	mov	w2, #0x1                   	// #1
  4064dc:	mov	x3, x27
  4064e0:	bl	409244 <wcrtomb@plt+0x6414>
  4064e4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4064e8:	add	x0, x0, #0x468
  4064ec:	mov	w1, #0x1                   	// #1
  4064f0:	mov	w2, #0x1                   	// #1
  4064f4:	mov	x3, x27
  4064f8:	bl	409244 <wcrtomb@plt+0x6414>
  4064fc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406500:	ldrb	w8, [x8, #1884]
  406504:	cbz	w8, 406510 <wcrtomb@plt+0x36e0>
  406508:	mov	x0, x27
  40650c:	bl	4094c0 <wcrtomb@plt+0x6690>
  406510:	ldr	x21, [sp, #8]
  406514:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406518:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40651c:	add	x23, x23, #0x660
  406520:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406524:	mov	w25, #0x28                  	// #40
  406528:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40652c:	add	x27, x27, #0x72d
  406530:	b	405da0 <wcrtomb@plt+0x2f70>
  406534:	ldr	x22, [x26, #24]
  406538:	ldr	x8, [x22, #16]
  40653c:	cbz	x8, 405da0 <wcrtomb@plt+0x2f70>
  406540:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406544:	add	x19, x19, #0x638
  406548:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40654c:	ldp	x27, x28, [x19]
  406550:	ldrb	w1, [x8, #1128]
  406554:	mov	x0, x27
  406558:	mov	x2, x28
  40655c:	bl	402cb0 <memchr@plt>
  406560:	ldrb	w8, [x19, #24]
  406564:	sub	x9, x0, x27
  406568:	cmp	x0, #0x0
  40656c:	csel	x1, x9, x28, ne  // ne = any
  406570:	ldr	x28, [sp, #56]
  406574:	and	w8, w8, #0x1
  406578:	csinc	w2, w8, wzr, eq  // eq = none
  40657c:	mov	x0, x27
  406580:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406584:	mov	x3, x22
  406588:	add	x27, x27, #0x72d
  40658c:	b	406648 <wcrtomb@plt+0x3818>
  406590:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406594:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406598:	add	x0, x0, #0x660
  40659c:	add	x1, x1, #0x630
  4065a0:	bl	4079d4 <wcrtomb@plt+0x4ba4>
  4065a4:	ldrb	w8, [x24, #1904]
  4065a8:	cbz	w8, 405da0 <wcrtomb@plt+0x2f70>
  4065ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4065b0:	add	x0, x0, #0x660
  4065b4:	b	406e54 <wcrtomb@plt+0x4024>
  4065b8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4065bc:	ldrb	w8, [x8, #1888]
  4065c0:	cbnz	w8, 4065e0 <wcrtomb@plt+0x37b0>
  4065c4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4065c8:	add	x8, x8, #0x638
  4065cc:	ldp	x0, x1, [x8]
  4065d0:	ldrb	w2, [x8, #24]
  4065d4:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4065d8:	add	x3, x3, #0x6d0
  4065dc:	bl	40791c <wcrtomb@plt+0x4aec>
  4065e0:	add	x0, sp, #0x40
  4065e4:	bl	407ab4 <wcrtomb@plt+0x4c84>
  4065e8:	tbnz	w0, #0, 406ebc <wcrtomb@plt+0x408c>
  4065ec:	add	x0, sp, #0x40
  4065f0:	mov	x1, x21
  4065f4:	mov	w2, wzr
  4065f8:	bl	406ff8 <wcrtomb@plt+0x41c8>
  4065fc:	tbnz	w0, #0, 4066f4 <wcrtomb@plt+0x38c4>
  406600:	b	406ebc <wcrtomb@plt+0x408c>
  406604:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406608:	ldrb	w9, [x8, #1736]
  40660c:	cmp	w9, #0x1
  406610:	b.ne	405da0 <wcrtomb@plt+0x2f70>  // b.any
  406614:	strb	wzr, [x8, #1736]
  406618:	ldr	x8, [x21]
  40661c:	ldr	x9, [x26, #24]
  406620:	mov	w10, #0x28                  	// #40
  406624:	madd	x26, x9, x10, x8
  406628:	b	405da4 <wcrtomb@plt+0x2f74>
  40662c:	ldr	x3, [x26, #24]
  406630:	ldr	x8, [x3, #16]
  406634:	cbz	x8, 405da0 <wcrtomb@plt+0x2f70>
  406638:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40663c:	add	x8, x8, #0x638
  406640:	ldp	x0, x1, [x8]
  406644:	ldrb	w2, [x8, #24]
  406648:	bl	40791c <wcrtomb@plt+0x4aec>
  40664c:	b	405da0 <wcrtomb@plt+0x2f70>
  406650:	ldr	x8, [x26, #24]
  406654:	cbz	x8, 405da0 <wcrtomb@plt+0x2f70>
  406658:	mov	w0, #0x1                   	// #1
  40665c:	mov	w1, #0x28                  	// #40
  406660:	bl	410e08 <wcrtomb@plt+0xdfd8>
  406664:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406668:	ldr	x9, [x8, #1776]
  40666c:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406670:	add	x10, x10, #0x6c0
  406674:	movi	v0.2d, #0x0
  406678:	add	x11, x9, #0x18
  40667c:	cmp	x9, #0x0
  406680:	csel	x9, x10, x11, eq  // eq = none
  406684:	strb	wzr, [x0, #32]
  406688:	stp	q0, q0, [x0]
  40668c:	str	x0, [x9]
  406690:	str	x0, [x8, #1776]
  406694:	ldr	x8, [x26, #24]
  406698:	str	x8, [x0]
  40669c:	b	405da0 <wcrtomb@plt+0x2f70>
  4066a0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4066a4:	add	x8, x8, #0x638
  4066a8:	ldr	x9, [x8, #8]
  4066ac:	cmp	x9, #0x1
  4066b0:	b.lt	4066f4 <wcrtomb@plt+0x38c4>  // b.tstop
  4066b4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4066b8:	add	x8, x8, #0x638
  4066bc:	ldr	x8, [x8]
  4066c0:	add	x9, x8, x9
  4066c4:	ldr	x10, [x26, #24]
  4066c8:	ldrb	w11, [x8]
  4066cc:	ldrb	w10, [x10, x11]
  4066d0:	strb	w10, [x8], #1
  4066d4:	cmp	x8, x9
  4066d8:	b.cc	4066c4 <wcrtomb@plt+0x3894>  // b.lo, b.ul, b.last
  4066dc:	b	4066f4 <wcrtomb@plt+0x38c4>
  4066e0:	ldr	x21, [sp, #8]
  4066e4:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4066e8:	add	x23, x23, #0x660
  4066ec:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4066f0:	mov	w25, #0x28                  	// #40
  4066f4:	ldrb	w8, [x24, #1904]
  4066f8:	cbnz	w8, 406e4c <wcrtomb@plt+0x401c>
  4066fc:	b	405da0 <wcrtomb@plt+0x2f70>
  406700:	mov	w0, #0x33                  	// #51
  406704:	bl	410e00 <wcrtomb@plt+0xdfd0>
  406708:	ldr	q0, [sp, #16]
  40670c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406710:	add	x8, x8, #0x708
  406714:	mov	w9, #0x1                   	// #1
  406718:	stp	x0, x0, [x8]
  40671c:	str	q0, [x8, #16]
  406720:	strb	w9, [x8, #32]
  406724:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406728:	add	x9, x9, #0x638
  40672c:	ldur	x8, [x9, #28]
  406730:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406734:	add	x10, x10, #0x72c
  406738:	ldp	x1, x2, [x9]
  40673c:	str	x8, [x10]
  406740:	ldrb	w8, [x20, #32]
  406744:	ldr	x0, [x20]
  406748:	adrp	x4, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40674c:	add	x4, x4, #0x738
  406750:	lsr	w8, w8, #4
  406754:	add	w5, w8, #0x1
  406758:	mov	x3, xzr
  40675c:	bl	408290 <wcrtomb@plt+0x5460>
  406760:	cbz	w0, 406e40 <wcrtomb@plt+0x4010>
  406764:	ldrb	w8, [x24, #1904]
  406768:	adrp	x25, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40676c:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406770:	add	x25, x25, #0x740
  406774:	cbz	w8, 406828 <wcrtomb@plt+0x39f8>
  406778:	ldr	x8, [x24, #1848]
  40677c:	cbz	x8, 406828 <wcrtomb@plt+0x39f8>
  406780:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406784:	ldr	x8, [x22, #1856]
  406788:	ldr	x8, [x8]
  40678c:	cmn	x8, #0x1
  406790:	b.eq	4067a8 <wcrtomb@plt+0x3978>  // b.none
  406794:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406798:	add	x0, x0, #0x7a2
  40679c:	bl	402b60 <puts@plt>
  4067a0:	ldr	x8, [x24, #1848]
  4067a4:	cbz	x8, 406828 <wcrtomb@plt+0x39f8>
  4067a8:	mov	x28, xzr
  4067ac:	ldr	x8, [x22, #1856]
  4067b0:	ldr	x3, [x8, x28, lsl #3]
  4067b4:	cmn	x3, #0x1
  4067b8:	b.eq	406828 <wcrtomb@plt+0x39f8>  // b.none
  4067bc:	ldr	x8, [x25, #8]
  4067c0:	lsl	x9, x28, #3
  4067c4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4067c8:	add	x1, x1, #0x7ba
  4067cc:	ldr	w4, [x8, x9]
  4067d0:	mov	w0, #0x1                   	// #1
  4067d4:	mov	w2, w28
  4067d8:	bl	4029b0 <__printf_chk@plt>
  4067dc:	ldp	x8, x9, [x25]
  4067e0:	ldr	x8, [x8, x28, lsl #3]
  4067e4:	ldr	x9, [x9, x28, lsl #3]
  4067e8:	subs	x1, x9, x8
  4067ec:	b.eq	40680c <wcrtomb@plt+0x39dc>  // b.none
  4067f0:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4067f4:	ldr	x9, [x9, #1592]
  4067f8:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4067fc:	ldr	x3, [x10, #1304]
  406800:	mov	w2, #0x1                   	// #1
  406804:	add	x0, x9, x8
  406808:	bl	402740 <fwrite_unlocked@plt>
  40680c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406810:	add	x0, x0, #0x7ce
  406814:	bl	402b60 <puts@plt>
  406818:	ldr	x8, [x24, #1848]
  40681c:	add	x28, x28, #0x1
  406820:	cmp	x8, x28
  406824:	b.hi	4067ac <wcrtomb@plt+0x397c>  // b.pmore
  406828:	ldr	x8, [x20, #8]
  40682c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406830:	add	x22, x22, #0x708
  406834:	cbnz	x8, 406a9c <wcrtomb@plt+0x3c6c>
  406838:	ldr	x8, [x20, #16]
  40683c:	cmp	x8, #0x1
  406840:	b.hi	406a9c <wcrtomb@plt+0x3c6c>  // b.pmore
  406844:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406848:	ldr	x8, [x8, #1856]
  40684c:	ldr	x8, [x8]
  406850:	cbnz	x8, 406a60 <wcrtomb@plt+0x3c30>
  406854:	ldrb	w9, [x20, #32]
  406858:	tbnz	w9, #0, 406a60 <wcrtomb@plt+0x3c30>
  40685c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406860:	ldr	x8, [x8, #1864]
  406864:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406868:	mov	w10, #0x1                   	// #1
  40686c:	adrp	x12, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406870:	strb	w10, [x9, #1736]
  406874:	add	x12, x12, #0x638
  406878:	ldr	x9, [x8]
  40687c:	ldp	x10, x11, [x12]
  406880:	add	x10, x10, x9
  406884:	sub	x9, x11, x9
  406888:	stp	x10, x9, [x12]
  40688c:	ldr	x8, [x8]
  406890:	ldr	x9, [x12, #16]
  406894:	sub	x8, x9, x8
  406898:	str	x8, [x12, #16]
  40689c:	b	406a8c <wcrtomb@plt+0x3c5c>
  4068a0:	mov	w0, #0x33                  	// #51
  4068a4:	bl	410e00 <wcrtomb@plt+0xdfd0>
  4068a8:	ldr	q0, [sp, #16]
  4068ac:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4068b0:	add	x8, x8, #0x708
  4068b4:	mov	w9, #0x1                   	// #1
  4068b8:	stp	x0, x0, [x8]
  4068bc:	str	q0, [x8, #16]
  4068c0:	strb	w9, [x8, #32]
  4068c4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4068c8:	add	x8, x8, #0x72c
  4068cc:	str	xzr, [x8]
  4068d0:	cbz	w20, 406928 <wcrtomb@plt+0x3af8>
  4068d4:	ldr	x8, [x26, #24]
  4068d8:	sub	w9, w20, #0x1
  4068dc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4068e0:	add	x1, x1, #0x962
  4068e4:	strb	wzr, [x8, w9, sxtw]
  4068e8:	ldr	x0, [x26, #24]
  4068ec:	bl	402950 <popen@plt>
  4068f0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4068f4:	ldrb	w8, [x8, #1752]
  4068f8:	mov	x27, x0
  4068fc:	cbz	w8, 406958 <wcrtomb@plt+0x3b28>
  406900:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406904:	add	x19, x19, #0x6d8
  406908:	ldr	x3, [x19, #8]
  40690c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406910:	add	x0, x0, #0x468
  406914:	mov	w1, #0x1                   	// #1
  406918:	mov	w2, #0x1                   	// #1
  40691c:	bl	409244 <wcrtomb@plt+0x6414>
  406920:	strb	wzr, [x19]
  406924:	b	406958 <wcrtomb@plt+0x3b28>
  406928:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40692c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406930:	add	x19, x19, #0x630
  406934:	add	x1, x1, #0xdb3
  406938:	mov	w2, #0x1                   	// #1
  40693c:	mov	x0, x19
  406940:	bl	4077a4 <wcrtomb@plt+0x4974>
  406944:	ldr	x0, [x19, #8]
  406948:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40694c:	add	x1, x1, #0x962
  406950:	bl	402950 <popen@plt>
  406954:	mov	x27, x0
  406958:	cbz	x27, 406fbc <wcrtomb@plt+0x418c>
  40695c:	mov	x0, x27
  406960:	bl	402c30 <feof_unlocked@plt>
  406964:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406968:	cbnz	w0, 4069c0 <wcrtomb@plt+0x3b90>
  40696c:	add	x0, sp, #0x140
  406970:	mov	w1, #0x1                   	// #1
  406974:	mov	w2, #0x1000                	// #4096
  406978:	mov	x3, x27
  40697c:	bl	402b70 <fread_unlocked@plt>
  406980:	cmp	w0, #0x1
  406984:	b.lt	4069b4 <wcrtomb@plt+0x3b84>  // b.tstop
  406988:	sxtw	x2, w0
  40698c:	cbz	w20, 4069a4 <wcrtomb@plt+0x3b74>
  406990:	ldr	x3, [x19, #1760]
  406994:	add	x0, sp, #0x140
  406998:	mov	w1, #0x1                   	// #1
  40699c:	bl	409244 <wcrtomb@plt+0x6414>
  4069a0:	b	4069b4 <wcrtomb@plt+0x3b84>
  4069a4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4069a8:	add	x0, x0, #0x708
  4069ac:	add	x1, sp, #0x140
  4069b0:	bl	4077a4 <wcrtomb@plt+0x4974>
  4069b4:	mov	x0, x27
  4069b8:	bl	402c30 <feof_unlocked@plt>
  4069bc:	cbz	w0, 40696c <wcrtomb@plt+0x3b3c>
  4069c0:	mov	x0, x27
  4069c4:	bl	402d50 <pclose@plt>
  4069c8:	cbz	w20, 4069f0 <wcrtomb@plt+0x3bc0>
  4069cc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4069d0:	ldrb	w8, [x8, #1884]
  4069d4:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4069d8:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4069dc:	add	x27, x27, #0x72d
  4069e0:	cbz	w8, 405da0 <wcrtomb@plt+0x2f70>
  4069e4:	ldr	x0, [x19, #1760]
  4069e8:	bl	4094c0 <wcrtomb@plt+0x6690>
  4069ec:	b	405da0 <wcrtomb@plt+0x2f70>
  4069f0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4069f4:	ldr	x9, [x8, #1816]
  4069f8:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4069fc:	add	x27, x27, #0x72d
  406a00:	cbz	x9, 406a28 <wcrtomb@plt+0x3bf8>
  406a04:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a08:	ldr	x10, [x10, #1808]
  406a0c:	sub	x9, x9, #0x1
  406a10:	adrp	x11, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a14:	ldrb	w11, [x11, #1128]
  406a18:	ldrb	w10, [x10, x9]
  406a1c:	cmp	w10, w11
  406a20:	b.ne	406a28 <wcrtomb@plt+0x3bf8>  // b.any
  406a24:	str	x9, [x8, #1816]
  406a28:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a2c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a30:	add	x9, x9, #0x630
  406a34:	add	x8, x8, #0x708
  406a38:	ldp	q1, q0, [x9, #16]
  406a3c:	ldr	q2, [x9]
  406a40:	ldp	q3, q4, [x8]
  406a44:	ldr	q5, [x8, #32]
  406a48:	str	q0, [x8, #32]
  406a4c:	stp	q2, q1, [x8]
  406a50:	stp	q3, q4, [x9]
  406a54:	str	q5, [x9, #32]
  406a58:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a5c:	b	405da0 <wcrtomb@plt+0x2f70>
  406a60:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a64:	ldr	x10, [x9, #1864]
  406a68:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a6c:	ldr	x11, [x9, #1600]
  406a70:	ldr	x10, [x10]
  406a74:	cmp	x10, x11
  406a78:	b.ne	406a9c <wcrtomb@plt+0x3c6c>  // b.any
  406a7c:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a80:	mov	w11, #0x1                   	// #1
  406a84:	strb	w11, [x10, #1736]
  406a88:	str	x8, [x9, #1600]
  406a8c:	ldr	x28, [sp, #56]
  406a90:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406a94:	mov	w25, #0x28                  	// #40
  406a98:	b	406cac <wcrtomb@plt+0x3e7c>
  406a9c:	mov	x27, xzr
  406aa0:	mov	x22, xzr
  406aa4:	mov	x23, xzr
  406aa8:	ldp	x8, x9, [x25]
  406aac:	ldr	x28, [x8]
  406ab0:	ldr	x19, [x9]
  406ab4:	subs	x2, x28, x23
  406ab8:	b.ls	406ad8 <wcrtomb@plt+0x3ca8>  // b.plast
  406abc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406ac0:	ldr	x8, [x8, #1592]
  406ac4:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406ac8:	add	x0, x0, #0x708
  406acc:	add	x1, x8, x23
  406ad0:	bl	4077a4 <wcrtomb@plt+0x4974>
  406ad4:	mov	x23, x28
  406ad8:	cmp	x28, x22
  406adc:	sub	x22, x19, x28
  406ae0:	b.hi	406b04 <wcrtomb@plt+0x3cd4>  // b.pmore
  406ae4:	cbz	x27, 406b04 <wcrtomb@plt+0x3cd4>
  406ae8:	cbnz	x22, 406b04 <wcrtomb@plt+0x3cd4>
  406aec:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406af0:	ldr	x8, [x8, #1600]
  406af4:	cmp	x23, x8
  406af8:	b.cs	406c24 <wcrtomb@plt+0x3df4>  // b.hs, b.nlast
  406afc:	mov	w22, #0x1                   	// #1
  406b00:	b	406b18 <wcrtomb@plt+0x3ce8>
  406b04:	ldr	x8, [x20, #16]
  406b08:	add	x27, x27, #0x1
  406b0c:	cmp	x27, x8
  406b10:	b.cs	406b3c <wcrtomb@plt+0x3d0c>  // b.hs, b.nlast
  406b14:	cbz	x22, 406aec <wcrtomb@plt+0x3cbc>
  406b18:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406b1c:	ldr	x8, [x8, #1592]
  406b20:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406b24:	add	x0, x0, #0x708
  406b28:	mov	x2, x22
  406b2c:	add	x1, x8, x28
  406b30:	bl	4077a4 <wcrtomb@plt+0x4974>
  406b34:	add	x23, x22, x28
  406b38:	b	406be0 <wcrtomb@plt+0x3db0>
  406b3c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406b40:	mov	w9, #0x1                   	// #1
  406b44:	strb	w9, [x8, #1736]
  406b48:	ldr	x28, [x20, #8]
  406b4c:	cbz	x28, 406bd4 <wcrtomb@plt+0x3da4>
  406b50:	mov	w8, wzr
  406b54:	ldp	w23, w9, [x28, #16]
  406b58:	ldr	x1, [x28, #8]
  406b5c:	tst	w9, #0xc
  406b60:	csel	w8, w8, wzr, eq  // eq = none
  406b64:	orr	w22, w8, w9
  406b68:	cbz	x1, 406b7c <wcrtomb@plt+0x3d4c>
  406b6c:	ldr	x0, [x28]
  406b70:	mov	w2, w22
  406b74:	bl	407c70 <wcrtomb@plt+0x4e40>
  406b78:	and	w22, w22, #0xfffffff3
  406b7c:	tbnz	w23, #31, 406bc8 <wcrtomb@plt+0x3d98>
  406b80:	ldr	x8, [x24, #1848]
  406b84:	cmp	x8, x23
  406b88:	b.ls	406bc8 <wcrtomb@plt+0x3d98>  // b.plast
  406b8c:	ldp	x9, x8, [x25]
  406b90:	ldr	x10, [x8, x23, lsl #3]
  406b94:	ldr	x8, [x9, x23, lsl #3]
  406b98:	subs	x1, x10, x8
  406b9c:	b.ne	406bb4 <wcrtomb@plt+0x3d84>  // b.any
  406ba0:	ldrb	w8, [x28, #20]
  406ba4:	and	w9, w22, #0xc
  406ba8:	tst	w8, #0xc
  406bac:	csel	w8, wzr, w9, eq  // eq = none
  406bb0:	b	406bcc <wcrtomb@plt+0x3d9c>
  406bb4:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406bb8:	ldr	x9, [x9, #1592]
  406bbc:	mov	w2, w22
  406bc0:	add	x0, x9, x8
  406bc4:	bl	407c70 <wcrtomb@plt+0x4e40>
  406bc8:	mov	w8, wzr
  406bcc:	ldr	x28, [x28, #24]
  406bd0:	cbnz	x28, 406b54 <wcrtomb@plt+0x3d24>
  406bd4:	ldrb	w8, [x20, #32]
  406bd8:	mov	x23, x19
  406bdc:	tbz	w8, #0, 406c24 <wcrtomb@plt+0x3df4>
  406be0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406be4:	ldr	x2, [x8, #1600]
  406be8:	cmp	x23, x2
  406bec:	b.hi	406c24 <wcrtomb@plt+0x3df4>  // b.pmore
  406bf0:	adrp	x4, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406bf4:	add	x4, x4, #0x738
  406bf8:	ldr	x8, [x4, #16]
  406bfc:	ldrb	w10, [x20, #32]
  406c00:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c04:	ldr	x0, [x20]
  406c08:	ldr	x1, [x9, #1592]
  406c0c:	ldr	x22, [x8]
  406c10:	lsr	w8, w10, #4
  406c14:	add	w5, w8, #0x1
  406c18:	mov	x3, x23
  406c1c:	bl	408290 <wcrtomb@plt+0x5460>
  406c20:	cbnz	w0, 406aa8 <wcrtomb@plt+0x3c78>
  406c24:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c28:	ldr	x8, [x8, #1600]
  406c2c:	ldr	x28, [sp, #56]
  406c30:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c34:	mov	w25, #0x28                  	// #40
  406c38:	subs	x2, x8, x23
  406c3c:	b.ls	406c58 <wcrtomb@plt+0x3e28>  // b.plast
  406c40:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c44:	ldr	x8, [x8, #1592]
  406c48:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c4c:	add	x0, x0, #0x708
  406c50:	add	x1, x8, x23
  406c54:	bl	4077a4 <wcrtomb@plt+0x4974>
  406c58:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c5c:	add	x10, x10, #0x630
  406c60:	ldrb	w8, [x10, #32]
  406c64:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c68:	add	x22, x22, #0x708
  406c6c:	ldp	q0, q3, [x22]
  406c70:	strb	w8, [x22, #32]
  406c74:	ldp	q2, q1, [x10]
  406c78:	ldr	w9, [x10, #32]
  406c7c:	ldr	w8, [x22, #32]
  406c80:	stp	q0, q3, [x10]
  406c84:	stp	q2, q1, [x22]
  406c88:	str	w9, [x22, #32]
  406c8c:	str	w8, [x10, #32]
  406c90:	ldr	x8, [x20, #16]
  406c94:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406c98:	add	x23, x23, #0x660
  406c9c:	cmp	x27, x8
  406ca0:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406ca4:	add	x27, x27, #0x72d
  406ca8:	b.cc	406e40 <wcrtomb@plt+0x4010>  // b.lo, b.ul, b.last
  406cac:	ldrb	w8, [x20, #32]
  406cb0:	tbz	w8, #1, 406cd4 <wcrtomb@plt+0x3ea4>
  406cb4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406cb8:	add	x8, x8, #0x638
  406cbc:	ldp	x0, x1, [x8]
  406cc0:	ldrb	w2, [x8, #24]
  406cc4:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406cc8:	add	x3, x3, #0x6d0
  406ccc:	bl	40791c <wcrtomb@plt+0x4aec>
  406cd0:	ldrb	w8, [x20, #32]
  406cd4:	tbz	w8, #3, 406e00 <wcrtomb@plt+0x3fd0>
  406cd8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406cdc:	ldr	x8, [x8, #1824]
  406ce0:	cbz	x8, 406cfc <wcrtomb@plt+0x3ecc>
  406ce4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406ce8:	str	xzr, [x8, #1816]
  406cec:	b	406d18 <wcrtomb@plt+0x3ee8>
  406cf0:	ldr	x0, [sp, #264]
  406cf4:	bl	402be0 <free@plt>
  406cf8:	b	405da0 <wcrtomb@plt+0x2f70>
  406cfc:	mov	w0, #0x33                  	// #51
  406d00:	bl	410e00 <wcrtomb@plt+0xdfd0>
  406d04:	ldr	q0, [sp, #16]
  406d08:	mov	w8, #0x1                   	// #1
  406d0c:	stp	x0, x0, [x22]
  406d10:	strb	w8, [x22, #32]
  406d14:	str	q0, [x22, #16]
  406d18:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406d1c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406d20:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406d24:	add	x19, x19, #0x630
  406d28:	add	x8, x8, #0x72c
  406d2c:	add	x1, x1, #0xdb3
  406d30:	mov	w2, #0x1                   	// #1
  406d34:	mov	x0, x19
  406d38:	str	xzr, [x8]
  406d3c:	bl	4077a4 <wcrtomb@plt+0x4974>
  406d40:	ldr	x0, [x19, #8]
  406d44:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  406d48:	add	x1, x1, #0x962
  406d4c:	bl	402950 <popen@plt>
  406d50:	cbz	x0, 406fc8 <wcrtomb@plt+0x4198>
  406d54:	mov	x27, x0
  406d58:	mov	x0, x27
  406d5c:	bl	402c30 <feof_unlocked@plt>
  406d60:	cbnz	w0, 406d98 <wcrtomb@plt+0x3f68>
  406d64:	add	x0, sp, #0x140
  406d68:	mov	w1, #0x1                   	// #1
  406d6c:	mov	w2, #0x1000                	// #4096
  406d70:	mov	x3, x27
  406d74:	bl	402b70 <fread_unlocked@plt>
  406d78:	cmp	w0, #0x1
  406d7c:	b.lt	406d58 <wcrtomb@plt+0x3f28>  // b.tstop
  406d80:	sxtw	x2, w0
  406d84:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406d88:	add	x0, x0, #0x708
  406d8c:	add	x1, sp, #0x140
  406d90:	bl	4077a4 <wcrtomb@plt+0x4974>
  406d94:	b	406d58 <wcrtomb@plt+0x3f28>
  406d98:	mov	x0, x27
  406d9c:	bl	402d50 <pclose@plt>
  406da0:	ldp	q1, q2, [x22]
  406da4:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406da8:	add	x9, x9, #0x630
  406dac:	ldp	q3, q0, [x9, #16]
  406db0:	ldr	q4, [x9]
  406db4:	stp	q1, q2, [x9]
  406db8:	ldr	q5, [x22, #32]
  406dbc:	ldr	x8, [x9, #16]
  406dc0:	adrp	x27, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406dc4:	add	x27, x27, #0x72d
  406dc8:	str	q5, [x9, #32]
  406dcc:	stp	q4, q3, [x22]
  406dd0:	str	q0, [x22, #32]
  406dd4:	cbz	x8, 406e00 <wcrtomb@plt+0x3fd0>
  406dd8:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406ddc:	ldr	x9, [x9, #1592]
  406de0:	sub	x8, x8, #0x1
  406de4:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406de8:	ldrb	w10, [x10, #1128]
  406dec:	ldrb	w9, [x9, x8]
  406df0:	cmp	w9, w10
  406df4:	b.ne	406e00 <wcrtomb@plt+0x3fd0>  // b.any
  406df8:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406dfc:	str	x8, [x9, #1600]
  406e00:	ldrb	w8, [x20, #32]
  406e04:	tbz	w8, #2, 406e24 <wcrtomb@plt+0x3ff4>
  406e08:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e0c:	add	x8, x8, #0x638
  406e10:	ldp	x0, x1, [x8]
  406e14:	ldrb	w2, [x8, #24]
  406e18:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e1c:	add	x3, x3, #0x6d0
  406e20:	bl	40791c <wcrtomb@plt+0x4aec>
  406e24:	ldr	x3, [x20, #24]
  406e28:	cbz	x3, 406e40 <wcrtomb@plt+0x4010>
  406e2c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e30:	add	x8, x8, #0x638
  406e34:	ldp	x0, x1, [x8]
  406e38:	ldrb	w2, [x8, #24]
  406e3c:	bl	40791c <wcrtomb@plt+0x4aec>
  406e40:	ldrb	w8, [x24, #1904]
  406e44:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e48:	cbz	w8, 405da0 <wcrtomb@plt+0x2f70>
  406e4c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e50:	add	x0, x0, #0x630
  406e54:	bl	407140 <wcrtomb@plt+0x4310>
  406e58:	b	405da0 <wcrtomb@plt+0x2f70>
  406e5c:	cbz	w8, 406e6c <wcrtomb@plt+0x403c>
  406e60:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406e64:	add	x0, x0, #0x792
  406e68:	bl	402b60 <puts@plt>
  406e6c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e70:	ldrb	w8, [x8, #1888]
  406e74:	cbnz	w8, 406ed0 <wcrtomb@plt+0x40a0>
  406e78:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e7c:	add	x8, x8, #0x638
  406e80:	ldp	x0, x1, [x8]
  406e84:	ldrb	w2, [x8, #24]
  406e88:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406e8c:	add	x3, x3, #0x6d0
  406e90:	bl	40791c <wcrtomb@plt+0x4aec>
  406e94:	b	406ed0 <wcrtomb@plt+0x40a0>
  406e98:	ldr	w8, [x26, #16]
  406e9c:	cmp	w8, #0x1
  406ea0:	b.eq	406ebc <wcrtomb@plt+0x408c>  // b.none
  406ea4:	ldp	x0, x8, [x26, #24]
  406ea8:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406eac:	add	x3, x3, #0x6d0
  406eb0:	mov	w2, #0x1                   	// #1
  406eb4:	sub	x1, x8, #0x1
  406eb8:	bl	40791c <wcrtomb@plt+0x4aec>
  406ebc:	ldrb	w8, [x24, #1904]
  406ec0:	cbz	w8, 406ed0 <wcrtomb@plt+0x40a0>
  406ec4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406ec8:	add	x0, x0, #0x792
  406ecc:	bl	402b60 <puts@plt>
  406ed0:	add	x0, sp, #0x40
  406ed4:	mov	x1, x21
  406ed8:	mov	w2, wzr
  406edc:	bl	406ff8 <wcrtomb@plt+0x41c8>
  406ee0:	tbnz	w0, #0, 405bbc <wcrtomb@plt+0x2d8c>
  406ee4:	b	406fa8 <wcrtomb@plt+0x4178>
  406ee8:	ldrb	w8, [x24, #1904]
  406eec:	cbz	w8, 406efc <wcrtomb@plt+0x40cc>
  406ef0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406ef4:	add	x0, x0, #0x792
  406ef8:	bl	402b60 <puts@plt>
  406efc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f00:	ldr	x9, [x8, #1600]
  406f04:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f08:	ldr	w10, [x10, #2296]
  406f0c:	sub	x1, x9, #0x1
  406f10:	str	x1, [x8, #1600]
  406f14:	cbnz	w10, 406ed0 <wcrtomb@plt+0x40a0>
  406f18:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f1c:	ldrb	w8, [x8, #1888]
  406f20:	cbnz	w8, 406ed0 <wcrtomb@plt+0x40a0>
  406f24:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f28:	add	x8, x8, #0x638
  406f2c:	ldr	x0, [x8]
  406f30:	b	406e84 <wcrtomb@plt+0x4054>
  406f34:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f38:	ldrb	w8, [x8, #1888]
  406f3c:	cbnz	w8, 406f5c <wcrtomb@plt+0x412c>
  406f40:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f44:	add	x8, x8, #0x638
  406f48:	ldp	x0, x1, [x8]
  406f4c:	ldrb	w2, [x8, #24]
  406f50:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  406f54:	add	x3, x3, #0x6d0
  406f58:	bl	40791c <wcrtomb@plt+0x4aec>
  406f5c:	bl	40738c <wcrtomb@plt+0x455c>
  406f60:	ldr	w8, [x26, #24]
  406f64:	cmn	w8, #0x1
  406f68:	csel	w19, wzr, w8, eq  // eq = none
  406f6c:	add	x0, sp, #0x40
  406f70:	bl	4071ac <wcrtomb@plt+0x437c>
  406f74:	ldr	x8, [sp, #72]
  406f78:	cmp	x8, #0x0
  406f7c:	mov	w8, #0x2                   	// #2
  406f80:	csel	w0, w19, w8, eq  // eq = none
  406f84:	add	sp, sp, #0x1, lsl #12
  406f88:	add	sp, sp, #0x1e0
  406f8c:	ldp	x20, x19, [sp, #80]
  406f90:	ldp	x22, x21, [sp, #64]
  406f94:	ldp	x24, x23, [sp, #48]
  406f98:	ldp	x26, x25, [sp, #32]
  406f9c:	ldp	x28, x27, [sp, #16]
  406fa0:	ldp	x29, x30, [sp], #96
  406fa4:	ret
  406fa8:	mov	w19, wzr
  406fac:	b	406f6c <wcrtomb@plt+0x413c>
  406fb0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406fb4:	add	x0, x0, #0x756
  406fb8:	bl	408e74 <wcrtomb@plt+0x6044>
  406fbc:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406fc0:	add	x1, x1, #0x737
  406fc4:	b	406fe0 <wcrtomb@plt+0x41b0>
  406fc8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406fcc:	add	x1, x1, #0x737
  406fd0:	mov	w2, #0x5                   	// #5
  406fd4:	b	406fe8 <wcrtomb@plt+0x41b8>
  406fd8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  406fdc:	add	x1, x1, #0x66c
  406fe0:	mov	w2, #0x5                   	// #5
  406fe4:	mov	x0, xzr
  406fe8:	bl	402d10 <dcgettext@plt>
  406fec:	bl	408e74 <wcrtomb@plt+0x6044>
  406ff0:	mov	w0, wzr
  406ff4:	ret
  406ff8:	stp	x29, x30, [sp, #-64]!
  406ffc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407000:	ldr	x8, [x8, #1728]
  407004:	stp	x22, x21, [sp, #32]
  407008:	stp	x20, x19, [sp, #48]
  40700c:	mov	w21, w2
  407010:	mov	x19, x1
  407014:	mov	x20, x0
  407018:	stp	x24, x23, [sp, #16]
  40701c:	mov	x29, sp
  407020:	cbz	x8, 407028 <wcrtomb@plt+0x41f8>
  407024:	bl	40738c <wcrtomb@plt+0x455c>
  407028:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40702c:	strb	wzr, [x8, #1736]
  407030:	cbnz	w21, 40703c <wcrtomb@plt+0x420c>
  407034:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407038:	str	xzr, [x8, #1600]
  40703c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407040:	mov	w9, #0x1                   	// #1
  407044:	strb	w9, [x8, #1616]
  407048:	ldr	x8, [x20, #32]
  40704c:	mov	x0, x20
  407050:	blr	x8
  407054:	tbnz	w0, #0, 407114 <wcrtomb@plt+0x42e4>
  407058:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40705c:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407060:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407064:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407068:	mov	x0, x20
  40706c:	bl	4071ac <wcrtomb@plt+0x437c>
  407070:	ldr	x8, [x20]
  407074:	ldr	x9, [x8]
  407078:	cbz	x9, 407128 <wcrtomb@plt+0x42f8>
  40707c:	ldrb	w9, [x20, #24]
  407080:	cbz	w9, 4070f0 <wcrtomb@plt+0x42c0>
  407084:	str	xzr, [x20, #16]
  407088:	str	xzr, [x21, #1648]
  40708c:	ldr	w8, [x19, #16]
  407090:	cbz	w8, 4070d4 <wcrtomb@plt+0x42a4>
  407094:	ldr	x9, [x19]
  407098:	ldr	x10, [x9]
  40709c:	sub	w8, w8, #0x1
  4070a0:	cbz	x10, 4070b8 <wcrtomb@plt+0x4288>
  4070a4:	ldr	w11, [x10]
  4070a8:	cmp	w11, #0x2
  4070ac:	b.ne	4070b8 <wcrtomb@plt+0x4288>  // b.any
  4070b0:	ldr	x10, [x10, #8]
  4070b4:	cbz	x10, 4070cc <wcrtomb@plt+0x429c>
  4070b8:	mov	w10, wzr
  4070bc:	str	w10, [x9, #16]
  4070c0:	add	x9, x9, #0x28
  4070c4:	cbnz	w8, 407098 <wcrtomb@plt+0x4268>
  4070c8:	b	4070d4 <wcrtomb@plt+0x42a4>
  4070cc:	mov	w10, #0x1                   	// #1
  4070d0:	b	4070bc <wcrtomb@plt+0x428c>
  4070d4:	bl	404530 <wcrtomb@plt+0x1700>
  4070d8:	ldr	x8, [x22, #1912]
  4070dc:	cbz	x8, 4070e4 <wcrtomb@plt+0x42b4>
  4070e0:	strb	wzr, [x24, #1752]
  4070e4:	ldrb	w9, [x23, #1892]
  4070e8:	ldr	x8, [x20]
  4070ec:	strb	w9, [x20, #24]
  4070f0:	add	x9, x8, #0x8
  4070f4:	str	x9, [x20]
  4070f8:	ldr	x0, [x8]
  4070fc:	mov	x1, x20
  407100:	bl	4074d8 <wcrtomb@plt+0x46a8>
  407104:	ldr	x8, [x20, #32]
  407108:	mov	x0, x20
  40710c:	blr	x8
  407110:	tbz	w0, #0, 407068 <wcrtomb@plt+0x4238>
  407114:	ldr	x8, [x20, #16]
  407118:	mov	w0, #0x1                   	// #1
  40711c:	add	x8, x8, #0x1
  407120:	str	x8, [x20, #16]
  407124:	b	40712c <wcrtomb@plt+0x42fc>
  407128:	mov	w0, wzr
  40712c:	ldp	x20, x19, [sp, #48]
  407130:	ldp	x22, x21, [sp, #32]
  407134:	ldp	x24, x23, [sp, #16]
  407138:	ldp	x29, x30, [sp], #64
  40713c:	ret
  407140:	stp	x29, x30, [sp, #-32]!
  407144:	stp	x20, x19, [sp, #16]
  407148:	ldr	x19, [x0, #8]
  40714c:	mov	x29, sp
  407150:	cbnz	x19, 407158 <wcrtomb@plt+0x4328>
  407154:	ldr	x19, [x0]
  407158:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40715c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407160:	ldr	x1, [x10, #1304]
  407164:	ldr	x20, [x0, #16]
  407168:	add	x8, x8, #0x660
  40716c:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407170:	adrp	x10, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407174:	add	x9, x9, #0x723
  407178:	add	x10, x10, #0x719
  40717c:	cmp	x0, x8
  407180:	csel	x0, x10, x9, eq  // eq = none
  407184:	bl	402d20 <fputs_unlocked@plt>
  407188:	cbz	x20, 40719c <wcrtomb@plt+0x436c>
  40718c:	ldrb	w0, [x19], #1
  407190:	sub	x20, x20, #0x1
  407194:	bl	4052b8 <wcrtomb@plt+0x2488>
  407198:	cbnz	x20, 40718c <wcrtomb@plt+0x435c>
  40719c:	ldp	x20, x19, [sp, #16]
  4071a0:	mov	w0, #0xa                   	// #10
  4071a4:	ldp	x29, x30, [sp], #32
  4071a8:	b	402a00 <putchar_unlocked@plt>
  4071ac:	stp	x29, x30, [sp, #-80]!
  4071b0:	stp	x26, x25, [sp, #16]
  4071b4:	stp	x24, x23, [sp, #32]
  4071b8:	stp	x22, x21, [sp, #48]
  4071bc:	stp	x20, x19, [sp, #64]
  4071c0:	mov	x19, x0
  4071c4:	ldr	x0, [x0, #184]
  4071c8:	adrp	x8, 406000 <wcrtomb@plt+0x31d0>
  4071cc:	add	x8, x8, #0xff0
  4071d0:	mov	x29, sp
  4071d4:	str	x8, [x19, #32]
  4071d8:	cbz	x0, 407374 <wcrtomb@plt+0x4544>
  4071dc:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4071e0:	ldr	x8, [x24, #1912]
  4071e4:	cbz	x8, 407324 <wcrtomb@plt+0x44f4>
  4071e8:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4071ec:	ldr	x8, [x23, #1760]
  4071f0:	cbz	x8, 407324 <wcrtomb@plt+0x44f4>
  4071f4:	ldr	x20, [x19, #48]
  4071f8:	bl	402850 <fileno@plt>
  4071fc:	ldr	x8, [x23, #1760]
  407200:	mov	w21, w0
  407204:	mov	x0, x8
  407208:	bl	402850 <fileno@plt>
  40720c:	ldp	w1, w2, [x19, #80]
  407210:	mov	w22, w0
  407214:	bl	402de0 <fchown@plt>
  407218:	cmn	w0, #0x1
  40721c:	b.ne	407230 <wcrtomb@plt+0x4400>  // b.any
  407220:	ldr	w2, [x19, #84]
  407224:	mov	w1, #0xffffffff            	// #-1
  407228:	mov	w0, w22
  40722c:	bl	402de0 <fchown@plt>
  407230:	ldp	x2, x0, [x19, #40]
  407234:	ldr	w4, [x19, #72]
  407238:	mov	w1, w21
  40723c:	mov	w3, w22
  407240:	bl	409b14 <wcrtomb@plt+0x6ce4>
  407244:	ldr	x0, [x19, #184]
  407248:	bl	409534 <wcrtomb@plt+0x6704>
  40724c:	ldr	x0, [x23, #1760]
  407250:	bl	409534 <wcrtomb@plt+0x6704>
  407254:	ldr	x23, [x24, #1912]
  407258:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40725c:	add	x1, x1, #0x7fe
  407260:	mov	x0, x23
  407264:	bl	402bb0 <strcmp@plt>
  407268:	cbz	w0, 407354 <wcrtomb@plt+0x4524>
  40726c:	mov	x0, x20
  407270:	bl	402750 <strlen@plt>
  407274:	mov	x22, x0
  407278:	mov	x0, x23
  40727c:	bl	402750 <strlen@plt>
  407280:	mov	x21, x0
  407284:	mov	w1, #0x2a                  	// #42
  407288:	mov	x0, x23
  40728c:	bl	402c20 <strchr@plt>
  407290:	cbz	x0, 4072b4 <wcrtomb@plt+0x4484>
  407294:	sub	w23, w22, #0x1
  407298:	add	x0, x0, #0x1
  40729c:	mov	w1, #0x2a                  	// #42
  4072a0:	mov	w25, w21
  4072a4:	bl	402c20 <strchr@plt>
  4072a8:	add	w21, w21, w23
  4072ac:	cbnz	x0, 407298 <wcrtomb@plt+0x4468>
  4072b0:	add	w21, w23, w25
  4072b4:	add	w8, w21, #0x1
  4072b8:	sxtw	x0, w8
  4072bc:	bl	410cb0 <wcrtomb@plt+0xde80>
  4072c0:	ldr	x23, [x24, #1912]
  4072c4:	mov	x21, x0
  4072c8:	mov	w1, #0x2a                  	// #42
  4072cc:	mov	x0, x23
  4072d0:	bl	402c20 <strchr@plt>
  4072d4:	cbz	x0, 40732c <wcrtomb@plt+0x44fc>
  4072d8:	mov	x24, x0
  4072dc:	sxtw	x26, w22
  4072e0:	mov	x22, x21
  4072e4:	sub	x25, x24, x23
  4072e8:	mov	x0, x22
  4072ec:	mov	x1, x23
  4072f0:	mov	x2, x25
  4072f4:	bl	402710 <memcpy@plt>
  4072f8:	add	x0, x22, x25
  4072fc:	mov	x1, x20
  407300:	bl	402c80 <strcpy@plt>
  407304:	add	x23, x24, #0x1
  407308:	add	x22, x0, x26
  40730c:	mov	w1, #0x2a                  	// #42
  407310:	mov	x0, x23
  407314:	bl	402c20 <strchr@plt>
  407318:	mov	x24, x0
  40731c:	cbnz	x0, 4072e4 <wcrtomb@plt+0x44b4>
  407320:	b	407330 <wcrtomb@plt+0x4500>
  407324:	bl	409534 <wcrtomb@plt+0x6704>
  407328:	b	407370 <wcrtomb@plt+0x4540>
  40732c:	mov	x22, x21
  407330:	mov	x0, x22
  407334:	mov	x1, x23
  407338:	bl	402c80 <strcpy@plt>
  40733c:	ldr	x2, [x19, #40]
  407340:	mov	x0, x20
  407344:	mov	x1, x21
  407348:	bl	40988c <wcrtomb@plt+0x6a5c>
  40734c:	mov	x0, x21
  407350:	bl	402be0 <free@plt>
  407354:	ldr	x0, [x19, #40]
  407358:	mov	x1, x20
  40735c:	mov	x2, x0
  407360:	bl	40988c <wcrtomb@plt+0x6a5c>
  407364:	bl	408648 <wcrtomb@plt+0x5818>
  407368:	ldr	x0, [x19, #40]
  40736c:	bl	402be0 <free@plt>
  407370:	str	xzr, [x19, #184]
  407374:	ldp	x20, x19, [sp, #64]
  407378:	ldp	x22, x21, [sp, #48]
  40737c:	ldp	x24, x23, [sp, #32]
  407380:	ldp	x26, x25, [sp, #16]
  407384:	ldp	x29, x30, [sp], #80
  407388:	ret
  40738c:	stp	x29, x30, [sp, #-64]!
  407390:	stp	x28, x23, [sp, #16]
  407394:	stp	x22, x21, [sp, #32]
  407398:	stp	x20, x19, [sp, #48]
  40739c:	mov	x29, sp
  4073a0:	sub	sp, sp, #0x2, lsl #12
  4073a4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073a8:	ldrb	w8, [x8, #1752]
  4073ac:	cbz	w8, 4073d4 <wcrtomb@plt+0x45a4>
  4073b0:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073b4:	add	x19, x19, #0x6d8
  4073b8:	ldr	x3, [x19, #8]
  4073bc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073c0:	add	x0, x0, #0x468
  4073c4:	mov	w1, #0x1                   	// #1
  4073c8:	mov	w2, #0x1                   	// #1
  4073cc:	bl	409244 <wcrtomb@plt+0x6414>
  4073d0:	strb	wzr, [x19]
  4073d4:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073d8:	ldr	x22, [x20, #1728]
  4073dc:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073e0:	cbz	x22, 407474 <wcrtomb@plt+0x4644>
  4073e4:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4073e8:	ldr	x0, [x22, #8]
  4073ec:	cbz	x0, 407400 <wcrtomb@plt+0x45d0>
  4073f0:	ldr	x2, [x22, #16]
  4073f4:	ldr	x3, [x21, #1760]
  4073f8:	mov	w1, #0x1                   	// #1
  4073fc:	bl	409244 <wcrtomb@plt+0x6414>
  407400:	ldr	x0, [x22]
  407404:	cbz	x0, 40746c <wcrtomb@plt+0x463c>
  407408:	ldr	x1, [x23, #1136]
  40740c:	mov	w2, wzr
  407410:	bl	408fc0 <wcrtomb@plt+0x6190>
  407414:	cbz	x0, 40746c <wcrtomb@plt+0x463c>
  407418:	mov	x19, x0
  40741c:	mov	x0, sp
  407420:	mov	w1, #0x1                   	// #1
  407424:	mov	w2, #0x2000                	// #8192
  407428:	mov	x3, x19
  40742c:	bl	409370 <wcrtomb@plt+0x6540>
  407430:	cbz	x0, 407464 <wcrtomb@plt+0x4634>
  407434:	mov	x2, x0
  407438:	ldr	x3, [x21, #1760]
  40743c:	mov	x0, sp
  407440:	mov	w1, #0x1                   	// #1
  407444:	bl	409244 <wcrtomb@plt+0x6414>
  407448:	mov	x0, sp
  40744c:	mov	w1, #0x1                   	// #1
  407450:	mov	w2, #0x2000                	// #8192
  407454:	mov	x3, x19
  407458:	bl	409370 <wcrtomb@plt+0x6540>
  40745c:	mov	x2, x0
  407460:	cbnz	x0, 407438 <wcrtomb@plt+0x4608>
  407464:	mov	x0, x19
  407468:	bl	409534 <wcrtomb@plt+0x6704>
  40746c:	ldr	x22, [x22, #24]
  407470:	cbnz	x22, 4073e8 <wcrtomb@plt+0x45b8>
  407474:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407478:	ldrb	w8, [x8, #1884]
  40747c:	cbz	w8, 407488 <wcrtomb@plt+0x4658>
  407480:	ldr	x0, [x21, #1760]
  407484:	bl	4094c0 <wcrtomb@plt+0x6690>
  407488:	ldr	x19, [x20, #1728]
  40748c:	cbz	x19, 4074b4 <wcrtomb@plt+0x4684>
  407490:	ldrb	w8, [x19, #32]
  407494:	cbz	w8, 4074a0 <wcrtomb@plt+0x4670>
  407498:	ldr	x0, [x19, #8]
  40749c:	bl	402be0 <free@plt>
  4074a0:	ldr	x21, [x19, #24]
  4074a4:	mov	x0, x19
  4074a8:	bl	402be0 <free@plt>
  4074ac:	mov	x19, x21
  4074b0:	cbnz	x21, 407490 <wcrtomb@plt+0x4660>
  4074b4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4074b8:	str	xzr, [x8, #1776]
  4074bc:	str	xzr, [x20, #1728]
  4074c0:	add	sp, sp, #0x2, lsl #12
  4074c4:	ldp	x20, x19, [sp, #48]
  4074c8:	ldp	x22, x21, [sp, #32]
  4074cc:	ldp	x28, x23, [sp, #16]
  4074d0:	ldp	x29, x30, [sp], #64
  4074d4:	ret
  4074d8:	stp	x29, x30, [sp, #-48]!
  4074dc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4074e0:	stp	x22, x21, [sp, #16]
  4074e4:	stp	x20, x19, [sp, #32]
  4074e8:	str	xzr, [x8, #1696]
  4074ec:	str	x0, [x1, #48]
  4074f0:	ldrb	w8, [x0]
  4074f4:	mov	x19, x1
  4074f8:	mov	x20, x0
  4074fc:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407500:	cmp	w8, #0x2d
  407504:	mov	x29, sp
  407508:	b.ne	407534 <wcrtomb@plt+0x4704>  // b.any
  40750c:	ldrb	w8, [x20, #1]
  407510:	cbnz	w8, 407534 <wcrtomb@plt+0x4704>
  407514:	ldr	x8, [x21, #1912]
  407518:	cbnz	x8, 407534 <wcrtomb@plt+0x4704>
  40751c:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407520:	ldr	x0, [x20, #1312]
  407524:	bl	402c90 <clearerr_unlocked@plt>
  407528:	ldr	x0, [x20, #1312]
  40752c:	str	x0, [x19, #184]
  407530:	b	407568 <wcrtomb@plt+0x4738>
  407534:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407538:	ldrb	w8, [x8, #1896]
  40753c:	cbz	w8, 40754c <wcrtomb@plt+0x471c>
  407540:	mov	x0, x20
  407544:	bl	40964c <wcrtomb@plt+0x681c>
  407548:	str	x0, [x19, #48]
  40754c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407550:	ldr	x1, [x8, #1136]
  407554:	mov	x0, x20
  407558:	mov	w2, wzr
  40755c:	bl	408fc0 <wcrtomb@plt+0x6190>
  407560:	str	x0, [x19, #184]
  407564:	cbz	x0, 40759c <wcrtomb@plt+0x476c>
  407568:	adrp	x8, 407000 <wcrtomb@plt+0x41d0>
  40756c:	add	x8, x8, #0x728
  407570:	str	x8, [x19, #32]
  407574:	ldr	x8, [x21, #1912]
  407578:	cbz	x8, 407604 <wcrtomb@plt+0x47d4>
  40757c:	ldr	x0, [x19, #48]
  407580:	bl	410e78 <wcrtomb@plt+0xe048>
  407584:	mov	w1, #0x2f                  	// #47
  407588:	mov	x20, x0
  40758c:	bl	402ae0 <strrchr@plt>
  407590:	cbz	x0, 407638 <wcrtomb@plt+0x4808>
  407594:	strb	wzr, [x0]
  407598:	b	407640 <wcrtomb@plt+0x4810>
  40759c:	bl	402da0 <__errno_location@plt>
  4075a0:	ldr	w0, [x0]
  4075a4:	bl	402ad0 <strerror@plt>
  4075a8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4075ac:	ldr	x21, [x8, #1280]
  4075b0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4075b4:	mov	x22, x0
  4075b8:	add	x1, x1, #0x67b
  4075bc:	mov	w2, #0x5                   	// #5
  4075c0:	mov	x0, xzr
  4075c4:	bl	402d10 <dcgettext@plt>
  4075c8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4075cc:	ldr	x3, [x8, #1968]
  4075d0:	mov	x2, x0
  4075d4:	mov	w1, #0x1                   	// #1
  4075d8:	mov	x0, x21
  4075dc:	mov	x4, x20
  4075e0:	mov	x5, x22
  4075e4:	bl	402ba0 <__fprintf_chk@plt>
  4075e8:	ldr	x8, [x19, #8]
  4075ec:	adrp	x9, 406000 <wcrtomb@plt+0x31d0>
  4075f0:	add	x9, x9, #0xff0
  4075f4:	str	x9, [x19, #32]
  4075f8:	add	x8, x8, #0x1
  4075fc:	str	x8, [x19, #8]
  407600:	b	4076b8 <wcrtomb@plt+0x4888>
  407604:	cbz	x0, 407624 <wcrtomb@plt+0x47f4>
  407608:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40760c:	ldrb	w8, [x8, #1884]
  407610:	cbz	w8, 407624 <wcrtomb@plt+0x47f4>
  407614:	mov	w2, #0x2                   	// #2
  407618:	mov	x1, xzr
  40761c:	mov	x3, xzr
  407620:	bl	402820 <setvbuf@plt>
  407624:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407628:	ldr	x8, [x8, #1304]
  40762c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407630:	str	x8, [x9, #1760]
  407634:	b	4076b8 <wcrtomb@plt+0x4888>
  407638:	mov	w8, #0x2e                  	// #46
  40763c:	strh	w8, [x20]
  407640:	ldr	x0, [x19, #184]
  407644:	bl	402850 <fileno@plt>
  407648:	bl	402cc0 <isatty@plt>
  40764c:	cbnz	w0, 4076c8 <wcrtomb@plt+0x4898>
  407650:	ldr	x0, [x19, #184]
  407654:	bl	402850 <fileno@plt>
  407658:	add	x1, x19, #0x38
  40765c:	bl	41cf10 <_obstack_memory_used@@Base+0xbc84>
  407660:	ldr	w8, [x19, #72]
  407664:	and	w8, w8, #0xf000
  407668:	cmp	w8, #0x8, lsl #12
  40766c:	b.ne	4076d4 <wcrtomb@plt+0x48a4>  // b.any
  407670:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407674:	ldr	x3, [x8, #1144]
  407678:	add	x21, x19, #0x28
  40767c:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407680:	add	x2, x2, #0xc41
  407684:	mov	x0, x21
  407688:	mov	x1, x20
  40768c:	bl	40914c <wcrtomb@plt+0x631c>
  407690:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407694:	add	x22, x22, #0x6d8
  407698:	str	x0, [x22, #8]
  40769c:	ldr	x0, [x19, #40]
  4076a0:	bl	40863c <wcrtomb@plt+0x580c>
  4076a4:	mov	x0, x20
  4076a8:	strb	wzr, [x22]
  4076ac:	bl	402be0 <free@plt>
  4076b0:	ldr	x8, [x22, #8]
  4076b4:	cbz	x8, 4076f0 <wcrtomb@plt+0x48c0>
  4076b8:	ldp	x20, x19, [sp, #32]
  4076bc:	ldp	x22, x21, [sp, #16]
  4076c0:	ldp	x29, x30, [sp], #48
  4076c4:	ret
  4076c8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4076cc:	add	x1, x1, #0x692
  4076d0:	b	4076dc <wcrtomb@plt+0x48ac>
  4076d4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4076d8:	add	x1, x1, #0x6b2
  4076dc:	mov	w2, #0x5                   	// #5
  4076e0:	mov	x0, xzr
  4076e4:	bl	402d10 <dcgettext@plt>
  4076e8:	ldr	x1, [x19, #48]
  4076ec:	bl	408e74 <wcrtomb@plt+0x6044>
  4076f0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4076f4:	add	x1, x1, #0x6d7
  4076f8:	mov	w2, #0x5                   	// #5
  4076fc:	mov	x0, xzr
  407700:	bl	402d10 <dcgettext@plt>
  407704:	ldr	x19, [x21]
  407708:	mov	x20, x0
  40770c:	bl	402da0 <__errno_location@plt>
  407710:	ldr	w0, [x0]
  407714:	bl	402ad0 <strerror@plt>
  407718:	mov	x2, x0
  40771c:	mov	x0, x20
  407720:	mov	x1, x19
  407724:	bl	408e74 <wcrtomb@plt+0x6044>
  407728:	stp	x29, x30, [sp, #-32]!
  40772c:	str	x19, [sp, #16]
  407730:	adrp	x19, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407734:	ldr	x3, [x0, #184]
  407738:	ldrb	w2, [x19, #1128]
  40773c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407740:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407744:	add	x0, x0, #0x6f8
  407748:	add	x1, x1, #0x700
  40774c:	mov	x29, sp
  407750:	bl	40941c <wcrtomb@plt+0x65ec>
  407754:	subs	x2, x0, #0x1
  407758:	b.lt	407794 <wcrtomb@plt+0x4964>  // b.tstop
  40775c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407760:	ldr	x1, [x8, #1784]
  407764:	ldrb	w9, [x19, #1128]
  407768:	ldrb	w8, [x1, x2]
  40776c:	cmp	w8, w9
  407770:	b.eq	407780 <wcrtomb@plt+0x4950>  // b.none
  407774:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407778:	mov	x2, x0
  40777c:	strb	wzr, [x8, #1616]
  407780:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407784:	add	x0, x0, #0x630
  407788:	bl	4077a4 <wcrtomb@plt+0x4974>
  40778c:	mov	w0, #0x1                   	// #1
  407790:	b	407798 <wcrtomb@plt+0x4968>
  407794:	mov	w0, wzr
  407798:	ldr	x19, [sp, #16]
  40779c:	ldp	x29, x30, [sp], #32
  4077a0:	ret
  4077a4:	stp	x29, x30, [sp, #-48]!
  4077a8:	stp	x22, x21, [sp, #16]
  4077ac:	stp	x20, x19, [sp, #32]
  4077b0:	ldp	x8, x9, [x0, #16]
  4077b4:	mov	x21, x0
  4077b8:	mov	x19, x2
  4077bc:	mov	x20, x1
  4077c0:	add	x22, x8, x2
  4077c4:	cmp	x9, x22
  4077c8:	mov	x29, sp
  4077cc:	b.cs	4077e0 <wcrtomb@plt+0x49b0>  // b.hs, b.nlast
  4077d0:	mov	x0, x21
  4077d4:	mov	x1, x22
  4077d8:	bl	407878 <wcrtomb@plt+0x4a48>
  4077dc:	ldr	x8, [x21, #16]
  4077e0:	ldr	x9, [x21, #8]
  4077e4:	mov	x1, x20
  4077e8:	mov	x2, x19
  4077ec:	add	x0, x9, x8
  4077f0:	bl	402710 <memcpy@plt>
  4077f4:	str	x22, [x21, #16]
  4077f8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4077fc:	ldrb	w8, [x8, #2288]
  407800:	cbnz	w8, 407868 <wcrtomb@plt+0x4a38>
  407804:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407808:	ldr	w8, [x22, #2292]
  40780c:	cmp	w8, #0x2
  407810:	b.lt	407868 <wcrtomb@plt+0x4a38>  // b.tstop
  407814:	cbz	x19, 407868 <wcrtomb@plt+0x4a38>
  407818:	add	x21, x21, #0x24
  40781c:	cmp	w8, #0x1
  407820:	b.eq	407844 <wcrtomb@plt+0x4a14>  // b.none
  407824:	mov	x0, xzr
  407828:	mov	x1, x20
  40782c:	mov	x2, x19
  407830:	mov	x3, x21
  407834:	bl	410f04 <wcrtomb@plt+0xe0d4>
  407838:	cmn	x0, #0x2
  40783c:	b.cc	407850 <wcrtomb@plt+0x4a20>  // b.lo, b.ul, b.last
  407840:	str	xzr, [x21]
  407844:	add	x20, x20, #0x1
  407848:	mov	w0, #0x1                   	// #1
  40784c:	b	407858 <wcrtomb@plt+0x4a28>
  407850:	cbz	x0, 407868 <wcrtomb@plt+0x4a38>
  407854:	add	x20, x20, x0
  407858:	subs	x19, x19, x0
  40785c:	b.eq	407868 <wcrtomb@plt+0x4a38>  // b.none
  407860:	ldr	w8, [x22, #2292]
  407864:	b	40781c <wcrtomb@plt+0x49ec>
  407868:	ldp	x20, x19, [sp, #32]
  40786c:	ldp	x22, x21, [sp, #16]
  407870:	ldp	x29, x30, [sp], #48
  407874:	ret
  407878:	stp	x29, x30, [sp, #-32]!
  40787c:	stp	x20, x19, [sp, #16]
  407880:	mov	x19, x0
  407884:	ldp	x0, x8, [x0]
  407888:	ldr	x10, [x19, #24]
  40788c:	mov	x20, x1
  407890:	mov	x29, sp
  407894:	sub	x9, x8, x0
  407898:	lsl	x10, x10, #1
  40789c:	cmp	x10, w9, sxtw
  4078a0:	b.cs	4078d8 <wcrtomb@plt+0x4aa8>  // b.hs, b.nlast
  4078a4:	ldr	x2, [x19, #16]
  4078a8:	mov	x1, x8
  4078ac:	bl	402720 <memmove@plt>
  4078b0:	ldp	x0, x8, [x19]
  4078b4:	ldr	x9, [x19, #24]
  4078b8:	sub	x8, x8, x0
  4078bc:	add	x8, x9, x8
  4078c0:	cmp	x8, x20
  4078c4:	str	x8, [x19, #24]
  4078c8:	str	x0, [x19, #8]
  4078cc:	b.hi	40790c <wcrtomb@plt+0x4adc>  // b.pmore
  4078d0:	mov	x9, xzr
  4078d4:	lsl	x10, x8, #1
  4078d8:	cmp	x10, x20
  4078dc:	csel	x8, x20, x10, cc  // cc = lo, ul, last
  4078e0:	cmp	x8, #0x32
  4078e4:	mov	w10, #0x32                  	// #50
  4078e8:	csel	x8, x8, x10, hi  // hi = pmore
  4078ec:	add	x10, x8, w9, sxtw
  4078f0:	adds	x1, x10, #0x1
  4078f4:	str	x8, [x19, #24]
  4078f8:	b.mi	407918 <wcrtomb@plt+0x4ae8>  // b.first
  4078fc:	sxtw	x20, w9
  407900:	bl	410d00 <wcrtomb@plt+0xded0>
  407904:	add	x8, x0, x20
  407908:	stp	x0, x8, [x19]
  40790c:	ldp	x20, x19, [sp, #16]
  407910:	ldp	x29, x30, [sp], #32
  407914:	ret
  407918:	bl	410ec0 <wcrtomb@plt+0xe090>
  40791c:	stp	x29, x30, [sp, #-48]!
  407920:	stp	x22, x21, [sp, #16]
  407924:	stp	x20, x19, [sp, #32]
  407928:	mov	x29, sp
  40792c:	cbz	x0, 4079c4 <wcrtomb@plt+0x4b94>
  407930:	ldrb	w8, [x3, #8]
  407934:	mov	x19, x3
  407938:	mov	w20, w2
  40793c:	mov	x21, x1
  407940:	mov	x22, x0
  407944:	cbz	w8, 407964 <wcrtomb@plt+0x4b34>
  407948:	ldr	x3, [x19, #16]
  40794c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407950:	add	x0, x0, #0x468
  407954:	mov	w1, #0x1                   	// #1
  407958:	mov	w2, #0x1                   	// #1
  40795c:	bl	409244 <wcrtomb@plt+0x6414>
  407960:	strb	wzr, [x19, #8]
  407964:	cbz	x21, 40797c <wcrtomb@plt+0x4b4c>
  407968:	ldr	x3, [x19, #16]
  40796c:	mov	w1, #0x1                   	// #1
  407970:	mov	x0, x22
  407974:	mov	x2, x21
  407978:	bl	409244 <wcrtomb@plt+0x6414>
  40797c:	cbz	w20, 40799c <wcrtomb@plt+0x4b6c>
  407980:	ldr	x3, [x19, #16]
  407984:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407988:	add	x0, x0, #0x468
  40798c:	mov	w1, #0x1                   	// #1
  407990:	mov	w2, #0x1                   	// #1
  407994:	bl	409244 <wcrtomb@plt+0x6414>
  407998:	b	4079a4 <wcrtomb@plt+0x4b74>
  40799c:	mov	w8, #0x1                   	// #1
  4079a0:	strb	w8, [x19, #8]
  4079a4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4079a8:	ldrb	w8, [x8, #1884]
  4079ac:	cbz	w8, 4079c4 <wcrtomb@plt+0x4b94>
  4079b0:	ldr	x0, [x19, #16]
  4079b4:	ldp	x20, x19, [sp, #32]
  4079b8:	ldp	x22, x21, [sp, #16]
  4079bc:	ldp	x29, x30, [sp], #48
  4079c0:	b	4094c0 <wcrtomb@plt+0x6690>
  4079c4:	ldp	x20, x19, [sp, #32]
  4079c8:	ldp	x22, x21, [sp, #16]
  4079cc:	ldp	x29, x30, [sp], #48
  4079d0:	ret
  4079d4:	stp	x29, x30, [sp, #-32]!
  4079d8:	stp	x20, x19, [sp, #16]
  4079dc:	mov	x20, x0
  4079e0:	ldp	x0, x8, [x1]
  4079e4:	ldr	x9, [x1, #24]
  4079e8:	mov	x19, x1
  4079ec:	mov	x29, sp
  4079f0:	sub	x8, x8, x0
  4079f4:	add	x9, x9, x8
  4079f8:	str	x9, [x1, #24]
  4079fc:	ldr	x8, [x20, #16]
  407a00:	cmp	x9, x8
  407a04:	b.cs	407a3c <wcrtomb@plt+0x4c0c>  // b.hs, b.nlast
  407a08:	lsl	x9, x9, #1
  407a0c:	cmp	x9, x8
  407a10:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  407a14:	cmp	x8, #0x32
  407a18:	mov	w9, #0x32                  	// #50
  407a1c:	csel	x8, x8, x9, hi  // hi = pmore
  407a20:	str	x8, [x19, #24]
  407a24:	bl	402be0 <free@plt>
  407a28:	ldr	x8, [x19, #24]
  407a2c:	add	x0, x8, #0x1
  407a30:	bl	410e00 <wcrtomb@plt+0xdfd0>
  407a34:	str	x0, [x19]
  407a38:	ldr	x8, [x20, #16]
  407a3c:	stp	x0, x8, [x19, #8]
  407a40:	ldrb	w8, [x20, #32]
  407a44:	strb	w8, [x19, #32]
  407a48:	ldp	x1, x2, [x20, #8]
  407a4c:	bl	402710 <memcpy@plt>
  407a50:	ldur	x8, [x20, #36]
  407a54:	stur	x8, [x19, #36]
  407a58:	ldp	x20, x19, [sp, #16]
  407a5c:	ldp	x29, x30, [sp], #32
  407a60:	ret
  407a64:	stp	x29, x30, [sp, #-32]!
  407a68:	stp	x20, x19, [sp, #16]
  407a6c:	mov	x19, x1
  407a70:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407a74:	mov	x20, x0
  407a78:	add	x1, x1, #0x468
  407a7c:	mov	w2, #0x1                   	// #1
  407a80:	mov	x0, x19
  407a84:	mov	x29, sp
  407a88:	bl	4077a4 <wcrtomb@plt+0x4974>
  407a8c:	ldp	x1, x2, [x20, #8]
  407a90:	mov	x0, x19
  407a94:	bl	4077a4 <wcrtomb@plt+0x4974>
  407a98:	ldrb	w8, [x20, #32]
  407a9c:	strb	w8, [x19, #32]
  407aa0:	ldur	x8, [x20, #36]
  407aa4:	stur	x8, [x19, #36]
  407aa8:	ldp	x20, x19, [sp, #16]
  407aac:	ldp	x29, x30, [sp], #32
  407ab0:	ret
  407ab4:	stp	x29, x30, [sp, #-32]!
  407ab8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407abc:	ldr	x8, [x8, #1696]
  407ac0:	str	x19, [sp, #16]
  407ac4:	mov	x29, sp
  407ac8:	cbz	x8, 407ad4 <wcrtomb@plt+0x4ca4>
  407acc:	mov	w0, wzr
  407ad0:	b	407af8 <wcrtomb@plt+0x4cc8>
  407ad4:	mov	x19, x0
  407ad8:	ldr	x0, [x0, #184]
  407adc:	cbz	x0, 407ae8 <wcrtomb@plt+0x4cb8>
  407ae0:	bl	402c30 <feof_unlocked@plt>
  407ae4:	cbz	w0, 407b14 <wcrtomb@plt+0x4ce4>
  407ae8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407aec:	ldrb	w8, [x8, #1892]
  407af0:	cbz	w8, 407b04 <wcrtomb@plt+0x4cd4>
  407af4:	mov	w0, #0x1                   	// #1
  407af8:	ldr	x19, [sp, #16]
  407afc:	ldp	x29, x30, [sp], #32
  407b00:	ret
  407b04:	mov	x0, x19
  407b08:	ldr	x19, [sp, #16]
  407b0c:	ldp	x29, x30, [sp], #32
  407b10:	b	407c00 <wcrtomb@plt+0x4dd0>
  407b14:	ldr	x0, [x19, #184]
  407b18:	bl	402ac0 <getc_unlocked@plt>
  407b1c:	cmn	w0, #0x1
  407b20:	b.eq	407ae8 <wcrtomb@plt+0x4cb8>  // b.none
  407b24:	ldr	x1, [x19, #184]
  407b28:	bl	402bf0 <ungetc@plt>
  407b2c:	b	407acc <wcrtomb@plt+0x4c9c>
  407b30:	stp	x29, x30, [sp, #-16]!
  407b34:	ldr	w8, [x0]
  407b38:	mov	x29, sp
  407b3c:	cmp	w8, #0x6
  407b40:	b.hi	407bf4 <wcrtomb@plt+0x4dc4>  // b.pmore
  407b44:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407b48:	add	x9, x9, #0x665
  407b4c:	adr	x10, 407b60 <wcrtomb@plt+0x4d30>
  407b50:	ldrb	w11, [x9, x8]
  407b54:	add	x10, x10, x11, lsl #2
  407b58:	mov	w8, #0x1                   	// #1
  407b5c:	br	x10
  407b60:	ldr	x8, [x0, #8]
  407b64:	ldr	x9, [x1, #16]
  407b68:	cmp	x8, x9
  407b6c:	cset	w8, ls  // ls = plast
  407b70:	b	407be8 <wcrtomb@plt+0x4db8>
  407b74:	ldr	x8, [x0, #8]
  407b78:	ldr	x9, [x1, #16]
  407b7c:	cmp	x8, x9
  407b80:	b	407be4 <wcrtomb@plt+0x4db4>
  407b84:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407b88:	add	x8, x8, #0x638
  407b8c:	ldr	x0, [x0, #24]
  407b90:	ldp	x1, x2, [x8]
  407b94:	mov	x3, xzr
  407b98:	mov	x4, xzr
  407b9c:	mov	w5, wzr
  407ba0:	bl	408290 <wcrtomb@plt+0x5460>
  407ba4:	cmp	w0, #0x0
  407ba8:	cset	w8, ne  // ne = any
  407bac:	b	407be8 <wcrtomb@plt+0x4db8>
  407bb0:	ldr	x8, [x1, #16]
  407bb4:	ldr	x9, [x0, #8]
  407bb8:	subs	x8, x8, x9
  407bbc:	b.cs	407bd4 <wcrtomb@plt+0x4da4>  // b.hs, b.nlast
  407bc0:	mov	w8, wzr
  407bc4:	b	407be8 <wcrtomb@plt+0x4db8>
  407bc8:	mov	x0, x1
  407bcc:	ldp	x29, x30, [sp], #16
  407bd0:	b	407ab4 <wcrtomb@plt+0x4c84>
  407bd4:	ldr	x9, [x0, #16]
  407bd8:	udiv	x10, x8, x9
  407bdc:	msub	x8, x10, x9, x8
  407be0:	cmp	x8, #0x0
  407be4:	cset	w8, eq  // eq = none
  407be8:	mov	w0, w8
  407bec:	ldp	x29, x30, [sp], #16
  407bf0:	ret
  407bf4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407bf8:	add	x0, x0, #0x771
  407bfc:	bl	408e74 <wcrtomb@plt+0x6044>
  407c00:	stp	x29, x30, [sp, #-32]!
  407c04:	str	x19, [sp, #16]
  407c08:	mov	x19, x0
  407c0c:	mov	x29, sp
  407c10:	bl	4071ac <wcrtomb@plt+0x437c>
  407c14:	ldr	x8, [x19]
  407c18:	ldr	x9, [x8]
  407c1c:	cbz	x9, 407c50 <wcrtomb@plt+0x4e20>
  407c20:	add	x9, x8, #0x8
  407c24:	str	x9, [x19]
  407c28:	ldr	x0, [x8]
  407c2c:	mov	x1, x19
  407c30:	bl	4074d8 <wcrtomb@plt+0x46a8>
  407c34:	ldr	x0, [x19, #184]
  407c38:	cbz	x0, 407c48 <wcrtomb@plt+0x4e18>
  407c3c:	bl	402ac0 <getc_unlocked@plt>
  407c40:	cmn	w0, #0x1
  407c44:	b.ne	407c58 <wcrtomb@plt+0x4e28>  // b.any
  407c48:	mov	x0, x19
  407c4c:	b	407c10 <wcrtomb@plt+0x4de0>
  407c50:	mov	w0, #0x1                   	// #1
  407c54:	b	407c64 <wcrtomb@plt+0x4e34>
  407c58:	ldr	x1, [x19, #184]
  407c5c:	bl	402bf0 <ungetc@plt>
  407c60:	mov	w0, wzr
  407c64:	ldr	x19, [sp, #16]
  407c68:	ldp	x29, x30, [sp], #32
  407c6c:	ret
  407c70:	sub	sp, sp, #0x50
  407c74:	stp	x20, x19, [sp, #64]
  407c78:	mov	x19, x1
  407c7c:	mov	x20, x0
  407c80:	stp	x29, x30, [sp, #16]
  407c84:	stp	x24, x23, [sp, #32]
  407c88:	stp	x22, x21, [sp, #48]
  407c8c:	add	x29, sp, #0x10
  407c90:	cbz	w2, 407e5c <wcrtomb@plt+0x502c>
  407c94:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407c98:	add	x8, x8, #0x718
  407c9c:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407ca0:	ldp	x8, x9, [x8]
  407ca4:	ldrsw	x10, [x24, #2292]
  407ca8:	mov	w21, w2
  407cac:	sub	x11, x9, x8
  407cb0:	mul	x9, x10, x19
  407cb4:	cmp	x11, x9
  407cb8:	b.cs	407ccc <wcrtomb@plt+0x4e9c>  // b.hs, b.nlast
  407cbc:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407cc0:	add	x1, x9, x8
  407cc4:	add	x0, x0, #0x708
  407cc8:	bl	407878 <wcrtomb@plt+0x4a48>
  407ccc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407cd0:	add	x8, x8, #0x72c
  407cd4:	ldr	x8, [x8]
  407cd8:	str	x8, [sp, #8]
  407cdc:	cbz	x19, 407e70 <wcrtomb@plt+0x5040>
  407ce0:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407ce4:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407ce8:	add	x23, x23, #0x710
  407cec:	add	x22, x22, #0x708
  407cf0:	ldr	w8, [x24, #2292]
  407cf4:	cmp	w8, #0x1
  407cf8:	b.ne	407d10 <wcrtomb@plt+0x4ee0>  // b.any
  407cfc:	ldrb	w0, [x20]
  407d00:	bl	402b00 <btowc@plt>
  407d04:	str	w0, [sp, #4]
  407d08:	mov	w0, #0x1                   	// #1
  407d0c:	b	407d38 <wcrtomb@plt+0x4f08>
  407d10:	add	x0, sp, #0x4
  407d14:	add	x3, sp, #0x8
  407d18:	mov	x1, x20
  407d1c:	mov	x2, x19
  407d20:	bl	410f04 <wcrtomb@plt+0xe0d4>
  407d24:	cmn	x0, #0x1
  407d28:	b.eq	407d68 <wcrtomb@plt+0x4f38>  // b.none
  407d2c:	cmn	x0, #0x2
  407d30:	b.eq	407e5c <wcrtomb@plt+0x502c>  // b.none
  407d34:	cbz	x0, 407e5c <wcrtomb@plt+0x502c>
  407d38:	add	x20, x20, x0
  407d3c:	tst	w21, #0xc
  407d40:	sub	x19, x19, x0
  407d44:	b.eq	407d58 <wcrtomb@plt+0x4f28>  // b.none
  407d48:	ldr	w0, [sp, #4]
  407d4c:	tbnz	w21, #2, 407d90 <wcrtomb@plt+0x4f60>
  407d50:	bl	402df0 <towlower@plt>
  407d54:	b	407d94 <wcrtomb@plt+0x4f64>
  407d58:	ldr	w0, [sp, #4]
  407d5c:	tbnz	w21, #0, 407da8 <wcrtomb@plt+0x4f78>
  407d60:	bl	402df0 <towlower@plt>
  407d64:	b	407dac <wcrtomb@plt+0x4f7c>
  407d68:	ands	w21, w21, #0xfffffff3
  407d6c:	b.eq	407e5c <wcrtomb@plt+0x502c>  // b.none
  407d70:	mov	w2, #0x1                   	// #1
  407d74:	mov	x0, x22
  407d78:	mov	x1, x20
  407d7c:	bl	4077a4 <wcrtomb@plt+0x4974>
  407d80:	stur	xzr, [x22, #36]
  407d84:	add	x20, x20, #0x1
  407d88:	sub	x19, x19, #0x1
  407d8c:	b	407e04 <wcrtomb@plt+0x4fd4>
  407d90:	bl	402d60 <towupper@plt>
  407d94:	mov	w1, w0
  407d98:	ands	w21, w21, #0xfffffff3
  407d9c:	str	w0, [sp, #4]
  407da0:	b.ne	407db4 <wcrtomb@plt+0x4f84>  // b.any
  407da4:	b	407e0c <wcrtomb@plt+0x4fdc>
  407da8:	bl	402d60 <towupper@plt>
  407dac:	mov	w1, w0
  407db0:	str	w0, [sp, #4]
  407db4:	ldr	w8, [x24, #2292]
  407db8:	cmp	w8, #0x1
  407dbc:	b.ne	407de0 <wcrtomb@plt+0x4fb0>  // b.any
  407dc0:	mov	w0, w1
  407dc4:	bl	4028a0 <wctob@plt>
  407dc8:	ldp	x8, x9, [x23]
  407dcc:	strb	w0, [x8, x9]
  407dd0:	ldr	x8, [x23, #8]
  407dd4:	add	x8, x8, #0x1
  407dd8:	str	x8, [x23, #8]
  407ddc:	b	407e04 <wcrtomb@plt+0x4fd4>
  407de0:	ldp	x8, x9, [x23]
  407de4:	add	x2, x23, #0x1c
  407de8:	add	x0, x8, x9
  407dec:	bl	402e30 <wcrtomb@plt>
  407df0:	ldr	x8, [x23, #8]
  407df4:	cmn	x0, #0x2
  407df8:	add	x8, x8, x0
  407dfc:	str	x8, [x23, #8]
  407e00:	b.cs	407e88 <wcrtomb@plt+0x5058>  // b.hs, b.nlast
  407e04:	cbnz	x19, 407cf0 <wcrtomb@plt+0x4ec0>
  407e08:	b	407e70 <wcrtomb@plt+0x5040>
  407e0c:	ldr	w8, [x24, #2292]
  407e10:	cmp	w8, #0x1
  407e14:	b.ne	407e38 <wcrtomb@plt+0x5008>  // b.any
  407e18:	mov	w0, w1
  407e1c:	bl	4028a0 <wctob@plt>
  407e20:	ldp	x8, x9, [x23]
  407e24:	strb	w0, [x8, x9]
  407e28:	ldr	x8, [x23, #8]
  407e2c:	add	x8, x8, #0x1
  407e30:	str	x8, [x23, #8]
  407e34:	b	407e5c <wcrtomb@plt+0x502c>
  407e38:	ldp	x8, x9, [x23]
  407e3c:	add	x2, x23, #0x1c
  407e40:	add	x0, x8, x9
  407e44:	bl	402e30 <wcrtomb@plt>
  407e48:	ldr	x8, [x23, #8]
  407e4c:	cmn	x0, #0x2
  407e50:	add	x8, x8, x0
  407e54:	str	x8, [x23, #8]
  407e58:	b.cs	407e88 <wcrtomb@plt+0x5058>  // b.hs, b.nlast
  407e5c:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407e60:	add	x0, x0, #0x708
  407e64:	mov	x1, x20
  407e68:	mov	x2, x19
  407e6c:	bl	4077a4 <wcrtomb@plt+0x4974>
  407e70:	ldp	x20, x19, [sp, #64]
  407e74:	ldp	x22, x21, [sp, #48]
  407e78:	ldp	x24, x23, [sp, #32]
  407e7c:	ldp	x29, x30, [sp, #16]
  407e80:	add	sp, sp, #0x50
  407e84:	ret
  407e88:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407e8c:	ldr	x19, [x8, #1280]
  407e90:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407e94:	add	x1, x1, #0x7d0
  407e98:	mov	w2, #0x5                   	// #5
  407e9c:	mov	x0, xzr
  407ea0:	bl	402d10 <dcgettext@plt>
  407ea4:	mov	x2, x0
  407ea8:	mov	w1, #0x1                   	// #1
  407eac:	mov	x0, x19
  407eb0:	bl	402ba0 <__fprintf_chk@plt>
  407eb4:	bl	402b10 <abort@plt>
  407eb8:	sub	sp, sp, #0x40
  407ebc:	stp	x29, x30, [sp, #16]
  407ec0:	add	x29, sp, #0x10
  407ec4:	stp	x22, x21, [sp, #32]
  407ec8:	mov	w21, w0
  407ecc:	sturb	w0, [x29, #-4]
  407ed0:	mov	x0, x1
  407ed4:	stp	x20, x19, [sp, #48]
  407ed8:	mov	x19, x1
  407edc:	bl	402b40 <mbsinit@plt>
  407ee0:	mov	w22, w0
  407ee4:	sub	x1, x29, #0x4
  407ee8:	mov	w2, #0x1                   	// #1
  407eec:	mov	x0, xzr
  407ef0:	mov	x3, x19
  407ef4:	mov	w20, #0x1                   	// #1
  407ef8:	bl	410f04 <wcrtomb@plt+0xe0d4>
  407efc:	mov	x2, x0
  407f00:	add	w8, w2, #0x2
  407f04:	cmp	w8, #0x3
  407f08:	b.hi	407f50 <wcrtomb@plt+0x5120>  // b.pmore
  407f0c:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407f10:	add	x9, x9, #0x800
  407f14:	adr	x10, 407f24 <wcrtomb@plt+0x50f4>
  407f18:	ldrb	w11, [x9, x8]
  407f1c:	add	x10, x10, x11, lsl #2
  407f20:	br	x10
  407f24:	mov	w20, wzr
  407f28:	str	xzr, [x19]
  407f2c:	b	407f38 <wcrtomb@plt+0x5108>
  407f30:	cmp	w22, #0x0
  407f34:	cset	w20, eq  // eq = none
  407f38:	mov	w0, w20
  407f3c:	ldp	x20, x19, [sp, #48]
  407f40:	ldp	x22, x21, [sp, #32]
  407f44:	ldp	x29, x30, [sp, #16]
  407f48:	add	sp, sp, #0x40
  407f4c:	ret
  407f50:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407f54:	add	x0, x0, #0x804
  407f58:	mov	w1, w21
  407f5c:	bl	408e74 <wcrtomb@plt+0x6044>
  407f60:	stp	x29, x30, [sp, #-16]!
  407f64:	mov	x29, sp
  407f68:	bl	40f080 <wcrtomb@plt+0xc250>
  407f6c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407f70:	add	x1, x1, #0x82b
  407f74:	bl	402bb0 <strcmp@plt>
  407f78:	cmp	w0, #0x0
  407f7c:	cset	w8, eq  // eq = none
  407f80:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407f84:	strb	w8, [x9, #2288]
  407f88:	bl	402c00 <__ctype_get_mb_cur_max@plt>
  407f8c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  407f90:	str	w0, [x8, #2292]
  407f94:	ldp	x29, x30, [sp], #16
  407f98:	ret
  407f9c:	stp	x29, x30, [sp, #-16]!
  407fa0:	mov	x1, x0
  407fa4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  407fa8:	add	x0, x0, #0x451
  407fac:	mov	x29, sp
  407fb0:	bl	408e74 <wcrtomb@plt+0x6044>
  407fb4:	stp	x29, x30, [sp, #-32]!
  407fb8:	str	x19, [sp, #16]
  407fbc:	mov	x19, x0
  407fc0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  407fc4:	add	x0, x0, #0x831
  407fc8:	mov	x29, sp
  407fcc:	bl	402dc0 <getenv@plt>
  407fd0:	cbz	x0, 407fe0 <wcrtomb@plt+0x51b0>
  407fd4:	ldr	x19, [sp, #16]
  407fd8:	ldp	x29, x30, [sp], #32
  407fdc:	ret
  407fe0:	mov	x0, x19
  407fe4:	bl	407f9c <wcrtomb@plt+0x516c>
  407fe8:	stp	x29, x30, [sp, #-64]!
  407fec:	str	x23, [sp, #16]
  407ff0:	stp	x22, x21, [sp, #32]
  407ff4:	stp	x20, x19, [sp, #48]
  407ff8:	mov	x29, sp
  407ffc:	mov	w19, w2
  408000:	mov	w23, w1
  408004:	mov	x22, x0
  408008:	bl	40999c <wcrtomb@plt+0x6b6c>
  40800c:	cbz	x0, 408064 <wcrtomb@plt+0x5234>
  408010:	mov	x21, x0
  408014:	add	x0, x0, #0x5f
  408018:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40801c:	mov	x20, x0
  408020:	str	w23, [x0, #64]
  408024:	add	x23, x0, #0x5a
  408028:	mov	x0, x22
  40802c:	bl	409994 <wcrtomb@plt+0x6b64>
  408030:	mov	x1, x0
  408034:	mov	x0, x23
  408038:	mov	x2, x21
  40803c:	bl	402710 <memcpy@plt>
  408040:	mov	w2, #0x2                   	// #2
  408044:	mov	x0, x23
  408048:	mov	x1, x21
  40804c:	bl	402ff4 <wcrtomb@plt+0x1c4>
  408050:	str	x0, [x20, #72]
  408054:	mov	x0, x20
  408058:	mov	w1, w19
  40805c:	bl	4080a0 <wcrtomb@plt+0x5270>
  408060:	b	408070 <wcrtomb@plt+0x5240>
  408064:	cmp	w23, #0x1
  408068:	b.ge	408088 <wcrtomb@plt+0x5258>  // b.tcont
  40806c:	mov	x20, xzr
  408070:	mov	x0, x20
  408074:	ldp	x20, x19, [sp, #48]
  408078:	ldp	x22, x21, [sp, #32]
  40807c:	ldr	x23, [sp, #16]
  408080:	ldp	x29, x30, [sp], #64
  408084:	ret
  408088:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40808c:	add	x1, x1, #0x8b9
  408090:	mov	w2, #0x5                   	// #5
  408094:	mov	x0, xzr
  408098:	bl	402d10 <dcgettext@plt>
  40809c:	bl	402f4c <wcrtomb@plt+0x11c>
  4080a0:	sub	sp, sp, #0x110
  4080a4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4080a8:	stp	x28, x23, [sp, #224]
  4080ac:	ldr	w10, [x8, #1880]
  4080b0:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4080b4:	ldr	w8, [x23, #2296]
  4080b8:	mov	w9, #0xb27c                	// #45692
  4080bc:	mov	w11, #0x246                 	// #582
  4080c0:	movk	w9, #0x7, lsl #16
  4080c4:	movk	w11, #0x105, lsl #16
  4080c8:	tst	w10, #0x1
  4080cc:	stp	x22, x21, [sp, #240]
  4080d0:	stp	x20, x19, [sp, #256]
  4080d4:	mov	w20, w1
  4080d8:	csel	w21, w9, w11, ne  // ne = any
  4080dc:	cmp	w8, #0x2
  4080e0:	mov	x19, x0
  4080e4:	stp	x29, x30, [sp, #208]
  4080e8:	add	x29, sp, #0xd0
  4080ec:	b.eq	408114 <wcrtomb@plt+0x52e4>  // b.none
  4080f0:	cmp	w8, #0x1
  4080f4:	b.eq	40810c <wcrtomb@plt+0x52dc>  // b.none
  4080f8:	cbnz	w8, 408128 <wcrtomb@plt+0x52f8>
  4080fc:	mov	w8, #0xb27e                	// #45694
  408100:	movk	w8, #0x105, lsl #16
  408104:	and	w21, w21, w8
  408108:	b	408128 <wcrtomb@plt+0x52f8>
  40810c:	orr	w21, w21, #0x20000
  408110:	b	408128 <wcrtomb@plt+0x52f8>
  408114:	orr	w8, w9, #0x80000
  408118:	mov	w9, #0x646                 	// #1606
  40811c:	tst	w10, #0x1
  408120:	movk	w9, #0x10f, lsl #16
  408124:	csel	w21, w8, w9, ne  // ne = any
  408128:	ldr	w22, [x19, #64]
  40812c:	tbnz	w22, #1, 408140 <wcrtomb@plt+0x5310>
  408130:	mov	w0, #0x100                 	// #256
  408134:	bl	4028f0 <malloc@plt>
  408138:	str	x0, [x19, #32]
  40813c:	b	408144 <wcrtomb@plt+0x5314>
  408140:	orr	w21, w21, #0x400000
  408144:	cmp	w20, #0x0
  408148:	cset	w8, eq  // eq = none
  40814c:	bfi	w21, w8, #25, #1
  408150:	and	w8, w21, #0xffffffbf
  408154:	orr	w8, w8, #0x100
  408158:	tst	w22, #0x4
  40815c:	csel	w22, w21, w8, eq  // eq = none
  408160:	mov	x0, x22
  408164:	bl	411e20 <_obstack_memory_used@@Base+0xb94>
  408168:	ldr	x1, [x19, #72]
  40816c:	add	x21, x19, #0x5a
  408170:	mov	x0, x21
  408174:	mov	x2, x19
  408178:	bl	411300 <_obstack_memory_used@@Base+0x74>
  40817c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408180:	ldrb	w8, [x8, #1128]
  408184:	cmp	w8, #0xa
  408188:	b.ne	40819c <wcrtomb@plt+0x536c>  // b.any
  40818c:	ldrb	w9, [x19, #64]
  408190:	lsl	w9, w9, #5
  408194:	and	w9, w9, #0xffffff80
  408198:	b	4081a0 <wcrtomb@plt+0x5370>
  40819c:	mov	w9, wzr
  4081a0:	ldrb	w10, [x19, #56]
  4081a4:	str	xzr, [x19, #40]
  4081a8:	and	w10, w10, #0x7f
  4081ac:	orr	w9, w10, w9
  4081b0:	strb	w9, [x19, #56]
  4081b4:	cbnz	x0, 408258 <wcrtomb@plt+0x5428>
  4081b8:	cbz	w20, 4081d4 <wcrtomb@plt+0x53a4>
  4081bc:	ldr	x9, [x19, #48]
  4081c0:	sub	w20, w20, #0x1
  4081c4:	cmp	x9, w20, sxtw
  4081c8:	b.cs	4081d4 <wcrtomb@plt+0x53a4>  // b.hs, b.nlast
  4081cc:	ldr	w9, [x23, #2296]
  4081d0:	cbz	w9, 40825c <wcrtomb@plt+0x542c>
  4081d4:	cmp	w8, #0xa
  4081d8:	cset	w8, ne  // ne = any
  4081dc:	lsl	w20, w8, #1
  4081e0:	bl	40c294 <wcrtomb@plt+0x9464>
  4081e4:	adrp	x1, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4081e8:	add	x1, x1, #0x8fc
  4081ec:	mov	x2, x22
  4081f0:	mov	w3, w20
  4081f4:	str	x0, [x19, #80]
  4081f8:	bl	40c29c <wcrtomb@plt+0x946c>
  4081fc:	ldp	x1, x2, [x19, #72]
  408200:	mov	w3, #0x1                   	// #1
  408204:	mov	x0, x21
  408208:	bl	40a590 <wcrtomb@plt+0x7760>
  40820c:	ldr	x8, [x19, #72]
  408210:	cmp	x8, #0x1
  408214:	b.ne	408240 <wcrtomb@plt+0x5410>  // b.any
  408218:	ldrb	w8, [x21]
  40821c:	cmp	w8, #0x24
  408220:	b.eq	408238 <wcrtomb@plt+0x5408>  // b.none
  408224:	cmp	w8, #0x5e
  408228:	b.ne	408240 <wcrtomb@plt+0x5410>  // b.any
  40822c:	mov	w8, #0x1                   	// #1
  408230:	strb	w8, [x19, #88]
  408234:	b	408240 <wcrtomb@plt+0x5410>
  408238:	mov	w8, #0x1                   	// #1
  40823c:	strb	w8, [x19, #89]
  408240:	ldp	x20, x19, [sp, #256]
  408244:	ldp	x22, x21, [sp, #240]
  408248:	ldp	x28, x23, [sp, #224]
  40824c:	ldp	x29, x30, [sp, #208]
  408250:	add	sp, sp, #0x110
  408254:	ret
  408258:	bl	402f4c <wcrtomb@plt+0x11c>
  40825c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408260:	add	x1, x1, #0x86f
  408264:	mov	w2, #0x5                   	// #5
  408268:	mov	x0, xzr
  40826c:	bl	402d10 <dcgettext@plt>
  408270:	mov	x3, x0
  408274:	add	x0, sp, #0x8
  408278:	mov	w1, #0x1                   	// #1
  40827c:	mov	w2, #0xc8                  	// #200
  408280:	mov	w4, w20
  408284:	bl	402770 <__sprintf_chk@plt>
  408288:	add	x0, sp, #0x8
  40828c:	bl	402f4c <wcrtomb@plt+0x11c>
  408290:	sub	sp, sp, #0x70
  408294:	stp	x24, x23, [sp, #64]
  408298:	stp	x22, x21, [sp, #80]
  40829c:	stp	x20, x19, [sp, #96]
  4082a0:	mov	w20, w5
  4082a4:	mov	x19, x4
  4082a8:	mov	x22, x3
  4082ac:	mov	x24, x2
  4082b0:	mov	x21, x1
  4082b4:	stp	x29, x30, [sp, #16]
  4082b8:	stp	x28, x27, [sp, #32]
  4082bc:	stp	x26, x25, [sp, #48]
  4082c0:	add	x29, sp, #0x10
  4082c4:	cbz	x0, 4082d8 <wcrtomb@plt+0x54a8>
  4082c8:	mov	x23, x0
  4082cc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4082d0:	str	x0, [x8, #1872]
  4082d4:	b	4082e4 <wcrtomb@plt+0x54b4>
  4082d8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4082dc:	ldr	x23, [x8, #1872]
  4082e0:	cbz	x23, 408624 <wcrtomb@plt+0x57f4>
  4082e4:	mov	w8, #0x7fffffff            	// #2147483647
  4082e8:	cmp	x24, x8
  4082ec:	b.cs	40860c <wcrtomb@plt+0x57dc>  // b.hs, b.nlast
  4082f0:	ldrb	w8, [x23, #56]
  4082f4:	cbz	w20, 40832c <wcrtomb@plt+0x54fc>
  4082f8:	tbz	w8, #4, 40832c <wcrtomb@plt+0x54fc>
  4082fc:	ldr	x0, [x23, #80]
  408300:	cbz	x0, 408314 <wcrtomb@plt+0x54e4>
  408304:	bl	40b4a0 <wcrtomb@plt+0x8670>
  408308:	ldr	x0, [x23, #80]
  40830c:	bl	402be0 <free@plt>
  408310:	str	xzr, [x23, #80]
  408314:	mov	x0, x23
  408318:	bl	4123ac <_obstack_memory_used@@Base+0x1120>
  40831c:	mov	x0, x23
  408320:	mov	w1, w20
  408324:	bl	4080a0 <wcrtomb@plt+0x5270>
  408328:	ldrb	w8, [x23, #56]
  40832c:	ldrb	w10, [x23, #88]
  408330:	ldrb	w9, [x23, #89]
  408334:	and	w8, w8, #0xfffffffb
  408338:	orr	w8, w8, #0x2
  40833c:	strb	w8, [x23, #56]
  408340:	cbz	w10, 40835c <wcrtomb@plt+0x552c>
  408344:	cbnz	w9, 408360 <wcrtomb@plt+0x5530>
  408348:	cbz	x22, 408390 <wcrtomb@plt+0x5560>
  40834c:	ldrb	w8, [x23, #64]
  408350:	tbnz	w8, #2, 408470 <wcrtomb@plt+0x5640>
  408354:	mov	w0, wzr
  408358:	b	408408 <wcrtomb@plt+0x55d8>
  40835c:	cbz	w9, 408428 <wcrtomb@plt+0x55f8>
  408360:	ldrb	w8, [x23, #64]
  408364:	tbnz	w8, #2, 408370 <wcrtomb@plt+0x5540>
  408368:	mov	x0, xzr
  40836c:	b	408384 <wcrtomb@plt+0x5554>
  408370:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408374:	ldrb	w1, [x8, #1128]
  408378:	add	x0, x21, x22
  40837c:	sub	x2, x24, x22
  408380:	bl	402cb0 <memchr@plt>
  408384:	sub	x8, x0, x21
  408388:	cmp	x0, #0x0
  40838c:	csel	x22, x24, x8, eq  // eq = none
  408390:	cbz	w20, 408404 <wcrtomb@plt+0x55d4>
  408394:	ldr	x8, [x19, #8]
  408398:	cbz	x8, 4083a4 <wcrtomb@plt+0x5574>
  40839c:	ldr	x0, [x19, #16]
  4083a0:	b	4083d0 <wcrtomb@plt+0x55a0>
  4083a4:	mov	w0, #0x1                   	// #1
  4083a8:	mov	w1, #0x8                   	// #8
  4083ac:	mov	w20, #0x1                   	// #1
  4083b0:	bl	410e08 <wcrtomb@plt+0xdfd8>
  4083b4:	str	x0, [x19, #8]
  4083b8:	mov	w0, #0x1                   	// #1
  4083bc:	mov	w1, #0x8                   	// #8
  4083c0:	bl	410e08 <wcrtomb@plt+0xdfd8>
  4083c4:	ldr	x8, [x19, #8]
  4083c8:	str	x0, [x19, #16]
  4083cc:	str	x20, [x19]
  4083d0:	str	x22, [x8]
  4083d4:	str	x22, [x0]
  4083d8:	ldr	x9, [x19]
  4083dc:	cmp	x9, #0x2
  4083e0:	b.cc	408404 <wcrtomb@plt+0x55d4>  // b.lo, b.ul, b.last
  4083e4:	mov	w9, #0x1                   	// #1
  4083e8:	mov	x10, #0xffffffffffffffff    	// #-1
  4083ec:	str	x10, [x0, x9, lsl #3]
  4083f0:	str	x10, [x8, x9, lsl #3]
  4083f4:	ldr	x11, [x19]
  4083f8:	add	x9, x9, #0x1
  4083fc:	cmp	x9, x11
  408400:	b.cc	4083ec <wcrtomb@plt+0x55bc>  // b.lo, b.ul, b.last
  408404:	mov	w0, #0x1                   	// #1
  408408:	ldp	x20, x19, [sp, #96]
  40840c:	ldp	x22, x21, [sp, #80]
  408410:	ldp	x24, x23, [sp, #64]
  408414:	ldp	x26, x25, [sp, #48]
  408418:	ldp	x28, x27, [sp, #32]
  40841c:	ldp	x29, x30, [sp, #16]
  408420:	add	sp, sp, #0x70
  408424:	ret
  408428:	cbz	x22, 4084a4 <wcrtomb@plt+0x5674>
  40842c:	ldrb	w8, [x23, #64]
  408430:	tbz	w8, #2, 408444 <wcrtomb@plt+0x5614>
  408434:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408438:	ldrb	w26, [x8, #1128]
  40843c:	cmp	w26, #0xa
  408440:	b.ne	4084f8 <wcrtomb@plt+0x56c8>  // b.any
  408444:	cmp	w20, #0x0
  408448:	sub	x4, x24, x22
  40844c:	csel	x5, x19, xzr, ne  // ne = any
  408450:	mov	x0, x23
  408454:	mov	x1, x21
  408458:	mov	x2, x24
  40845c:	mov	x3, x22
  408460:	bl	4141c0 <_obstack_memory_used@@Base+0x2f34>
  408464:	mvn	w8, w0
  408468:	lsr	w0, w8, #31
  40846c:	b	408408 <wcrtomb@plt+0x55d8>
  408470:	add	x8, x22, x21
  408474:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408478:	ldurb	w8, [x8, #-1]
  40847c:	ldrb	w1, [x9, #1128]
  408480:	cmp	w8, w1
  408484:	b.eq	408390 <wcrtomb@plt+0x5560>  // b.none
  408488:	add	x0, x21, x22
  40848c:	sub	x2, x24, x22
  408490:	bl	402cb0 <memchr@plt>
  408494:	cbz	x0, 408408 <wcrtomb@plt+0x55d8>
  408498:	sub	x8, x0, x21
  40849c:	add	x22, x8, #0x1
  4084a0:	b	408390 <wcrtomb@plt+0x5560>
  4084a4:	ldr	x0, [x23, #80]
  4084a8:	bl	40a580 <wcrtomb@plt+0x7750>
  4084ac:	mov	x25, x0
  4084b0:	cbz	x0, 4084d4 <wcrtomb@plt+0x56a4>
  4084b4:	add	x2, x21, x24
  4084b8:	mov	w3, #0x1                   	// #1
  4084bc:	mov	x0, x25
  4084c0:	mov	x1, x21
  4084c4:	mov	x4, xzr
  4084c8:	mov	x5, xzr
  4084cc:	bl	40a574 <wcrtomb@plt+0x7744>
  4084d0:	cbz	x0, 408408 <wcrtomb@plt+0x55d8>
  4084d4:	cbnz	w20, 4084e0 <wcrtomb@plt+0x56b0>
  4084d8:	ldrb	w8, [x23, #64]
  4084dc:	tbnz	w8, #2, 4085cc <wcrtomb@plt+0x579c>
  4084e0:	cbnz	x25, 40842c <wcrtomb@plt+0x55fc>
  4084e4:	ldr	x25, [x23, #80]
  4084e8:	mov	x0, x25
  4084ec:	bl	40a588 <wcrtomb@plt+0x7758>
  4084f0:	tbz	w0, #0, 40842c <wcrtomb@plt+0x55fc>
  4084f4:	b	4085d0 <wcrtomb@plt+0x57a0>
  4084f8:	mov	x25, x21
  4084fc:	cbz	x22, 408518 <wcrtomb@plt+0x56e8>
  408500:	mov	x0, x21
  408504:	mov	w1, w26
  408508:	mov	x2, x22
  40850c:	bl	402c40 <memrchr@plt>
  408510:	cmp	x0, #0x0
  408514:	csinc	x25, x21, x0, eq  // eq = none
  408518:	cmp	w20, #0x0
  40851c:	add	x28, x21, x22
  408520:	add	x24, x21, x24
  408524:	csel	x22, x19, xzr, ne  // ne = any
  408528:	and	w1, w26, #0xff
  40852c:	sub	x2, x24, x25
  408530:	mov	x0, x25
  408534:	bl	402cb0 <memchr@plt>
  408538:	cmp	x0, #0x0
  40853c:	csel	x27, x24, x0, eq  // eq = none
  408540:	sub	x3, x28, x25
  408544:	sub	x2, x27, x25
  408548:	sub	x4, x27, x28
  40854c:	mov	x0, x23
  408550:	mov	x1, x25
  408554:	mov	x5, x22
  408558:	bl	4141c0 <_obstack_memory_used@@Base+0x2f34>
  40855c:	tbz	w0, #31, 40857c <wcrtomb@plt+0x574c>
  408560:	cmp	x27, x24
  408564:	b.eq	408464 <wcrtomb@plt+0x5634>  // b.none
  408568:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40856c:	ldrb	w26, [x8, #1128]
  408570:	add	x25, x27, #0x1
  408574:	mov	x28, x25
  408578:	b	408528 <wcrtomb@plt+0x56f8>
  40857c:	sub	x8, x25, x21
  408580:	add	w0, w0, w8
  408584:	cbz	w20, 408464 <wcrtomb@plt+0x5634>
  408588:	ldr	x9, [x19]
  40858c:	cbz	x9, 408464 <wcrtomb@plt+0x5634>
  408590:	ldp	x9, x10, [x19, #8]
  408594:	mov	x11, xzr
  408598:	ldr	x12, [x9, x11, lsl #3]
  40859c:	tbnz	x12, #63, 4085a8 <wcrtomb@plt+0x5778>
  4085a0:	add	x12, x12, x8
  4085a4:	str	x12, [x9, x11, lsl #3]
  4085a8:	ldr	x12, [x10, x11, lsl #3]
  4085ac:	tbnz	x12, #63, 4085b8 <wcrtomb@plt+0x5788>
  4085b0:	add	x12, x12, x8
  4085b4:	str	x12, [x10, x11, lsl #3]
  4085b8:	ldr	x12, [x19]
  4085bc:	add	x11, x11, #0x1
  4085c0:	cmp	x11, x12
  4085c4:	b.cc	408598 <wcrtomb@plt+0x5768>  // b.lo, b.ul, b.last
  4085c8:	b	408464 <wcrtomb@plt+0x5634>
  4085cc:	ldr	x25, [x23, #80]
  4085d0:	add	x2, x21, x24
  4085d4:	sub	x5, x29, #0x4
  4085d8:	mov	w3, #0x1                   	// #1
  4085dc:	mov	x0, x25
  4085e0:	mov	x1, x21
  4085e4:	mov	x4, xzr
  4085e8:	sturb	wzr, [x29, #-4]
  4085ec:	bl	40a574 <wcrtomb@plt+0x7744>
  4085f0:	cbz	x0, 408408 <wcrtomb@plt+0x55d8>
  4085f4:	cbnz	w20, 40842c <wcrtomb@plt+0x55fc>
  4085f8:	ldrb	w8, [x23, #64]
  4085fc:	tbz	w8, #2, 40842c <wcrtomb@plt+0x55fc>
  408600:	ldurb	w8, [x29, #-4]
  408604:	cbz	w8, 408404 <wcrtomb@plt+0x55d4>
  408608:	b	40842c <wcrtomb@plt+0x55fc>
  40860c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408610:	add	x1, x1, #0x841
  408614:	mov	w2, #0x5                   	// #5
  408618:	mov	x0, xzr
  40861c:	bl	402d10 <dcgettext@plt>
  408620:	bl	408e74 <wcrtomb@plt+0x6044>
  408624:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408628:	add	x1, x1, #0x89a
  40862c:	mov	w2, #0x5                   	// #5
  408630:	mov	x0, xzr
  408634:	bl	402d10 <dcgettext@plt>
  408638:	bl	402f4c <wcrtomb@plt+0x11c>
  40863c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408640:	str	x0, [x8, #1920]
  408644:	ret
  408648:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40864c:	str	xzr, [x8, #1920]
  408650:	ret
  408654:	sub	sp, sp, #0x80
  408658:	stp	x20, x19, [sp, #112]
  40865c:	mov	w20, w0
  408660:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408664:	add	x0, x0, #0xc0d
  408668:	stp	x29, x30, [sp, #32]
  40866c:	stp	x28, x27, [sp, #48]
  408670:	stp	x26, x25, [sp, #64]
  408674:	stp	x24, x23, [sp, #80]
  408678:	stp	x22, x21, [sp, #96]
  40867c:	add	x29, sp, #0x20
  408680:	mov	x19, x1
  408684:	bl	402dc0 <getenv@plt>
  408688:	ldr	x8, [x19]
  40868c:	mov	x21, x0
  408690:	mov	x0, x8
  408694:	bl	40f0bc <wcrtomb@plt+0xc28c>
  408698:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40869c:	add	x1, x1, #0xdb3
  4086a0:	mov	w0, #0x6                   	// #6
  4086a4:	bl	402e10 <setlocale@plt>
  4086a8:	bl	407f60 <wcrtomb@plt+0x5130>
  4086ac:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4086b0:	add	x0, x0, #0x8fc
  4086b4:	bl	40ee9c <wcrtomb@plt+0xc06c>
  4086b8:	adrp	x0, 408000 <wcrtomb@plt+0x51d0>
  4086bc:	add	x0, x0, #0xae8
  4086c0:	bl	41cf00 <_obstack_memory_used@@Base+0xbc74>
  4086c4:	adrp	x22, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4086c8:	add	x22, x22, #0xc41
  4086cc:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4086d0:	add	x1, x1, #0xc12
  4086d4:	mov	x0, x22
  4086d8:	bl	402970 <bindtextdomain@plt>
  4086dc:	mov	x0, x22
  4086e0:	bl	402b80 <textdomain@plt>
  4086e4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4086e8:	add	x0, x0, #0x831
  4086ec:	bl	402dc0 <getenv@plt>
  4086f0:	cmp	x0, #0x0
  4086f4:	adrp	x25, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4086f8:	cset	w8, ne  // ne = any
  4086fc:	str	w8, [x25, #2296]
  408700:	cbz	x21, 408724 <wcrtomb@plt+0x58f4>
  408704:	mov	x0, x21
  408708:	bl	402890 <atoi@plt>
  40870c:	cmp	w0, #0x2
  408710:	b.cc	408724 <wcrtomb@plt+0x58f4>  // b.lo, b.ul, b.last
  408714:	sxtw	x8, w0
  408718:	sub	x8, x8, #0x1
  40871c:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408720:	str	x8, [x9, #1152]
  408724:	adrp	x21, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408728:	adrp	x22, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40872c:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408730:	add	x21, x21, #0xc24
  408734:	add	x22, x22, #0x908
  408738:	mov	w28, #0x1                   	// #1
  40873c:	add	x24, x24, #0x8e8
  408740:	adrp	x26, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408744:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408748:	mov	w0, w20
  40874c:	mov	x1, x19
  408750:	mov	x2, x21
  408754:	mov	x3, x22
  408758:	mov	x4, xzr
  40875c:	bl	402b90 <getopt_long@plt>
  408760:	cmp	w0, #0x61
  408764:	b.le	4087a4 <wcrtomb@plt+0x5974>
  408768:	sub	w8, w0, #0x62
  40876c:	cmp	w8, #0x18
  408770:	b.hi	4087c0 <wcrtomb@plt+0x5990>  // b.pmore
  408774:	adr	x9, 408784 <wcrtomb@plt+0x5954>
  408778:	ldrb	w10, [x24, x8]
  40877c:	add	x9, x9, x10, lsl #2
  408780:	br	x9
  408784:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408788:	add	x8, x8, #0xc37
  40878c:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408790:	str	x8, [x26, #1136]
  408794:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408798:	add	x9, x9, #0xc3a
  40879c:	str	x9, [x8, #1144]
  4087a0:	b	408748 <wcrtomb@plt+0x5918>
  4087a4:	cmn	w0, #0x1
  4087a8:	b.eq	408944 <wcrtomb@plt+0x5b14>  // b.none
  4087ac:	cmp	w0, #0x45
  4087b0:	b.ne	4087ec <wcrtomb@plt+0x59bc>  // b.any
  4087b4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4087b8:	str	w28, [x8, #1880]
  4087bc:	b	408748 <wcrtomb@plt+0x5918>
  4087c0:	cmp	w0, #0x100
  4087c4:	b.ne	408870 <wcrtomb@plt+0x5a40>  // b.any
  4087c8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4087cc:	strb	w28, [x8, #1900]
  4087d0:	b	408748 <wcrtomb@plt+0x5918>
  4087d4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4087d8:	strb	w28, [x8, #1884]
  4087dc:	b	408748 <wcrtomb@plt+0x5918>
  4087e0:	mov	w8, #0x2                   	// #2
  4087e4:	str	w8, [x25, #2296]
  4087e8:	b	408748 <wcrtomb@plt+0x5918>
  4087ec:	cmp	w0, #0x46
  4087f0:	b.ne	4089e8 <wcrtomb@plt+0x5bb8>  // b.any
  4087f4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4087f8:	strb	w28, [x8, #1896]
  4087fc:	b	408748 <wcrtomb@plt+0x5918>
  408800:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408804:	ldr	x0, [x8, #1288]
  408808:	bl	402890 <atoi@plt>
  40880c:	sxtw	x8, w0
  408810:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408814:	str	x8, [x9, #1152]
  408818:	b	408748 <wcrtomb@plt+0x5918>
  40881c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408820:	strb	w28, [x8, #1888]
  408824:	b	408748 <wcrtomb@plt+0x5918>
  408828:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40882c:	strb	wzr, [x8, #1128]
  408830:	b	408748 <wcrtomb@plt+0x5918>
  408834:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408838:	mov	x27, x24
  40883c:	ldr	x24, [x8, #1288]
  408840:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408844:	strb	w28, [x8, #1892]
  408848:	cbz	x24, 4088f4 <wcrtomb@plt+0x5ac4>
  40884c:	mov	w1, #0x2a                  	// #42
  408850:	mov	x0, x24
  408854:	bl	402c20 <strchr@plt>
  408858:	cbz	x0, 408910 <wcrtomb@plt+0x5ae0>
  40885c:	mov	x0, x24
  408860:	b	4088fc <wcrtomb@plt+0x5acc>
  408864:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408868:	strb	w28, [x8, #1892]
  40886c:	b	408748 <wcrtomb@plt+0x5918>
  408870:	cmp	w0, #0x101
  408874:	b.ne	4089e8 <wcrtomb@plt+0x5bb8>  // b.any
  408878:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40887c:	strb	w28, [x8, #1904]
  408880:	b	408748 <wcrtomb@plt+0x5918>
  408884:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408888:	mov	x27, x25
  40888c:	ldr	x25, [x8, #1288]
  408890:	mov	x28, x26
  408894:	mov	x26, x22
  408898:	mov	x22, x21
  40889c:	mov	x21, x24
  4088a0:	ldr	x24, [x23, #1928]
  4088a4:	mov	x0, x25
  4088a8:	bl	402750 <strlen@plt>
  4088ac:	mov	x2, x0
  4088b0:	mov	x0, x24
  4088b4:	mov	x1, x25
  4088b8:	mov	x24, x21
  4088bc:	mov	x21, x22
  4088c0:	mov	x22, x26
  4088c4:	mov	x26, x28
  4088c8:	mov	x25, x27
  4088cc:	mov	w28, #0x1                   	// #1
  4088d0:	bl	4033f0 <wcrtomb@plt+0x5c0>
  4088d4:	str	x0, [x23, #1928]
  4088d8:	b	408748 <wcrtomb@plt+0x5918>
  4088dc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4088e0:	ldr	x0, [x23, #1928]
  4088e4:	ldr	x1, [x8, #1288]
  4088e8:	bl	40430c <wcrtomb@plt+0x14dc>
  4088ec:	str	x0, [x23, #1928]
  4088f0:	b	408748 <wcrtomb@plt+0x5918>
  4088f4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4088f8:	add	x0, x0, #0x7fe
  4088fc:	bl	410e78 <wcrtomb@plt+0xe048>
  408900:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408904:	str	x0, [x8, #1912]
  408908:	mov	x24, x27
  40890c:	b	408748 <wcrtomb@plt+0x5918>
  408910:	mov	x0, x24
  408914:	bl	402750 <strlen@plt>
  408918:	add	x0, x0, #0x2
  40891c:	bl	410e00 <wcrtomb@plt+0xdfd0>
  408920:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408924:	ldr	x1, [x8, #1288]
  408928:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40892c:	str	x0, [x8, #1912]
  408930:	mov	w8, #0x2a                  	// #42
  408934:	strb	w8, [x0], #1
  408938:	bl	402c80 <strcpy@plt>
  40893c:	mov	x24, x27
  408940:	b	408748 <wcrtomb@plt+0x5918>
  408944:	ldr	x0, [x23, #1928]
  408948:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40894c:	cbnz	x0, 408984 <wcrtomb@plt+0x5b54>
  408950:	ldrsw	x8, [x21, #1296]
  408954:	cmp	w8, w20
  408958:	b.ge	4089e8 <wcrtomb@plt+0x5bb8>  // b.tcont
  40895c:	add	w9, w8, #0x1
  408960:	str	w9, [x21, #1296]
  408964:	ldr	x20, [x19, x8, lsl #3]
  408968:	mov	x0, x20
  40896c:	bl	402750 <strlen@plt>
  408970:	mov	x2, x0
  408974:	mov	x0, xzr
  408978:	mov	x1, x20
  40897c:	bl	4033f0 <wcrtomb@plt+0x5c0>
  408980:	str	x0, [x23, #1928]
  408984:	bl	4043c0 <wcrtomb@plt+0x1590>
  408988:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40898c:	ldrb	w8, [x8, #1904]
  408990:	cbz	w8, 40899c <wcrtomb@plt+0x5b6c>
  408994:	ldr	x0, [x23, #1928]
  408998:	bl	40592c <wcrtomb@plt+0x2afc>
  40899c:	ldrsw	x8, [x21, #1296]
  4089a0:	ldr	x0, [x23, #1928]
  4089a4:	add	x1, x19, x8, lsl #3
  4089a8:	bl	405aa0 <wcrtomb@plt+0x2c70>
  4089ac:	ldr	x8, [x23, #1928]
  4089b0:	mov	w19, w0
  4089b4:	mov	x0, x8
  4089b8:	bl	404568 <wcrtomb@plt+0x1738>
  4089bc:	mov	x0, xzr
  4089c0:	bl	409534 <wcrtomb@plt+0x6704>
  4089c4:	mov	w0, w19
  4089c8:	ldp	x20, x19, [sp, #112]
  4089cc:	ldp	x22, x21, [sp, #96]
  4089d0:	ldp	x24, x23, [sp, #80]
  4089d4:	ldp	x26, x25, [sp, #64]
  4089d8:	ldp	x28, x27, [sp, #48]
  4089dc:	ldp	x29, x30, [sp, #32]
  4089e0:	add	sp, sp, #0x80
  4089e4:	ret
  4089e8:	mov	w0, #0x1                   	// #1
  4089ec:	bl	408bc4 <wcrtomb@plt+0x5d94>
  4089f0:	mov	w0, wzr
  4089f4:	bl	408bc4 <wcrtomb@plt+0x5d94>
  4089f8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4089fc:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408a00:	adrp	x10, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408a04:	ldr	x19, [x8, #1304]
  408a08:	ldr	x20, [x9, #1968]
  408a0c:	ldr	x21, [x10, #1160]
  408a10:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a14:	add	x1, x1, #0xc45
  408a18:	mov	w2, #0x5                   	// #5
  408a1c:	mov	x0, xzr
  408a20:	bl	402d10 <dcgettext@plt>
  408a24:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a28:	mov	x22, x0
  408a2c:	add	x1, x1, #0xc52
  408a30:	mov	w2, #0x5                   	// #5
  408a34:	mov	x0, xzr
  408a38:	bl	402d10 <dcgettext@plt>
  408a3c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a40:	mov	x23, x0
  408a44:	add	x1, x1, #0xc5b
  408a48:	mov	w2, #0x5                   	// #5
  408a4c:	mov	x0, xzr
  408a50:	bl	402d10 <dcgettext@plt>
  408a54:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a58:	mov	x24, x0
  408a5c:	add	x1, x1, #0xc67
  408a60:	mov	w2, #0x5                   	// #5
  408a64:	mov	x0, xzr
  408a68:	bl	402d10 <dcgettext@plt>
  408a6c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a70:	mov	x25, x0
  408a74:	add	x1, x1, #0xc75
  408a78:	mov	w2, #0x5                   	// #5
  408a7c:	mov	x0, xzr
  408a80:	bl	402d10 <dcgettext@plt>
  408a84:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408a88:	mov	x26, x0
  408a8c:	add	x1, x1, #0xc82
  408a90:	mov	w2, #0x5                   	// #5
  408a94:	mov	x0, xzr
  408a98:	bl	402d10 <dcgettext@plt>
  408a9c:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408aa0:	stp	x0, xzr, [sp, #8]
  408aa4:	add	x2, x2, #0xc3d
  408aa8:	mov	x0, x19
  408aac:	mov	x1, x20
  408ab0:	mov	x3, x21
  408ab4:	mov	x4, x22
  408ab8:	mov	x5, x23
  408abc:	mov	x6, x24
  408ac0:	mov	x7, x25
  408ac4:	str	x26, [sp]
  408ac8:	bl	410b88 <wcrtomb@plt+0xdd58>
  408acc:	bl	408afc <wcrtomb@plt+0x5ccc>
  408ad0:	mov	w0, wzr
  408ad4:	bl	408b30 <wcrtomb@plt+0x5d00>
  408ad8:	mov	x0, xzr
  408adc:	bl	409534 <wcrtomb@plt+0x6704>
  408ae0:	mov	w0, wzr
  408ae4:	bl	402790 <exit@plt>
  408ae8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408aec:	ldr	x0, [x8, #1920]
  408af0:	cbz	x0, 408af8 <wcrtomb@plt+0x5cc8>
  408af4:	b	402dd0 <unlink@plt>
  408af8:	ret
  408afc:	stp	x29, x30, [sp, #-16]!
  408b00:	mov	w0, #0xa                   	// #10
  408b04:	mov	x29, sp
  408b08:	bl	402a00 <putchar_unlocked@plt>
  408b0c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408b10:	add	x1, x1, #0xc8f
  408b14:	mov	w2, #0x5                   	// #5
  408b18:	mov	x0, xzr
  408b1c:	bl	402d10 <dcgettext@plt>
  408b20:	bl	402b60 <puts@plt>
  408b24:	mov	w0, #0xa                   	// #10
  408b28:	ldp	x29, x30, [sp], #16
  408b2c:	b	402a00 <putchar_unlocked@plt>
  408b30:	stp	x29, x30, [sp, #-32]!
  408b34:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408b38:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408b3c:	add	x8, x8, #0x500
  408b40:	add	x9, x9, #0x518
  408b44:	cmp	w0, #0x0
  408b48:	stp	x20, x19, [sp, #16]
  408b4c:	csel	x8, x8, x9, ne  // ne = any
  408b50:	ldr	x19, [x8]
  408b54:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408b58:	mov	w20, w0
  408b5c:	add	x1, x1, #0xcc3
  408b60:	mov	w2, #0x5                   	// #5
  408b64:	mov	x0, xzr
  408b68:	mov	x29, sp
  408b6c:	bl	402d10 <dcgettext@plt>
  408b70:	mov	x2, x0
  408b74:	mov	w1, #0x1                   	// #1
  408b78:	mov	x0, x19
  408b7c:	bl	402ba0 <__fprintf_chk@plt>
  408b80:	cbz	w20, 408b90 <wcrtomb@plt+0x5d60>
  408b84:	ldp	x20, x19, [sp, #16]
  408b88:	ldp	x29, x30, [sp], #32
  408b8c:	ret
  408b90:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408b94:	add	x1, x1, #0xd3d
  408b98:	mov	w2, #0x5                   	// #5
  408b9c:	mov	x0, xzr
  408ba0:	bl	402d10 <dcgettext@plt>
  408ba4:	mov	x2, x0
  408ba8:	mov	x0, x19
  408bac:	ldp	x20, x19, [sp, #16]
  408bb0:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408bb4:	add	x3, x3, #0xd5b
  408bb8:	mov	w1, #0x1                   	// #1
  408bbc:	ldp	x29, x30, [sp], #32
  408bc0:	b	402ba0 <__fprintf_chk@plt>
  408bc4:	stp	x29, x30, [sp, #-32]!
  408bc8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408bcc:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408bd0:	add	x8, x8, #0x500
  408bd4:	add	x9, x9, #0x518
  408bd8:	cmp	w0, #0x0
  408bdc:	stp	x20, x19, [sp, #16]
  408be0:	csel	x8, x9, x8, eq  // eq = none
  408be4:	ldr	x20, [x8]
  408be8:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408bec:	mov	w19, w0
  408bf0:	add	x1, x1, #0xd6b
  408bf4:	mov	w2, #0x5                   	// #5
  408bf8:	mov	x0, xzr
  408bfc:	mov	x29, sp
  408c00:	bl	402d10 <dcgettext@plt>
  408c04:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408c08:	ldr	x3, [x8, #1968]
  408c0c:	mov	x2, x0
  408c10:	mov	w1, #0x1                   	// #1
  408c14:	mov	x0, x20
  408c18:	bl	402ba0 <__fprintf_chk@plt>
  408c1c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408c20:	add	x1, x1, #0xdb4
  408c24:	mov	w2, #0x5                   	// #5
  408c28:	mov	x0, xzr
  408c2c:	bl	402d10 <dcgettext@plt>
  408c30:	mov	x2, x0
  408c34:	mov	w1, #0x1                   	// #1
  408c38:	mov	x0, x20
  408c3c:	bl	402ba0 <__fprintf_chk@plt>
  408c40:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408c44:	add	x1, x1, #0xe0b
  408c48:	mov	w2, #0x5                   	// #5
  408c4c:	mov	x0, xzr
  408c50:	bl	402d10 <dcgettext@plt>
  408c54:	mov	x2, x0
  408c58:	mov	w1, #0x1                   	// #1
  408c5c:	mov	x0, x20
  408c60:	bl	402ba0 <__fprintf_chk@plt>
  408c64:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408c68:	add	x1, x1, #0xe46
  408c6c:	mov	w2, #0x5                   	// #5
  408c70:	mov	x0, xzr
  408c74:	bl	402d10 <dcgettext@plt>
  408c78:	mov	x2, x0
  408c7c:	mov	w1, #0x1                   	// #1
  408c80:	mov	x0, x20
  408c84:	bl	402ba0 <__fprintf_chk@plt>
  408c88:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408c8c:	add	x1, x1, #0xea7
  408c90:	mov	w2, #0x5                   	// #5
  408c94:	mov	x0, xzr
  408c98:	bl	402d10 <dcgettext@plt>
  408c9c:	mov	x2, x0
  408ca0:	mov	w1, #0x1                   	// #1
  408ca4:	mov	x0, x20
  408ca8:	bl	402ba0 <__fprintf_chk@plt>
  408cac:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408cb0:	add	x1, x1, #0xf1d
  408cb4:	mov	w2, #0x5                   	// #5
  408cb8:	mov	x0, xzr
  408cbc:	bl	402d10 <dcgettext@plt>
  408cc0:	mov	x2, x0
  408cc4:	mov	w1, #0x1                   	// #1
  408cc8:	mov	x0, x20
  408ccc:	bl	402ba0 <__fprintf_chk@plt>
  408cd0:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408cd4:	add	x1, x1, #0xf6c
  408cd8:	mov	w2, #0x5                   	// #5
  408cdc:	mov	x0, xzr
  408ce0:	bl	402d10 <dcgettext@plt>
  408ce4:	mov	x2, x0
  408ce8:	mov	w1, #0x1                   	// #1
  408cec:	mov	x0, x20
  408cf0:	bl	402ba0 <__fprintf_chk@plt>
  408cf4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  408cf8:	add	x1, x1, #0xfd6
  408cfc:	mov	w2, #0x5                   	// #5
  408d00:	mov	x0, xzr
  408d04:	bl	402d10 <dcgettext@plt>
  408d08:	mov	x2, x0
  408d0c:	mov	w1, #0x1                   	// #1
  408d10:	mov	x0, x20
  408d14:	bl	402ba0 <__fprintf_chk@plt>
  408d18:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408d1c:	add	x1, x1, #0x39
  408d20:	mov	w2, #0x5                   	// #5
  408d24:	mov	x0, xzr
  408d28:	bl	402d10 <dcgettext@plt>
  408d2c:	mov	x2, x0
  408d30:	mov	w1, #0x1                   	// #1
  408d34:	mov	x0, x20
  408d38:	bl	402ba0 <__fprintf_chk@plt>
  408d3c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408d40:	add	x1, x1, #0x71
  408d44:	mov	w2, #0x5                   	// #5
  408d48:	mov	x0, xzr
  408d4c:	bl	402d10 <dcgettext@plt>
  408d50:	mov	x2, x0
  408d54:	mov	w1, #0x1                   	// #1
  408d58:	mov	x0, x20
  408d5c:	bl	402ba0 <__fprintf_chk@plt>
  408d60:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408d64:	add	x1, x1, #0xff
  408d68:	mov	w2, #0x5                   	// #5
  408d6c:	mov	x0, xzr
  408d70:	bl	402d10 <dcgettext@plt>
  408d74:	mov	x2, x0
  408d78:	mov	w1, #0x1                   	// #1
  408d7c:	mov	x0, x20
  408d80:	bl	402ba0 <__fprintf_chk@plt>
  408d84:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408d88:	add	x1, x1, #0x17f
  408d8c:	mov	w2, #0x5                   	// #5
  408d90:	mov	x0, xzr
  408d94:	bl	402d10 <dcgettext@plt>
  408d98:	mov	x2, x0
  408d9c:	mov	w1, #0x1                   	// #1
  408da0:	mov	x0, x20
  408da4:	bl	402ba0 <__fprintf_chk@plt>
  408da8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408dac:	add	x1, x1, #0x1d3
  408db0:	mov	w2, #0x5                   	// #5
  408db4:	mov	x0, xzr
  408db8:	bl	402d10 <dcgettext@plt>
  408dbc:	mov	x2, x0
  408dc0:	mov	w1, #0x1                   	// #1
  408dc4:	mov	x0, x20
  408dc8:	bl	402ba0 <__fprintf_chk@plt>
  408dcc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408dd0:	add	x1, x1, #0x263
  408dd4:	mov	w2, #0x5                   	// #5
  408dd8:	mov	x0, xzr
  408ddc:	bl	402d10 <dcgettext@plt>
  408de0:	mov	x2, x0
  408de4:	mov	w1, #0x1                   	// #1
  408de8:	mov	x0, x20
  408dec:	bl	402ba0 <__fprintf_chk@plt>
  408df0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408df4:	add	x1, x1, #0x2a8
  408df8:	mov	w2, #0x5                   	// #5
  408dfc:	mov	x0, xzr
  408e00:	bl	402d10 <dcgettext@plt>
  408e04:	mov	x2, x0
  408e08:	mov	w1, #0x1                   	// #1
  408e0c:	mov	x0, x20
  408e10:	bl	402ba0 <__fprintf_chk@plt>
  408e14:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408e18:	add	x1, x1, #0x2d5
  408e1c:	mov	w2, #0x5                   	// #5
  408e20:	mov	x0, xzr
  408e24:	bl	402d10 <dcgettext@plt>
  408e28:	mov	x2, x0
  408e2c:	mov	w1, #0x1                   	// #1
  408e30:	mov	x0, x20
  408e34:	bl	402ba0 <__fprintf_chk@plt>
  408e38:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408e3c:	add	x1, x1, #0x30b
  408e40:	mov	w2, #0x5                   	// #5
  408e44:	mov	x0, xzr
  408e48:	bl	402d10 <dcgettext@plt>
  408e4c:	mov	x2, x0
  408e50:	mov	w1, #0x1                   	// #1
  408e54:	mov	x0, x20
  408e58:	bl	402ba0 <__fprintf_chk@plt>
  408e5c:	mov	w0, w19
  408e60:	bl	408b30 <wcrtomb@plt+0x5d00>
  408e64:	mov	x0, xzr
  408e68:	bl	409534 <wcrtomb@plt+0x6704>
  408e6c:	mov	w0, w19
  408e70:	bl	402790 <exit@plt>
  408e74:	sub	sp, sp, #0x150
  408e78:	stp	x29, x30, [sp, #256]
  408e7c:	stp	x24, x23, [sp, #288]
  408e80:	add	x29, sp, #0x100
  408e84:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408e88:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408e8c:	stp	x20, x19, [sp, #320]
  408e90:	mov	x19, x0
  408e94:	stp	x3, x4, [x29, #-104]
  408e98:	ldr	x0, [x23, #1280]
  408e9c:	ldr	x3, [x8, #1968]
  408ea0:	stp	x1, x2, [x29, #-120]
  408ea4:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408ea8:	add	x2, x2, #0x420
  408eac:	mov	w1, #0x1                   	// #1
  408eb0:	str	x28, [sp, #272]
  408eb4:	stp	x22, x21, [sp, #304]
  408eb8:	stp	x5, x6, [x29, #-88]
  408ebc:	stur	x7, [x29, #-72]
  408ec0:	stp	q0, q1, [sp]
  408ec4:	stp	q2, q3, [sp, #32]
  408ec8:	stp	q4, q5, [sp, #64]
  408ecc:	stp	q6, q7, [sp, #96]
  408ed0:	bl	402ba0 <__fprintf_chk@plt>
  408ed4:	sub	x9, x29, #0x78
  408ed8:	mov	x10, sp
  408edc:	mov	x11, #0xffffffffffffffc8    	// #-56
  408ee0:	add	x8, x29, #0x50
  408ee4:	movk	x11, #0xff80, lsl #32
  408ee8:	add	x9, x9, #0x38
  408eec:	add	x10, x10, #0x80
  408ef0:	stp	x8, x9, [x29, #-64]
  408ef4:	stp	x10, x11, [x29, #-48]
  408ef8:	ldp	q0, q1, [x29, #-64]
  408efc:	ldr	x0, [x23, #1280]
  408f00:	sub	x3, x29, #0x20
  408f04:	mov	w1, #0x1                   	// #1
  408f08:	mov	x2, x19
  408f0c:	stp	q0, q1, [x29, #-32]
  408f10:	bl	402a10 <__vfprintf_chk@plt>
  408f14:	ldr	x1, [x23, #1280]
  408f18:	mov	w0, #0xa                   	// #10
  408f1c:	bl	402860 <putc_unlocked@plt>
  408f20:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  408f24:	ldr	x8, [x24, #1936]
  408f28:	cbz	x8, 408fb8 <wcrtomb@plt+0x6188>
  408f2c:	adrp	x19, 41e000 <_obstack_memory_used@@Base+0xcd74>
  408f30:	add	x19, x19, #0x425
  408f34:	ldrb	w9, [x8, #24]
  408f38:	tbz	w9, #0, 408fa8 <wcrtomb@plt+0x6178>
  408f3c:	ldr	x0, [x8]
  408f40:	bl	402880 <fclose@plt>
  408f44:	bl	402da0 <__errno_location@plt>
  408f48:	str	wzr, [x0]
  408f4c:	ldr	x8, [x24, #1936]
  408f50:	mov	x20, x0
  408f54:	ldr	x0, [x8, #8]
  408f58:	bl	402dd0 <unlink@plt>
  408f5c:	ldr	w8, [x20]
  408f60:	cbz	w8, 408fa8 <wcrtomb@plt+0x6178>
  408f64:	ldr	x21, [x23, #1280]
  408f68:	mov	w2, #0x5                   	// #5
  408f6c:	mov	x0, xzr
  408f70:	mov	x1, x19
  408f74:	bl	402d10 <dcgettext@plt>
  408f78:	ldr	x8, [x24, #1936]
  408f7c:	ldr	x22, [x8, #8]
  408f80:	ldr	w8, [x20]
  408f84:	mov	x20, x0
  408f88:	mov	w0, w8
  408f8c:	bl	402ad0 <strerror@plt>
  408f90:	mov	x4, x0
  408f94:	mov	w1, #0x1                   	// #1
  408f98:	mov	x0, x21
  408f9c:	mov	x2, x20
  408fa0:	mov	x3, x22
  408fa4:	bl	402ba0 <__fprintf_chk@plt>
  408fa8:	ldr	x8, [x24, #1936]
  408fac:	ldr	x8, [x8, #16]
  408fb0:	str	x8, [x24, #1936]
  408fb4:	cbnz	x8, 408f34 <wcrtomb@plt+0x6104>
  408fb8:	mov	w0, #0x4                   	// #4
  408fbc:	bl	402790 <exit@plt>
  408fc0:	stp	x29, x30, [sp, #-48]!
  408fc4:	str	x21, [sp, #16]
  408fc8:	stp	x20, x19, [sp, #32]
  408fcc:	mov	x29, sp
  408fd0:	mov	w21, w2
  408fd4:	mov	x19, x0
  408fd8:	bl	4028c0 <fopen@plt>
  408fdc:	mov	x20, x0
  408fe0:	cbz	x0, 408ff4 <wcrtomb@plt+0x61c4>
  408fe4:	mov	x0, x20
  408fe8:	mov	x1, x19
  408fec:	bl	409040 <wcrtomb@plt+0x6210>
  408ff0:	b	408ff8 <wcrtomb@plt+0x61c8>
  408ff4:	cbnz	w21, 40900c <wcrtomb@plt+0x61dc>
  408ff8:	mov	x0, x20
  408ffc:	ldp	x20, x19, [sp, #32]
  409000:	ldr	x21, [sp, #16]
  409004:	ldp	x29, x30, [sp], #48
  409008:	ret
  40900c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409010:	add	x1, x1, #0x43a
  409014:	mov	w2, #0x5                   	// #5
  409018:	mov	x0, xzr
  40901c:	bl	402d10 <dcgettext@plt>
  409020:	mov	x20, x0
  409024:	bl	402da0 <__errno_location@plt>
  409028:	ldr	w0, [x0]
  40902c:	bl	402ad0 <strerror@plt>
  409030:	mov	x2, x0
  409034:	mov	x0, x20
  409038:	mov	x1, x19
  40903c:	bl	408e74 <wcrtomb@plt+0x6044>
  409040:	stp	x29, x30, [sp, #-48]!
  409044:	stp	x22, x21, [sp, #16]
  409048:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40904c:	ldr	x21, [x22, #1936]
  409050:	stp	x20, x19, [sp, #32]
  409054:	mov	x20, x1
  409058:	mov	x19, x0
  40905c:	mov	x29, sp
  409060:	cbz	x21, 409078 <wcrtomb@plt+0x6248>
  409064:	ldr	x8, [x21]
  409068:	cmp	x8, x19
  40906c:	b.eq	409098 <wcrtomb@plt+0x6268>  // b.none
  409070:	ldr	x21, [x21, #16]
  409074:	cbnz	x21, 409064 <wcrtomb@plt+0x6234>
  409078:	mov	w0, #0x1                   	// #1
  40907c:	mov	w1, #0x20                  	// #32
  409080:	bl	410e08 <wcrtomb@plt+0xdfd8>
  409084:	ldr	x8, [x22, #1936]
  409088:	mov	x21, x0
  40908c:	str	x0, [x22, #1936]
  409090:	str	x8, [x0, #16]
  409094:	b	4090a0 <wcrtomb@plt+0x6270>
  409098:	ldr	x0, [x21, #8]
  40909c:	bl	402be0 <free@plt>
  4090a0:	mov	x0, x20
  4090a4:	bl	410e78 <wcrtomb@plt+0xe048>
  4090a8:	ldrb	w8, [x21, #24]
  4090ac:	stp	x19, x0, [x21]
  4090b0:	and	w8, w8, #0xfe
  4090b4:	strb	w8, [x21, #24]
  4090b8:	ldp	x20, x19, [sp, #32]
  4090bc:	ldp	x22, x21, [sp, #16]
  4090c0:	ldp	x29, x30, [sp], #48
  4090c4:	ret
  4090c8:	stp	x29, x30, [sp, #-48]!
  4090cc:	stp	x20, x19, [sp, #32]
  4090d0:	mov	x19, x1
  4090d4:	mov	x1, x2
  4090d8:	str	x21, [sp, #16]
  4090dc:	mov	x29, sp
  4090e0:	mov	w21, w3
  4090e4:	bl	4029e0 <fdopen@plt>
  4090e8:	mov	x20, x0
  4090ec:	cbz	x0, 409100 <wcrtomb@plt+0x62d0>
  4090f0:	mov	x0, x20
  4090f4:	mov	x1, x19
  4090f8:	bl	409040 <wcrtomb@plt+0x6210>
  4090fc:	b	409104 <wcrtomb@plt+0x62d4>
  409100:	cbnz	w21, 409118 <wcrtomb@plt+0x62e8>
  409104:	mov	x0, x20
  409108:	ldp	x20, x19, [sp, #32]
  40910c:	ldr	x21, [sp, #16]
  409110:	ldp	x29, x30, [sp], #48
  409114:	ret
  409118:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40911c:	add	x1, x1, #0x454
  409120:	mov	w2, #0x5                   	// #5
  409124:	mov	x0, xzr
  409128:	bl	402d10 <dcgettext@plt>
  40912c:	mov	x20, x0
  409130:	bl	402da0 <__errno_location@plt>
  409134:	ldr	w0, [x0]
  409138:	bl	402ad0 <strerror@plt>
  40913c:	mov	x2, x0
  409140:	mov	x0, x20
  409144:	mov	x1, x19
  409148:	bl	408e74 <wcrtomb@plt+0x6044>
  40914c:	stp	x29, x30, [sp, #-64]!
  409150:	stp	x22, x21, [sp, #32]
  409154:	mov	x21, x0
  409158:	mov	x0, x1
  40915c:	str	x23, [sp, #16]
  409160:	stp	x20, x19, [sp, #48]
  409164:	mov	x29, sp
  409168:	mov	x20, x3
  40916c:	mov	x22, x2
  409170:	mov	x23, x1
  409174:	bl	402750 <strlen@plt>
  409178:	mov	x19, x0
  40917c:	mov	x0, x22
  409180:	bl	402750 <strlen@plt>
  409184:	add	x8, x19, x0
  409188:	add	x0, x8, #0x8
  40918c:	bl	410cb0 <wcrtomb@plt+0xde80>
  409190:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409194:	add	x3, x3, #0x46e
  409198:	mov	w1, #0x1                   	// #1
  40919c:	mov	x2, #0xffffffffffffffff    	// #-1
  4091a0:	mov	x4, x23
  4091a4:	mov	x5, x22
  4091a8:	mov	x19, x0
  4091ac:	bl	402770 <__sprintf_chk@plt>
  4091b0:	mov	w0, #0x3f                  	// #63
  4091b4:	bl	402d80 <umask@plt>
  4091b8:	mov	w23, w0
  4091bc:	mov	x0, x19
  4091c0:	mov	w1, wzr
  4091c4:	bl	402b20 <mkostemp@plt>
  4091c8:	mov	w22, w0
  4091cc:	mov	w0, w23
  4091d0:	bl	402d80 <umask@plt>
  4091d4:	cmn	w22, #0x1
  4091d8:	b.eq	409210 <wcrtomb@plt+0x63e0>  // b.none
  4091dc:	mov	w0, w22
  4091e0:	mov	x1, x20
  4091e4:	str	x19, [x21]
  4091e8:	bl	4029e0 <fdopen@plt>
  4091ec:	mov	x1, x19
  4091f0:	mov	x20, x0
  4091f4:	bl	409040 <wcrtomb@plt+0x6210>
  4091f8:	mov	x0, x20
  4091fc:	ldp	x20, x19, [sp, #48]
  409200:	ldp	x22, x21, [sp, #32]
  409204:	ldr	x23, [sp, #16]
  409208:	ldp	x29, x30, [sp], #64
  40920c:	ret
  409210:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  409214:	add	x1, x1, #0x6d7
  409218:	mov	w2, #0x5                   	// #5
  40921c:	mov	x0, xzr
  409220:	bl	402d10 <dcgettext@plt>
  409224:	mov	x20, x0
  409228:	bl	402da0 <__errno_location@plt>
  40922c:	ldr	w0, [x0]
  409230:	bl	402ad0 <strerror@plt>
  409234:	mov	x2, x0
  409238:	mov	x0, x20
  40923c:	mov	x1, x19
  409240:	bl	408e74 <wcrtomb@plt+0x6044>
  409244:	stp	x29, x30, [sp, #-48]!
  409248:	stp	x22, x21, [sp, #16]
  40924c:	mov	x22, x0
  409250:	mov	x0, x3
  409254:	stp	x20, x19, [sp, #32]
  409258:	mov	x29, sp
  40925c:	mov	x20, x3
  409260:	mov	x19, x2
  409264:	mov	x21, x1
  409268:	bl	402c90 <clearerr_unlocked@plt>
  40926c:	cbz	x21, 40928c <wcrtomb@plt+0x645c>
  409270:	mov	x0, x22
  409274:	mov	x1, x21
  409278:	mov	x2, x19
  40927c:	mov	x3, x20
  409280:	bl	402740 <fwrite_unlocked@plt>
  409284:	cmp	x0, x19
  409288:	b.ne	40929c <wcrtomb@plt+0x646c>  // b.any
  40928c:	ldp	x20, x19, [sp, #32]
  409290:	ldp	x22, x21, [sp, #16]
  409294:	ldp	x29, x30, [sp], #48
  409298:	ret
  40929c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4092a0:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4092a4:	add	x1, x1, #0x47a
  4092a8:	add	x2, x2, #0x49d
  4092ac:	mov	w4, #0x5                   	// #5
  4092b0:	mov	x0, xzr
  4092b4:	mov	x3, x19
  4092b8:	bl	402c70 <dcngettext@plt>
  4092bc:	mov	x21, x0
  4092c0:	mov	x0, x20
  4092c4:	bl	4092ec <wcrtomb@plt+0x64bc>
  4092c8:	mov	x20, x0
  4092cc:	bl	402da0 <__errno_location@plt>
  4092d0:	ldr	w0, [x0]
  4092d4:	bl	402ad0 <strerror@plt>
  4092d8:	mov	x3, x0
  4092dc:	mov	x0, x21
  4092e0:	mov	x1, x19
  4092e4:	mov	x2, x20
  4092e8:	bl	408e74 <wcrtomb@plt+0x6044>
  4092ec:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4092f0:	ldr	x8, [x8, #1936]
  4092f4:	cbz	x8, 40930c <wcrtomb@plt+0x64dc>
  4092f8:	ldr	x9, [x8]
  4092fc:	cmp	x9, x0
  409300:	b.eq	409350 <wcrtomb@plt+0x6520>  // b.none
  409304:	ldr	x8, [x8, #16]
  409308:	cbnz	x8, 4092f8 <wcrtomb@plt+0x64c8>
  40930c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  409310:	ldr	x8, [x8, #1312]
  409314:	cmp	x8, x0
  409318:	b.eq	409358 <wcrtomb@plt+0x6528>  // b.none
  40931c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  409320:	ldr	x8, [x8, #1304]
  409324:	cmp	x8, x0
  409328:	b.eq	409364 <wcrtomb@plt+0x6534>  // b.none
  40932c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  409330:	ldr	x8, [x8, #1280]
  409334:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409338:	adrp	x10, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40933c:	add	x9, x9, #0x533
  409340:	add	x10, x10, #0x4c6
  409344:	cmp	x8, x0
  409348:	csel	x0, x10, x9, eq  // eq = none
  40934c:	ret
  409350:	ldr	x0, [x8, #8]
  409354:	ret
  409358:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40935c:	add	x0, x0, #0x4af
  409360:	ret
  409364:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  409368:	add	x0, x0, #0x4ba
  40936c:	ret
  409370:	stp	x29, x30, [sp, #-48]!
  409374:	stp	x22, x21, [sp, #16]
  409378:	mov	x22, x0
  40937c:	mov	x0, x3
  409380:	stp	x20, x19, [sp, #32]
  409384:	mov	x29, sp
  409388:	mov	x19, x3
  40938c:	mov	x20, x2
  409390:	mov	x21, x1
  409394:	bl	402c90 <clearerr_unlocked@plt>
  409398:	cbz	x21, 4093c8 <wcrtomb@plt+0x6598>
  40939c:	mov	x0, x22
  4093a0:	mov	x1, x21
  4093a4:	mov	x2, x20
  4093a8:	mov	x3, x19
  4093ac:	bl	402b70 <fread_unlocked@plt>
  4093b0:	mov	x20, x0
  4093b4:	cbnz	x0, 4093c8 <wcrtomb@plt+0x6598>
  4093b8:	mov	x0, x19
  4093bc:	bl	4027e0 <ferror_unlocked@plt>
  4093c0:	cbnz	w0, 4093dc <wcrtomb@plt+0x65ac>
  4093c4:	mov	x20, xzr
  4093c8:	mov	x0, x20
  4093cc:	ldp	x20, x19, [sp, #32]
  4093d0:	ldp	x22, x21, [sp, #16]
  4093d4:	ldp	x29, x30, [sp], #48
  4093d8:	ret
  4093dc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4093e0:	add	x1, x1, #0x4c1
  4093e4:	mov	w2, #0x5                   	// #5
  4093e8:	mov	x0, xzr
  4093ec:	bl	402d10 <dcgettext@plt>
  4093f0:	mov	x20, x0
  4093f4:	mov	x0, x19
  4093f8:	bl	4092ec <wcrtomb@plt+0x64bc>
  4093fc:	mov	x19, x0
  409400:	bl	402da0 <__errno_location@plt>
  409404:	ldr	w0, [x0]
  409408:	bl	402ad0 <strerror@plt>
  40940c:	mov	x2, x0
  409410:	mov	x0, x20
  409414:	mov	x1, x19
  409418:	bl	408e74 <wcrtomb@plt+0x6044>
  40941c:	stp	x29, x30, [sp, #-48]!
  409420:	stp	x22, x21, [sp, #16]
  409424:	mov	x21, x0
  409428:	mov	x0, x3
  40942c:	stp	x20, x19, [sp, #32]
  409430:	mov	x29, sp
  409434:	mov	x19, x3
  409438:	mov	w22, w2
  40943c:	mov	x20, x1
  409440:	bl	4027e0 <ferror_unlocked@plt>
  409444:	cbnz	w0, 409480 <wcrtomb@plt+0x6650>
  409448:	and	w2, w22, #0xff
  40944c:	mov	x0, x21
  409450:	mov	x1, x20
  409454:	mov	x3, x19
  409458:	bl	402920 <getdelim@plt>
  40945c:	mov	x20, x0
  409460:	mov	x0, x19
  409464:	bl	4027e0 <ferror_unlocked@plt>
  409468:	cbnz	w0, 409480 <wcrtomb@plt+0x6650>
  40946c:	mov	x0, x20
  409470:	ldp	x20, x19, [sp, #32]
  409474:	ldp	x22, x21, [sp, #16]
  409478:	ldp	x29, x30, [sp], #48
  40947c:	ret
  409480:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409484:	add	x1, x1, #0x4c1
  409488:	mov	w2, #0x5                   	// #5
  40948c:	mov	x0, xzr
  409490:	bl	402d10 <dcgettext@plt>
  409494:	mov	x20, x0
  409498:	mov	x0, x19
  40949c:	bl	4092ec <wcrtomb@plt+0x64bc>
  4094a0:	mov	x19, x0
  4094a4:	bl	402da0 <__errno_location@plt>
  4094a8:	ldr	w0, [x0]
  4094ac:	bl	402ad0 <strerror@plt>
  4094b0:	mov	x2, x0
  4094b4:	mov	x0, x20
  4094b8:	mov	x1, x19
  4094bc:	bl	408e74 <wcrtomb@plt+0x6044>
  4094c0:	stp	x29, x30, [sp, #-32]!
  4094c4:	stp	x20, x19, [sp, #16]
  4094c8:	mov	x29, sp
  4094cc:	mov	x19, x0
  4094d0:	bl	402840 <__fwriting@plt>
  4094d4:	cbz	w0, 409500 <wcrtomb@plt+0x66d0>
  4094d8:	mov	x0, x19
  4094dc:	bl	402c90 <clearerr_unlocked@plt>
  4094e0:	mov	x0, x19
  4094e4:	bl	402c60 <fflush_unlocked@plt>
  4094e8:	cmn	w0, #0x1
  4094ec:	b.ne	409500 <wcrtomb@plt+0x66d0>  // b.any
  4094f0:	bl	402da0 <__errno_location@plt>
  4094f4:	ldr	w20, [x0]
  4094f8:	cmp	w20, #0x9
  4094fc:	b.ne	40950c <wcrtomb@plt+0x66dc>  // b.any
  409500:	ldp	x20, x19, [sp, #16]
  409504:	ldp	x29, x30, [sp], #32
  409508:	ret
  40950c:	mov	x0, x19
  409510:	bl	4092ec <wcrtomb@plt+0x64bc>
  409514:	mov	x19, x0
  409518:	mov	w0, w20
  40951c:	bl	402ad0 <strerror@plt>
  409520:	mov	x2, x0
  409524:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409528:	add	x0, x0, #0x4d6
  40952c:	mov	x1, x19
  409530:	bl	408e74 <wcrtomb@plt+0x6044>
  409534:	sub	sp, sp, #0x60
  409538:	stp	x22, x21, [sp, #64]
  40953c:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  409540:	stp	x20, x19, [sp, #80]
  409544:	ldr	x20, [x21, #1936]
  409548:	mov	x19, x0
  40954c:	stp	x29, x30, [sp, #32]
  409550:	str	x23, [sp, #48]
  409554:	add	x29, sp, #0x20
  409558:	str	x20, [sp, #16]
  40955c:	cbz	x20, 4095b8 <wcrtomb@plt+0x6788>
  409560:	mov	x8, sp
  409564:	add	x23, x8, #0x10
  409568:	mov	x22, sp
  40956c:	ldr	x0, [x20]
  409570:	cbz	x19, 409588 <wcrtomb@plt+0x6758>
  409574:	cmp	x0, x19
  409578:	mov	x0, x19
  40957c:	b.eq	409588 <wcrtomb@plt+0x6758>  // b.none
  409580:	mov	x22, x20
  409584:	b	4095a4 <wcrtomb@plt+0x6774>
  409588:	bl	4095e8 <wcrtomb@plt+0x67b8>
  40958c:	ldr	x8, [x20, #16]
  409590:	str	x8, [x23]
  409594:	ldr	x0, [x20, #8]
  409598:	bl	402be0 <free@plt>
  40959c:	mov	x0, x20
  4095a0:	bl	402be0 <free@plt>
  4095a4:	mov	x23, x22
  4095a8:	ldr	x20, [x23, #16]!
  4095ac:	cbnz	x20, 40956c <wcrtomb@plt+0x673c>
  4095b0:	ldr	x8, [sp, #16]
  4095b4:	b	4095bc <wcrtomb@plt+0x678c>
  4095b8:	mov	x8, xzr
  4095bc:	str	x8, [x21, #1936]
  4095c0:	cbnz	x19, 4095d0 <wcrtomb@plt+0x67a0>
  4095c4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4095c8:	ldr	x0, [x8, #1304]
  4095cc:	bl	4095e8 <wcrtomb@plt+0x67b8>
  4095d0:	ldp	x20, x19, [sp, #80]
  4095d4:	ldp	x22, x21, [sp, #64]
  4095d8:	ldr	x23, [sp, #48]
  4095dc:	ldp	x29, x30, [sp, #32]
  4095e0:	add	sp, sp, #0x60
  4095e4:	ret
  4095e8:	stp	x29, x30, [sp, #-32]!
  4095ec:	str	x19, [sp, #16]
  4095f0:	mov	x29, sp
  4095f4:	mov	x19, x0
  4095f8:	bl	4094c0 <wcrtomb@plt+0x6690>
  4095fc:	mov	x0, x19
  409600:	bl	402c90 <clearerr_unlocked@plt>
  409604:	mov	x0, x19
  409608:	bl	402880 <fclose@plt>
  40960c:	cmn	w0, #0x1
  409610:	b.eq	409620 <wcrtomb@plt+0x67f0>  // b.none
  409614:	ldr	x19, [sp, #16]
  409618:	ldp	x29, x30, [sp], #32
  40961c:	ret
  409620:	mov	x0, x19
  409624:	bl	4092ec <wcrtomb@plt+0x64bc>
  409628:	mov	x19, x0
  40962c:	bl	402da0 <__errno_location@plt>
  409630:	ldr	w0, [x0]
  409634:	bl	402ad0 <strerror@plt>
  409638:	mov	x2, x0
  40963c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409640:	add	x0, x0, #0x53d
  409644:	mov	x1, x19
  409648:	bl	408e74 <wcrtomb@plt+0x6044>
  40964c:	sub	sp, sp, #0xe0
  409650:	stp	x22, x21, [sp, #192]
  409654:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  409658:	ldr	w8, [x22, #1960]
  40965c:	stp	x20, x19, [sp, #208]
  409660:	mov	x19, x0
  409664:	stp	x29, x30, [sp, #128]
  409668:	stp	x28, x27, [sp, #144]
  40966c:	stp	x26, x25, [sp, #160]
  409670:	stp	x24, x23, [sp, #176]
  409674:	add	x29, sp, #0x80
  409678:	cbnz	w8, 4096a4 <wcrtomb@plt+0x6874>
  40967c:	mov	w0, #0x1001                	// #4097
  409680:	mov	w20, #0x1001                	// #4097
  409684:	bl	410e00 <wcrtomb@plt+0xdfd0>
  409688:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40968c:	str	x0, [x8, #1944]
  409690:	mov	w0, #0x1001                	// #4097
  409694:	bl	410e00 <wcrtomb@plt+0xdfd0>
  409698:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40969c:	str	x0, [x8, #1952]
  4096a0:	str	w20, [x22, #1960]
  4096a4:	mov	x1, sp
  4096a8:	mov	x0, x19
  4096ac:	bl	41cf20 <_obstack_memory_used@@Base+0xbc94>
  4096b0:	cbnz	w0, 409824 <wcrtomb@plt+0x69f4>
  4096b4:	ldr	w8, [sp, #16]
  4096b8:	mov	w9, #0xa000                	// #40960
  4096bc:	and	w8, w8, w9
  4096c0:	cmp	w8, #0xa, lsl #12
  4096c4:	b.ne	409824 <wcrtomb@plt+0x69f4>  // b.any
  4096c8:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4096cc:	adrp	x24, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4096d0:	mov	w25, #0xa000                	// #40960
  4096d4:	mov	x26, #0x100000000           	// #4294967296
  4096d8:	ldr	x1, [x23, #1952]
  4096dc:	cmp	x19, x1
  4096e0:	b.ne	4096f8 <wcrtomb@plt+0x68c8>  // b.any
  4096e4:	ldr	x0, [x24, #1944]
  4096e8:	mov	x1, x19
  4096ec:	bl	402c80 <strcpy@plt>
  4096f0:	ldr	x19, [x24, #1944]
  4096f4:	ldr	x1, [x23, #1952]
  4096f8:	ldrsw	x2, [x22, #1960]
  4096fc:	mov	x0, x19
  409700:	bl	4027d0 <readlink@plt>
  409704:	ldr	w27, [x22, #1960]
  409708:	mov	x20, x0
  40970c:	cmp	w27, w20
  409710:	b.ne	40974c <wcrtomb@plt+0x691c>  // b.any
  409714:	ldr	x0, [x24, #1944]
  409718:	lsl	w8, w20, #1
  40971c:	sxtw	x1, w8
  409720:	str	w8, [x22, #1960]
  409724:	bl	410d00 <wcrtomb@plt+0xded0>
  409728:	ldr	x8, [x23, #1952]
  40972c:	ldrsw	x1, [x22, #1960]
  409730:	str	x0, [x24, #1944]
  409734:	mov	x0, x8
  409738:	bl	410d00 <wcrtomb@plt+0xded0>
  40973c:	ldrsw	x2, [x22, #1960]
  409740:	mov	x1, x0
  409744:	str	x0, [x23, #1952]
  409748:	b	4096fc <wcrtomb@plt+0x68cc>
  40974c:	tbnz	w20, #31, 40984c <wcrtomb@plt+0x6a1c>
  409750:	ldr	x8, [x23, #1952]
  409754:	strb	wzr, [x8, w20, sxtw]
  409758:	ldr	x21, [x23, #1952]
  40975c:	ldrb	w8, [x21]
  409760:	cmp	w8, #0x2f
  409764:	b.eq	409800 <wcrtomb@plt+0x69d0>  // b.none
  409768:	mov	w1, #0x2f                  	// #47
  40976c:	mov	x0, x19
  409770:	bl	402ae0 <strrchr@plt>
  409774:	cbz	x0, 409800 <wcrtomb@plt+0x69d0>
  409778:	sub	w8, w0, w19
  40977c:	add	w28, w8, #0x1
  409780:	add	w8, w28, w20
  409784:	cmp	w8, w27
  409788:	b.lt	4097bc <wcrtomb@plt+0x698c>  // b.tstop
  40978c:	ldr	x0, [x24, #1944]
  409790:	add	w8, w8, #0x1
  409794:	sxtw	x1, w8
  409798:	str	w8, [x22, #1960]
  40979c:	bl	410d00 <wcrtomb@plt+0xded0>
  4097a0:	ldr	x8, [x23, #1952]
  4097a4:	ldrsw	x1, [x22, #1960]
  4097a8:	str	x0, [x24, #1944]
  4097ac:	mov	x0, x8
  4097b0:	bl	410d00 <wcrtomb@plt+0xded0>
  4097b4:	mov	x21, x0
  4097b8:	str	x0, [x23, #1952]
  4097bc:	ldr	x0, [x24, #1944]
  4097c0:	lsl	x27, x20, #32
  4097c4:	sxtw	x20, w28
  4097c8:	cmp	x19, x0
  4097cc:	b.eq	4097e4 <wcrtomb@plt+0x69b4>  // b.none
  4097d0:	mov	x1, x19
  4097d4:	mov	x2, x20
  4097d8:	bl	402710 <memcpy@plt>
  4097dc:	ldr	x19, [x24, #1944]
  4097e0:	ldr	x21, [x23, #1952]
  4097e4:	add	x8, x27, x26
  4097e8:	add	x0, x19, x20
  4097ec:	asr	x2, x8, #32
  4097f0:	mov	x1, x21
  4097f4:	bl	402710 <memcpy@plt>
  4097f8:	ldr	x19, [x24, #1944]
  4097fc:	b	409804 <wcrtomb@plt+0x69d4>
  409800:	mov	x19, x21
  409804:	mov	x1, sp
  409808:	mov	x0, x19
  40980c:	bl	41cf20 <_obstack_memory_used@@Base+0xbc94>
  409810:	cbnz	w0, 409824 <wcrtomb@plt+0x69f4>
  409814:	ldr	w8, [sp, #16]
  409818:	and	w8, w8, w25
  40981c:	cmp	w8, #0xa, lsl #12
  409820:	b.eq	4096d8 <wcrtomb@plt+0x68a8>  // b.none
  409824:	tbnz	w0, #31, 409880 <wcrtomb@plt+0x6a50>
  409828:	mov	x0, x19
  40982c:	ldp	x20, x19, [sp, #208]
  409830:	ldp	x22, x21, [sp, #192]
  409834:	ldp	x24, x23, [sp, #176]
  409838:	ldp	x26, x25, [sp, #160]
  40983c:	ldp	x28, x27, [sp, #144]
  409840:	ldp	x29, x30, [sp, #128]
  409844:	add	sp, sp, #0xe0
  409848:	ret
  40984c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409850:	add	x1, x1, #0x4ec
  409854:	mov	w2, #0x5                   	// #5
  409858:	mov	x0, xzr
  40985c:	bl	402d10 <dcgettext@plt>
  409860:	mov	x20, x0
  409864:	bl	402da0 <__errno_location@plt>
  409868:	ldr	w0, [x0]
  40986c:	bl	402ad0 <strerror@plt>
  409870:	mov	x2, x0
  409874:	mov	x0, x20
  409878:	mov	x1, x19
  40987c:	bl	408e74 <wcrtomb@plt+0x6044>
  409880:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409884:	add	x1, x1, #0x50b
  409888:	b	409854 <wcrtomb@plt+0x6a24>
  40988c:	stp	x29, x30, [sp, #-48]!
  409890:	stp	x22, x21, [sp, #16]
  409894:	stp	x20, x19, [sp, #32]
  409898:	mov	x29, sp
  40989c:	mov	x20, x2
  4098a0:	mov	x19, x0
  4098a4:	bl	402c50 <rename@plt>
  4098a8:	cmn	w0, #0x1
  4098ac:	b.eq	4098c0 <wcrtomb@plt+0x6a90>  // b.none
  4098b0:	ldp	x20, x19, [sp, #32]
  4098b4:	ldp	x22, x21, [sp, #16]
  4098b8:	ldp	x29, x30, [sp], #48
  4098bc:	ret
  4098c0:	cbz	x20, 4098e8 <wcrtomb@plt+0x6ab8>
  4098c4:	bl	402da0 <__errno_location@plt>
  4098c8:	ldr	w22, [x0]
  4098cc:	mov	x21, x0
  4098d0:	str	wzr, [x0]
  4098d4:	mov	x0, x20
  4098d8:	bl	402dd0 <unlink@plt>
  4098dc:	ldr	w8, [x21]
  4098e0:	cbnz	w8, 40991c <wcrtomb@plt+0x6aec>
  4098e4:	str	w22, [x21]
  4098e8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4098ec:	add	x1, x1, #0x51e
  4098f0:	mov	w2, #0x5                   	// #5
  4098f4:	mov	x0, xzr
  4098f8:	bl	402d10 <dcgettext@plt>
  4098fc:	mov	x20, x0
  409900:	bl	402da0 <__errno_location@plt>
  409904:	ldr	w0, [x0]
  409908:	bl	402ad0 <strerror@plt>
  40990c:	mov	x2, x0
  409910:	mov	x0, x20
  409914:	mov	x1, x19
  409918:	bl	408e74 <wcrtomb@plt+0x6044>
  40991c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409920:	add	x1, x1, #0x425
  409924:	mov	w2, #0x5                   	// #5
  409928:	mov	x0, xzr
  40992c:	bl	402d10 <dcgettext@plt>
  409930:	ldr	w8, [x21]
  409934:	mov	x19, x0
  409938:	mov	w0, w8
  40993c:	bl	402ad0 <strerror@plt>
  409940:	mov	x2, x0
  409944:	mov	x0, x19
  409948:	mov	x1, x20
  40994c:	bl	408e74 <wcrtomb@plt+0x6044>
  409950:	stp	x29, x30, [sp, #-32]!
  409954:	mov	w0, #0x1                   	// #1
  409958:	mov	w1, #0x18                  	// #24
  40995c:	str	x19, [sp, #16]
  409960:	mov	x29, sp
  409964:	bl	410e08 <wcrtomb@plt+0xdfd8>
  409968:	mov	x19, x0
  40996c:	mov	w0, #0x32                  	// #50
  409970:	bl	410e00 <wcrtomb@plt+0xdfd0>
  409974:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409978:	ldr	q0, [x8, #1040]
  40997c:	str	x0, [x19, #16]
  409980:	mov	x0, x19
  409984:	str	q0, [x19]
  409988:	ldr	x19, [sp, #16]
  40998c:	ldp	x29, x30, [sp], #32
  409990:	ret
  409994:	ldr	x0, [x0, #16]
  409998:	ret
  40999c:	ldr	x0, [x0, #8]
  4099a0:	ret
  4099a4:	stp	x29, x30, [sp, #-48]!
  4099a8:	stp	x22, x21, [sp, #16]
  4099ac:	stp	x20, x19, [sp, #32]
  4099b0:	ldp	x9, x8, [x0]
  4099b4:	mov	x19, x2
  4099b8:	mov	x20, x0
  4099bc:	mov	x21, x1
  4099c0:	sub	x9, x9, x8
  4099c4:	cmp	x9, x2
  4099c8:	mov	x29, sp
  4099cc:	b.cs	4099e0 <wcrtomb@plt+0x6bb0>  // b.hs, b.nlast
  4099d0:	add	x1, x8, x19
  4099d4:	mov	x0, x20
  4099d8:	bl	409a18 <wcrtomb@plt+0x6be8>
  4099dc:	ldr	x8, [x20, #8]
  4099e0:	ldr	x9, [x20, #16]
  4099e4:	mov	x1, x21
  4099e8:	mov	x2, x19
  4099ec:	add	x22, x9, x8
  4099f0:	mov	x0, x22
  4099f4:	bl	402710 <memcpy@plt>
  4099f8:	ldr	x8, [x20, #8]
  4099fc:	mov	x0, x22
  409a00:	add	x8, x8, x19
  409a04:	str	x8, [x20, #8]
  409a08:	ldp	x20, x19, [sp, #32]
  409a0c:	ldp	x22, x21, [sp, #16]
  409a10:	ldp	x29, x30, [sp], #48
  409a14:	ret
  409a18:	stp	x29, x30, [sp, #-48]!
  409a1c:	stp	x20, x19, [sp, #32]
  409a20:	ldr	x8, [x0]
  409a24:	str	x21, [sp, #16]
  409a28:	mov	x29, sp
  409a2c:	cmp	x8, x1
  409a30:	b.cs	409a74 <wcrtomb@plt+0x6c44>  // b.hs, b.nlast
  409a34:	lsl	x21, x8, #1
  409a38:	mov	x19, x0
  409a3c:	mov	x20, x1
  409a40:	cmp	x21, x1
  409a44:	b.ls	409a58 <wcrtomb@plt+0x6c28>  // b.plast
  409a48:	ldr	x0, [x19, #16]
  409a4c:	mov	x1, x21
  409a50:	bl	402a50 <realloc@plt>
  409a54:	cbnz	x0, 409a6c <wcrtomb@plt+0x6c3c>
  409a58:	tbnz	x20, #63, 409a84 <wcrtomb@plt+0x6c54>
  409a5c:	ldr	x0, [x19, #16]
  409a60:	mov	x1, x20
  409a64:	bl	410d00 <wcrtomb@plt+0xded0>
  409a68:	mov	x21, x20
  409a6c:	str	x21, [x19]
  409a70:	str	x0, [x19, #16]
  409a74:	ldp	x20, x19, [sp, #32]
  409a78:	ldr	x21, [sp, #16]
  409a7c:	ldp	x29, x30, [sp], #48
  409a80:	ret
  409a84:	bl	410ec0 <wcrtomb@plt+0xe090>
  409a88:	cmn	w1, #0x1
  409a8c:	b.eq	409ae0 <wcrtomb@plt+0x6cb0>  // b.none
  409a90:	stp	x29, x30, [sp, #-32]!
  409a94:	stp	x20, x19, [sp, #16]
  409a98:	ldp	x9, x8, [x0]
  409a9c:	mov	w19, w1
  409aa0:	mov	x20, x0
  409aa4:	mov	x29, sp
  409aa8:	cmp	x9, x8
  409aac:	b.ne	409ac0 <wcrtomb@plt+0x6c90>  // b.any
  409ab0:	add	x1, x9, #0x1
  409ab4:	mov	x0, x20
  409ab8:	bl	409a18 <wcrtomb@plt+0x6be8>
  409abc:	ldr	x8, [x20, #8]
  409ac0:	ldr	x9, [x20, #16]
  409ac4:	add	x10, x8, #0x1
  409ac8:	str	x10, [x20, #8]
  409acc:	add	x0, x9, x8
  409ad0:	strb	w19, [x0]
  409ad4:	ldp	x20, x19, [sp, #16]
  409ad8:	ldp	x29, x30, [sp], #32
  409adc:	ret
  409ae0:	mov	x0, xzr
  409ae4:	ret
  409ae8:	stp	x29, x30, [sp, #-32]!
  409aec:	str	x19, [sp, #16]
  409af0:	mov	x19, x0
  409af4:	mov	x29, sp
  409af8:	cbz	x0, 409b04 <wcrtomb@plt+0x6cd4>
  409afc:	ldr	x0, [x19, #16]
  409b00:	bl	402be0 <free@plt>
  409b04:	mov	x0, x19
  409b08:	ldr	x19, [sp, #16]
  409b0c:	ldp	x29, x30, [sp], #32
  409b10:	b	402be0 <free@plt>
  409b14:	stp	x29, x30, [sp, #-48]!
  409b18:	stp	x22, x21, [sp, #16]
  409b1c:	stp	x20, x19, [sp, #32]
  409b20:	mov	x29, sp
  409b24:	mov	x20, x2
  409b28:	mov	x21, x0
  409b2c:	bl	40f160 <wcrtomb@plt+0xc330>
  409b30:	mov	w19, w0
  409b34:	cmn	w0, #0x1
  409b38:	b.eq	409b6c <wcrtomb@plt+0x6d3c>  // b.none
  409b3c:	cmn	w19, #0x2
  409b40:	b.ne	409ba8 <wcrtomb@plt+0x6d78>  // b.any
  409b44:	bl	402da0 <__errno_location@plt>
  409b48:	ldr	w20, [x0]
  409b4c:	mov	x0, x21
  409b50:	bl	41068c <wcrtomb@plt+0xd85c>
  409b54:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409b58:	mov	x3, x0
  409b5c:	add	x2, x2, #0x451
  409b60:	mov	w0, wzr
  409b64:	mov	w1, w20
  409b68:	b	409ba4 <wcrtomb@plt+0x6d74>
  409b6c:	bl	402da0 <__errno_location@plt>
  409b70:	ldr	w21, [x0]
  409b74:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409b78:	add	x1, x1, #0x553
  409b7c:	mov	w2, #0x5                   	// #5
  409b80:	mov	x0, xzr
  409b84:	bl	402d10 <dcgettext@plt>
  409b88:	mov	x22, x0
  409b8c:	mov	x0, x20
  409b90:	bl	41068c <wcrtomb@plt+0xd85c>
  409b94:	mov	x3, x0
  409b98:	mov	w0, wzr
  409b9c:	mov	w1, w21
  409ba0:	mov	x2, x22
  409ba4:	bl	4027a0 <error@plt>
  409ba8:	mov	w0, w19
  409bac:	ldp	x20, x19, [sp, #32]
  409bb0:	ldp	x22, x21, [sp, #16]
  409bb4:	ldp	x29, x30, [sp], #48
  409bb8:	ret
  409bbc:	stp	x29, x30, [sp, #-32]!
  409bc0:	ldrb	w8, [x2, #456]
  409bc4:	mov	x9, #0xffffffffffffffff    	// #-1
  409bc8:	str	x9, [x2, #48]
  409bcc:	mov	w9, #0x1                   	// #1
  409bd0:	str	x19, [sp, #16]
  409bd4:	mov	x29, sp
  409bd8:	stp	x0, x1, [x2, #32]
  409bdc:	strb	w9, [x2, #120]
  409be0:	cbz	w8, 409c7c <wcrtomb@plt+0x6e4c>
  409be4:	ldr	x8, [x2, #184]
  409be8:	mov	x19, x2
  409bec:	cbnz	x8, 409c00 <wcrtomb@plt+0x6dd0>
  409bf0:	mov	w1, #0x10b                 	// #267
  409bf4:	mov	w2, #0x3                   	// #3
  409bf8:	mov	x0, x19
  409bfc:	bl	40c590 <wcrtomb@plt+0x9760>
  409c00:	mov	x0, x19
  409c04:	bl	409d64 <wcrtomb@plt+0x6f34>
  409c08:	ldr	x8, [x19, #168]
  409c0c:	stp	x0, x8, [x19, #128]
  409c10:	mov	x0, x19
  409c14:	bl	40a520 <wcrtomb@plt+0x76f0>
  409c18:	ldr	x8, [x19, #128]
  409c1c:	cmn	x8, #0x1
  409c20:	b.ne	409c88 <wcrtomb@plt+0x6e58>  // b.any
  409c24:	ldr	x8, [x19, #184]
  409c28:	mov	x0, x19
  409c2c:	mvn	x1, x8
  409c30:	bl	409ca0 <wcrtomb@plt+0x6e70>
  409c34:	mov	w1, #0x105                 	// #261
  409c38:	mov	w2, #0x3                   	// #3
  409c3c:	mov	x0, x19
  409c40:	bl	40c590 <wcrtomb@plt+0x9760>
  409c44:	ldr	x8, [x19, #184]
  409c48:	cbz	x8, 409c68 <wcrtomb@plt+0x6e38>
  409c4c:	mov	w1, #0x106                 	// #262
  409c50:	mov	w2, #0x3                   	// #3
  409c54:	mov	x0, x19
  409c58:	bl	40c590 <wcrtomb@plt+0x9760>
  409c5c:	ldr	x8, [x19, #184]
  409c60:	add	x8, x8, #0x1
  409c64:	b	409c6c <wcrtomb@plt+0x6e3c>
  409c68:	mov	w8, #0x1                   	// #1
  409c6c:	str	x8, [x19, #184]
  409c70:	ldr	x19, [sp, #16]
  409c74:	ldp	x29, x30, [sp], #32
  409c78:	ret
  409c7c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409c80:	add	x1, x1, #0x870
  409c84:	b	409c90 <wcrtomb@plt+0x6e60>
  409c88:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409c8c:	add	x1, x1, #0x884
  409c90:	mov	w2, #0x5                   	// #5
  409c94:	mov	x0, xzr
  409c98:	bl	402d10 <dcgettext@plt>
  409c9c:	bl	407f9c <wcrtomb@plt+0x516c>
  409ca0:	stp	x29, x30, [sp, #-48]!
  409ca4:	stp	x20, x19, [sp, #32]
  409ca8:	cmp	x1, #0x113
  409cac:	mov	x19, x0
  409cb0:	str	x21, [sp, #16]
  409cb4:	mov	x29, sp
  409cb8:	b.ne	409d3c <wcrtomb@plt+0x6f0c>  // b.any
  409cbc:	ldrb	w8, [x19, #1048]
  409cc0:	cbz	w8, 409d3c <wcrtomb@plt+0x6f0c>
  409cc4:	ldr	x8, [x19, #104]
  409cc8:	cmp	x8, #0x1
  409ccc:	b.lt	409d14 <wcrtomb@plt+0x6ee4>  // b.tstop
  409cd0:	mov	x21, xzr
  409cd4:	mov	w20, wzr
  409cd8:	ldr	x8, [x19, #96]
  409cdc:	mov	x0, x19
  409ce0:	ldr	w1, [x8, x21, lsl #2]
  409ce4:	bl	40c4c4 <wcrtomb@plt+0x9694>
  409ce8:	tbz	w20, #0, 409cfc <wcrtomb@plt+0x6ecc>
  409cec:	mov	w1, #0x106                 	// #262
  409cf0:	mov	w2, #0x3                   	// #3
  409cf4:	mov	x0, x19
  409cf8:	bl	40c590 <wcrtomb@plt+0x9760>
  409cfc:	ldr	x8, [x19, #104]
  409d00:	add	x21, x21, #0x1
  409d04:	mov	w20, #0x1                   	// #1
  409d08:	cmp	x21, x8
  409d0c:	b.lt	409cd8 <wcrtomb@plt+0x6ea8>  // b.tstop
  409d10:	b	409d18 <wcrtomb@plt+0x6ee8>
  409d14:	mov	w20, wzr
  409d18:	ldr	x8, [x19, #80]
  409d1c:	str	xzr, [x19, #104]
  409d20:	cmn	x8, #0x1
  409d24:	b.eq	409d54 <wcrtomb@plt+0x6f24>  // b.none
  409d28:	add	x1, x8, #0x114
  409d2c:	mov	x0, x19
  409d30:	bl	409ca0 <wcrtomb@plt+0x6e70>
  409d34:	cbz	w20, 409d54 <wcrtomb@plt+0x6f24>
  409d38:	mov	w1, #0x106                 	// #262
  409d3c:	mov	x0, x19
  409d40:	ldp	x20, x19, [sp, #32]
  409d44:	ldr	x21, [sp, #16]
  409d48:	mov	w2, #0x3                   	// #3
  409d4c:	ldp	x29, x30, [sp], #48
  409d50:	b	40c590 <wcrtomb@plt+0x9760>
  409d54:	ldp	x20, x19, [sp, #32]
  409d58:	ldr	x21, [sp, #16]
  409d5c:	ldp	x29, x30, [sp], #48
  409d60:	ret
  409d64:	sub	sp, sp, #0x50
  409d68:	stp	x29, x30, [sp, #32]
  409d6c:	stp	x22, x21, [sp, #48]
  409d70:	stp	x20, x19, [sp, #64]
  409d74:	ldr	x8, [x0, #40]
  409d78:	mov	x19, x0
  409d7c:	add	x29, sp, #0x20
  409d80:	cbz	x8, 409db4 <wcrtomb@plt+0x6f84>
  409d84:	mov	w21, wzr
  409d88:	mov	w22, #0x1                   	// #1
  409d8c:	mov	x0, x19
  409d90:	bl	40c80c <wcrtomb@plt+0x99dc>
  409d94:	cmp	w0, #0x5c
  409d98:	b.ne	409dbc <wcrtomb@plt+0x6f8c>  // b.any
  409d9c:	cbz	w22, 409dfc <wcrtomb@plt+0x6fcc>
  409da0:	ldr	x8, [x19, #40]
  409da4:	cbz	x8, 40a4f0 <wcrtomb@plt+0x76c0>
  409da8:	sub	w22, w22, #0x1
  409dac:	mov	w21, #0x1                   	// #1
  409db0:	b	409d8c <wcrtomb@plt+0x6f5c>
  409db4:	mov	x0, #0xffffffffffffffff    	// #-1
  409db8:	b	409e58 <wcrtomb@plt+0x7028>
  409dbc:	sub	w8, w0, #0x24
  409dc0:	mov	w20, w0
  409dc4:	cmp	w8, #0x3e
  409dc8:	b.hi	409e70 <wcrtomb@plt+0x7040>  // b.pmore
  409dcc:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409dd0:	add	x9, x9, #0x578
  409dd4:	adr	x10, 409de4 <wcrtomb@plt+0x6fb4>
  409dd8:	ldrb	w11, [x9, x8]
  409ddc:	add	x10, x10, x11, lsl #2
  409de0:	br	x10
  409de4:	tbz	w21, #0, 409e00 <wcrtomb@plt+0x6fd0>
  409de8:	ldrb	w8, [x19, #449]
  409dec:	tbnz	w8, #6, 409e00 <wcrtomb@plt+0x6fd0>
  409df0:	strb	wzr, [x19, #120]
  409df4:	mov	w0, #0x112                 	// #274
  409df8:	b	409e58 <wcrtomb@plt+0x7028>
  409dfc:	mov	w20, #0x5c                  	// #92
  409e00:	ldrb	w8, [x19, #1048]
  409e04:	strb	wzr, [x19, #120]
  409e08:	cbz	w8, 409e14 <wcrtomb@plt+0x6fe4>
  409e0c:	mov	w0, #0x109                 	// #265
  409e10:	b	409e58 <wcrtomb@plt+0x7028>
  409e14:	ldrb	w8, [x19, #457]
  409e18:	cbz	w8, 409e2c <wcrtomb@plt+0x6ffc>
  409e1c:	bl	402bc0 <__ctype_b_loc@plt>
  409e20:	ldr	x8, [x0]
  409e24:	ldrh	w8, [x8, w20, sxtw #1]
  409e28:	tbnz	w8, #10, 409e34 <wcrtomb@plt+0x7004>
  409e2c:	sxtw	x0, w20
  409e30:	b	409e58 <wcrtomb@plt+0x7028>
  409e34:	movi	v0.2d, #0x0
  409e38:	mov	x1, sp
  409e3c:	mov	w0, w20
  409e40:	stp	q0, q0, [sp]
  409e44:	bl	40cf6c <wcrtomb@plt+0xa13c>
  409e48:	mov	x1, sp
  409e4c:	mov	x0, x19
  409e50:	bl	40c868 <wcrtomb@plt+0x9a38>
  409e54:	add	x0, x0, #0x114
  409e58:	str	x0, [x19, #48]
  409e5c:	ldp	x20, x19, [sp, #64]
  409e60:	ldp	x22, x21, [sp, #48]
  409e64:	ldp	x29, x30, [sp, #32]
  409e68:	add	sp, sp, #0x50
  409e6c:	ret
  409e70:	sub	w8, w20, #0x73
  409e74:	cmp	w8, #0x9
  409e78:	b.hi	409f10 <wcrtomb@plt+0x70e0>  // b.pmore
  409e7c:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409e80:	add	x9, x9, #0x5b7
  409e84:	adr	x10, 409e00 <wcrtomb@plt+0x6fd0>
  409e88:	ldrb	w11, [x9, x8]
  409e8c:	add	x10, x10, x11, lsl #2
  409e90:	br	x10
  409e94:	tbz	w21, #0, 409e00 <wcrtomb@plt+0x6fd0>
  409e98:	ldrb	w8, [x19, #450]
  409e9c:	tbnz	w8, #3, 409e00 <wcrtomb@plt+0x6fd0>
  409ea0:	ldrb	w8, [x19, #1048]
  409ea4:	cbz	w8, 40a318 <wcrtomb@plt+0x74e8>
  409ea8:	cmp	w20, #0x73
  409eac:	ldp	x20, x21, [x19, #32]
  409eb0:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409eb4:	add	x8, x8, #0x945
  409eb8:	mov	w9, #0xa                   	// #10
  409ebc:	b	409ee8 <wcrtomb@plt+0x70b8>
  409ec0:	tbz	w21, #0, 409e00 <wcrtomb@plt+0x6fd0>
  409ec4:	ldrb	w8, [x19, #450]
  409ec8:	tbnz	w8, #3, 409e00 <wcrtomb@plt+0x6fd0>
  409ecc:	ldrb	w8, [x19, #1048]
  409ed0:	cbz	w8, 40a2b4 <wcrtomb@plt+0x7484>
  409ed4:	cmp	w20, #0x77
  409ed8:	ldp	x20, x21, [x19, #32]
  409edc:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  409ee0:	add	x8, x8, #0x951
  409ee4:	mov	w9, #0xb                   	// #11
  409ee8:	cinc	x8, x8, eq  // eq = none
  409eec:	str	x8, [x19, #32]
  409ef0:	cinc	x8, x9, ne  // ne = any
  409ef4:	mov	x0, x19
  409ef8:	str	x8, [x19, #40]
  409efc:	bl	40c938 <wcrtomb@plt+0x9b08>
  409f00:	stp	x21, x0, [x19, #40]
  409f04:	str	x20, [x19, #32]
  409f08:	strb	wzr, [x19, #120]
  409f0c:	b	409e5c <wcrtomb@plt+0x702c>
  409f10:	cmp	w20, #0xa
  409f14:	b.ne	409e00 <wcrtomb@plt+0x6fd0>  // b.any
  409f18:	ldr	x8, [x19, #448]
  409f1c:	and	x8, x8, #0xc00
  409f20:	cmp	x8, #0x800
  409f24:	cset	w8, ne  // ne = any
  409f28:	orr	w8, w21, w8
  409f2c:	tbz	w8, #0, 40a290 <wcrtomb@plt+0x7460>
  409f30:	mov	w20, #0xa                   	// #10
  409f34:	b	409e00 <wcrtomb@plt+0x6fd0>
  409f38:	ldr	x8, [x19, #448]
  409f3c:	tbnz	w8, #10, 40a164 <wcrtomb@plt+0x7334>
  409f40:	mov	w9, #0x1                   	// #1
  409f44:	and	w10, w21, #0x1
  409f48:	bic	w8, w9, w8, lsr #15
  409f4c:	cmp	w8, w10
  409f50:	b.ne	40a164 <wcrtomb@plt+0x7334>  // b.any
  409f54:	strb	w9, [x19, #120]
  409f58:	mov	w0, #0x106                 	// #262
  409f5c:	b	409e58 <wcrtomb@plt+0x7028>
  409f60:	ldr	x8, [x19, #448]
  409f64:	tbz	w8, #9, 40a4cc <wcrtomb@plt+0x769c>
  409f68:	mov	w10, #0x1                   	// #1
  409f6c:	and	w9, w21, #0x1
  409f70:	bic	w10, w10, w8, lsr #12
  409f74:	cmp	w10, w9
  409f78:	b.ne	40a4cc <wcrtomb@plt+0x769c>  // b.any
  409f7c:	tbnz	w8, #4, 409f88 <wcrtomb@plt+0x7158>
  409f80:	ldrb	w9, [x19, #120]
  409f84:	cbnz	w9, 40a4cc <wcrtomb@plt+0x769c>
  409f88:	ldp	x10, x13, [x19, #32]
  409f8c:	movi	v0.2d, #0xffffffffffffffff
  409f90:	str	d0, [x19, #64]
  409f94:	add	x9, x10, x13
  409f98:	cbz	x13, 40a3f4 <wcrtomb@plt+0x75c4>
  409f9c:	mov	x12, xzr
  409fa0:	mov	w11, #0xffffffff            	// #-1
  409fa4:	mov	w14, #0xa                   	// #10
  409fa8:	mov	w15, #0x8030                	// #32816
  409fac:	mov	w16, #0x8000                	// #32768
  409fb0:	ldrb	w17, [x10, x12]
  409fb4:	sub	w18, w17, #0x30
  409fb8:	cmp	w18, #0x9
  409fbc:	b.hi	40a400 <wcrtomb@plt+0x75d0>  // b.pmore
  409fc0:	tbnz	w11, #31, 409fd8 <wcrtomb@plt+0x71a8>
  409fc4:	madd	w11, w11, w14, w17
  409fc8:	sub	w17, w11, #0x30
  409fcc:	cmp	w11, w15
  409fd0:	csel	w11, w16, w17, gt
  409fd4:	b	409fdc <wcrtomb@plt+0x71ac>
  409fd8:	mov	w11, w18
  409fdc:	add	x12, x12, #0x1
  409fe0:	cmp	x13, x12
  409fe4:	str	w11, [x19, #64]
  409fe8:	b.ne	409fb0 <wcrtomb@plt+0x7180>  // b.any
  409fec:	mov	w12, #0xffffffff            	// #-1
  409ff0:	mov	x10, x9
  409ff4:	b	40a48c <wcrtomb@plt+0x765c>
  409ff8:	tbz	w21, #0, 40a18c <wcrtomb@plt+0x735c>
  409ffc:	mov	w20, #0x5e                  	// #94
  40a000:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a004:	tbz	w21, #0, 40a1b4 <wcrtomb@plt+0x7384>
  40a008:	mov	w20, #0x2e                  	// #46
  40a00c:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a010:	tbz	w21, #0, 40a16c <wcrtomb@plt+0x733c>
  40a014:	ldrb	w8, [x19, #450]
  40a018:	tbnz	w8, #3, 40a16c <wcrtomb@plt+0x733c>
  40a01c:	mov	w0, #0x10e                 	// #270
  40a020:	b	409e58 <wcrtomb@plt+0x7028>
  40a024:	tbz	w21, #0, 40a174 <wcrtomb@plt+0x7344>
  40a028:	ldrb	w8, [x19, #450]
  40a02c:	tbnz	w8, #3, 40a174 <wcrtomb@plt+0x7344>
  40a030:	mov	w0, #0x10f                 	// #271
  40a034:	b	409e58 <wcrtomb@plt+0x7028>
  40a038:	ldr	w9, [x19, #448]
  40a03c:	mov	w8, #0x1                   	// #1
  40a040:	and	w10, w21, #0x1
  40a044:	bic	w9, w8, w9, lsr #13
  40a048:	cmp	w9, w10
  40a04c:	b.ne	40a1dc <wcrtomb@plt+0x73ac>  // b.any
  40a050:	ldr	x9, [x19, #56]
  40a054:	strb	w8, [x19, #120]
  40a058:	mov	w0, #0x107                 	// #263
  40a05c:	add	x8, x9, #0x1
  40a060:	b	40a2ac <wcrtomb@plt+0x747c>
  40a064:	tbz	w21, #0, 40a17c <wcrtomb@plt+0x734c>
  40a068:	ldrb	w8, [x19, #450]
  40a06c:	tbnz	w8, #3, 40a17c <wcrtomb@plt+0x734c>
  40a070:	mov	w0, #0x110                 	// #272
  40a074:	b	409e58 <wcrtomb@plt+0x7028>
  40a078:	ldr	x8, [x19, #448]
  40a07c:	tbnz	w8, #10, 40a098 <wcrtomb@plt+0x7268>
  40a080:	ubfx	x9, x8, #1, #1
  40a084:	eor	w9, w21, w9
  40a088:	tbnz	w9, #0, 40a098 <wcrtomb@plt+0x7268>
  40a08c:	tbnz	w8, #4, 40a368 <wcrtomb@plt+0x7538>
  40a090:	ldrb	w8, [x19, #120]
  40a094:	cbz	w8, 40a368 <wcrtomb@plt+0x7538>
  40a098:	mov	w20, #0x3f                  	// #63
  40a09c:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a0a0:	tbz	w21, #0, 40a0ac <wcrtomb@plt+0x727c>
  40a0a4:	ldrb	w8, [x19, #450]
  40a0a8:	tbz	w8, #3, 40a270 <wcrtomb@plt+0x7440>
  40a0ac:	mov	w20, #0x27                  	// #39
  40a0b0:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a0b4:	ldr	x8, [x19, #448]
  40a0b8:	tbnz	w8, #10, 40a0d4 <wcrtomb@plt+0x72a4>
  40a0bc:	ubfx	x9, x8, #1, #1
  40a0c0:	eor	w9, w21, w9
  40a0c4:	tbnz	w9, #0, 40a0d4 <wcrtomb@plt+0x72a4>
  40a0c8:	tbnz	w8, #4, 40a370 <wcrtomb@plt+0x7540>
  40a0cc:	ldrb	w8, [x19, #120]
  40a0d0:	cbz	w8, 40a370 <wcrtomb@plt+0x7540>
  40a0d4:	mov	w20, #0x2b                  	// #43
  40a0d8:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a0dc:	tbnz	w21, #0, 40a0f0 <wcrtomb@plt+0x72c0>
  40a0e0:	ldrb	w8, [x19, #448]
  40a0e4:	tbnz	w8, #4, 40a288 <wcrtomb@plt+0x7458>
  40a0e8:	ldrb	w8, [x19, #120]
  40a0ec:	cbz	w8, 40a288 <wcrtomb@plt+0x7458>
  40a0f0:	mov	w20, #0x2a                  	// #42
  40a0f4:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a0f8:	tbz	w21, #0, 40a1e4 <wcrtomb@plt+0x73b4>
  40a0fc:	mov	w20, #0x24                  	// #36
  40a100:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a104:	ldr	x8, [x19, #448]
  40a108:	mov	w10, #0x1                   	// #1
  40a10c:	and	w9, w21, #0x1
  40a110:	bic	w10, w10, w8, lsr #13
  40a114:	cmp	w10, w9
  40a118:	b.ne	40a128 <wcrtomb@plt+0x72f8>  // b.any
  40a11c:	ldr	x9, [x19, #56]
  40a120:	tbz	w8, #17, 40a2a0 <wcrtomb@plt+0x7470>
  40a124:	cbnz	x9, 40a2a0 <wcrtomb@plt+0x7470>
  40a128:	mov	w20, #0x29                  	// #41
  40a12c:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a130:	tbz	w21, #0, 40a278 <wcrtomb@plt+0x7448>
  40a134:	mov	w20, #0x5b                  	// #91
  40a138:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a13c:	tbz	w21, #0, 40a148 <wcrtomb@plt+0x7318>
  40a140:	ldrb	w8, [x19, #450]
  40a144:	tbz	w8, #3, 40a1ac <wcrtomb@plt+0x737c>
  40a148:	mov	w20, #0x60                  	// #96
  40a14c:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a150:	tbz	w21, #0, 40a184 <wcrtomb@plt+0x7354>
  40a154:	ldrb	w8, [x19, #450]
  40a158:	tbnz	w8, #3, 40a184 <wcrtomb@plt+0x7354>
  40a15c:	mov	w0, #0x111                 	// #273
  40a160:	b	409e58 <wcrtomb@plt+0x7028>
  40a164:	mov	w20, #0x7c                  	// #124
  40a168:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a16c:	mov	w20, #0x3c                  	// #60
  40a170:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a174:	mov	w20, #0x3e                  	// #62
  40a178:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a17c:	mov	w20, #0x62                  	// #98
  40a180:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a184:	mov	w20, #0x42                  	// #66
  40a188:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a18c:	ldrb	w8, [x19, #448]
  40a190:	tbnz	w8, #3, 40a1ac <wcrtomb@plt+0x737c>
  40a194:	ldr	x8, [x19, #48]
  40a198:	sub	x9, x8, #0x106
  40a19c:	cmp	x9, #0x2
  40a1a0:	b.cc	40a1ac <wcrtomb@plt+0x737c>  // b.lo, b.ul, b.last
  40a1a4:	cmn	x8, #0x1
  40a1a8:	b.ne	409ffc <wcrtomb@plt+0x71cc>  // b.any
  40a1ac:	mov	w0, #0x10c                 	// #268
  40a1b0:	b	409e58 <wcrtomb@plt+0x7028>
  40a1b4:	ldr	x0, [x19, #24]
  40a1b8:	tbz	x0, #63, 40a3d8 <wcrtomb@plt+0x75a8>
  40a1bc:	movi	v0.2d, #0xffffffffffffffff
  40a1c0:	stp	q0, q0, [sp]
  40a1c4:	ldr	x8, [x19, #448]
  40a1c8:	tbnz	w8, #6, 40a378 <wcrtomb@plt+0x7548>
  40a1cc:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40a1d0:	str	x9, [sp]
  40a1d4:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40a1d8:	b	40a37c <wcrtomb@plt+0x754c>
  40a1dc:	mov	w20, #0x28                  	// #40
  40a1e0:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a1e4:	ldr	x8, [x19, #448]
  40a1e8:	tbnz	w8, #3, 40a270 <wcrtomb@plt+0x7440>
  40a1ec:	ldr	x9, [x19, #40]
  40a1f0:	cbz	x9, 40a270 <wcrtomb@plt+0x7440>
  40a1f4:	mov	w10, #0x1                   	// #1
  40a1f8:	bic	w11, w10, w8, lsr #13
  40a1fc:	cmp	x9, x11
  40a200:	b.le	40a224 <wcrtomb@plt+0x73f4>
  40a204:	ldr	x12, [x19, #32]
  40a208:	ldrb	w13, [x12]
  40a20c:	cmp	w13, #0x5c
  40a210:	cset	w13, eq  // eq = none
  40a214:	and	x11, x11, x13
  40a218:	ldrb	w11, [x12, x11]
  40a21c:	cmp	w11, #0x29
  40a220:	b.eq	40a270 <wcrtomb@plt+0x7440>  // b.none
  40a224:	bic	w10, w10, w8, lsr #15
  40a228:	cmp	x9, x10
  40a22c:	b.le	40a250 <wcrtomb@plt+0x7420>
  40a230:	ldr	x11, [x19, #32]
  40a234:	ldrb	w12, [x11]
  40a238:	cmp	w12, #0x5c
  40a23c:	cset	w12, eq  // eq = none
  40a240:	and	x10, x10, x12
  40a244:	ldrb	w10, [x11, x10]
  40a248:	cmp	w10, #0x7c
  40a24c:	b.eq	40a270 <wcrtomb@plt+0x7440>  // b.none
  40a250:	mov	w20, #0x24                  	// #36
  40a254:	tbz	w8, #11, 409e00 <wcrtomb@plt+0x6fd0>
  40a258:	cmp	x9, #0x1
  40a25c:	b.lt	409e00 <wcrtomb@plt+0x6fd0>  // b.tstop
  40a260:	ldr	x8, [x19, #32]
  40a264:	ldrb	w8, [x8]
  40a268:	cmp	w8, #0xa
  40a26c:	b.ne	40a0fc <wcrtomb@plt+0x72cc>  // b.any
  40a270:	mov	w0, #0x10d                 	// #269
  40a274:	b	409e58 <wcrtomb@plt+0x7028>
  40a278:	mov	x0, x19
  40a27c:	strb	wzr, [x19, #120]
  40a280:	bl	40c938 <wcrtomb@plt+0x9b08>
  40a284:	b	409e58 <wcrtomb@plt+0x7028>
  40a288:	mov	w0, #0x102                 	// #258
  40a28c:	b	409e58 <wcrtomb@plt+0x7028>
  40a290:	mov	w8, #0x1                   	// #1
  40a294:	mov	w0, #0x106                 	// #262
  40a298:	strb	w8, [x19, #120]
  40a29c:	b	409e58 <wcrtomb@plt+0x7028>
  40a2a0:	sub	x8, x9, #0x1
  40a2a4:	mov	w0, #0x108                 	// #264
  40a2a8:	strb	wzr, [x19, #120]
  40a2ac:	str	x8, [x19, #56]
  40a2b0:	b	409e58 <wcrtomb@plt+0x7028>
  40a2b4:	mov	x8, xzr
  40a2b8:	movi	v0.2d, #0x0
  40a2bc:	mov	w9, #0x1                   	// #1
  40a2c0:	mov	x10, sp
  40a2c4:	stp	q0, q0, [sp]
  40a2c8:	add	x11, x19, x8
  40a2cc:	ldrb	w11, [x11, #460]
  40a2d0:	cmp	w11, #0x2
  40a2d4:	b.ne	40a2ec <wcrtomb@plt+0x74bc>  // b.any
  40a2d8:	ubfx	x11, x8, #6, #26
  40a2dc:	ldr	x12, [x10, x11, lsl #3]
  40a2e0:	lsl	x13, x9, x8
  40a2e4:	orr	x12, x12, x13
  40a2e8:	str	x12, [x10, x11, lsl #3]
  40a2ec:	add	x8, x8, #0x1
  40a2f0:	cmp	x8, #0x100
  40a2f4:	b.ne	40a2c8 <wcrtomb@plt+0x7498>  // b.any
  40a2f8:	cmp	w20, #0x57
  40a2fc:	b.ne	40a310 <wcrtomb@plt+0x74e0>  // b.any
  40a300:	ldp	q0, q1, [sp]
  40a304:	mvn	v0.16b, v0.16b
  40a308:	mvn	v1.16b, v1.16b
  40a30c:	stp	q0, q1, [sp]
  40a310:	strb	wzr, [x19, #120]
  40a314:	b	409e48 <wcrtomb@plt+0x7018>
  40a318:	movi	v0.2d, #0x0
  40a31c:	stp	q0, q0, [sp]
  40a320:	bl	402bc0 <__ctype_b_loc@plt>
  40a324:	ldr	x9, [x0]
  40a328:	mov	x8, xzr
  40a32c:	mov	w10, #0x1                   	// #1
  40a330:	mov	x11, sp
  40a334:	ldrh	w12, [x9, x8, lsl #1]
  40a338:	tbz	w12, #13, 40a350 <wcrtomb@plt+0x7520>
  40a33c:	ubfx	x12, x8, #6, #26
  40a340:	ldr	x13, [x11, x12, lsl #3]
  40a344:	lsl	x14, x10, x8
  40a348:	orr	x13, x13, x14
  40a34c:	str	x13, [x11, x12, lsl #3]
  40a350:	add	x8, x8, #0x1
  40a354:	cmp	x8, #0x100
  40a358:	b.ne	40a334 <wcrtomb@plt+0x7504>  // b.any
  40a35c:	cmp	w20, #0x53
  40a360:	b.eq	40a300 <wcrtomb@plt+0x74d0>  // b.none
  40a364:	b	40a310 <wcrtomb@plt+0x74e0>
  40a368:	mov	w0, #0x101                 	// #257
  40a36c:	b	409e58 <wcrtomb@plt+0x7028>
  40a370:	mov	w0, #0x103                 	// #259
  40a374:	b	409e58 <wcrtomb@plt+0x7028>
  40a378:	mov	x9, #0xfffffffffffffffe    	// #-2
  40a37c:	tbz	w8, #7, 40a384 <wcrtomb@plt+0x7554>
  40a380:	str	x9, [sp]
  40a384:	ldrb	w8, [x19, #1048]
  40a388:	cbz	w8, 40a3c8 <wcrtomb@plt+0x7598>
  40a38c:	mov	x8, xzr
  40a390:	add	x9, x19, #0x51c
  40a394:	mov	w10, #0x1                   	// #1
  40a398:	mov	x11, sp
  40a39c:	ldr	w12, [x9, x8, lsl #2]
  40a3a0:	cmn	w12, #0x1
  40a3a4:	b.ne	40a3bc <wcrtomb@plt+0x758c>  // b.any
  40a3a8:	ubfx	x12, x8, #6, #26
  40a3ac:	ldr	x13, [x11, x12, lsl #3]
  40a3b0:	lsl	x14, x10, x8
  40a3b4:	bic	x13, x13, x14
  40a3b8:	str	x13, [x11, x12, lsl #3]
  40a3bc:	add	x8, x8, #0x1
  40a3c0:	cmp	x8, #0x100
  40a3c4:	b.ne	40a39c <wcrtomb@plt+0x756c>  // b.any
  40a3c8:	mov	x1, sp
  40a3cc:	mov	x0, x19
  40a3d0:	bl	40c868 <wcrtomb@plt+0x9a38>
  40a3d4:	str	x0, [x19, #24]
  40a3d8:	ldrb	w8, [x19, #1048]
  40a3dc:	add	x9, x0, #0x114
  40a3e0:	strb	wzr, [x19, #120]
  40a3e4:	cmp	w8, #0x0
  40a3e8:	mov	w8, #0x10a                 	// #266
  40a3ec:	csel	x0, x9, x8, eq  // eq = none
  40a3f0:	b	409e58 <wcrtomb@plt+0x7028>
  40a3f4:	mov	w12, #0xffffffff            	// #-1
  40a3f8:	mov	w11, #0xffffffff            	// #-1
  40a3fc:	b	40a48c <wcrtomb@plt+0x765c>
  40a400:	cmp	w17, #0x2c
  40a404:	b.ne	40a480 <wcrtomb@plt+0x7650>  // b.any
  40a408:	tbz	w11, #31, 40a414 <wcrtomb@plt+0x75e4>
  40a40c:	mov	w11, wzr
  40a410:	str	wzr, [x19, #64]
  40a414:	sub	x14, x13, #0x1
  40a418:	cmp	x14, x12
  40a41c:	b.eq	409fec <wcrtomb@plt+0x71bc>  // b.none
  40a420:	mvn	x16, x12
  40a424:	add	x10, x10, x12
  40a428:	mov	w12, #0xffffffff            	// #-1
  40a42c:	mov	w14, #0xa                   	// #10
  40a430:	mov	w15, #0x8030                	// #32816
  40a434:	add	x13, x16, x13
  40a438:	add	x10, x10, #0x1
  40a43c:	mov	w16, #0x8000                	// #32768
  40a440:	ldrb	w17, [x10]
  40a444:	sub	w18, w17, #0x30
  40a448:	cmp	w18, #0x9
  40a44c:	b.hi	40a48c <wcrtomb@plt+0x765c>  // b.pmore
  40a450:	tbnz	w12, #31, 40a468 <wcrtomb@plt+0x7638>
  40a454:	madd	w12, w12, w14, w17
  40a458:	sub	w17, w12, #0x30
  40a45c:	cmp	w12, w15
  40a460:	csel	w12, w16, w17, gt
  40a464:	b	40a46c <wcrtomb@plt+0x763c>
  40a468:	mov	w12, w18
  40a46c:	subs	x13, x13, #0x1
  40a470:	add	x10, x10, #0x1
  40a474:	str	w12, [x19, #68]
  40a478:	b.ne	40a440 <wcrtomb@plt+0x7610>  // b.any
  40a47c:	b	409ff0 <wcrtomb@plt+0x71c0>
  40a480:	add	x10, x10, x12
  40a484:	str	w11, [x19, #68]
  40a488:	mov	w12, w11
  40a48c:	tbz	w21, #0, 40a4a4 <wcrtomb@plt+0x7674>
  40a490:	cmp	x10, x9
  40a494:	b.eq	40a4c8 <wcrtomb@plt+0x7698>  // b.none
  40a498:	ldrb	w13, [x10], #1
  40a49c:	cmp	w13, #0x5c
  40a4a0:	b.ne	40a4c8 <wcrtomb@plt+0x7698>  // b.any
  40a4a4:	cmp	x10, x9
  40a4a8:	b.eq	40a4c8 <wcrtomb@plt+0x7698>  // b.none
  40a4ac:	ldrb	w13, [x10], #1
  40a4b0:	cmp	w13, #0x7d
  40a4b4:	b.ne	40a4c8 <wcrtomb@plt+0x7698>  // b.any
  40a4b8:	tbnz	w11, #31, 40a4c8 <wcrtomb@plt+0x7698>
  40a4bc:	tbnz	w12, #31, 40a4d4 <wcrtomb@plt+0x76a4>
  40a4c0:	cmp	w11, w12
  40a4c4:	b.le	40a4d4 <wcrtomb@plt+0x76a4>
  40a4c8:	tbz	w8, #21, 40a508 <wcrtomb@plt+0x76d8>
  40a4cc:	mov	w20, #0x7b                  	// #123
  40a4d0:	b	409e00 <wcrtomb@plt+0x6fd0>
  40a4d4:	cmp	w12, #0x8, lsl #12
  40a4d8:	b.ge	40a514 <wcrtomb@plt+0x76e4>  // b.tcont
  40a4dc:	sub	x8, x9, x10
  40a4e0:	strb	wzr, [x19, #120]
  40a4e4:	mov	w0, #0x104                 	// #260
  40a4e8:	stp	x10, x8, [x19, #32]
  40a4ec:	b	409e58 <wcrtomb@plt+0x7028>
  40a4f0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40a4f4:	add	x1, x1, #0x8fe
  40a4f8:	mov	w2, #0x5                   	// #5
  40a4fc:	mov	x0, xzr
  40a500:	bl	402d10 <dcgettext@plt>
  40a504:	bl	407f9c <wcrtomb@plt+0x516c>
  40a508:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40a50c:	add	x1, x1, #0x912
  40a510:	b	40a4f8 <wcrtomb@plt+0x76c8>
  40a514:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40a518:	add	x1, x1, #0x92a
  40a51c:	b	40a4f8 <wcrtomb@plt+0x76c8>
  40a520:	stp	x29, x30, [sp, #-32]!
  40a524:	str	x19, [sp, #16]
  40a528:	mov	x29, sp
  40a52c:	mov	x19, x0
  40a530:	bl	40d06c <wcrtomb@plt+0xa23c>
  40a534:	ldr	x8, [x19, #128]
  40a538:	cmp	x8, #0x106
  40a53c:	b.ne	40a568 <wcrtomb@plt+0x7738>  // b.any
  40a540:	mov	x0, x19
  40a544:	bl	409d64 <wcrtomb@plt+0x6f34>
  40a548:	str	x0, [x19, #128]
  40a54c:	mov	x0, x19
  40a550:	bl	40d06c <wcrtomb@plt+0xa23c>
  40a554:	mov	w1, #0x106                 	// #262
  40a558:	mov	w2, #0x3                   	// #3
  40a55c:	mov	x0, x19
  40a560:	bl	40c590 <wcrtomb@plt+0x9760>
  40a564:	b	40a534 <wcrtomb@plt+0x7704>
  40a568:	ldr	x19, [sp, #16]
  40a56c:	ldp	x29, x30, [sp], #32
  40a570:	ret
  40a574:	ldr	x6, [x0, #1040]
  40a578:	and	w3, w3, #0x1
  40a57c:	br	x6
  40a580:	ldr	x0, [x0, #288]
  40a584:	ret
  40a588:	ldrb	w0, [x0, #192]
  40a58c:	ret
  40a590:	sub	sp, sp, #0x80
  40a594:	stp	x20, x19, [sp, #112]
  40a598:	mov	w19, w3
  40a59c:	mov	x20, x2
  40a5a0:	stp	x29, x30, [sp, #32]
  40a5a4:	stp	x28, x27, [sp, #48]
  40a5a8:	stp	x26, x25, [sp, #64]
  40a5ac:	stp	x24, x23, [sp, #80]
  40a5b0:	stp	x22, x21, [sp, #96]
  40a5b4:	add	x29, sp, #0x20
  40a5b8:	cbz	x0, 40a5c4 <wcrtomb@plt+0x7794>
  40a5bc:	mov	x2, x20
  40a5c0:	bl	409bbc <wcrtomb@plt+0x6d8c>
  40a5c4:	mov	w0, #0x920                 	// #2336
  40a5c8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a5cc:	mov	w2, #0x920                 	// #2336
  40a5d0:	mov	x1, x20
  40a5d4:	mov	x21, x0
  40a5d8:	bl	402710 <memcpy@plt>
  40a5dc:	adrp	x9, 40c000 <wcrtomb@plt+0x91d0>
  40a5e0:	add	x9, x9, #0x458
  40a5e4:	add	x8, x21, #0x118
  40a5e8:	movi	v0.2d, #0x0
  40a5ec:	strb	wzr, [x21, #1048]
  40a5f0:	str	xzr, [x21, #320]
  40a5f4:	str	x9, [x21, #1040]
  40a5f8:	stp	q0, q0, [x8]
  40a5fc:	ldr	x8, [x21, #16]
  40a600:	stp	xzr, xzr, [x21, #344]
  40a604:	str	xzr, [x21, #336]
  40a608:	stp	q0, q0, [x21, #368]
  40a60c:	lsr	x9, x8, #58
  40a610:	cbnz	x9, 40a8b0 <wcrtomb@plt+0x7a80>
  40a614:	lsl	x0, x8, #5
  40a618:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a61c:	str	x0, [x21]
  40a620:	ldr	x8, [x20, #8]
  40a624:	cbz	x8, 40a634 <wcrtomb@plt+0x7804>
  40a628:	ldr	x1, [x20]
  40a62c:	lsl	x2, x8, #5
  40a630:	bl	402710 <memcpy@plt>
  40a634:	ldr	x8, [x20, #152]
  40a638:	lsr	x9, x8, #59
  40a63c:	cbnz	x9, 40a8b0 <wcrtomb@plt+0x7a80>
  40a640:	lsl	x0, x8, #4
  40a644:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a648:	str	x0, [x21, #144]
  40a64c:	ldr	x8, [x20, #152]
  40a650:	lsl	x9, x8, #1
  40a654:	cmp	x8, #0x0
  40a658:	str	x9, [x21, #160]
  40a65c:	b.le	40a760 <wcrtomb@plt+0x7930>
  40a660:	ldr	x8, [x20, #144]
  40a664:	mov	x24, xzr
  40a668:	mov	x22, xzr
  40a66c:	mov	w23, wzr
  40a670:	mov	w9, wzr
  40a674:	mov	w25, #0x1                   	// #1
  40a678:	mov	w26, #0x100                 	// #256
  40a67c:	mov	w27, #0x301                 	// #769
  40a680:	mov	w28, #0x102                 	// #258
  40a684:	ldr	x10, [x8, x24, lsl #3]
  40a688:	sub	x11, x10, #0x10a
  40a68c:	cmp	x11, #0x9
  40a690:	b.hi	40a710 <wcrtomb@plt+0x78e0>  // b.pmore
  40a694:	lsl	x12, x25, x11
  40a698:	tst	x12, #0xf0
  40a69c:	b.eq	40a6b8 <wcrtomb@plt+0x7888>  // b.none
  40a6a0:	ldrb	w11, [x20, #1048]
  40a6a4:	cbz	w11, 40a710 <wcrtomb@plt+0x78e0>
  40a6a8:	add	x10, x22, #0x1
  40a6ac:	str	x26, [x0, x22, lsl #3]
  40a6b0:	mov	x22, x10
  40a6b4:	b	40a734 <wcrtomb@plt+0x7904>
  40a6b8:	lsl	x11, x25, x11
  40a6bc:	tst	x11, x27
  40a6c0:	b.eq	40a710 <wcrtomb@plt+0x78e0>  // b.none
  40a6c4:	movi	v0.2d, #0xffffffffffffffff
  40a6c8:	mov	x1, sp
  40a6cc:	mov	x0, x21
  40a6d0:	stp	q0, q0, [sp]
  40a6d4:	bl	40c868 <wcrtomb@plt+0x9a38>
  40a6d8:	mov	x8, x0
  40a6dc:	ldr	x0, [x21, #144]
  40a6e0:	add	x8, x8, #0x114
  40a6e4:	add	x9, x0, x22, lsl #3
  40a6e8:	stp	x8, x28, [x9]
  40a6ec:	ldr	x8, [x20, #144]
  40a6f0:	add	x9, x24, #0x1
  40a6f4:	add	x22, x22, #0x2
  40a6f8:	ldr	x9, [x8, x9, lsl #3]
  40a6fc:	sub	x9, x9, #0x101
  40a700:	cmp	x9, #0x3
  40a704:	cinc	x24, x24, cc  // cc = lo, ul, last
  40a708:	mov	w9, #0x1                   	// #1
  40a70c:	b	40a734 <wcrtomb@plt+0x7904>
  40a710:	str	x10, [x0, x22, lsl #3]
  40a714:	ldr	x10, [x8, x24, lsl #3]
  40a718:	add	x22, x22, #0x1
  40a71c:	cmp	x10, #0x100
  40a720:	cset	w11, cc  // cc = lo, ul, last
  40a724:	cmp	x10, #0x113
  40a728:	cset	w10, gt
  40a72c:	orr	w10, w11, w10
  40a730:	orr	w23, w23, w10
  40a734:	ldr	x10, [x20, #152]
  40a738:	add	x24, x24, #0x1
  40a73c:	cmp	x24, x10
  40a740:	b.lt	40a684 <wcrtomb@plt+0x7854>  // b.tstop
  40a744:	str	x22, [x21, #152]
  40a748:	tbz	w23, #0, 40a764 <wcrtomb@plt+0x7934>
  40a74c:	tbnz	w9, #0, 40a758 <wcrtomb@plt+0x7928>
  40a750:	ldrb	w8, [x20, #1048]
  40a754:	cbz	w8, 40a764 <wcrtomb@plt+0x7934>
  40a758:	str	x21, [x20, #288]
  40a75c:	b	40a778 <wcrtomb@plt+0x7948>
  40a760:	str	xzr, [x21, #152]
  40a764:	mov	x0, x21
  40a768:	bl	40b4a0 <wcrtomb@plt+0x8670>
  40a76c:	mov	x0, x21
  40a770:	bl	402be0 <free@plt>
  40a774:	ldr	x10, [x20, #152]
  40a778:	cmp	x10, #0x1
  40a77c:	b.lt	40a7bc <wcrtomb@plt+0x798c>  // b.tstop
  40a780:	ldr	x8, [x20, #144]
  40a784:	mov	x9, x10
  40a788:	ldr	x11, [x8]
  40a78c:	sub	x12, x11, #0x10e
  40a790:	cmp	x12, #0x4
  40a794:	b.cs	40a7a4 <wcrtomb@plt+0x7974>  // b.hs, b.nlast
  40a798:	ldrb	w11, [x20, #1048]
  40a79c:	cbz	w11, 40a7b0 <wcrtomb@plt+0x7980>
  40a7a0:	b	40a850 <wcrtomb@plt+0x7a20>
  40a7a4:	sub	x11, x11, #0x112
  40a7a8:	cmp	x11, #0x2
  40a7ac:	b.cc	40a850 <wcrtomb@plt+0x7a20>  // b.lo, b.ul, b.last
  40a7b0:	subs	x9, x9, #0x1
  40a7b4:	add	x8, x8, #0x8
  40a7b8:	b.ne	40a788 <wcrtomb@plt+0x7958>  // b.any
  40a7bc:	ldrb	w8, [x20, #1050]
  40a7c0:	cbz	w8, 40a840 <wcrtomb@plt+0x7a10>
  40a7c4:	cmp	x10, #0x1
  40a7c8:	b.lt	40a808 <wcrtomb@plt+0x79d8>  // b.tstop
  40a7cc:	ldr	x8, [x20, #144]
  40a7d0:	mov	w9, wzr
  40a7d4:	ldr	x11, [x8]
  40a7d8:	cmp	x11, #0x112
  40a7dc:	b.eq	40a7f4 <wcrtomb@plt+0x79c4>  // b.none
  40a7e0:	cmp	x11, #0x113
  40a7e4:	b.eq	40a840 <wcrtomb@plt+0x7a10>  // b.none
  40a7e8:	cmp	x11, #0x10a
  40a7ec:	b.ne	40a7f8 <wcrtomb@plt+0x79c8>  // b.any
  40a7f0:	b	40a8b4 <wcrtomb@plt+0x7a84>
  40a7f4:	mov	w9, #0x1                   	// #1
  40a7f8:	subs	x10, x10, #0x1
  40a7fc:	add	x8, x8, #0x8
  40a800:	b.ne	40a7d4 <wcrtomb@plt+0x79a4>  // b.any
  40a804:	tbnz	w9, #0, 40a820 <wcrtomb@plt+0x79f0>
  40a808:	ldr	x0, [x20, #288]
  40a80c:	cbz	x0, 40a820 <wcrtomb@plt+0x79f0>
  40a810:	bl	40b4a0 <wcrtomb@plt+0x8670>
  40a814:	ldr	x0, [x20, #288]
  40a818:	bl	402be0 <free@plt>
  40a81c:	str	xzr, [x20, #288]
  40a820:	mov	x0, x20
  40a824:	bl	40b61c <wcrtomb@plt+0x87ec>
  40a828:	adrp	x8, 40c000 <wcrtomb@plt+0x91d0>
  40a82c:	add	x8, x8, #0x458
  40a830:	str	x8, [x20, #1040]
  40a834:	mov	w8, #0x1                   	// #1
  40a838:	strb	wzr, [x20, #1048]
  40a83c:	strb	w8, [x20, #192]
  40a840:	and	w1, w19, #0x1
  40a844:	mov	x0, x20
  40a848:	bl	40a8b8 <wcrtomb@plt+0x7a88>
  40a84c:	b	40a85c <wcrtomb@plt+0x7a2c>
  40a850:	adrp	x8, 40b000 <wcrtomb@plt+0x81d0>
  40a854:	add	x8, x8, #0x490
  40a858:	str	x8, [x20, #1040]
  40a85c:	ldr	x0, [x20, #288]
  40a860:	cbz	x0, 40a890 <wcrtomb@plt+0x7a60>
  40a864:	mov	w8, #0x1                   	// #1
  40a868:	strb	w8, [x20, #192]
  40a86c:	and	w1, w19, #0x1
  40a870:	ldp	x20, x19, [sp, #112]
  40a874:	ldp	x22, x21, [sp, #96]
  40a878:	ldp	x24, x23, [sp, #80]
  40a87c:	ldp	x26, x25, [sp, #64]
  40a880:	ldp	x28, x27, [sp, #48]
  40a884:	ldp	x29, x30, [sp, #32]
  40a888:	add	sp, sp, #0x80
  40a88c:	b	40a8b8 <wcrtomb@plt+0x7a88>
  40a890:	ldp	x20, x19, [sp, #112]
  40a894:	ldp	x22, x21, [sp, #96]
  40a898:	ldp	x24, x23, [sp, #80]
  40a89c:	ldp	x26, x25, [sp, #64]
  40a8a0:	ldp	x28, x27, [sp, #48]
  40a8a4:	ldp	x29, x30, [sp, #32]
  40a8a8:	add	sp, sp, #0x80
  40a8ac:	ret
  40a8b0:	bl	410ec0 <wcrtomb@plt+0xe090>
  40a8b4:	bl	402b10 <abort@plt>
  40a8b8:	sub	sp, sp, #0x100
  40a8bc:	stp	x29, x30, [sp, #160]
  40a8c0:	stp	x28, x27, [sp, #176]
  40a8c4:	stp	x26, x25, [sp, #192]
  40a8c8:	stp	x24, x23, [sp, #208]
  40a8cc:	stp	x22, x21, [sp, #224]
  40a8d0:	stp	x20, x19, [sp, #240]
  40a8d4:	ldr	x8, [x0, #176]
  40a8d8:	add	x29, sp, #0xa0
  40a8dc:	lsr	x9, x8, #58
  40a8e0:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40a8e4:	mov	x19, x0
  40a8e8:	mov	x20, #0x5555555555555555    	// #6148914691236517205
  40a8ec:	lsl	x0, x8, #5
  40a8f0:	mov	w21, w1
  40a8f4:	movk	x20, #0x555, lsl #48
  40a8f8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a8fc:	ldr	x8, [x19, #168]
  40a900:	str	x0, [sp, #48]
  40a904:	cmp	x8, x20
  40a908:	b.hi	40b48c <wcrtomb@plt+0x865c>  // b.pmore
  40a90c:	ldr	x20, [x19, #176]
  40a910:	add	x8, x8, x8, lsl #1
  40a914:	lsl	x0, x8, #3
  40a918:	and	w21, w21, #0x1
  40a91c:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a920:	str	x0, [sp, #40]
  40a924:	mov	w1, #0x105                 	// #261
  40a928:	mov	w2, #0x3                   	// #3
  40a92c:	mov	x0, x19
  40a930:	bl	40c590 <wcrtomb@plt+0x9760>
  40a934:	mov	x22, x19
  40a938:	ldr	x19, [x19, #176]
  40a93c:	strb	w21, [x22, #328]
  40a940:	lsr	x8, x19, #59
  40a944:	cbnz	x8, 40b48c <wcrtomb@plt+0x865c>
  40a948:	lsl	x0, x19, #4
  40a94c:	bl	410cb0 <wcrtomb@plt+0xde80>
  40a950:	stp	xzr, x19, [x29, #-64]
  40a954:	stur	x0, [x29, #-72]
  40a958:	ldr	x0, [x22, #152]
  40a95c:	mov	w1, #0x18                  	// #24
  40a960:	bl	410e08 <wcrtomb@plt+0xdfd8>
  40a964:	ldr	x8, [x22, #152]
  40a968:	mov	x19, x22
  40a96c:	str	x0, [x22, #320]
  40a970:	cmp	x8, #0x1
  40a974:	b.lt	40abdc <wcrtomb@plt+0x7dac>  // b.tstop
  40a978:	ldp	x21, x8, [sp, #40]
  40a97c:	mov	w24, #0x1                   	// #1
  40a980:	adrp	x27, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40a984:	mov	x22, xzr
  40a988:	add	x23, x8, x20, lsl #4
  40a98c:	add	x27, x27, #0x5c1
  40a990:	dup	v0.2d, x24
  40a994:	mov	w28, #0x18                  	// #24
  40a998:	mov	x20, x8
  40a99c:	str	q0, [sp, #64]
  40a9a0:	ldr	x8, [x19, #144]
  40a9a4:	ldr	x8, [x8, x22, lsl #3]
  40a9a8:	sub	x9, x8, #0x100
  40a9ac:	cmp	x9, #0x6
  40a9b0:	b.hi	40aa70 <wcrtomb@plt+0x7c40>  // b.pmore
  40a9b4:	adr	x10, 40a9c4 <wcrtomb@plt+0x7b94>
  40a9b8:	ldrb	w11, [x27, x9]
  40a9bc:	add	x10, x10, x11, lsl #2
  40a9c0:	br	x10
  40a9c4:	ldp	x10, x9, [x21, #-16]
  40a9c8:	sub	x11, x20, x10, lsl #4
  40a9cc:	cmp	x9, #0x1
  40a9d0:	stp	x11, x10, [x29, #-48]
  40a9d4:	b.lt	40aa28 <wcrtomb@plt+0x7bf8>  // b.tstop
  40a9d8:	mov	x25, xzr
  40a9dc:	sub	x26, x23, x9, lsl #4
  40a9e0:	ldr	x8, [x19, #320]
  40a9e4:	ldr	x9, [x26]
  40a9e8:	sub	x0, x29, #0x30
  40a9ec:	sub	x3, x29, #0x48
  40a9f0:	mov	w2, #0xffffffff            	// #-1
  40a9f4:	madd	x1, x9, x28, x8
  40a9f8:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40a9fc:	ldr	x8, [x19, #320]
  40aa00:	ldr	x9, [x26], #16
  40aa04:	sub	x0, x29, #0x48
  40aa08:	madd	x1, x9, x28, x8
  40aa0c:	bl	40d680 <wcrtomb@plt+0xa850>
  40aa10:	ldur	x8, [x21, #-8]
  40aa14:	add	x25, x25, #0x1
  40aa18:	cmp	x25, x8
  40aa1c:	b.lt	40a9e0 <wcrtomb@plt+0x7bb0>  // b.tstop
  40aa20:	ldr	x8, [x19, #144]
  40aa24:	ldr	x8, [x8, x22, lsl #3]
  40aa28:	cmp	x8, #0x103
  40aa2c:	b.eq	40abcc <wcrtomb@plt+0x7d9c>  // b.none
  40aa30:	sturb	w24, [x21, #-24]
  40aa34:	b	40abcc <wcrtomb@plt+0x7d9c>
  40aa38:	ldrb	w8, [x21, #-24]!
  40aa3c:	ldur	q0, [x21, #8]
  40aa40:	ldur	q1, [x21, #-16]
  40aa44:	ldurb	w9, [x21, #-24]
  40aa48:	add	v0.2d, v1.2d, v0.2d
  40aa4c:	orr	w8, w9, w8
  40aa50:	stur	q0, [x21, #-16]
  40aa54:	sturb	w8, [x21, #-24]
  40aa58:	b	40abcc <wcrtomb@plt+0x7d9c>
  40aa5c:	add	x8, x21, #0x18
  40aa60:	strb	w24, [x21]
  40aa64:	stp	xzr, xzr, [x21, #8]
  40aa68:	mov	x21, x8
  40aa6c:	b	40abcc <wcrtomb@plt+0x7d9c>
  40aa70:	ldr	q0, [sp, #64]
  40aa74:	cmp	x8, #0x112
  40aa78:	mov	w8, #0x1ff                 	// #511
  40aa7c:	str	x22, [x23]
  40aa80:	str	x22, [x20]
  40aa84:	str	w8, [x23, #8]
  40aa88:	str	w8, [x20, #8]
  40aa8c:	cset	w8, eq  // eq = none
  40aa90:	stur	q0, [x21, #8]
  40aa94:	add	x20, x20, #0x10
  40aa98:	strb	w8, [x21], #24
  40aa9c:	add	x23, x23, #0x10
  40aaa0:	b	40abcc <wcrtomb@plt+0x7d9c>
  40aaa4:	ldur	x10, [x21, #-16]
  40aaa8:	ldur	x9, [x21, #-32]
  40aaac:	sub	x8, x20, x10, lsl #4
  40aab0:	cmp	x9, #0x1
  40aab4:	stp	x8, x10, [x29, #-48]
  40aab8:	b.lt	40ab10 <wcrtomb@plt+0x7ce0>  // b.tstop
  40aabc:	ldur	x8, [x21, #-8]
  40aac0:	mov	x26, xzr
  40aac4:	sub	x8, x23, x8, lsl #4
  40aac8:	sub	x25, x8, x9, lsl #4
  40aacc:	ldr	x8, [x19, #320]
  40aad0:	ldr	x9, [x25]
  40aad4:	sub	x0, x29, #0x30
  40aad8:	sub	x3, x29, #0x48
  40aadc:	mov	w2, #0xffffffff            	// #-1
  40aae0:	madd	x1, x9, x28, x8
  40aae4:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40aae8:	ldr	x8, [x19, #320]
  40aaec:	ldr	x9, [x25], #16
  40aaf0:	sub	x0, x29, #0x48
  40aaf4:	madd	x1, x9, x28, x8
  40aaf8:	bl	40d680 <wcrtomb@plt+0xa850>
  40aafc:	ldur	x9, [x21, #-32]
  40ab00:	add	x26, x26, #0x1
  40ab04:	cmp	x26, x9
  40ab08:	b.lt	40aacc <wcrtomb@plt+0x7c9c>  // b.tstop
  40ab0c:	ldur	x10, [x21, #-16]
  40ab10:	ldurb	w8, [x21, #-48]
  40ab14:	cbz	w8, 40ab28 <wcrtomb@plt+0x7cf8>
  40ab18:	ldur	x11, [x21, #-40]
  40ab1c:	add	x10, x11, x10
  40ab20:	stur	x10, [x21, #-40]
  40ab24:	b	40ab2c <wcrtomb@plt+0x7cfc>
  40ab28:	sub	x20, x20, x10, lsl #4
  40ab2c:	ldurb	w10, [x21, #-24]
  40ab30:	ldur	x12, [x21, #-8]
  40ab34:	cbz	w10, 40ab44 <wcrtomb@plt+0x7d14>
  40ab38:	add	x10, x12, x9
  40ab3c:	mov	w9, #0x1                   	// #1
  40ab40:	b	40abbc <wcrtomb@plt+0x7d8c>
  40ab44:	cmp	x12, #0x1
  40ab48:	neg	x11, x9
  40ab4c:	b.lt	40abb0 <wcrtomb@plt+0x7d80>  // b.tstop
  40ab50:	sub	x8, x23, x12, lsl #4
  40ab54:	sub	x8, x8, x9, lsl #4
  40ab58:	ldur	x10, [x21, #-8]
  40ab5c:	ldr	q0, [x8, x9, lsl #4]
  40ab60:	cmp	x10, #0x2
  40ab64:	str	q0, [x8]
  40ab68:	b.lt	40ab9c <wcrtomb@plt+0x7d6c>  // b.tstop
  40ab6c:	sub	x9, x11, x12
  40ab70:	add	x9, x23, x9, lsl #4
  40ab74:	add	x9, x9, #0x10
  40ab78:	mov	w11, #0x1                   	// #1
  40ab7c:	ldur	x12, [x21, #-32]
  40ab80:	ldur	x10, [x21, #-8]
  40ab84:	add	x12, x11, x12
  40ab88:	ldr	q0, [x8, x12, lsl #4]
  40ab8c:	add	x11, x11, #0x1
  40ab90:	cmp	x11, x10
  40ab94:	str	q0, [x9], #16
  40ab98:	b.lt	40ab7c <wcrtomb@plt+0x7d4c>  // b.tstop
  40ab9c:	ldur	x11, [x21, #-32]
  40aba0:	ldurb	w9, [x21, #-24]
  40aba4:	ldurb	w8, [x21, #-48]
  40aba8:	neg	x11, x11
  40abac:	b	40abb8 <wcrtomb@plt+0x7d88>
  40abb0:	mov	w9, wzr
  40abb4:	mov	x10, x12
  40abb8:	add	x23, x23, x11, lsl #4
  40abbc:	and	w8, w8, w9
  40abc0:	stur	x10, [x21, #-32]
  40abc4:	sturb	w8, [x21, #-48]
  40abc8:	sub	x21, x21, #0x18
  40abcc:	ldr	x8, [x19, #152]
  40abd0:	add	x22, x22, #0x1
  40abd4:	cmp	x22, x8
  40abd8:	b.lt	40a9a0 <wcrtomb@plt+0x7b70>  // b.tstop
  40abdc:	mov	x20, x19
  40abe0:	ldr	x19, [x19, #176]
  40abe4:	lsr	x8, x19, #59
  40abe8:	cbnz	x8, 40b48c <wcrtomb@plt+0x865c>
  40abec:	lsl	x0, x19, #4
  40abf0:	bl	410cb0 <wcrtomb@plt+0xde80>
  40abf4:	stp	xzr, x19, [x29, #-16]
  40abf8:	stur	x0, [x29, #-24]
  40abfc:	ldr	x8, [x20, #152]
  40ac00:	mov	x19, x20
  40ac04:	str	x20, [sp, #64]
  40ac08:	cmp	x8, #0x1
  40ac0c:	b.lt	40ad34 <wcrtomb@plt+0x7f04>  // b.tstop
  40ac10:	adrp	x21, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40ac14:	mov	x22, xzr
  40ac18:	mov	w20, #0x18                  	// #24
  40ac1c:	add	x21, x21, #0x848
  40ac20:	ldr	x9, [x19, #320]
  40ac24:	madd	x10, x22, x20, x9
  40ac28:	ldr	x10, [x10, #8]
  40ac2c:	cmp	x10, #0x1
  40ac30:	b.lt	40ad24 <wcrtomb@plt+0x7ef4>  // b.tstop
  40ac34:	ldr	x10, [x19, #144]
  40ac38:	ldr	x10, [x10, x22, lsl #3]
  40ac3c:	cmp	x10, #0x100
  40ac40:	cset	w11, lt  // lt = tstop
  40ac44:	cmp	x10, #0x112
  40ac48:	cset	w12, eq  // eq = none
  40ac4c:	cmp	x10, #0x10a
  40ac50:	orr	w11, w11, w12
  40ac54:	cset	w12, eq  // eq = none
  40ac58:	cmp	x10, #0x113
  40ac5c:	orr	w11, w12, w11
  40ac60:	cset	w12, eq  // eq = none
  40ac64:	cmp	x10, #0x114
  40ac68:	orr	w11, w12, w11
  40ac6c:	cset	w12, lt  // lt = tstop
  40ac70:	eor	w11, w12, w11
  40ac74:	cmp	w11, #0x1
  40ac78:	b.ne	40ad24 <wcrtomb@plt+0x7ef4>  // b.any
  40ac7c:	sub	x8, x10, #0x10c
  40ac80:	cmp	x8, #0x5
  40ac84:	b.hi	40ac90 <wcrtomb@plt+0x7e60>  // b.pmore
  40ac88:	ldr	w26, [x21, x8, lsl #2]
  40ac8c:	b	40ac94 <wcrtomb@plt+0x7e64>
  40ac90:	mov	w26, #0x1ff                 	// #511
  40ac94:	madd	x1, x22, x20, x9
  40ac98:	mov	x0, x22
  40ac9c:	bl	40db20 <wcrtomb@plt+0xacf0>
  40aca0:	ldr	x8, [x19, #152]
  40aca4:	cmp	x8, #0x1
  40aca8:	b.lt	40ad24 <wcrtomb@plt+0x7ef4>  // b.tstop
  40acac:	mov	x27, xzr
  40acb0:	mov	x28, xzr
  40acb4:	cmp	x22, x28
  40acb8:	b.eq	40ad0c <wcrtomb@plt+0x7edc>  // b.none
  40acbc:	ldr	x8, [sp, #64]
  40acc0:	ldr	x19, [x8, #320]
  40acc4:	add	x23, x19, x27
  40acc8:	ldr	x8, [x23, #8]
  40accc:	cmp	x8, #0x1
  40acd0:	b.lt	40ad0c <wcrtomb@plt+0x7edc>  // b.tstop
  40acd4:	mov	x0, x22
  40acd8:	mov	x1, x23
  40acdc:	bl	40db20 <wcrtomb@plt+0xacf0>
  40ace0:	ands	w24, w0, w26
  40ace4:	b.eq	40ad0c <wcrtomb@plt+0x7edc>  // b.none
  40ace8:	sub	x1, x29, #0x18
  40acec:	mov	x0, x23
  40acf0:	madd	x25, x22, x20, x19
  40acf4:	bl	40d680 <wcrtomb@plt+0xa850>
  40acf8:	sub	x0, x29, #0x18
  40acfc:	mov	x1, x25
  40ad00:	mov	w2, w24
  40ad04:	mov	x3, x23
  40ad08:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40ad0c:	ldr	x19, [sp, #64]
  40ad10:	add	x28, x28, #0x1
  40ad14:	add	x27, x27, #0x18
  40ad18:	ldr	x8, [x19, #152]
  40ad1c:	cmp	x28, x8
  40ad20:	b.lt	40acb4 <wcrtomb@plt+0x7e84>  // b.tstop
  40ad24:	add	x22, x22, #0x1
  40ad28:	cmp	x22, x8
  40ad2c:	b.lt	40ac20 <wcrtomb@plt+0x7df0>  // b.tstop
  40ad30:	ldur	x0, [x29, #-24]
  40ad34:	bl	402be0 <free@plt>
  40ad38:	ldr	x0, [x19, #152]
  40ad3c:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40ad40:	ldr	x8, [x19, #152]
  40ad44:	mov	x22, x0
  40ad48:	cmp	x8, #0x1
  40ad4c:	b.lt	40add8 <wcrtomb@plt+0x7fa8>  // b.tstop
  40ad50:	ldr	x10, [x19, #320]
  40ad54:	mov	x9, xzr
  40ad58:	mov	w11, #0x18                  	// #24
  40ad5c:	mov	w12, #0x8                   	// #8
  40ad60:	madd	x13, x9, x11, x10
  40ad64:	ldr	x13, [x13, #8]
  40ad68:	cmp	x13, #0x1
  40ad6c:	b.lt	40adcc <wcrtomb@plt+0x7f9c>  // b.tstop
  40ad70:	mul	x14, x9, x11
  40ad74:	ldr	x14, [x10, x14]
  40ad78:	ldr	x15, [x14]
  40ad7c:	cmp	x15, x9
  40ad80:	b.ne	40ad94 <wcrtomb@plt+0x7f64>  // b.any
  40ad84:	ldrb	w15, [x22, x9]
  40ad88:	orr	w15, w15, #0x1
  40ad8c:	strb	w15, [x22, x9]
  40ad90:	b	40adc0 <wcrtomb@plt+0x7f90>
  40ad94:	ldrb	w16, [x22, x15]
  40ad98:	b.ge	40ada4 <wcrtomb@plt+0x7f74>  // b.tcont
  40ad9c:	orr	w16, w16, #0x2
  40ada0:	b	40adbc <wcrtomb@plt+0x7f8c>
  40ada4:	and	w17, w16, #0x8
  40ada8:	strb	w17, [x22, x15]
  40adac:	tbnz	w16, #3, 40adb8 <wcrtomb@plt+0x7f88>
  40adb0:	strb	w12, [x22, x15]
  40adb4:	b	40adc0 <wcrtomb@plt+0x7f90>
  40adb8:	orr	w16, w17, #0x4
  40adbc:	strb	w16, [x22, x15]
  40adc0:	subs	x13, x13, #0x1
  40adc4:	add	x14, x14, #0x10
  40adc8:	b.ne	40ad78 <wcrtomb@plt+0x7f48>  // b.any
  40adcc:	add	x9, x9, #0x1
  40add0:	cmp	x9, x8
  40add4:	b.ne	40ad60 <wcrtomb@plt+0x7f30>  // b.any
  40add8:	ldrb	w8, [x22]
  40addc:	mov	x20, x19
  40ade0:	orr	w21, w8, #0x10
  40ade4:	strb	w21, [x22]
  40ade8:	ldr	x19, [x19, #176]
  40adec:	lsr	x8, x19, #59
  40adf0:	cbnz	x8, 40b48c <wcrtomb@plt+0x865c>
  40adf4:	lsl	x0, x19, #4
  40adf8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40adfc:	stp	xzr, x19, [x29, #-16]
  40ae00:	stur	x0, [x29, #-24]
  40ae04:	ldr	x8, [x20, #152]
  40ae08:	lsr	x9, x8, #61
  40ae0c:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40ae10:	lsl	x0, x8, #2
  40ae14:	mov	x19, x20
  40ae18:	bl	410cb0 <wcrtomb@plt+0xde80>
  40ae1c:	ldr	x8, [x20, #152]
  40ae20:	str	x0, [x20, #336]
  40ae24:	cmp	x8, #0x1
  40ae28:	b.lt	40b05c <wcrtomb@plt+0x822c>  // b.tstop
  40ae2c:	mov	x20, xzr
  40ae30:	mov	w28, #0x18                  	// #24
  40ae34:	tbz	w21, #4, 40b050 <wcrtomb@plt+0x8220>
  40ae38:	b	40ae44 <wcrtomb@plt+0x8014>
  40ae3c:	ldrb	w21, [x22, x20]
  40ae40:	tbz	w21, #4, 40b050 <wcrtomb@plt+0x8220>
  40ae44:	ldr	x9, [x19, #336]
  40ae48:	ldr	x16, [x19, #320]
  40ae4c:	str	wzr, [x9, x20, lsl #2]
  40ae50:	madd	x27, x20, x28, x16
  40ae54:	ldr	x9, [x27, #8]!
  40ae58:	cmp	x9, #0x1
  40ae5c:	b.lt	40b048 <wcrtomb@plt+0x8218>  // b.tstop
  40ae60:	mov	x26, xzr
  40ae64:	mov	x21, xzr
  40ae68:	madd	x17, x20, x28, x16
  40ae6c:	ldr	x8, [x17]
  40ae70:	add	x10, x8, x21, lsl #4
  40ae74:	ldr	w9, [x10, #8]
  40ae78:	cbz	w9, 40af20 <wcrtomb@plt+0x80f0>
  40ae7c:	ldr	x23, [x10]
  40ae80:	ldr	x10, [x19, #144]
  40ae84:	ldr	x11, [x10, x23, lsl #3]
  40ae88:	tbnz	x11, #63, 40af10 <wcrtomb@plt+0x80e0>
  40ae8c:	ldrb	w25, [x22, x23]
  40ae90:	cmp	x26, #0x1
  40ae94:	b.lt	40aef8 <wcrtomb@plt+0x80c8>  // b.tstop
  40ae98:	and	w12, w25, #0x6
  40ae9c:	cbnz	w12, 40aef8 <wcrtomb@plt+0x80c8>
  40aea0:	mov	x12, xzr
  40aea4:	add	x13, x8, #0x8
  40aea8:	mov	w24, #0x1                   	// #1
  40aeac:	ldr	w14, [x13]
  40aeb0:	cmp	w14, w9
  40aeb4:	b.ne	40aedc <wcrtomb@plt+0x80ac>  // b.any
  40aeb8:	ldur	x19, [x13, #-8]
  40aebc:	ldrb	w14, [x22, x19]
  40aec0:	tst	w14, #0x6
  40aec4:	b.ne	40aedc <wcrtomb@plt+0x80ac>  // b.any
  40aec8:	ldr	x15, [x10, x19, lsl #3]
  40aecc:	cmp	x11, x15
  40aed0:	b.ne	40aedc <wcrtomb@plt+0x80ac>  // b.any
  40aed4:	eor	w14, w14, w25
  40aed8:	tbz	w14, #0, 40af34 <wcrtomb@plt+0x8104>
  40aedc:	add	x12, x12, #0x1
  40aee0:	cmp	x12, x26
  40aee4:	cset	w24, lt  // lt = tstop
  40aee8:	cmp	x26, x12
  40aeec:	add	x13, x13, #0x10
  40aef0:	b.ne	40aeac <wcrtomb@plt+0x807c>  // b.any
  40aef4:	ldr	x19, [sp, #64]
  40aef8:	ldr	q0, [x8, x21, lsl #4]
  40aefc:	str	q0, [x8, x26, lsl #4]
  40af00:	add	x26, x26, #0x1
  40af04:	orr	w8, w25, #0x10
  40af08:	strb	w8, [x22, x23]
  40af0c:	b	40af20 <wcrtomb@plt+0x80f0>
  40af10:	ldr	x8, [x19, #336]
  40af14:	ldr	w10, [x8, x20, lsl #2]
  40af18:	orr	w9, w10, w9
  40af1c:	str	w9, [x8, x20, lsl #2]
  40af20:	ldr	x8, [x27]
  40af24:	add	x21, x21, #0x1
  40af28:	cmp	x21, x8
  40af2c:	b.lt	40ae6c <wcrtomb@plt+0x803c>  // b.tstop
  40af30:	b	40b040 <wcrtomb@plt+0x8210>
  40af34:	tbz	w25, #0, 40af58 <wcrtomb@plt+0x8128>
  40af38:	madd	x1, x23, x28, x16
  40af3c:	mov	x0, x23
  40af40:	str	x16, [sp, #56]
  40af44:	mov	x28, x17
  40af48:	bl	40db20 <wcrtomb@plt+0xacf0>
  40af4c:	ldr	x16, [sp, #56]
  40af50:	mov	x17, x28
  40af54:	mov	w28, #0x18                  	// #24
  40af58:	madd	x0, x23, x28, x16
  40af5c:	mov	x10, x0
  40af60:	ldr	x8, [x10, #8]!
  40af64:	madd	x9, x19, x28, x16
  40af68:	cmp	x8, #0x3
  40af6c:	b.gt	40afec <wcrtomb@plt+0x81bc>
  40af70:	cmp	x8, #0x1
  40af74:	b.lt	40b01c <wcrtomb@plt+0x81ec>  // b.tstop
  40af78:	mov	x19, xzr
  40af7c:	mov	x28, xzr
  40af80:	str	w25, [sp, #12]
  40af84:	stp	x27, x20, [sp, #16]
  40af88:	str	x17, [sp, #32]
  40af8c:	str	x16, [sp, #56]
  40af90:	ldr	x8, [x0]
  40af94:	mov	x20, x0
  40af98:	mov	x2, x9
  40af9c:	mov	x27, x9
  40afa0:	add	x8, x8, x19
  40afa4:	ldp	x0, x1, [x8]
  40afa8:	mov	x25, x10
  40afac:	bl	40dbd0 <wcrtomb@plt+0xada0>
  40afb0:	ldr	x8, [x25]
  40afb4:	add	x28, x28, #0x1
  40afb8:	mov	x10, x25
  40afbc:	mov	x9, x27
  40afc0:	mov	x0, x20
  40afc4:	cmp	x28, x8
  40afc8:	add	x19, x19, #0x10
  40afcc:	b.lt	40af90 <wcrtomb@plt+0x8160>  // b.tstop
  40afd0:	ldr	x19, [sp, #64]
  40afd4:	tbz	w24, #0, 40b024 <wcrtomb@plt+0x81f4>
  40afd8:	ldr	x16, [sp, #56]
  40afdc:	ldp	x20, x17, [sp, #24]
  40afe0:	ldr	x27, [sp, #16]
  40afe4:	mov	w28, #0x18                  	// #24
  40afe8:	b	40af20 <wcrtomb@plt+0x80f0>
  40afec:	sub	x3, x29, #0x18
  40aff0:	mov	w2, #0xffffffff            	// #-1
  40aff4:	mov	x1, x9
  40aff8:	mov	x19, x16
  40affc:	mov	x23, x17
  40b000:	mov	x24, x9
  40b004:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40b008:	sub	x0, x29, #0x18
  40b00c:	mov	x1, x24
  40b010:	bl	40d680 <wcrtomb@plt+0xa850>
  40b014:	mov	x17, x23
  40b018:	mov	x16, x19
  40b01c:	ldr	x19, [sp, #64]
  40b020:	b	40af20 <wcrtomb@plt+0x80f0>
  40b024:	ldp	x20, x17, [sp, #24]
  40b028:	ldr	x16, [sp, #56]
  40b02c:	ldr	x27, [sp, #16]
  40b030:	ldr	w25, [sp, #12]
  40b034:	ldr	x8, [x17]
  40b038:	mov	w28, #0x18                  	// #24
  40b03c:	b	40aef8 <wcrtomb@plt+0x80c8>
  40b040:	ldr	x8, [x19, #152]
  40b044:	b	40b04c <wcrtomb@plt+0x821c>
  40b048:	mov	x26, xzr
  40b04c:	str	x26, [x27]
  40b050:	add	x20, x20, #0x1
  40b054:	cmp	x20, x8
  40b058:	b.lt	40ae3c <wcrtomb@plt+0x800c>  // b.tstop
  40b05c:	lsr	x9, x8, #60
  40b060:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40b064:	lsl	x0, x8, #3
  40b068:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b06c:	str	xzr, [x0]
  40b070:	ldr	x8, [x19, #152]
  40b074:	mov	x23, x0
  40b078:	cmp	x8, #0x2
  40b07c:	b.lt	40b094 <wcrtomb@plt+0x8264>  // b.tstop
  40b080:	lsl	x8, x8, #3
  40b084:	add	x0, x23, #0x8
  40b088:	sub	x2, x8, #0x8
  40b08c:	mov	w1, #0xff                  	// #255
  40b090:	bl	4029d0 <memset@plt>
  40b094:	ldr	x8, [x19, #176]
  40b098:	lsr	x9, x8, #60
  40b09c:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40b0a0:	lsl	x0, x8, #3
  40b0a4:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b0a8:	ldr	x8, [x19, #176]
  40b0ac:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40b0b0:	movk	x9, #0x555, lsl #48
  40b0b4:	cmp	x8, x9
  40b0b8:	b.hi	40b48c <wcrtomb@plt+0x865c>  // b.pmore
  40b0bc:	add	x8, x8, x8, lsl #1
  40b0c0:	mov	x24, x0
  40b0c4:	lsl	x0, x8, #3
  40b0c8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b0cc:	ldr	x8, [x19, #176]
  40b0d0:	lsr	x9, x8, #61
  40b0d4:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40b0d8:	mov	x25, x0
  40b0dc:	lsl	x0, x8, #2
  40b0e0:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b0e4:	ldrb	w8, [x19, #1048]
  40b0e8:	mov	x26, x0
  40b0ec:	cbz	w8, 40b104 <wcrtomb@plt+0x82d4>
  40b0f0:	ldr	x0, [x19, #176]
  40b0f4:	tbnz	x0, #63, 40b48c <wcrtomb@plt+0x865c>
  40b0f8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b0fc:	mov	x27, x0
  40b100:	b	40b108 <wcrtomb@plt+0x82d8>
  40b104:	mov	x27, xzr
  40b108:	ldr	x8, [x19, #152]
  40b10c:	cmp	x8, #0x1
  40b110:	b.lt	40b21c <wcrtomb@plt+0x83ec>  // b.tstop
  40b114:	mov	x8, xzr
  40b118:	mov	x21, xzr
  40b11c:	mov	w20, #0x1                   	// #1
  40b120:	mov	w28, #0x18                  	// #24
  40b124:	cmn	x8, #0x1
  40b128:	b.eq	40b1bc <wcrtomb@plt+0x838c>  // b.none
  40b12c:	ldr	x9, [x19, #144]
  40b130:	madd	x12, x8, x28, x25
  40b134:	ldr	x9, [x9, x21, lsl #3]
  40b138:	str	x9, [x24, x8, lsl #3]
  40b13c:	ldr	x10, [x19, #320]
  40b140:	madd	x9, x21, x28, x10
  40b144:	ldr	x11, [x9, #16]
  40b148:	ldr	q0, [x9]
  40b14c:	str	x11, [x12, #16]
  40b150:	str	q0, [x12]
  40b154:	ldr	x11, [x19, #336]
  40b158:	ldr	w11, [x11, x21, lsl #2]
  40b15c:	str	w11, [x26, x8, lsl #2]
  40b160:	cbz	x27, 40b170 <wcrtomb@plt+0x8340>
  40b164:	ldr	x11, [x19, #280]
  40b168:	ldrb	w11, [x11, x21]
  40b16c:	strb	w11, [x27, x8]
  40b170:	madd	x8, x21, x28, x10
  40b174:	ldr	x1, [x8, #8]
  40b178:	cmp	x1, #0x0
  40b17c:	b.le	40b1e4 <wcrtomb@plt+0x83b4>
  40b180:	ldr	x0, [x9]
  40b184:	mov	x9, x1
  40b188:	mov	x8, x0
  40b18c:	ldr	x11, [x8]
  40b190:	ldr	x10, [x23, x11, lsl #3]
  40b194:	cmn	x10, #0x1
  40b198:	b.ne	40b1ac <wcrtomb@plt+0x837c>  // b.any
  40b19c:	add	x12, x20, #0x1
  40b1a0:	str	x20, [x23, x11, lsl #3]
  40b1a4:	mov	x10, x20
  40b1a8:	mov	x20, x12
  40b1ac:	subs	x9, x9, #0x1
  40b1b0:	str	x10, [x8], #16
  40b1b4:	b.ne	40b18c <wcrtomb@plt+0x835c>  // b.any
  40b1b8:	b	40b1e8 <wcrtomb@plt+0x83b8>
  40b1bc:	ldr	x8, [x19, #320]
  40b1c0:	add	x19, x21, x21, lsl #1
  40b1c4:	ldr	x0, [x8, x19, lsl #3]
  40b1c8:	bl	402be0 <free@plt>
  40b1cc:	ldr	x8, [sp, #64]
  40b1d0:	ldr	x8, [x8, #320]
  40b1d4:	add	x8, x8, x19, lsl #3
  40b1d8:	ldr	x19, [sp, #64]
  40b1dc:	stp	xzr, xzr, [x8]
  40b1e0:	b	40b1f8 <wcrtomb@plt+0x83c8>
  40b1e4:	ldr	x0, [x9]
  40b1e8:	adrp	x3, 40d000 <wcrtomb@plt+0xa1d0>
  40b1ec:	mov	w2, #0x10                  	// #16
  40b1f0:	add	x3, x3, #0xcd0
  40b1f4:	bl	402810 <qsort@plt>
  40b1f8:	ldr	x8, [x19, #152]
  40b1fc:	add	x21, x21, #0x1
  40b200:	cmp	x21, x8
  40b204:	b.ge	40b210 <wcrtomb@plt+0x83e0>  // b.tcont
  40b208:	ldr	x8, [x23, x21, lsl #3]
  40b20c:	b	40b124 <wcrtomb@plt+0x82f4>
  40b210:	cmp	x20, #0x1
  40b214:	b.ge	40b220 <wcrtomb@plt+0x83f0>  // b.tcont
  40b218:	b	40b27c <wcrtomb@plt+0x844c>
  40b21c:	mov	w20, #0x1                   	// #1
  40b220:	mov	x8, xzr
  40b224:	mov	x9, xzr
  40b228:	ldr	x10, [x24, x9, lsl #3]
  40b22c:	ldr	x11, [x19, #144]
  40b230:	add	x12, x25, x8
  40b234:	str	x10, [x11, x9, lsl #3]
  40b238:	ldr	x10, [x19, #320]
  40b23c:	ldr	x11, [x12, #16]
  40b240:	ldr	q0, [x12]
  40b244:	add	x10, x10, x8
  40b248:	str	x11, [x10, #16]
  40b24c:	str	q0, [x10]
  40b250:	ldr	w10, [x26, x9, lsl #2]
  40b254:	ldr	x11, [x19, #336]
  40b258:	str	w10, [x11, x9, lsl #2]
  40b25c:	cbz	x27, 40b26c <wcrtomb@plt+0x843c>
  40b260:	ldrb	w10, [x27, x9]
  40b264:	ldr	x11, [x19, #280]
  40b268:	strb	w10, [x11, x9]
  40b26c:	add	x9, x9, #0x1
  40b270:	cmp	x20, x9
  40b274:	add	x8, x8, #0x18
  40b278:	b.ne	40b228 <wcrtomb@plt+0x83f8>  // b.any
  40b27c:	mov	x0, x24
  40b280:	str	x20, [x19, #176]
  40b284:	str	x20, [x19, #152]
  40b288:	bl	402be0 <free@plt>
  40b28c:	mov	x0, x25
  40b290:	bl	402be0 <free@plt>
  40b294:	mov	x0, x26
  40b298:	bl	402be0 <free@plt>
  40b29c:	mov	x0, x27
  40b2a0:	bl	402be0 <free@plt>
  40b2a4:	mov	x0, x23
  40b2a8:	bl	402be0 <free@plt>
  40b2ac:	ldur	x0, [x29, #-24]
  40b2b0:	bl	402be0 <free@plt>
  40b2b4:	mov	x0, x22
  40b2b8:	bl	402be0 <free@plt>
  40b2bc:	mov	w0, #0x10                  	// #16
  40b2c0:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b2c4:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40b2c8:	ldr	q0, [x8, #2144]
  40b2cc:	stur	x0, [x29, #-48]
  40b2d0:	sub	x2, x29, #0x30
  40b2d4:	mov	w1, #0x1ff                 	// #511
  40b2d8:	mov	x0, xzr
  40b2dc:	stur	q0, [x29, #-40]
  40b2e0:	bl	40d708 <wcrtomb@plt+0xa8d8>
  40b2e4:	ldr	x8, [x19, #152]
  40b2e8:	lsr	x9, x8, #61
  40b2ec:	cbnz	x9, 40b48c <wcrtomb@plt+0x865c>
  40b2f0:	lsl	x0, x8, #2
  40b2f4:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b2f8:	ldr	x8, [x19, #152]
  40b2fc:	str	x0, [x19, #344]
  40b300:	cmp	x8, #0x1
  40b304:	b.lt	40b3c8 <wcrtomb@plt+0x8598>  // b.tstop
  40b308:	mov	x8, xzr
  40b30c:	mov	w9, #0x49                  	// #73
  40b310:	mov	w10, #0x18                  	// #24
  40b314:	str	wzr, [x0, x8, lsl #2]
  40b318:	ldr	x12, [x19, #336]
  40b31c:	ldr	w11, [x12, x8, lsl #2]
  40b320:	eor	w11, w11, w11, lsr #2
  40b324:	tst	w11, w9
  40b328:	cset	w11, ne  // ne = any
  40b32c:	lsl	w11, w11, #2
  40b330:	str	w11, [x0, x8, lsl #2]
  40b334:	ldr	w12, [x12, x8, lsl #2]
  40b338:	eor	w12, w12, w12, lsr #1
  40b33c:	tst	w12, w9
  40b340:	b.eq	40b34c <wcrtomb@plt+0x851c>  // b.none
  40b344:	orr	w11, w11, #0x2
  40b348:	str	w11, [x0, x8, lsl #2]
  40b34c:	ldr	x14, [x19, #320]
  40b350:	madd	x12, x8, x10, x14
  40b354:	ldr	x12, [x12, #8]
  40b358:	cmp	x12, #0x1
  40b35c:	b.lt	40b3b0 <wcrtomb@plt+0x8580>  // b.tstop
  40b360:	mul	x15, x8, x10
  40b364:	ldr	x14, [x14, x15]
  40b368:	mov	x13, xzr
  40b36c:	add	x14, x14, #0x8
  40b370:	ldr	w15, [x14]
  40b374:	eor	w16, w15, w15, lsr #2
  40b378:	tst	w16, w9
  40b37c:	b.eq	40b38c <wcrtomb@plt+0x855c>  // b.none
  40b380:	orr	w11, w11, #0x4
  40b384:	str	w11, [x0, x8, lsl #2]
  40b388:	ldr	w15, [x14]
  40b38c:	eor	w15, w15, w15, lsr #1
  40b390:	tst	w15, w9
  40b394:	b.eq	40b3a0 <wcrtomb@plt+0x8570>  // b.none
  40b398:	orr	w11, w11, #0x2
  40b39c:	str	w11, [x0, x8, lsl #2]
  40b3a0:	add	x13, x13, #0x1
  40b3a4:	cmp	x13, x12
  40b3a8:	add	x14, x14, #0x10
  40b3ac:	b.lt	40b370 <wcrtomb@plt+0x8540>  // b.tstop
  40b3b0:	ldr	x11, [x19, #152]
  40b3b4:	add	x8, x8, #0x1
  40b3b8:	cmp	x8, x11
  40b3bc:	b.ge	40b3c8 <wcrtomb@plt+0x8598>  // b.tcont
  40b3c0:	ldr	x0, [x19, #344]
  40b3c4:	b	40b314 <wcrtomb@plt+0x84e4>
  40b3c8:	ldur	x8, [x29, #-40]
  40b3cc:	cmp	x8, #0x1
  40b3d0:	b.lt	40b40c <wcrtomb@plt+0x85dc>  // b.tstop
  40b3d4:	ldr	x9, [x19, #344]
  40b3d8:	ldur	x10, [x29, #-48]
  40b3dc:	mov	w20, wzr
  40b3e0:	ldr	x11, [x10], #16
  40b3e4:	subs	x8, x8, #0x1
  40b3e8:	ldr	w11, [x9, x11, lsl #2]
  40b3ec:	orr	w20, w11, w20
  40b3f0:	b.ne	40b3e0 <wcrtomb@plt+0x85b0>  // b.any
  40b3f4:	tbz	w20, #2, 40b410 <wcrtomb@plt+0x85e0>
  40b3f8:	sub	x1, x29, #0x30
  40b3fc:	mov	w2, #0x4                   	// #4
  40b400:	mov	x0, x19
  40b404:	bl	40d774 <wcrtomb@plt+0xa944>
  40b408:	b	40b410 <wcrtomb@plt+0x85e0>
  40b40c:	mov	w20, wzr
  40b410:	eor	w2, w20, #0x7
  40b414:	sub	x1, x29, #0x30
  40b418:	mov	x0, x19
  40b41c:	bl	40d774 <wcrtomb@plt+0xa944>
  40b420:	sxtw	x8, w0
  40b424:	str	w0, [x19, #364]
  40b428:	str	x8, [x19, #400]
  40b42c:	tbz	w20, #1, 40b444 <wcrtomb@plt+0x8614>
  40b430:	sub	x1, x29, #0x30
  40b434:	mov	w2, #0x2                   	// #2
  40b438:	mov	x0, x19
  40b43c:	bl	40d774 <wcrtomb@plt+0xa944>
  40b440:	str	w0, [x19, #364]
  40b444:	add	w8, w0, #0x1
  40b448:	ldr	x0, [sp, #48]
  40b44c:	str	w8, [x19, #364]
  40b450:	str	wzr, [x19, #360]
  40b454:	bl	402be0 <free@plt>
  40b458:	ldr	x0, [sp, #40]
  40b45c:	bl	402be0 <free@plt>
  40b460:	ldur	x0, [x29, #-72]
  40b464:	bl	402be0 <free@plt>
  40b468:	ldur	x0, [x29, #-48]
  40b46c:	ldp	x20, x19, [sp, #240]
  40b470:	ldp	x22, x21, [sp, #224]
  40b474:	ldp	x24, x23, [sp, #208]
  40b478:	ldp	x26, x25, [sp, #192]
  40b47c:	ldp	x28, x27, [sp, #176]
  40b480:	ldp	x29, x30, [sp, #160]
  40b484:	add	sp, sp, #0x100
  40b488:	b	402be0 <free@plt>
  40b48c:	bl	410ec0 <wcrtomb@plt+0xe090>
  40b490:	mov	x0, x1
  40b494:	mov	w8, #0x1                   	// #1
  40b498:	strb	w8, [x5]
  40b49c:	ret
  40b4a0:	stp	x29, x30, [sp, #-48]!
  40b4a4:	stp	x20, x19, [sp, #32]
  40b4a8:	mov	x19, x0
  40b4ac:	ldr	x0, [x0]
  40b4b0:	str	x21, [sp, #16]
  40b4b4:	mov	x29, sp
  40b4b8:	bl	402be0 <free@plt>
  40b4bc:	ldr	x0, [x19, #144]
  40b4c0:	bl	402be0 <free@plt>
  40b4c4:	ldrb	w8, [x19, #1048]
  40b4c8:	cbz	w8, 40b4d4 <wcrtomb@plt+0x86a4>
  40b4cc:	mov	x0, x19
  40b4d0:	bl	40b61c <wcrtomb@plt+0x87ec>
  40b4d4:	ldr	x0, [x19, #336]
  40b4d8:	bl	402be0 <free@plt>
  40b4dc:	ldr	x0, [x19, #344]
  40b4e0:	bl	402be0 <free@plt>
  40b4e4:	ldr	x8, [x19, #304]
  40b4e8:	cmp	x8, #0x1
  40b4ec:	b.lt	40b52c <wcrtomb@plt+0x86fc>  // b.tstop
  40b4f0:	mov	x20, xzr
  40b4f4:	mov	x21, xzr
  40b4f8:	ldr	x8, [x19, #296]
  40b4fc:	add	x8, x8, x20
  40b500:	ldr	x0, [x8, #8]
  40b504:	bl	402be0 <free@plt>
  40b508:	ldr	x8, [x19, #296]
  40b50c:	add	x8, x8, x20
  40b510:	ldr	x0, [x8, #48]
  40b514:	bl	402be0 <free@plt>
  40b518:	ldr	x8, [x19, #304]
  40b51c:	add	x21, x21, #0x1
  40b520:	add	x20, x20, #0x50
  40b524:	cmp	x21, x8
  40b528:	b.lt	40b4f8 <wcrtomb@plt+0x86c8>  // b.tstop
  40b52c:	ldr	x0, [x19, #296]
  40b530:	bl	402be0 <free@plt>
  40b534:	ldr	x0, [x19, #320]
  40b538:	cbz	x0, 40b58c <wcrtomb@plt+0x875c>
  40b53c:	ldr	x8, [x19, #152]
  40b540:	cmp	x8, #0x1
  40b544:	b.lt	40b588 <wcrtomb@plt+0x8758>  // b.tstop
  40b548:	ldr	x0, [x0]
  40b54c:	bl	402be0 <free@plt>
  40b550:	ldr	x8, [x19, #152]
  40b554:	cmp	x8, #0x2
  40b558:	b.lt	40b584 <wcrtomb@plt+0x8754>  // b.tstop
  40b55c:	mov	w20, #0x1                   	// #1
  40b560:	mov	w21, #0x18                  	// #24
  40b564:	ldr	x8, [x19, #320]
  40b568:	ldr	x0, [x8, x21]
  40b56c:	bl	402be0 <free@plt>
  40b570:	ldr	x8, [x19, #152]
  40b574:	add	x20, x20, #0x1
  40b578:	add	x21, x21, #0x18
  40b57c:	cmp	x20, x8
  40b580:	b.lt	40b564 <wcrtomb@plt+0x8734>  // b.tstop
  40b584:	ldr	x0, [x19, #320]
  40b588:	bl	402be0 <free@plt>
  40b58c:	ldr	x8, [x19, #368]
  40b590:	cbz	x8, 40b5ec <wcrtomb@plt+0x87bc>
  40b594:	ldr	x9, [x19, #352]
  40b598:	cmp	x9, #0x1
  40b59c:	b.lt	40b5cc <wcrtomb@plt+0x879c>  // b.tstop
  40b5a0:	mov	x20, xzr
  40b5a4:	ldr	x0, [x8, x20, lsl #3]
  40b5a8:	bl	402be0 <free@plt>
  40b5ac:	ldr	x8, [x19, #376]
  40b5b0:	ldr	x0, [x8, x20, lsl #3]
  40b5b4:	bl	402be0 <free@plt>
  40b5b8:	ldr	x9, [x19, #352]
  40b5bc:	ldr	x8, [x19, #368]
  40b5c0:	add	x20, x20, #0x1
  40b5c4:	cmp	x20, x9
  40b5c8:	b.lt	40b5a4 <wcrtomb@plt+0x8774>  // b.tstop
  40b5cc:	sub	x0, x8, #0x10
  40b5d0:	bl	402be0 <free@plt>
  40b5d4:	ldr	x0, [x19, #376]
  40b5d8:	bl	402be0 <free@plt>
  40b5dc:	ldr	x0, [x19, #392]
  40b5e0:	bl	402be0 <free@plt>
  40b5e4:	ldr	x0, [x19, #384]
  40b5e8:	bl	402be0 <free@plt>
  40b5ec:	ldr	x0, [x19, #288]
  40b5f0:	cbz	x0, 40b60c <wcrtomb@plt+0x87dc>
  40b5f4:	bl	40b4a0 <wcrtomb@plt+0x8670>
  40b5f8:	ldr	x0, [x19, #288]
  40b5fc:	ldp	x20, x19, [sp, #32]
  40b600:	ldr	x21, [sp, #16]
  40b604:	ldp	x29, x30, [sp], #48
  40b608:	b	402be0 <free@plt>
  40b60c:	ldp	x20, x19, [sp, #32]
  40b610:	ldr	x21, [sp, #16]
  40b614:	ldp	x29, x30, [sp], #48
  40b618:	ret
  40b61c:	stp	x29, x30, [sp, #-32]!
  40b620:	stp	x20, x19, [sp, #16]
  40b624:	mov	x19, x0
  40b628:	ldr	x0, [x0, #280]
  40b62c:	mov	x29, sp
  40b630:	bl	402be0 <free@plt>
  40b634:	ldr	x0, [x19, #96]
  40b638:	bl	402be0 <free@plt>
  40b63c:	ldr	x0, [x19, #408]
  40b640:	bl	402be0 <free@plt>
  40b644:	ldr	x8, [x19, #432]
  40b648:	cbz	x8, 40b684 <wcrtomb@plt+0x8854>
  40b64c:	ldr	x9, [x19, #352]
  40b650:	tbnz	x9, #63, 40b674 <wcrtomb@plt+0x8844>
  40b654:	mov	x20, #0xffffffffffffffff    	// #-1
  40b658:	ldr	x0, [x8, x20, lsl #3]
  40b65c:	bl	402be0 <free@plt>
  40b660:	ldr	x9, [x19, #352]
  40b664:	ldr	x8, [x19, #432]
  40b668:	add	x20, x20, #0x1
  40b66c:	cmp	x20, x9
  40b670:	b.lt	40b658 <wcrtomb@plt+0x8828>  // b.tstop
  40b674:	ldp	x20, x19, [sp, #16]
  40b678:	sub	x0, x8, #0x10
  40b67c:	ldp	x29, x30, [sp], #32
  40b680:	b	402be0 <free@plt>
  40b684:	ldp	x20, x19, [sp, #16]
  40b688:	ldp	x29, x30, [sp], #32
  40b68c:	ret
  40b690:	sub	sp, sp, #0xa0
  40b694:	stp	x29, x30, [sp, #64]
  40b698:	stp	x28, x27, [sp, #80]
  40b69c:	stp	x26, x25, [sp, #96]
  40b6a0:	stp	x24, x23, [sp, #112]
  40b6a4:	stp	x22, x21, [sp, #128]
  40b6a8:	stp	x20, x19, [sp, #144]
  40b6ac:	ldr	x19, [x0, #152]
  40b6b0:	add	x29, sp, #0x40
  40b6b4:	cmp	x19, #0x3
  40b6b8:	b.lt	40be60 <wcrtomb@plt+0x9030>  // b.tstop
  40b6bc:	str	xzr, [sp, #16]
  40b6c0:	ldrb	w9, [x0, #1048]
  40b6c4:	ldrb	w8, [x0, #457]
  40b6c8:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40b6cc:	mov	x23, x0
  40b6d0:	eor	w9, w9, #0x1
  40b6d4:	mov	x28, xzr
  40b6d8:	mov	w12, #0x1                   	// #1
  40b6dc:	mov	w21, #0x2                   	// #2
  40b6e0:	add	x24, x24, #0xdb3
  40b6e4:	and	w8, w9, w8
  40b6e8:	stur	w8, [x29, #-20]
  40b6ec:	str	x0, [sp, #32]
  40b6f0:	ldr	x25, [x23, #144]
  40b6f4:	add	x20, x25, x12, lsl #3
  40b6f8:	ldr	x22, [x20]
  40b6fc:	sub	x8, x22, #0x100
  40b700:	cmp	x8, #0x13
  40b704:	b.hi	40b750 <wcrtomb@plt+0x8920>  // b.pmore
  40b708:	adrp	x11, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40b70c:	add	x11, x11, #0x5c8
  40b710:	adr	x9, 40b720 <wcrtomb@plt+0x88f0>
  40b714:	ldrh	w10, [x11, x8, lsl #1]
  40b718:	add	x9, x9, x10, lsl #2
  40b71c:	br	x9
  40b720:	mov	w1, #0x2                   	// #2
  40b724:	mov	x0, x28
  40b728:	mov	x19, x12
  40b72c:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40b730:	mov	x12, x19
  40b734:	mov	x28, x0
  40b738:	ldr	x19, [x23, #152]
  40b73c:	add	x21, x12, #0x2
  40b740:	add	x12, x12, #0x1
  40b744:	cmp	x21, x19
  40b748:	b.lt	40b6f0 <wcrtomb@plt+0x88c0>  // b.tstop
  40b74c:	b	40bee4 <wcrtomb@plt+0x90b4>
  40b750:	cmn	x22, #0x1
  40b754:	b.eq	40be7c <wcrtomb@plt+0x904c>  // b.none
  40b758:	cbz	x22, 40bec4 <wcrtomb@plt+0x9094>
  40b75c:	subs	x26, x22, #0x114
  40b760:	b.lt	40bc98 <wcrtomb@plt+0x8e68>  // b.tstop
  40b764:	ldr	x27, [x23]
  40b768:	mov	x22, xzr
  40b76c:	mov	w23, #0x1                   	// #1
  40b770:	ubfx	x8, x22, #6, #26
  40b774:	add	x9, x27, x26, lsl #5
  40b778:	ldr	x8, [x9, w8, uxtw #3]
  40b77c:	lsr	x8, x8, x22
  40b780:	tbnz	w8, #0, 40bc34 <wcrtomb@plt+0x8e04>
  40b784:	add	x22, x22, #0x1
  40b788:	cmp	w22, #0x100
  40b78c:	add	x23, x23, #0x1
  40b790:	b.ne	40b770 <wcrtomb@plt+0x8940>  // b.any
  40b794:	mov	w1, #0x2                   	// #2
  40b798:	mov	x0, x28
  40b79c:	mov	x19, x12
  40b7a0:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40b7a4:	ldr	x23, [sp, #32]
  40b7a8:	b	40b730 <wcrtomb@plt+0x8900>
  40b7ac:	ldr	x8, [x28]
  40b7b0:	ldr	x0, [x8]
  40b7b4:	cbz	x0, 40b7d4 <wcrtomb@plt+0x89a4>
  40b7b8:	mov	x20, x12
  40b7bc:	add	x19, x8, #0x8
  40b7c0:	bl	402be0 <free@plt>
  40b7c4:	ldr	x0, [x19], #8
  40b7c8:	cbnz	x0, 40b7c0 <wcrtomb@plt+0x8990>
  40b7cc:	ldr	x8, [x28]
  40b7d0:	mov	x12, x20
  40b7d4:	str	xzr, [x8]
  40b7d8:	ldr	x8, [x28, #24]
  40b7dc:	strb	wzr, [x8]
  40b7e0:	ldr	x8, [x28, #16]
  40b7e4:	strb	wzr, [x8]
  40b7e8:	ldr	x8, [x28, #8]
  40b7ec:	strb	wzr, [x8]
  40b7f0:	strh	wzr, [x28, #32]
  40b7f4:	b	40b738 <wcrtomb@plt+0x8908>
  40b7f8:	ldr	x19, [x28, #40]
  40b7fc:	ldr	x1, [x28]
  40b800:	mov	x21, x12
  40b804:	ldr	x0, [x19]
  40b808:	bl	40c0b4 <wcrtomb@plt+0x9284>
  40b80c:	ldr	x8, [x19, #16]
  40b810:	str	x0, [x19]
  40b814:	ldrb	w9, [x8]
  40b818:	cbz	w9, 40b894 <wcrtomb@plt+0x8a64>
  40b81c:	ldr	x22, [x28, #8]
  40b820:	ldrb	w9, [x22]
  40b824:	cbz	w9, 40b894 <wcrtomb@plt+0x8a64>
  40b828:	mov	x0, x8
  40b82c:	bl	402750 <strlen@plt>
  40b830:	mov	x23, x0
  40b834:	mov	x0, x22
  40b838:	bl	402750 <strlen@plt>
  40b83c:	mov	x20, x24
  40b840:	add	x24, x0, x23
  40b844:	mov	x22, x0
  40b848:	mov	x0, x24
  40b84c:	bl	410cb0 <wcrtomb@plt+0xde80>
  40b850:	ldr	x1, [x19, #16]
  40b854:	mov	x2, x23
  40b858:	mov	x25, x0
  40b85c:	bl	402710 <memcpy@plt>
  40b860:	ldr	x1, [x28, #8]
  40b864:	add	x0, x25, x23
  40b868:	ldr	x23, [sp, #32]
  40b86c:	mov	x2, x22
  40b870:	bl	402710 <memcpy@plt>
  40b874:	ldr	x0, [x19]
  40b878:	mov	x1, x25
  40b87c:	mov	x2, x24
  40b880:	mov	x24, x20
  40b884:	bl	40c10c <wcrtomb@plt+0x92dc>
  40b888:	str	x0, [x19]
  40b88c:	mov	x0, x25
  40b890:	bl	402be0 <free@plt>
  40b894:	ldr	x8, [x19, #24]
  40b898:	ldrb	w8, [x8]
  40b89c:	cbz	w8, 40b8b0 <wcrtomb@plt+0x8a80>
  40b8a0:	ldr	x0, [x19, #8]
  40b8a4:	ldr	x1, [x28, #8]
  40b8a8:	bl	40c224 <wcrtomb@plt+0x93f4>
  40b8ac:	str	x0, [x19, #8]
  40b8b0:	ldr	x8, [x28, #24]
  40b8b4:	ldrb	w8, [x8]
  40b8b8:	cbnz	w8, 40b8c4 <wcrtomb@plt+0x8a94>
  40b8bc:	ldr	x8, [x19, #16]
  40b8c0:	strb	wzr, [x8]
  40b8c4:	ldr	x0, [x19, #16]
  40b8c8:	ldr	x1, [x28, #16]
  40b8cc:	bl	40c224 <wcrtomb@plt+0x93f4>
  40b8d0:	ldr	x8, [x19, #24]
  40b8d4:	str	x0, [x19, #16]
  40b8d8:	ldrb	w9, [x8]
  40b8dc:	cbnz	w9, 40b8e8 <wcrtomb@plt+0x8ab8>
  40b8e0:	ldrb	w9, [x19, #32]
  40b8e4:	cbz	w9, 40be14 <wcrtomb@plt+0x8fe4>
  40b8e8:	ldr	x1, [x28, #24]
  40b8ec:	ldrb	w9, [x1]
  40b8f0:	cbnz	w9, 40b8fc <wcrtomb@plt+0x8acc>
  40b8f4:	ldrb	w9, [x28, #33]
  40b8f8:	cbz	w9, 40be14 <wcrtomb@plt+0x8fe4>
  40b8fc:	mov	x0, x8
  40b900:	bl	40c224 <wcrtomb@plt+0x93f4>
  40b904:	str	x0, [x19, #24]
  40b908:	ldrb	w9, [x28, #33]
  40b90c:	b	40be20 <wcrtomb@plt+0x8ff0>
  40b910:	ldr	x8, [x28, #24]
  40b914:	strb	wzr, [x8]
  40b918:	b	40b738 <wcrtomb@plt+0x8908>
  40b91c:	mov	w1, #0x2                   	// #2
  40b920:	mov	x0, x28
  40b924:	mov	x19, x12
  40b928:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40b92c:	mov	w9, #0x1                   	// #1
  40b930:	mov	w8, #0x1                   	// #1
  40b934:	mov	x12, x19
  40b938:	mov	x28, x0
  40b93c:	str	w8, [sp, #16]
  40b940:	strb	w9, [x0, #33]
  40b944:	b	40b738 <wcrtomb@plt+0x8908>
  40b948:	ldr	x19, [x28, #40]
  40b94c:	ldr	x1, [x28, #24]
  40b950:	str	x12, [sp, #24]
  40b954:	ldr	x22, [x19, #24]
  40b958:	mov	x0, x22
  40b95c:	bl	402bb0 <strcmp@plt>
  40b960:	cbz	w0, 40b99c <wcrtomb@plt+0x8b6c>
  40b964:	strb	wzr, [x22]
  40b968:	strh	wzr, [x19, #32]
  40b96c:	b	40b9bc <wcrtomb@plt+0x8b8c>
  40b970:	mov	w1, #0x2                   	// #2
  40b974:	mov	x0, x28
  40b978:	mov	x19, x12
  40b97c:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40b980:	mov	w9, #0x1                   	// #1
  40b984:	mov	w8, #0x1                   	// #1
  40b988:	mov	x12, x19
  40b98c:	mov	x28, x0
  40b990:	str	w8, [sp, #20]
  40b994:	strb	w9, [x0, #32]
  40b998:	b	40b738 <wcrtomb@plt+0x8908>
  40b99c:	ldrb	w8, [x28, #32]
  40b9a0:	ldrb	w9, [x19, #32]
  40b9a4:	and	w8, w9, w8
  40b9a8:	strb	w8, [x19, #32]
  40b9ac:	ldrb	w8, [x28, #33]
  40b9b0:	ldrb	w9, [x19, #33]
  40b9b4:	and	w8, w9, w8
  40b9b8:	strb	w8, [x19, #33]
  40b9bc:	ldr	x8, [x19, #8]
  40b9c0:	ldrb	w10, [x8]
  40b9c4:	cbz	w10, 40b9fc <wcrtomb@plt+0x8bcc>
  40b9c8:	ldr	x9, [x28, #8]
  40b9cc:	ldrb	w11, [x9]
  40b9d0:	cmp	w10, w11
  40b9d4:	b.ne	40b9fc <wcrtomb@plt+0x8bcc>  // b.any
  40b9d8:	add	x10, x8, #0x1
  40b9dc:	add	x9, x9, #0x1
  40b9e0:	mov	x8, x10
  40b9e4:	ldrb	w10, [x10]
  40b9e8:	cbz	w10, 40b9fc <wcrtomb@plt+0x8bcc>
  40b9ec:	ldrb	w11, [x9], #1
  40b9f0:	cmp	w10, w11
  40b9f4:	add	x10, x8, #0x1
  40b9f8:	b.eq	40b9e0 <wcrtomb@plt+0x8bb0>  // b.none
  40b9fc:	strb	wzr, [x8]
  40ba00:	ldr	x22, [x19, #16]
  40ba04:	mov	x0, x22
  40ba08:	bl	402750 <strlen@plt>
  40ba0c:	ldr	x24, [x28, #16]
  40ba10:	mov	x23, x0
  40ba14:	mov	x0, x24
  40ba18:	bl	402750 <strlen@plt>
  40ba1c:	cmp	x23, x0
  40ba20:	csel	x9, x0, x23, gt
  40ba24:	cmp	x9, #0x1
  40ba28:	b.lt	40ba90 <wcrtomb@plt+0x8c60>  // b.tstop
  40ba2c:	add	x10, x24, x0
  40ba30:	mov	x8, xzr
  40ba34:	sub	x10, x10, #0x1
  40ba38:	sub	x11, x23, #0x1
  40ba3c:	ldrb	w12, [x22, x11]
  40ba40:	ldrb	w13, [x10]
  40ba44:	cmp	w12, w13
  40ba48:	b.ne	40ba64 <wcrtomb@plt+0x8c34>  // b.any
  40ba4c:	add	x8, x8, #0x1
  40ba50:	sub	x10, x10, #0x1
  40ba54:	cmp	x8, x9
  40ba58:	sub	x11, x11, #0x1
  40ba5c:	b.lt	40ba3c <wcrtomb@plt+0x8c0c>  // b.tstop
  40ba60:	mov	x8, x9
  40ba64:	cbz	x8, 40ba94 <wcrtomb@plt+0x8c64>
  40ba68:	mov	x9, xzr
  40ba6c:	sub	x10, x23, x8
  40ba70:	add	x11, x22, x10
  40ba74:	ldrb	w11, [x11, x9]
  40ba78:	strb	w11, [x22, x9]
  40ba7c:	ldr	x22, [x19, #16]
  40ba80:	add	x9, x9, #0x1
  40ba84:	cmp	x8, x9
  40ba88:	b.ne	40ba70 <wcrtomb@plt+0x8c40>  // b.any
  40ba8c:	b	40ba94 <wcrtomb@plt+0x8c64>
  40ba90:	mov	x8, xzr
  40ba94:	strb	wzr, [x22, x8]
  40ba98:	stp	x28, x19, [sp]
  40ba9c:	ldr	x19, [x19]
  40baa0:	ldr	x21, [x28]
  40baa4:	mov	w0, #0x8                   	// #8
  40baa8:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40baac:	ldr	x23, [x19]
  40bab0:	mov	x22, x0
  40bab4:	cbz	x23, 40bbd0 <wcrtomb@plt+0x8da0>
  40bab8:	mov	x8, xzr
  40babc:	mov	x28, x19
  40bac0:	stur	x19, [x29, #-16]
  40bac4:	ldr	x24, [x21]
  40bac8:	cbz	x24, 40bbc0 <wcrtomb@plt+0x8d90>
  40bacc:	mov	x19, xzr
  40bad0:	stur	x8, [x29, #-8]
  40bad4:	mov	w0, #0x8                   	// #8
  40bad8:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40badc:	ldrb	w8, [x23]
  40bae0:	mov	x25, x0
  40bae4:	cbz	w8, 40bb74 <wcrtomb@plt+0x8d44>
  40bae8:	and	w26, w8, #0xff
  40baec:	mov	x0, x24
  40baf0:	mov	w1, w26
  40baf4:	bl	402c20 <strchr@plt>
  40baf8:	cbz	x0, 40bb6c <wcrtomb@plt+0x8d3c>
  40bafc:	ldrb	w20, [x23, #1]
  40bb00:	mov	x27, xzr
  40bb04:	cbz	w20, 40bb38 <wcrtomb@plt+0x8d08>
  40bb08:	mov	x8, xzr
  40bb0c:	add	x9, x0, #0x1
  40bb10:	mov	w10, w20
  40bb14:	ldrb	w11, [x9, x8]
  40bb18:	cmp	w11, w10, uxtb
  40bb1c:	b.ne	40bb30 <wcrtomb@plt+0x8d00>  // b.any
  40bb20:	add	x10, x23, x8
  40bb24:	ldrb	w10, [x10, #2]
  40bb28:	add	x8, x8, #0x1
  40bb2c:	cbnz	w10, 40bb14 <wcrtomb@plt+0x8ce4>
  40bb30:	add	x8, x8, #0x1
  40bb34:	b	40bb3c <wcrtomb@plt+0x8d0c>
  40bb38:	mov	w8, #0x1                   	// #1
  40bb3c:	cmp	x8, x27
  40bb40:	add	x0, x0, #0x1
  40bb44:	mov	w1, w26
  40bb48:	csel	x27, x8, x27, gt
  40bb4c:	bl	402c20 <strchr@plt>
  40bb50:	cbnz	x0, 40bb04 <wcrtomb@plt+0x8cd4>
  40bb54:	cbz	x27, 40bb6c <wcrtomb@plt+0x8d3c>
  40bb58:	mov	x0, x25
  40bb5c:	mov	x1, x23
  40bb60:	mov	x2, x27
  40bb64:	bl	40c10c <wcrtomb@plt+0x92dc>
  40bb68:	mov	x25, x0
  40bb6c:	ldrb	w8, [x23, #1]!
  40bb70:	cbnz	w8, 40bae8 <wcrtomb@plt+0x8cb8>
  40bb74:	mov	x0, x22
  40bb78:	mov	x1, x25
  40bb7c:	bl	40c0b4 <wcrtomb@plt+0x9284>
  40bb80:	ldr	x8, [x25]
  40bb84:	mov	x22, x0
  40bb88:	cbz	x8, 40bba0 <wcrtomb@plt+0x8d70>
  40bb8c:	add	x20, x25, #0x8
  40bb90:	mov	x0, x8
  40bb94:	bl	402be0 <free@plt>
  40bb98:	ldr	x8, [x20], #8
  40bb9c:	cbnz	x8, 40bb90 <wcrtomb@plt+0x8d60>
  40bba0:	mov	x0, x25
  40bba4:	bl	402be0 <free@plt>
  40bba8:	add	x19, x19, #0x1
  40bbac:	ldr	x24, [x21, x19, lsl #3]
  40bbb0:	cbz	x24, 40bbbc <wcrtomb@plt+0x8d8c>
  40bbb4:	ldr	x23, [x28]
  40bbb8:	b	40bad4 <wcrtomb@plt+0x8ca4>
  40bbbc:	ldp	x19, x8, [x29, #-16]
  40bbc0:	add	x8, x8, #0x1
  40bbc4:	add	x28, x19, x8, lsl #3
  40bbc8:	ldr	x23, [x28]
  40bbcc:	cbnz	x23, 40bac4 <wcrtomb@plt+0x8c94>
  40bbd0:	ldr	x28, [sp, #8]
  40bbd4:	ldr	x8, [x28]
  40bbd8:	ldr	x0, [x8]
  40bbdc:	cbz	x0, 40bc08 <wcrtomb@plt+0x8dd8>
  40bbe0:	ldr	x20, [sp]
  40bbe4:	ldr	x23, [sp, #32]
  40bbe8:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40bbec:	add	x19, x8, #0x8
  40bbf0:	add	x24, x24, #0xdb3
  40bbf4:	bl	402be0 <free@plt>
  40bbf8:	ldr	x0, [x19], #8
  40bbfc:	cbnz	x0, 40bbf4 <wcrtomb@plt+0x8dc4>
  40bc00:	ldr	x8, [x28]
  40bc04:	b	40bc18 <wcrtomb@plt+0x8de8>
  40bc08:	ldr	x20, [sp]
  40bc0c:	ldr	x23, [sp, #32]
  40bc10:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40bc14:	add	x24, x24, #0xdb3
  40bc18:	mov	x0, x8
  40bc1c:	bl	402be0 <free@plt>
  40bc20:	mov	x0, x20
  40bc24:	str	x22, [x28]
  40bc28:	bl	40c054 <wcrtomb@plt+0x9224>
  40bc2c:	ldr	x12, [sp, #24]
  40bc30:	b	40b738 <wcrtomb@plt+0x8908>
  40bc34:	cmp	w22, #0xfe
  40bc38:	b.hi	40bc98 <wcrtomb@plt+0x8e68>  // b.pmore
  40bc3c:	str	x12, [sp, #24]
  40bc40:	ubfx	x8, x23, #6, #26
  40bc44:	add	x9, x27, x26, lsl #5
  40bc48:	ldr	x8, [x9, x8, lsl #3]
  40bc4c:	lsr	x8, x8, x23
  40bc50:	tbz	w8, #0, 40bc80 <wcrtomb@plt+0x8e50>
  40bc54:	ldur	w8, [x29, #-20]
  40bc58:	tst	w8, #0xff
  40bc5c:	b.eq	40be38 <wcrtomb@plt+0x9008>  // b.none
  40bc60:	mov	w0, w23
  40bc64:	bl	402900 <toupper@plt>
  40bc68:	mov	w24, w0
  40bc6c:	mov	w0, w22
  40bc70:	bl	402900 <toupper@plt>
  40bc74:	ldr	x12, [sp, #24]
  40bc78:	cmp	w24, w0
  40bc7c:	b.ne	40be38 <wcrtomb@plt+0x9008>  // b.any
  40bc80:	sub	x8, x23, #0x1
  40bc84:	add	x23, x23, #0x1
  40bc88:	cmp	x8, #0xfe
  40bc8c:	b.cc	40bc40 <wcrtomb@plt+0x8e10>  // b.lo, b.ul, b.last
  40bc90:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40bc94:	add	x24, x24, #0xdb3
  40bc98:	ldr	x8, [x25, x21, lsl #3]
  40bc9c:	add	x21, x12, #0x2
  40bca0:	cmp	x8, #0x105
  40bca4:	b.ne	40bd0c <wcrtomb@plt+0x8edc>  // b.any
  40bca8:	sub	x8, x19, #0x1
  40bcac:	cmp	x21, x8
  40bcb0:	b.ge	40bd0c <wcrtomb@plt+0x8edc>  // b.tcont
  40bcb4:	mov	x9, xzr
  40bcb8:	add	x10, x12, #0x2
  40bcbc:	mov	x19, x21
  40bcc0:	cmn	x9, #0x2
  40bcc4:	b.eq	40bcdc <wcrtomb@plt+0x8eac>  // b.none
  40bcc8:	add	x11, x20, x9, lsl #3
  40bccc:	ldr	x11, [x11, #16]
  40bcd0:	sub	x11, x11, #0x1
  40bcd4:	cmp	x11, #0xfe
  40bcd8:	b.hi	40bd10 <wcrtomb@plt+0x8ee0>  // b.pmore
  40bcdc:	add	x11, x20, x9, lsl #3
  40bce0:	ldr	x11, [x11, #24]
  40bce4:	cmp	x11, #0x105
  40bce8:	b.ne	40bd00 <wcrtomb@plt+0x8ed0>  // b.any
  40bcec:	add	x9, x9, #0x2
  40bcf0:	add	x11, x10, x9
  40bcf4:	cmp	x11, x8
  40bcf8:	add	x19, x19, #0x2
  40bcfc:	b.lt	40bcc0 <wcrtomb@plt+0x8e90>  // b.tstop
  40bd00:	add	x8, x12, x9
  40bd04:	add	x19, x8, #0x2
  40bd08:	b	40bd10 <wcrtomb@plt+0x8ee0>
  40bd0c:	mov	x19, x21
  40bd10:	ldur	w8, [x29, #-20]
  40bd14:	sub	x20, x19, x12
  40bd18:	mov	x0, x28
  40bd1c:	mov	x25, x12
  40bd20:	and	w23, w8, #0xff
  40bd24:	asr	x8, x20, #1
  40bd28:	add	x1, x8, #0x1
  40bd2c:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40bd30:	mov	x28, x0
  40bd34:	cbz	w23, 40bd44 <wcrtomb@plt+0x8f14>
  40bd38:	mov	w0, w22
  40bd3c:	bl	402900 <toupper@plt>
  40bd40:	sxtw	x22, w0
  40bd44:	ldr	x8, [x28, #16]
  40bd48:	ldr	x23, [sp, #32]
  40bd4c:	cmp	x21, x19
  40bd50:	strb	w22, [x8]
  40bd54:	ldr	x8, [x28, #8]
  40bd58:	strb	w22, [x8]
  40bd5c:	ldr	x8, [x28, #24]
  40bd60:	strb	w22, [x8]
  40bd64:	b.ge	40bddc <wcrtomb@plt+0x8fac>  // b.tcont
  40bd68:	ldur	w21, [x29, #-20]
  40bd6c:	sub	x8, x20, #0x3
  40bd70:	lsr	x9, x8, #1
  40bd74:	mov	x10, x25
  40bd78:	neg	x19, x8, lsr #1
  40bd7c:	add	x22, x9, #0x2
  40bd80:	mov	w20, #0x1                   	// #1
  40bd84:	ldr	x8, [x23, #144]
  40bd88:	tst	w21, #0xff
  40bd8c:	add	x8, x8, x10, lsl #3
  40bd90:	ldr	x0, [x8, #16]
  40bd94:	b.eq	40bda8 <wcrtomb@plt+0x8f78>  // b.none
  40bd98:	mov	x25, x10
  40bd9c:	bl	402900 <toupper@plt>
  40bda0:	mov	x10, x25
  40bda4:	sxtw	x0, w0
  40bda8:	ldr	x8, [x28, #16]
  40bdac:	add	x10, x10, #0x2
  40bdb0:	strb	w0, [x8, x20]
  40bdb4:	ldr	x8, [x28, #8]
  40bdb8:	strb	w0, [x8, x20]
  40bdbc:	ldr	x8, [x28, #24]
  40bdc0:	strb	w0, [x8, x20]
  40bdc4:	add	x20, x20, #0x1
  40bdc8:	add	x8, x19, x20
  40bdcc:	cmp	x8, #0x2
  40bdd0:	b.ne	40bd84 <wcrtomb@plt+0x8f54>  // b.any
  40bdd4:	mov	x25, x10
  40bdd8:	b	40bde0 <wcrtomb@plt+0x8fb0>
  40bddc:	mov	w22, #0x1                   	// #1
  40bde0:	ldr	x8, [x28, #16]
  40bde4:	mov	x2, x22
  40bde8:	strb	wzr, [x8, x22]
  40bdec:	ldr	x8, [x28, #8]
  40bdf0:	strb	wzr, [x8, x22]
  40bdf4:	ldr	x8, [x28, #24]
  40bdf8:	strb	wzr, [x8, x22]
  40bdfc:	ldr	x0, [x28]
  40be00:	ldr	x1, [x28, #24]
  40be04:	bl	40c10c <wcrtomb@plt+0x92dc>
  40be08:	mov	x12, x25
  40be0c:	str	x0, [x28]
  40be10:	b	40b738 <wcrtomb@plt+0x8908>
  40be14:	mov	w9, wzr
  40be18:	strb	wzr, [x8]
  40be1c:	strb	wzr, [x19, #32]
  40be20:	mov	x0, x28
  40be24:	strb	w9, [x19, #33]
  40be28:	bl	40c054 <wcrtomb@plt+0x9224>
  40be2c:	mov	x28, x19
  40be30:	mov	x12, x21
  40be34:	b	40b738 <wcrtomb@plt+0x8908>
  40be38:	mov	w1, #0x2                   	// #2
  40be3c:	mov	x0, x28
  40be40:	mov	x19, x12
  40be44:	bl	40bfe4 <wcrtomb@plt+0x91b4>
  40be48:	ldr	x23, [sp, #32]
  40be4c:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40be50:	mov	x12, x19
  40be54:	mov	x28, x0
  40be58:	add	x24, x24, #0xdb3
  40be5c:	b	40b738 <wcrtomb@plt+0x8908>
  40be60:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40be64:	mov	x28, xzr
  40be68:	mov	w20, wzr
  40be6c:	mov	w22, wzr
  40be70:	mov	w19, wzr
  40be74:	add	x24, x24, #0xdb3
  40be78:	b	40bef0 <wcrtomb@plt+0x90c0>
  40be7c:	ldr	x8, [x28, #40]
  40be80:	cbnz	x8, 40bfc4 <wcrtomb@plt+0x9194>
  40be84:	ldr	x8, [x28]
  40be88:	ldr	x21, [x8]
  40be8c:	cbz	x21, 40becc <wcrtomb@plt+0x909c>
  40be90:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40be94:	add	x19, x8, #0x8
  40be98:	add	x24, x24, #0xdb3
  40be9c:	mov	x0, x21
  40bea0:	bl	402750 <strlen@plt>
  40bea4:	mov	x22, x0
  40bea8:	mov	x0, x24
  40beac:	bl	402750 <strlen@plt>
  40beb0:	cmp	x22, x0
  40beb4:	csel	x24, x21, x24, hi  // hi = pmore
  40beb8:	ldr	x21, [x19], #8
  40bebc:	cbnz	x21, 40be9c <wcrtomb@plt+0x906c>
  40bec0:	b	40bed4 <wcrtomb@plt+0x90a4>
  40bec4:	mov	w20, wzr
  40bec8:	b	40beec <wcrtomb@plt+0x90bc>
  40becc:	adrp	x24, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40bed0:	add	x24, x24, #0xdb3
  40bed4:	ldr	x1, [x28, #24]
  40bed8:	mov	x0, x24
  40bedc:	bl	402bb0 <strcmp@plt>
  40bee0:	cbz	w0, 40bf6c <wcrtomb@plt+0x913c>
  40bee4:	mov	w20, wzr
  40bee8:	mov	w22, wzr
  40beec:	mov	w19, wzr
  40bef0:	ldrb	w8, [x24]
  40bef4:	cbz	w8, 40bf60 <wcrtomb@plt+0x9130>
  40bef8:	mov	x0, x24
  40befc:	bl	402750 <strlen@plt>
  40bf00:	add	x0, x0, #0x4
  40bf04:	bl	410cb0 <wcrtomb@plt+0xde80>
  40bf08:	mov	x21, x0
  40bf0c:	strb	w19, [x0]
  40bf10:	strb	w22, [x0, #1]
  40bf14:	strb	w20, [x0, #2]
  40bf18:	add	x0, x0, #0x3
  40bf1c:	mov	x1, x24
  40bf20:	bl	402c80 <strcpy@plt>
  40bf24:	cbz	x28, 40bf3c <wcrtomb@plt+0x910c>
  40bf28:	ldr	x19, [x28, #40]
  40bf2c:	mov	x0, x28
  40bf30:	bl	40c054 <wcrtomb@plt+0x9224>
  40bf34:	mov	x28, x19
  40bf38:	cbnz	x19, 40bf28 <wcrtomb@plt+0x90f8>
  40bf3c:	mov	x0, x21
  40bf40:	ldp	x20, x19, [sp, #144]
  40bf44:	ldp	x22, x21, [sp, #128]
  40bf48:	ldp	x24, x23, [sp, #112]
  40bf4c:	ldp	x26, x25, [sp, #96]
  40bf50:	ldp	x28, x27, [sp, #80]
  40bf54:	ldp	x29, x30, [sp, #64]
  40bf58:	add	sp, sp, #0xa0
  40bf5c:	ret
  40bf60:	mov	x21, xzr
  40bf64:	cbnz	x28, 40bf28 <wcrtomb@plt+0x90f8>
  40bf68:	b	40bf3c <wcrtomb@plt+0x910c>
  40bf6c:	ldr	w8, [sp, #20]
  40bf70:	tbz	w8, #0, 40bf7c <wcrtomb@plt+0x914c>
  40bf74:	ldrb	w8, [x28, #32]
  40bf78:	cbz	w8, 40bf94 <wcrtomb@plt+0x9164>
  40bf7c:	ldr	w8, [sp, #16]
  40bf80:	tbz	w8, #0, 40bf8c <wcrtomb@plt+0x915c>
  40bf84:	ldrb	w8, [x28, #33]
  40bf88:	cbz	w8, 40bf94 <wcrtomb@plt+0x9164>
  40bf8c:	mov	w19, #0x1                   	// #1
  40bf90:	b	40bf98 <wcrtomb@plt+0x9168>
  40bf94:	mov	w19, wzr
  40bf98:	ldrb	w22, [x28, #32]
  40bf9c:	ldrb	w20, [x28, #33]
  40bfa0:	b	40bef0 <wcrtomb@plt+0x90c0>
  40bfa4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfa8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfac:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfb0:	add	x0, x0, #0x891
  40bfb4:	add	x1, x1, #0x8be
  40bfb8:	add	x3, x3, #0x8c8
  40bfbc:	mov	w2, #0xff6                 	// #4086
  40bfc0:	bl	402d90 <__assert_fail@plt>
  40bfc4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfc8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfcc:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40bfd0:	add	x0, x0, #0x8f4
  40bfd4:	add	x1, x1, #0x8be
  40bfd8:	add	x3, x3, #0x8c8
  40bfdc:	mov	w2, #0x1039                	// #4153
  40bfe0:	bl	402d90 <__assert_fail@plt>
  40bfe4:	stp	x29, x30, [sp, #-48]!
  40bfe8:	stp	x20, x19, [sp, #32]
  40bfec:	mov	x20, x0
  40bff0:	mov	w0, #0x30                  	// #48
  40bff4:	str	x21, [sp, #16]
  40bff8:	mov	x29, sp
  40bffc:	mov	x19, x1
  40c000:	bl	410cb0 <wcrtomb@plt+0xde80>
  40c004:	mov	x21, x0
  40c008:	mov	w0, #0x8                   	// #8
  40c00c:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40c010:	str	x0, [x21]
  40c014:	mov	x0, x19
  40c018:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40c01c:	str	x0, [x21, #8]
  40c020:	mov	x0, x19
  40c024:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40c028:	str	x0, [x21, #16]
  40c02c:	mov	x0, x19
  40c030:	bl	410e00 <wcrtomb@plt+0xdfd0>
  40c034:	str	x0, [x21, #24]
  40c038:	strh	wzr, [x21, #32]
  40c03c:	str	x20, [x21, #40]
  40c040:	mov	x0, x21
  40c044:	ldp	x20, x19, [sp, #32]
  40c048:	ldr	x21, [sp, #16]
  40c04c:	ldp	x29, x30, [sp], #48
  40c050:	ret
  40c054:	stp	x29, x30, [sp, #-32]!
  40c058:	stp	x20, x19, [sp, #16]
  40c05c:	ldr	x8, [x0]
  40c060:	mov	x19, x0
  40c064:	mov	x29, sp
  40c068:	ldr	x0, [x8]
  40c06c:	cbz	x0, 40c084 <wcrtomb@plt+0x9254>
  40c070:	add	x20, x8, #0x8
  40c074:	bl	402be0 <free@plt>
  40c078:	ldr	x0, [x20], #8
  40c07c:	cbnz	x0, 40c074 <wcrtomb@plt+0x9244>
  40c080:	ldr	x8, [x19]
  40c084:	mov	x0, x8
  40c088:	bl	402be0 <free@plt>
  40c08c:	ldr	x0, [x19, #8]
  40c090:	bl	402be0 <free@plt>
  40c094:	ldr	x0, [x19, #16]
  40c098:	bl	402be0 <free@plt>
  40c09c:	ldr	x0, [x19, #24]
  40c0a0:	bl	402be0 <free@plt>
  40c0a4:	mov	x0, x19
  40c0a8:	ldp	x20, x19, [sp, #16]
  40c0ac:	ldp	x29, x30, [sp], #32
  40c0b0:	b	402be0 <free@plt>
  40c0b4:	stp	x29, x30, [sp, #-48]!
  40c0b8:	stp	x20, x19, [sp, #32]
  40c0bc:	ldr	x20, [x1]
  40c0c0:	mov	x19, x0
  40c0c4:	str	x21, [sp, #16]
  40c0c8:	mov	x29, sp
  40c0cc:	cbz	x20, 40c0f8 <wcrtomb@plt+0x92c8>
  40c0d0:	add	x21, x1, #0x8
  40c0d4:	mov	x0, x20
  40c0d8:	bl	402750 <strlen@plt>
  40c0dc:	mov	x2, x0
  40c0e0:	mov	x0, x19
  40c0e4:	mov	x1, x20
  40c0e8:	bl	40c10c <wcrtomb@plt+0x92dc>
  40c0ec:	ldr	x20, [x21], #8
  40c0f0:	mov	x19, x0
  40c0f4:	cbnz	x20, 40c0d4 <wcrtomb@plt+0x92a4>
  40c0f8:	mov	x0, x19
  40c0fc:	ldp	x20, x19, [sp, #32]
  40c100:	ldr	x21, [sp, #16]
  40c104:	ldp	x29, x30, [sp], #48
  40c108:	ret
  40c10c:	stp	x29, x30, [sp, #-64]!
  40c110:	stp	x20, x19, [sp, #48]
  40c114:	mov	x19, x0
  40c118:	add	x0, x2, #0x1
  40c11c:	stp	x24, x23, [sp, #16]
  40c120:	stp	x22, x21, [sp, #32]
  40c124:	mov	x29, sp
  40c128:	mov	x21, x2
  40c12c:	mov	x22, x1
  40c130:	bl	410cb0 <wcrtomb@plt+0xde80>
  40c134:	mov	x1, x22
  40c138:	mov	x2, x21
  40c13c:	mov	x20, x0
  40c140:	bl	402710 <memcpy@plt>
  40c144:	strb	wzr, [x20, x21]
  40c148:	ldr	x21, [x19]
  40c14c:	cbz	x21, 40c1cc <wcrtomb@plt+0x939c>
  40c150:	mov	x23, xzr
  40c154:	mov	x0, x21
  40c158:	mov	x1, x20
  40c15c:	bl	402d00 <strstr@plt>
  40c160:	cbnz	x0, 40c1d8 <wcrtomb@plt+0x93a8>
  40c164:	add	x8, x19, x23, lsl #3
  40c168:	ldr	x0, [x8, #8]
  40c16c:	add	x22, x23, #0x1
  40c170:	mov	x23, x22
  40c174:	cbnz	x0, 40c158 <wcrtomb@plt+0x9328>
  40c178:	cbz	x21, 40c1ec <wcrtomb@plt+0x93bc>
  40c17c:	mov	x23, xzr
  40c180:	mov	x24, x19
  40c184:	mov	x0, x20
  40c188:	mov	x1, x21
  40c18c:	bl	402d00 <strstr@plt>
  40c190:	cbz	x0, 40c1b8 <wcrtomb@plt+0x9388>
  40c194:	mov	x0, x21
  40c198:	bl	402be0 <free@plt>
  40c19c:	sub	x22, x22, #0x1
  40c1a0:	cmp	x22, x23
  40c1a4:	b.eq	40c1e8 <wcrtomb@plt+0x93b8>  // b.none
  40c1a8:	ldr	x8, [x19, x22, lsl #3]
  40c1ac:	str	x8, [x24]
  40c1b0:	str	xzr, [x19, x22, lsl #3]
  40c1b4:	b	40c1bc <wcrtomb@plt+0x938c>
  40c1b8:	add	x23, x23, #0x1
  40c1bc:	add	x24, x19, x23, lsl #3
  40c1c0:	ldr	x21, [x24]
  40c1c4:	cbnz	x21, 40c184 <wcrtomb@plt+0x9354>
  40c1c8:	b	40c1ec <wcrtomb@plt+0x93bc>
  40c1cc:	mov	x22, xzr
  40c1d0:	mov	w8, #0x2                   	// #2
  40c1d4:	b	40c1f8 <wcrtomb@plt+0x93c8>
  40c1d8:	mov	x0, x20
  40c1dc:	bl	402be0 <free@plt>
  40c1e0:	mov	x0, x19
  40c1e4:	b	40c20c <wcrtomb@plt+0x93dc>
  40c1e8:	mov	x22, x23
  40c1ec:	add	x8, x22, #0x2
  40c1f0:	lsr	x9, x8, #60
  40c1f4:	cbnz	x9, 40c220 <wcrtomb@plt+0x93f0>
  40c1f8:	lsl	x1, x8, #3
  40c1fc:	mov	x0, x19
  40c200:	bl	410d00 <wcrtomb@plt+0xded0>
  40c204:	add	x8, x0, x22, lsl #3
  40c208:	stp	x20, xzr, [x8]
  40c20c:	ldp	x20, x19, [sp, #48]
  40c210:	ldp	x22, x21, [sp, #32]
  40c214:	ldp	x24, x23, [sp, #16]
  40c218:	ldp	x29, x30, [sp], #64
  40c21c:	ret
  40c220:	bl	410ec0 <wcrtomb@plt+0xe090>
  40c224:	stp	x29, x30, [sp, #-48]!
  40c228:	stp	x20, x19, [sp, #32]
  40c22c:	mov	x19, x0
  40c230:	mov	x0, x1
  40c234:	stp	x22, x21, [sp, #16]
  40c238:	mov	x29, sp
  40c23c:	mov	x20, x1
  40c240:	bl	402750 <strlen@plt>
  40c244:	cbz	x0, 40c27c <wcrtomb@plt+0x944c>
  40c248:	mov	x21, x0
  40c24c:	mov	x0, x19
  40c250:	bl	402750 <strlen@plt>
  40c254:	add	x21, x21, #0x1
  40c258:	mov	x22, x0
  40c25c:	add	x1, x21, x0
  40c260:	mov	x0, x19
  40c264:	bl	410d00 <wcrtomb@plt+0xded0>
  40c268:	mov	x19, x0
  40c26c:	add	x0, x0, x22
  40c270:	mov	x1, x20
  40c274:	mov	x2, x21
  40c278:	bl	402710 <memcpy@plt>
  40c27c:	mov	x0, x19
  40c280:	ldp	x20, x19, [sp, #32]
  40c284:	ldp	x22, x21, [sp, #16]
  40c288:	ldp	x29, x30, [sp], #48
  40c28c:	ret
  40c290:	b	402be0 <free@plt>
  40c294:	mov	w0, #0x920                 	// #2336
  40c298:	b	410cb0 <wcrtomb@plt+0xde80>
  40c29c:	stp	x29, x30, [sp, #-96]!
  40c2a0:	stp	x22, x21, [sp, #64]
  40c2a4:	mov	x21, x2
  40c2a8:	mov	x22, x1
  40c2ac:	mov	w2, #0x410                 	// #1040
  40c2b0:	mov	w1, wzr
  40c2b4:	stp	x28, x27, [sp, #16]
  40c2b8:	stp	x26, x25, [sp, #32]
  40c2bc:	stp	x24, x23, [sp, #48]
  40c2c0:	stp	x20, x19, [sp, #80]
  40c2c4:	mov	x29, sp
  40c2c8:	mov	w20, w3
  40c2cc:	mov	x19, x0
  40c2d0:	bl	4029d0 <memset@plt>
  40c2d4:	ldrb	w8, [x22]
  40c2d8:	adrp	x9, 40c000 <wcrtomb@plt+0x91d0>
  40c2dc:	adrp	x10, 40c000 <wcrtomb@plt+0x91d0>
  40c2e0:	add	x9, x9, #0x44c
  40c2e4:	add	x10, x10, #0x458
  40c2e8:	cmp	w8, #0x0
  40c2ec:	csel	x8, x10, x9, eq  // eq = none
  40c2f0:	add	x0, x19, #0x418
  40c2f4:	mov	w2, #0x504                 	// #1284
  40c2f8:	mov	x1, x22
  40c2fc:	str	x8, [x19, #1040]
  40c300:	bl	402710 <memcpy@plt>
  40c304:	ldrb	w8, [x19, #1048]
  40c308:	tst	w20, #0x2
  40c30c:	mov	w12, #0xa                   	// #10
  40c310:	mov	x9, #0xffffffffffffffff    	// #-1
  40c314:	eor	w8, w8, #0x1
  40c318:	add	x10, x19, #0x1c0
  40c31c:	mov	w23, #0x1                   	// #1
  40c320:	ubfx	w11, w21, #22, #1
  40c324:	and	w24, w20, #0x1
  40c328:	strb	w8, [x19, #192]
  40c32c:	csel	w8, w12, wzr, eq  // eq = none
  40c330:	csel	x26, x12, xzr, eq  // eq = none
  40c334:	str	x9, [x19, #24]
  40c338:	strb	w23, [x19, #456]
  40c33c:	strb	w11, [x10, #9]
  40c340:	strb	w8, [x10, #11]
  40c344:	add	x8, x10, x26
  40c348:	strb	w24, [x10, #10]
  40c34c:	str	x21, [x19, #448]
  40c350:	mov	x21, #0x2401                	// #9217
  40c354:	mov	x22, xzr
  40c358:	add	x20, x19, #0x51c
  40c35c:	mov	w25, #0x4                   	// #4
  40c360:	lsl	x27, x23, x26
  40c364:	add	x28, x8, #0xc
  40c368:	movk	x21, #0xc000, lsl #32
  40c36c:	cbnz	w24, 40c38c <wcrtomb@plt+0x955c>
  40c370:	cmp	x26, x22
  40c374:	b.ne	40c38c <wcrtomb@plt+0x955c>  // b.any
  40c378:	strb	w25, [x28]
  40c37c:	ldr	x8, [x19, #1008]
  40c380:	orr	x8, x8, x27
  40c384:	str	x8, [x19, #1008]
  40c388:	b	40c3ec <wcrtomb@plt+0x95bc>
  40c38c:	ldr	w8, [x20, x22, lsl #2]
  40c390:	cmn	w8, #0x1
  40c394:	b.eq	40c3e4 <wcrtomb@plt+0x95b4>  // b.none
  40c398:	bl	402bc0 <__ctype_b_loc@plt>
  40c39c:	ldr	x8, [x0]
  40c3a0:	cmp	x22, #0x5f
  40c3a4:	cset	w9, eq  // eq = none
  40c3a8:	add	x10, x19, x22
  40c3ac:	ldrh	w8, [x8, x22, lsl #1]
  40c3b0:	and	w8, w8, #0x8
  40c3b4:	orr	w8, w9, w8, lsr #3
  40c3b8:	cmp	w8, #0x0
  40c3bc:	cinc	w9, w23, ne  // ne = any
  40c3c0:	strb	w9, [x10, #460]
  40c3c4:	cbz	w8, 40c3ec <wcrtomb@plt+0x95bc>
  40c3c8:	ubfx	x8, x22, #6, #26
  40c3cc:	add	x8, x19, x8, lsl #3
  40c3d0:	ldr	x9, [x8, #976]
  40c3d4:	lsl	x10, x23, x22
  40c3d8:	orr	x9, x9, x10
  40c3dc:	str	x9, [x8, #976]
  40c3e0:	b	40c3ec <wcrtomb@plt+0x95bc>
  40c3e4:	add	x8, x19, x22
  40c3e8:	strb	w23, [x8, #460]
  40c3ec:	ldrb	w8, [x19, #1050]
  40c3f0:	cbz	w8, 40c404 <wcrtomb@plt+0x95d4>
  40c3f4:	and	x8, x22, #0xc0
  40c3f8:	cmp	x8, #0x80
  40c3fc:	cset	w8, ne  // ne = any
  40c400:	b	40c41c <wcrtomb@plt+0x95ec>
  40c404:	cmp	x22, #0x40
  40c408:	lsl	x8, x23, x22
  40c40c:	cset	w9, cc  // cc = lo, ul, last
  40c410:	tst	x8, x21
  40c414:	cset	w8, ne  // ne = any
  40c418:	and	w8, w9, w8
  40c41c:	add	x9, x19, x22
  40c420:	add	x22, x22, #0x1
  40c424:	cmp	x22, #0x100
  40c428:	strb	w8, [x9, #716]
  40c42c:	b.ne	40c36c <wcrtomb@plt+0x953c>  // b.any
  40c430:	ldp	x20, x19, [sp, #80]
  40c434:	ldp	x22, x21, [sp, #64]
  40c438:	ldp	x24, x23, [sp, #48]
  40c43c:	ldp	x26, x25, [sp, #32]
  40c440:	ldp	x28, x27, [sp, #16]
  40c444:	ldp	x29, x30, [sp], #96
  40c448:	ret
  40c44c:	and	w3, w3, #0x1
  40c450:	mov	w5, #0x1                   	// #1
  40c454:	b	40dce8 <wcrtomb@plt+0xaeb8>
  40c458:	and	w3, w3, #0x1
  40c45c:	mov	w5, wzr
  40c460:	b	40dce8 <wcrtomb@plt+0xaeb8>
  40c464:	stp	x29, x30, [sp, #-32]!
  40c468:	stp	x20, x19, [sp, #16]
  40c46c:	mov	x19, x1
  40c470:	mov	w2, #0x1c0                 	// #448
  40c474:	mov	w1, wzr
  40c478:	mov	x29, sp
  40c47c:	mov	x20, x0
  40c480:	bl	4029d0 <memset@plt>
  40c484:	mov	x8, #0xffffffffffffffff    	// #-1
  40c488:	str	x8, [x20, #24]
  40c48c:	ldrb	w8, [x19, #192]
  40c490:	add	x0, x20, #0x1c0
  40c494:	add	x1, x19, #0x1c0
  40c498:	mov	w2, #0x250                 	// #592
  40c49c:	strb	w8, [x20, #192]
  40c4a0:	bl	402710 <memcpy@plt>
  40c4a4:	ldr	x8, [x19, #1040]
  40c4a8:	add	x0, x20, #0x418
  40c4ac:	add	x1, x19, #0x418
  40c4b0:	mov	w2, #0x504                 	// #1284
  40c4b4:	str	x8, [x20, #1040]
  40c4b8:	ldp	x20, x19, [sp, #16]
  40c4bc:	ldp	x29, x30, [sp], #32
  40c4c0:	b	402710 <memcpy@plt>
  40c4c4:	sub	sp, sp, #0x50
  40c4c8:	stp	x20, x19, [sp, #64]
  40c4cc:	mov	x19, x0
  40c4d0:	add	x0, sp, #0x10
  40c4d4:	add	x2, sp, #0x8
  40c4d8:	stp	x29, x30, [sp, #32]
  40c4dc:	stp	x22, x21, [sp, #48]
  40c4e0:	add	x29, sp, #0x20
  40c4e4:	str	xzr, [sp, #8]
  40c4e8:	bl	402e30 <wcrtomb@plt>
  40c4ec:	cmn	x0, #0x1
  40c4f0:	b.eq	40c568 <wcrtomb@plt+0x9738>  // b.none
  40c4f4:	ldrb	w1, [sp, #16]
  40c4f8:	mov	x20, x0
  40c4fc:	cmp	w20, #0x1
  40c500:	b.eq	40c570 <wcrtomb@plt+0x9740>  // b.none
  40c504:	mov	w2, #0x1                   	// #1
  40c508:	mov	x0, x19
  40c50c:	bl	40c590 <wcrtomb@plt+0x9760>
  40c510:	cmp	w20, #0x2
  40c514:	b.lt	40c57c <wcrtomb@plt+0x974c>  // b.tstop
  40c518:	sub	w8, w20, #0x1
  40c51c:	and	x9, x20, #0xffffffff
  40c520:	add	x10, sp, #0x10
  40c524:	sub	x20, x8, #0x1
  40c528:	orr	x21, x10, #0x1
  40c52c:	sub	x22, x9, #0x1
  40c530:	ldrb	w1, [x21], #1
  40c534:	cmp	x20, #0x0
  40c538:	cset	w8, eq  // eq = none
  40c53c:	lsl	w2, w8, #1
  40c540:	mov	x0, x19
  40c544:	bl	40c590 <wcrtomb@plt+0x9760>
  40c548:	mov	w1, #0x105                 	// #261
  40c54c:	mov	w2, #0x3                   	// #3
  40c550:	mov	x0, x19
  40c554:	bl	40c590 <wcrtomb@plt+0x9760>
  40c558:	subs	x22, x22, #0x1
  40c55c:	sub	x20, x20, #0x1
  40c560:	b.ne	40c530 <wcrtomb@plt+0x9700>  // b.any
  40c564:	b	40c57c <wcrtomb@plt+0x974c>
  40c568:	mov	x1, xzr
  40c56c:	strb	wzr, [sp, #16]
  40c570:	mov	w2, #0x3                   	// #3
  40c574:	mov	x0, x19
  40c578:	bl	40c590 <wcrtomb@plt+0x9760>
  40c57c:	ldp	x20, x19, [sp, #64]
  40c580:	ldp	x22, x21, [sp, #48]
  40c584:	ldp	x29, x30, [sp, #32]
  40c588:	add	sp, sp, #0x50
  40c58c:	ret
  40c590:	stp	x29, x30, [sp, #-48]!
  40c594:	str	x21, [sp, #16]
  40c598:	stp	x20, x19, [sp, #32]
  40c59c:	mov	x8, x0
  40c5a0:	ldr	x9, [x8, #160]!
  40c5a4:	mov	w21, w2
  40c5a8:	mov	x19, x0
  40c5ac:	mov	x20, x1
  40c5b0:	ldur	x10, [x8, #-8]
  40c5b4:	mov	x29, sp
  40c5b8:	cmp	x9, x10
  40c5bc:	b.ne	40c5f8 <wcrtomb@plt+0x97c8>  // b.any
  40c5c0:	ldr	x0, [x19, #144]
  40c5c4:	mov	w2, #0x1                   	// #1
  40c5c8:	mov	x3, #0xffffffffffffffff    	// #-1
  40c5cc:	mov	w4, #0x8                   	// #8
  40c5d0:	mov	x1, x8
  40c5d4:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40c5d8:	ldrb	w8, [x19, #1048]
  40c5dc:	str	x0, [x19, #144]
  40c5e0:	cbz	w8, 40c5f8 <wcrtomb@plt+0x97c8>
  40c5e4:	ldr	x1, [x19, #160]
  40c5e8:	tbnz	x1, #63, 40c69c <wcrtomb@plt+0x986c>
  40c5ec:	ldr	x0, [x19, #280]
  40c5f0:	bl	410d00 <wcrtomb@plt+0xded0>
  40c5f4:	str	x0, [x19, #280]
  40c5f8:	ldrb	w8, [x19, #1048]
  40c5fc:	cbz	w8, 40c60c <wcrtomb@plt+0x97dc>
  40c600:	ldr	x8, [x19, #280]
  40c604:	ldr	x9, [x19, #152]
  40c608:	strb	w21, [x8, x9]
  40c60c:	ldp	x9, x8, [x19, #144]
  40c610:	cmp	x20, #0x104
  40c614:	add	x10, x8, #0x1
  40c618:	str	x10, [x19, #152]
  40c61c:	str	x20, [x9, x8, lsl #3]
  40c620:	b.gt	40c63c <wcrtomb@plt+0x980c>
  40c624:	sub	x8, x20, #0x101
  40c628:	cmp	x8, #0x3
  40c62c:	b.cc	40c678 <wcrtomb@plt+0x9848>  // b.lo, b.ul, b.last
  40c630:	cmp	x20, #0x100
  40c634:	b.eq	40c66c <wcrtomb@plt+0x983c>  // b.none
  40c638:	b	40c660 <wcrtomb@plt+0x9830>
  40c63c:	sub	x8, x20, #0x105
  40c640:	cmp	x8, #0x2
  40c644:	b.cs	40c654 <wcrtomb@plt+0x9824>  // b.hs, b.nlast
  40c648:	ldr	x8, [x19, #136]
  40c64c:	sub	x8, x8, #0x1
  40c650:	b	40c674 <wcrtomb@plt+0x9844>
  40c654:	cmp	x20, #0x112
  40c658:	b.ne	40c660 <wcrtomb@plt+0x9830>  // b.any
  40c65c:	strb	wzr, [x19, #192]
  40c660:	ldr	x8, [x19, #176]
  40c664:	add	x8, x8, #0x1
  40c668:	str	x8, [x19, #176]
  40c66c:	ldr	x8, [x19, #136]
  40c670:	add	x8, x8, #0x1
  40c674:	str	x8, [x19, #136]
  40c678:	ldr	x8, [x19, #136]
  40c67c:	ldr	x9, [x19, #168]
  40c680:	cmp	x8, x9
  40c684:	b.le	40c68c <wcrtomb@plt+0x985c>
  40c688:	str	x8, [x19, #168]
  40c68c:	ldp	x20, x19, [sp, #32]
  40c690:	ldr	x21, [sp, #16]
  40c694:	ldp	x29, x30, [sp], #48
  40c698:	ret
  40c69c:	bl	410ec0 <wcrtomb@plt+0xe090>
  40c6a0:	stp	x29, x30, [sp, #-32]!
  40c6a4:	stp	x20, x19, [sp, #16]
  40c6a8:	ldr	x8, [x1]
  40c6ac:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c6b0:	mov	x19, x1
  40c6b4:	mov	x29, sp
  40c6b8:	adds	x10, x8, x8, asr #1
  40c6bc:	csel	x9, x9, x10, vs
  40c6c0:	cmp	x9, x3
  40c6c4:	mov	x10, #0xffffffffffffffff    	// #-1
  40c6c8:	ccmp	x3, x10, #0x4, gt
  40c6cc:	csel	x20, x3, x9, gt
  40c6d0:	tbnz	x4, #63, 40c6f0 <wcrtomb@plt+0x98c0>
  40c6d4:	cbz	x4, 40c740 <wcrtomb@plt+0x9910>
  40c6d8:	tbnz	x20, #63, 40c710 <wcrtomb@plt+0x98e0>
  40c6dc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c6e0:	udiv	x10, x9, x4
  40c6e4:	cmp	x10, x20
  40c6e8:	b.ge	40c740 <wcrtomb@plt+0x9910>  // b.tcont
  40c6ec:	b	40c750 <wcrtomb@plt+0x9920>
  40c6f0:	tbnz	x20, #63, 40c730 <wcrtomb@plt+0x9900>
  40c6f4:	cmn	x4, #0x1
  40c6f8:	b.eq	40c740 <wcrtomb@plt+0x9910>  // b.none
  40c6fc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c700:	sdiv	x9, x9, x4
  40c704:	cmp	x9, x20
  40c708:	b.lt	40c728 <wcrtomb@plt+0x98f8>  // b.tstop
  40c70c:	b	40c740 <wcrtomb@plt+0x9910>
  40c710:	cmn	x20, #0x1
  40c714:	b.eq	40c740 <wcrtomb@plt+0x9910>  // b.none
  40c718:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c71c:	sdiv	x9, x9, x20
  40c720:	cmp	x9, x4
  40c724:	b.ge	40c740 <wcrtomb@plt+0x9910>  // b.tcont
  40c728:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c72c:	b	40c750 <wcrtomb@plt+0x9920>
  40c730:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c734:	sdiv	x10, x9, x4
  40c738:	cmp	x20, x10
  40c73c:	b.lt	40c750 <wcrtomb@plt+0x9920>  // b.tstop
  40c740:	mul	x1, x20, x4
  40c744:	cmp	x1, #0x7f
  40c748:	b.gt	40c758 <wcrtomb@plt+0x9928>
  40c74c:	mov	w9, #0x80                  	// #128
  40c750:	sdiv	x20, x9, x4
  40c754:	mul	x1, x20, x4
  40c758:	cbnz	x0, 40c760 <wcrtomb@plt+0x9930>
  40c75c:	str	xzr, [x19]
  40c760:	sub	x9, x20, x8
  40c764:	cmp	x9, x2
  40c768:	b.ge	40c7f8 <wcrtomb@plt+0x99c8>  // b.tcont
  40c76c:	cmp	x3, #0x0
  40c770:	cset	w9, ge  // ge = tcont
  40c774:	adds	x20, x8, x2
  40c778:	cset	w10, vs
  40c77c:	cmp	x20, x3
  40c780:	cset	w8, gt
  40c784:	tbnz	w10, #0, 40c7e0 <wcrtomb@plt+0x99b0>
  40c788:	and	w8, w9, w8
  40c78c:	tbnz	w8, #0, 40c7e0 <wcrtomb@plt+0x99b0>
  40c790:	tbnz	x4, #63, 40c7a8 <wcrtomb@plt+0x9978>
  40c794:	cbz	x4, 40c7f4 <wcrtomb@plt+0x99c4>
  40c798:	tbnz	x20, #63, 40c7c8 <wcrtomb@plt+0x9998>
  40c79c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c7a0:	udiv	x8, x8, x4
  40c7a4:	b	40c7bc <wcrtomb@plt+0x998c>
  40c7a8:	tbnz	x20, #63, 40c7e4 <wcrtomb@plt+0x99b4>
  40c7ac:	cmn	x4, #0x1
  40c7b0:	b.eq	40c7f4 <wcrtomb@plt+0x99c4>  // b.none
  40c7b4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c7b8:	sdiv	x8, x8, x4
  40c7bc:	cmp	x8, x20
  40c7c0:	b.ge	40c7f4 <wcrtomb@plt+0x99c4>  // b.tcont
  40c7c4:	b	40c7e0 <wcrtomb@plt+0x99b0>
  40c7c8:	cmn	x20, #0x1
  40c7cc:	b.eq	40c7f4 <wcrtomb@plt+0x99c4>  // b.none
  40c7d0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c7d4:	sdiv	x8, x8, x20
  40c7d8:	cmp	x8, x4
  40c7dc:	b.ge	40c7f4 <wcrtomb@plt+0x99c4>  // b.tcont
  40c7e0:	bl	410ec0 <wcrtomb@plt+0xe090>
  40c7e4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c7e8:	sdiv	x8, x8, x4
  40c7ec:	cmp	x20, x8
  40c7f0:	b.lt	40c7e0 <wcrtomb@plt+0x99b0>  // b.tstop
  40c7f4:	mul	x1, x20, x4
  40c7f8:	bl	410d00 <wcrtomb@plt+0xded0>
  40c7fc:	str	x20, [x19]
  40c800:	ldp	x20, x19, [sp, #16]
  40c804:	ldp	x29, x30, [sp], #32
  40c808:	ret
  40c80c:	stp	x29, x30, [sp, #-32]!
  40c810:	str	x19, [sp, #16]
  40c814:	ldp	x1, x2, [x0, #32]
  40c818:	mov	x19, x0
  40c81c:	add	x0, x0, #0x48
  40c820:	mov	x3, x19
  40c824:	mov	x29, sp
  40c828:	bl	40cfd0 <wcrtomb@plt+0xa1a0>
  40c82c:	ldr	x9, [x19, #32]
  40c830:	cmp	w0, #0x1
  40c834:	b.ne	40c840 <wcrtomb@plt+0x9a10>  // b.any
  40c838:	ldrb	w8, [x9]
  40c83c:	b	40c844 <wcrtomb@plt+0x9a14>
  40c840:	mov	w8, #0xffffffff            	// #-1
  40c844:	ldr	x10, [x19, #40]
  40c848:	add	x9, x9, w0, sxtw
  40c84c:	str	x9, [x19, #32]
  40c850:	sub	x9, x10, w0, sxtw
  40c854:	str	x9, [x19, #40]
  40c858:	ldr	x19, [sp, #16]
  40c85c:	mov	w0, w8
  40c860:	ldp	x29, x30, [sp], #32
  40c864:	ret
  40c868:	stp	x29, x30, [sp, #-48]!
  40c86c:	stp	x20, x19, [sp, #32]
  40c870:	ldr	x8, [x0, #8]
  40c874:	str	x21, [sp, #16]
  40c878:	mov	x21, x0
  40c87c:	mov	x19, x1
  40c880:	cmp	x8, #0x0
  40c884:	mov	x29, sp
  40c888:	b.le	40c8e0 <wcrtomb@plt+0x9ab0>
  40c88c:	ldr	x0, [x21]
  40c890:	mov	x20, xzr
  40c894:	mov	x9, x0
  40c898:	mov	x10, xzr
  40c89c:	movi	v0.2d, #0x0
  40c8a0:	ldr	q1, [x19, x10]
  40c8a4:	ldr	q2, [x9, x10]
  40c8a8:	add	x10, x10, #0x10
  40c8ac:	cmp	x10, #0x20
  40c8b0:	eor	v1.16b, v2.16b, v1.16b
  40c8b4:	orr	v0.16b, v1.16b, v0.16b
  40c8b8:	b.ne	40c8a0 <wcrtomb@plt+0x9a70>  // b.any
  40c8bc:	dup	v1.2d, v0.d[1]
  40c8c0:	orr	v0.16b, v0.16b, v1.16b
  40c8c4:	fmov	x10, d0
  40c8c8:	cbz	x10, 40c924 <wcrtomb@plt+0x9af4>
  40c8cc:	add	x20, x20, #0x1
  40c8d0:	cmp	x20, x8
  40c8d4:	add	x9, x9, #0x20
  40c8d8:	b.lt	40c898 <wcrtomb@plt+0x9a68>  // b.tstop
  40c8dc:	b	40c8e8 <wcrtomb@plt+0x9ab8>
  40c8e0:	ldr	x0, [x21]
  40c8e4:	mov	x20, xzr
  40c8e8:	mov	x1, x21
  40c8ec:	ldr	x9, [x1, #16]!
  40c8f0:	cmp	x9, x8
  40c8f4:	b.gt	40c910 <wcrtomb@plt+0x9ae0>
  40c8f8:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40c8fc:	mov	w2, #0x1                   	// #1
  40c900:	movk	x3, #0x7fff, lsl #48
  40c904:	mov	w4, #0x20                  	// #32
  40c908:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40c90c:	ldr	x8, [x21, #8]
  40c910:	add	x8, x8, #0x1
  40c914:	stp	x0, x8, [x21]
  40c918:	ldp	q1, q0, [x19]
  40c91c:	add	x8, x0, x20, lsl #5
  40c920:	stp	q1, q0, [x8]
  40c924:	mov	x0, x20
  40c928:	ldp	x20, x19, [sp, #32]
  40c92c:	ldr	x21, [sp, #16]
  40c930:	ldp	x29, x30, [sp], #48
  40c934:	ret
  40c938:	sub	sp, sp, #0x140
  40c93c:	stp	x29, x30, [sp, #224]
  40c940:	add	x29, sp, #0xe0
  40c944:	stp	x28, x27, [sp, #240]
  40c948:	sub	x28, x29, #0x30
  40c94c:	movi	v0.2d, #0x0
  40c950:	stp	x26, x25, [sp, #256]
  40c954:	stp	x24, x23, [sp, #272]
  40c958:	stp	x22, x21, [sp, #288]
  40c95c:	stp	x20, x19, [sp, #304]
  40c960:	mov	x19, x0
  40c964:	str	xzr, [x0, #104]
  40c968:	stp	q0, q0, [x28]
  40c96c:	bl	40d03c <wcrtomb@plt+0xa20c>
  40c970:	cmp	w0, #0x5e
  40c974:	cset	w8, eq  // eq = none
  40c978:	stp	w8, w0, [sp, #8]
  40c97c:	b.ne	40c9a0 <wcrtomb@plt+0x9b70>  // b.any
  40c980:	mov	x0, x19
  40c984:	bl	40d03c <wcrtomb@plt+0xa20c>
  40c988:	ldrb	w8, [x19, #1049]
  40c98c:	mov	w26, w0
  40c990:	cmp	w8, #0x0
  40c994:	cset	w8, ne  // ne = any
  40c998:	str	w8, [sp, #28]
  40c99c:	b	40c9ac <wcrtomb@plt+0x9b7c>
  40c9a0:	mov	w8, #0x1                   	// #1
  40c9a4:	str	w8, [sp, #28]
  40c9a8:	mov	w26, w0
  40c9ac:	ldr	w25, [x19, #72]
  40c9b0:	cmp	w26, #0x3a
  40c9b4:	add	x8, sp, #0x2c
  40c9b8:	add	x21, x19, #0x70
  40c9bc:	mov	w23, #0x1                   	// #1
  40c9c0:	cset	w20, eq  // eq = none
  40c9c4:	add	x8, x8, #0x4
  40c9c8:	str	x8, [sp, #16]
  40c9cc:	str	x21, [sp, #32]
  40c9d0:	cmp	w26, #0x5c
  40c9d4:	and	w20, w20, #0xfffffffd
  40c9d8:	b.eq	40ca14 <wcrtomb@plt+0x9be4>  // b.none
  40c9dc:	cmp	w26, #0x5b
  40c9e0:	b.ne	40cab8 <wcrtomb@plt+0x9c88>  // b.any
  40c9e4:	mov	x0, x19
  40c9e8:	bl	40d03c <wcrtomb@plt+0xa20c>
  40c9ec:	ldr	w22, [x19, #72]
  40c9f0:	mov	w24, w0
  40c9f4:	cmp	w0, #0x3a
  40c9f8:	b.ne	40ca24 <wcrtomb@plt+0x9bf4>  // b.any
  40c9fc:	ldrb	w8, [x19, #448]
  40ca00:	tbnz	w8, #2, 40ca40 <wcrtomb@plt+0x9c10>
  40ca04:	mov	w8, #0x4                   	// #4
  40ca08:	mov	w26, #0x5b                  	// #91
  40ca0c:	mov	w24, #0x3a                  	// #58
  40ca10:	b	40cc14 <wcrtomb@plt+0x9de4>
  40ca14:	ldrb	w8, [x19, #448]
  40ca18:	tbnz	w8, #0, 40caa8 <wcrtomb@plt+0x9c78>
  40ca1c:	mov	w26, #0x5c                  	// #92
  40ca20:	b	40cab8 <wcrtomb@plt+0x9c88>
  40ca24:	cmp	w24, #0x2e
  40ca28:	b.eq	40ca40 <wcrtomb@plt+0x9c10>  // b.none
  40ca2c:	cmp	w24, #0x100
  40ca30:	mov	w26, #0x5b                  	// #91
  40ca34:	b.eq	40cab8 <wcrtomb@plt+0x9c88>  // b.none
  40ca38:	cmp	w24, #0x3d
  40ca3c:	b.ne	40cac8 <wcrtomb@plt+0x9c98>  // b.any
  40ca40:	mov	x0, x19
  40ca44:	bl	40d03c <wcrtomb@plt+0xa20c>
  40ca48:	ldr	x8, [x19, #40]
  40ca4c:	cbz	x8, 40cb40 <wcrtomb@plt+0x9d10>
  40ca50:	adrp	x25, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40ca54:	mov	w21, wzr
  40ca58:	add	x22, sp, #0x2c
  40ca5c:	add	x25, x25, #0x5f0
  40ca60:	cmp	w0, w24
  40ca64:	b.ne	40ca78 <wcrtomb@plt+0x9c48>  // b.any
  40ca68:	ldr	x8, [x19, #32]
  40ca6c:	ldrb	w8, [x8]
  40ca70:	cmp	w8, #0x5d
  40ca74:	b.eq	40cb50 <wcrtomb@plt+0x9d20>  // b.none
  40ca78:	cmp	w21, #0x1f
  40ca7c:	b.gt	40ca90 <wcrtomb@plt+0x9c60>
  40ca80:	add	w8, w21, #0x1
  40ca84:	strb	w0, [x22, w21, sxtw]
  40ca88:	mov	w21, w8
  40ca8c:	b	40ca94 <wcrtomb@plt+0x9c64>
  40ca90:	strb	wzr, [sp, #44]
  40ca94:	mov	x0, x19
  40ca98:	bl	40d03c <wcrtomb@plt+0xa20c>
  40ca9c:	ldr	x8, [x19, #40]
  40caa0:	cbnz	x8, 40ca60 <wcrtomb@plt+0x9c30>
  40caa4:	b	40cb50 <wcrtomb@plt+0x9d20>
  40caa8:	mov	x0, x19
  40caac:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cab0:	ldr	w25, [x19, #72]
  40cab4:	mov	w26, w0
  40cab8:	mov	x0, x19
  40cabc:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cac0:	ldr	w22, [x19, #72]
  40cac4:	mov	w24, w0
  40cac8:	cmp	w24, #0x2d
  40cacc:	b.ne	40cc04 <wcrtomb@plt+0x9dd4>  // b.any
  40cad0:	mov	x0, x19
  40cad4:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cad8:	ldr	w21, [x19, #72]
  40cadc:	cmp	w0, #0x5b
  40cae0:	b.eq	40cb10 <wcrtomb@plt+0x9ce0>  // b.none
  40cae4:	mov	w27, w0
  40cae8:	cmp	w0, #0x5c
  40caec:	b.eq	40cb00 <wcrtomb@plt+0x9cd0>  // b.none
  40caf0:	cmp	w27, #0x5d
  40caf4:	b.ne	40cbdc <wcrtomb@plt+0x9dac>  // b.any
  40caf8:	ldr	x8, [x19, #32]
  40cafc:	b	40cb24 <wcrtomb@plt+0x9cf4>
  40cb00:	ldrb	w8, [x19, #448]
  40cb04:	tbnz	w8, #0, 40cbc4 <wcrtomb@plt+0x9d94>
  40cb08:	mov	w27, #0x5c                  	// #92
  40cb0c:	b	40cbdc <wcrtomb@plt+0x9dac>
  40cb10:	ldr	x8, [x19, #32]
  40cb14:	ldrb	w9, [x8]
  40cb18:	cmp	w9, #0x2e
  40cb1c:	b.ne	40cbd8 <wcrtomb@plt+0x9da8>  // b.any
  40cb20:	str	wzr, [sp, #28]
  40cb24:	ldr	x9, [x19, #40]
  40cb28:	sub	x8, x8, #0x1
  40cb2c:	str	x8, [x19, #32]
  40cb30:	mov	w24, #0x2d                  	// #45
  40cb34:	add	x8, x9, #0x1
  40cb38:	str	x8, [x19, #40]
  40cb3c:	b	40cc00 <wcrtomb@plt+0x9dd0>
  40cb40:	adrp	x25, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40cb44:	mov	w21, wzr
  40cb48:	add	x22, sp, #0x2c
  40cb4c:	add	x25, x25, #0x5f0
  40cb50:	mov	x0, x19
  40cb54:	strb	wzr, [x22, w21, sxtw]
  40cb58:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cb5c:	cmp	w24, #0x3a
  40cb60:	mov	w21, wzr
  40cb64:	b.ne	40ce40 <wcrtomb@plt+0xa010>  // b.any
  40cb68:	ldrb	w8, [x19, #457]
  40cb6c:	mov	w11, #0x72                  	// #114
  40cb70:	cbz	w8, 40cbb4 <wcrtomb@plt+0x9d84>
  40cb74:	ldr	w8, [sp, #44]
  40cb78:	ldrh	w9, [sp, #48]
  40cb7c:	mov	w10, #0x7075                	// #28789
  40cb80:	movk	w10, #0x6570, lsl #16
  40cb84:	eor	w8, w8, w10
  40cb88:	eor	w9, w9, w11
  40cb8c:	orr	w8, w8, w9
  40cb90:	cbz	w8, 40cda4 <wcrtomb@plt+0x9f74>
  40cb94:	ldr	w8, [sp, #44]
  40cb98:	ldrh	w9, [sp, #48]
  40cb9c:	mov	w10, #0x6f6c                	// #28524
  40cba0:	movk	w10, #0x6577, lsl #16
  40cba4:	eor	w8, w8, w10
  40cba8:	eor	w9, w9, w11
  40cbac:	orr	w8, w8, w9
  40cbb0:	cbz	w8, 40cda4 <wcrtomb@plt+0x9f74>
  40cbb4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40cbb8:	add	x24, sp, #0x2c
  40cbbc:	add	x1, x1, #0x96a
  40cbc0:	b	40cdb0 <wcrtomb@plt+0x9f80>
  40cbc4:	mov	x0, x19
  40cbc8:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cbcc:	ldr	w21, [x19, #72]
  40cbd0:	mov	w27, w0
  40cbd4:	b	40cbdc <wcrtomb@plt+0x9dac>
  40cbd8:	mov	w27, #0x5b                  	// #91
  40cbdc:	mov	x0, x19
  40cbe0:	orr	w20, w20, #0x8
  40cbe4:	bl	40d03c <wcrtomb@plt+0xa20c>
  40cbe8:	ldr	w22, [x19, #72]
  40cbec:	cmn	w25, #0x1
  40cbf0:	mov	w24, w0
  40cbf4:	b.eq	40cc7c <wcrtomb@plt+0x9e4c>  // b.none
  40cbf8:	cmp	w25, w21
  40cbfc:	b.ne	40cc7c <wcrtomb@plt+0x9e4c>  // b.any
  40cc00:	ldr	x21, [sp, #32]
  40cc04:	cmp	w26, #0x3a
  40cc08:	mov	w8, #0x4                   	// #4
  40cc0c:	mov	w9, #0x2                   	// #2
  40cc10:	csel	w8, w9, w8, eq  // eq = none
  40cc14:	ldrb	w9, [x19, #1048]
  40cc18:	orr	w20, w20, w8
  40cc1c:	cbz	w9, 40cc4c <wcrtomb@plt+0x9e1c>
  40cc20:	cmn	w25, #0x1
  40cc24:	b.eq	40cd04 <wcrtomb@plt+0x9ed4>  // b.none
  40cc28:	ldrb	w8, [x19, #457]
  40cc2c:	cbz	w8, 40cd0c <wcrtomb@plt+0x9edc>
  40cc30:	ldr	x1, [sp, #16]
  40cc34:	mov	w0, w25
  40cc38:	bl	40efa0 <wcrtomb@plt+0xc170>
  40cc3c:	str	w25, [sp, #44]
  40cc40:	tbnz	w0, #31, 40ce5c <wcrtomb@plt+0xa02c>
  40cc44:	add	w8, w0, #0x1
  40cc48:	b	40cd14 <wcrtomb@plt+0x9ee4>
  40cc4c:	ldrb	w8, [x19, #457]
  40cc50:	cbz	w8, 40cc64 <wcrtomb@plt+0x9e34>
  40cc54:	bl	402bc0 <__ctype_b_loc@plt>
  40cc58:	ldr	x8, [x0]
  40cc5c:	ldrh	w8, [x8, w26, sxtw #1]
  40cc60:	tbnz	w8, #10, 40cd94 <wcrtomb@plt+0x9f64>
  40cc64:	lsr	w8, w26, #6
  40cc68:	ldr	x9, [x28, w8, uxtw #3]
  40cc6c:	lsl	x10, x23, x26
  40cc70:	orr	x9, x9, x10
  40cc74:	str	x9, [x28, w8, uxtw #3]
  40cc78:	b	40ce5c <wcrtomb@plt+0xa02c>
  40cc7c:	ldrb	w8, [x19, #1049]
  40cc80:	ldr	x21, [sp, #32]
  40cc84:	cbnz	w8, 40cca8 <wcrtomb@plt+0x9e78>
  40cc88:	sub	w8, w26, #0x30
  40cc8c:	and	w8, w8, #0xff
  40cc90:	cmp	w8, #0x9
  40cc94:	b.hi	40cd04 <wcrtomb@plt+0x9ed4>  // b.pmore
  40cc98:	sub	w8, w27, #0x30
  40cc9c:	and	w8, w8, #0xff
  40cca0:	cmp	w8, #0x9
  40cca4:	b.hi	40cd04 <wcrtomb@plt+0x9ed4>  // b.pmore
  40cca8:	cmp	w26, w27
  40ccac:	b.gt	40ce5c <wcrtomb@plt+0xa02c>
  40ccb0:	sxtw	x25, w26
  40ccb4:	sxtw	x21, w27
  40ccb8:	ldrb	w8, [x19, #457]
  40ccbc:	cbz	w8, 40ccd0 <wcrtomb@plt+0x9ea0>
  40ccc0:	bl	402bc0 <__ctype_b_loc@plt>
  40ccc4:	ldr	x8, [x0]
  40ccc8:	ldrh	w8, [x8, x25, lsl #1]
  40cccc:	tbnz	w8, #10, 40cce8 <wcrtomb@plt+0x9eb8>
  40ccd0:	ubfx	x8, x25, #6, #26
  40ccd4:	ldr	x9, [x28, x8, lsl #3]
  40ccd8:	lsl	x10, x23, x25
  40ccdc:	orr	x9, x9, x10
  40cce0:	str	x9, [x28, x8, lsl #3]
  40cce4:	b	40ccf4 <wcrtomb@plt+0x9ec4>
  40cce8:	sub	x1, x29, #0x30
  40ccec:	mov	w0, w25
  40ccf0:	bl	40cf6c <wcrtomb@plt+0xa13c>
  40ccf4:	cmp	x25, x21
  40ccf8:	add	x25, x25, #0x1
  40ccfc:	b.lt	40ccb8 <wcrtomb@plt+0x9e88>  // b.tstop
  40cd00:	b	40ce58 <wcrtomb@plt+0xa028>
  40cd04:	str	wzr, [sp, #28]
  40cd08:	b	40ce5c <wcrtomb@plt+0xa02c>
  40cd0c:	str	w25, [sp, #44]
  40cd10:	mov	w8, #0x1                   	// #1
  40cd14:	ldr	x27, [sp, #16]
  40cd18:	mov	w8, w8
  40cd1c:	sub	x26, x8, #0x1
  40cd20:	mov	w0, w25
  40cd24:	bl	4028a0 <wctob@plt>
  40cd28:	tbnz	w0, #31, 40cd48 <wcrtomb@plt+0x9f18>
  40cd2c:	lsr	w8, w0, #6
  40cd30:	ldr	x9, [x28, w8, uxtw #3]
  40cd34:	lsl	x10, x23, x0
  40cd38:	orr	x9, x9, x10
  40cd3c:	str	x9, [x28, w8, uxtw #3]
  40cd40:	cbnz	x26, 40cd88 <wcrtomb@plt+0x9f58>
  40cd44:	b	40ce5c <wcrtomb@plt+0xa02c>
  40cd48:	ldp	x8, x9, [x19, #104]
  40cd4c:	ldr	x0, [x19, #96]
  40cd50:	cmp	x9, x8
  40cd54:	b.gt	40cd70 <wcrtomb@plt+0x9f40>
  40cd58:	mov	w2, #0x1                   	// #1
  40cd5c:	mov	x3, #0xffffffffffffffff    	// #-1
  40cd60:	mov	w4, #0x4                   	// #4
  40cd64:	mov	x1, x21
  40cd68:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40cd6c:	ldr	x8, [x19, #104]
  40cd70:	str	x0, [x19, #96]
  40cd74:	ldur	w9, [x27, #-4]
  40cd78:	add	x10, x8, #0x1
  40cd7c:	str	x10, [x19, #104]
  40cd80:	str	w9, [x0, x8, lsl #2]
  40cd84:	cbz	x26, 40ce5c <wcrtomb@plt+0xa02c>
  40cd88:	ldr	w25, [x27], #4
  40cd8c:	sub	x26, x26, #0x1
  40cd90:	b	40cd20 <wcrtomb@plt+0x9ef0>
  40cd94:	sub	x1, x29, #0x30
  40cd98:	mov	w0, w26
  40cd9c:	bl	40cf6c <wcrtomb@plt+0xa13c>
  40cda0:	b	40ce5c <wcrtomb@plt+0xa02c>
  40cda4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40cda8:	add	x1, x1, #0x96a
  40cdac:	mov	x24, x1
  40cdb0:	mov	x0, x24
  40cdb4:	bl	402bb0 <strcmp@plt>
  40cdb8:	cbz	w0, 40cdec <wcrtomb@plt+0x9fbc>
  40cdbc:	mov	x8, xzr
  40cdc0:	add	x21, x8, #0x18
  40cdc4:	cmp	x21, #0x120
  40cdc8:	b.eq	40cf54 <wcrtomb@plt+0xa124>  // b.none
  40cdcc:	add	x8, x25, x8
  40cdd0:	ldr	x1, [x8, #24]
  40cdd4:	mov	x0, x24
  40cdd8:	bl	402bb0 <strcmp@plt>
  40cddc:	mov	x8, x21
  40cde0:	cbnz	w0, 40cdc0 <wcrtomb@plt+0x9f90>
  40cde4:	add	x21, x25, x21
  40cde8:	b	40cdf0 <wcrtomb@plt+0x9fc0>
  40cdec:	mov	x21, x25
  40cdf0:	ldrb	w8, [x19, #1048]
  40cdf4:	cbz	w8, 40ce00 <wcrtomb@plt+0x9fd0>
  40cdf8:	ldrb	w8, [x21, #16]
  40cdfc:	cbz	w8, 40ce3c <wcrtomb@plt+0xa00c>
  40ce00:	mov	w24, wzr
  40ce04:	ldr	x8, [x21, #8]
  40ce08:	mov	w0, w24
  40ce0c:	blr	x8
  40ce10:	cbz	w0, 40ce28 <wcrtomb@plt+0x9ff8>
  40ce14:	lsr	w8, w24, #6
  40ce18:	ldr	x9, [x28, w8, uxtw #3]
  40ce1c:	lsl	x10, x23, x24
  40ce20:	orr	x9, x9, x10
  40ce24:	str	x9, [x28, w8, uxtw #3]
  40ce28:	add	w24, w24, #0x1
  40ce2c:	cmp	w24, #0x100
  40ce30:	b.ne	40ce04 <wcrtomb@plt+0x9fd4>  // b.any
  40ce34:	ldr	w21, [sp, #28]
  40ce38:	b	40ce40 <wcrtomb@plt+0xa010>
  40ce3c:	mov	w21, wzr
  40ce40:	mov	x0, x19
  40ce44:	orr	w20, w20, #0x8
  40ce48:	bl	40d03c <wcrtomb@plt+0xa20c>
  40ce4c:	ldr	w22, [x19, #72]
  40ce50:	mov	w24, w0
  40ce54:	str	w21, [sp, #28]
  40ce58:	ldr	x21, [sp, #32]
  40ce5c:	cmp	w24, #0x5d
  40ce60:	mov	w26, w24
  40ce64:	mov	w25, w22
  40ce68:	b.ne	40c9d0 <wcrtomb@plt+0x9ba0>  // b.any
  40ce6c:	cmp	w20, #0x7
  40ce70:	b.ne	40ce8c <wcrtomb@plt+0xa05c>  // b.any
  40ce74:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40ce78:	add	x1, x1, #0x988
  40ce7c:	mov	w2, #0x5                   	// #5
  40ce80:	mov	x0, xzr
  40ce84:	bl	402d10 <dcgettext@plt>
  40ce88:	bl	407fb4 <wcrtomb@plt+0x5184>
  40ce8c:	ldr	w9, [sp, #12]
  40ce90:	ldr	w8, [sp, #28]
  40ce94:	tbz	w8, #0, 40cee0 <wcrtomb@plt+0xa0b0>
  40ce98:	ldrb	w8, [x19, #1048]
  40ce9c:	cbz	w8, 40cee8 <wcrtomb@plt+0xa0b8>
  40cea0:	cmp	w9, #0x5e
  40cea4:	b.eq	40ceb0 <wcrtomb@plt+0xa080>  // b.none
  40cea8:	ldr	x8, [x19, #104]
  40ceac:	cbz	x8, 40cf14 <wcrtomb@plt+0xa0e4>
  40ceb0:	ldr	w8, [sp, #8]
  40ceb4:	strb	w8, [x19, #88]
  40ceb8:	ldp	q0, q1, [x28]
  40cebc:	orr	v0.16b, v1.16b, v0.16b
  40cec0:	dup	v1.2d, v0.d[1]
  40cec4:	orr	v0.16b, v0.16b, v1.16b
  40cec8:	fmov	x8, d0
  40cecc:	cbz	x8, 40cf28 <wcrtomb@plt+0xa0f8>
  40ced0:	sub	x1, x29, #0x30
  40ced4:	mov	x0, x19
  40ced8:	bl	40c868 <wcrtomb@plt+0x9a38>
  40cedc:	b	40cf2c <wcrtomb@plt+0xa0fc>
  40cee0:	mov	w0, #0x112                 	// #274
  40cee4:	b	40cf34 <wcrtomb@plt+0xa104>
  40cee8:	cmp	w9, #0x5e
  40ceec:	b.ne	40cf14 <wcrtomb@plt+0xa0e4>  // b.any
  40cef0:	ldp	q0, q1, [x28]
  40cef4:	mvn	v0.16b, v0.16b
  40cef8:	mvn	v1.16b, v1.16b
  40cefc:	stp	q0, q1, [x28]
  40cf00:	ldrb	w8, [x19, #449]
  40cf04:	tbz	w8, #0, 40cf14 <wcrtomb@plt+0xa0e4>
  40cf08:	ldr	x8, [x28]
  40cf0c:	and	x8, x8, #0xfffffffffffffbff
  40cf10:	str	x8, [x28]
  40cf14:	sub	x1, x29, #0x30
  40cf18:	mov	x0, x19
  40cf1c:	bl	40c868 <wcrtomb@plt+0x9a38>
  40cf20:	add	x0, x0, #0x114
  40cf24:	b	40cf34 <wcrtomb@plt+0xa104>
  40cf28:	mov	x0, #0xffffffffffffffff    	// #-1
  40cf2c:	str	x0, [x19, #80]
  40cf30:	mov	w0, #0x113                 	// #275
  40cf34:	ldp	x20, x19, [sp, #304]
  40cf38:	ldp	x22, x21, [sp, #288]
  40cf3c:	ldp	x24, x23, [sp, #272]
  40cf40:	ldp	x26, x25, [sp, #256]
  40cf44:	ldp	x28, x27, [sp, #240]
  40cf48:	ldp	x29, x30, [sp, #224]
  40cf4c:	add	sp, sp, #0x140
  40cf50:	ret
  40cf54:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40cf58:	add	x1, x1, #0x970
  40cf5c:	mov	w2, #0x5                   	// #5
  40cf60:	mov	x0, xzr
  40cf64:	bl	402d10 <dcgettext@plt>
  40cf68:	bl	407f9c <wcrtomb@plt+0x516c>
  40cf6c:	stp	x29, x30, [sp, #-48]!
  40cf70:	stp	x22, x21, [sp, #16]
  40cf74:	stp	x20, x19, [sp, #32]
  40cf78:	mov	x29, sp
  40cf7c:	mov	x19, x1
  40cf80:	bl	402900 <toupper@plt>
  40cf84:	mov	w20, w0
  40cf88:	mov	x21, xzr
  40cf8c:	mov	w22, #0x1                   	// #1
  40cf90:	mov	w0, w21
  40cf94:	bl	402900 <toupper@plt>
  40cf98:	cmp	w0, w20
  40cf9c:	b.ne	40cfb4 <wcrtomb@plt+0xa184>  // b.any
  40cfa0:	ubfx	x8, x21, #6, #26
  40cfa4:	ldr	x9, [x19, x8, lsl #3]
  40cfa8:	lsl	x10, x22, x21
  40cfac:	orr	x9, x9, x10
  40cfb0:	str	x9, [x19, x8, lsl #3]
  40cfb4:	add	x21, x21, #0x1
  40cfb8:	cmp	x21, #0x100
  40cfbc:	b.ne	40cf90 <wcrtomb@plt+0xa160>  // b.any
  40cfc0:	ldp	x20, x19, [sp, #32]
  40cfc4:	ldp	x22, x21, [sp, #16]
  40cfc8:	ldp	x29, x30, [sp], #48
  40cfcc:	ret
  40cfd0:	stp	x29, x30, [sp, #-48]!
  40cfd4:	stp	x20, x19, [sp, #32]
  40cfd8:	ldrb	w8, [x1]
  40cfdc:	str	x21, [sp, #16]
  40cfe0:	mov	x19, x0
  40cfe4:	mov	x29, sp
  40cfe8:	add	x8, x3, x8, lsl #2
  40cfec:	ldr	w21, [x8, #1308]
  40cff0:	cmn	w21, #0x1
  40cff4:	b.ne	40d024 <wcrtomb@plt+0xa1f4>  // b.any
  40cff8:	add	x20, x3, #0x110
  40cffc:	add	x0, x29, #0x1c
  40d000:	mov	x3, x20
  40d004:	bl	410f04 <wcrtomb@plt+0xe0d4>
  40d008:	sub	x8, x0, #0x1
  40d00c:	cmn	x8, #0x3
  40d010:	b.cs	40d020 <wcrtomb@plt+0xa1f0>  // b.hs, b.nlast
  40d014:	ldr	w8, [x29, #28]
  40d018:	str	w8, [x19]
  40d01c:	b	40d02c <wcrtomb@plt+0xa1fc>
  40d020:	str	xzr, [x20]
  40d024:	mov	w0, #0x1                   	// #1
  40d028:	str	w21, [x19]
  40d02c:	ldp	x20, x19, [sp, #32]
  40d030:	ldr	x21, [sp, #16]
  40d034:	ldp	x29, x30, [sp], #48
  40d038:	ret
  40d03c:	stp	x29, x30, [sp, #-16]!
  40d040:	ldr	x8, [x0, #40]
  40d044:	mov	x29, sp
  40d048:	cbz	x8, 40d054 <wcrtomb@plt+0xa224>
  40d04c:	ldp	x29, x30, [sp], #16
  40d050:	b	40c80c <wcrtomb@plt+0x99dc>
  40d054:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40d058:	add	x1, x1, #0x9bd
  40d05c:	mov	w2, #0x5                   	// #5
  40d060:	mov	x0, xzr
  40d064:	bl	402d10 <dcgettext@plt>
  40d068:	bl	407f9c <wcrtomb@plt+0x516c>
  40d06c:	stp	x29, x30, [sp, #-32]!
  40d070:	str	x19, [sp, #16]
  40d074:	mov	x29, sp
  40d078:	mov	x19, x0
  40d07c:	bl	40d0c0 <wcrtomb@plt+0xa290>
  40d080:	ldr	x8, [x19, #128]
  40d084:	cmp	x8, #0x106
  40d088:	b.eq	40d0b4 <wcrtomb@plt+0xa284>  // b.none
  40d08c:	cmp	x8, #0x108
  40d090:	b.eq	40d0b4 <wcrtomb@plt+0xa284>  // b.none
  40d094:	tbnz	x8, #63, 40d0b4 <wcrtomb@plt+0xa284>
  40d098:	mov	x0, x19
  40d09c:	bl	40d0c0 <wcrtomb@plt+0xa290>
  40d0a0:	mov	w1, #0x105                 	// #261
  40d0a4:	mov	w2, #0x3                   	// #3
  40d0a8:	mov	x0, x19
  40d0ac:	bl	40c590 <wcrtomb@plt+0x9760>
  40d0b0:	b	40d080 <wcrtomb@plt+0xa250>
  40d0b4:	ldr	x19, [sp, #16]
  40d0b8:	ldp	x29, x30, [sp], #32
  40d0bc:	ret
  40d0c0:	sub	sp, sp, #0xc0
  40d0c4:	stp	x29, x30, [sp, #128]
  40d0c8:	stp	x24, x23, [sp, #144]
  40d0cc:	stp	x22, x21, [sp, #160]
  40d0d0:	stp	x20, x19, [sp, #176]
  40d0d4:	ldr	x1, [x0, #128]
  40d0d8:	mov	x19, x0
  40d0dc:	add	x29, sp, #0x80
  40d0e0:	cmp	x1, #0x100
  40d0e4:	b.cc	40d0fc <wcrtomb@plt+0xa2cc>  // b.lo, b.ul, b.last
  40d0e8:	cmp	x1, #0x113
  40d0ec:	b.gt	40d0fc <wcrtomb@plt+0xa2cc>
  40d0f0:	sub	x8, x1, #0x10b
  40d0f4:	cmp	x8, #0x9
  40d0f8:	b.cs	40d270 <wcrtomb@plt+0xa440>  // b.hs, b.nlast
  40d0fc:	mov	x0, x19
  40d100:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d104:	mov	x0, x19
  40d108:	bl	409d64 <wcrtomb@plt+0x6f34>
  40d10c:	mov	x1, x0
  40d110:	str	x0, [x19, #128]
  40d114:	sub	x8, x1, #0x101
  40d118:	cmp	x8, #0x3
  40d11c:	b.hi	40d258 <wcrtomb@plt+0xa428>  // b.pmore
  40d120:	cmp	x1, #0x104
  40d124:	b.ne	40d194 <wcrtomb@plt+0xa364>  // b.any
  40d128:	ldr	x20, [x19, #152]
  40d12c:	ldp	w22, w23, [x19, #64]
  40d130:	mov	x0, x19
  40d134:	mov	x1, x20
  40d138:	orr	w24, w22, w23
  40d13c:	bl	40d530 <wcrtomb@plt+0xa700>
  40d140:	sub	x20, x20, x0
  40d144:	cbz	w24, 40d1bc <wcrtomb@plt+0xa38c>
  40d148:	mov	x21, x0
  40d14c:	tbnz	w23, #31, 40d228 <wcrtomb@plt+0xa3f8>
  40d150:	cbz	w22, 40d240 <wcrtomb@plt+0xa410>
  40d154:	cmp	w22, #0x2
  40d158:	b.lt	40d1dc <wcrtomb@plt+0xa3ac>  // b.tstop
  40d15c:	mov	w22, #0x1                   	// #1
  40d160:	mov	x0, x19
  40d164:	mov	x1, x20
  40d168:	mov	x2, x21
  40d16c:	bl	40d5b8 <wcrtomb@plt+0xa788>
  40d170:	mov	w1, #0x105                 	// #261
  40d174:	mov	w2, #0x3                   	// #3
  40d178:	mov	x0, x19
  40d17c:	bl	40c590 <wcrtomb@plt+0x9760>
  40d180:	ldr	w8, [x19, #64]
  40d184:	add	w22, w22, #0x1
  40d188:	cmp	w22, w8
  40d18c:	b.lt	40d160 <wcrtomb@plt+0xa330>  // b.tstop
  40d190:	b	40d1e0 <wcrtomb@plt+0xa3b0>
  40d194:	mov	x0, x19
  40d198:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d19c:	mov	x0, x19
  40d1a0:	bl	409d64 <wcrtomb@plt+0x6f34>
  40d1a4:	mov	x1, x0
  40d1a8:	str	x0, [x19, #128]
  40d1ac:	sub	x8, x1, #0x101
  40d1b0:	cmp	x8, #0x4
  40d1b4:	b.cc	40d120 <wcrtomb@plt+0xa2f0>  // b.lo, b.ul, b.last
  40d1b8:	b	40d258 <wcrtomb@plt+0xa428>
  40d1bc:	mov	x0, x19
  40d1c0:	str	x20, [x19, #152]
  40d1c4:	bl	409d64 <wcrtomb@plt+0x6f34>
  40d1c8:	str	x0, [x19, #128]
  40d1cc:	mov	x0, x19
  40d1d0:	bl	40d0c0 <wcrtomb@plt+0xa290>
  40d1d4:	ldr	x1, [x19, #128]
  40d1d8:	b	40d1ac <wcrtomb@plt+0xa37c>
  40d1dc:	mov	w22, #0x1                   	// #1
  40d1e0:	ldr	w8, [x19, #68]
  40d1e4:	cmp	w22, w8
  40d1e8:	b.ge	40d19c <wcrtomb@plt+0xa36c>  // b.tcont
  40d1ec:	mov	x0, x19
  40d1f0:	mov	x1, x20
  40d1f4:	mov	x2, x21
  40d1f8:	bl	40d5b8 <wcrtomb@plt+0xa788>
  40d1fc:	mov	w1, #0x101                 	// #257
  40d200:	mov	w2, #0x3                   	// #3
  40d204:	mov	x0, x19
  40d208:	bl	40c590 <wcrtomb@plt+0x9760>
  40d20c:	mov	w1, #0x105                 	// #261
  40d210:	mov	w2, #0x3                   	// #3
  40d214:	mov	x0, x19
  40d218:	bl	40c590 <wcrtomb@plt+0x9760>
  40d21c:	ldr	w8, [x19, #68]
  40d220:	add	w22, w22, #0x1
  40d224:	b	40d1e4 <wcrtomb@plt+0xa3b4>
  40d228:	mov	w1, #0x103                 	// #259
  40d22c:	mov	w2, #0x3                   	// #3
  40d230:	mov	x0, x19
  40d234:	bl	40c590 <wcrtomb@plt+0x9760>
  40d238:	ldr	w22, [x19, #64]
  40d23c:	cbnz	w22, 40d154 <wcrtomb@plt+0xa324>
  40d240:	mov	w1, #0x101                 	// #257
  40d244:	mov	w2, #0x3                   	// #3
  40d248:	mov	x0, x19
  40d24c:	bl	40c590 <wcrtomb@plt+0x9760>
  40d250:	ldr	w22, [x19, #64]
  40d254:	b	40d154 <wcrtomb@plt+0xa324>
  40d258:	ldp	x20, x19, [sp, #176]
  40d25c:	ldp	x22, x21, [sp, #160]
  40d260:	ldp	x24, x23, [sp, #144]
  40d264:	ldp	x29, x30, [sp, #128]
  40d268:	add	sp, sp, #0xc0
  40d26c:	ret
  40d270:	cmp	x1, #0x107
  40d274:	b.eq	40d2c0 <wcrtomb@plt+0xa490>  // b.none
  40d278:	cmp	x1, #0x109
  40d27c:	b.eq	40d2f8 <wcrtomb@plt+0xa4c8>  // b.none
  40d280:	cmp	x1, #0x10a
  40d284:	b.ne	40d358 <wcrtomb@plt+0xa528>  // b.any
  40d288:	ldrb	w8, [x19, #1050]
  40d28c:	cbz	w8, 40d0fc <wcrtomb@plt+0xa2cc>
  40d290:	ldr	x1, [x19, #200]
  40d294:	cbnz	x1, 40d3d8 <wcrtomb@plt+0xa5a8>
  40d298:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40d29c:	add	x8, x8, #0x728
  40d2a0:	ldp	q0, q1, [x8]
  40d2a4:	stp	q0, q1, [sp]
  40d2a8:	ldr	x8, [x19, #448]
  40d2ac:	tbnz	w8, #6, 40d384 <wcrtomb@plt+0xa554>
  40d2b0:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40d2b4:	str	x9, [sp]
  40d2b8:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40d2bc:	b	40d388 <wcrtomb@plt+0xa558>
  40d2c0:	mov	x0, x19
  40d2c4:	bl	409d64 <wcrtomb@plt+0x6f34>
  40d2c8:	str	x0, [x19, #128]
  40d2cc:	mov	x0, x19
  40d2d0:	bl	40a520 <wcrtomb@plt+0x76f0>
  40d2d4:	ldr	x8, [x19, #128]
  40d2d8:	cmp	x8, #0x108
  40d2dc:	b.eq	40d104 <wcrtomb@plt+0xa2d4>  // b.none
  40d2e0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40d2e4:	add	x1, x1, #0x9fb
  40d2e8:	mov	w2, #0x5                   	// #5
  40d2ec:	mov	x0, xzr
  40d2f0:	bl	402d10 <dcgettext@plt>
  40d2f4:	bl	407f9c <wcrtomb@plt+0x516c>
  40d2f8:	ldr	w1, [x19, #72]
  40d2fc:	cmn	w1, #0x1
  40d300:	b.eq	40d370 <wcrtomb@plt+0xa540>  // b.none
  40d304:	mov	x0, x19
  40d308:	bl	40c4c4 <wcrtomb@plt+0x9694>
  40d30c:	ldrb	w8, [x19, #457]
  40d310:	cbz	w8, 40d104 <wcrtomb@plt+0xa2d4>
  40d314:	ldr	w0, [x19, #72]
  40d318:	mov	x1, sp
  40d31c:	bl	40efa0 <wcrtomb@plt+0xc170>
  40d320:	cmp	w0, #0x1
  40d324:	b.lt	40d104 <wcrtomb@plt+0xa2d4>  // b.tstop
  40d328:	mov	w20, w0
  40d32c:	mov	x21, sp
  40d330:	ldr	w1, [x21], #4
  40d334:	mov	x0, x19
  40d338:	bl	40c4c4 <wcrtomb@plt+0x9694>
  40d33c:	mov	w1, #0x106                 	// #262
  40d340:	mov	w2, #0x3                   	// #3
  40d344:	mov	x0, x19
  40d348:	bl	40c590 <wcrtomb@plt+0x9760>
  40d34c:	subs	x20, x20, #0x1
  40d350:	b.ne	40d330 <wcrtomb@plt+0xa500>  // b.any
  40d354:	b	40d104 <wcrtomb@plt+0xa2d4>
  40d358:	mov	w1, #0x100                 	// #256
  40d35c:	mov	w2, #0x3                   	// #3
  40d360:	mov	x0, x19
  40d364:	bl	40c590 <wcrtomb@plt+0x9760>
  40d368:	ldr	x1, [x19, #128]
  40d36c:	b	40d114 <wcrtomb@plt+0xa2e4>
  40d370:	mov	w1, #0x112                 	// #274
  40d374:	mov	w2, #0x3                   	// #3
  40d378:	mov	x0, x19
  40d37c:	bl	40c590 <wcrtomb@plt+0x9760>
  40d380:	b	40d104 <wcrtomb@plt+0xa2d4>
  40d384:	mov	x9, #0xfffffffffffffffe    	// #-2
  40d388:	tbz	w8, #7, 40d390 <wcrtomb@plt+0xa560>
  40d38c:	str	x9, [sp]
  40d390:	mov	x1, sp
  40d394:	mov	x0, x19
  40d398:	bl	40c868 <wcrtomb@plt+0x9a38>
  40d39c:	adrp	x20, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40d3a0:	add	x8, x0, #0x114
  40d3a4:	add	x20, x20, #0x748
  40d3a8:	mov	w21, #0xd0                  	// #208
  40d3ac:	str	x8, [x19, #200]
  40d3b0:	mov	x0, x19
  40d3b4:	mov	x1, x20
  40d3b8:	bl	40c868 <wcrtomb@plt+0x9a38>
  40d3bc:	add	x8, x0, #0x114
  40d3c0:	str	x8, [x19, x21]
  40d3c4:	add	x21, x21, #0x8
  40d3c8:	cmp	x21, #0x110
  40d3cc:	add	x20, x20, #0x20
  40d3d0:	b.ne	40d3b0 <wcrtomb@plt+0xa580>  // b.any
  40d3d4:	ldr	x1, [x19, #200]
  40d3d8:	mov	x0, x19
  40d3dc:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d3e0:	ldr	x1, [x19, #208]
  40d3e4:	mov	x0, x19
  40d3e8:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d3ec:	mov	w1, #0xe0                  	// #224
  40d3f0:	mov	w2, #0x3                   	// #3
  40d3f4:	mov	x0, x19
  40d3f8:	mov	w20, #0x3                   	// #3
  40d3fc:	bl	40c590 <wcrtomb@plt+0x9760>
  40d400:	ldr	x1, [x19, #224]
  40d404:	mov	x0, x19
  40d408:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d40c:	mov	w1, #0x105                 	// #261
  40d410:	mov	w2, #0x3                   	// #3
  40d414:	mov	x0, x19
  40d418:	bl	40c590 <wcrtomb@plt+0x9760>
  40d41c:	mov	w1, #0x106                 	// #262
  40d420:	mov	w2, #0x3                   	// #3
  40d424:	mov	x0, x19
  40d428:	bl	40c590 <wcrtomb@plt+0x9760>
  40d42c:	mov	w1, #0xed                  	// #237
  40d430:	mov	w2, #0x3                   	// #3
  40d434:	mov	x0, x19
  40d438:	bl	40c590 <wcrtomb@plt+0x9760>
  40d43c:	ldr	x1, [x19, #240]
  40d440:	mov	x0, x19
  40d444:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d448:	mov	w1, #0x105                 	// #261
  40d44c:	mov	w2, #0x3                   	// #3
  40d450:	mov	x0, x19
  40d454:	bl	40c590 <wcrtomb@plt+0x9760>
  40d458:	mov	w1, #0x106                 	// #262
  40d45c:	mov	w2, #0x3                   	// #3
  40d460:	mov	x0, x19
  40d464:	bl	40c590 <wcrtomb@plt+0x9760>
  40d468:	ldr	x1, [x19, #232]
  40d46c:	mov	x0, x19
  40d470:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d474:	mov	w1, #0xf0                  	// #240
  40d478:	mov	w2, #0x3                   	// #3
  40d47c:	mov	x0, x19
  40d480:	bl	40c590 <wcrtomb@plt+0x9760>
  40d484:	ldr	x1, [x19, #248]
  40d488:	mov	x0, x19
  40d48c:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d490:	mov	w1, #0x105                 	// #261
  40d494:	mov	w2, #0x3                   	// #3
  40d498:	mov	x0, x19
  40d49c:	bl	40c590 <wcrtomb@plt+0x9760>
  40d4a0:	mov	w1, #0x106                 	// #262
  40d4a4:	mov	w2, #0x3                   	// #3
  40d4a8:	mov	x0, x19
  40d4ac:	bl	40c590 <wcrtomb@plt+0x9760>
  40d4b0:	mov	w1, #0xf4                  	// #244
  40d4b4:	mov	w2, #0x3                   	// #3
  40d4b8:	mov	x0, x19
  40d4bc:	bl	40c590 <wcrtomb@plt+0x9760>
  40d4c0:	ldr	x1, [x19, #264]
  40d4c4:	mov	x0, x19
  40d4c8:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d4cc:	mov	w1, #0x105                 	// #261
  40d4d0:	mov	w2, #0x3                   	// #3
  40d4d4:	mov	x0, x19
  40d4d8:	bl	40c590 <wcrtomb@plt+0x9760>
  40d4dc:	mov	w1, #0x106                 	// #262
  40d4e0:	mov	w2, #0x3                   	// #3
  40d4e4:	mov	x0, x19
  40d4e8:	bl	40c590 <wcrtomb@plt+0x9760>
  40d4ec:	ldr	x1, [x19, #256]
  40d4f0:	mov	x0, x19
  40d4f4:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d4f8:	ldr	x1, [x19, #216]
  40d4fc:	mov	x0, x19
  40d500:	bl	409ca0 <wcrtomb@plt+0x6e70>
  40d504:	mov	w1, #0x105                 	// #261
  40d508:	mov	w2, #0x3                   	// #3
  40d50c:	mov	x0, x19
  40d510:	bl	40c590 <wcrtomb@plt+0x9760>
  40d514:	mov	w1, #0x106                 	// #262
  40d518:	mov	w2, #0x3                   	// #3
  40d51c:	mov	x0, x19
  40d520:	bl	40c590 <wcrtomb@plt+0x9760>
  40d524:	subs	w20, w20, #0x1
  40d528:	b.ne	40d4f8 <wcrtomb@plt+0xa6c8>  // b.any
  40d52c:	b	40d104 <wcrtomb@plt+0xa2d4>
  40d530:	stp	x29, x30, [sp, #-48]!
  40d534:	stp	x20, x19, [sp, #32]
  40d538:	ldr	x8, [x0, #144]
  40d53c:	sub	x20, x1, #0x1
  40d540:	mov	x19, x0
  40d544:	str	x21, [sp, #16]
  40d548:	ldr	x8, [x8, x20, lsl #3]
  40d54c:	mov	x29, sp
  40d550:	sub	x9, x8, #0x101
  40d554:	cmp	x9, #0x3
  40d558:	b.cs	40d570 <wcrtomb@plt+0xa740>  // b.hs, b.nlast
  40d55c:	mov	x0, x19
  40d560:	mov	x1, x20
  40d564:	bl	40d530 <wcrtomb@plt+0xa700>
  40d568:	add	x0, x0, #0x1
  40d56c:	b	40d5a8 <wcrtomb@plt+0xa778>
  40d570:	sub	x8, x8, #0x105
  40d574:	cmp	x8, #0x2
  40d578:	b.cs	40d5a4 <wcrtomb@plt+0xa774>  // b.hs, b.nlast
  40d57c:	mov	x0, x19
  40d580:	mov	x1, x20
  40d584:	bl	40d530 <wcrtomb@plt+0xa700>
  40d588:	mov	x21, x0
  40d58c:	sub	x1, x20, x0
  40d590:	mov	x0, x19
  40d594:	bl	40d530 <wcrtomb@plt+0xa700>
  40d598:	add	x8, x21, x0
  40d59c:	add	x0, x8, #0x1
  40d5a0:	b	40d5a8 <wcrtomb@plt+0xa778>
  40d5a4:	mov	w0, #0x1                   	// #1
  40d5a8:	ldp	x20, x19, [sp, #32]
  40d5ac:	ldr	x21, [sp, #16]
  40d5b0:	ldp	x29, x30, [sp], #48
  40d5b4:	ret
  40d5b8:	stp	x29, x30, [sp, #-48]!
  40d5bc:	stp	x20, x19, [sp, #32]
  40d5c0:	ldrb	w8, [x0, #1048]
  40d5c4:	str	x21, [sp, #16]
  40d5c8:	mov	x19, x2
  40d5cc:	mov	x20, x0
  40d5d0:	mov	x21, x1
  40d5d4:	cmp	x2, #0x1
  40d5d8:	mov	x29, sp
  40d5dc:	cbz	w8, 40d60c <wcrtomb@plt+0xa7dc>
  40d5e0:	b.lt	40d634 <wcrtomb@plt+0xa804>  // b.tstop
  40d5e4:	ldr	x8, [x20, #144]
  40d5e8:	ldr	x9, [x20, #280]
  40d5ec:	mov	x0, x20
  40d5f0:	ldr	x1, [x8, x21, lsl #3]
  40d5f4:	ldrb	w2, [x9, x21]
  40d5f8:	bl	40c590 <wcrtomb@plt+0x9760>
  40d5fc:	subs	x19, x19, #0x1
  40d600:	add	x21, x21, #0x1
  40d604:	b.ne	40d5e4 <wcrtomb@plt+0xa7b4>  // b.any
  40d608:	b	40d634 <wcrtomb@plt+0xa804>
  40d60c:	b.lt	40d634 <wcrtomb@plt+0xa804>  // b.tstop
  40d610:	lsl	x21, x21, #3
  40d614:	ldr	x8, [x20, #144]
  40d618:	mov	w2, #0x3                   	// #3
  40d61c:	mov	x0, x20
  40d620:	ldr	x1, [x8, x21]
  40d624:	bl	40c590 <wcrtomb@plt+0x9760>
  40d628:	subs	x19, x19, #0x1
  40d62c:	add	x21, x21, #0x8
  40d630:	b.ne	40d614 <wcrtomb@plt+0xa7e4>  // b.any
  40d634:	ldp	x20, x19, [sp, #32]
  40d638:	ldr	x21, [sp, #16]
  40d63c:	ldp	x29, x30, [sp], #48
  40d640:	ret
  40d644:	stp	x29, x30, [sp, #-32]!
  40d648:	lsr	x8, x1, #59
  40d64c:	stp	x20, x19, [sp, #16]
  40d650:	mov	x29, sp
  40d654:	cbnz	x8, 40d67c <wcrtomb@plt+0xa84c>
  40d658:	mov	x20, x0
  40d65c:	lsl	x0, x1, #4
  40d660:	mov	x19, x1
  40d664:	bl	410cb0 <wcrtomb@plt+0xde80>
  40d668:	stp	xzr, x19, [x20, #8]
  40d66c:	str	x0, [x20]
  40d670:	ldp	x20, x19, [sp, #16]
  40d674:	ldp	x29, x30, [sp], #32
  40d678:	ret
  40d67c:	bl	410ec0 <wcrtomb@plt+0xe090>
  40d680:	stp	x29, x30, [sp, #-48]!
  40d684:	str	x21, [sp, #16]
  40d688:	stp	x20, x19, [sp, #32]
  40d68c:	mov	x21, x1
  40d690:	ldr	x9, [x21, #16]!
  40d694:	ldr	x8, [x0, #8]
  40d698:	mov	x20, x1
  40d69c:	mov	x19, x0
  40d6a0:	mov	x29, sp
  40d6a4:	cmp	x9, x8
  40d6a8:	b.ge	40d6dc <wcrtomb@plt+0xa8ac>  // b.tcont
  40d6ac:	ldr	x0, [x20]
  40d6b0:	bl	402be0 <free@plt>
  40d6b4:	ldr	x8, [x19, #8]
  40d6b8:	ldr	x9, [x20, #16]
  40d6bc:	mov	x3, #0xffffffffffffffff    	// #-1
  40d6c0:	mov	w4, #0x10                  	// #16
  40d6c4:	mov	x0, xzr
  40d6c8:	sub	x2, x8, x9
  40d6cc:	mov	x1, x21
  40d6d0:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40d6d4:	str	x0, [x20]
  40d6d8:	ldr	x8, [x19, #8]
  40d6dc:	str	x8, [x20, #8]
  40d6e0:	ldr	x8, [x19, #8]
  40d6e4:	cbz	x8, 40d6f8 <wcrtomb@plt+0xa8c8>
  40d6e8:	ldr	x0, [x20]
  40d6ec:	ldr	x1, [x19]
  40d6f0:	lsl	x2, x8, #4
  40d6f4:	bl	402710 <memcpy@plt>
  40d6f8:	ldp	x20, x19, [sp, #32]
  40d6fc:	ldr	x21, [sp, #16]
  40d700:	ldp	x29, x30, [sp], #48
  40d704:	ret
  40d708:	stp	x29, x30, [sp, #-48]!
  40d70c:	str	x21, [sp, #16]
  40d710:	stp	x20, x19, [sp, #32]
  40d714:	mov	x19, x1
  40d718:	mov	x1, x2
  40d71c:	ldp	x8, x9, [x2]
  40d720:	ldr	x10, [x1, #16]!
  40d724:	mov	x20, x2
  40d728:	mov	x21, x0
  40d72c:	mov	x29, sp
  40d730:	cmp	x10, x9
  40d734:	b.gt	40d754 <wcrtomb@plt+0xa924>
  40d738:	mov	w2, #0x1                   	// #1
  40d73c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d740:	mov	w4, #0x10                  	// #16
  40d744:	mov	x0, x8
  40d748:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40d74c:	ldr	x9, [x20, #8]
  40d750:	mov	x8, x0
  40d754:	add	x10, x9, #0x1
  40d758:	add	x9, x8, x9, lsl #4
  40d75c:	stp	x8, x10, [x20]
  40d760:	stp	x21, x19, [x9]
  40d764:	ldp	x20, x19, [sp, #32]
  40d768:	ldr	x21, [sp, #16]
  40d76c:	ldp	x29, x30, [sp], #48
  40d770:	ret
  40d774:	stp	x29, x30, [sp, #-80]!
  40d778:	stp	x26, x25, [sp, #16]
  40d77c:	stp	x24, x23, [sp, #32]
  40d780:	stp	x22, x21, [sp, #48]
  40d784:	stp	x20, x19, [sp, #64]
  40d788:	mov	x21, x1
  40d78c:	ldr	x1, [x1, #8]
  40d790:	mov	w19, w2
  40d794:	mov	x20, x0
  40d798:	mov	x23, xzr
  40d79c:	cmp	x1, #0x1
  40d7a0:	mov	x29, sp
  40d7a4:	b.lt	40d7d0 <wcrtomb@plt+0xa9a0>  // b.tstop
  40d7a8:	ldr	x9, [x21]
  40d7ac:	mov	x8, xzr
  40d7b0:	add	x9, x9, #0x8
  40d7b4:	ldur	x10, [x9, #-8]
  40d7b8:	ldr	w11, [x9], #16
  40d7bc:	add	x8, x8, #0x1
  40d7c0:	cmp	x8, x1
  40d7c4:	add	x10, x10, x11
  40d7c8:	eor	x23, x10, x23
  40d7cc:	b.lt	40d7b4 <wcrtomb@plt+0xa984>  // b.tstop
  40d7d0:	ldr	x8, [x20, #304]
  40d7d4:	cmp	x8, #0x1
  40d7d8:	b.lt	40d88c <wcrtomb@plt+0xaa5c>  // b.tstop
  40d7dc:	ldr	x9, [x20, #296]
  40d7e0:	mov	x22, xzr
  40d7e4:	mov	w10, #0x50                  	// #80
  40d7e8:	mul	x11, x22, x10
  40d7ec:	ldr	x11, [x9, x11]
  40d7f0:	cmp	x23, x11
  40d7f4:	b.ne	40d87c <wcrtomb@plt+0xaa4c>  // b.any
  40d7f8:	madd	x11, x22, x10, x9
  40d7fc:	ldr	x11, [x11, #16]
  40d800:	cmp	x1, x11
  40d804:	b.ne	40d87c <wcrtomb@plt+0xaa4c>  // b.any
  40d808:	madd	x11, x22, x10, x9
  40d80c:	ldrb	w11, [x11, #32]
  40d810:	cmp	w11, w19
  40d814:	b.ne	40d87c <wcrtomb@plt+0xaa4c>  // b.any
  40d818:	cmp	x1, #0x1
  40d81c:	b.lt	40d870 <wcrtomb@plt+0xaa40>  // b.tstop
  40d820:	madd	x13, x22, x10, x9
  40d824:	ldr	x12, [x21]
  40d828:	ldr	x13, [x13, #8]
  40d82c:	mov	x11, xzr
  40d830:	add	x12, x12, #0x8
  40d834:	add	x13, x13, #0x8
  40d838:	ldr	w14, [x12]
  40d83c:	ldr	w15, [x13]
  40d840:	cmp	w14, w15
  40d844:	b.ne	40d874 <wcrtomb@plt+0xaa44>  // b.any
  40d848:	ldur	x14, [x12, #-8]
  40d84c:	ldur	x15, [x13, #-8]
  40d850:	cmp	x14, x15
  40d854:	b.ne	40d874 <wcrtomb@plt+0xaa44>  // b.any
  40d858:	add	x11, x11, #0x1
  40d85c:	add	x12, x12, #0x10
  40d860:	cmp	x1, x11
  40d864:	add	x13, x13, #0x10
  40d868:	b.ne	40d838 <wcrtomb@plt+0xaa08>  // b.any
  40d86c:	b	40d988 <wcrtomb@plt+0xab58>
  40d870:	mov	x11, xzr
  40d874:	cmp	x11, x1
  40d878:	b.eq	40d988 <wcrtomb@plt+0xab58>  // b.none
  40d87c:	add	x22, x22, #0x1
  40d880:	cmp	x22, x8
  40d884:	b.lt	40d7e8 <wcrtomb@plt+0xa9b8>  // b.tstop
  40d888:	b	40d890 <wcrtomb@plt+0xaa60>
  40d88c:	mov	x22, xzr
  40d890:	cmp	x1, #0x1
  40d894:	b.lt	40d904 <wcrtomb@plt+0xaad4>  // b.tstop
  40d898:	ldr	x9, [x20, #336]
  40d89c:	ldr	x10, [x21]
  40d8a0:	mov	x25, xzr
  40d8a4:	mov	w24, wzr
  40d8a8:	and	w11, w19, #0x7
  40d8ac:	mov	w12, #0x1ff                 	// #511
  40d8b0:	mov	x13, x1
  40d8b4:	ldr	x14, [x10]
  40d8b8:	ldr	w15, [x9, x14, lsl #2]
  40d8bc:	cbz	w15, 40d8e4 <wcrtomb@plt+0xaab4>
  40d8c0:	orr	w16, w15, w15, lsr #3
  40d8c4:	orr	w16, w16, w15, lsr #6
  40d8c8:	tst	w11, w16
  40d8cc:	csel	w15, wzr, w15, eq  // eq = none
  40d8d0:	orr	w24, w15, w24
  40d8d4:	cbnz	x25, 40d8f4 <wcrtomb@plt+0xaac4>
  40d8d8:	ldr	x15, [x20, #144]
  40d8dc:	ldr	x25, [x15, x14, lsl #3]
  40d8e0:	b	40d8f4 <wcrtomb@plt+0xaac4>
  40d8e4:	ldr	x15, [x20, #144]
  40d8e8:	ldr	x14, [x15, x14, lsl #3]
  40d8ec:	cmp	x14, #0x112
  40d8f0:	csel	w24, w12, w24, eq  // eq = none
  40d8f4:	subs	x13, x13, #0x1
  40d8f8:	add	x10, x10, #0x10
  40d8fc:	b.ne	40d8b4 <wcrtomb@plt+0xaa84>  // b.any
  40d900:	b	40d90c <wcrtomb@plt+0xaadc>
  40d904:	mov	w24, wzr
  40d908:	mov	x25, xzr
  40d90c:	ldr	x9, [x20, #312]
  40d910:	ldr	x0, [x20, #296]
  40d914:	cmp	x9, x8
  40d918:	b.gt	40d934 <wcrtomb@plt+0xab04>
  40d91c:	add	x1, x20, #0x138
  40d920:	mov	w2, #0x1                   	// #1
  40d924:	mov	x3, #0xffffffffffffffff    	// #-1
  40d928:	mov	w4, #0x50                  	// #80
  40d92c:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40d930:	ldr	x1, [x21, #8]
  40d934:	add	x26, x22, x22, lsl #2
  40d938:	str	x0, [x20, #296]
  40d93c:	add	x0, x0, x26, lsl #4
  40d940:	str	x23, [x0], #8
  40d944:	bl	40d644 <wcrtomb@plt+0xa814>
  40d948:	ldr	x8, [x20, #296]
  40d94c:	mov	x0, x21
  40d950:	add	x8, x8, x26, lsl #4
  40d954:	add	x1, x8, #0x8
  40d958:	bl	40d680 <wcrtomb@plt+0xa850>
  40d95c:	ldr	x8, [x20, #296]
  40d960:	mov	x9, #0xffffffffffffffff    	// #-1
  40d964:	add	x8, x8, x26, lsl #4
  40d968:	strb	w19, [x8, #32]
  40d96c:	strh	w24, [x8, #34]
  40d970:	stp	xzr, xzr, [x8, #48]
  40d974:	str	x25, [x8, #40]
  40d978:	str	x9, [x8, #72]
  40d97c:	ldr	x8, [x20, #304]
  40d980:	add	x8, x8, #0x1
  40d984:	str	x8, [x20, #304]
  40d988:	mov	x0, x22
  40d98c:	ldp	x20, x19, [sp, #64]
  40d990:	ldp	x22, x21, [sp, #48]
  40d994:	ldp	x24, x23, [sp, #32]
  40d998:	ldp	x26, x25, [sp, #16]
  40d99c:	ldp	x29, x30, [sp], #80
  40d9a0:	ret
  40d9a4:	stp	x29, x30, [sp, #-64]!
  40d9a8:	str	x23, [sp, #16]
  40d9ac:	stp	x22, x21, [sp, #32]
  40d9b0:	stp	x20, x19, [sp, #48]
  40d9b4:	mov	x23, x3
  40d9b8:	ldr	x8, [x23, #16]!
  40d9bc:	ldr	x9, [x0, #8]
  40d9c0:	ldr	x10, [x1, #8]
  40d9c4:	mov	x19, x3
  40d9c8:	mov	x20, x1
  40d9cc:	sub	x8, x8, x9
  40d9d0:	mov	x21, x0
  40d9d4:	cmp	x8, x10
  40d9d8:	mov	w22, w2
  40d9dc:	mov	x29, sp
  40d9e0:	b.ge	40da10 <wcrtomb@plt+0xabe0>  // b.tcont
  40d9e4:	ldr	x0, [x19]
  40d9e8:	bl	402be0 <free@plt>
  40d9ec:	ldr	x8, [x21, #8]
  40d9f0:	mov	x3, #0xffffffffffffffff    	// #-1
  40d9f4:	mov	w4, #0x10                  	// #16
  40d9f8:	mov	x0, xzr
  40d9fc:	str	x8, [x19, #16]
  40da00:	ldr	x2, [x20, #8]
  40da04:	mov	x1, x23
  40da08:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40da0c:	str	x0, [x19]
  40da10:	str	xzr, [x19, #8]
  40da14:	ldr	x8, [x21, #8]
  40da18:	ldr	x12, [x20, #8]
  40da1c:	cmp	x8, #0x0
  40da20:	cset	w11, gt
  40da24:	b.gt	40da30 <wcrtomb@plt+0xac00>
  40da28:	cmp	x12, #0x1
  40da2c:	b.lt	40db0c <wcrtomb@plt+0xacdc>  // b.tstop
  40da30:	mov	x8, xzr
  40da34:	mov	x10, xzr
  40da38:	mov	x9, xzr
  40da3c:	cmp	x10, x12
  40da40:	b.ge	40da80 <wcrtomb@plt+0xac50>  // b.tcont
  40da44:	tbz	w11, #0, 40dab8 <wcrtomb@plt+0xac88>
  40da48:	ldr	x12, [x21]
  40da4c:	ldr	x11, [x20]
  40da50:	lsl	x13, x8, #4
  40da54:	lsl	x14, x10, #4
  40da58:	ldr	x12, [x12, x13]
  40da5c:	ldr	x13, [x11, x14]
  40da60:	cmp	x12, x13
  40da64:	b.gt	40dabc <wcrtomb@plt+0xac8c>
  40da68:	b.ne	40da80 <wcrtomb@plt+0xac50>  // b.any
  40da6c:	add	x11, x11, x10, lsl #4
  40da70:	ldr	w11, [x11, #8]
  40da74:	add	x10, x10, #0x1
  40da78:	and	w11, w11, w22
  40da7c:	b	40da84 <wcrtomb@plt+0xac54>
  40da80:	mov	w11, wzr
  40da84:	ldr	x12, [x21]
  40da88:	ldr	x13, [x19]
  40da8c:	add	x12, x12, x8, lsl #4
  40da90:	ldr	x14, [x12]
  40da94:	add	x13, x13, x9, lsl #4
  40da98:	add	x8, x8, #0x1
  40da9c:	add	x9, x9, #0x1
  40daa0:	str	x14, [x13]
  40daa4:	ldr	w12, [x12, #8]
  40daa8:	str	x9, [x19, #8]
  40daac:	orr	w11, w12, w11
  40dab0:	str	w11, [x13, #8]
  40dab4:	b	40daf0 <wcrtomb@plt+0xacc0>
  40dab8:	ldr	x11, [x20]
  40dabc:	add	x12, x11, x10, lsl #4
  40dac0:	ldr	w12, [x12, #8]
  40dac4:	ands	w12, w12, w22
  40dac8:	b.eq	40daec <wcrtomb@plt+0xacbc>  // b.none
  40dacc:	ldr	x13, [x19]
  40dad0:	lsl	x14, x10, #4
  40dad4:	ldr	x11, [x11, x14]
  40dad8:	add	x13, x13, x9, lsl #4
  40dadc:	add	x9, x9, #0x1
  40dae0:	str	x11, [x13]
  40dae4:	str	x9, [x19, #8]
  40dae8:	str	w12, [x13, #8]
  40daec:	add	x10, x10, #0x1
  40daf0:	ldr	x11, [x21, #8]
  40daf4:	ldr	x12, [x20, #8]
  40daf8:	cmp	x8, x11
  40dafc:	cset	w11, lt  // lt = tstop
  40db00:	b.lt	40da3c <wcrtomb@plt+0xac0c>  // b.tstop
  40db04:	cmp	x10, x12
  40db08:	b.lt	40da3c <wcrtomb@plt+0xac0c>  // b.tstop
  40db0c:	ldp	x20, x19, [sp, #48]
  40db10:	ldp	x22, x21, [sp, #32]
  40db14:	ldr	x23, [sp, #16]
  40db18:	ldp	x29, x30, [sp], #64
  40db1c:	ret
  40db20:	ldr	x8, [x1, #8]
  40db24:	cmp	x8, #0x1
  40db28:	b.lt	40db68 <wcrtomb@plt+0xad38>  // b.tstop
  40db2c:	ldr	x10, [x1]
  40db30:	mov	x12, xzr
  40db34:	mov	x13, x8
  40db38:	add	x9, x12, x13
  40db3c:	asr	x9, x9, #1
  40db40:	lsl	x11, x9, #4
  40db44:	ldr	x14, [x10, x11]
  40db48:	cmp	x14, x0
  40db4c:	b.ge	40db58 <wcrtomb@plt+0xad28>  // b.tcont
  40db50:	add	x12, x9, #0x1
  40db54:	b	40db60 <wcrtomb@plt+0xad30>
  40db58:	b.eq	40db70 <wcrtomb@plt+0xad40>  // b.none
  40db5c:	mov	x13, x9
  40db60:	cmp	x12, x13
  40db64:	b.lt	40db38 <wcrtomb@plt+0xad08>  // b.tstop
  40db68:	mov	w0, wzr
  40db6c:	ret
  40db70:	add	x12, x10, x9, lsl #4
  40db74:	ldr	w0, [x12, #8]
  40db78:	add	x12, x9, #0x1
  40db7c:	cmp	x12, x8
  40db80:	b.ge	40dbc4 <wcrtomb@plt+0xad94>  // b.tcont
  40db84:	ldr	q0, [x10, x12, lsl #4]
  40db88:	add	x13, x9, #0x2
  40db8c:	cmp	x13, x8
  40db90:	str	q0, [x10, x9, lsl #4]
  40db94:	b.eq	40dbc8 <wcrtomb@plt+0xad98>  // b.none
  40db98:	sub	x8, x8, #0x2
  40db9c:	ldr	x10, [x1]
  40dba0:	add	x9, x9, #0x1
  40dba4:	cmp	x8, x9
  40dba8:	add	x10, x10, x11
  40dbac:	ldr	q0, [x10, #32]
  40dbb0:	add	x11, x11, #0x10
  40dbb4:	str	q0, [x10, #16]
  40dbb8:	b.ne	40db9c <wcrtomb@plt+0xad6c>  // b.any
  40dbbc:	add	x12, x9, #0x1
  40dbc0:	b	40dbc8 <wcrtomb@plt+0xad98>
  40dbc4:	mov	x12, x9
  40dbc8:	str	x12, [x1, #8]
  40dbcc:	ret
  40dbd0:	stp	x29, x30, [sp, #-64]!
  40dbd4:	stp	x22, x21, [sp, #32]
  40dbd8:	stp	x20, x19, [sp, #48]
  40dbdc:	ldr	x22, [x2, #8]
  40dbe0:	mov	x20, x2
  40dbe4:	mov	x19, x1
  40dbe8:	mov	x21, x0
  40dbec:	cmp	x22, #0x0
  40dbf0:	str	x23, [sp, #16]
  40dbf4:	mov	x29, sp
  40dbf8:	b.le	40dc3c <wcrtomb@plt+0xae0c>
  40dbfc:	ldr	x0, [x20]
  40dc00:	mov	x23, xzr
  40dc04:	mov	x8, x22
  40dc08:	add	x9, x23, x8
  40dc0c:	asr	x9, x9, #1
  40dc10:	lsl	x10, x9, #4
  40dc14:	ldr	x10, [x0, x10]
  40dc18:	cmp	x10, x21
  40dc1c:	b.ge	40dc28 <wcrtomb@plt+0xadf8>  // b.tcont
  40dc20:	add	x23, x9, #0x1
  40dc24:	b	40dc30 <wcrtomb@plt+0xae00>
  40dc28:	mov	x8, x9
  40dc2c:	b.eq	40dcac <wcrtomb@plt+0xae7c>  // b.none
  40dc30:	cmp	x23, x8
  40dc34:	b.lt	40dc08 <wcrtomb@plt+0xadd8>  // b.tstop
  40dc38:	b	40dc44 <wcrtomb@plt+0xae14>
  40dc3c:	ldr	x0, [x20]
  40dc40:	mov	x23, xzr
  40dc44:	mov	x1, x20
  40dc48:	ldr	x8, [x1, #16]!
  40dc4c:	cmp	x8, x22
  40dc50:	b.gt	40dc64 <wcrtomb@plt+0xae34>
  40dc54:	mov	w2, #0x1                   	// #1
  40dc58:	mov	x3, #0xffffffffffffffff    	// #-1
  40dc5c:	mov	w4, #0x10                  	// #16
  40dc60:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40dc64:	cmp	x22, x23
  40dc68:	str	x0, [x20]
  40dc6c:	b.le	40dc94 <wcrtomb@plt+0xae64>
  40dc70:	lsl	x8, x22, #4
  40dc74:	add	x9, x0, x8
  40dc78:	ldur	q0, [x9, #-16]
  40dc7c:	sub	x22, x22, #0x1
  40dc80:	cmp	x22, x23
  40dc84:	sub	x8, x8, #0x10
  40dc88:	str	q0, [x9]
  40dc8c:	ldr	x0, [x20]
  40dc90:	b.gt	40dc74 <wcrtomb@plt+0xae44>
  40dc94:	add	x8, x0, x23, lsl #4
  40dc98:	stp	x21, x19, [x8]
  40dc9c:	ldr	x8, [x20, #8]
  40dca0:	add	x8, x8, #0x1
  40dca4:	str	x8, [x20, #8]
  40dca8:	b	40dcbc <wcrtomb@plt+0xae8c>
  40dcac:	add	x8, x0, x9, lsl #4
  40dcb0:	ldr	w9, [x8, #8]
  40dcb4:	orr	w9, w9, w19
  40dcb8:	str	w9, [x8, #8]
  40dcbc:	ldp	x20, x19, [sp, #48]
  40dcc0:	ldp	x22, x21, [sp, #32]
  40dcc4:	ldr	x23, [sp, #16]
  40dcc8:	ldp	x29, x30, [sp], #64
  40dccc:	ret
  40dcd0:	ldr	x8, [x0]
  40dcd4:	ldr	x9, [x1]
  40dcd8:	cmp	x8, x9
  40dcdc:	cset	w8, gt
  40dce0:	csinv	w0, w8, wzr, ge  // ge = tcont
  40dce4:	ret
  40dce8:	sub	sp, sp, #0xa0
  40dcec:	stp	x29, x30, [sp, #64]
  40dcf0:	stp	x28, x27, [sp, #80]
  40dcf4:	stp	x26, x25, [sp, #96]
  40dcf8:	stp	x24, x23, [sp, #112]
  40dcfc:	stp	x22, x21, [sp, #128]
  40dd00:	stp	x20, x19, [sp, #144]
  40dd04:	ldr	x8, [x0, #304]
  40dd08:	add	x29, sp, #0x40
  40dd0c:	mov	w21, w5
  40dd10:	mov	x23, x0
  40dd14:	cmp	x8, #0x400
  40dd18:	mov	x24, x1
  40dd1c:	str	x4, [sp, #8]
  40dd20:	str	w3, [sp, #28]
  40dd24:	stur	x2, [x29, #-16]
  40dd28:	b.lt	40de8c <wcrtomb@plt+0xb05c>  // b.tstop
  40dd2c:	ldrsw	x19, [x23, #364]
  40dd30:	cmp	x8, x19
  40dd34:	b.le	40dd78 <wcrtomb@plt+0xaf48>
  40dd38:	add	x8, x19, x19, lsl #2
  40dd3c:	lsl	x20, x8, #4
  40dd40:	ldr	x8, [x23, #296]
  40dd44:	add	x8, x8, x20
  40dd48:	ldr	x0, [x8, #8]
  40dd4c:	bl	402be0 <free@plt>
  40dd50:	ldr	x8, [x23, #296]
  40dd54:	add	x8, x8, x20
  40dd58:	ldr	x0, [x8, #48]
  40dd5c:	bl	402be0 <free@plt>
  40dd60:	ldr	x8, [x23, #304]
  40dd64:	add	x19, x19, #0x1
  40dd68:	add	x20, x20, #0x50
  40dd6c:	cmp	x19, x8
  40dd70:	b.lt	40dd40 <wcrtomb@plt+0xaf10>  // b.tstop
  40dd74:	ldrsw	x19, [x23, #364]
  40dd78:	ldr	x8, [x23, #368]
  40dd7c:	str	x19, [x23, #304]
  40dd80:	cbz	x8, 40de00 <wcrtomb@plt+0xafd0>
  40dd84:	ldr	x9, [x23, #352]
  40dd88:	cmp	x9, #0x1
  40dd8c:	b.lt	40ddfc <wcrtomb@plt+0xafcc>  // b.tstop
  40dd90:	ldr	x0, [x8]
  40dd94:	bl	402be0 <free@plt>
  40dd98:	ldr	x8, [x23, #376]
  40dd9c:	ldr	x0, [x8]
  40dda0:	bl	402be0 <free@plt>
  40dda4:	ldr	x8, [x23, #376]
  40dda8:	str	xzr, [x8]
  40ddac:	ldr	x8, [x23, #368]
  40ddb0:	str	xzr, [x8]
  40ddb4:	ldr	x8, [x23, #352]
  40ddb8:	cmp	x8, #0x2
  40ddbc:	b.lt	40ddfc <wcrtomb@plt+0xafcc>  // b.tstop
  40ddc0:	mov	w19, #0x1                   	// #1
  40ddc4:	ldr	x8, [x23, #368]
  40ddc8:	ldr	x0, [x8, x19, lsl #3]
  40ddcc:	bl	402be0 <free@plt>
  40ddd0:	ldr	x8, [x23, #376]
  40ddd4:	ldr	x0, [x8, x19, lsl #3]
  40ddd8:	bl	402be0 <free@plt>
  40dddc:	ldr	x8, [x23, #376]
  40dde0:	str	xzr, [x8, x19, lsl #3]
  40dde4:	ldr	x8, [x23, #368]
  40dde8:	str	xzr, [x8, x19, lsl #3]
  40ddec:	ldr	x8, [x23, #352]
  40ddf0:	add	x19, x19, #0x1
  40ddf4:	cmp	x19, x8
  40ddf8:	b.lt	40ddc4 <wcrtomb@plt+0xaf94>  // b.tstop
  40ddfc:	str	wzr, [x23, #360]
  40de00:	ldrb	w8, [x23, #1048]
  40de04:	cbz	w8, 40de8c <wcrtomb@plt+0xb05c>
  40de08:	ldr	x8, [x23, #432]
  40de0c:	cbz	x8, 40de8c <wcrtomb@plt+0xb05c>
  40de10:	ldr	x9, [x23, #352]
  40de14:	tbnz	x9, #63, 40de5c <wcrtomb@plt+0xb02c>
  40de18:	ldur	x0, [x8, #-8]
  40de1c:	bl	402be0 <free@plt>
  40de20:	ldr	x8, [x23, #432]
  40de24:	stur	xzr, [x8, #-8]
  40de28:	ldr	x8, [x23, #352]
  40de2c:	cmp	x8, #0x1
  40de30:	b.lt	40de5c <wcrtomb@plt+0xb02c>  // b.tstop
  40de34:	mov	x19, xzr
  40de38:	ldr	x8, [x23, #432]
  40de3c:	ldr	x0, [x8, x19, lsl #3]
  40de40:	bl	402be0 <free@plt>
  40de44:	ldr	x8, [x23, #432]
  40de48:	str	xzr, [x8, x19, lsl #3]
  40de4c:	ldr	x8, [x23, #352]
  40de50:	add	x19, x19, #0x1
  40de54:	cmp	x19, x8
  40de58:	b.lt	40de38 <wcrtomb@plt+0xb008>  // b.tstop
  40de5c:	ldr	w8, [x23, #364]
  40de60:	cmp	w8, #0x1
  40de64:	b.lt	40de88 <wcrtomb@plt+0xb058>  // b.tstop
  40de68:	ldr	x10, [x23, #296]
  40de6c:	mov	x9, xzr
  40de70:	mov	x11, #0xffffffffffffffff    	// #-1
  40de74:	add	x10, x10, #0x48
  40de78:	add	x9, x9, #0x1
  40de7c:	cmp	x9, x8
  40de80:	str	x11, [x10], #80
  40de84:	b.cc	40de78 <wcrtomb@plt+0xb048>  // b.lo, b.ul, b.last
  40de88:	str	xzr, [x23, #440]
  40de8c:	ldr	x8, [x23, #352]
  40de90:	cbnz	x8, 40de9c <wcrtomb@plt+0xb06c>
  40de94:	mov	x0, x23
  40de98:	bl	40e2a4 <wcrtomb@plt+0xb474>
  40de9c:	ldur	x8, [x29, #-16]
  40dea0:	stur	x24, [x29, #-8]
  40dea4:	ldr	x22, [x23, #368]
  40dea8:	ldrb	w10, [x23, #459]
  40deac:	ldrb	w9, [x8]
  40deb0:	str	x10, [sp, #32]
  40deb4:	str	w9, [sp, #4]
  40deb8:	strb	w10, [x8]
  40debc:	tbz	w21, #0, 40ded8 <wcrtomb@plt+0xb0a8>
  40dec0:	ldr	x8, [x23, #424]
  40dec4:	str	xzr, [x23, #272]
  40dec8:	cbnz	x8, 40ded8 <wcrtomb@plt+0xb0a8>
  40decc:	ldr	x1, [x23, #176]
  40ded0:	add	x0, x23, #0x198
  40ded4:	bl	40d644 <wcrtomb@plt+0xa814>
  40ded8:	ldr	x8, [sp, #32]
  40dedc:	mov	x26, xzr
  40dee0:	mov	x20, xzr
  40dee4:	stur	xzr, [x29, #-24]
  40dee8:	add	x8, x23, x8
  40deec:	add	x8, x8, #0x1cc
  40def0:	str	x8, [sp, #16]
  40def4:	mov	x27, x24
  40def8:	mov	x25, x24
  40defc:	ldr	x19, [x22, x26, lsl #3]
  40df00:	cbz	x19, 40e070 <wcrtomb@plt+0xb240>
  40df04:	mov	x24, x27
  40df08:	ldrsw	x8, [x23, #364]
  40df0c:	cmp	x26, x8
  40df10:	b.ge	40df80 <wcrtomb@plt+0xb150>  // b.tcont
  40df14:	tbz	w21, #0, 40df2c <wcrtomb@plt+0xb0fc>
  40df18:	ldr	x9, [x23, #296]
  40df1c:	mov	w10, #0x50                  	// #80
  40df20:	madd	x9, x26, x10, x9
  40df24:	ldr	x9, [x9, #56]
  40df28:	cbnz	x9, 40df5c <wcrtomb@plt+0xb12c>
  40df2c:	ldrb	w9, [x24]
  40df30:	ldr	x9, [x19, x9, lsl #3]
  40df34:	cmp	x9, x26
  40df38:	b.ne	40df58 <wcrtomb@plt+0xb128>  // b.any
  40df3c:	add	x9, x24, #0x1
  40df40:	stur	x9, [x29, #-8]
  40df44:	ldrb	w10, [x9], #1
  40df48:	ldr	x10, [x19, x10, lsl #3]
  40df4c:	cmp	x10, x26
  40df50:	b.eq	40df40 <wcrtomb@plt+0xb110>  // b.none
  40df54:	sub	x24, x9, #0x1
  40df58:	tbz	w21, #0, 40dfe0 <wcrtomb@plt+0xb1b0>
  40df5c:	ldur	x3, [x29, #-16]
  40df60:	mov	x0, x23
  40df64:	mov	x1, x24
  40df68:	mov	x2, x25
  40df6c:	bl	40e3d8 <wcrtomb@plt+0xb5a8>
  40df70:	mov	x24, x0
  40df74:	stur	x0, [x29, #-8]
  40df78:	mov	x25, x0
  40df7c:	b	40df84 <wcrtomb@plt+0xb154>
  40df80:	tbz	w21, #0, 40dfe0 <wcrtomb@plt+0xb1b0>
  40df84:	ldr	x8, [x23, #296]
  40df88:	mov	w9, #0x50                  	// #80
  40df8c:	madd	x8, x26, x9, x8
  40df90:	ldr	x8, [x8, #56]
  40df94:	cbz	x8, 40e044 <wcrtomb@plt+0xb214>
  40df98:	ldur	x8, [x29, #-16]
  40df9c:	cmp	x24, x8
  40dfa0:	b.cs	40e044 <wcrtomb@plt+0xb214>  // b.hs, b.nlast
  40dfa4:	ldrb	w8, [x24]
  40dfa8:	add	x8, x23, x8, lsl #2
  40dfac:	ldr	w8, [x8, #1308]
  40dfb0:	cmn	w8, #0x1
  40dfb4:	b.ne	40e044 <wcrtomb@plt+0xb214>  // b.any
  40dfb8:	ldur	x3, [x29, #-16]
  40dfbc:	sub	x2, x29, #0x8
  40dfc0:	mov	x0, x23
  40dfc4:	mov	x1, x26
  40dfc8:	bl	40e454 <wcrtomb@plt+0xb624>
  40dfcc:	ldur	x24, [x29, #-8]
  40dfd0:	ldr	x22, [x23, #368]
  40dfd4:	mov	x28, x0
  40dfd8:	mov	x25, x24
  40dfdc:	b	40e058 <wcrtomb@plt+0xb228>
  40dfe0:	add	x27, x24, #0x1
  40dfe4:	stur	x27, [x29, #-8]
  40dfe8:	ldrb	w9, [x24]
  40dfec:	ldr	x9, [x19, x9, lsl #3]
  40dff0:	ldr	x10, [x22, x9, lsl #3]
  40dff4:	cbz	x10, 40e170 <wcrtomb@plt+0xb340>
  40dff8:	cmp	x26, x8
  40dffc:	b.ge	40e02c <wcrtomb@plt+0xb1fc>  // b.tcont
  40e000:	ldrb	w8, [x27]
  40e004:	ldr	x8, [x10, x8, lsl #3]
  40e008:	cmp	x8, x9
  40e00c:	b.ne	40e02c <wcrtomb@plt+0xb1fc>  // b.any
  40e010:	add	x8, x24, #0x2
  40e014:	stur	x8, [x29, #-8]
  40e018:	ldrb	w11, [x8], #1
  40e01c:	ldr	x11, [x10, x11, lsl #3]
  40e020:	cmp	x11, x9
  40e024:	b.eq	40e014 <wcrtomb@plt+0xb1e4>  // b.none
  40e028:	sub	x27, x8, #0x1
  40e02c:	add	x24, x27, #0x1
  40e030:	stur	x24, [x29, #-8]
  40e034:	ldrb	w8, [x27]
  40e038:	mov	x26, x9
  40e03c:	ldr	x28, [x10, x8, lsl #3]
  40e040:	b	40e058 <wcrtomb@plt+0xb228>
  40e044:	add	x8, x24, #0x1
  40e048:	stur	x8, [x29, #-8]
  40e04c:	ldrb	w9, [x24]
  40e050:	mov	x24, x8
  40e054:	ldr	x28, [x19, x9, lsl #3]
  40e058:	ldr	x19, [x22, x28, lsl #3]
  40e05c:	mov	x20, x26
  40e060:	mov	x26, x28
  40e064:	mov	x27, x24
  40e068:	cbnz	x19, 40df08 <wcrtomb@plt+0xb0d8>
  40e06c:	b	40e074 <wcrtomb@plt+0xb244>
  40e070:	mov	x28, x26
  40e074:	tbnz	x28, #63, 40e180 <wcrtomb@plt+0xb350>
  40e078:	ldr	x8, [x23, #376]
  40e07c:	ldr	x8, [x8, x28, lsl #3]
  40e080:	cbz	x8, 40e154 <wcrtomb@plt+0xb324>
  40e084:	ldrb	w9, [x27]
  40e088:	ldr	x8, [x23, #384]
  40e08c:	add	x9, x23, x9
  40e090:	ldrb	w8, [x8, x28]
  40e094:	ldrb	w9, [x9, #460]
  40e098:	tst	w9, w8
  40e09c:	b.ne	40e25c <wcrtomb@plt+0xb42c>  // b.any
  40e0a0:	ldur	x8, [x29, #-16]
  40e0a4:	cmp	x27, x8
  40e0a8:	b.ne	40e0cc <wcrtomb@plt+0xb29c>  // b.any
  40e0ac:	ldr	x8, [x23, #296]
  40e0b0:	mov	w9, #0x50                  	// #80
  40e0b4:	madd	x8, x28, x9, x8
  40e0b8:	ldrb	w9, [x8, #32]
  40e0bc:	ldrh	w8, [x8, #34]
  40e0c0:	and	w8, w9, w8, lsr #6
  40e0c4:	tst	w8, #0x7
  40e0c8:	b.ne	40e25c <wcrtomb@plt+0xb42c>  // b.any
  40e0cc:	tbz	w21, #0, 40e130 <wcrtomb@plt+0xb300>
  40e0d0:	ldrsw	x8, [x23, #364]
  40e0d4:	cmp	x28, x8
  40e0d8:	b.ge	40e0fc <wcrtomb@plt+0xb2cc>  // b.tcont
  40e0dc:	ldur	x3, [x29, #-16]
  40e0e0:	mov	x0, x23
  40e0e4:	mov	x1, x27
  40e0e8:	mov	x2, x25
  40e0ec:	bl	40e3d8 <wcrtomb@plt+0xb5a8>
  40e0f0:	mov	x27, x0
  40e0f4:	mov	x25, x0
  40e0f8:	stur	x0, [x29, #-8]
  40e0fc:	ldr	x8, [x23, #296]
  40e100:	mov	w9, #0x50                  	// #80
  40e104:	madd	x8, x28, x9, x8
  40e108:	ldr	x8, [x8, #56]
  40e10c:	cbz	x8, 40e130 <wcrtomb@plt+0xb300>
  40e110:	ldur	x8, [x29, #-16]
  40e114:	cmp	x27, x8
  40e118:	b.cs	40e130 <wcrtomb@plt+0xb300>  // b.hs, b.nlast
  40e11c:	ldrb	w8, [x27]
  40e120:	add	x8, x23, x8, lsl #2
  40e124:	ldr	w8, [x8, #1308]
  40e128:	cmn	w8, #0x1
  40e12c:	b.eq	40e20c <wcrtomb@plt+0xb3dc>  // b.none
  40e130:	ldr	x8, [x23, #376]
  40e134:	add	x24, x27, #0x1
  40e138:	mov	x20, x28
  40e13c:	ldr	x8, [x8, x28, lsl #3]
  40e140:	stur	x24, [x29, #-8]
  40e144:	ldrb	w9, [x27]
  40e148:	mov	x27, x24
  40e14c:	ldr	x26, [x8, x9, lsl #3]
  40e150:	b	40defc <wcrtomb@plt+0xb0cc>
  40e154:	ldrb	w2, [x27]
  40e158:	mov	x0, x28
  40e15c:	mov	x1, x23
  40e160:	bl	40e718 <wcrtomb@plt+0xb8e8>
  40e164:	ldr	x22, [x23, #368]
  40e168:	mov	x26, x28
  40e16c:	b	40defc <wcrtomb@plt+0xb0cc>
  40e170:	mov	x24, x27
  40e174:	mov	x28, x9
  40e178:	mov	x20, x26
  40e17c:	tbz	x28, #63, 40e078 <wcrtomb@plt+0xb248>
  40e180:	cmn	x28, #0x2
  40e184:	b.ne	40e1a8 <wcrtomb@plt+0xb378>  // b.any
  40e188:	ldurb	w2, [x24, #-1]
  40e18c:	mov	x0, x20
  40e190:	mov	x1, x23
  40e194:	bl	40e718 <wcrtomb@plt+0xb8e8>
  40e198:	ldr	x22, [x23, #368]
  40e19c:	mov	x26, x0
  40e1a0:	mov	x27, x24
  40e1a4:	b	40defc <wcrtomb@plt+0xb0cc>
  40e1a8:	ldur	x8, [x29, #-16]
  40e1ac:	cmp	x24, x8
  40e1b0:	b.hi	40e254 <wcrtomb@plt+0xb424>  // b.pmore
  40e1b4:	ldurb	w8, [x24, #-1]
  40e1b8:	ldr	x9, [sp, #32]
  40e1bc:	cmp	w8, w9
  40e1c0:	b.ne	40e254 <wcrtomb@plt+0xb424>  // b.any
  40e1c4:	ldr	x8, [x23, #392]
  40e1c8:	ldr	x26, [x8, x20, lsl #3]
  40e1cc:	tbnz	x26, #63, 40e254 <wcrtomb@plt+0xb424>
  40e1d0:	ldur	x8, [x29, #-24]
  40e1d4:	mov	x27, x24
  40e1d8:	mov	x25, x24
  40e1dc:	add	x8, x8, #0x1
  40e1e0:	stur	x8, [x29, #-24]
  40e1e4:	ldr	w8, [sp, #28]
  40e1e8:	tbnz	w8, #0, 40defc <wcrtomb@plt+0xb0cc>
  40e1ec:	ldr	x8, [sp, #16]
  40e1f0:	mov	x26, xzr
  40e1f4:	mov	x27, x24
  40e1f8:	mov	x25, x24
  40e1fc:	ldrb	w8, [x8]
  40e200:	cmp	w8, #0x4
  40e204:	b.eq	40defc <wcrtomb@plt+0xb0cc>  // b.none
  40e208:	b	40e238 <wcrtomb@plt+0xb408>
  40e20c:	ldur	x3, [x29, #-16]
  40e210:	sub	x2, x29, #0x8
  40e214:	mov	x0, x23
  40e218:	mov	x1, x28
  40e21c:	bl	40e454 <wcrtomb@plt+0xb624>
  40e220:	ldur	x24, [x29, #-8]
  40e224:	ldr	x22, [x23, #368]
  40e228:	mov	x26, x0
  40e22c:	mov	x20, x28
  40e230:	mov	x27, x24
  40e234:	b	40def8 <wcrtomb@plt+0xb0c8>
  40e238:	cmp	w8, #0x2
  40e23c:	b.ne	40e24c <wcrtomb@plt+0xb41c>  // b.any
  40e240:	ldrsw	x8, [x23, #364]
  40e244:	sub	x26, x8, #0x1
  40e248:	b	40def4 <wcrtomb@plt+0xb0c4>
  40e24c:	ldr	x26, [x23, #400]
  40e250:	b	40def4 <wcrtomb@plt+0xb0c4>
  40e254:	mov	x24, xzr
  40e258:	stur	xzr, [x29, #-8]
  40e25c:	ldr	x9, [sp, #8]
  40e260:	cbz	x9, 40e274 <wcrtomb@plt+0xb444>
  40e264:	ldr	x8, [x9]
  40e268:	ldur	x10, [x29, #-24]
  40e26c:	add	x8, x8, x10
  40e270:	str	x8, [x9]
  40e274:	ldur	x8, [x29, #-16]
  40e278:	ldr	w9, [sp, #4]
  40e27c:	mov	x0, x24
  40e280:	strb	w9, [x8]
  40e284:	ldp	x20, x19, [sp, #144]
  40e288:	ldp	x22, x21, [sp, #128]
  40e28c:	ldp	x24, x23, [sp, #112]
  40e290:	ldp	x26, x25, [sp, #96]
  40e294:	ldp	x28, x27, [sp, #80]
  40e298:	ldp	x29, x30, [sp, #64]
  40e29c:	add	sp, sp, #0xa0
  40e2a0:	ret
  40e2a4:	stp	x29, x30, [sp, #-64]!
  40e2a8:	stp	x22, x21, [sp, #32]
  40e2ac:	stp	x20, x19, [sp, #48]
  40e2b0:	ldr	x22, [x0, #352]
  40e2b4:	ldr	x8, [x0, #304]
  40e2b8:	str	x23, [sp, #16]
  40e2bc:	mov	x29, sp
  40e2c0:	subs	x2, x8, x22
  40e2c4:	b.le	40e3c0 <wcrtomb@plt+0xb590>
  40e2c8:	ldr	x8, [x0, #368]
  40e2cc:	add	x9, x22, #0x2
  40e2d0:	mov	x19, x0
  40e2d4:	add	x1, x29, #0x18
  40e2d8:	sub	x10, x8, #0x10
  40e2dc:	cmp	x8, #0x0
  40e2e0:	csel	x0, xzr, x10, eq  // eq = none
  40e2e4:	csel	x8, xzr, x9, eq  // eq = none
  40e2e8:	mov	x3, #0xffffffffffffffff    	// #-1
  40e2ec:	mov	w4, #0x8                   	// #8
  40e2f0:	str	x8, [x29, #24]
  40e2f4:	bl	40c6a0 <wcrtomb@plt+0x9870>
  40e2f8:	add	x8, x0, #0x10
  40e2fc:	stp	xzr, xzr, [x0]
  40e300:	str	x8, [x19, #368]
  40e304:	ldr	x23, [x29, #24]
  40e308:	sub	x20, x23, #0x2
  40e30c:	lsr	x8, x20, #60
  40e310:	str	x20, [x19, #352]
  40e314:	cbnz	x8, 40e3d4 <wcrtomb@plt+0xb5a4>
  40e318:	ldr	x0, [x19, #376]
  40e31c:	lsl	x21, x20, #3
  40e320:	mov	x1, x21
  40e324:	bl	410d00 <wcrtomb@plt+0xded0>
  40e328:	ldr	x8, [x19, #384]
  40e32c:	str	x0, [x19, #376]
  40e330:	mov	x1, x20
  40e334:	mov	x0, x8
  40e338:	bl	410d00 <wcrtomb@plt+0xded0>
  40e33c:	ldr	x8, [x19, #392]
  40e340:	str	x0, [x19, #384]
  40e344:	mov	x1, x21
  40e348:	mov	x0, x8
  40e34c:	bl	410d00 <wcrtomb@plt+0xded0>
  40e350:	ldrb	w8, [x19, #1048]
  40e354:	str	x0, [x19, #392]
  40e358:	cbz	w8, 40e38c <wcrtomb@plt+0xb55c>
  40e35c:	lsr	x8, x23, #60
  40e360:	cbnz	x8, 40e3d4 <wcrtomb@plt+0xb5a4>
  40e364:	ldr	x8, [x19, #432]
  40e368:	lsl	x1, x23, #3
  40e36c:	sub	x9, x8, #0x10
  40e370:	cmp	x8, #0x0
  40e374:	csel	x0, xzr, x9, eq  // eq = none
  40e378:	bl	410d00 <wcrtomb@plt+0xded0>
  40e37c:	cbnz	x22, 40e384 <wcrtomb@plt+0xb554>
  40e380:	stp	xzr, xzr, [x0]
  40e384:	add	x8, x0, #0x10
  40e388:	str	x8, [x19, #432]
  40e38c:	cmp	x22, x20
  40e390:	b.ge	40e3c0 <wcrtomb@plt+0xb590>  // b.tcont
  40e394:	ldrb	w8, [x19, #1048]
  40e398:	ldr	x9, [x19, #368]
  40e39c:	str	xzr, [x9, x22, lsl #3]
  40e3a0:	ldr	x9, [x19, #376]
  40e3a4:	str	xzr, [x9, x22, lsl #3]
  40e3a8:	cbz	w8, 40e3b4 <wcrtomb@plt+0xb584>
  40e3ac:	ldr	x9, [x19, #432]
  40e3b0:	str	xzr, [x9, x22, lsl #3]
  40e3b4:	add	x22, x22, #0x1
  40e3b8:	cmp	x20, x22
  40e3bc:	b.ne	40e398 <wcrtomb@plt+0xb568>  // b.any
  40e3c0:	ldp	x20, x19, [sp, #48]
  40e3c4:	ldp	x22, x21, [sp, #32]
  40e3c8:	ldr	x23, [sp, #16]
  40e3cc:	ldp	x29, x30, [sp], #64
  40e3d0:	ret
  40e3d4:	bl	410ec0 <wcrtomb@plt+0xe090>
  40e3d8:	sub	sp, sp, #0x40
  40e3dc:	stp	x29, x30, [sp, #16]
  40e3e0:	stp	x22, x21, [sp, #32]
  40e3e4:	stp	x20, x19, [sp, #48]
  40e3e8:	ldrb	w8, [x1]
  40e3ec:	mov	x21, x1
  40e3f0:	add	x29, sp, #0x10
  40e3f4:	add	x8, x0, x8
  40e3f8:	ldrb	w8, [x8, #716]
  40e3fc:	cbz	w8, 40e408 <wcrtomb@plt+0xb5d8>
  40e400:	mov	x20, x21
  40e404:	b	40e43c <wcrtomb@plt+0xb60c>
  40e408:	mov	x20, x2
  40e40c:	cmp	x2, x21
  40e410:	b.cs	40e43c <wcrtomb@plt+0xb60c>  // b.hs, b.nlast
  40e414:	mov	x19, x3
  40e418:	mov	x22, x0
  40e41c:	sub	x2, x19, x20
  40e420:	sub	x0, x29, #0x4
  40e424:	mov	x1, x20
  40e428:	mov	x3, x22
  40e42c:	bl	40cfd0 <wcrtomb@plt+0xa1a0>
  40e430:	add	x20, x20, w0, sxtw
  40e434:	cmp	x20, x21
  40e438:	b.cc	40e41c <wcrtomb@plt+0xb5ec>  // b.lo, b.ul, b.last
  40e43c:	mov	x0, x20
  40e440:	ldp	x20, x19, [sp, #48]
  40e444:	ldp	x22, x21, [sp, #32]
  40e448:	ldp	x29, x30, [sp, #16]
  40e44c:	add	sp, sp, #0x40
  40e450:	ret
  40e454:	stp	x29, x30, [sp, #-80]!
  40e458:	stp	x24, x23, [sp, #32]
  40e45c:	stp	x22, x21, [sp, #48]
  40e460:	stp	x20, x19, [sp, #64]
  40e464:	mov	x19, x1
  40e468:	ldr	x1, [x2]
  40e46c:	mov	x29, sp
  40e470:	mov	x20, x0
  40e474:	mov	x22, x2
  40e478:	sub	x2, x3, x1
  40e47c:	add	x0, x29, #0x1c
  40e480:	mov	x3, x20
  40e484:	str	x25, [sp, #16]
  40e488:	bl	40cfd0 <wcrtomb@plt+0xa1a0>
  40e48c:	mov	w23, w0
  40e490:	cmp	w0, #0x1
  40e494:	mov	w24, wzr
  40e498:	mov	x21, x19
  40e49c:	str	xzr, [x20, #416]
  40e4a0:	b.lt	40e53c <wcrtomb@plt+0xb70c>  // b.tstop
  40e4a4:	cbz	w24, 40e4b4 <wcrtomb@plt+0xb684>
  40e4a8:	ldrsw	x8, [x20, #364]
  40e4ac:	cmp	x21, x8
  40e4b0:	b.lt	40e53c <wcrtomb@plt+0xb70c>  // b.tstop
  40e4b4:	ldr	x8, [x20, #368]
  40e4b8:	ldr	x25, [x8, x21, lsl #3]
  40e4bc:	cbnz	x25, 40e4f8 <wcrtomb@plt+0xb6c8>
  40e4c0:	ldr	x8, [x20, #376]
  40e4c4:	ldr	x25, [x8, x21, lsl #3]
  40e4c8:	cbnz	x25, 40e4f8 <wcrtomb@plt+0xb6c8>
  40e4cc:	ldr	x8, [x22]
  40e4d0:	mov	x0, x21
  40e4d4:	mov	x1, x20
  40e4d8:	ldrb	w2, [x8]
  40e4dc:	bl	40e718 <wcrtomb@plt+0xb8e8>
  40e4e0:	ldr	x8, [x20, #368]
  40e4e4:	ldr	x25, [x8, x21, lsl #3]
  40e4e8:	cbnz	x25, 40e4f8 <wcrtomb@plt+0xb6c8>
  40e4ec:	ldr	x8, [x20, #376]
  40e4f0:	ldr	x25, [x8, x21, lsl #3]
  40e4f4:	cbz	x25, 40e6f8 <wcrtomb@plt+0xb8c8>
  40e4f8:	ldr	x8, [x22]
  40e4fc:	ldrb	w2, [x8]
  40e500:	ldr	x9, [x25, x2, lsl #3]
  40e504:	cmn	x9, #0x2
  40e508:	b.ne	40e51c <wcrtomb@plt+0xb6ec>  // b.any
  40e50c:	mov	x0, x21
  40e510:	mov	x1, x20
  40e514:	bl	40e718 <wcrtomb@plt+0xb8e8>
  40e518:	ldr	x8, [x22]
  40e51c:	add	x9, x8, #0x1
  40e520:	str	x9, [x22]
  40e524:	ldrb	w8, [x8]
  40e528:	add	w24, w24, #0x1
  40e52c:	cmp	w23, w24
  40e530:	ldr	x21, [x25, x8, lsl #3]
  40e534:	b.ne	40e4a4 <wcrtomb@plt+0xb674>  // b.any
  40e538:	mov	w24, w23
  40e53c:	ldr	x8, [x22]
  40e540:	sub	w9, w23, w24
  40e544:	add	x8, x8, w9, sxtw
  40e548:	str	x8, [x22]
  40e54c:	ldr	w8, [x29, #28]
  40e550:	cmn	w8, #0x1
  40e554:	b.eq	40e604 <wcrtomb@plt+0xb7d4>  // b.none
  40e558:	ldr	x8, [x20, #296]
  40e55c:	mov	w9, #0x50                  	// #80
  40e560:	madd	x9, x19, x9, x8
  40e564:	ldr	x9, [x9, #72]
  40e568:	tbz	x9, #63, 40e5ec <wcrtomb@plt+0xb7bc>
  40e56c:	ldr	x9, [x20, #440]
  40e570:	cmp	x9, #0x400
  40e574:	b.lt	40e5d8 <wcrtomb@plt+0xb7a8>  // b.tstop
  40e578:	ldr	x8, [x20, #352]
  40e57c:	tbnz	x8, #63, 40e5a8 <wcrtomb@plt+0xb778>
  40e580:	mov	x22, #0xffffffffffffffff    	// #-1
  40e584:	ldr	x8, [x20, #432]
  40e588:	ldr	x0, [x8, x22, lsl #3]
  40e58c:	bl	402be0 <free@plt>
  40e590:	ldr	x8, [x20, #432]
  40e594:	str	xzr, [x8, x22, lsl #3]
  40e598:	ldr	x8, [x20, #352]
  40e59c:	add	x22, x22, #0x1
  40e5a0:	cmp	x22, x8
  40e5a4:	b.lt	40e584 <wcrtomb@plt+0xb754>  // b.tstop
  40e5a8:	ldp	x8, x9, [x20, #296]
  40e5ac:	cmp	x9, #0x1
  40e5b0:	b.lt	40e5d0 <wcrtomb@plt+0xb7a0>  // b.tstop
  40e5b4:	mov	x10, xzr
  40e5b8:	add	x11, x8, #0x48
  40e5bc:	mov	x12, #0xffffffffffffffff    	// #-1
  40e5c0:	add	x10, x10, #0x1
  40e5c4:	cmp	x10, x9
  40e5c8:	str	x12, [x11], #80
  40e5cc:	b.lt	40e5c0 <wcrtomb@plt+0xb790>  // b.tstop
  40e5d0:	mov	x9, xzr
  40e5d4:	str	xzr, [x20, #440]
  40e5d8:	add	x10, x9, #0x1
  40e5dc:	mov	w11, #0x50                  	// #80
  40e5e0:	str	x10, [x20, #440]
  40e5e4:	madd	x10, x19, x11, x8
  40e5e8:	str	x9, [x10, #72]
  40e5ec:	ldr	x10, [x20, #432]
  40e5f0:	ldr	x10, [x10, x21, lsl #3]
  40e5f4:	cbz	x10, 40e60c <wcrtomb@plt+0xb7dc>
  40e5f8:	ldr	x22, [x10, x9, lsl #3]
  40e5fc:	tbz	x22, #63, 40e6dc <wcrtomb@plt+0xb8ac>
  40e600:	b	40e634 <wcrtomb@plt+0xb804>
  40e604:	mov	x22, x21
  40e608:	b	40e6dc <wcrtomb@plt+0xb8ac>
  40e60c:	mov	w0, #0x2000                	// #8192
  40e610:	bl	410cb0 <wcrtomb@plt+0xde80>
  40e614:	ldr	x8, [x20, #432]
  40e618:	mov	w1, #0xff                  	// #255
  40e61c:	mov	w2, #0x2000                	// #8192
  40e620:	str	x0, [x8, x21, lsl #3]
  40e624:	ldr	x8, [x20, #432]
  40e628:	ldr	x0, [x8, x21, lsl #3]
  40e62c:	bl	4029d0 <memset@plt>
  40e630:	ldr	x8, [x20, #296]
  40e634:	mov	w9, #0x50                  	// #80
  40e638:	madd	x9, x19, x9, x8
  40e63c:	add	x22, x20, #0x198
  40e640:	cmn	x21, #0x1
  40e644:	add	x0, x9, #0x30
  40e648:	b.eq	40e668 <wcrtomb@plt+0xb838>  // b.none
  40e64c:	mov	w9, #0x50                  	// #80
  40e650:	madd	x8, x21, x9, x8
  40e654:	add	x1, x8, #0x8
  40e658:	mov	w2, #0xffffffff            	// #-1
  40e65c:	mov	x3, x22
  40e660:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40e664:	b	40e670 <wcrtomb@plt+0xb840>
  40e668:	mov	x1, x22
  40e66c:	bl	40d680 <wcrtomb@plt+0xa850>
  40e670:	ldr	x8, [x20, #416]
  40e674:	cmp	x8, #0x1
  40e678:	b.lt	40e6a4 <wcrtomb@plt+0xb874>  // b.tstop
  40e67c:	ldr	x9, [x20, #344]
  40e680:	ldr	x10, [x20, #408]
  40e684:	mov	w11, wzr
  40e688:	ldr	x12, [x10], #16
  40e68c:	subs	x8, x8, #0x1
  40e690:	ldr	w12, [x9, x12, lsl #2]
  40e694:	orr	w11, w12, w11
  40e698:	b.ne	40e688 <wcrtomb@plt+0xb858>  // b.any
  40e69c:	eor	w2, w11, #0x7
  40e6a0:	b	40e6a8 <wcrtomb@plt+0xb878>
  40e6a4:	mov	w2, #0x7                   	// #7
  40e6a8:	mov	x0, x20
  40e6ac:	mov	x1, x22
  40e6b0:	bl	40d774 <wcrtomb@plt+0xa944>
  40e6b4:	mov	x22, x0
  40e6b8:	mov	x0, x20
  40e6bc:	bl	40e2a4 <wcrtomb@plt+0xb474>
  40e6c0:	ldr	x9, [x20, #296]
  40e6c4:	ldr	x8, [x20, #432]
  40e6c8:	mov	w10, #0x50                  	// #80
  40e6cc:	madd	x9, x19, x10, x9
  40e6d0:	ldr	x8, [x8, x21, lsl #3]
  40e6d4:	ldr	x9, [x9, #72]
  40e6d8:	str	x22, [x8, x9, lsl #3]
  40e6dc:	mov	x0, x22
  40e6e0:	ldp	x20, x19, [sp, #64]
  40e6e4:	ldp	x22, x21, [sp, #48]
  40e6e8:	ldp	x24, x23, [sp, #32]
  40e6ec:	ldr	x25, [sp, #16]
  40e6f0:	ldp	x29, x30, [sp], #80
  40e6f4:	ret
  40e6f8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40e6fc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40e700:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40e704:	add	x0, x0, #0x9db
  40e708:	add	x1, x1, #0x8be
  40e70c:	add	x3, x3, #0xa08
  40e710:	mov	w2, #0xc93                 	// #3219
  40e714:	bl	402d90 <__assert_fail@plt>
  40e718:	sub	sp, sp, #0x140
  40e71c:	stp	x29, x30, [sp, #224]
  40e720:	stp	x28, x27, [sp, #240]
  40e724:	stp	x26, x25, [sp, #256]
  40e728:	stp	x24, x23, [sp, #272]
  40e72c:	stp	x22, x21, [sp, #288]
  40e730:	stp	x20, x19, [sp, #304]
  40e734:	ldr	x8, [x1, #296]
  40e738:	mov	w9, #0x50                  	// #80
  40e73c:	mov	x20, x1
  40e740:	mov	x19, x0
  40e744:	madd	x8, x0, x9, x8
  40e748:	ldrh	w8, [x8, #34]
  40e74c:	mov	w9, #0x178                 	// #376
  40e750:	add	x29, sp, #0xe0
  40e754:	str	x2, [sp, #48]
  40e758:	cmp	w8, #0x0
  40e75c:	mov	w8, #0x170                 	// #368
  40e760:	csel	x8, x8, x9, eq  // eq = none
  40e764:	ldr	x21, [x1, x8]
  40e768:	ldr	x27, [x21, x0, lsl #3]
  40e76c:	cbnz	x27, 40e800 <wcrtomb@plt+0xb9d0>
  40e770:	ldr	w8, [x20, #360]
  40e774:	cmp	w8, #0x400
  40e778:	b.lt	40e7cc <wcrtomb@plt+0xb99c>  // b.tstop
  40e77c:	ldrsw	x22, [x20, #364]
  40e780:	ldr	x8, [x20, #352]
  40e784:	cmp	x8, x22
  40e788:	b.le	40e7c4 <wcrtomb@plt+0xb994>
  40e78c:	ldr	x8, [x20, #368]
  40e790:	ldr	x0, [x8, x22, lsl #3]
  40e794:	bl	402be0 <free@plt>
  40e798:	ldr	x8, [x20, #376]
  40e79c:	ldr	x0, [x8, x22, lsl #3]
  40e7a0:	bl	402be0 <free@plt>
  40e7a4:	ldr	x8, [x20, #376]
  40e7a8:	str	xzr, [x8, x22, lsl #3]
  40e7ac:	ldr	x8, [x20, #368]
  40e7b0:	str	xzr, [x8, x22, lsl #3]
  40e7b4:	ldr	x8, [x20, #352]
  40e7b8:	add	x22, x22, #0x1
  40e7bc:	cmp	x22, x8
  40e7c0:	b.lt	40e78c <wcrtomb@plt+0xb95c>  // b.tstop
  40e7c4:	mov	w8, wzr
  40e7c8:	str	wzr, [x20, #360]
  40e7cc:	add	w8, w8, #0x1
  40e7d0:	mov	w0, #0x800                 	// #2048
  40e7d4:	str	w8, [x20, #360]
  40e7d8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40e7dc:	mov	x9, #0xfffffffffffffffe    	// #-2
  40e7e0:	mov	x27, x0
  40e7e4:	mov	x8, xzr
  40e7e8:	dup	v0.2d, x9
  40e7ec:	str	x0, [x21, x19, lsl #3]
  40e7f0:	str	q0, [x27, x8]
  40e7f4:	add	x8, x8, #0x10
  40e7f8:	cmp	x8, #0x800
  40e7fc:	b.ne	40e7f0 <wcrtomb@plt+0xb9c0>  // b.any
  40e800:	ldr	x8, [x20, #384]
  40e804:	mov	w9, #0x50                  	// #80
  40e808:	strb	wzr, [x8, x19]
  40e80c:	ldr	x8, [x20, #296]
  40e810:	madd	x9, x19, x9, x8
  40e814:	ldrb	w8, [x9, #32]
  40e818:	ldrh	w9, [x9, #34]
  40e81c:	and	w10, w8, w9, lsr #6
  40e820:	tst	w10, #0x7
  40e824:	b.eq	40e84c <wcrtomb@plt+0xba1c>  // b.none
  40e828:	ldr	x8, [x20, #384]
  40e82c:	ldrb	w9, [x8, x19]
  40e830:	orr	w9, w9, #0x4
  40e834:	strb	w9, [x8, x19]
  40e838:	ldr	x8, [x20, #296]
  40e83c:	mov	w9, #0x50                  	// #80
  40e840:	madd	x9, x19, x9, x8
  40e844:	ldrb	w8, [x9, #32]
  40e848:	ldrh	w9, [x9, #34]
  40e84c:	and	w10, w8, w9, lsr #3
  40e850:	tst	w10, #0x7
  40e854:	b.eq	40e87c <wcrtomb@plt+0xba4c>  // b.none
  40e858:	ldr	x8, [x20, #384]
  40e85c:	ldrb	w9, [x8, x19]
  40e860:	orr	w9, w9, #0x2
  40e864:	strb	w9, [x8, x19]
  40e868:	ldr	x8, [x20, #296]
  40e86c:	mov	w9, #0x50                  	// #80
  40e870:	madd	x9, x19, x9, x8
  40e874:	ldrb	w8, [x9, #32]
  40e878:	ldrh	w9, [x9, #34]
  40e87c:	and	w8, w9, w8
  40e880:	tst	w8, #0x7
  40e884:	b.eq	40e898 <wcrtomb@plt+0xba68>  // b.none
  40e888:	ldr	x8, [x20, #384]
  40e88c:	ldrb	w9, [x8, x19]
  40e890:	orr	w9, w9, #0x1
  40e894:	strb	w9, [x8, x19]
  40e898:	ldr	x21, [x20, #176]
  40e89c:	lsr	x8, x21, #59
  40e8a0:	cbnz	x8, 40ee98 <wcrtomb@plt+0xc068>
  40e8a4:	lsl	x0, x21, #4
  40e8a8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40e8ac:	stp	xzr, x21, [x29, #-24]
  40e8b0:	stur	x0, [x29, #-32]
  40e8b4:	ldr	x9, [x20, #296]
  40e8b8:	mov	w8, #0x50                  	// #80
  40e8bc:	madd	x8, x19, x8, x9
  40e8c0:	ldr	x8, [x8, #16]
  40e8c4:	cmp	x8, #0x1
  40e8c8:	b.lt	40e95c <wcrtomb@plt+0xbb2c>  // b.tstop
  40e8cc:	ldr	x8, [x20, #320]
  40e8d0:	mov	x21, xzr
  40e8d4:	mov	w22, #0x50                  	// #80
  40e8d8:	mov	w23, #0x18                  	// #24
  40e8dc:	madd	x10, x19, x22, x9
  40e8e0:	ldr	x10, [x10, #8]
  40e8e4:	lsl	x24, x21, #4
  40e8e8:	ldr	x10, [x10, x24]
  40e8ec:	madd	x11, x10, x23, x8
  40e8f0:	ldr	x11, [x11, #8]
  40e8f4:	cmp	x11, #0x1
  40e8f8:	b.lt	40e948 <wcrtomb@plt+0xbb18>  // b.tstop
  40e8fc:	mov	x25, xzr
  40e900:	mov	x26, xzr
  40e904:	mul	x9, x10, x23
  40e908:	ldr	x8, [x8, x9]
  40e90c:	sub	x2, x29, #0x20
  40e910:	add	x8, x8, x25
  40e914:	ldp	x0, x1, [x8]
  40e918:	bl	40dbd0 <wcrtomb@plt+0xada0>
  40e91c:	ldr	x9, [x20, #296]
  40e920:	add	x26, x26, #0x1
  40e924:	add	x25, x25, #0x10
  40e928:	madd	x8, x19, x22, x9
  40e92c:	ldr	x10, [x8, #8]
  40e930:	ldr	x8, [x20, #320]
  40e934:	ldr	x10, [x10, x24]
  40e938:	madd	x11, x10, x23, x8
  40e93c:	ldr	x11, [x11, #8]
  40e940:	cmp	x26, x11
  40e944:	b.lt	40e904 <wcrtomb@plt+0xbad4>  // b.tstop
  40e948:	madd	x10, x19, x22, x9
  40e94c:	ldr	x10, [x10, #16]
  40e950:	add	x21, x21, #0x1
  40e954:	cmp	x21, x10
  40e958:	b.lt	40e8dc <wcrtomb@plt+0xbaac>  // b.tstop
  40e95c:	ldr	x21, [x20, #176]
  40e960:	str	x27, [sp, #40]
  40e964:	lsr	x8, x21, #59
  40e968:	cbnz	x8, 40ee98 <wcrtomb@plt+0xc068>
  40e96c:	lsl	x0, x21, #4
  40e970:	bl	410cb0 <wcrtomb@plt+0xde80>
  40e974:	ldur	x12, [x29, #-24]
  40e978:	movi	v0.2d, #0xffffffffffffffff
  40e97c:	stp	xzr, x21, [x29, #-48]
  40e980:	stur	x0, [x29, #-56]
  40e984:	cmp	x12, #0x1
  40e988:	stp	q0, q0, [x29, #-96]
  40e98c:	b.lt	40ec30 <wcrtomb@plt+0xbe00>  // b.tstop
  40e990:	ldr	x9, [sp, #48]
  40e994:	ldur	x13, [x29, #-32]
  40e998:	mov	w10, #0x1                   	// #1
  40e99c:	mov	x26, xzr
  40e9a0:	ubfx	x8, x9, #6, #2
  40e9a4:	str	x8, [sp, #88]
  40e9a8:	and	x8, x9, #0xff
  40e9ac:	str	x8, [sp, #72]
  40e9b0:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40e9b4:	ldr	q0, [x8, #2144]
  40e9b8:	add	x21, x20, #0x3f0
  40e9bc:	add	x22, x20, #0x3d0
  40e9c0:	add	x28, sp, #0x60
  40e9c4:	lsl	x9, x10, x9
  40e9c8:	sub	x27, x29, #0x60
  40e9cc:	mov	w15, #0x50                  	// #80
  40e9d0:	str	x9, [sp, #80]
  40e9d4:	str	q0, [sp, #16]
  40e9d8:	stp	x13, x12, [sp, #56]
  40e9dc:	add	x8, x13, x26, lsl #4
  40e9e0:	ldr	x9, [x20, #144]
  40e9e4:	ldp	x23, x24, [x8]
  40e9e8:	ldr	x8, [x9, x23, lsl #3]
  40e9ec:	cmp	x8, #0xff
  40e9f0:	b.hi	40ea28 <wcrtomb@plt+0xbbf8>  // b.pmore
  40e9f4:	movi	v0.2d, #0x0
  40e9f8:	lsr	x9, x8, #3
  40e9fc:	stp	q0, q0, [sp, #96]
  40ea00:	and	x9, x9, #0x1ffffffffffffff8
  40ea04:	ldr	x10, [x28, x9]
  40ea08:	ldr	x14, [sp, #72]
  40ea0c:	mov	w11, #0x1                   	// #1
  40ea10:	lsl	x11, x11, x8
  40ea14:	cmp	x8, x14
  40ea18:	orr	x8, x11, x10
  40ea1c:	str	x8, [x28, x9]
  40ea20:	cset	w25, eq  // eq = none
  40ea24:	b	40eaf4 <wcrtomb@plt+0xbcc4>
  40ea28:	cmp	x8, #0x114
  40ea2c:	b.lt	40ea5c <wcrtomb@plt+0xbc2c>  // b.tstop
  40ea30:	ldr	x9, [x20]
  40ea34:	add	x8, x9, x8, lsl #5
  40ea38:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40ea3c:	add	x8, x8, x9
  40ea40:	ldp	q1, q0, [x8]
  40ea44:	ldp	x9, x8, [sp, #80]
  40ea48:	stp	q1, q0, [sp, #96]
  40ea4c:	ldr	x8, [x28, x8, lsl #3]
  40ea50:	tst	x8, x9
  40ea54:	cset	w25, ne  // ne = any
  40ea58:	b	40eaf4 <wcrtomb@plt+0xbcc4>
  40ea5c:	cmp	x8, #0x10a
  40ea60:	b.ne	40ec24 <wcrtomb@plt+0xbdf4>  // b.any
  40ea64:	ldr	x8, [x20]
  40ea68:	ldr	x9, [x20, #24]
  40ea6c:	add	x8, x8, x9, lsl #5
  40ea70:	ldp	q1, q0, [x8]
  40ea74:	ldp	x11, x9, [sp, #80]
  40ea78:	stp	q1, q0, [sp, #96]
  40ea7c:	ldr	x8, [x20, #296]
  40ea80:	ldr	x9, [x28, x9, lsl #3]
  40ea84:	madd	x10, x19, x15, x8
  40ea88:	ldrb	w10, [x10, #32]
  40ea8c:	tst	x9, x11
  40ea90:	cset	w25, ne  // ne = any
  40ea94:	and	w9, w24, w10
  40ea98:	tst	w9, #0x7
  40ea9c:	b.eq	40eaf4 <wcrtomb@plt+0xbcc4>  // b.none
  40eaa0:	madd	x10, x19, x15, x8
  40eaa4:	ldr	x9, [x10, #56]!
  40eaa8:	cbnz	x9, 40ead8 <wcrtomb@plt+0xbca8>
  40eaac:	madd	x8, x19, x15, x8
  40eab0:	mov	w0, #0x10                  	// #16
  40eab4:	stp	x10, x8, [sp]
  40eab8:	bl	410cb0 <wcrtomb@plt+0xde80>
  40eabc:	ldr	x8, [sp, #8]
  40eac0:	ldr	q0, [sp, #16]
  40eac4:	mov	w15, #0x50                  	// #80
  40eac8:	str	x0, [x8, #48]
  40eacc:	ldr	x8, [sp]
  40ead0:	str	q0, [x8]
  40ead4:	ldr	x8, [x20, #296]
  40ead8:	madd	x8, x19, x15, x8
  40eadc:	add	x2, x8, #0x30
  40eae0:	mov	x0, x23
  40eae4:	mov	x1, x24
  40eae8:	bl	40dbd0 <wcrtomb@plt+0xada0>
  40eaec:	ldp	x13, x12, [sp, #56]
  40eaf0:	mov	w15, #0x50                  	// #80
  40eaf4:	cmp	w24, #0x1ff
  40eaf8:	b.ne	40eb3c <wcrtomb@plt+0xbd0c>  // b.any
  40eafc:	cbz	w25, 40ec04 <wcrtomb@plt+0xbdd4>
  40eb00:	mov	x8, xzr
  40eb04:	ldr	q0, [x28, x8]
  40eb08:	ldr	q1, [x27, x8]
  40eb0c:	and	v0.16b, v1.16b, v0.16b
  40eb10:	str	q0, [x27, x8]
  40eb14:	add	x8, x8, #0x10
  40eb18:	cmp	x8, #0x20
  40eb1c:	b.ne	40eb04 <wcrtomb@plt+0xbcd4>  // b.any
  40eb20:	sub	x2, x29, #0x38
  40eb24:	mov	x0, x23
  40eb28:	mov	x1, x24
  40eb2c:	bl	40d708 <wcrtomb@plt+0xa8d8>
  40eb30:	ldp	x13, x12, [sp, #56]
  40eb34:	mov	w15, #0x50                  	// #80
  40eb38:	b	40ec24 <wcrtomb@plt+0xbdf4>
  40eb3c:	ldr	x8, [x20, #296]
  40eb40:	lsr	w9, w24, #3
  40eb44:	madd	x8, x19, x15, x8
  40eb48:	ldrb	w8, [x8, #32]
  40eb4c:	and	w8, w8, #0x7
  40eb50:	tst	w8, w24, lsr #6
  40eb54:	b.ne	40eb78 <wcrtomb@plt+0xbd48>  // b.any
  40eb58:	mov	x10, xzr
  40eb5c:	ldr	q0, [x21, x10]
  40eb60:	ldr	q1, [x28, x10]
  40eb64:	bic	v0.16b, v1.16b, v0.16b
  40eb68:	str	q0, [x28, x10]
  40eb6c:	add	x10, x10, #0x10
  40eb70:	cmp	x10, #0x20
  40eb74:	b.ne	40eb5c <wcrtomb@plt+0xbd2c>  // b.any
  40eb78:	tst	w9, w8
  40eb7c:	b.ne	40eba0 <wcrtomb@plt+0xbd70>  // b.any
  40eb80:	mov	x9, xzr
  40eb84:	ldr	q0, [x22, x9]
  40eb88:	ldr	q1, [x28, x9]
  40eb8c:	bic	v0.16b, v1.16b, v0.16b
  40eb90:	str	q0, [x28, x9]
  40eb94:	add	x9, x9, #0x10
  40eb98:	cmp	x9, #0x20
  40eb9c:	b.ne	40eb84 <wcrtomb@plt+0xbd54>  // b.any
  40eba0:	tst	w8, w24
  40eba4:	b.ne	40ebd4 <wcrtomb@plt+0xbda4>  // b.any
  40eba8:	mov	x8, xzr
  40ebac:	add	x9, x20, x8
  40ebb0:	ldr	q0, [x9, #976]
  40ebb4:	ldr	q1, [x9, #1008]
  40ebb8:	ldr	q2, [x28, x8]
  40ebbc:	orr	v0.16b, v1.16b, v0.16b
  40ebc0:	and	v0.16b, v2.16b, v0.16b
  40ebc4:	str	q0, [x28, x8]
  40ebc8:	add	x8, x8, #0x10
  40ebcc:	cmp	x8, #0x20
  40ebd0:	b.ne	40ebac <wcrtomb@plt+0xbd7c>  // b.any
  40ebd4:	ldp	q0, q1, [sp, #96]
  40ebd8:	orr	v0.16b, v1.16b, v0.16b
  40ebdc:	dup	v1.2d, v0.d[1]
  40ebe0:	orr	v0.16b, v0.16b, v1.16b
  40ebe4:	fmov	x8, d0
  40ebe8:	cbz	x8, 40ec24 <wcrtomb@plt+0xbdf4>
  40ebec:	ldp	x9, x8, [sp, #80]
  40ebf0:	ldr	x8, [x28, x8, lsl #3]
  40ebf4:	tst	x8, x9
  40ebf8:	cset	w8, ne  // ne = any
  40ebfc:	and	w8, w25, w8
  40ec00:	tbnz	w8, #0, 40eb00 <wcrtomb@plt+0xbcd0>
  40ec04:	mov	x8, xzr
  40ec08:	ldr	q0, [x28, x8]
  40ec0c:	ldr	q1, [x27, x8]
  40ec10:	bic	v0.16b, v1.16b, v0.16b
  40ec14:	str	q0, [x27, x8]
  40ec18:	add	x8, x8, #0x10
  40ec1c:	cmp	x8, #0x20
  40ec20:	b.ne	40ec08 <wcrtomb@plt+0xbdd8>  // b.any
  40ec24:	add	x26, x26, #0x1
  40ec28:	cmp	x26, x12
  40ec2c:	b.lt	40e9dc <wcrtomb@plt+0xbbac>  // b.tstop
  40ec30:	ldr	x21, [x20, #176]
  40ec34:	lsr	x8, x21, #59
  40ec38:	cbnz	x8, 40ee98 <wcrtomb@plt+0xc068>
  40ec3c:	lsl	x0, x21, #4
  40ec40:	bl	410cb0 <wcrtomb@plt+0xde80>
  40ec44:	stp	xzr, x21, [sp, #104]
  40ec48:	ldur	x8, [x29, #-48]
  40ec4c:	str	x0, [sp, #96]
  40ec50:	ldrb	w9, [x20, #328]
  40ec54:	ldr	x26, [sp, #40]
  40ec58:	cmp	x8, #0x0
  40ec5c:	b.le	40ed44 <wcrtomb@plt+0xbf14>
  40ec60:	cbz	w9, 40ecc4 <wcrtomb@plt+0xbe94>
  40ec64:	ldrb	w9, [x20, #1048]
  40ec68:	cmp	w9, #0x1
  40ec6c:	cset	w11, ne  // ne = any
  40ec70:	cbz	w9, 40ec9c <wcrtomb@plt+0xbe6c>
  40ec74:	ldr	x9, [x20, #280]
  40ec78:	ldur	x10, [x29, #-56]
  40ec7c:	mov	w12, #0x1                   	// #1
  40ec80:	ldr	x11, [x10], #16
  40ec84:	ldrb	w13, [x9, x11]
  40ec88:	and	w11, w13, #0x1
  40ec8c:	tbz	w13, #0, 40ec9c <wcrtomb@plt+0xbe6c>
  40ec90:	cmp	x12, x8
  40ec94:	add	x12, x12, #0x1
  40ec98:	b.lt	40ec80 <wcrtomb@plt+0xbe50>  // b.tstop
  40ec9c:	cbz	w11, 40ecc4 <wcrtomb@plt+0xbe94>
  40eca0:	ldr	x8, [x20, #296]
  40eca4:	sub	x1, x29, #0x38
  40eca8:	add	x3, sp, #0x60
  40ecac:	mov	w2, #0xffffffff            	// #-1
  40ecb0:	add	x0, x8, #0x8
  40ecb4:	bl	40d9a4 <wcrtomb@plt+0xab74>
  40ecb8:	add	x0, sp, #0x60
  40ecbc:	sub	x1, x29, #0x38
  40ecc0:	bl	40d680 <wcrtomb@plt+0xa850>
  40ecc4:	mov	x8, xzr
  40ecc8:	mov	w21, wzr
  40eccc:	sub	x9, x29, #0x60
  40ecd0:	add	x11, x20, x8
  40ecd4:	ldr	x10, [x9, x8]
  40ecd8:	ldr	x12, [x11, #1008]
  40ecdc:	ldr	x11, [x11, #976]
  40ece0:	orr	w13, w21, #0x4
  40ece4:	add	x8, x8, #0x8
  40ece8:	tst	x12, x10
  40ecec:	csel	w13, w21, w13, eq  // eq = none
  40ecf0:	orr	x12, x11, x12
  40ecf4:	tst	x11, x10
  40ecf8:	orr	w11, w13, #0x2
  40ecfc:	csel	w11, w13, w11, eq  // eq = none
  40ed00:	bics	xzr, x10, x12
  40ed04:	cset	w10, ne  // ne = any
  40ed08:	cmp	x8, #0x20
  40ed0c:	orr	w21, w11, w10
  40ed10:	b.ne	40ecd0 <wcrtomb@plt+0xbea0>  // b.any
  40ed14:	ldur	x8, [x29, #-48]
  40ed18:	cmp	x8, #0x1
  40ed1c:	b.lt	40ed5c <wcrtomb@plt+0xbf2c>  // b.tstop
  40ed20:	ldr	x9, [x20, #344]
  40ed24:	ldur	x10, [x29, #-56]
  40ed28:	mov	w22, wzr
  40ed2c:	ldr	x11, [x10], #16
  40ed30:	subs	x8, x8, #0x1
  40ed34:	ldr	w11, [x9, x11, lsl #2]
  40ed38:	orr	w22, w11, w22
  40ed3c:	b.ne	40ed2c <wcrtomb@plt+0xbefc>  // b.any
  40ed40:	b	40ed60 <wcrtomb@plt+0xbf30>
  40ed44:	cbz	w9, 40ee88 <wcrtomb@plt+0xc058>
  40ed48:	ldrsw	x8, [x20, #364]
  40ed4c:	ldr	x23, [x20, #400]
  40ed50:	mov	x24, xzr
  40ed54:	sub	x25, x8, #0x1
  40ed58:	b	40edc8 <wcrtomb@plt+0xbf98>
  40ed5c:	mov	w22, wzr
  40ed60:	bics	wzr, w21, w22
  40ed64:	b.eq	40ed80 <wcrtomb@plt+0xbf50>  // b.none
  40ed68:	eor	w2, w22, #0x7
  40ed6c:	sub	x1, x29, #0x38
  40ed70:	mov	x0, x20
  40ed74:	bl	40d774 <wcrtomb@plt+0xa944>
  40ed78:	mov	x23, x0
  40ed7c:	b	40ed84 <wcrtomb@plt+0xbf54>
  40ed80:	mov	x23, #0xffffffffffffffff    	// #-1
  40ed84:	and	w21, w22, w21
  40ed88:	mov	x24, x23
  40ed8c:	tbz	w21, #2, 40eda4 <wcrtomb@plt+0xbf74>
  40ed90:	sub	x1, x29, #0x38
  40ed94:	mov	w2, #0x4                   	// #4
  40ed98:	mov	x0, x20
  40ed9c:	bl	40d774 <wcrtomb@plt+0xa944>
  40eda0:	mov	x24, x0
  40eda4:	mov	x25, x23
  40eda8:	tbz	w21, #1, 40edc0 <wcrtomb@plt+0xbf90>
  40edac:	sub	x1, x29, #0x38
  40edb0:	mov	w2, #0x2                   	// #2
  40edb4:	mov	x0, x20
  40edb8:	bl	40d774 <wcrtomb@plt+0xa944>
  40edbc:	mov	x25, x0
  40edc0:	mov	x0, x20
  40edc4:	bl	40e2a4 <wcrtomb@plt+0xb474>
  40edc8:	mov	x8, xzr
  40edcc:	add	x9, x20, #0x1cc
  40edd0:	sub	x10, x29, #0x60
  40edd4:	ubfx	x11, x8, #6, #26
  40edd8:	ldr	x11, [x10, x11, lsl #3]
  40eddc:	lsr	x11, x11, x8
  40ede0:	tbz	w11, #0, 40ee08 <wcrtomb@plt+0xbfd8>
  40ede4:	ldrb	w12, [x9, x8]
  40ede8:	mov	x11, x24
  40edec:	cmp	w12, #0x4
  40edf0:	b.eq	40ee04 <wcrtomb@plt+0xbfd4>  // b.none
  40edf4:	cmp	w12, #0x2
  40edf8:	mov	x11, x25
  40edfc:	b.eq	40ee04 <wcrtomb@plt+0xbfd4>  // b.none
  40ee00:	mov	x11, x23
  40ee04:	str	x11, [x26, x8, lsl #3]
  40ee08:	add	x8, x8, #0x1
  40ee0c:	cmp	x8, #0x100
  40ee10:	b.ne	40edd4 <wcrtomb@plt+0xbfa4>  // b.any
  40ee14:	ldur	x0, [x29, #-56]
  40ee18:	bl	402be0 <free@plt>
  40ee1c:	ldur	x0, [x29, #-32]
  40ee20:	bl	402be0 <free@plt>
  40ee24:	ldr	x0, [sp, #96]
  40ee28:	bl	402be0 <free@plt>
  40ee2c:	ldrb	w8, [x20, #459]
  40ee30:	sub	x10, x29, #0x60
  40ee34:	lsr	x9, x8, #3
  40ee38:	and	x9, x9, #0x18
  40ee3c:	ldr	x9, [x10, x9]
  40ee40:	lsr	x9, x9, x8
  40ee44:	tbz	w9, #0, 40ee5c <wcrtomb@plt+0xc02c>
  40ee48:	ldr	x9, [x26, x8, lsl #3]
  40ee4c:	ldr	x10, [x20, #392]
  40ee50:	mov	x11, #0xffffffffffffffff    	// #-1
  40ee54:	str	x9, [x10, x19, lsl #3]
  40ee58:	str	x11, [x26, x8, lsl #3]
  40ee5c:	ldr	x8, [sp, #48]
  40ee60:	ldp	x20, x19, [sp, #304]
  40ee64:	ldp	x22, x21, [sp, #288]
  40ee68:	ldp	x24, x23, [sp, #272]
  40ee6c:	and	x8, x8, #0xff
  40ee70:	ldr	x0, [x26, x8, lsl #3]
  40ee74:	ldp	x26, x25, [sp, #256]
  40ee78:	ldp	x28, x27, [sp, #240]
  40ee7c:	ldp	x29, x30, [sp, #224]
  40ee80:	add	sp, sp, #0x140
  40ee84:	ret
  40ee88:	mov	x25, #0xffffffffffffffff    	// #-1
  40ee8c:	mov	x24, #0xffffffffffffffff    	// #-1
  40ee90:	mov	x23, #0xffffffffffffffff    	// #-1
  40ee94:	b	40edc8 <wcrtomb@plt+0xbf98>
  40ee98:	bl	410ec0 <wcrtomb@plt+0xe090>
  40ee9c:	sub	sp, sp, #0x40
  40eea0:	stp	x29, x30, [sp, #32]
  40eea4:	stp	x20, x19, [sp, #48]
  40eea8:	add	x29, sp, #0x20
  40eeac:	mov	x19, x0
  40eeb0:	bl	402c00 <__ctype_get_mb_cur_max@plt>
  40eeb4:	cmp	x0, #0x1
  40eeb8:	cset	w8, hi  // hi = pmore
  40eebc:	strb	w8, [x19]
  40eec0:	b.hi	40eef8 <wcrtomb@plt+0xc0c8>  // b.pmore
  40eec4:	mov	w20, #0x1                   	// #1
  40eec8:	cmp	w20, #0x100
  40eecc:	b.eq	40ef00 <wcrtomb@plt+0xc0d0>  // b.none
  40eed0:	sub	w8, w20, #0x1
  40eed4:	add	x0, sp, #0x10
  40eed8:	sub	x1, x29, #0x4
  40eedc:	strb	wzr, [sp, #17]
  40eee0:	sturb	w20, [x29, #-4]
  40eee4:	strb	w8, [sp, #16]
  40eee8:	sturb	wzr, [x29, #-3]
  40eeec:	bl	402d30 <strcoll@plt>
  40eef0:	add	w20, w20, #0x1
  40eef4:	tbnz	w0, #31, 40eec8 <wcrtomb@plt+0xc098>
  40eef8:	mov	w8, wzr
  40eefc:	b	40ef04 <wcrtomb@plt+0xc0d4>
  40ef00:	mov	w8, #0x1                   	// #1
  40ef04:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40ef08:	add	x1, x1, #0xa82
  40ef0c:	sub	x0, x29, #0x4
  40ef10:	add	x3, sp, #0x10
  40ef14:	mov	w2, #0x2                   	// #2
  40ef18:	strb	w8, [x19, #1]
  40ef1c:	str	xzr, [sp, #16]
  40ef20:	bl	410f04 <wcrtomb@plt+0xe0d4>
  40ef24:	ldur	w8, [x29, #-4]
  40ef28:	cmp	x0, #0x2
  40ef2c:	cset	w9, eq  // eq = none
  40ef30:	mov	x20, xzr
  40ef34:	cmp	w8, #0x100
  40ef38:	cset	w8, eq  // eq = none
  40ef3c:	and	w8, w9, w8
  40ef40:	strb	w8, [x19, #2]
  40ef44:	add	x19, x19, #0x104
  40ef48:	sub	x0, x29, #0x4
  40ef4c:	add	x1, sp, #0xc
  40ef50:	add	x3, sp, #0x10
  40ef54:	mov	w2, #0x1                   	// #1
  40ef58:	strb	w20, [sp, #12]
  40ef5c:	str	xzr, [sp, #16]
  40ef60:	bl	410f04 <wcrtomb@plt+0xe0d4>
  40ef64:	add	x8, x19, x20
  40ef68:	cmp	x0, #0x2
  40ef6c:	sub	x8, x8, #0x101
  40ef70:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  40ef74:	strb	w9, [x8]
  40ef78:	ldur	w8, [x29, #-4]
  40ef7c:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  40ef80:	str	w8, [x19, x20, lsl #2]
  40ef84:	add	x20, x20, #0x1
  40ef88:	cmp	x20, #0x100
  40ef8c:	b.ne	40ef48 <wcrtomb@plt+0xc118>  // b.any
  40ef90:	ldp	x20, x19, [sp, #48]
  40ef94:	ldp	x29, x30, [sp, #32]
  40ef98:	add	sp, sp, #0x40
  40ef9c:	ret
  40efa0:	stp	x29, x30, [sp, #-80]!
  40efa4:	stp	x26, x25, [sp, #16]
  40efa8:	stp	x24, x23, [sp, #32]
  40efac:	stp	x22, x21, [sp, #48]
  40efb0:	stp	x20, x19, [sp, #64]
  40efb4:	mov	x29, sp
  40efb8:	mov	x19, x1
  40efbc:	mov	w20, w0
  40efc0:	bl	402d60 <towupper@plt>
  40efc4:	mov	w21, w0
  40efc8:	bl	402df0 <towlower@plt>
  40efcc:	cmp	w21, w20
  40efd0:	mov	w22, w0
  40efd4:	b.ne	40efe0 <wcrtomb@plt+0xc1b0>  // b.any
  40efd8:	mov	w23, wzr
  40efdc:	b	40efe8 <wcrtomb@plt+0xc1b8>
  40efe0:	mov	w23, #0x1                   	// #1
  40efe4:	str	w21, [x19]
  40efe8:	cmp	w22, w21
  40efec:	b.eq	40f014 <wcrtomb@plt+0xc1e4>  // b.none
  40eff0:	cmp	w22, w20
  40eff4:	b.eq	40f014 <wcrtomb@plt+0xc1e4>  // b.none
  40eff8:	mov	w0, w22
  40effc:	bl	402d60 <towupper@plt>
  40f000:	cmp	w0, w21
  40f004:	b.ne	40f014 <wcrtomb@plt+0xc1e4>  // b.any
  40f008:	add	w8, w23, #0x1
  40f00c:	str	w22, [x19, w23, uxtw #2]
  40f010:	mov	w23, w8
  40f014:	adrp	x26, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f018:	mov	x25, xzr
  40f01c:	add	x26, x26, #0xa5c
  40f020:	ldrsh	w24, [x26, x25]
  40f024:	cmp	w24, w20
  40f028:	b.eq	40f058 <wcrtomb@plt+0xc228>  // b.none
  40f02c:	cmp	w22, w24
  40f030:	b.eq	40f058 <wcrtomb@plt+0xc228>  // b.none
  40f034:	cmp	w21, w24
  40f038:	b.eq	40f058 <wcrtomb@plt+0xc228>  // b.none
  40f03c:	mov	w0, w24
  40f040:	bl	402d60 <towupper@plt>
  40f044:	cmp	w0, w21
  40f048:	b.ne	40f058 <wcrtomb@plt+0xc228>  // b.any
  40f04c:	add	w8, w23, #0x1
  40f050:	str	w24, [x19, w23, sxtw #2]
  40f054:	mov	w23, w8
  40f058:	add	x25, x25, #0x2
  40f05c:	cmp	x25, #0x26
  40f060:	b.ne	40f020 <wcrtomb@plt+0xc1f0>  // b.any
  40f064:	mov	w0, w23
  40f068:	ldp	x20, x19, [sp, #64]
  40f06c:	ldp	x22, x21, [sp, #48]
  40f070:	ldp	x24, x23, [sp, #32]
  40f074:	ldp	x26, x25, [sp, #16]
  40f078:	ldp	x29, x30, [sp], #80
  40f07c:	ret
  40f080:	stp	x29, x30, [sp, #-16]!
  40f084:	mov	w0, #0xe                   	// #14
  40f088:	mov	x29, sp
  40f08c:	bl	4028b0 <nl_langinfo@plt>
  40f090:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40f094:	add	x8, x8, #0xdb3
  40f098:	cmp	x0, #0x0
  40f09c:	csel	x8, x8, x0, eq  // eq = none
  40f0a0:	ldrb	w9, [x8]
  40f0a4:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f0a8:	add	x10, x10, #0xa85
  40f0ac:	cmp	w9, #0x0
  40f0b0:	csel	x0, x10, x8, eq  // eq = none
  40f0b4:	ldp	x29, x30, [sp], #16
  40f0b8:	ret
  40f0bc:	stp	x29, x30, [sp, #-32]!
  40f0c0:	stp	x20, x19, [sp, #16]
  40f0c4:	mov	x29, sp
  40f0c8:	cbz	x0, 40f148 <wcrtomb@plt+0xc318>
  40f0cc:	mov	w1, #0x2f                  	// #47
  40f0d0:	mov	x19, x0
  40f0d4:	bl	402ae0 <strrchr@plt>
  40f0d8:	cmp	x0, #0x0
  40f0dc:	csinc	x20, x19, x0, eq  // eq = none
  40f0e0:	sub	x8, x20, x19
  40f0e4:	cmp	x8, #0x7
  40f0e8:	b.lt	40f12c <wcrtomb@plt+0xc2fc>  // b.tstop
  40f0ec:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f0f0:	sub	x0, x20, #0x7
  40f0f4:	add	x1, x1, #0xac3
  40f0f8:	mov	w2, #0x7                   	// #7
  40f0fc:	bl	402960 <strncmp@plt>
  40f100:	cbnz	w0, 40f12c <wcrtomb@plt+0xc2fc>
  40f104:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f108:	add	x1, x1, #0xacb
  40f10c:	mov	w2, #0x3                   	// #3
  40f110:	mov	x0, x20
  40f114:	bl	402960 <strncmp@plt>
  40f118:	mov	x19, x20
  40f11c:	cbnz	w0, 40f12c <wcrtomb@plt+0xc2fc>
  40f120:	add	x19, x20, #0x3
  40f124:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f128:	str	x19, [x8, #1320]
  40f12c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f130:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f134:	str	x19, [x8, #1968]
  40f138:	str	x19, [x9, #1272]
  40f13c:	ldp	x20, x19, [sp, #16]
  40f140:	ldp	x29, x30, [sp], #32
  40f144:	ret
  40f148:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f14c:	ldr	x1, [x8, #1280]
  40f150:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f154:	add	x0, x0, #0xa8b
  40f158:	bl	402760 <fputs@plt>
  40f15c:	bl	402b10 <abort@plt>
  40f160:	sub	sp, sp, #0x40
  40f164:	stp	x20, x19, [sp, #48]
  40f168:	mov	w19, w3
  40f16c:	mov	x20, x2
  40f170:	mov	x3, sp
  40f174:	mov	w2, w4
  40f178:	stp	x29, x30, [sp, #32]
  40f17c:	add	x29, sp, #0x20
  40f180:	bl	41c9f4 <_obstack_memory_used@@Base+0xb768>
  40f184:	cbz	w0, 40f190 <wcrtomb@plt+0xc360>
  40f188:	mov	w19, #0xfffffffe            	// #-2
  40f18c:	b	40f1ac <wcrtomb@plt+0xc37c>
  40f190:	mov	x0, sp
  40f194:	mov	x1, x20
  40f198:	mov	w2, w19
  40f19c:	bl	41cab0 <_obstack_memory_used@@Base+0xb824>
  40f1a0:	mov	w19, w0
  40f1a4:	mov	x0, sp
  40f1a8:	bl	41c9b8 <_obstack_memory_used@@Base+0xb72c>
  40f1ac:	mov	w0, w19
  40f1b0:	ldp	x20, x19, [sp, #48]
  40f1b4:	ldp	x29, x30, [sp, #32]
  40f1b8:	add	sp, sp, #0x40
  40f1bc:	ret
  40f1c0:	stp	x29, x30, [sp, #-48]!
  40f1c4:	str	x21, [sp, #16]
  40f1c8:	stp	x20, x19, [sp, #32]
  40f1cc:	mov	x29, sp
  40f1d0:	mov	x19, x0
  40f1d4:	bl	402da0 <__errno_location@plt>
  40f1d8:	ldr	w21, [x0]
  40f1dc:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f1e0:	add	x8, x8, #0x7b8
  40f1e4:	cmp	x19, #0x0
  40f1e8:	mov	x20, x0
  40f1ec:	csel	x0, x8, x19, eq  // eq = none
  40f1f0:	mov	w1, #0x38                  	// #56
  40f1f4:	bl	410e34 <wcrtomb@plt+0xe004>
  40f1f8:	str	w21, [x20]
  40f1fc:	ldp	x20, x19, [sp, #32]
  40f200:	ldr	x21, [sp, #16]
  40f204:	ldp	x29, x30, [sp], #48
  40f208:	ret
  40f20c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f210:	add	x8, x8, #0x7b8
  40f214:	cmp	x0, #0x0
  40f218:	csel	x8, x8, x0, eq  // eq = none
  40f21c:	ldr	w0, [x8]
  40f220:	ret
  40f224:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f228:	add	x8, x8, #0x7b8
  40f22c:	cmp	x0, #0x0
  40f230:	csel	x8, x8, x0, eq  // eq = none
  40f234:	str	w1, [x8]
  40f238:	ret
  40f23c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f240:	add	x8, x8, #0x7b8
  40f244:	cmp	x0, #0x0
  40f248:	ubfx	w9, w1, #5, #3
  40f24c:	csel	x8, x8, x0, eq  // eq = none
  40f250:	add	x8, x8, w9, uxtw #2
  40f254:	ldr	w9, [x8, #8]
  40f258:	lsr	w10, w9, w1
  40f25c:	and	w0, w10, #0x1
  40f260:	and	w10, w2, #0x1
  40f264:	eor	w10, w0, w10
  40f268:	lsl	w10, w10, w1
  40f26c:	eor	w9, w10, w9
  40f270:	str	w9, [x8, #8]
  40f274:	ret
  40f278:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f27c:	add	x8, x8, #0x7b8
  40f280:	cmp	x0, #0x0
  40f284:	csel	x8, x8, x0, eq  // eq = none
  40f288:	ldr	w0, [x8, #4]
  40f28c:	str	w1, [x8, #4]
  40f290:	ret
  40f294:	stp	x29, x30, [sp, #-16]!
  40f298:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f29c:	add	x8, x8, #0x7b8
  40f2a0:	cmp	x0, #0x0
  40f2a4:	csel	x8, x8, x0, eq  // eq = none
  40f2a8:	mov	w9, #0xa                   	// #10
  40f2ac:	mov	x29, sp
  40f2b0:	str	w9, [x8]
  40f2b4:	cbz	x1, 40f2c8 <wcrtomb@plt+0xc498>
  40f2b8:	cbz	x2, 40f2c8 <wcrtomb@plt+0xc498>
  40f2bc:	stp	x1, x2, [x8, #40]
  40f2c0:	ldp	x29, x30, [sp], #16
  40f2c4:	ret
  40f2c8:	bl	402b10 <abort@plt>
  40f2cc:	sub	sp, sp, #0x60
  40f2d0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40f2d4:	add	x8, x8, #0x7b8
  40f2d8:	cmp	x4, #0x0
  40f2dc:	stp	x29, x30, [sp, #16]
  40f2e0:	str	x25, [sp, #32]
  40f2e4:	stp	x24, x23, [sp, #48]
  40f2e8:	stp	x22, x21, [sp, #64]
  40f2ec:	stp	x20, x19, [sp, #80]
  40f2f0:	add	x29, sp, #0x10
  40f2f4:	mov	x19, x3
  40f2f8:	mov	x20, x2
  40f2fc:	mov	x21, x1
  40f300:	mov	x22, x0
  40f304:	csel	x24, x8, x4, eq  // eq = none
  40f308:	bl	402da0 <__errno_location@plt>
  40f30c:	ldp	w4, w5, [x24]
  40f310:	ldp	x7, x8, [x24, #40]
  40f314:	ldr	w25, [x0]
  40f318:	mov	x23, x0
  40f31c:	add	x6, x24, #0x8
  40f320:	mov	x0, x22
  40f324:	mov	x1, x21
  40f328:	mov	x2, x20
  40f32c:	mov	x3, x19
  40f330:	str	x8, [sp]
  40f334:	bl	40f358 <wcrtomb@plt+0xc528>
  40f338:	str	w25, [x23]
  40f33c:	ldp	x20, x19, [sp, #80]
  40f340:	ldp	x22, x21, [sp, #64]
  40f344:	ldp	x24, x23, [sp, #48]
  40f348:	ldr	x25, [sp, #32]
  40f34c:	ldp	x29, x30, [sp, #16]
  40f350:	add	sp, sp, #0x60
  40f354:	ret
  40f358:	sub	sp, sp, #0x120
  40f35c:	stp	x29, x30, [sp, #192]
  40f360:	add	x29, sp, #0xc0
  40f364:	ldr	x8, [x29, #96]
  40f368:	stp	x28, x27, [sp, #208]
  40f36c:	stp	x26, x25, [sp, #224]
  40f370:	stp	x24, x23, [sp, #240]
  40f374:	stp	x22, x21, [sp, #256]
  40f378:	stp	x20, x19, [sp, #272]
  40f37c:	str	x7, [sp, #88]
  40f380:	stur	x6, [x29, #-40]
  40f384:	mov	w19, w5
  40f388:	mov	w22, w4
  40f38c:	mov	x28, x3
  40f390:	mov	x20, x2
  40f394:	mov	x24, x1
  40f398:	stur	x8, [x29, #-88]
  40f39c:	mov	x21, x0
  40f3a0:	bl	402c00 <__ctype_get_mb_cur_max@plt>
  40f3a4:	mov	w4, w22
  40f3a8:	mov	w8, wzr
  40f3ac:	mov	w14, wzr
  40f3b0:	str	w19, [sp, #80]
  40f3b4:	ubfx	w19, w19, #1, #1
  40f3b8:	add	x9, x20, #0x1
  40f3bc:	mov	w25, #0x1                   	// #1
  40f3c0:	str	x0, [sp, #48]
  40f3c4:	str	xzr, [sp, #64]
  40f3c8:	stur	xzr, [x29, #-64]
  40f3cc:	stur	xzr, [x29, #-32]
  40f3d0:	str	wzr, [sp, #72]
  40f3d4:	stur	x20, [x29, #-80]
  40f3d8:	str	x9, [sp, #96]
  40f3dc:	cmp	w4, #0xa
  40f3e0:	b.hi	40ff78 <wcrtomb@plt+0xd148>  // b.pmore
  40f3e4:	adrp	x12, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f3e8:	mov	w9, w4
  40f3ec:	add	x12, x12, #0xad0
  40f3f0:	mov	x22, x24
  40f3f4:	adr	x10, 40f414 <wcrtomb@plt+0xc5e4>
  40f3f8:	ldrb	w11, [x12, x9]
  40f3fc:	add	x10, x10, x11, lsl #2
  40f400:	ldur	x24, [x29, #-80]
  40f404:	mov	x20, xzr
  40f408:	mov	w16, wzr
  40f40c:	mov	w9, #0x1                   	// #1
  40f410:	br	x10
  40f414:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f418:	add	x0, x0, #0xc2c
  40f41c:	mov	w1, w4
  40f420:	mov	w20, w4
  40f424:	mov	w23, w14
  40f428:	bl	4106a4 <wcrtomb@plt+0xd874>
  40f42c:	str	x0, [sp, #88]
  40f430:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40f434:	add	x0, x0, #0x7ce
  40f438:	mov	w1, w20
  40f43c:	bl	4106a4 <wcrtomb@plt+0xd874>
  40f440:	mov	w14, w23
  40f444:	mov	w4, w20
  40f448:	stur	x0, [x29, #-88]
  40f44c:	tbnz	w19, #0, 40f48c <wcrtomb@plt+0xc65c>
  40f450:	ldr	x8, [sp, #88]
  40f454:	ldrb	w9, [x8]
  40f458:	cbz	w9, 40f48c <wcrtomb@plt+0xc65c>
  40f45c:	mov	w27, w14
  40f460:	mov	w26, w4
  40f464:	mov	x10, xzr
  40f468:	add	x8, x8, #0x1
  40f46c:	cmp	x10, x22
  40f470:	b.cs	40f478 <wcrtomb@plt+0xc648>  // b.hs, b.nlast
  40f474:	strb	w9, [x21, x10]
  40f478:	ldrb	w9, [x8, x10]
  40f47c:	add	x20, x10, #0x1
  40f480:	mov	x10, x20
  40f484:	cbnz	w9, 40f46c <wcrtomb@plt+0xc63c>
  40f488:	b	40f498 <wcrtomb@plt+0xc668>
  40f48c:	mov	w27, w14
  40f490:	mov	w26, w4
  40f494:	mov	x20, xzr
  40f498:	ldur	x23, [x29, #-88]
  40f49c:	mov	x0, x23
  40f4a0:	bl	402750 <strlen@plt>
  40f4a4:	stur	x0, [x29, #-32]
  40f4a8:	stur	x23, [x29, #-64]
  40f4ac:	mov	w9, #0x1                   	// #1
  40f4b0:	mov	w16, w19
  40f4b4:	mov	w4, w26
  40f4b8:	mov	w14, w27
  40f4bc:	b	40f538 <wcrtomb@plt+0xc708>
  40f4c0:	mov	w8, #0x1                   	// #1
  40f4c4:	b	40f514 <wcrtomb@plt+0xc6e4>
  40f4c8:	mov	w4, wzr
  40f4cc:	mov	x20, xzr
  40f4d0:	mov	w16, wzr
  40f4d4:	mov	w9, w8
  40f4d8:	b	40f538 <wcrtomb@plt+0xc708>
  40f4dc:	tbnz	w19, #0, 40f514 <wcrtomb@plt+0xc6e4>
  40f4e0:	mov	w9, w8
  40f4e4:	b	40fe2c <wcrtomb@plt+0xcffc>
  40f4e8:	tbz	w19, #0, 40fdf4 <wcrtomb@plt+0xcfc4>
  40f4ec:	mov	w8, #0x1                   	// #1
  40f4f0:	stur	x8, [x29, #-32]
  40f4f4:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f4f8:	add	x8, x8, #0x8bc
  40f4fc:	mov	x20, xzr
  40f500:	mov	w4, #0x5                   	// #5
  40f504:	stur	x8, [x29, #-64]
  40f508:	mov	w9, #0x1                   	// #1
  40f50c:	b	40f534 <wcrtomb@plt+0xc704>
  40f510:	tbz	w19, #0, 40fe28 <wcrtomb@plt+0xcff8>
  40f514:	mov	w9, #0x1                   	// #1
  40f518:	stur	x9, [x29, #-32]
  40f51c:	adrp	x9, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40f520:	add	x9, x9, #0x7ce
  40f524:	mov	x20, xzr
  40f528:	mov	w4, #0x2                   	// #2
  40f52c:	stur	x9, [x29, #-64]
  40f530:	mov	w9, w8
  40f534:	mov	w16, #0x1                   	// #1
  40f538:	mov	w15, w9
  40f53c:	ldp	x8, x9, [x29, #-40]
  40f540:	eor	w17, w16, #0x1
  40f544:	stur	w17, [x29, #-68]
  40f548:	mov	x23, xzr
  40f54c:	cmp	x8, #0x0
  40f550:	cset	w8, eq  // eq = none
  40f554:	cmp	x9, #0x0
  40f558:	cset	w9, ne  // ne = any
  40f55c:	cmp	w4, #0x2
  40f560:	cset	w10, ne  // ne = any
  40f564:	and	w13, w10, w15
  40f568:	and	w12, w9, w16
  40f56c:	orr	w10, w10, w17
  40f570:	and	w17, w9, w13
  40f574:	orr	w9, w13, w16
  40f578:	eor	w9, w9, #0x1
  40f57c:	cset	w11, eq  // eq = none
  40f580:	orr	w8, w8, w9
  40f584:	and	w12, w15, w12
  40f588:	str	w10, [sp, #84]
  40f58c:	and	w10, w11, w16
  40f590:	stur	w8, [x29, #-24]
  40f594:	eor	w8, w15, #0x1
  40f598:	str	w12, [sp, #56]
  40f59c:	str	w10, [sp, #76]
  40f5a0:	stur	w15, [x29, #-72]
  40f5a4:	str	w8, [sp, #60]
  40f5a8:	stp	w16, w4, [x29, #-48]
  40f5ac:	stur	w17, [x29, #-52]
  40f5b0:	cmn	x28, #0x1
  40f5b4:	b.eq	40f5c4 <wcrtomb@plt+0xc794>  // b.none
  40f5b8:	cmp	x23, x28
  40f5bc:	b.ne	40f5cc <wcrtomb@plt+0xc79c>  // b.any
  40f5c0:	b	40fd84 <wcrtomb@plt+0xcf54>
  40f5c4:	ldrb	w8, [x24, x23]
  40f5c8:	cbz	w8, 40fd8c <wcrtomb@plt+0xcf5c>
  40f5cc:	cbz	w17, 40f60c <wcrtomb@plt+0xc7dc>
  40f5d0:	ldur	x8, [x29, #-32]
  40f5d4:	cmp	x8, #0x2
  40f5d8:	add	x19, x23, x8
  40f5dc:	b.cc	40f604 <wcrtomb@plt+0xc7d4>  // b.lo, b.ul, b.last
  40f5e0:	cmn	x28, #0x1
  40f5e4:	b.ne	40f604 <wcrtomb@plt+0xc7d4>  // b.any
  40f5e8:	mov	x0, x24
  40f5ec:	mov	w26, w14
  40f5f0:	bl	402750 <strlen@plt>
  40f5f4:	ldp	w17, w16, [x29, #-52]
  40f5f8:	ldur	w4, [x29, #-44]
  40f5fc:	mov	w14, w26
  40f600:	mov	x28, x0
  40f604:	cmp	x19, x28
  40f608:	b.ls	40f614 <wcrtomb@plt+0xc7e4>  // b.plast
  40f60c:	mov	w27, wzr
  40f610:	b	40f64c <wcrtomb@plt+0xc81c>
  40f614:	ldur	x1, [x29, #-64]
  40f618:	ldur	x2, [x29, #-32]
  40f61c:	add	x0, x24, x23
  40f620:	mov	w19, w14
  40f624:	bl	402a30 <bcmp@plt>
  40f628:	ldur	w9, [x29, #-68]
  40f62c:	cmp	w0, #0x0
  40f630:	cset	w8, ne  // ne = any
  40f634:	cset	w27, eq  // eq = none
  40f638:	orr	w8, w8, w9
  40f63c:	tbz	w8, #0, 40fe84 <wcrtomb@plt+0xd054>
  40f640:	ldp	w16, w4, [x29, #-48]
  40f644:	ldur	w17, [x29, #-52]
  40f648:	mov	w14, w19
  40f64c:	ldrb	w19, [x24, x23]
  40f650:	cmp	w19, #0x7e
  40f654:	b.hi	40f86c <wcrtomb@plt+0xca3c>  // b.pmore
  40f658:	adrp	x13, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40f65c:	add	x13, x13, #0xadb
  40f660:	adr	x12, 40f684 <wcrtomb@plt+0xc854>
  40f664:	ldrb	w9, [x13, x19]
  40f668:	add	x12, x12, x9, lsl #2
  40f66c:	mov	w10, wzr
  40f670:	mov	w8, wzr
  40f674:	mov	w26, #0x1                   	// #1
  40f678:	mov	w11, #0x6e                  	// #110
  40f67c:	mov	w9, #0x61                  	// #97
  40f680:	br	x12
  40f684:	ldur	w9, [x29, #-24]
  40f688:	tbnz	w9, #0, 40f6a8 <wcrtomb@plt+0xc878>
  40f68c:	ldur	x10, [x29, #-40]
  40f690:	lsr	w9, w19, #5
  40f694:	ldr	w9, [x10, w9, uxtw #2]
  40f698:	lsr	w9, w9, w19
  40f69c:	tbz	w9, #0, 40f6a8 <wcrtomb@plt+0xc878>
  40f6a0:	mov	w9, w19
  40f6a4:	b	40f6b0 <wcrtomb@plt+0xc880>
  40f6a8:	mov	w9, w19
  40f6ac:	cbz	w27, 40f8d0 <wcrtomb@plt+0xcaa0>
  40f6b0:	tbnz	w16, #0, 40fe5c <wcrtomb@plt+0xd02c>
  40f6b4:	cmp	w4, #0x2
  40f6b8:	cset	w8, ne  // ne = any
  40f6bc:	orr	w8, w8, w14
  40f6c0:	tbnz	w8, #0, 40f704 <wcrtomb@plt+0xc8d4>
  40f6c4:	cmp	x20, x22
  40f6c8:	b.cs	40f6d4 <wcrtomb@plt+0xc8a4>  // b.hs, b.nlast
  40f6cc:	mov	w8, #0x27                  	// #39
  40f6d0:	strb	w8, [x21, x20]
  40f6d4:	add	x8, x20, #0x1
  40f6d8:	cmp	x8, x22
  40f6dc:	b.cs	40f6e8 <wcrtomb@plt+0xc8b8>  // b.hs, b.nlast
  40f6e0:	mov	w10, #0x24                  	// #36
  40f6e4:	strb	w10, [x21, x8]
  40f6e8:	add	x8, x20, #0x2
  40f6ec:	cmp	x8, x22
  40f6f0:	b.cs	40f6fc <wcrtomb@plt+0xc8cc>  // b.hs, b.nlast
  40f6f4:	mov	w10, #0x27                  	// #39
  40f6f8:	strb	w10, [x21, x8]
  40f6fc:	add	x20, x20, #0x3
  40f700:	mov	w14, #0x1                   	// #1
  40f704:	cmp	x20, x22
  40f708:	b.cs	40f714 <wcrtomb@plt+0xc8e4>  // b.hs, b.nlast
  40f70c:	mov	w8, #0x5c                  	// #92
  40f710:	strb	w8, [x21, x20]
  40f714:	add	x20, x20, #0x1
  40f718:	b	40f908 <wcrtomb@plt+0xcad8>
  40f71c:	cmp	x28, #0x1
  40f720:	b.eq	40f744 <wcrtomb@plt+0xc914>  // b.none
  40f724:	cmn	x28, #0x1
  40f728:	b.ne	40f748 <wcrtomb@plt+0xc918>  // b.any
  40f72c:	ldrb	w8, [x24, #1]
  40f730:	cbz	w8, 40f744 <wcrtomb@plt+0xc914>
  40f734:	mov	w8, wzr
  40f738:	mov	w26, wzr
  40f73c:	mov	x28, #0xffffffffffffffff    	// #-1
  40f740:	b	40f684 <wcrtomb@plt+0xc854>
  40f744:	cbz	x23, 40f754 <wcrtomb@plt+0xc924>
  40f748:	mov	w8, wzr
  40f74c:	mov	w26, wzr
  40f750:	b	40f684 <wcrtomb@plt+0xc854>
  40f754:	mov	w10, #0x1                   	// #1
  40f758:	cmp	w4, #0x2
  40f75c:	b.ne	40f764 <wcrtomb@plt+0xc934>  // b.any
  40f760:	tbnz	w16, #0, 40fe5c <wcrtomb@plt+0xd02c>
  40f764:	mov	w8, wzr
  40f768:	mov	w26, w10
  40f76c:	b	40f684 <wcrtomb@plt+0xc854>
  40f770:	cmp	w4, #0x2
  40f774:	b.ne	40f8b8 <wcrtomb@plt+0xca88>  // b.any
  40f778:	tbz	w16, #0, 40f8c4 <wcrtomb@plt+0xca94>
  40f77c:	b	40fe5c <wcrtomb@plt+0xd02c>
  40f780:	mov	w9, #0x66                  	// #102
  40f784:	b	40f924 <wcrtomb@plt+0xcaf4>
  40f788:	mov	w11, #0x74                  	// #116
  40f78c:	b	40f79c <wcrtomb@plt+0xc96c>
  40f790:	mov	w9, #0x62                  	// #98
  40f794:	b	40f924 <wcrtomb@plt+0xcaf4>
  40f798:	mov	w11, #0x72                  	// #114
  40f79c:	ldr	w8, [sp, #84]
  40f7a0:	mov	w9, w11
  40f7a4:	tbnz	w8, #0, 40f924 <wcrtomb@plt+0xcaf4>
  40f7a8:	b	40fe5c <wcrtomb@plt+0xd02c>
  40f7ac:	ldur	w8, [x29, #-72]
  40f7b0:	tbz	w8, #0, 40f938 <wcrtomb@plt+0xcb08>
  40f7b4:	cmp	w4, #0x2
  40f7b8:	tbnz	w16, #0, 40ff6c <wcrtomb@plt+0xd13c>
  40f7bc:	cset	w8, ne  // ne = any
  40f7c0:	orr	w8, w8, w14
  40f7c4:	tbz	w8, #0, 40fc6c <wcrtomb@plt+0xce3c>
  40f7c8:	mov	x8, x20
  40f7cc:	b	40fcac <wcrtomb@plt+0xce7c>
  40f7d0:	cmp	w4, #0x5
  40f7d4:	b.eq	40fa5c <wcrtomb@plt+0xcc2c>  // b.none
  40f7d8:	cmp	w4, #0x2
  40f7dc:	b.ne	40fb0c <wcrtomb@plt+0xccdc>  // b.any
  40f7e0:	tbz	w16, #0, 40fb0c <wcrtomb@plt+0xccdc>
  40f7e4:	b	40fe5c <wcrtomb@plt+0xd02c>
  40f7e8:	mov	w9, #0x76                  	// #118
  40f7ec:	b	40f924 <wcrtomb@plt+0xcaf4>
  40f7f0:	cmp	w4, #0x2
  40f7f4:	b.ne	40f948 <wcrtomb@plt+0xcb18>  // b.any
  40f7f8:	tbnz	w16, #0, 40fe5c <wcrtomb@plt+0xd02c>
  40f7fc:	ldr	x10, [sp, #64]
  40f800:	cmp	x22, #0x0
  40f804:	cset	w8, eq  // eq = none
  40f808:	cmp	x10, #0x0
  40f80c:	cset	w9, ne  // ne = any
  40f810:	orr	w8, w9, w8
  40f814:	cmp	w8, #0x0
  40f818:	csel	x10, x10, x22, ne  // ne = any
  40f81c:	csel	x22, x22, xzr, ne  // ne = any
  40f820:	cmp	x20, x22
  40f824:	str	x10, [sp, #64]
  40f828:	b.cs	40f834 <wcrtomb@plt+0xca04>  // b.hs, b.nlast
  40f82c:	mov	w8, #0x27                  	// #39
  40f830:	strb	w8, [x21, x20]
  40f834:	add	x8, x20, #0x1
  40f838:	cmp	x8, x22
  40f83c:	b.cs	40f848 <wcrtomb@plt+0xca18>  // b.hs, b.nlast
  40f840:	mov	w9, #0x5c                  	// #92
  40f844:	strb	w9, [x21, x8]
  40f848:	add	x8, x20, #0x2
  40f84c:	cmp	x8, x22
  40f850:	b.cs	40f85c <wcrtomb@plt+0xca2c>  // b.hs, b.nlast
  40f854:	mov	w9, #0x27                  	// #39
  40f858:	strb	w9, [x21, x8]
  40f85c:	mov	w14, wzr
  40f860:	mov	w8, wzr
  40f864:	add	x20, x20, #0x3
  40f868:	b	40f94c <wcrtomb@plt+0xcb1c>
  40f86c:	ldr	x8, [sp, #48]
  40f870:	str	w14, [sp, #28]
  40f874:	cmp	x8, #0x1
  40f878:	b.ne	40f960 <wcrtomb@plt+0xcb30>  // b.any
  40f87c:	bl	402bc0 <__ctype_b_loc@plt>
  40f880:	ldr	x8, [x0]
  40f884:	mov	w11, #0x1                   	// #1
  40f888:	ldrh	w8, [x8, x19, lsl #1]
  40f88c:	ubfx	w26, w8, #14, #1
  40f890:	ldr	w8, [sp, #60]
  40f894:	ldp	w16, w4, [x29, #-48]
  40f898:	ldr	w14, [sp, #28]
  40f89c:	ldur	w17, [x29, #-52]
  40f8a0:	cmp	x11, #0x1
  40f8a4:	orr	w8, w26, w8
  40f8a8:	b.hi	40fb1c <wcrtomb@plt+0xccec>  // b.pmore
  40f8ac:	tbz	w8, #0, 40fb1c <wcrtomb@plt+0xccec>
  40f8b0:	mov	w8, wzr
  40f8b4:	b	40f684 <wcrtomb@plt+0xc854>
  40f8b8:	ldr	w8, [sp, #56]
  40f8bc:	mov	w9, #0x5c                  	// #92
  40f8c0:	tbz	w8, #0, 40f924 <wcrtomb@plt+0xcaf4>
  40f8c4:	mov	w8, wzr
  40f8c8:	mov	w26, wzr
  40f8cc:	mov	w19, #0x5c                  	// #92
  40f8d0:	tbnz	w8, #0, 40f904 <wcrtomb@plt+0xcad4>
  40f8d4:	tbz	w14, #0, 40f904 <wcrtomb@plt+0xcad4>
  40f8d8:	cmp	x20, x22
  40f8dc:	b.cs	40f8e8 <wcrtomb@plt+0xcab8>  // b.hs, b.nlast
  40f8e0:	mov	w8, #0x27                  	// #39
  40f8e4:	strb	w8, [x21, x20]
  40f8e8:	add	x8, x20, #0x1
  40f8ec:	cmp	x8, x22
  40f8f0:	b.cs	40f8fc <wcrtomb@plt+0xcacc>  // b.hs, b.nlast
  40f8f4:	mov	w9, #0x27                  	// #39
  40f8f8:	strb	w9, [x21, x8]
  40f8fc:	mov	w14, wzr
  40f900:	add	x20, x20, #0x2
  40f904:	mov	w9, w19
  40f908:	cmp	x20, x22
  40f90c:	b.cs	40f914 <wcrtomb@plt+0xcae4>  // b.hs, b.nlast
  40f910:	strb	w9, [x21, x20]
  40f914:	add	x20, x20, #0x1
  40f918:	and	w25, w25, w26
  40f91c:	add	x23, x23, #0x1
  40f920:	b	40f5b0 <wcrtomb@plt+0xc780>
  40f924:	ldur	w10, [x29, #-72]
  40f928:	mov	w8, wzr
  40f92c:	mov	w26, wzr
  40f930:	tbz	w10, #0, 40f684 <wcrtomb@plt+0xc854>
  40f934:	b	40f6b0 <wcrtomb@plt+0xc880>
  40f938:	ldr	w8, [sp, #80]
  40f93c:	tbnz	w8, #0, 40f91c <wcrtomb@plt+0xcaec>
  40f940:	mov	w19, wzr
  40f944:	b	40f748 <wcrtomb@plt+0xc918>
  40f948:	mov	w8, wzr
  40f94c:	mov	w9, #0x1                   	// #1
  40f950:	mov	w19, #0x27                  	// #39
  40f954:	str	w9, [sp, #72]
  40f958:	mov	w26, #0x1                   	// #1
  40f95c:	b	40f684 <wcrtomb@plt+0xc854>
  40f960:	cmn	x28, #0x1
  40f964:	stur	xzr, [x29, #-16]
  40f968:	b.ne	40f978 <wcrtomb@plt+0xcb48>  // b.any
  40f96c:	mov	x0, x24
  40f970:	bl	402750 <strlen@plt>
  40f974:	mov	x28, x0
  40f978:	ldr	x8, [sp, #96]
  40f97c:	mov	x11, xzr
  40f980:	mov	w26, #0x1                   	// #1
  40f984:	str	x21, [sp, #32]
  40f988:	add	x8, x8, x23
  40f98c:	str	x8, [sp, #16]
  40f990:	add	x21, x11, x23
  40f994:	add	x1, x24, x21
  40f998:	sub	x2, x28, x21
  40f99c:	sub	x0, x29, #0x14
  40f9a0:	sub	x3, x29, #0x10
  40f9a4:	str	x11, [sp, #40]
  40f9a8:	bl	410f04 <wcrtomb@plt+0xe0d4>
  40f9ac:	cbz	x0, 40fd64 <wcrtomb@plt+0xcf34>
  40f9b0:	mov	x24, x0
  40f9b4:	cmn	x0, #0x1
  40f9b8:	b.eq	40fd60 <wcrtomb@plt+0xcf30>  // b.none
  40f9bc:	cmn	x24, #0x2
  40f9c0:	b.eq	40fd24 <wcrtomb@plt+0xcef4>  // b.none
  40f9c4:	ldr	w9, [sp, #76]
  40f9c8:	ldr	x21, [sp, #32]
  40f9cc:	cmp	x24, #0x2
  40f9d0:	cset	w8, cc  // cc = lo, ul, last
  40f9d4:	eor	w9, w9, #0x1
  40f9d8:	mov	x12, #0x2b                  	// #43
  40f9dc:	orr	w8, w9, w8
  40f9e0:	mov	w11, #0x1                   	// #1
  40f9e4:	movk	x12, #0x2, lsl #32
  40f9e8:	tbnz	w8, #0, 40fa24 <wcrtomb@plt+0xcbf4>
  40f9ec:	ldr	x9, [sp, #40]
  40f9f0:	ldr	x10, [sp, #16]
  40f9f4:	sub	x8, x24, #0x1
  40f9f8:	add	x9, x10, x9
  40f9fc:	ldrb	w10, [x9]
  40fa00:	sub	w10, w10, #0x5b
  40fa04:	cmp	w10, #0x21
  40fa08:	b.hi	40fa18 <wcrtomb@plt+0xcbe8>  // b.pmore
  40fa0c:	lsl	x10, x11, x10
  40fa10:	tst	x10, x12
  40fa14:	b.ne	40fe90 <wcrtomb@plt+0xd060>  // b.any
  40fa18:	subs	x8, x8, #0x1
  40fa1c:	add	x9, x9, #0x1
  40fa20:	b.ne	40f9fc <wcrtomb@plt+0xcbcc>  // b.any
  40fa24:	ldur	w0, [x29, #-20]
  40fa28:	bl	402d70 <iswprint@plt>
  40fa2c:	ldr	x21, [sp, #40]
  40fa30:	cmp	w0, #0x0
  40fa34:	cset	w8, ne  // ne = any
  40fa38:	sub	x0, x29, #0x10
  40fa3c:	and	w26, w26, w8
  40fa40:	add	x21, x24, x21
  40fa44:	bl	402b40 <mbsinit@plt>
  40fa48:	mov	x11, x21
  40fa4c:	ldr	x21, [sp, #32]
  40fa50:	ldur	x24, [x29, #-80]
  40fa54:	cbz	w0, 40f990 <wcrtomb@plt+0xcb60>
  40fa58:	b	40f890 <wcrtomb@plt+0xca60>
  40fa5c:	ldr	w8, [sp, #80]
  40fa60:	tbz	w8, #2, 40fb0c <wcrtomb@plt+0xccdc>
  40fa64:	add	x9, x23, #0x2
  40fa68:	cmp	x9, x28
  40fa6c:	b.cs	40fb0c <wcrtomb@plt+0xccdc>  // b.hs, b.nlast
  40fa70:	add	x8, x23, x24
  40fa74:	ldrb	w8, [x8, #1]
  40fa78:	cmp	w8, #0x3f
  40fa7c:	b.ne	40fb0c <wcrtomb@plt+0xccdc>  // b.any
  40fa80:	ldrb	w19, [x24, x9]
  40fa84:	mov	w8, wzr
  40fa88:	cmp	w19, #0x3e
  40fa8c:	b.hi	40fd78 <wcrtomb@plt+0xcf48>  // b.pmore
  40fa90:	mov	w10, #0x1                   	// #1
  40fa94:	mov	x11, #0xa38200000000        	// #179778741075968
  40fa98:	lsl	x10, x10, x19
  40fa9c:	movk	x11, #0x7000, lsl #48
  40faa0:	tst	x10, x11
  40faa4:	b.eq	40fd78 <wcrtomb@plt+0xcf48>  // b.none
  40faa8:	tbnz	w16, #0, 40fe5c <wcrtomb@plt+0xd02c>
  40faac:	cmp	x20, x22
  40fab0:	b.cs	40fabc <wcrtomb@plt+0xcc8c>  // b.hs, b.nlast
  40fab4:	mov	w8, #0x3f                  	// #63
  40fab8:	strb	w8, [x21, x20]
  40fabc:	add	x8, x20, #0x1
  40fac0:	cmp	x8, x22
  40fac4:	b.cs	40fad0 <wcrtomb@plt+0xcca0>  // b.hs, b.nlast
  40fac8:	mov	w10, #0x22                  	// #34
  40facc:	strb	w10, [x21, x8]
  40fad0:	add	x8, x20, #0x2
  40fad4:	cmp	x8, x22
  40fad8:	b.cs	40fae4 <wcrtomb@plt+0xccb4>  // b.hs, b.nlast
  40fadc:	mov	w10, #0x22                  	// #34
  40fae0:	strb	w10, [x21, x8]
  40fae4:	add	x8, x20, #0x3
  40fae8:	cmp	x8, x22
  40faec:	b.cs	40faf8 <wcrtomb@plt+0xccc8>  // b.hs, b.nlast
  40faf0:	mov	w10, #0x3f                  	// #63
  40faf4:	strb	w10, [x21, x8]
  40faf8:	mov	w8, wzr
  40fafc:	mov	w26, wzr
  40fb00:	add	x20, x20, #0x4
  40fb04:	mov	x23, x9
  40fb08:	b	40f684 <wcrtomb@plt+0xc854>
  40fb0c:	mov	w8, wzr
  40fb10:	mov	w26, wzr
  40fb14:	mov	w19, #0x3f                  	// #63
  40fb18:	b	40f684 <wcrtomb@plt+0xc854>
  40fb1c:	mov	w10, wzr
  40fb20:	add	x9, x11, x23
  40fb24:	tbz	w8, #0, 40fb84 <wcrtomb@plt+0xcd54>
  40fb28:	b	40fc30 <wcrtomb@plt+0xce00>
  40fb2c:	and	w12, w10, #0x1
  40fb30:	orn	w12, w12, w14
  40fb34:	tbnz	w12, #0, 40fb64 <wcrtomb@plt+0xcd34>
  40fb38:	cmp	x20, x22
  40fb3c:	b.cs	40fb48 <wcrtomb@plt+0xcd18>  // b.hs, b.nlast
  40fb40:	mov	w12, #0x27                  	// #39
  40fb44:	strb	w12, [x21, x20]
  40fb48:	add	x12, x20, #0x1
  40fb4c:	cmp	x12, x22
  40fb50:	b.cs	40fb5c <wcrtomb@plt+0xcd2c>  // b.hs, b.nlast
  40fb54:	mov	w13, #0x27                  	// #39
  40fb58:	strb	w13, [x21, x12]
  40fb5c:	mov	w14, wzr
  40fb60:	add	x20, x20, #0x2
  40fb64:	cmp	x20, x22
  40fb68:	b.cs	40fb70 <wcrtomb@plt+0xcd40>  // b.hs, b.nlast
  40fb6c:	strb	w19, [x21, x20]
  40fb70:	ldr	x12, [sp, #96]
  40fb74:	add	x20, x20, #0x1
  40fb78:	ldrb	w19, [x12, x23]
  40fb7c:	mov	x23, x11
  40fb80:	tbnz	w8, #0, 40fc30 <wcrtomb@plt+0xce00>
  40fb84:	tbnz	w16, #0, 40fe5c <wcrtomb@plt+0xd02c>
  40fb88:	cmp	w4, #0x2
  40fb8c:	cset	w10, ne  // ne = any
  40fb90:	orr	w10, w10, w14
  40fb94:	tbnz	w10, #0, 40fbd8 <wcrtomb@plt+0xcda8>
  40fb98:	cmp	x20, x22
  40fb9c:	b.cs	40fba8 <wcrtomb@plt+0xcd78>  // b.hs, b.nlast
  40fba0:	mov	w10, #0x27                  	// #39
  40fba4:	strb	w10, [x21, x20]
  40fba8:	add	x10, x20, #0x1
  40fbac:	cmp	x10, x22
  40fbb0:	b.cs	40fbbc <wcrtomb@plt+0xcd8c>  // b.hs, b.nlast
  40fbb4:	mov	w11, #0x24                  	// #36
  40fbb8:	strb	w11, [x21, x10]
  40fbbc:	add	x10, x20, #0x2
  40fbc0:	cmp	x10, x22
  40fbc4:	b.cs	40fbd0 <wcrtomb@plt+0xcda0>  // b.hs, b.nlast
  40fbc8:	mov	w11, #0x27                  	// #39
  40fbcc:	strb	w11, [x21, x10]
  40fbd0:	add	x20, x20, #0x3
  40fbd4:	mov	w14, #0x1                   	// #1
  40fbd8:	cmp	x20, x22
  40fbdc:	b.cs	40fbe8 <wcrtomb@plt+0xcdb8>  // b.hs, b.nlast
  40fbe0:	mov	w10, #0x5c                  	// #92
  40fbe4:	strb	w10, [x21, x20]
  40fbe8:	add	x10, x20, #0x1
  40fbec:	cmp	x10, x22
  40fbf0:	b.cs	40fc00 <wcrtomb@plt+0xcdd0>  // b.hs, b.nlast
  40fbf4:	mov	w11, #0x30                  	// #48
  40fbf8:	bfxil	w11, w19, #6, #2
  40fbfc:	strb	w11, [x21, x10]
  40fc00:	add	x10, x20, #0x2
  40fc04:	cmp	x10, x22
  40fc08:	b.cs	40fc18 <wcrtomb@plt+0xcde8>  // b.hs, b.nlast
  40fc0c:	mov	w11, #0x30                  	// #48
  40fc10:	bfxil	w11, w19, #3, #3
  40fc14:	strb	w11, [x21, x10]
  40fc18:	mov	w11, #0x30                  	// #48
  40fc1c:	bfxil	w11, w19, #0, #3
  40fc20:	add	x20, x20, #0x3
  40fc24:	mov	w10, #0x1                   	// #1
  40fc28:	mov	w19, w11
  40fc2c:	b	40fc54 <wcrtomb@plt+0xce24>
  40fc30:	tbz	w27, #0, 40fc50 <wcrtomb@plt+0xce20>
  40fc34:	cmp	x20, x22
  40fc38:	b.cs	40fc44 <wcrtomb@plt+0xce14>  // b.hs, b.nlast
  40fc3c:	mov	w11, #0x5c                  	// #92
  40fc40:	strb	w11, [x21, x20]
  40fc44:	mov	w27, wzr
  40fc48:	add	x20, x20, #0x1
  40fc4c:	b	40fc54 <wcrtomb@plt+0xce24>
  40fc50:	mov	w27, wzr
  40fc54:	add	x11, x23, #0x1
  40fc58:	cmp	x9, x11
  40fc5c:	b.hi	40fb2c <wcrtomb@plt+0xccfc>  // b.pmore
  40fc60:	and	w8, w10, #0x1
  40fc64:	tbz	w8, #0, 40f8d4 <wcrtomb@plt+0xcaa4>
  40fc68:	b	40f904 <wcrtomb@plt+0xcad4>
  40fc6c:	cmp	x20, x22
  40fc70:	b.cs	40fc7c <wcrtomb@plt+0xce4c>  // b.hs, b.nlast
  40fc74:	mov	w8, #0x27                  	// #39
  40fc78:	strb	w8, [x21, x20]
  40fc7c:	add	x8, x20, #0x1
  40fc80:	cmp	x8, x22
  40fc84:	b.cs	40fc90 <wcrtomb@plt+0xce60>  // b.hs, b.nlast
  40fc88:	mov	w9, #0x24                  	// #36
  40fc8c:	strb	w9, [x21, x8]
  40fc90:	add	x8, x20, #0x2
  40fc94:	cmp	x8, x22
  40fc98:	b.cs	40fca4 <wcrtomb@plt+0xce74>  // b.hs, b.nlast
  40fc9c:	mov	w9, #0x27                  	// #39
  40fca0:	strb	w9, [x21, x8]
  40fca4:	add	x8, x20, #0x3
  40fca8:	mov	w14, #0x1                   	// #1
  40fcac:	cmp	x8, x22
  40fcb0:	b.cs	40fcbc <wcrtomb@plt+0xce8c>  // b.hs, b.nlast
  40fcb4:	mov	w9, #0x5c                  	// #92
  40fcb8:	strb	w9, [x21, x8]
  40fcbc:	cmp	w4, #0x2
  40fcc0:	add	x20, x8, #0x1
  40fcc4:	b.eq	40fd14 <wcrtomb@plt+0xcee4>  // b.none
  40fcc8:	add	x9, x23, #0x1
  40fccc:	cmp	x9, x28
  40fcd0:	b.cs	40fd14 <wcrtomb@plt+0xcee4>  // b.hs, b.nlast
  40fcd4:	ldrb	w9, [x24, x9]
  40fcd8:	sub	w9, w9, #0x30
  40fcdc:	cmp	w9, #0x9
  40fce0:	b.hi	40fd14 <wcrtomb@plt+0xcee4>  // b.pmore
  40fce4:	cmp	x20, x22
  40fce8:	b.cs	40fcf4 <wcrtomb@plt+0xcec4>  // b.hs, b.nlast
  40fcec:	mov	w9, #0x30                  	// #48
  40fcf0:	strb	w9, [x21, x20]
  40fcf4:	add	x9, x8, #0x2
  40fcf8:	cmp	x9, x22
  40fcfc:	b.cs	40fd08 <wcrtomb@plt+0xced8>  // b.hs, b.nlast
  40fd00:	mov	w10, #0x30                  	// #48
  40fd04:	strb	w10, [x21, x9]
  40fd08:	mov	w26, wzr
  40fd0c:	add	x20, x8, #0x3
  40fd10:	b	40fd18 <wcrtomb@plt+0xcee8>
  40fd14:	mov	w26, wzr
  40fd18:	mov	w8, #0x1                   	// #1
  40fd1c:	mov	w19, #0x30                  	// #48
  40fd20:	b	40f684 <wcrtomb@plt+0xc854>
  40fd24:	cmp	x28, x21
  40fd28:	b.ls	40fd60 <wcrtomb@plt+0xcf30>  // b.plast
  40fd2c:	ldur	x24, [x29, #-80]
  40fd30:	ldp	x21, x11, [sp, #32]
  40fd34:	sub	x8, x28, x23
  40fd38:	add	x9, x24, x23
  40fd3c:	ldrb	w10, [x9, x11]
  40fd40:	cbz	w10, 40fd70 <wcrtomb@plt+0xcf40>
  40fd44:	add	x11, x11, #0x1
  40fd48:	add	x10, x23, x11
  40fd4c:	cmp	x10, x28
  40fd50:	b.cc	40fd3c <wcrtomb@plt+0xcf0c>  // b.lo, b.ul, b.last
  40fd54:	mov	w26, wzr
  40fd58:	mov	x11, x8
  40fd5c:	b	40f890 <wcrtomb@plt+0xca60>
  40fd60:	mov	w26, wzr
  40fd64:	ldp	x21, x11, [sp, #32]
  40fd68:	ldur	x24, [x29, #-80]
  40fd6c:	b	40f890 <wcrtomb@plt+0xca60>
  40fd70:	mov	w26, wzr
  40fd74:	b	40f890 <wcrtomb@plt+0xca60>
  40fd78:	mov	w19, #0x3f                  	// #63
  40fd7c:	mov	w26, w8
  40fd80:	b	40f684 <wcrtomb@plt+0xc854>
  40fd84:	mov	x28, x23
  40fd88:	b	40fd90 <wcrtomb@plt+0xcf60>
  40fd8c:	mov	x28, #0xffffffffffffffff    	// #-1
  40fd90:	cmp	w4, #0x2
  40fd94:	ldur	w10, [x29, #-72]
  40fd98:	cset	w8, eq  // eq = none
  40fd9c:	cmp	x20, #0x0
  40fda0:	cset	w9, eq  // eq = none
  40fda4:	and	w8, w8, w9
  40fda8:	and	w8, w16, w8
  40fdac:	tbnz	w8, #0, 40fe60 <wcrtomb@plt+0xd030>
  40fdb0:	cmp	w4, #0x2
  40fdb4:	cset	w8, ne  // ne = any
  40fdb8:	orr	w8, w16, w8
  40fdbc:	tbnz	w8, #0, 40ff2c <wcrtomb@plt+0xd0fc>
  40fdc0:	ldr	w8, [sp, #72]
  40fdc4:	eor	w8, w8, #0x1
  40fdc8:	tbnz	w8, #0, 40ff2c <wcrtomb@plt+0xd0fc>
  40fdcc:	tbnz	w25, #0, 40fefc <wcrtomb@plt+0xd0cc>
  40fdd0:	ldr	x24, [sp, #64]
  40fdd4:	mov	w19, wzr
  40fdd8:	cbz	x24, 40ff28 <wcrtomb@plt+0xd0f8>
  40fddc:	mov	w4, #0x2                   	// #2
  40fde0:	mov	w8, w10
  40fde4:	mov	w25, w19
  40fde8:	mov	w16, w19
  40fdec:	cbz	x22, 40f3dc <wcrtomb@plt+0xc5ac>
  40fdf0:	b	40ff2c <wcrtomb@plt+0xd0fc>
  40fdf4:	mov	w16, wzr
  40fdf8:	cbz	x22, 40fe04 <wcrtomb@plt+0xcfd4>
  40fdfc:	mov	w8, #0x22                  	// #34
  40fe00:	strb	w8, [x21]
  40fe04:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  40fe08:	add	x8, x8, #0x8bc
  40fe0c:	stur	x8, [x29, #-64]
  40fe10:	mov	w8, #0x1                   	// #1
  40fe14:	mov	w20, #0x1                   	// #1
  40fe18:	mov	w4, #0x5                   	// #5
  40fe1c:	stur	x8, [x29, #-32]
  40fe20:	mov	w9, #0x1                   	// #1
  40fe24:	b	40f538 <wcrtomb@plt+0xc708>
  40fe28:	mov	w9, #0x1                   	// #1
  40fe2c:	mov	w16, wzr
  40fe30:	cbz	x22, 40fe3c <wcrtomb@plt+0xd00c>
  40fe34:	mov	w8, #0x27                  	// #39
  40fe38:	strb	w8, [x21]
  40fe3c:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  40fe40:	add	x8, x8, #0x7ce
  40fe44:	stur	x8, [x29, #-64]
  40fe48:	mov	w8, #0x1                   	// #1
  40fe4c:	mov	w4, #0x2                   	// #2
  40fe50:	mov	w20, #0x1                   	// #1
  40fe54:	stur	x8, [x29, #-32]
  40fe58:	b	40f538 <wcrtomb@plt+0xc708>
  40fe5c:	ldur	w10, [x29, #-72]
  40fe60:	tst	w10, #0x1
  40fe64:	mov	w8, #0x2                   	// #2
  40fe68:	mov	w9, #0x4                   	// #4
  40fe6c:	csel	w8, w9, w8, ne  // ne = any
  40fe70:	cmp	w4, #0x2
  40fe74:	b.ne	40fe7c <wcrtomb@plt+0xd04c>  // b.any
  40fe78:	mov	w4, w8
  40fe7c:	ldr	x7, [sp, #88]
  40fe80:	b	40feac <wcrtomb@plt+0xd07c>
  40fe84:	ldr	x7, [sp, #88]
  40fe88:	ldur	w4, [x29, #-44]
  40fe8c:	b	40feac <wcrtomb@plt+0xd07c>
  40fe90:	ldur	w8, [x29, #-72]
  40fe94:	ldr	x7, [sp, #88]
  40fe98:	ldur	x24, [x29, #-80]
  40fe9c:	mov	w9, #0x4                   	// #4
  40fea0:	tst	w8, #0x1
  40fea4:	mov	w8, #0x2                   	// #2
  40fea8:	csel	w4, w9, w8, ne  // ne = any
  40feac:	ldr	w8, [sp, #80]
  40feb0:	mov	x0, x21
  40feb4:	mov	x1, x22
  40feb8:	mov	x2, x24
  40febc:	and	w5, w8, #0xfffffffd
  40fec0:	ldur	x8, [x29, #-88]
  40fec4:	mov	x3, x28
  40fec8:	mov	x6, xzr
  40fecc:	str	x8, [sp]
  40fed0:	bl	40f358 <wcrtomb@plt+0xc528>
  40fed4:	mov	x20, x0
  40fed8:	mov	x0, x20
  40fedc:	ldp	x20, x19, [sp, #272]
  40fee0:	ldp	x22, x21, [sp, #256]
  40fee4:	ldp	x24, x23, [sp, #240]
  40fee8:	ldp	x26, x25, [sp, #224]
  40feec:	ldp	x28, x27, [sp, #208]
  40fef0:	ldp	x29, x30, [sp, #192]
  40fef4:	add	sp, sp, #0x120
  40fef8:	ret
  40fefc:	ldur	x8, [x29, #-88]
  40ff00:	ldr	x1, [sp, #64]
  40ff04:	ldur	x2, [x29, #-80]
  40ff08:	ldr	w5, [sp, #80]
  40ff0c:	ldur	x6, [x29, #-40]
  40ff10:	ldr	x7, [sp, #88]
  40ff14:	mov	w4, #0x5                   	// #5
  40ff18:	str	x8, [sp]
  40ff1c:	mov	x0, x21
  40ff20:	mov	x3, x28
  40ff24:	b	40fed0 <wcrtomb@plt+0xd0a0>
  40ff28:	mov	w16, w19
  40ff2c:	ldur	x8, [x29, #-64]
  40ff30:	cbz	x8, 40ff5c <wcrtomb@plt+0xd12c>
  40ff34:	tbnz	w16, #0, 40ff5c <wcrtomb@plt+0xd12c>
  40ff38:	ldrb	w9, [x8]
  40ff3c:	cbz	w9, 40ff5c <wcrtomb@plt+0xd12c>
  40ff40:	add	x8, x8, #0x1
  40ff44:	cmp	x20, x22
  40ff48:	b.cs	40ff50 <wcrtomb@plt+0xd120>  // b.hs, b.nlast
  40ff4c:	strb	w9, [x21, x20]
  40ff50:	ldrb	w9, [x8], #1
  40ff54:	add	x20, x20, #0x1
  40ff58:	cbnz	w9, 40ff44 <wcrtomb@plt+0xd114>
  40ff5c:	cmp	x20, x22
  40ff60:	b.cs	40fed8 <wcrtomb@plt+0xd0a8>  // b.hs, b.nlast
  40ff64:	strb	wzr, [x21, x20]
  40ff68:	b	40fed8 <wcrtomb@plt+0xd0a8>
  40ff6c:	b.ne	40fe7c <wcrtomb@plt+0xd04c>  // b.any
  40ff70:	mov	w4, #0x4                   	// #4
  40ff74:	b	40fe7c <wcrtomb@plt+0xd04c>
  40ff78:	bl	402b10 <abort@plt>
  40ff7c:	mov	x3, x2
  40ff80:	mov	x2, xzr
  40ff84:	b	40ff88 <wcrtomb@plt+0xd158>
  40ff88:	sub	sp, sp, #0x70
  40ff8c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  40ff90:	add	x8, x8, #0x7b8
  40ff94:	cmp	x3, #0x0
  40ff98:	stp	x29, x30, [sp, #16]
  40ff9c:	stp	x28, x27, [sp, #32]
  40ffa0:	stp	x26, x25, [sp, #48]
  40ffa4:	stp	x24, x23, [sp, #64]
  40ffa8:	stp	x22, x21, [sp, #80]
  40ffac:	stp	x20, x19, [sp, #96]
  40ffb0:	add	x29, sp, #0x10
  40ffb4:	mov	x19, x2
  40ffb8:	mov	x22, x1
  40ffbc:	mov	x23, x0
  40ffc0:	csel	x21, x8, x3, eq  // eq = none
  40ffc4:	bl	402da0 <__errno_location@plt>
  40ffc8:	ldp	w4, w8, [x21]
  40ffcc:	cmp	x19, #0x0
  40ffd0:	ldp	x7, x9, [x21, #40]
  40ffd4:	ldr	w28, [x0]
  40ffd8:	cset	w10, eq  // eq = none
  40ffdc:	orr	w25, w8, w10
  40ffe0:	add	x26, x21, #0x8
  40ffe4:	mov	x24, x0
  40ffe8:	mov	x0, xzr
  40ffec:	mov	x1, xzr
  40fff0:	mov	x2, x23
  40fff4:	mov	x3, x22
  40fff8:	mov	w5, w25
  40fffc:	mov	x6, x26
  410000:	str	x9, [sp]
  410004:	bl	40f358 <wcrtomb@plt+0xc528>
  410008:	add	x27, x0, #0x1
  41000c:	mov	x20, x0
  410010:	mov	x0, x27
  410014:	bl	410cb0 <wcrtomb@plt+0xde80>
  410018:	ldr	w4, [x21]
  41001c:	ldp	x7, x8, [x21, #40]
  410020:	mov	x1, x27
  410024:	mov	x2, x23
  410028:	mov	x3, x22
  41002c:	mov	w5, w25
  410030:	mov	x6, x26
  410034:	mov	x21, x0
  410038:	str	x8, [sp]
  41003c:	bl	40f358 <wcrtomb@plt+0xc528>
  410040:	str	w28, [x24]
  410044:	cbz	x19, 41004c <wcrtomb@plt+0xd21c>
  410048:	str	x20, [x19]
  41004c:	mov	x0, x21
  410050:	ldp	x20, x19, [sp, #96]
  410054:	ldp	x22, x21, [sp, #80]
  410058:	ldp	x24, x23, [sp, #64]
  41005c:	ldp	x26, x25, [sp, #48]
  410060:	ldp	x28, x27, [sp, #32]
  410064:	ldp	x29, x30, [sp, #16]
  410068:	add	sp, sp, #0x70
  41006c:	ret
  410070:	stp	x29, x30, [sp, #-64]!
  410074:	stp	x20, x19, [sp, #48]
  410078:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  41007c:	stp	x22, x21, [sp, #32]
  410080:	ldr	w8, [x20, #1176]
  410084:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410088:	ldr	x19, [x21, #1168]
  41008c:	str	x23, [sp, #16]
  410090:	cmp	w8, #0x2
  410094:	mov	x29, sp
  410098:	b.lt	4100bc <wcrtomb@plt+0xd28c>  // b.tstop
  41009c:	add	x22, x19, #0x18
  4100a0:	mov	w23, #0x1                   	// #1
  4100a4:	ldr	x0, [x22], #16
  4100a8:	bl	402be0 <free@plt>
  4100ac:	ldrsw	x8, [x20, #1176]
  4100b0:	add	x23, x23, #0x1
  4100b4:	cmp	x23, x8
  4100b8:	b.lt	4100a4 <wcrtomb@plt+0xd274>  // b.tstop
  4100bc:	ldr	x0, [x19, #8]
  4100c0:	adrp	x23, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4100c4:	add	x23, x23, #0x7f0
  4100c8:	adrp	x22, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4100cc:	cmp	x0, x23
  4100d0:	add	x22, x22, #0x4a0
  4100d4:	b.eq	4100e4 <wcrtomb@plt+0xd2b4>  // b.none
  4100d8:	bl	402be0 <free@plt>
  4100dc:	mov	w8, #0x100                 	// #256
  4100e0:	stp	x8, x23, [x22]
  4100e4:	cmp	x19, x22
  4100e8:	b.eq	4100f8 <wcrtomb@plt+0xd2c8>  // b.none
  4100ec:	mov	x0, x19
  4100f0:	bl	402be0 <free@plt>
  4100f4:	str	x22, [x21, #1168]
  4100f8:	mov	w8, #0x1                   	// #1
  4100fc:	str	w8, [x20, #1176]
  410100:	ldp	x20, x19, [sp, #48]
  410104:	ldp	x22, x21, [sp, #32]
  410108:	ldr	x23, [sp, #16]
  41010c:	ldp	x29, x30, [sp], #64
  410110:	ret
  410114:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410118:	add	x3, x3, #0x7b8
  41011c:	mov	x2, #0xffffffffffffffff    	// #-1
  410120:	b	410124 <wcrtomb@plt+0xd2f4>
  410124:	sub	sp, sp, #0x80
  410128:	stp	x29, x30, [sp, #32]
  41012c:	add	x29, sp, #0x20
  410130:	stp	x28, x27, [sp, #48]
  410134:	stp	x26, x25, [sp, #64]
  410138:	stp	x24, x23, [sp, #80]
  41013c:	stp	x22, x21, [sp, #96]
  410140:	stp	x20, x19, [sp, #112]
  410144:	mov	x22, x3
  410148:	stur	x2, [x29, #-8]
  41014c:	mov	x21, x1
  410150:	mov	w23, w0
  410154:	bl	402da0 <__errno_location@plt>
  410158:	tbnz	w23, #31, 4102a8 <wcrtomb@plt+0xd478>
  41015c:	adrp	x25, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410160:	ldr	w8, [x25, #1176]
  410164:	adrp	x28, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410168:	ldr	w20, [x0]
  41016c:	ldr	x27, [x28, #1168]
  410170:	mov	x19, x0
  410174:	cmp	w8, w23
  410178:	b.gt	4101e4 <wcrtomb@plt+0xd3b4>
  41017c:	mov	w8, #0x7fffffff            	// #2147483647
  410180:	cmp	w23, w8
  410184:	stur	w20, [x29, #-12]
  410188:	b.eq	4102ac <wcrtomb@plt+0xd47c>  // b.none
  41018c:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410190:	add	x20, x20, #0x4a0
  410194:	add	w26, w23, #0x1
  410198:	cmp	x27, x20
  41019c:	csel	x0, xzr, x27, eq  // eq = none
  4101a0:	sbfiz	x1, x26, #4, #32
  4101a4:	bl	410d00 <wcrtomb@plt+0xded0>
  4101a8:	mov	x24, x0
  4101ac:	cmp	x27, x20
  4101b0:	str	x0, [x28, #1168]
  4101b4:	b.ne	4101c0 <wcrtomb@plt+0xd390>  // b.any
  4101b8:	ldr	q0, [x20]
  4101bc:	str	q0, [x24]
  4101c0:	ldrsw	x8, [x25, #1176]
  4101c4:	mov	w1, wzr
  4101c8:	add	x0, x24, x8, lsl #4
  4101cc:	sub	w8, w26, w8
  4101d0:	sbfiz	x2, x8, #4, #32
  4101d4:	bl	4029d0 <memset@plt>
  4101d8:	ldur	w20, [x29, #-12]
  4101dc:	mov	x27, x24
  4101e0:	str	w26, [x25, #1176]
  4101e4:	add	x28, x27, w23, uxtw #4
  4101e8:	mov	x27, x28
  4101ec:	ldr	x26, [x28]
  4101f0:	ldr	x23, [x27, #8]!
  4101f4:	ldp	w4, w8, [x22]
  4101f8:	ldp	x7, x9, [x22, #40]
  4101fc:	ldur	x3, [x29, #-8]
  410200:	add	x24, x22, #0x8
  410204:	orr	w25, w8, #0x1
  410208:	mov	x0, x23
  41020c:	mov	x1, x26
  410210:	mov	x2, x21
  410214:	mov	w5, w25
  410218:	mov	x6, x24
  41021c:	str	x9, [sp]
  410220:	bl	40f358 <wcrtomb@plt+0xc528>
  410224:	cmp	x26, x0
  410228:	b.hi	410280 <wcrtomb@plt+0xd450>  // b.pmore
  41022c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410230:	add	x8, x8, #0x7f0
  410234:	add	x26, x0, #0x1
  410238:	cmp	x23, x8
  41023c:	str	x26, [x28]
  410240:	b.eq	41024c <wcrtomb@plt+0xd41c>  // b.none
  410244:	mov	x0, x23
  410248:	bl	402be0 <free@plt>
  41024c:	mov	x0, x26
  410250:	bl	410cb0 <wcrtomb@plt+0xde80>
  410254:	str	x0, [x27]
  410258:	ldr	w4, [x22]
  41025c:	ldp	x7, x8, [x22, #40]
  410260:	ldur	x3, [x29, #-8]
  410264:	mov	x1, x26
  410268:	mov	x2, x21
  41026c:	mov	w5, w25
  410270:	mov	x6, x24
  410274:	mov	x23, x0
  410278:	str	x8, [sp]
  41027c:	bl	40f358 <wcrtomb@plt+0xc528>
  410280:	str	w20, [x19]
  410284:	mov	x0, x23
  410288:	ldp	x20, x19, [sp, #112]
  41028c:	ldp	x22, x21, [sp, #96]
  410290:	ldp	x24, x23, [sp, #80]
  410294:	ldp	x26, x25, [sp, #64]
  410298:	ldp	x28, x27, [sp, #48]
  41029c:	ldp	x29, x30, [sp, #32]
  4102a0:	add	sp, sp, #0x80
  4102a4:	ret
  4102a8:	bl	402b10 <abort@plt>
  4102ac:	bl	410ec0 <wcrtomb@plt+0xe090>
  4102b0:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4102b4:	add	x3, x3, #0x7b8
  4102b8:	b	410124 <wcrtomb@plt+0xd2f4>
  4102bc:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4102c0:	add	x3, x3, #0x7b8
  4102c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4102c8:	mov	x1, x0
  4102cc:	mov	w0, wzr
  4102d0:	b	410124 <wcrtomb@plt+0xd2f4>
  4102d4:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4102d8:	mov	x2, x1
  4102dc:	add	x3, x3, #0x7b8
  4102e0:	mov	x1, x0
  4102e4:	mov	w0, wzr
  4102e8:	b	410124 <wcrtomb@plt+0xd2f4>
  4102ec:	sub	sp, sp, #0x50
  4102f0:	movi	v0.2d, #0x0
  4102f4:	cmp	w1, #0xa
  4102f8:	stp	x29, x30, [sp, #64]
  4102fc:	add	x29, sp, #0x40
  410300:	str	xzr, [sp, #48]
  410304:	stp	q0, q0, [sp, #16]
  410308:	str	q0, [sp]
  41030c:	b.eq	410334 <wcrtomb@plt+0xd504>  // b.none
  410310:	mov	x8, x2
  410314:	str	w1, [sp]
  410318:	mov	x3, sp
  41031c:	mov	x2, #0xffffffffffffffff    	// #-1
  410320:	mov	x1, x8
  410324:	bl	410124 <wcrtomb@plt+0xd2f4>
  410328:	ldp	x29, x30, [sp, #64]
  41032c:	add	sp, sp, #0x50
  410330:	ret
  410334:	bl	402b10 <abort@plt>
  410338:	sub	sp, sp, #0x50
  41033c:	movi	v0.2d, #0x0
  410340:	cmp	w1, #0xa
  410344:	stp	x29, x30, [sp, #64]
  410348:	add	x29, sp, #0x40
  41034c:	str	xzr, [sp, #48]
  410350:	stp	q0, q0, [sp, #16]
  410354:	str	q0, [sp]
  410358:	b.eq	410380 <wcrtomb@plt+0xd550>  // b.none
  41035c:	mov	x8, x3
  410360:	str	w1, [sp]
  410364:	mov	x3, sp
  410368:	mov	x1, x2
  41036c:	mov	x2, x8
  410370:	bl	410124 <wcrtomb@plt+0xd2f4>
  410374:	ldp	x29, x30, [sp, #64]
  410378:	add	sp, sp, #0x50
  41037c:	ret
  410380:	bl	402b10 <abort@plt>
  410384:	mov	x2, x1
  410388:	mov	w1, w0
  41038c:	mov	w0, wzr
  410390:	b	4102ec <wcrtomb@plt+0xd4bc>
  410394:	mov	x3, x2
  410398:	mov	x2, x1
  41039c:	mov	w1, w0
  4103a0:	mov	w0, wzr
  4103a4:	b	410338 <wcrtomb@plt+0xd508>
  4103a8:	sub	sp, sp, #0x50
  4103ac:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4103b0:	add	x9, x9, #0x7b8
  4103b4:	ldp	q0, q1, [x9]
  4103b8:	ubfx	w10, w2, #5, #3
  4103bc:	mov	x11, sp
  4103c0:	mov	x8, x1
  4103c4:	stp	q0, q1, [sp]
  4103c8:	ldr	q0, [x9, #32]
  4103cc:	ldr	x9, [x9, #48]
  4103d0:	mov	x1, x0
  4103d4:	mov	x3, sp
  4103d8:	str	q0, [sp, #32]
  4103dc:	str	x9, [sp, #48]
  4103e0:	add	x9, x11, w10, uxtw #2
  4103e4:	ldr	w10, [x9, #8]
  4103e8:	mov	w0, wzr
  4103ec:	stp	x29, x30, [sp, #64]
  4103f0:	add	x29, sp, #0x40
  4103f4:	lsr	w11, w10, w2
  4103f8:	mvn	w11, w11
  4103fc:	and	w11, w11, #0x1
  410400:	lsl	w11, w11, w2
  410404:	eor	w10, w11, w10
  410408:	mov	x2, x8
  41040c:	str	w10, [x9, #8]
  410410:	bl	410124 <wcrtomb@plt+0xd2f4>
  410414:	ldp	x29, x30, [sp, #64]
  410418:	add	sp, sp, #0x50
  41041c:	ret
  410420:	sub	sp, sp, #0x50
  410424:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410428:	add	x9, x9, #0x7b8
  41042c:	ldp	q0, q1, [x9]
  410430:	ubfx	w10, w1, #5, #3
  410434:	mov	x11, sp
  410438:	mov	x8, x0
  41043c:	stp	q0, q1, [sp]
  410440:	ldr	q0, [x9, #32]
  410444:	ldr	x9, [x9, #48]
  410448:	mov	x3, sp
  41044c:	mov	x2, #0xffffffffffffffff    	// #-1
  410450:	str	q0, [sp, #32]
  410454:	str	x9, [sp, #48]
  410458:	add	x9, x11, w10, uxtw #2
  41045c:	ldr	w10, [x9, #8]
  410460:	mov	w0, wzr
  410464:	stp	x29, x30, [sp, #64]
  410468:	add	x29, sp, #0x40
  41046c:	lsr	w11, w10, w1
  410470:	mvn	w11, w11
  410474:	and	w11, w11, #0x1
  410478:	lsl	w11, w11, w1
  41047c:	eor	w10, w11, w10
  410480:	mov	x1, x8
  410484:	str	w10, [x9, #8]
  410488:	bl	410124 <wcrtomb@plt+0xd2f4>
  41048c:	ldp	x29, x30, [sp, #64]
  410490:	add	sp, sp, #0x50
  410494:	ret
  410498:	sub	sp, sp, #0x50
  41049c:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4104a0:	add	x8, x8, #0x7b8
  4104a4:	ldp	q0, q1, [x8]
  4104a8:	ldr	q2, [x8, #32]
  4104ac:	ldr	x8, [x8, #48]
  4104b0:	mov	x1, x0
  4104b4:	stp	q0, q1, [sp]
  4104b8:	ldr	w9, [sp, #12]
  4104bc:	str	x8, [sp, #48]
  4104c0:	mov	x3, sp
  4104c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4104c8:	orr	w8, w9, #0x4000000
  4104cc:	mov	w0, wzr
  4104d0:	stp	x29, x30, [sp, #64]
  4104d4:	add	x29, sp, #0x40
  4104d8:	str	q2, [sp, #32]
  4104dc:	str	w8, [sp, #12]
  4104e0:	bl	410124 <wcrtomb@plt+0xd2f4>
  4104e4:	ldp	x29, x30, [sp, #64]
  4104e8:	add	sp, sp, #0x50
  4104ec:	ret
  4104f0:	sub	sp, sp, #0x50
  4104f4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4104f8:	add	x8, x8, #0x7b8
  4104fc:	ldp	q0, q1, [x8]
  410500:	ldr	q2, [x8, #32]
  410504:	ldr	x8, [x8, #48]
  410508:	mov	x2, x1
  41050c:	stp	q0, q1, [sp]
  410510:	ldr	w9, [sp, #12]
  410514:	mov	x1, x0
  410518:	str	x8, [sp, #48]
  41051c:	mov	x3, sp
  410520:	orr	w8, w9, #0x4000000
  410524:	mov	w0, wzr
  410528:	stp	x29, x30, [sp, #64]
  41052c:	add	x29, sp, #0x40
  410530:	str	q2, [sp, #32]
  410534:	str	w8, [sp, #12]
  410538:	bl	410124 <wcrtomb@plt+0xd2f4>
  41053c:	ldp	x29, x30, [sp, #64]
  410540:	add	sp, sp, #0x50
  410544:	ret
  410548:	sub	sp, sp, #0x80
  41054c:	movi	v0.2d, #0x0
  410550:	cmp	w1, #0xa
  410554:	stp	x29, x30, [sp, #112]
  410558:	add	x29, sp, #0x70
  41055c:	str	wzr, [sp, #48]
  410560:	stp	q0, q0, [sp, #16]
  410564:	str	q0, [sp]
  410568:	b.eq	4105b8 <wcrtomb@plt+0xd788>  // b.none
  41056c:	ldp	q0, q1, [sp]
  410570:	ldr	w9, [sp, #48]
  410574:	ldr	q2, [sp, #32]
  410578:	mov	x8, x2
  41057c:	stur	q0, [sp, #60]
  410580:	ldr	w10, [sp, #68]
  410584:	str	w1, [sp, #56]
  410588:	str	w9, [sp, #108]
  41058c:	add	x3, sp, #0x38
  410590:	orr	w9, w10, #0x4000000
  410594:	mov	x2, #0xffffffffffffffff    	// #-1
  410598:	mov	x1, x8
  41059c:	stur	q1, [sp, #76]
  4105a0:	stur	q2, [sp, #92]
  4105a4:	str	w9, [sp, #68]
  4105a8:	bl	410124 <wcrtomb@plt+0xd2f4>
  4105ac:	ldp	x29, x30, [sp, #112]
  4105b0:	add	sp, sp, #0x80
  4105b4:	ret
  4105b8:	bl	402b10 <abort@plt>
  4105bc:	mov	x4, #0xffffffffffffffff    	// #-1
  4105c0:	b	4105c4 <wcrtomb@plt+0xd794>
  4105c4:	sub	sp, sp, #0x50
  4105c8:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4105cc:	add	x9, x9, #0x7b8
  4105d0:	ldp	q0, q1, [x9]
  4105d4:	ldr	x10, [x9, #48]
  4105d8:	stp	x29, x30, [sp, #64]
  4105dc:	add	x29, sp, #0x40
  4105e0:	stp	q0, q1, [sp]
  4105e4:	ldr	q0, [x9, #32]
  4105e8:	mov	w9, #0xa                   	// #10
  4105ec:	str	x10, [sp, #48]
  4105f0:	str	w9, [sp]
  4105f4:	str	q0, [sp, #32]
  4105f8:	cbz	x1, 410624 <wcrtomb@plt+0xd7f4>
  4105fc:	cbz	x2, 410624 <wcrtomb@plt+0xd7f4>
  410600:	mov	x8, x3
  410604:	stp	x1, x2, [sp, #40]
  410608:	mov	x3, sp
  41060c:	mov	x1, x8
  410610:	mov	x2, x4
  410614:	bl	410124 <wcrtomb@plt+0xd2f4>
  410618:	ldp	x29, x30, [sp, #64]
  41061c:	add	sp, sp, #0x50
  410620:	ret
  410624:	bl	402b10 <abort@plt>
  410628:	mov	x3, x2
  41062c:	mov	x2, x1
  410630:	mov	x4, #0xffffffffffffffff    	// #-1
  410634:	mov	x1, x0
  410638:	mov	w0, wzr
  41063c:	b	4105c4 <wcrtomb@plt+0xd794>
  410640:	mov	x4, x3
  410644:	mov	x3, x2
  410648:	mov	x2, x1
  41064c:	mov	x1, x0
  410650:	mov	w0, wzr
  410654:	b	4105c4 <wcrtomb@plt+0xd794>
  410658:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  41065c:	add	x3, x3, #0x4b0
  410660:	b	410124 <wcrtomb@plt+0xd2f4>
  410664:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410668:	mov	x2, x1
  41066c:	add	x3, x3, #0x4b0
  410670:	mov	x1, x0
  410674:	mov	w0, wzr
  410678:	b	410124 <wcrtomb@plt+0xd2f4>
  41067c:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410680:	add	x3, x3, #0x4b0
  410684:	mov	x2, #0xffffffffffffffff    	// #-1
  410688:	b	410124 <wcrtomb@plt+0xd2f4>
  41068c:	adrp	x3, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410690:	add	x3, x3, #0x4b0
  410694:	mov	x2, #0xffffffffffffffff    	// #-1
  410698:	mov	x1, x0
  41069c:	mov	w0, wzr
  4106a0:	b	410124 <wcrtomb@plt+0xd2f4>
  4106a4:	stp	x29, x30, [sp, #-32]!
  4106a8:	stp	x20, x19, [sp, #16]
  4106ac:	mov	x20, x0
  4106b0:	mov	w19, w1
  4106b4:	mov	w2, #0x5                   	// #5
  4106b8:	mov	x0, xzr
  4106bc:	mov	x1, x20
  4106c0:	mov	x29, sp
  4106c4:	bl	402d10 <dcgettext@plt>
  4106c8:	cmp	x0, x20
  4106cc:	b.ne	4107b0 <wcrtomb@plt+0xd980>  // b.any
  4106d0:	bl	40f080 <wcrtomb@plt+0xc250>
  4106d4:	ldrb	w8, [x0]
  4106d8:	and	w8, w8, #0xffffffdf
  4106dc:	cmp	w8, #0x47
  4106e0:	b.eq	410744 <wcrtomb@plt+0xd914>  // b.none
  4106e4:	cmp	w8, #0x55
  4106e8:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  4106ec:	ldrb	w8, [x0, #1]
  4106f0:	and	w8, w8, #0xffffffdf
  4106f4:	cmp	w8, #0x54
  4106f8:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  4106fc:	ldrb	w8, [x0, #2]
  410700:	and	w8, w8, #0xffffffdf
  410704:	cmp	w8, #0x46
  410708:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  41070c:	ldrb	w8, [x0, #3]
  410710:	cmp	w8, #0x2d
  410714:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410718:	ldrb	w8, [x0, #4]
  41071c:	cmp	w8, #0x38
  410720:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410724:	ldrb	w8, [x0, #5]
  410728:	cbnz	w8, 410798 <wcrtomb@plt+0xd968>
  41072c:	ldrb	w8, [x20]
  410730:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410734:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410738:	add	x9, x9, #0xc32
  41073c:	add	x10, x10, #0xc2e
  410740:	b	4107d0 <wcrtomb@plt+0xd9a0>
  410744:	ldrb	w8, [x0, #1]
  410748:	and	w8, w8, #0xffffffdf
  41074c:	cmp	w8, #0x42
  410750:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410754:	ldrb	w8, [x0, #2]
  410758:	cmp	w8, #0x31
  41075c:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410760:	ldrb	w8, [x0, #3]
  410764:	cmp	w8, #0x38
  410768:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  41076c:	ldrb	w8, [x0, #4]
  410770:	cmp	w8, #0x30
  410774:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410778:	ldrb	w8, [x0, #5]
  41077c:	cmp	w8, #0x33
  410780:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410784:	ldrb	w8, [x0, #6]
  410788:	cmp	w8, #0x30
  41078c:	b.ne	410798 <wcrtomb@plt+0xd968>  // b.any
  410790:	ldrb	w8, [x0, #7]
  410794:	cbz	w8, 4107bc <wcrtomb@plt+0xd98c>
  410798:	adrp	x8, 41d000 <_obstack_memory_used@@Base+0xbd74>
  41079c:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4107a0:	add	x8, x8, #0x7ce
  4107a4:	add	x9, x9, #0x8bc
  4107a8:	cmp	w19, #0x9
  4107ac:	csel	x0, x9, x8, eq  // eq = none
  4107b0:	ldp	x20, x19, [sp, #16]
  4107b4:	ldp	x29, x30, [sp], #32
  4107b8:	ret
  4107bc:	ldrb	w8, [x20]
  4107c0:	adrp	x9, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4107c4:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4107c8:	add	x9, x9, #0xc3a
  4107cc:	add	x10, x10, #0xc36
  4107d0:	cmp	w8, #0x60
  4107d4:	csel	x0, x10, x9, eq  // eq = none
  4107d8:	b	4107b0 <wcrtomb@plt+0xd980>
  4107dc:	sub	sp, sp, #0x50
  4107e0:	stp	x22, x21, [sp, #48]
  4107e4:	stp	x20, x19, [sp, #64]
  4107e8:	mov	x21, x5
  4107ec:	mov	x20, x4
  4107f0:	mov	x5, x3
  4107f4:	mov	x4, x2
  4107f8:	mov	x19, x0
  4107fc:	stp	x29, x30, [sp, #32]
  410800:	add	x29, sp, #0x20
  410804:	cbz	x1, 410824 <wcrtomb@plt+0xd9f4>
  410808:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41080c:	mov	x3, x1
  410810:	add	x2, x2, #0xc47
  410814:	mov	w1, #0x1                   	// #1
  410818:	mov	x0, x19
  41081c:	bl	402ba0 <__fprintf_chk@plt>
  410820:	b	410840 <wcrtomb@plt+0xda10>
  410824:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410828:	add	x2, x2, #0xc53
  41082c:	mov	w1, #0x1                   	// #1
  410830:	mov	x0, x19
  410834:	mov	x3, x4
  410838:	mov	x4, x5
  41083c:	bl	402ba0 <__fprintf_chk@plt>
  410840:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410844:	add	x1, x1, #0xc5a
  410848:	mov	w2, #0x5                   	// #5
  41084c:	mov	x0, xzr
  410850:	bl	402d10 <dcgettext@plt>
  410854:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410858:	mov	x3, x0
  41085c:	add	x2, x2, #0xf34
  410860:	mov	w1, #0x1                   	// #1
  410864:	mov	w4, #0x7e4                 	// #2020
  410868:	mov	x0, x19
  41086c:	bl	402ba0 <__fprintf_chk@plt>
  410870:	adrp	x22, 41d000 <_obstack_memory_used@@Base+0xbd74>
  410874:	add	x22, x22, #0xdb2
  410878:	mov	x0, x22
  41087c:	mov	x1, x19
  410880:	bl	402d20 <fputs_unlocked@plt>
  410884:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410888:	add	x1, x1, #0xc5e
  41088c:	mov	w2, #0x5                   	// #5
  410890:	mov	x0, xzr
  410894:	bl	402d10 <dcgettext@plt>
  410898:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41089c:	mov	x2, x0
  4108a0:	add	x3, x3, #0xd09
  4108a4:	mov	w1, #0x1                   	// #1
  4108a8:	mov	x0, x19
  4108ac:	bl	402ba0 <__fprintf_chk@plt>
  4108b0:	mov	x0, x22
  4108b4:	mov	x1, x19
  4108b8:	bl	402d20 <fputs_unlocked@plt>
  4108bc:	cmp	x21, #0x9
  4108c0:	b.hi	410914 <wcrtomb@plt+0xdae4>  // b.pmore
  4108c4:	adrp	x8, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4108c8:	add	x8, x8, #0xc3d
  4108cc:	adr	x9, 4108dc <wcrtomb@plt+0xdaac>
  4108d0:	ldrb	w10, [x8, x21]
  4108d4:	add	x9, x9, x10, lsl #2
  4108d8:	br	x9
  4108dc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4108e0:	add	x1, x1, #0xd2b
  4108e4:	mov	w2, #0x5                   	// #5
  4108e8:	mov	x0, xzr
  4108ec:	bl	402d10 <dcgettext@plt>
  4108f0:	ldr	x3, [x20]
  4108f4:	mov	x2, x0
  4108f8:	mov	x0, x19
  4108fc:	ldp	x20, x19, [sp, #64]
  410900:	ldp	x22, x21, [sp, #48]
  410904:	ldp	x29, x30, [sp, #32]
  410908:	mov	w1, #0x1                   	// #1
  41090c:	add	sp, sp, #0x50
  410910:	b	402ba0 <__fprintf_chk@plt>
  410914:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410918:	add	x1, x1, #0xe6a
  41091c:	b	410a78 <wcrtomb@plt+0xdc48>
  410920:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410924:	add	x1, x1, #0xd3b
  410928:	mov	w2, #0x5                   	// #5
  41092c:	mov	x0, xzr
  410930:	bl	402d10 <dcgettext@plt>
  410934:	ldp	x3, x4, [x20]
  410938:	mov	x2, x0
  41093c:	mov	x0, x19
  410940:	ldp	x20, x19, [sp, #64]
  410944:	ldp	x22, x21, [sp, #48]
  410948:	ldp	x29, x30, [sp, #32]
  41094c:	mov	w1, #0x1                   	// #1
  410950:	add	sp, sp, #0x50
  410954:	b	402ba0 <__fprintf_chk@plt>
  410958:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41095c:	add	x1, x1, #0xd52
  410960:	mov	w2, #0x5                   	// #5
  410964:	mov	x0, xzr
  410968:	bl	402d10 <dcgettext@plt>
  41096c:	ldp	x3, x4, [x20]
  410970:	ldr	x5, [x20, #16]
  410974:	mov	x2, x0
  410978:	mov	x0, x19
  41097c:	ldp	x20, x19, [sp, #64]
  410980:	ldp	x22, x21, [sp, #48]
  410984:	ldp	x29, x30, [sp, #32]
  410988:	mov	w1, #0x1                   	// #1
  41098c:	add	sp, sp, #0x50
  410990:	b	402ba0 <__fprintf_chk@plt>
  410994:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410998:	add	x1, x1, #0xd6e
  41099c:	mov	w2, #0x5                   	// #5
  4109a0:	mov	x0, xzr
  4109a4:	bl	402d10 <dcgettext@plt>
  4109a8:	ldp	x3, x4, [x20]
  4109ac:	ldp	x5, x6, [x20, #16]
  4109b0:	mov	x2, x0
  4109b4:	mov	x0, x19
  4109b8:	ldp	x20, x19, [sp, #64]
  4109bc:	ldp	x22, x21, [sp, #48]
  4109c0:	ldp	x29, x30, [sp, #32]
  4109c4:	mov	w1, #0x1                   	// #1
  4109c8:	add	sp, sp, #0x50
  4109cc:	b	402ba0 <__fprintf_chk@plt>
  4109d0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4109d4:	add	x1, x1, #0xd8e
  4109d8:	mov	w2, #0x5                   	// #5
  4109dc:	mov	x0, xzr
  4109e0:	bl	402d10 <dcgettext@plt>
  4109e4:	ldp	x3, x4, [x20]
  4109e8:	ldp	x5, x6, [x20, #16]
  4109ec:	ldr	x7, [x20, #32]
  4109f0:	mov	x2, x0
  4109f4:	mov	x0, x19
  4109f8:	ldp	x20, x19, [sp, #64]
  4109fc:	ldp	x22, x21, [sp, #48]
  410a00:	ldp	x29, x30, [sp, #32]
  410a04:	mov	w1, #0x1                   	// #1
  410a08:	add	sp, sp, #0x50
  410a0c:	b	402ba0 <__fprintf_chk@plt>
  410a10:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410a14:	add	x1, x1, #0xdb2
  410a18:	mov	w2, #0x5                   	// #5
  410a1c:	mov	x0, xzr
  410a20:	bl	402d10 <dcgettext@plt>
  410a24:	ldp	x3, x4, [x20]
  410a28:	ldp	x5, x6, [x20, #16]
  410a2c:	ldp	x7, x8, [x20, #32]
  410a30:	mov	x2, x0
  410a34:	b	410a64 <wcrtomb@plt+0xdc34>
  410a38:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410a3c:	add	x1, x1, #0xdda
  410a40:	mov	w2, #0x5                   	// #5
  410a44:	mov	x0, xzr
  410a48:	bl	402d10 <dcgettext@plt>
  410a4c:	ldr	x9, [x20, #48]
  410a50:	ldp	x3, x4, [x20]
  410a54:	ldp	x5, x6, [x20, #16]
  410a58:	ldp	x7, x8, [x20, #32]
  410a5c:	mov	x2, x0
  410a60:	str	x9, [sp, #8]
  410a64:	mov	w1, #0x1                   	// #1
  410a68:	str	x8, [sp]
  410a6c:	b	410adc <wcrtomb@plt+0xdcac>
  410a70:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410a74:	add	x1, x1, #0xe36
  410a78:	mov	w2, #0x5                   	// #5
  410a7c:	mov	x0, xzr
  410a80:	bl	402d10 <dcgettext@plt>
  410a84:	ldp	x8, x9, [x20, #56]
  410a88:	ldp	x3, x4, [x20]
  410a8c:	ldp	x5, x6, [x20, #16]
  410a90:	ldr	x7, [x20, #32]
  410a94:	ldur	q0, [x20, #40]
  410a98:	mov	x2, x0
  410a9c:	str	x9, [sp, #24]
  410aa0:	b	410ad0 <wcrtomb@plt+0xdca0>
  410aa4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410aa8:	add	x1, x1, #0xe06
  410aac:	mov	w2, #0x5                   	// #5
  410ab0:	mov	x0, xzr
  410ab4:	bl	402d10 <dcgettext@plt>
  410ab8:	ldp	x3, x4, [x20]
  410abc:	ldp	x5, x6, [x20, #16]
  410ac0:	ldr	x7, [x20, #32]
  410ac4:	ldur	q0, [x20, #40]
  410ac8:	ldr	x8, [x20, #56]
  410acc:	mov	x2, x0
  410ad0:	str	x8, [sp, #16]
  410ad4:	mov	w1, #0x1                   	// #1
  410ad8:	str	q0, [sp]
  410adc:	mov	x0, x19
  410ae0:	bl	402ba0 <__fprintf_chk@plt>
  410ae4:	ldp	x20, x19, [sp, #64]
  410ae8:	ldp	x22, x21, [sp, #48]
  410aec:	ldp	x29, x30, [sp, #32]
  410af0:	add	sp, sp, #0x50
  410af4:	ret
  410af8:	mov	x8, xzr
  410afc:	ldr	x9, [x4, x8, lsl #3]
  410b00:	add	x8, x8, #0x1
  410b04:	cbnz	x9, 410afc <wcrtomb@plt+0xdccc>
  410b08:	sub	x5, x8, #0x1
  410b0c:	b	4107dc <wcrtomb@plt+0xd9ac>
  410b10:	sub	sp, sp, #0x60
  410b14:	stp	x29, x30, [sp, #80]
  410b18:	ldr	w8, [x4, #24]
  410b1c:	mov	x5, xzr
  410b20:	mov	x9, sp
  410b24:	add	x29, sp, #0x50
  410b28:	tbz	w8, #31, 410b50 <wcrtomb@plt+0xdd20>
  410b2c:	add	w11, w8, #0x8
  410b30:	cmn	w8, #0x8
  410b34:	str	w11, [x4, #24]
  410b38:	b.gt	410b4c <wcrtomb@plt+0xdd1c>
  410b3c:	ldr	x10, [x4, #8]
  410b40:	add	x10, x10, w8, sxtw
  410b44:	mov	w8, w11
  410b48:	b	410b5c <wcrtomb@plt+0xdd2c>
  410b4c:	mov	w8, w11
  410b50:	ldr	x10, [x4]
  410b54:	add	x11, x10, #0x8
  410b58:	str	x11, [x4]
  410b5c:	ldr	x10, [x10]
  410b60:	str	x10, [x9, x5, lsl #3]
  410b64:	cbz	x10, 410b74 <wcrtomb@plt+0xdd44>
  410b68:	add	x5, x5, #0x1
  410b6c:	cmp	x5, #0xa
  410b70:	b.ne	410b28 <wcrtomb@plt+0xdcf8>  // b.any
  410b74:	mov	x4, sp
  410b78:	bl	4107dc <wcrtomb@plt+0xd9ac>
  410b7c:	ldp	x29, x30, [sp, #80]
  410b80:	add	sp, sp, #0x60
  410b84:	ret
  410b88:	sub	sp, sp, #0xf0
  410b8c:	stp	x29, x30, [sp, #224]
  410b90:	add	x29, sp, #0xe0
  410b94:	mov	x8, #0xffffffffffffffe0    	// #-32
  410b98:	mov	x9, sp
  410b9c:	sub	x10, x29, #0x60
  410ba0:	movk	x8, #0xff80, lsl #32
  410ba4:	add	x11, x29, #0x10
  410ba8:	add	x9, x9, #0x80
  410bac:	add	x10, x10, #0x20
  410bb0:	stp	x9, x8, [x29, #-16]
  410bb4:	stp	x11, x10, [x29, #-32]
  410bb8:	stp	x4, x5, [x29, #-96]
  410bbc:	stp	x6, x7, [x29, #-80]
  410bc0:	stp	q0, q1, [sp]
  410bc4:	ldp	q0, q1, [x29, #-32]
  410bc8:	sub	x4, x29, #0x40
  410bcc:	stp	q2, q3, [sp, #32]
  410bd0:	stp	q4, q5, [sp, #64]
  410bd4:	stp	q6, q7, [sp, #96]
  410bd8:	stp	q0, q1, [x29, #-64]
  410bdc:	bl	410b10 <wcrtomb@plt+0xdce0>
  410be0:	ldp	x29, x30, [sp, #224]
  410be4:	add	sp, sp, #0xf0
  410be8:	ret
  410bec:	stp	x29, x30, [sp, #-16]!
  410bf0:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410bf4:	ldr	x1, [x8, #1304]
  410bf8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xbd74>
  410bfc:	add	x0, x0, #0xdb2
  410c00:	mov	x29, sp
  410c04:	bl	402d20 <fputs_unlocked@plt>
  410c08:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410c0c:	add	x1, x1, #0xea6
  410c10:	mov	w2, #0x5                   	// #5
  410c14:	mov	x0, xzr
  410c18:	bl	402d10 <dcgettext@plt>
  410c1c:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  410c20:	mov	x1, x0
  410c24:	add	x2, x2, #0xd5b
  410c28:	mov	w0, #0x1                   	// #1
  410c2c:	bl	4029b0 <__printf_chk@plt>
  410c30:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410c34:	add	x1, x1, #0xeba
  410c38:	mov	w2, #0x5                   	// #5
  410c3c:	mov	x0, xzr
  410c40:	bl	402d10 <dcgettext@plt>
  410c44:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xbd74>
  410c48:	adrp	x3, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410c4c:	mov	x1, x0
  410c50:	add	x2, x2, #0xc3d
  410c54:	add	x3, x3, #0xece
  410c58:	mov	w0, #0x1                   	// #1
  410c5c:	bl	4029b0 <__printf_chk@plt>
  410c60:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410c64:	add	x1, x1, #0xef0
  410c68:	mov	w2, #0x5                   	// #5
  410c6c:	mov	x0, xzr
  410c70:	bl	402d10 <dcgettext@plt>
  410c74:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410c78:	mov	x1, x0
  410c7c:	add	x2, x2, #0xf17
  410c80:	mov	w0, #0x1                   	// #1
  410c84:	ldp	x29, x30, [sp], #16
  410c88:	b	4029b0 <__printf_chk@plt>
  410c8c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410c90:	udiv	x8, x8, x1
  410c94:	cmp	x8, x0
  410c98:	b.cc	410ca4 <wcrtomb@plt+0xde74>  // b.lo, b.ul, b.last
  410c9c:	mul	x0, x1, x0
  410ca0:	b	410cb0 <wcrtomb@plt+0xde80>
  410ca4:	stp	x29, x30, [sp, #-16]!
  410ca8:	mov	x29, sp
  410cac:	bl	410ec0 <wcrtomb@plt+0xe090>
  410cb0:	stp	x29, x30, [sp, #-32]!
  410cb4:	str	x19, [sp, #16]
  410cb8:	mov	x29, sp
  410cbc:	mov	x19, x0
  410cc0:	bl	4028f0 <malloc@plt>
  410cc4:	cbz	x19, 410ccc <wcrtomb@plt+0xde9c>
  410cc8:	cbz	x0, 410cd8 <wcrtomb@plt+0xdea8>
  410ccc:	ldr	x19, [sp, #16]
  410cd0:	ldp	x29, x30, [sp], #32
  410cd4:	ret
  410cd8:	bl	410ec0 <wcrtomb@plt+0xe090>
  410cdc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410ce0:	udiv	x8, x8, x2
  410ce4:	cmp	x8, x1
  410ce8:	b.cc	410cf4 <wcrtomb@plt+0xdec4>  // b.lo, b.ul, b.last
  410cec:	mul	x1, x2, x1
  410cf0:	b	410d00 <wcrtomb@plt+0xded0>
  410cf4:	stp	x29, x30, [sp, #-16]!
  410cf8:	mov	x29, sp
  410cfc:	bl	410ec0 <wcrtomb@plt+0xe090>
  410d00:	stp	x29, x30, [sp, #-32]!
  410d04:	str	x19, [sp, #16]
  410d08:	mov	x19, x1
  410d0c:	mov	x29, sp
  410d10:	cbz	x0, 410d24 <wcrtomb@plt+0xdef4>
  410d14:	cbnz	x19, 410d24 <wcrtomb@plt+0xdef4>
  410d18:	bl	402be0 <free@plt>
  410d1c:	mov	x0, xzr
  410d20:	b	410d34 <wcrtomb@plt+0xdf04>
  410d24:	mov	x1, x19
  410d28:	bl	402a50 <realloc@plt>
  410d2c:	cbz	x19, 410d34 <wcrtomb@plt+0xdf04>
  410d30:	cbz	x0, 410d40 <wcrtomb@plt+0xdf10>
  410d34:	ldr	x19, [sp, #16]
  410d38:	ldp	x29, x30, [sp], #32
  410d3c:	ret
  410d40:	bl	410ec0 <wcrtomb@plt+0xe090>
  410d44:	stp	x29, x30, [sp, #-16]!
  410d48:	ldr	x9, [x1]
  410d4c:	mov	x29, sp
  410d50:	cbz	x0, 410d74 <wcrtomb@plt+0xdf44>
  410d54:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  410d58:	movk	x8, #0x5554
  410d5c:	udiv	x8, x8, x2
  410d60:	cmp	x8, x9
  410d64:	b.ls	410dac <wcrtomb@plt+0xdf7c>  // b.plast
  410d68:	add	x8, x9, x9, lsr #1
  410d6c:	add	x9, x8, #0x1
  410d70:	b	410d98 <wcrtomb@plt+0xdf68>
  410d74:	cbnz	x9, 410d88 <wcrtomb@plt+0xdf58>
  410d78:	mov	w8, #0x80                  	// #128
  410d7c:	udiv	x8, x8, x2
  410d80:	cmp	x2, #0x80
  410d84:	cinc	x9, x8, hi  // hi = pmore
  410d88:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410d8c:	udiv	x8, x8, x2
  410d90:	cmp	x8, x9
  410d94:	b.cc	410dac <wcrtomb@plt+0xdf7c>  // b.lo, b.ul, b.last
  410d98:	mul	x8, x9, x2
  410d9c:	str	x9, [x1]
  410da0:	mov	x1, x8
  410da4:	ldp	x29, x30, [sp], #16
  410da8:	b	410d00 <wcrtomb@plt+0xded0>
  410dac:	bl	410ec0 <wcrtomb@plt+0xe090>
  410db0:	b	410cb0 <wcrtomb@plt+0xde80>
  410db4:	stp	x29, x30, [sp, #-16]!
  410db8:	ldr	x8, [x1]
  410dbc:	mov	x29, sp
  410dc0:	cbz	x0, 410de0 <wcrtomb@plt+0xdfb0>
  410dc4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  410dc8:	movk	x9, #0x5554
  410dcc:	cmp	x8, x9
  410dd0:	b.cs	410de8 <wcrtomb@plt+0xdfb8>  // b.hs, b.nlast
  410dd4:	add	x8, x8, x8, lsr #1
  410dd8:	add	x8, x8, #0x1
  410ddc:	b	410df0 <wcrtomb@plt+0xdfc0>
  410de0:	cbz	x8, 410dec <wcrtomb@plt+0xdfbc>
  410de4:	tbz	x8, #63, 410df0 <wcrtomb@plt+0xdfc0>
  410de8:	bl	410ec0 <wcrtomb@plt+0xe090>
  410dec:	mov	w8, #0x80                  	// #128
  410df0:	str	x8, [x1]
  410df4:	mov	x1, x8
  410df8:	ldp	x29, x30, [sp], #16
  410dfc:	b	410d00 <wcrtomb@plt+0xded0>
  410e00:	mov	w1, #0x1                   	// #1
  410e04:	b	410e08 <wcrtomb@plt+0xdfd8>
  410e08:	stp	x29, x30, [sp, #-16]!
  410e0c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410e10:	udiv	x8, x8, x1
  410e14:	cmp	x8, x0
  410e18:	mov	x29, sp
  410e1c:	b.cc	410e30 <wcrtomb@plt+0xe000>  // b.lo, b.ul, b.last
  410e20:	bl	402a20 <calloc@plt>
  410e24:	cbz	x0, 410e30 <wcrtomb@plt+0xe000>
  410e28:	ldp	x29, x30, [sp], #16
  410e2c:	ret
  410e30:	bl	410ec0 <wcrtomb@plt+0xe090>
  410e34:	stp	x29, x30, [sp, #-48]!
  410e38:	stp	x20, x19, [sp, #32]
  410e3c:	mov	x20, x0
  410e40:	mov	x0, x1
  410e44:	str	x21, [sp, #16]
  410e48:	mov	x29, sp
  410e4c:	mov	x19, x1
  410e50:	bl	410cb0 <wcrtomb@plt+0xde80>
  410e54:	mov	x1, x20
  410e58:	mov	x2, x19
  410e5c:	mov	x21, x0
  410e60:	bl	402710 <memcpy@plt>
  410e64:	mov	x0, x21
  410e68:	ldp	x20, x19, [sp, #32]
  410e6c:	ldr	x21, [sp, #16]
  410e70:	ldp	x29, x30, [sp], #48
  410e74:	ret
  410e78:	stp	x29, x30, [sp, #-48]!
  410e7c:	str	x21, [sp, #16]
  410e80:	stp	x20, x19, [sp, #32]
  410e84:	mov	x29, sp
  410e88:	mov	x19, x0
  410e8c:	bl	402750 <strlen@plt>
  410e90:	add	x20, x0, #0x1
  410e94:	mov	x0, x20
  410e98:	bl	410cb0 <wcrtomb@plt+0xde80>
  410e9c:	mov	x1, x19
  410ea0:	mov	x2, x20
  410ea4:	mov	x21, x0
  410ea8:	bl	402710 <memcpy@plt>
  410eac:	mov	x0, x21
  410eb0:	ldp	x20, x19, [sp, #32]
  410eb4:	ldr	x21, [sp, #16]
  410eb8:	ldp	x29, x30, [sp], #48
  410ebc:	ret
  410ec0:	stp	x29, x30, [sp, #-32]!
  410ec4:	str	x19, [sp, #16]
  410ec8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  410ecc:	ldr	w19, [x8, #1264]
  410ed0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410ed4:	add	x1, x1, #0xf63
  410ed8:	mov	w2, #0x5                   	// #5
  410edc:	mov	x0, xzr
  410ee0:	mov	x29, sp
  410ee4:	bl	402d10 <dcgettext@plt>
  410ee8:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  410eec:	mov	x3, x0
  410ef0:	add	x2, x2, #0x451
  410ef4:	mov	w0, w19
  410ef8:	mov	w1, wzr
  410efc:	bl	4027a0 <error@plt>
  410f00:	bl	402b10 <abort@plt>
  410f04:	sub	sp, sp, #0x40
  410f08:	stp	x29, x30, [sp, #16]
  410f0c:	add	x29, sp, #0x10
  410f10:	cmp	x0, #0x0
  410f14:	sub	x8, x29, #0x4
  410f18:	stp	x20, x19, [sp, #48]
  410f1c:	csel	x20, x8, x0, eq  // eq = none
  410f20:	mov	x0, x20
  410f24:	stp	x22, x21, [sp, #32]
  410f28:	mov	x22, x2
  410f2c:	mov	x19, x1
  410f30:	bl	402700 <mbrtowc@plt>
  410f34:	mov	x21, x0
  410f38:	cbz	x22, 410f5c <wcrtomb@plt+0xe12c>
  410f3c:	cmn	x21, #0x2
  410f40:	b.cc	410f5c <wcrtomb@plt+0xe12c>  // b.lo, b.ul, b.last
  410f44:	mov	w0, wzr
  410f48:	bl	41cd34 <_obstack_memory_used@@Base+0xbaa8>
  410f4c:	tbnz	w0, #0, 410f5c <wcrtomb@plt+0xe12c>
  410f50:	ldrb	w8, [x19]
  410f54:	mov	w21, #0x1                   	// #1
  410f58:	str	w8, [x20]
  410f5c:	mov	x0, x21
  410f60:	ldp	x20, x19, [sp, #48]
  410f64:	ldp	x22, x21, [sp, #32]
  410f68:	ldp	x29, x30, [sp, #16]
  410f6c:	add	sp, sp, #0x40
  410f70:	ret

0000000000410f74 <_obstack_begin@@Base>:
  410f74:	stp	x29, x30, [sp, #-16]!
  410f78:	ldrb	w8, [x0, #80]
  410f7c:	mov	x29, sp
  410f80:	stp	x3, x4, [x0, #56]
  410f84:	and	w8, w8, #0xfe
  410f88:	strb	w8, [x0, #80]
  410f8c:	bl	410f9c <_obstack_begin@@Base+0x28>
  410f90:	mov	w0, #0x1                   	// #1
  410f94:	ldp	x29, x30, [sp], #16
  410f98:	ret
  410f9c:	stp	x29, x30, [sp, #-48]!
  410fa0:	stp	x20, x19, [sp, #32]
  410fa4:	ldrb	w10, [x0, #80]
  410fa8:	cmp	x2, #0x0
  410fac:	mov	w8, #0x10                  	// #16
  410fb0:	mov	w9, #0xfe0                 	// #4064
  410fb4:	csel	x20, x8, x2, eq  // eq = none
  410fb8:	cmp	x1, #0x0
  410fbc:	str	x21, [sp, #16]
  410fc0:	mov	x19, x0
  410fc4:	csel	x1, x9, x1, eq  // eq = none
  410fc8:	sub	x21, x20, #0x1
  410fcc:	mov	x29, sp
  410fd0:	str	x1, [x0]
  410fd4:	str	x21, [x0, #48]
  410fd8:	tbnz	w10, #0, 410fec <_obstack_begin@@Base+0x78>
  410fdc:	ldr	x8, [x19, #56]
  410fe0:	mov	x0, x1
  410fe4:	blr	x8
  410fe8:	b	410ff8 <_obstack_begin@@Base+0x84>
  410fec:	ldr	x8, [x19, #56]
  410ff0:	ldr	x0, [x19, #72]
  410ff4:	blr	x8
  410ff8:	str	x0, [x19, #8]
  410ffc:	cbz	x0, 411044 <_obstack_begin@@Base+0xd0>
  411000:	ldr	x10, [x19]
  411004:	add	x8, x0, x21
  411008:	neg	x9, x20
  41100c:	add	x8, x8, #0x10
  411010:	and	x8, x8, x9
  411014:	stp	x8, x8, [x19, #16]
  411018:	add	x8, x0, x10
  41101c:	str	x8, [x0]
  411020:	str	x8, [x19, #32]
  411024:	str	xzr, [x0, #8]
  411028:	ldrb	w8, [x19, #80]
  41102c:	ldr	x21, [sp, #16]
  411030:	and	w8, w8, #0xfffffff9
  411034:	strb	w8, [x19, #80]
  411038:	ldp	x20, x19, [sp, #32]
  41103c:	ldp	x29, x30, [sp], #48
  411040:	ret
  411044:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  411048:	ldr	x8, [x8, #1256]
  41104c:	blr	x8

0000000000411050 <_obstack_begin_1@@Base>:
  411050:	stp	x29, x30, [sp, #-16]!
  411054:	ldrb	w8, [x0, #80]
  411058:	mov	x29, sp
  41105c:	stp	x3, x4, [x0, #56]
  411060:	str	x5, [x0, #72]
  411064:	orr	w8, w8, #0x1
  411068:	strb	w8, [x0, #80]
  41106c:	bl	410f9c <_obstack_begin@@Base+0x28>
  411070:	mov	w0, #0x1                   	// #1
  411074:	ldp	x29, x30, [sp], #16
  411078:	ret

000000000041107c <_obstack_newchunk@@Base>:
  41107c:	stp	x29, x30, [sp, #-64]!
  411080:	str	x23, [sp, #16]
  411084:	stp	x22, x21, [sp, #32]
  411088:	stp	x20, x19, [sp, #48]
  41108c:	ldp	x9, x8, [x0, #16]
  411090:	ldr	x10, [x0, #48]
  411094:	ldr	x11, [x0]
  411098:	mov	x29, sp
  41109c:	sub	x20, x8, x9
  4110a0:	adds	x8, x20, x1
  4110a4:	lsr	x9, x20, #3
  4110a8:	cset	w12, cs  // cs = hs, nlast
  4110ac:	adds	x10, x8, x10
  4110b0:	add	x9, x9, #0x64
  4110b4:	cset	w8, cs  // cs = hs, nlast
  4110b8:	adds	x9, x9, x10
  4110bc:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4110c0:	cmp	x9, x11
  4110c4:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4110c8:	tbnz	w12, #0, 4111b4 <_obstack_newchunk@@Base+0x138>
  4110cc:	tbnz	w8, #0, 4111b4 <_obstack_newchunk@@Base+0x138>
  4110d0:	ldrb	w8, [x0, #80]
  4110d4:	ldr	x21, [x0, #8]
  4110d8:	mov	x19, x0
  4110dc:	tbnz	w8, #0, 4110f0 <_obstack_newchunk@@Base+0x74>
  4110e0:	ldr	x8, [x19, #56]
  4110e4:	mov	x0, x23
  4110e8:	blr	x8
  4110ec:	b	411100 <_obstack_newchunk@@Base+0x84>
  4110f0:	ldr	x8, [x19, #56]
  4110f4:	ldr	x0, [x19, #72]
  4110f8:	mov	x1, x23
  4110fc:	blr	x8
  411100:	mov	x22, x0
  411104:	cbz	x0, 4111b4 <_obstack_newchunk@@Base+0x138>
  411108:	add	x8, x22, x23
  41110c:	str	x22, [x19, #8]
  411110:	str	x21, [x22, #8]
  411114:	str	x8, [x19, #32]
  411118:	str	x8, [x22]
  41111c:	ldr	x8, [x19, #48]
  411120:	ldr	x1, [x19, #16]
  411124:	mov	x2, x20
  411128:	add	x9, x22, x8
  41112c:	add	x9, x9, #0x10
  411130:	bic	x23, x9, x8
  411134:	mov	x0, x23
  411138:	bl	402710 <memcpy@plt>
  41113c:	ldrb	w8, [x19, #80]
  411140:	tbnz	w8, #1, 41118c <_obstack_newchunk@@Base+0x110>
  411144:	ldr	x8, [x19, #48]
  411148:	ldr	x9, [x19, #16]
  41114c:	add	x10, x21, x8
  411150:	add	x10, x10, #0x10
  411154:	bic	x8, x10, x8
  411158:	cmp	x9, x8
  41115c:	b.ne	41118c <_obstack_newchunk@@Base+0x110>  // b.any
  411160:	ldr	x8, [x21, #8]
  411164:	str	x8, [x22, #8]
  411168:	ldrb	w8, [x19, #80]
  41116c:	tbnz	w8, #0, 411180 <_obstack_newchunk@@Base+0x104>
  411170:	ldr	x8, [x19, #64]
  411174:	mov	x0, x21
  411178:	blr	x8
  41117c:	b	41118c <_obstack_newchunk@@Base+0x110>
  411180:	ldp	x8, x0, [x19, #64]
  411184:	mov	x1, x21
  411188:	blr	x8
  41118c:	ldrb	w8, [x19, #80]
  411190:	add	x9, x23, x20
  411194:	stp	x23, x9, [x19, #16]
  411198:	ldr	x23, [sp, #16]
  41119c:	and	w8, w8, #0xfffffffd
  4111a0:	strb	w8, [x19, #80]
  4111a4:	ldp	x20, x19, [sp, #48]
  4111a8:	ldp	x22, x21, [sp, #32]
  4111ac:	ldp	x29, x30, [sp], #64
  4111b0:	ret
  4111b4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4111b8:	ldr	x8, [x8, #1256]
  4111bc:	blr	x8

00000000004111c0 <_obstack_allocated_p@@Base>:
  4111c0:	ldr	x8, [x0, #8]
  4111c4:	cbz	x8, 4111e4 <_obstack_allocated_p@@Base+0x24>
  4111c8:	cmp	x8, x1
  4111cc:	b.cs	4111dc <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  4111d0:	ldr	x9, [x8]
  4111d4:	cmp	x9, x1
  4111d8:	b.cs	4111ec <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  4111dc:	ldr	x8, [x8, #8]
  4111e0:	cbnz	x8, 4111c8 <_obstack_allocated_p@@Base+0x8>
  4111e4:	mov	w0, wzr
  4111e8:	ret
  4111ec:	mov	w0, #0x1                   	// #1
  4111f0:	ret

00000000004111f4 <_obstack_free@@Base>:
  4111f4:	stp	x29, x30, [sp, #-48]!
  4111f8:	stp	x20, x19, [sp, #32]
  4111fc:	ldr	x8, [x0, #8]
  411200:	mov	x20, x1
  411204:	str	x21, [sp, #16]
  411208:	mov	x29, sp
  41120c:	cbz	x8, 411264 <_obstack_free@@Base+0x70>
  411210:	mov	x19, x0
  411214:	cmp	x8, x20
  411218:	b.cs	411228 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  41121c:	ldr	x9, [x8]
  411220:	cmp	x9, x20
  411224:	b.cs	41126c <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  411228:	ldrb	w9, [x19, #80]
  41122c:	ldr	x21, [x8, #8]
  411230:	tbnz	w9, #0, 411244 <_obstack_free@@Base+0x50>
  411234:	ldr	x9, [x19, #64]
  411238:	mov	x0, x8
  41123c:	blr	x9
  411240:	b	411250 <_obstack_free@@Base+0x5c>
  411244:	ldp	x9, x0, [x19, #64]
  411248:	mov	x1, x8
  41124c:	blr	x9
  411250:	ldrb	w8, [x19, #80]
  411254:	orr	w8, w8, #0x2
  411258:	strb	w8, [x19, #80]
  41125c:	mov	x8, x21
  411260:	cbnz	x21, 411214 <_obstack_free@@Base+0x20>
  411264:	cbz	x20, 41127c <_obstack_free@@Base+0x88>
  411268:	bl	402b10 <abort@plt>
  41126c:	stp	x20, x20, [x19, #16]
  411270:	ldr	x9, [x8]
  411274:	str	x8, [x19, #8]
  411278:	str	x9, [x19, #32]
  41127c:	ldp	x20, x19, [sp, #32]
  411280:	ldr	x21, [sp, #16]
  411284:	ldp	x29, x30, [sp], #48
  411288:	ret

000000000041128c <_obstack_memory_used@@Base>:
  41128c:	ldr	x8, [x0, #8]
  411290:	cbz	x8, 4112ac <_obstack_memory_used@@Base+0x20>
  411294:	mov	x0, xzr
  411298:	sub	x10, x0, x8
  41129c:	ldp	x9, x8, [x8]
  4112a0:	add	x0, x10, x9
  4112a4:	cbnz	x8, 411298 <_obstack_memory_used@@Base+0xc>
  4112a8:	ret
  4112ac:	mov	x0, xzr
  4112b0:	ret
  4112b4:	stp	x29, x30, [sp, #-32]!
  4112b8:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4112bc:	str	x19, [sp, #16]
  4112c0:	ldr	x19, [x8, #1280]
  4112c4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4112c8:	add	x1, x1, #0xf63
  4112cc:	mov	w2, #0x5                   	// #5
  4112d0:	mov	x0, xzr
  4112d4:	mov	x29, sp
  4112d8:	bl	402d10 <dcgettext@plt>
  4112dc:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4112e0:	mov	x3, x0
  4112e4:	add	x2, x2, #0xc4f
  4112e8:	mov	w1, #0x1                   	// #1
  4112ec:	mov	x0, x19
  4112f0:	bl	402ba0 <__fprintf_chk@plt>
  4112f4:	adrp	x8, 430000 <_obstack_memory_used@@Base+0x1ed74>
  4112f8:	ldr	w0, [x8, #1264]
  4112fc:	bl	402790 <exit@plt>
  411300:	stp	x29, x30, [sp, #-16]!
  411304:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  411308:	ldr	x3, [x9, #3584]
  41130c:	ldrb	w9, [x2, #56]
  411310:	mov	x8, x1
  411314:	mov	x1, x0
  411318:	ubfx	x10, x3, #21, #11
  41131c:	and	w10, w10, #0x10
  411320:	and	w9, w9, #0xffffffef
  411324:	orr	w9, w9, w10
  411328:	orr	w9, w9, #0x80
  41132c:	strb	w9, [x2, #56]
  411330:	mov	x0, x2
  411334:	mov	x2, x8
  411338:	mov	x29, sp
  41133c:	bl	411378 <_obstack_memory_used@@Base+0xec>
  411340:	cbz	w0, 41136c <_obstack_memory_used@@Base+0xe0>
  411344:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xdd74>
  411348:	add	x8, x8, #0x1c0
  41134c:	ldr	x8, [x8, w0, sxtw #3]
  411350:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xdd74>
  411354:	add	x9, x9, #0x3f
  411358:	mov	w2, #0x5                   	// #5
  41135c:	add	x1, x9, x8
  411360:	mov	x0, xzr
  411364:	ldp	x29, x30, [sp], #16
  411368:	b	402d10 <dcgettext@plt>
  41136c:	mov	x0, xzr
  411370:	ldp	x29, x30, [sp], #16
  411374:	ret
  411378:	sub	sp, sp, #0x140
  41137c:	stp	x29, x30, [sp, #224]
  411380:	add	x29, sp, #0xe0
  411384:	stp	x28, x27, [sp, #240]
  411388:	stp	x26, x25, [sp, #256]
  41138c:	stp	x24, x23, [sp, #272]
  411390:	stp	x22, x21, [sp, #288]
  411394:	stp	x20, x19, [sp, #304]
  411398:	str	x1, [sp, #8]
  41139c:	stur	wzr, [x29, #-52]
  4113a0:	ldrb	w8, [x0, #56]
  4113a4:	ldp	x20, x9, [x0]
  4113a8:	mov	w10, #0x90                  	// #144
  4113ac:	mov	x21, x3
  4113b0:	mov	x22, x2
  4113b4:	mov	x19, x0
  4113b8:	and	w8, w8, w10
  4113bc:	cmp	x9, #0xe7
  4113c0:	stp	xzr, x3, [x0, #16]
  4113c4:	str	xzr, [x0, #48]
  4113c8:	strb	w8, [x0, #56]
  4113cc:	b.ls	411ddc <_obstack_memory_used@@Base+0xb50>  // b.plast
  4113d0:	mov	w8, #0xe8                  	// #232
  4113d4:	mov	w2, #0xe8                  	// #232
  4113d8:	mov	x0, x20
  4113dc:	mov	w1, wzr
  4113e0:	str	x8, [x19, #16]
  4113e4:	bl	4029d0 <memset@plt>
  4113e8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4113ec:	movk	x9, #0x5554
  4113f0:	movk	x9, #0x555, lsl #48
  4113f4:	mov	w8, #0xf                   	// #15
  4113f8:	cmp	x22, x9
  4113fc:	str	w8, [x20, #128]
  411400:	b.hi	411600 <_obstack_memory_used@@Base+0x374>  // b.pmore
  411404:	add	x24, x22, #0x1
  411408:	lsl	x0, x24, #4
  41140c:	str	x24, [x20, #8]
  411410:	bl	4028f0 <malloc@plt>
  411414:	mov	w8, #0x1                   	// #1
  411418:	str	x0, [x20]
  41141c:	mov	x25, x8
  411420:	cmp	x8, x22
  411424:	lsl	x8, x8, #1
  411428:	b.ls	41141c <_obstack_memory_used@@Base+0x190>  // b.plast
  41142c:	mov	w0, #0x18                  	// #24
  411430:	mov	x1, x25
  411434:	bl	402a20 <calloc@plt>
  411438:	sub	x8, x25, #0x1
  41143c:	str	x0, [x20, #64]
  411440:	str	x8, [x20, #136]
  411444:	bl	402c00 <__ctype_get_mb_cur_max@plt>
  411448:	str	w0, [x20, #180]
  41144c:	mov	w0, #0xe                   	// #14
  411450:	bl	4028b0 <nl_langinfo@plt>
  411454:	ldrb	w8, [x0]
  411458:	orr	w8, w8, #0x20
  41145c:	cmp	w8, #0x75
  411460:	b.ne	4114ac <_obstack_memory_used@@Base+0x220>  // b.any
  411464:	ldrb	w8, [x0, #1]
  411468:	orr	w8, w8, #0x20
  41146c:	cmp	w8, #0x74
  411470:	b.ne	4114ac <_obstack_memory_used@@Base+0x220>  // b.any
  411474:	ldrb	w8, [x0, #2]
  411478:	orr	w8, w8, #0x20
  41147c:	cmp	w8, #0x66
  411480:	b.ne	4114ac <_obstack_memory_used@@Base+0x220>  // b.any
  411484:	ldrb	w8, [x0, #3]!
  411488:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xbd74>
  41148c:	add	x1, x1, #0x82f
  411490:	cmp	w8, #0x2d
  411494:	cinc	x0, x0, eq  // eq = none
  411498:	bl	402bb0 <strcmp@plt>
  41149c:	cbnz	w0, 4114ac <_obstack_memory_used@@Base+0x220>
  4114a0:	ldrb	w8, [x20, #176]
  4114a4:	orr	w8, w8, #0x4
  4114a8:	strb	w8, [x20, #176]
  4114ac:	ldrb	w8, [x20, #176]
  4114b0:	ldr	w9, [x20, #180]
  4114b4:	and	w10, w8, #0xfffffff7
  4114b8:	cmp	w9, #0x2
  4114bc:	strb	w10, [x20, #176]
  4114c0:	b.lt	411560 <_obstack_memory_used@@Base+0x2d4>  // b.tstop
  4114c4:	tbnz	w8, #2, 411554 <_obstack_memory_used@@Base+0x2c8>
  4114c8:	mov	w0, #0x20                  	// #32
  4114cc:	mov	w1, #0x1                   	// #1
  4114d0:	bl	402a20 <calloc@plt>
  4114d4:	str	x0, [x20, #120]
  4114d8:	cbz	x0, 411600 <_obstack_memory_used@@Base+0x374>
  4114dc:	mov	x26, xzr
  4114e0:	mov	w8, wzr
  4114e4:	mov	w27, #0x1                   	// #1
  4114e8:	mov	x28, xzr
  4114ec:	mov	w23, w8
  4114f0:	add	x25, x23, x28
  4114f4:	mov	w0, w25
  4114f8:	bl	402b00 <btowc@plt>
  4114fc:	cmn	w0, #0x1
  411500:	b.eq	411518 <_obstack_memory_used@@Base+0x28c>  // b.none
  411504:	ldr	x8, [x20, #120]
  411508:	lsl	x10, x27, x28
  41150c:	ldr	x9, [x8, x26, lsl #3]
  411510:	orr	x9, x9, x10
  411514:	str	x9, [x8, x26, lsl #3]
  411518:	cmp	w25, #0x7f
  41151c:	b.hi	411534 <_obstack_memory_used@@Base+0x2a8>  // b.pmore
  411520:	cmp	w25, w0
  411524:	b.eq	411534 <_obstack_memory_used@@Base+0x2a8>  // b.none
  411528:	ldrb	w8, [x20, #176]
  41152c:	orr	w8, w8, #0x8
  411530:	strb	w8, [x20, #176]
  411534:	add	x28, x28, #0x1
  411538:	cmp	x28, #0x40
  41153c:	b.ne	4114f0 <_obstack_memory_used@@Base+0x264>  // b.any
  411540:	add	x26, x26, #0x1
  411544:	cmp	x26, #0x4
  411548:	add	w8, w23, w28
  41154c:	b.ne	4114e8 <_obstack_memory_used@@Base+0x25c>  // b.any
  411550:	b	411560 <_obstack_memory_used@@Base+0x2d4>
  411554:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xdd74>
  411558:	add	x8, x8, #0x248
  41155c:	str	x8, [x20, #120]
  411560:	ldr	x8, [x20]
  411564:	cbz	x8, 411600 <_obstack_memory_used@@Base+0x374>
  411568:	ldr	x8, [x20, #64]
  41156c:	cbz	x8, 411600 <_obstack_memory_used@@Base+0x374>
  411570:	stur	wzr, [x29, #-52]
  411574:	ldr	x26, [x19, #40]
  411578:	add	x8, sp, #0x10
  41157c:	and	x25, x21, #0x400000
  411580:	add	x0, x8, #0x8
  411584:	mov	w2, #0x90                  	// #144
  411588:	mov	w1, wzr
  41158c:	orr	x23, x25, x26
  411590:	bl	4029d0 <memset@plt>
  411594:	ldr	x9, [sp, #8]
  411598:	cmp	x23, #0x0
  41159c:	ubfx	x8, x21, #22, #1
  4115a0:	stp	x22, x22, [sp, #96]
  4115a4:	str	x9, [sp, #16]
  4115a8:	cset	w9, ne  // ne = any
  4115ac:	str	x26, [sp, #136]
  4115b0:	strb	w8, [sp, #152]
  4115b4:	strb	w9, [sp, #155]
  4115b8:	ldr	w8, [x20, #180]
  4115bc:	cmp	x22, #0x1
  4115c0:	str	w8, [sp, #160]
  4115c4:	ldrb	w10, [x20, #176]
  4115c8:	stp	x22, x22, [sp, #112]
  4115cc:	ubfx	w11, w10, #2, #1
  4115d0:	ubfx	w10, w10, #3, #1
  4115d4:	strb	w11, [sp, #153]
  4115d8:	strb	w10, [sp, #154]
  4115dc:	b.lt	411618 <_obstack_memory_used@@Base+0x38c>  // b.tstop
  4115e0:	add	x0, sp, #0x10
  4115e4:	mov	x1, x24
  4115e8:	bl	4144d8 <_obstack_memory_used@@Base+0x324c>
  4115ec:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  4115f0:	ldrb	w9, [sp, #155]
  4115f4:	ldr	x10, [sp, #24]
  4115f8:	ldr	w8, [x20, #180]
  4115fc:	b	41161c <_obstack_memory_used@@Base+0x390>
  411600:	mov	w21, #0xc                   	// #12
  411604:	mov	x0, x20
  411608:	stur	w21, [x29, #-52]
  41160c:	bl	4123f0 <_obstack_memory_used@@Base+0x1164>
  411610:	stp	xzr, xzr, [x19]
  411614:	b	411d20 <_obstack_memory_used@@Base+0xa94>
  411618:	mov	x10, xzr
  41161c:	cmp	w9, #0x0
  411620:	ldr	x9, [sp, #8]
  411624:	csel	x10, x9, x10, eq  // eq = none
  411628:	cmp	w8, #0x2
  41162c:	str	x10, [sp, #24]
  411630:	cbz	x25, 41167c <_obstack_memory_used@@Base+0x3f0>
  411634:	b.lt	41168c <_obstack_memory_used@@Base+0x400>  // b.tstop
  411638:	add	x0, sp, #0x10
  41163c:	bl	414568 <_obstack_memory_used@@Base+0x32dc>
  411640:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  411644:	ldr	x8, [sp, #72]
  411648:	cmp	x8, x22
  41164c:	b.ge	411710 <_obstack_memory_used@@Base+0x484>  // b.tcont
  411650:	ldr	x9, [sp, #64]
  411654:	ldrsw	x10, [x20, #180]
  411658:	ldr	x8, [sp, #80]
  41165c:	add	x9, x9, x10
  411660:	cmp	x8, x9
  411664:	b.gt	411710 <_obstack_memory_used@@Base+0x484>
  411668:	lsl	x1, x8, #1
  41166c:	add	x0, sp, #0x10
  411670:	bl	4144d8 <_obstack_memory_used@@Base+0x324c>
  411674:	cbz	w0, 411638 <_obstack_memory_used@@Base+0x3ac>
  411678:	b	411d48 <_obstack_memory_used@@Base+0xabc>
  41167c:	b.lt	411698 <_obstack_memory_used@@Base+0x40c>  // b.tstop
  411680:	add	x0, sp, #0x10
  411684:	bl	414b28 <_obstack_memory_used@@Base+0x389c>
  411688:	b	411710 <_obstack_memory_used@@Base+0x484>
  41168c:	add	x0, sp, #0x10
  411690:	bl	414ab0 <_obstack_memory_used@@Base+0x3824>
  411694:	b	411710 <_obstack_memory_used@@Base+0x484>
  411698:	ldr	x9, [sp, #80]
  41169c:	cbz	x26, 41170c <_obstack_memory_used@@Base+0x480>
  4116a0:	ldr	x11, [sp, #104]
  4116a4:	ldr	x8, [sp, #64]
  4116a8:	cmp	x9, x11
  4116ac:	csel	x9, x11, x9, gt
  4116b0:	cmp	x8, x9
  4116b4:	b.ge	411704 <_obstack_memory_used@@Base+0x478>  // b.tcont
  4116b8:	ldr	x11, [sp, #56]
  4116bc:	ldr	x12, [sp, #16]
  4116c0:	ldr	x13, [sp, #136]
  4116c4:	add	x11, x11, x8
  4116c8:	ldrb	w11, [x12, x11]
  4116cc:	ldrb	w11, [x13, x11]
  4116d0:	strb	w11, [x10, x8]
  4116d4:	add	x8, x8, #0x1
  4116d8:	cmp	x8, x9
  4116dc:	b.ge	411704 <_obstack_memory_used@@Base+0x478>  // b.tcont
  4116e0:	ldr	x10, [sp, #16]
  4116e4:	ldr	x11, [sp, #56]
  4116e8:	ldr	x12, [sp, #136]
  4116ec:	add	x10, x10, x11
  4116f0:	ldrb	w10, [x10, x8]
  4116f4:	ldr	x11, [sp, #24]
  4116f8:	ldrb	w10, [x12, x10]
  4116fc:	strb	w10, [x11, x8]
  411700:	b	4116d4 <_obstack_memory_used@@Base+0x448>
  411704:	stp	x8, x8, [sp, #64]
  411708:	b	411710 <_obstack_memory_used@@Base+0x484>
  41170c:	stp	x9, x9, [sp, #64]
  411710:	stur	wzr, [x29, #-52]
  411714:	ldr	x22, [x19]
  411718:	orr	x2, x21, #0x800000
  41171c:	sub	x0, x29, #0x30
  411720:	add	x1, sp, #0x10
  411724:	str	xzr, [x19, #48]
  411728:	str	x21, [x22, #216]
  41172c:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  411730:	ldr	x8, [sp, #88]
  411734:	sub	x2, x29, #0x30
  411738:	sub	x5, x29, #0x34
  41173c:	mov	x1, x19
  411740:	add	x8, x8, w0, sxtw
  411744:	add	x0, sp, #0x10
  411748:	mov	x3, x21
  41174c:	mov	x4, xzr
  411750:	str	x8, [sp, #88]
  411754:	bl	414d44 <_obstack_memory_used@@Base+0x3ab8>
  411758:	mov	x21, x0
  41175c:	cbnz	x0, 411768 <_obstack_memory_used@@Base+0x4dc>
  411760:	ldur	w8, [x29, #-52]
  411764:	cbnz	w8, 411e0c <_obstack_memory_used@@Base+0xb80>
  411768:	mov	w8, #0x2                   	// #2
  41176c:	sub	x3, x29, #0x20
  411770:	mov	x0, x22
  411774:	mov	x1, xzr
  411778:	mov	x2, xzr
  41177c:	stur	xzr, [x29, #-32]
  411780:	stur	w8, [x29, #-24]
  411784:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  411788:	mov	x23, x0
  41178c:	cbz	x21, 4117b0 <_obstack_memory_used@@Base+0x524>
  411790:	mov	w8, #0x10                  	// #16
  411794:	sub	x3, x29, #0x20
  411798:	mov	x0, x22
  41179c:	mov	x1, x21
  4117a0:	mov	x2, x23
  4117a4:	stur	xzr, [x29, #-32]
  4117a8:	stur	w8, [x29, #-24]
  4117ac:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4117b0:	cbz	x23, 411e04 <_obstack_memory_used@@Base+0xb78>
  4117b4:	cbz	x0, 411e04 <_obstack_memory_used@@Base+0xb78>
  4117b8:	str	x0, [x20, #104]
  4117bc:	ldr	x21, [x19]
  4117c0:	ldr	x8, [x21, #8]
  4117c4:	lsl	x0, x8, #3
  4117c8:	bl	4028f0 <malloc@plt>
  4117cc:	ldr	x8, [x21, #8]
  4117d0:	str	x0, [x21, #24]
  4117d4:	lsl	x0, x8, #3
  4117d8:	bl	4028f0 <malloc@plt>
  4117dc:	ldr	x8, [x21, #8]
  4117e0:	str	x0, [x21, #32]
  4117e4:	add	x8, x8, x8, lsl #1
  4117e8:	lsl	x0, x8, #3
  4117ec:	bl	4028f0 <malloc@plt>
  4117f0:	ldr	x8, [x21, #8]
  4117f4:	str	x0, [x21, #40]
  4117f8:	add	x8, x8, x8, lsl #1
  4117fc:	lsl	x0, x8, #3
  411800:	bl	4028f0 <malloc@plt>
  411804:	ldr	x9, [x21, #24]
  411808:	str	x0, [x21, #48]
  41180c:	cbz	x9, 411d44 <_obstack_memory_used@@Base+0xab8>
  411810:	ldr	x9, [x21, #32]
  411814:	cbz	x9, 411d44 <_obstack_memory_used@@Base+0xab8>
  411818:	mov	x8, x0
  41181c:	mov	w0, #0xc                   	// #12
  411820:	cbz	x8, 411d48 <_obstack_memory_used@@Base+0xabc>
  411824:	ldr	x8, [x21, #40]
  411828:	cbz	x8, 411d48 <_obstack_memory_used@@Base+0xabc>
  41182c:	ldr	x22, [x19, #48]
  411830:	lsl	x0, x22, #3
  411834:	bl	4028f0 <malloc@plt>
  411838:	str	x0, [x21, #224]
  41183c:	cbz	x0, 4118b0 <_obstack_memory_used@@Base+0x624>
  411840:	cbz	x22, 411858 <_obstack_memory_used@@Base+0x5cc>
  411844:	mov	x8, xzr
  411848:	str	x8, [x0, x8, lsl #3]
  41184c:	add	x8, x8, #0x1
  411850:	cmp	x22, x8
  411854:	b.ne	411848 <_obstack_memory_used@@Base+0x5bc>  // b.any
  411858:	ldr	x0, [x21, #104]
  41185c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x5d74>
  411860:	add	x1, x1, #0x93c
  411864:	mov	x2, x21
  411868:	bl	4178b8 <_obstack_memory_used@@Base+0x662c>
  41186c:	ldr	x8, [x19, #48]
  411870:	cbz	x8, 411898 <_obstack_memory_used@@Base+0x60c>
  411874:	ldr	x0, [x21, #224]
  411878:	mov	x9, xzr
  41187c:	ldr	x10, [x0, x9, lsl #3]
  411880:	cmp	x9, x10
  411884:	b.ne	4118a0 <_obstack_memory_used@@Base+0x614>  // b.any
  411888:	add	x9, x9, #0x1
  41188c:	cmp	x8, x9
  411890:	b.ne	41187c <_obstack_memory_used@@Base+0x5f0>  // b.any
  411894:	b	4118a8 <_obstack_memory_used@@Base+0x61c>
  411898:	ldr	x0, [x21, #224]
  41189c:	b	4118a8 <_obstack_memory_used@@Base+0x61c>
  4118a0:	cmp	x8, x9
  4118a4:	b.ne	4118b0 <_obstack_memory_used@@Base+0x624>  // b.any
  4118a8:	bl	402be0 <free@plt>
  4118ac:	str	xzr, [x21, #224]
  4118b0:	ldr	x0, [x21, #104]
  4118b4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x5d74>
  4118b8:	add	x1, x1, #0x9dc
  4118bc:	mov	x2, x19
  4118c0:	bl	4156a0 <_obstack_memory_used@@Base+0x4414>
  4118c4:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  4118c8:	ldr	x0, [x21, #104]
  4118cc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x5d74>
  4118d0:	add	x1, x1, #0xa64
  4118d4:	mov	x2, x21
  4118d8:	bl	4156a0 <_obstack_memory_used@@Base+0x4414>
  4118dc:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  4118e0:	ldr	x0, [x21, #104]
  4118e4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x5d74>
  4118e8:	add	x1, x1, #0xb00
  4118ec:	mov	x2, x21
  4118f0:	bl	4178b8 <_obstack_memory_used@@Base+0x662c>
  4118f4:	ldr	x0, [x21, #104]
  4118f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x5d74>
  4118fc:	add	x1, x1, #0xb58
  411900:	mov	x2, x21
  411904:	bl	4178b8 <_obstack_memory_used@@Base+0x662c>
  411908:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  41190c:	mov	w24, wzr
  411910:	mov	x22, xzr
  411914:	mov	w23, #0x18                  	// #24
  411918:	ldr	x8, [x21, #48]
  41191c:	madd	x8, x22, x23, x8
  411920:	ldr	x8, [x8, #8]
  411924:	cbnz	x8, 41195c <_obstack_memory_used@@Base+0x6d0>
  411928:	sub	x0, x29, #0x20
  41192c:	mov	w3, #0x1                   	// #1
  411930:	mov	x1, x21
  411934:	mov	x2, x22
  411938:	bl	418020 <_obstack_memory_used@@Base+0x6d94>
  41193c:	cbnz	w0, 411d48 <_obstack_memory_used@@Base+0xabc>
  411940:	ldr	x8, [x21, #48]
  411944:	madd	x8, x22, x23, x8
  411948:	ldr	x8, [x8, #8]
  41194c:	cbnz	x8, 41195c <_obstack_memory_used@@Base+0x6d0>
  411950:	ldur	x0, [x29, #-16]
  411954:	bl	402be0 <free@plt>
  411958:	mov	w24, #0x1                   	// #1
  41195c:	ldr	x9, [x21, #16]
  411960:	add	x8, x22, #0x1
  411964:	mov	w10, w24
  411968:	cmp	x8, x9
  41196c:	cset	w11, ne  // ne = any
  411970:	csinc	x22, xzr, x22, eq  // eq = none
  411974:	and	w24, w24, w11
  411978:	tbnz	w10, #0, 411918 <_obstack_memory_used@@Base+0x68c>
  41197c:	cmp	x8, x9
  411980:	b.ne	411918 <_obstack_memory_used@@Base+0x68c>  // b.any
  411984:	ldrb	w9, [x19, #56]
  411988:	tbnz	w9, #4, 41199c <_obstack_memory_used@@Base+0x710>
  41198c:	ldr	x9, [x19, #48]
  411990:	cbz	x9, 41199c <_obstack_memory_used@@Base+0x710>
  411994:	ldrb	w9, [x21, #176]
  411998:	tbnz	w9, #0, 4119a4 <_obstack_memory_used@@Base+0x718>
  41199c:	ldr	x9, [x21, #152]
  4119a0:	cbz	x9, 411a68 <_obstack_memory_used@@Base+0x7dc>
  4119a4:	add	x8, x8, x8, lsl #1
  4119a8:	lsl	x0, x8, #3
  4119ac:	bl	4028f0 <malloc@plt>
  4119b0:	str	x0, [x21, #56]
  4119b4:	cbz	x0, 411d44 <_obstack_memory_used@@Base+0xab8>
  4119b8:	ldr	x8, [x21, #16]
  4119bc:	cbz	x8, 411a68 <_obstack_memory_used@@Base+0x7dc>
  4119c0:	stp	xzr, xzr, [x0]
  4119c4:	str	xzr, [x0, #16]
  4119c8:	ldr	x8, [x21, #16]
  4119cc:	cmp	x8, #0x2
  4119d0:	b.cc	411a00 <_obstack_memory_used@@Base+0x774>  // b.lo, b.ul, b.last
  4119d4:	mov	w9, #0x1                   	// #1
  4119d8:	mov	w10, #0x18                  	// #24
  4119dc:	ldr	x8, [x21, #56]
  4119e0:	add	x9, x9, #0x1
  4119e4:	add	x8, x8, x10
  4119e8:	stp	xzr, xzr, [x8]
  4119ec:	str	xzr, [x8, #16]
  4119f0:	ldr	x8, [x21, #16]
  4119f4:	add	x10, x10, #0x18
  4119f8:	cmp	x9, x8
  4119fc:	b.cc	4119dc <_obstack_memory_used@@Base+0x750>  // b.lo, b.ul, b.last
  411a00:	cbz	x8, 411a68 <_obstack_memory_used@@Base+0x7dc>
  411a04:	ldr	x9, [x21, #48]
  411a08:	mov	x22, xzr
  411a0c:	mov	w23, #0x18                  	// #24
  411a10:	madd	x10, x22, x23, x9
  411a14:	ldr	x11, [x10, #8]
  411a18:	cmp	x11, #0x1
  411a1c:	b.lt	411a5c <_obstack_memory_used@@Base+0x7d0>  // b.tstop
  411a20:	ldr	x24, [x10, #16]
  411a24:	mov	x26, xzr
  411a28:	ldr	x8, [x21, #56]
  411a2c:	ldr	x9, [x24, x26, lsl #3]
  411a30:	mov	x1, x22
  411a34:	madd	x0, x9, x23, x8
  411a38:	bl	4187bc <_obstack_memory_used@@Base+0x7530>
  411a3c:	tbz	w0, #0, 411d44 <_obstack_memory_used@@Base+0xab8>
  411a40:	ldr	x9, [x21, #48]
  411a44:	add	x26, x26, #0x1
  411a48:	madd	x8, x22, x23, x9
  411a4c:	ldr	x8, [x8, #8]
  411a50:	cmp	x26, x8
  411a54:	b.lt	411a28 <_obstack_memory_used@@Base+0x79c>  // b.tstop
  411a58:	ldr	x8, [x21, #16]
  411a5c:	add	x22, x22, #0x1
  411a60:	cmp	x22, x8
  411a64:	b.cc	411a10 <_obstack_memory_used@@Base+0x784>  // b.lo, b.ul, b.last
  411a68:	stur	wzr, [x29, #-52]
  411a6c:	cbnz	x25, 411b64 <_obstack_memory_used@@Base+0x8d8>
  411a70:	ldrb	w9, [x20, #176]
  411a74:	tbz	w9, #2, 411b64 <_obstack_memory_used@@Base+0x8d8>
  411a78:	ldr	x8, [x19, #40]
  411a7c:	cbnz	x8, 411b64 <_obstack_memory_used@@Base+0x8d8>
  411a80:	ldr	x11, [x20, #16]
  411a84:	cbz	x11, 411b30 <_obstack_memory_used@@Base+0x8a4>
  411a88:	ldr	x10, [x20]
  411a8c:	adrp	x13, 41e000 <_obstack_memory_used@@Base+0xcd74>
  411a90:	mov	w8, wzr
  411a94:	mov	w12, wzr
  411a98:	add	x13, x13, #0xf78
  411a9c:	mov	w14, #0x1                   	// #1
  411aa0:	mov	w15, #0x8b                  	// #139
  411aa4:	mov	x16, x10
  411aa8:	ldrb	w17, [x16, #8]
  411aac:	sub	w17, w17, #0x1
  411ab0:	cmp	w17, #0xb
  411ab4:	b.hi	411e1c <_obstack_memory_used@@Base+0xb90>  // b.pmore
  411ab8:	adr	x18, 411ac8 <_obstack_memory_used@@Base+0x83c>
  411abc:	ldrb	w0, [x13, x17]
  411ac0:	add	x18, x18, x0, lsl #2
  411ac4:	br	x18
  411ac8:	subs	x11, x11, #0x1
  411acc:	add	x16, x16, #0x10
  411ad0:	b.ne	411aa8 <_obstack_memory_used@@Base+0x81c>  // b.any
  411ad4:	b	411d70 <_obstack_memory_used@@Base+0xae4>
  411ad8:	ldr	x17, [x16]
  411adc:	ldr	x18, [x17, #16]
  411ae0:	cbnz	x18, 411b64 <_obstack_memory_used@@Base+0x8d8>
  411ae4:	ldr	x17, [x17, #24]
  411ae8:	cbz	x17, 411ac8 <_obstack_memory_used@@Base+0x83c>
  411aec:	b	411b64 <_obstack_memory_used@@Base+0x8d8>
  411af0:	ldr	w17, [x16]
  411af4:	sub	w17, w17, #0x10
  411af8:	ror	w17, w17, #4
  411afc:	cmp	w17, #0x7
  411b00:	b.hi	411b64 <_obstack_memory_used@@Base+0x8d8>  // b.pmore
  411b04:	lsl	w17, w14, w17
  411b08:	tst	w17, w15
  411b0c:	b.ne	411ac8 <_obstack_memory_used@@Base+0x83c>  // b.any
  411b10:	b	411b64 <_obstack_memory_used@@Base+0x8d8>
  411b14:	ldrsb	w17, [x16]
  411b18:	cmp	w17, #0x0
  411b1c:	cset	w17, lt  // lt = tstop
  411b20:	orr	w12, w12, w17
  411b24:	b	411ac8 <_obstack_memory_used@@Base+0x83c>
  411b28:	mov	w8, #0x1                   	// #1
  411b2c:	b	411ac8 <_obstack_memory_used@@Base+0x83c>
  411b30:	mov	w8, wzr
  411b34:	ldr	x10, [x20, #152]
  411b38:	mov	w12, #0x2                   	// #2
  411b3c:	and	w9, w9, #0xfffffff9
  411b40:	mov	w11, #0x1                   	// #1
  411b44:	cmp	x10, #0x0
  411b48:	cset	w10, gt
  411b4c:	orr	w8, w8, w10
  411b50:	tst	w8, #0x1
  411b54:	csel	w8, w12, wzr, ne  // ne = any
  411b58:	orr	w8, w8, w9
  411b5c:	str	w11, [x20, #180]
  411b60:	strb	w8, [x20, #176]
  411b64:	ldr	x8, [x20, #104]
  411b68:	ldr	x9, [x20, #48]
  411b6c:	mov	w10, #0x18                  	// #24
  411b70:	sub	x0, x29, #0x20
  411b74:	ldr	x8, [x8, #24]
  411b78:	ldr	x8, [x8, #56]
  411b7c:	madd	x1, x8, x10, x9
  411b80:	str	x8, [x20, #144]
  411b84:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  411b88:	stur	w0, [x29, #-48]
  411b8c:	cbnz	w0, 411d00 <_obstack_memory_used@@Base+0xa74>
  411b90:	ldr	x8, [x20, #152]
  411b94:	cmp	x8, #0x1
  411b98:	b.lt	411c68 <_obstack_memory_used@@Base+0x9dc>  // b.tstop
  411b9c:	ldur	x23, [x29, #-24]
  411ba0:	cmp	x23, #0x1
  411ba4:	b.lt	411c68 <_obstack_memory_used@@Base+0x9dc>  // b.tstop
  411ba8:	mov	x24, xzr
  411bac:	mov	w22, #0x18                  	// #24
  411bb0:	ldur	x9, [x29, #-16]
  411bb4:	ldr	x10, [x20]
  411bb8:	ldr	x8, [x9, x24, lsl #3]
  411bbc:	add	x11, x10, x8, lsl #4
  411bc0:	ldrb	w11, [x11, #8]
  411bc4:	cmp	w11, #0x4
  411bc8:	b.ne	411c5c <_obstack_memory_used@@Base+0x9d0>  // b.any
  411bcc:	cmp	x23, #0x1
  411bd0:	b.lt	411c14 <_obstack_memory_used@@Base+0x988>  // b.tstop
  411bd4:	mov	x11, xzr
  411bd8:	add	x12, x10, x8, lsl #4
  411bdc:	ldr	x13, [x9, x11, lsl #3]
  411be0:	add	x14, x10, x13, lsl #4
  411be4:	ldrb	w14, [x14, #8]
  411be8:	cmp	w14, #0x9
  411bec:	b.ne	411c04 <_obstack_memory_used@@Base+0x978>  // b.any
  411bf0:	lsl	x13, x13, #4
  411bf4:	ldr	x13, [x10, x13]
  411bf8:	ldr	x14, [x12]
  411bfc:	cmp	x13, x14
  411c00:	b.eq	411c18 <_obstack_memory_used@@Base+0x98c>  // b.none
  411c04:	add	x11, x11, #0x1
  411c08:	cmp	x23, x11
  411c0c:	b.ne	411bdc <_obstack_memory_used@@Base+0x950>  // b.any
  411c10:	b	411c5c <_obstack_memory_used@@Base+0x9d0>
  411c14:	mov	x11, xzr
  411c18:	cmp	x11, x23
  411c1c:	b.eq	411c5c <_obstack_memory_used@@Base+0x9d0>  // b.none
  411c20:	ldr	x9, [x20, #40]
  411c24:	sub	x0, x29, #0x20
  411c28:	madd	x8, x8, x22, x9
  411c2c:	ldr	x8, [x8, #16]
  411c30:	ldr	x21, [x8]
  411c34:	mov	x1, x21
  411c38:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  411c3c:	cbnz	x0, 411c5c <_obstack_memory_used@@Base+0x9d0>
  411c40:	ldr	x8, [x20, #48]
  411c44:	sub	x0, x29, #0x20
  411c48:	madd	x1, x21, x22, x8
  411c4c:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  411c50:	cbnz	w0, 411d00 <_obstack_memory_used@@Base+0xa74>
  411c54:	ldur	x23, [x29, #-24]
  411c58:	mov	x24, xzr
  411c5c:	add	x24, x24, #0x1
  411c60:	cmp	x24, x23
  411c64:	b.lt	411bb0 <_obstack_memory_used@@Base+0x924>  // b.tstop
  411c68:	sub	x0, x29, #0x30
  411c6c:	sub	x2, x29, #0x20
  411c70:	mov	x1, x20
  411c74:	mov	w3, wzr
  411c78:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  411c7c:	str	x0, [x20, #72]
  411c80:	cbz	x0, 411dfc <_obstack_memory_used@@Base+0xb70>
  411c84:	ldrsb	w8, [x0, #104]
  411c88:	tbnz	w8, #31, 411c98 <_obstack_memory_used@@Base+0xa0c>
  411c8c:	stp	x0, x0, [x20, #88]
  411c90:	str	x0, [x20, #80]
  411c94:	b	411cf4 <_obstack_memory_used@@Base+0xa68>
  411c98:	sub	x0, x29, #0x30
  411c9c:	sub	x2, x29, #0x20
  411ca0:	mov	w3, #0x1                   	// #1
  411ca4:	mov	x1, x20
  411ca8:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  411cac:	str	x0, [x20, #80]
  411cb0:	sub	x0, x29, #0x30
  411cb4:	sub	x2, x29, #0x20
  411cb8:	mov	w3, #0x2                   	// #2
  411cbc:	mov	x1, x20
  411cc0:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  411cc4:	str	x0, [x20, #88]
  411cc8:	sub	x0, x29, #0x30
  411ccc:	sub	x2, x29, #0x20
  411cd0:	mov	w3, #0x6                   	// #6
  411cd4:	mov	x1, x20
  411cd8:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  411cdc:	ldr	x8, [x20, #80]
  411ce0:	str	x0, [x20, #96]
  411ce4:	cbz	x8, 411dfc <_obstack_memory_used@@Base+0xb70>
  411ce8:	cbz	x0, 411dfc <_obstack_memory_used@@Base+0xb70>
  411cec:	ldr	x8, [x20, #88]
  411cf0:	cbz	x8, 411dfc <_obstack_memory_used@@Base+0xb70>
  411cf4:	ldur	x0, [x29, #-16]
  411cf8:	bl	402be0 <free@plt>
  411cfc:	mov	w0, wzr
  411d00:	stur	w0, [x29, #-52]
  411d04:	mov	x0, x19
  411d08:	bl	414448 <_obstack_memory_used@@Base+0x31bc>
  411d0c:	add	x0, sp, #0x10
  411d10:	bl	414494 <_obstack_memory_used@@Base+0x3208>
  411d14:	ldur	w8, [x29, #-52]
  411d18:	cbnz	w8, 411d5c <_obstack_memory_used@@Base+0xad0>
  411d1c:	mov	w21, wzr
  411d20:	mov	w0, w21
  411d24:	ldp	x20, x19, [sp, #304]
  411d28:	ldp	x22, x21, [sp, #288]
  411d2c:	ldp	x24, x23, [sp, #272]
  411d30:	ldp	x26, x25, [sp, #256]
  411d34:	ldp	x28, x27, [sp, #240]
  411d38:	ldp	x29, x30, [sp, #224]
  411d3c:	add	sp, sp, #0x140
  411d40:	ret
  411d44:	mov	w0, #0xc                   	// #12
  411d48:	stur	w0, [x29, #-52]
  411d4c:	mov	x0, x19
  411d50:	bl	414448 <_obstack_memory_used@@Base+0x31bc>
  411d54:	add	x0, sp, #0x10
  411d58:	bl	414494 <_obstack_memory_used@@Base+0x3208>
  411d5c:	mov	x0, x20
  411d60:	bl	4123f0 <_obstack_memory_used@@Base+0x1164>
  411d64:	stp	xzr, xzr, [x19]
  411d68:	ldur	w21, [x29, #-52]
  411d6c:	b	411d20 <_obstack_memory_used@@Base+0xa94>
  411d70:	orr	w11, w12, w8
  411d74:	tbz	w11, #0, 411b34 <_obstack_memory_used@@Base+0x8a8>
  411d78:	mov	x9, xzr
  411d7c:	mov	w11, #0x1                   	// #1
  411d80:	add	x12, x10, x9
  411d84:	ldr	w13, [x12, #8]
  411d88:	and	w14, w13, #0xff
  411d8c:	cmp	w14, #0x5
  411d90:	b.eq	411dac <_obstack_memory_used@@Base+0xb20>  // b.none
  411d94:	cmp	w14, #0x1
  411d98:	b.ne	411db8 <_obstack_memory_used@@Base+0xb2c>  // b.any
  411d9c:	ldrsb	w10, [x10, x9]
  411da0:	tbz	w10, #31, 411db8 <_obstack_memory_used@@Base+0xb2c>
  411da4:	and	w10, w13, #0xffdfffff
  411da8:	b	411db4 <_obstack_memory_used@@Base+0xb28>
  411dac:	and	w10, w13, #0xffffff00
  411db0:	orr	w10, w10, #0x7
  411db4:	str	w10, [x12, #8]
  411db8:	ldr	x10, [x20, #16]
  411dbc:	cmp	x11, x10
  411dc0:	b.cs	411dd4 <_obstack_memory_used@@Base+0xb48>  // b.hs, b.nlast
  411dc4:	ldr	x10, [x20]
  411dc8:	add	x9, x9, #0x10
  411dcc:	add	x11, x11, #0x1
  411dd0:	b	411d80 <_obstack_memory_used@@Base+0xaf4>
  411dd4:	ldrb	w9, [x20, #176]
  411dd8:	b	411b34 <_obstack_memory_used@@Base+0x8a8>
  411ddc:	mov	w1, #0xe8                  	// #232
  411de0:	mov	x0, x20
  411de4:	bl	402a50 <realloc@plt>
  411de8:	cbz	x0, 411e14 <_obstack_memory_used@@Base+0xb88>
  411dec:	mov	x20, x0
  411df0:	mov	w8, #0xe8                  	// #232
  411df4:	stp	x0, x8, [x19]
  411df8:	b	4113d0 <_obstack_memory_used@@Base+0x144>
  411dfc:	ldur	w0, [x29, #-48]
  411e00:	b	411d00 <_obstack_memory_used@@Base+0xa74>
  411e04:	mov	w8, #0xc                   	// #12
  411e08:	stur	w8, [x29, #-52]
  411e0c:	str	xzr, [x20, #104]
  411e10:	b	411d4c <_obstack_memory_used@@Base+0xac0>
  411e14:	mov	w21, #0xc                   	// #12
  411e18:	b	411d20 <_obstack_memory_used@@Base+0xa94>
  411e1c:	bl	402b10 <abort@plt>
  411e20:	adrp	x9, 430000 <_obstack_memory_used@@Base+0x1ed74>
  411e24:	ldr	x8, [x9, #3584]
  411e28:	str	x0, [x9, #3584]
  411e2c:	mov	x0, x8
  411e30:	ret
  411e34:	stp	x29, x30, [sp, #-48]!
  411e38:	stp	x20, x19, [sp, #32]
  411e3c:	ldr	x20, [x0, #32]
  411e40:	str	x21, [sp, #16]
  411e44:	ldr	x21, [x0]
  411e48:	mov	x19, x0
  411e4c:	mov	w2, #0x100                 	// #256
  411e50:	mov	x0, x20
  411e54:	mov	w1, wzr
  411e58:	mov	x29, sp
  411e5c:	bl	4029d0 <memset@plt>
  411e60:	ldr	x1, [x21, #72]
  411e64:	mov	x0, x19
  411e68:	mov	x2, x20
  411e6c:	bl	411ee0 <_obstack_memory_used@@Base+0xc54>
  411e70:	ldp	x8, x1, [x21, #72]
  411e74:	cmp	x8, x1
  411e78:	b.eq	411e8c <_obstack_memory_used@@Base+0xc00>  // b.none
  411e7c:	mov	x0, x19
  411e80:	mov	x2, x20
  411e84:	bl	411ee0 <_obstack_memory_used@@Base+0xc54>
  411e88:	ldr	x8, [x21, #72]
  411e8c:	ldr	x1, [x21, #88]
  411e90:	cmp	x8, x1
  411e94:	b.eq	411ea8 <_obstack_memory_used@@Base+0xc1c>  // b.none
  411e98:	mov	x0, x19
  411e9c:	mov	x2, x20
  411ea0:	bl	411ee0 <_obstack_memory_used@@Base+0xc54>
  411ea4:	ldr	x8, [x21, #72]
  411ea8:	ldr	x1, [x21, #96]
  411eac:	cmp	x8, x1
  411eb0:	b.eq	411ec0 <_obstack_memory_used@@Base+0xc34>  // b.none
  411eb4:	mov	x0, x19
  411eb8:	mov	x2, x20
  411ebc:	bl	411ee0 <_obstack_memory_used@@Base+0xc54>
  411ec0:	ldrb	w8, [x19, #56]
  411ec4:	ldr	x21, [sp, #16]
  411ec8:	mov	w0, wzr
  411ecc:	orr	w8, w8, #0x8
  411ed0:	strb	w8, [x19, #56]
  411ed4:	ldp	x20, x19, [sp, #32]
  411ed8:	ldp	x29, x30, [sp], #48
  411edc:	ret
  411ee0:	sub	sp, sp, #0x1a0
  411ee4:	stp	x29, x30, [sp, #320]
  411ee8:	stp	x28, x27, [sp, #336]
  411eec:	stp	x26, x25, [sp, #352]
  411ef0:	stp	x24, x23, [sp, #368]
  411ef4:	stp	x22, x21, [sp, #384]
  411ef8:	stp	x20, x19, [sp, #400]
  411efc:	ldr	x23, [x0]
  411f00:	mov	x20, x2
  411f04:	add	x29, sp, #0x140
  411f08:	str	x0, [sp, #32]
  411f0c:	ldr	w8, [x23, #180]
  411f10:	cmp	w8, #0x1
  411f14:	b.ne	411f24 <_obstack_memory_used@@Base+0xc98>  // b.any
  411f18:	ldrb	w8, [x0, #26]
  411f1c:	ubfx	w24, w8, #6, #1
  411f20:	b	411f28 <_obstack_memory_used@@Base+0xc9c>
  411f24:	mov	w24, wzr
  411f28:	ldr	x8, [x1, #16]
  411f2c:	cmp	x8, #0x1
  411f30:	b.lt	412200 <_obstack_memory_used@@Base+0xf74>  // b.tstop
  411f34:	add	x8, sp, #0x28
  411f38:	mov	x9, xzr
  411f3c:	mov	w28, #0x1                   	// #1
  411f40:	orr	x8, x8, #0x1
  411f44:	stp	x8, x1, [sp, #8]
  411f48:	ldr	x8, [x1, #24]
  411f4c:	str	x9, [sp, #24]
  411f50:	ldr	x21, [x8, x9, lsl #3]
  411f54:	ldr	x8, [x23]
  411f58:	add	x9, x8, x21, lsl #4
  411f5c:	ldrb	w19, [x9, #8]
  411f60:	sub	w10, w19, #0x1
  411f64:	cmp	w10, #0x6
  411f68:	b.hi	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.pmore
  411f6c:	adrp	x13, 41e000 <_obstack_memory_used@@Base+0xcd74>
  411f70:	add	x13, x13, #0xf84
  411f74:	adr	x11, 411f88 <_obstack_memory_used@@Base+0xcfc>
  411f78:	ldrb	w12, [x13, x10]
  411f7c:	add	x11, x11, x12, lsl #2
  411f80:	lsl	x22, x21, #4
  411f84:	br	x11
  411f88:	ldrb	w0, [x9]
  411f8c:	strb	w28, [x20, x0]
  411f90:	cbz	w24, 411f9c <_obstack_memory_used@@Base+0xd10>
  411f94:	bl	402db0 <tolower@plt>
  411f98:	strb	w28, [x20, w0, sxtw]
  411f9c:	ldr	x8, [sp, #32]
  411fa0:	ldrb	w8, [x8, #26]
  411fa4:	tbz	w8, #6, 4121c0 <_obstack_memory_used@@Base+0xf34>
  411fa8:	ldr	w8, [x23, #180]
  411fac:	cmp	w8, #0x2
  411fb0:	b.lt	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.tstop
  411fb4:	ldr	x8, [x23]
  411fb8:	add	x9, x21, #0x1
  411fbc:	mov	w13, #0x1                   	// #1
  411fc0:	movk	w13, #0x20, lsl #16
  411fc4:	ldrb	w8, [x8, x22]
  411fc8:	strb	w8, [sp, #40]
  411fcc:	ldr	x8, [x23, #16]
  411fd0:	cmp	x9, x8
  411fd4:	ldr	x8, [sp, #8]
  411fd8:	b.cs	412018 <_obstack_memory_used@@Base+0xd8c>  // b.hs, b.nlast
  411fdc:	ldr	x8, [sp, #8]
  411fe0:	ldr	x10, [x23]
  411fe4:	add	w12, w13, #0xfe
  411fe8:	add	x10, x10, x22
  411fec:	ldr	w11, [x10, #24]
  411ff0:	and	w11, w11, w12
  411ff4:	cmp	w11, w13
  411ff8:	b.ne	412018 <_obstack_memory_used@@Base+0xd8c>  // b.any
  411ffc:	ldrb	w10, [x10, #16]
  412000:	add	x9, x9, #0x1
  412004:	add	x22, x22, #0x10
  412008:	strb	w10, [x8], #1
  41200c:	ldr	x10, [x23, #16]
  412010:	cmp	x9, x10
  412014:	b.cc	411fe0 <_obstack_memory_used@@Base+0xd54>  // b.lo, b.ul, b.last
  412018:	add	x9, sp, #0x28
  41201c:	sub	x22, x8, x9
  412020:	sub	x0, x29, #0xc
  412024:	add	x1, sp, #0x28
  412028:	sub	x3, x29, #0x18
  41202c:	mov	x2, x22
  412030:	stur	xzr, [x29, #-24]
  412034:	bl	410f04 <wcrtomb@plt+0xe0d4>
  412038:	cmp	x0, x22
  41203c:	b.ne	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.any
  412040:	ldur	w0, [x29, #-12]
  412044:	bl	402df0 <towlower@plt>
  412048:	mov	w1, w0
  41204c:	add	x0, sp, #0x28
  412050:	sub	x2, x29, #0x18
  412054:	bl	402e30 <wcrtomb@plt>
  412058:	cmn	x0, #0x1
  41205c:	b.eq	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.none
  412060:	ldrb	w8, [sp, #40]
  412064:	strb	w28, [x20, x8]
  412068:	b	4121c0 <_obstack_memory_used@@Base+0xf34>
  41206c:	mov	x27, xzr
  412070:	mov	x26, xzr
  412074:	ldr	x8, [x8, x22]
  412078:	mov	x21, xzr
  41207c:	add	x25, x20, w26, sxtw
  412080:	ldr	x19, [x8, x27, lsl #3]
  412084:	lsr	x8, x19, x21
  412088:	tbz	w8, #0, 4120a0 <_obstack_memory_used@@Base+0xe14>
  41208c:	strb	w28, [x25, x21]
  412090:	cbz	w24, 4120a0 <_obstack_memory_used@@Base+0xe14>
  412094:	add	w0, w26, w21
  412098:	bl	402db0 <tolower@plt>
  41209c:	strb	w28, [x20, w0, sxtw]
  4120a0:	add	x21, x21, #0x1
  4120a4:	cmp	x21, #0x40
  4120a8:	b.ne	412084 <_obstack_memory_used@@Base+0xdf8>  // b.any
  4120ac:	add	x27, x27, #0x1
  4120b0:	cmp	x27, #0x4
  4120b4:	b.eq	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.none
  4120b8:	ldr	x8, [x23]
  4120bc:	add	x26, x21, w26, sxtw
  4120c0:	b	412074 <_obstack_memory_used@@Base+0xde8>
  4120c4:	ldr	w8, [x23, #180]
  4120c8:	ldr	x22, [x9]
  4120cc:	cmp	w8, #0x2
  4120d0:	b.lt	412128 <_obstack_memory_used@@Base+0xe9c>  // b.tstop
  4120d4:	ldr	x8, [x22, #72]
  4120d8:	cbnz	x8, 4120ec <_obstack_memory_used@@Base+0xe60>
  4120dc:	ldrb	w8, [x22, #32]
  4120e0:	tbnz	w8, #0, 4120ec <_obstack_memory_used@@Base+0xe60>
  4120e4:	ldr	x8, [x22, #64]
  4120e8:	cbz	x8, 412128 <_obstack_memory_used@@Base+0xe9c>
  4120ec:	sturb	wzr, [x29, #-24]
  4120f0:	sub	x1, x29, #0x18
  4120f4:	add	x3, sp, #0x28
  4120f8:	mov	w2, #0x1                   	// #1
  4120fc:	mov	x0, xzr
  412100:	str	xzr, [sp, #40]
  412104:	bl	410f04 <wcrtomb@plt+0xe0d4>
  412108:	ldurb	w8, [x29, #-24]
  41210c:	cmn	x0, #0x2
  412110:	b.ne	412118 <_obstack_memory_used@@Base+0xe8c>  // b.any
  412114:	strb	w28, [x20, x8]
  412118:	add	w8, w8, #0x1
  41211c:	sturb	w8, [x29, #-24]
  412120:	tbz	w8, #8, 4120f0 <_obstack_memory_used@@Base+0xe64>
  412124:	b	4121c0 <_obstack_memory_used@@Base+0xf34>
  412128:	ldr	x8, [x22, #40]
  41212c:	cmp	x8, #0x1
  412130:	b.lt	4121c0 <_obstack_memory_used@@Base+0xf34>  // b.tstop
  412134:	mov	x27, xzr
  412138:	stur	xzr, [x29, #-24]
  41213c:	ldr	x8, [x22]
  412140:	add	x0, sp, #0x28
  412144:	sub	x2, x29, #0x18
  412148:	ldr	w1, [x8, x27, lsl #2]
  41214c:	bl	402e30 <wcrtomb@plt>
  412150:	cmn	x0, #0x1
  412154:	b.eq	41216c <_obstack_memory_used@@Base+0xee0>  // b.none
  412158:	ldrb	w0, [sp, #40]
  41215c:	strb	w28, [x20, x0]
  412160:	cbz	w24, 41216c <_obstack_memory_used@@Base+0xee0>
  412164:	bl	402db0 <tolower@plt>
  412168:	strb	w28, [x20, w0, sxtw]
  41216c:	ldr	x8, [sp, #32]
  412170:	ldrb	w8, [x8, #26]
  412174:	tbz	w8, #6, 4121b0 <_obstack_memory_used@@Base+0xf24>
  412178:	ldr	w8, [x23, #180]
  41217c:	cmp	w8, #0x2
  412180:	b.lt	4121b0 <_obstack_memory_used@@Base+0xf24>  // b.tstop
  412184:	ldr	x8, [x22]
  412188:	ldr	w0, [x8, x27, lsl #2]
  41218c:	bl	402df0 <towlower@plt>
  412190:	mov	w1, w0
  412194:	add	x0, sp, #0x28
  412198:	sub	x2, x29, #0x18
  41219c:	bl	402e30 <wcrtomb@plt>
  4121a0:	cmn	x0, #0x1
  4121a4:	b.eq	4121b0 <_obstack_memory_used@@Base+0xf24>  // b.none
  4121a8:	ldrb	w8, [sp, #40]
  4121ac:	strb	w28, [x20, x8]
  4121b0:	ldr	x8, [x22, #40]
  4121b4:	add	x27, x27, #0x1
  4121b8:	cmp	x27, x8
  4121bc:	b.lt	412138 <_obstack_memory_used@@Base+0xeac>  // b.tstop
  4121c0:	ldp	x1, x9, [sp, #16]
  4121c4:	ldr	x8, [x1, #16]
  4121c8:	add	x9, x9, #0x1
  4121cc:	cmp	x9, x8
  4121d0:	b.lt	411f48 <_obstack_memory_used@@Base+0xcbc>  // b.tstop
  4121d4:	b	412200 <_obstack_memory_used@@Base+0xf74>
  4121d8:	mov	w1, #0x1                   	// #1
  4121dc:	mov	w2, #0x100                 	// #256
  4121e0:	mov	x0, x20
  4121e4:	bl	4029d0 <memset@plt>
  4121e8:	cmp	w19, #0x2
  4121ec:	b.ne	412200 <_obstack_memory_used@@Base+0xf74>  // b.any
  4121f0:	ldr	x9, [sp, #32]
  4121f4:	ldrb	w8, [x9, #56]
  4121f8:	orr	w8, w8, #0x1
  4121fc:	strb	w8, [x9, #56]
  412200:	ldp	x20, x19, [sp, #400]
  412204:	ldp	x22, x21, [sp, #384]
  412208:	ldp	x24, x23, [sp, #368]
  41220c:	ldp	x26, x25, [sp, #352]
  412210:	ldp	x28, x27, [sp, #336]
  412214:	ldp	x29, x30, [sp, #320]
  412218:	add	sp, sp, #0x1a0
  41221c:	ret
  412220:	stp	x29, x30, [sp, #-48]!
  412224:	stp	x20, x19, [sp, #32]
  412228:	mov	x19, x0
  41222c:	stp	xzr, xzr, [x0]
  412230:	str	xzr, [x0, #16]
  412234:	mov	w0, #0x100                 	// #256
  412238:	stp	x22, x21, [sp, #16]
  41223c:	mov	x29, sp
  412240:	mov	w21, w2
  412244:	mov	x20, x1
  412248:	bl	4028f0 <malloc@plt>
  41224c:	str	x0, [x19, #32]
  412250:	cbz	x0, 412304 <_obstack_memory_used@@Base+0x1078>
  412254:	mov	w8, #0xb2fc                	// #45820
  412258:	mov	w9, #0x2c6                 	// #710
  41225c:	tst	w21, #0x1
  412260:	movk	w8, #0x3, lsl #16
  412264:	movk	w9, #0x101, lsl #16
  412268:	lsl	w10, w21, #21
  41226c:	csel	x8, x9, x8, eq  // eq = none
  412270:	and	w9, w10, #0x400000
  412274:	orr	x22, x8, x9
  412278:	tbnz	w21, #2, 412288 <_obstack_memory_used@@Base+0xffc>
  41227c:	ldrb	w8, [x19, #56]
  412280:	and	w8, w8, #0x7f
  412284:	b	4122a0 <_obstack_memory_used@@Base+0x1014>
  412288:	ldrb	w8, [x19, #56]
  41228c:	mov	w9, #0xb2be                	// #45758
  412290:	movk	w9, #0x143, lsl #16
  412294:	and	x9, x22, x9
  412298:	orr	x22, x9, #0x100
  41229c:	orr	w8, w8, #0xffffff80
  4122a0:	lsl	w9, w21, #1
  4122a4:	strb	w8, [x19, #56]
  4122a8:	and	w8, w8, #0xffffffef
  4122ac:	and	w9, w9, #0x10
  4122b0:	orr	w8, w8, w9
  4122b4:	mov	x0, x20
  4122b8:	strb	w8, [x19, #56]
  4122bc:	str	xzr, [x19, #40]
  4122c0:	bl	402750 <strlen@plt>
  4122c4:	mov	x2, x0
  4122c8:	mov	x0, x19
  4122cc:	mov	x1, x20
  4122d0:	mov	x3, x22
  4122d4:	bl	411378 <_obstack_memory_used@@Base+0xec>
  4122d8:	cmp	w0, #0x10
  4122dc:	mov	w8, #0x8                   	// #8
  4122e0:	csel	w20, w8, w0, eq  // eq = none
  4122e4:	cbnz	w20, 41230c <_obstack_memory_used@@Base+0x1080>
  4122e8:	mov	x0, x19
  4122ec:	bl	411e34 <_obstack_memory_used@@Base+0xba8>
  4122f0:	mov	w0, w20
  4122f4:	ldp	x20, x19, [sp, #32]
  4122f8:	ldp	x22, x21, [sp, #16]
  4122fc:	ldp	x29, x30, [sp], #48
  412300:	ret
  412304:	mov	w20, #0xc                   	// #12
  412308:	b	4122f0 <_obstack_memory_used@@Base+0x1064>
  41230c:	ldr	x0, [x19, #32]
  412310:	bl	402be0 <free@plt>
  412314:	str	xzr, [x19, #32]
  412318:	b	4122f0 <_obstack_memory_used@@Base+0x1064>
  41231c:	stp	x29, x30, [sp, #-48]!
  412320:	cmp	w0, #0x11
  412324:	stp	x22, x21, [sp, #16]
  412328:	stp	x20, x19, [sp, #32]
  41232c:	mov	x29, sp
  412330:	b.cs	4123a8 <_obstack_memory_used@@Base+0x111c>  // b.hs, b.nlast
  412334:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xdd74>
  412338:	add	x8, x8, #0x1c0
  41233c:	ldr	x8, [x8, w0, uxtw #3]
  412340:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xdd74>
  412344:	add	x9, x9, #0x3f
  412348:	mov	x19, x2
  41234c:	add	x1, x9, x8
  412350:	mov	w2, #0x5                   	// #5
  412354:	mov	x0, xzr
  412358:	mov	x20, x3
  41235c:	bl	402d10 <dcgettext@plt>
  412360:	mov	x21, x0
  412364:	bl	402750 <strlen@plt>
  412368:	add	x22, x0, #0x1
  41236c:	cbz	x20, 412388 <_obstack_memory_used@@Base+0x10fc>
  412370:	cmp	x22, x20
  412374:	mov	x2, x22
  412378:	b.hi	41239c <_obstack_memory_used@@Base+0x1110>  // b.pmore
  41237c:	mov	x0, x19
  412380:	mov	x1, x21
  412384:	bl	402710 <memcpy@plt>
  412388:	mov	x0, x22
  41238c:	ldp	x20, x19, [sp, #32]
  412390:	ldp	x22, x21, [sp, #16]
  412394:	ldp	x29, x30, [sp], #48
  412398:	ret
  41239c:	sub	x2, x20, #0x1
  4123a0:	strb	wzr, [x19, x2]
  4123a4:	b	41237c <_obstack_memory_used@@Base+0x10f0>
  4123a8:	bl	402b10 <abort@plt>
  4123ac:	stp	x29, x30, [sp, #-32]!
  4123b0:	str	x19, [sp, #16]
  4123b4:	mov	x19, x0
  4123b8:	ldr	x0, [x0]
  4123bc:	mov	x29, sp
  4123c0:	cbz	x0, 4123c8 <_obstack_memory_used@@Base+0x113c>
  4123c4:	bl	4123f0 <_obstack_memory_used@@Base+0x1164>
  4123c8:	ldr	x0, [x19, #32]
  4123cc:	stp	xzr, xzr, [x19]
  4123d0:	bl	402be0 <free@plt>
  4123d4:	ldr	x0, [x19, #40]
  4123d8:	str	xzr, [x19, #32]
  4123dc:	bl	402be0 <free@plt>
  4123e0:	str	xzr, [x19, #40]
  4123e4:	ldr	x19, [sp, #16]
  4123e8:	ldp	x29, x30, [sp], #32
  4123ec:	ret
  4123f0:	stp	x29, x30, [sp, #-64]!
  4123f4:	stp	x24, x23, [sp, #16]
  4123f8:	stp	x22, x21, [sp, #32]
  4123fc:	stp	x20, x19, [sp, #48]
  412400:	mov	x19, x0
  412404:	ldr	x0, [x0]
  412408:	mov	x29, sp
  41240c:	cbz	x0, 412450 <_obstack_memory_used@@Base+0x11c4>
  412410:	ldr	x8, [x19, #16]
  412414:	cbz	x8, 412450 <_obstack_memory_used@@Base+0x11c4>
  412418:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  41241c:	ldr	x8, [x19, #16]
  412420:	cmp	x8, #0x2
  412424:	b.cc	412450 <_obstack_memory_used@@Base+0x11c4>  // b.lo, b.ul, b.last
  412428:	mov	w20, #0x1                   	// #1
  41242c:	mov	w21, #0x10                  	// #16
  412430:	ldr	x8, [x19]
  412434:	add	x0, x8, x21
  412438:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  41243c:	ldr	x8, [x19, #16]
  412440:	add	x20, x20, #0x1
  412444:	add	x21, x21, #0x10
  412448:	cmp	x20, x8
  41244c:	b.cc	412430 <_obstack_memory_used@@Base+0x11a4>  // b.lo, b.ul, b.last
  412450:	ldr	x0, [x19, #24]
  412454:	bl	402be0 <free@plt>
  412458:	ldr	x8, [x19, #16]
  41245c:	cbz	x8, 4124ac <_obstack_memory_used@@Base+0x1220>
  412460:	mov	x20, xzr
  412464:	mov	w21, #0x10                  	// #16
  412468:	ldr	x8, [x19, #48]
  41246c:	cbz	x8, 412478 <_obstack_memory_used@@Base+0x11ec>
  412470:	ldr	x0, [x8, x21]
  412474:	bl	402be0 <free@plt>
  412478:	ldr	x8, [x19, #56]
  41247c:	cbz	x8, 412488 <_obstack_memory_used@@Base+0x11fc>
  412480:	ldr	x0, [x8, x21]
  412484:	bl	402be0 <free@plt>
  412488:	ldr	x8, [x19, #40]
  41248c:	cbz	x8, 412498 <_obstack_memory_used@@Base+0x120c>
  412490:	ldr	x0, [x8, x21]
  412494:	bl	402be0 <free@plt>
  412498:	ldr	x8, [x19, #16]
  41249c:	add	x20, x20, #0x1
  4124a0:	add	x21, x21, #0x18
  4124a4:	cmp	x20, x8
  4124a8:	b.cc	412468 <_obstack_memory_used@@Base+0x11dc>  // b.lo, b.ul, b.last
  4124ac:	ldr	x0, [x19, #40]
  4124b0:	bl	402be0 <free@plt>
  4124b4:	ldr	x0, [x19, #48]
  4124b8:	bl	402be0 <free@plt>
  4124bc:	ldr	x0, [x19, #56]
  4124c0:	bl	402be0 <free@plt>
  4124c4:	ldr	x0, [x19]
  4124c8:	bl	402be0 <free@plt>
  4124cc:	ldr	x0, [x19, #64]
  4124d0:	cbz	x0, 412534 <_obstack_memory_used@@Base+0x12a8>
  4124d4:	mov	x20, xzr
  4124d8:	mov	w21, #0x18                  	// #24
  4124dc:	madd	x23, x20, x21, x0
  4124e0:	mov	x22, x23
  4124e4:	ldr	x8, [x22], #16
  4124e8:	cmp	x8, #0x1
  4124ec:	b.lt	412510 <_obstack_memory_used@@Base+0x1284>  // b.tstop
  4124f0:	mov	x24, xzr
  4124f4:	ldr	x8, [x22]
  4124f8:	ldr	x0, [x8, x24, lsl #3]
  4124fc:	bl	4143a0 <_obstack_memory_used@@Base+0x3114>
  412500:	ldr	x8, [x23]
  412504:	add	x24, x24, #0x1
  412508:	cmp	x24, x8
  41250c:	b.lt	4124f4 <_obstack_memory_used@@Base+0x1268>  // b.tstop
  412510:	ldr	x0, [x22]
  412514:	bl	402be0 <free@plt>
  412518:	ldr	x8, [x19, #136]
  41251c:	cmp	x20, x8
  412520:	b.cs	412530 <_obstack_memory_used@@Base+0x12a4>  // b.hs, b.nlast
  412524:	ldr	x0, [x19, #64]
  412528:	add	x20, x20, #0x1
  41252c:	b	4124dc <_obstack_memory_used@@Base+0x1250>
  412530:	ldr	x0, [x19, #64]
  412534:	bl	402be0 <free@plt>
  412538:	ldr	x0, [x19, #120]
  41253c:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xdd74>
  412540:	add	x8, x8, #0x248
  412544:	cmp	x0, x8
  412548:	b.eq	412550 <_obstack_memory_used@@Base+0x12c4>  // b.none
  41254c:	bl	402be0 <free@plt>
  412550:	ldr	x0, [x19, #224]
  412554:	bl	402be0 <free@plt>
  412558:	mov	x0, x19
  41255c:	ldp	x20, x19, [sp, #48]
  412560:	ldp	x22, x21, [sp, #32]
  412564:	ldp	x24, x23, [sp, #16]
  412568:	ldp	x29, x30, [sp], #64
  41256c:	b	402be0 <free@plt>
  412570:	cmp	w4, #0x7
  412574:	b.ls	412580 <_obstack_memory_used@@Base+0x12f4>  // b.plast
  412578:	mov	w0, #0x2                   	// #2
  41257c:	ret
  412580:	sub	sp, sp, #0x50
  412584:	str	x23, [sp, #32]
  412588:	stp	x22, x21, [sp, #48]
  41258c:	stp	x20, x19, [sp, #64]
  412590:	mov	w22, w4
  412594:	mov	x19, x3
  412598:	mov	x21, x2
  41259c:	mov	x20, x1
  4125a0:	mov	x23, x0
  4125a4:	stp	x29, x30, [sp, #16]
  4125a8:	add	x29, sp, #0x10
  4125ac:	tbnz	w4, #2, 4125c4 <_obstack_memory_used@@Base+0x1338>
  4125b0:	mov	x0, x20
  4125b4:	bl	402750 <strlen@plt>
  4125b8:	mov	x2, x0
  4125bc:	mov	x3, xzr
  4125c0:	b	4125c8 <_obstack_memory_used@@Base+0x133c>
  4125c4:	ldp	x3, x2, [x19]
  4125c8:	ldrb	w8, [x23, #56]
  4125cc:	tbnz	w8, #4, 4125f0 <_obstack_memory_used@@Base+0x1364>
  4125d0:	mov	x0, x23
  4125d4:	mov	x1, x20
  4125d8:	mov	x4, x2
  4125dc:	mov	x5, x2
  4125e0:	mov	x6, x21
  4125e4:	mov	x7, x19
  4125e8:	str	w22, [sp]
  4125ec:	b	41260c <_obstack_memory_used@@Base+0x1380>
  4125f0:	str	w22, [sp]
  4125f4:	mov	x0, x23
  4125f8:	mov	x1, x20
  4125fc:	mov	x4, x2
  412600:	mov	x5, x2
  412604:	mov	x6, xzr
  412608:	mov	x7, xzr
  41260c:	bl	412630 <_obstack_memory_used@@Base+0x13a4>
  412610:	ldp	x20, x19, [sp, #64]
  412614:	ldp	x22, x21, [sp, #48]
  412618:	ldr	x23, [sp, #32]
  41261c:	ldp	x29, x30, [sp, #16]
  412620:	cmp	w0, #0x0
  412624:	cset	w0, ne  // ne = any
  412628:	add	sp, sp, #0x50
  41262c:	ret
  412630:	stp	x29, x30, [sp, #-96]!
  412634:	stp	x28, x27, [sp, #16]
  412638:	stp	x26, x25, [sp, #32]
  41263c:	stp	x24, x23, [sp, #48]
  412640:	stp	x22, x21, [sp, #64]
  412644:	stp	x20, x19, [sp, #80]
  412648:	mov	x29, sp
  41264c:	sub	sp, sp, #0x2f0
  412650:	ldr	x22, [x0]
  412654:	str	x2, [sp, #272]
  412658:	mov	x25, x0
  41265c:	mov	x27, x1
  412660:	add	x0, sp, #0x120
  412664:	mov	w2, #0x100                 	// #256
  412668:	mov	w1, wzr
  41266c:	str	x7, [sp, #144]
  412670:	mov	x24, x6
  412674:	mov	x28, x5
  412678:	mov	x19, x4
  41267c:	mov	x26, x3
  412680:	bl	4029d0 <memset@plt>
  412684:	str	x22, [sp, #440]
  412688:	ldr	x8, [x25, #32]
  41268c:	cbz	x8, 4126ac <_obstack_memory_used@@Base+0x1420>
  412690:	ldrb	w9, [x25, #56]
  412694:	mov	w10, #0x9                   	// #9
  412698:	and	w9, w9, w10
  41269c:	cmp	w9, #0x8
  4126a0:	ccmp	x26, x19, #0x4, eq  // eq = none
  4126a4:	csel	x21, x8, xzr, ne  // ne = any
  4126a8:	b	4126b0 <_obstack_memory_used@@Base+0x1424>
  4126ac:	mov	x21, xzr
  4126b0:	ldr	x8, [x25, #48]
  4126b4:	ldr	x9, [x25, #16]
  4126b8:	mvn	x10, x8
  4126bc:	add	x10, x10, x24
  4126c0:	cmp	x8, x24
  4126c4:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  4126c8:	cbz	x9, 413d38 <_obstack_memory_used@@Base+0x2aac>
  4126cc:	ldr	x10, [x22, #72]
  4126d0:	cbz	x10, 413d38 <_obstack_memory_used@@Base+0x2aac>
  4126d4:	ldr	x9, [x22, #80]
  4126d8:	cbz	x9, 413d38 <_obstack_memory_used@@Base+0x2aac>
  4126dc:	ldr	x8, [x22, #88]
  4126e0:	cbz	x8, 413d38 <_obstack_memory_used@@Base+0x2aac>
  4126e4:	ldr	x11, [x22, #96]
  4126e8:	cbz	x11, 413d38 <_obstack_memory_used@@Base+0x2aac>
  4126ec:	ldr	x10, [x10, #16]
  4126f0:	ldr	x23, [x25, #40]
  4126f4:	cbnz	x10, 412700 <_obstack_memory_used@@Base+0x1474>
  4126f8:	ldr	x9, [x9, #16]
  4126fc:	cbz	x9, 413d18 <_obstack_memory_used@@Base+0x2a8c>
  412700:	mov	x20, x19
  412704:	sub	x8, x24, x12
  412708:	str	x8, [sp, #192]
  41270c:	stp	x24, x12, [sp, #128]
  412710:	cbz	x8, 41271c <_obstack_memory_used@@Base+0x1490>
  412714:	mov	w8, #0x1                   	// #1
  412718:	b	412728 <_obstack_memory_used@@Base+0x149c>
  41271c:	ldr	x8, [x22, #152]
  412720:	cmp	x8, #0x0
  412724:	cset	w8, ne  // ne = any
  412728:	str	w8, [sp, #164]
  41272c:	ldr	x8, [x22, #16]
  412730:	ldrsw	x10, [x22, #180]
  412734:	ldr	x9, [x25, #24]
  412738:	ldr	x13, [sp, #272]
  41273c:	add	x12, x8, #0x1
  412740:	cmp	x12, x10
  412744:	and	x12, x9, #0x400000
  412748:	add	x11, x13, #0x1
  41274c:	ubfx	x9, x9, #22, #1
  412750:	csinc	x8, x10, x8, lt  // lt = tstop
  412754:	strb	w9, [sp, #424]
  412758:	orr	x9, x23, x12
  41275c:	cmp	x11, x8
  412760:	csinc	x1, x8, x13, ge  // ge = tcont
  412764:	cmp	x9, #0x0
  412768:	cset	w8, ne  // ne = any
  41276c:	str	x27, [sp, #288]
  412770:	stp	x13, x13, [sp, #368]
  412774:	str	x23, [sp, #408]
  412778:	str	w10, [sp, #432]
  41277c:	strb	w8, [sp, #427]
  412780:	ldrb	w8, [x22, #176]
  412784:	add	x0, sp, #0x120
  412788:	str	x27, [sp, #200]
  41278c:	stp	x13, x13, [sp, #384]
  412790:	ubfx	w9, w8, #2, #1
  412794:	ubfx	w8, w8, #3, #1
  412798:	strb	w9, [sp, #425]
  41279c:	strb	w8, [sp, #426]
  4127a0:	bl	4144d8 <_obstack_memory_used@@Base+0x324c>
  4127a4:	str	x22, [sp, #216]
  4127a8:	cbnz	w0, 413ef0 <_obstack_memory_used@@Base+0x2c64>
  4127ac:	add	x8, x22, #0xb8
  4127b0:	str	x8, [sp, #416]
  4127b4:	ldrb	w8, [x22, #176]
  4127b8:	ldrb	w9, [sp, #427]
  4127bc:	ldr	w10, [x29, #96]
  4127c0:	ubfx	w8, w8, #4, #1
  4127c4:	strb	w8, [sp, #430]
  4127c8:	str	w10, [sp, #260]
  4127cc:	cbz	w9, 4127d8 <_obstack_memory_used@@Base+0x154c>
  4127d0:	mov	x8, xzr
  4127d4:	b	4127f0 <_obstack_memory_used@@Base+0x1564>
  4127d8:	ldr	x8, [sp, #200]
  4127dc:	str	x8, [sp, #296]
  4127e0:	ldr	w8, [x22, #180]
  4127e4:	cmp	w8, #0x1
  4127e8:	ldr	x8, [sp, #272]
  4127ec:	csel	x8, xzr, x8, gt
  4127f0:	stp	x8, x8, [sp, #336]
  4127f4:	stp	x28, x28, [sp, #384]
  4127f8:	ldrb	w8, [x25, #56]
  4127fc:	ldr	w9, [sp, #260]
  412800:	ldr	x28, [sp, #272]
  412804:	lsr	w8, w8, #7
  412808:	strb	w8, [sp, #429]
  41280c:	ldr	x24, [x22, #152]
  412810:	mov	x8, #0xffffffffffffffff    	// #-1
  412814:	str	w9, [sp, #448]
  412818:	str	x8, [sp, #456]
  41281c:	lsl	x22, x24, #1
  412820:	cmp	x24, #0x1
  412824:	b.lt	412864 <_obstack_memory_used@@Base+0x15d8>  // b.tstop
  412828:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  41282c:	movk	x8, #0x666, lsl #48
  412830:	cmp	x22, x8
  412834:	b.hi	413f00 <_obstack_memory_used@@Base+0x2c74>  // b.pmore
  412838:	add	x8, x24, x24, lsl #2
  41283c:	lsl	x0, x8, #4
  412840:	bl	4028f0 <malloc@plt>
  412844:	mov	x19, x0
  412848:	str	x0, [sp, #504]
  41284c:	lsl	x0, x24, #4
  412850:	bl	4028f0 <malloc@plt>
  412854:	mov	w27, #0xc                   	// #12
  412858:	str	x0, [sp, #536]
  41285c:	cbz	x19, 413cc0 <_obstack_memory_used@@Base+0x2a34>
  412860:	cbz	x0, 413cc0 <_obstack_memory_used@@Base+0x2a34>
  412864:	ldr	x9, [sp, #192]
  412868:	ldr	x19, [sp, #216]
  41286c:	mov	w8, #0x1                   	// #1
  412870:	str	x22, [sp, #496]
  412874:	cmp	x9, #0x1
  412878:	str	w8, [sp, #512]
  41287c:	str	x22, [sp, #528]
  412880:	b.hi	41288c <_obstack_memory_used@@Base+0x1600>  // b.pmore
  412884:	ldrb	w8, [x19, #176]
  412888:	tbz	w8, #1, 4128b0 <_obstack_memory_used@@Base+0x1624>
  41288c:	ldr	x8, [sp, #352]
  412890:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  412894:	cmp	x8, x9
  412898:	b.hi	413f00 <_obstack_memory_used@@Base+0x2c74>  // b.pmore
  41289c:	lsl	x8, x8, #3
  4128a0:	add	x0, x8, #0x8
  4128a4:	bl	4028f0 <malloc@plt>
  4128a8:	str	x0, [sp, #472]
  4128ac:	cbz	x0, 413f00 <_obstack_memory_used@@Base+0x2c74>
  4128b0:	ldr	w9, [sp, #260]
  4128b4:	mov	w10, #0x6                   	// #6
  4128b8:	stur	x26, [x29, #-208]
  4128bc:	add	x8, sp, #0x120
  4128c0:	tst	w9, #0x1
  4128c4:	mov	w9, #0x4                   	// #4
  4128c8:	csel	w9, w10, w9, eq  // eq = none
  4128cc:	str	w9, [sp, #400]
  4128d0:	ldr	w22, [x19, #180]
  4128d4:	cmp	x20, x26
  4128d8:	csel	x9, x20, x26, lt  // lt = tstop
  4128dc:	csel	x24, x26, x20, lt  // lt = tstop
  4128e0:	str	x9, [sp, #264]
  4128e4:	cbz	x21, 4128f8 <_obstack_memory_used@@Base+0x166c>
  4128e8:	cmp	w22, #0x1
  4128ec:	b.ne	412900 <_obstack_memory_used@@Base+0x1674>  // b.any
  4128f0:	mov	w9, #0x4                   	// #4
  4128f4:	b	412918 <_obstack_memory_used@@Base+0x168c>
  4128f8:	mov	w9, #0x8                   	// #8
  4128fc:	b	412930 <_obstack_memory_used@@Base+0x16a4>
  412900:	ldr	x9, [x25, #24]
  412904:	and	x9, x9, #0x400000
  412908:	orr	x9, x23, x9
  41290c:	cmp	x9, #0x0
  412910:	cset	w9, eq  // eq = none
  412914:	lsl	w9, w9, #2
  412918:	cmp	x20, x26
  41291c:	cset	w10, ge  // ge = tcont
  412920:	cmp	x23, #0x0
  412924:	cset	w11, ne  // ne = any
  412928:	bfi	w11, w10, #1, #1
  41292c:	orr	w9, w11, w9
  412930:	add	x8, x8, #0x38
  412934:	str	x8, [sp, #120]
  412938:	add	x8, sp, #0x120
  41293c:	cmp	x20, x26
  412940:	sub	x10, x29, #0xd0
  412944:	add	x8, x8, #0xc0
  412948:	ldr	x20, [sp, #264]
  41294c:	mov	x11, #0xffffffffffffffff    	// #-1
  412950:	str	x8, [sp, #184]
  412954:	csel	x8, xzr, x10, lt  // lt = tstop
  412958:	sub	x12, x29, #0x40
  41295c:	sub	w9, w9, #0x4
  412960:	cneg	x19, x11, ge  // ge = tcont
  412964:	cmp	x8, #0x0
  412968:	stp	x9, x25, [sp, #232]
  41296c:	add	x9, x12, #0x20
  412970:	str	x8, [sp, #168]
  412974:	cset	w8, ne  // ne = any
  412978:	str	x9, [sp, #152]
  41297c:	str	w8, [sp, #180]
  412980:	str	w22, [sp, #228]
  412984:	str	x19, [sp, #280]
  412988:	ldr	x10, [sp, #232]
  41298c:	cmp	w10, #0x4
  412990:	b.hi	412ae4 <_obstack_memory_used@@Base+0x1858>  // b.pmore
  412994:	adrp	x11, 41e000 <_obstack_memory_used@@Base+0xcd74>
  412998:	add	x11, x11, #0xf8b
  41299c:	adr	x8, 4129ac <_obstack_memory_used@@Base+0x1720>
  4129a0:	ldrb	w9, [x11, x10]
  4129a4:	add	x8, x8, x9, lsl #2
  4129a8:	br	x8
  4129ac:	cmp	x26, x20
  4129b0:	b.lt	413cbc <_obstack_memory_used@@Base+0x2a30>  // b.tstop
  4129b4:	ldr	x9, [sp, #200]
  4129b8:	cmp	x26, x28
  4129bc:	b.ge	4129cc <_obstack_memory_used@@Base+0x1740>  // b.tcont
  4129c0:	ldrb	w8, [x9, x26]
  4129c4:	cbnz	x23, 4129d4 <_obstack_memory_used@@Base+0x1748>
  4129c8:	b	4129d8 <_obstack_memory_used@@Base+0x174c>
  4129cc:	mov	w8, wzr
  4129d0:	cbz	x23, 4129d8 <_obstack_memory_used@@Base+0x174c>
  4129d4:	ldrb	w8, [x23, w8, uxtw]
  4129d8:	ldrb	w8, [x21, w8, uxtw]
  4129dc:	cbnz	w8, 412a54 <_obstack_memory_used@@Base+0x17c8>
  4129e0:	cmp	x26, x20
  4129e4:	sub	x26, x26, #0x1
  4129e8:	stur	x26, [x29, #-208]
  4129ec:	b.gt	4129b8 <_obstack_memory_used@@Base+0x172c>
  4129f0:	b	413cbc <_obstack_memory_used@@Base+0x2a30>
  4129f4:	cmp	x26, x24
  4129f8:	b.ge	412a4c <_obstack_memory_used@@Base+0x17c0>  // b.tcont
  4129fc:	ldr	x9, [sp, #200]
  412a00:	ldrb	w8, [x9, x26]
  412a04:	ldrb	w8, [x23, x8]
  412a08:	ldrb	w8, [x21, x8]
  412a0c:	cbnz	w8, 412a4c <_obstack_memory_used@@Base+0x17c0>
  412a10:	add	x26, x26, #0x1
  412a14:	cmp	x26, x24
  412a18:	stur	x26, [x29, #-208]
  412a1c:	b.lt	412a00 <_obstack_memory_used@@Base+0x1774>  // b.tstop
  412a20:	b	412a4c <_obstack_memory_used@@Base+0x17c0>
  412a24:	ldr	x9, [sp, #200]
  412a28:	cmp	x26, x24
  412a2c:	b.ge	412a4c <_obstack_memory_used@@Base+0x17c0>  // b.tcont
  412a30:	ldrb	w8, [x9, x26]
  412a34:	ldrb	w8, [x21, x8]
  412a38:	cbnz	w8, 412a4c <_obstack_memory_used@@Base+0x17c0>
  412a3c:	add	x26, x26, #0x1
  412a40:	cmp	x26, x24
  412a44:	stur	x26, [x29, #-208]
  412a48:	b.lt	412a30 <_obstack_memory_used@@Base+0x17a4>  // b.tstop
  412a4c:	cmp	x26, x24
  412a50:	b.eq	413bfc <_obstack_memory_used@@Base+0x2970>  // b.none
  412a54:	ldr	w2, [sp, #260]
  412a58:	add	x0, sp, #0x120
  412a5c:	mov	x1, x26
  412a60:	bl	418cc8 <_obstack_memory_used@@Base+0x7a3c>
  412a64:	cbnz	w0, 413ef0 <_obstack_memory_used@@Base+0x2c64>
  412a68:	cmp	w22, #0x1
  412a6c:	b.eq	412a88 <_obstack_memory_used@@Base+0x17fc>  // b.none
  412a70:	ldr	x8, [sp, #336]
  412a74:	cbz	x8, 412a88 <_obstack_memory_used@@Base+0x17fc>
  412a78:	ldr	x8, [sp, #304]
  412a7c:	ldr	w8, [x8]
  412a80:	cmn	w8, #0x1
  412a84:	b.eq	413b00 <_obstack_memory_used@@Base+0x2874>  // b.none
  412a88:	ldr	x8, [sp, #184]
  412a8c:	str	wzr, [sp, #512]
  412a90:	stur	wzr, [x29, #-196]
  412a94:	stp	xzr, xzr, [x8]
  412a98:	ldr	x19, [sp, #440]
  412a9c:	ldr	x26, [sp, #360]
  412aa0:	ldr	x28, [x19, #72]
  412aa4:	ldrsb	w8, [x28, #104]
  412aa8:	tbnz	w8, #31, 412ab4 <_obstack_memory_used@@Base+0x1828>
  412aac:	ldr	w27, [sp, #180]
  412ab0:	b	412b60 <_obstack_memory_used@@Base+0x18d4>
  412ab4:	ldr	w2, [sp, #448]
  412ab8:	sub	x1, x26, #0x1
  412abc:	add	x0, sp, #0x120
  412ac0:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  412ac4:	ldr	w27, [sp, #180]
  412ac8:	tbnz	w0, #0, 412b5c <_obstack_memory_used@@Base+0x18d0>
  412acc:	mov	w3, w0
  412ad0:	cbz	w0, 412b60 <_obstack_memory_used@@Base+0x18d4>
  412ad4:	tbz	w3, #1, 413b24 <_obstack_memory_used@@Base+0x2898>
  412ad8:	tbz	w3, #2, 413b24 <_obstack_memory_used@@Base+0x2898>
  412adc:	ldr	x28, [x19, #96]
  412ae0:	b	412b60 <_obstack_memory_used@@Base+0x18d4>
  412ae4:	ldr	x8, [sp, #328]
  412ae8:	ldr	x10, [sp, #344]
  412aec:	sub	x9, x26, x8
  412af0:	cmp	x9, x10
  412af4:	b.cs	412b38 <_obstack_memory_used@@Base+0x18ac>  // b.hs, b.nlast
  412af8:	cmp	x26, x28
  412afc:	b.ge	412b0c <_obstack_memory_used@@Base+0x1880>  // b.tcont
  412b00:	ldr	x10, [sp, #296]
  412b04:	ldrb	w9, [x10, x9]
  412b08:	b	412b10 <_obstack_memory_used@@Base+0x1884>
  412b0c:	mov	x9, xzr
  412b10:	ldrb	w9, [x21, x9]
  412b14:	cbnz	w9, 412a54 <_obstack_memory_used@@Base+0x17c8>
  412b18:	add	x26, x26, x19
  412b1c:	cmp	x26, x20
  412b20:	mov	w27, #0x1                   	// #1
  412b24:	stur	x26, [x29, #-208]
  412b28:	b.lt	413cc0 <_obstack_memory_used@@Base+0x2a34>  // b.tstop
  412b2c:	cmp	x26, x24
  412b30:	b.le	412ae8 <_obstack_memory_used@@Base+0x185c>
  412b34:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  412b38:	ldr	w2, [sp, #260]
  412b3c:	add	x0, sp, #0x120
  412b40:	mov	x1, x26
  412b44:	bl	418cc8 <_obstack_memory_used@@Base+0x7a3c>
  412b48:	cbnz	w0, 413ef0 <_obstack_memory_used@@Base+0x2c64>
  412b4c:	ldur	x26, [x29, #-208]
  412b50:	ldr	x8, [sp, #328]
  412b54:	sub	x9, x26, x8
  412b58:	b	412af8 <_obstack_memory_used@@Base+0x186c>
  412b5c:	ldr	x28, [x19, #80]
  412b60:	cbz	x28, 413f00 <_obstack_memory_used@@Base+0x2c74>
  412b64:	ldr	x8, [sp, #472]
  412b68:	mov	w22, w27
  412b6c:	cbz	x8, 412b80 <_obstack_memory_used@@Base+0x18f4>
  412b70:	str	x28, [x8, x26, lsl #3]
  412b74:	ldr	x8, [x19, #152]
  412b78:	mov	w22, w27
  412b7c:	cbnz	x8, 413bbc <_obstack_memory_used@@Base+0x2930>
  412b80:	ldrsb	w8, [x28, #104]
  412b84:	tbnz	w8, #4, 413b9c <_obstack_memory_used@@Base+0x2910>
  412b88:	ldr	x19, [sp, #280]
  412b8c:	str	xzr, [sp, #208]
  412b90:	mov	x27, #0xffffffffffffffff    	// #-1
  412b94:	ldr	x9, [sp, #392]
  412b98:	ldr	x8, [sp, #360]
  412b9c:	cmp	x9, x8
  412ba0:	b.le	413928 <_obstack_memory_used@@Base+0x269c>
  412ba4:	ldr	x9, [sp, #168]
  412ba8:	str	x9, [sp, #248]
  412bac:	ldr	x10, [sp, #352]
  412bb0:	ldr	x9, [sp, #376]
  412bb4:	add	x19, x8, #0x1
  412bb8:	mov	x25, x28
  412bbc:	cmp	x19, x10
  412bc0:	b.lt	412bcc <_obstack_memory_used@@Base+0x1940>  // b.tstop
  412bc4:	cmp	x10, x9
  412bc8:	b.lt	413834 <_obstack_memory_used@@Base+0x25a8>  // b.tstop
  412bcc:	ldr	x10, [sp, #336]
  412bd0:	cmp	x19, x10
  412bd4:	b.lt	412be0 <_obstack_memory_used@@Base+0x1954>  // b.tstop
  412bd8:	cmp	x10, x9
  412bdc:	b.lt	413834 <_obstack_memory_used@@Base+0x25a8>  // b.tstop
  412be0:	ldrb	w8, [x25, #104]
  412be4:	tbnz	w8, #5, 4136b8 <_obstack_memory_used@@Base+0x242c>
  412be8:	ldr	x8, [sp, #360]
  412bec:	ldr	x9, [sp, #296]
  412bf0:	mov	x20, x25
  412bf4:	add	x10, x8, #0x1
  412bf8:	str	x10, [sp, #360]
  412bfc:	ldrb	w28, [x9, x8]
  412c00:	ldr	x0, [x20, #88]!
  412c04:	cbnz	x0, 413598 <_obstack_memory_used@@Base+0x230c>
  412c08:	ldr	x8, [x25, #96]
  412c0c:	str	x8, [sp, #112]
  412c10:	cbnz	x8, 41384c <_obstack_memory_used@@Base+0x25c0>
  412c14:	ldr	x8, [sp, #440]
  412c18:	mov	w0, #0x3800                	// #14336
  412c1c:	str	x8, [sp, #88]
  412c20:	bl	4028f0 <malloc@plt>
  412c24:	str	x0, [sp, #72]
  412c28:	cbz	x0, 413900 <_obstack_memory_used@@Base+0x2674>
  412c2c:	movi	v0.2d, #0x0
  412c30:	stp	xzr, xzr, [x20]
  412c34:	stp	q0, q0, [x29, #-64]
  412c38:	ldr	x8, [x25, #16]
  412c3c:	cmp	x8, #0x0
  412c40:	b.le	413464 <_obstack_memory_used@@Base+0x21d8>
  412c44:	ldr	x9, [sp, #72]
  412c48:	mov	w8, #0x1800                	// #6144
  412c4c:	str	xzr, [sp, #96]
  412c50:	add	x8, x9, x8
  412c54:	stp	x8, xzr, [sp, #56]
  412c58:	ldr	x8, [sp, #88]
  412c5c:	add	x8, x8, #0xb8
  412c60:	str	x8, [sp, #16]
  412c64:	ldr	x8, [x25, #24]
  412c68:	ldr	x9, [sp, #88]
  412c6c:	ldr	x10, [sp, #64]
  412c70:	ldr	x9, [x9]
  412c74:	ldr	x8, [x8, x10, lsl #3]
  412c78:	add	x8, x9, x8, lsl #4
  412c7c:	str	x8, [sp, #24]
  412c80:	ldr	w9, [x8, #8]!
  412c84:	and	w10, w9, #0xff
  412c88:	cmp	w10, #0x1
  412c8c:	str	w10, [sp, #80]
  412c90:	b.ne	412cc0 <_obstack_memory_used@@Base+0x1a34>  // b.any
  412c94:	ldr	x10, [sp, #24]
  412c98:	sub	x13, x29, #0x40
  412c9c:	mov	w14, #0x1                   	// #1
  412ca0:	ldrb	w10, [x10]
  412ca4:	lsr	x11, x10, #3
  412ca8:	and	x11, x11, #0x18
  412cac:	ldr	x12, [x13, x11]
  412cb0:	lsl	x10, x14, x10
  412cb4:	orr	x10, x10, x12
  412cb8:	str	x10, [x13, x11]
  412cbc:	b	412dbc <_obstack_memory_used@@Base+0x1b30>
  412cc0:	ldr	w10, [sp, #80]
  412cc4:	cmp	w10, #0x7
  412cc8:	b.eq	412d14 <_obstack_memory_used@@Base+0x1a88>  // b.none
  412ccc:	ldr	w10, [sp, #80]
  412cd0:	cmp	w10, #0x5
  412cd4:	b.eq	412d4c <_obstack_memory_used@@Base+0x1ac0>  // b.none
  412cd8:	ldr	w10, [sp, #80]
  412cdc:	cmp	w10, #0x3
  412ce0:	b.ne	41312c <_obstack_memory_used@@Base+0x1ea0>  // b.any
  412ce4:	ldr	x10, [sp, #24]
  412ce8:	mov	x11, xzr
  412cec:	ldr	x10, [x10]
  412cf0:	sub	x14, x29, #0x40
  412cf4:	ldr	x12, [x10, x11]
  412cf8:	ldr	x13, [x14, x11]
  412cfc:	orr	x12, x13, x12
  412d00:	str	x12, [x14, x11]
  412d04:	add	x11, x11, #0x8
  412d08:	cmp	x11, #0x20
  412d0c:	b.ne	412cf0 <_obstack_memory_used@@Base+0x1a64>  // b.any
  412d10:	b	412dbc <_obstack_memory_used@@Base+0x1b30>
  412d14:	mov	x10, #0xffffffffffffffff    	// #-1
  412d18:	stp	x10, x10, [x29, #-64]
  412d1c:	ldr	x10, [sp, #88]
  412d20:	ldr	x10, [x10, #216]
  412d24:	tbz	w10, #6, 412d2c <_obstack_memory_used@@Base+0x1aa0>
  412d28:	tbz	w10, #7, 412dbc <_obstack_memory_used@@Base+0x1b30>
  412d2c:	tst	x10, #0x40
  412d30:	mov	x11, #0xfffffffffffffffe    	// #-2
  412d34:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  412d38:	csel	x11, x12, x11, eq  // eq = none
  412d3c:	tst	x10, #0x80
  412d40:	mov	x10, #0xfffffffffffffbff    	// #-1025
  412d44:	csel	x10, x10, x11, eq  // eq = none
  412d48:	b	412db8 <_obstack_memory_used@@Base+0x1b2c>
  412d4c:	ldr	x10, [sp, #88]
  412d50:	ldr	w10, [x10, #180]
  412d54:	cmp	w10, #0x2
  412d58:	b.lt	412d8c <_obstack_memory_used@@Base+0x1b00>  // b.tstop
  412d5c:	ldr	x10, [sp, #88]
  412d60:	mov	x11, xzr
  412d64:	ldr	x10, [x10, #120]
  412d68:	sub	x14, x29, #0x40
  412d6c:	ldr	x12, [x10, x11]
  412d70:	ldr	x13, [x14, x11]
  412d74:	orr	x12, x13, x12
  412d78:	str	x12, [x14, x11]
  412d7c:	add	x11, x11, #0x8
  412d80:	cmp	x11, #0x20
  412d84:	b.ne	412d68 <_obstack_memory_used@@Base+0x1adc>  // b.any
  412d88:	b	412d94 <_obstack_memory_used@@Base+0x1b08>
  412d8c:	movi	v0.2d, #0xffffffffffffffff
  412d90:	stp	q0, q0, [x29, #-64]
  412d94:	ldr	x10, [sp, #88]
  412d98:	ldr	x10, [x10, #216]
  412d9c:	tbnz	w10, #6, 412dac <_obstack_memory_used@@Base+0x1b20>
  412da0:	ldur	x11, [x29, #-64]
  412da4:	and	x11, x11, #0xfffffffffffffbff
  412da8:	stur	x11, [x29, #-64]
  412dac:	tbz	w10, #7, 412dbc <_obstack_memory_used@@Base+0x1b30>
  412db0:	ldur	x10, [x29, #-64]
  412db4:	and	x10, x10, #0xfffffffffffffffe
  412db8:	stur	x10, [x29, #-64]
  412dbc:	and	w10, w9, #0x3ff00
  412dc0:	cbz	w10, 412f24 <_obstack_memory_used@@Base+0x1c98>
  412dc4:	tbz	w9, #13, 412de0 <_obstack_memory_used@@Base+0x1b54>
  412dc8:	ldur	x10, [x29, #-64]
  412dcc:	movi	v0.2d, #0x0
  412dd0:	stp	q0, q0, [x29, #-64]
  412dd4:	tbz	w10, #10, 41312c <_obstack_memory_used@@Base+0x1ea0>
  412dd8:	mov	w10, #0x400                 	// #1024
  412ddc:	stur	x10, [x29, #-64]
  412de0:	tbnz	w9, #15, 413124 <_obstack_memory_used@@Base+0x1e98>
  412de4:	tbz	w9, #10, 412e84 <_obstack_memory_used@@Base+0x1bf8>
  412de8:	ldr	w10, [sp, #80]
  412dec:	cmp	w10, #0x1
  412df0:	b.ne	412dfc <_obstack_memory_used@@Base+0x1b70>  // b.any
  412df4:	ldrb	w10, [x8, #2]
  412df8:	tbz	w10, #6, 413124 <_obstack_memory_used@@Base+0x1e98>
  412dfc:	ldr	x10, [sp, #88]
  412e00:	ldr	w10, [x10, #180]
  412e04:	cmp	w10, #0x1
  412e08:	b.le	412e50 <_obstack_memory_used@@Base+0x1bc4>
  412e0c:	ldr	x10, [sp, #88]
  412e10:	mov	x11, xzr
  412e14:	ldr	x12, [x10, #120]
  412e18:	mov	x10, xzr
  412e1c:	ldr	x13, [sp, #16]
  412e20:	ldr	x14, [x12, x11]
  412e24:	sub	x16, x29, #0x40
  412e28:	ldr	x15, [x16, x11]
  412e2c:	ldr	x13, [x13, x11]
  412e30:	orn	x13, x13, x14
  412e34:	and	x13, x15, x13
  412e38:	str	x13, [x16, x11]
  412e3c:	add	x11, x11, #0x8
  412e40:	cmp	x11, #0x20
  412e44:	orr	x10, x13, x10
  412e48:	b.ne	412e1c <_obstack_memory_used@@Base+0x1b90>  // b.any
  412e4c:	b	412e80 <_obstack_memory_used@@Base+0x1bf4>
  412e50:	mov	x11, xzr
  412e54:	mov	x10, xzr
  412e58:	ldr	x12, [sp, #16]
  412e5c:	sub	x14, x29, #0x40
  412e60:	ldr	x13, [x14, x11]
  412e64:	ldr	x12, [x12, x11]
  412e68:	and	x12, x13, x12
  412e6c:	str	x12, [x14, x11]
  412e70:	add	x11, x11, #0x8
  412e74:	cmp	x11, #0x20
  412e78:	orr	x10, x12, x10
  412e7c:	b.ne	412e58 <_obstack_memory_used@@Base+0x1bcc>  // b.any
  412e80:	cbz	x10, 41312c <_obstack_memory_used@@Base+0x1ea0>
  412e84:	tbz	w9, #11, 412f24 <_obstack_memory_used@@Base+0x1c98>
  412e88:	ldr	w9, [sp, #80]
  412e8c:	cmp	w9, #0x1
  412e90:	b.ne	412e9c <_obstack_memory_used@@Base+0x1c10>  // b.any
  412e94:	ldrb	w8, [x8, #2]
  412e98:	tbnz	w8, #6, 413124 <_obstack_memory_used@@Base+0x1e98>
  412e9c:	ldr	x8, [sp, #88]
  412ea0:	ldr	w8, [x8, #180]
  412ea4:	cmp	w8, #0x1
  412ea8:	b.le	412ef0 <_obstack_memory_used@@Base+0x1c64>
  412eac:	ldr	x8, [sp, #88]
  412eb0:	mov	x9, xzr
  412eb4:	ldr	x10, [x8, #120]
  412eb8:	mov	x8, xzr
  412ebc:	ldr	x11, [sp, #16]
  412ec0:	ldr	x12, [x10, x9]
  412ec4:	sub	x14, x29, #0x40
  412ec8:	ldr	x13, [x14, x9]
  412ecc:	ldr	x11, [x11, x9]
  412ed0:	and	x11, x12, x11
  412ed4:	bic	x11, x13, x11
  412ed8:	str	x11, [x14, x9]
  412edc:	add	x9, x9, #0x8
  412ee0:	cmp	x9, #0x20
  412ee4:	orr	x8, x11, x8
  412ee8:	b.ne	412ebc <_obstack_memory_used@@Base+0x1c30>  // b.any
  412eec:	b	412f20 <_obstack_memory_used@@Base+0x1c94>
  412ef0:	mov	x9, xzr
  412ef4:	mov	x8, xzr
  412ef8:	ldr	x10, [sp, #16]
  412efc:	sub	x12, x29, #0x40
  412f00:	ldr	x11, [x12, x9]
  412f04:	ldr	x10, [x10, x9]
  412f08:	bic	x10, x11, x10
  412f0c:	str	x10, [x12, x9]
  412f10:	add	x9, x9, #0x8
  412f14:	cmp	x9, #0x20
  412f18:	orr	x8, x10, x8
  412f1c:	b.ne	412ef8 <_obstack_memory_used@@Base+0x1c6c>  // b.any
  412f20:	cbz	x8, 41312c <_obstack_memory_used@@Base+0x1ea0>
  412f24:	ldr	x8, [sp, #96]
  412f28:	cmp	x8, #0x1
  412f2c:	b.lt	4130ac <_obstack_memory_used@@Base+0x1e20>  // b.tstop
  412f30:	ldr	x8, [sp, #56]
  412f34:	stp	x8, xzr, [sp, #104]
  412f38:	ldr	w8, [sp, #80]
  412f3c:	cmp	w8, #0x1
  412f40:	b.ne	412f6c <_obstack_memory_used@@Base+0x1ce0>  // b.any
  412f44:	ldr	x8, [sp, #24]
  412f48:	ldr	x10, [sp, #56]
  412f4c:	ldr	x11, [sp, #112]
  412f50:	ldrb	w8, [x8]
  412f54:	add	x10, x10, x11, lsl #5
  412f58:	lsr	x9, x8, #3
  412f5c:	and	x9, x9, #0x18
  412f60:	ldr	x9, [x10, x9]
  412f64:	lsr	x8, x9, x8
  412f68:	tbz	w8, #0, 413088 <_obstack_memory_used@@Base+0x1dfc>
  412f6c:	ldr	x11, [sp, #104]
  412f70:	mov	x8, xzr
  412f74:	movi	v0.2d, #0x0
  412f78:	sub	x9, x29, #0x40
  412f7c:	sub	x10, x29, #0x60
  412f80:	ldr	q1, [x9, x8]
  412f84:	ldr	q2, [x11, x8]
  412f88:	and	v1.16b, v2.16b, v1.16b
  412f8c:	str	q1, [x10, x8]
  412f90:	add	x8, x8, #0x10
  412f94:	cmp	x8, #0x20
  412f98:	orr	v0.16b, v1.16b, v0.16b
  412f9c:	b.ne	412f80 <_obstack_memory_used@@Base+0x1cf4>  // b.any
  412fa0:	dup	v1.2d, v0.d[1]
  412fa4:	orr	v0.16b, v0.16b, v1.16b
  412fa8:	fmov	x8, d0
  412fac:	cbz	x8, 413088 <_obstack_memory_used@@Base+0x1dfc>
  412fb0:	ldr	x11, [sp, #104]
  412fb4:	mov	x8, xzr
  412fb8:	movi	v4.2d, #0x0
  412fbc:	movi	v0.2d, #0x0
  412fc0:	sub	x9, x29, #0x40
  412fc4:	sub	x10, x29, #0x80
  412fc8:	ldr	q1, [x9, x8]
  412fcc:	ldr	q2, [x11, x8]
  412fd0:	bic	v3.16b, v2.16b, v1.16b
  412fd4:	bic	v1.16b, v1.16b, v2.16b
  412fd8:	str	q3, [x10, x8]
  412fdc:	str	q1, [x9, x8]
  412fe0:	add	x8, x8, #0x10
  412fe4:	orr	v0.16b, v3.16b, v0.16b
  412fe8:	cmp	x8, #0x20
  412fec:	orr	v4.16b, v1.16b, v4.16b
  412ff0:	b.ne	412fc8 <_obstack_memory_used@@Base+0x1d3c>  // b.any
  412ff4:	dup	v1.2d, v0.d[1]
  412ff8:	orr	v0.16b, v0.16b, v1.16b
  412ffc:	fmov	x8, d0
  413000:	str	q4, [sp, #32]
  413004:	cbz	x8, 413050 <_obstack_memory_used@@Base+0x1dc4>
  413008:	ldr	x12, [sp, #96]
  41300c:	ldr	x9, [sp, #56]
  413010:	ldr	x13, [sp, #112]
  413014:	ldr	x11, [sp, #72]
  413018:	ldp	q0, q1, [x29, #-128]
  41301c:	ldp	q2, q3, [x29, #-96]
  413020:	mov	w10, #0x18                  	// #24
  413024:	add	x8, x9, x12, lsl #5
  413028:	add	x9, x9, x13, lsl #5
  41302c:	madd	x0, x12, x10, x11
  413030:	madd	x1, x13, x10, x11
  413034:	stp	q0, q1, [x8]
  413038:	stp	q2, q3, [x9]
  41303c:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  413040:	cbnz	w0, 4138c4 <_obstack_memory_used@@Base+0x2638>
  413044:	ldr	x8, [sp, #96]
  413048:	add	x8, x8, #0x1
  41304c:	str	x8, [sp, #96]
  413050:	ldr	x8, [x25, #24]
  413054:	ldr	x9, [sp, #64]
  413058:	ldr	x10, [sp, #112]
  41305c:	ldr	x1, [x8, x9, lsl #3]
  413060:	ldr	x9, [sp, #72]
  413064:	mov	w8, #0x18                  	// #24
  413068:	madd	x0, x10, x8, x9
  41306c:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  413070:	tbz	w0, #0, 4138c4 <_obstack_memory_used@@Base+0x2638>
  413074:	ldr	q1, [sp, #32]
  413078:	dup	v0.2d, v1.d[1]
  41307c:	orr	v0.16b, v1.16b, v0.16b
  413080:	fmov	x8, d0
  413084:	cbz	x8, 4130b0 <_obstack_memory_used@@Base+0x1e24>
  413088:	ldr	x9, [sp, #112]
  41308c:	ldr	x8, [sp, #96]
  413090:	add	x9, x9, #0x1
  413094:	cmp	x9, x8
  413098:	ldr	x8, [sp, #104]
  41309c:	add	x8, x8, #0x20
  4130a0:	stp	x8, x9, [sp, #104]
  4130a4:	b.lt	412f38 <_obstack_memory_used@@Base+0x1cac>  // b.tstop
  4130a8:	b	4130b0 <_obstack_memory_used@@Base+0x1e24>
  4130ac:	str	xzr, [sp, #112]
  4130b0:	ldr	x8, [sp, #96]
  4130b4:	ldr	x9, [sp, #112]
  4130b8:	cmp	x9, x8
  4130bc:	b.ne	41312c <_obstack_memory_used@@Base+0x1ea0>  // b.any
  4130c0:	ldp	x8, x9, [sp, #56]
  4130c4:	ldr	x10, [sp, #112]
  4130c8:	ldp	q1, q0, [x29, #-64]
  4130cc:	mov	w0, #0x8                   	// #8
  4130d0:	add	x8, x8, x10, lsl #5
  4130d4:	stp	q1, q0, [x8]
  4130d8:	ldr	x8, [x25, #24]
  4130dc:	ldr	x8, [x8, x9, lsl #3]
  4130e0:	ldr	x9, [sp, #72]
  4130e4:	str	x8, [sp, #96]
  4130e8:	mov	w8, #0x18                  	// #24
  4130ec:	madd	x9, x10, x8, x9
  4130f0:	mov	w8, #0x1                   	// #1
  4130f4:	dup	v0.2d, x8
  4130f8:	str	x9, [sp, #104]
  4130fc:	str	q0, [x9]
  413100:	bl	4028f0 <malloc@plt>
  413104:	ldr	x9, [sp, #104]
  413108:	str	x0, [x9, #16]
  41310c:	cbz	x0, 413910 <_obstack_memory_used@@Base+0x2684>
  413110:	ldr	x8, [sp, #96]
  413114:	str	x8, [x0]
  413118:	ldr	x8, [sp, #112]
  41311c:	add	x8, x8, #0x1
  413120:	str	x8, [sp, #96]
  413124:	movi	v0.2d, #0x0
  413128:	stp	q0, q0, [x29, #-64]
  41312c:	ldr	x9, [sp, #64]
  413130:	ldr	x8, [x25, #16]
  413134:	add	x9, x9, #0x1
  413138:	cmp	x9, x8
  41313c:	str	x9, [sp, #64]
  413140:	b.lt	412c64 <_obstack_memory_used@@Base+0x19d8>  // b.tstop
  413144:	ldr	x8, [sp, #96]
  413148:	cmp	x8, #0x0
  41314c:	b.le	4134e4 <_obstack_memory_used@@Base+0x2258>
  413150:	ldr	x8, [sp, #96]
  413154:	add	x8, x8, #0x1
  413158:	lsl	x0, x8, #3
  41315c:	stp	x8, xzr, [x29, #-160]
  413160:	bl	4028f0 <malloc@plt>
  413164:	cmp	x0, #0x0
  413168:	mov	w8, #0xc                   	// #12
  41316c:	csel	w8, w8, wzr, eq  // eq = none
  413170:	stur	x0, [x29, #-144]
  413174:	stur	w8, [x29, #-132]
  413178:	str	x0, [sp, #112]
  41317c:	cbz	x0, 41391c <_obstack_memory_used@@Base+0x2690>
  413180:	ldr	x8, [sp, #96]
  413184:	add	x8, x8, x8, lsl #1
  413188:	lsl	x0, x8, #3
  41318c:	bl	4028f0 <malloc@plt>
  413190:	str	x0, [sp, #32]
  413194:	cbz	x0, 41391c <_obstack_memory_used@@Base+0x2690>
  413198:	ldr	x9, [sp, #96]
  41319c:	ldr	x10, [sp, #32]
  4131a0:	mov	w8, wzr
  4131a4:	movi	v0.2d, #0x0
  4131a8:	str	xzr, [sp, #64]
  4131ac:	add	x10, x10, x9, lsl #3
  4131b0:	add	x9, x10, x9, lsl #3
  4131b4:	stp	x9, x10, [sp, #8]
  4131b8:	ldr	x9, [sp, #56]
  4131bc:	str	wzr, [sp, #4]
  4131c0:	stp	q0, q0, [x29, #-192]
  4131c4:	str	x9, [sp, #24]
  4131c8:	ldp	x11, x10, [sp, #64]
  4131cc:	mov	w9, #0x18                  	// #24
  4131d0:	stur	xzr, [x29, #-152]
  4131d4:	madd	x10, x11, x9, x10
  4131d8:	ldr	x9, [x10, #8]!
  4131dc:	cmp	x9, #0x1
  4131e0:	str	x10, [sp, #80]
  4131e4:	b.lt	41325c <_obstack_memory_used@@Base+0x1fd0>  // b.tstop
  4131e8:	ldp	x12, x11, [sp, #64]
  4131ec:	mov	w10, #0x18                  	// #24
  4131f0:	mov	x13, xzr
  4131f4:	madd	x10, x12, x10, x11
  4131f8:	ldr	x12, [sp, #88]
  4131fc:	add	x10, x10, #0x10
  413200:	str	x10, [sp, #104]
  413204:	ldr	x10, [sp, #104]
  413208:	ldr	x11, [x12, #24]
  41320c:	ldr	x10, [x10]
  413210:	ldr	x10, [x10, x13, lsl #3]
  413214:	ldr	x10, [x11, x10, lsl #3]
  413218:	cmn	x10, #0x1
  41321c:	b.eq	41324c <_obstack_memory_used@@Base+0x1fc0>  // b.none
  413220:	ldr	x8, [x12, #48]
  413224:	mov	w9, #0x18                  	// #24
  413228:	sub	x0, x29, #0xa0
  41322c:	str	x13, [sp, #112]
  413230:	madd	x1, x10, x9, x8
  413234:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  413238:	cbnz	w0, 413880 <_obstack_memory_used@@Base+0x25f4>
  41323c:	ldp	x8, x12, [sp, #80]
  413240:	ldr	x13, [sp, #112]
  413244:	ldr	x9, [x8]
  413248:	mov	w8, wzr
  41324c:	add	x13, x13, #0x1
  413250:	cmp	x13, x9
  413254:	b.lt	413204 <_obstack_memory_used@@Base+0x1f78>  // b.tstop
  413258:	stur	w8, [x29, #-132]
  41325c:	ldr	x1, [sp, #88]
  413260:	sub	x0, x29, #0x84
  413264:	sub	x2, x29, #0xa0
  413268:	mov	w3, wzr
  41326c:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  413270:	ldur	w8, [x29, #-132]
  413274:	ldr	x9, [sp, #32]
  413278:	ldr	x10, [sp, #64]
  41327c:	str	x0, [x9, x10, lsl #3]
  413280:	cbnz	x0, 413288 <_obstack_memory_used@@Base+0x1ffc>
  413284:	cbnz	w8, 413884 <_obstack_memory_used@@Base+0x25f8>
  413288:	ldrsb	w9, [x0, #104]
  41328c:	tbnz	w9, #31, 4132ac <_obstack_memory_used@@Base+0x2020>
  413290:	ldp	x11, x9, [sp, #8]
  413294:	ldr	x10, [sp, #64]
  413298:	str	x0, [x9, x10, lsl #3]
  41329c:	ldr	x9, [sp, #32]
  4132a0:	ldr	x9, [x9, x10, lsl #3]
  4132a4:	str	x9, [x11, x10, lsl #3]
  4132a8:	b	413334 <_obstack_memory_used@@Base+0x20a8>
  4132ac:	ldr	x1, [sp, #88]
  4132b0:	sub	x0, x29, #0x84
  4132b4:	sub	x2, x29, #0xa0
  4132b8:	mov	w3, #0x1                   	// #1
  4132bc:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  4132c0:	ldr	x8, [sp, #16]
  4132c4:	ldr	x9, [sp, #64]
  4132c8:	str	x0, [x8, x9, lsl #3]
  4132cc:	cbnz	x0, 4132d8 <_obstack_memory_used@@Base+0x204c>
  4132d0:	ldur	w8, [x29, #-132]
  4132d4:	cbnz	w8, 413884 <_obstack_memory_used@@Base+0x25f8>
  4132d8:	ldr	x8, [sp, #32]
  4132dc:	ldr	x9, [sp, #64]
  4132e0:	ldr	x8, [x8, x9, lsl #3]
  4132e4:	cmp	x8, x0
  4132e8:	b.eq	413308 <_obstack_memory_used@@Base+0x207c>  // b.none
  4132ec:	ldr	x8, [sp, #88]
  4132f0:	ldr	w9, [sp, #4]
  4132f4:	ldr	w8, [x8, #180]
  4132f8:	cmp	w8, #0x1
  4132fc:	cset	w8, gt
  413300:	orr	w9, w9, w8
  413304:	str	w9, [sp, #4]
  413308:	ldr	x1, [sp, #88]
  41330c:	sub	x0, x29, #0x84
  413310:	sub	x2, x29, #0xa0
  413314:	mov	w3, #0x2                   	// #2
  413318:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41331c:	ldur	w8, [x29, #-132]
  413320:	ldr	x9, [sp, #64]
  413324:	ldr	x10, [sp, #8]
  413328:	str	x0, [x10, x9, lsl #3]
  41332c:	cbnz	x0, 413334 <_obstack_memory_used@@Base+0x20a8>
  413330:	cbnz	w8, 413884 <_obstack_memory_used@@Base+0x25f8>
  413334:	ldr	x11, [sp, #24]
  413338:	mov	x9, xzr
  41333c:	sub	x10, x29, #0xc0
  413340:	ldr	q0, [x11, x9]
  413344:	ldr	q1, [x10, x9]
  413348:	orr	v0.16b, v1.16b, v0.16b
  41334c:	str	q0, [x10, x9]
  413350:	add	x9, x9, #0x10
  413354:	cmp	x9, #0x20
  413358:	b.ne	413340 <_obstack_memory_used@@Base+0x20b4>  // b.any
  41335c:	ldr	x10, [sp, #64]
  413360:	ldr	x9, [sp, #96]
  413364:	add	x11, x11, #0x20
  413368:	str	x11, [sp, #24]
  41336c:	add	x10, x10, #0x1
  413370:	cmp	x10, x9
  413374:	str	x10, [sp, #64]
  413378:	b.ne	4131c8 <_obstack_memory_used@@Base+0x1f3c>  // b.any
  41337c:	ldr	w8, [sp, #4]
  413380:	tbnz	w8, #0, 4134f8 <_obstack_memory_used@@Base+0x226c>
  413384:	mov	w0, #0x8                   	// #8
  413388:	mov	w1, #0x100                 	// #256
  41338c:	bl	402a20 <calloc@plt>
  413390:	str	x0, [x20]
  413394:	cbz	x0, 413884 <_obstack_memory_used@@Base+0x25f8>
  413398:	ldr	x10, [sp, #56]
  41339c:	mov	x8, xzr
  4133a0:	mov	x9, xzr
  4133a4:	sub	x11, x29, #0xc0
  4133a8:	ldr	x11, [x11, x9, lsl #3]
  4133ac:	cbz	x11, 413414 <_obstack_memory_used@@Base+0x2188>
  4133b0:	ldr	x12, [sp, #88]
  4133b4:	mov	w14, #0x1                   	// #1
  4133b8:	add	x13, x12, x9, lsl #3
  4133bc:	mov	x12, x8
  4133c0:	add	x13, x13, #0xb8
  4133c4:	tbnz	w11, #0, 4133dc <_obstack_memory_used@@Base+0x2150>
  4133c8:	lsl	x14, x14, #1
  4133cc:	lsr	x11, x11, #1
  4133d0:	add	x12, x12, #0x1
  4133d4:	cbnz	x11, 4133c4 <_obstack_memory_used@@Base+0x2138>
  4133d8:	b	413414 <_obstack_memory_used@@Base+0x2188>
  4133dc:	mov	x15, #0xfffffffffffffff8    	// #-8
  4133e0:	mov	x16, x10
  4133e4:	ldr	x17, [x16], #32
  4133e8:	add	x15, x15, #0x8
  4133ec:	tst	x17, x14
  4133f0:	b.eq	4133e4 <_obstack_memory_used@@Base+0x2158>  // b.none
  4133f4:	ldr	x16, [x13]
  4133f8:	ldr	x17, [sp, #16]
  4133fc:	tst	x16, x14
  413400:	ldr	x16, [sp, #32]
  413404:	csel	x16, x16, x17, eq  // eq = none
  413408:	ldr	x15, [x16, x15]
  41340c:	str	x15, [x0, x12, lsl #3]
  413410:	b	4133c8 <_obstack_memory_used@@Base+0x213c>
  413414:	add	x9, x9, #0x1
  413418:	add	x8, x8, #0x40
  41341c:	cmp	x9, #0x4
  413420:	add	x10, x10, #0x8
  413424:	b.ne	4133a4 <_obstack_memory_used@@Base+0x2118>  // b.any
  413428:	ldurb	w8, [x29, #-191]
  41342c:	tbz	w8, #2, 413498 <_obstack_memory_used@@Base+0x220c>
  413430:	ldr	x9, [sp, #96]
  413434:	ldr	x8, [sp, #32]
  413438:	add	x8, x8, x9, lsl #4
  41343c:	ldr	x10, [sp, #56]
  413440:	ldrb	w10, [x10, #1]
  413444:	tbnz	w10, #2, 413484 <_obstack_memory_used@@Base+0x21f8>
  413448:	ldr	x10, [sp, #56]
  41344c:	add	x8, x8, #0x8
  413450:	subs	x9, x9, #0x1
  413454:	add	x10, x10, #0x20
  413458:	str	x10, [sp, #56]
  41345c:	b.ne	41343c <_obstack_memory_used@@Base+0x21b0>  // b.any
  413460:	b	413498 <_obstack_memory_used@@Base+0x220c>
  413464:	ldr	x0, [sp, #72]
  413468:	bl	402be0 <free@plt>
  41346c:	mov	w0, #0x8                   	// #8
  413470:	mov	w1, #0x100                 	// #256
  413474:	bl	402a20 <calloc@plt>
  413478:	str	x0, [x20]
  41347c:	cbnz	x0, 412c04 <_obstack_memory_used@@Base+0x1978>
  413480:	b	413900 <_obstack_memory_used@@Base+0x2674>
  413484:	ldr	x8, [x8]
  413488:	ldr	w9, [sp, #4]
  41348c:	str	x8, [x0, #80]
  413490:	tbz	w9, #0, 413498 <_obstack_memory_used@@Base+0x220c>
  413494:	str	x8, [x0, #2128]
  413498:	ldr	x0, [sp, #32]
  41349c:	bl	402be0 <free@plt>
  4134a0:	ldur	x0, [x29, #-144]
  4134a4:	bl	402be0 <free@plt>
  4134a8:	mov	w9, #0x10                  	// #16
  4134ac:	ldr	x8, [sp, #72]
  4134b0:	str	x9, [sp, #112]
  4134b4:	ldr	x0, [x8, x9]
  4134b8:	bl	402be0 <free@plt>
  4134bc:	ldr	x8, [sp, #96]
  4134c0:	ldr	x9, [sp, #112]
  4134c4:	subs	x8, x8, #0x1
  4134c8:	add	x9, x9, #0x18
  4134cc:	str	x8, [sp, #96]
  4134d0:	b.ne	4134ac <_obstack_memory_used@@Base+0x2220>  // b.any
  4134d4:	ldr	x0, [sp, #72]
  4134d8:	bl	402be0 <free@plt>
  4134dc:	ldr	x0, [x20]
  4134e0:	b	412c04 <_obstack_memory_used@@Base+0x1978>
  4134e4:	ldr	x0, [sp, #72]
  4134e8:	bl	402be0 <free@plt>
  4134ec:	ldr	x8, [sp, #96]
  4134f0:	cbz	x8, 41346c <_obstack_memory_used@@Base+0x21e0>
  4134f4:	b	413900 <_obstack_memory_used@@Base+0x2674>
  4134f8:	mov	w0, #0x8                   	// #8
  4134fc:	mov	w1, #0x200                 	// #512
  413500:	bl	402a20 <calloc@plt>
  413504:	str	x0, [x25, #96]
  413508:	cbz	x0, 413884 <_obstack_memory_used@@Base+0x25f8>
  41350c:	ldr	x10, [sp, #32]
  413510:	ldr	x11, [sp, #56]
  413514:	mov	x8, xzr
  413518:	mov	x9, xzr
  41351c:	sub	x10, x10, #0x8
  413520:	sub	x12, x29, #0xc0
  413524:	ldr	x12, [x12, x9, lsl #3]
  413528:	cbz	x12, 413580 <_obstack_memory_used@@Base+0x22f4>
  41352c:	mov	x13, x8
  413530:	mov	w14, #0x1                   	// #1
  413534:	tbnz	w12, #0, 41354c <_obstack_memory_used@@Base+0x22c0>
  413538:	lsl	x14, x14, #1
  41353c:	lsr	x12, x12, #1
  413540:	add	x13, x13, #0x1
  413544:	cbnz	x12, 413534 <_obstack_memory_used@@Base+0x22a8>
  413548:	b	413580 <_obstack_memory_used@@Base+0x22f4>
  41354c:	mov	x16, x11
  413550:	mov	x15, x10
  413554:	ldr	x17, [x16], #32
  413558:	add	x15, x15, #0x8
  41355c:	tst	x17, x14
  413560:	b.eq	413554 <_obstack_memory_used@@Base+0x22c8>  // b.none
  413564:	ldr	x17, [sp, #96]
  413568:	ldr	x16, [x15]
  41356c:	ldr	x15, [x15, x17, lsl #3]
  413570:	add	x17, x0, x13, lsl #3
  413574:	str	x16, [x17]
  413578:	str	x15, [x17, #2048]
  41357c:	b	413538 <_obstack_memory_used@@Base+0x22ac>
  413580:	add	x9, x9, #0x1
  413584:	add	x8, x8, #0x40
  413588:	cmp	x9, #0x4
  41358c:	add	x11, x11, #0x8
  413590:	b.ne	413520 <_obstack_memory_used@@Base+0x2294>  // b.any
  413594:	b	413428 <_obstack_memory_used@@Base+0x219c>
  413598:	ldr	x28, [x0, x28, lsl #3]
  41359c:	ldr	x8, [sp, #472]
  4135a0:	cbz	x8, 4135b8 <_obstack_memory_used@@Base+0x232c>
  4135a4:	sub	x0, x29, #0xc4
  4135a8:	add	x1, sp, #0x120
  4135ac:	mov	x2, x28
  4135b0:	bl	41a2f4 <_obstack_memory_used@@Base+0x9068>
  4135b4:	mov	x28, x0
  4135b8:	cbz	x28, 4135e0 <_obstack_memory_used@@Base+0x2354>
  4135bc:	ldrsb	w8, [x28, #104]
  4135c0:	cmp	x25, x28
  4135c4:	cset	w20, eq  // eq = none
  4135c8:	tst	w22, w20
  4135cc:	csel	x26, x19, x26, ne  // ne = any
  4135d0:	tbnz	w8, #4, 41365c <_obstack_memory_used@@Base+0x23d0>
  4135d4:	ldr	x25, [sp, #240]
  4135d8:	ldr	x19, [sp, #280]
  4135dc:	b	413694 <_obstack_memory_used@@Base+0x2408>
  4135e0:	ldur	w8, [x29, #-196]
  4135e4:	cbnz	w8, 413f00 <_obstack_memory_used@@Base+0x2c74>
  4135e8:	ldr	x8, [sp, #208]
  4135ec:	ldr	w9, [sp, #164]
  4135f0:	cmp	x8, #0x0
  4135f4:	cset	w8, ne  // ne = any
  4135f8:	bic	w8, w8, w9
  4135fc:	tbnz	w8, #0, 413b90 <_obstack_memory_used@@Base+0x2904>
  413600:	ldr	x10, [sp, #472]
  413604:	ldr	x20, [sp, #264]
  413608:	cbz	x10, 413934 <_obstack_memory_used@@Base+0x26a8>
  41360c:	ldr	x8, [sp, #480]
  413610:	ldr	x9, [sp, #360]
  413614:	add	x10, x10, #0x8
  413618:	cmp	x9, x8
  41361c:	b.ge	413934 <_obstack_memory_used@@Base+0x26a8>  // b.tcont
  413620:	add	x11, x9, #0x1
  413624:	str	x11, [sp, #360]
  413628:	ldr	x12, [x10, x9, lsl #3]
  41362c:	mov	x9, x11
  413630:	cbz	x12, 413618 <_obstack_memory_used@@Base+0x238c>
  413634:	sub	x0, x29, #0xc4
  413638:	add	x1, sp, #0x120
  41363c:	mov	x2, xzr
  413640:	bl	41a2f4 <_obstack_memory_used@@Base+0x9068>
  413644:	mov	x28, x0
  413648:	cbnz	x0, 4136b0 <_obstack_memory_used@@Base+0x2424>
  41364c:	ldur	w8, [x29, #-196]
  413650:	cbnz	w8, 4136b0 <_obstack_memory_used@@Base+0x2424>
  413654:	ldr	x10, [sp, #472]
  413658:	b	41360c <_obstack_memory_used@@Base+0x2380>
  41365c:	ldr	x25, [sp, #240]
  413660:	ldr	x19, [sp, #280]
  413664:	tbz	w8, #31, 41367c <_obstack_memory_used@@Base+0x23f0>
  413668:	ldr	x2, [sp, #360]
  41366c:	add	x0, sp, #0x120
  413670:	mov	x1, x28
  413674:	bl	41931c <_obstack_memory_used@@Base+0x8090>
  413678:	cbz	x0, 413694 <_obstack_memory_used@@Base+0x2408>
  41367c:	ldr	x27, [sp, #360]
  413680:	ldr	w8, [sp, #164]
  413684:	cbz	w8, 413b88 <_obstack_memory_used@@Base+0x28fc>
  413688:	mov	w8, #0x1                   	// #1
  41368c:	str	xzr, [sp, #248]
  413690:	str	x8, [sp, #208]
  413694:	ldr	x9, [sp, #392]
  413698:	ldr	x8, [sp, #360]
  41369c:	and	w22, w22, w20
  4136a0:	ldr	x20, [sp, #264]
  4136a4:	cmp	x9, x8
  4136a8:	b.gt	412bac <_obstack_memory_used@@Base+0x1920>
  4136ac:	b	41393c <_obstack_memory_used@@Base+0x26b0>
  4136b0:	cbnz	x28, 4135bc <_obstack_memory_used@@Base+0x2330>
  4136b4:	b	413b90 <_obstack_memory_used@@Base+0x2904>
  4136b8:	ldr	x8, [x25, #16]
  4136bc:	cmp	x8, #0x1
  4136c0:	b.lt	41382c <_obstack_memory_used@@Base+0x25a0>  // b.tstop
  4136c4:	ldr	x8, [sp, #440]
  4136c8:	mov	x20, xzr
  4136cc:	str	x8, [sp, #112]
  4136d0:	ldr	x8, [x25, #24]
  4136d4:	ldr	x9, [x8, x20, lsl #3]
  4136d8:	ldr	x8, [sp, #112]
  4136dc:	ldr	x8, [x8]
  4136e0:	add	x8, x8, x9, lsl #4
  4136e4:	ldr	w28, [x8, #8]
  4136e8:	tbz	w28, #20, 41381c <_obstack_memory_used@@Base+0x2590>
  4136ec:	ldr	x3, [sp, #360]
  4136f0:	tst	w28, #0x3ff00
  4136f4:	str	x9, [sp, #104]
  4136f8:	b.eq	413738 <_obstack_memory_used@@Base+0x24ac>  // b.none
  4136fc:	ldr	w2, [sp, #448]
  413700:	add	x0, sp, #0x120
  413704:	mov	x1, x3
  413708:	str	x3, [sp, #96]
  41370c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  413710:	ldr	x3, [sp, #96]
  413714:	and	w8, w0, #0x1
  413718:	tbz	w28, #10, 413720 <_obstack_memory_used@@Base+0x2494>
  41371c:	cbz	w8, 41381c <_obstack_memory_used@@Base+0x2590>
  413720:	tbz	w28, #11, 413728 <_obstack_memory_used@@Base+0x249c>
  413724:	cbnz	w8, 41381c <_obstack_memory_used@@Base+0x2590>
  413728:	tbz	w28, #13, 413730 <_obstack_memory_used@@Base+0x24a4>
  41372c:	tbz	w0, #1, 41381c <_obstack_memory_used@@Base+0x2590>
  413730:	tbz	w28, #15, 413738 <_obstack_memory_used@@Base+0x24ac>
  413734:	tbz	w0, #3, 41381c <_obstack_memory_used@@Base+0x2590>
  413738:	ldp	x1, x0, [sp, #104]
  41373c:	add	x2, sp, #0x120
  413740:	bl	41b400 <_obstack_memory_used@@Base+0xa174>
  413744:	cbz	w0, 41381c <_obstack_memory_used@@Base+0x2590>
  413748:	ldr	x8, [sp, #360]
  41374c:	ldr	w9, [sp, #512]
  413750:	add	x28, x8, w0, sxtw
  413754:	cmp	w9, w0
  413758:	csel	w8, w0, w9, lt  // lt = tstop
  41375c:	add	x0, sp, #0x120
  413760:	mov	x1, x28
  413764:	str	w8, [sp, #512]
  413768:	bl	41a66c <_obstack_memory_used@@Base+0x93e0>
  41376c:	stur	w0, [x29, #-96]
  413770:	cbnz	w0, 413874 <_obstack_memory_used@@Base+0x25e8>
  413774:	ldp	x11, x10, [sp, #104]
  413778:	ldr	x9, [sp, #472]
  41377c:	ldr	x8, [x10, #24]
  413780:	ldr	x10, [x10, #48]
  413784:	ldr	x8, [x8, x11, lsl #3]
  413788:	ldr	x11, [x9, x28, lsl #3]
  41378c:	mov	w9, #0x18                  	// #24
  413790:	madd	x2, x8, x9, x10
  413794:	stp	x11, x28, [sp, #96]
  413798:	cbz	x11, 4137b4 <_obstack_memory_used@@Base+0x2528>
  41379c:	ldr	x1, [x11, #80]
  4137a0:	sub	x0, x29, #0x40
  4137a4:	bl	41a43c <_obstack_memory_used@@Base+0x91b0>
  4137a8:	stur	w0, [x29, #-96]
  4137ac:	cbz	w0, 4137c4 <_obstack_memory_used@@Base+0x2538>
  4137b0:	b	413874 <_obstack_memory_used@@Base+0x25e8>
  4137b4:	ldr	x8, [x2, #16]
  4137b8:	ldr	q0, [x2]
  4137bc:	stur	x8, [x29, #-48]
  4137c0:	stur	q0, [x29, #-64]
  4137c4:	ldr	x28, [sp, #104]
  4137c8:	ldr	w2, [sp, #448]
  4137cc:	add	x0, sp, #0x120
  4137d0:	sub	x1, x28, #0x1
  4137d4:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  4137d8:	ldr	x1, [sp, #112]
  4137dc:	mov	w3, w0
  4137e0:	sub	x0, x29, #0x60
  4137e4:	sub	x2, x29, #0x40
  4137e8:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  4137ec:	ldr	x8, [sp, #472]
  4137f0:	str	x0, [x8, x28, lsl #3]
  4137f4:	ldr	x8, [sp, #96]
  4137f8:	cbz	x8, 413808 <_obstack_memory_used@@Base+0x257c>
  4137fc:	ldur	x0, [x29, #-48]
  413800:	bl	402be0 <free@plt>
  413804:	ldr	x28, [sp, #104]
  413808:	ldr	x8, [sp, #472]
  41380c:	ldr	x8, [x8, x28, lsl #3]
  413810:	cbnz	x8, 41381c <_obstack_memory_used@@Base+0x2590>
  413814:	ldur	w0, [x29, #-96]
  413818:	cbnz	w0, 413874 <_obstack_memory_used@@Base+0x25e8>
  41381c:	ldr	x8, [x25, #16]
  413820:	add	x20, x20, #0x1
  413824:	cmp	x20, x8
  413828:	b.lt	4136d0 <_obstack_memory_used@@Base+0x2444>  // b.tstop
  41382c:	stur	wzr, [x29, #-196]
  413830:	b	412be8 <_obstack_memory_used@@Base+0x195c>
  413834:	add	w1, w8, #0x2
  413838:	add	x0, sp, #0x120
  41383c:	bl	41a22c <_obstack_memory_used@@Base+0x8fa0>
  413840:	stur	w0, [x29, #-196]
  413844:	cbz	w0, 412be0 <_obstack_memory_used@@Base+0x1954>
  413848:	b	413f00 <_obstack_memory_used@@Base+0x2c74>
  41384c:	ldr	x8, [sp, #360]
  413850:	ldr	w2, [sp, #448]
  413854:	add	x0, sp, #0x120
  413858:	sub	x1, x8, #0x1
  41385c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  413860:	ldr	x9, [sp, #112]
  413864:	ubfiz	w8, w0, #8, #1
  413868:	orr	x8, x8, x28
  41386c:	ldr	x28, [x9, x8, lsl #3]
  413870:	b	41359c <_obstack_memory_used@@Base+0x2310>
  413874:	mov	x28, xzr
  413878:	stur	w0, [x29, #-196]
  41387c:	b	41359c <_obstack_memory_used@@Base+0x2310>
  413880:	stur	w0, [x29, #-132]
  413884:	ldr	x0, [sp, #32]
  413888:	bl	402be0 <free@plt>
  41388c:	ldur	x0, [x29, #-144]
  413890:	bl	402be0 <free@plt>
  413894:	ldr	x8, [sp, #96]
  413898:	cmp	x8, #0x1
  41389c:	b.lt	4138f8 <_obstack_memory_used@@Base+0x266c>  // b.tstop
  4138a0:	ldr	x8, [sp, #72]
  4138a4:	add	x20, x8, #0x10
  4138a8:	ldr	x0, [x20], #24
  4138ac:	bl	402be0 <free@plt>
  4138b0:	ldr	x8, [sp, #96]
  4138b4:	subs	x8, x8, #0x1
  4138b8:	str	x8, [sp, #96]
  4138bc:	b.ne	4138a8 <_obstack_memory_used@@Base+0x261c>  // b.any
  4138c0:	b	4138f8 <_obstack_memory_used@@Base+0x266c>
  4138c4:	ldr	x8, [sp, #96]
  4138c8:	str	x8, [sp, #112]
  4138cc:	ldr	x8, [sp, #112]
  4138d0:	cmp	x8, #0x1
  4138d4:	b.lt	4138f8 <_obstack_memory_used@@Base+0x266c>  // b.tstop
  4138d8:	ldr	x8, [sp, #72]
  4138dc:	add	x20, x8, #0x10
  4138e0:	ldr	x0, [x20], #24
  4138e4:	bl	402be0 <free@plt>
  4138e8:	ldr	x8, [sp, #112]
  4138ec:	subs	x8, x8, #0x1
  4138f0:	str	x8, [sp, #112]
  4138f4:	b.ne	4138e0 <_obstack_memory_used@@Base+0x2654>  // b.any
  4138f8:	ldr	x0, [sp, #72]
  4138fc:	bl	402be0 <free@plt>
  413900:	mov	w8, #0xc                   	// #12
  413904:	mov	x28, xzr
  413908:	stur	w8, [x29, #-196]
  41390c:	b	41359c <_obstack_memory_used@@Base+0x2310>
  413910:	mov	x8, x9
  413914:	stp	xzr, xzr, [x9]
  413918:	b	4138cc <_obstack_memory_used@@Base+0x2640>
  41391c:	ldr	x0, [sp, #112]
  413920:	bl	402be0 <free@plt>
  413924:	b	4138a0 <_obstack_memory_used@@Base+0x2614>
  413928:	ldr	x8, [sp, #168]
  41392c:	str	x8, [sp, #248]
  413930:	b	41393c <_obstack_memory_used@@Base+0x26b0>
  413934:	ldr	x25, [sp, #240]
  413938:	ldr	x19, [sp, #280]
  41393c:	ldr	x9, [sp, #248]
  413940:	cbz	x9, 413950 <_obstack_memory_used@@Base+0x26c4>
  413944:	ldr	x8, [x9]
  413948:	add	x8, x8, x26
  41394c:	str	x8, [x9]
  413950:	ldr	x28, [sp, #272]
  413954:	ldr	w22, [sp, #228]
  413958:	cmn	x27, #0x1
  41395c:	b.eq	413af8 <_obstack_memory_used@@Base+0x286c>  // b.none
  413960:	cmn	x27, #0x2
  413964:	b.eq	413f00 <_obstack_memory_used@@Base+0x2c74>  // b.none
  413968:	str	x27, [sp, #456]
  41396c:	ldr	x20, [sp, #192]
  413970:	ldrb	w8, [x25, #56]
  413974:	ldr	x22, [sp, #216]
  413978:	cmp	x20, #0x2
  41397c:	b.cc	413984 <_obstack_memory_used@@Base+0x26f8>  // b.lo, b.ul, b.last
  413980:	tbz	w8, #4, 41398c <_obstack_memory_used@@Base+0x2700>
  413984:	ldr	x9, [x22, #152]
  413988:	cbz	x9, 4139a8 <_obstack_memory_used@@Base+0x271c>
  41398c:	ldr	x8, [sp, #472]
  413990:	add	x0, sp, #0x120
  413994:	mov	x2, x27
  413998:	ldr	x1, [x8, x27, lsl #3]
  41399c:	bl	41931c <_obstack_memory_used@@Base+0x8090>
  4139a0:	str	x0, [sp, #464]
  4139a4:	ldrb	w8, [x25, #56]
  4139a8:	cmp	x20, #0x2
  4139ac:	b.cc	4139bc <_obstack_memory_used@@Base+0x2730>  // b.lo, b.ul, b.last
  4139b0:	tbnz	w8, #4, 4139bc <_obstack_memory_used@@Base+0x2730>
  4139b4:	ldrb	w8, [x22, #176]
  4139b8:	tbnz	w8, #0, 4139c4 <_obstack_memory_used@@Base+0x2738>
  4139bc:	ldr	x8, [x22, #152]
  4139c0:	cbz	x8, 413d54 <_obstack_memory_used@@Base+0x2ac8>
  4139c4:	ldr	x28, [sp, #456]
  4139c8:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  4139cc:	cmp	x28, x8
  4139d0:	b.cs	413f00 <_obstack_memory_used@@Base+0x2c74>  // b.hs, b.nlast
  4139d4:	ldr	x25, [sp, #440]
  4139d8:	ldr	x20, [sp, #464]
  4139dc:	lsl	x8, x28, #3
  4139e0:	add	x19, x8, #0x8
  4139e4:	mov	x0, x19
  4139e8:	bl	4028f0 <malloc@plt>
  4139ec:	mov	x26, x0
  4139f0:	cbz	x0, 413ef8 <_obstack_memory_used@@Base+0x2c6c>
  4139f4:	ldr	x8, [x25, #152]
  4139f8:	cbz	x8, 413aa8 <_obstack_memory_used@@Base+0x281c>
  4139fc:	mov	x0, x19
  413a00:	bl	4028f0 <malloc@plt>
  413a04:	cbz	x0, 413ef8 <_obstack_memory_used@@Base+0x2c6c>
  413a08:	mov	x19, x0
  413a0c:	add	x22, x28, #0x1
  413a10:	lsl	x2, x22, #3
  413a14:	mov	x0, x19
  413a18:	mov	w1, wzr
  413a1c:	bl	4029d0 <memset@plt>
  413a20:	ldr	x8, [sp, #152]
  413a24:	add	x0, sp, #0x120
  413a28:	sub	x1, x29, #0x40
  413a2c:	stp	x26, x19, [x29, #-64]
  413a30:	stp	x20, x28, [x29, #-48]
  413a34:	stp	xzr, xzr, [x8, #8]
  413a38:	str	xzr, [x8]
  413a3c:	bl	41b7fc <_obstack_memory_used@@Base+0xa570>
  413a40:	cbnz	w0, 413c10 <_obstack_memory_used@@Base+0x2984>
  413a44:	ldr	x8, [x26]
  413a48:	cbnz	x8, 413b4c <_obstack_memory_used@@Base+0x28c0>
  413a4c:	ldr	x8, [x19]
  413a50:	cbnz	x8, 413b4c <_obstack_memory_used@@Base+0x28c0>
  413a54:	ldr	w22, [sp, #228]
  413a58:	subs	x28, x28, #0x1
  413a5c:	b.lt	413b80 <_obstack_memory_used@@Base+0x28f4>  // b.tstop
  413a60:	ldr	x8, [sp, #472]
  413a64:	ldr	x20, [sp, #264]
  413a68:	ldr	x1, [x8, x28, lsl #3]
  413a6c:	cbz	x1, 413a78 <_obstack_memory_used@@Base+0x27ec>
  413a70:	ldrb	w9, [x1, #104]
  413a74:	tbnz	w9, #4, 413a8c <_obstack_memory_used@@Base+0x2800>
  413a78:	add	x9, x28, #0x1
  413a7c:	sub	x28, x28, #0x1
  413a80:	cmp	x9, #0x2
  413a84:	b.ge	413a68 <_obstack_memory_used@@Base+0x27dc>  // b.tcont
  413a88:	b	413aa0 <_obstack_memory_used@@Base+0x2814>
  413a8c:	add	x0, sp, #0x120
  413a90:	mov	x2, x28
  413a94:	bl	41931c <_obstack_memory_used@@Base+0x8090>
  413a98:	mov	x20, x0
  413a9c:	b	413a0c <_obstack_memory_used@@Base+0x2780>
  413aa0:	ldr	x25, [sp, #240]
  413aa4:	b	413ae4 <_obstack_memory_used@@Base+0x2858>
  413aa8:	ldr	x8, [sp, #152]
  413aac:	add	x0, sp, #0x120
  413ab0:	sub	x1, x29, #0x40
  413ab4:	stp	x26, xzr, [x29, #-64]
  413ab8:	stp	x20, x28, [x29, #-48]
  413abc:	stp	xzr, xzr, [x8]
  413ac0:	str	xzr, [x8, #16]
  413ac4:	bl	41b7fc <_obstack_memory_used@@Base+0xa570>
  413ac8:	cbnz	w0, 413c70 <_obstack_memory_used@@Base+0x29e4>
  413acc:	ldr	x8, [x26]
  413ad0:	ldr	x25, [sp, #240]
  413ad4:	cbnz	x8, 413d40 <_obstack_memory_used@@Base+0x2ab4>
  413ad8:	ldr	w22, [sp, #228]
  413adc:	mov	x19, xzr
  413ae0:	ldr	x20, [sp, #264]
  413ae4:	mov	x0, x26
  413ae8:	bl	402be0 <free@plt>
  413aec:	mov	x0, x19
  413af0:	bl	402be0 <free@plt>
  413af4:	ldp	x28, x19, [sp, #272]
  413af8:	add	x0, sp, #0x120
  413afc:	bl	4193bc <_obstack_memory_used@@Base+0x8130>
  413b00:	ldur	x8, [x29, #-208]
  413b04:	mov	w27, #0x1                   	// #1
  413b08:	add	x26, x8, x19
  413b0c:	cmp	x26, x20
  413b10:	stur	x26, [x29, #-208]
  413b14:	b.lt	413cc0 <_obstack_memory_used@@Base+0x2a34>  // b.tstop
  413b18:	cmp	x24, x26
  413b1c:	b.ge	412988 <_obstack_memory_used@@Base+0x16fc>  // b.tcont
  413b20:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413b24:	tbnz	w3, #1, 413b44 <_obstack_memory_used@@Base+0x28b8>
  413b28:	tbz	w3, #2, 412b60 <_obstack_memory_used@@Base+0x18d4>
  413b2c:	ldr	x2, [x28, #80]
  413b30:	sub	x0, x29, #0xc4
  413b34:	mov	x1, x19
  413b38:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  413b3c:	mov	x28, x0
  413b40:	b	412b60 <_obstack_memory_used@@Base+0x18d4>
  413b44:	ldr	x28, [x19, #88]
  413b48:	b	412b60 <_obstack_memory_used@@Base+0x18d4>
  413b4c:	mov	x0, x25
  413b50:	mov	x1, x26
  413b54:	mov	x2, x19
  413b58:	mov	x3, x22
  413b5c:	bl	41ba48 <_obstack_memory_used@@Base+0xa7bc>
  413b60:	mov	w27, w0
  413b64:	mov	x0, x19
  413b68:	bl	402be0 <free@plt>
  413b6c:	ldr	x22, [sp, #216]
  413b70:	ldr	x25, [sp, #240]
  413b74:	cbz	w27, 413d40 <_obstack_memory_used@@Base+0x2ab4>
  413b78:	mov	x19, xzr
  413b7c:	b	413c7c <_obstack_memory_used@@Base+0x29f0>
  413b80:	ldr	x25, [sp, #240]
  413b84:	b	413ae0 <_obstack_memory_used@@Base+0x2854>
  413b88:	ldp	x20, x28, [sp, #264]
  413b8c:	b	413954 <_obstack_memory_used@@Base+0x26c8>
  413b90:	ldr	x25, [sp, #240]
  413b94:	ldr	x20, [sp, #264]
  413b98:	b	413938 <_obstack_memory_used@@Base+0x26ac>
  413b9c:	ldr	x19, [sp, #280]
  413ba0:	tbnz	w8, #31, 413c1c <_obstack_memory_used@@Base+0x2990>
  413ba4:	ldr	w8, [sp, #164]
  413ba8:	cbz	w8, 413c4c <_obstack_memory_used@@Base+0x29c0>
  413bac:	mov	x27, x26
  413bb0:	mov	w8, #0x1                   	// #1
  413bb4:	str	x8, [sp, #208]
  413bb8:	b	412b94 <_obstack_memory_used@@Base+0x1908>
  413bbc:	add	x19, x28, #0x8
  413bc0:	add	x0, sp, #0x120
  413bc4:	mov	x1, x19
  413bc8:	mov	x2, xzr
  413bcc:	bl	419b1c <_obstack_memory_used@@Base+0x8890>
  413bd0:	stur	w0, [x29, #-196]
  413bd4:	cbnz	w0, 413cac <_obstack_memory_used@@Base+0x2a20>
  413bd8:	ldrb	w8, [x28, #104]
  413bdc:	tbz	w8, #6, 413bf4 <_obstack_memory_used@@Base+0x2968>
  413be0:	add	x0, sp, #0x120
  413be4:	mov	x1, x19
  413be8:	bl	419c24 <_obstack_memory_used@@Base+0x8998>
  413bec:	stur	w0, [x29, #-196]
  413bf0:	cbnz	w0, 413cac <_obstack_memory_used@@Base+0x2a20>
  413bf4:	mov	w22, wzr
  413bf8:	b	412b80 <_obstack_memory_used@@Base+0x18f4>
  413bfc:	cmp	x24, x28
  413c00:	b.ge	413c54 <_obstack_memory_used@@Base+0x29c8>  // b.tcont
  413c04:	ldr	x8, [sp, #200]
  413c08:	ldrb	w8, [x8, x24]
  413c0c:	b	413c58 <_obstack_memory_used@@Base+0x29cc>
  413c10:	ldr	x22, [sp, #216]
  413c14:	mov	w27, w0
  413c18:	b	413c78 <_obstack_memory_used@@Base+0x29ec>
  413c1c:	add	x0, sp, #0x120
  413c20:	mov	x1, x28
  413c24:	mov	x2, x26
  413c28:	bl	41931c <_obstack_memory_used@@Base+0x8090>
  413c2c:	ldr	w9, [sp, #164]
  413c30:	cmp	x0, #0x0
  413c34:	cset	w8, ne  // ne = any
  413c38:	str	x8, [sp, #208]
  413c3c:	cset	w8, eq  // eq = none
  413c40:	orr	w8, w9, w8
  413c44:	csinv	x27, x26, xzr, ne  // ne = any
  413c48:	tbnz	w8, #0, 412b94 <_obstack_memory_used@@Base+0x1908>
  413c4c:	mov	x27, x26
  413c50:	b	413950 <_obstack_memory_used@@Base+0x26c4>
  413c54:	mov	w8, wzr
  413c58:	cbz	x23, 413c60 <_obstack_memory_used@@Base+0x29d4>
  413c5c:	ldrb	w8, [x23, w8, uxtw]
  413c60:	ldrb	w8, [x21, w8, uxtw]
  413c64:	mov	x26, x24
  413c68:	cbnz	w8, 412a54 <_obstack_memory_used@@Base+0x17c8>
  413c6c:	b	413cbc <_obstack_memory_used@@Base+0x2a30>
  413c70:	mov	w27, w0
  413c74:	mov	x19, xzr
  413c78:	ldr	x25, [sp, #240]
  413c7c:	mov	x0, x26
  413c80:	bl	402be0 <free@plt>
  413c84:	mov	x0, x19
  413c88:	bl	402be0 <free@plt>
  413c8c:	ldr	x20, [sp, #192]
  413c90:	ldr	x19, [sp, #280]
  413c94:	cbz	w27, 413d54 <_obstack_memory_used@@Base+0x2ac8>
  413c98:	ldp	x20, x28, [sp, #264]
  413c9c:	ldr	w22, [sp, #228]
  413ca0:	cmp	w27, #0x1
  413ca4:	b.eq	413af8 <_obstack_memory_used@@Base+0x286c>  // b.none
  413ca8:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413cac:	ldp	x28, x19, [sp, #272]
  413cb0:	ldr	w22, [sp, #228]
  413cb4:	sxtw	x27, w0
  413cb8:	b	413958 <_obstack_memory_used@@Base+0x26cc>
  413cbc:	mov	w27, #0x1                   	// #1
  413cc0:	ldr	x0, [sp, #472]
  413cc4:	bl	402be0 <free@plt>
  413cc8:	ldr	x8, [sp, #216]
  413ccc:	ldr	x8, [x8, #152]
  413cd0:	cbz	x8, 413cec <_obstack_memory_used@@Base+0x2a60>
  413cd4:	add	x0, sp, #0x120
  413cd8:	bl	4193bc <_obstack_memory_used@@Base+0x8130>
  413cdc:	ldr	x0, [sp, #536]
  413ce0:	bl	402be0 <free@plt>
  413ce4:	ldr	x0, [sp, #504]
  413ce8:	bl	402be0 <free@plt>
  413cec:	add	x0, sp, #0x120
  413cf0:	bl	414494 <_obstack_memory_used@@Base+0x3208>
  413cf4:	mov	w0, w27
  413cf8:	add	sp, sp, #0x2f0
  413cfc:	ldp	x20, x19, [sp, #80]
  413d00:	ldp	x22, x21, [sp, #64]
  413d04:	ldp	x24, x23, [sp, #48]
  413d08:	ldp	x26, x25, [sp, #32]
  413d0c:	ldp	x28, x27, [sp, #16]
  413d10:	ldp	x29, x30, [sp], #96
  413d14:	ret
  413d18:	ldr	x8, [x8, #16]
  413d1c:	cbz	x8, 413d28 <_obstack_memory_used@@Base+0x2a9c>
  413d20:	ldrsb	w8, [x25, #56]
  413d24:	tbnz	w8, #31, 412700 <_obstack_memory_used@@Base+0x1474>
  413d28:	mov	x20, xzr
  413d2c:	cbz	x26, 413db4 <_obstack_memory_used@@Base+0x2b28>
  413d30:	mov	x26, x20
  413d34:	cbz	x19, 412704 <_obstack_memory_used@@Base+0x1478>
  413d38:	mov	w27, #0x1                   	// #1
  413d3c:	b	413cf4 <_obstack_memory_used@@Base+0x2a68>
  413d40:	ldr	x0, [sp, #472]
  413d44:	bl	402be0 <free@plt>
  413d48:	stp	x20, x26, [sp, #464]
  413d4c:	ldr	x20, [sp, #192]
  413d50:	str	x28, [sp, #456]
  413d54:	cbz	x20, 413dac <_obstack_memory_used@@Base+0x2b20>
  413d58:	cmp	x20, #0x1
  413d5c:	b.eq	413d80 <_obstack_memory_used@@Base+0x2af4>  // b.none
  413d60:	ldr	x8, [sp, #144]
  413d64:	mov	w1, #0xff                  	// #255
  413d68:	add	x0, x8, #0x10
  413d6c:	ldp	x9, x8, [sp, #128]
  413d70:	mvn	x8, x8
  413d74:	add	x8, x8, x9
  413d78:	lsl	x2, x8, #4
  413d7c:	bl	4029d0 <memset@plt>
  413d80:	ldr	x9, [sp, #144]
  413d84:	ldr	x8, [sp, #456]
  413d88:	cmp	x20, #0x2
  413d8c:	stp	xzr, x8, [x9]
  413d90:	b.cc	413de0 <_obstack_memory_used@@Base+0x2b54>  // b.lo, b.ul, b.last
  413d94:	ldrb	w8, [x25, #56]
  413d98:	tbnz	w8, #4, 413de0 <_obstack_memory_used@@Base+0x2b54>
  413d9c:	ldrb	w8, [x22, #176]
  413da0:	tbnz	w8, #0, 413dbc <_obstack_memory_used@@Base+0x2b30>
  413da4:	mov	w4, wzr
  413da8:	b	413dc8 <_obstack_memory_used@@Base+0x2b3c>
  413dac:	mov	w27, wzr
  413db0:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413db4:	mov	x26, x20
  413db8:	b	412704 <_obstack_memory_used@@Base+0x1478>
  413dbc:	ldr	x8, [x22, #152]
  413dc0:	cmp	x8, #0x0
  413dc4:	cset	w4, gt
  413dc8:	ldr	x3, [sp, #144]
  413dcc:	add	x1, sp, #0x120
  413dd0:	mov	x0, x25
  413dd4:	mov	x2, x20
  413dd8:	bl	419478 <_obstack_memory_used@@Base+0x81ec>
  413ddc:	cbnz	w0, 413ef0 <_obstack_memory_used@@Base+0x2c64>
  413de0:	ldp	x19, x13, [sp, #136]
  413de4:	ldrb	w9, [sp, #428]
  413de8:	ldr	x10, [sp, #336]
  413dec:	ldr	x11, [sp, #312]
  413df0:	ldur	x12, [x29, #-208]
  413df4:	ldr	x17, [sp, #120]
  413df8:	mov	x8, xzr
  413dfc:	add	x13, x13, #0x8
  413e00:	ldur	x14, [x13, #-8]
  413e04:	cmn	x14, #0x1
  413e08:	b.eq	413e20 <_obstack_memory_used@@Base+0x2b94>  // b.none
  413e0c:	cbnz	w9, 413e34 <_obstack_memory_used@@Base+0x2ba8>
  413e10:	ldr	x15, [x13]
  413e14:	add	x14, x14, x12
  413e18:	add	x15, x15, x12
  413e1c:	stp	x14, x15, [x13, #-8]
  413e20:	add	x8, x8, #0x1
  413e24:	cmp	x8, x20
  413e28:	add	x13, x13, #0x10
  413e2c:	b.cc	413e00 <_obstack_memory_used@@Base+0x2b74>  // b.lo, b.ul, b.last
  413e30:	b	413e64 <_obstack_memory_used@@Base+0x2bd8>
  413e34:	add	x15, x11, x14, lsl #3
  413e38:	cmp	x14, x10
  413e3c:	ldr	x16, [x13]
  413e40:	csel	x14, x17, x15, eq  // eq = none
  413e44:	ldr	x14, [x14]
  413e48:	add	x15, x11, x16, lsl #3
  413e4c:	cmp	x16, x10
  413e50:	stur	x14, [x13, #-8]
  413e54:	csel	x15, x17, x15, eq  // eq = none
  413e58:	ldr	x15, [x15]
  413e5c:	str	x15, [x13]
  413e60:	b	413e14 <_obstack_memory_used@@Base+0x2b88>
  413e64:	cmp	x19, #0x1
  413e68:	b.lt	413e80 <_obstack_memory_used@@Base+0x2bf4>  // b.tstop
  413e6c:	ldr	x8, [sp, #144]
  413e70:	lsl	x2, x19, #4
  413e74:	mov	w1, #0xff                  	// #255
  413e78:	add	x0, x8, x20, lsl #4
  413e7c:	bl	4029d0 <memset@plt>
  413e80:	ldr	x8, [x22, #224]
  413e84:	mov	w27, wzr
  413e88:	cbz	x8, 413cc0 <_obstack_memory_used@@Base+0x2a34>
  413e8c:	cmp	x20, #0x2
  413e90:	b.cc	413cc0 <_obstack_memory_used@@Base+0x2a34>  // b.lo, b.ul, b.last
  413e94:	ldr	x11, [sp, #128]
  413e98:	mvn	x10, x19
  413e9c:	ldr	x13, [sp, #144]
  413ea0:	mov	x9, xzr
  413ea4:	add	x10, x10, x11
  413ea8:	ldr	x11, [sp, #144]
  413eac:	add	x11, x11, #0x18
  413eb0:	ldr	x12, [x8, x9, lsl #3]
  413eb4:	cmp	x9, x12
  413eb8:	b.eq	413ed8 <_obstack_memory_used@@Base+0x2c4c>  // b.none
  413ebc:	add	x12, x13, x12, lsl #4
  413ec0:	ldr	x12, [x12, #16]
  413ec4:	stur	x12, [x11, #-8]
  413ec8:	ldr	x12, [x8, x9, lsl #3]
  413ecc:	add	x12, x13, x12, lsl #4
  413ed0:	ldr	x12, [x12, #24]
  413ed4:	str	x12, [x11]
  413ed8:	add	x9, x9, #0x1
  413edc:	mov	w27, wzr
  413ee0:	cmp	x10, x9
  413ee4:	add	x11, x11, #0x10
  413ee8:	b.ne	413eb0 <_obstack_memory_used@@Base+0x2c24>  // b.any
  413eec:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413ef0:	mov	w27, w0
  413ef4:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413ef8:	mov	x0, x26
  413efc:	bl	402be0 <free@plt>
  413f00:	mov	w27, #0xc                   	// #12
  413f04:	b	413cc0 <_obstack_memory_used@@Base+0x2a34>
  413f08:	mov	x6, x4
  413f0c:	mov	w7, #0x1                   	// #1
  413f10:	mov	x4, xzr
  413f14:	mov	x5, x2
  413f18:	b	413f1c <_obstack_memory_used@@Base+0x2c90>
  413f1c:	sub	sp, sp, #0x70
  413f20:	cmp	x3, x2
  413f24:	cset	w8, gt
  413f28:	orr	x8, x8, x3, lsr #63
  413f2c:	stp	x29, x30, [sp, #16]
  413f30:	stp	x28, x27, [sp, #32]
  413f34:	stp	x26, x25, [sp, #48]
  413f38:	stp	x24, x23, [sp, #64]
  413f3c:	stp	x22, x21, [sp, #80]
  413f40:	stp	x20, x19, [sp, #96]
  413f44:	add	x29, sp, #0x10
  413f48:	cbnz	x8, 414170 <_obstack_memory_used@@Base+0x2ee4>
  413f4c:	add	x8, x4, x3
  413f50:	ldrb	w19, [x0, #56]
  413f54:	bic	x9, x8, x8, asr #63
  413f58:	cmp	x8, x2
  413f5c:	csel	x27, x2, x9, gt
  413f60:	mov	x22, x6
  413f64:	mov	x24, x5
  413f68:	mov	x20, x3
  413f6c:	mov	x25, x2
  413f70:	mov	x26, x1
  413f74:	mov	x21, x0
  413f78:	cmp	x27, x3
  413f7c:	stur	w7, [x29, #-4]
  413f80:	b.le	413fa4 <_obstack_memory_used@@Base+0x2d18>
  413f84:	tbnz	w19, #3, 413fa4 <_obstack_memory_used@@Base+0x2d18>
  413f88:	ldr	x9, [x21, #32]
  413f8c:	mov	w8, w19
  413f90:	cbz	x9, 413fa8 <_obstack_memory_used@@Base+0x2d1c>
  413f94:	mov	x0, x21
  413f98:	bl	411e34 <_obstack_memory_used@@Base+0xba8>
  413f9c:	ldrb	w8, [x21, #56]
  413fa0:	b	413fa8 <_obstack_memory_used@@Base+0x2d1c>
  413fa4:	mov	w8, w19
  413fa8:	mov	x28, xzr
  413fac:	mov	w23, #0x1                   	// #1
  413fb0:	cbz	x22, 413ff0 <_obstack_memory_used@@Base+0x2d64>
  413fb4:	tbnz	w8, #4, 413ff0 <_obstack_memory_used@@Base+0x2d64>
  413fb8:	and	w8, w8, #0x6
  413fbc:	cmp	w8, #0x4
  413fc0:	b.ne	413fe4 <_obstack_memory_used@@Base+0x2d58>  // b.any
  413fc4:	ldr	x8, [x22]
  413fc8:	ldr	x9, [x21, #48]
  413fcc:	cmp	x8, x9
  413fd0:	b.hi	413fe8 <_obstack_memory_used@@Base+0x2d5c>  // b.pmore
  413fd4:	cmp	x8, #0x1
  413fd8:	csel	x28, xzr, x22, lt  // lt = tstop
  413fdc:	csinc	x23, x8, xzr, ge  // ge = tcont
  413fe0:	b	413ff0 <_obstack_memory_used@@Base+0x2d64>
  413fe4:	ldr	x9, [x21, #48]
  413fe8:	add	x23, x9, #0x1
  413fec:	mov	x28, x22
  413ff0:	lsl	x0, x23, #4
  413ff4:	bl	4028f0 <malloc@plt>
  413ff8:	cbz	x0, 414178 <_obstack_memory_used@@Base+0x2eec>
  413ffc:	mov	x22, x0
  414000:	ubfx	w8, w19, #5, #2
  414004:	mov	x0, x21
  414008:	mov	x1, x26
  41400c:	mov	x2, x25
  414010:	mov	x3, x20
  414014:	mov	x4, x27
  414018:	mov	x5, x24
  41401c:	mov	x6, x23
  414020:	mov	x7, x22
  414024:	str	w8, [sp]
  414028:	bl	412630 <_obstack_memory_used@@Base+0x13a4>
  41402c:	cbz	w0, 414068 <_obstack_memory_used@@Base+0x2ddc>
  414030:	cmp	w0, #0x1
  414034:	mov	x8, #0xfffffffffffffffe    	// #-2
  414038:	cinc	x19, x8, eq  // eq = none
  41403c:	mov	x0, x22
  414040:	bl	402be0 <free@plt>
  414044:	mov	x0, x19
  414048:	ldp	x20, x19, [sp, #96]
  41404c:	ldp	x22, x21, [sp, #80]
  414050:	ldp	x24, x23, [sp, #64]
  414054:	ldp	x26, x25, [sp, #48]
  414058:	ldp	x28, x27, [sp, #32]
  41405c:	ldp	x29, x30, [sp, #16]
  414060:	add	sp, sp, #0x70
  414064:	ret
  414068:	cbz	x28, 41414c <_obstack_memory_used@@Base+0x2ec0>
  41406c:	ldrb	w8, [x21, #56]
  414070:	add	x26, x23, #0x1
  414074:	ubfx	w8, w8, #1, #2
  414078:	cmp	w8, #0x1
  41407c:	b.eq	4140b8 <_obstack_memory_used@@Base+0x2e2c>  // b.none
  414080:	cbnz	w8, 4140d0 <_obstack_memory_used@@Base+0x2e44>
  414084:	lsl	x25, x26, #3
  414088:	mov	x0, x25
  41408c:	bl	4028f0 <malloc@plt>
  414090:	str	x0, [x28, #8]
  414094:	cbz	x0, 4141b8 <_obstack_memory_used@@Base+0x2f2c>
  414098:	mov	x24, x0
  41409c:	mov	x0, x25
  4140a0:	bl	4028f0 <malloc@plt>
  4140a4:	str	x0, [x28, #16]
  4140a8:	cbz	x0, 4141b0 <_obstack_memory_used@@Base+0x2f24>
  4140ac:	str	x26, [x28]
  4140b0:	mov	w8, #0x1                   	// #1
  4140b4:	b	4140d8 <_obstack_memory_used@@Base+0x2e4c>
  4140b8:	ldr	x9, [x28]
  4140bc:	cmp	x26, x9
  4140c0:	b.hi	414180 <_obstack_memory_used@@Base+0x2ef4>  // b.pmore
  4140c4:	mov	w8, #0x1                   	// #1
  4140c8:	mov	x26, x9
  4140cc:	b	4140d8 <_obstack_memory_used@@Base+0x2e4c>
  4140d0:	ldr	x26, [x28]
  4140d4:	mov	w8, #0x2                   	// #2
  4140d8:	cmp	x23, #0x1
  4140dc:	b.lt	41410c <_obstack_memory_used@@Base+0x2e80>  // b.tstop
  4140e0:	ldp	x9, x10, [x28, #8]
  4140e4:	add	x11, x22, #0x8
  4140e8:	mov	x12, x23
  4140ec:	ldur	x13, [x11, #-8]
  4140f0:	subs	x12, x12, #0x1
  4140f4:	str	x13, [x9], #8
  4140f8:	ldr	x13, [x11], #16
  4140fc:	str	x13, [x10], #8
  414100:	b.ne	4140ec <_obstack_memory_used@@Base+0x2e60>  // b.any
  414104:	ldr	x26, [x28]
  414108:	b	414110 <_obstack_memory_used@@Base+0x2e84>
  41410c:	mov	x23, xzr
  414110:	cmp	x23, x26
  414114:	b.cs	414138 <_obstack_memory_used@@Base+0x2eac>  // b.hs, b.nlast
  414118:	ldp	x10, x9, [x28, #8]
  41411c:	mov	x11, #0xffffffffffffffff    	// #-1
  414120:	str	x11, [x9, x23, lsl #3]
  414124:	str	x11, [x10, x23, lsl #3]
  414128:	ldr	x12, [x28]
  41412c:	add	x23, x23, #0x1
  414130:	cmp	x23, x12
  414134:	b.cc	414120 <_obstack_memory_used@@Base+0x2e94>  // b.lo, b.ul, b.last
  414138:	ldrb	w9, [x21, #56]
  41413c:	and	w9, w9, #0xfffffff9
  414140:	orr	w9, w9, w8, lsl #1
  414144:	strb	w9, [x21, #56]
  414148:	cbz	w8, 414168 <_obstack_memory_used@@Base+0x2edc>
  41414c:	ldur	w8, [x29, #-4]
  414150:	tbz	w8, #0, 414160 <_obstack_memory_used@@Base+0x2ed4>
  414154:	ldr	x8, [x22, #8]
  414158:	sub	x19, x8, x20
  41415c:	b	41403c <_obstack_memory_used@@Base+0x2db0>
  414160:	ldr	x19, [x22]
  414164:	b	41403c <_obstack_memory_used@@Base+0x2db0>
  414168:	mov	x19, #0xfffffffffffffffe    	// #-2
  41416c:	b	41403c <_obstack_memory_used@@Base+0x2db0>
  414170:	mov	x19, #0xffffffffffffffff    	// #-1
  414174:	b	414044 <_obstack_memory_used@@Base+0x2db8>
  414178:	mov	x19, #0xfffffffffffffffe    	// #-2
  41417c:	b	414044 <_obstack_memory_used@@Base+0x2db8>
  414180:	ldr	x0, [x28, #8]
  414184:	lsl	x25, x26, #3
  414188:	mov	x1, x25
  41418c:	bl	402a50 <realloc@plt>
  414190:	cbz	x0, 4141b8 <_obstack_memory_used@@Base+0x2f2c>
  414194:	mov	x24, x0
  414198:	ldr	x0, [x28, #16]
  41419c:	mov	x1, x25
  4141a0:	bl	402a50 <realloc@plt>
  4141a4:	cbz	x0, 4141b0 <_obstack_memory_used@@Base+0x2f24>
  4141a8:	stp	x24, x0, [x28, #8]
  4141ac:	b	4140ac <_obstack_memory_used@@Base+0x2e20>
  4141b0:	mov	x0, x24
  4141b4:	bl	402be0 <free@plt>
  4141b8:	mov	w8, wzr
  4141bc:	b	414138 <_obstack_memory_used@@Base+0x2eac>
  4141c0:	mov	x6, x5
  4141c4:	mov	x5, x2
  4141c8:	mov	w7, wzr
  4141cc:	b	413f1c <_obstack_memory_used@@Base+0x2c90>
  4141d0:	sub	sp, sp, #0x20
  4141d4:	mov	x8, x6
  4141d8:	mov	w9, #0x1                   	// #1
  4141dc:	str	x7, [sp]
  4141e0:	mov	x6, xzr
  4141e4:	mov	x7, x8
  4141e8:	stp	x29, x30, [sp, #16]
  4141ec:	add	x29, sp, #0x10
  4141f0:	strb	w9, [sp, #8]
  4141f4:	bl	414204 <_obstack_memory_used@@Base+0x2f78>
  4141f8:	ldp	x29, x30, [sp, #16]
  4141fc:	add	sp, sp, #0x20
  414200:	ret
  414204:	sub	sp, sp, #0x70
  414208:	stp	x22, x21, [sp, #80]
  41420c:	adds	x22, x2, x4
  414210:	stp	x29, x30, [sp, #16]
  414214:	stp	x28, x27, [sp, #32]
  414218:	stp	x26, x25, [sp, #48]
  41421c:	stp	x24, x23, [sp, #64]
  414220:	stp	x20, x19, [sp, #96]
  414224:	add	x29, sp, #0x10
  414228:	b.vs	414310 <_obstack_memory_used@@Base+0x3084>
  41422c:	ldr	x23, [x29, #96]
  414230:	orr	x8, x4, x2
  414234:	mov	x28, x4
  414238:	mov	x19, x2
  41423c:	orr	x8, x8, x23
  414240:	tbnz	x8, #63, 414310 <_obstack_memory_used@@Base+0x3084>
  414244:	mov	x9, x7
  414248:	mov	x20, x6
  41424c:	mov	x21, x5
  414250:	mov	x25, x1
  414254:	mov	x24, x0
  414258:	cmp	x28, #0x1
  41425c:	b.lt	4142a8 <_obstack_memory_used@@Base+0x301c>  // b.tstop
  414260:	mov	x27, x3
  414264:	cmp	x19, #0x1
  414268:	b.lt	4142b0 <_obstack_memory_used@@Base+0x3024>  // b.tstop
  41426c:	mov	x0, x22
  414270:	str	x9, [sp, #8]
  414274:	bl	4028f0 <malloc@plt>
  414278:	cbz	x0, 414310 <_obstack_memory_used@@Base+0x3084>
  41427c:	mov	x1, x25
  414280:	mov	x2, x19
  414284:	mov	x26, x0
  414288:	bl	402710 <memcpy@plt>
  41428c:	add	x0, x26, x19
  414290:	mov	x1, x27
  414294:	mov	x2, x28
  414298:	bl	402710 <memcpy@plt>
  41429c:	ldr	x9, [sp, #8]
  4142a0:	mov	x25, x26
  4142a4:	b	4142b8 <_obstack_memory_used@@Base+0x302c>
  4142a8:	mov	x26, xzr
  4142ac:	b	4142b8 <_obstack_memory_used@@Base+0x302c>
  4142b0:	mov	x26, xzr
  4142b4:	mov	x25, x27
  4142b8:	ldrb	w8, [x29, #104]
  4142bc:	mov	x0, x24
  4142c0:	mov	x1, x25
  4142c4:	mov	x2, x22
  4142c8:	and	w7, w8, #0x1
  4142cc:	mov	x3, x21
  4142d0:	mov	x4, x20
  4142d4:	mov	x5, x23
  4142d8:	mov	x6, x9
  4142dc:	bl	413f1c <_obstack_memory_used@@Base+0x2c90>
  4142e0:	mov	x19, x0
  4142e4:	mov	x0, x26
  4142e8:	bl	402be0 <free@plt>
  4142ec:	mov	x0, x19
  4142f0:	ldp	x20, x19, [sp, #96]
  4142f4:	ldp	x22, x21, [sp, #80]
  4142f8:	ldp	x24, x23, [sp, #64]
  4142fc:	ldp	x26, x25, [sp, #48]
  414300:	ldp	x28, x27, [sp, #32]
  414304:	ldp	x29, x30, [sp, #16]
  414308:	add	sp, sp, #0x70
  41430c:	ret
  414310:	mov	x0, #0xfffffffffffffffe    	// #-2
  414314:	b	4142f0 <_obstack_memory_used@@Base+0x3064>
  414318:	sub	sp, sp, #0x20
  41431c:	stp	x29, x30, [sp, #16]
  414320:	add	x29, sp, #0x10
  414324:	ldr	x8, [x29, #16]
  414328:	strb	wzr, [sp, #8]
  41432c:	str	x8, [sp]
  414330:	bl	414204 <_obstack_memory_used@@Base+0x2f78>
  414334:	ldp	x29, x30, [sp, #16]
  414338:	add	sp, sp, #0x20
  41433c:	ret
  414340:	ldrb	w8, [x0, #56]
  414344:	cmp	x2, #0x0
  414348:	csel	x9, xzr, x4, eq  // eq = none
  41434c:	csel	x10, xzr, x3, eq  // eq = none
  414350:	and	w8, w8, #0xfffffff9
  414354:	orr	w11, w8, #0x2
  414358:	csel	w8, w8, w11, eq  // eq = none
  41435c:	strb	w8, [x0, #56]
  414360:	stp	x10, x9, [x1, #8]
  414364:	str	x2, [x1]
  414368:	ret
  41436c:	ldr	w8, [x0, #8]
  414370:	mov	w9, #0xff                  	// #255
  414374:	movk	w9, #0x4, lsl #16
  414378:	and	w8, w8, w9
  41437c:	cmp	w8, #0x3
  414380:	b.eq	414394 <_obstack_memory_used@@Base+0x3108>  // b.none
  414384:	cmp	w8, #0x6
  414388:	b.ne	41439c <_obstack_memory_used@@Base+0x3110>  // b.any
  41438c:	ldr	x0, [x0]
  414390:	b	414408 <_obstack_memory_used@@Base+0x317c>
  414394:	ldr	x0, [x0]
  414398:	b	402be0 <free@plt>
  41439c:	ret
  4143a0:	stp	x29, x30, [sp, #-32]!
  4143a4:	str	x19, [sp, #16]
  4143a8:	mov	x19, x0
  4143ac:	ldr	x0, [x0, #48]
  4143b0:	mov	x29, sp
  4143b4:	bl	402be0 <free@plt>
  4143b8:	ldr	x0, [x19, #72]
  4143bc:	bl	402be0 <free@plt>
  4143c0:	ldr	x8, [x19, #80]
  4143c4:	add	x9, x19, #0x8
  4143c8:	cmp	x8, x9
  4143cc:	b.eq	4143e0 <_obstack_memory_used@@Base+0x3154>  // b.none
  4143d0:	ldr	x0, [x8, #16]
  4143d4:	bl	402be0 <free@plt>
  4143d8:	ldr	x0, [x19, #80]
  4143dc:	bl	402be0 <free@plt>
  4143e0:	ldr	x0, [x19, #24]
  4143e4:	bl	402be0 <free@plt>
  4143e8:	ldr	x0, [x19, #96]
  4143ec:	bl	402be0 <free@plt>
  4143f0:	ldr	x0, [x19, #88]
  4143f4:	bl	402be0 <free@plt>
  4143f8:	mov	x0, x19
  4143fc:	ldr	x19, [sp, #16]
  414400:	ldp	x29, x30, [sp], #32
  414404:	b	402be0 <free@plt>
  414408:	stp	x29, x30, [sp, #-32]!
  41440c:	str	x19, [sp, #16]
  414410:	mov	x19, x0
  414414:	ldr	x0, [x0]
  414418:	mov	x29, sp
  41441c:	bl	402be0 <free@plt>
  414420:	ldr	x0, [x19, #8]
  414424:	bl	402be0 <free@plt>
  414428:	ldr	x0, [x19, #16]
  41442c:	bl	402be0 <free@plt>
  414430:	ldr	x0, [x19, #24]
  414434:	bl	402be0 <free@plt>
  414438:	mov	x0, x19
  41443c:	ldr	x19, [sp, #16]
  414440:	ldp	x29, x30, [sp], #32
  414444:	b	402be0 <free@plt>
  414448:	stp	x29, x30, [sp, #-32]!
  41444c:	stp	x20, x19, [sp, #16]
  414450:	ldr	x19, [x0]
  414454:	mov	x29, sp
  414458:	ldr	x0, [x19, #112]
  41445c:	cbz	x0, 414470 <_obstack_memory_used@@Base+0x31e4>
  414460:	ldr	x20, [x0]
  414464:	bl	402be0 <free@plt>
  414468:	mov	x0, x20
  41446c:	cbnz	x20, 414460 <_obstack_memory_used@@Base+0x31d4>
  414470:	ldr	x0, [x19, #32]
  414474:	mov	w8, #0xf                   	// #15
  414478:	str	w8, [x19, #128]
  41447c:	stp	xzr, xzr, [x19, #104]
  414480:	bl	402be0 <free@plt>
  414484:	str	xzr, [x19, #32]
  414488:	ldp	x20, x19, [sp, #16]
  41448c:	ldp	x29, x30, [sp], #32
  414490:	ret
  414494:	stp	x29, x30, [sp, #-32]!
  414498:	str	x19, [sp, #16]
  41449c:	mov	x19, x0
  4144a0:	ldr	x0, [x0, #16]
  4144a4:	mov	x29, sp
  4144a8:	bl	402be0 <free@plt>
  4144ac:	ldr	x0, [x19, #24]
  4144b0:	bl	402be0 <free@plt>
  4144b4:	ldrb	w8, [x19, #139]
  4144b8:	cbz	w8, 4144cc <_obstack_memory_used@@Base+0x3240>
  4144bc:	ldr	x0, [x19, #8]
  4144c0:	ldr	x19, [sp, #16]
  4144c4:	ldp	x29, x30, [sp], #32
  4144c8:	b	402be0 <free@plt>
  4144cc:	ldr	x19, [sp, #16]
  4144d0:	ldp	x29, x30, [sp], #32
  4144d4:	ret
  4144d8:	stp	x29, x30, [sp, #-32]!
  4144dc:	stp	x20, x19, [sp, #16]
  4144e0:	ldr	w8, [x0, #144]
  4144e4:	mov	x19, x0
  4144e8:	mov	x20, x1
  4144ec:	mov	x29, sp
  4144f0:	cmp	w8, #0x2
  4144f4:	b.lt	414530 <_obstack_memory_used@@Base+0x32a4>  // b.tstop
  4144f8:	lsr	x8, x20, #61
  4144fc:	cbnz	x8, 414560 <_obstack_memory_used@@Base+0x32d4>
  414500:	ldr	x0, [x19, #16]
  414504:	lsl	x1, x20, #2
  414508:	bl	402a50 <realloc@plt>
  41450c:	cbz	x0, 414560 <_obstack_memory_used@@Base+0x32d4>
  414510:	mov	x8, x0
  414514:	ldr	x0, [x19, #24]
  414518:	str	x8, [x19, #16]
  41451c:	cbz	x0, 414530 <_obstack_memory_used@@Base+0x32a4>
  414520:	lsl	x1, x20, #3
  414524:	bl	402a50 <realloc@plt>
  414528:	cbz	x0, 414560 <_obstack_memory_used@@Base+0x32d4>
  41452c:	str	x0, [x19, #24]
  414530:	ldrb	w8, [x19, #139]
  414534:	cbz	w8, 41454c <_obstack_memory_used@@Base+0x32c0>
  414538:	ldr	x0, [x19, #8]
  41453c:	mov	x1, x20
  414540:	bl	402a50 <realloc@plt>
  414544:	cbz	x0, 414560 <_obstack_memory_used@@Base+0x32d4>
  414548:	str	x0, [x19, #8]
  41454c:	mov	w0, wzr
  414550:	str	x20, [x19, #64]
  414554:	ldp	x20, x19, [sp, #16]
  414558:	ldp	x29, x30, [sp], #32
  41455c:	ret
  414560:	mov	w0, #0xc                   	// #12
  414564:	b	414554 <_obstack_memory_used@@Base+0x32c8>
  414568:	sub	sp, sp, #0xc0
  41456c:	stp	x29, x30, [sp, #96]
  414570:	stp	x28, x27, [sp, #112]
  414574:	stp	x26, x25, [sp, #128]
  414578:	stp	x24, x23, [sp, #144]
  41457c:	stp	x22, x21, [sp, #160]
  414580:	stp	x20, x19, [sp, #176]
  414584:	ldr	x8, [x0, #64]
  414588:	ldr	x9, [x0, #88]
  41458c:	ldrb	w10, [x0, #138]
  414590:	ldr	x26, [x0, #48]
  414594:	mov	x24, x0
  414598:	cmp	x8, x9
  41459c:	csel	x25, x9, x8, gt
  4145a0:	add	x29, sp, #0x60
  4145a4:	str	x0, [sp, #8]
  4145a8:	cbnz	w10, 4145bc <_obstack_memory_used@@Base+0x3330>
  4145ac:	ldr	x8, [x24, #120]
  4145b0:	cbnz	x8, 4145bc <_obstack_memory_used@@Base+0x3330>
  4145b4:	ldrb	w8, [x24, #140]
  4145b8:	cbz	w8, 4145c4 <_obstack_memory_used@@Base+0x3338>
  4145bc:	ldr	x23, [x24, #56]
  4145c0:	b	414770 <_obstack_memory_used@@Base+0x34e4>
  4145c4:	cmp	x25, x26
  4145c8:	b.le	414768 <_obstack_memory_used@@Base+0x34dc>
  4145cc:	add	x20, x24, #0x20
  4145d0:	ldr	x21, [x24, #40]
  4145d4:	ldr	x22, [x24]
  4145d8:	add	x8, x21, x26
  4145dc:	ldrsb	w23, [x22, x8]
  4145e0:	tbnz	w23, #31, 41461c <_obstack_memory_used@@Base+0x3390>
  4145e4:	mov	x0, x20
  4145e8:	bl	402b40 <mbsinit@plt>
  4145ec:	cbz	w0, 41461c <_obstack_memory_used@@Base+0x3390>
  4145f0:	and	x21, x23, #0xff
  4145f4:	bl	402a60 <__ctype_toupper_loc@plt>
  4145f8:	ldr	x8, [x0]
  4145fc:	ldr	x9, [x24, #8]
  414600:	add	x28, x26, #0x1
  414604:	ldr	w8, [x8, x21, lsl #2]
  414608:	strb	w8, [x9, x26]
  41460c:	ldp	x8, x9, [x24, #8]
  414610:	ldrb	w8, [x8, x26]
  414614:	str	w8, [x9, x26, lsl #2]
  414618:	b	4146ec <_obstack_memory_used@@Base+0x3460>
  41461c:	ldr	x8, [x20]
  414620:	add	x9, x22, x21
  414624:	sub	x2, x25, x26
  414628:	add	x1, x9, x26
  41462c:	add	x0, sp, #0x14
  414630:	mov	x3, x20
  414634:	stur	x8, [x29, #-8]
  414638:	bl	410f04 <wcrtomb@plt+0xe0d4>
  41463c:	sub	x24, x0, #0x1
  414640:	mov	x21, x0
  414644:	cmn	x24, #0x4
  414648:	b.hi	414700 <_obstack_memory_used@@Base+0x3474>  // b.pmore
  41464c:	ldr	w0, [sp, #20]
  414650:	bl	402d60 <towupper@plt>
  414654:	ldr	w8, [sp, #20]
  414658:	mov	w22, w0
  41465c:	cmp	w0, w8
  414660:	b.ne	41467c <_obstack_memory_used@@Base+0x33f0>  // b.any
  414664:	ldr	x19, [sp, #8]
  414668:	ldr	x8, [x19]
  41466c:	ldr	x9, [x19, #40]
  414670:	add	x8, x8, x9
  414674:	add	x23, x8, x26
  414678:	b	41469c <_obstack_memory_used@@Base+0x3410>
  41467c:	add	x0, sp, #0x18
  414680:	sub	x2, x29, #0x8
  414684:	mov	w1, w22
  414688:	add	x23, sp, #0x18
  41468c:	bl	402e30 <wcrtomb@plt>
  414690:	ldr	x19, [sp, #8]
  414694:	cmp	x21, x0
  414698:	b.ne	414754 <_obstack_memory_used@@Base+0x34c8>  // b.any
  41469c:	ldr	x8, [x19, #8]
  4146a0:	mov	x1, x23
  4146a4:	mov	x2, x21
  4146a8:	add	x0, x8, x26
  4146ac:	bl	402710 <memcpy@plt>
  4146b0:	ldr	x8, [x19, #16]
  4146b4:	add	x23, x21, x26
  4146b8:	add	x28, x26, #0x1
  4146bc:	cmp	x28, x23
  4146c0:	str	w22, [x8, x26, lsl #2]
  4146c4:	b.ge	4146ec <_obstack_memory_used@@Base+0x3460>  // b.tcont
  4146c8:	add	x8, x8, x26, lsl #2
  4146cc:	lsl	x9, x21, #2
  4146d0:	add	x0, x8, #0x4
  4146d4:	sub	x2, x9, #0x4
  4146d8:	mov	w1, #0xff                  	// #255
  4146dc:	bl	4029d0 <memset@plt>
  4146e0:	subs	x24, x24, #0x1
  4146e4:	b.ne	4146e0 <_obstack_memory_used@@Base+0x3454>  // b.any
  4146e8:	mov	x28, x23
  4146ec:	ldr	x24, [sp, #8]
  4146f0:	cmp	x25, x28
  4146f4:	mov	x26, x28
  4146f8:	b.gt	4145d0 <_obstack_memory_used@@Base+0x3344>
  4146fc:	b	414a6c <_obstack_memory_used@@Base+0x37e0>
  414700:	ldr	x24, [sp, #8]
  414704:	add	x8, x21, #0x1
  414708:	cmp	x8, #0x2
  41470c:	b.cc	414720 <_obstack_memory_used@@Base+0x3494>  // b.lo, b.ul, b.last
  414710:	ldr	x8, [x24, #64]
  414714:	ldr	x9, [x24, #88]
  414718:	cmp	x8, x9
  41471c:	b.lt	414760 <_obstack_memory_used@@Base+0x34d4>  // b.tstop
  414720:	ldr	x8, [x24, #40]
  414724:	ldp	x9, x10, [x24]
  414728:	add	x28, x26, #0x1
  41472c:	cmn	x21, #0x1
  414730:	add	x8, x8, x26
  414734:	ldrb	w8, [x9, x8]
  414738:	strb	w8, [x10, x26]
  41473c:	ldr	x9, [x24, #16]
  414740:	str	w8, [x9, x26, lsl #2]
  414744:	b.ne	4146ec <_obstack_memory_used@@Base+0x3460>  // b.any
  414748:	ldur	x8, [x29, #-8]
  41474c:	str	x8, [x20]
  414750:	b	4146ec <_obstack_memory_used@@Base+0x3460>
  414754:	mov	x28, x26
  414758:	mov	x24, x19
  41475c:	b	414780 <_obstack_memory_used@@Base+0x34f4>
  414760:	ldur	x8, [x29, #-8]
  414764:	str	x8, [x20]
  414768:	mov	x28, x26
  41476c:	b	414a6c <_obstack_memory_used@@Base+0x37e0>
  414770:	cmp	x26, x25
  414774:	mov	x28, x26
  414778:	mov	x26, x23
  41477c:	b.ge	414a6c <_obstack_memory_used@@Base+0x37e0>  // b.tcont
  414780:	mov	x21, x24
  414784:	ldr	x8, [x21, #32]!
  414788:	sub	x2, x25, x28
  41478c:	stur	x8, [x29, #-8]
  414790:	ldr	x8, [x21, #88]
  414794:	cbnz	x8, 41486c <_obstack_memory_used@@Base+0x35e0>
  414798:	ldr	x8, [x24]
  41479c:	ldr	x9, [x24, #40]
  4147a0:	add	x8, x8, x9
  4147a4:	add	x24, x8, x26
  4147a8:	add	x0, sp, #0x10
  4147ac:	mov	x1, x24
  4147b0:	mov	x3, x21
  4147b4:	bl	410f04 <wcrtomb@plt+0xe0d4>
  4147b8:	sub	x27, x0, #0x1
  4147bc:	mov	x20, x0
  4147c0:	cmn	x27, #0x4
  4147c4:	b.hi	4148c4 <_obstack_memory_used@@Base+0x3638>  // b.pmore
  4147c8:	ldr	w0, [sp, #16]
  4147cc:	mov	x19, x25
  4147d0:	bl	402d60 <towupper@plt>
  4147d4:	ldr	w8, [sp, #16]
  4147d8:	mov	w22, w0
  4147dc:	cmp	w0, w8
  4147e0:	b.ne	4147ec <_obstack_memory_used@@Base+0x3560>  // b.any
  4147e4:	mov	x25, x24
  4147e8:	b	414808 <_obstack_memory_used@@Base+0x357c>
  4147ec:	add	x0, sp, #0x18
  4147f0:	sub	x2, x29, #0x8
  4147f4:	mov	w1, w22
  4147f8:	add	x25, sp, #0x18
  4147fc:	bl	402e30 <wcrtomb@plt>
  414800:	subs	x9, x0, x20
  414804:	b.ne	414934 <_obstack_memory_used@@Base+0x36a8>  // b.any
  414808:	ldr	x24, [sp, #8]
  41480c:	mov	x1, x25
  414810:	mov	x2, x20
  414814:	ldr	x8, [x24, #8]
  414818:	add	x0, x8, x28
  41481c:	bl	402710 <memcpy@plt>
  414820:	ldrb	w8, [x24, #140]
  414824:	cbnz	w8, 414a3c <_obstack_memory_used@@Base+0x37b0>
  414828:	ldr	x8, [x24, #16]
  41482c:	add	x23, x20, x26
  414830:	add	x21, x20, x28
  414834:	add	x26, x28, #0x1
  414838:	cmp	x26, x21
  41483c:	mov	x25, x19
  414840:	str	w22, [x8, x28, lsl #2]
  414844:	b.ge	414770 <_obstack_memory_used@@Base+0x34e4>  // b.tcont
  414848:	add	x0, x8, x26, lsl #2
  41484c:	lsl	x8, x20, #2
  414850:	sub	x2, x8, #0x4
  414854:	mov	w1, #0xff                  	// #255
  414858:	bl	4029d0 <memset@plt>
  41485c:	subs	x27, x27, #0x1
  414860:	b.ne	41485c <_obstack_memory_used@@Base+0x35d0>  // b.any
  414864:	mov	x26, x21
  414868:	b	414770 <_obstack_memory_used@@Base+0x34e4>
  41486c:	ldr	w9, [x24, #144]
  414870:	add	x24, sp, #0x18
  414874:	cmp	w9, #0x1
  414878:	b.lt	4147a8 <_obstack_memory_used@@Base+0x351c>  // b.tstop
  41487c:	cmp	x2, #0x1
  414880:	b.lt	4147a8 <_obstack_memory_used@@Base+0x351c>  // b.tstop
  414884:	ldr	x12, [sp, #8]
  414888:	mov	x10, xzr
  41488c:	ldr	x11, [x12, #40]
  414890:	ldr	x12, [x12]
  414894:	add	x11, x26, x11
  414898:	add	x11, x12, x11
  41489c:	ldrb	w12, [x11, x10]
  4148a0:	add	x24, sp, #0x18
  4148a4:	ldrb	w12, [x8, x12]
  4148a8:	strb	w12, [x24, x10]
  4148ac:	add	x10, x10, #0x1
  4148b0:	cmp	x10, x9
  4148b4:	b.cs	4147a8 <_obstack_memory_used@@Base+0x351c>  // b.hs, b.nlast
  4148b8:	cmp	x2, x10
  4148bc:	b.gt	41489c <_obstack_memory_used@@Base+0x3610>
  4148c0:	b	4147a8 <_obstack_memory_used@@Base+0x351c>
  4148c4:	ldr	x19, [sp, #8]
  4148c8:	add	x8, x20, #0x1
  4148cc:	cmp	x8, #0x2
  4148d0:	b.cc	4148e4 <_obstack_memory_used@@Base+0x3658>  // b.lo, b.ul, b.last
  4148d4:	ldr	x8, [x19, #64]
  4148d8:	ldr	x9, [x19, #88]
  4148dc:	cmp	x8, x9
  4148e0:	b.lt	414a60 <_obstack_memory_used@@Base+0x37d4>  // b.tstop
  4148e4:	ldr	x8, [x19, #40]
  4148e8:	ldr	x10, [x19]
  4148ec:	ldr	x9, [x19, #120]
  4148f0:	mov	x24, x19
  4148f4:	add	x8, x8, x26
  4148f8:	ldrb	w8, [x10, x8]
  4148fc:	cbnz	x9, 414a9c <_obstack_memory_used@@Base+0x3810>
  414900:	ldr	x9, [x24, #8]
  414904:	strb	w8, [x9, x28]
  414908:	ldrb	w9, [x24, #140]
  41490c:	cbnz	w9, 414aa4 <_obstack_memory_used@@Base+0x3818>
  414910:	ldr	x9, [x24, #16]
  414914:	add	x23, x26, #0x1
  414918:	add	x26, x28, #0x1
  41491c:	cmn	x20, #0x1
  414920:	str	w8, [x9, x28, lsl #2]
  414924:	b.ne	414770 <_obstack_memory_used@@Base+0x34e4>  // b.any
  414928:	ldur	x8, [x29, #-8]
  41492c:	str	x8, [x21]
  414930:	b	414770 <_obstack_memory_used@@Base+0x34e4>
  414934:	mov	x23, x0
  414938:	cmn	x0, #0x1
  41493c:	mov	x25, x24
  414940:	b.eq	414808 <_obstack_memory_used@@Base+0x357c>  // b.none
  414944:	ldr	x19, [sp, #8]
  414948:	add	x24, x23, x28
  41494c:	ldr	x8, [x19, #64]
  414950:	cmp	x24, x8
  414954:	b.hi	414a60 <_obstack_memory_used@@Base+0x37d4>  // b.pmore
  414958:	ldr	x0, [x19, #24]
  41495c:	mov	x21, x9
  414960:	cbnz	x0, 414974 <_obstack_memory_used@@Base+0x36e8>
  414964:	lsl	x0, x8, #3
  414968:	bl	4028f0 <malloc@plt>
  41496c:	str	x0, [x19, #24]
  414970:	cbz	x0, 414a94 <_obstack_memory_used@@Base+0x3808>
  414974:	ldrb	w8, [x19, #140]
  414978:	cbnz	w8, 4149a0 <_obstack_memory_used@@Base+0x3714>
  41497c:	cbz	x28, 414994 <_obstack_memory_used@@Base+0x3708>
  414980:	mov	x8, xzr
  414984:	str	x8, [x0, x8, lsl #3]
  414988:	add	x8, x8, #0x1
  41498c:	cmp	x28, x8
  414990:	b.ne	414984 <_obstack_memory_used@@Base+0x36f8>  // b.any
  414994:	ldr	x19, [sp, #8]
  414998:	mov	w8, #0x1                   	// #1
  41499c:	strb	w8, [x19, #140]
  4149a0:	ldr	x8, [x19, #8]
  4149a4:	add	x1, sp, #0x18
  4149a8:	mov	x2, x23
  4149ac:	add	x0, x8, x28
  4149b0:	bl	402710 <memcpy@plt>
  4149b4:	ldr	x8, [x19, #16]
  4149b8:	cmp	x23, #0x2
  4149bc:	str	w22, [x8, x28, lsl #2]
  4149c0:	ldr	x9, [x19, #24]
  4149c4:	str	x26, [x9, x28, lsl #3]
  4149c8:	b.cc	4149fc <_obstack_memory_used@@Base+0x3770>  // b.lo, b.ul, b.last
  4149cc:	add	x8, x8, x28, lsl #2
  4149d0:	add	x9, x9, x28, lsl #3
  4149d4:	mov	w10, #0x1                   	// #1
  4149d8:	mov	w11, #0xffffffff            	// #-1
  4149dc:	cmp	x10, x20
  4149e0:	csel	x12, x10, x27, cc  // cc = lo, ul, last
  4149e4:	add	x12, x12, x26
  4149e8:	str	x12, [x9, x10, lsl #3]
  4149ec:	str	w11, [x8, x10, lsl #2]
  4149f0:	add	x10, x10, #0x1
  4149f4:	cmp	x23, x10
  4149f8:	b.ne	4149dc <_obstack_memory_used@@Base+0x3750>  // b.any
  4149fc:	ldr	x10, [sp, #8]
  414a00:	ldp	x8, x9, [x10, #88]
  414a04:	add	x8, x8, x21
  414a08:	cmp	x9, x26
  414a0c:	str	x8, [x10, #88]
  414a10:	b.le	414a20 <_obstack_memory_used@@Base+0x3794>
  414a14:	ldr	x9, [x10, #104]
  414a18:	add	x9, x9, x21
  414a1c:	str	x9, [x10, #104]
  414a20:	ldr	x9, [x10, #64]
  414a24:	add	x23, x20, x26
  414a28:	mov	x26, x24
  414a2c:	mov	x24, x10
  414a30:	cmp	x9, x8
  414a34:	csel	x25, x8, x9, gt
  414a38:	b	414770 <_obstack_memory_used@@Base+0x34e4>
  414a3c:	ldr	x8, [x24, #24]
  414a40:	mov	x9, x26
  414a44:	mov	x10, x20
  414a48:	add	x8, x8, x28, lsl #3
  414a4c:	str	x9, [x8], #8
  414a50:	subs	x10, x10, #0x1
  414a54:	add	x9, x9, #0x1
  414a58:	b.ne	414a4c <_obstack_memory_used@@Base+0x37c0>  // b.any
  414a5c:	b	414828 <_obstack_memory_used@@Base+0x359c>
  414a60:	ldur	x8, [x29, #-8]
  414a64:	mov	x24, x19
  414a68:	str	x8, [x21]
  414a6c:	mov	w0, wzr
  414a70:	stp	x28, x26, [x24, #48]
  414a74:	ldp	x20, x19, [sp, #176]
  414a78:	ldp	x22, x21, [sp, #160]
  414a7c:	ldp	x24, x23, [sp, #144]
  414a80:	ldp	x26, x25, [sp, #128]
  414a84:	ldp	x28, x27, [sp, #112]
  414a88:	ldp	x29, x30, [sp, #96]
  414a8c:	add	sp, sp, #0xc0
  414a90:	ret
  414a94:	mov	w0, #0xc                   	// #12
  414a98:	b	414a74 <_obstack_memory_used@@Base+0x37e8>
  414a9c:	ldrb	w8, [x9, x8]
  414aa0:	b	414900 <_obstack_memory_used@@Base+0x3674>
  414aa4:	ldr	x9, [x24, #24]
  414aa8:	str	x26, [x9, x28, lsl #3]
  414aac:	b	414910 <_obstack_memory_used@@Base+0x3684>
  414ab0:	stp	x29, x30, [sp, #-48]!
  414ab4:	stp	x20, x19, [sp, #32]
  414ab8:	ldr	x8, [x0, #64]
  414abc:	ldr	x9, [x0, #88]
  414ac0:	ldr	x20, [x0, #48]
  414ac4:	str	x21, [sp, #16]
  414ac8:	mov	x19, x0
  414acc:	cmp	x8, x9
  414ad0:	csel	x21, x9, x8, gt
  414ad4:	mov	x29, sp
  414ad8:	cmp	x20, x21
  414adc:	b.ge	414b14 <_obstack_memory_used@@Base+0x3888>  // b.tcont
  414ae0:	ldr	x8, [x19]
  414ae4:	ldr	x9, [x19, #40]
  414ae8:	add	x9, x8, x9
  414aec:	ldr	x8, [x19, #120]
  414af0:	ldrb	w0, [x9, x20]
  414af4:	cbnz	x8, 414b0c <_obstack_memory_used@@Base+0x3880>
  414af8:	bl	402900 <toupper@plt>
  414afc:	ldr	x8, [x19, #8]
  414b00:	strb	w0, [x8, x20]
  414b04:	add	x20, x20, #0x1
  414b08:	b	414ad8 <_obstack_memory_used@@Base+0x384c>
  414b0c:	ldrb	w0, [x8, x0]
  414b10:	b	414af8 <_obstack_memory_used@@Base+0x386c>
  414b14:	stp	x20, x20, [x19, #48]
  414b18:	ldp	x20, x19, [sp, #32]
  414b1c:	ldr	x21, [sp, #16]
  414b20:	ldp	x29, x30, [sp], #48
  414b24:	ret
  414b28:	sub	sp, sp, #0x90
  414b2c:	stp	x29, x30, [sp, #80]
  414b30:	stp	x24, x23, [sp, #96]
  414b34:	stp	x22, x21, [sp, #112]
  414b38:	stp	x20, x19, [sp, #128]
  414b3c:	ldr	x8, [x0, #64]
  414b40:	ldr	x9, [x0, #88]
  414b44:	ldr	x23, [x0, #48]
  414b48:	mov	x19, x0
  414b4c:	add	x29, sp, #0x50
  414b50:	cmp	x8, x9
  414b54:	csel	x22, x9, x8, gt
  414b58:	cmp	x22, x23
  414b5c:	b.le	414cdc <_obstack_memory_used@@Base+0x3a50>
  414b60:	add	x20, x19, #0x20
  414b64:	ldr	x8, [x19, #120]
  414b68:	ldr	x24, [x19, #32]
  414b6c:	sub	x2, x22, x23
  414b70:	cbnz	x8, 414c34 <_obstack_memory_used@@Base+0x39a8>
  414b74:	ldr	x8, [x19]
  414b78:	ldr	x9, [x19, #40]
  414b7c:	add	x8, x8, x9
  414b80:	add	x1, x8, x23
  414b84:	add	x0, sp, #0xc
  414b88:	mov	x3, x20
  414b8c:	bl	410f04 <wcrtomb@plt+0xe0d4>
  414b90:	add	x8, x0, #0x1
  414b94:	cmp	x8, #0x2
  414b98:	b.cc	414bb8 <_obstack_memory_used@@Base+0x392c>  // b.lo, b.ul, b.last
  414b9c:	mov	x21, x0
  414ba0:	cmn	x0, #0x2
  414ba4:	b.ne	414be0 <_obstack_memory_used@@Base+0x3954>  // b.any
  414ba8:	ldr	x8, [x19, #64]
  414bac:	ldr	x9, [x19, #88]
  414bb0:	cmp	x8, x9
  414bb4:	b.lt	414cd8 <_obstack_memory_used@@Base+0x3a4c>  // b.tstop
  414bb8:	ldr	x8, [x19, #40]
  414bbc:	ldr	x9, [x19]
  414bc0:	add	x8, x8, x23
  414bc4:	ldrb	w8, [x9, x8]
  414bc8:	str	w8, [sp, #12]
  414bcc:	ldr	x9, [x19, #120]
  414bd0:	cbnz	x9, 414ccc <_obstack_memory_used@@Base+0x3a40>
  414bd4:	mov	w21, #0x1                   	// #1
  414bd8:	str	x24, [x20]
  414bdc:	b	414be4 <_obstack_memory_used@@Base+0x3958>
  414be0:	ldr	w8, [sp, #12]
  414be4:	ldr	x10, [x19, #16]
  414be8:	add	x24, x21, x23
  414bec:	add	x9, x23, #0x1
  414bf0:	cmp	x9, x24
  414bf4:	str	w8, [x10, x23, lsl #2]
  414bf8:	b.ge	414c24 <_obstack_memory_used@@Base+0x3998>  // b.tcont
  414bfc:	add	x8, x10, x23, lsl #2
  414c00:	lsl	x9, x21, #2
  414c04:	add	x0, x8, #0x4
  414c08:	sub	x2, x9, #0x4
  414c0c:	mov	w1, #0xff                  	// #255
  414c10:	bl	4029d0 <memset@plt>
  414c14:	sub	x8, x21, #0x1
  414c18:	subs	x8, x8, #0x1
  414c1c:	b.ne	414c18 <_obstack_memory_used@@Base+0x398c>  // b.any
  414c20:	mov	x9, x24
  414c24:	cmp	x22, x9
  414c28:	mov	x23, x9
  414c2c:	b.gt	414b64 <_obstack_memory_used@@Base+0x38d8>
  414c30:	b	414ce0 <_obstack_memory_used@@Base+0x3a54>
  414c34:	ldr	w9, [x19, #144]
  414c38:	add	x1, sp, #0x10
  414c3c:	cmp	w9, #0x1
  414c40:	b.lt	414b84 <_obstack_memory_used@@Base+0x38f8>  // b.tstop
  414c44:	cmp	x2, #0x1
  414c48:	b.lt	414b84 <_obstack_memory_used@@Base+0x38f8>  // b.tstop
  414c4c:	ldr	x9, [x19, #40]
  414c50:	ldp	x10, x11, [x19]
  414c54:	add	x1, sp, #0x10
  414c58:	add	x9, x23, x9
  414c5c:	ldrb	w9, [x10, x9]
  414c60:	ldrb	w8, [x8, x9]
  414c64:	strb	w8, [x11, x23]
  414c68:	strb	w8, [sp, #16]
  414c6c:	ldr	w8, [x19, #144]
  414c70:	cmp	w8, #0x2
  414c74:	b.lt	414b84 <_obstack_memory_used@@Base+0x38f8>  // b.tstop
  414c78:	cmp	x2, #0x2
  414c7c:	b.lt	414b84 <_obstack_memory_used@@Base+0x38f8>  // b.tstop
  414c80:	mov	w8, #0x1                   	// #1
  414c84:	ldr	x9, [x19, #40]
  414c88:	ldp	x10, x12, [x19]
  414c8c:	ldr	x11, [x19, #120]
  414c90:	add	x1, sp, #0x10
  414c94:	add	x9, x10, x9
  414c98:	add	x9, x9, x23
  414c9c:	ldrb	w9, [x9, x8]
  414ca0:	add	x10, x12, x23
  414ca4:	ldrb	w9, [x11, x9]
  414ca8:	strb	w9, [x10, x8]
  414cac:	strb	w9, [x1, x8]
  414cb0:	ldr	w9, [x19, #144]
  414cb4:	add	x8, x8, #0x1
  414cb8:	cmp	w9, w8
  414cbc:	b.le	414b84 <_obstack_memory_used@@Base+0x38f8>
  414cc0:	cmp	x2, x8
  414cc4:	b.gt	414c84 <_obstack_memory_used@@Base+0x39f8>
  414cc8:	b	414b84 <_obstack_memory_used@@Base+0x38f8>
  414ccc:	ldrb	w8, [x9, w8, uxtw]
  414cd0:	str	w8, [sp, #12]
  414cd4:	b	414bd4 <_obstack_memory_used@@Base+0x3948>
  414cd8:	str	x24, [x20]
  414cdc:	mov	x9, x23
  414ce0:	stp	x9, x9, [x19, #48]
  414ce4:	ldp	x20, x19, [sp, #128]
  414ce8:	ldp	x22, x21, [sp, #112]
  414cec:	ldp	x24, x23, [sp, #96]
  414cf0:	ldp	x29, x30, [sp, #80]
  414cf4:	add	sp, sp, #0x90
  414cf8:	ret
  414cfc:	ldr	x9, [x0, #64]
  414d00:	ldr	x10, [x0, #88]
  414d04:	ldr	x8, [x0, #48]
  414d08:	cmp	x9, x10
  414d0c:	csel	x9, x10, x9, gt
  414d10:	cmp	x8, x9
  414d14:	b.ge	414d3c <_obstack_memory_used@@Base+0x3ab0>  // b.tcont
  414d18:	ldr	x10, [x0, #40]
  414d1c:	ldp	x11, x13, [x0]
  414d20:	ldr	x12, [x0, #120]
  414d24:	add	x10, x11, x10
  414d28:	ldrb	w10, [x10, x8]
  414d2c:	ldrb	w10, [x12, x10]
  414d30:	strb	w10, [x13, x8]
  414d34:	add	x8, x8, #0x1
  414d38:	b	414d10 <_obstack_memory_used@@Base+0x3a84>
  414d3c:	stp	x8, x8, [x0, #48]
  414d40:	ret
  414d44:	sub	sp, sp, #0x80
  414d48:	stp	x29, x30, [sp, #32]
  414d4c:	stp	x28, x27, [sp, #48]
  414d50:	stp	x26, x25, [sp, #64]
  414d54:	stp	x24, x23, [sp, #80]
  414d58:	stp	x22, x21, [sp, #96]
  414d5c:	stp	x20, x19, [sp, #112]
  414d60:	ldr	x25, [x1]
  414d64:	add	x29, sp, #0x20
  414d68:	mov	x20, x5
  414d6c:	mov	x21, x4
  414d70:	ldr	x8, [x25, #168]
  414d74:	mov	x23, x2
  414d78:	mov	x24, x1
  414d7c:	mov	x26, x0
  414d80:	stp	x8, x3, [sp]
  414d84:	bl	4154d0 <_obstack_memory_used@@Base+0x4244>
  414d88:	mov	x19, x0
  414d8c:	cbnz	x0, 414d98 <_obstack_memory_used@@Base+0x3b0c>
  414d90:	ldr	w8, [x20]
  414d94:	cbnz	w8, 414ec4 <_obstack_memory_used@@Base+0x3c38>
  414d98:	ldr	x8, [sp, #8]
  414d9c:	mov	w28, #0xa                   	// #10
  414da0:	orr	x27, x8, #0x800000
  414da4:	ldrb	w8, [x23, #8]
  414da8:	cmp	w8, #0xa
  414dac:	b.ne	414e5c <_obstack_memory_used@@Base+0x3bd0>  // b.any
  414db0:	mov	x0, x23
  414db4:	mov	x1, x26
  414db8:	mov	x2, x27
  414dbc:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  414dc0:	ldr	x8, [x26, #72]
  414dc4:	add	x8, x8, w0, sxtw
  414dc8:	str	x8, [x26, #72]
  414dcc:	ldrb	w8, [x23, #8]
  414dd0:	orr	w9, w8, #0x8
  414dd4:	cmp	w9, #0xa
  414dd8:	b.ne	414e04 <_obstack_memory_used@@Base+0x3b78>  // b.any
  414ddc:	mov	x2, xzr
  414de0:	add	x3, sp, #0x10
  414de4:	mov	x0, x25
  414de8:	mov	x1, x19
  414dec:	str	xzr, [sp, #16]
  414df0:	str	w28, [sp, #24]
  414df4:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  414df8:	mov	x19, x0
  414dfc:	cbnz	x0, 414da4 <_obstack_memory_used@@Base+0x3b18>
  414e00:	b	414e54 <_obstack_memory_used@@Base+0x3bc8>
  414e04:	cbz	x21, 414e10 <_obstack_memory_used@@Base+0x3b84>
  414e08:	cmp	w8, #0x9
  414e0c:	b.eq	414ddc <_obstack_memory_used@@Base+0x3b50>  // b.none
  414e10:	ldp	x8, x3, [sp]
  414e14:	ldr	x22, [x25, #168]
  414e18:	mov	x0, x26
  414e1c:	mov	x1, x24
  414e20:	mov	x2, x23
  414e24:	mov	x4, x21
  414e28:	mov	x5, x20
  414e2c:	str	x8, [x25, #168]
  414e30:	bl	4154d0 <_obstack_memory_used@@Base+0x4244>
  414e34:	mov	x2, x0
  414e38:	cbnz	x0, 414e44 <_obstack_memory_used@@Base+0x3bb8>
  414e3c:	ldr	w8, [x20]
  414e40:	cbnz	w8, 414e80 <_obstack_memory_used@@Base+0x3bf4>
  414e44:	ldr	x8, [x25, #168]
  414e48:	orr	x8, x8, x22
  414e4c:	str	x8, [x25, #168]
  414e50:	b	414de0 <_obstack_memory_used@@Base+0x3b54>
  414e54:	mov	w8, #0xc                   	// #12
  414e58:	str	w8, [x20]
  414e5c:	mov	x0, x19
  414e60:	ldp	x20, x19, [sp, #112]
  414e64:	ldp	x22, x21, [sp, #96]
  414e68:	ldp	x24, x23, [sp, #80]
  414e6c:	ldp	x26, x25, [sp, #64]
  414e70:	ldp	x28, x27, [sp, #48]
  414e74:	ldp	x29, x30, [sp, #32]
  414e78:	add	sp, sp, #0x80
  414e7c:	ret
  414e80:	cbz	x19, 414e5c <_obstack_memory_used@@Base+0x3bd0>
  414e84:	mov	x20, x19
  414e88:	ldr	x19, [x19, #8]
  414e8c:	cbnz	x19, 414e84 <_obstack_memory_used@@Base+0x3bf8>
  414e90:	ldr	x19, [x20, #16]
  414e94:	cbnz	x19, 414e84 <_obstack_memory_used@@Base+0x3bf8>
  414e98:	add	x0, x20, #0x28
  414e9c:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  414ea0:	ldr	x8, [x20]
  414ea4:	cbz	x8, 414ec4 <_obstack_memory_used@@Base+0x3c38>
  414ea8:	ldr	x19, [x8, #16]
  414eac:	cmp	x19, x20
  414eb0:	mov	x20, x8
  414eb4:	b.eq	414e98 <_obstack_memory_used@@Base+0x3c0c>  // b.none
  414eb8:	mov	x20, x8
  414ebc:	cbz	x19, 414e98 <_obstack_memory_used@@Base+0x3c0c>
  414ec0:	b	414e84 <_obstack_memory_used@@Base+0x3bf8>
  414ec4:	mov	x19, xzr
  414ec8:	b	414e5c <_obstack_memory_used@@Base+0x3bd0>
  414ecc:	sub	sp, sp, #0x50
  414ed0:	stp	x29, x30, [sp, #16]
  414ed4:	stp	x24, x23, [sp, #32]
  414ed8:	stp	x22, x21, [sp, #48]
  414edc:	stp	x20, x19, [sp, #64]
  414ee0:	ldr	x9, [x1, #104]
  414ee4:	ldr	x8, [x1, #72]
  414ee8:	mov	x19, x0
  414eec:	add	x29, sp, #0x10
  414ef0:	cmp	x9, x8
  414ef4:	b.le	414fd8 <_obstack_memory_used@@Base+0x3d4c>
  414ef8:	ldr	x9, [x1, #8]
  414efc:	mov	x23, x19
  414f00:	mov	x20, x2
  414f04:	mov	x21, x1
  414f08:	ldrb	w24, [x9, x8]
  414f0c:	strb	w24, [x23], #8
  414f10:	ldr	w8, [x23]
  414f14:	and	w9, w8, #0xff9fffff
  414f18:	str	w9, [x23]
  414f1c:	ldr	w11, [x1, #144]
  414f20:	cmp	w11, #0x2
  414f24:	b.lt	414f48 <_obstack_memory_used@@Base+0x3cbc>  // b.tstop
  414f28:	ldr	x9, [x21, #72]
  414f2c:	ldr	x10, [x21, #48]
  414f30:	cmp	x9, x10
  414f34:	b.eq	414f48 <_obstack_memory_used@@Base+0x3cbc>  // b.none
  414f38:	ldr	x10, [x21, #16]
  414f3c:	ldr	w9, [x10, x9, lsl #2]
  414f40:	cmn	w9, #0x1
  414f44:	b.eq	4151f4 <_obstack_memory_used@@Base+0x3f68>  // b.none
  414f48:	mov	w9, #0xff00                	// #65280
  414f4c:	cmp	w24, #0x5c
  414f50:	movk	w9, #0xff9f, lsl #16
  414f54:	b.ne	414fe8 <_obstack_memory_used@@Base+0x3d5c>  // b.any
  414f58:	ldr	x12, [x21, #72]
  414f5c:	ldr	x13, [x21, #88]
  414f60:	add	x10, x12, #0x1
  414f64:	cmp	x10, x13
  414f68:	b.ge	415038 <_obstack_memory_used@@Base+0x3dac>  // b.tcont
  414f6c:	ldrb	w13, [x21, #139]
  414f70:	cbnz	w13, 41546c <_obstack_memory_used@@Base+0x41e0>
  414f74:	ldr	x11, [x21, #8]
  414f78:	ldrb	w22, [x11, x10]
  414f7c:	and	w8, w8, w9
  414f80:	orr	w24, w8, #0x1
  414f84:	strb	w22, [x19]
  414f88:	str	w24, [x19, #8]
  414f8c:	ldr	w8, [x21, #144]
  414f90:	cmp	w8, #0x2
  414f94:	b.lt	415148 <_obstack_memory_used@@Base+0x3ebc>  // b.tstop
  414f98:	ldr	x8, [x21, #72]
  414f9c:	ldr	x9, [x21, #16]
  414fa0:	add	x8, x9, x8, lsl #2
  414fa4:	ldr	w21, [x8, #4]
  414fa8:	mov	w0, w21
  414fac:	bl	402ce0 <iswalnum@plt>
  414fb0:	ldr	w9, [x23]
  414fb4:	cmp	w0, #0x0
  414fb8:	mov	w8, #0x5f                  	// #95
  414fbc:	mov	w10, #0x400000              	// #4194304
  414fc0:	ccmp	w21, w8, #0x4, eq  // eq = none
  414fc4:	csel	w8, w10, wzr, eq  // eq = none
  414fc8:	and	w9, w9, #0xffbfffff
  414fcc:	orr	w8, w8, w9
  414fd0:	and	x9, x22, #0xff
  414fd4:	b	415170 <_obstack_memory_used@@Base+0x3ee4>
  414fd8:	mov	w8, #0x2                   	// #2
  414fdc:	mov	w0, wzr
  414fe0:	strb	w8, [x19, #8]
  414fe4:	b	415454 <_obstack_memory_used@@Base+0x41c8>
  414fe8:	and	w8, w8, w9
  414fec:	orr	w22, w8, #0x1
  414ff0:	str	w22, [x23]
  414ff4:	ldr	w8, [x21, #144]
  414ff8:	cmp	w8, #0x2
  414ffc:	b.lt	415048 <_obstack_memory_used@@Base+0x3dbc>  // b.tstop
  415000:	ldr	x8, [x21, #72]
  415004:	ldr	x9, [x21, #16]
  415008:	ldr	w22, [x9, x8, lsl #2]
  41500c:	mov	w0, w22
  415010:	bl	402ce0 <iswalnum@plt>
  415014:	ldr	w9, [x23]
  415018:	cmp	w0, #0x0
  41501c:	mov	w8, #0x5f                  	// #95
  415020:	ccmp	w22, w8, #0x4, eq  // eq = none
  415024:	mov	w8, #0x400000              	// #4194304
  415028:	csel	w8, w8, wzr, eq  // eq = none
  41502c:	and	w9, w9, #0xffbfffff
  415030:	orr	w8, w8, w9
  415034:	b	415074 <_obstack_memory_used@@Base+0x3de8>
  415038:	and	w8, w8, w9
  41503c:	mov	w9, #0x24                  	// #36
  415040:	orr	w8, w8, w9
  415044:	b	4152dc <_obstack_memory_used@@Base+0x4050>
  415048:	bl	402bc0 <__ctype_b_loc@plt>
  41504c:	ldr	x8, [x0]
  415050:	cmp	w24, #0x5f
  415054:	cset	w9, eq  // eq = none
  415058:	ldrh	w8, [x8, x24, lsl #1]
  41505c:	and	w8, w8, #0x8
  415060:	orr	w8, w9, w8, lsr #3
  415064:	cmp	w8, #0x0
  415068:	mov	w8, #0x400000              	// #4194304
  41506c:	csel	w8, w8, wzr, ne  // ne = any
  415070:	orr	w8, w8, w22
  415074:	cmp	w24, #0x3e
  415078:	mov	w0, #0x1                   	// #1
  41507c:	str	w8, [x23]
  415080:	b.gt	415100 <_obstack_memory_used@@Base+0x3e74>
  415084:	sub	w9, w24, #0x24
  415088:	cmp	w9, #0xa
  41508c:	b.hi	415240 <_obstack_memory_used@@Base+0x3fb4>  // b.pmore
  415090:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  415094:	add	x10, x10, #0xf90
  415098:	adr	x11, 4150a8 <_obstack_memory_used@@Base+0x3e1c>
  41509c:	ldrb	w12, [x10, x9]
  4150a0:	add	x11, x11, x12, lsl #2
  4150a4:	br	x11
  4150a8:	tbnz	w20, #3, 4150f4 <_obstack_memory_used@@Base+0x3e68>
  4150ac:	ldr	x9, [x21, #72]
  4150b0:	ldr	x10, [x21, #88]
  4150b4:	add	x9, x9, #0x1
  4150b8:	cmp	x9, x10
  4150bc:	b.eq	4150f4 <_obstack_memory_used@@Base+0x3e68>  // b.none
  4150c0:	mov	x0, sp
  4150c4:	mov	x1, x21
  4150c8:	mov	x2, x20
  4150cc:	str	x9, [x21, #72]
  4150d0:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  4150d4:	ldr	x8, [x21, #72]
  4150d8:	sub	x8, x8, #0x1
  4150dc:	str	x8, [x21, #72]
  4150e0:	ldrb	w8, [sp, #8]
  4150e4:	sub	w8, w8, #0x9
  4150e8:	cmp	w8, #0x1
  4150ec:	b.hi	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.pmore
  4150f0:	ldr	w8, [x23]
  4150f4:	and	w8, w8, #0xffffff00
  4150f8:	mov	w9, #0x20                  	// #32
  4150fc:	b	415138 <_obstack_memory_used@@Base+0x3eac>
  415100:	cmp	w24, #0x7a
  415104:	b.gt	4151c0 <_obstack_memory_used@@Base+0x3f34>
  415108:	cmp	w24, #0x3f
  41510c:	b.eq	415290 <_obstack_memory_used@@Base+0x4004>  // b.none
  415110:	cmp	w24, #0x5b
  415114:	b.eq	4152a4 <_obstack_memory_used@@Base+0x4018>  // b.none
  415118:	cmp	w24, #0x5e
  41511c:	b.ne	415454 <_obstack_memory_used@@Base+0x41c8>  // b.any
  415120:	mov	w9, #0x8                   	// #8
  415124:	movk	w9, #0x80, lsl #16
  415128:	tst	x20, x9
  41512c:	b.eq	415308 <_obstack_memory_used@@Base+0x407c>  // b.none
  415130:	and	w8, w8, #0xffffff00
  415134:	mov	w9, #0x10                  	// #16
  415138:	orr	w8, w8, #0xc
  41513c:	str	w9, [x19]
  415140:	str	w8, [x19, #8]
  415144:	b	4152e0 <_obstack_memory_used@@Base+0x4054>
  415148:	bl	402bc0 <__ctype_b_loc@plt>
  41514c:	ldr	x8, [x0]
  415150:	and	x9, x22, #0xff
  415154:	and	w10, w22, #0xff
  415158:	cmp	w10, #0x5f
  41515c:	ldrh	w8, [x8, x9, lsl #1]
  415160:	cset	w10, eq  // eq = none
  415164:	ubfx	w8, w8, #3, #1
  415168:	orr	w8, w8, w10
  41516c:	orr	w8, w24, w8, lsl #22
  415170:	and	w10, w22, #0xff
  415174:	cmp	w10, #0x5f
  415178:	mov	w0, #0x2                   	// #2
  41517c:	str	w8, [x23]
  415180:	b.gt	415210 <_obstack_memory_used@@Base+0x3f84>
  415184:	sub	w11, w10, #0x27
  415188:	cmp	w11, #0x2c
  41518c:	b.hi	41532c <_obstack_memory_used@@Base+0x40a0>  // b.pmore
  415190:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  415194:	add	x10, x10, #0xf9b
  415198:	adr	x12, 4151a8 <_obstack_memory_used@@Base+0x3f1c>
  41519c:	ldrb	w13, [x10, x11]
  4151a0:	add	x12, x12, x13, lsl #2
  4151a4:	br	x12
  4151a8:	tbnz	w20, #14, 415450 <_obstack_memory_used@@Base+0x41c4>
  4151ac:	and	w8, w8, #0xffffff00
  4151b0:	sub	x9, x9, #0x31
  4151b4:	orr	w8, w8, #0x4
  4151b8:	str	x9, [x19]
  4151bc:	b	415438 <_obstack_memory_used@@Base+0x41ac>
  4151c0:	cmp	w24, #0x7b
  4151c4:	b.eq	4152ac <_obstack_memory_used@@Base+0x4020>  // b.none
  4151c8:	cmp	w24, #0x7c
  4151cc:	b.eq	4152c4 <_obstack_memory_used@@Base+0x4038>  // b.none
  4151d0:	cmp	w24, #0x7d
  4151d4:	b.ne	415454 <_obstack_memory_used@@Base+0x41c8>  // b.any
  4151d8:	mvn	w9, w20
  4151dc:	mov	w10, #0x1200                	// #4608
  4151e0:	tst	x9, x10
  4151e4:	b.ne	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.any
  4151e8:	and	w8, w8, #0xffffff00
  4151ec:	orr	w8, w8, #0x18
  4151f0:	b	4152dc <_obstack_memory_used@@Base+0x4050>
  4151f4:	mov	w9, #0xff00                	// #65280
  4151f8:	movk	w9, #0xff9f, lsl #16
  4151fc:	mov	w10, #0x1                   	// #1
  415200:	movk	w10, #0x20, lsl #16
  415204:	and	w8, w8, w9
  415208:	orr	w8, w8, w10
  41520c:	b	4152dc <_obstack_memory_used@@Base+0x4050>
  415210:	sub	w9, w10, #0x73
  415214:	cmp	w9, #0xa
  415218:	b.hi	4152e8 <_obstack_memory_used@@Base+0x405c>  // b.pmore
  41521c:	adrp	x10, 41e000 <_obstack_memory_used@@Base+0xcd74>
  415220:	add	x10, x10, #0xfc8
  415224:	adr	x11, 415234 <_obstack_memory_used@@Base+0x3fa8>
  415228:	ldrb	w12, [x10, x9]
  41522c:	add	x11, x11, x12, lsl #2
  415230:	br	x11
  415234:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415238:	mov	w9, #0x22                  	// #34
  41523c:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  415240:	cmp	w24, #0xa
  415244:	b.ne	415454 <_obstack_memory_used@@Base+0x41c8>  // b.any
  415248:	tbnz	w20, #11, 4152d4 <_obstack_memory_used@@Base+0x4048>
  41524c:	b	4152e0 <_obstack_memory_used@@Base+0x4054>
  415250:	tbz	w20, #13, 4152e0 <_obstack_memory_used@@Base+0x4054>
  415254:	and	w8, w8, #0xffffff00
  415258:	orr	w8, w8, #0x8
  41525c:	b	4152dc <_obstack_memory_used@@Base+0x4050>
  415260:	tbz	w20, #13, 4152e0 <_obstack_memory_used@@Base+0x4054>
  415264:	mov	w9, #0x9                   	// #9
  415268:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  41526c:	mov	w9, #0xb                   	// #11
  415270:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  415274:	mov	w9, #0x402                 	// #1026
  415278:	tst	x20, x9
  41527c:	b.ne	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.any
  415280:	mov	w9, #0x12                  	// #18
  415284:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  415288:	mov	w9, #0x5                   	// #5
  41528c:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  415290:	mov	w9, #0x402                 	// #1026
  415294:	tst	x20, x9
  415298:	b.ne	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.any
  41529c:	mov	w9, #0x13                  	// #19
  4152a0:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  4152a4:	mov	w9, #0x14                  	// #20
  4152a8:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  4152ac:	mvn	w9, w20
  4152b0:	mov	w10, #0x1200                	// #4608
  4152b4:	tst	x9, x10
  4152b8:	b.ne	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.any
  4152bc:	mov	w9, #0x17                  	// #23
  4152c0:	b	4152d8 <_obstack_memory_used@@Base+0x404c>
  4152c4:	mov	w9, #0x8400                	// #33792
  4152c8:	and	x9, x20, x9
  4152cc:	cmp	x9, #0x8, lsl #12
  4152d0:	b.ne	4152e0 <_obstack_memory_used@@Base+0x4054>  // b.any
  4152d4:	mov	w9, #0xa                   	// #10
  4152d8:	bfxil	w8, w9, #0, #8
  4152dc:	str	w8, [x23]
  4152e0:	mov	w0, #0x1                   	// #1
  4152e4:	b	415454 <_obstack_memory_used@@Base+0x41c8>
  4152e8:	cmp	w10, #0x60
  4152ec:	b.eq	415398 <_obstack_memory_used@@Base+0x410c>  // b.none
  4152f0:	cmp	w10, #0x62
  4152f4:	b.ne	415454 <_obstack_memory_used@@Base+0x41c8>  // b.any
  4152f8:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  4152fc:	and	w8, w8, #0xffffff00
  415300:	mov	w9, #0x100                 	// #256
  415304:	b	415430 <_obstack_memory_used@@Base+0x41a4>
  415308:	ldr	x9, [x21, #72]
  41530c:	cbz	x9, 415130 <_obstack_memory_used@@Base+0x3ea4>
  415310:	tbz	w20, #11, 4152e0 <_obstack_memory_used@@Base+0x4054>
  415314:	ldr	x10, [x21, #8]
  415318:	add	x9, x9, x10
  41531c:	ldurb	w9, [x9, #-1]
  415320:	cmp	w9, #0xa
  415324:	b.eq	415130 <_obstack_memory_used@@Base+0x3ea4>  // b.none
  415328:	b	4152e0 <_obstack_memory_used@@Base+0x4054>
  41532c:	cmp	w10, #0x57
  415330:	b.ne	415454 <_obstack_memory_used@@Base+0x41c8>  // b.any
  415334:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415338:	mov	w9, #0x21                  	// #33
  41533c:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  415340:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415344:	and	w8, w8, #0xffffff00
  415348:	orr	w8, w8, #0x20
  41534c:	b	41544c <_obstack_memory_used@@Base+0x41c0>
  415350:	mov	w9, #0x1200                	// #4608
  415354:	and	x9, x20, x9
  415358:	cmp	x9, #0x200
  41535c:	b.ne	415450 <_obstack_memory_used@@Base+0x41c4>  // b.any
  415360:	mov	w9, #0x17                  	// #23
  415364:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  415368:	mov	w9, #0x8400                	// #33792
  41536c:	tst	x20, x9
  415370:	b.ne	415450 <_obstack_memory_used@@Base+0x41c4>  // b.any
  415374:	mov	w9, #0xa                   	// #10
  415378:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  41537c:	mov	w9, #0x1200                	// #4608
  415380:	and	x9, x20, x9
  415384:	cmp	x9, #0x200
  415388:	b.ne	415450 <_obstack_memory_used@@Base+0x41c4>  // b.any
  41538c:	and	w8, w8, #0xffffff00
  415390:	orr	w8, w8, #0x18
  415394:	b	41544c <_obstack_memory_used@@Base+0x41c0>
  415398:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  41539c:	and	w8, w8, #0xffffff00
  4153a0:	mov	w9, #0x40                  	// #64
  4153a4:	b	415430 <_obstack_memory_used@@Base+0x41a4>
  4153a8:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  4153ac:	and	w8, w8, #0xffffff00
  4153b0:	mov	w9, #0x80                  	// #128
  4153b4:	b	415430 <_obstack_memory_used@@Base+0x41a4>
  4153b8:	tbnz	w20, #13, 415450 <_obstack_memory_used@@Base+0x41c4>
  4153bc:	and	w8, w8, #0xffffff00
  4153c0:	orr	w8, w8, #0x8
  4153c4:	b	41544c <_obstack_memory_used@@Base+0x41c0>
  4153c8:	tbnz	w20, #13, 415450 <_obstack_memory_used@@Base+0x41c4>
  4153cc:	mov	w9, #0x9                   	// #9
  4153d0:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  4153d4:	mov	w9, #0x402                 	// #1026
  4153d8:	and	x9, x20, x9
  4153dc:	cmp	x9, #0x2
  4153e0:	b.ne	415450 <_obstack_memory_used@@Base+0x41c4>  // b.any
  4153e4:	mov	w9, #0x12                  	// #18
  4153e8:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  4153ec:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  4153f0:	and	w8, w8, #0xffffff00
  4153f4:	mov	w9, #0x6                   	// #6
  4153f8:	b	415430 <_obstack_memory_used@@Base+0x41a4>
  4153fc:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415400:	and	w8, w8, #0xffffff00
  415404:	mov	w9, #0x9                   	// #9
  415408:	b	415430 <_obstack_memory_used@@Base+0x41a4>
  41540c:	mov	w9, #0x402                 	// #1026
  415410:	and	x9, x20, x9
  415414:	cmp	x9, #0x2
  415418:	b.ne	415450 <_obstack_memory_used@@Base+0x41c4>  // b.any
  41541c:	mov	w9, #0x13                  	// #19
  415420:	b	415448 <_obstack_memory_used@@Base+0x41bc>
  415424:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415428:	and	w8, w8, #0xffffff00
  41542c:	mov	w9, #0x200                 	// #512
  415430:	orr	w8, w8, #0xc
  415434:	str	w9, [x19]
  415438:	str	w8, [x19, #8]
  41543c:	b	415450 <_obstack_memory_used@@Base+0x41c4>
  415440:	tbnz	w20, #19, 415450 <_obstack_memory_used@@Base+0x41c4>
  415444:	mov	w9, #0x23                  	// #35
  415448:	bfxil	w8, w9, #0, #8
  41544c:	str	w8, [x23]
  415450:	mov	w0, #0x2                   	// #2
  415454:	ldp	x20, x19, [sp, #64]
  415458:	ldp	x22, x21, [sp, #48]
  41545c:	ldp	x24, x23, [sp, #32]
  415460:	ldp	x29, x30, [sp, #16]
  415464:	add	sp, sp, #0x50
  415468:	ret
  41546c:	cmp	w11, #0x2
  415470:	b.lt	4154a0 <_obstack_memory_used@@Base+0x4214>  // b.tstop
  415474:	ldr	x11, [x21, #16]
  415478:	ldr	w13, [x11, x10, lsl #2]
  41547c:	cmn	w13, #0x1
  415480:	b.eq	414f74 <_obstack_memory_used@@Base+0x3ce8>  // b.none
  415484:	ldr	x13, [x21, #48]
  415488:	add	x12, x12, #0x2
  41548c:	cmp	x13, x12
  415490:	b.eq	4154a0 <_obstack_memory_used@@Base+0x4214>  // b.none
  415494:	ldr	w11, [x11, x12, lsl #2]
  415498:	cmn	w11, #0x1
  41549c:	b.eq	414f74 <_obstack_memory_used@@Base+0x3ce8>  // b.none
  4154a0:	ldrb	w11, [x21, #140]
  4154a4:	mov	x12, x10
  4154a8:	cbz	w11, 4154b4 <_obstack_memory_used@@Base+0x4228>
  4154ac:	ldr	x12, [x21, #24]
  4154b0:	ldr	x12, [x12, x10, lsl #3]
  4154b4:	ldr	x13, [x21, #40]
  4154b8:	ldr	x14, [x21]
  4154bc:	add	x12, x13, x12
  4154c0:	ldrsb	w22, [x14, x12]
  4154c4:	cbz	w11, 414f7c <_obstack_memory_used@@Base+0x3cf0>
  4154c8:	tbnz	w22, #31, 414f74 <_obstack_memory_used@@Base+0x3ce8>
  4154cc:	b	414f7c <_obstack_memory_used@@Base+0x3cf0>
  4154d0:	sub	sp, sp, #0x70
  4154d4:	stp	x29, x30, [sp, #16]
  4154d8:	stp	x28, x27, [sp, #32]
  4154dc:	stp	x26, x25, [sp, #48]
  4154e0:	stp	x24, x23, [sp, #64]
  4154e4:	stp	x22, x21, [sp, #80]
  4154e8:	stp	x20, x19, [sp, #96]
  4154ec:	ldr	x25, [x1]
  4154f0:	add	x29, sp, #0x10
  4154f4:	mov	x19, x5
  4154f8:	mov	x21, x4
  4154fc:	mov	x22, x3
  415500:	mov	x23, x2
  415504:	mov	x24, x1
  415508:	mov	x26, x0
  41550c:	bl	415710 <_obstack_memory_used@@Base+0x4484>
  415510:	cbnz	x0, 41551c <_obstack_memory_used@@Base+0x4290>
  415514:	ldr	w8, [x19]
  415518:	cbnz	w8, 415698 <_obstack_memory_used@@Base+0x440c>
  41551c:	mov	w28, #0x10                  	// #16
  415520:	ldrb	w8, [x23, #8]
  415524:	mov	x20, x0
  415528:	orr	w9, w8, #0x8
  41552c:	cmp	w9, #0xa
  415530:	b.eq	415630 <_obstack_memory_used@@Base+0x43a4>  // b.none
  415534:	cbz	x21, 415540 <_obstack_memory_used@@Base+0x42b4>
  415538:	cmp	w8, #0x9
  41553c:	b.eq	415630 <_obstack_memory_used@@Base+0x43a4>  // b.none
  415540:	mov	x0, x26
  415544:	mov	x1, x24
  415548:	mov	x2, x23
  41554c:	mov	x3, x22
  415550:	mov	x4, x21
  415554:	mov	x5, x19
  415558:	bl	415710 <_obstack_memory_used@@Base+0x4484>
  41555c:	mov	x27, x0
  415560:	cbnz	x0, 41556c <_obstack_memory_used@@Base+0x42e0>
  415564:	ldr	w8, [x19]
  415568:	cbnz	w8, 415654 <_obstack_memory_used@@Base+0x43c8>
  41556c:	cbz	x20, 415598 <_obstack_memory_used@@Base+0x430c>
  415570:	cbz	x27, 415598 <_obstack_memory_used@@Base+0x430c>
  415574:	mov	x3, sp
  415578:	mov	x0, x25
  41557c:	mov	x1, x20
  415580:	mov	x2, x27
  415584:	str	xzr, [sp]
  415588:	str	w28, [sp, #8]
  41558c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  415590:	cbnz	x0, 415520 <_obstack_memory_used@@Base+0x4294>
  415594:	b	4155a4 <_obstack_memory_used@@Base+0x4318>
  415598:	cmp	x20, #0x0
  41559c:	csel	x0, x27, x20, eq  // eq = none
  4155a0:	b	415520 <_obstack_memory_used@@Base+0x4294>
  4155a4:	mov	x21, x27
  4155a8:	ldr	x27, [x27, #8]
  4155ac:	cbnz	x27, 4155a4 <_obstack_memory_used@@Base+0x4318>
  4155b0:	ldr	x27, [x21, #16]
  4155b4:	cbnz	x27, 4155a4 <_obstack_memory_used@@Base+0x4318>
  4155b8:	add	x0, x21, #0x28
  4155bc:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  4155c0:	ldr	x8, [x21]
  4155c4:	cbz	x8, 4155e4 <_obstack_memory_used@@Base+0x4358>
  4155c8:	ldr	x27, [x8, #16]
  4155cc:	cmp	x27, x21
  4155d0:	mov	x21, x8
  4155d4:	b.eq	4155b8 <_obstack_memory_used@@Base+0x432c>  // b.none
  4155d8:	mov	x21, x8
  4155dc:	cbz	x27, 4155b8 <_obstack_memory_used@@Base+0x432c>
  4155e0:	b	4155a4 <_obstack_memory_used@@Base+0x4318>
  4155e4:	mov	x21, x20
  4155e8:	ldr	x20, [x20, #8]
  4155ec:	cbnz	x20, 4155e4 <_obstack_memory_used@@Base+0x4358>
  4155f0:	ldr	x20, [x21, #16]
  4155f4:	cbnz	x20, 4155e4 <_obstack_memory_used@@Base+0x4358>
  4155f8:	add	x0, x21, #0x28
  4155fc:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  415600:	ldr	x8, [x21]
  415604:	cbz	x8, 415624 <_obstack_memory_used@@Base+0x4398>
  415608:	ldr	x20, [x8, #16]
  41560c:	cmp	x20, x21
  415610:	mov	x21, x8
  415614:	b.eq	4155f8 <_obstack_memory_used@@Base+0x436c>  // b.none
  415618:	mov	x21, x8
  41561c:	cbz	x20, 4155f8 <_obstack_memory_used@@Base+0x436c>
  415620:	b	4155e4 <_obstack_memory_used@@Base+0x4358>
  415624:	mov	x20, xzr
  415628:	mov	w8, #0xc                   	// #12
  41562c:	str	w8, [x19]
  415630:	mov	x0, x20
  415634:	ldp	x20, x19, [sp, #96]
  415638:	ldp	x22, x21, [sp, #80]
  41563c:	ldp	x24, x23, [sp, #64]
  415640:	ldp	x26, x25, [sp, #48]
  415644:	ldp	x28, x27, [sp, #32]
  415648:	ldp	x29, x30, [sp, #16]
  41564c:	add	sp, sp, #0x70
  415650:	ret
  415654:	cbz	x20, 415630 <_obstack_memory_used@@Base+0x43a4>
  415658:	mov	x19, x20
  41565c:	ldr	x20, [x20, #8]
  415660:	cbnz	x20, 415658 <_obstack_memory_used@@Base+0x43cc>
  415664:	ldr	x20, [x19, #16]
  415668:	cbnz	x20, 415658 <_obstack_memory_used@@Base+0x43cc>
  41566c:	add	x0, x19, #0x28
  415670:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  415674:	ldr	x8, [x19]
  415678:	cbz	x8, 415698 <_obstack_memory_used@@Base+0x440c>
  41567c:	ldr	x20, [x8, #16]
  415680:	cmp	x20, x19
  415684:	mov	x19, x8
  415688:	b.eq	41566c <_obstack_memory_used@@Base+0x43e0>  // b.none
  41568c:	mov	x19, x8
  415690:	cbz	x20, 41566c <_obstack_memory_used@@Base+0x43e0>
  415694:	b	415658 <_obstack_memory_used@@Base+0x43cc>
  415698:	mov	x20, xzr
  41569c:	b	415630 <_obstack_memory_used@@Base+0x43a4>
  4156a0:	stp	x29, x30, [sp, #-48]!
  4156a4:	stp	x20, x19, [sp, #32]
  4156a8:	mov	x19, x2
  4156ac:	mov	x20, x1
  4156b0:	str	x21, [sp, #16]
  4156b4:	mov	x29, sp
  4156b8:	mov	x21, x0
  4156bc:	ldr	x0, [x0, #8]
  4156c0:	cbnz	x0, 4156b8 <_obstack_memory_used@@Base+0x442c>
  4156c4:	ldr	x0, [x21, #16]
  4156c8:	cbnz	x0, 4156b8 <_obstack_memory_used@@Base+0x442c>
  4156cc:	mov	x0, x19
  4156d0:	mov	x1, x21
  4156d4:	blr	x20
  4156d8:	cbnz	w0, 415700 <_obstack_memory_used@@Base+0x4474>
  4156dc:	ldr	x8, [x21]
  4156e0:	cbz	x8, 415700 <_obstack_memory_used@@Base+0x4474>
  4156e4:	ldr	x0, [x8, #16]
  4156e8:	cmp	x0, x21
  4156ec:	mov	x21, x8
  4156f0:	b.eq	4156cc <_obstack_memory_used@@Base+0x4440>  // b.none
  4156f4:	mov	x21, x8
  4156f8:	cbz	x0, 4156cc <_obstack_memory_used@@Base+0x4440>
  4156fc:	b	4156b8 <_obstack_memory_used@@Base+0x442c>
  415700:	ldp	x20, x19, [sp, #32]
  415704:	ldr	x21, [sp, #16]
  415708:	ldp	x29, x30, [sp], #48
  41570c:	ret
  415710:	sub	sp, sp, #0x120
  415714:	stp	x29, x30, [sp, #192]
  415718:	stp	x28, x27, [sp, #208]
  41571c:	stp	x26, x25, [sp, #224]
  415720:	stp	x24, x23, [sp, #240]
  415724:	stp	x22, x21, [sp, #256]
  415728:	stp	x20, x19, [sp, #272]
  41572c:	ldr	w8, [x2, #8]
  415730:	ldr	x23, [x1]
  415734:	adrp	x11, 41e000 <_obstack_memory_used@@Base+0xcd74>
  415738:	add	x11, x11, #0xfd4
  41573c:	and	w9, w8, #0xff
  415740:	sub	w10, w9, #0x1
  415744:	adr	x12, 415778 <_obstack_memory_used@@Base+0x44ec>
  415748:	ldrh	w13, [x11, x10, lsl #1]
  41574c:	add	x12, x12, x13, lsl #2
  415750:	add	x29, sp, #0xc0
  415754:	mov	x20, x5
  415758:	mov	x24, x4
  41575c:	mov	x21, x3
  415760:	mov	x22, x2
  415764:	mov	x25, x1
  415768:	mov	x28, x0
  41576c:	mov	x19, xzr
  415770:	stp	x0, x3, [sp, #48]
  415774:	br	x12
  415778:	tbnz	w21, #5, 416690 <_obstack_memory_used@@Base+0x5404>
  41577c:	tbnz	w21, #4, 415ac4 <_obstack_memory_used@@Base+0x4838>
  415780:	tbnz	w21, #17, 4157fc <_obstack_memory_used@@Base+0x4570>
  415784:	cmp	w9, #0x9
  415788:	b.ne	4157fc <_obstack_memory_used@@Base+0x4570>  // b.any
  41578c:	mov	x19, xzr
  415790:	mov	w8, #0x10                  	// #16
  415794:	b	416698 <_obstack_memory_used@@Base+0x540c>
  415798:	ldr	x1, [x28, #120]
  41579c:	cmp	w9, #0x21
  4157a0:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4157a4:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xdd74>
  4157a8:	cset	w4, eq  // eq = none
  4157ac:	add	x2, x2, #0x9dd
  4157b0:	add	x3, x3, #0x290
  4157b4:	b	4157d4 <_obstack_memory_used@@Base+0x4548>
  4157b8:	ldr	x1, [x28, #120]
  4157bc:	cmp	w9, #0x23
  4157c0:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4157c4:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xbd74>
  4157c8:	cset	w4, eq  // eq = none
  4157cc:	add	x2, x2, #0x9d1
  4157d0:	add	x3, x3, #0xdb3
  4157d4:	mov	x0, x23
  4157d8:	mov	x5, x20
  4157dc:	bl	416990 <_obstack_memory_used@@Base+0x5704>
  4157e0:	mov	x19, x0
  4157e4:	str	x20, [sp, #40]
  4157e8:	cbnz	x0, 416114 <_obstack_memory_used@@Base+0x4e88>
  4157ec:	ldr	w8, [x20]
  4157f0:	ldr	x25, [sp, #56]
  4157f4:	cbz	w8, 41622c <_obstack_memory_used@@Base+0x4fa0>
  4157f8:	b	415b40 <_obstack_memory_used@@Base+0x48b4>
  4157fc:	and	w8, w8, #0xffffff00
  415800:	orr	w8, w8, #0x1
  415804:	mov	x0, x23
  415808:	mov	x1, xzr
  41580c:	mov	x2, xzr
  415810:	mov	x3, x22
  415814:	str	x20, [sp, #40]
  415818:	str	w8, [x22, #8]
  41581c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  415820:	mov	x19, x0
  415824:	mov	x25, x21
  415828:	cbnz	x0, 41622c <_obstack_memory_used@@Base+0x4fa0>
  41582c:	b	4159b8 <_obstack_memory_used@@Base+0x472c>
  415830:	ldr	w8, [x22]
  415834:	mov	w9, #0x30f                 	// #783
  415838:	tst	w8, w9
  41583c:	b.eq	415874 <_obstack_memory_used@@Base+0x45e8>  // b.none
  415840:	ldrb	w8, [x23, #176]
  415844:	mov	x21, x20
  415848:	tbnz	w8, #4, 41586c <_obstack_memory_used@@Base+0x45e0>
  41584c:	orr	w9, w8, #0x10
  415850:	strb	w9, [x23, #176]
  415854:	tbnz	w8, #3, 4167ec <_obstack_memory_used@@Base+0x5560>
  415858:	adrp	x9, 41f000 <_obstack_memory_used@@Base+0xdd74>
  41585c:	ldr	q0, [x9, #640]
  415860:	stur	q0, [x23, #184]
  415864:	tbz	w8, #2, 4167f8 <_obstack_memory_used@@Base+0x556c>
  415868:	stp	xzr, xzr, [x23, #200]
  41586c:	ldr	w8, [x22]
  415870:	mov	x20, x21
  415874:	cmp	w8, #0x100
  415878:	b.eq	41611c <_obstack_memory_used@@Base+0x4e90>  // b.none
  41587c:	cmp	w8, #0x200
  415880:	b.ne	416194 <_obstack_memory_used@@Base+0x4f08>  // b.any
  415884:	mov	w19, #0xa                   	// #10
  415888:	mov	w8, #0x5                   	// #5
  41588c:	b	416124 <_obstack_memory_used@@Base+0x4e98>
  415890:	mov	w0, #0x20                  	// #32
  415894:	mov	w1, #0x1                   	// #1
  415898:	stur	xzr, [x29, #-16]
  41589c:	bl	402a20 <calloc@plt>
  4158a0:	mov	x25, x0
  4158a4:	mov	w0, #0x50                  	// #80
  4158a8:	mov	w1, #0x1                   	// #1
  4158ac:	bl	402a20 <calloc@plt>
  4158b0:	mov	x27, x0
  4158b4:	str	x20, [sp, #40]
  4158b8:	cbz	x25, 4167c0 <_obstack_memory_used@@Base+0x5534>
  4158bc:	cbz	x27, 4167c0 <_obstack_memory_used@@Base+0x5534>
  4158c0:	ldr	x19, [sp, #56]
  4158c4:	mov	x0, x22
  4158c8:	mov	x1, x28
  4158cc:	mov	x2, x19
  4158d0:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  4158d4:	ldr	w8, [x22, #8]
  4158d8:	mov	w3, w0
  4158dc:	and	w9, w8, #0xff
  4158e0:	cmp	w9, #0x19
  4158e4:	b.eq	415b48 <_obstack_memory_used@@Base+0x48bc>  // b.none
  4158e8:	cmp	w9, #0x2
  4158ec:	b.eq	416794 <_obstack_memory_used@@Base+0x5508>  // b.none
  4158f0:	str	wzr, [sp, #36]
  4158f4:	b	415b9c <_obstack_memory_used@@Base+0x4910>
  4158f8:	mov	x0, x23
  4158fc:	mov	x1, xzr
  415900:	mov	x2, xzr
  415904:	mov	x3, x22
  415908:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  41590c:	mov	x19, x0
  415910:	cbz	x0, 416784 <_obstack_memory_used@@Base+0x54f8>
  415914:	ldr	w8, [x23, #180]
  415918:	ldr	x25, [sp, #56]
  41591c:	str	x20, [sp, #40]
  415920:	cmp	w8, #0x2
  415924:	b.lt	41622c <_obstack_memory_used@@Base+0x4fa0>  // b.tstop
  415928:	mov	w20, #0x10                  	// #16
  41592c:	ldr	x9, [x28, #104]
  415930:	ldr	x8, [x28, #72]
  415934:	cmp	x9, x8
  415938:	b.le	41622c <_obstack_memory_used@@Base+0x4fa0>
  41593c:	ldr	x9, [x28, #48]
  415940:	cmp	x8, x9
  415944:	b.eq	41622c <_obstack_memory_used@@Base+0x4fa0>  // b.none
  415948:	ldr	x9, [x28, #16]
  41594c:	ldr	w8, [x9, x8, lsl #2]
  415950:	cmn	w8, #0x1
  415954:	b.ne	41622c <_obstack_memory_used@@Base+0x4fa0>  // b.any
  415958:	mov	x0, x22
  41595c:	mov	x1, x28
  415960:	mov	x2, x25
  415964:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  415968:	ldr	x8, [x28, #72]
  41596c:	mov	x1, xzr
  415970:	mov	x2, xzr
  415974:	mov	x3, x22
  415978:	add	x8, x8, w0, sxtw
  41597c:	mov	x0, x23
  415980:	str	x8, [x28, #72]
  415984:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  415988:	mov	x24, x0
  41598c:	sub	x3, x29, #0x50
  415990:	mov	x0, x23
  415994:	mov	x1, x19
  415998:	mov	x2, x24
  41599c:	stur	xzr, [x29, #-80]
  4159a0:	stur	w20, [x29, #-72]
  4159a4:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4159a8:	cbz	x24, 4159b4 <_obstack_memory_used@@Base+0x4728>
  4159ac:	mov	x19, x0
  4159b0:	cbnz	x0, 41592c <_obstack_memory_used@@Base+0x46a0>
  4159b4:	mov	x19, xzr
  4159b8:	mov	w8, #0xc                   	// #12
  4159bc:	ldr	x9, [sp, #40]
  4159c0:	str	w8, [x9]
  4159c4:	b	41669c <_obstack_memory_used@@Base+0x5410>
  4159c8:	ldr	w8, [x22]
  4159cc:	ldr	x9, [x23, #168]
  4159d0:	mov	w10, #0x1                   	// #1
  4159d4:	lsl	w8, w10, w8
  4159d8:	sxtw	x8, w8
  4159dc:	tst	x9, x8
  4159e0:	b.eq	4167e0 <_obstack_memory_used@@Base+0x5554>  // b.none
  4159e4:	ldr	x9, [x23, #160]
  4159e8:	mov	x0, x23
  4159ec:	mov	x1, xzr
  4159f0:	mov	x2, xzr
  4159f4:	orr	x8, x9, x8
  4159f8:	mov	x3, x22
  4159fc:	str	x20, [sp, #40]
  415a00:	str	x8, [x23, #160]
  415a04:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  415a08:	ldr	x25, [sp, #56]
  415a0c:	mov	x19, x0
  415a10:	cbz	x0, 4159b8 <_obstack_memory_used@@Base+0x472c>
  415a14:	ldr	x8, [x23, #152]
  415a18:	ldrb	w9, [x23, #176]
  415a1c:	add	x8, x8, #0x1
  415a20:	orr	w9, w9, #0x2
  415a24:	str	x8, [x23, #152]
  415a28:	strb	w9, [x23, #176]
  415a2c:	b	41622c <_obstack_memory_used@@Base+0x4fa0>
  415a30:	mov	x0, x23
  415a34:	mov	x1, xzr
  415a38:	mov	x2, xzr
  415a3c:	mov	x3, x22
  415a40:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  415a44:	mov	x19, x0
  415a48:	cbz	x0, 416784 <_obstack_memory_used@@Base+0x54f8>
  415a4c:	ldr	w8, [x23, #180]
  415a50:	ldr	x25, [sp, #56]
  415a54:	str	x20, [sp, #40]
  415a58:	cmp	w8, #0x2
  415a5c:	b.lt	41622c <_obstack_memory_used@@Base+0x4fa0>  // b.tstop
  415a60:	ldrb	w8, [x23, #176]
  415a64:	orr	w8, w8, #0x2
  415a68:	strb	w8, [x23, #176]
  415a6c:	b	41622c <_obstack_memory_used@@Base+0x4fa0>
  415a70:	str	x20, [sp, #40]
  415a74:	ldr	x20, [x25, #48]
  415a78:	orr	x2, x21, #0x800000
  415a7c:	mov	x0, x22
  415a80:	mov	x1, x28
  415a84:	add	x8, x20, #0x1
  415a88:	str	x8, [x25, #48]
  415a8c:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  415a90:	ldr	x8, [x28, #72]
  415a94:	add	x8, x8, w0, sxtw
  415a98:	str	x8, [x28, #72]
  415a9c:	ldrb	w8, [x22, #8]
  415aa0:	cmp	w8, #0x9
  415aa4:	b.ne	415b18 <_obstack_memory_used@@Base+0x488c>  // b.any
  415aa8:	mov	x1, xzr
  415aac:	b	4161e0 <_obstack_memory_used@@Base+0x4f54>
  415ab0:	tbnz	w21, #24, 416690 <_obstack_memory_used@@Base+0x5404>
  415ab4:	b	415778 <_obstack_memory_used@@Base+0x44ec>
  415ab8:	mov	x19, xzr
  415abc:	mov	w8, #0x5                   	// #5
  415ac0:	b	416698 <_obstack_memory_used@@Base+0x540c>
  415ac4:	mov	x0, x22
  415ac8:	mov	x1, x28
  415acc:	mov	x2, x21
  415ad0:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  415ad4:	ldr	x8, [x28, #72]
  415ad8:	mov	x1, x25
  415adc:	mov	x2, x22
  415ae0:	mov	x3, x21
  415ae4:	add	x8, x8, w0, sxtw
  415ae8:	str	x8, [x28, #72]
  415aec:	mov	x0, x28
  415af0:	mov	x4, x24
  415af4:	mov	x5, x20
  415af8:	ldp	x20, x19, [sp, #272]
  415afc:	ldp	x22, x21, [sp, #256]
  415b00:	ldp	x24, x23, [sp, #240]
  415b04:	ldp	x26, x25, [sp, #224]
  415b08:	ldp	x28, x27, [sp, #208]
  415b0c:	ldp	x29, x30, [sp, #192]
  415b10:	add	sp, sp, #0x120
  415b14:	b	415710 <_obstack_memory_used@@Base+0x4484>
  415b18:	ldr	x19, [sp, #40]
  415b1c:	add	x4, x24, #0x1
  415b20:	mov	x0, x28
  415b24:	mov	x1, x25
  415b28:	mov	x2, x22
  415b2c:	mov	x3, x21
  415b30:	mov	x5, x19
  415b34:	bl	414d44 <_obstack_memory_used@@Base+0x3ab8>
  415b38:	ldr	w8, [x19]
  415b3c:	cbz	w8, 4161d0 <_obstack_memory_used@@Base+0x4f44>
  415b40:	mov	x19, xzr
  415b44:	b	41669c <_obstack_memory_used@@Base+0x5410>
  415b48:	ldrb	w8, [x27, #32]
  415b4c:	orr	w8, w8, #0x1
  415b50:	strb	w8, [x27, #32]
  415b54:	tbz	w19, #8, 415b64 <_obstack_memory_used@@Base+0x48d8>
  415b58:	ldr	x8, [x25]
  415b5c:	orr	x8, x8, #0x400
  415b60:	str	x8, [x25]
  415b64:	ldr	x8, [x28, #72]
  415b68:	ldr	x2, [sp, #56]
  415b6c:	mov	x0, x22
  415b70:	mov	x1, x28
  415b74:	add	x8, x8, w3, sxtw
  415b78:	str	x8, [x28, #72]
  415b7c:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  415b80:	ldr	w8, [x22, #8]
  415b84:	and	w9, w8, #0xff
  415b88:	cmp	w9, #0x2
  415b8c:	b.eq	416794 <_obstack_memory_used@@Base+0x5508>  // b.none
  415b90:	mov	w3, w0
  415b94:	mov	w9, #0x1                   	// #1
  415b98:	str	w9, [sp, #36]
  415b9c:	and	w9, w8, #0xff
  415ba0:	cmp	w9, #0x15
  415ba4:	b.ne	415bb4 <_obstack_memory_used@@Base+0x4928>  // b.any
  415ba8:	and	w8, w8, #0xffffff00
  415bac:	orr	w8, w8, #0x1
  415bb0:	str	w8, [x22, #8]
  415bb4:	ldr	x4, [sp, #56]
  415bb8:	sub	x21, x29, #0x50
  415bbc:	mov	w8, #0x3                   	// #3
  415bc0:	sub	x0, x29, #0x20
  415bc4:	mov	w5, #0x1                   	// #1
  415bc8:	mov	x1, x28
  415bcc:	mov	x2, x22
  415bd0:	stur	x21, [x29, #-24]
  415bd4:	stur	w8, [x29, #-32]
  415bd8:	mov	w26, #0x1                   	// #1
  415bdc:	bl	416ce8 <_obstack_memory_used@@Base+0x5a5c>
  415be0:	cbnz	w0, 4167a0 <_obstack_memory_used@@Base+0x5514>
  415be4:	ldr	x19, [sp, #56]
  415be8:	stp	xzr, xzr, [sp, #16]
  415bec:	mov	x0, x22
  415bf0:	mov	x1, x28
  415bf4:	mov	x2, x19
  415bf8:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  415bfc:	ldur	w19, [x29, #-32]
  415c00:	mov	w24, w0
  415c04:	cmp	w19, #0x2
  415c08:	b.eq	415d7c <_obstack_memory_used@@Base+0x4af0>  // b.none
  415c0c:	cmp	w19, #0x4
  415c10:	b.ne	415c3c <_obstack_memory_used@@Base+0x49b0>  // b.any
  415c14:	ldr	x0, [x28, #120]
  415c18:	ldur	x4, [x29, #-24]
  415c1c:	ldr	x5, [sp, #56]
  415c20:	sub	x3, x29, #0x10
  415c24:	mov	x1, x25
  415c28:	mov	x2, x27
  415c2c:	bl	416f8c <_obstack_memory_used@@Base+0x5d00>
  415c30:	str	w0, [x20]
  415c34:	cbz	w0, 415db0 <_obstack_memory_used@@Base+0x4b24>
  415c38:	b	4167a8 <_obstack_memory_used@@Base+0x551c>
  415c3c:	ldrb	w8, [x22, #8]
  415c40:	cmp	w8, #0x16
  415c44:	b.eq	415c6c <_obstack_memory_used@@Base+0x49e0>  // b.none
  415c48:	cmp	w8, #0x2
  415c4c:	b.eq	41678c <_obstack_memory_used@@Base+0x5500>  // b.none
  415c50:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xdd74>
  415c54:	mov	w8, w19
  415c58:	add	x11, x11, #0x1c
  415c5c:	adr	x9, 415d7c <_obstack_memory_used@@Base+0x4af0>
  415c60:	ldrb	w10, [x11, x8]
  415c64:	add	x9, x9, x10, lsl #2
  415c68:	br	x9
  415c6c:	ldr	x8, [x28, #72]
  415c70:	ldr	x2, [sp, #56]
  415c74:	add	x0, sp, #0x40
  415c78:	mov	x1, x28
  415c7c:	add	x8, x8, w24, sxtw
  415c80:	str	x8, [x28, #72]
  415c84:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  415c88:	ldrb	w8, [sp, #72]
  415c8c:	cmp	w8, #0x15
  415c90:	b.eq	415d4c <_obstack_memory_used@@Base+0x4ac0>  // b.none
  415c94:	cmp	w8, #0x2
  415c98:	b.eq	41678c <_obstack_memory_used@@Base+0x5500>  // b.none
  415c9c:	ldr	x20, [sp, #56]
  415ca0:	add	x8, sp, #0x50
  415ca4:	mov	w3, w0
  415ca8:	stur	x8, [x29, #-40]
  415cac:	mov	w8, #0x3                   	// #3
  415cb0:	sub	x0, x29, #0x30
  415cb4:	add	x2, sp, #0x40
  415cb8:	mov	w5, #0x1                   	// #1
  415cbc:	mov	x1, x28
  415cc0:	mov	x4, x20
  415cc4:	stur	w8, [x29, #-48]
  415cc8:	bl	416ce8 <_obstack_memory_used@@Base+0x5a5c>
  415ccc:	cbnz	w0, 4167a0 <_obstack_memory_used@@Base+0x5514>
  415cd0:	mov	x0, x22
  415cd4:	mov	x1, x28
  415cd8:	mov	x2, x20
  415cdc:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  415ce0:	ldr	w8, [x23, #180]
  415ce4:	ldur	w20, [x29, #-48]
  415ce8:	mov	w24, w0
  415cec:	mov	w0, #0xb                   	// #11
  415cf0:	cmp	w8, #0x1
  415cf4:	csel	x21, x27, xzr, gt
  415cf8:	cmp	w20, #0x2
  415cfc:	b.eq	4167a0 <_obstack_memory_used@@Base+0x5514>  // b.none
  415d00:	cmp	w20, #0x4
  415d04:	b.eq	4167a0 <_obstack_memory_used@@Base+0x5514>  // b.none
  415d08:	cmp	w19, #0x3
  415d0c:	b.ne	415d20 <_obstack_memory_used@@Base+0x4a94>  // b.any
  415d10:	ldur	x0, [x29, #-24]
  415d14:	bl	402750 <strlen@plt>
  415d18:	cmp	x0, #0x1
  415d1c:	b.hi	41679c <_obstack_memory_used@@Base+0x5510>  // b.pmore
  415d20:	cmp	w20, #0x3
  415d24:	b.ne	415d38 <_obstack_memory_used@@Base+0x4aac>  // b.any
  415d28:	ldur	x0, [x29, #-40]
  415d2c:	bl	402750 <strlen@plt>
  415d30:	cmp	x0, #0x1
  415d34:	b.hi	41679c <_obstack_memory_used@@Base+0x5510>  // b.pmore
  415d38:	cmp	w19, #0x3
  415d3c:	b.eq	415e40 <_obstack_memory_used@@Base+0x4bb4>  // b.none
  415d40:	cbnz	w19, 415e4c <_obstack_memory_used@@Base+0x4bc0>
  415d44:	ldurb	w26, [x29, #-24]
  415d48:	b	415e50 <_obstack_memory_used@@Base+0x4bc4>
  415d4c:	ldr	x8, [x28, #72]
  415d50:	neg	w9, w24
  415d54:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xdd74>
  415d58:	mov	w10, w19
  415d5c:	add	x8, x8, w9, sxtw
  415d60:	add	x11, x11, #0x1c
  415d64:	str	x8, [x28, #72]
  415d68:	strb	w26, [x22, #8]
  415d6c:	adr	x8, 415d7c <_obstack_memory_used@@Base+0x4af0>
  415d70:	ldrb	w9, [x11, x10]
  415d74:	add	x8, x8, x9, lsl #2
  415d78:	br	x8
  415d7c:	ldur	x19, [x29, #-24]
  415d80:	mov	x0, x19
  415d84:	bl	402750 <strlen@plt>
  415d88:	cmp	x0, #0x1
  415d8c:	b.ne	41679c <_obstack_memory_used@@Base+0x5510>  // b.any
  415d90:	ldrb	w8, [x19]
  415d94:	lsr	x9, x8, #3
  415d98:	and	x9, x9, #0x18
  415d9c:	ldr	x10, [x25, x9]
  415da0:	lsl	x8, x26, x8
  415da4:	orr	x8, x8, x10
  415da8:	str	x8, [x25, x9]
  415dac:	str	wzr, [x20]
  415db0:	ldrb	w8, [x22, #8]
  415db4:	cmp	w8, #0x15
  415db8:	b.eq	415ff8 <_obstack_memory_used@@Base+0x4d6c>  // b.none
  415dbc:	cmp	w8, #0x2
  415dc0:	b.eq	41678c <_obstack_memory_used@@Base+0x5500>  // b.none
  415dc4:	ldr	x19, [sp, #56]
  415dc8:	mov	w8, #0x3                   	// #3
  415dcc:	sub	x0, x29, #0x20
  415dd0:	mov	x1, x28
  415dd4:	mov	x2, x22
  415dd8:	mov	w3, w24
  415ddc:	mov	x4, x19
  415de0:	mov	w5, wzr
  415de4:	stur	x21, [x29, #-24]
  415de8:	stur	w8, [x29, #-32]
  415dec:	bl	416ce8 <_obstack_memory_used@@Base+0x5a5c>
  415df0:	cbz	w0, 415bec <_obstack_memory_used@@Base+0x4960>
  415df4:	b	4167a0 <_obstack_memory_used@@Base+0x5514>
  415df8:	ldurb	w8, [x29, #-24]
  415dfc:	lsr	x9, x8, #3
  415e00:	and	x9, x9, #0x18
  415e04:	ldr	x10, [x25, x9]
  415e08:	lsl	x8, x26, x8
  415e0c:	orr	x8, x8, x10
  415e10:	str	x8, [x25, x9]
  415e14:	b	415db0 <_obstack_memory_used@@Base+0x4b24>
  415e18:	ldr	x8, [x27, #40]
  415e1c:	ldr	x9, [sp, #24]
  415e20:	cmp	x9, x8
  415e24:	b.eq	415f68 <_obstack_memory_used@@Base+0x4cdc>  // b.none
  415e28:	ldr	x0, [x27]
  415e2c:	ldur	w9, [x29, #-24]
  415e30:	add	x10, x8, #0x1
  415e34:	str	x10, [x27, #40]
  415e38:	str	w9, [x0, x8, lsl #2]
  415e3c:	b	415db0 <_obstack_memory_used@@Base+0x4b24>
  415e40:	ldur	x8, [x29, #-24]
  415e44:	ldrb	w26, [x8]
  415e48:	b	415e50 <_obstack_memory_used@@Base+0x4bc4>
  415e4c:	mov	w26, wzr
  415e50:	cmp	w20, #0x3
  415e54:	b.eq	415e64 <_obstack_memory_used@@Base+0x4bd8>  // b.none
  415e58:	cbnz	w20, 415e70 <_obstack_memory_used@@Base+0x4be4>
  415e5c:	ldurb	w28, [x29, #-40]
  415e60:	b	415e74 <_obstack_memory_used@@Base+0x4be8>
  415e64:	ldur	x8, [x29, #-40]
  415e68:	ldrb	w28, [x8]
  415e6c:	b	415e74 <_obstack_memory_used@@Base+0x4be8>
  415e70:	mov	w28, wzr
  415e74:	cmp	w19, #0x3
  415e78:	b.eq	415e80 <_obstack_memory_used@@Base+0x4bf4>  // b.none
  415e7c:	cbnz	w19, 415e94 <_obstack_memory_used@@Base+0x4c08>
  415e80:	cbz	x21, 415e98 <_obstack_memory_used@@Base+0x4c0c>
  415e84:	mov	w0, w26
  415e88:	bl	402b00 <btowc@plt>
  415e8c:	mov	w26, w0
  415e90:	b	415e98 <_obstack_memory_used@@Base+0x4c0c>
  415e94:	ldur	w26, [x29, #-24]
  415e98:	cmp	w20, #0x3
  415e9c:	b.eq	415ea4 <_obstack_memory_used@@Base+0x4c18>  // b.none
  415ea0:	cbnz	w20, 415eb8 <_obstack_memory_used@@Base+0x4c2c>
  415ea4:	cbz	x21, 415ebc <_obstack_memory_used@@Base+0x4c30>
  415ea8:	mov	w0, w28
  415eac:	bl	402b00 <btowc@plt>
  415eb0:	mov	w28, w0
  415eb4:	b	415ebc <_obstack_memory_used@@Base+0x4c30>
  415eb8:	ldur	w28, [x29, #-40]
  415ebc:	cmn	w26, #0x1
  415ec0:	mov	w0, #0x3                   	// #3
  415ec4:	b.eq	4167a0 <_obstack_memory_used@@Base+0x5514>  // b.none
  415ec8:	cmn	w28, #0x1
  415ecc:	b.eq	4167a0 <_obstack_memory_used@@Base+0x5514>  // b.none
  415ed0:	ldr	x8, [sp, #56]
  415ed4:	tbz	w8, #16, 415ee0 <_obstack_memory_used@@Base+0x4c54>
  415ed8:	cmp	w26, w28
  415edc:	b.hi	4168b8 <_obstack_memory_used@@Base+0x562c>  // b.pmore
  415ee0:	mov	w14, #0x1                   	// #1
  415ee4:	cbz	x21, 415f14 <_obstack_memory_used@@Base+0x4c88>
  415ee8:	ldr	x8, [x21, #64]
  415eec:	ldr	x9, [sp, #16]
  415ef0:	cmp	x9, x8
  415ef4:	b.eq	415f9c <_obstack_memory_used@@Base+0x4d10>  // b.none
  415ef8:	ldp	x0, x19, [x21, #8]
  415efc:	ldr	x20, [sp, #40]
  415f00:	add	x9, x8, #0x1
  415f04:	str	w26, [x0, x8, lsl #2]
  415f08:	str	x9, [x21, #64]
  415f0c:	str	w28, [x19, x8, lsl #2]
  415f10:	b	415f18 <_obstack_memory_used@@Base+0x4c8c>
  415f14:	ldr	x20, [sp, #40]
  415f18:	mov	w9, w28
  415f1c:	ldr	x28, [sp, #48]
  415f20:	mov	x8, xzr
  415f24:	mov	w10, w26
  415f28:	sub	x21, x29, #0x50
  415f2c:	cmp	x8, x10
  415f30:	b.cc	415f54 <_obstack_memory_used@@Base+0x4cc8>  // b.lo, b.ul, b.last
  415f34:	cmp	x8, x9
  415f38:	b.hi	415f54 <_obstack_memory_used@@Base+0x4cc8>  // b.pmore
  415f3c:	lsr	x11, x8, #3
  415f40:	and	x11, x11, #0x1ffffffffffffff8
  415f44:	ldr	x12, [x25, x11]
  415f48:	lsl	x13, x14, x8
  415f4c:	orr	x12, x12, x13
  415f50:	str	x12, [x25, x11]
  415f54:	add	x8, x8, #0x1
  415f58:	cmp	x8, #0x100
  415f5c:	b.ne	415f2c <_obstack_memory_used@@Base+0x4ca0>  // b.any
  415f60:	mov	w26, #0x1                   	// #1
  415f64:	b	415dac <_obstack_memory_used@@Base+0x4b20>
  415f68:	ldr	x8, [sp, #24]
  415f6c:	ldr	x0, [x27]
  415f70:	mov	w19, #0x1                   	// #1
  415f74:	bfi	x19, x8, #1, #63
  415f78:	lsl	x1, x19, #2
  415f7c:	bl	402a50 <realloc@plt>
  415f80:	cbz	x0, 4168c0 <_obstack_memory_used@@Base+0x5634>
  415f84:	ldr	x8, [x27, #40]
  415f88:	ldr	x28, [sp, #48]
  415f8c:	sub	x21, x29, #0x50
  415f90:	str	x0, [x27]
  415f94:	str	x19, [sp, #24]
  415f98:	b	415e2c <_obstack_memory_used@@Base+0x4ba0>
  415f9c:	ldr	x8, [sp, #16]
  415fa0:	ldr	x0, [x21, #8]
  415fa4:	mov	w20, #0x1                   	// #1
  415fa8:	bfi	x20, x8, #1, #63
  415fac:	lsl	x19, x20, #2
  415fb0:	mov	x1, x19
  415fb4:	bl	402a50 <realloc@plt>
  415fb8:	ldr	x8, [x21, #16]
  415fbc:	str	x0, [sp, #8]
  415fc0:	mov	x1, x19
  415fc4:	mov	x0, x8
  415fc8:	bl	402a50 <realloc@plt>
  415fcc:	ldr	x8, [sp, #8]
  415fd0:	mov	x19, x0
  415fd4:	mov	x0, x8
  415fd8:	cbz	x8, 4168d0 <_obstack_memory_used@@Base+0x5644>
  415fdc:	cbz	x19, 4168d0 <_obstack_memory_used@@Base+0x5644>
  415fe0:	stp	x0, x19, [x21, #8]
  415fe4:	ldr	x8, [x21, #64]
  415fe8:	str	x20, [sp, #16]
  415fec:	ldr	x20, [sp, #40]
  415ff0:	mov	w14, #0x1                   	// #1
  415ff4:	b	415f00 <_obstack_memory_used@@Base+0x4c74>
  415ff8:	ldr	x8, [x28, #72]
  415ffc:	add	x8, x8, w24, sxtw
  416000:	str	x8, [x28, #72]
  416004:	ldr	w8, [sp, #36]
  416008:	cbz	w8, 41601c <_obstack_memory_used@@Base+0x4d90>
  41600c:	ldp	q0, q1, [x25]
  416010:	mvn	v0.16b, v0.16b
  416014:	mvn	v1.16b, v1.16b
  416018:	stp	q0, q1, [x25]
  41601c:	ldr	w8, [x23, #180]
  416020:	cmp	w8, #0x2
  416024:	b.lt	41604c <_obstack_memory_used@@Base+0x4dc0>  // b.tstop
  416028:	ldr	x9, [x23, #120]
  41602c:	mov	x10, xzr
  416030:	ldr	x11, [x9, x10]
  416034:	ldr	x12, [x25, x10]
  416038:	and	x11, x12, x11
  41603c:	str	x11, [x25, x10]
  416040:	add	x10, x10, #0x8
  416044:	cmp	x10, #0x20
  416048:	b.ne	416030 <_obstack_memory_used@@Base+0x4da4>  // b.any
  41604c:	ldr	x9, [x27, #40]
  416050:	cbnz	x9, 41606c <_obstack_memory_used@@Base+0x4de0>
  416054:	ldr	x9, [x27, #48]
  416058:	cbnz	x9, 41606c <_obstack_memory_used@@Base+0x4de0>
  41605c:	ldr	x9, [x27, #56]
  416060:	cbnz	x9, 41606c <_obstack_memory_used@@Base+0x4de0>
  416064:	ldr	x9, [x27, #64]
  416068:	cbz	x9, 416744 <_obstack_memory_used@@Base+0x54b8>
  41606c:	ldrb	w8, [x23, #176]
  416070:	mov	w9, #0x6                   	// #6
  416074:	add	x3, sp, #0x50
  416078:	mov	x0, x23
  41607c:	orr	w8, w8, #0x2
  416080:	mov	x1, xzr
  416084:	mov	x2, xzr
  416088:	strb	w8, [x23, #176]
  41608c:	str	w9, [sp, #88]
  416090:	str	x27, [sp, #80]
  416094:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416098:	cbz	x0, 4168c4 <_obstack_memory_used@@Base+0x5638>
  41609c:	mov	x19, x0
  4160a0:	mov	x8, xzr
  4160a4:	ldr	x9, [x25, x8]
  4160a8:	cbnz	x9, 4160c4 <_obstack_memory_used@@Base+0x4e38>
  4160ac:	add	x8, x8, #0x8
  4160b0:	cmp	x8, #0x20
  4160b4:	b.ne	4160a4 <_obstack_memory_used@@Base+0x4e18>  // b.any
  4160b8:	mov	x0, x25
  4160bc:	bl	402be0 <free@plt>
  4160c0:	b	416110 <_obstack_memory_used@@Base+0x4e84>
  4160c4:	mov	w8, #0x3                   	// #3
  4160c8:	add	x3, sp, #0x50
  4160cc:	mov	x0, x23
  4160d0:	mov	x1, xzr
  4160d4:	mov	x2, xzr
  4160d8:	str	w8, [sp, #88]
  4160dc:	str	x25, [sp, #80]
  4160e0:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4160e4:	cbz	x0, 4168c4 <_obstack_memory_used@@Base+0x5638>
  4160e8:	mov	w8, #0xa                   	// #10
  4160ec:	mov	x1, x0
  4160f0:	stur	xzr, [x29, #-80]
  4160f4:	stur	w8, [x29, #-72]
  4160f8:	sub	x3, x29, #0x50
  4160fc:	mov	x0, x23
  416100:	mov	x2, x19
  416104:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416108:	mov	x19, x0
  41610c:	cbz	x0, 4168c4 <_obstack_memory_used@@Base+0x5638>
  416110:	cbz	x19, 4157ec <_obstack_memory_used@@Base+0x4560>
  416114:	ldr	x25, [sp, #56]
  416118:	b	41622c <_obstack_memory_used@@Base+0x4fa0>
  41611c:	mov	w19, #0x9                   	// #9
  416120:	mov	w8, #0x6                   	// #6
  416124:	mov	x0, x23
  416128:	mov	x1, xzr
  41612c:	mov	x2, xzr
  416130:	mov	x3, x22
  416134:	str	w8, [x22]
  416138:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  41613c:	mov	x25, x0
  416140:	mov	x0, x23
  416144:	mov	x1, xzr
  416148:	mov	x2, xzr
  41614c:	mov	x3, x22
  416150:	str	w19, [x22]
  416154:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416158:	mov	x24, x0
  41615c:	mov	w8, #0xa                   	// #10
  416160:	sub	x3, x29, #0x50
  416164:	mov	x0, x23
  416168:	mov	x1, x25
  41616c:	mov	x2, x24
  416170:	stur	xzr, [x29, #-80]
  416174:	stur	w8, [x29, #-72]
  416178:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  41617c:	cbz	x25, 41618c <_obstack_memory_used@@Base+0x4f00>
  416180:	cbz	x24, 41618c <_obstack_memory_used@@Base+0x4f00>
  416184:	mov	x19, x0
  416188:	cbnz	x0, 4161b0 <_obstack_memory_used@@Base+0x4f24>
  41618c:	mov	x19, xzr
  416190:	b	416784 <_obstack_memory_used@@Base+0x54f8>
  416194:	mov	x0, x23
  416198:	mov	x1, xzr
  41619c:	mov	x2, xzr
  4161a0:	mov	x3, x22
  4161a4:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4161a8:	mov	x19, x0
  4161ac:	cbz	x0, 416784 <_obstack_memory_used@@Base+0x54f8>
  4161b0:	ldr	x2, [sp, #56]
  4161b4:	mov	x0, x22
  4161b8:	mov	x1, x28
  4161bc:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  4161c0:	ldr	x8, [x28, #72]
  4161c4:	add	x8, x8, w0, sxtw
  4161c8:	str	x8, [x28, #72]
  4161cc:	b	41669c <_obstack_memory_used@@Base+0x5410>
  4161d0:	ldrb	w8, [x22, #8]
  4161d4:	mov	x1, x0
  4161d8:	cmp	w8, #0x9
  4161dc:	b.ne	416868 <_obstack_memory_used@@Base+0x55dc>  // b.any
  4161e0:	mov	x25, x21
  4161e4:	cmp	x20, #0x8
  4161e8:	b.hi	416204 <_obstack_memory_used@@Base+0x4f78>  // b.pmore
  4161ec:	ldr	x8, [x23, #168]
  4161f0:	mov	w9, #0x1                   	// #1
  4161f4:	lsl	w9, w9, w20
  4161f8:	sxtw	x9, w9
  4161fc:	orr	x8, x8, x9
  416200:	str	x8, [x23, #168]
  416204:	mov	w8, #0x11                  	// #17
  416208:	sub	x3, x29, #0x50
  41620c:	mov	x0, x23
  416210:	mov	x2, xzr
  416214:	stur	xzr, [x29, #-80]
  416218:	stur	w8, [x29, #-72]
  41621c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416220:	mov	x19, x0
  416224:	cbz	x0, 4159b8 <_obstack_memory_used@@Base+0x472c>
  416228:	str	x20, [x19, #40]
  41622c:	mov	x0, x22
  416230:	mov	x1, x28
  416234:	mov	x2, x25
  416238:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  41623c:	ldr	x8, [x28, #72]
  416240:	mov	w26, #0x1                   	// #1
  416244:	mov	w21, #0xa                   	// #10
  416248:	mov	w20, #0x10                  	// #16
  41624c:	add	x8, x8, w0, sxtw
  416250:	str	x8, [x28, #72]
  416254:	ldrb	w8, [x22, #8]
  416258:	cmp	w8, #0x17
  41625c:	b.hi	41669c <_obstack_memory_used@@Base+0x5410>  // b.pmore
  416260:	mov	w10, #0x800                 	// #2048
  416264:	lsl	w9, w26, w8
  416268:	movk	w10, #0x8c, lsl #16
  41626c:	tst	w9, w10
  416270:	b.eq	41669c <_obstack_memory_used@@Base+0x5410>  // b.none
  416274:	ldr	q0, [x22]
  416278:	ldr	x24, [x28, #72]
  41627c:	cmp	w8, #0x17
  416280:	str	q0, [sp, #80]
  416284:	b.ne	4162c0 <_obstack_memory_used@@Base+0x5034>  // b.any
  416288:	mov	x0, x28
  41628c:	mov	x1, x22
  416290:	mov	x2, x25
  416294:	bl	417704 <_obstack_memory_used@@Base+0x6478>
  416298:	cmn	x0, #0x1
  41629c:	b.ne	4162d8 <_obstack_memory_used@@Base+0x504c>  // b.any
  4162a0:	ldrb	w8, [x22, #8]
  4162a4:	cmp	w8, #0x1
  4162a8:	b.ne	4164e4 <_obstack_memory_used@@Base+0x5258>  // b.any
  4162ac:	ldrb	w9, [x22]
  4162b0:	cmp	w9, #0x2c
  4162b4:	b.ne	4164e4 <_obstack_memory_used@@Base+0x5258>  // b.any
  4162b8:	mov	x27, xzr
  4162bc:	b	4162e8 <_obstack_memory_used@@Base+0x505c>
  4162c0:	cmp	w8, #0x12
  4162c4:	cset	w27, eq  // eq = none
  4162c8:	cmp	w8, #0x13
  4162cc:	mov	w8, #0x1                   	// #1
  4162d0:	cneg	x26, x8, ne  // ne = any
  4162d4:	b	416354 <_obstack_memory_used@@Base+0x50c8>
  4162d8:	mov	x27, x0
  4162dc:	cmn	x0, #0x2
  4162e0:	b.eq	4164f4 <_obstack_memory_used@@Base+0x5268>  // b.none
  4162e4:	ldr	w8, [x22, #8]
  4162e8:	and	w8, w8, #0xff
  4162ec:	cmp	w8, #0x18
  4162f0:	mov	x26, x27
  4162f4:	b.eq	416328 <_obstack_memory_used@@Base+0x509c>  // b.none
  4162f8:	cmp	w8, #0x1
  4162fc:	b.ne	4164f4 <_obstack_memory_used@@Base+0x5268>  // b.any
  416300:	ldrb	w8, [x22]
  416304:	cmp	w8, #0x2c
  416308:	b.ne	4164f4 <_obstack_memory_used@@Base+0x5268>  // b.any
  41630c:	mov	x0, x28
  416310:	mov	x1, x22
  416314:	mov	x2, x25
  416318:	bl	417704 <_obstack_memory_used@@Base+0x6478>
  41631c:	mov	x26, x0
  416320:	cmn	x0, #0x2
  416324:	b.eq	4164f4 <_obstack_memory_used@@Base+0x5268>  // b.none
  416328:	cmn	x26, #0x1
  41632c:	b.eq	416338 <_obstack_memory_used@@Base+0x50ac>  // b.none
  416330:	cmp	x27, x26
  416334:	b.gt	41663c <_obstack_memory_used@@Base+0x53b0>
  416338:	ldrb	w8, [x22, #8]
  41633c:	cmp	w8, #0x18
  416340:	b.ne	41663c <_obstack_memory_used@@Base+0x53b0>  // b.any
  416344:	cmn	x26, #0x1
  416348:	csel	x8, x27, x26, eq  // eq = none
  41634c:	cmp	x8, #0x8, lsl #12
  416350:	b.ge	416670 <_obstack_memory_used@@Base+0x53e4>  // b.tcont
  416354:	mov	x0, x22
  416358:	mov	x1, x28
  41635c:	mov	x2, x25
  416360:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  416364:	ldr	x8, [x28, #72]
  416368:	add	x8, x8, w0, sxtw
  41636c:	str	x8, [x28, #72]
  416370:	cbz	x19, 41654c <_obstack_memory_used@@Base+0x52c0>
  416374:	orr	x8, x26, x27
  416378:	cbz	x8, 416554 <_obstack_memory_used@@Base+0x52c8>
  41637c:	subs	x28, x27, #0x1
  416380:	b.ge	4165a4 <_obstack_memory_used@@Base+0x5318>  // b.tcont
  416384:	mov	x24, xzr
  416388:	mov	x28, x19
  41638c:	ldrb	w8, [x28, #48]
  416390:	cmp	w8, #0x11
  416394:	b.ne	4163fc <_obstack_memory_used@@Base+0x5170>  // b.any
  416398:	ldr	x8, [x28, #40]
  41639c:	mov	x10, x28
  4163a0:	mov	x9, x10
  4163a4:	ldr	x10, [x10, #8]
  4163a8:	cbnz	x10, 4163a0 <_obstack_memory_used@@Base+0x5114>
  4163ac:	ldr	x10, [x9, #16]
  4163b0:	cbnz	x10, 4163a0 <_obstack_memory_used@@Base+0x5114>
  4163b4:	ldr	w10, [x9, #48]
  4163b8:	and	w11, w10, #0xff
  4163bc:	cmp	w11, #0x11
  4163c0:	b.ne	4163d8 <_obstack_memory_used@@Base+0x514c>  // b.any
  4163c4:	ldr	x11, [x9, #40]
  4163c8:	cmp	x11, x8
  4163cc:	b.ne	4163d8 <_obstack_memory_used@@Base+0x514c>  // b.any
  4163d0:	orr	w10, w10, #0x80000
  4163d4:	str	w10, [x9, #48]
  4163d8:	ldr	x11, [x9]
  4163dc:	cbz	x11, 4163fc <_obstack_memory_used@@Base+0x5170>
  4163e0:	ldr	x10, [x11, #16]
  4163e4:	cmp	x10, x9
  4163e8:	mov	x9, x11
  4163ec:	b.eq	4163b4 <_obstack_memory_used@@Base+0x5128>  // b.none
  4163f0:	mov	x9, x11
  4163f4:	cbz	x10, 4163b4 <_obstack_memory_used@@Base+0x5128>
  4163f8:	b	4163a0 <_obstack_memory_used@@Base+0x5114>
  4163fc:	cmn	x26, #0x1
  416400:	cinc	w8, w21, eq  // eq = none
  416404:	sub	x3, x29, #0x50
  416408:	mov	x0, x23
  41640c:	mov	x1, x28
  416410:	mov	x2, xzr
  416414:	stur	xzr, [x29, #-80]
  416418:	stur	w8, [x29, #-72]
  41641c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416420:	cbz	x0, 416620 <_obstack_memory_used@@Base+0x5394>
  416424:	add	x8, x27, #0x2
  416428:	mov	x25, x0
  41642c:	cmp	x8, x26
  416430:	b.gt	41649c <_obstack_memory_used@@Base+0x5210>
  416434:	add	x27, x27, #0x1
  416438:	mov	x0, x28
  41643c:	mov	x1, x23
  416440:	bl	4177e4 <_obstack_memory_used@@Base+0x6558>
  416444:	mov	x28, x0
  416448:	sub	x3, x29, #0x50
  41644c:	mov	x0, x23
  416450:	mov	x1, x25
  416454:	mov	x2, x28
  416458:	stur	xzr, [x29, #-80]
  41645c:	stur	w20, [x29, #-72]
  416460:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416464:	cbz	x28, 416620 <_obstack_memory_used@@Base+0x5394>
  416468:	mov	x1, x0
  41646c:	cbz	x0, 416620 <_obstack_memory_used@@Base+0x5394>
  416470:	sub	x3, x29, #0x50
  416474:	mov	x0, x23
  416478:	mov	x2, xzr
  41647c:	stur	xzr, [x29, #-80]
  416480:	stur	w21, [x29, #-72]
  416484:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416488:	cbz	x0, 416620 <_obstack_memory_used@@Base+0x5394>
  41648c:	add	x27, x27, #0x1
  416490:	mov	x25, x0
  416494:	cmp	x27, x26
  416498:	b.lt	416438 <_obstack_memory_used@@Base+0x51ac>  // b.tstop
  41649c:	ldr	x28, [sp, #48]
  4164a0:	mov	w26, #0x1                   	// #1
  4164a4:	cbz	x24, 4164d0 <_obstack_memory_used@@Base+0x5244>
  4164a8:	sub	x3, x29, #0x50
  4164ac:	mov	x0, x23
  4164b0:	mov	x1, x24
  4164b4:	mov	x2, x25
  4164b8:	stur	xzr, [x29, #-80]
  4164bc:	stur	w20, [x29, #-72]
  4164c0:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4164c4:	ldr	x25, [sp, #56]
  4164c8:	mov	x24, x0
  4164cc:	b	416510 <_obstack_memory_used@@Base+0x5284>
  4164d0:	mov	x24, x25
  4164d4:	ldr	x25, [sp, #56]
  4164d8:	cmp	x24, #0x0
  4164dc:	cset	w8, eq  // eq = none
  4164e0:	b	416528 <_obstack_memory_used@@Base+0x529c>
  4164e4:	ldr	x8, [sp, #40]
  4164e8:	mov	x24, xzr
  4164ec:	str	w21, [x8]
  4164f0:	b	416510 <_obstack_memory_used@@Base+0x5284>
  4164f4:	tbz	w25, #21, 41664c <_obstack_memory_used@@Base+0x53c0>
  4164f8:	str	x24, [x28, #72]
  4164fc:	ldr	q0, [sp, #80]
  416500:	mov	w26, #0x1                   	// #1
  416504:	mov	x24, x19
  416508:	str	q0, [x22]
  41650c:	strb	w26, [x22, #8]
  416510:	cmp	x24, #0x0
  416514:	cset	w8, eq  // eq = none
  416518:	cbnz	x24, 416528 <_obstack_memory_used@@Base+0x529c>
  41651c:	ldr	x9, [sp, #40]
  416520:	ldr	w9, [x9]
  416524:	cbnz	w9, 416700 <_obstack_memory_used@@Base+0x5474>
  416528:	mov	x19, x24
  41652c:	tbz	w25, #24, 416254 <_obstack_memory_used@@Base+0x4fc8>
  416530:	ldrb	w9, [x22, #8]
  416534:	cmp	w9, #0x17
  416538:	b.eq	416688 <_obstack_memory_used@@Base+0x53fc>  // b.none
  41653c:	cmp	w9, #0xb
  416540:	mov	x19, x24
  416544:	b.ne	416254 <_obstack_memory_used@@Base+0x4fc8>  // b.any
  416548:	b	416688 <_obstack_memory_used@@Base+0x53fc>
  41654c:	mov	x24, xzr
  416550:	b	416634 <_obstack_memory_used@@Base+0x53a8>
  416554:	mov	x8, x19
  416558:	mov	w26, #0x1                   	// #1
  41655c:	mov	x24, x8
  416560:	ldr	x8, [x8, #8]
  416564:	cbnz	x8, 41655c <_obstack_memory_used@@Base+0x52d0>
  416568:	ldr	x8, [x24, #16]
  41656c:	cbnz	x8, 41655c <_obstack_memory_used@@Base+0x52d0>
  416570:	add	x0, x24, #0x28
  416574:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  416578:	ldr	x9, [x24]
  41657c:	cbz	x9, 41659c <_obstack_memory_used@@Base+0x5310>
  416580:	ldr	x8, [x9, #16]
  416584:	cmp	x8, x24
  416588:	mov	x24, x9
  41658c:	b.eq	416570 <_obstack_memory_used@@Base+0x52e4>  // b.none
  416590:	mov	x24, x9
  416594:	cbz	x8, 416570 <_obstack_memory_used@@Base+0x52e4>
  416598:	b	41655c <_obstack_memory_used@@Base+0x52d0>
  41659c:	mov	x24, xzr
  4165a0:	b	416510 <_obstack_memory_used@@Base+0x5284>
  4165a4:	mov	x24, x19
  4165a8:	mov	x25, x19
  4165ac:	b.eq	4165f8 <_obstack_memory_used@@Base+0x536c>  // b.none
  4165b0:	mov	x25, x19
  4165b4:	mov	x24, x19
  4165b8:	mov	x0, x25
  4165bc:	mov	x1, x23
  4165c0:	bl	4177e4 <_obstack_memory_used@@Base+0x6558>
  4165c4:	mov	x25, x0
  4165c8:	sub	x3, x29, #0x50
  4165cc:	mov	x0, x23
  4165d0:	mov	x1, x24
  4165d4:	mov	x2, x25
  4165d8:	stur	xzr, [x29, #-80]
  4165dc:	stur	w20, [x29, #-72]
  4165e0:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  4165e4:	cbz	x25, 416620 <_obstack_memory_used@@Base+0x5394>
  4165e8:	mov	x24, x0
  4165ec:	cbz	x0, 416620 <_obstack_memory_used@@Base+0x5394>
  4165f0:	subs	x28, x28, #0x1
  4165f4:	b.ne	4165b8 <_obstack_memory_used@@Base+0x532c>  // b.any
  4165f8:	cmp	x27, x26
  4165fc:	b.ne	41660c <_obstack_memory_used@@Base+0x5380>  // b.any
  416600:	ldr	x28, [sp, #48]
  416604:	mov	w26, #0x1                   	// #1
  416608:	b	4164d4 <_obstack_memory_used@@Base+0x5248>
  41660c:	mov	x0, x25
  416610:	mov	x1, x23
  416614:	bl	4177e4 <_obstack_memory_used@@Base+0x6558>
  416618:	mov	x28, x0
  41661c:	cbnz	x0, 41638c <_obstack_memory_used@@Base+0x5100>
  416620:	ldp	x8, x28, [sp, #40]
  416624:	ldr	x25, [sp, #56]
  416628:	mov	w9, #0xc                   	// #12
  41662c:	mov	x24, xzr
  416630:	str	w9, [x8]
  416634:	mov	w26, #0x1                   	// #1
  416638:	b	416510 <_obstack_memory_used@@Base+0x5284>
  41663c:	ldr	x8, [sp, #40]
  416640:	mov	x24, xzr
  416644:	mov	w26, #0x1                   	// #1
  416648:	b	4164ec <_obstack_memory_used@@Base+0x5260>
  41664c:	ldrb	w8, [x22, #8]
  416650:	ldr	x9, [sp, #40]
  416654:	mov	x24, xzr
  416658:	mov	w26, #0x1                   	// #1
  41665c:	cmp	w8, #0x2
  416660:	mov	w8, #0x9                   	// #9
  416664:	cinc	w8, w8, ne  // ne = any
  416668:	str	w8, [x9]
  41666c:	b	416510 <_obstack_memory_used@@Base+0x5284>
  416670:	ldr	x8, [sp, #40]
  416674:	mov	w9, #0xf                   	// #15
  416678:	mov	x24, xzr
  41667c:	mov	w26, #0x1                   	// #1
  416680:	str	w9, [x8]
  416684:	b	416510 <_obstack_memory_used@@Base+0x5284>
  416688:	ldr	x20, [sp, #40]
  41668c:	tbz	w8, #0, 4166c0 <_obstack_memory_used@@Base+0x5434>
  416690:	mov	x19, xzr
  416694:	mov	w8, #0xd                   	// #13
  416698:	str	w8, [x20]
  41669c:	mov	x0, x19
  4166a0:	ldp	x20, x19, [sp, #272]
  4166a4:	ldp	x22, x21, [sp, #256]
  4166a8:	ldp	x24, x23, [sp, #240]
  4166ac:	ldp	x26, x25, [sp, #224]
  4166b0:	ldp	x28, x27, [sp, #208]
  4166b4:	ldp	x29, x30, [sp, #192]
  4166b8:	add	sp, sp, #0x120
  4166bc:	ret
  4166c0:	mov	x19, x24
  4166c4:	ldr	x24, [x24, #8]
  4166c8:	cbnz	x24, 4166c0 <_obstack_memory_used@@Base+0x5434>
  4166cc:	ldr	x24, [x19, #16]
  4166d0:	cbnz	x24, 4166c0 <_obstack_memory_used@@Base+0x5434>
  4166d4:	add	x0, x19, #0x28
  4166d8:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  4166dc:	ldr	x8, [x19]
  4166e0:	cbz	x8, 416690 <_obstack_memory_used@@Base+0x5404>
  4166e4:	ldr	x24, [x8, #16]
  4166e8:	cmp	x24, x19
  4166ec:	mov	x19, x8
  4166f0:	b.eq	4166d4 <_obstack_memory_used@@Base+0x5448>  // b.none
  4166f4:	mov	x19, x8
  4166f8:	cbz	x24, 4166d4 <_obstack_memory_used@@Base+0x5448>
  4166fc:	b	4166c0 <_obstack_memory_used@@Base+0x5434>
  416700:	cbz	x19, 41669c <_obstack_memory_used@@Base+0x5410>
  416704:	mov	x20, x19
  416708:	ldr	x19, [x19, #8]
  41670c:	cbnz	x19, 416704 <_obstack_memory_used@@Base+0x5478>
  416710:	ldr	x19, [x20, #16]
  416714:	cbnz	x19, 416704 <_obstack_memory_used@@Base+0x5478>
  416718:	add	x0, x20, #0x28
  41671c:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  416720:	ldr	x8, [x20]
  416724:	cbz	x8, 415b40 <_obstack_memory_used@@Base+0x48b4>
  416728:	ldr	x19, [x8, #16]
  41672c:	cmp	x19, x20
  416730:	mov	x20, x8
  416734:	b.eq	416718 <_obstack_memory_used@@Base+0x548c>  // b.none
  416738:	mov	x20, x8
  41673c:	cbz	x19, 416718 <_obstack_memory_used@@Base+0x548c>
  416740:	b	416704 <_obstack_memory_used@@Base+0x5478>
  416744:	cmp	w8, #0x2
  416748:	b.lt	41675c <_obstack_memory_used@@Base+0x54d0>  // b.tstop
  41674c:	ldr	x8, [x27, #72]
  416750:	cbnz	x8, 41606c <_obstack_memory_used@@Base+0x4de0>
  416754:	ldrb	w8, [x27, #32]
  416758:	tbnz	w8, #0, 41606c <_obstack_memory_used@@Base+0x4de0>
  41675c:	mov	x0, x27
  416760:	bl	414408 <_obstack_memory_used@@Base+0x317c>
  416764:	mov	w8, #0x3                   	// #3
  416768:	add	x3, sp, #0x50
  41676c:	mov	x0, x23
  416770:	mov	x1, xzr
  416774:	mov	x2, xzr
  416778:	str	w8, [sp, #88]
  41677c:	str	x25, [sp, #80]
  416780:	b	416104 <_obstack_memory_used@@Base+0x4e78>
  416784:	mov	w8, #0xc                   	// #12
  416788:	b	416698 <_obstack_memory_used@@Base+0x540c>
  41678c:	mov	w0, #0x7                   	// #7
  416790:	b	4167a0 <_obstack_memory_used@@Base+0x5514>
  416794:	mov	w8, #0x2                   	// #2
  416798:	b	4168c8 <_obstack_memory_used@@Base+0x563c>
  41679c:	mov	w0, #0x3                   	// #3
  4167a0:	ldp	x20, x28, [sp, #40]
  4167a4:	str	w0, [x20]
  4167a8:	mov	x0, x25
  4167ac:	bl	402be0 <free@plt>
  4167b0:	mov	x0, x27
  4167b4:	bl	414408 <_obstack_memory_used@@Base+0x317c>
  4167b8:	mov	x19, xzr
  4167bc:	b	416110 <_obstack_memory_used@@Base+0x4e84>
  4167c0:	mov	x0, x25
  4167c4:	bl	402be0 <free@plt>
  4167c8:	mov	x0, x27
  4167cc:	bl	402be0 <free@plt>
  4167d0:	mov	w8, #0xc                   	// #12
  4167d4:	mov	x19, xzr
  4167d8:	str	w8, [x20]
  4167dc:	b	416110 <_obstack_memory_used@@Base+0x4e84>
  4167e0:	mov	x19, xzr
  4167e4:	mov	w8, #0x6                   	// #6
  4167e8:	b	416698 <_obstack_memory_used@@Base+0x540c>
  4167ec:	mov	x20, xzr
  4167f0:	mov	x19, xzr
  4167f4:	b	416800 <_obstack_memory_used@@Base+0x5574>
  4167f8:	mov	w19, #0x2                   	// #2
  4167fc:	mov	w20, #0x80                  	// #128
  416800:	bl	402bc0 <__ctype_b_loc@plt>
  416804:	ldr	x8, [x0]
  416808:	ldr	x28, [sp, #48]
  41680c:	mov	w9, #0x1                   	// #1
  416810:	add	x8, x8, x20, lsl #1
  416814:	add	x11, x23, x19, lsl #3
  416818:	mov	x10, xzr
  41681c:	add	x11, x11, #0xb8
  416820:	add	x12, x20, x10
  416824:	cmp	x12, #0x5f
  416828:	b.eq	416834 <_obstack_memory_used@@Base+0x55a8>  // b.none
  41682c:	ldrh	w12, [x8, x10, lsl #1]
  416830:	tbz	w12, #3, 416844 <_obstack_memory_used@@Base+0x55b8>
  416834:	ldr	x12, [x11]
  416838:	lsl	x13, x9, x10
  41683c:	orr	x12, x12, x13
  416840:	str	x12, [x11]
  416844:	add	x10, x10, #0x1
  416848:	cmp	x10, #0x40
  41684c:	b.ne	416820 <_obstack_memory_used@@Base+0x5594>  // b.any
  416850:	add	x19, x19, #0x1
  416854:	add	x20, x20, #0x40
  416858:	cmp	x19, #0x4
  41685c:	add	x8, x8, #0x80
  416860:	b.ne	416814 <_obstack_memory_used@@Base+0x5588>  // b.any
  416864:	b	41586c <_obstack_memory_used@@Base+0x45e0>
  416868:	cbz	x1, 4168ac <_obstack_memory_used@@Base+0x5620>
  41686c:	mov	x19, x1
  416870:	ldr	x1, [x1, #8]
  416874:	cbnz	x1, 41686c <_obstack_memory_used@@Base+0x55e0>
  416878:	ldr	x1, [x19, #16]
  41687c:	cbnz	x1, 41686c <_obstack_memory_used@@Base+0x55e0>
  416880:	add	x0, x19, #0x28
  416884:	bl	41436c <_obstack_memory_used@@Base+0x30e0>
  416888:	ldr	x8, [x19]
  41688c:	cbz	x8, 4168ac <_obstack_memory_used@@Base+0x5620>
  416890:	ldr	x1, [x8, #16]
  416894:	cmp	x1, x19
  416898:	mov	x19, x8
  41689c:	b.eq	416880 <_obstack_memory_used@@Base+0x55f4>  // b.none
  4168a0:	mov	x19, x8
  4168a4:	cbz	x1, 416880 <_obstack_memory_used@@Base+0x55f4>
  4168a8:	b	41686c <_obstack_memory_used@@Base+0x55e0>
  4168ac:	mov	x19, xzr
  4168b0:	mov	w8, #0x8                   	// #8
  4168b4:	b	4159bc <_obstack_memory_used@@Base+0x4730>
  4168b8:	mov	w0, #0xb                   	// #11
  4168bc:	b	4167a0 <_obstack_memory_used@@Base+0x5514>
  4168c0:	ldr	x28, [sp, #48]
  4168c4:	mov	w8, #0xc                   	// #12
  4168c8:	str	w8, [x20]
  4168cc:	b	4167a8 <_obstack_memory_used@@Base+0x551c>
  4168d0:	bl	402be0 <free@plt>
  4168d4:	mov	x0, x19
  4168d8:	bl	402be0 <free@plt>
  4168dc:	mov	w0, #0xc                   	// #12
  4168e0:	b	4167a0 <_obstack_memory_used@@Base+0x5514>
  4168e4:	stp	x29, x30, [sp, #-48]!
  4168e8:	stp	x22, x21, [sp, #16]
  4168ec:	stp	x20, x19, [sp, #32]
  4168f0:	ldr	w8, [x0, #128]
  4168f4:	mov	x21, x3
  4168f8:	mov	x19, x2
  4168fc:	mov	x22, x0
  416900:	cmp	w8, #0xf
  416904:	mov	x20, x1
  416908:	mov	x29, sp
  41690c:	b.eq	41696c <_obstack_memory_used@@Base+0x56e0>  // b.none
  416910:	ldr	x0, [x22, #112]
  416914:	add	w9, w8, #0x1
  416918:	sxtw	x8, w8
  41691c:	add	x0, x0, x8, lsl #6
  416920:	str	w9, [x22, #128]
  416924:	str	xzr, [x0, #8]!
  416928:	stp	x20, x19, [x0, #8]
  41692c:	ldr	q0, [x21]
  416930:	mov	x9, #0xffffffffffffffff    	// #-1
  416934:	stp	xzr, xzr, [x0, #24]
  416938:	str	x9, [x0, #56]
  41693c:	stur	q0, [x0, #40]
  416940:	ldr	w8, [x0, #48]
  416944:	and	w8, w8, #0xfff3ffff
  416948:	str	w8, [x0, #48]
  41694c:	cbz	x20, 416954 <_obstack_memory_used@@Base+0x56c8>
  416950:	str	x0, [x20]
  416954:	cbz	x19, 41695c <_obstack_memory_used@@Base+0x56d0>
  416958:	str	x0, [x19]
  41695c:	ldp	x20, x19, [sp, #32]
  416960:	ldp	x22, x21, [sp, #16]
  416964:	ldp	x29, x30, [sp], #48
  416968:	ret
  41696c:	mov	w0, #0x3c8                 	// #968
  416970:	bl	4028f0 <malloc@plt>
  416974:	cbz	x0, 41695c <_obstack_memory_used@@Base+0x56d0>
  416978:	ldr	x9, [x22, #112]
  41697c:	mov	w8, wzr
  416980:	str	x9, [x0]
  416984:	str	x0, [x22, #112]
  416988:	str	wzr, [x22, #128]
  41698c:	b	416914 <_obstack_memory_used@@Base+0x5688>
  416990:	sub	sp, sp, #0x80
  416994:	stp	x26, x25, [sp, #64]
  416998:	stp	x20, x19, [sp, #112]
  41699c:	mov	x26, x1
  4169a0:	mov	x20, x0
  4169a4:	mov	w0, #0x20                  	// #32
  4169a8:	mov	w1, #0x1                   	// #1
  4169ac:	stp	x29, x30, [sp, #48]
  4169b0:	stp	x24, x23, [sp, #80]
  4169b4:	stp	x22, x21, [sp, #96]
  4169b8:	add	x29, sp, #0x30
  4169bc:	mov	x19, x5
  4169c0:	mov	w23, w4
  4169c4:	mov	x24, x3
  4169c8:	mov	x25, x2
  4169cc:	str	xzr, [sp, #24]
  4169d0:	bl	402a20 <calloc@plt>
  4169d4:	cbz	x0, 416b5c <_obstack_memory_used@@Base+0x58d0>
  4169d8:	mov	x21, x0
  4169dc:	mov	w0, #0x50                  	// #80
  4169e0:	mov	w1, #0x1                   	// #1
  4169e4:	bl	402a20 <calloc@plt>
  4169e8:	cbz	x0, 416b54 <_obstack_memory_used@@Base+0x58c8>
  4169ec:	mov	x22, x0
  4169f0:	and	w8, w23, #0x1
  4169f4:	strb	w8, [x0, #32]
  4169f8:	add	x3, sp, #0x18
  4169fc:	mov	x0, x26
  416a00:	mov	x1, x21
  416a04:	mov	x2, x22
  416a08:	mov	x4, x25
  416a0c:	mov	x5, xzr
  416a10:	bl	416f8c <_obstack_memory_used@@Base+0x5d00>
  416a14:	cbnz	w0, 416b6c <_obstack_memory_used@@Base+0x58e0>
  416a18:	ldrb	w8, [x24]
  416a1c:	cbz	w8, 416a48 <_obstack_memory_used@@Base+0x57bc>
  416a20:	add	x9, x24, #0x1
  416a24:	mov	w10, #0x1                   	// #1
  416a28:	lsr	w11, w8, #3
  416a2c:	and	x11, x11, #0x18
  416a30:	ldr	x12, [x21, x11]
  416a34:	lsl	x8, x10, x8
  416a38:	orr	x8, x12, x8
  416a3c:	str	x8, [x21, x11]
  416a40:	ldrb	w8, [x9], #1
  416a44:	cbnz	w8, 416a28 <_obstack_memory_used@@Base+0x579c>
  416a48:	tbz	w23, #0, 416a5c <_obstack_memory_used@@Base+0x57d0>
  416a4c:	ldp	q0, q1, [x21]
  416a50:	mvn	v0.16b, v0.16b
  416a54:	mvn	v1.16b, v1.16b
  416a58:	stp	q0, q1, [x21]
  416a5c:	ldr	w8, [x20, #180]
  416a60:	cmp	w8, #0x2
  416a64:	b.lt	416a8c <_obstack_memory_used@@Base+0x5800>  // b.tstop
  416a68:	ldr	x8, [x20, #120]
  416a6c:	mov	x9, xzr
  416a70:	ldr	x10, [x8, x9]
  416a74:	ldr	x11, [x21, x9]
  416a78:	and	x10, x11, x10
  416a7c:	str	x10, [x21, x9]
  416a80:	add	x9, x9, #0x8
  416a84:	cmp	x9, #0x20
  416a88:	b.ne	416a70 <_obstack_memory_used@@Base+0x57e4>  // b.any
  416a8c:	mov	w8, #0x3                   	// #3
  416a90:	add	x3, sp, #0x8
  416a94:	mov	x0, x20
  416a98:	mov	x1, xzr
  416a9c:	mov	x2, xzr
  416aa0:	str	x21, [sp, #8]
  416aa4:	str	w8, [sp, #16]
  416aa8:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416aac:	cbz	x0, 416b40 <_obstack_memory_used@@Base+0x58b4>
  416ab0:	ldr	w8, [x20, #180]
  416ab4:	mov	x23, x0
  416ab8:	cmp	w8, #0x2
  416abc:	b.lt	416b18 <_obstack_memory_used@@Base+0x588c>  // b.tstop
  416ac0:	mov	w8, #0x6                   	// #6
  416ac4:	str	w8, [sp, #16]
  416ac8:	str	x22, [sp, #8]
  416acc:	ldrb	w8, [x20, #176]
  416ad0:	add	x3, sp, #0x8
  416ad4:	mov	x0, x20
  416ad8:	mov	x1, xzr
  416adc:	orr	w8, w8, #0x2
  416ae0:	mov	x2, xzr
  416ae4:	strb	w8, [x20, #176]
  416ae8:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416aec:	cbz	x0, 416b40 <_obstack_memory_used@@Base+0x58b4>
  416af0:	mov	x2, x0
  416af4:	mov	w8, #0xa                   	// #10
  416af8:	sub	x3, x29, #0x10
  416afc:	mov	x0, x20
  416b00:	mov	x1, x23
  416b04:	stur	xzr, [x29, #-16]
  416b08:	stur	w8, [x29, #-8]
  416b0c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  416b10:	mov	x23, x0
  416b14:	b	416b20 <_obstack_memory_used@@Base+0x5894>
  416b18:	mov	x0, x22
  416b1c:	bl	414408 <_obstack_memory_used@@Base+0x317c>
  416b20:	mov	x0, x23
  416b24:	ldp	x20, x19, [sp, #112]
  416b28:	ldp	x22, x21, [sp, #96]
  416b2c:	ldp	x24, x23, [sp, #80]
  416b30:	ldp	x26, x25, [sp, #64]
  416b34:	ldp	x29, x30, [sp, #48]
  416b38:	add	sp, sp, #0x80
  416b3c:	ret
  416b40:	mov	x0, x21
  416b44:	bl	402be0 <free@plt>
  416b48:	mov	x0, x22
  416b4c:	bl	414408 <_obstack_memory_used@@Base+0x317c>
  416b50:	b	416b5c <_obstack_memory_used@@Base+0x58d0>
  416b54:	mov	x0, x21
  416b58:	bl	402be0 <free@plt>
  416b5c:	mov	x23, xzr
  416b60:	mov	w8, #0xc                   	// #12
  416b64:	str	w8, [x19]
  416b68:	b	416b20 <_obstack_memory_used@@Base+0x5894>
  416b6c:	mov	w25, w0
  416b70:	mov	x0, x21
  416b74:	bl	402be0 <free@plt>
  416b78:	mov	x0, x22
  416b7c:	bl	414408 <_obstack_memory_used@@Base+0x317c>
  416b80:	mov	x23, xzr
  416b84:	str	w25, [x19]
  416b88:	b	416b20 <_obstack_memory_used@@Base+0x5894>
  416b8c:	ldr	x9, [x1, #104]
  416b90:	ldr	x8, [x1, #72]
  416b94:	cmp	x9, x8
  416b98:	b.le	416c0c <_obstack_memory_used@@Base+0x5980>
  416b9c:	ldr	x9, [x1, #8]
  416ba0:	ldrb	w8, [x9, x8]
  416ba4:	strb	w8, [x0]
  416ba8:	ldr	w9, [x1, #144]
  416bac:	cmp	w9, #0x2
  416bb0:	b.lt	416bd4 <_obstack_memory_used@@Base+0x5948>  // b.tstop
  416bb4:	ldr	x9, [x1, #72]
  416bb8:	ldr	x10, [x1, #48]
  416bbc:	cmp	x9, x10
  416bc0:	b.eq	416bd4 <_obstack_memory_used@@Base+0x5948>  // b.none
  416bc4:	ldr	x10, [x1, #16]
  416bc8:	ldr	w9, [x10, x9, lsl #2]
  416bcc:	cmn	w9, #0x1
  416bd0:	b.eq	416c8c <_obstack_memory_used@@Base+0x5a00>  // b.none
  416bd4:	tbz	w2, #0, 416c1c <_obstack_memory_used@@Base+0x5990>
  416bd8:	cmp	w8, #0x5c
  416bdc:	b.ne	416c1c <_obstack_memory_used@@Base+0x5990>  // b.any
  416be0:	ldr	x8, [x1, #72]
  416be4:	ldr	x9, [x1, #88]
  416be8:	add	x8, x8, #0x1
  416bec:	cmp	x8, x9
  416bf0:	b.ge	416c8c <_obstack_memory_used@@Base+0x5a00>  // b.tcont
  416bf4:	ldr	x9, [x1, #8]
  416bf8:	str	x8, [x1, #72]
  416bfc:	ldrb	w9, [x9, x8]
  416c00:	mov	w8, #0x1                   	// #1
  416c04:	strb	w9, [x0]
  416c08:	b	416c90 <_obstack_memory_used@@Base+0x5a04>
  416c0c:	mov	w8, wzr
  416c10:	mov	w9, #0x2                   	// #2
  416c14:	strb	w9, [x0, #8]
  416c18:	b	416cac <_obstack_memory_used@@Base+0x5a20>
  416c1c:	cmp	w8, #0x5c
  416c20:	b.gt	416c74 <_obstack_memory_used@@Base+0x59e8>
  416c24:	cmp	w8, #0x2d
  416c28:	b.eq	416c98 <_obstack_memory_used@@Base+0x5a0c>  // b.none
  416c2c:	cmp	w8, #0x5b
  416c30:	b.ne	416c8c <_obstack_memory_used@@Base+0x5a00>  // b.any
  416c34:	ldr	x8, [x1, #72]
  416c38:	ldr	x9, [x1, #88]
  416c3c:	add	x8, x8, #0x1
  416c40:	cmp	x8, x9
  416c44:	b.ge	416cb4 <_obstack_memory_used@@Base+0x5a28>  // b.tcont
  416c48:	ldr	x9, [x1, #8]
  416c4c:	ldrb	w8, [x9, x8]
  416c50:	cmp	w8, #0x3d
  416c54:	strb	w8, [x0]
  416c58:	b.eq	416ccc <_obstack_memory_used@@Base+0x5a40>  // b.none
  416c5c:	cmp	w8, #0x3a
  416c60:	b.eq	416cd4 <_obstack_memory_used@@Base+0x5a48>  // b.none
  416c64:	cmp	w8, #0x2e
  416c68:	b.ne	416cb8 <_obstack_memory_used@@Base+0x5a2c>  // b.any
  416c6c:	mov	w8, #0x1a                  	// #26
  416c70:	b	416cdc <_obstack_memory_used@@Base+0x5a50>
  416c74:	cmp	w8, #0x5d
  416c78:	b.eq	416ca0 <_obstack_memory_used@@Base+0x5a14>  // b.none
  416c7c:	cmp	w8, #0x5e
  416c80:	b.ne	416c8c <_obstack_memory_used@@Base+0x5a00>  // b.any
  416c84:	mov	w8, #0x19                  	// #25
  416c88:	b	416ca4 <_obstack_memory_used@@Base+0x5a18>
  416c8c:	mov	w8, #0x1                   	// #1
  416c90:	strb	w8, [x0, #8]
  416c94:	b	416cac <_obstack_memory_used@@Base+0x5a20>
  416c98:	mov	w8, #0x16                  	// #22
  416c9c:	b	416ca4 <_obstack_memory_used@@Base+0x5a18>
  416ca0:	mov	w8, #0x15                  	// #21
  416ca4:	strb	w8, [x0, #8]
  416ca8:	mov	w8, #0x1                   	// #1
  416cac:	mov	w0, w8
  416cb0:	ret
  416cb4:	strb	wzr, [x0]
  416cb8:	mov	w8, #0x1                   	// #1
  416cbc:	mov	w9, #0x5b                  	// #91
  416cc0:	strb	w8, [x0, #8]
  416cc4:	strb	w9, [x0]
  416cc8:	b	416cac <_obstack_memory_used@@Base+0x5a20>
  416ccc:	mov	w8, #0x1c                  	// #28
  416cd0:	b	416cdc <_obstack_memory_used@@Base+0x5a50>
  416cd4:	tbz	w2, #2, 416cb8 <_obstack_memory_used@@Base+0x5a2c>
  416cd8:	mov	w8, #0x1e                  	// #30
  416cdc:	strb	w8, [x0, #8]
  416ce0:	mov	w8, #0x2                   	// #2
  416ce4:	b	416cac <_obstack_memory_used@@Base+0x5a20>
  416ce8:	sub	sp, sp, #0x30
  416cec:	stp	x29, x30, [sp, #32]
  416cf0:	ldr	w8, [x1, #144]
  416cf4:	ldr	x9, [x1, #72]
  416cf8:	add	x29, sp, #0x20
  416cfc:	cmp	w8, #0x1
  416d00:	b.eq	416d70 <_obstack_memory_used@@Base+0x5ae4>  // b.none
  416d04:	ldr	x8, [x1, #48]
  416d08:	add	x10, x9, #0x1
  416d0c:	cmp	x10, x8
  416d10:	b.ge	416d70 <_obstack_memory_used@@Base+0x5ae4>  // b.tcont
  416d14:	ldr	x10, [x1, #16]
  416d18:	sub	x8, x8, x9
  416d1c:	mov	w11, #0x1                   	// #1
  416d20:	add	x12, x10, x9, lsl #2
  416d24:	ldr	w13, [x12, x11, lsl #2]
  416d28:	cmn	w13, #0x1
  416d2c:	b.ne	416d44 <_obstack_memory_used@@Base+0x5ab8>  // b.any
  416d30:	add	x11, x11, #0x1
  416d34:	cmp	x8, x11
  416d38:	b.ne	416d24 <_obstack_memory_used@@Base+0x5a98>  // b.any
  416d3c:	mov	x11, x8
  416d40:	b	416d4c <_obstack_memory_used@@Base+0x5ac0>
  416d44:	cmp	w11, #0x2
  416d48:	b.lt	416d70 <_obstack_memory_used@@Base+0x5ae4>  // b.tstop
  416d4c:	mov	w12, #0x1                   	// #1
  416d50:	str	w12, [x0]
  416d54:	ldr	w9, [x10, x9, lsl #2]
  416d58:	mov	w8, wzr
  416d5c:	str	w9, [x0, #8]
  416d60:	ldr	x9, [x1, #72]
  416d64:	add	x9, x9, w11, sxtw
  416d68:	str	x9, [x1, #72]
  416d6c:	b	416f74 <_obstack_memory_used@@Base+0x5ce8>
  416d70:	add	x8, x9, w3, sxtw
  416d74:	str	x8, [x1, #72]
  416d78:	ldrb	w10, [x2, #8]
  416d7c:	sub	w9, w10, #0x16
  416d80:	cmp	w9, #0x8
  416d84:	b.hi	416f64 <_obstack_memory_used@@Base+0x5cd8>  // b.pmore
  416d88:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xdd74>
  416d8c:	add	x11, x11, #0x20
  416d90:	adr	x12, 416da0 <_obstack_memory_used@@Base+0x5b14>
  416d94:	ldrb	w13, [x11, x9]
  416d98:	add	x12, x12, x13, lsl #2
  416d9c:	br	x12
  416da0:	ldr	x9, [x1, #104]
  416da4:	cmp	x9, x8
  416da8:	b.le	416ee8 <_obstack_memory_used@@Base+0x5c5c>
  416dac:	ldrb	w9, [x2]
  416db0:	mov	x8, xzr
  416db4:	and	w10, w10, #0xff
  416db8:	cmp	w10, #0x1e
  416dbc:	b.ne	416dc8 <_obstack_memory_used@@Base+0x5b3c>  // b.any
  416dc0:	ldrb	w10, [x1, #139]
  416dc4:	cbnz	w10, 416e1c <_obstack_memory_used@@Base+0x5b90>
  416dc8:	ldr	x10, [x1, #72]
  416dcc:	ldr	x11, [x1, #8]
  416dd0:	add	x12, x10, #0x1
  416dd4:	str	x12, [x1, #72]
  416dd8:	ldrb	w10, [x11, x10]
  416ddc:	ldr	x11, [x1, #104]
  416de0:	cmp	x11, x12
  416de4:	b.le	416ee8 <_obstack_memory_used@@Base+0x5c5c>
  416de8:	cmp	w9, w10, uxtb
  416dec:	b.ne	416e00 <_obstack_memory_used@@Base+0x5b74>  // b.any
  416df0:	ldr	x11, [x1, #8]
  416df4:	ldrb	w11, [x11, x12]
  416df8:	cmp	w11, #0x5d
  416dfc:	b.eq	416ef0 <_obstack_memory_used@@Base+0x5c64>  // b.none
  416e00:	ldr	x11, [x0, #8]
  416e04:	strb	w10, [x11, x8]
  416e08:	add	x8, x8, #0x1
  416e0c:	cmp	x8, #0x20
  416e10:	b.eq	416ee8 <_obstack_memory_used@@Base+0x5c5c>  // b.none
  416e14:	ldrb	w10, [x2, #8]
  416e18:	b	416db4 <_obstack_memory_used@@Base+0x5b28>
  416e1c:	ldrb	w10, [x1, #140]
  416e20:	cbz	w10, 416ea4 <_obstack_memory_used@@Base+0x5c18>
  416e24:	ldr	x11, [x1, #72]
  416e28:	ldr	x13, [x1, #48]
  416e2c:	subs	x12, x13, x11
  416e30:	b.eq	416e44 <_obstack_memory_used@@Base+0x5bb8>  // b.none
  416e34:	ldr	x10, [x1, #16]
  416e38:	ldr	w10, [x10, x11, lsl #2]
  416e3c:	cmn	w10, #0x1
  416e40:	b.eq	416ec4 <_obstack_memory_used@@Base+0x5c38>  // b.none
  416e44:	ldr	x10, [x1, #24]
  416e48:	ldr	x14, [x1, #40]
  416e4c:	ldr	x15, [x1]
  416e50:	ldr	x10, [x10, x11, lsl #3]
  416e54:	add	x10, x14, x10
  416e58:	ldrsb	w10, [x15, x10]
  416e5c:	tbnz	w10, #31, 416ec4 <_obstack_memory_used@@Base+0x5c38>
  416e60:	ldr	w14, [x1, #144]
  416e64:	cmp	w14, #0x1
  416e68:	b.eq	416ed8 <_obstack_memory_used@@Base+0x5c4c>  // b.none
  416e6c:	add	x14, x11, #0x1
  416e70:	cmp	x14, x13
  416e74:	b.ge	416ed8 <_obstack_memory_used@@Base+0x5c4c>  // b.tcont
  416e78:	ldr	x13, [x1, #16]
  416e7c:	add	x14, x13, x11, lsl #2
  416e80:	mov	w13, #0x1                   	// #1
  416e84:	ldr	w15, [x14, x13, lsl #2]
  416e88:	cmn	w15, #0x1
  416e8c:	b.ne	416edc <_obstack_memory_used@@Base+0x5c50>  // b.any
  416e90:	add	x13, x13, #0x1
  416e94:	cmp	x12, x13
  416e98:	b.ne	416e84 <_obstack_memory_used@@Base+0x5bf8>  // b.any
  416e9c:	mov	x13, x12
  416ea0:	b	416edc <_obstack_memory_used@@Base+0x5c50>
  416ea4:	ldr	x10, [x1, #72]
  416ea8:	ldr	x11, [x1, #40]
  416eac:	ldr	x13, [x1]
  416eb0:	add	x12, x10, #0x1
  416eb4:	str	x12, [x1, #72]
  416eb8:	add	x10, x10, x11
  416ebc:	ldrb	w10, [x13, x10]
  416ec0:	b	416ddc <_obstack_memory_used@@Base+0x5b50>
  416ec4:	ldr	x10, [x1, #8]
  416ec8:	add	x12, x11, #0x1
  416ecc:	str	x12, [x1, #72]
  416ed0:	ldrb	w10, [x10, x11]
  416ed4:	b	416ddc <_obstack_memory_used@@Base+0x5b50>
  416ed8:	mov	w13, #0x1                   	// #1
  416edc:	add	x12, x11, w13, sxtw
  416ee0:	str	x12, [x1, #72]
  416ee4:	b	416ddc <_obstack_memory_used@@Base+0x5b50>
  416ee8:	mov	w8, #0x7                   	// #7
  416eec:	b	416f74 <_obstack_memory_used@@Base+0x5ce8>
  416ef0:	add	x9, x12, #0x1
  416ef4:	str	x9, [x1, #72]
  416ef8:	ldr	x9, [x0, #8]
  416efc:	strb	wzr, [x9, w8, uxtw]
  416f00:	ldrb	w8, [x2, #8]
  416f04:	cmp	w8, #0x1e
  416f08:	b.eq	416f28 <_obstack_memory_used@@Base+0x5c9c>  // b.none
  416f0c:	cmp	w8, #0x1c
  416f10:	b.eq	416f30 <_obstack_memory_used@@Base+0x5ca4>  // b.none
  416f14:	cmp	w8, #0x1a
  416f18:	mov	w8, wzr
  416f1c:	b.ne	416f74 <_obstack_memory_used@@Base+0x5ce8>  // b.any
  416f20:	mov	w9, #0x3                   	// #3
  416f24:	b	416f34 <_obstack_memory_used@@Base+0x5ca8>
  416f28:	mov	w9, #0x4                   	// #4
  416f2c:	b	416f34 <_obstack_memory_used@@Base+0x5ca8>
  416f30:	mov	w9, #0x2                   	// #2
  416f34:	mov	w8, wzr
  416f38:	str	w9, [x0]
  416f3c:	b	416f74 <_obstack_memory_used@@Base+0x5ce8>
  416f40:	tbnz	w5, #0, 416f64 <_obstack_memory_used@@Base+0x5cd8>
  416f44:	stp	x2, x0, [sp]
  416f48:	add	x0, sp, #0x10
  416f4c:	mov	x2, x4
  416f50:	bl	416b8c <_obstack_memory_used@@Base+0x5900>
  416f54:	ldrb	w8, [sp, #24]
  416f58:	ldp	x2, x0, [sp]
  416f5c:	cmp	w8, #0x15
  416f60:	b.ne	416f84 <_obstack_memory_used@@Base+0x5cf8>  // b.any
  416f64:	str	wzr, [x0]
  416f68:	ldrb	w9, [x2]
  416f6c:	mov	w8, wzr
  416f70:	strb	w9, [x0, #8]
  416f74:	ldp	x29, x30, [sp, #32]
  416f78:	mov	w0, w8
  416f7c:	add	sp, sp, #0x30
  416f80:	ret
  416f84:	mov	w8, #0xb                   	// #11
  416f88:	b	416f74 <_obstack_memory_used@@Base+0x5ce8>
  416f8c:	stp	x29, x30, [sp, #-64]!
  416f90:	stp	x24, x23, [sp, #16]
  416f94:	stp	x22, x21, [sp, #32]
  416f98:	stp	x20, x19, [sp, #48]
  416f9c:	mov	x21, x4
  416fa0:	mov	x23, x3
  416fa4:	mov	x22, x2
  416fa8:	mov	x19, x1
  416fac:	mov	x20, x0
  416fb0:	mov	x29, sp
  416fb4:	tbz	w5, #22, 416fe8 <_obstack_memory_used@@Base+0x5d5c>
  416fb8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  416fbc:	add	x1, x1, #0x95e
  416fc0:	mov	x0, x21
  416fc4:	bl	402bb0 <strcmp@plt>
  416fc8:	cbz	w0, 416fe0 <_obstack_memory_used@@Base+0x5d54>
  416fcc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  416fd0:	add	x1, x1, #0x964
  416fd4:	mov	x0, x21
  416fd8:	bl	402bb0 <strcmp@plt>
  416fdc:	cbnz	w0, 416fe8 <_obstack_memory_used@@Base+0x5d5c>
  416fe0:	adrp	x21, 41e000 <_obstack_memory_used@@Base+0xcd74>
  416fe4:	add	x21, x21, #0x96a
  416fe8:	ldr	x8, [x23]
  416fec:	ldr	x9, [x22, #72]
  416ff0:	cmp	x8, x9
  416ff4:	b.eq	417588 <_obstack_memory_used@@Base+0x62fc>  // b.none
  416ff8:	mov	x0, x21
  416ffc:	bl	4027c0 <wctype@plt>
  417000:	ldr	x8, [x22, #72]
  417004:	ldr	x9, [x22, #24]
  417008:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41700c:	add	x1, x1, #0x9dd
  417010:	add	x10, x8, #0x1
  417014:	str	x10, [x22, #72]
  417018:	str	x0, [x9, x8, lsl #3]
  41701c:	mov	x0, x21
  417020:	bl	402bb0 <strcmp@plt>
  417024:	cbz	w0, 41710c <_obstack_memory_used@@Base+0x5e80>
  417028:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41702c:	add	x1, x1, #0x9ef
  417030:	mov	x0, x21
  417034:	bl	402bb0 <strcmp@plt>
  417038:	cbz	w0, 41714c <_obstack_memory_used@@Base+0x5ec0>
  41703c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  417040:	add	x1, x1, #0x964
  417044:	mov	x0, x21
  417048:	bl	402bb0 <strcmp@plt>
  41704c:	cbz	w0, 41718c <_obstack_memory_used@@Base+0x5f00>
  417050:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  417054:	add	x1, x1, #0x9d1
  417058:	mov	x0, x21
  41705c:	bl	402bb0 <strcmp@plt>
  417060:	cbz	w0, 4171cc <_obstack_memory_used@@Base+0x5f40>
  417064:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  417068:	add	x1, x1, #0x96a
  41706c:	mov	x0, x21
  417070:	bl	402bb0 <strcmp@plt>
  417074:	cbz	w0, 41720c <_obstack_memory_used@@Base+0x5f80>
  417078:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  41707c:	add	x1, x1, #0x9cb
  417080:	mov	x0, x21
  417084:	bl	402bb0 <strcmp@plt>
  417088:	cbz	w0, 41724c <_obstack_memory_used@@Base+0x5fc0>
  41708c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  417090:	add	x1, x1, #0x9e3
  417094:	mov	x0, x21
  417098:	bl	402bb0 <strcmp@plt>
  41709c:	cbz	w0, 4172a0 <_obstack_memory_used@@Base+0x6014>
  4170a0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4170a4:	add	x1, x1, #0x95e
  4170a8:	mov	x0, x21
  4170ac:	bl	402bb0 <strcmp@plt>
  4170b0:	cbz	w0, 4172e4 <_obstack_memory_used@@Base+0x6058>
  4170b4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4170b8:	add	x1, x1, #0x9f5
  4170bc:	mov	x0, x21
  4170c0:	bl	402bb0 <strcmp@plt>
  4170c4:	cbz	w0, 417328 <_obstack_memory_used@@Base+0x609c>
  4170c8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4170cc:	add	x1, x1, #0x9e9
  4170d0:	mov	x0, x21
  4170d4:	bl	402bb0 <strcmp@plt>
  4170d8:	cbz	w0, 4173a4 <_obstack_memory_used@@Base+0x6118>
  4170dc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4170e0:	add	x1, x1, #0x9d7
  4170e4:	mov	x0, x21
  4170e8:	bl	402bb0 <strcmp@plt>
  4170ec:	cbz	w0, 417420 <_obstack_memory_used@@Base+0x6194>
  4170f0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xcd74>
  4170f4:	add	x1, x1, #0x9ca
  4170f8:	mov	x0, x21
  4170fc:	bl	402bb0 <strcmp@plt>
  417100:	cbz	w0, 41749c <_obstack_memory_used@@Base+0x6210>
  417104:	mov	w0, #0x4                   	// #4
  417108:	b	41728c <_obstack_memory_used@@Base+0x6000>
  41710c:	bl	402bc0 <__ctype_b_loc@plt>
  417110:	ldr	x8, [x0]
  417114:	mov	x9, xzr
  417118:	mov	w10, #0x1                   	// #1
  41711c:	cbnz	x20, 41736c <_obstack_memory_used@@Base+0x60e0>
  417120:	ldrh	w11, [x8, x9, lsl #1]
  417124:	tbz	w11, #3, 41713c <_obstack_memory_used@@Base+0x5eb0>
  417128:	ubfx	x11, x9, #6, #2
  41712c:	ldr	x12, [x19, x11, lsl #3]
  417130:	lsl	x13, x10, x9
  417134:	orr	x12, x12, x13
  417138:	str	x12, [x19, x11, lsl #3]
  41713c:	add	x9, x9, #0x1
  417140:	cmp	x9, #0x100
  417144:	b.ne	417120 <_obstack_memory_used@@Base+0x5e94>  // b.any
  417148:	b	417288 <_obstack_memory_used@@Base+0x5ffc>
  41714c:	bl	402bc0 <__ctype_b_loc@plt>
  417150:	ldr	x8, [x0]
  417154:	mov	x9, xzr
  417158:	mov	w10, #0x1                   	// #1
  41715c:	cbnz	x20, 4173e8 <_obstack_memory_used@@Base+0x615c>
  417160:	ldrh	w11, [x8, x9, lsl #1]
  417164:	tbz	w11, #1, 41717c <_obstack_memory_used@@Base+0x5ef0>
  417168:	ubfx	x11, x9, #6, #2
  41716c:	ldr	x12, [x19, x11, lsl #3]
  417170:	lsl	x13, x10, x9
  417174:	orr	x12, x12, x13
  417178:	str	x12, [x19, x11, lsl #3]
  41717c:	add	x9, x9, #0x1
  417180:	cmp	x9, #0x100
  417184:	b.ne	417160 <_obstack_memory_used@@Base+0x5ed4>  // b.any
  417188:	b	417288 <_obstack_memory_used@@Base+0x5ffc>
  41718c:	bl	402bc0 <__ctype_b_loc@plt>
  417190:	ldr	x8, [x0]
  417194:	mov	x9, xzr
  417198:	mov	w10, #0x1                   	// #1
  41719c:	cbnz	x20, 417464 <_obstack_memory_used@@Base+0x61d8>
  4171a0:	ldrh	w11, [x8, x9, lsl #1]
  4171a4:	tbz	w11, #9, 4171bc <_obstack_memory_used@@Base+0x5f30>
  4171a8:	ubfx	x11, x9, #6, #2
  4171ac:	ldr	x12, [x19, x11, lsl #3]
  4171b0:	lsl	x13, x10, x9
  4171b4:	orr	x12, x12, x13
  4171b8:	str	x12, [x19, x11, lsl #3]
  4171bc:	add	x9, x9, #0x1
  4171c0:	cmp	x9, #0x100
  4171c4:	b.ne	4171a0 <_obstack_memory_used@@Base+0x5f14>  // b.any
  4171c8:	b	417288 <_obstack_memory_used@@Base+0x5ffc>
  4171cc:	bl	402bc0 <__ctype_b_loc@plt>
  4171d0:	ldr	x8, [x0]
  4171d4:	mov	x9, xzr
  4171d8:	mov	w10, #0x1                   	// #1
  4171dc:	cbnz	x20, 4174e0 <_obstack_memory_used@@Base+0x6254>
  4171e0:	ldrh	w11, [x8, x9, lsl #1]
  4171e4:	tbz	w11, #13, 4171fc <_obstack_memory_used@@Base+0x5f70>
  4171e8:	ubfx	x11, x9, #6, #2
  4171ec:	ldr	x12, [x19, x11, lsl #3]
  4171f0:	lsl	x13, x10, x9
  4171f4:	orr	x12, x12, x13
  4171f8:	str	x12, [x19, x11, lsl #3]
  4171fc:	add	x9, x9, #0x1
  417200:	cmp	x9, #0x100
  417204:	b.ne	4171e0 <_obstack_memory_used@@Base+0x5f54>  // b.any
  417208:	b	417288 <_obstack_memory_used@@Base+0x5ffc>
  41720c:	bl	402bc0 <__ctype_b_loc@plt>
  417210:	ldr	x8, [x0]
  417214:	mov	x9, xzr
  417218:	mov	w10, #0x1                   	// #1
  41721c:	cbnz	x20, 417518 <_obstack_memory_used@@Base+0x628c>
  417220:	ldrh	w11, [x8, x9, lsl #1]
  417224:	tbz	w11, #10, 41723c <_obstack_memory_used@@Base+0x5fb0>
  417228:	ubfx	x11, x9, #6, #2
  41722c:	ldr	x12, [x19, x11, lsl #3]
  417230:	lsl	x13, x10, x9
  417234:	orr	x12, x12, x13
  417238:	str	x12, [x19, x11, lsl #3]
  41723c:	add	x9, x9, #0x1
  417240:	cmp	x9, #0x100
  417244:	b.ne	417220 <_obstack_memory_used@@Base+0x5f94>  // b.any
  417248:	b	417288 <_obstack_memory_used@@Base+0x5ffc>
  41724c:	bl	402bc0 <__ctype_b_loc@plt>
  417250:	ldr	x8, [x0]
  417254:	mov	x9, xzr
  417258:	mov	w10, #0x1                   	// #1
  41725c:	cbnz	x20, 417550 <_obstack_memory_used@@Base+0x62c4>
  417260:	ldrh	w11, [x8, x9, lsl #1]
  417264:	tbz	w11, #11, 41727c <_obstack_memory_used@@Base+0x5ff0>
  417268:	ubfx	x11, x9, #6, #2
  41726c:	ldr	x12, [x19, x11, lsl #3]
  417270:	lsl	x13, x10, x9
  417274:	orr	x12, x12, x13
  417278:	str	x12, [x19, x11, lsl #3]
  41727c:	add	x9, x9, #0x1
  417280:	cmp	x9, #0x100
  417284:	b.ne	417260 <_obstack_memory_used@@Base+0x5fd4>  // b.any
  417288:	mov	w0, wzr
  41728c:	ldp	x20, x19, [sp, #48]
  417290:	ldp	x22, x21, [sp, #32]
  417294:	ldp	x24, x23, [sp, #16]
  417298:	ldp	x29, x30, [sp], #64
  41729c:	ret
  4172a0:	bl	402bc0 <__ctype_b_loc@plt>
  4172a4:	ldr	x8, [x0]
  4172a8:	mov	x9, xzr
  4172ac:	mov	w10, #0x1                   	// #1
  4172b0:	cbnz	x20, 4175ac <_obstack_memory_used@@Base+0x6320>
  4172b4:	ldrh	w11, [x8, x9, lsl #1]
  4172b8:	tbz	w11, #14, 4172d0 <_obstack_memory_used@@Base+0x6044>
  4172bc:	ubfx	x11, x9, #6, #2
  4172c0:	ldr	x12, [x19, x11, lsl #3]
  4172c4:	lsl	x13, x10, x9
  4172c8:	orr	x12, x12, x13
  4172cc:	str	x12, [x19, x11, lsl #3]
  4172d0:	add	x9, x9, #0x1
  4172d4:	cmp	x9, #0x100
  4172d8:	mov	w0, wzr
  4172dc:	b.ne	4172b4 <_obstack_memory_used@@Base+0x6028>  // b.any
  4172e0:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4172e4:	bl	402bc0 <__ctype_b_loc@plt>
  4172e8:	ldr	x8, [x0]
  4172ec:	mov	x9, xzr
  4172f0:	mov	w10, #0x1                   	// #1
  4172f4:	cbnz	x20, 4175e4 <_obstack_memory_used@@Base+0x6358>
  4172f8:	ldrh	w11, [x8, x9, lsl #1]
  4172fc:	tbz	w11, #8, 417314 <_obstack_memory_used@@Base+0x6088>
  417300:	ubfx	x11, x9, #6, #2
  417304:	ldr	x12, [x19, x11, lsl #3]
  417308:	lsl	x13, x10, x9
  41730c:	orr	x12, x12, x13
  417310:	str	x12, [x19, x11, lsl #3]
  417314:	add	x9, x9, #0x1
  417318:	cmp	x9, #0x100
  41731c:	mov	w0, wzr
  417320:	b.ne	4172f8 <_obstack_memory_used@@Base+0x606c>  // b.any
  417324:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417328:	bl	402bc0 <__ctype_b_loc@plt>
  41732c:	ldr	x8, [x0]
  417330:	mov	x9, xzr
  417334:	mov	w10, #0x1                   	// #1
  417338:	cbnz	x20, 41761c <_obstack_memory_used@@Base+0x6390>
  41733c:	ldrh	w11, [x8, x9, lsl #1]
  417340:	tbz	w11, #0, 417358 <_obstack_memory_used@@Base+0x60cc>
  417344:	ubfx	x11, x9, #6, #2
  417348:	ldr	x12, [x19, x11, lsl #3]
  41734c:	lsl	x13, x10, x9
  417350:	orr	x12, x12, x13
  417354:	str	x12, [x19, x11, lsl #3]
  417358:	add	x9, x9, #0x1
  41735c:	cmp	x9, #0x100
  417360:	mov	w0, wzr
  417364:	b.ne	41733c <_obstack_memory_used@@Base+0x60b0>  // b.any
  417368:	b	41728c <_obstack_memory_used@@Base+0x6000>
  41736c:	ldrh	w11, [x8, x9, lsl #1]
  417370:	tbz	w11, #3, 417390 <_obstack_memory_used@@Base+0x6104>
  417374:	ldrb	w11, [x20, x9]
  417378:	lsr	x12, x11, #3
  41737c:	and	x12, x12, #0x18
  417380:	ldr	x13, [x19, x12]
  417384:	lsl	x11, x10, x11
  417388:	orr	x11, x11, x13
  41738c:	str	x11, [x19, x12]
  417390:	add	x9, x9, #0x1
  417394:	cmp	x9, #0x100
  417398:	mov	w0, wzr
  41739c:	b.ne	41736c <_obstack_memory_used@@Base+0x60e0>  // b.any
  4173a0:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4173a4:	bl	402bc0 <__ctype_b_loc@plt>
  4173a8:	ldr	x8, [x0]
  4173ac:	mov	x9, xzr
  4173b0:	mov	w10, #0x1                   	// #1
  4173b4:	cbnz	x20, 417654 <_obstack_memory_used@@Base+0x63c8>
  4173b8:	ldrsh	w11, [x8, x9, lsl #1]
  4173bc:	tbz	w11, #31, 4173d4 <_obstack_memory_used@@Base+0x6148>
  4173c0:	ubfx	x11, x9, #6, #2
  4173c4:	ldr	x12, [x19, x11, lsl #3]
  4173c8:	lsl	x13, x10, x9
  4173cc:	orr	x12, x12, x13
  4173d0:	str	x12, [x19, x11, lsl #3]
  4173d4:	add	x9, x9, #0x1
  4173d8:	cmp	x9, #0x100
  4173dc:	mov	w0, wzr
  4173e0:	b.ne	4173b8 <_obstack_memory_used@@Base+0x612c>  // b.any
  4173e4:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4173e8:	ldrh	w11, [x8, x9, lsl #1]
  4173ec:	tbz	w11, #1, 41740c <_obstack_memory_used@@Base+0x6180>
  4173f0:	ldrb	w11, [x20, x9]
  4173f4:	lsr	x12, x11, #3
  4173f8:	and	x12, x12, #0x18
  4173fc:	ldr	x13, [x19, x12]
  417400:	lsl	x11, x10, x11
  417404:	orr	x11, x11, x13
  417408:	str	x11, [x19, x12]
  41740c:	add	x9, x9, #0x1
  417410:	cmp	x9, #0x100
  417414:	mov	w0, wzr
  417418:	b.ne	4173e8 <_obstack_memory_used@@Base+0x615c>  // b.any
  41741c:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417420:	bl	402bc0 <__ctype_b_loc@plt>
  417424:	ldr	x8, [x0]
  417428:	mov	x9, xzr
  41742c:	mov	w10, #0x1                   	// #1
  417430:	cbnz	x20, 41768c <_obstack_memory_used@@Base+0x6400>
  417434:	ldrh	w11, [x8, x9, lsl #1]
  417438:	tbz	w11, #2, 417450 <_obstack_memory_used@@Base+0x61c4>
  41743c:	ubfx	x11, x9, #6, #2
  417440:	ldr	x12, [x19, x11, lsl #3]
  417444:	lsl	x13, x10, x9
  417448:	orr	x12, x12, x13
  41744c:	str	x12, [x19, x11, lsl #3]
  417450:	add	x9, x9, #0x1
  417454:	cmp	x9, #0x100
  417458:	mov	w0, wzr
  41745c:	b.ne	417434 <_obstack_memory_used@@Base+0x61a8>  // b.any
  417460:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417464:	ldrh	w11, [x8, x9, lsl #1]
  417468:	tbz	w11, #9, 417488 <_obstack_memory_used@@Base+0x61fc>
  41746c:	ldrb	w11, [x20, x9]
  417470:	lsr	x12, x11, #3
  417474:	and	x12, x12, #0x18
  417478:	ldr	x13, [x19, x12]
  41747c:	lsl	x11, x10, x11
  417480:	orr	x11, x11, x13
  417484:	str	x11, [x19, x12]
  417488:	add	x9, x9, #0x1
  41748c:	cmp	x9, #0x100
  417490:	mov	w0, wzr
  417494:	b.ne	417464 <_obstack_memory_used@@Base+0x61d8>  // b.any
  417498:	b	41728c <_obstack_memory_used@@Base+0x6000>
  41749c:	bl	402bc0 <__ctype_b_loc@plt>
  4174a0:	ldr	x8, [x0]
  4174a4:	mov	x9, xzr
  4174a8:	mov	w10, #0x1                   	// #1
  4174ac:	cbnz	x20, 4176c4 <_obstack_memory_used@@Base+0x6438>
  4174b0:	ldrh	w11, [x8, x9, lsl #1]
  4174b4:	tbz	w11, #12, 4174cc <_obstack_memory_used@@Base+0x6240>
  4174b8:	ubfx	x11, x9, #6, #2
  4174bc:	ldr	x12, [x19, x11, lsl #3]
  4174c0:	lsl	x13, x10, x9
  4174c4:	orr	x12, x12, x13
  4174c8:	str	x12, [x19, x11, lsl #3]
  4174cc:	add	x9, x9, #0x1
  4174d0:	cmp	x9, #0x100
  4174d4:	mov	w0, wzr
  4174d8:	b.ne	4174b0 <_obstack_memory_used@@Base+0x6224>  // b.any
  4174dc:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4174e0:	ldrh	w11, [x8, x9, lsl #1]
  4174e4:	tbz	w11, #13, 417504 <_obstack_memory_used@@Base+0x6278>
  4174e8:	ldrb	w11, [x20, x9]
  4174ec:	lsr	x12, x11, #3
  4174f0:	and	x12, x12, #0x18
  4174f4:	ldr	x13, [x19, x12]
  4174f8:	lsl	x11, x10, x11
  4174fc:	orr	x11, x11, x13
  417500:	str	x11, [x19, x12]
  417504:	add	x9, x9, #0x1
  417508:	cmp	x9, #0x100
  41750c:	mov	w0, wzr
  417510:	b.ne	4174e0 <_obstack_memory_used@@Base+0x6254>  // b.any
  417514:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417518:	ldrh	w11, [x8, x9, lsl #1]
  41751c:	tbz	w11, #10, 41753c <_obstack_memory_used@@Base+0x62b0>
  417520:	ldrb	w11, [x20, x9]
  417524:	lsr	x12, x11, #3
  417528:	and	x12, x12, #0x18
  41752c:	ldr	x13, [x19, x12]
  417530:	lsl	x11, x10, x11
  417534:	orr	x11, x11, x13
  417538:	str	x11, [x19, x12]
  41753c:	add	x9, x9, #0x1
  417540:	cmp	x9, #0x100
  417544:	mov	w0, wzr
  417548:	b.ne	417518 <_obstack_memory_used@@Base+0x628c>  // b.any
  41754c:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417550:	ldrh	w11, [x8, x9, lsl #1]
  417554:	tbz	w11, #11, 417574 <_obstack_memory_used@@Base+0x62e8>
  417558:	ldrb	w11, [x20, x9]
  41755c:	lsr	x12, x11, #3
  417560:	and	x12, x12, #0x18
  417564:	ldr	x13, [x19, x12]
  417568:	lsl	x11, x10, x11
  41756c:	orr	x11, x11, x13
  417570:	str	x11, [x19, x12]
  417574:	add	x9, x9, #0x1
  417578:	cmp	x9, #0x100
  41757c:	mov	w0, wzr
  417580:	b.ne	417550 <_obstack_memory_used@@Base+0x62c4>  // b.any
  417584:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417588:	ldr	x0, [x22, #24]
  41758c:	mov	w24, #0x1                   	// #1
  417590:	bfi	x24, x8, #1, #63
  417594:	lsl	x1, x24, #3
  417598:	bl	402a50 <realloc@plt>
  41759c:	cbz	x0, 4176fc <_obstack_memory_used@@Base+0x6470>
  4175a0:	str	x0, [x22, #24]
  4175a4:	str	x24, [x23]
  4175a8:	b	416ff8 <_obstack_memory_used@@Base+0x5d6c>
  4175ac:	ldrh	w11, [x8, x9, lsl #1]
  4175b0:	tbz	w11, #14, 4175d0 <_obstack_memory_used@@Base+0x6344>
  4175b4:	ldrb	w11, [x20, x9]
  4175b8:	lsr	x12, x11, #3
  4175bc:	and	x12, x12, #0x18
  4175c0:	ldr	x13, [x19, x12]
  4175c4:	lsl	x11, x10, x11
  4175c8:	orr	x11, x11, x13
  4175cc:	str	x11, [x19, x12]
  4175d0:	add	x9, x9, #0x1
  4175d4:	cmp	x9, #0x100
  4175d8:	mov	w0, wzr
  4175dc:	b.ne	4175ac <_obstack_memory_used@@Base+0x6320>  // b.any
  4175e0:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4175e4:	ldrh	w11, [x8, x9, lsl #1]
  4175e8:	tbz	w11, #8, 417608 <_obstack_memory_used@@Base+0x637c>
  4175ec:	ldrb	w11, [x20, x9]
  4175f0:	lsr	x12, x11, #3
  4175f4:	and	x12, x12, #0x18
  4175f8:	ldr	x13, [x19, x12]
  4175fc:	lsl	x11, x10, x11
  417600:	orr	x11, x11, x13
  417604:	str	x11, [x19, x12]
  417608:	add	x9, x9, #0x1
  41760c:	cmp	x9, #0x100
  417610:	mov	w0, wzr
  417614:	b.ne	4175e4 <_obstack_memory_used@@Base+0x6358>  // b.any
  417618:	b	41728c <_obstack_memory_used@@Base+0x6000>
  41761c:	ldrh	w11, [x8, x9, lsl #1]
  417620:	tbz	w11, #0, 417640 <_obstack_memory_used@@Base+0x63b4>
  417624:	ldrb	w11, [x20, x9]
  417628:	lsr	x12, x11, #3
  41762c:	and	x12, x12, #0x18
  417630:	ldr	x13, [x19, x12]
  417634:	lsl	x11, x10, x11
  417638:	orr	x11, x11, x13
  41763c:	str	x11, [x19, x12]
  417640:	add	x9, x9, #0x1
  417644:	cmp	x9, #0x100
  417648:	mov	w0, wzr
  41764c:	b.ne	41761c <_obstack_memory_used@@Base+0x6390>  // b.any
  417650:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417654:	ldrsh	w11, [x8, x9, lsl #1]
  417658:	tbz	w11, #31, 417678 <_obstack_memory_used@@Base+0x63ec>
  41765c:	ldrb	w11, [x20, x9]
  417660:	lsr	x12, x11, #3
  417664:	and	x12, x12, #0x18
  417668:	ldr	x13, [x19, x12]
  41766c:	lsl	x11, x10, x11
  417670:	orr	x11, x11, x13
  417674:	str	x11, [x19, x12]
  417678:	add	x9, x9, #0x1
  41767c:	cmp	x9, #0x100
  417680:	mov	w0, wzr
  417684:	b.ne	417654 <_obstack_memory_used@@Base+0x63c8>  // b.any
  417688:	b	41728c <_obstack_memory_used@@Base+0x6000>
  41768c:	ldrh	w11, [x8, x9, lsl #1]
  417690:	tbz	w11, #2, 4176b0 <_obstack_memory_used@@Base+0x6424>
  417694:	ldrb	w11, [x20, x9]
  417698:	lsr	x12, x11, #3
  41769c:	and	x12, x12, #0x18
  4176a0:	ldr	x13, [x19, x12]
  4176a4:	lsl	x11, x10, x11
  4176a8:	orr	x11, x11, x13
  4176ac:	str	x11, [x19, x12]
  4176b0:	add	x9, x9, #0x1
  4176b4:	cmp	x9, #0x100
  4176b8:	mov	w0, wzr
  4176bc:	b.ne	41768c <_obstack_memory_used@@Base+0x6400>  // b.any
  4176c0:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4176c4:	ldrh	w11, [x8, x9, lsl #1]
  4176c8:	tbz	w11, #12, 4176e8 <_obstack_memory_used@@Base+0x645c>
  4176cc:	ldrb	w11, [x20, x9]
  4176d0:	lsr	x12, x11, #3
  4176d4:	and	x12, x12, #0x18
  4176d8:	ldr	x13, [x19, x12]
  4176dc:	lsl	x11, x10, x11
  4176e0:	orr	x11, x11, x13
  4176e4:	str	x11, [x19, x12]
  4176e8:	add	x9, x9, #0x1
  4176ec:	cmp	x9, #0x100
  4176f0:	mov	w0, wzr
  4176f4:	b.ne	4176c4 <_obstack_memory_used@@Base+0x6438>  // b.any
  4176f8:	b	41728c <_obstack_memory_used@@Base+0x6000>
  4176fc:	mov	w0, #0xc                   	// #12
  417700:	b	41728c <_obstack_memory_used@@Base+0x6000>
  417704:	stp	x29, x30, [sp, #-80]!
  417708:	str	x25, [sp, #16]
  41770c:	stp	x24, x23, [sp, #32]
  417710:	stp	x22, x21, [sp, #48]
  417714:	stp	x20, x19, [sp, #64]
  417718:	mov	x19, x2
  41771c:	mov	x20, x1
  417720:	mov	x21, x0
  417724:	mov	x9, #0xffffffffffffffff    	// #-1
  417728:	mov	w23, #0xa                   	// #10
  41772c:	mov	w24, #0x8030                	// #32816
  417730:	mov	w25, #0x8000                	// #32768
  417734:	mov	x29, sp
  417738:	mov	x0, x20
  41773c:	mov	x1, x21
  417740:	mov	x2, x19
  417744:	mov	x22, x9
  417748:	bl	414ecc <_obstack_memory_used@@Base+0x3c40>
  41774c:	ldr	x8, [x21, #72]
  417750:	add	x8, x8, w0, sxtw
  417754:	str	x8, [x21, #72]
  417758:	ldrb	w10, [x20, #8]
  41775c:	cmp	w10, #0x18
  417760:	b.eq	4177c8 <_obstack_memory_used@@Base+0x653c>  // b.none
  417764:	cmp	w10, #0x2
  417768:	b.eq	4177c4 <_obstack_memory_used@@Base+0x6538>  // b.none
  41776c:	ldrb	w8, [x20]
  417770:	cmp	w8, #0x2c
  417774:	b.eq	4177c8 <_obstack_memory_used@@Base+0x653c>  // b.none
  417778:	cmp	w8, #0x30
  41777c:	mov	x9, #0xfffffffffffffffe    	// #-2
  417780:	b.cc	417738 <_obstack_memory_used@@Base+0x64ac>  // b.lo, b.ul, b.last
  417784:	cmp	w10, #0x1
  417788:	b.ne	417738 <_obstack_memory_used@@Base+0x64ac>  // b.any
  41778c:	cmn	x22, #0x2
  417790:	mov	x9, #0xfffffffffffffffe    	// #-2
  417794:	b.eq	417738 <_obstack_memory_used@@Base+0x64ac>  // b.none
  417798:	cmp	w8, #0x39
  41779c:	b.hi	417738 <_obstack_memory_used@@Base+0x64ac>  // b.pmore
  4177a0:	cmn	x22, #0x1
  4177a4:	b.eq	4177bc <_obstack_memory_used@@Base+0x6530>  // b.none
  4177a8:	madd	x8, x22, x23, x8
  4177ac:	sub	x9, x8, #0x30
  4177b0:	cmp	x8, x24
  4177b4:	csel	x9, x25, x9, gt
  4177b8:	b	417738 <_obstack_memory_used@@Base+0x64ac>
  4177bc:	sub	x9, x8, #0x30
  4177c0:	b	417738 <_obstack_memory_used@@Base+0x64ac>
  4177c4:	mov	x22, #0xfffffffffffffffe    	// #-2
  4177c8:	mov	x0, x22
  4177cc:	ldp	x20, x19, [sp, #64]
  4177d0:	ldp	x22, x21, [sp, #48]
  4177d4:	ldp	x24, x23, [sp, #32]
  4177d8:	ldr	x25, [sp, #16]
  4177dc:	ldp	x29, x30, [sp], #80
  4177e0:	ret
  4177e4:	stp	x29, x30, [sp, #-64]!
  4177e8:	str	x23, [sp, #16]
  4177ec:	stp	x22, x21, [sp, #32]
  4177f0:	stp	x20, x19, [sp, #48]
  4177f4:	mov	x3, x0
  4177f8:	ldr	x22, [x3], #40
  4177fc:	mov	x21, x0
  417800:	mov	x19, x1
  417804:	mov	x0, x1
  417808:	mov	x1, xzr
  41780c:	mov	x2, xzr
  417810:	mov	x29, sp
  417814:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417818:	mov	x20, x0
  41781c:	str	x0, [x29, #24]
  417820:	cbz	x0, 4178a0 <_obstack_memory_used@@Base+0x6614>
  417824:	add	x23, x29, #0x18
  417828:	mov	x0, x20
  41782c:	str	x22, [x0]
  417830:	ldr	x8, [x23]
  417834:	ldr	w9, [x8, #48]
  417838:	orr	w9, w9, #0x40000
  41783c:	str	w9, [x8, #48]
  417840:	ldr	x8, [x21, #8]
  417844:	ldr	x22, [x23]
  417848:	cbz	x8, 417864 <_obstack_memory_used@@Base+0x65d8>
  41784c:	add	x23, x22, #0x8
  417850:	mov	x21, x8
  417854:	b	417880 <_obstack_memory_used@@Base+0x65f4>
  417858:	ldr	x21, [x8]
  41785c:	ldr	x22, [x22]
  417860:	cbz	x21, 4178a0 <_obstack_memory_used@@Base+0x6614>
  417864:	mov	x9, x8
  417868:	mov	x8, x21
  41786c:	ldr	x21, [x21, #16]
  417870:	cmp	x21, x9
  417874:	b.eq	417858 <_obstack_memory_used@@Base+0x65cc>  // b.none
  417878:	cbz	x21, 417858 <_obstack_memory_used@@Base+0x65cc>
  41787c:	add	x23, x22, #0x10
  417880:	add	x3, x21, #0x28
  417884:	mov	x0, x19
  417888:	mov	x1, xzr
  41788c:	mov	x2, xzr
  417890:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417894:	str	x0, [x23]
  417898:	cbnz	x0, 41782c <_obstack_memory_used@@Base+0x65a0>
  41789c:	mov	x20, xzr
  4178a0:	mov	x0, x20
  4178a4:	ldp	x20, x19, [sp, #48]
  4178a8:	ldp	x22, x21, [sp, #32]
  4178ac:	ldr	x23, [sp, #16]
  4178b0:	ldp	x29, x30, [sp], #64
  4178b4:	ret
  4178b8:	stp	x29, x30, [sp, #-48]!
  4178bc:	stp	x22, x21, [sp, #16]
  4178c0:	mov	x21, x0
  4178c4:	stp	x20, x19, [sp, #32]
  4178c8:	mov	x20, x1
  4178cc:	mov	x0, x2
  4178d0:	mov	x1, x21
  4178d4:	mov	x29, sp
  4178d8:	mov	x19, x2
  4178dc:	blr	x20
  4178e0:	cbnz	w0, 41792c <_obstack_memory_used@@Base+0x66a0>
  4178e4:	ldr	x22, [x21, #8]
  4178e8:	cbz	x22, 417904 <_obstack_memory_used@@Base+0x6678>
  4178ec:	mov	x0, x19
  4178f0:	mov	x1, x22
  4178f4:	blr	x20
  4178f8:	mov	x21, x22
  4178fc:	cbz	w0, 4178e4 <_obstack_memory_used@@Base+0x6658>
  417900:	b	41792c <_obstack_memory_used@@Base+0x66a0>
  417904:	mov	x8, xzr
  417908:	ldr	x22, [x21, #16]
  41790c:	mov	x9, x8
  417910:	mov	x8, x21
  417914:	cmp	x22, x9
  417918:	b.eq	417920 <_obstack_memory_used@@Base+0x6694>  // b.none
  41791c:	cbnz	x22, 4178ec <_obstack_memory_used@@Base+0x6660>
  417920:	ldr	x21, [x8]
  417924:	cbnz	x21, 417908 <_obstack_memory_used@@Base+0x667c>
  417928:	mov	w0, wzr
  41792c:	ldp	x20, x19, [sp, #32]
  417930:	ldp	x22, x21, [sp, #16]
  417934:	ldp	x29, x30, [sp], #48
  417938:	ret
  41793c:	ldrb	w8, [x1, #48]
  417940:	cmp	w8, #0x11
  417944:	b.eq	417980 <_obstack_memory_used@@Base+0x66f4>  // b.none
  417948:	cmp	w8, #0x4
  41794c:	b.ne	4179d4 <_obstack_memory_used@@Base+0x6748>  // b.any
  417950:	ldr	x8, [x0, #224]
  417954:	cbz	x8, 4179d4 <_obstack_memory_used@@Base+0x6748>
  417958:	ldr	x9, [x1, #40]
  41795c:	mov	w10, #0x1                   	// #1
  417960:	sbfiz	x9, x9, #3, #32
  417964:	ldr	x8, [x8, x9]
  417968:	str	x8, [x1, #40]
  41796c:	ldr	x9, [x0, #160]
  417970:	lsl	w8, w10, w8
  417974:	sxtw	x8, w8
  417978:	orr	x8, x9, x8
  41797c:	b	4179d0 <_obstack_memory_used@@Base+0x6744>
  417980:	ldr	x8, [x1, #8]
  417984:	cbz	x8, 4179d4 <_obstack_memory_used@@Base+0x6748>
  417988:	ldrb	w9, [x8, #48]
  41798c:	cmp	w9, #0x11
  417990:	b.ne	4179d4 <_obstack_memory_used@@Base+0x6748>  // b.any
  417994:	ldr	x9, [x8, #8]
  417998:	ldr	x8, [x8, #40]
  41799c:	str	x9, [x1, #8]
  4179a0:	cbz	x9, 4179a8 <_obstack_memory_used@@Base+0x671c>
  4179a4:	str	x1, [x9]
  4179a8:	ldr	x9, [x0, #224]
  4179ac:	ldr	x10, [x1, #40]
  4179b0:	cmp	x8, #0x3f
  4179b4:	ldr	x10, [x9, x10, lsl #3]
  4179b8:	str	x10, [x9, x8, lsl #3]
  4179bc:	b.gt	4179d4 <_obstack_memory_used@@Base+0x6748>
  4179c0:	ldr	x9, [x0, #160]
  4179c4:	mov	w10, #0x1                   	// #1
  4179c8:	lsl	x8, x10, x8
  4179cc:	bic	x8, x9, x8
  4179d0:	str	x8, [x0, #160]
  4179d4:	mov	w0, wzr
  4179d8:	ret
  4179dc:	sub	sp, sp, #0x30
  4179e0:	stp	x29, x30, [sp, #16]
  4179e4:	add	x29, sp, #0x10
  4179e8:	stp	x20, x19, [sp, #32]
  4179ec:	stur	wzr, [x29, #-4]
  4179f0:	ldr	x2, [x1, #8]
  4179f4:	mov	x19, x1
  4179f8:	mov	x20, x0
  4179fc:	cbz	x2, 417a24 <_obstack_memory_used@@Base+0x6798>
  417a00:	ldrb	w8, [x2, #48]
  417a04:	cmp	w8, #0x11
  417a08:	b.ne	417a24 <_obstack_memory_used@@Base+0x6798>  // b.any
  417a0c:	sub	x0, x29, #0x4
  417a10:	mov	x1, x20
  417a14:	bl	417d00 <_obstack_memory_used@@Base+0x6a74>
  417a18:	str	x0, [x19, #8]
  417a1c:	cbz	x0, 417a24 <_obstack_memory_used@@Base+0x6798>
  417a20:	str	x19, [x0]
  417a24:	ldr	x2, [x19, #16]
  417a28:	cbz	x2, 417a50 <_obstack_memory_used@@Base+0x67c4>
  417a2c:	ldrb	w8, [x2, #48]
  417a30:	cmp	w8, #0x11
  417a34:	b.ne	417a50 <_obstack_memory_used@@Base+0x67c4>  // b.any
  417a38:	sub	x0, x29, #0x4
  417a3c:	mov	x1, x20
  417a40:	bl	417d00 <_obstack_memory_used@@Base+0x6a74>
  417a44:	str	x0, [x19, #16]
  417a48:	cbz	x0, 417a50 <_obstack_memory_used@@Base+0x67c4>
  417a4c:	str	x19, [x0]
  417a50:	ldur	w0, [x29, #-4]
  417a54:	ldp	x20, x19, [sp, #32]
  417a58:	ldp	x29, x30, [sp, #16]
  417a5c:	add	sp, sp, #0x30
  417a60:	ret
  417a64:	stp	x29, x30, [sp, #-32]!
  417a68:	stp	x20, x19, [sp, #16]
  417a6c:	ldrb	w8, [x1, #48]
  417a70:	mov	x19, x1
  417a74:	mov	x29, sp
  417a78:	cmp	w8, #0x10
  417a7c:	b.ne	417a9c <_obstack_memory_used@@Base+0x6810>  // b.any
  417a80:	ldr	x8, [x19, #8]
  417a84:	mov	w0, wzr
  417a88:	ldr	x9, [x8, #24]
  417a8c:	str	x9, [x19, #24]
  417a90:	ldr	x8, [x8, #56]
  417a94:	str	x8, [x19, #56]
  417a98:	b	417aec <_obstack_memory_used@@Base+0x6860>
  417a9c:	ldp	x1, x2, [x19, #40]
  417aa0:	mov	x20, x0
  417aa4:	str	x19, [x19, #24]
  417aa8:	bl	417e5c <_obstack_memory_used@@Base+0x6bd0>
  417aac:	cmn	x0, #0x1
  417ab0:	str	x0, [x19, #56]
  417ab4:	b.eq	417af8 <_obstack_memory_used@@Base+0x686c>  // b.none
  417ab8:	ldrb	w9, [x19, #48]
  417abc:	cmp	w9, #0xc
  417ac0:	b.ne	417ae8 <_obstack_memory_used@@Base+0x685c>  // b.any
  417ac4:	ldr	x9, [x20]
  417ac8:	mov	x8, x0
  417acc:	ldr	w10, [x19, #40]
  417ad0:	mov	w0, wzr
  417ad4:	add	x8, x9, x8, lsl #4
  417ad8:	ldr	w9, [x8, #8]
  417adc:	bfi	w9, w10, #8, #10
  417ae0:	str	w9, [x8, #8]
  417ae4:	b	417aec <_obstack_memory_used@@Base+0x6860>
  417ae8:	mov	w0, wzr
  417aec:	ldp	x20, x19, [sp, #16]
  417af0:	ldp	x29, x30, [sp], #32
  417af4:	ret
  417af8:	mov	w0, #0xc                   	// #12
  417afc:	b	417aec <_obstack_memory_used@@Base+0x6860>
  417b00:	ldrb	w8, [x1, #48]
  417b04:	cmp	w8, #0x10
  417b08:	b.eq	417b20 <_obstack_memory_used@@Base+0x6894>  // b.none
  417b0c:	cmp	w8, #0xb
  417b10:	b.ne	417b30 <_obstack_memory_used@@Base+0x68a4>  // b.any
  417b14:	ldr	x8, [x1, #8]
  417b18:	str	x1, [x8, #32]
  417b1c:	b	417b50 <_obstack_memory_used@@Base+0x68c4>
  417b20:	ldp	x9, x8, [x1, #8]
  417b24:	ldr	x10, [x8, #24]
  417b28:	str	x10, [x9, #32]
  417b2c:	b	417b48 <_obstack_memory_used@@Base+0x68bc>
  417b30:	ldr	x8, [x1, #8]
  417b34:	cbz	x8, 417b40 <_obstack_memory_used@@Base+0x68b4>
  417b38:	ldr	x9, [x1, #32]
  417b3c:	str	x9, [x8, #32]
  417b40:	ldr	x8, [x1, #16]
  417b44:	cbz	x8, 417b50 <_obstack_memory_used@@Base+0x68c4>
  417b48:	ldr	x9, [x1, #32]
  417b4c:	str	x9, [x8, #32]
  417b50:	mov	w0, wzr
  417b54:	ret
  417b58:	stp	x29, x30, [sp, #-64]!
  417b5c:	stp	x22, x21, [sp, #32]
  417b60:	stp	x20, x19, [sp, #48]
  417b64:	ldr	w8, [x1, #48]
  417b68:	ldr	x19, [x1, #56]
  417b6c:	str	x23, [sp, #16]
  417b70:	mov	x29, sp
  417b74:	and	w8, w8, #0xff
  417b78:	sub	w9, w8, #0x2
  417b7c:	cmp	w9, #0xe
  417b80:	mov	x8, x0
  417b84:	b.hi	417c6c <_obstack_memory_used@@Base+0x69e0>  // b.pmore
  417b88:	adrp	x10, 41f000 <_obstack_memory_used@@Base+0xdd74>
  417b8c:	add	x10, x10, #0x29
  417b90:	adr	x11, 417ba4 <_obstack_memory_used@@Base+0x6918>
  417b94:	ldrb	w12, [x10, x9]
  417b98:	add	x11, x11, x12, lsl #2
  417b9c:	mov	w0, wzr
  417ba0:	br	x11
  417ba4:	ldr	x9, [x1, #32]
  417ba8:	ldr	x8, [x8, #40]
  417bac:	mov	w10, #0x18                  	// #24
  417bb0:	ldr	x20, [x9, #56]
  417bb4:	madd	x19, x19, x10, x8
  417bb8:	mov	w8, #0x1                   	// #1
  417bbc:	dup	v0.2d, x8
  417bc0:	mov	w0, #0x8                   	// #8
  417bc4:	str	q0, [x19]
  417bc8:	bl	4028f0 <malloc@plt>
  417bcc:	str	x0, [x19, #16]
  417bd0:	cbz	x0, 417cf4 <_obstack_memory_used@@Base+0x6a68>
  417bd4:	mov	x8, x0
  417bd8:	mov	w0, wzr
  417bdc:	b	417c64 <_obstack_memory_used@@Base+0x69d8>
  417be0:	ldrb	w9, [x8, #176]
  417be4:	add	x11, x1, #0x20
  417be8:	ldr	x22, [x8, #40]
  417bec:	mov	w0, #0x10                  	// #16
  417bf0:	orr	w9, w9, #0x1
  417bf4:	strb	w9, [x8, #176]
  417bf8:	ldp	x9, x10, [x1, #8]
  417bfc:	mov	w8, #0x18                  	// #24
  417c00:	madd	x23, x19, x8, x22
  417c04:	mov	w8, #0x2                   	// #2
  417c08:	add	x12, x9, #0x18
  417c0c:	cmp	x9, #0x0
  417c10:	add	x9, x10, #0x18
  417c14:	csel	x12, x11, x12, eq  // eq = none
  417c18:	cmp	x10, #0x0
  417c1c:	csel	x9, x11, x9, eq  // eq = none
  417c20:	ldr	x10, [x12]
  417c24:	ldr	x9, [x9]
  417c28:	ldr	x20, [x10, #56]
  417c2c:	ldr	x21, [x9, #56]
  417c30:	str	x8, [x23]
  417c34:	bl	4028f0 <malloc@plt>
  417c38:	str	x0, [x23, #16]
  417c3c:	cbz	x0, 417cf8 <_obstack_memory_used@@Base+0x6a6c>
  417c40:	mov	w9, #0x18                  	// #24
  417c44:	madd	x9, x19, x9, x22
  417c48:	mov	x8, x0
  417c4c:	cmp	x20, x21
  417c50:	add	x9, x9, #0x8
  417c54:	b.ne	417cc0 <_obstack_memory_used@@Base+0x6a34>  // b.any
  417c58:	mov	w10, #0x1                   	// #1
  417c5c:	mov	w0, wzr
  417c60:	str	x10, [x9]
  417c64:	str	x20, [x8]
  417c68:	b	417ce0 <_obstack_memory_used@@Base+0x6a54>
  417c6c:	ldr	x9, [x1, #32]
  417c70:	ldr	x8, [x8, #24]
  417c74:	mov	w0, wzr
  417c78:	ldr	x9, [x9, #56]
  417c7c:	str	x9, [x8, x19, lsl #3]
  417c80:	b	417ce0 <_obstack_memory_used@@Base+0x6a54>
  417c84:	ldr	x9, [x1, #32]
  417c88:	ldr	x20, [x9, #56]
  417c8c:	ldr	x9, [x8, #24]
  417c90:	str	x20, [x9, x19, lsl #3]
  417c94:	ldrb	w9, [x1, #48]
  417c98:	cmp	w9, #0x4
  417c9c:	b.ne	417cb8 <_obstack_memory_used@@Base+0x6a2c>  // b.any
  417ca0:	ldr	x8, [x8, #40]
  417ca4:	mov	w9, #0x18                  	// #24
  417ca8:	mov	w10, #0x1                   	// #1
  417cac:	dup	v0.2d, x10
  417cb0:	madd	x19, x19, x9, x8
  417cb4:	b	417bc0 <_obstack_memory_used@@Base+0x6934>
  417cb8:	mov	w0, wzr
  417cbc:	b	417ce0 <_obstack_memory_used@@Base+0x6a54>
  417cc0:	mov	w10, #0x2                   	// #2
  417cc4:	cmp	x20, x21
  417cc8:	mov	w0, wzr
  417ccc:	str	x10, [x9]
  417cd0:	b.cs	417cdc <_obstack_memory_used@@Base+0x6a50>  // b.hs, b.nlast
  417cd4:	stp	x20, x21, [x8]
  417cd8:	b	417ce0 <_obstack_memory_used@@Base+0x6a54>
  417cdc:	stp	x21, x20, [x8]
  417ce0:	ldp	x20, x19, [sp, #48]
  417ce4:	ldp	x22, x21, [sp, #32]
  417ce8:	ldr	x23, [sp, #16]
  417cec:	ldp	x29, x30, [sp], #64
  417cf0:	ret
  417cf4:	stp	xzr, xzr, [x19]
  417cf8:	mov	w0, #0xc                   	// #12
  417cfc:	b	417ce0 <_obstack_memory_used@@Base+0x6a54>
  417d00:	sub	sp, sp, #0x60
  417d04:	stp	x29, x30, [sp, #16]
  417d08:	stp	x24, x23, [sp, #48]
  417d0c:	stp	x22, x21, [sp, #64]
  417d10:	stp	x20, x19, [sp, #80]
  417d14:	ldr	x19, [x2, #8]
  417d18:	ldr	x22, [x1]
  417d1c:	mov	x20, x2
  417d20:	mov	x21, x0
  417d24:	str	x25, [sp, #32]
  417d28:	add	x29, sp, #0x10
  417d2c:	cbz	x19, 417d50 <_obstack_memory_used@@Base+0x6ac4>
  417d30:	ldrb	w8, [x1, #56]
  417d34:	tbz	w8, #4, 417d50 <_obstack_memory_used@@Base+0x6ac4>
  417d38:	ldr	x8, [x20, #40]
  417d3c:	cmp	x8, #0x3f
  417d40:	b.gt	417e2c <_obstack_memory_used@@Base+0x6ba0>
  417d44:	ldr	x9, [x22, #160]
  417d48:	lsr	x8, x9, x8
  417d4c:	tbz	w8, #0, 417e2c <_obstack_memory_used@@Base+0x6ba0>
  417d50:	mov	w8, #0x8                   	// #8
  417d54:	mov	x3, sp
  417d58:	mov	x0, x22
  417d5c:	mov	x1, xzr
  417d60:	mov	x2, xzr
  417d64:	str	xzr, [sp]
  417d68:	str	w8, [sp, #8]
  417d6c:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417d70:	mov	x23, x0
  417d74:	mov	w8, #0x9                   	// #9
  417d78:	mov	x3, sp
  417d7c:	mov	x0, x22
  417d80:	mov	x1, xzr
  417d84:	mov	x2, xzr
  417d88:	str	xzr, [sp]
  417d8c:	str	w8, [sp, #8]
  417d90:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417d94:	mov	x24, x0
  417d98:	mov	x25, x0
  417d9c:	cbz	x19, 417dc4 <_obstack_memory_used@@Base+0x6b38>
  417da0:	mov	w8, #0x10                  	// #16
  417da4:	mov	x3, sp
  417da8:	mov	x0, x22
  417dac:	mov	x1, x19
  417db0:	mov	x2, x24
  417db4:	str	xzr, [sp]
  417db8:	str	w8, [sp, #8]
  417dbc:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417dc0:	mov	x25, x0
  417dc4:	mov	w8, #0x10                  	// #16
  417dc8:	mov	x3, sp
  417dcc:	mov	x0, x22
  417dd0:	mov	x1, x23
  417dd4:	mov	x2, x25
  417dd8:	str	xzr, [sp]
  417ddc:	str	w8, [sp, #8]
  417de0:	bl	4168e4 <_obstack_memory_used@@Base+0x5658>
  417de4:	cbz	x24, 417e4c <_obstack_memory_used@@Base+0x6bc0>
  417de8:	cbz	x23, 417e4c <_obstack_memory_used@@Base+0x6bc0>
  417dec:	cbz	x25, 417e4c <_obstack_memory_used@@Base+0x6bc0>
  417df0:	mov	x19, x0
  417df4:	cbz	x0, 417e4c <_obstack_memory_used@@Base+0x6bc0>
  417df8:	ldr	x8, [x20, #40]
  417dfc:	str	x8, [x24, #40]
  417e00:	str	x8, [x23, #40]
  417e04:	ldr	w8, [x20, #48]
  417e08:	ldr	w9, [x24, #48]
  417e0c:	and	w8, w8, #0x80000
  417e10:	and	w9, w9, #0xfff7ffff
  417e14:	orr	w9, w9, w8
  417e18:	str	w9, [x24, #48]
  417e1c:	ldr	w9, [x23, #48]
  417e20:	and	w9, w9, #0xfff7ffff
  417e24:	orr	w8, w9, w8
  417e28:	str	w8, [x23, #48]
  417e2c:	mov	x0, x19
  417e30:	ldp	x20, x19, [sp, #80]
  417e34:	ldp	x22, x21, [sp, #64]
  417e38:	ldp	x24, x23, [sp, #48]
  417e3c:	ldr	x25, [sp, #32]
  417e40:	ldp	x29, x30, [sp, #16]
  417e44:	add	sp, sp, #0x60
  417e48:	ret
  417e4c:	mov	w8, #0xc                   	// #12
  417e50:	mov	x19, xzr
  417e54:	str	w8, [x21]
  417e58:	b	417e2c <_obstack_memory_used@@Base+0x6ba0>
  417e5c:	stp	x29, x30, [sp, #-80]!
  417e60:	stp	x26, x25, [sp, #16]
  417e64:	stp	x24, x23, [sp, #32]
  417e68:	stp	x22, x21, [sp, #48]
  417e6c:	stp	x20, x19, [sp, #64]
  417e70:	ldp	x24, x8, [x0, #8]
  417e74:	mov	x20, x2
  417e78:	mov	x19, x0
  417e7c:	mov	x21, x1
  417e80:	cmp	x8, x24
  417e84:	mov	x29, sp
  417e88:	b.cs	417f54 <_obstack_memory_used@@Base+0x6cc8>  // b.hs, b.nlast
  417e8c:	ldr	x9, [x19]
  417e90:	add	x8, x9, x8, lsl #4
  417e94:	stp	x21, x20, [x8]
  417e98:	ldr	x8, [x19]
  417e9c:	ldr	x9, [x19, #16]
  417ea0:	add	x9, x8, x9, lsl #4
  417ea4:	ldr	w10, [x9, #8]
  417ea8:	and	w8, w20, #0xff
  417eac:	cmp	w8, #0x5
  417eb0:	and	w10, w10, #0xfffc00ff
  417eb4:	str	w10, [x9, #8]
  417eb8:	b.ne	417ed0 <_obstack_memory_used@@Base+0x6c44>  // b.any
  417ebc:	ldr	w9, [x19, #180]
  417ec0:	cmp	w9, #0x1
  417ec4:	b.le	417ed0 <_obstack_memory_used@@Base+0x6c44>
  417ec8:	mov	w8, #0x100000              	// #1048576
  417ecc:	b	417edc <_obstack_memory_used@@Base+0x6c50>
  417ed0:	cmp	w8, #0x6
  417ed4:	cset	w8, eq  // eq = none
  417ed8:	lsl	w8, w8, #20
  417edc:	ldr	x9, [x19]
  417ee0:	ldr	x10, [x19, #16]
  417ee4:	add	x9, x9, x10, lsl #4
  417ee8:	ldr	w10, [x9, #8]
  417eec:	and	w10, w10, #0xffefffff
  417ef0:	orr	w8, w10, w8
  417ef4:	str	w8, [x9, #8]
  417ef8:	ldp	x9, x8, [x19, #16]
  417efc:	mov	x10, #0xffffffffffffffff    	// #-1
  417f00:	str	x10, [x8, x9, lsl #3]
  417f04:	ldr	x8, [x19, #40]
  417f08:	ldr	x9, [x19, #16]
  417f0c:	mov	w10, #0x18                  	// #24
  417f10:	madd	x8, x9, x10, x8
  417f14:	stp	xzr, xzr, [x8]
  417f18:	str	xzr, [x8, #16]
  417f1c:	ldr	x8, [x19, #48]
  417f20:	ldr	x9, [x19, #16]
  417f24:	madd	x8, x9, x10, x8
  417f28:	stp	xzr, xzr, [x8]
  417f2c:	str	xzr, [x8, #16]
  417f30:	ldr	x0, [x19, #16]
  417f34:	add	x8, x0, #0x1
  417f38:	str	x8, [x19, #16]
  417f3c:	ldp	x20, x19, [sp, #64]
  417f40:	ldp	x22, x21, [sp, #48]
  417f44:	ldp	x24, x23, [sp, #32]
  417f48:	ldp	x26, x25, [sp, #16]
  417f4c:	ldp	x29, x30, [sp], #80
  417f50:	ret
  417f54:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  417f58:	lsl	x26, x24, #1
  417f5c:	movk	x8, #0xaaa, lsl #48
  417f60:	cmp	x26, x8
  417f64:	b.hi	418018 <_obstack_memory_used@@Base+0x6d8c>  // b.pmore
  417f68:	ldr	x0, [x19]
  417f6c:	lsl	x1, x24, #5
  417f70:	bl	402a50 <realloc@plt>
  417f74:	cbz	x0, 418018 <_obstack_memory_used@@Base+0x6d8c>
  417f78:	ldr	x8, [x19, #24]
  417f7c:	lsl	x23, x24, #4
  417f80:	str	x0, [x19]
  417f84:	mov	x1, x23
  417f88:	mov	x0, x8
  417f8c:	bl	402a50 <realloc@plt>
  417f90:	ldr	x8, [x19, #32]
  417f94:	mov	x22, x0
  417f98:	mov	x1, x23
  417f9c:	mov	x0, x8
  417fa0:	bl	402a50 <realloc@plt>
  417fa4:	mov	x23, x0
  417fa8:	ldr	x0, [x19, #40]
  417fac:	add	x8, x24, x24, lsl #1
  417fb0:	lsl	x25, x8, #4
  417fb4:	mov	x1, x25
  417fb8:	bl	402a50 <realloc@plt>
  417fbc:	ldr	x8, [x19, #48]
  417fc0:	mov	x24, x0
  417fc4:	mov	x1, x25
  417fc8:	mov	x0, x8
  417fcc:	bl	402a50 <realloc@plt>
  417fd0:	cbz	x22, 417ff4 <_obstack_memory_used@@Base+0x6d68>
  417fd4:	cbz	x23, 417ff4 <_obstack_memory_used@@Base+0x6d68>
  417fd8:	cbz	x24, 417ff4 <_obstack_memory_used@@Base+0x6d68>
  417fdc:	cbz	x0, 417ff4 <_obstack_memory_used@@Base+0x6d68>
  417fe0:	ldr	x8, [x19, #16]
  417fe4:	stp	x22, x23, [x19, #24]
  417fe8:	stp	x24, x0, [x19, #40]
  417fec:	str	x26, [x19, #8]
  417ff0:	b	417e8c <_obstack_memory_used@@Base+0x6c00>
  417ff4:	mov	x19, x0
  417ff8:	mov	x0, x22
  417ffc:	bl	402be0 <free@plt>
  418000:	mov	x0, x23
  418004:	bl	402be0 <free@plt>
  418008:	mov	x0, x24
  41800c:	bl	402be0 <free@plt>
  418010:	mov	x0, x19
  418014:	bl	402be0 <free@plt>
  418018:	mov	x0, #0xffffffffffffffff    	// #-1
  41801c:	b	417f3c <_obstack_memory_used@@Base+0x6cb0>
  418020:	sub	sp, sp, #0x80
  418024:	stp	x29, x30, [sp, #48]
  418028:	stp	x26, x25, [sp, #64]
  41802c:	stp	x24, x23, [sp, #80]
  418030:	stp	x22, x21, [sp, #96]
  418034:	stp	x20, x19, [sp, #112]
  418038:	ldr	x23, [x1, #40]
  41803c:	mov	w8, #0x18                  	// #24
  418040:	mov	x19, x0
  418044:	add	x29, sp, #0x30
  418048:	madd	x24, x2, x8, x23
  41804c:	ldr	x8, [x24, #8]!
  418050:	mov	w21, w3
  418054:	mov	x20, x2
  418058:	mov	x22, x1
  41805c:	add	x8, x8, #0x1
  418060:	lsl	x0, x8, #3
  418064:	stp	x8, xzr, [sp, #24]
  418068:	bl	4028f0 <malloc@plt>
  41806c:	str	x0, [sp, #40]
  418070:	cbz	x0, 418228 <_obstack_memory_used@@Base+0x6f9c>
  418074:	ldr	x8, [x22, #48]
  418078:	mov	w9, #0x18                  	// #24
  41807c:	madd	x8, x20, x9, x8
  418080:	mov	x9, #0xffffffffffffffff    	// #-1
  418084:	str	x9, [x8, #8]
  418088:	ldr	x9, [x22]
  41808c:	add	x8, x9, x20, lsl #4
  418090:	ldr	w8, [x8, #8]
  418094:	ubfx	w4, w8, #8, #10
  418098:	cbz	w4, 4180e4 <_obstack_memory_used@@Base+0x6e58>
  41809c:	ldr	x10, [x24]
  4180a0:	cbz	x10, 4180e4 <_obstack_memory_used@@Base+0x6e58>
  4180a4:	mov	w10, #0x18                  	// #24
  4180a8:	madd	x10, x20, x10, x23
  4180ac:	ldr	x10, [x10, #16]
  4180b0:	ldr	x10, [x10]
  4180b4:	add	x9, x9, x10, lsl #4
  4180b8:	ldrb	w9, [x9, #10]
  4180bc:	tbnz	w9, #2, 4180e4 <_obstack_memory_used@@Base+0x6e58>
  4180c0:	mov	x0, x22
  4180c4:	mov	x1, x20
  4180c8:	mov	x2, x20
  4180cc:	mov	x3, x20
  4180d0:	bl	418230 <_obstack_memory_used@@Base+0x6fa4>
  4180d4:	cbnz	w0, 41820c <_obstack_memory_used@@Base+0x6f80>
  4180d8:	ldr	x8, [x22]
  4180dc:	add	x8, x8, x20, lsl #4
  4180e0:	ldr	w8, [x8, #8]
  4180e4:	tbz	w8, #3, 4181b0 <_obstack_memory_used@@Base+0x6f24>
  4180e8:	ldr	x8, [x22, #40]
  4180ec:	mov	w9, #0x18                  	// #24
  4180f0:	madd	x9, x20, x9, x8
  4180f4:	ldr	x9, [x9, #8]
  4180f8:	cmp	x9, #0x1
  4180fc:	b.lt	4181b0 <_obstack_memory_used@@Base+0x6f24>  // b.tstop
  418100:	mov	w26, wzr
  418104:	mov	x24, xzr
  418108:	mov	w25, #0x18                  	// #24
  41810c:	madd	x8, x20, x25, x8
  418110:	ldr	x8, [x8, #16]
  418114:	ldr	x23, [x8, x24, lsl #3]
  418118:	ldr	x8, [x22, #48]
  41811c:	madd	x9, x23, x25, x8
  418120:	ldr	x9, [x9, #8]
  418124:	cmn	x9, #0x1
  418128:	b.eq	418188 <_obstack_memory_used@@Base+0x6efc>  // b.none
  41812c:	cbnz	x9, 41814c <_obstack_memory_used@@Base+0x6ec0>
  418130:	mov	x0, sp
  418134:	mov	x1, x22
  418138:	mov	x2, x23
  41813c:	mov	w3, wzr
  418140:	bl	418020 <_obstack_memory_used@@Base+0x6d94>
  418144:	cbz	w0, 418160 <_obstack_memory_used@@Base+0x6ed4>
  418148:	b	41820c <_obstack_memory_used@@Base+0x6f80>
  41814c:	madd	x8, x23, x25, x8
  418150:	ldr	x9, [x8, #16]
  418154:	ldr	q0, [x8]
  418158:	str	x9, [sp, #16]
  41815c:	str	q0, [sp]
  418160:	add	x0, sp, #0x18
  418164:	mov	x1, sp
  418168:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41816c:	cbnz	w0, 41820c <_obstack_memory_used@@Base+0x6f80>
  418170:	ldr	x8, [x22, #48]
  418174:	madd	x8, x23, x25, x8
  418178:	ldr	x8, [x8, #8]
  41817c:	cbnz	x8, 41818c <_obstack_memory_used@@Base+0x6f00>
  418180:	ldr	x0, [sp, #16]
  418184:	bl	402be0 <free@plt>
  418188:	mov	w26, #0x1                   	// #1
  41818c:	ldr	x8, [x22, #40]
  418190:	add	x24, x24, #0x1
  418194:	madd	x9, x20, x25, x8
  418198:	ldr	x9, [x9, #8]
  41819c:	cmp	x24, x9
  4181a0:	b.lt	41810c <_obstack_memory_used@@Base+0x6e80>  // b.tstop
  4181a4:	tst	w26, #0x1
  4181a8:	cset	w23, eq  // eq = none
  4181ac:	b	4181b4 <_obstack_memory_used@@Base+0x6f28>
  4181b0:	mov	w23, #0x1                   	// #1
  4181b4:	add	x0, sp, #0x18
  4181b8:	mov	x1, x20
  4181bc:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  4181c0:	tbz	w0, #0, 418228 <_obstack_memory_used@@Base+0x6f9c>
  4181c4:	ldr	x8, [x22, #48]
  4181c8:	orr	w9, w23, w21
  4181cc:	tbz	w9, #0, 4181ec <_obstack_memory_used@@Base+0x6f60>
  4181d0:	ldr	x9, [sp, #40]
  4181d4:	ldur	q0, [sp, #24]
  4181d8:	mov	w10, #0x18                  	// #24
  4181dc:	madd	x8, x20, x10, x8
  4181e0:	str	x9, [x8, #16]
  4181e4:	str	q0, [x8]
  4181e8:	b	4181f8 <_obstack_memory_used@@Base+0x6f6c>
  4181ec:	mov	w9, #0x18                  	// #24
  4181f0:	madd	x8, x20, x9, x8
  4181f4:	str	xzr, [x8, #8]
  4181f8:	ldr	x8, [sp, #40]
  4181fc:	ldur	q0, [sp, #24]
  418200:	mov	w0, wzr
  418204:	str	x8, [x19, #16]
  418208:	str	q0, [x19]
  41820c:	ldp	x20, x19, [sp, #112]
  418210:	ldp	x22, x21, [sp, #96]
  418214:	ldp	x24, x23, [sp, #80]
  418218:	ldp	x26, x25, [sp, #64]
  41821c:	ldp	x29, x30, [sp, #48]
  418220:	add	sp, sp, #0x80
  418224:	ret
  418228:	mov	w0, #0xc                   	// #12
  41822c:	b	41820c <_obstack_memory_used@@Base+0x6f80>
  418230:	stp	x29, x30, [sp, #-80]!
  418234:	stp	x26, x25, [sp, #16]
  418238:	stp	x24, x23, [sp, #32]
  41823c:	stp	x22, x21, [sp, #48]
  418240:	stp	x20, x19, [sp, #64]
  418244:	mov	w19, w4
  418248:	mov	x20, x3
  41824c:	mov	x22, x2
  418250:	mov	x24, x1
  418254:	mov	x21, x0
  418258:	mov	w26, #0x18                  	// #24
  41825c:	mov	x29, sp
  418260:	mov	x23, x24
  418264:	ldr	x9, [x21]
  418268:	add	x10, x9, x23, lsl #4
  41826c:	ldrb	w8, [x10, #8]!
  418270:	cmp	w8, #0x4
  418274:	b.ne	4182d4 <_obstack_memory_used@@Base+0x7048>  // b.any
  418278:	ldr	x8, [x21, #24]
  41827c:	ldr	x9, [x21, #40]
  418280:	mov	x0, x21
  418284:	mov	w2, w19
  418288:	ldr	x24, [x8, x23, lsl #3]
  41828c:	madd	x8, x22, x26, x9
  418290:	str	xzr, [x8, #8]
  418294:	mov	x1, x24
  418298:	bl	418724 <_obstack_memory_used@@Base+0x7498>
  41829c:	cmn	x0, #0x1
  4182a0:	b.eq	418490 <_obstack_memory_used@@Base+0x7204>  // b.none
  4182a4:	ldr	x8, [x21, #24]
  4182a8:	mov	x25, x0
  4182ac:	mov	x1, x25
  4182b0:	ldr	x9, [x8, x23, lsl #3]
  4182b4:	str	x9, [x8, x22, lsl #3]
  4182b8:	ldr	x8, [x21, #40]
  4182bc:	madd	x0, x22, x26, x8
  4182c0:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  4182c4:	mov	x23, x24
  4182c8:	mov	x22, x25
  4182cc:	tbnz	w0, #0, 418264 <_obstack_memory_used@@Base+0x6fd8>
  4182d0:	b	418490 <_obstack_memory_used@@Base+0x7204>
  4182d4:	ldr	x8, [x21, #40]
  4182d8:	madd	x11, x23, x26, x8
  4182dc:	ldr	x11, [x11, #8]
  4182e0:	cbz	x11, 41844c <_obstack_memory_used@@Base+0x71c0>
  4182e4:	madd	x12, x23, x26, x8
  4182e8:	ldr	x12, [x12, #16]
  4182ec:	cmp	x11, #0x1
  4182f0:	ldr	x24, [x12]
  4182f4:	madd	x12, x22, x26, x8
  4182f8:	str	xzr, [x12, #8]
  4182fc:	b.eq	4183f8 <_obstack_memory_used@@Base+0x716c>  // b.none
  418300:	ldr	x12, [x21, #16]
  418304:	sub	x1, x12, #0x1
  418308:	cmp	x1, #0x1
  41830c:	b.lt	418354 <_obstack_memory_used@@Base+0x70c8>  // b.tstop
  418310:	add	x10, x9, x1, lsl #4
  418314:	ldr	w11, [x10, #8]
  418318:	tbz	w11, #18, 418354 <_obstack_memory_used@@Base+0x70c8>
  41831c:	ldr	x10, [x21, #32]
  418320:	add	x9, x9, x12, lsl #4
  418324:	sub	x9, x9, #0x18
  418328:	ldr	x12, [x10, x1, lsl #3]
  41832c:	cmp	x12, x24
  418330:	b.ne	418340 <_obstack_memory_used@@Base+0x70b4>  // b.any
  418334:	ubfx	w11, w11, #8, #10
  418338:	cmp	w11, w19
  41833c:	b.eq	4183e8 <_obstack_memory_used@@Base+0x715c>  // b.none
  418340:	ldr	w11, [x9], #-16
  418344:	sub	x1, x1, #0x1
  418348:	cmp	x1, #0x1
  41834c:	b.lt	418354 <_obstack_memory_used@@Base+0x70c8>  // b.tstop
  418350:	tbnz	w11, #18, 418328 <_obstack_memory_used@@Base+0x709c>
  418354:	mov	x0, x21
  418358:	mov	x1, x24
  41835c:	mov	w2, w19
  418360:	bl	418724 <_obstack_memory_used@@Base+0x7498>
  418364:	cmn	x0, #0x1
  418368:	b.eq	418490 <_obstack_memory_used@@Base+0x7204>  // b.none
  41836c:	ldr	x8, [x21, #40]
  418370:	mov	x25, x0
  418374:	mov	x1, x25
  418378:	madd	x0, x22, x26, x8
  41837c:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  418380:	tbz	w0, #0, 418490 <_obstack_memory_used@@Base+0x7204>
  418384:	mov	x0, x21
  418388:	mov	x1, x24
  41838c:	mov	x2, x25
  418390:	mov	x3, x20
  418394:	mov	w4, w19
  418398:	bl	418230 <_obstack_memory_used@@Base+0x6fa4>
  41839c:	cbnz	w0, 41845c <_obstack_memory_used@@Base+0x71d0>
  4183a0:	ldr	x8, [x21, #40]
  4183a4:	mov	x0, x21
  4183a8:	mov	w2, w19
  4183ac:	madd	x8, x23, x26, x8
  4183b0:	ldr	x8, [x8, #16]
  4183b4:	ldr	x23, [x8, #8]
  4183b8:	mov	x1, x23
  4183bc:	bl	418724 <_obstack_memory_used@@Base+0x7498>
  4183c0:	cmn	x0, #0x1
  4183c4:	b.eq	418490 <_obstack_memory_used@@Base+0x7204>  // b.none
  4183c8:	ldr	x8, [x21, #40]
  4183cc:	mov	x24, x0
  4183d0:	mov	x1, x24
  4183d4:	madd	x0, x22, x26, x8
  4183d8:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  4183dc:	mov	x22, x24
  4183e0:	tbnz	w0, #0, 418264 <_obstack_memory_used@@Base+0x6fd8>
  4183e4:	b	418490 <_obstack_memory_used@@Base+0x7204>
  4183e8:	madd	x0, x22, x26, x8
  4183ec:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  4183f0:	tbnz	w0, #0, 4183a0 <_obstack_memory_used@@Base+0x7114>
  4183f4:	b	418490 <_obstack_memory_used@@Base+0x7204>
  4183f8:	cmp	x23, x20
  4183fc:	b.ne	418408 <_obstack_memory_used@@Base+0x717c>  // b.any
  418400:	cmp	x22, x23
  418404:	b.ne	418474 <_obstack_memory_used@@Base+0x71e8>  // b.any
  418408:	ldr	w8, [x10]
  41840c:	mov	x0, x21
  418410:	mov	x1, x24
  418414:	ubfx	w8, w8, #8, #10
  418418:	orr	w19, w8, w19
  41841c:	mov	w2, w19
  418420:	bl	418724 <_obstack_memory_used@@Base+0x7498>
  418424:	cmn	x0, #0x1
  418428:	b.eq	418490 <_obstack_memory_used@@Base+0x7204>  // b.none
  41842c:	ldr	x8, [x21, #40]
  418430:	mov	x23, x0
  418434:	mov	x1, x23
  418438:	madd	x0, x22, x26, x8
  41843c:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  418440:	mov	x22, x23
  418444:	tbnz	w0, #0, 418260 <_obstack_memory_used@@Base+0x6fd4>
  418448:	b	418490 <_obstack_memory_used@@Base+0x7204>
  41844c:	ldr	x8, [x21, #24]
  418450:	mov	w0, wzr
  418454:	ldr	x9, [x8, x23, lsl #3]
  418458:	str	x9, [x8, x22, lsl #3]
  41845c:	ldp	x20, x19, [sp, #64]
  418460:	ldp	x22, x21, [sp, #48]
  418464:	ldp	x24, x23, [sp, #32]
  418468:	ldp	x26, x25, [sp, #16]
  41846c:	ldp	x29, x30, [sp], #80
  418470:	ret
  418474:	mov	w9, #0x18                  	// #24
  418478:	madd	x0, x22, x9, x8
  41847c:	mov	x1, x24
  418480:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  418484:	tbz	w0, #0, 418490 <_obstack_memory_used@@Base+0x7204>
  418488:	mov	w0, wzr
  41848c:	b	41845c <_obstack_memory_used@@Base+0x71d0>
  418490:	mov	w0, #0xc                   	// #12
  418494:	b	41845c <_obstack_memory_used@@Base+0x71d0>
  418498:	stp	x29, x30, [sp, #-48]!
  41849c:	str	x21, [sp, #16]
  4184a0:	stp	x20, x19, [sp, #32]
  4184a4:	mov	x29, sp
  4184a8:	cbz	x1, 418588 <_obstack_memory_used@@Base+0x72fc>
  4184ac:	ldr	x10, [x1, #8]
  4184b0:	mov	x20, x1
  4184b4:	cbz	x10, 418588 <_obstack_memory_used@@Base+0x72fc>
  4184b8:	ldp	x8, x11, [x0]
  4184bc:	mov	x19, x0
  4184c0:	add	x9, x11, x10, lsl #1
  4184c4:	cmp	x8, x9
  4184c8:	b.ge	4184f4 <_obstack_memory_used@@Base+0x7268>  // b.tcont
  4184cc:	ldr	x0, [x19, #16]
  4184d0:	add	x21, x8, x10
  4184d4:	lsl	x1, x21, #4
  4184d8:	bl	402a50 <realloc@plt>
  4184dc:	cbz	x0, 418614 <_obstack_memory_used@@Base+0x7388>
  4184e0:	lsl	x8, x21, #1
  4184e4:	str	x0, [x19, #16]
  4184e8:	str	x8, [x19]
  4184ec:	ldr	x11, [x19, #8]
  4184f0:	ldr	x10, [x20, #8]
  4184f4:	cbz	x11, 418600 <_obstack_memory_used@@Base+0x7374>
  4184f8:	sub	x8, x10, #0x1
  4184fc:	sub	x9, x11, #0x1
  418500:	orr	x12, x8, x9
  418504:	add	x21, x11, x10, lsl #1
  418508:	tbnz	x12, #63, 41854c <_obstack_memory_used@@Base+0x72c0>
  41850c:	ldr	x10, [x19, #16]
  418510:	ldr	x11, [x20, #16]
  418514:	ldr	x13, [x10, x9, lsl #3]
  418518:	ldr	x12, [x11, x8, lsl #3]
  41851c:	cmp	x13, x12
  418520:	b.ne	41852c <_obstack_memory_used@@Base+0x72a0>  // b.any
  418524:	sub	x8, x8, #0x1
  418528:	b	418540 <_obstack_memory_used@@Base+0x72b4>
  41852c:	b.ge	418540 <_obstack_memory_used@@Base+0x72b4>  // b.tcont
  418530:	sub	x8, x8, #0x1
  418534:	sub	x21, x21, #0x1
  418538:	str	x12, [x10, x21, lsl #3]
  41853c:	b	418544 <_obstack_memory_used@@Base+0x72b8>
  418540:	sub	x9, x9, #0x1
  418544:	orr	x12, x8, x9
  418548:	tbz	x12, #63, 418514 <_obstack_memory_used@@Base+0x7288>
  41854c:	tbnz	x8, #63, 41856c <_obstack_memory_used@@Base+0x72e0>
  418550:	ldr	x9, [x19, #16]
  418554:	ldr	x1, [x20, #16]
  418558:	add	x8, x8, #0x1
  41855c:	sub	x21, x21, x8
  418560:	add	x0, x9, x21, lsl #3
  418564:	lsl	x2, x8, #3
  418568:	bl	402710 <memcpy@plt>
  41856c:	ldr	x10, [x19, #8]
  418570:	ldr	x8, [x20, #8]
  418574:	sub	x9, x10, #0x1
  418578:	add	x8, x9, x8, lsl #1
  41857c:	sub	x11, x8, x21
  418580:	adds	x11, x11, #0x1
  418584:	b.cc	41859c <_obstack_memory_used@@Base+0x7310>  // b.lo, b.ul, b.last
  418588:	mov	w0, wzr
  41858c:	ldp	x20, x19, [sp, #32]
  418590:	ldr	x21, [sp, #16]
  418594:	ldp	x29, x30, [sp], #48
  418598:	ret
  41859c:	ldr	x0, [x19, #16]
  4185a0:	add	x10, x11, x10
  4185a4:	str	x10, [x19, #8]
  4185a8:	add	x10, x0, x9, lsl #3
  4185ac:	lsl	x2, x11, #3
  4185b0:	neg	x11, x11
  4185b4:	ldr	x12, [x0, x8, lsl #3]
  4185b8:	ldr	x13, [x0, x9, lsl #3]
  4185bc:	cmp	x12, x13
  4185c0:	b.le	4185dc <_obstack_memory_used@@Base+0x7350>
  4185c4:	sub	x8, x8, #0x1
  4185c8:	str	x12, [x10, x2]
  4185cc:	adds	x11, x11, #0x1
  4185d0:	sub	x2, x2, #0x8
  4185d4:	b.cc	4185b4 <_obstack_memory_used@@Base+0x7328>  // b.lo, b.ul, b.last
  4185d8:	b	418588 <_obstack_memory_used@@Base+0x72fc>
  4185dc:	str	x13, [x10, x2]
  4185e0:	cmp	x9, #0x0
  4185e4:	sub	x9, x9, #0x1
  4185e8:	neg	x11, x11
  4185ec:	sub	x10, x10, #0x8
  4185f0:	b.gt	4185ac <_obstack_memory_used@@Base+0x7320>
  4185f4:	add	x1, x0, x21, lsl #3
  4185f8:	bl	402710 <memcpy@plt>
  4185fc:	b	418588 <_obstack_memory_used@@Base+0x72fc>
  418600:	str	x10, [x19, #8]
  418604:	ldp	x8, x1, [x20, #8]
  418608:	ldr	x0, [x19, #16]
  41860c:	lsl	x2, x8, #3
  418610:	b	4185f8 <_obstack_memory_used@@Base+0x736c>
  418614:	mov	w0, #0xc                   	// #12
  418618:	b	41858c <_obstack_memory_used@@Base+0x7300>
  41861c:	stp	x29, x30, [sp, #-32]!
  418620:	stp	x20, x19, [sp, #16]
  418624:	ldr	x9, [x0]
  418628:	mov	x19, x0
  41862c:	mov	x20, x1
  418630:	mov	x29, sp
  418634:	cbz	x9, 418658 <_obstack_memory_used@@Base+0x73cc>
  418638:	ldr	x8, [x19, #8]
  41863c:	cbnz	x8, 418688 <_obstack_memory_used@@Base+0x73fc>
  418640:	ldr	x8, [x19, #16]
  418644:	str	x20, [x8]
  418648:	ldr	x8, [x19, #8]
  41864c:	add	x8, x8, #0x1
  418650:	str	x8, [x19, #8]
  418654:	b	418678 <_obstack_memory_used@@Base+0x73ec>
  418658:	mov	w8, #0x1                   	// #1
  41865c:	dup	v0.2d, x8
  418660:	mov	w0, #0x8                   	// #8
  418664:	str	q0, [x19]
  418668:	bl	4028f0 <malloc@plt>
  41866c:	str	x0, [x19, #16]
  418670:	cbz	x0, 4186b4 <_obstack_memory_used@@Base+0x7428>
  418674:	str	x20, [x0]
  418678:	mov	w0, #0x1                   	// #1
  41867c:	ldp	x20, x19, [sp, #16]
  418680:	ldp	x29, x30, [sp], #32
  418684:	ret
  418688:	cmp	x9, x8
  41868c:	b.ne	4186bc <_obstack_memory_used@@Base+0x7430>  // b.any
  418690:	ldr	x0, [x19, #16]
  418694:	lsl	x8, x9, #1
  418698:	lsl	x1, x9, #4
  41869c:	str	x8, [x19]
  4186a0:	bl	402a50 <realloc@plt>
  4186a4:	cbz	x0, 41867c <_obstack_memory_used@@Base+0x73f0>
  4186a8:	ldr	x8, [x19, #8]
  4186ac:	str	x0, [x19, #16]
  4186b0:	b	4186c0 <_obstack_memory_used@@Base+0x7434>
  4186b4:	stp	xzr, xzr, [x19]
  4186b8:	b	41867c <_obstack_memory_used@@Base+0x73f0>
  4186bc:	ldr	x0, [x19, #16]
  4186c0:	ldr	x9, [x0]
  4186c4:	cmp	x9, x20
  4186c8:	b.le	4186f4 <_obstack_memory_used@@Base+0x7468>
  4186cc:	cmp	x8, #0x1
  4186d0:	b.lt	41871c <_obstack_memory_used@@Base+0x7490>  // b.tstop
  4186d4:	mov	x9, x8
  4186d8:	add	x10, x0, x9, lsl #3
  4186dc:	ldur	x11, [x10, #-8]
  4186e0:	subs	x8, x9, #0x1
  4186e4:	mov	x9, x8
  4186e8:	str	x11, [x10]
  4186ec:	b.gt	4186d8 <_obstack_memory_used@@Base+0x744c>
  4186f0:	b	41871c <_obstack_memory_used@@Base+0x7490>
  4186f4:	add	x9, x0, x8, lsl #3
  4186f8:	ldur	x9, [x9, #-8]
  4186fc:	cmp	x9, x20
  418700:	b.le	41871c <_obstack_memory_used@@Base+0x7490>
  418704:	add	x10, x0, x8, lsl #3
  418708:	str	x9, [x10]
  41870c:	ldur	x9, [x10, #-16]
  418710:	sub	x8, x8, #0x1
  418714:	cmp	x9, x20
  418718:	b.gt	418704 <_obstack_memory_used@@Base+0x7478>
  41871c:	str	x20, [x0, x8, lsl #3]
  418720:	b	418648 <_obstack_memory_used@@Base+0x73bc>
  418724:	stp	x29, x30, [sp, #-48]!
  418728:	stp	x20, x19, [sp, #32]
  41872c:	ldr	x8, [x0]
  418730:	str	x21, [sp, #16]
  418734:	mov	x19, x1
  418738:	mov	w21, w2
  41873c:	add	x8, x8, x1, lsl #4
  418740:	ldp	x1, x8, [x8]
  418744:	mov	x29, sp
  418748:	mov	x20, x0
  41874c:	mov	x2, x8
  418750:	bl	417e5c <_obstack_memory_used@@Base+0x6bd0>
  418754:	cmn	x0, #0x1
  418758:	b.eq	4187ac <_obstack_memory_used@@Base+0x7520>  // b.none
  41875c:	ldr	x8, [x20]
  418760:	add	x8, x8, x0, lsl #4
  418764:	ldr	w9, [x8, #8]
  418768:	bfi	w9, w21, #8, #10
  41876c:	str	w9, [x8, #8]
  418770:	ldr	x8, [x20]
  418774:	add	x9, x8, x19, lsl #4
  418778:	ldr	w9, [x9, #8]
  41877c:	add	x8, x8, x0, lsl #4
  418780:	ldr	w10, [x8, #8]
  418784:	and	w9, w9, #0x3ff00
  418788:	orr	w9, w9, w10
  41878c:	str	w9, [x8, #8]
  418790:	ldr	x8, [x20]
  418794:	add	x8, x8, x0, lsl #4
  418798:	ldr	w9, [x8, #8]
  41879c:	orr	w9, w9, #0x40000
  4187a0:	str	w9, [x8, #8]
  4187a4:	ldr	x8, [x20, #32]
  4187a8:	str	x19, [x8, x0, lsl #3]
  4187ac:	ldp	x20, x19, [sp, #32]
  4187b0:	ldr	x21, [sp, #16]
  4187b4:	ldp	x29, x30, [sp], #48
  4187b8:	ret
  4187bc:	stp	x29, x30, [sp, #-32]!
  4187c0:	stp	x20, x19, [sp, #16]
  4187c4:	ldp	x9, x8, [x0]
  4187c8:	mov	x19, x0
  4187cc:	mov	x20, x1
  4187d0:	mov	x29, sp
  4187d4:	cmp	x9, x8
  4187d8:	b.ne	418804 <_obstack_memory_used@@Base+0x7578>  // b.any
  4187dc:	ldr	x0, [x19, #16]
  4187e0:	lsl	x8, x9, #1
  4187e4:	add	x8, x8, #0x2
  4187e8:	lsl	x1, x8, #3
  4187ec:	str	x8, [x19]
  4187f0:	bl	402a50 <realloc@plt>
  4187f4:	cbz	x0, 418818 <_obstack_memory_used@@Base+0x758c>
  4187f8:	ldr	x8, [x19, #8]
  4187fc:	str	x0, [x19, #16]
  418800:	b	418808 <_obstack_memory_used@@Base+0x757c>
  418804:	ldr	x0, [x19, #16]
  418808:	add	x9, x8, #0x1
  41880c:	str	x9, [x19, #8]
  418810:	str	x20, [x0, x8, lsl #3]
  418814:	mov	w0, #0x1                   	// #1
  418818:	ldp	x20, x19, [sp, #16]
  41881c:	ldp	x29, x30, [sp], #32
  418820:	ret
  418824:	stp	x29, x30, [sp, #-48]!
  418828:	stp	x20, x19, [sp, #32]
  41882c:	ldr	x8, [x1, #8]
  418830:	str	x21, [sp, #16]
  418834:	mov	x19, x0
  418838:	mov	x29, sp
  41883c:	str	x8, [x0, #8]
  418840:	ldr	x21, [x1, #8]
  418844:	cmp	x21, #0x1
  418848:	b.lt	418878 <_obstack_memory_used@@Base+0x75ec>  // b.tstop
  41884c:	lsl	x0, x8, #3
  418850:	mov	x20, x1
  418854:	str	x8, [x19]
  418858:	bl	4028f0 <malloc@plt>
  41885c:	str	x0, [x19, #16]
  418860:	cbz	x0, 418894 <_obstack_memory_used@@Base+0x7608>
  418864:	ldr	x1, [x20, #16]
  418868:	lsl	x2, x21, #3
  41886c:	bl	402710 <memcpy@plt>
  418870:	mov	w0, wzr
  418874:	b	418884 <_obstack_memory_used@@Base+0x75f8>
  418878:	mov	w0, wzr
  41887c:	stp	xzr, xzr, [x19]
  418880:	str	xzr, [x19, #16]
  418884:	ldp	x20, x19, [sp, #32]
  418888:	ldr	x21, [sp, #16]
  41888c:	ldp	x29, x30, [sp], #48
  418890:	ret
  418894:	stp	xzr, xzr, [x19]
  418898:	mov	w0, #0xc                   	// #12
  41889c:	b	418884 <_obstack_memory_used@@Base+0x75f8>
  4188a0:	ldr	x8, [x0, #8]
  4188a4:	subs	x9, x8, #0x1
  4188a8:	b.lt	4188e8 <_obstack_memory_used@@Base+0x765c>  // b.tstop
  4188ac:	ldr	x8, [x0, #16]
  4188b0:	mov	x10, xzr
  4188b4:	b.eq	4188d8 <_obstack_memory_used@@Base+0x764c>  // b.none
  4188b8:	add	x11, x9, x10
  4188bc:	lsr	x11, x11, #1
  4188c0:	ldr	x12, [x8, x11, lsl #3]
  4188c4:	cmp	x12, x1
  4188c8:	csinc	x10, x10, x11, ge  // ge = tcont
  4188cc:	csel	x9, x9, x11, lt  // lt = tstop
  4188d0:	cmp	x10, x9
  4188d4:	b.cc	4188b8 <_obstack_memory_used@@Base+0x762c>  // b.lo, b.ul, b.last
  4188d8:	ldr	x8, [x8, x10, lsl #3]
  4188dc:	cmp	x8, x1
  4188e0:	csinc	x0, xzr, x10, ne  // ne = any
  4188e4:	ret
  4188e8:	mov	x0, xzr
  4188ec:	ret
  4188f0:	stp	x29, x30, [sp, #-96]!
  4188f4:	stp	x26, x25, [sp, #32]
  4188f8:	stp	x24, x23, [sp, #48]
  4188fc:	stp	x22, x21, [sp, #64]
  418900:	stp	x20, x19, [sp, #80]
  418904:	ldr	x8, [x2, #8]
  418908:	mov	x19, x0
  41890c:	str	x27, [sp, #16]
  418910:	mov	x29, sp
  418914:	cbz	x8, 418b7c <_obstack_memory_used@@Base+0x78f0>
  418918:	mov	w21, w3
  41891c:	mov	x22, x2
  418920:	mov	x20, x1
  418924:	subs	x9, x8, #0x1
  418928:	add	x23, x8, w3, uxtw
  41892c:	b.lt	418948 <_obstack_memory_used@@Base+0x76bc>  // b.tstop
  418930:	ldr	x10, [x22, #16]
  418934:	mov	x11, x8
  418938:	ldr	x12, [x10], #8
  41893c:	subs	x11, x11, #0x1
  418940:	add	x23, x12, x23
  418944:	b.ne	418938 <_obstack_memory_used@@Base+0x76ac>  // b.any
  418948:	ldr	x10, [x20, #136]
  41894c:	ldr	x11, [x20, #64]
  418950:	and	x12, x10, x23
  418954:	mov	w10, #0x18                  	// #24
  418958:	mul	x10, x12, x10
  41895c:	ldr	x10, [x11, x10]
  418960:	cmp	x10, #0x1
  418964:	b.lt	4189e8 <_obstack_memory_used@@Base+0x775c>  // b.tstop
  418968:	mov	w13, #0x18                  	// #24
  41896c:	madd	x11, x12, x13, x11
  418970:	ldr	x11, [x11, #16]
  418974:	mov	x12, xzr
  418978:	ldr	x24, [x11, x12, lsl #3]
  41897c:	ldr	x13, [x24]
  418980:	cmp	x13, x23
  418984:	b.ne	4189dc <_obstack_memory_used@@Base+0x7750>  // b.any
  418988:	ldrb	w13, [x24, #104]
  41898c:	and	w13, w13, #0xf
  418990:	cmp	w13, w21
  418994:	b.ne	4189dc <_obstack_memory_used@@Base+0x7750>  // b.any
  418998:	cbz	x22, 4189dc <_obstack_memory_used@@Base+0x7750>
  41899c:	ldr	x13, [x24, #80]
  4189a0:	cbz	x13, 4189dc <_obstack_memory_used@@Base+0x7750>
  4189a4:	ldr	x14, [x13, #8]
  4189a8:	cmp	x14, x8
  4189ac:	b.ne	4189dc <_obstack_memory_used@@Base+0x7750>  // b.any
  4189b0:	mov	x14, x9
  4189b4:	add	x15, x14, #0x1
  4189b8:	cmp	x15, #0x1
  4189bc:	b.lt	418b84 <_obstack_memory_used@@Base+0x78f8>  // b.tstop
  4189c0:	ldr	x15, [x13, #16]
  4189c4:	ldr	x16, [x22, #16]
  4189c8:	ldr	x15, [x15, x14, lsl #3]
  4189cc:	ldr	x16, [x16, x14, lsl #3]
  4189d0:	sub	x14, x14, #0x1
  4189d4:	cmp	x15, x16
  4189d8:	b.eq	4189b4 <_obstack_memory_used@@Base+0x7728>  // b.none
  4189dc:	add	x12, x12, #0x1
  4189e0:	cmp	x12, x10
  4189e4:	b.lt	418978 <_obstack_memory_used@@Base+0x76ec>  // b.tstop
  4189e8:	mov	w0, #0x70                  	// #112
  4189ec:	mov	w1, #0x1                   	// #1
  4189f0:	bl	402a20 <calloc@plt>
  4189f4:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x78e0>
  4189f8:	add	x25, x0, #0x8
  4189fc:	mov	x24, x0
  418a00:	mov	x0, x25
  418a04:	mov	x1, x22
  418a08:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  418a0c:	cbnz	w0, 418ba4 <_obstack_memory_used@@Base+0x7918>
  418a10:	ldrb	w8, [x24, #104]
  418a14:	str	x25, [x24, #80]
  418a18:	bfxil	w8, w21, #0, #4
  418a1c:	strb	w8, [x24, #104]
  418a20:	ldr	x8, [x22, #8]
  418a24:	cmp	x8, #0x1
  418a28:	b.lt	418b50 <_obstack_memory_used@@Base+0x78c4>  // b.tstop
  418a2c:	mov	x26, xzr
  418a30:	mov	x8, xzr
  418a34:	ldr	x9, [x22, #16]
  418a38:	ldr	x10, [x20]
  418a3c:	ldr	x9, [x9, x26, lsl #3]
  418a40:	add	x9, x10, x9, lsl #4
  418a44:	ldr	w27, [x9, #8]
  418a48:	and	w9, w27, #0x3ffff
  418a4c:	cmp	w9, #0x1
  418a50:	b.eq	418b40 <_obstack_memory_used@@Base+0x78b4>  // b.none
  418a54:	ldrb	w10, [x24, #104]
  418a58:	lsr	w12, w27, #15
  418a5c:	and	w11, w27, #0xff
  418a60:	and	w12, w12, #0x20
  418a64:	and	w9, w27, #0x3ff00
  418a68:	orr	w10, w10, w12
  418a6c:	cmp	w11, #0x2
  418a70:	strb	w10, [x24, #104]
  418a74:	b.eq	418a88 <_obstack_memory_used@@Base+0x77fc>  // b.none
  418a78:	cmp	w11, #0x4
  418a7c:	b.ne	418a94 <_obstack_memory_used@@Base+0x7808>  // b.any
  418a80:	mov	w11, #0x40                  	// #64
  418a84:	b	418a8c <_obstack_memory_used@@Base+0x7800>
  418a88:	mov	w11, #0x10                  	// #16
  418a8c:	orr	w10, w10, w11
  418a90:	strb	w10, [x24, #104]
  418a94:	cbz	w9, 418b40 <_obstack_memory_used@@Base+0x78b4>
  418a98:	ldr	x9, [x24, #80]
  418a9c:	cmp	x9, x25
  418aa0:	b.eq	418aac <_obstack_memory_used@@Base+0x7820>  // b.none
  418aa4:	tbz	w21, #0, 418adc <_obstack_memory_used@@Base+0x7850>
  418aa8:	b	418ae0 <_obstack_memory_used@@Base+0x7854>
  418aac:	mov	w0, #0x18                  	// #24
  418ab0:	bl	4028f0 <malloc@plt>
  418ab4:	cbz	x0, 418b64 <_obstack_memory_used@@Base+0x78d8>
  418ab8:	mov	x1, x22
  418abc:	str	x0, [x24, #80]
  418ac0:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  418ac4:	cbnz	w0, 418b64 <_obstack_memory_used@@Base+0x78d8>
  418ac8:	ldrb	w9, [x24, #104]
  418acc:	mov	x8, xzr
  418ad0:	orr	w9, w9, #0x80
  418ad4:	strb	w9, [x24, #104]
  418ad8:	tbnz	w21, #0, 418ae0 <_obstack_memory_used@@Base+0x7854>
  418adc:	tbnz	w27, #8, 418af8 <_obstack_memory_used@@Base+0x786c>
  418ae0:	tbz	w21, #0, 418ae8 <_obstack_memory_used@@Base+0x785c>
  418ae4:	tbnz	w27, #9, 418af8 <_obstack_memory_used@@Base+0x786c>
  418ae8:	tbnz	w21, #1, 418af0 <_obstack_memory_used@@Base+0x7864>
  418aec:	tbnz	w27, #12, 418af8 <_obstack_memory_used@@Base+0x786c>
  418af0:	tbnz	w21, #2, 418b40 <_obstack_memory_used@@Base+0x78b4>
  418af4:	tbz	w27, #14, 418b40 <_obstack_memory_used@@Base+0x78b4>
  418af8:	subs	x9, x26, x8
  418afc:	b.mi	418b3c <_obstack_memory_used@@Base+0x78b0>  // b.first
  418b00:	ldr	x10, [x24, #16]
  418b04:	cmp	x10, x9
  418b08:	b.le	418b3c <_obstack_memory_used@@Base+0x78b0>
  418b0c:	sub	x10, x10, #0x1
  418b10:	cmp	x10, x9
  418b14:	str	x10, [x24, #16]
  418b18:	b.le	418b3c <_obstack_memory_used@@Base+0x78b0>
  418b1c:	ldr	x10, [x24, #24]
  418b20:	add	x11, x10, x9, lsl #3
  418b24:	ldr	x12, [x11, #8]
  418b28:	add	x9, x9, #0x1
  418b2c:	str	x12, [x11]
  418b30:	ldr	x11, [x24, #16]
  418b34:	cmp	x9, x11
  418b38:	b.lt	418b20 <_obstack_memory_used@@Base+0x7894>  // b.tstop
  418b3c:	add	x8, x8, #0x1
  418b40:	ldr	x9, [x22, #8]
  418b44:	add	x26, x26, #0x1
  418b48:	cmp	x26, x9
  418b4c:	b.lt	418a34 <_obstack_memory_used@@Base+0x77a8>  // b.tstop
  418b50:	mov	x0, x20
  418b54:	mov	x1, x24
  418b58:	mov	x2, x23
  418b5c:	bl	418bb0 <_obstack_memory_used@@Base+0x7924>
  418b60:	cbz	w0, 418b84 <_obstack_memory_used@@Base+0x78f8>
  418b64:	mov	x0, x24
  418b68:	bl	4143a0 <_obstack_memory_used@@Base+0x3114>
  418b6c:	mov	x24, xzr
  418b70:	mov	w8, #0xc                   	// #12
  418b74:	str	w8, [x19]
  418b78:	b	418b84 <_obstack_memory_used@@Base+0x78f8>
  418b7c:	mov	x24, xzr
  418b80:	str	wzr, [x19]
  418b84:	mov	x0, x24
  418b88:	ldp	x20, x19, [sp, #80]
  418b8c:	ldp	x22, x21, [sp, #64]
  418b90:	ldp	x24, x23, [sp, #48]
  418b94:	ldp	x26, x25, [sp, #32]
  418b98:	ldr	x27, [sp, #16]
  418b9c:	ldp	x29, x30, [sp], #96
  418ba0:	ret
  418ba4:	mov	x0, x24
  418ba8:	bl	402be0 <free@plt>
  418bac:	b	418b6c <_obstack_memory_used@@Base+0x78e0>
  418bb0:	stp	x29, x30, [sp, #-64]!
  418bb4:	stp	x24, x23, [sp, #16]
  418bb8:	stp	x22, x21, [sp, #32]
  418bbc:	stp	x20, x19, [sp, #48]
  418bc0:	ldr	x23, [x1, #16]
  418bc4:	mov	x21, x0
  418bc8:	mov	x22, x1
  418bcc:	mov	x29, sp
  418bd0:	lsl	x0, x23, #3
  418bd4:	mov	x20, x2
  418bd8:	mov	x19, x1
  418bdc:	str	x2, [x1]
  418be0:	str	x23, [x22, #32]!
  418be4:	str	xzr, [x1, #40]
  418be8:	bl	4028f0 <malloc@plt>
  418bec:	str	x0, [x19, #48]
  418bf0:	cbz	x0, 418cb0 <_obstack_memory_used@@Base+0x7a24>
  418bf4:	cmp	x23, #0x1
  418bf8:	b.lt	418c34 <_obstack_memory_used@@Base+0x79a8>  // b.tstop
  418bfc:	mov	x24, xzr
  418c00:	ldr	x8, [x19, #24]
  418c04:	ldr	x1, [x8, x24, lsl #3]
  418c08:	ldr	x8, [x21]
  418c0c:	add	x8, x8, x1, lsl #4
  418c10:	ldrb	w8, [x8, #8]
  418c14:	tbnz	w8, #3, 418c28 <_obstack_memory_used@@Base+0x799c>
  418c18:	mov	x0, x22
  418c1c:	bl	4187bc <_obstack_memory_used@@Base+0x7530>
  418c20:	tbz	w0, #0, 418cb0 <_obstack_memory_used@@Base+0x7a24>
  418c24:	ldr	x23, [x19, #16]
  418c28:	add	x24, x24, #0x1
  418c2c:	cmp	x24, x23
  418c30:	b.lt	418c00 <_obstack_memory_used@@Base+0x7974>  // b.tstop
  418c34:	ldr	x9, [x21, #136]
  418c38:	ldr	x8, [x21, #64]
  418c3c:	mov	w11, #0x18                  	// #24
  418c40:	and	x10, x9, x20
  418c44:	madd	x20, x10, x11, x8
  418c48:	mov	x21, x20
  418c4c:	ldr	x11, [x21, #8]!
  418c50:	ldr	x9, [x20]
  418c54:	cmp	x11, x9
  418c58:	b.le	418c7c <_obstack_memory_used@@Base+0x79f0>
  418c5c:	mov	w11, #0x18                  	// #24
  418c60:	madd	x8, x10, x11, x8
  418c64:	ldr	x8, [x8, #16]
  418c68:	mov	w0, wzr
  418c6c:	add	x10, x9, #0x1
  418c70:	str	x10, [x20]
  418c74:	str	x19, [x8, x9, lsl #3]
  418c78:	b	418cb4 <_obstack_memory_used@@Base+0x7a28>
  418c7c:	mov	w11, #0x18                  	// #24
  418c80:	madd	x22, x10, x11, x8
  418c84:	ldr	x0, [x22, #16]!
  418c88:	lsl	x8, x9, #1
  418c8c:	add	x23, x8, #0x2
  418c90:	lsl	x1, x23, #3
  418c94:	bl	402a50 <realloc@plt>
  418c98:	cbz	x0, 418cb0 <_obstack_memory_used@@Base+0x7a24>
  418c9c:	str	x0, [x22]
  418ca0:	str	x23, [x21]
  418ca4:	ldr	x9, [x20]
  418ca8:	mov	x8, x0
  418cac:	b	418c68 <_obstack_memory_used@@Base+0x79dc>
  418cb0:	mov	w0, #0xc                   	// #12
  418cb4:	ldp	x20, x19, [sp, #48]
  418cb8:	ldp	x22, x21, [sp, #32]
  418cbc:	ldp	x24, x23, [sp, #16]
  418cc0:	ldp	x29, x30, [sp], #64
  418cc4:	ret
  418cc8:	sub	sp, sp, #0x70
  418ccc:	stp	x29, x30, [sp, #32]
  418cd0:	str	x25, [sp, #48]
  418cd4:	stp	x24, x23, [sp, #64]
  418cd8:	stp	x22, x21, [sp, #80]
  418cdc:	stp	x20, x19, [sp, #96]
  418ce0:	mov	x9, x0
  418ce4:	ldr	x8, [x9, #40]!
  418ce8:	mov	x19, x0
  418cec:	mov	x20, x1
  418cf0:	add	x29, sp, #0x20
  418cf4:	cmp	x8, x1
  418cf8:	b.le	418e50 <_obstack_memory_used@@Base+0x7bc4>
  418cfc:	ldr	w8, [x19, #144]
  418d00:	cmp	w8, #0x2
  418d04:	b.lt	418d0c <_obstack_memory_used@@Base+0x7a80>  // b.tstop
  418d08:	str	xzr, [x19, #32]
  418d0c:	ldr	x10, [x19, #80]
  418d10:	ldr	x11, [x19, #96]
  418d14:	strb	wzr, [x19, #140]
  418d18:	tst	w2, #0x1
  418d1c:	str	x10, [x19, #88]
  418d20:	str	x11, [x19, #104]
  418d24:	stp	xzr, xzr, [x9]
  418d28:	str	xzr, [x9, #16]
  418d2c:	ldrb	w9, [x19, #139]
  418d30:	mov	w10, #0x4                   	// #4
  418d34:	mov	w11, #0x6                   	// #6
  418d38:	mov	x8, xzr
  418d3c:	csel	w10, w11, w10, eq  // eq = none
  418d40:	mov	x23, x20
  418d44:	str	w10, [x19, #112]
  418d48:	cbnz	w9, 418d5c <_obstack_memory_used@@Base+0x7ad0>
  418d4c:	ldr	x9, [x19]
  418d50:	mov	x8, xzr
  418d54:	mov	x23, x20
  418d58:	str	x9, [x19, #8]
  418d5c:	cbz	x23, 418dd4 <_obstack_memory_used@@Base+0x7b48>
  418d60:	ldr	x10, [x19, #56]
  418d64:	cmp	x23, x10
  418d68:	b.ge	418e5c <_obstack_memory_used@@Base+0x7bd0>  // b.tcont
  418d6c:	ldrb	w8, [x19, #140]
  418d70:	cbnz	w8, 418fb0 <_obstack_memory_used@@Base+0x7d24>
  418d74:	sub	x1, x23, #0x1
  418d78:	mov	x0, x19
  418d7c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  418d80:	ldr	w8, [x19, #144]
  418d84:	str	w0, [x19, #112]
  418d88:	cmp	w8, #0x2
  418d8c:	b.lt	418da8 <_obstack_memory_used@@Base+0x7b1c>  // b.tstop
  418d90:	ldr	x8, [x19, #48]
  418d94:	ldr	x0, [x19, #16]
  418d98:	sub	x8, x8, x23
  418d9c:	add	x1, x0, x23, lsl #2
  418da0:	lsl	x2, x8, #2
  418da4:	bl	402720 <memmove@plt>
  418da8:	ldrb	w8, [x19, #139]
  418dac:	cbnz	w8, 419098 <_obstack_memory_used@@Base+0x7e0c>
  418db0:	ldr	q0, [x19, #48]
  418db4:	dup	v1.2d, x23
  418db8:	sub	v0.2d, v0.2d, v1.2d
  418dbc:	str	q0, [x19, #48]
  418dc0:	ldrb	w8, [x19, #139]
  418dc4:	cbnz	w8, 418dd4 <_obstack_memory_used@@Base+0x7b48>
  418dc8:	ldr	x8, [x19, #8]
  418dcc:	add	x8, x8, x23
  418dd0:	str	x8, [x19, #8]
  418dd4:	ldr	x8, [x19, #88]
  418dd8:	ldr	x9, [x19, #104]
  418ddc:	ldr	w10, [x19, #144]
  418de0:	str	x20, [x19, #40]
  418de4:	sub	x8, x8, x23
  418de8:	sub	x9, x9, x23
  418dec:	cmp	w10, #0x2
  418df0:	str	x8, [x19, #88]
  418df4:	str	x9, [x19, #104]
  418df8:	b.lt	418e14 <_obstack_memory_used@@Base+0x7b88>  // b.tstop
  418dfc:	ldrb	w8, [x19, #136]
  418e00:	cbz	w8, 418e24 <_obstack_memory_used@@Base+0x7b98>
  418e04:	mov	x0, x19
  418e08:	bl	414568 <_obstack_memory_used@@Base+0x32dc>
  418e0c:	cbnz	w0, 418e34 <_obstack_memory_used@@Base+0x7ba8>
  418e10:	b	418e2c <_obstack_memory_used@@Base+0x7ba0>
  418e14:	ldrb	w9, [x19, #139]
  418e18:	cbnz	w9, 419128 <_obstack_memory_used@@Base+0x7e9c>
  418e1c:	str	x8, [x19, #48]
  418e20:	b	418e2c <_obstack_memory_used@@Base+0x7ba0>
  418e24:	mov	x0, x19
  418e28:	bl	414b28 <_obstack_memory_used@@Base+0x389c>
  418e2c:	mov	w0, wzr
  418e30:	str	xzr, [x19, #72]
  418e34:	ldp	x20, x19, [sp, #96]
  418e38:	ldp	x22, x21, [sp, #80]
  418e3c:	ldp	x24, x23, [sp, #64]
  418e40:	ldr	x25, [sp, #48]
  418e44:	ldp	x29, x30, [sp, #32]
  418e48:	add	sp, sp, #0x70
  418e4c:	ret
  418e50:	sub	x23, x20, x8
  418e54:	cbnz	x23, 418d60 <_obstack_memory_used@@Base+0x7ad4>
  418e58:	b	418dd4 <_obstack_memory_used@@Base+0x7b48>
  418e5c:	ldrb	w11, [x19, #140]
  418e60:	ldr	x9, [x19, #48]
  418e64:	cbnz	w11, 41926c <_obstack_memory_used@@Base+0x7fe0>
  418e68:	ldr	w11, [x19, #144]
  418e6c:	str	xzr, [x19, #48]
  418e70:	cmp	w11, #0x2
  418e74:	b.lt	41913c <_obstack_memory_used@@Base+0x7eb0>  // b.tstop
  418e78:	ldrb	w12, [x19, #137]
  418e7c:	cbz	w12, 418f34 <_obstack_memory_used@@Base+0x7ca8>
  418e80:	ldr	x14, [x19]
  418e84:	sub	x11, x23, x11
  418e88:	add	x12, x14, x8
  418e8c:	add	x11, x12, x11
  418e90:	cmp	x11, x14
  418e94:	add	x24, x12, x23
  418e98:	csel	x13, x14, x11, cc  // cc = lo, ul, last
  418e9c:	add	x11, x14, x23
  418ea0:	add	x14, x11, x8
  418ea4:	sub	x14, x14, #0x1
  418ea8:	cmp	x14, x13
  418eac:	b.cc	418f34 <_obstack_memory_used@@Base+0x7ca8>  // b.lo, b.ul, b.last
  418eb0:	ldrb	w14, [x14]
  418eb4:	sub	x11, x11, #0x1
  418eb8:	and	w14, w14, #0xc0
  418ebc:	cmp	w14, #0x80
  418ec0:	b.eq	418ea0 <_obstack_memory_used@@Base+0x7c14>  // b.none
  418ec4:	ldr	x10, [x19, #88]
  418ec8:	mov	x21, x9
  418ecc:	ldr	x9, [x19, #120]
  418ed0:	add	x25, x11, x8
  418ed4:	add	x10, x12, x10
  418ed8:	mov	w22, w2
  418edc:	sub	x2, x10, x25
  418ee0:	mov	x1, x25
  418ee4:	cbnz	x9, 4192d8 <_obstack_memory_used@@Base+0x804c>
  418ee8:	sub	x0, x29, #0x4
  418eec:	add	x3, x29, #0x18
  418ef0:	str	xzr, [x29, #24]
  418ef4:	bl	410f04 <wcrtomb@plt+0xe0d4>
  418ef8:	sub	x8, x24, x25
  418efc:	subs	x9, x0, x8
  418f00:	mov	w8, #0xffffffff            	// #-1
  418f04:	b.cc	418f1c <_obstack_memory_used@@Base+0x7c90>  // b.lo, b.ul, b.last
  418f08:	cmn	x0, #0x3
  418f0c:	b.hi	418f1c <_obstack_memory_used@@Base+0x7c90>  // b.pmore
  418f10:	str	xzr, [x19, #32]
  418f14:	str	x9, [x19, #48]
  418f18:	ldur	w8, [x29, #-4]
  418f1c:	cmn	w8, #0x1
  418f20:	b.ne	4191cc <_obstack_memory_used@@Base+0x7f40>  // b.any
  418f24:	ldr	x8, [x19, #40]
  418f28:	ldr	x10, [x19, #56]
  418f2c:	mov	w2, w22
  418f30:	mov	x9, x21
  418f34:	add	x24, x10, x8
  418f38:	subs	x21, x24, x20
  418f3c:	b.ge	4191b8 <_obstack_memory_used@@Base+0x7f2c>  // b.tcont
  418f40:	add	x22, x19, #0x20
  418f44:	str	x9, [sp, #8]
  418f48:	str	w2, [sp, #4]
  418f4c:	ldr	x8, [x19, #80]
  418f50:	ldr	x9, [x19]
  418f54:	ldr	x25, [x19, #32]
  418f58:	add	x0, x29, #0x18
  418f5c:	sub	x21, x8, x24
  418f60:	add	x1, x9, x24
  418f64:	mov	x2, x21
  418f68:	mov	x3, x22
  418f6c:	bl	410f04 <wcrtomb@plt+0xe0d4>
  418f70:	sub	x8, x0, #0x1
  418f74:	cmn	x8, #0x3
  418f78:	b.cs	418f90 <_obstack_memory_used@@Base+0x7d04>  // b.hs, b.nlast
  418f7c:	ldr	w8, [x29, #24]
  418f80:	add	x24, x0, x24
  418f84:	subs	x21, x24, x20
  418f88:	b.lt	418f4c <_obstack_memory_used@@Base+0x7cc0>  // b.tstop
  418f8c:	b	4191c0 <_obstack_memory_used@@Base+0x7f34>
  418f90:	mov	w8, wzr
  418f94:	cbz	x21, 418fa4 <_obstack_memory_used@@Base+0x7d18>
  418f98:	cbz	x0, 418fa4 <_obstack_memory_used@@Base+0x7d18>
  418f9c:	ldr	x8, [x19]
  418fa0:	ldrb	w8, [x8, x24]
  418fa4:	str	x25, [x22]
  418fa8:	mov	w0, #0x1                   	// #1
  418fac:	b	418f80 <_obstack_memory_used@@Base+0x7cf4>
  418fb0:	ldr	x22, [x19, #48]
  418fb4:	ldr	x21, [x19, #24]
  418fb8:	mov	x8, xzr
  418fbc:	mov	x10, x22
  418fc0:	add	x9, x8, x10
  418fc4:	cmp	x9, #0x0
  418fc8:	cinc	x9, x9, lt  // lt = tstop
  418fcc:	asr	x9, x9, #1
  418fd0:	ldr	x11, [x21, x9, lsl #3]
  418fd4:	mov	x12, x9
  418fd8:	cmp	x11, x23
  418fdc:	b.gt	418fec <_obstack_memory_used@@Base+0x7d60>
  418fe0:	b.ge	418ff8 <_obstack_memory_used@@Base+0x7d6c>  // b.tcont
  418fe4:	add	x8, x9, #0x1
  418fe8:	mov	x12, x10
  418fec:	cmp	x8, x12
  418ff0:	mov	x10, x12
  418ff4:	b.lt	418fc0 <_obstack_memory_used@@Base+0x7d34>  // b.tstop
  418ff8:	cmp	x11, x23
  418ffc:	cinc	x24, x9, lt  // lt = tstop
  419000:	sub	x1, x24, #0x1
  419004:	mov	x0, x19
  419008:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41900c:	subs	x8, x22, x23
  419010:	str	w0, [x19, #112]
  419014:	b.le	4190b0 <_obstack_memory_used@@Base+0x7e24>
  419018:	cmp	x24, x23
  41901c:	b.ne	4190b0 <_obstack_memory_used@@Base+0x7e24>  // b.any
  419020:	ldr	x9, [x21, x23, lsl #3]
  419024:	cmp	x9, x23
  419028:	b.ne	4190b0 <_obstack_memory_used@@Base+0x7e24>  // b.any
  41902c:	ldr	x0, [x19, #16]
  419030:	lsl	x2, x8, #2
  419034:	add	x1, x0, x23, lsl #2
  419038:	bl	402720 <memmove@plt>
  41903c:	ldr	x0, [x19, #8]
  419040:	ldr	x8, [x19, #48]
  419044:	add	x1, x0, x23
  419048:	sub	x2, x8, x23
  41904c:	bl	402720 <memmove@plt>
  419050:	ldr	q0, [x19, #48]
  419054:	dup	v1.2d, x23
  419058:	sub	v0.2d, v0.2d, v1.2d
  41905c:	fmov	x8, d0
  419060:	cmp	x8, #0x1
  419064:	str	q0, [x19, #48]
  419068:	b.lt	418dc0 <_obstack_memory_used@@Base+0x7b34>  // b.tstop
  41906c:	ldr	x9, [x19, #24]
  419070:	mov	x8, xzr
  419074:	add	x10, x9, x23, lsl #3
  419078:	ldr	x11, [x10, x8, lsl #3]
  41907c:	sub	x11, x11, x23
  419080:	str	x11, [x9, x8, lsl #3]
  419084:	ldr	x11, [x19, #48]
  419088:	add	x8, x8, #0x1
  41908c:	cmp	x8, x11
  419090:	b.lt	419078 <_obstack_memory_used@@Base+0x7dec>  // b.tstop
  419094:	b	418dc0 <_obstack_memory_used@@Base+0x7b34>
  419098:	ldr	x0, [x19, #8]
  41909c:	ldr	x8, [x19, #48]
  4190a0:	add	x1, x0, x23
  4190a4:	sub	x2, x8, x23
  4190a8:	bl	402720 <memmove@plt>
  4190ac:	b	418db0 <_obstack_memory_used@@Base+0x7b24>
  4190b0:	ldr	x9, [x19, #96]
  4190b4:	ldr	x8, [x19, #80]
  4190b8:	sub	x10, x23, x20
  4190bc:	strb	wzr, [x19, #140]
  4190c0:	add	x9, x10, x9
  4190c4:	add	x8, x10, x8
  4190c8:	str	x9, [x19, #104]
  4190cc:	sub	x9, x21, #0x8
  4190d0:	str	x8, [x19, #88]
  4190d4:	mov	x8, x24
  4190d8:	subs	x24, x24, #0x1
  4190dc:	b.lt	4190ec <_obstack_memory_used@@Base+0x7e60>  // b.tstop
  4190e0:	ldr	x10, [x9, x8, lsl #3]
  4190e4:	cmp	x10, x23
  4190e8:	b.eq	4190d4 <_obstack_memory_used@@Base+0x7e48>  // b.none
  4190ec:	cmp	x8, x22
  4190f0:	b.ge	419114 <_obstack_memory_used@@Base+0x7e88>  // b.tcont
  4190f4:	ldr	x9, [x19, #16]
  4190f8:	ldr	w10, [x9, x8, lsl #2]
  4190fc:	cmn	w10, #0x1
  419100:	b.ne	419114 <_obstack_memory_used@@Base+0x7e88>  // b.any
  419104:	add	x8, x8, #0x1
  419108:	cmp	x22, x8
  41910c:	b.ne	4190f8 <_obstack_memory_used@@Base+0x7e6c>  // b.any
  419110:	b	41911c <_obstack_memory_used@@Base+0x7e90>
  419114:	cmp	x8, x22
  419118:	b.ne	41917c <_obstack_memory_used@@Base+0x7ef0>  // b.any
  41911c:	mov	x8, xzr
  419120:	str	xzr, [x19, #48]
  419124:	b	419264 <_obstack_memory_used@@Base+0x7fd8>
  419128:	ldrb	w8, [x19, #136]
  41912c:	cbz	w8, 4191f0 <_obstack_memory_used@@Base+0x7f64>
  419130:	mov	x0, x19
  419134:	bl	414ab0 <_obstack_memory_used@@Base+0x3824>
  419138:	b	418e2c <_obstack_memory_used@@Base+0x7ba0>
  41913c:	ldr	x9, [x19]
  419140:	add	x8, x23, x8
  419144:	add	x8, x8, x9
  419148:	ldr	x9, [x19, #120]
  41914c:	ldurb	w8, [x8, #-1]
  419150:	str	xzr, [x19, #56]
  419154:	cbz	x9, 41915c <_obstack_memory_used@@Base+0x7ed0>
  419158:	ldrb	w8, [x9, x8]
  41915c:	ldr	x9, [x19, #128]
  419160:	lsr	x10, x8, #3
  419164:	and	x10, x10, #0x18
  419168:	ldr	x9, [x9, x10]
  41916c:	lsr	x9, x9, x8
  419170:	tbz	w9, #0, 419204 <_obstack_memory_used@@Base+0x7f78>
  419174:	mov	w8, #0x1                   	// #1
  419178:	b	41923c <_obstack_memory_used@@Base+0x7fb0>
  41917c:	ldr	x8, [x21, x8, lsl #3]
  419180:	subs	x21, x8, x23
  419184:	str	x21, [x19, #48]
  419188:	b.eq	419230 <_obstack_memory_used@@Base+0x7fa4>  // b.none
  41918c:	cmp	x21, #0x1
  419190:	b.lt	4191a4 <_obstack_memory_used@@Base+0x7f18>  // b.tstop
  419194:	ldr	x0, [x19, #16]
  419198:	lsl	x2, x21, #2
  41919c:	mov	w1, #0xff                  	// #255
  4191a0:	bl	4029d0 <memset@plt>
  4191a4:	ldr	x0, [x19, #8]
  4191a8:	mov	w1, #0xff                  	// #255
  4191ac:	mov	x2, x21
  4191b0:	bl	4029d0 <memset@plt>
  4191b4:	b	419260 <_obstack_memory_used@@Base+0x7fd4>
  4191b8:	str	x21, [x19, #48]
  4191bc:	b	41924c <_obstack_memory_used@@Base+0x7fc0>
  4191c0:	cmn	w8, #0x1
  4191c4:	str	x21, [x19, #48]
  4191c8:	b.eq	419244 <_obstack_memory_used@@Base+0x7fb8>  // b.none
  4191cc:	ldrb	w9, [x19, #142]
  4191d0:	cbnz	w9, 4192b4 <_obstack_memory_used@@Base+0x8028>
  4191d4:	cmp	w8, #0xa
  4191d8:	b.ne	419220 <_obstack_memory_used@@Base+0x7f94>  // b.any
  4191dc:	ldrb	w8, [x19, #141]
  4191e0:	cmp	w8, #0x0
  4191e4:	cset	w8, ne  // ne = any
  4191e8:	lsl	w9, w8, #1
  4191ec:	b	419224 <_obstack_memory_used@@Base+0x7f98>
  4191f0:	ldr	x8, [x19, #120]
  4191f4:	cbz	x8, 418e2c <_obstack_memory_used@@Base+0x7ba0>
  4191f8:	mov	x0, x19
  4191fc:	bl	414cfc <_obstack_memory_used@@Base+0x3a70>
  419200:	b	418e2c <_obstack_memory_used@@Base+0x7ba0>
  419204:	cmp	w8, #0xa
  419208:	b.ne	419238 <_obstack_memory_used@@Base+0x7fac>  // b.any
  41920c:	ldrb	w8, [x19, #141]
  419210:	cmp	w8, #0x0
  419214:	cset	w8, ne  // ne = any
  419218:	lsl	w8, w8, #1
  41921c:	b	41923c <_obstack_memory_used@@Base+0x7fb0>
  419220:	mov	w9, wzr
  419224:	ldr	x21, [x19, #48]
  419228:	str	w9, [x19, #112]
  41922c:	b	41925c <_obstack_memory_used@@Base+0x7fd0>
  419230:	mov	x8, xzr
  419234:	b	419264 <_obstack_memory_used@@Base+0x7fd8>
  419238:	mov	w8, wzr
  41923c:	str	w8, [x19, #112]
  419240:	b	418dc0 <_obstack_memory_used@@Base+0x7b34>
  419244:	ldr	w2, [sp, #4]
  419248:	ldr	x9, [sp, #8]
  41924c:	sub	x1, x9, #0x1
  419250:	mov	x0, x19
  419254:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  419258:	str	w0, [x19, #112]
  41925c:	cbnz	x21, 419290 <_obstack_memory_used@@Base+0x8004>
  419260:	ldr	x8, [x19, #48]
  419264:	str	x8, [x19, #56]
  419268:	b	418dc0 <_obstack_memory_used@@Base+0x7b34>
  41926c:	ldr	x11, [x19, #80]
  419270:	ldr	x12, [x19, #96]
  419274:	sub	x13, x23, x20
  419278:	strb	wzr, [x19, #140]
  41927c:	add	x11, x13, x11
  419280:	add	x12, x13, x12
  419284:	str	x11, [x19, #88]
  419288:	str	x12, [x19, #104]
  41928c:	b	418e68 <_obstack_memory_used@@Base+0x7bdc>
  419290:	cmp	x21, #0x1
  419294:	b.lt	4192a8 <_obstack_memory_used@@Base+0x801c>  // b.tstop
  419298:	ldr	x0, [x19, #16]
  41929c:	lsl	x2, x21, #2
  4192a0:	mov	w1, #0xff                  	// #255
  4192a4:	bl	4029d0 <memset@plt>
  4192a8:	ldrb	w8, [x19, #139]
  4192ac:	cbnz	w8, 4191a4 <_obstack_memory_used@@Base+0x7f18>
  4192b0:	b	419260 <_obstack_memory_used@@Base+0x7fd4>
  4192b4:	mov	w0, w8
  4192b8:	mov	w21, w8
  4192bc:	bl	402ce0 <iswalnum@plt>
  4192c0:	cmp	w21, #0x5f
  4192c4:	mov	w9, #0x1                   	// #1
  4192c8:	b.eq	419224 <_obstack_memory_used@@Base+0x7f98>  // b.none
  4192cc:	mov	w8, w21
  4192d0:	cbz	w0, 4191d4 <_obstack_memory_used@@Base+0x7f48>
  4192d4:	b	419224 <_obstack_memory_used@@Base+0x7f98>
  4192d8:	cmp	x2, #0x6
  4192dc:	mov	w10, #0x6                   	// #6
  4192e0:	csel	x10, x2, x10, lt  // lt = tstop
  4192e4:	cmp	w10, #0x1
  4192e8:	sub	x1, x29, #0xc
  4192ec:	b.lt	418ee8 <_obstack_memory_used@@Base+0x7c5c>  // b.tstop
  4192f0:	sxtw	x10, w10
  4192f4:	sub	x12, x1, #0x1
  4192f8:	add	x13, x8, x10
  4192fc:	add	x13, x11, x13
  419300:	ldurb	w13, [x13, #-1]
  419304:	sub	x1, x29, #0xc
  419308:	ldrb	w13, [x9, x13]
  41930c:	strb	w13, [x12, x10]
  419310:	subs	x10, x10, #0x1
  419314:	b.gt	4192f8 <_obstack_memory_used@@Base+0x806c>
  419318:	b	418ee8 <_obstack_memory_used@@Base+0x7c5c>
  41931c:	stp	x29, x30, [sp, #-32]!
  419320:	stp	x20, x19, [sp, #16]
  419324:	mov	x8, x2
  419328:	ldr	w2, [x0, #160]
  41932c:	mov	x20, x1
  419330:	mov	x1, x8
  419334:	mov	x29, sp
  419338:	mov	x19, x0
  41933c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  419340:	ldr	x9, [x20, #16]
  419344:	cmp	x9, #0x1
  419348:	b.lt	4193a8 <_obstack_memory_used@@Base+0x811c>  // b.tstop
  41934c:	ldr	x8, [x19, #152]
  419350:	ldr	x10, [x20, #24]
  419354:	mov	x12, xzr
  419358:	ldr	x11, [x8]
  41935c:	ldr	x8, [x10, x12, lsl #3]
  419360:	add	x13, x11, x8, lsl #4
  419364:	ldr	w13, [x13, #8]
  419368:	and	w14, w13, #0xff
  41936c:	cmp	w14, #0x2
  419370:	b.ne	41939c <_obstack_memory_used@@Base+0x8110>  // b.any
  419374:	tst	w13, #0x3ff00
  419378:	b.eq	4193ac <_obstack_memory_used@@Base+0x8120>  // b.none
  41937c:	tbnz	w0, #0, 419384 <_obstack_memory_used@@Base+0x80f8>
  419380:	tbnz	w13, #10, 41939c <_obstack_memory_used@@Base+0x8110>
  419384:	tbz	w0, #0, 41938c <_obstack_memory_used@@Base+0x8100>
  419388:	tbnz	w13, #11, 41939c <_obstack_memory_used@@Base+0x8110>
  41938c:	tbnz	w0, #1, 419394 <_obstack_memory_used@@Base+0x8108>
  419390:	tbnz	w13, #13, 41939c <_obstack_memory_used@@Base+0x8110>
  419394:	tbnz	w0, #3, 4193ac <_obstack_memory_used@@Base+0x8120>
  419398:	tbz	w13, #15, 4193ac <_obstack_memory_used@@Base+0x8120>
  41939c:	add	x12, x12, #0x1
  4193a0:	cmp	x12, x9
  4193a4:	b.lt	41935c <_obstack_memory_used@@Base+0x80d0>  // b.tstop
  4193a8:	mov	x8, xzr
  4193ac:	ldp	x20, x19, [sp, #16]
  4193b0:	mov	x0, x8
  4193b4:	ldp	x29, x30, [sp], #32
  4193b8:	ret
  4193bc:	stp	x29, x30, [sp, #-64]!
  4193c0:	stp	x22, x21, [sp, #32]
  4193c4:	stp	x20, x19, [sp, #48]
  4193c8:	ldr	x8, [x0, #232]
  4193cc:	mov	x19, x0
  4193d0:	str	x23, [sp, #16]
  4193d4:	mov	x29, sp
  4193d8:	cmp	x8, #0x1
  4193dc:	b.lt	41945c <_obstack_memory_used@@Base+0x81d0>  // b.tstop
  4193e0:	mov	x22, xzr
  4193e4:	ldr	x8, [x19, #248]
  4193e8:	ldr	x20, [x8, x22, lsl #3]
  4193ec:	ldr	x8, [x20, #32]
  4193f0:	cmp	x8, #0x1
  4193f4:	b.lt	419424 <_obstack_memory_used@@Base+0x8198>  // b.tstop
  4193f8:	mov	x23, xzr
  4193fc:	ldr	x8, [x20, #40]
  419400:	ldr	x21, [x8, x23, lsl #3]
  419404:	ldr	x0, [x21, #32]
  419408:	bl	402be0 <free@plt>
  41940c:	mov	x0, x21
  419410:	bl	402be0 <free@plt>
  419414:	ldr	x8, [x20, #32]
  419418:	add	x23, x23, #0x1
  41941c:	cmp	x23, x8
  419420:	b.lt	4193fc <_obstack_memory_used@@Base+0x8170>  // b.tstop
  419424:	ldr	x0, [x20, #40]
  419428:	bl	402be0 <free@plt>
  41942c:	ldr	x8, [x20, #16]
  419430:	cbz	x8, 419444 <_obstack_memory_used@@Base+0x81b8>
  419434:	ldr	x0, [x8, #16]
  419438:	bl	402be0 <free@plt>
  41943c:	ldr	x0, [x20, #16]
  419440:	bl	402be0 <free@plt>
  419444:	mov	x0, x20
  419448:	bl	402be0 <free@plt>
  41944c:	ldr	x8, [x19, #232]
  419450:	add	x22, x22, #0x1
  419454:	cmp	x22, x8
  419458:	b.lt	4193e4 <_obstack_memory_used@@Base+0x8158>  // b.tstop
  41945c:	str	xzr, [x19, #232]
  419460:	str	xzr, [x19, #200]
  419464:	ldp	x20, x19, [sp, #48]
  419468:	ldp	x22, x21, [sp, #32]
  41946c:	ldr	x23, [sp, #16]
  419470:	ldp	x29, x30, [sp], #64
  419474:	ret
  419478:	stp	x29, x30, [sp, #-96]!
  41947c:	stp	x28, x27, [sp, #16]
  419480:	stp	x26, x25, [sp, #32]
  419484:	stp	x24, x23, [sp, #48]
  419488:	stp	x22, x21, [sp, #64]
  41948c:	stp	x20, x19, [sp, #80]
  419490:	mov	x29, sp
  419494:	sub	sp, sp, #0x70
  419498:	adrp	x8, 41f000 <_obstack_memory_used@@Base+0xdd74>
  41949c:	add	x8, x8, #0x268
  4194a0:	ldr	q0, [x8]
  4194a4:	ldr	x8, [x8, #16]
  4194a8:	ldr	x24, [x0]
  4194ac:	mov	x21, x3
  4194b0:	mov	x22, x2
  4194b4:	mov	x23, x1
  4194b8:	stur	q0, [x29, #-64]
  4194bc:	stur	x8, [x29, #-48]
  4194c0:	tbz	w4, #0, 4194dc <_obstack_memory_used@@Base+0x8250>
  4194c4:	mov	w0, #0x60                  	// #96
  4194c8:	bl	4028f0 <malloc@plt>
  4194cc:	stur	x0, [x29, #-48]
  4194d0:	cbz	x0, 419a04 <_obstack_memory_used@@Base+0x8778>
  4194d4:	sub	x19, x29, #0x40
  4194d8:	b	4194e0 <_obstack_memory_used@@Base+0x8254>
  4194dc:	mov	x19, xzr
  4194e0:	ldr	x26, [x24, #144]
  4194e4:	lsl	x20, x22, #4
  4194e8:	cmp	x20, #0xfbf
  4194ec:	stp	xzr, xzr, [x29, #-32]
  4194f0:	stur	xzr, [x29, #-16]
  4194f4:	b.hi	419514 <_obstack_memory_used@@Base+0x8288>  // b.pmore
  4194f8:	add	x9, x20, #0xf
  4194fc:	mov	x8, sp
  419500:	and	x9, x9, #0xfffffffffffffff0
  419504:	sub	x0, x8, x9
  419508:	mov	sp, x0
  41950c:	stur	wzr, [x29, #-76]
  419510:	b	419528 <_obstack_memory_used@@Base+0x829c>
  419514:	mov	x0, x20
  419518:	bl	4028f0 <malloc@plt>
  41951c:	cbz	x0, 4199fc <_obstack_memory_used@@Base+0x8770>
  419520:	mov	w8, #0x1                   	// #1
  419524:	stur	w8, [x29, #-76]
  419528:	mov	x1, x21
  41952c:	mov	x2, x20
  419530:	stp	x20, x0, [x29, #-96]
  419534:	bl	402710 <memcpy@plt>
  419538:	ldp	x25, x8, [x21]
  41953c:	cmp	x25, x8
  419540:	stur	x25, [x29, #-8]
  419544:	b.le	419550 <_obstack_memory_used@@Base+0x82c4>
  419548:	mov	x0, xzr
  41954c:	b	419984 <_obstack_memory_used@@Base+0x86f8>
  419550:	add	x8, x21, #0x8
  419554:	stur	x8, [x29, #-104]
  419558:	stur	x24, [x29, #-72]
  41955c:	ldr	x8, [x24]
  419560:	add	x8, x8, x26, lsl #4
  419564:	ldr	w9, [x8, #8]
  419568:	and	w10, w9, #0xff
  41956c:	cmp	w10, #0x9
  419570:	b.eq	41959c <_obstack_memory_used@@Base+0x8310>  // b.none
  419574:	cmp	w10, #0x8
  419578:	b.ne	419600 <_obstack_memory_used@@Base+0x8374>  // b.any
  41957c:	ldr	x8, [x8]
  419580:	add	x8, x8, #0x1
  419584:	cmp	x8, x22
  419588:	b.ge	419600 <_obstack_memory_used@@Base+0x8374>  // b.tcont
  41958c:	add	x8, x21, x8, lsl #4
  419590:	mov	x9, #0xffffffffffffffff    	// #-1
  419594:	stp	x25, x9, [x8]
  419598:	b	419600 <_obstack_memory_used@@Base+0x8374>
  41959c:	ldr	x8, [x8]
  4195a0:	add	x8, x8, #0x1
  4195a4:	cmp	x8, x22
  4195a8:	b.ge	419600 <_obstack_memory_used@@Base+0x8374>  // b.tcont
  4195ac:	lsl	x10, x8, #4
  4195b0:	ldr	x11, [x21, x10]
  4195b4:	cmp	x11, x25
  4195b8:	b.ge	4195d0 <_obstack_memory_used@@Base+0x8344>  // b.tcont
  4195bc:	ldur	x0, [x29, #-88]
  4195c0:	add	x8, x21, x8, lsl #4
  4195c4:	str	x25, [x8, #8]
  4195c8:	mov	x1, x21
  4195cc:	b	4195ec <_obstack_memory_used@@Base+0x8360>
  4195d0:	tbz	w9, #19, 4195f8 <_obstack_memory_used@@Base+0x836c>
  4195d4:	ldur	x9, [x29, #-88]
  4195d8:	ldr	x9, [x9, x10]
  4195dc:	cmn	x9, #0x1
  4195e0:	b.eq	4195f8 <_obstack_memory_used@@Base+0x836c>  // b.none
  4195e4:	ldur	x1, [x29, #-88]
  4195e8:	mov	x0, x21
  4195ec:	ldur	x2, [x29, #-96]
  4195f0:	bl	402710 <memcpy@plt>
  4195f4:	b	419600 <_obstack_memory_used@@Base+0x8374>
  4195f8:	add	x8, x21, x8, lsl #4
  4195fc:	str	x25, [x8, #8]
  419600:	ldr	x8, [x21, #8]
  419604:	cmp	x25, x8
  419608:	b.ne	419668 <_obstack_memory_used@@Base+0x83dc>  // b.any
  41960c:	ldr	x8, [x23, #176]
  419610:	cmp	x26, x8
  419614:	b.ne	419668 <_obstack_memory_used@@Base+0x83dc>  // b.any
  419618:	cbz	x19, 4199c8 <_obstack_memory_used@@Base+0x873c>
  41961c:	ldur	x9, [x29, #-104]
  419620:	mov	x8, x22
  419624:	ldur	x10, [x9, #-8]
  419628:	tbnz	x10, #63, 419638 <_obstack_memory_used@@Base+0x83ac>
  41962c:	ldr	x10, [x9]
  419630:	cmn	x10, #0x1
  419634:	b.eq	419648 <_obstack_memory_used@@Base+0x83bc>  // b.none
  419638:	subs	x8, x8, #0x1
  41963c:	add	x9, x9, #0x10
  419640:	b.ne	419624 <_obstack_memory_used@@Base+0x8398>  // b.any
  419644:	b	419980 <_obstack_memory_used@@Base+0x86f4>
  419648:	cbz	x8, 419980 <_obstack_memory_used@@Base+0x86f4>
  41964c:	sub	x1, x29, #0x8
  419650:	sub	x4, x29, #0x20
  419654:	mov	x0, x19
  419658:	mov	x2, x22
  41965c:	mov	x3, x21
  419660:	bl	41c870 <_obstack_memory_used@@Base+0xb5e4>
  419664:	mov	x26, x0
  419668:	ldr	x28, [x23, #152]
  41966c:	ldr	x8, [x28]
  419670:	add	x9, x8, x26, lsl #4
  419674:	ldr	w9, [x9, #8]
  419678:	tbnz	w9, #3, 41971c <_obstack_memory_used@@Base+0x8490>
  41967c:	tbnz	w9, #20, 419798 <_obstack_memory_used@@Base+0x850c>
  419680:	and	w9, w9, #0xff
  419684:	cmp	w9, #0x4
  419688:	b.ne	4197bc <_obstack_memory_used@@Base+0x8530>  // b.any
  41968c:	lsl	x9, x26, #4
  419690:	ldr	x8, [x8, x9]
  419694:	add	x8, x8, #0x1
  419698:	cmp	x8, x22
  41969c:	b.ge	419838 <_obstack_memory_used@@Base+0x85ac>  // b.tcont
  4196a0:	add	x9, x21, x8, lsl #4
  4196a4:	ldp	x9, x10, [x9]
  4196a8:	sub	x25, x10, x9
  4196ac:	cbz	x19, 419840 <_obstack_memory_used@@Base+0x85b4>
  4196b0:	cmp	x8, x22
  4196b4:	b.ge	419950 <_obstack_memory_used@@Base+0x86c4>  // b.tcont
  4196b8:	lsl	x9, x8, #4
  4196bc:	ldr	x9, [x21, x9]
  4196c0:	cmn	x9, #0x1
  4196c4:	b.eq	419950 <_obstack_memory_used@@Base+0x86c4>  // b.none
  4196c8:	add	x8, x21, x8, lsl #4
  4196cc:	ldr	x8, [x8, #8]
  4196d0:	cmn	x8, #0x1
  4196d4:	b.eq	419950 <_obstack_memory_used@@Base+0x86c4>  // b.none
  4196d8:	cbz	x25, 4198a0 <_obstack_memory_used@@Base+0x8614>
  4196dc:	ldr	x8, [x23, #48]
  4196e0:	ldur	x20, [x29, #-8]
  4196e4:	sub	x8, x8, x20
  4196e8:	cmp	x8, x25
  4196ec:	b.lt	419950 <_obstack_memory_used@@Base+0x86c4>  // b.tstop
  4196f0:	ldr	x8, [x23, #8]
  4196f4:	mov	x2, x25
  4196f8:	add	x0, x8, x9
  4196fc:	add	x1, x8, x20
  419700:	bl	402a30 <bcmp@plt>
  419704:	cbnz	w0, 419950 <_obstack_memory_used@@Base+0x86c4>
  419708:	ldr	x8, [x28, #24]
  41970c:	add	x25, x20, x25
  419710:	ldr	x27, [x8, x26, lsl #3]
  419714:	stur	x25, [x29, #-8]
  419718:	b	4197f4 <_obstack_memory_used@@Base+0x8568>
  41971c:	ldr	x8, [x23, #184]
  419720:	ldur	x25, [x29, #-8]
  419724:	ldr	x24, [x28, #40]
  419728:	sub	x0, x29, #0x20
  41972c:	mov	x1, x26
  419730:	ldr	x27, [x8, x25, lsl #3]
  419734:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  419738:	tbz	w0, #0, 4199e4 <_obstack_memory_used@@Base+0x8758>
  41973c:	mov	w8, #0x18                  	// #24
  419740:	madd	x8, x26, x8, x24
  419744:	ldr	x20, [x8, #8]
  419748:	cmp	x20, #0x1
  41974c:	b.lt	419948 <_obstack_memory_used@@Base+0x86bc>  // b.tstop
  419750:	mov	w8, #0x18                  	// #24
  419754:	madd	x8, x26, x8, x24
  419758:	ldr	x24, [x8, #16]
  41975c:	add	x28, x27, #0x8
  419760:	mov	x27, #0xffffffffffffffff    	// #-1
  419764:	ldr	x26, [x24]
  419768:	mov	x0, x28
  41976c:	mov	x1, x26
  419770:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  419774:	cbz	x0, 419784 <_obstack_memory_used@@Base+0x84f8>
  419778:	cmn	x27, #0x1
  41977c:	b.ne	419820 <_obstack_memory_used@@Base+0x8594>  // b.any
  419780:	mov	x27, x26
  419784:	subs	x20, x20, #0x1
  419788:	add	x24, x24, #0x8
  41978c:	b.ne	419764 <_obstack_memory_used@@Base+0x84d8>  // b.any
  419790:	ldur	x24, [x29, #-72]
  419794:	b	41993c <_obstack_memory_used@@Base+0x86b0>
  419798:	ldur	x25, [x29, #-8]
  41979c:	mov	x0, x28
  4197a0:	mov	x1, x26
  4197a4:	mov	x2, x23
  4197a8:	mov	x3, x25
  4197ac:	bl	41b400 <_obstack_memory_used@@Base+0xa174>
  4197b0:	cbz	w0, 4197c0 <_obstack_memory_used@@Base+0x8534>
  4197b4:	sxtw	x8, w0
  4197b8:	b	4197e0 <_obstack_memory_used@@Base+0x8554>
  4197bc:	ldur	x25, [x29, #-8]
  4197c0:	ldr	x8, [x28]
  4197c4:	mov	x0, x23
  4197c8:	mov	x2, x25
  4197cc:	add	x1, x8, x26, lsl #4
  4197d0:	bl	41b6f8 <_obstack_memory_used@@Base+0xa46c>
  4197d4:	tbz	w0, #0, 419948 <_obstack_memory_used@@Base+0x86bc>
  4197d8:	ldur	x24, [x29, #-72]
  4197dc:	mov	w8, #0x1                   	// #1
  4197e0:	ldr	x9, [x28, #24]
  4197e4:	add	x25, x25, x8
  4197e8:	ldr	x27, [x9, x26, lsl #3]
  4197ec:	stur	x25, [x29, #-8]
  4197f0:	cbz	x19, 419858 <_obstack_memory_used@@Base+0x85cc>
  4197f4:	ldr	x8, [x23, #168]
  4197f8:	cmp	x25, x8
  4197fc:	b.gt	419950 <_obstack_memory_used@@Base+0x86c4>
  419800:	ldr	x8, [x23, #184]
  419804:	ldr	x8, [x8, x25, lsl #3]
  419808:	cbz	x8, 419950 <_obstack_memory_used@@Base+0x86c4>
  41980c:	add	x0, x8, #0x8
  419810:	mov	x1, x27
  419814:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  419818:	cbnz	x0, 419858 <_obstack_memory_used@@Base+0x85cc>
  41981c:	b	419950 <_obstack_memory_used@@Base+0x86c4>
  419820:	sub	x0, x29, #0x20
  419824:	mov	x1, x27
  419828:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41982c:	cbz	x0, 419860 <_obstack_memory_used@@Base+0x85d4>
  419830:	ldur	x24, [x29, #-72]
  419834:	b	419938 <_obstack_memory_used@@Base+0x86ac>
  419838:	mov	x25, xzr
  41983c:	cbnz	x19, 4196b0 <_obstack_memory_used@@Base+0x8424>
  419840:	cbz	x25, 4198a0 <_obstack_memory_used@@Base+0x8614>
  419844:	ldr	x8, [x28, #24]
  419848:	ldur	x9, [x29, #-8]
  41984c:	ldr	x27, [x8, x26, lsl #3]
  419850:	add	x25, x9, x25
  419854:	stur	x25, [x29, #-8]
  419858:	stur	xzr, [x29, #-24]
  41985c:	b	41993c <_obstack_memory_used@@Base+0x86b0>
  419860:	ldur	x24, [x29, #-72]
  419864:	cbz	x19, 41993c <_obstack_memory_used@@Base+0x86b0>
  419868:	ldp	x28, x9, [x19]
  41986c:	add	x8, x28, #0x1
  419870:	cmp	x8, x9
  419874:	str	x8, [x19]
  419878:	b.ne	4198e8 <_obstack_memory_used@@Base+0x865c>  // b.any
  41987c:	ldr	x0, [x19, #16]
  419880:	add	x8, x8, x8, lsl #1
  419884:	lsl	x1, x8, #5
  419888:	bl	402a50 <realloc@plt>
  41988c:	cbz	x0, 419934 <_obstack_memory_used@@Base+0x86a8>
  419890:	ldr	x8, [x19, #8]
  419894:	lsl	x8, x8, #1
  419898:	stp	x8, x0, [x19, #8]
  41989c:	b	4198ec <_obstack_memory_used@@Base+0x8660>
  4198a0:	sub	x0, x29, #0x20
  4198a4:	mov	x1, x26
  4198a8:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  4198ac:	tbz	w0, #0, 4199e4 <_obstack_memory_used@@Base+0x8758>
  4198b0:	ldr	x8, [x28, #40]
  4198b4:	mov	w10, #0x18                  	// #24
  4198b8:	ldr	x9, [x23, #184]
  4198bc:	ldur	x25, [x29, #-8]
  4198c0:	madd	x8, x26, x10, x8
  4198c4:	ldr	x8, [x8, #16]
  4198c8:	ldr	x9, [x9, x25, lsl #3]
  4198cc:	ldr	x27, [x8]
  4198d0:	add	x0, x9, #0x8
  4198d4:	mov	x1, x27
  4198d8:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  4198dc:	ldur	x24, [x29, #-72]
  4198e0:	cbnz	x0, 41993c <_obstack_memory_used@@Base+0x86b0>
  4198e4:	b	4197c0 <_obstack_memory_used@@Base+0x8534>
  4198e8:	ldr	x0, [x19, #16]
  4198ec:	mov	w8, #0x30                  	// #48
  4198f0:	madd	x20, x28, x8, x0
  4198f4:	stp	x25, x26, [x20]
  4198f8:	ldur	x26, [x29, #-96]
  4198fc:	mov	x0, x26
  419900:	bl	4028f0 <malloc@plt>
  419904:	str	x0, [x20, #16]
  419908:	cbz	x0, 419934 <_obstack_memory_used@@Base+0x86a8>
  41990c:	mov	x1, x21
  419910:	mov	x2, x26
  419914:	bl	402710 <memcpy@plt>
  419918:	ldr	x8, [x19, #16]
  41991c:	mov	w9, #0x30                  	// #48
  419920:	sub	x1, x29, #0x20
  419924:	madd	x8, x28, x9, x8
  419928:	add	x0, x8, #0x18
  41992c:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  419930:	cbz	w0, 41993c <_obstack_memory_used@@Base+0x86b0>
  419934:	mov	x26, #0xfffffffffffffffe    	// #-2
  419938:	mov	x27, x26
  41993c:	tbz	x27, #63, 419970 <_obstack_memory_used@@Base+0x86e4>
  419940:	cmn	x27, #0x2
  419944:	b.eq	4199e4 <_obstack_memory_used@@Base+0x8758>  // b.none
  419948:	ldur	x24, [x29, #-72]
  41994c:	cbz	x19, 4199a8 <_obstack_memory_used@@Base+0x871c>
  419950:	sub	x1, x29, #0x8
  419954:	sub	x4, x29, #0x20
  419958:	mov	x0, x19
  41995c:	mov	x2, x22
  419960:	mov	x3, x21
  419964:	bl	41c870 <_obstack_memory_used@@Base+0xb5e4>
  419968:	ldur	x25, [x29, #-8]
  41996c:	mov	x27, x0
  419970:	ldr	x8, [x21, #8]
  419974:	mov	x26, x27
  419978:	cmp	x25, x8
  41997c:	b.le	41955c <_obstack_memory_used@@Base+0x82d0>
  419980:	ldur	x0, [x29, #-16]
  419984:	bl	402be0 <free@plt>
  419988:	ldur	w8, [x29, #-76]
  41998c:	cbz	w8, 419998 <_obstack_memory_used@@Base+0x870c>
  419990:	ldur	x0, [x29, #-88]
  419994:	bl	402be0 <free@plt>
  419998:	mov	x0, x19
  41999c:	bl	41c7f8 <_obstack_memory_used@@Base+0xb56c>
  4199a0:	mov	w0, wzr
  4199a4:	b	419a08 <_obstack_memory_used@@Base+0x877c>
  4199a8:	ldur	x0, [x29, #-16]
  4199ac:	bl	402be0 <free@plt>
  4199b0:	ldur	w8, [x29, #-76]
  4199b4:	cbz	w8, 4199c0 <_obstack_memory_used@@Base+0x8734>
  4199b8:	ldur	x0, [x29, #-88]
  4199bc:	bl	402be0 <free@plt>
  4199c0:	mov	w0, #0x1                   	// #1
  4199c4:	b	419a08 <_obstack_memory_used@@Base+0x877c>
  4199c8:	ldur	x0, [x29, #-16]
  4199cc:	bl	402be0 <free@plt>
  4199d0:	ldur	w8, [x29, #-76]
  4199d4:	cbz	w8, 4199a0 <_obstack_memory_used@@Base+0x8714>
  4199d8:	ldur	x0, [x29, #-88]
  4199dc:	bl	402be0 <free@plt>
  4199e0:	b	4199a0 <_obstack_memory_used@@Base+0x8714>
  4199e4:	ldur	x0, [x29, #-16]
  4199e8:	bl	402be0 <free@plt>
  4199ec:	ldur	w8, [x29, #-76]
  4199f0:	cbz	w8, 4199fc <_obstack_memory_used@@Base+0x8770>
  4199f4:	ldur	x0, [x29, #-88]
  4199f8:	bl	402be0 <free@plt>
  4199fc:	mov	x0, x19
  419a00:	bl	41c7f8 <_obstack_memory_used@@Base+0xb56c>
  419a04:	mov	w0, #0xc                   	// #12
  419a08:	mov	sp, x29
  419a0c:	ldp	x20, x19, [sp, #80]
  419a10:	ldp	x22, x21, [sp, #64]
  419a14:	ldp	x24, x23, [sp, #48]
  419a18:	ldp	x26, x25, [sp, #32]
  419a1c:	ldp	x28, x27, [sp, #16]
  419a20:	ldp	x29, x30, [sp], #96
  419a24:	ret
  419a28:	sub	sp, sp, #0x20
  419a2c:	stp	x29, x30, [sp, #16]
  419a30:	add	x29, sp, #0x10
  419a34:	tbnz	x1, #63, 419a6c <_obstack_memory_used@@Base+0x87e0>
  419a38:	ldr	x8, [x0, #88]
  419a3c:	cmp	x8, x1
  419a40:	b.eq	419adc <_obstack_memory_used@@Base+0x8850>  // b.none
  419a44:	ldr	w8, [x0, #144]
  419a48:	cmp	w8, #0x2
  419a4c:	b.lt	419a74 <_obstack_memory_used@@Base+0x87e8>  // b.tstop
  419a50:	ldr	x8, [x0, #16]
  419a54:	ldr	w9, [x8, x1, lsl #2]
  419a58:	cmn	w9, #0x1
  419a5c:	b.ne	419a9c <_obstack_memory_used@@Base+0x8810>  // b.any
  419a60:	sub	x1, x1, #0x1
  419a64:	cmn	x1, #0x1
  419a68:	b.ne	419a54 <_obstack_memory_used@@Base+0x87c8>  // b.any
  419a6c:	ldr	w8, [x0, #112]
  419a70:	b	419acc <_obstack_memory_used@@Base+0x8840>
  419a74:	ldr	x8, [x0, #8]
  419a78:	ldr	x9, [x0, #128]
  419a7c:	ldrb	w8, [x8, x1]
  419a80:	lsr	x10, x8, #3
  419a84:	and	x10, x10, #0x18
  419a88:	ldr	x9, [x9, x10]
  419a8c:	lsr	x9, x9, x8
  419a90:	tbz	w9, #0, 419ac0 <_obstack_memory_used@@Base+0x8834>
  419a94:	mov	w8, #0x1                   	// #1
  419a98:	b	419acc <_obstack_memory_used@@Base+0x8840>
  419a9c:	ldrb	w8, [x0, #142]
  419aa0:	cbnz	w8, 419aec <_obstack_memory_used@@Base+0x8860>
  419aa4:	cmp	w9, #0xa
  419aa8:	b.ne	419ac8 <_obstack_memory_used@@Base+0x883c>  // b.any
  419aac:	ldrb	w8, [x0, #141]
  419ab0:	cmp	w8, #0x0
  419ab4:	cset	w8, ne  // ne = any
  419ab8:	lsl	w8, w8, #1
  419abc:	b	419acc <_obstack_memory_used@@Base+0x8840>
  419ac0:	cmp	w8, #0xa
  419ac4:	b.eq	419aac <_obstack_memory_used@@Base+0x8820>  // b.none
  419ac8:	mov	w8, wzr
  419acc:	ldp	x29, x30, [sp, #16]
  419ad0:	mov	w0, w8
  419ad4:	add	sp, sp, #0x20
  419ad8:	ret
  419adc:	and	w8, w2, #0x2
  419ae0:	mov	w9, #0xa                   	// #10
  419ae4:	eor	w8, w8, w9
  419ae8:	b	419acc <_obstack_memory_used@@Base+0x8840>
  419aec:	str	x0, [sp]
  419af0:	mov	w0, w9
  419af4:	stur	w9, [x29, #-4]
  419af8:	bl	402ce0 <iswalnum@plt>
  419afc:	ldur	w9, [x29, #-4]
  419b00:	mov	w8, #0x1                   	// #1
  419b04:	cmp	w9, #0x5f
  419b08:	b.eq	419acc <_obstack_memory_used@@Base+0x8840>  // b.none
  419b0c:	mov	w10, w0
  419b10:	ldr	x0, [sp]
  419b14:	cbz	w10, 419aa4 <_obstack_memory_used@@Base+0x8818>
  419b18:	b	419acc <_obstack_memory_used@@Base+0x8840>
  419b1c:	stp	x29, x30, [sp, #-80]!
  419b20:	stp	x26, x25, [sp, #16]
  419b24:	stp	x24, x23, [sp, #32]
  419b28:	stp	x22, x21, [sp, #48]
  419b2c:	stp	x20, x19, [sp, #64]
  419b30:	ldr	x8, [x1, #8]
  419b34:	mov	x29, sp
  419b38:	cmp	x8, #0x1
  419b3c:	b.lt	419c00 <_obstack_memory_used@@Base+0x8974>  // b.tstop
  419b40:	ldr	x23, [x0, #152]
  419b44:	mov	x19, x2
  419b48:	mov	x20, x1
  419b4c:	mov	x21, x0
  419b50:	mov	x24, xzr
  419b54:	ldr	x9, [x20, #16]
  419b58:	ldr	x25, [x9, x24, lsl #3]
  419b5c:	ldr	x9, [x23]
  419b60:	add	x10, x9, x25, lsl #4
  419b64:	ldrb	w10, [x10, #8]
  419b68:	cmp	w10, #0x8
  419b6c:	b.ne	419bd0 <_obstack_memory_used@@Base+0x8944>  // b.any
  419b70:	lsl	x10, x25, #4
  419b74:	ldr	x9, [x9, x10]
  419b78:	cmp	x9, #0x3f
  419b7c:	b.gt	419bd0 <_obstack_memory_used@@Base+0x8944>
  419b80:	ldr	x10, [x23, #160]
  419b84:	lsr	x9, x10, x9
  419b88:	tbz	w9, #0, 419bd0 <_obstack_memory_used@@Base+0x8944>
  419b8c:	ldp	x8, x26, [x21, #232]
  419b90:	ldr	x22, [x21, #248]
  419b94:	cmp	x8, x26
  419b98:	b.eq	419be0 <_obstack_memory_used@@Base+0x8954>  // b.none
  419b9c:	mov	w0, #0x1                   	// #1
  419ba0:	mov	w1, #0x30                  	// #48
  419ba4:	bl	402a20 <calloc@plt>
  419ba8:	ldr	x8, [x21, #232]
  419bac:	str	x0, [x22, x8, lsl #3]
  419bb0:	ldr	x9, [x21, #248]
  419bb4:	ldr	x9, [x9, x8, lsl #3]
  419bb8:	cbz	x9, 419c1c <_obstack_memory_used@@Base+0x8990>
  419bbc:	add	x8, x8, #0x1
  419bc0:	str	x25, [x9, #8]
  419bc4:	str	x8, [x21, #232]
  419bc8:	str	x19, [x9]
  419bcc:	ldr	x8, [x20, #8]
  419bd0:	add	x24, x24, #0x1
  419bd4:	cmp	x24, x8
  419bd8:	b.lt	419b54 <_obstack_memory_used@@Base+0x88c8>  // b.tstop
  419bdc:	b	419c00 <_obstack_memory_used@@Base+0x8974>
  419be0:	lsl	x1, x26, #4
  419be4:	mov	x0, x22
  419be8:	bl	402a50 <realloc@plt>
  419bec:	cbz	x0, 419c1c <_obstack_memory_used@@Base+0x8990>
  419bf0:	mov	x22, x0
  419bf4:	lsl	x8, x26, #1
  419bf8:	stp	x8, x0, [x21, #240]
  419bfc:	b	419b9c <_obstack_memory_used@@Base+0x8910>
  419c00:	mov	w0, wzr
  419c04:	ldp	x20, x19, [sp, #64]
  419c08:	ldp	x22, x21, [sp, #48]
  419c0c:	ldp	x24, x23, [sp, #32]
  419c10:	ldp	x26, x25, [sp, #16]
  419c14:	ldp	x29, x30, [sp], #80
  419c18:	ret
  419c1c:	mov	w0, #0xc                   	// #12
  419c20:	b	419c04 <_obstack_memory_used@@Base+0x8978>
  419c24:	sub	sp, sp, #0xd0
  419c28:	stp	x29, x30, [sp, #112]
  419c2c:	stp	x28, x27, [sp, #128]
  419c30:	stp	x26, x25, [sp, #144]
  419c34:	stp	x24, x23, [sp, #160]
  419c38:	stp	x22, x21, [sp, #176]
  419c3c:	stp	x20, x19, [sp, #192]
  419c40:	ldr	x8, [x1, #8]
  419c44:	add	x29, sp, #0x70
  419c48:	cmp	x8, #0x1
  419c4c:	b.lt	41a1d4 <_obstack_memory_used@@Base+0x8f48>  // b.tstop
  419c50:	ldr	x28, [x0, #152]
  419c54:	ldr	x8, [x0, #72]
  419c58:	mov	x20, x0
  419c5c:	mov	x9, xzr
  419c60:	stp	x1, x28, [sp, #8]
  419c64:	stur	x8, [x29, #-40]
  419c68:	ldr	x8, [x1, #16]
  419c6c:	str	x9, [sp, #32]
  419c70:	ldr	x9, [x8, x9, lsl #3]
  419c74:	ldr	x8, [x28]
  419c78:	stur	x9, [x29, #-48]
  419c7c:	add	x8, x8, x9, lsl #4
  419c80:	ldr	w19, [x8, #8]
  419c84:	and	w8, w19, #0xff
  419c88:	cmp	w8, #0x4
  419c8c:	b.ne	41a1bc <_obstack_memory_used@@Base+0x8f30>  // b.any
  419c90:	tst	w19, #0x3ff00
  419c94:	b.eq	419ccc <_obstack_memory_used@@Base+0x8a40>  // b.none
  419c98:	ldr	w2, [x20, #160]
  419c9c:	ldur	x1, [x29, #-40]
  419ca0:	mov	x0, x20
  419ca4:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  419ca8:	and	w8, w0, #0x1
  419cac:	tbz	w19, #10, 419cb4 <_obstack_memory_used@@Base+0x8a28>
  419cb0:	cbz	w8, 41a1bc <_obstack_memory_used@@Base+0x8f30>
  419cb4:	tbz	w19, #11, 419cbc <_obstack_memory_used@@Base+0x8a30>
  419cb8:	cbnz	w8, 41a1bc <_obstack_memory_used@@Base+0x8f30>
  419cbc:	tbz	w19, #13, 419cc4 <_obstack_memory_used@@Base+0x8a38>
  419cc0:	tbz	w0, #1, 41a1bc <_obstack_memory_used@@Base+0x8f30>
  419cc4:	tbz	w19, #15, 419ccc <_obstack_memory_used@@Base+0x8a40>
  419cc8:	tbz	w0, #3, 41a1bc <_obstack_memory_used@@Base+0x8f30>
  419ccc:	ldur	x1, [x29, #-40]
  419cd0:	ldr	x21, [x20, #200]
  419cd4:	ldr	x23, [x20, #152]
  419cd8:	ldr	x19, [x20, #8]
  419cdc:	mov	x0, x20
  419ce0:	bl	41a5f0 <_obstack_memory_used@@Base+0x9364>
  419ce4:	cmn	x0, #0x1
  419ce8:	b.eq	419d14 <_obstack_memory_used@@Base+0x8a88>  // b.none
  419cec:	ldr	x8, [x20, #216]
  419cf0:	mov	w9, #0x28                  	// #40
  419cf4:	madd	x8, x0, x9, x8
  419cf8:	ldr	x9, [x8]
  419cfc:	ldur	x10, [x29, #-48]
  419d00:	cmp	x9, x10
  419d04:	b.eq	41a028 <_obstack_memory_used@@Base+0x8d9c>  // b.none
  419d08:	ldrb	w9, [x8, #32]
  419d0c:	add	x8, x8, #0x28
  419d10:	cbnz	w9, 419cf8 <_obstack_memory_used@@Base+0x8a6c>
  419d14:	ldr	x8, [x20, #232]
  419d18:	cmp	x8, #0x1
  419d1c:	mov	x8, x21
  419d20:	b.lt	41a02c <_obstack_memory_used@@Base+0x8da0>  // b.tstop
  419d24:	ldur	x9, [x29, #-48]
  419d28:	ldr	x8, [x23]
  419d2c:	mov	x13, xzr
  419d30:	str	x23, [sp, #24]
  419d34:	lsl	x9, x9, #4
  419d38:	ldr	x12, [x8, x9]
  419d3c:	stp	x12, x21, [sp, #40]
  419d40:	ldr	x9, [x20, #248]
  419d44:	ldr	x24, [x9, x13, lsl #3]
  419d48:	ldr	x9, [x24, #8]
  419d4c:	lsl	x9, x9, #4
  419d50:	ldr	x8, [x8, x9]
  419d54:	cmp	x8, x12
  419d58:	b.ne	419e64 <_obstack_memory_used@@Base+0x8bd8>  // b.any
  419d5c:	ldr	x8, [x24, #32]
  419d60:	ldr	x28, [x24]
  419d64:	str	x13, [sp, #56]
  419d68:	cmp	x8, #0x1
  419d6c:	b.lt	419e14 <_obstack_memory_used@@Base+0x8b88>  // b.tstop
  419d70:	ldur	x22, [x29, #-40]
  419d74:	mov	x23, xzr
  419d78:	mov	x21, x28
  419d7c:	ldr	x9, [x24, #40]
  419d80:	ldr	x26, [x9, x23, lsl #3]
  419d84:	ldr	x28, [x26, #8]
  419d88:	sub	x25, x28, x21
  419d8c:	cmp	x25, #0x1
  419d90:	b.lt	419db8 <_obstack_memory_used@@Base+0x8b2c>  // b.tstop
  419d94:	ldr	x9, [x20, #48]
  419d98:	add	x1, x25, x22
  419d9c:	cmp	x1, x9
  419da0:	b.gt	419df4 <_obstack_memory_used@@Base+0x8b68>
  419da4:	add	x0, x19, x22
  419da8:	add	x1, x19, x21
  419dac:	mov	x2, x25
  419db0:	bl	402a30 <bcmp@plt>
  419db4:	cbnz	w0, 419e20 <_obstack_memory_used@@Base+0x8b94>
  419db8:	ldp	x3, x4, [x29, #-48]
  419dbc:	mov	x0, x20
  419dc0:	mov	x1, x24
  419dc4:	mov	x2, x26
  419dc8:	bl	41a70c <_obstack_memory_used@@Base+0x9480>
  419dcc:	cmp	w0, #0x1
  419dd0:	b.hi	41a208 <_obstack_memory_used@@Base+0x8f7c>  // b.pmore
  419dd4:	ldr	x8, [x24, #32]
  419dd8:	ldr	x19, [x20, #8]
  419ddc:	add	x23, x23, #0x1
  419de0:	add	x22, x25, x22
  419de4:	cmp	x23, x8
  419de8:	mov	x21, x28
  419dec:	b.lt	419d7c <_obstack_memory_used@@Base+0x8af0>  // b.tstop
  419df0:	b	419e28 <_obstack_memory_used@@Base+0x8b9c>
  419df4:	ldr	x9, [x20, #88]
  419df8:	cmp	x1, x9
  419dfc:	b.gt	419e24 <_obstack_memory_used@@Base+0x8b98>
  419e00:	mov	x0, x20
  419e04:	bl	41a66c <_obstack_memory_used@@Base+0x93e0>
  419e08:	cbnz	w0, 41a208 <_obstack_memory_used@@Base+0x8f7c>
  419e0c:	ldr	x19, [x20, #8]
  419e10:	b	419da4 <_obstack_memory_used@@Base+0x8b18>
  419e14:	ldur	x22, [x29, #-40]
  419e18:	mov	x23, xzr
  419e1c:	b	419e28 <_obstack_memory_used@@Base+0x8b9c>
  419e20:	ldr	x8, [x24, #32]
  419e24:	mov	x28, x21
  419e28:	ldr	x21, [sp, #48]
  419e2c:	cmp	x23, x8
  419e30:	b.ge	419e44 <_obstack_memory_used@@Base+0x8bb8>  // b.tcont
  419e34:	ldp	x28, x23, [sp, #16]
  419e38:	ldr	x12, [sp, #40]
  419e3c:	ldr	x13, [sp, #56]
  419e40:	b	419e64 <_obstack_memory_used@@Base+0x8bd8>
  419e44:	ldur	x8, [x29, #-40]
  419e48:	ldr	x12, [sp, #40]
  419e4c:	ldr	x13, [sp, #56]
  419e50:	cmp	x23, #0x0
  419e54:	cinc	x25, x28, ne  // ne = any
  419e58:	cmp	x25, x8
  419e5c:	b.le	419e7c <_obstack_memory_used@@Base+0x8bf0>
  419e60:	ldp	x28, x23, [sp, #16]
  419e64:	ldr	x8, [x20, #232]
  419e68:	add	x13, x13, #0x1
  419e6c:	cmp	x13, x8
  419e70:	b.ge	41a020 <_obstack_memory_used@@Base+0x8d94>  // b.tcont
  419e74:	ldr	x8, [x23]
  419e78:	b	419d40 <_obstack_memory_used@@Base+0x8ab4>
  419e7c:	ldp	x28, x23, [sp, #16]
  419e80:	ldr	x8, [x24]
  419e84:	cmp	x25, x8
  419e88:	b.le	419eb0 <_obstack_memory_used@@Base+0x8c24>
  419e8c:	ldr	x8, [x20, #48]
  419e90:	cmp	x22, x8
  419e94:	b.ge	419fd0 <_obstack_memory_used@@Base+0x8d44>  // b.tcont
  419e98:	add	x9, x25, x19
  419e9c:	ldrb	w8, [x19, x22]
  419ea0:	ldurb	w9, [x9, #-1]
  419ea4:	cmp	w8, w9
  419ea8:	b.ne	419e64 <_obstack_memory_used@@Base+0x8bd8>  // b.any
  419eac:	add	x22, x22, #0x1
  419eb0:	ldr	x8, [x20, #184]
  419eb4:	ldr	x9, [x8, x25, lsl #3]
  419eb8:	cbz	x9, 419f00 <_obstack_memory_used@@Base+0x8c74>
  419ebc:	ldr	x8, [x9, #16]
  419ec0:	cmp	x8, #0x1
  419ec4:	b.lt	419f00 <_obstack_memory_used@@Base+0x8c74>  // b.tstop
  419ec8:	ldr	x9, [x9, #24]
  419ecc:	ldr	x10, [x23]
  419ed0:	ldr	x26, [x9]
  419ed4:	add	x11, x10, x26, lsl #4
  419ed8:	ldrb	w11, [x11, #8]
  419edc:	cmp	w11, #0x9
  419ee0:	b.ne	419ef4 <_obstack_memory_used@@Base+0x8c68>  // b.any
  419ee4:	lsl	x11, x26, #4
  419ee8:	ldr	x11, [x10, x11]
  419eec:	cmp	x11, x12
  419ef0:	b.eq	419f14 <_obstack_memory_used@@Base+0x8c88>  // b.none
  419ef4:	subs	x8, x8, #0x1
  419ef8:	add	x9, x9, #0x8
  419efc:	b.ne	419ed0 <_obstack_memory_used@@Base+0x8c44>  // b.any
  419f00:	ldur	x8, [x29, #-40]
  419f04:	cmp	x25, x8
  419f08:	add	x25, x25, #0x1
  419f0c:	b.lt	419e80 <_obstack_memory_used@@Base+0x8bf4>  // b.tstop
  419f10:	b	419e64 <_obstack_memory_used@@Base+0x8bd8>
  419f14:	cmn	x26, #0x1
  419f18:	b.eq	419f00 <_obstack_memory_used@@Base+0x8c74>  // b.none
  419f1c:	ldr	x1, [x24, #16]
  419f20:	cbnz	x1, 419f44 <_obstack_memory_used@@Base+0x8cb8>
  419f24:	ldr	x8, [x24]
  419f28:	mov	w0, #0x18                  	// #24
  419f2c:	sub	x8, x25, x8
  419f30:	add	x1, x8, #0x1
  419f34:	bl	402a20 <calloc@plt>
  419f38:	mov	x1, x0
  419f3c:	str	x0, [x24, #16]
  419f40:	cbz	x0, 41a200 <_obstack_memory_used@@Base+0x8f74>
  419f44:	ldp	x3, x2, [x24]
  419f48:	mov	w6, #0x9                   	// #9
  419f4c:	mov	x0, x20
  419f50:	mov	x4, x26
  419f54:	mov	x5, x25
  419f58:	bl	41a868 <_obstack_memory_used@@Base+0x95dc>
  419f5c:	ldr	x12, [sp, #40]
  419f60:	ldr	x13, [sp, #56]
  419f64:	cmp	w0, #0x1
  419f68:	b.eq	419f00 <_obstack_memory_used@@Base+0x8c74>  // b.none
  419f6c:	mov	w27, w0
  419f70:	cbnz	w0, 41a20c <_obstack_memory_used@@Base+0x8f80>
  419f74:	ldp	x9, x8, [x24, #24]
  419f78:	cmp	x8, x9
  419f7c:	b.eq	419ffc <_obstack_memory_used@@Base+0x8d70>  // b.none
  419f80:	mov	w0, #0x1                   	// #1
  419f84:	mov	w1, #0x28                  	// #40
  419f88:	bl	402a20 <calloc@plt>
  419f8c:	cbz	x0, 41a200 <_obstack_memory_used@@Base+0x8f74>
  419f90:	ldp	x9, x8, [x24, #32]
  419f94:	mov	x2, x0
  419f98:	mov	x1, x24
  419f9c:	str	x0, [x8, x9, lsl #3]
  419fa0:	add	x8, x9, #0x1
  419fa4:	stp	x26, x25, [x0]
  419fa8:	str	x8, [x24, #32]
  419fac:	ldp	x3, x4, [x29, #-48]
  419fb0:	mov	x0, x20
  419fb4:	bl	41a70c <_obstack_memory_used@@Base+0x9480>
  419fb8:	cmp	w0, #0x1
  419fbc:	b.hi	41a208 <_obstack_memory_used@@Base+0x8f7c>  // b.pmore
  419fc0:	ldr	x19, [x20, #8]
  419fc4:	ldr	x12, [sp, #40]
  419fc8:	ldr	x13, [sp, #56]
  419fcc:	b	419f00 <_obstack_memory_used@@Base+0x8c74>
  419fd0:	ldr	x8, [x20, #88]
  419fd4:	cmp	x22, x8
  419fd8:	b.ge	419e64 <_obstack_memory_used@@Base+0x8bd8>  // b.tcont
  419fdc:	add	w1, w22, #0x1
  419fe0:	mov	x0, x20
  419fe4:	bl	41a22c <_obstack_memory_used@@Base+0x8fa0>
  419fe8:	cbnz	w0, 41a208 <_obstack_memory_used@@Base+0x8f7c>
  419fec:	ldr	x19, [x20, #8]
  419ff0:	ldr	x12, [sp, #40]
  419ff4:	ldr	x13, [sp, #56]
  419ff8:	b	419e98 <_obstack_memory_used@@Base+0x8c0c>
  419ffc:	ldr	x0, [x24, #40]
  41a000:	mov	w19, #0x1                   	// #1
  41a004:	bfi	x19, x8, #1, #63
  41a008:	lsl	x1, x19, #3
  41a00c:	bl	402a50 <realloc@plt>
  41a010:	cbz	x0, 41a200 <_obstack_memory_used@@Base+0x8f74>
  41a014:	str	x0, [x24, #40]
  41a018:	str	x19, [x24, #24]
  41a01c:	b	419f80 <_obstack_memory_used@@Base+0x8cf4>
  41a020:	ldr	x8, [x20, #200]
  41a024:	b	41a02c <_obstack_memory_used@@Base+0x8da0>
  41a028:	mov	x8, x21
  41a02c:	cmp	x21, x8
  41a030:	stur	wzr, [x29, #-4]
  41a034:	b.ge	41a1bc <_obstack_memory_used@@Base+0x8f30>  // b.tcont
  41a038:	add	x8, x21, x21, lsl #2
  41a03c:	lsl	x19, x8, #3
  41a040:	ldr	x8, [x20, #216]
  41a044:	ldur	x10, [x29, #-48]
  41a048:	ldr	x9, [x8, x19]
  41a04c:	cmp	x9, x10
  41a050:	b.ne	41a1a8 <_obstack_memory_used@@Base+0x8f1c>  // b.any
  41a054:	add	x8, x8, x19
  41a058:	ldr	x9, [x8, #8]
  41a05c:	ldur	x10, [x29, #-40]
  41a060:	cmp	x9, x10
  41a064:	b.ne	41a1a8 <_obstack_memory_used@@Base+0x8f1c>  // b.any
  41a068:	str	x21, [sp, #48]
  41a06c:	ldp	x22, x21, [x8, #16]
  41a070:	ldr	x8, [x28, #48]
  41a074:	cmp	x21, x22
  41a078:	b.ne	41a094 <_obstack_memory_used@@Base+0x8e08>  // b.any
  41a07c:	ldr	x9, [x28, #40]
  41a080:	ldur	x10, [x29, #-48]
  41a084:	mov	w11, #0x18                  	// #24
  41a088:	madd	x9, x10, x11, x9
  41a08c:	ldr	x9, [x9, #16]
  41a090:	b	41a0a4 <_obstack_memory_used@@Base+0x8e18>
  41a094:	ldr	x9, [x28, #24]
  41a098:	ldur	x10, [x29, #-48]
  41a09c:	mov	w11, #0x18                  	// #24
  41a0a0:	add	x9, x9, x10, lsl #3
  41a0a4:	ldur	x23, [x29, #-40]
  41a0a8:	ldr	x9, [x9]
  41a0ac:	ldr	w2, [x20, #160]
  41a0b0:	mov	x0, x20
  41a0b4:	add	x10, x21, x23
  41a0b8:	sub	x26, x10, x22
  41a0bc:	sub	x1, x26, #0x1
  41a0c0:	madd	x24, x9, x11, x8
  41a0c4:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41a0c8:	ldr	x8, [x20, #184]
  41a0cc:	mov	w25, w0
  41a0d0:	ldr	x9, [x8, x23, lsl #3]
  41a0d4:	ldr	x8, [x8, x26, lsl #3]
  41a0d8:	cbz	x9, 41a124 <_obstack_memory_used@@Base+0x8e98>
  41a0dc:	ldr	x23, [x9, #16]
  41a0e0:	cbz	x8, 41a12c <_obstack_memory_used@@Base+0x8ea0>
  41a0e4:	ldr	x1, [x8, #80]
  41a0e8:	sub	x0, x29, #0x20
  41a0ec:	mov	x2, x24
  41a0f0:	bl	41a43c <_obstack_memory_used@@Base+0x91b0>
  41a0f4:	stur	w0, [x29, #-4]
  41a0f8:	cbnz	w0, 41a214 <_obstack_memory_used@@Base+0x8f88>
  41a0fc:	sub	x0, x29, #0x4
  41a100:	sub	x2, x29, #0x20
  41a104:	mov	x1, x28
  41a108:	mov	w3, w25
  41a10c:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41a110:	ldr	x8, [x20, #184]
  41a114:	str	x0, [x8, x26, lsl #3]
  41a118:	ldur	x0, [x29, #-16]
  41a11c:	bl	402be0 <free@plt>
  41a120:	b	41a148 <_obstack_memory_used@@Base+0x8ebc>
  41a124:	mov	x23, xzr
  41a128:	cbnz	x8, 41a0e4 <_obstack_memory_used@@Base+0x8e58>
  41a12c:	sub	x0, x29, #0x4
  41a130:	mov	x1, x28
  41a134:	mov	x2, x24
  41a138:	mov	w3, w25
  41a13c:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41a140:	ldr	x8, [x20, #184]
  41a144:	str	x0, [x8, x26, lsl #3]
  41a148:	ldr	x8, [x20, #184]
  41a14c:	ldr	x9, [x8, x26, lsl #3]
  41a150:	cbnz	x9, 41a15c <_obstack_memory_used@@Base+0x8ed0>
  41a154:	ldur	w27, [x29, #-4]
  41a158:	cbnz	w27, 41a1dc <_obstack_memory_used@@Base+0x8f50>
  41a15c:	cmp	x21, x22
  41a160:	ldr	x21, [sp, #48]
  41a164:	b.ne	41a1a8 <_obstack_memory_used@@Base+0x8f1c>  // b.any
  41a168:	ldur	x9, [x29, #-40]
  41a16c:	ldr	x8, [x8, x9, lsl #3]
  41a170:	ldr	x8, [x8, #16]
  41a174:	cmp	x8, x23
  41a178:	b.le	41a1a8 <_obstack_memory_used@@Base+0x8f1c>
  41a17c:	ldur	x2, [x29, #-40]
  41a180:	mov	x0, x20
  41a184:	mov	x1, x24
  41a188:	bl	419b1c <_obstack_memory_used@@Base+0x8890>
  41a18c:	stur	w0, [x29, #-4]
  41a190:	cbnz	w0, 41a224 <_obstack_memory_used@@Base+0x8f98>
  41a194:	mov	x0, x20
  41a198:	mov	x1, x24
  41a19c:	bl	419c24 <_obstack_memory_used@@Base+0x8998>
  41a1a0:	stur	w0, [x29, #-4]
  41a1a4:	cbnz	w0, 41a224 <_obstack_memory_used@@Base+0x8f98>
  41a1a8:	ldr	x8, [x20, #200]
  41a1ac:	add	x21, x21, #0x1
  41a1b0:	add	x19, x19, #0x28
  41a1b4:	cmp	x21, x8
  41a1b8:	b.lt	41a040 <_obstack_memory_used@@Base+0x8db4>  // b.tstop
  41a1bc:	ldr	x1, [sp, #8]
  41a1c0:	ldr	x9, [sp, #32]
  41a1c4:	ldr	x8, [x1, #8]
  41a1c8:	add	x9, x9, #0x1
  41a1cc:	cmp	x9, x8
  41a1d0:	b.lt	419c68 <_obstack_memory_used@@Base+0x89dc>  // b.tstop
  41a1d4:	mov	w27, wzr
  41a1d8:	stur	wzr, [x29, #-4]
  41a1dc:	mov	w0, w27
  41a1e0:	ldp	x20, x19, [sp, #192]
  41a1e4:	ldp	x22, x21, [sp, #176]
  41a1e8:	ldp	x24, x23, [sp, #160]
  41a1ec:	ldp	x26, x25, [sp, #144]
  41a1f0:	ldp	x28, x27, [sp, #128]
  41a1f4:	ldp	x29, x30, [sp, #112]
  41a1f8:	add	sp, sp, #0xd0
  41a1fc:	ret
  41a200:	mov	w27, #0xc                   	// #12
  41a204:	b	41a20c <_obstack_memory_used@@Base+0x8f80>
  41a208:	mov	w27, w0
  41a20c:	stur	w27, [x29, #-4]
  41a210:	b	41a1dc <_obstack_memory_used@@Base+0x8f50>
  41a214:	mov	w27, w0
  41a218:	ldur	x0, [x29, #-16]
  41a21c:	bl	402be0 <free@plt>
  41a220:	b	41a1dc <_obstack_memory_used@@Base+0x8f50>
  41a224:	mov	w27, w0
  41a228:	b	41a1dc <_obstack_memory_used@@Base+0x8f50>
  41a22c:	stp	x29, x30, [sp, #-32]!
  41a230:	ldr	x8, [x0, #64]
  41a234:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  41a238:	str	x19, [sp, #16]
  41a23c:	mov	x29, sp
  41a240:	cmp	x8, x9
  41a244:	b.hi	41a2ec <_obstack_memory_used@@Base+0x9060>  // b.pmore
  41a248:	ldr	x9, [x0, #88]
  41a24c:	lsl	x11, x8, #1
  41a250:	sxtw	x10, w1
  41a254:	mov	x19, x0
  41a258:	cmp	x9, x8, lsl #1
  41a25c:	csel	x8, x9, x11, lt  // lt = tstop
  41a260:	cmp	x8, w1, sxtw
  41a264:	csel	x1, x8, x10, gt
  41a268:	bl	4144d8 <_obstack_memory_used@@Base+0x324c>
  41a26c:	cbnz	w0, 41a2e0 <_obstack_memory_used@@Base+0x9054>
  41a270:	ldr	x0, [x19, #184]
  41a274:	cbz	x0, 41a290 <_obstack_memory_used@@Base+0x9004>
  41a278:	ldr	x8, [x19, #64]
  41a27c:	lsl	x8, x8, #3
  41a280:	add	x1, x8, #0x8
  41a284:	bl	402a50 <realloc@plt>
  41a288:	cbz	x0, 41a2ec <_obstack_memory_used@@Base+0x9060>
  41a28c:	str	x0, [x19, #184]
  41a290:	ldr	w8, [x19, #144]
  41a294:	ldrb	w9, [x19, #136]
  41a298:	cmp	w8, #0x2
  41a29c:	cbz	w9, 41a2b4 <_obstack_memory_used@@Base+0x9028>
  41a2a0:	mov	x0, x19
  41a2a4:	b.lt	41a2c4 <_obstack_memory_used@@Base+0x9038>  // b.tstop
  41a2a8:	bl	414568 <_obstack_memory_used@@Base+0x32dc>
  41a2ac:	cbz	w0, 41a2dc <_obstack_memory_used@@Base+0x9050>
  41a2b0:	b	41a2e0 <_obstack_memory_used@@Base+0x9054>
  41a2b4:	b.lt	41a2cc <_obstack_memory_used@@Base+0x9040>  // b.tstop
  41a2b8:	mov	x0, x19
  41a2bc:	bl	414b28 <_obstack_memory_used@@Base+0x389c>
  41a2c0:	b	41a2dc <_obstack_memory_used@@Base+0x9050>
  41a2c4:	bl	414ab0 <_obstack_memory_used@@Base+0x3824>
  41a2c8:	b	41a2dc <_obstack_memory_used@@Base+0x9050>
  41a2cc:	ldr	x8, [x19, #120]
  41a2d0:	cbz	x8, 41a2dc <_obstack_memory_used@@Base+0x9050>
  41a2d4:	mov	x0, x19
  41a2d8:	bl	414cfc <_obstack_memory_used@@Base+0x3a70>
  41a2dc:	mov	w0, wzr
  41a2e0:	ldr	x19, [sp, #16]
  41a2e4:	ldp	x29, x30, [sp], #32
  41a2e8:	ret
  41a2ec:	mov	w0, #0xc                   	// #12
  41a2f0:	b	41a2e0 <_obstack_memory_used@@Base+0x9054>
  41a2f4:	sub	sp, sp, #0x60
  41a2f8:	stp	x29, x30, [sp, #32]
  41a2fc:	stp	x24, x23, [sp, #48]
  41a300:	stp	x22, x21, [sp, #64]
  41a304:	stp	x20, x19, [sp, #80]
  41a308:	ldr	x20, [x1, #72]
  41a30c:	ldp	x8, x9, [x1, #184]
  41a310:	ldr	x22, [x1, #152]
  41a314:	mov	x23, x2
  41a318:	mov	x19, x1
  41a31c:	cmp	x20, x9
  41a320:	mov	x21, x0
  41a324:	add	x29, sp, #0x20
  41a328:	b.le	41a338 <_obstack_memory_used@@Base+0x90ac>
  41a32c:	str	x23, [x8, x20, lsl #3]
  41a330:	str	x20, [x19, #192]
  41a334:	b	41a3cc <_obstack_memory_used@@Base+0x9140>
  41a338:	ldr	x9, [x8, x20, lsl #3]
  41a33c:	cbz	x9, 41a370 <_obstack_memory_used@@Base+0x90e4>
  41a340:	ldr	x2, [x9, #80]
  41a344:	cbz	x23, 41a378 <_obstack_memory_used@@Base+0x90ec>
  41a348:	ldr	x23, [x23, #80]
  41a34c:	mov	x0, sp
  41a350:	mov	x1, x23
  41a354:	bl	41a43c <_obstack_memory_used@@Base+0x91b0>
  41a358:	str	w0, [x21]
  41a35c:	cbnz	w0, 41a434 <_obstack_memory_used@@Base+0x91a8>
  41a360:	ldr	x8, [x19, #72]
  41a364:	cmp	x23, #0x0
  41a368:	cset	w24, eq  // eq = none
  41a36c:	b	41a390 <_obstack_memory_used@@Base+0x9104>
  41a370:	str	x23, [x8, x20, lsl #3]
  41a374:	b	41a3cc <_obstack_memory_used@@Base+0x9140>
  41a378:	ldr	x8, [x2, #16]
  41a37c:	ldr	q0, [x2]
  41a380:	mov	w24, #0x1                   	// #1
  41a384:	str	x8, [sp, #16]
  41a388:	mov	x8, x20
  41a38c:	str	q0, [sp]
  41a390:	ldr	w2, [x19, #160]
  41a394:	sub	x1, x8, #0x1
  41a398:	mov	x0, x19
  41a39c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41a3a0:	mov	w3, w0
  41a3a4:	mov	x2, sp
  41a3a8:	mov	x0, x21
  41a3ac:	mov	x1, x22
  41a3b0:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41a3b4:	ldr	x8, [x19, #184]
  41a3b8:	mov	x23, x0
  41a3bc:	str	x0, [x8, x20, lsl #3]
  41a3c0:	tbnz	w24, #0, 41a3cc <_obstack_memory_used@@Base+0x9140>
  41a3c4:	ldr	x0, [sp, #16]
  41a3c8:	bl	402be0 <free@plt>
  41a3cc:	cbz	x23, 41a418 <_obstack_memory_used@@Base+0x918c>
  41a3d0:	ldr	x8, [x22, #152]
  41a3d4:	cbz	x8, 41a418 <_obstack_memory_used@@Base+0x918c>
  41a3d8:	add	x22, x23, #0x8
  41a3dc:	mov	x0, x19
  41a3e0:	mov	x1, x22
  41a3e4:	mov	x2, x20
  41a3e8:	bl	419b1c <_obstack_memory_used@@Base+0x8890>
  41a3ec:	str	w0, [x21]
  41a3f0:	cbnz	w0, 41a434 <_obstack_memory_used@@Base+0x91a8>
  41a3f4:	ldrb	w8, [x23, #104]
  41a3f8:	tbz	w8, #6, 41a418 <_obstack_memory_used@@Base+0x918c>
  41a3fc:	mov	x0, x19
  41a400:	mov	x1, x22
  41a404:	bl	419c24 <_obstack_memory_used@@Base+0x8998>
  41a408:	str	w0, [x21]
  41a40c:	cbnz	w0, 41a434 <_obstack_memory_used@@Base+0x91a8>
  41a410:	ldr	x8, [x19, #184]
  41a414:	ldr	x23, [x8, x20, lsl #3]
  41a418:	mov	x0, x23
  41a41c:	ldp	x20, x19, [sp, #80]
  41a420:	ldp	x22, x21, [sp, #64]
  41a424:	ldp	x24, x23, [sp, #48]
  41a428:	ldp	x29, x30, [sp, #32]
  41a42c:	add	sp, sp, #0x60
  41a430:	ret
  41a434:	mov	x23, xzr
  41a438:	b	41a418 <_obstack_memory_used@@Base+0x918c>
  41a43c:	stp	x29, x30, [sp, #-80]!
  41a440:	stp	x20, x19, [sp, #64]
  41a444:	mov	x20, x2
  41a448:	mov	x19, x0
  41a44c:	stp	x26, x25, [sp, #16]
  41a450:	stp	x24, x23, [sp, #32]
  41a454:	stp	x22, x21, [sp, #48]
  41a458:	mov	x29, sp
  41a45c:	cbz	x1, 41a564 <_obstack_memory_used@@Base+0x92d8>
  41a460:	ldr	x24, [x1, #8]
  41a464:	mov	x21, x1
  41a468:	cbz	x20, 41a550 <_obstack_memory_used@@Base+0x92c4>
  41a46c:	cmp	x24, #0x1
  41a470:	b.lt	41a550 <_obstack_memory_used@@Base+0x92c4>  // b.tstop
  41a474:	ldr	x23, [x20, #8]
  41a478:	cmp	x23, #0x1
  41a47c:	b.lt	41a550 <_obstack_memory_used@@Base+0x92c4>  // b.tstop
  41a480:	add	x8, x23, x24
  41a484:	lsl	x0, x8, #3
  41a488:	str	x8, [x19]
  41a48c:	bl	4028f0 <malloc@plt>
  41a490:	str	x0, [x19, #16]
  41a494:	cbz	x0, 41a5e8 <_obstack_memory_used@@Base+0x935c>
  41a498:	mov	x25, xzr
  41a49c:	mov	x22, xzr
  41a4a0:	mov	x11, xzr
  41a4a4:	mov	x9, xzr
  41a4a8:	mov	w10, #0x1                   	// #1
  41a4ac:	add	x8, x0, x22, lsl #3
  41a4b0:	mov	x26, x11
  41a4b4:	tbz	w10, #0, 41a5a4 <_obstack_memory_used@@Base+0x9318>
  41a4b8:	ldr	x10, [x21, #16]
  41a4bc:	ldr	x11, [x20, #16]
  41a4c0:	ldr	x13, [x10, x9, lsl #3]
  41a4c4:	ldr	x12, [x11, x26, lsl #3]
  41a4c8:	cmp	x13, x12
  41a4cc:	b.le	41a4f0 <_obstack_memory_used@@Base+0x9264>
  41a4d0:	add	x26, x26, #0x1
  41a4d4:	cmp	x23, x26
  41a4d8:	add	x22, x22, #0x1
  41a4dc:	cset	w10, gt
  41a4e0:	cmp	x24, x9
  41a4e4:	str	x12, [x8], #8
  41a4e8:	b.gt	41a4b4 <_obstack_memory_used@@Base+0x9228>
  41a4ec:	b	41a524 <_obstack_memory_used@@Base+0x9298>
  41a4f0:	str	x13, [x8]
  41a4f4:	ldr	x23, [x20, #8]
  41a4f8:	ldr	x24, [x21, #8]
  41a4fc:	cinc	x11, x26, eq  // eq = none
  41a500:	add	x9, x9, #0x1
  41a504:	cmp	x23, x11
  41a508:	add	x22, x22, #0x1
  41a50c:	cset	w10, gt
  41a510:	cmp	x24, x9
  41a514:	sub	x25, x25, #0x1
  41a518:	b.gt	41a4ac <_obstack_memory_used@@Base+0x9220>
  41a51c:	cmp	x13, x12
  41a520:	cinc	x26, x26, eq  // eq = none
  41a524:	cbz	w10, 41a5c8 <_obstack_memory_used@@Base+0x933c>
  41a528:	ldr	x8, [x20, #16]
  41a52c:	sub	x9, x23, x26
  41a530:	add	x0, x0, x22, lsl #3
  41a534:	lsl	x2, x9, #3
  41a538:	add	x1, x8, x26, lsl #3
  41a53c:	bl	402710 <memcpy@plt>
  41a540:	ldr	x8, [x20, #8]
  41a544:	sub	x9, x22, x26
  41a548:	add	x22, x9, x8
  41a54c:	b	41a5c8 <_obstack_memory_used@@Base+0x933c>
  41a550:	cmp	x24, #0x1
  41a554:	b.lt	41a564 <_obstack_memory_used@@Base+0x92d8>  // b.tstop
  41a558:	mov	x0, x19
  41a55c:	mov	x1, x21
  41a560:	b	41a57c <_obstack_memory_used@@Base+0x92f0>
  41a564:	cbz	x20, 41a594 <_obstack_memory_used@@Base+0x9308>
  41a568:	ldr	x8, [x20, #8]
  41a56c:	cmp	x8, #0x1
  41a570:	b.lt	41a594 <_obstack_memory_used@@Base+0x9308>  // b.tstop
  41a574:	mov	x0, x19
  41a578:	mov	x1, x20
  41a57c:	ldp	x20, x19, [sp, #64]
  41a580:	ldp	x22, x21, [sp, #48]
  41a584:	ldp	x24, x23, [sp, #32]
  41a588:	ldp	x26, x25, [sp, #16]
  41a58c:	ldp	x29, x30, [sp], #80
  41a590:	b	418824 <_obstack_memory_used@@Base+0x7598>
  41a594:	mov	w0, wzr
  41a598:	stp	xzr, xzr, [x19]
  41a59c:	str	xzr, [x19, #16]
  41a5a0:	b	41a5d0 <_obstack_memory_used@@Base+0x9344>
  41a5a4:	ldr	x10, [x21, #16]
  41a5a8:	sub	x11, x24, x9
  41a5ac:	lsl	x2, x11, #3
  41a5b0:	mov	x0, x8
  41a5b4:	add	x1, x10, x9, lsl #3
  41a5b8:	bl	402710 <memcpy@plt>
  41a5bc:	ldr	x8, [x21, #8]
  41a5c0:	add	x8, x8, x25
  41a5c4:	add	x22, x8, x22
  41a5c8:	mov	w0, wzr
  41a5cc:	str	x22, [x19, #8]
  41a5d0:	ldp	x20, x19, [sp, #64]
  41a5d4:	ldp	x22, x21, [sp, #48]
  41a5d8:	ldp	x24, x23, [sp, #32]
  41a5dc:	ldp	x26, x25, [sp, #16]
  41a5e0:	ldp	x29, x30, [sp], #80
  41a5e4:	ret
  41a5e8:	mov	w0, #0xc                   	// #12
  41a5ec:	b	41a5d0 <_obstack_memory_used@@Base+0x9344>
  41a5f0:	ldr	x9, [x0, #200]
  41a5f4:	mov	x8, x0
  41a5f8:	cmp	x9, #0x1
  41a5fc:	b.lt	41a640 <_obstack_memory_used@@Base+0x93b4>  // b.tstop
  41a600:	ldr	x10, [x8, #216]
  41a604:	mov	x0, xzr
  41a608:	mov	w11, #0x28                  	// #40
  41a60c:	mov	x12, x9
  41a610:	add	x13, x0, x12
  41a614:	cmp	x13, #0x0
  41a618:	cinc	x13, x13, lt  // lt = tstop
  41a61c:	asr	x13, x13, #1
  41a620:	madd	x14, x13, x11, x10
  41a624:	ldr	x14, [x14, #8]
  41a628:	cmp	x14, x1
  41a62c:	csel	x12, x12, x13, lt  // lt = tstop
  41a630:	csinc	x0, x0, x13, ge  // ge = tcont
  41a634:	cmp	x0, x12
  41a638:	b.lt	41a610 <_obstack_memory_used@@Base+0x9384>  // b.tstop
  41a63c:	b	41a644 <_obstack_memory_used@@Base+0x93b8>
  41a640:	mov	x0, xzr
  41a644:	cmp	x0, x9
  41a648:	b.ge	41a664 <_obstack_memory_used@@Base+0x93d8>  // b.tcont
  41a64c:	ldr	x8, [x8, #216]
  41a650:	mov	w9, #0x28                  	// #40
  41a654:	madd	x8, x0, x9, x8
  41a658:	ldr	x8, [x8, #8]
  41a65c:	cmp	x8, x1
  41a660:	b.eq	41a668 <_obstack_memory_used@@Base+0x93dc>  // b.none
  41a664:	mov	x0, #0xffffffffffffffff    	// #-1
  41a668:	ret
  41a66c:	stp	x29, x30, [sp, #-48]!
  41a670:	stp	x20, x19, [sp, #32]
  41a674:	ldr	x8, [x0, #64]
  41a678:	str	x21, [sp, #16]
  41a67c:	ldr	x21, [x0, #192]
  41a680:	mov	x19, x0
  41a684:	mov	x20, x1
  41a688:	cmp	x8, x1
  41a68c:	mov	x29, sp
  41a690:	b.gt	41a6a0 <_obstack_memory_used@@Base+0x9414>
  41a694:	ldr	x9, [x19, #88]
  41a698:	cmp	x8, x9
  41a69c:	b.lt	41a6b8 <_obstack_memory_used@@Base+0x942c>  // b.tstop
  41a6a0:	ldr	x8, [x19, #48]
  41a6a4:	cmp	x8, x20
  41a6a8:	b.gt	41a6c8 <_obstack_memory_used@@Base+0x943c>
  41a6ac:	ldr	x9, [x19, #88]
  41a6b0:	cmp	x8, x9
  41a6b4:	b.ge	41a6c8 <_obstack_memory_used@@Base+0x943c>  // b.tcont
  41a6b8:	add	w1, w20, #0x1
  41a6bc:	mov	x0, x19
  41a6c0:	bl	41a22c <_obstack_memory_used@@Base+0x8fa0>
  41a6c4:	cbnz	w0, 41a6fc <_obstack_memory_used@@Base+0x9470>
  41a6c8:	cmp	x21, x20
  41a6cc:	b.ge	41a6f8 <_obstack_memory_used@@Base+0x946c>  // b.tcont
  41a6d0:	ldr	x8, [x19, #184]
  41a6d4:	sub	x9, x20, x21
  41a6d8:	lsl	x2, x9, #3
  41a6dc:	mov	w1, wzr
  41a6e0:	add	x8, x8, x21, lsl #3
  41a6e4:	add	x0, x8, #0x8
  41a6e8:	bl	4029d0 <memset@plt>
  41a6ec:	mov	w0, wzr
  41a6f0:	str	x20, [x19, #192]
  41a6f4:	b	41a6fc <_obstack_memory_used@@Base+0x9470>
  41a6f8:	mov	w0, wzr
  41a6fc:	ldp	x20, x19, [sp, #32]
  41a700:	ldr	x21, [sp, #16]
  41a704:	ldp	x29, x30, [sp], #48
  41a708:	ret
  41a70c:	stp	x29, x30, [sp, #-80]!
  41a710:	stp	x26, x25, [sp, #16]
  41a714:	stp	x24, x23, [sp, #32]
  41a718:	stp	x22, x21, [sp, #48]
  41a71c:	stp	x20, x19, [sp, #64]
  41a720:	mov	x22, x2
  41a724:	mov	x23, x3
  41a728:	ldr	x2, [x2]
  41a72c:	ldr	x3, [x22, #8]
  41a730:	mov	x19, x4
  41a734:	mov	x21, x1
  41a738:	add	x1, x22, #0x10
  41a73c:	mov	w6, #0x8                   	// #8
  41a740:	mov	x4, x23
  41a744:	mov	x5, x19
  41a748:	mov	x29, sp
  41a74c:	mov	x20, x0
  41a750:	bl	41a868 <_obstack_memory_used@@Base+0x95dc>
  41a754:	cbz	w0, 41a770 <_obstack_memory_used@@Base+0x94e4>
  41a758:	ldp	x20, x19, [sp, #64]
  41a75c:	ldp	x22, x21, [sp, #48]
  41a760:	ldp	x24, x23, [sp, #32]
  41a764:	ldp	x26, x25, [sp, #16]
  41a768:	ldp	x29, x30, [sp], #80
  41a76c:	ret
  41a770:	ldp	x8, x9, [x20, #200]
  41a774:	ldr	x25, [x21]
  41a778:	ldr	x24, [x22, #8]
  41a77c:	cmp	x8, x9
  41a780:	b.lt	41a7c4 <_obstack_memory_used@@Base+0x9538>  // b.tstop
  41a784:	ldr	x0, [x20, #216]
  41a788:	add	x8, x9, x9, lsl #2
  41a78c:	lsl	x1, x8, #4
  41a790:	bl	402a50 <realloc@plt>
  41a794:	cbz	x0, 41a858 <_obstack_memory_used@@Base+0x95cc>
  41a798:	ldp	x8, x26, [x20, #200]
  41a79c:	mov	w9, #0x28                  	// #40
  41a7a0:	str	x0, [x20, #216]
  41a7a4:	mov	w1, wzr
  41a7a8:	madd	x0, x8, x9, x0
  41a7ac:	add	x8, x26, x26, lsl #2
  41a7b0:	lsl	x2, x8, #3
  41a7b4:	bl	4029d0 <memset@plt>
  41a7b8:	ldr	x8, [x20, #200]
  41a7bc:	lsl	x9, x26, #1
  41a7c0:	str	x9, [x20, #208]
  41a7c4:	ldr	x9, [x20, #216]
  41a7c8:	subs	x10, x8, #0x1
  41a7cc:	b.lt	41a7f4 <_obstack_memory_used@@Base+0x9568>  // b.tstop
  41a7d0:	mov	w11, #0x28                  	// #40
  41a7d4:	madd	x11, x10, x11, x9
  41a7d8:	ldr	x11, [x11, #8]
  41a7dc:	cmp	x11, x19
  41a7e0:	b.ne	41a7f4 <_obstack_memory_used@@Base+0x9568>  // b.any
  41a7e4:	mov	w11, #0x28                  	// #40
  41a7e8:	madd	x10, x10, x11, x9
  41a7ec:	mov	w11, #0x1                   	// #1
  41a7f0:	strb	w11, [x10, #32]
  41a7f4:	mov	w11, #0x28                  	// #40
  41a7f8:	subs	x10, x24, x25
  41a7fc:	add	x12, x8, #0x1
  41a800:	madd	x8, x8, x11, x9
  41a804:	csetm	w9, eq  // eq = none
  41a808:	stp	x23, x19, [x8]
  41a80c:	stp	x25, x24, [x8, #16]
  41a810:	strh	w9, [x8, #34]
  41a814:	str	x12, [x20, #200]
  41a818:	strb	wzr, [x8, #32]
  41a81c:	ldrsw	x8, [x20, #224]
  41a820:	cmp	x10, x8
  41a824:	b.le	41a82c <_obstack_memory_used@@Base+0x95a0>
  41a828:	str	w10, [x20, #224]
  41a82c:	ldr	x8, [x22, #8]
  41a830:	ldr	x9, [x21]
  41a834:	mov	x0, x20
  41a838:	ldp	x22, x21, [sp, #48]
  41a83c:	add	x8, x8, x19
  41a840:	ldp	x20, x19, [sp, #64]
  41a844:	ldp	x24, x23, [sp, #32]
  41a848:	ldp	x26, x25, [sp, #16]
  41a84c:	sub	x1, x8, x9
  41a850:	ldp	x29, x30, [sp], #80
  41a854:	b	41a66c <_obstack_memory_used@@Base+0x93e0>
  41a858:	ldr	x0, [x20, #216]
  41a85c:	bl	402be0 <free@plt>
  41a860:	mov	w0, #0xc                   	// #12
  41a864:	b	41a758 <_obstack_memory_used@@Base+0x94cc>
  41a868:	sub	sp, sp, #0xf0
  41a86c:	stp	x29, x30, [sp, #144]
  41a870:	stp	x28, x27, [sp, #160]
  41a874:	stp	x26, x25, [sp, #176]
  41a878:	stp	x24, x23, [sp, #192]
  41a87c:	stp	x22, x21, [sp, #208]
  41a880:	stp	x20, x19, [sp, #224]
  41a884:	ldr	x8, [x0, #152]
  41a888:	add	x29, sp, #0x90
  41a88c:	stur	wzr, [x29, #-36]
  41a890:	lsl	x10, x2, #4
  41a894:	stp	x5, x8, [sp, #48]
  41a898:	ldr	x8, [x8]
  41a89c:	ldrsw	x9, [x0, #224]
  41a8a0:	ldr	x20, [x1, #8]
  41a8a4:	mov	w24, w6
  41a8a8:	ldr	x8, [x8, x10]
  41a8ac:	mov	x23, x5
  41a8b0:	mov	x25, x4
  41a8b4:	mov	x22, x2
  41a8b8:	str	x8, [sp, #64]
  41a8bc:	add	x8, x9, x5
  41a8c0:	mov	x27, x1
  41a8c4:	mov	x21, x0
  41a8c8:	cmp	x20, x8
  41a8cc:	mov	x19, x3
  41a8d0:	str	w6, [sp, #44]
  41a8d4:	b.le	41acc0 <_obstack_memory_used@@Base+0x9a34>
  41a8d8:	ldr	x9, [x21, #184]
  41a8dc:	ldr	x8, [x27]
  41a8e0:	ldr	x20, [x27, #16]
  41a8e4:	ldr	w2, [x21, #160]
  41a8e8:	str	x9, [sp, #24]
  41a8ec:	ldr	x9, [x21, #72]
  41a8f0:	cmp	x8, #0x0
  41a8f4:	csel	x26, x19, x8, eq  // eq = none
  41a8f8:	sub	x1, x26, #0x1
  41a8fc:	mov	x0, x21
  41a900:	str	x9, [sp, #16]
  41a904:	str	x20, [x21, #184]
  41a908:	str	x26, [x21, #72]
  41a90c:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41a910:	cmp	x26, x19
  41a914:	mov	w19, w0
  41a918:	str	x27, [sp, #32]
  41a91c:	b.ne	41a96c <_obstack_memory_used@@Base+0x96e0>  // b.any
  41a920:	mov	w8, #0x1                   	// #1
  41a924:	dup	v0.2d, x8
  41a928:	mov	w0, #0x8                   	// #8
  41a92c:	stur	q0, [x29, #-64]
  41a930:	bl	4028f0 <malloc@plt>
  41a934:	stur	x0, [x29, #-48]
  41a938:	cbz	x0, 41ad10 <_obstack_memory_used@@Base+0x9a84>
  41a93c:	str	x22, [x0]
  41a940:	ldp	x0, x2, [sp, #56]
  41a944:	sub	x1, x29, #0x40
  41a948:	mov	w3, w24
  41a94c:	stur	wzr, [x29, #-36]
  41a950:	bl	41ad30 <_obstack_memory_used@@Base+0x9aa4>
  41a954:	stur	w0, [x29, #-36]
  41a958:	cbz	w0, 41a9b0 <_obstack_memory_used@@Base+0x9724>
  41a95c:	mov	w22, w0
  41a960:	ldur	x0, [x29, #-48]
  41a964:	bl	402be0 <free@plt>
  41a968:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41a96c:	ldr	x27, [x20, x26, lsl #3]
  41a970:	cbz	x27, 41a988 <_obstack_memory_used@@Base+0x96fc>
  41a974:	ldrb	w8, [x27, #104]
  41a978:	tbnz	w8, #6, 41a994 <_obstack_memory_used@@Base+0x9708>
  41a97c:	stp	xzr, xzr, [x29, #-64]
  41a980:	stur	xzr, [x29, #-48]
  41a984:	b	41a9a8 <_obstack_memory_used@@Base+0x971c>
  41a988:	stp	xzr, xzr, [x29, #-64]
  41a98c:	stur	xzr, [x29, #-48]
  41a990:	b	41aa04 <_obstack_memory_used@@Base+0x9778>
  41a994:	add	x1, x27, #0x8
  41a998:	sub	x0, x29, #0x40
  41a99c:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  41a9a0:	stur	w0, [x29, #-36]
  41a9a4:	cbnz	w0, 41ad20 <_obstack_memory_used@@Base+0x9a94>
  41a9a8:	ldrb	w8, [x27, #104]
  41a9ac:	tbz	w8, #6, 41aa04 <_obstack_memory_used@@Base+0x9778>
  41a9b0:	ldur	x8, [x29, #-56]
  41a9b4:	ldr	x3, [sp, #64]
  41a9b8:	cbz	x8, 41a9d8 <_obstack_memory_used@@Base+0x974c>
  41a9bc:	sub	x1, x29, #0x40
  41a9c0:	mov	x0, x21
  41a9c4:	mov	x2, x26
  41a9c8:	mov	w4, w24
  41a9cc:	bl	41ae70 <_obstack_memory_used@@Base+0x9be4>
  41a9d0:	stur	w0, [x29, #-36]
  41a9d4:	cbnz	w0, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41a9d8:	ldr	x1, [sp, #56]
  41a9dc:	sub	x0, x29, #0x24
  41a9e0:	sub	x2, x29, #0x40
  41a9e4:	mov	w3, w19
  41a9e8:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41a9ec:	mov	x27, x0
  41a9f0:	cbnz	x0, 41a9fc <_obstack_memory_used@@Base+0x9770>
  41a9f4:	ldur	w8, [x29, #-36]
  41a9f8:	cbnz	w8, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41a9fc:	ldr	x8, [x21, #184]
  41aa00:	str	x27, [x8, x26, lsl #3]
  41aa04:	cmp	x26, x23
  41aa08:	b.ge	41ac24 <_obstack_memory_used@@Base+0x9998>  // b.tcont
  41aa0c:	ldp	x20, x22, [sp, #56]
  41aa10:	str	x25, [sp, #8]
  41aa14:	mov	x25, xzr
  41aa18:	ldrsw	x8, [x21, #224]
  41aa1c:	cmp	x25, x8
  41aa20:	b.gt	41ac20 <_obstack_memory_used@@Base+0x9994>
  41aa24:	stur	xzr, [x29, #-56]
  41aa28:	ldr	x8, [x21, #184]
  41aa2c:	add	x19, x26, #0x1
  41aa30:	ldr	x8, [x8, x19, lsl #3]
  41aa34:	cbz	x8, 41aa4c <_obstack_memory_used@@Base+0x97c0>
  41aa38:	add	x1, x8, #0x8
  41aa3c:	sub	x0, x29, #0x40
  41aa40:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41aa44:	stur	w0, [x29, #-36]
  41aa48:	cbnz	w0, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41aa4c:	cbz	x27, 41ab88 <_obstack_memory_used@@Base+0x98fc>
  41aa50:	str	x19, [sp, #72]
  41aa54:	ldr	x19, [x21, #152]
  41aa58:	stur	wzr, [x29, #-4]
  41aa5c:	stp	xzr, xzr, [x29, #-32]
  41aa60:	stur	xzr, [x29, #-16]
  41aa64:	ldr	x8, [x27, #40]
  41aa68:	cmp	x8, #0x1
  41aa6c:	b.lt	41ab78 <_obstack_memory_used@@Base+0x98ec>  // b.tstop
  41aa70:	mov	x24, xzr
  41aa74:	ldr	x8, [x27, #48]
  41aa78:	ldr	x22, [x8, x24, lsl #3]
  41aa7c:	ldr	x8, [x19]
  41aa80:	add	x9, x8, x22, lsl #4
  41aa84:	ldrb	w9, [x9, #10]
  41aa88:	tbnz	w9, #4, 41aaa4 <_obstack_memory_used@@Base+0x9818>
  41aa8c:	add	x1, x8, x22, lsl #4
  41aa90:	mov	x0, x21
  41aa94:	mov	x2, x26
  41aa98:	bl	41b6f8 <_obstack_memory_used@@Base+0xa46c>
  41aa9c:	tbnz	w0, #0, 41ab34 <_obstack_memory_used@@Base+0x98a8>
  41aaa0:	b	41ab48 <_obstack_memory_used@@Base+0x98bc>
  41aaa4:	mov	x0, x19
  41aaa8:	mov	x1, x22
  41aaac:	mov	x2, x21
  41aab0:	mov	x3, x26
  41aab4:	bl	41b400 <_obstack_memory_used@@Base+0xa174>
  41aab8:	cmp	w0, #0x2
  41aabc:	b.lt	41ab30 <_obstack_memory_used@@Base+0x98a4>  // b.tstop
  41aac0:	ldr	x8, [x21, #184]
  41aac4:	ldr	x9, [x19, #24]
  41aac8:	add	x28, x26, w0, uxtw
  41aacc:	ldr	x8, [x8, x28, lsl #3]
  41aad0:	ldr	x20, [x9, x22, lsl #3]
  41aad4:	stur	xzr, [x29, #-24]
  41aad8:	cbz	x8, 41aaf0 <_obstack_memory_used@@Base+0x9864>
  41aadc:	add	x1, x8, #0x8
  41aae0:	sub	x0, x29, #0x20
  41aae4:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41aae8:	stur	w0, [x29, #-4]
  41aaec:	cbnz	w0, 41acb8 <_obstack_memory_used@@Base+0x9a2c>
  41aaf0:	sub	x0, x29, #0x20
  41aaf4:	mov	x1, x20
  41aaf8:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41aafc:	tbz	w0, #0, 41ac90 <_obstack_memory_used@@Base+0x9a04>
  41ab00:	sub	x0, x29, #0x4
  41ab04:	sub	x2, x29, #0x20
  41ab08:	mov	x1, x19
  41ab0c:	bl	41b210 <_obstack_memory_used@@Base+0x9f84>
  41ab10:	ldr	x8, [x21, #184]
  41ab14:	str	x0, [x8, x28, lsl #3]
  41ab18:	ldr	x8, [x21, #184]
  41ab1c:	ldr	x8, [x8, x28, lsl #3]
  41ab20:	cbnz	x8, 41ab34 <_obstack_memory_used@@Base+0x98a8>
  41ab24:	ldur	w23, [x29, #-4]
  41ab28:	cbz	w23, 41ab34 <_obstack_memory_used@@Base+0x98a8>
  41ab2c:	b	41ac94 <_obstack_memory_used@@Base+0x9a08>
  41ab30:	cbz	w0, 41ab5c <_obstack_memory_used@@Base+0x98d0>
  41ab34:	ldr	x8, [x19, #24]
  41ab38:	sub	x0, x29, #0x40
  41ab3c:	ldr	x1, [x8, x22, lsl #3]
  41ab40:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41ab44:	tbz	w0, #0, 41ac90 <_obstack_memory_used@@Base+0x9a04>
  41ab48:	ldr	x8, [x27, #40]
  41ab4c:	add	x24, x24, #0x1
  41ab50:	cmp	x24, x8
  41ab54:	b.lt	41aa74 <_obstack_memory_used@@Base+0x97e8>  // b.tstop
  41ab58:	b	41ab64 <_obstack_memory_used@@Base+0x98d8>
  41ab5c:	ldr	x8, [x19]
  41ab60:	b	41aa8c <_obstack_memory_used@@Base+0x9800>
  41ab64:	ldur	x0, [x29, #-16]
  41ab68:	ldp	x23, x20, [sp, #48]
  41ab6c:	ldr	w24, [sp, #44]
  41ab70:	ldr	x22, [sp, #64]
  41ab74:	b	41ab7c <_obstack_memory_used@@Base+0x98f0>
  41ab78:	mov	x0, xzr
  41ab7c:	bl	402be0 <free@plt>
  41ab80:	ldr	x19, [sp, #72]
  41ab84:	stur	wzr, [x29, #-36]
  41ab88:	ldur	x8, [x29, #-56]
  41ab8c:	cbz	x8, 41abcc <_obstack_memory_used@@Base+0x9940>
  41ab90:	sub	x1, x29, #0x40
  41ab94:	mov	x0, x20
  41ab98:	mov	x2, x22
  41ab9c:	mov	w3, w24
  41aba0:	bl	41ad30 <_obstack_memory_used@@Base+0x9aa4>
  41aba4:	stur	w0, [x29, #-36]
  41aba8:	cbnz	w0, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41abac:	sub	x1, x29, #0x40
  41abb0:	mov	x0, x21
  41abb4:	mov	x2, x19
  41abb8:	mov	x3, x22
  41abbc:	mov	w4, w24
  41abc0:	bl	41ae70 <_obstack_memory_used@@Base+0x9be4>
  41abc4:	stur	w0, [x29, #-36]
  41abc8:	cbnz	w0, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41abcc:	ldr	w2, [x21, #160]
  41abd0:	mov	x0, x21
  41abd4:	mov	x1, x26
  41abd8:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41abdc:	mov	w3, w0
  41abe0:	sub	x0, x29, #0x24
  41abe4:	sub	x2, x29, #0x40
  41abe8:	mov	x1, x20
  41abec:	bl	4188f0 <_obstack_memory_used@@Base+0x7664>
  41abf0:	mov	x27, x0
  41abf4:	cbnz	x0, 41ac00 <_obstack_memory_used@@Base+0x9974>
  41abf8:	ldur	w8, [x29, #-36]
  41abfc:	cbnz	w8, 41acb0 <_obstack_memory_used@@Base+0x9a24>
  41ac00:	ldr	x8, [x21, #184]
  41ac04:	cmp	x27, #0x0
  41ac08:	csinc	x25, xzr, x25, ne  // ne = any
  41ac0c:	cmp	x19, x23
  41ac10:	mov	x26, x19
  41ac14:	str	x27, [x8, x19, lsl #3]
  41ac18:	b.ne	41aa18 <_obstack_memory_used@@Base+0x978c>  // b.any
  41ac1c:	mov	x26, x23
  41ac20:	ldr	x25, [sp, #8]
  41ac24:	ldur	x0, [x29, #-48]
  41ac28:	bl	402be0 <free@plt>
  41ac2c:	ldr	x8, [x21, #184]
  41ac30:	ldr	x9, [sp, #32]
  41ac34:	ldr	x8, [x8, x23, lsl #3]
  41ac38:	str	x26, [x9]
  41ac3c:	ldr	x9, [sp, #24]
  41ac40:	str	x9, [x21, #184]
  41ac44:	ldr	x9, [sp, #16]
  41ac48:	str	x9, [x21, #72]
  41ac4c:	cbz	x8, 41ac68 <_obstack_memory_used@@Base+0x99dc>
  41ac50:	add	x0, x8, #0x8
  41ac54:	mov	x1, x25
  41ac58:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41ac5c:	cbz	x0, 41ac68 <_obstack_memory_used@@Base+0x99dc>
  41ac60:	mov	w22, wzr
  41ac64:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41ac68:	mov	w22, #0x1                   	// #1
  41ac6c:	mov	w0, w22
  41ac70:	ldp	x20, x19, [sp, #224]
  41ac74:	ldp	x22, x21, [sp, #208]
  41ac78:	ldp	x24, x23, [sp, #192]
  41ac7c:	ldp	x26, x25, [sp, #176]
  41ac80:	ldp	x28, x27, [sp, #160]
  41ac84:	ldp	x29, x30, [sp, #144]
  41ac88:	add	sp, sp, #0xf0
  41ac8c:	ret
  41ac90:	mov	w23, #0xc                   	// #12
  41ac94:	ldur	x0, [x29, #-16]
  41ac98:	bl	402be0 <free@plt>
  41ac9c:	ldur	x0, [x29, #-48]
  41aca0:	stur	w23, [x29, #-36]
  41aca4:	bl	402be0 <free@plt>
  41aca8:	ldur	w22, [x29, #-36]
  41acac:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41acb0:	ldur	x0, [x29, #-48]
  41acb4:	b	41aca4 <_obstack_memory_used@@Base+0x9a18>
  41acb8:	mov	w23, w0
  41acbc:	b	41ac94 <_obstack_memory_used@@Base+0x9a08>
  41acc0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41acc4:	sub	x9, x9, x20
  41acc8:	cmp	x9, x8
  41accc:	b.le	41ad28 <_obstack_memory_used@@Base+0x9a9c>
  41acd0:	add	x23, x8, #0x1
  41acd4:	add	x24, x23, x20
  41acd8:	lsr	x8, x24, #61
  41acdc:	cbnz	x8, 41ad28 <_obstack_memory_used@@Base+0x9a9c>
  41ace0:	ldr	x0, [x27, #16]
  41ace4:	lsl	x1, x24, #3
  41ace8:	bl	402a50 <realloc@plt>
  41acec:	cbz	x0, 41ad28 <_obstack_memory_used@@Base+0x9a9c>
  41acf0:	stp	x24, x0, [x27, #8]
  41acf4:	add	x0, x0, x20, lsl #3
  41acf8:	lsl	x2, x23, #3
  41acfc:	mov	w1, wzr
  41ad00:	bl	4029d0 <memset@plt>
  41ad04:	ldr	x23, [sp, #48]
  41ad08:	ldr	w24, [sp, #44]
  41ad0c:	b	41a8d8 <_obstack_memory_used@@Base+0x964c>
  41ad10:	mov	w22, #0xc                   	// #12
  41ad14:	stp	xzr, xzr, [x29, #-64]
  41ad18:	stur	w22, [x29, #-36]
  41ad1c:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41ad20:	mov	w22, w0
  41ad24:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41ad28:	mov	w22, #0xc                   	// #12
  41ad2c:	b	41ac6c <_obstack_memory_used@@Base+0x99e0>
  41ad30:	sub	sp, sp, #0x70
  41ad34:	stp	x29, x30, [sp, #32]
  41ad38:	stp	x24, x23, [sp, #64]
  41ad3c:	stp	x22, x21, [sp, #80]
  41ad40:	stp	x20, x19, [sp, #96]
  41ad44:	ldr	x23, [x1, #8]
  41ad48:	mov	x22, x0
  41ad4c:	str	x25, [sp, #48]
  41ad50:	add	x29, sp, #0x20
  41ad54:	lsl	x0, x23, #3
  41ad58:	mov	w20, w3
  41ad5c:	mov	x21, x2
  41ad60:	mov	x19, x1
  41ad64:	stp	x23, xzr, [sp, #8]
  41ad68:	bl	4028f0 <malloc@plt>
  41ad6c:	str	x0, [sp, #24]
  41ad70:	cbz	x0, 41ae68 <_obstack_memory_used@@Base+0x9bdc>
  41ad74:	cmp	x23, #0x1
  41ad78:	b.lt	41ae2c <_obstack_memory_used@@Base+0x9ba0>  // b.tstop
  41ad7c:	mov	x24, xzr
  41ad80:	mov	w25, #0x18                  	// #24
  41ad84:	ldr	x8, [x19, #16]
  41ad88:	ldr	x9, [x22, #48]
  41ad8c:	ldr	x2, [x8, x24, lsl #3]
  41ad90:	madd	x1, x2, x25, x9
  41ad94:	ldr	x8, [x1, #8]
  41ad98:	cmp	x8, #0x1
  41ad9c:	b.lt	41addc <_obstack_memory_used@@Base+0x9b50>  // b.tstop
  41ada0:	madd	x9, x2, x25, x9
  41ada4:	ldr	x9, [x9, #16]
  41ada8:	ldr	x10, [x22]
  41adac:	ldr	x11, [x9]
  41adb0:	add	x12, x10, x11, lsl #4
  41adb4:	ldrb	w12, [x12, #8]
  41adb8:	cmp	w12, w20
  41adbc:	b.ne	41add0 <_obstack_memory_used@@Base+0x9b44>  // b.any
  41adc0:	lsl	x12, x11, #4
  41adc4:	ldr	x12, [x10, x12]
  41adc8:	cmp	x12, x21
  41adcc:	b.eq	41adfc <_obstack_memory_used@@Base+0x9b70>  // b.none
  41add0:	subs	x8, x8, #0x1
  41add4:	add	x9, x9, #0x8
  41add8:	b.ne	41adac <_obstack_memory_used@@Base+0x9b20>  // b.any
  41addc:	add	x0, sp, #0x8
  41ade0:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41ade4:	cbnz	w0, 41ae1c <_obstack_memory_used@@Base+0x9b90>
  41ade8:	ldr	x8, [x19, #8]
  41adec:	add	x24, x24, #0x1
  41adf0:	cmp	x24, x8
  41adf4:	b.lt	41ad84 <_obstack_memory_used@@Base+0x9af8>  // b.tstop
  41adf8:	b	41ae2c <_obstack_memory_used@@Base+0x9ba0>
  41adfc:	cmn	x11, #0x1
  41ae00:	b.eq	41addc <_obstack_memory_used@@Base+0x9b50>  // b.none
  41ae04:	add	x1, sp, #0x8
  41ae08:	mov	x0, x22
  41ae0c:	mov	x3, x21
  41ae10:	mov	w4, w20
  41ae14:	bl	41b104 <_obstack_memory_used@@Base+0x9e78>
  41ae18:	cbz	w0, 41ade8 <_obstack_memory_used@@Base+0x9b5c>
  41ae1c:	mov	w23, w0
  41ae20:	ldr	x0, [sp, #24]
  41ae24:	bl	402be0 <free@plt>
  41ae28:	b	41ae48 <_obstack_memory_used@@Base+0x9bbc>
  41ae2c:	ldr	x0, [x19, #16]
  41ae30:	bl	402be0 <free@plt>
  41ae34:	ldr	x8, [sp, #24]
  41ae38:	ldur	q0, [sp, #8]
  41ae3c:	mov	w23, wzr
  41ae40:	str	x8, [x19, #16]
  41ae44:	str	q0, [x19]
  41ae48:	mov	w0, w23
  41ae4c:	ldp	x20, x19, [sp, #96]
  41ae50:	ldp	x22, x21, [sp, #80]
  41ae54:	ldp	x24, x23, [sp, #64]
  41ae58:	ldr	x25, [sp, #48]
  41ae5c:	ldp	x29, x30, [sp, #32]
  41ae60:	add	sp, sp, #0x70
  41ae64:	ret
  41ae68:	mov	w23, #0xc                   	// #12
  41ae6c:	b	41ae48 <_obstack_memory_used@@Base+0x9bbc>
  41ae70:	sub	sp, sp, #0xa0
  41ae74:	stp	x29, x30, [sp, #64]
  41ae78:	stp	x28, x27, [sp, #80]
  41ae7c:	stp	x26, x25, [sp, #96]
  41ae80:	stp	x24, x23, [sp, #112]
  41ae84:	stp	x22, x21, [sp, #128]
  41ae88:	stp	x20, x19, [sp, #144]
  41ae8c:	ldr	x23, [x0, #152]
  41ae90:	mov	x24, x1
  41ae94:	mov	x1, x2
  41ae98:	add	x29, sp, #0x40
  41ae9c:	str	w4, [sp, #28]
  41aea0:	str	x3, [sp, #16]
  41aea4:	mov	x21, x2
  41aea8:	mov	x22, x0
  41aeac:	bl	41a5f0 <_obstack_memory_used@@Base+0x9364>
  41aeb0:	cmn	x0, #0x1
  41aeb4:	b.eq	41b0dc <_obstack_memory_used@@Base+0x9e50>  // b.none
  41aeb8:	mov	w8, #0x1                   	// #1
  41aebc:	dup	v0.2d, x8
  41aec0:	mov	x25, x0
  41aec4:	mov	w9, #0x28                  	// #40
  41aec8:	str	q0, [sp]
  41aecc:	ldr	x8, [x22, #216]
  41aed0:	madd	x8, x25, x9, x8
  41aed4:	add	x20, x8, #0x10
  41aed8:	ldur	x27, [x20, #-16]
  41aedc:	mov	x0, x24
  41aee0:	mov	x1, x27
  41aee4:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41aee8:	cbz	x0, 41b06c <_obstack_memory_used@@Base+0x9de0>
  41aeec:	ldp	x9, x8, [x20]
  41aef0:	add	x8, x8, x21
  41aef4:	sub	x19, x8, x9
  41aef8:	cmp	x19, x21
  41aefc:	b.ne	41af94 <_obstack_memory_used@@Base+0x9d08>  // b.any
  41af00:	ldr	x8, [x23, #40]
  41af04:	mov	w9, #0x18                  	// #24
  41af08:	mov	x0, x24
  41af0c:	madd	x8, x27, x9, x8
  41af10:	ldr	x8, [x8, #16]
  41af14:	ldr	x27, [x8]
  41af18:	mov	x1, x27
  41af1c:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41af20:	cbnz	x0, 41afbc <_obstack_memory_used@@Base+0x9d30>
  41af24:	ldr	q0, [sp]
  41af28:	mov	w0, #0x8                   	// #8
  41af2c:	str	q0, [sp, #32]
  41af30:	bl	4028f0 <malloc@plt>
  41af34:	str	x0, [sp, #48]
  41af38:	cbz	x0, 41b07c <_obstack_memory_used@@Base+0x9df0>
  41af3c:	mov	w19, wzr
  41af40:	str	x27, [x0]
  41af44:	ldr	x2, [sp, #16]
  41af48:	ldr	w3, [sp, #28]
  41af4c:	add	x1, sp, #0x20
  41af50:	mov	x0, x23
  41af54:	stur	w19, [x29, #-4]
  41af58:	bl	41ad30 <_obstack_memory_used@@Base+0x9aa4>
  41af5c:	mov	w27, w0
  41af60:	add	x1, sp, #0x20
  41af64:	mov	x0, x24
  41af68:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41af6c:	ldr	x8, [sp, #48]
  41af70:	mov	w28, w0
  41af74:	mov	x0, x8
  41af78:	bl	402be0 <free@plt>
  41af7c:	orr	w8, w27, w19
  41af80:	orr	w8, w8, w28
  41af84:	cbnz	w8, 41b088 <_obstack_memory_used@@Base+0x9dfc>
  41af88:	mov	w8, #0x2                   	// #2
  41af8c:	cbnz	w8, 41b064 <_obstack_memory_used@@Base+0x9dd8>
  41af90:	b	41b06c <_obstack_memory_used@@Base+0x9de0>
  41af94:	ldr	x8, [x22, #184]
  41af98:	ldr	x9, [x23, #24]
  41af9c:	ldr	x8, [x8, x19, lsl #3]
  41afa0:	ldr	x27, [x9, x27, lsl #3]
  41afa4:	cbz	x8, 41afc8 <_obstack_memory_used@@Base+0x9d3c>
  41afa8:	add	x28, x8, #0x8
  41afac:	mov	x0, x28
  41afb0:	mov	x1, x27
  41afb4:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41afb8:	cbz	x0, 41aff0 <_obstack_memory_used@@Base+0x9d64>
  41afbc:	mov	w8, #0x4                   	// #4
  41afc0:	cbnz	w8, 41b064 <_obstack_memory_used@@Base+0x9dd8>
  41afc4:	b	41b06c <_obstack_memory_used@@Base+0x9de0>
  41afc8:	mov	w8, #0x1                   	// #1
  41afcc:	dup	v0.2d, x8
  41afd0:	mov	w0, #0x8                   	// #8
  41afd4:	str	q0, [sp, #32]
  41afd8:	bl	4028f0 <malloc@plt>
  41afdc:	str	x0, [sp, #48]
  41afe0:	cbz	x0, 41b09c <_obstack_memory_used@@Base+0x9e10>
  41afe4:	str	x27, [x0]
  41afe8:	stur	wzr, [x29, #-4]
  41afec:	b	41b018 <_obstack_memory_used@@Base+0x9d8c>
  41aff0:	add	x0, sp, #0x20
  41aff4:	mov	x1, x28
  41aff8:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  41affc:	mov	w28, w0
  41b000:	stur	w0, [x29, #-4]
  41b004:	add	x0, sp, #0x20
  41b008:	mov	x1, x27
  41b00c:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41b010:	cbnz	w28, 41b0a8 <_obstack_memory_used@@Base+0x9e1c>
  41b014:	tbz	w0, #0, 41b0a8 <_obstack_memory_used@@Base+0x9e1c>
  41b018:	sub	x0, x29, #0x4
  41b01c:	add	x2, sp, #0x20
  41b020:	mov	x1, x23
  41b024:	bl	41b210 <_obstack_memory_used@@Base+0x9f84>
  41b028:	ldr	x8, [x22, #184]
  41b02c:	str	x0, [x8, x19, lsl #3]
  41b030:	ldr	x0, [sp, #48]
  41b034:	bl	402be0 <free@plt>
  41b038:	ldr	x8, [x22, #184]
  41b03c:	ldur	w9, [x29, #-4]
  41b040:	ldr	x8, [x8, x19, lsl #3]
  41b044:	cmp	x8, #0x0
  41b048:	cset	w10, eq  // eq = none
  41b04c:	cmp	w9, #0x0
  41b050:	cset	w11, ne  // ne = any
  41b054:	tst	w10, w11
  41b058:	and	w8, w10, w11
  41b05c:	csel	w26, w9, w26, ne  // ne = any
  41b060:	cbz	w8, 41b06c <_obstack_memory_used@@Base+0x9de0>
  41b064:	cmp	w8, #0x4
  41b068:	b.ne	41b0cc <_obstack_memory_used@@Base+0x9e40>  // b.any
  41b06c:	ldrb	w8, [x20, #16]
  41b070:	add	x20, x20, #0x28
  41b074:	cbnz	w8, 41aed8 <_obstack_memory_used@@Base+0x9c4c>
  41b078:	b	41b0dc <_obstack_memory_used@@Base+0x9e50>
  41b07c:	stp	xzr, xzr, [sp, #32]
  41b080:	mov	w19, #0xc                   	// #12
  41b084:	b	41af44 <_obstack_memory_used@@Base+0x9cb8>
  41b088:	cmp	w27, #0x0
  41b08c:	csel	w8, w28, w27, eq  // eq = none
  41b090:	cmp	w19, #0x0
  41b094:	csel	w26, w8, w19, eq  // eq = none
  41b098:	b	41b0bc <_obstack_memory_used@@Base+0x9e30>
  41b09c:	mov	w26, #0xc                   	// #12
  41b0a0:	stp	xzr, xzr, [sp, #32]
  41b0a4:	b	41b0bc <_obstack_memory_used@@Base+0x9e30>
  41b0a8:	ldr	x0, [sp, #48]
  41b0ac:	bl	402be0 <free@plt>
  41b0b0:	cmp	w28, #0x0
  41b0b4:	mov	w8, #0xc                   	// #12
  41b0b8:	csel	w26, w8, w28, eq  // eq = none
  41b0bc:	mov	w8, #0x1                   	// #1
  41b0c0:	stur	w26, [x29, #-4]
  41b0c4:	cbnz	w8, 41b064 <_obstack_memory_used@@Base+0x9dd8>
  41b0c8:	b	41b06c <_obstack_memory_used@@Base+0x9de0>
  41b0cc:	cmp	w8, #0x2
  41b0d0:	b.ne	41b0e0 <_obstack_memory_used@@Base+0x9e54>  // b.any
  41b0d4:	mov	w9, #0x28                  	// #40
  41b0d8:	b	41aecc <_obstack_memory_used@@Base+0x9c40>
  41b0dc:	mov	w26, wzr
  41b0e0:	mov	w0, w26
  41b0e4:	ldp	x20, x19, [sp, #144]
  41b0e8:	ldp	x22, x21, [sp, #128]
  41b0ec:	ldp	x24, x23, [sp, #112]
  41b0f0:	ldp	x26, x25, [sp, #96]
  41b0f4:	ldp	x28, x27, [sp, #80]
  41b0f8:	ldp	x29, x30, [sp, #64]
  41b0fc:	add	sp, sp, #0xa0
  41b100:	ret
  41b104:	stp	x29, x30, [sp, #-64]!
  41b108:	stp	x24, x23, [sp, #16]
  41b10c:	stp	x20, x19, [sp, #48]
  41b110:	mov	x20, x1
  41b114:	mov	x23, x0
  41b118:	mov	x0, x1
  41b11c:	mov	x1, x2
  41b120:	stp	x22, x21, [sp, #32]
  41b124:	mov	x29, sp
  41b128:	mov	w21, w4
  41b12c:	mov	x22, x3
  41b130:	mov	x19, x2
  41b134:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41b138:	cbz	x0, 41b154 <_obstack_memory_used@@Base+0x9ec8>
  41b13c:	mov	w0, wzr
  41b140:	ldp	x20, x19, [sp, #48]
  41b144:	ldp	x22, x21, [sp, #32]
  41b148:	ldp	x24, x23, [sp, #16]
  41b14c:	ldp	x29, x30, [sp], #64
  41b150:	ret
  41b154:	mov	w24, #0x18                  	// #24
  41b158:	ldr	x8, [x23]
  41b15c:	add	x9, x8, x19, lsl #4
  41b160:	ldrb	w9, [x9, #8]
  41b164:	cmp	w9, w21
  41b168:	b.ne	41b17c <_obstack_memory_used@@Base+0x9ef0>  // b.any
  41b16c:	lsl	x9, x19, #4
  41b170:	ldr	x8, [x8, x9]
  41b174:	cmp	x8, x22
  41b178:	b.eq	41b1f0 <_obstack_memory_used@@Base+0x9f64>  // b.none
  41b17c:	mov	x0, x20
  41b180:	mov	x1, x19
  41b184:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41b188:	tbz	w0, #0, 41b208 <_obstack_memory_used@@Base+0x9f7c>
  41b18c:	ldr	x8, [x23, #40]
  41b190:	madd	x9, x19, x24, x8
  41b194:	ldr	x9, [x9, #8]
  41b198:	cmp	x9, #0x2
  41b19c:	b.eq	41b1a8 <_obstack_memory_used@@Base+0x9f1c>  // b.none
  41b1a0:	cbnz	x9, 41b1d0 <_obstack_memory_used@@Base+0x9f44>
  41b1a4:	b	41b13c <_obstack_memory_used@@Base+0x9eb0>
  41b1a8:	madd	x8, x19, x24, x8
  41b1ac:	ldr	x8, [x8, #16]
  41b1b0:	mov	x0, x23
  41b1b4:	mov	x1, x20
  41b1b8:	mov	x3, x22
  41b1bc:	ldr	x2, [x8, #8]
  41b1c0:	mov	w4, w21
  41b1c4:	bl	41b104 <_obstack_memory_used@@Base+0x9e78>
  41b1c8:	cbnz	w0, 41b140 <_obstack_memory_used@@Base+0x9eb4>
  41b1cc:	ldr	x8, [x23, #40]
  41b1d0:	madd	x8, x19, x24, x8
  41b1d4:	ldr	x8, [x8, #16]
  41b1d8:	mov	x0, x20
  41b1dc:	ldr	x19, [x8]
  41b1e0:	mov	x1, x19
  41b1e4:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41b1e8:	cbz	x0, 41b158 <_obstack_memory_used@@Base+0x9ecc>
  41b1ec:	b	41b13c <_obstack_memory_used@@Base+0x9eb0>
  41b1f0:	cmp	w21, #0x9
  41b1f4:	b.ne	41b13c <_obstack_memory_used@@Base+0x9eb0>  // b.any
  41b1f8:	mov	x0, x20
  41b1fc:	mov	x1, x19
  41b200:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41b204:	tbnz	w0, #0, 41b13c <_obstack_memory_used@@Base+0x9eb0>
  41b208:	mov	w0, #0xc                   	// #12
  41b20c:	b	41b140 <_obstack_memory_used@@Base+0x9eb4>
  41b210:	stp	x29, x30, [sp, #-64]!
  41b214:	stp	x24, x23, [sp, #16]
  41b218:	stp	x22, x21, [sp, #32]
  41b21c:	stp	x20, x19, [sp, #48]
  41b220:	ldr	x8, [x2, #8]
  41b224:	mov	x19, x0
  41b228:	mov	x29, sp
  41b22c:	cbz	x8, 41b3d0 <_obstack_memory_used@@Base+0xa144>
  41b230:	mov	x23, x2
  41b234:	mov	x20, x1
  41b238:	subs	x9, x8, #0x1
  41b23c:	b.lt	41b260 <_obstack_memory_used@@Base+0x9fd4>  // b.tstop
  41b240:	ldr	x10, [x23, #16]
  41b244:	mov	x11, x8
  41b248:	mov	x21, x8
  41b24c:	ldr	x12, [x10], #8
  41b250:	subs	x11, x11, #0x1
  41b254:	add	x21, x12, x21
  41b258:	b.ne	41b24c <_obstack_memory_used@@Base+0x9fc0>  // b.any
  41b25c:	b	41b264 <_obstack_memory_used@@Base+0x9fd8>
  41b260:	mov	x21, x8
  41b264:	ldr	x10, [x20, #136]
  41b268:	ldr	x11, [x20, #64]
  41b26c:	and	x12, x10, x21
  41b270:	mov	w10, #0x18                  	// #24
  41b274:	mul	x10, x12, x10
  41b278:	ldr	x10, [x11, x10]
  41b27c:	cmp	x10, #0x1
  41b280:	b.lt	41b2ec <_obstack_memory_used@@Base+0xa060>  // b.tstop
  41b284:	mov	w13, #0x18                  	// #24
  41b288:	madd	x11, x12, x13, x11
  41b28c:	ldr	x11, [x11, #16]
  41b290:	mov	x12, xzr
  41b294:	cbz	x23, 41b2e0 <_obstack_memory_used@@Base+0xa054>
  41b298:	ldr	x22, [x11, x12, lsl #3]
  41b29c:	ldr	x13, [x22]
  41b2a0:	cmp	x21, x13
  41b2a4:	b.ne	41b2e0 <_obstack_memory_used@@Base+0xa054>  // b.any
  41b2a8:	ldr	x13, [x22, #16]
  41b2ac:	cmp	x13, x8
  41b2b0:	b.ne	41b2e0 <_obstack_memory_used@@Base+0xa054>  // b.any
  41b2b4:	mov	x13, x9
  41b2b8:	add	x14, x13, #0x1
  41b2bc:	cmp	x14, #0x1
  41b2c0:	b.lt	41b3b8 <_obstack_memory_used@@Base+0xa12c>  // b.tstop
  41b2c4:	ldr	x14, [x22, #24]
  41b2c8:	ldr	x15, [x23, #16]
  41b2cc:	ldr	x14, [x14, x13, lsl #3]
  41b2d0:	ldr	x15, [x15, x13, lsl #3]
  41b2d4:	sub	x13, x13, #0x1
  41b2d8:	cmp	x14, x15
  41b2dc:	b.eq	41b2b8 <_obstack_memory_used@@Base+0xa02c>  // b.none
  41b2e0:	add	x12, x12, #0x1
  41b2e4:	cmp	x12, x10
  41b2e8:	b.lt	41b294 <_obstack_memory_used@@Base+0xa008>  // b.tstop
  41b2ec:	mov	w0, #0x70                  	// #112
  41b2f0:	mov	w1, #0x1                   	// #1
  41b2f4:	bl	402a20 <calloc@plt>
  41b2f8:	cbz	x0, 41b3f0 <_obstack_memory_used@@Base+0xa164>
  41b2fc:	add	x24, x0, #0x8
  41b300:	mov	x22, x0
  41b304:	mov	x0, x24
  41b308:	mov	x1, x23
  41b30c:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  41b310:	cbnz	w0, 41b3dc <_obstack_memory_used@@Base+0xa150>
  41b314:	str	x24, [x22, #80]
  41b318:	ldr	x8, [x23, #8]
  41b31c:	cmp	x8, #0x1
  41b320:	b.lt	41b3a4 <_obstack_memory_used@@Base+0xa118>  // b.tstop
  41b324:	ldr	x9, [x20]
  41b328:	ldr	x10, [x23, #16]
  41b32c:	ldr	x11, [x10]
  41b330:	add	x11, x9, x11, lsl #4
  41b334:	ldr	w12, [x11, #8]!
  41b338:	and	w13, w12, #0x3ffff
  41b33c:	cmp	w13, #0x1
  41b340:	b.eq	41b398 <_obstack_memory_used@@Base+0xa10c>  // b.none
  41b344:	ldrb	w14, [x22, #104]
  41b348:	lsr	w15, w12, #15
  41b34c:	and	w13, w12, #0xff
  41b350:	and	w12, w15, #0x20
  41b354:	orr	w12, w14, w12
  41b358:	cmp	w13, #0xc
  41b35c:	strb	w12, [x22, #104]
  41b360:	b.eq	41b390 <_obstack_memory_used@@Base+0xa104>  // b.none
  41b364:	cmp	w13, #0x4
  41b368:	b.eq	41b37c <_obstack_memory_used@@Base+0xa0f0>  // b.none
  41b36c:	cmp	w13, #0x2
  41b370:	b.ne	41b384 <_obstack_memory_used@@Base+0xa0f8>  // b.any
  41b374:	orr	w11, w12, #0x10
  41b378:	b	41b394 <_obstack_memory_used@@Base+0xa108>
  41b37c:	orr	w11, w12, #0x40
  41b380:	b	41b394 <_obstack_memory_used@@Base+0xa108>
  41b384:	ldr	w11, [x11]
  41b388:	tst	w11, #0x3ff00
  41b38c:	b.eq	41b398 <_obstack_memory_used@@Base+0xa10c>  // b.none
  41b390:	orr	w11, w12, #0x80
  41b394:	strb	w11, [x22, #104]
  41b398:	subs	x8, x8, #0x1
  41b39c:	add	x10, x10, #0x8
  41b3a0:	b.ne	41b32c <_obstack_memory_used@@Base+0xa0a0>  // b.any
  41b3a4:	mov	x0, x20
  41b3a8:	mov	x1, x22
  41b3ac:	mov	x2, x21
  41b3b0:	bl	418bb0 <_obstack_memory_used@@Base+0x7924>
  41b3b4:	cbnz	w0, 41b3e8 <_obstack_memory_used@@Base+0xa15c>
  41b3b8:	mov	x0, x22
  41b3bc:	ldp	x20, x19, [sp, #48]
  41b3c0:	ldp	x22, x21, [sp, #32]
  41b3c4:	ldp	x24, x23, [sp, #16]
  41b3c8:	ldp	x29, x30, [sp], #64
  41b3cc:	ret
  41b3d0:	mov	x22, xzr
  41b3d4:	str	wzr, [x19]
  41b3d8:	b	41b3b8 <_obstack_memory_used@@Base+0xa12c>
  41b3dc:	mov	x0, x22
  41b3e0:	bl	402be0 <free@plt>
  41b3e4:	b	41b3f0 <_obstack_memory_used@@Base+0xa164>
  41b3e8:	mov	x0, x22
  41b3ec:	bl	4143a0 <_obstack_memory_used@@Base+0x3114>
  41b3f0:	mov	x22, xzr
  41b3f4:	mov	w8, #0xc                   	// #12
  41b3f8:	str	w8, [x19]
  41b3fc:	b	41b3b8 <_obstack_memory_used@@Base+0xa12c>
  41b400:	stp	x29, x30, [sp, #-48]!
  41b404:	stp	x22, x21, [sp, #16]
  41b408:	stp	x20, x19, [sp, #32]
  41b40c:	ldr	x8, [x0]
  41b410:	mov	x29, sp
  41b414:	add	x9, x8, x1, lsl #4
  41b418:	ldrb	w10, [x9, #8]
  41b41c:	cmp	w10, #0x7
  41b420:	b.eq	41b5ec <_obstack_memory_used@@Base+0xa360>  // b.none
  41b424:	ldr	w9, [x2, #144]
  41b428:	cmp	w9, #0x1
  41b42c:	b.eq	41b470 <_obstack_memory_used@@Base+0xa1e4>  // b.none
  41b430:	ldr	x11, [x2, #48]
  41b434:	add	x12, x3, #0x1
  41b438:	cmp	x12, x11
  41b43c:	b.ge	41b470 <_obstack_memory_used@@Base+0xa1e4>  // b.tcont
  41b440:	ldr	x13, [x2, #16]
  41b444:	sub	w20, w11, w3
  41b448:	sub	x12, x11, x3
  41b44c:	mov	w11, #0x1                   	// #1
  41b450:	add	x13, x13, x3, lsl #2
  41b454:	ldr	w14, [x13, x11, lsl #2]
  41b458:	cmn	w14, #0x1
  41b45c:	b.ne	41b4fc <_obstack_memory_used@@Base+0xa270>  // b.any
  41b460:	add	x11, x11, #0x1
  41b464:	cmp	x12, x11
  41b468:	b.ne	41b454 <_obstack_memory_used@@Base+0xa1c8>  // b.any
  41b46c:	b	41b474 <_obstack_memory_used@@Base+0xa1e8>
  41b470:	mov	w20, #0x1                   	// #1
  41b474:	cmp	w10, #0x5
  41b478:	b.ne	41b4b4 <_obstack_memory_used@@Base+0xa228>  // b.any
  41b47c:	cmp	w20, #0x2
  41b480:	b.lt	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.tstop
  41b484:	ldr	x8, [x0, #216]
  41b488:	tbnz	w8, #6, 41b49c <_obstack_memory_used@@Base+0xa210>
  41b48c:	ldr	x9, [x2, #8]
  41b490:	ldrb	w9, [x9, x3]
  41b494:	cmp	w9, #0xa
  41b498:	b.eq	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.none
  41b49c:	tbz	w8, #7, 41b4ac <_obstack_memory_used@@Base+0xa220>
  41b4a0:	ldr	x8, [x2, #8]
  41b4a4:	ldrb	w8, [x8, x3]
  41b4a8:	cbz	w8, 41b5c4 <_obstack_memory_used@@Base+0xa338>
  41b4ac:	mov	w0, w20
  41b4b0:	b	41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b4b4:	cmp	w10, #0x6
  41b4b8:	mov	w0, wzr
  41b4bc:	b.ne	41b5c8 <_obstack_memory_used@@Base+0xa33c>  // b.any
  41b4c0:	cmp	w20, #0x2
  41b4c4:	b.lt	41b5c8 <_obstack_memory_used@@Base+0xa33c>  // b.tstop
  41b4c8:	lsl	x10, x1, #4
  41b4cc:	ldr	x21, [x8, x10]
  41b4d0:	ldr	x8, [x21, #64]
  41b4d4:	cbnz	x8, 41b4e8 <_obstack_memory_used@@Base+0xa25c>
  41b4d8:	ldr	x10, [x21, #72]
  41b4dc:	cbnz	x10, 41b4e8 <_obstack_memory_used@@Base+0xa25c>
  41b4e0:	ldr	x10, [x21, #40]
  41b4e4:	cbz	x10, 41b5e4 <_obstack_memory_used@@Base+0xa358>
  41b4e8:	cmp	w9, #0x1
  41b4ec:	b.ne	41b504 <_obstack_memory_used@@Base+0xa278>  // b.any
  41b4f0:	ldr	x9, [x2, #8]
  41b4f4:	ldrb	w19, [x9, x3]
  41b4f8:	b	41b50c <_obstack_memory_used@@Base+0xa280>
  41b4fc:	mov	w20, w11
  41b500:	b	41b474 <_obstack_memory_used@@Base+0xa1e8>
  41b504:	ldr	x9, [x2, #16]
  41b508:	ldr	w19, [x9, x3, lsl #2]
  41b50c:	ldr	x9, [x21, #40]
  41b510:	cmp	x9, #0x1
  41b514:	b.lt	41b538 <_obstack_memory_used@@Base+0xa2ac>  // b.tstop
  41b518:	ldr	x10, [x21]
  41b51c:	mov	x11, xzr
  41b520:	ldr	w12, [x10, x11, lsl #2]
  41b524:	cmp	w19, w12
  41b528:	b.eq	41b5b0 <_obstack_memory_used@@Base+0xa324>  // b.none
  41b52c:	add	x11, x11, #0x1
  41b530:	cmp	x11, x9
  41b534:	b.lt	41b520 <_obstack_memory_used@@Base+0xa294>  // b.tstop
  41b538:	ldr	x9, [x21, #72]
  41b53c:	cmp	x9, #0x1
  41b540:	b.lt	41b570 <_obstack_memory_used@@Base+0xa2e4>  // b.tstop
  41b544:	mov	x22, xzr
  41b548:	ldr	x8, [x21, #24]
  41b54c:	mov	w0, w19
  41b550:	ldr	x1, [x8, x22, lsl #3]
  41b554:	bl	4028e0 <iswctype@plt>
  41b558:	cbnz	w0, 41b5b0 <_obstack_memory_used@@Base+0xa324>
  41b55c:	ldr	x8, [x21, #72]
  41b560:	add	x22, x22, #0x1
  41b564:	cmp	x22, x8
  41b568:	b.lt	41b548 <_obstack_memory_used@@Base+0xa2bc>  // b.tstop
  41b56c:	ldr	x8, [x21, #64]
  41b570:	cmp	x8, #0x1
  41b574:	b.lt	41b5a8 <_obstack_memory_used@@Base+0xa31c>  // b.tstop
  41b578:	ldr	x9, [x21, #8]
  41b57c:	mov	x10, xzr
  41b580:	ldr	w11, [x9, x10, lsl #2]
  41b584:	cmp	w11, w19
  41b588:	b.hi	41b59c <_obstack_memory_used@@Base+0xa310>  // b.pmore
  41b58c:	ldr	x11, [x21, #16]
  41b590:	ldr	w11, [x11, x10, lsl #2]
  41b594:	cmp	w19, w11
  41b598:	b.ls	41b5b0 <_obstack_memory_used@@Base+0xa324>  // b.plast
  41b59c:	add	x10, x10, #0x1
  41b5a0:	cmp	x10, x8
  41b5a4:	b.lt	41b580 <_obstack_memory_used@@Base+0xa2f4>  // b.tstop
  41b5a8:	mov	w0, wzr
  41b5ac:	b	41b5b4 <_obstack_memory_used@@Base+0xa328>
  41b5b0:	mov	w0, w20
  41b5b4:	ldrb	w8, [x21, #32]
  41b5b8:	tbz	w8, #0, 41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b5bc:	cmp	w0, #0x0
  41b5c0:	b.le	41b5d8 <_obstack_memory_used@@Base+0xa34c>
  41b5c4:	mov	w0, wzr
  41b5c8:	ldp	x20, x19, [sp, #32]
  41b5cc:	ldp	x22, x21, [sp, #16]
  41b5d0:	ldp	x29, x30, [sp], #48
  41b5d4:	ret
  41b5d8:	cmp	w20, #0x1
  41b5dc:	csinc	w0, w20, wzr, gt
  41b5e0:	b	41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b5e4:	mov	w19, wzr
  41b5e8:	b	41b50c <_obstack_memory_used@@Base+0xa280>
  41b5ec:	ldr	x8, [x2, #8]
  41b5f0:	ldrb	w10, [x8, x3]
  41b5f4:	cmp	w10, #0xc2
  41b5f8:	b.cc	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.lo, b.ul, b.last
  41b5fc:	ldr	x9, [x2, #88]
  41b600:	add	x11, x3, #0x2
  41b604:	cmp	x11, x9
  41b608:	b.gt	41b5c4 <_obstack_memory_used@@Base+0xa338>
  41b60c:	add	x11, x3, x8
  41b610:	ldrb	w11, [x11, #1]
  41b614:	cmp	w10, #0xdf
  41b618:	b.hi	41b638 <_obstack_memory_used@@Base+0xa3ac>  // b.pmore
  41b61c:	sxtb	w8, w11
  41b620:	cmp	w11, #0xbf
  41b624:	mov	w9, #0xffffffff            	// #-1
  41b628:	ccmp	w8, w9, #0x0, ls  // ls = plast
  41b62c:	mov	w8, #0x2                   	// #2
  41b630:	csel	w0, wzr, w8, gt
  41b634:	b	41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b638:	cmp	w10, #0xef
  41b63c:	b.hi	41b658 <_obstack_memory_used@@Base+0xa3cc>  // b.pmore
  41b640:	cmp	w10, #0xe0
  41b644:	mov	w10, #0x3                   	// #3
  41b648:	b.ne	41b6b4 <_obstack_memory_used@@Base+0xa428>  // b.any
  41b64c:	cmp	w11, #0xa0
  41b650:	b.cc	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.lo, b.ul, b.last
  41b654:	b	41b6b4 <_obstack_memory_used@@Base+0xa428>
  41b658:	cmp	w10, #0xf7
  41b65c:	b.hi	41b678 <_obstack_memory_used@@Base+0xa3ec>  // b.pmore
  41b660:	cmp	w10, #0xf0
  41b664:	mov	w10, #0x4                   	// #4
  41b668:	b.ne	41b6b4 <_obstack_memory_used@@Base+0xa428>  // b.any
  41b66c:	cmp	w11, #0x90
  41b670:	b.cc	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.lo, b.ul, b.last
  41b674:	b	41b6b4 <_obstack_memory_used@@Base+0xa428>
  41b678:	cmp	w10, #0xfb
  41b67c:	b.hi	41b698 <_obstack_memory_used@@Base+0xa40c>  // b.pmore
  41b680:	cmp	w10, #0xf8
  41b684:	mov	w10, #0x5                   	// #5
  41b688:	b.ne	41b6b4 <_obstack_memory_used@@Base+0xa428>  // b.any
  41b68c:	cmp	w11, #0x88
  41b690:	b.cc	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.lo, b.ul, b.last
  41b694:	b	41b6b4 <_obstack_memory_used@@Base+0xa428>
  41b698:	cmp	w10, #0xfd
  41b69c:	b.hi	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.pmore
  41b6a0:	cmp	w10, #0xfc
  41b6a4:	mov	w10, #0x6                   	// #6
  41b6a8:	b.ne	41b6b4 <_obstack_memory_used@@Base+0xa428>  // b.any
  41b6ac:	cmp	w11, #0x84
  41b6b0:	b.cc	41b5c4 <_obstack_memory_used@@Base+0xa338>  // b.lo, b.ul, b.last
  41b6b4:	add	x11, x10, x3
  41b6b8:	cmp	x11, x9
  41b6bc:	b.gt	41b5c4 <_obstack_memory_used@@Base+0xa338>
  41b6c0:	add	x8, x3, x8
  41b6c4:	sub	x9, x10, #0x1
  41b6c8:	add	x8, x8, #0x1
  41b6cc:	ldrb	w11, [x8]
  41b6d0:	mov	w0, wzr
  41b6d4:	sxtb	w12, w11
  41b6d8:	tbz	w12, #31, 41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b6dc:	cmp	w11, #0xbf
  41b6e0:	b.hi	41b5c8 <_obstack_memory_used@@Base+0xa33c>  // b.pmore
  41b6e4:	subs	x9, x9, #0x1
  41b6e8:	add	x8, x8, #0x1
  41b6ec:	b.ne	41b6cc <_obstack_memory_used@@Base+0xa440>  // b.any
  41b6f0:	mov	w0, w10
  41b6f4:	b	41b5c8 <_obstack_memory_used@@Base+0xa33c>
  41b6f8:	stp	x29, x30, [sp, #-32]!
  41b6fc:	str	x19, [sp, #16]
  41b700:	ldr	w19, [x1, #8]
  41b704:	mov	x29, sp
  41b708:	and	w8, w19, #0xff
  41b70c:	sub	w10, w8, #0x1
  41b710:	cmp	w10, #0x6
  41b714:	mov	w8, wzr
  41b718:	b.hi	41b7d8 <_obstack_memory_used@@Base+0xa54c>  // b.pmore
  41b71c:	ldr	x9, [x0, #8]
  41b720:	adrp	x11, 41f000 <_obstack_memory_used@@Base+0xdd74>
  41b724:	add	x11, x11, #0x38
  41b728:	ldrb	w9, [x9, x2]
  41b72c:	adr	x12, 41b73c <_obstack_memory_used@@Base+0xa4b0>
  41b730:	ldrb	w13, [x11, x10]
  41b734:	add	x12, x12, x13, lsl #2
  41b738:	br	x12
  41b73c:	ldrb	w8, [x1]
  41b740:	cmp	w8, w9
  41b744:	b.eq	41b798 <_obstack_memory_used@@Base+0xa50c>  // b.none
  41b748:	b	41b7cc <_obstack_memory_used@@Base+0xa540>
  41b74c:	ldr	x8, [x1]
  41b750:	lsr	x10, x9, #3
  41b754:	and	x10, x10, #0x18
  41b758:	ldr	x8, [x8, x10]
  41b75c:	lsr	x8, x8, x9
  41b760:	tbnz	w8, #0, 41b798 <_obstack_memory_used@@Base+0xa50c>
  41b764:	b	41b7cc <_obstack_memory_used@@Base+0xa540>
  41b768:	sxtb	w8, w9
  41b76c:	tbnz	w8, #31, 41b7cc <_obstack_memory_used@@Base+0xa540>
  41b770:	cbz	w9, 41b78c <_obstack_memory_used@@Base+0xa500>
  41b774:	cmp	w9, #0xa
  41b778:	b.ne	41b798 <_obstack_memory_used@@Base+0xa50c>  // b.any
  41b77c:	ldr	x8, [x0, #152]
  41b780:	ldrb	w8, [x8, #216]
  41b784:	tbnz	w8, #6, 41b798 <_obstack_memory_used@@Base+0xa50c>
  41b788:	b	41b7cc <_obstack_memory_used@@Base+0xa540>
  41b78c:	ldr	x8, [x0, #152]
  41b790:	ldrb	w8, [x8, #216]
  41b794:	tbnz	w8, #7, 41b7cc <_obstack_memory_used@@Base+0xa540>
  41b798:	tst	w19, #0x3ff00
  41b79c:	b.eq	41b7d4 <_obstack_memory_used@@Base+0xa548>  // b.none
  41b7a0:	ldr	w8, [x0, #160]
  41b7a4:	mov	x1, x2
  41b7a8:	mov	w2, w8
  41b7ac:	bl	419a28 <_obstack_memory_used@@Base+0x879c>
  41b7b0:	and	w8, w0, #0x1
  41b7b4:	tbz	w19, #10, 41b7bc <_obstack_memory_used@@Base+0xa530>
  41b7b8:	cbz	w8, 41b7d8 <_obstack_memory_used@@Base+0xa54c>
  41b7bc:	tbz	w19, #11, 41b7c4 <_obstack_memory_used@@Base+0xa538>
  41b7c0:	cbnz	w8, 41b7cc <_obstack_memory_used@@Base+0xa540>
  41b7c4:	tbz	w19, #13, 41b7e8 <_obstack_memory_used@@Base+0xa55c>
  41b7c8:	tbnz	w0, #1, 41b7e8 <_obstack_memory_used@@Base+0xa55c>
  41b7cc:	mov	w8, wzr
  41b7d0:	b	41b7d8 <_obstack_memory_used@@Base+0xa54c>
  41b7d4:	mov	w8, #0x1                   	// #1
  41b7d8:	mov	w0, w8
  41b7dc:	ldr	x19, [sp, #16]
  41b7e0:	ldp	x29, x30, [sp], #32
  41b7e4:	ret
  41b7e8:	tst	w19, #0x8000
  41b7ec:	cset	w8, eq  // eq = none
  41b7f0:	and	w9, w0, #0x8
  41b7f4:	orr	w0, w8, w9, lsr #3
  41b7f8:	b	41b7dc <_obstack_memory_used@@Base+0xa550>
  41b7fc:	sub	sp, sp, #0xa0
  41b800:	stp	x29, x30, [sp, #64]
  41b804:	stp	x28, x27, [sp, #80]
  41b808:	stp	x26, x25, [sp, #96]
  41b80c:	stp	x24, x23, [sp, #112]
  41b810:	stp	x22, x21, [sp, #128]
  41b814:	stp	x20, x19, [sp, #144]
  41b818:	ldp	x22, x21, [x1, #16]
  41b81c:	mov	w8, #0x1                   	// #1
  41b820:	mov	x20, x0
  41b824:	dup	v0.2d, x8
  41b828:	mov	w0, #0x8                   	// #8
  41b82c:	add	x29, sp, #0x40
  41b830:	mov	x19, x1
  41b834:	str	q0, [sp, #32]
  41b838:	bl	4028f0 <malloc@plt>
  41b83c:	str	x0, [sp, #48]
  41b840:	cbz	x0, 41ba3c <_obstack_memory_used@@Base+0xa7b0>
  41b844:	str	x22, [x0]
  41b848:	add	x3, sp, #0x20
  41b84c:	mov	x0, x20
  41b850:	mov	x1, x19
  41b854:	mov	x2, x21
  41b858:	bl	41baf0 <_obstack_memory_used@@Base+0xa864>
  41b85c:	cbnz	w0, 41b9e0 <_obstack_memory_used@@Base+0xa754>
  41b860:	mov	w10, wzr
  41b864:	add	x8, x19, #0x20
  41b868:	str	x8, [sp, #16]
  41b86c:	mov	x11, x21
  41b870:	subs	x21, x21, #0x1
  41b874:	b.lt	41b9f0 <_obstack_memory_used@@Base+0xa764>  // b.tstop
  41b878:	ldr	x0, [x19]
  41b87c:	ldr	w9, [x20, #224]
  41b880:	ldr	x8, [x0, x11, lsl #3]
  41b884:	cmp	x8, #0x0
  41b888:	csinc	w10, wzr, w10, ne  // ne = any
  41b88c:	cmp	w10, w9
  41b890:	b.gt	41ba20 <_obstack_memory_used@@Base+0xa794>
  41b894:	str	xzr, [sp, #40]
  41b898:	ldr	x8, [x20, #184]
  41b89c:	str	x11, [sp, #24]
  41b8a0:	str	w10, [sp, #12]
  41b8a4:	ldr	x28, [x8, x21, lsl #3]
  41b8a8:	cbz	x28, 41b9c4 <_obstack_memory_used@@Base+0xa738>
  41b8ac:	ldr	x8, [x28, #40]
  41b8b0:	cmp	x8, #0x1
  41b8b4:	b.lt	41b9c4 <_obstack_memory_used@@Base+0xa738>  // b.tstop
  41b8b8:	ldr	x22, [x20, #152]
  41b8bc:	mov	x26, xzr
  41b8c0:	ldr	x8, [x28, #48]
  41b8c4:	ldr	x23, [x8, x26, lsl #3]
  41b8c8:	ldr	x8, [x22]
  41b8cc:	add	x8, x8, x23, lsl #4
  41b8d0:	ldrb	w8, [x8, #10]
  41b8d4:	tbnz	w8, #4, 41b91c <_obstack_memory_used@@Base+0xa690>
  41b8d8:	ldr	x8, [x22]
  41b8dc:	mov	x0, x20
  41b8e0:	mov	x2, x21
  41b8e4:	add	x1, x8, x23, lsl #4
  41b8e8:	bl	41b6f8 <_obstack_memory_used@@Base+0xa46c>
  41b8ec:	tbz	w0, #0, 41b9b4 <_obstack_memory_used@@Base+0xa728>
  41b8f0:	ldr	x8, [x19]
  41b8f4:	ldr	x9, [sp, #24]
  41b8f8:	ldr	x8, [x8, x9, lsl #3]
  41b8fc:	cbz	x8, 41b9b4 <_obstack_memory_used@@Base+0xa728>
  41b900:	ldr	x9, [x22, #24]
  41b904:	add	x0, x8, #0x8
  41b908:	ldr	x1, [x9, x23, lsl #3]
  41b90c:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41b910:	cbz	x0, 41b9b4 <_obstack_memory_used@@Base+0xa728>
  41b914:	mov	w24, #0x1                   	// #1
  41b918:	b	41b978 <_obstack_memory_used@@Base+0xa6ec>
  41b91c:	ldr	x25, [x20, #152]
  41b920:	ldr	x27, [x19, #24]
  41b924:	mov	x1, x23
  41b928:	mov	x2, x20
  41b92c:	mov	x0, x25
  41b930:	mov	x3, x21
  41b934:	bl	41b400 <_obstack_memory_used@@Base+0xa174>
  41b938:	mov	w24, w0
  41b93c:	cmp	w0, #0x1
  41b940:	b.lt	41b974 <_obstack_memory_used@@Base+0xa6e8>  // b.tstop
  41b944:	add	x8, x21, w24, uxtw
  41b948:	cmp	x8, x27
  41b94c:	b.gt	41b978 <_obstack_memory_used@@Base+0xa6ec>
  41b950:	ldr	x9, [x19]
  41b954:	ldr	x8, [x9, x8, lsl #3]
  41b958:	cbz	x8, 41b8d8 <_obstack_memory_used@@Base+0xa64c>
  41b95c:	ldr	x9, [x25, #24]
  41b960:	add	x0, x8, #0x8
  41b964:	ldr	x1, [x9, x23, lsl #3]
  41b968:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41b96c:	cbnz	x0, 41b978 <_obstack_memory_used@@Base+0xa6ec>
  41b970:	b	41b8d8 <_obstack_memory_used@@Base+0xa64c>
  41b974:	cbz	w24, 41b8d8 <_obstack_memory_used@@Base+0xa64c>
  41b978:	ldr	x8, [x19, #40]
  41b97c:	cbz	x8, 41b9a4 <_obstack_memory_used@@Base+0xa718>
  41b980:	ldr	x8, [x22, #24]
  41b984:	ldr	x1, [sp, #16]
  41b988:	add	x3, x21, w24, sxtw
  41b98c:	mov	x0, x20
  41b990:	ldr	x2, [x8, x23, lsl #3]
  41b994:	mov	x4, x23
  41b998:	mov	x5, x21
  41b99c:	bl	41c4a8 <_obstack_memory_used@@Base+0xb21c>
  41b9a0:	tbnz	w0, #0, 41b9b4 <_obstack_memory_used@@Base+0xa728>
  41b9a4:	add	x0, sp, #0x20
  41b9a8:	mov	x1, x23
  41b9ac:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41b9b0:	tbz	w0, #0, 41b9e8 <_obstack_memory_used@@Base+0xa75c>
  41b9b4:	ldr	x8, [x28, #40]
  41b9b8:	add	x26, x26, #0x1
  41b9bc:	cmp	x26, x8
  41b9c0:	b.lt	41b8c0 <_obstack_memory_used@@Base+0xa634>  // b.tstop
  41b9c4:	add	x3, sp, #0x20
  41b9c8:	mov	x0, x20
  41b9cc:	mov	x1, x19
  41b9d0:	mov	x2, x21
  41b9d4:	bl	41baf0 <_obstack_memory_used@@Base+0xa864>
  41b9d8:	ldr	w10, [sp, #12]
  41b9dc:	cbz	w0, 41b86c <_obstack_memory_used@@Base+0xa5e0>
  41b9e0:	mov	w23, w0
  41b9e4:	b	41b9f4 <_obstack_memory_used@@Base+0xa768>
  41b9e8:	mov	w23, #0xc                   	// #12
  41b9ec:	b	41b9f4 <_obstack_memory_used@@Base+0xa768>
  41b9f0:	mov	w23, wzr
  41b9f4:	ldr	x0, [sp, #48]
  41b9f8:	bl	402be0 <free@plt>
  41b9fc:	mov	w0, w23
  41ba00:	ldp	x20, x19, [sp, #144]
  41ba04:	ldp	x22, x21, [sp, #128]
  41ba08:	ldp	x24, x23, [sp, #112]
  41ba0c:	ldp	x26, x25, [sp, #96]
  41ba10:	ldp	x28, x27, [sp, #80]
  41ba14:	ldp	x29, x30, [sp, #64]
  41ba18:	add	sp, sp, #0xa0
  41ba1c:	ret
  41ba20:	lsl	x2, x11, #3
  41ba24:	mov	w1, wzr
  41ba28:	bl	4029d0 <memset@plt>
  41ba2c:	ldr	x0, [sp, #48]
  41ba30:	bl	402be0 <free@plt>
  41ba34:	mov	w23, wzr
  41ba38:	b	41b9fc <_obstack_memory_used@@Base+0xa770>
  41ba3c:	stp	xzr, xzr, [sp, #32]
  41ba40:	mov	w23, #0xc                   	// #12
  41ba44:	b	41b9fc <_obstack_memory_used@@Base+0xa770>
  41ba48:	sub	sp, sp, #0x50
  41ba4c:	cmp	x3, #0x1
  41ba50:	stp	x29, x30, [sp, #32]
  41ba54:	stp	x22, x21, [sp, #48]
  41ba58:	stp	x20, x19, [sp, #64]
  41ba5c:	add	x29, sp, #0x20
  41ba60:	b.lt	41bad8 <_obstack_memory_used@@Base+0xa84c>  // b.tstop
  41ba64:	mov	x19, x3
  41ba68:	mov	x20, x2
  41ba6c:	mov	x21, x1
  41ba70:	mov	x22, x0
  41ba74:	ldr	x9, [x21]
  41ba78:	ldr	x8, [x20]
  41ba7c:	cbz	x9, 41bac4 <_obstack_memory_used@@Base+0xa838>
  41ba80:	cbz	x8, 41bac8 <_obstack_memory_used@@Base+0xa83c>
  41ba84:	add	x1, x9, #0x8
  41ba88:	add	x2, x8, #0x8
  41ba8c:	mov	x0, sp
  41ba90:	bl	41a43c <_obstack_memory_used@@Base+0x91b0>
  41ba94:	stur	w0, [x29, #-4]
  41ba98:	cbnz	w0, 41badc <_obstack_memory_used@@Base+0xa850>
  41ba9c:	sub	x0, x29, #0x4
  41baa0:	mov	x2, sp
  41baa4:	mov	x1, x22
  41baa8:	bl	41b210 <_obstack_memory_used@@Base+0x9f84>
  41baac:	str	x0, [x21]
  41bab0:	ldr	x0, [sp, #16]
  41bab4:	bl	402be0 <free@plt>
  41bab8:	ldur	w0, [x29, #-4]
  41babc:	cbz	w0, 41bac8 <_obstack_memory_used@@Base+0xa83c>
  41bac0:	b	41badc <_obstack_memory_used@@Base+0xa850>
  41bac4:	str	x8, [x21]
  41bac8:	subs	x19, x19, #0x1
  41bacc:	add	x20, x20, #0x8
  41bad0:	add	x21, x21, #0x8
  41bad4:	b.ne	41ba74 <_obstack_memory_used@@Base+0xa7e8>  // b.any
  41bad8:	mov	w0, wzr
  41badc:	ldp	x20, x19, [sp, #64]
  41bae0:	ldp	x22, x21, [sp, #48]
  41bae4:	ldp	x29, x30, [sp, #32]
  41bae8:	add	sp, sp, #0x50
  41baec:	ret
  41baf0:	sub	sp, sp, #0xd0
  41baf4:	stp	x29, x30, [sp, #112]
  41baf8:	stp	x28, x27, [sp, #128]
  41bafc:	stp	x26, x25, [sp, #144]
  41bb00:	stp	x24, x23, [sp, #160]
  41bb04:	stp	x22, x21, [sp, #176]
  41bb08:	stp	x20, x19, [sp, #192]
  41bb0c:	ldr	x24, [x0, #152]
  41bb10:	str	wzr, [sp, #44]
  41bb14:	ldr	x8, [x0, #184]
  41bb18:	mov	x19, x2
  41bb1c:	mov	x20, x1
  41bb20:	add	x29, sp, #0x70
  41bb24:	ldr	x28, [x8, x2, lsl #3]
  41bb28:	ldr	x8, [x3, #8]
  41bb2c:	add	x9, x28, #0x8
  41bb30:	cmp	x28, #0x0
  41bb34:	csel	x9, xzr, x9, eq  // eq = none
  41bb38:	stp	x9, x0, [sp, #24]
  41bb3c:	cbz	x8, 41bdf8 <_obstack_memory_used@@Base+0xab6c>
  41bb40:	mov	x23, x3
  41bb44:	cbz	x28, 41be0c <_obstack_memory_used@@Base+0xab80>
  41bb48:	add	x0, sp, #0x30
  41bb4c:	mov	x1, x24
  41bb50:	mov	x2, x23
  41bb54:	str	wzr, [sp, #48]
  41bb58:	bl	41b210 <_obstack_memory_used@@Base+0x9f84>
  41bb5c:	ldr	w26, [sp, #48]
  41bb60:	cbnz	w26, 41c0c0 <_obstack_memory_used@@Base+0xae34>
  41bb64:	mov	x25, x0
  41bb68:	ldr	x8, [x25, #56]!
  41bb6c:	mov	x27, x0
  41bb70:	cbnz	x8, 41bbe0 <_obstack_memory_used@@Base+0xa954>
  41bb74:	ldr	x8, [x23, #8]
  41bb78:	lsl	x0, x8, #3
  41bb7c:	stp	x8, xzr, [x27, #56]
  41bb80:	bl	4028f0 <malloc@plt>
  41bb84:	cmp	x0, #0x0
  41bb88:	mov	w26, #0xc                   	// #12
  41bb8c:	csel	w8, w26, wzr, eq  // eq = none
  41bb90:	str	x0, [x27, #72]
  41bb94:	str	w8, [sp, #48]
  41bb98:	cbz	x0, 41c0c0 <_obstack_memory_used@@Base+0xae34>
  41bb9c:	ldr	x8, [x23, #8]
  41bba0:	cmp	x8, #0x1
  41bba4:	b.lt	41bbe0 <_obstack_memory_used@@Base+0xa954>  // b.tstop
  41bba8:	mov	x21, xzr
  41bbac:	mov	w22, #0x18                  	// #24
  41bbb0:	ldr	x8, [x23, #16]
  41bbb4:	ldr	x9, [x24, #56]
  41bbb8:	mov	x0, x25
  41bbbc:	ldr	x8, [x8, x21, lsl #3]
  41bbc0:	madd	x1, x8, x22, x9
  41bbc4:	bl	418498 <_obstack_memory_used@@Base+0x720c>
  41bbc8:	cbnz	w0, 41c0d0 <_obstack_memory_used@@Base+0xae44>
  41bbcc:	ldr	x8, [x23, #8]
  41bbd0:	add	x21, x21, #0x1
  41bbd4:	cmp	x21, x8
  41bbd8:	b.lt	41bbb0 <_obstack_memory_used@@Base+0xa924>  // b.tstop
  41bbdc:	str	wzr, [sp, #48]
  41bbe0:	ldr	x1, [sp, #24]
  41bbe4:	mov	x0, x23
  41bbe8:	mov	x2, x25
  41bbec:	bl	41c0ec <_obstack_memory_used@@Base+0xae60>
  41bbf0:	str	w0, [sp, #44]
  41bbf4:	cbnz	w0, 41c0e4 <_obstack_memory_used@@Base+0xae58>
  41bbf8:	ldr	x8, [x20, #40]
  41bbfc:	cbz	x8, 41be0c <_obstack_memory_used@@Base+0xab80>
  41bc00:	cmp	x8, #0x1
  41bc04:	str	x28, [sp, #8]
  41bc08:	b.lt	41be04 <_obstack_memory_used@@Base+0xab78>  // b.tstop
  41bc0c:	ldr	x8, [sp, #32]
  41bc10:	mov	x27, xzr
  41bc14:	mov	w13, #0x18                  	// #24
  41bc18:	ldr	x28, [x8, #216]
  41bc1c:	ldr	x8, [x20, #48]
  41bc20:	mov	w9, #0x28                  	// #40
  41bc24:	ldr	x8, [x8, x27, lsl #3]
  41bc28:	madd	x9, x8, x9, x28
  41bc2c:	ldr	x9, [x9, #16]
  41bc30:	cmp	x9, x19
  41bc34:	b.ge	41bc4c <_obstack_memory_used@@Base+0xa9c0>  // b.tcont
  41bc38:	mov	w9, #0x28                  	// #40
  41bc3c:	madd	x9, x8, x9, x28
  41bc40:	ldr	x9, [x9, #8]
  41bc44:	cmp	x9, x19
  41bc48:	b.ge	41bc60 <_obstack_memory_used@@Base+0xa9d4>  // b.tcont
  41bc4c:	ldr	x8, [x20, #40]
  41bc50:	add	x27, x27, #0x1
  41bc54:	cmp	x27, x8
  41bc58:	b.lt	41bc1c <_obstack_memory_used@@Base+0xa990>  // b.tstop
  41bc5c:	b	41be04 <_obstack_memory_used@@Base+0xab78>
  41bc60:	mov	w9, #0x28                  	// #40
  41bc64:	madd	x8, x8, x9, x28
  41bc68:	ldr	x10, [x8]
  41bc6c:	ldr	x9, [x24]
  41bc70:	ldr	x11, [x8, #24]
  41bc74:	lsl	x8, x10, #4
  41bc78:	ldr	x21, [x9, x8]
  41bc7c:	ldr	x8, [x23, #8]
  41bc80:	cmp	x11, x19
  41bc84:	b.ne	41bd8c <_obstack_memory_used@@Base+0xab00>  // b.any
  41bc88:	cmp	x8, #0x1
  41bc8c:	b.lt	41bc4c <_obstack_memory_used@@Base+0xa9c0>  // b.tstop
  41bc90:	ldr	x10, [x23, #16]
  41bc94:	mov	x25, #0xffffffffffffffff    	// #-1
  41bc98:	mov	x1, #0xffffffffffffffff    	// #-1
  41bc9c:	ldr	x11, [x10]
  41bca0:	add	x12, x9, x11, lsl #4
  41bca4:	ldrb	w12, [x12, #8]
  41bca8:	cmp	w12, #0x9
  41bcac:	b.eq	41bccc <_obstack_memory_used@@Base+0xaa40>  // b.none
  41bcb0:	cmp	w12, #0x8
  41bcb4:	b.ne	41bcdc <_obstack_memory_used@@Base+0xaa50>  // b.any
  41bcb8:	lsl	x12, x11, #4
  41bcbc:	ldr	x12, [x9, x12]
  41bcc0:	cmp	x21, x12
  41bcc4:	csel	x1, x11, x1, eq  // eq = none
  41bcc8:	b	41bcdc <_obstack_memory_used@@Base+0xaa50>
  41bccc:	lsl	x12, x11, #4
  41bcd0:	ldr	x12, [x9, x12]
  41bcd4:	cmp	x21, x12
  41bcd8:	csel	x25, x11, x25, eq  // eq = none
  41bcdc:	subs	x8, x8, #0x1
  41bce0:	add	x10, x10, #0x8
  41bce4:	b.ne	41bc9c <_obstack_memory_used@@Base+0xaa10>  // b.any
  41bce8:	tbnz	x1, #63, 41bd04 <_obstack_memory_used@@Base+0xaa78>
  41bcec:	ldr	x3, [sp, #24]
  41bcf0:	mov	x0, x24
  41bcf4:	mov	x2, x23
  41bcf8:	bl	41c2b4 <_obstack_memory_used@@Base+0xb028>
  41bcfc:	mov	w13, #0x18                  	// #24
  41bd00:	cbnz	w0, 41c0bc <_obstack_memory_used@@Base+0xae30>
  41bd04:	tbnz	x25, #63, 41bc4c <_obstack_memory_used@@Base+0xa9c0>
  41bd08:	ldr	x8, [x23, #8]
  41bd0c:	cmp	x8, #0x1
  41bd10:	str	x8, [sp, #16]
  41bd14:	b.lt	41bc4c <_obstack_memory_used@@Base+0xa9c0>  // b.tstop
  41bd18:	mov	x21, xzr
  41bd1c:	ldr	x8, [x23, #16]
  41bd20:	mov	x1, x25
  41bd24:	mov	w22, #0x18                  	// #24
  41bd28:	ldr	x26, [x8, x21, lsl #3]
  41bd2c:	ldr	x8, [x24, #56]
  41bd30:	madd	x0, x26, x13, x8
  41bd34:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41bd38:	cbnz	x0, 41bd74 <_obstack_memory_used@@Base+0xaae8>
  41bd3c:	ldr	x8, [x24, #48]
  41bd40:	mov	x1, x25
  41bd44:	madd	x0, x26, x22, x8
  41bd48:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41bd4c:	cbnz	x0, 41bd74 <_obstack_memory_used@@Base+0xaae8>
  41bd50:	ldr	x3, [sp, #24]
  41bd54:	mov	x0, x24
  41bd58:	mov	x1, x26
  41bd5c:	mov	x2, x23
  41bd60:	bl	41c2b4 <_obstack_memory_used@@Base+0xb028>
  41bd64:	cbnz	w0, 41c0bc <_obstack_memory_used@@Base+0xae30>
  41bd68:	ldr	x8, [x23, #8]
  41bd6c:	sub	x21, x21, #0x1
  41bd70:	str	x8, [sp, #16]
  41bd74:	ldr	x8, [sp, #16]
  41bd78:	add	x21, x21, #0x1
  41bd7c:	mov	w13, #0x18                  	// #24
  41bd80:	cmp	x21, x8
  41bd84:	b.lt	41bd1c <_obstack_memory_used@@Base+0xaa90>  // b.tstop
  41bd88:	b	41bc4c <_obstack_memory_used@@Base+0xa9c0>
  41bd8c:	cmp	x8, #0x1
  41bd90:	b.lt	41bc4c <_obstack_memory_used@@Base+0xa9c0>  // b.tstop
  41bd94:	mov	x22, xzr
  41bd98:	ldr	x10, [x23, #16]
  41bd9c:	ldr	x1, [x10, x22, lsl #3]
  41bda0:	add	x10, x9, x1, lsl #4
  41bda4:	ldr	w10, [x10, #8]
  41bda8:	and	w10, w10, #0xfe
  41bdac:	orr	w10, w10, #0x1
  41bdb0:	cmp	w10, #0x9
  41bdb4:	b.ne	41bde4 <_obstack_memory_used@@Base+0xab58>  // b.any
  41bdb8:	lsl	x10, x1, #4
  41bdbc:	ldr	x9, [x9, x10]
  41bdc0:	cmp	x21, x9
  41bdc4:	b.ne	41bde4 <_obstack_memory_used@@Base+0xab58>  // b.any
  41bdc8:	ldr	x3, [sp, #24]
  41bdcc:	mov	x0, x24
  41bdd0:	mov	x2, x23
  41bdd4:	bl	41c2b4 <_obstack_memory_used@@Base+0xb028>
  41bdd8:	cbnz	w0, 41c0bc <_obstack_memory_used@@Base+0xae30>
  41bddc:	ldr	x8, [x23, #8]
  41bde0:	mov	w13, #0x18                  	// #24
  41bde4:	add	x22, x22, #0x1
  41bde8:	cmp	x22, x8
  41bdec:	b.ge	41bc4c <_obstack_memory_used@@Base+0xa9c0>  // b.tcont
  41bdf0:	ldr	x9, [x24]
  41bdf4:	b	41bd98 <_obstack_memory_used@@Base+0xab0c>
  41bdf8:	ldr	x8, [x20]
  41bdfc:	str	xzr, [x8, x19, lsl #3]
  41be00:	b	41be2c <_obstack_memory_used@@Base+0xaba0>
  41be04:	ldr	x28, [sp, #8]
  41be08:	str	wzr, [sp, #44]
  41be0c:	add	x0, sp, #0x2c
  41be10:	mov	x1, x24
  41be14:	mov	x2, x23
  41be18:	bl	41b210 <_obstack_memory_used@@Base+0x9f84>
  41be1c:	ldr	x8, [x20]
  41be20:	str	x0, [x8, x19, lsl #3]
  41be24:	ldr	w26, [sp, #44]
  41be28:	cbnz	w26, 41c098 <_obstack_memory_used@@Base+0xae0c>
  41be2c:	cbz	x28, 41c094 <_obstack_memory_used@@Base+0xae08>
  41be30:	ldr	x8, [sp, #32]
  41be34:	ldr	x8, [x8, #184]
  41be38:	ldr	x8, [x8, x19, lsl #3]
  41be3c:	ldrb	w8, [x8, #104]
  41be40:	tbz	w8, #6, 41c094 <_obstack_memory_used@@Base+0xae08>
  41be44:	ldr	x0, [sp, #32]
  41be48:	mov	x1, x19
  41be4c:	ldr	x23, [x0, #152]
  41be50:	bl	41a5f0 <_obstack_memory_used@@Base+0x9364>
  41be54:	cmn	x0, #0x1
  41be58:	str	x0, [sp, #8]
  41be5c:	b.eq	41c090 <_obstack_memory_used@@Base+0xae04>  // b.none
  41be60:	ldr	x8, [sp, #24]
  41be64:	str	xzr, [sp, #48]
  41be68:	ldr	x8, [x8, #8]
  41be6c:	cmp	x8, #0x0
  41be70:	b.le	41c090 <_obstack_memory_used@@Base+0xae04>
  41be74:	add	x9, x20, #0x20
  41be78:	str	x9, [sp, #16]
  41be7c:	add	x9, sp, #0x30
  41be80:	mov	x21, xzr
  41be84:	add	x10, x19, #0x1
  41be88:	add	x27, x9, #0x20
  41be8c:	str	x10, [sp]
  41be90:	ldr	x9, [sp, #24]
  41be94:	ldr	x10, [x20, #16]
  41be98:	ldr	x9, [x9, #16]
  41be9c:	ldr	x28, [x9, x21, lsl #3]
  41bea0:	ldr	x9, [x23]
  41bea4:	cmp	x28, x10
  41bea8:	add	x9, x9, x28, lsl #4
  41beac:	ldrb	w9, [x9, #8]
  41beb0:	b.ne	41becc <_obstack_memory_used@@Base+0xac40>  // b.any
  41beb4:	cmp	w9, #0x4
  41beb8:	b.ne	41c064 <_obstack_memory_used@@Base+0xadd8>  // b.any
  41bebc:	ldr	x9, [x20, #24]
  41bec0:	cmp	x9, x19
  41bec4:	b.ne	41bed4 <_obstack_memory_used@@Base+0xac48>  // b.any
  41bec8:	b	41c064 <_obstack_memory_used@@Base+0xadd8>
  41becc:	cmp	w9, #0x4
  41bed0:	b.ne	41c064 <_obstack_memory_used@@Base+0xadd8>  // b.any
  41bed4:	ldr	x8, [sp, #32]
  41bed8:	ldr	x24, [sp, #8]
  41bedc:	mov	w9, #0x28                  	// #40
  41bee0:	ldr	x8, [x8, #216]
  41bee4:	madd	x25, x24, x9, x8
  41bee8:	ldr	x8, [x25]
  41beec:	cmp	x8, x28
  41bef0:	b.ne	41c04c <_obstack_memory_used@@Base+0xadc0>  // b.any
  41bef4:	ldp	x9, x8, [x25, #16]
  41bef8:	subs	x8, x8, x9
  41befc:	add	x26, x8, x19
  41bf00:	b.eq	41bf10 <_obstack_memory_used@@Base+0xac84>  // b.none
  41bf04:	ldr	x8, [x23, #24]
  41bf08:	add	x8, x8, x28, lsl #3
  41bf0c:	b	41bf20 <_obstack_memory_used@@Base+0xac94>
  41bf10:	ldr	x8, [x23, #40]
  41bf14:	mov	w9, #0x18                  	// #24
  41bf18:	madd	x8, x28, x9, x8
  41bf1c:	ldr	x8, [x8, #16]
  41bf20:	ldr	x9, [x20, #24]
  41bf24:	cmp	x26, x9
  41bf28:	b.gt	41c04c <_obstack_memory_used@@Base+0xadc0>
  41bf2c:	ldr	x9, [x20]
  41bf30:	ldr	x9, [x9, x26, lsl #3]
  41bf34:	cbz	x9, 41c04c <_obstack_memory_used@@Base+0xadc0>
  41bf38:	ldr	x22, [x8]
  41bf3c:	add	x0, x9, #0x8
  41bf40:	mov	x1, x22
  41bf44:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41bf48:	cbz	x0, 41c04c <_obstack_memory_used@@Base+0xadc0>
  41bf4c:	ldr	x0, [sp, #32]
  41bf50:	ldr	x1, [sp, #16]
  41bf54:	mov	x2, x28
  41bf58:	mov	x3, x19
  41bf5c:	mov	x4, x22
  41bf60:	mov	x5, x26
  41bf64:	bl	41c4a8 <_obstack_memory_used@@Base+0xb21c>
  41bf68:	tbnz	w0, #0, 41c04c <_obstack_memory_used@@Base+0xadc0>
  41bf6c:	ldr	x8, [sp, #48]
  41bf70:	cbnz	x8, 41bf9c <_obstack_memory_used@@Base+0xad10>
  41bf74:	ldr	x8, [x20, #48]
  41bf78:	ldp	q1, q0, [x20, #16]
  41bf7c:	ldr	q2, [x20]
  41bf80:	ldr	x1, [sp, #16]
  41bf84:	mov	x0, x27
  41bf88:	str	x8, [sp, #96]
  41bf8c:	stp	q1, q0, [sp, #64]
  41bf90:	str	q2, [sp, #48]
  41bf94:	bl	418824 <_obstack_memory_used@@Base+0x7598>
  41bf98:	cbnz	w0, 41c0c8 <_obstack_memory_used@@Base+0xae3c>
  41bf9c:	mov	x0, x27
  41bfa0:	mov	x1, x24
  41bfa4:	stp	x28, x19, [sp, #64]
  41bfa8:	bl	41861c <_obstack_memory_used@@Base+0x7390>
  41bfac:	tbz	w0, #0, 41c0dc <_obstack_memory_used@@Base+0xae50>
  41bfb0:	ldr	x8, [sp, #48]
  41bfb4:	ldr	x0, [sp, #32]
  41bfb8:	add	x1, sp, #0x30
  41bfbc:	ldr	x22, [x8, x19, lsl #3]
  41bfc0:	bl	41b7fc <_obstack_memory_used@@Base+0xa570>
  41bfc4:	cbnz	w0, 41c0c8 <_obstack_memory_used@@Base+0xae3c>
  41bfc8:	ldr	x1, [x20, #8]
  41bfcc:	cbz	x1, 41bfe4 <_obstack_memory_used@@Base+0xad58>
  41bfd0:	ldr	x2, [sp, #48]
  41bfd4:	ldr	x3, [sp]
  41bfd8:	mov	x0, x23
  41bfdc:	bl	41ba48 <_obstack_memory_used@@Base+0xa7bc>
  41bfe0:	cbnz	w0, 41c0c8 <_obstack_memory_used@@Base+0xae3c>
  41bfe4:	ldr	x8, [sp, #48]
  41bfe8:	mov	x0, x27
  41bfec:	mov	x1, x24
  41bff0:	str	x22, [x8, x19, lsl #3]
  41bff4:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41bff8:	cmp	x0, #0x1
  41bffc:	b.lt	41c03c <_obstack_memory_used@@Base+0xadb0>  // b.tstop
  41c000:	ldr	x8, [sp, #88]
  41c004:	cmp	x8, x0
  41c008:	b.lt	41c03c <_obstack_memory_used@@Base+0xadb0>  // b.tstop
  41c00c:	sub	x9, x8, #0x1
  41c010:	cmp	x8, x0
  41c014:	str	x9, [sp, #88]
  41c018:	b.le	41c03c <_obstack_memory_used@@Base+0xadb0>
  41c01c:	ldr	x8, [sp, #96]
  41c020:	add	x9, x8, x0, lsl #3
  41c024:	ldr	x10, [x9]
  41c028:	stur	x10, [x9, #-8]
  41c02c:	ldr	x9, [sp, #88]
  41c030:	cmp	x0, x9
  41c034:	add	x0, x0, #0x1
  41c038:	b.lt	41c020 <_obstack_memory_used@@Base+0xad94>  // b.tstop
  41c03c:	ldr	x8, [sp, #32]
  41c040:	mov	w9, #0x28                  	// #40
  41c044:	ldr	x8, [x8, #216]
  41c048:	madd	x25, x24, x9, x8
  41c04c:	ldrb	w8, [x25, #32]
  41c050:	add	x25, x25, #0x28
  41c054:	add	x24, x24, #0x1
  41c058:	cbnz	w8, 41bee8 <_obstack_memory_used@@Base+0xac5c>
  41c05c:	ldr	x8, [sp, #24]
  41c060:	ldr	x8, [x8, #8]
  41c064:	add	x21, x21, #0x1
  41c068:	cmp	x21, x8
  41c06c:	b.lt	41be90 <_obstack_memory_used@@Base+0xac04>  // b.tstop
  41c070:	mov	w26, wzr
  41c074:	ldr	x8, [sp, #48]
  41c078:	cbz	x8, 41c084 <_obstack_memory_used@@Base+0xadf8>
  41c07c:	ldr	x0, [sp, #96]
  41c080:	bl	402be0 <free@plt>
  41c084:	str	w26, [sp, #44]
  41c088:	cbz	w26, 41c094 <_obstack_memory_used@@Base+0xae08>
  41c08c:	b	41c098 <_obstack_memory_used@@Base+0xae0c>
  41c090:	str	wzr, [sp, #44]
  41c094:	mov	w26, wzr
  41c098:	mov	w0, w26
  41c09c:	ldp	x20, x19, [sp, #192]
  41c0a0:	ldp	x22, x21, [sp, #176]
  41c0a4:	ldp	x24, x23, [sp, #160]
  41c0a8:	ldp	x26, x25, [sp, #144]
  41c0ac:	ldp	x28, x27, [sp, #128]
  41c0b0:	ldp	x29, x30, [sp, #112]
  41c0b4:	add	sp, sp, #0xd0
  41c0b8:	ret
  41c0bc:	mov	w26, w0
  41c0c0:	str	w26, [sp, #44]
  41c0c4:	b	41c098 <_obstack_memory_used@@Base+0xae0c>
  41c0c8:	mov	w26, w0
  41c0cc:	b	41c074 <_obstack_memory_used@@Base+0xade8>
  41c0d0:	mov	w26, #0xc                   	// #12
  41c0d4:	str	w0, [sp, #48]
  41c0d8:	b	41c0c0 <_obstack_memory_used@@Base+0xae34>
  41c0dc:	mov	w26, #0xc                   	// #12
  41c0e0:	b	41c074 <_obstack_memory_used@@Base+0xade8>
  41c0e4:	mov	w26, w0
  41c0e8:	b	41c098 <_obstack_memory_used@@Base+0xae0c>
  41c0ec:	stp	x29, x30, [sp, #-48]!
  41c0f0:	stp	x22, x21, [sp, #16]
  41c0f4:	stp	x20, x19, [sp, #32]
  41c0f8:	ldr	x9, [x1, #8]
  41c0fc:	mov	x29, sp
  41c100:	cbz	x9, 41c298 <_obstack_memory_used@@Base+0xb00c>
  41c104:	ldr	x10, [x2, #8]
  41c108:	mov	x20, x2
  41c10c:	cbz	x10, 41c298 <_obstack_memory_used@@Base+0xb00c>
  41c110:	ldp	x8, x13, [x0]
  41c114:	add	x11, x10, x9
  41c118:	mov	x21, x1
  41c11c:	mov	x19, x0
  41c120:	add	x12, x13, x11
  41c124:	cmp	x12, x8
  41c128:	b.le	41c154 <_obstack_memory_used@@Base+0xaec8>
  41c12c:	ldr	x0, [x19, #16]
  41c130:	add	x22, x8, x11
  41c134:	lsl	x1, x22, #3
  41c138:	bl	402a50 <realloc@plt>
  41c13c:	cbz	x0, 41c2ac <_obstack_memory_used@@Base+0xb020>
  41c140:	str	x0, [x19, #16]
  41c144:	str	x22, [x19]
  41c148:	ldr	x13, [x19, #8]
  41c14c:	ldr	x9, [x21, #8]
  41c150:	ldr	x10, [x20, #8]
  41c154:	ldr	x11, [x21, #16]
  41c158:	ldr	x12, [x20, #16]
  41c15c:	add	x8, x9, x13
  41c160:	add	x8, x8, x10
  41c164:	sub	x13, x13, #0x1
  41c168:	sub	x9, x9, #0x1
  41c16c:	mov	x14, x10
  41c170:	sub	x10, x14, #0x1
  41c174:	ldr	x16, [x12, x10, lsl #3]
  41c178:	ldr	x15, [x11, x9, lsl #3]
  41c17c:	cmp	x15, x16
  41c180:	b.eq	41c1a8 <_obstack_memory_used@@Base+0xaf1c>  // b.none
  41c184:	b.lt	41c198 <_obstack_memory_used@@Base+0xaf0c>  // b.tstop
  41c188:	cmp	x9, #0x0
  41c18c:	sub	x9, x9, #0x1
  41c190:	b.gt	41c178 <_obstack_memory_used@@Base+0xaeec>
  41c194:	b	41c200 <_obstack_memory_used@@Base+0xaf74>
  41c198:	cmp	x14, #0x2
  41c19c:	mov	x14, x10
  41c1a0:	b.ge	41c170 <_obstack_memory_used@@Base+0xaee4>  // b.tcont
  41c1a4:	b	41c200 <_obstack_memory_used@@Base+0xaf74>
  41c1a8:	tbnz	x13, #63, 41c1d0 <_obstack_memory_used@@Base+0xaf44>
  41c1ac:	ldr	x17, [x19, #16]
  41c1b0:	ldr	x16, [x17, x13, lsl #3]
  41c1b4:	cmp	x16, x15
  41c1b8:	b.le	41c1d8 <_obstack_memory_used@@Base+0xaf4c>
  41c1bc:	sub	x16, x13, #0x1
  41c1c0:	cmp	x13, #0x0
  41c1c4:	mov	x13, x16
  41c1c8:	b.gt	41c1b0 <_obstack_memory_used@@Base+0xaf24>
  41c1cc:	b	41c1e0 <_obstack_memory_used@@Base+0xaf54>
  41c1d0:	mov	x16, x13
  41c1d4:	b	41c1e0 <_obstack_memory_used@@Base+0xaf54>
  41c1d8:	mov	x16, x13
  41c1dc:	b.eq	41c1f0 <_obstack_memory_used@@Base+0xaf64>  // b.none
  41c1e0:	ldr	x13, [x19, #16]
  41c1e4:	sub	x8, x8, #0x1
  41c1e8:	str	x15, [x13, x8, lsl #3]
  41c1ec:	mov	x13, x16
  41c1f0:	cmp	x9, #0x1
  41c1f4:	b.lt	41c200 <_obstack_memory_used@@Base+0xaf74>  // b.tstop
  41c1f8:	cmp	x14, #0x2
  41c1fc:	b.ge	41c168 <_obstack_memory_used@@Base+0xaedc>  // b.tcont
  41c200:	ldp	x12, x0, [x19, #8]
  41c204:	ldr	x13, [x21, #8]
  41c208:	ldr	x14, [x20, #8]
  41c20c:	subs	x9, x12, #0x1
  41c210:	add	x9, x9, x13
  41c214:	add	x10, x9, x14
  41c218:	sub	x15, x10, x8
  41c21c:	add	x9, x15, #0x1
  41c220:	subs	x11, x12, #0x1
  41c224:	add	x16, x9, x12
  41c228:	str	x16, [x19, #8]
  41c22c:	b.lt	41c288 <_obstack_memory_used@@Base+0xaffc>  // b.tstop
  41c230:	tbnz	x15, #63, 41c288 <_obstack_memory_used@@Base+0xaffc>
  41c234:	add	x12, x12, x14
  41c238:	add	x12, x12, x13
  41c23c:	sub	x12, x12, x8
  41c240:	add	x12, x0, x12, lsl #3
  41c244:	ldr	x14, [x0, x10, lsl #3]
  41c248:	ldr	x13, [x0, x11, lsl #3]
  41c24c:	cmp	x14, x13
  41c250:	b.gt	41c26c <_obstack_memory_used@@Base+0xafe0>
  41c254:	sub	x14, x11, #0x1
  41c258:	cmp	x11, #0x0
  41c25c:	str	x13, [x12, x11, lsl #3]
  41c260:	mov	x11, x14
  41c264:	b.gt	41c244 <_obstack_memory_used@@Base+0xafb8>
  41c268:	b	41c288 <_obstack_memory_used@@Base+0xaffc>
  41c26c:	mov	x13, xzr
  41c270:	sub	x10, x10, #0x1
  41c274:	sub	x9, x9, #0x1
  41c278:	str	x14, [x12, x11, lsl #3]
  41c27c:	sub	x12, x12, #0x8
  41c280:	cbnz	x9, 41c244 <_obstack_memory_used@@Base+0xafb8>
  41c284:	b	41c28c <_obstack_memory_used@@Base+0xb000>
  41c288:	mov	x13, x9
  41c28c:	add	x1, x0, x8, lsl #3
  41c290:	lsl	x2, x13, #3
  41c294:	bl	402710 <memcpy@plt>
  41c298:	mov	w0, wzr
  41c29c:	ldp	x20, x19, [sp, #32]
  41c2a0:	ldp	x22, x21, [sp, #16]
  41c2a4:	ldp	x29, x30, [sp], #48
  41c2a8:	ret
  41c2ac:	mov	w0, #0xc                   	// #12
  41c2b0:	b	41c29c <_obstack_memory_used@@Base+0xb010>
  41c2b4:	sub	sp, sp, #0x90
  41c2b8:	stp	x29, x30, [sp, #48]
  41c2bc:	stp	x28, x27, [sp, #64]
  41c2c0:	stp	x26, x25, [sp, #80]
  41c2c4:	stp	x24, x23, [sp, #96]
  41c2c8:	stp	x22, x21, [sp, #112]
  41c2cc:	stp	x20, x19, [sp, #128]
  41c2d0:	ldr	x9, [x0, #56]
  41c2d4:	mov	w8, #0x18                  	// #24
  41c2d8:	stp	xzr, xzr, [sp, #24]
  41c2dc:	str	xzr, [sp, #40]
  41c2e0:	madd	x26, x1, x8, x9
  41c2e4:	stp	x3, x26, [sp, #8]
  41c2e8:	ldr	x21, [x26, #8]!
  41c2ec:	add	x29, sp, #0x30
  41c2f0:	cmp	x21, #0x1
  41c2f4:	b.lt	41c470 <_obstack_memory_used@@Base+0xb1e4>  // b.tstop
  41c2f8:	mov	w8, #0x18                  	// #24
  41c2fc:	madd	x8, x1, x8, x9
  41c300:	mov	x20, x1
  41c304:	mov	x22, x0
  41c308:	mov	x19, x2
  41c30c:	mov	x28, xzr
  41c310:	add	x27, x8, #0x10
  41c314:	str	x9, [sp]
  41c318:	ldr	x8, [x27]
  41c31c:	ldr	x23, [x8, x28, lsl #3]
  41c320:	cmp	x23, x20
  41c324:	b.eq	41c3cc <_obstack_memory_used@@Base+0xb140>  // b.none
  41c328:	ldr	x8, [x22]
  41c32c:	add	x8, x8, x23, lsl #4
  41c330:	ldrb	w8, [x8, #8]
  41c334:	tbz	w8, #3, 41c3cc <_obstack_memory_used@@Base+0xb140>
  41c338:	ldr	x8, [x22, #40]
  41c33c:	mov	w9, #0x18                  	// #24
  41c340:	madd	x9, x23, x9, x8
  41c344:	ldp	x9, x8, [x9, #8]
  41c348:	ldr	x25, [x8]
  41c34c:	cmp	x9, #0x2
  41c350:	b.lt	41c35c <_obstack_memory_used@@Base+0xb0d0>  // b.tstop
  41c354:	ldr	x24, [x8, #8]
  41c358:	b	41c360 <_obstack_memory_used@@Base+0xb0d4>
  41c35c:	mov	x24, #0xffffffffffffffff    	// #-1
  41c360:	ldr	x0, [sp, #16]
  41c364:	mov	x1, x25
  41c368:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c36c:	cbz	x0, 41c39c <_obstack_memory_used@@Base+0xb110>
  41c370:	cmp	x24, #0x1
  41c374:	b.lt	41c3cc <_obstack_memory_used@@Base+0xb140>  // b.tstop
  41c378:	ldr	x0, [sp, #16]
  41c37c:	mov	x1, x24
  41c380:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c384:	cbnz	x0, 41c3cc <_obstack_memory_used@@Base+0xb140>
  41c388:	mov	x0, x19
  41c38c:	mov	x1, x24
  41c390:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c394:	cbnz	x0, 41c3ac <_obstack_memory_used@@Base+0xb120>
  41c398:	b	41c3cc <_obstack_memory_used@@Base+0xb140>
  41c39c:	mov	x0, x19
  41c3a0:	mov	x1, x25
  41c3a4:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c3a8:	cbz	x0, 41c370 <_obstack_memory_used@@Base+0xb0e4>
  41c3ac:	ldr	x8, [x22, #56]
  41c3b0:	ldr	x1, [sp, #8]
  41c3b4:	mov	w9, #0x18                  	// #24
  41c3b8:	add	x0, sp, #0x18
  41c3bc:	madd	x2, x23, x9, x8
  41c3c0:	bl	41c0ec <_obstack_memory_used@@Base+0xae60>
  41c3c4:	cbnz	w0, 41c4a0 <_obstack_memory_used@@Base+0xb214>
  41c3c8:	ldr	x21, [x26]
  41c3cc:	add	x28, x28, #0x1
  41c3d0:	cmp	x28, x21
  41c3d4:	b.lt	41c318 <_obstack_memory_used@@Base+0xb08c>  // b.tstop
  41c3d8:	cmp	x21, #0x1
  41c3dc:	b.lt	41c470 <_obstack_memory_used@@Base+0xb1e4>  // b.tstop
  41c3e0:	ldr	x9, [sp]
  41c3e4:	mov	w8, #0x18                  	// #24
  41c3e8:	mov	x22, xzr
  41c3ec:	madd	x8, x20, x8, x9
  41c3f0:	ldr	x21, [x8, #16]
  41c3f4:	ldr	x20, [x21, x22, lsl #3]
  41c3f8:	add	x0, sp, #0x18
  41c3fc:	mov	x1, x20
  41c400:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c404:	cbz	x0, 41c41c <_obstack_memory_used@@Base+0xb190>
  41c408:	ldr	x8, [x26]
  41c40c:	add	x22, x22, #0x1
  41c410:	cmp	x22, x8
  41c414:	b.lt	41c3f4 <_obstack_memory_used@@Base+0xb168>  // b.tstop
  41c418:	b	41c470 <_obstack_memory_used@@Base+0xb1e4>
  41c41c:	mov	x0, x19
  41c420:	mov	x1, x20
  41c424:	bl	4188a0 <_obstack_memory_used@@Base+0x7614>
  41c428:	cmp	x0, #0x1
  41c42c:	b.lt	41c408 <_obstack_memory_used@@Base+0xb17c>  // b.tstop
  41c430:	ldr	x8, [x19, #8]
  41c434:	cmp	x8, x0
  41c438:	b.lt	41c408 <_obstack_memory_used@@Base+0xb17c>  // b.tstop
  41c43c:	sub	x9, x8, #0x1
  41c440:	cmp	x8, x0
  41c444:	str	x9, [x19, #8]
  41c448:	b.le	41c408 <_obstack_memory_used@@Base+0xb17c>
  41c44c:	ldr	x8, [x19, #16]
  41c450:	add	x9, x8, x0, lsl #3
  41c454:	ldr	x10, [x9]
  41c458:	stur	x10, [x9, #-8]
  41c45c:	ldr	x9, [x19, #8]
  41c460:	cmp	x0, x9
  41c464:	add	x0, x0, #0x1
  41c468:	b.lt	41c450 <_obstack_memory_used@@Base+0xb1c4>  // b.tstop
  41c46c:	b	41c408 <_obstack_memory_used@@Base+0xb17c>
  41c470:	mov	w24, wzr
  41c474:	ldr	x0, [sp, #40]
  41c478:	bl	402be0 <free@plt>
  41c47c:	mov	w0, w24
  41c480:	ldp	x20, x19, [sp, #128]
  41c484:	ldp	x22, x21, [sp, #112]
  41c488:	ldp	x24, x23, [sp, #96]
  41c48c:	ldp	x26, x25, [sp, #80]
  41c490:	ldp	x28, x27, [sp, #64]
  41c494:	ldp	x29, x30, [sp, #48]
  41c498:	add	sp, sp, #0x90
  41c49c:	ret
  41c4a0:	mov	w24, w0
  41c4a4:	b	41c474 <_obstack_memory_used@@Base+0xb1e8>
  41c4a8:	sub	sp, sp, #0x70
  41c4ac:	stp	x24, x23, [sp, #64]
  41c4b0:	mov	x23, x1
  41c4b4:	mov	x1, x3
  41c4b8:	stp	x29, x30, [sp, #16]
  41c4bc:	stp	x28, x27, [sp, #32]
  41c4c0:	stp	x26, x25, [sp, #48]
  41c4c4:	stp	x22, x21, [sp, #80]
  41c4c8:	stp	x20, x19, [sp, #96]
  41c4cc:	add	x29, sp, #0x10
  41c4d0:	mov	x19, x5
  41c4d4:	stp	x2, x4, [sp]
  41c4d8:	mov	x21, x3
  41c4dc:	mov	x24, x0
  41c4e0:	bl	41a5f0 <_obstack_memory_used@@Base+0x9364>
  41c4e4:	mov	x25, x0
  41c4e8:	mov	x0, x24
  41c4ec:	mov	x1, x19
  41c4f0:	bl	41a5f0 <_obstack_memory_used@@Base+0x9364>
  41c4f4:	ldr	x8, [x23, #8]
  41c4f8:	cmp	x8, #0x1
  41c4fc:	b.lt	41c584 <_obstack_memory_used@@Base+0xb2f8>  // b.tstop
  41c500:	ldr	x22, [x24, #152]
  41c504:	mov	x26, x0
  41c508:	mov	x20, xzr
  41c50c:	ldr	x8, [x23, #16]
  41c510:	mov	w9, #0x28                  	// #40
  41c514:	ldr	x3, [sp]
  41c518:	mov	x0, x24
  41c51c:	ldr	x1, [x8, x20, lsl #3]
  41c520:	ldr	x8, [x24, #216]
  41c524:	mov	x4, x21
  41c528:	mov	x5, x25
  41c52c:	mul	x9, x1, x9
  41c530:	ldr	x8, [x8, x9]
  41c534:	ldr	x9, [x22]
  41c538:	lsl	x8, x8, #4
  41c53c:	ldr	x27, [x9, x8]
  41c540:	mov	x2, x27
  41c544:	bl	41c5b0 <_obstack_memory_used@@Base+0xb324>
  41c548:	ldr	x8, [x23, #16]
  41c54c:	ldr	x3, [sp, #8]
  41c550:	mov	w28, w0
  41c554:	mov	x0, x24
  41c558:	ldr	x1, [x8, x20, lsl #3]
  41c55c:	mov	x2, x27
  41c560:	mov	x4, x19
  41c564:	mov	x5, x26
  41c568:	bl	41c5b0 <_obstack_memory_used@@Base+0xb324>
  41c56c:	cmp	w0, w28
  41c570:	b.ne	41c58c <_obstack_memory_used@@Base+0xb300>  // b.any
  41c574:	ldr	x8, [x23, #8]
  41c578:	add	x20, x20, #0x1
  41c57c:	cmp	x20, x8
  41c580:	b.lt	41c50c <_obstack_memory_used@@Base+0xb280>  // b.tstop
  41c584:	mov	w0, wzr
  41c588:	b	41c590 <_obstack_memory_used@@Base+0xb304>
  41c58c:	mov	w0, #0x1                   	// #1
  41c590:	ldp	x20, x19, [sp, #96]
  41c594:	ldp	x22, x21, [sp, #80]
  41c598:	ldp	x24, x23, [sp, #64]
  41c59c:	ldp	x26, x25, [sp, #48]
  41c5a0:	ldp	x28, x27, [sp, #32]
  41c5a4:	ldp	x29, x30, [sp, #16]
  41c5a8:	add	sp, sp, #0x70
  41c5ac:	ret
  41c5b0:	ldr	x9, [x0, #216]
  41c5b4:	mov	w8, #0x28                  	// #40
  41c5b8:	madd	x8, x1, x8, x9
  41c5bc:	ldr	x8, [x8, #16]
  41c5c0:	cmp	x8, x4
  41c5c4:	b.le	41c5d0 <_obstack_memory_used@@Base+0xb344>
  41c5c8:	mov	w0, #0xffffffff            	// #-1
  41c5cc:	ret
  41c5d0:	mov	w10, #0x28                  	// #40
  41c5d4:	madd	x9, x1, x10, x9
  41c5d8:	ldr	x9, [x9, #24]
  41c5dc:	cmp	x9, x4
  41c5e0:	b.ge	41c5ec <_obstack_memory_used@@Base+0xb360>  // b.tcont
  41c5e4:	mov	w0, #0x1                   	// #1
  41c5e8:	ret
  41c5ec:	cmp	x8, x4
  41c5f0:	cset	w1, eq  // eq = none
  41c5f4:	cmp	x9, x4
  41c5f8:	cset	w8, eq  // eq = none
  41c5fc:	bfi	w1, w8, #1, #1
  41c600:	cbz	w1, 41c60c <_obstack_memory_used@@Base+0xb380>
  41c604:	mov	x4, x5
  41c608:	b	41c614 <_obstack_memory_used@@Base+0xb388>
  41c60c:	mov	w0, wzr
  41c610:	ret
  41c614:	sub	sp, sp, #0x80
  41c618:	stp	x29, x30, [sp, #32]
  41c61c:	stp	x28, x27, [sp, #48]
  41c620:	stp	x26, x25, [sp, #64]
  41c624:	stp	x24, x23, [sp, #80]
  41c628:	stp	x22, x21, [sp, #96]
  41c62c:	stp	x20, x19, [sp, #112]
  41c630:	ldr	x24, [x0, #152]
  41c634:	mov	w8, #0x18                  	// #24
  41c638:	mov	w23, w1
  41c63c:	add	x29, sp, #0x20
  41c640:	ldr	x9, [x24, #48]
  41c644:	madd	x13, x3, x8, x9
  41c648:	ldr	x8, [x13, #8]!
  41c64c:	cmp	x8, #0x1
  41c650:	b.lt	41c7bc <_obstack_memory_used@@Base+0xb530>  // b.tstop
  41c654:	mov	w12, #0x18                  	// #24
  41c658:	cmp	x2, #0x3f
  41c65c:	and	w10, w23, #0x2
  41c660:	mov	w11, #0x1                   	// #1
  41c664:	madd	x9, x3, x12, x9
  41c668:	cset	w12, gt
  41c66c:	lsl	x11, x11, x2
  41c670:	add	x25, x9, #0x10
  41c674:	orr	w9, w12, w10, lsr #1
  41c678:	mov	x19, x4
  41c67c:	mov	x20, x3
  41c680:	mov	x21, x2
  41c684:	mov	x22, x0
  41c688:	mov	x26, xzr
  41c68c:	stur	w9, [x29, #-12]
  41c690:	stur	x11, [x29, #-8]
  41c694:	mvn	w9, w11
  41c698:	mov	w11, #0x28                  	// #40
  41c69c:	str	w9, [sp, #16]
  41c6a0:	str	x13, [sp, #8]
  41c6a4:	ldr	x9, [x25]
  41c6a8:	ldr	x27, [x9, x26, lsl #3]
  41c6ac:	ldr	x9, [x24]
  41c6b0:	add	x9, x9, x27, lsl #4
  41c6b4:	ldrb	w10, [x9, #8]
  41c6b8:	cmp	w10, #0x9
  41c6bc:	b.eq	41c78c <_obstack_memory_used@@Base+0xb500>  // b.none
  41c6c0:	cmp	w10, #0x8
  41c6c4:	b.eq	41c7a0 <_obstack_memory_used@@Base+0xb514>  // b.none
  41c6c8:	cmp	w10, #0x4
  41c6cc:	b.ne	41c7b0 <_obstack_memory_used@@Base+0xb524>  // b.any
  41c6d0:	cmn	x19, #0x1
  41c6d4:	b.eq	41c7b0 <_obstack_memory_used@@Base+0xb524>  // b.none
  41c6d8:	ldr	x8, [x22, #216]
  41c6dc:	madd	x8, x19, x11, x8
  41c6e0:	add	x28, x8, #0x22
  41c6e4:	ldur	x8, [x28, #-34]
  41c6e8:	cmp	x8, x27
  41c6ec:	b.ne	41c770 <_obstack_memory_used@@Base+0xb4e4>  // b.any
  41c6f0:	cmp	x21, #0x3f
  41c6f4:	b.gt	41c708 <_obstack_memory_used@@Base+0xb47c>
  41c6f8:	ldrh	w8, [x28]
  41c6fc:	ldur	x9, [x29, #-8]
  41c700:	tst	x9, x8
  41c704:	b.eq	41c770 <_obstack_memory_used@@Base+0xb4e4>  // b.none
  41c708:	ldr	x8, [x24, #40]
  41c70c:	mov	w9, #0x18                  	// #24
  41c710:	madd	x8, x27, x9, x8
  41c714:	ldr	x8, [x8, #16]
  41c718:	ldr	x3, [x8]
  41c71c:	cmp	x3, x20
  41c720:	b.eq	41c7c4 <_obstack_memory_used@@Base+0xb538>  // b.none
  41c724:	mov	x0, x22
  41c728:	mov	w1, w23
  41c72c:	mov	x2, x21
  41c730:	mov	x4, x19
  41c734:	bl	41c614 <_obstack_memory_used@@Base+0xb388>
  41c738:	cbz	w0, 41c750 <_obstack_memory_used@@Base+0xb4c4>
  41c73c:	cmn	w0, #0x1
  41c740:	b.eq	41c7d8 <_obstack_memory_used@@Base+0xb54c>  // b.none
  41c744:	cmp	x21, #0x3f
  41c748:	b.le	41c760 <_obstack_memory_used@@Base+0xb4d4>
  41c74c:	b	41c770 <_obstack_memory_used@@Base+0xb4e4>
  41c750:	ldur	w8, [x29, #-12]
  41c754:	tbz	w8, #0, 41c760 <_obstack_memory_used@@Base+0xb4d4>
  41c758:	tbz	w23, #1, 41c770 <_obstack_memory_used@@Base+0xb4e4>
  41c75c:	b	41c7cc <_obstack_memory_used@@Base+0xb540>
  41c760:	ldrh	w8, [x28]
  41c764:	ldr	w9, [sp, #16]
  41c768:	and	w8, w8, w9
  41c76c:	strh	w8, [x28]
  41c770:	ldurb	w8, [x28, #-2]
  41c774:	add	x28, x28, #0x28
  41c778:	cbnz	w8, 41c6e4 <_obstack_memory_used@@Base+0xb458>
  41c77c:	ldr	x13, [sp, #8]
  41c780:	mov	w11, #0x28                  	// #40
  41c784:	ldr	x8, [x13]
  41c788:	b	41c7b0 <_obstack_memory_used@@Base+0xb524>
  41c78c:	tbz	w23, #1, 41c7b0 <_obstack_memory_used@@Base+0xb524>
  41c790:	ldr	x9, [x9]
  41c794:	cmp	x9, x21
  41c798:	b.ne	41c7b0 <_obstack_memory_used@@Base+0xb524>  // b.any
  41c79c:	b	41c7cc <_obstack_memory_used@@Base+0xb540>
  41c7a0:	tbz	w23, #0, 41c7b0 <_obstack_memory_used@@Base+0xb524>
  41c7a4:	ldr	x9, [x9]
  41c7a8:	cmp	x9, x21
  41c7ac:	b.eq	41c7d4 <_obstack_memory_used@@Base+0xb548>  // b.none
  41c7b0:	add	x26, x26, #0x1
  41c7b4:	cmp	x26, x8
  41c7b8:	b.lt	41c6a4 <_obstack_memory_used@@Base+0xb418>  // b.tstop
  41c7bc:	ubfx	w0, w23, #1, #1
  41c7c0:	b	41c7d8 <_obstack_memory_used@@Base+0xb54c>
  41c7c4:	sbfx	w0, w23, #0, #1
  41c7c8:	b	41c7d8 <_obstack_memory_used@@Base+0xb54c>
  41c7cc:	mov	w0, wzr
  41c7d0:	b	41c7d8 <_obstack_memory_used@@Base+0xb54c>
  41c7d4:	mov	w0, #0xffffffff            	// #-1
  41c7d8:	ldp	x20, x19, [sp, #112]
  41c7dc:	ldp	x22, x21, [sp, #96]
  41c7e0:	ldp	x24, x23, [sp, #80]
  41c7e4:	ldp	x26, x25, [sp, #64]
  41c7e8:	ldp	x28, x27, [sp, #48]
  41c7ec:	ldp	x29, x30, [sp, #32]
  41c7f0:	add	sp, sp, #0x80
  41c7f4:	ret
  41c7f8:	cbz	x0, 41c86c <_obstack_memory_used@@Base+0xb5e0>
  41c7fc:	stp	x29, x30, [sp, #-48]!
  41c800:	stp	x20, x19, [sp, #32]
  41c804:	ldr	x8, [x0]
  41c808:	mov	x19, x0
  41c80c:	ldr	x0, [x0, #16]
  41c810:	str	x21, [sp, #16]
  41c814:	cmp	x8, #0x1
  41c818:	mov	x29, sp
  41c81c:	b.lt	41c85c <_obstack_memory_used@@Base+0xb5d0>  // b.tstop
  41c820:	mov	x20, xzr
  41c824:	mov	x21, xzr
  41c828:	add	x8, x0, x20
  41c82c:	ldr	x0, [x8, #40]
  41c830:	bl	402be0 <free@plt>
  41c834:	ldr	x8, [x19, #16]
  41c838:	add	x8, x8, x20
  41c83c:	ldr	x0, [x8, #16]
  41c840:	bl	402be0 <free@plt>
  41c844:	ldr	x8, [x19]
  41c848:	ldr	x0, [x19, #16]
  41c84c:	add	x21, x21, #0x1
  41c850:	add	x20, x20, #0x30
  41c854:	cmp	x21, x8
  41c858:	b.lt	41c828 <_obstack_memory_used@@Base+0xb59c>  // b.tstop
  41c85c:	ldp	x20, x19, [sp, #32]
  41c860:	ldr	x21, [sp, #16]
  41c864:	ldp	x29, x30, [sp], #48
  41c868:	b	402be0 <free@plt>
  41c86c:	ret
  41c870:	stp	x29, x30, [sp, #-48]!
  41c874:	stp	x20, x19, [sp, #32]
  41c878:	ldr	x8, [x0]
  41c87c:	ldr	x9, [x0, #16]
  41c880:	str	x21, [sp, #16]
  41c884:	mov	x20, x0
  41c888:	sub	x8, x8, #0x1
  41c88c:	add	x21, x8, x8, lsl #1
  41c890:	str	x8, [x0]
  41c894:	add	x8, x9, x21, lsl #4
  41c898:	ldr	x9, [x8]
  41c89c:	lsl	x2, x2, #4
  41c8a0:	mov	x0, x3
  41c8a4:	mov	x29, sp
  41c8a8:	str	x9, [x1]
  41c8ac:	ldr	x1, [x8, #16]
  41c8b0:	mov	x19, x4
  41c8b4:	bl	402710 <memcpy@plt>
  41c8b8:	ldr	x0, [x19, #16]
  41c8bc:	bl	402be0 <free@plt>
  41c8c0:	ldr	x8, [x20, #16]
  41c8c4:	add	x8, x8, x21, lsl #4
  41c8c8:	ldr	x0, [x8, #16]
  41c8cc:	bl	402be0 <free@plt>
  41c8d0:	ldr	x8, [x20, #16]
  41c8d4:	add	x8, x8, x21, lsl #4
  41c8d8:	ldr	x9, [x8, #40]
  41c8dc:	ldur	q0, [x8, #24]
  41c8e0:	str	x9, [x19, #16]
  41c8e4:	str	q0, [x19]
  41c8e8:	ldr	x8, [x20, #16]
  41c8ec:	ldp	x20, x19, [sp, #32]
  41c8f0:	add	x8, x8, x21, lsl #4
  41c8f4:	ldr	x0, [x8, #8]
  41c8f8:	ldr	x21, [sp, #16]
  41c8fc:	ldp	x29, x30, [sp], #48
  41c900:	ret
  41c904:	sub	sp, sp, #0x40
  41c908:	stp	x29, x30, [sp, #16]
  41c90c:	add	x29, sp, #0x10
  41c910:	add	x2, x29, #0x18
  41c914:	mov	w1, wzr
  41c918:	str	x21, [sp, #32]
  41c91c:	stp	x20, x19, [sp, #48]
  41c920:	mov	x19, x0
  41c924:	bl	402c10 <acl_get_entry@plt>
  41c928:	cmp	w0, #0x1
  41c92c:	b.lt	41c988 <_obstack_memory_used@@Base+0xb6fc>  // b.tstop
  41c930:	mov	x21, #0x12                  	// #18
  41c934:	mov	w20, #0x1                   	// #1
  41c938:	movk	x21, #0x1, lsl #32
  41c93c:	ldr	x0, [x29, #24]
  41c940:	sub	x1, x29, #0x4
  41c944:	bl	4029c0 <acl_get_tag_type@plt>
  41c948:	tbnz	w0, #31, 41c984 <_obstack_memory_used@@Base+0xb6f8>
  41c94c:	ldur	w8, [x29, #-4]
  41c950:	mov	w0, #0x1                   	// #1
  41c954:	cmp	w8, #0x20
  41c958:	b.hi	41c988 <_obstack_memory_used@@Base+0xb6fc>  // b.pmore
  41c95c:	lsl	x8, x20, x8
  41c960:	tst	x8, x21
  41c964:	b.eq	41c988 <_obstack_memory_used@@Base+0xb6fc>  // b.none
  41c968:	add	x2, x29, #0x18
  41c96c:	mov	w1, #0x1                   	// #1
  41c970:	mov	x0, x19
  41c974:	bl	402c10 <acl_get_entry@plt>
  41c978:	cmp	w0, #0x0
  41c97c:	b.gt	41c93c <_obstack_memory_used@@Base+0xb6b0>
  41c980:	b	41c988 <_obstack_memory_used@@Base+0xb6fc>
  41c984:	mov	w0, #0xffffffff            	// #-1
  41c988:	ldp	x20, x19, [sp, #48]
  41c98c:	ldr	x21, [sp, #32]
  41c990:	ldp	x29, x30, [sp, #16]
  41c994:	add	sp, sp, #0x40
  41c998:	ret
  41c99c:	stp	x29, x30, [sp, #-16]!
  41c9a0:	mov	x29, sp
  41c9a4:	bl	4027b0 <acl_entries@plt>
  41c9a8:	cmp	w0, #0x0
  41c9ac:	cset	w0, gt
  41c9b0:	ldp	x29, x30, [sp], #16
  41c9b4:	ret
  41c9b8:	stp	x29, x30, [sp, #-32]!
  41c9bc:	str	x19, [sp, #16]
  41c9c0:	mov	x19, x0
  41c9c4:	ldr	x0, [x0, #8]
  41c9c8:	mov	x29, sp
  41c9cc:	cbz	x0, 41c9d4 <_obstack_memory_used@@Base+0xb748>
  41c9d0:	bl	402e20 <acl_free@plt>
  41c9d4:	ldr	x0, [x19, #16]
  41c9d8:	cbz	x0, 41c9e8 <_obstack_memory_used@@Base+0xb75c>
  41c9dc:	ldr	x19, [sp, #16]
  41c9e0:	ldp	x29, x30, [sp], #32
  41c9e4:	b	402e20 <acl_free@plt>
  41c9e8:	ldr	x19, [sp, #16]
  41c9ec:	ldp	x29, x30, [sp], #32
  41c9f0:	ret
  41c9f4:	stp	x29, x30, [sp, #-48]!
  41c9f8:	str	x21, [sp, #16]
  41c9fc:	stp	x20, x19, [sp, #32]
  41ca00:	mov	x19, x3
  41ca04:	mov	w21, w2
  41ca08:	mov	x20, x0
  41ca0c:	movi	v0.2d, #0x0
  41ca10:	cmn	w1, #0x1
  41ca14:	mov	x29, sp
  41ca18:	stp	q0, q0, [x3]
  41ca1c:	str	w2, [x3]
  41ca20:	b.eq	41ca30 <_obstack_memory_used@@Base+0xb7a4>  // b.none
  41ca24:	mov	w0, w1
  41ca28:	bl	402aa0 <acl_get_fd@plt>
  41ca2c:	b	41ca3c <_obstack_memory_used@@Base+0xb7b0>
  41ca30:	mov	w1, #0x8000                	// #32768
  41ca34:	mov	x0, x20
  41ca38:	bl	402bd0 <acl_get_file@plt>
  41ca3c:	str	x0, [x19, #8]
  41ca40:	cbz	x0, 41ca6c <_obstack_memory_used@@Base+0xb7e0>
  41ca44:	and	w8, w21, #0xf000
  41ca48:	cmp	w8, #0x4, lsl #12
  41ca4c:	b.ne	41ca64 <_obstack_memory_used@@Base+0xb7d8>  // b.any
  41ca50:	mov	w1, #0x4000                	// #16384
  41ca54:	mov	x0, x20
  41ca58:	bl	402bd0 <acl_get_file@plt>
  41ca5c:	str	x0, [x19, #16]
  41ca60:	cbz	x0, 41ca80 <_obstack_memory_used@@Base+0xb7f4>
  41ca64:	mov	w0, wzr
  41ca68:	b	41ca84 <_obstack_memory_used@@Base+0xb7f8>
  41ca6c:	bl	402da0 <__errno_location@plt>
  41ca70:	ldr	w0, [x0]
  41ca74:	bl	41ce34 <_obstack_memory_used@@Base+0xbba8>
  41ca78:	sbfx	w0, w0, #0, #1
  41ca7c:	b	41ca84 <_obstack_memory_used@@Base+0xb7f8>
  41ca80:	mov	w0, #0xffffffff            	// #-1
  41ca84:	ldp	x20, x19, [sp, #32]
  41ca88:	ldr	x21, [sp, #16]
  41ca8c:	ldp	x29, x30, [sp], #48
  41ca90:	ret
  41ca94:	cmn	w1, #0x1
  41ca98:	b.eq	41caa8 <_obstack_memory_used@@Base+0xb81c>  // b.none
  41ca9c:	mov	w0, w1
  41caa0:	mov	w1, w2
  41caa4:	b	4029f0 <fchmod@plt>
  41caa8:	mov	w1, w2
  41caac:	b	402910 <chmod@plt>
  41cab0:	sub	sp, sp, #0x50
  41cab4:	stp	x29, x30, [sp, #16]
  41cab8:	add	x29, sp, #0x10
  41cabc:	stp	x24, x23, [sp, #32]
  41cac0:	stp	x22, x21, [sp, #48]
  41cac4:	stp	x20, x19, [sp, #64]
  41cac8:	sturb	wzr, [x29, #-4]
  41cacc:	ldr	w8, [x0]
  41cad0:	mov	w19, w2
  41cad4:	mov	x21, x0
  41cad8:	mov	x20, x1
  41cadc:	ands	w22, w8, #0xe00
  41cae0:	b.eq	41cb10 <_obstack_memory_used@@Base+0xb884>  // b.none
  41cae4:	cmn	w19, #0x1
  41cae8:	b.eq	41cb00 <_obstack_memory_used@@Base+0xb874>  // b.none
  41caec:	mov	w0, w19
  41caf0:	mov	w1, w8
  41caf4:	bl	4029f0 <fchmod@plt>
  41caf8:	cbnz	w0, 41cbdc <_obstack_memory_used@@Base+0xb950>
  41cafc:	b	41cb10 <_obstack_memory_used@@Base+0xb884>
  41cb00:	mov	x0, x20
  41cb04:	mov	w1, w8
  41cb08:	bl	402910 <chmod@plt>
  41cb0c:	cbnz	w0, 41cbdc <_obstack_memory_used@@Base+0xb950>
  41cb10:	sub	x4, x29, #0x4
  41cb14:	mov	x0, x21
  41cb18:	mov	x1, x20
  41cb1c:	mov	w2, w19
  41cb20:	mov	w3, wzr
  41cb24:	bl	41cbf8 <_obstack_memory_used@@Base+0xb96c>
  41cb28:	ldurb	w8, [x29, #-4]
  41cb2c:	cbnz	w8, 41cbe0 <_obstack_memory_used@@Base+0xb954>
  41cb30:	cbz	w0, 41cb70 <_obstack_memory_used@@Base+0xb8e4>
  41cb34:	bl	402da0 <__errno_location@plt>
  41cb38:	ldr	w24, [x0]
  41cb3c:	sub	x4, x29, #0x4
  41cb40:	mov	w3, #0x1                   	// #1
  41cb44:	mov	x0, x21
  41cb48:	mov	x1, x20
  41cb4c:	mov	w2, w19
  41cb50:	bl	41cbf8 <_obstack_memory_used@@Base+0xb96c>
  41cb54:	ldurb	w23, [x29, #-4]
  41cb58:	cbz	w24, 41cb68 <_obstack_memory_used@@Base+0xb8dc>
  41cb5c:	bl	402da0 <__errno_location@plt>
  41cb60:	str	w24, [x0]
  41cb64:	mov	w0, #0xffffffff            	// #-1
  41cb68:	cbz	w22, 41cb90 <_obstack_memory_used@@Base+0xb904>
  41cb6c:	b	41cbe0 <_obstack_memory_used@@Base+0xb954>
  41cb70:	sub	x4, x29, #0x4
  41cb74:	mov	w3, #0x1                   	// #1
  41cb78:	mov	x0, x21
  41cb7c:	mov	x1, x20
  41cb80:	mov	w2, w19
  41cb84:	bl	41cbf8 <_obstack_memory_used@@Base+0xb96c>
  41cb88:	ldurb	w23, [x29, #-4]
  41cb8c:	cbnz	w22, 41cbe0 <_obstack_memory_used@@Base+0xb954>
  41cb90:	cmp	w23, #0x1
  41cb94:	b.eq	41cbe0 <_obstack_memory_used@@Base+0xb954>  // b.none
  41cb98:	cbz	w0, 41cba8 <_obstack_memory_used@@Base+0xb91c>
  41cb9c:	bl	402da0 <__errno_location@plt>
  41cba0:	ldr	w22, [x0]
  41cba4:	b	41cbac <_obstack_memory_used@@Base+0xb920>
  41cba8:	mov	w22, wzr
  41cbac:	ldr	w1, [x21]
  41cbb0:	cmn	w19, #0x1
  41cbb4:	b.eq	41cbc8 <_obstack_memory_used@@Base+0xb93c>  // b.none
  41cbb8:	mov	w0, w19
  41cbbc:	bl	4029f0 <fchmod@plt>
  41cbc0:	cbnz	w22, 41cbd4 <_obstack_memory_used@@Base+0xb948>
  41cbc4:	b	41cbe0 <_obstack_memory_used@@Base+0xb954>
  41cbc8:	mov	x0, x20
  41cbcc:	bl	402910 <chmod@plt>
  41cbd0:	cbz	w22, 41cbe0 <_obstack_memory_used@@Base+0xb954>
  41cbd4:	bl	402da0 <__errno_location@plt>
  41cbd8:	str	w22, [x0]
  41cbdc:	mov	w0, #0xffffffff            	// #-1
  41cbe0:	ldp	x20, x19, [sp, #64]
  41cbe4:	ldp	x22, x21, [sp, #48]
  41cbe8:	ldp	x24, x23, [sp, #32]
  41cbec:	ldp	x29, x30, [sp, #16]
  41cbf0:	add	sp, sp, #0x50
  41cbf4:	ret
  41cbf8:	stp	x29, x30, [sp, #-64]!
  41cbfc:	stp	x22, x21, [sp, #32]
  41cc00:	stp	x20, x19, [sp, #48]
  41cc04:	ldrb	w8, [x0, #24]
  41cc08:	str	x23, [sp, #16]
  41cc0c:	mov	x29, sp
  41cc10:	cbz	w8, 41cc30 <_obstack_memory_used@@Base+0xb9a4>
  41cc14:	mov	w23, wzr
  41cc18:	mov	w0, w23
  41cc1c:	ldp	x20, x19, [sp, #48]
  41cc20:	ldp	x22, x21, [sp, #32]
  41cc24:	ldr	x23, [sp, #16]
  41cc28:	ldp	x29, x30, [sp], #64
  41cc2c:	ret
  41cc30:	mov	w23, w2
  41cc34:	ldr	x2, [x0, #8]
  41cc38:	mov	x22, x4
  41cc3c:	mov	w21, w3
  41cc40:	mov	x19, x0
  41cc44:	mov	x20, x1
  41cc48:	cbz	w3, 41cc74 <_obstack_memory_used@@Base+0xb9e8>
  41cc4c:	cbz	x2, 41cc58 <_obstack_memory_used@@Base+0xb9cc>
  41cc50:	mov	x0, x2
  41cc54:	bl	402e20 <acl_free@plt>
  41cc58:	ldr	w0, [x19]
  41cc5c:	bl	402a90 <acl_from_mode@plt>
  41cc60:	mov	x2, x0
  41cc64:	str	x0, [x19, #8]
  41cc68:	cbnz	x0, 41cc78 <_obstack_memory_used@@Base+0xb9ec>
  41cc6c:	mov	w23, #0xffffffff            	// #-1
  41cc70:	b	41cc18 <_obstack_memory_used@@Base+0xb98c>
  41cc74:	cbz	x2, 41cc14 <_obstack_memory_used@@Base+0xb988>
  41cc78:	cmn	w23, #0x1
  41cc7c:	b.eq	41cc90 <_obstack_memory_used@@Base+0xba04>  // b.none
  41cc80:	mov	w0, w23
  41cc84:	mov	x1, x2
  41cc88:	bl	402780 <acl_set_fd@plt>
  41cc8c:	b	41cc9c <_obstack_memory_used@@Base+0xba10>
  41cc90:	mov	w1, #0x8000                	// #32768
  41cc94:	mov	x0, x20
  41cc98:	bl	402a70 <acl_set_file@plt>
  41cc9c:	mov	w23, w0
  41cca0:	cbz	w0, 41ccd0 <_obstack_memory_used@@Base+0xba44>
  41cca4:	bl	402da0 <__errno_location@plt>
  41cca8:	ldr	w0, [x0]
  41ccac:	bl	41ce34 <_obstack_memory_used@@Base+0xbba8>
  41ccb0:	tbnz	w0, #0, 41cc18 <_obstack_memory_used@@Base+0xb98c>
  41ccb4:	mov	w8, #0x1                   	// #1
  41ccb8:	strb	w8, [x19, #24]
  41ccbc:	cbnz	w21, 41cc14 <_obstack_memory_used@@Base+0xb988>
  41ccc0:	ldr	x0, [x19, #8]
  41ccc4:	bl	41c904 <_obstack_memory_used@@Base+0xb678>
  41ccc8:	cbnz	w0, 41cc18 <_obstack_memory_used@@Base+0xb98c>
  41cccc:	b	41cc14 <_obstack_memory_used@@Base+0xb988>
  41ccd0:	mov	w8, #0x1                   	// #1
  41ccd4:	strb	w8, [x22]
  41ccd8:	ldr	w8, [x19]
  41ccdc:	and	w8, w8, #0xf000
  41cce0:	cmp	w8, #0x4, lsl #12
  41cce4:	b.ne	41cc14 <_obstack_memory_used@@Base+0xb988>  // b.any
  41cce8:	cbz	w21, 41cd04 <_obstack_memory_used@@Base+0xba78>
  41ccec:	mov	x0, x20
  41ccf0:	ldp	x20, x19, [sp, #48]
  41ccf4:	ldp	x22, x21, [sp, #32]
  41ccf8:	ldr	x23, [sp, #16]
  41ccfc:	ldp	x29, x30, [sp], #64
  41cd00:	b	402870 <acl_delete_def_file@plt>
  41cd04:	ldr	x0, [x19, #16]
  41cd08:	cbz	x0, 41ccec <_obstack_memory_used@@Base+0xba60>
  41cd0c:	bl	41c99c <_obstack_memory_used@@Base+0xb710>
  41cd10:	cbz	w0, 41ccec <_obstack_memory_used@@Base+0xba60>
  41cd14:	ldr	x2, [x19, #16]
  41cd18:	mov	x0, x20
  41cd1c:	ldp	x20, x19, [sp, #48]
  41cd20:	ldp	x22, x21, [sp, #32]
  41cd24:	ldr	x23, [sp, #16]
  41cd28:	mov	w1, #0x4000                	// #16384
  41cd2c:	ldp	x29, x30, [sp], #64
  41cd30:	b	402a70 <acl_set_file@plt>
  41cd34:	sub	sp, sp, #0x130
  41cd38:	add	x1, sp, #0xc
  41cd3c:	mov	w2, #0x101                 	// #257
  41cd40:	stp	x29, x30, [sp, #272]
  41cd44:	str	x28, [sp, #288]
  41cd48:	add	x29, sp, #0x110
  41cd4c:	bl	41cda0 <_obstack_memory_used@@Base+0xbb14>
  41cd50:	cbz	w0, 41cd5c <_obstack_memory_used@@Base+0xbad0>
  41cd54:	mov	w0, wzr
  41cd58:	b	41cd90 <_obstack_memory_used@@Base+0xbb04>
  41cd5c:	ldrh	w8, [sp, #12]
  41cd60:	cmp	w8, #0x43
  41cd64:	b.eq	41cd54 <_obstack_memory_used@@Base+0xbac8>  // b.none
  41cd68:	ldr	w8, [sp, #12]
  41cd6c:	ldrh	w9, [sp, #16]
  41cd70:	mov	w10, #0x4f50                	// #20304
  41cd74:	movk	w10, #0x4953, lsl #16
  41cd78:	mov	w11, #0x58                  	// #88
  41cd7c:	eor	w8, w8, w10
  41cd80:	eor	w9, w9, w11
  41cd84:	orr	w8, w8, w9
  41cd88:	cmp	w8, #0x0
  41cd8c:	cset	w0, ne  // ne = any
  41cd90:	ldr	x28, [sp, #288]
  41cd94:	ldp	x29, x30, [sp, #272]
  41cd98:	add	sp, sp, #0x130
  41cd9c:	ret
  41cda0:	stp	x29, x30, [sp, #-48]!
  41cda4:	stp	x20, x19, [sp, #32]
  41cda8:	mov	x19, x1
  41cdac:	mov	x1, xzr
  41cdb0:	str	x21, [sp, #16]
  41cdb4:	mov	x29, sp
  41cdb8:	mov	x20, x2
  41cdbc:	bl	402e10 <setlocale@plt>
  41cdc0:	cbz	x0, 41cdec <_obstack_memory_used@@Base+0xbb60>
  41cdc4:	mov	x21, x0
  41cdc8:	bl	402750 <strlen@plt>
  41cdcc:	cmp	x0, x20
  41cdd0:	b.cs	41cdfc <_obstack_memory_used@@Base+0xbb70>  // b.hs, b.nlast
  41cdd4:	add	x2, x0, #0x1
  41cdd8:	mov	x0, x19
  41cddc:	mov	x1, x21
  41cde0:	bl	402710 <memcpy@plt>
  41cde4:	mov	w0, wzr
  41cde8:	b	41ce1c <_obstack_memory_used@@Base+0xbb90>
  41cdec:	cbz	x20, 41cdf4 <_obstack_memory_used@@Base+0xbb68>
  41cdf0:	strb	wzr, [x19]
  41cdf4:	mov	w0, #0x16                  	// #22
  41cdf8:	b	41ce1c <_obstack_memory_used@@Base+0xbb90>
  41cdfc:	cbz	x20, 41ce18 <_obstack_memory_used@@Base+0xbb8c>
  41ce00:	sub	x20, x20, #0x1
  41ce04:	mov	x0, x19
  41ce08:	mov	x1, x21
  41ce0c:	mov	x2, x20
  41ce10:	bl	402710 <memcpy@plt>
  41ce14:	strb	wzr, [x19, x20]
  41ce18:	mov	w0, #0x22                  	// #34
  41ce1c:	ldp	x20, x19, [sp, #32]
  41ce20:	ldr	x21, [sp, #16]
  41ce24:	ldp	x29, x30, [sp], #48
  41ce28:	ret
  41ce2c:	mov	x1, xzr
  41ce30:	b	402e10 <setlocale@plt>
  41ce34:	mov	w8, w0
  41ce38:	cmp	w0, #0x26
  41ce3c:	mov	w0, wzr
  41ce40:	b.hi	41ce60 <_obstack_memory_used@@Base+0xbbd4>  // b.pmore
  41ce44:	mov	w9, w8
  41ce48:	mov	w10, #0x1                   	// #1
  41ce4c:	lsl	x9, x10, x9
  41ce50:	mov	x10, #0x410000              	// #4259840
  41ce54:	movk	x10, #0x40, lsl #32
  41ce58:	tst	x9, x10
  41ce5c:	b.ne	41ce68 <_obstack_memory_used@@Base+0xbbdc>  // b.any
  41ce60:	cmp	w8, #0x5f
  41ce64:	b.ne	41ce6c <_obstack_memory_used@@Base+0xbbe0>  // b.any
  41ce68:	ret
  41ce6c:	mov	w0, #0x1                   	// #1
  41ce70:	ret
  41ce74:	nop
  41ce78:	stp	x29, x30, [sp, #-64]!
  41ce7c:	mov	x29, sp
  41ce80:	stp	x19, x20, [sp, #16]
  41ce84:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1dd74>
  41ce88:	add	x20, x20, #0xde0
  41ce8c:	stp	x21, x22, [sp, #32]
  41ce90:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1dd74>
  41ce94:	add	x21, x21, #0xdd8
  41ce98:	sub	x20, x20, x21
  41ce9c:	mov	w22, w0
  41cea0:	stp	x23, x24, [sp, #48]
  41cea4:	mov	x23, x1
  41cea8:	mov	x24, x2
  41ceac:	bl	4026c0 <mbrtowc@plt-0x40>
  41ceb0:	cmp	xzr, x20, asr #3
  41ceb4:	b.eq	41cee0 <_obstack_memory_used@@Base+0xbc54>  // b.none
  41ceb8:	asr	x20, x20, #3
  41cebc:	mov	x19, #0x0                   	// #0
  41cec0:	ldr	x3, [x21, x19, lsl #3]
  41cec4:	mov	x2, x24
  41cec8:	add	x19, x19, #0x1
  41cecc:	mov	x1, x23
  41ced0:	mov	w0, w22
  41ced4:	blr	x3
  41ced8:	cmp	x20, x19
  41cedc:	b.ne	41cec0 <_obstack_memory_used@@Base+0xbc34>  // b.any
  41cee0:	ldp	x19, x20, [sp, #16]
  41cee4:	ldp	x21, x22, [sp, #32]
  41cee8:	ldp	x23, x24, [sp, #48]
  41ceec:	ldp	x29, x30, [sp], #64
  41cef0:	ret
  41cef4:	nop
  41cef8:	ret
  41cefc:	nop
  41cf00:	adrp	x2, 430000 <_obstack_memory_used@@Base+0x1ed74>
  41cf04:	mov	x1, #0x0                   	// #0
  41cf08:	ldr	x2, [x2, #936]
  41cf0c:	b	402800 <__cxa_atexit@plt>
  41cf10:	mov	x2, x1
  41cf14:	mov	w1, w0
  41cf18:	mov	w0, #0x0                   	// #0
  41cf1c:	b	402cf0 <__fxstat@plt>
  41cf20:	mov	x2, x1
  41cf24:	mov	x1, x0
  41cf28:	mov	w0, #0x0                   	// #0
  41cf2c:	b	402ca0 <__lxstat@plt>

Disassembly of section .fini:

000000000041cf30 <.fini>:
  41cf30:	stp	x29, x30, [sp, #-16]!
  41cf34:	mov	x29, sp
  41cf38:	ldp	x29, x30, [sp], #16
  41cf3c:	ret
