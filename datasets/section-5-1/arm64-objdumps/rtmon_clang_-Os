
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404ba8 <.init>:
  404ba8:	stp	x29, x30, [sp, #-16]!
  404bac:	mov	x29, sp
  404bb0:	bl	405190 <_start@@Base+0x50>
  404bb4:	ldp	x29, x30, [sp], #16
  404bb8:	ret

Disassembly of section .plt:

0000000000404bc0 <memcpy@plt-0x20>:
  404bc0:	stp	x16, x30, [sp, #-16]!
  404bc4:	adrp	x16, 41d000 <_IO_stdin_used@@Base+0x10a00>
  404bc8:	ldr	x17, [x16, #4088]
  404bcc:	add	x16, x16, #0xff8
  404bd0:	br	x17
  404bd4:	nop
  404bd8:	nop
  404bdc:	nop

0000000000404be0 <memcpy@plt>:
  404be0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16]
  404be8:	add	x16, x16, #0x0
  404bec:	br	x17

0000000000404bf0 <recvmsg@plt>:
  404bf0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #8]
  404bf8:	add	x16, x16, #0x8
  404bfc:	br	x17

0000000000404c00 <strtoul@plt>:
  404c00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #16]
  404c08:	add	x16, x16, #0x10
  404c0c:	br	x17

0000000000404c10 <strlen@plt>:
  404c10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #24]
  404c18:	add	x16, x16, #0x18
  404c1c:	br	x17

0000000000404c20 <fputs@plt>:
  404c20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #32]
  404c28:	add	x16, x16, #0x20
  404c2c:	br	x17

0000000000404c30 <exit@plt>:
  404c30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #40]
  404c38:	add	x16, x16, #0x28
  404c3c:	br	x17

0000000000404c40 <perror@plt>:
  404c40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #48]
  404c48:	add	x16, x16, #0x30
  404c4c:	br	x17

0000000000404c50 <__cmsg_nxthdr@plt>:
  404c50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #56]
  404c58:	add	x16, x16, #0x38
  404c5c:	br	x17

0000000000404c60 <strtoll@plt>:
  404c60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #64]
  404c68:	add	x16, x16, #0x40
  404c6c:	br	x17

0000000000404c70 <strtod@plt>:
  404c70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #72]
  404c78:	add	x16, x16, #0x48
  404c7c:	br	x17

0000000000404c80 <geteuid@plt>:
  404c80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #80]
  404c88:	add	x16, x16, #0x50
  404c8c:	br	x17

0000000000404c90 <sethostent@plt>:
  404c90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #88]
  404c98:	add	x16, x16, #0x58
  404c9c:	br	x17

0000000000404ca0 <bind@plt>:
  404ca0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #96]
  404ca8:	add	x16, x16, #0x60
  404cac:	br	x17

0000000000404cb0 <ftell@plt>:
  404cb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #104]
  404cb8:	add	x16, x16, #0x68
  404cbc:	br	x17

0000000000404cc0 <sprintf@plt>:
  404cc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #112]
  404cc8:	add	x16, x16, #0x70
  404ccc:	br	x17

0000000000404cd0 <getuid@plt>:
  404cd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #120]
  404cd8:	add	x16, x16, #0x78
  404cdc:	br	x17

0000000000404ce0 <putc@plt>:
  404ce0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #128]
  404ce8:	add	x16, x16, #0x80
  404cec:	br	x17

0000000000404cf0 <strftime@plt>:
  404cf0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #136]
  404cf8:	add	x16, x16, #0x88
  404cfc:	br	x17

0000000000404d00 <snprintf@plt>:
  404d00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #144]
  404d08:	add	x16, x16, #0x90
  404d0c:	br	x17

0000000000404d10 <fileno@plt>:
  404d10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #152]
  404d18:	add	x16, x16, #0x98
  404d1c:	br	x17

0000000000404d20 <localtime@plt>:
  404d20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #160]
  404d28:	add	x16, x16, #0xa0
  404d2c:	br	x17

0000000000404d30 <fclose@plt>:
  404d30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #168]
  404d38:	add	x16, x16, #0xa8
  404d3c:	br	x17

0000000000404d40 <atoi@plt>:
  404d40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #176]
  404d48:	add	x16, x16, #0xb0
  404d4c:	br	x17

0000000000404d50 <time@plt>:
  404d50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #184]
  404d58:	add	x16, x16, #0xb8
  404d5c:	br	x17

0000000000404d60 <malloc@plt>:
  404d60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #192]
  404d68:	add	x16, x16, #0xc0
  404d6c:	br	x17

0000000000404d70 <setsockopt@plt>:
  404d70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #200]
  404d78:	add	x16, x16, #0xc8
  404d7c:	br	x17

0000000000404d80 <__isoc99_fscanf@plt>:
  404d80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #208]
  404d88:	add	x16, x16, #0xd0
  404d8c:	br	x17

0000000000404d90 <__libc_start_main@plt>:
  404d90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #216]
  404d98:	add	x16, x16, #0xd8
  404d9c:	br	x17

0000000000404da0 <strcat@plt>:
  404da0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #224]
  404da8:	add	x16, x16, #0xe0
  404dac:	br	x17

0000000000404db0 <if_indextoname@plt>:
  404db0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #232]
  404db8:	add	x16, x16, #0xe8
  404dbc:	br	x17

0000000000404dc0 <memset@plt>:
  404dc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #240]
  404dc8:	add	x16, x16, #0xf0
  404dcc:	br	x17

0000000000404dd0 <gettimeofday@plt>:
  404dd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #248]
  404dd8:	add	x16, x16, #0xf8
  404ddc:	br	x17

0000000000404de0 <sendmsg@plt>:
  404de0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #256]
  404de8:	add	x16, x16, #0x100
  404dec:	br	x17

0000000000404df0 <cap_get_flag@plt>:
  404df0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #264]
  404df8:	add	x16, x16, #0x108
  404dfc:	br	x17

0000000000404e00 <bcmp@plt>:
  404e00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #272]
  404e08:	add	x16, x16, #0x110
  404e0c:	br	x17

0000000000404e10 <strcasecmp@plt>:
  404e10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #280]
  404e18:	add	x16, x16, #0x118
  404e1c:	br	x17

0000000000404e20 <realloc@plt>:
  404e20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #288]
  404e28:	add	x16, x16, #0x120
  404e2c:	br	x17

0000000000404e30 <cap_set_proc@plt>:
  404e30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #296]
  404e38:	add	x16, x16, #0x128
  404e3c:	br	x17

0000000000404e40 <strdup@plt>:
  404e40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #304]
  404e48:	add	x16, x16, #0x130
  404e4c:	br	x17

0000000000404e50 <strerror@plt>:
  404e50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #312]
  404e58:	add	x16, x16, #0x138
  404e5c:	br	x17

0000000000404e60 <close@plt>:
  404e60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #320]
  404e68:	add	x16, x16, #0x140
  404e6c:	br	x17

0000000000404e70 <strrchr@plt>:
  404e70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #328]
  404e78:	add	x16, x16, #0x148
  404e7c:	br	x17

0000000000404e80 <recv@plt>:
  404e80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #336]
  404e88:	add	x16, x16, #0x150
  404e8c:	br	x17

0000000000404e90 <__gmon_start__@plt>:
  404e90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #344]
  404e98:	add	x16, x16, #0x158
  404e9c:	br	x17

0000000000404ea0 <abort@plt>:
  404ea0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #352]
  404ea8:	add	x16, x16, #0x160
  404eac:	br	x17

0000000000404eb0 <feof@plt>:
  404eb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #360]
  404eb8:	add	x16, x16, #0x168
  404ebc:	br	x17

0000000000404ec0 <strcmp@plt>:
  404ec0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #368]
  404ec8:	add	x16, x16, #0x170
  404ecc:	br	x17

0000000000404ed0 <__ctype_b_loc@plt>:
  404ed0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #376]
  404ed8:	add	x16, x16, #0x178
  404edc:	br	x17

0000000000404ee0 <strtol@plt>:
  404ee0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #384]
  404ee8:	add	x16, x16, #0x180
  404eec:	br	x17

0000000000404ef0 <cap_get_proc@plt>:
  404ef0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #392]
  404ef8:	add	x16, x16, #0x188
  404efc:	br	x17

0000000000404f00 <fread@plt>:
  404f00:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #400]
  404f08:	add	x16, x16, #0x190
  404f0c:	br	x17

0000000000404f10 <getline@plt>:
  404f10:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #408]
  404f18:	add	x16, x16, #0x198
  404f1c:	br	x17

0000000000404f20 <gethostbyaddr@plt>:
  404f20:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #416]
  404f28:	add	x16, x16, #0x1a0
  404f2c:	br	x17

0000000000404f30 <free@plt>:
  404f30:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #424]
  404f38:	add	x16, x16, #0x1a8
  404f3c:	br	x17

0000000000404f40 <inet_pton@plt>:
  404f40:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #432]
  404f48:	add	x16, x16, #0x1b0
  404f4c:	br	x17

0000000000404f50 <send@plt>:
  404f50:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #440]
  404f58:	add	x16, x16, #0x1b8
  404f5c:	br	x17

0000000000404f60 <strspn@plt>:
  404f60:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #448]
  404f68:	add	x16, x16, #0x1c0
  404f6c:	br	x17

0000000000404f70 <strchr@plt>:
  404f70:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #456]
  404f78:	add	x16, x16, #0x1c8
  404f7c:	br	x17

0000000000404f80 <strtoull@plt>:
  404f80:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #464]
  404f88:	add	x16, x16, #0x1d0
  404f8c:	br	x17

0000000000404f90 <fwrite@plt>:
  404f90:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #472]
  404f98:	add	x16, x16, #0x1d8
  404f9c:	br	x17

0000000000404fa0 <socket@plt>:
  404fa0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #480]
  404fa8:	add	x16, x16, #0x1e0
  404fac:	br	x17

0000000000404fb0 <fflush@plt>:
  404fb0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #488]
  404fb8:	add	x16, x16, #0x1e8
  404fbc:	br	x17

0000000000404fc0 <strcpy@plt>:
  404fc0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #496]
  404fc8:	add	x16, x16, #0x1f0
  404fcc:	br	x17

0000000000404fd0 <fopen64@plt>:
  404fd0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #504]
  404fd8:	add	x16, x16, #0x1f8
  404fdc:	br	x17

0000000000404fe0 <cap_clear@plt>:
  404fe0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #512]
  404fe8:	add	x16, x16, #0x200
  404fec:	br	x17

0000000000404ff0 <isatty@plt>:
  404ff0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #520]
  404ff8:	add	x16, x16, #0x208
  404ffc:	br	x17

0000000000405000 <sysconf@plt>:
  405000:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #528]
  405008:	add	x16, x16, #0x210
  40500c:	br	x17

0000000000405010 <asctime@plt>:
  405010:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #536]
  405018:	add	x16, x16, #0x218
  40501c:	br	x17

0000000000405020 <cap_free@plt>:
  405020:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #544]
  405028:	add	x16, x16, #0x220
  40502c:	br	x17

0000000000405030 <if_nametoindex@plt>:
  405030:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #552]
  405038:	add	x16, x16, #0x228
  40503c:	br	x17

0000000000405040 <strchrnul@plt>:
  405040:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #560]
  405048:	add	x16, x16, #0x230
  40504c:	br	x17

0000000000405050 <strstr@plt>:
  405050:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #568]
  405058:	add	x16, x16, #0x238
  40505c:	br	x17

0000000000405060 <__isoc99_sscanf@plt>:
  405060:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #576]
  405068:	add	x16, x16, #0x240
  40506c:	br	x17

0000000000405070 <strncpy@plt>:
  405070:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #584]
  405078:	add	x16, x16, #0x248
  40507c:	br	x17

0000000000405080 <strcspn@plt>:
  405080:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #592]
  405088:	add	x16, x16, #0x250
  40508c:	br	x17

0000000000405090 <vfprintf@plt>:
  405090:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #600]
  405098:	add	x16, x16, #0x258
  40509c:	br	x17

00000000004050a0 <printf@plt>:
  4050a0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #608]
  4050a8:	add	x16, x16, #0x260
  4050ac:	br	x17

00000000004050b0 <__assert_fail@plt>:
  4050b0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #616]
  4050b8:	add	x16, x16, #0x268
  4050bc:	br	x17

00000000004050c0 <__errno_location@plt>:
  4050c0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #624]
  4050c8:	add	x16, x16, #0x270
  4050cc:	br	x17

00000000004050d0 <getenv@plt>:
  4050d0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #632]
  4050d8:	add	x16, x16, #0x278
  4050dc:	br	x17

00000000004050e0 <putchar@plt>:
  4050e0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #640]
  4050e8:	add	x16, x16, #0x280
  4050ec:	br	x17

00000000004050f0 <getsockname@plt>:
  4050f0:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #648]
  4050f8:	add	x16, x16, #0x288
  4050fc:	br	x17

0000000000405100 <fprintf@plt>:
  405100:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #656]
  405108:	add	x16, x16, #0x290
  40510c:	br	x17

0000000000405110 <fgets@plt>:
  405110:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #664]
  405118:	add	x16, x16, #0x298
  40511c:	br	x17

0000000000405120 <inet_ntop@plt>:
  405120:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #672]
  405128:	add	x16, x16, #0x2a0
  40512c:	br	x17

0000000000405130 <ferror@plt>:
  405130:	adrp	x16, 41e000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #680]
  405138:	add	x16, x16, #0x2a8
  40513c:	br	x17

Disassembly of section .text:

0000000000405140 <_start@@Base>:
  405140:	mov	x29, #0x0                   	// #0
  405144:	mov	x30, #0x0                   	// #0
  405148:	mov	x5, x0
  40514c:	ldr	x1, [sp]
  405150:	add	x2, sp, #0x8
  405154:	mov	x6, sp
  405158:	movz	x0, #0x0, lsl #48
  40515c:	movk	x0, #0x0, lsl #32
  405160:	movk	x0, #0x40, lsl #16
  405164:	movk	x0, #0x524c
  405168:	movz	x3, #0x0, lsl #48
  40516c:	movk	x3, #0x0, lsl #32
  405170:	movk	x3, #0x40, lsl #16
  405174:	movk	x3, #0xc568
  405178:	movz	x4, #0x0, lsl #48
  40517c:	movk	x4, #0x0, lsl #32
  405180:	movk	x4, #0x40, lsl #16
  405184:	movk	x4, #0xc5e8
  405188:	bl	404d90 <__libc_start_main@plt>
  40518c:	bl	404ea0 <abort@plt>
  405190:	adrp	x0, 41d000 <_IO_stdin_used@@Base+0x10a00>
  405194:	ldr	x0, [x0, #4040]
  405198:	cbz	x0, 4051a0 <_start@@Base+0x60>
  40519c:	b	404e90 <__gmon_start__@plt>
  4051a0:	ret
  4051a4:	nop
  4051a8:	adrp	x0, 41e000 <memcpy@GLIBC_2.17>
  4051ac:	add	x0, x0, #0x2d0
  4051b0:	adrp	x1, 41e000 <memcpy@GLIBC_2.17>
  4051b4:	add	x1, x1, #0x2d0
  4051b8:	cmp	x1, x0
  4051bc:	b.eq	4051d4 <_start@@Base+0x94>  // b.none
  4051c0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4051c4:	ldr	x1, [x1, #1544]
  4051c8:	cbz	x1, 4051d4 <_start@@Base+0x94>
  4051cc:	mov	x16, x1
  4051d0:	br	x16
  4051d4:	ret
  4051d8:	adrp	x0, 41e000 <memcpy@GLIBC_2.17>
  4051dc:	add	x0, x0, #0x2d0
  4051e0:	adrp	x1, 41e000 <memcpy@GLIBC_2.17>
  4051e4:	add	x1, x1, #0x2d0
  4051e8:	sub	x1, x1, x0
  4051ec:	lsr	x2, x1, #63
  4051f0:	add	x1, x2, x1, asr #3
  4051f4:	cmp	xzr, x1, asr #1
  4051f8:	asr	x1, x1, #1
  4051fc:	b.eq	405214 <_start@@Base+0xd4>  // b.none
  405200:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405204:	ldr	x2, [x2, #1552]
  405208:	cbz	x2, 405214 <_start@@Base+0xd4>
  40520c:	mov	x16, x2
  405210:	br	x16
  405214:	ret
  405218:	stp	x29, x30, [sp, #-32]!
  40521c:	mov	x29, sp
  405220:	str	x19, [sp, #16]
  405224:	adrp	x19, 41e000 <memcpy@GLIBC_2.17>
  405228:	ldrb	w0, [x19, #728]
  40522c:	cbnz	w0, 40523c <_start@@Base+0xfc>
  405230:	bl	4051a8 <_start@@Base+0x68>
  405234:	mov	w0, #0x1                   	// #1
  405238:	strb	w0, [x19, #728]
  40523c:	ldr	x19, [sp, #16]
  405240:	ldp	x29, x30, [sp], #32
  405244:	ret
  405248:	b	4051d8 <_start@@Base+0x98>

000000000040524c <main@@Base>:
  40524c:	sub	sp, sp, #0xb0
  405250:	cmp	w0, #0x2
  405254:	stp	x29, x30, [sp, #80]
  405258:	stp	x28, x27, [sp, #96]
  40525c:	stp	x26, x25, [sp, #112]
  405260:	stp	x24, x23, [sp, #128]
  405264:	stp	x22, x21, [sp, #144]
  405268:	stp	x20, x19, [sp, #160]
  40526c:	add	x29, sp, #0x50
  405270:	b.lt	4055c0 <main@@Base+0x374>  // b.tstop
  405274:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405278:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40527c:	adrp	x23, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405280:	adrp	x28, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405284:	adrp	x25, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405288:	mov	w20, w0
  40528c:	mov	x26, x1
  405290:	mov	w19, wzr
  405294:	mov	w8, #0xffffffff            	// #-1
  405298:	add	x21, x21, #0x618
  40529c:	add	x22, x22, #0x660
  4052a0:	add	x23, x23, #0x663
  4052a4:	add	x28, x28, #0x620
  4052a8:	add	x25, x25, #0x625
  4052ac:	str	xzr, [sp, #16]
  4052b0:	str	xzr, [sp]
  4052b4:	stp	wzr, w8, [sp, #8]
  4052b8:	mov	x27, x26
  4052bc:	ldr	x0, [x27, #8]!
  4052c0:	mov	x1, x21
  4052c4:	bl	406b30 <matches@@Base>
  4052c8:	tbz	w0, #0, 40538c <main@@Base+0x140>
  4052cc:	ldr	x24, [x27]
  4052d0:	mov	x1, x22
  4052d4:	mov	x0, x24
  4052d8:	bl	404ec0 <strcmp@plt>
  4052dc:	cbz	w0, 4053d8 <main@@Base+0x18c>
  4052e0:	mov	x0, x24
  4052e4:	mov	x1, x23
  4052e8:	bl	404ec0 <strcmp@plt>
  4052ec:	cbz	w0, 4053e8 <main@@Base+0x19c>
  4052f0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4052f4:	mov	x0, x24
  4052f8:	add	x1, x1, #0x666
  4052fc:	bl	404ec0 <strcmp@plt>
  405300:	cbz	w0, 4053f0 <main@@Base+0x1a4>
  405304:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405308:	mov	x0, x24
  40530c:	add	x1, x1, #0x669
  405310:	bl	406b30 <matches@@Base>
  405314:	tbz	w0, #0, 405570 <main@@Base+0x324>
  405318:	ldr	x0, [x27]
  40531c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405320:	add	x1, x1, #0x690
  405324:	bl	406b30 <matches@@Base>
  405328:	tbz	w0, #0, 4053f8 <main@@Base+0x1ac>
  40532c:	ldr	x0, [x27]
  405330:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  405334:	add	x1, x1, #0x1e7
  405338:	bl	406b30 <matches@@Base>
  40533c:	tbz	w0, #0, 405410 <main@@Base+0x1c4>
  405340:	ldr	x0, [x27]
  405344:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405348:	add	x1, x1, #0x695
  40534c:	bl	406b30 <matches@@Base>
  405350:	tbz	w0, #0, 40541c <main@@Base+0x1d0>
  405354:	ldr	x0, [x27]
  405358:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40535c:	add	x1, x1, #0x69d
  405360:	bl	406b30 <matches@@Base>
  405364:	tbz	w0, #0, 40542c <main@@Base+0x1e0>
  405368:	ldr	x24, [x27]
  40536c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405370:	add	x1, x1, #0x6a3
  405374:	mov	x0, x24
  405378:	bl	404ec0 <strcmp@plt>
  40537c:	cbnz	w0, 40558c <main@@Base+0x340>
  405380:	mov	w8, #0xffffffff            	// #-1
  405384:	str	w8, [sp, #12]
  405388:	b	405438 <main@@Base+0x1ec>
  40538c:	cmp	w20, #0x2
  405390:	b.le	4055bc <main@@Base+0x370>
  405394:	ldr	x26, [x26, #16]
  405398:	mov	x1, x28
  40539c:	sub	w20, w20, #0x1
  4053a0:	mov	x0, x26
  4053a4:	bl	404ec0 <strcmp@plt>
  4053a8:	cbz	w0, 4053e0 <main@@Base+0x194>
  4053ac:	mov	x0, x26
  4053b0:	mov	x1, x25
  4053b4:	bl	404ec0 <strcmp@plt>
  4053b8:	cbz	w0, 4053d0 <main@@Base+0x184>
  4053bc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  4053c0:	mov	x0, x26
  4053c4:	add	x1, x1, #0x1e7
  4053c8:	bl	404ec0 <strcmp@plt>
  4053cc:	cbnz	w0, 405544 <main@@Base+0x2f8>
  4053d0:	mov	w19, #0xa                   	// #10
  4053d4:	b	40543c <main@@Base+0x1f0>
  4053d8:	mov	w19, #0x2                   	// #2
  4053dc:	b	405438 <main@@Base+0x1ec>
  4053e0:	mov	w19, #0x2                   	// #2
  4053e4:	b	40543c <main@@Base+0x1f0>
  4053e8:	mov	w19, #0xa                   	// #10
  4053ec:	b	405438 <main@@Base+0x1ec>
  4053f0:	mov	w19, #0x11                  	// #17
  4053f4:	b	405438 <main@@Base+0x1ec>
  4053f8:	cmp	w20, #0x2
  4053fc:	b.le	4055bc <main@@Base+0x370>
  405400:	ldr	x8, [x26, #16]
  405404:	sub	w20, w20, #0x1
  405408:	str	x8, [sp, #16]
  40540c:	b	40543c <main@@Base+0x1f0>
  405410:	mov	w8, #0x1                   	// #1
  405414:	stp	w8, wzr, [sp, #8]
  405418:	b	405438 <main@@Base+0x1ec>
  40541c:	mov	w8, #0x1                   	// #1
  405420:	str	wzr, [sp, #12]
  405424:	str	w8, [sp, #4]
  405428:	b	405438 <main@@Base+0x1ec>
  40542c:	mov	w8, #0x1                   	// #1
  405430:	str	wzr, [sp, #12]
  405434:	str	w8, [sp]
  405438:	mov	x27, x26
  40543c:	cmp	w20, #0x2
  405440:	sub	w20, w20, #0x1
  405444:	add	x26, x27, #0x8
  405448:	b.gt	4052b8 <main@@Base+0x6c>
  40544c:	ldr	x0, [sp, #16]
  405450:	cbz	x0, 4055c0 <main@@Base+0x374>
  405454:	ldp	w8, w9, [sp, #8]
  405458:	cmp	w8, #0x0
  40545c:	cset	w8, ne  // ne = any
  405460:	orr	w20, w9, w8
  405464:	ldr	w8, [sp, #4]
  405468:	cbz	w8, 405488 <main@@Base+0x23c>
  40546c:	orr	w8, w20, #0x10
  405470:	tst	w19, #0xfffffffd
  405474:	csel	w20, w8, w20, eq  // eq = none
  405478:	cmp	w19, #0xa
  40547c:	b.eq	405484 <main@@Base+0x238>  // b.none
  405480:	cbnz	w19, 405488 <main@@Base+0x23c>
  405484:	orr	w20, w20, #0x100
  405488:	ldr	w8, [sp]
  40548c:	cbz	w8, 4054ac <main@@Base+0x260>
  405490:	orr	w8, w20, #0x40
  405494:	tst	w19, #0xfffffffd
  405498:	csel	w20, w8, w20, eq  // eq = none
  40549c:	cmp	w19, #0xa
  4054a0:	b.eq	4054a8 <main@@Base+0x25c>  // b.none
  4054a4:	cbnz	w19, 4054ac <main@@Base+0x260>
  4054a8:	orr	w20, w20, #0x400
  4054ac:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4054b0:	add	x1, x1, #0x709
  4054b4:	bl	404fd0 <fopen64@plt>
  4054b8:	cbz	x0, 4055e0 <main@@Base+0x394>
  4054bc:	mov	x19, x0
  4054c0:	add	x0, sp, #0x18
  4054c4:	mov	w1, w20
  4054c8:	bl	40a648 <rtnl_open@@Base>
  4054cc:	tbnz	w0, #31, 405600 <main@@Base+0x3b4>
  4054d0:	add	x0, sp, #0x18
  4054d4:	mov	w1, wzr
  4054d8:	bl	40aae8 <rtnl_linkdump_req@@Base>
  4054dc:	tbnz	w0, #31, 4055f4 <main@@Base+0x3a8>
  4054e0:	mov	x0, x19
  4054e4:	bl	405660 <main@@Base+0x414>
  4054e8:	adrp	x1, 405000 <sysconf@plt>
  4054ec:	add	x1, x1, #0x6bc
  4054f0:	add	x0, sp, #0x18
  4054f4:	mov	x2, x19
  4054f8:	mov	w3, wzr
  4054fc:	bl	40afa8 <rtnl_dump_filter_nc@@Base>
  405500:	tbz	w0, #31, 405608 <main@@Base+0x3bc>
  405504:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  405508:	ldr	x3, [x8, #720]
  40550c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405510:	add	x0, x0, #0x731
  405514:	mov	w1, #0x10                  	// #16
  405518:	mov	w2, #0x1                   	// #1
  40551c:	bl	404f90 <fwrite@plt>
  405520:	ldp	x20, x19, [sp, #160]
  405524:	ldp	x22, x21, [sp, #144]
  405528:	ldp	x24, x23, [sp, #128]
  40552c:	ldp	x26, x25, [sp, #112]
  405530:	ldp	x28, x27, [sp, #96]
  405534:	ldp	x29, x30, [sp, #80]
  405538:	mov	w0, #0x1                   	// #1
  40553c:	add	sp, sp, #0xb0
  405540:	ret
  405544:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405548:	add	x1, x1, #0x62b
  40554c:	mov	x0, x26
  405550:	bl	404ec0 <strcmp@plt>
  405554:	cbz	w0, 4055bc <main@@Base+0x370>
  405558:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  40555c:	ldr	x0, [x8, #720]
  405560:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405564:	add	x1, x1, #0x630
  405568:	mov	x2, x26
  40556c:	b	4055b4 <main@@Base+0x368>
  405570:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405574:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405578:	add	x0, x0, #0x672
  40557c:	add	x1, x1, #0x808
  405580:	bl	4050a0 <printf@plt>
  405584:	mov	w0, wzr
  405588:	bl	404c30 <exit@plt>
  40558c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405590:	add	x1, x1, #0x62b
  405594:	mov	x0, x24
  405598:	bl	406b30 <matches@@Base>
  40559c:	tbz	w0, #0, 4055bc <main@@Base+0x370>
  4055a0:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  4055a4:	ldr	x0, [x8, #720]
  4055a8:	ldr	x2, [x27]
  4055ac:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4055b0:	add	x1, x1, #0x6a7
  4055b4:	bl	405100 <fprintf@plt>
  4055b8:	b	4055ec <main@@Base+0x3a0>
  4055bc:	bl	405634 <main@@Base+0x3e8>
  4055c0:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  4055c4:	ldr	x3, [x8, #720]
  4055c8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4055cc:	add	x0, x0, #0x6d4
  4055d0:	mov	w1, #0x34                  	// #52
  4055d4:	mov	w2, #0x1                   	// #1
  4055d8:	bl	404f90 <fwrite@plt>
  4055dc:	b	4055ec <main@@Base+0x3a0>
  4055e0:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4055e4:	add	x0, x0, #0x70b
  4055e8:	bl	404c40 <perror@plt>
  4055ec:	mov	w0, #0xffffffff            	// #-1
  4055f0:	bl	404c30 <exit@plt>
  4055f4:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4055f8:	add	x0, x0, #0x718
  4055fc:	bl	404c40 <perror@plt>
  405600:	mov	w0, #0x1                   	// #1
  405604:	bl	404c30 <exit@plt>
  405608:	adrp	x1, 405000 <sysconf@plt>
  40560c:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  405610:	mov	w9, #0x1                   	// #1
  405614:	add	x1, x1, #0x6e0
  405618:	add	x0, sp, #0x18
  40561c:	mov	x2, x19
  405620:	strb	w9, [x8, #732]
  405624:	bl	40b76c <rtnl_listen@@Base>
  405628:	tbz	w0, #31, 405584 <main@@Base+0x338>
  40562c:	mov	w0, #0x2                   	// #2
  405630:	bl	404c30 <exit@plt>
  405634:	stp	x29, x30, [sp, #-16]!
  405638:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  40563c:	ldr	x3, [x8, #720]
  405640:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405644:	add	x0, x0, #0x742
  405648:	mov	w1, #0xc5                  	// #197
  40564c:	mov	w2, #0x1                   	// #1
  405650:	mov	x29, sp
  405654:	bl	404f90 <fwrite@plt>
  405658:	mov	w0, #0xffffffff            	// #-1
  40565c:	bl	404c30 <exit@plt>
  405660:	sub	sp, sp, #0xb0
  405664:	mov	x8, #0x18                  	// #24
  405668:	str	x19, [sp, #160]
  40566c:	mov	x19, x0
  405670:	movk	x8, #0xf, lsl #32
  405674:	mov	x0, sp
  405678:	mov	x1, xzr
  40567c:	stp	x29, x30, [sp, #144]
  405680:	add	x29, sp, #0x90
  405684:	stp	x8, xzr, [sp, #16]
  405688:	bl	404dd0 <gettimeofday@plt>
  40568c:	ldr	q0, [sp]
  405690:	add	x0, sp, #0x10
  405694:	mov	w1, #0x1                   	// #1
  405698:	mov	w2, #0x18                  	// #24
  40569c:	xtn	v0.2s, v0.2d
  4056a0:	mov	x3, x19
  4056a4:	str	d0, [sp, #32]
  4056a8:	bl	404f90 <fwrite@plt>
  4056ac:	ldr	x19, [sp, #160]
  4056b0:	ldp	x29, x30, [sp, #144]
  4056b4:	add	sp, sp, #0xb0
  4056b8:	ret
  4056bc:	stp	x29, x30, [sp, #-16]!
  4056c0:	mov	x2, x1
  4056c4:	mov	x1, x0
  4056c8:	mov	x0, xzr
  4056cc:	mov	x29, sp
  4056d0:	bl	4056e0 <main@@Base+0x494>
  4056d4:	mov	w0, wzr
  4056d8:	ldp	x29, x30, [sp], #16
  4056dc:	ret
  4056e0:	stp	x29, x30, [sp, #-32]!
  4056e4:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  4056e8:	ldrb	w8, [x8, #732]
  4056ec:	stp	x20, x19, [sp, #16]
  4056f0:	mov	x19, x2
  4056f4:	mov	x20, x1
  4056f8:	cmp	w8, #0x1
  4056fc:	mov	x29, sp
  405700:	b.ne	40570c <main@@Base+0x4c0>  // b.any
  405704:	mov	x0, x19
  405708:	bl	405660 <main@@Base+0x414>
  40570c:	ldr	w8, [x20]
  405710:	mov	w1, #0x1                   	// #1
  405714:	mov	x0, x20
  405718:	mov	x3, x19
  40571c:	add	w8, w8, #0x3
  405720:	and	w2, w8, #0xfffffffc
  405724:	bl	404f90 <fwrite@plt>
  405728:	mov	x0, x19
  40572c:	bl	404fb0 <fflush@plt>
  405730:	ldp	x20, x19, [sp, #16]
  405734:	mov	w0, wzr
  405738:	ldp	x29, x30, [sp], #32
  40573c:	ret

0000000000405740 <read_prop@@Base>:
  405740:	sub	sp, sp, #0x110
  405744:	stp	x20, x19, [sp, #256]
  405748:	mov	x19, x2
  40574c:	mov	x20, x1
  405750:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405754:	mov	x3, x0
  405758:	add	x2, x2, #0x83e
  40575c:	add	x0, sp, #0x60
  405760:	mov	w1, #0x80                  	// #128
  405764:	mov	x4, x20
  405768:	stp	x29, x30, [sp, #224]
  40576c:	stp	x28, x21, [sp, #240]
  405770:	add	x29, sp, #0xe0
  405774:	bl	404d00 <snprintf@plt>
  405778:	cmp	w0, #0x1
  40577c:	b.lt	405828 <read_prop@@Base+0xe8>  // b.tstop
  405780:	cmp	w0, #0x80
  405784:	b.cs	405828 <read_prop@@Base+0xe8>  // b.hs, b.nlast
  405788:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40578c:	add	x1, x1, #0xe59
  405790:	add	x0, sp, #0x60
  405794:	bl	404fd0 <fopen64@plt>
  405798:	cbz	x0, 40584c <read_prop@@Base+0x10c>
  40579c:	mov	x21, x0
  4057a0:	add	x0, sp, #0x10
  4057a4:	mov	w1, #0x50                  	// #80
  4057a8:	mov	x2, x21
  4057ac:	bl	405110 <fgets@plt>
  4057b0:	cbz	x0, 405880 <read_prop@@Base+0x140>
  4057b4:	add	x0, sp, #0x10
  4057b8:	mov	w1, #0xa                   	// #10
  4057bc:	add	x20, sp, #0x10
  4057c0:	bl	404f70 <strchr@plt>
  4057c4:	cbz	x0, 4057cc <read_prop@@Base+0x8c>
  4057c8:	strb	wzr, [x0]
  4057cc:	mov	x0, x21
  4057d0:	bl	404d30 <fclose@plt>
  4057d4:	add	x0, sp, #0x10
  4057d8:	add	x1, sp, #0x8
  4057dc:	mov	w2, wzr
  4057e0:	bl	404ee0 <strtol@plt>
  4057e4:	ldr	x8, [sp, #8]
  4057e8:	cmp	x20, x8
  4057ec:	b.eq	4058ac <read_prop@@Base+0x16c>  // b.none
  4057f0:	ldrb	w8, [x8]
  4057f4:	cbnz	w8, 4058ac <read_prop@@Base+0x16c>
  4057f8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
  4057fc:	add	x8, x0, x8
  405800:	mov	x20, x0
  405804:	cmp	x8, #0x1
  405808:	b.hi	40581c <read_prop@@Base+0xdc>  // b.pmore
  40580c:	bl	4050c0 <__errno_location@plt>
  405810:	ldr	w8, [x0]
  405814:	cmp	w8, #0x22
  405818:	b.eq	4058cc <read_prop@@Base+0x18c>  // b.none
  40581c:	mov	w0, wzr
  405820:	str	x20, [x19]
  405824:	b	405918 <read_prop@@Base+0x1d8>
  405828:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40582c:	ldr	x8, [x8, #3992]
  405830:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405834:	add	x0, x0, #0x853
  405838:	mov	w1, #0x26                  	// #38
  40583c:	ldr	x3, [x8]
  405840:	mov	w2, #0x1                   	// #1
  405844:	bl	404f90 <fwrite@plt>
  405848:	b	405914 <read_prop@@Base+0x1d4>
  40584c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  405850:	ldr	x8, [x8, #3992]
  405854:	ldr	x19, [x8]
  405858:	bl	4050c0 <__errno_location@plt>
  40585c:	ldr	w0, [x0]
  405860:	bl	404e50 <strerror@plt>
  405864:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405868:	mov	x3, x0
  40586c:	add	x1, x1, #0x87a
  405870:	add	x2, sp, #0x60
  405874:	mov	x0, x19
  405878:	bl	405100 <fprintf@plt>
  40587c:	b	405914 <read_prop@@Base+0x1d4>
  405880:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  405884:	ldr	x8, [x8, #3992]
  405888:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40588c:	add	x1, x1, #0x888
  405890:	add	x3, sp, #0x60
  405894:	ldr	x0, [x8]
  405898:	mov	x2, x20
  40589c:	bl	405100 <fprintf@plt>
  4058a0:	mov	x0, x21
  4058a4:	bl	404d30 <fclose@plt>
  4058a8:	b	4058f8 <read_prop@@Base+0x1b8>
  4058ac:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4058b0:	ldr	x8, [x8, #3992]
  4058b4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4058b8:	add	x1, x1, #0x8b7
  4058bc:	add	x2, sp, #0x10
  4058c0:	ldr	x0, [x8]
  4058c4:	add	x3, sp, #0x60
  4058c8:	b	4058f4 <read_prop@@Base+0x1b4>
  4058cc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4058d0:	ldr	x8, [x8, #3992]
  4058d4:	mov	w0, #0x22                  	// #34
  4058d8:	ldr	x19, [x8]
  4058dc:	bl	404e50 <strerror@plt>
  4058e0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4058e4:	mov	x3, x0
  4058e8:	add	x1, x1, #0x8de
  4058ec:	add	x2, sp, #0x60
  4058f0:	mov	x0, x19
  4058f4:	bl	405100 <fprintf@plt>
  4058f8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4058fc:	ldr	x8, [x8, #3992]
  405900:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405904:	add	x1, x1, #0x8ec
  405908:	add	x2, sp, #0x60
  40590c:	ldr	x0, [x8]
  405910:	bl	405100 <fprintf@plt>
  405914:	mov	w0, #0xffffffff            	// #-1
  405918:	ldp	x20, x19, [sp, #256]
  40591c:	ldp	x28, x21, [sp, #240]
  405920:	ldp	x29, x30, [sp, #224]
  405924:	add	sp, sp, #0x110
  405928:	ret

000000000040592c <get_hex@@Base>:
  40592c:	sub	w8, w0, #0x41
  405930:	and	w8, w8, #0xff
  405934:	cmp	w8, #0x6
  405938:	and	w8, w0, #0xff
  40593c:	b.cs	405948 <get_hex@@Base+0x1c>  // b.hs, b.nlast
  405940:	mov	w9, #0xffffffc9            	// #-55
  405944:	b	40595c <get_hex@@Base+0x30>
  405948:	sub	w9, w0, #0x61
  40594c:	and	w9, w9, #0xff
  405950:	cmp	w9, #0x6
  405954:	b.cs	405964 <get_hex@@Base+0x38>  // b.hs, b.nlast
  405958:	mov	w9, #0xffffffa9            	// #-87
  40595c:	add	w0, w9, w8
  405960:	ret
  405964:	sub	w9, w0, #0x30
  405968:	and	w9, w9, #0xff
  40596c:	sub	w8, w8, #0x30
  405970:	cmp	w9, #0xa
  405974:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
  405978:	ret

000000000040597c <get_integer@@Base>:
  40597c:	sub	sp, sp, #0x30
  405980:	stp	x29, x30, [sp, #16]
  405984:	stp	x20, x19, [sp, #32]
  405988:	add	x29, sp, #0x10
  40598c:	cbz	x1, 4059cc <get_integer@@Base+0x50>
  405990:	ldrb	w8, [x1]
  405994:	mov	x20, x1
  405998:	cbz	w8, 4059cc <get_integer@@Base+0x50>
  40599c:	mov	x19, x0
  4059a0:	add	x1, sp, #0x8
  4059a4:	mov	x0, x20
  4059a8:	bl	404ee0 <strtol@plt>
  4059ac:	ldr	x9, [sp, #8]
  4059b0:	mov	x8, x0
  4059b4:	mov	w0, #0xffffffff            	// #-1
  4059b8:	cbz	x9, 4059d0 <get_integer@@Base+0x54>
  4059bc:	cmp	x9, x20
  4059c0:	b.eq	4059d0 <get_integer@@Base+0x54>  // b.none
  4059c4:	ldrb	w9, [x9]
  4059c8:	cbz	w9, 4059e0 <get_integer@@Base+0x64>
  4059cc:	mov	w0, #0xffffffff            	// #-1
  4059d0:	ldp	x20, x19, [sp, #32]
  4059d4:	ldp	x29, x30, [sp, #16]
  4059d8:	add	sp, sp, #0x30
  4059dc:	ret
  4059e0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  4059e4:	add	x9, x8, x9
  4059e8:	cmp	x9, #0x2
  4059ec:	mov	w0, #0xffffffff            	// #-1
  4059f0:	b.cc	4059d0 <get_integer@@Base+0x54>  // b.lo, b.ul, b.last
  4059f4:	mov	w9, #0x80000000            	// #-2147483648
  4059f8:	add	x9, x8, x9
  4059fc:	lsr	x9, x9, #32
  405a00:	cbnz	x9, 4059d0 <get_integer@@Base+0x54>
  405a04:	mov	w0, wzr
  405a08:	str	w8, [x19]
  405a0c:	b	4059d0 <get_integer@@Base+0x54>

0000000000405a10 <mask2bits@@Base>:
  405a10:	rev	w8, w0
  405a14:	neg	w9, w8
  405a18:	bics	wzr, w9, w8
  405a1c:	b.eq	405a28 <mask2bits@@Base+0x18>  // b.none
  405a20:	mov	w0, #0xffffffff            	// #-1
  405a24:	ret
  405a28:	cbz	w0, 405a3c <mask2bits@@Base+0x2c>
  405a2c:	mov	w0, wzr
  405a30:	lsl	w8, w8, #1
  405a34:	add	w0, w0, #0x1
  405a38:	cbnz	w8, 405a30 <mask2bits@@Base+0x20>
  405a3c:	ret

0000000000405a40 <get_unsigned@@Base>:
  405a40:	sub	sp, sp, #0x30
  405a44:	stp	x29, x30, [sp, #16]
  405a48:	stp	x20, x19, [sp, #32]
  405a4c:	add	x29, sp, #0x10
  405a50:	cbz	x1, 405aa8 <get_unsigned@@Base+0x68>
  405a54:	ldrb	w8, [x1]
  405a58:	mov	x20, x1
  405a5c:	cbz	w8, 405aa8 <get_unsigned@@Base+0x68>
  405a60:	mov	x19, x0
  405a64:	add	x1, sp, #0x8
  405a68:	mov	x0, x20
  405a6c:	bl	404c00 <strtoul@plt>
  405a70:	ldr	x9, [sp, #8]
  405a74:	mov	x8, x0
  405a78:	mov	w0, #0xffffffff            	// #-1
  405a7c:	cbz	x9, 405aac <get_unsigned@@Base+0x6c>
  405a80:	cmp	x9, x20
  405a84:	b.eq	405aac <get_unsigned@@Base+0x6c>  // b.none
  405a88:	ldrb	w9, [x9]
  405a8c:	mov	w0, #0xffffffff            	// #-1
  405a90:	cbnz	w9, 405aac <get_unsigned@@Base+0x6c>
  405a94:	lsr	x9, x8, #32
  405a98:	cbnz	x9, 405aac <get_unsigned@@Base+0x6c>
  405a9c:	mov	w0, wzr
  405aa0:	str	w8, [x19]
  405aa4:	b	405aac <get_unsigned@@Base+0x6c>
  405aa8:	mov	w0, #0xffffffff            	// #-1
  405aac:	ldp	x20, x19, [sp, #32]
  405ab0:	ldp	x29, x30, [sp, #16]
  405ab4:	add	sp, sp, #0x30
  405ab8:	ret

0000000000405abc <get_time_rtt@@Base>:
  405abc:	sub	sp, sp, #0x50
  405ac0:	stp	x22, x21, [sp, #48]
  405ac4:	mov	x22, x1
  405ac8:	stp	x20, x19, [sp, #64]
  405acc:	mov	x19, x0
  405ad0:	mov	w1, #0x2e                  	// #46
  405ad4:	mov	x0, x22
  405ad8:	str	d8, [sp, #16]
  405adc:	stp	x29, x30, [sp, #24]
  405ae0:	str	x23, [sp, #40]
  405ae4:	add	x29, sp, #0x10
  405ae8:	mov	x21, x2
  405aec:	bl	404f70 <strchr@plt>
  405af0:	add	x1, sp, #0x8
  405af4:	cbz	x0, 405b4c <get_time_rtt@@Base+0x90>
  405af8:	mov	x0, x22
  405afc:	bl	404c70 <strtod@plt>
  405b00:	fcmp	d0, #0.0
  405b04:	b.mi	405c20 <get_time_rtt@@Base+0x164>  // b.first
  405b08:	ldr	x20, [sp, #8]
  405b0c:	mov	w0, #0xffffffff            	// #-1
  405b10:	cbz	x20, 405c50 <get_time_rtt@@Base+0x194>
  405b14:	cmp	x20, x22
  405b18:	b.eq	405c50 <get_time_rtt@@Base+0x194>  // b.none
  405b1c:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  405b20:	mov	v8.16b, v0.16b
  405b24:	fmov	d0, x8
  405b28:	fcmp	d8, d0
  405b2c:	b.ne	405b8c <get_time_rtt@@Base+0xd0>  // b.any
  405b30:	bl	4050c0 <__errno_location@plt>
  405b34:	ldr	w8, [x0]
  405b38:	cmp	w8, #0x22
  405b3c:	b.eq	405c20 <get_time_rtt@@Base+0x164>  // b.none
  405b40:	mov	x8, #0x7ff0000000000000    	// #9218868437227405312
  405b44:	fmov	d8, x8
  405b48:	b	405b8c <get_time_rtt@@Base+0xd0>
  405b4c:	mov	x0, x22
  405b50:	mov	w2, wzr
  405b54:	bl	404c00 <strtoul@plt>
  405b58:	ldr	x20, [sp, #8]
  405b5c:	mov	x23, x0
  405b60:	mov	w0, #0xffffffff            	// #-1
  405b64:	cbz	x20, 405c50 <get_time_rtt@@Base+0x194>
  405b68:	cmp	x20, x22
  405b6c:	b.eq	405c50 <get_time_rtt@@Base+0x194>  // b.none
  405b70:	cmn	x23, #0x1
  405b74:	b.ne	405b88 <get_time_rtt@@Base+0xcc>  // b.any
  405b78:	bl	4050c0 <__errno_location@plt>
  405b7c:	ldr	w8, [x0]
  405b80:	cmp	w8, #0x22
  405b84:	b.eq	405c20 <get_time_rtt@@Base+0x164>  // b.none
  405b88:	ucvtf	d8, x23
  405b8c:	cmp	x20, x22
  405b90:	b.eq	405c20 <get_time_rtt@@Base+0x164>  // b.none
  405b94:	mov	w8, #0x1                   	// #1
  405b98:	str	w8, [x21]
  405b9c:	ldrb	w8, [x20]
  405ba0:	cbz	w8, 405c34 <get_time_rtt@@Base+0x178>
  405ba4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405ba8:	add	x1, x1, #0x8ea
  405bac:	mov	x0, x20
  405bb0:	str	wzr, [x21]
  405bb4:	bl	404e10 <strcasecmp@plt>
  405bb8:	cbz	w0, 405c28 <get_time_rtt@@Base+0x16c>
  405bbc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405bc0:	add	x1, x1, #0x901
  405bc4:	mov	x0, x20
  405bc8:	bl	404e10 <strcasecmp@plt>
  405bcc:	cbz	w0, 405c28 <get_time_rtt@@Base+0x16c>
  405bd0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405bd4:	add	x1, x1, #0x906
  405bd8:	mov	x0, x20
  405bdc:	bl	404e10 <strcasecmp@plt>
  405be0:	cbz	w0, 405c28 <get_time_rtt@@Base+0x16c>
  405be4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405be8:	add	x1, x1, #0xc86
  405bec:	mov	x0, x20
  405bf0:	bl	404e10 <strcasecmp@plt>
  405bf4:	cbz	w0, 405c34 <get_time_rtt@@Base+0x178>
  405bf8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405bfc:	add	x1, x1, #0x900
  405c00:	mov	x0, x20
  405c04:	bl	404e10 <strcasecmp@plt>
  405c08:	cbz	w0, 405c34 <get_time_rtt@@Base+0x178>
  405c0c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405c10:	add	x1, x1, #0x905
  405c14:	mov	x0, x20
  405c18:	bl	404e10 <strcasecmp@plt>
  405c1c:	cbz	w0, 405c34 <get_time_rtt@@Base+0x178>
  405c20:	mov	w0, #0xffffffff            	// #-1
  405c24:	b	405c50 <get_time_rtt@@Base+0x194>
  405c28:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  405c2c:	ldr	d0, [x8, #2064]
  405c30:	fmul	d8, d8, d0
  405c34:	fcvtzu	w8, d8
  405c38:	ucvtf	d0, w8
  405c3c:	fcmp	d8, d0
  405c40:	cset	w9, gt
  405c44:	mov	w0, wzr
  405c48:	add	w8, w9, w8
  405c4c:	str	w8, [x19]
  405c50:	ldp	x20, x19, [sp, #64]
  405c54:	ldp	x22, x21, [sp, #48]
  405c58:	ldr	x23, [sp, #40]
  405c5c:	ldp	x29, x30, [sp, #24]
  405c60:	ldr	d8, [sp, #16]
  405c64:	add	sp, sp, #0x50
  405c68:	ret

0000000000405c6c <get_u64@@Base>:
  405c6c:	stp	x29, x30, [sp, #-48]!
  405c70:	str	x21, [sp, #16]
  405c74:	stp	x20, x19, [sp, #32]
  405c78:	mov	x29, sp
  405c7c:	cbz	x1, 405cbc <get_u64@@Base+0x50>
  405c80:	ldrb	w8, [x1]
  405c84:	mov	x21, x1
  405c88:	cbz	w8, 405cbc <get_u64@@Base+0x50>
  405c8c:	mov	x19, x0
  405c90:	add	x1, x29, #0x18
  405c94:	mov	x0, x21
  405c98:	bl	404f80 <strtoull@plt>
  405c9c:	ldr	x8, [x29, #24]
  405ca0:	mov	x20, x0
  405ca4:	mov	w0, #0xffffffff            	// #-1
  405ca8:	cbz	x8, 405cc0 <get_u64@@Base+0x54>
  405cac:	cmp	x8, x21
  405cb0:	b.eq	405cc0 <get_u64@@Base+0x54>  // b.none
  405cb4:	ldrb	w8, [x8]
  405cb8:	cbz	w8, 405cd0 <get_u64@@Base+0x64>
  405cbc:	mov	w0, #0xffffffff            	// #-1
  405cc0:	ldp	x20, x19, [sp, #32]
  405cc4:	ldr	x21, [sp, #16]
  405cc8:	ldp	x29, x30, [sp], #48
  405ccc:	ret
  405cd0:	cmn	x20, #0x1
  405cd4:	b.ne	405ce8 <get_u64@@Base+0x7c>  // b.any
  405cd8:	bl	4050c0 <__errno_location@plt>
  405cdc:	ldr	w8, [x0]
  405ce0:	cmp	w8, #0x22
  405ce4:	b.eq	405cbc <get_u64@@Base+0x50>  // b.none
  405ce8:	mov	w0, wzr
  405cec:	str	x20, [x19]
  405cf0:	b	405cc0 <get_u64@@Base+0x54>

0000000000405cf4 <get_u32@@Base>:
  405cf4:	sub	sp, sp, #0x30
  405cf8:	stp	x29, x30, [sp, #16]
  405cfc:	stp	x20, x19, [sp, #32]
  405d00:	add	x29, sp, #0x10
  405d04:	cbz	x1, 405d5c <get_u32@@Base+0x68>
  405d08:	ldrb	w8, [x1]
  405d0c:	mov	x20, x1
  405d10:	cbz	w8, 405d5c <get_u32@@Base+0x68>
  405d14:	mov	x19, x0
  405d18:	add	x1, sp, #0x8
  405d1c:	mov	x0, x20
  405d20:	bl	404c00 <strtoul@plt>
  405d24:	ldr	x9, [sp, #8]
  405d28:	mov	x8, x0
  405d2c:	mov	w0, #0xffffffff            	// #-1
  405d30:	cbz	x9, 405d60 <get_u32@@Base+0x6c>
  405d34:	cmp	x9, x20
  405d38:	b.eq	405d60 <get_u32@@Base+0x6c>  // b.none
  405d3c:	ldrb	w9, [x9]
  405d40:	mov	w0, #0xffffffff            	// #-1
  405d44:	cbnz	w9, 405d60 <get_u32@@Base+0x6c>
  405d48:	lsr	x9, x8, #32
  405d4c:	cbnz	x9, 405d60 <get_u32@@Base+0x6c>
  405d50:	mov	w0, wzr
  405d54:	str	w8, [x19]
  405d58:	b	405d60 <get_u32@@Base+0x6c>
  405d5c:	mov	w0, #0xffffffff            	// #-1
  405d60:	ldp	x20, x19, [sp, #32]
  405d64:	ldp	x29, x30, [sp, #16]
  405d68:	add	sp, sp, #0x30
  405d6c:	ret

0000000000405d70 <get_u16@@Base>:
  405d70:	sub	sp, sp, #0x30
  405d74:	stp	x29, x30, [sp, #16]
  405d78:	stp	x20, x19, [sp, #32]
  405d7c:	add	x29, sp, #0x10
  405d80:	cbz	x1, 405dd8 <get_u16@@Base+0x68>
  405d84:	ldrb	w8, [x1]
  405d88:	mov	x20, x1
  405d8c:	cbz	w8, 405dd8 <get_u16@@Base+0x68>
  405d90:	mov	x19, x0
  405d94:	add	x1, sp, #0x8
  405d98:	mov	x0, x20
  405d9c:	bl	404c00 <strtoul@plt>
  405da0:	ldr	x9, [sp, #8]
  405da4:	mov	x8, x0
  405da8:	mov	w0, #0xffffffff            	// #-1
  405dac:	cbz	x9, 405ddc <get_u16@@Base+0x6c>
  405db0:	cmp	x9, x20
  405db4:	b.eq	405ddc <get_u16@@Base+0x6c>  // b.none
  405db8:	ldrb	w9, [x9]
  405dbc:	mov	w0, #0xffffffff            	// #-1
  405dc0:	cbnz	w9, 405ddc <get_u16@@Base+0x6c>
  405dc4:	lsr	x9, x8, #16
  405dc8:	cbnz	x9, 405ddc <get_u16@@Base+0x6c>
  405dcc:	mov	w0, wzr
  405dd0:	strh	w8, [x19]
  405dd4:	b	405ddc <get_u16@@Base+0x6c>
  405dd8:	mov	w0, #0xffffffff            	// #-1
  405ddc:	ldp	x20, x19, [sp, #32]
  405de0:	ldp	x29, x30, [sp, #16]
  405de4:	add	sp, sp, #0x30
  405de8:	ret

0000000000405dec <get_u8@@Base>:
  405dec:	sub	sp, sp, #0x30
  405df0:	stp	x29, x30, [sp, #16]
  405df4:	stp	x20, x19, [sp, #32]
  405df8:	add	x29, sp, #0x10
  405dfc:	cbz	x1, 405e54 <get_u8@@Base+0x68>
  405e00:	ldrb	w8, [x1]
  405e04:	mov	x20, x1
  405e08:	cbz	w8, 405e54 <get_u8@@Base+0x68>
  405e0c:	mov	x19, x0
  405e10:	add	x1, sp, #0x8
  405e14:	mov	x0, x20
  405e18:	bl	404c00 <strtoul@plt>
  405e1c:	ldr	x9, [sp, #8]
  405e20:	mov	x8, x0
  405e24:	mov	w0, #0xffffffff            	// #-1
  405e28:	cbz	x9, 405e58 <get_u8@@Base+0x6c>
  405e2c:	cmp	x9, x20
  405e30:	b.eq	405e58 <get_u8@@Base+0x6c>  // b.none
  405e34:	ldrb	w9, [x9]
  405e38:	mov	w0, #0xffffffff            	// #-1
  405e3c:	cbnz	w9, 405e58 <get_u8@@Base+0x6c>
  405e40:	cmp	x8, #0xff
  405e44:	b.hi	405e58 <get_u8@@Base+0x6c>  // b.pmore
  405e48:	mov	w0, wzr
  405e4c:	strb	w8, [x19]
  405e50:	b	405e58 <get_u8@@Base+0x6c>
  405e54:	mov	w0, #0xffffffff            	// #-1
  405e58:	ldp	x20, x19, [sp, #32]
  405e5c:	ldp	x29, x30, [sp, #16]
  405e60:	add	sp, sp, #0x30
  405e64:	ret

0000000000405e68 <get_s64@@Base>:
  405e68:	sub	sp, sp, #0x40
  405e6c:	stp	x29, x30, [sp, #16]
  405e70:	stp	x22, x21, [sp, #32]
  405e74:	stp	x20, x19, [sp, #48]
  405e78:	add	x29, sp, #0x10
  405e7c:	mov	w22, w2
  405e80:	mov	x21, x1
  405e84:	mov	x19, x0
  405e88:	bl	4050c0 <__errno_location@plt>
  405e8c:	str	wzr, [x0]
  405e90:	cbz	x21, 405ed0 <get_s64@@Base+0x68>
  405e94:	ldrb	w8, [x21]
  405e98:	cbz	w8, 405ed0 <get_s64@@Base+0x68>
  405e9c:	mov	x20, x0
  405ea0:	add	x1, sp, #0x8
  405ea4:	mov	x0, x21
  405ea8:	mov	w2, w22
  405eac:	bl	404c60 <strtoll@plt>
  405eb0:	ldr	x9, [sp, #8]
  405eb4:	mov	x8, x0
  405eb8:	mov	w0, #0xffffffff            	// #-1
  405ebc:	cbz	x9, 405ed4 <get_s64@@Base+0x6c>
  405ec0:	cmp	x9, x21
  405ec4:	b.eq	405ed4 <get_s64@@Base+0x6c>  // b.none
  405ec8:	ldrb	w9, [x9]
  405ecc:	cbz	w9, 405ee8 <get_s64@@Base+0x80>
  405ed0:	mov	w0, #0xffffffff            	// #-1
  405ed4:	ldp	x20, x19, [sp, #48]
  405ed8:	ldp	x22, x21, [sp, #32]
  405edc:	ldp	x29, x30, [sp, #16]
  405ee0:	add	sp, sp, #0x40
  405ee4:	ret
  405ee8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  405eec:	add	x9, x8, x9
  405ef0:	cmp	x9, #0x1
  405ef4:	b.hi	405f04 <get_s64@@Base+0x9c>  // b.pmore
  405ef8:	ldr	w9, [x20]
  405efc:	cmp	w9, #0x22
  405f00:	b.eq	405ed0 <get_s64@@Base+0x68>  // b.none
  405f04:	mov	w0, wzr
  405f08:	str	x8, [x19]
  405f0c:	b	405ed4 <get_s64@@Base+0x6c>

0000000000405f10 <get_s32@@Base>:
  405f10:	stp	x29, x30, [sp, #-48]!
  405f14:	str	x21, [sp, #16]
  405f18:	stp	x20, x19, [sp, #32]
  405f1c:	mov	x29, sp
  405f20:	mov	w21, w2
  405f24:	mov	x20, x1
  405f28:	mov	x19, x0
  405f2c:	bl	4050c0 <__errno_location@plt>
  405f30:	str	wzr, [x0]
  405f34:	cbz	x20, 405f70 <get_s32@@Base+0x60>
  405f38:	ldrb	w8, [x20]
  405f3c:	cbz	w8, 405f70 <get_s32@@Base+0x60>
  405f40:	add	x1, x29, #0x18
  405f44:	mov	x0, x20
  405f48:	mov	w2, w21
  405f4c:	bl	404ee0 <strtol@plt>
  405f50:	ldr	x9, [x29, #24]
  405f54:	mov	x8, x0
  405f58:	mov	w0, #0xffffffff            	// #-1
  405f5c:	cbz	x9, 405f74 <get_s32@@Base+0x64>
  405f60:	cmp	x9, x20
  405f64:	b.eq	405f74 <get_s32@@Base+0x64>  // b.none
  405f68:	ldrb	w9, [x9]
  405f6c:	cbz	w9, 405f84 <get_s32@@Base+0x74>
  405f70:	mov	w0, #0xffffffff            	// #-1
  405f74:	ldp	x20, x19, [sp, #32]
  405f78:	ldr	x21, [sp, #16]
  405f7c:	ldp	x29, x30, [sp], #48
  405f80:	ret
  405f84:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
  405f88:	add	x9, x8, x9
  405f8c:	cmp	x9, #0x2
  405f90:	mov	w0, #0xffffffff            	// #-1
  405f94:	b.cc	405f74 <get_s32@@Base+0x64>  // b.lo, b.ul, b.last
  405f98:	mov	w9, #0x80000000            	// #-2147483648
  405f9c:	add	x9, x8, x9
  405fa0:	lsr	x9, x9, #32
  405fa4:	cbnz	x9, 405f74 <get_s32@@Base+0x64>
  405fa8:	mov	w0, wzr
  405fac:	str	w8, [x19]
  405fb0:	b	405f74 <get_s32@@Base+0x64>

0000000000405fb4 <get_be64@@Base>:
  405fb4:	stp	x29, x30, [sp, #-32]!
  405fb8:	mov	x29, sp
  405fbc:	str	x19, [sp, #16]
  405fc0:	mov	x19, x0
  405fc4:	add	x0, x29, #0x18
  405fc8:	bl	405c6c <get_u64@@Base>
  405fcc:	cbnz	w0, 405fe4 <get_be64@@Base+0x30>
  405fd0:	ldp	w8, w9, [x29, #24]
  405fd4:	rev	w8, w8
  405fd8:	rev	w9, w9
  405fdc:	bfi	x9, x8, #32, #32
  405fe0:	str	x9, [x19]
  405fe4:	ldr	x19, [sp, #16]
  405fe8:	ldp	x29, x30, [sp], #32
  405fec:	ret

0000000000405ff0 <get_be32@@Base>:
  405ff0:	stp	x29, x30, [sp, #-32]!
  405ff4:	mov	x29, sp
  405ff8:	str	x19, [sp, #16]
  405ffc:	mov	x19, x0
  406000:	add	x0, x29, #0x1c
  406004:	bl	405cf4 <get_u32@@Base>
  406008:	cbnz	w0, 406018 <get_be32@@Base+0x28>
  40600c:	ldr	w8, [x29, #28]
  406010:	rev	w8, w8
  406014:	str	w8, [x19]
  406018:	ldr	x19, [sp, #16]
  40601c:	ldp	x29, x30, [sp], #32
  406020:	ret

0000000000406024 <get_be16@@Base>:
  406024:	stp	x29, x30, [sp, #-32]!
  406028:	mov	x29, sp
  40602c:	str	x19, [sp, #16]
  406030:	mov	x19, x0
  406034:	add	x0, x29, #0x1c
  406038:	bl	405d70 <get_u16@@Base>
  40603c:	cbnz	w0, 406050 <get_be16@@Base+0x2c>
  406040:	ldrh	w8, [x29, #28]
  406044:	rev	w8, w8
  406048:	lsr	w8, w8, #16
  40604c:	strh	w8, [x19]
  406050:	ldr	x19, [sp, #16]
  406054:	ldp	x29, x30, [sp], #32
  406058:	ret

000000000040605c <get_addr64@@Base>:
  40605c:	sub	sp, sp, #0x40
  406060:	stp	x20, x19, [sp, #48]
  406064:	mov	x20, x1
  406068:	mov	x19, x0
  40606c:	mov	x1, sp
  406070:	mov	w2, #0x10                  	// #16
  406074:	mov	x0, x20
  406078:	stp	x29, x30, [sp, #16]
  40607c:	stp	x22, x21, [sp, #32]
  406080:	add	x29, sp, #0x10
  406084:	bl	404c00 <strtoul@plt>
  406088:	lsr	x8, x0, #16
  40608c:	cbnz	x8, 4060f4 <get_addr64@@Base+0x98>
  406090:	ldr	x8, [sp]
  406094:	cmp	x8, x20
  406098:	b.eq	4060f4 <get_addr64@@Base+0x98>  // b.none
  40609c:	mov	x21, xzr
  4060a0:	add	x22, sp, #0x8
  4060a4:	rev	w9, w0
  4060a8:	lsr	w9, w9, #16
  4060ac:	strh	w9, [x22, x21]
  4060b0:	ldrb	w9, [x8]
  4060b4:	cbz	w9, 40610c <get_addr64@@Base+0xb0>
  4060b8:	cmp	x21, #0x6
  4060bc:	b.eq	4060f4 <get_addr64@@Base+0x98>  // b.none
  4060c0:	cmp	w9, #0x3a
  4060c4:	b.ne	4060f4 <get_addr64@@Base+0x98>  // b.any
  4060c8:	add	x20, x8, #0x1
  4060cc:	mov	x1, sp
  4060d0:	mov	w2, #0x10                  	// #16
  4060d4:	mov	x0, x20
  4060d8:	bl	404c00 <strtoul@plt>
  4060dc:	lsr	x8, x0, #16
  4060e0:	cbnz	x8, 4060f4 <get_addr64@@Base+0x98>
  4060e4:	ldr	x8, [sp]
  4060e8:	add	x21, x21, #0x2
  4060ec:	cmp	x8, x20
  4060f0:	b.ne	4060a4 <get_addr64@@Base+0x48>  // b.any
  4060f4:	mov	w0, #0xffffffff            	// #-1
  4060f8:	ldp	x20, x19, [sp, #48]
  4060fc:	ldp	x22, x21, [sp, #32]
  406100:	ldp	x29, x30, [sp, #16]
  406104:	add	sp, sp, #0x40
  406108:	ret
  40610c:	ldr	x8, [sp, #8]
  406110:	mov	w0, #0x1                   	// #1
  406114:	str	x8, [x19]
  406118:	b	4060f8 <get_addr64@@Base+0x9c>

000000000040611c <get_addr_1@@Base>:
  40611c:	sub	sp, sp, #0x40
  406120:	stp	x22, x21, [sp, #32]
  406124:	stp	x20, x19, [sp, #48]
  406128:	mov	w21, w2
  40612c:	mov	x20, x1
  406130:	mov	w2, #0x108                 	// #264
  406134:	mov	w1, wzr
  406138:	stp	x29, x30, [sp, #16]
  40613c:	add	x29, sp, #0x10
  406140:	mov	x19, x0
  406144:	bl	404dc0 <memset@plt>
  406148:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40614c:	add	x1, x1, #0xc66
  406150:	mov	x0, x20
  406154:	bl	404ec0 <strcmp@plt>
  406158:	cbz	w0, 4061d4 <get_addr_1@@Base+0xb8>
  40615c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406160:	add	x1, x1, #0x6a3
  406164:	mov	x0, x20
  406168:	bl	404ec0 <strcmp@plt>
  40616c:	cbz	w0, 4061b8 <get_addr_1@@Base+0x9c>
  406170:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406174:	add	x1, x1, #0xc6e
  406178:	mov	x0, x20
  40617c:	bl	404ec0 <strcmp@plt>
  406180:	cbz	w0, 4061b8 <get_addr_1@@Base+0x9c>
  406184:	cmp	w21, #0x11
  406188:	b.ne	406218 <get_addr_1@@Base+0xfc>  // b.any
  40618c:	add	x0, x19, #0x8
  406190:	mov	w1, #0x100                 	// #256
  406194:	mov	x2, x20
  406198:	bl	408c80 <ll_addr_a2n@@Base>
  40619c:	tbnz	w0, #31, 4061e0 <get_addr_1@@Base+0xc4>
  4061a0:	mov	w8, #0x11                  	// #17
  4061a4:	lsl	w9, w0, #3
  4061a8:	strh	w0, [x19, #2]
  4061ac:	strh	w8, [x19, #6]
  4061b0:	strh	w9, [x19, #4]
  4061b4:	b	4062fc <get_addr_1@@Base+0x1e0>
  4061b8:	orr	w8, w21, #0x10
  4061bc:	cmp	w8, #0x1c
  4061c0:	b.eq	4061e0 <get_addr_1@@Base+0xc4>  // b.none
  4061c4:	strh	w21, [x19, #6]
  4061c8:	mov	w8, #0xfffe0000            	// #-131072
  4061cc:	stur	w8, [x19, #2]
  4061d0:	b	4062fc <get_addr_1@@Base+0x1e0>
  4061d4:	orr	w8, w21, #0x10
  4061d8:	cmp	w8, #0x1c
  4061dc:	b.ne	4061e8 <get_addr_1@@Base+0xcc>  // b.any
  4061e0:	mov	w0, #0xffffffff            	// #-1
  4061e4:	b	406308 <get_addr_1@@Base+0x1ec>
  4061e8:	and	w8, w21, #0xffff
  4061ec:	cmp	w8, #0x9
  4061f0:	strh	w21, [x19, #6]
  4061f4:	b.le	40625c <get_addr_1@@Base+0x140>
  4061f8:	cmp	w8, #0xa
  4061fc:	b.eq	4062d4 <get_addr_1@@Base+0x1b8>  // b.none
  406200:	cmp	w8, #0xc
  406204:	b.eq	406210 <get_addr_1@@Base+0xf4>  // b.none
  406208:	cmp	w8, #0x1c
  40620c:	b.ne	4062e4 <get_addr_1@@Base+0x1c8>  // b.any
  406210:	mov	w8, #0x2                   	// #2
  406214:	b	4062e8 <get_addr_1@@Base+0x1cc>
  406218:	mov	w1, #0x3a                  	// #58
  40621c:	mov	x0, x20
  406220:	bl	404f70 <strchr@plt>
  406224:	cbz	x0, 406274 <get_addr_1@@Base+0x158>
  406228:	mov	w8, #0xa                   	// #10
  40622c:	cmp	w21, #0xa
  406230:	strh	w8, [x19, #6]
  406234:	b.eq	40623c <get_addr_1@@Base+0x120>  // b.none
  406238:	cbnz	w21, 4061e0 <get_addr_1@@Base+0xc4>
  40623c:	add	x2, x19, #0x8
  406240:	mov	w0, #0xa                   	// #10
  406244:	mov	x1, x20
  406248:	bl	404f40 <inet_pton@plt>
  40624c:	cmp	w0, #0x1
  406250:	b.lt	4061e0 <get_addr_1@@Base+0xc4>  // b.tstop
  406254:	mov	w8, #0xffff0010            	// #-65520
  406258:	b	4061cc <get_addr_1@@Base+0xb0>
  40625c:	cmp	w8, #0x2
  406260:	b.eq	4062dc <get_addr_1@@Base+0x1c0>  // b.none
  406264:	cmp	w8, #0x4
  406268:	b.ne	4062e4 <get_addr_1@@Base+0x1c8>  // b.any
  40626c:	mov	w8, #0xa                   	// #10
  406270:	b	4062e8 <get_addr_1@@Base+0x1cc>
  406274:	cmp	w21, #0x1c
  406278:	b.ne	40631c <get_addr_1@@Base+0x200>  // b.any
  40627c:	add	x21, x19, #0x8
  406280:	mov	w8, #0x1c                  	// #28
  406284:	mov	w0, #0x1c                  	// #28
  406288:	mov	w3, #0x100                 	// #256
  40628c:	mov	x1, x20
  406290:	mov	x2, x21
  406294:	strh	w8, [x19, #6]
  406298:	bl	409a48 <mpls_pton@@Base>
  40629c:	cmp	w0, #0x1
  4062a0:	b.lt	4061e0 <get_addr_1@@Base+0xc4>  // b.tstop
  4062a4:	mov	w9, #0x4                   	// #4
  4062a8:	mov	x8, xzr
  4062ac:	movk	w9, #0x14, lsl #16
  4062b0:	stur	w9, [x19, #2]
  4062b4:	cmp	x8, #0x40
  4062b8:	b.eq	4062fc <get_addr_1@@Base+0x1e0>  // b.none
  4062bc:	ldr	w9, [x21, x8, lsl #2]
  4062c0:	add	x8, x8, #0x1
  4062c4:	tbz	w9, #16, 4062b4 <get_addr_1@@Base+0x198>
  4062c8:	lsl	w8, w8, #2
  4062cc:	strh	w8, [x19, #2]
  4062d0:	b	4062fc <get_addr_1@@Base+0x1e0>
  4062d4:	mov	w8, #0x10                  	// #16
  4062d8:	b	4062e8 <get_addr_1@@Base+0x1cc>
  4062dc:	mov	w8, #0x4                   	// #4
  4062e0:	b	4062e8 <get_addr_1@@Base+0x1cc>
  4062e4:	mov	w8, wzr
  4062e8:	strh	w8, [x19, #2]
  4062ec:	mov	w8, #0xfffe                	// #65534
  4062f0:	mov	w9, #0x1                   	// #1
  4062f4:	strh	w8, [x19, #4]
  4062f8:	strh	w9, [x19]
  4062fc:	mov	x0, x19
  406300:	bl	4063ac <get_addr_1@@Base+0x290>
  406304:	mov	w0, wzr
  406308:	ldp	x20, x19, [sp, #48]
  40630c:	ldp	x22, x21, [sp, #32]
  406310:	ldp	x29, x30, [sp, #16]
  406314:	add	sp, sp, #0x40
  406318:	ret
  40631c:	mov	w8, #0x2                   	// #2
  406320:	tst	w21, #0xfffffffd
  406324:	strh	w8, [x19, #6]
  406328:	b.ne	4061e0 <get_addr_1@@Base+0xc4>  // b.any
  40632c:	add	x1, sp, #0x8
  406330:	mov	x0, x20
  406334:	mov	w2, wzr
  406338:	bl	404c00 <strtoul@plt>
  40633c:	cmp	x0, #0xff
  406340:	b.hi	4061e0 <get_addr_1@@Base+0xc4>  // b.pmore
  406344:	ldr	x8, [sp, #8]
  406348:	cmp	x8, x20
  40634c:	b.eq	4061e0 <get_addr_1@@Base+0xc4>  // b.none
  406350:	mov	x21, xzr
  406354:	add	x22, x19, #0x8
  406358:	strb	w0, [x22, x21]
  40635c:	ldrb	w9, [x8]
  406360:	cbz	w9, 4063a4 <get_addr_1@@Base+0x288>
  406364:	cmp	x21, #0x3
  406368:	b.eq	4061e0 <get_addr_1@@Base+0xc4>  // b.none
  40636c:	cmp	w9, #0x2e
  406370:	b.ne	4061e0 <get_addr_1@@Base+0xc4>  // b.any
  406374:	add	x20, x8, #0x1
  406378:	add	x1, sp, #0x8
  40637c:	mov	x0, x20
  406380:	mov	w2, wzr
  406384:	bl	404c00 <strtoul@plt>
  406388:	cmp	x0, #0xff
  40638c:	b.hi	4061e0 <get_addr_1@@Base+0xc4>  // b.pmore
  406390:	ldr	x8, [sp, #8]
  406394:	add	x21, x21, #0x1
  406398:	cmp	x8, x20
  40639c:	b.ne	406358 <get_addr_1@@Base+0x23c>  // b.any
  4063a0:	b	4061e0 <get_addr_1@@Base+0xc4>
  4063a4:	mov	w8, #0xffff0004            	// #-65532
  4063a8:	b	4061cc <get_addr_1@@Base+0xb0>
  4063ac:	ldrh	w8, [x0, #6]
  4063b0:	cmp	w8, #0xa
  4063b4:	b.eq	4063dc <get_addr_1@@Base+0x2c0>  // b.none
  4063b8:	cmp	w8, #0x2
  4063bc:	b.ne	406430 <get_addr_1@@Base+0x314>  // b.any
  4063c0:	ldr	w9, [x0, #8]
  4063c4:	cbz	w9, 406424 <get_addr_1@@Base+0x308>
  4063c8:	ldrh	w8, [x0]
  4063cc:	and	w9, w9, #0xf0
  4063d0:	cmp	w9, #0xe0
  4063d4:	b.eq	4063f4 <get_addr_1@@Base+0x2d8>  // b.none
  4063d8:	b	40641c <get_addr_1@@Base+0x300>
  4063dc:	ldr	w9, [x0, #8]
  4063e0:	cbz	w9, 406400 <get_addr_1@@Base+0x2e4>
  4063e4:	ldrh	w8, [x0]
  4063e8:	mvn	w9, w9
  4063ec:	tst	w9, #0xff
  4063f0:	b.ne	40641c <get_addr_1@@Base+0x300>  // b.any
  4063f4:	mov	w9, #0xa                   	// #10
  4063f8:	orr	w8, w8, w9
  4063fc:	b	40642c <get_addr_1@@Base+0x310>
  406400:	ldr	w8, [x0, #12]
  406404:	cbnz	w8, 406418 <get_addr_1@@Base+0x2fc>
  406408:	ldr	w8, [x0, #16]
  40640c:	cbnz	w8, 406418 <get_addr_1@@Base+0x2fc>
  406410:	ldr	w8, [x0, #20]
  406414:	cbz	w8, 406424 <get_addr_1@@Base+0x308>
  406418:	ldrh	w8, [x0]
  40641c:	orr	w8, w8, #0x2
  406420:	b	40642c <get_addr_1@@Base+0x310>
  406424:	ldrh	w8, [x0]
  406428:	orr	w8, w8, #0x6
  40642c:	strh	w8, [x0]
  406430:	ret

0000000000406434 <af_bit_len@@Base>:
  406434:	cmp	w0, #0x9
  406438:	b.le	40645c <af_bit_len@@Base+0x28>
  40643c:	cmp	w0, #0xa
  406440:	b.eq	406474 <af_bit_len@@Base+0x40>  // b.none
  406444:	cmp	w0, #0xc
  406448:	b.eq	40647c <af_bit_len@@Base+0x48>  // b.none
  40644c:	cmp	w0, #0x1c
  406450:	b.ne	40648c <af_bit_len@@Base+0x58>  // b.any
  406454:	mov	w0, #0x14                  	// #20
  406458:	ret
  40645c:	cmp	w0, #0x2
  406460:	b.eq	406484 <af_bit_len@@Base+0x50>  // b.none
  406464:	cmp	w0, #0x4
  406468:	b.ne	40648c <af_bit_len@@Base+0x58>  // b.any
  40646c:	mov	w0, #0x50                  	// #80
  406470:	ret
  406474:	mov	w0, #0x80                  	// #128
  406478:	ret
  40647c:	mov	w0, #0x10                  	// #16
  406480:	ret
  406484:	mov	w0, #0x20                  	// #32
  406488:	ret
  40648c:	mov	w0, wzr
  406490:	ret

0000000000406494 <get_prefix_1@@Base>:
  406494:	sub	sp, sp, #0x150
  406498:	stp	x22, x21, [sp, #304]
  40649c:	mov	x22, x1
  4064a0:	stp	x20, x19, [sp, #320]
  4064a4:	mov	x19, x0
  4064a8:	mov	w1, #0x2f                  	// #47
  4064ac:	mov	x0, x22
  4064b0:	stp	x29, x30, [sp, #272]
  4064b4:	stp	x28, x23, [sp, #288]
  4064b8:	add	x29, sp, #0x110
  4064bc:	mov	w21, w2
  4064c0:	mov	w23, #0x2f                  	// #47
  4064c4:	bl	404f70 <strchr@plt>
  4064c8:	mov	x20, x0
  4064cc:	cbz	x0, 4064f0 <get_prefix_1@@Base+0x5c>
  4064d0:	mov	x0, x19
  4064d4:	mov	x1, x22
  4064d8:	mov	w2, w21
  4064dc:	strb	wzr, [x20]
  4064e0:	bl	40611c <get_addr_1@@Base>
  4064e4:	strb	w23, [x20]
  4064e8:	cbnz	w0, 406628 <get_prefix_1@@Base+0x194>
  4064ec:	b	406504 <get_prefix_1@@Base+0x70>
  4064f0:	mov	x0, x19
  4064f4:	mov	x1, x22
  4064f8:	mov	w2, w21
  4064fc:	bl	40611c <get_addr_1@@Base>
  406500:	cbnz	w0, 406628 <get_prefix_1@@Base+0x194>
  406504:	ldrh	w8, [x19, #6]
  406508:	cmp	w8, #0x9
  40650c:	b.le	406534 <get_prefix_1@@Base+0xa0>
  406510:	cmp	w8, #0xa
  406514:	b.eq	406550 <get_prefix_1@@Base+0xbc>  // b.none
  406518:	cmp	w8, #0xc
  40651c:	b.eq	40655c <get_prefix_1@@Base+0xc8>  // b.none
  406520:	cmp	w8, #0x1c
  406524:	b.ne	406598 <get_prefix_1@@Base+0x104>  // b.any
  406528:	mov	w21, #0x14                  	// #20
  40652c:	cbnz	x20, 4065a0 <get_prefix_1@@Base+0x10c>
  406530:	b	406570 <get_prefix_1@@Base+0xdc>
  406534:	cmp	w8, #0x2
  406538:	b.eq	406568 <get_prefix_1@@Base+0xd4>  // b.none
  40653c:	cmp	w8, #0x4
  406540:	b.ne	406598 <get_prefix_1@@Base+0x104>  // b.any
  406544:	mov	w21, #0x50                  	// #80
  406548:	cbnz	x20, 4065a0 <get_prefix_1@@Base+0x10c>
  40654c:	b	406570 <get_prefix_1@@Base+0xdc>
  406550:	mov	w21, #0x80                  	// #128
  406554:	cbnz	x20, 4065a0 <get_prefix_1@@Base+0x10c>
  406558:	b	406570 <get_prefix_1@@Base+0xdc>
  40655c:	mov	w21, #0x10                  	// #16
  406560:	cbnz	x20, 4065a0 <get_prefix_1@@Base+0x10c>
  406564:	b	406570 <get_prefix_1@@Base+0xdc>
  406568:	mov	w21, #0x20                  	// #32
  40656c:	cbnz	x20, 4065a0 <get_prefix_1@@Base+0x10c>
  406570:	ldrsh	w8, [x19, #4]
  406574:	mov	w9, wzr
  406578:	cmn	w8, #0x2
  40657c:	csel	w8, wzr, w21, eq  // eq = none
  406580:	ldrh	w10, [x19]
  406584:	mov	w0, wzr
  406588:	strh	w8, [x19, #4]
  40658c:	orr	w9, w10, w9
  406590:	strh	w9, [x19]
  406594:	b	406628 <get_prefix_1@@Base+0x194>
  406598:	mov	w21, wzr
  40659c:	cbz	x20, 406570 <get_prefix_1@@Base+0xdc>
  4065a0:	ldrsh	w8, [x19, #4]
  4065a4:	cmn	w8, #0x2
  4065a8:	b.eq	406624 <get_prefix_1@@Base+0x190>  // b.none
  4065ac:	add	x20, x20, #0x1
  4065b0:	add	x0, sp, #0x4
  4065b4:	mov	x1, x20
  4065b8:	mov	w2, wzr
  4065bc:	bl	405a40 <get_unsigned@@Base>
  4065c0:	cbz	w0, 406614 <get_prefix_1@@Base+0x180>
  4065c4:	add	x0, sp, #0x8
  4065c8:	mov	w2, #0x2                   	// #2
  4065cc:	mov	x1, x20
  4065d0:	bl	40611c <get_addr_1@@Base>
  4065d4:	cbnz	w0, 406624 <get_prefix_1@@Base+0x190>
  4065d8:	ldrh	w8, [sp, #14]
  4065dc:	cmp	w8, #0x2
  4065e0:	b.ne	406624 <get_prefix_1@@Base+0x190>  // b.any
  4065e4:	ldr	w8, [sp, #16]
  4065e8:	rev	w9, w8
  4065ec:	neg	w10, w9
  4065f0:	bics	wzr, w10, w9
  4065f4:	b.ne	406624 <get_prefix_1@@Base+0x190>  // b.any
  4065f8:	cbz	w8, 40660c <get_prefix_1@@Base+0x178>
  4065fc:	mov	w8, wzr
  406600:	lsl	w9, w9, #1
  406604:	add	w8, w8, #0x1
  406608:	cbnz	w9, 406600 <get_prefix_1@@Base+0x16c>
  40660c:	str	w8, [sp, #4]
  406610:	b	406618 <get_prefix_1@@Base+0x184>
  406614:	ldr	w8, [sp, #4]
  406618:	cmp	w8, w21
  40661c:	cset	w9, ls  // ls = plast
  406620:	b.ls	406580 <get_prefix_1@@Base+0xec>  // b.plast
  406624:	mov	w0, #0xffffffff            	// #-1
  406628:	ldp	x20, x19, [sp, #320]
  40662c:	ldp	x22, x21, [sp, #304]
  406630:	ldp	x28, x23, [sp, #288]
  406634:	ldp	x29, x30, [sp, #272]
  406638:	add	sp, sp, #0x150
  40663c:	ret

0000000000406640 <get_addr@@Base>:
  406640:	stp	x29, x30, [sp, #-48]!
  406644:	str	x21, [sp, #16]
  406648:	stp	x20, x19, [sp, #32]
  40664c:	mov	x29, sp
  406650:	mov	w20, w2
  406654:	mov	x19, x1
  406658:	bl	40611c <get_addr_1@@Base>
  40665c:	cbnz	w0, 406670 <get_addr@@Base+0x30>
  406660:	ldp	x20, x19, [sp, #32]
  406664:	ldr	x21, [sp, #16]
  406668:	ldp	x29, x30, [sp], #48
  40666c:	ret
  406670:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406674:	ldr	x8, [x8, #3992]
  406678:	mov	w0, w20
  40667c:	ldr	x21, [x8]
  406680:	bl	4066a4 <get_addr@@Base+0x64>
  406684:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406688:	mov	x2, x0
  40668c:	add	x1, x1, #0x90b
  406690:	mov	x0, x21
  406694:	mov	x3, x19
  406698:	bl	405100 <fprintf@plt>
  40669c:	mov	w0, #0x1                   	// #1
  4066a0:	bl	404c30 <exit@plt>
  4066a4:	cbz	w0, 4066ac <get_addr@@Base+0x6c>
  4066a8:	b	406f18 <family_name@@Base>
  4066ac:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4066b0:	add	x0, x0, #0xc72
  4066b4:	ret

00000000004066b8 <get_addr_rta@@Base>:
  4066b8:	stp	x29, x30, [sp, #-16]!
  4066bc:	ldrh	w8, [x1], #4
  4066c0:	mov	x29, sp
  4066c4:	sub	w8, w8, #0x6
  4066c8:	ror	w9, w8, #1
  4066cc:	cmp	w9, #0x7
  4066d0:	mov	w8, #0xffffffff            	// #-1
  4066d4:	b.hi	406798 <get_addr_rta@@Base+0xe0>  // b.pmore
  4066d8:	adrp	x10, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4066dc:	add	x10, x10, #0x828
  4066e0:	adr	x11, 4066f0 <get_addr_rta@@Base+0x38>
  4066e4:	ldrb	w12, [x10, x9]
  4066e8:	add	x11, x11, x12, lsl #2
  4066ec:	br	x11
  4066f0:	mov	w8, #0xc                   	// #12
  4066f4:	mov	w9, #0x2                   	// #2
  4066f8:	strh	w8, [x0, #6]
  4066fc:	strh	w9, [x0, #2]
  406700:	ldrh	w9, [x1]
  406704:	strh	w9, [x0, #8]
  406708:	cbnz	w2, 406774 <get_addr_rta@@Base+0xbc>
  40670c:	b	406784 <get_addr_rta@@Base+0xcc>
  406710:	mov	w8, #0x2                   	// #2
  406714:	mov	w9, #0x4                   	// #4
  406718:	strh	w8, [x0, #6]
  40671c:	strh	w9, [x0, #2]
  406720:	ldr	w9, [x1]
  406724:	str	w9, [x0, #8]
  406728:	cbnz	w2, 406774 <get_addr_rta@@Base+0xbc>
  40672c:	b	406784 <get_addr_rta@@Base+0xcc>
  406730:	mov	w8, #0x4                   	// #4
  406734:	mov	w9, #0xa                   	// #10
  406738:	strh	w8, [x0, #6]
  40673c:	strh	w9, [x0, #2]
  406740:	ldrh	w9, [x1, #8]
  406744:	ldr	x10, [x1]
  406748:	strh	w9, [x0, #16]
  40674c:	str	x10, [x0, #8]
  406750:	cbnz	w2, 406774 <get_addr_rta@@Base+0xbc>
  406754:	b	406784 <get_addr_rta@@Base+0xcc>
  406758:	mov	w8, #0xa                   	// #10
  40675c:	mov	w9, #0x10                  	// #16
  406760:	strh	w8, [x0, #6]
  406764:	strh	w9, [x0, #2]
  406768:	ldr	q0, [x1]
  40676c:	stur	q0, [x0, #8]
  406770:	cbz	w2, 406784 <get_addr_rta@@Base+0xcc>
  406774:	cmp	w8, w2
  406778:	b.eq	406784 <get_addr_rta@@Base+0xcc>  // b.none
  40677c:	mov	w8, #0xfffffffe            	// #-2
  406780:	b	406798 <get_addr_rta@@Base+0xe0>
  406784:	mov	w8, #0xffff                	// #65535
  406788:	strh	w8, [x0, #4]
  40678c:	strh	wzr, [x0]
  406790:	bl	4063ac <get_addr_1@@Base+0x290>
  406794:	mov	w8, wzr
  406798:	mov	w0, w8
  40679c:	ldp	x29, x30, [sp], #16
  4067a0:	ret

00000000004067a4 <get_prefix@@Base>:
  4067a4:	stp	x29, x30, [sp, #-48]!
  4067a8:	stp	x20, x19, [sp, #32]
  4067ac:	mov	x19, x1
  4067b0:	cmp	w2, #0x11
  4067b4:	str	x21, [sp, #16]
  4067b8:	mov	x29, sp
  4067bc:	b.eq	4067e0 <get_prefix@@Base+0x3c>  // b.none
  4067c0:	mov	x1, x19
  4067c4:	mov	w20, w2
  4067c8:	bl	406494 <get_prefix_1@@Base>
  4067cc:	cbnz	w0, 406800 <get_prefix@@Base+0x5c>
  4067d0:	ldp	x20, x19, [sp, #32]
  4067d4:	ldr	x21, [sp, #16]
  4067d8:	ldp	x29, x30, [sp], #48
  4067dc:	ret
  4067e0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4067e4:	ldr	x8, [x8, #3992]
  4067e8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4067ec:	add	x1, x1, #0x93c
  4067f0:	mov	x2, x19
  4067f4:	ldr	x0, [x8]
  4067f8:	bl	405100 <fprintf@plt>
  4067fc:	b	40682c <get_prefix@@Base+0x88>
  406800:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406804:	ldr	x8, [x8, #3992]
  406808:	mov	w0, w20
  40680c:	ldr	x21, [x8]
  406810:	bl	4066a4 <get_addr@@Base+0x64>
  406814:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406818:	mov	x2, x0
  40681c:	add	x1, x1, #0x984
  406820:	mov	x0, x21
  406824:	mov	x3, x19
  406828:	bl	405100 <fprintf@plt>
  40682c:	mov	w0, #0x1                   	// #1
  406830:	bl	404c30 <exit@plt>

0000000000406834 <get_addr32@@Base>:
  406834:	sub	sp, sp, #0x130
  406838:	stp	x28, x19, [sp, #288]
  40683c:	mov	x19, x0
  406840:	add	x0, sp, #0x8
  406844:	mov	w2, #0x2                   	// #2
  406848:	mov	x1, x19
  40684c:	stp	x29, x30, [sp, #272]
  406850:	add	x29, sp, #0x110
  406854:	bl	40611c <get_addr_1@@Base>
  406858:	cbnz	w0, 406870 <get_addr32@@Base+0x3c>
  40685c:	ldr	w0, [sp, #16]
  406860:	ldp	x28, x19, [sp, #288]
  406864:	ldp	x29, x30, [sp, #272]
  406868:	add	sp, sp, #0x130
  40686c:	ret
  406870:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406874:	ldr	x8, [x8, #3992]
  406878:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40687c:	add	x1, x1, #0x9b4
  406880:	mov	x2, x19
  406884:	ldr	x0, [x8]
  406888:	bl	405100 <fprintf@plt>
  40688c:	mov	w0, #0x1                   	// #1
  406890:	bl	404c30 <exit@plt>

0000000000406894 <incomplete_command@@Base>:
  406894:	stp	x29, x30, [sp, #-16]!
  406898:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40689c:	ldr	x8, [x8, #3992]
  4068a0:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4068a4:	add	x0, x0, #0x9e7
  4068a8:	mov	w1, #0x30                  	// #48
  4068ac:	ldr	x3, [x8]
  4068b0:	mov	w2, #0x1                   	// #1
  4068b4:	mov	x29, sp
  4068b8:	bl	404f90 <fwrite@plt>
  4068bc:	mov	w0, #0xffffffff            	// #-1
  4068c0:	bl	404c30 <exit@plt>

00000000004068c4 <missarg@@Base>:
  4068c4:	stp	x29, x30, [sp, #-16]!
  4068c8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4068cc:	ldr	x8, [x8, #3992]
  4068d0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4068d4:	mov	x2, x0
  4068d8:	add	x1, x1, #0xa18
  4068dc:	ldr	x8, [x8]
  4068e0:	mov	x29, sp
  4068e4:	mov	x0, x8
  4068e8:	bl	405100 <fprintf@plt>
  4068ec:	mov	w0, #0xffffffff            	// #-1
  4068f0:	bl	404c30 <exit@plt>

00000000004068f4 <invarg@@Base>:
  4068f4:	stp	x29, x30, [sp, #-16]!
  4068f8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4068fc:	ldr	x8, [x8, #3992]
  406900:	mov	x2, x1
  406904:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406908:	mov	x3, x0
  40690c:	ldr	x8, [x8]
  406910:	add	x1, x1, #0xa3a
  406914:	mov	x29, sp
  406918:	mov	x0, x8
  40691c:	bl	405100 <fprintf@plt>
  406920:	mov	w0, #0xffffffff            	// #-1
  406924:	bl	404c30 <exit@plt>

0000000000406928 <duparg@@Base>:
  406928:	stp	x29, x30, [sp, #-16]!
  40692c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406930:	ldr	x8, [x8, #3992]
  406934:	mov	x3, x1
  406938:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40693c:	mov	x2, x0
  406940:	ldr	x8, [x8]
  406944:	add	x1, x1, #0xa5d
  406948:	mov	x29, sp
  40694c:	mov	x0, x8
  406950:	bl	405100 <fprintf@plt>
  406954:	mov	w0, #0xffffffff            	// #-1
  406958:	bl	404c30 <exit@plt>

000000000040695c <duparg2@@Base>:
  40695c:	stp	x29, x30, [sp, #-16]!
  406960:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406964:	ldr	x8, [x8, #3992]
  406968:	mov	x3, x1
  40696c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406970:	mov	x2, x0
  406974:	ldr	x8, [x8]
  406978:	add	x1, x1, #0xa8f
  40697c:	mov	x29, sp
  406980:	mov	x0, x8
  406984:	bl	405100 <fprintf@plt>
  406988:	mov	w0, #0xffffffff            	// #-1
  40698c:	bl	404c30 <exit@plt>

0000000000406990 <nodev@@Base>:
  406990:	stp	x29, x30, [sp, #-16]!
  406994:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406998:	ldr	x8, [x8, #3992]
  40699c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4069a0:	mov	x2, x0
  4069a4:	add	x1, x1, #0xac7
  4069a8:	ldr	x8, [x8]
  4069ac:	mov	x29, sp
  4069b0:	mov	x0, x8
  4069b4:	bl	405100 <fprintf@plt>
  4069b8:	mov	w0, #0xffffffff            	// #-1
  4069bc:	ldp	x29, x30, [sp], #16
  4069c0:	ret

00000000004069c4 <check_ifname@@Base>:
  4069c4:	stp	x29, x30, [sp, #-32]!
  4069c8:	str	x19, [sp, #16]
  4069cc:	mov	x29, sp
  4069d0:	mov	x19, x0
  4069d4:	bl	404c10 <strlen@plt>
  4069d8:	cmp	x0, #0xf
  4069dc:	b.ls	4069f0 <check_ifname@@Base+0x2c>  // b.plast
  4069e0:	ldr	x19, [sp, #16]
  4069e4:	mov	w0, #0xffffffff            	// #-1
  4069e8:	ldp	x29, x30, [sp], #32
  4069ec:	ret
  4069f0:	mov	x0, x19
  4069f4:	ldr	x19, [sp, #16]
  4069f8:	ldp	x29, x30, [sp], #32
  4069fc:	b	406a00 <check_ifname@@Base+0x3c>
  406a00:	stp	x29, x30, [sp, #-32]!
  406a04:	stp	x20, x19, [sp, #16]
  406a08:	ldrb	w20, [x0]
  406a0c:	mov	x29, sp
  406a10:	cbz	w20, 406a44 <check_ifname@@Base+0x80>
  406a14:	add	x19, x0, #0x1
  406a18:	ands	w8, w20, #0xff
  406a1c:	b.eq	406a54 <check_ifname@@Base+0x90>  // b.none
  406a20:	cmp	w8, #0x2f
  406a24:	b.eq	406a44 <check_ifname@@Base+0x80>  // b.none
  406a28:	bl	404ed0 <__ctype_b_loc@plt>
  406a2c:	ldr	x8, [x0]
  406a30:	and	x9, x20, #0xff
  406a34:	ldrh	w8, [x8, x9, lsl #1]
  406a38:	tbnz	w8, #13, 406a44 <check_ifname@@Base+0x80>
  406a3c:	ldrb	w20, [x19], #1
  406a40:	b	406a18 <check_ifname@@Base+0x54>
  406a44:	mov	w0, #0xffffffff            	// #-1
  406a48:	ldp	x20, x19, [sp, #16]
  406a4c:	ldp	x29, x30, [sp], #32
  406a50:	ret
  406a54:	mov	w0, wzr
  406a58:	b	406a48 <check_ifname@@Base+0x84>

0000000000406a5c <check_altifname@@Base>:
  406a5c:	b	406a00 <check_ifname@@Base+0x3c>

0000000000406a60 <get_ifname@@Base>:
  406a60:	stp	x29, x30, [sp, #-32]!
  406a64:	stp	x20, x19, [sp, #16]
  406a68:	mov	x20, x0
  406a6c:	mov	x0, x1
  406a70:	mov	x29, sp
  406a74:	mov	x19, x1
  406a78:	bl	404c10 <strlen@plt>
  406a7c:	cmp	x0, #0xf
  406a80:	b.ls	406a8c <get_ifname@@Base+0x2c>  // b.plast
  406a84:	mov	w0, #0xffffffff            	// #-1
  406a88:	b	406aac <get_ifname@@Base+0x4c>
  406a8c:	mov	x0, x19
  406a90:	bl	406a00 <check_ifname@@Base+0x3c>
  406a94:	cbnz	w0, 406aac <get_ifname@@Base+0x4c>
  406a98:	mov	w2, #0x10                  	// #16
  406a9c:	mov	x0, x20
  406aa0:	mov	x1, x19
  406aa4:	bl	405070 <strncpy@plt>
  406aa8:	mov	w0, wzr
  406aac:	ldp	x20, x19, [sp, #16]
  406ab0:	ldp	x29, x30, [sp], #32
  406ab4:	ret

0000000000406ab8 <get_ifname_rta@@Base>:
  406ab8:	stp	x29, x30, [sp, #-32]!
  406abc:	str	x19, [sp, #16]
  406ac0:	mov	x29, sp
  406ac4:	cbz	x1, 406b00 <get_ifname_rta@@Base+0x48>
  406ac8:	add	x19, x1, #0x4
  406acc:	mov	x0, x19
  406ad0:	bl	404c10 <strlen@plt>
  406ad4:	cmp	x0, #0xf
  406ad8:	b.ls	406ae4 <get_ifname_rta@@Base+0x2c>  // b.plast
  406adc:	mov	x0, xzr
  406ae0:	b	406af4 <get_ifname_rta@@Base+0x3c>
  406ae4:	mov	x0, x19
  406ae8:	bl	406a00 <check_ifname@@Base+0x3c>
  406aec:	cmp	w0, #0x0
  406af0:	csel	x0, x19, xzr, eq  // eq = none
  406af4:	ldr	x19, [sp, #16]
  406af8:	ldp	x29, x30, [sp], #32
  406afc:	ret
  406b00:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406b04:	ldr	x8, [x8, #3992]
  406b08:	mov	w19, w0
  406b0c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406b10:	add	x1, x1, #0xae0
  406b14:	ldr	x0, [x8]
  406b18:	mov	w2, w19
  406b1c:	bl	405100 <fprintf@plt>
  406b20:	mov	w0, w19
  406b24:	bl	408574 <ll_idx_n2a@@Base>
  406b28:	mov	x19, x0
  406b2c:	b	406acc <get_ifname_rta@@Base+0x14>

0000000000406b30 <matches@@Base>:
  406b30:	ldrb	w9, [x0]
  406b34:	cbz	w9, 406b78 <matches@@Base+0x48>
  406b38:	ldrb	w10, [x1]
  406b3c:	mov	x8, x0
  406b40:	mov	w0, #0x1                   	// #1
  406b44:	cbz	w10, 406b74 <matches@@Base+0x44>
  406b48:	cmp	w9, w10
  406b4c:	b.ne	406b74 <matches@@Base+0x44>  // b.any
  406b50:	add	x8, x8, #0x1
  406b54:	add	x9, x1, #0x1
  406b58:	ldrb	w11, [x9], #1
  406b5c:	ldrb	w10, [x8], #1
  406b60:	cbz	w11, 406b6c <matches@@Base+0x3c>
  406b64:	cmp	w10, w11
  406b68:	b.eq	406b58 <matches@@Base+0x28>  // b.none
  406b6c:	cmp	w10, #0x0
  406b70:	cset	w0, ne  // ne = any
  406b74:	ret
  406b78:	mov	w0, #0x1                   	// #1
  406b7c:	ret

0000000000406b80 <inet_addr_match@@Base>:
  406b80:	stp	x29, x30, [sp, #-48]!
  406b84:	stp	x22, x21, [sp, #16]
  406b88:	stp	x20, x19, [sp, #32]
  406b8c:	mov	w21, w2
  406b90:	mov	x19, x1
  406b94:	asr	w22, w2, #5
  406b98:	mov	x20, x0
  406b9c:	mov	x29, sp
  406ba0:	cbz	w22, 406bc4 <inet_addr_match@@Base+0x44>
  406ba4:	lsl	w8, w22, #2
  406ba8:	add	x1, x19, #0x8
  406bac:	add	x0, x20, #0x8
  406bb0:	sxtw	x2, w8
  406bb4:	bl	404e00 <bcmp@plt>
  406bb8:	cbz	w0, 406bc4 <inet_addr_match@@Base+0x44>
  406bbc:	mov	w0, #0xffffffff            	// #-1
  406bc0:	b	406c04 <inet_addr_match@@Base+0x84>
  406bc4:	and	w8, w21, #0x1f
  406bc8:	cbz	w8, 406c00 <inet_addr_match@@Base+0x80>
  406bcc:	add	x9, x20, w22, sxtw #2
  406bd0:	add	x10, x19, w22, sxtw #2
  406bd4:	ldr	w9, [x9, #8]
  406bd8:	ldr	w10, [x10, #8]
  406bdc:	neg	w8, w8
  406be0:	mov	w11, #0xffffffff            	// #-1
  406be4:	lsl	w8, w11, w8
  406be8:	rev	w8, w8
  406bec:	eor	w9, w10, w9
  406bf0:	tst	w9, w8
  406bf4:	b.eq	406c00 <inet_addr_match@@Base+0x80>  // b.none
  406bf8:	mov	w0, #0x1                   	// #1
  406bfc:	b	406c04 <inet_addr_match@@Base+0x84>
  406c00:	mov	w0, wzr
  406c04:	ldp	x20, x19, [sp, #32]
  406c08:	ldp	x22, x21, [sp, #16]
  406c0c:	ldp	x29, x30, [sp], #48
  406c10:	ret

0000000000406c14 <inet_addr_match_rta@@Base>:
  406c14:	sub	sp, sp, #0x130
  406c18:	stp	x29, x30, [sp, #272]
  406c1c:	stp	x28, x19, [sp, #288]
  406c20:	add	x29, sp, #0x110
  406c24:	cbz	x1, 406c54 <inet_addr_match_rta@@Base+0x40>
  406c28:	ldrh	w2, [x0, #6]
  406c2c:	mov	x19, x0
  406c30:	cbz	w2, 406c54 <inet_addr_match_rta@@Base+0x40>
  406c34:	ldrsh	w8, [x19, #4]
  406c38:	cmp	w8, #0x1
  406c3c:	b.lt	406c54 <inet_addr_match_rta@@Base+0x40>  // b.tstop
  406c40:	add	x0, sp, #0x8
  406c44:	bl	4066b8 <get_addr_rta@@Base>
  406c48:	cbz	w0, 406c68 <inet_addr_match_rta@@Base+0x54>
  406c4c:	mov	w0, #0xffffffff            	// #-1
  406c50:	b	406c58 <inet_addr_match_rta@@Base+0x44>
  406c54:	mov	w0, wzr
  406c58:	ldp	x28, x19, [sp, #288]
  406c5c:	ldp	x29, x30, [sp, #272]
  406c60:	add	sp, sp, #0x130
  406c64:	ret
  406c68:	ldrsh	w2, [x19, #4]
  406c6c:	add	x0, sp, #0x8
  406c70:	mov	x1, x19
  406c74:	bl	406b80 <inet_addr_match@@Base>
  406c78:	b	406c58 <inet_addr_match_rta@@Base+0x44>

0000000000406c7c <__get_hz@@Base>:
  406c7c:	stp	x29, x30, [sp, #-64]!
  406c80:	str	x28, [sp, #16]
  406c84:	stp	x22, x21, [sp, #32]
  406c88:	stp	x20, x19, [sp, #48]
  406c8c:	mov	x29, sp
  406c90:	sub	sp, sp, #0x400
  406c94:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406c98:	add	x0, x0, #0xb0c
  406c9c:	bl	4050d0 <getenv@plt>
  406ca0:	cbz	x0, 406cb8 <__get_hz@@Base+0x3c>
  406ca4:	bl	404d40 <atoi@plt>
  406ca8:	cmp	w0, #0x0
  406cac:	mov	w8, #0x64                  	// #100
  406cb0:	csel	w19, w8, w0, eq  // eq = none
  406cb4:	b	406d5c <__get_hz@@Base+0xe0>
  406cb8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406cbc:	add	x0, x0, #0xb0f
  406cc0:	bl	4050d0 <getenv@plt>
  406cc4:	cbz	x0, 406cd8 <__get_hz@@Base+0x5c>
  406cc8:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406ccc:	mov	x3, x0
  406cd0:	add	x2, x2, #0x8e9
  406cd4:	b	406cf4 <__get_hz@@Base+0x78>
  406cd8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406cdc:	add	x0, x0, #0xb1f
  406ce0:	bl	4050d0 <getenv@plt>
  406ce4:	cbz	x0, 406d78 <__get_hz@@Base+0xfc>
  406ce8:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406cec:	mov	x3, x0
  406cf0:	add	x2, x2, #0xb29
  406cf4:	mov	x0, sp
  406cf8:	mov	w1, #0x3ff                 	// #1023
  406cfc:	bl	404d00 <snprintf@plt>
  406d00:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406d04:	add	x1, x1, #0xe59
  406d08:	mov	x0, sp
  406d0c:	bl	404fd0 <fopen64@plt>
  406d10:	cbz	x0, 406d58 <__get_hz@@Base+0xdc>
  406d14:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406d18:	add	x1, x1, #0xb48
  406d1c:	add	x2, x29, #0x1c
  406d20:	add	x3, x29, #0x18
  406d24:	mov	x20, x0
  406d28:	bl	404d80 <__isoc99_fscanf@plt>
  406d2c:	ldp	w19, w22, [x29, #24]
  406d30:	mov	w21, w0
  406d34:	mov	x0, x20
  406d38:	bl	404d30 <fclose@plt>
  406d3c:	cmp	w21, #0x2
  406d40:	b.ne	406d58 <__get_hz@@Base+0xdc>  // b.any
  406d44:	mov	w8, #0x4240                	// #16960
  406d48:	movk	w8, #0xf, lsl #16
  406d4c:	cmp	w22, w8
  406d50:	b.ne	406d58 <__get_hz@@Base+0xdc>  // b.any
  406d54:	cbnz	w19, 406d5c <__get_hz@@Base+0xe0>
  406d58:	mov	w19, #0x64                  	// #100
  406d5c:	mov	w0, w19
  406d60:	add	sp, sp, #0x400
  406d64:	ldp	x20, x19, [sp, #48]
  406d68:	ldp	x22, x21, [sp, #32]
  406d6c:	ldr	x28, [sp, #16]
  406d70:	ldp	x29, x30, [sp], #64
  406d74:	ret
  406d78:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406d7c:	add	x8, x8, #0xb37
  406d80:	ldr	q0, [x8]
  406d84:	strb	wzr, [sp, #16]
  406d88:	str	q0, [sp]
  406d8c:	b	406d00 <__get_hz@@Base+0x84>

0000000000406d90 <__get_user_hz@@Base>:
  406d90:	stp	x29, x30, [sp, #-16]!
  406d94:	mov	w0, #0x2                   	// #2
  406d98:	mov	x29, sp
  406d9c:	bl	405000 <sysconf@plt>
  406da0:	ldp	x29, x30, [sp], #16
  406da4:	ret

0000000000406da8 <rt_addr_n2a_r@@Base>:
  406da8:	mov	x8, x2
  406dac:	cmp	w0, #0x9
  406db0:	b.le	406dd0 <rt_addr_n2a_r@@Base+0x28>
  406db4:	cmp	w0, #0x1c
  406db8:	b.eq	406e1c <rt_addr_n2a_r@@Base+0x74>  // b.none
  406dbc:	cmp	w0, #0x11
  406dc0:	b.eq	406e30 <rt_addr_n2a_r@@Base+0x88>  // b.none
  406dc4:	cmp	w0, #0xa
  406dc8:	b.eq	406e00 <rt_addr_n2a_r@@Base+0x58>  // b.none
  406dcc:	b	406e10 <rt_addr_n2a_r@@Base+0x68>
  406dd0:	cmp	w0, #0x2
  406dd4:	b.eq	406e00 <rt_addr_n2a_r@@Base+0x58>  // b.none
  406dd8:	cmp	w0, #0x7
  406ddc:	b.ne	406e10 <rt_addr_n2a_r@@Base+0x68>  // b.any
  406de0:	ldrh	w9, [x8]
  406de4:	cmp	w9, #0xa
  406de8:	b.eq	406e3c <rt_addr_n2a_r@@Base+0x94>  // b.none
  406dec:	cmp	w9, #0x2
  406df0:	b.ne	406e10 <rt_addr_n2a_r@@Base+0x68>  // b.any
  406df4:	add	x1, x8, #0x4
  406df8:	mov	w0, #0x2                   	// #2
  406dfc:	b	406e04 <rt_addr_n2a_r@@Base+0x5c>
  406e00:	mov	x1, x8
  406e04:	mov	x2, x3
  406e08:	mov	w3, w4
  406e0c:	b	405120 <inet_ntop@plt>
  406e10:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406e14:	add	x0, x0, #0xb5b
  406e18:	ret
  406e1c:	sxtw	x9, w4
  406e20:	mov	x1, x8
  406e24:	mov	x2, x3
  406e28:	mov	x3, x9
  406e2c:	b	409954 <mpls_ntop@@Base>
  406e30:	mov	w2, #0xffff                	// #65535
  406e34:	mov	x0, x8
  406e38:	b	408b5c <ll_addr_n2a@@Base>
  406e3c:	add	x1, x8, #0x8
  406e40:	mov	w0, #0xa                   	// #10
  406e44:	b	406e04 <rt_addr_n2a_r@@Base+0x5c>

0000000000406e48 <rt_addr_n2a@@Base>:
  406e48:	adrp	x3, 41e000 <memcpy@GLIBC_2.17>
  406e4c:	add	x3, x3, #0x2e0
  406e50:	mov	w4, #0x100                 	// #256
  406e54:	b	406da8 <rt_addr_n2a_r@@Base>

0000000000406e58 <read_family@@Base>:
  406e58:	stp	x29, x30, [sp, #-32]!
  406e5c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406e60:	add	x1, x1, #0x620
  406e64:	str	x19, [sp, #16]
  406e68:	mov	x29, sp
  406e6c:	mov	x19, x0
  406e70:	bl	404ec0 <strcmp@plt>
  406e74:	cbz	w0, 406ee8 <read_family@@Base+0x90>
  406e78:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406e7c:	add	x1, x1, #0x625
  406e80:	mov	x0, x19
  406e84:	bl	404ec0 <strcmp@plt>
  406e88:	cbz	w0, 406ef0 <read_family@@Base+0x98>
  406e8c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  406e90:	add	x1, x1, #0x1e7
  406e94:	mov	x0, x19
  406e98:	bl	404ec0 <strcmp@plt>
  406e9c:	cbz	w0, 406ef8 <read_family@@Base+0xa0>
  406ea0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406ea4:	add	x1, x1, #0xb5f
  406ea8:	mov	x0, x19
  406eac:	bl	404ec0 <strcmp@plt>
  406eb0:	cbz	w0, 406f00 <read_family@@Base+0xa8>
  406eb4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406eb8:	add	x1, x1, #0xb63
  406ebc:	mov	x0, x19
  406ec0:	bl	404ec0 <strcmp@plt>
  406ec4:	cbz	w0, 406f08 <read_family@@Base+0xb0>
  406ec8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406ecc:	add	x1, x1, #0xb68
  406ed0:	mov	x0, x19
  406ed4:	bl	404ec0 <strcmp@plt>
  406ed8:	cmp	w0, #0x0
  406edc:	mov	w8, #0x7                   	// #7
  406ee0:	csel	w0, w8, wzr, eq  // eq = none
  406ee4:	b	406f0c <read_family@@Base+0xb4>
  406ee8:	mov	w0, #0x2                   	// #2
  406eec:	b	406f0c <read_family@@Base+0xb4>
  406ef0:	mov	w0, #0xa                   	// #10
  406ef4:	b	406f0c <read_family@@Base+0xb4>
  406ef8:	mov	w0, #0x11                  	// #17
  406efc:	b	406f0c <read_family@@Base+0xb4>
  406f00:	mov	w0, #0x4                   	// #4
  406f04:	b	406f0c <read_family@@Base+0xb4>
  406f08:	mov	w0, #0x1c                  	// #28
  406f0c:	ldr	x19, [sp, #16]
  406f10:	ldp	x29, x30, [sp], #32
  406f14:	ret

0000000000406f18 <family_name@@Base>:
  406f18:	sub	w8, w0, #0x2
  406f1c:	cmp	w8, #0x8
  406f20:	b.hi	406f50 <family_name@@Base+0x38>  // b.pmore
  406f24:	adrp	x9, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f28:	add	x9, x9, #0x830
  406f2c:	adr	x10, 406f44 <family_name@@Base+0x2c>
  406f30:	ldrb	w11, [x9, x8]
  406f34:	add	x10, x10, x11, lsl #2
  406f38:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f3c:	add	x0, x0, #0x620
  406f40:	br	x10
  406f44:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f48:	add	x0, x0, #0xb5f
  406f4c:	ret
  406f50:	cmp	w0, #0x11
  406f54:	b.eq	406f90 <family_name@@Base+0x78>  // b.none
  406f58:	cmp	w0, #0x1c
  406f5c:	b.ne	406f6c <family_name@@Base+0x54>  // b.any
  406f60:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f64:	add	x0, x0, #0xb63
  406f68:	ret
  406f6c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f70:	add	x0, x0, #0xb5b
  406f74:	ret
  406f78:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f7c:	add	x0, x0, #0xb68
  406f80:	ret
  406f84:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  406f88:	add	x0, x0, #0x625
  406f8c:	ret
  406f90:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  406f94:	add	x0, x0, #0x1e7
  406f98:	ret

0000000000406f9c <format_host_r@@Base>:
  406f9c:	sub	sp, sp, #0x70
  406fa0:	stp	x29, x30, [sp, #16]
  406fa4:	stp	x28, x27, [sp, #32]
  406fa8:	stp	x26, x25, [sp, #48]
  406fac:	stp	x24, x23, [sp, #64]
  406fb0:	stp	x22, x21, [sp, #80]
  406fb4:	stp	x20, x19, [sp, #96]
  406fb8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  406fbc:	ldr	x8, [x8, #4064]
  406fc0:	mov	x21, x2
  406fc4:	mov	w23, w1
  406fc8:	mov	w22, w0
  406fcc:	ldr	w8, [x8]
  406fd0:	add	x29, sp, #0x10
  406fd4:	cbz	w8, 4071ac <format_host_r@@Base+0x210>
  406fd8:	cmp	w23, #0x0
  406fdc:	stur	w4, [x29, #-4]
  406fe0:	str	x3, [sp]
  406fe4:	b.le	40700c <format_host_r@@Base+0x70>
  406fe8:	cmp	w22, #0xa
  406fec:	mov	w8, w23
  406ff0:	mov	w24, w22
  406ff4:	mov	x25, x21
  406ff8:	b.ne	407084 <format_host_r@@Base+0xe8>  // b.any
  406ffc:	ldr	w8, [x21]
  407000:	cbz	w8, 407058 <format_host_r@@Base+0xbc>
  407004:	mov	w24, #0xa                   	// #10
  407008:	b	407064 <format_host_r@@Base+0xc8>
  40700c:	cmp	w22, #0x9
  407010:	mov	w23, wzr
  407014:	b.le	40703c <format_host_r@@Base+0xa0>
  407018:	cmp	w22, #0xa
  40701c:	b.eq	40706c <format_host_r@@Base+0xd0>  // b.none
  407020:	cmp	w22, #0x1c
  407024:	b.eq	407030 <format_host_r@@Base+0x94>  // b.none
  407028:	cmp	w22, #0xc
  40702c:	b.ne	4071ac <format_host_r@@Base+0x210>  // b.any
  407030:	mov	w23, #0x2                   	// #2
  407034:	mov	w8, #0x2                   	// #2
  407038:	b	40707c <format_host_r@@Base+0xe0>
  40703c:	cmp	w22, #0x2
  407040:	b.eq	407074 <format_host_r@@Base+0xd8>  // b.none
  407044:	cmp	w22, #0x4
  407048:	b.ne	4071ac <format_host_r@@Base+0x210>  // b.any
  40704c:	mov	w23, #0xa                   	// #10
  407050:	mov	w8, #0xa                   	// #10
  407054:	b	40707c <format_host_r@@Base+0xe0>
  407058:	ldr	w8, [x21, #4]
  40705c:	mov	w24, #0xa                   	// #10
  407060:	cbz	w8, 4071d8 <format_host_r@@Base+0x23c>
  407064:	mov	w8, w23
  407068:	b	407080 <format_host_r@@Base+0xe4>
  40706c:	mov	w23, #0x10                  	// #16
  407070:	b	406ffc <format_host_r@@Base+0x60>
  407074:	mov	w23, #0x4                   	// #4
  407078:	mov	w8, #0x4                   	// #4
  40707c:	mov	w24, w22
  407080:	mov	x25, x21
  407084:	add	x9, x25, w8, uxtw
  407088:	ldur	w9, [x9, #-4]
  40708c:	mov	w10, #0xff01                	// #65281
  407090:	movk	w10, #0xff00, lsl #16
  407094:	adrp	x19, 41e000 <memcpy@GLIBC_2.17>
  407098:	mul	x10, x9, x10
  40709c:	lsr	x10, x10, #40
  4070a0:	add	w10, w10, w10, lsl #8
  4070a4:	sub	w28, w9, w10
  4070a8:	add	x19, x19, #0x4e8
  4070ac:	ldr	x20, [x19, w28, uxtw #3]
  4070b0:	mov	w26, w8
  4070b4:	cbz	x20, 4070f0 <format_host_r@@Base+0x154>
  4070b8:	mov	x27, x20
  4070bc:	ldrh	w8, [x27, #22]
  4070c0:	cmp	w24, w8
  4070c4:	b.ne	4070e8 <format_host_r@@Base+0x14c>  // b.any
  4070c8:	ldrh	w8, [x27, #18]
  4070cc:	cmp	w26, w8
  4070d0:	b.ne	4070e8 <format_host_r@@Base+0x14c>  // b.any
  4070d4:	add	x0, x27, #0x18
  4070d8:	mov	x1, x25
  4070dc:	mov	x2, x26
  4070e0:	bl	404e00 <bcmp@plt>
  4070e4:	cbz	w0, 407174 <format_host_r@@Base+0x1d8>
  4070e8:	ldr	x27, [x27]
  4070ec:	cbnz	x27, 4070bc <format_host_r@@Base+0x120>
  4070f0:	mov	w0, #0x118                 	// #280
  4070f4:	bl	404d60 <malloc@plt>
  4070f8:	cbz	x0, 4071a4 <format_host_r@@Base+0x208>
  4070fc:	mov	x27, x0
  407100:	strh	w24, [x0, #22]
  407104:	strh	w26, [x0, #18]
  407108:	str	xzr, [x0, #8]
  40710c:	add	x0, x0, #0x18
  407110:	mov	x1, x25
  407114:	mov	x2, x26
  407118:	bl	404be0 <memcpy@plt>
  40711c:	adrp	x8, 41e000 <memcpy@GLIBC_2.17>
  407120:	ldr	w9, [x8, #1248]
  407124:	str	x20, [x27]
  407128:	str	x27, [x19, x28, lsl #3]
  40712c:	add	w10, w9, #0x1
  407130:	str	w10, [x8, #1248]
  407134:	cbnz	w9, 407140 <format_host_r@@Base+0x1a4>
  407138:	mov	w0, #0x1                   	// #1
  40713c:	bl	404c90 <sethostent@plt>
  407140:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  407144:	ldr	x8, [x8, #4016]
  407148:	ldr	x0, [x8]
  40714c:	bl	404fb0 <fflush@plt>
  407150:	mov	x0, x25
  407154:	mov	w1, w26
  407158:	mov	w2, w24
  40715c:	bl	404f20 <gethostbyaddr@plt>
  407160:	cbz	x0, 407174 <format_host_r@@Base+0x1d8>
  407164:	ldr	x0, [x0]
  407168:	bl	404e40 <strdup@plt>
  40716c:	str	x0, [x27, #8]
  407170:	b	407178 <format_host_r@@Base+0x1dc>
  407174:	ldr	x0, [x27, #8]
  407178:	ldur	w4, [x29, #-4]
  40717c:	ldr	x3, [sp]
  407180:	cbz	x0, 4071ac <format_host_r@@Base+0x210>
  407184:	ldp	x20, x19, [sp, #96]
  407188:	ldp	x22, x21, [sp, #80]
  40718c:	ldp	x24, x23, [sp, #64]
  407190:	ldp	x26, x25, [sp, #48]
  407194:	ldp	x28, x27, [sp, #32]
  407198:	ldp	x29, x30, [sp, #16]
  40719c:	add	sp, sp, #0x70
  4071a0:	ret
  4071a4:	ldur	w4, [x29, #-4]
  4071a8:	ldr	x3, [sp]
  4071ac:	mov	w0, w22
  4071b0:	mov	w1, w23
  4071b4:	mov	x2, x21
  4071b8:	ldp	x20, x19, [sp, #96]
  4071bc:	ldp	x22, x21, [sp, #80]
  4071c0:	ldp	x24, x23, [sp, #64]
  4071c4:	ldp	x26, x25, [sp, #48]
  4071c8:	ldp	x28, x27, [sp, #32]
  4071cc:	ldp	x29, x30, [sp, #16]
  4071d0:	add	sp, sp, #0x70
  4071d4:	b	406da8 <rt_addr_n2a_r@@Base>
  4071d8:	ldr	w8, [x21, #8]
  4071dc:	add	x9, x21, #0xc
  4071e0:	mov	w10, #0x4                   	// #4
  4071e4:	mov	w11, #0x2                   	// #2
  4071e8:	cmn	w8, #0x10, lsl #12
  4071ec:	csel	w8, w10, w23, eq  // eq = none
  4071f0:	csel	w24, w11, w24, eq  // eq = none
  4071f4:	csel	x25, x9, x21, eq  // eq = none
  4071f8:	b	407084 <format_host_r@@Base+0xe8>

00000000004071fc <format_host@@Base>:
  4071fc:	adrp	x3, 41e000 <memcpy@GLIBC_2.17>
  407200:	add	x3, x3, #0x3e0
  407204:	mov	w4, #0x100                 	// #256
  407208:	b	406f9c <format_host_r@@Base>

000000000040720c <hexstring_n2a@@Base>:
  40720c:	stp	x29, x30, [sp, #-80]!
  407210:	stp	x20, x19, [sp, #64]
  407214:	mov	x19, x2
  407218:	cmp	w3, #0x3
  40721c:	str	x25, [sp, #16]
  407220:	stp	x24, x23, [sp, #32]
  407224:	stp	x22, x21, [sp, #48]
  407228:	mov	x29, sp
  40722c:	b.lt	407280 <hexstring_n2a@@Base+0x74>  // b.tstop
  407230:	cmp	w1, #0x1
  407234:	b.lt	407280 <hexstring_n2a@@Base+0x74>  // b.tstop
  407238:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40723c:	mov	w20, w3
  407240:	mov	x21, x0
  407244:	mov	x24, xzr
  407248:	mov	w25, w1
  40724c:	add	x22, x22, #0xcb1
  407250:	mov	x23, x19
  407254:	ldrb	w2, [x21, x24]
  407258:	mov	x0, x23
  40725c:	mov	x1, x22
  407260:	bl	404cc0 <sprintf@plt>
  407264:	cmp	w20, #0x5
  407268:	b.lt	407280 <hexstring_n2a@@Base+0x74>  // b.tstop
  40726c:	add	x24, x24, #0x1
  407270:	add	x23, x23, #0x2
  407274:	cmp	x24, x25
  407278:	sub	w20, w20, #0x2
  40727c:	b.cc	407254 <hexstring_n2a@@Base+0x48>  // b.lo, b.ul, b.last
  407280:	mov	x0, x19
  407284:	ldp	x20, x19, [sp, #64]
  407288:	ldp	x22, x21, [sp, #48]
  40728c:	ldp	x24, x23, [sp, #32]
  407290:	ldr	x25, [sp, #16]
  407294:	ldp	x29, x30, [sp], #80
  407298:	ret

000000000040729c <hexstring_a2n@@Base>:
  40729c:	sub	sp, sp, #0x50
  4072a0:	stp	x29, x30, [sp, #16]
  4072a4:	stp	x24, x23, [sp, #32]
  4072a8:	stp	x22, x21, [sp, #48]
  4072ac:	stp	x20, x19, [sp, #64]
  4072b0:	add	x29, sp, #0x10
  4072b4:	mov	x20, x3
  4072b8:	mov	w22, w2
  4072bc:	mov	x19, x1
  4072c0:	mov	x21, x0
  4072c4:	bl	404c10 <strlen@plt>
  4072c8:	tbnz	w0, #0, 407350 <hexstring_a2n@@Base+0xb4>
  4072cc:	cbz	w22, 407358 <hexstring_a2n@@Base+0xbc>
  4072d0:	mov	x23, xzr
  4072d4:	mov	w24, w22
  4072d8:	mov	x0, x21
  4072dc:	bl	404c10 <strlen@plt>
  4072e0:	cmp	x0, #0x2
  4072e4:	b.cc	40735c <hexstring_a2n@@Base+0xc0>  // b.lo, b.ul, b.last
  4072e8:	add	x0, sp, #0x4
  4072ec:	mov	w2, #0x2                   	// #2
  4072f0:	mov	x1, x21
  4072f4:	bl	405070 <strncpy@plt>
  4072f8:	strb	wzr, [sp, #6]
  4072fc:	bl	4050c0 <__errno_location@plt>
  407300:	mov	x22, x0
  407304:	str	wzr, [x0]
  407308:	add	x0, sp, #0x4
  40730c:	add	x1, sp, #0x8
  407310:	mov	w2, #0x10                  	// #16
  407314:	bl	404c00 <strtoul@plt>
  407318:	ldr	w8, [x22]
  40731c:	cbnz	w8, 407350 <hexstring_a2n@@Base+0xb4>
  407320:	cmp	w0, #0xff
  407324:	b.hi	407350 <hexstring_a2n@@Base+0xb4>  // b.pmore
  407328:	ldr	x8, [sp, #8]
  40732c:	ldrb	w8, [x8]
  407330:	cbnz	w8, 407350 <hexstring_a2n@@Base+0xb4>
  407334:	strb	w0, [x19, x23]
  407338:	add	x23, x23, #0x1
  40733c:	cmp	x24, x23
  407340:	add	x21, x21, #0x2
  407344:	b.ne	4072d8 <hexstring_a2n@@Base+0x3c>  // b.any
  407348:	mov	w23, w24
  40734c:	b	40735c <hexstring_a2n@@Base+0xc0>
  407350:	mov	x19, xzr
  407354:	b	407364 <hexstring_a2n@@Base+0xc8>
  407358:	mov	w23, wzr
  40735c:	cbz	x20, 407364 <hexstring_a2n@@Base+0xc8>
  407360:	str	w23, [x20]
  407364:	mov	x0, x19
  407368:	ldp	x20, x19, [sp, #64]
  40736c:	ldp	x22, x21, [sp, #48]
  407370:	ldp	x24, x23, [sp, #32]
  407374:	ldp	x29, x30, [sp, #16]
  407378:	add	sp, sp, #0x50
  40737c:	ret

0000000000407380 <hex2mem@@Base>:
  407380:	cmp	w2, #0x1
  407384:	b.lt	407424 <hex2mem@@Base+0xa4>  // b.tstop
  407388:	mov	w8, w2
  40738c:	add	x9, x0, #0x1
  407390:	ldurb	w10, [x9, #-1]
  407394:	sub	w11, w10, #0x41
  407398:	cmp	w11, #0x5
  40739c:	b.hi	4073a8 <hex2mem@@Base+0x28>  // b.pmore
  4073a0:	sub	w10, w10, #0x37
  4073a4:	b	4073c8 <hex2mem@@Base+0x48>
  4073a8:	sub	w11, w10, #0x61
  4073ac:	cmp	w11, #0x5
  4073b0:	b.hi	4073bc <hex2mem@@Base+0x3c>  // b.pmore
  4073b4:	sub	w10, w10, #0x57
  4073b8:	b	4073c8 <hex2mem@@Base+0x48>
  4073bc:	sub	w10, w10, #0x30
  4073c0:	cmp	w10, #0x9
  4073c4:	b.hi	40742c <hex2mem@@Base+0xac>  // b.pmore
  4073c8:	tbnz	w10, #31, 40742c <hex2mem@@Base+0xac>
  4073cc:	lsl	w10, w10, #4
  4073d0:	strb	w10, [x1]
  4073d4:	ldrb	w11, [x9]
  4073d8:	sub	w12, w11, #0x41
  4073dc:	cmp	w12, #0x5
  4073e0:	b.hi	4073ec <hex2mem@@Base+0x6c>  // b.pmore
  4073e4:	sub	w11, w11, #0x37
  4073e8:	b	40740c <hex2mem@@Base+0x8c>
  4073ec:	sub	w12, w11, #0x61
  4073f0:	cmp	w12, #0x5
  4073f4:	b.hi	407400 <hex2mem@@Base+0x80>  // b.pmore
  4073f8:	sub	w11, w11, #0x57
  4073fc:	b	40740c <hex2mem@@Base+0x8c>
  407400:	sub	w11, w11, #0x30
  407404:	cmp	w11, #0x9
  407408:	b.hi	40742c <hex2mem@@Base+0xac>  // b.pmore
  40740c:	tbnz	w11, #31, 40742c <hex2mem@@Base+0xac>
  407410:	orr	w10, w10, w11
  407414:	subs	x8, x8, #0x1
  407418:	strb	w10, [x1], #1
  40741c:	add	x9, x9, #0x2
  407420:	b.ne	407390 <hex2mem@@Base+0x10>  // b.any
  407424:	mov	w0, wzr
  407428:	ret
  40742c:	mov	w0, #0xffffffff            	// #-1
  407430:	ret

0000000000407434 <addr64_n2a@@Base>:
  407434:	sub	sp, sp, #0x60
  407438:	stp	x20, x19, [sp, #80]
  40743c:	mov	x19, x2
  407440:	rev	w8, w0
  407444:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407448:	adrp	x4, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40744c:	mov	x20, x1
  407450:	str	x0, [sp, #8]
  407454:	lsr	w3, w8, #16
  407458:	add	x2, x2, #0xb71
  40745c:	add	x4, x4, #0xb6f
  407460:	mov	x0, x1
  407464:	mov	x1, x19
  407468:	stp	x29, x30, [sp, #16]
  40746c:	stp	x26, x25, [sp, #32]
  407470:	stp	x24, x23, [sp, #48]
  407474:	stp	x22, x21, [sp, #64]
  407478:	add	x29, sp, #0x10
  40747c:	bl	404d00 <snprintf@plt>
  407480:	tbnz	w0, #31, 4074f0 <addr64_n2a@@Base+0xbc>
  407484:	add	x8, sp, #0x8
  407488:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40748c:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0xa00>
  407490:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407494:	mov	x24, xzr
  407498:	mov	x23, xzr
  40749c:	add	x21, x21, #0xb6f
  4074a0:	add	x25, x25, #0x21d
  4074a4:	orr	x26, x8, #0x2
  4074a8:	add	x22, x22, #0xb71
  4074ac:	cmp	x24, #0x6
  4074b0:	add	x23, x23, w0, uxtw
  4074b4:	b.eq	4074ec <addr64_n2a@@Base+0xb8>  // b.none
  4074b8:	ldrh	w8, [x26, x24]
  4074bc:	cmp	x24, #0x4
  4074c0:	csel	x21, x25, x21, eq  // eq = none
  4074c4:	add	x0, x20, x23
  4074c8:	rev	w8, w8
  4074cc:	lsr	w3, w8, #16
  4074d0:	sub	x1, x19, x23
  4074d4:	mov	x2, x22
  4074d8:	mov	x4, x21
  4074dc:	bl	404d00 <snprintf@plt>
  4074e0:	add	x24, x24, #0x2
  4074e4:	tbz	w0, #31, 4074ac <addr64_n2a@@Base+0x78>
  4074e8:	b	4074f0 <addr64_n2a@@Base+0xbc>
  4074ec:	mov	w0, w23
  4074f0:	ldp	x20, x19, [sp, #80]
  4074f4:	ldp	x22, x21, [sp, #64]
  4074f8:	ldp	x24, x23, [sp, #48]
  4074fc:	ldp	x26, x25, [sp, #32]
  407500:	ldp	x29, x30, [sp, #16]
  407504:	add	sp, sp, #0x60
  407508:	ret

000000000040750c <print_escape_buf@@Base>:
  40750c:	stp	x29, x30, [sp, #-64]!
  407510:	stp	x24, x23, [sp, #16]
  407514:	stp	x22, x21, [sp, #32]
  407518:	stp	x20, x19, [sp, #48]
  40751c:	mov	x29, sp
  407520:	cbz	x1, 407590 <print_escape_buf@@Base+0x84>
  407524:	mov	x19, x2
  407528:	mov	x20, x1
  40752c:	mov	x21, x0
  407530:	bl	404ed0 <__ctype_b_loc@plt>
  407534:	adrp	x23, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407538:	mov	x22, x0
  40753c:	add	x23, x23, #0xb76
  407540:	ldrb	w24, [x21]
  407544:	cmp	x24, #0x5c
  407548:	b.eq	407568 <print_escape_buf@@Base+0x5c>  // b.none
  40754c:	ldr	x8, [x22]
  407550:	ldrh	w8, [x8, x24, lsl #1]
  407554:	tbz	w8, #14, 407568 <print_escape_buf@@Base+0x5c>
  407558:	mov	x0, x19
  40755c:	mov	w1, w24
  407560:	bl	404f70 <strchr@plt>
  407564:	cbz	x0, 407584 <print_escape_buf@@Base+0x78>
  407568:	mov	x0, x23
  40756c:	mov	w1, w24
  407570:	bl	4050a0 <printf@plt>
  407574:	subs	x20, x20, #0x1
  407578:	add	x21, x21, #0x1
  40757c:	b.ne	407540 <print_escape_buf@@Base+0x34>  // b.any
  407580:	b	407590 <print_escape_buf@@Base+0x84>
  407584:	mov	w0, w24
  407588:	bl	4050e0 <putchar@plt>
  40758c:	b	407574 <print_escape_buf@@Base+0x68>
  407590:	ldp	x20, x19, [sp, #48]
  407594:	ldp	x22, x21, [sp, #32]
  407598:	ldp	x24, x23, [sp, #16]
  40759c:	ldp	x29, x30, [sp], #64
  4075a0:	ret

00000000004075a4 <print_timestamp@@Base>:
  4075a4:	sub	sp, sp, #0x60
  4075a8:	stp	x29, x30, [sp, #64]
  4075ac:	add	x29, sp, #0x40
  4075b0:	stp	x20, x19, [sp, #80]
  4075b4:	mov	x19, x0
  4075b8:	sub	x0, x29, #0x10
  4075bc:	mov	x1, xzr
  4075c0:	bl	404dd0 <gettimeofday@plt>
  4075c4:	sub	x0, x29, #0x10
  4075c8:	bl	404d20 <localtime@plt>
  4075cc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4075d0:	ldr	x8, [x8, #4032]
  4075d4:	mov	x3, x0
  4075d8:	ldr	w8, [x8]
  4075dc:	cbz	w8, 40760c <print_timestamp@@Base+0x68>
  4075e0:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4075e4:	add	x2, x2, #0xb7c
  4075e8:	add	x0, sp, #0x8
  4075ec:	mov	w1, #0x28                  	// #40
  4075f0:	bl	404cf0 <strftime@plt>
  4075f4:	ldur	x3, [x29, #-8]
  4075f8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4075fc:	add	x1, x1, #0xb8e
  407600:	add	x2, sp, #0x8
  407604:	mov	x0, x19
  407608:	b	407638 <print_timestamp@@Base+0x94>
  40760c:	mov	x0, x3
  407610:	bl	405010 <asctime@plt>
  407614:	mov	x20, x0
  407618:	bl	404c10 <strlen@plt>
  40761c:	add	x8, x0, x20
  407620:	sturb	wzr, [x8, #-1]
  407624:	ldur	x3, [x29, #-8]
  407628:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40762c:	add	x1, x1, #0xb9a
  407630:	mov	x0, x19
  407634:	mov	x2, x20
  407638:	bl	405100 <fprintf@plt>
  40763c:	ldp	x20, x19, [sp, #80]
  407640:	ldp	x29, x30, [sp, #64]
  407644:	mov	w0, wzr
  407648:	add	sp, sp, #0x60
  40764c:	ret

0000000000407650 <print_name_and_link@@Base>:
  407650:	sub	sp, sp, #0x70
  407654:	stp	x29, x30, [sp, #64]
  407658:	stp	x22, x21, [sp, #80]
  40765c:	stp	x20, x19, [sp, #96]
  407660:	ldr	x8, [x2, #40]
  407664:	mov	x20, x1
  407668:	mov	x19, x0
  40766c:	add	x29, sp, #0x40
  407670:	cbz	x8, 4076d0 <print_name_and_link@@Base+0x80>
  407674:	ldr	w22, [x8, #4]
  407678:	cbz	w22, 4076ac <print_name_and_link@@Base+0x5c>
  40767c:	ldr	x8, [x2, #296]
  407680:	cbz	x8, 4076d8 <print_name_and_link@@Base+0x88>
  407684:	bl	408e88 <is_json_context@@Base>
  407688:	tbz	w0, #0, 407724 <print_name_and_link@@Base+0xd4>
  40768c:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407690:	add	x2, x2, #0xbb2
  407694:	mov	w0, #0x2                   	// #2
  407698:	mov	w1, #0x6                   	// #6
  40769c:	mov	x3, xzr
  4076a0:	mov	w4, w22
  4076a4:	bl	408fb0 <print_color_int@@Base>
  4076a8:	b	4076d0 <print_name_and_link@@Base+0x80>
  4076ac:	bl	408e88 <is_json_context@@Base>
  4076b0:	tbz	w0, #0, 40773c <print_name_and_link@@Base+0xec>
  4076b4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0xa00>
  4076b8:	add	x2, x2, #0x1e7
  4076bc:	mov	w0, #0x2                   	// #2
  4076c0:	mov	w1, #0x6                   	// #6
  4076c4:	mov	x3, xzr
  4076c8:	mov	x4, xzr
  4076cc:	bl	4095d0 <print_color_null@@Base>
  4076d0:	mov	w22, wzr
  4076d4:	b	407768 <print_name_and_link@@Base+0x118>
  4076d8:	mov	w0, w22
  4076dc:	bl	4085b0 <ll_index_to_name@@Base>
  4076e0:	mov	x21, x0
  4076e4:	bl	408e88 <is_json_context@@Base>
  4076e8:	tbz	w0, #0, 40770c <print_name_and_link@@Base+0xbc>
  4076ec:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0xa00>
  4076f0:	add	x2, x2, #0x1e7
  4076f4:	mov	w0, #0x2                   	// #2
  4076f8:	mov	w1, #0x6                   	// #6
  4076fc:	mov	x3, xzr
  407700:	mov	x4, x21
  407704:	bl	409398 <print_color_string@@Base>
  407708:	mov	x21, xzr
  40770c:	mov	w0, w22
  407710:	bl	4087d4 <ll_index_to_flags@@Base>
  407714:	mvn	w8, w0
  407718:	and	w22, w8, #0x1
  40771c:	cbnz	x21, 407748 <print_name_and_link@@Base+0xf8>
  407720:	b	407768 <print_name_and_link@@Base+0x118>
  407724:	mov	w0, w22
  407728:	bl	408574 <ll_idx_n2a@@Base>
  40772c:	mov	x21, x0
  407730:	mov	w22, wzr
  407734:	cbnz	x21, 407748 <print_name_and_link@@Base+0xf8>
  407738:	b	407768 <print_name_and_link@@Base+0x118>
  40773c:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407740:	mov	w22, wzr
  407744:	add	x21, x21, #0xbbd
  407748:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40774c:	add	x2, x2, #0xbc2
  407750:	mov	x0, sp
  407754:	mov	w1, #0x40                  	// #64
  407758:	mov	x3, x20
  40775c:	mov	x4, x21
  407760:	bl	404d00 <snprintf@plt>
  407764:	mov	x20, sp
  407768:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40776c:	add	x2, x2, #0xbc8
  407770:	mov	w0, #0x4                   	// #4
  407774:	mov	w1, wzr
  407778:	mov	x3, x19
  40777c:	mov	x4, x20
  407780:	bl	409398 <print_color_string@@Base>
  407784:	mov	w0, w22
  407788:	ldp	x20, x19, [sp, #96]
  40778c:	ldp	x22, x21, [sp, #80]
  407790:	ldp	x29, x30, [sp, #64]
  407794:	add	sp, sp, #0x70
  407798:	ret

000000000040779c <getcmdline@@Base>:
  40779c:	sub	sp, sp, #0x70
  4077a0:	stp	x29, x30, [sp, #16]
  4077a4:	stp	x28, x27, [sp, #32]
  4077a8:	stp	x26, x25, [sp, #48]
  4077ac:	stp	x24, x23, [sp, #64]
  4077b0:	stp	x22, x21, [sp, #80]
  4077b4:	stp	x20, x19, [sp, #96]
  4077b8:	add	x29, sp, #0x10
  4077bc:	mov	x21, x2
  4077c0:	mov	x19, x1
  4077c4:	mov	x22, x0
  4077c8:	bl	404f10 <getline@plt>
  4077cc:	mov	x20, x0
  4077d0:	tbnz	x0, #63, 407920 <getcmdline@@Base+0x184>
  4077d4:	adrp	x28, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4077d8:	ldr	x28, [x28, #4000]
  4077dc:	mov	w1, #0x23                  	// #35
  4077e0:	ldr	w8, [x28]
  4077e4:	add	w8, w8, #0x1
  4077e8:	str	w8, [x28]
  4077ec:	ldr	x23, [x22]
  4077f0:	mov	x0, x23
  4077f4:	bl	404f70 <strchr@plt>
  4077f8:	cbz	x0, 407804 <getcmdline@@Base+0x68>
  4077fc:	strb	wzr, [x0]
  407800:	ldr	x23, [x22]
  407804:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407808:	add	x1, x1, #0xbcf
  40780c:	mov	x0, x23
  407810:	bl	405050 <strstr@plt>
  407814:	cbz	x0, 407920 <getcmdline@@Base+0x184>
  407818:	adrp	x23, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40781c:	mov	x25, x0
  407820:	add	x23, x23, #0xbcf
  407824:	add	x0, sp, #0x8
  407828:	mov	x1, sp
  40782c:	mov	x2, x21
  407830:	stp	xzr, xzr, [sp]
  407834:	bl	404f10 <getline@plt>
  407838:	mov	x24, x0
  40783c:	tbnz	x0, #63, 4078d0 <getcmdline@@Base+0x134>
  407840:	ldr	w8, [x28]
  407844:	mov	w1, #0x23                  	// #35
  407848:	add	w8, w8, #0x1
  40784c:	str	w8, [x28]
  407850:	strb	wzr, [x25]
  407854:	ldr	x25, [sp, #8]
  407858:	mov	x0, x25
  40785c:	bl	404f70 <strchr@plt>
  407860:	cbz	x0, 40786c <getcmdline@@Base+0xd0>
  407864:	strb	wzr, [x0]
  407868:	ldr	x25, [sp, #8]
  40786c:	ldr	x26, [x22]
  407870:	mov	x0, x26
  407874:	bl	404c10 <strlen@plt>
  407878:	mov	x27, x0
  40787c:	mov	x0, x25
  407880:	bl	404c10 <strlen@plt>
  407884:	add	x8, x27, x0
  407888:	add	x1, x8, #0x1
  40788c:	mov	x0, x26
  407890:	str	x1, [x19]
  407894:	bl	404e20 <realloc@plt>
  407898:	str	x0, [x22]
  40789c:	cbz	x0, 4078f8 <getcmdline@@Base+0x15c>
  4078a0:	ldr	x1, [sp, #8]
  4078a4:	add	x8, x20, x24
  4078a8:	sub	x20, x8, #0x2
  4078ac:	bl	404da0 <strcat@plt>
  4078b0:	ldr	x0, [sp, #8]
  4078b4:	bl	404f30 <free@plt>
  4078b8:	ldr	x0, [x22]
  4078bc:	mov	x1, x23
  4078c0:	bl	405050 <strstr@plt>
  4078c4:	mov	x25, x0
  4078c8:	cbnz	x0, 407824 <getcmdline@@Base+0x88>
  4078cc:	b	407920 <getcmdline@@Base+0x184>
  4078d0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4078d4:	ldr	x8, [x8, #3992]
  4078d8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4078dc:	add	x0, x0, #0xbd2
  4078e0:	mov	w1, #0x1a                  	// #26
  4078e4:	ldr	x3, [x8]
  4078e8:	mov	w2, #0x1                   	// #1
  4078ec:	bl	404f90 <fwrite@plt>
  4078f0:	mov	x20, x24
  4078f4:	b	407920 <getcmdline@@Base+0x184>
  4078f8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4078fc:	ldr	x8, [x8, #3992]
  407900:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407904:	add	x0, x0, #0xbed
  407908:	mov	w1, #0xe                   	// #14
  40790c:	ldr	x3, [x8]
  407910:	mov	w2, #0x1                   	// #1
  407914:	bl	404f90 <fwrite@plt>
  407918:	str	xzr, [x19]
  40791c:	mov	x20, #0xffffffffffffffff    	// #-1
  407920:	mov	x0, x20
  407924:	ldp	x20, x19, [sp, #96]
  407928:	ldp	x22, x21, [sp, #80]
  40792c:	ldp	x24, x23, [sp, #64]
  407930:	ldp	x26, x25, [sp, #48]
  407934:	ldp	x28, x27, [sp, #32]
  407938:	ldp	x29, x30, [sp, #16]
  40793c:	add	sp, sp, #0x70
  407940:	ret

0000000000407944 <makeargs@@Base>:
  407944:	stp	x29, x30, [sp, #-64]!
  407948:	stp	x24, x23, [sp, #16]
  40794c:	stp	x22, x21, [sp, #32]
  407950:	stp	x20, x19, [sp, #48]
  407954:	ldrb	w8, [x0]
  407958:	mov	x19, x1
  40795c:	mov	x29, sp
  407960:	cbz	w8, 4079f8 <makeargs@@Base+0xb4>
  407964:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407968:	mov	x22, x0
  40796c:	mov	w20, wzr
  407970:	sub	w23, w2, #0x1
  407974:	add	x21, x21, #0x839
  407978:	mov	x0, x22
  40797c:	mov	x1, x21
  407980:	bl	404f60 <strspn@plt>
  407984:	add	x22, x22, x0
  407988:	ldrb	w1, [x22]
  40798c:	cbz	w1, 4079fc <makeargs@@Base+0xb8>
  407990:	cmp	w20, w23
  407994:	b.ge	407a18 <makeargs@@Base+0xd4>  // b.tcont
  407998:	cmp	w1, #0x27
  40799c:	b.eq	4079a8 <makeargs@@Base+0x64>  // b.none
  4079a0:	cmp	w1, #0x22
  4079a4:	b.ne	4079c0 <makeargs@@Base+0x7c>  // b.any
  4079a8:	add	x0, x22, #0x1
  4079ac:	str	x0, [x19, w20, sxtw #3]
  4079b0:	bl	404f70 <strchr@plt>
  4079b4:	cbz	x0, 407a30 <makeargs@@Base+0xec>
  4079b8:	add	w20, w20, #0x1
  4079bc:	b	4079e4 <makeargs@@Base+0xa0>
  4079c0:	mov	x0, x22
  4079c4:	mov	x1, x21
  4079c8:	add	w24, w20, #0x1
  4079cc:	str	x22, [x19, w20, sxtw #3]
  4079d0:	bl	405080 <strcspn@plt>
  4079d4:	add	x0, x22, x0
  4079d8:	ldrb	w8, [x0]
  4079dc:	mov	w20, w24
  4079e0:	cbz	w8, 4079fc <makeargs@@Base+0xb8>
  4079e4:	mov	x22, x0
  4079e8:	ldrb	w8, [x22, #1]!
  4079ec:	strb	wzr, [x0]
  4079f0:	cbnz	w8, 407978 <makeargs@@Base+0x34>
  4079f4:	b	4079fc <makeargs@@Base+0xb8>
  4079f8:	mov	w20, wzr
  4079fc:	str	xzr, [x19, w20, sxtw #3]
  407a00:	mov	w0, w20
  407a04:	ldp	x20, x19, [sp, #48]
  407a08:	ldp	x22, x21, [sp, #32]
  407a0c:	ldp	x24, x23, [sp, #16]
  407a10:	ldp	x29, x30, [sp], #64
  407a14:	ret
  407a18:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  407a1c:	ldr	x8, [x8, #3992]
  407a20:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407a24:	add	x0, x0, #0xbfc
  407a28:	mov	w1, #0x1e                  	// #30
  407a2c:	b	407a44 <makeargs@@Base+0x100>
  407a30:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  407a34:	ldr	x8, [x8, #3992]
  407a38:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407a3c:	add	x0, x0, #0xc1b
  407a40:	mov	w1, #0x1b                  	// #27
  407a44:	ldr	x3, [x8]
  407a48:	mov	w2, #0x1                   	// #1
  407a4c:	bl	404f90 <fwrite@plt>
  407a50:	mov	w0, #0x1                   	// #1
  407a54:	bl	404c30 <exit@plt>

0000000000407a58 <print_nlmsg_timestamp@@Base>:
  407a58:	stp	x29, x30, [sp, #-48]!
  407a5c:	str	x21, [sp, #16]
  407a60:	stp	x20, x19, [sp, #32]
  407a64:	ldp	w8, w19, [x1, #16]
  407a68:	mov	x29, sp
  407a6c:	mov	x20, x0
  407a70:	add	x0, x29, #0x18
  407a74:	str	x8, [x29, #24]
  407a78:	bl	404d20 <localtime@plt>
  407a7c:	bl	405010 <asctime@plt>
  407a80:	mov	x21, x0
  407a84:	bl	404c10 <strlen@plt>
  407a88:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407a8c:	add	x8, x0, x21
  407a90:	add	x1, x1, #0xc37
  407a94:	mov	x0, x20
  407a98:	mov	x2, x21
  407a9c:	mov	x3, x19
  407aa0:	sturb	wzr, [x8, #-1]
  407aa4:	bl	405100 <fprintf@plt>
  407aa8:	ldp	x20, x19, [sp, #32]
  407aac:	ldr	x21, [sp, #16]
  407ab0:	ldp	x29, x30, [sp], #48
  407ab4:	ret

0000000000407ab8 <int_to_str@@Base>:
  407ab8:	stp	x29, x30, [sp, #-32]!
  407abc:	str	x19, [sp, #16]
  407ac0:	mov	x19, x1
  407ac4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407ac8:	mov	w2, w0
  407acc:	add	x1, x1, #0xc4d
  407ad0:	mov	x0, x19
  407ad4:	mov	x29, sp
  407ad8:	bl	404cc0 <sprintf@plt>
  407adc:	mov	x0, x19
  407ae0:	ldr	x19, [sp, #16]
  407ae4:	ldp	x29, x30, [sp], #32
  407ae8:	ret

0000000000407aec <get_guid@@Base>:
  407aec:	stp	x29, x30, [sp, #-48]!
  407af0:	stp	x20, x19, [sp, #32]
  407af4:	mov	x20, x0
  407af8:	mov	x0, x1
  407afc:	str	x21, [sp, #16]
  407b00:	mov	x29, sp
  407b04:	mov	x19, x1
  407b08:	bl	404c10 <strlen@plt>
  407b0c:	cmp	x0, #0x17
  407b10:	b.ne	407b90 <get_guid@@Base+0xa4>  // b.any
  407b14:	mov	w8, #0x2                   	// #2
  407b18:	ldrb	w9, [x19, x8]
  407b1c:	cmp	w9, #0x3a
  407b20:	b.ne	407b90 <get_guid@@Base+0xa4>  // b.any
  407b24:	add	x8, x8, #0x3
  407b28:	cmp	x8, #0x17
  407b2c:	b.ne	407b18 <get_guid@@Base+0x2c>  // b.any
  407b30:	mov	w21, #0x38                  	// #56
  407b34:	str	xzr, [x20]
  407b38:	add	x1, x29, #0x18
  407b3c:	mov	w2, #0x10                  	// #16
  407b40:	mov	x0, x19
  407b44:	bl	404c00 <strtoul@plt>
  407b48:	mov	x8, x0
  407b4c:	cmp	x0, #0xff
  407b50:	mov	w0, #0xffffffff            	// #-1
  407b54:	b.hi	407b94 <get_guid@@Base+0xa8>  // b.pmore
  407b58:	ldr	x9, [x29, #24]
  407b5c:	add	x10, x19, #0x2
  407b60:	cmp	x10, x9
  407b64:	b.ne	407b94 <get_guid@@Base+0xa8>  // b.any
  407b68:	ldr	x9, [x20]
  407b6c:	lsl	x8, x8, x21
  407b70:	sub	x21, x21, #0x8
  407b74:	cmn	x21, #0x8
  407b78:	orr	x8, x9, x8
  407b7c:	add	x19, x19, #0x3
  407b80:	str	x8, [x20]
  407b84:	b.ne	407b38 <get_guid@@Base+0x4c>  // b.any
  407b88:	mov	w0, wzr
  407b8c:	b	407b94 <get_guid@@Base+0xa8>
  407b90:	mov	w0, #0xffffffff            	// #-1
  407b94:	ldp	x20, x19, [sp, #32]
  407b98:	ldr	x21, [sp, #16]
  407b9c:	ldp	x29, x30, [sp], #48
  407ba0:	ret

0000000000407ba4 <get_real_family@@Base>:
  407ba4:	cmp	w0, #0x5
  407ba8:	mov	w0, w1
  407bac:	b.ne	407bc4 <get_real_family@@Base+0x20>  // b.any
  407bb0:	cmp	w0, #0x80
  407bb4:	b.eq	407bc8 <get_real_family@@Base+0x24>  // b.none
  407bb8:	cmp	w0, #0x81
  407bbc:	b.ne	407bc4 <get_real_family@@Base+0x20>  // b.any
  407bc0:	mov	w0, #0xa                   	// #10
  407bc4:	ret
  407bc8:	mov	w0, #0x2                   	// #2
  407bcc:	ret

0000000000407bd0 <get_rtnl_link_stats_rta@@Base>:
  407bd0:	stp	x29, x30, [sp, #-64]!
  407bd4:	stp	x28, x23, [sp, #16]
  407bd8:	stp	x22, x21, [sp, #32]
  407bdc:	stp	x20, x19, [sp, #48]
  407be0:	mov	x29, sp
  407be4:	sub	sp, sp, #0x9b0
  407be8:	ldr	x23, [x1, #184]
  407bec:	mov	x19, x0
  407bf0:	cbz	x23, 407c00 <get_rtnl_link_stats_rta@@Base+0x30>
  407bf4:	mov	w20, #0xc0                  	// #192
  407bf8:	mov	x21, x19
  407bfc:	b	407c10 <get_rtnl_link_stats_rta@@Base+0x40>
  407c00:	ldr	x23, [x1, #56]
  407c04:	cbz	x23, 407c80 <get_rtnl_link_stats_rta@@Base+0xb0>
  407c08:	sub	x21, x29, #0x60
  407c0c:	mov	w20, #0x60                  	// #96
  407c10:	ldrh	w8, [x23]
  407c14:	sub	x22, x8, #0x4
  407c18:	subs	w8, w20, w22
  407c1c:	b.le	407c34 <get_rtnl_link_stats_rta@@Base+0x64>
  407c20:	add	x0, x21, x22
  407c24:	sxtw	x2, w8
  407c28:	mov	w1, wzr
  407c2c:	bl	404dc0 <memset@plt>
  407c30:	b	407c38 <get_rtnl_link_stats_rta@@Base+0x68>
  407c34:	mov	x22, x20
  407c38:	add	x1, x23, #0x4
  407c3c:	mov	x0, x21
  407c40:	mov	x2, x22
  407c44:	bl	404be0 <memcpy@plt>
  407c48:	cmp	x21, x19
  407c4c:	b.eq	407c64 <get_rtnl_link_stats_rta@@Base+0x94>  // b.none
  407c50:	add	x8, x21, #0x60
  407c54:	ldr	w9, [x21], #4
  407c58:	cmp	x21, x8
  407c5c:	str	x9, [x19], #8
  407c60:	b.cc	407c54 <get_rtnl_link_stats_rta@@Base+0x84>  // b.lo, b.ul, b.last
  407c64:	mov	w0, w20
  407c68:	add	sp, sp, #0x9b0
  407c6c:	ldp	x20, x19, [sp, #48]
  407c70:	ldp	x22, x21, [sp, #32]
  407c74:	ldp	x28, x23, [sp, #16]
  407c78:	ldp	x29, x30, [sp], #64
  407c7c:	ret
  407c80:	ldr	x2, [x1, #96]
  407c84:	cbz	x2, 407cfc <get_rtnl_link_stats_rta@@Base+0x12c>
  407c88:	ldrh	w8, [x2], #4
  407c8c:	add	x0, sp, #0x8
  407c90:	mov	w1, #0x128                 	// #296
  407c94:	sub	w3, w8, #0x4
  407c98:	bl	40c214 <parse_rtattr@@Base>
  407c9c:	ldr	x20, [sp, #32]
  407ca0:	cbz	x20, 407cf4 <get_rtnl_link_stats_rta@@Base+0x124>
  407ca4:	mov	w2, #0xc0                  	// #192
  407ca8:	mov	x0, x19
  407cac:	mov	w1, wzr
  407cb0:	bl	404dc0 <memset@plt>
  407cb4:	ldur	x8, [x20, #12]
  407cb8:	str	x8, [x19]
  407cbc:	ldur	x8, [x20, #20]
  407cc0:	str	x8, [x19, #16]
  407cc4:	ldur	x8, [x20, #44]
  407cc8:	str	x8, [x19, #8]
  407ccc:	ldur	x8, [x20, #52]
  407cd0:	str	x8, [x19, #24]
  407cd4:	ldur	x8, [x20, #108]
  407cd8:	str	x8, [x19, #32]
  407cdc:	ldur	x8, [x20, #116]
  407ce0:	str	x8, [x19, #40]
  407ce4:	ldur	x8, [x20, #188]
  407ce8:	str	x8, [x19, #64]
  407cec:	ldur	x8, [x20, #252]
  407cf0:	str	x8, [x19, #104]
  407cf4:	mov	w20, #0xc0                  	// #192
  407cf8:	b	407c64 <get_rtnl_link_stats_rta@@Base+0x94>
  407cfc:	mov	w20, #0xffffffff            	// #-1
  407d00:	b	407c64 <get_rtnl_link_stats_rta@@Base+0x94>

0000000000407d04 <strlcpy@@Base>:
  407d04:	stp	x29, x30, [sp, #-48]!
  407d08:	stp	x20, x19, [sp, #32]
  407d0c:	mov	x19, x0
  407d10:	mov	x0, x1
  407d14:	stp	x22, x21, [sp, #16]
  407d18:	mov	x29, sp
  407d1c:	mov	x22, x2
  407d20:	mov	x21, x1
  407d24:	bl	404c10 <strlen@plt>
  407d28:	mov	x20, x0
  407d2c:	cbz	x22, 407d50 <strlcpy@@Base+0x4c>
  407d30:	sub	x8, x22, #0x1
  407d34:	cmp	x20, x8
  407d38:	csel	x22, x20, x8, cc  // cc = lo, ul, last
  407d3c:	mov	x0, x19
  407d40:	mov	x1, x21
  407d44:	mov	x2, x22
  407d48:	bl	404be0 <memcpy@plt>
  407d4c:	strb	wzr, [x19, x22]
  407d50:	mov	x0, x20
  407d54:	ldp	x20, x19, [sp, #32]
  407d58:	ldp	x22, x21, [sp, #16]
  407d5c:	ldp	x29, x30, [sp], #48
  407d60:	ret

0000000000407d64 <strlcat@@Base>:
  407d64:	stp	x29, x30, [sp, #-64]!
  407d68:	str	x23, [sp, #16]
  407d6c:	stp	x22, x21, [sp, #32]
  407d70:	stp	x20, x19, [sp, #48]
  407d74:	mov	x29, sp
  407d78:	mov	x21, x2
  407d7c:	mov	x20, x1
  407d80:	mov	x22, x0
  407d84:	bl	404c10 <strlen@plt>
  407d88:	mov	x19, x0
  407d8c:	cmp	x0, x21
  407d90:	b.cs	407dd0 <strlcat@@Base+0x6c>  // b.hs, b.nlast
  407d94:	mov	x0, x20
  407d98:	sub	x23, x21, x19
  407d9c:	bl	404c10 <strlen@plt>
  407da0:	mov	x21, x0
  407da4:	cbz	x23, 407ddc <strlcat@@Base+0x78>
  407da8:	sub	x8, x23, #0x1
  407dac:	cmp	x21, x8
  407db0:	add	x22, x22, x19
  407db4:	csel	x23, x21, x8, cc  // cc = lo, ul, last
  407db8:	mov	x0, x22
  407dbc:	mov	x1, x20
  407dc0:	mov	x2, x23
  407dc4:	bl	404be0 <memcpy@plt>
  407dc8:	strb	wzr, [x22, x23]
  407dcc:	b	407ddc <strlcat@@Base+0x78>
  407dd0:	mov	x0, x20
  407dd4:	bl	404c10 <strlen@plt>
  407dd8:	mov	x21, x0
  407ddc:	add	x0, x21, x19
  407de0:	ldp	x20, x19, [sp, #48]
  407de4:	ldp	x22, x21, [sp, #32]
  407de8:	ldr	x23, [sp, #16]
  407dec:	ldp	x29, x30, [sp], #64
  407df0:	ret

0000000000407df4 <drop_cap@@Base>:
  407df4:	stp	x29, x30, [sp, #-32]!
  407df8:	str	x19, [sp, #16]
  407dfc:	mov	x29, sp
  407e00:	bl	404cd0 <getuid@plt>
  407e04:	cbz	w0, 407e58 <drop_cap@@Base+0x64>
  407e08:	bl	404c80 <geteuid@plt>
  407e0c:	cbz	w0, 407e58 <drop_cap@@Base+0x64>
  407e10:	bl	404ef0 <cap_get_proc@plt>
  407e14:	cbz	x0, 407e64 <drop_cap@@Base+0x70>
  407e18:	add	x3, x29, #0x1c
  407e1c:	mov	w1, #0xc                   	// #12
  407e20:	mov	w2, #0x2                   	// #2
  407e24:	mov	x19, x0
  407e28:	bl	404df0 <cap_get_flag@plt>
  407e2c:	cbnz	w0, 407e64 <drop_cap@@Base+0x70>
  407e30:	ldr	w8, [x29, #28]
  407e34:	cbnz	w8, 407e50 <drop_cap@@Base+0x5c>
  407e38:	mov	x0, x19
  407e3c:	bl	404fe0 <cap_clear@plt>
  407e40:	cbnz	w0, 407e64 <drop_cap@@Base+0x70>
  407e44:	mov	x0, x19
  407e48:	bl	404e30 <cap_set_proc@plt>
  407e4c:	cbnz	w0, 407e64 <drop_cap@@Base+0x70>
  407e50:	mov	x0, x19
  407e54:	bl	405020 <cap_free@plt>
  407e58:	ldr	x19, [sp, #16]
  407e5c:	ldp	x29, x30, [sp], #32
  407e60:	ret
  407e64:	mov	w0, #0x1                   	// #1
  407e68:	bl	404c30 <exit@plt>

0000000000407e6c <get_time@@Base>:
  407e6c:	sub	sp, sp, #0x40
  407e70:	str	x21, [sp, #40]
  407e74:	mov	x21, x1
  407e78:	stp	x20, x19, [sp, #48]
  407e7c:	mov	x19, x0
  407e80:	add	x1, sp, #0x8
  407e84:	mov	x0, x21
  407e88:	str	d8, [sp, #16]
  407e8c:	stp	x29, x30, [sp, #24]
  407e90:	add	x29, sp, #0x10
  407e94:	bl	404c70 <strtod@plt>
  407e98:	ldr	x20, [sp, #8]
  407e9c:	cmp	x20, x21
  407ea0:	b.eq	407f64 <get_time@@Base+0xf8>  // b.none
  407ea4:	ldrb	w8, [x20]
  407ea8:	mov	v8.16b, v0.16b
  407eac:	cbz	w8, 407f78 <get_time@@Base+0x10c>
  407eb0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407eb4:	add	x1, x1, #0x8ea
  407eb8:	mov	x0, x20
  407ebc:	bl	404e10 <strcasecmp@plt>
  407ec0:	cbz	w0, 407f6c <get_time@@Base+0x100>
  407ec4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407ec8:	add	x1, x1, #0x901
  407ecc:	mov	x0, x20
  407ed0:	bl	404e10 <strcasecmp@plt>
  407ed4:	cbz	w0, 407f6c <get_time@@Base+0x100>
  407ed8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407edc:	add	x1, x1, #0x906
  407ee0:	mov	x0, x20
  407ee4:	bl	404e10 <strcasecmp@plt>
  407ee8:	cbz	w0, 407f6c <get_time@@Base+0x100>
  407eec:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407ef0:	add	x1, x1, #0xc86
  407ef4:	mov	x0, x20
  407ef8:	bl	404e10 <strcasecmp@plt>
  407efc:	cbz	w0, 407f9c <get_time@@Base+0x130>
  407f00:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f04:	add	x1, x1, #0x900
  407f08:	mov	x0, x20
  407f0c:	bl	404e10 <strcasecmp@plt>
  407f10:	cbz	w0, 407f9c <get_time@@Base+0x130>
  407f14:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f18:	add	x1, x1, #0x905
  407f1c:	mov	x0, x20
  407f20:	bl	404e10 <strcasecmp@plt>
  407f24:	cbz	w0, 407f9c <get_time@@Base+0x130>
  407f28:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f2c:	add	x1, x1, #0xc9f
  407f30:	mov	x0, x20
  407f34:	bl	404e10 <strcasecmp@plt>
  407f38:	cbz	w0, 407f78 <get_time@@Base+0x10c>
  407f3c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f40:	add	x1, x1, #0xc50
  407f44:	mov	x0, x20
  407f48:	bl	404e10 <strcasecmp@plt>
  407f4c:	cbz	w0, 407f78 <get_time@@Base+0x10c>
  407f50:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f54:	add	x1, x1, #0xc55
  407f58:	mov	x0, x20
  407f5c:	bl	404e10 <strcasecmp@plt>
  407f60:	cbz	w0, 407f78 <get_time@@Base+0x10c>
  407f64:	mov	w0, #0xffffffff            	// #-1
  407f68:	b	407f84 <get_time@@Base+0x118>
  407f6c:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407f70:	ldr	d0, [x8, #2072]
  407f74:	fmul	d8, d8, d0
  407f78:	mov	w0, wzr
  407f7c:	fcvtzu	w8, d8
  407f80:	str	w8, [x19]
  407f84:	ldp	x20, x19, [sp, #48]
  407f88:	ldr	x21, [sp, #40]
  407f8c:	ldp	x29, x30, [sp, #24]
  407f90:	ldr	d8, [sp, #16]
  407f94:	add	sp, sp, #0x40
  407f98:	ret
  407f9c:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407fa0:	ldr	d0, [x8, #2064]
  407fa4:	b	407f74 <get_time@@Base+0x108>

0000000000407fa8 <sprint_time@@Base>:
  407fa8:	stp	x29, x30, [sp, #-32]!
  407fac:	mov	w8, #0x4240                	// #16960
  407fb0:	movk	w8, #0xf, lsl #16
  407fb4:	str	x19, [sp, #16]
  407fb8:	mov	x19, x1
  407fbc:	cmp	w0, w8
  407fc0:	ucvtf	d0, w0
  407fc4:	mov	x29, sp
  407fc8:	b.cc	407fe0 <sprint_time@@Base+0x38>  // b.lo, b.ul, b.last
  407fcc:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407fd0:	ldr	d1, [x8, #2072]
  407fd4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407fd8:	add	x2, x2, #0xc7c
  407fdc:	b	407ffc <sprint_time@@Base+0x54>
  407fe0:	mov	w3, w0
  407fe4:	cmp	w0, #0x3e8
  407fe8:	b.cc	408010 <sprint_time@@Base+0x68>  // b.lo, b.ul, b.last
  407fec:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407ff0:	ldr	d1, [x8, #2064]
  407ff4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  407ff8:	add	x2, x2, #0xc82
  407ffc:	fdiv	d0, d0, d1
  408000:	mov	w1, #0x3f                  	// #63
  408004:	mov	x0, x19
  408008:	bl	404d00 <snprintf@plt>
  40800c:	b	408024 <sprint_time@@Base+0x7c>
  408010:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408014:	add	x2, x2, #0xc89
  408018:	mov	w1, #0x3f                  	// #63
  40801c:	mov	x0, x19
  408020:	bl	404d00 <snprintf@plt>
  408024:	mov	x0, x19
  408028:	ldr	x19, [sp, #16]
  40802c:	ldp	x29, x30, [sp], #32
  408030:	ret

0000000000408034 <get_time64@@Base>:
  408034:	sub	sp, sp, #0x40
  408038:	str	x21, [sp, #40]
  40803c:	mov	x21, x1
  408040:	stp	x20, x19, [sp, #48]
  408044:	mov	x19, x0
  408048:	add	x1, sp, #0x8
  40804c:	mov	x0, x21
  408050:	str	d8, [sp, #16]
  408054:	stp	x29, x30, [sp, #24]
  408058:	add	x29, sp, #0x10
  40805c:	bl	404c70 <strtod@plt>
  408060:	ldr	x20, [sp, #8]
  408064:	cmp	x20, x21
  408068:	b.eq	408168 <get_time64@@Base+0x134>  // b.none
  40806c:	ldrb	w8, [x20]
  408070:	mov	v8.16b, v0.16b
  408074:	cbz	w8, 40817c <get_time64@@Base+0x148>
  408078:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40807c:	add	x1, x1, #0x8ea
  408080:	mov	x0, x20
  408084:	bl	404e10 <strcasecmp@plt>
  408088:	cbz	w0, 408170 <get_time64@@Base+0x13c>
  40808c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408090:	add	x1, x1, #0x901
  408094:	mov	x0, x20
  408098:	bl	404e10 <strcasecmp@plt>
  40809c:	cbz	w0, 408170 <get_time64@@Base+0x13c>
  4080a0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4080a4:	add	x1, x1, #0x906
  4080a8:	mov	x0, x20
  4080ac:	bl	404e10 <strcasecmp@plt>
  4080b0:	cbz	w0, 408170 <get_time64@@Base+0x13c>
  4080b4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4080b8:	add	x1, x1, #0xc86
  4080bc:	mov	x0, x20
  4080c0:	bl	404e10 <strcasecmp@plt>
  4080c4:	cbz	w0, 4081a0 <get_time64@@Base+0x16c>
  4080c8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4080cc:	add	x1, x1, #0x900
  4080d0:	mov	x0, x20
  4080d4:	bl	404e10 <strcasecmp@plt>
  4080d8:	cbz	w0, 4081a0 <get_time64@@Base+0x16c>
  4080dc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4080e0:	add	x1, x1, #0x905
  4080e4:	mov	x0, x20
  4080e8:	bl	404e10 <strcasecmp@plt>
  4080ec:	cbz	w0, 4081a0 <get_time64@@Base+0x16c>
  4080f0:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4080f4:	add	x1, x1, #0xc9f
  4080f8:	mov	x0, x20
  4080fc:	bl	404e10 <strcasecmp@plt>
  408100:	cbz	w0, 4081ac <get_time64@@Base+0x178>
  408104:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408108:	add	x1, x1, #0xc50
  40810c:	mov	x0, x20
  408110:	bl	404e10 <strcasecmp@plt>
  408114:	cbz	w0, 4081ac <get_time64@@Base+0x178>
  408118:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40811c:	add	x1, x1, #0xc55
  408120:	mov	x0, x20
  408124:	bl	404e10 <strcasecmp@plt>
  408128:	cbz	w0, 4081ac <get_time64@@Base+0x178>
  40812c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408130:	add	x1, x1, #0xca6
  408134:	mov	x0, x20
  408138:	bl	404e10 <strcasecmp@plt>
  40813c:	cbz	w0, 40817c <get_time64@@Base+0x148>
  408140:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408144:	add	x1, x1, #0xc5b
  408148:	mov	x0, x20
  40814c:	bl	404e10 <strcasecmp@plt>
  408150:	cbz	w0, 40817c <get_time64@@Base+0x148>
  408154:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408158:	add	x1, x1, #0xc60
  40815c:	mov	x0, x20
  408160:	bl	404e10 <strcasecmp@plt>
  408164:	cbz	w0, 40817c <get_time64@@Base+0x148>
  408168:	mov	w0, #0xffffffff            	// #-1
  40816c:	b	408188 <get_time64@@Base+0x154>
  408170:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408174:	ldr	d0, [x8, #2080]
  408178:	fmul	d8, d8, d0
  40817c:	mov	w0, wzr
  408180:	fcvtzs	x8, d8
  408184:	str	x8, [x19]
  408188:	ldp	x20, x19, [sp, #48]
  40818c:	ldr	x21, [sp, #40]
  408190:	ldp	x29, x30, [sp, #24]
  408194:	ldr	d8, [sp, #16]
  408198:	add	sp, sp, #0x40
  40819c:	ret
  4081a0:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4081a4:	ldr	d0, [x8, #2072]
  4081a8:	b	408178 <get_time64@@Base+0x144>
  4081ac:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4081b0:	ldr	d0, [x8, #2064]
  4081b4:	b	408178 <get_time64@@Base+0x144>

00000000004081b8 <sprint_time64@@Base>:
  4081b8:	stp	x29, x30, [sp, #-32]!
  4081bc:	mov	w8, #0xca00                	// #51712
  4081c0:	movk	w8, #0x3b9a, lsl #16
  4081c4:	str	x19, [sp, #16]
  4081c8:	mov	x19, x1
  4081cc:	cmp	x0, x8
  4081d0:	scvtf	d0, x0
  4081d4:	mov	x29, sp
  4081d8:	b.lt	4081f0 <sprint_time64@@Base+0x38>  // b.tstop
  4081dc:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4081e0:	ldr	d1, [x8, #2080]
  4081e4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4081e8:	add	x2, x2, #0xc8e
  4081ec:	b	408230 <sprint_time64@@Base+0x78>
  4081f0:	mov	w8, #0x4240                	// #16960
  4081f4:	movk	w8, #0xf, lsl #16
  4081f8:	mov	x3, x0
  4081fc:	cmp	x0, x8
  408200:	b.lt	408218 <sprint_time64@@Base+0x60>  // b.tstop
  408204:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408208:	ldr	d1, [x8, #2072]
  40820c:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408210:	add	x2, x2, #0xc94
  408214:	b	408230 <sprint_time64@@Base+0x78>
  408218:	cmp	x3, #0x3e8
  40821c:	b.lt	408250 <sprint_time64@@Base+0x98>  // b.tstop
  408220:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408224:	ldr	d1, [x8, #2064]
  408228:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40822c:	add	x2, x2, #0xc9b
  408230:	fdiv	d0, d0, d1
  408234:	mov	w1, #0x3f                  	// #63
  408238:	mov	x0, x19
  40823c:	bl	404d00 <snprintf@plt>
  408240:	mov	x0, x19
  408244:	ldr	x19, [sp, #16]
  408248:	ldp	x29, x30, [sp], #32
  40824c:	ret
  408250:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408254:	add	x2, x2, #0xca2
  408258:	mov	w1, #0x3f                  	// #63
  40825c:	mov	x0, x19
  408260:	bl	404d00 <snprintf@plt>
  408264:	b	408240 <sprint_time64@@Base+0x88>

0000000000408268 <namehash@@Base>:
  408268:	ldrb	w8, [x0]
  40826c:	cbz	w8, 40828c <namehash@@Base+0x24>
  408270:	add	x9, x0, #0x1
  408274:	mov	w0, #0x1505                	// #5381
  408278:	add	w10, w0, w0, lsl #5
  40827c:	add	w0, w10, w8, uxtb
  408280:	ldrb	w8, [x9], #1
  408284:	cbnz	w8, 408278 <namehash@@Base+0x10>
  408288:	ret
  40828c:	mov	w0, #0x1505                	// #5381
  408290:	ret

0000000000408294 <ll_remember_index@@Base>:
  408294:	stp	x29, x30, [sp, #-96]!
  408298:	str	x28, [sp, #16]
  40829c:	stp	x26, x25, [sp, #32]
  4082a0:	stp	x24, x23, [sp, #48]
  4082a4:	stp	x22, x21, [sp, #64]
  4082a8:	stp	x20, x19, [sp, #80]
  4082ac:	mov	x29, sp
  4082b0:	sub	sp, sp, #0x1b0
  4082b4:	ldrh	w8, [x0, #4]
  4082b8:	and	w9, w8, #0xfffe
  4082bc:	cmp	w9, #0x10
  4082c0:	b.ne	408504 <ll_remember_index@@Base+0x270>  // b.any
  4082c4:	ldr	w9, [x0]
  4082c8:	mov	x21, x0
  4082cc:	subs	w3, w9, #0x20
  4082d0:	b.cs	4082dc <ll_remember_index@@Base+0x48>  // b.hs, b.nlast
  4082d4:	mov	w8, #0xffffffff            	// #-1
  4082d8:	b	408508 <ll_remember_index@@Base+0x274>
  4082dc:	ldr	w9, [x21, #20]
  4082e0:	adrp	x11, 41e000 <memcpy@GLIBC_2.17>
  4082e4:	add	x11, x11, #0xd18
  4082e8:	and	x10, x9, #0x3ff
  4082ec:	ldr	x19, [x11, x10, lsl #3]
  4082f0:	cbz	x19, 408308 <ll_remember_index@@Base+0x74>
  4082f4:	ldr	w10, [x19, #36]
  4082f8:	cmp	w10, w9
  4082fc:	b.eq	408308 <ll_remember_index@@Base+0x74>  // b.none
  408300:	ldr	x19, [x19]
  408304:	cbnz	x19, 4082f4 <ll_remember_index@@Base+0x60>
  408308:	cmp	w8, #0x11
  40830c:	b.ne	40834c <ll_remember_index@@Base+0xb8>  // b.any
  408310:	cbz	x19, 408504 <ll_remember_index@@Base+0x270>
  408314:	ldr	x20, [x19, #48]
  408318:	sub	x0, x20, #0x30
  40831c:	cmp	x19, x0
  408320:	b.eq	4083cc <ll_remember_index@@Base+0x138>  // b.none
  408324:	ldp	x8, x9, [x0, #16]
  408328:	ldr	x20, [x20]
  40832c:	str	x8, [x9]
  408330:	cbz	x8, 408338 <ll_remember_index@@Base+0xa4>
  408334:	str	x9, [x8, #8]
  408338:	ldp	x9, x8, [x0, #48]
  40833c:	str	x8, [x9, #8]
  408340:	str	x9, [x8]
  408344:	bl	404f30 <free@plt>
  408348:	b	408318 <ll_remember_index@@Base+0x84>
  40834c:	add	x2, x21, #0x20
  408350:	mov	x0, sp
  408354:	mov	w1, #0x35                  	// #53
  408358:	mov	w4, #0x8000                	// #32768
  40835c:	add	x20, x21, #0x10
  408360:	bl	40c230 <parse_rtattr_flags@@Base>
  408364:	ldr	x22, [sp, #24]
  408368:	cbz	x19, 4083f8 <ll_remember_index@@Base+0x164>
  40836c:	cbz	x22, 408440 <ll_remember_index@@Base+0x1ac>
  408370:	ldr	w8, [x21, #24]
  408374:	add	x21, x22, #0x4
  408378:	add	x0, x19, #0x40
  40837c:	mov	x1, x21
  408380:	str	w8, [x19, #32]
  408384:	bl	404ec0 <strcmp@plt>
  408388:	cbz	w0, 408440 <ll_remember_index@@Base+0x1ac>
  40838c:	mov	x8, x19
  408390:	ldr	x9, [x8, #16]!
  408394:	ldr	x10, [x8, #8]
  408398:	str	x9, [x10]
  40839c:	cbz	x9, 4083a4 <ll_remember_index@@Base+0x110>
  4083a0:	str	x10, [x9, #8]
  4083a4:	ldrb	w9, [x21]
  4083a8:	cbz	w9, 408418 <ll_remember_index@@Base+0x184>
  4083ac:	add	x10, x22, #0x5
  4083b0:	mov	w11, #0x1505                	// #5381
  4083b4:	add	w11, w11, w11, lsl #5
  4083b8:	add	w11, w11, w9, uxtb
  4083bc:	ldrb	w9, [x10], #1
  4083c0:	cbnz	w9, 4083b4 <ll_remember_index@@Base+0x120>
  4083c4:	and	w9, w11, #0x3ff
  4083c8:	b	40841c <ll_remember_index@@Base+0x188>
  4083cc:	ldp	x8, x9, [x19, #16]
  4083d0:	str	x8, [x9]
  4083d4:	cbz	x8, 4083dc <ll_remember_index@@Base+0x148>
  4083d8:	str	x9, [x8, #8]
  4083dc:	ldp	x8, x9, [x19]
  4083e0:	str	x8, [x9]
  4083e4:	cbz	x8, 4083ec <ll_remember_index@@Base+0x158>
  4083e8:	str	x9, [x8, #8]
  4083ec:	mov	x0, x19
  4083f0:	bl	404f30 <free@plt>
  4083f4:	b	408504 <ll_remember_index@@Base+0x270>
  4083f8:	cbz	x22, 408504 <ll_remember_index@@Base+0x270>
  4083fc:	add	x1, x22, #0x4
  408400:	mov	x0, x20
  408404:	mov	x2, xzr
  408408:	bl	408a48 <ll_init_map@@Base+0x120>
  40840c:	cbz	x0, 408504 <ll_remember_index@@Base+0x270>
  408410:	mov	x2, sp
  408414:	b	4084fc <ll_remember_index@@Base+0x268>
  408418:	mov	w9, #0x105                 	// #261
  40841c:	adrp	x10, 420000 <stderr@@GLIBC_2.17+0x1d30>
  408420:	add	x10, x10, #0xd18
  408424:	add	x9, x10, x9, lsl #3
  408428:	ldr	x10, [x9]
  40842c:	str	x10, [x8]
  408430:	cbz	x10, 408438 <ll_remember_index@@Base+0x1a4>
  408434:	str	x8, [x10, #8]
  408438:	str	x8, [x9]
  40843c:	str	x9, [x19, #24]
  408440:	ldr	x8, [sp, #416]
  408444:	cbz	x8, 40852c <ll_remember_index@@Base+0x298>
  408448:	ldrh	w9, [x8]
  40844c:	ldr	x22, [x19, #48]
  408450:	cmp	w9, #0x8
  408454:	sub	x21, x22, #0x30
  408458:	b.cc	4084ec <ll_remember_index@@Base+0x258>  // b.lo, b.ul, b.last
  40845c:	add	x23, x8, #0x4
  408460:	sub	w24, w9, #0x4
  408464:	mov	x25, x21
  408468:	ldrh	w26, [x23]
  40846c:	cmp	w26, #0x4
  408470:	b.cc	4084ec <ll_remember_index@@Base+0x258>  // b.lo, b.ul, b.last
  408474:	cmp	w24, w26
  408478:	b.lt	4084ec <ll_remember_index@@Base+0x258>  // b.tstop
  40847c:	ldrh	w8, [x23, #2]
  408480:	cmp	w8, #0x35
  408484:	b.ne	4084a4 <ll_remember_index@@Base+0x210>  // b.any
  408488:	cbz	x25, 4084ec <ll_remember_index@@Base+0x258>
  40848c:	add	x0, x23, #0x4
  408490:	add	x1, x25, #0x40
  408494:	bl	404ec0 <strcmp@plt>
  408498:	cbnz	w0, 4084ec <ll_remember_index@@Base+0x258>
  40849c:	ldr	x8, [x25, #48]
  4084a0:	sub	x25, x8, #0x30
  4084a4:	add	w8, w26, #0x3
  4084a8:	and	x8, x8, #0x1fffc
  4084ac:	sub	w24, w24, w8
  4084b0:	cmp	w24, #0x3
  4084b4:	add	x23, x23, x8
  4084b8:	b.gt	408468 <ll_remember_index@@Base+0x1d4>
  4084bc:	b	4084ec <ll_remember_index@@Base+0x258>
  4084c0:	ldp	x8, x9, [x21, #16]
  4084c4:	ldr	x22, [x22]
  4084c8:	str	x8, [x9]
  4084cc:	cbz	x8, 4084d4 <ll_remember_index@@Base+0x240>
  4084d0:	str	x9, [x8, #8]
  4084d4:	ldp	x9, x8, [x21, #48]
  4084d8:	mov	x0, x21
  4084dc:	str	x8, [x9, #8]
  4084e0:	str	x9, [x8]
  4084e4:	bl	404f30 <free@plt>
  4084e8:	sub	x21, x22, #0x30
  4084ec:	cmp	x19, x21
  4084f0:	b.ne	4084c0 <ll_remember_index@@Base+0x22c>  // b.any
  4084f4:	mov	x2, sp
  4084f8:	mov	x0, x19
  4084fc:	mov	x1, x20
  408500:	bl	4089b8 <ll_init_map@@Base+0x90>
  408504:	mov	w8, wzr
  408508:	mov	w0, w8
  40850c:	add	sp, sp, #0x1b0
  408510:	ldp	x20, x19, [sp, #80]
  408514:	ldp	x22, x21, [sp, #64]
  408518:	ldp	x24, x23, [sp, #48]
  40851c:	ldp	x26, x25, [sp, #32]
  408520:	ldr	x28, [sp, #16]
  408524:	ldp	x29, x30, [sp], #96
  408528:	ret
  40852c:	ldr	x20, [x19, #48]
  408530:	sub	x0, x20, #0x30
  408534:	cmp	x19, x0
  408538:	b.eq	408504 <ll_remember_index@@Base+0x270>  // b.none
  40853c:	ldp	x8, x9, [x0, #16]
  408540:	ldr	x20, [x20]
  408544:	str	x8, [x9]
  408548:	cbz	x8, 408550 <ll_remember_index@@Base+0x2bc>
  40854c:	str	x9, [x8, #8]
  408550:	ldp	x9, x8, [x0, #48]
  408554:	str	x8, [x9, #8]
  408558:	str	x9, [x8]
  40855c:	bl	404f30 <free@plt>
  408560:	sub	x0, x20, #0x30
  408564:	cmp	x19, x0
  408568:	mov	w8, wzr
  40856c:	b.ne	40853c <ll_remember_index@@Base+0x2a8>  // b.any
  408570:	b	408508 <ll_remember_index@@Base+0x274>

0000000000408574 <ll_idx_n2a@@Base>:
  408574:	stp	x29, x30, [sp, #-32]!
  408578:	str	x19, [sp, #16]
  40857c:	adrp	x19, 41e000 <memcpy@GLIBC_2.17>
  408580:	add	x19, x19, #0xcf0
  408584:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408588:	mov	w3, w0
  40858c:	add	x2, x2, #0xca9
  408590:	mov	w1, #0x10                  	// #16
  408594:	mov	x0, x19
  408598:	mov	x29, sp
  40859c:	bl	404d00 <snprintf@plt>
  4085a0:	mov	x0, x19
  4085a4:	ldr	x19, [sp, #16]
  4085a8:	ldp	x29, x30, [sp], #32
  4085ac:	ret

00000000004085b0 <ll_index_to_name@@Base>:
  4085b0:	stp	x29, x30, [sp, #-48]!
  4085b4:	str	x21, [sp, #16]
  4085b8:	stp	x20, x19, [sp, #32]
  4085bc:	mov	x29, sp
  4085c0:	cbz	w0, 40865c <ll_index_to_name@@Base+0xac>
  4085c4:	adrp	x21, 41e000 <memcpy@GLIBC_2.17>
  4085c8:	and	w20, w0, #0x3ff
  4085cc:	add	x21, x21, #0xd18
  4085d0:	ldr	x8, [x21, w20, uxtw #3]
  4085d4:	mov	w19, w0
  4085d8:	cbz	x8, 4085f0 <ll_index_to_name@@Base+0x40>
  4085dc:	ldr	w9, [x8, #36]
  4085e0:	cmp	w9, w19
  4085e4:	b.eq	408668 <ll_index_to_name@@Base+0xb8>  // b.none
  4085e8:	ldr	x8, [x8]
  4085ec:	cbnz	x8, 4085dc <ll_index_to_name@@Base+0x2c>
  4085f0:	mov	x0, xzr
  4085f4:	mov	w1, w19
  4085f8:	bl	408680 <ll_index_to_name@@Base+0xd0>
  4085fc:	cmp	w0, w19
  408600:	b.ne	408620 <ll_index_to_name@@Base+0x70>  // b.any
  408604:	ldr	x8, [x21, x20, lsl #3]
  408608:	cbz	x8, 408620 <ll_index_to_name@@Base+0x70>
  40860c:	ldr	w9, [x8, #36]
  408610:	cmp	w9, w19
  408614:	b.eq	408668 <ll_index_to_name@@Base+0xb8>  // b.none
  408618:	ldr	x8, [x8]
  40861c:	cbnz	x8, 40860c <ll_index_to_name@@Base+0x5c>
  408620:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  408624:	add	x20, x20, #0xd00
  408628:	mov	w0, w19
  40862c:	mov	x1, x20
  408630:	bl	404db0 <if_indextoname@plt>
  408634:	cbnz	x0, 40866c <ll_index_to_name@@Base+0xbc>
  408638:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  40863c:	add	x20, x20, #0xd00
  408640:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408644:	add	x2, x2, #0xca9
  408648:	mov	w1, #0x10                  	// #16
  40864c:	mov	x0, x20
  408650:	mov	w3, w19
  408654:	bl	404d00 <snprintf@plt>
  408658:	b	40866c <ll_index_to_name@@Base+0xbc>
  40865c:	adrp	x20, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408660:	add	x20, x20, #0xcae
  408664:	b	40866c <ll_index_to_name@@Base+0xbc>
  408668:	add	x20, x8, #0x40
  40866c:	mov	x0, x20
  408670:	ldp	x20, x19, [sp, #32]
  408674:	ldr	x21, [sp, #16]
  408678:	ldp	x29, x30, [sp], #48
  40867c:	ret
  408680:	stp	x29, x30, [sp, #-48]!
  408684:	str	x28, [sp, #16]
  408688:	stp	x20, x19, [sp, #32]
  40868c:	mov	x29, sp
  408690:	sub	sp, sp, #0x460
  408694:	add	x8, sp, #0x40
  408698:	mov	w20, w1
  40869c:	mov	x19, x0
  4086a0:	add	x0, x8, #0x8
  4086a4:	mov	w2, #0x418                 	// #1048
  4086a8:	mov	w1, wzr
  4086ac:	bl	404dc0 <memset@plt>
  4086b0:	mov	x8, #0x20                  	// #32
  4086b4:	movk	x8, #0x12, lsl #32
  4086b8:	movk	x8, #0x1, lsl #48
  4086bc:	movi	v0.2d, #0x0
  4086c0:	mov	x0, sp
  4086c4:	mov	w1, wzr
  4086c8:	str	w20, [sp, #84]
  4086cc:	str	xzr, [sp, #48]
  4086d0:	str	x8, [sp, #64]
  4086d4:	stp	q0, q0, [sp, #16]
  4086d8:	str	q0, [sp]
  4086dc:	bl	40a648 <rtnl_open@@Base>
  4086e0:	tbnz	w0, #31, 40876c <ll_index_to_name@@Base+0x1bc>
  4086e4:	add	x0, sp, #0x40
  4086e8:	mov	w1, #0x420                 	// #1056
  4086ec:	mov	w2, #0x1d                  	// #29
  4086f0:	mov	w3, #0x9                   	// #9
  4086f4:	bl	40bd1c <addattr32@@Base>
  4086f8:	cbz	x19, 408734 <ll_index_to_name@@Base+0x184>
  4086fc:	mov	x0, x19
  408700:	bl	4069c4 <check_ifname@@Base>
  408704:	cmp	w0, #0x0
  408708:	mov	w8, #0x35                  	// #53
  40870c:	mov	w9, #0x3                   	// #3
  408710:	mov	x0, x19
  408714:	csel	w20, w9, w8, eq  // eq = none
  408718:	bl	404c10 <strlen@plt>
  40871c:	add	w4, w0, #0x1
  408720:	add	x0, sp, #0x40
  408724:	mov	w1, #0x420                 	// #1056
  408728:	mov	w2, w20
  40872c:	mov	x3, x19
  408730:	bl	40bbac <addattr_l@@Base>
  408734:	mov	x0, sp
  408738:	add	x1, sp, #0x40
  40873c:	add	x2, x29, #0x18
  408740:	bl	40b6d4 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408744:	tbnz	w0, #31, 408774 <ll_index_to_name@@Base+0x1c4>
  408748:	ldr	x0, [x29, #24]
  40874c:	bl	408294 <ll_remember_index@@Base>
  408750:	ldr	x8, [x29, #24]
  408754:	mov	w19, w0
  408758:	cbnz	w0, 408760 <ll_index_to_name@@Base+0x1b0>
  40875c:	ldr	w19, [x8, #20]
  408760:	mov	x0, x8
  408764:	bl	404f30 <free@plt>
  408768:	b	408778 <ll_index_to_name@@Base+0x1c8>
  40876c:	mov	w19, wzr
  408770:	b	408780 <ll_index_to_name@@Base+0x1d0>
  408774:	mov	w19, wzr
  408778:	mov	x0, sp
  40877c:	bl	40a478 <rtnl_close@@Base>
  408780:	mov	w0, w19
  408784:	add	sp, sp, #0x460
  408788:	ldp	x20, x19, [sp, #32]
  40878c:	ldr	x28, [sp, #16]
  408790:	ldp	x29, x30, [sp], #48
  408794:	ret

0000000000408798 <ll_index_to_type@@Base>:
  408798:	cbz	w0, 4087c4 <ll_index_to_type@@Base+0x2c>
  40879c:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  4087a0:	and	w8, w0, #0x3ff
  4087a4:	add	x9, x9, #0xd18
  4087a8:	ldr	x8, [x9, w8, uxtw #3]
  4087ac:	cbz	x8, 4087c4 <ll_index_to_type@@Base+0x2c>
  4087b0:	ldr	w9, [x8, #36]
  4087b4:	cmp	w9, w0
  4087b8:	b.eq	4087cc <ll_index_to_type@@Base+0x34>  // b.none
  4087bc:	ldr	x8, [x8]
  4087c0:	cbnz	x8, 4087b0 <ll_index_to_type@@Base+0x18>
  4087c4:	mov	w0, #0xffffffff            	// #-1
  4087c8:	ret
  4087cc:	ldrh	w0, [x8, #40]
  4087d0:	ret

00000000004087d4 <ll_index_to_flags@@Base>:
  4087d4:	cbz	w0, 40880c <ll_index_to_flags@@Base+0x38>
  4087d8:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  4087dc:	and	w8, w0, #0x3ff
  4087e0:	add	x9, x9, #0xd18
  4087e4:	ldr	x8, [x9, w8, uxtw #3]
  4087e8:	cbz	x8, 408800 <ll_index_to_flags@@Base+0x2c>
  4087ec:	ldr	w9, [x8, #36]
  4087f0:	cmp	w9, w0
  4087f4:	b.eq	408808 <ll_index_to_flags@@Base+0x34>  // b.none
  4087f8:	ldr	x8, [x8]
  4087fc:	cbnz	x8, 4087ec <ll_index_to_flags@@Base+0x18>
  408800:	mov	w0, #0xffffffff            	// #-1
  408804:	ret
  408808:	ldr	w0, [x8, #32]
  40880c:	ret

0000000000408810 <ll_name_to_index@@Base>:
  408810:	sub	sp, sp, #0x30
  408814:	stp	x29, x30, [sp, #16]
  408818:	stp	x20, x19, [sp, #32]
  40881c:	add	x29, sp, #0x10
  408820:	cbz	x0, 4088c0 <ll_name_to_index@@Base+0xb0>
  408824:	ldrb	w8, [x0]
  408828:	mov	x19, x0
  40882c:	cbz	w8, 408850 <ll_name_to_index@@Base+0x40>
  408830:	add	x9, x19, #0x1
  408834:	mov	w10, #0x1505                	// #5381
  408838:	add	w10, w10, w10, lsl #5
  40883c:	add	w10, w10, w8, uxtb
  408840:	ldrb	w8, [x9], #1
  408844:	cbnz	w8, 408838 <ll_name_to_index@@Base+0x28>
  408848:	and	w8, w10, #0x3ff
  40884c:	b	408854 <ll_name_to_index@@Base+0x44>
  408850:	mov	w8, #0x105                 	// #261
  408854:	adrp	x9, 420000 <stderr@@GLIBC_2.17+0x1d30>
  408858:	add	x9, x9, #0xd18
  40885c:	ldr	x20, [x9, x8, lsl #3]
  408860:	cbz	x20, 40887c <ll_name_to_index@@Base+0x6c>
  408864:	add	x0, x20, #0x30
  408868:	mov	x1, x19
  40886c:	bl	404ec0 <strcmp@plt>
  408870:	cbz	w0, 4088bc <ll_name_to_index@@Base+0xac>
  408874:	ldr	x20, [x20]
  408878:	cbnz	x20, 408864 <ll_name_to_index@@Base+0x54>
  40887c:	mov	x0, x19
  408880:	mov	w1, wzr
  408884:	bl	408680 <ll_index_to_name@@Base+0xd0>
  408888:	cbnz	w0, 4088c0 <ll_name_to_index@@Base+0xb0>
  40888c:	mov	x0, x19
  408890:	bl	405030 <if_nametoindex@plt>
  408894:	cbnz	w0, 4088c0 <ll_name_to_index@@Base+0xb0>
  408898:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40889c:	add	x1, x1, #0xca9
  4088a0:	sub	x2, x29, #0x4
  4088a4:	mov	x0, x19
  4088a8:	bl	405060 <__isoc99_sscanf@plt>
  4088ac:	ldur	w8, [x29, #-4]
  4088b0:	cmp	w0, #0x1
  4088b4:	csel	w0, w8, wzr, eq  // eq = none
  4088b8:	b	4088c0 <ll_name_to_index@@Base+0xb0>
  4088bc:	ldr	w0, [x20, #20]
  4088c0:	ldp	x20, x19, [sp, #32]
  4088c4:	ldp	x29, x30, [sp, #16]
  4088c8:	add	sp, sp, #0x30
  4088cc:	ret

00000000004088d0 <ll_drop_by_index@@Base>:
  4088d0:	adrp	x10, 41e000 <memcpy@GLIBC_2.17>
  4088d4:	and	w9, w0, #0x3ff
  4088d8:	add	x10, x10, #0xd18
  4088dc:	mov	w8, w0
  4088e0:	ldr	x0, [x10, w9, uxtw #3]
  4088e4:	cbz	x0, 408900 <ll_drop_by_index@@Base+0x30>
  4088e8:	ldr	w10, [x0, #36]
  4088ec:	ldr	x9, [x0]
  4088f0:	cmp	w10, w8
  4088f4:	b.eq	408904 <ll_drop_by_index@@Base+0x34>  // b.none
  4088f8:	mov	x0, x9
  4088fc:	cbnz	x9, 4088e8 <ll_drop_by_index@@Base+0x18>
  408900:	ret
  408904:	ldr	x8, [x0, #8]
  408908:	str	x9, [x8]
  40890c:	cbz	x9, 408914 <ll_drop_by_index@@Base+0x44>
  408910:	str	x8, [x9, #8]
  408914:	ldp	x8, x9, [x0, #16]
  408918:	str	x8, [x9]
  40891c:	cbz	x8, 408924 <ll_drop_by_index@@Base+0x54>
  408920:	str	x9, [x8, #8]
  408924:	b	404f30 <free@plt>

0000000000408928 <ll_init_map@@Base>:
  408928:	stp	x29, x30, [sp, #-32]!
  40892c:	stp	x20, x19, [sp, #16]
  408930:	adrp	x20, 41e000 <memcpy@GLIBC_2.17>
  408934:	ldrb	w8, [x20, #3344]
  408938:	mov	x29, sp
  40893c:	tbnz	w8, #0, 408974 <ll_init_map@@Base+0x4c>
  408940:	mov	w1, wzr
  408944:	mov	x19, x0
  408948:	bl	40aae8 <rtnl_linkdump_req@@Base>
  40894c:	tbnz	w0, #31, 408980 <ll_init_map@@Base+0x58>
  408950:	adrp	x1, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408954:	ldr	x1, [x1, #4008]
  408958:	mov	x0, x19
  40895c:	mov	x2, xzr
  408960:	mov	w3, wzr
  408964:	bl	40afa8 <rtnl_dump_filter_nc@@Base>
  408968:	tbnz	w0, #31, 408990 <ll_init_map@@Base+0x68>
  40896c:	mov	w8, #0x1                   	// #1
  408970:	strb	w8, [x20, #3344]
  408974:	ldp	x20, x19, [sp, #16]
  408978:	ldp	x29, x30, [sp], #32
  40897c:	ret
  408980:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408984:	add	x0, x0, #0x718
  408988:	bl	404c40 <perror@plt>
  40898c:	b	4089b0 <ll_init_map@@Base+0x88>
  408990:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408994:	ldr	x8, [x8, #3992]
  408998:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40899c:	add	x0, x0, #0x731
  4089a0:	mov	w1, #0x10                  	// #16
  4089a4:	ldr	x3, [x8]
  4089a8:	mov	w2, #0x1                   	// #1
  4089ac:	bl	404f90 <fwrite@plt>
  4089b0:	mov	w0, #0x1                   	// #1
  4089b4:	bl	404c30 <exit@plt>
  4089b8:	stp	x29, x30, [sp, #-48]!
  4089bc:	stp	x22, x21, [sp, #16]
  4089c0:	stp	x20, x19, [sp, #32]
  4089c4:	ldr	x8, [x2, #416]
  4089c8:	mov	x29, sp
  4089cc:	cbz	x8, 408a38 <ll_init_map@@Base+0x110>
  4089d0:	ldrh	w9, [x8]
  4089d4:	cmp	w9, #0x8
  4089d8:	b.cc	408a38 <ll_init_map@@Base+0x110>  // b.lo, b.ul, b.last
  4089dc:	mov	x19, x1
  4089e0:	mov	x20, x0
  4089e4:	add	x21, x8, #0x4
  4089e8:	sub	w22, w9, #0x4
  4089ec:	ldrh	w8, [x21]
  4089f0:	cmp	w8, #0x4
  4089f4:	b.cc	408a38 <ll_init_map@@Base+0x110>  // b.lo, b.ul, b.last
  4089f8:	cmp	w22, w8
  4089fc:	b.lt	408a38 <ll_init_map@@Base+0x110>  // b.tstop
  408a00:	ldrh	w9, [x21, #2]
  408a04:	cmp	w9, #0x35
  408a08:	b.ne	408a20 <ll_init_map@@Base+0xf8>  // b.any
  408a0c:	add	x1, x21, #0x4
  408a10:	mov	x0, x19
  408a14:	mov	x2, x20
  408a18:	bl	408a48 <ll_init_map@@Base+0x120>
  408a1c:	ldrh	w8, [x21]
  408a20:	add	w8, w8, #0x3
  408a24:	and	w8, w8, #0x1fffc
  408a28:	sub	w22, w22, w8
  408a2c:	cmp	w22, #0x3
  408a30:	add	x21, x21, x8
  408a34:	b.gt	4089ec <ll_init_map@@Base+0xc4>
  408a38:	ldp	x20, x19, [sp, #32]
  408a3c:	ldp	x22, x21, [sp, #16]
  408a40:	ldp	x29, x30, [sp], #48
  408a44:	ret
  408a48:	stp	x29, x30, [sp, #-48]!
  408a4c:	stp	x22, x21, [sp, #16]
  408a50:	mov	x22, x0
  408a54:	mov	x0, x1
  408a58:	stp	x20, x19, [sp, #32]
  408a5c:	mov	x29, sp
  408a60:	mov	x21, x2
  408a64:	mov	x20, x1
  408a68:	bl	404c10 <strlen@plt>
  408a6c:	add	x0, x0, #0x41
  408a70:	bl	404d60 <malloc@plt>
  408a74:	mov	x19, x0
  408a78:	cbz	x0, 408b48 <ll_init_map@@Base+0x220>
  408a7c:	ldr	w8, [x22, #4]
  408a80:	add	x0, x19, #0x40
  408a84:	mov	x1, x20
  408a88:	str	w8, [x19, #36]
  408a8c:	bl	404fc0 <strcpy@plt>
  408a90:	ldrh	w8, [x22, #2]
  408a94:	strh	w8, [x19, #40]
  408a98:	ldr	w8, [x22, #8]
  408a9c:	str	w8, [x19, #32]
  408aa0:	cbz	x21, 408ac0 <ll_init_map@@Base+0x198>
  408aa4:	ldr	x9, [x21, #56]
  408aa8:	add	x8, x19, #0x30
  408aac:	add	x10, x21, #0x30
  408ab0:	str	x8, [x21, #56]
  408ab4:	stp	x10, x9, [x19, #48]
  408ab8:	str	x8, [x9]
  408abc:	b	408af4 <ll_init_map@@Base+0x1cc>
  408ac0:	ldr	w8, [x22, #4]
  408ac4:	adrp	x9, 41e000 <memcpy@GLIBC_2.17>
  408ac8:	add	x9, x9, #0xd18
  408acc:	and	x8, x8, #0x3ff
  408ad0:	add	x8, x9, x8, lsl #3
  408ad4:	ldr	x9, [x8]
  408ad8:	str	x9, [x19]
  408adc:	cbz	x9, 408ae4 <ll_init_map@@Base+0x1bc>
  408ae0:	str	x19, [x9, #8]
  408ae4:	str	x19, [x8]
  408ae8:	str	x8, [x19, #8]
  408aec:	add	x8, x19, #0x30
  408af0:	stp	x8, x8, [x19, #48]
  408af4:	ldrb	w8, [x20]
  408af8:	cbz	w8, 408b1c <ll_init_map@@Base+0x1f4>
  408afc:	add	x9, x20, #0x1
  408b00:	mov	w10, #0x1505                	// #5381
  408b04:	add	w10, w10, w10, lsl #5
  408b08:	add	w10, w10, w8, uxtb
  408b0c:	ldrb	w8, [x9], #1
  408b10:	cbnz	w8, 408b04 <ll_init_map@@Base+0x1dc>
  408b14:	and	w8, w10, #0x3ff
  408b18:	b	408b20 <ll_init_map@@Base+0x1f8>
  408b1c:	mov	w8, #0x105                 	// #261
  408b20:	adrp	x9, 420000 <stderr@@GLIBC_2.17+0x1d30>
  408b24:	add	x9, x9, #0xd18
  408b28:	add	x8, x9, x8, lsl #3
  408b2c:	ldr	x10, [x8]
  408b30:	mov	x9, x19
  408b34:	str	x10, [x9, #16]!
  408b38:	cbz	x10, 408b40 <ll_init_map@@Base+0x218>
  408b3c:	str	x9, [x10, #8]
  408b40:	str	x9, [x8]
  408b44:	str	x8, [x19, #24]
  408b48:	mov	x0, x19
  408b4c:	ldp	x20, x19, [sp, #32]
  408b50:	ldp	x22, x21, [sp, #16]
  408b54:	ldp	x29, x30, [sp], #48
  408b58:	ret

0000000000408b5c <ll_addr_n2a@@Base>:
  408b5c:	stp	x29, x30, [sp, #-80]!
  408b60:	stp	x22, x21, [sp, #48]
  408b64:	stp	x20, x19, [sp, #64]
  408b68:	mov	w19, w4
  408b6c:	mov	x20, x3
  408b70:	mov	w22, w1
  408b74:	cmp	w1, #0x10
  408b78:	mov	x21, x0
  408b7c:	stp	x26, x25, [sp, #16]
  408b80:	stp	x24, x23, [sp, #32]
  408b84:	mov	x29, sp
  408b88:	b.eq	408bbc <ll_addr_n2a@@Base+0x60>  // b.none
  408b8c:	cmp	w22, #0x4
  408b90:	b.ne	408bf4 <ll_addr_n2a@@Base+0x98>  // b.any
  408b94:	sub	w8, w2, #0x300
  408b98:	cmp	w8, #0xa
  408b9c:	b.hi	408bf4 <ll_addr_n2a@@Base+0x98>  // b.pmore
  408ba0:	mov	w9, #0x1                   	// #1
  408ba4:	lsl	w8, w9, w8
  408ba8:	mov	w9, #0x501                 	// #1281
  408bac:	tst	w8, w9
  408bb0:	b.eq	408bf4 <ll_addr_n2a@@Base+0x98>  // b.none
  408bb4:	mov	w0, #0x2                   	// #2
  408bb8:	b	408bd0 <ll_addr_n2a@@Base+0x74>
  408bbc:	cmp	w2, #0x337
  408bc0:	b.eq	408bcc <ll_addr_n2a@@Base+0x70>  // b.none
  408bc4:	cmp	w2, #0x301
  408bc8:	b.ne	408bf4 <ll_addr_n2a@@Base+0x98>  // b.any
  408bcc:	mov	w0, #0xa                   	// #10
  408bd0:	mov	x1, x21
  408bd4:	mov	x2, x20
  408bd8:	mov	w3, w19
  408bdc:	ldp	x20, x19, [sp, #64]
  408be0:	ldp	x22, x21, [sp, #48]
  408be4:	ldp	x24, x23, [sp, #32]
  408be8:	ldp	x26, x25, [sp, #16]
  408bec:	ldp	x29, x30, [sp], #80
  408bf0:	b	405120 <inet_ntop@plt>
  408bf4:	ldrb	w3, [x21]
  408bf8:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408bfc:	sxtw	x1, w19
  408c00:	add	x2, x2, #0xcb1
  408c04:	mov	x0, x20
  408c08:	bl	404d00 <snprintf@plt>
  408c0c:	cmp	w22, #0x2
  408c10:	b.lt	408c64 <ll_addr_n2a@@Base+0x108>  // b.tstop
  408c14:	cmp	w19, #0x3
  408c18:	b.lt	408c64 <ll_addr_n2a@@Base+0x108>  // b.tstop
  408c1c:	mov	w23, w22
  408c20:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408c24:	sub	w24, w19, #0x2
  408c28:	mov	w25, #0x2                   	// #2
  408c2c:	mov	w26, #0x1                   	// #1
  408c30:	add	x22, x22, #0xcb0
  408c34:	ldrb	w3, [x21, x26]
  408c38:	add	x0, x20, x25
  408c3c:	sxtw	x1, w24
  408c40:	mov	x2, x22
  408c44:	bl	404d00 <snprintf@plt>
  408c48:	add	x26, x26, #0x1
  408c4c:	cmp	x26, x23
  408c50:	b.cs	408c64 <ll_addr_n2a@@Base+0x108>  // b.hs, b.nlast
  408c54:	add	x25, x25, #0x3
  408c58:	cmp	w25, w19
  408c5c:	sub	w24, w24, #0x3
  408c60:	b.lt	408c34 <ll_addr_n2a@@Base+0xd8>  // b.tstop
  408c64:	mov	x0, x20
  408c68:	ldp	x20, x19, [sp, #64]
  408c6c:	ldp	x22, x21, [sp, #48]
  408c70:	ldp	x24, x23, [sp, #32]
  408c74:	ldp	x26, x25, [sp, #16]
  408c78:	ldp	x29, x30, [sp], #80
  408c7c:	ret

0000000000408c80 <ll_addr_a2n@@Base>:
  408c80:	sub	sp, sp, #0x160
  408c84:	stp	x22, x21, [sp, #320]
  408c88:	stp	x20, x19, [sp, #336]
  408c8c:	mov	w21, w1
  408c90:	mov	x20, x0
  408c94:	mov	w1, #0x2e                  	// #46
  408c98:	mov	x0, x2
  408c9c:	stp	x29, x30, [sp, #272]
  408ca0:	str	x28, [sp, #288]
  408ca4:	stp	x24, x23, [sp, #304]
  408ca8:	add	x29, sp, #0x110
  408cac:	mov	x19, x2
  408cb0:	bl	404f70 <strchr@plt>
  408cb4:	cbz	x0, 408ce4 <ll_addr_a2n@@Base+0x64>
  408cb8:	add	x0, sp, #0x8
  408cbc:	mov	w2, #0x2                   	// #2
  408cc0:	mov	x1, x19
  408cc4:	bl	40611c <get_addr_1@@Base>
  408cc8:	cbnz	w0, 408d58 <ll_addr_a2n@@Base+0xd8>
  408ccc:	cmp	w21, #0x4
  408cd0:	b.lt	408d74 <ll_addr_a2n@@Base+0xf4>  // b.tstop
  408cd4:	ldr	w8, [sp, #16]
  408cd8:	mov	w0, #0x4                   	// #4
  408cdc:	str	w8, [x20]
  408ce0:	b	408d84 <ll_addr_a2n@@Base+0x104>
  408ce4:	cmp	w21, #0x1
  408ce8:	b.lt	408d7c <ll_addr_a2n@@Base+0xfc>  // b.tstop
  408cec:	mov	w24, w21
  408cf0:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408cf4:	mov	x23, xzr
  408cf8:	add	x21, x21, #0xccf
  408cfc:	mov	w1, #0x3a                  	// #58
  408d00:	mov	x0, x19
  408d04:	bl	404f70 <strchr@plt>
  408d08:	mov	x22, x0
  408d0c:	cbz	x0, 408d14 <ll_addr_a2n@@Base+0x94>
  408d10:	strb	wzr, [x22], #1
  408d14:	add	x2, sp, #0x8
  408d18:	mov	x0, x19
  408d1c:	mov	x1, x21
  408d20:	bl	405060 <__isoc99_sscanf@plt>
  408d24:	cmp	w0, #0x1
  408d28:	b.ne	408d58 <ll_addr_a2n@@Base+0xd8>  // b.any
  408d2c:	ldr	w8, [sp, #8]
  408d30:	cmp	w8, #0xff
  408d34:	b.hi	408d58 <ll_addr_a2n@@Base+0xd8>  // b.pmore
  408d38:	strb	w8, [x20, x23]
  408d3c:	cbz	x22, 408d80 <ll_addr_a2n@@Base+0x100>
  408d40:	add	x23, x23, #0x1
  408d44:	cmp	x24, x23
  408d48:	mov	x19, x22
  408d4c:	b.ne	408cfc <ll_addr_a2n@@Base+0x7c>  // b.any
  408d50:	mov	w23, w24
  408d54:	b	408d80 <ll_addr_a2n@@Base+0x100>
  408d58:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408d5c:	ldr	x8, [x8, #3992]
  408d60:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408d64:	add	x1, x1, #0xcb6
  408d68:	mov	x2, x19
  408d6c:	ldr	x0, [x8]
  408d70:	bl	405100 <fprintf@plt>
  408d74:	mov	w0, #0xffffffff            	// #-1
  408d78:	b	408d84 <ll_addr_a2n@@Base+0x104>
  408d7c:	mov	w23, wzr
  408d80:	add	w0, w23, #0x1
  408d84:	ldp	x20, x19, [sp, #336]
  408d88:	ldp	x22, x21, [sp, #320]
  408d8c:	ldp	x24, x23, [sp, #304]
  408d90:	ldr	x28, [sp, #288]
  408d94:	ldp	x29, x30, [sp, #272]
  408d98:	add	sp, sp, #0x160
  408d9c:	ret

0000000000408da0 <new_json_obj@@Base>:
  408da0:	mov	w1, #0x1                   	// #1
  408da4:	b	408da8 <new_json_obj@@Base+0x8>
  408da8:	stp	x29, x30, [sp, #-32]!
  408dac:	stp	x20, x19, [sp, #16]
  408db0:	mov	x29, sp
  408db4:	cbz	w0, 408e04 <new_json_obj@@Base+0x64>
  408db8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408dbc:	ldr	x8, [x8, #4016]
  408dc0:	mov	w19, w1
  408dc4:	ldr	x0, [x8]
  408dc8:	bl	409b34 <jsonw_new@@Base>
  408dcc:	adrp	x20, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408dd0:	str	x0, [x20, #3352]
  408dd4:	cbz	x0, 408e10 <new_json_obj@@Base+0x70>
  408dd8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408ddc:	ldr	x8, [x8, #4056]
  408de0:	ldr	w8, [x8]
  408de4:	cbz	w8, 408df0 <new_json_obj@@Base+0x50>
  408de8:	mov	w1, #0x1                   	// #1
  408dec:	bl	409bd4 <jsonw_pretty@@Base>
  408df0:	tbz	w19, #0, 408e04 <new_json_obj@@Base+0x64>
  408df4:	ldr	x0, [x20, #3352]
  408df8:	ldp	x20, x19, [sp, #16]
  408dfc:	ldp	x29, x30, [sp], #32
  408e00:	b	409f7c <jsonw_start_array@@Base>
  408e04:	ldp	x20, x19, [sp, #16]
  408e08:	ldp	x29, x30, [sp], #32
  408e0c:	ret
  408e10:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408e14:	add	x0, x0, #0xcf1
  408e18:	bl	404c40 <perror@plt>
  408e1c:	mov	w0, #0x1                   	// #1
  408e20:	bl	404c30 <exit@plt>

0000000000408e24 <delete_json_obj@@Base>:
  408e24:	mov	w0, #0x1                   	// #1
  408e28:	b	408e2c <delete_json_obj@@Base+0x8>
  408e2c:	stp	x29, x30, [sp, #-16]!
  408e30:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408e34:	ldr	x8, [x8, #3352]
  408e38:	mov	x29, sp
  408e3c:	cbz	x8, 408e5c <delete_json_obj@@Base+0x38>
  408e40:	tbz	w0, #0, 408e4c <delete_json_obj@@Base+0x28>
  408e44:	mov	x0, x8
  408e48:	bl	409fe8 <jsonw_end_array@@Base>
  408e4c:	adrp	x0, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408e50:	add	x0, x0, #0xd18
  408e54:	ldp	x29, x30, [sp], #16
  408e58:	b	409b68 <jsonw_destroy@@Base>
  408e5c:	ldp	x29, x30, [sp], #16
  408e60:	ret

0000000000408e64 <new_json_obj_plain@@Base>:
  408e64:	mov	w1, wzr
  408e68:	b	408da8 <new_json_obj@@Base+0x8>

0000000000408e6c <delete_json_obj_plain@@Base>:
  408e6c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408e70:	ldr	x8, [x8, #3352]
  408e74:	cbz	x8, 408e84 <delete_json_obj_plain@@Base+0x18>
  408e78:	adrp	x0, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408e7c:	add	x0, x0, #0xd18
  408e80:	b	409b68 <jsonw_destroy@@Base>
  408e84:	ret

0000000000408e88 <is_json_context@@Base>:
  408e88:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408e8c:	ldr	x8, [x8, #3352]
  408e90:	cmp	x8, #0x0
  408e94:	cset	w0, ne  // ne = any
  408e98:	ret

0000000000408e9c <get_json_writer@@Base>:
  408e9c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408ea0:	ldr	x0, [x8, #3352]
  408ea4:	ret

0000000000408ea8 <open_json_object@@Base>:
  408ea8:	stp	x29, x30, [sp, #-32]!
  408eac:	str	x19, [sp, #16]
  408eb0:	adrp	x19, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408eb4:	ldr	x8, [x19, #3352]
  408eb8:	mov	x29, sp
  408ebc:	cbz	x8, 408ee4 <open_json_object@@Base+0x3c>
  408ec0:	mov	x1, x0
  408ec4:	cbz	x0, 408ed4 <open_json_object@@Base+0x2c>
  408ec8:	mov	x0, x8
  408ecc:	bl	409be0 <jsonw_name@@Base>
  408ed0:	ldr	x8, [x19, #3352]
  408ed4:	ldr	x19, [sp, #16]
  408ed8:	mov	x0, x8
  408edc:	ldp	x29, x30, [sp], #32
  408ee0:	b	409eb0 <jsonw_start_object@@Base>
  408ee4:	ldr	x19, [sp, #16]
  408ee8:	ldp	x29, x30, [sp], #32
  408eec:	ret

0000000000408ef0 <close_json_object@@Base>:
  408ef0:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408ef4:	ldr	x0, [x8, #3352]
  408ef8:	cbz	x0, 408f00 <close_json_object@@Base+0x10>
  408efc:	b	409f00 <jsonw_end_object@@Base>
  408f00:	ret

0000000000408f04 <open_json_array@@Base>:
  408f04:	stp	x29, x30, [sp, #-32]!
  408f08:	str	x19, [sp, #16]
  408f0c:	adrp	x19, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408f10:	ldr	x8, [x19, #3352]
  408f14:	tst	w0, #0x6
  408f18:	mov	x29, sp
  408f1c:	b.eq	408f44 <open_json_array@@Base+0x40>  // b.none
  408f20:	cbz	x8, 408f48 <open_json_array@@Base+0x44>
  408f24:	cbz	x1, 408f34 <open_json_array@@Base+0x30>
  408f28:	mov	x0, x8
  408f2c:	bl	409be0 <jsonw_name@@Base>
  408f30:	ldr	x8, [x19, #3352]
  408f34:	ldr	x19, [sp, #16]
  408f38:	mov	x0, x8
  408f3c:	ldp	x29, x30, [sp], #32
  408f40:	b	409f7c <jsonw_start_array@@Base>
  408f44:	cbnz	x8, 408f68 <open_json_array@@Base+0x64>
  408f48:	mov	w8, #0x5                   	// #5
  408f4c:	tst	w0, w8
  408f50:	b.eq	408f68 <open_json_array@@Base+0x64>  // b.none
  408f54:	ldr	x19, [sp, #16]
  408f58:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408f5c:	add	x0, x0, #0x8e9
  408f60:	ldp	x29, x30, [sp], #32
  408f64:	b	4050a0 <printf@plt>
  408f68:	ldr	x19, [sp, #16]
  408f6c:	ldp	x29, x30, [sp], #32
  408f70:	ret

0000000000408f74 <close_json_array@@Base>:
  408f74:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408f78:	ldr	x8, [x8, #3352]
  408f7c:	tst	w0, #0x6
  408f80:	b.eq	408f90 <close_json_array@@Base+0x1c>  // b.none
  408f84:	cbz	x8, 408f94 <close_json_array@@Base+0x20>
  408f88:	mov	x0, x8
  408f8c:	b	409fe8 <jsonw_end_array@@Base>
  408f90:	cbnz	x8, 408fac <close_json_array@@Base+0x38>
  408f94:	mov	w8, #0x5                   	// #5
  408f98:	tst	w0, w8
  408f9c:	b.eq	408fac <close_json_array@@Base+0x38>  // b.none
  408fa0:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  408fa4:	add	x0, x0, #0x8e9
  408fa8:	b	4050a0 <printf@plt>
  408fac:	ret

0000000000408fb0 <print_color_int@@Base>:
  408fb0:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  408fb4:	ldr	x8, [x8, #3352]
  408fb8:	tst	w0, #0x6
  408fbc:	b.eq	408fd8 <print_color_int@@Base+0x28>  // b.none
  408fc0:	cbz	x8, 408fdc <print_color_int@@Base+0x2c>
  408fc4:	mov	x0, x8
  408fc8:	cbz	x2, 409004 <print_color_int@@Base+0x54>
  408fcc:	mov	x1, x2
  408fd0:	mov	w2, w4
  408fd4:	b	40a354 <jsonw_int_field@@Base>
  408fd8:	cbnz	x8, 409000 <print_color_int@@Base+0x50>
  408fdc:	mov	w8, #0x5                   	// #5
  408fe0:	tst	w0, w8
  408fe4:	b.eq	409000 <print_color_int@@Base+0x50>  // b.none
  408fe8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  408fec:	ldr	x8, [x8, #4016]
  408ff0:	mov	x2, x3
  408ff4:	mov	w3, w4
  408ff8:	ldr	x0, [x8]
  408ffc:	b	4097ec <color_fprintf@@Base>
  409000:	ret
  409004:	mov	w1, w4
  409008:	b	40a118 <jsonw_int@@Base>

000000000040900c <print_color_s64@@Base>:
  40900c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409010:	ldr	x8, [x8, #3352]
  409014:	tst	w0, #0x6
  409018:	b.eq	409034 <print_color_s64@@Base+0x28>  // b.none
  40901c:	cbz	x8, 409038 <print_color_s64@@Base+0x2c>
  409020:	mov	x0, x8
  409024:	cbz	x2, 409060 <print_color_s64@@Base+0x54>
  409028:	mov	x1, x2
  40902c:	mov	x2, x4
  409030:	b	40a388 <jsonw_s64_field@@Base>
  409034:	cbnz	x8, 40905c <print_color_s64@@Base+0x50>
  409038:	mov	w8, #0x5                   	// #5
  40903c:	tst	w0, w8
  409040:	b.eq	40905c <print_color_s64@@Base+0x50>  // b.none
  409044:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409048:	ldr	x8, [x8, #4016]
  40904c:	mov	x2, x3
  409050:	mov	x3, x4
  409054:	ldr	x0, [x8]
  409058:	b	4097ec <color_fprintf@@Base>
  40905c:	ret
  409060:	mov	x1, x4
  409064:	b	40a128 <jsonw_s64@@Base>

0000000000409068 <print_color_hhu@@Base>:
  409068:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40906c:	ldr	x8, [x8, #3352]
  409070:	tst	w0, #0x6
  409074:	b.eq	409090 <print_color_hhu@@Base+0x28>  // b.none
  409078:	cbz	x8, 409094 <print_color_hhu@@Base+0x2c>
  40907c:	mov	x0, x8
  409080:	cbz	x2, 4090c0 <print_color_hhu@@Base+0x58>
  409084:	mov	x1, x2
  409088:	mov	w2, w4
  40908c:	b	40a284 <jsonw_hhu_field@@Base>
  409090:	cbnz	x8, 4090bc <print_color_hhu@@Base+0x54>
  409094:	mov	w8, #0x5                   	// #5
  409098:	tst	w0, w8
  40909c:	b.eq	4090bc <print_color_hhu@@Base+0x54>  // b.none
  4090a0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4090a4:	ldr	x8, [x8, #4016]
  4090a8:	mov	x2, x3
  4090ac:	ldr	x0, [x8]
  4090b0:	and	w8, w4, #0xff
  4090b4:	mov	w3, w8
  4090b8:	b	4097ec <color_fprintf@@Base>
  4090bc:	ret
  4090c0:	mov	w1, w4
  4090c4:	b	40a0a8 <jsonw_hhu@@Base>

00000000004090c8 <print_color_hu@@Base>:
  4090c8:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4090cc:	ldr	x8, [x8, #3352]
  4090d0:	tst	w0, #0x6
  4090d4:	b.eq	4090f0 <print_color_hu@@Base+0x28>  // b.none
  4090d8:	cbz	x8, 4090f4 <print_color_hu@@Base+0x2c>
  4090dc:	mov	x0, x8
  4090e0:	cbz	x2, 409120 <print_color_hu@@Base+0x58>
  4090e4:	mov	x1, x2
  4090e8:	mov	w2, w4
  4090ec:	b	40a2b8 <jsonw_hu_field@@Base>
  4090f0:	cbnz	x8, 40911c <print_color_hu@@Base+0x54>
  4090f4:	mov	w8, #0x5                   	// #5
  4090f8:	tst	w0, w8
  4090fc:	b.eq	40911c <print_color_hu@@Base+0x54>  // b.none
  409100:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409104:	ldr	x8, [x8, #4016]
  409108:	mov	x2, x3
  40910c:	ldr	x0, [x8]
  409110:	and	w8, w4, #0xffff
  409114:	mov	w3, w8
  409118:	b	4097ec <color_fprintf@@Base>
  40911c:	ret
  409120:	mov	w1, w4
  409124:	b	40a0b8 <jsonw_hu@@Base>

0000000000409128 <print_color_uint@@Base>:
  409128:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40912c:	ldr	x8, [x8, #3352]
  409130:	tst	w0, #0x6
  409134:	b.eq	409150 <print_color_uint@@Base+0x28>  // b.none
  409138:	cbz	x8, 409154 <print_color_uint@@Base+0x2c>
  40913c:	mov	x0, x8
  409140:	cbz	x2, 40917c <print_color_uint@@Base+0x54>
  409144:	mov	x1, x2
  409148:	mov	w2, w4
  40914c:	b	40a1e8 <jsonw_uint_field@@Base>
  409150:	cbnz	x8, 409178 <print_color_uint@@Base+0x50>
  409154:	mov	w8, #0x5                   	// #5
  409158:	tst	w0, w8
  40915c:	b.eq	409178 <print_color_uint@@Base+0x50>  // b.none
  409160:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409164:	ldr	x8, [x8, #4016]
  409168:	mov	x2, x3
  40916c:	mov	w3, w4
  409170:	ldr	x0, [x8]
  409174:	b	4097ec <color_fprintf@@Base>
  409178:	ret
  40917c:	mov	w1, w4
  409180:	b	40a0c8 <jsonw_uint@@Base>

0000000000409184 <print_color_u64@@Base>:
  409184:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409188:	ldr	x8, [x8, #3352]
  40918c:	tst	w0, #0x6
  409190:	b.eq	4091ac <print_color_u64@@Base+0x28>  // b.none
  409194:	cbz	x8, 4091b0 <print_color_u64@@Base+0x2c>
  409198:	mov	x0, x8
  40919c:	cbz	x2, 4091d8 <print_color_u64@@Base+0x54>
  4091a0:	mov	x1, x2
  4091a4:	mov	x2, x4
  4091a8:	b	40a21c <jsonw_u64_field@@Base>
  4091ac:	cbnz	x8, 4091d4 <print_color_u64@@Base+0x50>
  4091b0:	mov	w8, #0x5                   	// #5
  4091b4:	tst	w0, w8
  4091b8:	b.eq	4091d4 <print_color_u64@@Base+0x50>  // b.none
  4091bc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4091c0:	ldr	x8, [x8, #4016]
  4091c4:	mov	x2, x3
  4091c8:	mov	x3, x4
  4091cc:	ldr	x0, [x8]
  4091d0:	b	4097ec <color_fprintf@@Base>
  4091d4:	ret
  4091d8:	mov	x1, x4
  4091dc:	b	40a0d8 <jsonw_u64@@Base>

00000000004091e0 <print_color_luint@@Base>:
  4091e0:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4091e4:	ldr	x8, [x8, #3352]
  4091e8:	tst	w0, #0x6
  4091ec:	b.eq	409208 <print_color_luint@@Base+0x28>  // b.none
  4091f0:	cbz	x8, 40920c <print_color_luint@@Base+0x2c>
  4091f4:	mov	x0, x8
  4091f8:	cbz	x2, 409234 <print_color_luint@@Base+0x54>
  4091fc:	mov	x1, x2
  409200:	mov	x2, x4
  409204:	b	40a2ec <jsonw_luint_field@@Base>
  409208:	cbnz	x8, 409230 <print_color_luint@@Base+0x50>
  40920c:	mov	w8, #0x5                   	// #5
  409210:	tst	w0, w8
  409214:	b.eq	409230 <print_color_luint@@Base+0x50>  // b.none
  409218:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40921c:	ldr	x8, [x8, #4016]
  409220:	mov	x2, x3
  409224:	mov	x3, x4
  409228:	ldr	x0, [x8]
  40922c:	b	4097ec <color_fprintf@@Base>
  409230:	ret
  409234:	mov	x1, x4
  409238:	b	40a0f8 <jsonw_luint@@Base>

000000000040923c <print_color_lluint@@Base>:
  40923c:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409240:	ldr	x8, [x8, #3352]
  409244:	tst	w0, #0x6
  409248:	b.eq	409264 <print_color_lluint@@Base+0x28>  // b.none
  40924c:	cbz	x8, 409268 <print_color_lluint@@Base+0x2c>
  409250:	mov	x0, x8
  409254:	cbz	x2, 409290 <print_color_lluint@@Base+0x54>
  409258:	mov	x1, x2
  40925c:	mov	x2, x4
  409260:	b	40a320 <jsonw_lluint_field@@Base>
  409264:	cbnz	x8, 40928c <print_color_lluint@@Base+0x50>
  409268:	mov	w8, #0x5                   	// #5
  40926c:	tst	w0, w8
  409270:	b.eq	40928c <print_color_lluint@@Base+0x50>  // b.none
  409274:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409278:	ldr	x8, [x8, #4016]
  40927c:	mov	x2, x3
  409280:	mov	x3, x4
  409284:	ldr	x0, [x8]
  409288:	b	4097ec <color_fprintf@@Base>
  40928c:	ret
  409290:	mov	x1, x4
  409294:	b	40a108 <jsonw_lluint@@Base>

0000000000409298 <print_color_float@@Base>:
  409298:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40929c:	ldr	x8, [x8, #3352]
  4092a0:	tst	w0, #0x6
  4092a4:	b.eq	4092bc <print_color_float@@Base+0x24>  // b.none
  4092a8:	cbz	x8, 4092c0 <print_color_float@@Base+0x28>
  4092ac:	mov	x0, x8
  4092b0:	cbz	x2, 4092e4 <print_color_float@@Base+0x4c>
  4092b4:	mov	x1, x2
  4092b8:	b	40a1ac <jsonw_float_field@@Base>
  4092bc:	cbnz	x8, 4092e0 <print_color_float@@Base+0x48>
  4092c0:	mov	w8, #0x5                   	// #5
  4092c4:	tst	w0, w8
  4092c8:	b.eq	4092e0 <print_color_float@@Base+0x48>  // b.none
  4092cc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4092d0:	ldr	x8, [x8, #4016]
  4092d4:	mov	x2, x3
  4092d8:	ldr	x0, [x8]
  4092dc:	b	4097ec <color_fprintf@@Base>
  4092e0:	ret
  4092e4:	b	40a09c <jsonw_float@@Base>

00000000004092e8 <print_uint_name_value@@Base>:
  4092e8:	sub	sp, sp, #0x60
  4092ec:	stp	x20, x19, [sp, #80]
  4092f0:	mov	x20, x0
  4092f4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4092f8:	mov	w19, w1
  4092fc:	add	x2, x2, #0xcd2
  409300:	mov	x0, sp
  409304:	mov	w1, #0x40                  	// #64
  409308:	mov	x3, x20
  40930c:	stp	x29, x30, [sp, #64]
  409310:	add	x29, sp, #0x40
  409314:	bl	404d00 <snprintf@plt>
  409318:	mov	x3, sp
  40931c:	mov	w0, #0x4                   	// #4
  409320:	mov	w1, #0x6                   	// #6
  409324:	mov	x2, x20
  409328:	mov	w4, w19
  40932c:	bl	409128 <print_color_uint@@Base>
  409330:	ldp	x20, x19, [sp, #80]
  409334:	ldp	x29, x30, [sp, #64]
  409338:	add	sp, sp, #0x60
  40933c:	ret

0000000000409340 <print_string_name_value@@Base>:
  409340:	sub	sp, sp, #0x60
  409344:	stp	x20, x19, [sp, #80]
  409348:	mov	x20, x0
  40934c:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409350:	mov	x19, x1
  409354:	add	x2, x2, #0xcd9
  409358:	mov	x0, sp
  40935c:	mov	w1, #0x40                  	// #64
  409360:	mov	x3, x20
  409364:	stp	x29, x30, [sp, #64]
  409368:	add	x29, sp, #0x40
  40936c:	bl	404d00 <snprintf@plt>
  409370:	mov	x3, sp
  409374:	mov	w0, #0x4                   	// #4
  409378:	mov	w1, #0x6                   	// #6
  40937c:	mov	x2, x20
  409380:	mov	x4, x19
  409384:	bl	409398 <print_color_string@@Base>
  409388:	ldp	x20, x19, [sp, #80]
  40938c:	ldp	x29, x30, [sp, #64]
  409390:	add	sp, sp, #0x60
  409394:	ret

0000000000409398 <print_color_string@@Base>:
  409398:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40939c:	ldr	x8, [x8, #3352]
  4093a0:	tst	w0, #0x6
  4093a4:	b.eq	4093c0 <print_color_string@@Base+0x28>  // b.none
  4093a8:	cbz	x8, 4093c4 <print_color_string@@Base+0x2c>
  4093ac:	cbz	x2, 4093ec <print_color_string@@Base+0x54>
  4093b0:	cbnz	x4, 4093ec <print_color_string@@Base+0x54>
  4093b4:	mov	x0, x8
  4093b8:	mov	x1, x2
  4093bc:	b	409be0 <jsonw_name@@Base>
  4093c0:	cbnz	x8, 4093e8 <print_color_string@@Base+0x50>
  4093c4:	mov	w8, #0x5                   	// #5
  4093c8:	tst	w0, w8
  4093cc:	b.eq	4093e8 <print_color_string@@Base+0x50>  // b.none
  4093d0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4093d4:	ldr	x8, [x8, #4016]
  4093d8:	mov	x2, x3
  4093dc:	mov	x3, x4
  4093e0:	ldr	x0, [x8]
  4093e4:	b	4097ec <color_fprintf@@Base>
  4093e8:	ret
  4093ec:	cbnz	x2, 409400 <print_color_string@@Base+0x68>
  4093f0:	cbz	x4, 409400 <print_color_string@@Base+0x68>
  4093f4:	mov	x0, x8
  4093f8:	mov	x1, x4
  4093fc:	b	40a02c <jsonw_string@@Base>
  409400:	mov	x0, x8
  409404:	mov	x1, x2
  409408:	mov	x2, x4
  40940c:	b	40a138 <jsonw_string_field@@Base>

0000000000409410 <print_color_bool@@Base>:
  409410:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409414:	ldr	x8, [x8, #3352]
  409418:	tst	w0, #0x6
  40941c:	b.eq	40943c <print_color_bool@@Base+0x2c>  // b.none
  409420:	cbz	x8, 409440 <print_color_bool@@Base+0x30>
  409424:	cbz	x2, 409480 <print_color_bool@@Base+0x70>
  409428:	and	w9, w4, #0x1
  40942c:	mov	x0, x8
  409430:	mov	x1, x2
  409434:	mov	w2, w9
  409438:	b	40a164 <jsonw_bool_field@@Base>
  40943c:	cbnz	x8, 40947c <print_color_bool@@Base+0x6c>
  409440:	mov	w8, #0x5                   	// #5
  409444:	tst	w0, w8
  409448:	b.eq	40947c <print_color_bool@@Base+0x6c>  // b.none
  40944c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409450:	ldr	x8, [x8, #4016]
  409454:	adrp	x9, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409458:	add	x9, x9, #0xce0
  40945c:	tst	w4, #0x1
  409460:	ldr	x0, [x8]
  409464:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409468:	add	x8, x8, #0xce5
  40946c:	csel	x8, x9, x8, ne  // ne = any
  409470:	mov	x2, x3
  409474:	mov	x3, x8
  409478:	b	4097ec <color_fprintf@@Base>
  40947c:	ret
  409480:	and	w1, w4, #0x1
  409484:	mov	x0, x8
  409488:	b	40a06c <jsonw_bool@@Base>

000000000040948c <print_color_0xhex@@Base>:
  40948c:	sub	sp, sp, #0x60
  409490:	stp	x29, x30, [sp, #64]
  409494:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409498:	ldr	x8, [x8, #3352]
  40949c:	tst	w0, #0x6
  4094a0:	str	x19, [sp, #80]
  4094a4:	add	x29, sp, #0x40
  4094a8:	b.eq	4094e8 <print_color_0xhex@@Base+0x5c>  // b.none
  4094ac:	cbz	x8, 4094e8 <print_color_0xhex@@Base+0x5c>
  4094b0:	mov	x19, x2
  4094b4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4094b8:	add	x2, x2, #0xceb
  4094bc:	mov	x0, sp
  4094c0:	mov	w1, #0x40                  	// #64
  4094c4:	mov	x3, x4
  4094c8:	bl	404d00 <snprintf@plt>
  4094cc:	mov	x4, sp
  4094d0:	mov	w0, #0x2                   	// #2
  4094d4:	mov	w1, #0x6                   	// #6
  4094d8:	mov	x2, x19
  4094dc:	mov	x3, xzr
  4094e0:	bl	409398 <print_color_string@@Base>
  4094e4:	b	40951c <print_color_0xhex@@Base+0x90>
  4094e8:	mov	w9, #0x5                   	// #5
  4094ec:	tst	w0, w9
  4094f0:	b.eq	40951c <print_color_0xhex@@Base+0x90>  // b.none
  4094f4:	cbnz	x8, 40951c <print_color_0xhex@@Base+0x90>
  4094f8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  4094fc:	ldr	x8, [x8, #4016]
  409500:	ldr	x19, [sp, #80]
  409504:	ldp	x29, x30, [sp, #64]
  409508:	mov	x2, x3
  40950c:	ldr	x0, [x8]
  409510:	mov	x3, x4
  409514:	add	sp, sp, #0x60
  409518:	b	4097ec <color_fprintf@@Base>
  40951c:	ldr	x19, [sp, #80]
  409520:	ldp	x29, x30, [sp, #64]
  409524:	add	sp, sp, #0x60
  409528:	ret

000000000040952c <print_color_hex@@Base>:
  40952c:	sub	sp, sp, #0x60
  409530:	stp	x29, x30, [sp, #64]
  409534:	stp	x20, x19, [sp, #80]
  409538:	adrp	x20, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40953c:	ldr	x8, [x20, #3352]
  409540:	tst	w0, #0x6
  409544:	add	x29, sp, #0x40
  409548:	b.eq	409584 <print_color_hex@@Base+0x58>  // b.none
  40954c:	cbz	x8, 409584 <print_color_hex@@Base+0x58>
  409550:	mov	x19, x2
  409554:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409558:	add	x2, x2, #0xccf
  40955c:	mov	x0, sp
  409560:	mov	w1, #0x40                  	// #64
  409564:	mov	w3, w4
  409568:	bl	404d00 <snprintf@plt>
  40956c:	ldr	x0, [x20, #3352]
  409570:	cbz	x19, 4095b8 <print_color_hex@@Base+0x8c>
  409574:	mov	x2, sp
  409578:	mov	x1, x19
  40957c:	bl	40a138 <jsonw_string_field@@Base>
  409580:	b	4095c0 <print_color_hex@@Base+0x94>
  409584:	mov	w9, #0x5                   	// #5
  409588:	tst	w0, w9
  40958c:	b.eq	4095c0 <print_color_hex@@Base+0x94>  // b.none
  409590:	cbnz	x8, 4095c0 <print_color_hex@@Base+0x94>
  409594:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409598:	ldr	x8, [x8, #4016]
  40959c:	ldp	x20, x19, [sp, #80]
  4095a0:	ldp	x29, x30, [sp, #64]
  4095a4:	mov	x2, x3
  4095a8:	ldr	x0, [x8]
  4095ac:	mov	w3, w4
  4095b0:	add	sp, sp, #0x60
  4095b4:	b	4097ec <color_fprintf@@Base>
  4095b8:	mov	x1, sp
  4095bc:	bl	40a02c <jsonw_string@@Base>
  4095c0:	ldp	x20, x19, [sp, #80]
  4095c4:	ldp	x29, x30, [sp, #64]
  4095c8:	add	sp, sp, #0x60
  4095cc:	ret

00000000004095d0 <print_color_null@@Base>:
  4095d0:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4095d4:	ldr	x8, [x8, #3352]
  4095d8:	tst	w0, #0x6
  4095dc:	b.eq	4095f4 <print_color_null@@Base+0x24>  // b.none
  4095e0:	cbz	x8, 4095f8 <print_color_null@@Base+0x28>
  4095e4:	mov	x0, x8
  4095e8:	cbz	x2, 409620 <print_color_null@@Base+0x50>
  4095ec:	mov	x1, x2
  4095f0:	b	40a3bc <jsonw_null_field@@Base>
  4095f4:	cbnz	x8, 40961c <print_color_null@@Base+0x4c>
  4095f8:	mov	w8, #0x5                   	// #5
  4095fc:	tst	w0, w8
  409600:	b.eq	40961c <print_color_null@@Base+0x4c>  // b.none
  409604:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409608:	ldr	x8, [x8, #4016]
  40960c:	mov	x2, x3
  409610:	mov	x3, x4
  409614:	ldr	x0, [x8]
  409618:	b	4097ec <color_fprintf@@Base>
  40961c:	ret
  409620:	b	40a090 <jsonw_null@@Base>

0000000000409624 <print_nl@@Base>:
  409624:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409628:	ldr	x8, [x8, #3352]
  40962c:	cbz	x8, 409634 <print_nl@@Base+0x10>
  409630:	ret
  409634:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409638:	ldr	x8, [x8, #4048]
  40963c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409640:	add	x0, x0, #0x8e9
  409644:	ldr	x1, [x8]
  409648:	b	4050a0 <printf@plt>

000000000040964c <check_enable_color@@Base>:
  40964c:	stp	x29, x30, [sp, #-32]!
  409650:	str	x19, [sp, #16]
  409654:	mov	w19, wzr
  409658:	mov	x29, sp
  40965c:	cbz	w0, 4096e8 <check_enable_color@@Base+0x9c>
  409660:	cbnz	w1, 4096e8 <check_enable_color@@Base+0x9c>
  409664:	cmp	w0, #0x2
  409668:	b.eq	409684 <check_enable_color@@Base+0x38>  // b.none
  40966c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409670:	ldr	x8, [x8, #4016]
  409674:	ldr	x0, [x8]
  409678:	bl	404d10 <fileno@plt>
  40967c:	bl	404ff0 <isatty@plt>
  409680:	cbz	w0, 4096d4 <check_enable_color@@Base+0x88>
  409684:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409688:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40968c:	mov	w19, #0x1                   	// #1
  409690:	add	x0, x0, #0xd16
  409694:	strb	w19, [x8, #3360]
  409698:	bl	4050d0 <getenv@plt>
  40969c:	cbz	x0, 4096e8 <check_enable_color@@Base+0x9c>
  4096a0:	mov	w1, #0x3b                  	// #59
  4096a4:	bl	404e70 <strrchr@plt>
  4096a8:	cbz	x0, 4096e4 <check_enable_color@@Base+0x98>
  4096ac:	ldrb	w8, [x0, #1]
  4096b0:	sub	w9, w8, #0x30
  4096b4:	cmp	w9, #0x7
  4096b8:	b.cs	4096dc <check_enable_color@@Base+0x90>  // b.hs, b.nlast
  4096bc:	ldrb	w8, [x0, #2]
  4096c0:	mov	w19, #0x1                   	// #1
  4096c4:	cbnz	w8, 4096e8 <check_enable_color@@Base+0x9c>
  4096c8:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  4096cc:	strb	w19, [x8, #3364]
  4096d0:	b	4096e8 <check_enable_color@@Base+0x9c>
  4096d4:	mov	w19, wzr
  4096d8:	b	4096e8 <check_enable_color@@Base+0x9c>
  4096dc:	cmp	w8, #0x38
  4096e0:	b.eq	4096bc <check_enable_color@@Base+0x70>  // b.none
  4096e4:	mov	w19, #0x1                   	// #1
  4096e8:	mov	w0, w19
  4096ec:	ldr	x19, [sp, #16]
  4096f0:	ldp	x29, x30, [sp], #32
  4096f4:	ret

00000000004096f8 <matches_color@@Base>:
  4096f8:	stp	x29, x30, [sp, #-48]!
  4096fc:	str	x21, [sp, #16]
  409700:	stp	x20, x19, [sp, #32]
  409704:	mov	x29, sp
  409708:	cbz	x1, 40976c <matches_color@@Base+0x74>
  40970c:	mov	x19, x1
  409710:	mov	x20, x0
  409714:	bl	404c10 <strlen@plt>
  409718:	add	x9, x0, #0x10
  40971c:	mov	x8, sp
  409720:	and	x9, x9, #0xfffffffffffffff0
  409724:	sub	x21, x8, x9
  409728:	add	x2, x0, #0x1
  40972c:	mov	sp, x21
  409730:	mov	x0, x21
  409734:	mov	x1, x20
  409738:	bl	404be0 <memcpy@plt>
  40973c:	mov	w1, #0x3d                  	// #61
  409740:	mov	x0, x21
  409744:	bl	405040 <strchrnul@plt>
  409748:	ldrb	w8, [x0]
  40974c:	mov	x20, x0
  409750:	cbz	w8, 409758 <matches_color@@Base+0x60>
  409754:	strb	wzr, [x20], #1
  409758:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40975c:	add	x1, x1, #0xcfd
  409760:	mov	x0, x21
  409764:	bl	406b30 <matches@@Base>
  409768:	tbz	w0, #0, 409774 <matches_color@@Base+0x7c>
  40976c:	mov	w0, wzr
  409770:	b	4097cc <matches_color@@Base+0xd4>
  409774:	ldrb	w8, [x20]
  409778:	cbz	w8, 4097c0 <matches_color@@Base+0xc8>
  40977c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409780:	add	x1, x1, #0xd04
  409784:	mov	x0, x20
  409788:	bl	404ec0 <strcmp@plt>
  40978c:	cbz	w0, 4097c0 <matches_color@@Base+0xc8>
  409790:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409794:	add	x1, x1, #0xd0b
  409798:	mov	x0, x20
  40979c:	bl	404ec0 <strcmp@plt>
  4097a0:	cbz	w0, 4097e0 <matches_color@@Base+0xe8>
  4097a4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4097a8:	add	x1, x1, #0xd10
  4097ac:	mov	x0, x20
  4097b0:	bl	404ec0 <strcmp@plt>
  4097b4:	cbnz	w0, 40976c <matches_color@@Base+0x74>
  4097b8:	str	wzr, [x19]
  4097bc:	b	4097c8 <matches_color@@Base+0xd0>
  4097c0:	mov	w8, #0x2                   	// #2
  4097c4:	str	w8, [x19]
  4097c8:	mov	w0, #0x1                   	// #1
  4097cc:	mov	sp, x29
  4097d0:	ldp	x20, x19, [sp, #32]
  4097d4:	ldr	x21, [sp, #16]
  4097d8:	ldp	x29, x30, [sp], #48
  4097dc:	ret
  4097e0:	mov	w0, #0x1                   	// #1
  4097e4:	str	w0, [x19]
  4097e8:	b	4097cc <matches_color@@Base+0xd4>

00000000004097ec <color_fprintf@@Base>:
  4097ec:	sub	sp, sp, #0x130
  4097f0:	stp	x29, x30, [sp, #240]
  4097f4:	add	x29, sp, #0xf0
  4097f8:	mov	x8, #0xffffffffffffffd8    	// #-40
  4097fc:	mov	x9, sp
  409800:	sub	x10, x29, #0x68
  409804:	stp	x20, x19, [sp, #288]
  409808:	mov	x20, x2
  40980c:	mov	x19, x0
  409810:	movk	x8, #0xff80, lsl #32
  409814:	add	x11, x29, #0x40
  409818:	cmp	w1, #0x6
  40981c:	add	x9, x9, #0x80
  409820:	add	x10, x10, #0x28
  409824:	str	x28, [sp, #256]
  409828:	stp	x22, x21, [sp, #272]
  40982c:	stp	x3, x4, [x29, #-104]
  409830:	stp	x5, x6, [x29, #-88]
  409834:	stur	x7, [x29, #-72]
  409838:	stp	q1, q2, [sp, #16]
  40983c:	stp	q3, q4, [sp, #48]
  409840:	str	q0, [sp]
  409844:	stp	q5, q6, [sp, #80]
  409848:	str	q7, [sp, #112]
  40984c:	stp	x9, x8, [x29, #-16]
  409850:	stp	x11, x10, [x29, #-32]
  409854:	b.eq	4098e4 <color_fprintf@@Base+0xf8>  // b.none
  409858:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  40985c:	ldrb	w8, [x8, #3360]
  409860:	cbz	w8, 4098e4 <color_fprintf@@Base+0xf8>
  409864:	adrp	x8, 422000 <stderr@@GLIBC_2.17+0x3d30>
  409868:	ldrb	w8, [x8, #3364]
  40986c:	adrp	x9, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409870:	adrp	x10, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409874:	add	x9, x9, #0xda4
  409878:	add	x10, x10, #0xd88
  40987c:	cmp	w8, #0x0
  409880:	csel	x8, x10, x9, ne  // ne = any
  409884:	ldr	w8, [x8, w1, uxtw #2]
  409888:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40988c:	add	x9, x9, #0xd10
  409890:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409894:	ldr	x2, [x9, x8, lsl #3]
  409898:	add	x21, x21, #0x8e9
  40989c:	mov	x0, x19
  4098a0:	mov	x1, x21
  4098a4:	bl	405100 <fprintf@plt>
  4098a8:	ldp	q0, q1, [x29, #-32]
  4098ac:	mov	w22, w0
  4098b0:	sub	x2, x29, #0x40
  4098b4:	mov	x0, x19
  4098b8:	mov	x1, x20
  4098bc:	stp	q0, q1, [x29, #-64]
  4098c0:	bl	405090 <vfprintf@plt>
  4098c4:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4098c8:	add	w20, w0, w22
  4098cc:	add	x2, x2, #0xd82
  4098d0:	mov	x0, x19
  4098d4:	mov	x1, x21
  4098d8:	bl	405100 <fprintf@plt>
  4098dc:	add	w0, w20, w0
  4098e0:	b	4098fc <color_fprintf@@Base+0x110>
  4098e4:	ldp	q0, q1, [x29, #-32]
  4098e8:	sub	x2, x29, #0x40
  4098ec:	mov	x0, x19
  4098f0:	mov	x1, x20
  4098f4:	stp	q0, q1, [x29, #-64]
  4098f8:	bl	405090 <vfprintf@plt>
  4098fc:	ldp	x20, x19, [sp, #288]
  409900:	ldp	x22, x21, [sp, #272]
  409904:	ldr	x28, [sp, #256]
  409908:	ldp	x29, x30, [sp, #240]
  40990c:	add	sp, sp, #0x130
  409910:	ret

0000000000409914 <ifa_family_color@@Base>:
  409914:	and	w8, w0, #0xff
  409918:	mov	w9, #0x6                   	// #6
  40991c:	mov	w10, #0x3                   	// #3
  409920:	cmp	w8, #0xa
  409924:	csel	w9, w10, w9, eq  // eq = none
  409928:	cmp	w8, #0x2
  40992c:	csel	w0, w8, w9, eq  // eq = none
  409930:	ret

0000000000409934 <oper_state_color@@Base>:
  409934:	and	w8, w0, #0xff
  409938:	mov	w9, #0x5                   	// #5
  40993c:	cmp	w8, #0x2
  409940:	cinc	w9, w9, ne  // ne = any
  409944:	cmp	w8, #0x6
  409948:	mov	w8, #0x4                   	// #4
  40994c:	csel	w0, w8, w9, eq  // eq = none
  409950:	ret

0000000000409954 <mpls_ntop@@Base>:
  409954:	stp	x29, x30, [sp, #-80]!
  409958:	stp	x26, x25, [sp, #16]
  40995c:	stp	x24, x23, [sp, #32]
  409960:	stp	x22, x21, [sp, #48]
  409964:	stp	x20, x19, [sp, #64]
  409968:	mov	x29, sp
  40996c:	mov	x21, x3
  409970:	mov	x19, x2
  409974:	mov	x22, x1
  409978:	mov	w20, w0
  40997c:	bl	4050c0 <__errno_location@plt>
  409980:	cmp	w20, #0x1c
  409984:	mov	x20, x0
  409988:	b.ne	409a20 <mpls_ntop@@Base+0xcc>  // b.any
  40998c:	str	wzr, [x20]
  409990:	ldr	w8, [x22]
  409994:	adrp	x2, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409998:	add	x2, x2, #0xcd6
  40999c:	mov	x0, x19
  4099a0:	rev	w26, w8
  4099a4:	lsr	w3, w26, #12
  4099a8:	mov	x1, x21
  4099ac:	bl	404d00 <snprintf@plt>
  4099b0:	sxtw	x8, w0
  4099b4:	cmp	x8, x21
  4099b8:	b.cs	409a18 <mpls_ntop@@Base+0xc4>  // b.hs, b.nlast
  4099bc:	add	x24, x22, #0x4
  4099c0:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  4099c4:	add	x22, x22, #0xcd6
  4099c8:	mov	w25, #0x2f                  	// #47
  4099cc:	mov	x23, x19
  4099d0:	tbnz	w26, #8, 409a2c <mpls_ntop@@Base+0xd8>
  4099d4:	subs	x9, x21, x8
  4099d8:	add	x23, x23, x8
  4099dc:	b.eq	4099ec <mpls_ntop@@Base+0x98>  // b.none
  4099e0:	strb	w25, [x23], #1
  4099e4:	sub	x21, x9, #0x1
  4099e8:	b	4099f0 <mpls_ntop@@Base+0x9c>
  4099ec:	mov	x21, xzr
  4099f0:	ldr	w8, [x24], #4
  4099f4:	mov	x0, x23
  4099f8:	mov	x1, x21
  4099fc:	mov	x2, x22
  409a00:	rev	w26, w8
  409a04:	lsr	w3, w26, #12
  409a08:	bl	404d00 <snprintf@plt>
  409a0c:	cmp	x21, w0, sxtw
  409a10:	sxtw	x8, w0
  409a14:	b.hi	4099d0 <mpls_ntop@@Base+0x7c>  // b.pmore
  409a18:	mov	w8, #0xfffffff9            	// #-7
  409a1c:	b	409a24 <mpls_ntop@@Base+0xd0>
  409a20:	mov	w8, #0x61                  	// #97
  409a24:	mov	x19, xzr
  409a28:	str	w8, [x20]
  409a2c:	mov	x0, x19
  409a30:	ldp	x20, x19, [sp, #64]
  409a34:	ldp	x22, x21, [sp, #48]
  409a38:	ldp	x24, x23, [sp, #32]
  409a3c:	ldp	x26, x25, [sp, #16]
  409a40:	ldp	x29, x30, [sp], #80
  409a44:	ret

0000000000409a48 <mpls_pton@@Base>:
  409a48:	sub	sp, sp, #0x40
  409a4c:	stp	x29, x30, [sp, #16]
  409a50:	stp	x22, x21, [sp, #32]
  409a54:	stp	x20, x19, [sp, #48]
  409a58:	add	x29, sp, #0x10
  409a5c:	mov	x21, x3
  409a60:	mov	x19, x2
  409a64:	mov	x20, x1
  409a68:	mov	w22, w0
  409a6c:	bl	4050c0 <__errno_location@plt>
  409a70:	cmp	w22, #0x1c
  409a74:	b.ne	409b00 <mpls_pton@@Base+0xb8>  // b.any
  409a78:	lsr	x21, x21, #2
  409a7c:	str	wzr, [x0]
  409a80:	cbz	w21, 409ad8 <mpls_pton@@Base+0x90>
  409a84:	add	x1, sp, #0x8
  409a88:	mov	x0, x20
  409a8c:	mov	w2, wzr
  409a90:	bl	404c00 <strtoul@plt>
  409a94:	mov	x8, x0
  409a98:	lsr	x9, x0, #20
  409a9c:	mov	w0, wzr
  409aa0:	cbnz	x9, 409b0c <mpls_pton@@Base+0xc4>
  409aa4:	ldr	x9, [sp, #8]
  409aa8:	cmp	x9, x20
  409aac:	b.eq	409b0c <mpls_pton@@Base+0xc4>  // b.none
  409ab0:	lsl	w8, w8, #12
  409ab4:	rev	w8, w8
  409ab8:	str	w8, [x19]
  409abc:	ldrb	w10, [x9]
  409ac0:	cmp	w10, #0x2f
  409ac4:	b.ne	409b20 <mpls_pton@@Base+0xd8>  // b.any
  409ac8:	add	x20, x9, #0x1
  409acc:	subs	w21, w21, #0x1
  409ad0:	add	x19, x19, #0x4
  409ad4:	b.ne	409a84 <mpls_pton@@Base+0x3c>  // b.any
  409ad8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  409adc:	ldr	x8, [x8, #3992]
  409ae0:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409ae4:	add	x0, x0, #0xdc0
  409ae8:	mov	w1, #0x18                  	// #24
  409aec:	ldr	x3, [x8]
  409af0:	mov	w2, #0x1                   	// #1
  409af4:	bl	404f90 <fwrite@plt>
  409af8:	mov	w0, wzr
  409afc:	b	409b0c <mpls_pton@@Base+0xc4>
  409b00:	mov	w8, #0x61                  	// #97
  409b04:	str	w8, [x0]
  409b08:	mov	w0, #0xffffffff            	// #-1
  409b0c:	ldp	x20, x19, [sp, #48]
  409b10:	ldp	x22, x21, [sp, #32]
  409b14:	ldp	x29, x30, [sp, #16]
  409b18:	add	sp, sp, #0x40
  409b1c:	ret
  409b20:	cbnz	w10, 409af8 <mpls_pton@@Base+0xb0>
  409b24:	orr	w8, w8, #0x10000
  409b28:	str	w8, [x19]
  409b2c:	mov	w0, #0x1                   	// #1
  409b30:	b	409b0c <mpls_pton@@Base+0xc4>

0000000000409b34 <jsonw_new@@Base>:
  409b34:	stp	x29, x30, [sp, #-32]!
  409b38:	str	x19, [sp, #16]
  409b3c:	mov	x19, x0
  409b40:	mov	w0, #0x10                  	// #16
  409b44:	mov	x29, sp
  409b48:	bl	404d60 <malloc@plt>
  409b4c:	cbz	x0, 409b5c <jsonw_new@@Base+0x28>
  409b50:	str	x19, [x0]
  409b54:	str	wzr, [x0, #8]
  409b58:	strh	wzr, [x0, #12]
  409b5c:	ldr	x19, [sp, #16]
  409b60:	ldp	x29, x30, [sp], #32
  409b64:	ret

0000000000409b68 <jsonw_destroy@@Base>:
  409b68:	stp	x29, x30, [sp, #-32]!
  409b6c:	stp	x20, x19, [sp, #16]
  409b70:	ldr	x20, [x0]
  409b74:	mov	x29, sp
  409b78:	ldr	w8, [x20, #8]
  409b7c:	cbnz	w8, 409bb4 <jsonw_destroy@@Base+0x4c>
  409b80:	ldr	x1, [x20]
  409b84:	mov	x19, x0
  409b88:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  409b8c:	add	x0, x0, #0x21c
  409b90:	bl	404c20 <fputs@plt>
  409b94:	ldr	x0, [x20]
  409b98:	bl	404fb0 <fflush@plt>
  409b9c:	mov	x0, x20
  409ba0:	bl	404f30 <free@plt>
  409ba4:	str	xzr, [x19]
  409ba8:	ldp	x20, x19, [sp, #16]
  409bac:	ldp	x29, x30, [sp], #32
  409bb0:	ret
  409bb4:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409bb8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409bbc:	adrp	x3, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409bc0:	add	x0, x0, #0xde7
  409bc4:	add	x1, x1, #0xdf8
  409bc8:	add	x3, x3, #0xe06
  409bcc:	mov	w2, #0x6e                  	// #110
  409bd0:	bl	4050b0 <__assert_fail@plt>

0000000000409bd4 <jsonw_pretty@@Base>:
  409bd4:	and	w8, w1, #0x1
  409bd8:	strb	w8, [x0, #12]
  409bdc:	ret

0000000000409be0 <jsonw_name@@Base>:
  409be0:	stp	x29, x30, [sp, #-32]!
  409be4:	stp	x20, x19, [sp, #16]
  409be8:	mov	x19, x0
  409bec:	ldrb	w0, [x0, #13]
  409bf0:	mov	x20, x1
  409bf4:	mov	x29, sp
  409bf8:	cbz	w0, 409c04 <jsonw_name@@Base+0x24>
  409bfc:	ldr	x1, [x19]
  409c00:	bl	404ce0 <putc@plt>
  409c04:	mov	w8, #0x2c                  	// #44
  409c08:	mov	x0, x19
  409c0c:	strb	w8, [x19, #13]
  409c10:	bl	409c58 <jsonw_name@@Base+0x78>
  409c14:	mov	x0, x19
  409c18:	mov	x1, x20
  409c1c:	strb	wzr, [x19, #13]
  409c20:	bl	409cc0 <jsonw_name@@Base+0xe0>
  409c24:	ldr	x1, [x19]
  409c28:	mov	w0, #0x3a                  	// #58
  409c2c:	bl	404ce0 <putc@plt>
  409c30:	ldrb	w8, [x19, #12]
  409c34:	cbz	w8, 409c4c <jsonw_name@@Base+0x6c>
  409c38:	ldr	x1, [x19]
  409c3c:	ldp	x20, x19, [sp, #16]
  409c40:	mov	w0, #0x20                  	// #32
  409c44:	ldp	x29, x30, [sp], #32
  409c48:	b	404ce0 <putc@plt>
  409c4c:	ldp	x20, x19, [sp, #16]
  409c50:	ldp	x29, x30, [sp], #32
  409c54:	ret
  409c58:	stp	x29, x30, [sp, #-48]!
  409c5c:	stp	x20, x19, [sp, #32]
  409c60:	ldrb	w8, [x0, #12]
  409c64:	str	x21, [sp, #16]
  409c68:	mov	x29, sp
  409c6c:	cbz	w8, 409cb0 <jsonw_name@@Base+0xd0>
  409c70:	ldr	x1, [x0]
  409c74:	mov	x19, x0
  409c78:	mov	w0, #0xa                   	// #10
  409c7c:	bl	404ce0 <putc@plt>
  409c80:	ldr	w8, [x19, #8]
  409c84:	cbz	w8, 409cb0 <jsonw_name@@Base+0xd0>
  409c88:	adrp	x20, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409c8c:	mov	w21, wzr
  409c90:	add	x20, x20, #0xe4d
  409c94:	ldr	x1, [x19]
  409c98:	mov	x0, x20
  409c9c:	bl	404c20 <fputs@plt>
  409ca0:	ldr	w8, [x19, #8]
  409ca4:	add	w21, w21, #0x1
  409ca8:	cmp	w21, w8
  409cac:	b.cc	409c94 <jsonw_name@@Base+0xb4>  // b.lo, b.ul, b.last
  409cb0:	ldp	x20, x19, [sp, #32]
  409cb4:	ldr	x21, [sp, #16]
  409cb8:	ldp	x29, x30, [sp], #48
  409cbc:	ret
  409cc0:	stp	x29, x30, [sp, #-96]!
  409cc4:	stp	x28, x27, [sp, #16]
  409cc8:	stp	x26, x25, [sp, #32]
  409ccc:	stp	x24, x23, [sp, #48]
  409cd0:	stp	x22, x21, [sp, #64]
  409cd4:	stp	x20, x19, [sp, #80]
  409cd8:	ldr	x8, [x0]
  409cdc:	mov	x19, x0
  409ce0:	mov	x20, x1
  409ce4:	mov	w0, #0x22                  	// #34
  409ce8:	mov	x1, x8
  409cec:	mov	x29, sp
  409cf0:	bl	404ce0 <putc@plt>
  409cf4:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409cf8:	adrp	x22, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409cfc:	adrp	x23, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d00:	adrp	x24, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d04:	adrp	x25, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d08:	adrp	x26, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d0c:	adrp	x27, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d10:	adrp	x28, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d14:	add	x21, x21, #0xdd9
  409d18:	add	x22, x22, #0xe52
  409d1c:	add	x23, x23, #0xe55
  409d20:	add	x24, x24, #0xe5b
  409d24:	add	x25, x25, #0xe58
  409d28:	add	x26, x26, #0xe64
  409d2c:	add	x27, x27, #0xe67
  409d30:	add	x28, x28, #0xe61
  409d34:	ldrb	w0, [x20]
  409d38:	cmp	w0, #0x21
  409d3c:	b.gt	409d68 <jsonw_name@@Base+0x188>
  409d40:	cmp	w0, #0xd
  409d44:	b.hi	409ddc <jsonw_name@@Base+0x1fc>  // b.pmore
  409d48:	adr	x8, 409d58 <jsonw_name@@Base+0x178>
  409d4c:	ldrb	w9, [x21, x0]
  409d50:	add	x8, x8, x9, lsl #2
  409d54:	br	x8
  409d58:	ldr	x1, [x19]
  409d5c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409d60:	add	x0, x0, #0xe5e
  409d64:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409d68:	cmp	w0, #0x22
  409d6c:	b.eq	409dbc <jsonw_name@@Base+0x1dc>  // b.none
  409d70:	cmp	w0, #0x27
  409d74:	b.eq	409dc8 <jsonw_name@@Base+0x1e8>  // b.none
  409d78:	cmp	w0, #0x5c
  409d7c:	b.ne	409ddc <jsonw_name@@Base+0x1fc>  // b.any
  409d80:	ldr	x1, [x19]
  409d84:	mov	x0, x28
  409d88:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409d8c:	ldr	x1, [x19]
  409d90:	mov	x0, x22
  409d94:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409d98:	ldr	x1, [x19]
  409d9c:	mov	x0, x23
  409da0:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409da4:	ldr	x1, [x19]
  409da8:	mov	x0, x24
  409dac:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409db0:	ldr	x1, [x19]
  409db4:	mov	x0, x25
  409db8:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409dbc:	ldr	x1, [x19]
  409dc0:	mov	x0, x26
  409dc4:	b	409dd0 <jsonw_name@@Base+0x1f0>
  409dc8:	ldr	x1, [x19]
  409dcc:	mov	x0, x27
  409dd0:	bl	404c20 <fputs@plt>
  409dd4:	add	x20, x20, #0x1
  409dd8:	b	409d34 <jsonw_name@@Base+0x154>
  409ddc:	ldr	x1, [x19]
  409de0:	bl	404ce0 <putc@plt>
  409de4:	b	409dd4 <jsonw_name@@Base+0x1f4>
  409de8:	ldr	x1, [x19]
  409dec:	ldp	x20, x19, [sp, #80]
  409df0:	ldp	x22, x21, [sp, #64]
  409df4:	ldp	x24, x23, [sp, #48]
  409df8:	ldp	x26, x25, [sp, #32]
  409dfc:	ldp	x28, x27, [sp, #16]
  409e00:	mov	w0, #0x22                  	// #34
  409e04:	ldp	x29, x30, [sp], #96
  409e08:	b	404ce0 <putc@plt>

0000000000409e0c <jsonw_printf@@Base>:
  409e0c:	sub	sp, sp, #0x120
  409e10:	stp	x29, x30, [sp, #240]
  409e14:	add	x29, sp, #0xf0
  409e18:	mov	x8, #0xffffffffffffffd0    	// #-48
  409e1c:	mov	x9, sp
  409e20:	sub	x10, x29, #0x70
  409e24:	movk	x8, #0xff80, lsl #32
  409e28:	add	x11, x29, #0x30
  409e2c:	add	x9, x9, #0x80
  409e30:	add	x10, x10, #0x30
  409e34:	stp	x20, x19, [sp, #272]
  409e38:	stp	x2, x3, [x29, #-112]
  409e3c:	stp	x4, x5, [x29, #-96]
  409e40:	stp	x6, x7, [x29, #-80]
  409e44:	stp	q1, q2, [sp, #16]
  409e48:	stp	q3, q4, [sp, #48]
  409e4c:	str	q0, [sp]
  409e50:	stp	q5, q6, [sp, #80]
  409e54:	str	q7, [sp, #112]
  409e58:	stp	x9, x8, [x29, #-16]
  409e5c:	stp	x11, x10, [x29, #-32]
  409e60:	mov	x19, x0
  409e64:	ldrb	w0, [x0, #13]
  409e68:	mov	x20, x1
  409e6c:	str	x28, [sp, #256]
  409e70:	cbz	w0, 409e7c <jsonw_printf@@Base+0x70>
  409e74:	ldr	x1, [x19]
  409e78:	bl	404ce0 <putc@plt>
  409e7c:	mov	w8, #0x2c                  	// #44
  409e80:	strb	w8, [x19, #13]
  409e84:	ldp	q0, q1, [x29, #-32]
  409e88:	ldr	x0, [x19]
  409e8c:	sub	x2, x29, #0x40
  409e90:	mov	x1, x20
  409e94:	stp	q0, q1, [x29, #-64]
  409e98:	bl	405090 <vfprintf@plt>
  409e9c:	ldp	x20, x19, [sp, #272]
  409ea0:	ldr	x28, [sp, #256]
  409ea4:	ldp	x29, x30, [sp, #240]
  409ea8:	add	sp, sp, #0x120
  409eac:	ret

0000000000409eb0 <jsonw_start_object@@Base>:
  409eb0:	stp	x29, x30, [sp, #-32]!
  409eb4:	str	x19, [sp, #16]
  409eb8:	mov	x19, x0
  409ebc:	ldrb	w0, [x0, #13]
  409ec0:	mov	x29, sp
  409ec4:	cbz	w0, 409ed0 <jsonw_start_object@@Base+0x20>
  409ec8:	ldr	x1, [x19]
  409ecc:	bl	404ce0 <putc@plt>
  409ed0:	ldr	x1, [x19]
  409ed4:	mov	w8, #0x2c                  	// #44
  409ed8:	mov	w0, #0x7b                  	// #123
  409edc:	strb	w8, [x19, #13]
  409ee0:	bl	404ce0 <putc@plt>
  409ee4:	ldr	w8, [x19, #8]
  409ee8:	strb	wzr, [x19, #13]
  409eec:	add	w8, w8, #0x1
  409ef0:	str	w8, [x19, #8]
  409ef4:	ldr	x19, [sp, #16]
  409ef8:	ldp	x29, x30, [sp], #32
  409efc:	ret

0000000000409f00 <jsonw_end_object@@Base>:
  409f00:	mov	w1, #0x7d                  	// #125
  409f04:	b	409f08 <jsonw_end_object@@Base+0x8>
  409f08:	stp	x29, x30, [sp, #-32]!
  409f0c:	stp	x20, x19, [sp, #16]
  409f10:	ldr	w8, [x0, #8]
  409f14:	mov	x29, sp
  409f18:	cbz	w8, 409f5c <jsonw_end_object@@Base+0x5c>
  409f1c:	ldrb	w9, [x0, #13]
  409f20:	mov	x19, x0
  409f24:	mov	w20, w1
  409f28:	sub	w8, w8, #0x1
  409f2c:	str	w8, [x0, #8]
  409f30:	cbz	w9, 409f3c <jsonw_end_object@@Base+0x3c>
  409f34:	mov	x0, x19
  409f38:	bl	409c58 <jsonw_name@@Base+0x78>
  409f3c:	ldr	x1, [x19]
  409f40:	mov	w0, w20
  409f44:	bl	404ce0 <putc@plt>
  409f48:	mov	w8, #0x2c                  	// #44
  409f4c:	strb	w8, [x19, #13]
  409f50:	ldp	x20, x19, [sp, #16]
  409f54:	ldp	x29, x30, [sp], #32
  409f58:	ret
  409f5c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409f60:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409f64:	adrp	x3, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  409f68:	add	x0, x0, #0xe6a
  409f6c:	add	x1, x1, #0xdf8
  409f70:	add	x3, x3, #0xe7a
  409f74:	mov	w2, #0x85                  	// #133
  409f78:	bl	4050b0 <__assert_fail@plt>

0000000000409f7c <jsonw_start_array@@Base>:
  409f7c:	stp	x29, x30, [sp, #-32]!
  409f80:	str	x19, [sp, #16]
  409f84:	mov	x19, x0
  409f88:	ldrb	w0, [x0, #13]
  409f8c:	mov	x29, sp
  409f90:	cbz	w0, 409f9c <jsonw_start_array@@Base+0x20>
  409f94:	ldr	x1, [x19]
  409f98:	bl	404ce0 <putc@plt>
  409f9c:	ldr	x1, [x19]
  409fa0:	mov	w8, #0x2c                  	// #44
  409fa4:	mov	w0, #0x5b                  	// #91
  409fa8:	strb	w8, [x19, #13]
  409fac:	bl	404ce0 <putc@plt>
  409fb0:	ldr	w8, [x19, #8]
  409fb4:	ldrb	w9, [x19, #12]
  409fb8:	strb	wzr, [x19, #13]
  409fbc:	add	w8, w8, #0x1
  409fc0:	str	w8, [x19, #8]
  409fc4:	cbz	w9, 409fdc <jsonw_start_array@@Base+0x60>
  409fc8:	ldr	x1, [x19]
  409fcc:	ldr	x19, [sp, #16]
  409fd0:	mov	w0, #0x20                  	// #32
  409fd4:	ldp	x29, x30, [sp], #32
  409fd8:	b	404ce0 <putc@plt>
  409fdc:	ldr	x19, [sp, #16]
  409fe0:	ldp	x29, x30, [sp], #32
  409fe4:	ret

0000000000409fe8 <jsonw_end_array@@Base>:
  409fe8:	stp	x29, x30, [sp, #-32]!
  409fec:	ldrb	w8, [x0, #12]
  409ff0:	str	x19, [sp, #16]
  409ff4:	mov	x19, x0
  409ff8:	mov	x29, sp
  409ffc:	cbz	w8, 40a014 <jsonw_end_array@@Base+0x2c>
  40a000:	ldrb	w8, [x19, #13]
  40a004:	cbz	w8, 40a014 <jsonw_end_array@@Base+0x2c>
  40a008:	ldr	x1, [x19]
  40a00c:	mov	w0, #0x20                  	// #32
  40a010:	bl	404ce0 <putc@plt>
  40a014:	strb	wzr, [x19, #13]
  40a018:	mov	x0, x19
  40a01c:	ldr	x19, [sp, #16]
  40a020:	mov	w1, #0x5d                  	// #93
  40a024:	ldp	x29, x30, [sp], #32
  40a028:	b	409f08 <jsonw_end_object@@Base+0x8>

000000000040a02c <jsonw_string@@Base>:
  40a02c:	stp	x29, x30, [sp, #-32]!
  40a030:	stp	x20, x19, [sp, #16]
  40a034:	mov	x19, x0
  40a038:	ldrb	w0, [x0, #13]
  40a03c:	mov	x20, x1
  40a040:	mov	x29, sp
  40a044:	cbz	w0, 40a050 <jsonw_string@@Base+0x24>
  40a048:	ldr	x1, [x19]
  40a04c:	bl	404ce0 <putc@plt>
  40a050:	mov	w8, #0x2c                  	// #44
  40a054:	strb	w8, [x19, #13]
  40a058:	mov	x0, x19
  40a05c:	mov	x1, x20
  40a060:	ldp	x20, x19, [sp, #16]
  40a064:	ldp	x29, x30, [sp], #32
  40a068:	b	409cc0 <jsonw_name@@Base+0xe0>

000000000040a06c <jsonw_bool@@Base>:
  40a06c:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a070:	adrp	x9, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a074:	add	x8, x8, #0xce5
  40a078:	add	x9, x9, #0xce0
  40a07c:	tst	w1, #0x1
  40a080:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a084:	csel	x2, x9, x8, ne  // ne = any
  40a088:	add	x1, x1, #0x8e9
  40a08c:	b	409e0c <jsonw_printf@@Base>

000000000040a090 <jsonw_null@@Base>:
  40a090:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a094:	add	x1, x1, #0xe2b
  40a098:	b	409e0c <jsonw_printf@@Base>

000000000040a09c <jsonw_float@@Base>:
  40a09c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0a0:	add	x1, x1, #0xe30
  40a0a4:	b	409e0c <jsonw_printf@@Base>

000000000040a0a8 <jsonw_hhu@@Base>:
  40a0a8:	and	w2, w1, #0xff
  40a0ac:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0b0:	add	x1, x1, #0xe33
  40a0b4:	b	409e0c <jsonw_printf@@Base>

000000000040a0b8 <jsonw_hu@@Base>:
  40a0b8:	and	w2, w1, #0xffff
  40a0bc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0c0:	add	x1, x1, #0xe38
  40a0c4:	b	409e0c <jsonw_printf@@Base>

000000000040a0c8 <jsonw_uint@@Base>:
  40a0c8:	mov	w2, w1
  40a0cc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0d0:	add	x1, x1, #0xcd6
  40a0d4:	b	409e0c <jsonw_printf@@Base>

000000000040a0d8 <jsonw_u64@@Base>:
  40a0d8:	mov	x2, x1
  40a0dc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0e0:	add	x1, x1, #0xe3c
  40a0e4:	b	409e0c <jsonw_printf@@Base>

000000000040a0e8 <jsonw_xint@@Base>:
  40a0e8:	mov	x2, x1
  40a0ec:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a0f0:	add	x1, x1, #0xe40
  40a0f4:	b	409e0c <jsonw_printf@@Base>

000000000040a0f8 <jsonw_luint@@Base>:
  40a0f8:	mov	x2, x1
  40a0fc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a100:	add	x1, x1, #0xe3c
  40a104:	b	409e0c <jsonw_printf@@Base>

000000000040a108 <jsonw_lluint@@Base>:
  40a108:	mov	x2, x1
  40a10c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a110:	add	x1, x1, #0xe44
  40a114:	b	409e0c <jsonw_printf@@Base>

000000000040a118 <jsonw_int@@Base>:
  40a118:	mov	w2, w1
  40a11c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a120:	add	x1, x1, #0xc4d
  40a124:	b	409e0c <jsonw_printf@@Base>

000000000040a128 <jsonw_s64@@Base>:
  40a128:	mov	x2, x1
  40a12c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a130:	add	x1, x1, #0xe49
  40a134:	b	409e0c <jsonw_printf@@Base>

000000000040a138 <jsonw_string_field@@Base>:
  40a138:	stp	x29, x30, [sp, #-32]!
  40a13c:	stp	x20, x19, [sp, #16]
  40a140:	mov	x29, sp
  40a144:	mov	x19, x2
  40a148:	mov	x20, x0
  40a14c:	bl	409be0 <jsonw_name@@Base>
  40a150:	mov	x0, x20
  40a154:	mov	x1, x19
  40a158:	ldp	x20, x19, [sp, #16]
  40a15c:	ldp	x29, x30, [sp], #32
  40a160:	b	40a02c <jsonw_string@@Base>

000000000040a164 <jsonw_bool_field@@Base>:
  40a164:	stp	x29, x30, [sp, #-32]!
  40a168:	stp	x20, x19, [sp, #16]
  40a16c:	mov	x29, sp
  40a170:	mov	w19, w2
  40a174:	mov	x20, x0
  40a178:	bl	409be0 <jsonw_name@@Base>
  40a17c:	tst	w19, #0x1
  40a180:	mov	x0, x20
  40a184:	ldp	x20, x19, [sp, #16]
  40a188:	adrp	x8, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a18c:	adrp	x9, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a190:	add	x8, x8, #0xce5
  40a194:	add	x9, x9, #0xce0
  40a198:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a19c:	csel	x2, x9, x8, ne  // ne = any
  40a1a0:	add	x1, x1, #0x8e9
  40a1a4:	ldp	x29, x30, [sp], #32
  40a1a8:	b	409e0c <jsonw_printf@@Base>

000000000040a1ac <jsonw_float_field@@Base>:
  40a1ac:	str	d8, [sp, #-32]!
  40a1b0:	stp	x29, x30, [sp, #8]
  40a1b4:	str	x19, [sp, #24]
  40a1b8:	mov	x29, sp
  40a1bc:	mov	v8.16b, v0.16b
  40a1c0:	mov	x19, x0
  40a1c4:	bl	409be0 <jsonw_name@@Base>
  40a1c8:	mov	x0, x19
  40a1cc:	ldr	x19, [sp, #24]
  40a1d0:	ldp	x29, x30, [sp, #8]
  40a1d4:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a1d8:	add	x1, x1, #0xe30
  40a1dc:	mov	v0.16b, v8.16b
  40a1e0:	ldr	d8, [sp], #32
  40a1e4:	b	409e0c <jsonw_printf@@Base>

000000000040a1e8 <jsonw_uint_field@@Base>:
  40a1e8:	stp	x29, x30, [sp, #-32]!
  40a1ec:	stp	x20, x19, [sp, #16]
  40a1f0:	mov	x29, sp
  40a1f4:	mov	w19, w2
  40a1f8:	mov	x20, x0
  40a1fc:	bl	409be0 <jsonw_name@@Base>
  40a200:	mov	x0, x20
  40a204:	mov	w2, w19
  40a208:	ldp	x20, x19, [sp, #16]
  40a20c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a210:	add	x1, x1, #0xcd6
  40a214:	ldp	x29, x30, [sp], #32
  40a218:	b	409e0c <jsonw_printf@@Base>

000000000040a21c <jsonw_u64_field@@Base>:
  40a21c:	stp	x29, x30, [sp, #-32]!
  40a220:	stp	x20, x19, [sp, #16]
  40a224:	mov	x29, sp
  40a228:	mov	x19, x2
  40a22c:	mov	x20, x0
  40a230:	bl	409be0 <jsonw_name@@Base>
  40a234:	mov	x0, x20
  40a238:	mov	x2, x19
  40a23c:	ldp	x20, x19, [sp, #16]
  40a240:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a244:	add	x1, x1, #0xe3c
  40a248:	ldp	x29, x30, [sp], #32
  40a24c:	b	409e0c <jsonw_printf@@Base>

000000000040a250 <jsonw_xint_field@@Base>:
  40a250:	stp	x29, x30, [sp, #-32]!
  40a254:	stp	x20, x19, [sp, #16]
  40a258:	mov	x29, sp
  40a25c:	mov	x19, x2
  40a260:	mov	x20, x0
  40a264:	bl	409be0 <jsonw_name@@Base>
  40a268:	mov	x0, x20
  40a26c:	mov	x2, x19
  40a270:	ldp	x20, x19, [sp, #16]
  40a274:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a278:	add	x1, x1, #0xe40
  40a27c:	ldp	x29, x30, [sp], #32
  40a280:	b	409e0c <jsonw_printf@@Base>

000000000040a284 <jsonw_hhu_field@@Base>:
  40a284:	stp	x29, x30, [sp, #-32]!
  40a288:	stp	x20, x19, [sp, #16]
  40a28c:	mov	x29, sp
  40a290:	mov	w19, w2
  40a294:	mov	x20, x0
  40a298:	bl	409be0 <jsonw_name@@Base>
  40a29c:	and	w2, w19, #0xff
  40a2a0:	mov	x0, x20
  40a2a4:	ldp	x20, x19, [sp, #16]
  40a2a8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a2ac:	add	x1, x1, #0xe33
  40a2b0:	ldp	x29, x30, [sp], #32
  40a2b4:	b	409e0c <jsonw_printf@@Base>

000000000040a2b8 <jsonw_hu_field@@Base>:
  40a2b8:	stp	x29, x30, [sp, #-32]!
  40a2bc:	stp	x20, x19, [sp, #16]
  40a2c0:	mov	x29, sp
  40a2c4:	mov	w19, w2
  40a2c8:	mov	x20, x0
  40a2cc:	bl	409be0 <jsonw_name@@Base>
  40a2d0:	and	w2, w19, #0xffff
  40a2d4:	mov	x0, x20
  40a2d8:	ldp	x20, x19, [sp, #16]
  40a2dc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a2e0:	add	x1, x1, #0xe38
  40a2e4:	ldp	x29, x30, [sp], #32
  40a2e8:	b	409e0c <jsonw_printf@@Base>

000000000040a2ec <jsonw_luint_field@@Base>:
  40a2ec:	stp	x29, x30, [sp, #-32]!
  40a2f0:	stp	x20, x19, [sp, #16]
  40a2f4:	mov	x29, sp
  40a2f8:	mov	x19, x2
  40a2fc:	mov	x20, x0
  40a300:	bl	409be0 <jsonw_name@@Base>
  40a304:	mov	x0, x20
  40a308:	mov	x2, x19
  40a30c:	ldp	x20, x19, [sp, #16]
  40a310:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a314:	add	x1, x1, #0xe3c
  40a318:	ldp	x29, x30, [sp], #32
  40a31c:	b	409e0c <jsonw_printf@@Base>

000000000040a320 <jsonw_lluint_field@@Base>:
  40a320:	stp	x29, x30, [sp, #-32]!
  40a324:	stp	x20, x19, [sp, #16]
  40a328:	mov	x29, sp
  40a32c:	mov	x19, x2
  40a330:	mov	x20, x0
  40a334:	bl	409be0 <jsonw_name@@Base>
  40a338:	mov	x0, x20
  40a33c:	mov	x2, x19
  40a340:	ldp	x20, x19, [sp, #16]
  40a344:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a348:	add	x1, x1, #0xe44
  40a34c:	ldp	x29, x30, [sp], #32
  40a350:	b	409e0c <jsonw_printf@@Base>

000000000040a354 <jsonw_int_field@@Base>:
  40a354:	stp	x29, x30, [sp, #-32]!
  40a358:	stp	x20, x19, [sp, #16]
  40a35c:	mov	x29, sp
  40a360:	mov	w19, w2
  40a364:	mov	x20, x0
  40a368:	bl	409be0 <jsonw_name@@Base>
  40a36c:	mov	x0, x20
  40a370:	mov	w2, w19
  40a374:	ldp	x20, x19, [sp, #16]
  40a378:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a37c:	add	x1, x1, #0xc4d
  40a380:	ldp	x29, x30, [sp], #32
  40a384:	b	409e0c <jsonw_printf@@Base>

000000000040a388 <jsonw_s64_field@@Base>:
  40a388:	stp	x29, x30, [sp, #-32]!
  40a38c:	stp	x20, x19, [sp, #16]
  40a390:	mov	x29, sp
  40a394:	mov	x19, x2
  40a398:	mov	x20, x0
  40a39c:	bl	409be0 <jsonw_name@@Base>
  40a3a0:	mov	x0, x20
  40a3a4:	mov	x2, x19
  40a3a8:	ldp	x20, x19, [sp, #16]
  40a3ac:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a3b0:	add	x1, x1, #0xe49
  40a3b4:	ldp	x29, x30, [sp], #32
  40a3b8:	b	409e0c <jsonw_printf@@Base>

000000000040a3bc <jsonw_null_field@@Base>:
  40a3bc:	stp	x29, x30, [sp, #-32]!
  40a3c0:	str	x19, [sp, #16]
  40a3c4:	mov	x29, sp
  40a3c8:	mov	x19, x0
  40a3cc:	bl	409be0 <jsonw_name@@Base>
  40a3d0:	mov	x0, x19
  40a3d4:	ldr	x19, [sp, #16]
  40a3d8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a3dc:	add	x1, x1, #0xe2b
  40a3e0:	ldp	x29, x30, [sp], #32
  40a3e4:	b	409e0c <jsonw_printf@@Base>

000000000040a3e8 <nl_dump_ext_ack@@Base>:
  40a3e8:	mov	w0, wzr
  40a3ec:	ret

000000000040a3f0 <nl_dump_ext_ack_done@@Base>:
  40a3f0:	mov	w0, wzr
  40a3f4:	ret

000000000040a3f8 <rtnl_set_strict_dump@@Base>:
  40a3f8:	stp	x29, x30, [sp, #-32]!
  40a3fc:	mov	x29, sp
  40a400:	mov	w8, #0x1                   	// #1
  40a404:	str	w8, [x29, #28]
  40a408:	str	x19, [sp, #16]
  40a40c:	mov	x19, x0
  40a410:	ldr	w0, [x0]
  40a414:	add	x3, x29, #0x1c
  40a418:	mov	w1, #0x10e                 	// #270
  40a41c:	mov	w2, #0xc                   	// #12
  40a420:	mov	w4, #0x4                   	// #4
  40a424:	bl	404d70 <setsockopt@plt>
  40a428:	tbnz	w0, #31, 40a438 <rtnl_set_strict_dump@@Base+0x40>
  40a42c:	ldr	w8, [x19, #48]
  40a430:	orr	w8, w8, #0x4
  40a434:	str	w8, [x19, #48]
  40a438:	ldr	x19, [sp, #16]
  40a43c:	ldp	x29, x30, [sp], #32
  40a440:	ret

000000000040a444 <rtnl_add_nl_group@@Base>:
  40a444:	sub	sp, sp, #0x20
  40a448:	stp	x29, x30, [sp, #16]
  40a44c:	add	x29, sp, #0x10
  40a450:	stur	w1, [x29, #-4]
  40a454:	ldr	w0, [x0]
  40a458:	sub	x3, x29, #0x4
  40a45c:	mov	w1, #0x10e                 	// #270
  40a460:	mov	w2, #0x1                   	// #1
  40a464:	mov	w4, #0x4                   	// #4
  40a468:	bl	404d70 <setsockopt@plt>
  40a46c:	ldp	x29, x30, [sp, #16]
  40a470:	add	sp, sp, #0x20
  40a474:	ret

000000000040a478 <rtnl_close@@Base>:
  40a478:	stp	x29, x30, [sp, #-32]!
  40a47c:	str	x19, [sp, #16]
  40a480:	mov	x19, x0
  40a484:	ldr	w0, [x0]
  40a488:	mov	x29, sp
  40a48c:	tbnz	w0, #31, 40a49c <rtnl_close@@Base+0x24>
  40a490:	bl	404e60 <close@plt>
  40a494:	mov	w8, #0xffffffff            	// #-1
  40a498:	str	w8, [x19]
  40a49c:	ldr	x19, [sp, #16]
  40a4a0:	ldp	x29, x30, [sp], #32
  40a4a4:	ret

000000000040a4a8 <rtnl_open_byproto@@Base>:
  40a4a8:	sub	sp, sp, #0x40
  40a4ac:	stp	x29, x30, [sp, #16]
  40a4b0:	stp	x20, x19, [sp, #48]
  40a4b4:	add	x29, sp, #0x10
  40a4b8:	mov	w20, w1
  40a4bc:	mov	w8, #0x8000                	// #32768
  40a4c0:	mov	w9, #0x1                   	// #1
  40a4c4:	movi	v0.2d, #0x0
  40a4c8:	mov	w1, #0x3                   	// #3
  40a4cc:	str	x21, [sp, #32]
  40a4d0:	mov	x19, x0
  40a4d4:	str	w8, [x29, #24]
  40a4d8:	stur	w9, [x29, #-4]
  40a4dc:	stp	q0, q0, [x0, #16]
  40a4e0:	str	xzr, [x0, #48]
  40a4e4:	str	q0, [x0]
  40a4e8:	str	w2, [x0, #36]
  40a4ec:	mov	w0, #0x10                  	// #16
  40a4f0:	movk	w1, #0x8, lsl #16
  40a4f4:	bl	404fa0 <socket@plt>
  40a4f8:	str	w0, [x19]
  40a4fc:	tbnz	w0, #31, 40a5c4 <rtnl_open_byproto@@Base+0x11c>
  40a500:	add	x3, x29, #0x18
  40a504:	mov	w1, #0x1                   	// #1
  40a508:	mov	w2, #0x7                   	// #7
  40a50c:	mov	w4, #0x4                   	// #4
  40a510:	bl	404d70 <setsockopt@plt>
  40a514:	tbnz	w0, #31, 40a5d0 <rtnl_open_byproto@@Base+0x128>
  40a518:	adrp	x3, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40a51c:	ldr	w0, [x19]
  40a520:	ldr	x3, [x3, #4024]
  40a524:	mov	w1, #0x1                   	// #1
  40a528:	mov	w2, #0x8                   	// #8
  40a52c:	mov	w4, #0x4                   	// #4
  40a530:	bl	404d70 <setsockopt@plt>
  40a534:	tbnz	w0, #31, 40a5dc <rtnl_open_byproto@@Base+0x134>
  40a538:	ldr	w0, [x19]
  40a53c:	sub	x3, x29, #0x4
  40a540:	mov	w1, #0x10e                 	// #270
  40a544:	mov	w2, #0xb                   	// #11
  40a548:	mov	w4, #0x4                   	// #4
  40a54c:	bl	404d70 <setsockopt@plt>
  40a550:	mov	x21, x19
  40a554:	str	xzr, [x21, #4]!
  40a558:	mov	w8, #0x10                  	// #16
  40a55c:	strh	w8, [x21]
  40a560:	ldr	w0, [x19]
  40a564:	mov	w2, #0xc                   	// #12
  40a568:	mov	x1, x21
  40a56c:	str	w20, [x19, #12]
  40a570:	mov	w20, #0xc                   	// #12
  40a574:	bl	404ca0 <bind@plt>
  40a578:	tbnz	w0, #31, 40a5e8 <rtnl_open_byproto@@Base+0x140>
  40a57c:	str	w20, [x29, #28]
  40a580:	ldr	w0, [x19]
  40a584:	add	x2, x29, #0x1c
  40a588:	mov	x1, x21
  40a58c:	bl	4050f0 <getsockname@plt>
  40a590:	tbnz	w0, #31, 40a5f4 <rtnl_open_byproto@@Base+0x14c>
  40a594:	ldr	w2, [x29, #28]
  40a598:	cmp	w2, #0xc
  40a59c:	b.ne	40a604 <rtnl_open_byproto@@Base+0x15c>  // b.any
  40a5a0:	ldrh	w2, [x21]
  40a5a4:	cmp	w2, #0x10
  40a5a8:	b.ne	40a618 <rtnl_open_byproto@@Base+0x170>  // b.any
  40a5ac:	mov	x0, xzr
  40a5b0:	bl	404d50 <time@plt>
  40a5b4:	mov	x8, x0
  40a5b8:	mov	w0, wzr
  40a5bc:	str	w8, [x19, #28]
  40a5c0:	b	40a634 <rtnl_open_byproto@@Base+0x18c>
  40a5c4:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a5c8:	add	x0, x0, #0xe9f
  40a5cc:	b	40a5fc <rtnl_open_byproto@@Base+0x154>
  40a5d0:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a5d4:	add	x0, x0, #0xeba
  40a5d8:	b	40a5fc <rtnl_open_byproto@@Base+0x154>
  40a5dc:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a5e0:	add	x0, x0, #0xec4
  40a5e4:	b	40a5fc <rtnl_open_byproto@@Base+0x154>
  40a5e8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a5ec:	add	x0, x0, #0xece
  40a5f0:	b	40a5fc <rtnl_open_byproto@@Base+0x154>
  40a5f4:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a5f8:	add	x0, x0, #0xee9
  40a5fc:	bl	404c40 <perror@plt>
  40a600:	b	40a630 <rtnl_open_byproto@@Base+0x188>
  40a604:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40a608:	ldr	x8, [x8, #3992]
  40a60c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a610:	add	x1, x1, #0xefc
  40a614:	b	40a628 <rtnl_open_byproto@@Base+0x180>
  40a618:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40a61c:	ldr	x8, [x8, #3992]
  40a620:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40a624:	add	x1, x1, #0xf15
  40a628:	ldr	x0, [x8]
  40a62c:	bl	405100 <fprintf@plt>
  40a630:	mov	w0, #0xffffffff            	// #-1
  40a634:	ldp	x20, x19, [sp, #48]
  40a638:	ldr	x21, [sp, #32]
  40a63c:	ldp	x29, x30, [sp, #16]
  40a640:	add	sp, sp, #0x40
  40a644:	ret

000000000040a648 <rtnl_open@@Base>:
  40a648:	mov	w2, wzr
  40a64c:	b	40a4a8 <rtnl_open_byproto@@Base>

000000000040a650 <rtnl_nexthopdump_req@@Base>:
  40a650:	sub	sp, sp, #0xd0
  40a654:	add	x8, sp, #0x8
  40a658:	str	x21, [sp, #176]
  40a65c:	stp	x20, x19, [sp, #192]
  40a660:	mov	x20, x2
  40a664:	mov	w21, w1
  40a668:	mov	x19, x0
  40a66c:	add	x0, x8, #0xc
  40a670:	mov	w2, #0x8c                  	// #140
  40a674:	mov	w1, wzr
  40a678:	stp	x29, x30, [sp, #160]
  40a67c:	add	x29, sp, #0xa0
  40a680:	bl	404dc0 <memset@plt>
  40a684:	mov	x8, #0x18                  	// #24
  40a688:	movk	x8, #0x6a, lsl #32
  40a68c:	movk	x8, #0x301, lsl #48
  40a690:	str	x8, [sp, #8]
  40a694:	ldr	w8, [x19, #28]
  40a698:	add	w8, w8, #0x1
  40a69c:	stp	w8, w8, [x19, #28]
  40a6a0:	str	w8, [sp, #16]
  40a6a4:	strb	w21, [sp, #24]
  40a6a8:	cbz	x20, 40a6bc <rtnl_nexthopdump_req@@Base+0x6c>
  40a6ac:	add	x0, sp, #0x8
  40a6b0:	mov	w1, #0x98                  	// #152
  40a6b4:	blr	x20
  40a6b8:	cbnz	w0, 40a6d0 <rtnl_nexthopdump_req@@Base+0x80>
  40a6bc:	ldr	w0, [x19]
  40a6c0:	add	x1, sp, #0x8
  40a6c4:	mov	w2, #0x98                  	// #152
  40a6c8:	mov	w3, wzr
  40a6cc:	bl	404f50 <send@plt>
  40a6d0:	ldp	x20, x19, [sp, #192]
  40a6d4:	ldr	x21, [sp, #176]
  40a6d8:	ldp	x29, x30, [sp, #160]
  40a6dc:	add	sp, sp, #0xd0
  40a6e0:	ret

000000000040a6e4 <rtnl_addrdump_req@@Base>:
  40a6e4:	sub	sp, sp, #0xd0
  40a6e8:	add	x8, sp, #0x8
  40a6ec:	str	x21, [sp, #176]
  40a6f0:	stp	x20, x19, [sp, #192]
  40a6f4:	mov	x20, x2
  40a6f8:	mov	w21, w1
  40a6fc:	mov	x19, x0
  40a700:	add	x0, x8, #0xc
  40a704:	mov	w2, #0x8c                  	// #140
  40a708:	mov	w1, wzr
  40a70c:	stp	x29, x30, [sp, #160]
  40a710:	add	x29, sp, #0xa0
  40a714:	bl	404dc0 <memset@plt>
  40a718:	mov	x8, #0x18                  	// #24
  40a71c:	movk	x8, #0x16, lsl #32
  40a720:	movk	x8, #0x301, lsl #48
  40a724:	str	x8, [sp, #8]
  40a728:	ldr	w8, [x19, #28]
  40a72c:	add	w8, w8, #0x1
  40a730:	stp	w8, w8, [x19, #28]
  40a734:	str	w8, [sp, #16]
  40a738:	strb	w21, [sp, #24]
  40a73c:	cbz	x20, 40a750 <rtnl_addrdump_req@@Base+0x6c>
  40a740:	add	x0, sp, #0x8
  40a744:	mov	w1, #0x98                  	// #152
  40a748:	blr	x20
  40a74c:	cbnz	w0, 40a764 <rtnl_addrdump_req@@Base+0x80>
  40a750:	ldr	w0, [x19]
  40a754:	add	x1, sp, #0x8
  40a758:	mov	w2, #0x98                  	// #152
  40a75c:	mov	w3, wzr
  40a760:	bl	404f50 <send@plt>
  40a764:	ldp	x20, x19, [sp, #192]
  40a768:	ldr	x21, [sp, #176]
  40a76c:	ldp	x29, x30, [sp, #160]
  40a770:	add	sp, sp, #0xd0
  40a774:	ret

000000000040a778 <rtnl_addrlbldump_req@@Base>:
  40a778:	sub	sp, sp, #0x30
  40a77c:	mov	x8, #0x1c                  	// #28
  40a780:	movk	x8, #0x4a, lsl #32
  40a784:	movk	x8, #0x301, lsl #48
  40a788:	stp	x29, x30, [sp, #32]
  40a78c:	str	x8, [sp]
  40a790:	ldr	w8, [x0, #28]
  40a794:	mov	w2, #0x1c                  	// #28
  40a798:	mov	w3, wzr
  40a79c:	add	x29, sp, #0x20
  40a7a0:	add	w8, w8, #0x1
  40a7a4:	stp	w8, w8, [x0, #28]
  40a7a8:	stp	w8, wzr, [sp, #8]
  40a7ac:	strb	w1, [sp, #16]
  40a7b0:	stur	xzr, [sp, #17]
  40a7b4:	str	wzr, [sp, #24]
  40a7b8:	ldr	w0, [x0]
  40a7bc:	mov	x1, sp
  40a7c0:	bl	404f50 <send@plt>
  40a7c4:	ldp	x29, x30, [sp, #32]
  40a7c8:	add	sp, sp, #0x30
  40a7cc:	ret

000000000040a7d0 <rtnl_routedump_req@@Base>:
  40a7d0:	sub	sp, sp, #0xd0
  40a7d4:	mov	x8, sp
  40a7d8:	str	x21, [sp, #176]
  40a7dc:	stp	x20, x19, [sp, #192]
  40a7e0:	mov	x20, x2
  40a7e4:	mov	w21, w1
  40a7e8:	mov	x19, x0
  40a7ec:	add	x0, x8, #0xc
  40a7f0:	mov	w2, #0x90                  	// #144
  40a7f4:	mov	w1, wzr
  40a7f8:	stp	x29, x30, [sp, #160]
  40a7fc:	add	x29, sp, #0xa0
  40a800:	bl	404dc0 <memset@plt>
  40a804:	mov	x8, #0x1c                  	// #28
  40a808:	movk	x8, #0x1a, lsl #32
  40a80c:	movk	x8, #0x301, lsl #48
  40a810:	str	x8, [sp]
  40a814:	ldr	w8, [x19, #28]
  40a818:	add	w8, w8, #0x1
  40a81c:	stp	w8, w8, [x19, #28]
  40a820:	str	w8, [sp, #8]
  40a824:	strb	w21, [sp, #16]
  40a828:	cbz	x20, 40a83c <rtnl_routedump_req@@Base+0x6c>
  40a82c:	mov	x0, sp
  40a830:	mov	w1, #0x9c                  	// #156
  40a834:	blr	x20
  40a838:	cbnz	w0, 40a850 <rtnl_routedump_req@@Base+0x80>
  40a83c:	ldr	w0, [x19]
  40a840:	mov	x1, sp
  40a844:	mov	w2, #0x9c                  	// #156
  40a848:	mov	w3, wzr
  40a84c:	bl	404f50 <send@plt>
  40a850:	ldp	x20, x19, [sp, #192]
  40a854:	ldr	x21, [sp, #176]
  40a858:	ldp	x29, x30, [sp, #160]
  40a85c:	add	sp, sp, #0xd0
  40a860:	ret

000000000040a864 <rtnl_ruledump_req@@Base>:
  40a864:	sub	sp, sp, #0x30
  40a868:	mov	x8, #0x1c                  	// #28
  40a86c:	movk	x8, #0x22, lsl #32
  40a870:	movk	x8, #0x301, lsl #48
  40a874:	stp	x29, x30, [sp, #32]
  40a878:	str	x8, [sp]
  40a87c:	ldr	w8, [x0, #28]
  40a880:	mov	w2, #0x1c                  	// #28
  40a884:	mov	w3, wzr
  40a888:	add	x29, sp, #0x20
  40a88c:	add	w8, w8, #0x1
  40a890:	stp	w8, w8, [x0, #28]
  40a894:	stp	w8, wzr, [sp, #8]
  40a898:	strb	w1, [sp, #16]
  40a89c:	stur	xzr, [sp, #17]
  40a8a0:	str	wzr, [sp, #24]
  40a8a4:	ldr	w0, [x0]
  40a8a8:	mov	x1, sp
  40a8ac:	bl	404f50 <send@plt>
  40a8b0:	ldp	x29, x30, [sp, #32]
  40a8b4:	add	sp, sp, #0x30
  40a8b8:	ret

000000000040a8bc <rtnl_neighdump_req@@Base>:
  40a8bc:	sub	sp, sp, #0x150
  40a8c0:	mov	x8, sp
  40a8c4:	stp	x28, x21, [sp, #304]
  40a8c8:	stp	x20, x19, [sp, #320]
  40a8cc:	mov	x20, x2
  40a8d0:	mov	w21, w1
  40a8d4:	mov	x19, x0
  40a8d8:	add	x0, x8, #0xc
  40a8dc:	mov	w2, #0x110                 	// #272
  40a8e0:	mov	w1, wzr
  40a8e4:	stp	x29, x30, [sp, #288]
  40a8e8:	add	x29, sp, #0x120
  40a8ec:	bl	404dc0 <memset@plt>
  40a8f0:	mov	x8, #0x1c                  	// #28
  40a8f4:	movk	x8, #0x1e, lsl #32
  40a8f8:	movk	x8, #0x301, lsl #48
  40a8fc:	str	x8, [sp]
  40a900:	ldr	w8, [x19, #28]
  40a904:	add	w8, w8, #0x1
  40a908:	stp	w8, w8, [x19, #28]
  40a90c:	str	w8, [sp, #8]
  40a910:	strb	w21, [sp, #16]
  40a914:	cbz	x20, 40a928 <rtnl_neighdump_req@@Base+0x6c>
  40a918:	mov	x0, sp
  40a91c:	mov	w1, #0x11c                 	// #284
  40a920:	blr	x20
  40a924:	cbnz	w0, 40a93c <rtnl_neighdump_req@@Base+0x80>
  40a928:	ldr	w0, [x19]
  40a92c:	mov	x1, sp
  40a930:	mov	w2, #0x11c                 	// #284
  40a934:	mov	w3, wzr
  40a938:	bl	404f50 <send@plt>
  40a93c:	ldp	x20, x19, [sp, #320]
  40a940:	ldp	x28, x21, [sp, #304]
  40a944:	ldp	x29, x30, [sp, #288]
  40a948:	add	sp, sp, #0x150
  40a94c:	ret

000000000040a950 <rtnl_neightbldump_req@@Base>:
  40a950:	sub	sp, sp, #0x30
  40a954:	mov	x8, #0x14                  	// #20
  40a958:	movk	x8, #0x42, lsl #32
  40a95c:	movk	x8, #0x301, lsl #48
  40a960:	stp	x29, x30, [sp, #32]
  40a964:	str	x8, [sp, #8]
  40a968:	ldr	w8, [x0, #28]
  40a96c:	mov	w2, #0x14                  	// #20
  40a970:	mov	w3, wzr
  40a974:	add	x29, sp, #0x20
  40a978:	add	w8, w8, #0x1
  40a97c:	stp	w8, w8, [x0, #28]
  40a980:	stp	w8, wzr, [sp, #16]
  40a984:	strb	w1, [sp, #24]
  40a988:	strb	wzr, [sp, #25]
  40a98c:	strh	wzr, [sp, #26]
  40a990:	ldr	w0, [x0]
  40a994:	add	x1, sp, #0x8
  40a998:	bl	404f50 <send@plt>
  40a99c:	ldp	x29, x30, [sp, #32]
  40a9a0:	add	sp, sp, #0x30
  40a9a4:	ret

000000000040a9a8 <rtnl_mdbdump_req@@Base>:
  40a9a8:	sub	sp, sp, #0x30
  40a9ac:	mov	x8, #0x18                  	// #24
  40a9b0:	movk	x8, #0x56, lsl #32
  40a9b4:	movk	x8, #0x301, lsl #48
  40a9b8:	stp	x29, x30, [sp, #32]
  40a9bc:	str	x8, [sp, #8]
  40a9c0:	ldr	w8, [x0, #28]
  40a9c4:	mov	w2, #0x18                  	// #24
  40a9c8:	mov	w3, wzr
  40a9cc:	add	x29, sp, #0x20
  40a9d0:	add	w8, w8, #0x1
  40a9d4:	stp	w8, w8, [x0, #28]
  40a9d8:	stp	w8, wzr, [sp, #16]
  40a9dc:	strb	w1, [sp, #24]
  40a9e0:	str	wzr, [sp, #28]
  40a9e4:	ldr	w0, [x0]
  40a9e8:	add	x1, sp, #0x8
  40a9ec:	bl	404f50 <send@plt>
  40a9f0:	ldp	x29, x30, [sp, #32]
  40a9f4:	add	sp, sp, #0x30
  40a9f8:	ret

000000000040a9fc <rtnl_netconfdump_req@@Base>:
  40a9fc:	sub	sp, sp, #0x30
  40aa00:	mov	x8, #0x14                  	// #20
  40aa04:	movk	x8, #0x52, lsl #32
  40aa08:	movk	x8, #0x301, lsl #48
  40aa0c:	stp	x29, x30, [sp, #32]
  40aa10:	str	x8, [sp, #8]
  40aa14:	ldr	w8, [x0, #28]
  40aa18:	mov	w2, #0x14                  	// #20
  40aa1c:	mov	w3, wzr
  40aa20:	add	x29, sp, #0x20
  40aa24:	add	w8, w8, #0x1
  40aa28:	stp	w8, w8, [x0, #28]
  40aa2c:	stp	w8, wzr, [sp, #16]
  40aa30:	strb	w1, [sp, #24]
  40aa34:	ldr	w0, [x0]
  40aa38:	add	x1, sp, #0x8
  40aa3c:	bl	404f50 <send@plt>
  40aa40:	ldp	x29, x30, [sp, #32]
  40aa44:	add	sp, sp, #0x30
  40aa48:	ret

000000000040aa4c <rtnl_nsiddump_req_filter_fn@@Base>:
  40aa4c:	stp	x29, x30, [sp, #-48]!
  40aa50:	stp	x28, x21, [sp, #16]
  40aa54:	stp	x20, x19, [sp, #32]
  40aa58:	mov	x29, sp
  40aa5c:	sub	sp, sp, #0x420
  40aa60:	add	x8, sp, #0x8
  40aa64:	mov	x20, x2
  40aa68:	mov	w21, w1
  40aa6c:	mov	x19, x0
  40aa70:	add	x0, x8, #0xc
  40aa74:	mov	w2, #0x408                 	// #1032
  40aa78:	mov	w1, wzr
  40aa7c:	bl	404dc0 <memset@plt>
  40aa80:	mov	x8, #0x14                  	// #20
  40aa84:	movk	x8, #0x5a, lsl #32
  40aa88:	movk	x8, #0x301, lsl #48
  40aa8c:	str	x8, [sp, #8]
  40aa90:	ldr	w8, [x19, #28]
  40aa94:	add	w8, w8, #0x1
  40aa98:	stp	w8, w8, [x19, #28]
  40aa9c:	str	w8, [sp, #16]
  40aaa0:	strb	w21, [sp, #24]
  40aaa4:	cbz	x20, 40aad0 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40aaa8:	add	x0, sp, #0x8
  40aaac:	mov	w1, #0x414                 	// #1044
  40aab0:	blr	x20
  40aab4:	cbnz	w0, 40aad4 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40aab8:	ldr	w0, [x19]
  40aabc:	ldr	w2, [sp, #8]
  40aac0:	add	x1, sp, #0x8
  40aac4:	mov	w3, wzr
  40aac8:	bl	404f50 <send@plt>
  40aacc:	b	40aad4 <rtnl_nsiddump_req_filter_fn@@Base+0x88>
  40aad0:	mov	w0, #0xffffffea            	// #-22
  40aad4:	add	sp, sp, #0x420
  40aad8:	ldp	x20, x19, [sp, #32]
  40aadc:	ldp	x28, x21, [sp, #16]
  40aae0:	ldp	x29, x30, [sp], #48
  40aae4:	ret

000000000040aae8 <rtnl_linkdump_req@@Base>:
  40aae8:	cbz	w1, 40aaf0 <rtnl_linkdump_req@@Base+0x8>
  40aaec:	b	40ab6c <rtnl_linkdump_req_filter@@Base+0x74>
  40aaf0:	mov	w2, #0x1                   	// #1
  40aaf4:	b	40aaf8 <rtnl_linkdump_req_filter@@Base>

000000000040aaf8 <rtnl_linkdump_req_filter@@Base>:
  40aaf8:	cmp	w1, #0x7
  40aafc:	b.eq	40ab04 <rtnl_linkdump_req_filter@@Base+0xc>  // b.none
  40ab00:	cbnz	w1, 40ab68 <rtnl_linkdump_req_filter@@Base+0x70>
  40ab04:	sub	sp, sp, #0x40
  40ab08:	mov	x8, #0x28                  	// #40
  40ab0c:	movk	x8, #0x12, lsl #32
  40ab10:	movk	x8, #0x301, lsl #48
  40ab14:	stp	x29, x30, [sp, #48]
  40ab18:	str	x8, [sp, #8]
  40ab1c:	ldr	w8, [x0, #28]
  40ab20:	mov	w9, #0x8                   	// #8
  40ab24:	movk	w9, #0x1d, lsl #16
  40ab28:	mov	w3, wzr
  40ab2c:	add	w8, w8, #0x1
  40ab30:	stp	w8, w8, [x0, #28]
  40ab34:	stp	w8, wzr, [sp, #16]
  40ab38:	strb	w1, [sp, #24]
  40ab3c:	stur	xzr, [sp, #25]
  40ab40:	str	xzr, [sp, #32]
  40ab44:	stp	w9, w2, [sp, #40]
  40ab48:	ldr	w0, [x0]
  40ab4c:	add	x1, sp, #0x8
  40ab50:	mov	w2, #0x28                  	// #40
  40ab54:	add	x29, sp, #0x30
  40ab58:	bl	404f50 <send@plt>
  40ab5c:	ldp	x29, x30, [sp, #48]
  40ab60:	add	sp, sp, #0x40
  40ab64:	ret
  40ab68:	b	40ab6c <rtnl_linkdump_req_filter@@Base+0x74>
  40ab6c:	sub	sp, sp, #0x30
  40ab70:	mov	x8, #0x20                  	// #32
  40ab74:	movk	x8, #0x12, lsl #32
  40ab78:	movk	x8, #0x301, lsl #48
  40ab7c:	stp	x29, x30, [sp, #32]
  40ab80:	str	x8, [sp]
  40ab84:	ldr	w8, [x0, #28]
  40ab88:	mov	w2, #0x20                  	// #32
  40ab8c:	mov	w3, wzr
  40ab90:	add	x29, sp, #0x20
  40ab94:	add	w8, w8, #0x1
  40ab98:	stp	w8, w8, [x0, #28]
  40ab9c:	stp	w8, wzr, [sp, #8]
  40aba0:	strb	w1, [sp, #16]
  40aba4:	stur	xzr, [sp, #17]
  40aba8:	str	xzr, [sp, #24]
  40abac:	ldr	w0, [x0]
  40abb0:	mov	x1, sp
  40abb4:	bl	404f50 <send@plt>
  40abb8:	ldp	x29, x30, [sp, #32]
  40abbc:	add	sp, sp, #0x30
  40abc0:	ret

000000000040abc4 <rtnl_linkdump_req_filter_fn@@Base>:
  40abc4:	stp	x29, x30, [sp, #-48]!
  40abc8:	stp	x28, x21, [sp, #16]
  40abcc:	stp	x20, x19, [sp, #32]
  40abd0:	mov	x29, sp
  40abd4:	sub	sp, sp, #0x420
  40abd8:	mov	x20, x2
  40abdc:	mov	w21, w1
  40abe0:	cmp	w1, #0x11
  40abe4:	mov	x19, x0
  40abe8:	b.eq	40abf0 <rtnl_linkdump_req_filter_fn@@Base+0x2c>  // b.none
  40abec:	cbnz	w21, 40ac54 <rtnl_linkdump_req_filter_fn@@Base+0x90>
  40abf0:	mov	x8, sp
  40abf4:	add	x0, x8, #0xc
  40abf8:	mov	w2, #0x414                 	// #1044
  40abfc:	mov	w1, wzr
  40ac00:	bl	404dc0 <memset@plt>
  40ac04:	mov	x8, #0x20                  	// #32
  40ac08:	movk	x8, #0x12, lsl #32
  40ac0c:	movk	x8, #0x301, lsl #48
  40ac10:	str	x8, [sp]
  40ac14:	ldr	w8, [x19, #28]
  40ac18:	add	w8, w8, #0x1
  40ac1c:	stp	w8, w8, [x19, #28]
  40ac20:	str	w8, [sp, #8]
  40ac24:	strb	w21, [sp, #16]
  40ac28:	cbz	x20, 40ac70 <rtnl_linkdump_req_filter_fn@@Base+0xac>
  40ac2c:	mov	x0, sp
  40ac30:	mov	w1, #0x420                 	// #1056
  40ac34:	blr	x20
  40ac38:	cbnz	w0, 40ac74 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40ac3c:	ldr	w0, [x19]
  40ac40:	ldr	w2, [sp]
  40ac44:	mov	x1, sp
  40ac48:	mov	w3, wzr
  40ac4c:	bl	404f50 <send@plt>
  40ac50:	b	40ac74 <rtnl_linkdump_req_filter_fn@@Base+0xb0>
  40ac54:	mov	x0, x19
  40ac58:	mov	w1, w21
  40ac5c:	add	sp, sp, #0x420
  40ac60:	ldp	x20, x19, [sp, #32]
  40ac64:	ldp	x28, x21, [sp, #16]
  40ac68:	ldp	x29, x30, [sp], #48
  40ac6c:	b	40ab6c <rtnl_linkdump_req_filter@@Base+0x74>
  40ac70:	mov	w0, #0xffffffea            	// #-22
  40ac74:	add	sp, sp, #0x420
  40ac78:	ldp	x20, x19, [sp, #32]
  40ac7c:	ldp	x28, x21, [sp, #16]
  40ac80:	ldp	x29, x30, [sp], #48
  40ac84:	ret

000000000040ac88 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40ac88:	sub	sp, sp, #0xc0
  40ac8c:	mov	x8, sp
  40ac90:	stp	x20, x19, [sp, #176]
  40ac94:	mov	x20, x1
  40ac98:	mov	x19, x0
  40ac9c:	add	x0, x8, #0xc
  40aca0:	mov	w2, #0x94                  	// #148
  40aca4:	mov	w1, wzr
  40aca8:	stp	x29, x30, [sp, #160]
  40acac:	add	x29, sp, #0xa0
  40acb0:	bl	404dc0 <memset@plt>
  40acb4:	mov	x8, #0x20                  	// #32
  40acb8:	movk	x8, #0x1e, lsl #32
  40acbc:	movk	x8, #0x301, lsl #48
  40acc0:	str	x8, [sp]
  40acc4:	ldr	w8, [x19, #28]
  40acc8:	mov	w9, #0x7                   	// #7
  40accc:	mov	x0, sp
  40acd0:	mov	w1, #0xa0                  	// #160
  40acd4:	add	w8, w8, #0x1
  40acd8:	stp	w8, w8, [x19, #28]
  40acdc:	str	w8, [sp, #8]
  40ace0:	strb	w9, [sp, #16]
  40ace4:	blr	x20
  40ace8:	cbnz	w0, 40ad00 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x78>
  40acec:	ldr	w0, [x19]
  40acf0:	mov	x1, sp
  40acf4:	mov	w2, #0xa0                  	// #160
  40acf8:	mov	w3, wzr
  40acfc:	bl	404f50 <send@plt>
  40ad00:	ldp	x20, x19, [sp, #176]
  40ad04:	ldp	x29, x30, [sp, #160]
  40ad08:	add	sp, sp, #0xc0
  40ad0c:	ret

000000000040ad10 <rtnl_statsdump_req_filter@@Base>:
  40ad10:	sub	sp, sp, #0x30
  40ad14:	mov	x8, #0x1c                  	// #28
  40ad18:	movk	x8, #0x5e, lsl #32
  40ad1c:	movk	x8, #0x301, lsl #48
  40ad20:	stp	x29, x30, [sp, #32]
  40ad24:	stp	xzr, xzr, [sp, #8]
  40ad28:	str	x8, [sp]
  40ad2c:	ldr	w8, [x0, #28]
  40ad30:	mov	w3, wzr
  40ad34:	add	x29, sp, #0x20
  40ad38:	add	w8, w8, #0x1
  40ad3c:	stp	w8, w8, [x0, #28]
  40ad40:	stp	w8, wzr, [sp, #8]
  40ad44:	strb	w1, [sp, #16]
  40ad48:	str	w2, [sp, #24]
  40ad4c:	ldr	w0, [x0]
  40ad50:	mov	x1, sp
  40ad54:	mov	w2, #0x1c                  	// #28
  40ad58:	bl	404f50 <send@plt>
  40ad5c:	ldp	x29, x30, [sp, #32]
  40ad60:	add	sp, sp, #0x30
  40ad64:	ret

000000000040ad68 <rtnl_send@@Base>:
  40ad68:	stp	x29, x30, [sp, #-16]!
  40ad6c:	ldr	w0, [x0]
  40ad70:	mov	w3, wzr
  40ad74:	sxtw	x2, w2
  40ad78:	mov	x29, sp
  40ad7c:	bl	404f50 <send@plt>
  40ad80:	ldp	x29, x30, [sp], #16
  40ad84:	ret

000000000040ad88 <rtnl_send_check@@Base>:
  40ad88:	stp	x29, x30, [sp, #-32]!
  40ad8c:	stp	x28, x19, [sp, #16]
  40ad90:	mov	x29, sp
  40ad94:	sub	sp, sp, #0x400
  40ad98:	mov	x19, x0
  40ad9c:	ldr	w0, [x0]
  40ada0:	mov	w3, wzr
  40ada4:	sxtw	x2, w2
  40ada8:	bl	404f50 <send@plt>
  40adac:	mov	x8, x0
  40adb0:	tbnz	w8, #31, 40ae4c <rtnl_send_check@@Base+0xc4>
  40adb4:	ldr	w0, [x19]
  40adb8:	mov	x1, sp
  40adbc:	mov	w2, #0x400                 	// #1024
  40adc0:	mov	w3, #0x42                  	// #66
  40adc4:	bl	404e80 <recv@plt>
  40adc8:	tbnz	w0, #31, 40ae1c <rtnl_send_check@@Base+0x94>
  40adcc:	cmp	w0, #0x10
  40add0:	b.lt	40ae14 <rtnl_send_check@@Base+0x8c>  // b.tstop
  40add4:	mov	x9, sp
  40add8:	ldr	w10, [x9]
  40addc:	mov	w8, wzr
  40ade0:	cmp	w10, #0x10
  40ade4:	b.cc	40ae4c <rtnl_send_check@@Base+0xc4>  // b.lo, b.ul, b.last
  40ade8:	cmp	w10, w0
  40adec:	b.hi	40ae4c <rtnl_send_check@@Base+0xc4>  // b.pmore
  40adf0:	ldrh	w8, [x9, #4]
  40adf4:	cmp	w8, #0x2
  40adf8:	b.eq	40ae30 <rtnl_send_check@@Base+0xa8>  // b.none
  40adfc:	add	w8, w10, #0x3
  40ae00:	and	w8, w8, #0xfffffffc
  40ae04:	sub	w0, w0, w8
  40ae08:	cmp	w0, #0xf
  40ae0c:	add	x9, x9, x8
  40ae10:	b.gt	40add8 <rtnl_send_check@@Base+0x50>
  40ae14:	mov	w8, wzr
  40ae18:	b	40ae4c <rtnl_send_check@@Base+0xc4>
  40ae1c:	bl	4050c0 <__errno_location@plt>
  40ae20:	ldr	w8, [x0]
  40ae24:	cmp	w8, #0xb
  40ae28:	csetm	w8, ne  // ne = any
  40ae2c:	b	40ae4c <rtnl_send_check@@Base+0xc4>
  40ae30:	cmp	w10, #0x23
  40ae34:	b.ls	40ae60 <rtnl_send_check@@Base+0xd8>  // b.plast
  40ae38:	ldr	w8, [x9, #16]
  40ae3c:	neg	w19, w8
  40ae40:	bl	4050c0 <__errno_location@plt>
  40ae44:	str	w19, [x0]
  40ae48:	mov	w8, #0xffffffff            	// #-1
  40ae4c:	mov	w0, w8
  40ae50:	add	sp, sp, #0x400
  40ae54:	ldp	x28, x19, [sp, #16]
  40ae58:	ldp	x29, x30, [sp], #32
  40ae5c:	ret
  40ae60:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40ae64:	ldr	x8, [x8, #3992]
  40ae68:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40ae6c:	add	x0, x0, #0xf2e
  40ae70:	mov	w1, #0x10                  	// #16
  40ae74:	ldr	x3, [x8]
  40ae78:	mov	w2, #0x1                   	// #1
  40ae7c:	bl	404f90 <fwrite@plt>
  40ae80:	b	40ae48 <rtnl_send_check@@Base+0xc0>

000000000040ae84 <rtnl_dump_request@@Base>:
  40ae84:	sub	sp, sp, #0x90
  40ae88:	stp	x29, x30, [sp, #128]
  40ae8c:	add	x29, sp, #0x80
  40ae90:	add	w8, w3, #0x10
  40ae94:	mov	w9, #0x301                 	// #769
  40ae98:	sturh	w1, [x29, #-12]
  40ae9c:	adrp	x10, 40d000 <_IO_stdin_used@@Base+0xa00>
  40aea0:	stur	w8, [x29, #-16]
  40aea4:	sturh	w9, [x29, #-10]
  40aea8:	add	x10, x10, #0x238
  40aeac:	ldr	w8, [x0, #28]
  40aeb0:	ldr	x13, [x10]
  40aeb4:	ldr	w10, [x10, #8]
  40aeb8:	sub	x11, x29, #0x10
  40aebc:	mov	w12, #0x10                  	// #16
  40aec0:	sxtw	x9, w3
  40aec4:	add	w8, w8, #0x1
  40aec8:	stp	w8, w8, [x0, #28]
  40aecc:	stur	x13, [x29, #-32]
  40aed0:	sub	x13, x29, #0x20
  40aed4:	stur	w10, [x29, #-24]
  40aed8:	mov	w10, #0xc                   	// #12
  40aedc:	stp	x11, x12, [sp, #64]
  40aee0:	add	x11, sp, #0x40
  40aee4:	stp	x2, x9, [sp, #80]
  40aee8:	mov	w9, #0x2                   	// #2
  40aeec:	stp	w8, wzr, [x29, #-8]
  40aef0:	str	x13, [sp, #8]
  40aef4:	str	w10, [sp, #16]
  40aef8:	stp	x11, x9, [sp, #24]
  40aefc:	stp	xzr, xzr, [sp, #40]
  40af00:	str	wzr, [sp, #56]
  40af04:	ldr	w0, [x0]
  40af08:	add	x1, sp, #0x8
  40af0c:	mov	w2, wzr
  40af10:	bl	404de0 <sendmsg@plt>
  40af14:	ldp	x29, x30, [sp, #128]
  40af18:	add	sp, sp, #0x90
  40af1c:	ret

000000000040af20 <rtnl_dump_request_n@@Base>:
  40af20:	sub	sp, sp, #0x70
  40af24:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0xa00>
  40af28:	add	x8, x8, #0x238
  40af2c:	ldr	x9, [x8]
  40af30:	ldr	w8, [x8, #8]
  40af34:	stp	x29, x30, [sp, #96]
  40af38:	add	x29, sp, #0x60
  40af3c:	stur	x9, [x29, #-16]
  40af40:	stur	w8, [x29, #-8]
  40af44:	ldr	w8, [x1]
  40af48:	sub	x10, x29, #0x10
  40af4c:	mov	w9, #0xc                   	// #12
  40af50:	str	x10, [sp, #8]
  40af54:	sub	x10, x29, #0x20
  40af58:	str	w9, [sp, #16]
  40af5c:	mov	w9, #0x1                   	// #1
  40af60:	stp	x10, x9, [sp, #24]
  40af64:	mov	w9, #0x301                 	// #769
  40af68:	stp	xzr, xzr, [sp, #40]
  40af6c:	str	wzr, [sp, #56]
  40af70:	stp	x1, x8, [x29, #-32]
  40af74:	strh	w9, [x1, #6]
  40af78:	str	wzr, [x1, #12]
  40af7c:	ldr	w8, [x0, #28]
  40af80:	mov	w2, wzr
  40af84:	add	w8, w8, #0x1
  40af88:	stp	w8, w8, [x0, #28]
  40af8c:	str	w8, [x1, #8]
  40af90:	ldr	w0, [x0]
  40af94:	add	x1, sp, #0x8
  40af98:	bl	404de0 <sendmsg@plt>
  40af9c:	ldp	x29, x30, [sp, #96]
  40afa0:	add	sp, sp, #0x70
  40afa4:	ret

000000000040afa8 <rtnl_dump_filter_nc@@Base>:
  40afa8:	sub	sp, sp, #0xf0
  40afac:	stp	x29, x30, [sp, #144]
  40afb0:	add	x29, sp, #0x90
  40afb4:	sub	x8, x29, #0x10
  40afb8:	mov	w9, #0xc                   	// #12
  40afbc:	str	x8, [sp, #56]
  40afc0:	sub	x8, x29, #0x20
  40afc4:	str	w9, [sp, #64]
  40afc8:	mov	w9, #0x1                   	// #1
  40afcc:	stp	x28, x27, [sp, #160]
  40afd0:	stp	x26, x25, [sp, #176]
  40afd4:	stp	x24, x23, [sp, #192]
  40afd8:	stp	x22, x21, [sp, #208]
  40afdc:	stp	x20, x19, [sp, #224]
  40afe0:	stp	x1, x2, [sp]
  40afe4:	strh	w3, [sp, #16]
  40afe8:	stp	xzr, xzr, [sp, #32]
  40afec:	str	xzr, [sp, #24]
  40aff0:	stp	xzr, xzr, [sp, #88]
  40aff4:	stp	x8, x9, [sp, #72]
  40aff8:	str	wzr, [sp, #104]
  40affc:	mov	x19, x0
  40b000:	ldr	w0, [x0]
  40b004:	mov	x20, x1
  40b008:	add	x1, sp, #0x38
  40b00c:	add	x2, sp, #0x30
  40b010:	bl	40c3e0 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b014:	mov	w22, w0
  40b018:	tbnz	w0, #31, 40b1e8 <rtnl_dump_filter_nc@@Base+0x240>
  40b01c:	adrp	x21, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b020:	mov	w27, wzr
  40b024:	add	x21, x21, #0xfd4
  40b028:	ldr	x3, [x19, #40]
  40b02c:	cbz	x3, 40b044 <rtnl_dump_filter_nc@@Base+0x9c>
  40b030:	ldr	x0, [sp, #48]
  40b034:	add	w8, w22, #0x3
  40b038:	and	w2, w8, #0xfffffffc
  40b03c:	mov	w1, #0x1                   	// #1
  40b040:	bl	404f90 <fwrite@plt>
  40b044:	cbz	x20, 40b138 <rtnl_dump_filter_nc@@Base+0x190>
  40b048:	mov	w26, wzr
  40b04c:	mov	x28, sp
  40b050:	cmp	w22, #0x10
  40b054:	b.lt	40b100 <rtnl_dump_filter_nc@@Base+0x158>  // b.tstop
  40b058:	ldr	x24, [sp, #48]
  40b05c:	mov	w23, w22
  40b060:	ldr	w8, [x24]
  40b064:	cmp	w8, #0x10
  40b068:	b.cc	40b104 <rtnl_dump_filter_nc@@Base+0x15c>  // b.lo, b.ul, b.last
  40b06c:	cmp	w8, w23
  40b070:	b.hi	40b104 <rtnl_dump_filter_nc@@Base+0x15c>  // b.pmore
  40b074:	ldrh	w9, [x28, #16]
  40b078:	ldrh	w10, [x24, #6]
  40b07c:	bic	w9, w10, w9
  40b080:	strh	w9, [x24, #6]
  40b084:	ldur	w10, [x29, #-12]
  40b088:	cbnz	w10, 40b0e4 <rtnl_dump_filter_nc@@Base+0x13c>
  40b08c:	ldr	w10, [x24, #12]
  40b090:	ldr	w11, [x19, #8]
  40b094:	cmp	w10, w11
  40b098:	b.ne	40b0e4 <rtnl_dump_filter_nc@@Base+0x13c>  // b.any
  40b09c:	ldr	w10, [x24, #8]
  40b0a0:	ldr	w11, [x19, #32]
  40b0a4:	cmp	w10, w11
  40b0a8:	b.ne	40b0e4 <rtnl_dump_filter_nc@@Base+0x13c>  // b.any
  40b0ac:	ldrh	w10, [x24, #4]
  40b0b0:	tst	w9, #0x10
  40b0b4:	csinc	w27, w27, wzr, eq  // eq = none
  40b0b8:	cmp	w10, #0x2
  40b0bc:	b.eq	40b18c <rtnl_dump_filter_nc@@Base+0x1e4>  // b.none
  40b0c0:	cmp	w10, #0x3
  40b0c4:	b.eq	40b110 <rtnl_dump_filter_nc@@Base+0x168>  // b.none
  40b0c8:	ldr	x9, [x19, #40]
  40b0cc:	cbnz	x9, 40b0e4 <rtnl_dump_filter_nc@@Base+0x13c>
  40b0d0:	ldp	x8, x1, [x28]
  40b0d4:	mov	x0, x24
  40b0d8:	blr	x8
  40b0dc:	tbnz	w0, #31, 40b1d8 <rtnl_dump_filter_nc@@Base+0x230>
  40b0e0:	ldr	w8, [x24]
  40b0e4:	add	w8, w8, #0x3
  40b0e8:	and	w8, w8, #0xfffffffc
  40b0ec:	sub	w23, w23, w8
  40b0f0:	cmp	w23, #0xf
  40b0f4:	add	x24, x24, x8
  40b0f8:	b.gt	40b060 <rtnl_dump_filter_nc@@Base+0xb8>
  40b0fc:	b	40b104 <rtnl_dump_filter_nc@@Base+0x15c>
  40b100:	mov	w23, w22
  40b104:	ldr	x8, [x28, #24]!
  40b108:	cbnz	x8, 40b050 <rtnl_dump_filter_nc@@Base+0xa8>
  40b10c:	b	40b128 <rtnl_dump_filter_nc@@Base+0x180>
  40b110:	cmp	w8, #0x13
  40b114:	b.ls	40b218 <rtnl_dump_filter_nc@@Base+0x270>  // b.plast
  40b118:	ldr	w24, [x24, #16]
  40b11c:	tbnz	w24, #31, 40b254 <rtnl_dump_filter_nc@@Base+0x2ac>
  40b120:	mov	w26, #0x1                   	// #1
  40b124:	b	40b104 <rtnl_dump_filter_nc@@Base+0x15c>
  40b128:	ldr	x0, [sp, #48]
  40b12c:	bl	404f30 <free@plt>
  40b130:	cbz	w26, 40b144 <rtnl_dump_filter_nc@@Base+0x19c>
  40b134:	b	40b20c <rtnl_dump_filter_nc@@Base+0x264>
  40b138:	ldr	x0, [sp, #48]
  40b13c:	bl	404f30 <free@plt>
  40b140:	mov	w23, wzr
  40b144:	ldrb	w8, [sp, #104]
  40b148:	tbnz	w8, #5, 40b16c <rtnl_dump_filter_nc@@Base+0x1c4>
  40b14c:	cbnz	w23, 40b2c4 <rtnl_dump_filter_nc@@Base+0x31c>
  40b150:	ldr	w0, [x19]
  40b154:	add	x1, sp, #0x38
  40b158:	add	x2, sp, #0x30
  40b15c:	bl	40c3e0 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b160:	mov	w22, w0
  40b164:	tbz	w0, #31, 40b028 <rtnl_dump_filter_nc@@Base+0x80>
  40b168:	b	40b1e8 <rtnl_dump_filter_nc@@Base+0x240>
  40b16c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b170:	ldr	x8, [x8, #3992]
  40b174:	mov	w1, #0x12                  	// #18
  40b178:	mov	w2, #0x1                   	// #1
  40b17c:	mov	x0, x21
  40b180:	ldr	x3, [x8]
  40b184:	bl	404f90 <fwrite@plt>
  40b188:	b	40b150 <rtnl_dump_filter_nc@@Base+0x1a8>
  40b18c:	cmp	w8, #0x23
  40b190:	b.ls	40b230 <rtnl_dump_filter_nc@@Base+0x288>  // b.plast
  40b194:	ldr	w8, [x24, #16]
  40b198:	neg	w20, w8
  40b19c:	bl	4050c0 <__errno_location@plt>
  40b1a0:	str	w20, [x0]
  40b1a4:	ldr	w8, [x19, #36]
  40b1a8:	cmp	w8, #0x4
  40b1ac:	b.ne	40b1c0 <rtnl_dump_filter_nc@@Base+0x218>  // b.any
  40b1b0:	cmp	w20, #0x2
  40b1b4:	b.eq	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40b1b8:	cmp	w20, #0x5f
  40b1bc:	b.eq	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40b1c0:	ldrb	w8, [x19, #48]
  40b1c4:	tbz	w8, #1, 40b290 <rtnl_dump_filter_nc@@Base+0x2e8>
  40b1c8:	ldr	x0, [sp, #48]
  40b1cc:	bl	404f30 <free@plt>
  40b1d0:	mov	w22, #0xffffffff            	// #-1
  40b1d4:	b	40b1e8 <rtnl_dump_filter_nc@@Base+0x240>
  40b1d8:	mov	w25, w0
  40b1dc:	ldr	x0, [sp, #48]
  40b1e0:	bl	404f30 <free@plt>
  40b1e4:	mov	w22, w25
  40b1e8:	mov	w0, w22
  40b1ec:	ldp	x20, x19, [sp, #224]
  40b1f0:	ldp	x22, x21, [sp, #208]
  40b1f4:	ldp	x24, x23, [sp, #192]
  40b1f8:	ldp	x26, x25, [sp, #176]
  40b1fc:	ldp	x28, x27, [sp, #160]
  40b200:	ldp	x29, x30, [sp, #144]
  40b204:	add	sp, sp, #0xf0
  40b208:	ret
  40b20c:	cbnz	w27, 40b2a0 <rtnl_dump_filter_nc@@Base+0x2f8>
  40b210:	mov	w22, wzr
  40b214:	b	40b1e8 <rtnl_dump_filter_nc@@Base+0x240>
  40b218:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b21c:	ldr	x8, [x8, #3992]
  40b220:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b224:	add	x0, x0, #0x18c
  40b228:	mov	w1, #0xf                   	// #15
  40b22c:	b	40b244 <rtnl_dump_filter_nc@@Base+0x29c>
  40b230:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b234:	ldr	x8, [x8, #3992]
  40b238:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b23c:	add	x0, x0, #0xf2e
  40b240:	mov	w1, #0x10                  	// #16
  40b244:	ldr	x3, [x8]
  40b248:	mov	w2, #0x1                   	// #1
  40b24c:	bl	404f90 <fwrite@plt>
  40b250:	b	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>
  40b254:	neg	w19, w24
  40b258:	bl	4050c0 <__errno_location@plt>
  40b25c:	cmn	w24, #0x2
  40b260:	str	w19, [x0]
  40b264:	b.eq	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40b268:	cmp	w19, #0x5f
  40b26c:	b.eq	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>  // b.none
  40b270:	cmp	w19, #0x5a
  40b274:	b.ne	40b290 <rtnl_dump_filter_nc@@Base+0x2e8>  // b.any
  40b278:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b27c:	ldr	x8, [x8, #3992]
  40b280:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b284:	add	x0, x0, #0x19c
  40b288:	mov	w1, #0x24                  	// #36
  40b28c:	b	40b244 <rtnl_dump_filter_nc@@Base+0x29c>
  40b290:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b294:	add	x0, x0, #0x1c1
  40b298:	bl	404c40 <perror@plt>
  40b29c:	b	40b1c8 <rtnl_dump_filter_nc@@Base+0x220>
  40b2a0:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b2a4:	ldr	x8, [x8, #3992]
  40b2a8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b2ac:	add	x0, x0, #0x13c
  40b2b0:	mov	w1, #0x2e                  	// #46
  40b2b4:	ldr	x3, [x8]
  40b2b8:	mov	w2, #0x1                   	// #1
  40b2bc:	bl	404f90 <fwrite@plt>
  40b2c0:	b	40b210 <rtnl_dump_filter_nc@@Base+0x268>
  40b2c4:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b2c8:	ldr	x8, [x8, #3992]
  40b2cc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b2d0:	add	x1, x1, #0xfe7
  40b2d4:	mov	w2, w23
  40b2d8:	ldr	x0, [x8]
  40b2dc:	bl	405100 <fprintf@plt>
  40b2e0:	mov	w0, #0x1                   	// #1
  40b2e4:	bl	404c30 <exit@plt>

000000000040b2e8 <rtnl_talk@@Base>:
  40b2e8:	sub	sp, sp, #0x20
  40b2ec:	stp	x29, x30, [sp, #16]
  40b2f0:	ldr	w8, [x1]
  40b2f4:	mov	x3, x2
  40b2f8:	mov	w2, #0x1                   	// #1
  40b2fc:	mov	w4, #0x1                   	// #1
  40b300:	stp	x1, x8, [sp]
  40b304:	mov	x1, sp
  40b308:	add	x29, sp, #0x10
  40b30c:	bl	40b324 <rtnl_talk_iov@@Base+0x8>
  40b310:	ldp	x29, x30, [sp, #16]
  40b314:	add	sp, sp, #0x20
  40b318:	ret

000000000040b31c <rtnl_talk_iov@@Base>:
  40b31c:	mov	w4, #0x1                   	// #1
  40b320:	b	40b324 <rtnl_talk_iov@@Base+0x8>
  40b324:	sub	sp, sp, #0xd0
  40b328:	stp	x29, x30, [sp, #112]
  40b32c:	add	x29, sp, #0x70
  40b330:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b334:	sub	x9, x29, #0x10
  40b338:	add	x8, x8, #0x238
  40b33c:	str	x9, [sp, #24]
  40b340:	mov	w9, #0xc                   	// #12
  40b344:	str	w9, [sp, #32]
  40b348:	ldr	x9, [x8]
  40b34c:	ldr	w8, [x8, #8]
  40b350:	stp	x22, x21, [sp, #176]
  40b354:	stp	x20, x19, [sp, #192]
  40b358:	mov	w22, w4
  40b35c:	mov	x19, x3
  40b360:	mov	x20, x2
  40b364:	mov	x21, x0
  40b368:	stp	x28, x27, [sp, #128]
  40b36c:	stp	x26, x25, [sp, #144]
  40b370:	stp	x24, x23, [sp, #160]
  40b374:	stp	x1, x2, [sp, #40]
  40b378:	stp	xzr, xzr, [sp, #56]
  40b37c:	stur	x9, [x29, #-16]
  40b380:	stur	w8, [x29, #-8]
  40b384:	str	wzr, [sp, #72]
  40b388:	cbz	x2, 40b3c4 <rtnl_talk_iov@@Base+0xa8>
  40b38c:	ldr	w27, [x21, #28]
  40b390:	mov	x8, x20
  40b394:	ldr	x9, [x1]
  40b398:	add	w27, w27, #0x1
  40b39c:	str	w27, [x9, #8]
  40b3a0:	cbnz	x19, 40b3b0 <rtnl_talk_iov@@Base+0x94>
  40b3a4:	ldrh	w10, [x9, #6]
  40b3a8:	orr	w10, w10, #0x4
  40b3ac:	strh	w10, [x9, #6]
  40b3b0:	subs	x8, x8, #0x1
  40b3b4:	add	x1, x1, #0x10
  40b3b8:	b.ne	40b394 <rtnl_talk_iov@@Base+0x78>  // b.any
  40b3bc:	str	w27, [x21, #28]
  40b3c0:	b	40b3c8 <rtnl_talk_iov@@Base+0xac>
  40b3c4:	mov	w27, wzr
  40b3c8:	ldr	w0, [x21]
  40b3cc:	add	x1, sp, #0x18
  40b3d0:	mov	w2, wzr
  40b3d4:	bl	404de0 <sendmsg@plt>
  40b3d8:	tbnz	w0, #31, 40b664 <rtnl_talk_iov@@Base+0x348>
  40b3dc:	sub	x8, x29, #0x20
  40b3e0:	mov	w9, #0x1                   	// #1
  40b3e4:	stp	x8, x9, [sp, #40]
  40b3e8:	ldr	w0, [x21]
  40b3ec:	add	x1, sp, #0x18
  40b3f0:	add	x2, sp, #0x10
  40b3f4:	bl	40c3e0 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b3f8:	mov	w25, w0
  40b3fc:	tbnz	w0, #31, 40b640 <rtnl_talk_iov@@Base+0x324>
  40b400:	adrp	x11, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b404:	ldr	x11, [x11, #3992]
  40b408:	mov	w9, w27
  40b40c:	adrp	x13, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b410:	mov	w24, wzr
  40b414:	eor	w12, w22, #0x1
  40b418:	mov	w8, #0x1                   	// #1
  40b41c:	sub	x23, x9, x20
  40b420:	add	x13, x13, #0xfd4
  40b424:	mov	w28, w24
  40b428:	sxtw	x24, w8
  40b42c:	ldr	w2, [sp, #32]
  40b430:	cmp	w2, #0xc
  40b434:	b.ne	40b6a8 <rtnl_talk_iov@@Base+0x38c>  // b.any
  40b438:	cmp	w25, #0x10
  40b43c:	b.cc	40b5a0 <rtnl_talk_iov@@Base+0x284>  // b.lo, b.ul, b.last
  40b440:	ldr	x22, [sp, #16]
  40b444:	ldr	w26, [x22]
  40b448:	cmp	w26, w25
  40b44c:	b.gt	40b614 <rtnl_talk_iov@@Base+0x2f8>
  40b450:	sub	w8, w26, #0x10
  40b454:	tbnz	w8, #31, 40b614 <rtnl_talk_iov@@Base+0x2f8>
  40b458:	ldur	w9, [x29, #-12]
  40b45c:	cbnz	w9, 40b4c4 <rtnl_talk_iov@@Base+0x1a8>
  40b460:	ldr	w9, [x22, #12]
  40b464:	ldr	w10, [x21, #8]
  40b468:	cmp	w9, w10
  40b46c:	b.ne	40b4c4 <rtnl_talk_iov@@Base+0x1a8>  // b.any
  40b470:	ldr	w9, [x22, #8]
  40b474:	cmp	w9, w27
  40b478:	b.hi	40b4c4 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40b47c:	cmp	x23, x9
  40b480:	b.hi	40b4c4 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40b484:	ldrh	w9, [x22, #4]
  40b488:	cmp	w9, #0x2
  40b48c:	b.eq	40b4e0 <rtnl_talk_iov@@Base+0x1c4>  // b.none
  40b490:	cbnz	x19, 40b604 <rtnl_talk_iov@@Base+0x2e8>
  40b494:	ldr	x3, [x11]
  40b498:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b49c:	mov	w1, #0x14                  	// #20
  40b4a0:	mov	w2, #0x1                   	// #1
  40b4a4:	add	x0, x0, #0x209
  40b4a8:	str	w12, [sp, #12]
  40b4ac:	bl	404f90 <fwrite@plt>
  40b4b0:	adrp	x11, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b4b4:	ldr	w12, [sp, #12]
  40b4b8:	ldr	x11, [x11, #3992]
  40b4bc:	adrp	x13, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b4c0:	add	x13, x13, #0xfd4
  40b4c4:	add	w8, w26, #0x3
  40b4c8:	and	x8, x8, #0xfffffffc
  40b4cc:	sub	w25, w25, w8
  40b4d0:	cmp	w25, #0xf
  40b4d4:	add	x22, x22, x8
  40b4d8:	b.hi	40b444 <rtnl_talk_iov@@Base+0x128>  // b.pmore
  40b4dc:	b	40b5a0 <rtnl_talk_iov@@Base+0x284>
  40b4e0:	cmp	w8, #0x13
  40b4e4:	b.ls	40b674 <rtnl_talk_iov@@Base+0x358>  // b.plast
  40b4e8:	ldr	w26, [x22, #16]
  40b4ec:	str	w12, [sp, #12]
  40b4f0:	cbz	w26, 40b518 <rtnl_talk_iov@@Base+0x1fc>
  40b4f4:	neg	w25, w26
  40b4f8:	bl	4050c0 <__errno_location@plt>
  40b4fc:	str	w25, [x0]
  40b500:	ldr	w8, [x21, #36]
  40b504:	ldr	w9, [sp, #12]
  40b508:	cmp	w8, #0x4
  40b50c:	cset	w8, eq  // eq = none
  40b510:	orr	w8, w8, w9
  40b514:	tbz	w8, #0, 40b570 <rtnl_talk_iov@@Base+0x254>
  40b518:	ldr	x0, [sp, #16]
  40b51c:	cbz	x19, 40b528 <rtnl_talk_iov@@Base+0x20c>
  40b520:	str	x0, [x19]
  40b524:	b	40b52c <rtnl_talk_iov@@Base+0x210>
  40b528:	bl	404f30 <free@plt>
  40b52c:	cmp	x24, x20
  40b530:	b.cs	40b688 <rtnl_talk_iov@@Base+0x36c>  // b.hs, b.nlast
  40b534:	ldr	w0, [x21]
  40b538:	add	x1, sp, #0x18
  40b53c:	add	x2, sp, #0x10
  40b540:	bl	40c3e0 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b544:	adrp	x11, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b548:	ldr	x11, [x11, #3992]
  40b54c:	ldr	w12, [sp, #12]
  40b550:	add	x8, x24, #0x1
  40b554:	adrp	x13, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b558:	mov	w25, w0
  40b55c:	mov	w28, w24
  40b560:	mov	x24, x8
  40b564:	add	x13, x13, #0xfd4
  40b568:	tbz	w0, #31, 40b42c <rtnl_talk_iov@@Base+0x110>
  40b56c:	b	40b640 <rtnl_talk_iov@@Base+0x324>
  40b570:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b574:	ldr	w8, [x22, #16]
  40b578:	ldr	x9, [x9, #3992]
  40b57c:	neg	w0, w8
  40b580:	ldr	x25, [x9]
  40b584:	bl	404e50 <strerror@plt>
  40b588:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b58c:	mov	x2, x0
  40b590:	mov	x0, x25
  40b594:	add	x1, x1, #0x21e
  40b598:	bl	405100 <fprintf@plt>
  40b59c:	b	40b518 <rtnl_talk_iov@@Base+0x1fc>
  40b5a0:	ldr	x0, [sp, #16]
  40b5a4:	mov	x28, x13
  40b5a8:	mov	w26, w12
  40b5ac:	mov	x22, x11
  40b5b0:	bl	404f30 <free@plt>
  40b5b4:	ldrb	w8, [sp, #72]
  40b5b8:	tbnz	w8, #5, 40b5ec <rtnl_talk_iov@@Base+0x2d0>
  40b5bc:	cbnz	w25, 40b694 <rtnl_talk_iov@@Base+0x378>
  40b5c0:	ldr	w0, [x21]
  40b5c4:	add	x1, sp, #0x18
  40b5c8:	add	x2, sp, #0x10
  40b5cc:	bl	40c3e0 <__parse_rtattr_nested_compat@@Base+0x6c>
  40b5d0:	mov	w25, w0
  40b5d4:	add	x8, x24, #0x1
  40b5d8:	mov	x11, x22
  40b5dc:	mov	w12, w26
  40b5e0:	mov	x13, x28
  40b5e4:	tbz	w0, #31, 40b424 <rtnl_talk_iov@@Base+0x108>
  40b5e8:	b	40b640 <rtnl_talk_iov@@Base+0x324>
  40b5ec:	ldr	x3, [x22]
  40b5f0:	mov	w1, #0x12                  	// #18
  40b5f4:	mov	w2, #0x1                   	// #1
  40b5f8:	mov	x0, x28
  40b5fc:	bl	404f90 <fwrite@plt>
  40b600:	b	40b5c0 <rtnl_talk_iov@@Base+0x2a4>
  40b604:	ldr	x8, [sp, #16]
  40b608:	mov	w25, wzr
  40b60c:	str	x8, [x19]
  40b610:	b	40b640 <rtnl_talk_iov@@Base+0x324>
  40b614:	ldrb	w8, [sp, #72]
  40b618:	ldr	x3, [x11]
  40b61c:	tbz	w8, #5, 40b6b8 <rtnl_talk_iov@@Base+0x39c>
  40b620:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b624:	add	x0, x0, #0xfa3
  40b628:	mov	w1, #0x12                  	// #18
  40b62c:	mov	w2, #0x1                   	// #1
  40b630:	bl	404f90 <fwrite@plt>
  40b634:	ldr	x0, [sp, #16]
  40b638:	bl	404f30 <free@plt>
  40b63c:	mov	w25, #0xffffffff            	// #-1
  40b640:	mov	w0, w25
  40b644:	ldp	x20, x19, [sp, #192]
  40b648:	ldp	x22, x21, [sp, #176]
  40b64c:	ldp	x24, x23, [sp, #160]
  40b650:	ldp	x26, x25, [sp, #144]
  40b654:	ldp	x28, x27, [sp, #128]
  40b658:	ldp	x29, x30, [sp, #112]
  40b65c:	add	sp, sp, #0xd0
  40b660:	ret
  40b664:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b668:	add	x0, x0, #0x1d3
  40b66c:	bl	404c40 <perror@plt>
  40b670:	b	40b63c <rtnl_talk_iov@@Base+0x320>
  40b674:	ldr	x3, [x11]
  40b678:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b67c:	add	x0, x0, #0xf2e
  40b680:	mov	w1, #0x10                  	// #16
  40b684:	b	40b62c <rtnl_talk_iov@@Base+0x310>
  40b688:	cmp	w26, #0x0
  40b68c:	csinv	w25, wzr, w28, eq  // eq = none
  40b690:	b	40b640 <rtnl_talk_iov@@Base+0x324>
  40b694:	ldr	x0, [x22]
  40b698:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b69c:	add	x1, x1, #0xfe7
  40b6a0:	mov	w2, w25
  40b6a4:	b	40b6c8 <rtnl_talk_iov@@Base+0x3ac>
  40b6a8:	ldr	x0, [x11]
  40b6ac:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b6b0:	add	x1, x1, #0x1ec
  40b6b4:	b	40b6c8 <rtnl_talk_iov@@Base+0x3ac>
  40b6b8:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b6bc:	add	x1, x1, #0xfb6
  40b6c0:	mov	x0, x3
  40b6c4:	mov	w2, w26
  40b6c8:	bl	405100 <fprintf@plt>
  40b6cc:	mov	w0, #0x1                   	// #1
  40b6d0:	bl	404c30 <exit@plt>

000000000040b6d4 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40b6d4:	sub	sp, sp, #0x20
  40b6d8:	stp	x29, x30, [sp, #16]
  40b6dc:	ldr	w8, [x1]
  40b6e0:	mov	x3, x2
  40b6e4:	mov	w2, #0x1                   	// #1
  40b6e8:	mov	w4, wzr
  40b6ec:	stp	x1, x8, [sp]
  40b6f0:	mov	x1, sp
  40b6f4:	add	x29, sp, #0x10
  40b6f8:	bl	40b324 <rtnl_talk_iov@@Base+0x8>
  40b6fc:	ldp	x29, x30, [sp, #16]
  40b700:	add	sp, sp, #0x20
  40b704:	ret

000000000040b708 <rtnl_listen_all_nsid@@Base>:
  40b708:	stp	x29, x30, [sp, #-32]!
  40b70c:	mov	x29, sp
  40b710:	mov	w8, #0x1                   	// #1
  40b714:	str	w8, [x29, #28]
  40b718:	str	x19, [sp, #16]
  40b71c:	mov	x19, x0
  40b720:	ldr	w0, [x0]
  40b724:	add	x3, x29, #0x1c
  40b728:	mov	w1, #0x10e                 	// #270
  40b72c:	mov	w2, #0x8                   	// #8
  40b730:	mov	w4, #0x4                   	// #4
  40b734:	bl	404d70 <setsockopt@plt>
  40b738:	tbnz	w0, #31, 40b758 <rtnl_listen_all_nsid@@Base+0x50>
  40b73c:	ldr	w8, [x19, #48]
  40b740:	mov	w0, wzr
  40b744:	orr	w8, w8, #0x1
  40b748:	str	w8, [x19, #48]
  40b74c:	ldr	x19, [sp, #16]
  40b750:	ldp	x29, x30, [sp], #32
  40b754:	ret
  40b758:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b75c:	add	x0, x0, #0xf3f
  40b760:	bl	404c40 <perror@plt>
  40b764:	mov	w0, #0xffffffff            	// #-1
  40b768:	b	40b74c <rtnl_listen_all_nsid@@Base+0x44>

000000000040b76c <rtnl_listen@@Base>:
  40b76c:	stp	x29, x30, [sp, #-96]!
  40b770:	stp	x28, x27, [sp, #16]
  40b774:	stp	x26, x25, [sp, #32]
  40b778:	stp	x24, x23, [sp, #48]
  40b77c:	stp	x22, x21, [sp, #64]
  40b780:	stp	x20, x19, [sp, #80]
  40b784:	mov	x29, sp
  40b788:	sub	sp, sp, #0x6, lsl #12
  40b78c:	sub	sp, sp, #0x70
  40b790:	sub	x27, x29, #0x60
  40b794:	adrp	x8, 40d000 <_IO_stdin_used@@Base+0xa00>
  40b798:	sub	x9, x29, #0x18
  40b79c:	mov	w10, #0xc                   	// #12
  40b7a0:	add	x8, x8, #0x238
  40b7a4:	stur	x9, [x29, #-96]
  40b7a8:	sub	x9, x29, #0x28
  40b7ac:	str	w10, [x27, #8]
  40b7b0:	mov	w10, #0x1                   	// #1
  40b7b4:	stp	x9, x10, [x29, #-80]
  40b7b8:	ldr	x9, [x8]
  40b7bc:	ldr	w8, [x8, #8]
  40b7c0:	stp	xzr, xzr, [x29, #-64]
  40b7c4:	str	wzr, [x27, #48]
  40b7c8:	stur	x9, [x29, #-24]
  40b7cc:	str	w8, [x27, #80]
  40b7d0:	ldrb	w8, [x0, #48]
  40b7d4:	mov	x19, x2
  40b7d8:	mov	x20, x0
  40b7dc:	mov	x21, x1
  40b7e0:	tbz	w8, #0, 40b7f0 <rtnl_listen@@Base+0x84>
  40b7e4:	add	x8, sp, #0x10
  40b7e8:	mov	w9, #0x2000                	// #8192
  40b7ec:	stp	x8, x9, [x29, #-64]
  40b7f0:	adrp	x28, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40b7f4:	ldr	x28, [x28, #3992]
  40b7f8:	add	x8, sp, #0x2, lsl #12
  40b7fc:	add	x8, x8, #0x10
  40b800:	mov	w22, #0x4000                	// #16384
  40b804:	mov	w23, #0xffffffff            	// #-1
  40b808:	stur	x8, [x29, #-40]
  40b80c:	stur	x22, [x29, #-32]
  40b810:	ldr	w0, [x20]
  40b814:	sub	x1, x29, #0x60
  40b818:	mov	w2, wzr
  40b81c:	bl	404bf0 <recvmsg@plt>
  40b820:	mov	x24, x0
  40b824:	tbnz	w24, #31, 40b8f4 <rtnl_listen@@Base+0x188>
  40b828:	cbz	w24, 40b9a4 <rtnl_listen@@Base+0x238>
  40b82c:	ldr	w2, [x27, #8]
  40b830:	cmp	w2, #0xc
  40b834:	b.ne	40b9b8 <rtnl_listen@@Base+0x24c>  // b.any
  40b838:	ldrb	w8, [x20, #48]
  40b83c:	tbz	w8, #0, 40b894 <rtnl_listen@@Base+0x128>
  40b840:	ldur	x1, [x29, #-64]
  40b844:	str	w23, [sp, #8]
  40b848:	cbz	x1, 40b894 <rtnl_listen@@Base+0x128>
  40b84c:	ldur	x8, [x29, #-56]
  40b850:	cmp	x8, #0x10
  40b854:	b.cc	40b894 <rtnl_listen@@Base+0x128>  // b.lo, b.ul, b.last
  40b858:	ldr	w8, [x1, #8]
  40b85c:	cmp	w8, #0x10e
  40b860:	b.ne	40b884 <rtnl_listen@@Base+0x118>  // b.any
  40b864:	ldr	w8, [x1, #12]
  40b868:	cmp	w8, #0x8
  40b86c:	b.ne	40b884 <rtnl_listen@@Base+0x118>  // b.any
  40b870:	ldr	x8, [x1]
  40b874:	cmp	x8, #0x14
  40b878:	b.ne	40b884 <rtnl_listen@@Base+0x118>  // b.any
  40b87c:	ldr	w8, [x1, #16]
  40b880:	str	w8, [sp, #8]
  40b884:	sub	x0, x29, #0x60
  40b888:	bl	404c50 <__cmsg_nxthdr@plt>
  40b88c:	mov	x1, x0
  40b890:	cbnz	x0, 40b858 <rtnl_listen@@Base+0xec>
  40b894:	cmp	w24, #0x10
  40b898:	b.cc	40b8e4 <rtnl_listen@@Base+0x178>  // b.lo, b.ul, b.last
  40b89c:	add	x25, sp, #0x2, lsl #12
  40b8a0:	add	x25, x25, #0x10
  40b8a4:	ldr	w26, [x25]
  40b8a8:	cmp	w26, w24
  40b8ac:	b.gt	40b95c <rtnl_listen@@Base+0x1f0>
  40b8b0:	sub	w8, w26, #0x10
  40b8b4:	tbnz	w8, #31, 40b95c <rtnl_listen@@Base+0x1f0>
  40b8b8:	add	x0, sp, #0x8
  40b8bc:	mov	x1, x25
  40b8c0:	mov	x2, x19
  40b8c4:	blr	x21
  40b8c8:	tbnz	w0, #31, 40b980 <rtnl_listen@@Base+0x214>
  40b8cc:	add	w8, w26, #0x3
  40b8d0:	and	x8, x8, #0xfffffffc
  40b8d4:	sub	w24, w24, w8
  40b8d8:	cmp	w24, #0xf
  40b8dc:	add	x25, x25, x8
  40b8e0:	b.hi	40b8a4 <rtnl_listen@@Base+0x138>  // b.pmore
  40b8e4:	ldrb	w8, [x27, #48]
  40b8e8:	tbnz	w8, #5, 40b940 <rtnl_listen@@Base+0x1d4>
  40b8ec:	cbz	w24, 40b80c <rtnl_listen@@Base+0xa0>
  40b8f0:	b	40b9c8 <rtnl_listen@@Base+0x25c>
  40b8f4:	bl	4050c0 <__errno_location@plt>
  40b8f8:	mov	x24, x0
  40b8fc:	ldr	w0, [x0]
  40b900:	cmp	w0, #0x4
  40b904:	b.eq	40b80c <rtnl_listen@@Base+0xa0>  // b.none
  40b908:	cmp	w0, #0xb
  40b90c:	b.eq	40b80c <rtnl_listen@@Base+0xa0>  // b.none
  40b910:	ldr	x25, [x28]
  40b914:	bl	404e50 <strerror@plt>
  40b918:	ldr	w3, [x24]
  40b91c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b920:	mov	x2, x0
  40b924:	mov	x0, x25
  40b928:	add	x1, x1, #0xf57
  40b92c:	bl	405100 <fprintf@plt>
  40b930:	ldr	w8, [x24]
  40b934:	cmp	w8, #0x69
  40b938:	b.eq	40b80c <rtnl_listen@@Base+0xa0>  // b.none
  40b93c:	b	40b97c <rtnl_listen@@Base+0x210>
  40b940:	ldr	x3, [x28]
  40b944:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b948:	mov	w1, #0x12                  	// #18
  40b94c:	mov	w2, #0x1                   	// #1
  40b950:	add	x0, x0, #0xfd4
  40b954:	bl	404f90 <fwrite@plt>
  40b958:	b	40b80c <rtnl_listen@@Base+0xa0>
  40b95c:	ldrb	w8, [x27, #48]
  40b960:	ldr	x3, [x28]
  40b964:	tbz	w8, #5, 40b9dc <rtnl_listen@@Base+0x270>
  40b968:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b96c:	add	x0, x0, #0xfa3
  40b970:	mov	w1, #0x12                  	// #18
  40b974:	mov	w2, #0x1                   	// #1
  40b978:	bl	404f90 <fwrite@plt>
  40b97c:	mov	w0, #0xffffffff            	// #-1
  40b980:	add	sp, sp, #0x6, lsl #12
  40b984:	add	sp, sp, #0x70
  40b988:	ldp	x20, x19, [sp, #80]
  40b98c:	ldp	x22, x21, [sp, #64]
  40b990:	ldp	x24, x23, [sp, #48]
  40b994:	ldp	x26, x25, [sp, #32]
  40b998:	ldp	x28, x27, [sp, #16]
  40b99c:	ldp	x29, x30, [sp], #96
  40b9a0:	ret
  40b9a4:	ldr	x3, [x28]
  40b9a8:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b9ac:	add	x0, x0, #0xf76
  40b9b0:	mov	w1, #0xf                   	// #15
  40b9b4:	b	40b974 <rtnl_listen@@Base+0x208>
  40b9b8:	ldr	x0, [x28]
  40b9bc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b9c0:	add	x1, x1, #0xf86
  40b9c4:	b	40b9ec <rtnl_listen@@Base+0x280>
  40b9c8:	ldr	x0, [x28]
  40b9cc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b9d0:	add	x1, x1, #0xfe7
  40b9d4:	mov	w2, w24
  40b9d8:	b	40b9ec <rtnl_listen@@Base+0x280>
  40b9dc:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40b9e0:	add	x1, x1, #0xfb6
  40b9e4:	mov	x0, x3
  40b9e8:	mov	w2, w26
  40b9ec:	bl	405100 <fprintf@plt>
  40b9f0:	mov	w0, #0x1                   	// #1
  40b9f4:	bl	404c30 <exit@plt>

000000000040b9f8 <rtnl_from_file@@Base>:
  40b9f8:	stp	x29, x30, [sp, #-64]!
  40b9fc:	stp	x28, x23, [sp, #16]
  40ba00:	stp	x22, x21, [sp, #32]
  40ba04:	stp	x20, x19, [sp, #48]
  40ba08:	mov	x29, sp
  40ba0c:	sub	sp, sp, #0x4, lsl #12
  40ba10:	mov	x8, sp
  40ba14:	mov	x20, x2
  40ba18:	mov	x21, x1
  40ba1c:	mov	x19, x0
  40ba20:	add	x22, x8, #0x10
  40ba24:	mov	x0, sp
  40ba28:	mov	w1, #0x1                   	// #1
  40ba2c:	mov	w2, #0x10                  	// #16
  40ba30:	mov	x3, x19
  40ba34:	bl	404f00 <fread@plt>
  40ba38:	cmp	x0, #0x10
  40ba3c:	b.ne	40bac0 <rtnl_from_file@@Base+0xc8>  // b.any
  40ba40:	ldr	w23, [sp]
  40ba44:	cmp	w23, #0x4, lsl #12
  40ba48:	b.hi	40ba90 <rtnl_from_file@@Base+0x98>  // b.pmore
  40ba4c:	sub	w8, w23, #0x10
  40ba50:	tbnz	w8, #31, 40ba90 <rtnl_from_file@@Base+0x98>
  40ba54:	sub	w8, w23, #0xd
  40ba58:	and	w23, w8, #0xfffffffc
  40ba5c:	mov	w1, #0x1                   	// #1
  40ba60:	mov	x0, x22
  40ba64:	mov	x2, x23
  40ba68:	mov	x3, x19
  40ba6c:	bl	404f00 <fread@plt>
  40ba70:	cmp	x0, x23
  40ba74:	b.ne	40bad8 <rtnl_from_file@@Base+0xe0>  // b.any
  40ba78:	mov	x1, sp
  40ba7c:	mov	x0, xzr
  40ba80:	mov	x2, x20
  40ba84:	blr	x21
  40ba88:	tbz	w0, #31, 40ba24 <rtnl_from_file@@Base+0x2c>
  40ba8c:	b	40baf4 <rtnl_from_file@@Base+0xfc>
  40ba90:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40ba94:	ldr	x8, [x8, #3992]
  40ba98:	mov	x0, x19
  40ba9c:	ldr	x20, [x8]
  40baa0:	bl	404cb0 <ftell@plt>
  40baa4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40baa8:	mov	x3, x0
  40baac:	add	x1, x1, #0x37
  40bab0:	mov	x0, x20
  40bab4:	mov	w2, w23
  40bab8:	bl	405100 <fprintf@plt>
  40babc:	b	40baf0 <rtnl_from_file@@Base+0xf8>
  40bac0:	cbnz	x0, 40bad8 <rtnl_from_file@@Base+0xe0>
  40bac4:	mov	x0, x19
  40bac8:	bl	404eb0 <feof@plt>
  40bacc:	cbz	w0, 40bad8 <rtnl_from_file@@Base+0xe0>
  40bad0:	mov	w0, wzr
  40bad4:	b	40baf4 <rtnl_from_file@@Base+0xfc>
  40bad8:	mov	x0, x19
  40badc:	bl	405130 <ferror@plt>
  40bae0:	cbnz	w0, 40bb0c <rtnl_from_file@@Base+0x114>
  40bae4:	mov	x0, x19
  40bae8:	bl	404eb0 <feof@plt>
  40baec:	cbnz	w0, 40bb1c <rtnl_from_file@@Base+0x124>
  40baf0:	mov	w0, #0xffffffff            	// #-1
  40baf4:	add	sp, sp, #0x4, lsl #12
  40baf8:	ldp	x20, x19, [sp, #48]
  40bafc:	ldp	x22, x21, [sp, #32]
  40bb00:	ldp	x28, x23, [sp, #16]
  40bb04:	ldp	x29, x30, [sp], #64
  40bb08:	ret
  40bb0c:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40bb10:	add	x0, x0, #0xffe
  40bb14:	bl	404c40 <perror@plt>
  40bb18:	b	40bae4 <rtnl_from_file@@Base+0xec>
  40bb1c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bb20:	ldr	x8, [x8, #3992]
  40bb24:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bb28:	add	x0, x0, #0x14
  40bb2c:	mov	w1, #0x22                  	// #34
  40bb30:	ldr	x3, [x8]
  40bb34:	mov	w2, #0x1                   	// #1
  40bb38:	bl	404f90 <fwrite@plt>
  40bb3c:	b	40baf0 <rtnl_from_file@@Base+0xf8>

000000000040bb40 <addattr@@Base>:
  40bb40:	stp	x29, x30, [sp, #-16]!
  40bb44:	ldr	w9, [x0]
  40bb48:	mov	x29, sp
  40bb4c:	add	w9, w9, #0x3
  40bb50:	and	x10, x9, #0xfffffffc
  40bb54:	add	w9, w10, #0x4
  40bb58:	cmp	w9, w1
  40bb5c:	b.hi	40bb84 <addattr@@Base+0x44>  // b.pmore
  40bb60:	mov	w8, wzr
  40bb64:	add	x10, x0, x10
  40bb68:	mov	w11, #0x4                   	// #4
  40bb6c:	strh	w2, [x10, #2]
  40bb70:	strh	w11, [x10]
  40bb74:	str	w9, [x0]
  40bb78:	mov	w0, w8
  40bb7c:	ldp	x29, x30, [sp], #16
  40bb80:	ret
  40bb84:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bb88:	ldr	x9, [x9, #3992]
  40bb8c:	mov	w8, w1
  40bb90:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bb94:	add	x1, x1, #0x5a
  40bb98:	ldr	x0, [x9]
  40bb9c:	mov	w2, w8
  40bba0:	bl	405100 <fprintf@plt>
  40bba4:	mov	w8, #0xffffffff            	// #-1
  40bba8:	b	40bb78 <addattr@@Base+0x38>

000000000040bbac <addattr_l@@Base>:
  40bbac:	stp	x29, x30, [sp, #-32]!
  40bbb0:	stp	x20, x19, [sp, #16]
  40bbb4:	ldr	w9, [x0]
  40bbb8:	add	w10, w4, #0x7
  40bbbc:	and	w10, w10, #0xfffffffc
  40bbc0:	mov	x29, sp
  40bbc4:	add	w9, w9, #0x3
  40bbc8:	and	x9, x9, #0xfffffffc
  40bbcc:	add	w20, w9, w10
  40bbd0:	cmp	w20, w1
  40bbd4:	b.hi	40bc14 <addattr_l@@Base+0x68>  // b.pmore
  40bbd8:	mov	x19, x0
  40bbdc:	add	x8, x0, x9
  40bbe0:	add	w9, w4, #0x4
  40bbe4:	strh	w2, [x8, #2]
  40bbe8:	strh	w9, [x8]
  40bbec:	cbz	w4, 40bc00 <addattr_l@@Base+0x54>
  40bbf0:	sxtw	x2, w4
  40bbf4:	add	x0, x8, #0x4
  40bbf8:	mov	x1, x3
  40bbfc:	bl	404be0 <memcpy@plt>
  40bc00:	mov	w0, wzr
  40bc04:	str	w20, [x19]
  40bc08:	ldp	x20, x19, [sp, #16]
  40bc0c:	ldp	x29, x30, [sp], #32
  40bc10:	ret
  40bc14:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bc18:	ldr	x9, [x9, #3992]
  40bc1c:	mov	w8, w1
  40bc20:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bc24:	add	x1, x1, #0x5a
  40bc28:	ldr	x0, [x9]
  40bc2c:	mov	w2, w8
  40bc30:	bl	405100 <fprintf@plt>
  40bc34:	mov	w0, #0xffffffff            	// #-1
  40bc38:	b	40bc08 <addattr_l@@Base+0x5c>

000000000040bc3c <addattr8@@Base>:
  40bc3c:	stp	x29, x30, [sp, #-16]!
  40bc40:	ldr	w9, [x0]
  40bc44:	mov	x29, sp
  40bc48:	add	w9, w9, #0x3
  40bc4c:	and	x10, x9, #0xfffffffc
  40bc50:	add	w9, w10, #0x8
  40bc54:	cmp	w9, w1
  40bc58:	b.hi	40bc84 <addattr8@@Base+0x48>  // b.pmore
  40bc5c:	mov	w8, wzr
  40bc60:	add	x10, x0, x10
  40bc64:	mov	w11, #0x5                   	// #5
  40bc68:	strh	w2, [x10, #2]
  40bc6c:	strh	w11, [x10]
  40bc70:	strb	w3, [x10, #4]
  40bc74:	str	w9, [x0]
  40bc78:	mov	w0, w8
  40bc7c:	ldp	x29, x30, [sp], #16
  40bc80:	ret
  40bc84:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bc88:	ldr	x9, [x9, #3992]
  40bc8c:	mov	w8, w1
  40bc90:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bc94:	add	x1, x1, #0x5a
  40bc98:	ldr	x0, [x9]
  40bc9c:	mov	w2, w8
  40bca0:	bl	405100 <fprintf@plt>
  40bca4:	mov	w8, #0xffffffff            	// #-1
  40bca8:	b	40bc78 <addattr8@@Base+0x3c>

000000000040bcac <addattr16@@Base>:
  40bcac:	stp	x29, x30, [sp, #-16]!
  40bcb0:	ldr	w9, [x0]
  40bcb4:	mov	x29, sp
  40bcb8:	add	w9, w9, #0x3
  40bcbc:	and	x10, x9, #0xfffffffc
  40bcc0:	add	w9, w10, #0x8
  40bcc4:	cmp	w9, w1
  40bcc8:	b.hi	40bcf4 <addattr16@@Base+0x48>  // b.pmore
  40bccc:	mov	w8, wzr
  40bcd0:	add	x10, x0, x10
  40bcd4:	mov	w11, #0x6                   	// #6
  40bcd8:	strh	w2, [x10, #2]
  40bcdc:	strh	w11, [x10]
  40bce0:	strh	w3, [x10, #4]
  40bce4:	str	w9, [x0]
  40bce8:	mov	w0, w8
  40bcec:	ldp	x29, x30, [sp], #16
  40bcf0:	ret
  40bcf4:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bcf8:	ldr	x9, [x9, #3992]
  40bcfc:	mov	w8, w1
  40bd00:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bd04:	add	x1, x1, #0x5a
  40bd08:	ldr	x0, [x9]
  40bd0c:	mov	w2, w8
  40bd10:	bl	405100 <fprintf@plt>
  40bd14:	mov	w8, #0xffffffff            	// #-1
  40bd18:	b	40bce8 <addattr16@@Base+0x3c>

000000000040bd1c <addattr32@@Base>:
  40bd1c:	stp	x29, x30, [sp, #-16]!
  40bd20:	ldr	w9, [x0]
  40bd24:	mov	x29, sp
  40bd28:	add	w9, w9, #0x3
  40bd2c:	and	x10, x9, #0xfffffffc
  40bd30:	add	w9, w10, #0x8
  40bd34:	cmp	w9, w1
  40bd38:	b.hi	40bd64 <addattr32@@Base+0x48>  // b.pmore
  40bd3c:	mov	w8, wzr
  40bd40:	add	x10, x0, x10
  40bd44:	mov	w11, #0x8                   	// #8
  40bd48:	strh	w2, [x10, #2]
  40bd4c:	strh	w11, [x10]
  40bd50:	str	w3, [x10, #4]
  40bd54:	str	w9, [x0]
  40bd58:	mov	w0, w8
  40bd5c:	ldp	x29, x30, [sp], #16
  40bd60:	ret
  40bd64:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bd68:	ldr	x9, [x9, #3992]
  40bd6c:	mov	w8, w1
  40bd70:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bd74:	add	x1, x1, #0x5a
  40bd78:	ldr	x0, [x9]
  40bd7c:	mov	w2, w8
  40bd80:	bl	405100 <fprintf@plt>
  40bd84:	mov	w8, #0xffffffff            	// #-1
  40bd88:	b	40bd58 <addattr32@@Base+0x3c>

000000000040bd8c <addattr64@@Base>:
  40bd8c:	stp	x29, x30, [sp, #-16]!
  40bd90:	ldr	w9, [x0]
  40bd94:	mov	x29, sp
  40bd98:	add	w9, w9, #0x3
  40bd9c:	and	x10, x9, #0xfffffffc
  40bda0:	add	w9, w10, #0xc
  40bda4:	cmp	w9, w1
  40bda8:	b.hi	40bdd4 <addattr64@@Base+0x48>  // b.pmore
  40bdac:	mov	w8, wzr
  40bdb0:	add	x10, x0, x10
  40bdb4:	mov	w11, #0xc                   	// #12
  40bdb8:	strh	w2, [x10, #2]
  40bdbc:	strh	w11, [x10]
  40bdc0:	stur	x3, [x10, #4]
  40bdc4:	str	w9, [x0]
  40bdc8:	mov	w0, w8
  40bdcc:	ldp	x29, x30, [sp], #16
  40bdd0:	ret
  40bdd4:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bdd8:	ldr	x9, [x9, #3992]
  40bddc:	mov	w8, w1
  40bde0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bde4:	add	x1, x1, #0x5a
  40bde8:	ldr	x0, [x9]
  40bdec:	mov	w2, w8
  40bdf0:	bl	405100 <fprintf@plt>
  40bdf4:	mov	w8, #0xffffffff            	// #-1
  40bdf8:	b	40bdc8 <addattr64@@Base+0x3c>

000000000040bdfc <addattrstrz@@Base>:
  40bdfc:	stp	x29, x30, [sp, #-48]!
  40be00:	stp	x22, x21, [sp, #16]
  40be04:	mov	x22, x0
  40be08:	mov	x0, x3
  40be0c:	stp	x20, x19, [sp, #32]
  40be10:	mov	x29, sp
  40be14:	mov	x19, x3
  40be18:	mov	w20, w2
  40be1c:	mov	w21, w1
  40be20:	bl	404c10 <strlen@plt>
  40be24:	add	w4, w0, #0x1
  40be28:	mov	x0, x22
  40be2c:	mov	w1, w21
  40be30:	mov	w2, w20
  40be34:	mov	x3, x19
  40be38:	ldp	x20, x19, [sp, #32]
  40be3c:	ldp	x22, x21, [sp, #16]
  40be40:	ldp	x29, x30, [sp], #48
  40be44:	b	40bbac <addattr_l@@Base>

000000000040be48 <addraw_l@@Base>:
  40be48:	stp	x29, x30, [sp, #-48]!
  40be4c:	stp	x20, x19, [sp, #32]
  40be50:	ldr	w9, [x0]
  40be54:	add	w10, w3, #0x3
  40be58:	str	x21, [sp, #16]
  40be5c:	and	w21, w10, #0xfffffffc
  40be60:	add	w9, w9, #0x3
  40be64:	and	w9, w9, #0xfffffffc
  40be68:	add	w10, w9, w21
  40be6c:	cmp	w10, w1
  40be70:	mov	x29, sp
  40be74:	b.hi	40bedc <addraw_l@@Base+0x94>  // b.pmore
  40be78:	mov	w20, w3
  40be7c:	sxtw	x8, w20
  40be80:	mov	x19, x0
  40be84:	add	x0, x0, w9, uxtw
  40be88:	mov	x1, x2
  40be8c:	mov	x2, x8
  40be90:	bl	404be0 <memcpy@plt>
  40be94:	ldr	w8, [x19]
  40be98:	sub	w2, w21, w20
  40be9c:	mov	w1, wzr
  40bea0:	add	w8, w8, #0x3
  40bea4:	and	w8, w8, #0xfffffffc
  40bea8:	add	x8, x19, x8
  40beac:	add	x0, x8, w20, sxtw
  40beb0:	bl	404dc0 <memset@plt>
  40beb4:	ldr	w8, [x19]
  40beb8:	mov	w0, wzr
  40bebc:	add	w8, w8, #0x3
  40bec0:	and	w8, w8, #0xfffffffc
  40bec4:	add	w8, w8, w21
  40bec8:	str	w8, [x19]
  40becc:	ldp	x20, x19, [sp, #32]
  40bed0:	ldr	x21, [sp, #16]
  40bed4:	ldp	x29, x30, [sp], #48
  40bed8:	ret
  40bedc:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bee0:	ldr	x9, [x9, #3992]
  40bee4:	mov	w8, w1
  40bee8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40beec:	add	x1, x1, #0x89
  40bef0:	ldr	x0, [x9]
  40bef4:	mov	w2, w8
  40bef8:	bl	405100 <fprintf@plt>
  40befc:	mov	w0, #0xffffffff            	// #-1
  40bf00:	b	40becc <addraw_l@@Base+0x84>

000000000040bf04 <addattr_nest@@Base>:
  40bf04:	stp	x29, x30, [sp, #-32]!
  40bf08:	ldr	w9, [x0]
  40bf0c:	str	x19, [sp, #16]
  40bf10:	mov	x29, sp
  40bf14:	add	w9, w9, #0x3
  40bf18:	and	w10, w9, #0xfffffffc
  40bf1c:	add	w9, w10, #0x4
  40bf20:	cmp	w9, w1
  40bf24:	add	x19, x0, x10
  40bf28:	b.hi	40bf4c <addattr_nest@@Base+0x48>  // b.pmore
  40bf2c:	mov	w8, #0x4                   	// #4
  40bf30:	strh	w2, [x19, #2]
  40bf34:	strh	w8, [x19]
  40bf38:	str	w9, [x0]
  40bf3c:	mov	x0, x19
  40bf40:	ldr	x19, [sp, #16]
  40bf44:	ldp	x29, x30, [sp], #32
  40bf48:	ret
  40bf4c:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40bf50:	ldr	x9, [x9, #3992]
  40bf54:	mov	w8, w1
  40bf58:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40bf5c:	add	x1, x1, #0x5a
  40bf60:	ldr	x0, [x9]
  40bf64:	mov	w2, w8
  40bf68:	bl	405100 <fprintf@plt>
  40bf6c:	b	40bf3c <addattr_nest@@Base+0x38>

000000000040bf70 <addattr_nest_end@@Base>:
  40bf70:	ldr	w8, [x0]
  40bf74:	add	w9, w8, #0x3
  40bf78:	and	w9, w9, #0xfffc
  40bf7c:	add	w9, w0, w9
  40bf80:	sub	w9, w9, w1
  40bf84:	mov	w0, w8
  40bf88:	strh	w9, [x1]
  40bf8c:	ret

000000000040bf90 <addattr_nest_compat@@Base>:
  40bf90:	stp	x29, x30, [sp, #-48]!
  40bf94:	stp	x22, x21, [sp, #16]
  40bf98:	stp	x20, x19, [sp, #32]
  40bf9c:	ldr	w8, [x0]
  40bfa0:	mov	x29, sp
  40bfa4:	mov	w19, w2
  40bfa8:	mov	w20, w1
  40bfac:	add	w8, w8, #0x3
  40bfb0:	and	w8, w8, #0xfffffffc
  40bfb4:	mov	x21, x0
  40bfb8:	add	x22, x0, x8
  40bfbc:	bl	40bbac <addattr_l@@Base>
  40bfc0:	mov	x0, x21
  40bfc4:	mov	w1, w20
  40bfc8:	mov	w2, w19
  40bfcc:	bl	40bf04 <addattr_nest@@Base>
  40bfd0:	mov	x0, x22
  40bfd4:	ldp	x20, x19, [sp, #32]
  40bfd8:	ldp	x22, x21, [sp, #16]
  40bfdc:	ldp	x29, x30, [sp], #48
  40bfe0:	ret

000000000040bfe4 <addattr_nest_compat_end@@Base>:
  40bfe4:	ldrh	w9, [x1]
  40bfe8:	ldr	w8, [x0]
  40bfec:	add	w9, w9, #0x3
  40bff0:	add	w10, w8, #0x3
  40bff4:	and	x9, x9, #0x1fffc
  40bff8:	and	w10, w10, #0xfffffffc
  40bffc:	add	x9, x1, x9
  40c000:	add	w10, w0, w10
  40c004:	sub	w11, w10, w1
  40c008:	sub	w10, w10, w9
  40c00c:	mov	w0, w8
  40c010:	strh	w11, [x1]
  40c014:	strh	w10, [x9]
  40c018:	ret

000000000040c01c <rta_addattr32@@Base>:
  40c01c:	stp	x29, x30, [sp, #-16]!
  40c020:	ldrh	w9, [x0]
  40c024:	mov	x29, sp
  40c028:	add	w9, w9, #0x3
  40c02c:	and	x9, x9, #0x1fffc
  40c030:	add	w10, w9, #0x8
  40c034:	cmp	w10, w1
  40c038:	b.hi	40c070 <rta_addattr32@@Base+0x54>  // b.pmore
  40c03c:	add	x9, x0, x9
  40c040:	mov	w10, #0x8                   	// #8
  40c044:	strh	w2, [x9, #2]
  40c048:	strh	w10, [x9]
  40c04c:	str	w3, [x9, #4]
  40c050:	ldrh	w9, [x0]
  40c054:	mov	w8, wzr
  40c058:	add	w9, w9, #0xb
  40c05c:	and	w9, w9, #0xfffc
  40c060:	strh	w9, [x0]
  40c064:	mov	w0, w8
  40c068:	ldp	x29, x30, [sp], #16
  40c06c:	ret
  40c070:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c074:	ldr	x9, [x9, #3992]
  40c078:	mov	w8, w1
  40c07c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40c080:	add	x1, x1, #0xb7
  40c084:	ldr	x0, [x9]
  40c088:	mov	w2, w8
  40c08c:	bl	405100 <fprintf@plt>
  40c090:	mov	w8, #0xffffffff            	// #-1
  40c094:	b	40c064 <rta_addattr32@@Base+0x48>

000000000040c098 <rta_addattr_l@@Base>:
  40c098:	stp	x29, x30, [sp, #-32]!
  40c09c:	stp	x20, x19, [sp, #16]
  40c0a0:	ldrh	w9, [x0]
  40c0a4:	add	w10, w4, #0x7
  40c0a8:	and	w20, w10, #0xfffffffc
  40c0ac:	mov	x29, sp
  40c0b0:	add	w9, w9, #0x3
  40c0b4:	and	x9, x9, #0x1fffc
  40c0b8:	add	w10, w9, w20
  40c0bc:	cmp	w10, w1
  40c0c0:	b.hi	40c110 <rta_addattr_l@@Base+0x78>  // b.pmore
  40c0c4:	mov	x19, x0
  40c0c8:	add	x8, x0, x9
  40c0cc:	add	w9, w4, #0x4
  40c0d0:	strh	w2, [x8, #2]
  40c0d4:	strh	w9, [x8]
  40c0d8:	cbz	w4, 40c0ec <rta_addattr_l@@Base+0x54>
  40c0dc:	sxtw	x2, w4
  40c0e0:	add	x0, x8, #0x4
  40c0e4:	mov	x1, x3
  40c0e8:	bl	404be0 <memcpy@plt>
  40c0ec:	ldrh	w8, [x19]
  40c0f0:	mov	w0, wzr
  40c0f4:	add	w8, w8, #0x3
  40c0f8:	and	w8, w8, #0xfffc
  40c0fc:	add	w8, w8, w20
  40c100:	strh	w8, [x19]
  40c104:	ldp	x20, x19, [sp, #16]
  40c108:	ldp	x29, x30, [sp], #32
  40c10c:	ret
  40c110:	adrp	x9, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c114:	ldr	x9, [x9, #3992]
  40c118:	mov	w8, w1
  40c11c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40c120:	add	x1, x1, #0xec
  40c124:	ldr	x0, [x9]
  40c128:	mov	w2, w8
  40c12c:	bl	405100 <fprintf@plt>
  40c130:	mov	w0, #0xffffffff            	// #-1
  40c134:	b	40c104 <rta_addattr_l@@Base+0x6c>

000000000040c138 <rta_addattr8@@Base>:
  40c138:	sub	sp, sp, #0x20
  40c13c:	stp	x29, x30, [sp, #16]
  40c140:	add	x29, sp, #0x10
  40c144:	sturb	w3, [x29, #-4]
  40c148:	sub	x3, x29, #0x4
  40c14c:	mov	w4, #0x1                   	// #1
  40c150:	bl	40c098 <rta_addattr_l@@Base>
  40c154:	ldp	x29, x30, [sp, #16]
  40c158:	add	sp, sp, #0x20
  40c15c:	ret

000000000040c160 <rta_addattr16@@Base>:
  40c160:	sub	sp, sp, #0x20
  40c164:	stp	x29, x30, [sp, #16]
  40c168:	add	x29, sp, #0x10
  40c16c:	sturh	w3, [x29, #-4]
  40c170:	sub	x3, x29, #0x4
  40c174:	mov	w4, #0x2                   	// #2
  40c178:	bl	40c098 <rta_addattr_l@@Base>
  40c17c:	ldp	x29, x30, [sp, #16]
  40c180:	add	sp, sp, #0x20
  40c184:	ret

000000000040c188 <rta_addattr64@@Base>:
  40c188:	sub	sp, sp, #0x20
  40c18c:	str	x3, [sp, #8]
  40c190:	add	x3, sp, #0x8
  40c194:	mov	w4, #0x8                   	// #8
  40c198:	stp	x29, x30, [sp, #16]
  40c19c:	add	x29, sp, #0x10
  40c1a0:	bl	40c098 <rta_addattr_l@@Base>
  40c1a4:	ldp	x29, x30, [sp, #16]
  40c1a8:	add	sp, sp, #0x20
  40c1ac:	ret

000000000040c1b0 <rta_nest@@Base>:
  40c1b0:	stp	x29, x30, [sp, #-32]!
  40c1b4:	ldrh	w8, [x0]
  40c1b8:	mov	x3, xzr
  40c1bc:	mov	w4, wzr
  40c1c0:	str	x19, [sp, #16]
  40c1c4:	add	w8, w8, #0x3
  40c1c8:	and	x8, x8, #0x1fffc
  40c1cc:	mov	x29, sp
  40c1d0:	add	x19, x0, x8
  40c1d4:	bl	40c098 <rta_addattr_l@@Base>
  40c1d8:	ldrh	w8, [x19, #2]
  40c1dc:	mov	x0, x19
  40c1e0:	orr	w8, w8, #0x8000
  40c1e4:	strh	w8, [x19, #2]
  40c1e8:	ldr	x19, [sp, #16]
  40c1ec:	ldp	x29, x30, [sp], #32
  40c1f0:	ret

000000000040c1f4 <rta_nest_end@@Base>:
  40c1f4:	ldrh	w8, [x0]
  40c1f8:	add	w8, w8, #0x3
  40c1fc:	and	w8, w8, #0xfffc
  40c200:	add	w8, w0, w8
  40c204:	sub	w8, w8, w1
  40c208:	strh	w8, [x1]
  40c20c:	ldrh	w0, [x0]
  40c210:	ret

000000000040c214 <parse_rtattr@@Base>:
  40c214:	stp	x29, x30, [sp, #-16]!
  40c218:	mov	w4, wzr
  40c21c:	mov	x29, sp
  40c220:	bl	40c230 <parse_rtattr_flags@@Base>
  40c224:	mov	w0, wzr
  40c228:	ldp	x29, x30, [sp], #16
  40c22c:	ret

000000000040c230 <parse_rtattr_flags@@Base>:
  40c230:	stp	x29, x30, [sp, #-64]!
  40c234:	add	w8, w1, #0x1
  40c238:	stp	x22, x21, [sp, #32]
  40c23c:	stp	x20, x19, [sp, #48]
  40c240:	mov	x20, x2
  40c244:	mov	w21, w1
  40c248:	sbfiz	x2, x8, #3, #32
  40c24c:	mov	w1, wzr
  40c250:	str	x23, [sp, #16]
  40c254:	mov	x29, sp
  40c258:	mov	w23, w4
  40c25c:	mov	w19, w3
  40c260:	mov	x22, x0
  40c264:	bl	404dc0 <memset@plt>
  40c268:	cmp	w19, #0x4
  40c26c:	b.lt	40c2c0 <parse_rtattr_flags@@Base+0x90>  // b.tstop
  40c270:	mvn	w8, w23
  40c274:	ldrh	w3, [x20]
  40c278:	cmp	x3, #0x4
  40c27c:	b.cc	40c2c8 <parse_rtattr_flags@@Base+0x98>  // b.lo, b.ul, b.last
  40c280:	cmp	w19, w3
  40c284:	b.lt	40c2c8 <parse_rtattr_flags@@Base+0x98>  // b.tstop
  40c288:	ldrh	w9, [x20, #2]
  40c28c:	and	w9, w9, w8
  40c290:	cmp	w21, w9, uxth
  40c294:	b.lt	40c2a8 <parse_rtattr_flags@@Base+0x78>  // b.tstop
  40c298:	and	x9, x9, #0xffff
  40c29c:	ldr	x10, [x22, x9, lsl #3]
  40c2a0:	cbnz	x10, 40c2a8 <parse_rtattr_flags@@Base+0x78>
  40c2a4:	str	x20, [x22, x9, lsl #3]
  40c2a8:	add	w9, w3, #0x3
  40c2ac:	and	x9, x9, #0x1fffc
  40c2b0:	sub	w19, w19, w9
  40c2b4:	cmp	w19, #0x3
  40c2b8:	add	x20, x20, x9
  40c2bc:	b.gt	40c274 <parse_rtattr_flags@@Base+0x44>
  40c2c0:	cbz	w19, 40c2e4 <parse_rtattr_flags@@Base+0xb4>
  40c2c4:	ldrh	w3, [x20]
  40c2c8:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c2cc:	ldr	x8, [x8, #3992]
  40c2d0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40c2d4:	add	x1, x1, #0x121
  40c2d8:	mov	w2, w19
  40c2dc:	ldr	x0, [x8]
  40c2e0:	bl	405100 <fprintf@plt>
  40c2e4:	ldp	x20, x19, [sp, #48]
  40c2e8:	ldp	x22, x21, [sp, #32]
  40c2ec:	ldr	x23, [sp, #16]
  40c2f0:	mov	w0, wzr
  40c2f4:	ldp	x29, x30, [sp], #64
  40c2f8:	ret

000000000040c2fc <parse_rtattr_one@@Base>:
  40c2fc:	stp	x29, x30, [sp, #-16]!
  40c300:	cmp	w2, #0x4
  40c304:	mov	x29, sp
  40c308:	b.lt	40c344 <parse_rtattr_one@@Base+0x48>  // b.tstop
  40c30c:	ldrh	w3, [x1]
  40c310:	cmp	x3, #0x4
  40c314:	b.cc	40c34c <parse_rtattr_one@@Base+0x50>  // b.lo, b.ul, b.last
  40c318:	cmp	w2, w3
  40c31c:	b.lt	40c34c <parse_rtattr_one@@Base+0x50>  // b.tstop
  40c320:	ldrh	w8, [x1, #2]
  40c324:	cmp	w8, w0
  40c328:	b.eq	40c368 <parse_rtattr_one@@Base+0x6c>  // b.none
  40c32c:	add	w8, w3, #0x3
  40c330:	and	x8, x8, #0x1fffc
  40c334:	sub	w2, w2, w8
  40c338:	cmp	w2, #0x3
  40c33c:	add	x1, x1, x8
  40c340:	b.gt	40c30c <parse_rtattr_one@@Base+0x10>
  40c344:	cbz	w2, 40c364 <parse_rtattr_one@@Base+0x68>
  40c348:	ldrh	w3, [x1]
  40c34c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c350:	ldr	x8, [x8, #3992]
  40c354:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0xa00>
  40c358:	add	x1, x1, #0x121
  40c35c:	ldr	x0, [x8]
  40c360:	bl	405100 <fprintf@plt>
  40c364:	mov	x1, xzr
  40c368:	mov	x0, x1
  40c36c:	ldp	x29, x30, [sp], #16
  40c370:	ret

000000000040c374 <__parse_rtattr_nested_compat@@Base>:
  40c374:	stp	x29, x30, [sp, #-16]!
  40c378:	ldrh	w8, [x2]
  40c37c:	mov	x29, sp
  40c380:	sub	x8, x8, #0x4
  40c384:	cmp	x8, w3, sxtw
  40c388:	b.cs	40c394 <__parse_rtattr_nested_compat@@Base+0x20>  // b.hs, b.nlast
  40c38c:	mov	w0, #0xffffffff            	// #-1
  40c390:	b	40c3d8 <__parse_rtattr_nested_compat@@Base+0x64>
  40c394:	add	w9, w3, #0x3
  40c398:	and	x9, x9, #0xfffffffc
  40c39c:	add	x10, x9, #0x4
  40c3a0:	cmp	x8, x10
  40c3a4:	b.cs	40c3bc <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40c3a8:	add	w8, w1, #0x1
  40c3ac:	sbfiz	x2, x8, #3, #32
  40c3b0:	mov	w1, wzr
  40c3b4:	bl	404dc0 <memset@plt>
  40c3b8:	b	40c3d4 <__parse_rtattr_nested_compat@@Base+0x60>
  40c3bc:	add	x8, x2, x9
  40c3c0:	ldrh	w9, [x8, #4]
  40c3c4:	add	x2, x8, #0x8
  40c3c8:	mov	w4, wzr
  40c3cc:	sub	w3, w9, #0x4
  40c3d0:	bl	40c230 <parse_rtattr_flags@@Base>
  40c3d4:	mov	w0, wzr
  40c3d8:	ldp	x29, x30, [sp], #16
  40c3dc:	ret
  40c3e0:	stp	x29, x30, [sp, #-64]!
  40c3e4:	stp	x24, x23, [sp, #16]
  40c3e8:	stp	x22, x21, [sp, #32]
  40c3ec:	stp	x20, x19, [sp, #48]
  40c3f0:	ldr	x24, [x1, #16]
  40c3f4:	mov	x19, x2
  40c3f8:	mov	w2, #0x22                  	// #34
  40c3fc:	mov	x29, sp
  40c400:	mov	x21, x1
  40c404:	mov	w22, w0
  40c408:	stp	xzr, xzr, [x24]
  40c40c:	bl	40c4a4 <__parse_rtattr_nested_compat@@Base+0x130>
  40c410:	mov	w20, w0
  40c414:	tbnz	w0, #31, 40c464 <__parse_rtattr_nested_compat@@Base+0xf0>
  40c418:	cmp	w20, #0x8, lsl #12
  40c41c:	mov	w8, #0x8000                	// #32768
  40c420:	csel	w20, w20, w8, gt
  40c424:	mov	x0, x20
  40c428:	bl	404d60 <malloc@plt>
  40c42c:	cbz	x0, 40c47c <__parse_rtattr_nested_compat@@Base+0x108>
  40c430:	mov	x23, x0
  40c434:	stp	x0, x20, [x24]
  40c438:	mov	w0, w22
  40c43c:	mov	x1, x21
  40c440:	mov	w2, wzr
  40c444:	bl	40c4a4 <__parse_rtattr_nested_compat@@Base+0x130>
  40c448:	mov	w20, w0
  40c44c:	tbnz	w0, #31, 40c45c <__parse_rtattr_nested_compat@@Base+0xe8>
  40c450:	cbz	x19, 40c45c <__parse_rtattr_nested_compat@@Base+0xe8>
  40c454:	str	x23, [x19]
  40c458:	b	40c464 <__parse_rtattr_nested_compat@@Base+0xf0>
  40c45c:	mov	x0, x23
  40c460:	bl	404f30 <free@plt>
  40c464:	mov	w0, w20
  40c468:	ldp	x20, x19, [sp, #48]
  40c46c:	ldp	x22, x21, [sp, #32]
  40c470:	ldp	x24, x23, [sp, #16]
  40c474:	ldp	x29, x30, [sp], #64
  40c478:	ret
  40c47c:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c480:	ldr	x8, [x8, #3992]
  40c484:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0xa00>
  40c488:	add	x0, x0, #0x16b
  40c48c:	mov	w1, #0x20                  	// #32
  40c490:	ldr	x3, [x8]
  40c494:	mov	w2, #0x1                   	// #1
  40c498:	bl	404f90 <fwrite@plt>
  40c49c:	mov	w20, #0xfffffff4            	// #-12
  40c4a0:	b	40c464 <__parse_rtattr_nested_compat@@Base+0xf0>
  40c4a4:	stp	x29, x30, [sp, #-48]!
  40c4a8:	stp	x22, x21, [sp, #16]
  40c4ac:	stp	x20, x19, [sp, #32]
  40c4b0:	mov	x29, sp
  40c4b4:	mov	w20, w2
  40c4b8:	mov	x21, x1
  40c4bc:	mov	w22, w0
  40c4c0:	bl	404bf0 <recvmsg@plt>
  40c4c4:	tbnz	w0, #31, 40c4f4 <__parse_rtattr_nested_compat@@Base+0x180>
  40c4c8:	cbnz	w0, 40c558 <__parse_rtattr_nested_compat@@Base+0x1e4>
  40c4cc:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c4d0:	ldr	x8, [x8, #3992]
  40c4d4:	adrp	x0, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40c4d8:	add	x0, x0, #0xf76
  40c4dc:	mov	w1, #0xf                   	// #15
  40c4e0:	ldr	x3, [x8]
  40c4e4:	mov	w2, #0x1                   	// #1
  40c4e8:	bl	404f90 <fwrite@plt>
  40c4ec:	mov	w0, #0xffffffc3            	// #-61
  40c4f0:	b	40c558 <__parse_rtattr_nested_compat@@Base+0x1e4>
  40c4f4:	bl	4050c0 <__errno_location@plt>
  40c4f8:	mov	x19, x0
  40c4fc:	ldr	w0, [x19]
  40c500:	cmp	w0, #0xb
  40c504:	b.eq	40c510 <__parse_rtattr_nested_compat@@Base+0x19c>  // b.none
  40c508:	cmp	w0, #0x4
  40c50c:	b.ne	40c528 <__parse_rtattr_nested_compat@@Base+0x1b4>  // b.any
  40c510:	mov	w0, w22
  40c514:	mov	x1, x21
  40c518:	mov	w2, w20
  40c51c:	bl	404bf0 <recvmsg@plt>
  40c520:	tbnz	w0, #31, 40c4fc <__parse_rtattr_nested_compat@@Base+0x188>
  40c524:	b	40c4c8 <__parse_rtattr_nested_compat@@Base+0x154>
  40c528:	adrp	x8, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c52c:	ldr	x8, [x8, #3992]
  40c530:	ldr	x20, [x8]
  40c534:	bl	404e50 <strerror@plt>
  40c538:	ldr	w3, [x19]
  40c53c:	adrp	x1, 40c000 <addattr_nest_compat_end@@Base+0x1c>
  40c540:	mov	x2, x0
  40c544:	add	x1, x1, #0xf57
  40c548:	mov	x0, x20
  40c54c:	bl	405100 <fprintf@plt>
  40c550:	ldr	w8, [x19]
  40c554:	neg	w0, w8
  40c558:	ldp	x20, x19, [sp, #32]
  40c55c:	ldp	x22, x21, [sp, #16]
  40c560:	ldp	x29, x30, [sp], #48
  40c564:	ret

000000000040c568 <__libc_csu_init@@Base>:
  40c568:	stp	x29, x30, [sp, #-64]!
  40c56c:	mov	x29, sp
  40c570:	stp	x19, x20, [sp, #16]
  40c574:	adrp	x20, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c578:	add	x20, x20, #0xd08
  40c57c:	stp	x21, x22, [sp, #32]
  40c580:	adrp	x21, 41d000 <_IO_stdin_used@@Base+0x10a00>
  40c584:	add	x21, x21, #0xd00
  40c588:	sub	x20, x20, x21
  40c58c:	mov	w22, w0
  40c590:	stp	x23, x24, [sp, #48]
  40c594:	mov	x23, x1
  40c598:	mov	x24, x2
  40c59c:	bl	404ba8 <memcpy@plt-0x38>
  40c5a0:	cmp	xzr, x20, asr #3
  40c5a4:	b.eq	40c5d0 <__libc_csu_init@@Base+0x68>  // b.none
  40c5a8:	asr	x20, x20, #3
  40c5ac:	mov	x19, #0x0                   	// #0
  40c5b0:	ldr	x3, [x21, x19, lsl #3]
  40c5b4:	mov	x2, x24
  40c5b8:	add	x19, x19, #0x1
  40c5bc:	mov	x1, x23
  40c5c0:	mov	w0, w22
  40c5c4:	blr	x3
  40c5c8:	cmp	x20, x19
  40c5cc:	b.ne	40c5b0 <__libc_csu_init@@Base+0x48>  // b.any
  40c5d0:	ldp	x19, x20, [sp, #16]
  40c5d4:	ldp	x21, x22, [sp, #32]
  40c5d8:	ldp	x23, x24, [sp, #48]
  40c5dc:	ldp	x29, x30, [sp], #64
  40c5e0:	ret
  40c5e4:	nop

000000000040c5e8 <__libc_csu_fini@@Base>:
  40c5e8:	ret

Disassembly of section .fini:

000000000040c5ec <.fini>:
  40c5ec:	stp	x29, x30, [sp, #-16]!
  40c5f0:	mov	x29, sp
  40c5f4:	ldp	x29, x30, [sp], #16
  40c5f8:	ret
