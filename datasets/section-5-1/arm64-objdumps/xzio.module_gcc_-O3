
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//xzio.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_xzio_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0, #80]
      14:	ldr	x0, [x20, #56]
      18:	bl	3be0 <xz_dec_end>
      1c:	ldr	x0, [x20]
      20:	bl	0 <grub_file_close>
      24:	mov	x0, x20
      28:	bl	0 <grub_free>
      2c:	adrp	x0, 0 <grub_xzio_close>
      30:	ldr	x0, [x0]
      34:	ldr	w0, [x0]
      38:	stp	xzr, xzr, [x19]
      3c:	ldp	x19, x20, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret
	...

0000000000000050 <read_vli>:
      50:	stp	x29, x30, [sp, #-48]!
      54:	mov	x2, #0x9                   	// #9
      58:	mov	x29, sp
      5c:	stp	x19, x20, [sp, #16]
      60:	mov	x19, x1
      64:	mov	x20, x0
      68:	add	x1, sp, #0x20
      6c:	bl	0 <grub_file_read>
      70:	cmp	x0, #0x0
      74:	b.lt	208 <read_vli+0x1b8>  // b.tstop
      78:	mov	x2, x0
      7c:	b.eq	194 <read_vli+0x144>  // b.none
      80:	ldrb	w0, [sp, #32]
      84:	and	x1, x0, #0x7f
      88:	str	x1, [x19]
      8c:	tbz	w0, #7, 1cc <read_vli+0x17c>
      90:	cmp	x2, #0x1
      94:	b.eq	194 <read_vli+0x144>  // b.none
      98:	ldrb	w4, [sp, #33]
      9c:	cbz	w4, 194 <read_vli+0x144>
      a0:	ubfiz	x3, x4, #7, #7
      a4:	orr	x3, x3, x1
      a8:	str	x3, [x19]
      ac:	tbz	w4, #7, 1d8 <read_vli+0x188>
      b0:	cmp	x2, #0x2
      b4:	b.ls	194 <read_vli+0x144>  // b.plast
      b8:	ldrb	w5, [sp, #34]
      bc:	cbz	w5, 194 <read_vli+0x144>
      c0:	ubfiz	x4, x5, #14, #7
      c4:	orr	x3, x4, x3
      c8:	str	x3, [x19]
      cc:	tbz	w5, #7, 1e4 <read_vli+0x194>
      d0:	cmp	x2, #0x3
      d4:	b.eq	194 <read_vli+0x144>  // b.none
      d8:	ldrb	w0, [sp, #35]
      dc:	cbz	w0, 194 <read_vli+0x144>
      e0:	ubfiz	x4, x0, #21, #7
      e4:	orr	x3, x4, x3
      e8:	str	x3, [x19]
      ec:	tbz	w0, #7, 1f0 <read_vli+0x1a0>
      f0:	cmp	x2, #0x4
      f4:	b.eq	194 <read_vli+0x144>  // b.none
      f8:	ldrb	w0, [sp, #36]
      fc:	cbz	w0, 194 <read_vli+0x144>
     100:	ubfiz	x4, x0, #28, #7
     104:	orr	x3, x4, x3
     108:	str	x3, [x19]
     10c:	tbz	w0, #7, 1fc <read_vli+0x1ac>
     110:	cmp	x2, #0x5
     114:	b.eq	194 <read_vli+0x144>  // b.none
     118:	ldrb	w1, [sp, #37]
     11c:	cbz	w1, 194 <read_vli+0x144>
     120:	ubfiz	x0, x1, #35, #7
     124:	orr	x3, x0, x3
     128:	str	x3, [x19]
     12c:	tbz	w1, #7, 210 <read_vli+0x1c0>
     130:	cmp	x2, #0x6
     134:	b.eq	194 <read_vli+0x144>  // b.none
     138:	ldrb	w1, [sp, #38]
     13c:	cbz	w1, 194 <read_vli+0x144>
     140:	ubfiz	x0, x1, #42, #7
     144:	orr	x3, x0, x3
     148:	str	x3, [x19]
     14c:	tbz	w1, #7, 21c <read_vli+0x1cc>
     150:	cmp	x2, #0x7
     154:	b.eq	194 <read_vli+0x144>  // b.none
     158:	ldrb	w1, [sp, #39]
     15c:	cbz	w1, 194 <read_vli+0x144>
     160:	ubfiz	x0, x1, #49, #7
     164:	orr	x3, x0, x3
     168:	str	x3, [x19]
     16c:	tbz	w1, #7, 1c0 <read_vli+0x170>
     170:	cmp	x2, #0x8
     174:	b.eq	194 <read_vli+0x144>  // b.none
     178:	ldrb	w0, [sp, #40]
     17c:	cbz	w0, 194 <read_vli+0x144>
     180:	ubfiz	x1, x0, #56, #7
     184:	orr	x3, x1, x3
     188:	str	x3, [x19]
     18c:	mov	x1, #0x9                   	// #9
     190:	tbz	w0, #7, 1c4 <read_vli+0x174>
     194:	mov	x19, #0x0                   	// #0
     198:	mov	x1, #0x0                   	// #0
     19c:	ldr	x3, [x20, #24]
     1a0:	mov	x0, x20
     1a4:	sub	x2, x3, x2
     1a8:	add	x1, x2, x1
     1ac:	bl	0 <grub_file_seek>
     1b0:	mov	x0, x19
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldp	x29, x30, [sp], #48
     1bc:	ret
     1c0:	mov	x1, #0x8                   	// #8
     1c4:	mov	x19, x1
     1c8:	b	19c <read_vli+0x14c>
     1cc:	mov	x19, #0x1                   	// #1
     1d0:	mov	x1, x19
     1d4:	b	19c <read_vli+0x14c>
     1d8:	mov	x1, #0x2                   	// #2
     1dc:	mov	x19, x1
     1e0:	b	19c <read_vli+0x14c>
     1e4:	mov	x1, #0x3                   	// #3
     1e8:	mov	x19, x1
     1ec:	b	19c <read_vli+0x14c>
     1f0:	mov	x1, #0x4                   	// #4
     1f4:	mov	x19, x1
     1f8:	b	19c <read_vli+0x14c>
     1fc:	mov	x1, #0x5                   	// #5
     200:	mov	x19, x1
     204:	b	19c <read_vli+0x14c>
     208:	mov	x19, #0xffffffffffffffff    	// #-1
     20c:	b	1b0 <read_vli+0x160>
     210:	mov	x1, #0x6                   	// #6
     214:	mov	x19, x1
     218:	b	19c <read_vli+0x14c>
     21c:	mov	x1, #0x7                   	// #7
     220:	mov	x19, x1
     224:	b	19c <read_vli+0x14c>

0000000000000228 <grub_xzio_read>:
     228:	stp	x29, x30, [sp, #-128]!
     22c:	mov	x29, sp
     230:	stp	x25, x26, [sp, #64]
     234:	mov	x25, x0
     238:	ldr	x26, [x0, #80]
     23c:	stp	x27, x28, [sp, #80]
     240:	ldr	x0, [x0, #24]
     244:	stp	x19, x20, [sp, #16]
     248:	mov	x19, x2
     24c:	ldr	x28, [x26, #16448]
     250:	stp	x21, x22, [sp, #32]
     254:	mov	x21, x1
     258:	stp	x23, x24, [sp, #48]
     25c:	cmp	x0, x28
     260:	b.cc	3c8 <grub_xzio_read+0x1a0>  // b.lo, b.ul, b.last
     264:	add	x24, x26, #0x8
     268:	add	x0, x26, #0x40
     26c:	mov	x20, #0x0                   	// #0
     270:	mov	x23, #0x2000                	// #8192
     274:	mov	x22, #0x2001                	// #8193
     278:	str	x0, [sp, #120]
     27c:	nop
     280:	sub	x0, x20, x28
     284:	cbz	x19, 2e8 <grub_xzio_read+0xc0>
     288:	ldr	x3, [x25, #24]
     28c:	add	x3, x19, x3
     290:	add	x3, x3, x0
     294:	ldp	x1, x0, [x26, #16]
     298:	cmp	x3, x22
     29c:	csel	x3, x3, x23, cc  // cc = lo, ul, last
     2a0:	str	x3, [x26, #48]
     2a4:	cmp	x1, x0
     2a8:	b.eq	318 <grub_xzio_read+0xf0>  // b.none
     2ac:	ldr	x0, [x26, #56]
     2b0:	mov	x1, x24
     2b4:	bl	2e28 <xz_dec_run>
     2b8:	mov	w27, w0
     2bc:	sub	w0, w0, #0x2
     2c0:	cmp	w0, #0x4
     2c4:	b.ls	34c <grub_xzio_read+0x124>  // b.plast
     2c8:	ldr	x3, [x26, #40]
     2cc:	ldr	x2, [x25, #24]
     2d0:	add	x28, x28, x3
     2d4:	cmp	x2, x28
     2d8:	b.ls	380 <grub_xzio_read+0x158>  // b.plast
     2dc:	str	xzr, [x26, #40]
     2e0:	cmp	w27, #0x1
     2e4:	b.ne	280 <grub_xzio_read+0x58>  // b.any
     2e8:	tbnz	x20, #63, 2f8 <grub_xzio_read+0xd0>
     2ec:	ldr	x0, [x25, #24]
     2f0:	add	x0, x0, x20
     2f4:	str	x0, [x26, #16448]
     2f8:	mov	x0, x20
     2fc:	ldp	x19, x20, [sp, #16]
     300:	ldp	x21, x22, [sp, #32]
     304:	ldp	x23, x24, [sp, #48]
     308:	ldp	x25, x26, [sp, #64]
     30c:	ldp	x27, x28, [sp, #80]
     310:	ldp	x29, x30, [sp], #128
     314:	ret
     318:	ldr	x0, [x26]
     31c:	mov	x2, #0x2000                	// #8192
     320:	ldr	x1, [sp, #120]
     324:	bl	0 <grub_file_read>
     328:	tbnz	x0, #63, 3f0 <grub_xzio_read+0x1c8>
     32c:	stp	xzr, x0, [x26, #16]
     330:	mov	x1, x24
     334:	ldr	x0, [x26, #56]
     338:	bl	2e28 <xz_dec_run>
     33c:	mov	w27, w0
     340:	sub	w0, w0, #0x2
     344:	cmp	w0, #0x4
     348:	b.hi	2c8 <grub_xzio_read+0xa0>  // b.pmore
     34c:	adrp	x1, 0 <grub_xzio_close>
     350:	mov	x20, #0xffffffffffffffff    	// #-1
     354:	mov	w0, #0x1a                  	// #26
     358:	ldr	x1, [x1]
     35c:	bl	0 <grub_error>
     360:	mov	x0, x20
     364:	ldp	x19, x20, [sp, #16]
     368:	ldp	x21, x22, [sp, #32]
     36c:	ldp	x23, x24, [sp, #48]
     370:	ldp	x25, x26, [sp, #64]
     374:	ldp	x27, x28, [sp, #80]
     378:	ldp	x29, x30, [sp], #128
     37c:	ret
     380:	add	x2, x20, x2
     384:	mov	x0, x21
     388:	sub	x5, x2, x28
     38c:	sub	x2, x28, x2
     390:	add	x3, x3, x5
     394:	stp	x2, x5, [sp, #104]
     398:	ldr	x1, [x26, #32]
     39c:	add	x1, x1, x3
     3a0:	bl	0 <grub_memmove>
     3a4:	ldp	x2, x5, [sp, #104]
     3a8:	str	xzr, [x26, #40]
     3ac:	cmp	w27, #0x1
     3b0:	add	x19, x19, x5
     3b4:	add	x20, x20, x2
     3b8:	add	x21, x21, x2
     3bc:	b.ne	280 <grub_xzio_read+0x58>  // b.any
     3c0:	tbz	x20, #63, 2ec <grub_xzio_read+0xc4>
     3c4:	b	2f8 <grub_xzio_read+0xd0>
     3c8:	ldr	x0, [x26, #56]
     3cc:	bl	2d90 <xz_dec_reset>
     3d0:	stp	xzr, xzr, [x26, #16]
     3d4:	mov	x1, #0x0                   	// #0
     3d8:	ldr	x0, [x26]
     3dc:	str	xzr, [x26, #40]
     3e0:	str	xzr, [x26, #16448]
     3e4:	bl	0 <grub_file_seek>
     3e8:	ldr	x28, [x26, #16448]
     3ec:	b	264 <grub_xzio_read+0x3c>
     3f0:	mov	x20, #0xffffffffffffffff    	// #-1
     3f4:	mov	x0, x20
     3f8:	ldp	x19, x20, [sp, #16]
     3fc:	ldp	x21, x22, [sp, #32]
     400:	ldp	x23, x24, [sp, #48]
     404:	ldp	x25, x26, [sp, #64]
     408:	ldp	x27, x28, [sp, #80]
     40c:	ldp	x29, x30, [sp], #128
     410:	ret
     414:	nop
	...

0000000000000420 <grub_xzio_open>:
     420:	stp	x29, x30, [sp, #-96]!
     424:	mov	x29, sp
     428:	stp	x19, x20, [sp, #16]
     42c:	mov	x19, x0
     430:	tbz	w1, #17, 444 <grub_xzio_open+0x24>
     434:	mov	x0, x19
     438:	ldp	x19, x20, [sp, #16]
     43c:	ldp	x29, x30, [sp], #96
     440:	ret
     444:	mov	x0, #0x68                  	// #104
     448:	stp	x21, x22, [sp, #32]
     44c:	bl	0 <grub_zalloc>
     450:	mov	x21, x0
     454:	cbz	x0, 668 <grub_xzio_open+0x248>
     458:	mov	x0, #0x4048                	// #16456
     45c:	bl	0 <grub_zalloc>
     460:	mov	x20, x0
     464:	cbz	x0, 690 <grub_xzio_open+0x270>
     468:	ldr	x3, [x19, #8]
     46c:	str	x19, [x20]
     470:	mov	x0, #0xffffffffffffffff    	// #-1
     474:	str	x0, [x21, #64]
     478:	adrp	x2, 0 <grub_xzio_close>
     47c:	mov	w1, #0x1                   	// #1
     480:	ldr	x0, [x19, #24]
     484:	str	w1, [x21, #72]
     488:	ldr	x2, [x2]
     48c:	stp	x3, x2, [x21, #8]
     490:	str	x20, [x21, #80]
     494:	cbnz	x0, 528 <grub_xzio_open+0x108>
     498:	mov	w0, #0x10000               	// #65536
     49c:	bl	3b50 <xz_dec_init>
     4a0:	str	x0, [x20, #56]
     4a4:	cbz	x0, 674 <grub_xzio_open+0x254>
     4a8:	add	x0, x20, #0x40
     4ac:	mov	x1, #0x2040                	// #8256
     4b0:	add	x1, x20, x1
     4b4:	str	x0, [x20, #8]
     4b8:	str	x1, [x20, #32]
     4bc:	mov	x0, #0x2000                	// #8192
     4c0:	mov	x2, #0xc                   	// #12
     4c4:	ldr	x22, [x21, #80]
     4c8:	str	x0, [x20, #48]
     4cc:	mov	x1, x22
     4d0:	ldr	x0, [x1], #64
     4d4:	bl	0 <grub_file_read>
     4d8:	str	x0, [x22, #24]
     4dc:	cmp	x0, #0xc
     4e0:	b.eq	538 <grub_xzio_open+0x118>  // b.none
     4e4:	adrp	x2, 0 <grub_xzio_close>
     4e8:	mov	x1, #0x0                   	// #0
     4ec:	mov	x0, x19
     4f0:	ldr	x2, [x2]
     4f4:	str	wzr, [x2]
     4f8:	bl	0 <grub_file_seek>
     4fc:	ldr	x0, [x20, #56]
     500:	bl	3be0 <xz_dec_end>
     504:	mov	x0, x20
     508:	bl	0 <grub_free>
     50c:	mov	x0, x21
     510:	bl	0 <grub_free>
     514:	mov	x0, x19
     518:	ldp	x19, x20, [sp, #16]
     51c:	ldp	x21, x22, [sp, #32]
     520:	ldp	x29, x30, [sp], #96
     524:	ret
     528:	mov	x0, x19
     52c:	mov	x1, #0x0                   	// #0
     530:	bl	0 <grub_file_seek>
     534:	b	498 <grub_xzio_open+0x78>
     538:	ldr	x0, [x22, #56]
     53c:	add	x1, x22, #0x8
     540:	bl	2e28 <xz_dec_run>
     544:	cbnz	w0, 4e4 <grub_xzio_open+0xc4>
     548:	ldr	x22, [x21, #80]
     54c:	ldr	x0, [x22]
     550:	ldr	x1, [x0, #64]
     554:	sub	x1, x1, #0x2
     558:	bl	0 <grub_file_seek>
     55c:	ldr	x0, [x22]
     560:	add	x1, sp, #0x48
     564:	mov	x2, #0x2                   	// #2
     568:	bl	0 <grub_file_read>
     56c:	cmp	x0, #0x2
     570:	b.ne	4e4 <grub_xzio_open+0xc4>  // b.any
     574:	adrp	x1, 0 <grub_xzio_close>
     578:	mov	x2, x0
     57c:	add	x0, sp, #0x48
     580:	ldr	x1, [x1]
     584:	bl	0 <grub_memcmp>
     588:	cbnz	w0, 4e4 <grub_xzio_open+0xc4>
     58c:	ldr	x0, [x22]
     590:	ldr	x1, [x0, #64]
     594:	sub	x1, x1, #0x8
     598:	bl	0 <grub_file_seek>
     59c:	ldr	x0, [x22]
     5a0:	add	x1, sp, #0x4c
     5a4:	mov	x2, #0x4                   	// #4
     5a8:	bl	0 <grub_file_read>
     5ac:	cmp	x0, #0x4
     5b0:	b.ne	4e4 <grub_xzio_open+0xc4>  // b.any
     5b4:	ldr	w2, [sp, #76]
     5b8:	mov	x3, #0xfffffffffffffff4    	// #-12
     5bc:	ldr	x0, [x22]
     5c0:	add	w2, w2, #0x1
     5c4:	lsl	w2, w2, #2
     5c8:	str	w2, [sp, #76]
     5cc:	ldr	x1, [x0, #64]
     5d0:	sub	x3, x3, w2, uxtw
     5d4:	add	x1, x3, x1
     5d8:	bl	0 <grub_file_seek>
     5dc:	ldr	x0, [x22]
     5e0:	add	x1, sp, #0x47
     5e4:	mov	x2, #0x1                   	// #1
     5e8:	bl	0 <grub_file_read>
     5ec:	cmp	x0, #0x1
     5f0:	b.eq	5fc <grub_xzio_open+0x1dc>  // b.none
     5f4:	ldrb	w0, [sp, #71]
     5f8:	cbnz	w0, 4e4 <grub_xzio_open+0xc4>
     5fc:	ldr	x0, [x22]
     600:	add	x1, sp, #0x58
     604:	bl	50 <read_vli>
     608:	cmp	x0, #0x0
     60c:	b.le	4e4 <grub_xzio_open+0xc4>
     610:	str	x23, [sp, #48]
     614:	ldr	x23, [sp, #88]
     618:	cbz	x23, 6a4 <grub_xzio_open+0x284>
     61c:	mov	x23, #0x0                   	// #0
     620:	b	648 <grub_xzio_open+0x228>
     624:	ldr	x0, [x22]
     628:	bl	50 <read_vli>
     62c:	cmp	x0, #0x0
     630:	b.le	660 <grub_xzio_open+0x240>
     634:	ldp	x1, x0, [sp, #80]
     638:	sub	x0, x0, #0x1
     63c:	str	x0, [sp, #88]
     640:	add	x23, x23, x1
     644:	cbz	x0, 6a4 <grub_xzio_open+0x284>
     648:	ldr	x0, [x22]
     64c:	add	x1, sp, #0x50
     650:	bl	50 <read_vli>
     654:	cmp	x0, #0x0
     658:	add	x1, sp, #0x50
     65c:	b.gt	624 <grub_xzio_open+0x204>
     660:	ldr	x23, [sp, #48]
     664:	b	4e4 <grub_xzio_open+0xc4>
     668:	mov	x19, #0x0                   	// #0
     66c:	ldp	x21, x22, [sp, #32]
     670:	b	434 <grub_xzio_open+0x14>
     674:	mov	x0, x21
     678:	bl	0 <grub_free>
     67c:	mov	x0, x20
     680:	mov	x19, #0x0                   	// #0
     684:	bl	0 <grub_free>
     688:	ldp	x21, x22, [sp, #32]
     68c:	b	434 <grub_xzio_open+0x14>
     690:	mov	x0, x21
     694:	mov	x19, #0x0                   	// #0
     698:	bl	0 <grub_free>
     69c:	ldp	x21, x22, [sp, #32]
     6a0:	b	434 <grub_xzio_open+0x14>
     6a4:	ldr	x0, [x22]
     6a8:	str	x23, [x21, #64]
     6ac:	mov	x19, x21
     6b0:	mov	x1, #0xc                   	// #12
     6b4:	bl	0 <grub_file_seek>
     6b8:	ldp	x21, x22, [sp, #32]
     6bc:	ldr	x23, [sp, #48]
     6c0:	b	434 <grub_xzio_open+0x14>
     6c4:	nop
	...

00000000000006e0 <grub_mod_init>:
     6e0:	adrp	x0, 0 <grub_xzio_close>
     6e4:	adrp	x1, 0 <grub_xzio_close>
     6e8:	ldr	x0, [x0]
     6ec:	ldr	x1, [x1]
     6f0:	str	x1, [x0, #16]
     6f4:	ret
	...

0000000000000708 <grub_mod_fini>:
     708:	adrp	x0, 0 <grub_xzio_close>
     70c:	ldr	x0, [x0]
     710:	str	xzr, [x0, #16]
     714:	ret
	...

0000000000000720 <bcj_x86.isra.0>:
     720:	cmp	x3, #0x4
     724:	mov	x8, x0
     728:	b.ls	8b0 <bcj_x86.isra.0+0x190>  // b.plast
     72c:	ldr	w6, [x1]
     730:	sub	x7, x3, #0x4
     734:	mov	x4, #0xffffffffffffffff    	// #-1
     738:	mov	x0, #0x0                   	// #0
     73c:	mov	w10, #0xfffffffb            	// #-5
     740:	adrp	x9, 0 <grub_xzio_close>
     744:	mov	w11, #0x18                  	// #24
     748:	mov	w13, #0x20                  	// #32
     74c:	mov	w12, #0x1                   	// #1
     750:	ldrb	w5, [x2, x0]
     754:	add	x14, x0, #0x1
     758:	and	w5, w5, #0xfe
     75c:	cmp	w5, #0xe8
     760:	b.ne	8a8 <bcj_x86.isra.0+0x188>  // b.any
     764:	sub	x3, x0, x4
     768:	add	x4, x0, #0x4
     76c:	cmp	x3, #0x3
     770:	b.hi	864 <bcj_x86.isra.0+0x144>  // b.pmore
     774:	sub	w3, w3, #0x1
     778:	lsl	w3, w6, w3
     77c:	ands	w6, w3, #0x7
     780:	b.eq	864 <bcj_x86.isra.0+0x144>  // b.none
     784:	ldr	x3, [x9]
     788:	mov	w5, w6
     78c:	add	x15, x3, #0x8
     790:	ldrb	w3, [x3, w6, uxtw]
     794:	ldr	w15, [x15, x5, lsl #2]
     798:	sub	x5, x4, w3, uxtb
     79c:	ldrb	w5, [x2, x5]
     7a0:	cbz	w15, 87c <bcj_x86.isra.0+0x15c>
     7a4:	sub	w5, w5, #0x1
     7a8:	and	w5, w5, #0xff
     7ac:	cmp	w5, #0xfd
     7b0:	b.hi	87c <bcj_x86.isra.0+0x15c>  // b.pmore
     7b4:	ldrb	w4, [x2, x4]
     7b8:	sub	w4, w4, #0x1
     7bc:	and	w4, w4, #0xff
     7c0:	cmp	w4, #0xfd
     7c4:	b.ls	87c <bcj_x86.isra.0+0x15c>  // b.plast
     7c8:	ldr	w5, [x8]
     7cc:	lsl	w4, w3, #3
     7d0:	ldr	w3, [x2, x14]
     7d4:	add	x15, x2, x14
     7d8:	sub	w5, w10, w5
     7dc:	sub	w16, w11, w4
     7e0:	sub	w14, w5, w0
     7e4:	add	w3, w14, w3
     7e8:	lsr	w5, w3, w16
     7ec:	sub	w5, w5, #0x1
     7f0:	and	w5, w5, #0xff
     7f4:	cmp	w5, #0xfd
     7f8:	b.ls	824 <bcj_x86.isra.0+0x104>  // b.plast
     7fc:	sub	w5, w13, w4
     800:	lsl	w5, w12, w5
     804:	sub	w5, w5, #0x1
     808:	eor	w3, w5, w3
     80c:	add	w3, w3, w14
     810:	lsr	w4, w3, w16
     814:	sub	w4, w4, #0x1
     818:	and	w4, w4, #0xff
     81c:	cmp	w4, #0xfd
     820:	b.hi	808 <bcj_x86.isra.0+0xe8>  // b.pmore
     824:	and	w5, w3, #0x1000000
     828:	and	w3, w3, #0x1ffffff
     82c:	neg	w5, w5
     830:	mov	x4, x0
     834:	orr	w3, w3, w5
     838:	str	w3, [x15]
     83c:	add	x0, x0, #0x5
     840:	cmp	x7, x0
     844:	b.hi	750 <bcj_x86.isra.0+0x30>  // b.pmore
     848:	sub	x4, x0, x4
     84c:	sub	w3, w4, #0x1
     850:	cmp	x4, #0x4
     854:	lsl	w3, w6, w3
     858:	csel	w3, w3, wzr, cc  // cc = lo, ul, last
     85c:	str	w3, [x1]
     860:	ret
     864:	ldrb	w3, [x2, x4]
     868:	sub	w3, w3, #0x1
     86c:	and	w3, w3, #0xff
     870:	cmp	w3, #0xfd
     874:	b.hi	8b8 <bcj_x86.isra.0+0x198>  // b.pmore
     878:	mov	w6, #0x0                   	// #0
     87c:	lsl	w3, w6, #1
     880:	mov	x4, x0
     884:	orr	w6, w3, #0x1
     888:	mov	x0, x14
     88c:	cmp	x7, x0
     890:	b.ls	848 <bcj_x86.isra.0+0x128>  // b.plast
     894:	ldrb	w5, [x2, x0]
     898:	add	x14, x0, #0x1
     89c:	and	w5, w5, #0xfe
     8a0:	cmp	w5, #0xe8
     8a4:	b.eq	764 <bcj_x86.isra.0+0x44>  // b.none
     8a8:	mov	x0, x14
     8ac:	b	88c <bcj_x86.isra.0+0x16c>
     8b0:	mov	x0, #0x0                   	// #0
     8b4:	ret
     8b8:	ldr	w3, [x8]
     8bc:	add	x15, x2, x14
     8c0:	ldr	w4, [x2, x14]
     8c4:	mov	w6, #0x0                   	// #0
     8c8:	sub	w3, w10, w3
     8cc:	sub	w3, w3, w0
     8d0:	add	w3, w3, w4
     8d4:	b	824 <bcj_x86.isra.0+0x104>
	...

00000000000008e0 <bcj_powerpc.isra.0>:
     8e0:	cmp	x2, #0x3
     8e4:	b.ls	968 <bcj_powerpc.isra.0+0x88>  // b.plast
     8e8:	sub	x7, x2, #0x4
     8ec:	mov	w6, #0x1                   	// #1
     8f0:	and	x8, x7, #0xfffffffffffffffc
     8f4:	mov	x2, x1
     8f8:	add	x8, x1, x8
     8fc:	movk	w6, #0x4800, lsl #16
     900:	ldr	w3, [x2]
     904:	add	x5, x2, #0x4
     908:	rev	w3, w3
     90c:	and	w4, w3, #0xfc000003
     910:	cmp	w4, w6
     914:	b.ne	950 <bcj_powerpc.isra.0+0x70>  // b.any
     918:	ldr	w9, [x0]
     91c:	and	w3, w3, #0x3fffffc
     920:	sub	w4, w1, w2
     924:	sub	w3, w3, w9
     928:	add	w3, w4, w3
     92c:	and	w3, w3, #0x3fffffc
     930:	orr	w3, w3, w6
     934:	strb	w3, [x2, #3]
     938:	lsr	w9, w3, #24
     93c:	lsr	w4, w3, #16
     940:	lsr	w3, w3, #8
     944:	strb	w9, [x2]
     948:	strb	w4, [x2, #1]
     94c:	strb	w3, [x2, #2]
     950:	cmp	x2, x8
     954:	mov	x2, x5
     958:	b.ne	900 <bcj_powerpc.isra.0+0x20>  // b.any
     95c:	and	x0, x7, #0xfffffffffffffffc
     960:	add	x0, x0, #0x4
     964:	ret
     968:	mov	x0, #0x0                   	// #0
     96c:	ret

0000000000000970 <bcj_ia64.isra.0>:
     970:	cmp	x2, #0xf
     974:	mov	x7, x0
     978:	b.ls	c1c <bcj_ia64.isra.0+0x2ac>  // b.plast
     97c:	adrp	x3, 0 <grub_xzio_close>
     980:	ldrb	w5, [x1]
     984:	mov	x8, #0xffff000000001fff    	// #-281474976702465
     988:	mov	x0, #0x10                  	// #16
     98c:	ldr	x6, [x3]
     990:	and	w3, w5, #0x1f
     994:	movk	x8, #0xffee, lsl #32
     998:	add	x6, x6, #0x28
     99c:	ldrb	w3, [x6, w3, sxtw]
     9a0:	tbnz	w3, #0, 9d4 <bcj_ia64.isra.0+0x64>
     9a4:	nop
     9a8:	tbnz	w3, #1, a90 <bcj_ia64.isra.0+0x120>
     9ac:	tbnz	w3, #2, b50 <bcj_ia64.isra.0+0x1e0>
     9b0:	add	x3, x0, #0x10
     9b4:	add	x1, x1, #0x10
     9b8:	cmp	x3, x2
     9bc:	b.hi	c18 <bcj_ia64.isra.0+0x2a8>  // b.pmore
     9c0:	ldrb	w5, [x1]
     9c4:	mov	x0, x3
     9c8:	and	w3, w5, #0x1f
     9cc:	ldrb	w3, [x6, w3, sxtw]
     9d0:	tbz	w3, #0, 9a8 <bcj_ia64.isra.0+0x38>
     9d4:	ldrb	w9, [x1, #5]
     9d8:	and	x5, x5, #0xff
     9dc:	ldrb	w11, [x1, #2]
     9e0:	ldrb	w10, [x1, #4]
     9e4:	orr	x5, x5, x9, lsl #40
     9e8:	ldrb	w4, [x1, #1]
     9ec:	ldrb	w9, [x1, #3]
     9f0:	lsl	x11, x11, #16
     9f4:	lsl	x10, x10, #32
     9f8:	ubfx	x12, x5, #42, #4
     9fc:	orr	x4, x11, x4, lsl #8
     a00:	cmp	x12, #0x5
     a04:	orr	x9, x10, x9, lsl #24
     a08:	orr	x4, x4, x9
     a0c:	orr	x4, x4, x5
     a10:	b.ne	9a8 <bcj_ia64.isra.0+0x38>  // b.any
     a14:	tst	x4, #0x1c000
     a18:	b.ne	9a8 <bcj_ia64.isra.0+0x38>  // b.any
     a1c:	lsr	x5, x4, #41
     a20:	ubfx	x12, x4, #18, #20
     a24:	ldr	w11, [x7]
     a28:	sub	w9, w0, #0x10
     a2c:	ubfiz	w5, w5, #20, #1
     a30:	and	x10, x8, x4, lsr #5
     a34:	orr	w5, w5, w12
     a38:	add	w9, w9, w11
     a3c:	lsl	w5, w5, #4
     a40:	sub	w5, w5, w9
     a44:	lsr	w5, w5, #4
     a48:	lsl	x9, x5, #16
     a4c:	ubfiz	x5, x5, #13, #20
     a50:	and	x9, x9, #0x1000000000
     a54:	orr	x5, x5, x9
     a58:	orr	x5, x5, x10
     a5c:	bfi	x4, x5, #5, #59
     a60:	strb	w4, [x1]
     a64:	lsr	x11, x4, #8
     a68:	lsr	x10, x4, #16
     a6c:	lsr	x9, x4, #24
     a70:	lsr	x5, x4, #32
     a74:	lsr	x4, x4, #40
     a78:	strb	w11, [x1, #1]
     a7c:	strb	w10, [x1, #2]
     a80:	strb	w9, [x1, #3]
     a84:	strb	w5, [x1, #4]
     a88:	strb	w4, [x1, #5]
     a8c:	tbz	w3, #1, 9ac <bcj_ia64.isra.0+0x3c>
     a90:	ldrb	w4, [x1, #7]
     a94:	ldrb	w9, [x1, #9]
     a98:	ldrb	w5, [x1, #10]
     a9c:	ldrb	w12, [x1, #5]
     aa0:	lsl	x11, x4, #16
     aa4:	lsl	x10, x9, #32
     aa8:	ldrb	w4, [x1, #6]
     aac:	ldrb	w9, [x1, #8]
     ab0:	orr	x5, x12, x5, lsl #40
     ab4:	orr	x4, x11, x4, lsl #8
     ab8:	orr	x9, x10, x9, lsl #24
     abc:	ubfx	x10, x5, #43, #4
     ac0:	orr	x4, x4, x9
     ac4:	cmp	x10, #0x5
     ac8:	orr	x4, x4, x5
     acc:	b.ne	9ac <bcj_ia64.isra.0+0x3c>  // b.any
     ad0:	tst	x4, #0x38000
     ad4:	b.ne	9ac <bcj_ia64.isra.0+0x3c>  // b.any
     ad8:	lsr	x5, x4, #42
     adc:	ubfx	x12, x4, #19, #20
     ae0:	ldr	w11, [x7]
     ae4:	sub	w9, w0, #0x10
     ae8:	ubfiz	w5, w5, #20, #1
     aec:	and	x10, x8, x4, lsr #6
     af0:	orr	w5, w5, w12
     af4:	add	w9, w9, w11
     af8:	lsl	w5, w5, #4
     afc:	sub	w5, w5, w9
     b00:	lsr	w5, w5, #4
     b04:	lsl	x9, x5, #16
     b08:	ubfiz	x5, x5, #13, #20
     b0c:	and	x9, x9, #0x1000000000
     b10:	orr	x5, x5, x9
     b14:	orr	x5, x5, x10
     b18:	bfi	x4, x5, #6, #58
     b1c:	strb	w4, [x1, #5]
     b20:	lsr	x11, x4, #8
     b24:	lsr	x10, x4, #16
     b28:	lsr	x9, x4, #24
     b2c:	lsr	x5, x4, #32
     b30:	lsr	x4, x4, #40
     b34:	strb	w11, [x1, #6]
     b38:	strb	w10, [x1, #7]
     b3c:	strb	w9, [x1, #8]
     b40:	strb	w5, [x1, #9]
     b44:	strb	w4, [x1, #10]
     b48:	tbz	w3, #2, 9b0 <bcj_ia64.isra.0+0x40>
     b4c:	nop
     b50:	ldrb	w3, [x1, #12]
     b54:	ldrb	w5, [x1, #14]
     b58:	ldrb	w4, [x1, #15]
     b5c:	ldrb	w11, [x1, #10]
     b60:	lsl	x10, x3, #16
     b64:	lsl	x9, x5, #32
     b68:	ldrb	w3, [x1, #11]
     b6c:	ldrb	w5, [x1, #13]
     b70:	orr	x4, x11, x4, lsl #40
     b74:	orr	x3, x10, x3, lsl #8
     b78:	orr	x5, x9, x5, lsl #24
     b7c:	lsr	x9, x4, #44
     b80:	orr	x3, x3, x5
     b84:	cmp	x9, #0x5
     b88:	orr	x3, x3, x4
     b8c:	b.ne	9b0 <bcj_ia64.isra.0+0x40>  // b.any
     b90:	tst	x3, #0x70000
     b94:	b.ne	9b0 <bcj_ia64.isra.0+0x40>  // b.any
     b98:	lsr	x4, x3, #43
     b9c:	ubfx	x11, x3, #20, #20
     ba0:	ldr	w10, [x7]
     ba4:	sub	w5, w0, #0x10
     ba8:	ubfiz	w4, w4, #20, #1
     bac:	and	x9, x8, x3, lsr #7
     bb0:	orr	w4, w4, w11
     bb4:	add	w5, w5, w10
     bb8:	add	x1, x1, #0x10
     bbc:	lsl	w4, w4, #4
     bc0:	sub	w4, w4, w5
     bc4:	lsr	w4, w4, #4
     bc8:	lsl	x5, x4, #16
     bcc:	ubfiz	x4, x4, #13, #20
     bd0:	and	x5, x5, #0x1000000000
     bd4:	orr	x4, x4, x5
     bd8:	orr	x4, x4, x9
     bdc:	bfi	x3, x4, #7, #57
     be0:	sturb	w3, [x1, #-6]
     be4:	lsr	x10, x3, #8
     be8:	lsr	x9, x3, #16
     bec:	lsr	x5, x3, #24
     bf0:	lsr	x4, x3, #32
     bf4:	lsr	x3, x3, #40
     bf8:	sturb	w10, [x1, #-5]
     bfc:	sturb	w9, [x1, #-4]
     c00:	sturb	w5, [x1, #-3]
     c04:	sturb	w4, [x1, #-2]
     c08:	sturb	w3, [x1, #-1]
     c0c:	add	x3, x0, #0x10
     c10:	cmp	x3, x2
     c14:	b.ls	9c0 <bcj_ia64.isra.0+0x50>  // b.plast
     c18:	ret
     c1c:	mov	x0, #0x0                   	// #0
     c20:	ret
     c24:	nop
	...

0000000000000c30 <bcj_arm.isra.0>:
     c30:	cmp	x2, #0x3
     c34:	mov	x8, x0
     c38:	b.ls	cb4 <bcj_arm.isra.0+0x84>  // b.plast
     c3c:	mov	x0, #0x4                   	// #4
     c40:	mov	w10, #0xfffffff8            	// #-8
     c44:	b	c4c <bcj_arm.isra.0+0x1c>
     c48:	mov	x0, x6
     c4c:	ldrb	w3, [x1, #3]
     c50:	add	x6, x0, #0x4
     c54:	cmp	w3, #0xeb
     c58:	b.ne	ca4 <bcj_arm.isra.0+0x74>  // b.any
     c5c:	ldrb	w7, [x1, #2]
     c60:	sub	w3, w0, #0x4
     c64:	ldrb	w5, [x1, #1]
     c68:	ldrb	w9, [x1]
     c6c:	lsl	w7, w7, #16
     c70:	ldr	w4, [x8]
     c74:	orr	w5, w7, w5, lsl #8
     c78:	orr	w5, w5, w9
     c7c:	sub	w4, w10, w4
     c80:	lsl	w5, w5, #2
     c84:	sub	w3, w5, w3
     c88:	add	w3, w4, w3
     c8c:	lsr	w5, w3, #2
     c90:	lsr	w4, w3, #10
     c94:	lsr	w3, w3, #18
     c98:	strb	w5, [x1]
     c9c:	strb	w4, [x1, #1]
     ca0:	strb	w3, [x1, #2]
     ca4:	add	x1, x1, #0x4
     ca8:	cmp	x6, x2
     cac:	b.ls	c48 <bcj_arm.isra.0+0x18>  // b.plast
     cb0:	ret
     cb4:	mov	x0, #0x0                   	// #0
     cb8:	ret
     cbc:	nop

0000000000000cc0 <bcj_armthumb.isra.0>:
     cc0:	mov	x10, x0
     cc4:	cmp	x2, #0x3
     cc8:	mov	x0, #0x0                   	// #0
     ccc:	b.ls	d34 <bcj_armthumb.isra.0+0x74>  // b.plast
     cd0:	mov	w11, #0xfffffffc            	// #-4
     cd4:	b	cec <bcj_armthumb.isra.0+0x2c>
     cd8:	mov	x3, x0
     cdc:	mov	x0, x7
     ce0:	add	x3, x3, #0x6
     ce4:	cmp	x3, x2
     ce8:	b.hi	d34 <bcj_armthumb.isra.0+0x74>  // b.pmore
     cec:	add	x5, x0, #0x1
     cf0:	add	x3, x0, #0x2
     cf4:	mov	x7, x3
     cf8:	ldrb	w4, [x1, x5]
     cfc:	and	w6, w4, #0xf8
     d00:	cmp	w6, #0xf0
     d04:	b.ne	cd8 <bcj_armthumb.isra.0+0x18>  // b.any
     d08:	add	x7, x0, #0x3
     d0c:	mov	x9, x3
     d10:	ldrb	w6, [x1, x7]
     d14:	and	w8, w6, #0xf8
     d18:	cmp	w8, #0xf8
     d1c:	b.eq	d38 <bcj_armthumb.isra.0+0x78>  // b.none
     d20:	mov	x3, x0
     d24:	mov	x0, x9
     d28:	add	x3, x3, #0x6
     d2c:	cmp	x3, x2
     d30:	b.ls	cec <bcj_armthumb.isra.0+0x2c>  // b.plast
     d34:	ret
     d38:	ldrb	w8, [x1, x0]
     d3c:	ubfiz	w6, w6, #8, #3
     d40:	ldrb	w9, [x1, x3]
     d44:	ubfiz	w4, w4, #19, #3
     d48:	orr	w4, w4, w6
     d4c:	ldr	w6, [x10]
     d50:	orr	w8, w9, w8, lsl #11
     d54:	sub	w6, w11, w6
     d58:	orr	w4, w4, w8
     d5c:	lsl	w4, w4, #1
     d60:	sub	w4, w4, w0
     d64:	add	w4, w6, w4
     d68:	ubfx	x6, x4, #20, #3
     d6c:	lsr	w8, w4, #12
     d70:	orr	w6, w6, #0xfffffff0
     d74:	strb	w6, [x1, x5]
     d78:	lsr	w5, w4, #9
     d7c:	strb	w8, [x1, x0]
     d80:	orr	w5, w5, #0xfffffff8
     d84:	strb	w5, [x1, x7]
     d88:	lsr	w4, w4, #1
     d8c:	add	x0, x0, #0x4
     d90:	strb	w4, [x1, x3]
     d94:	b	ce0 <bcj_armthumb.isra.0+0x20>

0000000000000d98 <bcj_sparc.isra.0>:
     d98:	cmp	x2, #0x3
     d9c:	mov	x8, x0
     da0:	b.ls	e2c <bcj_sparc.isra.0+0x94>  // b.plast
     da4:	mov	x0, #0x4                   	// #4
     da8:	mov	w7, #0x1ff                 	// #511
     dac:	mov	w9, #0x40000000            	// #1073741824
     db0:	b	db8 <bcj_sparc.isra.0+0x20>
     db4:	mov	x0, x5
     db8:	ldr	w3, [x1]
     dbc:	sub	w6, w0, #0x4
     dc0:	add	x5, x0, #0x4
     dc4:	rev	w3, w3
     dc8:	lsl	w4, w3, #2
     dcc:	lsr	w3, w3, #22
     dd0:	cmp	w3, #0x100
     dd4:	ccmp	w3, w7, #0x4, ne  // ne = any
     dd8:	b.ne	e1c <bcj_sparc.isra.0+0x84>  // b.any
     ddc:	ldr	w3, [x8]
     de0:	sub	w4, w4, w3
     de4:	sub	w4, w4, w6
     de8:	lsr	w4, w4, #2
     dec:	and	w3, w4, #0x400000
     df0:	and	w4, w4, #0x3fffff
     df4:	sub	w3, w9, w3
     df8:	orr	w3, w3, w4
     dfc:	orr	w3, w3, #0x40000000
     e00:	strb	w3, [x1, #3]
     e04:	lsr	w6, w3, #24
     e08:	lsr	w4, w3, #16
     e0c:	lsr	w3, w3, #8
     e10:	strb	w6, [x1]
     e14:	strb	w4, [x1, #1]
     e18:	strb	w3, [x1, #2]
     e1c:	add	x1, x1, #0x4
     e20:	cmp	x5, x2
     e24:	b.ls	db4 <bcj_sparc.isra.0+0x1c>  // b.plast
     e28:	ret
     e2c:	mov	x0, #0x0                   	// #0
     e30:	ret
     e34:	nop

0000000000000e38 <bcj_apply>:
     e38:	stp	x29, x30, [sp, #-32]!
     e3c:	mov	x18, x0
     e40:	mov	x29, sp
     e44:	ldr	x4, [x2]
     e48:	ldr	w5, [x0]
     e4c:	str	x19, [sp, #16]
     e50:	add	x1, x1, x4
     e54:	mov	x19, x2
     e58:	cmp	w5, #0x7
     e5c:	sub	x2, x3, x4
     e60:	b.eq	fac <bcj_apply+0x174>  // b.none
     e64:	b.hi	eec <bcj_apply+0xb4>  // b.pmore
     e68:	cmp	w5, #0x5
     e6c:	b.eq	f4c <bcj_apply+0x114>  // b.none
     e70:	cmp	w5, #0x6
     e74:	b.ne	ea8 <bcj_apply+0x70>  // b.any
     e78:	add	x0, x0, #0xc
     e7c:	bl	970 <bcj_ia64.isra.0>
     e80:	ldr	x2, [x19]
     e84:	mov	w1, w0
     e88:	add	x4, x0, x2
     e8c:	ldr	w0, [x18, #12]
     e90:	str	x4, [x19]
     e94:	add	w0, w0, w1
     e98:	ldr	x19, [sp, #16]
     e9c:	str	w0, [x18, #12]
     ea0:	ldp	x29, x30, [sp], #32
     ea4:	ret
     ea8:	cmp	w5, #0x4
     eac:	b.ne	f2c <bcj_apply+0xf4>  // b.any
     eb0:	mov	x3, x2
     eb4:	mov	x2, x1
     eb8:	add	x1, x0, #0x10
     ebc:	add	x0, x0, #0xc
     ec0:	bl	720 <bcj_x86.isra.0>
     ec4:	mov	w1, w0
     ec8:	ldr	x2, [x19]
     ecc:	add	x4, x0, x2
     ed0:	ldr	w0, [x18, #12]
     ed4:	str	x4, [x19]
     ed8:	add	w0, w0, w1
     edc:	ldr	x19, [sp, #16]
     ee0:	str	w0, [x18, #12]
     ee4:	ldp	x29, x30, [sp], #32
     ee8:	ret
     eec:	cmp	w5, #0x8
     ef0:	b.eq	f7c <bcj_apply+0x144>  // b.none
     ef4:	cmp	w5, #0x9
     ef8:	b.ne	f2c <bcj_apply+0xf4>  // b.any
     efc:	add	x0, x0, #0xc
     f00:	bl	d98 <bcj_sparc.isra.0>
     f04:	ldr	x2, [x19]
     f08:	mov	w1, w0
     f0c:	add	x4, x0, x2
     f10:	ldr	w0, [x18, #12]
     f14:	str	x4, [x19]
     f18:	add	w0, w0, w1
     f1c:	ldr	x19, [sp, #16]
     f20:	str	w0, [x18, #12]
     f24:	ldp	x29, x30, [sp], #32
     f28:	ret
     f2c:	ldr	w0, [x18, #12]
     f30:	mov	w1, #0x0                   	// #0
     f34:	str	x4, [x19]
     f38:	add	w0, w0, w1
     f3c:	ldr	x19, [sp, #16]
     f40:	str	w0, [x18, #12]
     f44:	ldp	x29, x30, [sp], #32
     f48:	ret
     f4c:	add	x0, x0, #0xc
     f50:	bl	8e0 <bcj_powerpc.isra.0>
     f54:	ldr	x2, [x19]
     f58:	mov	w1, w0
     f5c:	add	x4, x0, x2
     f60:	ldr	w0, [x18, #12]
     f64:	str	x4, [x19]
     f68:	add	w0, w0, w1
     f6c:	ldr	x19, [sp, #16]
     f70:	str	w0, [x18, #12]
     f74:	ldp	x29, x30, [sp], #32
     f78:	ret
     f7c:	add	x0, x0, #0xc
     f80:	bl	cc0 <bcj_armthumb.isra.0>
     f84:	ldr	x2, [x19]
     f88:	mov	w1, w0
     f8c:	add	x4, x0, x2
     f90:	ldr	w0, [x18, #12]
     f94:	str	x4, [x19]
     f98:	add	w0, w0, w1
     f9c:	ldr	x19, [sp, #16]
     fa0:	str	w0, [x18, #12]
     fa4:	ldp	x29, x30, [sp], #32
     fa8:	ret
     fac:	add	x0, x0, #0xc
     fb0:	bl	c30 <bcj_arm.isra.0>
     fb4:	ldr	x2, [x19]
     fb8:	mov	w1, w0
     fbc:	add	x4, x0, x2
     fc0:	ldr	w0, [x18, #12]
     fc4:	str	x4, [x19]
     fc8:	add	w0, w0, w1
     fcc:	ldr	x19, [sp, #16]
     fd0:	str	w0, [x18, #12]
     fd4:	ldp	x29, x30, [sp], #32
     fd8:	ret
     fdc:	nop

0000000000000fe0 <xz_dec_bcj_run>:
     fe0:	stp	x29, x30, [sp, #-80]!
     fe4:	mov	x29, sp
     fe8:	stp	x19, x20, [sp, #16]
     fec:	mov	x20, x2
     ff0:	mov	x19, x0
     ff4:	ldr	x2, [x0, #48]
     ff8:	stp	x21, x22, [sp, #32]
     ffc:	mov	x22, x1
    1000:	ldp	x4, x3, [x20, #32]
    1004:	sub	x3, x3, x4
    1008:	cbnz	x2, 1130 <xz_dec_bcj_run+0x150>
    100c:	ldr	x2, [x19, #56]
    1010:	cmp	x2, x3
    1014:	b.cc	1030 <xz_dec_bcj_run+0x50>  // b.lo, b.ul, b.last
    1018:	cbnz	x2, 10c0 <xz_dec_bcj_run+0xe0>
    101c:	ldr	w0, [x19, #4]
    1020:	ldp	x19, x20, [sp, #16]
    1024:	ldp	x21, x22, [sp, #32]
    1028:	ldp	x29, x30, [sp], #80
    102c:	ret
    1030:	ldr	x0, [x20, #24]
    1034:	add	x21, x19, #0x40
    1038:	mov	x1, x21
    103c:	str	x4, [sp, #72]
    1040:	add	x0, x0, x4
    1044:	bl	0 <grub_memmove>
    1048:	ldr	x2, [x20, #32]
    104c:	mov	x1, x20
    1050:	ldr	x3, [x19, #56]
    1054:	mov	x0, x22
    1058:	add	x2, x2, x3
    105c:	str	x2, [x20, #32]
    1060:	bl	2020 <xz_dec_lzma2_run>
    1064:	str	w0, [x19, #4]
    1068:	cmp	w0, #0x1
    106c:	b.eq	107c <xz_dec_bcj_run+0x9c>  // b.none
    1070:	cbnz	w0, 1020 <xz_dec_bcj_run+0x40>
    1074:	ldr	w0, [x19, #8]
    1078:	cbnz	w0, 1228 <xz_dec_bcj_run+0x248>
    107c:	ldp	x1, x3, [x20, #24]
    1080:	mov	x0, x19
    1084:	add	x2, sp, #0x48
    1088:	bl	e38 <bcj_apply>
    108c:	ldr	w0, [x19, #4]
    1090:	cmp	w0, #0x1
    1094:	b.eq	1240 <xz_dec_bcj_run+0x260>  // b.none
    1098:	ldp	x3, x2, [x20, #24]
    109c:	mov	x0, x21
    10a0:	ldr	x1, [sp, #72]
    10a4:	sub	x2, x2, x1
    10a8:	str	x2, [x19, #56]
    10ac:	str	x1, [x20, #32]
    10b0:	add	x1, x3, x1
    10b4:	bl	0 <grub_memmove>
    10b8:	ldr	x2, [x19, #56]
    10bc:	cbz	x2, 101c <xz_dec_bcj_run+0x3c>
    10c0:	ldr	x0, [x20, #24]
    10c4:	str	x23, [sp, #48]
    10c8:	str	x0, [x19, #24]
    10cc:	mov	x3, #0x10                  	// #16
    10d0:	ldr	x0, [x20, #32]
    10d4:	str	x0, [x19, #32]
    10d8:	ldr	x0, [x20, #40]
    10dc:	str	x0, [x19, #40]
    10e0:	add	x23, x19, #0x40
    10e4:	stp	x23, x2, [x20, #24]
    10e8:	mov	x1, x20
    10ec:	str	x3, [x20, #40]
    10f0:	mov	x0, x22
    10f4:	bl	2020 <xz_dec_lzma2_run>
    10f8:	cmp	w0, #0x1
    10fc:	ldp	x1, x2, [x19, #24]
    1100:	ldr	x3, [x20, #32]
    1104:	str	w0, [x19, #4]
    1108:	str	x3, [x19, #56]
    110c:	str	x1, [x20, #24]
    1110:	ldr	x1, [x19, #40]
    1114:	stp	x2, x1, [x20, #32]
    1118:	b.ls	11a0 <xz_dec_bcj_run+0x1c0>  // b.plast
    111c:	ldp	x19, x20, [sp, #16]
    1120:	ldp	x21, x22, [sp, #32]
    1124:	ldr	x23, [sp, #48]
    1128:	ldp	x29, x30, [sp], #80
    112c:	ret
    1130:	cmp	x2, x3
    1134:	ldr	x0, [x20, #24]
    1138:	csel	x21, x2, x3, ls  // ls = plast
    113c:	str	x23, [sp, #48]
    1140:	add	x23, x19, #0x40
    1144:	mov	x2, x21
    1148:	add	x0, x0, x4
    114c:	mov	x1, x23
    1150:	bl	0 <grub_memmove>
    1154:	ldp	x0, x2, [x19, #48]
    1158:	add	x1, x23, x21
    115c:	ldr	x3, [x20, #32]
    1160:	add	x3, x3, x21
    1164:	str	x3, [x20, #32]
    1168:	sub	x0, x0, x21
    116c:	sub	x2, x2, x21
    1170:	stp	x0, x2, [x19, #48]
    1174:	mov	x0, x23
    1178:	bl	0 <grub_memmove>
    117c:	ldr	x0, [x19, #48]
    1180:	cbnz	x0, 1224 <xz_dec_bcj_run+0x244>
    1184:	ldr	w0, [x19, #4]
    1188:	cmp	w0, #0x1
    118c:	b.eq	123c <xz_dec_bcj_run+0x25c>  // b.none
    1190:	ldp	x4, x3, [x20, #32]
    1194:	ldr	x23, [sp, #48]
    1198:	sub	x3, x3, x4
    119c:	b	100c <xz_dec_bcj_run+0x2c>
    11a0:	add	x2, x19, #0x30
    11a4:	mov	x0, x19
    11a8:	mov	x1, x23
    11ac:	bl	e38 <bcj_apply>
    11b0:	ldr	w0, [x19, #4]
    11b4:	cmp	w0, #0x1
    11b8:	ldp	x2, x0, [x19, #48]
    11bc:	b.ne	11c8 <xz_dec_bcj_run+0x1e8>  // b.any
    11c0:	mov	x2, x0
    11c4:	str	x0, [x19, #48]
    11c8:	ldp	x3, x0, [x20, #24]
    11cc:	mov	x1, x23
    11d0:	ldr	x21, [x20, #40]
    11d4:	sub	x21, x21, x0
    11d8:	add	x0, x3, x0
    11dc:	cmp	x21, x2
    11e0:	csel	x21, x21, x2, ls  // ls = plast
    11e4:	mov	x2, x21
    11e8:	bl	0 <grub_memmove>
    11ec:	ldp	x0, x2, [x19, #48]
    11f0:	add	x1, x23, x21
    11f4:	ldr	x3, [x20, #32]
    11f8:	add	x3, x3, x21
    11fc:	str	x3, [x20, #32]
    1200:	sub	x0, x0, x21
    1204:	sub	x2, x2, x21
    1208:	stp	x0, x2, [x19, #48]
    120c:	mov	x0, x23
    1210:	bl	0 <grub_memmove>
    1214:	ldr	x0, [x19, #48]
    1218:	cbnz	x0, 1224 <xz_dec_bcj_run+0x244>
    121c:	ldr	x23, [sp, #48]
    1220:	b	101c <xz_dec_bcj_run+0x3c>
    1224:	ldr	x23, [sp, #48]
    1228:	mov	w0, #0x0                   	// #0
    122c:	ldp	x19, x20, [sp, #16]
    1230:	ldp	x21, x22, [sp, #32]
    1234:	ldp	x29, x30, [sp], #80
    1238:	ret
    123c:	ldr	x23, [sp, #48]
    1240:	mov	w0, #0x1                   	// #1
    1244:	b	1020 <xz_dec_bcj_run+0x40>

0000000000001248 <xz_dec_bcj_create>:
    1248:	stp	x29, x30, [sp, #-32]!
    124c:	mov	x29, sp
    1250:	str	x19, [sp, #16]
    1254:	mov	w19, w0
    1258:	mov	x0, #0x50                  	// #80
    125c:	bl	0 <grub_malloc>
    1260:	cbz	x0, 1268 <xz_dec_bcj_create+0x20>
    1264:	str	w19, [x0, #8]
    1268:	ldr	x19, [sp, #16]
    126c:	ldp	x29, x30, [sp], #32
    1270:	ret
    1274:	nop

0000000000001278 <xz_dec_bcj_reset>:
    1278:	and	w1, w1, #0xff
    127c:	mov	x2, x0
    1280:	sub	w3, w1, #0x4
    1284:	mov	w0, #0x4                   	// #4
    1288:	cmp	w3, #0x5
    128c:	b.hi	12a0 <xz_dec_bcj_reset+0x28>  // b.pmore
    1290:	mov	w0, #0x0                   	// #0
    1294:	stp	w1, wzr, [x2]
    1298:	stur	xzr, [x2, #12]
    129c:	stp	xzr, xzr, [x2, #48]
    12a0:	ret
    12a4:	nop

00000000000012a8 <lzma_len>:
    12a8:	ldr	w4, [x0, #152]
    12ac:	add	x6, x0, #0x98
    12b0:	mov	w3, #0xffffff              	// #16777215
    12b4:	ldr	w5, [x6, #4]
    12b8:	cmp	w4, w3
    12bc:	b.hi	12e0 <lzma_len+0x38>  // b.pmore
    12c0:	ldp	x7, x3, [x6, #16]
    12c4:	lsl	w4, w4, #8
    12c8:	str	w4, [x0, #152]
    12cc:	add	x8, x3, #0x1
    12d0:	str	x8, [x6, #24]
    12d4:	ldrb	w3, [x7, x3]
    12d8:	add	w5, w3, w5, lsl #8
    12dc:	str	w5, [x6, #4]
    12e0:	ldrh	w7, [x1]
    12e4:	lsr	w3, w4, #11
    12e8:	mul	w3, w3, w7
    12ec:	cmp	w3, w5
    12f0:	b.ls	13c8 <lzma_len+0x120>  // b.plast
    12f4:	mov	x9, #0x4                   	// #4
    12f8:	mov	w4, #0x800                 	// #2048
    12fc:	sub	w4, w4, w7
    1300:	add	x2, x9, w2, uxtw #4
    1304:	add	x9, x1, x2
    1308:	mov	w8, #0x2                   	// #2
    130c:	add	w7, w7, w4, asr #5
    1310:	strh	w7, [x1]
    1314:	mov	w14, #0xfffffffa            	// #-6
    1318:	mov	w13, #0x8                   	// #8
    131c:	str	w8, [x0, #224]
    1320:	mov	w4, #0x1                   	// #1
    1324:	mov	w12, #0xffffff              	// #16777215
    1328:	mov	w11, #0x800                 	// #2048
    132c:	nop
    1330:	cmp	w3, w12
    1334:	add	x8, x9, w4, uxtw #1
    1338:	b.hi	135c <lzma_len+0xb4>  // b.pmore
    133c:	ldp	x2, x1, [x6, #16]
    1340:	lsl	w3, w3, #8
    1344:	str	w3, [x6]
    1348:	add	x7, x1, #0x1
    134c:	str	x7, [x6, #24]
    1350:	ldrb	w1, [x2, x1]
    1354:	add	w5, w1, w5, lsl #8
    1358:	str	w5, [x6, #4]
    135c:	ldrh	w2, [x8]
    1360:	lsr	w1, w3, #11
    1364:	lsl	w4, w4, #1
    1368:	sub	w7, w11, w2
    136c:	sub	w10, w2, w2, lsr #5
    1370:	mul	w1, w1, w2
    1374:	add	w2, w2, w7, asr #5
    1378:	sub	w3, w3, w1
    137c:	cmp	w1, w5
    1380:	b.ls	13a4 <lzma_len+0xfc>  // b.plast
    1384:	str	w1, [x6]
    1388:	cmp	w13, w4
    138c:	strh	w2, [x8]
    1390:	mov	w3, w1
    1394:	b.hi	1330 <lzma_len+0x88>  // b.pmore
    1398:	add	w4, w14, w4
    139c:	str	w4, [x0, #224]
    13a0:	ret
    13a4:	sub	w5, w5, w1
    13a8:	stp	w3, w5, [x6]
    13ac:	strh	w10, [x8]
    13b0:	add	w4, w4, #0x1
    13b4:	cmp	w13, w4
    13b8:	b.hi	1330 <lzma_len+0x88>  // b.pmore
    13bc:	add	w4, w14, w4
    13c0:	str	w4, [x0, #224]
    13c4:	ret
    13c8:	sub	w5, w5, w3
    13cc:	str	w5, [x6, #4]
    13d0:	sub	w7, w7, w7, lsr #5
    13d4:	strh	w7, [x1]
    13d8:	sub	w4, w4, w3
    13dc:	mov	w3, #0xffffff              	// #16777215
    13e0:	cmp	w4, w3
    13e4:	b.hi	1408 <lzma_len+0x160>  // b.pmore
    13e8:	ldp	x7, x3, [x6, #16]
    13ec:	lsl	w4, w4, #8
    13f0:	str	w4, [x0, #152]
    13f4:	add	x8, x3, #0x1
    13f8:	str	x8, [x6, #24]
    13fc:	ldrb	w3, [x7, x3]
    1400:	add	w5, w3, w5, lsl #8
    1404:	str	w5, [x6, #4]
    1408:	ldrh	w7, [x1, #2]
    140c:	lsr	w3, w4, #11
    1410:	mul	w3, w3, w7
    1414:	cmp	w3, w5
    1418:	b.ls	144c <lzma_len+0x1a4>  // b.plast
    141c:	mov	w4, #0x800                 	// #2048
    1420:	sub	w4, w4, w7
    1424:	ubfiz	x2, x2, #4, #32
    1428:	mov	w8, #0xa                   	// #10
    142c:	add	x9, x2, #0x104
    1430:	add	w7, w7, w4, asr #5
    1434:	strh	w7, [x1, #2]
    1438:	add	x9, x1, x9
    143c:	mov	w14, #0x2                   	// #2
    1440:	mov	w13, #0x8                   	// #8
    1444:	str	w8, [x0, #224]
    1448:	b	1320 <lzma_len+0x78>
    144c:	sub	w5, w5, w3
    1450:	str	w5, [x6, #4]
    1454:	sub	w7, w7, w7, lsr #5
    1458:	strh	w7, [x1, #2]
    145c:	add	x9, x1, #0x204
    1460:	sub	w3, w4, w3
    1464:	mov	w1, #0x12                  	// #18
    1468:	mov	w14, #0xffffff12            	// #-238
    146c:	mov	w13, #0x100                 	// #256
    1470:	str	w1, [x0, #224]
    1474:	b	1320 <lzma_len+0x78>

0000000000001478 <lzma_main>:
    1478:	stp	x29, x30, [sp, #-32]!
    147c:	mov	x29, sp
    1480:	ldr	x5, [x0, #112]
    1484:	ldr	x1, [x0, #128]
    1488:	cmp	x5, x1
    148c:	b.cc	14dc <lzma_main+0x64>  // b.lo, b.ul, b.last
    1490:	ldr	w6, [x0, #152]
    1494:	mov	w1, #0xffffff              	// #16777215
    1498:	mov	w2, #0x1                   	// #1
    149c:	cmp	w6, w1
    14a0:	b.hi	14d0 <lzma_main+0x58>  // b.pmore
    14a4:	lsl	w1, w6, #8
    14a8:	add	x3, x0, #0x98
    14ac:	str	w1, [x0, #152]
    14b0:	ldr	x1, [x0, #176]
    14b4:	ldr	x4, [x0, #168]
    14b8:	add	x0, x1, #0x1
    14bc:	str	x0, [x3, #24]
    14c0:	ldr	w0, [x3, #4]
    14c4:	ldrb	w1, [x4, x1]
    14c8:	add	w0, w1, w0, lsl #8
    14cc:	str	w0, [x3, #4]
    14d0:	mov	w0, w2
    14d4:	ldp	x29, x30, [sp], #32
    14d8:	ret
    14dc:	ldr	w3, [x0, #224]
    14e0:	stp	x19, x20, [sp, #16]
    14e4:	cbnz	w3, 1f50 <lzma_main+0xad8>
    14e8:	ldr	w6, [x0, #152]
    14ec:	mov	w18, #0xffffff              	// #16777215
    14f0:	mov	w19, #0x1                   	// #1
    14f4:	nop
    14f8:	ldp	x9, x1, [x0, #176]
    14fc:	cmp	x9, x1
    1500:	b.hi	1674 <lzma_main+0x1fc>  // b.pmore
    1504:	ldp	w2, w8, [x0, #200]
    1508:	add	x15, x0, #0x98
    150c:	cmp	w6, w18
    1510:	ldr	w3, [x15, #4]
    1514:	and	w2, w2, w5
    1518:	b.hi	1540 <lzma_main+0xc8>  // b.pmore
    151c:	ldr	x4, [x15, #16]
    1520:	lsl	w6, w6, #8
    1524:	str	w6, [x0, #152]
    1528:	add	x1, x9, #0x1
    152c:	str	x1, [x15, #24]
    1530:	ldrb	w4, [x4, x9]
    1534:	mov	x9, x1
    1538:	add	w3, w4, w3, lsl #8
    153c:	str	w3, [x15, #4]
    1540:	ubfiz	x4, x8, #4, #32
    1544:	lsr	w1, w6, #11
    1548:	add	x4, x4, w2, uxtw
    154c:	mov	w10, w8
    1550:	add	x4, x0, x4, lsl #1
    1554:	ldrh	w7, [x4, #228]
    1558:	mul	w1, w1, w7
    155c:	cmp	w1, w3
    1560:	b.ls	1698 <lzma_main+0x220>  // b.plast
    1564:	mov	w2, #0x800                 	// #2048
    1568:	sub	w2, w2, w7
    156c:	str	w1, [x0, #152]
    1570:	add	w7, w7, w2, asr #5
    1574:	strh	w7, [x4, #228]
    1578:	cbz	x5, 1aa0 <lzma_main+0x628>
    157c:	sub	x4, x5, #0x1
    1580:	add	x10, x0, #0x60
    1584:	ldr	x9, [x10, #24]
    1588:	mov	w2, #0x0                   	// #0
    158c:	ldr	x11, [x10]
    1590:	cbz	x9, 1598 <lzma_main+0x120>
    1594:	ldrb	w2, [x11, x4]
    1598:	ldp	w7, w4, [x0, #192]
    159c:	mov	w6, #0x8                   	// #8
    15a0:	mov	w12, #0x600                 	// #1536
    15a4:	cmp	w8, #0x6
    15a8:	and	x4, x4, x5
    15ac:	sub	w6, w6, w7
    15b0:	lsl	x4, x4, x7
    15b4:	lsr	w2, w2, w6
    15b8:	add	w2, w2, w4
    15bc:	umaddl	x2, w2, w12, x0
    15c0:	add	x13, x2, #0xf50
    15c4:	b.hi	1ac8 <lzma_main+0x650>  // b.pmore
    15c8:	mov	w14, #0x1                   	// #1
    15cc:	mov	w9, #0x800                 	// #2048
    15d0:	cmp	w1, w18
    15d4:	ubfiz	x6, x14, #1, #32
    15d8:	b.hi	15fc <lzma_main+0x184>  // b.pmore
    15dc:	ldp	x2, x4, [x15, #16]
    15e0:	lsl	w1, w1, #8
    15e4:	str	w1, [x15]
    15e8:	add	x7, x4, #0x1
    15ec:	str	x7, [x15, #24]
    15f0:	ldrb	w2, [x2, x4]
    15f4:	add	w3, w2, w3, lsl #8
    15f8:	str	w3, [x15, #4]
    15fc:	ldrh	w4, [x13, x6]
    1600:	lsr	w2, w1, #11
    1604:	lsl	w14, w14, #1
    1608:	sub	w7, w9, w4
    160c:	sub	w8, w4, w4, lsr #5
    1610:	mul	w2, w2, w4
    1614:	add	w4, w4, w7, asr #5
    1618:	sub	w1, w1, w2
    161c:	cmp	w2, w3
    1620:	b.ls	167c <lzma_main+0x204>  // b.plast
    1624:	str	w2, [x15]
    1628:	cmp	w14, #0xff
    162c:	strh	w4, [x13, x6]
    1630:	mov	w1, w2
    1634:	b.ls	15d0 <lzma_main+0x158>  // b.plast
    1638:	add	x1, x5, #0x1
    163c:	str	x1, [x10, #16]
    1640:	strb	w14, [x11, x5]
    1644:	ldp	x5, x1, [x10, #16]
    1648:	cmp	x1, x5
    164c:	b.cs	1654 <lzma_main+0x1dc>  // b.hs, b.nlast
    1650:	str	x5, [x10, #24]
    1654:	ldr	w1, [x0, #204]
    1658:	cmp	w1, #0x3
    165c:	b.hi	1ab0 <lzma_main+0x638>  // b.pmore
    1660:	str	wzr, [x0, #204]
    1664:	ldr	x1, [x0, #128]
    1668:	ldr	w6, [x0, #152]
    166c:	cmp	x1, x5
    1670:	b.hi	14f8 <lzma_main+0x80>  // b.pmore
    1674:	ldp	x19, x20, [sp, #16]
    1678:	b	1494 <lzma_main+0x1c>
    167c:	sub	w3, w3, w2
    1680:	stp	w1, w3, [x15]
    1684:	strh	w8, [x13, x6]
    1688:	add	w14, w14, #0x1
    168c:	cmp	w14, #0xff
    1690:	b.ls	15d0 <lzma_main+0x158>  // b.plast
    1694:	b	1638 <lzma_main+0x1c0>
    1698:	sub	w3, w3, w1
    169c:	str	w3, [x15, #4]
    16a0:	sub	w7, w7, w7, lsr #5
    16a4:	strh	w7, [x4, #228]
    16a8:	sub	w1, w6, w1
    16ac:	cmp	w1, w18
    16b0:	b.hi	16d8 <lzma_main+0x260>  // b.pmore
    16b4:	ldr	x6, [x15, #16]
    16b8:	lsl	w1, w1, #8
    16bc:	str	w1, [x0, #152]
    16c0:	add	x5, x9, #0x1
    16c4:	str	x5, [x15, #24]
    16c8:	ldrb	w6, [x6, x9]
    16cc:	mov	x9, x5
    16d0:	add	w3, w6, w3, lsl #8
    16d4:	str	w3, [x15, #4]
    16d8:	add	x6, x0, x10, lsl #1
    16dc:	lsr	w5, w1, #11
    16e0:	ldrh	w7, [x6, #612]
    16e4:	mul	w5, w5, w7
    16e8:	cmp	w5, w3
    16ec:	b.ls	19cc <lzma_main+0x554>  // b.plast
    16f0:	mov	w20, #0x800                 	// #2048
    16f4:	sub	w1, w20, w7
    16f8:	ldp	w4, w3, [x0, #212]
    16fc:	str	w5, [x0, #152]
    1700:	ldr	w5, [x0, #208]
    1704:	cmp	w8, #0x7
    1708:	add	w7, w7, w1, asr #5
    170c:	strh	w7, [x6, #612]
    1710:	mov	w1, #0x7                   	// #7
    1714:	mov	w6, #0xa                   	// #10
    1718:	csel	w1, w1, w6, cc  // cc = lo, ul, last
    171c:	str	w1, [x0, #204]
    1720:	stp	w5, w4, [x0, #212]
    1724:	add	x1, x0, #0x748
    1728:	str	w3, [x0, #220]
    172c:	bl	12a8 <lzma_len>
    1730:	ldr	w2, [x0, #224]
    1734:	mov	w8, #0x5                   	// #5
    1738:	ldr	w1, [x0, #152]
    173c:	cmp	w2, w8
    1740:	ldr	w4, [x15, #4]
    1744:	csel	w8, w2, w8, ls  // ls = plast
    1748:	mov	w10, w20
    174c:	sub	w8, w8, #0x2
    1750:	mov	w3, #0x1                   	// #1
    1754:	lsl	x8, x8, #7
    1758:	add	x8, x8, #0x444
    175c:	nop
    1760:	cmp	w1, w18
    1764:	add	x6, x8, w3, uxtw #1
    1768:	b.hi	178c <lzma_main+0x314>  // b.pmore
    176c:	ldp	x5, x2, [x15, #16]
    1770:	lsl	w1, w1, #8
    1774:	str	w1, [x15]
    1778:	add	x7, x2, #0x1
    177c:	str	x7, [x15, #24]
    1780:	ldrb	w2, [x5, x2]
    1784:	add	w4, w2, w4, lsl #8
    1788:	str	w4, [x15, #4]
    178c:	ldrh	w5, [x0, x6]
    1790:	lsr	w2, w1, #11
    1794:	lsl	w3, w3, #1
    1798:	sub	w7, w10, w5
    179c:	sub	w9, w5, w5, lsr #5
    17a0:	mul	w2, w2, w5
    17a4:	add	w5, w5, w7, asr #5
    17a8:	sub	w1, w1, w2
    17ac:	cmp	w2, w4
    17b0:	b.ls	1958 <lzma_main+0x4e0>  // b.plast
    17b4:	str	w2, [x15]
    17b8:	cmp	w3, #0x3f
    17bc:	strh	w5, [x0, x6]
    17c0:	mov	w1, w2
    17c4:	b.ls	1760 <lzma_main+0x2e8>  // b.plast
    17c8:	sub	w3, w3, #0x40
    17cc:	cmp	w3, #0x3
    17d0:	b.ls	197c <lzma_main+0x504>  // b.plast
    17d4:	and	w2, w3, #0x1
    17d8:	cmp	w3, #0xd
    17dc:	add	w2, w2, #0x2
    17e0:	str	w2, [x0, #208]
    17e4:	lsr	w9, w3, #1
    17e8:	b.hi	1cd4 <lzma_main+0x85c>  // b.pmore
    17ec:	sub	w9, w9, #0x1
    17f0:	ldr	w7, [x15, #4]
    17f4:	ldr	w1, [x0, #152]
    17f8:	add	x11, x0, #0x644
    17fc:	lsl	w12, w2, w9
    1800:	mov	x2, x12
    1804:	sub	x12, x12, w3, uxtw
    1808:	mov	w6, #0x0                   	// #0
    180c:	mov	w3, w2
    1810:	mov	w5, #0x1                   	// #1
    1814:	lsl	x12, x12, #1
    1818:	mov	w16, #0x800                 	// #2048
    181c:	sub	x12, x12, #0x2
    1820:	str	w2, [x0, #208]
    1824:	b	1840 <lzma_main+0x3c8>
    1828:	str	w2, [x15]
    182c:	add	w6, w6, #0x1
    1830:	strh	w4, [x11, x10]
    1834:	mov	w1, w2
    1838:	cmp	w9, w6
    183c:	b.eq	18c0 <lzma_main+0x448>  // b.none
    1840:	cmp	w1, w18
    1844:	add	x10, x12, w5, uxtw #1
    1848:	lsl	w13, w19, w6
    184c:	b.hi	1870 <lzma_main+0x3f8>  // b.pmore
    1850:	ldp	x4, x2, [x15, #16]
    1854:	lsl	w1, w1, #8
    1858:	str	w1, [x15]
    185c:	add	x8, x2, #0x1
    1860:	str	x8, [x15, #24]
    1864:	ldrb	w2, [x4, x2]
    1868:	add	w7, w2, w7, lsl #8
    186c:	str	w7, [x15, #4]
    1870:	ldrh	w4, [x11, x10]
    1874:	lsr	w2, w1, #11
    1878:	lsl	w5, w5, #1
    187c:	sub	w8, w16, w4
    1880:	sub	w14, w4, w4, lsr #5
    1884:	mul	w2, w2, w4
    1888:	add	w4, w4, w8, asr #5
    188c:	sub	w1, w1, w2
    1890:	cmp	w2, w7
    1894:	b.hi	1828 <lzma_main+0x3b0>  // b.pmore
    1898:	sub	w7, w7, w2
    189c:	stp	w1, w7, [x15]
    18a0:	strh	w14, [x11, x10]
    18a4:	add	w3, w3, w13
    18a8:	str	w3, [x0, #208]
    18ac:	add	w6, w6, #0x1
    18b0:	add	w5, w5, #0x1
    18b4:	cmp	w9, w6
    18b8:	b.ne	1840 <lzma_main+0x3c8>  // b.any
    18bc:	nop
    18c0:	ldr	x1, [x0, #120]
    18c4:	add	x10, x0, #0x60
    18c8:	mov	w4, w3
    18cc:	cmp	x1, w3, uxtw
    18d0:	b.ls	1994 <lzma_main+0x51c>  // b.plast
    18d4:	ldr	w1, [x10, #48]
    18d8:	cmp	w1, w3
    18dc:	b.ls	1994 <lzma_main+0x51c>  // b.plast
    18e0:	ldr	x5, [x10, #16]
    18e4:	ldr	x1, [x10, #32]
    18e8:	sub	x2, x5, #0x1
    18ec:	ldr	w3, [x0, #224]
    18f0:	sub	x2, x2, x4
    18f4:	sub	x1, x1, x5
    18f8:	mov	w6, w3
    18fc:	cmp	x1, x6
    1900:	csel	x1, x1, x6, ls  // ls = plast
    1904:	cmp	x4, x5
    1908:	sub	w3, w3, w1
    190c:	str	w3, [x0, #224]
    1910:	b.cc	1920 <lzma_main+0x4a8>  // b.lo, b.ul, b.last
    1914:	ldr	x3, [x10, #40]
    1918:	add	x2, x2, x3
    191c:	nop
    1920:	ldr	x4, [x10]
    1924:	add	x3, x5, #0x1
    1928:	str	x3, [x10, #16]
    192c:	add	x3, x2, #0x1
    1930:	ldrb	w2, [x4, x2]
    1934:	strb	w2, [x4, x5]
    1938:	ldr	x2, [x10, #40]
    193c:	cmp	x2, x3
    1940:	b.eq	19a8 <lzma_main+0x530>  // b.none
    1944:	subs	w1, w1, #0x1
    1948:	ldr	x5, [x10, #16]
    194c:	b.eq	19b8 <lzma_main+0x540>  // b.none
    1950:	mov	x2, x3
    1954:	b	1920 <lzma_main+0x4a8>
    1958:	sub	w4, w4, w2
    195c:	stp	w1, w4, [x15]
    1960:	strh	w9, [x0, x6]
    1964:	add	w3, w3, #0x1
    1968:	cmp	w3, #0x3f
    196c:	b.ls	1760 <lzma_main+0x2e8>  // b.plast
    1970:	sub	w3, w3, #0x40
    1974:	cmp	w3, #0x3
    1978:	b.hi	17d4 <lzma_main+0x35c>  // b.pmore
    197c:	str	w3, [x0, #208]
    1980:	ldr	x1, [x0, #120]
    1984:	add	x10, x0, #0x60
    1988:	mov	w4, w3
    198c:	cmp	x1, w3, uxtw
    1990:	b.hi	18d4 <lzma_main+0x45c>  // b.pmore
    1994:	mov	w2, #0x0                   	// #0
    1998:	mov	w0, w2
    199c:	ldp	x19, x20, [sp, #16]
    19a0:	ldp	x29, x30, [sp], #32
    19a4:	ret
    19a8:	subs	w1, w1, #0x1
    19ac:	mov	x3, #0x0                   	// #0
    19b0:	ldr	x5, [x10, #16]
    19b4:	b.ne	1950 <lzma_main+0x4d8>  // b.any
    19b8:	ldr	x1, [x10, #24]
    19bc:	cmp	x1, x5
    19c0:	b.cs	1664 <lzma_main+0x1ec>  // b.hs, b.nlast
    19c4:	str	x5, [x10, #24]
    19c8:	b	1664 <lzma_main+0x1ec>
    19cc:	sub	w3, w3, w5
    19d0:	str	w3, [x15, #4]
    19d4:	sub	w7, w7, w7, lsr #5
    19d8:	strh	w7, [x6, #612]
    19dc:	sub	w1, w1, w5
    19e0:	cmp	w1, w18
    19e4:	b.hi	1a0c <lzma_main+0x594>  // b.pmore
    19e8:	ldr	x7, [x15, #16]
    19ec:	lsl	w1, w1, #8
    19f0:	str	w1, [x0, #152]
    19f4:	add	x5, x9, #0x1
    19f8:	str	x5, [x15, #24]
    19fc:	ldrb	w7, [x7, x9]
    1a00:	mov	x9, x5
    1a04:	add	w3, w7, w3, lsl #8
    1a08:	str	w3, [x15, #4]
    1a0c:	ldrh	w7, [x6, #636]
    1a10:	lsr	w5, w1, #11
    1a14:	mul	w5, w5, w7
    1a18:	cmp	w5, w3
    1a1c:	b.ls	1ba4 <lzma_main+0x72c>  // b.plast
    1a20:	mov	w1, #0x800                 	// #2048
    1a24:	sub	w1, w1, w7
    1a28:	cmp	w5, w18
    1a2c:	add	w7, w7, w1, asr #5
    1a30:	strh	w7, [x6, #636]
    1a34:	b.hi	1a58 <lzma_main+0x5e0>  // b.pmore
    1a38:	ldr	x1, [x15, #16]
    1a3c:	lsl	w5, w5, #8
    1a40:	str	w5, [x0, #152]
    1a44:	add	x6, x9, #0x1
    1a48:	str	x6, [x15, #24]
    1a4c:	ldrb	w1, [x1, x9]
    1a50:	add	w3, w1, w3, lsl #8
    1a54:	str	w3, [x15, #4]
    1a58:	ldrh	w7, [x4, #708]
    1a5c:	lsr	w6, w5, #11
    1a60:	mul	w6, w6, w7
    1a64:	cmp	w6, w3
    1a68:	b.ls	1c40 <lzma_main+0x7c8>  // b.plast
    1a6c:	mov	w1, #0x800                 	// #2048
    1a70:	sub	w1, w1, w7
    1a74:	str	w6, [x0, #152]
    1a78:	cmp	w8, #0x7
    1a7c:	add	w7, w7, w1, asr #5
    1a80:	ldr	w3, [x0, #208]
    1a84:	strh	w7, [x4, #708]
    1a88:	mov	w1, #0x9                   	// #9
    1a8c:	mov	w2, #0xb                   	// #11
    1a90:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    1a94:	str	w1, [x0, #204]
    1a98:	str	w19, [x0, #224]
    1a9c:	b	18c0 <lzma_main+0x448>
    1aa0:	ldr	x4, [x0, #136]
    1aa4:	add	x10, x0, #0x60
    1aa8:	sub	x4, x4, #0x1
    1aac:	b	1584 <lzma_main+0x10c>
    1ab0:	cmp	w1, #0xa
    1ab4:	sub	w2, w1, #0x6
    1ab8:	sub	w1, w1, #0x3
    1abc:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    1ac0:	str	w1, [x0, #204]
    1ac4:	b	1664 <lzma_main+0x1ec>
    1ac8:	ldr	w4, [x0, #208]
    1acc:	mvn	x2, x4
    1ad0:	cmp	x4, x5
    1ad4:	add	x2, x2, x5
    1ad8:	b.cc	1ae4 <lzma_main+0x66c>  // b.lo, b.ul, b.last
    1adc:	ldr	x4, [x10, #40]
    1ae0:	add	x2, x2, x4
    1ae4:	mov	w12, #0x0                   	// #0
    1ae8:	cbz	x9, 1af4 <lzma_main+0x67c>
    1aec:	ldrb	w12, [x11, x2]
    1af0:	lsl	w12, w12, #1
    1af4:	mov	w8, #0x100                 	// #256
    1af8:	mov	w14, #0x1                   	// #1
    1afc:	mov	w17, #0x800                 	// #2048
    1b00:	and	w7, w12, w8
    1b04:	add	w2, w8, w14
    1b08:	add	w2, w2, w7
    1b0c:	cmp	w1, w18
    1b10:	lsl	w12, w12, #1
    1b14:	lsl	w14, w14, #1
    1b18:	lsl	x2, x2, #1
    1b1c:	b.hi	1b40 <lzma_main+0x6c8>  // b.pmore
    1b20:	ldp	x6, x4, [x15, #16]
    1b24:	lsl	w1, w1, #8
    1b28:	str	w1, [x15]
    1b2c:	add	x9, x4, #0x1
    1b30:	str	x9, [x15, #24]
    1b34:	ldrb	w4, [x6, x4]
    1b38:	add	w3, w4, w3, lsl #8
    1b3c:	str	w3, [x15, #4]
    1b40:	ldrh	w6, [x13, x2]
    1b44:	lsr	w4, w1, #11
    1b48:	sub	w9, w17, w6
    1b4c:	sub	w16, w6, w6, lsr #5
    1b50:	mul	w4, w4, w6
    1b54:	add	w6, w6, w9, asr #5
    1b58:	sub	w1, w1, w4
    1b5c:	cmp	w4, w3
    1b60:	b.ls	1b84 <lzma_main+0x70c>  // b.plast
    1b64:	str	w4, [x15]
    1b68:	mov	w1, w4
    1b6c:	strh	w6, [x13, x2]
    1b70:	bic	w7, w8, w7
    1b74:	cmp	w14, #0xff
    1b78:	b.hi	1638 <lzma_main+0x1c0>  // b.pmore
    1b7c:	mov	w8, w7
    1b80:	b	1b00 <lzma_main+0x688>
    1b84:	sub	w3, w3, w4
    1b88:	stp	w1, w3, [x15]
    1b8c:	strh	w16, [x13, x2]
    1b90:	add	w14, w14, #0x1
    1b94:	cmp	w14, #0xff
    1b98:	b.hi	1638 <lzma_main+0x1c0>  // b.pmore
    1b9c:	mov	w8, w7
    1ba0:	b	1b00 <lzma_main+0x688>
    1ba4:	sub	w3, w3, w5
    1ba8:	str	w3, [x15, #4]
    1bac:	sub	w7, w7, w7, lsr #5
    1bb0:	strh	w7, [x6, #636]
    1bb4:	sub	w1, w1, w5
    1bb8:	cmp	w1, w18
    1bbc:	b.hi	1be4 <lzma_main+0x76c>  // b.pmore
    1bc0:	ldr	x5, [x15, #16]
    1bc4:	lsl	w1, w1, #8
    1bc8:	str	w1, [x0, #152]
    1bcc:	add	x4, x9, #0x1
    1bd0:	str	x4, [x15, #24]
    1bd4:	ldrb	w5, [x5, x9]
    1bd8:	mov	x9, x4
    1bdc:	add	w3, w5, w3, lsl #8
    1be0:	str	w3, [x15, #4]
    1be4:	ldrh	w5, [x6, #660]
    1be8:	lsr	w4, w1, #11
    1bec:	ldr	w10, [x0, #212]
    1bf0:	mul	w4, w4, w5
    1bf4:	cmp	w4, w3
    1bf8:	b.ls	1c5c <lzma_main+0x7e4>  // b.plast
    1bfc:	mov	w1, #0x800                 	// #2048
    1c00:	sub	w1, w1, w5
    1c04:	mov	w7, w10
    1c08:	str	w4, [x0, #152]
    1c0c:	add	w5, w5, w1, asr #5
    1c10:	strh	w5, [x6, #660]
    1c14:	ldr	w1, [x0, #208]
    1c18:	stp	w7, w1, [x0, #208]
    1c1c:	cmp	w8, #0x7
    1c20:	mov	w3, #0xb                   	// #11
    1c24:	mov	w1, #0x8                   	// #8
    1c28:	csel	w1, w1, w3, cc  // cc = lo, ul, last
    1c2c:	str	w1, [x0, #204]
    1c30:	add	x1, x0, #0xb4c
    1c34:	bl	12a8 <lzma_len>
    1c38:	ldr	w3, [x0, #208]
    1c3c:	b	18c0 <lzma_main+0x448>
    1c40:	sub	w1, w5, w6
    1c44:	str	w1, [x0, #152]
    1c48:	sub	w3, w3, w6
    1c4c:	str	w3, [x15, #4]
    1c50:	sub	w7, w7, w7, lsr #5
    1c54:	strh	w7, [x4, #708]
    1c58:	b	1c1c <lzma_main+0x7a4>
    1c5c:	sub	w1, w1, w4
    1c60:	str	w1, [x0, #152]
    1c64:	sub	w3, w3, w4
    1c68:	str	w3, [x15, #4]
    1c6c:	sub	w5, w5, w5, lsr #5
    1c70:	strh	w5, [x6, #660]
    1c74:	cmp	w1, w18
    1c78:	b.hi	1c9c <lzma_main+0x824>  // b.pmore
    1c7c:	ldr	x4, [x15, #16]
    1c80:	lsl	w1, w1, #8
    1c84:	str	w1, [x0, #152]
    1c88:	add	x5, x9, #0x1
    1c8c:	str	x5, [x15, #24]
    1c90:	ldrb	w4, [x4, x9]
    1c94:	add	w3, w4, w3, lsl #8
    1c98:	str	w3, [x15, #4]
    1c9c:	ldrh	w5, [x6, #684]
    1ca0:	lsr	w4, w1, #11
    1ca4:	ldr	w7, [x0, #216]
    1ca8:	mul	w4, w4, w5
    1cac:	cmp	w4, w3
    1cb0:	b.ls	1ebc <lzma_main+0xa44>  // b.plast
    1cb4:	mov	w3, #0x800                 	// #2048
    1cb8:	sub	w3, w3, w5
    1cbc:	add	w3, w5, w3, asr #5
    1cc0:	and	w3, w3, #0xffff
    1cc4:	strh	w3, [x6, #684]
    1cc8:	str	w4, [x0, #152]
    1ccc:	str	w10, [x0, #216]
    1cd0:	b	1c14 <lzma_main+0x79c>
    1cd4:	ldr	w1, [x0, #152]
    1cd8:	sub	w3, w9, #0x5
    1cdc:	ldr	w4, [x15, #4]
    1ce0:	cmp	w1, w18
    1ce4:	b.hi	1d04 <lzma_main+0x88c>  // b.pmore
    1ce8:	ldp	x6, x5, [x15, #16]
    1cec:	lsl	w1, w1, #8
    1cf0:	str	w1, [x15]
    1cf4:	add	x7, x5, #0x1
    1cf8:	str	x7, [x15, #24]
    1cfc:	ldrb	w5, [x6, x5]
    1d00:	add	w4, w5, w4, lsl #8
    1d04:	lsr	w1, w1, #1
    1d08:	subs	w3, w3, #0x1
    1d0c:	sub	w4, w4, w1
    1d10:	asr	w5, w4, #31
    1d14:	and	w6, w1, w5
    1d18:	add	w2, w5, w2, lsl #1
    1d1c:	add	w4, w6, w4
    1d20:	stp	w1, w4, [x15]
    1d24:	add	w2, w2, #0x1
    1d28:	str	w2, [x0, #208]
    1d2c:	b.ne	1ce0 <lzma_main+0x868>  // b.any
    1d30:	lsl	w3, w2, #4
    1d34:	str	w3, [x0, #208]
    1d38:	cmp	w1, w18
    1d3c:	add	x7, x0, #0x728
    1d40:	b.hi	1d64 <lzma_main+0x8ec>  // b.pmore
    1d44:	ldp	x5, x2, [x15, #16]
    1d48:	lsl	w1, w1, #8
    1d4c:	str	w1, [x0, #152]
    1d50:	add	x6, x2, #0x1
    1d54:	str	x6, [x15, #24]
    1d58:	ldrb	w2, [x5, x2]
    1d5c:	add	w4, w2, w4, lsl #8
    1d60:	str	w4, [x15, #4]
    1d64:	ldrh	w8, [x0, #1834]
    1d68:	lsr	w5, w1, #11
    1d6c:	mul	w2, w5, w8
    1d70:	cmp	w2, w4
    1d74:	b.hi	1f0c <lzma_main+0xa94>  // b.pmore
    1d78:	sub	w9, w8, w8, lsr #5
    1d7c:	sub	w4, w4, w2
    1d80:	and	w9, w9, #0xffff
    1d84:	sub	w5, w1, w2
    1d88:	str	w4, [x15, #4]
    1d8c:	add	w3, w3, #0x1
    1d90:	mov	w6, #0x6                   	// #6
    1d94:	mov	x8, #0x6                   	// #6
    1d98:	str	w3, [x0, #208]
    1d9c:	strh	w9, [x0, #1834]
    1da0:	add	x8, x7, x8
    1da4:	cmp	w5, w18
    1da8:	b.hi	1dcc <lzma_main+0x954>  // b.pmore
    1dac:	ldp	x2, x1, [x15, #16]
    1db0:	lsl	w5, w5, #8
    1db4:	str	w5, [x0, #152]
    1db8:	add	x9, x1, #0x1
    1dbc:	str	x9, [x15, #24]
    1dc0:	ldrb	w1, [x2, x1]
    1dc4:	add	w4, w1, w4, lsl #8
    1dc8:	str	w4, [x15, #4]
    1dcc:	ldrh	w9, [x8]
    1dd0:	lsr	w2, w5, #11
    1dd4:	mul	w1, w2, w9
    1dd8:	cmp	w1, w4
    1ddc:	b.hi	1ef4 <lzma_main+0xa7c>  // b.pmore
    1de0:	sub	w4, w4, w1
    1de4:	str	w4, [x15, #4]
    1de8:	sub	w9, w9, w9, lsr #5
    1dec:	sub	w2, w5, w1
    1df0:	add	w6, w6, #0x1
    1df4:	strh	w9, [x8]
    1df8:	add	w3, w3, #0x2
    1dfc:	str	w3, [x0, #208]
    1e00:	cmp	w2, w18
    1e04:	ubfiz	x8, x6, #1, #32
    1e08:	b.hi	1e2c <lzma_main+0x9b4>  // b.pmore
    1e0c:	ldp	x5, x1, [x15, #16]
    1e10:	lsl	w2, w2, #8
    1e14:	str	w2, [x0, #152]
    1e18:	add	x9, x1, #0x1
    1e1c:	str	x9, [x15, #24]
    1e20:	ldrb	w1, [x5, x1]
    1e24:	add	w4, w1, w4, lsl #8
    1e28:	str	w4, [x15, #4]
    1e2c:	ldrh	w5, [x7, x8]
    1e30:	lsr	w1, w2, #11
    1e34:	lsl	w6, w6, #1
    1e38:	mul	w1, w1, w5
    1e3c:	cmp	w1, w4
    1e40:	b.hi	1ee0 <lzma_main+0xa68>  // b.pmore
    1e44:	sub	w4, w4, w1
    1e48:	str	w4, [x15, #4]
    1e4c:	sub	w5, w5, w5, lsr #5
    1e50:	sub	w1, w2, w1
    1e54:	add	w6, w6, #0x1
    1e58:	strh	w5, [x7, x8]
    1e5c:	add	w3, w3, #0x4
    1e60:	str	w3, [x0, #208]
    1e64:	ubfiz	x6, x6, #1, #32
    1e68:	cmp	w1, w18
    1e6c:	b.hi	1e90 <lzma_main+0xa18>  // b.pmore
    1e70:	ldp	x5, x2, [x15, #16]
    1e74:	lsl	w1, w1, #8
    1e78:	str	w1, [x0, #152]
    1e7c:	add	x8, x2, #0x1
    1e80:	str	x8, [x15, #24]
    1e84:	ldrb	w2, [x5, x2]
    1e88:	add	w4, w2, w4, lsl #8
    1e8c:	str	w4, [x15, #4]
    1e90:	ldrh	w5, [x7, x6]
    1e94:	lsr	w2, w1, #11
    1e98:	mul	w2, w2, w5
    1e9c:	cmp	w2, w4
    1ea0:	b.ls	1f2c <lzma_main+0xab4>  // b.plast
    1ea4:	mov	w1, #0x800                 	// #2048
    1ea8:	sub	w1, w1, w5
    1eac:	str	w2, [x0, #152]
    1eb0:	add	w5, w5, w1, asr #5
    1eb4:	strh	w5, [x7, x6]
    1eb8:	b	18c0 <lzma_main+0x448>
    1ebc:	ldr	w9, [x0, #220]
    1ec0:	sub	w3, w3, w4
    1ec4:	sub	w5, w5, w5, lsr #5
    1ec8:	str	w3, [x15, #4]
    1ecc:	sub	w4, w1, w4
    1ed0:	and	w3, w5, #0xffff
    1ed4:	str	w7, [x0, #220]
    1ed8:	mov	w7, w9
    1edc:	b	1cc4 <lzma_main+0x84c>
    1ee0:	mov	w2, #0x800                 	// #2048
    1ee4:	sub	w2, w2, w5
    1ee8:	add	w5, w5, w2, asr #5
    1eec:	strh	w5, [x7, x8]
    1ef0:	b	1e64 <lzma_main+0x9ec>
    1ef4:	mov	w5, #0x800                 	// #2048
    1ef8:	sub	w5, w5, w9
    1efc:	mov	w2, w1
    1f00:	add	w9, w9, w5, asr #5
    1f04:	strh	w9, [x8]
    1f08:	b	1e00 <lzma_main+0x988>
    1f0c:	mov	w9, #0x800                 	// #2048
    1f10:	sub	w9, w9, w8
    1f14:	mov	w5, w2
    1f18:	mov	w6, #0x4                   	// #4
    1f1c:	add	w9, w8, w9, asr #5
    1f20:	mov	x8, #0x4                   	// #4
    1f24:	and	w9, w9, #0xffff
    1f28:	b	1d9c <lzma_main+0x924>
    1f2c:	sub	w1, w1, w2
    1f30:	str	w1, [x0, #152]
    1f34:	sub	w4, w4, w2
    1f38:	str	w4, [x15, #4]
    1f3c:	sub	w5, w5, w5, lsr #5
    1f40:	strh	w5, [x7, x6]
    1f44:	add	w3, w3, #0x8
    1f48:	str	w3, [x0, #208]
    1f4c:	b	1980 <lzma_main+0x508>
    1f50:	ldr	x4, [x0, #120]
    1f54:	add	x10, x0, #0x60
    1f58:	ldr	w2, [x0, #208]
    1f5c:	mov	w6, w2
    1f60:	cmp	x4, w2, uxtw
    1f64:	b.ls	14e8 <lzma_main+0x70>  // b.plast
    1f68:	ldr	w4, [x10, #48]
    1f6c:	cmp	w2, w4
    1f70:	b.cs	14e8 <lzma_main+0x70>  // b.hs, b.nlast
    1f74:	mov	w4, w3
    1f78:	sub	x1, x1, x5
    1f7c:	cmp	x1, x4
    1f80:	sub	x2, x5, #0x1
    1f84:	csel	x1, x1, x4, ls  // ls = plast
    1f88:	sub	x2, x2, x6
    1f8c:	sub	w3, w3, w1
    1f90:	str	w3, [x0, #224]
    1f94:	cmp	x5, x6
    1f98:	b.ls	2010 <lzma_main+0xb98>  // b.plast
    1f9c:	nop
    1fa0:	ldr	x4, [x10]
    1fa4:	add	x3, x5, #0x1
    1fa8:	str	x3, [x10, #16]
    1fac:	add	x3, x2, #0x1
    1fb0:	ldrb	w2, [x4, x2]
    1fb4:	strb	w2, [x4, x5]
    1fb8:	ldr	x2, [x10, #40]
    1fbc:	cmp	x2, x3
    1fc0:	b.eq	1fd8 <lzma_main+0xb60>  // b.none
    1fc4:	subs	w1, w1, #0x1
    1fc8:	ldr	x5, [x10, #16]
    1fcc:	b.eq	1fe8 <lzma_main+0xb70>  // b.none
    1fd0:	mov	x2, x3
    1fd4:	b	1fa0 <lzma_main+0xb28>
    1fd8:	subs	w1, w1, #0x1
    1fdc:	mov	x3, #0x0                   	// #0
    1fe0:	ldr	x5, [x10, #16]
    1fe4:	b.ne	1fd0 <lzma_main+0xb58>  // b.any
    1fe8:	ldr	x1, [x10, #24]
    1fec:	cmp	x1, x5
    1ff0:	b.cs	1ff8 <lzma_main+0xb80>  // b.hs, b.nlast
    1ff4:	str	x5, [x10, #24]
    1ff8:	ldr	x1, [x0, #128]
    1ffc:	ldr	w6, [x0, #152]
    2000:	cmp	x1, x5
    2004:	b.hi	14ec <lzma_main+0x74>  // b.pmore
    2008:	ldp	x19, x20, [sp, #16]
    200c:	b	1494 <lzma_main+0x1c>
    2010:	ldr	x3, [x10, #40]
    2014:	add	x2, x2, x3
    2018:	b	1fa0 <lzma_main+0xb28>
    201c:	nop

0000000000002020 <xz_dec_lzma2_run>:
    2020:	stp	x29, x30, [sp, #-112]!
    2024:	mov	x29, sp
    2028:	stp	x23, x24, [sp, #48]
    202c:	mov	x24, x0
    2030:	stp	x27, x28, [sp, #80]
    2034:	mov	x27, x0
    2038:	ldr	w0, [x24], #228
    203c:	stp	x19, x20, [sp, #16]
    2040:	mov	x28, x1
    2044:	neg	x20, x24, lsr #1
    2048:	stp	x21, x22, [sp, #32]
    204c:	and	x20, x20, #0x3
    2050:	mov	x22, #0x3736                	// #14134
    2054:	sub	x2, x22, x20
    2058:	stp	x25, x26, [sp, #64]
    205c:	add	x25, x20, #0x72
    2060:	lsr	x19, x2, #2
    2064:	and	x26, x2, #0xfffffffffffffffc
    2068:	str	x2, [sp, #96]
    206c:	add	x2, x27, x25, lsl #1
    2070:	str	x2, [sp, #104]
    2074:	ldr	x1, [x1, #8]
    2078:	add	x19, x2, x19, lsl #3
    207c:	ldr	x7, [x28, #16]
    2080:	cmp	x1, x7
    2084:	b.cc	2244 <xz_dec_lzma2_run+0x224>  // b.lo, b.ul, b.last
    2088:	cmp	w0, #0x7
    208c:	b.ne	2350 <xz_dec_lzma2_run+0x330>  // b.any
    2090:	ldr	w23, [x27, #12]
    2094:	ldr	x8, [x28]
    2098:	add	x25, x27, #0x60
    209c:	ldp	x9, x5, [x28, #32]
    20a0:	sub	x22, x7, x1
    20a4:	ldr	w0, [x27, #8]
    20a8:	ldr	x10, [x25, #16]
    20ac:	sub	x5, x5, x9
    20b0:	ldr	x9, [x25, #40]
    20b4:	cmp	x5, x0
    20b8:	csel	x5, x5, x0, ls  // ls = plast
    20bc:	ldr	w0, [x27, #24]
    20c0:	sub	x11, x9, x10
    20c4:	add	x10, x5, x10
    20c8:	cmp	x5, x11
    20cc:	csel	x9, x10, x9, cc  // cc = lo, ul, last
    20d0:	str	x9, [x25, #32]
    20d4:	cbnz	w0, 270c <xz_dec_lzma2_run+0x6ec>
    20d8:	cbnz	w23, 2174 <xz_dec_lzma2_run+0x154>
    20dc:	mov	x22, #0x0                   	// #0
    20e0:	add	x21, x27, #0x1c
    20e4:	add	x1, x8, x1
    20e8:	add	x0, x21, w0, uxtw
    20ec:	mov	x2, x22
    20f0:	bl	0 <grub_memmove>
    20f4:	ldr	w1, [x27, #24]
    20f8:	ldr	w5, [x27, #12]
    20fc:	add	w0, w23, w1
    2100:	cmp	w0, w5
    2104:	b.eq	28cc <xz_dec_lzma2_run+0x8ac>  // b.none
    2108:	cmp	w0, #0x14
    210c:	b.ls	2890 <xz_dec_lzma2_run+0x870>  // b.plast
    2110:	sub	w0, w0, #0x15
    2114:	str	x0, [x27, #184]
    2118:	stp	x21, xzr, [x27, #168]
    211c:	mov	x0, x27
    2120:	bl	1478 <lzma_main>
    2124:	cbz	w0, 26d4 <xz_dec_lzma2_run+0x6b4>
    2128:	ldr	w0, [x27, #24]
    212c:	ldr	x1, [x27, #176]
    2130:	add	w23, w23, w0
    2134:	cmp	x1, x23
    2138:	b.hi	26d4 <xz_dec_lzma2_run+0x6b4>  // b.pmore
    213c:	ldr	w23, [x27, #12]
    2140:	cmp	x1, w0, uxtw
    2144:	mov	w5, w0
    2148:	sub	w23, w23, w1
    214c:	str	w23, [x27, #12]
    2150:	b.cc	290c <xz_dec_lzma2_run+0x8ec>  // b.lo, b.ul, b.last
    2154:	ldp	x8, x0, [x28]
    2158:	ldr	x7, [x28, #16]
    215c:	add	x1, x1, x0
    2160:	sub	x2, x5, x1
    2164:	sub	x1, x1, x5
    2168:	add	x22, x2, x7
    216c:	str	x1, [x28, #8]
    2170:	str	wzr, [x27, #24]
    2174:	cmp	x22, #0x14
    2178:	b.hi	282c <xz_dec_lzma2_run+0x80c>  // b.pmore
    217c:	mov	w21, w23
    2180:	add	x1, x8, x1
    2184:	cmp	x21, x22
    2188:	add	x0, x27, #0x1c
    218c:	csel	x21, x21, x22, ls  // ls = plast
    2190:	mov	x2, x21
    2194:	bl	0 <grub_memmove>
    2198:	ldr	x0, [x28, #8]
    219c:	str	w21, [x27, #24]
    21a0:	add	x0, x0, x21
    21a4:	str	x0, [x28, #8]
    21a8:	ldp	x1, x2, [x25, #8]
    21ac:	ldr	w0, [x25, #52]
    21b0:	sub	x21, x2, x1
    21b4:	cbz	w0, 21e8 <xz_dec_lzma2_run+0x1c8>
    21b8:	ldr	x0, [x25, #40]
    21bc:	ldr	x7, [x28, #24]
    21c0:	cmp	x2, x0
    21c4:	b.ne	21cc <xz_dec_lzma2_run+0x1ac>  // b.any
    21c8:	str	xzr, [x25, #16]
    21cc:	ldr	x5, [x27, #96]
    21d0:	mov	x2, x21
    21d4:	ldr	x0, [x28, #32]
    21d8:	add	x1, x5, x1
    21dc:	add	x0, x7, x0
    21e0:	bl	0 <grub_memmove>
    21e4:	ldr	x2, [x25, #16]
    21e8:	ldr	w0, [x27, #8]
    21ec:	str	x2, [x25, #8]
    21f0:	sub	w0, w0, w21
    21f4:	ldr	x2, [x28, #32]
    21f8:	add	x21, x21, x2
    21fc:	str	x21, [x28, #32]
    2200:	str	w0, [x27, #8]
    2204:	cbnz	w0, 2734 <xz_dec_lzma2_run+0x714>
    2208:	ldr	w0, [x27, #12]
    220c:	cbnz	w0, 26d4 <xz_dec_lzma2_run+0x6b4>
    2210:	ldr	w0, [x27, #224]
    2214:	cbnz	w0, 26d4 <xz_dec_lzma2_run+0x6b4>
    2218:	ldr	w0, [x27, #156]
    221c:	cbnz	w0, 26d4 <xz_dec_lzma2_run+0x6b4>
    2220:	mov	x2, x27
    2224:	mov	x6, #0xffffffff            	// #4294967295
    2228:	ldp	x1, x7, [x28, #8]
    222c:	mov	w5, #0x5                   	// #5
    2230:	str	x6, [x2, #152]!
    2234:	str	w5, [x2, #8]
    2238:	str	wzr, [x27]
    223c:	cmp	x1, x7
    2240:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    2244:	mov	w21, #0x3                   	// #3
    2248:	mov	w23, #0x1                   	// #1
    224c:	cmp	w0, #0x4
    2250:	b.eq	2294 <xz_dec_lzma2_run+0x274>  // b.none
    2254:	b.hi	23e0 <xz_dec_lzma2_run+0x3c0>  // b.pmore
    2258:	cmp	w0, #0x2
    225c:	b.eq	23ac <xz_dec_lzma2_run+0x38c>  // b.none
    2260:	cmp	w0, #0x3
    2264:	b.ne	2370 <xz_dec_lzma2_run+0x350>  // b.any
    2268:	ldr	x0, [x28]
    226c:	add	x2, x1, #0x1
    2270:	str	x2, [x28, #8]
    2274:	mov	w5, #0x4                   	// #4
    2278:	cmp	x2, x7
    227c:	ldrb	w0, [x0, x1]
    2280:	str	w5, [x27]
    2284:	lsl	w0, w0, #8
    2288:	str	w0, [x27, #12]
    228c:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    2290:	mov	x1, x2
    2294:	ldr	x2, [x28]
    2298:	add	x0, x1, #0x1
    229c:	ldr	w5, [x27, #12]
    22a0:	str	x0, [x28, #8]
    22a4:	add	w5, w5, #0x1
    22a8:	ldrb	w2, [x2, x1]
    22ac:	mov	x1, x0
    22b0:	ldr	w0, [x27, #4]
    22b4:	add	w2, w2, w5
    22b8:	str	w0, [x27]
    22bc:	str	w2, [x27, #12]
    22c0:	b	2080 <xz_dec_lzma2_run+0x60>
    22c4:	str	wzr, [x27]
    22c8:	cmp	x1, x7
    22cc:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    22d0:	ldr	x0, [x28]
    22d4:	add	x2, x1, #0x1
    22d8:	str	x2, [x28, #8]
    22dc:	ldrb	w0, [x0, x1]
    22e0:	cmp	w0, #0xdf
    22e4:	ccmp	w0, #0x1, #0x4, ls  // ls = plast
    22e8:	b.ne	26cc <xz_dec_lzma2_run+0x6ac>  // b.any
    22ec:	add	x25, x27, #0x60
    22f0:	mov	x1, #0x100000000           	// #4294967296
    22f4:	str	x1, [x27, #16]
    22f8:	ldr	w1, [x25, #52]
    22fc:	cbnz	w1, 2318 <xz_dec_lzma2_run+0x2f8>
    2300:	ldp	x5, x8, [x28, #24]
    2304:	ldr	x1, [x28, #40]
    2308:	add	x5, x5, x8
    230c:	str	x5, [x27, #96]
    2310:	sub	x1, x1, x8
    2314:	str	x1, [x25, #40]
    2318:	stp	xzr, xzr, [x25, #8]
    231c:	stp	xzr, xzr, [x25, #24]
    2320:	cmp	w0, #0x7f
    2324:	b.ls	28a4 <xz_dec_lzma2_run+0x884>  // b.plast
    2328:	ubfiz	w1, w0, #16, #5
    232c:	str	w23, [x27]
    2330:	str	w1, [x27, #8]
    2334:	cmp	w0, #0xbf
    2338:	b.ls	276c <xz_dec_lzma2_run+0x74c>  // b.plast
    233c:	mov	w0, #0x5                   	// #5
    2340:	str	w0, [x27, #4]
    2344:	str	wzr, [x27, #20]
    2348:	cmp	x2, x7
    234c:	b.cc	2824 <xz_dec_lzma2_run+0x804>  // b.lo, b.ul, b.last
    2350:	mov	w0, #0x0                   	// #0
    2354:	ldp	x19, x20, [sp, #16]
    2358:	ldp	x21, x22, [sp, #32]
    235c:	ldp	x23, x24, [sp, #48]
    2360:	ldp	x25, x26, [sp, #64]
    2364:	ldp	x27, x28, [sp, #80]
    2368:	ldp	x29, x30, [sp], #112
    236c:	ret
    2370:	cbz	w0, 22d0 <xz_dec_lzma2_run+0x2b0>
    2374:	cmp	w0, #0x1
    2378:	b.ne	224c <xz_dec_lzma2_run+0x22c>  // b.any
    237c:	ldr	x0, [x28]
    2380:	add	x2, x1, #0x1
    2384:	ldr	w5, [x27, #8]
    2388:	cmp	x2, x7
    238c:	str	x2, [x28, #8]
    2390:	ldrb	w0, [x0, x1]
    2394:	mov	w1, #0x2                   	// #2
    2398:	str	w1, [x27]
    239c:	add	w0, w5, w0, lsl #8
    23a0:	str	w0, [x27, #8]
    23a4:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    23a8:	mov	x1, x2
    23ac:	ldr	x0, [x28]
    23b0:	add	x5, x1, #0x1
    23b4:	ldr	w2, [x27, #8]
    23b8:	cmp	x5, x7
    23bc:	str	x5, [x28, #8]
    23c0:	add	w2, w2, #0x1
    23c4:	ldrb	w0, [x0, x1]
    23c8:	str	w21, [x27]
    23cc:	add	w0, w0, w2
    23d0:	str	w0, [x27, #8]
    23d4:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    23d8:	mov	x1, x5
    23dc:	b	2268 <xz_dec_lzma2_run+0x248>
    23e0:	cmp	w0, #0x6
    23e4:	b.eq	2668 <xz_dec_lzma2_run+0x648>  // b.none
    23e8:	b.ls	24e4 <xz_dec_lzma2_run+0x4c4>  // b.plast
    23ec:	cmp	w0, #0x7
    23f0:	b.eq	2090 <xz_dec_lzma2_run+0x70>  // b.none
    23f4:	cmp	w0, #0x8
    23f8:	b.ne	224c <xz_dec_lzma2_run+0x22c>  // b.any
    23fc:	ldr	w2, [x27, #12]
    2400:	cbnz	w2, 24cc <xz_dec_lzma2_run+0x4ac>
    2404:	b	22c4 <xz_dec_lzma2_run+0x2a4>
    2408:	ldp	x0, x7, [x28, #32]
    240c:	subs	x10, x7, x0
    2410:	b.ls	2350 <xz_dec_lzma2_run+0x330>  // b.plast
    2414:	ldr	x0, [x25, #16]
    2418:	ldr	x5, [x25, #40]
    241c:	ldr	x7, [x28]
    2420:	sub	x5, x5, x0
    2424:	cmp	x5, x10
    2428:	csel	x5, x5, x10, ls  // ls = plast
    242c:	cmp	x8, x9
    2430:	csel	x8, x8, x9, ls  // ls = plast
    2434:	add	x1, x7, x1
    2438:	cmp	x5, x8
    243c:	ldr	x7, [x27, #96]
    2440:	csel	x22, x5, x8, ls  // ls = plast
    2444:	sub	w2, w2, w22
    2448:	str	w2, [x27, #12]
    244c:	add	x0, x7, x0
    2450:	mov	x2, x22
    2454:	bl	0 <grub_memmove>
    2458:	ldp	x0, x1, [x25, #16]
    245c:	mov	x2, x22
    2460:	add	x0, x22, x0
    2464:	str	x0, [x25, #16]
    2468:	cmp	x0, x1
    246c:	b.ls	2474 <xz_dec_lzma2_run+0x454>  // b.plast
    2470:	str	x0, [x25, #24]
    2474:	ldr	w1, [x25, #52]
    2478:	cbz	w1, 24a8 <xz_dec_lzma2_run+0x488>
    247c:	ldr	x1, [x25, #40]
    2480:	cmp	x0, x1
    2484:	b.ne	248c <xz_dec_lzma2_run+0x46c>  // b.any
    2488:	str	xzr, [x25, #16]
    248c:	ldp	x1, x0, [x28]
    2490:	ldr	x7, [x28, #24]
    2494:	add	x1, x1, x0
    2498:	ldr	x0, [x28, #32]
    249c:	add	x0, x7, x0
    24a0:	bl	0 <grub_memmove>
    24a4:	ldr	x0, [x25, #16]
    24a8:	ldp	x1, x7, [x28, #8]
    24ac:	ldr	w2, [x27, #12]
    24b0:	str	x0, [x25, #8]
    24b4:	ldr	x0, [x28, #32]
    24b8:	add	x1, x22, x1
    24bc:	str	x1, [x28, #8]
    24c0:	add	x5, x0, x22
    24c4:	str	x5, [x28, #32]
    24c8:	cbz	w2, 22c4 <xz_dec_lzma2_run+0x2a4>
    24cc:	add	x25, x27, #0x60
    24d0:	sub	x8, x7, x1
    24d4:	mov	w9, w2
    24d8:	cmp	x7, x1
    24dc:	b.hi	2408 <xz_dec_lzma2_run+0x3e8>  // b.pmore
    24e0:	b	2350 <xz_dec_lzma2_run+0x330>
    24e4:	cmp	w0, #0x5
    24e8:	b.ne	224c <xz_dec_lzma2_run+0x22c>  // b.any
    24ec:	ldr	x0, [x28]
    24f0:	add	x5, x1, #0x1
    24f4:	str	x5, [x28, #8]
    24f8:	ldrb	w0, [x0, x1]
    24fc:	cmp	w0, #0xe0
    2500:	b.hi	26d4 <xz_dec_lzma2_run+0x6b4>  // b.pmore
    2504:	cmp	w0, #0x2c
    2508:	b.ls	2924 <xz_dec_lzma2_run+0x904>  // b.plast
    250c:	sub	w1, w0, #0x2d
    2510:	and	w1, w1, #0xff
    2514:	cmp	w1, #0x2c
    2518:	b.ls	2960 <xz_dec_lzma2_run+0x940>  // b.plast
    251c:	sub	w1, w0, #0x5a
    2520:	and	w1, w1, #0xff
    2524:	cmp	w1, #0x2c
    2528:	b.ls	2984 <xz_dec_lzma2_run+0x964>  // b.plast
    252c:	add	w1, w0, #0x79
    2530:	and	w1, w1, #0xff
    2534:	cmp	w1, #0x2c
    2538:	b.ls	299c <xz_dec_lzma2_run+0x97c>  // b.plast
    253c:	add	w0, w0, #0x4c
    2540:	mov	w2, #0x4                   	// #4
    2544:	and	w0, w0, #0xff
    2548:	mov	w1, #0x1                   	// #1
    254c:	cmp	w0, #0x8
    2550:	lsl	w1, w1, w2
    2554:	sub	w1, w1, #0x1
    2558:	stp	wzr, w1, [x27, #196]
    255c:	b.ls	2934 <xz_dec_lzma2_run+0x914>  // b.plast
    2560:	sub	w1, w0, #0x9
    2564:	and	w1, w1, #0xff
    2568:	cmp	w1, #0x8
    256c:	b.ls	2954 <xz_dec_lzma2_run+0x934>  // b.plast
    2570:	sub	w1, w0, #0x12
    2574:	and	w1, w1, #0xff
    2578:	cmp	w1, #0x8
    257c:	b.ls	2978 <xz_dec_lzma2_run+0x958>  // b.plast
    2580:	sub	w1, w0, #0x1b
    2584:	and	w1, w1, #0xff
    2588:	cmp	w1, #0x8
    258c:	b.ls	2990 <xz_dec_lzma2_run+0x970>  // b.plast
    2590:	sub	w0, w0, #0x24
    2594:	mov	w1, #0x4                   	// #4
    2598:	and	w0, w0, #0xff
    259c:	str	w1, [x27, #196]
    25a0:	str	w0, [x27, #192]
    25a4:	add	w0, w0, w1
    25a8:	cmp	w0, #0x4
    25ac:	b.hi	26d4 <xz_dec_lzma2_run+0x6b4>  // b.pmore
    25b0:	mov	w0, #0x1                   	// #1
    25b4:	str	wzr, [x27, #204]
    25b8:	lsl	w0, w0, w1
    25bc:	sub	w0, w0, #0x1
    25c0:	str	w0, [x27, #196]
    25c4:	stp	xzr, xzr, [x27, #208]
    25c8:	cbz	x20, 2948 <xz_dec_lzma2_run+0x928>
    25cc:	mov	w0, #0x400                 	// #1024
    25d0:	strh	w0, [x27, #228]
    25d4:	cmp	x20, #0x1
    25d8:	b.eq	293c <xz_dec_lzma2_run+0x91c>  // b.none
    25dc:	strh	w0, [x27, #230]
    25e0:	cmp	x20, #0x3
    25e4:	b.ne	296c <xz_dec_lzma2_run+0x94c>  // b.any
    25e8:	mov	x2, x20
    25ec:	mov	x6, #0x3733                	// #14131
    25f0:	strh	w0, [x27, #232]
    25f4:	ldr	x0, [sp, #104]
    25f8:	mov	x1, #0x400040004000400     	// #288234774265332736
    25fc:	nop
    2600:	str	x1, [x0], #8
    2604:	cmp	x19, x0
    2608:	b.ne	2600 <xz_dec_lzma2_run+0x5e0>  // b.any
    260c:	ldr	x0, [sp, #96]
    2610:	add	x2, x26, x2
    2614:	mvn	x1, x26
    2618:	cmp	x26, x0
    261c:	b.eq	2648 <xz_dec_lzma2_run+0x628>  // b.none
    2620:	lsl	x0, x2, #1
    2624:	mov	w2, #0x400                 	// #1024
    2628:	adds	x1, x1, x6
    262c:	strh	w2, [x24, x0]
    2630:	b.eq	2648 <xz_dec_lzma2_run+0x628>  // b.none
    2634:	add	x0, x24, x0
    2638:	cmp	x1, #0x1
    263c:	strh	w2, [x0, #2]
    2640:	b.eq	2648 <xz_dec_lzma2_run+0x628>  // b.none
    2644:	strh	w2, [x0, #4]
    2648:	mov	x0, x27
    264c:	mov	x6, #0xffffffff            	// #4294967295
    2650:	mov	x1, x5
    2654:	mov	w5, #0x5                   	// #5
    2658:	mov	w2, #0x6                   	// #6
    265c:	str	x6, [x0, #152]!
    2660:	str	w5, [x0, #8]
    2664:	str	w2, [x27]
    2668:	ldr	w23, [x27, #12]
    266c:	cmp	w23, #0x4
    2670:	b.ls	26d4 <xz_dec_lzma2_run+0x6b4>  // b.plast
    2674:	ldr	w10, [x27, #160]
    2678:	cbz	w10, 26f4 <xz_dec_lzma2_run+0x6d4>
    267c:	sub	w0, w10, #0x1
    2680:	mov	x2, x1
    2684:	add	x0, x0, #0x1
    2688:	add	w10, w10, w1
    268c:	add	x1, x0, x1
    2690:	b	26b8 <xz_dec_lzma2_run+0x698>
    2694:	ldr	x8, [x28]
    2698:	cmp	x0, x1
    269c:	ldr	w5, [x27, #156]
    26a0:	str	x0, [x28, #8]
    26a4:	ldrb	w9, [x8, x2]
    26a8:	mov	x2, x0
    26ac:	add	w0, w9, w5, lsl #8
    26b0:	stp	w0, w6, [x27, #156]
    26b4:	b.eq	26f8 <xz_dec_lzma2_run+0x6d8>  // b.none
    26b8:	add	x0, x2, #0x1
    26bc:	cmp	x2, x7
    26c0:	sub	w6, w10, w0
    26c4:	b.ne	2694 <xz_dec_lzma2_run+0x674>  // b.any
    26c8:	b	2350 <xz_dec_lzma2_run+0x330>
    26cc:	ldr	w1, [x27, #16]
    26d0:	cbz	w1, 2320 <xz_dec_lzma2_run+0x300>
    26d4:	mov	w0, #0x5                   	// #5
    26d8:	ldp	x19, x20, [sp, #16]
    26dc:	ldp	x21, x22, [sp, #32]
    26e0:	ldp	x23, x24, [sp, #48]
    26e4:	ldp	x25, x26, [sp, #64]
    26e8:	ldp	x27, x28, [sp, #80]
    26ec:	ldp	x29, x30, [sp], #112
    26f0:	ret
    26f4:	ldr	x8, [x28]
    26f8:	sub	w23, w23, #0x5
    26fc:	mov	w0, #0x7                   	// #7
    2700:	str	w0, [x27]
    2704:	str	w23, [x27, #12]
    2708:	b	2098 <xz_dec_lzma2_run+0x78>
    270c:	sub	w23, w23, w0
    2710:	mov	w5, #0x2a                  	// #42
    2714:	sub	w5, w5, w0
    2718:	cmp	w23, w5
    271c:	csel	w7, w23, w5, ls  // ls = plast
    2720:	csel	w23, w23, w5, ls  // ls = plast
    2724:	cmp	x22, x7
    2728:	b.cs	28f4 <xz_dec_lzma2_run+0x8d4>  // b.hs, b.nlast
    272c:	mov	w23, w22
    2730:	b	20e0 <xz_dec_lzma2_run+0xc0>
    2734:	ldr	x0, [x28, #40]
    2738:	cmp	x0, x21
    273c:	b.eq	2350 <xz_dec_lzma2_run+0x330>  // b.none
    2740:	ldp	x1, x7, [x28, #8]
    2744:	cmp	x1, x7
    2748:	b.eq	2754 <xz_dec_lzma2_run+0x734>  // b.none
    274c:	ldr	w0, [x27]
    2750:	b	2080 <xz_dec_lzma2_run+0x60>
    2754:	ldr	w0, [x27, #12]
    2758:	ldr	w2, [x27, #24]
    275c:	cmp	w2, w0
    2760:	b.cc	2350 <xz_dec_lzma2_run+0x330>  // b.lo, b.ul, b.last
    2764:	ldr	w0, [x27]
    2768:	b	2080 <xz_dec_lzma2_run+0x60>
    276c:	ldr	w1, [x27, #20]
    2770:	cbnz	w1, 26d4 <xz_dec_lzma2_run+0x6b4>
    2774:	mov	w1, #0x6                   	// #6
    2778:	str	w1, [x27, #4]
    277c:	cmp	w0, #0x9f
    2780:	b.ls	28fc <xz_dec_lzma2_run+0x8dc>  // b.plast
    2784:	str	wzr, [x27, #204]
    2788:	stp	xzr, xzr, [x27, #208]
    278c:	cbz	x20, 29a8 <xz_dec_lzma2_run+0x988>
    2790:	mov	w0, #0x400                 	// #1024
    2794:	strh	w0, [x27, #228]
    2798:	cmp	x20, #0x1
    279c:	b.eq	29b4 <xz_dec_lzma2_run+0x994>  // b.none
    27a0:	strh	w0, [x27, #230]
    27a4:	cmp	x20, #0x3
    27a8:	b.ne	29c0 <xz_dec_lzma2_run+0x9a0>  // b.any
    27ac:	mov	x5, x20
    27b0:	mov	x6, #0x3733                	// #14131
    27b4:	strh	w0, [x27, #232]
    27b8:	ldr	x0, [sp, #104]
    27bc:	mov	x1, #0x400040004000400     	// #288234774265332736
    27c0:	str	x1, [x0], #8
    27c4:	cmp	x0, x19
    27c8:	b.ne	27c0 <xz_dec_lzma2_run+0x7a0>  // b.any
    27cc:	ldr	x1, [sp, #96]
    27d0:	add	x0, x26, x5
    27d4:	cmp	x26, x1
    27d8:	mvn	x1, x26
    27dc:	b.eq	2808 <xz_dec_lzma2_run+0x7e8>  // b.none
    27e0:	lsl	x0, x0, #1
    27e4:	mov	w5, #0x400                 	// #1024
    27e8:	adds	x1, x1, x6
    27ec:	strh	w5, [x24, x0]
    27f0:	b.eq	2808 <xz_dec_lzma2_run+0x7e8>  // b.none
    27f4:	add	x0, x24, x0
    27f8:	cmp	x1, #0x1
    27fc:	strh	w5, [x0, #2]
    2800:	b.eq	2808 <xz_dec_lzma2_run+0x7e8>  // b.none
    2804:	strh	w5, [x0, #4]
    2808:	mov	x0, x27
    280c:	mov	x5, #0xffffffff            	// #4294967295
    2810:	mov	w1, #0x5                   	// #5
    2814:	cmp	x2, x7
    2818:	str	x5, [x0, #152]!
    281c:	str	w1, [x0, #8]
    2820:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    2824:	mov	x1, x2
    2828:	b	237c <xz_dec_lzma2_run+0x35c>
    282c:	add	w0, w23, #0x15
    2830:	sub	x7, x7, #0x15
    2834:	cmp	x0, x22
    2838:	add	x23, x1, w23, uxtw
    283c:	csel	x7, x7, x23, hi  // hi = pmore
    2840:	stp	x8, x1, [x27, #168]
    2844:	mov	x0, x27
    2848:	str	x7, [x27, #184]
    284c:	bl	1478 <lzma_main>
    2850:	cbz	w0, 26d4 <xz_dec_lzma2_run+0x6b4>
    2854:	ldr	x0, [x28, #8]
    2858:	ldr	x1, [x27, #176]
    285c:	ldr	w23, [x27, #12]
    2860:	sub	x0, x1, x0
    2864:	cmp	x0, w23, uxtw
    2868:	b.hi	26d4 <xz_dec_lzma2_run+0x6b4>  // b.pmore
    286c:	ldr	x2, [x28, #16]
    2870:	sub	w23, w23, w0
    2874:	str	w23, [x27, #12]
    2878:	str	x1, [x28, #8]
    287c:	sub	x22, x2, x1
    2880:	cmp	x22, #0x14
    2884:	b.hi	21a8 <xz_dec_lzma2_run+0x188>  // b.pmore
    2888:	ldr	x8, [x28]
    288c:	b	217c <xz_dec_lzma2_run+0x15c>
    2890:	ldr	x1, [x28, #8]
    2894:	str	w0, [x27, #24]
    2898:	add	x2, x1, x22
    289c:	str	x2, [x28, #8]
    28a0:	b	21a8 <xz_dec_lzma2_run+0x188>
    28a4:	cbz	w0, 29cc <xz_dec_lzma2_run+0x9ac>
    28a8:	cmp	w0, #0x2
    28ac:	b.hi	26d4 <xz_dec_lzma2_run+0x6b4>  // b.pmore
    28b0:	mov	x0, #0x3                   	// #3
    28b4:	cmp	x2, x7
    28b8:	movk	x0, #0x8, lsl #32
    28bc:	str	x0, [x27]
    28c0:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    28c4:	mov	x1, x2
    28c8:	b	2268 <xz_dec_lzma2_run+0x248>
    28cc:	add	x1, x22, w1, uxtw
    28d0:	mov	x2, #0x3f                  	// #63
    28d4:	add	x0, x21, x1
    28d8:	sub	x2, x2, x1
    28dc:	mov	w1, #0x0                   	// #0
    28e0:	bl	0 <grub_memset>
    28e4:	ldr	w0, [x27, #24]
    28e8:	add	w0, w23, w0
    28ec:	str	x0, [x27, #184]
    28f0:	b	2118 <xz_dec_lzma2_run+0xf8>
    28f4:	mov	x22, x7
    28f8:	b	20e0 <xz_dec_lzma2_run+0xc0>
    28fc:	cmp	x2, x7
    2900:	b.cs	2350 <xz_dec_lzma2_run+0x330>  // b.hs, b.nlast
    2904:	mov	x1, x2
    2908:	b	237c <xz_dec_lzma2_run+0x35c>
    290c:	sub	w2, w0, w1
    2910:	str	w2, [x27, #24]
    2914:	add	x1, x21, x1
    2918:	mov	x0, x21
    291c:	bl	0 <grub_memmove>
    2920:	b	21a8 <xz_dec_lzma2_run+0x188>
    2924:	mov	w1, #0x0                   	// #0
    2928:	stp	wzr, w1, [x27, #196]
    292c:	cmp	w0, #0x8
    2930:	b.hi	2560 <xz_dec_lzma2_run+0x540>  // b.pmore
    2934:	mov	w1, #0x0                   	// #0
    2938:	b	25a0 <xz_dec_lzma2_run+0x580>
    293c:	mov	x2, x20
    2940:	mov	x6, #0x3735                	// #14133
    2944:	b	25f4 <xz_dec_lzma2_run+0x5d4>
    2948:	mov	x2, #0x0                   	// #0
    294c:	mov	x6, #0x3736                	// #14134
    2950:	b	25f4 <xz_dec_lzma2_run+0x5d4>
    2954:	mov	w0, w1
    2958:	mov	w1, #0x1                   	// #1
    295c:	b	259c <xz_dec_lzma2_run+0x57c>
    2960:	mov	w0, w1
    2964:	mov	w2, #0x1                   	// #1
    2968:	b	2548 <xz_dec_lzma2_run+0x528>
    296c:	mov	x6, #0x3734                	// #14132
    2970:	mov	x2, #0x2                   	// #2
    2974:	b	25f4 <xz_dec_lzma2_run+0x5d4>
    2978:	mov	w0, w1
    297c:	mov	w1, #0x2                   	// #2
    2980:	b	259c <xz_dec_lzma2_run+0x57c>
    2984:	mov	w0, w1
    2988:	mov	w2, #0x2                   	// #2
    298c:	b	2548 <xz_dec_lzma2_run+0x528>
    2990:	mov	w0, w1
    2994:	mov	w1, #0x3                   	// #3
    2998:	b	259c <xz_dec_lzma2_run+0x57c>
    299c:	mov	w0, w1
    29a0:	mov	w2, #0x3                   	// #3
    29a4:	b	2548 <xz_dec_lzma2_run+0x528>
    29a8:	mov	x5, #0x0                   	// #0
    29ac:	mov	x6, #0x3736                	// #14134
    29b0:	b	27b8 <xz_dec_lzma2_run+0x798>
    29b4:	mov	x5, x20
    29b8:	mov	x6, #0x3735                	// #14133
    29bc:	b	27b8 <xz_dec_lzma2_run+0x798>
    29c0:	mov	x6, #0x3734                	// #14132
    29c4:	mov	x5, #0x2                   	// #2
    29c8:	b	27b8 <xz_dec_lzma2_run+0x798>
    29cc:	mov	w0, #0x1                   	// #1
    29d0:	b	2354 <xz_dec_lzma2_run+0x334>
    29d4:	nop

00000000000029d8 <xz_dec_lzma2_create>:
    29d8:	stp	x29, x30, [sp, #-32]!
    29dc:	mov	w1, #0xc0000000            	// #-1073741824
    29e0:	cmp	w0, w1
    29e4:	mov	x29, sp
    29e8:	stp	x19, x20, [sp, #16]
    29ec:	b.hi	2a3c <xz_dec_lzma2_create+0x64>  // b.pmore
    29f0:	mov	w19, w0
    29f4:	mov	x0, #0x6f50                	// #28496
    29f8:	bl	0 <grub_malloc>
    29fc:	mov	x20, x0
    2a00:	cbz	x0, 2a3c <xz_dec_lzma2_create+0x64>
    2a04:	cbnz	w19, 2a1c <xz_dec_lzma2_create+0x44>
    2a08:	str	w19, [x20, #148]
    2a0c:	mov	x0, x20
    2a10:	ldp	x19, x20, [sp, #16]
    2a14:	ldp	x29, x30, [sp], #32
    2a18:	ret
    2a1c:	mov	w0, w19
    2a20:	bl	0 <grub_malloc>
    2a24:	str	x0, [x20, #96]
    2a28:	cbnz	x0, 2a08 <xz_dec_lzma2_create+0x30>
    2a2c:	mov	x0, x20
    2a30:	mov	x20, #0x0                   	// #0
    2a34:	bl	0 <grub_free>
    2a38:	b	2a0c <xz_dec_lzma2_create+0x34>
    2a3c:	mov	x20, #0x0                   	// #0
    2a40:	mov	x0, x20
    2a44:	ldp	x19, x20, [sp, #16]
    2a48:	ldp	x29, x30, [sp], #32
    2a4c:	ret

0000000000002a50 <xz_dec_lzma2_reset>:
    2a50:	and	w1, w1, #0xff
    2a54:	cmp	w1, #0x1e
    2a58:	b.hi	2abc <xz_dec_lzma2_reset+0x6c>  // b.pmore
    2a5c:	stp	x29, x30, [sp, #-32]!
    2a60:	mov	x29, sp
    2a64:	str	x19, [sp, #16]
    2a68:	mov	x19, x0
    2a6c:	and	w0, w1, #0x1
    2a70:	lsr	w1, w1, #1
    2a74:	add	w0, w0, #0x2
    2a78:	add	w1, w1, #0xb
    2a7c:	ldr	w2, [x19, #148]
    2a80:	lsl	w1, w0, w1
    2a84:	str	w1, [x19, #144]
    2a88:	cmp	w2, #0x0
    2a8c:	ccmp	w1, w2, #0x0, ne  // ne = any
    2a90:	b.hi	2ac4 <xz_dec_lzma2_reset+0x74>  // b.pmore
    2a94:	mov	w2, #0x1                   	// #1
    2a98:	mov	w0, #0x0                   	// #0
    2a9c:	str	wzr, [x19]
    2aa0:	str	w2, [x19, #16]
    2aa4:	str	wzr, [x19, #24]
    2aa8:	str	x1, [x19, #136]
    2aac:	str	wzr, [x19, #224]
    2ab0:	ldr	x19, [sp, #16]
    2ab4:	ldp	x29, x30, [sp], #32
    2ab8:	ret
    2abc:	mov	w0, #0x4                   	// #4
    2ac0:	ret
    2ac4:	ldr	x0, [x19, #96]
    2ac8:	bl	0 <grub_realloc>
    2acc:	cbz	x0, 2ae4 <xz_dec_lzma2_reset+0x94>
    2ad0:	ldr	w2, [x19, #144]
    2ad4:	str	x0, [x19, #96]
    2ad8:	mov	w1, w2
    2adc:	str	w2, [x19, #148]
    2ae0:	b	2a94 <xz_dec_lzma2_reset+0x44>
    2ae4:	mov	w0, #0x2                   	// #2
    2ae8:	b	2ab0 <xz_dec_lzma2_reset+0x60>
    2aec:	nop

0000000000002af0 <xz_dec_lzma2_end>:
    2af0:	stp	x29, x30, [sp, #-32]!
    2af4:	mov	x29, sp
    2af8:	str	x19, [sp, #16]
    2afc:	mov	x19, x0
    2b00:	ldr	w0, [x0, #148]
    2b04:	cbnz	w0, 2b18 <xz_dec_lzma2_end+0x28>
    2b08:	mov	x0, x19
    2b0c:	ldr	x19, [sp, #16]
    2b10:	ldp	x29, x30, [sp], #32
    2b14:	b	0 <grub_free>
    2b18:	ldr	x0, [x19, #96]
    2b1c:	bl	0 <grub_free>
    2b20:	mov	x0, x19
    2b24:	ldr	x19, [sp, #16]
    2b28:	ldp	x29, x30, [sp], #32
    2b2c:	b	0 <grub_free>

0000000000002b30 <hash_validate>:
    2b30:	stp	x29, x30, [sp, #-64]!
    2b34:	cmp	w2, #0x0
    2b38:	mov	x29, sp
    2b3c:	stp	x19, x20, [sp, #16]
    2b40:	mov	x20, x1
    2b44:	mov	x19, x0
    2b48:	stp	x21, x22, [sp, #32]
    2b4c:	mov	w21, w2
    2b50:	ldp	x22, x1, [x0, #120]
    2b54:	ldr	x0, [x0, #104]
    2b58:	csel	x22, x22, x1, eq  // eq = none
    2b5c:	ldr	w1, [x19, #96]
    2b60:	str	x23, [sp, #48]
    2b64:	ldr	x23, [x19, #112]
    2b68:	csel	x23, x0, x23, eq  // eq = none
    2b6c:	cmp	w1, #0x0
    2b70:	ccmp	x22, #0x0, #0x4, eq  // eq = none
    2b74:	b.ne	2cc8 <hash_validate+0x198>  // b.any
    2b78:	ldp	x0, x4, [x20, #8]
    2b7c:	cmp	x0, x4
    2b80:	b.eq	2c28 <hash_validate+0xf8>  // b.none
    2b84:	ldr	w3, [x19, #4]
    2b88:	cbz	w21, 2c68 <hash_validate+0x138>
    2b8c:	cbnz	x22, 2bc4 <hash_validate+0x94>
    2b90:	b	2c5c <hash_validate+0x12c>
    2b94:	ldr	x1, [x20, #8]
    2b98:	add	w3, w3, #0x8
    2b9c:	add	x2, x1, #0x1
    2ba0:	cmp	x4, x1
    2ba4:	b.eq	2c28 <hash_validate+0xf8>  // b.none
    2ba8:	ldr	x5, [x20]
    2bac:	ldrb	w0, [x0, #32]
    2bb0:	ldrb	w1, [x5, x1]
    2bb4:	cmp	w1, w0
    2bb8:	b.ne	2d68 <hash_validate+0x238>  // b.any
    2bbc:	str	x2, [x20, #8]
    2bc0:	str	w3, [x19, #4]
    2bc4:	lsr	w0, w3, #3
    2bc8:	cmp	w3, #0x1f
    2bcc:	add	x0, x19, x0
    2bd0:	b.ls	2b94 <hash_validate+0x64>  // b.plast
    2bd4:	ldr	x0, [x19, #120]
    2bd8:	cbz	x0, 2be8 <hash_validate+0xb8>
    2bdc:	ldr	x1, [x0, #40]
    2be0:	ldr	x0, [x19, #104]
    2be4:	blr	x1
    2be8:	ldr	x0, [x19, #128]
    2bec:	cbz	x0, 2bfc <hash_validate+0xcc>
    2bf0:	ldr	x1, [x0, #40]
    2bf4:	ldr	x0, [x19, #112]
    2bf8:	blr	x1
    2bfc:	str	wzr, [x19, #4]
    2c00:	mov	w0, #0x1                   	// #1
    2c04:	str	wzr, [x19, #96]
    2c08:	ldp	x19, x20, [sp, #16]
    2c0c:	ldp	x21, x22, [sp, #32]
    2c10:	ldr	x23, [sp, #48]
    2c14:	ldp	x29, x30, [sp], #64
    2c18:	ret
    2c1c:	ldp	x0, x4, [x20, #8]
    2c20:	cmp	x0, x4
    2c24:	b.ne	2d80 <hash_validate+0x250>  // b.any
    2c28:	mov	w0, #0x0                   	// #0
    2c2c:	ldp	x19, x20, [sp, #16]
    2c30:	ldp	x21, x22, [sp, #32]
    2c34:	ldr	x23, [sp, #48]
    2c38:	ldp	x29, x30, [sp], #64
    2c3c:	ret
    2c40:	ldr	x0, [x20, #8]
    2c44:	add	w3, w3, #0x8
    2c48:	add	x1, x0, #0x1
    2c4c:	cmp	x4, x0
    2c50:	b.eq	2c28 <hash_validate+0xf8>  // b.none
    2c54:	str	x1, [x20, #8]
    2c58:	str	w3, [x19, #4]
    2c5c:	cmp	w3, #0x1f
    2c60:	b.ls	2c40 <hash_validate+0x110>  // b.plast
    2c64:	b	2bd4 <hash_validate+0xa4>
    2c68:	ldr	x2, [x19, #144]
    2c6c:	cbnz	x2, 2c78 <hash_validate+0x148>
    2c70:	add	w3, w3, #0x8
    2c74:	str	w3, [x19, #4]
    2c78:	cbz	x22, 2d38 <hash_validate+0x208>
    2c7c:	lsl	x2, x2, #3
    2c80:	b	2cb4 <hash_validate+0x184>
    2c84:	ldr	x1, [x20, #8]
    2c88:	add	w3, w3, #0x8
    2c8c:	add	x5, x1, #0x1
    2c90:	cmp	x1, x4
    2c94:	b.eq	2c28 <hash_validate+0xf8>  // b.none
    2c98:	ldr	x6, [x20]
    2c9c:	ldrb	w0, [x0, #32]
    2ca0:	ldrb	w1, [x6, x1]
    2ca4:	cmp	w1, w0
    2ca8:	b.ne	2d68 <hash_validate+0x238>  // b.any
    2cac:	str	x5, [x20, #8]
    2cb0:	str	w3, [x19, #4]
    2cb4:	lsr	w0, w3, #3
    2cb8:	cmp	x2, w3, uxtw
    2cbc:	add	x0, x19, x0
    2cc0:	b.hi	2c84 <hash_validate+0x154>  // b.pmore
    2cc4:	b	2bd4 <hash_validate+0xa4>
    2cc8:	ldr	x0, [x22, #32]
    2ccc:	cmp	x0, #0x40
    2cd0:	b.hi	2b78 <hash_validate+0x48>  // b.pmore
    2cd4:	ldr	x1, [x22, #56]
    2cd8:	mov	x0, x23
    2cdc:	blr	x1
    2ce0:	ldr	x1, [x22, #64]
    2ce4:	mov	x0, x23
    2ce8:	blr	x1
    2cec:	mov	x1, x0
    2cf0:	ldr	x2, [x22, #32]
    2cf4:	add	x0, x19, #0x20
    2cf8:	bl	0 <grub_memmove>
    2cfc:	ldrb	w0, [x19, #136]
    2d00:	mov	w1, #0x1                   	// #1
    2d04:	str	w1, [x19, #96]
    2d08:	cmp	w0, w1
    2d0c:	and	w0, w21, w1
    2d10:	csel	w0, w0, w1, ne  // ne = any
    2d14:	cbz	w0, 2c1c <hash_validate+0xec>
    2d18:	ldurh	w0, [x19, #33]
    2d1c:	ldrb	w1, [x19, #32]
    2d20:	ldrb	w2, [x19, #35]
    2d24:	rev16	w0, w0
    2d28:	strb	w2, [x19, #32]
    2d2c:	sturh	w0, [x19, #33]
    2d30:	strb	w1, [x19, #35]
    2d34:	b	2b78 <hash_validate+0x48>
    2d38:	lsl	x0, x2, #3
    2d3c:	b	2d5c <hash_validate+0x22c>
    2d40:	ldr	x1, [x20, #8]
    2d44:	add	w3, w3, #0x8
    2d48:	add	x2, x1, #0x1
    2d4c:	cmp	x1, x4
    2d50:	b.eq	2c28 <hash_validate+0xf8>  // b.none
    2d54:	str	x2, [x20, #8]
    2d58:	str	w3, [x19, #4]
    2d5c:	cmp	x0, w3, uxtw
    2d60:	b.hi	2d40 <hash_validate+0x210>  // b.pmore
    2d64:	b	2bd4 <hash_validate+0xa4>
    2d68:	mov	w0, #0x5                   	// #5
    2d6c:	ldp	x19, x20, [sp, #16]
    2d70:	ldp	x21, x22, [sp, #32]
    2d74:	ldr	x23, [sp, #48]
    2d78:	ldp	x29, x30, [sp], #64
    2d7c:	ret
    2d80:	ldr	x2, [x19, #144]
    2d84:	ldr	w3, [x19, #4]
    2d88:	cbnz	x2, 2c7c <hash_validate+0x14c>
    2d8c:	b	2c70 <hash_validate+0x140>

0000000000002d90 <xz_dec_reset>:
    2d90:	stp	x29, x30, [sp, #-32]!
    2d94:	mov	x2, #0x30                  	// #48
    2d98:	mov	w1, #0x0                   	// #0
    2d9c:	mov	x29, sp
    2da0:	stp	x19, x20, [sp, #16]
    2da4:	mov	x19, x0
    2da8:	add	x0, x0, #0xb8
    2dac:	str	xzr, [x19]
    2db0:	str	wzr, [x19, #156]
    2db4:	ldr	x20, [x19, #224]
    2db8:	bl	0 <grub_memset>
    2dbc:	str	x20, [x19, #224]
    2dc0:	mov	w1, #0x0                   	// #0
    2dc4:	add	x0, x19, #0xe8
    2dc8:	mov	x2, #0x30                  	// #48
    2dcc:	ldr	x20, [x19, #272]
    2dd0:	bl	0 <grub_memset>
    2dd4:	ldr	x0, [x19, #120]
    2dd8:	mov	x1, #0xc                   	// #12
    2ddc:	stp	x20, xzr, [x19, #272]
    2de0:	str	x1, [x19, #288]
    2de4:	cbz	x0, 2e14 <xz_dec_reset+0x84>
    2de8:	ldr	x1, [x0, #40]
    2dec:	ldr	x0, [x19, #104]
    2df0:	blr	x1
    2df4:	ldr	x1, [x19, #120]
    2df8:	ldr	x0, [x19, #272]
    2dfc:	ldr	x1, [x1, #40]
    2e00:	blr	x1
    2e04:	ldr	x1, [x19, #120]
    2e08:	ldr	x0, [x19, #224]
    2e0c:	ldr	x1, [x1, #40]
    2e10:	blr	x1
    2e14:	str	wzr, [x19, #96]
    2e18:	ldp	x19, x20, [sp, #16]
    2e1c:	ldp	x29, x30, [sp], #32
    2e20:	ret
    2e24:	nop

0000000000002e28 <xz_dec_run>:
    2e28:	stp	x29, x30, [sp, #-112]!
    2e2c:	mov	x29, sp
    2e30:	stp	x19, x20, [sp, #16]
    2e34:	mov	x20, x1
    2e38:	ldr	w1, [x0, #152]
    2e3c:	stp	x21, x22, [sp, #32]
    2e40:	mov	x19, x0
    2e44:	stp	x23, x24, [sp, #48]
    2e48:	stp	x25, x26, [sp, #64]
    2e4c:	cbnz	w1, 35cc <xz_dec_run+0x7a4>
    2e50:	ldr	w21, [x19]
    2e54:	add	x25, x19, #0x127
    2e58:	ldr	x22, [x20, #8]
    2e5c:	mov	w24, #0x5                   	// #5
    2e60:	ldr	x23, [x20, #32]
    2e64:	str	x22, [x19, #16]
    2e68:	cmp	w21, #0x5
    2e6c:	b.eq	35a8 <xz_dec_run+0x780>  // b.none
    2e70:	b.hi	3014 <xz_dec_run+0x1ec>  // b.pmore
    2e74:	cmp	w21, #0x2
    2e78:	b.eq	32e0 <xz_dec_run+0x4b8>  // b.none
    2e7c:	b.ls	2f04 <xz_dec_run+0xdc>  // b.plast
    2e80:	cmp	w21, #0x3
    2e84:	b.eq	34b0 <xz_dec_run+0x688>  // b.none
    2e88:	ldr	x4, [x19, #184]
    2e8c:	tst	x4, #0x3
    2e90:	b.eq	35a4 <xz_dec_run+0x77c>  // b.none
    2e94:	ldp	x2, x6, [x20, #8]
    2e98:	sub	x4, x4, x2
    2e9c:	b	2ec0 <xz_dec_run+0x98>
    2ea0:	ldr	x5, [x20]
    2ea4:	str	x0, [x20, #8]
    2ea8:	tst	x1, #0x3
    2eac:	ldrb	w5, [x5, x2]
    2eb0:	mov	x2, x0
    2eb4:	cbnz	w5, 3590 <xz_dec_run+0x768>
    2eb8:	str	x1, [x19, #184]
    2ebc:	b.eq	35a4 <xz_dec_run+0x77c>  // b.none
    2ec0:	add	x0, x2, #0x1
    2ec4:	cmp	x6, x2
    2ec8:	add	x1, x4, x0
    2ecc:	b.ne	2ea0 <xz_dec_run+0x78>  // b.any
    2ed0:	ldr	w0, [x19, #152]
    2ed4:	cbnz	w0, 3620 <xz_dec_run+0x7f8>
    2ed8:	cmp	x22, x2
    2edc:	mov	w21, #0x0                   	// #0
    2ee0:	b.eq	3680 <xz_dec_run+0x858>  // b.none
    2ee4:	str	wzr, [x19, #156]
    2ee8:	mov	w0, w21
    2eec:	ldp	x19, x20, [sp, #16]
    2ef0:	ldp	x21, x22, [sp, #32]
    2ef4:	ldp	x23, x24, [sp, #48]
    2ef8:	ldp	x25, x26, [sp, #64]
    2efc:	ldp	x29, x30, [sp], #112
    2f00:	ret
    2f04:	cbz	w21, 36a8 <xz_dec_run+0x880>
    2f08:	cmp	w21, #0x1
    2f0c:	b.ne	2e68 <xz_dec_run+0x40>  // b.any
    2f10:	ldp	x3, x2, [x20, #8]
    2f14:	cmp	x3, x2
    2f18:	b.eq	2ed0 <xz_dec_run+0xa8>  // b.none
    2f1c:	ldr	x0, [x20]
    2f20:	add	x1, x0, x3
    2f24:	ldrb	w0, [x0, x3]
    2f28:	cbnz	w0, 376c <xz_dec_run+0x944>
    2f2c:	add	x0, x3, #0x1
    2f30:	str	x0, [x20, #8]
    2f34:	mov	w0, #0x6                   	// #6
    2f38:	str	w0, [x19]
    2f3c:	str	x3, [x19, #16]
    2f40:	add	x25, x19, #0x100
    2f44:	mov	w24, #0x2                   	// #2
    2f48:	mov	w21, #0x1                   	// #1
    2f4c:	ldr	w3, [x19, #4]
    2f50:	ldr	x4, [x20]
    2f54:	ldr	x5, [x20, #16]
    2f58:	cbnz	w3, 2f94 <xz_dec_run+0x16c>
    2f5c:	str	xzr, [x19, #8]
    2f60:	b	2f94 <xz_dec_run+0x16c>
    2f64:	ldrb	w2, [x4, x2]
    2f68:	str	x0, [x20, #8]
    2f6c:	and	x0, x2, #0x7f
    2f70:	ldr	x6, [x19, #8]
    2f74:	lsl	x0, x0, x3
    2f78:	orr	x0, x0, x6
    2f7c:	str	x0, [x19, #8]
    2f80:	tbz	w2, #7, 322c <xz_dec_run+0x404>
    2f84:	add	w3, w3, #0x7
    2f88:	str	w3, [x19, #4]
    2f8c:	cmp	w3, #0x3f
    2f90:	b.eq	3238 <xz_dec_run+0x410>  // b.none
    2f94:	ldr	x2, [x20, #8]
    2f98:	add	x0, x2, #0x1
    2f9c:	cmp	x5, x2
    2fa0:	b.hi	2f64 <xz_dec_run+0x13c>  // b.pmore
    2fa4:	mov	w21, #0x0                   	// #0
    2fa8:	ldr	x1, [x19, #16]
    2fac:	ldr	x0, [x19, #240]
    2fb0:	sub	x24, x2, x1
    2fb4:	ldr	x2, [x19, #120]
    2fb8:	add	x0, x0, x24
    2fbc:	str	x0, [x19, #240]
    2fc0:	cbz	x2, 2fd8 <xz_dec_run+0x1b0>
    2fc4:	ldr	x3, [x2, #48]
    2fc8:	add	x1, x4, x1
    2fcc:	ldr	x0, [x19, #104]
    2fd0:	mov	x2, x24
    2fd4:	blr	x3
    2fd8:	ldr	x0, [x19, #128]
    2fdc:	cbz	x0, 2ffc <xz_dec_run+0x1d4>
    2fe0:	ldr	x4, [x20]
    2fe4:	mov	x2, x24
    2fe8:	ldr	x3, [x0, #48]
    2fec:	ldr	x0, [x19, #112]
    2ff0:	ldr	x1, [x19, #16]
    2ff4:	add	x1, x4, x1
    2ff8:	blr	x3
    2ffc:	cmp	w21, #0x1
    3000:	b.ne	3560 <xz_dec_run+0x738>  // b.any
    3004:	nop
    3008:	mov	w0, #0x7                   	// #7
    300c:	str	w0, [x19]
    3010:	b	30c8 <xz_dec_run+0x2a0>
    3014:	cmp	w21, #0x8
    3018:	b.eq	31f8 <xz_dec_run+0x3d0>  // b.none
    301c:	b.ls	30b8 <xz_dec_run+0x290>  // b.plast
    3020:	cmp	w21, #0x9
    3024:	b.ne	2e68 <xz_dec_run+0x40>  // b.any
    3028:	ldr	x2, [x19, #288]
    302c:	add	x0, x19, #0x128
    3030:	ldp	x4, x1, [x20]
    3034:	ldr	x24, [x20, #16]
    3038:	ldr	x3, [x19, #280]
    303c:	sub	x24, x24, x1
    3040:	add	x1, x4, x1
    3044:	sub	x2, x2, x3
    3048:	add	x0, x0, x3
    304c:	cmp	x24, x2
    3050:	csel	x24, x24, x2, ls  // ls = plast
    3054:	mov	x2, x24
    3058:	bl	0 <grub_memmove>
    305c:	ldp	x1, x0, [x19, #280]
    3060:	ldr	x3, [x20, #8]
    3064:	add	x2, x24, x3
    3068:	str	x2, [x20, #8]
    306c:	add	x24, x24, x1
    3070:	str	x24, [x19, #280]
    3074:	cmp	x24, x0
    3078:	b.eq	3628 <xz_dec_run+0x800>  // b.none
    307c:	ldr	w0, [x19, #152]
    3080:	cbz	w0, 2ed8 <xz_dec_run+0xb0>
    3084:	ldr	x0, [x20, #16]
    3088:	mov	w21, #0x6                   	// #6
    308c:	cmp	x0, x2
    3090:	b.eq	3620 <xz_dec_run+0x7f8>  // b.none
    3094:	str	x22, [x20, #8]
    3098:	str	x23, [x20, #32]
    309c:	mov	w0, w21
    30a0:	ldp	x19, x20, [sp, #16]
    30a4:	ldp	x21, x22, [sp, #32]
    30a8:	ldp	x23, x24, [sp, #48]
    30ac:	ldp	x25, x26, [sp, #64]
    30b0:	ldp	x29, x30, [sp], #112
    30b4:	ret
    30b8:	cmp	w21, #0x6
    30bc:	b.eq	2f40 <xz_dec_run+0x118>  // b.none
    30c0:	cmp	w21, #0x7
    30c4:	b.ne	2e68 <xz_dec_run+0x40>  // b.any
    30c8:	ldr	x1, [x19, #16]
    30cc:	ldr	x5, [x19, #240]
    30d0:	ldr	x0, [x20, #8]
    30d4:	sub	x5, x5, x1
    30d8:	add	x2, x5, x0
    30dc:	sub	x21, x0, x1
    30e0:	add	x3, x0, #0x1
    30e4:	tst	x2, #0x3
    30e8:	b.eq	3124 <xz_dec_run+0x2fc>  // b.none
    30ec:	nop
    30f0:	ldr	x4, [x20, #16]
    30f4:	cmp	x4, x0
    30f8:	b.eq	3800 <xz_dec_run+0x9d8>  // b.none
    30fc:	ldr	x2, [x20]
    3100:	str	x3, [x20, #8]
    3104:	add	x21, x21, #0x1
    3108:	ldrb	w2, [x2, x0]
    310c:	mov	x0, x3
    3110:	cbnz	w2, 3758 <xz_dec_run+0x930>
    3114:	add	x2, x5, x0
    3118:	add	x3, x0, #0x1
    311c:	tst	x2, #0x3
    3120:	b.ne	30f0 <xz_dec_run+0x2c8>  // b.any
    3124:	ldr	x0, [x19, #120]
    3128:	str	x2, [x19, #240]
    312c:	cbz	x0, 39b4 <xz_dec_run+0xb8c>
    3130:	ldr	x4, [x20]
    3134:	mov	x2, x21
    3138:	ldr	x3, [x0, #48]
    313c:	add	x1, x4, x1
    3140:	ldr	x0, [x19, #104]
    3144:	blr	x3
    3148:	ldr	x0, [x19, #128]
    314c:	cbz	x0, 316c <xz_dec_run+0x344>
    3150:	ldr	x1, [x19, #16]
    3154:	mov	x2, x21
    3158:	ldr	x4, [x20]
    315c:	ldr	x3, [x0, #48]
    3160:	add	x1, x4, x1
    3164:	ldr	x0, [x19, #112]
    3168:	blr	x3
    316c:	ldr	x0, [x19, #120]
    3170:	cbz	x0, 31ec <xz_dec_run+0x3c4>
    3174:	ldr	x1, [x0, #56]
    3178:	ldr	x0, [x19, #224]
    317c:	blr	x1
    3180:	ldr	x1, [x19, #120]
    3184:	ldr	x0, [x19, #272]
    3188:	ldr	x1, [x1, #56]
    318c:	blr	x1
    3190:	ldr	x1, [x19, #208]
    3194:	ldr	x0, [x19, #256]
    3198:	cmp	x1, x0
    319c:	b.ne	3658 <xz_dec_run+0x830>  // b.any
    31a0:	ldr	x1, [x19, #216]
    31a4:	ldr	x0, [x19, #264]
    31a8:	cmp	x1, x0
    31ac:	b.ne	3658 <xz_dec_run+0x830>  // b.any
    31b0:	ldr	x1, [x19, #120]
    31b4:	ldr	x0, [x19, #224]
    31b8:	ldr	x1, [x1, #64]
    31bc:	blr	x1
    31c0:	mov	x21, x0
    31c4:	ldr	x1, [x19, #120]
    31c8:	ldr	x0, [x19, #272]
    31cc:	ldr	x1, [x1, #64]
    31d0:	blr	x1
    31d4:	mov	x1, x0
    31d8:	ldr	x2, [x19, #120]
    31dc:	mov	x0, x21
    31e0:	ldr	x2, [x2, #32]
    31e4:	bl	0 <grub_memcmp>
    31e8:	cbnz	w0, 3658 <xz_dec_run+0x830>
    31ec:	mov	w0, #0x8                   	// #8
    31f0:	str	w0, [x19]
    31f4:	nop
    31f8:	mov	x1, x20
    31fc:	mov	x0, x19
    3200:	mov	w2, #0x1                   	// #1
    3204:	bl	2b30 <hash_validate>
    3208:	mov	w21, w0
    320c:	cmp	w0, #0x1
    3210:	b.ne	3560 <xz_dec_run+0x738>  // b.any
    3214:	mov	x0, #0xc                   	// #12
    3218:	mov	w1, #0x9                   	// #9
    321c:	mov	x2, x0
    3220:	str	w1, [x19]
    3224:	str	x0, [x19, #288]
    3228:	b	302c <xz_dec_run+0x204>
    322c:	cmp	w2, #0x0
    3230:	ccmp	w3, #0x0, #0x4, eq  // eq = none
    3234:	b.eq	3244 <xz_dec_run+0x41c>  // b.none
    3238:	mov	w21, #0x5                   	// #5
    323c:	ldr	x2, [x20, #8]
    3240:	b	2fa8 <xz_dec_run+0x180>
    3244:	ldr	w2, [x19, #232]
    3248:	str	wzr, [x19, #4]
    324c:	cmp	w2, #0x1
    3250:	b.eq	3288 <xz_dec_run+0x460>  // b.none
    3254:	cmp	w2, #0x2
    3258:	b.eq	32a0 <xz_dec_run+0x478>  // b.none
    325c:	cbz	w2, 326c <xz_dec_run+0x444>
    3260:	ldr	x0, [x19, #248]
    3264:	cbnz	x0, 2f4c <xz_dec_run+0x124>
    3268:	b	3008 <xz_dec_run+0x1e0>
    326c:	ldr	x2, [x19, #200]
    3270:	str	x0, [x19, #248]
    3274:	cmp	x2, x0
    3278:	b.ne	3658 <xz_dec_run+0x830>  // b.any
    327c:	str	w21, [x19, #232]
    3280:	cbnz	x0, 2f4c <xz_dec_run+0x124>
    3284:	b	3008 <xz_dec_run+0x1e0>
    3288:	ldr	x2, [x19, #256]
    328c:	str	w24, [x19, #232]
    3290:	add	x0, x2, x0
    3294:	str	x0, [x19, #256]
    3298:	ldr	x0, [x19, #248]
    329c:	b	3264 <xz_dec_run+0x43c>
    32a0:	ldr	x2, [x19, #264]
    32a4:	ldr	x3, [x19, #120]
    32a8:	add	x0, x2, x0
    32ac:	str	x0, [x19, #264]
    32b0:	cbz	x3, 32c8 <xz_dec_run+0x4a0>
    32b4:	ldr	x3, [x3, #48]
    32b8:	mov	x1, x25
    32bc:	ldr	x0, [x19, #272]
    32c0:	mov	x2, #0x10                  	// #16
    32c4:	blr	x3
    32c8:	ldr	x0, [x19, #248]
    32cc:	str	w21, [x19, #232]
    32d0:	sub	x0, x0, #0x1
    32d4:	str	x0, [x19, #248]
    32d8:	cbnz	x0, 2f4c <xz_dec_run+0x124>
    32dc:	b	3008 <xz_dec_run+0x1e0>
    32e0:	ldp	x1, x3, [x20]
    32e4:	ldp	x0, x21, [x19, #280]
    32e8:	ldr	x2, [x20, #16]
    32ec:	add	x1, x1, x3
    32f0:	sub	x21, x21, x0
    32f4:	sub	x3, x2, x3
    32f8:	add	x26, x19, #0x128
    32fc:	cmp	x3, x21
    3300:	add	x0, x26, x0
    3304:	csel	x21, x3, x21, ls  // ls = plast
    3308:	mov	x2, x21
    330c:	bl	0 <grub_memmove>
    3310:	ldp	x1, x0, [x19, #280]
    3314:	ldr	x3, [x20, #8]
    3318:	add	x2, x21, x3
    331c:	str	x2, [x20, #8]
    3320:	add	x21, x21, x1
    3324:	str	x21, [x19, #280]
    3328:	cmp	x21, x0
    332c:	b.ne	307c <xz_dec_run+0x254>  // b.any
    3330:	ldr	x0, [x19, #128]
    3334:	sub	x3, x21, #0x4
    3338:	stp	xzr, x3, [x19, #280]
    333c:	cbz	x0, 3398 <xz_dec_run+0x570>
    3340:	ldr	x1, [x0, #32]
    3344:	cmp	x1, #0x4
    3348:	b.ne	3658 <xz_dec_run+0x830>  // b.any
    334c:	mov	x2, x26
    3350:	add	x1, sp, #0x68
    3354:	bl	0 <grub_crypto_hash>
    3358:	ldr	x2, [x19, #288]
    335c:	add	x1, sp, #0x68
    3360:	ldr	x3, [x19, #128]
    3364:	add	x2, x19, x2
    3368:	add	x0, sp, #0x60
    336c:	ldrb	w4, [x2, #296]
    3370:	ldrb	w5, [x2, #297]
    3374:	ldrb	w6, [x2, #298]
    3378:	ldrb	w2, [x2, #299]
    337c:	strb	w2, [sp, #96]
    3380:	strb	w6, [sp, #97]
    3384:	strb	w5, [sp, #98]
    3388:	strb	w4, [sp, #99]
    338c:	ldr	x2, [x3, #32]
    3390:	bl	0 <grub_memcmp>
    3394:	cbnz	w0, 3658 <xz_dec_run+0x830>
    3398:	ldrb	w4, [x19, #297]
    339c:	mov	x0, #0x2                   	// #2
    33a0:	str	x0, [x19, #280]
    33a4:	tst	w4, #0x3e
    33a8:	b.ne	3858 <xz_dec_run+0xa30>  // b.any
    33ac:	ldr	x7, [x19, #288]
    33b0:	tbnz	w4, #6, 3704 <xz_dec_run+0x8dc>
    33b4:	mov	x1, #0xffffffffffffffff    	// #-1
    33b8:	str	x1, [x19, #160]
    33bc:	tbnz	w4, #7, 39c0 <xz_dec_run+0xb98>
    33c0:	mov	x1, #0xffffffffffffffff    	// #-1
    33c4:	str	x1, [x19, #168]
    33c8:	and	w4, w4, #0x1
    33cc:	str	w4, [x19, #1336]
    33d0:	sub	x1, x7, x0
    33d4:	cbz	w4, 3420 <xz_dec_run+0x5f8>
    33d8:	cmp	x1, #0x1
    33dc:	b.ls	3858 <xz_dec_run+0xa30>  // b.plast
    33e0:	add	x1, x19, x0
    33e4:	add	x0, x0, #0x1
    33e8:	str	x0, [x19, #280]
    33ec:	ldr	x0, [x19, #1328]
    33f0:	ldrb	w1, [x1, #296]
    33f4:	bl	1278 <xz_dec_bcj_reset>
    33f8:	mov	w21, w0
    33fc:	cbnz	w0, 399c <xz_dec_run+0xb74>
    3400:	ldr	x0, [x19, #280]
    3404:	add	x1, x19, x0
    3408:	add	x0, x0, #0x1
    340c:	str	x0, [x19, #280]
    3410:	ldrb	w1, [x1, #296]
    3414:	cbnz	w1, 3994 <xz_dec_run+0xb6c>
    3418:	ldr	x7, [x19, #288]
    341c:	sub	x1, x7, x0
    3420:	cmp	x1, #0x1
    3424:	b.ls	3590 <xz_dec_run+0x768>  // b.plast
    3428:	add	x1, x19, x0
    342c:	add	x2, x0, #0x1
    3430:	str	x2, [x19, #280]
    3434:	ldrb	w1, [x1, #296]
    3438:	cmp	w1, #0x21
    343c:	b.ne	3858 <xz_dec_run+0xa30>  // b.any
    3440:	add	x2, x19, x2
    3444:	add	x1, x0, #0x2
    3448:	str	x1, [x19, #280]
    344c:	ldrb	w2, [x2, #296]
    3450:	cmp	w2, #0x1
    3454:	b.ne	3858 <xz_dec_run+0xa30>  // b.any
    3458:	cmp	x7, x1
    345c:	b.eq	3590 <xz_dec_run+0x768>  // b.none
    3460:	add	x1, x19, x1
    3464:	add	x0, x0, #0x3
    3468:	str	x0, [x19, #280]
    346c:	ldr	x0, [x19, #1320]
    3470:	ldrb	w1, [x1, #296]
    3474:	bl	2a50 <xz_dec_lzma2_reset>
    3478:	mov	w21, w0
    347c:	cbnz	w0, 399c <xz_dec_run+0xb74>
    3480:	ldp	x0, x2, [x19, #280]
    3484:	b	3494 <xz_dec_run+0x66c>
    3488:	str	x0, [x19, #280]
    348c:	ldrb	w1, [x25, x0]
    3490:	cbnz	w1, 3858 <xz_dec_run+0xa30>
    3494:	cmp	x0, x2
    3498:	add	x0, x0, #0x1
    349c:	b.cc	3488 <xz_dec_run+0x660>  // b.lo, b.ul, b.last
    34a0:	mov	w0, #0x3                   	// #3
    34a4:	str	w0, [x19]
    34a8:	stp	xzr, xzr, [x19, #184]
    34ac:	str	xzr, [x19, #280]
    34b0:	ldr	w0, [x19, #1336]
    34b4:	ldr	x2, [x20, #8]
    34b8:	ldr	x1, [x20, #32]
    34bc:	stp	x2, x1, [x19, #16]
    34c0:	ldr	x1, [x19, #1320]
    34c4:	cbnz	w0, 366c <xz_dec_run+0x844>
    34c8:	mov	x0, x1
    34cc:	mov	x1, x20
    34d0:	bl	2020 <xz_dec_lzma2_run>
    34d4:	mov	w21, w0
    34d8:	ldp	x4, x1, [x19, #16]
    34dc:	ldr	x3, [x20, #8]
    34e0:	ldr	x0, [x19, #184]
    34e4:	ldr	x2, [x20, #32]
    34e8:	add	x0, x0, x3
    34ec:	ldr	x3, [x19, #192]
    34f0:	sub	x0, x0, x4
    34f4:	sub	x2, x2, x1
    34f8:	ldr	x4, [x19, #160]
    34fc:	add	x3, x2, x3
    3500:	stp	x0, x3, [x19, #184]
    3504:	cmp	x0, x4
    3508:	b.hi	3590 <xz_dec_run+0x768>  // b.pmore
    350c:	ldr	x0, [x19, #168]
    3510:	cmp	x3, x0
    3514:	b.hi	3590 <xz_dec_run+0x768>  // b.pmore
    3518:	ldr	x0, [x19, #120]
    351c:	cbz	x0, 3534 <xz_dec_run+0x70c>
    3520:	ldr	x4, [x20, #24]
    3524:	ldr	x3, [x0, #48]
    3528:	add	x1, x4, x1
    352c:	ldr	x0, [x19, #104]
    3530:	blr	x3
    3534:	ldr	x0, [x19, #128]
    3538:	cbz	x0, 3558 <xz_dec_run+0x730>
    353c:	ldp	x1, x4, [x20, #24]
    3540:	ldr	x3, [x0, #48]
    3544:	ldr	x0, [x19, #112]
    3548:	ldr	x2, [x19, #24]
    354c:	add	x1, x1, x2
    3550:	sub	x2, x4, x2
    3554:	blr	x3
    3558:	cmp	w21, #0x1
    355c:	b.eq	3574 <xz_dec_run+0x74c>  // b.none
    3560:	ldr	w0, [x19, #152]
    3564:	cbz	w0, 3b28 <xz_dec_run+0xd00>
    3568:	cbnz	w21, 39a4 <xz_dec_run+0xb7c>
    356c:	ldr	x2, [x20, #8]
    3570:	b	3084 <xz_dec_run+0x25c>
    3574:	ldr	x0, [x19, #160]
    3578:	cmn	x0, #0x1
    357c:	b.eq	378c <xz_dec_run+0x964>  // b.none
    3580:	ldr	x1, [x19, #184]
    3584:	cmp	x0, x1
    3588:	b.eq	378c <xz_dec_run+0x964>  // b.none
    358c:	nop
    3590:	ldr	w0, [x19, #152]
    3594:	mov	w21, #0x5                   	// #5
    3598:	cbnz	w0, 3094 <xz_dec_run+0x26c>
    359c:	str	wzr, [x19, #156]
    35a0:	b	2ee8 <xz_dec_run+0xc0>
    35a4:	str	w24, [x19]
    35a8:	mov	x1, x20
    35ac:	mov	x0, x19
    35b0:	mov	w2, #0x0                   	// #0
    35b4:	bl	2b30 <hash_validate>
    35b8:	mov	w21, w0
    35bc:	cmp	w0, #0x1
    35c0:	b.ne	3560 <xz_dec_run+0x738>  // b.any
    35c4:	str	w0, [x19]
    35c8:	b	2f10 <xz_dec_run+0xe8>
    35cc:	bl	2d90 <xz_dec_reset>
    35d0:	b	2e50 <xz_dec_run+0x28>
    35d4:	adrp	x1, 0 <grub_xzio_close>
    35d8:	str	xzr, [x19, #280]
    35dc:	mov	x0, x27
    35e0:	mov	x2, #0x6                   	// #6
    35e4:	ldr	x21, [x1]
    35e8:	mov	x1, x21
    35ec:	bl	0 <grub_memcmp>
    35f0:	cbnz	w0, 386c <xz_dec_run+0xa44>
    35f4:	adrp	x0, 0 <grub_xzio_close>
    35f8:	ldr	x0, [x0]
    35fc:	bl	0 <grub_crypto_lookup_md_by_name>
    3600:	str	x0, [x19, #128]
    3604:	cbz	x0, 391c <xz_dec_run+0xaf4>
    3608:	ldr	x1, [x0, #32]
    360c:	cmp	x1, #0x4
    3610:	b.eq	38e8 <xz_dec_run+0xac0>  // b.none
    3614:	ldr	w0, [x19, #152]
    3618:	ldr	x27, [sp, #80]
    361c:	cbz	w0, 3660 <xz_dec_run+0x838>
    3620:	mov	w21, #0x5                   	// #5
    3624:	b	3094 <xz_dec_run+0x26c>
    3628:	adrp	x1, 0 <grub_xzio_close>
    362c:	str	xzr, [x19, #280]
    3630:	add	x0, x19, #0x132
    3634:	mov	x2, #0x2                   	// #2
    3638:	ldr	x1, [x1]
    363c:	bl	0 <grub_memcmp>
    3640:	cbnz	w0, 3658 <xz_dec_run+0x830>
    3644:	ldr	x0, [x19, #128]
    3648:	cbz	x0, 38ac <xz_dec_run+0xa84>
    364c:	ldr	x1, [x0, #32]
    3650:	cmp	x1, #0x4
    3654:	b.eq	3878 <xz_dec_run+0xa50>  // b.none
    3658:	ldr	w0, [x19, #152]
    365c:	cbnz	w0, 3620 <xz_dec_run+0x7f8>
    3660:	mov	w21, #0x5                   	// #5
    3664:	str	wzr, [x19, #156]
    3668:	b	2ee8 <xz_dec_run+0xc0>
    366c:	ldr	x0, [x19, #1328]
    3670:	mov	x2, x20
    3674:	bl	fe0 <xz_dec_bcj_run>
    3678:	mov	w21, w0
    367c:	b	34d8 <xz_dec_run+0x6b0>
    3680:	ldr	x0, [x20, #32]
    3684:	cmp	x0, x23
    3688:	b.ne	2ee4 <xz_dec_run+0xbc>  // b.any
    368c:	ldr	w21, [x19, #156]
    3690:	mov	w0, #0x6                   	// #6
    3694:	mov	w1, #0x1                   	// #1
    3698:	str	w1, [x19, #156]
    369c:	cmp	w21, #0x0
    36a0:	csel	w21, w21, w0, eq  // eq = none
    36a4:	b	309c <xz_dec_run+0x274>
    36a8:	ldp	x4, x1, [x20]
    36ac:	ldp	x3, x26, [x19, #280]
    36b0:	ldr	x2, [x20, #16]
    36b4:	str	x27, [sp, #80]
    36b8:	add	x27, x19, #0x128
    36bc:	sub	x2, x2, x1
    36c0:	add	x1, x4, x1
    36c4:	sub	x26, x26, x3
    36c8:	add	x0, x27, x3
    36cc:	cmp	x26, x2
    36d0:	csel	x26, x26, x2, ls  // ls = plast
    36d4:	mov	x2, x26
    36d8:	bl	0 <grub_memmove>
    36dc:	ldp	x1, x0, [x19, #280]
    36e0:	ldr	x3, [x20, #8]
    36e4:	add	x2, x26, x3
    36e8:	str	x2, [x20, #8]
    36ec:	add	x26, x26, x1
    36f0:	str	x26, [x19, #280]
    36f4:	cmp	x26, x0
    36f8:	b.eq	35d4 <xz_dec_run+0x7ac>  // b.none
    36fc:	ldr	x27, [sp, #80]
    3700:	b	307c <xz_dec_run+0x254>
    3704:	ldr	w2, [x19, #4]
    3708:	cbnz	w2, 3710 <xz_dec_run+0x8e8>
    370c:	str	xzr, [x19, #8]
    3710:	mov	x0, #0x2                   	// #2
    3714:	b	374c <xz_dec_run+0x924>
    3718:	ldrb	w3, [x26, x0]
    371c:	add	x0, x0, #0x1
    3720:	ldr	x5, [x19, #8]
    3724:	and	x1, x3, #0x7f
    3728:	str	x0, [x19, #280]
    372c:	lsl	x1, x1, x2
    3730:	orr	x1, x1, x5
    3734:	str	x1, [x19, #8]
    3738:	tbz	w3, #7, 3a10 <xz_dec_run+0xbe8>
    373c:	add	w2, w2, #0x7
    3740:	str	w2, [x19, #4]
    3744:	cmp	w2, #0x3f
    3748:	b.eq	3758 <xz_dec_run+0x930>  // b.none
    374c:	cmp	x0, x7
    3750:	b.cc	3718 <xz_dec_run+0x8f0>  // b.lo, b.ul, b.last
    3754:	nop
    3758:	mov	w21, #0x5                   	// #5
    375c:	ldr	w0, [x19, #152]
    3760:	cbnz	w0, 3094 <xz_dec_run+0x26c>
    3764:	str	wzr, [x19, #156]
    3768:	b	2ee8 <xz_dec_run+0xc0>
    376c:	add	w21, w0, #0x1
    3770:	mov	w4, #0x2                   	// #2
    3774:	mov	x0, #0x0                   	// #0
    3778:	str	w4, [x19]
    377c:	lsl	w21, w21, #2
    3780:	str	w21, [x19, #176]
    3784:	stp	xzr, x21, [x19, #280]
    3788:	b	32f4 <xz_dec_run+0x4cc>
    378c:	ldr	x0, [x19, #168]
    3790:	ldr	x3, [x19, #192]
    3794:	cmn	x0, #0x1
    3798:	b.eq	37a4 <xz_dec_run+0x97c>  // b.none
    379c:	cmp	x0, x3
    37a0:	b.ne	3590 <xz_dec_run+0x768>  // b.any
    37a4:	ldp	x2, x1, [x19, #208]
    37a8:	ldr	x6, [x19, #144]
    37ac:	ldr	x4, [x19, #184]
    37b0:	ldr	w0, [x19, #176]
    37b4:	add	x1, x1, x3
    37b8:	ldr	x5, [x19, #120]
    37bc:	add	x2, x4, x2
    37c0:	add	x0, x0, x6
    37c4:	add	x0, x0, x2
    37c8:	stp	x0, x1, [x19, #208]
    37cc:	cbz	x5, 37e8 <xz_dec_run+0x9c0>
    37d0:	ldr	x3, [x5, #48]
    37d4:	add	x1, x19, #0xd0
    37d8:	ldr	x0, [x19, #224]
    37dc:	mov	x2, #0x10                  	// #16
    37e0:	blr	x3
    37e4:	ldr	x4, [x19, #184]
    37e8:	mov	w1, #0x4                   	// #4
    37ec:	ldr	x0, [x19, #200]
    37f0:	str	w1, [x19]
    37f4:	add	x0, x0, #0x1
    37f8:	str	x0, [x19, #200]
    37fc:	b	2e8c <xz_dec_run+0x64>
    3800:	ldr	x0, [x19, #120]
    3804:	str	x2, [x19, #240]
    3808:	cbz	x0, 3824 <xz_dec_run+0x9fc>
    380c:	ldr	x4, [x20]
    3810:	mov	x2, x21
    3814:	ldr	x3, [x0, #48]
    3818:	add	x1, x4, x1
    381c:	ldr	x0, [x19, #104]
    3820:	blr	x3
    3824:	ldr	x0, [x19, #128]
    3828:	cbz	x0, 3848 <xz_dec_run+0xa20>
    382c:	ldr	x4, [x20]
    3830:	mov	x2, x21
    3834:	ldr	x3, [x0, #48]
    3838:	ldr	x0, [x19, #112]
    383c:	ldr	x1, [x19, #16]
    3840:	add	x1, x4, x1
    3844:	blr	x3
    3848:	ldr	w0, [x19, #152]
    384c:	ldr	x2, [x20, #8]
    3850:	cbnz	w0, 3084 <xz_dec_run+0x25c>
    3854:	b	2ed8 <xz_dec_run+0xb0>
    3858:	ldr	w0, [x19, #152]
    385c:	mov	w21, #0x4                   	// #4
    3860:	cbnz	w0, 3094 <xz_dec_run+0x26c>
    3864:	str	wzr, [x19, #156]
    3868:	b	2ee8 <xz_dec_run+0xc0>
    386c:	mov	w21, #0x3                   	// #3
    3870:	ldr	x27, [sp, #80]
    3874:	b	375c <xz_dec_run+0x934>
    3878:	add	x1, sp, #0x68
    387c:	add	x2, x19, #0x12c
    3880:	mov	x3, #0x6                   	// #6
    3884:	bl	0 <grub_crypto_hash>
    3888:	ldr	w2, [x19, #296]
    388c:	add	x1, sp, #0x68
    3890:	ldr	x3, [x19, #128]
    3894:	rev	w2, w2
    3898:	str	w2, [sp, #96]
    389c:	add	x0, sp, #0x60
    38a0:	ldr	x2, [x3, #32]
    38a4:	bl	0 <grub_memcmp>
    38a8:	cbnz	w0, 3658 <xz_dec_run+0x830>
    38ac:	ldr	x2, [x19, #240]
    38b0:	ldr	w1, [x19, #300]
    38b4:	ldr	w0, [x19, #152]
    38b8:	cmp	x1, x2, lsr #2
    38bc:	b.ne	365c <xz_dec_run+0x834>  // b.any
    38c0:	ldrb	w1, [x19, #304]
    38c4:	cbnz	w1, 365c <xz_dec_run+0x834>
    38c8:	ldrb	w2, [x19, #305]
    38cc:	ldrb	w1, [x19, #136]
    38d0:	cmp	w2, w1
    38d4:	b.ne	365c <xz_dec_run+0x834>  // b.any
    38d8:	cbnz	w0, 39ac <xz_dec_run+0xb84>
    38dc:	mov	w21, #0x1                   	// #1
    38e0:	str	wzr, [x19, #156]
    38e4:	b	2ee8 <xz_dec_run+0xc0>
    38e8:	add	x2, x19, #0x12e
    38ec:	add	x1, sp, #0x68
    38f0:	mov	x3, #0x2                   	// #2
    38f4:	bl	0 <grub_crypto_hash>
    38f8:	ldr	w2, [x19, #304]
    38fc:	add	x1, sp, #0x68
    3900:	ldr	x3, [x19, #128]
    3904:	rev	w2, w2
    3908:	str	w2, [sp, #96]
    390c:	add	x0, sp, #0x60
    3910:	ldr	x2, [x3, #32]
    3914:	bl	0 <grub_memcmp>
    3918:	cbnz	w0, 3614 <xz_dec_run+0x7ec>
    391c:	ldrb	w0, [x19, #302]
    3920:	cbnz	w0, 3990 <xz_dec_run+0xb68>
    3924:	ldrb	w1, [x19, #303]
    3928:	cmp	w1, #0xa
    392c:	b.hi	3990 <xz_dec_run+0xb68>  // b.pmore
    3930:	add	x0, x21, w1, sxtw #4
    3934:	ldr	x0, [x0, #8]
    3938:	cmp	x0, #0x0
    393c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    3940:	b.ne	3990 <xz_dec_run+0xb68>  // b.any
    3944:	ldr	x0, [x19, #128]
    3948:	strb	w1, [x19, #136]
    394c:	cbz	x0, 3970 <xz_dec_run+0xb48>
    3950:	ldr	x0, [x0, #72]
    3954:	bl	0 <grub_malloc>
    3958:	str	x0, [x19, #112]
    395c:	cbz	x0, 3ae0 <xz_dec_run+0xcb8>
    3960:	ldr	x1, [x19, #128]
    3964:	ldr	x1, [x1, #40]
    3968:	blr	x1
    396c:	ldrb	w1, [x19, #303]
    3970:	cbnz	w1, 3a30 <xz_dec_run+0xc08>
    3974:	str	xzr, [x19, #120]
    3978:	str	xzr, [x19, #144]
    397c:	mov	w0, #0x1                   	// #1
    3980:	ldr	x27, [sp, #80]
    3984:	str	w0, [x19]
    3988:	str	wzr, [x19, #96]
    398c:	b	2f10 <xz_dec_run+0xe8>
    3990:	ldr	x27, [sp, #80]
    3994:	mov	w21, #0x4                   	// #4
    3998:	b	375c <xz_dec_run+0x934>
    399c:	ldr	w0, [x19, #152]
    39a0:	cbz	w0, 2ee4 <xz_dec_run+0xbc>
    39a4:	cmp	w21, #0x1
    39a8:	b.ne	3094 <xz_dec_run+0x26c>  // b.any
    39ac:	mov	w21, #0x1                   	// #1
    39b0:	b	309c <xz_dec_run+0x274>
    39b4:	ldr	x0, [x19, #128]
    39b8:	cbnz	x0, 3154 <xz_dec_run+0x32c>
    39bc:	b	31ec <xz_dec_run+0x3c4>
    39c0:	ldr	w1, [x19, #4]
    39c4:	cbnz	w1, 3a04 <xz_dec_run+0xbdc>
    39c8:	b	3a28 <xz_dec_run+0xc00>
    39cc:	ldrb	w3, [x26, x0]
    39d0:	add	x0, x0, #0x1
    39d4:	ldr	w2, [x19, #4]
    39d8:	ldr	x6, [x19, #8]
    39dc:	and	x1, x3, #0x7f
    39e0:	str	x0, [x19, #280]
    39e4:	add	w5, w2, #0x7
    39e8:	lsl	x1, x1, x2
    39ec:	orr	x1, x1, x6
    39f0:	str	x1, [x19, #8]
    39f4:	tbz	w3, #7, 3ac8 <xz_dec_run+0xca0>
    39f8:	str	w5, [x19, #4]
    39fc:	cmp	w5, #0x3f
    3a00:	b.eq	3758 <xz_dec_run+0x930>  // b.none
    3a04:	cmp	x0, x7
    3a08:	b.cc	39cc <xz_dec_run+0xba4>  // b.lo, b.ul, b.last
    3a0c:	b	3758 <xz_dec_run+0x930>
    3a10:	cmp	w3, #0x0
    3a14:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    3a18:	b.ne	3758 <xz_dec_run+0x930>  // b.any
    3a1c:	str	wzr, [x19, #4]
    3a20:	str	x1, [x19, #160]
    3a24:	tbz	w4, #7, 33c0 <xz_dec_run+0x598>
    3a28:	str	xzr, [x19, #8]
    3a2c:	b	3a04 <xz_dec_run+0xbdc>
    3a30:	add	x0, x21, #0x8
    3a34:	add	x1, x0, w1, sxtw #4
    3a38:	ldp	x0, x1, [x1]
    3a3c:	str	x1, [x19, #144]
    3a40:	bl	0 <grub_crypto_lookup_md_by_name>
    3a44:	str	x0, [x19, #120]
    3a48:	cbz	x0, 397c <xz_dec_run+0xb54>
    3a4c:	ldr	x2, [x0, #32]
    3a50:	ldr	x1, [x19, #144]
    3a54:	cmp	x2, x1
    3a58:	b.ne	3990 <xz_dec_run+0xb68>  // b.any
    3a5c:	ldr	x0, [x0, #72]
    3a60:	bl	0 <grub_malloc>
    3a64:	str	x0, [x19, #104]
    3a68:	cbz	x0, 3afc <xz_dec_run+0xcd4>
    3a6c:	ldr	x0, [x19, #120]
    3a70:	ldr	x0, [x0, #72]
    3a74:	bl	0 <grub_malloc>
    3a78:	str	x0, [x19, #272]
    3a7c:	cbz	x0, 3af4 <xz_dec_run+0xccc>
    3a80:	ldr	x0, [x19, #120]
    3a84:	ldr	x0, [x0, #72]
    3a88:	bl	0 <grub_malloc>
    3a8c:	str	x0, [x19, #224]
    3a90:	cbz	x0, 3aec <xz_dec_run+0xcc4>
    3a94:	ldr	x1, [x19, #120]
    3a98:	ldr	x0, [x19, #104]
    3a9c:	ldr	x1, [x1, #40]
    3aa0:	blr	x1
    3aa4:	ldr	x1, [x19, #120]
    3aa8:	ldr	x0, [x19, #272]
    3aac:	ldr	x1, [x1, #40]
    3ab0:	blr	x1
    3ab4:	ldr	x1, [x19, #120]
    3ab8:	ldr	x0, [x19, #224]
    3abc:	ldr	x1, [x1, #40]
    3ac0:	blr	x1
    3ac4:	b	397c <xz_dec_run+0xb54>
    3ac8:	cmp	w3, #0x0
    3acc:	ccmp	w2, #0x0, #0x4, eq  // eq = none
    3ad0:	b.ne	3758 <xz_dec_run+0x930>  // b.any
    3ad4:	str	wzr, [x19, #4]
    3ad8:	str	x1, [x19, #168]
    3adc:	b	33c8 <xz_dec_run+0x5a0>
    3ae0:	mov	w21, #0x2                   	// #2
    3ae4:	ldr	x27, [sp, #80]
    3ae8:	b	375c <xz_dec_run+0x934>
    3aec:	ldr	x0, [x19, #272]
    3af0:	bl	0 <grub_free>
    3af4:	ldr	x0, [x19, #104]
    3af8:	bl	0 <grub_free>
    3afc:	ldr	x0, [x19, #112]
    3b00:	bl	0 <grub_free>
    3b04:	ldr	w0, [x19, #152]
    3b08:	cbz	w0, 3b18 <xz_dec_run+0xcf0>
    3b0c:	mov	w21, #0x2                   	// #2
    3b10:	ldr	x27, [sp, #80]
    3b14:	b	3094 <xz_dec_run+0x26c>
    3b18:	mov	w21, #0x2                   	// #2
    3b1c:	ldr	x27, [sp, #80]
    3b20:	str	wzr, [x19, #156]
    3b24:	b	2ee8 <xz_dec_run+0xc0>
    3b28:	cbnz	w21, 2ee4 <xz_dec_run+0xbc>
    3b2c:	ldr	x2, [x20, #8]
    3b30:	b	2ed8 <xz_dec_run+0xb0>
    3b34:	nop
	...

0000000000003b50 <xz_dec_init>:
    3b50:	stp	x29, x30, [sp, #-32]!
    3b54:	mov	x29, sp
    3b58:	stp	x19, x20, [sp, #16]
    3b5c:	mov	w20, w0
    3b60:	mov	x0, #0x540                 	// #1344
    3b64:	bl	0 <grub_malloc>
    3b68:	mov	x19, x0
    3b6c:	cbz	x0, 3bac <xz_dec_init+0x5c>
    3b70:	mov	x2, #0x540                 	// #1344
    3b74:	mov	w1, #0x0                   	// #0
    3b78:	bl	0 <grub_memset>
    3b7c:	cmp	w20, #0x0
    3b80:	cset	w0, eq  // eq = none
    3b84:	str	w0, [x19, #152]
    3b88:	bl	1248 <xz_dec_bcj_create>
    3b8c:	str	x0, [x19, #1328]
    3b90:	cbz	x0, 3bc4 <xz_dec_init+0x74>
    3b94:	mov	w0, w20
    3b98:	bl	29d8 <xz_dec_lzma2_create>
    3b9c:	str	x0, [x19, #1320]
    3ba0:	cbz	x0, 3bbc <xz_dec_init+0x6c>
    3ba4:	mov	x0, x19
    3ba8:	bl	2d90 <xz_dec_reset>
    3bac:	mov	x0, x19
    3bb0:	ldp	x19, x20, [sp, #16]
    3bb4:	ldp	x29, x30, [sp], #32
    3bb8:	ret
    3bbc:	ldr	x0, [x19, #1328]
    3bc0:	bl	0 <grub_free>
    3bc4:	mov	x0, x19
    3bc8:	mov	x19, #0x0                   	// #0
    3bcc:	bl	0 <grub_free>
    3bd0:	mov	x0, x19
    3bd4:	ldp	x19, x20, [sp, #16]
    3bd8:	ldp	x29, x30, [sp], #32
    3bdc:	ret

0000000000003be0 <xz_dec_end>:
    3be0:	cbz	x0, 3c34 <xz_dec_end+0x54>
    3be4:	stp	x29, x30, [sp, #-32]!
    3be8:	mov	x29, sp
    3bec:	str	x19, [sp, #16]
    3bf0:	mov	x19, x0
    3bf4:	ldr	x0, [x0, #1320]
    3bf8:	bl	2af0 <xz_dec_lzma2_end>
    3bfc:	ldr	x0, [x19, #272]
    3c00:	bl	0 <grub_free>
    3c04:	ldr	x0, [x19, #224]
    3c08:	bl	0 <grub_free>
    3c0c:	ldr	x0, [x19, #104]
    3c10:	bl	0 <grub_free>
    3c14:	ldr	x0, [x19, #112]
    3c18:	bl	0 <grub_free>
    3c1c:	ldr	x0, [x19, #1328]
    3c20:	bl	0 <grub_free>
    3c24:	mov	x0, x19
    3c28:	ldr	x19, [sp, #16]
    3c2c:	ldp	x29, x30, [sp], #32
    3c30:	b	0 <grub_free>
    3c34:	ret
