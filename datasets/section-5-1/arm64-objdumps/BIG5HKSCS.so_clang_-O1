
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//BIG5HKSCS.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 48000 <gconv@@Base+0x47720>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 49000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xe8>:
     760:	adrp	x0, 48000 <gconv@@Base+0x47720>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 49000 <gconv@@Base+0x48720>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 49000 <gconv@@Base+0x48720>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 48000 <gconv@@Base+0x47720>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 49000 <gconv@@Base+0x48720>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 49000 <gconv@@Base+0x48720>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 48000 <gconv@@Base+0x47720>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 49000 <gconv@@Base+0x48720>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 48000 <gconv@@Base+0x47720>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 49000 <gconv@@Base+0x48720>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w0, w1, #0xff
     83c:	cmp	w0, #0x80
     840:	csinv	w0, w0, wzr, ls  // ls = plast
     844:	ret

0000000000000848 <gconv_init@@Base>:
     848:	stp	x29, x30, [sp, #-32]!
     84c:	mov	x29, sp
     850:	stp	x19, x20, [sp, #16]
     854:	mov	x19, x0
     858:	adrp	x20, 1000 <gconv@@Base+0x720>
     85c:	ldr	x0, [x0, #24]
     860:	add	x20, x20, #0xf60
     864:	mov	x1, x20
     868:	bl	730 <strcmp@plt>
     86c:	cbnz	w0, 8ac <gconv_init@@Base+0x64>
     870:	mov	x2, #0x1                   	// #1
     874:	mov	x1, #0x4                   	// #4
     878:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     87c:	movk	x2, #0x2, lsl #32
     880:	add	x0, x0, #0x838
     884:	movk	x1, #0x8, lsl #32
     888:	str	x0, [x19, #48]
     88c:	stp	x2, x1, [x19, #72]
     890:	str	xzr, [x19, #96]
     894:	mov	w1, #0x1                   	// #1
     898:	mov	w0, #0x0                   	// #0
     89c:	str	w1, [x19, #88]
     8a0:	ldp	x19, x20, [sp, #16]
     8a4:	ldp	x29, x30, [sp], #32
     8a8:	ret
     8ac:	ldr	x0, [x19, #32]
     8b0:	mov	x1, x20
     8b4:	bl	730 <strcmp@plt>
     8b8:	cbnz	w0, 8d8 <gconv_init@@Base+0x90>
     8bc:	mov	x1, #0x1                   	// #1
     8c0:	mov	x0, #0xffffffffffffffff    	// #-1
     8c4:	mov	x2, #0x400000004           	// #17179869188
     8c8:	movk	x1, #0x2, lsl #32
     8cc:	stp	x2, x1, [x19, #72]
     8d0:	str	x0, [x19, #96]
     8d4:	b	894 <gconv_init@@Base+0x4c>
     8d8:	mov	w0, #0x1                   	// #1
     8dc:	b	8a0 <gconv_init@@Base+0x58>

00000000000008e0 <gconv@@Base>:
     8e0:	stp	x29, x30, [sp, #-240]!
     8e4:	mov	x15, x0
     8e8:	mov	x12, x2
     8ec:	mov	x29, sp
     8f0:	stp	x21, x22, [sp, #32]
     8f4:	mov	x21, x1
     8f8:	adrp	x1, 48000 <gconv@@Base+0x47720>
     8fc:	stp	x19, x20, [sp, #16]
     900:	mov	x14, x4
     904:	ldr	w19, [x21, #16]
     908:	ldr	x1, [x1, #4056]
     90c:	stp	x23, x24, [sp, #48]
     910:	mov	x20, x3
     914:	ldr	x0, [x1]
     918:	str	x0, [sp, #232]
     91c:	mov	x0, #0x0                   	// #0
     920:	stp	x25, x26, [sp, #64]
     924:	add	x0, x21, #0x30
     928:	stp	x27, x28, [sp, #80]
     92c:	mov	w24, w7
     930:	mov	x23, x5
     934:	str	x0, [sp, #144]
     938:	add	x27, x15, #0x68
     93c:	mov	w7, w19
     940:	and	w1, w19, #0x1
     944:	mov	x22, #0x0                   	// #0
     948:	tbnz	w19, #0, 968 <gconv@@Base+0x88>
     94c:	ldr	x0, [x15, #104]
     950:	ldr	x22, [x27, #40]
     954:	cbz	x0, 968 <gconv@@Base+0x88>
     958:	adrp	x0, 48000 <gconv@@Base+0x47720>
     95c:	ldr	x0, [x0, #4040]
     960:	ldr	x0, [x0]
     964:	eor	x22, x22, x0
     968:	cbnz	w6, 14a4 <gconv@@Base+0xbc4>
     96c:	cmp	x14, #0x0
     970:	add	x25, sp, #0xc0
     974:	ldr	x28, [x21, #32]
     978:	csel	x0, x21, x14, eq  // eq = none
     97c:	cmp	x23, #0x0
     980:	ldr	x2, [x12]
     984:	csel	x1, x25, xzr, ne  // ne = any
     988:	ldr	w18, [x28]
     98c:	ldr	x11, [x0]
     990:	str	x1, [sp, #168]
     994:	str	xzr, [sp, #192]
     998:	mov	x9, x2
     99c:	ldr	x26, [x21, #8]
     9a0:	cbz	w24, b40 <gconv@@Base+0x260>
     9a4:	ands	w1, w18, #0x7
     9a8:	b.eq	b40 <gconv@@Base+0x260>  // b.none
     9ac:	cbnz	x14, 1efc <gconv@@Base+0x161c>
     9b0:	ldr	x0, [x15, #96]
     9b4:	cbz	x0, 11b4 <gconv@@Base+0x8d4>
     9b8:	stp	x2, x11, [sp, #208]
     9bc:	cmp	w1, #0x4
     9c0:	b.hi	1f3c <gconv@@Base+0x165c>  // b.pmore
     9c4:	mov	w8, w1
     9c8:	cbz	w1, 1854 <gconv@@Base+0xf74>
     9cc:	add	x7, sp, #0xe0
     9d0:	add	x5, x28, #0x3
     9d4:	mov	x0, #0x1                   	// #1
     9d8:	add	x1, x7, x0
     9dc:	ldrb	w4, [x5, x0]
     9e0:	cmp	x8, x0
     9e4:	add	x0, x0, #0x1
     9e8:	sturb	w4, [x1, #-1]
     9ec:	b.ne	9d8 <gconv@@Base+0xf8>  // b.any
     9f0:	mov	x0, #0x4                   	// #4
     9f4:	sub	x0, x0, x8
     9f8:	add	x0, x2, x0
     9fc:	cmp	x20, x0
     a00:	b.cc	1934 <gconv@@Base+0x1054>  // b.lo, b.ul, b.last
     a04:	add	x0, x2, #0x1
     a08:	add	x7, sp, #0xe0
     a0c:	cmp	x11, x26
     a10:	b.cs	1600 <gconv@@Base+0xd20>  // b.hs, b.nlast
     a14:	add	x8, x8, #0x1
     a18:	str	x0, [sp, #208]
     a1c:	add	x1, x7, x8
     a20:	cmp	x8, #0x3
     a24:	ldurb	w3, [x0, #-1]
     a28:	ccmp	x20, x0, #0x0, ls  // ls = plast
     a2c:	add	x0, x0, #0x1
     a30:	sturb	w3, [x1, #-1]
     a34:	b.hi	a14 <gconv@@Base+0x134>  // b.pmore
     a38:	ldr	w9, [x28]
     a3c:	str	x7, [sp, #208]
     a40:	ldr	w3, [sp, #224]
     a44:	cmp	wzr, w9, asr #3
     a48:	asr	w1, w9, #3
     a4c:	b.eq	1608 <gconv@@Base+0xd28>  // b.none
     a50:	cmp	w3, #0x304
     a54:	mov	w0, #0x8866                	// #34918
     a58:	cset	w4, eq  // eq = none
     a5c:	cmp	w0, w1, uxth
     a60:	cset	w2, eq  // eq = none
     a64:	cmp	w4, #0x0
     a68:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     a6c:	and	w5, w1, #0xffff
     a70:	add	x0, x11, #0x1
     a74:	b.ne	16d8 <gconv@@Base+0xdf8>  // b.any
     a78:	cmp	w3, #0x30c
     a7c:	cset	w3, eq  // eq = none
     a80:	cmp	w2, #0x0
     a84:	ccmp	w3, #0x0, #0x4, ne  // ne = any
     a88:	b.ne	1968 <gconv@@Base+0x1088>  // b.any
     a8c:	mov	w2, #0x88a7                	// #34983
     a90:	cmp	w5, w2
     a94:	cset	w9, eq  // eq = none
     a98:	cmp	w4, #0x0
     a9c:	ccmp	w9, #0x0, #0x4, ne  // ne = any
     aa0:	b.ne	1aac <gconv@@Base+0x11cc>  // b.any
     aa4:	cmp	w3, #0x0
     aa8:	mov	w2, #0x88a5                	// #34981
     aac:	ccmp	w9, #0x0, #0x4, ne  // ne = any
     ab0:	b.eq	1c64 <gconv@@Base+0x1384>  // b.none
     ab4:	cmp	x26, x0
     ab8:	b.ls	1600 <gconv@@Base+0xd20>  // b.plast
     abc:	str	x0, [sp, #216]
     ac0:	mov	w0, #0xffffff88            	// #-120
     ac4:	strb	w0, [x11]
     ac8:	mov	x1, #0x0                   	// #0
     acc:	ldr	x0, [sp, #216]
     ad0:	add	x3, x0, #0x1
     ad4:	str	x3, [sp, #216]
     ad8:	strb	w2, [x0]
     adc:	ldr	x0, [sp, #208]
     ae0:	str	wzr, [x28]
     ae4:	add	x0, x0, #0x4
     ae8:	str	x0, [sp, #208]
     aec:	subs	x7, x0, x7
     af0:	b.eq	b30 <gconv@@Base+0x250>  // b.none
     af4:	cmp	x1, x7
     af8:	b.ge	1e88 <gconv@@Base+0x15a8>  // b.tcont
     afc:	ldr	w19, [x21, #16]
     b00:	ldr	x2, [x12]
     b04:	sub	x7, x7, x1
     b08:	add	x9, x2, x7
     b0c:	str	x9, [x12]
     b10:	and	w6, w6, #0xfffffff8
     b14:	mov	w7, w19
     b18:	mov	w18, w6
     b1c:	ldr	x0, [x15, #96]
     b20:	ldr	x11, [sp, #216]
     b24:	str	w6, [x28]
     b28:	b	b44 <gconv@@Base+0x264>
     b2c:	cbnz	w25, dd0 <gconv@@Base+0x4f0>
     b30:	ldr	w7, [x21, #16]
     b34:	ldr	w18, [x28]
     b38:	ldr	x9, [x12]
     b3c:	nop
     b40:	ldr	x0, [x15, #96]
     b44:	add	x2, sp, #0xd8
     b48:	adrp	x1, 2000 <gconv@@Base+0x1720>
     b4c:	add	x1, x1, #0x110
     b50:	str	w18, [sp, #120]
     b54:	mov	x25, x21
     b58:	stp	x14, x15, [sp, #128]
     b5c:	mov	x8, x20
     b60:	mov	x21, x11
     b64:	stp	x27, x1, [sp, #152]
     b68:	mov	x20, x28
     b6c:	mov	x27, x12
     b70:	str	x2, [sp, #176]
     b74:	mov	x28, x26
     b78:	mov	x26, x9
     b7c:	cbz	x0, d08 <gconv@@Base+0x428>
     b80:	stp	x26, x21, [sp, #208]
     b84:	mov	x19, x21
     b88:	cmp	x8, x26
     b8c:	b.eq	1548 <gconv@@Base+0xc68>  // b.none
     b90:	mov	x0, x26
     b94:	add	x3, sp, #0xd0
     b98:	mov	w15, #0x4                   	// #4
     b9c:	add	x9, x0, #0x4
     ba0:	cmp	x8, x9
     ba4:	b.cc	ee4 <gconv@@Base+0x604>  // b.lo, b.ul, b.last
     ba8:	cmp	x28, x19
     bac:	b.ls	e38 <gconv@@Base+0x558>  // b.plast
     bb0:	ldr	w5, [x20]
     bb4:	ldr	w2, [x0]
     bb8:	cmp	wzr, w5, asr #3
     bbc:	asr	w5, w5, #3
     bc0:	b.eq	e08 <gconv@@Base+0x528>  // b.none
     bc4:	cmp	w2, #0x304
     bc8:	mov	w0, #0x8866                	// #34918
     bcc:	cset	w4, eq  // eq = none
     bd0:	cmp	w0, w5, uxth
     bd4:	cset	w0, eq  // eq = none
     bd8:	cmp	w4, #0x0
     bdc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     be0:	and	w6, w5, #0xffff
     be4:	add	x1, x19, #0x1
     be8:	b.ne	e2c <gconv@@Base+0x54c>  // b.any
     bec:	cmp	w2, #0x30c
     bf0:	cset	w2, eq  // eq = none
     bf4:	cmp	w0, #0x0
     bf8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     bfc:	b.ne	edc <gconv@@Base+0x5fc>  // b.any
     c00:	mov	w0, #0x88a7                	// #34983
     c04:	cmp	w6, w0
     c08:	cset	w9, eq  // eq = none
     c0c:	cmp	w4, #0x0
     c10:	ccmp	w9, #0x0, #0x4, ne  // ne = any
     c14:	b.ne	f74 <gconv@@Base+0x694>  // b.any
     c18:	cmp	w2, #0x0
     c1c:	mov	w0, #0x88a5                	// #34981
     c20:	ccmp	w9, #0x0, #0x4, ne  // ne = any
     c24:	b.eq	1160 <gconv@@Base+0x880>  // b.none
     c28:	cmp	x28, x1
     c2c:	b.ls	e38 <gconv@@Base+0x558>  // b.plast
     c30:	str	x1, [sp, #216]
     c34:	mov	w1, #0xffffff88            	// #-120
     c38:	strb	w1, [x19]
     c3c:	ldr	x1, [sp, #216]
     c40:	add	x2, x1, #0x1
     c44:	str	x2, [sp, #216]
     c48:	strb	w0, [x1]
     c4c:	ldp	x0, x19, [sp, #208]
     c50:	str	wzr, [x20]
     c54:	add	x0, x0, #0x4
     c58:	str	x0, [sp, #208]
     c5c:	cmp	x8, x0
     c60:	b.ne	b9c <gconv@@Base+0x2bc>  // b.any
     c64:	nop
     c68:	str	x0, [x27]
     c6c:	ldr	x0, [sp, #128]
     c70:	cbnz	x0, dc8 <gconv@@Base+0x4e8>
     c74:	ldp	w1, w0, [x25, #16]
     c78:	add	w0, w0, #0x1
     c7c:	str	w0, [x25, #20]
     c80:	tbnz	w1, #0, 10c8 <gconv@@Base+0x7e8>
     c84:	cmp	x21, x19
     c88:	b.cs	114c <gconv@@Base+0x86c>  // b.hs, b.nlast
     c8c:	ldr	x1, [x25]
     c90:	mov	x0, x22
     c94:	str	x8, [sp, #104]
     c98:	str	w15, [sp, #112]
     c9c:	str	x1, [sp, #200]
     ca0:	bl	740 <_dl_mcount_wrapper_check@plt>
     ca4:	ldp	x1, x0, [sp, #144]
     ca8:	mov	w7, w24
     cac:	mov	x5, x23
     cb0:	mov	x3, x19
     cb4:	add	x2, sp, #0xc8
     cb8:	mov	w6, #0x0                   	// #0
     cbc:	mov	x4, #0x0                   	// #0
     cc0:	blr	x22
     cc4:	mov	w7, w0
     cc8:	ldr	w15, [sp, #112]
     ccc:	cmp	w0, #0x4
     cd0:	ldr	x8, [sp, #104]
     cd4:	b.eq	ef0 <gconv@@Base+0x610>  // b.none
     cd8:	ldr	x15, [sp, #200]
     cdc:	cmp	x15, x19
     ce0:	b.ne	fa4 <gconv@@Base+0x6c4>  // b.any
     ce4:	cbnz	w7, 1534 <gconv@@Base+0xc54>
     ce8:	ldr	w0, [x20]
     cec:	str	w0, [sp, #120]
     cf0:	ldr	x0, [sp, #136]
     cf4:	ldr	w7, [x25, #16]
     cf8:	ldr	x21, [x25]
     cfc:	ldr	x0, [x0, #96]
     d00:	ldr	x26, [x27]
     d04:	cbnz	x0, b80 <gconv@@Base+0x2a0>
     d08:	cmp	x8, x26
     d0c:	b.eq	18d4 <gconv@@Base+0xff4>  // b.none
     d10:	add	x4, x21, #0x4
     d14:	cmp	x28, x4
     d18:	b.cc	1428 <gconv@@Base+0xb48>  // b.lo, b.ul, b.last
     d1c:	ldr	w0, [sp, #120]
     d20:	adrp	x5, 21000 <gconv@@Base+0x20720>
     d24:	and	w7, w7, #0x2
     d28:	add	x5, x5, #0x8d8
     d2c:	mov	x2, x26
     d30:	mov	x19, x21
     d34:	mov	w15, #0x4                   	// #4
     d38:	mov	w17, #0xc3                  	// #195
     d3c:	mov	w16, #0xffff98eb            	// #-26389
     d40:	mov	w6, #0x86                  	// #134
     d44:	cmp	wzr, w0, asr #3
     d48:	asr	w0, w0, #3
     d4c:	b.ne	e50 <gconv@@Base+0x570>  // b.any
     d50:	ldrb	w0, [x2]
     d54:	sub	w1, w0, #0x81
     d58:	cmp	w1, #0x7d
     d5c:	b.hi	e44 <gconv@@Base+0x564>  // b.pmore
     d60:	add	x9, x2, #0x1
     d64:	cmp	x8, x9
     d68:	b.ls	13b4 <gconv@@Base+0xad4>  // b.plast
     d6c:	ldrb	w1, [x2, #1]
     d70:	sub	w3, w1, #0x40
     d74:	add	w1, w1, w16
     d78:	and	w3, w3, #0xff
     d7c:	cmp	w3, #0xbe
     d80:	madd	w1, w0, w17, w1
     d84:	ccmp	w0, w6, #0x0, ls  // ls = plast
     d88:	b.hi	10ac <gconv@@Base+0x7cc>  // b.pmore
     d8c:	cmp	w1, #0xe5
     d90:	b.eq	10bc <gconv@@Base+0x7dc>  // b.none
     d94:	cmp	w1, #0xe7
     d98:	b.eq	f7c <gconv@@Base+0x69c>  // b.none
     d9c:	cmp	w1, #0x126
     da0:	b.eq	13a8 <gconv@@Base+0xac8>  // b.none
     da4:	cmp	w1, #0x128
     da8:	b.eq	145c <gconv@@Base+0xb7c>  // b.none
     dac:	ldr	x1, [sp, #168]
     db0:	cbz	x1, db8 <gconv@@Base+0x4d8>
     db4:	cbnz	w7, 119c <gconv@@Base+0x8bc>
     db8:	mov	w15, #0x6                   	// #6
     dbc:	str	x2, [x27]
     dc0:	ldr	x0, [sp, #128]
     dc4:	cbz	x0, c74 <gconv@@Base+0x394>
     dc8:	mov	w25, w15
     dcc:	str	x19, [x0]
     dd0:	adrp	x0, 48000 <gconv@@Base+0x47720>
     dd4:	ldr	x26, [x0, #4056]
     dd8:	ldr	x1, [sp, #232]
     ddc:	ldr	x0, [x26]
     de0:	eor	x0, x1, x0
     de4:	cbnz	x0, 1f4c <gconv@@Base+0x166c>
     de8:	mov	w0, w25
     dec:	ldp	x19, x20, [sp, #16]
     df0:	ldp	x21, x22, [sp, #32]
     df4:	ldp	x23, x24, [sp, #48]
     df8:	ldp	x25, x26, [sp, #64]
     dfc:	ldp	x27, x28, [sp, #80]
     e00:	ldp	x29, x30, [sp], #240
     e04:	ret
     e08:	cmp	w2, #0x80
     e0c:	b.hi	e74 <gconv@@Base+0x594>  // b.pmore
     e10:	add	x0, x19, #0x1
     e14:	str	x0, [sp, #216]
     e18:	strb	w2, [x19]
     e1c:	ldp	x0, x19, [sp, #208]
     e20:	add	x0, x0, #0x4
     e24:	str	x0, [sp, #208]
     e28:	b	c5c <gconv@@Base+0x37c>
     e2c:	cmp	x28, x1
     e30:	mov	w0, #0x8862                	// #34914
     e34:	b.hi	c30 <gconv@@Base+0x350>  // b.pmore
     e38:	mov	w15, #0x5                   	// #5
     e3c:	ldr	x0, [sp, #208]
     e40:	b	c68 <gconv@@Base+0x388>
     e44:	cmp	w0, #0xff
     e48:	b.eq	13c0 <gconv@@Base+0xae0>  // b.none
     e4c:	add	x2, x2, #0x1
     e50:	str	w0, [x19]
     e54:	mov	x19, x4
     e58:	cmp	x8, x2
     e5c:	b.eq	dbc <gconv@@Base+0x4dc>  // b.none
     e60:	add	x4, x19, #0x4
     e64:	cmp	x28, x4
     e68:	b.cc	1154 <gconv@@Base+0x874>  // b.lo, b.ul, b.last
     e6c:	ldr	w0, [x20]
     e70:	b	d44 <gconv@@Base+0x464>
     e74:	ldr	x0, [sp, #160]
     e78:	mov	w1, #0xa2                  	// #162
     e7c:	mov	x6, #0x0                   	// #0
     e80:	add	x5, x0, #0x4
     e84:	b	ea8 <gconv@@Base+0x5c8>
     e88:	ldr	w0, [x5]
     e8c:	cmp	w2, w0
     e90:	b.ls	f00 <gconv@@Base+0x620>  // b.plast
     e94:	add	x6, x6, #0x1
     e98:	add	x5, x5, #0xc
     e9c:	cmp	x6, #0x45
     ea0:	b.eq	eb0 <gconv@@Base+0x5d0>  // b.none
     ea4:	ldur	w1, [x5, #-4]
     ea8:	cmp	w2, w1
     eac:	b.cs	e88 <gconv@@Base+0x5a8>  // b.hs, b.nlast
     eb0:	mov	w0, #0x1c00                	// #7168
     eb4:	cmp	w0, w2, lsr #7
     eb8:	b.eq	1190 <gconv@@Base+0x8b0>  // b.none
     ebc:	ldr	x0, [sp, #168]
     ec0:	cbz	x0, 1a58 <gconv@@Base+0x1178>
     ec4:	ldr	w0, [x25, #16]
     ec8:	tbnz	w0, #3, 13e4 <gconv@@Base+0xb04>
     ecc:	ldr	x0, [sp, #208]
     ed0:	tbnz	w7, #1, 143c <gconv@@Base+0xb5c>
     ed4:	mov	w15, #0x6                   	// #6
     ed8:	b	c68 <gconv@@Base+0x388>
     edc:	mov	w0, #0x8864                	// #34916
     ee0:	b	c28 <gconv@@Base+0x348>
     ee4:	mov	w15, #0x7                   	// #7
     ee8:	ldr	x0, [sp, #208]
     eec:	b	c68 <gconv@@Base+0x388>
     ef0:	mov	w7, w15
     ef4:	cmp	w15, #0x5
     ef8:	b.ne	ce4 <gconv@@Base+0x404>  // b.any
     efc:	b	ce8 <gconv@@Base+0x408>
     f00:	ldr	x0, [sp, #160]
     f04:	add	x6, x6, x6, lsl #1
     f08:	adrp	x4, 2000 <gconv@@Base+0x1720>
     f0c:	add	x4, x4, #0x450
     f10:	add	x6, x0, x6, lsl #2
     f14:	ldr	w0, [x6, #8]
     f18:	sub	w0, w0, w1
     f1c:	add	w0, w0, w2
     f20:	lsl	x0, x0, #1
     f24:	add	x1, x0, x4
     f28:	ldrb	w5, [x0, x4]
     f2c:	cbz	w5, eb0 <gconv@@Base+0x5d0>
     f30:	and	w2, w2, #0xffffffdf
     f34:	ldrb	w6, [x1, #1]
     f38:	cmp	w2, #0xca
     f3c:	b.eq	1554 <gconv@@Base+0xc74>  // b.none
     f40:	add	x0, x19, #0x1
     f44:	cbz	w6, f50 <gconv@@Base+0x670>
     f48:	cmp	x28, x0
     f4c:	b.ls	e38 <gconv@@Base+0x558>  // b.plast
     f50:	str	x0, [sp, #216]
     f54:	strb	w5, [x19]
     f58:	ldrb	w0, [x1, #1]
     f5c:	cbz	w0, e1c <gconv@@Base+0x53c>
     f60:	ldr	x1, [sp, #216]
     f64:	add	x2, x1, #0x1
     f68:	str	x2, [sp, #216]
     f6c:	strb	w0, [x1]
     f70:	b	e1c <gconv@@Base+0x53c>
     f74:	mov	w0, #0x88a3                	// #34979
     f78:	b	c28 <gconv@@Base+0x348>
     f7c:	mov	w1, #0x30c                 	// #780
     f80:	mov	w3, #0xca                  	// #202
     f84:	mov	x0, x19
     f88:	add	x2, x2, #0x2
     f8c:	str	w3, [x0], #8
     f90:	cmp	x28, x0
     f94:	b.cc	1094 <gconv@@Base+0x7b4>  // b.lo, b.ul, b.last
     f98:	str	w1, [x19, #4]
     f9c:	mov	x19, x0
     fa0:	b	e58 <gconv@@Base+0x578>
     fa4:	ldr	w0, [sp, #120]
     fa8:	str	x26, [x27]
     fac:	str	w0, [x20]
     fb0:	ldr	x0, [sp, #136]
     fb4:	ldr	x0, [x0, #96]
     fb8:	cbz	x0, 1288 <gconv@@Base+0x9a8>
     fbc:	stp	x26, x21, [sp, #208]
     fc0:	cmp	x8, x26
     fc4:	ldr	w19, [x25, #16]
     fc8:	b.eq	1bc0 <gconv@@Base+0x12e0>  // b.none
     fcc:	mov	x0, x21
     fd0:	add	x3, sp, #0xd0
     fd4:	mov	x16, #0x4                   	// #4
     fd8:	add	x9, x26, #0x4
     fdc:	cmp	x8, x9
     fe0:	b.cc	16a0 <gconv@@Base+0xdc0>  // b.lo, b.ul, b.last
     fe4:	cmp	x15, x0
     fe8:	b.ls	1830 <gconv@@Base+0xf50>  // b.plast
     fec:	ldr	w5, [x20]
     ff0:	ldr	w2, [x26]
     ff4:	cmp	wzr, w5, asr #3
     ff8:	asr	w5, w5, #3
     ffc:	b.eq	1350 <gconv@@Base+0xa70>  // b.none
    1000:	cmp	w2, #0x304
    1004:	mov	w1, #0x8866                	// #34918
    1008:	cset	w6, eq  // eq = none
    100c:	cmp	w1, w5, uxth
    1010:	cset	w4, eq  // eq = none
    1014:	cmp	w6, #0x0
    1018:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    101c:	and	w9, w5, #0xffff
    1020:	add	x1, x0, #0x1
    1024:	b.ne	1468 <gconv@@Base+0xb88>  // b.any
    1028:	cmp	w2, #0x30c
    102c:	cset	w2, eq  // eq = none
    1030:	cmp	w4, #0x0
    1034:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    1038:	b.ne	1698 <gconv@@Base+0xdb8>  // b.any
    103c:	mov	w4, #0x88a7                	// #34983
    1040:	cmp	w9, w4
    1044:	cset	w4, eq  // eq = none
    1048:	cmp	w6, #0x0
    104c:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    1050:	b.ne	1748 <gconv@@Base+0xe68>  // b.any
    1054:	cmp	w2, #0x0
    1058:	mov	w2, #0x88a5                	// #34981
    105c:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    1060:	b.ne	146c <gconv@@Base+0xb8c>  // b.any
    1064:	cmp	x15, x1
    1068:	b.ls	1920 <gconv@@Base+0x1040>  // b.plast
    106c:	str	x1, [sp, #216]
    1070:	lsr	w9, w9, #8
    1074:	strb	w9, [x0]
    1078:	ldr	x0, [sp, #216]
    107c:	add	x1, x0, #0x1
    1080:	str	x1, [sp, #216]
    1084:	strb	w5, [x0]
    1088:	ldp	x26, x0, [sp, #208]
    108c:	str	wzr, [x20]
    1090:	b	1370 <gconv@@Base+0xa90>
    1094:	lsl	w1, w1, #3
    1098:	str	w1, [x20]
    109c:	mov	x19, x4
    10a0:	mov	w15, #0x5                   	// #5
    10a4:	str	x2, [x27]
    10a8:	b	dc0 <gconv@@Base+0x4e0>
    10ac:	ldr	w0, [x5, w1, sxtw #2]
    10b0:	cbz	w0, d8c <gconv@@Base+0x4ac>
    10b4:	add	x2, x2, #0x2
    10b8:	b	e50 <gconv@@Base+0x570>
    10bc:	mov	w1, #0x304                 	// #772
    10c0:	mov	w3, #0xca                  	// #202
    10c4:	b	f84 <gconv@@Base+0x6a4>
    10c8:	mov	x21, x25
    10cc:	mov	x12, x27
    10d0:	ldr	x0, [x23]
    10d4:	mov	w25, w15
    10d8:	ldr	x1, [sp, #192]
    10dc:	mov	x20, x8
    10e0:	str	x19, [x21]
    10e4:	add	x0, x0, x1
    10e8:	str	x0, [x23]
    10ec:	cmp	w24, #0x0
    10f0:	ccmp	w25, #0x7, #0x0, ne  // ne = any
    10f4:	b.ne	dd0 <gconv@@Base+0x4f0>  // b.any
    10f8:	ldr	x3, [x12]
    10fc:	sub	x0, x20, x3
    1100:	cmp	x0, #0x3
    1104:	b.gt	1ea8 <gconv@@Base+0x15c8>
    1108:	ldr	x4, [x21, #32]
    110c:	cmp	x3, x20
    1110:	mov	x0, x3
    1114:	add	x1, x4, #0x4
    1118:	b.cs	1da8 <gconv@@Base+0x14c8>  // b.hs, b.nlast
    111c:	add	x0, x0, #0x1
    1120:	str	x0, [x12]
    1124:	cmp	x0, x20
    1128:	ldurb	w2, [x0, #-1]
    112c:	strb	w2, [x1], #1
    1130:	b.ne	111c <gconv@@Base+0x83c>  // b.any
    1134:	sub	w0, w0, w3
    1138:	ldr	w1, [x4]
    113c:	and	w1, w1, #0xfffffff8
    1140:	orr	w0, w1, w0
    1144:	str	w0, [x4]
    1148:	b	dd0 <gconv@@Base+0x4f0>
    114c:	mov	w7, w15
    1150:	b	ce4 <gconv@@Base+0x404>
    1154:	mov	w15, #0x5                   	// #5
    1158:	str	x2, [x27]
    115c:	b	dc0 <gconv@@Base+0x4e0>
    1160:	cmp	x28, x1
    1164:	b.ls	e38 <gconv@@Base+0x558>  // b.plast
    1168:	str	x1, [sp, #216]
    116c:	lsr	w6, w6, #8
    1170:	strb	w6, [x19]
    1174:	ldr	x0, [sp, #216]
    1178:	add	x1, x0, #0x1
    117c:	str	x1, [sp, #216]
    1180:	strb	w5, [x0]
    1184:	ldp	x0, x19, [sp, #208]
    1188:	str	wzr, [x20]
    118c:	b	c5c <gconv@@Base+0x37c>
    1190:	mov	x0, x9
    1194:	str	x9, [sp, #208]
    1198:	b	c5c <gconv@@Base+0x37c>
    119c:	ldr	x0, [x1]
    11a0:	mov	x2, x9
    11a4:	mov	w15, #0x6                   	// #6
    11a8:	add	x0, x0, #0x1
    11ac:	str	x0, [x1]
    11b0:	b	e60 <gconv@@Base+0x580>
    11b4:	cmp	w1, #0x4
    11b8:	b.hi	1ec8 <gconv@@Base+0x15e8>  // b.pmore
    11bc:	add	x6, x11, #0x4
    11c0:	cbz	w1, 1760 <gconv@@Base+0xe80>
    11c4:	ldrb	w3, [x28, #4]
    11c8:	tst	w18, #0x6
    11cc:	strb	w3, [sp, #224]
    11d0:	mov	x3, #0x1                   	// #1
    11d4:	b.eq	11e4 <gconv@@Base+0x904>  // b.none
    11d8:	ldrb	w4, [x28, #5]
    11dc:	mov	x3, #0x2                   	// #2
    11e0:	strb	w4, [sp, #225]
    11e4:	cmp	x26, x6
    11e8:	b.cc	1600 <gconv@@Base+0xd20>  // b.lo, b.ul, b.last
    11ec:	add	x7, sp, #0xe0
    11f0:	ldrb	w4, [x2]
    11f4:	add	x5, x3, #0x1
    11f8:	strb	w4, [x7, x3]
    11fc:	cmp	wzr, w18, asr #3
    1200:	asr	w3, w18, #3
    1204:	b.ne	1c54 <gconv@@Base+0x1374>  // b.any
    1208:	ldrb	w3, [sp, #224]
    120c:	sub	w0, w3, #0x81
    1210:	cmp	w0, #0x7d
    1214:	b.hi	1900 <gconv@@Base+0x1020>  // b.pmore
    1218:	add	x4, x7, x5
    121c:	add	x0, x7, #0x1
    1220:	cmp	x4, x0
    1224:	b.ls	1bd8 <gconv@@Base+0x12f8>  // b.plast
    1228:	ldrb	w4, [sp, #225]
    122c:	mov	w7, #0xffff98eb            	// #-26389
    1230:	mov	w0, #0xc3                  	// #195
    1234:	sub	w5, w4, #0x40
    1238:	add	w4, w4, w7
    123c:	and	w5, w5, #0xff
    1240:	cmp	w5, #0xbe
    1244:	mov	w5, #0x86                  	// #134
    1248:	madd	w0, w3, w0, w4
    124c:	ccmp	w3, w5, #0x0, ls  // ls = plast
    1250:	b.hi	1ab4 <gconv@@Base+0x11d4>  // b.pmore
    1254:	cmp	w0, #0xe5
    1258:	b.eq	1b70 <gconv@@Base+0x1290>  // b.none
    125c:	cmp	w0, #0xe7
    1260:	b.eq	1b9c <gconv@@Base+0x12bc>  // b.none
    1264:	cmp	w0, #0x126
    1268:	b.eq	1c24 <gconv@@Base+0x1344>  // b.none
    126c:	cmp	w0, #0x128
    1270:	b.eq	1dd0 <gconv@@Base+0x14f0>  // b.none
    1274:	ldr	x0, [sp, #168]
    1278:	cbz	x0, 1280 <gconv@@Base+0x9a0>
    127c:	tbnz	w19, #1, 17bc <gconv@@Base+0xedc>
    1280:	mov	w25, #0x6                   	// #6
    1284:	b	dd0 <gconv@@Base+0x4f0>
    1288:	ldr	w3, [x25, #16]
    128c:	cmp	x8, x26
    1290:	b.eq	1bc0 <gconv@@Base+0x12e0>  // b.none
    1294:	add	x0, x21, #0x4
    1298:	mov	x2, x21
    129c:	cmp	x15, x0
    12a0:	mov	x16, #0x4                   	// #4
    12a4:	b.cc	1b60 <gconv@@Base+0x1280>  // b.lo, b.ul, b.last
    12a8:	ldr	w1, [sp, #120]
    12ac:	adrp	x4, 21000 <gconv@@Base+0x20720>
    12b0:	ldr	x11, [sp, #168]
    12b4:	and	w3, w3, #0x2
    12b8:	add	x4, x4, #0x8d8
    12bc:	mov	w17, #0xffff98eb            	// #-26389
    12c0:	mov	w6, #0xc3                  	// #195
    12c4:	mov	w5, #0x86                  	// #134
    12c8:	cmp	wzr, w1, asr #3
    12cc:	asr	w1, w1, #3
    12d0:	b.ne	1510 <gconv@@Base+0xc30>  // b.any
    12d4:	ldrb	w1, [x26]
    12d8:	sub	w9, w1, #0x81
    12dc:	cmp	w9, #0x7d
    12e0:	b.hi	1504 <gconv@@Base+0xc24>  // b.pmore
    12e4:	add	x12, x26, #0x1
    12e8:	cmp	x8, x12
    12ec:	b.ls	1844 <gconv@@Base+0xf64>  // b.plast
    12f0:	ldrb	w9, [x26, #1]
    12f4:	sub	w10, w9, #0x40
    12f8:	add	w9, w9, w17
    12fc:	and	w10, w10, #0xff
    1300:	cmp	w10, #0xbe
    1304:	madd	w9, w1, w6, w9
    1308:	ccmp	w1, w5, #0x0, ls  // ls = plast
    130c:	b.hi	1750 <gconv@@Base+0xe70>  // b.pmore
    1310:	cmp	w9, #0xe5
    1314:	b.eq	1794 <gconv@@Base+0xeb4>  // b.none
    1318:	cmp	w9, #0xe7
    131c:	b.eq	19e4 <gconv@@Base+0x1104>  // b.none
    1320:	cmp	w9, #0x126
    1324:	b.eq	1a64 <gconv@@Base+0x1184>  // b.none
    1328:	cmp	w9, #0x128
    132c:	b.eq	1b54 <gconv@@Base+0x1274>  // b.none
    1330:	cbz	x11, 1a50 <gconv@@Base+0x1170>
    1334:	cbz	w3, 1a50 <gconv@@Base+0x1170>
    1338:	ldr	x0, [x11]
    133c:	mov	x26, x12
    1340:	mov	x16, #0x6                   	// #6
    1344:	add	x0, x0, #0x1
    1348:	str	x0, [x11]
    134c:	b	1520 <gconv@@Base+0xc40>
    1350:	cmp	w2, #0x80
    1354:	b.hi	1570 <gconv@@Base+0xc90>  // b.pmore
    1358:	add	x1, x0, #0x1
    135c:	str	x1, [sp, #216]
    1360:	strb	w2, [x0]
    1364:	ldp	x26, x0, [sp, #208]
    1368:	add	x26, x26, #0x4
    136c:	str	x26, [sp, #208]
    1370:	cmp	x8, x26
    1374:	b.ne	fd8 <gconv@@Base+0x6f8>  // b.any
    1378:	ldr	x15, [sp, #200]
    137c:	str	x8, [x27]
    1380:	cmp	x15, x0
    1384:	b.ne	15e0 <gconv@@Base+0xd00>  // b.any
    1388:	cmp	x16, #0x5
    138c:	b.ne	16b0 <gconv@@Base+0xdd0>  // b.any
    1390:	cmp	x21, x0
    1394:	b.ne	ce4 <gconv@@Base+0x404>  // b.any
    1398:	ldr	w0, [x25, #20]
    139c:	sub	w0, w0, #0x1
    13a0:	str	w0, [x25, #20]
    13a4:	b	ce4 <gconv@@Base+0x404>
    13a8:	mov	w1, #0x304                 	// #772
    13ac:	mov	w3, #0xea                  	// #234
    13b0:	b	f84 <gconv@@Base+0x6a4>
    13b4:	mov	w15, #0x7                   	// #7
    13b8:	str	x2, [x27]
    13bc:	b	dc0 <gconv@@Base+0x4e0>
    13c0:	ldr	x1, [sp, #168]
    13c4:	cbz	x1, db8 <gconv@@Base+0x4d8>
    13c8:	cbz	w7, db8 <gconv@@Base+0x4d8>
    13cc:	ldr	x0, [x1]
    13d0:	add	x2, x2, #0x1
    13d4:	mov	w15, #0x6                   	// #6
    13d8:	add	x0, x0, #0x1
    13dc:	str	x0, [x1]
    13e0:	b	e58 <gconv@@Base+0x578>
    13e4:	ldp	x6, x5, [sp, #168]
    13e8:	mov	x4, x8
    13ec:	ldr	x2, [x27]
    13f0:	mov	x1, x25
    13f4:	ldr	x0, [sp, #136]
    13f8:	stp	x3, x8, [sp, #104]
    13fc:	str	w7, [sp, #188]
    1400:	bl	700 <__gconv_transliterate@plt>
    1404:	mov	w15, w0
    1408:	ldr	w7, [sp, #188]
    140c:	cmp	w0, #0x6
    1410:	ldp	x3, x8, [sp, #104]
    1414:	b.eq	16d0 <gconv@@Base+0xdf0>  // b.none
    1418:	cmp	w0, #0x5
    141c:	ldp	x0, x19, [sp, #208]
    1420:	b.ne	c5c <gconv@@Base+0x37c>  // b.any
    1424:	b	c68 <gconv@@Base+0x388>
    1428:	mov	x2, x26
    142c:	mov	x19, x21
    1430:	mov	w15, #0x5                   	// #5
    1434:	str	x2, [x27]
    1438:	b	dc0 <gconv@@Base+0x4e0>
    143c:	ldr	x2, [sp, #168]
    1440:	add	x0, x0, #0x4
    1444:	mov	w15, #0x6                   	// #6
    1448:	str	x0, [sp, #208]
    144c:	ldr	x1, [x2]
    1450:	add	x1, x1, #0x1
    1454:	str	x1, [x2]
    1458:	b	c5c <gconv@@Base+0x37c>
    145c:	mov	w1, #0x30c                 	// #780
    1460:	mov	w3, #0xea                  	// #234
    1464:	b	f84 <gconv@@Base+0x6a4>
    1468:	mov	w2, #0x8862                	// #34914
    146c:	cmp	x15, x1
    1470:	b.ls	1920 <gconv@@Base+0x1040>  // b.plast
    1474:	str	x1, [sp, #216]
    1478:	mov	w1, #0xffffff88            	// #-120
    147c:	strb	w1, [x0]
    1480:	ldr	x0, [sp, #216]
    1484:	add	x1, x0, #0x1
    1488:	str	x1, [sp, #216]
    148c:	strb	w2, [x0]
    1490:	ldp	x26, x0, [sp, #208]
    1494:	str	wzr, [x20]
    1498:	add	x26, x26, #0x4
    149c:	str	x26, [sp, #208]
    14a0:	b	1370 <gconv@@Base+0xa90>
    14a4:	cbnz	x14, 1f1c <gconv@@Base+0x163c>
    14a8:	cmp	w6, #0x1
    14ac:	ldr	x19, [x21, #32]
    14b0:	b.ne	17fc <gconv@@Base+0xf1c>  // b.any
    14b4:	ldr	w26, [x19]
    14b8:	ldr	x2, [x21]
    14bc:	cbz	w26, 1710 <gconv@@Base+0xe30>
    14c0:	ldr	x1, [x15, #96]
    14c4:	ldr	x0, [x21, #8]
    14c8:	cbz	x1, 1a70 <gconv@@Base+0x1190>
    14cc:	add	x20, x2, #0x2
    14d0:	cmp	x0, x20
    14d4:	b.cc	1600 <gconv@@Base+0xd20>  // b.lo, b.ul, b.last
    14d8:	asr	w0, w26, #3
    14dc:	rev16	w0, w0
    14e0:	strh	w0, [x2]
    14e4:	ldr	x0, [x21, #32]
    14e8:	str	wzr, [x0]
    14ec:	ldr	w0, [x21, #16]
    14f0:	tbz	w0, #0, 19f8 <gconv@@Base+0x1118>
    14f4:	mov	x2, x20
    14f8:	mov	w25, #0x0                   	// #0
    14fc:	str	x2, [x21]
    1500:	b	dd0 <gconv@@Base+0x4f0>
    1504:	cmp	w1, #0xff
    1508:	b.eq	1a8c <gconv@@Base+0x11ac>  // b.none
    150c:	add	x26, x26, #0x1
    1510:	str	w1, [x2]
    1514:	mov	x2, x0
    1518:	cmp	x8, x26
    151c:	b.eq	1848 <gconv@@Base+0xf68>  // b.none
    1520:	add	x0, x2, #0x4
    1524:	cmp	x15, x0
    1528:	b.cc	19f0 <gconv@@Base+0x1110>  // b.lo, b.ul, b.last
    152c:	ldr	w1, [x20]
    1530:	b	12c8 <gconv@@Base+0x9e8>
    1534:	mov	x21, x25
    1538:	mov	x12, x27
    153c:	mov	x20, x8
    1540:	mov	w25, w7
    1544:	b	10ec <gconv@@Base+0x80c>
    1548:	mov	x0, x8
    154c:	mov	w15, #0x4                   	// #4
    1550:	b	c68 <gconv@@Base+0x388>
    1554:	ldrh	w1, [x0, x4]
    1558:	mov	x0, x9
    155c:	rev16	w1, w1
    1560:	ubfiz	w1, w1, #3, #16
    1564:	str	w1, [x20]
    1568:	str	x9, [sp, #208]
    156c:	b	c5c <gconv@@Base+0x37c>
    1570:	ldr	x1, [sp, #160]
    1574:	mov	w4, #0xa2                  	// #162
    1578:	add	x5, x1, #0x4
    157c:	mov	x1, #0x0                   	// #0
    1580:	b	15a4 <gconv@@Base+0xcc4>
    1584:	ldr	w6, [x5]
    1588:	cmp	w2, w6
    158c:	b.ls	1860 <gconv@@Base+0xf80>  // b.plast
    1590:	add	x1, x1, #0x1
    1594:	add	x5, x5, #0xc
    1598:	cmp	x1, #0x45
    159c:	b.eq	15ac <gconv@@Base+0xccc>  // b.none
    15a0:	ldur	w4, [x5, #-4]
    15a4:	cmp	w2, w4
    15a8:	b.cs	1584 <gconv@@Base+0xca4>  // b.hs, b.nlast
    15ac:	mov	w1, #0x1c00                	// #7168
    15b0:	cmp	w1, w2, lsr #7
    15b4:	b.eq	1b48 <gconv@@Base+0x1268>  // b.none
    15b8:	ldr	x1, [sp, #168]
    15bc:	cbz	x1, 16a0 <gconv@@Base+0xdc0>
    15c0:	ldr	w1, [x25, #16]
    15c4:	tbnz	w1, #3, 1acc <gconv@@Base+0x11ec>
    15c8:	ldr	x9, [sp, #208]
    15cc:	tbnz	w19, #1, 1b28 <gconv@@Base+0x1248>
    15d0:	ldr	x1, [sp, #200]
    15d4:	str	x9, [x27]
    15d8:	cmp	x0, x1
    15dc:	b.eq	16b0 <gconv@@Base+0xdd0>  // b.none
    15e0:	adrp	x3, 2000 <gconv@@Base+0x1720>
    15e4:	adrp	x1, 1000 <gconv@@Base+0x720>
    15e8:	adrp	x0, 2000 <gconv@@Base+0x1720>
    15ec:	add	x3, x3, #0x108
    15f0:	add	x1, x1, #0xf70
    15f4:	add	x0, x0, #0x88
    15f8:	mov	w2, #0x2ea                 	// #746
    15fc:	bl	750 <__assert_fail@plt>
    1600:	mov	w25, #0x5                   	// #5
    1604:	b	dd0 <gconv@@Base+0x4f0>
    1608:	cmp	w3, #0x80
    160c:	b.ls	16e0 <gconv@@Base+0xe00>  // b.plast
    1610:	adrp	x6, 2000 <gconv@@Base+0x1720>
    1614:	add	x0, x6, #0x110
    1618:	add	x0, x0, #0x4
    161c:	mov	w4, #0xa2                  	// #162
    1620:	mov	x1, #0x0                   	// #0
    1624:	b	1648 <gconv@@Base+0xd68>
    1628:	ldr	w5, [x0]
    162c:	cmp	w3, w5
    1630:	b.ls	1970 <gconv@@Base+0x1090>  // b.plast
    1634:	add	x1, x1, #0x1
    1638:	add	x0, x0, #0xc
    163c:	cmp	x1, #0x45
    1640:	b.eq	1650 <gconv@@Base+0xd70>  // b.none
    1644:	ldur	w4, [x0, #-4]
    1648:	cmp	w3, w4
    164c:	b.cs	1628 <gconv@@Base+0xd48>  // b.hs, b.nlast
    1650:	mov	w0, #0x1c00                	// #7168
    1654:	cmp	w0, w3, lsr #7
    1658:	b.eq	1d90 <gconv@@Base+0x14b0>  // b.none
    165c:	ldr	x0, [sp, #168]
    1660:	cbz	x0, 1280 <gconv@@Base+0x9a0>
    1664:	tbnz	w19, #3, 1cc0 <gconv@@Base+0x13e0>
    1668:	tbz	w19, #1, 1280 <gconv@@Base+0x9a0>
    166c:	mov	x0, x7
    1670:	ldr	x2, [sp, #168]
    1674:	add	x0, x0, #0x4
    1678:	str	x0, [sp, #208]
    167c:	ldr	x1, [x2]
    1680:	add	x1, x1, #0x1
    1684:	str	x1, [x2]
    1688:	cmp	x0, x7
    168c:	b.ne	1700 <gconv@@Base+0xe20>  // b.any
    1690:	mov	w25, #0x6                   	// #6
    1694:	b	dd0 <gconv@@Base+0x4f0>
    1698:	mov	w2, #0x8864                	// #34916
    169c:	b	146c <gconv@@Base+0xb8c>
    16a0:	ldp	x1, x2, [sp, #200]
    16a4:	str	x2, [x27]
    16a8:	cmp	x0, x1
    16ac:	b.ne	15e0 <gconv@@Base+0xd00>  // b.any
    16b0:	adrp	x3, 2000 <gconv@@Base+0x1720>
    16b4:	adrp	x1, 1000 <gconv@@Base+0x720>
    16b8:	adrp	x0, 2000 <gconv@@Base+0x1720>
    16bc:	add	x3, x3, #0x108
    16c0:	add	x1, x1, #0xf70
    16c4:	add	x0, x0, #0xa0
    16c8:	mov	w2, #0x2eb                 	// #747
    16cc:	bl	750 <__assert_fail@plt>
    16d0:	ldr	x19, [sp, #216]
    16d4:	b	ecc <gconv@@Base+0x5ec>
    16d8:	mov	w2, #0x8862                	// #34914
    16dc:	b	ab4 <gconv@@Base+0x1d4>
    16e0:	add	x0, x11, #0x1
    16e4:	str	x0, [sp, #216]
    16e8:	strb	w3, [x11]
    16ec:	ldr	x0, [sp, #208]
    16f0:	add	x0, x0, #0x4
    16f4:	str	x0, [sp, #208]
    16f8:	cmp	x0, x7
    16fc:	b.eq	b30 <gconv@@Base+0x250>  // b.none
    1700:	ldr	w6, [x28]
    1704:	sub	x7, x0, x7
    1708:	and	x1, x6, #0x7
    170c:	b	af4 <gconv@@Base+0x214>
    1710:	cbnz	w1, 14f8 <gconv@@Base+0xc18>
    1714:	mov	x0, x22
    1718:	bl	740 <_dl_mcount_wrapper_check@plt>
    171c:	ldr	x1, [sp, #144]
    1720:	mov	w7, w24
    1724:	mov	x5, x23
    1728:	mov	x0, x27
    172c:	mov	w6, #0x1                   	// #1
    1730:	mov	x4, #0x0                   	// #0
    1734:	mov	x3, #0x0                   	// #0
    1738:	mov	x2, #0x0                   	// #0
    173c:	blr	x22
    1740:	mov	w25, w0
    1744:	b	dd0 <gconv@@Base+0x4f0>
    1748:	mov	w2, #0x88a3                	// #34979
    174c:	b	146c <gconv@@Base+0xb8c>
    1750:	ldr	w1, [x4, w9, sxtw #2]
    1754:	cbz	w1, 1310 <gconv@@Base+0xa30>
    1758:	add	x26, x26, #0x2
    175c:	b	1510 <gconv@@Base+0xc30>
    1760:	cmp	x26, x6
    1764:	b.cc	1600 <gconv@@Base+0xd20>  // b.lo, b.ul, b.last
    1768:	mov	x4, x2
    176c:	add	x7, sp, #0xe0
    1770:	mov	x3, #0x0                   	// #0
    1774:	ldrb	w8, [x4], #1
    1778:	add	x5, x3, #0x1
    177c:	strb	w8, [x7, x3]
    1780:	cmp	x5, #0x1
    1784:	ccmp	x20, x4, #0x0, ls  // ls = plast
    1788:	mov	x3, #0x1                   	// #1
    178c:	b.hi	1774 <gconv@@Base+0xe94>  // b.pmore
    1790:	b	11fc <gconv@@Base+0x91c>
    1794:	mov	w18, #0x304                 	// #772
    1798:	mov	w9, #0xca                  	// #202
    179c:	mov	x1, x2
    17a0:	add	x26, x26, #0x2
    17a4:	str	w9, [x1], #8
    17a8:	cmp	x15, x1
    17ac:	b.cc	18e8 <gconv@@Base+0x1008>  // b.lo, b.ul, b.last
    17b0:	str	w18, [x2, #4]
    17b4:	mov	x2, x1
    17b8:	b	1518 <gconv@@Base+0xc38>
    17bc:	mov	x4, x0
    17c0:	mov	w1, w1
    17c4:	mov	x0, #0x1                   	// #1
    17c8:	ldr	x3, [x4]
    17cc:	add	x3, x3, x0
    17d0:	str	x3, [x4]
    17d4:	cmp	x0, x1
    17d8:	b.le	1e5c <gconv@@Base+0x157c>
    17dc:	sub	x0, x0, x1
    17e0:	ldr	w7, [x21, #16]
    17e4:	add	x9, x2, x0
    17e8:	str	x9, [x12]
    17ec:	and	w18, w18, #0xfffffff8
    17f0:	ldr	x0, [x15, #96]
    17f4:	str	w18, [x28]
    17f8:	b	b44 <gconv@@Base+0x264>
    17fc:	str	xzr, [x19]
    1800:	mov	w25, #0x0                   	// #0
    1804:	ldr	w0, [x21, #16]
    1808:	tbnz	w0, #0, dd0 <gconv@@Base+0x4f0>
    180c:	mov	x0, x22
    1810:	str	w6, [sp, #104]
    1814:	bl	740 <_dl_mcount_wrapper_check@plt>
    1818:	ldr	w6, [sp, #104]
    181c:	mov	w7, w24
    1820:	mov	x5, x23
    1824:	mov	x0, x27
    1828:	ldr	x1, [sp, #144]
    182c:	b	1730 <gconv@@Base+0xe50>
    1830:	ldp	x1, x2, [sp, #200]
    1834:	str	x2, [x27]
    1838:	cmp	x1, x0
    183c:	b.eq	1390 <gconv@@Base+0xab0>  // b.none
    1840:	b	15e0 <gconv@@Base+0xd00>
    1844:	mov	x16, #0x7                   	// #7
    1848:	mov	x0, x2
    184c:	str	x26, [x27]
    1850:	b	1380 <gconv@@Base+0xaa0>
    1854:	mov	x0, #0x4                   	// #4
    1858:	mov	x8, #0x0                   	// #0
    185c:	b	9f8 <gconv@@Base+0x118>
    1860:	ldr	x6, [sp, #160]
    1864:	add	x1, x1, x1, lsl #1
    1868:	adrp	x5, 2000 <gconv@@Base+0x1720>
    186c:	add	x5, x5, #0x450
    1870:	add	x1, x6, x1, lsl #2
    1874:	ldr	w1, [x1, #8]
    1878:	sub	w1, w1, w4
    187c:	add	w1, w1, w2
    1880:	lsl	x1, x1, #1
    1884:	add	x4, x1, x5
    1888:	ldrb	w6, [x1, x5]
    188c:	cbz	w6, 15ac <gconv@@Base+0xccc>
    1890:	and	w2, w2, #0xffffffdf
    1894:	ldrb	w10, [x4, #1]
    1898:	cmp	w2, #0xca
    189c:	b.eq	1ca4 <gconv@@Base+0x13c4>  // b.none
    18a0:	add	x1, x0, #0x1
    18a4:	cbz	w10, 18b0 <gconv@@Base+0xfd0>
    18a8:	cmp	x15, x1
    18ac:	b.ls	1920 <gconv@@Base+0x1040>  // b.plast
    18b0:	str	x1, [sp, #216]
    18b4:	strb	w6, [x0]
    18b8:	ldrb	w1, [x4, #1]
    18bc:	cbz	w1, 1364 <gconv@@Base+0xa84>
    18c0:	ldr	x0, [sp, #216]
    18c4:	add	x2, x0, #0x1
    18c8:	str	x2, [sp, #216]
    18cc:	strb	w1, [x0]
    18d0:	b	1364 <gconv@@Base+0xa84>
    18d4:	mov	x2, x8
    18d8:	mov	x19, x21
    18dc:	mov	w15, #0x4                   	// #4
    18e0:	str	x2, [x27]
    18e4:	b	dc0 <gconv@@Base+0x4e0>
    18e8:	lsl	w18, w18, #3
    18ec:	str	w18, [x20]
    18f0:	str	x26, [x27]
    18f4:	cmp	x15, x0
    18f8:	b.eq	1390 <gconv@@Base+0xab0>  // b.none
    18fc:	b	15e0 <gconv@@Base+0xd00>
    1900:	cmp	w3, #0xff
    1904:	mov	x0, #0x1                   	// #1
    1908:	b.eq	1c30 <gconv@@Base+0x1350>  // b.none
    190c:	str	w3, [x11]
    1910:	mov	x11, x6
    1914:	ldr	w18, [x28]
    1918:	and	x1, x18, #0x7
    191c:	b	17d4 <gconv@@Base+0xef4>
    1920:	ldp	x1, x2, [sp, #200]
    1924:	str	x2, [x27]
    1928:	cmp	x0, x1
    192c:	b.eq	1390 <gconv@@Base+0xab0>  // b.none
    1930:	b	15e0 <gconv@@Base+0xd00>
    1934:	str	x20, [x12]
    1938:	cmp	x2, x20
    193c:	b.cs	1960 <gconv@@Base+0x1080>  // b.hs, b.nlast
    1940:	add	x8, x28, x8
    1944:	add	x9, x9, #0x1
    1948:	str	x9, [sp, #208]
    194c:	cmp	x20, x9
    1950:	add	x8, x8, #0x1
    1954:	ldurb	w0, [x9, #-1]
    1958:	strb	w0, [x8, #3]
    195c:	b.ne	1944 <gconv@@Base+0x1064>  // b.any
    1960:	mov	w25, #0x7                   	// #7
    1964:	b	dd0 <gconv@@Base+0x4f0>
    1968:	mov	w2, #0x8864                	// #34916
    196c:	b	ab4 <gconv@@Base+0x1d4>
    1970:	add	x1, x1, x1, lsl #1
    1974:	add	x0, x6, #0x110
    1978:	adrp	x5, 2000 <gconv@@Base+0x1720>
    197c:	add	x5, x5, #0x450
    1980:	add	x0, x0, x1, lsl #2
    1984:	ldr	w0, [x0, #8]
    1988:	sub	w0, w0, w4
    198c:	add	w0, w0, w3
    1990:	lsl	x0, x0, #1
    1994:	add	x1, x0, x5
    1998:	ldrb	w4, [x0, x5]
    199c:	cbz	w4, 1650 <gconv@@Base+0xd70>
    19a0:	and	w3, w3, #0xffffffdf
    19a4:	ldrb	w6, [x1, #1]
    19a8:	cmp	w3, #0xca
    19ac:	b.eq	1db8 <gconv@@Base+0x14d8>  // b.none
    19b0:	add	x0, x11, #0x1
    19b4:	cbz	w6, 19c0 <gconv@@Base+0x10e0>
    19b8:	cmp	x26, x0
    19bc:	b.ls	1600 <gconv@@Base+0xd20>  // b.plast
    19c0:	str	x0, [sp, #216]
    19c4:	strb	w4, [x11]
    19c8:	ldrb	w1, [x1, #1]
    19cc:	cbz	w1, 16ec <gconv@@Base+0xe0c>
    19d0:	ldr	x0, [sp, #216]
    19d4:	add	x2, x0, #0x1
    19d8:	str	x2, [sp, #216]
    19dc:	strb	w1, [x0]
    19e0:	b	16ec <gconv@@Base+0xe0c>
    19e4:	mov	w18, #0x30c                 	// #780
    19e8:	mov	w9, #0xca                  	// #202
    19ec:	b	179c <gconv@@Base+0xebc>
    19f0:	mov	x16, #0x5                   	// #5
    19f4:	b	1848 <gconv@@Base+0xf68>
    19f8:	cmp	x20, x2
    19fc:	b.ls	1714 <gconv@@Base+0xe34>  // b.plast
    1a00:	mov	x0, x22
    1a04:	str	x2, [sp, #216]
    1a08:	bl	740 <_dl_mcount_wrapper_check@plt>
    1a0c:	ldr	x1, [sp, #144]
    1a10:	mov	w7, w24
    1a14:	mov	x5, x23
    1a18:	mov	x3, x20
    1a1c:	add	x2, sp, #0xd8
    1a20:	mov	x0, x27
    1a24:	mov	w6, #0x0                   	// #0
    1a28:	mov	x4, #0x0                   	// #0
    1a2c:	blr	x22
    1a30:	mov	w25, w0
    1a34:	cmp	w0, #0x4
    1a38:	b.eq	1714 <gconv@@Base+0xe34>  // b.none
    1a3c:	ldr	x0, [sp, #216]
    1a40:	cmp	x0, x20
    1a44:	b.ne	1e7c <gconv@@Base+0x159c>  // b.any
    1a48:	cbnz	w25, dd0 <gconv@@Base+0x4f0>
    1a4c:	b	1714 <gconv@@Base+0xe34>
    1a50:	mov	x16, #0x6                   	// #6
    1a54:	b	1848 <gconv@@Base+0xf68>
    1a58:	mov	w15, #0x6                   	// #6
    1a5c:	ldr	x0, [sp, #208]
    1a60:	b	c68 <gconv@@Base+0x388>
    1a64:	mov	w18, #0x304                 	// #772
    1a68:	mov	w9, #0xea                  	// #234
    1a6c:	b	179c <gconv@@Base+0xebc>
    1a70:	add	x20, x2, #0x4
    1a74:	cmp	x20, x0
    1a78:	b.hi	1600 <gconv@@Base+0xd20>  // b.pmore
    1a7c:	asr	w0, w26, #3
    1a80:	str	w0, [x2]
    1a84:	str	wzr, [x19]
    1a88:	b	14ec <gconv@@Base+0xc0c>
    1a8c:	cbz	x11, 1a50 <gconv@@Base+0x1170>
    1a90:	cbz	w3, 1a50 <gconv@@Base+0x1170>
    1a94:	ldr	x0, [x11]
    1a98:	add	x26, x26, #0x1
    1a9c:	mov	x16, #0x6                   	// #6
    1aa0:	add	x0, x0, #0x1
    1aa4:	str	x0, [x11]
    1aa8:	b	1518 <gconv@@Base+0xc38>
    1aac:	mov	w2, #0x88a3                	// #34979
    1ab0:	b	ab4 <gconv@@Base+0x1d4>
    1ab4:	adrp	x3, 21000 <gconv@@Base+0x20720>
    1ab8:	add	x3, x3, #0x8d8
    1abc:	ldr	w3, [x3, w0, sxtw #2]
    1ac0:	cbz	w3, 1254 <gconv@@Base+0x974>
    1ac4:	mov	x0, #0x2                   	// #2
    1ac8:	b	190c <gconv@@Base+0x102c>
    1acc:	ldp	x6, x5, [sp, #168]
    1ad0:	mov	x4, x8
    1ad4:	ldr	x2, [x27]
    1ad8:	mov	x1, x25
    1adc:	ldr	x0, [sp, #136]
    1ae0:	stp	x3, x8, [sp, #104]
    1ae4:	str	x15, [sp, #120]
    1ae8:	str	w7, [sp, #188]
    1aec:	bl	700 <__gconv_transliterate@plt>
    1af0:	sxtw	x16, w0
    1af4:	ldr	w7, [sp, #188]
    1af8:	cmp	w16, #0x6
    1afc:	ldp	x3, x8, [sp, #104]
    1b00:	ldr	x15, [sp, #120]
    1b04:	b.eq	1bd0 <gconv@@Base+0x12f0>  // b.none
    1b08:	cmp	w16, #0x5
    1b0c:	ldp	x26, x0, [sp, #208]
    1b10:	b.ne	1370 <gconv@@Base+0xa90>  // b.any
    1b14:	ldr	x1, [sp, #200]
    1b18:	str	x26, [x27]
    1b1c:	cmp	x0, x1
    1b20:	b.eq	1390 <gconv@@Base+0xab0>  // b.none
    1b24:	b	15e0 <gconv@@Base+0xd00>
    1b28:	ldr	x2, [sp, #168]
    1b2c:	add	x26, x9, #0x4
    1b30:	mov	x16, #0x6                   	// #6
    1b34:	str	x26, [sp, #208]
    1b38:	ldr	x1, [x2]
    1b3c:	add	x1, x1, #0x1
    1b40:	str	x1, [x2]
    1b44:	b	1370 <gconv@@Base+0xa90>
    1b48:	mov	x26, x9
    1b4c:	str	x9, [sp, #208]
    1b50:	b	1370 <gconv@@Base+0xa90>
    1b54:	mov	w18, #0x30c                 	// #780
    1b58:	mov	w9, #0xea                  	// #234
    1b5c:	b	179c <gconv@@Base+0xebc>
    1b60:	str	x26, [x27]
    1b64:	cmp	x15, x21
    1b68:	b.eq	1398 <gconv@@Base+0xab8>  // b.none
    1b6c:	b	15e0 <gconv@@Base+0xd00>
    1b70:	mov	w18, #0x304                 	// #772
    1b74:	mov	w0, #0xca                  	// #202
    1b78:	mov	x1, x11
    1b7c:	str	w0, [x1], #8
    1b80:	cmp	x26, x1
    1b84:	b.cs	1ba8 <gconv@@Base+0x12c8>  // b.hs, b.nlast
    1b88:	lsl	w18, w18, #3
    1b8c:	mov	x11, x6
    1b90:	mov	x1, #0x0                   	// #0
    1b94:	mov	x0, #0x2                   	// #2
    1b98:	b	17dc <gconv@@Base+0xefc>
    1b9c:	mov	w18, #0x30c                 	// #780
    1ba0:	mov	w0, #0xca                  	// #202
    1ba4:	b	1b78 <gconv@@Base+0x1298>
    1ba8:	str	w18, [x11, #4]
    1bac:	mov	x0, #0x2                   	// #2
    1bb0:	mov	x11, x1
    1bb4:	ldr	w18, [x28]
    1bb8:	and	x1, x18, #0x7
    1bbc:	b	17d4 <gconv@@Base+0xef4>
    1bc0:	str	x8, [x27]
    1bc4:	cmp	x15, x21
    1bc8:	b.eq	16b0 <gconv@@Base+0xdd0>  // b.none
    1bcc:	b	15e0 <gconv@@Base+0xd00>
    1bd0:	ldr	x0, [sp, #216]
    1bd4:	b	15c8 <gconv@@Base+0xce8>
    1bd8:	add	x0, x7, #0x2
    1bdc:	cmp	x4, x0
    1be0:	b.eq	1e4c <gconv@@Base+0x156c>  // b.none
    1be4:	mov	w0, w1
    1be8:	and	w18, w18, #0xfffffff8
    1bec:	sub	x0, x5, x0
    1bf0:	add	x0, x2, x0
    1bf4:	str	x0, [x12]
    1bf8:	cmp	x5, w18, sxtw
    1bfc:	b.le	1e3c <gconv@@Base+0x155c>
    1c00:	cmp	x5, #0x4
    1c04:	b.hi	1ddc <gconv@@Base+0x14fc>  // b.pmore
    1c08:	orr	w18, w18, w5
    1c0c:	str	w18, [x28]
    1c10:	cmp	x4, x7
    1c14:	b.ls	1960 <gconv@@Base+0x1080>  // b.plast
    1c18:	mov	w25, #0x7                   	// #7
    1c1c:	strb	w3, [x28, #4]
    1c20:	b	dd0 <gconv@@Base+0x4f0>
    1c24:	mov	w18, #0x304                 	// #772
    1c28:	mov	w0, #0xea                  	// #234
    1c2c:	b	1b78 <gconv@@Base+0x1298>
    1c30:	ldr	x3, [sp, #168]
    1c34:	cbz	x3, 1280 <gconv@@Base+0x9a0>
    1c38:	tbz	w19, #1, 1280 <gconv@@Base+0x9a0>
    1c3c:	mov	x4, x3
    1c40:	mov	w1, w1
    1c44:	ldr	x3, [x3]
    1c48:	add	x3, x3, x0
    1c4c:	str	x3, [x4]
    1c50:	b	17d4 <gconv@@Base+0xef4>
    1c54:	str	w3, [x11]
    1c58:	ldr	w7, [x21, #16]
    1c5c:	ldr	w18, [x28]
    1c60:	b	b44 <gconv@@Base+0x264>
    1c64:	cmp	x26, x0
    1c68:	b.ls	1600 <gconv@@Base+0xd20>  // b.plast
    1c6c:	str	x0, [sp, #216]
    1c70:	lsr	w5, w5, #8
    1c74:	strb	w5, [x11]
    1c78:	ldr	x0, [sp, #216]
    1c7c:	add	x2, x0, #0x1
    1c80:	str	x2, [sp, #216]
    1c84:	strb	w1, [x0]
    1c88:	ldr	x0, [sp, #208]
    1c8c:	str	wzr, [x28]
    1c90:	cmp	x0, x7
    1c94:	b.eq	1ee8 <gconv@@Base+0x1608>  // b.none
    1c98:	sub	x7, x0, x7
    1c9c:	mov	x1, #0x0                   	// #0
    1ca0:	b	af4 <gconv@@Base+0x214>
    1ca4:	ldrh	w1, [x1, x5]
    1ca8:	mov	x26, x9
    1cac:	rev16	w1, w1
    1cb0:	ubfiz	w1, w1, #3, #16
    1cb4:	str	w1, [x20]
    1cb8:	str	x9, [sp, #208]
    1cbc:	b	1370 <gconv@@Base+0xa90>
    1cc0:	add	x4, x7, x8
    1cc4:	mov	x6, x0
    1cc8:	add	x5, sp, #0xd8
    1ccc:	mov	x0, x15
    1cd0:	add	x3, sp, #0xd0
    1cd4:	mov	x1, x21
    1cd8:	stp	x15, x4, [sp, #104]
    1cdc:	stp	x7, x8, [sp, #120]
    1ce0:	str	x11, [sp, #136]
    1ce4:	stp	x12, x14, [sp, #152]
    1ce8:	bl	700 <__gconv_transliterate@plt>
    1cec:	mov	w25, w0
    1cf0:	cmp	w0, #0x6
    1cf4:	ldr	x15, [sp, #104]
    1cf8:	ldr	x7, [sp, #120]
    1cfc:	ldp	x12, x14, [sp, #152]
    1d00:	ldr	x0, [sp, #208]
    1d04:	b.eq	1db0 <gconv@@Base+0x14d0>  // b.none
    1d08:	cmp	x0, x7
    1d0c:	ldr	x4, [sp, #112]
    1d10:	ldp	x8, x11, [sp, #128]
    1d14:	b.ne	1700 <gconv@@Base+0xe20>  // b.any
    1d18:	cmp	w25, #0x7
    1d1c:	b.ne	b2c <gconv@@Base+0x24c>  // b.any
    1d20:	add	x0, x7, #0x4
    1d24:	cmp	x4, x0
    1d28:	b.eq	1e1c <gconv@@Base+0x153c>  // b.none
    1d2c:	ldr	w0, [x28]
    1d30:	ldr	x1, [x12]
    1d34:	and	x2, x0, #0x7
    1d38:	sub	x2, x8, x2
    1d3c:	and	w0, w0, #0xfffffff8
    1d40:	add	x1, x1, x2
    1d44:	str	x1, [x12]
    1d48:	cmp	x8, w0, sxtw
    1d4c:	b.le	1dfc <gconv@@Base+0x151c>
    1d50:	cmp	x8, #0x4
    1d54:	b.hi	1e98 <gconv@@Base+0x15b8>  // b.pmore
    1d58:	orr	w0, w0, w8
    1d5c:	str	w0, [x28]
    1d60:	cmp	x4, x7
    1d64:	b.ls	1960 <gconv@@Base+0x1080>  // b.plast
    1d68:	add	x7, x7, #0x1
    1d6c:	add	x8, x28, #0x4
    1d70:	str	x7, [sp, #208]
    1d74:	cmp	x4, x7
    1d78:	add	x7, x7, #0x1
    1d7c:	ldurb	w0, [x7, #-2]
    1d80:	strb	w0, [x8], #1
    1d84:	b.ne	1d70 <gconv@@Base+0x1490>  // b.any
    1d88:	mov	w25, #0x7                   	// #7
    1d8c:	b	dd0 <gconv@@Base+0x4f0>
    1d90:	add	x0, x7, #0x4
    1d94:	mov	w1, w9
    1d98:	mov	w6, w9
    1d9c:	mov	x7, #0x4                   	// #4
    1da0:	str	x0, [sp, #208]
    1da4:	b	af4 <gconv@@Base+0x214>
    1da8:	mov	w0, #0x0                   	// #0
    1dac:	b	1138 <gconv@@Base+0x858>
    1db0:	tbz	w19, #1, 1688 <gconv@@Base+0xda8>
    1db4:	b	1670 <gconv@@Base+0xd90>
    1db8:	ldrh	w6, [x0, x5]
    1dbc:	mov	x7, #0x4                   	// #4
    1dc0:	mov	x1, #0x0                   	// #0
    1dc4:	rev16	w6, w6
    1dc8:	ubfiz	w6, w6, #3, #16
    1dcc:	b	b04 <gconv@@Base+0x224>
    1dd0:	mov	w18, #0x30c                 	// #780
    1dd4:	mov	w0, #0xea                  	// #234
    1dd8:	b	1b78 <gconv@@Base+0x1298>
    1ddc:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1de0:	add	x3, x3, #0xf0
    1de4:	adrp	x1, 1000 <gconv@@Base+0x720>
    1de8:	adrp	x0, 2000 <gconv@@Base+0x1720>
    1dec:	add	x1, x1, #0xfa0
    1df0:	add	x0, x0, #0x58
    1df4:	mov	w2, #0x1e6                 	// #486
    1df8:	bl	750 <__assert_fail@plt>
    1dfc:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e00:	add	x3, x3, #0xd8
    1e04:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e08:	adrp	x0, 2000 <gconv@@Base+0x1720>
    1e0c:	add	x1, x1, #0xfa0
    1e10:	add	x0, x0, #0x30
    1e14:	mov	w2, #0x1e5                 	// #485
    1e18:	bl	750 <__assert_fail@plt>
    1e1c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e20:	add	x3, x3, #0xd8
    1e24:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e28:	adrp	x0, 2000 <gconv@@Base+0x1720>
    1e2c:	add	x1, x1, #0xfa0
    1e30:	add	x0, x0, #0x8
    1e34:	mov	w2, #0x1db                 	// #475
    1e38:	bl	750 <__assert_fail@plt>
    1e3c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e40:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e44:	add	x3, x3, #0xf0
    1e48:	b	1e08 <gconv@@Base+0x1528>
    1e4c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e50:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e54:	add	x3, x3, #0xf0
    1e58:	b	1e28 <gconv@@Base+0x1548>
    1e5c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e60:	add	x3, x3, #0xf0
    1e64:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e68:	adrp	x0, 1000 <gconv@@Base+0x720>
    1e6c:	add	x1, x1, #0xfa0
    1e70:	add	x0, x0, #0xfe0
    1e74:	mov	w2, #0x1c9                 	// #457
    1e78:	bl	750 <__assert_fail@plt>
    1e7c:	str	w26, [x19]
    1e80:	cbnz	w25, dd0 <gconv@@Base+0x4f0>
    1e84:	b	1714 <gconv@@Base+0xe34>
    1e88:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e8c:	adrp	x1, 1000 <gconv@@Base+0x720>
    1e90:	add	x3, x3, #0xd8
    1e94:	b	1e68 <gconv@@Base+0x1588>
    1e98:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1e9c:	adrp	x1, 1000 <gconv@@Base+0x720>
    1ea0:	add	x3, x3, #0xd8
    1ea4:	b	1de8 <gconv@@Base+0x1508>
    1ea8:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1eac:	adrp	x1, 1000 <gconv@@Base+0x720>
    1eb0:	adrp	x0, 2000 <gconv@@Base+0x1720>
    1eb4:	add	x3, x3, #0x108
    1eb8:	add	x1, x1, #0xf70
    1ebc:	add	x0, x0, #0xc0
    1ec0:	mov	w2, #0x31e                 	// #798
    1ec4:	bl	750 <__assert_fail@plt>
    1ec8:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1ecc:	add	x3, x3, #0xf0
    1ed0:	adrp	x1, 1000 <gconv@@Base+0x720>
    1ed4:	adrp	x0, 1000 <gconv@@Base+0x720>
    1ed8:	add	x1, x1, #0xfa0
    1edc:	add	x0, x0, #0xfb0
    1ee0:	mov	w2, #0x18b                 	// #395
    1ee4:	bl	750 <__assert_fail@plt>
    1ee8:	ldr	w7, [x21, #16]
    1eec:	mov	w18, #0x0                   	// #0
    1ef0:	ldr	x9, [x12]
    1ef4:	ldr	x0, [x15, #96]
    1ef8:	b	b44 <gconv@@Base+0x264>
    1efc:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1f00:	adrp	x1, 1000 <gconv@@Base+0x720>
    1f04:	adrp	x0, 1000 <gconv@@Base+0x720>
    1f08:	add	x3, x3, #0x108
    1f0c:	add	x1, x1, #0xf70
    1f10:	add	x0, x0, #0xf88
    1f14:	mov	w2, #0x234                 	// #564
    1f18:	bl	750 <__assert_fail@plt>
    1f1c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1f20:	adrp	x1, 1000 <gconv@@Base+0x720>
    1f24:	adrp	x0, 1000 <gconv@@Base+0x720>
    1f28:	add	x3, x3, #0x108
    1f2c:	add	x1, x1, #0xf70
    1f30:	add	x0, x0, #0xf88
    1f34:	mov	w2, #0x1a4                 	// #420
    1f38:	bl	750 <__assert_fail@plt>
    1f3c:	adrp	x3, 2000 <gconv@@Base+0x1720>
    1f40:	adrp	x1, 1000 <gconv@@Base+0x720>
    1f44:	add	x3, x3, #0xd8
    1f48:	b	1ed4 <gconv@@Base+0x15f4>
    1f4c:	bl	710 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000001f50 <.fini>:
    1f50:	stp	x29, x30, [sp, #-16]!
    1f54:	mov	x29, sp
    1f58:	ldp	x29, x30, [sp], #16
    1f5c:	ret
