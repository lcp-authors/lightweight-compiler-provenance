
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ln_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a38 <_init>:
 a38:	stp	x29, x30, [sp, #-16]!
 a3c:	mov	x29, sp
 a40:	bl	b80 <call_weak_fn>
 a44:	ldp	x29, x30, [sp], #16
 a48:	ret

Disassembly of section .plt:

0000000000000a50 <.plt>:
 a50:	stp	x16, x30, [sp, #-16]!
 a54:	adrp	x16, 11000 <__FRAME_END__+0xfb04>
 a58:	ldr	x17, [x16, #4088]
 a5c:	add	x16, x16, #0xff8
 a60:	br	x17
 a64:	nop
 a68:	nop
 a6c:	nop

0000000000000a70 <strlen@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16]
 a78:	add	x16, x16, #0x0
 a7c:	br	x17

0000000000000a80 <builtin_error@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #8]
 a88:	add	x16, x16, #0x8
 a8c:	br	x17

0000000000000a90 <__cxa_finalize@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #16]
 a98:	add	x16, x16, #0x10
 a9c:	br	x17

0000000000000aa0 <builtin_help@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #24]
 aa8:	add	x16, x16, #0x18
 aac:	br	x17

0000000000000ab0 <xmalloc@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #32]
 ab8:	add	x16, x16, #0x20
 abc:	br	x17

0000000000000ac0 <builtin_usage@plt>:
 ac0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ac4:	ldr	x17, [x16, #40]
 ac8:	add	x16, x16, #0x28
 acc:	br	x17

0000000000000ad0 <strerror@plt>:
 ad0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ad4:	ldr	x17, [x16, #48]
 ad8:	add	x16, x16, #0x30
 adc:	br	x17

0000000000000ae0 <strrchr@plt>:
 ae0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ae4:	ldr	x17, [x16, #56]
 ae8:	add	x16, x16, #0x38
 aec:	br	x17

0000000000000af0 <__gmon_start__@plt>:
 af0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 af4:	ldr	x17, [x16, #64]
 af8:	add	x16, x16, #0x40
 afc:	br	x17

0000000000000b00 <free@plt>:
 b00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b04:	ldr	x17, [x16, #72]
 b08:	add	x16, x16, #0x48
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b14:	ldr	x17, [x16, #80]
 b18:	add	x16, x16, #0x50
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b24:	ldr	x17, [x16, #88]
 b28:	add	x16, x16, #0x58
 b2c:	br	x17

0000000000000b30 <strcpy@plt>:
 b30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b34:	ldr	x17, [x16, #96]
 b38:	add	x16, x16, #0x60
 b3c:	br	x17

0000000000000b40 <__lxstat@plt>:
 b40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b44:	ldr	x17, [x16, #104]
 b48:	add	x16, x16, #0x68
 b4c:	br	x17

0000000000000b50 <__errno_location@plt>:
 b50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b54:	ldr	x17, [x16, #112]
 b58:	add	x16, x16, #0x70
 b5c:	br	x17

0000000000000b60 <__xstat@plt>:
 b60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b64:	ldr	x17, [x16, #120]
 b68:	add	x16, x16, #0x78
 b6c:	br	x17

0000000000000b70 <unlink@plt>:
 b70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b74:	ldr	x17, [x16, #128]
 b78:	add	x16, x16, #0x80
 b7c:	br	x17

Disassembly of section .text:

0000000000000b80 <call_weak_fn>:
     b80:	adrp	x0, 11000 <__FRAME_END__+0xfb04>
     b84:	ldr	x0, [x0, #4032]
     b88:	cbz	x0, b90 <call_weak_fn+0x10>
     b8c:	b	af0 <__gmon_start__@plt>
     b90:	ret
     b94:	nop

0000000000000b98 <deregister_tm_clones>:
     b98:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     b9c:	add	x0, x0, #0x100
     ba0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     ba4:	add	x1, x1, #0x100
     ba8:	cmp	x1, x0
     bac:	b.eq	bc4 <deregister_tm_clones+0x2c>  // b.none
     bb0:	adrp	x1, 11000 <__FRAME_END__+0xfb04>
     bb4:	ldr	x1, [x1, #4016]
     bb8:	cbz	x1, bc4 <deregister_tm_clones+0x2c>
     bbc:	mov	x16, x1
     bc0:	br	x16
     bc4:	ret

0000000000000bc8 <register_tm_clones>:
     bc8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bcc:	add	x0, x0, #0x100
     bd0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     bd4:	add	x1, x1, #0x100
     bd8:	sub	x1, x1, x0
     bdc:	lsr	x2, x1, #63
     be0:	add	x1, x2, x1, asr #3
     be4:	cmp	xzr, x1, asr #1
     be8:	asr	x1, x1, #1
     bec:	b.eq	c04 <register_tm_clones+0x3c>  // b.none
     bf0:	adrp	x2, 11000 <__FRAME_END__+0xfb04>
     bf4:	ldr	x2, [x2, #4064]
     bf8:	cbz	x2, c04 <register_tm_clones+0x3c>
     bfc:	mov	x16, x2
     c00:	br	x16
     c04:	ret

0000000000000c08 <__do_global_dtors_aux>:
     c08:	stp	x29, x30, [sp, #-32]!
     c0c:	mov	x29, sp
     c10:	str	x19, [sp, #16]
     c14:	adrp	x19, 12000 <strlen@GLIBC_2.17>
     c18:	ldrb	w0, [x19, #256]
     c1c:	cbnz	w0, c44 <__do_global_dtors_aux+0x3c>
     c20:	adrp	x0, 11000 <__FRAME_END__+0xfb04>
     c24:	ldr	x0, [x0, #4024]
     c28:	cbz	x0, c38 <__do_global_dtors_aux+0x30>
     c2c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c30:	ldr	x0, [x0, #136]
     c34:	bl	a90 <__cxa_finalize@plt>
     c38:	bl	b98 <deregister_tm_clones>
     c3c:	mov	w0, #0x1                   	// #1
     c40:	strb	w0, [x19, #256]
     c44:	ldr	x19, [sp, #16]
     c48:	ldp	x29, x30, [sp], #32
     c4c:	ret

0000000000000c50 <frame_dummy>:
     c50:	b	bc8 <register_tm_clones>

0000000000000c54 <ln_builtin>:
     c54:	sub	sp, sp, #0xd0
     c58:	stp	x29, x30, [sp, #192]
     c5c:	add	x29, sp, #0xc0
     c60:	stur	x0, [x29, #-16]
     c64:	stur	wzr, [x29, #-28]
     c68:	bl	b20 <reset_internal_getopt@plt>
     c6c:	ldur	x0, [x29, #-16]
     c70:	adrp	x1, 1000 <dolink+0x11c>
     c74:	add	x1, x1, #0x250
     c78:	bl	b10 <internal_getopt@plt>
     c7c:	stur	w0, [x29, #-24]
     c80:	mov	w8, #0xffffffff            	// #-1
     c84:	cmp	w0, w8
     c88:	b.eq	d38 <ln_builtin+0xe4>  // b.none
     c8c:	ldur	w8, [x29, #-24]
     c90:	mov	w9, #0xffffff9d            	// #-99
     c94:	cmp	w8, w9
     c98:	str	w8, [sp, #12]
     c9c:	b.eq	d14 <ln_builtin+0xc0>  // b.none
     ca0:	b	ca4 <ln_builtin+0x50>
     ca4:	ldr	w8, [sp, #12]
     ca8:	cmp	w8, #0x66
     cac:	b.eq	ce4 <ln_builtin+0x90>  // b.none
     cb0:	b	cb4 <ln_builtin+0x60>
     cb4:	ldr	w8, [sp, #12]
     cb8:	cmp	w8, #0x68
     cbc:	b.eq	d04 <ln_builtin+0xb0>  // b.none
     cc0:	b	cc4 <ln_builtin+0x70>
     cc4:	ldr	w8, [sp, #12]
     cc8:	cmp	w8, #0x6e
     ccc:	b.eq	d04 <ln_builtin+0xb0>  // b.none
     cd0:	b	cd4 <ln_builtin+0x80>
     cd4:	ldr	w8, [sp, #12]
     cd8:	cmp	w8, #0x73
     cdc:	b.eq	cf4 <ln_builtin+0xa0>  // b.none
     ce0:	b	d24 <ln_builtin+0xd0>
     ce4:	ldur	w8, [x29, #-28]
     ce8:	orr	w8, w8, #0x2
     cec:	stur	w8, [x29, #-28]
     cf0:	b	d34 <ln_builtin+0xe0>
     cf4:	ldur	w8, [x29, #-28]
     cf8:	orr	w8, w8, #0x1
     cfc:	stur	w8, [x29, #-28]
     d00:	b	d34 <ln_builtin+0xe0>
     d04:	ldur	w8, [x29, #-28]
     d08:	orr	w8, w8, #0x4
     d0c:	stur	w8, [x29, #-28]
     d10:	b	d34 <ln_builtin+0xe0>
     d14:	bl	aa0 <builtin_help@plt>
     d18:	mov	w8, #0x102                 	// #258
     d1c:	stur	w8, [x29, #-4]
     d20:	b	ed4 <ln_builtin+0x280>
     d24:	bl	ac0 <builtin_usage@plt>
     d28:	mov	w8, #0x102                 	// #258
     d2c:	stur	w8, [x29, #-4]
     d30:	b	ed4 <ln_builtin+0x280>
     d34:	b	c6c <ln_builtin+0x18>
     d38:	adrp	x8, 11000 <__FRAME_END__+0xfb04>
     d3c:	ldr	x8, [x8, #4048]
     d40:	ldr	x8, [x8]
     d44:	stur	x8, [x29, #-16]
     d48:	ldur	x8, [x29, #-16]
     d4c:	cbnz	x8, d60 <ln_builtin+0x10c>
     d50:	bl	ac0 <builtin_usage@plt>
     d54:	mov	w8, #0x102                 	// #258
     d58:	stur	w8, [x29, #-4]
     d5c:	b	ed4 <ln_builtin+0x280>
     d60:	ldur	w8, [x29, #-28]
     d64:	adrp	x9, 11000 <__FRAME_END__+0xfb04>
     d68:	ldr	x9, [x9, #4056]
     d6c:	adrp	x10, 11000 <__FRAME_END__+0xfb04>
     d70:	ldr	x10, [x10, #4040]
     d74:	tst	w8, #0x1
     d78:	csel	x9, x10, x9, ne  // ne = any
     d7c:	adrp	x10, 12000 <strlen@GLIBC_2.17>
     d80:	add	x10, x10, #0x108
     d84:	str	x9, [x10]
     d88:	ldur	x9, [x29, #-16]
     d8c:	ldr	x9, [x9]
     d90:	cbnz	x9, db8 <ln_builtin+0x164>
     d94:	ldur	x8, [x29, #-16]
     d98:	ldr	x8, [x8, #8]
     d9c:	ldr	x0, [x8]
     da0:	ldur	w2, [x29, #-28]
     da4:	adrp	x1, 1000 <dolink+0x11c>
     da8:	add	x1, x1, #0x324
     dac:	bl	ee4 <dolink>
     db0:	stur	w0, [x29, #-4]
     db4:	b	ed4 <ln_builtin+0x280>
     db8:	ldur	x8, [x29, #-16]
     dbc:	ldr	x8, [x8]
     dc0:	ldr	x8, [x8]
     dc4:	cbnz	x8, df4 <ln_builtin+0x1a0>
     dc8:	ldur	x8, [x29, #-16]
     dcc:	ldr	x8, [x8, #8]
     dd0:	ldr	x0, [x8]
     dd4:	ldur	x8, [x29, #-16]
     dd8:	ldr	x8, [x8]
     ddc:	ldr	x8, [x8, #8]
     de0:	ldr	x1, [x8]
     de4:	ldur	w2, [x29, #-28]
     de8:	bl	ee4 <dolink>
     dec:	stur	w0, [x29, #-4]
     df0:	b	ed4 <ln_builtin+0x280>
     df4:	ldur	x8, [x29, #-16]
     df8:	stur	x8, [x29, #-40]
     dfc:	ldur	x8, [x29, #-40]
     e00:	ldr	x8, [x8]
     e04:	cbz	x8, e18 <ln_builtin+0x1c4>
     e08:	ldur	x8, [x29, #-40]
     e0c:	ldr	x8, [x8]
     e10:	stur	x8, [x29, #-40]
     e14:	b	dfc <ln_builtin+0x1a8>
     e18:	ldur	x8, [x29, #-40]
     e1c:	ldr	x8, [x8, #8]
     e20:	ldr	x8, [x8]
     e24:	stur	x8, [x29, #-48]
     e28:	ldur	x0, [x29, #-48]
     e2c:	add	x1, sp, #0x10
     e30:	bl	1220 <__stat>
     e34:	cmp	w0, #0x0
     e38:	cset	w9, ge  // ge = tcont
     e3c:	tbnz	w9, #0, e5c <ln_builtin+0x208>
     e40:	ldur	x1, [x29, #-48]
     e44:	adrp	x0, 1000 <dolink+0x11c>
     e48:	add	x0, x0, #0x3fb
     e4c:	bl	a80 <builtin_error@plt>
     e50:	mov	w8, #0x1                   	// #1
     e54:	stur	w8, [x29, #-4]
     e58:	b	ed4 <ln_builtin+0x280>
     e5c:	ldr	w8, [sp, #32]
     e60:	and	w8, w8, #0xf000
     e64:	cmp	w8, #0x4, lsl #12
     e68:	cset	w8, eq  // eq = none
     e6c:	and	w8, w8, #0x1
     e70:	cbnz	w8, e84 <ln_builtin+0x230>
     e74:	bl	ac0 <builtin_usage@plt>
     e78:	mov	w8, #0x102                 	// #258
     e7c:	stur	w8, [x29, #-4]
     e80:	b	ed4 <ln_builtin+0x280>
     e84:	stur	wzr, [x29, #-20]
     e88:	ldur	x8, [x29, #-16]
     e8c:	ldur	x9, [x29, #-40]
     e90:	cmp	x8, x9
     e94:	b.eq	ecc <ln_builtin+0x278>  // b.none
     e98:	ldur	x8, [x29, #-16]
     e9c:	ldr	x8, [x8, #8]
     ea0:	ldr	x0, [x8]
     ea4:	ldur	x1, [x29, #-48]
     ea8:	ldur	w2, [x29, #-28]
     eac:	bl	ee4 <dolink>
     eb0:	ldur	w9, [x29, #-20]
     eb4:	add	w9, w9, w0
     eb8:	stur	w9, [x29, #-20]
     ebc:	ldur	x8, [x29, #-16]
     ec0:	ldr	x8, [x8]
     ec4:	stur	x8, [x29, #-16]
     ec8:	b	e88 <ln_builtin+0x234>
     ecc:	ldur	w8, [x29, #-20]
     ed0:	stur	w8, [x29, #-4]
     ed4:	ldur	w0, [x29, #-4]
     ed8:	ldp	x29, x30, [sp, #192]
     edc:	add	sp, sp, #0xd0
     ee0:	ret

0000000000000ee4 <dolink>:
     ee4:	sub	sp, sp, #0x1b0
     ee8:	stp	x29, x30, [sp, #400]
     eec:	str	x28, [sp, #416]
     ef0:	add	x29, sp, #0x190
     ef4:	stur	x0, [x29, #-16]
     ef8:	stur	x1, [x29, #-24]
     efc:	stur	w2, [x29, #-28]
     f00:	ldur	w8, [x29, #-28]
     f04:	and	w8, w8, #0x1
     f08:	cbnz	w8, fb0 <dolink+0xcc>
     f0c:	ldur	x0, [x29, #-16]
     f10:	sub	x1, x29, #0xa0
     f14:	bl	1220 <__stat>
     f18:	cbz	w0, f58 <dolink+0x74>
     f1c:	ldur	x1, [x29, #-16]
     f20:	str	x1, [sp, #80]
     f24:	bl	b50 <__errno_location@plt>
     f28:	ldr	w0, [x0]
     f2c:	bl	ad0 <strerror@plt>
     f30:	adrp	x8, 1000 <dolink+0x11c>
     f34:	add	x8, x8, #0x410
     f38:	str	x0, [sp, #72]
     f3c:	mov	x0, x8
     f40:	ldr	x1, [sp, #80]
     f44:	ldr	x2, [sp, #72]
     f48:	bl	a80 <builtin_error@plt>
     f4c:	mov	w9, #0x1                   	// #1
     f50:	stur	w9, [x29, #-4]
     f54:	b	1154 <dolink+0x270>
     f58:	ldur	w8, [x29, #-144]
     f5c:	and	w8, w8, #0xf000
     f60:	cmp	w8, #0x4, lsl #12
     f64:	b.ne	fb0 <dolink+0xcc>  // b.any
     f68:	bl	b50 <__errno_location@plt>
     f6c:	mov	w8, #0x15                  	// #21
     f70:	str	w8, [x0]
     f74:	ldur	x1, [x29, #-16]
     f78:	str	x1, [sp, #64]
     f7c:	bl	b50 <__errno_location@plt>
     f80:	ldr	w0, [x0]
     f84:	bl	ad0 <strerror@plt>
     f88:	adrp	x9, 1000 <dolink+0x11c>
     f8c:	add	x9, x9, #0x410
     f90:	str	x0, [sp, #56]
     f94:	mov	x0, x9
     f98:	ldr	x1, [sp, #64]
     f9c:	ldr	x2, [sp, #56]
     fa0:	bl	a80 <builtin_error@plt>
     fa4:	mov	w8, #0x1                   	// #1
     fa8:	stur	w8, [x29, #-4]
     fac:	b	1154 <dolink+0x270>
     fb0:	mov	x8, xzr
     fb4:	str	x8, [sp, #96]
     fb8:	ldur	w9, [x29, #-28]
     fbc:	and	w9, w9, #0x4
     fc0:	cbz	w9, fd8 <dolink+0xf4>
     fc4:	ldur	x0, [x29, #-24]
     fc8:	add	x1, sp, #0x70
     fcc:	bl	1230 <__lstat>
     fd0:	str	w0, [sp, #52]
     fd4:	b	fe8 <dolink+0x104>
     fd8:	ldur	x0, [x29, #-24]
     fdc:	add	x1, sp, #0x70
     fe0:	bl	1220 <__stat>
     fe4:	str	w0, [sp, #52]
     fe8:	ldr	w8, [sp, #52]
     fec:	cbnz	w8, 1044 <dolink+0x160>
     ff0:	ldr	w8, [sp, #128]
     ff4:	and	w8, w8, #0xf000
     ff8:	cmp	w8, #0x4, lsl #12
     ffc:	b.ne	1044 <dolink+0x160>  // b.any
    1000:	ldur	x0, [x29, #-16]
    1004:	mov	w1, #0x2f                  	// #47
    1008:	bl	ae0 <strrchr@plt>
    100c:	str	x0, [sp, #88]
    1010:	cbnz	x0, 1020 <dolink+0x13c>
    1014:	ldur	x8, [x29, #-16]
    1018:	str	x8, [sp, #88]
    101c:	b	102c <dolink+0x148>
    1020:	ldr	x8, [sp, #88]
    1024:	add	x8, x8, #0x1
    1028:	str	x8, [sp, #88]
    102c:	ldur	x0, [x29, #-24]
    1030:	ldr	x1, [sp, #88]
    1034:	bl	1168 <mkdirpath>
    1038:	str	x0, [sp, #96]
    103c:	ldr	x8, [sp, #96]
    1040:	stur	x8, [x29, #-24]
    1044:	ldur	x0, [x29, #-24]
    1048:	add	x1, sp, #0x70
    104c:	bl	1230 <__lstat>
    1050:	cmp	w0, #0x0
    1054:	cset	w8, eq  // eq = none
    1058:	and	w8, w8, #0x1
    105c:	str	w8, [sp, #108]
    1060:	ldur	w8, [x29, #-28]
    1064:	and	w8, w8, #0x2
    1068:	cbz	w8, 10cc <dolink+0x1e8>
    106c:	ldr	w8, [sp, #108]
    1070:	cbz	w8, 10cc <dolink+0x1e8>
    1074:	ldur	x0, [x29, #-24]
    1078:	bl	b70 <unlink@plt>
    107c:	cbz	w0, 10cc <dolink+0x1e8>
    1080:	ldur	x1, [x29, #-24]
    1084:	str	x1, [sp, #40]
    1088:	bl	b50 <__errno_location@plt>
    108c:	ldr	w0, [x0]
    1090:	bl	ad0 <strerror@plt>
    1094:	adrp	x8, 1000 <dolink+0x11c>
    1098:	add	x8, x8, #0x3e8
    109c:	str	x0, [sp, #32]
    10a0:	mov	x0, x8
    10a4:	ldr	x1, [sp, #40]
    10a8:	ldr	x2, [sp, #32]
    10ac:	bl	a80 <builtin_error@plt>
    10b0:	ldr	x8, [sp, #96]
    10b4:	cbz	x8, 10c0 <dolink+0x1dc>
    10b8:	ldr	x0, [sp, #96]
    10bc:	bl	b00 <free@plt>
    10c0:	mov	w8, #0x1                   	// #1
    10c4:	stur	w8, [x29, #-4]
    10c8:	b	1154 <dolink+0x270>
    10cc:	adrp	x8, 12000 <strlen@GLIBC_2.17>
    10d0:	add	x8, x8, #0x108
    10d4:	ldr	x8, [x8]
    10d8:	ldur	x0, [x29, #-16]
    10dc:	ldur	x1, [x29, #-24]
    10e0:	blr	x8
    10e4:	cbz	w0, 1140 <dolink+0x25c>
    10e8:	ldur	x1, [x29, #-24]
    10ec:	ldur	x2, [x29, #-16]
    10f0:	str	x1, [sp, #24]
    10f4:	str	x2, [sp, #16]
    10f8:	bl	b50 <__errno_location@plt>
    10fc:	ldr	w0, [x0]
    1100:	bl	ad0 <strerror@plt>
    1104:	adrp	x8, 1000 <dolink+0x11c>
    1108:	add	x8, x8, #0x3fe
    110c:	str	x0, [sp, #8]
    1110:	mov	x0, x8
    1114:	ldr	x1, [sp, #24]
    1118:	ldr	x2, [sp, #16]
    111c:	ldr	x3, [sp, #8]
    1120:	bl	a80 <builtin_error@plt>
    1124:	ldr	x8, [sp, #96]
    1128:	cbz	x8, 1134 <dolink+0x250>
    112c:	ldr	x0, [sp, #96]
    1130:	bl	b00 <free@plt>
    1134:	mov	w8, #0x1                   	// #1
    1138:	stur	w8, [x29, #-4]
    113c:	b	1154 <dolink+0x270>
    1140:	ldr	x8, [sp, #96]
    1144:	cbz	x8, 1150 <dolink+0x26c>
    1148:	ldr	x0, [sp, #96]
    114c:	bl	b00 <free@plt>
    1150:	stur	wzr, [x29, #-4]
    1154:	ldur	w0, [x29, #-4]
    1158:	ldr	x28, [sp, #416]
    115c:	ldp	x29, x30, [sp, #400]
    1160:	add	sp, sp, #0x1b0
    1164:	ret

0000000000001168 <mkdirpath>:
    1168:	sub	sp, sp, #0x30
    116c:	stp	x29, x30, [sp, #32]
    1170:	add	x29, sp, #0x20
    1174:	stur	x0, [x29, #-8]
    1178:	str	x1, [sp, #16]
    117c:	ldur	x0, [x29, #-8]
    1180:	bl	a70 <strlen@plt>
    1184:	str	w0, [sp, #12]
    1188:	ldr	x0, [sp, #16]
    118c:	bl	a70 <strlen@plt>
    1190:	str	w0, [sp, #8]
    1194:	ldr	w8, [sp, #12]
    1198:	add	w8, w8, #0x2
    119c:	ldr	w9, [sp, #8]
    11a0:	add	w8, w8, w9
    11a4:	mov	w1, w8
    11a8:	sxtw	x0, w1
    11ac:	bl	ab0 <xmalloc@plt>
    11b0:	str	x0, [sp]
    11b4:	ldr	x0, [sp]
    11b8:	ldur	x1, [x29, #-8]
    11bc:	bl	b30 <strcpy@plt>
    11c0:	ldr	x10, [sp]
    11c4:	ldr	w8, [sp, #12]
    11c8:	subs	w8, w8, #0x1
    11cc:	ldrb	w8, [x10, w8, sxtw]
    11d0:	cmp	w8, #0x2f
    11d4:	b.eq	11f8 <mkdirpath+0x90>  // b.none
    11d8:	ldr	x8, [sp]
    11dc:	ldrsw	x9, [sp, #12]
    11e0:	mov	w10, w9
    11e4:	add	w10, w10, #0x1
    11e8:	str	w10, [sp, #12]
    11ec:	add	x8, x8, x9
    11f0:	mov	w10, #0x2f                  	// #47
    11f4:	strb	w10, [x8]
    11f8:	ldr	x8, [sp]
    11fc:	ldrsw	x9, [sp, #12]
    1200:	add	x0, x8, x9
    1204:	ldr	x1, [sp, #16]
    1208:	bl	b30 <strcpy@plt>
    120c:	ldr	x8, [sp]
    1210:	mov	x0, x8
    1214:	ldp	x29, x30, [sp, #32]
    1218:	add	sp, sp, #0x30
    121c:	ret

0000000000001220 <__stat>:
    1220:	mov	x2, x1
    1224:	mov	x1, x0
    1228:	mov	w0, #0x0                   	// #0
    122c:	b	b60 <__xstat@plt>

0000000000001230 <__lstat>:
    1230:	mov	x2, x1
    1234:	mov	x1, x0
    1238:	mov	w0, #0x0                   	// #0
    123c:	b	b40 <__lxstat@plt>

Disassembly of section .fini:

0000000000001240 <_fini>:
    1240:	stp	x29, x30, [sp, #-16]!
    1244:	mov	x29, sp
    1248:	ldp	x29, x30, [sp], #16
    124c:	ret
