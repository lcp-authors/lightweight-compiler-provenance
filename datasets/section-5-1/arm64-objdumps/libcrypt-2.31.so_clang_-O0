
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcrypt-2.31.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c78 <.init>:
 c78:	stp	x29, x30, [sp, #-16]!
 c7c:	mov	x29, sp
 c80:	bl	e40 <ferror@plt+0x10>
 c84:	ldp	x29, x30, [sp], #16
 c88:	ret

Disassembly of section .plt:

0000000000000c90 <memcpy@plt-0x20>:
 c90:	stp	x16, x30, [sp, #-16]!
 c94:	adrp	x16, 17000 <setkey@GLIBC_2.17+0x131e8>
 c98:	ldr	x17, [x16, #4088]
 c9c:	add	x16, x16, #0xff8
 ca0:	br	x17
 ca4:	nop
 ca8:	nop
 cac:	nop

0000000000000cb0 <memcpy@plt>:
 cb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 cb4:	ldr	x17, [x16]
 cb8:	add	x16, x16, #0x0
 cbc:	br	x17

0000000000000cc0 <strtoul@plt>:
 cc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #8]
 cc8:	add	x16, x16, #0x8
 ccc:	br	x17

0000000000000cd0 <strlen@plt>:
 cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #16]
 cd8:	add	x16, x16, #0x10
 cdc:	br	x17

0000000000000ce0 <__cxa_finalize@plt>:
 ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #24]
 ce8:	add	x16, x16, #0x18
 cec:	br	x17

0000000000000cf0 <__pthread_mutex_unlock@plt>:
 cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 cf4:	ldr	x17, [x16, #32]
 cf8:	add	x16, x16, #0x20
 cfc:	br	x17

0000000000000d00 <malloc@plt>:
 d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16, #40]
 d08:	add	x16, x16, #0x28
 d0c:	br	x17

0000000000000d10 <strncmp@plt>:
 d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #48]
 d18:	add	x16, x16, #0x30
 d1c:	br	x17

0000000000000d20 <memset@plt>:
 d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #56]
 d28:	add	x16, x16, #0x38
 d2c:	br	x17

0000000000000d30 <__open_nocancel@plt>:
 d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #64]
 d38:	add	x16, x16, #0x40
 d3c:	br	x17

0000000000000d40 <__pthread_mutex_lock@plt>:
 d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #72]
 d48:	add	x16, x16, #0x48
 d4c:	br	x17

0000000000000d50 <realloc@plt>:
 d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #80]
 d58:	add	x16, x16, #0x50
 d5c:	br	x17

0000000000000d60 <__stack_chk_fail@plt>:
 d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #88]
 d68:	add	x16, x16, #0x58
 d6c:	br	x17

0000000000000d70 <__gmon_start__@plt>:
 d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #96]
 d78:	add	x16, x16, #0x60
 d7c:	br	x17

0000000000000d80 <__stpncpy@plt>:
 d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #104]
 d88:	add	x16, x16, #0x68
 d8c:	br	x17

0000000000000d90 <strtol@plt>:
 d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #112]
 d98:	add	x16, x16, #0x70
 d9c:	br	x17

0000000000000da0 <__read_nocancel@plt>:
 da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #120]
 da8:	add	x16, x16, #0x78
 dac:	br	x17

0000000000000db0 <fread@plt>:
 db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #128]
 db8:	add	x16, x16, #0x80
 dbc:	br	x17

0000000000000dc0 <free@plt>:
 dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #136]
 dc8:	add	x16, x16, #0x88
 dcc:	br	x17

0000000000000dd0 <__snprintf@plt>:
 dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #144]
 dd8:	add	x16, x16, #0x90
 ddc:	br	x17

0000000000000de0 <__explicit_bzero_chk@plt>:
 de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #152]
 de8:	add	x16, x16, #0x98
 dec:	br	x17

0000000000000df0 <strncpy@plt>:
 df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #160]
 df8:	add	x16, x16, #0xa0
 dfc:	br	x17

0000000000000e00 <__libc_alloca_cutoff@plt>:
 e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #168]
 e08:	add	x16, x16, #0xa8
 e0c:	br	x17

0000000000000e10 <strcspn@plt>:
 e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #176]
 e18:	add	x16, x16, #0xb0
 e1c:	br	x17

0000000000000e20 <__close_nocancel@plt>:
 e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 e24:	ldr	x17, [x16, #184]
 e28:	add	x16, x16, #0xb8
 e2c:	br	x17

0000000000000e30 <ferror@plt>:
 e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
 e34:	ldr	x17, [x16, #192]
 e38:	add	x16, x16, #0xc0
 e3c:	br	x17

Disassembly of section .text:

0000000000000e40 <crypt_r@@GLIBC_2.17-0x230>:
     e40:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
     e44:	ldr	x0, [x0, #4040]
     e48:	cbz	x0, e50 <ferror@plt+0x20>
     e4c:	b	d70 <__gmon_start__@plt>
     e50:	ret
     e54:	nop
     e58:	adrp	x0, 18000 <setkey@GLIBC_2.17+0x141e8>
     e5c:	add	x0, x0, #0xd0
     e60:	adrp	x1, 18000 <setkey@GLIBC_2.17+0x141e8>
     e64:	add	x1, x1, #0xd0
     e68:	cmp	x1, x0
     e6c:	b.eq	e84 <ferror@plt+0x54>  // b.none
     e70:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
     e74:	ldr	x1, [x1, #4000]
     e78:	cbz	x1, e84 <ferror@plt+0x54>
     e7c:	mov	x16, x1
     e80:	br	x16
     e84:	ret
     e88:	adrp	x0, 18000 <setkey@GLIBC_2.17+0x141e8>
     e8c:	add	x0, x0, #0xd0
     e90:	adrp	x1, 18000 <setkey@GLIBC_2.17+0x141e8>
     e94:	add	x1, x1, #0xd0
     e98:	sub	x1, x1, x0
     e9c:	lsr	x2, x1, #63
     ea0:	add	x1, x2, x1, asr #3
     ea4:	cmp	xzr, x1, asr #1
     ea8:	asr	x1, x1, #1
     eac:	b.eq	ec4 <ferror@plt+0x94>  // b.none
     eb0:	adrp	x2, 17000 <setkey@GLIBC_2.17+0x131e8>
     eb4:	ldr	x2, [x2, #4064]
     eb8:	cbz	x2, ec4 <ferror@plt+0x94>
     ebc:	mov	x16, x2
     ec0:	br	x16
     ec4:	ret
     ec8:	stp	x29, x30, [sp, #-32]!
     ecc:	mov	x29, sp
     ed0:	str	x19, [sp, #16]
     ed4:	adrp	x19, 18000 <setkey@GLIBC_2.17+0x141e8>
     ed8:	ldrb	w0, [x19, #232]
     edc:	cbnz	w0, f04 <ferror@plt+0xd4>
     ee0:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
     ee4:	ldr	x0, [x0, #4016]
     ee8:	cbz	x0, ef8 <ferror@plt+0xc8>
     eec:	adrp	x0, 18000 <setkey@GLIBC_2.17+0x141e8>
     ef0:	ldr	x0, [x0, #200]
     ef4:	bl	ce0 <__cxa_finalize@plt>
     ef8:	bl	e58 <ferror@plt+0x28>
     efc:	mov	w0, #0x1                   	// #1
     f00:	strb	w0, [x19, #232]
     f04:	ldr	x19, [sp, #16]
     f08:	ldp	x29, x30, [sp], #32
     f0c:	ret
     f10:	b	e88 <ferror@plt+0x58>
     f14:	nop
     f18:	stp	x29, x30, [sp, #-112]!
     f1c:	mov	x29, sp
     f20:	stp	x19, x20, [sp, #16]
     f24:	adrp	x20, 17000 <setkey@GLIBC_2.17+0x131e8>
     f28:	ldr	x1, [x20, #4048]
     f2c:	stp	x23, x24, [sp, #48]
     f30:	adrp	x24, 18000 <setkey@GLIBC_2.17+0x141e8>
     f34:	ldr	x2, [x1]
     f38:	str	x2, [sp, #104]
     f3c:	mov	x2, #0x0                   	// #0
     f40:	ldr	w0, [x24, #236]
     f44:	cbz	w0, f74 <ferror@plt+0x144>
     f48:	cmp	w0, #0x1
     f4c:	cset	w0, eq  // eq = none
     f50:	ldr	x20, [x20, #4048]
     f54:	ldr	x2, [sp, #104]
     f58:	ldr	x1, [x20]
     f5c:	eor	x1, x2, x1
     f60:	cbnz	x1, 1068 <ferror@plt+0x238>
     f64:	ldp	x19, x20, [sp, #16]
     f68:	ldp	x23, x24, [sp, #48]
     f6c:	ldp	x29, x30, [sp], #112
     f70:	ret
     f74:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
     f78:	mov	w1, #0x0                   	// #0
     f7c:	add	x0, x0, #0x688
     f80:	stp	x21, x22, [sp, #32]
     f84:	bl	d30 <__open_nocancel@plt>
     f88:	add	x22, sp, #0x48
     f8c:	mov	w21, w0
     f90:	cmn	w0, #0x1
     f94:	b.eq	1040 <ferror@plt+0x210>  // b.none
     f98:	adrp	x23, 17000 <setkey@GLIBC_2.17+0x131e8>
     f9c:	ldr	x23, [x23, #4008]
     fa0:	mrs	x0, tpidr_el0
     fa4:	add	x23, x0, x23
     fa8:	b	fb8 <ferror@plt+0x188>
     fac:	ldr	w1, [x23]
     fb0:	cmp	w1, #0x4
     fb4:	b.ne	1038 <ferror@plt+0x208>  // b.any
     fb8:	mov	x1, x22
     fbc:	mov	w0, w21
     fc0:	mov	x2, #0x1f                  	// #31
     fc4:	bl	da0 <__read_nocancel@plt>
     fc8:	mov	x19, x0
     fcc:	cmn	x0, #0x1
     fd0:	b.eq	fac <ferror@plt+0x17c>  // b.none
     fd4:	mov	w0, w21
     fd8:	bl	e20 <__close_nocancel@plt>
     fdc:	cmp	x19, #0x0
     fe0:	b.le	1040 <ferror@plt+0x210>
     fe4:	add	x1, sp, #0x40
     fe8:	mov	x0, x22
     fec:	mov	w2, #0xa                   	// #10
     ff0:	strb	wzr, [x22, x19]
     ff4:	bl	d90 <strtol@plt>
     ff8:	ldr	x1, [sp, #64]
     ffc:	cmp	x1, x22
    1000:	b.eq	1040 <ferror@plt+0x210>  // b.none
    1004:	ldrb	w1, [x1]
    1008:	cmp	w1, #0x0
    100c:	ccmp	w1, #0xa, #0x4, ne  // ne = any
    1010:	b.ne	1040 <ferror@plt+0x210>  // b.any
    1014:	cmp	x0, #0x0
    1018:	b.le	105c <ferror@plt+0x22c>
    101c:	mov	w0, #0x1                   	// #1
    1020:	str	w0, [x24, #236]
    1024:	nop
    1028:	cmp	w0, #0x1
    102c:	cset	w0, eq  // eq = none
    1030:	ldp	x21, x22, [sp, #32]
    1034:	b	f50 <ferror@plt+0x120>
    1038:	mov	w0, w21
    103c:	bl	e20 <__close_nocancel@plt>
    1040:	ldr	w0, [x24, #236]
    1044:	cbnz	w0, 1028 <ferror@plt+0x1f8>
    1048:	mov	w1, #0xfffffffe            	// #-2
    104c:	mov	w0, #0x0                   	// #0
    1050:	str	w1, [x24, #236]
    1054:	ldp	x21, x22, [sp, #32]
    1058:	b	f50 <ferror@plt+0x120>
    105c:	mov	w0, #0xffffffff            	// #-1
    1060:	str	w0, [x24, #236]
    1064:	b	1028 <ferror@plt+0x1f8>
    1068:	stp	x21, x22, [sp, #32]
    106c:	bl	d60 <__stack_chk_fail@plt>

0000000000001070 <crypt_r@@GLIBC_2.17>:
    1070:	stp	x29, x30, [sp, #-128]!
    1074:	mov	x29, sp
    1078:	stp	x21, x22, [sp, #32]
    107c:	adrp	x21, 17000 <setkey@GLIBC_2.17+0x131e8>
    1080:	mov	x22, x0
    1084:	ldr	x3, [x21, #4048]
    1088:	stp	x19, x20, [sp, #16]
    108c:	mov	x20, x1
    1090:	ldr	x0, [x3]
    1094:	str	x0, [sp, #120]
    1098:	mov	x0, #0x0                   	// #0
    109c:	ldrb	w1, [x1]
    10a0:	mov	w0, #0x24                  	// #36
    10a4:	mov	x19, x2
    10a8:	cmp	w0, w1
    10ac:	b.eq	1174 <crypt_r@@GLIBC_2.17+0x104>  // b.none
    10b0:	mov	x1, x19
    10b4:	mov	x0, x20
    10b8:	bl	3450 <crypt@@GLIBC_2.17+0x21b8>
    10bc:	tst	w0, #0xff
    10c0:	b.eq	1248 <crypt_r@@GLIBC_2.17+0x1d8>  // b.none
    10c4:	bl	f18 <ferror@plt+0xe8>
    10c8:	tst	w0, #0xff
    10cc:	b.ne	120c <crypt_r@@GLIBC_2.17+0x19c>  // b.any
    10d0:	mov	x2, #0x8                   	// #8
    10d4:	str	x23, [sp, #48]
    10d8:	add	x23, sp, #0x68
    10dc:	mov	x1, x22
    10e0:	mov	x0, x23
    10e4:	str	xzr, [sp, #104]
    10e8:	strb	wzr, [sp, #112]
    10ec:	bl	df0 <strncpy@plt>
    10f0:	add	x22, sp, #0x48
    10f4:	mov	x0, x23
    10f8:	mov	x1, x19
    10fc:	bl	3698 <crypt@@GLIBC_2.17+0x2400>
    1100:	mov	x2, x22
    1104:	mov	x1, x19
    1108:	mov	x0, #0x19                  	// #25
    110c:	stp	xzr, xzr, [sp, #72]
    1110:	stp	xzr, xzr, [sp, #88]
    1114:	bl	2d50 <crypt@@GLIBC_2.17+0x1ab8>
    1118:	mov	x1, x19
    111c:	mov	x0, x22
    1120:	bl	37e8 <crypt@@GLIBC_2.17+0x2550>
    1124:	ldp	x0, x1, [sp, #72]
    1128:	mov	x3, x19
    112c:	mov	x2, x20
    1130:	bl	39e0 <crypt@@GLIBC_2.17+0x2748>
    1134:	mov	x0, x23
    1138:	mov	x2, #0x9                   	// #9
    113c:	mov	x1, x2
    1140:	bl	de0 <__explicit_bzero_chk@plt>
    1144:	mov	x0, x19
    1148:	mov	x2, #0xffffffffffffffff    	// #-1
    114c:	mov	x1, #0x80                  	// #128
    1150:	bl	de0 <__explicit_bzero_chk@plt>
    1154:	mov	x0, x22
    1158:	mov	x2, #0x20                  	// #32
    115c:	mov	x1, x2
    1160:	bl	de0 <__explicit_bzero_chk@plt>
    1164:	add	x0, x19, #0x20, lsl #12
    1168:	add	x0, x0, #0x80
    116c:	ldr	x23, [sp, #48]
    1170:	b	1224 <crypt_r@@GLIBC_2.17+0x1b4>
    1174:	ldrb	w2, [x20, #1]
    1178:	cmp	w2, #0x31
    117c:	b.eq	11d8 <crypt_r@@GLIBC_2.17+0x168>  // b.none
    1180:	mov	w0, #0x24                  	// #36
    1184:	cmp	w0, w1
    1188:	b.ne	10b0 <crypt_r@@GLIBC_2.17+0x40>  // b.any
    118c:	ldrb	w2, [x20, #1]
    1190:	cmp	w2, #0x35
    1194:	b.eq	1264 <crypt_r@@GLIBC_2.17+0x1f4>  // b.none
    1198:	mov	w0, #0x24                  	// #36
    119c:	cmp	w0, w1
    11a0:	b.ne	10b0 <crypt_r@@GLIBC_2.17+0x40>  // b.any
    11a4:	ldrb	w1, [x20, #1]
    11a8:	cmp	w1, #0x36
    11ac:	b.ne	10b0 <crypt_r@@GLIBC_2.17+0x40>  // b.any
    11b0:	ldrb	w1, [x20, #2]
    11b4:	cmp	w0, w1
    11b8:	b.ne	10b0 <crypt_r@@GLIBC_2.17+0x40>  // b.any
    11bc:	mov	w3, #0xa0                  	// #160
    11c0:	mov	x2, x19
    11c4:	mov	x1, x20
    11c8:	mov	x0, x22
    11cc:	movk	w3, #0x2, lsl #16
    11d0:	bl	22e0 <crypt@@GLIBC_2.17+0x1048>
    11d4:	b	1224 <crypt_r@@GLIBC_2.17+0x1b4>
    11d8:	ldrb	w2, [x20, #2]
    11dc:	cmp	w0, w2
    11e0:	b.ne	1180 <crypt_r@@GLIBC_2.17+0x110>  // b.any
    11e4:	bl	f18 <ferror@plt+0xe8>
    11e8:	tst	w0, #0xff
    11ec:	b.ne	120c <crypt_r@@GLIBC_2.17+0x19c>  // b.any
    11f0:	mov	w3, #0xa0                  	// #160
    11f4:	mov	x2, x19
    11f8:	mov	x1, x20
    11fc:	mov	x0, x22
    1200:	movk	w3, #0x2, lsl #16
    1204:	bl	1388 <crypt@@GLIBC_2.17+0xf0>
    1208:	b	1224 <crypt_r@@GLIBC_2.17+0x1b4>
    120c:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    1210:	ldr	x1, [x1, #4008]
    1214:	mrs	x2, tpidr_el0
    1218:	mov	w3, #0x1                   	// #1
    121c:	mov	x0, #0x0                   	// #0
    1220:	str	w3, [x2, x1]
    1224:	ldr	x21, [x21, #4048]
    1228:	ldr	x2, [sp, #120]
    122c:	ldr	x1, [x21]
    1230:	eor	x1, x2, x1
    1234:	cbnz	x1, 128c <crypt_r@@GLIBC_2.17+0x21c>
    1238:	ldp	x19, x20, [sp, #16]
    123c:	ldp	x21, x22, [sp, #32]
    1240:	ldp	x29, x30, [sp], #128
    1244:	ret
    1248:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    124c:	ldr	x1, [x1, #4008]
    1250:	mrs	x2, tpidr_el0
    1254:	mov	w3, #0x16                  	// #22
    1258:	mov	x0, #0x0                   	// #0
    125c:	str	w3, [x2, x1]
    1260:	b	1224 <crypt_r@@GLIBC_2.17+0x1b4>
    1264:	ldrb	w2, [x20, #2]
    1268:	cmp	w0, w2
    126c:	b.ne	1198 <crypt_r@@GLIBC_2.17+0x128>  // b.any
    1270:	mov	w3, #0xa0                  	// #160
    1274:	mov	x2, x19
    1278:	mov	x1, x20
    127c:	mov	x0, x22
    1280:	movk	w3, #0x2, lsl #16
    1284:	bl	19c0 <crypt@@GLIBC_2.17+0x728>
    1288:	b	1224 <crypt_r@@GLIBC_2.17+0x1b4>
    128c:	str	x23, [sp, #48]
    1290:	bl	d60 <__stack_chk_fail@plt>
    1294:	nop

0000000000001298 <crypt@@GLIBC_2.17>:
    1298:	stp	x29, x30, [sp, #-32]!
    129c:	mov	x29, sp
    12a0:	stp	x19, x20, [sp, #16]
    12a4:	mov	x19, x1
    12a8:	mov	x20, x0
    12ac:	mov	w1, #0x24                  	// #36
    12b0:	ldrb	w0, [x19]
    12b4:	cmp	w1, w0
    12b8:	b.ne	1338 <crypt@@GLIBC_2.17+0xa0>  // b.any
    12bc:	ldrb	w2, [x19, #1]
    12c0:	cmp	w2, #0x31
    12c4:	b.eq	1318 <crypt@@GLIBC_2.17+0x80>  // b.none
    12c8:	mov	w1, #0x24                  	// #36
    12cc:	cmp	w1, w0
    12d0:	b.ne	1338 <crypt@@GLIBC_2.17+0xa0>  // b.any
    12d4:	ldrb	w2, [x19, #1]
    12d8:	cmp	w2, #0x35
    12dc:	b.eq	1354 <crypt@@GLIBC_2.17+0xbc>  // b.none
    12e0:	mov	w1, #0x24                  	// #36
    12e4:	cmp	w1, w0
    12e8:	b.ne	1338 <crypt@@GLIBC_2.17+0xa0>  // b.any
    12ec:	ldrb	w0, [x19, #1]
    12f0:	cmp	w0, #0x36
    12f4:	b.ne	1338 <crypt@@GLIBC_2.17+0xa0>  // b.any
    12f8:	ldrb	w0, [x19, #2]
    12fc:	cmp	w1, w0
    1300:	b.ne	1338 <crypt@@GLIBC_2.17+0xa0>  // b.any
    1304:	mov	x1, x19
    1308:	mov	x0, x20
    130c:	ldp	x19, x20, [sp, #16]
    1310:	ldp	x29, x30, [sp], #32
    1314:	b	2cc0 <crypt@@GLIBC_2.17+0x1a28>
    1318:	ldrb	w2, [x19, #2]
    131c:	cmp	w1, w2
    1320:	b.ne	12c8 <crypt@@GLIBC_2.17+0x30>  // b.any
    1324:	bl	f18 <ferror@plt+0xe8>
    1328:	tst	w0, #0xff
    132c:	b.eq	1374 <crypt@@GLIBC_2.17+0xdc>  // b.none
    1330:	ldrb	w0, [x19]
    1334:	b	12c8 <crypt@@GLIBC_2.17+0x30>
    1338:	mov	x1, x19
    133c:	mov	x0, x20
    1340:	adrp	x2, 17000 <setkey@GLIBC_2.17+0x131e8>
    1344:	ldp	x19, x20, [sp, #16]
    1348:	ldp	x29, x30, [sp], #32
    134c:	ldr	x2, [x2, #4056]
    1350:	b	1070 <crypt_r@@GLIBC_2.17>
    1354:	ldrb	w2, [x19, #2]
    1358:	cmp	w1, w2
    135c:	b.ne	12e0 <crypt@@GLIBC_2.17+0x48>  // b.any
    1360:	mov	x1, x19
    1364:	mov	x0, x20
    1368:	ldp	x19, x20, [sp, #16]
    136c:	ldp	x29, x30, [sp], #32
    1370:	b	2250 <crypt@@GLIBC_2.17+0xfb8>
    1374:	mov	x1, x19
    1378:	mov	x0, x20
    137c:	ldp	x19, x20, [sp, #16]
    1380:	ldp	x29, x30, [sp], #32
    1384:	b	1930 <crypt@@GLIBC_2.17+0x698>
    1388:	sub	sp, sp, #0x200
    138c:	mov	x4, x1
    1390:	stp	x29, x30, [sp]
    1394:	mov	x29, sp
    1398:	str	w3, [x29, #156]
    139c:	adrp	x3, 17000 <setkey@GLIBC_2.17+0x131e8>
    13a0:	stp	x19, x20, [sp, #16]
    13a4:	ldr	x3, [x3, #4048]
    13a8:	stp	x21, x22, [sp, #32]
    13ac:	stp	x23, x24, [sp, #48]
    13b0:	ldr	x5, [x3]
    13b4:	str	x5, [x29, #504]
    13b8:	mov	x5, #0x0                   	// #0
    13bc:	mov	x23, x0
    13c0:	stp	x25, x26, [sp, #64]
    13c4:	mov	w0, #0x24                  	// #36
    13c8:	stp	x27, x28, [sp, #80]
    13cc:	str	x2, [x29, #128]
    13d0:	str	x1, [x29, #144]
    13d4:	ldrb	w1, [x1]
    13d8:	cmp	w0, w1
    13dc:	b.ne	13ec <crypt@@GLIBC_2.17+0x154>  // b.any
    13e0:	ldrb	w1, [x4, #1]
    13e4:	cmp	w1, #0x31
    13e8:	b.eq	18c0 <crypt@@GLIBC_2.17+0x628>  // b.none
    13ec:	ldr	x0, [x29, #144]
    13f0:	adrp	x1, 5000 <setkey@GLIBC_2.17+0x11e8>
    13f4:	add	x1, x1, #0x6a8
    13f8:	bl	e10 <strcspn@plt>
    13fc:	mov	x2, x0
    1400:	mov	x1, #0x8                   	// #8
    1404:	cmp	x2, x1
    1408:	csel	x1, x2, x1, cc  // cc = lo, ul, last
    140c:	mov	x0, x23
    1410:	str	x1, [x29, #136]
    1414:	bl	cd0 <strlen@plt>
    1418:	mov	x24, x0
    141c:	tst	x23, #0x3
    1420:	b.eq	149c <crypt@@GLIBC_2.17+0x204>  // b.none
    1424:	add	x19, x0, #0x4
    1428:	mov	x0, x19
    142c:	bl	e00 <__libc_alloca_cutoff@plt>
    1430:	cmp	x19, #0x8, lsl #12
    1434:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
    1438:	b.eq	1910 <crypt@@GLIBC_2.17+0x678>  // b.none
    143c:	add	x0, x24, #0x13
    1440:	str	xzr, [x29, #112]
    1444:	and	x0, x0, #0xfffffffffffffff0
    1448:	sub	sp, sp, x0
    144c:	mov	x19, sp
    1450:	mov	x1, x23
    1454:	add	x0, x19, #0x4
    1458:	mov	x2, x24
    145c:	bl	cb0 <memcpy@plt>
    1460:	mov	x23, x0
    1464:	str	x0, [x29, #104]
    1468:	ldr	x0, [x29, #144]
    146c:	str	xzr, [x29, #120]
    1470:	tst	x0, #0x3
    1474:	b.eq	14b0 <crypt@@GLIBC_2.17+0x218>  // b.none
    1478:	ldp	x2, x1, [x29, #136]
    147c:	add	x0, x2, #0x13
    1480:	and	x0, x0, #0xfffffffffffffff0
    1484:	sub	sp, sp, x0
    1488:	add	x0, sp, #0x4
    148c:	bl	cb0 <memcpy@plt>
    1490:	str	x0, [x29, #120]
    1494:	str	x0, [x29, #144]
    1498:	b	14b0 <crypt@@GLIBC_2.17+0x218>
    149c:	ldr	x0, [x29, #144]
    14a0:	stp	xzr, xzr, [x29, #104]
    14a4:	str	xzr, [x29, #120]
    14a8:	tst	x0, #0x3
    14ac:	b.ne	1478 <crypt@@GLIBC_2.17+0x1e0>  // b.any
    14b0:	add	x20, x29, #0xa8
    14b4:	add	x21, x29, #0x1e8
    14b8:	mov	x0, x20
    14bc:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    14c0:	mov	x2, x20
    14c4:	mov	x1, x24
    14c8:	mov	x0, x23
    14cc:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    14d0:	mov	x2, x20
    14d4:	mov	x1, #0x3                   	// #3
    14d8:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    14dc:	add	x0, x0, #0x6b0
    14e0:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    14e4:	ldp	x25, x22, [x29, #136]
    14e8:	add	x3, x29, #0x148
    14ec:	mov	x2, x20
    14f0:	mov	x19, x3
    14f4:	str	x3, [x29, #96]
    14f8:	mov	x1, x25
    14fc:	mov	x0, x22
    1500:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1504:	mov	x0, x19
    1508:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    150c:	mov	x2, x19
    1510:	mov	x1, x24
    1514:	mov	x0, x23
    1518:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    151c:	mov	x2, x19
    1520:	mov	x1, x25
    1524:	mov	x0, x22
    1528:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    152c:	mov	x2, x19
    1530:	mov	x1, x24
    1534:	mov	x0, x23
    1538:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    153c:	mov	x0, x19
    1540:	mov	x1, x21
    1544:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    1548:	cmp	x24, #0x10
    154c:	b.ls	18f4 <crypt@@GLIBC_2.17+0x65c>  // b.plast
    1550:	mov	x19, x24
    1554:	nop
    1558:	sub	x19, x19, #0x10
    155c:	mov	x2, x20
    1560:	mov	x0, x21
    1564:	mov	x1, #0x10                  	// #16
    1568:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    156c:	cmp	x19, #0x10
    1570:	b.hi	1558 <crypt@@GLIBC_2.17+0x2c0>  // b.pmore
    1574:	sub	x1, x24, #0x11
    1578:	sub	x3, x24, #0x10
    157c:	mov	x2, x20
    1580:	mov	x0, x21
    1584:	neg	x1, x1, lsr #4
    1588:	add	x1, x3, x1, lsl #4
    158c:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1590:	strb	wzr, [x29, #488]
    1594:	mov	x19, x24
    1598:	tst	x19, #0x1
    159c:	mov	x2, x20
    15a0:	lsr	x19, x19, #1
    15a4:	csel	x0, x21, x23, ne  // ne = any
    15a8:	mov	x1, #0x1                   	// #1
    15ac:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    15b0:	cbnz	x19, 1598 <crypt@@GLIBC_2.17+0x300>
    15b4:	mov	x26, #0x6db7                	// #28087
    15b8:	mov	x25, #0x2492                	// #9362
    15bc:	movk	x26, #0xb6db, lsl #16
    15c0:	movk	x25, #0x9249, lsl #16
    15c4:	mov	x28, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    15c8:	movk	x26, #0xdb6d, lsl #32
    15cc:	movk	x25, #0x4924, lsl #32
    15d0:	mov	x1, x21
    15d4:	mov	x0, x20
    15d8:	mov	x19, #0x0                   	// #0
    15dc:	movk	x28, #0xaaab
    15e0:	mov	x27, #0x5555555555555555    	// #6148914691236517205
    15e4:	movk	x26, #0x6db6, lsl #48
    15e8:	movk	x25, #0x2492, lsl #48
    15ec:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    15f0:	b	1644 <crypt@@GLIBC_2.17+0x3ac>
    15f4:	mov	x0, x23
    15f8:	mov	x1, x24
    15fc:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1600:	mul	x0, x19, x28
    1604:	cmp	x0, x27
    1608:	b.hi	1670 <crypt@@GLIBC_2.17+0x3d8>  // b.pmore
    160c:	mul	x0, x19, x26
    1610:	cmp	x0, x25
    1614:	b.hi	1688 <crypt@@GLIBC_2.17+0x3f0>  // b.pmore
    1618:	mov	x2, x20
    161c:	cbz	x22, 16a0 <crypt@@GLIBC_2.17+0x408>
    1620:	mov	x0, x21
    1624:	mov	x1, #0x10                  	// #16
    1628:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    162c:	add	x19, x19, #0x1
    1630:	mov	x1, x21
    1634:	mov	x0, x20
    1638:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    163c:	cmp	x19, #0x3e8
    1640:	b.eq	16c4 <crypt@@GLIBC_2.17+0x42c>  // b.none
    1644:	mov	x0, x20
    1648:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    164c:	and	x22, x19, #0x1
    1650:	mov	x2, x20
    1654:	tbnz	w19, #0, 15f4 <crypt@@GLIBC_2.17+0x35c>
    1658:	mov	x0, x21
    165c:	mov	x1, #0x10                  	// #16
    1660:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1664:	mul	x0, x19, x28
    1668:	cmp	x0, x27
    166c:	b.ls	160c <crypt@@GLIBC_2.17+0x374>  // b.plast
    1670:	ldp	x1, x0, [x29, #136]
    1674:	mov	x2, x20
    1678:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    167c:	mul	x0, x19, x26
    1680:	cmp	x0, x25
    1684:	b.ls	1618 <crypt@@GLIBC_2.17+0x380>  // b.plast
    1688:	mov	x2, x20
    168c:	mov	x1, x24
    1690:	mov	x0, x23
    1694:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1698:	mov	x2, x20
    169c:	cbnz	x22, 1620 <crypt@@GLIBC_2.17+0x388>
    16a0:	mov	x1, x24
    16a4:	mov	x0, x23
    16a8:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    16ac:	add	x19, x19, #0x1
    16b0:	mov	x1, x21
    16b4:	mov	x0, x20
    16b8:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    16bc:	cmp	x19, #0x3e8
    16c0:	b.ne	1644 <crypt@@GLIBC_2.17+0x3ac>  // b.any
    16c4:	ldr	w2, [x29, #156]
    16c8:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    16cc:	add	x1, x0, #0x6b0
    16d0:	ldr	x0, [x29, #128]
    16d4:	cmp	w2, #0x0
    16d8:	csel	w2, w2, wzr, ge  // ge = tcont
    16dc:	sxtw	x2, w2
    16e0:	bl	d80 <__stpncpy@plt>
    16e4:	ldr	w2, [x29, #156]
    16e8:	ldp	x19, x1, [x29, #136]
    16ec:	subs	w2, w2, #0x3
    16f0:	str	w2, [x29, #156]
    16f4:	csel	w2, w2, wzr, pl  // pl = nfrst
    16f8:	str	x0, [x29, #160]
    16fc:	sxtw	x2, w2
    1700:	cmp	x2, x19
    1704:	csel	x2, x2, x19, ls  // ls = plast
    1708:	bl	d80 <__stpncpy@plt>
    170c:	str	x0, [x29, #160]
    1710:	ldr	w1, [x29, #156]
    1714:	cmp	w1, #0x0
    1718:	csel	w2, w1, wzr, ge  // ge = tcont
    171c:	sxtw	x2, w2
    1720:	cmp	x2, x19
    1724:	csel	x2, x2, x19, ls  // ls = plast
    1728:	sub	w1, w1, w2
    172c:	str	w1, [x29, #156]
    1730:	cmp	w1, #0x0
    1734:	b.le	1754 <crypt@@GLIBC_2.17+0x4bc>
    1738:	add	x1, x0, #0x1
    173c:	str	x1, [x29, #160]
    1740:	mov	w1, #0x24                  	// #36
    1744:	strb	w1, [x0]
    1748:	ldr	w0, [x29, #156]
    174c:	sub	w0, w0, #0x1
    1750:	str	w0, [x29, #156]
    1754:	ldrb	w4, [x29, #500]
    1758:	add	x22, x29, #0x9c
    175c:	ldrb	w3, [x29, #494]
    1760:	add	x19, x29, #0xa0
    1764:	ldrb	w2, [x29, #488]
    1768:	mov	x1, x22
    176c:	mov	x0, x19
    1770:	mov	w5, #0x4                   	// #4
    1774:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1778:	ldrb	w4, [x29, #501]
    177c:	mov	x1, x22
    1780:	ldrb	w3, [x29, #495]
    1784:	mov	x0, x19
    1788:	ldrb	w2, [x29, #489]
    178c:	mov	w5, #0x4                   	// #4
    1790:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1794:	ldrb	w4, [x29, #502]
    1798:	mov	x1, x22
    179c:	ldrb	w3, [x29, #496]
    17a0:	mov	x0, x19
    17a4:	ldrb	w2, [x29, #490]
    17a8:	mov	w5, #0x4                   	// #4
    17ac:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    17b0:	ldrb	w4, [x29, #503]
    17b4:	mov	x1, x22
    17b8:	ldrb	w3, [x29, #497]
    17bc:	mov	x0, x19
    17c0:	ldrb	w2, [x29, #491]
    17c4:	mov	w5, #0x4                   	// #4
    17c8:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    17cc:	ldrb	w4, [x29, #493]
    17d0:	mov	x1, x22
    17d4:	ldrb	w3, [x29, #498]
    17d8:	mov	x0, x19
    17dc:	ldrb	w2, [x29, #492]
    17e0:	mov	w5, #0x4                   	// #4
    17e4:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    17e8:	ldrb	w4, [x29, #499]
    17ec:	mov	x0, x19
    17f0:	mov	x1, x22
    17f4:	mov	w5, #0x2                   	// #2
    17f8:	mov	w3, #0x0                   	// #0
    17fc:	mov	w2, #0x0                   	// #0
    1800:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1804:	ldr	w0, [x29, #156]
    1808:	cmp	w0, #0x0
    180c:	b.le	18d8 <crypt@@GLIBC_2.17+0x640>
    1810:	ldr	x0, [x29, #160]
    1814:	ldr	x19, [x29, #128]
    1818:	strb	wzr, [x0]
    181c:	mov	x0, x20
    1820:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    1824:	mov	x1, x21
    1828:	mov	x0, x20
    182c:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    1830:	mov	x2, #0x9c                  	// #156
    1834:	mov	x0, x20
    1838:	mov	x1, x2
    183c:	bl	de0 <__explicit_bzero_chk@plt>
    1840:	ldr	x0, [x29, #96]
    1844:	mov	x2, #0x9c                  	// #156
    1848:	mov	x1, x2
    184c:	bl	de0 <__explicit_bzero_chk@plt>
    1850:	ldr	x0, [x29, #104]
    1854:	cbz	x0, 1864 <crypt@@GLIBC_2.17+0x5cc>
    1858:	mov	x1, x24
    185c:	mov	x2, #0xffffffffffffffff    	// #-1
    1860:	bl	de0 <__explicit_bzero_chk@plt>
    1864:	ldr	x0, [x29, #120]
    1868:	cbz	x0, 1878 <crypt@@GLIBC_2.17+0x5e0>
    186c:	ldr	x1, [x29, #136]
    1870:	mov	x2, #0xffffffffffffffff    	// #-1
    1874:	bl	de0 <__explicit_bzero_chk@plt>
    1878:	ldr	x0, [x29, #112]
    187c:	bl	dc0 <free@plt>
    1880:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    1884:	ldr	x0, [x0, #4048]
    1888:	ldr	x1, [x29, #504]
    188c:	ldr	x0, [x0]
    1890:	eor	x0, x1, x0
    1894:	cbnz	x0, 1928 <crypt@@GLIBC_2.17+0x690>
    1898:	mov	sp, x29
    189c:	mov	x0, x19
    18a0:	ldp	x29, x30, [sp]
    18a4:	ldp	x19, x20, [sp, #16]
    18a8:	ldp	x21, x22, [sp, #32]
    18ac:	ldp	x23, x24, [sp, #48]
    18b0:	ldp	x25, x26, [sp, #64]
    18b4:	ldp	x27, x28, [sp, #80]
    18b8:	add	sp, sp, #0x200
    18bc:	ret
    18c0:	ldrb	w2, [x4, #2]
    18c4:	add	x1, x4, #0x3
    18c8:	cmp	w0, w2
    18cc:	csel	x0, x1, x4, eq  // eq = none
    18d0:	str	x0, [x29, #144]
    18d4:	b	13ec <crypt@@GLIBC_2.17+0x154>
    18d8:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    18dc:	ldr	x0, [x0, #4008]
    18e0:	mrs	x1, tpidr_el0
    18e4:	mov	w2, #0x22                  	// #34
    18e8:	mov	x19, #0x0                   	// #0
    18ec:	str	w2, [x1, x0]
    18f0:	b	181c <crypt@@GLIBC_2.17+0x584>
    18f4:	mov	x2, x20
    18f8:	mov	x1, x24
    18fc:	mov	x0, x21
    1900:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    1904:	strb	wzr, [x29, #488]
    1908:	cbz	x24, 15b4 <crypt@@GLIBC_2.17+0x31c>
    190c:	b	1594 <crypt@@GLIBC_2.17+0x2fc>
    1910:	mov	x0, x19
    1914:	bl	d00 <malloc@plt>
    1918:	mov	x19, x0
    191c:	cbz	x0, 1880 <crypt@@GLIBC_2.17+0x5e8>
    1920:	str	x0, [x29, #112]
    1924:	b	1450 <crypt@@GLIBC_2.17+0x1b8>
    1928:	bl	d60 <__stack_chk_fail@plt>
    192c:	nop
    1930:	stp	x29, x30, [sp, #-64]!
    1934:	mov	x29, sp
    1938:	stp	x21, x22, [sp, #32]
    193c:	adrp	x22, 18000 <setkey@GLIBC_2.17+0x141e8>
    1940:	mov	x21, x0
    1944:	mov	x0, x1
    1948:	stp	x19, x20, [sp, #16]
    194c:	mov	x20, x1
    1950:	str	x23, [sp, #48]
    1954:	bl	cd0 <strlen@plt>
    1958:	ldr	w3, [x22, #240]
    195c:	adrp	x23, 18000 <setkey@GLIBC_2.17+0x141e8>
    1960:	add	w19, w0, #0x1f
    1964:	ldr	x2, [x23, #208]
    1968:	cmp	w3, w19
    196c:	b.ge	1990 <crypt@@GLIBC_2.17+0x6f8>  // b.tcont
    1970:	mov	x0, x2
    1974:	sxtw	x1, w19
    1978:	bl	d50 <realloc@plt>
    197c:	mov	x2, x0
    1980:	cbz	x0, 19ac <crypt@@GLIBC_2.17+0x714>
    1984:	mov	w3, w19
    1988:	str	x0, [x23, #208]
    198c:	str	w19, [x22, #240]
    1990:	mov	x1, x20
    1994:	mov	x0, x21
    1998:	ldp	x19, x20, [sp, #16]
    199c:	ldp	x21, x22, [sp, #32]
    19a0:	ldr	x23, [sp, #48]
    19a4:	ldp	x29, x30, [sp], #64
    19a8:	b	1388 <crypt@@GLIBC_2.17+0xf0>
    19ac:	ldp	x19, x20, [sp, #16]
    19b0:	ldp	x21, x22, [sp, #32]
    19b4:	ldr	x23, [sp, #48]
    19b8:	ldp	x29, x30, [sp], #64
    19bc:	ret
    19c0:	sub	sp, sp, #0x250
    19c4:	stp	x29, x30, [sp]
    19c8:	mov	x29, sp
    19cc:	stp	x25, x26, [sp, #64]
    19d0:	mov	x26, x1
    19d4:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    19d8:	str	w3, [x29, #156]
    19dc:	mov	x25, x0
    19e0:	ldr	x3, [x1, #4048]
    19e4:	stp	x19, x20, [sp, #16]
    19e8:	mov	w0, #0x24                  	// #36
    19ec:	stp	x21, x22, [sp, #32]
    19f0:	ldr	x4, [x3]
    19f4:	str	x4, [x29, #584]
    19f8:	mov	x4, #0x0                   	// #0
    19fc:	stp	x23, x24, [sp, #48]
    1a00:	stp	x27, x28, [sp, #80]
    1a04:	ldrb	w1, [x26]
    1a08:	str	x2, [x29, #128]
    1a0c:	cmp	w0, w1
    1a10:	b.ne	1a20 <crypt@@GLIBC_2.17+0x788>  // b.any
    1a14:	ldrb	w1, [x26, #1]
    1a18:	cmp	w1, #0x35
    1a1c:	b.eq	210c <crypt@@GLIBC_2.17+0xe74>  // b.none
    1a20:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    1a24:	mov	x2, #0x7                   	// #7
    1a28:	add	x1, x0, #0x6c0
    1a2c:	mov	x0, x26
    1a30:	str	wzr, [x29, #152]
    1a34:	bl	d10 <strncmp@plt>
    1a38:	mov	x1, #0x1388                	// #5000
    1a3c:	str	x1, [x29, #144]
    1a40:	cbz	w0, 217c <crypt@@GLIBC_2.17+0xee4>
    1a44:	mov	x0, x26
    1a48:	adrp	x1, 5000 <setkey@GLIBC_2.17+0x11e8>
    1a4c:	add	x1, x1, #0x6a8
    1a50:	bl	e10 <strcspn@plt>
    1a54:	mov	x23, x0
    1a58:	mov	x1, #0x10                  	// #16
    1a5c:	cmp	x23, x1
    1a60:	mov	x0, x25
    1a64:	csel	x23, x23, x1, cc  // cc = lo, ul, last
    1a68:	bl	cd0 <strlen@plt>
    1a6c:	mov	x21, x0
    1a70:	ands	x20, x25, #0x3
    1a74:	b.eq	1af8 <crypt@@GLIBC_2.17+0x860>  // b.none
    1a78:	add	x20, x0, #0x4
    1a7c:	mov	x0, x20
    1a80:	bl	e00 <__libc_alloca_cutoff@plt>
    1a84:	cmp	x20, #0x8, lsl #12
    1a88:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
    1a8c:	b.eq	2208 <crypt@@GLIBC_2.17+0xf70>  // b.none
    1a90:	add	x0, x21, #0x13
    1a94:	str	xzr, [x29, #112]
    1a98:	and	x0, x0, #0xfffffffffffffff0
    1a9c:	sub	sp, sp, x0
    1aa0:	mov	x0, sp
    1aa4:	mov	x1, x25
    1aa8:	add	x0, x0, #0x4
    1aac:	mov	x2, x21
    1ab0:	bl	cb0 <memcpy@plt>
    1ab4:	str	x0, [x29, #104]
    1ab8:	mov	x25, x0
    1abc:	str	xzr, [x29, #120]
    1ac0:	tst	x26, #0x3
    1ac4:	b.eq	1b08 <crypt@@GLIBC_2.17+0x870>  // b.none
    1ac8:	add	x0, x23, #0x13
    1acc:	add	x2, x23, #0x4
    1ad0:	and	x0, x0, #0xfffffffffffffff0
    1ad4:	mov	x1, x26
    1ad8:	sub	sp, sp, x0
    1adc:	add	x20, x20, x2
    1ae0:	add	x0, sp, #0x4
    1ae4:	mov	x2, x23
    1ae8:	bl	cb0 <memcpy@plt>
    1aec:	mov	x26, x0
    1af0:	str	x0, [x29, #120]
    1af4:	b	1b08 <crypt@@GLIBC_2.17+0x870>
    1af8:	stp	xzr, xzr, [x29, #104]
    1afc:	tst	x26, #0x3
    1b00:	str	xzr, [x29, #120]
    1b04:	b.ne	1ac8 <crypt@@GLIBC_2.17+0x830>  // b.any
    1b08:	add	x19, x29, #0xa8
    1b0c:	add	x24, x29, #0x158
    1b10:	mov	x0, x19
    1b14:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    1b18:	mov	x2, x19
    1b1c:	mov	x1, x21
    1b20:	mov	x0, x25
    1b24:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1b28:	mov	x2, x19
    1b2c:	mov	x1, x23
    1b30:	mov	x0, x26
    1b34:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1b38:	mov	x0, x24
    1b3c:	add	x22, x29, #0x208
    1b40:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    1b44:	mov	x2, x24
    1b48:	mov	x1, x21
    1b4c:	mov	x0, x25
    1b50:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1b54:	mov	x2, x24
    1b58:	mov	x1, x23
    1b5c:	mov	x0, x26
    1b60:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1b64:	mov	x2, x24
    1b68:	mov	x1, x21
    1b6c:	mov	x0, x25
    1b70:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1b74:	mov	x0, x24
    1b78:	mov	x1, x22
    1b7c:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1b80:	cmp	x21, #0x20
    1b84:	b.ls	21d0 <crypt@@GLIBC_2.17+0xf38>  // b.plast
    1b88:	mov	x27, x21
    1b8c:	nop
    1b90:	sub	x27, x27, #0x20
    1b94:	mov	x2, x19
    1b98:	mov	x0, x22
    1b9c:	mov	x1, #0x20                  	// #32
    1ba0:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1ba4:	cmp	x27, #0x20
    1ba8:	b.hi	1b90 <crypt@@GLIBC_2.17+0x8f8>  // b.pmore
    1bac:	sub	x3, x21, #0x21
    1bb0:	sub	x1, x21, #0x20
    1bb4:	mov	x2, x19
    1bb8:	mov	x0, x22
    1bbc:	neg	x3, x3, lsr #5
    1bc0:	add	x1, x1, x3, lsl #5
    1bc4:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1bc8:	mov	x27, x21
    1bcc:	b	1be4 <crypt@@GLIBC_2.17+0x94c>
    1bd0:	mov	x0, x22
    1bd4:	mov	x1, #0x20                  	// #32
    1bd8:	lsr	x27, x27, #1
    1bdc:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1be0:	cbz	x27, 1c00 <crypt@@GLIBC_2.17+0x968>
    1be4:	mov	x2, x19
    1be8:	tbnz	w27, #0, 1bd0 <crypt@@GLIBC_2.17+0x938>
    1bec:	mov	x1, x21
    1bf0:	mov	x0, x25
    1bf4:	lsr	x27, x27, #1
    1bf8:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1bfc:	cbnz	x27, 1be4 <crypt@@GLIBC_2.17+0x94c>
    1c00:	mov	x1, x22
    1c04:	mov	x0, x19
    1c08:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1c0c:	mov	x0, x24
    1c10:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    1c14:	nop
    1c18:	add	x27, x27, #0x1
    1c1c:	mov	x2, x24
    1c20:	mov	x1, x21
    1c24:	mov	x0, x25
    1c28:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1c2c:	cmp	x21, x27
    1c30:	b.hi	1c18 <crypt@@GLIBC_2.17+0x980>  // b.pmore
    1c34:	add	x25, x29, #0x228
    1c38:	add	x20, x20, x21
    1c3c:	mov	x1, x25
    1c40:	mov	x0, x24
    1c44:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1c48:	mov	x0, x20
    1c4c:	bl	e00 <__libc_alloca_cutoff@plt>
    1c50:	cmp	x20, #0x8, lsl #12
    1c54:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
    1c58:	b.eq	2220 <crypt@@GLIBC_2.17+0xf88>  // b.none
    1c5c:	add	x0, x21, #0xf
    1c60:	str	xzr, [x29, #96]
    1c64:	and	x0, x0, #0xfffffffffffffff0
    1c68:	sub	sp, sp, x0
    1c6c:	mov	x27, sp
    1c70:	str	x27, [x29, #160]
    1c74:	cmp	x21, #0x1f
    1c78:	b.ls	21fc <crypt@@GLIBC_2.17+0xf64>  // b.plast
    1c7c:	sub	x4, x21, #0x20
    1c80:	mov	x0, x27
    1c84:	and	x1, x4, #0xffffffffffffffe0
    1c88:	add	x1, x1, #0x20
    1c8c:	add	x1, x27, x1
    1c90:	ldp	x2, x3, [x25]
    1c94:	stp	x2, x3, [x0]
    1c98:	add	x0, x0, #0x20
    1c9c:	ldp	x2, x3, [x25, #16]
    1ca0:	stp	x2, x3, [x0, #-16]
    1ca4:	cmp	x1, x0
    1ca8:	str	x0, [x29, #160]
    1cac:	b.ne	1c90 <crypt@@GLIBC_2.17+0x9f8>  // b.any
    1cb0:	and	x0, x4, #0xffffffffffffffe0
    1cb4:	and	x2, x21, #0x1f
    1cb8:	add	x0, x0, #0x20
    1cbc:	add	x0, x27, x0
    1cc0:	mov	x1, x25
    1cc4:	bl	cb0 <memcpy@plt>
    1cc8:	mov	x0, x24
    1ccc:	mov	x20, #0x0                   	// #0
    1cd0:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    1cd4:	nop
    1cd8:	mov	x0, x26
    1cdc:	mov	x2, x24
    1ce0:	mov	x1, x23
    1ce4:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1ce8:	ldrb	w0, [x29, #520]
    1cec:	add	x20, x20, #0x1
    1cf0:	add	x0, x0, #0x10
    1cf4:	cmp	x0, x20
    1cf8:	b.hi	1cd8 <crypt@@GLIBC_2.17+0xa40>  // b.pmore
    1cfc:	mov	x1, x25
    1d00:	mov	x0, x24
    1d04:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1d08:	mov	x20, #0x0                   	// #0
    1d0c:	add	x0, x23, #0xf
    1d10:	mov	x2, x23
    1d14:	and	x0, x0, #0xfffffffffffffff0
    1d18:	mov	x1, x25
    1d1c:	sub	sp, sp, x0
    1d20:	mov	x0, sp
    1d24:	str	x0, [x29, #136]
    1d28:	str	x0, [x29, #160]
    1d2c:	bl	cb0 <memcpy@plt>
    1d30:	b	1db4 <crypt@@GLIBC_2.17+0xb1c>
    1d34:	mov	x1, x21
    1d38:	mov	x0, x27
    1d3c:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1d40:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1d44:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    1d48:	movk	x0, #0xaaab
    1d4c:	mul	x0, x20, x0
    1d50:	cmp	x0, x1
    1d54:	b.hi	1dec <crypt@@GLIBC_2.17+0xb54>  // b.pmore
    1d58:	mov	x0, #0x6db7                	// #28087
    1d5c:	mov	x1, #0x2492                	// #9362
    1d60:	movk	x0, #0xb6db, lsl #16
    1d64:	movk	x1, #0x9249, lsl #16
    1d68:	movk	x0, #0xdb6d, lsl #32
    1d6c:	movk	x1, #0x4924, lsl #32
    1d70:	movk	x0, #0x6db6, lsl #48
    1d74:	movk	x1, #0x2492, lsl #48
    1d78:	mul	x0, x20, x0
    1d7c:	cmp	x0, x1
    1d80:	b.hi	20f8 <crypt@@GLIBC_2.17+0xe60>  // b.pmore
    1d84:	mov	x2, x19
    1d88:	cbz	x28, 1e00 <crypt@@GLIBC_2.17+0xb68>
    1d8c:	mov	x0, x22
    1d90:	mov	x1, #0x20                  	// #32
    1d94:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1d98:	add	x20, x20, #0x1
    1d9c:	mov	x1, x22
    1da0:	mov	x0, x19
    1da4:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1da8:	ldr	x0, [x29, #144]
    1dac:	cmp	x0, x20
    1db0:	b.eq	1e28 <crypt@@GLIBC_2.17+0xb90>  // b.none
    1db4:	mov	x0, x19
    1db8:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    1dbc:	and	x28, x20, #0x1
    1dc0:	mov	x2, x19
    1dc4:	tbnz	w20, #0, 1d34 <crypt@@GLIBC_2.17+0xa9c>
    1dc8:	mov	x0, x22
    1dcc:	mov	x1, #0x20                  	// #32
    1dd0:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1dd4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1dd8:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    1ddc:	movk	x0, #0xaaab
    1de0:	mul	x0, x20, x0
    1de4:	cmp	x0, x1
    1de8:	b.ls	1d58 <crypt@@GLIBC_2.17+0xac0>  // b.plast
    1dec:	ldr	x0, [x29, #136]
    1df0:	mov	x2, x19
    1df4:	mov	x1, x23
    1df8:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1dfc:	b	1d58 <crypt@@GLIBC_2.17+0xac0>
    1e00:	mov	x1, x21
    1e04:	mov	x0, x27
    1e08:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    1e0c:	add	x20, x20, #0x1
    1e10:	mov	x1, x22
    1e14:	mov	x0, x19
    1e18:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    1e1c:	ldr	x0, [x29, #144]
    1e20:	cmp	x0, x20
    1e24:	b.ne	1db4 <crypt@@GLIBC_2.17+0xb1c>  // b.any
    1e28:	ldr	w2, [x29, #156]
    1e2c:	adrp	x1, 5000 <setkey@GLIBC_2.17+0x11e8>
    1e30:	ldr	x0, [x29, #128]
    1e34:	cmp	w2, #0x0
    1e38:	csel	w2, w2, wzr, ge  // ge = tcont
    1e3c:	add	x1, x1, #0x6c8
    1e40:	sxtw	x2, w2
    1e44:	bl	d80 <__stpncpy@plt>
    1e48:	ldp	w1, w2, [x29, #152]
    1e4c:	str	x0, [x29, #160]
    1e50:	mov	x3, x0
    1e54:	sub	w2, w2, #0x3
    1e58:	str	w2, [x29, #156]
    1e5c:	cbnz	w1, 213c <crypt@@GLIBC_2.17+0xea4>
    1e60:	cmp	w2, #0x0
    1e64:	mov	x1, x26
    1e68:	csel	w2, w2, wzr, ge  // ge = tcont
    1e6c:	mov	x0, x3
    1e70:	sxtw	x2, w2
    1e74:	cmp	x2, x23
    1e78:	csel	x2, x2, x23, ls  // ls = plast
    1e7c:	bl	d80 <__stpncpy@plt>
    1e80:	str	x0, [x29, #160]
    1e84:	ldr	w1, [x29, #156]
    1e88:	cmp	w1, #0x0
    1e8c:	csel	w2, w1, wzr, ge  // ge = tcont
    1e90:	sxtw	x2, w2
    1e94:	cmp	x2, x23
    1e98:	csel	x2, x2, x23, ls  // ls = plast
    1e9c:	sub	w1, w1, w2
    1ea0:	str	w1, [x29, #156]
    1ea4:	cmp	w1, #0x0
    1ea8:	b.le	1ec8 <crypt@@GLIBC_2.17+0xc30>
    1eac:	add	x1, x0, #0x1
    1eb0:	str	x1, [x29, #160]
    1eb4:	mov	w1, #0x24                  	// #36
    1eb8:	strb	w1, [x0]
    1ebc:	ldr	w0, [x29, #156]
    1ec0:	sub	w0, w0, #0x1
    1ec4:	str	w0, [x29, #156]
    1ec8:	ldrb	w4, [x29, #540]
    1ecc:	add	x26, x29, #0x9c
    1ed0:	ldrb	w3, [x29, #530]
    1ed4:	add	x20, x29, #0xa0
    1ed8:	ldrb	w2, [x29, #520]
    1edc:	mov	x1, x26
    1ee0:	mov	x0, x20
    1ee4:	mov	w5, #0x4                   	// #4
    1ee8:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1eec:	ldrb	w4, [x29, #531]
    1ef0:	mov	x1, x26
    1ef4:	ldrb	w3, [x29, #521]
    1ef8:	mov	x0, x20
    1efc:	ldrb	w2, [x29, #541]
    1f00:	mov	w5, #0x4                   	// #4
    1f04:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f08:	ldrb	w4, [x29, #522]
    1f0c:	mov	x1, x26
    1f10:	ldrb	w3, [x29, #542]
    1f14:	mov	x0, x20
    1f18:	ldrb	w2, [x29, #532]
    1f1c:	mov	w5, #0x4                   	// #4
    1f20:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f24:	ldrb	w4, [x29, #543]
    1f28:	mov	x1, x26
    1f2c:	ldrb	w3, [x29, #533]
    1f30:	mov	x0, x20
    1f34:	ldrb	w2, [x29, #523]
    1f38:	mov	w5, #0x4                   	// #4
    1f3c:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f40:	ldrb	w4, [x29, #534]
    1f44:	mov	x1, x26
    1f48:	ldrb	w3, [x29, #524]
    1f4c:	mov	x0, x20
    1f50:	ldrb	w2, [x29, #544]
    1f54:	mov	w5, #0x4                   	// #4
    1f58:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f5c:	ldrb	w4, [x29, #525]
    1f60:	mov	x1, x26
    1f64:	ldrb	w3, [x29, #545]
    1f68:	mov	x0, x20
    1f6c:	ldrb	w2, [x29, #535]
    1f70:	mov	w5, #0x4                   	// #4
    1f74:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f78:	ldrb	w4, [x29, #546]
    1f7c:	mov	x1, x26
    1f80:	ldrb	w3, [x29, #536]
    1f84:	mov	x0, x20
    1f88:	ldrb	w2, [x29, #526]
    1f8c:	mov	w5, #0x4                   	// #4
    1f90:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1f94:	ldrb	w4, [x29, #537]
    1f98:	mov	x1, x26
    1f9c:	ldrb	w3, [x29, #527]
    1fa0:	mov	x0, x20
    1fa4:	ldrb	w2, [x29, #547]
    1fa8:	mov	w5, #0x4                   	// #4
    1fac:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1fb0:	ldrb	w4, [x29, #528]
    1fb4:	mov	x1, x26
    1fb8:	ldrb	w3, [x29, #548]
    1fbc:	mov	x0, x20
    1fc0:	ldrb	w2, [x29, #538]
    1fc4:	mov	w5, #0x4                   	// #4
    1fc8:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1fcc:	ldrb	w4, [x29, #549]
    1fd0:	mov	x1, x26
    1fd4:	ldrb	w3, [x29, #539]
    1fd8:	mov	x0, x20
    1fdc:	ldrb	w2, [x29, #529]
    1fe0:	mov	w5, #0x4                   	// #4
    1fe4:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    1fe8:	ldrb	w4, [x29, #550]
    1fec:	mov	x0, x20
    1ff0:	ldrb	w3, [x29, #551]
    1ff4:	mov	x1, x26
    1ff8:	mov	w5, #0x3                   	// #3
    1ffc:	mov	w2, #0x0                   	// #0
    2000:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2004:	ldr	w0, [x29, #156]
    2008:	cmp	w0, #0x0
    200c:	b.le	2120 <crypt@@GLIBC_2.17+0xe88>
    2010:	ldr	x0, [x29, #160]
    2014:	ldr	x20, [x29, #128]
    2018:	strb	wzr, [x0]
    201c:	mov	x0, x19
    2020:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    2024:	mov	x1, x22
    2028:	mov	x0, x19
    202c:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    2030:	mov	x2, #0xb0                  	// #176
    2034:	mov	x0, x19
    2038:	mov	x1, x2
    203c:	bl	de0 <__explicit_bzero_chk@plt>
    2040:	mov	x2, #0xb0                  	// #176
    2044:	mov	x0, x24
    2048:	mov	x1, x2
    204c:	bl	de0 <__explicit_bzero_chk@plt>
    2050:	mov	x2, #0x20                  	// #32
    2054:	mov	x0, x25
    2058:	mov	x1, x2
    205c:	bl	de0 <__explicit_bzero_chk@plt>
    2060:	mov	x0, x27
    2064:	mov	x1, x21
    2068:	mov	x2, #0xffffffffffffffff    	// #-1
    206c:	bl	de0 <__explicit_bzero_chk@plt>
    2070:	ldr	x0, [x29, #136]
    2074:	mov	x1, x23
    2078:	mov	x2, #0xffffffffffffffff    	// #-1
    207c:	bl	de0 <__explicit_bzero_chk@plt>
    2080:	ldr	x0, [x29, #104]
    2084:	cbz	x0, 2094 <crypt@@GLIBC_2.17+0xdfc>
    2088:	mov	x1, x21
    208c:	mov	x2, #0xffffffffffffffff    	// #-1
    2090:	bl	de0 <__explicit_bzero_chk@plt>
    2094:	ldr	x0, [x29, #120]
    2098:	cbz	x0, 20a8 <crypt@@GLIBC_2.17+0xe10>
    209c:	mov	x1, x23
    20a0:	mov	x2, #0xffffffffffffffff    	// #-1
    20a4:	bl	de0 <__explicit_bzero_chk@plt>
    20a8:	ldr	x0, [x29, #112]
    20ac:	bl	dc0 <free@plt>
    20b0:	ldr	x0, [x29, #96]
    20b4:	bl	dc0 <free@plt>
    20b8:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    20bc:	ldr	x0, [x0, #4048]
    20c0:	ldr	x1, [x29, #584]
    20c4:	ldr	x0, [x0]
    20c8:	eor	x0, x1, x0
    20cc:	cbnz	x0, 223c <crypt@@GLIBC_2.17+0xfa4>
    20d0:	mov	sp, x29
    20d4:	mov	x0, x20
    20d8:	ldp	x29, x30, [sp]
    20dc:	ldp	x19, x20, [sp, #16]
    20e0:	ldp	x21, x22, [sp, #32]
    20e4:	ldp	x23, x24, [sp, #48]
    20e8:	ldp	x25, x26, [sp, #64]
    20ec:	ldp	x27, x28, [sp, #80]
    20f0:	add	sp, sp, #0x250
    20f4:	ret
    20f8:	mov	x2, x19
    20fc:	mov	x1, x21
    2100:	mov	x0, x27
    2104:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    2108:	b	1d84 <crypt@@GLIBC_2.17+0xaec>
    210c:	ldrb	w2, [x26, #2]
    2110:	add	x1, x26, #0x3
    2114:	cmp	w0, w2
    2118:	csel	x26, x1, x26, eq  // eq = none
    211c:	b	1a20 <crypt@@GLIBC_2.17+0x788>
    2120:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    2124:	ldr	x0, [x0, #4008]
    2128:	mrs	x1, tpidr_el0
    212c:	mov	w2, #0x22                  	// #34
    2130:	mov	x20, #0x0                   	// #0
    2134:	str	w2, [x1, x0]
    2138:	b	201c <crypt@@GLIBC_2.17+0xd84>
    213c:	ldr	x4, [x29, #144]
    2140:	cmp	w2, #0x0
    2144:	csel	w1, w2, wzr, ge  // ge = tcont
    2148:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    214c:	add	x3, x2, #0x6c0
    2150:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    2154:	sxtw	x1, w1
    2158:	add	x2, x2, #0x6b8
    215c:	bl	dd0 <__snprintf@plt>
    2160:	ldr	x3, [x29, #160]
    2164:	ldr	w2, [x29, #156]
    2168:	add	x3, x3, w0, sxtw
    216c:	sub	w2, w2, w0
    2170:	str	w2, [x29, #156]
    2174:	str	x3, [x29, #160]
    2178:	b	1e60 <crypt@@GLIBC_2.17+0xbc8>
    217c:	add	x1, x29, #0xa0
    2180:	mov	w2, #0xa                   	// #10
    2184:	add	x0, x26, #0x7
    2188:	bl	cc0 <strtoul@plt>
    218c:	ldr	x1, [x29, #160]
    2190:	ldrb	w2, [x1]
    2194:	cmp	w2, #0x24
    2198:	b.ne	1a44 <crypt@@GLIBC_2.17+0x7ac>  // b.any
    219c:	mov	x2, #0xc9ff                	// #51711
    21a0:	add	x26, x1, #0x1
    21a4:	movk	x2, #0x3b9a, lsl #16
    21a8:	cmp	x0, x2
    21ac:	csel	x0, x0, x2, ls  // ls = plast
    21b0:	mov	x1, x0
    21b4:	cmp	x0, #0x3e8
    21b8:	mov	x0, #0x3e8                 	// #1000
    21bc:	csel	x0, x1, x0, cs  // cs = hs, nlast
    21c0:	str	x0, [x29, #144]
    21c4:	mov	w0, #0x1                   	// #1
    21c8:	str	w0, [x29, #152]
    21cc:	b	1a44 <crypt@@GLIBC_2.17+0x7ac>
    21d0:	mov	x2, x19
    21d4:	mov	x1, x21
    21d8:	mov	x0, x22
    21dc:	bl	5010 <setkey@GLIBC_2.17+0x11f8>
    21e0:	cbnz	x21, 1bc8 <crypt@@GLIBC_2.17+0x930>
    21e4:	mov	x1, x22
    21e8:	mov	x0, x19
    21ec:	bl	4f50 <setkey@GLIBC_2.17+0x1138>
    21f0:	mov	x0, x24
    21f4:	bl	4cd8 <setkey@GLIBC_2.17+0xec0>
    21f8:	b	1c34 <crypt@@GLIBC_2.17+0x99c>
    21fc:	mov	x0, x27
    2200:	mov	x2, x21
    2204:	b	1cc0 <crypt@@GLIBC_2.17+0xa28>
    2208:	mov	x0, x20
    220c:	bl	d00 <malloc@plt>
    2210:	str	x0, [x29, #112]
    2214:	mov	x20, #0x0                   	// #0
    2218:	cbnz	x0, 1aa4 <crypt@@GLIBC_2.17+0x80c>
    221c:	b	20b8 <crypt@@GLIBC_2.17+0xe20>
    2220:	mov	x0, x21
    2224:	bl	d00 <malloc@plt>
    2228:	str	x0, [x29, #160]
    222c:	mov	x27, x0
    2230:	cbz	x0, 2240 <crypt@@GLIBC_2.17+0xfa8>
    2234:	str	x0, [x29, #96]
    2238:	b	1c74 <crypt@@GLIBC_2.17+0x9dc>
    223c:	bl	d60 <__stack_chk_fail@plt>
    2240:	ldr	x0, [x29, #112]
    2244:	mov	x20, #0x0                   	// #0
    2248:	bl	dc0 <free@plt>
    224c:	b	20b8 <crypt@@GLIBC_2.17+0xe20>
    2250:	stp	x29, x30, [sp, #-64]!
    2254:	mov	x29, sp
    2258:	stp	x21, x22, [sp, #32]
    225c:	adrp	x22, 18000 <setkey@GLIBC_2.17+0x141e8>
    2260:	mov	x21, x0
    2264:	mov	x0, x1
    2268:	stp	x19, x20, [sp, #16]
    226c:	mov	x20, x1
    2270:	str	x23, [sp, #48]
    2274:	bl	cd0 <strlen@plt>
    2278:	ldr	w3, [x22, #244]
    227c:	adrp	x23, 18000 <setkey@GLIBC_2.17+0x141e8>
    2280:	add	w19, w0, #0x42
    2284:	ldr	x2, [x23, #216]
    2288:	cmp	w3, w19
    228c:	b.ge	22b0 <crypt@@GLIBC_2.17+0x1018>  // b.tcont
    2290:	mov	x0, x2
    2294:	sxtw	x1, w19
    2298:	bl	d50 <realloc@plt>
    229c:	mov	x2, x0
    22a0:	cbz	x0, 22cc <crypt@@GLIBC_2.17+0x1034>
    22a4:	mov	w3, w19
    22a8:	str	x0, [x23, #216]
    22ac:	str	w19, [x22, #244]
    22b0:	mov	x1, x20
    22b4:	mov	x0, x21
    22b8:	ldp	x19, x20, [sp, #16]
    22bc:	ldp	x21, x22, [sp, #32]
    22c0:	ldr	x23, [sp, #48]
    22c4:	ldp	x29, x30, [sp], #64
    22c8:	b	19c0 <crypt@@GLIBC_2.17+0x728>
    22cc:	ldp	x19, x20, [sp, #16]
    22d0:	ldp	x21, x22, [sp, #32]
    22d4:	ldr	x23, [sp, #48]
    22d8:	ldp	x29, x30, [sp], #64
    22dc:	ret
    22e0:	sub	sp, sp, #0x400
    22e4:	stp	x29, x30, [sp]
    22e8:	mov	x29, sp
    22ec:	stp	x25, x26, [sp, #64]
    22f0:	mov	x26, x1
    22f4:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    22f8:	str	w3, [x29, #156]
    22fc:	ldr	x3, [x1, #4048]
    2300:	stp	x19, x20, [sp, #16]
    2304:	stp	x21, x22, [sp, #32]
    2308:	ldr	x4, [x3]
    230c:	str	x4, [x29, #1016]
    2310:	mov	x4, #0x0                   	// #0
    2314:	mov	x22, x0
    2318:	stp	x23, x24, [sp, #48]
    231c:	mov	w0, #0x24                  	// #36
    2320:	stp	x27, x28, [sp, #80]
    2324:	ldrb	w1, [x26]
    2328:	str	x2, [x29, #128]
    232c:	cmp	w0, w1
    2330:	b.ne	2340 <crypt@@GLIBC_2.17+0x10a8>  // b.any
    2334:	ldrb	w1, [x26, #1]
    2338:	cmp	w1, #0x36
    233c:	b.eq	2b70 <crypt@@GLIBC_2.17+0x18d8>  // b.none
    2340:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    2344:	mov	x2, #0x7                   	// #7
    2348:	add	x1, x0, #0x6c0
    234c:	mov	x0, x26
    2350:	str	wzr, [x29, #152]
    2354:	bl	d10 <strncmp@plt>
    2358:	mov	x1, #0x1388                	// #5000
    235c:	str	x1, [x29, #144]
    2360:	cbz	w0, 2be0 <crypt@@GLIBC_2.17+0x1948>
    2364:	mov	x0, x26
    2368:	adrp	x1, 5000 <setkey@GLIBC_2.17+0x11e8>
    236c:	add	x1, x1, #0x6a8
    2370:	bl	e10 <strcspn@plt>
    2374:	mov	x25, x0
    2378:	mov	x1, #0x10                  	// #16
    237c:	cmp	x25, x1
    2380:	mov	x0, x22
    2384:	csel	x25, x25, x1, cc  // cc = lo, ul, last
    2388:	bl	cd0 <strlen@plt>
    238c:	mov	x21, x0
    2390:	tst	x22, #0x7
    2394:	b.eq	2414 <crypt@@GLIBC_2.17+0x117c>  // b.none
    2398:	add	x20, x0, #0x8
    239c:	mov	x0, x20
    23a0:	bl	e00 <__libc_alloca_cutoff@plt>
    23a4:	cmp	x20, #0x8, lsl #12
    23a8:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
    23ac:	b.eq	2c6c <crypt@@GLIBC_2.17+0x19d4>  // b.none
    23b0:	add	x0, x21, #0x17
    23b4:	add	x20, x20, x21
    23b8:	and	x0, x0, #0xfffffffffffffff0
    23bc:	str	xzr, [x29, #112]
    23c0:	sub	sp, sp, x0
    23c4:	mov	x0, sp
    23c8:	mov	x1, x22
    23cc:	add	x0, x0, #0x8
    23d0:	mov	x2, x21
    23d4:	bl	cb0 <memcpy@plt>
    23d8:	str	x0, [x29, #104]
    23dc:	mov	x22, x0
    23e0:	str	xzr, [x29, #120]
    23e4:	tst	x26, #0x7
    23e8:	b.eq	2428 <crypt@@GLIBC_2.17+0x1190>  // b.none
    23ec:	add	x0, x25, #0x17
    23f0:	mov	x1, x26
    23f4:	and	x0, x0, #0xfffffffffffffff0
    23f8:	mov	x2, x25
    23fc:	sub	sp, sp, x0
    2400:	add	x0, sp, #0x8
    2404:	bl	cb0 <memcpy@plt>
    2408:	mov	x26, x0
    240c:	str	x0, [x29, #120]
    2410:	b	2428 <crypt@@GLIBC_2.17+0x1190>
    2414:	stp	xzr, xzr, [x29, #104]
    2418:	mov	x20, x0
    241c:	tst	x26, #0x7
    2420:	str	xzr, [x29, #120]
    2424:	b.ne	23ec <crypt@@GLIBC_2.17+0x1154>  // b.any
    2428:	add	x19, x29, #0xb0
    242c:	add	x24, x29, #0x210
    2430:	mov	x0, x19
    2434:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2438:	mov	x2, x19
    243c:	mov	x1, x21
    2440:	mov	x0, x22
    2444:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2448:	mov	x2, x19
    244c:	mov	x1, x25
    2450:	mov	x0, x26
    2454:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2458:	mov	x0, x24
    245c:	add	x23, x29, #0x378
    2460:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2464:	mov	x2, x24
    2468:	mov	x1, x21
    246c:	mov	x0, x22
    2470:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2474:	mov	x2, x24
    2478:	mov	x1, x25
    247c:	mov	x0, x26
    2480:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2484:	mov	x2, x24
    2488:	mov	x1, x21
    248c:	mov	x0, x22
    2490:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2494:	mov	x0, x24
    2498:	mov	x1, x23
    249c:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    24a0:	cmp	x21, #0x40
    24a4:	b.ls	2c34 <crypt@@GLIBC_2.17+0x199c>  // b.plast
    24a8:	mov	x27, x21
    24ac:	nop
    24b0:	sub	x27, x27, #0x40
    24b4:	mov	x2, x19
    24b8:	mov	x0, x23
    24bc:	mov	x1, #0x40                  	// #64
    24c0:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    24c4:	cmp	x27, #0x40
    24c8:	b.hi	24b0 <crypt@@GLIBC_2.17+0x1218>  // b.pmore
    24cc:	sub	x3, x21, #0x41
    24d0:	sub	x1, x21, #0x40
    24d4:	mov	x2, x19
    24d8:	mov	x0, x23
    24dc:	neg	x3, x3, lsr #6
    24e0:	add	x1, x1, x3, lsl #6
    24e4:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    24e8:	mov	x27, x21
    24ec:	b	2504 <crypt@@GLIBC_2.17+0x126c>
    24f0:	mov	x0, x23
    24f4:	mov	x1, #0x40                  	// #64
    24f8:	lsr	x27, x27, #1
    24fc:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2500:	cbz	x27, 2520 <crypt@@GLIBC_2.17+0x1288>
    2504:	mov	x2, x19
    2508:	tbnz	w27, #0, 24f0 <crypt@@GLIBC_2.17+0x1258>
    250c:	mov	x1, x21
    2510:	mov	x0, x22
    2514:	lsr	x27, x27, #1
    2518:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    251c:	cbnz	x27, 2504 <crypt@@GLIBC_2.17+0x126c>
    2520:	mov	x1, x23
    2524:	mov	x0, x19
    2528:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    252c:	mov	x0, x24
    2530:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2534:	nop
    2538:	add	x27, x27, #0x1
    253c:	mov	x2, x24
    2540:	mov	x1, x21
    2544:	mov	x0, x22
    2548:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    254c:	cmp	x21, x27
    2550:	b.hi	2538 <crypt@@GLIBC_2.17+0x12a0>  // b.pmore
    2554:	add	x22, x29, #0x3b8
    2558:	mov	x0, x24
    255c:	mov	x1, x22
    2560:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    2564:	mov	x0, x20
    2568:	bl	e00 <__libc_alloca_cutoff@plt>
    256c:	cmp	x20, #0x8, lsl #12
    2570:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
    2574:	b.eq	2c84 <crypt@@GLIBC_2.17+0x19ec>  // b.none
    2578:	add	x0, x21, #0xf
    257c:	str	xzr, [x29, #96]
    2580:	and	x0, x0, #0xfffffffffffffff0
    2584:	sub	sp, sp, x0
    2588:	mov	x27, sp
    258c:	str	x27, [x29, #168]
    2590:	cmp	x21, #0x3f
    2594:	b.ls	2c60 <crypt@@GLIBC_2.17+0x19c8>  // b.plast
    2598:	sub	x4, x21, #0x40
    259c:	mov	x0, x27
    25a0:	and	x1, x4, #0xffffffffffffffc0
    25a4:	add	x1, x1, #0x40
    25a8:	add	x1, x27, x1
    25ac:	nop
    25b0:	ldp	x2, x3, [x22]
    25b4:	stp	x2, x3, [x0]
    25b8:	add	x0, x0, #0x40
    25bc:	ldp	x2, x3, [x22, #16]
    25c0:	stp	x2, x3, [x0, #-48]
    25c4:	ldp	x2, x3, [x22, #32]
    25c8:	stp	x2, x3, [x0, #-32]
    25cc:	ldp	x2, x3, [x22, #48]
    25d0:	stp	x2, x3, [x0, #-16]
    25d4:	cmp	x1, x0
    25d8:	str	x0, [x29, #168]
    25dc:	b.ne	25b0 <crypt@@GLIBC_2.17+0x1318>  // b.any
    25e0:	and	x0, x4, #0xffffffffffffffc0
    25e4:	and	x2, x21, #0x3f
    25e8:	add	x0, x0, #0x40
    25ec:	add	x0, x27, x0
    25f0:	mov	x1, x22
    25f4:	bl	cb0 <memcpy@plt>
    25f8:	mov	x0, x24
    25fc:	mov	x20, #0x0                   	// #0
    2600:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2604:	nop
    2608:	mov	x0, x26
    260c:	mov	x2, x24
    2610:	mov	x1, x25
    2614:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2618:	ldrb	w0, [x29, #888]
    261c:	add	x20, x20, #0x1
    2620:	add	x0, x0, #0x10
    2624:	cmp	x0, x20
    2628:	b.hi	2608 <crypt@@GLIBC_2.17+0x1370>  // b.pmore
    262c:	mov	x1, x22
    2630:	mov	x0, x24
    2634:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    2638:	mov	x20, #0x0                   	// #0
    263c:	add	x0, x25, #0xf
    2640:	mov	x2, x25
    2644:	and	x0, x0, #0xfffffffffffffff0
    2648:	mov	x1, x22
    264c:	sub	sp, sp, x0
    2650:	mov	x0, sp
    2654:	str	x0, [x29, #136]
    2658:	str	x0, [x29, #168]
    265c:	bl	cb0 <memcpy@plt>
    2660:	b	26e4 <crypt@@GLIBC_2.17+0x144c>
    2664:	mov	x1, x21
    2668:	mov	x0, x27
    266c:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2670:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2674:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    2678:	movk	x0, #0xaaab
    267c:	mul	x0, x20, x0
    2680:	cmp	x0, x1
    2684:	b.hi	271c <crypt@@GLIBC_2.17+0x1484>  // b.pmore
    2688:	mov	x0, #0x6db7                	// #28087
    268c:	mov	x1, #0x2492                	// #9362
    2690:	movk	x0, #0xb6db, lsl #16
    2694:	movk	x1, #0x9249, lsl #16
    2698:	movk	x0, #0xdb6d, lsl #32
    269c:	movk	x1, #0x4924, lsl #32
    26a0:	movk	x0, #0x6db6, lsl #48
    26a4:	movk	x1, #0x2492, lsl #48
    26a8:	mul	x0, x20, x0
    26ac:	cmp	x0, x1
    26b0:	b.hi	2b5c <crypt@@GLIBC_2.17+0x18c4>  // b.pmore
    26b4:	mov	x2, x19
    26b8:	cbz	x28, 2730 <crypt@@GLIBC_2.17+0x1498>
    26bc:	mov	x0, x23
    26c0:	mov	x1, #0x40                  	// #64
    26c4:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    26c8:	add	x20, x20, #0x1
    26cc:	mov	x1, x23
    26d0:	mov	x0, x19
    26d4:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    26d8:	ldr	x0, [x29, #144]
    26dc:	cmp	x0, x20
    26e0:	b.eq	2758 <crypt@@GLIBC_2.17+0x14c0>  // b.none
    26e4:	mov	x0, x19
    26e8:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    26ec:	and	x28, x20, #0x1
    26f0:	mov	x2, x19
    26f4:	tbnz	w20, #0, 2664 <crypt@@GLIBC_2.17+0x13cc>
    26f8:	mov	x0, x23
    26fc:	mov	x1, #0x40                  	// #64
    2700:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2704:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2708:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    270c:	movk	x0, #0xaaab
    2710:	mul	x0, x20, x0
    2714:	cmp	x0, x1
    2718:	b.ls	2688 <crypt@@GLIBC_2.17+0x13f0>  // b.plast
    271c:	ldr	x0, [x29, #136]
    2720:	mov	x2, x19
    2724:	mov	x1, x25
    2728:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    272c:	b	2688 <crypt@@GLIBC_2.17+0x13f0>
    2730:	mov	x1, x21
    2734:	mov	x0, x27
    2738:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    273c:	add	x20, x20, #0x1
    2740:	mov	x1, x23
    2744:	mov	x0, x19
    2748:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    274c:	ldr	x0, [x29, #144]
    2750:	cmp	x0, x20
    2754:	b.ne	26e4 <crypt@@GLIBC_2.17+0x144c>  // b.any
    2758:	ldr	w2, [x29, #156]
    275c:	adrp	x1, 5000 <setkey@GLIBC_2.17+0x11e8>
    2760:	ldr	x0, [x29, #128]
    2764:	cmp	w2, #0x0
    2768:	csel	w2, w2, wzr, ge  // ge = tcont
    276c:	add	x1, x1, #0x6d0
    2770:	sxtw	x2, w2
    2774:	bl	d80 <__stpncpy@plt>
    2778:	ldp	w1, w2, [x29, #152]
    277c:	str	x0, [x29, #168]
    2780:	mov	x3, x0
    2784:	sub	w2, w2, #0x3
    2788:	str	w2, [x29, #156]
    278c:	cbnz	w1, 2ba0 <crypt@@GLIBC_2.17+0x1908>
    2790:	cmp	w2, #0x0
    2794:	mov	x1, x26
    2798:	csel	w2, w2, wzr, ge  // ge = tcont
    279c:	mov	x0, x3
    27a0:	sxtw	x2, w2
    27a4:	cmp	x2, x25
    27a8:	csel	x2, x2, x25, ls  // ls = plast
    27ac:	bl	d80 <__stpncpy@plt>
    27b0:	str	x0, [x29, #168]
    27b4:	ldr	w1, [x29, #156]
    27b8:	cmp	w1, #0x0
    27bc:	csel	w2, w1, wzr, ge  // ge = tcont
    27c0:	sxtw	x2, w2
    27c4:	cmp	x2, x25
    27c8:	csel	x2, x2, x25, ls  // ls = plast
    27cc:	sub	w1, w1, w2
    27d0:	str	w1, [x29, #156]
    27d4:	cmp	w1, #0x0
    27d8:	b.le	27f8 <crypt@@GLIBC_2.17+0x1560>
    27dc:	add	x1, x0, #0x1
    27e0:	str	x1, [x29, #168]
    27e4:	mov	w1, #0x24                  	// #36
    27e8:	strb	w1, [x0]
    27ec:	ldr	w0, [x29, #156]
    27f0:	sub	w0, w0, #0x1
    27f4:	str	w0, [x29, #156]
    27f8:	ldrb	w4, [x29, #930]
    27fc:	add	x20, x29, #0x9c
    2800:	ldrb	w3, [x29, #909]
    2804:	add	x26, x29, #0xa8
    2808:	ldrb	w2, [x29, #888]
    280c:	mov	x1, x20
    2810:	mov	x0, x26
    2814:	mov	w5, #0x4                   	// #4
    2818:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    281c:	ldrb	w4, [x29, #889]
    2820:	mov	x1, x20
    2824:	ldrb	w3, [x29, #931]
    2828:	mov	x0, x26
    282c:	ldrb	w2, [x29, #910]
    2830:	mov	w5, #0x4                   	// #4
    2834:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2838:	ldrb	w4, [x29, #911]
    283c:	mov	x1, x20
    2840:	ldrb	w3, [x29, #890]
    2844:	mov	x0, x26
    2848:	ldrb	w2, [x29, #932]
    284c:	mov	w5, #0x4                   	// #4
    2850:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2854:	ldrb	w4, [x29, #933]
    2858:	mov	x1, x20
    285c:	ldrb	w3, [x29, #912]
    2860:	mov	x0, x26
    2864:	ldrb	w2, [x29, #891]
    2868:	mov	w5, #0x4                   	// #4
    286c:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2870:	ldrb	w4, [x29, #892]
    2874:	mov	x1, x20
    2878:	ldrb	w3, [x29, #934]
    287c:	mov	x0, x26
    2880:	ldrb	w2, [x29, #913]
    2884:	mov	w5, #0x4                   	// #4
    2888:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    288c:	ldrb	w4, [x29, #914]
    2890:	mov	x1, x20
    2894:	ldrb	w3, [x29, #893]
    2898:	mov	x0, x26
    289c:	ldrb	w2, [x29, #935]
    28a0:	mov	w5, #0x4                   	// #4
    28a4:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    28a8:	ldrb	w4, [x29, #936]
    28ac:	mov	x1, x20
    28b0:	ldrb	w3, [x29, #915]
    28b4:	mov	x0, x26
    28b8:	ldrb	w2, [x29, #894]
    28bc:	mov	w5, #0x4                   	// #4
    28c0:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    28c4:	ldrb	w4, [x29, #895]
    28c8:	mov	x1, x20
    28cc:	ldrb	w3, [x29, #937]
    28d0:	mov	x0, x26
    28d4:	ldrb	w2, [x29, #916]
    28d8:	mov	w5, #0x4                   	// #4
    28dc:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    28e0:	ldrb	w4, [x29, #917]
    28e4:	mov	x1, x20
    28e8:	ldrb	w3, [x29, #896]
    28ec:	mov	x0, x26
    28f0:	ldrb	w2, [x29, #938]
    28f4:	mov	w5, #0x4                   	// #4
    28f8:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    28fc:	ldrb	w4, [x29, #939]
    2900:	mov	x1, x20
    2904:	ldrb	w3, [x29, #918]
    2908:	mov	x0, x26
    290c:	ldrb	w2, [x29, #897]
    2910:	mov	w5, #0x4                   	// #4
    2914:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2918:	ldrb	w4, [x29, #898]
    291c:	mov	x1, x20
    2920:	ldrb	w3, [x29, #940]
    2924:	mov	x0, x26
    2928:	ldrb	w2, [x29, #919]
    292c:	mov	w5, #0x4                   	// #4
    2930:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2934:	ldrb	w4, [x29, #920]
    2938:	mov	x1, x20
    293c:	ldrb	w3, [x29, #899]
    2940:	mov	x0, x26
    2944:	ldrb	w2, [x29, #941]
    2948:	mov	w5, #0x4                   	// #4
    294c:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2950:	ldrb	w4, [x29, #942]
    2954:	mov	x1, x20
    2958:	ldrb	w3, [x29, #921]
    295c:	mov	x0, x26
    2960:	ldrb	w2, [x29, #900]
    2964:	mov	w5, #0x4                   	// #4
    2968:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    296c:	ldrb	w4, [x29, #901]
    2970:	mov	x1, x20
    2974:	ldrb	w3, [x29, #943]
    2978:	mov	x0, x26
    297c:	ldrb	w2, [x29, #922]
    2980:	mov	w5, #0x4                   	// #4
    2984:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2988:	ldrb	w4, [x29, #923]
    298c:	mov	x1, x20
    2990:	ldrb	w3, [x29, #902]
    2994:	mov	x0, x26
    2998:	ldrb	w2, [x29, #944]
    299c:	mov	w5, #0x4                   	// #4
    29a0:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    29a4:	ldrb	w4, [x29, #945]
    29a8:	mov	x1, x20
    29ac:	ldrb	w3, [x29, #924]
    29b0:	mov	x0, x26
    29b4:	ldrb	w2, [x29, #903]
    29b8:	mov	w5, #0x4                   	// #4
    29bc:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    29c0:	ldrb	w4, [x29, #904]
    29c4:	mov	x1, x20
    29c8:	ldrb	w3, [x29, #946]
    29cc:	mov	x0, x26
    29d0:	ldrb	w2, [x29, #925]
    29d4:	mov	w5, #0x4                   	// #4
    29d8:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    29dc:	ldrb	w4, [x29, #926]
    29e0:	mov	x1, x20
    29e4:	ldrb	w3, [x29, #905]
    29e8:	mov	x0, x26
    29ec:	ldrb	w2, [x29, #947]
    29f0:	mov	w5, #0x4                   	// #4
    29f4:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    29f8:	ldrb	w4, [x29, #948]
    29fc:	mov	x1, x20
    2a00:	ldrb	w3, [x29, #927]
    2a04:	mov	x0, x26
    2a08:	ldrb	w2, [x29, #906]
    2a0c:	mov	w5, #0x4                   	// #4
    2a10:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2a14:	ldrb	w4, [x29, #907]
    2a18:	mov	x1, x20
    2a1c:	ldrb	w3, [x29, #949]
    2a20:	mov	x0, x26
    2a24:	ldrb	w2, [x29, #928]
    2a28:	mov	w5, #0x4                   	// #4
    2a2c:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2a30:	ldrb	w4, [x29, #929]
    2a34:	mov	x1, x20
    2a38:	ldrb	w3, [x29, #908]
    2a3c:	mov	x0, x26
    2a40:	ldrb	w2, [x29, #950]
    2a44:	mov	w5, #0x4                   	// #4
    2a48:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2a4c:	ldrb	w4, [x29, #951]
    2a50:	mov	x0, x26
    2a54:	mov	x1, x20
    2a58:	mov	w5, #0x2                   	// #2
    2a5c:	mov	w3, #0x0                   	// #0
    2a60:	mov	w2, #0x0                   	// #0
    2a64:	bl	3e28 <setkey@GLIBC_2.17+0x10>
    2a68:	ldr	w0, [x29, #156]
    2a6c:	cmp	w0, #0x0
    2a70:	b.le	2b84 <crypt@@GLIBC_2.17+0x18ec>
    2a74:	ldr	x0, [x29, #168]
    2a78:	ldr	x20, [x29, #128]
    2a7c:	strb	wzr, [x0]
    2a80:	mov	x0, x19
    2a84:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2a88:	mov	x1, x23
    2a8c:	mov	x0, x19
    2a90:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    2a94:	mov	x2, #0x160                 	// #352
    2a98:	mov	x0, x19
    2a9c:	mov	x1, x2
    2aa0:	bl	de0 <__explicit_bzero_chk@plt>
    2aa4:	mov	x2, #0x160                 	// #352
    2aa8:	mov	x0, x24
    2aac:	mov	x1, x2
    2ab0:	bl	de0 <__explicit_bzero_chk@plt>
    2ab4:	mov	x2, #0x40                  	// #64
    2ab8:	mov	x0, x22
    2abc:	mov	x1, x2
    2ac0:	bl	de0 <__explicit_bzero_chk@plt>
    2ac4:	mov	x0, x27
    2ac8:	mov	x1, x21
    2acc:	mov	x2, #0xffffffffffffffff    	// #-1
    2ad0:	bl	de0 <__explicit_bzero_chk@plt>
    2ad4:	ldr	x0, [x29, #136]
    2ad8:	mov	x1, x25
    2adc:	mov	x2, #0xffffffffffffffff    	// #-1
    2ae0:	bl	de0 <__explicit_bzero_chk@plt>
    2ae4:	ldr	x0, [x29, #104]
    2ae8:	cbz	x0, 2af8 <crypt@@GLIBC_2.17+0x1860>
    2aec:	mov	x1, x21
    2af0:	mov	x2, #0xffffffffffffffff    	// #-1
    2af4:	bl	de0 <__explicit_bzero_chk@plt>
    2af8:	ldr	x0, [x29, #120]
    2afc:	cbz	x0, 2b0c <crypt@@GLIBC_2.17+0x1874>
    2b00:	mov	x1, x25
    2b04:	mov	x2, #0xffffffffffffffff    	// #-1
    2b08:	bl	de0 <__explicit_bzero_chk@plt>
    2b0c:	ldr	x0, [x29, #112]
    2b10:	bl	dc0 <free@plt>
    2b14:	ldr	x0, [x29, #96]
    2b18:	bl	dc0 <free@plt>
    2b1c:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    2b20:	ldr	x0, [x0, #4048]
    2b24:	ldr	x1, [x29, #1016]
    2b28:	ldr	x0, [x0]
    2b2c:	eor	x0, x1, x0
    2b30:	cbnz	x0, 2ca0 <crypt@@GLIBC_2.17+0x1a08>
    2b34:	mov	sp, x29
    2b38:	mov	x0, x20
    2b3c:	ldp	x29, x30, [sp]
    2b40:	ldp	x19, x20, [sp, #16]
    2b44:	ldp	x21, x22, [sp, #32]
    2b48:	ldp	x23, x24, [sp, #48]
    2b4c:	ldp	x25, x26, [sp, #64]
    2b50:	ldp	x27, x28, [sp, #80]
    2b54:	add	sp, sp, #0x400
    2b58:	ret
    2b5c:	mov	x2, x19
    2b60:	mov	x1, x21
    2b64:	mov	x0, x27
    2b68:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2b6c:	b	26b4 <crypt@@GLIBC_2.17+0x141c>
    2b70:	ldrb	w2, [x26, #2]
    2b74:	add	x1, x26, #0x3
    2b78:	cmp	w0, w2
    2b7c:	csel	x26, x1, x26, eq  // eq = none
    2b80:	b	2340 <crypt@@GLIBC_2.17+0x10a8>
    2b84:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    2b88:	ldr	x0, [x0, #4008]
    2b8c:	mrs	x1, tpidr_el0
    2b90:	mov	w2, #0x22                  	// #34
    2b94:	mov	x20, #0x0                   	// #0
    2b98:	str	w2, [x1, x0]
    2b9c:	b	2a80 <crypt@@GLIBC_2.17+0x17e8>
    2ba0:	ldr	x4, [x29, #144]
    2ba4:	cmp	w2, #0x0
    2ba8:	csel	w1, w2, wzr, ge  // ge = tcont
    2bac:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    2bb0:	add	x3, x2, #0x6c0
    2bb4:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    2bb8:	sxtw	x1, w1
    2bbc:	add	x2, x2, #0x6b8
    2bc0:	bl	dd0 <__snprintf@plt>
    2bc4:	ldr	x3, [x29, #168]
    2bc8:	ldr	w2, [x29, #156]
    2bcc:	add	x3, x3, w0, sxtw
    2bd0:	sub	w2, w2, w0
    2bd4:	str	w2, [x29, #156]
    2bd8:	str	x3, [x29, #168]
    2bdc:	b	2790 <crypt@@GLIBC_2.17+0x14f8>
    2be0:	add	x1, x29, #0xa8
    2be4:	mov	w2, #0xa                   	// #10
    2be8:	add	x0, x26, #0x7
    2bec:	bl	cc0 <strtoul@plt>
    2bf0:	ldr	x1, [x29, #168]
    2bf4:	ldrb	w2, [x1]
    2bf8:	cmp	w2, #0x24
    2bfc:	b.ne	2364 <crypt@@GLIBC_2.17+0x10cc>  // b.any
    2c00:	mov	x2, #0xc9ff                	// #51711
    2c04:	add	x26, x1, #0x1
    2c08:	movk	x2, #0x3b9a, lsl #16
    2c0c:	cmp	x0, x2
    2c10:	csel	x0, x0, x2, ls  // ls = plast
    2c14:	mov	x1, x0
    2c18:	cmp	x0, #0x3e8
    2c1c:	mov	x0, #0x3e8                 	// #1000
    2c20:	csel	x0, x1, x0, cs  // cs = hs, nlast
    2c24:	str	x0, [x29, #144]
    2c28:	mov	w0, #0x1                   	// #1
    2c2c:	str	w0, [x29, #152]
    2c30:	b	2364 <crypt@@GLIBC_2.17+0x10cc>
    2c34:	mov	x2, x19
    2c38:	mov	x1, x21
    2c3c:	mov	x0, x23
    2c40:	bl	5528 <setkey@GLIBC_2.17+0x1710>
    2c44:	cbnz	x21, 24e8 <crypt@@GLIBC_2.17+0x1250>
    2c48:	mov	x1, x23
    2c4c:	mov	x0, x19
    2c50:	bl	5438 <setkey@GLIBC_2.17+0x1620>
    2c54:	mov	x0, x24
    2c58:	bl	5168 <setkey@GLIBC_2.17+0x1350>
    2c5c:	b	2554 <crypt@@GLIBC_2.17+0x12bc>
    2c60:	mov	x0, x27
    2c64:	mov	x2, x21
    2c68:	b	25f0 <crypt@@GLIBC_2.17+0x1358>
    2c6c:	mov	x0, x20
    2c70:	bl	d00 <malloc@plt>
    2c74:	str	x0, [x29, #112]
    2c78:	cbz	x0, 2ca4 <crypt@@GLIBC_2.17+0x1a0c>
    2c7c:	mov	x20, x21
    2c80:	b	23c8 <crypt@@GLIBC_2.17+0x1130>
    2c84:	mov	x0, x21
    2c88:	bl	d00 <malloc@plt>
    2c8c:	str	x0, [x29, #168]
    2c90:	mov	x27, x0
    2c94:	cbz	x0, 2cac <crypt@@GLIBC_2.17+0x1a14>
    2c98:	str	x0, [x29, #96]
    2c9c:	b	2590 <crypt@@GLIBC_2.17+0x12f8>
    2ca0:	bl	d60 <__stack_chk_fail@plt>
    2ca4:	mov	x20, #0x0                   	// #0
    2ca8:	b	2b1c <crypt@@GLIBC_2.17+0x1884>
    2cac:	ldr	x0, [x29, #112]
    2cb0:	mov	x20, #0x0                   	// #0
    2cb4:	bl	dc0 <free@plt>
    2cb8:	b	2b1c <crypt@@GLIBC_2.17+0x1884>
    2cbc:	nop
    2cc0:	stp	x29, x30, [sp, #-64]!
    2cc4:	mov	x29, sp
    2cc8:	stp	x21, x22, [sp, #32]
    2ccc:	adrp	x22, 18000 <setkey@GLIBC_2.17+0x141e8>
    2cd0:	mov	x21, x0
    2cd4:	mov	x0, x1
    2cd8:	stp	x19, x20, [sp, #16]
    2cdc:	mov	x20, x1
    2ce0:	str	x23, [sp, #48]
    2ce4:	bl	cd0 <strlen@plt>
    2ce8:	ldr	w3, [x22, #248]
    2cec:	adrp	x23, 18000 <setkey@GLIBC_2.17+0x141e8>
    2cf0:	add	w19, w0, #0x6d
    2cf4:	ldr	x2, [x23, #224]
    2cf8:	cmp	w3, w19
    2cfc:	b.ge	2d20 <crypt@@GLIBC_2.17+0x1a88>  // b.tcont
    2d00:	mov	x0, x2
    2d04:	sxtw	x1, w19
    2d08:	bl	d50 <realloc@plt>
    2d0c:	mov	x2, x0
    2d10:	cbz	x0, 2d3c <crypt@@GLIBC_2.17+0x1aa4>
    2d14:	mov	w3, w19
    2d18:	str	x0, [x23, #224]
    2d1c:	str	w19, [x22, #248]
    2d20:	mov	x1, x20
    2d24:	mov	x0, x21
    2d28:	ldp	x19, x20, [sp, #16]
    2d2c:	ldp	x21, x22, [sp, #32]
    2d30:	ldr	x23, [sp, #48]
    2d34:	ldp	x29, x30, [sp], #64
    2d38:	b	22e0 <crypt@@GLIBC_2.17+0x1048>
    2d3c:	ldp	x19, x20, [sp, #16]
    2d40:	ldp	x21, x22, [sp, #32]
    2d44:	ldr	x23, [sp, #48]
    2d48:	ldp	x29, x30, [sp], #64
    2d4c:	ret
    2d50:	ldp	x9, x5, [x2]
    2d54:	add	x6, x1, #0x10, lsl #12
    2d58:	ldp	x8, x3, [x2, #16]
    2d5c:	add	x4, x1, #0x80
    2d60:	add	x6, x6, #0x80
    2d64:	sub	x12, x0, #0x1
    2d68:	orr	x9, x5, x9, lsl #32
    2d6c:	orr	x8, x3, x8, lsl #32
    2d70:	cbz	x0, 2e0c <crypt@@GLIBC_2.17+0x1b74>
    2d74:	nop
    2d78:	mov	x0, x8
    2d7c:	mov	x5, x1
    2d80:	mov	x8, x9
    2d84:	mov	x9, x0
    2d88:	ldr	x0, [x5], #16
    2d8c:	eor	x0, x9, x0
    2d90:	cmp	x5, x4
    2d94:	and	x7, x0, #0xffff
    2d98:	ubfx	x10, x0, #32, #16
    2d9c:	lsr	w3, w0, #16
    2da0:	lsr	x0, x0, #48
    2da4:	ldr	x7, [x6, x7]
    2da8:	ldr	x11, [x4, x10]
    2dac:	ldr	x3, [x6, x3]
    2db0:	ldr	x10, [x4, x0]
    2db4:	eor	x3, x3, x11
    2db8:	ldur	x0, [x5, #-8]
    2dbc:	eor	x7, x7, x10
    2dc0:	eor	x3, x3, x7
    2dc4:	eor	x8, x8, x3
    2dc8:	eor	x0, x8, x0
    2dcc:	and	x7, x0, #0xffff
    2dd0:	ubfx	x10, x0, #32, #16
    2dd4:	lsr	w3, w0, #16
    2dd8:	lsr	x0, x0, #48
    2ddc:	ldr	x7, [x6, x7]
    2de0:	ldr	x3, [x6, x3]
    2de4:	ldr	x11, [x4, x10]
    2de8:	ldr	x10, [x4, x0]
    2dec:	eor	x0, x3, x11
    2df0:	eor	x3, x7, x10
    2df4:	eor	x0, x0, x3
    2df8:	eor	x9, x9, x0
    2dfc:	b.ne	2d88 <crypt@@GLIBC_2.17+0x1af0>  // b.any
    2e00:	sub	x12, x12, #0x1
    2e04:	cmn	x12, #0x1
    2e08:	b.ne	2d78 <crypt@@GLIBC_2.17+0x1ae0>  // b.any
    2e0c:	lsr	x1, x9, #32
    2e10:	lsr	x0, x8, #32
    2e14:	and	x9, x9, #0xffffffff
    2e18:	and	x8, x8, #0xffffffff
    2e1c:	stp	x1, x9, [x2]
    2e20:	stp	x0, x8, [x2, #16]
    2e24:	ret
    2e28:	stp	x29, x30, [sp, #-384]!
    2e2c:	mov	x2, #0x8080                	// #32896
    2e30:	add	x3, x0, x2
    2e34:	mov	x29, sp
    2e38:	stp	x19, x20, [sp, #16]
    2e3c:	adrp	x20, 17000 <setkey@GLIBC_2.17+0x131e8>
    2e40:	mov	x19, x0
    2e44:	ldr	x1, [x20, #4048]
    2e48:	add	x0, x0, #0x10, lsl #12
    2e4c:	stp	x23, x24, [sp, #48]
    2e50:	adrp	x24, 18000 <setkey@GLIBC_2.17+0x141e8>
    2e54:	ldr	x4, [x1]
    2e58:	str	x4, [sp, #376]
    2e5c:	mov	x4, #0x0                   	// #0
    2e60:	add	x0, x0, #0x80
    2e64:	stp	x3, x0, [sp, #96]
    2e68:	add	x1, x19, #0x18, lsl #12
    2e6c:	ldr	w0, [x24, #256]
    2e70:	add	x1, x1, #0x80
    2e74:	stp	x21, x22, [sp, #32]
    2e78:	add	x21, x19, #0x80
    2e7c:	stp	x25, x26, [sp, #64]
    2e80:	str	x1, [sp, #112]
    2e84:	cbnz	w0, 2ecc <crypt@@GLIBC_2.17+0x1c34>
    2e88:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    2e8c:	ldr	x1, [x1, #4032]
    2e90:	cbz	x1, 2ea0 <crypt@@GLIBC_2.17+0x1c08>
    2e94:	add	x2, x24, #0x100
    2e98:	add	x0, x2, #0x8
    2e9c:	bl	d40 <__pthread_mutex_lock@plt>
    2ea0:	ldr	w25, [x24, #256]
    2ea4:	cbz	w25, 3074 <crypt@@GLIBC_2.17+0x1ddc>
    2ea8:	adrp	x23, 5000 <setkey@GLIBC_2.17+0x11e8>
    2eac:	adrp	x26, 1c000 <setkey@GLIBC_2.17+0x181e8>
    2eb0:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    2eb4:	ldr	x0, [x0, #4024]
    2eb8:	cbz	x0, 2ed8 <crypt@@GLIBC_2.17+0x1c40>
    2ebc:	add	x0, x24, #0x100
    2ec0:	add	x0, x0, #0x8
    2ec4:	bl	cf0 <__pthread_mutex_unlock@plt>
    2ec8:	b	2ed8 <crypt@@GLIBC_2.17+0x1c40>
    2ecc:	dmb	ish
    2ed0:	adrp	x23, 5000 <setkey@GLIBC_2.17+0x11e8>
    2ed4:	adrp	x26, 1c000 <setkey@GLIBC_2.17+0x181e8>
    2ed8:	mov	x0, x21
    2edc:	mov	x2, #0x20000               	// #131072
    2ee0:	mov	w1, #0x0                   	// #0
    2ee4:	bl	d20 <memset@plt>
    2ee8:	add	x12, x23, #0x738
    2eec:	add	x3, x26, #0x138
    2ef0:	add	x12, x12, #0x5a0
    2ef4:	add	x15, sp, #0x58
    2ef8:	mov	x8, x12
    2efc:	mov	w14, #0x0                   	// #0
    2f00:	mov	w7, #0x18                  	// #24
    2f04:	mov	w5, #0xe                   	// #14
    2f08:	mov	w11, #0xf                   	// #15
    2f0c:	add	w9, w14, #0x1
    2f10:	sbfiz	x13, x14, #2, #32
    2f14:	mov	w10, #0x0                   	// #0
    2f18:	sbfiz	x9, x9, #2, #32
    2f1c:	nop
    2f20:	sbfiz	x5, x5, #4, #32
    2f24:	lsl	w6, w10, #6
    2f28:	mov	w0, w11
    2f2c:	mov	w4, #0x0                   	// #0
    2f30:	b	2f54 <crypt@@GLIBC_2.17+0x1cbc>
    2f34:	asr	w2, w4, #4
    2f38:	and	w1, w4, #0x1
    2f3c:	and	w2, w2, #0x2
    2f40:	ubfx	x0, x4, #1, #4
    2f44:	orr	w1, w2, w1
    2f48:	add	x1, x9, w1, sxtw
    2f4c:	add	x0, x0, x1, lsl #4
    2f50:	ldr	w0, [x8, x0, lsl #2]
    2f54:	sxtw	x0, w0
    2f58:	orr	w17, w6, w4
    2f5c:	orr	x0, x0, x5
    2f60:	add	w4, w4, #0x1
    2f64:	cmp	w4, #0x40
    2f68:	lsl	x0, x0, x7
    2f6c:	and	x2, x0, #0xff
    2f70:	lsr	w16, w0, #24
    2f74:	ubfx	x1, x0, #8, #8
    2f78:	ubfx	x0, x0, #16, #8
    2f7c:	add	x25, x3, x2, lsl #4
    2f80:	lsl	x16, x16, #4
    2f84:	add	x24, x3, x1, lsl #4
    2f88:	add	x18, x3, x16
    2f8c:	add	x23, x3, x0, lsl #4
    2f90:	mov	x30, x24
    2f94:	ldr	x1, [x3, x16]
    2f98:	ldr	x18, [x18, #8]
    2f9c:	ldr	x0, [x23, #4096]
    2fa0:	ldr	x23, [x23, #4104]
    2fa4:	orr	x0, x1, x0
    2fa8:	ldr	x24, [x24, #8200]
    2fac:	orr	x1, x18, x23
    2fb0:	ldr	x2, [x25, #12288]
    2fb4:	ldr	x16, [x30, #8192]
    2fb8:	ldr	x18, [x25, #12296]
    2fbc:	orr	x2, x24, x2, lsl #32
    2fc0:	orr	x1, x2, x1
    2fc4:	orr	x0, x1, x0, lsl #32
    2fc8:	orr	x1, x18, x16, lsl #32
    2fcc:	orr	x0, x0, x1
    2fd0:	str	x0, [x21, w17, sxtw #3]
    2fd4:	b.ne	2f34 <crypt@@GLIBC_2.17+0x1c9c>  // b.any
    2fd8:	add	w10, w10, #0x1
    2fdc:	cmp	w10, #0x40
    2fe0:	b.eq	3008 <crypt@@GLIBC_2.17+0x1d70>  // b.none
    2fe4:	asr	w2, w10, #4
    2fe8:	and	w1, w10, #0x1
    2fec:	and	w2, w2, #0x2
    2ff0:	ubfx	x0, x10, #1, #4
    2ff4:	orr	w1, w2, w1
    2ff8:	add	x1, x13, w1, sxtw
    2ffc:	add	x0, x0, x1, lsl #4
    3000:	ldr	w5, [x8, x0, lsl #2]
    3004:	b	2f20 <crypt@@GLIBC_2.17+0x1c88>
    3008:	sub	w7, w7, #0x8
    300c:	add	x15, x15, #0x8
    3010:	cmn	w7, #0x8
    3014:	add	x12, x12, #0x200
    3018:	add	w14, w14, #0x2
    301c:	b.eq	3030 <crypt@@GLIBC_2.17+0x1d98>  // b.none
    3020:	ldr	w5, [x12]
    3024:	ldr	w11, [x12, #256]
    3028:	ldr	x21, [x15]
    302c:	b	2f0c <crypt@@GLIBC_2.17+0x1c74>
    3030:	add	x19, x19, #0x20, lsl #12
    3034:	ldr	x20, [x20, #4048]
    3038:	ldr	w0, [x19, #156]
    303c:	strh	wzr, [x19, #142]
    3040:	ldr	x2, [sp, #376]
    3044:	ldr	x1, [x20]
    3048:	eor	x1, x2, x1
    304c:	add	w0, w0, #0x1
    3050:	str	xzr, [x19, #144]
    3054:	str	w0, [x19, #156]
    3058:	cbnz	x1, 3438 <crypt@@GLIBC_2.17+0x21a0>
    305c:	ldp	x19, x20, [sp, #16]
    3060:	ldp	x21, x22, [sp, #32]
    3064:	ldp	x23, x24, [sp, #48]
    3068:	ldp	x25, x26, [sp, #64]
    306c:	ldp	x29, x30, [sp], #384
    3070:	ret
    3074:	adrp	x5, 22000 <setkey@GLIBC_2.17+0x1e1e8>
    3078:	add	x5, x5, #0x138
    307c:	mov	x0, x5
    3080:	mov	x2, #0x4000                	// #16384
    3084:	mov	w1, #0x0                   	// #0
    3088:	adrp	x23, 5000 <setkey@GLIBC_2.17+0x11e8>
    308c:	bl	d20 <memset@plt>
    3090:	mov	x5, x0
    3094:	add	x7, x23, #0x738
    3098:	adrp	x8, 5000 <setkey@GLIBC_2.17+0x11e8>
    309c:	add	x10, x7, #0x4
    30a0:	mov	w9, #0x4925                	// #18725
    30a4:	add	x7, x7, #0xe0
    30a8:	add	x8, x8, #0x728
    30ac:	mov	w6, #0x0                   	// #0
    30b0:	mov	x4, #0x8000000             	// #134217728
    30b4:	mov	w3, #0x40                  	// #64
    30b8:	mov	w0, #0x39                  	// #57
    30bc:	mov	w12, #0x38                  	// #56
    30c0:	mov	w11, #0x0                   	// #0
    30c4:	movk	w9, #0x2492, lsl #16
    30c8:	add	w2, w0, #0x6
    30cc:	cmp	w12, #0x0
    30d0:	umull	x1, w11, w9
    30d4:	csel	w2, w2, w12, lt  // lt = tstop
    30d8:	and	x3, x3, #0xff
    30dc:	mov	x0, #0x0                   	// #0
    30e0:	asr	w2, w2, #3
    30e4:	lsr	x1, x1, #32
    30e8:	add	x2, x1, w2, sxtw #1
    30ec:	add	x2, x5, x2, lsl #10
    30f0:	add	x0, x0, #0x1
    30f4:	cmp	x0, #0x80
    30f8:	b.eq	311c <crypt@@GLIBC_2.17+0x1e84>  // b.none
    30fc:	tst	x3, x0
    3100:	b.eq	30f0 <crypt@@GLIBC_2.17+0x1e58>  // b.none
    3104:	ldr	x1, [x2, x0, lsl #3]
    3108:	orr	x1, x1, x4
    310c:	str	x1, [x2, x0, lsl #3]
    3110:	add	x0, x0, #0x1
    3114:	cmp	x0, #0x80
    3118:	b.ne	30fc <crypt@@GLIBC_2.17+0x1e64>  // b.any
    311c:	add	w6, w6, #0x1
    3120:	cmp	w6, #0x38
    3124:	b.eq	316c <crypt@@GLIBC_2.17+0x1ed4>  // b.none
    3128:	lsr	w11, w6, #2
    312c:	ldr	w0, [x10], #4
    3130:	sub	w12, w0, #0x1
    3134:	umull	x1, w11, w9
    3138:	negs	w2, w12
    313c:	and	w3, w12, #0x7
    3140:	and	w2, w2, #0x7
    3144:	csneg	w2, w3, w2, mi  // mi = first
    3148:	lsr	x3, x1, #32
    314c:	add	w2, w2, #0x1
    3150:	lsl	w1, w3, #3
    3154:	sub	w1, w1, w3
    3158:	ldrb	w3, [x8, w2, sxtw]
    315c:	sub	w1, w6, w1, lsl #2
    3160:	add	w1, w1, #0x4
    3164:	ldr	x4, [x7, w1, sxtw #3]
    3168:	b	30c8 <crypt@@GLIBC_2.17+0x1e30>
    316c:	adrp	x6, 20000 <setkey@GLIBC_2.17+0x1c1e8>
    3170:	add	x6, x6, #0x138
    3174:	mov	x0, x6
    3178:	mov	x2, #0x2000                	// #8192
    317c:	mov	w1, #0x0                   	// #0
    3180:	bl	d20 <memset@plt>
    3184:	mov	x6, x0
    3188:	add	x5, x23, #0x738
    318c:	mov	x4, #0x1                   	// #1
    3190:	add	x10, x5, #0x1e0
    3194:	adrp	x7, 5000 <setkey@GLIBC_2.17+0x11e8>
    3198:	mov	w8, #0x2493                	// #9363
    319c:	mov	w9, #0xaaab                	// #43691
    31a0:	add	x5, x5, #0x2a0
    31a4:	mov	w2, w4
    31a8:	add	x7, x7, #0x728
    31ac:	mov	x3, #0x40000000            	// #1073741824
    31b0:	mov	w0, #0xd                   	// #13
    31b4:	movk	w8, #0x9249, lsl #16
    31b8:	movk	w9, #0xaaaa, lsl #16
    31bc:	smull	x1, w0, w8
    31c0:	and	x2, x2, #0xff
    31c4:	mov	x22, #0x0                   	// #0
    31c8:	lsr	x1, x1, #32
    31cc:	add	w1, w0, w1
    31d0:	asr	w1, w1, #2
    31d4:	sub	w1, w1, w0, asr #31
    31d8:	sbfiz	x1, x1, #10, #32
    31dc:	add	x1, x1, x6
    31e0:	add	x22, x22, #0x1
    31e4:	cmp	x22, #0x80
    31e8:	b.eq	320c <crypt@@GLIBC_2.17+0x1f74>  // b.none
    31ec:	tst	x2, x22
    31f0:	b.eq	31e0 <crypt@@GLIBC_2.17+0x1f48>  // b.none
    31f4:	ldr	x0, [x1, x22, lsl #3]
    31f8:	orr	x0, x0, x3
    31fc:	str	x0, [x1, x22, lsl #3]
    3200:	add	x22, x22, #0x1
    3204:	cmp	x22, #0x80
    3208:	b.ne	31ec <crypt@@GLIBC_2.17+0x1f54>  // b.any
    320c:	mov	w3, w4
    3210:	add	x4, x4, #0x1
    3214:	cmp	x4, #0x31
    3218:	b.eq	3268 <crypt@@GLIBC_2.17+0x1fd0>  // b.none
    321c:	add	x0, x10, x4, lsl #2
    3220:	umull	x2, w3, w9
    3224:	ldur	w0, [x0, #-4]
    3228:	lsr	x2, x2, #36
    322c:	sub	w0, w0, #0x1
    3230:	add	w2, w2, w2, lsl #1
    3234:	sub	w2, w3, w2, lsl #3
    3238:	smull	x1, w0, w8
    323c:	ldr	x3, [x5, w2, sxtw #3]
    3240:	lsr	x1, x1, #32
    3244:	add	w1, w0, w1
    3248:	asr	w1, w1, #2
    324c:	sub	w1, w1, w0, asr #31
    3250:	lsl	w2, w1, #3
    3254:	sub	w1, w2, w1
    3258:	sub	w1, w0, w1
    325c:	add	w1, w1, #0x1
    3260:	ldrb	w2, [x7, w1, sxtw]
    3264:	b	31bc <crypt@@GLIBC_2.17+0x1f24>
    3268:	adrp	x26, 1c000 <setkey@GLIBC_2.17+0x181e8>
    326c:	add	x9, x26, #0x138
    3270:	mov	x0, x9
    3274:	mov	w1, #0x0                   	// #0
    3278:	mov	x2, #0x4000                	// #16384
    327c:	bl	d20 <memset@plt>
    3280:	mov	x9, x0
    3284:	add	x7, x23, #0x738
    3288:	adrp	x10, 5000 <setkey@GLIBC_2.17+0x11e8>
    328c:	add	x6, x7, #0x2a0
    3290:	add	x12, x7, #0x360
    3294:	mov	w11, #0xaaab                	// #43691
    3298:	mov	w0, w22
    329c:	add	x7, x7, #0x3e0
    32a0:	add	x10, x10, #0x728
    32a4:	mov	x8, #0x0                   	// #0
    32a8:	mov	w1, #0x18                  	// #24
    32ac:	movk	w11, #0xaaaa, lsl #16
    32b0:	umull	x3, w8, w11
    32b4:	sxtw	x2, w1
    32b8:	and	x0, x0, #0xff
    32bc:	mov	x1, #0xff                  	// #255
    32c0:	lsr	x2, x2, #3
    32c4:	lsr	x5, x3, #36
    32c8:	add	x2, x5, x2, lsl #9
    32cc:	add	w5, w5, w5, lsl #1
    32d0:	add	x2, x2, #0x1fe
    32d4:	sub	w5, w8, w5, lsl #3
    32d8:	add	x2, x9, x2, lsl #3
    32dc:	sxtw	x5, w5
    32e0:	tst	x0, x1
    32e4:	b.eq	32f8 <crypt@@GLIBC_2.17+0x2060>  // b.none
    32e8:	ldr	x3, [x2]
    32ec:	ldr	x4, [x6, x5, lsl #3]
    32f0:	orr	x3, x3, x4
    32f4:	str	x3, [x2]
    32f8:	sub	x1, x1, #0x1
    32fc:	sub	x2, x2, #0x10
    3300:	cmn	x1, #0x1
    3304:	b.ne	32e0 <crypt@@GLIBC_2.17+0x2048>  // b.any
    3308:	add	x8, x8, #0x1
    330c:	cmp	x8, #0x30
    3310:	b.eq	3330 <crypt@@GLIBC_2.17+0x2098>  // b.none
    3314:	ldr	w0, [x7, x8, lsl #2]
    3318:	sub	w0, w0, #0x1
    331c:	ldr	w1, [x12, w0, sxtw #2]
    3320:	sub	w1, w1, #0x1
    3324:	and	w0, w1, #0x7
    3328:	ldrb	w0, [x10, w0, sxtw]
    332c:	b	32b0 <crypt@@GLIBC_2.17+0x2018>
    3330:	add	x2, x23, #0x738
    3334:	add	x22, sp, #0x78
    3338:	add	x2, x2, #0x3e0
    333c:	mov	x0, #0x2f                  	// #47
    3340:	mov	w1, #0x1                   	// #1
    3344:	b	334c <crypt@@GLIBC_2.17+0x20b4>
    3348:	ldr	w1, [x2, x0, lsl #2]
    334c:	sub	w4, w1, #0x1
    3350:	add	w1, w1, #0x1f
    3354:	add	w3, w0, #0x30
    3358:	str	w0, [x22, w4, sxtw #2]
    335c:	sub	x0, x0, #0x1
    3360:	str	w3, [x22, w1, sxtw #2]
    3364:	cmn	x0, #0x1
    3368:	b.ne	3348 <crypt@@GLIBC_2.17+0x20b0>  // b.any
    336c:	adrp	x6, 18000 <setkey@GLIBC_2.17+0x141e8>
    3370:	add	x6, x6, #0x138
    3374:	mov	x0, x6
    3378:	mov	x2, #0x4000                	// #16384
    337c:	mov	w1, #0x0                   	// #0
    3380:	bl	d20 <memset@plt>
    3384:	mov	x6, x0
    3388:	add	x5, x23, #0x738
    338c:	mov	w9, #0xaaab                	// #43691
    3390:	add	x7, x5, #0x4a4
    3394:	add	x5, x5, #0xe0
    3398:	mov	x4, #0x80000000            	// #2147483648
    339c:	mov	w0, #0x28                  	// #40
    33a0:	movk	w9, #0x2aaa, lsl #16
    33a4:	mov	w8, #0x80                  	// #128
    33a8:	sub	w2, w0, #0x1
    33ac:	asr	w1, w25, #5
    33b0:	mov	x0, #0x3f                  	// #63
    33b4:	sxtw	x1, w1
    33b8:	ldr	w10, [x22, w2, sxtw #2]
    33bc:	add	x2, x1, #0x7e
    33c0:	smull	x1, w10, w9
    33c4:	lsr	x1, x1, #32
    33c8:	sub	w1, w1, w10, asr #31
    33cc:	add	w3, w1, w1, lsl #1
    33d0:	smaddl	x1, w1, w8, x2
    33d4:	sub	w2, w10, w3, lsl #1
    33d8:	add	w2, w2, #0x1a
    33dc:	add	x1, x6, x1, lsl #3
    33e0:	ldr	x3, [x5, w2, sxtw #3]
    33e4:	nop
    33e8:	tst	x0, x3
    33ec:	b.eq	33fc <crypt@@GLIBC_2.17+0x2164>  // b.none
    33f0:	ldr	x2, [x1]
    33f4:	orr	x2, x2, x4
    33f8:	str	x2, [x1]
    33fc:	sub	x0, x0, #0x1
    3400:	sub	x1, x1, #0x10
    3404:	cmn	x0, #0x1
    3408:	b.ne	33e8 <crypt@@GLIBC_2.17+0x2150>  // b.any
    340c:	add	w25, w25, #0x1
    3410:	cmp	w25, #0x40
    3414:	b.eq	3428 <crypt@@GLIBC_2.17+0x2190>  // b.none
    3418:	and	x1, x25, #0x1f
    341c:	ldr	w0, [x7], #4
    3420:	ldr	x4, [x5, x1, lsl #3]
    3424:	b	33a8 <crypt@@GLIBC_2.17+0x2110>
    3428:	dmb	ish
    342c:	mov	w0, #0x1                   	// #1
    3430:	str	w0, [x24, #256]
    3434:	b	2eb0 <crypt@@GLIBC_2.17+0x1c18>
    3438:	bl	d60 <__stack_chk_fail@plt>
    343c:	nop
    3440:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    3444:	ldr	x0, [x0, #4056]
    3448:	b	2e28 <crypt@@GLIBC_2.17+0x1b90>
    344c:	nop
    3450:	stp	x29, x30, [sp, #-48]!
    3454:	mov	x29, sp
    3458:	stp	x19, x20, [sp, #16]
    345c:	add	x19, x1, #0x20, lsl #12
    3460:	mov	x20, x1
    3464:	str	x21, [sp, #32]
    3468:	mov	x21, x0
    346c:	ldr	w0, [x19, #156]
    3470:	cbz	w0, 365c <crypt@@GLIBC_2.17+0x23c4>
    3474:	ldrb	w2, [x21]
    3478:	cmp	w2, #0x5a
    347c:	b.hi	34ac <crypt@@GLIBC_2.17+0x2214>  // b.pmore
    3480:	cmp	w2, #0x40
    3484:	b.hi	34c0 <crypt@@GLIBC_2.17+0x2228>  // b.pmore
    3488:	sub	w1, w2, #0x2e
    348c:	mov	w0, #0x0                   	// #0
    3490:	and	w1, w1, #0xff
    3494:	cmp	w1, #0xb
    3498:	b.ls	34c0 <crypt@@GLIBC_2.17+0x2228>  // b.plast
    349c:	ldp	x19, x20, [sp, #16]
    34a0:	ldr	x21, [sp, #32]
    34a4:	ldp	x29, x30, [sp], #48
    34a8:	ret
    34ac:	sub	w1, w2, #0x61
    34b0:	mov	w0, #0x0                   	// #0
    34b4:	and	w1, w1, #0xff
    34b8:	cmp	w1, #0x19
    34bc:	b.hi	349c <crypt@@GLIBC_2.17+0x2204>  // b.pmore
    34c0:	ldrb	w4, [x21, #1]
    34c4:	cmp	w4, #0x5a
    34c8:	b.hi	3638 <crypt@@GLIBC_2.17+0x23a0>  // b.pmore
    34cc:	cmp	w4, #0x40
    34d0:	b.hi	34e8 <crypt@@GLIBC_2.17+0x2250>  // b.pmore
    34d4:	sub	w1, w4, #0x2e
    34d8:	mov	w0, #0x0                   	// #0
    34dc:	and	w1, w1, #0xff
    34e0:	cmp	w1, #0xb
    34e4:	b.hi	349c <crypt@@GLIBC_2.17+0x2204>  // b.pmore
    34e8:	ldrb	w0, [x19, #142]
    34ec:	cmp	w0, w2
    34f0:	b.eq	3684 <crypt@@GLIBC_2.17+0x23ec>  // b.none
    34f4:	adrp	x3, 5000 <setkey@GLIBC_2.17+0x11e8>
    34f8:	add	x3, x3, #0x738
    34fc:	add	x3, x3, #0x2a0
    3500:	mov	x6, #0x0                   	// #0
    3504:	mov	x5, #0x0                   	// #0
    3508:	strb	w2, [x19, #142]
    350c:	strb	w4, [x19, #143]
    3510:	ldrb	w0, [x21]
    3514:	cmp	w0, #0x60
    3518:	b.ls	3668 <crypt@@GLIBC_2.17+0x23d0>  // b.plast
    351c:	sub	w0, w0, #0x3b
    3520:	sxtw	x2, w0
    3524:	mov	x0, #0x0                   	// #0
    3528:	asr	x1, x2, x0
    352c:	tbz	w1, #0, 3538 <crypt@@GLIBC_2.17+0x22a0>
    3530:	ldr	x1, [x3, x0, lsl #3]
    3534:	orr	x5, x5, x1
    3538:	add	x0, x0, #0x1
    353c:	cmp	x0, #0x6
    3540:	b.ne	3528 <crypt@@GLIBC_2.17+0x2290>  // b.any
    3544:	add	x6, x6, #0x6
    3548:	add	x21, x21, #0x1
    354c:	cmp	x6, #0xc
    3550:	add	x3, x3, #0x30
    3554:	b.ne	3510 <crypt@@GLIBC_2.17+0x2278>  // b.any
    3558:	mov	x0, #0x8080                	// #32896
    355c:	add	x1, x20, x0
    3560:	ldr	x0, [x19, #144]
    3564:	add	x2, x20, #0x80
    3568:	eor	x0, x5, x0
    356c:	nop
    3570:	ldr	x4, [x2]
    3574:	eor	x3, x4, x4, lsr #32
    3578:	and	x3, x3, x0
    357c:	orr	x3, x3, x3, lsl #32
    3580:	eor	x3, x3, x4
    3584:	str	x3, [x2], #8
    3588:	cmp	x2, x1
    358c:	b.ne	3570 <crypt@@GLIBC_2.17+0x22d8>  // b.any
    3590:	ldr	x0, [x19, #144]
    3594:	add	x1, x20, #0x10, lsl #12
    3598:	add	x1, x1, #0x80
    359c:	eor	x0, x5, x0
    35a0:	ldr	x4, [x2]
    35a4:	eor	x3, x4, x4, lsr #32
    35a8:	and	x3, x3, x0
    35ac:	orr	x3, x3, x3, lsl #32
    35b0:	eor	x3, x3, x4
    35b4:	str	x3, [x2], #8
    35b8:	cmp	x2, x1
    35bc:	b.ne	35a0 <crypt@@GLIBC_2.17+0x2308>  // b.any
    35c0:	ldr	x0, [x19, #144]
    35c4:	add	x1, x20, #0x18, lsl #12
    35c8:	add	x1, x1, #0x80
    35cc:	eor	x0, x5, x0
    35d0:	ldr	x4, [x2]
    35d4:	eor	x3, x4, x4, lsr #32
    35d8:	and	x3, x3, x0
    35dc:	orr	x3, x3, x3, lsl #32
    35e0:	eor	x3, x3, x4
    35e4:	str	x3, [x2], #8
    35e8:	cmp	x2, x1
    35ec:	b.ne	35d0 <crypt@@GLIBC_2.17+0x2338>  // b.any
    35f0:	ldr	x4, [x19, #144]
    35f4:	add	x3, x20, #0x20, lsl #12
    35f8:	add	x3, x3, #0x80
    35fc:	eor	x4, x5, x4
    3600:	ldr	x1, [x2]
    3604:	eor	x0, x1, x1, lsr #32
    3608:	and	x0, x0, x4
    360c:	orr	x0, x0, x0, lsl #32
    3610:	eor	x0, x0, x1
    3614:	str	x0, [x2], #8
    3618:	cmp	x2, x3
    361c:	b.ne	3600 <crypt@@GLIBC_2.17+0x2368>  // b.any
    3620:	str	x5, [x19, #144]
    3624:	mov	w0, #0x1                   	// #1
    3628:	ldp	x19, x20, [sp, #16]
    362c:	ldr	x21, [sp, #32]
    3630:	ldp	x29, x30, [sp], #48
    3634:	ret
    3638:	sub	w1, w4, #0x61
    363c:	mov	w0, #0x0                   	// #0
    3640:	and	w1, w1, #0xff
    3644:	cmp	w1, #0x19
    3648:	b.ls	34e8 <crypt@@GLIBC_2.17+0x2250>  // b.plast
    364c:	ldp	x19, x20, [sp, #16]
    3650:	ldr	x21, [sp, #32]
    3654:	ldp	x29, x30, [sp], #48
    3658:	ret
    365c:	mov	x0, x1
    3660:	bl	2e28 <crypt@@GLIBC_2.17+0x1b90>
    3664:	b	3474 <crypt@@GLIBC_2.17+0x21dc>
    3668:	sub	w2, w0, #0x2e
    366c:	sub	w1, w0, #0x35
    3670:	cmp	w0, #0x41
    3674:	sxtw	x2, w2
    3678:	sxtw	x0, w1
    367c:	csel	x2, x2, x0, cc  // cc = lo, ul, last
    3680:	b	3524 <crypt@@GLIBC_2.17+0x228c>
    3684:	ldrb	w1, [x19, #143]
    3688:	mov	w0, #0x1                   	// #1
    368c:	cmp	w1, w4
    3690:	b.ne	34f4 <crypt@@GLIBC_2.17+0x225c>  // b.any
    3694:	b	349c <crypt@@GLIBC_2.17+0x2204>
    3698:	stp	x29, x30, [sp, #-32]!
    369c:	adrp	x5, 22000 <setkey@GLIBC_2.17+0x1e1e8>
    36a0:	add	x7, x0, #0x8
    36a4:	mov	x29, sp
    36a8:	add	x5, x5, #0x138
    36ac:	mov	x3, #0x0                   	// #0
    36b0:	mov	x2, #0x0                   	// #0
    36b4:	stp	x19, x20, [sp, #16]
    36b8:	ldrb	w4, [x0], #1
    36bc:	and	x6, x4, #0x7f
    36c0:	cmp	x0, x7
    36c4:	ubfiz	x4, x4, #3, #7
    36c8:	add	x4, x5, x4
    36cc:	ldr	x6, [x5, x6, lsl #3]
    36d0:	add	x5, x5, #0x800
    36d4:	ldr	x4, [x4, #1024]
    36d8:	orr	x2, x2, x6
    36dc:	orr	x3, x3, x4
    36e0:	b.ne	36b8 <crypt@@GLIBC_2.17+0x2420>  // b.any
    36e4:	adrp	x7, 5000 <setkey@GLIBC_2.17+0x11e8>
    36e8:	add	x7, x7, #0x738
    36ec:	adrp	x15, 20000 <setkey@GLIBC_2.17+0x1c1e8>
    36f0:	adrp	x14, 20000 <setkey@GLIBC_2.17+0x1c1e8>
    36f4:	adrp	x13, 20000 <setkey@GLIBC_2.17+0x1c1e8>
    36f8:	adrp	x12, 20000 <setkey@GLIBC_2.17+0x1c1e8>
    36fc:	adrp	x11, 21000 <setkey@GLIBC_2.17+0x1d1e8>
    3700:	adrp	x10, 21000 <setkey@GLIBC_2.17+0x1d1e8>
    3704:	adrp	x9, 21000 <setkey@GLIBC_2.17+0x1d1e8>
    3708:	adrp	x8, 21000 <setkey@GLIBC_2.17+0x1d1e8>
    370c:	add	x7, x7, #0xda0
    3710:	add	x15, x15, #0x538
    3714:	add	x14, x14, #0x138
    3718:	add	x13, x13, #0x938
    371c:	add	x12, x12, #0xd38
    3720:	add	x11, x11, #0x138
    3724:	add	x10, x10, #0x538
    3728:	add	x9, x9, #0xd38
    372c:	add	x8, x8, #0x938
    3730:	mov	x5, #0x0                   	// #0
    3734:	mov	w0, #0x1                   	// #1
    3738:	mov	w16, #0x1c                  	// #28
    373c:	b	3744 <crypt@@GLIBC_2.17+0x24ac>
    3740:	ldr	w0, [x7, x5, lsl #2]
    3744:	sub	w4, w16, w0
    3748:	lsl	x6, x2, x0
    374c:	lsl	x0, x3, x0
    3750:	lsr	x2, x2, x4
    3754:	orr	x2, x6, x2
    3758:	lsr	x3, x3, x4
    375c:	and	x19, x2, #0x7f
    3760:	ubfx	x6, x2, #14, #7
    3764:	ubfx	x20, x2, #21, #7
    3768:	ubfx	x4, x2, #7, #7
    376c:	orr	x3, x0, x3
    3770:	and	x30, x3, #0x7f
    3774:	ubfx	x0, x3, #21, #7
    3778:	ubfx	x17, x3, #14, #7
    377c:	ldr	x6, [x15, x6, lsl #3]
    3780:	ubfx	x18, x3, #7, #7
    3784:	ldr	x20, [x14, x20, lsl #3]
    3788:	ldr	x4, [x13, x4, lsl #3]
    378c:	orr	x6, x6, x20
    3790:	ldr	x19, [x12, x19, lsl #3]
    3794:	ldr	x30, [x9, x30, lsl #3]
    3798:	orr	x4, x4, x19
    379c:	ldr	x0, [x11, x0, lsl #3]
    37a0:	orr	x4, x4, x6
    37a4:	ldr	x17, [x10, x17, lsl #3]
    37a8:	orr	x4, x30, x4, lsl #32
    37ac:	ldr	x6, [x8, x18, lsl #3]
    37b0:	orr	x0, x0, x17
    37b4:	orr	x0, x0, x4
    37b8:	orr	x4, x6, #0x800000008000
    37bc:	orr	x0, x0, x4
    37c0:	str	x0, [x1, x5, lsl #3]
    37c4:	add	x5, x5, #0x1
    37c8:	cmp	x5, #0x10
    37cc:	b.ne	3740 <crypt@@GLIBC_2.17+0x24a8>  // b.any
    37d0:	add	x1, x1, #0x20, lsl #12
    37d4:	ldp	x19, x20, [sp, #16]
    37d8:	str	wzr, [x1, #152]
    37dc:	ldp	x29, x30, [sp], #32
    37e0:	ret
    37e4:	nop
    37e8:	stp	x29, x30, [sp, #-80]!
    37ec:	add	x4, x1, #0x20, lsl #12
    37f0:	adrp	x2, 18000 <setkey@GLIBC_2.17+0x141e8>
    37f4:	mov	x29, sp
    37f8:	ldp	x3, x1, [x0, #16]
    37fc:	add	x2, x2, #0x138
    3800:	ldp	x9, x6, [x0]
    3804:	stp	x21, x22, [sp, #32]
    3808:	ldr	x7, [x4, #144]
    380c:	eor	x5, x3, x1
    3810:	stp	x23, x24, [sp, #48]
    3814:	and	x5, x5, x7
    3818:	eor	x1, x1, x5
    381c:	eor	x4, x9, x6
    3820:	and	x4, x4, x7
    3824:	eor	x3, x3, x5
    3828:	ubfx	x13, x1, #3, #6
    382c:	ubfx	x8, x1, #9, #6
    3830:	ubfx	x7, x1, #19, #6
    3834:	ubfx	x1, x1, #25, #6
    3838:	eor	x5, x9, x4
    383c:	eor	x6, x6, x4
    3840:	add	x23, x2, x7, lsl #4
    3844:	add	x21, x2, x1, lsl #4
    3848:	ubfx	x10, x3, #3, #6
    384c:	ubfx	x4, x3, #9, #6
    3850:	ubfx	x11, x3, #19, #6
    3854:	ubfx	x3, x3, #25, #6
    3858:	add	x12, x2, x8, lsl #4
    385c:	stp	x19, x20, [sp, #16]
    3860:	add	x15, x2, x3, lsl #4
    3864:	add	x20, x2, x13, lsl #4
    3868:	mov	x8, x12
    386c:	ldr	x1, [x21, #12296]
    3870:	add	x22, x2, x4, lsl #4
    3874:	ldr	x21, [x21, #12288]
    3878:	add	x19, x2, x10, lsl #4
    387c:	ldr	x3, [x23, #13320]
    3880:	mov	x10, x19
    3884:	ldr	x23, [x23, #13312]
    3888:	orr	x1, x3, x1
    388c:	ldr	x3, [x20, #15368]
    3890:	orr	x21, x23, x21
    3894:	ldr	x23, [x8, #14344]
    3898:	add	x18, x2, x11, lsl #4
    389c:	ldr	x24, [x12, #14336]
    38a0:	ubfx	x14, x6, #3, #6
    38a4:	ldr	x7, [x20, #15360]
    38a8:	ubfx	x16, x6, #9, #6
    38ac:	orr	x3, x3, x23
    38b0:	mov	x11, x18
    38b4:	ldr	x20, [x22, #10240]
    38b8:	orr	x7, x7, x24
    38bc:	ldr	x19, [x19, #11264]
    38c0:	orr	x3, x3, x1
    38c4:	ldr	x17, [x22, #10248]
    38c8:	add	x23, x2, x16, lsl #4
    38cc:	ldr	x1, [x10, #11272]
    38d0:	orr	x7, x7, x21
    38d4:	add	x21, x2, x14, lsl #4
    38d8:	orr	x19, x19, x20
    38dc:	ldr	x24, [x15, #8192]
    38e0:	ubfx	x8, x6, #19, #6
    38e4:	ldr	x18, [x18, #9216]
    38e8:	ubfx	x6, x6, #25, #6
    38ec:	orr	x4, x7, x19
    38f0:	orr	x1, x1, x17
    38f4:	ldr	x22, [x15, #8200]
    38f8:	add	x17, x2, x6, lsl #4
    38fc:	ldr	x7, [x11, #9224]
    3900:	ubfx	x12, x5, #3, #6
    3904:	ubfx	x13, x5, #9, #6
    3908:	orr	x18, x18, x24
    390c:	ubfx	x9, x5, #25, #6
    3910:	orr	x3, x3, x1
    3914:	ubfx	x5, x5, #19, #6
    3918:	add	x15, x2, x8, lsl #4
    391c:	ldr	x24, [x23, #6144]
    3920:	str	x25, [sp, #64]
    3924:	ldr	x23, [x23, #6152]
    3928:	add	x20, x2, x5, lsl #4
    392c:	ldr	x6, [x21, #7168]
    3930:	orr	x5, x7, x22
    3934:	ldr	x1, [x21, #7176]
    3938:	add	x19, x2, x13, lsl #4
    393c:	orr	x6, x6, x24
    3940:	orr	x4, x4, x18
    3944:	orr	x1, x1, x23
    3948:	orr	x3, x3, x5
    394c:	add	x30, x2, x12, lsl #4
    3950:	mov	x13, x19
    3954:	orr	x3, x3, x1
    3958:	orr	x4, x4, x6
    395c:	lsl	x9, x9, #4
    3960:	ldr	x6, [x17, #4096]
    3964:	add	x25, x2, x9
    3968:	ldr	x14, [x17, #4104]
    396c:	ldr	x8, [x15, #5120]
    3970:	ldr	x1, [x15, #5128]
    3974:	orr	x8, x8, x6
    3978:	ldr	x10, [x13, #2048]
    397c:	orr	x1, x1, x14
    3980:	ldr	x18, [x19, #2056]
    3984:	orr	x1, x3, x1
    3988:	ldr	x6, [x30, #3072]
    398c:	ldr	x7, [x30, #3080]
    3990:	ldr	x9, [x2, x9]
    3994:	orr	x7, x7, x18
    3998:	ldr	x16, [x25, #8]
    399c:	orr	x2, x4, x8
    39a0:	ldr	x3, [x20, #1024]
    39a4:	orr	x4, x6, x10
    39a8:	ldr	x5, [x20, #1032]
    39ac:	orr	x3, x3, x9
    39b0:	orr	x2, x2, x4
    39b4:	orr	x1, x1, x7
    39b8:	orr	x5, x5, x16
    39bc:	orr	x2, x2, x3
    39c0:	orr	x1, x1, x5
    39c4:	stp	x2, x1, [x0]
    39c8:	ldp	x19, x20, [sp, #16]
    39cc:	ldp	x21, x22, [sp, #32]
    39d0:	ldp	x23, x24, [sp, #48]
    39d4:	ldr	x25, [sp, #64]
    39d8:	ldp	x29, x30, [sp], #80
    39dc:	ret
    39e0:	ldrb	w5, [x2, #1]
    39e4:	add	x9, x3, #0x20, lsl #12
    39e8:	ldrb	w2, [x2]
    39ec:	add	x7, x3, #0x20, lsl #12
    39f0:	cmp	w5, #0x0
    39f4:	add	x7, x7, #0x82
    39f8:	csel	w5, w5, w2, ne  // ne = any
    39fc:	mov	w4, #0x1a                  	// #26
    3a00:	strb	w2, [x9, #128]
    3a04:	strb	w5, [x9, #129]
    3a08:	lsr	x2, x0, x4
    3a0c:	and	x2, x2, #0x3f
    3a10:	cmp	x2, #0x25
    3a14:	add	w8, w2, #0x35
    3a18:	add	w6, w2, #0x2e
    3a1c:	b.ls	3aa0 <crypt@@GLIBC_2.17+0x2808>  // b.plast
    3a20:	add	w5, w2, #0x3b
    3a24:	strb	w5, [x7], #1
    3a28:	sub	w4, w4, #0x6
    3a2c:	cmn	w4, #0x4
    3a30:	b.ne	3a08 <crypt@@GLIBC_2.17+0x2770>  // b.any
    3a34:	add	x4, x3, #0x20, lsl #12
    3a38:	lsl	w0, w0, #30
    3a3c:	add	x4, x4, #0x87
    3a40:	ubfiz	w7, w1, #2, #4
    3a44:	orr	x5, x0, x1, lsr #2
    3a48:	mov	w1, #0x1a                  	// #26
    3a4c:	lsr	x0, x5, x1
    3a50:	and	x0, x0, #0x3f
    3a54:	cmp	x0, #0x25
    3a58:	add	w6, w0, #0x35
    3a5c:	add	w3, w0, #0x2e
    3a60:	b.ls	3a94 <crypt@@GLIBC_2.17+0x27fc>  // b.plast
    3a64:	add	w2, w0, #0x3b
    3a68:	strb	w2, [x4], #1
    3a6c:	sub	w1, w1, #0x6
    3a70:	cmn	w1, #0x4
    3a74:	b.ne	3a4c <crypt@@GLIBC_2.17+0x27b4>  // b.any
    3a78:	cmp	w7, #0x25
    3a7c:	and	w0, w7, #0xff
    3a80:	b.le	3aac <crypt@@GLIBC_2.17+0x2814>
    3a84:	add	w0, w0, #0x3b
    3a88:	strb	w0, [x9, #140]
    3a8c:	strb	wzr, [x9, #141]
    3a90:	ret
    3a94:	cmp	x0, #0xc
    3a98:	csel	w2, w3, w6, cc  // cc = lo, ul, last
    3a9c:	b	3a68 <crypt@@GLIBC_2.17+0x27d0>
    3aa0:	cmp	x2, #0xc
    3aa4:	csel	w5, w6, w8, cc  // cc = lo, ul, last
    3aa8:	b	3a24 <crypt@@GLIBC_2.17+0x278c>
    3aac:	add	w1, w0, #0x35
    3ab0:	cmp	w7, #0xc
    3ab4:	add	w0, w0, #0x2e
    3ab8:	strb	wzr, [x9, #141]
    3abc:	csel	w0, w0, w1, lt  // lt = tstop
    3ac0:	strb	w0, [x9, #140]
    3ac4:	ret

0000000000003ac8 <encrypt_r@GLIBC_2.17>:
    3ac8:	stp	x29, x30, [sp, #-96]!
    3acc:	mov	x29, sp
    3ad0:	stp	x19, x20, [sp, #16]
    3ad4:	adrp	x20, 17000 <setkey@GLIBC_2.17+0x131e8>
    3ad8:	mov	x19, x0
    3adc:	stp	x21, x22, [sp, #32]
    3ae0:	mov	x21, x2
    3ae4:	mov	w22, w1
    3ae8:	ldr	x2, [x20, #4048]
    3aec:	mov	x1, x21
    3af0:	ldr	x0, [x2]
    3af4:	str	x0, [sp, #88]
    3af8:	mov	x0, #0x0                   	// #0
    3afc:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    3b00:	add	x0, x0, #0x6d8
    3b04:	bl	3450 <crypt@@GLIBC_2.17+0x21b8>
    3b08:	add	x1, x21, #0x20, lsl #12
    3b0c:	cmp	w22, #0x0
    3b10:	cset	w2, eq  // eq = none
    3b14:	ldr	w0, [x1, #152]
    3b18:	cmp	w0, #0x0
    3b1c:	cset	w0, eq  // eq = none
    3b20:	cmp	w2, w0
    3b24:	b.eq	3b54 <encrypt_r@GLIBC_2.17+0x8c>  // b.none
    3b28:	add	x0, x21, #0x78
    3b2c:	mov	x2, x21
    3b30:	add	x5, x21, #0x38
    3b34:	nop
    3b38:	ldr	x4, [x2]
    3b3c:	ldr	x3, [x0]
    3b40:	str	x4, [x0], #-8
    3b44:	str	x3, [x2], #8
    3b48:	cmp	x5, x0
    3b4c:	b.ne	3b38 <encrypt_r@GLIBC_2.17+0x70>  // b.any
    3b50:	str	w22, [x1, #152]
    3b54:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3b58:	add	x2, x2, #0x738
    3b5c:	add	x5, x2, #0x2a0
    3b60:	add	x4, x2, #0xde0
    3b64:	mov	x0, #0x0                   	// #0
    3b68:	add	x2, x2, #0x3e0
    3b6c:	mov	w1, #0x8                   	// #8
    3b70:	mov	x3, #0x0                   	// #0
    3b74:	b	3b84 <encrypt_r@GLIBC_2.17+0xbc>
    3b78:	ldr	w1, [x2, x0, lsl #2]
    3b7c:	sub	w1, w1, #0x1
    3b80:	ldr	w1, [x4, w1, sxtw #2]
    3b84:	add	x1, x19, w1, sxtw
    3b88:	ldurb	w1, [x1, #-1]
    3b8c:	cbz	w1, 3b98 <encrypt_r@GLIBC_2.17+0xd0>
    3b90:	ldr	x1, [x5, x0, lsl #3]
    3b94:	orr	x3, x3, x1
    3b98:	add	x0, x0, #0x1
    3b9c:	cmp	x0, #0x18
    3ba0:	b.ne	3b78 <encrypt_r@GLIBC_2.17+0xb0>  // b.any
    3ba4:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3ba8:	add	x2, x2, #0x738
    3bac:	add	x6, x2, #0x2a0
    3bb0:	add	x5, x2, #0xde0
    3bb4:	mov	x0, #0x0                   	// #0
    3bb8:	add	x2, x2, #0x3e0
    3bbc:	mov	w1, #0x4                   	// #4
    3bc0:	mov	x4, #0x0                   	// #0
    3bc4:	b	3bd8 <encrypt_r@GLIBC_2.17+0x110>
    3bc8:	add	x1, x2, x0, lsl #2
    3bcc:	ldr	w1, [x1, #96]
    3bd0:	sub	w1, w1, #0x1
    3bd4:	ldr	w1, [x5, w1, sxtw #2]
    3bd8:	add	x1, x19, w1, sxtw
    3bdc:	ldurb	w1, [x1, #-1]
    3be0:	cbz	w1, 3bec <encrypt_r@GLIBC_2.17+0x124>
    3be4:	ldr	x1, [x6, x0, lsl #3]
    3be8:	orr	x4, x4, x1
    3bec:	add	x0, x0, #0x1
    3bf0:	cmp	x0, #0x18
    3bf4:	b.ne	3bc8 <encrypt_r@GLIBC_2.17+0x100>  // b.any
    3bf8:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3bfc:	add	x2, x2, #0x738
    3c00:	add	x7, x2, #0x2a0
    3c04:	add	x5, x2, #0xde0
    3c08:	mov	x0, #0x0                   	// #0
    3c0c:	add	x2, x2, #0x3e0
    3c10:	mov	w1, #0x7                   	// #7
    3c14:	mov	x6, #0x0                   	// #0
    3c18:	b	3c28 <encrypt_r@GLIBC_2.17+0x160>
    3c1c:	ldr	w1, [x2, x0, lsl #2]
    3c20:	add	w1, w1, #0x1f
    3c24:	ldr	w1, [x5, w1, sxtw #2]
    3c28:	add	x1, x19, w1, sxtw
    3c2c:	ldurb	w1, [x1, #-1]
    3c30:	cbz	w1, 3c3c <encrypt_r@GLIBC_2.17+0x174>
    3c34:	ldr	x1, [x7, x0, lsl #3]
    3c38:	orr	x6, x6, x1
    3c3c:	add	x0, x0, #0x1
    3c40:	cmp	x0, #0x18
    3c44:	b.ne	3c1c <encrypt_r@GLIBC_2.17+0x154>  // b.any
    3c48:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3c4c:	add	x2, x2, #0x738
    3c50:	add	x8, x2, #0x2a0
    3c54:	add	x7, x2, #0xde0
    3c58:	mov	x0, #0x0                   	// #0
    3c5c:	add	x2, x2, #0x3e0
    3c60:	mov	w1, #0x3                   	// #3
    3c64:	mov	x5, #0x0                   	// #0
    3c68:	b	3c7c <encrypt_r@GLIBC_2.17+0x1b4>
    3c6c:	add	x1, x2, x0, lsl #2
    3c70:	ldr	w1, [x1, #96]
    3c74:	add	w1, w1, #0x1f
    3c78:	ldr	w1, [x7, w1, sxtw #2]
    3c7c:	add	x1, x19, w1, sxtw
    3c80:	ldurb	w1, [x1, #-1]
    3c84:	cbz	w1, 3c90 <encrypt_r@GLIBC_2.17+0x1c8>
    3c88:	ldr	x1, [x8, x0, lsl #3]
    3c8c:	orr	x5, x5, x1
    3c90:	add	x0, x0, #0x1
    3c94:	cmp	x0, #0x18
    3c98:	b.ne	3c6c <encrypt_r@GLIBC_2.17+0x1a4>  // b.any
    3c9c:	add	x22, sp, #0x38
    3ca0:	mov	x1, x21
    3ca4:	mov	x2, x22
    3ca8:	mov	x0, #0x1                   	// #1
    3cac:	stp	x3, x4, [sp, #56]
    3cb0:	stp	x6, x5, [sp, #72]
    3cb4:	bl	2d50 <crypt@@GLIBC_2.17+0x1ab8>
    3cb8:	mov	x1, x21
    3cbc:	mov	x0, x22
    3cc0:	bl	37e8 <crypt@@GLIBC_2.17+0x2550>
    3cc4:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3cc8:	add	x2, x2, #0x738
    3ccc:	add	x2, x2, #0xe0
    3cd0:	mov	x0, #0x0                   	// #0
    3cd4:	mov	x1, #0x80000000            	// #2147483648
    3cd8:	ldp	x4, x3, [sp, #56]
    3cdc:	b	3ce4 <encrypt_r@GLIBC_2.17+0x21c>
    3ce0:	ldr	x1, [x2, x0, lsl #3]
    3ce4:	tst	x4, x1
    3ce8:	cset	w1, ne  // ne = any
    3cec:	strb	w1, [x19, x0]
    3cf0:	add	x0, x0, #0x1
    3cf4:	cmp	x0, #0x20
    3cf8:	b.ne	3ce0 <encrypt_r@GLIBC_2.17+0x218>  // b.any
    3cfc:	adrp	x2, 5000 <setkey@GLIBC_2.17+0x11e8>
    3d00:	add	x2, x2, #0x738
    3d04:	add	x19, x19, #0x20
    3d08:	add	x2, x2, #0xe0
    3d0c:	mov	x0, #0x0                   	// #0
    3d10:	mov	x1, #0x80000000            	// #2147483648
    3d14:	b	3d1c <encrypt_r@GLIBC_2.17+0x254>
    3d18:	ldr	x1, [x2, x0, lsl #3]
    3d1c:	tst	x3, x1
    3d20:	cset	w1, ne  // ne = any
    3d24:	strb	w1, [x19, x0]
    3d28:	add	x0, x0, #0x1
    3d2c:	cmp	x0, #0x20
    3d30:	b.ne	3d18 <encrypt_r@GLIBC_2.17+0x250>  // b.any
    3d34:	ldr	x20, [x20, #4048]
    3d38:	ldr	x1, [sp, #88]
    3d3c:	ldr	x0, [x20]
    3d40:	eor	x0, x1, x0
    3d44:	cbnz	x0, 3d58 <encrypt_r@GLIBC_2.17+0x290>
    3d48:	ldp	x19, x20, [sp, #16]
    3d4c:	ldp	x21, x22, [sp, #32]
    3d50:	ldp	x29, x30, [sp], #96
    3d54:	ret
    3d58:	bl	d60 <__stack_chk_fail@plt>
    3d5c:	nop

0000000000003d60 <encrypt@GLIBC_2.17>:
    3d60:	adrp	x2, 17000 <setkey@GLIBC_2.17+0x131e8>
    3d64:	ldr	x2, [x2, #4056]
    3d68:	b	3ac8 <encrypt_r@GLIBC_2.17>
    3d6c:	nop

0000000000003d70 <setkey_r@GLIBC_2.17>:
    3d70:	stp	x29, x30, [sp, #-64]!
    3d74:	mov	x29, sp
    3d78:	stp	x19, x20, [sp, #16]
    3d7c:	adrp	x20, 17000 <setkey@GLIBC_2.17+0x131e8>
    3d80:	mov	x19, x0
    3d84:	ldr	x2, [x20, #4048]
    3d88:	adrp	x0, 5000 <setkey@GLIBC_2.17+0x11e8>
    3d8c:	add	x0, x0, #0x6d8
    3d90:	ldr	x3, [x2]
    3d94:	str	x3, [sp, #56]
    3d98:	mov	x3, #0x0                   	// #0
    3d9c:	str	x21, [sp, #32]
    3da0:	mov	x21, x1
    3da4:	bl	3450 <crypt@@GLIBC_2.17+0x21b8>
    3da8:	add	x0, sp, #0x30
    3dac:	add	x5, x19, #0x8
    3db0:	add	x7, x19, #0x48
    3db4:	mov	x6, x0
    3db8:	sub	x3, x5, #0x8
    3dbc:	mov	w2, #0x0                   	// #0
    3dc0:	ldrb	w4, [x3], #1
    3dc4:	cmp	x3, x5
    3dc8:	orr	w2, w4, w2, lsl #1
    3dcc:	and	w2, w2, #0xff
    3dd0:	b.ne	3dc0 <setkey_r@GLIBC_2.17+0x50>  // b.any
    3dd4:	lsr	w2, w2, #1
    3dd8:	strb	w2, [x6], #1
    3ddc:	add	x5, x3, #0x8
    3de0:	cmp	x5, x7
    3de4:	b.ne	3db8 <setkey_r@GLIBC_2.17+0x48>  // b.any
    3de8:	mov	x1, x21
    3dec:	bl	3698 <crypt@@GLIBC_2.17+0x2400>
    3df0:	ldr	x20, [x20, #4048]
    3df4:	ldr	x1, [sp, #56]
    3df8:	ldr	x0, [x20]
    3dfc:	eor	x0, x1, x0
    3e00:	cbnz	x0, 3e14 <setkey_r@GLIBC_2.17+0xa4>
    3e04:	ldp	x19, x20, [sp, #16]
    3e08:	ldr	x21, [sp, #32]
    3e0c:	ldp	x29, x30, [sp], #64
    3e10:	ret
    3e14:	bl	d60 <__stack_chk_fail@plt>

0000000000003e18 <setkey@GLIBC_2.17>:
    3e18:	adrp	x1, 17000 <setkey@GLIBC_2.17+0x131e8>
    3e1c:	ldr	x1, [x1, #4056]
    3e20:	b	3d70 <setkey_r@GLIBC_2.17>
    3e24:	nop
    3e28:	orr	w3, w4, w3, lsl #8
    3e2c:	cmp	w5, #0x0
    3e30:	orr	w2, w3, w2, lsl #16
    3e34:	sub	w5, w5, #0x1
    3e38:	b.le	3e88 <setkey@GLIBC_2.17+0x70>
    3e3c:	adrp	x7, 5000 <setkey@GLIBC_2.17+0x11e8>
    3e40:	ldr	w3, [x1]
    3e44:	add	x7, x7, #0x6e0
    3e48:	b	3e78 <setkey@GLIBC_2.17+0x60>
    3e4c:	ldr	x3, [x0]
    3e50:	lsr	w2, w2, #6
    3e54:	ldrb	w4, [x7, w4, uxtw]
    3e58:	cmn	w5, #0x1
    3e5c:	add	x6, x3, #0x1
    3e60:	str	x6, [x0]
    3e64:	strb	w4, [x3]
    3e68:	ldr	w3, [x1]
    3e6c:	sub	w3, w3, #0x1
    3e70:	str	w3, [x1]
    3e74:	b.eq	3e88 <setkey@GLIBC_2.17+0x70>  // b.none
    3e78:	and	w4, w2, #0x3f
    3e7c:	sub	w5, w5, #0x1
    3e80:	cmp	w3, #0x0
    3e84:	b.gt	3e4c <setkey@GLIBC_2.17+0x34>
    3e88:	ret
    3e8c:	nop
    3e90:	mov	x2, #0x2301                	// #8961
    3e94:	mov	x1, #0xdcfe                	// #56574
    3e98:	movk	x2, #0x6745, lsl #16
    3e9c:	movk	x1, #0x98ba, lsl #16
    3ea0:	movk	x2, #0xab89, lsl #32
    3ea4:	movk	x1, #0x5476, lsl #32
    3ea8:	movk	x2, #0xefcd, lsl #48
    3eac:	movk	x1, #0x1032, lsl #48
    3eb0:	stp	x2, x1, [x0]
    3eb4:	str	xzr, [x0, #16]
    3eb8:	str	wzr, [x0, #24]
    3ebc:	ret
    3ec0:	mov	x2, x0
    3ec4:	mov	x0, x1
    3ec8:	ldr	w1, [x2]
    3ecc:	str	w1, [x0]
    3ed0:	ldr	w1, [x2, #4]
    3ed4:	str	w1, [x0, #4]
    3ed8:	ldr	w1, [x2, #8]
    3edc:	str	w1, [x0, #8]
    3ee0:	ldr	w1, [x2, #12]
    3ee4:	str	w1, [x0, #12]
    3ee8:	ret
    3eec:	nop
    3ef0:	stp	x29, x30, [sp, #-112]!
    3ef4:	and	x4, x1, #0xfffffffffffffffc
    3ef8:	add	x6, x0, x4
    3efc:	mov	x29, sp
    3f00:	ldp	w3, w4, [x2, #16]
    3f04:	lsr	x5, x1, #32
    3f08:	stp	x27, x28, [sp, #80]
    3f0c:	adds	w1, w3, w1
    3f10:	str	w1, [x2, #16]
    3f14:	adc	w1, w4, w5
    3f18:	str	w1, [x2, #20]
    3f1c:	cmp	x0, x6
    3f20:	ldp	w28, w10, [x2]
    3f24:	ldp	w11, w12, [x2, #8]
    3f28:	b.cs	490c <setkey@GLIBC_2.17+0xaf4>  // b.hs, b.nlast
    3f2c:	mov	x27, x6
    3f30:	stp	x19, x20, [sp, #16]
    3f34:	stp	x21, x22, [sp, #32]
    3f38:	stp	x23, x24, [sp, #48]
    3f3c:	stp	x25, x26, [sp, #64]
    3f40:	str	x2, [sp, #104]
    3f44:	nop
    3f48:	ldp	w26, w20, [x0]
    3f4c:	eor	w3, w11, w12
    3f50:	and	w3, w3, w10
    3f54:	mov	w1, #0xa478                	// #42104
    3f58:	eor	w3, w3, w12
    3f5c:	movk	w1, #0xd76a, lsl #16
    3f60:	add	w3, w3, w26
    3f64:	add	w1, w28, w1
    3f68:	add	w3, w3, w1
    3f6c:	eor	w2, w10, w11
    3f70:	mov	w1, #0xb756                	// #46934
    3f74:	mov	w4, #0x70db                	// #28891
    3f78:	movk	w1, #0xe8c7, lsl #16
    3f7c:	ror	w3, w3, #25
    3f80:	add	w3, w3, w10
    3f84:	add	w1, w12, w1
    3f88:	and	w2, w2, w3
    3f8c:	eor	w22, w3, w10
    3f90:	eor	w2, w2, w11
    3f94:	movk	w4, #0x2420, lsl #16
    3f98:	add	w2, w2, w20
    3f9c:	add	w4, w11, w4
    3fa0:	add	w2, w2, w1
    3fa4:	mov	w1, #0xfaf                 	// #4015
    3fa8:	ldp	w13, w21, [x0, #8]
    3fac:	ror	w2, w2, #20
    3fb0:	add	w2, w3, w2
    3fb4:	movk	w1, #0xf57c, lsl #16
    3fb8:	and	w22, w22, w2
    3fbc:	mov	w5, #0xceee                	// #52974
    3fc0:	ldp	w15, w23, [x0, #16]
    3fc4:	eor	w22, w22, w10
    3fc8:	add	w22, w22, w13
    3fcc:	movk	w5, #0xc1bd, lsl #16
    3fd0:	add	w22, w22, w4
    3fd4:	add	w16, w15, w1
    3fd8:	mov	w1, #0xc62a                	// #50730
    3fdc:	add	w14, w10, w5
    3fe0:	movk	w1, #0x4787, lsl #16
    3fe4:	ror	w22, w22, #15
    3fe8:	add	w22, w2, w22
    3fec:	add	w8, w23, w1
    3ff0:	eor	w1, w3, w2
    3ff4:	eor	w24, w2, w22
    3ff8:	and	w1, w1, w22
    3ffc:	mov	w5, #0x4613                	// #17939
    4000:	eor	w1, w1, w3
    4004:	movk	w5, #0xa830, lsl #16
    4008:	add	w1, w1, w21
    400c:	mov	w4, #0x9501                	// #38145
    4010:	add	w1, w1, w14
    4014:	movk	w4, #0xfd46, lsl #16
    4018:	ldp	w17, w25, [x0, #24]
    401c:	ror	w1, w1, #10
    4020:	add	w1, w22, w1
    4024:	ldr	w7, [x0, #40]
    4028:	and	w24, w24, w1
    402c:	add	w6, w17, w5
    4030:	eor	w24, w24, w2
    4034:	add	w18, w25, w4
    4038:	add	w3, w24, w3
    403c:	eor	w24, w22, w1
    4040:	add	w16, w16, w3
    4044:	mov	w4, #0x98d8                	// #39128
    4048:	ldp	w19, w9, [x0, #32]
    404c:	ror	w16, w16, #25
    4050:	add	w16, w1, w16
    4054:	movk	w4, #0x6980, lsl #16
    4058:	and	w24, w24, w16
    405c:	add	w5, w19, w4
    4060:	eor	w24, w24, w22
    4064:	mov	w4, #0xf7af                	// #63407
    4068:	add	w2, w24, w2
    406c:	eor	w24, w1, w16
    4070:	add	w8, w8, w2
    4074:	movk	w4, #0x8b44, lsl #16
    4078:	add	w4, w9, w4
    407c:	mov	w3, #0xffff5bb1            	// #-42063
    4080:	add	w3, w7, w3
    4084:	ror	w8, w8, #20
    4088:	add	w8, w16, w8
    408c:	mov	w2, #0xd7be                	// #55230
    4090:	and	w24, w24, w8
    4094:	movk	w2, #0x895c, lsl #16
    4098:	eor	w24, w24, w1
    409c:	add	w22, w24, w22
    40a0:	eor	w24, w16, w8
    40a4:	add	w6, w6, w22
    40a8:	ldp	w14, w22, [x0, #44]
    40ac:	ror	w6, w6, #15
    40b0:	add	w6, w8, w6
    40b4:	and	w24, w24, w6
    40b8:	add	w2, w14, w2
    40bc:	eor	w24, w24, w16
    40c0:	add	w1, w24, w1
    40c4:	eor	w24, w8, w6
    40c8:	add	w1, w18, w1
    40cc:	mov	w18, #0x1122                	// #4386
    40d0:	movk	w18, #0x6b90, lsl #16
    40d4:	add	w18, w22, w18
    40d8:	ror	w1, w1, #10
    40dc:	add	w1, w6, w1
    40e0:	and	w24, w24, w1
    40e4:	eor	w24, w24, w8
    40e8:	add	w16, w24, w16
    40ec:	eor	w24, w6, w1
    40f0:	add	w5, w5, w16
    40f4:	ldr	w16, [x0, #52]
    40f8:	ror	w5, w5, #25
    40fc:	add	w5, w1, w5
    4100:	and	w24, w24, w5
    4104:	eor	w24, w24, w6
    4108:	add	w24, w24, w8
    410c:	eor	w8, w1, w5
    4110:	add	w4, w4, w24
    4114:	mov	w24, #0x7193                	// #29075
    4118:	movk	w24, #0xfd98, lsl #16
    411c:	add	w30, w16, w24
    4120:	ror	w4, w4, #20
    4124:	add	w4, w5, w4
    4128:	and	w8, w8, w4
    412c:	eor	w8, w8, w1
    4130:	add	w8, w8, w6
    4134:	eor	w6, w5, w4
    4138:	add	w3, w3, w8
    413c:	ror	w3, w3, #15
    4140:	add	w3, w4, w3
    4144:	and	w6, w6, w3
    4148:	eor	w6, w6, w5
    414c:	add	w6, w6, w1
    4150:	eor	w1, w4, w3
    4154:	add	w2, w2, w6
    4158:	mov	w6, #0x438e                	// #17294
    415c:	movk	w6, #0xa679, lsl #16
    4160:	ror	w2, w2, #10
    4164:	add	w2, w3, w2
    4168:	and	w1, w1, w2
    416c:	eor	w1, w1, w4
    4170:	add	w5, w1, w5
    4174:	add	w5, w18, w5
    4178:	ldp	w24, w18, [x0, #56]
    417c:	ror	w1, w5, #25
    4180:	add	w1, w2, w1
    4184:	add	x0, x0, #0x40
    4188:	add	w8, w24, w6
    418c:	eor	w6, w3, w2
    4190:	and	w6, w6, w1
    4194:	eor	w5, w2, w1
    4198:	eor	w6, w6, w3
    419c:	cmp	x27, x0
    41a0:	add	w4, w6, w4
    41a4:	add	w30, w30, w4
    41a8:	mov	w4, #0x821                 	// #2081
    41ac:	movk	w4, #0x49b4, lsl #16
    41b0:	add	w6, w18, w4
    41b4:	ror	w30, w30, #20
    41b8:	add	w30, w1, w30
    41bc:	and	w5, w5, w30
    41c0:	eor	w4, w1, w30
    41c4:	eor	w5, w5, w2
    41c8:	add	w3, w5, w3
    41cc:	add	w8, w8, w3
    41d0:	mov	w3, #0x2562                	// #9570
    41d4:	movk	w3, #0xf61e, lsl #16
    41d8:	add	w5, w20, w3
    41dc:	mov	w3, #0xb340                	// #45888
    41e0:	ror	w8, w8, #15
    41e4:	add	w8, w30, w8
    41e8:	movk	w3, #0xc040, lsl #16
    41ec:	and	w4, w4, w8
    41f0:	eor	w4, w4, w1
    41f4:	add	w2, w4, w2
    41f8:	add	w4, w17, w3
    41fc:	add	w6, w6, w2
    4200:	mov	w2, #0x5a51                	// #23121
    4204:	movk	w2, #0x265e, lsl #16
    4208:	add	w3, w14, w2
    420c:	ror	w6, w6, #10
    4210:	add	w6, w8, w6
    4214:	eor	w2, w8, w6
    4218:	and	w2, w2, w30
    421c:	eor	w2, w2, w8
    4220:	add	w1, w2, w1
    4224:	add	w5, w5, w1
    4228:	mov	w1, #0xc7aa                	// #51114
    422c:	movk	w1, #0xe9b6, lsl #16
    4230:	add	w2, w26, w1
    4234:	ror	w5, w5, #27
    4238:	add	w5, w6, w5
    423c:	eor	w1, w6, w5
    4240:	and	w1, w1, w8
    4244:	eor	w1, w1, w6
    4248:	add	w30, w1, w30
    424c:	mov	w1, #0x105d                	// #4189
    4250:	add	w4, w4, w30
    4254:	movk	w1, #0xd62f, lsl #16
    4258:	add	w30, w23, w1
    425c:	ror	w4, w4, #23
    4260:	add	w4, w5, w4
    4264:	eor	w1, w5, w4
    4268:	and	w1, w1, w6
    426c:	eor	w1, w1, w5
    4270:	add	w8, w1, w8
    4274:	mov	w1, #0x1453                	// #5203
    4278:	add	w3, w3, w8
    427c:	movk	w1, #0x244, lsl #16
    4280:	add	w1, w7, w1
    4284:	ror	w3, w3, #18
    4288:	add	w3, w4, w3
    428c:	eor	w8, w4, w3
    4290:	and	w8, w8, w5
    4294:	eor	w8, w8, w4
    4298:	add	w6, w8, w6
    429c:	add	w2, w2, w6
    42a0:	mov	w6, #0xe681                	// #59009
    42a4:	movk	w6, #0xd8a1, lsl #16
    42a8:	add	w8, w18, w6
    42ac:	ror	w2, w2, #12
    42b0:	add	w2, w3, w2
    42b4:	eor	w6, w3, w2
    42b8:	and	w6, w6, w4
    42bc:	eor	w6, w6, w3
    42c0:	add	w5, w6, w5
    42c4:	add	w30, w30, w5
    42c8:	mov	w5, #0xfbc8                	// #64456
    42cc:	movk	w5, #0xe7d3, lsl #16
    42d0:	add	w6, w15, w5
    42d4:	ror	w30, w30, #27
    42d8:	add	w30, w2, w30
    42dc:	eor	w5, w2, w30
    42e0:	and	w5, w5, w3
    42e4:	eor	w5, w5, w2
    42e8:	add	w4, w5, w4
    42ec:	add	w1, w1, w4
    42f0:	mov	w4, #0xcde6                	// #52710
    42f4:	movk	w4, #0x21e1, lsl #16
    42f8:	add	w5, w9, w4
    42fc:	ror	w1, w1, #23
    4300:	add	w1, w30, w1
    4304:	eor	w4, w30, w1
    4308:	and	w4, w4, w2
    430c:	eor	w4, w4, w30
    4310:	add	w3, w4, w3
    4314:	add	w8, w8, w3
    4318:	mov	w3, #0x7d6                 	// #2006
    431c:	movk	w3, #0xc337, lsl #16
    4320:	add	w4, w24, w3
    4324:	ror	w8, w8, #18
    4328:	add	w8, w1, w8
    432c:	eor	w3, w1, w8
    4330:	and	w3, w3, w30
    4334:	eor	w3, w3, w1
    4338:	add	w2, w3, w2
    433c:	mov	w3, #0xd87                 	// #3463
    4340:	add	w6, w6, w2
    4344:	movk	w3, #0xf4d5, lsl #16
    4348:	add	w3, w21, w3
    434c:	ror	w6, w6, #12
    4350:	add	w6, w8, w6
    4354:	eor	w2, w8, w6
    4358:	and	w2, w2, w1
    435c:	eor	w2, w2, w8
    4360:	add	w30, w2, w30
    4364:	add	w5, w5, w30
    4368:	mov	w30, #0x14ed                	// #5357
    436c:	movk	w30, #0x455a, lsl #16
    4370:	add	w30, w19, w30
    4374:	ror	w5, w5, #27
    4378:	add	w5, w6, w5
    437c:	eor	w2, w6, w5
    4380:	and	w2, w2, w8
    4384:	eor	w2, w2, w6
    4388:	add	w1, w2, w1
    438c:	add	w4, w4, w1
    4390:	mov	w1, #0xe905                	// #59653
    4394:	movk	w1, #0xa9e3, lsl #16
    4398:	add	w1, w16, w1
    439c:	ror	w4, w4, #23
    43a0:	add	w4, w5, w4
    43a4:	eor	w2, w5, w4
    43a8:	and	w2, w2, w6
    43ac:	eor	w2, w2, w5
    43b0:	add	w8, w2, w8
    43b4:	add	w3, w3, w8
    43b8:	mov	w8, #0xa3f8                	// #41976
    43bc:	movk	w8, #0xfcef, lsl #16
    43c0:	add	w8, w13, w8
    43c4:	ror	w3, w3, #18
    43c8:	add	w3, w4, w3
    43cc:	eor	w2, w4, w3
    43d0:	and	w2, w2, w5
    43d4:	eor	w2, w2, w4
    43d8:	add	w2, w2, w6
    43dc:	add	w2, w30, w2
    43e0:	mov	w30, #0x2d9                 	// #729
    43e4:	movk	w30, #0x676f, lsl #16
    43e8:	add	w30, w25, w30
    43ec:	ror	w2, w2, #12
    43f0:	add	w2, w3, w2
    43f4:	eor	w6, w3, w2
    43f8:	and	w6, w6, w4
    43fc:	eor	w6, w6, w3
    4400:	add	w5, w6, w5
    4404:	mov	w6, #0x4c8a                	// #19594
    4408:	add	w1, w1, w5
    440c:	movk	w6, #0x8d2a, lsl #16
    4410:	add	w6, w22, w6
    4414:	ror	w1, w1, #27
    4418:	add	w1, w2, w1
    441c:	eor	w5, w2, w1
    4420:	and	w5, w5, w3
    4424:	eor	w5, w5, w2
    4428:	add	w4, w5, w4
    442c:	add	w8, w8, w4
    4430:	sub	w4, w23, #0x5c, lsl #12
    4434:	sub	w4, w4, #0x6be
    4438:	ror	w8, w8, #23
    443c:	add	w8, w1, w8
    4440:	eor	w5, w1, w8
    4444:	and	w5, w5, w2
    4448:	eor	w5, w5, w1
    444c:	add	w3, w5, w3
    4450:	add	w30, w30, w3
    4454:	ror	w30, w30, #18
    4458:	add	w30, w8, w30
    445c:	eor	w5, w8, w30
    4460:	and	w3, w5, w1
    4464:	eor	w3, w3, w8
    4468:	add	w2, w3, w2
    446c:	mov	w3, #0xf681                	// #63105
    4470:	add	w6, w6, w2
    4474:	movk	w3, #0x8771, lsl #16
    4478:	add	w3, w19, w3
    447c:	ror	w6, w6, #12
    4480:	add	w6, w30, w6
    4484:	eor	w5, w5, w6
    4488:	eor	w2, w30, w6
    448c:	add	w1, w5, w1
    4490:	mov	w5, #0x6122                	// #24866
    4494:	add	w4, w4, w1
    4498:	movk	w5, #0x6d9d, lsl #16
    449c:	add	w5, w14, w5
    44a0:	ror	w4, w4, #28
    44a4:	add	w4, w6, w4
    44a8:	eor	w2, w2, w4
    44ac:	eor	w1, w6, w4
    44b0:	add	w8, w2, w8
    44b4:	mov	w2, #0x380c                	// #14348
    44b8:	add	w3, w3, w8
    44bc:	movk	w2, #0xfde5, lsl #16
    44c0:	add	w2, w24, w2
    44c4:	ror	w3, w3, #21
    44c8:	add	w3, w4, w3
    44cc:	eor	w1, w1, w3
    44d0:	eor	w8, w4, w3
    44d4:	add	w30, w1, w30
    44d8:	mov	w1, #0xea44                	// #59972
    44dc:	add	w5, w5, w30
    44e0:	movk	w1, #0xa4be, lsl #16
    44e4:	add	w1, w20, w1
    44e8:	ror	w5, w5, #16
    44ec:	add	w5, w3, w5
    44f0:	eor	w8, w8, w5
    44f4:	eor	w30, w3, w5
    44f8:	add	w6, w8, w6
    44fc:	mov	w8, #0xcfa9                	// #53161
    4500:	add	w2, w2, w6
    4504:	movk	w8, #0x4bde, lsl #16
    4508:	add	w8, w15, w8
    450c:	ror	w2, w2, #9
    4510:	add	w2, w5, w2
    4514:	eor	w30, w30, w2
    4518:	eor	w6, w5, w2
    451c:	add	w4, w30, w4
    4520:	mov	w30, #0x4b60                	// #19296
    4524:	add	w1, w1, w4
    4528:	movk	w30, #0xf6bb, lsl #16
    452c:	add	w30, w25, w30
    4530:	ror	w1, w1, #28
    4534:	add	w1, w2, w1
    4538:	eor	w6, w6, w1
    453c:	eor	w4, w2, w1
    4540:	add	w3, w6, w3
    4544:	mov	w6, #0xbc70                	// #48240
    4548:	add	w8, w8, w3
    454c:	movk	w6, #0xbebf, lsl #16
    4550:	add	w6, w7, w6
    4554:	sub	w7, w7, #0x100, lsl #12
    4558:	sub	w7, w7, #0xb83
    455c:	ror	w8, w8, #21
    4560:	add	w8, w1, w8
    4564:	eor	w4, w4, w8
    4568:	eor	w3, w1, w8
    456c:	add	w5, w4, w5
    4570:	mov	w4, #0x7ec6                	// #32454
    4574:	add	w30, w30, w5
    4578:	movk	w4, #0x289b, lsl #16
    457c:	add	w4, w16, w4
    4580:	ror	w30, w30, #16
    4584:	add	w30, w8, w30
    4588:	eor	w3, w3, w30
    458c:	eor	w5, w8, w30
    4590:	add	w2, w3, w2
    4594:	mov	w3, #0x27fa                	// #10234
    4598:	add	w6, w6, w2
    459c:	movk	w3, #0xeaa1, lsl #16
    45a0:	add	w3, w26, w3
    45a4:	ror	w6, w6, #9
    45a8:	add	w6, w30, w6
    45ac:	eor	w5, w5, w6
    45b0:	eor	w2, w30, w6
    45b4:	add	w1, w5, w1
    45b8:	mov	w5, #0x3085                	// #12421
    45bc:	add	w4, w4, w1
    45c0:	movk	w5, #0xd4ef, lsl #16
    45c4:	add	w5, w21, w5
    45c8:	ror	w4, w4, #28
    45cc:	add	w4, w6, w4
    45d0:	eor	w2, w2, w4
    45d4:	eor	w1, w6, w4
    45d8:	add	w8, w2, w8
    45dc:	mov	w2, #0x1d05                	// #7429
    45e0:	add	w3, w3, w8
    45e4:	movk	w2, #0x488, lsl #16
    45e8:	add	w2, w17, w2
    45ec:	ror	w3, w3, #21
    45f0:	add	w3, w4, w3
    45f4:	eor	w1, w1, w3
    45f8:	eor	w8, w4, w3
    45fc:	add	w30, w1, w30
    4600:	mov	w1, #0xd039                	// #53305
    4604:	add	w5, w5, w30
    4608:	movk	w1, #0xd9d4, lsl #16
    460c:	add	w1, w9, w1
    4610:	ror	w5, w5, #16
    4614:	add	w5, w3, w5
    4618:	eor	w8, w8, w5
    461c:	eor	w30, w3, w5
    4620:	add	w6, w8, w6
    4624:	mov	w8, #0x99e5                	// #39397
    4628:	add	w2, w2, w6
    462c:	movk	w8, #0xe6db, lsl #16
    4630:	add	w8, w22, w8
    4634:	ror	w2, w2, #9
    4638:	add	w2, w5, w2
    463c:	eor	w30, w30, w2
    4640:	eor	w6, w5, w2
    4644:	add	w4, w30, w4
    4648:	mov	w30, #0x7cf8                	// #31992
    464c:	add	w1, w1, w4
    4650:	movk	w30, #0x1fa2, lsl #16
    4654:	add	w30, w18, w30
    4658:	ror	w1, w1, #28
    465c:	add	w1, w2, w1
    4660:	eor	w6, w6, w1
    4664:	eor	w4, w2, w1
    4668:	add	w3, w6, w3
    466c:	mov	w6, #0x5665                	// #22117
    4670:	add	w8, w8, w3
    4674:	movk	w6, #0xc4ac, lsl #16
    4678:	add	w6, w13, w6
    467c:	ror	w8, w8, #21
    4680:	add	w8, w1, w8
    4684:	eor	w4, w4, w8
    4688:	eor	w3, w1, w8
    468c:	add	w5, w4, w5
    4690:	mov	w4, #0x2244                	// #8772
    4694:	add	w30, w30, w5
    4698:	movk	w4, #0xf429, lsl #16
    469c:	add	w26, w26, w4
    46a0:	mov	w4, #0xff97                	// #65431
    46a4:	movk	w4, #0x432a, lsl #16
    46a8:	ror	w30, w30, #16
    46ac:	add	w30, w8, w30
    46b0:	add	w25, w25, w4
    46b4:	eor	w3, w3, w30
    46b8:	mov	w4, #0x23a7                	// #9127
    46bc:	add	w2, w3, w2
    46c0:	movk	w4, #0xab94, lsl #16
    46c4:	add	w6, w6, w2
    46c8:	mov	w2, #0xa039                	// #41017
    46cc:	movk	w2, #0xfc93, lsl #16
    46d0:	add	w23, w23, w2
    46d4:	mov	w2, #0x59c3                	// #22979
    46d8:	ror	w6, w6, #9
    46dc:	add	w6, w30, w6
    46e0:	movk	w2, #0x655b, lsl #16
    46e4:	add	w22, w22, w2
    46e8:	orn	w2, w6, w8
    46ec:	eor	w2, w2, w30
    46f0:	add	w24, w24, w4
    46f4:	add	w1, w2, w1
    46f8:	mov	w3, #0xcc92                	// #52370
    46fc:	add	w26, w26, w1
    4700:	mov	w1, #0x7e4f                	// #32335
    4704:	movk	w1, #0x6fa8, lsl #16
    4708:	add	w19, w19, w1
    470c:	mov	w1, #0xe6e0                	// #59104
    4710:	ror	w26, w26, #26
    4714:	add	w26, w6, w26
    4718:	movk	w1, #0xfe2c, lsl #16
    471c:	orn	w4, w26, w30
    4720:	add	w18, w18, w1
    4724:	eor	w4, w4, w6
    4728:	mov	w1, #0x4314                	// #17172
    472c:	movk	w1, #0xa301, lsl #16
    4730:	add	w4, w4, w8
    4734:	add	w17, w17, w1
    4738:	add	w4, w25, w4
    473c:	mov	w1, #0x11a1                	// #4513
    4740:	movk	w3, #0x8f0c, lsl #16
    4744:	movk	w1, #0x4e08, lsl #16
    4748:	ror	w4, w4, #22
    474c:	add	w16, w16, w1
    4750:	mov	w1, #0x7e82                	// #32386
    4754:	add	w4, w26, w4
    4758:	movk	w1, #0xf753, lsl #16
    475c:	add	w15, w15, w1
    4760:	orn	w1, w4, w6
    4764:	eor	w1, w1, w26
    4768:	add	w21, w21, w3
    476c:	add	w30, w1, w30
    4770:	mov	w1, #0xd2bb                	// #53947
    4774:	add	w24, w24, w30
    4778:	movk	w1, #0x2ad7, lsl #16
    477c:	add	w13, w13, w1
    4780:	mov	w1, #0xd391                	// #54161
    4784:	movk	w1, #0xeb86, lsl #16
    4788:	ror	w24, w24, #17
    478c:	add	w24, w4, w24
    4790:	add	w9, w9, w1
    4794:	orn	w1, w24, w26
    4798:	mov	w2, #0x5dd1                	// #24017
    479c:	eor	w1, w1, w4
    47a0:	movk	w2, #0x8584, lsl #16
    47a4:	add	w6, w1, w6
    47a8:	add	w20, w20, w2
    47ac:	add	w23, w23, w6
    47b0:	mov	w2, #0xf235                	// #62005
    47b4:	movk	w2, #0xbd3a, lsl #16
    47b8:	add	w14, w14, w2
    47bc:	ror	w23, w23, #11
    47c0:	add	w23, w24, w23
    47c4:	orn	w1, w23, w4
    47c8:	eor	w1, w1, w24
    47cc:	add	w26, w1, w26
    47d0:	add	w22, w22, w26
    47d4:	ror	w22, w22, #26
    47d8:	add	w22, w23, w22
    47dc:	orn	w25, w22, w24
    47e0:	eor	w25, w25, w23
    47e4:	add	w4, w25, w4
    47e8:	add	w21, w21, w4
    47ec:	ror	w21, w21, #22
    47f0:	add	w21, w22, w21
    47f4:	orn	w1, w21, w23
    47f8:	eor	w1, w1, w22
    47fc:	add	w24, w1, w24
    4800:	add	w7, w7, w24
    4804:	ror	w7, w7, #17
    4808:	add	w7, w21, w7
    480c:	orn	w1, w7, w22
    4810:	eor	w1, w1, w21
    4814:	add	w23, w1, w23
    4818:	add	w20, w20, w23
    481c:	ror	w20, w20, #11
    4820:	add	w20, w7, w20
    4824:	orn	w1, w20, w21
    4828:	eor	w1, w1, w7
    482c:	add	w22, w1, w22
    4830:	add	w19, w19, w22
    4834:	ror	w19, w19, #26
    4838:	add	w19, w20, w19
    483c:	orn	w1, w19, w7
    4840:	eor	w1, w1, w20
    4844:	add	w21, w1, w21
    4848:	add	w18, w18, w21
    484c:	ror	w18, w18, #22
    4850:	add	w18, w19, w18
    4854:	orn	w1, w18, w20
    4858:	eor	w1, w1, w19
    485c:	add	w7, w1, w7
    4860:	add	w17, w17, w7
    4864:	ror	w17, w17, #17
    4868:	add	w17, w18, w17
    486c:	orn	w1, w17, w19
    4870:	eor	w1, w1, w18
    4874:	add	w20, w1, w20
    4878:	add	w16, w16, w20
    487c:	ror	w16, w16, #11
    4880:	add	w16, w17, w16
    4884:	orn	w1, w16, w18
    4888:	eor	w1, w1, w17
    488c:	add	w19, w1, w19
    4890:	add	w15, w15, w19
    4894:	ror	w15, w15, #26
    4898:	add	w15, w16, w15
    489c:	orn	w1, w15, w17
    48a0:	add	w28, w28, w15
    48a4:	eor	w1, w1, w16
    48a8:	add	w18, w1, w18
    48ac:	add	w14, w14, w18
    48b0:	ror	w14, w14, #22
    48b4:	add	w14, w15, w14
    48b8:	orn	w1, w14, w16
    48bc:	add	w12, w12, w14
    48c0:	eor	w1, w1, w15
    48c4:	add	w17, w1, w17
    48c8:	add	w13, w13, w17
    48cc:	ror	w13, w13, #17
    48d0:	add	w13, w14, w13
    48d4:	orn	w15, w13, w15
    48d8:	add	w11, w11, w13
    48dc:	eor	w15, w15, w14
    48e0:	add	w15, w15, w16
    48e4:	add	w9, w9, w15
    48e8:	ror	w9, w9, #11
    48ec:	add	w13, w13, w9
    48f0:	add	w10, w10, w13
    48f4:	b.hi	3f48 <setkey@GLIBC_2.17+0x130>  // b.pmore
    48f8:	ldp	x19, x20, [sp, #16]
    48fc:	ldp	x21, x22, [sp, #32]
    4900:	ldp	x23, x24, [sp, #48]
    4904:	ldp	x25, x26, [sp, #64]
    4908:	ldr	x2, [sp, #104]
    490c:	stp	w28, w10, [x2]
    4910:	stp	w11, w12, [x2, #8]
    4914:	ldp	x27, x28, [sp, #80]
    4918:	ldp	x29, x30, [sp], #112
    491c:	ret
    4920:	stp	x29, x30, [sp, #-48]!
    4924:	mov	x29, sp
    4928:	stp	x19, x20, [sp, #16]
    492c:	mov	x19, x0
    4930:	ldr	w2, [x0, #16]
    4934:	ldr	w0, [x0, #24]
    4938:	stp	x21, x22, [sp, #32]
    493c:	mov	x22, x1
    4940:	adds	w2, w2, w0
    4944:	str	w2, [x19, #16]
    4948:	b.cc	4958 <setkey@GLIBC_2.17+0xb40>  // b.lo, b.ul, b.last
    494c:	ldr	w1, [x19, #20]
    4950:	add	w1, w1, #0x1
    4954:	str	w1, [x19, #20]
    4958:	cmp	w0, #0x38
    495c:	mov	w21, w0
    4960:	mov	w20, #0x78                  	// #120
    4964:	mov	w2, #0x38                  	// #56
    4968:	sub	w20, w20, w0
    496c:	sub	w2, w2, w0
    4970:	csel	x20, x2, x20, cc  // cc = lo, ul, last
    4974:	add	x0, x21, #0x1c
    4978:	mov	x2, x20
    497c:	add	x0, x19, x0
    4980:	adrp	x1, 6000 <setkey@GLIBC_2.17+0x21e8>
    4984:	add	x1, x1, #0x618
    4988:	bl	cb0 <memcpy@plt>
    498c:	add	x1, x20, x21
    4990:	ldr	w5, [x19, #16]
    4994:	and	x0, x1, #0x1fffffffc
    4998:	add	x3, x1, #0x4
    499c:	add	x0, x19, x0
    49a0:	and	x3, x3, #0x3fffffffc
    49a4:	lsl	w2, w5, #3
    49a8:	add	x3, x19, x3
    49ac:	add	x1, x1, #0x8
    49b0:	str	w2, [x0, #28]
    49b4:	mov	x2, x19
    49b8:	add	x0, x19, #0x1c
    49bc:	ldr	w4, [x19, #20]
    49c0:	extr	w4, w4, w5, #29
    49c4:	str	w4, [x3, #28]
    49c8:	bl	3ef0 <setkey@GLIBC_2.17+0xd8>
    49cc:	mov	x1, x22
    49d0:	mov	x0, x19
    49d4:	ldp	x19, x20, [sp, #16]
    49d8:	ldp	x21, x22, [sp, #32]
    49dc:	ldp	x29, x30, [sp], #48
    49e0:	b	3ec0 <setkey@GLIBC_2.17+0xa8>
    49e4:	nop
    49e8:	stp	x29, x30, [sp, #-64]!
    49ec:	mov	x29, sp
    49f0:	stp	x21, x22, [sp, #32]
    49f4:	mov	x21, x0
    49f8:	ldr	w0, [x2, #24]
    49fc:	stp	x19, x20, [sp, #16]
    4a00:	mov	x20, x2
    4a04:	mov	x19, x1
    4a08:	cbnz	w0, 4a7c <setkey@GLIBC_2.17+0xc64>
    4a0c:	cmp	x19, #0x3f
    4a10:	b.hi	4a28 <setkey@GLIBC_2.17+0xc10>  // b.pmore
    4a14:	cbnz	x19, 4a44 <setkey@GLIBC_2.17+0xc2c>
    4a18:	ldp	x19, x20, [sp, #16]
    4a1c:	ldp	x21, x22, [sp, #32]
    4a20:	ldp	x29, x30, [sp], #64
    4a24:	ret
    4a28:	and	x1, x19, #0xffffffffffffffc0
    4a2c:	mov	x0, x21
    4a30:	and	x19, x19, #0x3f
    4a34:	add	x21, x21, x1
    4a38:	mov	x2, x20
    4a3c:	bl	3ef0 <setkey@GLIBC_2.17+0xd8>
    4a40:	cbz	x19, 4a18 <setkey@GLIBC_2.17+0xc00>
    4a44:	ldr	w3, [x20, #24]
    4a48:	mov	x2, x19
    4a4c:	mov	x1, x21
    4a50:	add	x0, x3, #0x1c
    4a54:	add	x19, x19, x3
    4a58:	add	x0, x20, x0
    4a5c:	bl	cb0 <memcpy@plt>
    4a60:	cmp	x19, #0x3f
    4a64:	b.hi	4acc <setkey@GLIBC_2.17+0xcb4>  // b.pmore
    4a68:	str	w19, [x20, #24]
    4a6c:	ldp	x19, x20, [sp, #16]
    4a70:	ldp	x21, x22, [sp, #32]
    4a74:	ldp	x29, x30, [sp], #64
    4a78:	ret
    4a7c:	mov	w22, w0
    4a80:	stp	x23, x24, [sp, #48]
    4a84:	mov	x23, #0x80                  	// #128
    4a88:	sub	x23, x23, x22
    4a8c:	add	x0, x22, #0x1c
    4a90:	cmp	x23, x1
    4a94:	add	x0, x2, x0
    4a98:	csel	x23, x23, x1, ls  // ls = plast
    4a9c:	mov	x1, x21
    4aa0:	mov	x2, x23
    4aa4:	bl	cb0 <memcpy@plt>
    4aa8:	ldr	w1, [x20, #24]
    4aac:	add	w1, w1, w23
    4ab0:	str	w1, [x20, #24]
    4ab4:	cmp	w1, #0x40
    4ab8:	b.hi	4afc <setkey@GLIBC_2.17+0xce4>  // b.pmore
    4abc:	add	x21, x21, x23
    4ac0:	sub	x19, x19, x23
    4ac4:	ldp	x23, x24, [sp, #48]
    4ac8:	b	4a0c <setkey@GLIBC_2.17+0xbf4>
    4acc:	add	x21, x20, #0x1c
    4ad0:	sub	x19, x19, #0x40
    4ad4:	mov	x0, x21
    4ad8:	mov	x2, x20
    4adc:	mov	x1, #0x40                  	// #64
    4ae0:	bl	3ef0 <setkey@GLIBC_2.17+0xd8>
    4ae4:	mov	x0, x21
    4ae8:	mov	x2, x19
    4aec:	add	x1, x20, #0x5c
    4af0:	bl	cb0 <memcpy@plt>
    4af4:	str	w19, [x20, #24]
    4af8:	b	4a6c <setkey@GLIBC_2.17+0xc54>
    4afc:	add	x24, x20, #0x1c
    4b00:	mov	x2, x20
    4b04:	mov	x0, x24
    4b08:	and	x1, x1, #0xffffffc0
    4b0c:	bl	3ef0 <setkey@GLIBC_2.17+0xd8>
    4b10:	add	x22, x22, x23
    4b14:	ldr	w2, [x20, #24]
    4b18:	and	x22, x22, #0xffffffffffffffc0
    4b1c:	add	x1, x22, #0x1c
    4b20:	mov	x0, x24
    4b24:	and	w2, w2, #0x3f
    4b28:	str	w2, [x20, #24]
    4b2c:	add	x1, x20, x1
    4b30:	and	x2, x2, #0x3f
    4b34:	bl	cb0 <memcpy@plt>
    4b38:	b	4abc <setkey@GLIBC_2.17+0xca4>
    4b3c:	nop
    4b40:	stp	x29, x30, [sp, #-240]!
    4b44:	mov	x29, sp
    4b48:	stp	x19, x20, [sp, #16]
    4b4c:	adrp	x20, 17000 <setkey@GLIBC_2.17+0x131e8>
    4b50:	add	x19, sp, #0x48
    4b54:	ldr	x20, [x20, #4048]
    4b58:	stp	x21, x22, [sp, #32]
    4b5c:	mov	x22, x0
    4b60:	ldr	x0, [x20]
    4b64:	str	x0, [sp, #232]
    4b68:	mov	x0, #0x0                   	// #0
    4b6c:	mov	x21, x2
    4b70:	mov	x0, x19
    4b74:	str	x23, [sp, #48]
    4b78:	mov	x23, x1
    4b7c:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    4b80:	mov	x2, x19
    4b84:	mov	x1, x23
    4b88:	mov	x0, x22
    4b8c:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    4b90:	mov	x1, x21
    4b94:	mov	x0, x19
    4b98:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    4b9c:	ldr	x2, [sp, #232]
    4ba0:	ldr	x1, [x20]
    4ba4:	eor	x1, x2, x1
    4ba8:	cbnz	x1, 4bc0 <setkey@GLIBC_2.17+0xda8>
    4bac:	ldp	x19, x20, [sp, #16]
    4bb0:	ldp	x21, x22, [sp, #32]
    4bb4:	ldr	x23, [sp, #48]
    4bb8:	ldp	x29, x30, [sp], #240
    4bbc:	ret
    4bc0:	bl	d60 <__stack_chk_fail@plt>
    4bc4:	nop
    4bc8:	mov	x12, #0x1140                	// #4416
    4bcc:	sub	sp, sp, x12
    4bd0:	stp	x29, x30, [sp]
    4bd4:	mov	x29, sp
    4bd8:	stp	x23, x24, [sp, #48]
    4bdc:	adrp	x24, 17000 <setkey@GLIBC_2.17+0x131e8>
    4be0:	add	x23, sp, #0x50
    4be4:	ldr	x2, [x24, #4048]
    4be8:	stp	x21, x22, [sp, #32]
    4bec:	mov	x21, x0
    4bf0:	ldr	x0, [x2]
    4bf4:	str	x0, [sp, #4408]
    4bf8:	mov	x0, #0x0                   	// #0
    4bfc:	mov	x22, #0x1000                	// #4096
    4c00:	mov	x0, x23
    4c04:	stp	x19, x20, [sp, #16]
    4c08:	add	x20, sp, #0xf0
    4c0c:	str	x25, [sp, #64]
    4c10:	mov	x25, x1
    4c14:	bl	3e90 <setkey@GLIBC_2.17+0x78>
    4c18:	mov	x19, #0x0                   	// #0
    4c1c:	nop
    4c20:	sub	x2, x22, x19
    4c24:	add	x0, x20, x19
    4c28:	mov	x3, x21
    4c2c:	mov	x1, #0x1                   	// #1
    4c30:	bl	db0 <fread@plt>
    4c34:	add	x19, x19, x0
    4c38:	cmp	x19, #0xfff
    4c3c:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
    4c40:	b.ne	4c20 <setkey@GLIBC_2.17+0xe08>  // b.any
    4c44:	cbz	x0, 4c5c <setkey@GLIBC_2.17+0xe44>
    4c48:	mov	x2, x23
    4c4c:	mov	x0, x20
    4c50:	mov	x1, #0x1000                	// #4096
    4c54:	bl	3ef0 <setkey@GLIBC_2.17+0xd8>
    4c58:	b	4c18 <setkey@GLIBC_2.17+0xe00>
    4c5c:	mov	x0, x21
    4c60:	bl	e30 <ferror@plt>
    4c64:	mov	w21, w0
    4c68:	cbnz	w0, 4cb4 <setkey@GLIBC_2.17+0xe9c>
    4c6c:	cbnz	x19, 4cbc <setkey@GLIBC_2.17+0xea4>
    4c70:	mov	x1, x25
    4c74:	mov	x0, x23
    4c78:	bl	4920 <setkey@GLIBC_2.17+0xb08>
    4c7c:	ldr	x24, [x24, #4048]
    4c80:	ldr	x1, [sp, #4408]
    4c84:	ldr	x0, [x24]
    4c88:	eor	x0, x1, x0
    4c8c:	cbnz	x0, 4cd0 <setkey@GLIBC_2.17+0xeb8>
    4c90:	mov	w0, w21
    4c94:	mov	x12, #0x1140                	// #4416
    4c98:	ldp	x29, x30, [sp]
    4c9c:	ldp	x19, x20, [sp, #16]
    4ca0:	ldp	x21, x22, [sp, #32]
    4ca4:	ldp	x23, x24, [sp, #48]
    4ca8:	ldr	x25, [sp, #64]
    4cac:	add	sp, sp, x12
    4cb0:	ret
    4cb4:	mov	w21, #0x1                   	// #1
    4cb8:	b	4c7c <setkey@GLIBC_2.17+0xe64>
    4cbc:	mov	x1, x19
    4cc0:	mov	x0, x20
    4cc4:	mov	x2, x23
    4cc8:	bl	49e8 <setkey@GLIBC_2.17+0xbd0>
    4ccc:	b	4c70 <setkey@GLIBC_2.17+0xe58>
    4cd0:	bl	d60 <__stack_chk_fail@plt>
    4cd4:	nop
    4cd8:	mov	x4, #0xe667                	// #58983
    4cdc:	mov	x3, #0xf372                	// #62322
    4ce0:	mov	x2, #0x527f                	// #21119
    4ce4:	mov	x1, #0xd9ab                	// #55723
    4ce8:	movk	x4, #0x6a09, lsl #16
    4cec:	movk	x3, #0x3c6e, lsl #16
    4cf0:	movk	x2, #0x510e, lsl #16
    4cf4:	movk	x1, #0x1f83, lsl #16
    4cf8:	movk	x4, #0xae85, lsl #32
    4cfc:	movk	x3, #0xf53a, lsl #32
    4d00:	movk	x2, #0x688c, lsl #32
    4d04:	movk	x1, #0xcd19, lsl #32
    4d08:	movk	x4, #0xbb67, lsl #48
    4d0c:	movk	x3, #0xa54f, lsl #48
    4d10:	movk	x2, #0x9b05, lsl #48
    4d14:	movk	x1, #0x5be0, lsl #48
    4d18:	stp	x4, x3, [x0]
    4d1c:	stp	x2, x1, [x0, #16]
    4d20:	str	xzr, [x0, #32]
    4d24:	str	wzr, [x0, #40]
    4d28:	ret
    4d2c:	nop
    4d30:	stp	x29, x30, [sp, #-368]!
    4d34:	cmp	xzr, x1, lsr #2
    4d38:	mov	x30, x1
    4d3c:	mov	x29, sp
    4d40:	stp	x25, x26, [sp, #64]
    4d44:	mov	x26, x2
    4d48:	adrp	x2, 17000 <setkey@GLIBC_2.17+0x131e8>
    4d4c:	stp	x19, x20, [sp, #16]
    4d50:	ldr	x2, [x2, #4048]
    4d54:	stp	x21, x22, [sp, #32]
    4d58:	ldr	x1, [x26, #32]
    4d5c:	ldr	x3, [x2]
    4d60:	str	x3, [sp, #360]
    4d64:	mov	x3, #0x0                   	// #0
    4d68:	stp	x23, x24, [sp, #48]
    4d6c:	add	x1, x1, x30
    4d70:	stp	x27, x28, [sp, #80]
    4d74:	str	x1, [x26, #32]
    4d78:	ldp	w27, w25, [x26]
    4d7c:	ldp	w24, w23, [x26, #8]
    4d80:	ldp	w22, w21, [x26, #16]
    4d84:	ldp	w20, w19, [x26, #24]
    4d88:	b.eq	4f04 <setkey@GLIBC_2.17+0x10ec>  // b.none
    4d8c:	add	x15, sp, #0x68
    4d90:	adrp	x16, 6000 <setkey@GLIBC_2.17+0x21e8>
    4d94:	mov	w28, #0x2f98                	// #12184
    4d98:	lsr	x30, x30, #2
    4d9c:	sub	x18, x0, #0x4
    4da0:	add	x17, x15, #0xc0
    4da4:	add	x16, x16, #0x658
    4da8:	movk	w28, #0x428a, lsl #16
    4dac:	nop
    4db0:	mov	x0, #0x1                   	// #1
    4db4:	nop
    4db8:	add	x2, x15, x0, lsl #2
    4dbc:	ldr	w1, [x18, x0, lsl #2]
    4dc0:	add	x0, x0, #0x1
    4dc4:	rev	w1, w1
    4dc8:	cmp	x0, #0x11
    4dcc:	stur	w1, [x2, #-4]
    4dd0:	b.ne	4db8 <setkey@GLIBC_2.17+0xfa0>  // b.any
    4dd4:	mov	x1, x15
    4dd8:	ldp	w6, w2, [x1]
    4ddc:	add	x1, x1, #0x4
    4de0:	ldr	w0, [x1, #52]
    4de4:	ldr	w3, [x1, #32]
    4de8:	ror	w4, w2, #18
    4dec:	eor	w4, w4, w2, ror #7
    4df0:	ror	w5, w0, #19
    4df4:	eor	w5, w5, w0, ror #17
    4df8:	eor	w2, w4, w2, lsr #3
    4dfc:	eor	w0, w5, w0, lsr #10
    4e00:	add	w0, w0, w2
    4e04:	add	w2, w3, w6
    4e08:	add	w0, w0, w2
    4e0c:	str	w0, [x1, #60]
    4e10:	cmp	x17, x1
    4e14:	b.ne	4dd8 <setkey@GLIBC_2.17+0xfc0>  // b.any
    4e18:	mov	w14, w19
    4e1c:	mov	w9, w20
    4e20:	mov	w10, w21
    4e24:	mov	w4, w22
    4e28:	mov	w11, w23
    4e2c:	mov	w6, w24
    4e30:	mov	w7, w25
    4e34:	mov	w5, w27
    4e38:	mov	w13, w28
    4e3c:	mov	x8, #0x1                   	// #1
    4e40:	mov	x0, #0x4                   	// #4
    4e44:	b	4e74 <setkey@GLIBC_2.17+0x105c>
    4e48:	lsl	x0, x8, #2
    4e4c:	mov	w14, w9
    4e50:	add	x3, x16, x0
    4e54:	mov	w11, w6
    4e58:	mov	w9, w10
    4e5c:	mov	w6, w7
    4e60:	mov	w10, w4
    4e64:	mov	w7, w5
    4e68:	ldur	w13, [x3, #-4]
    4e6c:	mov	w4, w2
    4e70:	mov	w5, w1
    4e74:	add	x12, x15, x0
    4e78:	ror	w1, w4, #11
    4e7c:	and	w0, w4, w10
    4e80:	eor	w1, w1, w4, ror #6
    4e84:	bic	w2, w9, w4
    4e88:	eor	w1, w1, w4, ror #25
    4e8c:	eor	w2, w2, w0
    4e90:	ror	w3, w5, #13
    4e94:	eor	w0, w7, w6
    4e98:	add	w1, w1, w2
    4e9c:	ldur	w12, [x12, #-4]
    4ea0:	and	w2, w7, w6
    4ea4:	add	w14, w14, w13
    4ea8:	eor	w3, w3, w5, ror #2
    4eac:	and	w0, w0, w5
    4eb0:	add	w1, w1, w14
    4eb4:	eor	w0, w0, w2
    4eb8:	eor	w3, w3, w5, ror #22
    4ebc:	add	w1, w1, w12
    4ec0:	add	x8, x8, #0x1
    4ec4:	add	w0, w3, w0
    4ec8:	add	w2, w1, w11
    4ecc:	cmp	x8, #0x41
    4ed0:	add	w1, w1, w0
    4ed4:	b.ne	4e48 <setkey@GLIBC_2.17+0x1030>  // b.any
    4ed8:	add	w27, w27, w1
    4edc:	add	w25, w25, w5
    4ee0:	add	w24, w24, w7
    4ee4:	add	w23, w23, w6
    4ee8:	add	w22, w22, w2
    4eec:	add	w21, w21, w4
    4ef0:	add	w20, w20, w10
    4ef4:	add	w19, w19, w9
    4ef8:	add	x18, x18, #0x40
    4efc:	subs	x30, x30, #0x10
    4f00:	b.ne	4db0 <setkey@GLIBC_2.17+0xf98>  // b.any
    4f04:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    4f08:	stp	w24, w23, [x26, #8]
    4f0c:	stp	w22, w21, [x26, #16]
    4f10:	ldr	x0, [x0, #4048]
    4f14:	stp	w20, w19, [x26, #24]
    4f18:	ldr	x1, [sp, #360]
    4f1c:	ldr	x0, [x0]
    4f20:	eor	x0, x1, x0
    4f24:	stp	w27, w25, [x26]
    4f28:	cbnz	x0, 4f48 <setkey@GLIBC_2.17+0x1130>
    4f2c:	ldp	x19, x20, [sp, #16]
    4f30:	ldp	x21, x22, [sp, #32]
    4f34:	ldp	x23, x24, [sp, #48]
    4f38:	ldp	x25, x26, [sp, #64]
    4f3c:	ldp	x27, x28, [sp, #80]
    4f40:	ldp	x29, x30, [sp], #368
    4f44:	ret
    4f48:	bl	d60 <__stack_chk_fail@plt>
    4f4c:	nop
    4f50:	stp	x29, x30, [sp, #-48]!
    4f54:	adrp	x4, 6000 <setkey@GLIBC_2.17+0x21e8>
    4f58:	add	x4, x4, #0x658
    4f5c:	mov	x29, sp
    4f60:	stp	x19, x20, [sp, #16]
    4f64:	mov	x19, x0
    4f68:	mov	w0, #0x38                  	// #56
    4f6c:	stp	x21, x22, [sp, #32]
    4f70:	mov	w2, #0x78                  	// #120
    4f74:	ldr	w22, [x19, #40]
    4f78:	ldr	x3, [x19, #32]
    4f7c:	mov	w21, w22
    4f80:	cmp	w22, w0
    4f84:	sub	w2, w2, w22
    4f88:	add	x3, x3, x21
    4f8c:	sub	w0, w0, w22
    4f90:	str	x3, [x19, #32]
    4f94:	csel	x22, x0, x2, cc  // cc = lo, ul, last
    4f98:	add	x0, x21, #0x30
    4f9c:	mov	x2, x22
    4fa0:	mov	x20, x1
    4fa4:	add	x0, x19, x0
    4fa8:	add	x1, x4, #0x100
    4fac:	bl	cb0 <memcpy@plt>
    4fb0:	add	x1, x21, x22
    4fb4:	mov	x2, x19
    4fb8:	ldr	x3, [x19, #32]
    4fbc:	lsr	x4, x1, #3
    4fc0:	add	x4, x4, #0x6
    4fc4:	add	x1, x1, #0x8
    4fc8:	add	x0, x19, #0x30
    4fcc:	lsl	x3, x3, #3
    4fd0:	rev	x3, x3
    4fd4:	str	x3, [x19, x4, lsl #3]
    4fd8:	bl	4d30 <setkey@GLIBC_2.17+0xf18>
    4fdc:	mov	x2, #0x0                   	// #0
    4fe0:	ldr	w3, [x19, x2]
    4fe4:	rev	w3, w3
    4fe8:	str	w3, [x20, x2]
    4fec:	add	x2, x2, #0x4
    4ff0:	cmp	x2, #0x20
    4ff4:	b.ne	4fe0 <setkey@GLIBC_2.17+0x11c8>  // b.any
    4ff8:	mov	x0, x20
    4ffc:	ldp	x19, x20, [sp, #16]
    5000:	ldp	x21, x22, [sp, #32]
    5004:	ldp	x29, x30, [sp], #48
    5008:	ret
    500c:	nop
    5010:	stp	x29, x30, [sp, #-64]!
    5014:	mov	x29, sp
    5018:	stp	x21, x22, [sp, #32]
    501c:	mov	x21, x0
    5020:	ldr	w0, [x2, #40]
    5024:	stp	x19, x20, [sp, #16]
    5028:	mov	x20, x2
    502c:	mov	x19, x1
    5030:	cbnz	w0, 50a4 <setkey@GLIBC_2.17+0x128c>
    5034:	cmp	x19, #0x3f
    5038:	b.hi	5050 <setkey@GLIBC_2.17+0x1238>  // b.pmore
    503c:	cbnz	x19, 506c <setkey@GLIBC_2.17+0x1254>
    5040:	ldp	x19, x20, [sp, #16]
    5044:	ldp	x21, x22, [sp, #32]
    5048:	ldp	x29, x30, [sp], #64
    504c:	ret
    5050:	and	x1, x19, #0xffffffffffffffc0
    5054:	mov	x0, x21
    5058:	and	x19, x19, #0x3f
    505c:	add	x21, x21, x1
    5060:	mov	x2, x20
    5064:	bl	4d30 <setkey@GLIBC_2.17+0xf18>
    5068:	cbz	x19, 5040 <setkey@GLIBC_2.17+0x1228>
    506c:	ldr	w3, [x20, #40]
    5070:	mov	x2, x19
    5074:	mov	x1, x21
    5078:	add	x0, x3, #0x30
    507c:	add	x19, x19, x3
    5080:	add	x0, x20, x0
    5084:	bl	cb0 <memcpy@plt>
    5088:	cmp	x19, #0x3f
    508c:	b.hi	50f4 <setkey@GLIBC_2.17+0x12dc>  // b.pmore
    5090:	str	w19, [x20, #40]
    5094:	ldp	x19, x20, [sp, #16]
    5098:	ldp	x21, x22, [sp, #32]
    509c:	ldp	x29, x30, [sp], #64
    50a0:	ret
    50a4:	mov	w22, w0
    50a8:	stp	x23, x24, [sp, #48]
    50ac:	mov	x23, #0x80                  	// #128
    50b0:	sub	x23, x23, x22
    50b4:	add	x0, x22, #0x30
    50b8:	cmp	x23, x1
    50bc:	add	x0, x2, x0
    50c0:	csel	x23, x23, x1, ls  // ls = plast
    50c4:	mov	x1, x21
    50c8:	mov	x2, x23
    50cc:	bl	cb0 <memcpy@plt>
    50d0:	ldr	w1, [x20, #40]
    50d4:	add	w1, w1, w23
    50d8:	str	w1, [x20, #40]
    50dc:	cmp	w1, #0x40
    50e0:	b.hi	5124 <setkey@GLIBC_2.17+0x130c>  // b.pmore
    50e4:	add	x21, x21, x23
    50e8:	sub	x19, x19, x23
    50ec:	ldp	x23, x24, [sp, #48]
    50f0:	b	5034 <setkey@GLIBC_2.17+0x121c>
    50f4:	add	x21, x20, #0x30
    50f8:	sub	x19, x19, #0x40
    50fc:	mov	x0, x21
    5100:	mov	x2, x20
    5104:	mov	x1, #0x40                  	// #64
    5108:	bl	4d30 <setkey@GLIBC_2.17+0xf18>
    510c:	mov	x0, x21
    5110:	mov	x2, x19
    5114:	add	x1, x20, #0x70
    5118:	bl	cb0 <memcpy@plt>
    511c:	str	w19, [x20, #40]
    5120:	b	5094 <setkey@GLIBC_2.17+0x127c>
    5124:	add	x24, x20, #0x30
    5128:	mov	x2, x20
    512c:	mov	x0, x24
    5130:	and	x1, x1, #0xffffffc0
    5134:	bl	4d30 <setkey@GLIBC_2.17+0xf18>
    5138:	add	x22, x22, x23
    513c:	ldr	w2, [x20, #40]
    5140:	and	x22, x22, #0xffffffffffffffc0
    5144:	add	x1, x22, #0x30
    5148:	mov	x0, x24
    514c:	and	w2, w2, #0x3f
    5150:	str	w2, [x20, #40]
    5154:	add	x1, x20, x1
    5158:	and	x2, x2, #0x3f
    515c:	bl	cb0 <memcpy@plt>
    5160:	b	50e4 <setkey@GLIBC_2.17+0x12cc>
    5164:	nop
    5168:	mov	x8, #0xc908                	// #51464
    516c:	mov	x7, #0xa73b                	// #42811
    5170:	mov	x6, #0xf82b                	// #63531
    5174:	mov	x5, #0x36f1                	// #14065
    5178:	mov	x4, #0x82d1                	// #33489
    517c:	mov	x3, #0x6c1f                	// #27679
    5180:	mov	x2, #0xbd6b                	// #48491
    5184:	mov	x1, #0x2179                	// #8569
    5188:	movk	x8, #0xf3bc, lsl #16
    518c:	movk	x7, #0x84ca, lsl #16
    5190:	movk	x6, #0xfe94, lsl #16
    5194:	movk	x5, #0x5f1d, lsl #16
    5198:	movk	x4, #0xade6, lsl #16
    519c:	movk	x3, #0x2b3e, lsl #16
    51a0:	movk	x2, #0xfb41, lsl #16
    51a4:	movk	x1, #0x137e, lsl #16
    51a8:	movk	x8, #0xe667, lsl #32
    51ac:	movk	x7, #0xae85, lsl #32
    51b0:	movk	x6, #0xf372, lsl #32
    51b4:	movk	x5, #0xf53a, lsl #32
    51b8:	movk	x4, #0x527f, lsl #32
    51bc:	movk	x3, #0x688c, lsl #32
    51c0:	movk	x2, #0xd9ab, lsl #32
    51c4:	movk	x1, #0xcd19, lsl #32
    51c8:	movk	x8, #0x6a09, lsl #48
    51cc:	movk	x7, #0xbb67, lsl #48
    51d0:	movk	x6, #0x3c6e, lsl #48
    51d4:	movk	x5, #0xa54f, lsl #48
    51d8:	movk	x4, #0x510e, lsl #48
    51dc:	movk	x3, #0x9b05, lsl #48
    51e0:	movk	x2, #0x1f83, lsl #48
    51e4:	movk	x1, #0x5be0, lsl #48
    51e8:	stp	x8, x7, [x0]
    51ec:	stp	x6, x5, [x0, #16]
    51f0:	stp	x4, x3, [x0, #32]
    51f4:	stp	x2, x1, [x0, #48]
    51f8:	stp	xzr, xzr, [x0, #64]
    51fc:	str	xzr, [x0, #80]
    5200:	ret
    5204:	nop
    5208:	sub	sp, sp, #0x2f0
    520c:	stp	x29, x30, [sp]
    5210:	mov	x29, sp
    5214:	mov	x30, x1
    5218:	stp	x25, x26, [sp, #64]
    521c:	mov	x26, x2
    5220:	adrp	x2, 17000 <setkey@GLIBC_2.17+0x131e8>
    5224:	stp	x19, x20, [sp, #16]
    5228:	ldr	x2, [x2, #4048]
    522c:	stp	x21, x22, [sp, #32]
    5230:	ldr	x3, [x2]
    5234:	str	x3, [sp, #744]
    5238:	mov	x3, #0x0                   	// #0
    523c:	stp	x23, x24, [sp, #48]
    5240:	ldp	x1, x2, [x26, #64]
    5244:	stp	x27, x28, [sp, #80]
    5248:	ldp	x27, x25, [x26]
    524c:	ldp	x24, x23, [x26, #16]
    5250:	adds	x1, x1, x30
    5254:	cinc	x2, x2, cs  // cs = hs, nlast
    5258:	stp	x1, x2, [x26, #64]
    525c:	cmp	xzr, x30, lsr #3
    5260:	ldp	x22, x21, [x26, #32]
    5264:	ldp	x20, x19, [x26, #48]
    5268:	b.eq	53ec <setkey@GLIBC_2.17+0x15d4>  // b.none
    526c:	mov	x28, #0xae22                	// #44578
    5270:	add	x15, sp, #0x68
    5274:	movk	x28, #0xd728, lsl #16
    5278:	adrp	x16, 6000 <setkey@GLIBC_2.17+0x21e8>
    527c:	movk	x28, #0x2f98, lsl #32
    5280:	lsr	x30, x30, #3
    5284:	sub	x18, x0, #0x8
    5288:	add	x17, x15, #0x200
    528c:	add	x16, x16, #0x798
    5290:	movk	x28, #0x428a, lsl #48
    5294:	nop
    5298:	mov	x0, #0x1                   	// #1
    529c:	nop
    52a0:	add	x2, x15, x0, lsl #3
    52a4:	ldr	x1, [x18, x0, lsl #3]
    52a8:	add	x0, x0, #0x1
    52ac:	cmp	x0, #0x11
    52b0:	rev	x1, x1
    52b4:	stur	x1, [x2, #-8]
    52b8:	b.ne	52a0 <setkey@GLIBC_2.17+0x1488>  // b.any
    52bc:	mov	x1, x15
    52c0:	ldp	x6, x2, [x1]
    52c4:	add	x1, x1, #0x8
    52c8:	ldr	x0, [x1, #104]
    52cc:	ldr	x3, [x1, #64]
    52d0:	ror	x4, x2, #8
    52d4:	eor	x4, x4, x2, ror #1
    52d8:	ror	x5, x0, #61
    52dc:	eor	x5, x5, x0, ror #19
    52e0:	eor	x2, x4, x2, lsr #7
    52e4:	eor	x0, x5, x0, lsr #6
    52e8:	add	x3, x3, x6
    52ec:	add	x0, x0, x2
    52f0:	add	x0, x0, x3
    52f4:	str	x0, [x1, #120]
    52f8:	cmp	x17, x1
    52fc:	b.ne	52c0 <setkey@GLIBC_2.17+0x14a8>  // b.any
    5300:	mov	x14, x19
    5304:	mov	x9, x20
    5308:	mov	x10, x21
    530c:	mov	x4, x22
    5310:	mov	x11, x23
    5314:	mov	x6, x24
    5318:	mov	x7, x25
    531c:	mov	x5, x27
    5320:	mov	x13, x28
    5324:	mov	x8, #0x1                   	// #1
    5328:	mov	x0, #0x8                   	// #8
    532c:	b	535c <setkey@GLIBC_2.17+0x1544>
    5330:	lsl	x0, x8, #3
    5334:	mov	x14, x9
    5338:	add	x3, x16, x0
    533c:	mov	x11, x6
    5340:	mov	x9, x10
    5344:	mov	x6, x7
    5348:	mov	x10, x4
    534c:	mov	x7, x5
    5350:	ldur	x13, [x3, #-8]
    5354:	mov	x4, x2
    5358:	mov	x5, x1
    535c:	add	x0, x15, x0
    5360:	ror	x1, x4, #18
    5364:	bic	x3, x9, x4
    5368:	eor	x1, x1, x4, ror #14
    536c:	and	x2, x4, x10
    5370:	eor	x1, x1, x4, ror #41
    5374:	eor	x2, x3, x2
    5378:	ror	x3, x5, #34
    537c:	ldur	x12, [x0, #-8]
    5380:	eor	x0, x7, x6
    5384:	add	x1, x1, x2
    5388:	add	x13, x14, x13
    538c:	and	x2, x7, x6
    5390:	eor	x3, x3, x5, ror #28
    5394:	and	x0, x0, x5
    5398:	add	x1, x1, x13
    539c:	eor	x0, x0, x2
    53a0:	eor	x3, x3, x5, ror #39
    53a4:	add	x1, x1, x12
    53a8:	add	x8, x8, #0x1
    53ac:	add	x0, x3, x0
    53b0:	add	x2, x1, x11
    53b4:	cmp	x8, #0x51
    53b8:	add	x1, x1, x0
    53bc:	b.ne	5330 <setkey@GLIBC_2.17+0x1518>  // b.any
    53c0:	add	x27, x27, x1
    53c4:	add	x25, x25, x5
    53c8:	add	x24, x24, x7
    53cc:	add	x23, x23, x6
    53d0:	add	x22, x22, x2
    53d4:	add	x21, x21, x4
    53d8:	add	x20, x20, x10
    53dc:	add	x19, x19, x9
    53e0:	add	x18, x18, #0x80
    53e4:	subs	x30, x30, #0x10
    53e8:	b.ne	5298 <setkey@GLIBC_2.17+0x1480>  // b.any
    53ec:	adrp	x0, 17000 <setkey@GLIBC_2.17+0x131e8>
    53f0:	stp	x24, x23, [x26, #16]
    53f4:	ldr	x0, [x0, #4048]
    53f8:	stp	x22, x21, [x26, #32]
    53fc:	ldr	x1, [sp, #744]
    5400:	ldr	x0, [x0]
    5404:	eor	x0, x1, x0
    5408:	stp	x27, x25, [x26]
    540c:	stp	x20, x19, [x26, #48]
    5410:	cbnz	x0, 5434 <setkey@GLIBC_2.17+0x161c>
    5414:	ldp	x29, x30, [sp]
    5418:	ldp	x19, x20, [sp, #16]
    541c:	ldp	x21, x22, [sp, #32]
    5420:	ldp	x23, x24, [sp, #48]
    5424:	ldp	x25, x26, [sp, #64]
    5428:	ldp	x27, x28, [sp, #80]
    542c:	add	sp, sp, #0x2f0
    5430:	ret
    5434:	bl	d60 <__stack_chk_fail@plt>
    5438:	stp	x29, x30, [sp, #-64]!
    543c:	mov	x29, sp
    5440:	stp	x19, x20, [sp, #16]
    5444:	mov	x19, x0
    5448:	mov	x20, x1
    544c:	ldr	x1, [x0, #64]
    5450:	stp	x21, x22, [sp, #32]
    5454:	ldr	x0, [x0, #80]
    5458:	ldr	x2, [x19, #72]
    545c:	adds	x1, x1, x0
    5460:	str	x23, [sp, #48]
    5464:	str	x1, [x19, #64]
    5468:	cinc	x1, x2, cs  // cs = hs, nlast
    546c:	str	x1, [x19, #72]
    5470:	cmp	x0, #0x6f
    5474:	b.ls	5510 <setkey@GLIBC_2.17+0x16f8>  // b.plast
    5478:	mov	x2, #0xf0                  	// #240
    547c:	sub	x2, x2, x0
    5480:	mov	x23, #0x100                 	// #256
    5484:	mov	x21, #0x1e                  	// #30
    5488:	mov	x22, #0x1f                  	// #31
    548c:	add	x0, x0, #0x58
    5490:	adrp	x1, 6000 <setkey@GLIBC_2.17+0x21e8>
    5494:	add	x1, x1, #0x798
    5498:	add	x0, x19, x0
    549c:	add	x1, x1, #0x280
    54a0:	bl	cb0 <memcpy@plt>
    54a4:	ldp	x6, x0, [x19, #64]
    54a8:	add	x5, x19, x22, lsl #3
    54ac:	add	x4, x19, x21, lsl #3
    54b0:	mov	x2, x19
    54b4:	mov	x1, x23
    54b8:	lsl	x3, x6, #3
    54bc:	extr	x0, x0, x6, #61
    54c0:	rev	x3, x3
    54c4:	str	x3, [x5, #88]
    54c8:	rev	x0, x0
    54cc:	str	x0, [x4, #88]
    54d0:	add	x0, x19, #0x58
    54d4:	bl	5208 <setkey@GLIBC_2.17+0x13f0>
    54d8:	mov	x2, #0x0                   	// #0
    54dc:	nop
    54e0:	ldr	x3, [x19, x2]
    54e4:	rev	x3, x3
    54e8:	str	x3, [x20, x2]
    54ec:	add	x2, x2, #0x8
    54f0:	cmp	x2, #0x40
    54f4:	b.ne	54e0 <setkey@GLIBC_2.17+0x16c8>  // b.any
    54f8:	mov	x0, x20
    54fc:	ldp	x19, x20, [sp, #16]
    5500:	ldp	x21, x22, [sp, #32]
    5504:	ldr	x23, [sp, #48]
    5508:	ldp	x29, x30, [sp], #64
    550c:	ret
    5510:	mov	x2, #0x70                  	// #112
    5514:	mov	x23, #0x80                  	// #128
    5518:	sub	x2, x2, x0
    551c:	mov	x21, #0xe                   	// #14
    5520:	mov	x22, #0xf                   	// #15
    5524:	b	548c <setkey@GLIBC_2.17+0x1674>
    5528:	stp	x29, x30, [sp, #-64]!
    552c:	mov	x29, sp
    5530:	stp	x21, x22, [sp, #32]
    5534:	mov	x21, x0
    5538:	ldr	x22, [x2, #80]
    553c:	stp	x19, x20, [sp, #16]
    5540:	mov	x20, x2
    5544:	mov	x19, x1
    5548:	cbnz	x22, 55bc <setkey@GLIBC_2.17+0x17a4>
    554c:	cmp	x19, #0x7f
    5550:	b.hi	5568 <setkey@GLIBC_2.17+0x1750>  // b.pmore
    5554:	cbnz	x19, 5584 <setkey@GLIBC_2.17+0x176c>
    5558:	ldp	x19, x20, [sp, #16]
    555c:	ldp	x21, x22, [sp, #32]
    5560:	ldp	x29, x30, [sp], #64
    5564:	ret
    5568:	and	x1, x19, #0xffffffffffffff80
    556c:	mov	x0, x21
    5570:	and	x19, x19, #0x7f
    5574:	add	x21, x21, x1
    5578:	mov	x2, x20
    557c:	bl	5208 <setkey@GLIBC_2.17+0x13f0>
    5580:	cbz	x19, 5558 <setkey@GLIBC_2.17+0x1740>
    5584:	ldr	x3, [x20, #80]
    5588:	mov	x2, x19
    558c:	mov	x1, x21
    5590:	add	x0, x3, #0x58
    5594:	add	x19, x19, x3
    5598:	add	x0, x20, x0
    559c:	bl	cb0 <memcpy@plt>
    55a0:	cmp	x19, #0x7f
    55a4:	b.hi	5608 <setkey@GLIBC_2.17+0x17f0>  // b.pmore
    55a8:	str	x19, [x20, #80]
    55ac:	ldp	x19, x20, [sp, #16]
    55b0:	ldp	x21, x22, [sp, #32]
    55b4:	ldp	x29, x30, [sp], #64
    55b8:	ret
    55bc:	stp	x23, x24, [sp, #48]
    55c0:	mov	x23, #0x100                 	// #256
    55c4:	sub	x23, x23, x22
    55c8:	cmp	x23, x1
    55cc:	add	x0, x22, #0x58
    55d0:	csel	x23, x23, x1, ls  // ls = plast
    55d4:	add	x0, x2, x0
    55d8:	mov	x1, x21
    55dc:	mov	x2, x23
    55e0:	bl	cb0 <memcpy@plt>
    55e4:	ldr	x1, [x20, #80]
    55e8:	add	x1, x23, x1
    55ec:	str	x1, [x20, #80]
    55f0:	cmp	x1, #0x80
    55f4:	b.hi	5638 <setkey@GLIBC_2.17+0x1820>  // b.pmore
    55f8:	add	x21, x21, x23
    55fc:	sub	x19, x19, x23
    5600:	ldp	x23, x24, [sp, #48]
    5604:	b	554c <setkey@GLIBC_2.17+0x1734>
    5608:	add	x21, x20, #0x58
    560c:	sub	x19, x19, #0x80
    5610:	mov	x0, x21
    5614:	mov	x2, x20
    5618:	mov	x1, #0x80                  	// #128
    561c:	bl	5208 <setkey@GLIBC_2.17+0x13f0>
    5620:	mov	x0, x21
    5624:	mov	x2, x19
    5628:	add	x1, x20, #0xd8
    562c:	bl	cb0 <memcpy@plt>
    5630:	str	x19, [x20, #80]
    5634:	b	55ac <setkey@GLIBC_2.17+0x1794>
    5638:	add	x24, x20, #0x58
    563c:	mov	x2, x20
    5640:	mov	x0, x24
    5644:	and	x1, x1, #0xffffffffffffff80
    5648:	bl	5208 <setkey@GLIBC_2.17+0x13f0>
    564c:	ldr	x2, [x20, #80]
    5650:	add	x1, x22, x23
    5654:	and	x1, x1, #0xffffffffffffff80
    5658:	mov	x0, x24
    565c:	and	x2, x2, #0x7f
    5660:	str	x2, [x20, #80]
    5664:	add	x1, x1, #0x58
    5668:	add	x1, x20, x1
    566c:	bl	cb0 <memcpy@plt>
    5670:	b	55f8 <setkey@GLIBC_2.17+0x17e0>

Disassembly of section .fini:

0000000000005674 <.fini>:
    5674:	stp	x29, x30, [sp, #-16]!
    5678:	mov	x29, sp
    567c:	ldp	x29, x30, [sp], #16
    5680:	ret
