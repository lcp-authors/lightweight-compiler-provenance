
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bootctl_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402768 <.init>:
  402768:	stp	x29, x30, [sp, #-16]!
  40276c:	mov	x29, sp
  402770:	bl	402f70 <__fxstat64@plt+0x60>
  402774:	ldp	x29, x30, [sp], #16
  402778:	ret

Disassembly of section .plt:

0000000000402780 <__libc_start_main@plt-0x20>:
  402780:	stp	x16, x30, [sp, #-16]!
  402784:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402788:	ldr	x17, [x16, #3128]
  40278c:	add	x16, x16, #0xc38
  402790:	br	x17
  402794:	nop
  402798:	nop
  40279c:	nop

00000000004027a0 <__libc_start_main@plt>:
  4027a0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027a4:	ldr	x17, [x16, #3136]
  4027a8:	add	x16, x16, #0xc40
  4027ac:	br	x17

00000000004027b0 <abort@plt>:
  4027b0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027b4:	ldr	x17, [x16, #3144]
  4027b8:	add	x16, x16, #0xc48
  4027bc:	br	x17

00000000004027c0 <__gmon_start__@plt>:
  4027c0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027c4:	ldr	x17, [x16, #3152]
  4027c8:	add	x16, x16, #0xc50
  4027cc:	br	x17

00000000004027d0 <free@plt>:
  4027d0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027d4:	ldr	x17, [x16, #3160]
  4027d8:	add	x16, x16, #0xc58
  4027dc:	br	x17

00000000004027e0 <log_parse_environment_realm@plt>:
  4027e0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027e4:	ldr	x17, [x16, #3168]
  4027e8:	add	x16, x16, #0xc60
  4027ec:	br	x17

00000000004027f0 <log_open@plt>:
  4027f0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4027f4:	ldr	x17, [x16, #3176]
  4027f8:	add	x16, x16, #0xc68
  4027fc:	br	x17

0000000000402800 <detect_container@plt>:
  402800:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402804:	ldr	x17, [x16, #3184]
  402808:	add	x16, x16, #0xc70
  40280c:	br	x17

0000000000402810 <getopt_long@plt>:
  402810:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402814:	ldr	x17, [x16, #3192]
  402818:	add	x16, x16, #0xc78
  40281c:	br	x17

0000000000402820 <free_and_strdup@plt>:
  402820:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402824:	ldr	x17, [x16, #3200]
  402828:	add	x16, x16, #0xc80
  40282c:	br	x17

0000000000402830 <version@plt>:
  402830:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402834:	ldr	x17, [x16, #3208]
  402838:	add	x16, x16, #0xc88
  40283c:	br	x17

0000000000402840 <dispatch_verb@plt>:
  402840:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402844:	ldr	x17, [x16, #3216]
  402848:	add	x16, x16, #0xc90
  40284c:	br	x17

0000000000402850 <log_get_max_level_realm@plt>:
  402850:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402854:	ldr	x17, [x16, #3224]
  402858:	add	x16, x16, #0xc98
  40285c:	br	x17

0000000000402860 <log_oom_internal@plt>:
  402860:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402864:	ldr	x17, [x16, #3232]
  402868:	add	x16, x16, #0xca0
  40286c:	br	x17

0000000000402870 <log_internal_realm@plt>:
  402870:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402874:	ldr	x17, [x16, #3240]
  402878:	add	x16, x16, #0xca8
  40287c:	br	x17

0000000000402880 <ask_password_agent_close@plt>:
  402880:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402884:	ldr	x17, [x16, #3248]
  402888:	add	x16, x16, #0xcb0
  40288c:	br	x17

0000000000402890 <polkit_agent_close@plt>:
  402890:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402894:	ldr	x17, [x16, #3256]
  402898:	add	x16, x16, #0xcb8
  40289c:	br	x17

00000000004028a0 <pager_close@plt>:
  4028a0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028a4:	ldr	x17, [x16, #3264]
  4028a8:	add	x16, x16, #0xcc0
  4028ac:	br	x17

00000000004028b0 <mac_selinux_finish@plt>:
  4028b0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028b4:	ldr	x17, [x16, #3272]
  4028b8:	add	x16, x16, #0xcc8
  4028bc:	br	x17

00000000004028c0 <log_assert_failed_realm@plt>:
  4028c0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028c4:	ldr	x17, [x16, #3280]
  4028c8:	add	x16, x16, #0xcd0
  4028cc:	br	x17

00000000004028d0 <log_assert_failed_unreachable_realm@plt>:
  4028d0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028d4:	ldr	x17, [x16, #3288]
  4028d8:	add	x16, x16, #0xcd8
  4028dc:	br	x17

00000000004028e0 <terminal_urlify_man@plt>:
  4028e0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028e4:	ldr	x17, [x16, #3296]
  4028e8:	add	x16, x16, #0xce0
  4028ec:	br	x17

00000000004028f0 <colors_enabled@plt>:
  4028f0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4028f4:	ldr	x17, [x16, #3304]
  4028f8:	add	x16, x16, #0xce8
  4028fc:	br	x17

0000000000402900 <printf@plt>:
  402900:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402904:	ldr	x17, [x16, #3312]
  402908:	add	x16, x16, #0xcf0
  40290c:	br	x17

0000000000402910 <geteuid@plt>:
  402910:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402914:	ldr	x17, [x16, #3320]
  402918:	add	x16, x16, #0xcf8
  40291c:	br	x17

0000000000402920 <puts@plt>:
  402920:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402924:	ldr	x17, [x16, #3328]
  402928:	add	x16, x16, #0xd00
  40292c:	br	x17

0000000000402930 <pager_open@plt>:
  402930:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402934:	ldr	x17, [x16, #3336]
  402938:	add	x16, x16, #0xd08
  40293c:	br	x17

0000000000402940 <is_efi_boot@plt>:
  402940:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402944:	ldr	x17, [x16, #3344]
  402948:	add	x16, x16, #0xd10
  40294c:	br	x17

0000000000402950 <efi_loader_get_features@plt>:
  402950:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402954:	ldr	x17, [x16, #3352]
  402958:	add	x16, x16, #0xd18
  40295c:	br	x17

0000000000402960 <efi_tilt_backslashes@plt>:
  402960:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402964:	ldr	x17, [x16, #3360]
  402968:	add	x16, x16, #0xd20
  40296c:	br	x17

0000000000402970 <efi_loader_get_device_part_uuid@plt>:
  402970:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402974:	ldr	x17, [x16, #3368]
  402978:	add	x16, x16, #0xd28
  40297c:	br	x17

0000000000402980 <is_efi_secure_boot@plt>:
  402980:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402984:	ldr	x17, [x16, #3376]
  402988:	add	x16, x16, #0xd30
  40298c:	br	x17

0000000000402990 <is_efi_secure_boot_setup_mode@plt>:
  402990:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402994:	ldr	x17, [x16, #3384]
  402998:	add	x16, x16, #0xd38
  40299c:	br	x17

00000000004029a0 <putchar@plt>:
  4029a0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029a4:	ldr	x17, [x16, #3392]
  4029a8:	add	x16, x16, #0xd40
  4029ac:	br	x17

00000000004029b0 <special_glyph@plt>:
  4029b0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029b4:	ldr	x17, [x16, #3400]
  4029b8:	add	x16, x16, #0xd48
  4029bc:	br	x17

00000000004029c0 <access@plt>:
  4029c0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029c4:	ldr	x17, [x16, #3408]
  4029c8:	add	x16, x16, #0xd50
  4029cc:	br	x17

00000000004029d0 <path_join_internal@plt>:
  4029d0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029d4:	ldr	x17, [x16, #3416]
  4029d8:	add	x16, x16, #0xd58
  4029dc:	br	x17

00000000004029e0 <efi_get_boot_options@plt>:
  4029e0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029e4:	ldr	x17, [x16, #3424]
  4029e8:	add	x16, x16, #0xd60
  4029ec:	br	x17

00000000004029f0 <efi_get_boot_order@plt>:
  4029f0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  4029f4:	ldr	x17, [x16, #3432]
  4029f8:	add	x16, x16, #0xd68
  4029fc:	br	x17

0000000000402a00 <boot_entries_load_config@plt>:
  402a00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a04:	ldr	x17, [x16, #3440]
  402a08:	add	x16, x16, #0xd70
  402a0c:	br	x17

0000000000402a10 <boot_config_free@plt>:
  402a10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a14:	ldr	x17, [x16, #3448]
  402a18:	add	x16, x16, #0xd78
  402a1c:	br	x17

0000000000402a20 <sd_id128_get_machine@plt>:
  402a20:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a24:	ldr	x17, [x16, #3456]
  402a28:	add	x16, x16, #0xd80
  402a2c:	br	x17

0000000000402a30 <strcmp@plt>:
  402a30:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a34:	ldr	x17, [x16, #3464]
  402a38:	add	x16, x16, #0xd88
  402a3c:	br	x17

0000000000402a40 <umask@plt>:
  402a40:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a44:	ldr	x17, [x16, #3472]
  402a48:	add	x16, x16, #0xd90
  402a4c:	br	x17

0000000000402a50 <opendir@plt>:
  402a50:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a54:	ldr	x17, [x16, #3480]
  402a58:	add	x16, x16, #0xd98
  402a5c:	br	x17

0000000000402a60 <__errno_location@plt>:
  402a60:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a64:	ldr	x17, [x16, #3488]
  402a68:	add	x16, x16, #0xda0
  402a6c:	br	x17

0000000000402a70 <readdir64@plt>:
  402a70:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a74:	ldr	x17, [x16, #3496]
  402a78:	add	x16, x16, #0xda8
  402a7c:	br	x17

0000000000402a80 <hidden_or_backup_file@plt>:
  402a80:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a84:	ldr	x17, [x16, #3504]
  402a88:	add	x16, x16, #0xdb0
  402a8c:	br	x17

0000000000402a90 <endswith_no_case@plt>:
  402a90:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402a94:	ldr	x17, [x16, #3512]
  402a98:	add	x16, x16, #0xdb8
  402a9c:	br	x17

0000000000402aa0 <closedir@plt>:
  402aa0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402aa4:	ldr	x17, [x16, #3520]
  402aa8:	add	x16, x16, #0xdc0
  402aac:	br	x17

0000000000402ab0 <sd_id128_to_string@plt>:
  402ab0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ab4:	ldr	x17, [x16, #3528]
  402ab8:	add	x16, x16, #0xdc8
  402abc:	br	x17

0000000000402ac0 <efi_remove_boot_option@plt>:
  402ac0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ac4:	ldr	x17, [x16, #3536]
  402ac8:	add	x16, x16, #0xdd0
  402acc:	br	x17

0000000000402ad0 <memmove@plt>:
  402ad0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ad4:	ldr	x17, [x16, #3544]
  402ad8:	add	x16, x16, #0xdd8
  402adc:	br	x17

0000000000402ae0 <efi_set_boot_order@plt>:
  402ae0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ae4:	ldr	x17, [x16, #3552]
  402ae8:	add	x16, x16, #0xde0
  402aec:	br	x17

0000000000402af0 <efi_set_variable@plt>:
  402af0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402af4:	ldr	x17, [x16, #3560]
  402af8:	add	x16, x16, #0xde8
  402afc:	br	x17

0000000000402b00 <dir_is_empty_at@plt>:
  402b00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b04:	ldr	x17, [x16, #3568]
  402b08:	add	x16, x16, #0xdf0
  402b0c:	br	x17

0000000000402b10 <boot_entries_augment_from_loader@plt>:
  402b10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b14:	ldr	x17, [x16, #3576]
  402b18:	add	x16, x16, #0xdf8
  402b1c:	br	x17

0000000000402b20 <strlen@plt>:
  402b20:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b24:	ldr	x17, [x16, #3584]
  402b28:	add	x16, x16, #0xe00
  402b2c:	br	x17

0000000000402b30 <utf8_to_utf16@plt>:
  402b30:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b34:	ldr	x17, [x16, #3592]
  402b38:	add	x16, x16, #0xe08
  402b3c:	br	x17

0000000000402b40 <char16_strlen@plt>:
  402b40:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b44:	ldr	x17, [x16, #3600]
  402b48:	add	x16, x16, #0xe10
  402b4c:	br	x17

0000000000402b50 <find_esp_and_warn@plt>:
  402b50:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b54:	ldr	x17, [x16, #3608]
  402b58:	add	x16, x16, #0xe18
  402b5c:	br	x17

0000000000402b60 <systemd_efi_options_variable@plt>:
  402b60:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b64:	ldr	x17, [x16, #3616]
  402b68:	add	x16, x16, #0xe20
  402b6c:	br	x17

0000000000402b70 <efi_set_variable_string@plt>:
  402b70:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b74:	ldr	x17, [x16, #3624]
  402b78:	add	x16, x16, #0xe28
  402b7c:	br	x17

0000000000402b80 <find_xbootldr_and_warn@plt>:
  402b80:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b84:	ldr	x17, [x16, #3632]
  402b88:	add	x16, x16, #0xe30
  402b8c:	br	x17

0000000000402b90 <efi_get_variable_string@plt>:
  402b90:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402b94:	ldr	x17, [x16, #3640]
  402b98:	add	x16, x16, #0xe38
  402b9c:	br	x17

0000000000402ba0 <stpcpy@plt>:
  402ba0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ba4:	ldr	x17, [x16, #3648]
  402ba8:	add	x16, x16, #0xe40
  402bac:	br	x17

0000000000402bb0 <strcpy@plt>:
  402bb0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402bb4:	ldr	x17, [x16, #3656]
  402bb8:	add	x16, x16, #0xe48
  402bbc:	br	x17

0000000000402bc0 <strncasecmp@plt>:
  402bc0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402bc4:	ldr	x17, [x16, #3664]
  402bc8:	add	x16, x16, #0xe50
  402bcc:	br	x17

0000000000402bd0 <dirfd@plt>:
  402bd0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402bd4:	ldr	x17, [x16, #3672]
  402bd8:	add	x16, x16, #0xe58
  402bdc:	br	x17

0000000000402be0 <openat64@plt>:
  402be0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402be4:	ldr	x17, [x16, #3680]
  402be8:	add	x16, x16, #0xe60
  402bec:	br	x17

0000000000402bf0 <safe_close@plt>:
  402bf0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402bf4:	ldr	x17, [x16, #3688]
  402bf8:	add	x16, x16, #0xe68
  402bfc:	br	x17

0000000000402c00 <stat_verify_regular@plt>:
  402c00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c04:	ldr	x17, [x16, #3696]
  402c08:	add	x16, x16, #0xe70
  402c0c:	br	x17

0000000000402c10 <mmap64@plt>:
  402c10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c14:	ldr	x17, [x16, #3704]
  402c18:	add	x16, x16, #0xe78
  402c1c:	br	x17

0000000000402c20 <memmem@plt>:
  402c20:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c24:	ldr	x17, [x16, #3712]
  402c28:	add	x16, x16, #0xe80
  402c2c:	br	x17

0000000000402c30 <strndup@plt>:
  402c30:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c34:	ldr	x17, [x16, #3720]
  402c38:	add	x16, x16, #0xe88
  402c3c:	br	x17

0000000000402c40 <munmap@plt>:
  402c40:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c44:	ldr	x17, [x16, #3728]
  402c48:	add	x16, x16, #0xe90
  402c4c:	br	x17

0000000000402c50 <efi_get_boot_option@plt>:
  402c50:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c54:	ldr	x17, [x16, #3736]
  402c58:	add	x16, x16, #0xe98
  402c5c:	br	x17

0000000000402c60 <terminal_urlify_path@plt>:
  402c60:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c64:	ldr	x17, [x16, #3744]
  402c68:	add	x16, x16, #0xea0
  402c6c:	br	x17

0000000000402c70 <strv_join_prefix@plt>:
  402c70:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c74:	ldr	x17, [x16, #3752]
  402c78:	add	x16, x16, #0xea8
  402c7c:	br	x17

0000000000402c80 <strv_split_newlines@plt>:
  402c80:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c84:	ldr	x17, [x16, #3760]
  402c88:	add	x16, x16, #0xeb0
  402c8c:	br	x17

0000000000402c90 <strv_free@plt>:
  402c90:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402c94:	ldr	x17, [x16, #3768]
  402c98:	add	x16, x16, #0xeb8
  402c9c:	br	x17

0000000000402ca0 <safe_fclose@plt>:
  402ca0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ca4:	ldr	x17, [x16, #3776]
  402ca8:	add	x16, x16, #0xec0
  402cac:	br	x17

0000000000402cb0 <unlink_noerrno@plt>:
  402cb0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402cb4:	ldr	x17, [x16, #3784]
  402cb8:	add	x16, x16, #0xec8
  402cbc:	br	x17

0000000000402cc0 <open_tmpfile_linkable@plt>:
  402cc0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402cc4:	ldr	x17, [x16, #3792]
  402cc8:	add	x16, x16, #0xed0
  402ccc:	br	x17

0000000000402cd0 <fdopen@plt>:
  402cd0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402cd4:	ldr	x17, [x16, #3800]
  402cd8:	add	x16, x16, #0xed8
  402cdc:	br	x17

0000000000402ce0 <fprintf@plt>:
  402ce0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ce4:	ldr	x17, [x16, #3808]
  402ce8:	add	x16, x16, #0xee0
  402cec:	br	x17

0000000000402cf0 <fflush_sync_and_check@plt>:
  402cf0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402cf4:	ldr	x17, [x16, #3816]
  402cf8:	add	x16, x16, #0xee8
  402cfc:	br	x17

0000000000402d00 <link_tmpfile@plt>:
  402d00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d04:	ldr	x17, [x16, #3824]
  402d08:	add	x16, x16, #0xef0
  402d0c:	br	x17

0000000000402d10 <random_pool_size@plt>:
  402d10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d14:	ldr	x17, [x16, #3832]
  402d18:	add	x16, x16, #0xef8
  402d1c:	br	x17

0000000000402d20 <malloc@plt>:
  402d20:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d24:	ldr	x17, [x16, #3840]
  402d28:	add	x16, x16, #0xf00
  402d2c:	br	x17

0000000000402d30 <genuine_random_bytes@plt>:
  402d30:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d34:	ldr	x17, [x16, #3848]
  402d38:	add	x16, x16, #0xf08
  402d3c:	br	x17

0000000000402d40 <mkdir_parents@plt>:
  402d40:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d44:	ldr	x17, [x16, #3856]
  402d48:	add	x16, x16, #0xf10
  402d4c:	br	x17

0000000000402d50 <tempfn_random@plt>:
  402d50:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d54:	ldr	x17, [x16, #3864]
  402d58:	add	x16, x16, #0xf18
  402d5c:	br	x17

0000000000402d60 <open64@plt>:
  402d60:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d64:	ldr	x17, [x16, #3872]
  402d68:	add	x16, x16, #0xf20
  402d6c:	br	x17

0000000000402d70 <write@plt>:
  402d70:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d74:	ldr	x17, [x16, #3880]
  402d78:	add	x16, x16, #0xf28
  402d7c:	br	x17

0000000000402d80 <rename@plt>:
  402d80:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d84:	ldr	x17, [x16, #3888]
  402d88:	add	x16, x16, #0xf30
  402d8c:	br	x17

0000000000402d90 <getenv_bool@plt>:
  402d90:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402d94:	ldr	x17, [x16, #3896]
  402d98:	add	x16, x16, #0xf38
  402d9c:	br	x17

0000000000402da0 <detect_vm@plt>:
  402da0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402da4:	ldr	x17, [x16, #3904]
  402da8:	add	x16, x16, #0xf40
  402dac:	br	x17

0000000000402db0 <efi_get_variable@plt>:
  402db0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402db4:	ldr	x17, [x16, #3912]
  402db8:	add	x16, x16, #0xf48
  402dbc:	br	x17

0000000000402dc0 <syncfs_path@plt>:
  402dc0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402dc4:	ldr	x17, [x16, #3920]
  402dc8:	add	x16, x16, #0xf50
  402dcc:	br	x17

0000000000402dd0 <efi_add_boot_option@plt>:
  402dd0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402dd4:	ldr	x17, [x16, #3928]
  402dd8:	add	x16, x16, #0xf58
  402ddc:	br	x17

0000000000402de0 <reallocarray@plt>:
  402de0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402de4:	ldr	x17, [x16, #3936]
  402de8:	add	x16, x16, #0xf60
  402dec:	br	x17

0000000000402df0 <mkdir@plt>:
  402df0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402df4:	ldr	x17, [x16, #3944]
  402df8:	add	x16, x16, #0xf68
  402dfc:	br	x17

0000000000402e00 <strncmp@plt>:
  402e00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e04:	ldr	x17, [x16, #3952]
  402e08:	add	x16, x16, #0xf70
  402e0c:	br	x17

0000000000402e10 <strrchr@plt>:
  402e10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e14:	ldr	x17, [x16, #3960]
  402e18:	add	x16, x16, #0xf78
  402e1c:	br	x17

0000000000402e20 <ascii_strupper@plt>:
  402e20:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e24:	ldr	x17, [x16, #3968]
  402e28:	add	x16, x16, #0xf80
  402e2c:	br	x17

0000000000402e30 <copy_bytes_full@plt>:
  402e30:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e34:	ldr	x17, [x16, #3976]
  402e38:	add	x16, x16, #0xf88
  402e3c:	br	x17

0000000000402e40 <copy_times@plt>:
  402e40:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e44:	ldr	x17, [x16, #3984]
  402e48:	add	x16, x16, #0xf90
  402e4c:	br	x17

0000000000402e50 <fsync@plt>:
  402e50:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e54:	ldr	x17, [x16, #3992]
  402e58:	add	x16, x16, #0xf98
  402e5c:	br	x17

0000000000402e60 <fsync_directory_of_file@plt>:
  402e60:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e64:	ldr	x17, [x16, #4000]
  402e68:	add	x16, x16, #0xfa0
  402e6c:	br	x17

0000000000402e70 <renameat@plt>:
  402e70:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e74:	ldr	x17, [x16, #4008]
  402e78:	add	x16, x16, #0xfa8
  402e7c:	br	x17

0000000000402e80 <strcspn@plt>:
  402e80:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e84:	ldr	x17, [x16, #4016]
  402e88:	add	x16, x16, #0xfb0
  402e8c:	br	x17

0000000000402e90 <unlink@plt>:
  402e90:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402e94:	ldr	x17, [x16, #4024]
  402e98:	add	x16, x16, #0xfb8
  402e9c:	br	x17

0000000000402ea0 <strspn@plt>:
  402ea0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ea4:	ldr	x17, [x16, #4032]
  402ea8:	add	x16, x16, #0xfc0
  402eac:	br	x17

0000000000402eb0 <strverscmp@plt>:
  402eb0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402eb4:	ldr	x17, [x16, #4040]
  402eb8:	add	x16, x16, #0xfc8
  402ebc:	br	x17

0000000000402ec0 <lseek64@plt>:
  402ec0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ec4:	ldr	x17, [x16, #4048]
  402ec8:	add	x16, x16, #0xfd0
  402ecc:	br	x17

0000000000402ed0 <strcmp_ptr@plt>:
  402ed0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ed4:	ldr	x17, [x16, #4056]
  402ed8:	add	x16, x16, #0xfd8
  402edc:	br	x17

0000000000402ee0 <rm_rf@plt>:
  402ee0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ee4:	ldr	x17, [x16, #4064]
  402ee8:	add	x16, x16, #0xfe0
  402eec:	br	x17

0000000000402ef0 <unlinkat@plt>:
  402ef0:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402ef4:	ldr	x17, [x16, #4072]
  402ef8:	add	x16, x16, #0xfe8
  402efc:	br	x17

0000000000402f00 <rmdir@plt>:
  402f00:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402f04:	ldr	x17, [x16, #4080]
  402f08:	add	x16, x16, #0xff0
  402f0c:	br	x17

0000000000402f10 <__fxstat64@plt>:
  402f10:	adrp	x16, 41f000 <__fxstat64@plt+0x1c0f0>
  402f14:	ldr	x17, [x16, #4088]
  402f18:	add	x16, x16, #0xff8
  402f1c:	br	x17

Disassembly of section .text:

0000000000402f20 <.text>:
  402f20:	mov	x29, #0x0                   	// #0
  402f24:	mov	x30, #0x0                   	// #0
  402f28:	mov	x5, x0
  402f2c:	ldr	x1, [sp]
  402f30:	add	x2, sp, #0x8
  402f34:	mov	x6, sp
  402f38:	movz	x0, #0x0, lsl #48
  402f3c:	movk	x0, #0x0, lsl #32
  402f40:	movk	x0, #0x40, lsl #16
  402f44:	movk	x0, #0x305c
  402f48:	movz	x3, #0x0, lsl #48
  402f4c:	movk	x3, #0x0, lsl #32
  402f50:	movk	x3, #0x40, lsl #16
  402f54:	movk	x3, #0x8258
  402f58:	movz	x4, #0x0, lsl #48
  402f5c:	movk	x4, #0x0, lsl #32
  402f60:	movk	x4, #0x40, lsl #16
  402f64:	movk	x4, #0x82d8
  402f68:	bl	4027a0 <__libc_start_main@plt>
  402f6c:	bl	4027b0 <abort@plt>
  402f70:	adrp	x0, 41f000 <__fxstat64@plt+0x1c0f0>
  402f74:	ldr	x0, [x0, #3088]
  402f78:	cbz	x0, 402f80 <__fxstat64@plt+0x70>
  402f7c:	b	4027c0 <__gmon_start__@plt>
  402f80:	ret
  402f84:	adrp	x0, 420000 <__bss_start@@Base>
  402f88:	add	x1, x0, #0x0
  402f8c:	adrp	x0, 420000 <__bss_start@@Base>
  402f90:	add	x0, x0, #0x0
  402f94:	cmp	x1, x0
  402f98:	b.eq	402fc4 <__fxstat64@plt+0xb4>  // b.none
  402f9c:	sub	sp, sp, #0x10
  402fa0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  402fa4:	ldr	x1, [x1, #768]
  402fa8:	str	x1, [sp, #8]
  402fac:	cbz	x1, 402fbc <__fxstat64@plt+0xac>
  402fb0:	mov	x16, x1
  402fb4:	add	sp, sp, #0x10
  402fb8:	br	x16
  402fbc:	add	sp, sp, #0x10
  402fc0:	ret
  402fc4:	ret
  402fc8:	adrp	x0, 420000 <__bss_start@@Base>
  402fcc:	add	x1, x0, #0x0
  402fd0:	adrp	x0, 420000 <__bss_start@@Base>
  402fd4:	add	x0, x0, #0x0
  402fd8:	sub	x1, x1, x0
  402fdc:	mov	x2, #0x2                   	// #2
  402fe0:	asr	x1, x1, #3
  402fe4:	sdiv	x1, x1, x2
  402fe8:	cbz	x1, 403014 <__fxstat64@plt+0x104>
  402fec:	sub	sp, sp, #0x10
  402ff0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  402ff4:	ldr	x2, [x2, #776]
  402ff8:	str	x2, [sp, #8]
  402ffc:	cbz	x2, 40300c <__fxstat64@plt+0xfc>
  403000:	mov	x16, x2
  403004:	add	sp, sp, #0x10
  403008:	br	x16
  40300c:	add	sp, sp, #0x10
  403010:	ret
  403014:	ret
  403018:	stp	x29, x30, [sp, #-32]!
  40301c:	mov	x29, sp
  403020:	str	x19, [sp, #16]
  403024:	adrp	x19, 420000 <__bss_start@@Base>
  403028:	ldrb	w0, [x19]
  40302c:	cbnz	w0, 40303c <__fxstat64@plt+0x12c>
  403030:	bl	402f84 <__fxstat64@plt+0x74>
  403034:	mov	w0, #0x1                   	// #1
  403038:	strb	w0, [x19]
  40303c:	ldr	x19, [sp, #16]
  403040:	ldp	x29, x30, [sp], #32
  403044:	ret
  403048:	b	402fc8 <__fxstat64@plt+0xb8>
  40304c:	ldr	x0, [x0]
  403050:	b	4027d0 <free@plt>
  403054:	ldr	x0, [x0]
  403058:	b	4027d0 <free@plt>
  40305c:	stp	x29, x30, [sp, #-96]!
  403060:	adrp	x8, 420000 <__bss_start@@Base>
  403064:	stp	x20, x19, [sp, #80]
  403068:	mov	w20, w0
  40306c:	adrp	x9, 420000 <__bss_start@@Base>
  403070:	str	w0, [x8, #40]
  403074:	mov	w0, wzr
  403078:	stp	x28, x27, [sp, #16]
  40307c:	stp	x26, x25, [sp, #32]
  403080:	stp	x24, x23, [sp, #48]
  403084:	stp	x22, x21, [sp, #64]
  403088:	mov	x29, sp
  40308c:	mov	x19, x1
  403090:	str	x1, [x9, #48]
  403094:	bl	4027e0 <log_parse_environment_realm@plt>
  403098:	bl	4027f0 <log_open@plt>
  40309c:	bl	402800 <detect_container@plt>
  4030a0:	cmp	w0, #0x1
  4030a4:	b.lt	4030b4 <__fxstat64@plt+0x1a4>  // b.tstop
  4030a8:	adrp	x8, 420000 <__bss_start@@Base>
  4030ac:	mov	w9, #0x1                   	// #1
  4030b0:	strb	w9, [x8, #24]
  4030b4:	tbnz	w20, #31, 40335c <__fxstat64@plt+0x44c>
  4030b8:	cbz	x19, 40337c <__fxstat64@plt+0x46c>
  4030bc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4030c0:	adrp	x3, 408000 <__fxstat64@plt+0x50f0>
  4030c4:	add	x2, x2, #0x788
  4030c8:	add	x3, x3, #0x318
  4030cc:	mov	w0, w20
  4030d0:	mov	x1, x19
  4030d4:	mov	x4, xzr
  4030d8:	bl	402810 <getopt_long@plt>
  4030dc:	tbnz	w0, #31, 403214 <__fxstat64@plt+0x304>
  4030e0:	adrp	x21, 408000 <__fxstat64@plt+0x50f0>
  4030e4:	adrp	x22, 408000 <__fxstat64@plt+0x50f0>
  4030e8:	adrp	x28, 408000 <__fxstat64@plt+0x50f0>
  4030ec:	adrp	x25, 420000 <__bss_start@@Base>
  4030f0:	adrp	x26, 420000 <__bss_start@@Base>
  4030f4:	mov	w27, #0x1                   	// #1
  4030f8:	add	x21, x21, #0x788
  4030fc:	add	x22, x22, #0x318
  403100:	add	x28, x28, #0x310
  403104:	adrp	x23, 420000 <__bss_start@@Base>
  403108:	adrp	x24, 420000 <__bss_start@@Base>
  40310c:	cmp	w0, #0x77
  403110:	b.le	403148 <__fxstat64@plt+0x238>
  403114:	sub	w8, w0, #0x100
  403118:	cmp	w8, #0x5
  40311c:	b.hi	4031a8 <__fxstat64@plt+0x298>  // b.pmore
  403120:	adr	x9, 403130 <__fxstat64@plt+0x220>
  403124:	ldrb	w10, [x28, x8]
  403128:	add	x9, x9, x10, lsl #2
  40312c:	br	x9
  403130:	ldr	x1, [x23, #56]
  403134:	adrp	x0, 420000 <__bss_start@@Base>
  403138:	add	x0, x0, #0x8
  40313c:	bl	402820 <free_and_strdup@plt>
  403140:	tbz	w0, #31, 4031cc <__fxstat64@plt+0x2bc>
  403144:	b	403270 <__fxstat64@plt+0x360>
  403148:	cmp	w0, #0x3f
  40314c:	b.eq	4032e8 <__fxstat64@plt+0x3d8>  // b.none
  403150:	cmp	w0, #0x68
  403154:	b.eq	4031ec <__fxstat64@plt+0x2dc>  // b.none
  403158:	cmp	w0, #0x70
  40315c:	b.ne	4033a0 <__fxstat64@plt+0x490>  // b.any
  403160:	ldrb	w8, [x25, #25]
  403164:	cmp	w8, #0x1
  403168:	b.eq	403234 <__fxstat64@plt+0x324>  // b.none
  40316c:	strb	w27, [x26, #26]
  403170:	b	4031cc <__fxstat64@plt+0x2bc>
  403174:	ldr	w8, [x24, #28]
  403178:	orr	w8, w8, #0x1
  40317c:	str	w8, [x24, #28]
  403180:	b	4031cc <__fxstat64@plt+0x2bc>
  403184:	adrp	x8, 420000 <__bss_start@@Base>
  403188:	strb	w27, [x8, #24]
  40318c:	b	4031cc <__fxstat64@plt+0x2bc>
  403190:	ldr	x1, [x23, #56]
  403194:	adrp	x0, 420000 <__bss_start@@Base>
  403198:	add	x0, x0, #0x10
  40319c:	bl	402820 <free_and_strdup@plt>
  4031a0:	tbz	w0, #31, 4031cc <__fxstat64@plt+0x2bc>
  4031a4:	b	403288 <__fxstat64@plt+0x378>
  4031a8:	cmp	w0, #0x78
  4031ac:	b.ne	4033a0 <__fxstat64@plt+0x490>  // b.any
  4031b0:	ldrb	w8, [x26, #26]
  4031b4:	cmp	w8, #0x1
  4031b8:	b.eq	4032a8 <__fxstat64@plt+0x398>  // b.none
  4031bc:	strb	w27, [x25, #25]
  4031c0:	b	4031cc <__fxstat64@plt+0x2bc>
  4031c4:	adrp	x8, 420000 <__bss_start@@Base>
  4031c8:	strb	w27, [x8, #32]
  4031cc:	mov	w0, w20
  4031d0:	mov	x1, x19
  4031d4:	mov	x2, x21
  4031d8:	mov	x3, x22
  4031dc:	mov	x4, xzr
  4031e0:	bl	402810 <getopt_long@plt>
  4031e4:	tbz	w0, #31, 40310c <__fxstat64@plt+0x1fc>
  4031e8:	b	403214 <__fxstat64@plt+0x304>
  4031ec:	mov	w0, wzr
  4031f0:	mov	x1, xzr
  4031f4:	mov	x2, xzr
  4031f8:	bl	4033c4 <__fxstat64@plt+0x4b4>
  4031fc:	mov	w21, wzr
  403200:	b	4032ec <__fxstat64@plt+0x3dc>
  403204:	bl	402830 <version@plt>
  403208:	mov	w21, w0
  40320c:	cmp	w0, #0x1
  403210:	b.lt	4032ec <__fxstat64@plt+0x3dc>  // b.tstop
  403214:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403218:	add	x2, x2, #0x498
  40321c:	mov	w0, w20
  403220:	mov	x1, x19
  403224:	mov	x3, xzr
  403228:	bl	402840 <dispatch_verb@plt>
  40322c:	mov	w21, w0
  403230:	b	4032ec <__fxstat64@plt+0x3dc>
  403234:	mov	w0, wzr
  403238:	bl	402850 <log_get_max_level_realm@plt>
  40323c:	cmp	w0, #0x3
  403240:	b.lt	4032e8 <__fxstat64@plt+0x3d8>  // b.tstop
  403244:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403248:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  40324c:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  403250:	mov	w1, #0x16                  	// #22
  403254:	add	x2, x2, #0x753
  403258:	add	x4, x4, #0x78c
  40325c:	add	x5, x5, #0x797
  403260:	mov	w0, #0x3                   	// #3
  403264:	movk	w1, #0x4000, lsl #16
  403268:	mov	w3, #0x465                 	// #1125
  40326c:	b	4032e0 <__fxstat64@plt+0x3d0>
  403270:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  403274:	adrp	x3, 408000 <__fxstat64@plt+0x50f0>
  403278:	add	x1, x1, #0x753
  40327c:	add	x3, x3, #0x78c
  403280:	mov	w2, #0x459                 	// #1113
  403284:	b	40329c <__fxstat64@plt+0x38c>
  403288:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  40328c:	adrp	x3, 408000 <__fxstat64@plt+0x50f0>
  403290:	add	x1, x1, #0x753
  403294:	add	x3, x3, #0x78c
  403298:	mov	w2, #0x45f                 	// #1119
  40329c:	mov	w0, wzr
  4032a0:	bl	402860 <log_oom_internal@plt>
  4032a4:	b	403208 <__fxstat64@plt+0x2f8>
  4032a8:	mov	w0, wzr
  4032ac:	bl	402850 <log_get_max_level_realm@plt>
  4032b0:	cmp	w0, #0x3
  4032b4:	b.lt	4032e8 <__fxstat64@plt+0x3d8>  // b.tstop
  4032b8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4032bc:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  4032c0:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  4032c4:	mov	w1, #0x16                  	// #22
  4032c8:	add	x2, x2, #0x753
  4032cc:	add	x4, x4, #0x78c
  4032d0:	add	x5, x5, #0x797
  4032d4:	mov	w0, #0x3                   	// #3
  4032d8:	movk	w1, #0x4000, lsl #16
  4032dc:	mov	w3, #0x46c                 	// #1132
  4032e0:	bl	402870 <log_internal_realm@plt>
  4032e4:	b	403208 <__fxstat64@plt+0x2f8>
  4032e8:	mov	w21, #0xffffffea            	// #-22
  4032ec:	bl	402880 <ask_password_agent_close@plt>
  4032f0:	bl	402890 <polkit_agent_close@plt>
  4032f4:	bl	4028a0 <pager_close@plt>
  4032f8:	bl	4028b0 <mac_selinux_finish@plt>
  4032fc:	adrp	x8, 41f000 <__fxstat64@plt+0x1c0f0>
  403300:	ldr	x8, [x8, #3096]
  403304:	adrp	x19, 41f000 <__fxstat64@plt+0x1c0f0>
  403308:	ldr	x19, [x19, #3104]
  40330c:	add	x9, x8, #0x7
  403310:	and	x20, x9, #0xfffffffffffffff8
  403314:	cmp	x20, x19
  403318:	cset	w9, cs  // cs = hs, nlast
  40331c:	cmp	x8, #0x0
  403320:	cset	w8, eq  // eq = none
  403324:	orr	w8, w8, w9
  403328:	tbnz	w8, #0, 40333c <__fxstat64@plt+0x42c>
  40332c:	ldp	x0, x8, [x20], #16
  403330:	blr	x8
  403334:	cmp	x20, x19
  403338:	b.cc	40332c <__fxstat64@plt+0x41c>  // b.lo, b.ul, b.last
  40333c:	lsr	w0, w21, #31
  403340:	ldp	x20, x19, [sp, #80]
  403344:	ldp	x22, x21, [sp, #64]
  403348:	ldp	x24, x23, [sp, #48]
  40334c:	ldp	x26, x25, [sp, #32]
  403350:	ldp	x28, x27, [sp, #16]
  403354:	ldp	x29, x30, [sp], #96
  403358:	ret
  40335c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  403360:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403364:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  403368:	add	x1, x1, #0x746
  40336c:	add	x2, x2, #0x753
  403370:	add	x4, x4, #0x766
  403374:	mov	w3, #0x449                 	// #1097
  403378:	b	403398 <__fxstat64@plt+0x488>
  40337c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  403380:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403384:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  403388:	add	x1, x1, #0x783
  40338c:	add	x2, x2, #0x753
  403390:	add	x4, x4, #0x766
  403394:	mov	w3, #0x44a                 	// #1098
  403398:	mov	w0, wzr
  40339c:	bl	4028c0 <log_assert_failed_realm@plt>
  4033a0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4033a4:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4033a8:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  4033ac:	add	x1, x1, #0x7d8
  4033b0:	add	x2, x2, #0x753
  4033b4:	add	x4, x4, #0x766
  4033b8:	mov	w3, #0x480                 	// #1152
  4033bc:	mov	w0, wzr
  4033c0:	bl	4028d0 <log_assert_failed_unreachable_realm@plt>
  4033c4:	stp	x29, x30, [sp, #-48]!
  4033c8:	mov	x29, sp
  4033cc:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  4033d0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4033d4:	add	x0, x0, #0x7e7
  4033d8:	add	x1, x1, #0x7ef
  4033dc:	add	x2, x29, #0x18
  4033e0:	str	x21, [sp, #16]
  4033e4:	stp	x20, x19, [sp, #32]
  4033e8:	str	xzr, [x29, #24]
  4033ec:	bl	4028e0 <terminal_urlify_man@plt>
  4033f0:	tbnz	w0, #31, 40344c <__fxstat64@plt+0x53c>
  4033f4:	adrp	x8, 420000 <__bss_start@@Base>
  4033f8:	ldr	x19, [x8, #64]
  4033fc:	bl	4028f0 <colors_enabled@plt>
  403400:	adrp	x21, 408000 <__fxstat64@plt+0x50f0>
  403404:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  403408:	add	x21, x21, #0xd84
  40340c:	add	x8, x8, #0xd7a
  403410:	tst	w0, #0x1
  403414:	csel	x20, x8, x21, ne  // ne = any
  403418:	bl	4028f0 <colors_enabled@plt>
  40341c:	ldr	x4, [x29, #24]
  403420:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  403424:	add	x8, x8, #0xd85
  403428:	tst	w0, #0x1
  40342c:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403430:	csel	x3, x8, x21, ne  // ne = any
  403434:	add	x0, x0, #0x7f1
  403438:	mov	x1, x19
  40343c:	mov	x2, x20
  403440:	bl	402900 <printf@plt>
  403444:	mov	w19, wzr
  403448:	b	40346c <__fxstat64@plt+0x55c>
  40344c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  403450:	adrp	x3, 408000 <__fxstat64@plt+0x50f0>
  403454:	add	x1, x1, #0x753
  403458:	add	x3, x3, #0x6d8
  40345c:	mov	w2, #0x40a                 	// #1034
  403460:	mov	w0, wzr
  403464:	bl	402860 <log_oom_internal@plt>
  403468:	mov	w19, w0
  40346c:	ldr	x0, [x29, #24]
  403470:	bl	4027d0 <free@plt>
  403474:	mov	w0, w19
  403478:	ldp	x20, x19, [sp, #32]
  40347c:	ldr	x21, [sp, #16]
  403480:	ldp	x29, x30, [sp], #48
  403484:	ret
  403488:	sub	sp, sp, #0x170
  40348c:	stp	x29, x30, [sp, #272]
  403490:	add	x29, sp, #0x110
  403494:	stp	x28, x27, [sp, #288]
  403498:	stp	x26, x25, [sp, #304]
  40349c:	stp	x24, x23, [sp, #320]
  4034a0:	stp	x22, x21, [sp, #336]
  4034a4:	stp	x20, x19, [sp, #352]
  4034a8:	stp	xzr, xzr, [x29, #-128]
  4034ac:	stp	xzr, xzr, [sp, #128]
  4034b0:	bl	402910 <geteuid@plt>
  4034b4:	cmp	w0, #0x0
  4034b8:	cset	w0, ne  // ne = any
  4034bc:	sub	x4, x29, #0x80
  4034c0:	mov	x1, xzr
  4034c4:	mov	x2, xzr
  4034c8:	mov	x3, xzr
  4034cc:	bl	404f98 <__fxstat64@plt+0x2088>
  4034d0:	adrp	x19, 420000 <__bss_start@@Base>
  4034d4:	ldrb	w8, [x19, #26]
  4034d8:	cmp	w8, #0x1
  4034dc:	b.ne	403534 <__fxstat64@plt+0x624>  // b.any
  4034e0:	mov	w20, w0
  4034e4:	cmn	w0, #0xd
  4034e8:	b.ne	403524 <__fxstat64@plt+0x614>  // b.any
  4034ec:	mov	w0, wzr
  4034f0:	bl	402850 <log_get_max_level_realm@plt>
  4034f4:	cmp	w0, #0x3
  4034f8:	b.lt	403714 <__fxstat64@plt+0x804>  // b.tstop
  4034fc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403500:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  403504:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  403508:	add	x2, x2, #0x753
  40350c:	add	x4, x4, #0xdf1
  403510:	add	x5, x5, #0xdfd
  403514:	mov	w0, #0x3                   	// #3
  403518:	mov	w1, #0xfffffff3            	// #-13
  40351c:	mov	w3, #0x496                 	// #1174
  403520:	b	403598 <__fxstat64@plt+0x688>
  403524:	tbnz	w20, #31, 403718 <__fxstat64@plt+0x808>
  403528:	adrp	x8, 420000 <__bss_start@@Base>
  40352c:	ldr	x0, [x8, #8]
  403530:	bl	402920 <puts@plt>
  403534:	bl	402910 <geteuid@plt>
  403538:	cmp	w0, #0x0
  40353c:	cset	w0, ne  // ne = any
  403540:	add	x1, sp, #0x80
  403544:	bl	405084 <__fxstat64@plt+0x2174>
  403548:	adrp	x21, 420000 <__bss_start@@Base>
  40354c:	ldrb	w8, [x21, #25]
  403550:	cmp	w8, #0x1
  403554:	b.ne	4035c8 <__fxstat64@plt+0x6b8>  // b.any
  403558:	mov	w20, w0
  40355c:	cmn	w0, #0xd
  403560:	b.ne	4035a4 <__fxstat64@plt+0x694>  // b.any
  403564:	mov	w0, wzr
  403568:	bl	402850 <log_get_max_level_realm@plt>
  40356c:	cmp	w0, #0x3
  403570:	b.lt	403714 <__fxstat64@plt+0x804>  // b.tstop
  403574:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403578:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  40357c:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  403580:	add	x2, x2, #0x753
  403584:	add	x4, x4, #0xdf1
  403588:	add	x5, x5, #0xe22
  40358c:	mov	w0, #0x3                   	// #3
  403590:	mov	w1, #0xfffffff3            	// #-13
  403594:	mov	w3, #0x4a0                 	// #1184
  403598:	bl	402870 <log_internal_realm@plt>
  40359c:	mov	w20, w0
  4035a0:	b	403718 <__fxstat64@plt+0x808>
  4035a4:	tbnz	w20, #31, 403718 <__fxstat64@plt+0x808>
  4035a8:	adrp	x8, 420000 <__bss_start@@Base>
  4035ac:	ldr	x8, [x8, #16]
  4035b0:	adrp	x9, 420000 <__bss_start@@Base>
  4035b4:	ldr	x9, [x9, #8]
  4035b8:	cmp	x8, #0x0
  4035bc:	csel	x0, x9, x8, eq  // eq = none
  4035c0:	cbz	x0, 4036dc <__fxstat64@plt+0x7cc>
  4035c4:	bl	402920 <puts@plt>
  4035c8:	ldrb	w8, [x19, #26]
  4035cc:	tbnz	w8, #0, 4035d8 <__fxstat64@plt+0x6c8>
  4035d0:	ldrb	w8, [x21, #25]
  4035d4:	tbz	w8, #0, 4035e0 <__fxstat64@plt+0x6d0>
  4035d8:	mov	w20, wzr
  4035dc:	b	403718 <__fxstat64@plt+0x808>
  4035e0:	adrp	x8, 420000 <__bss_start@@Base>
  4035e4:	ldr	w0, [x8, #28]
  4035e8:	bl	402930 <pager_open@plt>
  4035ec:	bl	402940 <is_efi_boot@plt>
  4035f0:	adrp	x24, 420000 <__bss_start@@Base>
  4035f4:	tbz	w0, #0, 4036c8 <__fxstat64@plt+0x7b8>
  4035f8:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  4035fc:	add	x0, x0, #0xeff
  403600:	sub	x1, x29, #0x10
  403604:	stur	xzr, [x29, #-16]
  403608:	stp	xzr, xzr, [sp, #112]
  40360c:	stp	xzr, xzr, [sp, #96]
  403610:	stp	xzr, xzr, [x29, #-112]
  403614:	str	xzr, [sp, #88]
  403618:	bl	405178 <__fxstat64@plt+0x2268>
  40361c:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403620:	add	x0, x0, #0xf12
  403624:	add	x1, sp, #0x78
  403628:	bl	405178 <__fxstat64@plt+0x2268>
  40362c:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403630:	add	x0, x0, #0xf25
  403634:	add	x1, sp, #0x70
  403638:	bl	405178 <__fxstat64@plt+0x2268>
  40363c:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403640:	add	x0, x0, #0xf30
  403644:	add	x1, sp, #0x60
  403648:	bl	405178 <__fxstat64@plt+0x2268>
  40364c:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403650:	add	x0, x0, #0xf39
  403654:	add	x1, sp, #0x68
  403658:	bl	405178 <__fxstat64@plt+0x2268>
  40365c:	add	x0, sp, #0x58
  403660:	bl	402950 <efi_loader_get_features@plt>
  403664:	ldr	x0, [sp, #104]
  403668:	cbz	x0, 403670 <__fxstat64@plt+0x760>
  40366c:	bl	402960 <efi_tilt_backslashes@plt>
  403670:	sub	x0, x29, #0x70
  403674:	bl	402970 <efi_loader_get_device_part_uuid@plt>
  403678:	mov	w20, w0
  40367c:	mov	w0, wzr
  403680:	tbz	w20, #31, 403748 <__fxstat64@plt+0x838>
  403684:	cmn	w20, #0x2
  403688:	b.eq	403748 <__fxstat64@plt+0x838>  // b.none
  40368c:	mov	w0, wzr
  403690:	bl	402850 <log_get_max_level_realm@plt>
  403694:	cmp	w0, #0x4
  403698:	b.lt	40373c <__fxstat64@plt+0x82c>  // b.tstop
  40369c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4036a0:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  4036a4:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  4036a8:	add	x2, x2, #0x753
  4036ac:	add	x4, x4, #0xdf1
  4036b0:	add	x5, x5, #0xf4f
  4036b4:	mov	w0, #0x4                   	// #4
  4036b8:	mov	w3, #0x4d2                 	// #1234
  4036bc:	mov	w1, w20
  4036c0:	bl	402870 <log_internal_realm@plt>
  4036c4:	b	403748 <__fxstat64@plt+0x838>
  4036c8:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  4036cc:	add	x0, x0, #0x975
  4036d0:	bl	402920 <puts@plt>
  4036d4:	mov	w23, wzr
  4036d8:	b	403afc <__fxstat64@plt+0xbec>
  4036dc:	bl	402850 <log_get_max_level_realm@plt>
  4036e0:	cmp	w0, #0x3
  4036e4:	b.lt	403714 <__fxstat64@plt+0x804>  // b.tstop
  4036e8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4036ec:	adrp	x4, 408000 <__fxstat64@plt+0x50f0>
  4036f0:	adrp	x5, 408000 <__fxstat64@plt+0x50f0>
  4036f4:	mov	w1, #0xd                   	// #13
  4036f8:	add	x2, x2, #0x753
  4036fc:	add	x4, x4, #0xdf1
  403700:	add	x5, x5, #0xe22
  403704:	mov	w0, #0x3                   	// #3
  403708:	movk	w1, #0x4000, lsl #16
  40370c:	mov	w3, #0x4a6                 	// #1190
  403710:	b	403598 <__fxstat64@plt+0x688>
  403714:	mov	w20, #0xfffffff3            	// #-13
  403718:	mov	w0, w20
  40371c:	ldp	x20, x19, [sp, #352]
  403720:	ldp	x22, x21, [sp, #336]
  403724:	ldp	x24, x23, [sp, #320]
  403728:	ldp	x26, x25, [sp, #304]
  40372c:	ldp	x28, x27, [sp, #288]
  403730:	ldp	x29, x30, [sp, #272]
  403734:	add	sp, sp, #0x170
  403738:	ret
  40373c:	mov	w8, wzr
  403740:	neg	w9, w20
  403744:	sub	w0, w8, w9, uxtb
  403748:	str	w0, [sp, #84]
  40374c:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403750:	add	x0, x0, #0x996
  403754:	bl	402920 <puts@plt>
  403758:	bl	4028f0 <colors_enabled@plt>
  40375c:	ldur	x8, [x29, #-16]
  403760:	ldr	x9, [sp, #120]
  403764:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  403768:	adrp	x27, 408000 <__fxstat64@plt+0x50f0>
  40376c:	add	x23, x23, #0xd84
  403770:	add	x27, x27, #0xd7a
  403774:	tst	w0, #0x1
  403778:	adrp	x19, 409000 <__fxstat64@plt+0x60f0>
  40377c:	add	x19, x19, #0x30e
  403780:	csel	x20, x27, x23, ne  // ne = any
  403784:	cmp	x8, #0x0
  403788:	csel	x21, x19, x8, eq  // eq = none
  40378c:	cmp	x9, #0x0
  403790:	csel	x22, x19, x9, eq  // eq = none
  403794:	bl	4028f0 <colors_enabled@plt>
  403798:	adrp	x24, 408000 <__fxstat64@plt+0x50f0>
  40379c:	add	x24, x24, #0xd85
  4037a0:	tst	w0, #0x1
  4037a4:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  4037a8:	csel	x4, x24, x23, ne  // ne = any
  4037ac:	add	x0, x0, #0xf84
  4037b0:	mov	x1, x20
  4037b4:	mov	x2, x21
  4037b8:	mov	x3, x22
  4037bc:	bl	402900 <printf@plt>
  4037c0:	bl	402980 <is_efi_secure_boot@plt>
  4037c4:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  4037c8:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  4037cc:	add	x8, x8, #0x319
  4037d0:	add	x9, x9, #0x312
  4037d4:	tst	w0, #0x1
  4037d8:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  4037dc:	csel	x1, x9, x8, ne  // ne = any
  4037e0:	add	x0, x0, #0xfa0
  4037e4:	bl	402900 <printf@plt>
  4037e8:	bl	402990 <is_efi_secure_boot_setup_mode@plt>
  4037ec:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  4037f0:	adrp	x9, 408000 <__fxstat64@plt+0x50f0>
  4037f4:	add	x8, x8, #0xfcd
  4037f8:	add	x9, x9, #0xfc7
  4037fc:	tst	w0, #0x1
  403800:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403804:	csel	x1, x9, x8, ne  // ne = any
  403808:	add	x0, x0, #0xfb4
  40380c:	bl	402900 <printf@plt>
  403810:	mov	w0, #0xa                   	// #10
  403814:	bl	4029a0 <putchar@plt>
  403818:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  40381c:	add	x0, x0, #0x99e
  403820:	bl	402920 <puts@plt>
  403824:	bl	4028f0 <colors_enabled@plt>
  403828:	ldr	x8, [sp, #112]
  40382c:	tst	w0, #0x1
  403830:	csel	x20, x27, x23, ne  // ne = any
  403834:	cmp	x8, #0x0
  403838:	csel	x21, x19, x8, eq  // eq = none
  40383c:	bl	4028f0 <colors_enabled@plt>
  403840:	tst	w0, #0x1
  403844:	adrp	x0, 408000 <__fxstat64@plt+0x50f0>
  403848:	csel	x3, x24, x23, ne  // ne = any
  40384c:	add	x0, x0, #0xfd2
  403850:	mov	x1, x20
  403854:	mov	x2, x21
  403858:	bl	402900 <printf@plt>
  40385c:	adrp	x19, 408000 <__fxstat64@plt+0x50f0>
  403860:	adrp	x24, 409000 <__fxstat64@plt+0x60f0>
  403864:	adrp	x26, 409000 <__fxstat64@plt+0x60f0>
  403868:	adrp	x20, 409000 <__fxstat64@plt+0x60f0>
  40386c:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  403870:	mov	x27, xzr
  403874:	add	x19, x19, #0x618
  403878:	add	x24, x24, #0x32b
  40387c:	add	x26, x26, #0x321
  403880:	mov	w25, #0xb                   	// #11
  403884:	add	x20, x20, #0x9
  403888:	add	x23, x23, #0xd84
  40388c:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  403890:	adrp	x9, 408000 <__fxstat64@plt+0x50f0>
  403894:	cmp	x27, #0x0
  403898:	add	x8, x8, #0xff9
  40389c:	add	x9, x9, #0xfe9
  4038a0:	csel	x0, x9, x8, eq  // eq = none
  4038a4:	bl	402900 <printf@plt>
  4038a8:	add	x28, x19, x27
  4038ac:	ldr	x21, [sp, #88]
  4038b0:	ldr	x22, [x28]
  4038b4:	bl	4028f0 <colors_enabled@plt>
  4038b8:	bics	xzr, x22, x21
  4038bc:	cinc	w8, w25, ne  // ne = any
  4038c0:	csel	x9, x26, x24, eq  // eq = none
  4038c4:	tst	w0, #0x1
  4038c8:	mov	w0, w8
  4038cc:	csel	x21, x9, x23, ne  // ne = any
  4038d0:	bl	4029b0 <special_glyph@plt>
  4038d4:	mov	x22, x0
  4038d8:	bl	4028f0 <colors_enabled@plt>
  4038dc:	ldr	x4, [x28, #8]
  4038e0:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  4038e4:	tst	w0, #0x1
  4038e8:	add	x8, x8, #0xd85
  4038ec:	csel	x3, x8, x23, ne  // ne = any
  4038f0:	mov	x0, x20
  4038f4:	mov	x1, x21
  4038f8:	mov	x2, x22
  4038fc:	bl	402900 <printf@plt>
  403900:	add	x27, x27, #0x10
  403904:	cmp	x27, #0x70
  403908:	b.ne	40388c <__fxstat64@plt+0x97c>  // b.any
  40390c:	ldr	x1, [sp, #96]
  403910:	cbz	x1, 403920 <__fxstat64@plt+0xa10>
  403914:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403918:	add	x0, x0, #0x14
  40391c:	bl	402900 <printf@plt>
  403920:	ldp	x8, x9, [x29, #-112]
  403924:	adrp	x24, 420000 <__bss_start@@Base>
  403928:	orr	x10, x9, x8
  40392c:	cbz	x10, 4039a4 <__fxstat64@plt+0xa94>
  403930:	ldurb	w2, [x29, #-111]
  403934:	ldurb	w3, [x29, #-110]
  403938:	ldurb	w4, [x29, #-109]
  40393c:	ldurb	w5, [x29, #-108]
  403940:	ldurb	w6, [x29, #-107]
  403944:	ldurb	w7, [x29, #-106]
  403948:	ldurb	w10, [x29, #-105]
  40394c:	ldurb	w11, [x29, #-103]
  403950:	ldurb	w12, [x29, #-102]
  403954:	ldurb	w13, [x29, #-101]
  403958:	ldurb	w14, [x29, #-100]
  40395c:	ldurb	w15, [x29, #-99]
  403960:	ldurb	w16, [x29, #-98]
  403964:	ldurb	w17, [x29, #-97]
  403968:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  40396c:	and	w1, w8, #0xff
  403970:	and	w8, w9, #0xff
  403974:	add	x0, x0, #0x27
  403978:	str	w17, [sp, #64]
  40397c:	str	w16, [sp, #56]
  403980:	str	w15, [sp, #48]
  403984:	str	w14, [sp, #40]
  403988:	str	w13, [sp, #32]
  40398c:	str	w12, [sp, #24]
  403990:	str	w11, [sp, #16]
  403994:	str	w8, [sp, #8]
  403998:	str	w10, [sp]
  40399c:	bl	402900 <printf@plt>
  4039a0:	b	4039b0 <__fxstat64@plt+0xaa0>
  4039a4:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  4039a8:	add	x0, x0, #0x9c0
  4039ac:	bl	402920 <puts@plt>
  4039b0:	ldr	w23, [sp, #84]
  4039b4:	adrp	x19, 409000 <__fxstat64@plt+0x60f0>
  4039b8:	mov	w0, #0x2                   	// #2
  4039bc:	add	x19, x19, #0x30e
  4039c0:	bl	4029b0 <special_glyph@plt>
  4039c4:	ldr	x8, [sp, #104]
  4039c8:	mov	x1, x0
  4039cc:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  4039d0:	add	x0, x0, #0x92
  4039d4:	cmp	x8, #0x0
  4039d8:	csel	x2, x19, x8, eq  // eq = none
  4039dc:	bl	402900 <printf@plt>
  4039e0:	mov	w0, #0xa                   	// #10
  4039e4:	bl	4029a0 <putchar@plt>
  4039e8:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  4039ec:	add	x0, x0, #0x9b3
  4039f0:	bl	402920 <puts@plt>
  4039f4:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  4039f8:	add	x0, x0, #0xba
  4039fc:	mov	w1, wzr
  403a00:	bl	4029c0 <access@plt>
  403a04:	adrp	x21, 409000 <__fxstat64@plt+0x60f0>
  403a08:	adrp	x22, 409000 <__fxstat64@plt+0x60f0>
  403a0c:	add	x21, x21, #0x339
  403a10:	add	x22, x22, #0x335
  403a14:	cmp	w0, #0x0
  403a18:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403a1c:	csel	x1, x22, x21, ge  // ge = tcont
  403a20:	add	x0, x0, #0xa7
  403a24:	bl	402900 <printf@plt>
  403a28:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403a2c:	add	x0, x0, #0x11d
  403a30:	mov	w1, wzr
  403a34:	bl	4029c0 <access@plt>
  403a38:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  403a3c:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  403a40:	add	x8, x8, #0x172
  403a44:	add	x9, x9, #0x16e
  403a48:	cmp	w0, #0x0
  403a4c:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403a50:	csel	x1, x9, x8, ge  // ge = tcont
  403a54:	add	x0, x0, #0x10a
  403a58:	bl	402900 <printf@plt>
  403a5c:	ldr	x0, [x24, #8]
  403a60:	cbz	x0, 403aa0 <__fxstat64@plt+0xb90>
  403a64:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  403a68:	add	x1, x1, #0x17a
  403a6c:	mov	x2, #0xffffffffffffffff    	// #-1
  403a70:	bl	4029d0 <path_join_internal@plt>
  403a74:	cbz	x0, 403ab0 <__fxstat64@plt+0xba0>
  403a78:	mov	w1, wzr
  403a7c:	mov	x20, x0
  403a80:	bl	4029c0 <access@plt>
  403a84:	cmp	w0, #0x0
  403a88:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403a8c:	csel	x1, x22, x21, ge  // ge = tcont
  403a90:	add	x0, x0, #0x18e
  403a94:	bl	402900 <printf@plt>
  403a98:	mov	x0, x20
  403a9c:	bl	4027d0 <free@plt>
  403aa0:	mov	w0, #0xa                   	// #10
  403aa4:	bl	4029a0 <putchar@plt>
  403aa8:	mov	w19, #0x1                   	// #1
  403aac:	b	403ad0 <__fxstat64@plt+0xbc0>
  403ab0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  403ab4:	adrp	x3, 408000 <__fxstat64@plt+0x50f0>
  403ab8:	add	x1, x1, #0x753
  403abc:	add	x3, x3, #0xdf1
  403ac0:	mov	w2, #0x4fd                 	// #1277
  403ac4:	bl	402860 <log_oom_internal@plt>
  403ac8:	mov	w20, w0
  403acc:	mov	w19, wzr
  403ad0:	ldr	x0, [sp, #96]
  403ad4:	bl	4027d0 <free@plt>
  403ad8:	ldr	x0, [sp, #104]
  403adc:	bl	4027d0 <free@plt>
  403ae0:	ldr	x0, [sp, #112]
  403ae4:	bl	4027d0 <free@plt>
  403ae8:	ldr	x0, [sp, #120]
  403aec:	bl	4027d0 <free@plt>
  403af0:	ldur	x0, [x29, #-16]
  403af4:	bl	4027d0 <free@plt>
  403af8:	tbz	w19, #0, 403718 <__fxstat64@plt+0x808>
  403afc:	ldr	x20, [x24, #8]
  403b00:	cbz	x20, 403c58 <__fxstat64@plt+0xd48>
  403b04:	ldp	x21, x19, [x29, #-128]
  403b08:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403b0c:	add	x0, x0, #0x9e8
  403b10:	bl	402920 <puts@plt>
  403b14:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403b18:	add	x0, x0, #0x33c
  403b1c:	mov	x1, x20
  403b20:	bl	402900 <printf@plt>
  403b24:	orr	x8, x19, x21
  403b28:	cbz	x8, 403b9c <__fxstat64@plt+0xc8c>
  403b2c:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403b30:	lsr	x8, x19, #56
  403b34:	ubfx	x9, x19, #24, #8
  403b38:	lsr	x10, x21, #56
  403b3c:	ubfx	x4, x21, #24, #8
  403b40:	and	w1, w21, #0xff
  403b44:	ubfx	w2, w21, #8, #8
  403b48:	ubfx	w3, w21, #16, #8
  403b4c:	ubfx	x5, x21, #32, #8
  403b50:	ubfx	x6, x21, #40, #8
  403b54:	ubfx	x7, x21, #48, #8
  403b58:	and	w11, w19, #0xff
  403b5c:	ubfx	w12, w19, #8, #8
  403b60:	ubfx	w13, w19, #16, #8
  403b64:	ubfx	x14, x19, #32, #8
  403b68:	ubfx	x15, x19, #40, #8
  403b6c:	ubfx	x16, x19, #48, #8
  403b70:	add	x0, x0, #0x34e
  403b74:	str	w8, [sp, #64]
  403b78:	str	w16, [sp, #56]
  403b7c:	str	w15, [sp, #48]
  403b80:	str	w14, [sp, #40]
  403b84:	str	w9, [sp, #32]
  403b88:	str	w13, [sp, #24]
  403b8c:	str	w12, [sp, #16]
  403b90:	str	w11, [sp, #8]
  403b94:	str	w10, [sp]
  403b98:	bl	402900 <printf@plt>
  403b9c:	mov	w0, #0xa                   	// #10
  403ba0:	bl	4029a0 <putchar@plt>
  403ba4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  403ba8:	add	x1, x1, #0x3ac
  403bac:	mov	x0, x20
  403bb0:	mov	x2, xzr
  403bb4:	bl	405214 <__fxstat64@plt+0x2304>
  403bb8:	tbnz	w0, #31, 403c4c <__fxstat64@plt+0xd3c>
  403bbc:	cbnz	w0, 403bf4 <__fxstat64@plt+0xce4>
  403bc0:	bl	402850 <log_get_max_level_realm@plt>
  403bc4:	cmp	w0, #0x6
  403bc8:	b.lt	403bf4 <__fxstat64@plt+0xce4>  // b.tstop
  403bcc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403bd0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  403bd4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  403bd8:	add	x2, x2, #0x753
  403bdc:	add	x4, x4, #0x3b8
  403be0:	add	x5, x5, #0x3c8
  403be4:	mov	w0, #0x6                   	// #6
  403be8:	mov	w3, #0xe7                  	// #231
  403bec:	mov	w1, wzr
  403bf0:	bl	402870 <log_internal_realm@plt>
  403bf4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  403bf8:	adrp	x2, 409000 <__fxstat64@plt+0x60f0>
  403bfc:	add	x1, x1, #0x3eb
  403c00:	add	x2, x2, #0x3f4
  403c04:	mov	x0, x20
  403c08:	bl	405214 <__fxstat64@plt+0x2304>
  403c0c:	tbnz	w0, #31, 403c4c <__fxstat64@plt+0xd3c>
  403c10:	cbnz	w0, 403c50 <__fxstat64@plt+0xd40>
  403c14:	bl	402850 <log_get_max_level_realm@plt>
  403c18:	cmp	w0, #0x6
  403c1c:	b.lt	403c50 <__fxstat64@plt+0xd40>  // b.tstop
  403c20:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403c24:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  403c28:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  403c2c:	add	x2, x2, #0x753
  403c30:	add	x4, x4, #0x3b8
  403c34:	add	x5, x5, #0x3f9
  403c38:	mov	w0, #0x6                   	// #6
  403c3c:	mov	w3, #0xed                  	// #237
  403c40:	mov	w1, wzr
  403c44:	bl	402870 <log_internal_realm@plt>
  403c48:	b	403c50 <__fxstat64@plt+0xd40>
  403c4c:	mov	w23, w0
  403c50:	mov	w0, #0xa                   	// #10
  403c54:	bl	4029a0 <putchar@plt>
  403c58:	bl	402940 <is_efi_boot@plt>
  403c5c:	tbz	w0, #0, 403e2c <__fxstat64@plt+0xf1c>
  403c60:	sub	x0, x29, #0x70
  403c64:	stur	xzr, [x29, #-112]
  403c68:	stur	xzr, [x29, #-16]
  403c6c:	bl	4029e0 <efi_get_boot_options@plt>
  403c70:	cmn	w0, #0x2
  403c74:	b.ne	403cb0 <__fxstat64@plt+0xda0>  // b.any
  403c78:	mov	w0, wzr
  403c7c:	bl	402850 <log_get_max_level_realm@plt>
  403c80:	cmp	w0, #0x3
  403c84:	b.lt	403ce0 <__fxstat64@plt+0xdd0>  // b.tstop
  403c88:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403c8c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  403c90:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  403c94:	add	x2, x2, #0x753
  403c98:	add	x4, x4, #0x5fd
  403c9c:	add	x5, x5, #0x60e
  403ca0:	mov	w0, #0x3                   	// #3
  403ca4:	mov	w1, #0xfffffffe            	// #-2
  403ca8:	mov	w3, #0x11a                 	// #282
  403cac:	b	403dfc <__fxstat64@plt+0xeec>
  403cb0:	mov	w20, w0
  403cb4:	tbnz	w0, #31, 403ce8 <__fxstat64@plt+0xdd8>
  403cb8:	sub	x0, x29, #0x10
  403cbc:	bl	4029f0 <efi_get_boot_order@plt>
  403cc0:	cmn	w0, #0x2
  403cc4:	b.ne	403d20 <__fxstat64@plt+0xe10>  // b.any
  403cc8:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403ccc:	add	x0, x0, #0xa07
  403cd0:	bl	402920 <puts@plt>
  403cd4:	mov	w22, wzr
  403cd8:	mov	x21, xzr
  403cdc:	b	403d64 <__fxstat64@plt+0xe54>
  403ce0:	mov	w20, #0xfffffffe            	// #-2
  403ce4:	b	403e14 <__fxstat64@plt+0xf04>
  403ce8:	mov	w0, wzr
  403cec:	bl	402850 <log_get_max_level_realm@plt>
  403cf0:	cmp	w0, #0x3
  403cf4:	b.lt	403dbc <__fxstat64@plt+0xeac>  // b.tstop
  403cf8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403cfc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  403d00:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  403d04:	add	x2, x2, #0x753
  403d08:	add	x4, x4, #0x5fd
  403d0c:	add	x5, x5, #0x66c
  403d10:	mov	w0, #0x3                   	// #3
  403d14:	mov	w3, #0x11c                 	// #284
  403d18:	mov	w1, w20
  403d1c:	b	403dfc <__fxstat64@plt+0xeec>
  403d20:	mov	w21, w0
  403d24:	tbnz	w0, #31, 403dc8 <__fxstat64@plt+0xeb8>
  403d28:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403d2c:	add	x0, x0, #0xa07
  403d30:	bl	402920 <puts@plt>
  403d34:	cbz	w21, 403cd4 <__fxstat64@plt+0xdc4>
  403d38:	mov	w21, w21
  403d3c:	mov	x19, xzr
  403d40:	lsl	x22, x21, #1
  403d44:	ldur	x8, [x29, #-16]
  403d48:	mov	w1, #0x1                   	// #1
  403d4c:	ldrh	w0, [x8, x19]
  403d50:	bl	4058a0 <__fxstat64@plt+0x2990>
  403d54:	add	x19, x19, #0x2
  403d58:	cmp	x22, x19
  403d5c:	b.ne	403d44 <__fxstat64@plt+0xe34>  // b.any
  403d60:	mov	w22, #0x1                   	// #1
  403d64:	cmp	w20, #0x1
  403d68:	b.lt	403db4 <__fxstat64@plt+0xea4>  // b.tstop
  403d6c:	mov	x19, xzr
  403d70:	mov	w20, w20
  403d74:	ldur	x8, [x29, #-112]
  403d78:	ldrh	w0, [x8, x19, lsl #1]
  403d7c:	cbz	w22, 403da0 <__fxstat64@plt+0xe90>
  403d80:	ldur	x8, [x29, #-16]
  403d84:	mov	x9, x21
  403d88:	ldrh	w10, [x8]
  403d8c:	cmp	w0, w10
  403d90:	b.eq	403da8 <__fxstat64@plt+0xe98>  // b.none
  403d94:	subs	x9, x9, #0x1
  403d98:	add	x8, x8, #0x2
  403d9c:	b.ne	403d88 <__fxstat64@plt+0xe78>  // b.any
  403da0:	mov	w1, wzr
  403da4:	bl	4058a0 <__fxstat64@plt+0x2990>
  403da8:	add	x19, x19, #0x1
  403dac:	cmp	x19, x20
  403db0:	b.ne	403d74 <__fxstat64@plt+0xe64>  // b.any
  403db4:	mov	w20, wzr
  403db8:	b	403e14 <__fxstat64@plt+0xf04>
  403dbc:	mov	w8, wzr
  403dc0:	neg	w9, w20
  403dc4:	b	403e10 <__fxstat64@plt+0xf00>
  403dc8:	mov	w0, wzr
  403dcc:	bl	402850 <log_get_max_level_realm@plt>
  403dd0:	cmp	w0, #0x3
  403dd4:	b.lt	403e08 <__fxstat64@plt+0xef8>  // b.tstop
  403dd8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  403ddc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  403de0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  403de4:	add	x2, x2, #0x753
  403de8:	add	x4, x4, #0x5fd
  403dec:	add	x5, x5, #0x690
  403df0:	mov	w0, #0x3                   	// #3
  403df4:	mov	w3, #0x122                 	// #290
  403df8:	mov	w1, w21
  403dfc:	bl	402870 <log_internal_realm@plt>
  403e00:	mov	w20, w0
  403e04:	b	403e14 <__fxstat64@plt+0xf04>
  403e08:	mov	w8, wzr
  403e0c:	neg	w9, w21
  403e10:	sub	w20, w8, w9, uxtb
  403e14:	ldur	x0, [x29, #-16]
  403e18:	bl	4027d0 <free@plt>
  403e1c:	ldur	x0, [x29, #-112]
  403e20:	bl	4027d0 <free@plt>
  403e24:	cmp	w20, #0x0
  403e28:	csel	w23, w20, w23, lt  // lt = tstop
  403e2c:	adrp	x8, 420000 <__bss_start@@Base>
  403e30:	ldr	x20, [x24, #8]
  403e34:	ldr	x21, [x8, #16]
  403e38:	orr	x8, x20, x21
  403e3c:	cbz	x8, 403f64 <__fxstat64@plt+0x1054>
  403e40:	sub	x8, x29, #0x80
  403e44:	add	x9, sp, #0x80
  403e48:	cmp	x21, #0x0
  403e4c:	add	x10, x8, #0x8
  403e50:	add	x11, x9, #0x8
  403e54:	csel	x8, x9, x8, ne  // ne = any
  403e58:	ldr	x22, [x8]
  403e5c:	csel	x8, x11, x10, ne  // ne = any
  403e60:	ldr	x19, [x8]
  403e64:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403e68:	movi	v0.2d, #0x0
  403e6c:	csel	x1, x21, x20, ne  // ne = any
  403e70:	add	x0, x0, #0x776
  403e74:	stur	xzr, [x29, #-32]
  403e78:	stp	q0, q0, [x29, #-64]
  403e7c:	stp	q0, q0, [x29, #-96]
  403e80:	stur	q0, [x29, #-112]
  403e84:	bl	402900 <printf@plt>
  403e88:	orr	x8, x19, x22
  403e8c:	cbz	x8, 403f00 <__fxstat64@plt+0xff0>
  403e90:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403e94:	lsr	x8, x22, #56
  403e98:	ubfx	x4, x22, #24, #8
  403e9c:	and	w1, w22, #0xff
  403ea0:	ubfx	w2, w22, #8, #8
  403ea4:	ubfx	w3, w22, #16, #8
  403ea8:	ubfx	x5, x22, #32, #8
  403eac:	ubfx	x6, x22, #40, #8
  403eb0:	ubfx	x7, x22, #48, #8
  403eb4:	and	w9, w19, #0xff
  403eb8:	ubfx	w10, w19, #8, #8
  403ebc:	ubfx	w11, w19, #16, #8
  403ec0:	ubfx	x12, x19, #24, #8
  403ec4:	ubfx	x13, x19, #32, #8
  403ec8:	ubfx	x14, x19, #40, #8
  403ecc:	ubfx	x15, x19, #48, #8
  403ed0:	lsr	x16, x19, #56
  403ed4:	add	x0, x0, #0x34e
  403ed8:	str	w16, [sp, #64]
  403edc:	str	w15, [sp, #56]
  403ee0:	str	w14, [sp, #48]
  403ee4:	str	w13, [sp, #40]
  403ee8:	str	w12, [sp, #32]
  403eec:	str	w11, [sp, #24]
  403ef0:	str	w10, [sp, #16]
  403ef4:	str	w9, [sp, #8]
  403ef8:	str	w8, [sp]
  403efc:	bl	402900 <printf@plt>
  403f00:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403f04:	add	x0, x0, #0xa2d
  403f08:	bl	402920 <puts@plt>
  403f0c:	sub	x2, x29, #0x70
  403f10:	mov	x0, x20
  403f14:	mov	x1, x21
  403f18:	bl	402a00 <boot_entries_load_config@plt>
  403f1c:	tbnz	w0, #31, 403f6c <__fxstat64@plt+0x105c>
  403f20:	ldur	x8, [x29, #-32]
  403f24:	tbnz	x8, #63, 403f74 <__fxstat64@plt+0x1064>
  403f28:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403f2c:	add	x0, x0, #0xa2f
  403f30:	bl	402920 <puts@plt>
  403f34:	ldur	x8, [x29, #-48]
  403f38:	ldur	x9, [x29, #-32]
  403f3c:	mov	w10, #0x70                  	// #112
  403f40:	mov	w1, wzr
  403f44:	madd	x0, x9, x10, x8
  403f48:	bl	405a4c <__fxstat64@plt+0x2b3c>
  403f4c:	cmp	w0, #0x1
  403f50:	b.lt	403f84 <__fxstat64@plt+0x1074>  // b.tstop
  403f54:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  403f58:	add	x0, x0, #0xa4a
  403f5c:	bl	402920 <puts@plt>
  403f60:	b	403f84 <__fxstat64@plt+0x1074>
  403f64:	mov	w20, w23
  403f68:	b	403718 <__fxstat64@plt+0x808>
  403f6c:	mov	w20, w0
  403f70:	b	403f88 <__fxstat64@plt+0x1078>
  403f74:	ldur	x1, [x29, #-40]
  403f78:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  403f7c:	add	x0, x0, #0x79d
  403f80:	bl	402900 <printf@plt>
  403f84:	mov	w20, wzr
  403f88:	sub	x0, x29, #0x70
  403f8c:	bl	402a10 <boot_config_free@plt>
  403f90:	cmp	w20, #0x0
  403f94:	csel	w20, w20, w23, lt  // lt = tstop
  403f98:	b	403718 <__fxstat64@plt+0x808>
  403f9c:	sub	sp, sp, #0xc0
  403fa0:	stp	x29, x30, [sp, #96]
  403fa4:	add	x29, sp, #0x60
  403fa8:	stp	x20, x19, [sp, #176]
  403fac:	mov	x19, x1
  403fb0:	add	x1, sp, #0x1c
  403fb4:	add	x2, x29, #0x18
  403fb8:	add	x3, sp, #0x20
  403fbc:	add	x4, sp, #0x28
  403fc0:	mov	w0, wzr
  403fc4:	str	x27, [sp, #112]
  403fc8:	stp	x26, x25, [sp, #128]
  403fcc:	stp	x24, x23, [sp, #144]
  403fd0:	stp	x22, x21, [sp, #160]
  403fd4:	stp	xzr, xzr, [sp, #40]
  403fd8:	str	xzr, [x29, #24]
  403fdc:	str	xzr, [sp, #32]
  403fe0:	str	wzr, [sp, #28]
  403fe4:	bl	404f98 <__fxstat64@plt+0x2088>
  403fe8:	tbnz	w0, #31, 40426c <__fxstat64@plt+0x135c>
  403fec:	mov	w0, wzr
  403ff0:	mov	x1, xzr
  403ff4:	bl	405084 <__fxstat64@plt+0x2174>
  403ff8:	tbnz	w0, #31, 40426c <__fxstat64@plt+0x135c>
  403ffc:	add	x0, sp, #0x8
  404000:	bl	402a20 <sd_id128_get_machine@plt>
  404004:	tbnz	w0, #31, 404108 <__fxstat64@plt+0x11f8>
  404008:	ldr	x0, [x19]
  40400c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  404010:	add	x1, x1, #0xd91
  404014:	bl	402a30 <strcmp@plt>
  404018:	mov	w19, w0
  40401c:	mov	w0, #0x2                   	// #2
  404020:	bl	402a40 <umask@plt>
  404024:	mov	w20, w0
  404028:	adrp	x27, 420000 <__bss_start@@Base>
  40402c:	cbz	w19, 404148 <__fxstat64@plt+0x1238>
  404030:	ldr	x23, [x27, #8]
  404034:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  404038:	add	x0, x0, #0x9a7
  40403c:	bl	402a50 <opendir@plt>
  404040:	mov	x22, x0
  404044:	bl	402a60 <__errno_location@plt>
  404048:	mov	x24, x0
  40404c:	cbz	x22, 4041bc <__fxstat64@plt+0x12ac>
  404050:	mov	x0, x22
  404054:	str	wzr, [x24]
  404058:	bl	402a70 <readdir64@plt>
  40405c:	mov	w21, wzr
  404060:	cbz	x0, 4040bc <__fxstat64@plt+0x11ac>
  404064:	adrp	x25, 409000 <__fxstat64@plt+0x60f0>
  404068:	add	x25, x25, #0x4bf
  40406c:	add	x26, x0, #0x13
  404070:	mov	x0, x26
  404074:	bl	402a80 <hidden_or_backup_file@plt>
  404078:	tbnz	w0, #0, 4040ac <__fxstat64@plt+0x119c>
  40407c:	mov	x0, x26
  404080:	mov	x1, x25
  404084:	bl	402a90 <endswith_no_case@plt>
  404088:	cbz	x0, 4040ac <__fxstat64@plt+0x119c>
  40408c:	cmp	w19, #0x0
  404090:	cset	w2, eq  // eq = none
  404094:	mov	x0, x23
  404098:	mov	x1, x26
  40409c:	bl	406e74 <__fxstat64@plt+0x3f64>
  4040a0:	cmp	w0, #0x0
  4040a4:	ccmp	w21, #0x0, #0x0, lt  // lt = tstop
  4040a8:	csel	w21, w0, w21, eq  // eq = none
  4040ac:	mov	x0, x22
  4040b0:	str	wzr, [x24]
  4040b4:	bl	402a70 <readdir64@plt>
  4040b8:	cbnz	x0, 40406c <__fxstat64@plt+0x115c>
  4040bc:	ldr	w23, [x24]
  4040c0:	cmp	w23, #0x1
  4040c4:	b.lt	40420c <__fxstat64@plt+0x12fc>  // b.tstop
  4040c8:	mov	w0, wzr
  4040cc:	bl	402850 <log_get_max_level_realm@plt>
  4040d0:	cmp	w0, #0x3
  4040d4:	b.lt	404204 <__fxstat64@plt+0x12f4>  // b.tstop
  4040d8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4040dc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4040e0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4040e4:	add	x2, x2, #0x753
  4040e8:	add	x4, x4, #0x9c1
  4040ec:	add	x5, x5, #0xa01
  4040f0:	mov	w0, #0x3                   	// #3
  4040f4:	mov	w3, #0x288                 	// #648
  4040f8:	mov	w1, w23
  4040fc:	bl	402870 <log_internal_realm@plt>
  404100:	mov	w21, w0
  404104:	b	40420c <__fxstat64@plt+0x12fc>
  404108:	mov	w20, w0
  40410c:	mov	w0, wzr
  404110:	bl	402850 <log_get_max_level_realm@plt>
  404114:	cmp	w0, #0x3
  404118:	b.lt	4041ac <__fxstat64@plt+0x129c>  // b.tstop
  40411c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404120:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  404124:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  404128:	add	x2, x2, #0x753
  40412c:	add	x4, x4, #0x905
  404130:	add	x5, x5, #0x912
  404134:	mov	w0, #0x3                   	// #3
  404138:	mov	w3, #0x5f1                 	// #1521
  40413c:	mov	w1, w20
  404140:	bl	402870 <log_internal_realm@plt>
  404144:	b	40426c <__fxstat64@plt+0x135c>
  404148:	ldr	x22, [x27, #8]
  40414c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  404150:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  404154:	add	x1, x1, #0x983
  404158:	add	x23, x23, #0x690
  40415c:	mov	x0, x22
  404160:	bl	406d88 <__fxstat64@plt+0x3e78>
  404164:	tbnz	w0, #31, 4042ec <__fxstat64@plt+0x13dc>
  404168:	ldr	x1, [x23], #8
  40416c:	cbnz	x1, 40415c <__fxstat64@plt+0x124c>
  404170:	adrp	x8, 420000 <__bss_start@@Base>
  404174:	ldr	x8, [x8, #16]
  404178:	ldr	x9, [x27, #8]
  40417c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  404180:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  404184:	cmp	x8, #0x0
  404188:	add	x1, x1, #0x987
  40418c:	csel	x22, x9, x8, eq  // eq = none
  404190:	add	x23, x23, #0x6b8
  404194:	mov	x0, x22
  404198:	bl	406d88 <__fxstat64@plt+0x3e78>
  40419c:	tbnz	w0, #31, 4042ec <__fxstat64@plt+0x13dc>
  4041a0:	ldr	x1, [x23], #8
  4041a4:	cbnz	x1, 404194 <__fxstat64@plt+0x1284>
  4041a8:	b	404030 <__fxstat64@plt+0x1120>
  4041ac:	mov	w8, wzr
  4041b0:	neg	w9, w20
  4041b4:	sub	w21, w8, w9, uxtb
  4041b8:	b	404270 <__fxstat64@plt+0x1360>
  4041bc:	ldr	w21, [x24]
  4041c0:	mov	w0, wzr
  4041c4:	bl	402850 <log_get_max_level_realm@plt>
  4041c8:	cmp	w0, #0x3
  4041cc:	b.lt	40421c <__fxstat64@plt+0x130c>  // b.tstop
  4041d0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4041d4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4041d8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4041dc:	add	x2, x2, #0x753
  4041e0:	add	x4, x4, #0x9c1
  4041e4:	add	x5, x5, #0x9d2
  4041e8:	mov	w0, #0x3                   	// #3
  4041ec:	mov	w3, #0x286                 	// #646
  4041f0:	mov	w1, w21
  4041f4:	bl	402870 <log_internal_realm@plt>
  4041f8:	mov	w21, w0
  4041fc:	tbz	w21, #31, 404230 <__fxstat64@plt+0x1320>
  404200:	b	4042f0 <__fxstat64@plt+0x13e0>
  404204:	mov	w8, wzr
  404208:	sub	w21, w8, w23, uxtb
  40420c:	mov	x0, x22
  404210:	bl	402aa0 <closedir@plt>
  404214:	tbz	w21, #31, 404230 <__fxstat64@plt+0x1320>
  404218:	b	4042f0 <__fxstat64@plt+0x13e0>
  40421c:	cmp	w21, #0x0
  404220:	mov	w8, wzr
  404224:	cneg	w9, w21, mi  // mi = first
  404228:	sub	w21, w8, w9, uxtb
  40422c:	tbnz	w21, #31, 4042f0 <__fxstat64@plt+0x13e0>
  404230:	cbz	w19, 404294 <__fxstat64@plt+0x1384>
  404234:	and	w0, w20, #0x1ff
  404238:	bl	402a40 <umask@plt>
  40423c:	bl	4068cc <__fxstat64@plt+0x39bc>
  404240:	adrp	x8, 420000 <__bss_start@@Base>
  404244:	ldrb	w8, [x8, #24]
  404248:	tbnz	w8, #0, 404270 <__fxstat64@plt+0x1360>
  40424c:	ldr	x0, [x27, #8]
  404250:	ldr	w1, [sp, #28]
  404254:	ldr	x2, [x29, #24]
  404258:	ldp	x3, x4, [sp, #32]
  40425c:	ldr	x5, [sp, #48]
  404260:	cmp	w19, #0x0
  404264:	cset	w6, eq  // eq = none
  404268:	bl	40699c <__fxstat64@plt+0x3a8c>
  40426c:	mov	w21, w0
  404270:	mov	w0, w21
  404274:	ldp	x20, x19, [sp, #176]
  404278:	ldp	x22, x21, [sp, #160]
  40427c:	ldp	x24, x23, [sp, #144]
  404280:	ldp	x26, x25, [sp, #128]
  404284:	ldr	x27, [sp, #112]
  404288:	ldp	x29, x30, [sp, #96]
  40428c:	add	sp, sp, #0xc0
  404290:	ret
  404294:	ldr	x0, [x27, #8]
  404298:	ldp	x1, x2, [sp, #8]
  40429c:	bl	405e70 <__fxstat64@plt+0x2f60>
  4042a0:	tbnz	w0, #31, 4042ec <__fxstat64@plt+0x13dc>
  4042a4:	adrp	x8, 420000 <__bss_start@@Base>
  4042a8:	ldr	x8, [x8, #16]
  4042ac:	ldr	x9, [x27, #8]
  4042b0:	cmp	x8, #0x0
  4042b4:	csel	x21, x9, x8, eq  // eq = none
  4042b8:	cbz	x21, 4042fc <__fxstat64@plt+0x13ec>
  4042bc:	ldp	x0, x1, [sp, #8]
  4042c0:	sub	x2, x29, #0x24
  4042c4:	bl	402ab0 <sd_id128_to_string@plt>
  4042c8:	mov	x1, x0
  4042cc:	mov	x0, x21
  4042d0:	bl	406d88 <__fxstat64@plt+0x3e78>
  4042d4:	tbnz	w0, #31, 4042ec <__fxstat64@plt+0x13dc>
  4042d8:	ldr	x0, [x27, #8]
  4042dc:	bl	406140 <__fxstat64@plt+0x3230>
  4042e0:	mov	w21, w0
  4042e4:	tbz	w0, #31, 404234 <__fxstat64@plt+0x1324>
  4042e8:	b	4042f0 <__fxstat64@plt+0x13e0>
  4042ec:	mov	w21, w0
  4042f0:	and	w0, w20, #0x1ff
  4042f4:	bl	402a40 <umask@plt>
  4042f8:	b	404270 <__fxstat64@plt+0x1360>
  4042fc:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  404300:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404304:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  404308:	add	x1, x1, #0xd83
  40430c:	add	x2, x2, #0x753
  404310:	add	x4, x4, #0xd88
  404314:	mov	w3, #0x3ff                 	// #1023
  404318:	mov	w0, wzr
  40431c:	bl	4028c0 <log_assert_failed_realm@plt>
  404320:	sub	sp, sp, #0xc0
  404324:	add	x4, sp, #0x18
  404328:	mov	w0, wzr
  40432c:	mov	x1, xzr
  404330:	mov	x2, xzr
  404334:	mov	x3, xzr
  404338:	stp	x29, x30, [sp, #96]
  40433c:	stp	x28, x27, [sp, #112]
  404340:	stp	x26, x25, [sp, #128]
  404344:	stp	x24, x23, [sp, #144]
  404348:	stp	x22, x21, [sp, #160]
  40434c:	stp	x20, x19, [sp, #176]
  404350:	add	x29, sp, #0x60
  404354:	stp	xzr, xzr, [sp, #24]
  404358:	bl	404f98 <__fxstat64@plt+0x2088>
  40435c:	tbnz	w0, #31, 404560 <__fxstat64@plt+0x1650>
  404360:	mov	w0, wzr
  404364:	mov	x1, xzr
  404368:	bl	405084 <__fxstat64@plt+0x2174>
  40436c:	tbnz	w0, #31, 404560 <__fxstat64@plt+0x1650>
  404370:	add	x0, sp, #0x8
  404374:	bl	402a20 <sd_id128_get_machine@plt>
  404378:	tbnz	w0, #31, 404524 <__fxstat64@plt+0x1614>
  40437c:	adrp	x21, 420000 <__bss_start@@Base>
  404380:	ldr	x0, [x21, #8]
  404384:	bl	407964 <__fxstat64@plt+0x4a54>
  404388:	ldr	x8, [x21, #8]
  40438c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  404390:	mov	w19, w0
  404394:	add	x1, x1, #0xcbb
  404398:	mov	x0, x8
  40439c:	bl	407a5c <__fxstat64@plt+0x4b4c>
  4043a0:	ldr	x8, [x21, #8]
  4043a4:	cmp	w0, #0x0
  4043a8:	mov	w20, #0xffffffff            	// #-1
  4043ac:	ccmp	w19, w20, #0x4, lt  // lt = tstop
  4043b0:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4043b4:	csel	w19, w0, w19, gt
  4043b8:	add	x1, x1, #0x17a
  4043bc:	mov	x0, x8
  4043c0:	bl	407a5c <__fxstat64@plt+0x4b4c>
  4043c4:	ldr	x8, [x21, #8]
  4043c8:	cmn	w19, #0x1
  4043cc:	ccmp	w0, #0x0, #0x0, gt
  4043d0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4043d4:	csel	w19, w0, w19, lt  // lt = tstop
  4043d8:	add	x1, x1, #0x688
  4043dc:	mov	x0, x8
  4043e0:	bl	407c5c <__fxstat64@plt+0x4d4c>
  4043e4:	ldr	x8, [x21, #8]
  4043e8:	cmn	w19, #0x1
  4043ec:	ccmp	w0, #0x0, #0x0, gt
  4043f0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4043f4:	csel	w19, w0, w19, lt  // lt = tstop
  4043f8:	add	x1, x1, #0x6b0
  4043fc:	mov	x0, x8
  404400:	bl	407c5c <__fxstat64@plt+0x4d4c>
  404404:	ldr	x8, [x21, #8]
  404408:	ldp	x1, x2, [sp, #8]
  40440c:	cmn	w19, #0x1
  404410:	ccmp	w0, #0x0, #0x0, gt
  404414:	csel	w19, w0, w19, lt  // lt = tstop
  404418:	mov	x0, x8
  40441c:	bl	407cac <__fxstat64@plt+0x4d9c>
  404420:	adrp	x21, 420000 <__bss_start@@Base>
  404424:	mov	w8, w0
  404428:	ldr	x0, [x21, #16]
  40442c:	cmn	w19, #0x1
  404430:	ccmp	w8, #0x0, #0x0, gt
  404434:	csinc	w19, w19, wzr, ge  // ge = tcont
  404438:	cbz	x0, 404470 <__fxstat64@plt+0x1560>
  40443c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  404440:	add	x1, x1, #0x6b0
  404444:	bl	407c5c <__fxstat64@plt+0x4d4c>
  404448:	ldr	x8, [x21, #16]
  40444c:	ldp	x1, x2, [sp, #8]
  404450:	cmp	w0, #0x0
  404454:	ccmp	w19, w20, #0x4, lt  // lt = tstop
  404458:	csel	w19, w0, w19, gt
  40445c:	mov	x0, x8
  404460:	bl	407cac <__fxstat64@plt+0x4d9c>
  404464:	cmp	w0, #0x0
  404468:	ccmp	w19, w20, #0x4, lt  // lt = tstop
  40446c:	csel	w19, w0, w19, gt
  404470:	bl	4068cc <__fxstat64@plt+0x39bc>
  404474:	adrp	x8, 420000 <__bss_start@@Base>
  404478:	ldrb	w8, [x8, #24]
  40447c:	tbnz	w8, #0, 404564 <__fxstat64@plt+0x1654>
  404480:	ldp	x20, x21, [sp, #24]
  404484:	bl	402940 <is_efi_boot@plt>
  404488:	tbz	w0, #0, 404588 <__fxstat64@plt+0x1678>
  40448c:	add	x2, sp, #0x2c
  404490:	mov	x0, x20
  404494:	mov	x1, x21
  404498:	bl	407808 <__fxstat64@plt+0x48f8>
  40449c:	cmp	w0, #0x1
  4044a0:	b.ne	404588 <__fxstat64@plt+0x1678>  // b.any
  4044a4:	ldrh	w21, [sp, #44]
  4044a8:	mov	w0, w21
  4044ac:	bl	402ac0 <efi_remove_boot_option@plt>
  4044b0:	tbnz	w0, #31, 4046d4 <__fxstat64@plt+0x17c4>
  4044b4:	add	x0, sp, #0x30
  4044b8:	str	xzr, [sp, #48]
  4044bc:	bl	4029f0 <efi_get_boot_order@plt>
  4044c0:	mov	w20, w0
  4044c4:	subs	w22, w0, #0x1
  4044c8:	b.lt	4046e0 <__fxstat64@plt+0x17d0>  // b.tstop
  4044cc:	ldr	x0, [sp, #48]
  4044d0:	mov	x8, xzr
  4044d4:	mov	w9, w20
  4044d8:	mov	x1, x0
  4044dc:	cmp	x9, x8
  4044e0:	b.eq	4046dc <__fxstat64@plt+0x17cc>  // b.none
  4044e4:	ldrh	w10, [x1], #2
  4044e8:	add	x8, x8, #0x1
  4044ec:	cmp	w10, w21
  4044f0:	b.ne	4044dc <__fxstat64@plt+0x15cc>  // b.any
  4044f4:	cmp	w20, w8
  4044f8:	b.le	404514 <__fxstat64@plt+0x1604>
  4044fc:	sub	w8, w9, w8
  404500:	add	w8, w8, #0x1
  404504:	sub	x0, x1, #0x2
  404508:	sbfiz	x2, x8, #1, #32
  40450c:	bl	402ad0 <memmove@plt>
  404510:	ldr	x0, [sp, #48]
  404514:	sxtw	x1, w22
  404518:	bl	402ae0 <efi_set_boot_order@plt>
  40451c:	mov	w20, w0
  404520:	b	4046e0 <__fxstat64@plt+0x17d0>
  404524:	mov	w19, w0
  404528:	mov	w0, wzr
  40452c:	bl	402850 <log_get_max_level_realm@plt>
  404530:	cmp	w0, #0x3
  404534:	b.lt	4046c4 <__fxstat64@plt+0x17b4>  // b.tstop
  404538:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40453c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404540:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  404544:	add	x2, x2, #0x753
  404548:	add	x4, x4, #0x3e6
  40454c:	add	x5, x5, #0x912
  404550:	mov	w0, #0x3                   	// #3
  404554:	mov	w3, #0x62f                 	// #1583
  404558:	mov	w1, w19
  40455c:	bl	402870 <log_internal_realm@plt>
  404560:	mov	w19, w0
  404564:	mov	w0, w19
  404568:	ldp	x20, x19, [sp, #176]
  40456c:	ldp	x22, x21, [sp, #160]
  404570:	ldp	x24, x23, [sp, #144]
  404574:	ldp	x26, x25, [sp, #128]
  404578:	ldp	x28, x27, [sp, #112]
  40457c:	ldp	x29, x30, [sp, #96]
  404580:	add	sp, sp, #0xc0
  404584:	ret
  404588:	mov	w20, wzr
  40458c:	adrp	x23, 40a000 <__fxstat64@plt+0x70f0>
  404590:	adrp	x9, 40a000 <__fxstat64@plt+0x70f0>
  404594:	cmp	w20, #0x0
  404598:	add	x23, x23, #0x5b7
  40459c:	add	x9, x9, #0x5cb
  4045a0:	add	x8, sp, #0x30
  4045a4:	stp	x23, x9, [sp, #48]
  4045a8:	cset	w9, lt  // lt = tstop
  4045ac:	cmp	w19, #0x0
  4045b0:	adrp	x10, 40a000 <__fxstat64@plt+0x70f0>
  4045b4:	adrp	x11, 40a000 <__fxstat64@plt+0x70f0>
  4045b8:	adrp	x12, 40a000 <__fxstat64@plt+0x70f0>
  4045bc:	adrp	x21, 408000 <__fxstat64@plt+0x50f0>
  4045c0:	adrp	x22, 40a000 <__fxstat64@plt+0x70f0>
  4045c4:	add	x28, x8, #0x8
  4045c8:	cset	w8, ge  // ge = tcont
  4045cc:	adrp	x25, 40a000 <__fxstat64@plt+0x70f0>
  4045d0:	mov	w27, wzr
  4045d4:	add	x10, x10, #0x5e6
  4045d8:	add	x11, x11, #0x5f9
  4045dc:	add	x12, x12, #0x59
  4045e0:	add	x21, x21, #0x753
  4045e4:	add	x22, x22, #0x60c
  4045e8:	and	w24, w8, w9
  4045ec:	add	x25, x25, #0x645
  4045f0:	stp	x10, x11, [sp, #64]
  4045f4:	stp	x12, xzr, [sp, #80]
  4045f8:	mov	x0, #0x674a                	// #26442
  4045fc:	mov	x1, #0xc7b6                	// #51126
  404600:	movk	x0, #0x82b0, lsl #16
  404604:	movk	x1, #0xb44, lsl #16
  404608:	movk	x0, #0x4c0a, lsl #32
  40460c:	movk	x1, #0xbb29, lsl #32
  404610:	movk	x0, #0xcf41, lsl #48
  404614:	movk	x1, #0x4f8c, lsl #48
  404618:	mov	x2, x23
  40461c:	mov	x3, xzr
  404620:	mov	x4, xzr
  404624:	bl	402af0 <efi_set_variable@plt>
  404628:	cmn	w0, #0x2
  40462c:	b.eq	4046a0 <__fxstat64@plt+0x1790>  // b.none
  404630:	mov	w26, w0
  404634:	mov	w0, wzr
  404638:	bl	402850 <log_get_max_level_realm@plt>
  40463c:	tbnz	w26, #31, 40466c <__fxstat64@plt+0x175c>
  404640:	cmp	w0, #0x6
  404644:	b.lt	4046a0 <__fxstat64@plt+0x1790>  // b.tstop
  404648:	mov	w0, #0x6                   	// #6
  40464c:	mov	w3, #0x3cf                 	// #975
  404650:	mov	w1, wzr
  404654:	mov	x2, x21
  404658:	mov	x4, x22
  40465c:	mov	x5, x25
  404660:	mov	x6, x23
  404664:	bl	402870 <log_internal_realm@plt>
  404668:	b	4046a0 <__fxstat64@plt+0x1790>
  40466c:	cmp	w0, #0x4
  404670:	b.lt	404698 <__fxstat64@plt+0x1788>  // b.tstop
  404674:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404678:	mov	w0, #0x4                   	// #4
  40467c:	mov	w3, #0x3cb                 	// #971
  404680:	mov	w1, w26
  404684:	mov	x2, x21
  404688:	mov	x4, x22
  40468c:	add	x5, x5, #0x624
  404690:	mov	x6, x23
  404694:	bl	402870 <log_internal_realm@plt>
  404698:	cmp	w27, #0x0
  40469c:	csel	w27, w26, w27, ge  // ge = tcont
  4046a0:	ldr	x23, [x28], #8
  4046a4:	cbnz	x23, 4045f8 <__fxstat64@plt+0x16e8>
  4046a8:	cmp	w24, #0x0
  4046ac:	csel	w8, w20, w19, ne  // ne = any
  4046b0:	cmp	w27, #0x0
  4046b4:	mov	w9, #0xffffffff            	// #-1
  4046b8:	ccmp	w8, w9, #0x4, lt  // lt = tstop
  4046bc:	csel	w19, w27, w8, gt
  4046c0:	b	404564 <__fxstat64@plt+0x1654>
  4046c4:	mov	w8, wzr
  4046c8:	neg	w9, w19
  4046cc:	sub	w19, w8, w9, uxtb
  4046d0:	b	404564 <__fxstat64@plt+0x1654>
  4046d4:	mov	w20, w0
  4046d8:	b	40458c <__fxstat64@plt+0x167c>
  4046dc:	mov	w20, wzr
  4046e0:	ldr	x0, [sp, #48]
  4046e4:	bl	4027d0 <free@plt>
  4046e8:	b	40458c <__fxstat64@plt+0x167c>
  4046ec:	stp	x29, x30, [sp, #-32]!
  4046f0:	mov	w0, wzr
  4046f4:	mov	x1, xzr
  4046f8:	mov	x2, xzr
  4046fc:	mov	x3, xzr
  404700:	mov	x4, xzr
  404704:	stp	x20, x19, [sp, #16]
  404708:	mov	x29, sp
  40470c:	bl	404f98 <__fxstat64@plt+0x2088>
  404710:	tbnz	w0, #31, 40476c <__fxstat64@plt+0x185c>
  404714:	adrp	x8, 420000 <__bss_start@@Base>
  404718:	ldr	x0, [x8, #8]
  40471c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  404720:	add	x1, x1, #0xa80
  404724:	mov	x2, #0xffffffffffffffff    	// #-1
  404728:	bl	4029d0 <path_join_internal@plt>
  40472c:	mov	x19, x0
  404730:	cbz	x0, 404778 <__fxstat64@plt+0x1868>
  404734:	mov	w0, #0xffffff9c            	// #-100
  404738:	mov	x1, x19
  40473c:	bl	402b00 <dir_is_empty_at@plt>
  404740:	cmp	w0, #0x0
  404744:	b.gt	404798 <__fxstat64@plt+0x1888>
  404748:	mov	w20, w0
  40474c:	cmn	w0, #0x2
  404750:	b.eq	404798 <__fxstat64@plt+0x1888>  // b.none
  404754:	tbnz	w20, #31, 4047c0 <__fxstat64@plt+0x18b0>
  404758:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  40475c:	add	x0, x0, #0x335
  404760:	bl	402920 <puts@plt>
  404764:	mov	w20, wzr
  404768:	b	4047a8 <__fxstat64@plt+0x1898>
  40476c:	mov	w20, w0
  404770:	mov	x19, xzr
  404774:	b	4047a8 <__fxstat64@plt+0x1898>
  404778:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  40477c:	adrp	x3, 40a000 <__fxstat64@plt+0x70f0>
  404780:	add	x1, x1, #0x753
  404784:	add	x3, x3, #0x65e
  404788:	mov	w2, #0x67a                 	// #1658
  40478c:	bl	402860 <log_oom_internal@plt>
  404790:	mov	w20, w0
  404794:	b	4047a8 <__fxstat64@plt+0x1898>
  404798:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  40479c:	add	x0, x0, #0x339
  4047a0:	bl	402920 <puts@plt>
  4047a4:	mov	w20, #0x1                   	// #1
  4047a8:	mov	x0, x19
  4047ac:	bl	4027d0 <free@plt>
  4047b0:	mov	w0, w20
  4047b4:	ldp	x20, x19, [sp, #16]
  4047b8:	ldp	x29, x30, [sp], #32
  4047bc:	ret
  4047c0:	mov	w0, wzr
  4047c4:	bl	402850 <log_get_max_level_realm@plt>
  4047c8:	cmp	w0, #0x3
  4047cc:	b.lt	4047fc <__fxstat64@plt+0x18ec>  // b.tstop
  4047d0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4047d4:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  4047d8:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4047dc:	add	x2, x2, #0x753
  4047e0:	add	x4, x4, #0x65e
  4047e4:	add	x5, x5, #0x670
  4047e8:	mov	w0, #0x3                   	// #3
  4047ec:	mov	w3, #0x682                 	// #1666
  4047f0:	mov	w1, w20
  4047f4:	bl	402870 <log_internal_realm@plt>
  4047f8:	b	404790 <__fxstat64@plt+0x1880>
  4047fc:	mov	w8, wzr
  404800:	neg	w9, w20
  404804:	sub	w20, w8, w9, uxtb
  404808:	b	4047a8 <__fxstat64@plt+0x1898>
  40480c:	sub	sp, sp, #0x90
  404810:	movi	v0.2d, #0x0
  404814:	stp	x29, x30, [sp, #96]
  404818:	str	x21, [sp, #112]
  40481c:	stp	x20, x19, [sp, #128]
  404820:	add	x29, sp, #0x60
  404824:	str	xzr, [sp, #80]
  404828:	stp	q0, q0, [sp, #48]
  40482c:	stp	q0, q0, [sp, #16]
  404830:	str	q0, [sp]
  404834:	bl	402910 <geteuid@plt>
  404838:	cmp	w0, #0x0
  40483c:	cset	w0, ne  // ne = any
  404840:	mov	x1, xzr
  404844:	mov	x2, xzr
  404848:	mov	x3, xzr
  40484c:	mov	x4, xzr
  404850:	bl	404f98 <__fxstat64@plt+0x2088>
  404854:	cmn	w0, #0xd
  404858:	b.ne	404894 <__fxstat64@plt+0x1984>  // b.any
  40485c:	mov	w0, wzr
  404860:	bl	402850 <log_get_max_level_realm@plt>
  404864:	cmp	w0, #0x3
  404868:	b.lt	4048f8 <__fxstat64@plt+0x19e8>  // b.tstop
  40486c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404870:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404874:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404878:	add	x2, x2, #0x753
  40487c:	add	x4, x4, #0x6a7
  404880:	add	x5, x5, #0x6b1
  404884:	mov	w0, #0x3                   	// #3
  404888:	mov	w1, #0xfffffff3            	// #-13
  40488c:	mov	w3, #0x525                 	// #1317
  404890:	b	4048ec <__fxstat64@plt+0x19dc>
  404894:	mov	w19, w0
  404898:	tbnz	w0, #31, 4048fc <__fxstat64@plt+0x19ec>
  40489c:	bl	402910 <geteuid@plt>
  4048a0:	cmp	w0, #0x0
  4048a4:	cset	w0, ne  // ne = any
  4048a8:	mov	x1, xzr
  4048ac:	bl	405084 <__fxstat64@plt+0x2174>
  4048b0:	cmn	w0, #0xd
  4048b4:	b.ne	40491c <__fxstat64@plt+0x1a0c>  // b.any
  4048b8:	mov	w0, wzr
  4048bc:	bl	402850 <log_get_max_level_realm@plt>
  4048c0:	cmp	w0, #0x3
  4048c4:	b.lt	4048f8 <__fxstat64@plt+0x19e8>  // b.tstop
  4048c8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4048cc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  4048d0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4048d4:	add	x2, x2, #0x753
  4048d8:	add	x4, x4, #0x6a7
  4048dc:	add	x5, x5, #0x6cd
  4048e0:	mov	w0, #0x3                   	// #3
  4048e4:	mov	w1, #0xfffffff3            	// #-13
  4048e8:	mov	w3, #0x52b                 	// #1323
  4048ec:	bl	402870 <log_internal_realm@plt>
  4048f0:	mov	w19, w0
  4048f4:	b	4048fc <__fxstat64@plt+0x19ec>
  4048f8:	mov	w19, #0xfffffff3            	// #-13
  4048fc:	mov	x0, sp
  404900:	bl	402a10 <boot_config_free@plt>
  404904:	mov	w0, w19
  404908:	ldp	x20, x19, [sp, #128]
  40490c:	ldr	x21, [sp, #112]
  404910:	ldp	x29, x30, [sp, #96]
  404914:	add	sp, sp, #0x90
  404918:	ret
  40491c:	mov	w19, w0
  404920:	tbnz	w0, #31, 4048fc <__fxstat64@plt+0x19ec>
  404924:	adrp	x8, 420000 <__bss_start@@Base>
  404928:	adrp	x9, 420000 <__bss_start@@Base>
  40492c:	ldr	x0, [x8, #8]
  404930:	ldr	x1, [x9, #16]
  404934:	mov	x2, sp
  404938:	bl	402a00 <boot_entries_load_config@plt>
  40493c:	tbnz	w0, #31, 4048f0 <__fxstat64@plt+0x19e0>
  404940:	mov	x0, sp
  404944:	mov	w1, wzr
  404948:	bl	402b10 <boot_entries_augment_from_loader@plt>
  40494c:	ldr	x8, [sp, #72]
  404950:	cbz	x8, 4049c8 <__fxstat64@plt+0x1ab8>
  404954:	adrp	x8, 420000 <__bss_start@@Base>
  404958:	ldr	w0, [x8, #28]
  40495c:	bl	402930 <pager_open@plt>
  404960:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  404964:	add	x0, x0, #0x9d3
  404968:	bl	402920 <puts@plt>
  40496c:	ldr	x8, [sp, #72]
  404970:	cbz	x8, 404a04 <__fxstat64@plt+0x1af4>
  404974:	mov	x20, xzr
  404978:	mov	x21, xzr
  40497c:	ldr	x9, [sp, #80]
  404980:	ldr	x8, [sp, #64]
  404984:	cmp	x21, x9
  404988:	add	x0, x8, x20
  40498c:	cset	w1, eq  // eq = none
  404990:	bl	405a4c <__fxstat64@plt+0x2b3c>
  404994:	tbnz	w0, #31, 4048f0 <__fxstat64@plt+0x19e0>
  404998:	ldr	x8, [sp, #72]
  40499c:	add	x21, x21, #0x1
  4049a0:	cmp	x21, x8
  4049a4:	b.cs	4049b4 <__fxstat64@plt+0x1aa4>  // b.hs, b.nlast
  4049a8:	mov	w0, #0xa                   	// #10
  4049ac:	bl	4029a0 <putchar@plt>
  4049b0:	ldr	x8, [sp, #72]
  4049b4:	mov	w19, wzr
  4049b8:	cmp	x21, x8
  4049bc:	add	x20, x20, #0x70
  4049c0:	b.cc	40497c <__fxstat64@plt+0x1a6c>  // b.lo, b.ul, b.last
  4049c4:	b	4048fc <__fxstat64@plt+0x19ec>
  4049c8:	mov	w0, wzr
  4049cc:	bl	402850 <log_get_max_level_realm@plt>
  4049d0:	cmp	w0, #0x6
  4049d4:	mov	w19, wzr
  4049d8:	b.lt	4048fc <__fxstat64@plt+0x19ec>  // b.tstop
  4049dc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4049e0:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  4049e4:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4049e8:	add	x2, x2, #0x753
  4049ec:	add	x4, x4, #0x6a7
  4049f0:	add	x5, x5, #0x6f8
  4049f4:	mov	w0, #0x6                   	// #6
  4049f8:	mov	w3, #0x536                 	// #1334
  4049fc:	mov	w1, wzr
  404a00:	bl	402870 <log_internal_realm@plt>
  404a04:	mov	w19, wzr
  404a08:	b	4048fc <__fxstat64@plt+0x19ec>
  404a0c:	stp	x29, x30, [sp, #-32]!
  404a10:	stp	x20, x19, [sp, #16]
  404a14:	mov	x29, sp
  404a18:	mov	x19, x1
  404a1c:	bl	402940 <is_efi_boot@plt>
  404a20:	tbz	w0, #0, 404a84 <__fxstat64@plt+0x1b74>
  404a24:	adrp	x0, 40a000 <__fxstat64@plt+0x70f0>
  404a28:	add	x0, x0, #0x73d
  404a2c:	mov	w1, wzr
  404a30:	bl	4029c0 <access@plt>
  404a34:	tbnz	w0, #31, 404ac8 <__fxstat64@plt+0x1bb8>
  404a38:	bl	402800 <detect_container@plt>
  404a3c:	cmp	w0, #0x1
  404a40:	b.lt	404b24 <__fxstat64@plt+0x1c14>  // b.tstop
  404a44:	mov	w0, wzr
  404a48:	bl	402850 <log_get_max_level_realm@plt>
  404a4c:	cmp	w0, #0x3
  404a50:	b.lt	404b10 <__fxstat64@plt+0x1c00>  // b.tstop
  404a54:	ldr	x6, [x19]
  404a58:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404a5c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404a60:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404a64:	mov	w1, #0x5f                  	// #95
  404a68:	add	x2, x2, #0x753
  404a6c:	add	x4, x4, #0x716
  404a70:	add	x5, x5, #0x7f1
  404a74:	mov	w0, #0x3                   	// #3
  404a78:	movk	w1, #0x4000, lsl #16
  404a7c:	mov	w3, #0x69c                 	// #1692
  404a80:	b	404ba8 <__fxstat64@plt+0x1c98>
  404a84:	mov	w0, wzr
  404a88:	bl	402850 <log_get_max_level_realm@plt>
  404a8c:	cmp	w0, #0x3
  404a90:	b.lt	404b10 <__fxstat64@plt+0x1c00>  // b.tstop
  404a94:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404a98:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404a9c:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404aa0:	mov	w1, #0x5f                  	// #95
  404aa4:	add	x2, x2, #0x753
  404aa8:	add	x4, x4, #0x716
  404aac:	add	x5, x5, #0x727
  404ab0:	mov	w0, #0x3                   	// #3
  404ab4:	movk	w1, #0x4000, lsl #16
  404ab8:	mov	w3, #0x68e                 	// #1678
  404abc:	ldp	x20, x19, [sp, #16]
  404ac0:	ldp	x29, x30, [sp], #32
  404ac4:	b	402870 <log_internal_realm@plt>
  404ac8:	bl	402a60 <__errno_location@plt>
  404acc:	ldr	w20, [x0]
  404ad0:	mov	w0, wzr
  404ad4:	bl	402850 <log_get_max_level_realm@plt>
  404ad8:	cmp	w20, #0x2
  404adc:	b.ne	404b78 <__fxstat64@plt+0x1c68>  // b.any
  404ae0:	cmp	w0, #0x3
  404ae4:	b.lt	404b10 <__fxstat64@plt+0x1c00>  // b.tstop
  404ae8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404aec:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404af0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404af4:	add	x2, x2, #0x753
  404af8:	add	x4, x4, #0x716
  404afc:	add	x5, x5, #0x787
  404b00:	mov	w0, #0x3                   	// #3
  404b04:	mov	w1, #0x2                   	// #2
  404b08:	mov	w3, #0x692                 	// #1682
  404b0c:	bl	402870 <log_internal_realm@plt>
  404b10:	mov	w20, #0xffffffa1            	// #-95
  404b14:	mov	w0, w20
  404b18:	ldp	x20, x19, [sp, #16]
  404b1c:	ldp	x29, x30, [sp], #32
  404b20:	ret
  404b24:	adrp	x8, 420000 <__bss_start@@Base>
  404b28:	ldrb	w8, [x8, #24]
  404b2c:	cmp	w8, #0x1
  404b30:	b.ne	404bb4 <__fxstat64@plt+0x1ca4>  // b.any
  404b34:	mov	w0, wzr
  404b38:	bl	402850 <log_get_max_level_realm@plt>
  404b3c:	cmp	w0, #0x3
  404b40:	b.lt	404ce8 <__fxstat64@plt+0x1dd8>  // b.tstop
  404b44:	ldr	x6, [x19]
  404b48:	mov	w8, #0x5f                  	// #95
  404b4c:	movk	w8, #0x4000, lsl #16
  404b50:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404b54:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404b58:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404b5c:	add	x2, x2, #0x753
  404b60:	add	x4, x4, #0x716
  404b64:	sub	w1, w8, #0x49
  404b68:	add	x5, x5, #0x81e
  404b6c:	mov	w0, #0x3                   	// #3
  404b70:	mov	w3, #0x6a1                 	// #1697
  404b74:	b	404ba8 <__fxstat64@plt+0x1c98>
  404b78:	cmp	w0, #0x3
  404b7c:	b.lt	404c58 <__fxstat64@plt+0x1d48>  // b.tstop
  404b80:	ldr	x6, [x19]
  404b84:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404b88:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404b8c:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404b90:	add	x2, x2, #0x753
  404b94:	add	x4, x4, #0x716
  404b98:	add	x5, x5, #0x7b0
  404b9c:	mov	w0, #0x3                   	// #3
  404ba0:	mov	w3, #0x696                 	// #1686
  404ba4:	mov	w1, w20
  404ba8:	ldp	x20, x19, [sp, #16]
  404bac:	ldp	x29, x30, [sp], #32
  404bb0:	b	402870 <log_internal_realm@plt>
  404bb4:	ldr	x0, [x19]
  404bb8:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  404bbc:	add	x1, x1, #0xdb9
  404bc0:	bl	402a30 <strcmp@plt>
  404bc4:	ldr	x19, [x19, #8]
  404bc8:	adrp	x8, 40a000 <__fxstat64@plt+0x70f0>
  404bcc:	adrp	x9, 40a000 <__fxstat64@plt+0x70f0>
  404bd0:	add	x8, x8, #0x5f9
  404bd4:	add	x9, x9, #0x5e6
  404bd8:	cmp	w0, #0x0
  404bdc:	csel	x20, x9, x8, eq  // eq = none
  404be0:	cbz	x19, 404c6c <__fxstat64@plt+0x1d5c>
  404be4:	ldrb	w8, [x19]
  404be8:	cbz	w8, 404c6c <__fxstat64@plt+0x1d5c>
  404bec:	mov	x0, x19
  404bf0:	bl	402b20 <strlen@plt>
  404bf4:	mov	x1, x0
  404bf8:	mov	x0, x19
  404bfc:	bl	402b30 <utf8_to_utf16@plt>
  404c00:	mov	x19, x0
  404c04:	cbz	x0, 404cfc <__fxstat64@plt+0x1dec>
  404c08:	mov	x0, x19
  404c0c:	bl	402b40 <char16_strlen@plt>
  404c10:	lsl	x8, x0, #1
  404c14:	mov	x0, #0x674a                	// #26442
  404c18:	mov	x1, #0xc7b6                	// #51126
  404c1c:	movk	x0, #0x82b0, lsl #16
  404c20:	movk	x1, #0xb44, lsl #16
  404c24:	movk	x0, #0x4c0a, lsl #32
  404c28:	movk	x1, #0xbb29, lsl #32
  404c2c:	add	x4, x8, #0x2
  404c30:	movk	x0, #0xcf41, lsl #48
  404c34:	movk	x1, #0x4f8c, lsl #48
  404c38:	mov	x2, x20
  404c3c:	mov	x3, x19
  404c40:	bl	402af0 <efi_set_variable@plt>
  404c44:	tbnz	w0, #31, 404d18 <__fxstat64@plt+0x1e08>
  404c48:	mov	x0, x19
  404c4c:	bl	4027d0 <free@plt>
  404c50:	mov	w20, wzr
  404c54:	b	404b14 <__fxstat64@plt+0x1c04>
  404c58:	cmp	w20, #0x0
  404c5c:	mov	w8, wzr
  404c60:	cneg	w9, w20, mi  // mi = first
  404c64:	sub	w20, w8, w9, uxtb
  404c68:	b	404b14 <__fxstat64@plt+0x1c04>
  404c6c:	mov	x0, #0x674a                	// #26442
  404c70:	mov	x1, #0xc7b6                	// #51126
  404c74:	movk	x0, #0x82b0, lsl #16
  404c78:	movk	x1, #0xb44, lsl #16
  404c7c:	movk	x0, #0x4c0a, lsl #32
  404c80:	movk	x1, #0xbb29, lsl #32
  404c84:	movk	x0, #0xcf41, lsl #48
  404c88:	movk	x1, #0x4f8c, lsl #48
  404c8c:	mov	x2, x20
  404c90:	mov	x3, xzr
  404c94:	mov	x4, xzr
  404c98:	bl	402af0 <efi_set_variable@plt>
  404c9c:	mov	w20, wzr
  404ca0:	tbz	w0, #31, 404b14 <__fxstat64@plt+0x1c04>
  404ca4:	mov	w19, w0
  404ca8:	cmn	w0, #0x2
  404cac:	b.eq	404b14 <__fxstat64@plt+0x1c04>  // b.none
  404cb0:	mov	w0, wzr
  404cb4:	bl	402850 <log_get_max_level_realm@plt>
  404cb8:	cmp	w0, #0x3
  404cbc:	b.lt	404cf0 <__fxstat64@plt+0x1de0>  // b.tstop
  404cc0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404cc4:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404cc8:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404ccc:	add	x2, x2, #0x753
  404cd0:	add	x4, x4, #0x716
  404cd4:	add	x5, x5, #0x85b
  404cd8:	mov	w0, #0x3                   	// #3
  404cdc:	mov	w3, #0x6a8                 	// #1704
  404ce0:	mov	w1, w19
  404ce4:	b	404abc <__fxstat64@plt+0x1bac>
  404ce8:	mov	w20, #0xffffffea            	// #-22
  404cec:	b	404b14 <__fxstat64@plt+0x1c04>
  404cf0:	mov	w8, wzr
  404cf4:	neg	w9, w19
  404cf8:	b	404c64 <__fxstat64@plt+0x1d54>
  404cfc:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  404d00:	adrp	x3, 40a000 <__fxstat64@plt+0x70f0>
  404d04:	add	x1, x1, #0x753
  404d08:	add	x3, x3, #0x716
  404d0c:	mov	w2, #0x6ae                 	// #1710
  404d10:	bl	402860 <log_oom_internal@plt>
  404d14:	b	404d54 <__fxstat64@plt+0x1e44>
  404d18:	mov	w20, w0
  404d1c:	mov	w0, wzr
  404d20:	bl	402850 <log_get_max_level_realm@plt>
  404d24:	cmp	w0, #0x3
  404d28:	b.lt	404d5c <__fxstat64@plt+0x1e4c>  // b.tstop
  404d2c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404d30:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404d34:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404d38:	add	x2, x2, #0x753
  404d3c:	add	x4, x4, #0x716
  404d40:	add	x5, x5, #0x87c
  404d44:	mov	w0, #0x3                   	// #3
  404d48:	mov	w3, #0x6b2                 	// #1714
  404d4c:	mov	w1, w20
  404d50:	bl	402870 <log_internal_realm@plt>
  404d54:	mov	w20, w0
  404d58:	b	404d68 <__fxstat64@plt+0x1e58>
  404d5c:	mov	w8, wzr
  404d60:	neg	w9, w20
  404d64:	sub	w20, w8, w9, uxtb
  404d68:	mov	x0, x19
  404d6c:	bl	4027d0 <free@plt>
  404d70:	b	404b14 <__fxstat64@plt+0x1c04>
  404d74:	stp	x29, x30, [sp, #-32]!
  404d78:	adrp	x2, 420000 <__bss_start@@Base>
  404d7c:	add	x2, x2, #0x8
  404d80:	ldr	x0, [x2]
  404d84:	mov	w1, wzr
  404d88:	mov	x3, xzr
  404d8c:	mov	x4, xzr
  404d90:	mov	x5, xzr
  404d94:	mov	x6, xzr
  404d98:	str	x19, [sp, #16]
  404d9c:	mov	x29, sp
  404da0:	bl	402b50 <find_esp_and_warn@plt>
  404da4:	cmn	w0, #0x7e
  404da8:	b.ne	404df4 <__fxstat64@plt+0x1ee4>  // b.any
  404dac:	adrp	x8, 420000 <__bss_start@@Base>
  404db0:	ldrb	w19, [x8, #32]
  404db4:	mov	w0, wzr
  404db8:	bl	402850 <log_get_max_level_realm@plt>
  404dbc:	tbz	w19, #0, 404e14 <__fxstat64@plt+0x1f04>
  404dc0:	cmp	w0, #0x5
  404dc4:	b.lt	404e0c <__fxstat64@plt+0x1efc>  // b.tstop
  404dc8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404dcc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404dd0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404dd4:	add	x2, x2, #0x753
  404dd8:	add	x4, x4, #0x89e
  404ddc:	add	x5, x5, #0x8c3
  404de0:	mov	w0, #0x5                   	// #5
  404de4:	mov	w3, #0x6c1                 	// #1729
  404de8:	mov	w1, wzr
  404dec:	bl	402870 <log_internal_realm@plt>
  404df0:	b	404e0c <__fxstat64@plt+0x1efc>
  404df4:	tbnz	w0, #31, 404e50 <__fxstat64@plt+0x1f40>
  404df8:	adrp	x8, 420000 <__bss_start@@Base>
  404dfc:	ldr	x0, [x8, #8]
  404e00:	bl	406140 <__fxstat64@plt+0x3230>
  404e04:	tbnz	w0, #31, 404e50 <__fxstat64@plt+0x1f40>
  404e08:	bl	4068cc <__fxstat64@plt+0x39bc>
  404e0c:	mov	w0, wzr
  404e10:	b	404e50 <__fxstat64@plt+0x1f40>
  404e14:	cmp	w0, #0x3
  404e18:	b.lt	404e4c <__fxstat64@plt+0x1f3c>  // b.tstop
  404e1c:	ldr	x19, [sp, #16]
  404e20:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404e24:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404e28:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404e2c:	add	x2, x2, #0x753
  404e30:	add	x4, x4, #0x89e
  404e34:	add	x5, x5, #0x8af
  404e38:	mov	w0, #0x3                   	// #3
  404e3c:	mov	w1, #0xffffff82            	// #-126
  404e40:	mov	w3, #0x6bf                 	// #1727
  404e44:	ldp	x29, x30, [sp], #32
  404e48:	b	402870 <log_internal_realm@plt>
  404e4c:	mov	w0, #0xffffff82            	// #-126
  404e50:	ldr	x19, [sp, #16]
  404e54:	ldp	x29, x30, [sp], #32
  404e58:	ret
  404e5c:	sub	sp, sp, #0x30
  404e60:	cmp	w0, #0x1
  404e64:	stp	x29, x30, [sp, #16]
  404e68:	stp	x20, x19, [sp, #32]
  404e6c:	add	x29, sp, #0x10
  404e70:	b.ne	404e94 <__fxstat64@plt+0x1f84>  // b.any
  404e74:	add	x0, sp, #0x8
  404e78:	str	xzr, [sp, #8]
  404e7c:	bl	402b60 <systemd_efi_options_variable@plt>
  404e80:	tbnz	w0, #31, 404f10 <__fxstat64@plt+0x2000>
  404e84:	ldr	x0, [sp, #8]
  404e88:	bl	402920 <puts@plt>
  404e8c:	mov	w20, #0x1                   	// #1
  404e90:	b	404f74 <__fxstat64@plt+0x2064>
  404e94:	ldr	x3, [x1, #8]
  404e98:	mov	x0, #0xf28c                	// #62092
  404e9c:	mov	x1, #0x8793                	// #34707
  404ea0:	movk	x0, #0x4b64, lsl #16
  404ea4:	movk	x1, #0x876d, lsl #16
  404ea8:	adrp	x2, 40a000 <__fxstat64@plt+0x70f0>
  404eac:	movk	x0, #0xb4b, lsl #32
  404eb0:	movk	x1, #0x5060, lsl #32
  404eb4:	add	x2, x2, #0x938
  404eb8:	movk	x0, #0x8f42, lsl #48
  404ebc:	movk	x1, #0x67dc, lsl #48
  404ec0:	bl	402b70 <efi_set_variable_string@plt>
  404ec4:	tbz	w0, #31, 404f80 <__fxstat64@plt+0x2070>
  404ec8:	mov	w19, w0
  404ecc:	mov	w0, wzr
  404ed0:	bl	402850 <log_get_max_level_realm@plt>
  404ed4:	cmp	w0, #0x3
  404ed8:	b.lt	404f58 <__fxstat64@plt+0x2048>  // b.tstop
  404edc:	mov	w1, w19
  404ee0:	ldp	x20, x19, [sp, #32]
  404ee4:	ldp	x29, x30, [sp, #16]
  404ee8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404eec:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404ef0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404ef4:	add	x2, x2, #0x753
  404ef8:	add	x4, x4, #0x8ef
  404efc:	add	x5, x5, #0x947
  404f00:	mov	w0, #0x3                   	// #3
  404f04:	mov	w3, #0x6de                 	// #1758
  404f08:	add	sp, sp, #0x30
  404f0c:	b	402870 <log_internal_realm@plt>
  404f10:	mov	w19, w0
  404f14:	mov	w0, wzr
  404f18:	bl	402850 <log_get_max_level_realm@plt>
  404f1c:	cmp	w0, #0x3
  404f20:	b.lt	404f68 <__fxstat64@plt+0x2058>  // b.tstop
  404f24:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404f28:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  404f2c:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  404f30:	add	x2, x2, #0x753
  404f34:	add	x4, x4, #0x8ef
  404f38:	add	x5, x5, #0x908
  404f3c:	mov	w0, #0x3                   	// #3
  404f40:	mov	w3, #0x6d7                 	// #1751
  404f44:	mov	w1, w19
  404f48:	bl	402870 <log_internal_realm@plt>
  404f4c:	mov	w19, w0
  404f50:	mov	w20, wzr
  404f54:	b	404f74 <__fxstat64@plt+0x2064>
  404f58:	mov	w8, wzr
  404f5c:	neg	w9, w19
  404f60:	sub	w19, w8, w9, uxtb
  404f64:	b	404f84 <__fxstat64@plt+0x2074>
  404f68:	mov	w20, wzr
  404f6c:	neg	w8, w19
  404f70:	sub	w19, w20, w8, uxtb
  404f74:	ldr	x0, [sp, #8]
  404f78:	bl	4027d0 <free@plt>
  404f7c:	tbz	w20, #0, 404f84 <__fxstat64@plt+0x2074>
  404f80:	mov	w19, wzr
  404f84:	mov	w0, w19
  404f88:	ldp	x20, x19, [sp, #32]
  404f8c:	ldp	x29, x30, [sp, #16]
  404f90:	add	sp, sp, #0x30
  404f94:	ret
  404f98:	sub	sp, sp, #0x30
  404f9c:	stp	x20, x19, [sp, #32]
  404fa0:	adrp	x20, 420000 <__bss_start@@Base>
  404fa4:	ldr	x8, [x20, #8]
  404fa8:	mov	x6, x4
  404fac:	mov	x5, x3
  404fb0:	mov	x4, x2
  404fb4:	mov	x3, x1
  404fb8:	and	w1, w0, #0x1
  404fbc:	add	x2, sp, #0x8
  404fc0:	mov	x0, x8
  404fc4:	stp	x29, x30, [sp, #16]
  404fc8:	add	x29, sp, #0x10
  404fcc:	bl	402b50 <find_esp_and_warn@plt>
  404fd0:	cmn	w0, #0x7e
  404fd4:	b.ne	405014 <__fxstat64@plt+0x2104>  // b.any
  404fd8:	mov	w0, wzr
  404fdc:	bl	402850 <log_get_max_level_realm@plt>
  404fe0:	cmp	w0, #0x3
  404fe4:	b.lt	405070 <__fxstat64@plt+0x2160>  // b.tstop
  404fe8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  404fec:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  404ff0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  404ff4:	add	x2, x2, #0x753
  404ff8:	add	x4, x4, #0x1a1
  404ffc:	add	x5, x5, #0x1ad
  405000:	mov	w0, #0x3                   	// #3
  405004:	mov	w1, #0xffffff82            	// #-126
  405008:	mov	w3, #0x54                  	// #84
  40500c:	bl	402870 <log_internal_realm@plt>
  405010:	b	405074 <__fxstat64@plt+0x2164>
  405014:	tbnz	w0, #31, 405074 <__fxstat64@plt+0x2164>
  405018:	ldr	x0, [x20, #8]
  40501c:	bl	4027d0 <free@plt>
  405020:	ldr	x19, [sp, #8]
  405024:	mov	w0, wzr
  405028:	str	xzr, [sp, #8]
  40502c:	str	x19, [x20, #8]
  405030:	bl	402850 <log_get_max_level_realm@plt>
  405034:	cmp	w0, #0x7
  405038:	b.lt	405068 <__fxstat64@plt+0x2158>  // b.tstop
  40503c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405040:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405044:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  405048:	add	x2, x2, #0x753
  40504c:	add	x4, x4, #0x1a1
  405050:	add	x5, x5, #0x240
  405054:	mov	w0, #0x7                   	// #7
  405058:	mov	w3, #0x59                  	// #89
  40505c:	mov	w1, wzr
  405060:	mov	x6, x19
  405064:	bl	402870 <log_internal_realm@plt>
  405068:	mov	w0, #0x1                   	// #1
  40506c:	b	405074 <__fxstat64@plt+0x2164>
  405070:	mov	w0, #0xffffff82            	// #-126
  405074:	ldp	x20, x19, [sp, #32]
  405078:	ldp	x29, x30, [sp, #16]
  40507c:	add	sp, sp, #0x30
  405080:	ret
  405084:	sub	sp, sp, #0x30
  405088:	stp	x20, x19, [sp, #32]
  40508c:	adrp	x20, 420000 <__bss_start@@Base>
  405090:	ldr	x8, [x20, #16]
  405094:	mov	x19, x1
  405098:	and	w1, w0, #0x1
  40509c:	add	x2, sp, #0x8
  4050a0:	mov	x0, x8
  4050a4:	mov	x3, x19
  4050a8:	stp	x29, x30, [sp, #16]
  4050ac:	add	x29, sp, #0x10
  4050b0:	bl	402b80 <find_xbootldr_and_warn@plt>
  4050b4:	cmn	w0, #0x7e
  4050b8:	b.ne	405110 <__fxstat64@plt+0x2200>  // b.any
  4050bc:	mov	w0, wzr
  4050c0:	bl	402850 <log_get_max_level_realm@plt>
  4050c4:	cmp	w0, #0x7
  4050c8:	b.lt	4050f4 <__fxstat64@plt+0x21e4>  // b.tstop
  4050cc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4050d0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4050d4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4050d8:	add	x2, x2, #0x753
  4050dc:	add	x4, x4, #0x262
  4050e0:	add	x5, x5, #0x273
  4050e4:	mov	w0, #0x7                   	// #7
  4050e8:	mov	w1, #0xffffff82            	// #-126
  4050ec:	mov	w3, #0x64                  	// #100
  4050f0:	bl	402870 <log_internal_realm@plt>
  4050f4:	cbz	x19, 4050fc <__fxstat64@plt+0x21ec>
  4050f8:	stp	xzr, xzr, [x19]
  4050fc:	ldr	x0, [x20, #16]
  405100:	bl	4027d0 <free@plt>
  405104:	mov	w0, wzr
  405108:	str	xzr, [x20, #16]
  40510c:	b	405168 <__fxstat64@plt+0x2258>
  405110:	tbnz	w0, #31, 405168 <__fxstat64@plt+0x2258>
  405114:	ldr	x0, [x20, #16]
  405118:	bl	4027d0 <free@plt>
  40511c:	ldr	x19, [sp, #8]
  405120:	mov	w0, wzr
  405124:	str	xzr, [sp, #8]
  405128:	str	x19, [x20, #16]
  40512c:	bl	402850 <log_get_max_level_realm@plt>
  405130:	cmp	w0, #0x7
  405134:	b.lt	405164 <__fxstat64@plt+0x2254>  // b.tstop
  405138:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40513c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405140:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  405144:	add	x2, x2, #0x753
  405148:	add	x4, x4, #0x262
  40514c:	add	x5, x5, #0x2ae
  405150:	mov	w0, #0x7                   	// #7
  405154:	mov	w3, #0x6e                  	// #110
  405158:	mov	w1, wzr
  40515c:	mov	x6, x19
  405160:	bl	402870 <log_internal_realm@plt>
  405164:	mov	w0, #0x1                   	// #1
  405168:	ldp	x20, x19, [sp, #32]
  40516c:	ldp	x29, x30, [sp, #16]
  405170:	add	sp, sp, #0x30
  405174:	ret
  405178:	stp	x29, x30, [sp, #-32]!
  40517c:	stp	x20, x19, [sp, #16]
  405180:	mov	x3, x1
  405184:	mov	x19, x0
  405188:	mov	x0, #0x674a                	// #26442
  40518c:	mov	x1, #0xc7b6                	// #51126
  405190:	movk	x0, #0x82b0, lsl #16
  405194:	movk	x1, #0xb44, lsl #16
  405198:	movk	x0, #0x4c0a, lsl #32
  40519c:	movk	x1, #0xbb29, lsl #32
  4051a0:	movk	x0, #0xcf41, lsl #48
  4051a4:	movk	x1, #0x4f8c, lsl #48
  4051a8:	mov	x2, x19
  4051ac:	mov	x29, sp
  4051b0:	bl	402b90 <efi_get_variable_string@plt>
  4051b4:	tbz	w0, #31, 405208 <__fxstat64@plt+0x22f8>
  4051b8:	mov	w20, w0
  4051bc:	cmn	w0, #0x2
  4051c0:	b.eq	405208 <__fxstat64@plt+0x22f8>  // b.none
  4051c4:	mov	w0, wzr
  4051c8:	bl	402850 <log_get_max_level_realm@plt>
  4051cc:	cmp	w0, #0x4
  4051d0:	b.lt	405208 <__fxstat64@plt+0x22f8>  // b.tstop
  4051d4:	mov	w1, w20
  4051d8:	mov	x6, x19
  4051dc:	ldp	x20, x19, [sp, #16]
  4051e0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4051e4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4051e8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4051ec:	add	x2, x2, #0x753
  4051f0:	add	x4, x4, #0x2d7
  4051f4:	add	x5, x5, #0x2eb
  4051f8:	mov	w0, #0x4                   	// #4
  4051fc:	mov	w3, #0x48b                 	// #1163
  405200:	ldp	x29, x30, [sp], #32
  405204:	b	402870 <log_internal_realm@plt>
  405208:	ldp	x20, x19, [sp, #16]
  40520c:	ldp	x29, x30, [sp], #32
  405210:	ret
  405214:	stp	x29, x30, [sp, #-96]!
  405218:	stp	x28, x27, [sp, #16]
  40521c:	stp	x26, x25, [sp, #32]
  405220:	stp	x24, x23, [sp, #48]
  405224:	stp	x22, x21, [sp, #64]
  405228:	stp	x20, x19, [sp, #80]
  40522c:	mov	x29, sp
  405230:	sub	sp, sp, #0x20
  405234:	cbz	x0, 4055a4 <__fxstat64@plt+0x2694>
  405238:	mov	x25, x1
  40523c:	cbz	x1, 4055c4 <__fxstat64@plt+0x26b4>
  405240:	ldrb	w8, [x25]
  405244:	mov	x20, x2
  405248:	mov	x23, x0
  40524c:	cmp	w8, #0x2f
  405250:	cset	w9, eq  // eq = none
  405254:	mov	x8, x25
  405258:	mov	x22, x8
  40525c:	tbz	w9, #0, 405274 <__fxstat64@plt+0x2364>
  405260:	mov	x8, x22
  405264:	ldrb	w9, [x8, #1]!
  405268:	cmp	w9, #0x2f
  40526c:	mov	w9, #0x1                   	// #1
  405270:	b.eq	405258 <__fxstat64@plt+0x2348>  // b.none
  405274:	ldrb	w8, [x23]
  405278:	cbz	w8, 405300 <__fxstat64@plt+0x23f0>
  40527c:	mov	x0, x23
  405280:	bl	402b20 <strlen@plt>
  405284:	mov	x21, x0
  405288:	mov	x0, x22
  40528c:	bl	402b20 <strlen@plt>
  405290:	add	x8, x21, x0
  405294:	add	x8, x8, #0x2
  405298:	cmp	x8, #0x400, lsl #12
  40529c:	b.hi	4055e4 <__fxstat64@plt+0x26d4>  // b.pmore
  4052a0:	add	x8, x8, #0xf
  4052a4:	mov	x9, sp
  4052a8:	and	x8, x8, #0xfffffffffffffff0
  4052ac:	sub	x21, x9, x8
  4052b0:	mov	sp, x21
  4052b4:	mov	x0, x21
  4052b8:	mov	x1, x23
  4052bc:	bl	402ba0 <stpcpy@plt>
  4052c0:	mov	x8, x0
  4052c4:	mov	x0, x8
  4052c8:	cmp	x8, x21
  4052cc:	b.ls	4052e0 <__fxstat64@plt+0x23d0>  // b.plast
  4052d0:	mov	x8, x0
  4052d4:	ldrb	w9, [x8, #-1]!
  4052d8:	cmp	w9, #0x2f
  4052dc:	b.eq	4052c4 <__fxstat64@plt+0x23b4>  // b.none
  4052e0:	ldrb	w8, [x22]
  4052e4:	cmp	w8, #0x2f
  4052e8:	b.eq	4052f4 <__fxstat64@plt+0x23e4>  // b.none
  4052ec:	mov	w8, #0x2f                  	// #47
  4052f0:	strb	w8, [x0], #1
  4052f4:	mov	x1, x22
  4052f8:	bl	402bb0 <strcpy@plt>
  4052fc:	b	405304 <__fxstat64@plt+0x23f4>
  405300:	mov	x21, x22
  405304:	mov	x0, x21
  405308:	bl	402a50 <opendir@plt>
  40530c:	mov	x19, x0
  405310:	bl	402a60 <__errno_location@plt>
  405314:	mov	x24, x0
  405318:	cbz	x19, 405490 <__fxstat64@plt+0x2580>
  40531c:	mov	x0, x19
  405320:	str	wzr, [x24]
  405324:	bl	402a70 <readdir64@plt>
  405328:	cbz	x0, 4054a4 <__fxstat64@plt+0x2594>
  40532c:	stp	x21, x19, [x29, #-24]
  405330:	adrp	x21, 409000 <__fxstat64@plt+0x60f0>
  405334:	mov	w27, wzr
  405338:	add	x21, x21, #0x4bf
  40533c:	add	x26, x0, #0x13
  405340:	mov	x0, x26
  405344:	bl	402a80 <hidden_or_backup_file@plt>
  405348:	tbnz	w0, #0, 40547c <__fxstat64@plt+0x256c>
  40534c:	mov	x0, x26
  405350:	mov	x1, x21
  405354:	stur	xzr, [x29, #-8]
  405358:	bl	402a90 <endswith_no_case@plt>
  40535c:	cbz	x0, 405380 <__fxstat64@plt+0x2470>
  405360:	cbz	x20, 405388 <__fxstat64@plt+0x2478>
  405364:	mov	x0, x20
  405368:	bl	402b20 <strlen@plt>
  40536c:	mov	x2, x0
  405370:	mov	x0, x26
  405374:	mov	x1, x20
  405378:	bl	402bc0 <strncasecmp@plt>
  40537c:	cbz	w0, 405388 <__fxstat64@plt+0x2478>
  405380:	mov	w28, #0xffffffff            	// #-1
  405384:	b	40546c <__fxstat64@plt+0x255c>
  405388:	mov	x0, x19
  40538c:	bl	402bd0 <dirfd@plt>
  405390:	mov	w2, #0x80000               	// #524288
  405394:	mov	x1, x26
  405398:	bl	402be0 <openat64@plt>
  40539c:	mov	w28, w0
  4053a0:	tbnz	w0, #31, 405504 <__fxstat64@plt+0x25f4>
  4053a4:	sub	x1, x29, #0x8
  4053a8:	mov	w0, w28
  4053ac:	bl	405608 <__fxstat64@plt+0x26f8>
  4053b0:	mov	w23, w0
  4053b4:	tbnz	w0, #31, 405564 <__fxstat64@plt+0x2654>
  4053b8:	mov	w0, #0x2                   	// #2
  4053bc:	mov	x19, x25
  4053c0:	bl	4029b0 <special_glyph@plt>
  4053c4:	mov	x25, x0
  4053c8:	cbz	w23, 405448 <__fxstat64@plt+0x2538>
  4053cc:	bl	4028f0 <colors_enabled@plt>
  4053d0:	ldur	x23, [x29, #-8]
  4053d4:	adrp	x9, 408000 <__fxstat64@plt+0x50f0>
  4053d8:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  4053dc:	tst	w0, #0x1
  4053e0:	add	x9, x9, #0xd84
  4053e4:	add	x8, x8, #0xd7a
  4053e8:	mov	x22, x21
  4053ec:	mov	w21, w27
  4053f0:	mov	x27, x20
  4053f4:	csel	x20, x8, x9, ne  // ne = any
  4053f8:	bl	4028f0 <colors_enabled@plt>
  4053fc:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  405400:	adrp	x9, 408000 <__fxstat64@plt+0x50f0>
  405404:	tst	w0, #0x1
  405408:	add	x8, x8, #0xd85
  40540c:	add	x9, x9, #0xd84
  405410:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405414:	csel	x6, x8, x9, ne  // ne = any
  405418:	add	x0, x0, #0x4eb
  40541c:	mov	x1, x25
  405420:	mov	x2, x19
  405424:	mov	x3, x26
  405428:	mov	x4, x20
  40542c:	mov	x5, x23
  405430:	mov	x25, x19
  405434:	mov	x20, x27
  405438:	mov	w27, w21
  40543c:	mov	x21, x22
  405440:	bl	402900 <printf@plt>
  405444:	b	405464 <__fxstat64@plt+0x2554>
  405448:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  40544c:	add	x0, x0, #0x50d
  405450:	mov	x1, x25
  405454:	mov	x2, x19
  405458:	mov	x3, x26
  40545c:	mov	x25, x19
  405460:	bl	402900 <printf@plt>
  405464:	ldur	x19, [x29, #-16]
  405468:	add	w27, w27, #0x1
  40546c:	mov	w0, w28
  405470:	bl	402bf0 <safe_close@plt>
  405474:	ldur	x0, [x29, #-8]
  405478:	bl	4027d0 <free@plt>
  40547c:	mov	x0, x19
  405480:	str	wzr, [x24]
  405484:	bl	402a70 <readdir64@plt>
  405488:	cbnz	x0, 40533c <__fxstat64@plt+0x242c>
  40548c:	b	405578 <__fxstat64@plt+0x2668>
  405490:	ldr	w19, [x24]
  405494:	cmp	w19, #0x2
  405498:	b.ne	4054ac <__fxstat64@plt+0x259c>  // b.any
  40549c:	mov	w27, wzr
  4054a0:	b	405580 <__fxstat64@plt+0x2670>
  4054a4:	mov	w27, wzr
  4054a8:	b	405578 <__fxstat64@plt+0x2668>
  4054ac:	mov	w0, wzr
  4054b0:	bl	402850 <log_get_max_level_realm@plt>
  4054b4:	cmp	w0, #0x3
  4054b8:	b.lt	4054f0 <__fxstat64@plt+0x25e0>  // b.tstop
  4054bc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4054c0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4054c4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4054c8:	add	x2, x2, #0x753
  4054cc:	add	x4, x4, #0x494
  4054d0:	add	x5, x5, #0x4a7
  4054d4:	mov	w0, #0x3                   	// #3
  4054d8:	mov	w3, #0xb5                  	// #181
  4054dc:	mov	w1, w19
  4054e0:	mov	x6, x21
  4054e4:	bl	402870 <log_internal_realm@plt>
  4054e8:	mov	w27, w0
  4054ec:	b	405580 <__fxstat64@plt+0x2670>
  4054f0:	cmp	w19, #0x0
  4054f4:	mov	w8, wzr
  4054f8:	cneg	w9, w19, mi  // mi = first
  4054fc:	sub	w27, w8, w9, uxtb
  405500:	b	405580 <__fxstat64@plt+0x2670>
  405504:	ldr	w19, [x24]
  405508:	mov	w0, wzr
  40550c:	bl	402850 <log_get_max_level_realm@plt>
  405510:	cmp	w0, #0x3
  405514:	b.lt	405550 <__fxstat64@plt+0x2640>  // b.tstop
  405518:	ldur	x6, [x29, #-24]
  40551c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405520:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405524:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  405528:	add	x2, x2, #0x753
  40552c:	add	x4, x4, #0x494
  405530:	add	x5, x5, #0x4c4
  405534:	mov	w0, #0x3                   	// #3
  405538:	mov	w3, #0xc4                  	// #196
  40553c:	mov	w1, w19
  405540:	mov	x7, x26
  405544:	bl	402870 <log_internal_realm@plt>
  405548:	mov	w23, w0
  40554c:	b	405560 <__fxstat64@plt+0x2650>
  405550:	cmp	w19, #0x0
  405554:	mov	w8, wzr
  405558:	cneg	w9, w19, mi  // mi = first
  40555c:	sub	w23, w8, w9, uxtb
  405560:	ldur	x19, [x29, #-16]
  405564:	mov	w0, w28
  405568:	bl	402bf0 <safe_close@plt>
  40556c:	ldur	x0, [x29, #-8]
  405570:	bl	4027d0 <free@plt>
  405574:	mov	w27, w23
  405578:	mov	x0, x19
  40557c:	bl	402aa0 <closedir@plt>
  405580:	mov	w0, w27
  405584:	mov	sp, x29
  405588:	ldp	x20, x19, [sp, #80]
  40558c:	ldp	x22, x21, [sp, #64]
  405590:	ldp	x24, x23, [sp, #48]
  405594:	ldp	x26, x25, [sp, #32]
  405598:	ldp	x28, x27, [sp, #16]
  40559c:	ldp	x29, x30, [sp], #96
  4055a0:	ret
  4055a4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4055a8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4055ac:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4055b0:	add	x1, x1, #0x42b
  4055b4:	add	x2, x2, #0x753
  4055b8:	add	x4, x4, #0x434
  4055bc:	mov	w3, #0xac                  	// #172
  4055c0:	bl	4028c0 <log_assert_failed_realm@plt>
  4055c4:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4055c8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4055cc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4055d0:	add	x1, x1, #0x6ee
  4055d4:	add	x2, x2, #0x753
  4055d8:	add	x4, x4, #0x434
  4055dc:	mov	w3, #0xad                  	// #173
  4055e0:	b	405600 <__fxstat64@plt+0x26f0>
  4055e4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4055e8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4055ec:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4055f0:	add	x1, x1, #0x475
  4055f4:	add	x2, x2, #0x753
  4055f8:	add	x4, x4, #0x434
  4055fc:	mov	w3, #0xaf                  	// #175
  405600:	mov	w0, wzr
  405604:	bl	4028c0 <log_assert_failed_realm@plt>
  405608:	sub	sp, sp, #0xb0
  40560c:	stp	x29, x30, [sp, #128]
  405610:	stp	x22, x21, [sp, #144]
  405614:	stp	x20, x19, [sp, #160]
  405618:	add	x29, sp, #0x80
  40561c:	tbnz	w0, #31, 40585c <__fxstat64@plt+0x294c>
  405620:	mov	x19, x1
  405624:	cbz	x1, 40587c <__fxstat64@plt+0x296c>
  405628:	mov	x1, sp
  40562c:	mov	w21, w0
  405630:	bl	4082e0 <__fxstat64@plt+0x53d0>
  405634:	tbnz	w0, #31, 405660 <__fxstat64@plt+0x2750>
  405638:	mov	x0, sp
  40563c:	bl	402c00 <stat_verify_regular@plt>
  405640:	mov	w20, w0
  405644:	tbnz	w0, #31, 4056a0 <__fxstat64@plt+0x2790>
  405648:	ldr	x1, [sp, #48]
  40564c:	cmp	x1, #0x1a
  405650:	b.gt	4056e0 <__fxstat64@plt+0x27d0>
  405654:	mov	w20, wzr
  405658:	str	xzr, [x19]
  40565c:	b	405844 <__fxstat64@plt+0x2934>
  405660:	bl	402a60 <__errno_location@plt>
  405664:	ldr	w19, [x0]
  405668:	mov	w0, wzr
  40566c:	bl	402850 <log_get_max_level_realm@plt>
  405670:	cmp	w0, #0x3
  405674:	b.lt	4057e0 <__fxstat64@plt+0x28d0>  // b.tstop
  405678:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40567c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405680:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  405684:	add	x2, x2, #0x753
  405688:	add	x4, x4, #0x553
  40568c:	add	x5, x5, #0x564
  405690:	mov	w0, #0x3                   	// #3
  405694:	mov	w3, #0x7f                  	// #127
  405698:	mov	w1, w19
  40569c:	b	4056d4 <__fxstat64@plt+0x27c4>
  4056a0:	mov	w0, wzr
  4056a4:	bl	402850 <log_get_max_level_realm@plt>
  4056a8:	cmp	w0, #0x3
  4056ac:	b.lt	405798 <__fxstat64@plt+0x2888>  // b.tstop
  4056b0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4056b4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4056b8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4056bc:	add	x2, x2, #0x753
  4056c0:	add	x4, x4, #0x553
  4056c4:	add	x5, x5, #0x582
  4056c8:	mov	w0, #0x3                   	// #3
  4056cc:	mov	w3, #0x83                  	// #131
  4056d0:	mov	w1, w20
  4056d4:	bl	402870 <log_internal_realm@plt>
  4056d8:	mov	w20, w0
  4056dc:	b	405844 <__fxstat64@plt+0x2934>
  4056e0:	mov	w2, #0x1                   	// #1
  4056e4:	mov	w3, #0x2                   	// #2
  4056e8:	mov	x0, xzr
  4056ec:	mov	w4, w21
  4056f0:	mov	x5, xzr
  4056f4:	bl	402c10 <mmap64@plt>
  4056f8:	cmn	x0, #0x1
  4056fc:	b.eq	4057a4 <__fxstat64@plt+0x2894>  // b.none
  405700:	ldr	x22, [sp, #48]
  405704:	adrp	x2, 409000 <__fxstat64@plt+0x60f0>
  405708:	add	x2, x2, #0x5cb
  40570c:	mov	w3, #0x11                  	// #17
  405710:	sub	x1, x22, #0x8
  405714:	mov	x21, x0
  405718:	bl	402c20 <memmem@plt>
  40571c:	cbz	x0, 405790 <__fxstat64@plt+0x2880>
  405720:	add	x20, x0, #0x11
  405724:	add	x8, x22, x21
  405728:	adrp	x2, 409000 <__fxstat64@plt+0x60f0>
  40572c:	sub	x1, x8, x20
  405730:	add	x2, x2, #0x5dd
  405734:	mov	w3, #0x5                   	// #5
  405738:	mov	x0, x20
  40573c:	bl	402c20 <memmem@plt>
  405740:	cbz	x0, 405750 <__fxstat64@plt+0x2840>
  405744:	sub	x1, x0, x20
  405748:	cmp	x1, #0x2
  40574c:	b.gt	405800 <__fxstat64@plt+0x28f0>
  405750:	mov	w0, wzr
  405754:	bl	402850 <log_get_max_level_realm@plt>
  405758:	cmp	w0, #0x3
  40575c:	b.lt	4057f4 <__fxstat64@plt+0x28e4>  // b.tstop
  405760:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405764:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405768:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40576c:	mov	w1, #0x16                  	// #22
  405770:	add	x2, x2, #0x753
  405774:	add	x4, x4, #0x553
  405778:	add	x5, x5, #0x5e3
  40577c:	mov	w0, #0x3                   	// #3
  405780:	movk	w1, #0x4000, lsl #16
  405784:	mov	w3, #0x95                  	// #149
  405788:	bl	402870 <log_internal_realm@plt>
  40578c:	mov	w20, w0
  405790:	mov	x22, xzr
  405794:	b	405834 <__fxstat64@plt+0x2924>
  405798:	mov	w8, wzr
  40579c:	neg	w9, w20
  4057a0:	b	4057ec <__fxstat64@plt+0x28dc>
  4057a4:	bl	402a60 <__errno_location@plt>
  4057a8:	ldr	w19, [x0]
  4057ac:	mov	w0, wzr
  4057b0:	bl	402850 <log_get_max_level_realm@plt>
  4057b4:	cmp	w0, #0x3
  4057b8:	b.lt	4057e0 <__fxstat64@plt+0x28d0>  // b.tstop
  4057bc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4057c0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4057c4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4057c8:	add	x2, x2, #0x753
  4057cc:	add	x4, x4, #0x553
  4057d0:	add	x5, x5, #0x5a7
  4057d4:	mov	w0, #0x3                   	// #3
  4057d8:	mov	w3, #0x8c                  	// #140
  4057dc:	b	405698 <__fxstat64@plt+0x2788>
  4057e0:	cmp	w19, #0x0
  4057e4:	mov	w8, wzr
  4057e8:	cneg	w9, w19, mi  // mi = first
  4057ec:	sub	w20, w8, w9, uxtb
  4057f0:	b	405844 <__fxstat64@plt+0x2934>
  4057f4:	mov	x22, xzr
  4057f8:	mov	w20, #0xffffffea            	// #-22
  4057fc:	b	405834 <__fxstat64@plt+0x2924>
  405800:	mov	x0, x20
  405804:	bl	402c30 <strndup@plt>
  405808:	mov	x22, x0
  40580c:	cbz	x0, 405818 <__fxstat64@plt+0x2908>
  405810:	mov	w20, #0x1                   	// #1
  405814:	b	405834 <__fxstat64@plt+0x2924>
  405818:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  40581c:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  405820:	add	x1, x1, #0x753
  405824:	add	x3, x3, #0x553
  405828:	mov	w2, #0x9b                  	// #155
  40582c:	bl	402860 <log_oom_internal@plt>
  405830:	mov	w20, w0
  405834:	ldr	x1, [sp, #48]
  405838:	mov	x0, x21
  40583c:	bl	402c40 <munmap@plt>
  405840:	str	x22, [x19]
  405844:	mov	w0, w20
  405848:	ldp	x20, x19, [sp, #160]
  40584c:	ldp	x22, x21, [sp, #144]
  405850:	ldp	x29, x30, [sp, #128]
  405854:	add	sp, sp, #0xb0
  405858:	ret
  40585c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405860:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405864:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405868:	add	x1, x1, #0x526
  40586c:	add	x2, x2, #0x753
  405870:	add	x4, x4, #0x52e
  405874:	mov	w3, #0x7b                  	// #123
  405878:	b	405898 <__fxstat64@plt+0x2988>
  40587c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405880:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405884:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405888:	add	x1, x1, #0x551
  40588c:	add	x2, x2, #0x753
  405890:	add	x4, x4, #0x52e
  405894:	mov	w3, #0x7c                  	// #124
  405898:	mov	w0, wzr
  40589c:	bl	4028c0 <log_assert_failed_realm@plt>
  4058a0:	sub	sp, sp, #0xb0
  4058a4:	stp	x29, x30, [sp, #112]
  4058a8:	add	x29, sp, #0x70
  4058ac:	stp	x20, x19, [sp, #160]
  4058b0:	mov	w19, w1
  4058b4:	add	x1, x29, #0x18
  4058b8:	sub	x2, x29, #0x18
  4058bc:	sub	x3, x29, #0x8
  4058c0:	sub	x4, x29, #0x1c
  4058c4:	str	x23, [sp, #128]
  4058c8:	stp	x22, x21, [sp, #144]
  4058cc:	mov	w20, w0
  4058d0:	str	xzr, [x29, #24]
  4058d4:	stur	xzr, [x29, #-8]
  4058d8:	bl	402c50 <efi_get_boot_option@plt>
  4058dc:	tbnz	w0, #31, 405a24 <__fxstat64@plt+0x2b14>
  4058e0:	ldur	x0, [x29, #-8]
  4058e4:	cbz	x0, 405a24 <__fxstat64@plt+0x2b14>
  4058e8:	ldp	x8, x9, [x29, #-24]
  4058ec:	orr	x8, x9, x8
  4058f0:	cbz	x8, 405a24 <__fxstat64@plt+0x2b14>
  4058f4:	bl	402960 <efi_tilt_backslashes@plt>
  4058f8:	bl	4028f0 <colors_enabled@plt>
  4058fc:	ldr	x9, [x29, #24]
  405900:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  405904:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  405908:	add	x23, x23, #0xd84
  40590c:	add	x8, x8, #0xd7a
  405910:	tst	w0, #0x1
  405914:	csel	x21, x8, x23, ne  // ne = any
  405918:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  40591c:	add	x8, x8, #0x30e
  405920:	cmp	x9, #0x0
  405924:	csel	x22, x8, x9, eq  // eq = none
  405928:	bl	4028f0 <colors_enabled@plt>
  40592c:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  405930:	add	x8, x8, #0xd85
  405934:	tst	w0, #0x1
  405938:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  40593c:	csel	x3, x8, x23, ne  // ne = any
  405940:	add	x0, x0, #0x6b2
  405944:	mov	x1, x21
  405948:	mov	x2, x22
  40594c:	bl	402900 <printf@plt>
  405950:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405954:	and	w1, w20, #0xffff
  405958:	add	x0, x0, #0x6c9
  40595c:	bl	402900 <printf@plt>
  405960:	ldurb	w8, [x29, #-28]
  405964:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  405968:	add	x9, x9, #0x6fb
  40596c:	adrp	x10, 409000 <__fxstat64@plt+0x60f0>
  405970:	cmp	w8, #0x0
  405974:	add	x10, x10, #0x6fe
  405978:	csel	x1, x9, x23, eq  // eq = none
  40597c:	tst	w19, #0x1
  405980:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405984:	csel	x2, x10, x23, ne  // ne = any
  405988:	add	x0, x0, #0x6e0
  40598c:	bl	402900 <printf@plt>
  405990:	ldurb	w1, [x29, #-24]
  405994:	ldurb	w2, [x29, #-23]
  405998:	ldurb	w3, [x29, #-22]
  40599c:	ldurb	w4, [x29, #-21]
  4059a0:	ldurb	w5, [x29, #-20]
  4059a4:	ldurb	w6, [x29, #-19]
  4059a8:	ldurb	w7, [x29, #-18]
  4059ac:	ldurb	w8, [x29, #-17]
  4059b0:	ldurb	w9, [x29, #-16]
  4059b4:	ldurb	w10, [x29, #-15]
  4059b8:	ldurb	w11, [x29, #-14]
  4059bc:	ldurb	w12, [x29, #-13]
  4059c0:	ldurb	w13, [x29, #-12]
  4059c4:	ldurb	w14, [x29, #-11]
  4059c8:	ldurb	w15, [x29, #-10]
  4059cc:	ldurb	w16, [x29, #-9]
  4059d0:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  4059d4:	add	x0, x0, #0x70b
  4059d8:	str	w15, [sp, #56]
  4059dc:	str	w16, [sp, #64]
  4059e0:	str	w14, [sp, #48]
  4059e4:	str	w13, [sp, #40]
  4059e8:	str	w12, [sp, #32]
  4059ec:	str	w11, [sp, #24]
  4059f0:	str	w10, [sp, #16]
  4059f4:	str	w9, [sp, #8]
  4059f8:	str	w8, [sp]
  4059fc:	bl	402900 <printf@plt>
  405a00:	mov	w0, #0x2                   	// #2
  405a04:	bl	4029b0 <special_glyph@plt>
  405a08:	ldur	x2, [x29, #-8]
  405a0c:	mov	x1, x0
  405a10:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405a14:	add	x0, x0, #0x92
  405a18:	bl	402900 <printf@plt>
  405a1c:	mov	w0, #0xa                   	// #10
  405a20:	bl	4029a0 <putchar@plt>
  405a24:	ldur	x0, [x29, #-8]
  405a28:	bl	4027d0 <free@plt>
  405a2c:	ldr	x0, [x29, #24]
  405a30:	bl	4027d0 <free@plt>
  405a34:	ldp	x20, x19, [sp, #160]
  405a38:	ldp	x22, x21, [sp, #144]
  405a3c:	ldr	x23, [sp, #128]
  405a40:	ldp	x29, x30, [sp, #112]
  405a44:	add	sp, sp, #0xb0
  405a48:	ret
  405a4c:	sub	sp, sp, #0x60
  405a50:	stp	x29, x30, [sp, #16]
  405a54:	add	x29, sp, #0x10
  405a58:	stp	x26, x25, [sp, #32]
  405a5c:	stp	x24, x23, [sp, #48]
  405a60:	stp	x22, x21, [sp, #64]
  405a64:	stp	x20, x19, [sp, #80]
  405a68:	stur	wzr, [x29, #-4]
  405a6c:	cbz	x0, 405d1c <__fxstat64@plt+0x2e0c>
  405a70:	mov	w20, w1
  405a74:	mov	x19, x0
  405a78:	bl	4028f0 <colors_enabled@plt>
  405a7c:	ldr	x21, [x19, #40]
  405a80:	adrp	x25, 408000 <__fxstat64@plt+0x50f0>
  405a84:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  405a88:	add	x25, x25, #0xd84
  405a8c:	add	x8, x8, #0xd7a
  405a90:	tst	w0, #0x1
  405a94:	csel	x22, x8, x25, ne  // ne = any
  405a98:	cbnz	x21, 405aa8 <__fxstat64@plt+0x2b98>
  405a9c:	ldr	x21, [x19, #32]
  405aa0:	cbnz	x21, 405aa8 <__fxstat64@plt+0x2b98>
  405aa4:	ldr	x21, [x19, #8]
  405aa8:	bl	4028f0 <colors_enabled@plt>
  405aac:	adrp	x26, 408000 <__fxstat64@plt+0x50f0>
  405ab0:	add	x26, x26, #0xd85
  405ab4:	tst	w0, #0x1
  405ab8:	csel	x23, x26, x25, ne  // ne = any
  405abc:	bl	4028f0 <colors_enabled@plt>
  405ac0:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  405ac4:	add	x8, x8, #0x321
  405ac8:	tst	w0, #0x1
  405acc:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  405ad0:	add	x9, x9, #0x821
  405ad4:	csel	x24, x8, x25, ne  // ne = any
  405ad8:	tst	w20, #0x1
  405adc:	csel	x20, x9, x25, ne  // ne = any
  405ae0:	bl	4028f0 <colors_enabled@plt>
  405ae4:	tst	w0, #0x1
  405ae8:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405aec:	csel	x6, x26, x25, ne  // ne = any
  405af0:	add	x0, x0, #0x804
  405af4:	mov	x1, x22
  405af8:	mov	x2, x21
  405afc:	mov	x3, x23
  405b00:	mov	x4, x24
  405b04:	mov	x5, x20
  405b08:	bl	402900 <printf@plt>
  405b0c:	ldr	x1, [x19, #8]
  405b10:	cbz	x1, 405b20 <__fxstat64@plt+0x2c10>
  405b14:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405b18:	add	x0, x0, #0x82c
  405b1c:	bl	402900 <printf@plt>
  405b20:	ldr	x1, [x19, #16]
  405b24:	cbz	x1, 405b64 <__fxstat64@plt+0x2c54>
  405b28:	str	xzr, [sp]
  405b2c:	ldr	w8, [x19]
  405b30:	cbnz	w8, 405b50 <__fxstat64@plt+0x2c40>
  405b34:	mov	x2, sp
  405b38:	mov	x0, x1
  405b3c:	mov	x1, xzr
  405b40:	bl	402c60 <terminal_urlify_path@plt>
  405b44:	ldr	x1, [sp]
  405b48:	cbnz	x1, 405b50 <__fxstat64@plt+0x2c40>
  405b4c:	ldr	x1, [x19, #16]
  405b50:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405b54:	add	x0, x0, #0x83f
  405b58:	bl	402900 <printf@plt>
  405b5c:	ldr	x0, [sp]
  405b60:	bl	4027d0 <free@plt>
  405b64:	ldr	x1, [x19, #48]
  405b68:	cbz	x1, 405b78 <__fxstat64@plt+0x2c68>
  405b6c:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405b70:	add	x0, x0, #0x852
  405b74:	bl	402900 <printf@plt>
  405b78:	ldr	x1, [x19, #56]
  405b7c:	cbz	x1, 405b8c <__fxstat64@plt+0x2c7c>
  405b80:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405b84:	add	x0, x0, #0x865
  405b88:	bl	402900 <printf@plt>
  405b8c:	ldr	x1, [x19, #64]
  405b90:	cbz	x1, 405ba0 <__fxstat64@plt+0x2c90>
  405b94:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405b98:	add	x0, x0, #0x878
  405b9c:	bl	402900 <printf@plt>
  405ba0:	ldr	x2, [x19, #80]
  405ba4:	cbz	x2, 405bbc <__fxstat64@plt+0x2cac>
  405ba8:	ldr	x1, [x19, #24]
  405bac:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405bb0:	add	x0, x0, #0x88b
  405bb4:	sub	x3, x29, #0x4
  405bb8:	bl	405d3c <__fxstat64@plt+0x2e2c>
  405bbc:	ldr	x20, [x19, #96]
  405bc0:	cbz	x20, 405bf4 <__fxstat64@plt+0x2ce4>
  405bc4:	ldr	x2, [x20]
  405bc8:	cbz	x2, 405bf4 <__fxstat64@plt+0x2ce4>
  405bcc:	adrp	x21, 409000 <__fxstat64@plt+0x60f0>
  405bd0:	add	x21, x21, #0x891
  405bd4:	ldr	x8, [x19, #96]
  405bd8:	ldr	x1, [x19, #24]
  405bdc:	sub	x3, x29, #0x4
  405be0:	cmp	x20, x8
  405be4:	csel	x0, x21, xzr, eq  // eq = none
  405be8:	bl	405d3c <__fxstat64@plt+0x2e2c>
  405bec:	ldr	x2, [x20, #8]!
  405bf0:	cbnz	x2, 405bd4 <__fxstat64@plt+0x2cc4>
  405bf4:	ldr	x0, [x19, #72]
  405bf8:	cbz	x0, 405cd8 <__fxstat64@plt+0x2dc8>
  405bfc:	ldr	x8, [x0]
  405c00:	cbz	x8, 405cd8 <__fxstat64@plt+0x2dc8>
  405c04:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405c08:	add	x1, x1, #0x898
  405c0c:	mov	x2, xzr
  405c10:	bl	402c70 <strv_join_prefix@plt>
  405c14:	mov	x20, x0
  405c18:	cbz	x0, 405c5c <__fxstat64@plt+0x2d4c>
  405c1c:	mov	x0, x20
  405c20:	bl	402c80 <strv_split_newlines@plt>
  405c24:	cbz	x0, 405c74 <__fxstat64@plt+0x2d64>
  405c28:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405c2c:	add	x1, x1, #0x8aa
  405c30:	mov	x2, xzr
  405c34:	mov	x23, x0
  405c38:	bl	402c70 <strv_join_prefix@plt>
  405c3c:	mov	x22, x0
  405c40:	cbz	x0, 405c9c <__fxstat64@plt+0x2d8c>
  405c44:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405c48:	add	x0, x0, #0x8ba
  405c4c:	mov	x1, x22
  405c50:	bl	402900 <printf@plt>
  405c54:	mov	w24, #0x1                   	// #1
  405c58:	b	405cbc <__fxstat64@plt+0x2dac>
  405c5c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  405c60:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  405c64:	add	x1, x1, #0x753
  405c68:	add	x3, x3, #0x89a
  405c6c:	mov	w2, #0x182                 	// #386
  405c70:	b	405c88 <__fxstat64@plt+0x2d78>
  405c74:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  405c78:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  405c7c:	add	x1, x1, #0x753
  405c80:	add	x3, x3, #0x89a
  405c84:	mov	w2, #0x186                 	// #390
  405c88:	bl	402860 <log_oom_internal@plt>
  405c8c:	mov	w21, w0
  405c90:	mov	w24, wzr
  405c94:	mov	x22, xzr
  405c98:	b	405cc4 <__fxstat64@plt+0x2db4>
  405c9c:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  405ca0:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  405ca4:	add	x1, x1, #0x753
  405ca8:	add	x3, x3, #0x89a
  405cac:	mov	w2, #0x18a                 	// #394
  405cb0:	bl	402860 <log_oom_internal@plt>
  405cb4:	mov	w21, w0
  405cb8:	mov	w24, wzr
  405cbc:	mov	x0, x23
  405cc0:	bl	402c90 <strv_free@plt>
  405cc4:	mov	x0, x22
  405cc8:	bl	4027d0 <free@plt>
  405ccc:	mov	x0, x20
  405cd0:	bl	4027d0 <free@plt>
  405cd4:	cbz	w24, 405cfc <__fxstat64@plt+0x2dec>
  405cd8:	ldr	x2, [x19, #104]
  405cdc:	cbz	x2, 405cf4 <__fxstat64@plt+0x2de4>
  405ce0:	ldr	x1, [x19, #24]
  405ce4:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405ce8:	add	x0, x0, #0x8cd
  405cec:	sub	x3, x29, #0x4
  405cf0:	bl	405d3c <__fxstat64@plt+0x2e2c>
  405cf4:	ldur	w8, [x29, #-4]
  405cf8:	neg	w21, w8
  405cfc:	mov	w0, w21
  405d00:	ldp	x20, x19, [sp, #80]
  405d04:	ldp	x22, x21, [sp, #64]
  405d08:	ldp	x24, x23, [sp, #48]
  405d0c:	ldp	x26, x25, [sp, #32]
  405d10:	ldp	x29, x30, [sp, #16]
  405d14:	add	sp, sp, #0x60
  405d18:	ret
  405d1c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405d20:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  405d24:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  405d28:	add	x1, x1, #0x7d4
  405d2c:	add	x2, x2, #0x753
  405d30:	add	x4, x4, #0x7d6
  405d34:	mov	w3, #0x15b                 	// #347
  405d38:	bl	4028c0 <log_assert_failed_realm@plt>
  405d3c:	stp	x29, x30, [sp, #-64]!
  405d40:	stp	x20, x19, [sp, #48]
  405d44:	mov	x20, x2
  405d48:	stp	x22, x21, [sp, #32]
  405d4c:	mov	x22, x0
  405d50:	mov	x2, #0xffffffffffffffff    	// #-1
  405d54:	mov	x0, x1
  405d58:	mov	x1, x20
  405d5c:	str	x23, [sp, #16]
  405d60:	mov	x29, sp
  405d64:	mov	x19, x3
  405d68:	bl	4029d0 <path_join_internal@plt>
  405d6c:	mov	x23, x0
  405d70:	cbz	x0, 405d98 <__fxstat64@plt+0x2e88>
  405d74:	mov	x0, x23
  405d78:	mov	w1, wzr
  405d7c:	bl	4029c0 <access@plt>
  405d80:	mov	w21, wzr
  405d84:	tbz	w0, #31, 405db4 <__fxstat64@plt+0x2ea4>
  405d88:	bl	402a60 <__errno_location@plt>
  405d8c:	ldr	w8, [x0]
  405d90:	neg	w21, w8
  405d94:	b	405db4 <__fxstat64@plt+0x2ea4>
  405d98:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  405d9c:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  405da0:	add	x1, x1, #0x753
  405da4:	add	x3, x3, #0x8ef
  405da8:	mov	w2, #0x13f                 	// #319
  405dac:	bl	402860 <log_oom_internal@plt>
  405db0:	mov	w21, w0
  405db4:	mov	x0, x23
  405db8:	bl	4027d0 <free@plt>
  405dbc:	adrp	x23, 408000 <__fxstat64@plt+0x50f0>
  405dc0:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  405dc4:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  405dc8:	add	x23, x23, #0xd84
  405dcc:	cmp	x22, #0x0
  405dd0:	add	x8, x8, #0x8e0
  405dd4:	add	x9, x9, #0x898
  405dd8:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405ddc:	csel	x1, x23, x22, eq  // eq = none
  405de0:	csel	x2, x9, x8, eq  // eq = none
  405de4:	add	x0, x0, #0x8d8
  405de8:	bl	402900 <printf@plt>
  405dec:	tbnz	w21, #31, 405e08 <__fxstat64@plt+0x2ef8>
  405df0:	mov	x0, x20
  405df4:	ldp	x20, x19, [sp, #48]
  405df8:	ldp	x22, x21, [sp, #32]
  405dfc:	ldr	x23, [sp, #16]
  405e00:	ldp	x29, x30, [sp], #64
  405e04:	b	402920 <puts@plt>
  405e08:	neg	w22, w21
  405e0c:	bl	402a60 <__errno_location@plt>
  405e10:	str	w22, [x0]
  405e14:	bl	4028f0 <colors_enabled@plt>
  405e18:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  405e1c:	add	x8, x8, #0x32b
  405e20:	tst	w0, #0x1
  405e24:	csel	x22, x8, x23, ne  // ne = any
  405e28:	bl	4028f0 <colors_enabled@plt>
  405e2c:	adrp	x8, 408000 <__fxstat64@plt+0x50f0>
  405e30:	add	x8, x8, #0xd85
  405e34:	tst	w0, #0x1
  405e38:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  405e3c:	csel	x3, x8, x23, ne  // ne = any
  405e40:	add	x0, x0, #0x8e2
  405e44:	mov	x1, x22
  405e48:	mov	x2, x20
  405e4c:	bl	402900 <printf@plt>
  405e50:	ldr	w8, [x19]
  405e54:	cbnz	w8, 405e5c <__fxstat64@plt+0x2f4c>
  405e58:	str	w21, [x19]
  405e5c:	ldp	x20, x19, [sp, #48]
  405e60:	ldp	x22, x21, [sp, #32]
  405e64:	ldr	x23, [sp, #16]
  405e68:	ldp	x29, x30, [sp], #64
  405e6c:	ret
  405e70:	stp	x29, x30, [sp, #-64]!
  405e74:	str	x23, [sp, #16]
  405e78:	stp	x22, x21, [sp, #32]
  405e7c:	stp	x20, x19, [sp, #48]
  405e80:	mov	x29, sp
  405e84:	sub	sp, sp, #0x30
  405e88:	mov	x21, x2
  405e8c:	mov	x22, x1
  405e90:	str	xzr, [x29, #24]
  405e94:	cbz	x0, 405f14 <__fxstat64@plt+0x3004>
  405e98:	ldrb	w8, [x0]
  405e9c:	adrp	x23, 409000 <__fxstat64@plt+0x60f0>
  405ea0:	mov	x20, x0
  405ea4:	add	x23, x23, #0xcbb
  405ea8:	cbz	w8, 405f20 <__fxstat64@plt+0x3010>
  405eac:	mov	x0, x20
  405eb0:	bl	402b20 <strlen@plt>
  405eb4:	add	x8, x0, #0x15
  405eb8:	cmp	x8, #0x400, lsl #12
  405ebc:	b.hi	40611c <__fxstat64@plt+0x320c>  // b.pmore
  405ec0:	add	x8, x8, #0xf
  405ec4:	mov	x9, sp
  405ec8:	and	x8, x8, #0xfffffffffffffff0
  405ecc:	sub	x19, x9, x8
  405ed0:	mov	sp, x19
  405ed4:	mov	x0, x19
  405ed8:	mov	x1, x20
  405edc:	bl	402ba0 <stpcpy@plt>
  405ee0:	mov	x8, x0
  405ee4:	cmp	x0, x19
  405ee8:	b.ls	405efc <__fxstat64@plt+0x2fec>  // b.plast
  405eec:	mov	x0, x8
  405ef0:	ldrb	w9, [x0, #-1]!
  405ef4:	cmp	w9, #0x2f
  405ef8:	b.eq	405ee0 <__fxstat64@plt+0x2fd0>  // b.none
  405efc:	ldr	q0, [x23]
  405f00:	mov	w9, #0x6e6f                	// #28271
  405f04:	movk	w9, #0x66, lsl #16
  405f08:	str	w9, [x8, #16]
  405f0c:	str	q0, [x8]
  405f10:	b	405f24 <__fxstat64@plt+0x3014>
  405f14:	adrp	x19, 409000 <__fxstat64@plt+0x60f0>
  405f18:	add	x19, x19, #0xcbb
  405f1c:	b	405f24 <__fxstat64@plt+0x3014>
  405f20:	mov	x19, x23
  405f24:	mov	x0, x19
  405f28:	mov	w1, wzr
  405f2c:	bl	4029c0 <access@plt>
  405f30:	tbnz	w0, #31, 405f78 <__fxstat64@plt+0x3068>
  405f34:	mov	x20, xzr
  405f38:	mov	w19, wzr
  405f3c:	mov	x0, x20
  405f40:	bl	402ca0 <safe_fclose@plt>
  405f44:	ldr	x20, [x29, #24]
  405f48:	cbz	x20, 405f5c <__fxstat64@plt+0x304c>
  405f4c:	mov	x0, x20
  405f50:	bl	402cb0 <unlink_noerrno@plt>
  405f54:	mov	x0, x20
  405f58:	bl	4027d0 <free@plt>
  405f5c:	mov	w0, w19
  405f60:	mov	sp, x29
  405f64:	ldp	x20, x19, [sp, #48]
  405f68:	ldp	x22, x21, [sp, #32]
  405f6c:	ldr	x23, [sp, #16]
  405f70:	ldp	x29, x30, [sp], #64
  405f74:	ret
  405f78:	mov	w1, #0x1                   	// #1
  405f7c:	add	x2, x29, #0x18
  405f80:	movk	w1, #0x8, lsl #16
  405f84:	mov	x0, x19
  405f88:	bl	402cc0 <open_tmpfile_linkable@plt>
  405f8c:	mov	w23, w0
  405f90:	tbnz	w0, #31, 406010 <__fxstat64@plt+0x3100>
  405f94:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405f98:	add	x1, x1, #0xd19
  405f9c:	mov	w0, w23
  405fa0:	bl	402cd0 <fdopen@plt>
  405fa4:	mov	x20, x0
  405fa8:	cbz	x0, 406058 <__fxstat64@plt+0x3148>
  405fac:	sub	x2, x29, #0x24
  405fb0:	mov	x0, x22
  405fb4:	mov	x1, x21
  405fb8:	bl	402ab0 <sd_id128_to_string@plt>
  405fbc:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  405fc0:	mov	x2, x0
  405fc4:	add	x1, x1, #0xd1b
  405fc8:	mov	x0, x20
  405fcc:	bl	402ce0 <fprintf@plt>
  405fd0:	mov	x0, x20
  405fd4:	bl	402cf0 <fflush_sync_and_check@plt>
  405fd8:	tbnz	w0, #31, 406090 <__fxstat64@plt+0x3180>
  405fdc:	ldr	x1, [x29, #24]
  405fe0:	mov	w0, w23
  405fe4:	mov	x2, x19
  405fe8:	bl	402d00 <link_tmpfile@plt>
  405fec:	cmn	w0, #0x11
  405ff0:	b.eq	405f38 <__fxstat64@plt+0x3028>  // b.none
  405ff4:	mov	w21, w0
  405ff8:	tbnz	w0, #31, 4060c8 <__fxstat64@plt+0x31b8>
  405ffc:	ldr	x0, [x29, #24]
  406000:	bl	4027d0 <free@plt>
  406004:	mov	w19, #0x1                   	// #1
  406008:	str	xzr, [x29, #24]
  40600c:	b	405f3c <__fxstat64@plt+0x302c>
  406010:	mov	w0, wzr
  406014:	bl	402850 <log_get_max_level_realm@plt>
  406018:	cmp	w0, #0x3
  40601c:	b.lt	406080 <__fxstat64@plt+0x3170>  // b.tstop
  406020:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406024:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406028:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40602c:	add	x2, x2, #0x753
  406030:	add	x4, x4, #0xd03
  406034:	add	x5, x5, #0xb06
  406038:	mov	w0, #0x3                   	// #3
  40603c:	mov	w3, #0x3e2                 	// #994
  406040:	mov	w1, w23
  406044:	mov	x6, x19
  406048:	bl	402870 <log_internal_realm@plt>
  40604c:	mov	w19, w0
  406050:	mov	x20, xzr
  406054:	b	405f3c <__fxstat64@plt+0x302c>
  406058:	mov	w0, w23
  40605c:	bl	402bf0 <safe_close@plt>
  406060:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  406064:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  406068:	add	x1, x1, #0x753
  40606c:	add	x3, x3, #0xd03
  406070:	mov	w2, #0x3e7                 	// #999
  406074:	mov	w0, wzr
  406078:	bl	402860 <log_oom_internal@plt>
  40607c:	b	406104 <__fxstat64@plt+0x31f4>
  406080:	mov	w8, wzr
  406084:	neg	w9, w23
  406088:	mov	x20, xzr
  40608c:	b	406114 <__fxstat64@plt+0x3204>
  406090:	mov	w21, w0
  406094:	mov	w0, wzr
  406098:	bl	402850 <log_get_max_level_realm@plt>
  40609c:	cmp	w0, #0x3
  4060a0:	b.lt	40610c <__fxstat64@plt+0x31fc>  // b.tstop
  4060a4:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4060a8:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4060ac:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4060b0:	add	x2, x2, #0x753
  4060b4:	add	x4, x4, #0xd03
  4060b8:	add	x5, x5, #0xd47
  4060bc:	mov	w0, #0x3                   	// #3
  4060c0:	mov	w3, #0x3f0                 	// #1008
  4060c4:	b	4060f8 <__fxstat64@plt+0x31e8>
  4060c8:	mov	w0, wzr
  4060cc:	bl	402850 <log_get_max_level_realm@plt>
  4060d0:	cmp	w0, #0x3
  4060d4:	b.lt	40610c <__fxstat64@plt+0x31fc>  // b.tstop
  4060d8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4060dc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4060e0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4060e4:	add	x2, x2, #0x753
  4060e8:	add	x4, x4, #0xd03
  4060ec:	add	x5, x5, #0xd60
  4060f0:	mov	w0, #0x3                   	// #3
  4060f4:	mov	w3, #0x3f6                 	// #1014
  4060f8:	mov	w1, w21
  4060fc:	mov	x6, x19
  406100:	bl	402870 <log_internal_realm@plt>
  406104:	mov	w19, w0
  406108:	b	405f3c <__fxstat64@plt+0x302c>
  40610c:	mov	w8, wzr
  406110:	neg	w9, w21
  406114:	sub	w19, w8, w9, uxtb
  406118:	b	405f3c <__fxstat64@plt+0x302c>
  40611c:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  406120:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406124:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406128:	add	x1, x1, #0x475
  40612c:	add	x2, x2, #0x753
  406130:	add	x4, x4, #0xccf
  406134:	mov	w3, #0x3dc                 	// #988
  406138:	mov	w0, wzr
  40613c:	bl	4028c0 <log_assert_failed_realm@plt>
  406140:	sub	sp, sp, #0x50
  406144:	stp	x29, x30, [sp, #16]
  406148:	stp	x24, x23, [sp, #32]
  40614c:	stp	x22, x21, [sp, #48]
  406150:	stp	x20, x19, [sp, #64]
  406154:	add	x29, sp, #0x10
  406158:	str	xzr, [sp, #8]
  40615c:	cbz	x0, 4068ac <__fxstat64@plt+0x399c>
  406160:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  406164:	add	x1, x1, #0x17a
  406168:	mov	x2, #0xffffffffffffffff    	// #-1
  40616c:	bl	4029d0 <path_join_internal@plt>
  406170:	mov	x19, x0
  406174:	cbz	x0, 4062c0 <__fxstat64@plt+0x33b0>
  406178:	bl	402d10 <random_pool_size@plt>
  40617c:	mov	x22, x0
  406180:	bl	402d20 <malloc@plt>
  406184:	mov	x20, x0
  406188:	cbz	x0, 4062e4 <__fxstat64@plt+0x33d4>
  40618c:	mov	w2, #0x2                   	// #2
  406190:	mov	x0, x20
  406194:	mov	x1, x22
  406198:	bl	402d30 <genuine_random_bytes@plt>
  40619c:	tbnz	w0, #31, 406300 <__fxstat64@plt+0x33f0>
  4061a0:	mov	w1, #0x1ed                 	// #493
  4061a4:	mov	x0, x19
  4061a8:	bl	402d40 <mkdir_parents@plt>
  4061ac:	tbnz	w0, #31, 406340 <__fxstat64@plt+0x3430>
  4061b0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4061b4:	add	x1, x1, #0x7e7
  4061b8:	add	x2, sp, #0x8
  4061bc:	mov	x0, x19
  4061c0:	bl	402d50 <tempfn_random@plt>
  4061c4:	tbnz	w0, #31, 4063e4 <__fxstat64@plt+0x34d4>
  4061c8:	mov	w23, w0
  4061cc:	ldr	x0, [sp, #8]
  4061d0:	mov	w1, #0x81c1                	// #33217
  4061d4:	movk	w1, #0x8, lsl #16
  4061d8:	mov	w2, #0x180                 	// #384
  4061dc:	bl	402d60 <open64@plt>
  4061e0:	mov	w21, w0
  4061e4:	tbnz	w0, #31, 406400 <__fxstat64@plt+0x34f0>
  4061e8:	mov	w0, w21
  4061ec:	mov	x1, x20
  4061f0:	mov	x2, x22
  4061f4:	bl	402d70 <write@plt>
  4061f8:	tbnz	x0, #63, 406444 <__fxstat64@plt+0x3534>
  4061fc:	cmp	x0, x22
  406200:	b.ne	406484 <__fxstat64@plt+0x3574>  // b.any
  406204:	ldr	x0, [sp, #8]
  406208:	mov	x1, x19
  40620c:	bl	402d80 <rename@plt>
  406210:	tbnz	w0, #31, 4064e8 <__fxstat64@plt+0x35d8>
  406214:	ldr	x0, [sp, #8]
  406218:	bl	4027d0 <free@plt>
  40621c:	mov	w0, wzr
  406220:	str	xzr, [sp, #8]
  406224:	bl	402850 <log_get_max_level_realm@plt>
  406228:	cmp	w0, #0x6
  40622c:	b.lt	406260 <__fxstat64@plt+0x3350>  // b.tstop
  406230:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406234:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406238:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40623c:	add	x2, x2, #0x753
  406240:	add	x4, x4, #0xded
  406244:	add	x5, x5, #0xf00
  406248:	mov	w0, #0x6                   	// #6
  40624c:	mov	w3, #0x580                 	// #1408
  406250:	mov	w1, wzr
  406254:	mov	x6, x19
  406258:	mov	x7, x22
  40625c:	bl	402870 <log_internal_realm@plt>
  406260:	adrp	x8, 420000 <__bss_start@@Base>
  406264:	ldrb	w8, [x8, #24]
  406268:	tbnz	w8, #0, 40656c <__fxstat64@plt+0x365c>
  40626c:	bl	402940 <is_efi_boot@plt>
  406270:	tbz	w0, #0, 406534 <__fxstat64@plt+0x3624>
  406274:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  406278:	add	x0, x0, #0xf68
  40627c:	bl	402d90 <getenv_bool@plt>
  406280:	mov	w23, w0
  406284:	tbnz	w0, #31, 406574 <__fxstat64@plt+0x3664>
  406288:	cbnz	w23, 4065f4 <__fxstat64@plt+0x36e4>
  40628c:	mov	w0, wzr
  406290:	bl	402850 <log_get_max_level_realm@plt>
  406294:	cmp	w0, #0x5
  406298:	b.lt	40656c <__fxstat64@plt+0x365c>  // b.tstop
  40629c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4062a0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4062a4:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4062a8:	add	x2, x2, #0x753
  4062ac:	add	x4, x4, #0xded
  4062b0:	add	x5, x5, #0xa
  4062b4:	mov	w0, #0x5                   	// #5
  4062b8:	mov	w3, #0x5a3                 	// #1443
  4062bc:	b	406564 <__fxstat64@plt+0x3654>
  4062c0:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4062c4:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  4062c8:	add	x1, x1, #0x753
  4062cc:	add	x3, x3, #0xded
  4062d0:	mov	w2, #0x558                 	// #1368
  4062d4:	bl	402860 <log_oom_internal@plt>
  4062d8:	mov	w22, w0
  4062dc:	mov	x20, xzr
  4062e0:	b	406394 <__fxstat64@plt+0x3484>
  4062e4:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4062e8:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  4062ec:	add	x1, x1, #0x753
  4062f0:	add	x3, x3, #0xded
  4062f4:	mov	w2, #0x55e                 	// #1374
  4062f8:	bl	402860 <log_oom_internal@plt>
  4062fc:	b	406380 <__fxstat64@plt+0x3470>
  406300:	mov	w21, w0
  406304:	mov	w0, wzr
  406308:	bl	402850 <log_get_max_level_realm@plt>
  40630c:	cmp	w0, #0x3
  406310:	b.lt	406388 <__fxstat64@plt+0x3478>  // b.tstop
  406314:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406318:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  40631c:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406320:	add	x2, x2, #0x753
  406324:	add	x4, x4, #0xded
  406328:	add	x5, x5, #0xe01
  40632c:	mov	w0, #0x3                   	// #3
  406330:	mov	w3, #0x562                 	// #1378
  406334:	mov	w1, w21
  406338:	bl	402870 <log_internal_realm@plt>
  40633c:	b	406380 <__fxstat64@plt+0x3470>
  406340:	mov	w21, w0
  406344:	mov	w0, wzr
  406348:	bl	402850 <log_get_max_level_realm@plt>
  40634c:	cmp	w0, #0x3
  406350:	b.lt	406388 <__fxstat64@plt+0x3478>  // b.tstop
  406354:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406358:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  40635c:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406360:	add	x2, x2, #0x753
  406364:	add	x4, x4, #0xded
  406368:	add	x5, x5, #0xe23
  40636c:	mov	w0, #0x3                   	// #3
  406370:	mov	w3, #0x569                 	// #1385
  406374:	mov	w1, w21
  406378:	mov	x6, x19
  40637c:	bl	402870 <log_internal_realm@plt>
  406380:	mov	w22, w0
  406384:	b	406394 <__fxstat64@plt+0x3484>
  406388:	mov	w8, wzr
  40638c:	neg	w9, w21
  406390:	sub	w22, w8, w9, uxtb
  406394:	mov	w21, #0xffffffff            	// #-1
  406398:	mov	w0, w21
  40639c:	bl	402bf0 <safe_close@plt>
  4063a0:	mov	x0, x19
  4063a4:	bl	4027d0 <free@plt>
  4063a8:	mov	x0, x20
  4063ac:	bl	4027d0 <free@plt>
  4063b0:	ldr	x19, [sp, #8]
  4063b4:	cbz	x19, 4063c8 <__fxstat64@plt+0x34b8>
  4063b8:	mov	x0, x19
  4063bc:	bl	402cb0 <unlink_noerrno@plt>
  4063c0:	mov	x0, x19
  4063c4:	bl	4027d0 <free@plt>
  4063c8:	mov	w0, w22
  4063cc:	ldp	x20, x19, [sp, #64]
  4063d0:	ldp	x22, x21, [sp, #48]
  4063d4:	ldp	x24, x23, [sp, #32]
  4063d8:	ldp	x29, x30, [sp, #16]
  4063dc:	add	sp, sp, #0x50
  4063e0:	ret
  4063e4:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  4063e8:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  4063ec:	add	x1, x1, #0x753
  4063f0:	add	x3, x3, #0xded
  4063f4:	mov	w2, #0x56d                 	// #1389
  4063f8:	mov	w0, wzr
  4063fc:	b	4062f8 <__fxstat64@plt+0x33e8>
  406400:	ldr	x0, [sp, #8]
  406404:	bl	4027d0 <free@plt>
  406408:	mov	w0, wzr
  40640c:	str	xzr, [sp, #8]
  406410:	bl	402850 <log_get_max_level_realm@plt>
  406414:	cmp	w0, #0x3
  406418:	b.lt	4064c0 <__fxstat64@plt+0x35b0>  // b.tstop
  40641c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406420:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406424:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406428:	add	x2, x2, #0x753
  40642c:	add	x4, x4, #0xded
  406430:	add	x5, x5, #0xe50
  406434:	mov	w0, #0x3                   	// #3
  406438:	mov	w3, #0x572                 	// #1394
  40643c:	mov	w1, w21
  406440:	b	40651c <__fxstat64@plt+0x360c>
  406444:	bl	402a60 <__errno_location@plt>
  406448:	ldr	w22, [x0]
  40644c:	mov	w0, wzr
  406450:	bl	402850 <log_get_max_level_realm@plt>
  406454:	cmp	w0, #0x3
  406458:	b.lt	4064cc <__fxstat64@plt+0x35bc>  // b.tstop
  40645c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406460:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406464:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406468:	add	x2, x2, #0x753
  40646c:	add	x4, x4, #0xded
  406470:	add	x5, x5, #0xe80
  406474:	mov	w0, #0x3                   	// #3
  406478:	mov	w3, #0x577                 	// #1399
  40647c:	mov	w1, w22
  406480:	b	40651c <__fxstat64@plt+0x360c>
  406484:	mov	w0, wzr
  406488:	bl	402850 <log_get_max_level_realm@plt>
  40648c:	cmp	w0, #0x3
  406490:	b.lt	4064e0 <__fxstat64@plt+0x35d0>  // b.tstop
  406494:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406498:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  40649c:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4064a0:	mov	w1, #0x5                   	// #5
  4064a4:	add	x2, x2, #0x753
  4064a8:	add	x4, x4, #0xded
  4064ac:	add	x5, x5, #0xea5
  4064b0:	mov	w0, #0x3                   	// #3
  4064b4:	movk	w1, #0x4000, lsl #16
  4064b8:	mov	w3, #0x579                 	// #1401
  4064bc:	b	40651c <__fxstat64@plt+0x360c>
  4064c0:	mov	w8, wzr
  4064c4:	neg	w9, w21
  4064c8:	b	4064d8 <__fxstat64@plt+0x35c8>
  4064cc:	cmp	w22, #0x0
  4064d0:	mov	w8, wzr
  4064d4:	cneg	w9, w22, mi  // mi = first
  4064d8:	sub	w22, w8, w9, uxtb
  4064dc:	b	406398 <__fxstat64@plt+0x3488>
  4064e0:	mov	w22, #0xfffffffb            	// #-5
  4064e4:	b	406398 <__fxstat64@plt+0x3488>
  4064e8:	mov	w0, wzr
  4064ec:	bl	402850 <log_get_max_level_realm@plt>
  4064f0:	cmp	w0, #0x3
  4064f4:	b.lt	406528 <__fxstat64@plt+0x3618>  // b.tstop
  4064f8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4064fc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406500:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406504:	add	x2, x2, #0x753
  406508:	add	x4, x4, #0xded
  40650c:	add	x5, x5, #0xed1
  406510:	mov	w0, #0x3                   	// #3
  406514:	mov	w3, #0x57c                 	// #1404
  406518:	mov	w1, w23
  40651c:	bl	402870 <log_internal_realm@plt>
  406520:	mov	w22, w0
  406524:	b	406398 <__fxstat64@plt+0x3488>
  406528:	mov	w8, wzr
  40652c:	sub	w22, w8, w23, uxtb
  406530:	b	406398 <__fxstat64@plt+0x3488>
  406534:	mov	w0, wzr
  406538:	bl	402850 <log_get_max_level_realm@plt>
  40653c:	cmp	w0, #0x5
  406540:	b.lt	40656c <__fxstat64@plt+0x365c>  // b.tstop
  406544:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406548:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  40654c:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406550:	add	x2, x2, #0x753
  406554:	add	x4, x4, #0xded
  406558:	add	x5, x5, #0xf36
  40655c:	mov	w0, #0x5                   	// #5
  406560:	mov	w3, #0x586                 	// #1414
  406564:	mov	w1, wzr
  406568:	bl	402870 <log_internal_realm@plt>
  40656c:	mov	w22, wzr
  406570:	b	406398 <__fxstat64@plt+0x3488>
  406574:	cmn	w23, #0x6
  406578:	b.eq	4065b4 <__fxstat64@plt+0x36a4>  // b.none
  40657c:	mov	w0, wzr
  406580:	bl	402850 <log_get_max_level_realm@plt>
  406584:	cmp	w0, #0x4
  406588:	b.lt	4065b4 <__fxstat64@plt+0x36a4>  // b.tstop
  40658c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406590:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406594:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406598:	add	x2, x2, #0x753
  40659c:	add	x4, x4, #0xded
  4065a0:	add	x5, x5, #0xf83
  4065a4:	mov	w0, #0x4                   	// #4
  4065a8:	mov	w3, #0x58d                 	// #1421
  4065ac:	mov	w1, w23
  4065b0:	bl	402870 <log_internal_realm@plt>
  4065b4:	bl	402da0 <detect_vm@plt>
  4065b8:	cmp	w0, #0x1
  4065bc:	b.lt	4065f4 <__fxstat64@plt+0x36e4>  // b.tstop
  4065c0:	mov	w0, wzr
  4065c4:	bl	402850 <log_get_max_level_realm@plt>
  4065c8:	cmp	w0, #0x5
  4065cc:	b.lt	40656c <__fxstat64@plt+0x365c>  // b.tstop
  4065d0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4065d4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4065d8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4065dc:	add	x2, x2, #0x753
  4065e0:	add	x4, x4, #0xded
  4065e4:	add	x5, x5, #0xfba
  4065e8:	mov	w0, #0x5                   	// #5
  4065ec:	mov	w3, #0x59f                 	// #1439
  4065f0:	b	406564 <__fxstat64@plt+0x3654>
  4065f4:	mov	x0, #0x674a                	// #26442
  4065f8:	mov	x1, #0xc7b6                	// #51126
  4065fc:	movk	x0, #0x82b0, lsl #16
  406600:	movk	x1, #0xb44, lsl #16
  406604:	adrp	x2, 40a000 <__fxstat64@plt+0x70f0>
  406608:	movk	x0, #0x4c0a, lsl #32
  40660c:	movk	x1, #0xbb29, lsl #32
  406610:	add	x2, x2, #0x59
  406614:	mov	x5, sp
  406618:	movk	x0, #0xcf41, lsl #48
  40661c:	movk	x1, #0x4f8c, lsl #48
  406620:	mov	x3, xzr
  406624:	mov	x4, xzr
  406628:	bl	402db0 <efi_get_variable@plt>
  40662c:	tbnz	w0, #31, 406680 <__fxstat64@plt+0x3770>
  406630:	ldr	x23, [sp]
  406634:	mov	w0, wzr
  406638:	bl	402850 <log_get_max_level_realm@plt>
  40663c:	cmp	x23, x22
  406640:	b.cs	406724 <__fxstat64@plt+0x3814>  // b.hs, b.nlast
  406644:	cmp	w0, #0x7
  406648:	b.lt	40668c <__fxstat64@plt+0x377c>  // b.tstop
  40664c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406650:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406654:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406658:	add	x2, x2, #0x753
  40665c:	add	x4, x4, #0xded
  406660:	add	x5, x5, #0xc0
  406664:	mov	w0, #0x7                   	// #7
  406668:	mov	w3, #0x5b2                 	// #1458
  40666c:	mov	w1, wzr
  406670:	mov	x6, x23
  406674:	mov	x7, x22
  406678:	bl	402870 <log_internal_realm@plt>
  40667c:	b	40668c <__fxstat64@plt+0x377c>
  406680:	mov	w23, w0
  406684:	cmn	w0, #0x2
  406688:	b.ne	406750 <__fxstat64@plt+0x3840>  // b.any
  40668c:	mov	w2, #0x2                   	// #2
  406690:	mov	x0, x20
  406694:	mov	x1, x22
  406698:	bl	402d30 <genuine_random_bytes@plt>
  40669c:	tbnz	w0, #31, 406784 <__fxstat64@plt+0x3874>
  4066a0:	mov	w0, #0x3f                  	// #63
  4066a4:	bl	402a40 <umask@plt>
  4066a8:	mov	w23, w0
  4066ac:	mov	x0, #0x674a                	// #26442
  4066b0:	mov	x1, #0xc7b6                	// #51126
  4066b4:	movk	x0, #0x82b0, lsl #16
  4066b8:	movk	x1, #0xb44, lsl #16
  4066bc:	adrp	x2, 40a000 <__fxstat64@plt+0x70f0>
  4066c0:	movk	x0, #0x4c0a, lsl #32
  4066c4:	movk	x1, #0xbb29, lsl #32
  4066c8:	add	x2, x2, #0x59
  4066cc:	movk	x0, #0xcf41, lsl #48
  4066d0:	movk	x1, #0x4f8c, lsl #48
  4066d4:	mov	x3, x20
  4066d8:	mov	x4, x22
  4066dc:	bl	402af0 <efi_set_variable@plt>
  4066e0:	tbnz	w0, #31, 4067c8 <__fxstat64@plt+0x38b8>
  4066e4:	mov	w0, wzr
  4066e8:	bl	402850 <log_get_max_level_realm@plt>
  4066ec:	cmp	w0, #0x6
  4066f0:	b.lt	406888 <__fxstat64@plt+0x3978>  // b.tstop
  4066f4:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4066f8:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4066fc:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406700:	add	x2, x2, #0x753
  406704:	add	x4, x4, #0xded
  406708:	add	x5, x5, #0x1da
  40670c:	mov	w0, #0x6                   	// #6
  406710:	mov	w3, #0x5c7                 	// #1479
  406714:	mov	w1, wzr
  406718:	mov	x6, x22
  40671c:	bl	402870 <log_internal_realm@plt>
  406720:	b	406888 <__fxstat64@plt+0x3978>
  406724:	cmp	w0, #0x7
  406728:	b.lt	40656c <__fxstat64@plt+0x365c>  // b.tstop
  40672c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406730:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406734:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406738:	add	x2, x2, #0x753
  40673c:	add	x4, x4, #0xded
  406740:	add	x5, x5, #0x94
  406744:	mov	w0, #0x7                   	// #7
  406748:	mov	w3, #0x5ae                 	// #1454
  40674c:	b	406564 <__fxstat64@plt+0x3654>
  406750:	mov	w0, wzr
  406754:	bl	402850 <log_get_max_level_realm@plt>
  406758:	cmp	w0, #0x3
  40675c:	b.lt	4067bc <__fxstat64@plt+0x38ac>  // b.tstop
  406760:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406764:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406768:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  40676c:	add	x2, x2, #0x753
  406770:	add	x4, x4, #0xded
  406774:	add	x5, x5, #0x6b
  406778:	mov	w0, #0x3                   	// #3
  40677c:	mov	w3, #0x5aa                 	// #1450
  406780:	b	406518 <__fxstat64@plt+0x3608>
  406784:	mov	w23, w0
  406788:	mov	w0, wzr
  40678c:	bl	402850 <log_get_max_level_realm@plt>
  406790:	cmp	w0, #0x3
  406794:	b.lt	4067bc <__fxstat64@plt+0x38ac>  // b.tstop
  406798:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40679c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4067a0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4067a4:	add	x2, x2, #0x753
  4067a8:	add	x4, x4, #0xded
  4067ac:	add	x5, x5, #0xe01
  4067b0:	mov	w0, #0x3                   	// #3
  4067b4:	mov	w3, #0x5b7                 	// #1463
  4067b8:	b	406518 <__fxstat64@plt+0x3608>
  4067bc:	mov	w8, wzr
  4067c0:	neg	w9, w23
  4067c4:	b	4064d8 <__fxstat64@plt+0x35c8>
  4067c8:	adrp	x8, 420000 <__bss_start@@Base>
  4067cc:	ldrb	w8, [x8, #32]
  4067d0:	mov	w24, w0
  4067d4:	tbz	w8, #0, 406818 <__fxstat64@plt+0x3908>
  4067d8:	mov	w0, wzr
  4067dc:	bl	402850 <log_get_max_level_realm@plt>
  4067e0:	cmn	w24, #0x16
  4067e4:	b.ne	406858 <__fxstat64@plt+0x3948>  // b.any
  4067e8:	cmp	w0, #0x4
  4067ec:	b.lt	406888 <__fxstat64@plt+0x3978>  // b.tstop
  4067f0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4067f4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4067f8:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4067fc:	add	x2, x2, #0x753
  406800:	add	x4, x4, #0xded
  406804:	add	x5, x5, #0x148
  406808:	mov	w0, #0x4                   	// #4
  40680c:	mov	w1, #0xffffffea            	// #-22
  406810:	mov	w3, #0x5c3                 	// #1475
  406814:	b	406884 <__fxstat64@plt+0x3974>
  406818:	mov	w0, wzr
  40681c:	bl	402850 <log_get_max_level_realm@plt>
  406820:	cmp	w0, #0x3
  406824:	b.lt	406894 <__fxstat64@plt+0x3984>  // b.tstop
  406828:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40682c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406830:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406834:	add	x2, x2, #0x753
  406838:	add	x4, x4, #0xded
  40683c:	add	x5, x5, #0x113
  406840:	mov	w0, #0x3                   	// #3
  406844:	mov	w3, #0x5c0                 	// #1472
  406848:	mov	w1, w24
  40684c:	bl	402870 <log_internal_realm@plt>
  406850:	mov	w22, w0
  406854:	b	4068a0 <__fxstat64@plt+0x3990>
  406858:	cmp	w0, #0x4
  40685c:	b.lt	406888 <__fxstat64@plt+0x3978>  // b.tstop
  406860:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406864:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406868:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  40686c:	add	x2, x2, #0x753
  406870:	add	x4, x4, #0xded
  406874:	add	x5, x5, #0x19b
  406878:	mov	w0, #0x4                   	// #4
  40687c:	mov	w3, #0x5c5                 	// #1477
  406880:	mov	w1, w24
  406884:	bl	402870 <log_internal_realm@plt>
  406888:	and	w0, w23, #0x1ff
  40688c:	bl	402a40 <umask@plt>
  406890:	b	40656c <__fxstat64@plt+0x365c>
  406894:	mov	w8, wzr
  406898:	neg	w9, w24
  40689c:	sub	w22, w8, w9, uxtb
  4068a0:	and	w0, w23, #0x1ff
  4068a4:	bl	402a40 <umask@plt>
  4068a8:	b	406398 <__fxstat64@plt+0x3488>
  4068ac:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4068b0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4068b4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4068b8:	add	x1, x1, #0xdc3
  4068bc:	add	x2, x2, #0x753
  4068c0:	add	x4, x4, #0xdc7
  4068c4:	mov	w3, #0x554                 	// #1364
  4068c8:	bl	4028c0 <log_assert_failed_realm@plt>
  4068cc:	stp	x29, x30, [sp, #-32]!
  4068d0:	stp	x20, x19, [sp, #16]
  4068d4:	adrp	x20, 420000 <__bss_start@@Base>
  4068d8:	ldr	x1, [x20, #8]
  4068dc:	mov	x29, sp
  4068e0:	cbz	x1, 406930 <__fxstat64@plt+0x3a20>
  4068e4:	mov	w0, #0xffffff9c            	// #-100
  4068e8:	bl	402dc0 <syncfs_path@plt>
  4068ec:	tbz	w0, #31, 406930 <__fxstat64@plt+0x3a20>
  4068f0:	mov	w19, w0
  4068f4:	mov	w0, wzr
  4068f8:	bl	402850 <log_get_max_level_realm@plt>
  4068fc:	cmp	w0, #0x3
  406900:	b.lt	406930 <__fxstat64@plt+0x3a20>  // b.tstop
  406904:	ldr	x6, [x20, #8]
  406908:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40690c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406910:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406914:	add	x2, x2, #0x753
  406918:	add	x4, x4, #0x220
  40691c:	add	x5, x5, #0x230
  406920:	mov	w0, #0x3                   	// #3
  406924:	mov	w3, #0x5d3                 	// #1491
  406928:	mov	w1, w19
  40692c:	bl	402870 <log_internal_realm@plt>
  406930:	adrp	x20, 420000 <__bss_start@@Base>
  406934:	ldr	x1, [x20, #16]
  406938:	cbz	x1, 406990 <__fxstat64@plt+0x3a80>
  40693c:	mov	w0, #0xffffff9c            	// #-100
  406940:	bl	402dc0 <syncfs_path@plt>
  406944:	tbz	w0, #31, 406990 <__fxstat64@plt+0x3a80>
  406948:	mov	w19, w0
  40694c:	mov	w0, wzr
  406950:	bl	402850 <log_get_max_level_realm@plt>
  406954:	cmp	w0, #0x3
  406958:	b.lt	406990 <__fxstat64@plt+0x3a80>  // b.tstop
  40695c:	ldr	x6, [x20, #16]
  406960:	mov	w1, w19
  406964:	ldp	x20, x19, [sp, #16]
  406968:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40696c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406970:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406974:	add	x2, x2, #0x753
  406978:	add	x4, x4, #0x220
  40697c:	add	x5, x5, #0x257
  406980:	mov	w0, #0x3                   	// #3
  406984:	mov	w3, #0x5d9                 	// #1497
  406988:	ldp	x29, x30, [sp], #32
  40698c:	b	402870 <log_internal_realm@plt>
  406990:	ldp	x20, x19, [sp, #16]
  406994:	ldp	x29, x30, [sp], #32
  406998:	ret
  40699c:	stp	x29, x30, [sp, #-96]!
  4069a0:	str	x27, [sp, #16]
  4069a4:	stp	x26, x25, [sp, #32]
  4069a8:	stp	x24, x23, [sp, #48]
  4069ac:	stp	x22, x21, [sp, #64]
  4069b0:	stp	x20, x19, [sp, #80]
  4069b4:	mov	x29, sp
  4069b8:	sub	sp, sp, #0x10
  4069bc:	mov	w19, w6
  4069c0:	mov	x20, x5
  4069c4:	mov	x21, x4
  4069c8:	mov	x22, x3
  4069cc:	mov	x23, x2
  4069d0:	mov	w24, w1
  4069d4:	mov	x26, x0
  4069d8:	bl	402940 <is_efi_boot@plt>
  4069dc:	tbz	w0, #0, 406a58 <__fxstat64@plt+0x3b48>
  4069e0:	cbz	x26, 406a98 <__fxstat64@plt+0x3b88>
  4069e4:	ldrb	w8, [x26]
  4069e8:	adrp	x27, 409000 <__fxstat64@plt+0x60f0>
  4069ec:	add	x27, x27, #0x92f
  4069f0:	cbz	w8, 406aa4 <__fxstat64@plt+0x3b94>
  4069f4:	mov	x0, x26
  4069f8:	bl	402b20 <strlen@plt>
  4069fc:	add	x8, x0, #0x23
  406a00:	cmp	x8, #0x400, lsl #12
  406a04:	b.hi	406d64 <__fxstat64@plt+0x3e54>  // b.pmore
  406a08:	add	x8, x8, #0xf
  406a0c:	mov	x9, sp
  406a10:	and	x8, x8, #0xfffffffffffffff0
  406a14:	sub	x25, x9, x8
  406a18:	mov	sp, x25
  406a1c:	mov	x0, x25
  406a20:	mov	x1, x26
  406a24:	bl	402ba0 <stpcpy@plt>
  406a28:	mov	x8, x0
  406a2c:	cmp	x0, x25
  406a30:	b.ls	406a44 <__fxstat64@plt+0x3b34>  // b.plast
  406a34:	mov	x0, x8
  406a38:	ldrb	w9, [x0, #-1]!
  406a3c:	cmp	w9, #0x2f
  406a40:	b.eq	406a28 <__fxstat64@plt+0x3b18>  // b.none
  406a44:	ldp	q1, q0, [x27]
  406a48:	mov	w9, #0x69                  	// #105
  406a4c:	strh	w9, [x8, #32]
  406a50:	stp	q1, q0, [x8]
  406a54:	b	406aa8 <__fxstat64@plt+0x3b98>
  406a58:	mov	w0, wzr
  406a5c:	bl	402850 <log_get_max_level_realm@plt>
  406a60:	cmp	w0, #0x4
  406a64:	mov	w19, wzr
  406a68:	b.lt	406d40 <__fxstat64@plt+0x3e30>  // b.tstop
  406a6c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406a70:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406a74:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406a78:	add	x2, x2, #0x753
  406a7c:	add	x4, x4, #0x27c
  406a80:	add	x5, x5, #0xf36
  406a84:	mov	w0, #0x4                   	// #4
  406a88:	mov	w3, #0x30d                 	// #781
  406a8c:	mov	w1, wzr
  406a90:	bl	402870 <log_internal_realm@plt>
  406a94:	b	406bf0 <__fxstat64@plt+0x3ce0>
  406a98:	adrp	x25, 409000 <__fxstat64@plt+0x60f0>
  406a9c:	add	x25, x25, #0x92f
  406aa0:	b	406aa8 <__fxstat64@plt+0x3b98>
  406aa4:	mov	x25, x27
  406aa8:	mov	x0, x25
  406aac:	mov	w1, wzr
  406ab0:	bl	4029c0 <access@plt>
  406ab4:	tbnz	w0, #31, 406be0 <__fxstat64@plt+0x3cd0>
  406ab8:	add	x2, x29, #0x18
  406abc:	mov	x0, x21
  406ac0:	mov	x1, x20
  406ac4:	bl	407808 <__fxstat64@plt+0x48f8>
  406ac8:	mov	w26, w0
  406acc:	tbnz	w0, #31, 406bf8 <__fxstat64@plt+0x3ce8>
  406ad0:	ldrh	w25, [x29, #24]
  406ad4:	cbz	w26, 406adc <__fxstat64@plt+0x3bcc>
  406ad8:	tbz	w19, #0, 406b48 <__fxstat64@plt+0x3c38>
  406adc:	adrp	x1, 40a000 <__fxstat64@plt+0x70f0>
  406ae0:	adrp	x7, 409000 <__fxstat64@plt+0x60f0>
  406ae4:	add	x1, x1, #0x379
  406ae8:	add	x7, x7, #0x92f
  406aec:	mov	w0, w25
  406af0:	mov	w2, w24
  406af4:	mov	x3, x23
  406af8:	mov	x4, x22
  406afc:	mov	x5, x21
  406b00:	mov	x6, x20
  406b04:	bl	402dd0 <efi_add_boot_option@plt>
  406b08:	mov	w20, w0
  406b0c:	mov	w0, wzr
  406b10:	bl	402850 <log_get_max_level_realm@plt>
  406b14:	tbnz	w20, #31, 406cd0 <__fxstat64@plt+0x3dc0>
  406b18:	cmp	w0, #0x6
  406b1c:	b.lt	406b48 <__fxstat64@plt+0x3c38>  // b.tstop
  406b20:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406b24:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406b28:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406b2c:	add	x2, x2, #0x753
  406b30:	add	x4, x4, #0x27c
  406b34:	add	x5, x5, #0x3b9
  406b38:	mov	w0, #0x6                   	// #6
  406b3c:	mov	w3, #0x327                 	// #807
  406b40:	mov	w1, wzr
  406b44:	bl	402870 <log_internal_realm@plt>
  406b48:	sub	x0, x29, #0x8
  406b4c:	strh	w25, [x29, #28]
  406b50:	stur	xzr, [x29, #-8]
  406b54:	bl	4029f0 <efi_get_boot_order@plt>
  406b58:	cmp	w0, #0x0
  406b5c:	b.le	406c80 <__fxstat64@plt+0x3d70>
  406b60:	ldur	x1, [x29, #-8]
  406b64:	mov	w20, w0
  406b68:	cmp	w0, #0x1
  406b6c:	b.ne	406b7c <__fxstat64@plt+0x3c6c>  // b.any
  406b70:	ldrh	w8, [x1]
  406b74:	cmp	w8, w25
  406b78:	b.eq	406cc8 <__fxstat64@plt+0x3db8>  // b.none
  406b7c:	mov	x8, xzr
  406b80:	mov	w9, w20
  406b84:	ldrh	w10, [x1, x8]
  406b88:	cmp	w10, w25
  406b8c:	b.eq	406ca8 <__fxstat64@plt+0x3d98>  // b.none
  406b90:	subs	x9, x9, #0x1
  406b94:	add	x8, x8, #0x2
  406b98:	b.ne	406b84 <__fxstat64@plt+0x3c74>  // b.any
  406b9c:	add	w8, w20, #0x1
  406ba0:	sxtw	x21, w8
  406ba4:	mov	w2, #0x2                   	// #2
  406ba8:	mov	x0, x1
  406bac:	mov	x1, x21
  406bb0:	bl	402de0 <reallocarray@plt>
  406bb4:	cbz	x0, 406d18 <__fxstat64@plt+0x3e08>
  406bb8:	mov	x1, x0
  406bbc:	stur	x0, [x29, #-8]
  406bc0:	tbz	w19, #0, 406d20 <__fxstat64@plt+0x3e10>
  406bc4:	add	x0, x1, #0x2
  406bc8:	sbfiz	x2, x20, #1, #32
  406bcc:	bl	402ad0 <memmove@plt>
  406bd0:	ldrh	w8, [x29, #28]
  406bd4:	ldur	x1, [x29, #-8]
  406bd8:	strh	w8, [x1]
  406bdc:	b	406d28 <__fxstat64@plt+0x3e18>
  406be0:	bl	402a60 <__errno_location@plt>
  406be4:	ldr	w19, [x0]
  406be8:	cmp	w19, #0x2
  406bec:	b.ne	406c40 <__fxstat64@plt+0x3d30>  // b.any
  406bf0:	mov	w19, wzr
  406bf4:	b	406d40 <__fxstat64@plt+0x3e30>
  406bf8:	mov	w0, wzr
  406bfc:	bl	402850 <log_get_max_level_realm@plt>
  406c00:	cmp	w0, #0x3
  406c04:	b.lt	406c8c <__fxstat64@plt+0x3d7c>  // b.tstop
  406c08:	adrp	x8, 40a000 <__fxstat64@plt+0x70f0>
  406c0c:	adrp	x9, 40a000 <__fxstat64@plt+0x70f0>
  406c10:	add	x8, x8, #0x34e
  406c14:	add	x9, x9, #0x308
  406c18:	cmn	w26, #0x2
  406c1c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406c20:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406c24:	csel	x5, x9, x8, eq  // eq = none
  406c28:	add	x2, x2, #0x753
  406c2c:	add	x4, x4, #0x27c
  406c30:	mov	w0, #0x3                   	// #3
  406c34:	mov	w3, #0x31e                 	// #798
  406c38:	mov	w1, w26
  406c3c:	b	406cfc <__fxstat64@plt+0x3dec>
  406c40:	mov	w0, wzr
  406c44:	bl	402850 <log_get_max_level_realm@plt>
  406c48:	cmp	w0, #0x3
  406c4c:	b.lt	406c98 <__fxstat64@plt+0x3d88>  // b.tstop
  406c50:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406c54:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406c58:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406c5c:	add	x2, x2, #0x753
  406c60:	add	x4, x4, #0x27c
  406c64:	add	x5, x5, #0x2f1
  406c68:	mov	w0, #0x3                   	// #3
  406c6c:	mov	w3, #0x316                 	// #790
  406c70:	mov	w1, w19
  406c74:	mov	x6, x25
  406c78:	bl	402870 <log_internal_realm@plt>
  406c7c:	b	406d00 <__fxstat64@plt+0x3df0>
  406c80:	add	x0, x29, #0x1c
  406c84:	mov	w1, #0x1                   	// #1
  406c88:	b	406d30 <__fxstat64@plt+0x3e20>
  406c8c:	mov	w8, wzr
  406c90:	neg	w9, w26
  406c94:	b	406d10 <__fxstat64@plt+0x3e00>
  406c98:	cmp	w19, #0x0
  406c9c:	mov	w8, wzr
  406ca0:	cneg	w9, w19, mi  // mi = first
  406ca4:	b	406d10 <__fxstat64@plt+0x3e00>
  406ca8:	tbz	w19, #0, 406cc8 <__fxstat64@plt+0x3db8>
  406cac:	add	x0, x1, #0x2
  406cb0:	and	x2, x8, #0xfffffffe
  406cb4:	bl	402ad0 <memmove@plt>
  406cb8:	ldur	x0, [x29, #-8]
  406cbc:	sxtw	x1, w20
  406cc0:	strh	w25, [x0]
  406cc4:	b	406d30 <__fxstat64@plt+0x3e20>
  406cc8:	mov	w19, wzr
  406ccc:	b	406d38 <__fxstat64@plt+0x3e28>
  406cd0:	cmp	w0, #0x3
  406cd4:	b.lt	406d08 <__fxstat64@plt+0x3df8>  // b.tstop
  406cd8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406cdc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406ce0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  406ce4:	add	x2, x2, #0x753
  406ce8:	add	x4, x4, #0x27c
  406cec:	add	x5, x5, #0x38c
  406cf0:	mov	w0, #0x3                   	// #3
  406cf4:	mov	w3, #0x325                 	// #805
  406cf8:	mov	w1, w20
  406cfc:	bl	402870 <log_internal_realm@plt>
  406d00:	mov	w19, w0
  406d04:	b	406d40 <__fxstat64@plt+0x3e30>
  406d08:	mov	w8, wzr
  406d0c:	neg	w9, w20
  406d10:	sub	w19, w8, w9, uxtb
  406d14:	b	406d40 <__fxstat64@plt+0x3e30>
  406d18:	mov	w19, #0xfffffff4            	// #-12
  406d1c:	b	406d38 <__fxstat64@plt+0x3e28>
  406d20:	ldrh	w8, [x29, #28]
  406d24:	strh	w8, [x1, w20, sxtw #1]
  406d28:	mov	x0, x1
  406d2c:	mov	x1, x21
  406d30:	bl	402ae0 <efi_set_boot_order@plt>
  406d34:	mov	w19, w0
  406d38:	ldur	x0, [x29, #-8]
  406d3c:	bl	4027d0 <free@plt>
  406d40:	mov	w0, w19
  406d44:	mov	sp, x29
  406d48:	ldp	x20, x19, [sp, #80]
  406d4c:	ldp	x22, x21, [sp, #64]
  406d50:	ldp	x24, x23, [sp, #48]
  406d54:	ldp	x26, x25, [sp, #32]
  406d58:	ldr	x27, [sp, #16]
  406d5c:	ldp	x29, x30, [sp], #96
  406d60:	ret
  406d64:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  406d68:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406d6c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  406d70:	add	x1, x1, #0x475
  406d74:	add	x2, x2, #0x753
  406d78:	add	x4, x4, #0x28e
  406d7c:	mov	w3, #0x311                 	// #785
  406d80:	mov	w0, wzr
  406d84:	bl	4028c0 <log_assert_failed_realm@plt>
  406d88:	stp	x29, x30, [sp, #-32]!
  406d8c:	mov	x2, #0xffffffffffffffff    	// #-1
  406d90:	stp	x20, x19, [sp, #16]
  406d94:	mov	x29, sp
  406d98:	bl	4029d0 <path_join_internal@plt>
  406d9c:	mov	w1, #0x1c0                 	// #448
  406da0:	mov	x19, x0
  406da4:	bl	402df0 <mkdir@plt>
  406da8:	tbnz	w0, #31, 406df0 <__fxstat64@plt+0x3ee0>
  406dac:	mov	w0, wzr
  406db0:	bl	402850 <log_get_max_level_realm@plt>
  406db4:	cmp	w0, #0x6
  406db8:	mov	w20, wzr
  406dbc:	b.lt	406e04 <__fxstat64@plt+0x3ef4>  // b.tstop
  406dc0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406dc4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406dc8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406dcc:	add	x2, x2, #0x753
  406dd0:	add	x4, x4, #0x951
  406dd4:	add	x5, x5, #0x975
  406dd8:	mov	w0, #0x6                   	// #6
  406ddc:	mov	w3, #0x241                 	// #577
  406de0:	mov	w1, wzr
  406de4:	mov	x6, x19
  406de8:	bl	402870 <log_internal_realm@plt>
  406dec:	b	406e00 <__fxstat64@plt+0x3ef0>
  406df0:	bl	402a60 <__errno_location@plt>
  406df4:	ldr	w20, [x0]
  406df8:	cmp	w20, #0x11
  406dfc:	b.ne	406e1c <__fxstat64@plt+0x3f0c>  // b.any
  406e00:	mov	w20, wzr
  406e04:	mov	x0, x19
  406e08:	bl	4027d0 <free@plt>
  406e0c:	mov	w0, w20
  406e10:	ldp	x20, x19, [sp, #16]
  406e14:	ldp	x29, x30, [sp], #32
  406e18:	ret
  406e1c:	mov	w0, wzr
  406e20:	bl	402850 <log_get_max_level_realm@plt>
  406e24:	cmp	w0, #0x3
  406e28:	b.lt	406e60 <__fxstat64@plt+0x3f50>  // b.tstop
  406e2c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  406e30:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  406e34:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  406e38:	add	x2, x2, #0x753
  406e3c:	add	x4, x4, #0x951
  406e40:	add	x5, x5, #0x95b
  406e44:	mov	w0, #0x3                   	// #3
  406e48:	mov	w3, #0x23f                 	// #575
  406e4c:	mov	w1, w20
  406e50:	mov	x6, x19
  406e54:	bl	402870 <log_internal_realm@plt>
  406e58:	mov	w20, w0
  406e5c:	b	406e04 <__fxstat64@plt+0x3ef4>
  406e60:	cmp	w20, #0x0
  406e64:	mov	w8, wzr
  406e68:	cneg	w9, w20, mi  // mi = first
  406e6c:	sub	w20, w8, w9, uxtb
  406e70:	b	406e04 <__fxstat64@plt+0x3ef4>
  406e74:	stp	x29, x30, [sp, #-80]!
  406e78:	str	x25, [sp, #16]
  406e7c:	stp	x24, x23, [sp, #32]
  406e80:	stp	x22, x21, [sp, #48]
  406e84:	stp	x20, x19, [sp, #64]
  406e88:	mov	x29, sp
  406e8c:	sub	sp, sp, #0x20
  406e90:	mov	x20, x0
  406e94:	adrp	x0, 409000 <__fxstat64@plt+0x60f0>
  406e98:	mov	w19, w2
  406e9c:	mov	x22, x1
  406ea0:	mov	x23, xzr
  406ea4:	mov	x21, xzr
  406ea8:	add	x0, x0, #0xa30
  406eac:	sub	x24, x29, #0x18
  406eb0:	stp	x0, x1, [x29, #-24]
  406eb4:	bl	402b20 <strlen@plt>
  406eb8:	add	x21, x0, x21
  406ebc:	cbnz	x23, 406ed0 <__fxstat64@plt+0x3fc0>
  406ec0:	add	x8, x24, x23, lsl #3
  406ec4:	ldr	x0, [x8, #8]
  406ec8:	mov	w23, #0x1                   	// #1
  406ecc:	cbnz	x0, 406eb4 <__fxstat64@plt+0x3fa4>
  406ed0:	add	x8, x21, #0x1
  406ed4:	cmp	x8, #0x400, lsl #12
  406ed8:	b.hi	4070e8 <__fxstat64@plt+0x41d8>  // b.pmore
  406edc:	add	x8, x8, #0xf
  406ee0:	mov	x9, sp
  406ee4:	and	x8, x8, #0xfffffffffffffff0
  406ee8:	sub	x21, x9, x8
  406eec:	mov	sp, x21
  406ef0:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  406ef4:	mov	x23, xzr
  406ef8:	add	x1, x1, #0xa30
  406efc:	sub	x24, x29, #0x18
  406f00:	mov	x0, x21
  406f04:	bl	402ba0 <stpcpy@plt>
  406f08:	cbnz	x23, 406f1c <__fxstat64@plt+0x400c>
  406f0c:	add	x8, x24, x23, lsl #3
  406f10:	ldr	x1, [x8, #8]
  406f14:	mov	w23, #0x1                   	// #1
  406f18:	cbnz	x1, 406f04 <__fxstat64@plt+0x3ff4>
  406f1c:	adrp	x8, 409000 <__fxstat64@plt+0x60f0>
  406f20:	add	x8, x8, #0xa80
  406f24:	strb	wzr, [x0]
  406f28:	stp	x20, x8, [x29, #-24]
  406f2c:	stur	x22, [x29, #-8]
  406f30:	cbz	x20, 406f6c <__fxstat64@plt+0x405c>
  406f34:	sub	x8, x29, #0x18
  406f38:	mov	x24, xzr
  406f3c:	mov	x23, xzr
  406f40:	add	x25, x8, #0x8
  406f44:	mov	x0, x20
  406f48:	bl	402b20 <strlen@plt>
  406f4c:	cmp	x24, #0x10
  406f50:	add	x23, x0, x23
  406f54:	b.eq	406f64 <__fxstat64@plt+0x4054>  // b.none
  406f58:	ldr	x0, [x25, x24]
  406f5c:	add	x24, x24, #0x8
  406f60:	cbnz	x0, 406f48 <__fxstat64@plt+0x4038>
  406f64:	add	x8, x23, #0x1
  406f68:	b	406f70 <__fxstat64@plt+0x4060>
  406f6c:	mov	w8, #0x1                   	// #1
  406f70:	cmp	x8, #0x400, lsl #12
  406f74:	b.hi	407108 <__fxstat64@plt+0x41f8>  // b.pmore
  406f78:	add	x8, x8, #0xf
  406f7c:	mov	x9, sp
  406f80:	and	x8, x8, #0xfffffffffffffff0
  406f84:	sub	x23, x9, x8
  406f88:	mov	sp, x23
  406f8c:	mov	x0, x23
  406f90:	cbz	x20, 406fc0 <__fxstat64@plt+0x40b0>
  406f94:	sub	x8, x29, #0x18
  406f98:	mov	x24, xzr
  406f9c:	add	x25, x8, #0x8
  406fa0:	mov	x0, x23
  406fa4:	mov	x1, x20
  406fa8:	bl	402ba0 <stpcpy@plt>
  406fac:	cmp	x24, #0x10
  406fb0:	b.eq	406fc0 <__fxstat64@plt+0x40b0>  // b.none
  406fb4:	ldr	x1, [x25, x24]
  406fb8:	add	x24, x24, #0x8
  406fbc:	cbnz	x1, 406fa8 <__fxstat64@plt+0x4098>
  406fc0:	strb	wzr, [x0]
  406fc4:	and	w2, w19, #0x1
  406fc8:	mov	x0, x21
  406fcc:	mov	x1, x23
  406fd0:	bl	40714c <__fxstat64@plt+0x423c>
  406fd4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  406fd8:	mov	w23, w0
  406fdc:	add	x1, x1, #0xa8e
  406fe0:	mov	w2, #0xc                   	// #12
  406fe4:	mov	x0, x22
  406fe8:	bl	402e00 <strncmp@plt>
  406fec:	cbnz	w0, 4070c8 <__fxstat64@plt+0x41b8>
  406ff0:	adrp	x9, 409000 <__fxstat64@plt+0x60f0>
  406ff4:	add	x8, x22, #0xc
  406ff8:	add	x9, x9, #0xa9b
  406ffc:	stp	x20, x9, [x29, #-24]
  407000:	stur	x8, [x29, #-8]
  407004:	cbz	x20, 407040 <__fxstat64@plt+0x4130>
  407008:	sub	x8, x29, #0x18
  40700c:	mov	x24, xzr
  407010:	mov	x22, xzr
  407014:	add	x25, x8, #0x8
  407018:	mov	x0, x20
  40701c:	bl	402b20 <strlen@plt>
  407020:	cmp	x24, #0x10
  407024:	add	x22, x0, x22
  407028:	b.eq	407038 <__fxstat64@plt+0x4128>  // b.none
  40702c:	ldr	x0, [x25, x24]
  407030:	add	x24, x24, #0x8
  407034:	cbnz	x0, 40701c <__fxstat64@plt+0x410c>
  407038:	add	x8, x22, #0x1
  40703c:	b	407044 <__fxstat64@plt+0x4134>
  407040:	mov	w8, #0x1                   	// #1
  407044:	cmp	x8, #0x400, lsl #12
  407048:	b.hi	407128 <__fxstat64@plt+0x4218>  // b.pmore
  40704c:	add	x8, x8, #0xf
  407050:	mov	x9, sp
  407054:	and	x8, x8, #0xfffffffffffffff0
  407058:	sub	x22, x9, x8
  40705c:	mov	sp, x22
  407060:	mov	x0, x22
  407064:	cbz	x20, 407094 <__fxstat64@plt+0x4184>
  407068:	sub	x8, x29, #0x18
  40706c:	mov	x24, xzr
  407070:	add	x25, x8, #0x8
  407074:	mov	x0, x22
  407078:	mov	x1, x20
  40707c:	bl	402ba0 <stpcpy@plt>
  407080:	cmp	x24, #0x10
  407084:	b.eq	407094 <__fxstat64@plt+0x4184>  // b.none
  407088:	ldr	x20, [x25, x24]
  40708c:	add	x24, x24, #0x8
  407090:	cbnz	x20, 407078 <__fxstat64@plt+0x4168>
  407094:	strb	wzr, [x0]
  407098:	mov	w1, #0x2f                  	// #47
  40709c:	mov	x0, x22
  4070a0:	bl	402e10 <strrchr@plt>
  4070a4:	add	x0, x0, #0x1
  4070a8:	bl	402e20 <ascii_strupper@plt>
  4070ac:	and	w2, w19, #0x1
  4070b0:	mov	x0, x21
  4070b4:	mov	x1, x22
  4070b8:	bl	40714c <__fxstat64@plt+0x423c>
  4070bc:	cmp	w0, #0x0
  4070c0:	ccmp	w23, #0x0, #0x0, lt  // lt = tstop
  4070c4:	csel	w23, w0, w23, eq  // eq = none
  4070c8:	mov	w0, w23
  4070cc:	mov	sp, x29
  4070d0:	ldp	x20, x19, [sp, #64]
  4070d4:	ldp	x22, x21, [sp, #48]
  4070d8:	ldp	x24, x23, [sp, #32]
  4070dc:	ldr	x25, [sp, #16]
  4070e0:	ldp	x29, x30, [sp], #80
  4070e4:	ret
  4070e8:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4070ec:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4070f0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4070f4:	add	x1, x1, #0x475
  4070f8:	add	x2, x2, #0x753
  4070fc:	add	x4, x4, #0xa4b
  407100:	mov	w3, #0x26a                 	// #618
  407104:	b	407144 <__fxstat64@plt+0x4234>
  407108:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  40710c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407110:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407114:	add	x1, x1, #0x475
  407118:	add	x2, x2, #0x753
  40711c:	add	x4, x4, #0xa4b
  407120:	mov	w3, #0x26b                 	// #619
  407124:	b	407144 <__fxstat64@plt+0x4234>
  407128:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  40712c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407130:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407134:	add	x1, x1, #0x475
  407138:	add	x2, x2, #0x753
  40713c:	add	x4, x4, #0xa4b
  407140:	mov	w3, #0x274                 	// #628
  407144:	mov	w0, wzr
  407148:	bl	4028c0 <log_assert_failed_realm@plt>
  40714c:	sub	sp, sp, #0x70
  407150:	stp	x22, x21, [sp, #80]
  407154:	mov	x22, x1
  407158:	mov	w1, #0x100                 	// #256
  40715c:	movk	w1, #0x8, lsl #16
  407160:	stp	x29, x30, [sp, #32]
  407164:	stp	x26, x25, [sp, #48]
  407168:	stp	x24, x23, [sp, #64]
  40716c:	stp	x20, x19, [sp, #96]
  407170:	add	x29, sp, #0x20
  407174:	mov	w20, w2
  407178:	mov	x21, x0
  40717c:	str	xzr, [sp, #8]
  407180:	bl	402d60 <open64@plt>
  407184:	mov	w19, w0
  407188:	tbnz	w0, #31, 407288 <__fxstat64@plt+0x4378>
  40718c:	tbz	w20, #0, 4072d4 <__fxstat64@plt+0x43c4>
  407190:	mov	w20, #0xffffffff            	// #-1
  407194:	add	x2, sp, #0x8
  407198:	mov	x0, x22
  40719c:	mov	x1, xzr
  4071a0:	bl	402d50 <tempfn_random@plt>
  4071a4:	tbnz	w0, #31, 407398 <__fxstat64@plt+0x4488>
  4071a8:	mov	w0, wzr
  4071ac:	bl	402a40 <umask@plt>
  4071b0:	ldr	x8, [sp, #8]
  4071b4:	mov	w1, #0x80c1                	// #32961
  4071b8:	mov	w24, w0
  4071bc:	movk	w1, #0x8, lsl #16
  4071c0:	mov	w2, #0x1a4                 	// #420
  4071c4:	mov	x0, x8
  4071c8:	bl	402d60 <open64@plt>
  4071cc:	mov	w20, w0
  4071d0:	tbnz	w0, #31, 407404 <__fxstat64@plt+0x44f4>
  4071d4:	and	w0, w24, #0x1ff
  4071d8:	bl	402a40 <umask@plt>
  4071dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4071e0:	mov	w3, #0x1                   	// #1
  4071e4:	mov	w0, w19
  4071e8:	mov	w1, w20
  4071ec:	mov	x4, xzr
  4071f0:	mov	x5, xzr
  4071f4:	mov	x6, xzr
  4071f8:	mov	x7, xzr
  4071fc:	bl	402e30 <copy_bytes_full@plt>
  407200:	tbnz	w0, #31, 407450 <__fxstat64@plt+0x4540>
  407204:	mov	w0, w19
  407208:	mov	w1, w20
  40720c:	mov	w2, wzr
  407210:	bl	402e40 <copy_times@plt>
  407214:	mov	w0, w20
  407218:	bl	402e50 <fsync@plt>
  40721c:	tbnz	w0, #31, 4074f8 <__fxstat64@plt+0x45e8>
  407220:	mov	w0, w20
  407224:	bl	402e60 <fsync_directory_of_file@plt>
  407228:	ldr	x1, [sp, #8]
  40722c:	mov	w0, #0xffffff9c            	// #-100
  407230:	mov	w2, #0xffffff9c            	// #-100
  407234:	mov	x3, x22
  407238:	bl	402e70 <renameat@plt>
  40723c:	tbnz	w0, #31, 407568 <__fxstat64@plt+0x4658>
  407240:	mov	w0, wzr
  407244:	bl	402850 <log_get_max_level_realm@plt>
  407248:	cmp	w0, #0x6
  40724c:	b.lt	407280 <__fxstat64@plt+0x4370>  // b.tstop
  407250:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407254:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407258:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40725c:	add	x2, x2, #0x753
  407260:	add	x4, x4, #0xaaa
  407264:	add	x5, x5, #0xb76
  407268:	mov	w0, #0x6                   	// #6
  40726c:	mov	w3, #0x234                 	// #564
  407270:	mov	w1, wzr
  407274:	mov	x6, x21
  407278:	mov	x7, x22
  40727c:	bl	402870 <log_internal_realm@plt>
  407280:	mov	w23, wzr
  407284:	b	40774c <__fxstat64@plt+0x483c>
  407288:	bl	402a60 <__errno_location@plt>
  40728c:	ldr	w20, [x0]
  407290:	mov	w0, wzr
  407294:	bl	402850 <log_get_max_level_realm@plt>
  407298:	cmp	w0, #0x3
  40729c:	b.lt	407380 <__fxstat64@plt+0x4470>  // b.tstop
  4072a0:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4072a4:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4072a8:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4072ac:	add	x2, x2, #0x753
  4072b0:	add	x4, x4, #0xaaa
  4072b4:	add	x5, x5, #0xac7
  4072b8:	mov	w0, #0x3                   	// #3
  4072bc:	mov	w3, #0x203                 	// #515
  4072c0:	mov	w1, w20
  4072c4:	mov	x6, x21
  4072c8:	bl	402870 <log_internal_realm@plt>
  4072cc:	mov	w23, w0
  4072d0:	b	407390 <__fxstat64@plt+0x4480>
  4072d4:	mov	w1, #0x100                 	// #256
  4072d8:	movk	w1, #0x8, lsl #16
  4072dc:	mov	x0, x22
  4072e0:	bl	402d60 <open64@plt>
  4072e4:	mov	w20, w0
  4072e8:	tbnz	w0, #31, 4073b8 <__fxstat64@plt+0x44a8>
  4072ec:	stur	xzr, [x29, #-8]
  4072f0:	str	xzr, [sp, #16]
  4072f4:	cbz	x21, 407784 <__fxstat64@plt+0x4874>
  4072f8:	cbz	x22, 4077a4 <__fxstat64@plt+0x4894>
  4072fc:	sub	x1, x29, #0x8
  407300:	mov	w0, w19
  407304:	bl	405608 <__fxstat64@plt+0x26f8>
  407308:	mov	w23, w0
  40730c:	tbnz	w0, #31, 4076b4 <__fxstat64@plt+0x47a4>
  407310:	cbz	w23, 4074b4 <__fxstat64@plt+0x45a4>
  407314:	add	x1, sp, #0x10
  407318:	mov	w0, w20
  40731c:	bl	405608 <__fxstat64@plt+0x26f8>
  407320:	mov	w23, w0
  407324:	tbnz	w0, #31, 4076b4 <__fxstat64@plt+0x47a4>
  407328:	cbz	w23, 4075cc <__fxstat64@plt+0x46bc>
  40732c:	ldur	x24, [x29, #-8]
  407330:	cbz	x24, 4077c8 <__fxstat64@plt+0x48b8>
  407334:	ldr	x23, [sp, #16]
  407338:	cbz	x23, 4077e8 <__fxstat64@plt+0x48d8>
  40733c:	adrp	x25, 409000 <__fxstat64@plt+0x60f0>
  407340:	add	x25, x25, #0x898
  407344:	mov	x0, x24
  407348:	mov	x1, x25
  40734c:	bl	402e80 <strcspn@plt>
  407350:	mov	x26, x0
  407354:	mov	x0, x23
  407358:	mov	x1, x25
  40735c:	bl	402e80 <strcspn@plt>
  407360:	mov	x25, x0
  407364:	cmp	x26, x0
  407368:	b.ne	4075c0 <__fxstat64@plt+0x46b0>  // b.any
  40736c:	mov	x0, x24
  407370:	mov	x1, x23
  407374:	mov	x2, x26
  407378:	bl	402e00 <strncmp@plt>
  40737c:	b	4075c8 <__fxstat64@plt+0x46b8>
  407380:	cmp	w20, #0x0
  407384:	mov	w8, wzr
  407388:	cneg	w9, w20, mi  // mi = first
  40738c:	sub	w23, w8, w9, uxtb
  407390:	mov	w20, #0xffffffff            	// #-1
  407394:	b	40774c <__fxstat64@plt+0x483c>
  407398:	adrp	x1, 408000 <__fxstat64@plt+0x50f0>
  40739c:	adrp	x3, 409000 <__fxstat64@plt+0x60f0>
  4073a0:	add	x1, x1, #0x753
  4073a4:	add	x3, x3, #0xaaa
  4073a8:	mov	w2, #0x218                 	// #536
  4073ac:	mov	w0, wzr
  4073b0:	bl	402860 <log_oom_internal@plt>
  4073b4:	b	407734 <__fxstat64@plt+0x4824>
  4073b8:	bl	402a60 <__errno_location@plt>
  4073bc:	ldr	w23, [x0]
  4073c0:	cmn	w23, #0x2
  4073c4:	b.eq	407194 <__fxstat64@plt+0x4284>  // b.none
  4073c8:	mov	w0, wzr
  4073cc:	bl	402850 <log_get_max_level_realm@plt>
  4073d0:	cmp	w0, #0x3
  4073d4:	b.lt	407558 <__fxstat64@plt+0x4648>  // b.tstop
  4073d8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4073dc:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4073e0:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4073e4:	add	x2, x2, #0x753
  4073e8:	add	x4, x4, #0xaaa
  4073ec:	add	x5, x5, #0xac7
  4073f0:	mov	w0, #0x3                   	// #3
  4073f4:	mov	w3, #0x209                 	// #521
  4073f8:	mov	w1, w23
  4073fc:	mov	x6, x22
  407400:	b	407730 <__fxstat64@plt+0x4820>
  407404:	bl	402a60 <__errno_location@plt>
  407408:	ldr	w21, [x0]
  40740c:	mov	w0, wzr
  407410:	bl	402850 <log_get_max_level_realm@plt>
  407414:	cmp	w0, #0x3
  407418:	b.lt	407498 <__fxstat64@plt+0x4588>  // b.tstop
  40741c:	ldr	x6, [sp, #8]
  407420:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407424:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407428:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40742c:	add	x2, x2, #0x753
  407430:	add	x4, x4, #0xaaa
  407434:	add	x5, x5, #0xb06
  407438:	mov	w0, #0x3                   	// #3
  40743c:	mov	w3, #0x21d                 	// #541
  407440:	mov	w1, w21
  407444:	bl	402870 <log_internal_realm@plt>
  407448:	mov	w23, w0
  40744c:	b	4074a8 <__fxstat64@plt+0x4598>
  407450:	mov	w23, w0
  407454:	ldr	x0, [sp, #8]
  407458:	bl	402e90 <unlink@plt>
  40745c:	mov	w0, wzr
  407460:	bl	402850 <log_get_max_level_realm@plt>
  407464:	cmp	w0, #0x3
  407468:	b.lt	40754c <__fxstat64@plt+0x463c>  // b.tstop
  40746c:	ldr	x7, [sp, #8]
  407470:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407474:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407478:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  40747c:	add	x2, x2, #0x753
  407480:	add	x4, x4, #0xaaa
  407484:	add	x5, x5, #0xb2a
  407488:	mov	w0, #0x3                   	// #3
  40748c:	mov	w3, #0x223                 	// #547
  407490:	mov	w1, w23
  407494:	b	407540 <__fxstat64@plt+0x4630>
  407498:	cmp	w21, #0x0
  40749c:	mov	w8, wzr
  4074a0:	cneg	w9, w21, mi  // mi = first
  4074a4:	sub	w23, w8, w9, uxtb
  4074a8:	and	w0, w24, #0x1ff
  4074ac:	bl	402a40 <umask@plt>
  4074b0:	b	40774c <__fxstat64@plt+0x483c>
  4074b4:	mov	w0, wzr
  4074b8:	bl	402850 <log_get_max_level_realm@plt>
  4074bc:	cmp	w0, #0x3
  4074c0:	b.lt	4075b8 <__fxstat64@plt+0x46a8>  // b.tstop
  4074c4:	mov	w8, #0x11                  	// #17
  4074c8:	movk	w8, #0x4000, lsl #16
  4074cc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4074d0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4074d4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4074d8:	add	w1, w8, #0x5
  4074dc:	add	x2, x2, #0x753
  4074e0:	add	x4, x4, #0xbcb
  4074e4:	add	x5, x5, #0xbd9
  4074e8:	mov	w0, #0x3                   	// #3
  4074ec:	mov	w3, #0x1ec                 	// #492
  4074f0:	mov	x6, x21
  4074f4:	b	407608 <__fxstat64@plt+0x46f8>
  4074f8:	ldr	x0, [sp, #8]
  4074fc:	bl	402cb0 <unlink_noerrno@plt>
  407500:	bl	402a60 <__errno_location@plt>
  407504:	ldr	w22, [x0]
  407508:	mov	w0, wzr
  40750c:	bl	402850 <log_get_max_level_realm@plt>
  407510:	cmp	w0, #0x3
  407514:	b.lt	40773c <__fxstat64@plt+0x482c>  // b.tstop
  407518:	ldr	x7, [sp, #8]
  40751c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407520:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407524:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  407528:	add	x2, x2, #0x753
  40752c:	add	x4, x4, #0xaaa
  407530:	add	x5, x5, #0xb2a
  407534:	mov	w0, #0x3                   	// #3
  407538:	mov	w3, #0x22a                 	// #554
  40753c:	mov	w1, w22
  407540:	mov	x6, x21
  407544:	bl	402870 <log_internal_realm@plt>
  407548:	b	407734 <__fxstat64@plt+0x4824>
  40754c:	mov	w8, wzr
  407550:	neg	w9, w23
  407554:	b	407748 <__fxstat64@plt+0x4838>
  407558:	cmp	w23, #0x0
  40755c:	mov	w8, wzr
  407560:	cneg	w9, w23, mi  // mi = first
  407564:	b	407748 <__fxstat64@plt+0x4838>
  407568:	ldr	x0, [sp, #8]
  40756c:	bl	402cb0 <unlink_noerrno@plt>
  407570:	bl	402a60 <__errno_location@plt>
  407574:	ldr	w21, [x0]
  407578:	mov	w0, wzr
  40757c:	bl	402850 <log_get_max_level_realm@plt>
  407580:	cmp	w0, #0x3
  407584:	b.lt	40761c <__fxstat64@plt+0x470c>  // b.tstop
  407588:	ldr	x6, [sp, #8]
  40758c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407590:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407594:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  407598:	add	x2, x2, #0x753
  40759c:	add	x4, x4, #0xaaa
  4075a0:	add	x5, x5, #0xb54
  4075a4:	mov	w0, #0x3                   	// #3
  4075a8:	mov	w3, #0x231                 	// #561
  4075ac:	mov	w1, w21
  4075b0:	mov	x7, x22
  4075b4:	b	407544 <__fxstat64@plt+0x4634>
  4075b8:	mov	w23, #0xffffffea            	// #-22
  4075bc:	b	4076b4 <__fxstat64@plt+0x47a4>
  4075c0:	cset	w0, hi  // hi = pmore
  4075c4:	b.cc	4075cc <__fxstat64@plt+0x46bc>  // b.lo, b.ul, b.last
  4075c8:	cbz	w0, 40762c <__fxstat64@plt+0x471c>
  4075cc:	mov	w0, wzr
  4075d0:	bl	402850 <log_get_max_level_realm@plt>
  4075d4:	cmp	w0, #0x5
  4075d8:	b.lt	407614 <__fxstat64@plt+0x4704>  // b.tstop
  4075dc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4075e0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4075e4:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  4075e8:	mov	w1, #0x11                  	// #17
  4075ec:	add	x2, x2, #0x753
  4075f0:	add	x4, x4, #0xbcb
  4075f4:	add	x5, x5, #0xc0e
  4075f8:	mov	w0, #0x5                   	// #5
  4075fc:	movk	w1, #0x4000, lsl #16
  407600:	mov	w3, #0x1f4                 	// #500
  407604:	mov	x6, x22
  407608:	bl	402870 <log_internal_realm@plt>
  40760c:	mov	w23, w0
  407610:	b	4076b4 <__fxstat64@plt+0x47a4>
  407614:	mov	w23, #0xffffffef            	// #-17
  407618:	b	4076b4 <__fxstat64@plt+0x47a4>
  40761c:	cmp	w21, #0x0
  407620:	mov	w8, wzr
  407624:	cneg	w9, w21, mi  // mi = first
  407628:	b	407748 <__fxstat64@plt+0x4838>
  40762c:	add	x24, x24, x26
  407630:	adrp	x26, 409000 <__fxstat64@plt+0x60f0>
  407634:	add	x26, x26, #0x898
  407638:	mov	x0, x24
  40763c:	mov	x1, x26
  407640:	bl	402ea0 <strspn@plt>
  407644:	add	x23, x23, x25
  407648:	add	x24, x24, x0
  40764c:	mov	x0, x23
  407650:	mov	x1, x26
  407654:	bl	402ea0 <strspn@plt>
  407658:	add	x1, x23, x0
  40765c:	mov	x0, x24
  407660:	bl	402eb0 <strverscmp@plt>
  407664:	tbnz	w0, #31, 407670 <__fxstat64@plt+0x4760>
  407668:	mov	w23, wzr
  40766c:	b	4076b4 <__fxstat64@plt+0x47a4>
  407670:	mov	w0, wzr
  407674:	bl	402850 <log_get_max_level_realm@plt>
  407678:	cmp	w0, #0x4
  40767c:	b.lt	4076b0 <__fxstat64@plt+0x47a0>  // b.tstop
  407680:	mov	w8, #0x11                  	// #17
  407684:	movk	w8, #0x4000, lsl #16
  407688:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40768c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407690:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  407694:	add	w1, w8, #0x63
  407698:	add	x2, x2, #0x753
  40769c:	add	x4, x4, #0xbcb
  4076a0:	add	x5, x5, #0xc46
  4076a4:	mov	w0, #0x4                   	// #4
  4076a8:	mov	w3, #0x1f7                 	// #503
  4076ac:	b	407604 <__fxstat64@plt+0x46f4>
  4076b0:	mov	w23, #0xffffff8c            	// #-116
  4076b4:	ldr	x0, [sp, #16]
  4076b8:	bl	4027d0 <free@plt>
  4076bc:	ldur	x0, [x29, #-8]
  4076c0:	bl	4027d0 <free@plt>
  4076c4:	tbnz	w23, #31, 40774c <__fxstat64@plt+0x483c>
  4076c8:	mov	w0, w19
  4076cc:	mov	x1, xzr
  4076d0:	mov	w2, wzr
  4076d4:	bl	402ec0 <lseek64@plt>
  4076d8:	cmn	x0, #0x1
  4076dc:	b.eq	4076f0 <__fxstat64@plt+0x47e0>  // b.none
  4076e0:	mov	w0, w20
  4076e4:	bl	402bf0 <safe_close@plt>
  4076e8:	mov	w20, w0
  4076ec:	b	407194 <__fxstat64@plt+0x4284>
  4076f0:	bl	402a60 <__errno_location@plt>
  4076f4:	ldr	w22, [x0]
  4076f8:	mov	w0, wzr
  4076fc:	bl	402850 <log_get_max_level_realm@plt>
  407700:	cmp	w0, #0x3
  407704:	b.lt	40773c <__fxstat64@plt+0x482c>  // b.tstop
  407708:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40770c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407710:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  407714:	add	x2, x2, #0x753
  407718:	add	x4, x4, #0xaaa
  40771c:	add	x5, x5, #0xaeb
  407720:	mov	w0, #0x3                   	// #3
  407724:	mov	w3, #0x210                 	// #528
  407728:	mov	w1, w22
  40772c:	mov	x6, x21
  407730:	bl	402870 <log_internal_realm@plt>
  407734:	mov	w23, w0
  407738:	b	40774c <__fxstat64@plt+0x483c>
  40773c:	cmp	w22, #0x0
  407740:	mov	w8, wzr
  407744:	cneg	w9, w22, mi  // mi = first
  407748:	sub	w23, w8, w9, uxtb
  40774c:	ldr	x0, [sp, #8]
  407750:	bl	4027d0 <free@plt>
  407754:	mov	w0, w20
  407758:	bl	402bf0 <safe_close@plt>
  40775c:	mov	w0, w19
  407760:	bl	402bf0 <safe_close@plt>
  407764:	mov	w0, w23
  407768:	ldp	x20, x19, [sp, #96]
  40776c:	ldp	x22, x21, [sp, #80]
  407770:	ldp	x24, x23, [sp, #64]
  407774:	ldp	x26, x25, [sp, #48]
  407778:	ldp	x29, x30, [sp, #32]
  40777c:	add	sp, sp, #0x70
  407780:	ret
  407784:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  407788:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40778c:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  407790:	add	x1, x1, #0xbc3
  407794:	add	x2, x2, #0x753
  407798:	add	x4, x4, #0xb8b
  40779c:	mov	w3, #0x1e2                 	// #482
  4077a0:	b	4077c0 <__fxstat64@plt+0x48b0>
  4077a4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4077a8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4077ac:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4077b0:	add	x1, x1, #0xbc8
  4077b4:	add	x2, x2, #0x753
  4077b8:	add	x4, x4, #0xb8b
  4077bc:	mov	w3, #0x1e4                 	// #484
  4077c0:	mov	w0, wzr
  4077c4:	bl	4028c0 <log_assert_failed_realm@plt>
  4077c8:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4077cc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4077d0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4077d4:	add	x1, x1, #0xc87
  4077d8:	add	x2, x2, #0x753
  4077dc:	add	x4, x4, #0xc89
  4077e0:	mov	w3, #0x1c6                 	// #454
  4077e4:	b	4077c0 <__fxstat64@plt+0x48b0>
  4077e8:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  4077ec:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4077f0:	adrp	x4, 409000 <__fxstat64@plt+0x60f0>
  4077f4:	add	x1, x1, #0xcb9
  4077f8:	add	x2, x2, #0x753
  4077fc:	add	x4, x4, #0xc89
  407800:	mov	w3, #0x1c7                 	// #455
  407804:	b	4077c0 <__fxstat64@plt+0x48b0>
  407808:	sub	sp, sp, #0xa0
  40780c:	stp	x22, x21, [sp, #128]
  407810:	mov	x22, x0
  407814:	mov	x0, sp
  407818:	stp	x29, x30, [sp, #64]
  40781c:	stp	x28, x27, [sp, #80]
  407820:	stp	x26, x25, [sp, #96]
  407824:	stp	x24, x23, [sp, #112]
  407828:	stp	x20, x19, [sp, #144]
  40782c:	add	x29, sp, #0x40
  407830:	mov	x20, x2
  407834:	mov	x21, x1
  407838:	str	xzr, [sp]
  40783c:	bl	4029e0 <efi_get_boot_options@plt>
  407840:	mov	w19, w0
  407844:	tbnz	w0, #31, 407918 <__fxstat64@plt+0x4a08>
  407848:	cbz	w19, 407910 <__fxstat64@plt+0x4a00>
  40784c:	mov	w26, w19
  407850:	adrp	x23, 409000 <__fxstat64@plt+0x60f0>
  407854:	mov	x27, xzr
  407858:	lsl	x28, x26, #1
  40785c:	add	x23, x23, #0x92f
  407860:	ldr	x8, [sp]
  407864:	add	x2, sp, #0x8
  407868:	add	x3, sp, #0x18
  40786c:	mov	x1, xzr
  407870:	ldrh	w0, [x8, x27]
  407874:	mov	x4, xzr
  407878:	str	xzr, [sp, #24]
  40787c:	bl	402c50 <efi_get_boot_option@plt>
  407880:	tbnz	w0, #31, 407898 <__fxstat64@plt+0x4988>
  407884:	ldp	x8, x9, [sp, #8]
  407888:	eor	x8, x22, x8
  40788c:	eor	x9, x21, x9
  407890:	orr	x8, x8, x9
  407894:	cbz	x8, 4078a4 <__fxstat64@plt+0x4994>
  407898:	ldr	x0, [sp, #24]
  40789c:	bl	4027d0 <free@plt>
  4078a0:	b	4078c4 <__fxstat64@plt+0x49b4>
  4078a4:	ldr	x24, [sp, #24]
  4078a8:	mov	x0, x23
  4078ac:	mov	x1, x24
  4078b0:	bl	402ed0 <strcmp_ptr@plt>
  4078b4:	mov	w25, w0
  4078b8:	mov	x0, x24
  4078bc:	bl	4027d0 <free@plt>
  4078c0:	cbz	w25, 407950 <__fxstat64@plt+0x4a40>
  4078c4:	add	x27, x27, #0x2
  4078c8:	cmp	x28, x27
  4078cc:	b.ne	407860 <__fxstat64@plt+0x4950>  // b.any
  4078d0:	cmp	w19, #0x1
  4078d4:	b.lt	40790c <__fxstat64@plt+0x49fc>  // b.tstop
  4078d8:	ldr	x8, [sp]
  4078dc:	mov	x9, xzr
  4078e0:	ldrh	w10, [x8, x9, lsl #1]
  4078e4:	cmp	x9, x10
  4078e8:	b.ne	407944 <__fxstat64@plt+0x4a34>  // b.any
  4078ec:	add	x9, x9, #0x1
  4078f0:	cmp	x26, x9
  4078f4:	b.ne	4078e0 <__fxstat64@plt+0x49d0>  // b.any
  4078f8:	mov	w8, #0xffff                	// #65535
  4078fc:	cmp	w19, w8
  407900:	b.ne	407910 <__fxstat64@plt+0x4a00>  // b.any
  407904:	mov	w19, #0xffffffe4            	// #-28
  407908:	b	407918 <__fxstat64@plt+0x4a08>
  40790c:	mov	w19, wzr
  407910:	strh	w19, [x20]
  407914:	mov	w19, wzr
  407918:	ldr	x0, [sp]
  40791c:	bl	4027d0 <free@plt>
  407920:	mov	w0, w19
  407924:	ldp	x20, x19, [sp, #144]
  407928:	ldp	x22, x21, [sp, #128]
  40792c:	ldp	x24, x23, [sp, #112]
  407930:	ldp	x26, x25, [sp, #96]
  407934:	ldp	x28, x27, [sp, #80]
  407938:	ldp	x29, x30, [sp, #64]
  40793c:	add	sp, sp, #0xa0
  407940:	ret
  407944:	strh	w9, [x20]
  407948:	mov	w19, #0x1                   	// #1
  40794c:	b	407918 <__fxstat64@plt+0x4a08>
  407950:	ldr	x8, [sp]
  407954:	mov	w19, #0x1                   	// #1
  407958:	ldrh	w8, [x8, x27]
  40795c:	strh	w8, [x20]
  407960:	b	407918 <__fxstat64@plt+0x4a08>
  407964:	stp	x29, x30, [sp, #-48]!
  407968:	stp	x20, x19, [sp, #32]
  40796c:	mov	x19, x0
  407970:	str	x21, [sp, #16]
  407974:	mov	x29, sp
  407978:	cbz	x0, 4079f0 <__fxstat64@plt+0x4ae0>
  40797c:	ldrb	w8, [x19]
  407980:	adrp	x21, 40a000 <__fxstat64@plt+0x70f0>
  407984:	add	x21, x21, #0x3f2
  407988:	cbz	w8, 4079fc <__fxstat64@plt+0x4aec>
  40798c:	mov	x0, x19
  407990:	bl	402b20 <strlen@plt>
  407994:	add	x8, x0, #0xe
  407998:	cmp	x8, #0x400, lsl #12
  40799c:	b.hi	407a38 <__fxstat64@plt+0x4b28>  // b.pmore
  4079a0:	add	x8, x8, #0xf
  4079a4:	mov	x9, sp
  4079a8:	and	x8, x8, #0xfffffffffffffff0
  4079ac:	sub	x20, x9, x8
  4079b0:	mov	sp, x20
  4079b4:	mov	x0, x20
  4079b8:	mov	x1, x19
  4079bc:	bl	402ba0 <stpcpy@plt>
  4079c0:	mov	x8, x0
  4079c4:	cmp	x0, x20
  4079c8:	b.ls	4079dc <__fxstat64@plt+0x4acc>  // b.plast
  4079cc:	mov	x0, x8
  4079d0:	ldrb	w9, [x0, #-1]!
  4079d4:	cmp	w9, #0x2f
  4079d8:	b.eq	4079c0 <__fxstat64@plt+0x4ab0>  // b.none
  4079dc:	ldur	x9, [x21, #5]
  4079e0:	ldr	x10, [x21]
  4079e4:	stur	x9, [x8, #5]
  4079e8:	str	x10, [x8]
  4079ec:	b	407a00 <__fxstat64@plt+0x4af0>
  4079f0:	adrp	x20, 40a000 <__fxstat64@plt+0x70f0>
  4079f4:	add	x20, x20, #0x3f2
  4079f8:	b	407a00 <__fxstat64@plt+0x4af0>
  4079fc:	mov	x20, x21
  407a00:	mov	w1, #0x6                   	// #6
  407a04:	mov	x0, x20
  407a08:	bl	402ee0 <rm_rf@plt>
  407a0c:	mov	w20, w0
  407a10:	mov	x0, x19
  407a14:	bl	407d14 <__fxstat64@plt+0x4e04>
  407a18:	cmp	w0, #0x0
  407a1c:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  407a20:	csel	w0, w0, w20, eq  // eq = none
  407a24:	mov	sp, x29
  407a28:	ldp	x20, x19, [sp, #32]
  407a2c:	ldr	x21, [sp, #16]
  407a30:	ldp	x29, x30, [sp], #48
  407a34:	ret
  407a38:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  407a3c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407a40:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407a44:	add	x1, x1, #0x475
  407a48:	add	x2, x2, #0x753
  407a4c:	add	x4, x4, #0x3ff
  407a50:	mov	w3, #0x387                 	// #903
  407a54:	mov	w0, wzr
  407a58:	bl	4028c0 <log_assert_failed_realm@plt>
  407a5c:	stp	x29, x30, [sp, #-48]!
  407a60:	stp	x22, x21, [sp, #16]
  407a64:	stp	x20, x19, [sp, #32]
  407a68:	mov	x29, sp
  407a6c:	cbz	x0, 407bf8 <__fxstat64@plt+0x4ce8>
  407a70:	cbz	x1, 407c18 <__fxstat64@plt+0x4d08>
  407a74:	ldrb	w8, [x1]
  407a78:	mov	x21, x0
  407a7c:	cmp	w8, #0x2f
  407a80:	cset	w8, eq  // eq = none
  407a84:	mov	x20, x1
  407a88:	tbz	w8, #0, 407aa0 <__fxstat64@plt+0x4b90>
  407a8c:	mov	x1, x20
  407a90:	ldrb	w8, [x1, #1]!
  407a94:	cmp	w8, #0x2f
  407a98:	mov	w8, #0x1                   	// #1
  407a9c:	b.eq	407a84 <__fxstat64@plt+0x4b74>  // b.none
  407aa0:	ldrb	w8, [x21]
  407aa4:	cbz	w8, 407b2c <__fxstat64@plt+0x4c1c>
  407aa8:	mov	x0, x21
  407aac:	bl	402b20 <strlen@plt>
  407ab0:	mov	x19, x0
  407ab4:	mov	x0, x20
  407ab8:	bl	402b20 <strlen@plt>
  407abc:	add	x8, x19, x0
  407ac0:	add	x8, x8, #0x2
  407ac4:	cmp	x8, #0x400, lsl #12
  407ac8:	b.hi	407c38 <__fxstat64@plt+0x4d28>  // b.pmore
  407acc:	add	x8, x8, #0xf
  407ad0:	mov	x9, sp
  407ad4:	and	x8, x8, #0xfffffffffffffff0
  407ad8:	sub	x19, x9, x8
  407adc:	mov	sp, x19
  407ae0:	mov	x0, x19
  407ae4:	mov	x1, x21
  407ae8:	bl	402ba0 <stpcpy@plt>
  407aec:	mov	x8, x0
  407af0:	mov	x0, x8
  407af4:	cmp	x8, x19
  407af8:	b.ls	407b0c <__fxstat64@plt+0x4bfc>  // b.plast
  407afc:	mov	x8, x0
  407b00:	ldrb	w9, [x8, #-1]!
  407b04:	cmp	w9, #0x2f
  407b08:	b.eq	407af0 <__fxstat64@plt+0x4be0>  // b.none
  407b0c:	ldrb	w8, [x20]
  407b10:	cmp	w8, #0x2f
  407b14:	b.eq	407b20 <__fxstat64@plt+0x4c10>  // b.none
  407b18:	mov	w8, #0x2f                  	// #47
  407b1c:	strb	w8, [x0], #1
  407b20:	mov	x1, x20
  407b24:	bl	402bb0 <strcpy@plt>
  407b28:	b	407b30 <__fxstat64@plt+0x4c20>
  407b2c:	mov	x19, x20
  407b30:	mov	x0, x19
  407b34:	bl	402e90 <unlink@plt>
  407b38:	tbnz	w0, #31, 407b80 <__fxstat64@plt+0x4c70>
  407b3c:	mov	w0, wzr
  407b40:	bl	402850 <log_get_max_level_realm@plt>
  407b44:	cmp	w0, #0x6
  407b48:	b.lt	407b78 <__fxstat64@plt+0x4c68>  // b.tstop
  407b4c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407b50:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407b54:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  407b58:	add	x2, x2, #0x753
  407b5c:	add	x4, x4, #0x4ec
  407b60:	add	x5, x5, #0x517
  407b64:	mov	w0, #0x6                   	// #6
  407b68:	mov	w3, #0x39f                 	// #927
  407b6c:	mov	w1, wzr
  407b70:	mov	x6, x19
  407b74:	bl	402870 <log_internal_realm@plt>
  407b78:	mov	w0, #0x1                   	// #1
  407b7c:	b	407be4 <__fxstat64@plt+0x4cd4>
  407b80:	bl	402a60 <__errno_location@plt>
  407b84:	ldr	w20, [x0]
  407b88:	mov	x21, x0
  407b8c:	mov	w8, #0x3                   	// #3
  407b90:	mov	w9, #0x7                   	// #7
  407b94:	cmp	w20, #0x2
  407b98:	mov	w0, wzr
  407b9c:	csel	w22, w9, w8, eq  // eq = none
  407ba0:	bl	402850 <log_get_max_level_realm@plt>
  407ba4:	cmp	w0, w22
  407ba8:	b.lt	407bdc <__fxstat64@plt+0x4ccc>  // b.tstop
  407bac:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407bb0:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407bb4:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  407bb8:	add	x2, x2, #0x753
  407bbc:	add	x4, x4, #0x4ec
  407bc0:	add	x5, x5, #0x4f8
  407bc4:	mov	w3, #0x39a                 	// #922
  407bc8:	mov	w0, w22
  407bcc:	mov	w1, w20
  407bd0:	mov	x6, x19
  407bd4:	bl	402870 <log_internal_realm@plt>
  407bd8:	ldr	w20, [x21]
  407bdc:	cmp	w20, #0x2
  407be0:	csneg	w0, wzr, w20, eq  // eq = none
  407be4:	mov	sp, x29
  407be8:	ldp	x20, x19, [sp, #32]
  407bec:	ldp	x22, x21, [sp, #16]
  407bf0:	ldp	x29, x30, [sp], #48
  407bf4:	ret
  407bf8:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  407bfc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407c00:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407c04:	add	x1, x1, #0xd83
  407c08:	add	x2, x2, #0x753
  407c0c:	add	x4, x4, #0x4bb
  407c10:	mov	w3, #0x394                 	// #916
  407c14:	bl	4028c0 <log_assert_failed_realm@plt>
  407c18:	adrp	x1, 40a000 <__fxstat64@plt+0x70f0>
  407c1c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407c20:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407c24:	add	x1, x1, #0x4e7
  407c28:	add	x2, x2, #0x753
  407c2c:	add	x4, x4, #0x4bb
  407c30:	mov	w3, #0x395                 	// #917
  407c34:	b	407c54 <__fxstat64@plt+0x4d44>
  407c38:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  407c3c:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407c40:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407c44:	add	x1, x1, #0x475
  407c48:	add	x2, x2, #0x753
  407c4c:	add	x4, x4, #0x4bb
  407c50:	mov	w3, #0x397                 	// #919
  407c54:	mov	w0, wzr
  407c58:	bl	4028c0 <log_assert_failed_realm@plt>
  407c5c:	stp	x29, x30, [sp, #-32]!
  407c60:	stp	x20, x19, [sp, #16]
  407c64:	ldr	x8, [x1]
  407c68:	mov	x29, sp
  407c6c:	cbz	x8, 407c9c <__fxstat64@plt+0x4d8c>
  407c70:	mov	x19, x1
  407c74:	add	x1, x1, #0x8
  407c78:	mov	x20, x0
  407c7c:	bl	407c5c <__fxstat64@plt+0x4d4c>
  407c80:	ldr	x1, [x19]
  407c84:	mov	w19, w0
  407c88:	mov	x0, x20
  407c8c:	bl	408074 <__fxstat64@plt+0x5164>
  407c90:	cmp	w19, #0x0
  407c94:	csel	w0, w19, w0, lt  // lt = tstop
  407c98:	b	407ca0 <__fxstat64@plt+0x4d90>
  407c9c:	mov	w0, wzr
  407ca0:	ldp	x20, x19, [sp, #16]
  407ca4:	ldp	x29, x30, [sp], #32
  407ca8:	ret
  407cac:	sub	sp, sp, #0x50
  407cb0:	stp	x29, x30, [sp, #48]
  407cb4:	str	x19, [sp, #64]
  407cb8:	add	x29, sp, #0x30
  407cbc:	cbz	x0, 407cf4 <__fxstat64@plt+0x4de4>
  407cc0:	mov	x8, x2
  407cc4:	mov	x19, x0
  407cc8:	add	x2, sp, #0xc
  407ccc:	mov	x0, x1
  407cd0:	mov	x1, x8
  407cd4:	bl	402ab0 <sd_id128_to_string@plt>
  407cd8:	mov	x1, x0
  407cdc:	mov	x0, x19
  407ce0:	bl	408074 <__fxstat64@plt+0x5164>
  407ce4:	ldr	x19, [sp, #64]
  407ce8:	ldp	x29, x30, [sp, #48]
  407cec:	add	sp, sp, #0x50
  407cf0:	ret
  407cf4:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  407cf8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407cfc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407d00:	add	x1, x1, #0xd83
  407d04:	add	x2, x2, #0x753
  407d08:	add	x4, x4, #0x57d
  407d0c:	mov	w3, #0x37e                 	// #894
  407d10:	bl	4028c0 <log_assert_failed_realm@plt>
  407d14:	stp	x29, x30, [sp, #-96]!
  407d18:	stp	x28, x27, [sp, #16]
  407d1c:	stp	x26, x25, [sp, #32]
  407d20:	stp	x24, x23, [sp, #48]
  407d24:	stp	x22, x21, [sp, #64]
  407d28:	stp	x20, x19, [sp, #80]
  407d2c:	mov	x29, sp
  407d30:	sub	sp, sp, #0x10
  407d34:	cbz	x0, 407db0 <__fxstat64@plt+0x4ea0>
  407d38:	ldrb	w8, [x0]
  407d3c:	adrp	x21, 40a000 <__fxstat64@plt+0x70f0>
  407d40:	mov	x20, x0
  407d44:	add	x21, x21, #0x421
  407d48:	cbz	w8, 407dbc <__fxstat64@plt+0x4eac>
  407d4c:	mov	x0, x20
  407d50:	bl	402b20 <strlen@plt>
  407d54:	add	x8, x0, #0xb
  407d58:	cmp	x8, #0x400, lsl #12
  407d5c:	b.hi	408050 <__fxstat64@plt+0x5140>  // b.pmore
  407d60:	add	x8, x8, #0xf
  407d64:	mov	x9, sp
  407d68:	and	x8, x8, #0xfffffffffffffff0
  407d6c:	sub	x19, x9, x8
  407d70:	mov	sp, x19
  407d74:	mov	x0, x19
  407d78:	mov	x1, x20
  407d7c:	bl	402ba0 <stpcpy@plt>
  407d80:	mov	x8, x0
  407d84:	cmp	x0, x19
  407d88:	b.ls	407d9c <__fxstat64@plt+0x4e8c>  // b.plast
  407d8c:	mov	x0, x8
  407d90:	ldrb	w9, [x0, #-1]!
  407d94:	cmp	w9, #0x2f
  407d98:	b.eq	407d80 <__fxstat64@plt+0x4e70>  // b.none
  407d9c:	ldr	x9, [x21]
  407da0:	mov	w10, #0x54                  	// #84
  407da4:	strh	w10, [x8, #8]
  407da8:	str	x9, [x8]
  407dac:	b	407dc0 <__fxstat64@plt+0x4eb0>
  407db0:	adrp	x19, 40a000 <__fxstat64@plt+0x70f0>
  407db4:	add	x19, x19, #0x421
  407db8:	b	407dc0 <__fxstat64@plt+0x4eb0>
  407dbc:	mov	x19, x21
  407dc0:	mov	x0, x19
  407dc4:	bl	402a50 <opendir@plt>
  407dc8:	mov	x20, x0
  407dcc:	bl	402a60 <__errno_location@plt>
  407dd0:	mov	x22, x0
  407dd4:	cbz	x20, 407f10 <__fxstat64@plt+0x5000>
  407dd8:	mov	x0, x20
  407ddc:	str	wzr, [x22]
  407de0:	bl	402a70 <readdir64@plt>
  407de4:	mov	w27, wzr
  407de8:	cbz	x0, 408024 <__fxstat64@plt+0x5114>
  407dec:	adrp	x24, 409000 <__fxstat64@plt+0x60f0>
  407df0:	adrp	x25, 409000 <__fxstat64@plt+0x60f0>
  407df4:	adrp	x26, 40a000 <__fxstat64@plt+0x70f0>
  407df8:	add	x24, x24, #0x4bf
  407dfc:	add	x25, x25, #0x3f4
  407e00:	add	x26, x26, #0x47f
  407e04:	add	x28, x0, #0x13
  407e08:	mov	x0, x28
  407e0c:	bl	402a80 <hidden_or_backup_file@plt>
  407e10:	tbnz	w0, #0, 407efc <__fxstat64@plt+0x4fec>
  407e14:	mov	x0, x28
  407e18:	mov	x1, x24
  407e1c:	stur	xzr, [x29, #-8]
  407e20:	bl	402a90 <endswith_no_case@plt>
  407e24:	cbz	x0, 407e40 <__fxstat64@plt+0x4f30>
  407e28:	mov	w2, #0x4                   	// #4
  407e2c:	mov	x0, x28
  407e30:	mov	x1, x25
  407e34:	bl	402bc0 <strncasecmp@plt>
  407e38:	cbz	w0, 407e48 <__fxstat64@plt+0x4f38>
  407e3c:	mov	x0, xzr
  407e40:	mov	w23, #0xffffffff            	// #-1
  407e44:	b	407ef0 <__fxstat64@plt+0x4fe0>
  407e48:	mov	x0, x20
  407e4c:	bl	402bd0 <dirfd@plt>
  407e50:	mov	w2, #0x80000               	// #524288
  407e54:	mov	x1, x28
  407e58:	bl	402be0 <openat64@plt>
  407e5c:	mov	w23, w0
  407e60:	tbnz	w0, #31, 407f7c <__fxstat64@plt+0x506c>
  407e64:	sub	x1, x29, #0x8
  407e68:	mov	w0, w23
  407e6c:	bl	405608 <__fxstat64@plt+0x26f8>
  407e70:	mov	w21, w0
  407e74:	tbnz	w0, #31, 408010 <__fxstat64@plt+0x5100>
  407e78:	cbz	w21, 407ee8 <__fxstat64@plt+0x4fd8>
  407e7c:	ldur	x0, [x29, #-8]
  407e80:	mov	w2, #0xd                   	// #13
  407e84:	mov	x1, x26
  407e88:	bl	402e00 <strncmp@plt>
  407e8c:	cbnz	w0, 407ee8 <__fxstat64@plt+0x4fd8>
  407e90:	mov	x0, x20
  407e94:	bl	402bd0 <dirfd@plt>
  407e98:	mov	x1, x28
  407e9c:	mov	w2, wzr
  407ea0:	bl	402ef0 <unlinkat@plt>
  407ea4:	tbnz	w0, #31, 407fc8 <__fxstat64@plt+0x50b8>
  407ea8:	mov	w0, wzr
  407eac:	bl	402850 <log_get_max_level_realm@plt>
  407eb0:	cmp	w0, #0x6
  407eb4:	b.lt	407ee8 <__fxstat64@plt+0x4fd8>  // b.tstop
  407eb8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407ebc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407ec0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  407ec4:	mov	w0, #0x6                   	// #6
  407ec8:	mov	w3, #0x352                 	// #850
  407ecc:	mov	w1, wzr
  407ed0:	add	x2, x2, #0x753
  407ed4:	add	x4, x4, #0x44d
  407ed8:	add	x5, x5, #0x4aa
  407edc:	mov	x6, x19
  407ee0:	mov	x7, x28
  407ee4:	bl	402870 <log_internal_realm@plt>
  407ee8:	ldur	x0, [x29, #-8]
  407eec:	add	w27, w27, #0x1
  407ef0:	bl	4027d0 <free@plt>
  407ef4:	mov	w0, w23
  407ef8:	bl	402bf0 <safe_close@plt>
  407efc:	mov	x0, x20
  407f00:	str	wzr, [x22]
  407f04:	bl	402a70 <readdir64@plt>
  407f08:	cbnz	x0, 407e04 <__fxstat64@plt+0x4ef4>
  407f0c:	b	408024 <__fxstat64@plt+0x5114>
  407f10:	ldr	w20, [x22]
  407f14:	cmp	w20, #0x2
  407f18:	b.ne	407f24 <__fxstat64@plt+0x5014>  // b.any
  407f1c:	mov	w27, wzr
  407f20:	b	40802c <__fxstat64@plt+0x511c>
  407f24:	mov	w0, wzr
  407f28:	bl	402850 <log_get_max_level_realm@plt>
  407f2c:	cmp	w0, #0x3
  407f30:	b.lt	407f68 <__fxstat64@plt+0x5058>  // b.tstop
  407f34:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407f38:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407f3c:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  407f40:	add	x2, x2, #0x753
  407f44:	add	x4, x4, #0x44d
  407f48:	add	x5, x5, #0x45d
  407f4c:	mov	w0, #0x3                   	// #3
  407f50:	mov	w3, #0x339                 	// #825
  407f54:	mov	w1, w20
  407f58:	mov	x6, x19
  407f5c:	bl	402870 <log_internal_realm@plt>
  407f60:	mov	w27, w0
  407f64:	b	40802c <__fxstat64@plt+0x511c>
  407f68:	cmp	w20, #0x0
  407f6c:	mov	w8, wzr
  407f70:	cneg	w9, w20, mi  // mi = first
  407f74:	sub	w27, w8, w9, uxtb
  407f78:	b	40802c <__fxstat64@plt+0x511c>
  407f7c:	ldr	w21, [x22]
  407f80:	mov	w0, wzr
  407f84:	bl	402850 <log_get_max_level_realm@plt>
  407f88:	cmp	w0, #0x3
  407f8c:	b.lt	408000 <__fxstat64@plt+0x50f0>  // b.tstop
  407f90:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407f94:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407f98:	adrp	x5, 409000 <__fxstat64@plt+0x60f0>
  407f9c:	add	x2, x2, #0x753
  407fa0:	add	x4, x4, #0x44d
  407fa4:	add	x5, x5, #0x4c4
  407fa8:	mov	w0, #0x3                   	// #3
  407fac:	mov	w3, #0x348                 	// #840
  407fb0:	mov	w1, w21
  407fb4:	mov	x6, x19
  407fb8:	mov	x7, x28
  407fbc:	bl	402870 <log_internal_realm@plt>
  407fc0:	mov	w21, w0
  407fc4:	b	408010 <__fxstat64@plt+0x5100>
  407fc8:	ldr	w21, [x22]
  407fcc:	mov	w0, wzr
  407fd0:	bl	402850 <log_get_max_level_realm@plt>
  407fd4:	cmp	w0, #0x3
  407fd8:	b.lt	408000 <__fxstat64@plt+0x50f0>  // b.tstop
  407fdc:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  407fe0:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  407fe4:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  407fe8:	add	x2, x2, #0x753
  407fec:	add	x4, x4, #0x44d
  407ff0:	add	x5, x5, #0x48d
  407ff4:	mov	w0, #0x3                   	// #3
  407ff8:	mov	w3, #0x350                 	// #848
  407ffc:	b	407fb0 <__fxstat64@plt+0x50a0>
  408000:	cmp	w21, #0x0
  408004:	mov	w8, wzr
  408008:	cneg	w9, w21, mi  // mi = first
  40800c:	sub	w21, w8, w9, uxtb
  408010:	ldur	x0, [x29, #-8]
  408014:	bl	4027d0 <free@plt>
  408018:	mov	w0, w23
  40801c:	bl	402bf0 <safe_close@plt>
  408020:	mov	w27, w21
  408024:	mov	x0, x20
  408028:	bl	402aa0 <closedir@plt>
  40802c:	mov	w0, w27
  408030:	mov	sp, x29
  408034:	ldp	x20, x19, [sp, #80]
  408038:	ldp	x22, x21, [sp, #64]
  40803c:	ldp	x24, x23, [sp, #48]
  408040:	ldp	x26, x25, [sp, #32]
  408044:	ldp	x28, x27, [sp, #16]
  408048:	ldp	x29, x30, [sp], #96
  40804c:	ret
  408050:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  408054:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  408058:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  40805c:	add	x1, x1, #0x475
  408060:	add	x2, x2, #0x753
  408064:	add	x4, x4, #0x42b
  408068:	mov	w3, #0x333                 	// #819
  40806c:	mov	w0, wzr
  408070:	bl	4028c0 <log_assert_failed_realm@plt>
  408074:	stp	x29, x30, [sp, #-64]!
  408078:	stp	x22, x21, [sp, #32]
  40807c:	stp	x20, x19, [sp, #48]
  408080:	ldrb	w8, [x1]
  408084:	mov	x21, x0
  408088:	str	x23, [sp, #16]
  40808c:	mov	x29, sp
  408090:	cmp	w8, #0x2f
  408094:	cset	w8, eq  // eq = none
  408098:	mov	x20, x1
  40809c:	tbz	w8, #0, 4080b4 <__fxstat64@plt+0x51a4>
  4080a0:	mov	x1, x20
  4080a4:	ldrb	w8, [x1, #1]!
  4080a8:	cmp	w8, #0x2f
  4080ac:	mov	w8, #0x1                   	// #1
  4080b0:	b.eq	408098 <__fxstat64@plt+0x5188>  // b.none
  4080b4:	cbz	x21, 408144 <__fxstat64@plt+0x5234>
  4080b8:	ldrb	w8, [x21]
  4080bc:	cbz	w8, 408144 <__fxstat64@plt+0x5234>
  4080c0:	mov	x0, x21
  4080c4:	bl	402b20 <strlen@plt>
  4080c8:	mov	x19, x0
  4080cc:	mov	x0, x20
  4080d0:	bl	402b20 <strlen@plt>
  4080d4:	add	x8, x19, x0
  4080d8:	add	x8, x8, #0x2
  4080dc:	cmp	x8, #0x400, lsl #12
  4080e0:	b.hi	408230 <__fxstat64@plt+0x5320>  // b.pmore
  4080e4:	add	x8, x8, #0xf
  4080e8:	mov	x9, sp
  4080ec:	and	x8, x8, #0xfffffffffffffff0
  4080f0:	sub	x19, x9, x8
  4080f4:	mov	sp, x19
  4080f8:	mov	x0, x19
  4080fc:	mov	x1, x21
  408100:	bl	402ba0 <stpcpy@plt>
  408104:	mov	x8, x0
  408108:	mov	x0, x8
  40810c:	cmp	x8, x19
  408110:	b.ls	408124 <__fxstat64@plt+0x5214>  // b.plast
  408114:	mov	x8, x0
  408118:	ldrb	w9, [x8, #-1]!
  40811c:	cmp	w9, #0x2f
  408120:	b.eq	408108 <__fxstat64@plt+0x51f8>  // b.none
  408124:	ldrb	w8, [x20]
  408128:	cmp	w8, #0x2f
  40812c:	b.eq	408138 <__fxstat64@plt+0x5228>  // b.none
  408130:	mov	w8, #0x2f                  	// #47
  408134:	strb	w8, [x0], #1
  408138:	mov	x1, x20
  40813c:	bl	402bb0 <strcpy@plt>
  408140:	b	408148 <__fxstat64@plt+0x5238>
  408144:	mov	x19, x20
  408148:	mov	x0, x19
  40814c:	bl	402f00 <rmdir@plt>
  408150:	tbnz	w0, #31, 408198 <__fxstat64@plt+0x5288>
  408154:	mov	w0, wzr
  408158:	bl	402850 <log_get_max_level_realm@plt>
  40815c:	cmp	w0, #0x6
  408160:	mov	w0, wzr
  408164:	b.lt	408218 <__fxstat64@plt+0x5308>  // b.tstop
  408168:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  40816c:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  408170:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  408174:	add	x2, x2, #0x753
  408178:	add	x4, x4, #0x54f
  40817c:	add	x5, x5, #0x517
  408180:	mov	w0, #0x6                   	// #6
  408184:	mov	w3, #0x367                 	// #871
  408188:	mov	w1, wzr
  40818c:	mov	x6, x19
  408190:	bl	402870 <log_internal_realm@plt>
  408194:	b	408208 <__fxstat64@plt+0x52f8>
  408198:	bl	402a60 <__errno_location@plt>
  40819c:	ldr	w21, [x0]
  4081a0:	mov	x20, x0
  4081a4:	cmp	w21, #0x27
  4081a8:	b.eq	4081b4 <__fxstat64@plt+0x52a4>  // b.none
  4081ac:	cmp	w21, #0x2
  4081b0:	b.ne	4081c0 <__fxstat64@plt+0x52b0>  // b.any
  4081b4:	mov	w22, #0x7                   	// #7
  4081b8:	mov	w23, #0x1                   	// #1
  4081bc:	b	4081c8 <__fxstat64@plt+0x52b8>
  4081c0:	mov	w23, wzr
  4081c4:	mov	w22, #0x3                   	// #3
  4081c8:	mov	w0, wzr
  4081cc:	bl	402850 <log_get_max_level_realm@plt>
  4081d0:	cmp	w0, w22
  4081d4:	b.lt	408204 <__fxstat64@plt+0x52f4>  // b.tstop
  4081d8:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  4081dc:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  4081e0:	adrp	x5, 40a000 <__fxstat64@plt+0x70f0>
  4081e4:	add	x2, x2, #0x753
  4081e8:	add	x4, x4, #0x54f
  4081ec:	add	x5, x5, #0x559
  4081f0:	mov	w3, #0x363                 	// #867
  4081f4:	mov	w0, w22
  4081f8:	mov	w1, w21
  4081fc:	mov	x6, x19
  408200:	bl	402870 <log_internal_realm@plt>
  408204:	tbz	w23, #0, 408210 <__fxstat64@plt+0x5300>
  408208:	mov	w0, wzr
  40820c:	b	408218 <__fxstat64@plt+0x5308>
  408210:	ldr	w8, [x20]
  408214:	neg	w0, w8
  408218:	mov	sp, x29
  40821c:	ldp	x20, x19, [sp, #48]
  408220:	ldp	x22, x21, [sp, #32]
  408224:	ldr	x23, [sp, #16]
  408228:	ldp	x29, x30, [sp], #64
  40822c:	ret
  408230:	adrp	x1, 409000 <__fxstat64@plt+0x60f0>
  408234:	adrp	x2, 408000 <__fxstat64@plt+0x50f0>
  408238:	adrp	x4, 40a000 <__fxstat64@plt+0x70f0>
  40823c:	add	x1, x1, #0x475
  408240:	add	x2, x2, #0x753
  408244:	add	x4, x4, #0x525
  408248:	mov	w3, #0x35e                 	// #862
  40824c:	mov	w0, wzr
  408250:	bl	4028c0 <log_assert_failed_realm@plt>
  408254:	udf	#0
  408258:	stp	x29, x30, [sp, #-64]!
  40825c:	mov	x29, sp
  408260:	stp	x19, x20, [sp, #16]
  408264:	adrp	x20, 41f000 <__fxstat64@plt+0x1c0f0>
  408268:	add	x20, x20, #0x9e8
  40826c:	stp	x21, x22, [sp, #32]
  408270:	adrp	x21, 41f000 <__fxstat64@plt+0x1c0f0>
  408274:	add	x21, x21, #0x9e0
  408278:	sub	x20, x20, x21
  40827c:	mov	w22, w0
  408280:	stp	x23, x24, [sp, #48]
  408284:	mov	x23, x1
  408288:	mov	x24, x2
  40828c:	bl	402768 <__libc_start_main@plt-0x38>
  408290:	cmp	xzr, x20, asr #3
  408294:	b.eq	4082c0 <__fxstat64@plt+0x53b0>  // b.none
  408298:	asr	x20, x20, #3
  40829c:	mov	x19, #0x0                   	// #0
  4082a0:	ldr	x3, [x21, x19, lsl #3]
  4082a4:	mov	x2, x24
  4082a8:	add	x19, x19, #0x1
  4082ac:	mov	x1, x23
  4082b0:	mov	w0, w22
  4082b4:	blr	x3
  4082b8:	cmp	x20, x19
  4082bc:	b.ne	4082a0 <__fxstat64@plt+0x5390>  // b.any
  4082c0:	ldp	x19, x20, [sp, #16]
  4082c4:	ldp	x21, x22, [sp, #32]
  4082c8:	ldp	x23, x24, [sp, #48]
  4082cc:	ldp	x29, x30, [sp], #64
  4082d0:	ret
  4082d4:	nop
  4082d8:	ret
  4082dc:	udf	#0
  4082e0:	mov	x2, x1
  4082e4:	mov	w1, w0
  4082e8:	mov	w0, #0x0                   	// #0
  4082ec:	b	402f10 <__fxstat64@plt>

Disassembly of section .fini:

00000000004082f0 <.fini>:
  4082f0:	stp	x29, x30, [sp, #-16]!
  4082f4:	mov	x29, sp
  4082f8:	ldp	x29, x30, [sp], #16
  4082fc:	ret
