
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ISO8859-4.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 12000 <gconv@@Base+0x11728>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf0>:
     760:	adrp	x0, 12000 <gconv@@Base+0x11728>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 13000 <gconv@@Base+0x12728>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 13000 <gconv@@Base+0x12728>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 12000 <gconv@@Base+0x11728>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 13000 <gconv@@Base+0x12728>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 13000 <gconv@@Base+0x12728>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 12000 <gconv@@Base+0x11728>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 13000 <gconv@@Base+0x12728>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 12000 <gconv@@Base+0x11728>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 13000 <gconv@@Base+0x12728>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x1, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x728>
     840:	add	x0, x0, #0x5c0
     844:	ldr	w0, [x0, x1, lsl #2]
     848:	ret
     84c:	nop

0000000000000850 <gconv_init@@Base>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	mov	x19, x0
     860:	adrp	x20, 1000 <gconv@@Base+0x728>
     864:	ldr	x0, [x0, #24]
     868:	add	x20, x20, #0x428
     86c:	mov	x1, x20
     870:	bl	730 <strcmp@plt>
     874:	cbnz	w0, 8a8 <gconv_init@@Base+0x58>
     878:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     87c:	mov	x2, #0x100000001           	// #4294967297
     880:	add	x0, x0, #0x838
     884:	mov	x1, #0x400000004           	// #17179869188
     888:	str	x0, [x19, #48]
     88c:	stp	x2, x1, [x19, #72]
     890:	str	xzr, [x19, #96]
     894:	mov	w0, #0x0                   	// #0
     898:	str	wzr, [x19, #88]
     89c:	ldp	x19, x20, [sp, #16]
     8a0:	ldp	x29, x30, [sp], #32
     8a4:	ret
     8a8:	ldr	x0, [x19, #32]
     8ac:	mov	x1, x20
     8b0:	bl	730 <strcmp@plt>
     8b4:	cbnz	w0, 8d0 <gconv_init@@Base+0x80>
     8b8:	mov	x0, #0xffffffffffffffff    	// #-1
     8bc:	mov	x2, #0x400000004           	// #17179869188
     8c0:	mov	x1, #0x100000001           	// #4294967297
     8c4:	stp	x2, x1, [x19, #72]
     8c8:	str	x0, [x19, #96]
     8cc:	b	894 <gconv_init@@Base+0x44>
     8d0:	mov	w0, #0x1                   	// #1
     8d4:	b	89c <gconv_init@@Base+0x4c>

00000000000008d8 <gconv@@Base>:
     8d8:	stp	x29, x30, [sp, #-240]!
     8dc:	mov	x11, x2
     8e0:	mov	x15, x4
     8e4:	mov	x29, sp
     8e8:	stp	x21, x22, [sp, #32]
     8ec:	mov	x21, x1
     8f0:	adrp	x1, 12000 <gconv@@Base+0x11728>
     8f4:	stp	x27, x28, [sp, #80]
     8f8:	mov	x28, x0
     8fc:	ldr	w12, [x21, #16]
     900:	ldr	x1, [x1, #4056]
     904:	stp	x19, x20, [sp, #16]
     908:	mov	x27, x5
     90c:	ldr	x0, [x1]
     910:	str	x0, [sp, #232]
     914:	mov	x0, #0x0                   	// #0
     918:	add	x1, x28, #0x68
     91c:	add	x0, x21, #0x30
     920:	stp	x23, x24, [sp, #48]
     924:	mov	x20, x3
     928:	stp	x25, x26, [sp, #64]
     92c:	mov	x24, #0x0                   	// #0
     930:	mov	w25, w7
     934:	stp	x1, x0, [sp, #136]
     938:	tbnz	w12, #0, 958 <gconv@@Base+0x80>
     93c:	ldr	x0, [x28, #104]
     940:	ldr	x24, [x28, #144]
     944:	cbz	x0, 958 <gconv@@Base+0x80>
     948:	adrp	x0, 12000 <gconv@@Base+0x11728>
     94c:	ldr	x0, [x0, #4040]
     950:	ldr	x0, [x0]
     954:	eor	x24, x24, x0
     958:	cbnz	w6, f28 <gconv@@Base+0x650>
     95c:	cmp	x15, #0x0
     960:	add	x26, sp, #0xc0
     964:	csel	x1, x21, x15, eq  // eq = none
     968:	cmp	x27, #0x0
     96c:	ldr	x0, [x28, #96]
     970:	csel	x2, x26, xzr, ne  // ne = any
     974:	cmp	w25, #0x0
     978:	mov	x13, #0x0                   	// #0
     97c:	ldr	x8, [x1]
     980:	cset	w1, ne  // ne = any
     984:	str	x2, [sp, #160]
     988:	cmp	x0, #0x0
     98c:	str	w1, [sp, #172]
     990:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     994:	str	xzr, [sp, #192]
     998:	ldr	x22, [x11]
     99c:	ldr	x23, [x21, #8]
     9a0:	b.ne	cfc <gconv@@Base+0x424>  // b.any
     9a4:	adrp	x12, 1000 <gconv@@Base+0x728>
     9a8:	add	x12, x12, #0x5c0
     9ac:	add	x18, x12, #0x400
     9b0:	mov	x26, x11
     9b4:	stp	x15, x28, [sp, #120]
     9b8:	mov	x28, x13
     9bc:	add	x1, sp, #0xd8
     9c0:	str	w25, [sp, #152]
     9c4:	mov	x25, x23
     9c8:	mov	x23, x22
     9cc:	mov	x22, x27
     9d0:	mov	x27, x8
     9d4:	str	x1, [sp, #176]
     9d8:	cbz	x22, 9e4 <gconv@@Base+0x10c>
     9dc:	ldr	x1, [x22]
     9e0:	add	x28, x28, x1
     9e4:	cbz	x0, af0 <gconv@@Base+0x218>
     9e8:	stp	x23, x27, [sp, #208]
     9ec:	mov	x19, x27
     9f0:	ldr	w7, [x21, #16]
     9f4:	cmp	x20, x23
     9f8:	b.eq	f80 <gconv@@Base+0x6a8>  // b.none
     9fc:	mov	x0, x23
     a00:	add	x3, sp, #0xd0
     a04:	mov	w14, #0x4                   	// #4
     a08:	add	x5, x0, #0x4
     a0c:	cmp	x20, x5
     a10:	b.cc	b7c <gconv@@Base+0x2a4>  // b.lo, b.ul, b.last
     a14:	cmp	x25, x19
     a18:	b.ls	bcc <gconv@@Base+0x2f4>  // b.plast
     a1c:	ldr	w2, [x0]
     a20:	cmp	w2, #0x2db
     a24:	b.hi	b88 <gconv@@Base+0x2b0>  // b.pmore
     a28:	ldrb	w5, [x18, w2, uxtw]
     a2c:	cmp	w2, #0x0
     a30:	ccmp	w5, #0x0, #0x0, ne  // ne = any
     a34:	b.eq	b94 <gconv@@Base+0x2bc>  // b.none
     a38:	add	x2, x19, #0x1
     a3c:	str	x2, [sp, #216]
     a40:	strb	w5, [x19]
     a44:	ldp	x0, x19, [sp, #208]
     a48:	add	x0, x0, #0x4
     a4c:	str	x0, [sp, #208]
     a50:	cmp	x20, x0
     a54:	b.ne	a08 <gconv@@Base+0x130>  // b.any
     a58:	str	x0, [x26]
     a5c:	ldr	x0, [sp, #120]
     a60:	cbnz	x0, b3c <gconv@@Base+0x264>
     a64:	ldp	w1, w0, [x21, #16]
     a68:	add	w0, w0, #0x1
     a6c:	str	w0, [x21, #20]
     a70:	tbnz	w1, #0, bfc <gconv@@Base+0x324>
     a74:	cmp	x27, x19
     a78:	b.cs	c94 <gconv@@Base+0x3bc>  // b.hs, b.nlast
     a7c:	ldr	x1, [x21]
     a80:	mov	x0, x24
     a84:	stp	x12, x18, [sp, #96]
     a88:	str	w14, [sp, #112]
     a8c:	str	x1, [sp, #200]
     a90:	bl	740 <_dl_mcount_wrapper_check@plt>
     a94:	ldp	x0, x1, [sp, #136]
     a98:	mov	x5, x22
     a9c:	ldr	w7, [sp, #152]
     aa0:	mov	x3, x19
     aa4:	add	x2, sp, #0xc8
     aa8:	mov	w6, #0x0                   	// #0
     aac:	mov	x4, #0x0                   	// #0
     ab0:	blr	x24
     ab4:	mov	w7, w0
     ab8:	ldr	w14, [sp, #112]
     abc:	cmp	w0, #0x4
     ac0:	ldp	x12, x18, [sp, #96]
     ac4:	b.eq	bb4 <gconv@@Base+0x2dc>  // b.none
     ac8:	ldr	x14, [sp, #200]
     acc:	cmp	x14, x19
     ad0:	b.ne	e40 <gconv@@Base+0x568>  // b.any
     ad4:	ldr	x0, [sp, #128]
     ad8:	ldr	x0, [x0, #96]
     adc:	cbnz	w7, f74 <gconv@@Base+0x69c>
     ae0:	ldr	x27, [x21]
     ae4:	ldr	x23, [x26]
     ae8:	ldr	x28, [sp, #192]
     aec:	b	9d8 <gconv@@Base+0x100>
     af0:	cmp	x20, x23
     af4:	b.eq	be4 <gconv@@Base+0x30c>  // b.none
     af8:	add	x0, x27, #0x4
     afc:	mov	x1, x23
     b00:	cmp	x0, x25
     b04:	b.hi	f10 <gconv@@Base+0x638>  // b.pmore
     b08:	ldrb	w2, [x1], #1
     b0c:	mov	x19, x0
     b10:	cmp	x20, x1
     b14:	ldr	w0, [x12, x2, lsl #2]
     b18:	stur	w0, [x19, #-4]
     b1c:	b.eq	bf0 <gconv@@Base+0x318>  // b.none
     b20:	add	x0, x19, #0x4
     b24:	cmp	x25, x0
     b28:	b.cs	b08 <gconv@@Base+0x230>  // b.hs, b.nlast
     b2c:	mov	w14, #0x5                   	// #5
     b30:	str	x1, [x26]
     b34:	ldr	x0, [sp, #120]
     b38:	cbz	x0, a64 <gconv@@Base+0x18c>
     b3c:	mov	w26, w14
     b40:	str	x19, [x0]
     b44:	adrp	x0, 12000 <gconv@@Base+0x11728>
     b48:	ldr	x0, [x0, #4056]
     b4c:	ldr	x1, [sp, #232]
     b50:	ldr	x0, [x0]
     b54:	eor	x0, x1, x0
     b58:	cbnz	x0, 13b4 <gconv@@Base+0xadc>
     b5c:	mov	w0, w26
     b60:	ldp	x19, x20, [sp, #16]
     b64:	ldp	x21, x22, [sp, #32]
     b68:	ldp	x23, x24, [sp, #48]
     b6c:	ldp	x25, x26, [sp, #64]
     b70:	ldp	x27, x28, [sp, #80]
     b74:	ldp	x29, x30, [sp], #240
     b78:	ret
     b7c:	mov	w14, #0x7                   	// #7
     b80:	ldr	x0, [sp, #208]
     b84:	b	a58 <gconv@@Base+0x180>
     b88:	mov	w0, #0x1c00                	// #7168
     b8c:	cmp	w0, w2, lsr #7
     b90:	b.eq	bd8 <gconv@@Base+0x300>  // b.none
     b94:	ldr	x0, [sp, #160]
     b98:	cbz	x0, 10bc <gconv@@Base+0x7e4>
     b9c:	ldr	w0, [x21, #16]
     ba0:	tbnz	w0, #3, ca4 <gconv@@Base+0x3cc>
     ba4:	ldr	x0, [sp, #208]
     ba8:	tbnz	w7, #1, e20 <gconv@@Base+0x548>
     bac:	mov	w14, #0x6                   	// #6
     bb0:	b	a58 <gconv@@Base+0x180>
     bb4:	cmp	w14, #0x5
     bb8:	b.eq	c88 <gconv@@Base+0x3b0>  // b.none
     bbc:	ldr	x0, [sp, #128]
     bc0:	mov	w7, w14
     bc4:	ldr	x0, [x0, #96]
     bc8:	b	adc <gconv@@Base+0x204>
     bcc:	mov	w14, #0x5                   	// #5
     bd0:	ldr	x0, [sp, #208]
     bd4:	b	a58 <gconv@@Base+0x180>
     bd8:	mov	x0, x5
     bdc:	str	x5, [sp, #208]
     be0:	b	a50 <gconv@@Base+0x178>
     be4:	mov	x1, x20
     be8:	mov	x19, x27
     bec:	nop
     bf0:	mov	w14, #0x4                   	// #4
     bf4:	str	x1, [x26]
     bf8:	b	b34 <gconv@@Base+0x25c>
     bfc:	ldr	x28, [sp, #128]
     c00:	mov	x11, x26
     c04:	ldr	x1, [x22]
     c08:	mov	w26, w14
     c0c:	ldr	x2, [sp, #192]
     c10:	ldr	x0, [x28, #96]
     c14:	str	x19, [x21]
     c18:	add	x1, x1, x2
     c1c:	str	x1, [x22]
     c20:	cmp	x0, #0x0
     c24:	ldr	w0, [sp, #172]
     c28:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     c2c:	ccmp	w26, #0x7, #0x0, ne  // ne = any
     c30:	b.ne	b44 <gconv@@Base+0x26c>  // b.any
     c34:	ldr	x0, [x11]
     c38:	sub	x2, x20, x0
     c3c:	cmp	x2, #0x3
     c40:	b.gt	1334 <gconv@@Base+0xa5c>
     c44:	ldr	x4, [x21, #32]
     c48:	cmp	x0, x20
     c4c:	add	x0, x0, #0x1
     c50:	add	x1, x4, #0x4
     c54:	b.cs	1304 <gconv@@Base+0xa2c>  // b.hs, b.nlast
     c58:	str	x0, [x11]
     c5c:	cmp	x20, x0
     c60:	add	x0, x0, #0x1
     c64:	ldurb	w3, [x0, #-2]
     c68:	strb	w3, [x1], #1
     c6c:	b.ne	c58 <gconv@@Base+0x380>  // b.any
     c70:	mov	w1, w2
     c74:	ldr	w0, [x4]
     c78:	and	w0, w0, #0xfffffff8
     c7c:	orr	w0, w0, w1
     c80:	str	w0, [x4]
     c84:	b	b44 <gconv@@Base+0x26c>
     c88:	ldr	x0, [sp, #128]
     c8c:	ldr	x0, [x0, #96]
     c90:	b	ae0 <gconv@@Base+0x208>
     c94:	ldr	x0, [sp, #128]
     c98:	mov	w7, w14
     c9c:	ldr	x0, [x0, #96]
     ca0:	b	adc <gconv@@Base+0x204>
     ca4:	ldr	x2, [x26]
     ca8:	mov	x4, x20
     cac:	ldr	x0, [sp, #128]
     cb0:	mov	x1, x21
     cb4:	ldr	x6, [sp, #160]
     cb8:	str	x3, [sp, #96]
     cbc:	ldr	x5, [sp, #176]
     cc0:	str	w7, [sp, #104]
     cc4:	str	x12, [sp, #112]
     cc8:	str	x18, [sp, #184]
     ccc:	bl	700 <__gconv_transliterate@plt>
     cd0:	mov	w14, w0
     cd4:	ldr	w7, [sp, #104]
     cd8:	cmp	w0, #0x6
     cdc:	ldr	x3, [sp, #96]
     ce0:	ldr	x12, [sp, #112]
     ce4:	ldr	x18, [sp, #184]
     ce8:	b.eq	f20 <gconv@@Base+0x648>  // b.none
     cec:	cmp	w0, #0x5
     cf0:	ldp	x0, x19, [sp, #208]
     cf4:	b.ne	a50 <gconv@@Base+0x178>  // b.any
     cf8:	b	a58 <gconv@@Base+0x180>
     cfc:	ldr	x7, [x21, #32]
     d00:	ldr	w3, [x7]
     d04:	ands	w4, w3, #0x7
     d08:	b.eq	9a4 <gconv@@Base+0xcc>  // b.none
     d0c:	cbnz	x15, 13f8 <gconv@@Base+0xb20>
     d10:	stp	x22, x8, [sp, #208]
     d14:	cmp	w4, #0x4
     d18:	b.hi	13d8 <gconv@@Base+0xb00>  // b.pmore
     d1c:	mov	w19, w4
     d20:	cbz	w4, 109c <gconv@@Base+0x7c4>
     d24:	add	x6, x7, #0x3
     d28:	add	x13, sp, #0xe0
     d2c:	mov	x0, #0x1                   	// #1
     d30:	add	x1, x13, x0
     d34:	ldrb	w5, [x6, x0]
     d38:	cmp	x19, x0
     d3c:	add	x0, x0, #0x1
     d40:	sturb	w5, [x1, #-1]
     d44:	b.ne	d30 <gconv@@Base+0x458>  // b.any
     d48:	mov	x0, #0x4                   	// #4
     d4c:	sub	x0, x0, x19
     d50:	add	x0, x22, x0
     d54:	cmp	x20, x0
     d58:	b.cc	10c8 <gconv@@Base+0x7f0>  // b.lo, b.ul, b.last
     d5c:	cmp	x8, x23
     d60:	mov	w26, #0x5                   	// #5
     d64:	b.cs	b44 <gconv@@Base+0x26c>  // b.hs, b.nlast
     d68:	add	x0, x22, #0x1
     d6c:	add	x13, sp, #0xe0
     d70:	add	x19, x19, #0x1
     d74:	str	x0, [sp, #208]
     d78:	add	x1, x13, x19
     d7c:	cmp	x19, #0x3
     d80:	ldurb	w2, [x0, #-1]
     d84:	ccmp	x20, x0, #0x0, ls  // ls = plast
     d88:	add	x0, x0, #0x1
     d8c:	sturb	w2, [x1, #-1]
     d90:	b.hi	d70 <gconv@@Base+0x498>  // b.pmore
     d94:	ldr	w1, [sp, #224]
     d98:	str	x13, [sp, #208]
     d9c:	cmp	w1, #0x2db
     da0:	b.hi	11ec <gconv@@Base+0x914>  // b.pmore
     da4:	adrp	x0, 1000 <gconv@@Base+0x728>
     da8:	add	x0, x0, #0x5c0
     dac:	add	x0, x0, #0x400
     db0:	cmp	w1, #0x0
     db4:	ldrb	w0, [x0, w1, uxtw]
     db8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     dbc:	b.eq	1108 <gconv@@Base+0x830>  // b.none
     dc0:	add	x1, x8, #0x1
     dc4:	str	x1, [sp, #216]
     dc8:	strb	w0, [x8]
     dcc:	ldr	x0, [sp, #208]
     dd0:	add	x0, x0, #0x4
     dd4:	str	x0, [sp, #208]
     dd8:	cmp	x0, x13
     ddc:	b.eq	10ac <gconv@@Base+0x7d4>  // b.none
     de0:	ldr	w3, [x7]
     de4:	sub	x13, x0, x13
     de8:	and	w4, w3, #0x7
     dec:	mov	w0, w4
     df0:	cmp	x0, x13
     df4:	b.ge	13b8 <gconv@@Base+0xae0>  // b.tcont
     df8:	ldr	x22, [x11]
     dfc:	sub	x0, x13, x0
     e00:	and	w3, w3, #0xfffffff8
     e04:	add	x22, x22, x0
     e08:	str	x22, [x11]
     e0c:	ldr	x13, [sp, #192]
     e10:	ldr	x0, [x28, #96]
     e14:	ldr	x8, [sp, #216]
     e18:	str	w3, [x7]
     e1c:	b	9a4 <gconv@@Base+0xcc>
     e20:	ldr	x2, [sp, #160]
     e24:	add	x0, x0, #0x4
     e28:	mov	w14, #0x6                   	// #6
     e2c:	str	x0, [sp, #208]
     e30:	ldr	x1, [x2]
     e34:	add	x1, x1, #0x1
     e38:	str	x1, [x2]
     e3c:	b	a50 <gconv@@Base+0x178>
     e40:	mov	x0, #0x0                   	// #0
     e44:	cbz	x22, e4c <gconv@@Base+0x574>
     e48:	ldr	x0, [x22]
     e4c:	ldr	x1, [sp, #192]
     e50:	add	x0, x0, x1
     e54:	cmp	x0, x28
     e58:	b.eq	f8c <gconv@@Base+0x6b4>  // b.none
     e5c:	ldr	x0, [sp, #128]
     e60:	str	x23, [x26]
     e64:	ldr	x0, [x0, #96]
     e68:	cbz	x0, fb4 <gconv@@Base+0x6dc>
     e6c:	stp	x23, x27, [sp, #208]
     e70:	cmp	x20, x23
     e74:	ldr	w19, [x21, #16]
     e78:	b.eq	1208 <gconv@@Base+0x930>  // b.none
     e7c:	mov	x0, x27
     e80:	add	x28, sp, #0xd0
     e84:	mov	x4, #0x4                   	// #4
     e88:	add	x5, x23, #0x4
     e8c:	cmp	x20, x5
     e90:	b.cc	ff8 <gconv@@Base+0x720>  // b.lo, b.ul, b.last
     e94:	cmp	x14, x0
     e98:	b.ls	1070 <gconv@@Base+0x798>  // b.plast
     e9c:	ldr	w2, [x23]
     ea0:	cmp	w2, #0x2db
     ea4:	b.hi	1084 <gconv@@Base+0x7ac>  // b.pmore
     ea8:	ldrb	w5, [x18, w2, uxtw]
     eac:	cmp	w2, #0x0
     eb0:	ccmp	w5, #0x0, #0x0, ne  // ne = any
     eb4:	b.eq	1028 <gconv@@Base+0x750>  // b.none
     eb8:	add	x2, x0, #0x1
     ebc:	str	x2, [sp, #216]
     ec0:	strb	w5, [x0]
     ec4:	ldp	x23, x0, [sp, #208]
     ec8:	add	x23, x23, #0x4
     ecc:	str	x23, [sp, #208]
     ed0:	cmp	x20, x23
     ed4:	b.ne	e88 <gconv@@Base+0x5b0>  // b.any
     ed8:	ldr	x14, [sp, #200]
     edc:	str	x20, [x26]
     ee0:	cmp	x0, x14
     ee4:	b.ne	1050 <gconv@@Base+0x778>  // b.any
     ee8:	cmp	x4, #0x5
     eec:	b.ne	1008 <gconv@@Base+0x730>  // b.any
     ef0:	cmp	x27, x0
     ef4:	ldr	x0, [sp, #128]
     ef8:	ldr	x0, [x0, #96]
     efc:	b.ne	adc <gconv@@Base+0x204>  // b.any
     f00:	ldr	w1, [x21, #20]
     f04:	sub	w1, w1, #0x1
     f08:	str	w1, [x21, #20]
     f0c:	b	adc <gconv@@Base+0x204>
     f10:	mov	x19, x27
     f14:	mov	w14, #0x5                   	// #5
     f18:	str	x1, [x26]
     f1c:	b	b34 <gconv@@Base+0x25c>
     f20:	ldr	x19, [sp, #216]
     f24:	b	ba4 <gconv@@Base+0x2cc>
     f28:	cbnz	x15, 1354 <gconv@@Base+0xa7c>
     f2c:	ldr	x0, [x21, #32]
     f30:	mov	w26, #0x0                   	// #0
     f34:	str	xzr, [x0]
     f38:	ldr	w0, [x21, #16]
     f3c:	tbnz	w0, #0, b44 <gconv@@Base+0x26c>
     f40:	mov	x0, x24
     f44:	str	w6, [sp, #96]
     f48:	bl	740 <_dl_mcount_wrapper_check@plt>
     f4c:	ldp	x0, x1, [sp, #136]
     f50:	mov	w7, w25
     f54:	ldr	w6, [sp, #96]
     f58:	mov	x5, x27
     f5c:	mov	x4, #0x0                   	// #0
     f60:	mov	x3, #0x0                   	// #0
     f64:	mov	x2, #0x0                   	// #0
     f68:	blr	x24
     f6c:	mov	w26, w0
     f70:	b	b44 <gconv@@Base+0x26c>
     f74:	mov	x11, x26
     f78:	mov	w26, w7
     f7c:	b	c20 <gconv@@Base+0x348>
     f80:	mov	x0, x20
     f84:	mov	w14, #0x4                   	// #4
     f88:	b	a58 <gconv@@Base+0x180>
     f8c:	ldr	x0, [sp, #128]
     f90:	sub	x14, x19, x14
     f94:	ldr	x1, [x0, #96]
     f98:	ldr	x0, [x26]
     f9c:	cbz	x1, 1148 <gconv@@Base+0x870>
     fa0:	sub	x14, x0, x14, lsl #2
     fa4:	str	x14, [x26]
     fa8:	ldr	x0, [sp, #128]
     fac:	ldr	x0, [x0, #96]
     fb0:	b	adc <gconv@@Base+0x204>
     fb4:	cmp	x20, x23
     fb8:	b.eq	1208 <gconv@@Base+0x930>  // b.none
     fbc:	add	x1, x27, #0x4
     fc0:	cmp	x1, x14
     fc4:	b.hi	121c <gconv@@Base+0x944>  // b.pmore
     fc8:	ldrb	w2, [x23], #1
     fcc:	mov	x0, x1
     fd0:	cmp	x20, x23
     fd4:	ldr	w1, [x12, x2, lsl #2]
     fd8:	stur	w1, [x0, #-4]
     fdc:	b.eq	10fc <gconv@@Base+0x824>  // b.none
     fe0:	add	x1, x0, #0x4
     fe4:	cmp	x14, x1
     fe8:	b.cs	fc8 <gconv@@Base+0x6f0>  // b.hs, b.nlast
     fec:	mov	x4, #0x5                   	// #5
     ff0:	str	x23, [x26]
     ff4:	b	ee0 <gconv@@Base+0x608>
     ff8:	ldp	x1, x2, [sp, #200]
     ffc:	str	x2, [x26]
    1000:	cmp	x1, x0
    1004:	b.ne	1050 <gconv@@Base+0x778>  // b.any
    1008:	adrp	x3, 1000 <gconv@@Base+0x728>
    100c:	adrp	x1, 1000 <gconv@@Base+0x728>
    1010:	adrp	x0, 1000 <gconv@@Base+0x728>
    1014:	add	x3, x3, #0x5b8
    1018:	add	x1, x1, #0x438
    101c:	add	x0, x0, #0x568
    1020:	mov	w2, #0x2eb                 	// #747
    1024:	bl	750 <__assert_fail@plt>
    1028:	ldr	x1, [sp, #160]
    102c:	cbz	x1, ff8 <gconv@@Base+0x720>
    1030:	ldr	w1, [x21, #16]
    1034:	tbnz	w1, #3, 1160 <gconv@@Base+0x888>
    1038:	ldr	x9, [sp, #208]
    103c:	tbnz	w19, #1, 11cc <gconv@@Base+0x8f4>
    1040:	ldr	x1, [sp, #200]
    1044:	str	x9, [x26]
    1048:	cmp	x0, x1
    104c:	b.eq	1008 <gconv@@Base+0x730>  // b.none
    1050:	adrp	x3, 1000 <gconv@@Base+0x728>
    1054:	adrp	x1, 1000 <gconv@@Base+0x728>
    1058:	adrp	x0, 1000 <gconv@@Base+0x728>
    105c:	add	x3, x3, #0x5b8
    1060:	add	x1, x1, #0x438
    1064:	add	x0, x0, #0x550
    1068:	mov	w2, #0x2ea                 	// #746
    106c:	bl	750 <__assert_fail@plt>
    1070:	ldp	x1, x2, [sp, #200]
    1074:	str	x2, [x26]
    1078:	cmp	x1, x0
    107c:	b.eq	ef0 <gconv@@Base+0x618>  // b.none
    1080:	b	1050 <gconv@@Base+0x778>
    1084:	mov	w1, #0x1c00                	// #7168
    1088:	cmp	w1, w2, lsr #7
    108c:	b.ne	1028 <gconv@@Base+0x750>  // b.any
    1090:	mov	x23, x5
    1094:	str	x5, [sp, #208]
    1098:	b	ed0 <gconv@@Base+0x5f8>
    109c:	mov	x0, #0x4                   	// #4
    10a0:	mov	x19, #0x0                   	// #0
    10a4:	b	d50 <gconv@@Base+0x478>
    10a8:	cbnz	w26, b44 <gconv@@Base+0x26c>
    10ac:	ldr	x22, [x11]
    10b0:	ldr	x0, [x28, #96]
    10b4:	ldr	x13, [sp, #192]
    10b8:	b	9a4 <gconv@@Base+0xcc>
    10bc:	mov	w14, #0x6                   	// #6
    10c0:	ldr	x0, [sp, #208]
    10c4:	b	a58 <gconv@@Base+0x180>
    10c8:	str	x20, [x11]
    10cc:	cmp	x22, x20
    10d0:	b.cs	10f4 <gconv@@Base+0x81c>  // b.hs, b.nlast
    10d4:	add	x7, x7, x19
    10d8:	add	x22, x22, #0x1
    10dc:	str	x22, [sp, #208]
    10e0:	cmp	x20, x22
    10e4:	add	x7, x7, #0x1
    10e8:	ldurb	w0, [x22, #-1]
    10ec:	strb	w0, [x7, #3]
    10f0:	b.ne	10d8 <gconv@@Base+0x800>  // b.any
    10f4:	mov	w26, #0x7                   	// #7
    10f8:	b	b44 <gconv@@Base+0x26c>
    10fc:	mov	x4, #0x4                   	// #4
    1100:	str	x23, [x26]
    1104:	b	ee0 <gconv@@Base+0x608>
    1108:	ldr	x0, [sp, #160]
    110c:	cbz	x0, 1140 <gconv@@Base+0x868>
    1110:	tbnz	w12, #3, 1228 <gconv@@Base+0x950>
    1114:	mov	x0, x13
    1118:	mov	w26, #0x6                   	// #6
    111c:	tbz	w12, #1, b44 <gconv@@Base+0x26c>
    1120:	ldr	x2, [sp, #160]
    1124:	add	x0, x0, #0x4
    1128:	str	x0, [sp, #208]
    112c:	ldr	x1, [x2]
    1130:	add	x1, x1, #0x1
    1134:	str	x1, [x2]
    1138:	cmp	x0, x13
    113c:	b.ne	de0 <gconv@@Base+0x508>  // b.any
    1140:	mov	w26, #0x6                   	// #6
    1144:	b	b44 <gconv@@Base+0x26c>
    1148:	cmp	x14, #0x0
    114c:	add	x1, x14, #0x3
    1150:	csel	x14, x1, x14, lt  // lt = tstop
    1154:	sub	x0, x0, x14, asr #2
    1158:	str	x0, [x26]
    115c:	b	ad4 <gconv@@Base+0x1fc>
    1160:	ldr	x2, [x26]
    1164:	mov	x4, x20
    1168:	ldr	x0, [sp, #128]
    116c:	mov	x3, x28
    1170:	ldr	x6, [sp, #160]
    1174:	mov	x1, x21
    1178:	ldr	x5, [sp, #176]
    117c:	str	x14, [sp, #96]
    1180:	str	w7, [sp, #104]
    1184:	str	x12, [sp, #112]
    1188:	str	x18, [sp, #184]
    118c:	bl	700 <__gconv_transliterate@plt>
    1190:	sxtw	x4, w0
    1194:	ldr	w7, [sp, #104]
    1198:	cmp	w4, #0x6
    119c:	ldr	x14, [sp, #96]
    11a0:	ldr	x12, [sp, #112]
    11a4:	ldr	x18, [sp, #184]
    11a8:	b.eq	1214 <gconv@@Base+0x93c>  // b.none
    11ac:	cmp	w4, #0x5
    11b0:	ldp	x23, x0, [sp, #208]
    11b4:	b.ne	ed0 <gconv@@Base+0x5f8>  // b.any
    11b8:	ldr	x1, [sp, #200]
    11bc:	str	x23, [x26]
    11c0:	cmp	x1, x0
    11c4:	b.eq	ef0 <gconv@@Base+0x618>  // b.none
    11c8:	b	1050 <gconv@@Base+0x778>
    11cc:	ldr	x2, [sp, #160]
    11d0:	add	x23, x9, #0x4
    11d4:	mov	x4, #0x6                   	// #6
    11d8:	str	x23, [sp, #208]
    11dc:	ldr	x1, [x2]
    11e0:	add	x1, x1, #0x1
    11e4:	str	x1, [x2]
    11e8:	b	ed0 <gconv@@Base+0x5f8>
    11ec:	mov	w0, #0x1c00                	// #7168
    11f0:	cmp	w0, w1, lsr #7
    11f4:	b.ne	1108 <gconv@@Base+0x830>  // b.any
    11f8:	add	x0, x13, #0x4
    11fc:	mov	x13, #0x4                   	// #4
    1200:	str	x0, [sp, #208]
    1204:	b	dec <gconv@@Base+0x514>
    1208:	cmp	x14, x27
    120c:	b.eq	1008 <gconv@@Base+0x730>  // b.none
    1210:	b	1050 <gconv@@Base+0x778>
    1214:	ldr	x0, [sp, #216]
    1218:	b	1038 <gconv@@Base+0x760>
    121c:	cmp	x14, x27
    1220:	b.eq	f00 <gconv@@Base+0x628>  // b.none
    1224:	b	1050 <gconv@@Base+0x778>
    1228:	add	x4, x13, x19
    122c:	mov	x6, x0
    1230:	mov	x2, x22
    1234:	add	x5, sp, #0xd8
    1238:	add	x3, sp, #0xd0
    123c:	mov	x1, x21
    1240:	mov	x0, x28
    1244:	stp	x4, x13, [sp, #96]
    1248:	str	w12, [sp, #112]
    124c:	stp	x7, x8, [sp, #120]
    1250:	str	x11, [sp, #152]
    1254:	str	x15, [sp, #176]
    1258:	bl	700 <__gconv_transliterate@plt>
    125c:	ldr	w12, [sp, #112]
    1260:	mov	w26, w0
    1264:	cmp	w0, #0x6
    1268:	ldr	x13, [sp, #104]
    126c:	ldr	x7, [sp, #120]
    1270:	ldr	x11, [sp, #152]
    1274:	ldr	x15, [sp, #176]
    1278:	ldr	x0, [sp, #208]
    127c:	b.eq	130c <gconv@@Base+0xa34>  // b.none
    1280:	cmp	x0, x13
    1284:	ldr	x4, [sp, #96]
    1288:	ldr	x8, [sp, #128]
    128c:	b.ne	de0 <gconv@@Base+0x508>  // b.any
    1290:	cmp	w26, #0x7
    1294:	b.ne	10a8 <gconv@@Base+0x7d0>  // b.any
    1298:	add	x0, x13, #0x4
    129c:	cmp	x4, x0
    12a0:	b.eq	1394 <gconv@@Base+0xabc>  // b.none
    12a4:	ldr	w0, [x7]
    12a8:	ldr	x1, [x11]
    12ac:	and	x2, x0, #0x7
    12b0:	sub	x2, x19, x2
    12b4:	and	w0, w0, #0xfffffff8
    12b8:	add	x1, x1, x2
    12bc:	str	x1, [x11]
    12c0:	cmp	x19, w0, sxtw
    12c4:	b.le	1374 <gconv@@Base+0xa9c>
    12c8:	cmp	x19, #0x4
    12cc:	b.hi	1314 <gconv@@Base+0xa3c>  // b.pmore
    12d0:	orr	w0, w0, w19
    12d4:	str	w0, [x7]
    12d8:	cmp	x4, x13
    12dc:	b.ls	10f4 <gconv@@Base+0x81c>  // b.plast
    12e0:	add	x7, x7, #0x4
    12e4:	add	x13, x13, #0x1
    12e8:	str	x13, [sp, #208]
    12ec:	cmp	x4, x13
    12f0:	ldurb	w0, [x13, #-1]
    12f4:	strb	w0, [x7], #1
    12f8:	b.ne	12e4 <gconv@@Base+0xa0c>  // b.any
    12fc:	mov	w26, #0x7                   	// #7
    1300:	b	b44 <gconv@@Base+0x26c>
    1304:	mov	w1, #0x0                   	// #0
    1308:	b	c74 <gconv@@Base+0x39c>
    130c:	tbz	w12, #1, 1138 <gconv@@Base+0x860>
    1310:	b	1120 <gconv@@Base+0x848>
    1314:	adrp	x3, 1000 <gconv@@Base+0x728>
    1318:	adrp	x1, 1000 <gconv@@Base+0x728>
    131c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1320:	add	x3, x3, #0x5a0
    1324:	add	x1, x1, #0x468
    1328:	add	x0, x0, #0x520
    132c:	mov	w2, #0x1e6                 	// #486
    1330:	bl	750 <__assert_fail@plt>
    1334:	adrp	x3, 1000 <gconv@@Base+0x728>
    1338:	adrp	x1, 1000 <gconv@@Base+0x728>
    133c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1340:	add	x3, x3, #0x5b8
    1344:	add	x1, x1, #0x438
    1348:	add	x0, x0, #0x588
    134c:	mov	w2, #0x31e                 	// #798
    1350:	bl	750 <__assert_fail@plt>
    1354:	adrp	x3, 1000 <gconv@@Base+0x728>
    1358:	adrp	x1, 1000 <gconv@@Base+0x728>
    135c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1360:	add	x3, x3, #0x5b8
    1364:	add	x1, x1, #0x438
    1368:	add	x0, x0, #0x450
    136c:	mov	w2, #0x1a4                 	// #420
    1370:	bl	750 <__assert_fail@plt>
    1374:	adrp	x3, 1000 <gconv@@Base+0x728>
    1378:	adrp	x1, 1000 <gconv@@Base+0x728>
    137c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1380:	add	x3, x3, #0x5a0
    1384:	add	x1, x1, #0x468
    1388:	add	x0, x0, #0x4f8
    138c:	mov	w2, #0x1e5                 	// #485
    1390:	bl	750 <__assert_fail@plt>
    1394:	adrp	x3, 1000 <gconv@@Base+0x728>
    1398:	adrp	x1, 1000 <gconv@@Base+0x728>
    139c:	adrp	x0, 1000 <gconv@@Base+0x728>
    13a0:	add	x3, x3, #0x5a0
    13a4:	add	x1, x1, #0x468
    13a8:	add	x0, x0, #0x4d0
    13ac:	mov	w2, #0x1db                 	// #475
    13b0:	bl	750 <__assert_fail@plt>
    13b4:	bl	710 <__stack_chk_fail@plt>
    13b8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13bc:	adrp	x1, 1000 <gconv@@Base+0x728>
    13c0:	adrp	x0, 1000 <gconv@@Base+0x728>
    13c4:	add	x3, x3, #0x5a0
    13c8:	add	x1, x1, #0x468
    13cc:	add	x0, x0, #0x4a8
    13d0:	mov	w2, #0x1c9                 	// #457
    13d4:	bl	750 <__assert_fail@plt>
    13d8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13dc:	adrp	x1, 1000 <gconv@@Base+0x728>
    13e0:	adrp	x0, 1000 <gconv@@Base+0x728>
    13e4:	add	x3, x3, #0x5a0
    13e8:	add	x1, x1, #0x468
    13ec:	add	x0, x0, #0x478
    13f0:	mov	w2, #0x18b                 	// #395
    13f4:	bl	750 <__assert_fail@plt>
    13f8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13fc:	adrp	x1, 1000 <gconv@@Base+0x728>
    1400:	adrp	x0, 1000 <gconv@@Base+0x728>
    1404:	add	x3, x3, #0x5b8
    1408:	add	x1, x1, #0x438
    140c:	add	x0, x0, #0x450
    1410:	mov	w2, #0x234                 	// #564
    1414:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001418 <.fini>:
    1418:	stp	x29, x30, [sp, #-16]!
    141c:	mov	x29, sp
    1420:	ldp	x29, x30, [sp], #16
    1424:	ret
