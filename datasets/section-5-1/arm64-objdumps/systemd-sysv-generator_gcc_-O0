
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysv-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401bc8 <_init>:
  401bc8:	stp	x29, x30, [sp, #-16]!
  401bcc:	mov	x29, sp
  401bd0:	bl	402100 <call_weak_fn>
  401bd4:	ldp	x29, x30, [sp], #16
  401bd8:	ret

Disassembly of section .plt:

0000000000401be0 <.plt>:
  401be0:	stp	x16, x30, [sp, #-16]!
  401be4:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401be8:	ldr	x17, [x16, #3472]
  401bec:	add	x16, x16, #0xd90
  401bf0:	br	x17
  401bf4:	nop
  401bf8:	nop
  401bfc:	nop

0000000000401c00 <safe_fclose@plt>:
  401c00:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c04:	ldr	x17, [x16, #3480]
  401c08:	add	x16, x16, #0xd98
  401c0c:	br	x17

0000000000401c10 <read_line_full@plt>:
  401c10:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c14:	ldr	x17, [x16, #3488]
  401c18:	add	x16, x16, #0xda0
  401c1c:	br	x17

0000000000401c20 <unlink@plt>:
  401c20:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c24:	ldr	x17, [x16, #3496]
  401c28:	add	x16, x16, #0xda8
  401c2c:	br	x17

0000000000401c30 <internal_hashmap_free@plt>:
  401c30:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c34:	ldr	x17, [x16, #3504]
  401c38:	add	x16, x16, #0xdb0
  401c3c:	br	x17

0000000000401c40 <internal_set_ensure_allocated@plt>:
  401c40:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c44:	ldr	x17, [x16, #3512]
  401c48:	add	x16, x16, #0xdb8
  401c4c:	br	x17

0000000000401c50 <strcmp_ptr@plt>:
  401c50:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c54:	ldr	x17, [x16, #3520]
  401c58:	add	x16, x16, #0xdc0
  401c5c:	br	x17

0000000000401c60 <stpcpy@plt>:
  401c60:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c64:	ldr	x17, [x16, #3528]
  401c68:	add	x16, x16, #0xdc8
  401c6c:	br	x17

0000000000401c70 <__libc_start_main@plt>:
  401c70:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c74:	ldr	x17, [x16, #3536]
  401c78:	add	x16, x16, #0xdd0
  401c7c:	br	x17

0000000000401c80 <unit_name_build@plt>:
  401c80:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c84:	ldr	x17, [x16, #3544]
  401c88:	add	x16, x16, #0xdd8
  401c8c:	br	x17

0000000000401c90 <lookup_paths_free@plt>:
  401c90:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401c94:	ldr	x17, [x16, #3552]
  401c98:	add	x16, x16, #0xde0
  401c9c:	br	x17

0000000000401ca0 <__gmon_start__@plt>:
  401ca0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ca4:	ldr	x17, [x16, #3560]
  401ca8:	add	x16, x16, #0xde8
  401cac:	br	x17

0000000000401cb0 <internal_hashmap_contains@plt>:
  401cb0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401cb4:	ldr	x17, [x16, #3568]
  401cb8:	add	x16, x16, #0xdf0
  401cbc:	br	x17

0000000000401cc0 <polkit_agent_close@plt>:
  401cc0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401cc4:	ldr	x17, [x16, #3576]
  401cc8:	add	x16, x16, #0xdf8
  401ccc:	br	x17

0000000000401cd0 <free_and_strdup@plt>:
  401cd0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401cd4:	ldr	x17, [x16, #3584]
  401cd8:	add	x16, x16, #0xe00
  401cdc:	br	x17

0000000000401ce0 <is_symlink@plt>:
  401ce0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ce4:	ldr	x17, [x16, #3592]
  401ce8:	add	x16, x16, #0xe08
  401cec:	br	x17

0000000000401cf0 <hidden_or_backup_file@plt>:
  401cf0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401cf4:	ldr	x17, [x16, #3600]
  401cf8:	add	x16, x16, #0xe10
  401cfc:	br	x17

0000000000401d00 <strncasecmp@plt>:
  401d00:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d04:	ldr	x17, [x16, #3608]
  401d08:	add	x16, x16, #0xe18
  401d0c:	br	x17

0000000000401d10 <fprintf@plt>:
  401d10:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d14:	ldr	x17, [x16, #3616]
  401d18:	add	x16, x16, #0xe20
  401d1c:	br	x17

0000000000401d20 <memcpy@plt>:
  401d20:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d24:	ldr	x17, [x16, #3624]
  401d28:	add	x16, x16, #0xe28
  401d2c:	br	x17

0000000000401d30 <strcasestr@plt>:
  401d30:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d34:	ldr	x17, [x16, #3632]
  401d38:	add	x16, x16, #0xe30
  401d3c:	br	x17

0000000000401d40 <symlink@plt>:
  401d40:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d44:	ldr	x17, [x16, #3640]
  401d48:	add	x16, x16, #0xe38
  401d4c:	br	x17

0000000000401d50 <strjoin_real@plt>:
  401d50:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d54:	ldr	x17, [x16, #3648]
  401d58:	add	x16, x16, #0xe40
  401d5c:	br	x17

0000000000401d60 <dirfd@plt>:
  401d60:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d64:	ldr	x17, [x16, #3656]
  401d68:	add	x16, x16, #0xe48
  401d6c:	br	x17

0000000000401d70 <log_assert_failed_realm@plt>:
  401d70:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d74:	ldr	x17, [x16, #3664]
  401d78:	add	x16, x16, #0xe50
  401d7c:	br	x17

0000000000401d80 <readdir64@plt>:
  401d80:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d84:	ldr	x17, [x16, #3672]
  401d88:	add	x16, x16, #0xe58
  401d8c:	br	x17

0000000000401d90 <path_split_and_make_absolute@plt>:
  401d90:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401d94:	ldr	x17, [x16, #3680]
  401d98:	add	x16, x16, #0xe60
  401d9c:	br	x17

0000000000401da0 <path_is_absolute@plt>:
  401da0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401da4:	ldr	x17, [x16, #3688]
  401da8:	add	x16, x16, #0xe68
  401dac:	br	x17

0000000000401db0 <closedir@plt>:
  401db0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401db4:	ldr	x17, [x16, #3696]
  401db8:	add	x16, x16, #0xe70
  401dbc:	br	x17

0000000000401dc0 <strncmp@plt>:
  401dc0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401dc4:	ldr	x17, [x16, #3704]
  401dc8:	add	x16, x16, #0xe78
  401dcc:	br	x17

0000000000401dd0 <abort@plt>:
  401dd0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401dd4:	ldr	x17, [x16, #3712]
  401dd8:	add	x16, x16, #0xe80
  401ddc:	br	x17

0000000000401de0 <set_iterate@plt>:
  401de0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401de4:	ldr	x17, [x16, #3720]
  401de8:	add	x16, x16, #0xe88
  401dec:	br	x17

0000000000401df0 <strv_new_internal@plt>:
  401df0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401df4:	ldr	x17, [x16, #3728]
  401df8:	add	x16, x16, #0xe90
  401dfc:	br	x17

0000000000401e00 <strspn@plt>:
  401e00:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e04:	ldr	x17, [x16, #3736]
  401e08:	add	x16, x16, #0xe98
  401e0c:	br	x17

0000000000401e10 <internal_hashmap_get@plt>:
  401e10:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e14:	ldr	x17, [x16, #3744]
  401e18:	add	x16, x16, #0xea0
  401e1c:	br	x17

0000000000401e20 <undecchar@plt>:
  401e20:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e24:	ldr	x17, [x16, #3752]
  401e28:	add	x16, x16, #0xea8
  401e2c:	br	x17

0000000000401e30 <log_setup_generator@plt>:
  401e30:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e34:	ldr	x17, [x16, #3760]
  401e38:	add	x16, x16, #0xeb0
  401e3c:	br	x17

0000000000401e40 <strreplace@plt>:
  401e40:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e44:	ldr	x17, [x16, #3768]
  401e48:	add	x16, x16, #0xeb8
  401e4c:	br	x17

0000000000401e50 <__fxstatat64@plt>:
  401e50:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e54:	ldr	x17, [x16, #3776]
  401e58:	add	x16, x16, #0xec0
  401e5c:	br	x17

0000000000401e60 <__errno_location@plt>:
  401e60:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e64:	ldr	x17, [x16, #3784]
  401e68:	add	x16, x16, #0xec8
  401e6c:	br	x17

0000000000401e70 <strv_free@plt>:
  401e70:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e74:	ldr	x17, [x16, #3792]
  401e78:	add	x16, x16, #0xed0
  401e7c:	br	x17

0000000000401e80 <strv_extend@plt>:
  401e80:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e84:	ldr	x17, [x16, #3800]
  401e88:	add	x16, x16, #0xed8
  401e8c:	br	x17

0000000000401e90 <generator_add_symlink@plt>:
  401e90:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401e94:	ldr	x17, [x16, #3808]
  401e98:	add	x16, x16, #0xee0
  401e9c:	br	x17

0000000000401ea0 <internal_hashmap_new@plt>:
  401ea0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ea4:	ldr	x17, [x16, #3816]
  401ea8:	add	x16, x16, #0xee8
  401eac:	br	x17

0000000000401eb0 <__stack_chk_fail@plt>:
  401eb0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401eb4:	ldr	x17, [x16, #3824]
  401eb8:	add	x16, x16, #0xef0
  401ebc:	br	x17

0000000000401ec0 <basename@plt>:
  401ec0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ec4:	ldr	x17, [x16, #3832]
  401ec8:	add	x16, x16, #0xef8
  401ecc:	br	x17

0000000000401ed0 <path_join_internal@plt>:
  401ed0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ed4:	ldr	x17, [x16, #3840]
  401ed8:	add	x16, x16, #0xf00
  401edc:	br	x17

0000000000401ee0 <ask_password_agent_close@plt>:
  401ee0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ee4:	ldr	x17, [x16, #3848]
  401ee8:	add	x16, x16, #0xf08
  401eec:	br	x17

0000000000401ef0 <pager_close@plt>:
  401ef0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ef4:	ldr	x17, [x16, #3856]
  401ef8:	add	x16, x16, #0xf10
  401efc:	br	x17

0000000000401f00 <lookup_paths_init@plt>:
  401f00:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f04:	ldr	x17, [x16, #3864]
  401f08:	add	x16, x16, #0xf18
  401f0c:	br	x17

0000000000401f10 <log_internal_realm@plt>:
  401f10:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f14:	ldr	x17, [x16, #3872]
  401f18:	add	x16, x16, #0xf20
  401f1c:	br	x17

0000000000401f20 <hashmap_put@plt>:
  401f20:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f24:	ldr	x17, [x16, #3880]
  401f28:	add	x16, x16, #0xf28
  401f2c:	br	x17

0000000000401f30 <unit_name_mangle_with_suffix@plt>:
  401f30:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f34:	ldr	x17, [x16, #3888]
  401f38:	add	x16, x16, #0xf30
  401f3c:	br	x17

0000000000401f40 <endswith@plt>:
  401f40:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f44:	ldr	x17, [x16, #3896]
  401f48:	add	x16, x16, #0xf38
  401f4c:	br	x17

0000000000401f50 <unit_name_to_type@plt>:
  401f50:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f54:	ldr	x17, [x16, #3904]
  401f58:	add	x16, x16, #0xf40
  401f5c:	br	x17

0000000000401f60 <strcmp@plt>:
  401f60:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f64:	ldr	x17, [x16, #3912]
  401f68:	add	x16, x16, #0xf48
  401f6c:	br	x17

0000000000401f70 <extract_first_word@plt>:
  401f70:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f74:	ldr	x17, [x16, #3920]
  401f78:	add	x16, x16, #0xf50
  401f7c:	br	x17

0000000000401f80 <opendir@plt>:
  401f80:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f84:	ldr	x17, [x16, #3928]
  401f88:	add	x16, x16, #0xf58
  401f8c:	br	x17

0000000000401f90 <internal_hashmap_iterate@plt>:
  401f90:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401f94:	ldr	x17, [x16, #3936]
  401f98:	add	x16, x16, #0xf60
  401f9c:	br	x17

0000000000401fa0 <strdup@plt>:
  401fa0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401fa4:	ldr	x17, [x16, #3944]
  401fa8:	add	x16, x16, #0xf68
  401fac:	br	x17

0000000000401fb0 <calloc@plt>:
  401fb0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401fb4:	ldr	x17, [x16, #3952]
  401fb8:	add	x16, x16, #0xf70
  401fbc:	br	x17

0000000000401fc0 <getenv@plt>:
  401fc0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401fc4:	ldr	x17, [x16, #3960]
  401fc8:	add	x16, x16, #0xf78
  401fcc:	br	x17

0000000000401fd0 <internal_hashmap_first_key_and_value@plt>:
  401fd0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401fd4:	ldr	x17, [x16, #3968]
  401fd8:	add	x16, x16, #0xf80
  401fdc:	br	x17

0000000000401fe0 <strchr@plt>:
  401fe0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401fe4:	ldr	x17, [x16, #3976]
  401fe8:	add	x16, x16, #0xf88
  401fec:	br	x17

0000000000401ff0 <path_strv_resolve_uniq@plt>:
  401ff0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  401ff4:	ldr	x17, [x16, #3984]
  401ff8:	add	x16, x16, #0xf90
  401ffc:	br	x17

0000000000402000 <strstrip@plt>:
  402000:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402004:	ldr	x17, [x16, #3992]
  402008:	add	x16, x16, #0xf98
  40200c:	br	x17

0000000000402010 <free@plt>:
  402010:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402014:	ldr	x17, [x16, #4000]
  402018:	add	x16, x16, #0xfa0
  40201c:	br	x17

0000000000402020 <mac_selinux_finish@plt>:
  402020:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402024:	ldr	x17, [x16, #4008]
  402028:	add	x16, x16, #0xfa8
  40202c:	br	x17

0000000000402030 <strcpy@plt>:
  402030:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402034:	ldr	x17, [x16, #4016]
  402038:	add	x16, x16, #0xfb0
  40203c:	br	x17

0000000000402040 <unit_file_exists@plt>:
  402040:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402044:	ldr	x17, [x16, #4024]
  402048:	add	x16, x16, #0xfb8
  40204c:	br	x17

0000000000402050 <set_put@plt>:
  402050:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402054:	ldr	x17, [x16, #4032]
  402058:	add	x16, x16, #0xfc0
  40205c:	br	x17

0000000000402060 <strlen@plt>:
  402060:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402064:	ldr	x17, [x16, #4040]
  402068:	add	x16, x16, #0xfc8
  40206c:	br	x17

0000000000402070 <fopen64@plt>:
  402070:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402074:	ldr	x17, [x16, #4048]
  402078:	add	x16, x16, #0xfd0
  40207c:	br	x17

0000000000402080 <log_oom_internal@plt>:
  402080:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402084:	ldr	x17, [x16, #4056]
  402088:	add	x16, x16, #0xfd8
  40208c:	br	x17

0000000000402090 <fflush_and_check@plt>:
  402090:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  402094:	ldr	x17, [x16, #4064]
  402098:	add	x16, x16, #0xfe0
  40209c:	br	x17

00000000004020a0 <log_get_max_level_realm@plt>:
  4020a0:	adrp	x16, 418000 <__FRAME_END__+0x103a4>
  4020a4:	ldr	x17, [x16, #4072]
  4020a8:	add	x16, x16, #0xfe8
  4020ac:	br	x17

Disassembly of section .text:

00000000004020b0 <_start>:
  4020b0:	mov	x29, #0x0                   	// #0
  4020b4:	mov	x30, #0x0                   	// #0
  4020b8:	mov	x5, x0
  4020bc:	ldr	x1, [sp]
  4020c0:	add	x2, sp, #0x8
  4020c4:	mov	x6, sp
  4020c8:	movz	x0, #0x0, lsl #48
  4020cc:	movk	x0, #0x0, lsl #32
  4020d0:	movk	x0, #0x40, lsl #16
  4020d4:	movk	x0, #0x6680
  4020d8:	movz	x3, #0x0, lsl #48
  4020dc:	movk	x3, #0x0, lsl #32
  4020e0:	movk	x3, #0x40, lsl #16
  4020e4:	movk	x3, #0x67d0
  4020e8:	movz	x4, #0x0, lsl #48
  4020ec:	movk	x4, #0x0, lsl #32
  4020f0:	movk	x4, #0x40, lsl #16
  4020f4:	movk	x4, #0x6850
  4020f8:	bl	401c70 <__libc_start_main@plt>
  4020fc:	bl	401dd0 <abort@plt>

0000000000402100 <call_weak_fn>:
  402100:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  402104:	ldr	x0, [x0, #4088]
  402108:	cbz	x0, 402110 <call_weak_fn+0x10>
  40210c:	b	401ca0 <__gmon_start__@plt>
  402110:	ret

0000000000402114 <deregister_tm_clones>:
  402114:	stp	x29, x30, [sp, #-32]!
  402118:	mov	x29, sp
  40211c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402120:	add	x0, x0, #0x0
  402124:	str	x0, [sp, #24]
  402128:	ldr	x0, [sp, #24]
  40212c:	str	x0, [sp, #24]
  402130:	ldr	x1, [sp, #24]
  402134:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402138:	add	x0, x0, #0x0
  40213c:	cmp	x1, x0
  402140:	b.eq	40217c <deregister_tm_clones+0x68>  // b.none
  402144:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402148:	add	x0, x0, #0x888
  40214c:	ldr	x0, [x0]
  402150:	str	x0, [sp, #16]
  402154:	ldr	x0, [sp, #16]
  402158:	str	x0, [sp, #16]
  40215c:	ldr	x0, [sp, #16]
  402160:	cmp	x0, #0x0
  402164:	b.eq	402180 <deregister_tm_clones+0x6c>  // b.none
  402168:	ldr	x1, [sp, #16]
  40216c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402170:	add	x0, x0, #0x0
  402174:	blr	x1
  402178:	b	402180 <deregister_tm_clones+0x6c>
  40217c:	nop
  402180:	ldp	x29, x30, [sp], #32
  402184:	ret

0000000000402188 <register_tm_clones>:
  402188:	stp	x29, x30, [sp, #-48]!
  40218c:	mov	x29, sp
  402190:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402194:	add	x0, x0, #0x0
  402198:	str	x0, [sp, #40]
  40219c:	ldr	x0, [sp, #40]
  4021a0:	str	x0, [sp, #40]
  4021a4:	ldr	x1, [sp, #40]
  4021a8:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  4021ac:	add	x0, x0, #0x0
  4021b0:	sub	x0, x1, x0
  4021b4:	asr	x0, x0, #3
  4021b8:	lsr	x1, x0, #63
  4021bc:	add	x0, x1, x0
  4021c0:	asr	x0, x0, #1
  4021c4:	str	x0, [sp, #32]
  4021c8:	ldr	x0, [sp, #32]
  4021cc:	cmp	x0, #0x0
  4021d0:	b.eq	402210 <register_tm_clones+0x88>  // b.none
  4021d4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4021d8:	add	x0, x0, #0x890
  4021dc:	ldr	x0, [x0]
  4021e0:	str	x0, [sp, #24]
  4021e4:	ldr	x0, [sp, #24]
  4021e8:	str	x0, [sp, #24]
  4021ec:	ldr	x0, [sp, #24]
  4021f0:	cmp	x0, #0x0
  4021f4:	b.eq	402214 <register_tm_clones+0x8c>  // b.none
  4021f8:	ldr	x2, [sp, #24]
  4021fc:	ldr	x1, [sp, #32]
  402200:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402204:	add	x0, x0, #0x0
  402208:	blr	x2
  40220c:	b	402214 <register_tm_clones+0x8c>
  402210:	nop
  402214:	ldp	x29, x30, [sp], #48
  402218:	ret

000000000040221c <__do_global_dtors_aux>:
  40221c:	stp	x29, x30, [sp, #-16]!
  402220:	mov	x29, sp
  402224:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402228:	add	x0, x0, #0xc
  40222c:	ldrb	w0, [x0]
  402230:	and	x0, x0, #0xff
  402234:	cmp	x0, #0x0
  402238:	b.ne	402254 <__do_global_dtors_aux+0x38>  // b.any
  40223c:	bl	402114 <deregister_tm_clones>
  402240:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402244:	add	x0, x0, #0xc
  402248:	mov	w1, #0x1                   	// #1
  40224c:	strb	w1, [x0]
  402250:	b	402258 <__do_global_dtors_aux+0x3c>
  402254:	nop
  402258:	ldp	x29, x30, [sp], #16
  40225c:	ret

0000000000402260 <frame_dummy>:
  402260:	stp	x29, x30, [sp, #-16]!
  402264:	mov	x29, sp
  402268:	bl	402188 <register_tm_clones>
  40226c:	nop
  402270:	ldp	x29, x30, [sp], #16
  402274:	ret

0000000000402278 <ALIGN_TO>:
  402278:	sub	sp, sp, #0x10
  40227c:	str	x0, [sp, #8]
  402280:	str	x1, [sp]
  402284:	ldr	x1, [sp, #8]
  402288:	ldr	x0, [sp]
  40228c:	add	x0, x1, x0
  402290:	sub	x1, x0, #0x1
  402294:	ldr	x0, [sp]
  402298:	neg	x0, x0
  40229c:	and	x0, x1, x0
  4022a0:	add	sp, sp, #0x10
  4022a4:	ret

00000000004022a8 <freep>:
  4022a8:	stp	x29, x30, [sp, #-32]!
  4022ac:	mov	x29, sp
  4022b0:	str	x0, [sp, #24]
  4022b4:	ldr	x0, [sp, #24]
  4022b8:	ldr	x0, [x0]
  4022bc:	bl	402010 <free@plt>
  4022c0:	nop
  4022c4:	ldp	x29, x30, [sp], #32
  4022c8:	ret

00000000004022cc <size_multiply_overflow>:
  4022cc:	sub	sp, sp, #0x10
  4022d0:	str	x0, [sp, #8]
  4022d4:	str	x1, [sp]
  4022d8:	ldr	x0, [sp]
  4022dc:	cmp	x0, #0x0
  4022e0:	cset	w0, ne  // ne = any
  4022e4:	and	w0, w0, #0xff
  4022e8:	and	x0, x0, #0xff
  4022ec:	cmp	x0, #0x0
  4022f0:	b.eq	402334 <size_multiply_overflow+0x68>  // b.none
  4022f4:	mov	x2, #0x0                   	// #0
  4022f8:	ldr	x1, [sp, #8]
  4022fc:	ldr	x0, [sp]
  402300:	umulh	x0, x1, x0
  402304:	cmp	x0, #0x0
  402308:	b.eq	402310 <size_multiply_overflow+0x44>  // b.none
  40230c:	mov	x2, #0x1                   	// #1
  402310:	mov	x0, x2
  402314:	cmp	x0, #0x0
  402318:	cset	w0, ne  // ne = any
  40231c:	and	w0, w0, #0xff
  402320:	and	x0, x0, #0xff
  402324:	cmp	x0, #0x0
  402328:	b.eq	402334 <size_multiply_overflow+0x68>  // b.none
  40232c:	mov	w0, #0x1                   	// #1
  402330:	b	402338 <size_multiply_overflow+0x6c>
  402334:	mov	w0, #0x0                   	// #0
  402338:	and	w0, w0, #0x1
  40233c:	and	w0, w0, #0xff
  402340:	add	sp, sp, #0x10
  402344:	ret

0000000000402348 <streq_ptr>:
  402348:	stp	x29, x30, [sp, #-32]!
  40234c:	mov	x29, sp
  402350:	str	x0, [sp, #24]
  402354:	str	x1, [sp, #16]
  402358:	ldr	x1, [sp, #16]
  40235c:	ldr	x0, [sp, #24]
  402360:	bl	401c50 <strcmp_ptr@plt>
  402364:	cmp	w0, #0x0
  402368:	cset	w0, eq  // eq = none
  40236c:	and	w0, w0, #0xff
  402370:	ldp	x29, x30, [sp], #32
  402374:	ret

0000000000402378 <yes_no>:
  402378:	sub	sp, sp, #0x10
  40237c:	strb	w0, [sp, #15]
  402380:	ldrb	w0, [sp, #15]
  402384:	cmp	w0, #0x0
  402388:	b.eq	402398 <yes_no+0x20>  // b.none
  40238c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402390:	add	x0, x0, #0x898
  402394:	b	4023a0 <yes_no+0x28>
  402398:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40239c:	add	x0, x0, #0x8a0
  4023a0:	add	sp, sp, #0x10
  4023a4:	ret

00000000004023a8 <isempty>:
  4023a8:	sub	sp, sp, #0x10
  4023ac:	str	x0, [sp, #8]
  4023b0:	ldr	x0, [sp, #8]
  4023b4:	cmp	x0, #0x0
  4023b8:	b.eq	4023cc <isempty+0x24>  // b.none
  4023bc:	ldr	x0, [sp, #8]
  4023c0:	ldrb	w0, [x0]
  4023c4:	cmp	w0, #0x0
  4023c8:	b.ne	4023d4 <isempty+0x2c>  // b.any
  4023cc:	mov	w0, #0x1                   	// #1
  4023d0:	b	4023d8 <isempty+0x30>
  4023d4:	mov	w0, #0x0                   	// #0
  4023d8:	and	w0, w0, #0x1
  4023dc:	and	w0, w0, #0xff
  4023e0:	add	sp, sp, #0x10
  4023e4:	ret

00000000004023e8 <empty_to_null>:
  4023e8:	stp	x29, x30, [sp, #-32]!
  4023ec:	mov	x29, sp
  4023f0:	str	x0, [sp, #24]
  4023f4:	ldr	x0, [sp, #24]
  4023f8:	bl	4023a8 <isempty>
  4023fc:	and	w0, w0, #0xff
  402400:	cmp	w0, #0x0
  402404:	b.ne	402410 <empty_to_null+0x28>  // b.any
  402408:	ldr	x0, [sp, #24]
  40240c:	b	402414 <empty_to_null+0x2c>
  402410:	mov	x0, #0x0                   	// #0
  402414:	ldp	x29, x30, [sp], #32
  402418:	ret

000000000040241c <startswith>:
  40241c:	stp	x29, x30, [sp, #-48]!
  402420:	mov	x29, sp
  402424:	str	x0, [sp, #24]
  402428:	str	x1, [sp, #16]
  40242c:	ldr	x0, [sp, #16]
  402430:	bl	402060 <strlen@plt>
  402434:	str	x0, [sp, #40]
  402438:	ldr	x2, [sp, #40]
  40243c:	ldr	x1, [sp, #16]
  402440:	ldr	x0, [sp, #24]
  402444:	bl	401dc0 <strncmp@plt>
  402448:	cmp	w0, #0x0
  40244c:	b.ne	402460 <startswith+0x44>  // b.any
  402450:	ldr	x1, [sp, #24]
  402454:	ldr	x0, [sp, #40]
  402458:	add	x0, x1, x0
  40245c:	b	402464 <startswith+0x48>
  402460:	mov	x0, #0x0                   	// #0
  402464:	ldp	x29, x30, [sp], #48
  402468:	ret

000000000040246c <startswith_no_case>:
  40246c:	stp	x29, x30, [sp, #-48]!
  402470:	mov	x29, sp
  402474:	str	x0, [sp, #24]
  402478:	str	x1, [sp, #16]
  40247c:	ldr	x0, [sp, #16]
  402480:	bl	402060 <strlen@plt>
  402484:	str	x0, [sp, #40]
  402488:	ldr	x2, [sp, #40]
  40248c:	ldr	x1, [sp, #16]
  402490:	ldr	x0, [sp, #24]
  402494:	bl	401d00 <strncasecmp@plt>
  402498:	cmp	w0, #0x0
  40249c:	b.ne	4024b0 <startswith_no_case+0x44>  // b.any
  4024a0:	ldr	x1, [sp, #24]
  4024a4:	ldr	x0, [sp, #40]
  4024a8:	add	x0, x1, x0
  4024ac:	b	4024b4 <startswith_no_case+0x48>
  4024b0:	mov	x0, #0x0                   	// #0
  4024b4:	ldp	x29, x30, [sp], #48
  4024b8:	ret

00000000004024bc <save_argc_argv>:
  4024bc:	sub	sp, sp, #0x10
  4024c0:	str	w0, [sp, #12]
  4024c4:	str	x1, [sp]
  4024c8:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  4024cc:	add	x0, x0, #0x8
  4024d0:	ldr	w1, [sp, #12]
  4024d4:	str	w1, [x0]
  4024d8:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  4024dc:	add	x0, x0, #0x0
  4024e0:	ldr	x1, [sp]
  4024e4:	str	x1, [x0]
  4024e8:	nop
  4024ec:	add	sp, sp, #0x10
  4024f0:	ret

00000000004024f4 <hashmap_free>:
  4024f4:	stp	x29, x30, [sp, #-32]!
  4024f8:	mov	x29, sp
  4024fc:	str	x0, [sp, #24]
  402500:	mov	x2, #0x0                   	// #0
  402504:	mov	x1, #0x0                   	// #0
  402508:	ldr	x0, [sp, #24]
  40250c:	bl	401c30 <internal_hashmap_free@plt>
  402510:	ldp	x29, x30, [sp], #32
  402514:	ret

0000000000402518 <hashmap_get>:
  402518:	stp	x29, x30, [sp, #-32]!
  40251c:	mov	x29, sp
  402520:	str	x0, [sp, #24]
  402524:	str	x1, [sp, #16]
  402528:	ldr	x1, [sp, #16]
  40252c:	ldr	x0, [sp, #24]
  402530:	bl	401e10 <internal_hashmap_get@plt>
  402534:	ldp	x29, x30, [sp], #32
  402538:	ret

000000000040253c <hashmap_contains>:
  40253c:	stp	x29, x30, [sp, #-32]!
  402540:	mov	x29, sp
  402544:	str	x0, [sp, #24]
  402548:	str	x1, [sp, #16]
  40254c:	ldr	x1, [sp, #16]
  402550:	ldr	x0, [sp, #24]
  402554:	bl	401cb0 <internal_hashmap_contains@plt>
  402558:	and	w0, w0, #0xff
  40255c:	ldp	x29, x30, [sp], #32
  402560:	ret

0000000000402564 <hashmap_iterate>:
  402564:	stp	x29, x30, [sp, #-48]!
  402568:	mov	x29, sp
  40256c:	str	x0, [sp, #40]
  402570:	str	x1, [sp, #32]
  402574:	str	x2, [sp, #24]
  402578:	str	x3, [sp, #16]
  40257c:	ldr	x3, [sp, #16]
  402580:	ldr	x2, [sp, #24]
  402584:	ldr	x1, [sp, #32]
  402588:	ldr	x0, [sp, #40]
  40258c:	bl	401f90 <internal_hashmap_iterate@plt>
  402590:	and	w0, w0, #0xff
  402594:	ldp	x29, x30, [sp], #48
  402598:	ret

000000000040259c <hashmap_steal_first>:
  40259c:	stp	x29, x30, [sp, #-32]!
  4025a0:	mov	x29, sp
  4025a4:	str	x0, [sp, #24]
  4025a8:	mov	x2, #0x0                   	// #0
  4025ac:	mov	w1, #0x1                   	// #1
  4025b0:	ldr	x0, [sp, #24]
  4025b4:	bl	401fd0 <internal_hashmap_first_key_and_value@plt>
  4025b8:	ldp	x29, x30, [sp], #32
  4025bc:	ret

00000000004025c0 <strv_freep>:
  4025c0:	stp	x29, x30, [sp, #-32]!
  4025c4:	mov	x29, sp
  4025c8:	str	x0, [sp, #24]
  4025cc:	ldr	x0, [sp, #24]
  4025d0:	ldr	x0, [x0]
  4025d4:	cmp	x0, #0x0
  4025d8:	b.eq	4025e8 <strv_freep+0x28>  // b.none
  4025dc:	ldr	x0, [sp, #24]
  4025e0:	ldr	x0, [x0]
  4025e4:	bl	401e70 <strv_free@plt>
  4025e8:	nop
  4025ec:	ldp	x29, x30, [sp], #32
  4025f0:	ret

00000000004025f4 <strv_isempty>:
  4025f4:	sub	sp, sp, #0x10
  4025f8:	str	x0, [sp, #8]
  4025fc:	ldr	x0, [sp, #8]
  402600:	cmp	x0, #0x0
  402604:	b.eq	402618 <strv_isempty+0x24>  // b.none
  402608:	ldr	x0, [sp, #8]
  40260c:	ldr	x0, [x0]
  402610:	cmp	x0, #0x0
  402614:	b.ne	402620 <strv_isempty+0x2c>  // b.any
  402618:	mov	w0, #0x1                   	// #1
  40261c:	b	402624 <strv_isempty+0x30>
  402620:	mov	w0, #0x0                   	// #0
  402624:	and	w0, w0, #0x1
  402628:	and	w0, w0, #0xff
  40262c:	add	sp, sp, #0x10
  402630:	ret

0000000000402634 <fclosep>:
  402634:	stp	x29, x30, [sp, #-32]!
  402638:	mov	x29, sp
  40263c:	str	x0, [sp, #24]
  402640:	ldr	x0, [sp, #24]
  402644:	ldr	x0, [x0]
  402648:	bl	401c00 <safe_fclose@plt>
  40264c:	nop
  402650:	ldp	x29, x30, [sp], #32
  402654:	ret

0000000000402658 <closedirp>:
  402658:	stp	x29, x30, [sp, #-32]!
  40265c:	mov	x29, sp
  402660:	str	x0, [sp, #24]
  402664:	ldr	x0, [sp, #24]
  402668:	ldr	x0, [x0]
  40266c:	cmp	x0, #0x0
  402670:	b.eq	402680 <closedirp+0x28>  // b.none
  402674:	ldr	x0, [sp, #24]
  402678:	ldr	x0, [x0]
  40267c:	bl	401db0 <closedir@plt>
  402680:	nop
  402684:	ldp	x29, x30, [sp], #32
  402688:	ret

000000000040268c <read_line>:
  40268c:	stp	x29, x30, [sp, #-48]!
  402690:	mov	x29, sp
  402694:	str	x0, [sp, #40]
  402698:	str	x1, [sp, #32]
  40269c:	str	x2, [sp, #24]
  4026a0:	ldr	x3, [sp, #24]
  4026a4:	mov	w2, #0x0                   	// #0
  4026a8:	ldr	x1, [sp, #32]
  4026ac:	ldr	x0, [sp, #40]
  4026b0:	bl	401c10 <read_line_full@plt>
  4026b4:	ldp	x29, x30, [sp], #48
  4026b8:	ret

00000000004026bc <static_destruct>:
  4026bc:	stp	x29, x30, [sp, #-32]!
  4026c0:	mov	x29, sp
  4026c4:	adrp	x0, 407000 <_fini+0x788>
  4026c8:	add	x0, x0, #0x220
  4026cc:	ldr	x0, [x0]
  4026d0:	cmp	x0, #0x0
  4026d4:	b.eq	402738 <static_destruct+0x7c>  // b.none
  4026d8:	adrp	x0, 407000 <_fini+0x788>
  4026dc:	add	x0, x0, #0x220
  4026e0:	ldr	x0, [x0]
  4026e4:	mov	x1, #0x8                   	// #8
  4026e8:	bl	402278 <ALIGN_TO>
  4026ec:	str	x0, [sp, #24]
  4026f0:	b	40271c <static_destruct+0x60>
  4026f4:	ldr	x0, [sp, #24]
  4026f8:	ldr	x1, [x0, #8]
  4026fc:	ldr	x0, [sp, #24]
  402700:	ldr	x0, [x0]
  402704:	blr	x1
  402708:	ldr	x0, [sp, #24]
  40270c:	add	x0, x0, #0x10
  402710:	mov	x1, #0x8                   	// #8
  402714:	bl	402278 <ALIGN_TO>
  402718:	str	x0, [sp, #24]
  40271c:	ldr	x1, [sp, #24]
  402720:	adrp	x0, 407000 <_fini+0x788>
  402724:	add	x0, x0, #0x228
  402728:	ldr	x0, [x0]
  40272c:	cmp	x1, x0
  402730:	b.cc	4026f4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  402734:	b	40273c <static_destruct+0x80>
  402738:	nop
  40273c:	ldp	x29, x30, [sp], #32
  402740:	ret

0000000000402744 <unit_name_mangle>:
  402744:	stp	x29, x30, [sp, #-48]!
  402748:	mov	x29, sp
  40274c:	str	x0, [sp, #40]
  402750:	str	w1, [sp, #36]
  402754:	str	x2, [sp, #24]
  402758:	ldr	x4, [sp, #24]
  40275c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402760:	add	x3, x0, #0x8a8
  402764:	ldr	w2, [sp, #36]
  402768:	mov	x1, #0x0                   	// #0
  40276c:	ldr	x0, [sp, #40]
  402770:	bl	401f30 <unit_name_mangle_with_suffix@plt>
  402774:	ldp	x29, x30, [sp], #48
  402778:	ret

000000000040277c <set_free>:
  40277c:	stp	x29, x30, [sp, #-32]!
  402780:	mov	x29, sp
  402784:	str	x0, [sp, #24]
  402788:	mov	x2, #0x0                   	// #0
  40278c:	mov	x1, #0x0                   	// #0
  402790:	ldr	x0, [sp, #24]
  402794:	bl	401c30 <internal_hashmap_free@plt>
  402798:	ldp	x29, x30, [sp], #32
  40279c:	ret

00000000004027a0 <specifier_escape>:
  4027a0:	stp	x29, x30, [sp, #-32]!
  4027a4:	mov	x29, sp
  4027a8:	str	x0, [sp, #24]
  4027ac:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4027b0:	add	x2, x0, #0x8b8
  4027b4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4027b8:	add	x1, x0, #0x8c0
  4027bc:	ldr	x0, [sp, #24]
  4027c0:	bl	401e40 <strreplace@plt>
  4027c4:	ldp	x29, x30, [sp], #32
  4027c8:	ret

00000000004027cc <free_sysvstub>:
  4027cc:	stp	x29, x30, [sp, #-32]!
  4027d0:	mov	x29, sp
  4027d4:	str	x0, [sp, #24]
  4027d8:	ldr	x0, [sp, #24]
  4027dc:	cmp	x0, #0x0
  4027e0:	b.eq	402850 <free_sysvstub+0x84>  // b.none
  4027e4:	ldr	x0, [sp, #24]
  4027e8:	ldr	x0, [x0]
  4027ec:	bl	402010 <free@plt>
  4027f0:	ldr	x0, [sp, #24]
  4027f4:	ldr	x0, [x0, #8]
  4027f8:	bl	402010 <free@plt>
  4027fc:	ldr	x0, [sp, #24]
  402800:	ldr	x0, [x0, #16]
  402804:	bl	402010 <free@plt>
  402808:	ldr	x0, [sp, #24]
  40280c:	ldr	x0, [x0, #32]
  402810:	bl	402010 <free@plt>
  402814:	ldr	x0, [sp, #24]
  402818:	ldr	x0, [x0, #40]
  40281c:	bl	401e70 <strv_free@plt>
  402820:	ldr	x0, [sp, #24]
  402824:	ldr	x0, [x0, #48]
  402828:	bl	401e70 <strv_free@plt>
  40282c:	ldr	x0, [sp, #24]
  402830:	ldr	x0, [x0, #56]
  402834:	bl	401e70 <strv_free@plt>
  402838:	ldr	x0, [sp, #24]
  40283c:	ldr	x0, [x0, #64]
  402840:	bl	401e70 <strv_free@plt>
  402844:	ldr	x0, [sp, #24]
  402848:	bl	402010 <free@plt>
  40284c:	b	402854 <free_sysvstub+0x88>
  402850:	nop
  402854:	ldp	x29, x30, [sp], #32
  402858:	ret

000000000040285c <free_sysvstubp>:
  40285c:	stp	x29, x30, [sp, #-32]!
  402860:	mov	x29, sp
  402864:	str	x0, [sp, #24]
  402868:	ldr	x0, [sp, #24]
  40286c:	ldr	x0, [x0]
  402870:	cmp	x0, #0x0
  402874:	b.eq	402884 <free_sysvstubp+0x28>  // b.none
  402878:	ldr	x0, [sp, #24]
  40287c:	ldr	x0, [x0]
  402880:	bl	4027cc <free_sysvstub>
  402884:	nop
  402888:	ldp	x29, x30, [sp], #32
  40288c:	ret

0000000000402890 <free_sysvstub_hashmapp>:
  402890:	stp	x29, x30, [sp, #-48]!
  402894:	mov	x29, sp
  402898:	str	x0, [sp, #24]
  40289c:	b	4028a8 <free_sysvstub_hashmapp+0x18>
  4028a0:	ldr	x0, [sp, #40]
  4028a4:	bl	4027cc <free_sysvstub>
  4028a8:	ldr	x0, [sp, #24]
  4028ac:	ldr	x0, [x0]
  4028b0:	bl	40259c <hashmap_steal_first>
  4028b4:	str	x0, [sp, #40]
  4028b8:	ldr	x0, [sp, #40]
  4028bc:	cmp	x0, #0x0
  4028c0:	b.ne	4028a0 <free_sysvstub_hashmapp+0x10>  // b.any
  4028c4:	ldr	x0, [sp, #24]
  4028c8:	ldr	x0, [x0]
  4028cc:	bl	4024f4 <hashmap_free>
  4028d0:	nop
  4028d4:	ldp	x29, x30, [sp], #48
  4028d8:	ret

00000000004028dc <add_alias>:
  4028dc:	stp	x29, x30, [sp, #-128]!
  4028e0:	mov	x29, sp
  4028e4:	str	x19, [sp, #16]
  4028e8:	str	x0, [x29, #40]
  4028ec:	str	x1, [x29, #32]
  4028f0:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4028f4:	add	x0, x0, #0xb28
  4028f8:	ldr	x1, [x0]
  4028fc:	str	x1, [x29, #120]
  402900:	mov	x1, #0x0                   	// #0
  402904:	ldr	x0, [x29, #40]
  402908:	cmp	x0, #0x0
  40290c:	cset	w0, eq  // eq = none
  402910:	and	w0, w0, #0xff
  402914:	and	x0, x0, #0xff
  402918:	cmp	x0, #0x0
  40291c:	b.eq	402948 <add_alias+0x6c>  // b.none
  402920:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402924:	add	x1, x0, #0x933
  402928:	adrp	x0, 407000 <_fini+0x788>
  40292c:	add	x4, x0, #0x280
  402930:	mov	w3, #0x57                  	// #87
  402934:	mov	x2, x1
  402938:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40293c:	add	x1, x0, #0x958
  402940:	mov	w0, #0x0                   	// #0
  402944:	bl	401d70 <log_assert_failed_realm@plt>
  402948:	ldr	x0, [x29, #32]
  40294c:	cmp	x0, #0x0
  402950:	cset	w0, eq  // eq = none
  402954:	and	w0, w0, #0xff
  402958:	and	x0, x0, #0xff
  40295c:	cmp	x0, #0x0
  402960:	b.eq	40298c <add_alias+0xb0>  // b.none
  402964:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402968:	add	x1, x0, #0x933
  40296c:	adrp	x0, 407000 <_fini+0x788>
  402970:	add	x4, x0, #0x280
  402974:	mov	w3, #0x58                  	// #88
  402978:	mov	x2, x1
  40297c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402980:	add	x1, x0, #0x960
  402984:	mov	w0, #0x0                   	// #0
  402988:	bl	401d70 <log_assert_failed_realm@plt>
  40298c:	ldr	x0, [x29, #32]
  402990:	str	x0, [x29, #56]
  402994:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402998:	add	x0, x0, #0x10
  40299c:	ldr	x0, [x0]
  4029a0:	str	x0, [x29, #80]
  4029a4:	b	4029b4 <add_alias+0xd8>
  4029a8:	ldr	x0, [x29, #56]
  4029ac:	add	x0, x0, #0x1
  4029b0:	str	x0, [x29, #56]
  4029b4:	ldr	x0, [x29, #56]
  4029b8:	ldrb	w0, [x0]
  4029bc:	cmp	w0, #0x2f
  4029c0:	b.ne	4029d8 <add_alias+0xfc>  // b.any
  4029c4:	ldr	x0, [x29, #56]
  4029c8:	add	x0, x0, #0x1
  4029cc:	ldrb	w0, [x0]
  4029d0:	cmp	w0, #0x2f
  4029d4:	b.eq	4029a8 <add_alias+0xcc>  // b.none
  4029d8:	ldr	x0, [x29, #80]
  4029dc:	bl	4023a8 <isempty>
  4029e0:	and	w0, w0, #0xff
  4029e4:	cmp	w0, #0x0
  4029e8:	b.eq	4029f8 <add_alias+0x11c>  // b.none
  4029ec:	ldr	x0, [x29, #56]
  4029f0:	str	x0, [x29, #64]
  4029f4:	b	402b4c <add_alias+0x270>
  4029f8:	ldr	x0, [x29, #80]
  4029fc:	bl	402060 <strlen@plt>
  402a00:	mov	x19, x0
  402a04:	ldr	x0, [x29, #56]
  402a08:	bl	402060 <strlen@plt>
  402a0c:	add	x0, x19, x0
  402a10:	add	x0, x0, #0x2
  402a14:	str	x0, [x29, #88]
  402a18:	ldr	x0, [x29, #88]
  402a1c:	str	x0, [x29, #96]
  402a20:	ldr	x1, [x29, #96]
  402a24:	mov	x0, #0x1                   	// #1
  402a28:	bl	4022cc <size_multiply_overflow>
  402a2c:	and	w0, w0, #0xff
  402a30:	and	x0, x0, #0xff
  402a34:	cmp	x0, #0x0
  402a38:	b.eq	402a64 <add_alias+0x188>  // b.none
  402a3c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402a40:	add	x1, x0, #0x933
  402a44:	adrp	x0, 407000 <_fini+0x788>
  402a48:	add	x4, x0, #0x280
  402a4c:	mov	w3, #0x5a                  	// #90
  402a50:	mov	x2, x1
  402a54:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402a58:	add	x1, x0, #0x968
  402a5c:	mov	w0, #0x0                   	// #0
  402a60:	bl	401d70 <log_assert_failed_realm@plt>
  402a64:	ldr	x0, [x29, #96]
  402a68:	cmp	x0, #0x400, lsl #12
  402a6c:	cset	w0, hi  // hi = pmore
  402a70:	and	w0, w0, #0xff
  402a74:	and	x0, x0, #0xff
  402a78:	cmp	x0, #0x0
  402a7c:	b.eq	402aa8 <add_alias+0x1cc>  // b.none
  402a80:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402a84:	add	x1, x0, #0x933
  402a88:	adrp	x0, 407000 <_fini+0x788>
  402a8c:	add	x4, x0, #0x280
  402a90:	mov	w3, #0x5a                  	// #90
  402a94:	mov	x2, x1
  402a98:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402a9c:	add	x1, x0, #0x998
  402aa0:	mov	w0, #0x0                   	// #0
  402aa4:	bl	401d70 <log_assert_failed_realm@plt>
  402aa8:	ldr	x0, [x29, #96]
  402aac:	add	x0, x0, #0xf
  402ab0:	lsr	x0, x0, #4
  402ab4:	lsl	x0, x0, #4
  402ab8:	sub	sp, sp, x0
  402abc:	mov	x0, sp
  402ac0:	add	x0, x0, #0xf
  402ac4:	lsr	x0, x0, #4
  402ac8:	lsl	x0, x0, #4
  402acc:	str	x0, [x29, #104]
  402ad0:	ldr	x1, [x29, #80]
  402ad4:	ldr	x0, [x29, #104]
  402ad8:	bl	401c60 <stpcpy@plt>
  402adc:	str	x0, [x29, #72]
  402ae0:	b	402af0 <add_alias+0x214>
  402ae4:	ldr	x0, [x29, #72]
  402ae8:	sub	x0, x0, #0x1
  402aec:	str	x0, [x29, #72]
  402af0:	ldr	x1, [x29, #72]
  402af4:	ldr	x0, [x29, #104]
  402af8:	cmp	x1, x0
  402afc:	b.ls	402b14 <add_alias+0x238>  // b.plast
  402b00:	ldr	x0, [x29, #72]
  402b04:	sub	x0, x0, #0x1
  402b08:	ldrb	w0, [x0]
  402b0c:	cmp	w0, #0x2f
  402b10:	b.eq	402ae4 <add_alias+0x208>  // b.none
  402b14:	ldr	x0, [x29, #56]
  402b18:	ldrb	w0, [x0]
  402b1c:	cmp	w0, #0x2f
  402b20:	b.eq	402b38 <add_alias+0x25c>  // b.none
  402b24:	ldr	x0, [x29, #72]
  402b28:	add	x1, x0, #0x1
  402b2c:	str	x1, [x29, #72]
  402b30:	mov	w1, #0x2f                  	// #47
  402b34:	strb	w1, [x0]
  402b38:	ldr	x1, [x29, #56]
  402b3c:	ldr	x0, [x29, #72]
  402b40:	bl	402030 <strcpy@plt>
  402b44:	ldr	x0, [x29, #104]
  402b48:	str	x0, [x29, #64]
  402b4c:	ldr	x0, [x29, #64]
  402b50:	str	x0, [x29, #112]
  402b54:	ldr	x1, [x29, #112]
  402b58:	ldr	x0, [x29, #40]
  402b5c:	bl	401d40 <symlink@plt>
  402b60:	str	w0, [x29, #52]
  402b64:	ldr	w0, [x29, #52]
  402b68:	cmp	w0, #0x0
  402b6c:	b.ge	402b98 <add_alias+0x2bc>  // b.tcont
  402b70:	bl	401e60 <__errno_location@plt>
  402b74:	ldr	w0, [x0]
  402b78:	cmp	w0, #0x11
  402b7c:	b.ne	402b88 <add_alias+0x2ac>  // b.any
  402b80:	mov	w0, #0x0                   	// #0
  402b84:	b	402b9c <add_alias+0x2c0>
  402b88:	bl	401e60 <__errno_location@plt>
  402b8c:	ldr	w0, [x0]
  402b90:	neg	w0, w0
  402b94:	b	402b9c <add_alias+0x2c0>
  402b98:	mov	w0, #0x1                   	// #1
  402b9c:	mov	w1, w0
  402ba0:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  402ba4:	add	x0, x0, #0xb28
  402ba8:	ldr	x2, [x29, #120]
  402bac:	ldr	x0, [x0]
  402bb0:	eor	x0, x2, x0
  402bb4:	cmp	x0, #0x0
  402bb8:	b.eq	402bc0 <add_alias+0x2e4>  // b.none
  402bbc:	bl	401eb0 <__stack_chk_fail@plt>
  402bc0:	mov	w0, w1
  402bc4:	mov	sp, x29
  402bc8:	ldr	x19, [sp, #16]
  402bcc:	ldp	x29, x30, [sp], #128
  402bd0:	ret

0000000000402bd4 <generate_unit_file>:
  402bd4:	stp	x29, x30, [sp, #-192]!
  402bd8:	mov	x29, sp
  402bdc:	stp	x19, x20, [sp, #16]
  402be0:	str	x0, [x29, #40]
  402be4:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  402be8:	add	x0, x0, #0xb28
  402bec:	ldr	x1, [x0]
  402bf0:	str	x1, [x29, #184]
  402bf4:	mov	x1, #0x0                   	// #0
  402bf8:	str	xzr, [x29, #88]
  402bfc:	str	xzr, [x29, #96]
  402c00:	ldr	x0, [x29, #40]
  402c04:	cmp	x0, #0x0
  402c08:	cset	w0, eq  // eq = none
  402c0c:	and	w0, w0, #0xff
  402c10:	and	x0, x0, #0xff
  402c14:	cmp	x0, #0x0
  402c18:	b.eq	402c44 <generate_unit_file+0x70>  // b.none
  402c1c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402c20:	add	x1, x0, #0x933
  402c24:	adrp	x0, 407000 <_fini+0x788>
  402c28:	add	x4, x0, #0x290
  402c2c:	mov	w3, #0x6e                  	// #110
  402c30:	mov	x2, x1
  402c34:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402c38:	add	x1, x0, #0x9b8
  402c3c:	mov	w0, #0x0                   	// #0
  402c40:	bl	401d70 <log_assert_failed_realm@plt>
  402c44:	ldr	x0, [x29, #40]
  402c48:	ldrb	w0, [x0, #74]
  402c4c:	eor	w0, w0, #0x1
  402c50:	and	w0, w0, #0xff
  402c54:	cmp	w0, #0x0
  402c58:	b.eq	402c64 <generate_unit_file+0x90>  // b.none
  402c5c:	mov	w19, #0x0                   	// #0
  402c60:	b	4033a0 <generate_unit_file+0x7cc>
  402c64:	ldr	x0, [x29, #40]
  402c68:	ldr	x0, [x0, #8]
  402c6c:	bl	4027a0 <specifier_escape>
  402c70:	str	x0, [x29, #88]
  402c74:	ldr	x0, [x29, #88]
  402c78:	cmp	x0, #0x0
  402c7c:	b.ne	402ca4 <generate_unit_file+0xd0>  // b.any
  402c80:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402c84:	add	x1, x0, #0x933
  402c88:	adrp	x0, 407000 <_fini+0x788>
  402c8c:	add	x3, x0, #0x2a8
  402c90:	mov	w2, #0x75                  	// #117
  402c94:	mov	w0, #0x0                   	// #0
  402c98:	bl	402080 <log_oom_internal@plt>
  402c9c:	mov	w19, w0
  402ca0:	b	4033a0 <generate_unit_file+0x7cc>
  402ca4:	ldr	x0, [x29, #40]
  402ca8:	ldr	x0, [x0]
  402cac:	str	x0, [x29, #120]
  402cb0:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402cb4:	add	x0, x0, #0x10
  402cb8:	ldr	x0, [x0]
  402cbc:	str	x0, [x29, #144]
  402cc0:	b	402cd0 <generate_unit_file+0xfc>
  402cc4:	ldr	x0, [x29, #120]
  402cc8:	add	x0, x0, #0x1
  402ccc:	str	x0, [x29, #120]
  402cd0:	ldr	x0, [x29, #120]
  402cd4:	ldrb	w0, [x0]
  402cd8:	cmp	w0, #0x2f
  402cdc:	b.ne	402cf4 <generate_unit_file+0x120>  // b.any
  402ce0:	ldr	x0, [x29, #120]
  402ce4:	add	x0, x0, #0x1
  402ce8:	ldrb	w0, [x0]
  402cec:	cmp	w0, #0x2f
  402cf0:	b.eq	402cc4 <generate_unit_file+0xf0>  // b.none
  402cf4:	ldr	x0, [x29, #144]
  402cf8:	bl	4023a8 <isempty>
  402cfc:	and	w0, w0, #0xff
  402d00:	cmp	w0, #0x0
  402d04:	b.eq	402d14 <generate_unit_file+0x140>  // b.none
  402d08:	ldr	x0, [x29, #120]
  402d0c:	str	x0, [x29, #128]
  402d10:	b	402e68 <generate_unit_file+0x294>
  402d14:	ldr	x0, [x29, #144]
  402d18:	bl	402060 <strlen@plt>
  402d1c:	mov	x20, x0
  402d20:	ldr	x0, [x29, #120]
  402d24:	bl	402060 <strlen@plt>
  402d28:	add	x0, x20, x0
  402d2c:	add	x0, x0, #0x2
  402d30:	str	x0, [x29, #152]
  402d34:	ldr	x0, [x29, #152]
  402d38:	str	x0, [x29, #160]
  402d3c:	ldr	x1, [x29, #160]
  402d40:	mov	x0, #0x1                   	// #1
  402d44:	bl	4022cc <size_multiply_overflow>
  402d48:	and	w0, w0, #0xff
  402d4c:	and	x0, x0, #0xff
  402d50:	cmp	x0, #0x0
  402d54:	b.eq	402d80 <generate_unit_file+0x1ac>  // b.none
  402d58:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402d5c:	add	x1, x0, #0x933
  402d60:	adrp	x0, 407000 <_fini+0x788>
  402d64:	add	x4, x0, #0x290
  402d68:	mov	w3, #0x77                  	// #119
  402d6c:	mov	x2, x1
  402d70:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402d74:	add	x1, x0, #0x968
  402d78:	mov	w0, #0x0                   	// #0
  402d7c:	bl	401d70 <log_assert_failed_realm@plt>
  402d80:	ldr	x0, [x29, #160]
  402d84:	cmp	x0, #0x400, lsl #12
  402d88:	cset	w0, hi  // hi = pmore
  402d8c:	and	w0, w0, #0xff
  402d90:	and	x0, x0, #0xff
  402d94:	cmp	x0, #0x0
  402d98:	b.eq	402dc4 <generate_unit_file+0x1f0>  // b.none
  402d9c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402da0:	add	x1, x0, #0x933
  402da4:	adrp	x0, 407000 <_fini+0x788>
  402da8:	add	x4, x0, #0x290
  402dac:	mov	w3, #0x77                  	// #119
  402db0:	mov	x2, x1
  402db4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402db8:	add	x1, x0, #0x998
  402dbc:	mov	w0, #0x0                   	// #0
  402dc0:	bl	401d70 <log_assert_failed_realm@plt>
  402dc4:	ldr	x0, [x29, #160]
  402dc8:	add	x0, x0, #0xf
  402dcc:	lsr	x0, x0, #4
  402dd0:	lsl	x0, x0, #4
  402dd4:	sub	sp, sp, x0
  402dd8:	mov	x0, sp
  402ddc:	add	x0, x0, #0xf
  402de0:	lsr	x0, x0, #4
  402de4:	lsl	x0, x0, #4
  402de8:	str	x0, [x29, #168]
  402dec:	ldr	x1, [x29, #144]
  402df0:	ldr	x0, [x29, #168]
  402df4:	bl	401c60 <stpcpy@plt>
  402df8:	str	x0, [x29, #136]
  402dfc:	b	402e0c <generate_unit_file+0x238>
  402e00:	ldr	x0, [x29, #136]
  402e04:	sub	x0, x0, #0x1
  402e08:	str	x0, [x29, #136]
  402e0c:	ldr	x1, [x29, #136]
  402e10:	ldr	x0, [x29, #168]
  402e14:	cmp	x1, x0
  402e18:	b.ls	402e30 <generate_unit_file+0x25c>  // b.plast
  402e1c:	ldr	x0, [x29, #136]
  402e20:	sub	x0, x0, #0x1
  402e24:	ldrb	w0, [x0]
  402e28:	cmp	w0, #0x2f
  402e2c:	b.eq	402e00 <generate_unit_file+0x22c>  // b.none
  402e30:	ldr	x0, [x29, #120]
  402e34:	ldrb	w0, [x0]
  402e38:	cmp	w0, #0x2f
  402e3c:	b.eq	402e54 <generate_unit_file+0x280>  // b.none
  402e40:	ldr	x0, [x29, #136]
  402e44:	add	x1, x0, #0x1
  402e48:	str	x1, [x29, #136]
  402e4c:	mov	w1, #0x2f                  	// #47
  402e50:	strb	w1, [x0]
  402e54:	ldr	x1, [x29, #120]
  402e58:	ldr	x0, [x29, #136]
  402e5c:	bl	402030 <strcpy@plt>
  402e60:	ldr	x0, [x29, #168]
  402e64:	str	x0, [x29, #128]
  402e68:	ldr	x0, [x29, #128]
  402e6c:	str	x0, [x29, #176]
  402e70:	ldr	x0, [x29, #176]
  402e74:	bl	401ce0 <is_symlink@plt>
  402e78:	cmp	w0, #0x0
  402e7c:	b.le	402f00 <generate_unit_file+0x32c>
  402e80:	mov	w0, #0x4                   	// #4
  402e84:	str	w0, [x29, #48]
  402e88:	str	wzr, [x29, #52]
  402e8c:	str	wzr, [x29, #56]
  402e90:	ldr	w0, [x29, #56]
  402e94:	bl	4020a0 <log_get_max_level_realm@plt>
  402e98:	mov	w1, w0
  402e9c:	ldr	w0, [x29, #48]
  402ea0:	and	w0, w0, #0x7
  402ea4:	cmp	w1, w0
  402ea8:	b.lt	402ef0 <generate_unit_file+0x31c>  // b.tstop
  402eac:	ldr	w0, [x29, #56]
  402eb0:	lsl	w1, w0, #10
  402eb4:	ldr	w0, [x29, #48]
  402eb8:	orr	w7, w1, w0
  402ebc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402ec0:	add	x1, x0, #0x933
  402ec4:	ldr	x6, [x29, #176]
  402ec8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402ecc:	add	x5, x0, #0x9c0
  402ed0:	adrp	x0, 407000 <_fini+0x788>
  402ed4:	add	x4, x0, #0x2a8
  402ed8:	mov	w3, #0x7d                  	// #125
  402edc:	mov	x2, x1
  402ee0:	ldr	w1, [x29, #52]
  402ee4:	mov	w0, w7
  402ee8:	bl	401f10 <log_internal_realm@plt>
  402eec:	b	402ef8 <generate_unit_file+0x324>
  402ef0:	ldr	w0, [x29, #52]
  402ef4:	cmp	w0, #0x0
  402ef8:	ldr	x0, [x29, #176]
  402efc:	bl	401c20 <unlink@plt>
  402f00:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402f04:	add	x1, x0, #0x9f8
  402f08:	ldr	x0, [x29, #176]
  402f0c:	bl	402070 <fopen64@plt>
  402f10:	str	x0, [x29, #96]
  402f14:	ldr	x0, [x29, #96]
  402f18:	cmp	x0, #0x0
  402f1c:	b.ne	402fb4 <generate_unit_file+0x3e0>  // b.any
  402f20:	mov	w0, #0x3                   	// #3
  402f24:	str	w0, [x29, #76]
  402f28:	bl	401e60 <__errno_location@plt>
  402f2c:	ldr	w0, [x0]
  402f30:	str	w0, [x29, #80]
  402f34:	str	wzr, [x29, #84]
  402f38:	ldr	w0, [x29, #84]
  402f3c:	bl	4020a0 <log_get_max_level_realm@plt>
  402f40:	mov	w1, w0
  402f44:	ldr	w0, [x29, #76]
  402f48:	and	w0, w0, #0x7
  402f4c:	cmp	w1, w0
  402f50:	b.lt	402f9c <generate_unit_file+0x3c8>  // b.tstop
  402f54:	ldr	w0, [x29, #84]
  402f58:	lsl	w1, w0, #10
  402f5c:	ldr	w0, [x29, #76]
  402f60:	orr	w7, w1, w0
  402f64:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402f68:	add	x1, x0, #0x933
  402f6c:	ldr	x6, [x29, #176]
  402f70:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402f74:	add	x5, x0, #0xa00
  402f78:	adrp	x0, 407000 <_fini+0x788>
  402f7c:	add	x4, x0, #0x2a8
  402f80:	mov	w3, #0x83                  	// #131
  402f84:	mov	x2, x1
  402f88:	ldr	w1, [x29, #80]
  402f8c:	mov	w0, w7
  402f90:	bl	401f10 <log_internal_realm@plt>
  402f94:	mov	w19, w0
  402f98:	b	4033a0 <generate_unit_file+0x7cc>
  402f9c:	ldr	w0, [x29, #80]
  402fa0:	cmp	w0, #0x0
  402fa4:	cneg	w0, w0, lt  // lt = tstop
  402fa8:	and	w0, w0, #0xff
  402fac:	neg	w19, w0
  402fb0:	b	4033a0 <generate_unit_file+0x7cc>
  402fb4:	ldr	x3, [x29, #96]
  402fb8:	ldr	x0, [x29, #88]
  402fbc:	mov	x2, x0
  402fc0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  402fc4:	add	x1, x0, #0xa28
  402fc8:	mov	x0, x3
  402fcc:	bl	401d10 <fprintf@plt>
  402fd0:	ldr	x0, [x29, #40]
  402fd4:	ldr	x0, [x0, #16]
  402fd8:	cmp	x0, #0x0
  402fdc:	b.eq	403054 <generate_unit_file+0x480>  // b.none
  402fe0:	ldr	x0, [x29, #40]
  402fe4:	ldr	x0, [x0, #16]
  402fe8:	bl	4027a0 <specifier_escape>
  402fec:	str	x0, [x29, #104]
  402ff0:	ldr	x0, [x29, #104]
  402ff4:	cmp	x0, #0x0
  402ff8:	b.ne	403024 <generate_unit_file+0x450>  // b.any
  402ffc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403000:	add	x1, x0, #0x933
  403004:	adrp	x0, 407000 <_fini+0x788>
  403008:	add	x3, x0, #0x2a8
  40300c:	mov	w2, #0x91                  	// #145
  403010:	mov	w0, #0x0                   	// #0
  403014:	bl	402080 <log_oom_internal@plt>
  403018:	mov	w19, w0
  40301c:	mov	w20, #0x0                   	// #0
  403020:	b	403044 <generate_unit_file+0x470>
  403024:	ldr	x3, [x29, #96]
  403028:	ldr	x0, [x29, #104]
  40302c:	mov	x2, x0
  403030:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403034:	add	x1, x0, #0xaa0
  403038:	mov	x0, x3
  40303c:	bl	401d10 <fprintf@plt>
  403040:	mov	w20, #0x1                   	// #1
  403044:	add	x0, x29, #0x68
  403048:	bl	4022a8 <freep>
  40304c:	cmp	w20, #0x1
  403050:	b.ne	4033a0 <generate_unit_file+0x7cc>  // b.any
  403054:	ldr	x0, [x29, #40]
  403058:	ldr	x0, [x0, #40]
  40305c:	str	x0, [x29, #112]
  403060:	b	403090 <generate_unit_file+0x4bc>
  403064:	ldr	x3, [x29, #96]
  403068:	ldr	x0, [x29, #112]
  40306c:	ldr	x0, [x0]
  403070:	mov	x2, x0
  403074:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403078:	add	x1, x0, #0xab0
  40307c:	mov	x0, x3
  403080:	bl	401d10 <fprintf@plt>
  403084:	ldr	x0, [x29, #112]
  403088:	add	x0, x0, #0x8
  40308c:	str	x0, [x29, #112]
  403090:	ldr	x0, [x29, #112]
  403094:	cmp	x0, #0x0
  403098:	b.eq	4030ac <generate_unit_file+0x4d8>  // b.none
  40309c:	ldr	x0, [x29, #112]
  4030a0:	ldr	x0, [x0]
  4030a4:	cmp	x0, #0x0
  4030a8:	b.ne	403064 <generate_unit_file+0x490>  // b.any
  4030ac:	ldr	x0, [x29, #40]
  4030b0:	ldr	x0, [x0, #48]
  4030b4:	str	x0, [x29, #112]
  4030b8:	b	4030e8 <generate_unit_file+0x514>
  4030bc:	ldr	x3, [x29, #96]
  4030c0:	ldr	x0, [x29, #112]
  4030c4:	ldr	x0, [x0]
  4030c8:	mov	x2, x0
  4030cc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4030d0:	add	x1, x0, #0xac0
  4030d4:	mov	x0, x3
  4030d8:	bl	401d10 <fprintf@plt>
  4030dc:	ldr	x0, [x29, #112]
  4030e0:	add	x0, x0, #0x8
  4030e4:	str	x0, [x29, #112]
  4030e8:	ldr	x0, [x29, #112]
  4030ec:	cmp	x0, #0x0
  4030f0:	b.eq	403104 <generate_unit_file+0x530>  // b.none
  4030f4:	ldr	x0, [x29, #112]
  4030f8:	ldr	x0, [x0]
  4030fc:	cmp	x0, #0x0
  403100:	b.ne	4030bc <generate_unit_file+0x4e8>  // b.any
  403104:	ldr	x0, [x29, #40]
  403108:	ldr	x0, [x0, #56]
  40310c:	str	x0, [x29, #112]
  403110:	b	403140 <generate_unit_file+0x56c>
  403114:	ldr	x3, [x29, #96]
  403118:	ldr	x0, [x29, #112]
  40311c:	ldr	x0, [x0]
  403120:	mov	x2, x0
  403124:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403128:	add	x1, x0, #0xad0
  40312c:	mov	x0, x3
  403130:	bl	401d10 <fprintf@plt>
  403134:	ldr	x0, [x29, #112]
  403138:	add	x0, x0, #0x8
  40313c:	str	x0, [x29, #112]
  403140:	ldr	x0, [x29, #112]
  403144:	cmp	x0, #0x0
  403148:	b.eq	40315c <generate_unit_file+0x588>  // b.none
  40314c:	ldr	x0, [x29, #112]
  403150:	ldr	x0, [x0]
  403154:	cmp	x0, #0x0
  403158:	b.ne	403114 <generate_unit_file+0x540>  // b.any
  40315c:	ldr	x20, [x29, #96]
  403160:	ldr	x0, [x29, #40]
  403164:	ldr	x0, [x0, #32]
  403168:	cmp	x0, #0x0
  40316c:	cset	w0, eq  // eq = none
  403170:	and	w0, w0, #0xff
  403174:	bl	402378 <yes_no>
  403178:	mov	x2, x0
  40317c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403180:	add	x1, x0, #0xae0
  403184:	mov	x0, x20
  403188:	bl	401d10 <fprintf@plt>
  40318c:	ldr	x0, [x29, #40]
  403190:	ldr	x0, [x0, #32]
  403194:	cmp	x0, #0x0
  403198:	b.eq	403210 <generate_unit_file+0x63c>  // b.none
  40319c:	ldr	x0, [x29, #40]
  4031a0:	ldr	x0, [x0, #32]
  4031a4:	bl	4027a0 <specifier_escape>
  4031a8:	str	x0, [x29, #104]
  4031ac:	ldr	x0, [x29, #104]
  4031b0:	cmp	x0, #0x0
  4031b4:	b.ne	4031e0 <generate_unit_file+0x60c>  // b.any
  4031b8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4031bc:	add	x1, x0, #0x933
  4031c0:	adrp	x0, 407000 <_fini+0x788>
  4031c4:	add	x3, x0, #0x2a8
  4031c8:	mov	w2, #0xad                  	// #173
  4031cc:	mov	w0, #0x0                   	// #0
  4031d0:	bl	402080 <log_oom_internal@plt>
  4031d4:	mov	w19, w0
  4031d8:	mov	w20, #0x0                   	// #0
  4031dc:	b	403200 <generate_unit_file+0x62c>
  4031e0:	ldr	x3, [x29, #96]
  4031e4:	ldr	x0, [x29, #104]
  4031e8:	mov	x2, x0
  4031ec:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4031f0:	add	x1, x0, #0xb60
  4031f4:	mov	x0, x3
  4031f8:	bl	401d10 <fprintf@plt>
  4031fc:	mov	w20, #0x1                   	// #1
  403200:	add	x0, x29, #0x68
  403204:	bl	4022a8 <freep>
  403208:	cmp	w20, #0x1
  40320c:	b.ne	4033a0 <generate_unit_file+0x7cc>  // b.any
  403210:	ldr	x0, [x29, #40]
  403214:	ldrb	w0, [x0, #72]
  403218:	cmp	w0, #0x0
  40321c:	b.eq	40323c <generate_unit_file+0x668>  // b.none
  403220:	ldr	x4, [x29, #96]
  403224:	mov	w3, #0x6                   	// #6
  403228:	mov	w2, #0x5                   	// #5
  40322c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403230:	add	x1, x0, #0xb70
  403234:	mov	x0, x4
  403238:	bl	401d10 <fprintf@plt>
  40323c:	ldr	x4, [x29, #96]
  403240:	ldr	x0, [x29, #88]
  403244:	ldr	x1, [x29, #88]
  403248:	mov	x3, x1
  40324c:	mov	x2, x0
  403250:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403254:	add	x1, x0, #0xb90
  403258:	mov	x0, x4
  40325c:	bl	401d10 <fprintf@plt>
  403260:	ldr	x0, [x29, #40]
  403264:	ldrb	w0, [x0, #73]
  403268:	cmp	w0, #0x0
  40326c:	b.eq	40328c <generate_unit_file+0x6b8>  // b.none
  403270:	ldr	x3, [x29, #96]
  403274:	ldr	x0, [x29, #88]
  403278:	mov	x2, x0
  40327c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403280:	add	x1, x0, #0xbb8
  403284:	mov	x0, x3
  403288:	bl	401d10 <fprintf@plt>
  40328c:	ldr	x0, [x29, #96]
  403290:	bl	402090 <fflush_and_check@plt>
  403294:	str	w0, [x29, #60]
  403298:	ldr	w0, [x29, #60]
  40329c:	cmp	w0, #0x0
  4032a0:	b.ge	403334 <generate_unit_file+0x760>  // b.tcont
  4032a4:	mov	w0, #0x3                   	// #3
  4032a8:	str	w0, [x29, #64]
  4032ac:	ldr	w0, [x29, #60]
  4032b0:	str	w0, [x29, #68]
  4032b4:	str	wzr, [x29, #72]
  4032b8:	ldr	w0, [x29, #72]
  4032bc:	bl	4020a0 <log_get_max_level_realm@plt>
  4032c0:	mov	w1, w0
  4032c4:	ldr	w0, [x29, #64]
  4032c8:	and	w0, w0, #0x7
  4032cc:	cmp	w1, w0
  4032d0:	b.lt	40331c <generate_unit_file+0x748>  // b.tstop
  4032d4:	ldr	w0, [x29, #72]
  4032d8:	lsl	w1, w0, #10
  4032dc:	ldr	w0, [x29, #64]
  4032e0:	orr	w7, w1, w0
  4032e4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4032e8:	add	x1, x0, #0x933
  4032ec:	ldr	x6, [x29, #176]
  4032f0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4032f4:	add	x5, x0, #0xbd0
  4032f8:	adrp	x0, 407000 <_fini+0x788>
  4032fc:	add	x4, x0, #0x2a8
  403300:	mov	w3, #0xc3                  	// #195
  403304:	mov	x2, x1
  403308:	ldr	w1, [x29, #68]
  40330c:	mov	w0, w7
  403310:	bl	401f10 <log_internal_realm@plt>
  403314:	mov	w19, w0
  403318:	b	4033a0 <generate_unit_file+0x7cc>
  40331c:	ldr	w0, [x29, #68]
  403320:	cmp	w0, #0x0
  403324:	cneg	w0, w0, lt  // lt = tstop
  403328:	and	w0, w0, #0xff
  40332c:	neg	w19, w0
  403330:	b	4033a0 <generate_unit_file+0x7cc>
  403334:	ldr	x0, [x29, #40]
  403338:	ldr	x0, [x0, #64]
  40333c:	str	x0, [x29, #112]
  403340:	b	403380 <generate_unit_file+0x7ac>
  403344:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  403348:	add	x0, x0, #0x10
  40334c:	ldr	x4, [x0]
  403350:	ldr	x0, [x29, #112]
  403354:	ldr	x1, [x0]
  403358:	ldr	x0, [x29, #40]
  40335c:	ldr	x0, [x0]
  403360:	mov	x3, x0
  403364:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403368:	add	x2, x0, #0xbf0
  40336c:	mov	x0, x4
  403370:	bl	401e90 <generator_add_symlink@plt>
  403374:	ldr	x0, [x29, #112]
  403378:	add	x0, x0, #0x8
  40337c:	str	x0, [x29, #112]
  403380:	ldr	x0, [x29, #112]
  403384:	cmp	x0, #0x0
  403388:	b.eq	40339c <generate_unit_file+0x7c8>  // b.none
  40338c:	ldr	x0, [x29, #112]
  403390:	ldr	x0, [x0]
  403394:	cmp	x0, #0x0
  403398:	b.ne	403344 <generate_unit_file+0x770>  // b.any
  40339c:	mov	w19, #0x1                   	// #1
  4033a0:	add	x0, x29, #0x60
  4033a4:	bl	402634 <fclosep>
  4033a8:	add	x0, x29, #0x58
  4033ac:	bl	4022a8 <freep>
  4033b0:	mov	w1, w19
  4033b4:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4033b8:	add	x0, x0, #0xb28
  4033bc:	ldr	x2, [x29, #184]
  4033c0:	ldr	x0, [x0]
  4033c4:	eor	x0, x2, x0
  4033c8:	cmp	x0, #0x0
  4033cc:	b.eq	4033d4 <generate_unit_file+0x800>  // b.none
  4033d0:	bl	401eb0 <__stack_chk_fail@plt>
  4033d4:	mov	w0, w1
  4033d8:	mov	sp, x29
  4033dc:	ldp	x19, x20, [sp, #16]
  4033e0:	ldp	x29, x30, [sp], #192
  4033e4:	ret

00000000004033e8 <usage_contains_reload>:
  4033e8:	stp	x29, x30, [sp, #-32]!
  4033ec:	mov	x29, sp
  4033f0:	str	x0, [sp, #24]
  4033f4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4033f8:	add	x1, x0, #0xbf8
  4033fc:	ldr	x0, [sp, #24]
  403400:	bl	401d30 <strcasestr@plt>
  403404:	cmp	x0, #0x0
  403408:	b.ne	403484 <usage_contains_reload+0x9c>  // b.any
  40340c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403410:	add	x1, x0, #0xc08
  403414:	ldr	x0, [sp, #24]
  403418:	bl	401d30 <strcasestr@plt>
  40341c:	cmp	x0, #0x0
  403420:	b.ne	403484 <usage_contains_reload+0x9c>  // b.any
  403424:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403428:	add	x1, x0, #0xc18
  40342c:	ldr	x0, [sp, #24]
  403430:	bl	401d30 <strcasestr@plt>
  403434:	cmp	x0, #0x0
  403438:	b.ne	403484 <usage_contains_reload+0x9c>  // b.any
  40343c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403440:	add	x1, x0, #0xc28
  403444:	ldr	x0, [sp, #24]
  403448:	bl	401d30 <strcasestr@plt>
  40344c:	cmp	x0, #0x0
  403450:	b.ne	403484 <usage_contains_reload+0x9c>  // b.any
  403454:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403458:	add	x1, x0, #0xc38
  40345c:	ldr	x0, [sp, #24]
  403460:	bl	401d30 <strcasestr@plt>
  403464:	cmp	x0, #0x0
  403468:	b.ne	403484 <usage_contains_reload+0x9c>  // b.any
  40346c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403470:	add	x1, x0, #0xc48
  403474:	ldr	x0, [sp, #24]
  403478:	bl	401d30 <strcasestr@plt>
  40347c:	cmp	x0, #0x0
  403480:	b.eq	40348c <usage_contains_reload+0xa4>  // b.none
  403484:	mov	w0, #0x1                   	// #1
  403488:	b	403490 <usage_contains_reload+0xa8>
  40348c:	mov	w0, #0x0                   	// #0
  403490:	and	w0, w0, #0x1
  403494:	and	w0, w0, #0xff
  403498:	ldp	x29, x30, [sp], #32
  40349c:	ret

00000000004034a0 <sysv_translate_name>:
  4034a0:	stp	x29, x30, [sp, #-80]!
  4034a4:	mov	x29, sp
  4034a8:	str	x19, [sp, #16]
  4034ac:	str	x0, [sp, #40]
  4034b0:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4034b4:	add	x0, x0, #0xb28
  4034b8:	ldr	x1, [x0]
  4034bc:	str	x1, [sp, #72]
  4034c0:	mov	x1, #0x0                   	// #0
  4034c4:	str	xzr, [sp, #56]
  4034c8:	ldr	x0, [sp, #40]
  4034cc:	bl	401fa0 <strdup@plt>
  4034d0:	str	x0, [sp, #56]
  4034d4:	ldr	x0, [sp, #56]
  4034d8:	cmp	x0, #0x0
  4034dc:	b.ne	4034e8 <sysv_translate_name+0x48>  // b.any
  4034e0:	mov	x19, #0x0                   	// #0
  4034e4:	b	40353c <sysv_translate_name+0x9c>
  4034e8:	ldr	x2, [sp, #56]
  4034ec:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4034f0:	add	x1, x0, #0xc58
  4034f4:	mov	x0, x2
  4034f8:	bl	401f40 <endswith@plt>
  4034fc:	str	x0, [sp, #64]
  403500:	ldr	x0, [sp, #64]
  403504:	cmp	x0, #0x0
  403508:	b.eq	403514 <sysv_translate_name+0x74>  // b.none
  40350c:	ldr	x0, [sp, #64]
  403510:	strb	wzr, [x0]
  403514:	ldr	x0, [sp, #56]
  403518:	add	x1, sp, #0x40
  40351c:	mov	x2, x1
  403520:	mov	w1, #0x0                   	// #0
  403524:	bl	402744 <unit_name_mangle>
  403528:	cmp	w0, #0x0
  40352c:	b.ge	403538 <sysv_translate_name+0x98>  // b.tcont
  403530:	mov	x19, #0x0                   	// #0
  403534:	b	40353c <sysv_translate_name+0x9c>
  403538:	ldr	x19, [sp, #64]
  40353c:	add	x0, sp, #0x38
  403540:	bl	4022a8 <freep>
  403544:	mov	x1, x19
  403548:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  40354c:	add	x0, x0, #0xb28
  403550:	ldr	x2, [sp, #72]
  403554:	ldr	x0, [x0]
  403558:	eor	x0, x2, x0
  40355c:	cmp	x0, #0x0
  403560:	b.eq	403568 <sysv_translate_name+0xc8>  // b.none
  403564:	bl	401eb0 <__stack_chk_fail@plt>
  403568:	mov	x0, x1
  40356c:	ldr	x19, [sp, #16]
  403570:	ldp	x29, x30, [sp], #80
  403574:	ret

0000000000403578 <sysv_translate_facility>:
  403578:	stp	x29, x30, [sp, #-144]!
  40357c:	mov	x29, sp
  403580:	sub	sp, sp, #0x10
  403584:	str	x0, [x29, #40]
  403588:	str	w1, [x29, #36]
  40358c:	str	x2, [x29, #24]
  403590:	str	x3, [x29, #16]
  403594:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  403598:	add	x0, x0, #0xb28
  40359c:	ldr	x1, [x0]
  4035a0:	str	x1, [x29, #136]
  4035a4:	mov	x1, #0x0                   	// #0
  4035a8:	ldr	x0, [x29, #24]
  4035ac:	cmp	x0, #0x0
  4035b0:	cset	w0, eq  // eq = none
  4035b4:	and	w0, w0, #0xff
  4035b8:	and	x0, x0, #0xff
  4035bc:	cmp	x0, #0x0
  4035c0:	b.eq	4035ec <sysv_translate_facility+0x74>  // b.none
  4035c4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4035c8:	add	x1, x0, #0x933
  4035cc:	adrp	x0, 407000 <_fini+0x788>
  4035d0:	add	x4, x0, #0x2c0
  4035d4:	mov	w3, #0xff                  	// #255
  4035d8:	mov	x2, x1
  4035dc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4035e0:	add	x1, x0, #0xc60
  4035e4:	mov	w0, #0x0                   	// #0
  4035e8:	bl	401d70 <log_assert_failed_realm@plt>
  4035ec:	ldr	x0, [x29, #40]
  4035f0:	cmp	x0, #0x0
  4035f4:	cset	w0, eq  // eq = none
  4035f8:	and	w0, w0, #0xff
  4035fc:	and	x0, x0, #0xff
  403600:	cmp	x0, #0x0
  403604:	b.eq	403630 <sysv_translate_facility+0xb8>  // b.none
  403608:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40360c:	add	x1, x0, #0x933
  403610:	adrp	x0, 407000 <_fini+0x788>
  403614:	add	x4, x0, #0x2c0
  403618:	mov	w3, #0x100                 	// #256
  40361c:	mov	x2, x1
  403620:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403624:	add	x1, x0, #0x9b8
  403628:	mov	w0, #0x0                   	// #0
  40362c:	bl	401d70 <log_assert_failed_realm@plt>
  403630:	ldr	x0, [x29, #16]
  403634:	cmp	x0, #0x0
  403638:	cset	w0, eq  // eq = none
  40363c:	and	w0, w0, #0xff
  403640:	and	x0, x0, #0xff
  403644:	cmp	x0, #0x0
  403648:	b.eq	403674 <sysv_translate_facility+0xfc>  // b.none
  40364c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403650:	add	x1, x0, #0x933
  403654:	adrp	x0, 407000 <_fini+0x788>
  403658:	add	x4, x0, #0x2c0
  40365c:	mov	w3, #0x101                 	// #257
  403660:	mov	x2, x1
  403664:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403668:	add	x1, x0, #0xc68
  40366c:	mov	w0, #0x0                   	// #0
  403670:	bl	401d70 <log_assert_failed_realm@plt>
  403674:	ldr	x0, [x29, #40]
  403678:	ldr	x0, [x0, #8]
  40367c:	bl	401ec0 <basename@plt>
  403680:	str	x0, [x29, #72]
  403684:	ldr	x0, [x29, #24]
  403688:	ldrb	w0, [x0]
  40368c:	cmp	w0, #0x24
  403690:	b.ne	4036a0 <sysv_translate_facility+0x128>  // b.any
  403694:	ldr	x0, [x29, #24]
  403698:	add	x0, x0, #0x1
  40369c:	b	4036a4 <sysv_translate_facility+0x12c>
  4036a0:	ldr	x0, [x29, #24]
  4036a4:	str	x0, [x29, #80]
  4036a8:	str	wzr, [x29, #52]
  4036ac:	b	403770 <sysv_translate_facility+0x1f8>
  4036b0:	adrp	x0, 407000 <_fini+0x788>
  4036b4:	add	x0, x0, #0x2d8
  4036b8:	ldr	w1, [x29, #52]
  4036bc:	ldr	x0, [x0, x1, lsl #3]
  4036c0:	ldr	x1, [x29, #80]
  4036c4:	bl	401f60 <strcmp@plt>
  4036c8:	cmp	w0, #0x0
  4036cc:	b.eq	4036e0 <sysv_translate_facility+0x168>  // b.none
  4036d0:	ldr	w0, [x29, #52]
  4036d4:	add	w0, w0, #0x2
  4036d8:	str	w0, [x29, #52]
  4036dc:	b	403770 <sysv_translate_facility+0x1f8>
  4036e0:	ldr	w0, [x29, #52]
  4036e4:	add	w1, w0, #0x1
  4036e8:	adrp	x0, 407000 <_fini+0x788>
  4036ec:	add	x0, x0, #0x2d8
  4036f0:	mov	w1, w1
  4036f4:	ldr	x0, [x0, x1, lsl #3]
  4036f8:	cmp	x0, #0x0
  4036fc:	b.ne	403710 <sysv_translate_facility+0x198>  // b.any
  403700:	ldr	x0, [x29, #16]
  403704:	str	xzr, [x0]
  403708:	mov	w0, #0x0                   	// #0
  40370c:	b	403950 <sysv_translate_facility+0x3d8>
  403710:	ldr	w0, [x29, #52]
  403714:	add	w1, w0, #0x1
  403718:	adrp	x0, 407000 <_fini+0x788>
  40371c:	add	x0, x0, #0x2d8
  403720:	mov	w1, w1
  403724:	ldr	x0, [x0, x1, lsl #3]
  403728:	bl	401fa0 <strdup@plt>
  40372c:	str	x0, [x29, #128]
  403730:	ldr	x0, [x29, #128]
  403734:	cmp	x0, #0x0
  403738:	b.ne	40375c <sysv_translate_facility+0x1e4>  // b.any
  40373c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403740:	add	x1, x0, #0x933
  403744:	adrp	x0, 407000 <_fini+0x788>
  403748:	add	x3, x0, #0x348
  40374c:	mov	w2, #0x112                 	// #274
  403750:	mov	w0, #0x0                   	// #0
  403754:	bl	402080 <log_oom_internal@plt>
  403758:	b	403950 <sysv_translate_facility+0x3d8>
  40375c:	ldr	x0, [x29, #16]
  403760:	ldr	x1, [x29, #128]
  403764:	str	x1, [x0]
  403768:	mov	w0, #0x1                   	// #1
  40376c:	b	403950 <sysv_translate_facility+0x3d8>
  403770:	ldr	w0, [x29, #52]
  403774:	cmp	w0, #0xd
  403778:	b.ls	4036b0 <sysv_translate_facility+0x138>  // b.plast
  40377c:	ldr	x0, [x29, #24]
  403780:	ldrb	w0, [x0]
  403784:	cmp	w0, #0x24
  403788:	b.ne	40385c <sysv_translate_facility+0x2e4>  // b.any
  40378c:	ldr	x3, [x29, #16]
  403790:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403794:	add	x2, x0, #0xc70
  403798:	mov	x1, #0x0                   	// #0
  40379c:	ldr	x0, [x29, #80]
  4037a0:	bl	401c80 <unit_name_build@plt>
  4037a4:	str	w0, [x29, #56]
  4037a8:	ldr	w0, [x29, #56]
  4037ac:	cmp	w0, #0x0
  4037b0:	b.ge	403854 <sysv_translate_facility+0x2dc>  // b.tcont
  4037b4:	mov	w0, #0x3                   	// #3
  4037b8:	str	w0, [x29, #60]
  4037bc:	ldr	w0, [x29, #56]
  4037c0:	str	w0, [x29, #64]
  4037c4:	str	wzr, [x29, #68]
  4037c8:	ldr	w0, [x29, #68]
  4037cc:	bl	4020a0 <log_get_max_level_realm@plt>
  4037d0:	mov	w1, w0
  4037d4:	ldr	w0, [x29, #60]
  4037d8:	and	w0, w0, #0x7
  4037dc:	cmp	w1, w0
  4037e0:	b.lt	40383c <sysv_translate_facility+0x2c4>  // b.tstop
  4037e4:	ldr	w0, [x29, #68]
  4037e8:	lsl	w1, w0, #10
  4037ec:	ldr	w0, [x29, #60]
  4037f0:	orr	w8, w1, w0
  4037f4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4037f8:	add	x1, x0, #0x933
  4037fc:	ldr	x0, [x29, #40]
  403800:	ldr	x2, [x0, #8]
  403804:	ldr	x0, [x29, #24]
  403808:	str	x0, [sp]
  40380c:	ldr	w7, [x29, #36]
  403810:	mov	x6, x2
  403814:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403818:	add	x5, x0, #0xc78
  40381c:	adrp	x0, 407000 <_fini+0x788>
  403820:	add	x4, x0, #0x348
  403824:	mov	w3, #0x11f                 	// #287
  403828:	mov	x2, x1
  40382c:	ldr	w1, [x29, #64]
  403830:	mov	w0, w8
  403834:	bl	401f10 <log_internal_realm@plt>
  403838:	b	403950 <sysv_translate_facility+0x3d8>
  40383c:	ldr	w0, [x29, #64]
  403840:	cmp	w0, #0x0
  403844:	cneg	w0, w0, lt  // lt = tstop
  403848:	and	w0, w0, #0xff
  40384c:	neg	w0, w0
  403850:	b	403950 <sysv_translate_facility+0x3d8>
  403854:	mov	w0, #0x1                   	// #1
  403858:	b	403950 <sysv_translate_facility+0x3d8>
  40385c:	ldr	x0, [x29, #72]
  403860:	str	x0, [x29, #88]
  403864:	ldr	x0, [x29, #88]
  403868:	bl	402060 <strlen@plt>
  40386c:	add	x0, x0, #0x1
  403870:	str	x0, [x29, #96]
  403874:	ldr	x0, [x29, #96]
  403878:	add	x0, x0, #0xf
  40387c:	lsr	x0, x0, #4
  403880:	lsl	x0, x0, #4
  403884:	sub	sp, sp, x0
  403888:	add	x0, sp, #0x10
  40388c:	add	x0, x0, #0xf
  403890:	lsr	x0, x0, #4
  403894:	lsl	x0, x0, #4
  403898:	str	x0, [x29, #104]
  40389c:	ldr	x2, [x29, #96]
  4038a0:	ldr	x1, [x29, #88]
  4038a4:	ldr	x0, [x29, #104]
  4038a8:	bl	401d20 <memcpy@plt>
  4038ac:	str	x0, [x29, #112]
  4038b0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4038b4:	add	x1, x0, #0xc58
  4038b8:	ldr	x0, [x29, #112]
  4038bc:	bl	401f40 <endswith@plt>
  4038c0:	str	x0, [x29, #120]
  4038c4:	ldr	x0, [x29, #120]
  4038c8:	cmp	x0, #0x0
  4038cc:	b.eq	4038e0 <sysv_translate_facility+0x368>  // b.none
  4038d0:	ldr	x0, [x29, #120]
  4038d4:	strb	wzr, [x0]
  4038d8:	ldr	x0, [x29, #112]
  4038dc:	str	x0, [x29, #72]
  4038e0:	ldr	x1, [x29, #72]
  4038e4:	ldr	x0, [x29, #80]
  4038e8:	bl	402348 <streq_ptr>
  4038ec:	and	w0, w0, #0xff
  4038f0:	cmp	w0, #0x0
  4038f4:	b.eq	403908 <sysv_translate_facility+0x390>  // b.none
  4038f8:	ldr	x0, [x29, #16]
  4038fc:	str	xzr, [x0]
  403900:	mov	w0, #0x0                   	// #0
  403904:	b	403950 <sysv_translate_facility+0x3d8>
  403908:	ldr	x0, [x29, #80]
  40390c:	bl	4034a0 <sysv_translate_name>
  403910:	str	x0, [x29, #128]
  403914:	ldr	x0, [x29, #128]
  403918:	cmp	x0, #0x0
  40391c:	b.ne	403940 <sysv_translate_facility+0x3c8>  // b.any
  403920:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403924:	add	x1, x0, #0x933
  403928:	adrp	x0, 407000 <_fini+0x788>
  40392c:	add	x3, x0, #0x348
  403930:	mov	w2, #0x135                 	// #309
  403934:	mov	w0, #0x0                   	// #0
  403938:	bl	402080 <log_oom_internal@plt>
  40393c:	b	403950 <sysv_translate_facility+0x3d8>
  403940:	ldr	x0, [x29, #16]
  403944:	ldr	x1, [x29, #128]
  403948:	str	x1, [x0]
  40394c:	mov	w0, #0x1                   	// #1
  403950:	mov	w1, w0
  403954:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  403958:	add	x0, x0, #0xb28
  40395c:	ldr	x2, [x29, #136]
  403960:	ldr	x0, [x0]
  403964:	eor	x0, x2, x0
  403968:	cmp	x0, #0x0
  40396c:	b.eq	403974 <sysv_translate_facility+0x3fc>  // b.none
  403970:	bl	401eb0 <__stack_chk_fail@plt>
  403974:	mov	w0, w1
  403978:	mov	sp, x29
  40397c:	ldp	x29, x30, [sp], #144
  403980:	ret

0000000000403984 <handle_provides>:
  403984:	sub	sp, sp, #0xb0
  403988:	stp	x29, x30, [sp, #16]
  40398c:	add	x29, sp, #0x10
  403990:	stp	x19, x20, [sp, #32]
  403994:	str	x0, [sp, #72]
  403998:	str	w1, [sp, #68]
  40399c:	str	x2, [sp, #56]
  4039a0:	str	x3, [sp, #48]
  4039a4:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4039a8:	add	x0, x0, #0xb28
  4039ac:	ldr	x1, [x0]
  4039b0:	str	x1, [sp, #168]
  4039b4:	mov	x1, #0x0                   	// #0
  4039b8:	ldr	x0, [sp, #72]
  4039bc:	cmp	x0, #0x0
  4039c0:	cset	w0, eq  // eq = none
  4039c4:	and	w0, w0, #0xff
  4039c8:	and	x0, x0, #0xff
  4039cc:	cmp	x0, #0x0
  4039d0:	b.eq	4039fc <handle_provides+0x78>  // b.none
  4039d4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4039d8:	add	x1, x0, #0x933
  4039dc:	adrp	x0, 407000 <_fini+0x788>
  4039e0:	add	x4, x0, #0x360
  4039e4:	mov	w3, #0x13e                 	// #318
  4039e8:	mov	x2, x1
  4039ec:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4039f0:	add	x1, x0, #0x9b8
  4039f4:	mov	w0, #0x0                   	// #0
  4039f8:	bl	401d70 <log_assert_failed_realm@plt>
  4039fc:	ldr	x0, [sp, #56]
  403a00:	cmp	x0, #0x0
  403a04:	cset	w0, eq  // eq = none
  403a08:	and	w0, w0, #0xff
  403a0c:	and	x0, x0, #0xff
  403a10:	cmp	x0, #0x0
  403a14:	b.eq	403a40 <handle_provides+0xbc>  // b.none
  403a18:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403a1c:	add	x1, x0, #0x933
  403a20:	adrp	x0, 407000 <_fini+0x788>
  403a24:	add	x4, x0, #0x360
  403a28:	mov	w3, #0x13f                 	// #319
  403a2c:	mov	x2, x1
  403a30:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403a34:	add	x1, x0, #0xcb0
  403a38:	mov	w0, #0x0                   	// #0
  403a3c:	bl	401d70 <log_assert_failed_realm@plt>
  403a40:	ldr	x0, [sp, #48]
  403a44:	cmp	x0, #0x0
  403a48:	cset	w0, eq  // eq = none
  403a4c:	and	w0, w0, #0xff
  403a50:	and	x0, x0, #0xff
  403a54:	cmp	x0, #0x0
  403a58:	b.eq	403a84 <handle_provides+0x100>  // b.none
  403a5c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403a60:	add	x1, x0, #0x933
  403a64:	adrp	x0, 407000 <_fini+0x788>
  403a68:	add	x4, x0, #0x360
  403a6c:	mov	w3, #0x140                 	// #320
  403a70:	mov	x2, x1
  403a74:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403a78:	add	x1, x0, #0xcc0
  403a7c:	mov	w0, #0x0                   	// #0
  403a80:	bl	401d70 <log_assert_failed_realm@plt>
  403a84:	str	xzr, [sp, #152]
  403a88:	str	xzr, [sp, #160]
  403a8c:	add	x1, sp, #0x98
  403a90:	add	x0, sp, #0x30
  403a94:	mov	w3, #0x9                   	// #9
  403a98:	mov	x2, #0x0                   	// #0
  403a9c:	bl	401f70 <extract_first_word@plt>
  403aa0:	str	w0, [sp, #88]
  403aa4:	ldr	w0, [sp, #88]
  403aa8:	cmp	w0, #0x0
  403aac:	b.ge	403b50 <handle_provides+0x1cc>  // b.tcont
  403ab0:	mov	w0, #0x3                   	// #3
  403ab4:	str	w0, [sp, #140]
  403ab8:	ldr	w0, [sp, #88]
  403abc:	str	w0, [sp, #144]
  403ac0:	str	wzr, [sp, #148]
  403ac4:	ldr	w0, [sp, #148]
  403ac8:	bl	4020a0 <log_get_max_level_realm@plt>
  403acc:	mov	w1, w0
  403ad0:	ldr	w0, [sp, #140]
  403ad4:	and	w0, w0, #0x7
  403ad8:	cmp	w1, w0
  403adc:	b.lt	403b34 <handle_provides+0x1b0>  // b.tstop
  403ae0:	ldr	w0, [sp, #148]
  403ae4:	lsl	w1, w0, #10
  403ae8:	ldr	w0, [sp, #140]
  403aec:	orr	w8, w1, w0
  403af0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403af4:	add	x1, x0, #0x933
  403af8:	ldr	x0, [sp, #72]
  403afc:	ldr	x0, [x0, #8]
  403b00:	ldr	w7, [sp, #68]
  403b04:	mov	x6, x0
  403b08:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403b0c:	add	x5, x0, #0xcc8
  403b10:	adrp	x0, 407000 <_fini+0x788>
  403b14:	add	x4, x0, #0x370
  403b18:	mov	w3, #0x147                 	// #327
  403b1c:	mov	x2, x1
  403b20:	ldr	w1, [sp, #144]
  403b24:	mov	w0, w8
  403b28:	bl	401f10 <log_internal_realm@plt>
  403b2c:	mov	w20, w0
  403b30:	b	403b48 <handle_provides+0x1c4>
  403b34:	ldr	w0, [sp, #144]
  403b38:	cmp	w0, #0x0
  403b3c:	cneg	w0, w0, lt  // lt = tstop
  403b40:	and	w0, w0, #0xff
  403b44:	neg	w20, w0
  403b48:	mov	w19, #0x0                   	// #0
  403b4c:	b	403f58 <handle_provides+0x5d4>
  403b50:	ldr	w0, [sp, #88]
  403b54:	cmp	w0, #0x0
  403b58:	b.ne	403b64 <handle_provides+0x1e0>  // b.any
  403b5c:	mov	w19, #0x1                   	// #1
  403b60:	b	403f58 <handle_provides+0x5d4>
  403b64:	ldr	x0, [sp, #152]
  403b68:	add	x1, sp, #0xa0
  403b6c:	mov	x3, x1
  403b70:	mov	x2, x0
  403b74:	ldr	w1, [sp, #68]
  403b78:	ldr	x0, [sp, #72]
  403b7c:	bl	403578 <sysv_translate_facility>
  403b80:	str	w0, [sp, #88]
  403b84:	ldr	w0, [sp, #88]
  403b88:	cmp	w0, #0x0
  403b8c:	b.gt	403b98 <handle_provides+0x214>
  403b90:	mov	w19, #0x2                   	// #2
  403b94:	b	403f58 <handle_provides+0x5d4>
  403b98:	ldr	x0, [sp, #160]
  403b9c:	bl	401f50 <unit_name_to_type@plt>
  403ba0:	cmp	w0, #0x4
  403ba4:	b.eq	403cfc <handle_provides+0x378>  // b.none
  403ba8:	cmp	w0, #0x4
  403bac:	b.gt	403ec8 <handle_provides+0x544>
  403bb0:	cmn	w0, #0x1
  403bb4:	b.eq	403e48 <handle_provides+0x4c4>  // b.none
  403bb8:	cmp	w0, #0x0
  403bbc:	b.ne	403ec8 <handle_provides+0x544>  // b.any
  403bc0:	mov	w0, #0x7                   	// #7
  403bc4:	str	w0, [sp, #92]
  403bc8:	str	wzr, [sp, #96]
  403bcc:	str	wzr, [sp, #100]
  403bd0:	ldr	w0, [sp, #100]
  403bd4:	bl	4020a0 <log_get_max_level_realm@plt>
  403bd8:	mov	w1, w0
  403bdc:	ldr	w0, [sp, #92]
  403be0:	and	w0, w0, #0x7
  403be4:	cmp	w1, w0
  403be8:	b.lt	403c40 <handle_provides+0x2bc>  // b.tstop
  403bec:	ldr	w0, [sp, #100]
  403bf0:	lsl	w1, w0, #10
  403bf4:	ldr	w0, [sp, #92]
  403bf8:	orr	w8, w1, w0
  403bfc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403c00:	add	x1, x0, #0x933
  403c04:	ldr	x2, [sp, #160]
  403c08:	ldr	x0, [sp, #72]
  403c0c:	ldr	x0, [x0]
  403c10:	mov	x7, x0
  403c14:	mov	x6, x2
  403c18:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403c1c:	add	x5, x0, #0xd00
  403c20:	adrp	x0, 407000 <_fini+0x788>
  403c24:	add	x4, x0, #0x370
  403c28:	mov	w3, #0x152                 	// #338
  403c2c:	mov	x2, x1
  403c30:	ldr	w1, [sp, #96]
  403c34:	mov	w0, w8
  403c38:	bl	401f10 <log_internal_realm@plt>
  403c3c:	b	403c48 <handle_provides+0x2c4>
  403c40:	ldr	w0, [sp, #96]
  403c44:	cmp	w0, #0x0
  403c48:	ldr	x0, [sp, #72]
  403c4c:	ldr	x0, [x0]
  403c50:	ldr	x1, [sp, #160]
  403c54:	bl	4028dc <add_alias>
  403c58:	str	w0, [sp, #88]
  403c5c:	ldr	w0, [sp, #88]
  403c60:	cmp	w0, #0x0
  403c64:	b.ge	403f48 <handle_provides+0x5c4>  // b.tcont
  403c68:	mov	w0, #0x4                   	// #4
  403c6c:	str	w0, [sp, #104]
  403c70:	ldr	w0, [sp, #88]
  403c74:	str	w0, [sp, #108]
  403c78:	str	wzr, [sp, #112]
  403c7c:	ldr	w0, [sp, #112]
  403c80:	bl	4020a0 <log_get_max_level_realm@plt>
  403c84:	mov	w1, w0
  403c88:	ldr	w0, [sp, #104]
  403c8c:	and	w0, w0, #0x7
  403c90:	cmp	w1, w0
  403c94:	b.lt	403cf0 <handle_provides+0x36c>  // b.tstop
  403c98:	ldr	w0, [sp, #112]
  403c9c:	lsl	w1, w0, #10
  403ca0:	ldr	w0, [sp, #104]
  403ca4:	orr	w8, w1, w0
  403ca8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403cac:	add	x1, x0, #0x933
  403cb0:	ldr	x0, [sp, #72]
  403cb4:	ldr	x2, [x0, #8]
  403cb8:	ldr	x0, [sp, #160]
  403cbc:	str	x0, [sp]
  403cc0:	ldr	w7, [sp, #68]
  403cc4:	mov	x6, x2
  403cc8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403ccc:	add	x5, x0, #0xd28
  403cd0:	adrp	x0, 407000 <_fini+0x788>
  403cd4:	add	x4, x0, #0x370
  403cd8:	mov	w3, #0x155                 	// #341
  403cdc:	mov	x2, x1
  403ce0:	ldr	w1, [sp, #108]
  403ce4:	mov	w0, w8
  403ce8:	bl	401f10 <log_internal_realm@plt>
  403cec:	b	403f48 <handle_provides+0x5c4>
  403cf0:	ldr	w0, [sp, #108]
  403cf4:	cmp	w0, #0x0
  403cf8:	b	403f48 <handle_provides+0x5c4>
  403cfc:	ldr	x0, [sp, #72]
  403d00:	add	x0, x0, #0x28
  403d04:	ldr	x1, [sp, #160]
  403d08:	bl	401e80 <strv_extend@plt>
  403d0c:	str	w0, [sp, #88]
  403d10:	ldr	w0, [sp, #88]
  403d14:	cmp	w0, #0x0
  403d18:	b.ge	403d44 <handle_provides+0x3c0>  // b.tcont
  403d1c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403d20:	add	x1, x0, #0x933
  403d24:	adrp	x0, 407000 <_fini+0x788>
  403d28:	add	x3, x0, #0x370
  403d2c:	mov	w2, #0x162                 	// #354
  403d30:	mov	w0, #0x0                   	// #0
  403d34:	bl	402080 <log_oom_internal@plt>
  403d38:	mov	w20, w0
  403d3c:	mov	w19, #0x0                   	// #0
  403d40:	b	403f58 <handle_provides+0x5d4>
  403d44:	ldr	x0, [sp, #72]
  403d48:	add	x0, x0, #0x38
  403d4c:	ldr	x1, [sp, #160]
  403d50:	bl	401e80 <strv_extend@plt>
  403d54:	str	w0, [sp, #88]
  403d58:	ldr	w0, [sp, #88]
  403d5c:	cmp	w0, #0x0
  403d60:	b.ge	403d8c <handle_provides+0x408>  // b.tcont
  403d64:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403d68:	add	x1, x0, #0x933
  403d6c:	adrp	x0, 407000 <_fini+0x788>
  403d70:	add	x3, x0, #0x370
  403d74:	mov	w2, #0x166                 	// #358
  403d78:	mov	w0, #0x0                   	// #0
  403d7c:	bl	402080 <log_oom_internal@plt>
  403d80:	mov	w20, w0
  403d84:	mov	w19, #0x0                   	// #0
  403d88:	b	403f58 <handle_provides+0x5d4>
  403d8c:	ldr	x2, [sp, #160]
  403d90:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403d94:	add	x1, x0, #0xd68
  403d98:	mov	x0, x2
  403d9c:	bl	401f60 <strcmp@plt>
  403da0:	cmp	w0, #0x0
  403da4:	b.ne	403f50 <handle_provides+0x5cc>  // b.any
  403da8:	ldr	x0, [sp, #72]
  403dac:	add	x2, x0, #0x28
  403db0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403db4:	add	x1, x0, #0xd80
  403db8:	mov	x0, x2
  403dbc:	bl	401e80 <strv_extend@plt>
  403dc0:	str	w0, [sp, #88]
  403dc4:	ldr	w0, [sp, #88]
  403dc8:	cmp	w0, #0x0
  403dcc:	b.ge	403df8 <handle_provides+0x474>  // b.tcont
  403dd0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403dd4:	add	x1, x0, #0x933
  403dd8:	adrp	x0, 407000 <_fini+0x788>
  403ddc:	add	x3, x0, #0x370
  403de0:	mov	w2, #0x16b                 	// #363
  403de4:	mov	w0, #0x0                   	// #0
  403de8:	bl	402080 <log_oom_internal@plt>
  403dec:	mov	w20, w0
  403df0:	mov	w19, #0x0                   	// #0
  403df4:	b	403f58 <handle_provides+0x5d4>
  403df8:	ldr	x0, [sp, #72]
  403dfc:	add	x2, x0, #0x38
  403e00:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403e04:	add	x1, x0, #0xd80
  403e08:	mov	x0, x2
  403e0c:	bl	401e80 <strv_extend@plt>
  403e10:	str	w0, [sp, #88]
  403e14:	ldr	w0, [sp, #88]
  403e18:	cmp	w0, #0x0
  403e1c:	b.ge	403f50 <handle_provides+0x5cc>  // b.tcont
  403e20:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403e24:	add	x1, x0, #0x933
  403e28:	adrp	x0, 407000 <_fini+0x788>
  403e2c:	add	x3, x0, #0x370
  403e30:	mov	w2, #0x16e                 	// #366
  403e34:	mov	w0, #0x0                   	// #0
  403e38:	bl	402080 <log_oom_internal@plt>
  403e3c:	mov	w20, w0
  403e40:	mov	w19, #0x0                   	// #0
  403e44:	b	403f58 <handle_provides+0x5d4>
  403e48:	mov	w0, #0x4                   	// #4
  403e4c:	str	w0, [sp, #116]
  403e50:	str	wzr, [sp, #120]
  403e54:	str	wzr, [sp, #124]
  403e58:	ldr	w0, [sp, #124]
  403e5c:	bl	4020a0 <log_get_max_level_realm@plt>
  403e60:	mov	w1, w0
  403e64:	ldr	w0, [sp, #116]
  403e68:	and	w0, w0, #0x7
  403e6c:	cmp	w1, w0
  403e70:	b.lt	403ebc <handle_provides+0x538>  // b.tstop
  403e74:	ldr	w0, [sp, #124]
  403e78:	lsl	w1, w0, #10
  403e7c:	ldr	w0, [sp, #116]
  403e80:	orr	w7, w1, w0
  403e84:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403e88:	add	x1, x0, #0x933
  403e8c:	ldr	x0, [sp, #160]
  403e90:	mov	x6, x0
  403e94:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403e98:	add	x5, x0, #0xd90
  403e9c:	adrp	x0, 407000 <_fini+0x788>
  403ea0:	add	x4, x0, #0x370
  403ea4:	mov	w3, #0x174                 	// #372
  403ea8:	mov	x2, x1
  403eac:	ldr	w1, [sp, #120]
  403eb0:	mov	w0, w7
  403eb4:	bl	401f10 <log_internal_realm@plt>
  403eb8:	b	403f54 <handle_provides+0x5d0>
  403ebc:	ldr	w0, [sp, #120]
  403ec0:	cmp	w0, #0x0
  403ec4:	b	403f54 <handle_provides+0x5d0>
  403ec8:	mov	w0, #0x4                   	// #4
  403ecc:	str	w0, [sp, #128]
  403ed0:	str	wzr, [sp, #132]
  403ed4:	str	wzr, [sp, #136]
  403ed8:	ldr	w0, [sp, #136]
  403edc:	bl	4020a0 <log_get_max_level_realm@plt>
  403ee0:	mov	w1, w0
  403ee4:	ldr	w0, [sp, #128]
  403ee8:	and	w0, w0, #0x7
  403eec:	cmp	w1, w0
  403ef0:	b.lt	403f3c <handle_provides+0x5b8>  // b.tstop
  403ef4:	ldr	w0, [sp, #136]
  403ef8:	lsl	w1, w0, #10
  403efc:	ldr	w0, [sp, #128]
  403f00:	orr	w7, w1, w0
  403f04:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403f08:	add	x1, x0, #0x933
  403f0c:	ldr	x0, [sp, #160]
  403f10:	mov	x6, x0
  403f14:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  403f18:	add	x5, x0, #0xdb0
  403f1c:	adrp	x0, 407000 <_fini+0x788>
  403f20:	add	x4, x0, #0x370
  403f24:	mov	w3, #0x178                 	// #376
  403f28:	mov	x2, x1
  403f2c:	ldr	w1, [sp, #132]
  403f30:	mov	w0, w7
  403f34:	bl	401f10 <log_internal_realm@plt>
  403f38:	b	403f54 <handle_provides+0x5d0>
  403f3c:	ldr	w0, [sp, #132]
  403f40:	cmp	w0, #0x0
  403f44:	b	403f54 <handle_provides+0x5d0>
  403f48:	nop
  403f4c:	b	403f54 <handle_provides+0x5d0>
  403f50:	nop
  403f54:	mov	w19, #0x3                   	// #3
  403f58:	add	x0, sp, #0xa0
  403f5c:	bl	4022a8 <freep>
  403f60:	cmp	w19, #0x3
  403f64:	b.eq	403f9c <handle_provides+0x618>  // b.none
  403f68:	cmp	w19, #0x3
  403f6c:	b.gt	403f94 <handle_provides+0x610>
  403f70:	cmp	w19, #0x0
  403f74:	b.eq	403f84 <handle_provides+0x600>  // b.none
  403f78:	cmp	w19, #0x1
  403f7c:	b.eq	403f8c <handle_provides+0x608>  // b.none
  403f80:	b	403f94 <handle_provides+0x610>
  403f84:	mov	w19, #0x0                   	// #0
  403f88:	b	403fa0 <handle_provides+0x61c>
  403f8c:	mov	w19, #0x1                   	// #1
  403f90:	b	403fa0 <handle_provides+0x61c>
  403f94:	mov	w19, #0x2                   	// #2
  403f98:	b	403fa0 <handle_provides+0x61c>
  403f9c:	mov	w19, #0x3                   	// #3
  403fa0:	add	x0, sp, #0x98
  403fa4:	bl	4022a8 <freep>
  403fa8:	cmp	w19, #0x3
  403fac:	b.eq	403fd0 <handle_provides+0x64c>  // b.none
  403fb0:	cmp	w19, #0x3
  403fb4:	b.gt	403a84 <handle_provides+0x100>
  403fb8:	cmp	w19, #0x0
  403fbc:	b.eq	403fd4 <handle_provides+0x650>  // b.none
  403fc0:	cmp	w19, #0x1
  403fc4:	b.ne	403fd0 <handle_provides+0x64c>  // b.any
  403fc8:	mov	w20, #0x0                   	// #0
  403fcc:	b	403fd4 <handle_provides+0x650>
  403fd0:	b	403a84 <handle_provides+0x100>
  403fd4:	mov	w1, w20
  403fd8:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  403fdc:	add	x0, x0, #0xb28
  403fe0:	ldr	x2, [sp, #168]
  403fe4:	ldr	x0, [x0]
  403fe8:	eor	x0, x2, x0
  403fec:	cmp	x0, #0x0
  403ff0:	b.eq	403ff8 <handle_provides+0x674>  // b.none
  403ff4:	bl	401eb0 <__stack_chk_fail@plt>
  403ff8:	mov	w0, w1
  403ffc:	ldp	x19, x20, [sp, #32]
  404000:	ldp	x29, x30, [sp, #16]
  404004:	add	sp, sp, #0xb0
  404008:	ret

000000000040400c <handle_dependencies>:
  40400c:	stp	x29, x30, [sp, #-112]!
  404010:	mov	x29, sp
  404014:	stp	x19, x20, [sp, #16]
  404018:	str	x0, [sp, #56]
  40401c:	str	w1, [sp, #52]
  404020:	str	x2, [sp, #40]
  404024:	str	x3, [sp, #32]
  404028:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  40402c:	add	x0, x0, #0xb28
  404030:	ldr	x1, [x0]
  404034:	str	x1, [sp, #104]
  404038:	mov	x1, #0x0                   	// #0
  40403c:	ldr	x0, [sp, #56]
  404040:	cmp	x0, #0x0
  404044:	cset	w0, eq  // eq = none
  404048:	and	w0, w0, #0xff
  40404c:	and	x0, x0, #0xff
  404050:	cmp	x0, #0x0
  404054:	b.eq	404080 <handle_dependencies+0x74>  // b.none
  404058:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40405c:	add	x1, x0, #0x933
  404060:	adrp	x0, 407000 <_fini+0x788>
  404064:	add	x4, x0, #0x380
  404068:	mov	w3, #0x182                 	// #386
  40406c:	mov	x2, x1
  404070:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404074:	add	x1, x0, #0x9b8
  404078:	mov	w0, #0x0                   	// #0
  40407c:	bl	401d70 <log_assert_failed_realm@plt>
  404080:	ldr	x0, [sp, #40]
  404084:	cmp	x0, #0x0
  404088:	cset	w0, eq  // eq = none
  40408c:	and	w0, w0, #0xff
  404090:	and	x0, x0, #0xff
  404094:	cmp	x0, #0x0
  404098:	b.eq	4040c4 <handle_dependencies+0xb8>  // b.none
  40409c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4040a0:	add	x1, x0, #0x933
  4040a4:	adrp	x0, 407000 <_fini+0x788>
  4040a8:	add	x4, x0, #0x380
  4040ac:	mov	w3, #0x183                 	// #387
  4040b0:	mov	x2, x1
  4040b4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4040b8:	add	x1, x0, #0xcb0
  4040bc:	mov	w0, #0x0                   	// #0
  4040c0:	bl	401d70 <log_assert_failed_realm@plt>
  4040c4:	ldr	x0, [sp, #32]
  4040c8:	cmp	x0, #0x0
  4040cc:	cset	w0, eq  // eq = none
  4040d0:	and	w0, w0, #0xff
  4040d4:	and	x0, x0, #0xff
  4040d8:	cmp	x0, #0x0
  4040dc:	b.eq	404108 <handle_dependencies+0xfc>  // b.none
  4040e0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4040e4:	add	x1, x0, #0x933
  4040e8:	adrp	x0, 407000 <_fini+0x788>
  4040ec:	add	x4, x0, #0x380
  4040f0:	mov	w3, #0x184                 	// #388
  4040f4:	mov	x2, x1
  4040f8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4040fc:	add	x1, x0, #0xcc0
  404100:	mov	w0, #0x0                   	// #0
  404104:	bl	401d70 <log_assert_failed_realm@plt>
  404108:	str	xzr, [sp, #88]
  40410c:	str	xzr, [sp, #96]
  404110:	add	x1, sp, #0x58
  404114:	add	x0, sp, #0x20
  404118:	mov	w3, #0x9                   	// #9
  40411c:	mov	x2, #0x0                   	// #0
  404120:	bl	401f70 <extract_first_word@plt>
  404124:	str	w0, [sp, #72]
  404128:	ldr	w0, [sp, #72]
  40412c:	cmp	w0, #0x0
  404130:	b.ge	4041d4 <handle_dependencies+0x1c8>  // b.tcont
  404134:	mov	w0, #0x3                   	// #3
  404138:	str	w0, [sp, #76]
  40413c:	ldr	w0, [sp, #72]
  404140:	str	w0, [sp, #80]
  404144:	str	wzr, [sp, #84]
  404148:	ldr	w0, [sp, #84]
  40414c:	bl	4020a0 <log_get_max_level_realm@plt>
  404150:	mov	w1, w0
  404154:	ldr	w0, [sp, #76]
  404158:	and	w0, w0, #0x7
  40415c:	cmp	w1, w0
  404160:	b.lt	4041b8 <handle_dependencies+0x1ac>  // b.tstop
  404164:	ldr	w0, [sp, #84]
  404168:	lsl	w1, w0, #10
  40416c:	ldr	w0, [sp, #76]
  404170:	orr	w8, w1, w0
  404174:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404178:	add	x1, x0, #0x933
  40417c:	ldr	x0, [sp, #56]
  404180:	ldr	x0, [x0, #8]
  404184:	ldr	w7, [sp, #52]
  404188:	mov	x6, x0
  40418c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404190:	add	x5, x0, #0xcc8
  404194:	adrp	x0, 407000 <_fini+0x788>
  404198:	add	x4, x0, #0x398
  40419c:	mov	w3, #0x18c                 	// #396
  4041a0:	mov	x2, x1
  4041a4:	ldr	w1, [sp, #80]
  4041a8:	mov	w0, w8
  4041ac:	bl	401f10 <log_internal_realm@plt>
  4041b0:	mov	w20, w0
  4041b4:	b	4041cc <handle_dependencies+0x1c0>
  4041b8:	ldr	w0, [sp, #80]
  4041bc:	cmp	w0, #0x0
  4041c0:	cneg	w0, w0, lt  // lt = tstop
  4041c4:	and	w0, w0, #0xff
  4041c8:	neg	w20, w0
  4041cc:	mov	w19, #0x0                   	// #0
  4041d0:	b	40432c <handle_dependencies+0x320>
  4041d4:	ldr	w0, [sp, #72]
  4041d8:	cmp	w0, #0x0
  4041dc:	b.ne	4041e8 <handle_dependencies+0x1dc>  // b.any
  4041e0:	mov	w19, #0x1                   	// #1
  4041e4:	b	40432c <handle_dependencies+0x320>
  4041e8:	ldr	x0, [sp, #88]
  4041ec:	add	x1, sp, #0x60
  4041f0:	mov	x3, x1
  4041f4:	mov	x2, x0
  4041f8:	ldr	w1, [sp, #52]
  4041fc:	ldr	x0, [sp, #56]
  404200:	bl	403578 <sysv_translate_facility>
  404204:	str	w0, [sp, #72]
  404208:	ldr	w0, [sp, #72]
  40420c:	cmp	w0, #0x0
  404210:	b.gt	40421c <handle_dependencies+0x210>
  404214:	mov	w19, #0x2                   	// #2
  404218:	b	40432c <handle_dependencies+0x320>
  40421c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404220:	add	x1, x0, #0xdd0
  404224:	ldr	x0, [sp, #40]
  404228:	bl	40246c <startswith_no_case>
  40422c:	cmp	x0, #0x0
  404230:	cset	w0, ne  // ne = any
  404234:	strb	w0, [sp, #71]
  404238:	ldr	x2, [sp, #96]
  40423c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404240:	add	x1, x0, #0xd68
  404244:	mov	x0, x2
  404248:	bl	401f60 <strcmp@plt>
  40424c:	cmp	w0, #0x0
  404250:	b.ne	4042c8 <handle_dependencies+0x2bc>  // b.any
  404254:	ldrb	w0, [sp, #71]
  404258:	eor	w0, w0, #0x1
  40425c:	and	w0, w0, #0xff
  404260:	cmp	w0, #0x0
  404264:	b.eq	4042c8 <handle_dependencies+0x2bc>  // b.none
  404268:	ldr	x0, [sp, #56]
  40426c:	add	x0, x0, #0x30
  404270:	ldr	x1, [sp, #96]
  404274:	bl	401e80 <strv_extend@plt>
  404278:	str	w0, [sp, #72]
  40427c:	ldr	w0, [sp, #72]
  404280:	cmp	w0, #0x0
  404284:	b.ge	4042b0 <handle_dependencies+0x2a4>  // b.tcont
  404288:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40428c:	add	x1, x0, #0x933
  404290:	adrp	x0, 407000 <_fini+0x788>
  404294:	add	x3, x0, #0x398
  404298:	mov	w2, #0x19a                 	// #410
  40429c:	mov	w0, #0x0                   	// #0
  4042a0:	bl	402080 <log_oom_internal@plt>
  4042a4:	mov	w20, w0
  4042a8:	mov	w19, #0x0                   	// #0
  4042ac:	b	40432c <handle_dependencies+0x320>
  4042b0:	ldr	x0, [sp, #56]
  4042b4:	add	x0, x0, #0x38
  4042b8:	ldr	x1, [sp, #96]
  4042bc:	bl	401e80 <strv_extend@plt>
  4042c0:	str	w0, [sp, #72]
  4042c4:	b	4042f4 <handle_dependencies+0x2e8>
  4042c8:	ldrb	w0, [sp, #71]
  4042cc:	cmp	w0, #0x0
  4042d0:	b.eq	4042e0 <handle_dependencies+0x2d4>  // b.none
  4042d4:	ldr	x0, [sp, #56]
  4042d8:	add	x0, x0, #0x28
  4042dc:	b	4042e8 <handle_dependencies+0x2dc>
  4042e0:	ldr	x0, [sp, #56]
  4042e4:	add	x0, x0, #0x30
  4042e8:	ldr	x1, [sp, #96]
  4042ec:	bl	401e80 <strv_extend@plt>
  4042f0:	str	w0, [sp, #72]
  4042f4:	ldr	w0, [sp, #72]
  4042f8:	cmp	w0, #0x0
  4042fc:	b.ge	404328 <handle_dependencies+0x31c>  // b.tcont
  404300:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404304:	add	x1, x0, #0x933
  404308:	adrp	x0, 407000 <_fini+0x788>
  40430c:	add	x3, x0, #0x398
  404310:	mov	w2, #0x1a0                 	// #416
  404314:	mov	w0, #0x0                   	// #0
  404318:	bl	402080 <log_oom_internal@plt>
  40431c:	mov	w20, w0
  404320:	mov	w19, #0x0                   	// #0
  404324:	b	40432c <handle_dependencies+0x320>
  404328:	mov	w19, #0x3                   	// #3
  40432c:	add	x0, sp, #0x60
  404330:	bl	4022a8 <freep>
  404334:	cmp	w19, #0x3
  404338:	b.eq	404370 <handle_dependencies+0x364>  // b.none
  40433c:	cmp	w19, #0x3
  404340:	b.gt	404368 <handle_dependencies+0x35c>
  404344:	cmp	w19, #0x0
  404348:	b.eq	404358 <handle_dependencies+0x34c>  // b.none
  40434c:	cmp	w19, #0x1
  404350:	b.eq	404360 <handle_dependencies+0x354>  // b.none
  404354:	b	404368 <handle_dependencies+0x35c>
  404358:	mov	w19, #0x0                   	// #0
  40435c:	b	404374 <handle_dependencies+0x368>
  404360:	mov	w19, #0x1                   	// #1
  404364:	b	404374 <handle_dependencies+0x368>
  404368:	mov	w19, #0x2                   	// #2
  40436c:	b	404374 <handle_dependencies+0x368>
  404370:	mov	w19, #0x3                   	// #3
  404374:	add	x0, sp, #0x58
  404378:	bl	4022a8 <freep>
  40437c:	cmp	w19, #0x3
  404380:	b.eq	4043a4 <handle_dependencies+0x398>  // b.none
  404384:	cmp	w19, #0x3
  404388:	b.gt	404108 <handle_dependencies+0xfc>
  40438c:	cmp	w19, #0x0
  404390:	b.eq	4043a8 <handle_dependencies+0x39c>  // b.none
  404394:	cmp	w19, #0x1
  404398:	b.ne	4043a4 <handle_dependencies+0x398>  // b.any
  40439c:	mov	w20, #0x0                   	// #0
  4043a0:	b	4043a8 <handle_dependencies+0x39c>
  4043a4:	b	404108 <handle_dependencies+0xfc>
  4043a8:	mov	w1, w20
  4043ac:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4043b0:	add	x0, x0, #0xb28
  4043b4:	ldr	x2, [sp, #104]
  4043b8:	ldr	x0, [x0]
  4043bc:	eor	x0, x2, x0
  4043c0:	cmp	x0, #0x0
  4043c4:	b.eq	4043cc <handle_dependencies+0x3c0>  // b.none
  4043c8:	bl	401eb0 <__stack_chk_fail@plt>
  4043cc:	mov	w0, w1
  4043d0:	ldp	x19, x20, [sp, #16]
  4043d4:	ldp	x29, x30, [sp], #112
  4043d8:	ret

00000000004043dc <load_sysv>:
  4043dc:	stp	x29, x30, [sp, #-272]!
  4043e0:	mov	x29, sp
  4043e4:	stp	x19, x20, [sp, #16]
  4043e8:	str	x0, [sp, #40]
  4043ec:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4043f0:	add	x0, x0, #0xb28
  4043f4:	ldr	x1, [x0]
  4043f8:	str	x1, [sp, #264]
  4043fc:	mov	x1, #0x0                   	// #0
  404400:	str	wzr, [sp, #60]
  404404:	str	wzr, [sp, #64]
  404408:	str	xzr, [sp, #128]
  40440c:	str	xzr, [sp, #136]
  404410:	str	xzr, [sp, #144]
  404414:	strb	wzr, [sp, #57]
  404418:	ldr	x0, [sp, #40]
  40441c:	cmp	x0, #0x0
  404420:	cset	w0, eq  // eq = none
  404424:	and	w0, w0, #0xff
  404428:	and	x0, x0, #0xff
  40442c:	cmp	x0, #0x0
  404430:	b.eq	40445c <load_sysv+0x80>  // b.none
  404434:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404438:	add	x1, x0, #0x933
  40443c:	adrp	x0, 407000 <_fini+0x788>
  404440:	add	x4, x0, #0x3b0
  404444:	mov	w3, #0x1b5                 	// #437
  404448:	mov	x2, x1
  40444c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404450:	add	x1, x0, #0x9b8
  404454:	mov	w0, #0x0                   	// #0
  404458:	bl	401d70 <log_assert_failed_realm@plt>
  40445c:	ldr	x0, [sp, #40]
  404460:	ldr	x2, [x0, #8]
  404464:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404468:	add	x1, x0, #0xde0
  40446c:	mov	x0, x2
  404470:	bl	402070 <fopen64@plt>
  404474:	str	x0, [sp, #120]
  404478:	ldr	x0, [sp, #120]
  40447c:	cmp	x0, #0x0
  404480:	b.ne	404538 <load_sysv+0x15c>  // b.any
  404484:	bl	401e60 <__errno_location@plt>
  404488:	ldr	w0, [x0]
  40448c:	cmp	w0, #0x2
  404490:	b.ne	40449c <load_sysv+0xc0>  // b.any
  404494:	mov	w20, #0x0                   	// #0
  404498:	b	404f2c <load_sysv+0xb50>
  40449c:	mov	w0, #0x3                   	// #3
  4044a0:	str	w0, [sp, #108]
  4044a4:	bl	401e60 <__errno_location@plt>
  4044a8:	ldr	w0, [x0]
  4044ac:	str	w0, [sp, #112]
  4044b0:	str	wzr, [sp, #116]
  4044b4:	ldr	w0, [sp, #116]
  4044b8:	bl	4020a0 <log_get_max_level_realm@plt>
  4044bc:	mov	w1, w0
  4044c0:	ldr	w0, [sp, #108]
  4044c4:	and	w0, w0, #0x7
  4044c8:	cmp	w1, w0
  4044cc:	b.lt	404520 <load_sysv+0x144>  // b.tstop
  4044d0:	ldr	w0, [sp, #116]
  4044d4:	lsl	w1, w0, #10
  4044d8:	ldr	w0, [sp, #108]
  4044dc:	orr	w7, w1, w0
  4044e0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4044e4:	add	x1, x0, #0x933
  4044e8:	ldr	x0, [sp, #40]
  4044ec:	ldr	x0, [x0, #8]
  4044f0:	mov	x6, x0
  4044f4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4044f8:	add	x5, x0, #0xde8
  4044fc:	adrp	x0, 407000 <_fini+0x788>
  404500:	add	x4, x0, #0x3c0
  404504:	mov	w3, #0x1bc                 	// #444
  404508:	mov	x2, x1
  40450c:	ldr	w1, [sp, #112]
  404510:	mov	w0, w7
  404514:	bl	401f10 <log_internal_realm@plt>
  404518:	mov	w20, w0
  40451c:	b	404f2c <load_sysv+0xb50>
  404520:	ldr	w0, [sp, #112]
  404524:	cmp	w0, #0x0
  404528:	cneg	w0, w0, lt  // lt = tstop
  40452c:	and	w0, w0, #0xff
  404530:	neg	w20, w0
  404534:	b	404f2c <load_sysv+0xb50>
  404538:	mov	w0, #0x7                   	// #7
  40453c:	str	w0, [sp, #68]
  404540:	str	wzr, [sp, #72]
  404544:	str	wzr, [sp, #76]
  404548:	ldr	w0, [sp, #76]
  40454c:	bl	4020a0 <log_get_max_level_realm@plt>
  404550:	mov	w1, w0
  404554:	ldr	w0, [sp, #68]
  404558:	and	w0, w0, #0x7
  40455c:	cmp	w1, w0
  404560:	b.lt	4045b0 <load_sysv+0x1d4>  // b.tstop
  404564:	ldr	w0, [sp, #76]
  404568:	lsl	w1, w0, #10
  40456c:	ldr	w0, [sp, #68]
  404570:	orr	w7, w1, w0
  404574:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404578:	add	x1, x0, #0x933
  40457c:	ldr	x0, [sp, #40]
  404580:	ldr	x0, [x0, #8]
  404584:	mov	x6, x0
  404588:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40458c:	add	x5, x0, #0xe00
  404590:	adrp	x0, 407000 <_fini+0x788>
  404594:	add	x4, x0, #0x3c0
  404598:	mov	w3, #0x1bf                 	// #447
  40459c:	mov	x2, x1
  4045a0:	ldr	w1, [sp, #72]
  4045a4:	mov	w0, w7
  4045a8:	bl	401f10 <log_internal_realm@plt>
  4045ac:	b	4045b8 <load_sysv+0x1dc>
  4045b0:	ldr	w0, [sp, #72]
  4045b4:	cmp	w0, #0x0
  4045b8:	str	xzr, [sp, #152]
  4045bc:	ldr	x0, [sp, #120]
  4045c0:	add	x1, sp, #0x98
  4045c4:	mov	x2, x1
  4045c8:	mov	x1, #0x100000              	// #1048576
  4045cc:	bl	40268c <read_line>
  4045d0:	str	w0, [sp, #80]
  4045d4:	ldr	w0, [sp, #80]
  4045d8:	cmp	w0, #0x0
  4045dc:	b.ge	40467c <load_sysv+0x2a0>  // b.tcont
  4045e0:	mov	w0, #0x3                   	// #3
  4045e4:	str	w0, [sp, #96]
  4045e8:	ldr	w0, [sp, #80]
  4045ec:	str	w0, [sp, #100]
  4045f0:	str	wzr, [sp, #104]
  4045f4:	ldr	w0, [sp, #104]
  4045f8:	bl	4020a0 <log_get_max_level_realm@plt>
  4045fc:	mov	w1, w0
  404600:	ldr	w0, [sp, #96]
  404604:	and	w0, w0, #0x7
  404608:	cmp	w1, w0
  40460c:	b.lt	404660 <load_sysv+0x284>  // b.tstop
  404610:	ldr	w0, [sp, #104]
  404614:	lsl	w1, w0, #10
  404618:	ldr	w0, [sp, #96]
  40461c:	orr	w7, w1, w0
  404620:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404624:	add	x1, x0, #0x933
  404628:	ldr	x0, [sp, #40]
  40462c:	ldr	x0, [x0, #8]
  404630:	mov	x6, x0
  404634:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404638:	add	x5, x0, #0xe18
  40463c:	adrp	x0, 407000 <_fini+0x788>
  404640:	add	x4, x0, #0x3c0
  404644:	mov	w3, #0x1c7                 	// #455
  404648:	mov	x2, x1
  40464c:	ldr	w1, [sp, #100]
  404650:	mov	w0, w7
  404654:	bl	401f10 <log_internal_realm@plt>
  404658:	mov	w20, w0
  40465c:	b	404674 <load_sysv+0x298>
  404660:	ldr	w0, [sp, #100]
  404664:	cmp	w0, #0x0
  404668:	cneg	w0, w0, lt  // lt = tstop
  40466c:	and	w0, w0, #0xff
  404670:	neg	w20, w0
  404674:	mov	w19, #0x0                   	// #0
  404678:	b	404e18 <load_sysv+0xa3c>
  40467c:	ldr	w0, [sp, #80]
  404680:	cmp	w0, #0x0
  404684:	b.ne	404690 <load_sysv+0x2b4>  // b.any
  404688:	mov	w19, #0x1                   	// #1
  40468c:	b	404e18 <load_sysv+0xa3c>
  404690:	ldr	w0, [sp, #60]
  404694:	add	w0, w0, #0x1
  404698:	str	w0, [sp, #60]
  40469c:	ldr	x0, [sp, #152]
  4046a0:	bl	402000 <strstrip@plt>
  4046a4:	str	x0, [sp, #184]
  4046a8:	ldr	x0, [sp, #184]
  4046ac:	ldrb	w0, [x0]
  4046b0:	cmp	w0, #0x23
  4046b4:	b.eq	404744 <load_sysv+0x368>  // b.none
  4046b8:	ldr	w0, [sp, #64]
  4046bc:	cmp	w0, #0x4
  4046c0:	b.eq	4046e8 <load_sysv+0x30c>  // b.none
  4046c4:	ldr	w0, [sp, #64]
  4046c8:	cmp	w0, #0x0
  4046cc:	b.ne	40473c <load_sysv+0x360>  // b.any
  4046d0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4046d4:	add	x1, x0, #0xe48
  4046d8:	ldr	x0, [sp, #184]
  4046dc:	bl	401d30 <strcasestr@plt>
  4046e0:	cmp	x0, #0x0
  4046e4:	b.eq	40473c <load_sysv+0x360>  // b.none
  4046e8:	ldr	x0, [sp, #184]
  4046ec:	bl	4033e8 <usage_contains_reload>
  4046f0:	and	w0, w0, #0xff
  4046f4:	cmp	w0, #0x0
  4046f8:	b.eq	40470c <load_sysv+0x330>  // b.none
  4046fc:	mov	w0, #0x1                   	// #1
  404700:	strb	w0, [sp, #57]
  404704:	str	wzr, [sp, #64]
  404708:	b	40473c <load_sysv+0x360>
  40470c:	ldr	x0, [sp, #184]
  404710:	bl	402060 <strlen@plt>
  404714:	sub	x0, x0, #0x1
  404718:	ldr	x1, [sp, #184]
  40471c:	add	x0, x1, x0
  404720:	ldrb	w0, [x0]
  404724:	cmp	w0, #0x5c
  404728:	b.ne	404738 <load_sysv+0x35c>  // b.any
  40472c:	mov	w0, #0x4                   	// #4
  404730:	str	w0, [sp, #64]
  404734:	b	40473c <load_sysv+0x360>
  404738:	str	wzr, [sp, #64]
  40473c:	mov	w19, #0x2                   	// #2
  404740:	b	404e18 <load_sysv+0xa3c>
  404744:	ldr	w0, [sp, #64]
  404748:	cmp	w0, #0x0
  40474c:	b.ne	404784 <load_sysv+0x3a8>  // b.any
  404750:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404754:	add	x1, x0, #0xe50
  404758:	ldr	x0, [sp, #184]
  40475c:	bl	401f60 <strcmp@plt>
  404760:	cmp	w0, #0x0
  404764:	b.ne	404784 <load_sysv+0x3a8>  // b.any
  404768:	mov	w0, #0x2                   	// #2
  40476c:	str	w0, [sp, #64]
  404770:	ldr	x0, [sp, #40]
  404774:	mov	w1, #0x1                   	// #1
  404778:	strb	w1, [x0, #72]
  40477c:	mov	w19, #0x2                   	// #2
  404780:	b	404e18 <load_sysv+0xa3c>
  404784:	strb	wzr, [sp, #58]
  404788:	ldr	w0, [sp, #64]
  40478c:	sub	w0, w0, #0x2
  404790:	cmp	w0, #0x1
  404794:	b.hi	4047a0 <load_sysv+0x3c4>  // b.pmore
  404798:	mov	w0, #0x1                   	// #1
  40479c:	strb	w0, [sp, #58]
  4047a0:	nop
  4047a4:	ldrb	w0, [sp, #58]
  4047a8:	cmp	w0, #0x0
  4047ac:	b.eq	4047d4 <load_sysv+0x3f8>  // b.none
  4047b0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4047b4:	add	x1, x0, #0xe68
  4047b8:	ldr	x0, [sp, #184]
  4047bc:	bl	401f60 <strcmp@plt>
  4047c0:	cmp	w0, #0x0
  4047c4:	b.ne	4047d4 <load_sysv+0x3f8>  // b.any
  4047c8:	str	wzr, [sp, #64]
  4047cc:	mov	w19, #0x2                   	// #2
  4047d0:	b	404e18 <load_sysv+0xa3c>
  4047d4:	ldr	x0, [sp, #184]
  4047d8:	add	x0, x0, #0x1
  4047dc:	str	x0, [sp, #184]
  4047e0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4047e4:	add	x1, x0, #0xe80
  4047e8:	ldr	x0, [sp, #184]
  4047ec:	bl	401e00 <strspn@plt>
  4047f0:	mov	x1, x0
  4047f4:	ldr	x0, [sp, #184]
  4047f8:	add	x0, x0, x1
  4047fc:	str	x0, [sp, #184]
  404800:	ldr	w0, [sp, #64]
  404804:	cmp	w0, #0x0
  404808:	b.ne	4049e8 <load_sysv+0x60c>  // b.any
  40480c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404810:	add	x1, x0, #0xe88
  404814:	ldr	x0, [sp, #184]
  404818:	bl	40246c <startswith_no_case>
  40481c:	cmp	x0, #0x0
  404820:	b.eq	4048cc <load_sysv+0x4f0>  // b.none
  404824:	ldr	x0, [sp, #184]
  404828:	bl	402060 <strlen@plt>
  40482c:	str	x0, [sp, #240]
  404830:	ldr	x0, [sp, #240]
  404834:	cmp	x0, #0x0
  404838:	b.eq	404874 <load_sysv+0x498>  // b.none
  40483c:	ldr	x0, [sp, #240]
  404840:	sub	x0, x0, #0x1
  404844:	ldr	x1, [sp, #184]
  404848:	add	x0, x1, x0
  40484c:	ldrb	w0, [x0]
  404850:	cmp	w0, #0x5c
  404854:	b.ne	404874 <load_sysv+0x498>  // b.any
  404858:	mov	w0, #0x1                   	// #1
  40485c:	str	w0, [sp, #64]
  404860:	ldr	x0, [sp, #240]
  404864:	sub	x0, x0, #0x1
  404868:	ldr	x1, [sp, #184]
  40486c:	add	x0, x1, x0
  404870:	strb	wzr, [x0]
  404874:	ldr	x0, [sp, #184]
  404878:	add	x0, x0, #0xc
  40487c:	bl	402000 <strstrip@plt>
  404880:	bl	4023e8 <empty_to_null>
  404884:	str	x0, [sp, #248]
  404888:	add	x0, sp, #0x90
  40488c:	ldr	x1, [sp, #248]
  404890:	bl	401cd0 <free_and_strdup@plt>
  404894:	str	w0, [sp, #80]
  404898:	ldr	w0, [sp, #80]
  40489c:	cmp	w0, #0x0
  4048a0:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  4048a4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4048a8:	add	x1, x0, #0x933
  4048ac:	adrp	x0, 407000 <_fini+0x788>
  4048b0:	add	x3, x0, #0x3c0
  4048b4:	mov	w2, #0x201                 	// #513
  4048b8:	mov	w0, #0x0                   	// #0
  4048bc:	bl	402080 <log_oom_internal@plt>
  4048c0:	mov	w20, w0
  4048c4:	mov	w19, #0x0                   	// #0
  4048c8:	b	404e18 <load_sysv+0xa3c>
  4048cc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4048d0:	add	x1, x0, #0xe98
  4048d4:	ldr	x0, [sp, #184]
  4048d8:	bl	40246c <startswith_no_case>
  4048dc:	cmp	x0, #0x0
  4048e0:	b.eq	404e14 <load_sysv+0xa38>  // b.none
  4048e4:	str	wzr, [sp, #64]
  4048e8:	ldr	x0, [sp, #184]
  4048ec:	add	x0, x0, #0x8
  4048f0:	bl	402000 <strstrip@plt>
  4048f4:	str	x0, [sp, #232]
  4048f8:	ldr	x0, [sp, #232]
  4048fc:	bl	401da0 <path_is_absolute@plt>
  404900:	and	w0, w0, #0xff
  404904:	eor	w0, w0, #0x1
  404908:	and	w0, w0, #0xff
  40490c:	cmp	w0, #0x0
  404910:	b.eq	4049a0 <load_sysv+0x5c4>  // b.none
  404914:	mov	w0, #0x3                   	// #3
  404918:	str	w0, [sp, #84]
  40491c:	str	wzr, [sp, #88]
  404920:	str	wzr, [sp, #92]
  404924:	ldr	w0, [sp, #92]
  404928:	bl	4020a0 <log_get_max_level_realm@plt>
  40492c:	mov	w1, w0
  404930:	ldr	w0, [sp, #84]
  404934:	and	w0, w0, #0x7
  404938:	cmp	w1, w0
  40493c:	b.lt	404990 <load_sysv+0x5b4>  // b.tstop
  404940:	ldr	w0, [sp, #92]
  404944:	lsl	w1, w0, #10
  404948:	ldr	w0, [sp, #84]
  40494c:	orr	w8, w1, w0
  404950:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404954:	add	x1, x0, #0x933
  404958:	ldr	x0, [sp, #40]
  40495c:	ldr	x0, [x0, #8]
  404960:	ldr	w7, [sp, #60]
  404964:	mov	x6, x0
  404968:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40496c:	add	x5, x0, #0xea8
  404970:	adrp	x0, 407000 <_fini+0x788>
  404974:	add	x4, x0, #0x3c0
  404978:	mov	w3, #0x20a                 	// #522
  40497c:	mov	x2, x1
  404980:	ldr	w1, [sp, #88]
  404984:	mov	w0, w8
  404988:	bl	401f10 <log_internal_realm@plt>
  40498c:	b	404998 <load_sysv+0x5bc>
  404990:	ldr	w0, [sp, #88]
  404994:	cmp	w0, #0x0
  404998:	mov	w19, #0x2                   	// #2
  40499c:	b	404e18 <load_sysv+0xa3c>
  4049a0:	ldr	x0, [sp, #40]
  4049a4:	add	x0, x0, #0x20
  4049a8:	ldr	x1, [sp, #232]
  4049ac:	bl	401cd0 <free_and_strdup@plt>
  4049b0:	str	w0, [sp, #80]
  4049b4:	ldr	w0, [sp, #80]
  4049b8:	cmp	w0, #0x0
  4049bc:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  4049c0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4049c4:	add	x1, x0, #0x933
  4049c8:	adrp	x0, 407000 <_fini+0x788>
  4049cc:	add	x3, x0, #0x3c0
  4049d0:	mov	w2, #0x210                 	// #528
  4049d4:	mov	w0, #0x0                   	// #0
  4049d8:	bl	402080 <log_oom_internal@plt>
  4049dc:	mov	w20, w0
  4049e0:	mov	w19, #0x0                   	// #0
  4049e4:	b	404e18 <load_sysv+0xa3c>
  4049e8:	ldr	w0, [sp, #64]
  4049ec:	cmp	w0, #0x1
  4049f0:	b.ne	404af4 <load_sysv+0x718>  // b.any
  4049f4:	ldr	x0, [sp, #184]
  4049f8:	bl	402060 <strlen@plt>
  4049fc:	str	x0, [sp, #216]
  404a00:	ldr	x0, [sp, #216]
  404a04:	cmp	x0, #0x0
  404a08:	b.eq	404a40 <load_sysv+0x664>  // b.none
  404a0c:	ldr	x0, [sp, #216]
  404a10:	sub	x0, x0, #0x1
  404a14:	ldr	x1, [sp, #184]
  404a18:	add	x0, x1, x0
  404a1c:	ldrb	w0, [x0]
  404a20:	cmp	w0, #0x5c
  404a24:	b.ne	404a40 <load_sysv+0x664>  // b.any
  404a28:	ldr	x0, [sp, #216]
  404a2c:	sub	x0, x0, #0x1
  404a30:	ldr	x1, [sp, #184]
  404a34:	add	x0, x1, x0
  404a38:	strb	wzr, [x0]
  404a3c:	b	404a44 <load_sysv+0x668>
  404a40:	str	wzr, [sp, #64]
  404a44:	ldr	x0, [sp, #184]
  404a48:	bl	402000 <strstrip@plt>
  404a4c:	str	x0, [sp, #224]
  404a50:	ldr	x0, [sp, #224]
  404a54:	bl	4023a8 <isempty>
  404a58:	and	w0, w0, #0xff
  404a5c:	eor	w0, w0, #0x1
  404a60:	and	w0, w0, #0xff
  404a64:	cmp	w0, #0x0
  404a68:	b.eq	404e14 <load_sysv+0xa38>  // b.none
  404a6c:	str	xzr, [sp, #168]
  404a70:	ldr	x0, [sp, #144]
  404a74:	cmp	x0, #0x0
  404a78:	b.eq	404aa0 <load_sysv+0x6c4>  // b.none
  404a7c:	ldr	x4, [sp, #144]
  404a80:	mov	x3, #0x0                   	// #0
  404a84:	ldr	x2, [sp, #224]
  404a88:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404a8c:	add	x1, x0, #0xed8
  404a90:	mov	x0, x4
  404a94:	bl	401d50 <strjoin_real@plt>
  404a98:	str	x0, [sp, #168]
  404a9c:	b	404aac <load_sysv+0x6d0>
  404aa0:	ldr	x0, [sp, #224]
  404aa4:	bl	401fa0 <strdup@plt>
  404aa8:	str	x0, [sp, #168]
  404aac:	ldr	x0, [sp, #168]
  404ab0:	cmp	x0, #0x0
  404ab4:	b.ne	404ae0 <load_sysv+0x704>  // b.any
  404ab8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404abc:	add	x1, x0, #0x933
  404ac0:	adrp	x0, 407000 <_fini+0x788>
  404ac4:	add	x3, x0, #0x3c0
  404ac8:	mov	w2, #0x22a                 	// #554
  404acc:	mov	w0, #0x0                   	// #0
  404ad0:	bl	402080 <log_oom_internal@plt>
  404ad4:	mov	w20, w0
  404ad8:	mov	w19, #0x0                   	// #0
  404adc:	b	404e18 <load_sysv+0xa3c>
  404ae0:	ldr	x0, [sp, #144]
  404ae4:	bl	402010 <free@plt>
  404ae8:	ldr	x0, [sp, #168]
  404aec:	str	x0, [sp, #144]
  404af0:	b	404e14 <load_sysv+0xa38>
  404af4:	strb	wzr, [sp, #59]
  404af8:	ldr	w0, [sp, #64]
  404afc:	sub	w0, w0, #0x2
  404b00:	cmp	w0, #0x1
  404b04:	b.hi	404b10 <load_sysv+0x734>  // b.pmore
  404b08:	mov	w0, #0x1                   	// #1
  404b0c:	strb	w0, [sp, #59]
  404b10:	nop
  404b14:	ldrb	w0, [sp, #59]
  404b18:	cmp	w0, #0x0
  404b1c:	b.eq	404e14 <load_sysv+0xa38>  // b.none
  404b20:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404b24:	add	x1, x0, #0xee0
  404b28:	ldr	x0, [sp, #184]
  404b2c:	bl	40246c <startswith_no_case>
  404b30:	cmp	x0, #0x0
  404b34:	b.eq	404b78 <load_sysv+0x79c>  // b.none
  404b38:	mov	w0, #0x2                   	// #2
  404b3c:	str	w0, [sp, #64]
  404b40:	ldr	x0, [sp, #184]
  404b44:	add	x0, x0, #0x9
  404b48:	mov	x3, x0
  404b4c:	ldr	x2, [sp, #184]
  404b50:	ldr	w1, [sp, #60]
  404b54:	ldr	x0, [sp, #40]
  404b58:	bl	403984 <handle_provides>
  404b5c:	str	w0, [sp, #80]
  404b60:	ldr	w0, [sp, #80]
  404b64:	cmp	w0, #0x0
  404b68:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  404b6c:	ldr	w20, [sp, #80]
  404b70:	mov	w19, #0x0                   	// #0
  404b74:	b	404e18 <load_sysv+0xa3c>
  404b78:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404b7c:	add	x1, x0, #0xef0
  404b80:	ldr	x0, [sp, #184]
  404b84:	bl	40246c <startswith_no_case>
  404b88:	cmp	x0, #0x0
  404b8c:	b.ne	404bd8 <load_sysv+0x7fc>  // b.any
  404b90:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404b94:	add	x1, x0, #0xf00
  404b98:	ldr	x0, [sp, #184]
  404b9c:	bl	40246c <startswith_no_case>
  404ba0:	cmp	x0, #0x0
  404ba4:	b.ne	404bd8 <load_sysv+0x7fc>  // b.any
  404ba8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404bac:	add	x1, x0, #0xdd0
  404bb0:	ldr	x0, [sp, #184]
  404bb4:	bl	40246c <startswith_no_case>
  404bb8:	cmp	x0, #0x0
  404bbc:	b.ne	404bd8 <load_sysv+0x7fc>  // b.any
  404bc0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404bc4:	add	x1, x0, #0xf10
  404bc8:	ldr	x0, [sp, #184]
  404bcc:	bl	40246c <startswith_no_case>
  404bd0:	cmp	x0, #0x0
  404bd4:	b.eq	404c20 <load_sysv+0x844>  // b.none
  404bd8:	mov	w0, #0x2                   	// #2
  404bdc:	str	w0, [sp, #64]
  404be0:	mov	w1, #0x3a                  	// #58
  404be4:	ldr	x0, [sp, #184]
  404be8:	bl	401fe0 <strchr@plt>
  404bec:	add	x0, x0, #0x1
  404bf0:	mov	x3, x0
  404bf4:	ldr	x2, [sp, #184]
  404bf8:	ldr	w1, [sp, #60]
  404bfc:	ldr	x0, [sp, #40]
  404c00:	bl	40400c <handle_dependencies>
  404c04:	str	w0, [sp, #80]
  404c08:	ldr	w0, [sp, #80]
  404c0c:	cmp	w0, #0x0
  404c10:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  404c14:	ldr	w20, [sp, #80]
  404c18:	mov	w19, #0x0                   	// #0
  404c1c:	b	404e18 <load_sysv+0xa3c>
  404c20:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404c24:	add	x1, x0, #0xf20
  404c28:	ldr	x0, [sp, #184]
  404c2c:	bl	40246c <startswith_no_case>
  404c30:	cmp	x0, #0x0
  404c34:	b.eq	404c98 <load_sysv+0x8bc>  // b.none
  404c38:	mov	w0, #0x3                   	// #3
  404c3c:	str	w0, [sp, #64]
  404c40:	ldr	x0, [sp, #184]
  404c44:	add	x0, x0, #0xc
  404c48:	bl	402000 <strstrip@plt>
  404c4c:	bl	4023e8 <empty_to_null>
  404c50:	str	x0, [sp, #208]
  404c54:	add	x0, sp, #0x88
  404c58:	ldr	x1, [sp, #208]
  404c5c:	bl	401cd0 <free_and_strdup@plt>
  404c60:	str	w0, [sp, #80]
  404c64:	ldr	w0, [sp, #80]
  404c68:	cmp	w0, #0x0
  404c6c:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  404c70:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404c74:	add	x1, x0, #0x933
  404c78:	adrp	x0, 407000 <_fini+0x788>
  404c7c:	add	x3, x0, #0x3c0
  404c80:	mov	w2, #0x24d                 	// #589
  404c84:	mov	w0, #0x0                   	// #0
  404c88:	bl	402080 <log_oom_internal@plt>
  404c8c:	mov	w20, w0
  404c90:	mov	w19, #0x0                   	// #0
  404c94:	b	404e18 <load_sysv+0xa3c>
  404c98:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404c9c:	add	x1, x0, #0xf30
  404ca0:	ldr	x0, [sp, #184]
  404ca4:	bl	40246c <startswith_no_case>
  404ca8:	cmp	x0, #0x0
  404cac:	b.eq	404d10 <load_sysv+0x934>  // b.none
  404cb0:	mov	w0, #0x2                   	// #2
  404cb4:	str	w0, [sp, #64]
  404cb8:	ldr	x0, [sp, #184]
  404cbc:	add	x0, x0, #0x12
  404cc0:	bl	402000 <strstrip@plt>
  404cc4:	bl	4023e8 <empty_to_null>
  404cc8:	str	x0, [sp, #200]
  404ccc:	add	x0, sp, #0x80
  404cd0:	ldr	x1, [sp, #200]
  404cd4:	bl	401cd0 <free_and_strdup@plt>
  404cd8:	str	w0, [sp, #80]
  404cdc:	ldr	w0, [sp, #80]
  404ce0:	cmp	w0, #0x0
  404ce4:	b.ge	404e14 <load_sysv+0xa38>  // b.tcont
  404ce8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404cec:	add	x1, x0, #0x933
  404cf0:	adrp	x0, 407000 <_fini+0x788>
  404cf4:	add	x3, x0, #0x3c0
  404cf8:	mov	w2, #0x258                 	// #600
  404cfc:	mov	w0, #0x0                   	// #0
  404d00:	bl	402080 <log_oom_internal@plt>
  404d04:	mov	w20, w0
  404d08:	mov	w19, #0x0                   	// #0
  404d0c:	b	404e18 <load_sysv+0xa3c>
  404d10:	ldr	w0, [sp, #64]
  404d14:	cmp	w0, #0x3
  404d18:	b.ne	404e14 <load_sysv+0xa38>  // b.any
  404d1c:	ldr	x2, [sp, #152]
  404d20:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404d24:	add	x1, x0, #0xf48
  404d28:	mov	x0, x2
  404d2c:	bl	40241c <startswith>
  404d30:	cmp	x0, #0x0
  404d34:	b.ne	404d54 <load_sysv+0x978>  // b.any
  404d38:	ldr	x2, [sp, #152]
  404d3c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404d40:	add	x1, x0, #0xf50
  404d44:	mov	x0, x2
  404d48:	bl	40241c <startswith>
  404d4c:	cmp	x0, #0x0
  404d50:	b.eq	404e04 <load_sysv+0xa28>  // b.none
  404d54:	ldr	x0, [sp, #184]
  404d58:	bl	402000 <strstrip@plt>
  404d5c:	str	x0, [sp, #192]
  404d60:	ldr	x0, [sp, #192]
  404d64:	bl	4023a8 <isempty>
  404d68:	and	w0, w0, #0xff
  404d6c:	eor	w0, w0, #0x1
  404d70:	and	w0, w0, #0xff
  404d74:	cmp	w0, #0x0
  404d78:	b.eq	404e10 <load_sysv+0xa34>  // b.none
  404d7c:	str	xzr, [sp, #176]
  404d80:	ldr	x0, [sp, #136]
  404d84:	cmp	x0, #0x0
  404d88:	b.eq	404db0 <load_sysv+0x9d4>  // b.none
  404d8c:	ldr	x4, [sp, #136]
  404d90:	mov	x3, #0x0                   	// #0
  404d94:	ldr	x2, [sp, #184]
  404d98:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404d9c:	add	x1, x0, #0xed8
  404da0:	mov	x0, x4
  404da4:	bl	401d50 <strjoin_real@plt>
  404da8:	str	x0, [sp, #176]
  404dac:	b	404dbc <load_sysv+0x9e0>
  404db0:	ldr	x0, [sp, #192]
  404db4:	bl	401fa0 <strdup@plt>
  404db8:	str	x0, [sp, #176]
  404dbc:	ldr	x0, [sp, #176]
  404dc0:	cmp	x0, #0x0
  404dc4:	b.ne	404df0 <load_sysv+0xa14>  // b.any
  404dc8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404dcc:	add	x1, x0, #0x933
  404dd0:	adrp	x0, 407000 <_fini+0x788>
  404dd4:	add	x3, x0, #0x3c0
  404dd8:	mov	w2, #0x268                 	// #616
  404ddc:	mov	w0, #0x0                   	// #0
  404de0:	bl	402080 <log_oom_internal@plt>
  404de4:	mov	w20, w0
  404de8:	mov	w19, #0x0                   	// #0
  404dec:	b	404e18 <load_sysv+0xa3c>
  404df0:	ldr	x0, [sp, #136]
  404df4:	bl	402010 <free@plt>
  404df8:	ldr	x0, [sp, #176]
  404dfc:	str	x0, [sp, #136]
  404e00:	b	404e10 <load_sysv+0xa34>
  404e04:	mov	w0, #0x2                   	// #2
  404e08:	str	w0, [sp, #64]
  404e0c:	b	404e14 <load_sysv+0xa38>
  404e10:	nop
  404e14:	mov	w19, #0x3                   	// #3
  404e18:	add	x0, sp, #0x98
  404e1c:	bl	4022a8 <freep>
  404e20:	cmp	w19, #0x3
  404e24:	b.eq	404e5c <load_sysv+0xa80>  // b.none
  404e28:	cmp	w19, #0x3
  404e2c:	b.gt	4045b8 <load_sysv+0x1dc>
  404e30:	cmp	w19, #0x0
  404e34:	b.eq	404f2c <load_sysv+0xb50>  // b.none
  404e38:	cmp	w19, #0x1
  404e3c:	b.ne	404e5c <load_sysv+0xa80>  // b.any
  404e40:	ldr	x0, [sp, #40]
  404e44:	ldrb	w1, [sp, #57]
  404e48:	strb	w1, [x0, #73]
  404e4c:	ldr	x0, [sp, #128]
  404e50:	cmp	x0, #0x0
  404e54:	b.ne	404e60 <load_sysv+0xa84>  // b.any
  404e58:	b	404e6c <load_sysv+0xa90>
  404e5c:	b	4045b8 <load_sysv+0x1dc>
  404e60:	ldr	x0, [sp, #128]
  404e64:	str	x0, [sp, #160]
  404e68:	b	404ea0 <load_sysv+0xac4>
  404e6c:	ldr	x0, [sp, #144]
  404e70:	cmp	x0, #0x0
  404e74:	b.eq	404e84 <load_sysv+0xaa8>  // b.none
  404e78:	ldr	x0, [sp, #144]
  404e7c:	str	x0, [sp, #160]
  404e80:	b	404ea0 <load_sysv+0xac4>
  404e84:	ldr	x0, [sp, #136]
  404e88:	cmp	x0, #0x0
  404e8c:	b.eq	404e9c <load_sysv+0xac0>  // b.none
  404e90:	ldr	x0, [sp, #136]
  404e94:	str	x0, [sp, #160]
  404e98:	b	404ea0 <load_sysv+0xac4>
  404e9c:	str	xzr, [sp, #160]
  404ea0:	ldr	x0, [sp, #160]
  404ea4:	cmp	x0, #0x0
  404ea8:	b.eq	404f1c <load_sysv+0xb40>  // b.none
  404eac:	ldr	x0, [sp, #40]
  404eb0:	ldrb	w0, [x0, #72]
  404eb4:	cmp	w0, #0x0
  404eb8:	b.eq	404ec8 <load_sysv+0xaec>  // b.none
  404ebc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404ec0:	add	x0, x0, #0xf58
  404ec4:	b	404ed0 <load_sysv+0xaf4>
  404ec8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404ecc:	add	x0, x0, #0xf60
  404ed0:	mov	x2, #0x0                   	// #0
  404ed4:	ldr	x1, [sp, #160]
  404ed8:	bl	401d50 <strjoin_real@plt>
  404edc:	str	x0, [sp, #256]
  404ee0:	ldr	x0, [sp, #256]
  404ee4:	cmp	x0, #0x0
  404ee8:	b.ne	404f10 <load_sysv+0xb34>  // b.any
  404eec:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404ef0:	add	x1, x0, #0x933
  404ef4:	adrp	x0, 407000 <_fini+0x788>
  404ef8:	add	x3, x0, #0x3c0
  404efc:	mov	w2, #0x287                 	// #647
  404f00:	mov	w0, #0x0                   	// #0
  404f04:	bl	402080 <log_oom_internal@plt>
  404f08:	mov	w20, w0
  404f0c:	b	404f2c <load_sysv+0xb50>
  404f10:	ldr	x0, [sp, #40]
  404f14:	ldr	x1, [sp, #256]
  404f18:	str	x1, [x0, #16]
  404f1c:	ldr	x0, [sp, #40]
  404f20:	mov	w1, #0x1                   	// #1
  404f24:	strb	w1, [x0, #74]
  404f28:	mov	w20, #0x0                   	// #0
  404f2c:	add	x0, sp, #0x90
  404f30:	bl	4022a8 <freep>
  404f34:	add	x0, sp, #0x88
  404f38:	bl	4022a8 <freep>
  404f3c:	add	x0, sp, #0x80
  404f40:	bl	4022a8 <freep>
  404f44:	add	x0, sp, #0x78
  404f48:	bl	402634 <fclosep>
  404f4c:	mov	w1, w20
  404f50:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  404f54:	add	x0, x0, #0xb28
  404f58:	ldr	x2, [sp, #264]
  404f5c:	ldr	x0, [x0]
  404f60:	eor	x0, x2, x0
  404f64:	cmp	x0, #0x0
  404f68:	b.eq	404f70 <load_sysv+0xb94>  // b.none
  404f6c:	bl	401eb0 <__stack_chk_fail@plt>
  404f70:	mov	w0, w1
  404f74:	ldp	x19, x20, [sp, #16]
  404f78:	ldp	x29, x30, [sp], #272
  404f7c:	ret

0000000000404f80 <fix_order>:
  404f80:	stp	x29, x30, [sp, #-80]!
  404f84:	mov	x29, sp
  404f88:	str	x0, [sp, #24]
  404f8c:	str	x1, [sp, #16]
  404f90:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  404f94:	add	x0, x0, #0xb28
  404f98:	ldr	x1, [x0]
  404f9c:	str	x1, [sp, #72]
  404fa0:	mov	x1, #0x0                   	// #0
  404fa4:	ldr	x0, [sp, #24]
  404fa8:	cmp	x0, #0x0
  404fac:	cset	w0, eq  // eq = none
  404fb0:	and	w0, w0, #0xff
  404fb4:	and	x0, x0, #0xff
  404fb8:	cmp	x0, #0x0
  404fbc:	b.eq	404fe8 <fix_order+0x68>  // b.none
  404fc0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404fc4:	add	x1, x0, #0x933
  404fc8:	adrp	x0, 407000 <_fini+0x788>
  404fcc:	add	x4, x0, #0x3d0
  404fd0:	mov	w3, #0x295                 	// #661
  404fd4:	mov	x2, x1
  404fd8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  404fdc:	add	x1, x0, #0x9b8
  404fe0:	mov	w0, #0x0                   	// #0
  404fe4:	bl	401d70 <log_assert_failed_realm@plt>
  404fe8:	ldr	x0, [sp, #24]
  404fec:	ldrb	w0, [x0, #74]
  404ff0:	eor	w0, w0, #0x1
  404ff4:	and	w0, w0, #0xff
  404ff8:	cmp	w0, #0x0
  404ffc:	b.eq	405008 <fix_order+0x88>  // b.none
  405000:	mov	w0, #0x0                   	// #0
  405004:	b	405194 <fix_order+0x214>
  405008:	ldr	x0, [sp, #24]
  40500c:	ldr	w0, [x0, #24]
  405010:	cmp	w0, #0x0
  405014:	b.ge	405020 <fix_order+0xa0>  // b.tcont
  405018:	mov	w0, #0x0                   	// #0
  40501c:	b	405194 <fix_order+0x214>
  405020:	mov	w0, #0xfffffffe            	// #-2
  405024:	str	w0, [sp, #56]
  405028:	str	xzr, [sp, #64]
  40502c:	b	405164 <fix_order+0x1e4>
  405030:	ldr	x0, [sp, #48]
  405034:	ldr	x1, [sp, #24]
  405038:	cmp	x1, x0
  40503c:	b.ne	405044 <fix_order+0xc4>  // b.any
  405040:	b	405164 <fix_order+0x1e4>
  405044:	ldr	x0, [sp, #48]
  405048:	ldrb	w0, [x0, #74]
  40504c:	eor	w0, w0, #0x1
  405050:	and	w0, w0, #0xff
  405054:	cmp	w0, #0x0
  405058:	b.eq	405060 <fix_order+0xe0>  // b.none
  40505c:	b	405164 <fix_order+0x1e4>
  405060:	ldr	x0, [sp, #48]
  405064:	ldr	w0, [x0, #24]
  405068:	cmp	w0, #0x0
  40506c:	b.ge	405074 <fix_order+0xf4>  // b.tcont
  405070:	b	405164 <fix_order+0x1e4>
  405074:	ldr	x0, [sp, #24]
  405078:	ldrb	w0, [x0, #72]
  40507c:	cmp	w0, #0x0
  405080:	b.eq	405098 <fix_order+0x118>  // b.none
  405084:	ldr	x0, [sp, #48]
  405088:	ldrb	w0, [x0, #72]
  40508c:	cmp	w0, #0x0
  405090:	b.eq	405098 <fix_order+0x118>  // b.none
  405094:	b	405164 <fix_order+0x1e4>
  405098:	ldr	x0, [sp, #48]
  40509c:	ldr	w1, [x0, #24]
  4050a0:	ldr	x0, [sp, #24]
  4050a4:	ldr	w0, [x0, #24]
  4050a8:	cmp	w1, w0
  4050ac:	b.ge	4050fc <fix_order+0x17c>  // b.tcont
  4050b0:	ldr	x0, [sp, #24]
  4050b4:	add	x2, x0, #0x30
  4050b8:	ldr	x0, [sp, #48]
  4050bc:	ldr	x0, [x0]
  4050c0:	mov	x1, x0
  4050c4:	mov	x0, x2
  4050c8:	bl	401e80 <strv_extend@plt>
  4050cc:	str	w0, [sp, #44]
  4050d0:	ldr	w0, [sp, #44]
  4050d4:	cmp	w0, #0x0
  4050d8:	b.ge	405164 <fix_order+0x1e4>  // b.tcont
  4050dc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4050e0:	add	x1, x0, #0x933
  4050e4:	adrp	x0, 407000 <_fini+0x788>
  4050e8:	add	x3, x0, #0x3e0
  4050ec:	mov	w2, #0x2af                 	// #687
  4050f0:	mov	w0, #0x0                   	// #0
  4050f4:	bl	402080 <log_oom_internal@plt>
  4050f8:	b	405194 <fix_order+0x214>
  4050fc:	ldr	x0, [sp, #48]
  405100:	ldr	w1, [x0, #24]
  405104:	ldr	x0, [sp, #24]
  405108:	ldr	w0, [x0, #24]
  40510c:	cmp	w1, w0
  405110:	b.le	405160 <fix_order+0x1e0>
  405114:	ldr	x0, [sp, #24]
  405118:	add	x2, x0, #0x28
  40511c:	ldr	x0, [sp, #48]
  405120:	ldr	x0, [x0]
  405124:	mov	x1, x0
  405128:	mov	x0, x2
  40512c:	bl	401e80 <strv_extend@plt>
  405130:	str	w0, [sp, #44]
  405134:	ldr	w0, [sp, #44]
  405138:	cmp	w0, #0x0
  40513c:	b.ge	405164 <fix_order+0x1e4>  // b.tcont
  405140:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405144:	add	x1, x0, #0x933
  405148:	adrp	x0, 407000 <_fini+0x788>
  40514c:	add	x3, x0, #0x3e0
  405150:	mov	w2, #0x2b4                 	// #692
  405154:	mov	w0, #0x0                   	// #0
  405158:	bl	402080 <log_oom_internal@plt>
  40515c:	b	405194 <fix_order+0x214>
  405160:	nop
  405164:	add	x1, sp, #0x30
  405168:	add	x0, sp, #0x38
  40516c:	mov	x3, #0x0                   	// #0
  405170:	mov	x2, x1
  405174:	mov	x1, x0
  405178:	ldr	x0, [sp, #16]
  40517c:	bl	402564 <hashmap_iterate>
  405180:	and	w0, w0, #0xff
  405184:	cmp	w0, #0x0
  405188:	b.ne	405030 <fix_order+0xb0>  // b.any
  40518c:	mov	w0, #0x0                   	// #0
  405190:	b	405194 <fix_order+0x214>
  405194:	mov	w1, w0
  405198:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  40519c:	add	x0, x0, #0xb28
  4051a0:	ldr	x2, [sp, #72]
  4051a4:	ldr	x0, [x0]
  4051a8:	eor	x0, x2, x0
  4051ac:	cmp	x0, #0x0
  4051b0:	b.eq	4051b8 <fix_order+0x238>  // b.none
  4051b4:	bl	401eb0 <__stack_chk_fail@plt>
  4051b8:	mov	w0, w1
  4051bc:	ldp	x29, x30, [sp], #80
  4051c0:	ret

00000000004051c4 <acquire_search_path>:
  4051c4:	stp	x29, x30, [sp, #-112]!
  4051c8:	mov	x29, sp
  4051cc:	str	x19, [sp, #16]
  4051d0:	str	x0, [sp, #56]
  4051d4:	str	x1, [sp, #48]
  4051d8:	str	x2, [sp, #40]
  4051dc:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4051e0:	add	x0, x0, #0xb28
  4051e4:	ldr	x1, [x0]
  4051e8:	str	x1, [sp, #104]
  4051ec:	mov	x1, #0x0                   	// #0
  4051f0:	str	xzr, [sp, #80]
  4051f4:	ldr	x0, [sp, #56]
  4051f8:	cmp	x0, #0x0
  4051fc:	cset	w0, eq  // eq = none
  405200:	and	w0, w0, #0xff
  405204:	and	x0, x0, #0xff
  405208:	cmp	x0, #0x0
  40520c:	b.eq	405238 <acquire_search_path+0x74>  // b.none
  405210:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405214:	add	x1, x0, #0x933
  405218:	adrp	x0, 407000 <_fini+0x788>
  40521c:	add	x4, x0, #0x3f0
  405220:	mov	w3, #0x2c3                 	// #707
  405224:	mov	x2, x1
  405228:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40522c:	add	x1, x0, #0xf68
  405230:	mov	w0, #0x0                   	// #0
  405234:	bl	401d70 <log_assert_failed_realm@plt>
  405238:	ldr	x0, [sp, #48]
  40523c:	cmp	x0, #0x0
  405240:	cset	w0, eq  // eq = none
  405244:	and	w0, w0, #0xff
  405248:	and	x0, x0, #0xff
  40524c:	cmp	x0, #0x0
  405250:	b.eq	40527c <acquire_search_path+0xb8>  // b.none
  405254:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405258:	add	x1, x0, #0x933
  40525c:	adrp	x0, 407000 <_fini+0x788>
  405260:	add	x4, x0, #0x3f0
  405264:	mov	w3, #0x2c4                 	// #708
  405268:	mov	x2, x1
  40526c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405270:	add	x1, x0, #0xf70
  405274:	mov	w0, #0x0                   	// #0
  405278:	bl	401d70 <log_assert_failed_realm@plt>
  40527c:	ldr	x0, [sp, #48]
  405280:	bl	401fc0 <getenv@plt>
  405284:	str	x0, [sp, #88]
  405288:	ldr	x0, [sp, #88]
  40528c:	cmp	x0, #0x0
  405290:	b.eq	405344 <acquire_search_path+0x180>  // b.none
  405294:	add	x0, sp, #0x50
  405298:	mov	x1, x0
  40529c:	ldr	x0, [sp, #88]
  4052a0:	bl	401d90 <path_split_and_make_absolute@plt>
  4052a4:	str	w0, [sp, #64]
  4052a8:	ldr	w0, [sp, #64]
  4052ac:	cmp	w0, #0x0
  4052b0:	b.ge	405344 <acquire_search_path+0x180>  // b.tcont
  4052b4:	mov	w0, #0x3                   	// #3
  4052b8:	str	w0, [sp, #68]
  4052bc:	ldr	w0, [sp, #64]
  4052c0:	str	w0, [sp, #72]
  4052c4:	str	wzr, [sp, #76]
  4052c8:	ldr	w0, [sp, #76]
  4052cc:	bl	4020a0 <log_get_max_level_realm@plt>
  4052d0:	mov	w1, w0
  4052d4:	ldr	w0, [sp, #68]
  4052d8:	and	w0, w0, #0x7
  4052dc:	cmp	w1, w0
  4052e0:	b.lt	40532c <acquire_search_path+0x168>  // b.tstop
  4052e4:	ldr	w0, [sp, #76]
  4052e8:	lsl	w1, w0, #10
  4052ec:	ldr	w0, [sp, #68]
  4052f0:	orr	w7, w1, w0
  4052f4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4052f8:	add	x1, x0, #0x933
  4052fc:	ldr	x6, [sp, #48]
  405300:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405304:	add	x5, x0, #0xf78
  405308:	adrp	x0, 407000 <_fini+0x788>
  40530c:	add	x4, x0, #0x408
  405310:	mov	w3, #0x2ca                 	// #714
  405314:	mov	x2, x1
  405318:	ldr	w1, [sp, #72]
  40531c:	mov	w0, w7
  405320:	bl	401f10 <log_internal_realm@plt>
  405324:	mov	w19, w0
  405328:	b	4053f4 <acquire_search_path+0x230>
  40532c:	ldr	w0, [sp, #72]
  405330:	cmp	w0, #0x0
  405334:	cneg	w0, w0, lt  // lt = tstop
  405338:	and	w0, w0, #0xff
  40533c:	neg	w19, w0
  405340:	b	4053f4 <acquire_search_path+0x230>
  405344:	ldr	x0, [sp, #80]
  405348:	bl	4025f4 <strv_isempty>
  40534c:	and	w0, w0, #0xff
  405350:	cmp	w0, #0x0
  405354:	b.eq	4053a0 <acquire_search_path+0x1dc>  // b.none
  405358:	ldr	x0, [sp, #80]
  40535c:	bl	401e70 <strv_free@plt>
  405360:	mov	x1, #0x0                   	// #0
  405364:	ldr	x0, [sp, #56]
  405368:	bl	401df0 <strv_new_internal@plt>
  40536c:	str	x0, [sp, #80]
  405370:	ldr	x0, [sp, #80]
  405374:	cmp	x0, #0x0
  405378:	b.ne	4053a0 <acquire_search_path+0x1dc>  // b.any
  40537c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405380:	add	x1, x0, #0x933
  405384:	adrp	x0, 407000 <_fini+0x788>
  405388:	add	x3, x0, #0x408
  40538c:	mov	w2, #0x2d2                 	// #722
  405390:	mov	w0, #0x0                   	// #0
  405394:	bl	402080 <log_oom_internal@plt>
  405398:	mov	w19, w0
  40539c:	b	4053f4 <acquire_search_path+0x230>
  4053a0:	ldr	x0, [sp, #80]
  4053a4:	mov	x1, #0x0                   	// #0
  4053a8:	bl	401ff0 <path_strv_resolve_uniq@plt>
  4053ac:	cmp	x0, #0x0
  4053b0:	b.ne	4053d8 <acquire_search_path+0x214>  // b.any
  4053b4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4053b8:	add	x1, x0, #0x933
  4053bc:	adrp	x0, 407000 <_fini+0x788>
  4053c0:	add	x3, x0, #0x408
  4053c4:	mov	w2, #0x2d6                 	// #726
  4053c8:	mov	w0, #0x0                   	// #0
  4053cc:	bl	402080 <log_oom_internal@plt>
  4053d0:	mov	w19, w0
  4053d4:	b	4053f4 <acquire_search_path+0x230>
  4053d8:	ldr	x0, [sp, #80]
  4053dc:	str	x0, [sp, #96]
  4053e0:	str	xzr, [sp, #80]
  4053e4:	ldr	x1, [sp, #96]
  4053e8:	ldr	x0, [sp, #40]
  4053ec:	str	x1, [x0]
  4053f0:	mov	w19, #0x0                   	// #0
  4053f4:	add	x0, sp, #0x50
  4053f8:	bl	4025c0 <strv_freep>
  4053fc:	mov	w1, w19
  405400:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  405404:	add	x0, x0, #0xb28
  405408:	ldr	x2, [sp, #104]
  40540c:	ldr	x0, [x0]
  405410:	eor	x0, x2, x0
  405414:	cmp	x0, #0x0
  405418:	b.eq	405420 <acquire_search_path+0x25c>  // b.none
  40541c:	bl	401eb0 <__stack_chk_fail@plt>
  405420:	mov	w0, w1
  405424:	ldr	x19, [sp, #16]
  405428:	ldp	x29, x30, [sp], #112
  40542c:	ret

0000000000405430 <enumerate_sysv>:
  405430:	stp	x29, x30, [sp, #-336]!
  405434:	mov	x29, sp
  405438:	stp	x19, x20, [sp, #16]
  40543c:	str	x0, [sp, #40]
  405440:	str	x1, [sp, #32]
  405444:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  405448:	add	x0, x0, #0xb28
  40544c:	ldr	x1, [x0]
  405450:	str	x1, [sp, #328]
  405454:	mov	x1, #0x0                   	// #0
  405458:	str	xzr, [sp, #128]
  40545c:	ldr	x0, [sp, #40]
  405460:	cmp	x0, #0x0
  405464:	cset	w0, eq  // eq = none
  405468:	and	w0, w0, #0xff
  40546c:	and	x0, x0, #0xff
  405470:	cmp	x0, #0x0
  405474:	b.eq	4054a0 <enumerate_sysv+0x70>  // b.none
  405478:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40547c:	add	x1, x0, #0x933
  405480:	adrp	x0, 407000 <_fini+0x788>
  405484:	add	x4, x0, #0x420
  405488:	mov	w3, #0x2e2                 	// #738
  40548c:	mov	x2, x1
  405490:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405494:	add	x1, x0, #0xfa8
  405498:	mov	w0, #0x0                   	// #0
  40549c:	bl	401d70 <log_assert_failed_realm@plt>
  4054a0:	add	x0, sp, #0x80
  4054a4:	mov	x2, x0
  4054a8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4054ac:	add	x1, x0, #0xfb0
  4054b0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4054b4:	add	x0, x0, #0xfc8
  4054b8:	bl	4051c4 <acquire_search_path>
  4054bc:	str	w0, [sp, #64]
  4054c0:	ldr	w0, [sp, #64]
  4054c4:	cmp	w0, #0x0
  4054c8:	b.ge	4054d4 <enumerate_sysv+0xa4>  // b.tcont
  4054cc:	ldr	w20, [sp, #64]
  4054d0:	b	405b94 <enumerate_sysv+0x764>
  4054d4:	ldr	x0, [sp, #128]
  4054d8:	str	x0, [sp, #168]
  4054dc:	b	405b74 <enumerate_sysv+0x744>
  4054e0:	str	xzr, [sp, #136]
  4054e4:	ldr	x0, [sp, #168]
  4054e8:	ldr	x0, [x0]
  4054ec:	bl	401f80 <opendir@plt>
  4054f0:	str	x0, [sp, #136]
  4054f4:	ldr	x0, [sp, #136]
  4054f8:	cmp	x0, #0x0
  4054fc:	b.ne	4055a0 <enumerate_sysv+0x170>  // b.any
  405500:	bl	401e60 <__errno_location@plt>
  405504:	ldr	w0, [x0]
  405508:	cmp	w0, #0x2
  40550c:	b.eq	405598 <enumerate_sysv+0x168>  // b.none
  405510:	mov	w0, #0x4                   	// #4
  405514:	str	w0, [sp, #116]
  405518:	bl	401e60 <__errno_location@plt>
  40551c:	ldr	w0, [x0]
  405520:	str	w0, [sp, #120]
  405524:	str	wzr, [sp, #124]
  405528:	ldr	w0, [sp, #124]
  40552c:	bl	4020a0 <log_get_max_level_realm@plt>
  405530:	mov	w1, w0
  405534:	ldr	w0, [sp, #116]
  405538:	and	w0, w0, #0x7
  40553c:	cmp	w1, w0
  405540:	b.lt	405590 <enumerate_sysv+0x160>  // b.tstop
  405544:	ldr	w0, [sp, #124]
  405548:	lsl	w1, w0, #10
  40554c:	ldr	w0, [sp, #116]
  405550:	orr	w7, w1, w0
  405554:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405558:	add	x1, x0, #0x933
  40555c:	ldr	x0, [sp, #168]
  405560:	ldr	x0, [x0]
  405564:	mov	x6, x0
  405568:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40556c:	add	x5, x0, #0xfd8
  405570:	adrp	x0, 407000 <_fini+0x788>
  405574:	add	x4, x0, #0x430
  405578:	mov	w3, #0x2ef                 	// #751
  40557c:	mov	x2, x1
  405580:	ldr	w1, [sp, #120]
  405584:	mov	w0, w7
  405588:	bl	401f10 <log_internal_realm@plt>
  40558c:	b	405598 <enumerate_sysv+0x168>
  405590:	ldr	w0, [sp, #120]
  405594:	cmp	w0, #0x0
  405598:	mov	w19, #0x0                   	// #0
  40559c:	b	405b50 <enumerate_sysv+0x720>
  4055a0:	bl	401e60 <__errno_location@plt>
  4055a4:	str	wzr, [x0]
  4055a8:	ldr	x0, [sp, #136]
  4055ac:	bl	401d80 <readdir64@plt>
  4055b0:	str	x0, [sp, #176]
  4055b4:	ldr	x0, [sp, #176]
  4055b8:	cmp	x0, #0x0
  4055bc:	b.ne	40565c <enumerate_sysv+0x22c>  // b.any
  4055c0:	bl	401e60 <__errno_location@plt>
  4055c4:	ldr	w0, [x0]
  4055c8:	cmp	w0, #0x0
  4055cc:	b.le	405b48 <enumerate_sysv+0x718>
  4055d0:	mov	w0, #0x3                   	// #3
  4055d4:	str	w0, [sp, #104]
  4055d8:	bl	401e60 <__errno_location@plt>
  4055dc:	ldr	w0, [x0]
  4055e0:	str	w0, [sp, #108]
  4055e4:	str	wzr, [sp, #112]
  4055e8:	ldr	w0, [sp, #112]
  4055ec:	bl	4020a0 <log_get_max_level_realm@plt>
  4055f0:	mov	w1, w0
  4055f4:	ldr	w0, [sp, #104]
  4055f8:	and	w0, w0, #0x7
  4055fc:	cmp	w1, w0
  405600:	b.lt	405650 <enumerate_sysv+0x220>  // b.tstop
  405604:	ldr	w0, [sp, #112]
  405608:	lsl	w1, w0, #10
  40560c:	ldr	w0, [sp, #104]
  405610:	orr	w7, w1, w0
  405614:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405618:	add	x1, x0, #0x933
  40561c:	ldr	x0, [sp, #168]
  405620:	ldr	x0, [x0]
  405624:	mov	x6, x0
  405628:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  40562c:	add	x5, x0, #0xff8
  405630:	adrp	x0, 407000 <_fini+0x788>
  405634:	add	x4, x0, #0x430
  405638:	mov	w3, #0x2f3                 	// #755
  40563c:	mov	x2, x1
  405640:	ldr	w1, [sp, #108]
  405644:	mov	w0, w7
  405648:	bl	401f10 <log_internal_realm@plt>
  40564c:	b	405b48 <enumerate_sysv+0x718>
  405650:	ldr	w0, [sp, #108]
  405654:	cmp	w0, #0x0
  405658:	b	405b48 <enumerate_sysv+0x718>
  40565c:	ldr	x0, [sp, #176]
  405660:	add	x0, x0, #0x13
  405664:	bl	401cf0 <hidden_or_backup_file@plt>
  405668:	and	w0, w0, #0xff
  40566c:	cmp	w0, #0x0
  405670:	b.ne	405b2c <enumerate_sysv+0x6fc>  // b.any
  405674:	str	xzr, [sp, #144]
  405678:	str	xzr, [sp, #152]
  40567c:	str	xzr, [sp, #160]
  405680:	ldr	x0, [sp, #136]
  405684:	bl	401d60 <dirfd@plt>
  405688:	mov	w4, w0
  40568c:	ldr	x0, [sp, #176]
  405690:	add	x0, x0, #0x13
  405694:	add	x1, sp, #0xc8
  405698:	mov	w3, #0x0                   	// #0
  40569c:	mov	x2, x1
  4056a0:	mov	x1, x0
  4056a4:	mov	w0, w4
  4056a8:	bl	406858 <fstatat64>
  4056ac:	cmp	w0, #0x0
  4056b0:	b.ge	405750 <enumerate_sysv+0x320>  // b.tcont
  4056b4:	mov	w0, #0x4                   	// #4
  4056b8:	str	w0, [sp, #92]
  4056bc:	bl	401e60 <__errno_location@plt>
  4056c0:	ldr	w0, [x0]
  4056c4:	str	w0, [sp, #96]
  4056c8:	str	wzr, [sp, #100]
  4056cc:	ldr	w0, [sp, #100]
  4056d0:	bl	4020a0 <log_get_max_level_realm@plt>
  4056d4:	mov	w1, w0
  4056d8:	ldr	w0, [sp, #92]
  4056dc:	and	w0, w0, #0x7
  4056e0:	cmp	w1, w0
  4056e4:	b.lt	405740 <enumerate_sysv+0x310>  // b.tstop
  4056e8:	ldr	w0, [sp, #100]
  4056ec:	lsl	w1, w0, #10
  4056f0:	ldr	w0, [sp, #92]
  4056f4:	orr	w8, w1, w0
  4056f8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4056fc:	add	x1, x0, #0x933
  405700:	ldr	x0, [sp, #168]
  405704:	ldr	x2, [x0]
  405708:	ldr	x0, [sp, #176]
  40570c:	add	x0, x0, #0x13
  405710:	mov	x7, x0
  405714:	mov	x6, x2
  405718:	adrp	x0, 407000 <_fini+0x788>
  40571c:	add	x5, x0, #0x28
  405720:	adrp	x0, 407000 <_fini+0x788>
  405724:	add	x4, x0, #0x430
  405728:	mov	w3, #0x2f9                 	// #761
  40572c:	mov	x2, x1
  405730:	ldr	w1, [sp, #96]
  405734:	mov	w0, w8
  405738:	bl	401f10 <log_internal_realm@plt>
  40573c:	b	405748 <enumerate_sysv+0x318>
  405740:	ldr	w0, [sp, #96]
  405744:	cmp	w0, #0x0
  405748:	mov	w19, #0x0                   	// #0
  40574c:	b	405aac <enumerate_sysv+0x67c>
  405750:	ldr	w0, [sp, #216]
  405754:	and	w0, w0, #0x40
  405758:	cmp	w0, #0x0
  40575c:	b.ne	405768 <enumerate_sysv+0x338>  // b.any
  405760:	mov	w19, #0x0                   	// #0
  405764:	b	405aac <enumerate_sysv+0x67c>
  405768:	ldr	w0, [sp, #216]
  40576c:	and	w0, w0, #0xf000
  405770:	cmp	w0, #0x8, lsl #12
  405774:	b.eq	405780 <enumerate_sysv+0x350>  // b.none
  405778:	mov	w19, #0x0                   	// #0
  40577c:	b	405aac <enumerate_sysv+0x67c>
  405780:	ldr	x0, [sp, #176]
  405784:	add	x0, x0, #0x13
  405788:	bl	4034a0 <sysv_translate_name>
  40578c:	str	x0, [sp, #152]
  405790:	ldr	x0, [sp, #152]
  405794:	cmp	x0, #0x0
  405798:	b.ne	4057c4 <enumerate_sysv+0x394>  // b.any
  40579c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4057a0:	add	x1, x0, #0x933
  4057a4:	adrp	x0, 407000 <_fini+0x788>
  4057a8:	add	x3, x0, #0x430
  4057ac:	mov	w2, #0x305                 	// #773
  4057b0:	mov	w0, #0x0                   	// #0
  4057b4:	bl	402080 <log_oom_internal@plt>
  4057b8:	mov	w20, w0
  4057bc:	mov	w19, #0x1                   	// #1
  4057c0:	b	405aac <enumerate_sysv+0x67c>
  4057c4:	ldr	x0, [sp, #152]
  4057c8:	mov	x1, x0
  4057cc:	ldr	x0, [sp, #32]
  4057d0:	bl	40253c <hashmap_contains>
  4057d4:	and	w0, w0, #0xff
  4057d8:	cmp	w0, #0x0
  4057dc:	b.eq	4057e8 <enumerate_sysv+0x3b8>  // b.none
  4057e0:	mov	w19, #0x0                   	// #0
  4057e4:	b	405aac <enumerate_sysv+0x67c>
  4057e8:	ldr	x0, [sp, #152]
  4057ec:	mov	x2, x0
  4057f0:	ldr	x1, [sp, #40]
  4057f4:	mov	w0, #0x0                   	// #0
  4057f8:	bl	402040 <unit_file_exists@plt>
  4057fc:	str	w0, [sp, #64]
  405800:	ldr	w0, [sp, #64]
  405804:	cmp	w0, #0x0
  405808:	b.ge	4058e8 <enumerate_sysv+0x4b8>  // b.tcont
  40580c:	strb	wzr, [sp, #63]
  405810:	ldr	w0, [sp, #64]
  405814:	cmn	w0, #0x28
  405818:	b.eq	405840 <enumerate_sysv+0x410>  // b.none
  40581c:	ldr	w0, [sp, #64]
  405820:	cmn	w0, #0x28
  405824:	b.gt	405848 <enumerate_sysv+0x418>
  405828:	ldr	w0, [sp, #64]
  40582c:	cmn	w0, #0x84
  405830:	b.eq	405840 <enumerate_sysv+0x410>  // b.none
  405834:	ldr	w0, [sp, #64]
  405838:	cmn	w0, #0x63
  40583c:	b.ne	405848 <enumerate_sysv+0x418>  // b.any
  405840:	mov	w0, #0x1                   	// #1
  405844:	strb	w0, [sp, #63]
  405848:	nop
  40584c:	ldrb	w0, [sp, #63]
  405850:	eor	w0, w0, #0x1
  405854:	and	w0, w0, #0xff
  405858:	cmp	w0, #0x0
  40585c:	b.eq	4058e8 <enumerate_sysv+0x4b8>  // b.none
  405860:	mov	w0, #0x7                   	// #7
  405864:	str	w0, [sp, #68]
  405868:	ldr	w0, [sp, #64]
  40586c:	str	w0, [sp, #72]
  405870:	str	wzr, [sp, #76]
  405874:	ldr	w0, [sp, #76]
  405878:	bl	4020a0 <log_get_max_level_realm@plt>
  40587c:	mov	w1, w0
  405880:	ldr	w0, [sp, #68]
  405884:	and	w0, w0, #0x7
  405888:	cmp	w1, w0
  40588c:	b.lt	4058d8 <enumerate_sysv+0x4a8>  // b.tstop
  405890:	ldr	w0, [sp, #76]
  405894:	lsl	w1, w0, #10
  405898:	ldr	w0, [sp, #68]
  40589c:	orr	w7, w1, w0
  4058a0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4058a4:	add	x1, x0, #0x933
  4058a8:	ldr	x0, [sp, #152]
  4058ac:	mov	x6, x0
  4058b0:	adrp	x0, 407000 <_fini+0x788>
  4058b4:	add	x5, x0, #0x50
  4058b8:	adrp	x0, 407000 <_fini+0x788>
  4058bc:	add	x4, x0, #0x430
  4058c0:	mov	w3, #0x30c                 	// #780
  4058c4:	mov	x2, x1
  4058c8:	ldr	w1, [sp, #72]
  4058cc:	mov	w0, w7
  4058d0:	bl	401f10 <log_internal_realm@plt>
  4058d4:	b	4058e0 <enumerate_sysv+0x4b0>
  4058d8:	ldr	w0, [sp, #72]
  4058dc:	cmp	w0, #0x0
  4058e0:	mov	w19, #0x0                   	// #0
  4058e4:	b	405aac <enumerate_sysv+0x67c>
  4058e8:	ldr	w0, [sp, #64]
  4058ec:	cmp	w0, #0x0
  4058f0:	b.eq	405978 <enumerate_sysv+0x548>  // b.none
  4058f4:	mov	w0, #0x7                   	// #7
  4058f8:	str	w0, [sp, #80]
  4058fc:	str	wzr, [sp, #84]
  405900:	str	wzr, [sp, #88]
  405904:	ldr	w0, [sp, #88]
  405908:	bl	4020a0 <log_get_max_level_realm@plt>
  40590c:	mov	w1, w0
  405910:	ldr	w0, [sp, #80]
  405914:	and	w0, w0, #0x7
  405918:	cmp	w1, w0
  40591c:	b.lt	405968 <enumerate_sysv+0x538>  // b.tstop
  405920:	ldr	w0, [sp, #88]
  405924:	lsl	w1, w0, #10
  405928:	ldr	w0, [sp, #80]
  40592c:	orr	w7, w1, w0
  405930:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405934:	add	x1, x0, #0x933
  405938:	ldr	x0, [sp, #152]
  40593c:	mov	x6, x0
  405940:	adrp	x0, 407000 <_fini+0x788>
  405944:	add	x5, x0, #0x88
  405948:	adrp	x0, 407000 <_fini+0x788>
  40594c:	add	x4, x0, #0x430
  405950:	mov	w3, #0x30f                 	// #783
  405954:	mov	x2, x1
  405958:	ldr	w1, [sp, #84]
  40595c:	mov	w0, w7
  405960:	bl	401f10 <log_internal_realm@plt>
  405964:	b	405970 <enumerate_sysv+0x540>
  405968:	ldr	w0, [sp, #84]
  40596c:	cmp	w0, #0x0
  405970:	mov	w19, #0x0                   	// #0
  405974:	b	405aac <enumerate_sysv+0x67c>
  405978:	ldr	x0, [sp, #168]
  40597c:	ldr	x3, [x0]
  405980:	ldr	x0, [sp, #176]
  405984:	add	x0, x0, #0x13
  405988:	mov	x2, #0xffffffffffffffff    	// #-1
  40598c:	mov	x1, x0
  405990:	mov	x0, x3
  405994:	bl	401ed0 <path_join_internal@plt>
  405998:	str	x0, [sp, #144]
  40599c:	ldr	x0, [sp, #144]
  4059a0:	cmp	x0, #0x0
  4059a4:	b.ne	4059d0 <enumerate_sysv+0x5a0>  // b.any
  4059a8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4059ac:	add	x1, x0, #0x933
  4059b0:	adrp	x0, 407000 <_fini+0x788>
  4059b4:	add	x3, x0, #0x430
  4059b8:	mov	w2, #0x315                 	// #789
  4059bc:	mov	w0, #0x0                   	// #0
  4059c0:	bl	402080 <log_oom_internal@plt>
  4059c4:	mov	w20, w0
  4059c8:	mov	w19, #0x1                   	// #1
  4059cc:	b	405aac <enumerate_sysv+0x67c>
  4059d0:	mov	x1, #0x50                  	// #80
  4059d4:	mov	x0, #0x1                   	// #1
  4059d8:	bl	401fb0 <calloc@plt>
  4059dc:	str	x0, [sp, #160]
  4059e0:	ldr	x0, [sp, #160]
  4059e4:	cmp	x0, #0x0
  4059e8:	b.ne	405a14 <enumerate_sysv+0x5e4>  // b.any
  4059ec:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4059f0:	add	x1, x0, #0x933
  4059f4:	adrp	x0, 407000 <_fini+0x788>
  4059f8:	add	x3, x0, #0x430
  4059fc:	mov	w2, #0x319                 	// #793
  405a00:	mov	w0, #0x0                   	// #0
  405a04:	bl	402080 <log_oom_internal@plt>
  405a08:	mov	w20, w0
  405a0c:	mov	w19, #0x1                   	// #1
  405a10:	b	405aac <enumerate_sysv+0x67c>
  405a14:	ldr	x0, [sp, #160]
  405a18:	mov	w1, #0xffffffff            	// #-1
  405a1c:	str	w1, [x0, #24]
  405a20:	ldr	x0, [sp, #152]
  405a24:	str	x0, [sp, #184]
  405a28:	str	xzr, [sp, #152]
  405a2c:	ldr	x1, [sp, #184]
  405a30:	ldr	x0, [sp, #160]
  405a34:	str	x1, [x0]
  405a38:	ldr	x0, [sp, #144]
  405a3c:	str	x0, [sp, #192]
  405a40:	str	xzr, [sp, #144]
  405a44:	ldr	x1, [sp, #192]
  405a48:	ldr	x0, [sp, #160]
  405a4c:	str	x1, [x0, #8]
  405a50:	ldr	x0, [sp, #160]
  405a54:	ldr	x0, [x0]
  405a58:	ldr	x1, [sp, #160]
  405a5c:	mov	x2, x1
  405a60:	mov	x1, x0
  405a64:	ldr	x0, [sp, #32]
  405a68:	bl	401f20 <hashmap_put@plt>
  405a6c:	str	w0, [sp, #64]
  405a70:	ldr	w0, [sp, #64]
  405a74:	cmp	w0, #0x0
  405a78:	b.ge	405aa4 <enumerate_sysv+0x674>  // b.tcont
  405a7c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405a80:	add	x1, x0, #0x933
  405a84:	adrp	x0, 407000 <_fini+0x788>
  405a88:	add	x3, x0, #0x430
  405a8c:	mov	w2, #0x321                 	// #801
  405a90:	mov	w0, #0x0                   	// #0
  405a94:	bl	402080 <log_oom_internal@plt>
  405a98:	mov	w20, w0
  405a9c:	mov	w19, #0x1                   	// #1
  405aa0:	b	405aac <enumerate_sysv+0x67c>
  405aa4:	str	xzr, [sp, #160]
  405aa8:	mov	w19, #0x2                   	// #2
  405aac:	add	x0, sp, #0xa0
  405ab0:	bl	40285c <free_sysvstubp>
  405ab4:	cmp	w19, #0x0
  405ab8:	b.eq	405ac8 <enumerate_sysv+0x698>  // b.none
  405abc:	cmp	w19, #0x2
  405ac0:	b.ne	405ad0 <enumerate_sysv+0x6a0>  // b.any
  405ac4:	b	405ad8 <enumerate_sysv+0x6a8>
  405ac8:	mov	w19, #0x0                   	// #0
  405acc:	b	405adc <enumerate_sysv+0x6ac>
  405ad0:	mov	w19, #0x1                   	// #1
  405ad4:	b	405adc <enumerate_sysv+0x6ac>
  405ad8:	mov	w19, #0x2                   	// #2
  405adc:	add	x0, sp, #0x98
  405ae0:	bl	4022a8 <freep>
  405ae4:	cmp	w19, #0x0
  405ae8:	b.eq	405af8 <enumerate_sysv+0x6c8>  // b.none
  405aec:	cmp	w19, #0x2
  405af0:	b.ne	405b00 <enumerate_sysv+0x6d0>  // b.any
  405af4:	b	405b08 <enumerate_sysv+0x6d8>
  405af8:	mov	w19, #0x0                   	// #0
  405afc:	b	405b0c <enumerate_sysv+0x6dc>
  405b00:	mov	w19, #0x1                   	// #1
  405b04:	b	405b0c <enumerate_sysv+0x6dc>
  405b08:	mov	w19, #0x2                   	// #2
  405b0c:	add	x0, sp, #0x90
  405b10:	bl	4022a8 <freep>
  405b14:	cmp	w19, #0x0
  405b18:	b.eq	405b30 <enumerate_sysv+0x700>  // b.none
  405b1c:	cmp	w19, #0x2
  405b20:	b.eq	405b30 <enumerate_sysv+0x700>  // b.none
  405b24:	mov	w19, #0x1                   	// #1
  405b28:	b	405b50 <enumerate_sysv+0x720>
  405b2c:	nop
  405b30:	bl	401e60 <__errno_location@plt>
  405b34:	str	wzr, [x0]
  405b38:	ldr	x0, [sp, #136]
  405b3c:	bl	401d80 <readdir64@plt>
  405b40:	str	x0, [sp, #176]
  405b44:	b	4055b4 <enumerate_sysv+0x184>
  405b48:	nop
  405b4c:	mov	w19, #0x2                   	// #2
  405b50:	add	x0, sp, #0x88
  405b54:	bl	402658 <closedirp>
  405b58:	cmp	w19, #0x0
  405b5c:	b.eq	405b68 <enumerate_sysv+0x738>  // b.none
  405b60:	cmp	w19, #0x2
  405b64:	b.ne	405b94 <enumerate_sysv+0x764>  // b.any
  405b68:	ldr	x0, [sp, #168]
  405b6c:	add	x0, x0, #0x8
  405b70:	str	x0, [sp, #168]
  405b74:	ldr	x0, [sp, #168]
  405b78:	cmp	x0, #0x0
  405b7c:	b.eq	405b90 <enumerate_sysv+0x760>  // b.none
  405b80:	ldr	x0, [sp, #168]
  405b84:	ldr	x0, [x0]
  405b88:	cmp	x0, #0x0
  405b8c:	b.ne	4054e0 <enumerate_sysv+0xb0>  // b.any
  405b90:	mov	w20, #0x0                   	// #0
  405b94:	add	x0, sp, #0x80
  405b98:	bl	4025c0 <strv_freep>
  405b9c:	mov	w1, w20
  405ba0:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  405ba4:	add	x0, x0, #0xb28
  405ba8:	ldr	x2, [sp, #328]
  405bac:	ldr	x0, [x0]
  405bb0:	eor	x0, x2, x0
  405bb4:	cmp	x0, #0x0
  405bb8:	b.eq	405bc0 <enumerate_sysv+0x790>  // b.none
  405bbc:	bl	401eb0 <__stack_chk_fail@plt>
  405bc0:	mov	w0, w1
  405bc4:	ldp	x19, x20, [sp, #16]
  405bc8:	ldp	x29, x30, [sp], #336
  405bcc:	ret

0000000000405bd0 <set_dependencies_from_rcnd>:
  405bd0:	sub	sp, sp, #0x100
  405bd4:	stp	x29, x30, [sp, #16]
  405bd8:	add	x29, sp, #0x10
  405bdc:	str	x19, [sp, #32]
  405be0:	str	x0, [sp, #56]
  405be4:	str	x1, [sp, #48]
  405be8:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  405bec:	add	x0, x0, #0xb28
  405bf0:	ldr	x1, [x0]
  405bf4:	str	x1, [sp, #248]
  405bf8:	mov	x1, #0x0                   	// #0
  405bfc:	stp	xzr, xzr, [sp, #208]
  405c00:	stp	xzr, xzr, [sp, #224]
  405c04:	str	xzr, [sp, #240]
  405c08:	str	xzr, [sp, #136]
  405c0c:	ldr	x0, [sp, #56]
  405c10:	cmp	x0, #0x0
  405c14:	cset	w0, eq  // eq = none
  405c18:	and	w0, w0, #0xff
  405c1c:	and	x0, x0, #0xff
  405c20:	cmp	x0, #0x0
  405c24:	b.eq	405c50 <set_dependencies_from_rcnd+0x80>  // b.none
  405c28:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405c2c:	add	x1, x0, #0x933
  405c30:	adrp	x0, 407000 <_fini+0x788>
  405c34:	add	x4, x0, #0x440
  405c38:	mov	w3, #0x333                 	// #819
  405c3c:	mov	x2, x1
  405c40:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405c44:	add	x1, x0, #0xfa8
  405c48:	mov	w0, #0x0                   	// #0
  405c4c:	bl	401d70 <log_assert_failed_realm@plt>
  405c50:	add	x0, sp, #0x88
  405c54:	mov	x2, x0
  405c58:	adrp	x0, 407000 <_fini+0x788>
  405c5c:	add	x1, x0, #0xb8
  405c60:	adrp	x0, 407000 <_fini+0x788>
  405c64:	add	x0, x0, #0xd0
  405c68:	bl	4051c4 <acquire_search_path>
  405c6c:	str	w0, [sp, #80]
  405c70:	ldr	w0, [sp, #80]
  405c74:	cmp	w0, #0x0
  405c78:	b.ge	405c84 <set_dependencies_from_rcnd+0xb4>  // b.tcont
  405c7c:	ldr	w19, [sp, #80]
  405c80:	b	40639c <set_dependencies_from_rcnd+0x7cc>
  405c84:	ldr	x0, [sp, #136]
  405c88:	str	x0, [sp, #176]
  405c8c:	b	406234 <set_dependencies_from_rcnd+0x664>
  405c90:	str	wzr, [sp, #76]
  405c94:	b	40621c <set_dependencies_from_rcnd+0x64c>
  405c98:	str	xzr, [sp, #152]
  405c9c:	str	xzr, [sp, #160]
  405ca0:	ldr	x0, [sp, #176]
  405ca4:	ldr	x3, [x0]
  405ca8:	adrp	x0, 407000 <_fini+0x788>
  405cac:	add	x1, x0, #0x230
  405cb0:	ldr	w0, [sp, #76]
  405cb4:	lsl	x0, x0, #4
  405cb8:	add	x0, x1, x0
  405cbc:	ldr	x0, [x0]
  405cc0:	mov	x2, #0xffffffffffffffff    	// #-1
  405cc4:	mov	x1, x0
  405cc8:	mov	x0, x3
  405ccc:	bl	401ed0 <path_join_internal@plt>
  405cd0:	str	x0, [sp, #160]
  405cd4:	ldr	x0, [sp, #160]
  405cd8:	cmp	x0, #0x0
  405cdc:	b.ne	405d08 <set_dependencies_from_rcnd+0x138>  // b.any
  405ce0:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405ce4:	add	x1, x0, #0x933
  405ce8:	adrp	x0, 407000 <_fini+0x788>
  405cec:	add	x3, x0, #0x460
  405cf0:	mov	w2, #0x342                 	// #834
  405cf4:	mov	w0, #0x0                   	// #0
  405cf8:	bl	402080 <log_oom_internal@plt>
  405cfc:	str	w0, [sp, #80]
  405d00:	mov	w19, #0x0                   	// #0
  405d04:	b	4061cc <set_dependencies_from_rcnd+0x5fc>
  405d08:	ldr	x0, [sp, #160]
  405d0c:	bl	401f80 <opendir@plt>
  405d10:	str	x0, [sp, #152]
  405d14:	ldr	x0, [sp, #152]
  405d18:	cmp	x0, #0x0
  405d1c:	b.ne	405dbc <set_dependencies_from_rcnd+0x1ec>  // b.any
  405d20:	bl	401e60 <__errno_location@plt>
  405d24:	ldr	w0, [x0]
  405d28:	cmp	w0, #0x2
  405d2c:	b.eq	405db4 <set_dependencies_from_rcnd+0x1e4>  // b.none
  405d30:	mov	w0, #0x4                   	// #4
  405d34:	str	w0, [sp, #124]
  405d38:	bl	401e60 <__errno_location@plt>
  405d3c:	ldr	w0, [x0]
  405d40:	str	w0, [sp, #128]
  405d44:	str	wzr, [sp, #132]
  405d48:	ldr	w0, [sp, #132]
  405d4c:	bl	4020a0 <log_get_max_level_realm@plt>
  405d50:	mov	w1, w0
  405d54:	ldr	w0, [sp, #124]
  405d58:	and	w0, w0, #0x7
  405d5c:	cmp	w1, w0
  405d60:	b.lt	405dac <set_dependencies_from_rcnd+0x1dc>  // b.tstop
  405d64:	ldr	w0, [sp, #132]
  405d68:	lsl	w1, w0, #10
  405d6c:	ldr	w0, [sp, #124]
  405d70:	orr	w7, w1, w0
  405d74:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405d78:	add	x1, x0, #0x933
  405d7c:	ldr	x0, [sp, #160]
  405d80:	mov	x6, x0
  405d84:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405d88:	add	x5, x0, #0xfd8
  405d8c:	adrp	x0, 407000 <_fini+0x788>
  405d90:	add	x4, x0, #0x460
  405d94:	mov	w3, #0x349                 	// #841
  405d98:	mov	x2, x1
  405d9c:	ldr	w1, [sp, #128]
  405da0:	mov	w0, w7
  405da4:	bl	401f10 <log_internal_realm@plt>
  405da8:	b	405db4 <set_dependencies_from_rcnd+0x1e4>
  405dac:	ldr	w0, [sp, #128]
  405db0:	cmp	w0, #0x0
  405db4:	mov	w19, #0x1                   	// #1
  405db8:	b	4061cc <set_dependencies_from_rcnd+0x5fc>
  405dbc:	bl	401e60 <__errno_location@plt>
  405dc0:	str	wzr, [x0]
  405dc4:	ldr	x0, [sp, #152]
  405dc8:	bl	401d80 <readdir64@plt>
  405dcc:	str	x0, [sp, #184]
  405dd0:	ldr	x0, [sp, #184]
  405dd4:	cmp	x0, #0x0
  405dd8:	b.ne	405e74 <set_dependencies_from_rcnd+0x2a4>  // b.any
  405ddc:	bl	401e60 <__errno_location@plt>
  405de0:	ldr	w0, [x0]
  405de4:	cmp	w0, #0x0
  405de8:	b.le	4061c4 <set_dependencies_from_rcnd+0x5f4>
  405dec:	mov	w0, #0x3                   	// #3
  405df0:	str	w0, [sp, #112]
  405df4:	bl	401e60 <__errno_location@plt>
  405df8:	ldr	w0, [x0]
  405dfc:	str	w0, [sp, #116]
  405e00:	str	wzr, [sp, #120]
  405e04:	ldr	w0, [sp, #120]
  405e08:	bl	4020a0 <log_get_max_level_realm@plt>
  405e0c:	mov	w1, w0
  405e10:	ldr	w0, [sp, #112]
  405e14:	and	w0, w0, #0x7
  405e18:	cmp	w1, w0
  405e1c:	b.lt	405e68 <set_dependencies_from_rcnd+0x298>  // b.tstop
  405e20:	ldr	w0, [sp, #120]
  405e24:	lsl	w1, w0, #10
  405e28:	ldr	w0, [sp, #112]
  405e2c:	orr	w7, w1, w0
  405e30:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405e34:	add	x1, x0, #0x933
  405e38:	ldr	x0, [sp, #160]
  405e3c:	mov	x6, x0
  405e40:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405e44:	add	x5, x0, #0xff8
  405e48:	adrp	x0, 407000 <_fini+0x788>
  405e4c:	add	x4, x0, #0x460
  405e50:	mov	w3, #0x34e                 	// #846
  405e54:	mov	x2, x1
  405e58:	ldr	w1, [sp, #116]
  405e5c:	mov	w0, w7
  405e60:	bl	401f10 <log_internal_realm@plt>
  405e64:	b	4061c4 <set_dependencies_from_rcnd+0x5f4>
  405e68:	ldr	w0, [sp, #116]
  405e6c:	cmp	w0, #0x0
  405e70:	b	4061c4 <set_dependencies_from_rcnd+0x5f4>
  405e74:	ldr	x0, [sp, #184]
  405e78:	add	x0, x0, #0x13
  405e7c:	bl	401cf0 <hidden_or_backup_file@plt>
  405e80:	and	w0, w0, #0xff
  405e84:	cmp	w0, #0x0
  405e88:	b.ne	4061a8 <set_dependencies_from_rcnd+0x5d8>  // b.any
  405e8c:	str	xzr, [sp, #168]
  405e90:	str	xzr, [sp, #192]
  405e94:	ldr	x0, [sp, #184]
  405e98:	ldrb	w0, [x0, #19]
  405e9c:	cmp	w0, #0x53
  405ea0:	b.eq	405eac <set_dependencies_from_rcnd+0x2dc>  // b.none
  405ea4:	mov	w19, #0x0                   	// #0
  405ea8:	b	406158 <set_dependencies_from_rcnd+0x588>
  405eac:	ldr	x0, [sp, #184]
  405eb0:	add	x0, x0, #0x13
  405eb4:	bl	402060 <strlen@plt>
  405eb8:	cmp	x0, #0x3
  405ebc:	b.hi	405ec8 <set_dependencies_from_rcnd+0x2f8>  // b.pmore
  405ec0:	mov	w19, #0x0                   	// #0
  405ec4:	b	406158 <set_dependencies_from_rcnd+0x588>
  405ec8:	ldr	x0, [sp, #184]
  405ecc:	ldrb	w0, [x0, #20]
  405ed0:	bl	401e20 <undecchar@plt>
  405ed4:	str	w0, [sp, #84]
  405ed8:	ldr	x0, [sp, #184]
  405edc:	ldrb	w0, [x0, #21]
  405ee0:	bl	401e20 <undecchar@plt>
  405ee4:	str	w0, [sp, #88]
  405ee8:	ldr	w0, [sp, #84]
  405eec:	cmp	w0, #0x0
  405ef0:	b.lt	405f00 <set_dependencies_from_rcnd+0x330>  // b.tstop
  405ef4:	ldr	w0, [sp, #88]
  405ef8:	cmp	w0, #0x0
  405efc:	b.ge	405f08 <set_dependencies_from_rcnd+0x338>  // b.tcont
  405f00:	mov	w19, #0x0                   	// #0
  405f04:	b	406158 <set_dependencies_from_rcnd+0x588>
  405f08:	ldr	x0, [sp, #176]
  405f0c:	ldr	x3, [x0]
  405f10:	ldr	x0, [sp, #184]
  405f14:	add	x0, x0, #0x13
  405f18:	mov	x2, #0xffffffffffffffff    	// #-1
  405f1c:	mov	x1, x0
  405f20:	mov	x0, x3
  405f24:	bl	401ed0 <path_join_internal@plt>
  405f28:	str	x0, [sp, #192]
  405f2c:	ldr	x0, [sp, #192]
  405f30:	cmp	x0, #0x0
  405f34:	b.ne	405f60 <set_dependencies_from_rcnd+0x390>  // b.any
  405f38:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405f3c:	add	x1, x0, #0x933
  405f40:	adrp	x0, 407000 <_fini+0x788>
  405f44:	add	x3, x0, #0x460
  405f48:	mov	w2, #0x360                 	// #864
  405f4c:	mov	w0, #0x0                   	// #0
  405f50:	bl	402080 <log_oom_internal@plt>
  405f54:	str	w0, [sp, #80]
  405f58:	mov	w19, #0x1                   	// #1
  405f5c:	b	406158 <set_dependencies_from_rcnd+0x588>
  405f60:	ldr	x0, [sp, #184]
  405f64:	add	x0, x0, #0x13
  405f68:	add	x0, x0, #0x3
  405f6c:	bl	4034a0 <sysv_translate_name>
  405f70:	str	x0, [sp, #168]
  405f74:	ldr	x0, [sp, #168]
  405f78:	cmp	x0, #0x0
  405f7c:	b.ne	405fa8 <set_dependencies_from_rcnd+0x3d8>  // b.any
  405f80:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  405f84:	add	x1, x0, #0x933
  405f88:	adrp	x0, 407000 <_fini+0x788>
  405f8c:	add	x3, x0, #0x460
  405f90:	mov	w2, #0x366                 	// #870
  405f94:	mov	w0, #0x0                   	// #0
  405f98:	bl	402080 <log_oom_internal@plt>
  405f9c:	str	w0, [sp, #80]
  405fa0:	mov	w19, #0x1                   	// #1
  405fa4:	b	406158 <set_dependencies_from_rcnd+0x588>
  405fa8:	ldr	x0, [sp, #168]
  405fac:	mov	x1, x0
  405fb0:	ldr	x0, [sp, #48]
  405fb4:	bl	402518 <hashmap_get>
  405fb8:	str	x0, [sp, #144]
  405fbc:	ldr	x0, [sp, #144]
  405fc0:	cmp	x0, #0x0
  405fc4:	b.ne	406070 <set_dependencies_from_rcnd+0x4a0>  // b.any
  405fc8:	mov	w0, #0x7                   	// #7
  405fcc:	str	w0, [sp, #100]
  405fd0:	str	wzr, [sp, #104]
  405fd4:	str	wzr, [sp, #108]
  405fd8:	ldr	w0, [sp, #108]
  405fdc:	bl	4020a0 <log_get_max_level_realm@plt>
  405fe0:	mov	w1, w0
  405fe4:	ldr	w0, [sp, #100]
  405fe8:	and	w0, w0, #0x7
  405fec:	cmp	w1, w0
  405ff0:	b.lt	406060 <set_dependencies_from_rcnd+0x490>  // b.tstop
  405ff4:	ldr	w0, [sp, #108]
  405ff8:	lsl	w1, w0, #10
  405ffc:	ldr	w0, [sp, #100]
  406000:	orr	w8, w1, w0
  406004:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406008:	add	x2, x0, #0x933
  40600c:	ldr	x0, [sp, #184]
  406010:	add	x3, x0, #0x13
  406014:	adrp	x0, 407000 <_fini+0x788>
  406018:	add	x1, x0, #0x230
  40601c:	ldr	w0, [sp, #76]
  406020:	lsl	x0, x0, #4
  406024:	add	x0, x1, x0
  406028:	ldr	x1, [x0]
  40602c:	ldr	x0, [sp, #168]
  406030:	str	x0, [sp]
  406034:	mov	x7, x1
  406038:	mov	x6, x3
  40603c:	adrp	x0, 407000 <_fini+0x788>
  406040:	add	x5, x0, #0xe0
  406044:	adrp	x0, 407000 <_fini+0x788>
  406048:	add	x4, x0, #0x460
  40604c:	mov	w3, #0x36c                 	// #876
  406050:	ldr	w1, [sp, #104]
  406054:	mov	w0, w8
  406058:	bl	401f10 <log_internal_realm@plt>
  40605c:	b	406068 <set_dependencies_from_rcnd+0x498>
  406060:	ldr	w0, [sp, #104]
  406064:	cmp	w0, #0x0
  406068:	mov	w19, #0x0                   	// #0
  40606c:	b	406158 <set_dependencies_from_rcnd+0x588>
  406070:	ldr	w1, [sp, #84]
  406074:	mov	w0, w1
  406078:	lsl	w0, w0, #2
  40607c:	add	w0, w0, w1
  406080:	lsl	w0, w0, #1
  406084:	mov	w1, w0
  406088:	ldr	w0, [sp, #88]
  40608c:	add	w0, w0, w1
  406090:	str	w0, [sp, #92]
  406094:	ldr	x0, [sp, #144]
  406098:	ldr	w0, [x0, #24]
  40609c:	str	w0, [sp, #96]
  4060a0:	ldr	w0, [sp, #92]
  4060a4:	ldr	w2, [sp, #96]
  4060a8:	ldr	w1, [sp, #96]
  4060ac:	cmp	w2, w0
  4060b0:	csel	w1, w1, w0, ge  // ge = tcont
  4060b4:	ldr	x0, [sp, #144]
  4060b8:	str	w1, [x0, #24]
  4060bc:	add	x1, sp, #0xd0
  4060c0:	ldr	w0, [sp, #76]
  4060c4:	lsl	x0, x0, #3
  4060c8:	add	x0, x1, x0
  4060cc:	mov	x1, #0x0                   	// #0
  4060d0:	bl	401c40 <internal_set_ensure_allocated@plt>
  4060d4:	str	w0, [sp, #80]
  4060d8:	ldr	w0, [sp, #80]
  4060dc:	cmp	w0, #0x0
  4060e0:	b.ge	406108 <set_dependencies_from_rcnd+0x538>  // b.tcont
  4060e4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4060e8:	add	x1, x0, #0x933
  4060ec:	adrp	x0, 407000 <_fini+0x788>
  4060f0:	add	x3, x0, #0x460
  4060f4:	mov	w2, #0x374                 	// #884
  4060f8:	mov	w0, #0x0                   	// #0
  4060fc:	bl	402080 <log_oom_internal@plt>
  406100:	mov	w19, #0x1                   	// #1
  406104:	b	406158 <set_dependencies_from_rcnd+0x588>
  406108:	ldr	w0, [sp, #76]
  40610c:	lsl	x0, x0, #3
  406110:	add	x1, sp, #0xd0
  406114:	ldr	x0, [x1, x0]
  406118:	ldr	x1, [sp, #144]
  40611c:	bl	402050 <set_put@plt>
  406120:	str	w0, [sp, #80]
  406124:	ldr	w0, [sp, #80]
  406128:	cmp	w0, #0x0
  40612c:	b.ge	406154 <set_dependencies_from_rcnd+0x584>  // b.tcont
  406130:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406134:	add	x1, x0, #0x933
  406138:	adrp	x0, 407000 <_fini+0x788>
  40613c:	add	x3, x0, #0x460
  406140:	mov	w2, #0x37a                 	// #890
  406144:	mov	w0, #0x0                   	// #0
  406148:	bl	402080 <log_oom_internal@plt>
  40614c:	mov	w19, #0x1                   	// #1
  406150:	b	406158 <set_dependencies_from_rcnd+0x588>
  406154:	mov	w19, #0x2                   	// #2
  406158:	add	x0, sp, #0xc0
  40615c:	bl	4022a8 <freep>
  406160:	cmp	w19, #0x0
  406164:	b.eq	406174 <set_dependencies_from_rcnd+0x5a4>  // b.none
  406168:	cmp	w19, #0x2
  40616c:	b.ne	40617c <set_dependencies_from_rcnd+0x5ac>  // b.any
  406170:	b	406184 <set_dependencies_from_rcnd+0x5b4>
  406174:	mov	w19, #0x0                   	// #0
  406178:	b	406188 <set_dependencies_from_rcnd+0x5b8>
  40617c:	mov	w19, #0x1                   	// #1
  406180:	b	406188 <set_dependencies_from_rcnd+0x5b8>
  406184:	mov	w19, #0x2                   	// #2
  406188:	add	x0, sp, #0xa8
  40618c:	bl	4022a8 <freep>
  406190:	cmp	w19, #0x0
  406194:	b.eq	4061ac <set_dependencies_from_rcnd+0x5dc>  // b.none
  406198:	cmp	w19, #0x2
  40619c:	b.eq	4061ac <set_dependencies_from_rcnd+0x5dc>  // b.none
  4061a0:	mov	w19, #0x0                   	// #0
  4061a4:	b	4061cc <set_dependencies_from_rcnd+0x5fc>
  4061a8:	nop
  4061ac:	bl	401e60 <__errno_location@plt>
  4061b0:	str	wzr, [x0]
  4061b4:	ldr	x0, [sp, #152]
  4061b8:	bl	401d80 <readdir64@plt>
  4061bc:	str	x0, [sp, #184]
  4061c0:	b	405dd0 <set_dependencies_from_rcnd+0x200>
  4061c4:	nop
  4061c8:	mov	w19, #0x2                   	// #2
  4061cc:	add	x0, sp, #0xa0
  4061d0:	bl	4022a8 <freep>
  4061d4:	cmp	w19, #0x0
  4061d8:	b.eq	4061e8 <set_dependencies_from_rcnd+0x618>  // b.none
  4061dc:	cmp	w19, #0x2
  4061e0:	b.ne	4061f0 <set_dependencies_from_rcnd+0x620>  // b.any
  4061e4:	b	4061f8 <set_dependencies_from_rcnd+0x628>
  4061e8:	mov	w19, #0x0                   	// #0
  4061ec:	b	4061fc <set_dependencies_from_rcnd+0x62c>
  4061f0:	mov	w19, #0x1                   	// #1
  4061f4:	b	4061fc <set_dependencies_from_rcnd+0x62c>
  4061f8:	mov	w19, #0x2                   	// #2
  4061fc:	add	x0, sp, #0x98
  406200:	bl	402658 <closedirp>
  406204:	cmp	w19, #0x0
  406208:	b.eq	406364 <set_dependencies_from_rcnd+0x794>  // b.none
  40620c:	cmp	w19, #0x2
  406210:	ldr	w0, [sp, #76]
  406214:	add	w0, w0, #0x1
  406218:	str	w0, [sp, #76]
  40621c:	ldr	w0, [sp, #76]
  406220:	cmp	w0, #0x4
  406224:	b.ls	405c98 <set_dependencies_from_rcnd+0xc8>  // b.plast
  406228:	ldr	x0, [sp, #176]
  40622c:	add	x0, x0, #0x8
  406230:	str	x0, [sp, #176]
  406234:	ldr	x0, [sp, #176]
  406238:	cmp	x0, #0x0
  40623c:	b.eq	406250 <set_dependencies_from_rcnd+0x680>  // b.none
  406240:	ldr	x0, [sp, #176]
  406244:	ldr	x0, [x0]
  406248:	cmp	x0, #0x0
  40624c:	b.ne	405c90 <set_dependencies_from_rcnd+0xc0>  // b.any
  406250:	str	wzr, [sp, #76]
  406254:	b	406354 <set_dependencies_from_rcnd+0x784>
  406258:	mov	w0, #0xfffffffe            	// #-2
  40625c:	str	w0, [sp, #192]
  406260:	str	xzr, [sp, #200]
  406264:	b	406320 <set_dependencies_from_rcnd+0x750>
  406268:	ldr	x0, [sp, #144]
  40626c:	add	x2, x0, #0x28
  406270:	adrp	x0, 407000 <_fini+0x788>
  406274:	add	x1, x0, #0x230
  406278:	ldr	w0, [sp, #76]
  40627c:	lsl	x0, x0, #4
  406280:	add	x0, x1, x0
  406284:	ldr	x0, [x0, #8]
  406288:	mov	x1, x0
  40628c:	mov	x0, x2
  406290:	bl	401e80 <strv_extend@plt>
  406294:	str	w0, [sp, #80]
  406298:	ldr	w0, [sp, #80]
  40629c:	cmp	w0, #0x0
  4062a0:	b.ge	4062c4 <set_dependencies_from_rcnd+0x6f4>  // b.tcont
  4062a4:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4062a8:	add	x1, x0, #0x933
  4062ac:	adrp	x0, 407000 <_fini+0x788>
  4062b0:	add	x3, x0, #0x460
  4062b4:	mov	w2, #0x385                 	// #901
  4062b8:	mov	w0, #0x0                   	// #0
  4062bc:	bl	402080 <log_oom_internal@plt>
  4062c0:	b	406364 <set_dependencies_from_rcnd+0x794>
  4062c4:	ldr	x0, [sp, #144]
  4062c8:	add	x2, x0, #0x40
  4062cc:	adrp	x0, 407000 <_fini+0x788>
  4062d0:	add	x1, x0, #0x230
  4062d4:	ldr	w0, [sp, #76]
  4062d8:	lsl	x0, x0, #4
  4062dc:	add	x0, x1, x0
  4062e0:	ldr	x0, [x0, #8]
  4062e4:	mov	x1, x0
  4062e8:	mov	x0, x2
  4062ec:	bl	401e80 <strv_extend@plt>
  4062f0:	str	w0, [sp, #80]
  4062f4:	ldr	w0, [sp, #80]
  4062f8:	cmp	w0, #0x0
  4062fc:	b.ge	406320 <set_dependencies_from_rcnd+0x750>  // b.tcont
  406300:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406304:	add	x1, x0, #0x933
  406308:	adrp	x0, 407000 <_fini+0x788>
  40630c:	add	x3, x0, #0x460
  406310:	mov	w2, #0x38a                 	// #906
  406314:	mov	w0, #0x0                   	// #0
  406318:	bl	402080 <log_oom_internal@plt>
  40631c:	b	406364 <set_dependencies_from_rcnd+0x794>
  406320:	ldr	w0, [sp, #76]
  406324:	lsl	x0, x0, #3
  406328:	add	x1, sp, #0xd0
  40632c:	ldr	x0, [x1, x0]
  406330:	add	x2, sp, #0x90
  406334:	add	x1, sp, #0xc0
  406338:	bl	401de0 <set_iterate@plt>
  40633c:	and	w0, w0, #0xff
  406340:	cmp	w0, #0x0
  406344:	b.ne	406268 <set_dependencies_from_rcnd+0x698>  // b.any
  406348:	ldr	w0, [sp, #76]
  40634c:	add	w0, w0, #0x1
  406350:	str	w0, [sp, #76]
  406354:	ldr	w0, [sp, #76]
  406358:	cmp	w0, #0x4
  40635c:	b.ls	406258 <set_dependencies_from_rcnd+0x688>  // b.plast
  406360:	str	wzr, [sp, #80]
  406364:	str	wzr, [sp, #76]
  406368:	b	40638c <set_dependencies_from_rcnd+0x7bc>
  40636c:	ldr	w0, [sp, #76]
  406370:	lsl	x0, x0, #3
  406374:	add	x1, sp, #0xd0
  406378:	ldr	x0, [x1, x0]
  40637c:	bl	40277c <set_free>
  406380:	ldr	w0, [sp, #76]
  406384:	add	w0, w0, #0x1
  406388:	str	w0, [sp, #76]
  40638c:	ldr	w0, [sp, #76]
  406390:	cmp	w0, #0x4
  406394:	b.ls	40636c <set_dependencies_from_rcnd+0x79c>  // b.plast
  406398:	ldr	w19, [sp, #80]
  40639c:	add	x0, sp, #0x88
  4063a0:	bl	4025c0 <strv_freep>
  4063a4:	mov	w1, w19
  4063a8:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4063ac:	add	x0, x0, #0xb28
  4063b0:	ldr	x2, [sp, #248]
  4063b4:	ldr	x0, [x0]
  4063b8:	eor	x0, x2, x0
  4063bc:	cmp	x0, #0x0
  4063c0:	b.eq	4063c8 <set_dependencies_from_rcnd+0x7f8>  // b.none
  4063c4:	bl	401eb0 <__stack_chk_fail@plt>
  4063c8:	mov	w0, w1
  4063cc:	ldr	x19, [sp, #32]
  4063d0:	ldp	x29, x30, [sp, #16]
  4063d4:	add	sp, sp, #0x100
  4063d8:	ret

00000000004063dc <run>:
  4063dc:	stp	x29, x30, [sp, #-224]!
  4063e0:	mov	x29, sp
  4063e4:	str	x19, [sp, #16]
  4063e8:	str	x0, [sp, #56]
  4063ec:	str	x1, [sp, #48]
  4063f0:	str	x2, [sp, #40]
  4063f4:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  4063f8:	add	x0, x0, #0xb28
  4063fc:	ldr	x1, [x0]
  406400:	str	x1, [sp, #216]
  406404:	mov	x1, #0x0                   	// #0
  406408:	str	xzr, [sp, #80]
  40640c:	stp	xzr, xzr, [sp, #112]
  406410:	stp	xzr, xzr, [sp, #128]
  406414:	stp	xzr, xzr, [sp, #144]
  406418:	stp	xzr, xzr, [sp, #160]
  40641c:	stp	xzr, xzr, [sp, #176]
  406420:	stp	xzr, xzr, [sp, #192]
  406424:	str	xzr, [sp, #208]
  406428:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  40642c:	add	x0, x0, #0x10
  406430:	ldr	x1, [sp, #40]
  406434:	str	x1, [x0]
  406438:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  40643c:	add	x0, x0, #0x10
  406440:	ldr	x0, [x0]
  406444:	cmp	x0, #0x0
  406448:	cset	w0, eq  // eq = none
  40644c:	and	w0, w0, #0xff
  406450:	and	x0, x0, #0xff
  406454:	cmp	x0, #0x0
  406458:	b.eq	406484 <run+0xa8>  // b.none
  40645c:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406460:	add	x1, x0, #0x933
  406464:	adrp	x0, 407000 <_fini+0x788>
  406468:	add	x4, x0, #0x480
  40646c:	mov	w3, #0x39f                 	// #927
  406470:	mov	x2, x1
  406474:	adrp	x0, 407000 <_fini+0x788>
  406478:	add	x1, x0, #0x110
  40647c:	mov	w0, #0x0                   	// #0
  406480:	bl	401d70 <log_assert_failed_realm@plt>
  406484:	add	x0, sp, #0x70
  406488:	mov	x3, #0x0                   	// #0
  40648c:	mov	w2, #0x1                   	// #1
  406490:	mov	w1, #0x0                   	// #0
  406494:	bl	401f00 <lookup_paths_init@plt>
  406498:	str	w0, [sp, #64]
  40649c:	ldr	w0, [sp, #64]
  4064a0:	cmp	w0, #0x0
  4064a4:	b.ge	406534 <run+0x158>  // b.tcont
  4064a8:	mov	w0, #0x3                   	// #3
  4064ac:	str	w0, [sp, #68]
  4064b0:	ldr	w0, [sp, #64]
  4064b4:	str	w0, [sp, #72]
  4064b8:	str	wzr, [sp, #76]
  4064bc:	ldr	w0, [sp, #76]
  4064c0:	bl	4020a0 <log_get_max_level_realm@plt>
  4064c4:	mov	w1, w0
  4064c8:	ldr	w0, [sp, #68]
  4064cc:	and	w0, w0, #0x7
  4064d0:	cmp	w1, w0
  4064d4:	b.lt	40651c <run+0x140>  // b.tstop
  4064d8:	ldr	w0, [sp, #76]
  4064dc:	lsl	w1, w0, #10
  4064e0:	ldr	w0, [sp, #68]
  4064e4:	orr	w6, w1, w0
  4064e8:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  4064ec:	add	x1, x0, #0x933
  4064f0:	adrp	x0, 407000 <_fini+0x788>
  4064f4:	add	x5, x0, #0x128
  4064f8:	adrp	x0, 407000 <_fini+0x788>
  4064fc:	add	x4, x0, #0x488
  406500:	mov	w3, #0x3a3                 	// #931
  406504:	mov	x2, x1
  406508:	ldr	w1, [sp, #72]
  40650c:	mov	w0, w6
  406510:	bl	401f10 <log_internal_realm@plt>
  406514:	mov	w19, w0
  406518:	b	40663c <run+0x260>
  40651c:	ldr	w0, [sp, #72]
  406520:	cmp	w0, #0x0
  406524:	cneg	w0, w0, lt  // lt = tstop
  406528:	and	w0, w0, #0xff
  40652c:	neg	w19, w0
  406530:	b	40663c <run+0x260>
  406534:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  406538:	add	x0, x0, #0xb30
  40653c:	bl	401ea0 <internal_hashmap_new@plt>
  406540:	str	x0, [sp, #80]
  406544:	ldr	x0, [sp, #80]
  406548:	cmp	x0, #0x0
  40654c:	b.ne	406574 <run+0x198>  // b.any
  406550:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406554:	add	x1, x0, #0x933
  406558:	adrp	x0, 407000 <_fini+0x788>
  40655c:	add	x3, x0, #0x488
  406560:	mov	w2, #0x3a7                 	// #935
  406564:	mov	w0, #0x0                   	// #0
  406568:	bl	402080 <log_oom_internal@plt>
  40656c:	mov	w19, w0
  406570:	b	40663c <run+0x260>
  406574:	ldr	x1, [sp, #80]
  406578:	add	x0, sp, #0x70
  40657c:	bl	405430 <enumerate_sysv>
  406580:	str	w0, [sp, #64]
  406584:	ldr	w0, [sp, #64]
  406588:	cmp	w0, #0x0
  40658c:	b.ge	406598 <run+0x1bc>  // b.tcont
  406590:	ldr	w19, [sp, #64]
  406594:	b	40663c <run+0x260>
  406598:	ldr	x1, [sp, #80]
  40659c:	add	x0, sp, #0x70
  4065a0:	bl	405bd0 <set_dependencies_from_rcnd>
  4065a4:	str	w0, [sp, #64]
  4065a8:	ldr	w0, [sp, #64]
  4065ac:	cmp	w0, #0x0
  4065b0:	b.ge	4065bc <run+0x1e0>  // b.tcont
  4065b4:	ldr	w19, [sp, #64]
  4065b8:	b	40663c <run+0x260>
  4065bc:	mov	w0, #0xfffffffe            	// #-2
  4065c0:	str	w0, [sp, #96]
  4065c4:	str	xzr, [sp, #104]
  4065c8:	b	4065d4 <run+0x1f8>
  4065cc:	ldr	x0, [sp, #88]
  4065d0:	bl	4043dc <load_sysv>
  4065d4:	ldr	x0, [sp, #80]
  4065d8:	add	x2, sp, #0x58
  4065dc:	add	x1, sp, #0x60
  4065e0:	mov	x3, #0x0                   	// #0
  4065e4:	bl	402564 <hashmap_iterate>
  4065e8:	and	w0, w0, #0xff
  4065ec:	cmp	w0, #0x0
  4065f0:	b.ne	4065cc <run+0x1f0>  // b.any
  4065f4:	mov	w0, #0xfffffffe            	// #-2
  4065f8:	str	w0, [sp, #96]
  4065fc:	str	xzr, [sp, #104]
  406600:	b	406618 <run+0x23c>
  406604:	ldr	x0, [sp, #88]
  406608:	ldr	x1, [sp, #80]
  40660c:	bl	404f80 <fix_order>
  406610:	ldr	x0, [sp, #88]
  406614:	bl	402bd4 <generate_unit_file>
  406618:	ldr	x0, [sp, #80]
  40661c:	add	x2, sp, #0x58
  406620:	add	x1, sp, #0x60
  406624:	mov	x3, #0x0                   	// #0
  406628:	bl	402564 <hashmap_iterate>
  40662c:	and	w0, w0, #0xff
  406630:	cmp	w0, #0x0
  406634:	b.ne	406604 <run+0x228>  // b.any
  406638:	mov	w19, #0x0                   	// #0
  40663c:	add	x0, sp, #0x70
  406640:	bl	401c90 <lookup_paths_free@plt>
  406644:	add	x0, sp, #0x50
  406648:	bl	402890 <free_sysvstub_hashmapp>
  40664c:	mov	w1, w19
  406650:	adrp	x0, 418000 <__FRAME_END__+0x103a4>
  406654:	add	x0, x0, #0xb28
  406658:	ldr	x2, [sp, #216]
  40665c:	ldr	x0, [x0]
  406660:	eor	x0, x2, x0
  406664:	cmp	x0, #0x0
  406668:	b.eq	406670 <run+0x294>  // b.none
  40666c:	bl	401eb0 <__stack_chk_fail@plt>
  406670:	mov	w0, w1
  406674:	ldr	x19, [sp, #16]
  406678:	ldp	x29, x30, [sp], #224
  40667c:	ret

0000000000406680 <main>:
  406680:	stp	x29, x30, [sp, #-48]!
  406684:	mov	x29, sp
  406688:	str	w0, [sp, #28]
  40668c:	str	x1, [sp, #16]
  406690:	ldr	x1, [sp, #16]
  406694:	ldr	w0, [sp, #28]
  406698:	bl	4024bc <save_argc_argv>
  40669c:	bl	401e30 <log_setup_generator@plt>
  4066a0:	ldr	w0, [sp, #28]
  4066a4:	cmp	w0, #0x1
  4066a8:	b.le	406744 <main+0xc4>
  4066ac:	ldr	w0, [sp, #28]
  4066b0:	cmp	w0, #0x4
  4066b4:	b.eq	406744 <main+0xc4>  // b.none
  4066b8:	mov	w0, #0x3                   	// #3
  4066bc:	str	w0, [sp, #32]
  4066c0:	mov	w0, #0x16                  	// #22
  4066c4:	movk	w0, #0x4000, lsl #16
  4066c8:	str	w0, [sp, #36]
  4066cc:	str	wzr, [sp, #40]
  4066d0:	ldr	w0, [sp, #40]
  4066d4:	bl	4020a0 <log_get_max_level_realm@plt>
  4066d8:	mov	w1, w0
  4066dc:	ldr	w0, [sp, #32]
  4066e0:	and	w0, w0, #0x7
  4066e4:	cmp	w1, w0
  4066e8:	b.lt	40672c <main+0xac>  // b.tstop
  4066ec:	ldr	w0, [sp, #40]
  4066f0:	lsl	w1, w0, #10
  4066f4:	ldr	w0, [sp, #32]
  4066f8:	orr	w6, w1, w0
  4066fc:	adrp	x0, 406000 <set_dependencies_from_rcnd+0x430>
  406700:	add	x1, x0, #0x933
  406704:	adrp	x0, 407000 <_fini+0x788>
  406708:	add	x5, x0, #0x148
  40670c:	adrp	x0, 407000 <_fini+0x788>
  406710:	add	x4, x0, #0x490
  406714:	mov	w3, #0x3bc                 	// #956
  406718:	mov	x2, x1
  40671c:	ldr	w1, [sp, #36]
  406720:	mov	w0, w6
  406724:	bl	401f10 <log_internal_realm@plt>
  406728:	b	4067c8 <main+0x148>
  40672c:	ldr	w0, [sp, #36]
  406730:	cmp	w0, #0x0
  406734:	cneg	w0, w0, lt  // lt = tstop
  406738:	and	w0, w0, #0xff
  40673c:	neg	w0, w0
  406740:	b	4067c8 <main+0x148>
  406744:	ldr	w0, [sp, #28]
  406748:	cmp	w0, #0x1
  40674c:	b.le	40675c <main+0xdc>
  406750:	ldr	x0, [sp, #16]
  406754:	ldr	x0, [x0, #8]
  406758:	b	406764 <main+0xe4>
  40675c:	adrp	x0, 407000 <_fini+0x788>
  406760:	add	x0, x0, #0x178
  406764:	ldr	w1, [sp, #28]
  406768:	cmp	w1, #0x1
  40676c:	b.le	40677c <main+0xfc>
  406770:	ldr	x1, [sp, #16]
  406774:	ldr	x1, [x1, #16]
  406778:	b	406784 <main+0x104>
  40677c:	adrp	x1, 407000 <_fini+0x788>
  406780:	add	x1, x1, #0x178
  406784:	ldr	w2, [sp, #28]
  406788:	cmp	w2, #0x1
  40678c:	b.le	40679c <main+0x11c>
  406790:	ldr	x2, [sp, #16]
  406794:	ldr	x2, [x2, #24]
  406798:	b	4067a4 <main+0x124>
  40679c:	adrp	x2, 407000 <_fini+0x788>
  4067a0:	add	x2, x2, #0x178
  4067a4:	bl	4063dc <run>
  4067a8:	str	w0, [sp, #44]
  4067ac:	bl	401ee0 <ask_password_agent_close@plt>
  4067b0:	bl	401cc0 <polkit_agent_close@plt>
  4067b4:	bl	401ef0 <pager_close@plt>
  4067b8:	bl	402020 <mac_selinux_finish@plt>
  4067bc:	bl	4026bc <static_destruct>
  4067c0:	ldr	w0, [sp, #44]
  4067c4:	lsr	w0, w0, #31
  4067c8:	ldp	x29, x30, [sp], #48
  4067cc:	ret

00000000004067d0 <__libc_csu_init>:
  4067d0:	stp	x29, x30, [sp, #-64]!
  4067d4:	mov	x29, sp
  4067d8:	stp	x19, x20, [sp, #16]
  4067dc:	adrp	x20, 418000 <__FRAME_END__+0x103a4>
  4067e0:	add	x20, x20, #0xb20
  4067e4:	stp	x21, x22, [sp, #32]
  4067e8:	adrp	x21, 418000 <__FRAME_END__+0x103a4>
  4067ec:	add	x21, x21, #0xb18
  4067f0:	sub	x20, x20, x21
  4067f4:	mov	w22, w0
  4067f8:	stp	x23, x24, [sp, #48]
  4067fc:	mov	x23, x1
  406800:	mov	x24, x2
  406804:	bl	401bc8 <_init>
  406808:	cmp	xzr, x20, asr #3
  40680c:	b.eq	406838 <__libc_csu_init+0x68>  // b.none
  406810:	asr	x20, x20, #3
  406814:	mov	x19, #0x0                   	// #0
  406818:	ldr	x3, [x21, x19, lsl #3]
  40681c:	mov	x2, x24
  406820:	add	x19, x19, #0x1
  406824:	mov	x1, x23
  406828:	mov	w0, w22
  40682c:	blr	x3
  406830:	cmp	x20, x19
  406834:	b.ne	406818 <__libc_csu_init+0x48>  // b.any
  406838:	ldp	x19, x20, [sp, #16]
  40683c:	ldp	x21, x22, [sp, #32]
  406840:	ldp	x23, x24, [sp, #48]
  406844:	ldp	x29, x30, [sp], #64
  406848:	ret
  40684c:	nop

0000000000406850 <__libc_csu_fini>:
  406850:	ret
  406854:	nop

0000000000406858 <fstatat64>:
  406858:	mov	x4, x1
  40685c:	mov	x5, x2
  406860:	mov	w1, w0
  406864:	mov	x2, x4
  406868:	mov	w0, #0x0                   	// #0
  40686c:	mov	w4, w3
  406870:	mov	x3, x5
  406874:	b	401e50 <__fxstatat64@plt>

Disassembly of section .fini:

0000000000406878 <_fini>:
  406878:	stp	x29, x30, [sp, #-16]!
  40687c:	mov	x29, sp
  406880:	ldp	x29, x30, [sp], #16
  406884:	ret
