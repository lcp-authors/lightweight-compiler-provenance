
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401858 <.init>:
  401858:	stp	x29, x30, [sp, #-16]!
  40185c:	mov	x29, sp
  401860:	bl	402730 <ferror@plt+0xa90>
  401864:	ldp	x29, x30, [sp], #16
  401868:	ret

Disassembly of section .plt:

0000000000401870 <mbrtowc@plt-0x20>:
  401870:	stp	x16, x30, [sp, #-16]!
  401874:	adrp	x16, 41b000 <_obstack_memory_used@@Base+0x12788>
  401878:	ldr	x17, [x16, #4088]
  40187c:	add	x16, x16, #0xff8
  401880:	br	x17
  401884:	nop
  401888:	nop
  40188c:	nop

0000000000401890 <mbrtowc@plt>:
  401890:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401894:	ldr	x17, [x16]
  401898:	add	x16, x16, #0x0
  40189c:	br	x17

00000000004018a0 <memcpy@plt>:
  4018a0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018a4:	ldr	x17, [x16, #8]
  4018a8:	add	x16, x16, #0x8
  4018ac:	br	x17

00000000004018b0 <_exit@plt>:
  4018b0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018b4:	ldr	x17, [x16, #16]
  4018b8:	add	x16, x16, #0x10
  4018bc:	br	x17

00000000004018c0 <strlen@plt>:
  4018c0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018c4:	ldr	x17, [x16, #24]
  4018c8:	add	x16, x16, #0x18
  4018cc:	br	x17

00000000004018d0 <exit@plt>:
  4018d0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018d4:	ldr	x17, [x16, #32]
  4018d8:	add	x16, x16, #0x20
  4018dc:	br	x17

00000000004018e0 <error@plt>:
  4018e0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16, #40]
  4018e8:	add	x16, x16, #0x28
  4018ec:	br	x17

00000000004018f0 <sysinfo@plt>:
  4018f0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #48]
  4018f8:	add	x16, x16, #0x30
  4018fc:	br	x17

0000000000401900 <__cxa_atexit@plt>:
  401900:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #56]
  401908:	add	x16, x16, #0x38
  40190c:	br	x17

0000000000401910 <iswcntrl@plt>:
  401910:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #64]
  401918:	add	x16, x16, #0x40
  40191c:	br	x17

0000000000401920 <setvbuf@plt>:
  401920:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #72]
  401928:	add	x16, x16, #0x48
  40192c:	br	x17

0000000000401930 <lseek@plt>:
  401930:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #80]
  401938:	add	x16, x16, #0x50
  40193c:	br	x17

0000000000401940 <__fpending@plt>:
  401940:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #88]
  401948:	add	x16, x16, #0x58
  40194c:	br	x17

0000000000401950 <fileno@plt>:
  401950:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #96]
  401958:	add	x16, x16, #0x60
  40195c:	br	x17

0000000000401960 <fclose@plt>:
  401960:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #104]
  401968:	add	x16, x16, #0x68
  40196c:	br	x17

0000000000401970 <iswspace@plt>:
  401970:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #112]
  401978:	add	x16, x16, #0x70
  40197c:	br	x17

0000000000401980 <nl_langinfo@plt>:
  401980:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #120]
  401988:	add	x16, x16, #0x78
  40198c:	br	x17

0000000000401990 <fopen@plt>:
  401990:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #128]
  401998:	add	x16, x16, #0x80
  40199c:	br	x17

00000000004019a0 <malloc@plt>:
  4019a0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #136]
  4019a8:	add	x16, x16, #0x88
  4019ac:	br	x17

00000000004019b0 <wcwidth@plt>:
  4019b0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #144]
  4019b8:	add	x16, x16, #0x90
  4019bc:	br	x17

00000000004019c0 <getdelim@plt>:
  4019c0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #152]
  4019c8:	add	x16, x16, #0x98
  4019cc:	br	x17

00000000004019d0 <open@plt>:
  4019d0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #160]
  4019d8:	add	x16, x16, #0xa0
  4019dc:	br	x17

00000000004019e0 <strncmp@plt>:
  4019e0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #168]
  4019e8:	add	x16, x16, #0xa8
  4019ec:	br	x17

00000000004019f0 <bindtextdomain@plt>:
  4019f0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #176]
  4019f8:	add	x16, x16, #0xb0
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #184]
  401a08:	add	x16, x16, #0xb8
  401a0c:	br	x17

0000000000401a10 <fgetc@plt>:
  401a10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #192]
  401a18:	add	x16, x16, #0xc0
  401a1c:	br	x17

0000000000401a20 <__printf_chk@plt>:
  401a20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #200]
  401a28:	add	x16, x16, #0xc8
  401a2c:	br	x17

0000000000401a30 <memset@plt>:
  401a30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #208]
  401a38:	add	x16, x16, #0xd0
  401a3c:	br	x17

0000000000401a40 <calloc@plt>:
  401a40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #216]
  401a48:	add	x16, x16, #0xd8
  401a4c:	br	x17

0000000000401a50 <realloc@plt>:
  401a50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #224]
  401a58:	add	x16, x16, #0xe0
  401a5c:	br	x17

0000000000401a60 <getpagesize@plt>:
  401a60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #232]
  401a68:	add	x16, x16, #0xe8
  401a6c:	br	x17

0000000000401a70 <close@plt>:
  401a70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #240]
  401a78:	add	x16, x16, #0xf0
  401a7c:	br	x17

0000000000401a80 <strrchr@plt>:
  401a80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #248]
  401a88:	add	x16, x16, #0xf8
  401a8c:	br	x17

0000000000401a90 <__gmon_start__@plt>:
  401a90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #256]
  401a98:	add	x16, x16, #0x100
  401a9c:	br	x17

0000000000401aa0 <btowc@plt>:
  401aa0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #264]
  401aa8:	add	x16, x16, #0x108
  401aac:	br	x17

0000000000401ab0 <abort@plt>:
  401ab0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #272]
  401ab8:	add	x16, x16, #0x110
  401abc:	br	x17

0000000000401ac0 <posix_fadvise@plt>:
  401ac0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #280]
  401ac8:	add	x16, x16, #0x118
  401acc:	br	x17

0000000000401ad0 <mbsinit@plt>:
  401ad0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #288]
  401ad8:	add	x16, x16, #0x120
  401adc:	br	x17

0000000000401ae0 <__overflow@plt>:
  401ae0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #296]
  401ae8:	add	x16, x16, #0x128
  401aec:	br	x17

0000000000401af0 <feof@plt>:
  401af0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #304]
  401af8:	add	x16, x16, #0x130
  401afc:	br	x17

0000000000401b00 <memcmp@plt>:
  401b00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #312]
  401b08:	add	x16, x16, #0x138
  401b0c:	br	x17

0000000000401b10 <textdomain@plt>:
  401b10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #320]
  401b18:	add	x16, x16, #0x140
  401b1c:	br	x17

0000000000401b20 <getopt_long@plt>:
  401b20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #328]
  401b28:	add	x16, x16, #0x148
  401b2c:	br	x17

0000000000401b30 <__fprintf_chk@plt>:
  401b30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #336]
  401b38:	add	x16, x16, #0x150
  401b3c:	br	x17

0000000000401b40 <strcmp@plt>:
  401b40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #344]
  401b48:	add	x16, x16, #0x158
  401b4c:	br	x17

0000000000401b50 <__ctype_b_loc@plt>:
  401b50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #352]
  401b58:	add	x16, x16, #0x160
  401b5c:	br	x17

0000000000401b60 <fseeko@plt>:
  401b60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #360]
  401b68:	add	x16, x16, #0x168
  401b6c:	br	x17

0000000000401b70 <free@plt>:
  401b70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #368]
  401b78:	add	x16, x16, #0x170
  401b7c:	br	x17

0000000000401b80 <__ctype_get_mb_cur_max@plt>:
  401b80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #376]
  401b88:	add	x16, x16, #0x178
  401b8c:	br	x17

0000000000401b90 <strchr@plt>:
  401b90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #384]
  401b98:	add	x16, x16, #0x180
  401b9c:	br	x17

0000000000401ba0 <fwrite@plt>:
  401ba0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #392]
  401ba8:	add	x16, x16, #0x188
  401bac:	br	x17

0000000000401bb0 <fflush@plt>:
  401bb0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #400]
  401bb8:	add	x16, x16, #0x190
  401bbc:	br	x17

0000000000401bc0 <read@plt>:
  401bc0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #408]
  401bc8:	add	x16, x16, #0x198
  401bcc:	br	x17

0000000000401bd0 <memchr@plt>:
  401bd0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #416]
  401bd8:	add	x16, x16, #0x1a0
  401bdc:	br	x17

0000000000401be0 <sysconf@plt>:
  401be0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #424]
  401be8:	add	x16, x16, #0x1a8
  401bec:	br	x17

0000000000401bf0 <__fxstat@plt>:
  401bf0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #432]
  401bf8:	add	x16, x16, #0x1b0
  401bfc:	br	x17

0000000000401c00 <dcgettext@plt>:
  401c00:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #440]
  401c08:	add	x16, x16, #0x1b8
  401c0c:	br	x17

0000000000401c10 <fputs_unlocked@plt>:
  401c10:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #448]
  401c18:	add	x16, x16, #0x1c0
  401c1c:	br	x17

0000000000401c20 <__freading@plt>:
  401c20:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #456]
  401c28:	add	x16, x16, #0x1c8
  401c2c:	br	x17

0000000000401c30 <iswprint@plt>:
  401c30:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #464]
  401c38:	add	x16, x16, #0x1d0
  401c3c:	br	x17

0000000000401c40 <__assert_fail@plt>:
  401c40:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #472]
  401c48:	add	x16, x16, #0x1d8
  401c4c:	br	x17

0000000000401c50 <__errno_location@plt>:
  401c50:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #480]
  401c58:	add	x16, x16, #0x1e0
  401c5c:	br	x17

0000000000401c60 <getenv@plt>:
  401c60:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #488]
  401c68:	add	x16, x16, #0x1e8
  401c6c:	br	x17

0000000000401c70 <__xstat@plt>:
  401c70:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #496]
  401c78:	add	x16, x16, #0x1f0
  401c7c:	br	x17

0000000000401c80 <__memmove_chk@plt>:
  401c80:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #504]
  401c88:	add	x16, x16, #0x1f8
  401c8c:	br	x17

0000000000401c90 <setlocale@plt>:
  401c90:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #512]
  401c98:	add	x16, x16, #0x200
  401c9c:	br	x17

0000000000401ca0 <ferror@plt>:
  401ca0:	adrp	x16, 41c000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #520]
  401ca8:	add	x16, x16, #0x208
  401cac:	br	x17

Disassembly of section .text:

0000000000401cb0 <_obstack_begin@@Base-0x67b8>:
  401cb0:	sub	sp, sp, #0x230
  401cb4:	stp	x29, x30, [sp]
  401cb8:	mov	x29, sp
  401cbc:	stp	x19, x20, [sp, #16]
  401cc0:	mov	w20, w0
  401cc4:	ldr	x0, [x1]
  401cc8:	stp	x21, x22, [sp, #32]
  401ccc:	adrp	x22, 408000 <ferror@plt+0x6360>
  401cd0:	stp	x23, x24, [sp, #48]
  401cd4:	mov	x23, x1
  401cd8:	add	x22, x22, #0xa90
  401cdc:	stp	x25, x26, [sp, #64]
  401ce0:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x13788>
  401ce4:	add	x19, x24, #0x2d0
  401ce8:	stp	x27, x28, [sp, #80]
  401cec:	bl	403db0 <ferror@plt+0x2110>
  401cf0:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  401cf4:	mov	w0, #0x6                   	// #6
  401cf8:	add	x1, x1, #0xbb0
  401cfc:	bl	401c90 <setlocale@plt>
  401d00:	adrp	x27, 41c000 <_obstack_memory_used@@Base+0x13788>
  401d04:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  401d08:	add	x1, x1, #0x58
  401d0c:	mov	x0, x22
  401d10:	bl	4019f0 <bindtextdomain@plt>
  401d14:	mov	x0, x22
  401d18:	adrp	x22, 409000 <_obstack_memory_used@@Base+0x788>
  401d1c:	bl	401b10 <textdomain@plt>
  401d20:	add	x22, x22, #0x248
  401d24:	adrp	x0, 403000 <ferror@plt+0x1360>
  401d28:	add	x0, x0, #0xa20
  401d2c:	bl	408a38 <_obstack_memory_used@@Base+0x1c0>
  401d30:	adrp	x25, 409000 <_obstack_memory_used@@Base+0x788>
  401d34:	bl	401a60 <getpagesize@plt>
  401d38:	sxtw	x4, w0
  401d3c:	ldr	x0, [x27, #688]
  401d40:	mov	x3, #0x0                   	// #0
  401d44:	mov	w2, #0x1                   	// #1
  401d48:	mov	x1, #0x0                   	// #0
  401d4c:	str	x4, [x19, #16]
  401d50:	add	x25, x25, #0xa0
  401d54:	bl	401920 <setvbuf@plt>
  401d58:	add	x28, x22, #0x78
  401d5c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  401d60:	add	x0, x0, #0x70
  401d64:	bl	401c60 <getenv@plt>
  401d68:	cmp	x0, #0x0
  401d6c:	cset	w0, ne  // ne = any
  401d70:	mov	x21, #0x0                   	// #0
  401d74:	mov	w26, #0x1                   	// #1
  401d78:	strb	wzr, [x24, #720]
  401d7c:	strb	wzr, [x19, #8]
  401d80:	strb	wzr, [x19, #9]
  401d84:	strb	wzr, [x19, #10]
  401d88:	strb	wzr, [x19, #11]
  401d8c:	strb	w0, [x19, #24]
  401d90:	stp	xzr, xzr, [x19, #32]
  401d94:	stp	xzr, xzr, [x19, #48]
  401d98:	str	xzr, [x19, #64]
  401d9c:	nop
  401da0:	mov	x3, x28
  401da4:	mov	x2, x25
  401da8:	mov	x1, x23
  401dac:	mov	w0, w20
  401db0:	mov	x4, #0x0                   	// #0
  401db4:	bl	401b20 <getopt_long@plt>
  401db8:	cmn	w0, #0x1
  401dbc:	b.eq	401e04 <ferror@plt+0x164>  // b.none
  401dc0:	cmp	w0, #0x6c
  401dc4:	b.eq	402104 <ferror@plt+0x464>  // b.none
  401dc8:	b.gt	402074 <ferror@plt+0x3d4>
  401dcc:	cmp	w0, #0x4c
  401dd0:	b.eq	40210c <ferror@plt+0x46c>  // b.none
  401dd4:	b.le	402090 <ferror@plt+0x3f0>
  401dd8:	cmp	w0, #0x63
  401ddc:	b.ne	402618 <ferror@plt+0x978>  // b.any
  401de0:	mov	x3, x28
  401de4:	mov	x2, x25
  401de8:	mov	x1, x23
  401dec:	mov	w0, w20
  401df0:	mov	x4, #0x0                   	// #0
  401df4:	strb	w26, [x19, #10]
  401df8:	bl	401b20 <getopt_long@plt>
  401dfc:	cmn	w0, #0x1
  401e00:	b.ne	401dc0 <ferror@plt+0x120>  // b.any
  401e04:	ldrb	w0, [x24, #720]
  401e08:	cbnz	w0, 401e14 <ferror@plt+0x174>
  401e0c:	ldrb	w0, [x19, #8]
  401e10:	cbz	w0, 4022cc <ferror@plt+0x62c>
  401e14:	adrp	x26, 41c000 <_obstack_memory_used@@Base+0x13788>
  401e18:	ldr	w25, [x26, #680]
  401e1c:	cmp	w20, w25
  401e20:	cbz	x21, 40233c <ferror@plt+0x69c>
  401e24:	b.gt	402624 <ferror@plt+0x984>
  401e28:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  401e2c:	mov	x0, x21
  401e30:	add	x1, x1, #0xf8
  401e34:	bl	401b40 <strcmp@plt>
  401e38:	cbnz	w0, 402400 <ferror@plt+0x760>
  401e3c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  401e40:	ldr	x20, [x0, #696]
  401e44:	mov	x0, x20
  401e48:	add	x27, sp, #0x90
  401e4c:	bl	401950 <fileno@plt>
  401e50:	mov	x2, x27
  401e54:	mov	w1, w0
  401e58:	mov	w0, #0x0                   	// #0
  401e5c:	bl	401bf0 <__fxstat@plt>
  401e60:	cbnz	w0, 401e74 <ferror@plt+0x1d4>
  401e64:	ldr	w0, [sp, #160]
  401e68:	and	w0, w0, #0xf000
  401e6c:	cmp	w0, #0x8, lsl #12
  401e70:	b.eq	40255c <ferror@plt+0x8bc>  // b.none
  401e74:	mov	x0, x20
  401e78:	bl	4038c8 <ferror@plt+0x1c28>
  401e7c:	mov	x23, x0
  401e80:	cbz	x0, 4026a0 <ferror@plt+0xa00>
  401e84:	mov	x0, #0x88                  	// #136
  401e88:	bl	408018 <ferror@plt+0x6378>
  401e8c:	mov	x26, x0
  401e90:	str	wzr, [sp, #140]
  401e94:	mov	w1, #0x1                   	// #1
  401e98:	mov	w0, w1
  401e9c:	mov	x20, #0x0                   	// #0
  401ea0:	str	w1, [x26]
  401ea4:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  401ea8:	add	x1, x1, #0x200
  401eac:	adrp	x28, 409000 <_obstack_memory_used@@Base+0x788>
  401eb0:	str	x1, [sp, #128]
  401eb4:	add	x1, x28, #0xf8
  401eb8:	mov	x24, #0x0                   	// #0
  401ebc:	mov	w25, #0x1                   	// #1
  401ec0:	str	w0, [x19, #4]
  401ec4:	mov	x0, x23
  401ec8:	str	x1, [sp, #112]
  401ecc:	mov	x1, x27
  401ed0:	bl	403900 <ferror@plt+0x1c60>
  401ed4:	mov	x28, x0
  401ed8:	cbz	x0, 401f84 <ferror@plt+0x2e4>
  401edc:	nop
  401ee0:	cbz	x21, 4021bc <ferror@plt+0x51c>
  401ee4:	ldrb	w1, [x21]
  401ee8:	cmp	w1, #0x2d
  401eec:	b.ne	402114 <ferror@plt+0x474>  // b.any
  401ef0:	ldrb	w1, [x21, #1]
  401ef4:	cbnz	w1, 402114 <ferror@plt+0x474>
  401ef8:	ldr	x1, [sp, #112]
  401efc:	bl	401b40 <strcmp@plt>
  401f00:	cbz	w0, 402228 <ferror@plt+0x588>
  401f04:	ldrb	w0, [x28]
  401f08:	cbz	w0, 40211c <ferror@plt+0x47c>
  401f0c:	cbnz	x20, 4021f4 <ferror@plt+0x554>
  401f10:	mov	x2, x26
  401f14:	mov	x0, x28
  401f18:	mov	w1, #0x0                   	// #0
  401f1c:	str	x2, [sp, #120]
  401f20:	bl	4019d0 <open@plt>
  401f24:	cmn	w0, #0x1
  401f28:	ldr	x2, [sp, #120]
  401f2c:	b.eq	4024d8 <ferror@plt+0x838>  // b.none
  401f30:	mov	x1, x28
  401f34:	mov	x3, #0x0                   	// #0
  401f38:	str	w0, [sp, #120]
  401f3c:	bl	4029d8 <ferror@plt+0xd38>
  401f40:	ldr	w6, [sp, #120]
  401f44:	and	w5, w0, #0xff
  401f48:	str	w5, [sp, #120]
  401f4c:	mov	w0, w6
  401f50:	bl	401a70 <close@plt>
  401f54:	ldr	w5, [sp, #120]
  401f58:	cbnz	w0, 4022f8 <ferror@plt+0x658>
  401f5c:	and	w25, w25, w5
  401f60:	cbnz	x20, 401f6c <ferror@plt+0x2cc>
  401f64:	mov	w0, #0x1                   	// #1
  401f68:	str	w0, [x26]
  401f6c:	mov	x1, x27
  401f70:	mov	x0, x23
  401f74:	add	x24, x24, #0x1
  401f78:	bl	403900 <ferror@plt+0x1c60>
  401f7c:	mov	x28, x0
  401f80:	cbnz	x0, 401ee0 <ferror@plt+0x240>
  401f84:	ldr	w0, [sp, #144]
  401f88:	cmp	w0, #0x3
  401f8c:	b.eq	4026a0 <ferror@plt+0xa00>  // b.none
  401f90:	cmp	w0, #0x4
  401f94:	b.ne	402200 <ferror@plt+0x560>  // b.any
  401f98:	bl	401c50 <__errno_location@plt>
  401f9c:	mov	x3, x0
  401fa0:	mov	w2, #0x5                   	// #5
  401fa4:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  401fa8:	mov	x0, #0x0                   	// #0
  401fac:	add	x1, x1, #0x148
  401fb0:	ldr	w22, [x3]
  401fb4:	bl	401c00 <dcgettext@plt>
  401fb8:	mov	x2, x21
  401fbc:	mov	x20, x0
  401fc0:	mov	w1, #0x3                   	// #3
  401fc4:	mov	w0, #0x0                   	// #0
  401fc8:	bl	406790 <ferror@plt+0x4af0>
  401fcc:	mov	w25, #0x0                   	// #0
  401fd0:	mov	x3, x0
  401fd4:	mov	x2, x20
  401fd8:	mov	w1, w22
  401fdc:	mov	w0, #0x0                   	// #0
  401fe0:	bl	4018e0 <error@plt>
  401fe4:	ldr	w0, [sp, #140]
  401fe8:	cbnz	w0, 402294 <ferror@plt+0x5f4>
  401fec:	mov	x0, x23
  401ff0:	bl	4039b0 <ferror@plt+0x1d10>
  401ff4:	cmp	x0, #0x1
  401ff8:	b.ls	402038 <ferror@plt+0x398>  // b.plast
  401ffc:	ldp	x20, x21, [x19, #32]
  402000:	mov	w2, #0x5                   	// #5
  402004:	ldp	x22, x24, [x19, #48]
  402008:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  40200c:	ldr	x27, [x19, #64]
  402010:	add	x1, x1, #0x1d0
  402014:	mov	x0, #0x0                   	// #0
  402018:	bl	401c00 <dcgettext@plt>
  40201c:	mov	x4, x27
  402020:	mov	x5, x0
  402024:	mov	x3, x24
  402028:	mov	x2, x22
  40202c:	mov	x1, x21
  402030:	mov	x0, x20
  402034:	bl	4027f0 <ferror@plt+0xb50>
  402038:	mov	x0, x23
  40203c:	bl	4039d0 <ferror@plt+0x1d30>
  402040:	mov	x0, x26
  402044:	bl	401b70 <free@plt>
  402048:	ldrb	w0, [x19, #80]
  40204c:	cbnz	w0, 4022a0 <ferror@plt+0x600>
  402050:	eor	w0, w25, #0x1
  402054:	ldp	x29, x30, [sp]
  402058:	ldp	x19, x20, [sp, #16]
  40205c:	ldp	x21, x22, [sp, #32]
  402060:	ldp	x23, x24, [sp, #48]
  402064:	ldp	x25, x26, [sp, #64]
  402068:	ldp	x27, x28, [sp, #80]
  40206c:	add	sp, sp, #0x230
  402070:	ret
  402074:	cmp	w0, #0x77
  402078:	b.eq	4020fc <ferror@plt+0x45c>  // b.none
  40207c:	cmp	w0, #0x100
  402080:	b.ne	4020d8 <ferror@plt+0x438>  // b.any
  402084:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  402088:	ldr	x21, [x0, #672]
  40208c:	b	401da0 <ferror@plt+0x100>
  402090:	cmn	w0, #0x3
  402094:	b.ne	4020e8 <ferror@plt+0x448>  // b.any
  402098:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  40209c:	adrp	x5, 409000 <_obstack_memory_used@@Base+0x788>
  4020a0:	ldr	x0, [x27, #688]
  4020a4:	add	x5, x5, #0x80
  4020a8:	ldr	x3, [x1, #544]
  4020ac:	adrp	x4, 409000 <_obstack_memory_used@@Base+0x788>
  4020b0:	adrp	x2, 408000 <ferror@plt+0x6360>
  4020b4:	add	x4, x4, #0x90
  4020b8:	add	x2, x2, #0xfa0
  4020bc:	adrp	x1, 408000 <ferror@plt+0x6360>
  4020c0:	add	x1, x1, #0xb20
  4020c4:	mov	x6, #0x0                   	// #0
  4020c8:	stp	d8, d9, [sp, #96]
  4020cc:	bl	407cb0 <ferror@plt+0x6010>
  4020d0:	mov	w0, #0x0                   	// #0
  4020d4:	bl	4018d0 <exit@plt>
  4020d8:	cmp	w0, #0x6d
  4020dc:	b.ne	402618 <ferror@plt+0x978>  // b.any
  4020e0:	strb	w26, [x19, #9]
  4020e4:	b	401da0 <ferror@plt+0x100>
  4020e8:	cmn	w0, #0x2
  4020ec:	b.ne	402618 <ferror@plt+0x978>  // b.any
  4020f0:	mov	w0, #0x0                   	// #0
  4020f4:	stp	d8, d9, [sp, #96]
  4020f8:	bl	403538 <ferror@plt+0x1898>
  4020fc:	strb	w26, [x19, #8]
  402100:	b	401da0 <ferror@plt+0x100>
  402104:	strb	w26, [x19]
  402108:	b	401da0 <ferror@plt+0x100>
  40210c:	strb	w26, [x19, #11]
  402110:	b	401da0 <ferror@plt+0x100>
  402114:	ldrb	w0, [x28]
  402118:	cbnz	w0, 402178 <ferror@plt+0x4d8>
  40211c:	mov	x0, x23
  402120:	bl	4039b0 <ferror@plt+0x1d10>
  402124:	mov	x2, x21
  402128:	mov	x28, x0
  40212c:	mov	w1, #0x3                   	// #3
  402130:	mov	w0, #0x0                   	// #0
  402134:	bl	406790 <ferror@plt+0x4af0>
  402138:	mov	x25, x0
  40213c:	mov	w2, #0x5                   	// #5
  402140:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  402144:	mov	x0, #0x0                   	// #0
  402148:	add	x1, x1, #0x1d8
  40214c:	bl	401c00 <dcgettext@plt>
  402150:	mov	x5, x0
  402154:	mov	x3, x25
  402158:	mov	x4, x28
  40215c:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  402160:	mov	w1, #0x0                   	// #0
  402164:	add	x2, x2, #0x1f8
  402168:	mov	w0, #0x0                   	// #0
  40216c:	mov	w25, #0x0                   	// #0
  402170:	bl	4018e0 <error@plt>
  402174:	b	401f60 <ferror@plt+0x2c0>
  402178:	cbnz	x20, 4021f4 <ferror@plt+0x554>
  40217c:	mov	x2, #0x0                   	// #0
  402180:	ldr	x1, [sp, #112]
  402184:	add	x2, x26, x2
  402188:	mov	x0, x28
  40218c:	str	x2, [sp, #120]
  402190:	bl	401b40 <strcmp@plt>
  402194:	ldr	x2, [sp, #120]
  402198:	cbnz	w0, 401f14 <ferror@plt+0x274>
  40219c:	mov	w4, #0x1                   	// #1
  4021a0:	mov	x1, x28
  4021a4:	mov	x3, #0xffffffffffffffff    	// #-1
  4021a8:	strb	w4, [x19, #80]
  4021ac:	bl	4029d8 <ferror@plt+0xd38>
  4021b0:	and	w5, w0, #0xff
  4021b4:	and	w25, w25, w5
  4021b8:	b	401f60 <ferror@plt+0x2c0>
  4021bc:	ldrb	w0, [x0]
  4021c0:	cbnz	w0, 402178 <ferror@plt+0x4d8>
  4021c4:	mov	w2, #0x5                   	// #5
  4021c8:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4021cc:	mov	x0, #0x0                   	// #0
  4021d0:	add	x1, x1, #0x1d8
  4021d4:	bl	401c00 <dcgettext@plt>
  4021d8:	mov	w25, #0x0                   	// #0
  4021dc:	ldr	x2, [sp, #128]
  4021e0:	mov	x3, x0
  4021e4:	mov	w1, #0x0                   	// #0
  4021e8:	mov	w0, #0x0                   	// #0
  4021ec:	bl	4018e0 <error@plt>
  4021f0:	b	401f60 <ferror@plt+0x2c0>
  4021f4:	mov	x2, #0x88                  	// #136
  4021f8:	mul	x2, x24, x2
  4021fc:	b	402180 <ferror@plt+0x4e0>
  402200:	cmp	w0, #0x2
  402204:	b.eq	402270 <ferror@plt+0x5d0>  // b.none
  402208:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  40220c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  402210:	add	x3, x22, #0x198
  402214:	add	x1, x1, #0x158
  402218:	add	x0, x0, #0x168
  40221c:	mov	w2, #0x33f                 	// #831
  402220:	stp	d8, d9, [sp, #96]
  402224:	bl	401c40 <__assert_fail@plt>
  402228:	mov	w2, #0x5                   	// #5
  40222c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  402230:	mov	x0, #0x0                   	// #0
  402234:	add	x1, x1, #0x190
  402238:	bl	401c00 <dcgettext@plt>
  40223c:	mov	x25, x0
  402240:	mov	x1, x28
  402244:	mov	w0, #0x4                   	// #4
  402248:	bl	405e10 <ferror@plt+0x4170>
  40224c:	mov	x3, x0
  402250:	mov	x2, x25
  402254:	mov	w0, #0x0                   	// #0
  402258:	mov	w1, #0x0                   	// #0
  40225c:	bl	4018e0 <error@plt>
  402260:	ldrb	w0, [x28]
  402264:	cbz	w0, 40211c <ferror@plt+0x47c>
  402268:	mov	w25, #0x0                   	// #0
  40226c:	b	401f60 <ferror@plt+0x2c0>
  402270:	cmp	x21, #0x0
  402274:	cset	w0, eq  // eq = none
  402278:	ands	w20, w25, w0
  40227c:	b.eq	401fe4 <ferror@plt+0x344>  // b.none
  402280:	mov	x0, x23
  402284:	bl	4039b0 <ferror@plt+0x1d10>
  402288:	cbz	x0, 40252c <ferror@plt+0x88c>
  40228c:	mov	w25, w20
  402290:	b	401fe4 <ferror@plt+0x344>
  402294:	add	x0, sp, #0x110
  402298:	bl	407370 <ferror@plt+0x56d0>
  40229c:	b	401fec <ferror@plt+0x34c>
  4022a0:	mov	w0, #0x0                   	// #0
  4022a4:	bl	401a70 <close@plt>
  4022a8:	cbz	w0, 402050 <ferror@plt+0x3b0>
  4022ac:	stp	d8, d9, [sp, #96]
  4022b0:	bl	401c50 <__errno_location@plt>
  4022b4:	mov	x1, x0
  4022b8:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  4022bc:	mov	w0, #0x1                   	// #1
  4022c0:	add	x2, x2, #0xf8
  4022c4:	ldr	w1, [x1]
  4022c8:	bl	4018e0 <error@plt>
  4022cc:	ldrb	w0, [x19, #9]
  4022d0:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022d4:	ldrb	w0, [x19, #10]
  4022d8:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022dc:	ldrb	w0, [x19, #11]
  4022e0:	cbnz	w0, 401e14 <ferror@plt+0x174>
  4022e4:	mov	w0, #0x1                   	// #1
  4022e8:	strb	w0, [x24, #720]
  4022ec:	strb	w0, [x19, #8]
  4022f0:	strb	w0, [x19, #10]
  4022f4:	b	401e14 <ferror@plt+0x174>
  4022f8:	bl	401c50 <__errno_location@plt>
  4022fc:	mov	x3, x0
  402300:	mov	x2, x28
  402304:	mov	w5, #0x0                   	// #0
  402308:	mov	w1, #0x3                   	// #3
  40230c:	mov	w0, #0x0                   	// #0
  402310:	str	w5, [sp, #120]
  402314:	ldr	w28, [x3]
  402318:	bl	406790 <ferror@plt+0x4af0>
  40231c:	ldr	x2, [sp, #128]
  402320:	mov	x3, x0
  402324:	mov	w1, w28
  402328:	mov	w0, #0x0                   	// #0
  40232c:	bl	4018e0 <error@plt>
  402330:	ldr	w5, [sp, #120]
  402334:	and	w25, w25, w5
  402338:	b	401f60 <ferror@plt+0x2c0>
  40233c:	b.le	40254c <ferror@plt+0x8ac>
  402340:	sub	w20, w20, w25
  402344:	add	x0, x23, w25, sxtw #3
  402348:	str	x0, [sp, #112]
  40234c:	sxtw	x20, w20
  402350:	ldr	x0, [sp, #112]
  402354:	bl	403890 <ferror@plt+0x1bf0>
  402358:	mov	x23, x0
  40235c:	cbz	x0, 4026a0 <ferror@plt+0xa00>
  402360:	mov	x0, #0x88                  	// #136
  402364:	add	x27, sp, #0x90
  402368:	str	wzr, [sp, #140]
  40236c:	mul	x0, x20, x0
  402370:	bl	408018 <ferror@plt+0x6378>
  402374:	mov	x26, x0
  402378:	cmp	x20, #0x1
  40237c:	b.eq	4024f8 <ferror@plt+0x858>  // b.none
  402380:	adrp	x24, 409000 <_obstack_memory_used@@Base+0x788>
  402384:	add	x25, x26, #0x8
  402388:	add	x0, x24, #0xf8
  40238c:	mov	x28, #0x0                   	// #0
  402390:	str	x0, [sp, #120]
  402394:	b	4023bc <ferror@plt+0x71c>
  402398:	mov	x2, x25
  40239c:	mov	w1, #0x0                   	// #0
  4023a0:	mov	w0, #0x0                   	// #0
  4023a4:	bl	401bf0 <__fxstat@plt>
  4023a8:	stur	w0, [x25, #-8]
  4023ac:	add	x28, x28, #0x1
  4023b0:	cmp	x28, x20
  4023b4:	add	x25, x25, #0x88
  4023b8:	b.eq	4023ec <ferror@plt+0x74c>  // b.none
  4023bc:	ldr	x0, [sp, #112]
  4023c0:	ldr	x24, [x0, x28, lsl #3]
  4023c4:	cbz	x24, 402398 <ferror@plt+0x6f8>
  4023c8:	ldr	x1, [sp, #120]
  4023cc:	mov	x0, x24
  4023d0:	bl	401b40 <strcmp@plt>
  4023d4:	cbz	w0, 402398 <ferror@plt+0x6f8>
  4023d8:	mov	x1, x24
  4023dc:	mov	x2, x25
  4023e0:	mov	w0, #0x0                   	// #0
  4023e4:	bl	401c70 <__xstat@plt>
  4023e8:	b	4023a8 <ferror@plt+0x708>
  4023ec:	ldr	w0, [x26]
  4023f0:	cmp	w0, #0x0
  4023f4:	b.le	402460 <ferror@plt+0x7c0>
  4023f8:	mov	w0, #0x1                   	// #1
  4023fc:	b	401ea4 <ferror@plt+0x204>
  402400:	mov	x0, x21
  402404:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  402408:	add	x1, x1, #0x100
  40240c:	bl	401990 <fopen@plt>
  402410:	mov	x20, x0
  402414:	cbnz	x0, 401e44 <ferror@plt+0x1a4>
  402418:	stp	d8, d9, [sp, #96]
  40241c:	bl	401c50 <__errno_location@plt>
  402420:	mov	x3, x0
  402424:	mov	w2, #0x5                   	// #5
  402428:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  40242c:	mov	x0, #0x0                   	// #0
  402430:	add	x1, x1, #0x108
  402434:	ldr	w20, [x3]
  402438:	bl	401c00 <dcgettext@plt>
  40243c:	mov	x1, x21
  402440:	mov	x19, x0
  402444:	mov	w0, #0x4                   	// #4
  402448:	bl	405e10 <ferror@plt+0x4170>
  40244c:	mov	x2, x19
  402450:	mov	x3, x0
  402454:	mov	w1, w20
  402458:	mov	w0, #0x1                   	// #1
  40245c:	bl	4018e0 <error@plt>
  402460:	mov	x3, #0x88                  	// #136
  402464:	mov	x0, x26
  402468:	mov	x1, #0x0                   	// #0
  40246c:	mov	w4, #0x1                   	// #1
  402470:	madd	x3, x20, x3, x26
  402474:	cmp	x3, x0
  402478:	b.eq	4024b0 <ferror@plt+0x810>  // b.none
  40247c:	ldr	w2, [x0]
  402480:	cbnz	w2, 402498 <ferror@plt+0x7f8>
  402484:	ldr	w2, [x0, #24]
  402488:	and	w2, w2, #0xf000
  40248c:	cmp	w2, #0x8, lsl #12
  402490:	b.eq	4024a0 <ferror@plt+0x800>  // b.none
  402494:	mov	w4, #0x7                   	// #7
  402498:	add	x0, x0, #0x88
  40249c:	b	402474 <ferror@plt+0x7d4>
  4024a0:	ldr	x2, [x0, #56]
  4024a4:	add	x0, x0, #0x88
  4024a8:	add	x1, x1, x2
  4024ac:	b	402474 <ferror@plt+0x7d4>
  4024b0:	mov	w0, #0x1                   	// #1
  4024b4:	mov	x2, #0xa                   	// #10
  4024b8:	b	4024c4 <ferror@plt+0x824>
  4024bc:	udiv	x1, x1, x2
  4024c0:	add	w0, w0, #0x1
  4024c4:	cmp	x1, #0x9
  4024c8:	b.hi	4024bc <ferror@plt+0x81c>  // b.pmore
  4024cc:	cmp	w0, w4
  4024d0:	csel	w0, w0, w4, ge  // ge = tcont
  4024d4:	b	401ea4 <ferror@plt+0x204>
  4024d8:	bl	401c50 <__errno_location@plt>
  4024dc:	mov	x3, x0
  4024e0:	mov	w5, #0x0                   	// #0
  4024e4:	mov	x2, x28
  4024e8:	mov	w1, #0x3                   	// #3
  4024ec:	mov	w0, #0x0                   	// #0
  4024f0:	str	w5, [sp, #120]
  4024f4:	b	402314 <ferror@plt+0x674>
  4024f8:	ldrb	w2, [x19, #8]
  4024fc:	ldrb	w0, [x24, #720]
  402500:	ldrb	w1, [x19, #9]
  402504:	add	w0, w0, w2
  402508:	ldrb	w2, [x19, #10]
  40250c:	add	w0, w0, w1
  402510:	ldrb	w1, [x19, #11]
  402514:	add	w0, w0, w2
  402518:	add	w0, w0, w1
  40251c:	cmp	w0, #0x1
  402520:	b.ne	402380 <ferror@plt+0x6e0>  // b.any
  402524:	str	w20, [x26]
  402528:	b	401ea4 <ferror@plt+0x204>
  40252c:	mov	w4, #0x1                   	// #1
  402530:	mov	x2, x26
  402534:	mov	x3, #0xffffffffffffffff    	// #-1
  402538:	mov	x1, #0x0                   	// #0
  40253c:	strb	w4, [x19, #80]
  402540:	bl	4029d8 <ferror@plt+0xd38>
  402544:	and	w25, w0, #0xff
  402548:	b	401fe4 <ferror@plt+0x344>
  40254c:	add	x0, x19, #0x48
  402550:	mov	x20, #0x1                   	// #1
  402554:	str	x0, [sp, #112]
  402558:	b	402350 <ferror@plt+0x6b0>
  40255c:	stp	d8, d9, [sp, #96]
  402560:	fmov	d9, #5.000000000000000000e-01
  402564:	ldr	d8, [sp, #192]
  402568:	scvtf	d8, d8
  40256c:	bl	403cc0 <ferror@plt+0x2020>
  402570:	fmul	d0, d0, d9
  402574:	mov	x0, #0x4164000000000000    	// #4711891110136381440
  402578:	fmov	d1, x0
  40257c:	fcmpe	d0, d1
  402580:	b.le	402594 <ferror@plt+0x8f4>
  402584:	fcmpe	d8, d1
  402588:	b.ls	4025a0 <ferror@plt+0x900>  // b.plast
  40258c:	ldp	d8, d9, [sp, #96]
  402590:	b	401e74 <ferror@plt+0x1d4>
  402594:	bl	403cc0 <ferror@plt+0x2020>
  402598:	fmul	d1, d0, d9
  40259c:	b	402584 <ferror@plt+0x8e4>
  4025a0:	add	x0, sp, #0x110
  4025a4:	bl	4072f0 <ferror@plt+0x5650>
  4025a8:	add	x1, sp, #0x110
  4025ac:	mov	x0, x20
  4025b0:	bl	4073b0 <ferror@plt+0x5710>
  4025b4:	ands	w0, w0, #0xff
  4025b8:	str	w0, [sp, #140]
  4025bc:	b.eq	4026a8 <ferror@plt+0xa08>  // b.none
  4025c0:	mov	x0, x20
  4025c4:	bl	408228 <ferror@plt+0x6588>
  4025c8:	cbnz	w0, 4026a8 <ferror@plt+0xa08>
  4025cc:	ldp	x20, x0, [sp, #272]
  4025d0:	str	x0, [sp, #112]
  4025d4:	bl	403890 <ferror@plt+0x1bf0>
  4025d8:	mov	x23, x0
  4025dc:	cbz	x0, 4026a4 <ferror@plt+0xa04>
  4025e0:	cmp	x20, #0x0
  4025e4:	mov	x1, #0x88                  	// #136
  4025e8:	csinc	x0, x20, xzr, ne  // ne = any
  4025ec:	umulh	x2, x0, x1
  4025f0:	mul	x0, x0, x1
  4025f4:	cmp	x2, #0x0
  4025f8:	cset	x1, ne  // ne = any
  4025fc:	tbnz	x0, #63, 4026a4 <ferror@plt+0xa04>
  402600:	cbnz	x1, 4026a4 <ferror@plt+0xa04>
  402604:	bl	408018 <ferror@plt+0x6378>
  402608:	mov	x26, x0
  40260c:	ldp	d8, d9, [sp, #96]
  402610:	cbnz	x20, 402378 <ferror@plt+0x6d8>
  402614:	b	401e94 <ferror@plt+0x1f4>
  402618:	mov	w0, #0x1                   	// #1
  40261c:	stp	d8, d9, [sp, #96]
  402620:	bl	403538 <ferror@plt+0x1898>
  402624:	mov	w2, #0x5                   	// #5
  402628:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  40262c:	mov	x0, #0x0                   	// #0
  402630:	add	x1, x1, #0xa8
  402634:	stp	d8, d9, [sp, #96]
  402638:	bl	401c00 <dcgettext@plt>
  40263c:	ldrsw	x1, [x26, #680]
  402640:	mov	x19, x0
  402644:	mov	w0, #0x4                   	// #4
  402648:	ldr	x1, [x23, x1, lsl #3]
  40264c:	bl	405e10 <ferror@plt+0x4170>
  402650:	mov	x3, x0
  402654:	mov	x2, x19
  402658:	mov	w1, #0x0                   	// #0
  40265c:	mov	w0, #0x0                   	// #0
  402660:	bl	4018e0 <error@plt>
  402664:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  402668:	mov	w2, #0x5                   	// #5
  40266c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  402670:	add	x1, x1, #0xc0
  402674:	ldr	x19, [x0, #664]
  402678:	mov	x0, #0x0                   	// #0
  40267c:	bl	401c00 <dcgettext@plt>
  402680:	mov	x3, x0
  402684:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  402688:	add	x2, x2, #0x8b0
  40268c:	mov	w1, #0x1                   	// #1
  402690:	mov	x0, x19
  402694:	bl	401b30 <__fprintf_chk@plt>
  402698:	mov	w0, #0x1                   	// #1
  40269c:	bl	403538 <ferror@plt+0x1898>
  4026a0:	stp	d8, d9, [sp, #96]
  4026a4:	bl	4081e0 <ferror@plt+0x6540>
  4026a8:	mov	w2, #0x5                   	// #5
  4026ac:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4026b0:	mov	x0, #0x0                   	// #0
  4026b4:	add	x1, x1, #0x128
  4026b8:	bl	401c00 <dcgettext@plt>
  4026bc:	mov	x19, x0
  4026c0:	mov	x1, x21
  4026c4:	mov	w0, #0x4                   	// #4
  4026c8:	bl	405e10 <ferror@plt+0x4170>
  4026cc:	mov	x3, x0
  4026d0:	mov	x2, x19
  4026d4:	mov	w1, #0x0                   	// #0
  4026d8:	mov	w0, #0x1                   	// #1
  4026dc:	bl	4018e0 <error@plt>
  4026e0:	mov	x29, #0x0                   	// #0
  4026e4:	mov	x30, #0x0                   	// #0
  4026e8:	mov	x5, x0
  4026ec:	ldr	x1, [sp]
  4026f0:	add	x2, sp, #0x8
  4026f4:	mov	x6, sp
  4026f8:	movz	x0, #0x0, lsl #48
  4026fc:	movk	x0, #0x0, lsl #32
  402700:	movk	x0, #0x40, lsl #16
  402704:	movk	x0, #0x1cb0
  402708:	movz	x3, #0x0, lsl #48
  40270c:	movk	x3, #0x0, lsl #32
  402710:	movk	x3, #0x40, lsl #16
  402714:	movk	x3, #0x89b0
  402718:	movz	x4, #0x0, lsl #48
  40271c:	movk	x4, #0x0, lsl #32
  402720:	movk	x4, #0x40, lsl #16
  402724:	movk	x4, #0x8a30
  402728:	bl	401a00 <__libc_start_main@plt>
  40272c:	bl	401ab0 <abort@plt>
  402730:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x12788>
  402734:	ldr	x0, [x0, #4064]
  402738:	cbz	x0, 402740 <ferror@plt+0xaa0>
  40273c:	b	401a90 <__gmon_start__@plt>
  402740:	ret
  402744:	nop
  402748:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  40274c:	add	x0, x0, #0x290
  402750:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  402754:	add	x1, x1, #0x290
  402758:	cmp	x1, x0
  40275c:	b.eq	402774 <ferror@plt+0xad4>  // b.none
  402760:	adrp	x1, 408000 <ferror@plt+0x6360>
  402764:	ldr	x1, [x1, #2664]
  402768:	cbz	x1, 402774 <ferror@plt+0xad4>
  40276c:	mov	x16, x1
  402770:	br	x16
  402774:	ret
  402778:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  40277c:	add	x0, x0, #0x290
  402780:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  402784:	add	x1, x1, #0x290
  402788:	sub	x1, x1, x0
  40278c:	lsr	x2, x1, #63
  402790:	add	x1, x2, x1, asr #3
  402794:	cmp	xzr, x1, asr #1
  402798:	asr	x1, x1, #1
  40279c:	b.eq	4027b4 <ferror@plt+0xb14>  // b.none
  4027a0:	adrp	x2, 408000 <ferror@plt+0x6360>
  4027a4:	ldr	x2, [x2, #2672]
  4027a8:	cbz	x2, 4027b4 <ferror@plt+0xb14>
  4027ac:	mov	x16, x2
  4027b0:	br	x16
  4027b4:	ret
  4027b8:	stp	x29, x30, [sp, #-32]!
  4027bc:	mov	x29, sp
  4027c0:	str	x19, [sp, #16]
  4027c4:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0x13788>
  4027c8:	ldrb	w0, [x19, #712]
  4027cc:	cbnz	w0, 4027dc <ferror@plt+0xb3c>
  4027d0:	bl	402748 <ferror@plt+0xaa8>
  4027d4:	mov	w0, #0x1                   	// #1
  4027d8:	strb	w0, [x19, #712]
  4027dc:	ldr	x19, [sp, #16]
  4027e0:	ldp	x29, x30, [sp], #32
  4027e4:	ret
  4027e8:	b	402778 <ferror@plt+0xad8>
  4027ec:	nop
  4027f0:	stp	x29, x30, [sp, #-128]!
  4027f4:	mov	x29, sp
  4027f8:	stp	x19, x20, [sp, #16]
  4027fc:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0x13788>
  402800:	mov	x20, x5
  402804:	ldrb	w6, [x19, #720]
  402808:	add	x19, x19, #0x2d0
  40280c:	stp	x21, x22, [sp, #32]
  402810:	mov	x22, x4
  402814:	stp	x23, x24, [sp, #48]
  402818:	mov	x24, x2
  40281c:	mov	x23, x3
  402820:	stp	x25, x26, [sp, #64]
  402824:	mov	x25, x1
  402828:	cbnz	w6, 402984 <ferror@plt+0xce4>
  40282c:	adrp	x21, 409000 <_obstack_memory_used@@Base+0x788>
  402830:	add	x21, x21, #0x248
  402834:	add	x26, x21, #0x1
  402838:	ldrb	w0, [x19, #8]
  40283c:	cbnz	w0, 402950 <ferror@plt+0xcb0>
  402840:	ldrb	w0, [x19, #9]
  402844:	cbnz	w0, 402924 <ferror@plt+0xc84>
  402848:	ldrb	w0, [x19, #10]
  40284c:	cbnz	w0, 4028f8 <ferror@plt+0xc58>
  402850:	ldrb	w0, [x19, #11]
  402854:	cbnz	w0, 4028d0 <ferror@plt+0xc30>
  402858:	cbz	x20, 402894 <ferror@plt+0xbf4>
  40285c:	mov	x0, x20
  402860:	mov	w1, #0xa                   	// #10
  402864:	bl	401b90 <strchr@plt>
  402868:	cbz	x0, 402880 <ferror@plt+0xbe0>
  40286c:	mov	x2, x20
  402870:	mov	w1, #0x3                   	// #3
  402874:	mov	w0, #0x0                   	// #0
  402878:	bl	406790 <ferror@plt+0x4af0>
  40287c:	mov	x20, x0
  402880:	adrp	x1, 408000 <ferror@plt+0x6360>
  402884:	mov	x2, x20
  402888:	add	x1, x1, #0xb08
  40288c:	mov	w0, #0x1                   	// #1
  402890:	bl	401a20 <__printf_chk@plt>
  402894:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  402898:	ldr	x0, [x0, #688]
  40289c:	ldp	x1, x2, [x0, #40]
  4028a0:	cmp	x1, x2
  4028a4:	b.cs	4029b4 <ferror@plt+0xd14>  // b.hs, b.nlast
  4028a8:	add	x2, x1, #0x1
  4028ac:	str	x2, [x0, #40]
  4028b0:	mov	w0, #0xa                   	// #10
  4028b4:	strb	w0, [x1]
  4028b8:	ldp	x19, x20, [sp, #16]
  4028bc:	ldp	x21, x22, [sp, #32]
  4028c0:	ldp	x23, x24, [sp, #48]
  4028c4:	ldp	x25, x26, [sp, #64]
  4028c8:	ldp	x29, x30, [sp], #128
  4028cc:	ret
  4028d0:	ldr	w19, [x19, #4]
  4028d4:	add	x1, sp, #0x68
  4028d8:	mov	x0, x22
  4028dc:	bl	403b40 <ferror@plt+0x1ea0>
  4028e0:	mov	w2, w19
  4028e4:	mov	x3, x0
  4028e8:	mov	x1, x26
  4028ec:	mov	w0, #0x1                   	// #1
  4028f0:	bl	401a20 <__printf_chk@plt>
  4028f4:	b	402858 <ferror@plt+0xbb8>
  4028f8:	ldr	w24, [x19, #4]
  4028fc:	add	x1, sp, #0x68
  402900:	mov	x0, x23
  402904:	bl	403b40 <ferror@plt+0x1ea0>
  402908:	mov	x1, x26
  40290c:	mov	x3, x0
  402910:	mov	w2, w24
  402914:	mov	x26, x21
  402918:	mov	w0, #0x1                   	// #1
  40291c:	bl	401a20 <__printf_chk@plt>
  402920:	b	402850 <ferror@plt+0xbb0>
  402924:	ldr	w25, [x19, #4]
  402928:	add	x1, sp, #0x68
  40292c:	mov	x0, x24
  402930:	bl	403b40 <ferror@plt+0x1ea0>
  402934:	mov	x1, x26
  402938:	mov	x3, x0
  40293c:	mov	w2, w25
  402940:	mov	x26, x21
  402944:	mov	w0, #0x1                   	// #1
  402948:	bl	401a20 <__printf_chk@plt>
  40294c:	b	402848 <ferror@plt+0xba8>
  402950:	str	x27, [sp, #80]
  402954:	add	x1, sp, #0x68
  402958:	ldr	w27, [x19, #4]
  40295c:	mov	x0, x25
  402960:	bl	403b40 <ferror@plt+0x1ea0>
  402964:	mov	x3, x0
  402968:	mov	w2, w27
  40296c:	mov	x1, x26
  402970:	mov	w0, #0x1                   	// #1
  402974:	mov	x26, x21
  402978:	bl	401a20 <__printf_chk@plt>
  40297c:	ldr	x27, [sp, #80]
  402980:	b	402840 <ferror@plt+0xba0>
  402984:	ldr	w26, [x19, #4]
  402988:	add	x1, sp, #0x68
  40298c:	adrp	x21, 409000 <_obstack_memory_used@@Base+0x788>
  402990:	bl	403b40 <ferror@plt+0x1ea0>
  402994:	add	x21, x21, #0x248
  402998:	mov	w2, w26
  40299c:	mov	x3, x0
  4029a0:	add	x1, x21, #0x1
  4029a4:	mov	x26, x21
  4029a8:	mov	w0, #0x1                   	// #1
  4029ac:	bl	401a20 <__printf_chk@plt>
  4029b0:	b	402838 <ferror@plt+0xb98>
  4029b4:	mov	w1, #0xa                   	// #10
  4029b8:	bl	401ae0 <__overflow@plt>
  4029bc:	ldp	x19, x20, [sp, #16]
  4029c0:	ldp	x21, x22, [sp, #32]
  4029c4:	ldp	x23, x24, [sp, #48]
  4029c8:	ldp	x25, x26, [sp, #64]
  4029cc:	ldp	x29, x30, [sp], #128
  4029d0:	ret
  4029d4:	nop
  4029d8:	mov	x12, #0x40c0                	// #16576
  4029dc:	sub	sp, sp, x12
  4029e0:	stp	x29, x30, [sp]
  4029e4:	mov	x29, sp
  4029e8:	stp	x19, x20, [sp, #16]
  4029ec:	mov	x19, x2
  4029f0:	mov	x20, x3
  4029f4:	stp	x21, x22, [sp, #32]
  4029f8:	stp	x23, x24, [sp, #48]
  4029fc:	stp	x25, x26, [sp, #64]
  402a00:	stp	x27, x28, [sp, #80]
  402a04:	str	w0, [sp, #116]
  402a08:	str	x1, [sp, #136]
  402a0c:	str	x1, [sp, #152]
  402a10:	cbz	x1, 402fd0 <ferror@plt+0x1330>
  402a14:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  402a18:	add	x25, x21, #0x2d0
  402a1c:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402a20:	cmp	x0, #0x1
  402a24:	ldrb	w22, [x25, #10]
  402a28:	b.ls	402ce0 <ferror@plt+0x1040>  // b.plast
  402a2c:	ldrb	w0, [x25, #9]
  402a30:	str	w0, [sp, #144]
  402a34:	ldrb	w0, [x25, #8]
  402a38:	cbnz	w0, 402afc <ferror@plt+0xe5c>
  402a3c:	ldrb	w0, [x25, #11]
  402a40:	mov	w28, w0
  402a44:	cbnz	w0, 402afc <ferror@plt+0xe5c>
  402a48:	ldr	w1, [sp, #144]
  402a4c:	eor	w0, w22, #0x1
  402a50:	orr	w0, w0, w1
  402a54:	cbnz	w0, 4031c4 <ferror@plt+0x1524>
  402a58:	ldrb	w0, [x21, #720]
  402a5c:	cbnz	w0, 403510 <ferror@plt+0x1870>
  402a60:	ldr	w0, [x19]
  402a64:	cmp	w0, #0x0
  402a68:	b.gt	402cf0 <ferror@plt+0x1050>
  402a6c:	cbnz	w0, 402db4 <ferror@plt+0x1114>
  402a70:	ldr	w0, [x19, #24]
  402a74:	mov	w1, #0xd000                	// #53248
  402a78:	and	w0, w0, w1
  402a7c:	cmp	w0, #0x8, lsl #12
  402a80:	b.ne	402db4 <ferror@plt+0x1114>  // b.any
  402a84:	ldr	x21, [x19, #56]
  402a88:	tbnz	x21, #63, 402db4 <ferror@plt+0x1114>
  402a8c:	cmn	x20, #0x1
  402a90:	mov	x24, x21
  402a94:	ldr	x22, [x25, #16]
  402a98:	b.eq	403190 <ferror@plt+0x14f0>  // b.none
  402a9c:	udiv	x0, x21, x22
  402aa0:	msub	x22, x0, x22, x21
  402aa4:	cbnz	x22, 403174 <ferror@plt+0x14d4>
  402aa8:	mov	w0, #0x1                   	// #1
  402aac:	mov	x20, #0x0                   	// #0
  402ab0:	ldr	w2, [x19, #64]
  402ab4:	mov	x24, #0x201                 	// #513
  402ab8:	add	w1, w2, #0x1
  402abc:	cmp	w2, #0x0
  402ac0:	sxtw	x1, w1
  402ac4:	csel	x1, x1, x24, gt
  402ac8:	cmp	w0, #0x0
  402acc:	udiv	x24, x21, x1
  402ad0:	msub	x24, x24, x1, x21
  402ad4:	sub	x24, x21, x24
  402ad8:	ccmp	x24, x20, #0x4, ne  // ne = any
  402adc:	b.le	402db4 <ferror@plt+0x1114>
  402ae0:	ldr	w0, [sp, #116]
  402ae4:	mov	x1, x24
  402ae8:	mov	w2, #0x1                   	// #1
  402aec:	bl	401930 <lseek@plt>
  402af0:	tbnz	x0, #63, 402db4 <ferror@plt+0x1114>
  402af4:	sub	x24, x24, x20
  402af8:	b	402db8 <ferror@plt+0x1118>
  402afc:	ldr	w0, [sp, #116]
  402b00:	mov	w3, #0x2                   	// #2
  402b04:	mov	x2, #0x0                   	// #0
  402b08:	mov	x1, #0x0                   	// #0
  402b0c:	bl	403b00 <ferror@plt+0x1e60>
  402b10:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402b14:	cmp	x0, #0x1
  402b18:	b.ls	402d08 <ferror@plt+0x1068>  // b.plast
  402b1c:	add	x21, sp, #0xb0
  402b20:	mov	x26, #0x0                   	// #0
  402b24:	mov	w5, #0x0                   	// #0
  402b28:	mov	x19, #0x0                   	// #0
  402b2c:	mov	w20, #0x0                   	// #0
  402b30:	mov	x24, #0x0                   	// #0
  402b34:	mov	x27, #0x0                   	// #0
  402b38:	mov	x23, #0x0                   	// #0
  402b3c:	mov	x22, #0x0                   	// #0
  402b40:	str	xzr, [sp, #120]
  402b44:	str	xzr, [sp, #168]
  402b48:	mov	x0, #0x4000                	// #16384
  402b4c:	sub	x2, x0, x26
  402b50:	ldr	w0, [sp, #116]
  402b54:	add	x1, x21, x26
  402b58:	str	w5, [sp, #96]
  402b5c:	bl	4075b8 <ferror@plt+0x5918>
  402b60:	ldr	w5, [sp, #96]
  402b64:	cbz	x0, 402fec <ferror@plt+0x134c>
  402b68:	cmn	x0, #0x1
  402b6c:	b.eq	40308c <ferror@plt+0x13ec>  // b.none
  402b70:	add	x24, x24, x0
  402b74:	add	x26, x26, x0
  402b78:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  402b7c:	add	x0, x0, #0x410
  402b80:	str	x0, [sp, #104]
  402b84:	mov	x28, x21
  402b88:	cbnz	w5, 402c04 <ferror@plt+0xf64>
  402b8c:	nop
  402b90:	ldrb	w3, [x28]
  402b94:	ldr	x1, [sp, #104]
  402b98:	ubfx	x0, x3, #5, #3
  402b9c:	ldr	w0, [x1, x0, lsl #2]
  402ba0:	lsr	w0, w0, w3
  402ba4:	and	w7, w0, #0x1
  402ba8:	tbz	w0, #0, 402c04 <ferror@plt+0xf64>
  402bac:	str	w3, [sp, #164]
  402bb0:	cmp	w3, #0xb
  402bb4:	b.eq	402f54 <ferror@plt+0x12b4>  // b.none
  402bb8:	b.hi	402e58 <ferror@plt+0x11b8>  // b.pmore
  402bbc:	cmp	w3, #0x9
  402bc0:	b.eq	402ec8 <ferror@plt+0x1228>  // b.none
  402bc4:	cmp	w3, #0xa
  402bc8:	mov	x2, #0x1                   	// #1
  402bcc:	b.ne	402e74 <ferror@plt+0x11d4>  // b.any
  402bd0:	add	x22, x22, #0x1
  402bd4:	ldr	x0, [sp, #120]
  402bd8:	cmp	x0, x19
  402bdc:	csel	x0, x0, x19, cs  // cs = hs, nlast
  402be0:	mov	x19, #0x0                   	// #0
  402be4:	str	x0, [sp, #120]
  402be8:	add	x23, x23, w20, uxtb
  402bec:	mov	w20, #0x0                   	// #0
  402bf0:	add	x28, x28, x2
  402bf4:	sub	x26, x26, x2
  402bf8:	add	x27, x27, #0x1
  402bfc:	cbz	x26, 402b48 <ferror@plt+0xea8>
  402c00:	cbz	w5, 402b90 <ferror@plt+0xef0>
  402c04:	ldr	x4, [sp, #168]
  402c08:	mov	x2, x26
  402c0c:	add	x3, sp, #0xa8
  402c10:	mov	x1, x28
  402c14:	add	x0, sp, #0xa4
  402c18:	str	x4, [sp, #96]
  402c1c:	bl	408398 <ferror@plt+0x66f8>
  402c20:	mov	x2, x0
  402c24:	cmn	x0, #0x2
  402c28:	b.eq	402f5c <ferror@plt+0x12bc>  // b.none
  402c2c:	cmn	x0, #0x1
  402c30:	b.eq	402eb4 <ferror@plt+0x1214>  // b.none
  402c34:	add	x0, sp, #0xa8
  402c38:	str	x2, [sp, #96]
  402c3c:	bl	401ad0 <mbsinit@plt>
  402c40:	cmp	w0, #0x0
  402c44:	ldr	x2, [sp, #96]
  402c48:	cset	w5, eq  // eq = none
  402c4c:	cbnz	x2, 402e10 <ferror@plt+0x1170>
  402c50:	mov	w3, #0x0                   	// #0
  402c54:	mov	x2, #0x1                   	// #1
  402c58:	str	wzr, [sp, #164]
  402c5c:	mov	w0, w3
  402c60:	str	w5, [sp, #96]
  402c64:	str	x2, [sp, #128]
  402c68:	str	w3, [sp, #148]
  402c6c:	bl	401c30 <iswprint@plt>
  402c70:	ldr	w5, [sp, #96]
  402c74:	ldr	x2, [sp, #128]
  402c78:	cbz	w0, 402bf0 <ferror@plt+0xf50>
  402c7c:	ldrb	w0, [x25, #11]
  402c80:	ldr	w3, [sp, #148]
  402c84:	cbnz	w0, 402fa8 <ferror@plt+0x1308>
  402c88:	mov	w0, w3
  402c8c:	str	w5, [sp, #96]
  402c90:	str	x2, [sp, #128]
  402c94:	str	w3, [sp, #148]
  402c98:	bl	401970 <iswspace@plt>
  402c9c:	ldr	w5, [sp, #96]
  402ca0:	ldr	x2, [sp, #128]
  402ca4:	cbnz	w0, 402be8 <ferror@plt+0xf48>
  402ca8:	ldrb	w0, [x25, #24]
  402cac:	cbnz	w0, 402fa0 <ferror@plt+0x1300>
  402cb0:	ldr	w3, [sp, #148]
  402cb4:	mov	w0, #0x2007                	// #8199
  402cb8:	cmp	w3, #0xa0
  402cbc:	ccmp	w3, w0, #0x4, ne  // ne = any
  402cc0:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402cc4:	mov	w0, #0x202f                	// #8239
  402cc8:	cmp	w3, w0
  402ccc:	mov	w0, #0x2060                	// #8288
  402cd0:	ccmp	w3, w0, #0x4, ne  // ne = any
  402cd4:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402cd8:	mov	w20, #0x1                   	// #1
  402cdc:	b	402bf0 <ferror@plt+0xf50>
  402ce0:	cbnz	w22, 402ce8 <ferror@plt+0x1048>
  402ce4:	ldrb	w22, [x25, #9]
  402ce8:	str	wzr, [sp, #144]
  402cec:	b	402a34 <ferror@plt+0xd94>
  402cf0:	ldr	w1, [sp, #116]
  402cf4:	add	x2, x19, #0x8
  402cf8:	mov	w0, #0x0                   	// #0
  402cfc:	bl	401bf0 <__fxstat@plt>
  402d00:	str	w0, [x19]
  402d04:	b	402a6c <ferror@plt+0xdcc>
  402d08:	add	x21, sp, #0xb0
  402d0c:	mov	x23, #0x0                   	// #0
  402d10:	mov	w4, #0x0                   	// #0
  402d14:	mov	x19, #0x0                   	// #0
  402d18:	mov	x24, #0x0                   	// #0
  402d1c:	mov	x20, #0x0                   	// #0
  402d20:	mov	x22, #0x0                   	// #0
  402d24:	mov	w28, #0x2007                	// #8199
  402d28:	ldr	w0, [sp, #116]
  402d2c:	mov	x1, x21
  402d30:	mov	x2, #0x4000                	// #16384
  402d34:	str	w4, [sp, #96]
  402d38:	bl	4075b8 <ferror@plt+0x5918>
  402d3c:	ldr	w4, [sp, #96]
  402d40:	cbz	x0, 4030c8 <ferror@plt+0x1428>
  402d44:	cmn	x0, #0x1
  402d48:	b.eq	4030e4 <ferror@plt+0x1444>  // b.none
  402d4c:	add	x24, x24, x0
  402d50:	add	x1, x21, x0
  402d54:	mov	x27, x21
  402d58:	b	402d8c <ferror@plt+0x10ec>
  402d5c:	cmp	w26, #0x9
  402d60:	b.eq	402ed0 <ferror@plt+0x1230>  // b.none
  402d64:	cmp	w26, #0xa
  402d68:	b.ne	402edc <ferror@plt+0x123c>  // b.any
  402d6c:	add	x22, x22, #0x1
  402d70:	cmp	x19, x23
  402d74:	csel	x19, x19, x23, cs  // cs = hs, nlast
  402d78:	mov	x23, #0x0                   	// #0
  402d7c:	add	x20, x20, w4, uxtb
  402d80:	mov	w4, #0x0                   	// #0
  402d84:	cmp	x27, x1
  402d88:	b.eq	402d28 <ferror@plt+0x1088>  // b.none
  402d8c:	ldrb	w26, [x27], #1
  402d90:	cmp	w26, #0xb
  402d94:	b.eq	402d7c <ferror@plt+0x10dc>  // b.none
  402d98:	b.ls	402d5c <ferror@plt+0x10bc>  // b.plast
  402d9c:	cmp	w26, #0xd
  402da0:	b.ls	402d70 <ferror@plt+0x10d0>  // b.plast
  402da4:	cmp	w26, #0x20
  402da8:	b.ne	402edc <ferror@plt+0x123c>  // b.any
  402dac:	add	x23, x23, #0x1
  402db0:	b	402d7c <ferror@plt+0x10dc>
  402db4:	mov	x24, #0x0                   	// #0
  402db8:	ldr	w0, [sp, #116]
  402dbc:	add	x21, sp, #0xb0
  402dc0:	mov	w3, #0x2                   	// #2
  402dc4:	mov	x2, #0x0                   	// #0
  402dc8:	mov	x1, #0x0                   	// #0
  402dcc:	bl	403b00 <ferror@plt+0x1e60>
  402dd0:	b	402de0 <ferror@plt+0x1140>
  402dd4:	cmn	x27, #0x1
  402dd8:	b.eq	403128 <ferror@plt+0x1488>  // b.none
  402ddc:	add	x24, x24, x27
  402de0:	ldr	w0, [sp, #116]
  402de4:	mov	x1, x21
  402de8:	mov	x2, #0x4000                	// #16384
  402dec:	bl	4075b8 <ferror@plt+0x5918>
  402df0:	mov	x27, x0
  402df4:	cbnz	x0, 402dd4 <ferror@plt+0x1134>
  402df8:	mov	w0, #0x1                   	// #1
  402dfc:	mov	x19, #0x0                   	// #0
  402e00:	mov	w28, w0
  402e04:	mov	x20, #0x0                   	// #0
  402e08:	mov	x22, #0x0                   	// #0
  402e0c:	b	403008 <ferror@plt+0x1368>
  402e10:	ldr	w3, [sp, #164]
  402e14:	cmp	w3, #0xb
  402e18:	b.eq	402be8 <ferror@plt+0xf48>  // b.none
  402e1c:	b.hi	402e34 <ferror@plt+0x1194>  // b.pmore
  402e20:	cmp	w3, #0x9
  402e24:	b.ne	402e4c <ferror@plt+0x11ac>  // b.any
  402e28:	and	x19, x19, #0xfffffffffffffff8
  402e2c:	add	x19, x19, #0x8
  402e30:	b	402be8 <ferror@plt+0xf48>
  402e34:	cmp	w3, #0xd
  402e38:	b.ls	402bd4 <ferror@plt+0xf34>  // b.plast
  402e3c:	cmp	w3, #0x20
  402e40:	b.ne	402c5c <ferror@plt+0xfbc>  // b.any
  402e44:	add	x19, x19, #0x1
  402e48:	b	402be8 <ferror@plt+0xf48>
  402e4c:	cmp	w3, #0xa
  402e50:	b.eq	402bd0 <ferror@plt+0xf30>  // b.none
  402e54:	b	402c5c <ferror@plt+0xfbc>
  402e58:	cmp	w3, #0xd
  402e5c:	b.hi	402e68 <ferror@plt+0x11c8>  // b.pmore
  402e60:	mov	x2, #0x1                   	// #1
  402e64:	b	402bd4 <ferror@plt+0xf34>
  402e68:	cmp	w3, #0x20
  402e6c:	mov	x2, #0x1                   	// #1
  402e70:	b.eq	402e44 <ferror@plt+0x11a4>  // b.none
  402e74:	str	w3, [sp, #96]
  402e78:	str	w5, [sp, #128]
  402e7c:	str	w7, [sp, #148]
  402e80:	bl	401b50 <__ctype_b_loc@plt>
  402e84:	ldr	w3, [sp, #96]
  402e88:	mov	x2, #0x1                   	// #1
  402e8c:	ldr	x0, [x0]
  402e90:	ubfiz	x3, x3, #1, #8
  402e94:	ldr	w5, [sp, #128]
  402e98:	ldrh	w0, [x0, x3]
  402e9c:	tbz	w0, #14, 402bf0 <ferror@plt+0xf50>
  402ea0:	add	x19, x19, x2
  402ea4:	tbnz	w0, #13, 402be8 <ferror@plt+0xf48>
  402ea8:	ldr	w7, [sp, #148]
  402eac:	mov	w20, w7
  402eb0:	b	402bf0 <ferror@plt+0xf50>
  402eb4:	add	x28, x28, #0x1
  402eb8:	sub	x26, x26, #0x1
  402ebc:	mov	w5, #0x1                   	// #1
  402ec0:	cbnz	x26, 402c00 <ferror@plt+0xf60>
  402ec4:	b	402b48 <ferror@plt+0xea8>
  402ec8:	mov	x2, #0x1                   	// #1
  402ecc:	b	402e28 <ferror@plt+0x1188>
  402ed0:	and	x5, x23, #0xfffffffffffffff8
  402ed4:	add	x23, x5, #0x8
  402ed8:	b	402d7c <ferror@plt+0x10dc>
  402edc:	str	w4, [sp, #96]
  402ee0:	str	x1, [sp, #104]
  402ee4:	bl	401b50 <__ctype_b_loc@plt>
  402ee8:	ldr	x0, [x0]
  402eec:	ubfiz	x2, x26, #1, #8
  402ef0:	ldr	w4, [sp, #96]
  402ef4:	ldr	x1, [sp, #104]
  402ef8:	ldrh	w0, [x0, x2]
  402efc:	tbz	w0, #14, 402d84 <ferror@plt+0x10e4>
  402f00:	add	x23, x23, #0x1
  402f04:	tbnz	w0, #13, 402d7c <ferror@plt+0x10dc>
  402f08:	mov	w0, w26
  402f0c:	str	x1, [sp, #96]
  402f10:	str	w4, [sp, #104]
  402f14:	bl	401aa0 <btowc@plt>
  402f18:	ldrb	w2, [x25, #24]
  402f1c:	ldr	x1, [sp, #96]
  402f20:	mov	w4, w2
  402f24:	cbnz	w2, 402d84 <ferror@plt+0x10e4>
  402f28:	cmp	w0, #0xa0
  402f2c:	ldr	w4, [sp, #104]
  402f30:	ccmp	w0, w28, #0x4, ne  // ne = any
  402f34:	b.eq	402d7c <ferror@plt+0x10dc>  // b.none
  402f38:	mov	w2, #0x202f                	// #8239
  402f3c:	cmp	w0, w2
  402f40:	mov	w2, #0x2060                	// #8288
  402f44:	ccmp	w0, w2, #0x4, ne  // ne = any
  402f48:	b.eq	402d7c <ferror@plt+0x10dc>  // b.none
  402f4c:	mov	w4, #0x1                   	// #1
  402f50:	b	402d84 <ferror@plt+0x10e4>
  402f54:	mov	x2, #0x1                   	// #1
  402f58:	b	402be8 <ferror@plt+0xf48>
  402f5c:	ldr	x0, [sp, #96]
  402f60:	str	x0, [sp, #168]
  402f64:	mov	w5, #0x1                   	// #1
  402f68:	cbz	x26, 402b48 <ferror@plt+0xea8>
  402f6c:	cmp	x26, #0x4, lsl #12
  402f70:	b.ne	402f7c <ferror@plt+0x12dc>  // b.any
  402f74:	add	x28, x28, #0x1
  402f78:	mov	x26, #0x3fff                	// #16383
  402f7c:	mov	w5, #0x1                   	// #1
  402f80:	mov	x1, x28
  402f84:	mov	x2, x26
  402f88:	mov	x0, x21
  402f8c:	mov	x3, #0x4001                	// #16385
  402f90:	str	w5, [sp, #96]
  402f94:	bl	401c80 <__memmove_chk@plt>
  402f98:	ldr	w5, [sp, #96]
  402f9c:	b	402b48 <ferror@plt+0xea8>
  402fa0:	mov	w20, w0
  402fa4:	b	402bf0 <ferror@plt+0xf50>
  402fa8:	mov	w0, w3
  402fac:	str	w5, [sp, #96]
  402fb0:	bl	4019b0 <wcwidth@plt>
  402fb4:	cmp	w0, #0x0
  402fb8:	ldr	w5, [sp, #96]
  402fbc:	ldr	w3, [sp, #164]
  402fc0:	ldr	x2, [sp, #128]
  402fc4:	b.le	402c88 <ferror@plt+0xfe8>
  402fc8:	add	x19, x19, w0, sxtw
  402fcc:	b	402c88 <ferror@plt+0xfe8>
  402fd0:	adrp	x1, 408000 <ferror@plt+0x6360>
  402fd4:	mov	w2, #0x5                   	// #5
  402fd8:	add	x1, x1, #0xb10
  402fdc:	mov	x0, #0x0                   	// #0
  402fe0:	bl	401c00 <dcgettext@plt>
  402fe4:	str	x0, [sp, #152]
  402fe8:	b	402a14 <ferror@plt+0xd74>
  402fec:	mov	w0, #0x1                   	// #1
  402ff0:	mov	w28, w0
  402ff4:	ldr	x0, [sp, #120]
  402ff8:	add	x20, x23, w20, uxtb
  402ffc:	cmp	x0, x19
  403000:	csel	x19, x0, x19, cs  // cs = hs, nlast
  403004:	nop
  403008:	ldrb	w0, [x25, #9]
  40300c:	mov	x3, x24
  403010:	ldr	w1, [sp, #144]
  403014:	mov	x4, x19
  403018:	ldr	x5, [sp, #136]
  40301c:	cmp	w0, w1
  403020:	csel	x27, x27, x24, ls  // ls = plast
  403024:	mov	x1, x20
  403028:	mov	x0, x22
  40302c:	mov	x2, x27
  403030:	bl	4027f0 <ferror@plt+0xb50>
  403034:	ldp	x0, x23, [x25, #32]
  403038:	ldr	x1, [x25, #48]
  40303c:	add	x6, x1, x27
  403040:	add	x22, x0, x22
  403044:	add	x20, x23, x20
  403048:	ldp	x0, x1, [x25, #56]
  40304c:	stp	x22, x20, [x25, #32]
  403050:	add	x24, x0, x24
  403054:	stp	x6, x24, [x25, #48]
  403058:	cmp	x1, x19
  40305c:	b.cs	403064 <ferror@plt+0x13c4>  // b.hs, b.nlast
  403060:	str	x19, [x25, #64]
  403064:	mov	w0, w28
  403068:	mov	x12, #0x40c0                	// #16576
  40306c:	ldp	x29, x30, [sp]
  403070:	ldp	x19, x20, [sp, #16]
  403074:	ldp	x21, x22, [sp, #32]
  403078:	ldp	x23, x24, [sp, #48]
  40307c:	ldp	x25, x26, [sp, #64]
  403080:	ldp	x27, x28, [sp, #80]
  403084:	add	sp, sp, x12
  403088:	ret
  40308c:	bl	401c50 <__errno_location@plt>
  403090:	mov	x3, x0
  403094:	ldr	x2, [sp, #152]
  403098:	mov	w1, #0x3                   	// #3
  40309c:	ldr	w21, [x3]
  4030a0:	mov	w0, #0x0                   	// #0
  4030a4:	mov	w28, #0x0                   	// #0
  4030a8:	bl	406790 <ferror@plt+0x4af0>
  4030ac:	mov	x3, x0
  4030b0:	mov	w1, w21
  4030b4:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  4030b8:	mov	w0, #0x0                   	// #0
  4030bc:	add	x2, x2, #0x200
  4030c0:	bl	4018e0 <error@plt>
  4030c4:	b	402ff4 <ferror@plt+0x1354>
  4030c8:	mov	w0, #0x1                   	// #1
  4030cc:	mov	w28, w0
  4030d0:	cmp	x19, x23
  4030d4:	add	x20, x20, w4, uxtb
  4030d8:	csel	x19, x19, x23, cs  // cs = hs, nlast
  4030dc:	mov	x27, #0x0                   	// #0
  4030e0:	b	403008 <ferror@plt+0x1368>
  4030e4:	str	w4, [sp, #96]
  4030e8:	bl	401c50 <__errno_location@plt>
  4030ec:	mov	x3, x0
  4030f0:	mov	w1, #0x3                   	// #3
  4030f4:	ldr	x2, [sp, #152]
  4030f8:	mov	w0, #0x0                   	// #0
  4030fc:	ldr	w21, [x3]
  403100:	mov	w28, #0x0                   	// #0
  403104:	bl	406790 <ferror@plt+0x4af0>
  403108:	mov	x3, x0
  40310c:	mov	w1, w21
  403110:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  403114:	mov	w0, #0x0                   	// #0
  403118:	add	x2, x2, #0x200
  40311c:	bl	4018e0 <error@plt>
  403120:	ldr	w4, [sp, #96]
  403124:	b	4030d0 <ferror@plt+0x1430>
  403128:	bl	401c50 <__errno_location@plt>
  40312c:	mov	x3, x0
  403130:	ldr	x2, [sp, #152]
  403134:	mov	w1, #0x3                   	// #3
  403138:	ldr	w20, [x3]
  40313c:	mov	w0, #0x0                   	// #0
  403140:	mov	x19, #0x0                   	// #0
  403144:	mov	x27, #0x0                   	// #0
  403148:	bl	406790 <ferror@plt+0x4af0>
  40314c:	mov	x22, #0x0                   	// #0
  403150:	mov	w1, w20
  403154:	mov	x3, x0
  403158:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  40315c:	mov	w0, #0x0                   	// #0
  403160:	add	x2, x2, #0x200
  403164:	mov	x20, #0x0                   	// #0
  403168:	bl	4018e0 <error@plt>
  40316c:	b	403008 <ferror@plt+0x1368>
  403170:	sub	x24, x21, x0
  403174:	mov	x19, #0x0                   	// #0
  403178:	mov	w0, #0x1                   	// #1
  40317c:	mov	x27, #0x0                   	// #0
  403180:	mov	w28, w0
  403184:	mov	x20, #0x0                   	// #0
  403188:	mov	x22, #0x0                   	// #0
  40318c:	b	403008 <ferror@plt+0x1368>
  403190:	ldr	w0, [sp, #116]
  403194:	mov	x1, #0x0                   	// #0
  403198:	mov	w2, #0x1                   	// #1
  40319c:	bl	401930 <lseek@plt>
  4031a0:	mov	x20, x0
  4031a4:	udiv	x1, x21, x22
  4031a8:	msub	x1, x1, x22, x21
  4031ac:	cbz	x1, 403528 <ferror@plt+0x1888>
  4031b0:	cmp	x0, x21
  4031b4:	b.ls	403170 <ferror@plt+0x14d0>  // b.plast
  4031b8:	mov	x19, #0x0                   	// #0
  4031bc:	mov	x24, #0x0                   	// #0
  4031c0:	b	403178 <ferror@plt+0x14d8>
  4031c4:	ldr	w0, [sp, #116]
  4031c8:	mov	w3, #0x2                   	// #2
  4031cc:	mov	x2, #0x0                   	// #0
  4031d0:	mov	x1, #0x0                   	// #0
  4031d4:	bl	403b00 <ferror@plt+0x1e60>
  4031d8:	ldr	w0, [sp, #144]
  4031dc:	eor	w0, w0, #0x1
  4031e0:	tst	w22, w0
  4031e4:	b.eq	4034f8 <ferror@plt+0x1858>  // b.none
  4031e8:	ldrb	w0, [x21, #720]
  4031ec:	cbz	w0, 402a60 <ferror@plt+0xdc0>
  4031f0:	mov	x26, #0x8888888888888888    	// #-8608480567731124088
  4031f4:	add	x21, sp, #0xb0
  4031f8:	mov	w23, #0x0                   	// #0
  4031fc:	mov	x24, #0x0                   	// #0
  403200:	mov	x22, #0x0                   	// #0
  403204:	movk	x26, #0x8889
  403208:	ldr	w0, [sp, #116]
  40320c:	mov	x1, x21
  403210:	mov	x2, #0x4000                	// #16384
  403214:	bl	4075b8 <ferror@plt+0x5918>
  403218:	mov	x27, x0
  40321c:	cbz	x0, 403460 <ferror@plt+0x17c0>
  403220:	cmn	x27, #0x1
  403224:	b.eq	4034ac <ferror@plt+0x180c>  // b.none
  403228:	umulh	x20, x27, x26
  40322c:	add	x24, x24, x27
  403230:	add	x19, x21, x27
  403234:	lsr	x20, x20, #3
  403238:	cbnz	w23, 403474 <ferror@plt+0x17d4>
  40323c:	cmp	x19, x21
  403240:	b.eq	4034f0 <ferror@plt+0x1850>  // b.none
  403244:	sub	x1, x27, #0x1
  403248:	mov	x0, x21
  40324c:	cmp	x1, #0xe
  403250:	b.ls	403504 <ferror@plt+0x1864>  // b.plast
  403254:	movi	v3.4s, #0x0
  403258:	and	x1, x27, #0xfffffffffffffff0
  40325c:	movi	v6.16b, #0x1
  403260:	add	x1, x21, x1
  403264:	nop
  403268:	movi	v0.16b, #0xa
  40326c:	ldr	q1, [x0], #16
  403270:	cmeq	v1.16b, v1.16b, v0.16b
  403274:	cmp	x0, x1
  403278:	and	v1.16b, v6.16b, v1.16b
  40327c:	uxtl	v0.8h, v1.8b
  403280:	uxtl2	v1.8h, v1.16b
  403284:	uxtl	v5.4s, v0.4h
  403288:	uxtl2	v2.4s, v0.8h
  40328c:	uxtl	v4.4s, v1.4h
  403290:	uxtl2	v1.4s, v1.8h
  403294:	uxtl2	v0.2d, v5.4s
  403298:	uaddw	v0.2d, v0.2d, v5.2s
  40329c:	uaddw	v0.2d, v0.2d, v2.2s
  4032a0:	uaddw2	v0.2d, v0.2d, v2.4s
  4032a4:	uaddw	v0.2d, v0.2d, v4.2s
  4032a8:	uaddw2	v0.2d, v0.2d, v4.4s
  4032ac:	uaddw	v0.2d, v0.2d, v1.2s
  4032b0:	uaddw2	v0.2d, v0.2d, v1.4s
  4032b4:	add	v3.2d, v3.2d, v0.2d
  4032b8:	b.ne	403268 <ferror@plt+0x15c8>  // b.any
  4032bc:	addp	d3, v3.2d
  4032c0:	and	x1, x27, #0xfffffffffffffff0
  4032c4:	cmp	x1, x27
  4032c8:	add	x1, x21, x1
  4032cc:	mov	x0, v3.d[0]
  4032d0:	add	x0, x0, x22
  4032d4:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4032d8:	mov	x2, x1
  4032dc:	ldrb	w3, [x2], #1
  4032e0:	cmp	w3, #0xa
  4032e4:	cinc	x0, x0, eq  // eq = none
  4032e8:	cmp	x19, x2
  4032ec:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4032f0:	ldrb	w3, [x1, #1]
  4032f4:	add	x2, x1, #0x2
  4032f8:	cmp	w3, #0xa
  4032fc:	cinc	x0, x0, eq  // eq = none
  403300:	cmp	x19, x2
  403304:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403308:	ldrb	w3, [x1, #2]
  40330c:	add	x2, x1, #0x3
  403310:	cmp	w3, #0xa
  403314:	cinc	x0, x0, eq  // eq = none
  403318:	cmp	x19, x2
  40331c:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403320:	ldrb	w3, [x1, #3]
  403324:	add	x2, x1, #0x4
  403328:	cmp	w3, #0xa
  40332c:	cinc	x0, x0, eq  // eq = none
  403330:	cmp	x19, x2
  403334:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403338:	ldrb	w3, [x1, #4]
  40333c:	add	x2, x1, #0x5
  403340:	cmp	w3, #0xa
  403344:	cinc	x0, x0, eq  // eq = none
  403348:	cmp	x19, x2
  40334c:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403350:	ldrb	w3, [x1, #5]
  403354:	add	x2, x1, #0x6
  403358:	cmp	w3, #0xa
  40335c:	cinc	x0, x0, eq  // eq = none
  403360:	cmp	x19, x2
  403364:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403368:	ldrb	w3, [x1, #6]
  40336c:	add	x2, x1, #0x7
  403370:	cmp	w3, #0xa
  403374:	cinc	x0, x0, eq  // eq = none
  403378:	cmp	x19, x2
  40337c:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403380:	ldrb	w3, [x1, #7]
  403384:	add	x2, x1, #0x8
  403388:	cmp	w3, #0xa
  40338c:	cinc	x0, x0, eq  // eq = none
  403390:	cmp	x19, x2
  403394:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403398:	ldrb	w3, [x1, #8]
  40339c:	add	x2, x1, #0x9
  4033a0:	cmp	w3, #0xa
  4033a4:	cinc	x0, x0, eq  // eq = none
  4033a8:	cmp	x19, x2
  4033ac:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4033b0:	ldrb	w3, [x1, #9]
  4033b4:	add	x2, x1, #0xa
  4033b8:	cmp	w3, #0xa
  4033bc:	cinc	x0, x0, eq  // eq = none
  4033c0:	cmp	x19, x2
  4033c4:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4033c8:	ldrb	w3, [x1, #10]
  4033cc:	add	x2, x1, #0xb
  4033d0:	cmp	w3, #0xa
  4033d4:	cinc	x0, x0, eq  // eq = none
  4033d8:	cmp	x19, x2
  4033dc:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4033e0:	ldrb	w3, [x1, #11]
  4033e4:	add	x2, x1, #0xc
  4033e8:	cmp	w3, #0xa
  4033ec:	cinc	x0, x0, eq  // eq = none
  4033f0:	cmp	x19, x2
  4033f4:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  4033f8:	ldrb	w3, [x1, #12]
  4033fc:	add	x2, x1, #0xd
  403400:	cmp	w3, #0xa
  403404:	cinc	x0, x0, eq  // eq = none
  403408:	cmp	x19, x2
  40340c:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403410:	ldrb	w3, [x1, #13]
  403414:	add	x2, x1, #0xe
  403418:	cmp	w3, #0xa
  40341c:	cinc	x0, x0, eq  // eq = none
  403420:	cmp	x19, x2
  403424:	b.eq	403438 <ferror@plt+0x1798>  // b.none
  403428:	ldrb	w1, [x1, #14]
  40342c:	cmp	w1, #0xa
  403430:	cinc	x0, x0, eq  // eq = none
  403434:	nop
  403438:	sub	x1, x0, x22
  40343c:	mov	x22, x0
  403440:	ldr	w0, [sp, #116]
  403444:	cmp	x20, x1
  403448:	cset	w23, cs  // cs = hs, nlast
  40344c:	mov	x1, x21
  403450:	mov	x2, #0x4000                	// #16384
  403454:	bl	4075b8 <ferror@plt+0x5918>
  403458:	mov	x27, x0
  40345c:	cbnz	x0, 403220 <ferror@plt+0x1580>
  403460:	mov	w0, #0x1                   	// #1
  403464:	mov	x19, #0x0                   	// #0
  403468:	mov	w28, w0
  40346c:	mov	x20, #0x0                   	// #0
  403470:	b	403008 <ferror@plt+0x1368>
  403474:	mov	x23, x22
  403478:	mov	x0, x21
  40347c:	b	403488 <ferror@plt+0x17e8>
  403480:	add	x0, x0, #0x1
  403484:	add	x23, x23, #0x1
  403488:	sub	x2, x19, x0
  40348c:	mov	w1, #0xa                   	// #10
  403490:	bl	401bd0 <memchr@plt>
  403494:	cbnz	x0, 403480 <ferror@plt+0x17e0>
  403498:	sub	x0, x23, x22
  40349c:	mov	x22, x23
  4034a0:	cmp	x20, x0
  4034a4:	cset	w23, cs  // cs = hs, nlast
  4034a8:	b	403208 <ferror@plt+0x1568>
  4034ac:	bl	401c50 <__errno_location@plt>
  4034b0:	mov	x3, x0
  4034b4:	ldr	x2, [sp, #152]
  4034b8:	mov	w1, #0x3                   	// #3
  4034bc:	ldr	w20, [x3]
  4034c0:	mov	w0, #0x0                   	// #0
  4034c4:	mov	x19, #0x0                   	// #0
  4034c8:	mov	x27, #0x0                   	// #0
  4034cc:	bl	406790 <ferror@plt+0x4af0>
  4034d0:	mov	x3, x0
  4034d4:	mov	w1, w20
  4034d8:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  4034dc:	mov	w0, #0x0                   	// #0
  4034e0:	add	x2, x2, #0x200
  4034e4:	mov	x20, #0x0                   	// #0
  4034e8:	bl	4018e0 <error@plt>
  4034ec:	b	403008 <ferror@plt+0x1368>
  4034f0:	mov	w23, #0x1                   	// #1
  4034f4:	b	403208 <ferror@plt+0x1568>
  4034f8:	ldr	w0, [sp, #144]
  4034fc:	cbz	w0, 4031f0 <ferror@plt+0x1550>
  403500:	b	402b10 <ferror@plt+0xe70>
  403504:	mov	x0, x22
  403508:	mov	x1, x21
  40350c:	b	4032d8 <ferror@plt+0x1638>
  403510:	ldr	w0, [sp, #116]
  403514:	mov	w3, #0x2                   	// #2
  403518:	mov	x2, #0x0                   	// #0
  40351c:	mov	x1, #0x0                   	// #0
  403520:	bl	403b00 <ferror@plt+0x1e60>
  403524:	b	4031e8 <ferror@plt+0x1548>
  403528:	mvn	x0, x0
  40352c:	lsr	x0, x0, #63
  403530:	and	w0, w0, #0xff
  403534:	b	402ab0 <ferror@plt+0xe10>
  403538:	stp	x29, x30, [sp, #-176]!
  40353c:	mov	x29, sp
  403540:	stp	x19, x20, [sp, #16]
  403544:	mov	w19, w0
  403548:	stp	x21, x22, [sp, #32]
  40354c:	str	x23, [sp, #48]
  403550:	cbz	w0, 403590 <ferror@plt+0x18f0>
  403554:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403558:	mov	w2, #0x5                   	// #5
  40355c:	adrp	x1, 408000 <ferror@plt+0x6360>
  403560:	add	x1, x1, #0xb38
  403564:	ldr	x20, [x0, #664]
  403568:	mov	x0, #0x0                   	// #0
  40356c:	bl	401c00 <dcgettext@plt>
  403570:	mov	x2, x0
  403574:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x13788>
  403578:	mov	x0, x20
  40357c:	mov	w1, #0x1                   	// #1
  403580:	ldr	x3, [x3, #824]
  403584:	bl	401b30 <__fprintf_chk@plt>
  403588:	mov	w0, w19
  40358c:	bl	4018d0 <exit@plt>
  403590:	mov	w2, #0x5                   	// #5
  403594:	adrp	x1, 408000 <ferror@plt+0x6360>
  403598:	mov	x0, #0x0                   	// #0
  40359c:	add	x1, x1, #0xb60
  4035a0:	bl	401c00 <dcgettext@plt>
  4035a4:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x13788>
  4035a8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x13788>
  4035ac:	mov	x1, x0
  4035b0:	mov	w0, #0x1                   	// #1
  4035b4:	ldr	x3, [x2, #824]
  4035b8:	mov	x2, x3
  4035bc:	bl	401a20 <__printf_chk@plt>
  4035c0:	mov	w2, #0x5                   	// #5
  4035c4:	adrp	x1, 408000 <ferror@plt+0x6360>
  4035c8:	mov	x0, #0x0                   	// #0
  4035cc:	add	x1, x1, #0xba8
  4035d0:	bl	401c00 <dcgettext@plt>
  4035d4:	ldr	x1, [x20, #688]
  4035d8:	bl	401c10 <fputs_unlocked@plt>
  4035dc:	mov	w2, #0x5                   	// #5
  4035e0:	adrp	x1, 408000 <ferror@plt+0x6360>
  4035e4:	mov	x0, #0x0                   	// #0
  4035e8:	add	x1, x1, #0xc60
  4035ec:	bl	401c00 <dcgettext@plt>
  4035f0:	ldr	x1, [x20, #688]
  4035f4:	bl	401c10 <fputs_unlocked@plt>
  4035f8:	mov	w2, #0x5                   	// #5
  4035fc:	adrp	x1, 408000 <ferror@plt+0x6360>
  403600:	mov	x0, #0x0                   	// #0
  403604:	add	x1, x1, #0xc98
  403608:	bl	401c00 <dcgettext@plt>
  40360c:	ldr	x1, [x20, #688]
  403610:	bl	401c10 <fputs_unlocked@plt>
  403614:	mov	w2, #0x5                   	// #5
  403618:	adrp	x1, 408000 <ferror@plt+0x6360>
  40361c:	mov	x0, #0x0                   	// #0
  403620:	add	x1, x1, #0xdc8
  403624:	bl	401c00 <dcgettext@plt>
  403628:	ldr	x1, [x20, #688]
  40362c:	bl	401c10 <fputs_unlocked@plt>
  403630:	mov	w2, #0x5                   	// #5
  403634:	adrp	x1, 408000 <ferror@plt+0x6360>
  403638:	mov	x0, #0x0                   	// #0
  40363c:	add	x1, x1, #0xef8
  403640:	bl	401c00 <dcgettext@plt>
  403644:	ldr	x1, [x20, #688]
  403648:	bl	401c10 <fputs_unlocked@plt>
  40364c:	mov	w2, #0x5                   	// #5
  403650:	adrp	x1, 408000 <ferror@plt+0x6360>
  403654:	mov	x0, #0x0                   	// #0
  403658:	add	x1, x1, #0xf28
  40365c:	bl	401c00 <dcgettext@plt>
  403660:	ldr	x1, [x20, #688]
  403664:	bl	401c10 <fputs_unlocked@plt>
  403668:	adrp	x3, 409000 <_obstack_memory_used@@Base+0x788>
  40366c:	add	x3, x3, #0x248
  403670:	add	x0, x3, #0x8
  403674:	add	x2, sp, #0x40
  403678:	ldp	x4, x5, [x3, #24]
  40367c:	stp	x4, x5, [sp, #80]
  403680:	ldp	x4, x5, [x0, #32]
  403684:	stp	x4, x5, [sp, #96]
  403688:	ldp	x1, x3, [x3, #8]
  40368c:	stp	x1, x3, [sp, #64]
  403690:	ldp	x4, x5, [x0, #48]
  403694:	stp	x4, x5, [sp, #112]
  403698:	ldp	x4, x5, [x0, #64]
  40369c:	stp	x4, x5, [sp, #128]
  4036a0:	ldp	x4, x5, [x0, #80]
  4036a4:	stp	x4, x5, [sp, #144]
  4036a8:	ldp	x4, x5, [x0, #96]
  4036ac:	stp	x4, x5, [sp, #160]
  4036b0:	cbz	x1, 4036e8 <ferror@plt+0x1a48>
  4036b4:	mov	w4, #0x77                  	// #119
  4036b8:	mov	w3, #0x63                  	// #99
  4036bc:	b	4036c8 <ferror@plt+0x1a28>
  4036c0:	ldr	x1, [x2, #16]!
  4036c4:	cbz	x1, 4036e8 <ferror@plt+0x1a48>
  4036c8:	ldrb	w0, [x1]
  4036cc:	cmp	w4, w0
  4036d0:	b.ne	4036c0 <ferror@plt+0x1a20>  // b.any
  4036d4:	ldrb	w0, [x1, #1]
  4036d8:	cmp	w3, w0
  4036dc:	b.ne	4036c0 <ferror@plt+0x1a20>  // b.any
  4036e0:	ldrb	w0, [x1, #2]
  4036e4:	cbnz	w0, 4036c0 <ferror@plt+0x1a20>
  4036e8:	ldr	x21, [x2, #8]
  4036ec:	adrp	x1, 408000 <ferror@plt+0x6360>
  4036f0:	mov	x0, #0x0                   	// #0
  4036f4:	add	x1, x1, #0xf60
  4036f8:	mov	w2, #0x5                   	// #5
  4036fc:	cbz	x21, 4037b8 <ferror@plt+0x1b18>
  403700:	bl	401c00 <dcgettext@plt>
  403704:	adrp	x22, 408000 <ferror@plt+0x6360>
  403708:	add	x22, x22, #0xf78
  40370c:	adrp	x2, 408000 <ferror@plt+0x6360>
  403710:	mov	x3, x22
  403714:	add	x2, x2, #0xfa0
  403718:	mov	x1, x0
  40371c:	mov	w0, #0x1                   	// #1
  403720:	bl	401a20 <__printf_chk@plt>
  403724:	mov	x1, #0x0                   	// #0
  403728:	mov	w0, #0x5                   	// #5
  40372c:	bl	401c90 <setlocale@plt>
  403730:	cbz	x0, 403880 <ferror@plt+0x1be0>
  403734:	adrp	x1, 408000 <ferror@plt+0x6360>
  403738:	mov	x2, #0x3                   	// #3
  40373c:	add	x1, x1, #0xfb0
  403740:	adrp	x23, 408000 <ferror@plt+0x6360>
  403744:	bl	4019e0 <strncmp@plt>
  403748:	add	x23, x23, #0xb20
  40374c:	cbnz	w0, 403860 <ferror@plt+0x1bc0>
  403750:	mov	w2, #0x5                   	// #5
  403754:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403758:	mov	x0, #0x0                   	// #0
  40375c:	add	x1, x1, #0x0
  403760:	bl	401c00 <dcgettext@plt>
  403764:	mov	x1, x0
  403768:	mov	x3, x23
  40376c:	mov	x2, x22
  403770:	mov	w0, #0x1                   	// #1
  403774:	bl	401a20 <__printf_chk@plt>
  403778:	mov	w2, #0x5                   	// #5
  40377c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403780:	mov	x0, #0x0                   	// #0
  403784:	add	x1, x1, #0x20
  403788:	bl	401c00 <dcgettext@plt>
  40378c:	mov	x1, x0
  403790:	cmp	x21, x23
  403794:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  403798:	adrp	x3, 408000 <ferror@plt+0x6360>
  40379c:	add	x2, x2, #0xbb0
  4037a0:	add	x3, x3, #0xb28
  4037a4:	csel	x3, x3, x2, eq  // eq = none
  4037a8:	mov	x2, x21
  4037ac:	mov	w0, #0x1                   	// #1
  4037b0:	bl	401a20 <__printf_chk@plt>
  4037b4:	b	403588 <ferror@plt+0x18e8>
  4037b8:	bl	401c00 <dcgettext@plt>
  4037bc:	adrp	x22, 408000 <ferror@plt+0x6360>
  4037c0:	add	x22, x22, #0xf78
  4037c4:	adrp	x2, 408000 <ferror@plt+0x6360>
  4037c8:	mov	x3, x22
  4037cc:	add	x2, x2, #0xfa0
  4037d0:	mov	x1, x0
  4037d4:	mov	w0, #0x1                   	// #1
  4037d8:	bl	401a20 <__printf_chk@plt>
  4037dc:	mov	x1, #0x0                   	// #0
  4037e0:	mov	w0, #0x5                   	// #5
  4037e4:	bl	401c90 <setlocale@plt>
  4037e8:	cbz	x0, 403800 <ferror@plt+0x1b60>
  4037ec:	adrp	x1, 408000 <ferror@plt+0x6360>
  4037f0:	mov	x2, #0x3                   	// #3
  4037f4:	add	x1, x1, #0xfb0
  4037f8:	bl	4019e0 <strncmp@plt>
  4037fc:	cbnz	w0, 403854 <ferror@plt+0x1bb4>
  403800:	mov	w2, #0x5                   	// #5
  403804:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403808:	mov	x0, #0x0                   	// #0
  40380c:	add	x1, x1, #0x0
  403810:	adrp	x21, 408000 <ferror@plt+0x6360>
  403814:	bl	401c00 <dcgettext@plt>
  403818:	add	x21, x21, #0xb20
  40381c:	mov	x1, x0
  403820:	mov	x3, x21
  403824:	mov	x2, x22
  403828:	mov	w0, #0x1                   	// #1
  40382c:	bl	401a20 <__printf_chk@plt>
  403830:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403834:	mov	w2, #0x5                   	// #5
  403838:	add	x1, x1, #0x20
  40383c:	mov	x0, #0x0                   	// #0
  403840:	bl	401c00 <dcgettext@plt>
  403844:	mov	x1, x0
  403848:	adrp	x3, 408000 <ferror@plt+0x6360>
  40384c:	add	x3, x3, #0xb28
  403850:	b	4037a8 <ferror@plt+0x1b08>
  403854:	adrp	x23, 408000 <ferror@plt+0x6360>
  403858:	add	x23, x23, #0xb20
  40385c:	mov	x21, x23
  403860:	mov	w2, #0x5                   	// #5
  403864:	adrp	x1, 408000 <ferror@plt+0x6360>
  403868:	mov	x0, #0x0                   	// #0
  40386c:	add	x1, x1, #0xfb8
  403870:	bl	401c00 <dcgettext@plt>
  403874:	ldr	x1, [x20, #688]
  403878:	bl	401c10 <fputs_unlocked@plt>
  40387c:	b	403750 <ferror@plt+0x1ab0>
  403880:	adrp	x23, 408000 <ferror@plt+0x6360>
  403884:	add	x23, x23, #0xb20
  403888:	b	403750 <ferror@plt+0x1ab0>
  40388c:	nop
  403890:	stp	x29, x30, [sp, #-32]!
  403894:	mov	x1, x0
  403898:	mov	x0, #0x30                  	// #48
  40389c:	mov	x29, sp
  4038a0:	str	d8, [sp, #16]
  4038a4:	fmov	d8, x1
  4038a8:	bl	4019a0 <malloc@plt>
  4038ac:	cbz	x0, 4038bc <ferror@plt+0x1c1c>
  4038b0:	dup	v8.2d, v8.d[0]
  4038b4:	str	xzr, [x0]
  4038b8:	str	q8, [x0, #32]
  4038bc:	ldr	d8, [sp, #16]
  4038c0:	ldp	x29, x30, [sp], #32
  4038c4:	ret
  4038c8:	stp	x29, x30, [sp, #-32]!
  4038cc:	mov	x29, sp
  4038d0:	str	x19, [sp, #16]
  4038d4:	mov	x19, x0
  4038d8:	mov	x0, #0x30                  	// #48
  4038dc:	bl	4019a0 <malloc@plt>
  4038e0:	cbz	x0, 4038f0 <ferror@plt+0x1c50>
  4038e4:	stp	x19, xzr, [x0]
  4038e8:	stp	xzr, xzr, [x0, #16]
  4038ec:	str	xzr, [x0, #32]
  4038f0:	ldr	x19, [sp, #16]
  4038f4:	ldp	x29, x30, [sp], #32
  4038f8:	ret
  4038fc:	nop
  403900:	stp	x29, x30, [sp, #-32]!
  403904:	mov	x29, sp
  403908:	ldr	x3, [x0]
  40390c:	stp	x19, x20, [sp, #16]
  403910:	mov	x19, x0
  403914:	mov	x20, x1
  403918:	cbz	x3, 403954 <ferror@plt+0x1cb4>
  40391c:	add	x1, x0, #0x18
  403920:	mov	w2, #0x0                   	// #0
  403924:	add	x0, x0, #0x10
  403928:	bl	4019c0 <getdelim@plt>
  40392c:	tbnz	x0, #63, 40397c <ferror@plt+0x1cdc>
  403930:	ldr	x0, [x19, #8]
  403934:	mov	w1, #0x1                   	// #1
  403938:	str	w1, [x20]
  40393c:	add	x0, x0, #0x1
  403940:	str	x0, [x19, #8]
  403944:	ldr	x0, [x19, #16]
  403948:	ldp	x19, x20, [sp, #16]
  40394c:	ldp	x29, x30, [sp], #32
  403950:	ret
  403954:	ldr	x1, [x0, #40]
  403958:	ldr	x0, [x1]
  40395c:	cbz	x0, 4039a0 <ferror@plt+0x1d00>
  403960:	mov	w2, #0x1                   	// #1
  403964:	str	w2, [x20]
  403968:	add	x1, x1, #0x8
  40396c:	str	x1, [x19, #40]
  403970:	ldp	x19, x20, [sp, #16]
  403974:	ldp	x29, x30, [sp], #32
  403978:	ret
  40397c:	ldr	x0, [x19]
  403980:	bl	401af0 <feof@plt>
  403984:	cmp	w0, #0x0
  403988:	mov	w1, #0x2                   	// #2
  40398c:	mov	w2, #0x4                   	// #4
  403990:	mov	x0, #0x0                   	// #0
  403994:	csel	w1, w1, w2, ne  // ne = any
  403998:	str	w1, [x20]
  40399c:	b	403948 <ferror@plt+0x1ca8>
  4039a0:	mov	w1, #0x2                   	// #2
  4039a4:	str	w1, [x20]
  4039a8:	b	403948 <ferror@plt+0x1ca8>
  4039ac:	nop
  4039b0:	ldr	x1, [x0]
  4039b4:	cbz	x1, 4039c0 <ferror@plt+0x1d20>
  4039b8:	ldr	x0, [x0, #8]
  4039bc:	ret
  4039c0:	ldp	x1, x0, [x0, #32]
  4039c4:	sub	x0, x0, x1
  4039c8:	asr	x0, x0, #3
  4039cc:	ret
  4039d0:	stp	x29, x30, [sp, #-32]!
  4039d4:	mov	x29, sp
  4039d8:	str	x19, [sp, #16]
  4039dc:	mov	x19, x0
  4039e0:	ldr	x0, [x0]
  4039e4:	cbz	x0, 4039f0 <ferror@plt+0x1d50>
  4039e8:	ldr	x0, [x19, #16]
  4039ec:	bl	401b70 <free@plt>
  4039f0:	mov	x0, x19
  4039f4:	ldr	x19, [sp, #16]
  4039f8:	ldp	x29, x30, [sp], #32
  4039fc:	b	401b70 <free@plt>
  403a00:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  403a04:	str	x0, [x1, #808]
  403a08:	ret
  403a0c:	nop
  403a10:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  403a14:	strb	w0, [x1, #816]
  403a18:	ret
  403a1c:	nop
  403a20:	stp	x29, x30, [sp, #-48]!
  403a24:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403a28:	mov	x29, sp
  403a2c:	ldr	x0, [x0, #688]
  403a30:	bl	4088a0 <_obstack_memory_used@@Base+0x28>
  403a34:	cbz	w0, 403a6c <ferror@plt+0x1dcc>
  403a38:	stp	x19, x20, [sp, #16]
  403a3c:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x13788>
  403a40:	add	x0, x20, #0x328
  403a44:	str	x21, [sp, #32]
  403a48:	ldrb	w21, [x0, #8]
  403a4c:	bl	401c50 <__errno_location@plt>
  403a50:	mov	x19, x0
  403a54:	cbz	w21, 403a84 <ferror@plt+0x1de4>
  403a58:	ldr	w0, [x0]
  403a5c:	cmp	w0, #0x20
  403a60:	b.ne	403a84 <ferror@plt+0x1de4>  // b.any
  403a64:	ldp	x19, x20, [sp, #16]
  403a68:	ldr	x21, [sp, #32]
  403a6c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403a70:	ldr	x0, [x0, #664]
  403a74:	bl	4088a0 <_obstack_memory_used@@Base+0x28>
  403a78:	cbnz	w0, 403ad8 <ferror@plt+0x1e38>
  403a7c:	ldp	x29, x30, [sp], #48
  403a80:	ret
  403a84:	mov	w2, #0x5                   	// #5
  403a88:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403a8c:	mov	x0, #0x0                   	// #0
  403a90:	add	x1, x1, #0x3f0
  403a94:	bl	401c00 <dcgettext@plt>
  403a98:	ldr	x2, [x20, #808]
  403a9c:	mov	x20, x0
  403aa0:	cbz	x2, 403ae4 <ferror@plt+0x1e44>
  403aa4:	ldr	w19, [x19]
  403aa8:	mov	x0, x2
  403aac:	bl	406470 <ferror@plt+0x47d0>
  403ab0:	mov	x3, x0
  403ab4:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  403ab8:	mov	w1, w19
  403abc:	mov	x4, x20
  403ac0:	add	x2, x2, #0x400
  403ac4:	mov	w0, #0x0                   	// #0
  403ac8:	bl	4018e0 <error@plt>
  403acc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403ad0:	ldr	w0, [x0, #552]
  403ad4:	bl	4018b0 <_exit@plt>
  403ad8:	stp	x19, x20, [sp, #16]
  403adc:	str	x21, [sp, #32]
  403ae0:	b	403acc <ferror@plt+0x1e2c>
  403ae4:	ldr	w1, [x19]
  403ae8:	mov	x3, x0
  403aec:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  403af0:	mov	w0, #0x0                   	// #0
  403af4:	add	x2, x2, #0x200
  403af8:	bl	4018e0 <error@plt>
  403afc:	b	403acc <ferror@plt+0x1e2c>
  403b00:	b	401ac0 <posix_fadvise@plt>
  403b04:	nop
  403b08:	cbz	x0, 403b38 <ferror@plt+0x1e98>
  403b0c:	stp	x29, x30, [sp, #-32]!
  403b10:	mov	x29, sp
  403b14:	str	x19, [sp, #16]
  403b18:	mov	w19, w1
  403b1c:	bl	401950 <fileno@plt>
  403b20:	mov	w3, w19
  403b24:	mov	x2, #0x0                   	// #0
  403b28:	ldr	x19, [sp, #16]
  403b2c:	mov	x1, #0x0                   	// #0
  403b30:	ldp	x29, x30, [sp], #32
  403b34:	b	401ac0 <posix_fadvise@plt>
  403b38:	ret
  403b3c:	nop
  403b40:	mov	x3, x0
  403b44:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  403b48:	add	x0, x1, #0x14
  403b4c:	movk	x4, #0xcccd
  403b50:	strb	wzr, [x1, #20]
  403b54:	nop
  403b58:	umulh	x2, x3, x4
  403b5c:	cmp	x3, #0x9
  403b60:	lsr	x2, x2, #3
  403b64:	add	x1, x2, x2, lsl #2
  403b68:	sub	x1, x3, x1, lsl #1
  403b6c:	mov	x3, x2
  403b70:	add	w1, w1, #0x30
  403b74:	strb	w1, [x0, #-1]!
  403b78:	b.hi	403b58 <ferror@plt+0x1eb8>  // b.pmore
  403b7c:	ret
  403b80:	stp	x29, x30, [sp, #-32]!
  403b84:	mov	x29, sp
  403b88:	str	x19, [sp, #16]
  403b8c:	mov	w19, w0
  403b90:	bl	4019b0 <wcwidth@plt>
  403b94:	tbz	w0, #31, 403ba8 <ferror@plt+0x1f08>
  403b98:	mov	w0, w19
  403b9c:	bl	401910 <iswcntrl@plt>
  403ba0:	cmp	w0, #0x0
  403ba4:	cset	w0, eq  // eq = none
  403ba8:	ldr	x19, [sp, #16]
  403bac:	ldp	x29, x30, [sp], #32
  403bb0:	ret
  403bb4:	nop
  403bb8:	stp	x29, x30, [sp, #-32]!
  403bbc:	mov	x29, sp
  403bc0:	stp	x19, x20, [sp, #16]
  403bc4:	mov	x20, x0
  403bc8:	mov	x0, x1
  403bcc:	mov	x19, x1
  403bd0:	ldr	x2, [x1, #8]
  403bd4:	ldr	x1, [x0], #24
  403bd8:	cmp	x1, x0
  403bdc:	b.eq	403c08 <ferror@plt+0x1f68>  // b.none
  403be0:	str	x1, [x20]
  403be4:	ldrb	w0, [x19, #16]
  403be8:	str	x2, [x20, #8]
  403bec:	strb	w0, [x20, #16]
  403bf0:	cbz	w0, 403bfc <ferror@plt+0x1f5c>
  403bf4:	ldr	w0, [x19, #20]
  403bf8:	str	w0, [x20, #20]
  403bfc:	ldp	x19, x20, [sp, #16]
  403c00:	ldp	x29, x30, [sp], #32
  403c04:	ret
  403c08:	add	x3, x20, #0x18
  403c0c:	mov	x0, x3
  403c10:	bl	4018a0 <memcpy@plt>
  403c14:	ldr	x2, [x19, #8]
  403c18:	str	x0, [x20]
  403c1c:	b	403be4 <ferror@plt+0x1f44>
  403c20:	ubfx	x2, x0, #5, #3
  403c24:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403c28:	add	x1, x1, #0x410
  403c2c:	ldr	w1, [x1, x2, lsl #2]
  403c30:	lsr	w0, w1, w0
  403c34:	and	w0, w0, #0x1
  403c38:	ret
  403c3c:	nop
  403c40:	stp	x29, x30, [sp, #-144]!
  403c44:	mov	w0, #0x55                  	// #85
  403c48:	mov	x29, sp
  403c4c:	str	d8, [sp, #16]
  403c50:	bl	401be0 <sysconf@plt>
  403c54:	mov	x1, x0
  403c58:	mov	w0, #0x1e                  	// #30
  403c5c:	scvtf	d8, x1
  403c60:	bl	401be0 <sysconf@plt>
  403c64:	fcmpe	d8, #0.0
  403c68:	b.lt	403c7c <ferror@plt+0x1fdc>  // b.tstop
  403c6c:	fmov	d0, x0
  403c70:	scvtf	d0, d0
  403c74:	fcmpe	d0, #0.0
  403c78:	b.ge	403cac <ferror@plt+0x200c>  // b.tcont
  403c7c:	add	x0, sp, #0x20
  403c80:	bl	4018f0 <sysinfo@plt>
  403c84:	mov	x1, #0x4190000000000000    	// #4724276009111650304
  403c88:	fmov	d0, x1
  403c8c:	cbz	w0, 403c9c <ferror@plt+0x1ffc>
  403c90:	ldr	d8, [sp, #16]
  403c94:	ldp	x29, x30, [sp], #144
  403c98:	ret
  403c9c:	ldr	d0, [sp, #64]
  403ca0:	ldr	w0, [sp, #136]
  403ca4:	ucvtf	d0, d0
  403ca8:	ucvtf	d8, w0
  403cac:	fmul	d0, d0, d8
  403cb0:	ldr	d8, [sp, #16]
  403cb4:	ldp	x29, x30, [sp], #144
  403cb8:	ret
  403cbc:	nop
  403cc0:	stp	x29, x30, [sp, #-144]!
  403cc4:	mov	w0, #0x56                  	// #86
  403cc8:	mov	x29, sp
  403ccc:	str	d8, [sp, #16]
  403cd0:	bl	401be0 <sysconf@plt>
  403cd4:	mov	x1, x0
  403cd8:	mov	w0, #0x1e                  	// #30
  403cdc:	scvtf	d8, x1
  403ce0:	bl	401be0 <sysconf@plt>
  403ce4:	fcmpe	d8, #0.0
  403ce8:	b.lt	403cfc <ferror@plt+0x205c>  // b.tstop
  403cec:	fmov	d0, x0
  403cf0:	scvtf	d0, d0
  403cf4:	fcmpe	d0, #0.0
  403cf8:	b.ge	403d24 <ferror@plt+0x2084>  // b.tcont
  403cfc:	add	x0, sp, #0x20
  403d00:	bl	4018f0 <sysinfo@plt>
  403d04:	cbnz	w0, 403d34 <ferror@plt+0x2094>
  403d08:	ldr	d0, [sp, #72]
  403d0c:	ldr	d1, [sp, #88]
  403d10:	ucvtf	d0, d0
  403d14:	ldr	w0, [sp, #136]
  403d18:	ucvtf	d1, d1
  403d1c:	ucvtf	d8, w0
  403d20:	fadd	d0, d0, d1
  403d24:	fmul	d0, d0, d8
  403d28:	ldr	d8, [sp, #16]
  403d2c:	ldp	x29, x30, [sp], #144
  403d30:	ret
  403d34:	mov	w0, #0x55                  	// #85
  403d38:	bl	401be0 <sysconf@plt>
  403d3c:	mov	x1, x0
  403d40:	mov	w0, #0x1e                  	// #30
  403d44:	scvtf	d8, x1
  403d48:	bl	401be0 <sysconf@plt>
  403d4c:	fcmpe	d8, #0.0
  403d50:	fmov	d0, x0
  403d54:	b.lt	403d64 <ferror@plt+0x20c4>  // b.tstop
  403d58:	scvtf	d0, d0
  403d5c:	fcmpe	d0, #0.0
  403d60:	b.ge	403d98 <ferror@plt+0x20f8>  // b.tcont
  403d64:	add	x0, sp, #0x20
  403d68:	bl	4018f0 <sysinfo@plt>
  403d6c:	mov	x1, #0x4170000000000000    	// #4715268809856909312
  403d70:	fmov	d0, x1
  403d74:	cbnz	w0, 403d28 <ferror@plt+0x2088>
  403d78:	ldr	d0, [sp, #64]
  403d7c:	fmov	d1, #2.500000000000000000e-01
  403d80:	ldr	w0, [sp, #136]
  403d84:	ucvtf	d0, d0
  403d88:	ucvtf	d8, w0
  403d8c:	fmul	d0, d0, d8
  403d90:	fmul	d0, d0, d1
  403d94:	b	403d28 <ferror@plt+0x2088>
  403d98:	fmul	d8, d8, d0
  403d9c:	fmov	d0, #2.500000000000000000e-01
  403da0:	fmul	d0, d8, d0
  403da4:	ldr	d8, [sp, #16]
  403da8:	ldp	x29, x30, [sp], #144
  403dac:	ret
  403db0:	stp	x29, x30, [sp, #-48]!
  403db4:	mov	x29, sp
  403db8:	stp	x19, x20, [sp, #16]
  403dbc:	cbz	x0, 403e94 <ferror@plt+0x21f4>
  403dc0:	mov	x19, x0
  403dc4:	mov	w1, #0x2f                  	// #47
  403dc8:	bl	401a80 <strrchr@plt>
  403dcc:	mov	x20, x0
  403dd0:	cbz	x0, 403e34 <ferror@plt+0x2194>
  403dd4:	str	x21, [sp, #32]
  403dd8:	add	x21, x0, #0x1
  403ddc:	sub	x0, x21, x19
  403de0:	cmp	x0, #0x6
  403de4:	b.le	403e50 <ferror@plt+0x21b0>
  403de8:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  403dec:	sub	x0, x20, #0x6
  403df0:	add	x1, x1, #0x468
  403df4:	mov	x2, #0x7                   	// #7
  403df8:	bl	4019e0 <strncmp@plt>
  403dfc:	cbnz	w0, 403e50 <ferror@plt+0x21b0>
  403e00:	ldrb	w0, [x20, #1]
  403e04:	cmp	w0, #0x6c
  403e08:	b.ne	403e70 <ferror@plt+0x21d0>  // b.any
  403e0c:	ldrb	w0, [x21, #1]
  403e10:	cmp	w0, #0x74
  403e14:	b.ne	403e70 <ferror@plt+0x21d0>  // b.any
  403e18:	ldrb	w0, [x21, #2]
  403e1c:	cmp	w0, #0x2d
  403e20:	b.ne	403e70 <ferror@plt+0x21d0>  // b.any
  403e24:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e28:	add	x19, x20, #0x4
  403e2c:	ldr	x21, [sp, #32]
  403e30:	str	x19, [x0, #704]
  403e34:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e38:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e3c:	str	x19, [x1, #824]
  403e40:	str	x19, [x0, #656]
  403e44:	ldp	x19, x20, [sp, #16]
  403e48:	ldp	x29, x30, [sp], #48
  403e4c:	ret
  403e50:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e54:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e58:	ldr	x21, [sp, #32]
  403e5c:	str	x19, [x1, #824]
  403e60:	str	x19, [x0, #656]
  403e64:	ldp	x19, x20, [sp, #16]
  403e68:	ldp	x29, x30, [sp], #48
  403e6c:	ret
  403e70:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e74:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e78:	mov	x19, x21
  403e7c:	str	x19, [x1, #824]
  403e80:	str	x19, [x0, #656]
  403e84:	ldp	x19, x20, [sp, #16]
  403e88:	ldr	x21, [sp, #32]
  403e8c:	ldp	x29, x30, [sp], #48
  403e90:	ret
  403e94:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x13788>
  403e98:	mov	x2, #0x37                  	// #55
  403e9c:	mov	x1, #0x1                   	// #1
  403ea0:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  403ea4:	ldr	x3, [x3, #664]
  403ea8:	add	x0, x0, #0x430
  403eac:	str	x21, [sp, #32]
  403eb0:	bl	401ba0 <fwrite@plt>
  403eb4:	bl	401ab0 <abort@plt>
  403eb8:	stp	x29, x30, [sp, #-48]!
  403ebc:	mov	w2, #0x5                   	// #5
  403ec0:	mov	x29, sp
  403ec4:	stp	x19, x20, [sp, #16]
  403ec8:	mov	x20, x0
  403ecc:	str	x21, [sp, #32]
  403ed0:	mov	w21, w1
  403ed4:	mov	x1, x0
  403ed8:	mov	x0, #0x0                   	// #0
  403edc:	bl	401c00 <dcgettext@plt>
  403ee0:	mov	x19, x0
  403ee4:	cmp	x20, x0
  403ee8:	b.eq	403f00 <ferror@plt+0x2260>  // b.none
  403eec:	mov	x0, x19
  403ef0:	ldp	x19, x20, [sp, #16]
  403ef4:	ldr	x21, [sp, #32]
  403ef8:	ldp	x29, x30, [sp], #48
  403efc:	ret
  403f00:	bl	408970 <_obstack_memory_used@@Base+0xf8>
  403f04:	ldrb	w1, [x0]
  403f08:	and	w1, w1, #0xffffffdf
  403f0c:	cmp	w1, #0x55
  403f10:	b.ne	403f74 <ferror@plt+0x22d4>  // b.any
  403f14:	ldrb	w1, [x0, #1]
  403f18:	and	w1, w1, #0xffffffdf
  403f1c:	cmp	w1, #0x54
  403f20:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f24:	ldrb	w1, [x0, #2]
  403f28:	and	w1, w1, #0xffffffdf
  403f2c:	cmp	w1, #0x46
  403f30:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f34:	ldrb	w1, [x0, #3]
  403f38:	cmp	w1, #0x2d
  403f3c:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f40:	ldrb	w1, [x0, #4]
  403f44:	cmp	w1, #0x38
  403f48:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f4c:	ldrb	w0, [x0, #5]
  403f50:	cbnz	w0, 403ff0 <ferror@plt+0x2350>
  403f54:	ldrb	w1, [x19]
  403f58:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  403f5c:	adrp	x19, 409000 <_obstack_memory_used@@Base+0x788>
  403f60:	add	x0, x0, #0x478
  403f64:	cmp	w1, #0x60
  403f68:	add	x19, x19, #0x490
  403f6c:	csel	x19, x19, x0, eq  // eq = none
  403f70:	b	403eec <ferror@plt+0x224c>
  403f74:	cmp	w1, #0x47
  403f78:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f7c:	ldrb	w1, [x0, #1]
  403f80:	and	w1, w1, #0xffffffdf
  403f84:	cmp	w1, #0x42
  403f88:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f8c:	ldrb	w1, [x0, #2]
  403f90:	cmp	w1, #0x31
  403f94:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403f98:	ldrb	w1, [x0, #3]
  403f9c:	cmp	w1, #0x38
  403fa0:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403fa4:	ldrb	w1, [x0, #4]
  403fa8:	cmp	w1, #0x30
  403fac:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403fb0:	ldrb	w1, [x0, #5]
  403fb4:	cmp	w1, #0x33
  403fb8:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403fbc:	ldrb	w1, [x0, #6]
  403fc0:	cmp	w1, #0x30
  403fc4:	b.ne	403ff0 <ferror@plt+0x2350>  // b.any
  403fc8:	ldrb	w0, [x0, #7]
  403fcc:	cbnz	w0, 403ff0 <ferror@plt+0x2350>
  403fd0:	ldrb	w1, [x19]
  403fd4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  403fd8:	adrp	x19, 409000 <_obstack_memory_used@@Base+0x788>
  403fdc:	add	x0, x0, #0x480
  403fe0:	cmp	w1, #0x60
  403fe4:	add	x19, x19, #0x488
  403fe8:	csel	x19, x19, x0, eq  // eq = none
  403fec:	b	403eec <ferror@plt+0x224c>
  403ff0:	cmp	w21, #0x9
  403ff4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  403ff8:	adrp	x19, 409000 <_obstack_memory_used@@Base+0x788>
  403ffc:	add	x0, x0, #0x498
  404000:	add	x19, x19, #0x470
  404004:	csel	x19, x19, x0, eq  // eq = none
  404008:	mov	x0, x19
  40400c:	ldp	x19, x20, [sp, #16]
  404010:	ldr	x21, [sp, #32]
  404014:	ldp	x29, x30, [sp], #48
  404018:	ret
  40401c:	nop
  404020:	sub	sp, sp, #0x100
  404024:	stp	x29, x30, [sp, #16]
  404028:	add	x29, sp, #0x10
  40402c:	stp	x19, x20, [sp, #32]
  404030:	mov	w19, w5
  404034:	and	w20, w5, #0x2
  404038:	stp	x21, x22, [sp, #48]
  40403c:	mov	w21, w4
  404040:	stp	x23, x24, [sp, #64]
  404044:	mov	x23, x1
  404048:	mov	x24, x3
  40404c:	stp	x25, x26, [sp, #80]
  404050:	mov	x26, x6
  404054:	stp	x27, x28, [sp, #96]
  404058:	mov	x28, x0
  40405c:	mov	x27, x2
  404060:	str	w4, [sp, #116]
  404064:	str	w5, [sp, #184]
  404068:	str	x7, [sp, #200]
  40406c:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  404070:	mov	x1, x19
  404074:	str	x0, [sp, #176]
  404078:	cmp	w21, #0x4
  40407c:	ubfx	x10, x1, #1, #1
  404080:	b.eq	404d10 <ferror@plt+0x3070>  // b.none
  404084:	ldr	w0, [sp, #116]
  404088:	b.ls	404418 <ferror@plt+0x2778>  // b.plast
  40408c:	cmp	w0, #0x7
  404090:	b.eq	404d7c <ferror@plt+0x30dc>  // b.none
  404094:	b.ls	404a24 <ferror@plt+0x2d84>  // b.plast
  404098:	ldr	w0, [sp, #116]
  40409c:	sub	w0, w0, #0x8
  4040a0:	cmp	w0, #0x2
  4040a4:	b.hi	4051bc <ferror@plt+0x351c>  // b.pmore
  4040a8:	ldr	w19, [sp, #116]
  4040ac:	cmp	w19, #0xa
  4040b0:	b.ne	404c08 <ferror@plt+0x2f68>  // b.any
  4040b4:	mov	x19, #0x0                   	// #0
  4040b8:	cbz	w20, 404ffc <ferror@plt+0x335c>
  4040bc:	ldr	x0, [sp, #256]
  4040c0:	str	w10, [sp, #124]
  4040c4:	mov	w25, #0x0                   	// #0
  4040c8:	bl	4018c0 <strlen@plt>
  4040cc:	cmp	x0, #0x0
  4040d0:	ldr	w10, [sp, #124]
  4040d4:	mov	x12, x0
  4040d8:	mov	w11, #0x1                   	// #1
  4040dc:	mov	w5, w11
  4040e0:	csel	w0, w10, wzr, ne  // ne = any
  4040e4:	str	w0, [sp, #208]
  4040e8:	ldr	w0, [sp, #184]
  4040ec:	mov	w7, #0x0                   	// #0
  4040f0:	stp	w11, wzr, [sp, #120]
  4040f4:	and	w1, w0, w11
  4040f8:	and	w0, w0, #0x4
  4040fc:	stp	w1, w0, [sp, #212]
  404100:	ldr	x0, [sp, #256]
  404104:	str	wzr, [sp, #144]
  404108:	str	x0, [sp, #168]
  40410c:	str	wzr, [sp, #188]
  404110:	str	xzr, [sp, #192]
  404114:	nop
  404118:	mov	x4, x26
  40411c:	mov	w26, w5
  404120:	mov	x20, #0x0                   	// #0
  404124:	nop
  404128:	cmp	x24, x20
  40412c:	cset	w21, ne  // ne = any
  404130:	cmn	x24, #0x1
  404134:	b.eq	404488 <ferror@plt+0x27e8>  // b.none
  404138:	cbz	w21, 404498 <ferror@plt+0x27f8>
  40413c:	add	x3, x27, x20
  404140:	cbz	w11, 40474c <ferror@plt+0x2aac>
  404144:	cbz	x12, 4048f8 <ferror@plt+0x2c58>
  404148:	cmp	x12, #0x1
  40414c:	add	x22, x20, x12
  404150:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  404154:	b.ne	404184 <ferror@plt+0x24e4>  // b.any
  404158:	mov	x0, x27
  40415c:	stp	x3, x12, [sp, #128]
  404160:	stp	w10, w7, [sp, #148]
  404164:	str	w11, [sp, #156]
  404168:	str	x4, [sp, #160]
  40416c:	bl	4018c0 <strlen@plt>
  404170:	ldp	x3, x12, [sp, #128]
  404174:	mov	x24, x0
  404178:	ldp	w10, w7, [sp, #148]
  40417c:	ldr	w11, [sp, #156]
  404180:	ldr	x4, [sp, #160]
  404184:	cmp	x22, x24
  404188:	b.hi	4048f8 <ferror@plt+0x2c58>  // b.pmore
  40418c:	ldr	x1, [sp, #168]
  404190:	mov	x2, x12
  404194:	mov	x0, x3
  404198:	stp	x3, x12, [sp, #128]
  40419c:	stp	w10, w7, [sp, #148]
  4041a0:	str	w11, [sp, #156]
  4041a4:	str	x4, [sp, #160]
  4041a8:	bl	401b00 <memcmp@plt>
  4041ac:	ldp	w10, w7, [sp, #148]
  4041b0:	ldr	w11, [sp, #156]
  4041b4:	ldp	x3, x12, [sp, #128]
  4041b8:	ldr	x4, [sp, #160]
  4041bc:	cbnz	w0, 4048f8 <ferror@plt+0x2c58>
  4041c0:	cbnz	w10, 4046dc <ferror@plt+0x2a3c>
  4041c4:	ldrb	w22, [x3]
  4041c8:	cmp	w22, #0x7e
  4041cc:	b.ls	404534 <ferror@plt+0x2894>  // b.plast
  4041d0:	ldr	x0, [sp, #176]
  4041d4:	mov	w5, w11
  4041d8:	cmp	x0, #0x1
  4041dc:	b.eq	404768 <ferror@plt+0x2ac8>  // b.none
  4041e0:	str	xzr, [sp, #248]
  4041e4:	cmn	x24, #0x1
  4041e8:	b.ne	404220 <ferror@plt+0x2580>  // b.any
  4041ec:	mov	x0, x27
  4041f0:	str	w5, [sp, #128]
  4041f4:	str	x12, [sp, #136]
  4041f8:	stp	w10, w7, [sp, #148]
  4041fc:	str	w11, [sp, #156]
  404200:	str	x4, [sp, #160]
  404204:	bl	4018c0 <strlen@plt>
  404208:	ldr	w5, [sp, #128]
  40420c:	mov	x24, x0
  404210:	ldp	w10, w7, [sp, #148]
  404214:	ldr	w11, [sp, #156]
  404218:	ldr	x12, [sp, #136]
  40421c:	ldr	x4, [sp, #160]
  404220:	str	w22, [sp, #220]
  404224:	ldr	w22, [sp, #144]
  404228:	mov	x8, #0x0                   	// #0
  40422c:	stp	x19, x4, [sp, #224]
  404230:	mov	w19, w21
  404234:	mov	x21, x8
  404238:	str	x12, [sp, #128]
  40423c:	str	w10, [sp, #136]
  404240:	stp	w25, w5, [sp, #148]
  404244:	stp	w7, w11, [sp, #156]
  404248:	add	x25, x20, x21
  40424c:	add	x3, sp, #0xf8
  404250:	sub	x2, x24, x25
  404254:	add	x1, x27, x25
  404258:	add	x0, sp, #0xf4
  40425c:	bl	408398 <ferror@plt+0x66f8>
  404260:	mov	x13, #0x2b                  	// #43
  404264:	mov	x3, x0
  404268:	movk	x13, #0x2, lsl #32
  40426c:	cbz	x0, 4042a8 <ferror@plt+0x2608>
  404270:	cmn	x0, #0x1
  404274:	b.eq	405040 <ferror@plt+0x33a0>  // b.none
  404278:	cmn	x0, #0x2
  40427c:	mov	x6, #0x1                   	// #1
  404280:	b.eq	405078 <ferror@plt+0x33d8>  // b.none
  404284:	cbnz	w22, 404b74 <ferror@plt+0x2ed4>
  404288:	ldr	w0, [sp, #244]
  40428c:	add	x21, x21, x3
  404290:	bl	401c30 <iswprint@plt>
  404294:	cmp	w0, #0x0
  404298:	csel	w19, w19, wzr, ne  // ne = any
  40429c:	add	x0, sp, #0xf8
  4042a0:	bl	401ad0 <mbsinit@plt>
  4042a4:	cbz	w0, 404248 <ferror@plt+0x25a8>
  4042a8:	eor	w1, w19, #0x1
  4042ac:	ldr	w0, [sp, #120]
  4042b0:	mov	x8, x21
  4042b4:	mov	w21, w19
  4042b8:	ldp	x19, x4, [sp, #224]
  4042bc:	and	w1, w0, w1
  4042c0:	ldr	w10, [sp, #136]
  4042c4:	and	w1, w1, #0xff
  4042c8:	ldp	w25, w5, [sp, #148]
  4042cc:	ldp	w7, w11, [sp, #156]
  4042d0:	ldr	w22, [sp, #220]
  4042d4:	ldr	x12, [sp, #128]
  4042d8:	cmp	x8, #0x1
  4042dc:	b.hi	4042f0 <ferror@plt+0x2650>  // b.pmore
  4042e0:	cbz	w1, 4047dc <ferror@plt+0x2b3c>
  4042e4:	nop
  4042e8:	ldr	w1, [sp, #120]
  4042ec:	mov	w21, #0x0                   	// #0
  4042f0:	add	x8, x8, x20
  4042f4:	mov	w9, #0x0                   	// #0
  4042f8:	mov	w2, #0x27                  	// #39
  4042fc:	mov	w3, #0x5c                  	// #92
  404300:	mov	w6, #0x24                  	// #36
  404304:	cbz	w1, 4043bc <ferror@plt+0x271c>
  404308:	cbnz	w10, 404bf4 <ferror@plt+0x2f54>
  40430c:	eor	w0, w25, #0x1
  404310:	ands	w0, w7, w0
  404314:	b.eq	40434c <ferror@plt+0x26ac>  // b.none
  404318:	cmp	x23, x19
  40431c:	b.ls	404324 <ferror@plt+0x2684>  // b.plast
  404320:	strb	w2, [x28, x19]
  404324:	add	x9, x19, #0x1
  404328:	cmp	x23, x9
  40432c:	b.ls	404334 <ferror@plt+0x2694>  // b.plast
  404330:	strb	w6, [x28, x9]
  404334:	add	x9, x19, #0x2
  404338:	cmp	x23, x9
  40433c:	b.ls	404344 <ferror@plt+0x26a4>  // b.plast
  404340:	strb	w2, [x28, x9]
  404344:	add	x19, x19, #0x3
  404348:	mov	w25, w0
  40434c:	cmp	x23, x19
  404350:	b.ls	404358 <ferror@plt+0x26b8>  // b.plast
  404354:	strb	w3, [x28, x19]
  404358:	add	x0, x19, #0x1
  40435c:	cmp	x23, x0
  404360:	b.ls	404370 <ferror@plt+0x26d0>  // b.plast
  404364:	lsr	w9, w22, #6
  404368:	add	w9, w9, #0x30
  40436c:	strb	w9, [x28, x0]
  404370:	add	x0, x19, #0x2
  404374:	cmp	x23, x0
  404378:	b.ls	404388 <ferror@plt+0x26e8>  // b.plast
  40437c:	ubfx	x9, x22, #3, #3
  404380:	add	w9, w9, #0x30
  404384:	strb	w9, [x28, x0]
  404388:	and	w22, w22, #0x7
  40438c:	add	x20, x20, #0x1
  404390:	add	w22, w22, #0x30
  404394:	cmp	x8, x20
  404398:	add	x19, x19, #0x3
  40439c:	b.ls	4045dc <ferror@plt+0x293c>  // b.plast
  4043a0:	mov	w9, w1
  4043a4:	cmp	x23, x19
  4043a8:	b.ls	4043b0 <ferror@plt+0x2710>  // b.plast
  4043ac:	strb	w22, [x28, x19]
  4043b0:	ldrb	w22, [x27, x20]
  4043b4:	add	x19, x19, #0x1
  4043b8:	cbnz	w1, 404308 <ferror@plt+0x2668>
  4043bc:	eor	w0, w9, #0x1
  4043c0:	and	w0, w25, w0
  4043c4:	and	w0, w0, #0xff
  4043c8:	cbz	w5, 4043dc <ferror@plt+0x273c>
  4043cc:	cmp	x23, x19
  4043d0:	b.ls	4043d8 <ferror@plt+0x2738>  // b.plast
  4043d4:	strb	w3, [x28, x19]
  4043d8:	add	x19, x19, #0x1
  4043dc:	add	x20, x20, #0x1
  4043e0:	cmp	x20, x8
  4043e4:	b.cs	404678 <ferror@plt+0x29d8>  // b.hs, b.nlast
  4043e8:	cbz	w0, 404dc4 <ferror@plt+0x3124>
  4043ec:	cmp	x23, x19
  4043f0:	b.ls	4043f8 <ferror@plt+0x2758>  // b.plast
  4043f4:	strb	w2, [x28, x19]
  4043f8:	add	x0, x19, #0x1
  4043fc:	cmp	x23, x0
  404400:	b.ls	404408 <ferror@plt+0x2768>  // b.plast
  404404:	strb	w2, [x28, x0]
  404408:	add	x19, x19, #0x2
  40440c:	mov	w5, #0x0                   	// #0
  404410:	mov	w25, #0x0                   	// #0
  404414:	b	4043a4 <ferror@plt+0x2704>
  404418:	cmp	w21, #0x1
  40441c:	b.eq	404e18 <ferror@plt+0x3178>  // b.none
  404420:	b.ls	4049d8 <ferror@plt+0x2d38>  // b.plast
  404424:	cmp	w0, #0x2
  404428:	b.eq	404e90 <ferror@plt+0x31f0>  // b.none
  40442c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404430:	add	x0, x0, #0x498
  404434:	str	x0, [sp, #168]
  404438:	mov	w1, #0x1                   	// #1
  40443c:	ldr	w0, [sp, #184]
  404440:	mov	w7, w1
  404444:	mov	w5, w1
  404448:	mov	w10, w1
  40444c:	stp	w1, w1, [sp, #120]
  404450:	mov	w11, #0x0                   	// #0
  404454:	str	w1, [sp, #144]
  404458:	mov	w25, #0x0                   	// #0
  40445c:	str	w1, [sp, #208]
  404460:	and	w1, w0, w1
  404464:	and	w0, w0, #0x4
  404468:	mov	x12, #0x1                   	// #1
  40446c:	mov	x19, #0x0                   	// #0
  404470:	str	wzr, [sp, #188]
  404474:	str	xzr, [sp, #192]
  404478:	stp	w1, w0, [sp, #212]
  40447c:	mov	w0, #0x2                   	// #2
  404480:	str	w0, [sp, #116]
  404484:	b	404118 <ferror@plt+0x2478>
  404488:	ldrb	w0, [x27, x20]
  40448c:	cmp	w0, #0x0
  404490:	cset	w21, ne  // ne = any
  404494:	cbnz	w21, 40413c <ferror@plt+0x249c>
  404498:	ldr	w0, [sp, #144]
  40449c:	cmp	x19, #0x0
  4044a0:	mov	w5, w26
  4044a4:	mov	x26, x4
  4044a8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4044ac:	b.ne	40480c <ferror@plt+0x2b6c>  // b.any
  4044b0:	eor	w10, w10, #0x1
  4044b4:	ands	w7, w10, w7
  4044b8:	b.eq	4050c8 <ferror@plt+0x3428>  // b.none
  4044bc:	ldr	w0, [sp, #188]
  4044c0:	cbz	w0, 4050cc <ferror@plt+0x342c>
  4044c4:	cbnz	w5, 405128 <ferror@plt+0x3488>
  4044c8:	ldr	x2, [sp, #192]
  4044cc:	cmp	x23, #0x0
  4044d0:	cset	w0, eq  // eq = none
  4044d4:	cmp	x2, #0x0
  4044d8:	mov	x1, x2
  4044dc:	csel	w0, w0, wzr, ne  // ne = any
  4044e0:	cbz	w0, 405120 <ferror@plt+0x3480>
  4044e4:	str	w0, [sp, #188]
  4044e8:	mov	w0, #0x27                  	// #39
  4044ec:	ldr	x23, [sp, #192]
  4044f0:	str	x1, [sp, #192]
  4044f4:	mov	w1, #0x1                   	// #1
  4044f8:	mov	x12, #0x1                   	// #1
  4044fc:	mov	w7, w1
  404500:	mov	x19, x12
  404504:	mov	w11, #0x0                   	// #0
  404508:	mov	w10, #0x0                   	// #0
  40450c:	strb	w0, [x28]
  404510:	mov	w0, #0x2                   	// #2
  404514:	str	w0, [sp, #116]
  404518:	str	w1, [sp, #124]
  40451c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  404520:	add	x1, x1, #0x498
  404524:	str	wzr, [sp, #144]
  404528:	str	x1, [sp, #168]
  40452c:	str	wzr, [sp, #208]
  404530:	b	404118 <ferror@plt+0x2478>
  404534:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404538:	add	x0, x0, #0x520
  40453c:	ldrh	w0, [x0, w22, uxtw #1]
  404540:	adr	x1, 40454c <ferror@plt+0x28ac>
  404544:	add	x0, x1, w0, sxth #2
  404548:	br	x0
  40454c:	ldr	w0, [sp, #124]
  404550:	cbnz	w0, 405068 <ferror@plt+0x33c8>
  404554:	mov	w0, w25
  404558:	mov	w21, w11
  40455c:	mov	w5, w11
  404560:	cbz	x4, 404670 <ferror@plt+0x29d0>
  404564:	ubfx	x1, x22, #5, #8
  404568:	ldr	w1, [x4, x1, lsl #2]
  40456c:	lsr	w1, w1, w22
  404570:	tbz	w1, #0, 404670 <ferror@plt+0x29d0>
  404574:	cbnz	w10, 4046bc <ferror@plt+0x2a1c>
  404578:	eor	w1, w25, #0x1
  40457c:	ands	w1, w7, w1
  404580:	b.eq	4045c4 <ferror@plt+0x2924>  // b.none
  404584:	cmp	x23, x19
  404588:	b.ls	404594 <ferror@plt+0x28f4>  // b.plast
  40458c:	mov	w0, #0x27                  	// #39
  404590:	strb	w0, [x28, x19]
  404594:	add	x0, x19, #0x1
  404598:	cmp	x23, x0
  40459c:	b.ls	4045a8 <ferror@plt+0x2908>  // b.plast
  4045a0:	mov	w2, #0x24                  	// #36
  4045a4:	strb	w2, [x28, x0]
  4045a8:	add	x0, x19, #0x2
  4045ac:	cmp	x23, x0
  4045b0:	b.ls	4045bc <ferror@plt+0x291c>  // b.plast
  4045b4:	mov	w2, #0x27                  	// #39
  4045b8:	strb	w2, [x28, x0]
  4045bc:	add	x19, x19, #0x3
  4045c0:	mov	w25, w1
  4045c4:	cmp	x23, x19
  4045c8:	b.ls	4045d4 <ferror@plt+0x2934>  // b.plast
  4045cc:	mov	w0, #0x5c                  	// #92
  4045d0:	strb	w0, [x28, x19]
  4045d4:	add	x19, x19, #0x1
  4045d8:	add	x20, x20, #0x1
  4045dc:	cmp	x19, x23
  4045e0:	b.cs	4045e8 <ferror@plt+0x2948>  // b.hs, b.nlast
  4045e4:	strb	w22, [x28, x19]
  4045e8:	cmp	w21, #0x0
  4045ec:	add	x19, x19, #0x1
  4045f0:	csel	w26, w26, wzr, ne  // ne = any
  4045f4:	b	404128 <ferror@plt+0x2488>
  4045f8:	cbnz	w10, 404814 <ferror@plt+0x2b74>
  4045fc:	mov	w5, #0x0                   	// #0
  404600:	ldr	x1, [sp, #192]
  404604:	cmp	x23, #0x0
  404608:	mov	x0, #0x0                   	// #0
  40460c:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  404610:	b.eq	404654 <ferror@plt+0x29b4>  // b.none
  404614:	cmp	x23, x19
  404618:	b.ls	404624 <ferror@plt+0x2984>  // b.plast
  40461c:	mov	w0, #0x27                  	// #39
  404620:	strb	w0, [x28, x19]
  404624:	add	x0, x19, #0x1
  404628:	cmp	x23, x0
  40462c:	b.ls	404638 <ferror@plt+0x2998>  // b.plast
  404630:	mov	w1, #0x5c                  	// #92
  404634:	strb	w1, [x28, x0]
  404638:	add	x1, x19, #0x2
  40463c:	mov	x0, x23
  404640:	cmp	x23, x1
  404644:	b.ls	405158 <ferror@plt+0x34b8>  // b.plast
  404648:	ldr	x23, [sp, #192]
  40464c:	mov	w2, #0x27                  	// #39
  404650:	strb	w2, [x28, x1]
  404654:	add	x19, x19, #0x3
  404658:	mov	w22, #0x27                  	// #39
  40465c:	mov	w25, #0x0                   	// #0
  404660:	str	w21, [sp, #188]
  404664:	str	x23, [sp, #192]
  404668:	mov	x23, x0
  40466c:	mov	w0, #0x0                   	// #0
  404670:	cbnz	w5, 404574 <ferror@plt+0x28d4>
  404674:	add	x20, x20, #0x1
  404678:	cbz	w0, 4045dc <ferror@plt+0x293c>
  40467c:	cmp	x23, x19
  404680:	b.ls	40468c <ferror@plt+0x29ec>  // b.plast
  404684:	mov	w0, #0x27                  	// #39
  404688:	strb	w0, [x28, x19]
  40468c:	add	x0, x19, #0x1
  404690:	cmp	x23, x0
  404694:	b.ls	4046a0 <ferror@plt+0x2a00>  // b.plast
  404698:	mov	w1, #0x27                  	// #39
  40469c:	strb	w1, [x28, x0]
  4046a0:	add	x19, x19, #0x2
  4046a4:	mov	w25, #0x0                   	// #0
  4046a8:	b	4045dc <ferror@plt+0x293c>
  4046ac:	mov	w22, #0x66                  	// #102
  4046b0:	mov	w21, #0x0                   	// #0
  4046b4:	nop
  4046b8:	cbz	w10, 404578 <ferror@plt+0x28d8>
  4046bc:	ldr	w0, [sp, #120]
  4046c0:	and	w0, w0, w7
  4046c4:	str	w0, [sp, #120]
  4046c8:	ldp	w1, w0, [sp, #116]
  4046cc:	cmp	w0, #0x0
  4046d0:	mov	w0, #0x4                   	// #4
  4046d4:	csel	w0, w1, w0, eq  // eq = none
  4046d8:	str	w0, [sp, #116]
  4046dc:	ldr	w4, [sp, #116]
  4046e0:	mov	x3, x24
  4046e4:	ldr	x7, [sp, #200]
  4046e8:	mov	x2, x27
  4046ec:	ldr	x0, [sp, #256]
  4046f0:	str	x0, [sp]
  4046f4:	ldr	w0, [sp, #184]
  4046f8:	mov	x1, x23
  4046fc:	mov	x6, #0x0                   	// #0
  404700:	and	w5, w0, #0xfffffffd
  404704:	mov	x0, x28
  404708:	bl	404020 <ferror@plt+0x2380>
  40470c:	mov	x19, x0
  404710:	mov	x0, x19
  404714:	ldp	x29, x30, [sp, #16]
  404718:	ldp	x19, x20, [sp, #32]
  40471c:	ldp	x21, x22, [sp, #48]
  404720:	ldp	x23, x24, [sp, #64]
  404724:	ldp	x25, x26, [sp, #80]
  404728:	ldp	x27, x28, [sp, #96]
  40472c:	add	sp, sp, #0x100
  404730:	ret
  404734:	mov	w22, #0x62                  	// #98
  404738:	mov	w21, #0x0                   	// #0
  40473c:	b	4046b8 <ferror@plt+0x2a18>
  404740:	mov	w22, #0x61                  	// #97
  404744:	mov	w21, #0x0                   	// #0
  404748:	b	4046b8 <ferror@plt+0x2a18>
  40474c:	ldrb	w22, [x27, x20]
  404750:	cmp	w22, #0x7e
  404754:	b.ls	4047bc <ferror@plt+0x2b1c>  // b.plast
  404758:	ldr	x0, [sp, #176]
  40475c:	mov	w5, #0x0                   	// #0
  404760:	cmp	x0, #0x1
  404764:	b.ne	4041e0 <ferror@plt+0x2540>  // b.any
  404768:	str	w5, [sp, #128]
  40476c:	str	x12, [sp, #136]
  404770:	stp	w10, w7, [sp, #148]
  404774:	str	w11, [sp, #156]
  404778:	str	x4, [sp, #160]
  40477c:	bl	401b50 <__ctype_b_loc@plt>
  404780:	ldr	x0, [x0]
  404784:	ldr	w5, [sp, #128]
  404788:	ldp	w10, w7, [sp, #148]
  40478c:	ldrh	w21, [x0, w22, uxtw #1]
  404790:	ldr	w11, [sp, #156]
  404794:	ands	w0, w21, #0x4000
  404798:	ldr	w0, [sp, #120]
  40479c:	cset	w1, eq  // eq = none
  4047a0:	ubfx	x21, x21, #14, #1
  4047a4:	and	w1, w0, w1
  4047a8:	ldr	x12, [sp, #136]
  4047ac:	ldr	x4, [sp, #160]
  4047b0:	ldr	x8, [sp, #176]
  4047b4:	cbz	w1, 4047dc <ferror@plt+0x2b3c>
  4047b8:	b	4042e8 <ferror@plt+0x2648>
  4047bc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  4047c0:	add	x0, x0, #0x620
  4047c4:	ldrh	w0, [x0, w22, uxtw #1]
  4047c8:	adr	x1, 4047d4 <ferror@plt+0x2b34>
  4047cc:	add	x0, x1, w0, sxth #2
  4047d0:	br	x0
  4047d4:	mov	w21, w11
  4047d8:	mov	w5, #0x0                   	// #0
  4047dc:	ldr	w1, [sp, #124]
  4047e0:	mov	w0, w25
  4047e4:	cbz	w1, 404560 <ferror@plt+0x28c0>
  4047e8:	mov	w0, w25
  4047ec:	cbnz	w10, 404560 <ferror@plt+0x28c0>
  4047f0:	mov	w0, w25
  4047f4:	cbnz	w5, 404574 <ferror@plt+0x28d4>
  4047f8:	b	404674 <ferror@plt+0x29d4>
  4047fc:	mov	w5, #0x0                   	// #0
  404800:	mov	w21, #0x0                   	// #0
  404804:	ldr	w0, [sp, #144]
  404808:	cbz	w0, 4047dc <ferror@plt+0x2b3c>
  40480c:	mov	w0, #0x2                   	// #2
  404810:	str	w0, [sp, #116]
  404814:	ldp	w1, w0, [sp, #116]
  404818:	cmp	w0, #0x0
  40481c:	mov	w0, #0x4                   	// #4
  404820:	csel	w0, w1, w0, eq  // eq = none
  404824:	str	w0, [sp, #116]
  404828:	b	4046dc <ferror@plt+0x2a3c>
  40482c:	ldr	w0, [sp, #116]
  404830:	cmp	w0, #0x2
  404834:	b.eq	404b58 <ferror@plt+0x2eb8>  // b.none
  404838:	mov	w5, #0x0                   	// #0
  40483c:	ldr	w0, [sp, #116]
  404840:	cmp	w0, #0x5
  404844:	b.ne	404868 <ferror@plt+0x2bc8>  // b.any
  404848:	ldr	w0, [sp, #216]
  40484c:	cbz	w0, 404868 <ferror@plt+0x2bc8>
  404850:	add	x6, x20, #0x2
  404854:	cmp	x6, x24
  404858:	b.cs	404868 <ferror@plt+0x2bc8>  // b.hs, b.nlast
  40485c:	ldrb	w22, [x3, #1]
  404860:	cmp	w22, #0x3f
  404864:	b.eq	404eac <ferror@plt+0x320c>  // b.none
  404868:	mov	w21, #0x0                   	// #0
  40486c:	mov	w22, #0x3f                  	// #63
  404870:	b	4047dc <ferror@plt+0x2b3c>
  404874:	ldr	w0, [sp, #116]
  404878:	cmp	w0, #0x2
  40487c:	b.eq	4045f8 <ferror@plt+0x2958>  // b.none
  404880:	mov	w5, #0x0                   	// #0
  404884:	mov	w22, #0x27                  	// #39
  404888:	str	w21, [sp, #188]
  40488c:	b	4047dc <ferror@plt+0x2b3c>
  404890:	mov	w5, #0x0                   	// #0
  404894:	mov	w0, #0x74                  	// #116
  404898:	ldr	w1, [sp, #144]
  40489c:	cbnz	w1, 40480c <ferror@plt+0x2b6c>
  4048a0:	ldr	w1, [sp, #120]
  4048a4:	cbnz	w1, 4048b8 <ferror@plt+0x2c18>
  4048a8:	mov	w0, w25
  4048ac:	mov	w21, #0x0                   	// #0
  4048b0:	cbnz	w10, 404560 <ferror@plt+0x28c0>
  4048b4:	b	4047f0 <ferror@plt+0x2b50>
  4048b8:	mov	w22, w0
  4048bc:	mov	w21, #0x0                   	// #0
  4048c0:	b	4046b8 <ferror@plt+0x2a18>
  4048c4:	mov	w5, #0x0                   	// #0
  4048c8:	mov	w0, #0x66                  	// #102
  4048cc:	b	4048a0 <ferror@plt+0x2c00>
  4048d0:	mov	w5, #0x0                   	// #0
  4048d4:	mov	w0, #0x62                  	// #98
  4048d8:	b	4048a0 <ferror@plt+0x2c00>
  4048dc:	ldr	w0, [sp, #120]
  4048e0:	cbnz	w0, 404928 <ferror@plt+0x2c88>
  4048e4:	ldr	w0, [sp, #212]
  4048e8:	mov	w5, #0x0                   	// #0
  4048ec:	cbz	w0, 4048a8 <ferror@plt+0x2c08>
  4048f0:	add	x20, x20, #0x1
  4048f4:	b	404128 <ferror@plt+0x2488>
  4048f8:	ldrb	w22, [x3]
  4048fc:	cmp	w22, #0x7e
  404900:	b.hi	404758 <ferror@plt+0x2ab8>  // b.pmore
  404904:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404908:	add	x0, x0, #0x720
  40490c:	ldrh	w0, [x0, w22, uxtw #1]
  404910:	adr	x1, 40491c <ferror@plt+0x2c7c>
  404914:	add	x0, x1, w0, sxth #2
  404918:	br	x0
  40491c:	mov	w5, #0x0                   	// #0
  404920:	mov	w21, #0x0                   	// #0
  404924:	b	4047dc <ferror@plt+0x2b3c>
  404928:	cbnz	w10, 404bf4 <ferror@plt+0x2f54>
  40492c:	mov	w5, #0x0                   	// #0
  404930:	eor	w0, w25, #0x1
  404934:	ands	w0, w7, w0
  404938:	b.eq	404af4 <ferror@plt+0x2e54>  // b.none
  40493c:	cmp	x23, x19
  404940:	b.ls	40494c <ferror@plt+0x2cac>  // b.plast
  404944:	mov	w1, #0x27                  	// #39
  404948:	strb	w1, [x28, x19]
  40494c:	add	x1, x19, #0x1
  404950:	cmp	x23, x1
  404954:	b.ls	404960 <ferror@plt+0x2cc0>  // b.plast
  404958:	mov	w2, #0x24                  	// #36
  40495c:	strb	w2, [x28, x1]
  404960:	add	x1, x19, #0x2
  404964:	cmp	x23, x1
  404968:	b.ls	404974 <ferror@plt+0x2cd4>  // b.plast
  40496c:	mov	w2, #0x27                  	// #39
  404970:	strb	w2, [x28, x1]
  404974:	add	x1, x19, #0x3
  404978:	cmp	x23, x1
  40497c:	b.ls	404bc0 <ferror@plt+0x2f20>  // b.plast
  404980:	mov	w25, w0
  404984:	mov	w0, #0x5c                  	// #92
  404988:	strb	w0, [x28, x1]
  40498c:	ldr	w0, [sp, #116]
  404990:	add	x19, x1, #0x1
  404994:	cmp	w0, #0x2
  404998:	b.eq	404bc8 <ferror@plt+0x2f28>  // b.none
  40499c:	add	x0, x20, #0x1
  4049a0:	cmp	x0, x24
  4049a4:	b.cs	404bdc <ferror@plt+0x2f3c>  // b.hs, b.nlast
  4049a8:	ldrb	w2, [x27, x0]
  4049ac:	mov	w22, #0x30                  	// #48
  4049b0:	mov	w0, #0x0                   	// #0
  4049b4:	sub	w2, w2, #0x30
  4049b8:	and	w2, w2, #0xff
  4049bc:	cmp	w2, #0x9
  4049c0:	b.ls	404c3c <ferror@plt+0x2f9c>  // b.plast
  4049c4:	ldr	w1, [sp, #124]
  4049c8:	mov	w21, #0x0                   	// #0
  4049cc:	cbz	w1, 404560 <ferror@plt+0x28c0>
  4049d0:	cbnz	w5, 404574 <ferror@plt+0x28d4>
  4049d4:	b	404674 <ferror@plt+0x29d4>
  4049d8:	cbnz	w0, 4051bc <ferror@plt+0x351c>
  4049dc:	ldr	w0, [sp, #184]
  4049e0:	mov	w5, #0x1                   	// #1
  4049e4:	mov	w7, #0x0                   	// #0
  4049e8:	mov	w11, #0x0                   	// #0
  4049ec:	and	w1, w0, w5
  4049f0:	mov	w25, #0x0                   	// #0
  4049f4:	and	w0, w0, #0x4
  4049f8:	mov	w10, #0x0                   	// #0
  4049fc:	mov	x12, #0x0                   	// #0
  404a00:	mov	x19, #0x0                   	// #0
  404a04:	stp	wzr, w5, [sp, #120]
  404a08:	str	wzr, [sp, #144]
  404a0c:	str	xzr, [sp, #168]
  404a10:	str	wzr, [sp, #188]
  404a14:	str	xzr, [sp, #192]
  404a18:	stp	wzr, w1, [sp, #208]
  404a1c:	str	w0, [sp, #216]
  404a20:	b	404118 <ferror@plt+0x2478>
  404a24:	cmp	w0, #0x5
  404a28:	b.ne	404a8c <ferror@plt+0x2dec>  // b.any
  404a2c:	ldr	w0, [sp, #184]
  404a30:	and	w1, w0, #0x1
  404a34:	and	w0, w0, #0x4
  404a38:	stp	w1, w0, [sp, #212]
  404a3c:	cbnz	w20, 404f34 <ferror@plt+0x3294>
  404a40:	cbz	x23, 404e50 <ferror@plt+0x31b0>
  404a44:	mov	w11, #0x1                   	// #1
  404a48:	mov	w0, #0x22                  	// #34
  404a4c:	mov	x12, #0x1                   	// #1
  404a50:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  404a54:	mov	w5, w11
  404a58:	add	x1, x1, #0x470
  404a5c:	mov	x19, x12
  404a60:	mov	w7, #0x0                   	// #0
  404a64:	mov	w25, #0x0                   	// #0
  404a68:	mov	w10, #0x0                   	// #0
  404a6c:	strb	w0, [x28]
  404a70:	stp	w11, wzr, [sp, #120]
  404a74:	str	wzr, [sp, #144]
  404a78:	str	x1, [sp, #168]
  404a7c:	str	wzr, [sp, #188]
  404a80:	str	xzr, [sp, #192]
  404a84:	str	wzr, [sp, #208]
  404a88:	b	404118 <ferror@plt+0x2478>
  404a8c:	cmp	w0, #0x6
  404a90:	b.ne	4051bc <ferror@plt+0x351c>  // b.any
  404a94:	mov	w0, #0x1                   	// #1
  404a98:	mov	w1, w0
  404a9c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404aa0:	add	x0, x0, #0x470
  404aa4:	str	x0, [sp, #168]
  404aa8:	mov	w11, w1
  404aac:	ldr	w0, [sp, #184]
  404ab0:	mov	w5, w1
  404ab4:	mov	w10, w1
  404ab8:	stp	w1, wzr, [sp, #120]
  404abc:	str	w1, [sp, #208]
  404ac0:	and	w1, w0, w1
  404ac4:	and	w0, w0, #0x4
  404ac8:	mov	w7, #0x0                   	// #0
  404acc:	mov	w25, #0x0                   	// #0
  404ad0:	mov	x12, #0x1                   	// #1
  404ad4:	mov	x19, #0x0                   	// #0
  404ad8:	str	wzr, [sp, #144]
  404adc:	str	wzr, [sp, #188]
  404ae0:	str	xzr, [sp, #192]
  404ae4:	stp	w1, w0, [sp, #212]
  404ae8:	mov	w0, #0x5                   	// #5
  404aec:	str	w0, [sp, #116]
  404af0:	b	404118 <ferror@plt+0x2478>
  404af4:	mov	x1, x19
  404af8:	cmp	x23, x19
  404afc:	b.ls	40498c <ferror@plt+0x2cec>  // b.plast
  404b00:	mov	w0, w25
  404b04:	mov	w25, w0
  404b08:	mov	w0, #0x5c                  	// #92
  404b0c:	strb	w0, [x28, x1]
  404b10:	b	40498c <ferror@plt+0x2cec>
  404b14:	mov	w5, #0x0                   	// #0
  404b18:	cmp	x24, #0x1
  404b1c:	cset	w0, ne  // ne = any
  404b20:	cmn	x24, #0x1
  404b24:	b.eq	404b38 <ferror@plt+0x2e98>  // b.none
  404b28:	cbnz	w0, 404920 <ferror@plt+0x2c80>
  404b2c:	cbz	x20, 404804 <ferror@plt+0x2b64>
  404b30:	mov	w21, #0x0                   	// #0
  404b34:	b	4047dc <ferror@plt+0x2b3c>
  404b38:	ldrb	w0, [x27, #1]
  404b3c:	cmp	w0, #0x0
  404b40:	cset	w0, ne  // ne = any
  404b44:	cbnz	w0, 404920 <ferror@plt+0x2c80>
  404b48:	b	404b2c <ferror@plt+0x2e8c>
  404b4c:	mov	w5, #0x0                   	// #0
  404b50:	cbnz	x20, 404b30 <ferror@plt+0x2e90>
  404b54:	b	404804 <ferror@plt+0x2b64>
  404b58:	cbnz	w10, 404814 <ferror@plt+0x2b74>
  404b5c:	mov	w5, #0x0                   	// #0
  404b60:	mov	w0, w25
  404b64:	mov	w21, #0x0                   	// #0
  404b68:	mov	w22, #0x3f                  	// #63
  404b6c:	cbnz	w5, 404574 <ferror@plt+0x28d4>
  404b70:	b	404674 <ferror@plt+0x29d4>
  404b74:	cmp	x0, #0x1
  404b78:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  404b7c:	add	x2, x25, #0x1
  404b80:	add	x0, x27, x0
  404b84:	add	x2, x27, x2
  404b88:	add	x9, x0, x25
  404b8c:	b	404b9c <ferror@plt+0x2efc>
  404b90:	add	x2, x2, #0x1
  404b94:	cmp	x9, x2
  404b98:	b.eq	404288 <ferror@plt+0x25e8>  // b.none
  404b9c:	ldrb	w0, [x2]
  404ba0:	sub	w0, w0, #0x5b
  404ba4:	and	w0, w0, #0xff
  404ba8:	cmp	w0, #0x21
  404bac:	b.hi	404b90 <ferror@plt+0x2ef0>  // b.pmore
  404bb0:	lsl	x0, x6, x0
  404bb4:	tst	x0, x13
  404bb8:	b.eq	404b90 <ferror@plt+0x2ef0>  // b.none
  404bbc:	b	40480c <ferror@plt+0x2b6c>
  404bc0:	add	x19, x19, #0x4
  404bc4:	mov	w25, w0
  404bc8:	mov	w0, #0x0                   	// #0
  404bcc:	mov	w21, #0x0                   	// #0
  404bd0:	mov	w22, #0x30                  	// #48
  404bd4:	cbnz	w5, 404574 <ferror@plt+0x28d4>
  404bd8:	b	404674 <ferror@plt+0x29d4>
  404bdc:	ldr	w1, [sp, #124]
  404be0:	mov	w0, #0x0                   	// #0
  404be4:	mov	w22, #0x30                  	// #48
  404be8:	mov	w21, #0x0                   	// #0
  404bec:	cbz	w1, 404560 <ferror@plt+0x28c0>
  404bf0:	b	4049d0 <ferror@plt+0x2d30>
  404bf4:	str	w7, [sp, #120]
  404bf8:	b	404814 <ferror@plt+0x2b74>
  404bfc:	mov	w5, w11
  404c00:	mov	w21, #0x0                   	// #0
  404c04:	b	4047dc <ferror@plt+0x2b3c>
  404c08:	mov	w1, w19
  404c0c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404c10:	add	x0, x0, #0x4a0
  404c14:	str	w10, [sp, #120]
  404c18:	bl	403eb8 <ferror@plt+0x2218>
  404c1c:	str	x0, [sp, #200]
  404c20:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  404c24:	add	x0, x1, #0x498
  404c28:	mov	w1, w19
  404c2c:	bl	403eb8 <ferror@plt+0x2218>
  404c30:	ldr	w10, [sp, #120]
  404c34:	str	x0, [sp, #256]
  404c38:	b	4040b4 <ferror@plt+0x2414>
  404c3c:	cmp	x23, x19
  404c40:	b.ls	404c48 <ferror@plt+0x2fa8>  // b.plast
  404c44:	strb	w22, [x28, x19]
  404c48:	add	x0, x1, #0x2
  404c4c:	cmp	x23, x0
  404c50:	b.ls	404c5c <ferror@plt+0x2fbc>  // b.plast
  404c54:	mov	w2, #0x30                  	// #48
  404c58:	strb	w2, [x28, x0]
  404c5c:	add	x19, x1, #0x3
  404c60:	mov	w0, #0x0                   	// #0
  404c64:	mov	w22, #0x30                  	// #48
  404c68:	b	4049c4 <ferror@plt+0x2d24>
  404c6c:	mov	w5, #0x0                   	// #0
  404c70:	ldr	w0, [sp, #116]
  404c74:	cmp	w0, #0x2
  404c78:	b.eq	404cf8 <ferror@plt+0x3058>  // b.none
  404c7c:	ldr	w1, [sp, #208]
  404c80:	mov	w22, #0x5c                  	// #92
  404c84:	mov	w0, w22
  404c88:	cbz	w1, 4048a0 <ferror@plt+0x2c00>
  404c8c:	add	x20, x20, #0x1
  404c90:	mov	w0, w25
  404c94:	mov	w21, #0x0                   	// #0
  404c98:	b	404678 <ferror@plt+0x29d8>
  404c9c:	mov	w5, #0x0                   	// #0
  404ca0:	mov	w0, #0x76                  	// #118
  404ca4:	b	4048a0 <ferror@plt+0x2c00>
  404ca8:	mov	w21, w11
  404cac:	mov	w5, #0x0                   	// #0
  404cb0:	b	404804 <ferror@plt+0x2b64>
  404cb4:	mov	w5, #0x0                   	// #0
  404cb8:	mov	w0, #0x72                  	// #114
  404cbc:	b	404898 <ferror@plt+0x2bf8>
  404cc0:	mov	w5, #0x0                   	// #0
  404cc4:	mov	w0, #0x6e                  	// #110
  404cc8:	b	404898 <ferror@plt+0x2bf8>
  404ccc:	mov	w5, #0x0                   	// #0
  404cd0:	mov	w0, #0x61                  	// #97
  404cd4:	b	4048a0 <ferror@plt+0x2c00>
  404cd8:	mov	w5, #0x0                   	// #0
  404cdc:	mov	w22, #0xa                   	// #10
  404ce0:	mov	w0, #0x6e                  	// #110
  404ce4:	b	4048a0 <ferror@plt+0x2c00>
  404ce8:	mov	w5, #0x0                   	// #0
  404cec:	mov	w22, #0xd                   	// #13
  404cf0:	mov	w0, #0x72                  	// #114
  404cf4:	b	4048a0 <ferror@plt+0x2c00>
  404cf8:	cbnz	w10, 404814 <ferror@plt+0x2b74>
  404cfc:	add	x20, x20, #0x1
  404d00:	mov	w0, w25
  404d04:	mov	w21, #0x0                   	// #0
  404d08:	mov	w22, #0x5c                  	// #92
  404d0c:	b	404678 <ferror@plt+0x29d8>
  404d10:	ldr	w0, [sp, #184]
  404d14:	and	w1, w0, #0x1
  404d18:	and	w0, w0, #0x4
  404d1c:	stp	w1, w0, [sp, #212]
  404d20:	cbnz	w20, 404dcc <ferror@plt+0x312c>
  404d24:	mov	w0, #0x1                   	// #1
  404d28:	str	w0, [sp, #120]
  404d2c:	cbnz	x23, 4051a4 <ferror@plt+0x3504>
  404d30:	mov	w0, #0x1                   	// #1
  404d34:	mov	w5, w0
  404d38:	mov	w7, w0
  404d3c:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404d40:	add	x0, x0, #0x498
  404d44:	mov	x12, #0x1                   	// #1
  404d48:	mov	w11, #0x0                   	// #0
  404d4c:	mov	x19, x12
  404d50:	mov	w25, #0x0                   	// #0
  404d54:	mov	w10, #0x0                   	// #0
  404d58:	str	w5, [sp, #124]
  404d5c:	str	wzr, [sp, #144]
  404d60:	str	x0, [sp, #168]
  404d64:	mov	w0, #0x2                   	// #2
  404d68:	str	w0, [sp, #116]
  404d6c:	str	wzr, [sp, #188]
  404d70:	str	xzr, [sp, #192]
  404d74:	str	wzr, [sp, #208]
  404d78:	b	404118 <ferror@plt+0x2478>
  404d7c:	ldr	w0, [sp, #184]
  404d80:	mov	w11, #0x1                   	// #1
  404d84:	mov	w7, #0x0                   	// #0
  404d88:	mov	w5, w11
  404d8c:	and	w1, w0, w11
  404d90:	mov	w25, #0x0                   	// #0
  404d94:	and	w0, w0, #0x4
  404d98:	mov	w10, #0x0                   	// #0
  404d9c:	mov	x12, #0x0                   	// #0
  404da0:	mov	x19, #0x0                   	// #0
  404da4:	stp	w11, wzr, [sp, #120]
  404da8:	str	wzr, [sp, #144]
  404dac:	str	xzr, [sp, #168]
  404db0:	str	wzr, [sp, #188]
  404db4:	str	xzr, [sp, #192]
  404db8:	stp	wzr, w1, [sp, #208]
  404dbc:	str	w0, [sp, #216]
  404dc0:	b	404118 <ferror@plt+0x2478>
  404dc4:	mov	w5, #0x0                   	// #0
  404dc8:	b	4043a4 <ferror@plt+0x2704>
  404dcc:	mov	w1, #0x1                   	// #1
  404dd0:	mov	w10, w1
  404dd4:	mov	w7, w1
  404dd8:	mov	w5, w1
  404ddc:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404de0:	add	x0, x0, #0x498
  404de4:	str	w1, [sp, #124]
  404de8:	str	w1, [sp, #144]
  404dec:	str	x0, [sp, #168]
  404df0:	mov	w0, #0x2                   	// #2
  404df4:	mov	w11, #0x0                   	// #0
  404df8:	mov	w25, #0x0                   	// #0
  404dfc:	mov	x12, #0x1                   	// #1
  404e00:	mov	x19, #0x0                   	// #0
  404e04:	stp	w0, wzr, [sp, #116]
  404e08:	str	wzr, [sp, #188]
  404e0c:	str	xzr, [sp, #192]
  404e10:	str	wzr, [sp, #208]
  404e14:	b	404118 <ferror@plt+0x2478>
  404e18:	ldr	w1, [sp, #184]
  404e1c:	mov	w10, w0
  404e20:	mov	w7, w0
  404e24:	mov	w5, w0
  404e28:	str	w0, [sp, #124]
  404e2c:	and	w2, w1, #0x1
  404e30:	str	w0, [sp, #144]
  404e34:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404e38:	add	x0, x0, #0x498
  404e3c:	str	x0, [sp, #168]
  404e40:	and	w0, w1, #0x4
  404e44:	str	w2, [sp, #212]
  404e48:	str	w0, [sp, #216]
  404e4c:	b	404df0 <ferror@plt+0x3150>
  404e50:	mov	w11, #0x1                   	// #1
  404e54:	mov	x12, #0x1                   	// #1
  404e58:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404e5c:	mov	w5, w11
  404e60:	add	x0, x0, #0x470
  404e64:	mov	x19, x12
  404e68:	mov	w7, #0x0                   	// #0
  404e6c:	mov	w25, #0x0                   	// #0
  404e70:	mov	w10, #0x0                   	// #0
  404e74:	stp	w11, wzr, [sp, #120]
  404e78:	str	wzr, [sp, #144]
  404e7c:	str	x0, [sp, #168]
  404e80:	str	wzr, [sp, #188]
  404e84:	str	xzr, [sp, #192]
  404e88:	str	wzr, [sp, #208]
  404e8c:	b	404118 <ferror@plt+0x2478>
  404e90:	ldr	w0, [sp, #184]
  404e94:	and	w1, w0, #0x1
  404e98:	and	w0, w0, #0x4
  404e9c:	stp	w1, w0, [sp, #212]
  404ea0:	cbnz	w20, 405160 <ferror@plt+0x34c0>
  404ea4:	str	wzr, [sp, #120]
  404ea8:	b	404d2c <ferror@plt+0x308c>
  404eac:	ldrb	w2, [x27, x6]
  404eb0:	cmp	w2, #0x3e
  404eb4:	b.hi	404920 <ferror@plt+0x2c80>  // b.pmore
  404eb8:	mov	x1, #0x1                   	// #1
  404ebc:	mov	x0, #0xa38200000000        	// #179778741075968
  404ec0:	movk	x0, #0x7000, lsl #48
  404ec4:	lsl	x1, x1, x2
  404ec8:	mov	w21, #0x0                   	// #0
  404ecc:	tst	x1, x0
  404ed0:	b.eq	4047dc <ferror@plt+0x2b3c>  // b.none
  404ed4:	cbnz	w10, 4046dc <ferror@plt+0x2a3c>
  404ed8:	cmp	x23, x19
  404edc:	b.ls	404ee4 <ferror@plt+0x3244>  // b.plast
  404ee0:	strb	w22, [x28, x19]
  404ee4:	add	x0, x19, #0x1
  404ee8:	cmp	x23, x0
  404eec:	b.ls	404ef8 <ferror@plt+0x3258>  // b.plast
  404ef0:	mov	w1, #0x22                  	// #34
  404ef4:	strb	w1, [x28, x0]
  404ef8:	add	x0, x19, #0x2
  404efc:	cmp	x23, x0
  404f00:	b.ls	404f0c <ferror@plt+0x326c>  // b.plast
  404f04:	mov	w1, #0x22                  	// #34
  404f08:	strb	w1, [x28, x0]
  404f0c:	add	x0, x19, #0x3
  404f10:	cmp	x23, x0
  404f14:	b.ls	404f20 <ferror@plt+0x3280>  // b.plast
  404f18:	mov	w1, #0x3f                  	// #63
  404f1c:	strb	w1, [x28, x0]
  404f20:	add	x19, x19, #0x4
  404f24:	mov	w22, w2
  404f28:	mov	x20, x6
  404f2c:	mov	w0, w25
  404f30:	b	4049c4 <ferror@plt+0x2d24>
  404f34:	mov	w0, #0x1                   	// #1
  404f38:	mov	w1, w0
  404f3c:	mov	w11, w1
  404f40:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  404f44:	mov	w5, w1
  404f48:	add	x0, x0, #0x470
  404f4c:	mov	w10, w1
  404f50:	mov	w7, #0x0                   	// #0
  404f54:	mov	w25, #0x0                   	// #0
  404f58:	mov	x12, #0x1                   	// #1
  404f5c:	mov	x19, #0x0                   	// #0
  404f60:	stp	w1, wzr, [sp, #120]
  404f64:	str	wzr, [sp, #144]
  404f68:	str	x0, [sp, #168]
  404f6c:	str	wzr, [sp, #188]
  404f70:	str	xzr, [sp, #192]
  404f74:	str	w1, [sp, #208]
  404f78:	b	404118 <ferror@plt+0x2478>
  404f7c:	mov	w5, w11
  404f80:	cbnz	x20, 404b30 <ferror@plt+0x2e90>
  404f84:	b	404804 <ferror@plt+0x2b64>
  404f88:	mov	w5, w11
  404f8c:	b	404b18 <ferror@plt+0x2e78>
  404f90:	mov	w5, w11
  404f94:	b	404cec <ferror@plt+0x304c>
  404f98:	mov	w5, w11
  404f9c:	mov	w0, #0x76                  	// #118
  404fa0:	b	4048a0 <ferror@plt+0x2c00>
  404fa4:	mov	w5, w11
  404fa8:	b	404c70 <ferror@plt+0x2fd0>
  404fac:	ldr	w0, [sp, #116]
  404fb0:	mov	w5, w11
  404fb4:	cmp	w0, #0x2
  404fb8:	b.ne	40483c <ferror@plt+0x2b9c>  // b.any
  404fbc:	b	404b60 <ferror@plt+0x2ec0>
  404fc0:	mov	w5, w11
  404fc4:	mov	w21, w11
  404fc8:	b	404804 <ferror@plt+0x2b64>
  404fcc:	mov	w5, w11
  404fd0:	b	404cdc <ferror@plt+0x303c>
  404fd4:	mov	w5, w11
  404fd8:	mov	w0, #0x74                  	// #116
  404fdc:	b	404898 <ferror@plt+0x2bf8>
  404fe0:	mov	w5, w11
  404fe4:	b	404930 <ferror@plt+0x2c90>
  404fe8:	ldr	w0, [sp, #116]
  404fec:	mov	w5, w11
  404ff0:	cmp	w0, #0x2
  404ff4:	b.ne	404884 <ferror@plt+0x2be4>  // b.any
  404ff8:	b	404600 <ferror@plt+0x2960>
  404ffc:	ldr	x0, [sp, #200]
  405000:	ldrb	w0, [x0]
  405004:	cbz	w0, 4040bc <ferror@plt+0x241c>
  405008:	cmp	x23, x19
  40500c:	b.ls	40502c <ferror@plt+0x338c>  // b.plast
  405010:	strb	w0, [x28, x19]
  405014:	add	x19, x19, #0x1
  405018:	ldr	x0, [sp, #200]
  40501c:	ldrb	w0, [x0, x19]
  405020:	cbz	w0, 4040bc <ferror@plt+0x241c>
  405024:	cmp	x23, x19
  405028:	b.hi	405010 <ferror@plt+0x3370>  // b.pmore
  40502c:	ldr	x0, [sp, #200]
  405030:	add	x19, x19, #0x1
  405034:	ldrb	w0, [x0, x19]
  405038:	cbnz	w0, 405008 <ferror@plt+0x3368>
  40503c:	b	4040bc <ferror@plt+0x241c>
  405040:	mov	x8, x21
  405044:	ldr	w1, [sp, #120]
  405048:	ldr	w10, [sp, #136]
  40504c:	mov	w21, #0x0                   	// #0
  405050:	ldp	w25, w5, [sp, #148]
  405054:	ldp	w7, w11, [sp, #156]
  405058:	ldr	w22, [sp, #220]
  40505c:	ldr	x12, [sp, #128]
  405060:	ldp	x19, x4, [sp, #224]
  405064:	b	4042d8 <ferror@plt+0x2638>
  405068:	ldr	w5, [sp, #124]
  40506c:	mov	w0, w25
  405070:	mov	w21, w5
  405074:	b	4047f4 <ferror@plt+0x2b54>
  405078:	mov	x9, x25
  40507c:	cmp	x25, x24
  405080:	ldr	w10, [sp, #136]
  405084:	mov	x8, x21
  405088:	ldp	w25, w5, [sp, #148]
  40508c:	ldp	w7, w11, [sp, #156]
  405090:	ldr	w22, [sp, #220]
  405094:	ldr	x12, [sp, #128]
  405098:	ldp	x19, x4, [sp, #224]
  40509c:	b.cc	4050b4 <ferror@plt+0x3414>  // b.lo, b.ul, b.last
  4050a0:	b	4050bc <ferror@plt+0x341c>
  4050a4:	add	x8, x8, #0x1
  4050a8:	add	x9, x20, x8
  4050ac:	cmp	x24, x9
  4050b0:	b.ls	4050bc <ferror@plt+0x341c>  // b.plast
  4050b4:	ldrb	w0, [x27, x9]
  4050b8:	cbnz	w0, 4050a4 <ferror@plt+0x3404>
  4050bc:	ldr	w1, [sp, #120]
  4050c0:	mov	w21, #0x0                   	// #0
  4050c4:	b	4042d8 <ferror@plt+0x2638>
  4050c8:	mov	w7, w10
  4050cc:	ldr	x0, [sp, #168]
  4050d0:	cmp	x0, #0x0
  4050d4:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  4050d8:	b.eq	405100 <ferror@plt+0x3460>  // b.none
  4050dc:	ldrb	w1, [x0]
  4050e0:	cbz	w1, 405100 <ferror@plt+0x3460>
  4050e4:	sub	x0, x0, x19
  4050e8:	cmp	x23, x19
  4050ec:	b.ls	405110 <ferror@plt+0x3470>  // b.plast
  4050f0:	strb	w1, [x28, x19]
  4050f4:	add	x19, x19, #0x1
  4050f8:	ldrb	w1, [x0, x19]
  4050fc:	cbnz	w1, 4050e8 <ferror@plt+0x3448>
  405100:	cmp	x23, x19
  405104:	b.ls	404710 <ferror@plt+0x2a70>  // b.plast
  405108:	strb	wzr, [x28, x19]
  40510c:	b	404710 <ferror@plt+0x2a70>
  405110:	add	x19, x19, #0x1
  405114:	ldrb	w1, [x0, x19]
  405118:	cbnz	w1, 4050e8 <ferror@plt+0x3448>
  40511c:	b	405100 <ferror@plt+0x3460>
  405120:	ldr	w7, [sp, #188]
  405124:	b	4050cc <ferror@plt+0x342c>
  405128:	ldp	x1, x7, [sp, #192]
  40512c:	mov	x6, x4
  405130:	ldr	w5, [sp, #184]
  405134:	mov	x3, x24
  405138:	ldr	x0, [sp, #256]
  40513c:	str	x0, [sp]
  405140:	mov	x2, x27
  405144:	mov	x0, x28
  405148:	mov	w4, #0x5                   	// #5
  40514c:	bl	404020 <ferror@plt+0x2380>
  405150:	mov	x19, x0
  405154:	b	404710 <ferror@plt+0x2a70>
  405158:	ldr	x23, [sp, #192]
  40515c:	b	404654 <ferror@plt+0x29b4>
  405160:	mov	w1, #0x1                   	// #1
  405164:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  405168:	mov	w10, w1
  40516c:	add	x0, x0, #0x498
  405170:	mov	w7, w1
  405174:	mov	w5, w1
  405178:	mov	w11, #0x0                   	// #0
  40517c:	mov	w25, #0x0                   	// #0
  405180:	mov	x12, #0x1                   	// #1
  405184:	mov	x19, #0x0                   	// #0
  405188:	stp	wzr, w1, [sp, #120]
  40518c:	str	w1, [sp, #144]
  405190:	str	x0, [sp, #168]
  405194:	str	wzr, [sp, #188]
  405198:	str	xzr, [sp, #192]
  40519c:	str	wzr, [sp, #208]
  4051a0:	b	404118 <ferror@plt+0x2478>
  4051a4:	mov	w25, #0x0                   	// #0
  4051a8:	mov	w0, #0x0                   	// #0
  4051ac:	mov	w5, #0x1                   	// #1
  4051b0:	mov	x1, #0x0                   	// #0
  4051b4:	str	x23, [sp, #192]
  4051b8:	b	4044e4 <ferror@plt+0x2844>
  4051bc:	bl	401ab0 <abort@plt>
  4051c0:	sub	sp, sp, #0x80
  4051c4:	stp	x29, x30, [sp, #16]
  4051c8:	add	x29, sp, #0x10
  4051cc:	stp	x19, x20, [sp, #32]
  4051d0:	mov	w19, w0
  4051d4:	mov	x20, x3
  4051d8:	stp	x21, x22, [sp, #48]
  4051dc:	stp	x23, x24, [sp, #64]
  4051e0:	mov	x23, x1
  4051e4:	mov	x24, x2
  4051e8:	stp	x25, x26, [sp, #80]
  4051ec:	stp	x27, x28, [sp, #96]
  4051f0:	bl	401c50 <__errno_location@plt>
  4051f4:	mov	x22, x0
  4051f8:	ldr	w0, [x0]
  4051fc:	adrp	x27, 41c000 <_obstack_memory_used@@Base+0x13788>
  405200:	str	w0, [sp, #116]
  405204:	ldr	x21, [x27, #560]
  405208:	tbnz	w19, #31, 405360 <ferror@plt+0x36c0>
  40520c:	add	x26, x27, #0x230
  405210:	ldr	w0, [x26, #8]
  405214:	cmp	w0, w19
  405218:	b.gt	405268 <ferror@plt+0x35c8>
  40521c:	mov	w0, #0x7fffffff            	// #2147483647
  405220:	cmp	w19, w0
  405224:	b.eq	40535c <ferror@plt+0x36bc>  // b.none
  405228:	add	w28, w19, #0x1
  40522c:	add	x0, x26, #0x10
  405230:	cmp	x21, x0
  405234:	sbfiz	x1, x28, #4, #32
  405238:	b.eq	405340 <ferror@plt+0x36a0>  // b.none
  40523c:	mov	x0, x21
  405240:	bl	408048 <ferror@plt+0x63a8>
  405244:	mov	x21, x0
  405248:	str	x0, [x27, #560]
  40524c:	ldr	w0, [x26, #8]
  405250:	mov	w1, #0x0                   	// #0
  405254:	sub	w2, w28, w0
  405258:	add	x0, x21, w0, sxtw #4
  40525c:	sbfiz	x2, x2, #4, #32
  405260:	bl	401a30 <memset@plt>
  405264:	str	w28, [x26, #8]
  405268:	sbfiz	x19, x19, #4, #32
  40526c:	add	x26, x20, #0x8
  405270:	add	x0, x21, x19
  405274:	str	x0, [sp, #120]
  405278:	ldp	w4, w5, [x20]
  40527c:	mov	x6, x26
  405280:	ldr	x7, [x20, #40]
  405284:	orr	w25, w5, #0x1
  405288:	ldr	x27, [x21, x19]
  40528c:	mov	x3, x24
  405290:	ldr	x28, [x0, #8]
  405294:	mov	x1, x27
  405298:	ldr	x0, [x20, #48]
  40529c:	str	x0, [sp]
  4052a0:	mov	x2, x23
  4052a4:	mov	w5, w25
  4052a8:	mov	x0, x28
  4052ac:	bl	404020 <ferror@plt+0x2380>
  4052b0:	cmp	x27, x0
  4052b4:	b.hi	405314 <ferror@plt+0x3674>  // b.pmore
  4052b8:	add	x27, x0, #0x1
  4052bc:	str	x27, [x21, x19]
  4052c0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  4052c4:	add	x0, x0, #0x340
  4052c8:	cmp	x28, x0
  4052cc:	b.eq	4052d8 <ferror@plt+0x3638>  // b.none
  4052d0:	mov	x0, x28
  4052d4:	bl	401b70 <free@plt>
  4052d8:	mov	x0, x27
  4052dc:	bl	408018 <ferror@plt+0x6378>
  4052e0:	ldr	x1, [sp, #120]
  4052e4:	mov	x28, x0
  4052e8:	ldr	w4, [x20]
  4052ec:	mov	x6, x26
  4052f0:	ldr	x7, [x20, #40]
  4052f4:	str	x0, [x1, #8]
  4052f8:	ldr	x1, [x20, #48]
  4052fc:	str	x1, [sp]
  405300:	mov	w5, w25
  405304:	mov	x3, x24
  405308:	mov	x2, x23
  40530c:	mov	x1, x27
  405310:	bl	404020 <ferror@plt+0x2380>
  405314:	ldr	w0, [sp, #116]
  405318:	ldp	x29, x30, [sp, #16]
  40531c:	ldp	x19, x20, [sp, #32]
  405320:	ldp	x23, x24, [sp, #64]
  405324:	ldp	x25, x26, [sp, #80]
  405328:	str	w0, [x22]
  40532c:	mov	x0, x28
  405330:	ldp	x21, x22, [sp, #48]
  405334:	ldp	x27, x28, [sp, #96]
  405338:	add	sp, sp, #0x80
  40533c:	ret
  405340:	mov	x0, #0x0                   	// #0
  405344:	bl	408048 <ferror@plt+0x63a8>
  405348:	mov	x21, x0
  40534c:	str	x0, [x27, #560]
  405350:	ldp	x0, x1, [x26, #16]
  405354:	stp	x0, x1, [x21]
  405358:	b	40524c <ferror@plt+0x35ac>
  40535c:	bl	4081e0 <ferror@plt+0x6540>
  405360:	bl	401ab0 <abort@plt>
  405364:	nop
  405368:	stp	x29, x30, [sp, #-48]!
  40536c:	mov	x29, sp
  405370:	stp	x19, x20, [sp, #16]
  405374:	mov	x20, x0
  405378:	str	x21, [sp, #32]
  40537c:	bl	401c50 <__errno_location@plt>
  405380:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x13788>
  405384:	mov	x19, x0
  405388:	add	x2, x2, #0x340
  40538c:	cmp	x20, #0x0
  405390:	add	x2, x2, #0x100
  405394:	mov	x1, #0x38                  	// #56
  405398:	ldr	w21, [x19]
  40539c:	csel	x0, x2, x20, eq  // eq = none
  4053a0:	bl	408160 <ferror@plt+0x64c0>
  4053a4:	str	w21, [x19]
  4053a8:	ldp	x19, x20, [sp, #16]
  4053ac:	ldr	x21, [sp, #32]
  4053b0:	ldp	x29, x30, [sp], #48
  4053b4:	ret
  4053b8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  4053bc:	add	x1, x1, #0x340
  4053c0:	cmp	x0, #0x0
  4053c4:	add	x1, x1, #0x100
  4053c8:	csel	x0, x1, x0, eq  // eq = none
  4053cc:	ldr	w0, [x0]
  4053d0:	ret
  4053d4:	nop
  4053d8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x13788>
  4053dc:	add	x2, x2, #0x340
  4053e0:	cmp	x0, #0x0
  4053e4:	add	x2, x2, #0x100
  4053e8:	csel	x0, x2, x0, eq  // eq = none
  4053ec:	str	w1, [x0]
  4053f0:	ret
  4053f4:	nop
  4053f8:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x13788>
  4053fc:	add	x3, x3, #0x340
  405400:	cmp	x0, #0x0
  405404:	add	x3, x3, #0x100
  405408:	csel	x0, x3, x0, eq  // eq = none
  40540c:	ubfx	x4, x1, #5, #3
  405410:	add	x3, x0, #0x8
  405414:	and	w1, w1, #0x1f
  405418:	ldr	w5, [x3, x4, lsl #2]
  40541c:	lsr	w0, w5, w1
  405420:	eor	w2, w0, w2
  405424:	and	w2, w2, #0x1
  405428:	and	w0, w0, #0x1
  40542c:	lsl	w2, w2, w1
  405430:	eor	w2, w2, w5
  405434:	str	w2, [x3, x4, lsl #2]
  405438:	ret
  40543c:	nop
  405440:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x13788>
  405444:	add	x3, x3, #0x340
  405448:	cmp	x0, #0x0
  40544c:	add	x3, x3, #0x100
  405450:	csel	x2, x3, x0, eq  // eq = none
  405454:	ldr	w0, [x2, #4]
  405458:	str	w1, [x2, #4]
  40545c:	ret
  405460:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0x13788>
  405464:	add	x3, x3, #0x340
  405468:	cmp	x0, #0x0
  40546c:	add	x3, x3, #0x100
  405470:	csel	x0, x3, x0, eq  // eq = none
  405474:	mov	w3, #0xa                   	// #10
  405478:	cmp	x1, #0x0
  40547c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  405480:	str	w3, [x0]
  405484:	b.eq	405490 <ferror@plt+0x37f0>  // b.none
  405488:	stp	x1, x2, [x0, #40]
  40548c:	ret
  405490:	stp	x29, x30, [sp, #-16]!
  405494:	mov	x29, sp
  405498:	bl	401ab0 <abort@plt>
  40549c:	nop
  4054a0:	sub	sp, sp, #0x50
  4054a4:	adrp	x5, 41c000 <_obstack_memory_used@@Base+0x13788>
  4054a8:	stp	x29, x30, [sp, #16]
  4054ac:	add	x29, sp, #0x10
  4054b0:	stp	x19, x20, [sp, #32]
  4054b4:	mov	x19, x4
  4054b8:	add	x4, x5, #0x340
  4054bc:	cmp	x19, #0x0
  4054c0:	add	x4, x4, #0x100
  4054c4:	csel	x19, x4, x19, eq  // eq = none
  4054c8:	mov	x20, x3
  4054cc:	stp	x21, x22, [sp, #48]
  4054d0:	mov	x21, x0
  4054d4:	mov	x22, x1
  4054d8:	str	x23, [sp, #64]
  4054dc:	mov	x23, x2
  4054e0:	bl	401c50 <__errno_location@plt>
  4054e4:	ldp	x7, x8, [x19, #40]
  4054e8:	mov	x3, x20
  4054ec:	mov	x20, x0
  4054f0:	mov	x0, x21
  4054f4:	ldp	w4, w5, [x19]
  4054f8:	mov	x2, x23
  4054fc:	ldr	w21, [x20]
  405500:	mov	x1, x22
  405504:	str	x8, [sp]
  405508:	add	x6, x19, #0x8
  40550c:	bl	404020 <ferror@plt+0x2380>
  405510:	ldp	x29, x30, [sp, #16]
  405514:	ldr	x23, [sp, #64]
  405518:	str	w21, [x20]
  40551c:	ldp	x19, x20, [sp, #32]
  405520:	ldp	x21, x22, [sp, #48]
  405524:	add	sp, sp, #0x50
  405528:	ret
  40552c:	nop
  405530:	sub	sp, sp, #0x60
  405534:	adrp	x4, 41c000 <_obstack_memory_used@@Base+0x13788>
  405538:	add	x4, x4, #0x340
  40553c:	cmp	x2, #0x0
  405540:	add	x4, x4, #0x100
  405544:	stp	x29, x30, [sp, #16]
  405548:	add	x29, sp, #0x10
  40554c:	stp	x19, x20, [sp, #32]
  405550:	csel	x19, x4, x2, eq  // eq = none
  405554:	stp	x21, x22, [sp, #48]
  405558:	mov	x22, x0
  40555c:	stp	x23, x24, [sp, #64]
  405560:	mov	x23, x1
  405564:	stp	x25, x26, [sp, #80]
  405568:	bl	401c50 <__errno_location@plt>
  40556c:	ldr	w26, [x0]
  405570:	ldp	w4, w24, [x19]
  405574:	mov	x20, x0
  405578:	ldp	x7, x0, [x19, #40]
  40557c:	add	x25, x19, #0x8
  405580:	orr	w24, w24, #0x1
  405584:	mov	x6, x25
  405588:	mov	x3, x23
  40558c:	mov	x2, x22
  405590:	mov	w5, w24
  405594:	str	x0, [sp]
  405598:	mov	x1, #0x0                   	// #0
  40559c:	mov	x0, #0x0                   	// #0
  4055a0:	bl	404020 <ferror@plt+0x2380>
  4055a4:	add	x21, x0, #0x1
  4055a8:	mov	x0, x21
  4055ac:	bl	408018 <ferror@plt+0x6378>
  4055b0:	ldp	x7, x1, [x19, #40]
  4055b4:	mov	w5, w24
  4055b8:	ldr	w4, [x19]
  4055bc:	mov	x6, x25
  4055c0:	str	x1, [sp]
  4055c4:	mov	x3, x23
  4055c8:	mov	x2, x22
  4055cc:	mov	x19, x0
  4055d0:	mov	x1, x21
  4055d4:	bl	404020 <ferror@plt+0x2380>
  4055d8:	mov	x0, x19
  4055dc:	ldp	x29, x30, [sp, #16]
  4055e0:	ldp	x21, x22, [sp, #48]
  4055e4:	ldp	x23, x24, [sp, #64]
  4055e8:	str	w26, [x20]
  4055ec:	ldp	x19, x20, [sp, #32]
  4055f0:	ldp	x25, x26, [sp, #80]
  4055f4:	add	sp, sp, #0x60
  4055f8:	ret
  4055fc:	nop
  405600:	sub	sp, sp, #0x70
  405604:	adrp	x4, 41c000 <_obstack_memory_used@@Base+0x13788>
  405608:	add	x4, x4, #0x340
  40560c:	cmp	x3, #0x0
  405610:	add	x4, x4, #0x100
  405614:	stp	x29, x30, [sp, #16]
  405618:	add	x29, sp, #0x10
  40561c:	stp	x19, x20, [sp, #32]
  405620:	csel	x19, x4, x3, eq  // eq = none
  405624:	mov	x20, x2
  405628:	stp	x21, x22, [sp, #48]
  40562c:	mov	x22, x0
  405630:	stp	x23, x24, [sp, #64]
  405634:	mov	x23, x1
  405638:	stp	x25, x26, [sp, #80]
  40563c:	stp	x27, x28, [sp, #96]
  405640:	bl	401c50 <__errno_location@plt>
  405644:	ldr	w28, [x0]
  405648:	ldp	w4, w5, [x19]
  40564c:	mov	x21, x0
  405650:	ldp	x7, x0, [x19, #40]
  405654:	cmp	x20, #0x0
  405658:	cset	w24, eq  // eq = none
  40565c:	add	x27, x19, #0x8
  405660:	orr	w24, w24, w5
  405664:	mov	x6, x27
  405668:	mov	x3, x23
  40566c:	mov	x2, x22
  405670:	mov	w5, w24
  405674:	str	x0, [sp]
  405678:	mov	x1, #0x0                   	// #0
  40567c:	mov	x0, #0x0                   	// #0
  405680:	bl	404020 <ferror@plt+0x2380>
  405684:	add	x26, x0, #0x1
  405688:	mov	x25, x0
  40568c:	mov	x0, x26
  405690:	bl	408018 <ferror@plt+0x6378>
  405694:	ldp	x7, x1, [x19, #40]
  405698:	mov	w5, w24
  40569c:	ldr	w4, [x19]
  4056a0:	mov	x6, x27
  4056a4:	str	x1, [sp]
  4056a8:	mov	x3, x23
  4056ac:	mov	x2, x22
  4056b0:	mov	x19, x0
  4056b4:	mov	x1, x26
  4056b8:	bl	404020 <ferror@plt+0x2380>
  4056bc:	str	w28, [x21]
  4056c0:	cbz	x20, 4056c8 <ferror@plt+0x3a28>
  4056c4:	str	x25, [x20]
  4056c8:	mov	x0, x19
  4056cc:	ldp	x29, x30, [sp, #16]
  4056d0:	ldp	x19, x20, [sp, #32]
  4056d4:	ldp	x21, x22, [sp, #48]
  4056d8:	ldp	x23, x24, [sp, #64]
  4056dc:	ldp	x25, x26, [sp, #80]
  4056e0:	ldp	x27, x28, [sp, #96]
  4056e4:	add	sp, sp, #0x70
  4056e8:	ret
  4056ec:	nop
  4056f0:	stp	x29, x30, [sp, #-64]!
  4056f4:	mov	x29, sp
  4056f8:	stp	x21, x22, [sp, #32]
  4056fc:	str	x23, [sp, #48]
  405700:	adrp	x23, 41c000 <_obstack_memory_used@@Base+0x13788>
  405704:	add	x22, x23, #0x230
  405708:	stp	x19, x20, [sp, #16]
  40570c:	ldr	x21, [x23, #560]
  405710:	ldr	w20, [x22, #8]
  405714:	cmp	w20, #0x1
  405718:	b.le	405740 <ferror@plt+0x3aa0>
  40571c:	sub	w0, w20, #0x2
  405720:	add	x20, x21, #0x28
  405724:	add	x19, x21, #0x18
  405728:	add	x20, x20, w0, uxtw #4
  40572c:	nop
  405730:	ldr	x0, [x19], #16
  405734:	bl	401b70 <free@plt>
  405738:	cmp	x19, x20
  40573c:	b.ne	405730 <ferror@plt+0x3a90>  // b.any
  405740:	ldr	x0, [x21, #8]
  405744:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0x13788>
  405748:	add	x19, x19, #0x340
  40574c:	cmp	x0, x19
  405750:	b.eq	405760 <ferror@plt+0x3ac0>  // b.none
  405754:	bl	401b70 <free@plt>
  405758:	mov	x0, #0x100                 	// #256
  40575c:	stp	x0, x19, [x22, #16]
  405760:	add	x19, x22, #0x10
  405764:	cmp	x21, x19
  405768:	b.eq	405778 <ferror@plt+0x3ad8>  // b.none
  40576c:	mov	x0, x21
  405770:	bl	401b70 <free@plt>
  405774:	str	x19, [x23, #560]
  405778:	mov	w0, #0x1                   	// #1
  40577c:	str	w0, [x22, #8]
  405780:	ldp	x19, x20, [sp, #16]
  405784:	ldp	x21, x22, [sp, #32]
  405788:	ldr	x23, [sp, #48]
  40578c:	ldp	x29, x30, [sp], #64
  405790:	ret
  405794:	nop
  405798:	sub	sp, sp, #0x70
  40579c:	stp	x29, x30, [sp, #16]
  4057a0:	add	x29, sp, #0x10
  4057a4:	stp	x21, x22, [sp, #48]
  4057a8:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x13788>
  4057ac:	stp	x19, x20, [sp, #32]
  4057b0:	mov	w19, w0
  4057b4:	stp	x23, x24, [sp, #64]
  4057b8:	mov	x24, x1
  4057bc:	stp	x25, x26, [sp, #80]
  4057c0:	stp	x27, x28, [sp, #96]
  4057c4:	bl	401c50 <__errno_location@plt>
  4057c8:	ldr	w25, [x0]
  4057cc:	ldr	x20, [x22, #560]
  4057d0:	tbnz	w19, #31, 405918 <ferror@plt+0x3c78>
  4057d4:	add	x21, x22, #0x230
  4057d8:	mov	x23, x0
  4057dc:	ldr	w0, [x21, #8]
  4057e0:	cmp	w19, w0
  4057e4:	b.lt	405834 <ferror@plt+0x3b94>  // b.tstop
  4057e8:	mov	w0, #0x7fffffff            	// #2147483647
  4057ec:	cmp	w19, w0
  4057f0:	b.eq	405914 <ferror@plt+0x3c74>  // b.none
  4057f4:	add	w26, w19, #0x1
  4057f8:	add	x0, x21, #0x10
  4057fc:	cmp	x20, x0
  405800:	sbfiz	x1, x26, #4, #32
  405804:	b.eq	4058f8 <ferror@plt+0x3c58>  // b.none
  405808:	mov	x0, x20
  40580c:	bl	408048 <ferror@plt+0x63a8>
  405810:	mov	x20, x0
  405814:	str	x0, [x22, #560]
  405818:	ldr	w0, [x21, #8]
  40581c:	mov	w1, #0x0                   	// #0
  405820:	sub	w2, w26, w0
  405824:	add	x0, x20, w0, sxtw #4
  405828:	sbfiz	x2, x2, #4, #32
  40582c:	bl	401a30 <memset@plt>
  405830:	str	w26, [x21, #8]
  405834:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  405838:	add	x21, x21, #0x340
  40583c:	sbfiz	x19, x19, #4, #32
  405840:	add	x6, x21, #0x108
  405844:	add	x26, x20, x19
  405848:	mov	x2, x24
  40584c:	ldp	x7, x0, [x21, #296]
  405850:	mov	x3, #0xffffffffffffffff    	// #-1
  405854:	ldr	w4, [x21, #256]
  405858:	ldr	w28, [x21, #260]
  40585c:	ldr	x22, [x20, x19]
  405860:	orr	w28, w28, #0x1
  405864:	ldr	x27, [x26, #8]
  405868:	str	x0, [sp]
  40586c:	mov	x1, x22
  405870:	mov	w5, w28
  405874:	mov	x0, x27
  405878:	bl	404020 <ferror@plt+0x2380>
  40587c:	cmp	x22, x0
  405880:	b.hi	4058d0 <ferror@plt+0x3c30>  // b.pmore
  405884:	add	x22, x0, #0x1
  405888:	str	x22, [x20, x19]
  40588c:	cmp	x27, x21
  405890:	b.eq	40589c <ferror@plt+0x3bfc>  // b.none
  405894:	mov	x0, x27
  405898:	bl	401b70 <free@plt>
  40589c:	mov	x0, x22
  4058a0:	bl	408018 <ferror@plt+0x6378>
  4058a4:	ldp	x7, x1, [x21, #296]
  4058a8:	str	x0, [x26, #8]
  4058ac:	ldr	w4, [x21, #256]
  4058b0:	mov	x27, x0
  4058b4:	str	x1, [sp]
  4058b8:	mov	w5, w28
  4058bc:	mov	x2, x24
  4058c0:	add	x6, x21, #0x108
  4058c4:	mov	x1, x22
  4058c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4058cc:	bl	404020 <ferror@plt+0x2380>
  4058d0:	mov	x0, x27
  4058d4:	ldp	x29, x30, [sp, #16]
  4058d8:	ldp	x19, x20, [sp, #32]
  4058dc:	ldp	x21, x22, [sp, #48]
  4058e0:	ldp	x27, x28, [sp, #96]
  4058e4:	str	w25, [x23]
  4058e8:	ldp	x23, x24, [sp, #64]
  4058ec:	ldp	x25, x26, [sp, #80]
  4058f0:	add	sp, sp, #0x70
  4058f4:	ret
  4058f8:	mov	x0, #0x0                   	// #0
  4058fc:	bl	408048 <ferror@plt+0x63a8>
  405900:	mov	x20, x0
  405904:	str	x0, [x22, #560]
  405908:	ldp	x0, x1, [x21, #16]
  40590c:	stp	x0, x1, [x20]
  405910:	b	405818 <ferror@plt+0x3b78>
  405914:	bl	4081e0 <ferror@plt+0x6540>
  405918:	bl	401ab0 <abort@plt>
  40591c:	nop
  405920:	sub	sp, sp, #0x80
  405924:	stp	x29, x30, [sp, #16]
  405928:	add	x29, sp, #0x10
  40592c:	stp	x19, x20, [sp, #32]
  405930:	mov	w19, w0
  405934:	stp	x21, x22, [sp, #48]
  405938:	stp	x23, x24, [sp, #64]
  40593c:	mov	x23, x1
  405940:	mov	x24, x2
  405944:	stp	x25, x26, [sp, #80]
  405948:	adrp	x26, 41c000 <_obstack_memory_used@@Base+0x13788>
  40594c:	stp	x27, x28, [sp, #96]
  405950:	bl	401c50 <__errno_location@plt>
  405954:	mov	x22, x0
  405958:	ldr	w0, [x0]
  40595c:	str	w0, [sp, #124]
  405960:	ldr	x20, [x26, #560]
  405964:	tbnz	w19, #31, 405aac <ferror@plt+0x3e0c>
  405968:	add	x21, x26, #0x230
  40596c:	ldr	w0, [x21, #8]
  405970:	cmp	w19, w0
  405974:	b.lt	4059c4 <ferror@plt+0x3d24>  // b.tstop
  405978:	mov	w0, #0x7fffffff            	// #2147483647
  40597c:	cmp	w19, w0
  405980:	b.eq	405aa8 <ferror@plt+0x3e08>  // b.none
  405984:	add	w27, w19, #0x1
  405988:	add	x0, x21, #0x10
  40598c:	cmp	x20, x0
  405990:	sbfiz	x1, x27, #4, #32
  405994:	b.eq	405a8c <ferror@plt+0x3dec>  // b.none
  405998:	mov	x0, x20
  40599c:	bl	408048 <ferror@plt+0x63a8>
  4059a0:	mov	x20, x0
  4059a4:	str	x0, [x26, #560]
  4059a8:	ldr	w0, [x21, #8]
  4059ac:	mov	w1, #0x0                   	// #0
  4059b0:	sub	w2, w27, w0
  4059b4:	add	x0, x20, w0, sxtw #4
  4059b8:	sbfiz	x2, x2, #4, #32
  4059bc:	bl	401a30 <memset@plt>
  4059c0:	str	w27, [x21, #8]
  4059c4:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  4059c8:	add	x21, x21, #0x340
  4059cc:	sbfiz	x19, x19, #4, #32
  4059d0:	add	x6, x21, #0x108
  4059d4:	add	x26, x20, x19
  4059d8:	mov	x3, x24
  4059dc:	ldp	x7, x0, [x21, #296]
  4059e0:	mov	x2, x23
  4059e4:	ldr	w4, [x21, #256]
  4059e8:	ldr	w5, [x21, #260]
  4059ec:	ldr	x27, [x20, x19]
  4059f0:	orr	w25, w5, #0x1
  4059f4:	ldr	x28, [x26, #8]
  4059f8:	str	x0, [sp]
  4059fc:	mov	x1, x27
  405a00:	mov	w5, w25
  405a04:	mov	x0, x28
  405a08:	bl	404020 <ferror@plt+0x2380>
  405a0c:	cmp	x27, x0
  405a10:	b.hi	405a60 <ferror@plt+0x3dc0>  // b.pmore
  405a14:	add	x27, x0, #0x1
  405a18:	str	x27, [x20, x19]
  405a1c:	cmp	x28, x21
  405a20:	b.eq	405a2c <ferror@plt+0x3d8c>  // b.none
  405a24:	mov	x0, x28
  405a28:	bl	401b70 <free@plt>
  405a2c:	mov	x0, x27
  405a30:	bl	408018 <ferror@plt+0x6378>
  405a34:	ldp	x7, x1, [x21, #296]
  405a38:	str	x0, [x26, #8]
  405a3c:	ldr	w4, [x21, #256]
  405a40:	mov	x28, x0
  405a44:	str	x1, [sp]
  405a48:	mov	w5, w25
  405a4c:	mov	x3, x24
  405a50:	mov	x2, x23
  405a54:	add	x6, x21, #0x108
  405a58:	mov	x1, x27
  405a5c:	bl	404020 <ferror@plt+0x2380>
  405a60:	ldr	w0, [sp, #124]
  405a64:	ldp	x29, x30, [sp, #16]
  405a68:	ldp	x19, x20, [sp, #32]
  405a6c:	ldp	x23, x24, [sp, #64]
  405a70:	ldp	x25, x26, [sp, #80]
  405a74:	str	w0, [x22]
  405a78:	mov	x0, x28
  405a7c:	ldp	x21, x22, [sp, #48]
  405a80:	ldp	x27, x28, [sp, #96]
  405a84:	add	sp, sp, #0x80
  405a88:	ret
  405a8c:	mov	x0, #0x0                   	// #0
  405a90:	bl	408048 <ferror@plt+0x63a8>
  405a94:	mov	x20, x0
  405a98:	str	x0, [x26, #560]
  405a9c:	ldp	x0, x1, [x21, #16]
  405aa0:	stp	x0, x1, [x20]
  405aa4:	b	4059a8 <ferror@plt+0x3d08>
  405aa8:	bl	4081e0 <ferror@plt+0x6540>
  405aac:	bl	401ab0 <abort@plt>
  405ab0:	sub	sp, sp, #0x60
  405ab4:	stp	x29, x30, [sp, #16]
  405ab8:	add	x29, sp, #0x10
  405abc:	stp	x19, x20, [sp, #32]
  405ac0:	stp	x21, x22, [sp, #48]
  405ac4:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  405ac8:	add	x20, x21, #0x230
  405acc:	stp	x23, x24, [sp, #64]
  405ad0:	mov	x24, x0
  405ad4:	stp	x25, x26, [sp, #80]
  405ad8:	bl	401c50 <__errno_location@plt>
  405adc:	mov	x23, x0
  405ae0:	ldr	w0, [x20, #8]
  405ae4:	ldr	x19, [x21, #560]
  405ae8:	cmp	w0, #0x0
  405aec:	ldr	w25, [x23]
  405af0:	b.gt	405b34 <ferror@plt+0x3e94>
  405af4:	add	x0, x20, #0x10
  405af8:	cmp	x19, x0
  405afc:	b.eq	405be8 <ferror@plt+0x3f48>  // b.none
  405b00:	mov	x0, x19
  405b04:	mov	x1, #0x10                  	// #16
  405b08:	bl	408048 <ferror@plt+0x63a8>
  405b0c:	mov	x19, x0
  405b10:	str	x0, [x21, #560]
  405b14:	ldr	w0, [x20, #8]
  405b18:	mov	w21, #0x1                   	// #1
  405b1c:	mov	w1, #0x0                   	// #0
  405b20:	sub	w2, w21, w0
  405b24:	add	x0, x19, w0, sxtw #4
  405b28:	sbfiz	x2, x2, #4, #32
  405b2c:	bl	401a30 <memset@plt>
  405b30:	str	w21, [x20, #8]
  405b34:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x13788>
  405b38:	add	x20, x20, #0x340
  405b3c:	ldp	x21, x22, [x19]
  405b40:	add	x6, x20, #0x108
  405b44:	ldp	x7, x0, [x20, #296]
  405b48:	mov	x2, x24
  405b4c:	ldr	w4, [x20, #256]
  405b50:	mov	x3, #0xffffffffffffffff    	// #-1
  405b54:	ldr	w26, [x20, #260]
  405b58:	str	x0, [sp]
  405b5c:	mov	x1, x21
  405b60:	orr	w26, w26, #0x1
  405b64:	mov	x0, x22
  405b68:	mov	w5, w26
  405b6c:	bl	404020 <ferror@plt+0x2380>
  405b70:	cmp	x21, x0
  405b74:	b.hi	405bc4 <ferror@plt+0x3f24>  // b.pmore
  405b78:	add	x21, x0, #0x1
  405b7c:	str	x21, [x19]
  405b80:	cmp	x22, x20
  405b84:	b.eq	405b90 <ferror@plt+0x3ef0>  // b.none
  405b88:	mov	x0, x22
  405b8c:	bl	401b70 <free@plt>
  405b90:	mov	x0, x21
  405b94:	bl	408018 <ferror@plt+0x6378>
  405b98:	ldp	x7, x1, [x20, #296]
  405b9c:	str	x0, [x19, #8]
  405ba0:	ldr	w4, [x20, #256]
  405ba4:	mov	x22, x0
  405ba8:	str	x1, [sp]
  405bac:	mov	w5, w26
  405bb0:	mov	x2, x24
  405bb4:	add	x6, x20, #0x108
  405bb8:	mov	x1, x21
  405bbc:	mov	x3, #0xffffffffffffffff    	// #-1
  405bc0:	bl	404020 <ferror@plt+0x2380>
  405bc4:	mov	x0, x22
  405bc8:	ldp	x29, x30, [sp, #16]
  405bcc:	ldp	x19, x20, [sp, #32]
  405bd0:	ldp	x21, x22, [sp, #48]
  405bd4:	str	w25, [x23]
  405bd8:	ldp	x23, x24, [sp, #64]
  405bdc:	ldp	x25, x26, [sp, #80]
  405be0:	add	sp, sp, #0x60
  405be4:	ret
  405be8:	mov	x1, #0x10                  	// #16
  405bec:	mov	x0, #0x0                   	// #0
  405bf0:	bl	408048 <ferror@plt+0x63a8>
  405bf4:	mov	x19, x0
  405bf8:	str	x0, [x21, #560]
  405bfc:	ldp	x0, x1, [x20, #16]
  405c00:	stp	x0, x1, [x19]
  405c04:	b	405b14 <ferror@plt+0x3e74>
  405c08:	sub	sp, sp, #0x70
  405c0c:	stp	x29, x30, [sp, #16]
  405c10:	add	x29, sp, #0x10
  405c14:	stp	x19, x20, [sp, #32]
  405c18:	stp	x21, x22, [sp, #48]
  405c1c:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  405c20:	add	x20, x21, #0x230
  405c24:	stp	x23, x24, [sp, #64]
  405c28:	mov	x23, x0
  405c2c:	mov	x24, x1
  405c30:	stp	x25, x26, [sp, #80]
  405c34:	str	x27, [sp, #96]
  405c38:	bl	401c50 <__errno_location@plt>
  405c3c:	mov	x22, x0
  405c40:	ldr	w0, [x20, #8]
  405c44:	ldr	x19, [x21, #560]
  405c48:	cmp	w0, #0x0
  405c4c:	ldr	w25, [x22]
  405c50:	b.gt	405c94 <ferror@plt+0x3ff4>
  405c54:	add	x0, x20, #0x10
  405c58:	cmp	x19, x0
  405c5c:	b.eq	405d4c <ferror@plt+0x40ac>  // b.none
  405c60:	mov	x0, x19
  405c64:	mov	x1, #0x10                  	// #16
  405c68:	bl	408048 <ferror@plt+0x63a8>
  405c6c:	mov	x19, x0
  405c70:	str	x0, [x21, #560]
  405c74:	ldr	w0, [x20, #8]
  405c78:	mov	w21, #0x1                   	// #1
  405c7c:	mov	w1, #0x0                   	// #0
  405c80:	sub	w2, w21, w0
  405c84:	add	x0, x19, w0, sxtw #4
  405c88:	sbfiz	x2, x2, #4, #32
  405c8c:	bl	401a30 <memset@plt>
  405c90:	str	w21, [x20, #8]
  405c94:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x13788>
  405c98:	add	x20, x20, #0x340
  405c9c:	ldp	x21, x26, [x19]
  405ca0:	add	x6, x20, #0x108
  405ca4:	ldp	x7, x0, [x20, #296]
  405ca8:	mov	x3, x24
  405cac:	ldr	w4, [x20, #256]
  405cb0:	mov	x2, x23
  405cb4:	ldr	w27, [x20, #260]
  405cb8:	str	x0, [sp]
  405cbc:	mov	x1, x21
  405cc0:	orr	w27, w27, #0x1
  405cc4:	mov	x0, x26
  405cc8:	mov	w5, w27
  405ccc:	bl	404020 <ferror@plt+0x2380>
  405cd0:	cmp	x21, x0
  405cd4:	b.hi	405d24 <ferror@plt+0x4084>  // b.pmore
  405cd8:	add	x21, x0, #0x1
  405cdc:	str	x21, [x19]
  405ce0:	cmp	x26, x20
  405ce4:	b.eq	405cf0 <ferror@plt+0x4050>  // b.none
  405ce8:	mov	x0, x26
  405cec:	bl	401b70 <free@plt>
  405cf0:	mov	x0, x21
  405cf4:	bl	408018 <ferror@plt+0x6378>
  405cf8:	ldp	x7, x1, [x20, #296]
  405cfc:	str	x0, [x19, #8]
  405d00:	ldr	w4, [x20, #256]
  405d04:	mov	x26, x0
  405d08:	str	x1, [sp]
  405d0c:	mov	w5, w27
  405d10:	mov	x3, x24
  405d14:	mov	x2, x23
  405d18:	add	x6, x20, #0x108
  405d1c:	mov	x1, x21
  405d20:	bl	404020 <ferror@plt+0x2380>
  405d24:	mov	x0, x26
  405d28:	ldp	x29, x30, [sp, #16]
  405d2c:	ldp	x19, x20, [sp, #32]
  405d30:	ldp	x23, x24, [sp, #64]
  405d34:	ldr	x27, [sp, #96]
  405d38:	str	w25, [x22]
  405d3c:	ldp	x21, x22, [sp, #48]
  405d40:	ldp	x25, x26, [sp, #80]
  405d44:	add	sp, sp, #0x70
  405d48:	ret
  405d4c:	mov	x1, #0x10                  	// #16
  405d50:	mov	x0, #0x0                   	// #0
  405d54:	bl	408048 <ferror@plt+0x63a8>
  405d58:	mov	x19, x0
  405d5c:	str	x0, [x21, #560]
  405d60:	ldp	x0, x1, [x20, #16]
  405d64:	stp	x0, x1, [x19]
  405d68:	b	405c74 <ferror@plt+0x3fd4>
  405d6c:	nop
  405d70:	stp	x29, x30, [sp, #-128]!
  405d74:	cmp	w1, #0xa
  405d78:	mov	x29, sp
  405d7c:	stp	xzr, xzr, [sp, #72]
  405d80:	b.eq	405db8 <ferror@plt+0x4118>  // b.none
  405d84:	mov	w3, w1
  405d88:	str	w3, [sp, #72]
  405d8c:	mov	x1, x2
  405d90:	add	x3, sp, #0x10
  405d94:	ldp	x4, x5, [sp, #72]
  405d98:	mov	x2, #0xffffffffffffffff    	// #-1
  405d9c:	stp	x4, x5, [sp, #16]
  405da0:	stp	xzr, xzr, [sp, #32]
  405da4:	stp	xzr, xzr, [sp, #48]
  405da8:	str	xzr, [sp, #64]
  405dac:	bl	4051c0 <ferror@plt+0x3520>
  405db0:	ldp	x29, x30, [sp], #128
  405db4:	ret
  405db8:	bl	401ab0 <abort@plt>
  405dbc:	nop
  405dc0:	stp	x29, x30, [sp, #-128]!
  405dc4:	cmp	w1, #0xa
  405dc8:	mov	x29, sp
  405dcc:	stp	xzr, xzr, [sp, #72]
  405dd0:	b.eq	405e08 <ferror@plt+0x4168>  // b.none
  405dd4:	mov	w4, w1
  405dd8:	str	w4, [sp, #72]
  405ddc:	mov	x1, x2
  405de0:	mov	x2, x3
  405de4:	ldp	x4, x5, [sp, #72]
  405de8:	add	x3, sp, #0x10
  405dec:	stp	x4, x5, [sp, #16]
  405df0:	stp	xzr, xzr, [sp, #32]
  405df4:	stp	xzr, xzr, [sp, #48]
  405df8:	str	xzr, [sp, #64]
  405dfc:	bl	4051c0 <ferror@plt+0x3520>
  405e00:	ldp	x29, x30, [sp], #128
  405e04:	ret
  405e08:	bl	401ab0 <abort@plt>
  405e0c:	nop
  405e10:	sub	sp, sp, #0xd0
  405e14:	cmp	w0, #0xa
  405e18:	stp	x29, x30, [sp, #16]
  405e1c:	add	x29, sp, #0x10
  405e20:	stp	x19, x20, [sp, #32]
  405e24:	stp	x21, x22, [sp, #48]
  405e28:	stp	x23, x24, [sp, #64]
  405e2c:	str	x25, [sp, #80]
  405e30:	stp	xzr, xzr, [sp, #152]
  405e34:	stp	xzr, xzr, [sp, #168]
  405e38:	stp	xzr, xzr, [sp, #184]
  405e3c:	str	xzr, [sp, #200]
  405e40:	b.eq	405f94 <ferror@plt+0x42f4>  // b.none
  405e44:	str	w0, [sp, #152]
  405e48:	mov	x23, x1
  405e4c:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  405e50:	add	x20, x21, #0x230
  405e54:	ldp	x0, x1, [sp, #152]
  405e58:	stp	x0, x1, [sp, #96]
  405e5c:	stp	xzr, xzr, [sp, #112]
  405e60:	stp	xzr, xzr, [sp, #128]
  405e64:	str	xzr, [sp, #144]
  405e68:	bl	401c50 <__errno_location@plt>
  405e6c:	ldr	w1, [x20, #8]
  405e70:	mov	x22, x0
  405e74:	ldr	x19, [x21, #560]
  405e78:	cmp	w1, #0x0
  405e7c:	ldr	w25, [x0]
  405e80:	b.gt	405ec4 <ferror@plt+0x4224>
  405e84:	add	x0, x20, #0x10
  405e88:	cmp	x19, x0
  405e8c:	b.eq	405f74 <ferror@plt+0x42d4>  // b.none
  405e90:	mov	x0, x19
  405e94:	mov	x1, #0x10                  	// #16
  405e98:	bl	408048 <ferror@plt+0x63a8>
  405e9c:	mov	x19, x0
  405ea0:	str	x0, [x21, #560]
  405ea4:	ldr	w0, [x20, #8]
  405ea8:	mov	w21, #0x1                   	// #1
  405eac:	mov	w1, #0x0                   	// #0
  405eb0:	sub	w2, w21, w0
  405eb4:	add	x0, x19, w0, sxtw #4
  405eb8:	sbfiz	x2, x2, #4, #32
  405ebc:	bl	401a30 <memset@plt>
  405ec0:	str	w21, [x20, #8]
  405ec4:	ldp	x20, x21, [x19]
  405ec8:	add	x6, sp, #0x68
  405ecc:	ldp	x7, x0, [sp, #136]
  405ed0:	str	x0, [sp]
  405ed4:	ldp	w4, w24, [sp, #96]
  405ed8:	mov	x2, x23
  405edc:	mov	x1, x20
  405ee0:	mov	x0, x21
  405ee4:	orr	w24, w24, #0x1
  405ee8:	mov	x3, #0xffffffffffffffff    	// #-1
  405eec:	mov	w5, w24
  405ef0:	bl	404020 <ferror@plt+0x2380>
  405ef4:	cmp	x20, x0
  405ef8:	b.hi	405f50 <ferror@plt+0x42b0>  // b.pmore
  405efc:	add	x20, x0, #0x1
  405f00:	str	x20, [x19]
  405f04:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  405f08:	add	x0, x0, #0x340
  405f0c:	cmp	x21, x0
  405f10:	b.eq	405f1c <ferror@plt+0x427c>  // b.none
  405f14:	mov	x0, x21
  405f18:	bl	401b70 <free@plt>
  405f1c:	mov	x0, x20
  405f20:	bl	408018 <ferror@plt+0x6378>
  405f24:	ldp	x7, x1, [sp, #136]
  405f28:	str	x0, [x19, #8]
  405f2c:	ldr	w4, [sp, #96]
  405f30:	mov	x21, x0
  405f34:	str	x1, [sp]
  405f38:	add	x6, sp, #0x68
  405f3c:	mov	w5, w24
  405f40:	mov	x2, x23
  405f44:	mov	x1, x20
  405f48:	mov	x3, #0xffffffffffffffff    	// #-1
  405f4c:	bl	404020 <ferror@plt+0x2380>
  405f50:	ldp	x29, x30, [sp, #16]
  405f54:	mov	x0, x21
  405f58:	ldp	x19, x20, [sp, #32]
  405f5c:	ldp	x23, x24, [sp, #64]
  405f60:	str	w25, [x22]
  405f64:	ldp	x21, x22, [sp, #48]
  405f68:	ldr	x25, [sp, #80]
  405f6c:	add	sp, sp, #0xd0
  405f70:	ret
  405f74:	mov	x1, #0x10                  	// #16
  405f78:	mov	x0, #0x0                   	// #0
  405f7c:	bl	408048 <ferror@plt+0x63a8>
  405f80:	mov	x19, x0
  405f84:	str	x0, [x21, #560]
  405f88:	ldp	x0, x1, [x20, #16]
  405f8c:	stp	x0, x1, [x19]
  405f90:	b	405ea4 <ferror@plt+0x4204>
  405f94:	bl	401ab0 <abort@plt>
  405f98:	sub	sp, sp, #0xd0
  405f9c:	cmp	w0, #0xa
  405fa0:	stp	x29, x30, [sp, #16]
  405fa4:	add	x29, sp, #0x10
  405fa8:	stp	x19, x20, [sp, #32]
  405fac:	stp	x21, x22, [sp, #48]
  405fb0:	stp	x23, x24, [sp, #64]
  405fb4:	stp	x25, x26, [sp, #80]
  405fb8:	stp	xzr, xzr, [sp, #152]
  405fbc:	stp	xzr, xzr, [sp, #168]
  405fc0:	stp	xzr, xzr, [sp, #184]
  405fc4:	str	xzr, [sp, #200]
  405fc8:	b.eq	406120 <ferror@plt+0x4480>  // b.none
  405fcc:	str	w0, [sp, #152]
  405fd0:	mov	x23, x1
  405fd4:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  405fd8:	add	x20, x21, #0x230
  405fdc:	ldp	x0, x1, [sp, #152]
  405fe0:	mov	x24, x2
  405fe4:	stp	x0, x1, [sp, #96]
  405fe8:	stp	xzr, xzr, [sp, #112]
  405fec:	stp	xzr, xzr, [sp, #128]
  405ff0:	str	xzr, [sp, #144]
  405ff4:	bl	401c50 <__errno_location@plt>
  405ff8:	ldr	w1, [x20, #8]
  405ffc:	mov	x22, x0
  406000:	ldr	x19, [x21, #560]
  406004:	cmp	w1, #0x0
  406008:	ldr	w25, [x0]
  40600c:	b.gt	406050 <ferror@plt+0x43b0>
  406010:	add	x0, x20, #0x10
  406014:	cmp	x19, x0
  406018:	b.eq	406100 <ferror@plt+0x4460>  // b.none
  40601c:	mov	x0, x19
  406020:	mov	x1, #0x10                  	// #16
  406024:	bl	408048 <ferror@plt+0x63a8>
  406028:	mov	x19, x0
  40602c:	str	x0, [x21, #560]
  406030:	ldr	w0, [x20, #8]
  406034:	mov	w21, #0x1                   	// #1
  406038:	mov	w1, #0x0                   	// #0
  40603c:	sub	w2, w21, w0
  406040:	add	x0, x19, w0, sxtw #4
  406044:	sbfiz	x2, x2, #4, #32
  406048:	bl	401a30 <memset@plt>
  40604c:	str	w21, [x20, #8]
  406050:	ldp	x20, x21, [x19]
  406054:	add	x6, sp, #0x68
  406058:	ldp	x7, x0, [sp, #136]
  40605c:	str	x0, [sp]
  406060:	ldp	w4, w26, [sp, #96]
  406064:	mov	x3, x24
  406068:	mov	x2, x23
  40606c:	mov	x1, x20
  406070:	orr	w26, w26, #0x1
  406074:	mov	x0, x21
  406078:	mov	w5, w26
  40607c:	bl	404020 <ferror@plt+0x2380>
  406080:	cmp	x20, x0
  406084:	b.hi	4060dc <ferror@plt+0x443c>  // b.pmore
  406088:	add	x20, x0, #0x1
  40608c:	str	x20, [x19]
  406090:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  406094:	add	x0, x0, #0x340
  406098:	cmp	x21, x0
  40609c:	b.eq	4060a8 <ferror@plt+0x4408>  // b.none
  4060a0:	mov	x0, x21
  4060a4:	bl	401b70 <free@plt>
  4060a8:	mov	x0, x20
  4060ac:	bl	408018 <ferror@plt+0x6378>
  4060b0:	ldp	x7, x1, [sp, #136]
  4060b4:	str	x0, [x19, #8]
  4060b8:	ldr	w4, [sp, #96]
  4060bc:	mov	x21, x0
  4060c0:	str	x1, [sp]
  4060c4:	add	x6, sp, #0x68
  4060c8:	mov	w5, w26
  4060cc:	mov	x3, x24
  4060d0:	mov	x2, x23
  4060d4:	mov	x1, x20
  4060d8:	bl	404020 <ferror@plt+0x2380>
  4060dc:	ldp	x29, x30, [sp, #16]
  4060e0:	mov	x0, x21
  4060e4:	ldp	x19, x20, [sp, #32]
  4060e8:	ldp	x23, x24, [sp, #64]
  4060ec:	str	w25, [x22]
  4060f0:	ldp	x21, x22, [sp, #48]
  4060f4:	ldp	x25, x26, [sp, #80]
  4060f8:	add	sp, sp, #0xd0
  4060fc:	ret
  406100:	mov	x1, #0x10                  	// #16
  406104:	mov	x0, #0x0                   	// #0
  406108:	bl	408048 <ferror@plt+0x63a8>
  40610c:	mov	x19, x0
  406110:	str	x0, [x21, #560]
  406114:	ldp	x0, x1, [x20, #16]
  406118:	stp	x0, x1, [x19]
  40611c:	b	406030 <ferror@plt+0x4390>
  406120:	bl	401ab0 <abort@plt>
  406124:	nop
  406128:	sub	sp, sp, #0xb0
  40612c:	ubfx	x6, x2, #5, #3
  406130:	add	x5, sp, #0x80
  406134:	and	w2, w2, #0x1f
  406138:	stp	x29, x30, [sp, #16]
  40613c:	add	x29, sp, #0x10
  406140:	stp	x19, x20, [sp, #32]
  406144:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0x13788>
  406148:	add	x20, x20, #0x340
  40614c:	stp	x21, x22, [sp, #48]
  406150:	mov	x22, x1
  406154:	mov	x21, x0
  406158:	ldp	x8, x9, [x20, #256]
  40615c:	stp	x8, x9, [sp, #120]
  406160:	ldp	x8, x9, [x20, #272]
  406164:	stp	x8, x9, [sp, #136]
  406168:	ldp	x8, x9, [x20, #288]
  40616c:	stp	x8, x9, [sp, #152]
  406170:	ldr	x3, [x20, #304]
  406174:	str	x3, [sp, #168]
  406178:	stp	x23, x24, [sp, #64]
  40617c:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x13788>
  406180:	ldr	w4, [x5, x6, lsl #2]
  406184:	stp	x25, x26, [sp, #80]
  406188:	add	x23, x24, #0x230
  40618c:	lsr	w3, w4, w2
  406190:	mvn	w3, w3
  406194:	and	w3, w3, #0x1
  406198:	str	x27, [sp, #96]
  40619c:	lsl	w3, w3, w2
  4061a0:	eor	w3, w3, w4
  4061a4:	str	w3, [x5, x6, lsl #2]
  4061a8:	bl	401c50 <__errno_location@plt>
  4061ac:	ldr	w26, [x0]
  4061b0:	ldr	w1, [x23, #8]
  4061b4:	mov	x25, x0
  4061b8:	ldr	x19, [x24, #560]
  4061bc:	cmp	w1, #0x0
  4061c0:	b.gt	406204 <ferror@plt+0x4564>
  4061c4:	add	x0, x23, #0x10
  4061c8:	cmp	x19, x0
  4061cc:	b.eq	4062b0 <ferror@plt+0x4610>  // b.none
  4061d0:	mov	x0, x19
  4061d4:	mov	x1, #0x10                  	// #16
  4061d8:	bl	408048 <ferror@plt+0x63a8>
  4061dc:	mov	x19, x0
  4061e0:	str	x0, [x24, #560]
  4061e4:	ldr	w0, [x23, #8]
  4061e8:	mov	w24, #0x1                   	// #1
  4061ec:	mov	w1, #0x0                   	// #0
  4061f0:	sub	w2, w24, w0
  4061f4:	add	x0, x19, w0, sxtw #4
  4061f8:	sbfiz	x2, x2, #4, #32
  4061fc:	bl	401a30 <memset@plt>
  406200:	str	w24, [x23, #8]
  406204:	ldp	x23, x24, [x19]
  406208:	add	x6, sp, #0x80
  40620c:	ldp	x7, x0, [sp, #160]
  406210:	str	x0, [sp]
  406214:	ldp	w4, w27, [sp, #120]
  406218:	mov	x3, x22
  40621c:	mov	x2, x21
  406220:	mov	x1, x23
  406224:	orr	w27, w27, #0x1
  406228:	mov	x0, x24
  40622c:	mov	w5, w27
  406230:	bl	404020 <ferror@plt+0x2380>
  406234:	cmp	x23, x0
  406238:	b.hi	406288 <ferror@plt+0x45e8>  // b.pmore
  40623c:	add	x23, x0, #0x1
  406240:	str	x23, [x19]
  406244:	cmp	x24, x20
  406248:	b.eq	406254 <ferror@plt+0x45b4>  // b.none
  40624c:	mov	x0, x24
  406250:	bl	401b70 <free@plt>
  406254:	mov	x0, x23
  406258:	bl	408018 <ferror@plt+0x6378>
  40625c:	ldp	x7, x1, [sp, #160]
  406260:	str	x0, [x19, #8]
  406264:	ldr	w4, [sp, #120]
  406268:	mov	x24, x0
  40626c:	str	x1, [sp]
  406270:	add	x6, sp, #0x80
  406274:	mov	w5, w27
  406278:	mov	x3, x22
  40627c:	mov	x2, x21
  406280:	mov	x1, x23
  406284:	bl	404020 <ferror@plt+0x2380>
  406288:	mov	x0, x24
  40628c:	ldp	x29, x30, [sp, #16]
  406290:	ldp	x19, x20, [sp, #32]
  406294:	ldp	x21, x22, [sp, #48]
  406298:	ldp	x23, x24, [sp, #64]
  40629c:	ldr	x27, [sp, #96]
  4062a0:	str	w26, [x25]
  4062a4:	ldp	x25, x26, [sp, #80]
  4062a8:	add	sp, sp, #0xb0
  4062ac:	ret
  4062b0:	mov	x1, #0x10                  	// #16
  4062b4:	mov	x0, #0x0                   	// #0
  4062b8:	bl	408048 <ferror@plt+0x63a8>
  4062bc:	mov	x19, x0
  4062c0:	str	x0, [x24, #560]
  4062c4:	ldp	x0, x1, [x23, #16]
  4062c8:	stp	x0, x1, [x19]
  4062cc:	b	4061e4 <ferror@plt+0x4544>
  4062d0:	sub	sp, sp, #0xa0
  4062d4:	ubfx	x5, x1, #5, #3
  4062d8:	add	x4, sp, #0x70
  4062dc:	and	w1, w1, #0x1f
  4062e0:	stp	x29, x30, [sp, #16]
  4062e4:	add	x29, sp, #0x10
  4062e8:	stp	x21, x22, [sp, #48]
  4062ec:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  4062f0:	add	x21, x21, #0x340
  4062f4:	mov	x22, x0
  4062f8:	stp	x19, x20, [sp, #32]
  4062fc:	ldp	x6, x7, [x21, #256]
  406300:	stp	x6, x7, [sp, #104]
  406304:	ldp	x6, x7, [x21, #272]
  406308:	stp	x6, x7, [sp, #120]
  40630c:	ldp	x6, x7, [x21, #288]
  406310:	stp	x6, x7, [sp, #136]
  406314:	ldr	x2, [x21, #304]
  406318:	str	x2, [sp, #152]
  40631c:	stp	x23, x24, [sp, #64]
  406320:	adrp	x23, 41c000 <_obstack_memory_used@@Base+0x13788>
  406324:	ldr	w0, [x4, x5, lsl #2]
  406328:	stp	x25, x26, [sp, #80]
  40632c:	add	x20, x23, #0x230
  406330:	lsr	w2, w0, w1
  406334:	mvn	w2, w2
  406338:	and	w2, w2, #0x1
  40633c:	lsl	w2, w2, w1
  406340:	eor	w2, w2, w0
  406344:	str	w2, [x4, x5, lsl #2]
  406348:	bl	401c50 <__errno_location@plt>
  40634c:	ldr	w25, [x0]
  406350:	ldr	w1, [x20, #8]
  406354:	mov	x24, x0
  406358:	ldr	x19, [x23, #560]
  40635c:	cmp	w1, #0x0
  406360:	b.gt	4063a4 <ferror@plt+0x4704>
  406364:	add	x0, x20, #0x10
  406368:	cmp	x19, x0
  40636c:	b.eq	40644c <ferror@plt+0x47ac>  // b.none
  406370:	mov	x0, x19
  406374:	mov	x1, #0x10                  	// #16
  406378:	bl	408048 <ferror@plt+0x63a8>
  40637c:	mov	x19, x0
  406380:	str	x0, [x23, #560]
  406384:	ldr	w0, [x20, #8]
  406388:	mov	w23, #0x1                   	// #1
  40638c:	mov	w1, #0x0                   	// #0
  406390:	sub	w2, w23, w0
  406394:	add	x0, x19, w0, sxtw #4
  406398:	sbfiz	x2, x2, #4, #32
  40639c:	bl	401a30 <memset@plt>
  4063a0:	str	w23, [x20, #8]
  4063a4:	ldp	x20, x23, [x19]
  4063a8:	add	x6, sp, #0x70
  4063ac:	ldp	x7, x0, [sp, #144]
  4063b0:	str	x0, [sp]
  4063b4:	ldp	w4, w26, [sp, #104]
  4063b8:	mov	x2, x22
  4063bc:	mov	x1, x20
  4063c0:	mov	x0, x23
  4063c4:	orr	w26, w26, #0x1
  4063c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4063cc:	mov	w5, w26
  4063d0:	bl	404020 <ferror@plt+0x2380>
  4063d4:	cmp	x20, x0
  4063d8:	b.hi	406428 <ferror@plt+0x4788>  // b.pmore
  4063dc:	add	x20, x0, #0x1
  4063e0:	str	x20, [x19]
  4063e4:	cmp	x23, x21
  4063e8:	b.eq	4063f4 <ferror@plt+0x4754>  // b.none
  4063ec:	mov	x0, x23
  4063f0:	bl	401b70 <free@plt>
  4063f4:	mov	x0, x20
  4063f8:	bl	408018 <ferror@plt+0x6378>
  4063fc:	ldp	x7, x1, [sp, #144]
  406400:	str	x0, [x19, #8]
  406404:	ldr	w4, [sp, #104]
  406408:	mov	x23, x0
  40640c:	str	x1, [sp]
  406410:	add	x6, sp, #0x70
  406414:	mov	w5, w26
  406418:	mov	x2, x22
  40641c:	mov	x1, x20
  406420:	mov	x3, #0xffffffffffffffff    	// #-1
  406424:	bl	404020 <ferror@plt+0x2380>
  406428:	ldp	x29, x30, [sp, #16]
  40642c:	mov	x0, x23
  406430:	ldp	x19, x20, [sp, #32]
  406434:	ldp	x21, x22, [sp, #48]
  406438:	str	w25, [x24]
  40643c:	ldp	x23, x24, [sp, #64]
  406440:	ldp	x25, x26, [sp, #80]
  406444:	add	sp, sp, #0xa0
  406448:	ret
  40644c:	mov	x1, #0x10                  	// #16
  406450:	mov	x0, #0x0                   	// #0
  406454:	bl	408048 <ferror@plt+0x63a8>
  406458:	mov	x19, x0
  40645c:	str	x0, [x23, #560]
  406460:	ldp	x0, x1, [x20, #16]
  406464:	stp	x0, x1, [x19]
  406468:	b	406384 <ferror@plt+0x46e4>
  40646c:	nop
  406470:	sub	sp, sp, #0xa0
  406474:	stp	x29, x30, [sp, #16]
  406478:	add	x29, sp, #0x10
  40647c:	stp	x23, x24, [sp, #64]
  406480:	adrp	x23, 41c000 <_obstack_memory_used@@Base+0x13788>
  406484:	add	x23, x23, #0x340
  406488:	stp	x21, x22, [sp, #48]
  40648c:	mov	x22, x0
  406490:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  406494:	ldp	x4, x5, [x23, #256]
  406498:	stp	x4, x5, [sp, #104]
  40649c:	ldr	w0, [sp, #116]
  4064a0:	ldp	x4, x5, [x23, #272]
  4064a4:	stp	x4, x5, [sp, #120]
  4064a8:	mvn	w1, w0, lsr #26
  4064ac:	ldp	x4, x5, [x23, #288]
  4064b0:	ubfiz	w1, w1, #26, #1
  4064b4:	ldr	x2, [x23, #304]
  4064b8:	eor	w1, w1, w0
  4064bc:	stp	x19, x20, [sp, #32]
  4064c0:	add	x20, x21, #0x230
  4064c4:	stp	x25, x26, [sp, #80]
  4064c8:	str	w1, [sp, #116]
  4064cc:	stp	x4, x5, [sp, #136]
  4064d0:	str	x2, [sp, #152]
  4064d4:	bl	401c50 <__errno_location@plt>
  4064d8:	ldr	w1, [x20, #8]
  4064dc:	mov	x24, x0
  4064e0:	ldr	x19, [x21, #560]
  4064e4:	cmp	w1, #0x0
  4064e8:	ldr	w25, [x0]
  4064ec:	b.gt	406530 <ferror@plt+0x4890>
  4064f0:	add	x0, x20, #0x10
  4064f4:	cmp	x19, x0
  4064f8:	b.eq	4065d8 <ferror@plt+0x4938>  // b.none
  4064fc:	mov	x0, x19
  406500:	mov	x1, #0x10                  	// #16
  406504:	bl	408048 <ferror@plt+0x63a8>
  406508:	mov	x19, x0
  40650c:	str	x0, [x21, #560]
  406510:	ldr	w0, [x20, #8]
  406514:	mov	w21, #0x1                   	// #1
  406518:	mov	w1, #0x0                   	// #0
  40651c:	sub	w2, w21, w0
  406520:	add	x0, x19, w0, sxtw #4
  406524:	sbfiz	x2, x2, #4, #32
  406528:	bl	401a30 <memset@plt>
  40652c:	str	w21, [x20, #8]
  406530:	ldp	x20, x21, [x19]
  406534:	add	x6, sp, #0x70
  406538:	ldp	x7, x0, [sp, #144]
  40653c:	str	x0, [sp]
  406540:	ldp	w4, w26, [sp, #104]
  406544:	mov	x2, x22
  406548:	mov	x1, x20
  40654c:	mov	x0, x21
  406550:	orr	w26, w26, #0x1
  406554:	mov	x3, #0xffffffffffffffff    	// #-1
  406558:	mov	w5, w26
  40655c:	bl	404020 <ferror@plt+0x2380>
  406560:	cmp	x20, x0
  406564:	b.hi	4065b4 <ferror@plt+0x4914>  // b.pmore
  406568:	add	x20, x0, #0x1
  40656c:	str	x20, [x19]
  406570:	cmp	x21, x23
  406574:	b.eq	406580 <ferror@plt+0x48e0>  // b.none
  406578:	mov	x0, x21
  40657c:	bl	401b70 <free@plt>
  406580:	mov	x0, x20
  406584:	bl	408018 <ferror@plt+0x6378>
  406588:	ldp	x7, x1, [sp, #144]
  40658c:	str	x0, [x19, #8]
  406590:	ldr	w4, [sp, #104]
  406594:	mov	x21, x0
  406598:	str	x1, [sp]
  40659c:	add	x6, sp, #0x70
  4065a0:	mov	w5, w26
  4065a4:	mov	x2, x22
  4065a8:	mov	x1, x20
  4065ac:	mov	x3, #0xffffffffffffffff    	// #-1
  4065b0:	bl	404020 <ferror@plt+0x2380>
  4065b4:	mov	x0, x21
  4065b8:	ldp	x29, x30, [sp, #16]
  4065bc:	ldp	x19, x20, [sp, #32]
  4065c0:	ldp	x21, x22, [sp, #48]
  4065c4:	str	w25, [x24]
  4065c8:	ldp	x23, x24, [sp, #64]
  4065cc:	ldp	x25, x26, [sp, #80]
  4065d0:	add	sp, sp, #0xa0
  4065d4:	ret
  4065d8:	mov	x1, #0x10                  	// #16
  4065dc:	mov	x0, #0x0                   	// #0
  4065e0:	bl	408048 <ferror@plt+0x63a8>
  4065e4:	mov	x19, x0
  4065e8:	str	x0, [x21, #560]
  4065ec:	ldp	x0, x1, [x20, #16]
  4065f0:	stp	x0, x1, [x19]
  4065f4:	b	406510 <ferror@plt+0x4870>
  4065f8:	sub	sp, sp, #0xb0
  4065fc:	stp	x29, x30, [sp, #16]
  406600:	add	x29, sp, #0x10
  406604:	stp	x21, x22, [sp, #48]
  406608:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  40660c:	add	x21, x21, #0x340
  406610:	mov	x22, x0
  406614:	stp	x19, x20, [sp, #32]
  406618:	ldp	x4, x5, [x21, #256]
  40661c:	stp	x4, x5, [sp, #120]
  406620:	ldr	w4, [sp, #132]
  406624:	ldp	x6, x7, [x21, #272]
  406628:	stp	x6, x7, [sp, #136]
  40662c:	mvn	w2, w4, lsr #26
  406630:	ldp	x6, x7, [x21, #288]
  406634:	ubfiz	w2, w2, #26, #1
  406638:	ldr	x0, [x21, #304]
  40663c:	eor	w2, w2, w4
  406640:	stp	x23, x24, [sp, #64]
  406644:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0x13788>
  406648:	add	x20, x24, #0x230
  40664c:	mov	x23, x1
  406650:	stp	x25, x26, [sp, #80]
  406654:	str	x27, [sp, #96]
  406658:	str	w2, [sp, #132]
  40665c:	stp	x6, x7, [sp, #152]
  406660:	str	x0, [sp, #168]
  406664:	bl	401c50 <__errno_location@plt>
  406668:	ldr	w1, [x20, #8]
  40666c:	mov	x25, x0
  406670:	ldr	x19, [x24, #560]
  406674:	cmp	w1, #0x0
  406678:	ldr	w26, [x0]
  40667c:	b.gt	4066c0 <ferror@plt+0x4a20>
  406680:	add	x0, x20, #0x10
  406684:	cmp	x19, x0
  406688:	b.eq	40676c <ferror@plt+0x4acc>  // b.none
  40668c:	mov	x0, x19
  406690:	mov	x1, #0x10                  	// #16
  406694:	bl	408048 <ferror@plt+0x63a8>
  406698:	mov	x19, x0
  40669c:	str	x0, [x24, #560]
  4066a0:	ldr	w0, [x20, #8]
  4066a4:	mov	w24, #0x1                   	// #1
  4066a8:	mov	w1, #0x0                   	// #0
  4066ac:	sub	w2, w24, w0
  4066b0:	add	x0, x19, w0, sxtw #4
  4066b4:	sbfiz	x2, x2, #4, #32
  4066b8:	bl	401a30 <memset@plt>
  4066bc:	str	w24, [x20, #8]
  4066c0:	ldp	x20, x24, [x19]
  4066c4:	add	x6, sp, #0x80
  4066c8:	ldp	x7, x0, [sp, #160]
  4066cc:	str	x0, [sp]
  4066d0:	ldp	w4, w27, [sp, #120]
  4066d4:	mov	x3, x23
  4066d8:	mov	x2, x22
  4066dc:	mov	x1, x20
  4066e0:	orr	w27, w27, #0x1
  4066e4:	mov	x0, x24
  4066e8:	mov	w5, w27
  4066ec:	bl	404020 <ferror@plt+0x2380>
  4066f0:	cmp	x20, x0
  4066f4:	b.hi	406744 <ferror@plt+0x4aa4>  // b.pmore
  4066f8:	add	x20, x0, #0x1
  4066fc:	str	x20, [x19]
  406700:	cmp	x24, x21
  406704:	b.eq	406710 <ferror@plt+0x4a70>  // b.none
  406708:	mov	x0, x24
  40670c:	bl	401b70 <free@plt>
  406710:	mov	x0, x20
  406714:	bl	408018 <ferror@plt+0x6378>
  406718:	ldp	x7, x1, [sp, #160]
  40671c:	str	x0, [x19, #8]
  406720:	ldr	w4, [sp, #120]
  406724:	mov	x24, x0
  406728:	str	x1, [sp]
  40672c:	add	x6, sp, #0x80
  406730:	mov	w5, w27
  406734:	mov	x3, x23
  406738:	mov	x2, x22
  40673c:	mov	x1, x20
  406740:	bl	404020 <ferror@plt+0x2380>
  406744:	mov	x0, x24
  406748:	ldp	x29, x30, [sp, #16]
  40674c:	ldp	x19, x20, [sp, #32]
  406750:	ldp	x21, x22, [sp, #48]
  406754:	ldp	x23, x24, [sp, #64]
  406758:	ldr	x27, [sp, #96]
  40675c:	str	w26, [x25]
  406760:	ldp	x25, x26, [sp, #80]
  406764:	add	sp, sp, #0xb0
  406768:	ret
  40676c:	mov	x1, #0x10                  	// #16
  406770:	mov	x0, #0x0                   	// #0
  406774:	bl	408048 <ferror@plt+0x63a8>
  406778:	mov	x19, x0
  40677c:	str	x0, [x24, #560]
  406780:	ldp	x0, x1, [x20, #16]
  406784:	stp	x0, x1, [x19]
  406788:	b	4066a0 <ferror@plt+0x4a00>
  40678c:	nop
  406790:	stp	x29, x30, [sp, #-128]!
  406794:	cmp	w1, #0xa
  406798:	mov	x29, sp
  40679c:	stp	xzr, xzr, [sp, #16]
  4067a0:	stp	xzr, xzr, [sp, #32]
  4067a4:	stp	xzr, xzr, [sp, #48]
  4067a8:	str	xzr, [sp, #64]
  4067ac:	b.eq	4067d8 <ferror@plt+0x4b38>  // b.none
  4067b0:	mov	w4, w1
  4067b4:	mov	w5, #0x4000000             	// #67108864
  4067b8:	mov	x1, x2
  4067bc:	add	x3, sp, #0x10
  4067c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4067c4:	str	w4, [sp, #16]
  4067c8:	str	w5, [sp, #28]
  4067cc:	bl	4051c0 <ferror@plt+0x3520>
  4067d0:	ldp	x29, x30, [sp], #128
  4067d4:	ret
  4067d8:	bl	401ab0 <abort@plt>
  4067dc:	nop
  4067e0:	adrp	x4, 41c000 <_obstack_memory_used@@Base+0x13788>
  4067e4:	add	x4, x4, #0x340
  4067e8:	stp	x29, x30, [sp, #-80]!
  4067ec:	mov	x5, x1
  4067f0:	mov	w1, #0xa                   	// #10
  4067f4:	mov	x29, sp
  4067f8:	ldp	x8, x9, [x4, #256]
  4067fc:	stp	x8, x9, [sp, #24]
  406800:	cmp	x5, #0x0
  406804:	str	w1, [sp, #24]
  406808:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40680c:	ldp	x10, x11, [x4, #272]
  406810:	stp	x10, x11, [sp, #40]
  406814:	ldp	x8, x9, [x4, #288]
  406818:	stp	x8, x9, [sp, #56]
  40681c:	ldr	x1, [x4, #304]
  406820:	str	x1, [sp, #72]
  406824:	b.eq	406848 <ferror@plt+0x4ba8>  // b.none
  406828:	mov	x4, x2
  40682c:	mov	x1, x3
  406830:	mov	x2, #0xffffffffffffffff    	// #-1
  406834:	add	x3, sp, #0x18
  406838:	stp	x5, x4, [sp, #64]
  40683c:	bl	4051c0 <ferror@plt+0x3520>
  406840:	ldp	x29, x30, [sp], #80
  406844:	ret
  406848:	bl	401ab0 <abort@plt>
  40684c:	nop
  406850:	adrp	x5, 41c000 <_obstack_memory_used@@Base+0x13788>
  406854:	add	x5, x5, #0x340
  406858:	stp	x29, x30, [sp, #-80]!
  40685c:	mov	x6, x1
  406860:	mov	w1, #0xa                   	// #10
  406864:	mov	x29, sp
  406868:	ldp	x8, x9, [x5, #256]
  40686c:	stp	x8, x9, [sp, #24]
  406870:	cmp	x6, #0x0
  406874:	str	w1, [sp, #24]
  406878:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40687c:	ldp	x10, x11, [x5, #272]
  406880:	stp	x10, x11, [sp, #40]
  406884:	ldp	x8, x9, [x5, #288]
  406888:	stp	x8, x9, [sp, #56]
  40688c:	ldr	x1, [x5, #304]
  406890:	str	x1, [sp, #72]
  406894:	b.eq	4068b8 <ferror@plt+0x4c18>  // b.none
  406898:	mov	x5, x2
  40689c:	mov	x1, x3
  4068a0:	mov	x2, x4
  4068a4:	add	x3, sp, #0x18
  4068a8:	stp	x6, x5, [sp, #64]
  4068ac:	bl	4051c0 <ferror@plt+0x3520>
  4068b0:	ldp	x29, x30, [sp], #80
  4068b4:	ret
  4068b8:	bl	401ab0 <abort@plt>
  4068bc:	nop
  4068c0:	sub	sp, sp, #0xb0
  4068c4:	cmp	x0, #0x0
  4068c8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4068cc:	stp	x29, x30, [sp, #16]
  4068d0:	add	x29, sp, #0x10
  4068d4:	stp	x21, x22, [sp, #48]
  4068d8:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x13788>
  4068dc:	add	x22, x22, #0x340
  4068e0:	mov	x21, x0
  4068e4:	stp	x19, x20, [sp, #32]
  4068e8:	mov	w19, #0xa                   	// #10
  4068ec:	ldp	x4, x5, [x22, #256]
  4068f0:	stp	x4, x5, [sp, #120]
  4068f4:	ldp	x4, x5, [x22, #272]
  4068f8:	stp	x23, x24, [sp, #64]
  4068fc:	ldp	x6, x7, [x22, #288]
  406900:	stp	x25, x26, [sp, #80]
  406904:	ldr	x0, [x22, #304]
  406908:	str	x27, [sp, #96]
  40690c:	str	w19, [sp, #120]
  406910:	stp	x4, x5, [sp, #136]
  406914:	stp	x6, x7, [sp, #152]
  406918:	str	x0, [sp, #168]
  40691c:	b.eq	406a6c <ferror@plt+0x4dcc>  // b.none
  406920:	adrp	x27, 41c000 <_obstack_memory_used@@Base+0x13788>
  406924:	add	x26, x27, #0x230
  406928:	mov	x20, x1
  40692c:	mov	x24, x2
  406930:	stp	x21, x1, [sp, #160]
  406934:	bl	401c50 <__errno_location@plt>
  406938:	ldr	w1, [x26, #8]
  40693c:	mov	w4, w19
  406940:	ldr	w25, [x0]
  406944:	ldr	x19, [x27, #560]
  406948:	mov	x23, x0
  40694c:	cmp	w1, #0x0
  406950:	b.gt	4069a0 <ferror@plt+0x4d00>
  406954:	add	x0, x26, #0x10
  406958:	cmp	x19, x0
  40695c:	b.eq	406a4c <ferror@plt+0x4dac>  // b.none
  406960:	mov	x0, x19
  406964:	mov	x1, #0x10                  	// #16
  406968:	bl	408048 <ferror@plt+0x63a8>
  40696c:	mov	x19, x0
  406970:	str	x0, [x27, #560]
  406974:	ldr	w0, [x26, #8]
  406978:	mov	w20, #0x1                   	// #1
  40697c:	mov	w1, #0x0                   	// #0
  406980:	sub	w2, w20, w0
  406984:	add	x0, x19, w0, sxtw #4
  406988:	sbfiz	x2, x2, #4, #32
  40698c:	bl	401a30 <memset@plt>
  406990:	ldr	w4, [sp, #120]
  406994:	str	w20, [x26, #8]
  406998:	ldr	x21, [sp, #160]
  40699c:	ldr	x20, [sp, #168]
  4069a0:	mov	x7, x21
  4069a4:	ldp	x27, x21, [x19]
  4069a8:	str	x20, [sp]
  4069ac:	ldr	w26, [sp, #124]
  4069b0:	add	x6, sp, #0x80
  4069b4:	mov	x2, x24
  4069b8:	mov	x3, #0xffffffffffffffff    	// #-1
  4069bc:	orr	w26, w26, #0x1
  4069c0:	mov	w5, w26
  4069c4:	mov	x1, x27
  4069c8:	mov	x0, x21
  4069cc:	bl	404020 <ferror@plt+0x2380>
  4069d0:	cmp	x27, x0
  4069d4:	b.hi	406a24 <ferror@plt+0x4d84>  // b.pmore
  4069d8:	add	x20, x0, #0x1
  4069dc:	str	x20, [x19]
  4069e0:	cmp	x21, x22
  4069e4:	b.eq	4069f0 <ferror@plt+0x4d50>  // b.none
  4069e8:	mov	x0, x21
  4069ec:	bl	401b70 <free@plt>
  4069f0:	mov	x0, x20
  4069f4:	bl	408018 <ferror@plt+0x6378>
  4069f8:	ldp	x7, x1, [sp, #160]
  4069fc:	str	x0, [x19, #8]
  406a00:	ldr	w4, [sp, #120]
  406a04:	mov	x21, x0
  406a08:	str	x1, [sp]
  406a0c:	add	x6, sp, #0x80
  406a10:	mov	w5, w26
  406a14:	mov	x2, x24
  406a18:	mov	x1, x20
  406a1c:	mov	x3, #0xffffffffffffffff    	// #-1
  406a20:	bl	404020 <ferror@plt+0x2380>
  406a24:	mov	x0, x21
  406a28:	ldp	x29, x30, [sp, #16]
  406a2c:	ldp	x19, x20, [sp, #32]
  406a30:	ldp	x21, x22, [sp, #48]
  406a34:	ldr	x27, [sp, #96]
  406a38:	str	w25, [x23]
  406a3c:	ldp	x23, x24, [sp, #64]
  406a40:	ldp	x25, x26, [sp, #80]
  406a44:	add	sp, sp, #0xb0
  406a48:	ret
  406a4c:	mov	x1, #0x10                  	// #16
  406a50:	mov	x0, #0x0                   	// #0
  406a54:	bl	408048 <ferror@plt+0x63a8>
  406a58:	mov	x19, x0
  406a5c:	str	x0, [x27, #560]
  406a60:	ldp	x0, x1, [x26, #16]
  406a64:	stp	x0, x1, [x19]
  406a68:	b	406974 <ferror@plt+0x4cd4>
  406a6c:	bl	401ab0 <abort@plt>
  406a70:	sub	sp, sp, #0xb0
  406a74:	cmp	x0, #0x0
  406a78:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  406a7c:	stp	x29, x30, [sp, #16]
  406a80:	add	x29, sp, #0x10
  406a84:	stp	x21, x22, [sp, #48]
  406a88:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x13788>
  406a8c:	add	x22, x22, #0x340
  406a90:	mov	x21, x0
  406a94:	stp	x19, x20, [sp, #32]
  406a98:	mov	w19, #0xa                   	// #10
  406a9c:	ldp	x6, x7, [x22, #256]
  406aa0:	stp	x6, x7, [sp, #120]
  406aa4:	add	x4, x22, #0x100
  406aa8:	ldp	x6, x7, [x4, #16]
  406aac:	stp	x23, x24, [sp, #64]
  406ab0:	ldp	x8, x9, [x4, #32]
  406ab4:	stp	x25, x26, [sp, #80]
  406ab8:	ldr	x0, [x4, #48]
  406abc:	stp	x27, x28, [sp, #96]
  406ac0:	str	w19, [sp, #120]
  406ac4:	stp	x6, x7, [sp, #136]
  406ac8:	stp	x8, x9, [sp, #152]
  406acc:	str	x0, [sp, #168]
  406ad0:	b.eq	406c24 <ferror@plt+0x4f84>  // b.none
  406ad4:	adrp	x28, 41c000 <_obstack_memory_used@@Base+0x13788>
  406ad8:	add	x27, x28, #0x230
  406adc:	mov	x20, x1
  406ae0:	mov	x24, x2
  406ae4:	mov	x25, x3
  406ae8:	stp	x21, x1, [sp, #160]
  406aec:	bl	401c50 <__errno_location@plt>
  406af0:	ldr	w1, [x27, #8]
  406af4:	mov	w4, w19
  406af8:	ldr	w26, [x0]
  406afc:	mov	x23, x0
  406b00:	ldr	x19, [x28, #560]
  406b04:	cmp	w1, #0x0
  406b08:	b.gt	406b58 <ferror@plt+0x4eb8>
  406b0c:	add	x0, x27, #0x10
  406b10:	cmp	x19, x0
  406b14:	b.eq	406c04 <ferror@plt+0x4f64>  // b.none
  406b18:	mov	x0, x19
  406b1c:	mov	x1, #0x10                  	// #16
  406b20:	bl	408048 <ferror@plt+0x63a8>
  406b24:	mov	x19, x0
  406b28:	str	x0, [x28, #560]
  406b2c:	ldr	w0, [x27, #8]
  406b30:	mov	w20, #0x1                   	// #1
  406b34:	mov	w1, #0x0                   	// #0
  406b38:	sub	w2, w20, w0
  406b3c:	add	x0, x19, w0, sxtw #4
  406b40:	sbfiz	x2, x2, #4, #32
  406b44:	bl	401a30 <memset@plt>
  406b48:	ldr	w4, [sp, #120]
  406b4c:	str	w20, [x27, #8]
  406b50:	ldr	x21, [sp, #160]
  406b54:	ldr	x20, [sp, #168]
  406b58:	mov	x7, x21
  406b5c:	ldp	x28, x21, [x19]
  406b60:	str	x20, [sp]
  406b64:	ldr	w27, [sp, #124]
  406b68:	add	x6, sp, #0x80
  406b6c:	mov	x3, x25
  406b70:	mov	x2, x24
  406b74:	orr	w27, w27, #0x1
  406b78:	mov	w5, w27
  406b7c:	mov	x1, x28
  406b80:	mov	x0, x21
  406b84:	bl	404020 <ferror@plt+0x2380>
  406b88:	cmp	x28, x0
  406b8c:	b.hi	406bdc <ferror@plt+0x4f3c>  // b.pmore
  406b90:	add	x20, x0, #0x1
  406b94:	str	x20, [x19]
  406b98:	cmp	x21, x22
  406b9c:	b.eq	406ba8 <ferror@plt+0x4f08>  // b.none
  406ba0:	mov	x0, x21
  406ba4:	bl	401b70 <free@plt>
  406ba8:	mov	x0, x20
  406bac:	bl	408018 <ferror@plt+0x6378>
  406bb0:	ldp	x7, x1, [sp, #160]
  406bb4:	str	x0, [x19, #8]
  406bb8:	ldr	w4, [sp, #120]
  406bbc:	mov	x21, x0
  406bc0:	str	x1, [sp]
  406bc4:	add	x6, sp, #0x80
  406bc8:	mov	w5, w27
  406bcc:	mov	x3, x25
  406bd0:	mov	x2, x24
  406bd4:	mov	x1, x20
  406bd8:	bl	404020 <ferror@plt+0x2380>
  406bdc:	mov	x0, x21
  406be0:	ldp	x29, x30, [sp, #16]
  406be4:	ldp	x19, x20, [sp, #32]
  406be8:	ldp	x21, x22, [sp, #48]
  406bec:	ldp	x27, x28, [sp, #96]
  406bf0:	str	w26, [x23]
  406bf4:	ldp	x23, x24, [sp, #64]
  406bf8:	ldp	x25, x26, [sp, #80]
  406bfc:	add	sp, sp, #0xb0
  406c00:	ret
  406c04:	mov	x1, #0x10                  	// #16
  406c08:	mov	x0, #0x0                   	// #0
  406c0c:	bl	408048 <ferror@plt+0x63a8>
  406c10:	mov	x19, x0
  406c14:	str	x0, [x28, #560]
  406c18:	ldp	x0, x1, [x27, #16]
  406c1c:	stp	x0, x1, [x19]
  406c20:	b	406b2c <ferror@plt+0x4e8c>
  406c24:	bl	401ab0 <abort@plt>
  406c28:	sub	sp, sp, #0x80
  406c2c:	stp	x29, x30, [sp, #16]
  406c30:	add	x29, sp, #0x10
  406c34:	stp	x19, x20, [sp, #32]
  406c38:	mov	w19, w0
  406c3c:	stp	x21, x22, [sp, #48]
  406c40:	stp	x23, x24, [sp, #64]
  406c44:	mov	x23, x1
  406c48:	mov	x24, x2
  406c4c:	stp	x25, x26, [sp, #80]
  406c50:	adrp	x26, 41c000 <_obstack_memory_used@@Base+0x13788>
  406c54:	stp	x27, x28, [sp, #96]
  406c58:	bl	401c50 <__errno_location@plt>
  406c5c:	mov	x22, x0
  406c60:	ldr	w0, [x0]
  406c64:	str	w0, [sp, #124]
  406c68:	ldr	x21, [x26, #560]
  406c6c:	tbnz	w19, #31, 406db0 <ferror@plt+0x5110>
  406c70:	add	x20, x26, #0x230
  406c74:	ldr	w0, [x20, #8]
  406c78:	cmp	w19, w0
  406c7c:	b.lt	406ccc <ferror@plt+0x502c>  // b.tstop
  406c80:	mov	w0, #0x7fffffff            	// #2147483647
  406c84:	cmp	w19, w0
  406c88:	b.eq	406dac <ferror@plt+0x510c>  // b.none
  406c8c:	add	w27, w19, #0x1
  406c90:	add	x0, x20, #0x10
  406c94:	cmp	x21, x0
  406c98:	sbfiz	x1, x27, #4, #32
  406c9c:	b.eq	406d90 <ferror@plt+0x50f0>  // b.none
  406ca0:	mov	x0, x21
  406ca4:	bl	408048 <ferror@plt+0x63a8>
  406ca8:	mov	x21, x0
  406cac:	str	x0, [x26, #560]
  406cb0:	ldr	w0, [x20, #8]
  406cb4:	mov	w1, #0x0                   	// #0
  406cb8:	sub	w2, w27, w0
  406cbc:	add	x0, x21, w0, sxtw #4
  406cc0:	sbfiz	x2, x2, #4, #32
  406cc4:	bl	401a30 <memset@plt>
  406cc8:	str	w27, [x20, #8]
  406ccc:	sbfiz	x19, x19, #4, #32
  406cd0:	add	x6, x20, #0x28
  406cd4:	add	x26, x21, x19
  406cd8:	mov	x3, x24
  406cdc:	ldp	x7, x0, [x20, #72]
  406ce0:	mov	x2, x23
  406ce4:	ldp	w4, w5, [x20, #32]
  406ce8:	ldr	x27, [x21, x19]
  406cec:	orr	w25, w5, #0x1
  406cf0:	ldr	x28, [x26, #8]
  406cf4:	str	x0, [sp]
  406cf8:	mov	x1, x27
  406cfc:	mov	w5, w25
  406d00:	mov	x0, x28
  406d04:	bl	404020 <ferror@plt+0x2380>
  406d08:	cmp	x27, x0
  406d0c:	b.hi	406d64 <ferror@plt+0x50c4>  // b.pmore
  406d10:	add	x27, x0, #0x1
  406d14:	str	x27, [x21, x19]
  406d18:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  406d1c:	add	x0, x0, #0x340
  406d20:	cmp	x28, x0
  406d24:	b.eq	406d30 <ferror@plt+0x5090>  // b.none
  406d28:	mov	x0, x28
  406d2c:	bl	401b70 <free@plt>
  406d30:	mov	x0, x27
  406d34:	bl	408018 <ferror@plt+0x6378>
  406d38:	ldp	x7, x1, [x20, #72]
  406d3c:	str	x0, [x26, #8]
  406d40:	ldr	w4, [x20, #32]
  406d44:	mov	x28, x0
  406d48:	str	x1, [sp]
  406d4c:	mov	w5, w25
  406d50:	mov	x3, x24
  406d54:	mov	x2, x23
  406d58:	add	x6, x20, #0x28
  406d5c:	mov	x1, x27
  406d60:	bl	404020 <ferror@plt+0x2380>
  406d64:	ldr	w0, [sp, #124]
  406d68:	ldp	x29, x30, [sp, #16]
  406d6c:	ldp	x19, x20, [sp, #32]
  406d70:	ldp	x23, x24, [sp, #64]
  406d74:	ldp	x25, x26, [sp, #80]
  406d78:	str	w0, [x22]
  406d7c:	mov	x0, x28
  406d80:	ldp	x21, x22, [sp, #48]
  406d84:	ldp	x27, x28, [sp, #96]
  406d88:	add	sp, sp, #0x80
  406d8c:	ret
  406d90:	mov	x0, #0x0                   	// #0
  406d94:	bl	408048 <ferror@plt+0x63a8>
  406d98:	mov	x21, x0
  406d9c:	str	x0, [x26, #560]
  406da0:	ldp	x0, x1, [x20, #16]
  406da4:	stp	x0, x1, [x21]
  406da8:	b	406cb0 <ferror@plt+0x5010>
  406dac:	bl	4081e0 <ferror@plt+0x6540>
  406db0:	bl	401ab0 <abort@plt>
  406db4:	nop
  406db8:	sub	sp, sp, #0x70
  406dbc:	stp	x29, x30, [sp, #16]
  406dc0:	add	x29, sp, #0x10
  406dc4:	stp	x19, x20, [sp, #32]
  406dc8:	stp	x21, x22, [sp, #48]
  406dcc:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  406dd0:	add	x19, x21, #0x230
  406dd4:	stp	x23, x24, [sp, #64]
  406dd8:	mov	x24, x0
  406ddc:	stp	x25, x26, [sp, #80]
  406de0:	mov	x25, x1
  406de4:	str	x27, [sp, #96]
  406de8:	bl	401c50 <__errno_location@plt>
  406dec:	mov	x23, x0
  406df0:	ldr	w0, [x19, #8]
  406df4:	ldr	x20, [x21, #560]
  406df8:	cmp	w0, #0x0
  406dfc:	ldr	w26, [x23]
  406e00:	b.gt	406e44 <ferror@plt+0x51a4>
  406e04:	add	x0, x19, #0x10
  406e08:	cmp	x20, x0
  406e0c:	b.eq	406ef8 <ferror@plt+0x5258>  // b.none
  406e10:	mov	x0, x20
  406e14:	mov	x1, #0x10                  	// #16
  406e18:	bl	408048 <ferror@plt+0x63a8>
  406e1c:	mov	x20, x0
  406e20:	str	x0, [x21, #560]
  406e24:	ldr	w0, [x19, #8]
  406e28:	mov	w21, #0x1                   	// #1
  406e2c:	mov	w1, #0x0                   	// #0
  406e30:	sub	w2, w21, w0
  406e34:	add	x0, x20, w0, sxtw #4
  406e38:	sbfiz	x2, x2, #4, #32
  406e3c:	bl	401a30 <memset@plt>
  406e40:	str	w21, [x19, #8]
  406e44:	ldp	x21, x22, [x20]
  406e48:	add	x6, x19, #0x28
  406e4c:	ldp	x7, x0, [x19, #72]
  406e50:	str	x0, [sp]
  406e54:	ldp	w4, w27, [x19, #32]
  406e58:	mov	x3, x25
  406e5c:	mov	x2, x24
  406e60:	mov	x1, x21
  406e64:	orr	w27, w27, #0x1
  406e68:	mov	x0, x22
  406e6c:	mov	w5, w27
  406e70:	bl	404020 <ferror@plt+0x2380>
  406e74:	cmp	x21, x0
  406e78:	b.hi	406ed0 <ferror@plt+0x5230>  // b.pmore
  406e7c:	add	x21, x0, #0x1
  406e80:	str	x21, [x20]
  406e84:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  406e88:	add	x0, x0, #0x340
  406e8c:	cmp	x22, x0
  406e90:	b.eq	406e9c <ferror@plt+0x51fc>  // b.none
  406e94:	mov	x0, x22
  406e98:	bl	401b70 <free@plt>
  406e9c:	mov	x0, x21
  406ea0:	bl	408018 <ferror@plt+0x6378>
  406ea4:	ldp	x7, x1, [x19, #72]
  406ea8:	str	x0, [x20, #8]
  406eac:	ldr	w4, [x19, #32]
  406eb0:	mov	x22, x0
  406eb4:	str	x1, [sp]
  406eb8:	mov	w5, w27
  406ebc:	mov	x3, x25
  406ec0:	mov	x2, x24
  406ec4:	add	x6, x19, #0x28
  406ec8:	mov	x1, x21
  406ecc:	bl	404020 <ferror@plt+0x2380>
  406ed0:	mov	x0, x22
  406ed4:	ldp	x29, x30, [sp, #16]
  406ed8:	ldp	x19, x20, [sp, #32]
  406edc:	ldp	x21, x22, [sp, #48]
  406ee0:	ldr	x27, [sp, #96]
  406ee4:	str	w26, [x23]
  406ee8:	ldp	x23, x24, [sp, #64]
  406eec:	ldp	x25, x26, [sp, #80]
  406ef0:	add	sp, sp, #0x70
  406ef4:	ret
  406ef8:	mov	x1, #0x10                  	// #16
  406efc:	mov	x0, #0x0                   	// #0
  406f00:	bl	408048 <ferror@plt+0x63a8>
  406f04:	mov	x20, x0
  406f08:	str	x0, [x21, #560]
  406f0c:	ldp	x0, x1, [x19, #16]
  406f10:	stp	x0, x1, [x20]
  406f14:	b	406e24 <ferror@plt+0x5184>
  406f18:	sub	sp, sp, #0x70
  406f1c:	stp	x29, x30, [sp, #16]
  406f20:	add	x29, sp, #0x10
  406f24:	stp	x21, x22, [sp, #48]
  406f28:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0x13788>
  406f2c:	stp	x19, x20, [sp, #32]
  406f30:	mov	w19, w0
  406f34:	stp	x23, x24, [sp, #64]
  406f38:	mov	x24, x1
  406f3c:	stp	x25, x26, [sp, #80]
  406f40:	stp	x27, x28, [sp, #96]
  406f44:	bl	401c50 <__errno_location@plt>
  406f48:	ldr	w25, [x0]
  406f4c:	ldr	x21, [x22, #560]
  406f50:	tbnz	w19, #31, 407094 <ferror@plt+0x53f4>
  406f54:	add	x20, x22, #0x230
  406f58:	mov	x23, x0
  406f5c:	ldr	w0, [x20, #8]
  406f60:	cmp	w19, w0
  406f64:	b.lt	406fb4 <ferror@plt+0x5314>  // b.tstop
  406f68:	mov	w0, #0x7fffffff            	// #2147483647
  406f6c:	cmp	w19, w0
  406f70:	b.eq	407090 <ferror@plt+0x53f0>  // b.none
  406f74:	add	w26, w19, #0x1
  406f78:	add	x0, x20, #0x10
  406f7c:	cmp	x21, x0
  406f80:	sbfiz	x1, x26, #4, #32
  406f84:	b.eq	407074 <ferror@plt+0x53d4>  // b.none
  406f88:	mov	x0, x21
  406f8c:	bl	408048 <ferror@plt+0x63a8>
  406f90:	mov	x21, x0
  406f94:	str	x0, [x22, #560]
  406f98:	ldr	w0, [x20, #8]
  406f9c:	mov	w1, #0x0                   	// #0
  406fa0:	sub	w2, w26, w0
  406fa4:	add	x0, x21, w0, sxtw #4
  406fa8:	sbfiz	x2, x2, #4, #32
  406fac:	bl	401a30 <memset@plt>
  406fb0:	str	w26, [x20, #8]
  406fb4:	sbfiz	x19, x19, #4, #32
  406fb8:	add	x6, x20, #0x28
  406fbc:	add	x26, x21, x19
  406fc0:	mov	x2, x24
  406fc4:	ldp	x7, x0, [x20, #72]
  406fc8:	mov	x3, #0xffffffffffffffff    	// #-1
  406fcc:	ldp	w4, w28, [x20, #32]
  406fd0:	ldr	x22, [x21, x19]
  406fd4:	orr	w28, w28, #0x1
  406fd8:	ldr	x27, [x26, #8]
  406fdc:	str	x0, [sp]
  406fe0:	mov	x1, x22
  406fe4:	mov	w5, w28
  406fe8:	mov	x0, x27
  406fec:	bl	404020 <ferror@plt+0x2380>
  406ff0:	cmp	x22, x0
  406ff4:	b.hi	40704c <ferror@plt+0x53ac>  // b.pmore
  406ff8:	add	x22, x0, #0x1
  406ffc:	str	x22, [x21, x19]
  407000:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  407004:	add	x0, x0, #0x340
  407008:	cmp	x27, x0
  40700c:	b.eq	407018 <ferror@plt+0x5378>  // b.none
  407010:	mov	x0, x27
  407014:	bl	401b70 <free@plt>
  407018:	mov	x0, x22
  40701c:	bl	408018 <ferror@plt+0x6378>
  407020:	ldp	x7, x1, [x20, #72]
  407024:	str	x0, [x26, #8]
  407028:	ldr	w4, [x20, #32]
  40702c:	mov	x27, x0
  407030:	str	x1, [sp]
  407034:	mov	w5, w28
  407038:	mov	x2, x24
  40703c:	add	x6, x20, #0x28
  407040:	mov	x1, x22
  407044:	mov	x3, #0xffffffffffffffff    	// #-1
  407048:	bl	404020 <ferror@plt+0x2380>
  40704c:	mov	x0, x27
  407050:	ldp	x29, x30, [sp, #16]
  407054:	ldp	x19, x20, [sp, #32]
  407058:	ldp	x21, x22, [sp, #48]
  40705c:	ldp	x27, x28, [sp, #96]
  407060:	str	w25, [x23]
  407064:	ldp	x23, x24, [sp, #64]
  407068:	ldp	x25, x26, [sp, #80]
  40706c:	add	sp, sp, #0x70
  407070:	ret
  407074:	mov	x0, #0x0                   	// #0
  407078:	bl	408048 <ferror@plt+0x63a8>
  40707c:	mov	x21, x0
  407080:	str	x0, [x22, #560]
  407084:	ldp	x0, x1, [x20, #16]
  407088:	stp	x0, x1, [x21]
  40708c:	b	406f98 <ferror@plt+0x52f8>
  407090:	bl	4081e0 <ferror@plt+0x6540>
  407094:	bl	401ab0 <abort@plt>
  407098:	sub	sp, sp, #0x60
  40709c:	stp	x29, x30, [sp, #16]
  4070a0:	add	x29, sp, #0x10
  4070a4:	stp	x19, x20, [sp, #32]
  4070a8:	stp	x21, x22, [sp, #48]
  4070ac:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0x13788>
  4070b0:	add	x19, x21, #0x230
  4070b4:	stp	x23, x24, [sp, #64]
  4070b8:	mov	x24, x0
  4070bc:	stp	x25, x26, [sp, #80]
  4070c0:	bl	401c50 <__errno_location@plt>
  4070c4:	mov	x23, x0
  4070c8:	ldr	w0, [x19, #8]
  4070cc:	ldr	x20, [x21, #560]
  4070d0:	cmp	w0, #0x0
  4070d4:	ldr	w25, [x23]
  4070d8:	b.gt	40711c <ferror@plt+0x547c>
  4070dc:	add	x0, x19, #0x10
  4070e0:	cmp	x20, x0
  4070e4:	b.eq	4071cc <ferror@plt+0x552c>  // b.none
  4070e8:	mov	x0, x20
  4070ec:	mov	x1, #0x10                  	// #16
  4070f0:	bl	408048 <ferror@plt+0x63a8>
  4070f4:	mov	x20, x0
  4070f8:	str	x0, [x21, #560]
  4070fc:	ldr	w0, [x19, #8]
  407100:	mov	w21, #0x1                   	// #1
  407104:	mov	w1, #0x0                   	// #0
  407108:	sub	w2, w21, w0
  40710c:	add	x0, x20, w0, sxtw #4
  407110:	sbfiz	x2, x2, #4, #32
  407114:	bl	401a30 <memset@plt>
  407118:	str	w21, [x19, #8]
  40711c:	ldp	x21, x22, [x20]
  407120:	add	x6, x19, #0x28
  407124:	ldp	x7, x0, [x19, #72]
  407128:	str	x0, [sp]
  40712c:	ldp	w4, w26, [x19, #32]
  407130:	mov	x2, x24
  407134:	mov	x1, x21
  407138:	mov	x0, x22
  40713c:	orr	w26, w26, #0x1
  407140:	mov	x3, #0xffffffffffffffff    	// #-1
  407144:	mov	w5, w26
  407148:	bl	404020 <ferror@plt+0x2380>
  40714c:	cmp	x21, x0
  407150:	b.hi	4071a8 <ferror@plt+0x5508>  // b.pmore
  407154:	add	x21, x0, #0x1
  407158:	str	x21, [x20]
  40715c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  407160:	add	x0, x0, #0x340
  407164:	cmp	x22, x0
  407168:	b.eq	407174 <ferror@plt+0x54d4>  // b.none
  40716c:	mov	x0, x22
  407170:	bl	401b70 <free@plt>
  407174:	mov	x0, x21
  407178:	bl	408018 <ferror@plt+0x6378>
  40717c:	ldp	x7, x1, [x19, #72]
  407180:	str	x0, [x20, #8]
  407184:	ldr	w4, [x19, #32]
  407188:	mov	x22, x0
  40718c:	str	x1, [sp]
  407190:	mov	w5, w26
  407194:	mov	x2, x24
  407198:	add	x6, x19, #0x28
  40719c:	mov	x1, x21
  4071a0:	mov	x3, #0xffffffffffffffff    	// #-1
  4071a4:	bl	404020 <ferror@plt+0x2380>
  4071a8:	mov	x0, x22
  4071ac:	ldp	x29, x30, [sp, #16]
  4071b0:	ldp	x19, x20, [sp, #32]
  4071b4:	ldp	x21, x22, [sp, #48]
  4071b8:	str	w25, [x23]
  4071bc:	ldp	x23, x24, [sp, #64]
  4071c0:	ldp	x25, x26, [sp, #80]
  4071c4:	add	sp, sp, #0x60
  4071c8:	ret
  4071cc:	mov	x1, #0x10                  	// #16
  4071d0:	mov	x0, #0x0                   	// #0
  4071d4:	bl	408048 <ferror@plt+0x63a8>
  4071d8:	mov	x20, x0
  4071dc:	str	x0, [x21, #560]
  4071e0:	ldp	x0, x1, [x19, #16]
  4071e4:	stp	x0, x1, [x20]
  4071e8:	b	4070fc <ferror@plt+0x545c>
  4071ec:	nop
  4071f0:	stp	x29, x30, [sp, #-48]!
  4071f4:	add	x1, x0, #0x18
  4071f8:	mov	x29, sp
  4071fc:	stp	x19, x20, [sp, #16]
  407200:	mov	x19, x0
  407204:	ldp	x20, x0, [x1, #16]
  407208:	stp	x21, x22, [sp, #32]
  40720c:	subs	x22, x0, x20
  407210:	sub	x22, x22, #0x1
  407214:	b.eq	4072e0 <ferror@plt+0x5640>  // b.none
  407218:	ldr	x2, [x1, #48]
  40721c:	ldr	x3, [x1, #8]
  407220:	add	x0, x0, x2
  407224:	ldr	x4, [x1, #32]
  407228:	bic	x2, x0, x2
  40722c:	str	x2, [x1, #24]
  407230:	sub	x0, x2, x3
  407234:	sub	x3, x4, x3
  407238:	cmp	x0, x3
  40723c:	b.ls	407248 <ferror@plt+0x55a8>  // b.plast
  407240:	mov	x2, x4
  407244:	str	x4, [x1, #24]
  407248:	ldr	x0, [x19, #144]
  40724c:	str	x2, [x1, #16]
  407250:	ldr	x1, [x19, #136]
  407254:	add	x21, x19, #0x70
  407258:	sub	x0, x0, x1
  40725c:	cmp	x0, #0x7
  407260:	b.ls	4072b8 <ferror@plt+0x5618>  // b.plast
  407264:	str	x20, [x1]
  407268:	add	x20, x19, #0xc8
  40726c:	ldr	x1, [x21, #24]
  407270:	ldr	x0, [x20, #32]
  407274:	add	x1, x1, #0x8
  407278:	str	x1, [x21, #24]
  40727c:	ldr	x1, [x20, #24]
  407280:	sub	x0, x0, x1
  407284:	cmp	x0, #0x7
  407288:	b.ls	4072cc <ferror@plt+0x562c>  // b.plast
  40728c:	str	x22, [x1]
  407290:	ldr	x1, [x20, #24]
  407294:	ldr	x0, [x19]
  407298:	add	x1, x1, #0x8
  40729c:	ldp	x21, x22, [sp, #32]
  4072a0:	str	x1, [x20, #24]
  4072a4:	add	x0, x0, #0x1
  4072a8:	str	x0, [x19]
  4072ac:	ldp	x19, x20, [sp, #16]
  4072b0:	ldp	x29, x30, [sp], #48
  4072b4:	ret
  4072b8:	mov	x1, #0x8                   	// #8
  4072bc:	mov	x0, x21
  4072c0:	bl	408640 <_obstack_newchunk@@Base>
  4072c4:	ldr	x1, [x21, #24]
  4072c8:	b	407264 <ferror@plt+0x55c4>
  4072cc:	mov	x1, #0x8                   	// #8
  4072d0:	mov	x0, x20
  4072d4:	bl	408640 <_obstack_newchunk@@Base>
  4072d8:	ldr	x1, [x20, #24]
  4072dc:	b	40728c <ferror@plt+0x55ec>
  4072e0:	ldrb	w2, [x1, #80]
  4072e4:	orr	w2, w2, #0x2
  4072e8:	strb	w2, [x1, #80]
  4072ec:	b	407218 <ferror@plt+0x5578>
  4072f0:	stp	x29, x30, [sp, #-48]!
  4072f4:	mov	x2, #0x0                   	// #0
  4072f8:	mov	x1, #0x0                   	// #0
  4072fc:	mov	x29, sp
  407300:	stp	x19, x20, [sp, #16]
  407304:	mov	x19, x0
  407308:	adrp	x20, 401000 <mbrtowc@plt-0x890>
  40730c:	str	x21, [sp, #32]
  407310:	add	x20, x20, #0x9a0
  407314:	str	xzr, [x19]
  407318:	adrp	x21, 401000 <mbrtowc@plt-0x890>
  40731c:	stp	xzr, xzr, [x19, #8]
  407320:	add	x21, x21, #0xb70
  407324:	mov	x3, x20
  407328:	mov	x4, x21
  40732c:	add	x0, x0, #0x18
  407330:	bl	408468 <_obstack_begin@@Base>
  407334:	mov	x4, x21
  407338:	mov	x3, x20
  40733c:	add	x0, x19, #0x70
  407340:	mov	x2, #0x0                   	// #0
  407344:	mov	x1, #0x0                   	// #0
  407348:	bl	408468 <_obstack_begin@@Base>
  40734c:	mov	x4, x21
  407350:	mov	x3, x20
  407354:	add	x0, x19, #0xc8
  407358:	mov	x2, #0x0                   	// #0
  40735c:	ldp	x19, x20, [sp, #16]
  407360:	mov	x1, #0x0                   	// #0
  407364:	ldr	x21, [sp, #32]
  407368:	ldp	x29, x30, [sp], #48
  40736c:	b	408468 <_obstack_begin@@Base>
  407370:	stp	x29, x30, [sp, #-32]!
  407374:	mov	x1, #0x0                   	// #0
  407378:	mov	x29, sp
  40737c:	str	x19, [sp, #16]
  407380:	mov	x19, x0
  407384:	add	x0, x0, #0x18
  407388:	bl	4087c8 <_obstack_free@@Base>
  40738c:	add	x0, x19, #0x70
  407390:	mov	x1, #0x0                   	// #0
  407394:	bl	4087c8 <_obstack_free@@Base>
  407398:	add	x0, x19, #0xc8
  40739c:	mov	x1, #0x0                   	// #0
  4073a0:	ldr	x19, [sp, #16]
  4073a4:	ldp	x29, x30, [sp], #32
  4073a8:	b	4087c8 <_obstack_free@@Base>
  4073ac:	nop
  4073b0:	stp	x29, x30, [sp, #-48]!
  4073b4:	mov	x29, sp
  4073b8:	stp	x19, x20, [sp, #16]
  4073bc:	add	x20, x1, #0x18
  4073c0:	stp	x21, x22, [sp, #32]
  4073c4:	mov	x22, x1
  4073c8:	mov	x21, x0
  4073cc:	nop
  4073d0:	mov	x0, x21
  4073d4:	bl	401a10 <fgetc@plt>
  4073d8:	mov	w19, w0
  4073dc:	cmn	w0, #0x1
  4073e0:	b.eq	407420 <ferror@plt+0x5780>  // b.none
  4073e4:	ldp	x2, x3, [x20, #24]
  4073e8:	add	x4, x2, #0x1
  4073ec:	cmp	x3, x2
  4073f0:	b.eq	407510 <ferror@plt+0x5870>  // b.none
  4073f4:	str	x4, [x20, #24]
  4073f8:	strb	w0, [x2]
  4073fc:	cbnz	w0, 4073d0 <ferror@plt+0x5730>
  407400:	mov	x0, x22
  407404:	bl	4071f0 <ferror@plt+0x5550>
  407408:	mov	x0, x21
  40740c:	bl	401a10 <fgetc@plt>
  407410:	mov	w19, w0
  407414:	cmn	w0, #0x1
  407418:	b.ne	4073e4 <ferror@plt+0x5744>  // b.any
  40741c:	nop
  407420:	ldp	x0, x1, [x20, #16]
  407424:	cmp	x1, x0
  407428:	b.eq	40744c <ferror@plt+0x57ac>  // b.none
  40742c:	ldr	x0, [x20, #32]
  407430:	cmp	x1, x0
  407434:	b.eq	4075a4 <ferror@plt+0x5904>  // b.none
  407438:	add	x0, x1, #0x1
  40743c:	str	x0, [x20, #24]
  407440:	strb	wzr, [x1]
  407444:	mov	x0, x22
  407448:	bl	4071f0 <ferror@plt+0x5550>
  40744c:	add	x19, x22, #0x70
  407450:	ldp	x1, x0, [x19, #24]
  407454:	sub	x0, x0, x1
  407458:	cmp	x0, #0x7
  40745c:	b.ls	407570 <ferror@plt+0x58d0>  // b.plast
  407460:	str	xzr, [x1]
  407464:	ldp	x3, x0, [x19, #16]
  407468:	add	x0, x0, #0x8
  40746c:	cmp	x0, x3
  407470:	b.eq	407594 <ferror@plt+0x58f4>  // b.none
  407474:	ldr	x1, [x19, #48]
  407478:	ldr	x2, [x19, #8]
  40747c:	add	x0, x0, x1
  407480:	ldr	x4, [x19, #32]
  407484:	bic	x1, x0, x1
  407488:	str	x1, [x19, #24]
  40748c:	sub	x0, x1, x2
  407490:	sub	x2, x4, x2
  407494:	cmp	x0, x2
  407498:	b.hi	40753c <ferror@plt+0x589c>  // b.pmore
  40749c:	add	x0, x22, #0xc8
  4074a0:	str	x1, [x19, #16]
  4074a4:	ldr	x4, [x0, #16]
  4074a8:	str	x3, [x22, #8]
  4074ac:	ldr	x3, [x0, #24]
  4074b0:	cmp	x3, x4
  4074b4:	b.eq	407560 <ferror@plt+0x58c0>  // b.none
  4074b8:	ldr	x1, [x0, #48]
  4074bc:	ldr	x2, [x0, #8]
  4074c0:	add	x3, x3, x1
  4074c4:	ldr	x5, [x0, #32]
  4074c8:	bic	x1, x3, x1
  4074cc:	str	x1, [x0, #24]
  4074d0:	sub	x3, x1, x2
  4074d4:	sub	x2, x5, x2
  4074d8:	cmp	x3, x2
  4074dc:	b.ls	4074e8 <ferror@plt+0x5848>  // b.plast
  4074e0:	mov	x1, x5
  4074e4:	str	x5, [x0, #24]
  4074e8:	str	x1, [x0, #16]
  4074ec:	mov	x0, x21
  4074f0:	str	x4, [x22, #16]
  4074f4:	bl	401ca0 <ferror@plt>
  4074f8:	cmp	w0, #0x0
  4074fc:	cset	w0, eq  // eq = none
  407500:	ldp	x19, x20, [sp, #16]
  407504:	ldp	x21, x22, [sp, #32]
  407508:	ldp	x29, x30, [sp], #48
  40750c:	ret
  407510:	mov	x0, x20
  407514:	mov	x1, #0x1                   	// #1
  407518:	bl	408640 <_obstack_newchunk@@Base>
  40751c:	ldr	x0, [x20, #24]
  407520:	add	x1, x0, #0x1
  407524:	str	x1, [x20, #24]
  407528:	strb	w19, [x0]
  40752c:	cbnz	w19, 4073d0 <ferror@plt+0x5730>
  407530:	mov	x0, x22
  407534:	bl	4071f0 <ferror@plt+0x5550>
  407538:	b	407408 <ferror@plt+0x5768>
  40753c:	add	x0, x22, #0xc8
  407540:	mov	x1, x4
  407544:	str	x1, [x19, #16]
  407548:	str	x4, [x19, #24]
  40754c:	ldr	x4, [x0, #16]
  407550:	str	x3, [x22, #8]
  407554:	ldr	x3, [x0, #24]
  407558:	cmp	x3, x4
  40755c:	b.ne	4074b8 <ferror@plt+0x5818>  // b.any
  407560:	ldrb	w1, [x0, #80]
  407564:	orr	w1, w1, #0x2
  407568:	strb	w1, [x0, #80]
  40756c:	b	4074b8 <ferror@plt+0x5818>
  407570:	mov	x0, x19
  407574:	mov	x1, #0x8                   	// #8
  407578:	bl	408640 <_obstack_newchunk@@Base>
  40757c:	ldr	x1, [x19, #24]
  407580:	str	xzr, [x1]
  407584:	ldp	x3, x0, [x19, #16]
  407588:	add	x0, x0, #0x8
  40758c:	cmp	x0, x3
  407590:	b.ne	407474 <ferror@plt+0x57d4>  // b.any
  407594:	ldrb	w1, [x19, #80]
  407598:	orr	w1, w1, #0x2
  40759c:	strb	w1, [x19, #80]
  4075a0:	b	407474 <ferror@plt+0x57d4>
  4075a4:	mov	x1, #0x1                   	// #1
  4075a8:	mov	x0, x20
  4075ac:	bl	408640 <_obstack_newchunk@@Base>
  4075b0:	ldr	x1, [x20, #24]
  4075b4:	b	407438 <ferror@plt+0x5798>
  4075b8:	stp	x29, x30, [sp, #-64]!
  4075bc:	mov	x29, sp
  4075c0:	stp	x19, x20, [sp, #16]
  4075c4:	mov	x20, x2
  4075c8:	stp	x21, x22, [sp, #32]
  4075cc:	mov	w22, w0
  4075d0:	mov	x21, x1
  4075d4:	str	x23, [sp, #48]
  4075d8:	mov	x23, #0x7ff00000            	// #2146435072
  4075dc:	nop
  4075e0:	mov	x2, x20
  4075e4:	mov	x1, x21
  4075e8:	mov	w0, w22
  4075ec:	bl	401bc0 <read@plt>
  4075f0:	mov	x19, x0
  4075f4:	tbz	x0, #63, 407618 <ferror@plt+0x5978>
  4075f8:	bl	401c50 <__errno_location@plt>
  4075fc:	ldr	w2, [x0]
  407600:	cmp	w2, #0x4
  407604:	b.eq	4075e0 <ferror@plt+0x5940>  // b.none
  407608:	cmp	x20, x23
  40760c:	mov	x20, #0x7ff00000            	// #2146435072
  407610:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  407614:	b.eq	4075e0 <ferror@plt+0x5940>  // b.none
  407618:	mov	x0, x19
  40761c:	ldp	x19, x20, [sp, #16]
  407620:	ldp	x21, x22, [sp, #32]
  407624:	ldr	x23, [sp, #48]
  407628:	ldp	x29, x30, [sp], #64
  40762c:	ret
  407630:	sub	sp, sp, #0x50
  407634:	stp	x29, x30, [sp, #32]
  407638:	add	x29, sp, #0x20
  40763c:	stp	x19, x20, [sp, #48]
  407640:	mov	x19, x5
  407644:	mov	x20, x4
  407648:	str	x21, [sp, #64]
  40764c:	mov	x5, x3
  407650:	mov	x21, x0
  407654:	cbz	x1, 407830 <ferror@plt+0x5b90>
  407658:	mov	x4, x2
  40765c:	mov	x3, x1
  407660:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  407664:	mov	w1, #0x1                   	// #1
  407668:	add	x2, x2, #0x8a8
  40766c:	bl	401b30 <__fprintf_chk@plt>
  407670:	mov	w2, #0x5                   	// #5
  407674:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407678:	mov	x0, #0x0                   	// #0
  40767c:	add	x1, x1, #0x8c0
  407680:	bl	401c00 <dcgettext@plt>
  407684:	mov	x3, x0
  407688:	mov	w4, #0x7e3                 	// #2019
  40768c:	mov	w1, #0x1                   	// #1
  407690:	mov	x0, x21
  407694:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  407698:	add	x2, x2, #0xbc0
  40769c:	bl	401b30 <__fprintf_chk@plt>
  4076a0:	mov	w2, #0x5                   	// #5
  4076a4:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4076a8:	mov	x0, #0x0                   	// #0
  4076ac:	add	x1, x1, #0x8c8
  4076b0:	bl	401c00 <dcgettext@plt>
  4076b4:	mov	x1, x21
  4076b8:	bl	401c10 <fputs_unlocked@plt>
  4076bc:	cmp	x19, #0x5
  4076c0:	b.eq	40784c <ferror@plt+0x5bac>  // b.none
  4076c4:	b.hi	407718 <ferror@plt+0x5a78>  // b.pmore
  4076c8:	cmp	x19, #0x2
  4076cc:	b.eq	40788c <ferror@plt+0x5bec>  // b.none
  4076d0:	b.ls	40778c <ferror@plt+0x5aec>  // b.plast
  4076d4:	cmp	x19, #0x3
  4076d8:	b.eq	40790c <ferror@plt+0x5c6c>  // b.none
  4076dc:	mov	w2, #0x5                   	// #5
  4076e0:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4076e4:	mov	x0, #0x0                   	// #0
  4076e8:	add	x1, x1, #0x9e0
  4076ec:	bl	401c00 <dcgettext@plt>
  4076f0:	mov	x2, x0
  4076f4:	ldp	x3, x4, [x20]
  4076f8:	mov	x0, x21
  4076fc:	ldp	x5, x6, [x20, #16]
  407700:	mov	w1, #0x1                   	// #1
  407704:	ldp	x29, x30, [sp, #32]
  407708:	ldp	x19, x20, [sp, #48]
  40770c:	ldr	x21, [sp, #64]
  407710:	add	sp, sp, #0x50
  407714:	b	401b30 <__fprintf_chk@plt>
  407718:	cmp	x19, #0x8
  40771c:	b.eq	407948 <ferror@plt+0x5ca8>  // b.none
  407720:	b.ls	4077d0 <ferror@plt+0x5b30>  // b.plast
  407724:	cmp	x19, #0x9
  407728:	b.ne	4078fc <ferror@plt+0x5c5c>  // b.any
  40772c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407730:	add	x1, x1, #0xab0
  407734:	mov	w2, #0x5                   	// #5
  407738:	mov	x0, #0x0                   	// #0
  40773c:	bl	401c00 <dcgettext@plt>
  407740:	ldp	x7, x8, [x20, #32]
  407744:	mov	x2, x0
  407748:	ldp	x3, x4, [x20]
  40774c:	mov	x0, x21
  407750:	ldp	x5, x6, [x20, #16]
  407754:	str	x8, [sp]
  407758:	mov	w1, #0x1                   	// #1
  40775c:	ldr	x8, [x20, #48]
  407760:	str	x8, [sp, #8]
  407764:	ldr	x8, [x20, #56]
  407768:	str	x8, [sp, #16]
  40776c:	ldr	x8, [x20, #64]
  407770:	str	x8, [sp, #24]
  407774:	bl	401b30 <__fprintf_chk@plt>
  407778:	ldp	x29, x30, [sp, #32]
  40777c:	ldp	x19, x20, [sp, #48]
  407780:	ldr	x21, [sp, #64]
  407784:	add	sp, sp, #0x50
  407788:	ret
  40778c:	cbz	x19, 40781c <ferror@plt+0x5b7c>
  407790:	cmp	x19, #0x1
  407794:	b.ne	4078fc <ferror@plt+0x5c5c>  // b.any
  407798:	mov	w2, #0x5                   	// #5
  40779c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4077a0:	mov	x0, #0x0                   	// #0
  4077a4:	add	x1, x1, #0x998
  4077a8:	bl	401c00 <dcgettext@plt>
  4077ac:	mov	x2, x0
  4077b0:	mov	w1, w19
  4077b4:	mov	x0, x21
  4077b8:	ldr	x3, [x20]
  4077bc:	ldp	x29, x30, [sp, #32]
  4077c0:	ldp	x19, x20, [sp, #48]
  4077c4:	ldr	x21, [sp, #64]
  4077c8:	add	sp, sp, #0x50
  4077cc:	b	401b30 <__fprintf_chk@plt>
  4077d0:	cmp	x19, #0x6
  4077d4:	b.eq	4078c4 <ferror@plt+0x5c24>  // b.none
  4077d8:	cmp	x19, #0x7
  4077dc:	b.ne	4078fc <ferror@plt+0x5c5c>  // b.any
  4077e0:	mov	w2, #0x5                   	// #5
  4077e4:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4077e8:	mov	x0, #0x0                   	// #0
  4077ec:	add	x1, x1, #0xa50
  4077f0:	bl	401c00 <dcgettext@plt>
  4077f4:	mov	x2, x0
  4077f8:	ldp	x7, x8, [x20, #32]
  4077fc:	mov	x0, x21
  407800:	ldp	x3, x4, [x20]
  407804:	mov	w1, #0x1                   	// #1
  407808:	ldp	x5, x6, [x20, #16]
  40780c:	str	x8, [sp]
  407810:	ldr	x8, [x20, #48]
  407814:	str	x8, [sp, #8]
  407818:	bl	401b30 <__fprintf_chk@plt>
  40781c:	ldp	x29, x30, [sp, #32]
  407820:	ldp	x19, x20, [sp, #48]
  407824:	ldr	x21, [sp, #64]
  407828:	add	sp, sp, #0x50
  40782c:	ret
  407830:	mov	x4, x3
  407834:	mov	w1, #0x1                   	// #1
  407838:	mov	x3, x2
  40783c:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  407840:	add	x2, x2, #0x8b8
  407844:	bl	401b30 <__fprintf_chk@plt>
  407848:	b	407670 <ferror@plt+0x59d0>
  40784c:	mov	w2, w19
  407850:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407854:	mov	x0, #0x0                   	// #0
  407858:	add	x1, x1, #0xa00
  40785c:	bl	401c00 <dcgettext@plt>
  407860:	mov	x2, x0
  407864:	ldp	x3, x4, [x20]
  407868:	mov	x0, x21
  40786c:	ldp	x5, x6, [x20, #16]
  407870:	mov	w1, #0x1                   	// #1
  407874:	ldp	x29, x30, [sp, #32]
  407878:	ldr	x7, [x20, #32]
  40787c:	ldp	x19, x20, [sp, #48]
  407880:	ldr	x21, [sp, #64]
  407884:	add	sp, sp, #0x50
  407888:	b	401b30 <__fprintf_chk@plt>
  40788c:	mov	w2, #0x5                   	// #5
  407890:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407894:	mov	x0, #0x0                   	// #0
  407898:	add	x1, x1, #0x9a8
  40789c:	bl	401c00 <dcgettext@plt>
  4078a0:	mov	x2, x0
  4078a4:	ldp	x3, x4, [x20]
  4078a8:	mov	x0, x21
  4078ac:	ldp	x29, x30, [sp, #32]
  4078b0:	mov	w1, #0x1                   	// #1
  4078b4:	ldp	x19, x20, [sp, #48]
  4078b8:	ldr	x21, [sp, #64]
  4078bc:	add	sp, sp, #0x50
  4078c0:	b	401b30 <__fprintf_chk@plt>
  4078c4:	mov	w2, #0x5                   	// #5
  4078c8:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4078cc:	mov	x0, #0x0                   	// #0
  4078d0:	add	x1, x1, #0xa28
  4078d4:	bl	401c00 <dcgettext@plt>
  4078d8:	mov	x2, x0
  4078dc:	ldp	x3, x4, [x20]
  4078e0:	mov	x0, x21
  4078e4:	ldp	x5, x6, [x20, #16]
  4078e8:	mov	w1, #0x1                   	// #1
  4078ec:	ldp	x7, x8, [x20, #32]
  4078f0:	str	x8, [sp]
  4078f4:	bl	401b30 <__fprintf_chk@plt>
  4078f8:	b	40781c <ferror@plt+0x5b7c>
  4078fc:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407900:	mov	w2, #0x5                   	// #5
  407904:	add	x1, x1, #0xae8
  407908:	b	407738 <ferror@plt+0x5a98>
  40790c:	mov	w2, #0x5                   	// #5
  407910:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407914:	mov	x0, #0x0                   	// #0
  407918:	add	x1, x1, #0x9c0
  40791c:	bl	401c00 <dcgettext@plt>
  407920:	mov	x2, x0
  407924:	ldp	x3, x4, [x20]
  407928:	mov	x0, x21
  40792c:	ldr	x5, [x20, #16]
  407930:	mov	w1, #0x1                   	// #1
  407934:	ldp	x29, x30, [sp, #32]
  407938:	ldp	x19, x20, [sp, #48]
  40793c:	ldr	x21, [sp, #64]
  407940:	add	sp, sp, #0x50
  407944:	b	401b30 <__fprintf_chk@plt>
  407948:	mov	w2, #0x5                   	// #5
  40794c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407950:	mov	x0, #0x0                   	// #0
  407954:	add	x1, x1, #0xa80
  407958:	bl	401c00 <dcgettext@plt>
  40795c:	mov	x2, x0
  407960:	ldp	x7, x8, [x20, #32]
  407964:	mov	x0, x21
  407968:	ldp	x3, x4, [x20]
  40796c:	mov	w1, #0x1                   	// #1
  407970:	ldp	x5, x6, [x20, #16]
  407974:	str	x8, [sp]
  407978:	ldr	x8, [x20, #48]
  40797c:	str	x8, [sp, #8]
  407980:	ldr	x8, [x20, #56]
  407984:	str	x8, [sp, #16]
  407988:	bl	401b30 <__fprintf_chk@plt>
  40798c:	b	40781c <ferror@plt+0x5b7c>
  407990:	ldr	x5, [x4]
  407994:	cbz	x5, 4079b0 <ferror@plt+0x5d10>
  407998:	mov	x5, #0x0                   	// #0
  40799c:	nop
  4079a0:	add	x5, x5, #0x1
  4079a4:	ldr	x6, [x4, x5, lsl #3]
  4079a8:	cbnz	x6, 4079a0 <ferror@plt+0x5d00>
  4079ac:	b	407630 <ferror@plt+0x5990>
  4079b0:	mov	x5, #0x0                   	// #0
  4079b4:	b	407630 <ferror@plt+0x5990>
  4079b8:	stp	x29, x30, [sp, #-96]!
  4079bc:	mov	x29, sp
  4079c0:	ldp	x6, x8, [x4]
  4079c4:	ldr	w7, [x4, #24]
  4079c8:	add	x5, x6, #0xf
  4079cc:	and	x5, x5, #0xfffffffffffffff8
  4079d0:	tbnz	w7, #31, 407ab8 <ferror@plt+0x5e18>
  4079d4:	ldr	x4, [x6]
  4079d8:	str	x4, [sp, #16]
  4079dc:	cbz	x4, 407b08 <ferror@plt+0x5e68>
  4079e0:	add	x4, x5, #0xf
  4079e4:	ldr	x5, [x5]
  4079e8:	str	x5, [sp, #24]
  4079ec:	and	x4, x4, #0xfffffffffffffff8
  4079f0:	cbz	x5, 407af4 <ferror@plt+0x5e54>
  4079f4:	add	x5, x4, #0xf
  4079f8:	and	x5, x5, #0xfffffffffffffff8
  4079fc:	ldr	x4, [x4]
  407a00:	str	x4, [sp, #32]
  407a04:	cbz	x4, 407aa4 <ferror@plt+0x5e04>
  407a08:	add	x6, x5, #0xf
  407a0c:	and	x6, x6, #0xfffffffffffffff8
  407a10:	ldr	x4, [x5]
  407a14:	str	x4, [sp, #40]
  407a18:	cbz	x4, 407b1c <ferror@plt+0x5e7c>
  407a1c:	ldr	x5, [x6]
  407a20:	str	x5, [sp, #48]
  407a24:	add	x4, x6, #0xf
  407a28:	and	x4, x4, #0xfffffffffffffff8
  407a2c:	cbz	x5, 407b30 <ferror@plt+0x5e90>
  407a30:	add	x6, x4, #0xf
  407a34:	and	x6, x6, #0xfffffffffffffff8
  407a38:	ldr	x4, [x4]
  407a3c:	str	x4, [sp, #56]
  407a40:	cbz	x4, 407b38 <ferror@plt+0x5e98>
  407a44:	ldr	x5, [x6]
  407a48:	str	x5, [sp, #64]
  407a4c:	add	x4, x6, #0xf
  407a50:	and	x4, x4, #0xfffffffffffffff8
  407a54:	cbz	x5, 407b40 <ferror@plt+0x5ea0>
  407a58:	add	x5, x4, #0xf
  407a5c:	and	x5, x5, #0xfffffffffffffff8
  407a60:	ldr	x4, [x4]
  407a64:	str	x4, [sp, #72]
  407a68:	cbz	x4, 407b48 <ferror@plt+0x5ea8>
  407a6c:	add	x6, x5, #0xf
  407a70:	and	x6, x6, #0xfffffffffffffff8
  407a74:	ldr	x4, [x5]
  407a78:	str	x4, [sp, #80]
  407a7c:	cbz	x4, 407b50 <ferror@plt+0x5eb0>
  407a80:	ldr	x4, [x6]
  407a84:	str	x4, [sp, #88]
  407a88:	cmp	x4, #0x0
  407a8c:	cset	x5, ne  // ne = any
  407a90:	add	x5, x5, #0x9
  407a94:	add	x4, sp, #0x10
  407a98:	bl	407630 <ferror@plt+0x5990>
  407a9c:	ldp	x29, x30, [sp], #96
  407aa0:	ret
  407aa4:	add	x4, sp, #0x10
  407aa8:	mov	x5, #0x2                   	// #2
  407aac:	bl	407630 <ferror@plt+0x5990>
  407ab0:	ldp	x29, x30, [sp], #96
  407ab4:	ret
  407ab8:	add	w4, w7, #0x8
  407abc:	cmp	w4, #0x0
  407ac0:	b.gt	4079d4 <ferror@plt+0x5d34>
  407ac4:	ldr	x9, [x8, w7, sxtw]
  407ac8:	str	x9, [sp, #16]
  407acc:	cbz	x9, 407b08 <ferror@plt+0x5e68>
  407ad0:	cbz	w4, 407c80 <ferror@plt+0x5fe0>
  407ad4:	add	w9, w7, #0x10
  407ad8:	cmp	w9, #0x0
  407adc:	b.le	407b58 <ferror@plt+0x5eb8>
  407ae0:	mov	x4, x5
  407ae4:	mov	x5, x6
  407ae8:	ldr	x5, [x5]
  407aec:	str	x5, [sp, #24]
  407af0:	cbnz	x5, 4079f4 <ferror@plt+0x5d54>
  407af4:	add	x4, sp, #0x10
  407af8:	mov	x5, #0x1                   	// #1
  407afc:	bl	407630 <ferror@plt+0x5990>
  407b00:	ldp	x29, x30, [sp], #96
  407b04:	ret
  407b08:	add	x4, sp, #0x10
  407b0c:	mov	x5, #0x0                   	// #0
  407b10:	bl	407630 <ferror@plt+0x5990>
  407b14:	ldp	x29, x30, [sp], #96
  407b18:	ret
  407b1c:	add	x4, sp, #0x10
  407b20:	mov	x5, #0x3                   	// #3
  407b24:	bl	407630 <ferror@plt+0x5990>
  407b28:	ldp	x29, x30, [sp], #96
  407b2c:	ret
  407b30:	mov	x5, #0x4                   	// #4
  407b34:	b	407a94 <ferror@plt+0x5df4>
  407b38:	mov	x5, #0x5                   	// #5
  407b3c:	b	407a94 <ferror@plt+0x5df4>
  407b40:	mov	x5, #0x6                   	// #6
  407b44:	b	407a94 <ferror@plt+0x5df4>
  407b48:	mov	x5, #0x7                   	// #7
  407b4c:	b	407a94 <ferror@plt+0x5df4>
  407b50:	mov	x5, #0x8                   	// #8
  407b54:	b	407a94 <ferror@plt+0x5df4>
  407b58:	ldr	x4, [x8, w4, sxtw]
  407b5c:	str	x4, [sp, #24]
  407b60:	cbz	x4, 407af4 <ferror@plt+0x5e54>
  407b64:	cbz	w9, 407ca8 <ferror@plt+0x6008>
  407b68:	add	w10, w7, #0x18
  407b6c:	mov	x4, x6
  407b70:	cmp	w10, #0x0
  407b74:	b.gt	4079fc <ferror@plt+0x5d5c>
  407b78:	ldr	x4, [x8, w9, sxtw]
  407b7c:	str	x4, [sp, #32]
  407b80:	cbz	x4, 407aa4 <ferror@plt+0x5e04>
  407b84:	cbz	w10, 407ca0 <ferror@plt+0x6000>
  407b88:	add	w4, w7, #0x20
  407b8c:	cmp	w4, #0x0
  407b90:	b.le	407ba4 <ferror@plt+0x5f04>
  407b94:	add	x4, x6, #0xf
  407b98:	mov	x5, x6
  407b9c:	and	x6, x4, #0xfffffffffffffff8
  407ba0:	b	407a10 <ferror@plt+0x5d70>
  407ba4:	ldr	x5, [x8, w10, sxtw]
  407ba8:	str	x5, [sp, #40]
  407bac:	cbz	x5, 407b1c <ferror@plt+0x5e7c>
  407bb0:	cbz	w4, 407a1c <ferror@plt+0x5d7c>
  407bb4:	add	w5, w7, #0x28
  407bb8:	cmp	w5, #0x0
  407bbc:	b.gt	407a1c <ferror@plt+0x5d7c>
  407bc0:	ldr	x4, [x8, w4, sxtw]
  407bc4:	str	x4, [sp, #48]
  407bc8:	cbz	x4, 407b30 <ferror@plt+0x5e90>
  407bcc:	cbz	w5, 407c98 <ferror@plt+0x5ff8>
  407bd0:	add	w4, w7, #0x30
  407bd4:	cmp	w4, #0x0
  407bd8:	b.le	407bec <ferror@plt+0x5f4c>
  407bdc:	add	x5, x6, #0xf
  407be0:	mov	x4, x6
  407be4:	and	x6, x5, #0xfffffffffffffff8
  407be8:	b	407a38 <ferror@plt+0x5d98>
  407bec:	ldr	x5, [x8, w5, sxtw]
  407bf0:	str	x5, [sp, #56]
  407bf4:	cbz	x5, 407b38 <ferror@plt+0x5e98>
  407bf8:	cbz	w4, 407a44 <ferror@plt+0x5da4>
  407bfc:	add	w5, w7, #0x38
  407c00:	cmp	w5, #0x0
  407c04:	b.gt	407a44 <ferror@plt+0x5da4>
  407c08:	ldr	x4, [x8, w4, sxtw]
  407c0c:	str	x4, [sp, #64]
  407c10:	cbz	x4, 407b40 <ferror@plt+0x5ea0>
  407c14:	cbz	w5, 407c90 <ferror@plt+0x5ff0>
  407c18:	add	w9, w7, #0x40
  407c1c:	cmp	w9, #0x0
  407c20:	b.le	407c34 <ferror@plt+0x5f94>
  407c24:	add	x5, x6, #0xf
  407c28:	mov	x4, x6
  407c2c:	and	x5, x5, #0xfffffffffffffff8
  407c30:	b	407a60 <ferror@plt+0x5dc0>
  407c34:	ldr	x4, [x8, w5, sxtw]
  407c38:	str	x4, [sp, #72]
  407c3c:	cbz	x4, 407b48 <ferror@plt+0x5ea8>
  407c40:	cbz	w9, 407c88 <ferror@plt+0x5fe8>
  407c44:	add	w4, w7, #0x48
  407c48:	cmp	w4, #0x0
  407c4c:	b.le	407c60 <ferror@plt+0x5fc0>
  407c50:	add	x4, x6, #0xf
  407c54:	mov	x5, x6
  407c58:	and	x6, x4, #0xfffffffffffffff8
  407c5c:	b	407a74 <ferror@plt+0x5dd4>
  407c60:	ldr	x5, [x8, w9, sxtw]
  407c64:	str	x5, [sp, #80]
  407c68:	cbz	x5, 407b50 <ferror@plt+0x5eb0>
  407c6c:	cbz	w4, 407a80 <ferror@plt+0x5de0>
  407c70:	add	x8, x8, w4, sxtw
  407c74:	cmn	w7, #0x4f
  407c78:	csel	x6, x8, x6, lt  // lt = tstop
  407c7c:	b	407a80 <ferror@plt+0x5de0>
  407c80:	mov	x5, x6
  407c84:	b	4079e0 <ferror@plt+0x5d40>
  407c88:	mov	x5, x6
  407c8c:	b	407a6c <ferror@plt+0x5dcc>
  407c90:	mov	x4, x6
  407c94:	b	407a58 <ferror@plt+0x5db8>
  407c98:	mov	x4, x6
  407c9c:	b	407a30 <ferror@plt+0x5d90>
  407ca0:	mov	x5, x6
  407ca4:	b	407a08 <ferror@plt+0x5d68>
  407ca8:	mov	x4, x6
  407cac:	b	4079f4 <ferror@plt+0x5d54>
  407cb0:	stp	x29, x30, [sp, #-288]!
  407cb4:	mov	w10, #0xffffffe0            	// #-32
  407cb8:	mov	w9, #0xffffff80            	// #-128
  407cbc:	mov	x29, sp
  407cc0:	add	x11, sp, #0x100
  407cc4:	add	x12, sp, #0x120
  407cc8:	stp	x12, x12, [sp, #16]
  407ccc:	str	x11, [sp, #32]
  407cd0:	stp	w10, w9, [sp, #40]
  407cd4:	str	x4, [sp, #48]
  407cd8:	str	q0, [sp, #128]
  407cdc:	str	q1, [sp, #144]
  407ce0:	str	q2, [sp, #160]
  407ce4:	str	q3, [sp, #176]
  407ce8:	str	q4, [sp, #192]
  407cec:	str	q5, [sp, #208]
  407cf0:	str	q6, [sp, #224]
  407cf4:	str	q7, [sp, #240]
  407cf8:	stp	x4, x5, [sp, #256]
  407cfc:	stp	x6, x7, [sp, #272]
  407d00:	cbz	x4, 407df0 <ferror@plt+0x6150>
  407d04:	str	x5, [sp, #56]
  407d08:	cbz	x5, 407de8 <ferror@plt+0x6148>
  407d0c:	str	x6, [sp, #64]
  407d10:	mov	x5, #0x2                   	// #2
  407d14:	cbz	x6, 407d88 <ferror@plt+0x60e8>
  407d18:	str	x7, [sp, #72]
  407d1c:	mov	x5, #0x3                   	// #3
  407d20:	cbz	x7, 407d88 <ferror@plt+0x60e8>
  407d24:	ldr	x4, [sp, #288]
  407d28:	str	x4, [sp, #80]
  407d2c:	mov	x5, #0x4                   	// #4
  407d30:	cbz	x4, 407d88 <ferror@plt+0x60e8>
  407d34:	ldr	x5, [sp, #296]
  407d38:	str	x5, [sp, #88]
  407d3c:	add	x4, sp, #0x130
  407d40:	cbz	x5, 407d98 <ferror@plt+0x60f8>
  407d44:	ldr	x5, [x4]
  407d48:	str	x5, [sp, #96]
  407d4c:	add	x4, x4, #0x8
  407d50:	cbz	x5, 407dac <ferror@plt+0x610c>
  407d54:	ldr	x5, [x4]
  407d58:	str	x5, [sp, #104]
  407d5c:	add	x4, x4, #0x8
  407d60:	cbz	x5, 407dc0 <ferror@plt+0x6120>
  407d64:	ldr	x5, [x4]
  407d68:	str	x5, [sp, #112]
  407d6c:	add	x4, x4, #0x8
  407d70:	cbz	x5, 407dd4 <ferror@plt+0x6134>
  407d74:	ldr	x4, [x4]
  407d78:	str	x4, [sp, #120]
  407d7c:	cmp	x4, #0x0
  407d80:	cset	x5, ne  // ne = any
  407d84:	add	x5, x5, #0x9
  407d88:	add	x4, sp, #0x30
  407d8c:	bl	407630 <ferror@plt+0x5990>
  407d90:	ldp	x29, x30, [sp], #288
  407d94:	ret
  407d98:	add	x4, sp, #0x30
  407d9c:	mov	x5, #0x5                   	// #5
  407da0:	bl	407630 <ferror@plt+0x5990>
  407da4:	ldp	x29, x30, [sp], #288
  407da8:	ret
  407dac:	add	x4, sp, #0x30
  407db0:	mov	x5, #0x6                   	// #6
  407db4:	bl	407630 <ferror@plt+0x5990>
  407db8:	ldp	x29, x30, [sp], #288
  407dbc:	ret
  407dc0:	add	x4, sp, #0x30
  407dc4:	mov	x5, #0x7                   	// #7
  407dc8:	bl	407630 <ferror@plt+0x5990>
  407dcc:	ldp	x29, x30, [sp], #288
  407dd0:	ret
  407dd4:	add	x4, sp, #0x30
  407dd8:	mov	x5, #0x8                   	// #8
  407ddc:	bl	407630 <ferror@plt+0x5990>
  407de0:	ldp	x29, x30, [sp], #288
  407de4:	ret
  407de8:	mov	x5, #0x1                   	// #1
  407dec:	b	407d88 <ferror@plt+0x60e8>
  407df0:	mov	x5, #0x0                   	// #0
  407df4:	b	407d88 <ferror@plt+0x60e8>
  407df8:	stp	x29, x30, [sp, #-16]!
  407dfc:	mov	w2, #0x5                   	// #5
  407e00:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407e04:	mov	x29, sp
  407e08:	add	x1, x1, #0xb28
  407e0c:	mov	x0, #0x0                   	// #0
  407e10:	bl	401c00 <dcgettext@plt>
  407e14:	mov	x1, x0
  407e18:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  407e1c:	mov	w0, #0x1                   	// #1
  407e20:	add	x2, x2, #0xb40
  407e24:	bl	401a20 <__printf_chk@plt>
  407e28:	mov	w2, #0x5                   	// #5
  407e2c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407e30:	mov	x0, #0x0                   	// #0
  407e34:	add	x1, x1, #0xb58
  407e38:	bl	401c00 <dcgettext@plt>
  407e3c:	mov	x1, x0
  407e40:	adrp	x3, 408000 <ferror@plt+0x6360>
  407e44:	add	x3, x3, #0xf78
  407e48:	adrp	x2, 408000 <ferror@plt+0x6360>
  407e4c:	mov	w0, #0x1                   	// #1
  407e50:	add	x2, x2, #0xfa0
  407e54:	bl	401a20 <__printf_chk@plt>
  407e58:	mov	w2, #0x5                   	// #5
  407e5c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  407e60:	mov	x0, #0x0                   	// #0
  407e64:	add	x1, x1, #0xb70
  407e68:	bl	401c00 <dcgettext@plt>
  407e6c:	ldp	x29, x30, [sp], #16
  407e70:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0x13788>
  407e74:	ldr	x1, [x1, #688]
  407e78:	b	401c10 <fputs_unlocked@plt>
  407e7c:	nop
  407e80:	stp	x29, x30, [sp, #-32]!
  407e84:	umulh	x2, x0, x1
  407e88:	mov	x29, sp
  407e8c:	str	x19, [sp, #16]
  407e90:	mul	x19, x0, x1
  407e94:	cmp	x2, #0x0
  407e98:	cset	x0, ne  // ne = any
  407e9c:	tbnz	x19, #63, 407ec4 <ferror@plt+0x6224>
  407ea0:	cbnz	x0, 407ec4 <ferror@plt+0x6224>
  407ea4:	mov	x0, x19
  407ea8:	bl	4019a0 <malloc@plt>
  407eac:	cmp	x0, #0x0
  407eb0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  407eb4:	b.ne	407ec4 <ferror@plt+0x6224>  // b.any
  407eb8:	ldr	x19, [sp, #16]
  407ebc:	ldp	x29, x30, [sp], #32
  407ec0:	ret
  407ec4:	bl	4081e0 <ferror@plt+0x6540>
  407ec8:	stp	x29, x30, [sp, #-32]!
  407ecc:	umulh	x4, x1, x2
  407ed0:	mov	x29, sp
  407ed4:	str	x19, [sp, #16]
  407ed8:	mul	x19, x1, x2
  407edc:	cmp	x4, #0x0
  407ee0:	cset	x1, ne  // ne = any
  407ee4:	tbnz	x19, #63, 407f2c <ferror@plt+0x628c>
  407ee8:	cbnz	x1, 407f2c <ferror@plt+0x628c>
  407eec:	cmp	x19, #0x0
  407ef0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  407ef4:	b.ne	407f18 <ferror@plt+0x6278>  // b.any
  407ef8:	mov	x1, x19
  407efc:	bl	401a50 <realloc@plt>
  407f00:	cmp	x0, #0x0
  407f04:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  407f08:	b.ne	407f2c <ferror@plt+0x628c>  // b.any
  407f0c:	ldr	x19, [sp, #16]
  407f10:	ldp	x29, x30, [sp], #32
  407f14:	ret
  407f18:	bl	401b70 <free@plt>
  407f1c:	mov	x0, #0x0                   	// #0
  407f20:	ldr	x19, [sp, #16]
  407f24:	ldp	x29, x30, [sp], #32
  407f28:	ret
  407f2c:	bl	4081e0 <ferror@plt+0x6540>
  407f30:	stp	x29, x30, [sp, #-32]!
  407f34:	mov	x4, x0
  407f38:	mov	x29, sp
  407f3c:	ldr	x3, [x1]
  407f40:	str	x19, [sp, #16]
  407f44:	cbz	x0, 407f94 <ferror@plt+0x62f4>
  407f48:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  407f4c:	movk	x5, #0x5554
  407f50:	udiv	x5, x5, x2
  407f54:	cmp	x5, x3
  407f58:	b.ls	407fe0 <ferror@plt+0x6340>  // b.plast
  407f5c:	add	x19, x3, #0x1
  407f60:	add	x19, x19, x3, lsr #1
  407f64:	str	x19, [x1]
  407f68:	mul	x19, x2, x19
  407f6c:	cbz	x19, 407fcc <ferror@plt+0x632c>
  407f70:	mov	x0, x4
  407f74:	mov	x1, x19
  407f78:	bl	401a50 <realloc@plt>
  407f7c:	cmp	x0, #0x0
  407f80:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  407f84:	b.ne	407fe0 <ferror@plt+0x6340>  // b.any
  407f88:	ldr	x19, [sp, #16]
  407f8c:	ldp	x29, x30, [sp], #32
  407f90:	ret
  407f94:	cbz	x3, 407fb8 <ferror@plt+0x6318>
  407f98:	umulh	x0, x3, x2
  407f9c:	mul	x19, x3, x2
  407fa0:	cmp	x0, #0x0
  407fa4:	cset	x0, ne  // ne = any
  407fa8:	tbnz	x19, #63, 407fe0 <ferror@plt+0x6340>
  407fac:	cbnz	x0, 407fe0 <ferror@plt+0x6340>
  407fb0:	str	x3, [x1]
  407fb4:	b	407f70 <ferror@plt+0x62d0>
  407fb8:	mov	x3, #0x80                  	// #128
  407fbc:	cmp	x2, x3
  407fc0:	udiv	x3, x3, x2
  407fc4:	cinc	x3, x3, hi  // hi = pmore
  407fc8:	b	407f98 <ferror@plt+0x62f8>
  407fcc:	bl	401b70 <free@plt>
  407fd0:	mov	x0, #0x0                   	// #0
  407fd4:	ldr	x19, [sp, #16]
  407fd8:	ldp	x29, x30, [sp], #32
  407fdc:	ret
  407fe0:	bl	4081e0 <ferror@plt+0x6540>
  407fe4:	nop
  407fe8:	stp	x29, x30, [sp, #-32]!
  407fec:	mov	x29, sp
  407ff0:	str	x19, [sp, #16]
  407ff4:	mov	x19, x0
  407ff8:	bl	4019a0 <malloc@plt>
  407ffc:	cmp	x0, #0x0
  408000:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408004:	b.ne	408014 <ferror@plt+0x6374>  // b.any
  408008:	ldr	x19, [sp, #16]
  40800c:	ldp	x29, x30, [sp], #32
  408010:	ret
  408014:	bl	4081e0 <ferror@plt+0x6540>
  408018:	stp	x29, x30, [sp, #-32]!
  40801c:	mov	x29, sp
  408020:	str	x19, [sp, #16]
  408024:	mov	x19, x0
  408028:	bl	4019a0 <malloc@plt>
  40802c:	cmp	x0, #0x0
  408030:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408034:	b.ne	408044 <ferror@plt+0x63a4>  // b.any
  408038:	ldr	x19, [sp, #16]
  40803c:	ldp	x29, x30, [sp], #32
  408040:	ret
  408044:	bl	4081e0 <ferror@plt+0x6540>
  408048:	stp	x29, x30, [sp, #-32]!
  40804c:	cmp	x1, #0x0
  408050:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  408054:	mov	x29, sp
  408058:	b.ne	408080 <ferror@plt+0x63e0>  // b.any
  40805c:	str	x19, [sp, #16]
  408060:	mov	x19, x1
  408064:	bl	401a50 <realloc@plt>
  408068:	cmp	x0, #0x0
  40806c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408070:	b.ne	408090 <ferror@plt+0x63f0>  // b.any
  408074:	ldr	x19, [sp, #16]
  408078:	ldp	x29, x30, [sp], #32
  40807c:	ret
  408080:	bl	401b70 <free@plt>
  408084:	mov	x0, #0x0                   	// #0
  408088:	ldp	x29, x30, [sp], #32
  40808c:	ret
  408090:	bl	4081e0 <ferror@plt+0x6540>
  408094:	nop
  408098:	stp	x29, x30, [sp, #-16]!
  40809c:	mov	x2, x1
  4080a0:	mov	x29, sp
  4080a4:	ldr	x1, [x1]
  4080a8:	cbz	x0, 4080d8 <ferror@plt+0x6438>
  4080ac:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4080b0:	movk	x3, #0x5553
  4080b4:	cmp	x1, x3
  4080b8:	b.hi	4080ec <ferror@plt+0x644c>  // b.pmore
  4080bc:	add	x3, x1, #0x1
  4080c0:	add	x1, x3, x1, lsr #1
  4080c4:	str	x1, [x2]
  4080c8:	bl	401a50 <realloc@plt>
  4080cc:	cbz	x0, 4080ec <ferror@plt+0x644c>
  4080d0:	ldp	x29, x30, [sp], #16
  4080d4:	ret
  4080d8:	cmp	x1, #0x0
  4080dc:	cbnz	x1, 4080e8 <ferror@plt+0x6448>
  4080e0:	mov	x1, #0x80                  	// #128
  4080e4:	b	4080c4 <ferror@plt+0x6424>
  4080e8:	b.ge	4080c4 <ferror@plt+0x6424>  // b.tcont
  4080ec:	bl	4081e0 <ferror@plt+0x6540>
  4080f0:	stp	x29, x30, [sp, #-32]!
  4080f4:	mov	x1, #0x1                   	// #1
  4080f8:	mov	x29, sp
  4080fc:	str	x19, [sp, #16]
  408100:	mov	x19, x0
  408104:	bl	401a40 <calloc@plt>
  408108:	cmp	x0, #0x0
  40810c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408110:	b.ne	408120 <ferror@plt+0x6480>  // b.any
  408114:	ldr	x19, [sp, #16]
  408118:	ldp	x29, x30, [sp], #32
  40811c:	ret
  408120:	bl	4081e0 <ferror@plt+0x6540>
  408124:	nop
  408128:	umulh	x4, x0, x1
  40812c:	stp	x29, x30, [sp, #-16]!
  408130:	mul	x2, x0, x1
  408134:	cmp	x4, #0x0
  408138:	mov	x29, sp
  40813c:	cset	x3, ne  // ne = any
  408140:	tbnz	x2, #63, 408158 <ferror@plt+0x64b8>
  408144:	cbnz	x3, 408158 <ferror@plt+0x64b8>
  408148:	bl	401a40 <calloc@plt>
  40814c:	cbz	x0, 408158 <ferror@plt+0x64b8>
  408150:	ldp	x29, x30, [sp], #16
  408154:	ret
  408158:	bl	4081e0 <ferror@plt+0x6540>
  40815c:	nop
  408160:	stp	x29, x30, [sp, #-32]!
  408164:	mov	x29, sp
  408168:	stp	x19, x20, [sp, #16]
  40816c:	mov	x19, x1
  408170:	mov	x20, x0
  408174:	mov	x0, x1
  408178:	bl	4019a0 <malloc@plt>
  40817c:	cmp	x0, #0x0
  408180:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  408184:	b.ne	40819c <ferror@plt+0x64fc>  // b.any
  408188:	mov	x2, x19
  40818c:	mov	x1, x20
  408190:	ldp	x19, x20, [sp, #16]
  408194:	ldp	x29, x30, [sp], #32
  408198:	b	4018a0 <memcpy@plt>
  40819c:	bl	4081e0 <ferror@plt+0x6540>
  4081a0:	stp	x29, x30, [sp, #-32]!
  4081a4:	mov	x29, sp
  4081a8:	stp	x19, x20, [sp, #16]
  4081ac:	mov	x20, x0
  4081b0:	bl	4018c0 <strlen@plt>
  4081b4:	add	x19, x0, #0x1
  4081b8:	mov	x0, x19
  4081bc:	bl	4019a0 <malloc@plt>
  4081c0:	cbz	x0, 4081d8 <ferror@plt+0x6538>
  4081c4:	mov	x2, x19
  4081c8:	mov	x1, x20
  4081cc:	ldp	x19, x20, [sp, #16]
  4081d0:	ldp	x29, x30, [sp], #32
  4081d4:	b	4018a0 <memcpy@plt>
  4081d8:	bl	4081e0 <ferror@plt+0x6540>
  4081dc:	nop
  4081e0:	stp	x29, x30, [sp, #-32]!
  4081e4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  4081e8:	mov	w2, #0x5                   	// #5
  4081ec:	mov	x29, sp
  4081f0:	str	x19, [sp, #16]
  4081f4:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  4081f8:	ldr	w19, [x0, #552]
  4081fc:	add	x1, x1, #0xbf0
  408200:	mov	x0, #0x0                   	// #0
  408204:	bl	401c00 <dcgettext@plt>
  408208:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  40820c:	mov	x3, x0
  408210:	add	x2, x2, #0x200
  408214:	mov	w0, w19
  408218:	mov	w1, #0x0                   	// #0
  40821c:	bl	4018e0 <error@plt>
  408220:	bl	401ab0 <abort@plt>
  408224:	nop
  408228:	stp	x29, x30, [sp, #-32]!
  40822c:	mov	x29, sp
  408230:	stp	x19, x20, [sp, #16]
  408234:	mov	x19, x0
  408238:	bl	401950 <fileno@plt>
  40823c:	tbnz	w0, #31, 408298 <ferror@plt+0x65f8>
  408240:	mov	x0, x19
  408244:	bl	401c20 <__freading@plt>
  408248:	cbnz	w0, 40827c <ferror@plt+0x65dc>
  40824c:	mov	x0, x19
  408250:	bl	4082b8 <ferror@plt+0x6618>
  408254:	cbz	w0, 408298 <ferror@plt+0x65f8>
  408258:	bl	401c50 <__errno_location@plt>
  40825c:	mov	x20, x0
  408260:	mov	x0, x19
  408264:	ldr	w19, [x20]
  408268:	bl	401960 <fclose@plt>
  40826c:	cbnz	w19, 4082a8 <ferror@plt+0x6608>
  408270:	ldp	x19, x20, [sp, #16]
  408274:	ldp	x29, x30, [sp], #32
  408278:	ret
  40827c:	mov	x0, x19
  408280:	bl	401950 <fileno@plt>
  408284:	mov	w2, #0x1                   	// #1
  408288:	mov	x1, #0x0                   	// #0
  40828c:	bl	401930 <lseek@plt>
  408290:	cmn	x0, #0x1
  408294:	b.ne	40824c <ferror@plt+0x65ac>  // b.any
  408298:	mov	x0, x19
  40829c:	ldp	x19, x20, [sp, #16]
  4082a0:	ldp	x29, x30, [sp], #32
  4082a4:	b	401960 <fclose@plt>
  4082a8:	mov	w0, #0xffffffff            	// #-1
  4082ac:	str	w19, [x20]
  4082b0:	b	408270 <ferror@plt+0x65d0>
  4082b4:	nop
  4082b8:	stp	x29, x30, [sp, #-32]!
  4082bc:	mov	x29, sp
  4082c0:	str	x19, [sp, #16]
  4082c4:	mov	x19, x0
  4082c8:	cbz	x0, 4082dc <ferror@plt+0x663c>
  4082cc:	bl	401c20 <__freading@plt>
  4082d0:	cbz	w0, 4082dc <ferror@plt+0x663c>
  4082d4:	ldr	w0, [x19]
  4082d8:	tbnz	w0, #8, 4082ec <ferror@plt+0x664c>
  4082dc:	mov	x0, x19
  4082e0:	ldr	x19, [sp, #16]
  4082e4:	ldp	x29, x30, [sp], #32
  4082e8:	b	401bb0 <fflush@plt>
  4082ec:	mov	x0, x19
  4082f0:	mov	w2, #0x1                   	// #1
  4082f4:	mov	x1, #0x0                   	// #0
  4082f8:	bl	408310 <ferror@plt+0x6670>
  4082fc:	mov	x0, x19
  408300:	ldr	x19, [sp, #16]
  408304:	ldp	x29, x30, [sp], #32
  408308:	b	401bb0 <fflush@plt>
  40830c:	nop
  408310:	stp	x29, x30, [sp, #-48]!
  408314:	mov	x29, sp
  408318:	ldp	x3, x4, [x0, #8]
  40831c:	str	x19, [sp, #16]
  408320:	mov	x19, x0
  408324:	cmp	x4, x3
  408328:	b.eq	40833c <ferror@plt+0x669c>  // b.none
  40832c:	mov	x0, x19
  408330:	ldr	x19, [sp, #16]
  408334:	ldp	x29, x30, [sp], #48
  408338:	b	401b60 <fseeko@plt>
  40833c:	ldp	x3, x4, [x0, #32]
  408340:	cmp	x4, x3
  408344:	b.ne	40832c <ferror@plt+0x668c>  // b.any
  408348:	ldr	x3, [x0, #72]
  40834c:	cbnz	x3, 40832c <ferror@plt+0x668c>
  408350:	str	x1, [sp, #32]
  408354:	str	w2, [sp, #44]
  408358:	bl	401950 <fileno@plt>
  40835c:	ldr	w2, [sp, #44]
  408360:	ldr	x1, [sp, #32]
  408364:	bl	401930 <lseek@plt>
  408368:	mov	x1, x0
  40836c:	cmn	x0, #0x1
  408370:	b.eq	408388 <ferror@plt+0x66e8>  // b.none
  408374:	ldr	w2, [x19]
  408378:	mov	w0, #0x0                   	// #0
  40837c:	str	x1, [x19, #144]
  408380:	and	w1, w2, #0xffffffef
  408384:	str	w1, [x19]
  408388:	ldr	x19, [sp, #16]
  40838c:	ldp	x29, x30, [sp], #48
  408390:	ret
  408394:	nop
  408398:	stp	x29, x30, [sp, #-64]!
  40839c:	cmp	x0, #0x0
  4083a0:	add	x4, sp, #0x3c
  4083a4:	mov	x29, sp
  4083a8:	stp	x19, x20, [sp, #16]
  4083ac:	csel	x19, x4, x0, eq  // eq = none
  4083b0:	mov	x20, x2
  4083b4:	mov	x0, x19
  4083b8:	str	x21, [sp, #32]
  4083bc:	mov	x21, x1
  4083c0:	bl	401890 <mbrtowc@plt>
  4083c4:	cmp	x20, #0x0
  4083c8:	mov	x20, x0
  4083cc:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4083d0:	b.hi	4083e8 <ferror@plt+0x6748>  // b.pmore
  4083d4:	mov	x0, x20
  4083d8:	ldp	x19, x20, [sp, #16]
  4083dc:	ldr	x21, [sp, #32]
  4083e0:	ldp	x29, x30, [sp], #64
  4083e4:	ret
  4083e8:	mov	w0, #0x0                   	// #0
  4083ec:	bl	408910 <_obstack_memory_used@@Base+0x98>
  4083f0:	tst	w0, #0xff
  4083f4:	b.ne	4083d4 <ferror@plt+0x6734>  // b.any
  4083f8:	ldrb	w0, [x21]
  4083fc:	mov	x20, #0x1                   	// #1
  408400:	str	w0, [x19]
  408404:	mov	x0, x20
  408408:	ldp	x19, x20, [sp, #16]
  40840c:	ldr	x21, [sp, #32]
  408410:	ldp	x29, x30, [sp], #64
  408414:	ret
  408418:	stp	x29, x30, [sp, #-32]!
  40841c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  408420:	mov	w2, #0x5                   	// #5
  408424:	mov	x29, sp
  408428:	str	x19, [sp, #16]
  40842c:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  408430:	ldr	x19, [x0, #664]
  408434:	add	x1, x1, #0xbf0
  408438:	mov	x0, #0x0                   	// #0
  40843c:	bl	401c00 <dcgettext@plt>
  408440:	adrp	x2, 409000 <_obstack_memory_used@@Base+0x788>
  408444:	mov	x3, x0
  408448:	add	x2, x2, #0x8b0
  40844c:	mov	x0, x19
  408450:	mov	w1, #0x1                   	// #1
  408454:	bl	401b30 <__fprintf_chk@plt>
  408458:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  40845c:	ldr	w0, [x0, #552]
  408460:	bl	4018d0 <exit@plt>
  408464:	nop

0000000000408468 <_obstack_begin@@Base>:
  408468:	stp	x29, x30, [sp, #-48]!
  40846c:	mov	x29, sp
  408470:	stp	x19, x20, [sp, #16]
  408474:	mov	x19, x0
  408478:	ldrb	w0, [x0, #80]
  40847c:	str	x21, [sp, #32]
  408480:	and	w0, w0, #0xfffffffe
  408484:	stp	x3, x4, [x19, #56]
  408488:	strb	w0, [x19, #80]
  40848c:	cbz	x2, 408510 <_obstack_begin@@Base+0xa8>
  408490:	ldrb	w0, [x19, #80]
  408494:	cmp	x1, #0x0
  408498:	sub	x21, x2, #0x1
  40849c:	mov	x20, x2
  4084a0:	mov	x2, #0xfe0                 	// #4064
  4084a4:	csel	x1, x1, x2, ne  // ne = any
  4084a8:	str	x1, [x19]
  4084ac:	str	x21, [x19, #48]
  4084b0:	tbz	w0, #0, 408534 <_obstack_begin@@Base+0xcc>
  4084b4:	ldr	x0, [x19, #72]
  4084b8:	blr	x3
  4084bc:	mov	x1, x0
  4084c0:	str	x1, [x19, #8]
  4084c4:	cbz	x1, 408544 <_obstack_begin@@Base+0xdc>
  4084c8:	add	x2, x1, #0x10
  4084cc:	neg	x20, x20
  4084d0:	ldr	x0, [x19]
  4084d4:	add	x2, x2, x21
  4084d8:	and	x20, x2, x20
  4084dc:	ldr	x21, [sp, #32]
  4084e0:	stp	x20, x20, [x19, #16]
  4084e4:	add	x2, x1, x0
  4084e8:	str	x2, [x1]
  4084ec:	mov	w0, #0x1                   	// #1
  4084f0:	str	x2, [x19, #32]
  4084f4:	ldrb	w2, [x19, #80]
  4084f8:	str	xzr, [x1, #8]
  4084fc:	and	w1, w2, #0xfffffff9
  408500:	strb	w1, [x19, #80]
  408504:	ldp	x19, x20, [sp, #16]
  408508:	ldp	x29, x30, [sp], #48
  40850c:	ret
  408510:	ldrb	w0, [x19, #80]
  408514:	cmp	x1, #0x0
  408518:	mov	x21, #0xf                   	// #15
  40851c:	mov	x2, #0xfe0                 	// #4064
  408520:	csel	x1, x1, x2, ne  // ne = any
  408524:	str	x1, [x19]
  408528:	str	x21, [x19, #48]
  40852c:	mov	x20, #0x10                  	// #16
  408530:	tbnz	w0, #0, 4084b4 <_obstack_begin@@Base+0x4c>
  408534:	mov	x0, x1
  408538:	blr	x3
  40853c:	mov	x1, x0
  408540:	b	4084c0 <_obstack_begin@@Base+0x58>
  408544:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  408548:	ldr	x0, [x0, #648]
  40854c:	blr	x0

0000000000408550 <_obstack_begin_1@@Base>:
  408550:	stp	x29, x30, [sp, #-48]!
  408554:	mov	x29, sp
  408558:	stp	x19, x20, [sp, #16]
  40855c:	mov	x19, x0
  408560:	mov	x0, x5
  408564:	ldrb	w5, [x19, #80]
  408568:	str	x21, [sp, #32]
  40856c:	orr	w5, w5, #0x1
  408570:	stp	x3, x4, [x19, #56]
  408574:	str	x0, [x19, #72]
  408578:	strb	w5, [x19, #80]
  40857c:	cbz	x2, 4085fc <_obstack_begin_1@@Base+0xac>
  408580:	sub	x21, x2, #0x1
  408584:	mov	x20, x2
  408588:	ldrb	w2, [x19, #80]
  40858c:	cmp	x1, #0x0
  408590:	mov	x4, #0xfe0                 	// #4064
  408594:	csel	x1, x1, x4, ne  // ne = any
  408598:	str	x1, [x19]
  40859c:	str	x21, [x19, #48]
  4085a0:	tbz	w2, #0, 408620 <_obstack_begin_1@@Base+0xd0>
  4085a4:	blr	x3
  4085a8:	mov	x1, x0
  4085ac:	str	x1, [x19, #8]
  4085b0:	cbz	x1, 408630 <_obstack_begin_1@@Base+0xe0>
  4085b4:	add	x2, x1, #0x10
  4085b8:	neg	x20, x20
  4085bc:	ldr	x0, [x19]
  4085c0:	add	x2, x2, x21
  4085c4:	and	x20, x2, x20
  4085c8:	ldr	x21, [sp, #32]
  4085cc:	stp	x20, x20, [x19, #16]
  4085d0:	add	x2, x1, x0
  4085d4:	str	x2, [x1]
  4085d8:	mov	w0, #0x1                   	// #1
  4085dc:	str	x2, [x19, #32]
  4085e0:	ldrb	w2, [x19, #80]
  4085e4:	str	xzr, [x1, #8]
  4085e8:	and	w1, w2, #0xfffffff9
  4085ec:	strb	w1, [x19, #80]
  4085f0:	ldp	x19, x20, [sp, #16]
  4085f4:	ldp	x29, x30, [sp], #48
  4085f8:	ret
  4085fc:	ldrb	w2, [x19, #80]
  408600:	cmp	x1, #0x0
  408604:	mov	x21, #0xf                   	// #15
  408608:	mov	x4, #0xfe0                 	// #4064
  40860c:	csel	x1, x1, x4, ne  // ne = any
  408610:	str	x1, [x19]
  408614:	str	x21, [x19, #48]
  408618:	mov	x20, #0x10                  	// #16
  40861c:	tbnz	w2, #0, 4085a4 <_obstack_begin_1@@Base+0x54>
  408620:	mov	x0, x1
  408624:	blr	x3
  408628:	mov	x1, x0
  40862c:	b	4085ac <_obstack_begin_1@@Base+0x5c>
  408630:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  408634:	ldr	x0, [x0, #648]
  408638:	blr	x0
  40863c:	nop

0000000000408640 <_obstack_newchunk@@Base>:
  408640:	stp	x29, x30, [sp, #-64]!
  408644:	mov	x29, sp
  408648:	stp	x21, x22, [sp, #32]
  40864c:	ldp	x2, x21, [x0, #16]
  408650:	stp	x19, x20, [sp, #16]
  408654:	mov	x19, x0
  408658:	ldr	x3, [x0, #48]
  40865c:	ldr	x0, [x0]
  408660:	sub	x21, x21, x2
  408664:	adds	x1, x21, x1
  408668:	str	x23, [sp, #48]
  40866c:	cset	x2, cs  // cs = hs, nlast
  408670:	lsr	x20, x21, #3
  408674:	adds	x3, x3, x1
  408678:	add	x20, x20, #0x64
  40867c:	cset	x1, cs  // cs = hs, nlast
  408680:	cmp	x0, x3
  408684:	csel	x0, x0, x3, cs  // cs = hs, nlast
  408688:	add	x3, x20, x3
  40868c:	cmp	x0, x3
  408690:	csel	x20, x0, x3, cs  // cs = hs, nlast
  408694:	cmp	x2, #0x0
  408698:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  40869c:	ldr	x23, [x19, #8]
  4086a0:	b.ne	408780 <_obstack_newchunk@@Base+0x140>  // b.any
  4086a4:	ldrb	w0, [x19, #80]
  4086a8:	ldr	x2, [x19, #56]
  4086ac:	tbz	w0, #0, 408744 <_obstack_newchunk@@Base+0x104>
  4086b0:	ldr	x0, [x19, #72]
  4086b4:	mov	x1, x20
  4086b8:	blr	x2
  4086bc:	mov	x22, x0
  4086c0:	cbz	x22, 408780 <_obstack_newchunk@@Base+0x140>
  4086c4:	mov	x3, x22
  4086c8:	str	x22, [x19, #8]
  4086cc:	ldr	x1, [x19, #16]
  4086d0:	add	x20, x22, x20
  4086d4:	ldr	x0, [x19, #48]
  4086d8:	str	x23, [x22, #8]
  4086dc:	str	x20, [x19, #32]
  4086e0:	mov	x2, x21
  4086e4:	str	x20, [x3], #16
  4086e8:	add	x20, x3, x0
  4086ec:	bic	x20, x20, x0
  4086f0:	mov	x0, x20
  4086f4:	bl	4018a0 <memcpy@plt>
  4086f8:	ldrb	w2, [x19, #80]
  4086fc:	tbnz	w2, #1, 40871c <_obstack_newchunk@@Base+0xdc>
  408700:	ldr	x1, [x19, #48]
  408704:	add	x0, x23, #0x10
  408708:	ldr	x3, [x19, #16]
  40870c:	add	x0, x0, x1
  408710:	bic	x0, x0, x1
  408714:	cmp	x3, x0
  408718:	b.eq	408754 <_obstack_newchunk@@Base+0x114>  // b.none
  40871c:	ldrb	w0, [x19, #80]
  408720:	add	x21, x20, x21
  408724:	ldr	x23, [sp, #48]
  408728:	and	w0, w0, #0xfffffffd
  40872c:	stp	x20, x21, [x19, #16]
  408730:	strb	w0, [x19, #80]
  408734:	ldp	x19, x20, [sp, #16]
  408738:	ldp	x21, x22, [sp, #32]
  40873c:	ldp	x29, x30, [sp], #64
  408740:	ret
  408744:	mov	x0, x20
  408748:	blr	x2
  40874c:	mov	x22, x0
  408750:	b	4086c0 <_obstack_newchunk@@Base+0x80>
  408754:	ldr	x0, [x23, #8]
  408758:	ldr	x3, [x19, #64]
  40875c:	str	x0, [x22, #8]
  408760:	tbz	w2, #0, 408774 <_obstack_newchunk@@Base+0x134>
  408764:	ldr	x0, [x19, #72]
  408768:	mov	x1, x23
  40876c:	blr	x3
  408770:	b	40871c <_obstack_newchunk@@Base+0xdc>
  408774:	mov	x0, x23
  408778:	blr	x3
  40877c:	b	40871c <_obstack_newchunk@@Base+0xdc>
  408780:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x13788>
  408784:	ldr	x0, [x0, #648]
  408788:	blr	x0
  40878c:	nop

0000000000408790 <_obstack_allocated_p@@Base>:
  408790:	ldr	x0, [x0, #8]
  408794:	cbz	x0, 4087b8 <_obstack_allocated_p@@Base+0x28>
  408798:	cmp	x1, x0
  40879c:	b.ls	4087ac <_obstack_allocated_p@@Base+0x1c>  // b.plast
  4087a0:	ldr	x2, [x0]
  4087a4:	cmp	x2, x1
  4087a8:	b.cs	4087bc <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  4087ac:	ldr	x0, [x0, #8]
  4087b0:	cbnz	x0, 408798 <_obstack_allocated_p@@Base+0x8>
  4087b4:	mov	w0, #0x0                   	// #0
  4087b8:	ret
  4087bc:	mov	w0, #0x1                   	// #1
  4087c0:	ret
  4087c4:	nop

00000000004087c8 <_obstack_free@@Base>:
  4087c8:	stp	x29, x30, [sp, #-48]!
  4087cc:	mov	x29, sp
  4087d0:	str	x21, [sp, #32]
  4087d4:	mov	x21, x1
  4087d8:	ldr	x1, [x0, #8]
  4087dc:	cbz	x1, 408848 <_obstack_free@@Base+0x80>
  4087e0:	stp	x19, x20, [sp, #16]
  4087e4:	mov	x19, x0
  4087e8:	cmp	x1, x21
  4087ec:	b.cs	4087fc <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  4087f0:	ldr	x0, [x1]
  4087f4:	cmp	x0, x21
  4087f8:	b.cs	408858 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  4087fc:	ldrb	w0, [x19, #80]
  408800:	ldr	x20, [x1, #8]
  408804:	ldr	x2, [x19, #64]
  408808:	tbz	w0, #0, 40882c <_obstack_free@@Base+0x64>
  40880c:	ldr	x0, [x19, #72]
  408810:	blr	x2
  408814:	ldrb	w0, [x19, #80]
  408818:	orr	w0, w0, #0x2
  40881c:	strb	w0, [x19, #80]
  408820:	cbz	x20, 408844 <_obstack_free@@Base+0x7c>
  408824:	mov	x1, x20
  408828:	b	4087e8 <_obstack_free@@Base+0x20>
  40882c:	mov	x0, x1
  408830:	blr	x2
  408834:	ldrb	w0, [x19, #80]
  408838:	orr	w0, w0, #0x2
  40883c:	strb	w0, [x19, #80]
  408840:	cbnz	x20, 408824 <_obstack_free@@Base+0x5c>
  408844:	ldp	x19, x20, [sp, #16]
  408848:	cbnz	x21, 408870 <_obstack_free@@Base+0xa8>
  40884c:	ldr	x21, [sp, #32]
  408850:	ldp	x29, x30, [sp], #48
  408854:	ret
  408858:	stp	x1, x21, [x19, #8]
  40885c:	stp	x21, x0, [x19, #24]
  408860:	ldp	x19, x20, [sp, #16]
  408864:	ldr	x21, [sp, #32]
  408868:	ldp	x29, x30, [sp], #48
  40886c:	ret
  408870:	stp	x19, x20, [sp, #16]
  408874:	bl	401ab0 <abort@plt>

0000000000408878 <_obstack_memory_used@@Base>:
  408878:	ldr	x1, [x0, #8]
  40887c:	mov	x0, #0x0                   	// #0
  408880:	cbz	x1, 40889c <_obstack_memory_used@@Base+0x24>
  408884:	nop
  408888:	ldr	x2, [x1]
  40888c:	sub	x2, x2, x1
  408890:	ldr	x1, [x1, #8]
  408894:	add	x0, x0, x2
  408898:	cbnz	x1, 408888 <_obstack_memory_used@@Base+0x10>
  40889c:	ret
  4088a0:	stp	x29, x30, [sp, #-32]!
  4088a4:	mov	x29, sp
  4088a8:	stp	x19, x20, [sp, #16]
  4088ac:	mov	x19, x0
  4088b0:	bl	401940 <__fpending@plt>
  4088b4:	mov	x20, x0
  4088b8:	mov	x0, x19
  4088bc:	ldr	w19, [x19]
  4088c0:	and	w19, w19, #0x20
  4088c4:	bl	408228 <ferror@plt+0x6588>
  4088c8:	cbnz	w19, 4088f0 <_obstack_memory_used@@Base+0x78>
  4088cc:	cbz	w0, 4088e4 <_obstack_memory_used@@Base+0x6c>
  4088d0:	cbnz	x20, 408908 <_obstack_memory_used@@Base+0x90>
  4088d4:	bl	401c50 <__errno_location@plt>
  4088d8:	ldr	w0, [x0]
  4088dc:	cmp	w0, #0x9
  4088e0:	csetm	w0, ne  // ne = any
  4088e4:	ldp	x19, x20, [sp, #16]
  4088e8:	ldp	x29, x30, [sp], #32
  4088ec:	ret
  4088f0:	cbnz	w0, 408908 <_obstack_memory_used@@Base+0x90>
  4088f4:	bl	401c50 <__errno_location@plt>
  4088f8:	mov	x1, x0
  4088fc:	mov	w0, #0xffffffff            	// #-1
  408900:	str	wzr, [x1]
  408904:	b	4088e4 <_obstack_memory_used@@Base+0x6c>
  408908:	mov	w0, #0xffffffff            	// #-1
  40890c:	b	4088e4 <_obstack_memory_used@@Base+0x6c>
  408910:	stp	x29, x30, [sp, #-16]!
  408914:	mov	x1, #0x0                   	// #0
  408918:	mov	x29, sp
  40891c:	bl	401c90 <setlocale@plt>
  408920:	mov	w1, #0x1                   	// #1
  408924:	cbz	x0, 408948 <_obstack_memory_used@@Base+0xd0>
  408928:	ldrb	w1, [x0]
  40892c:	cmp	w1, #0x43
  408930:	b.eq	408954 <_obstack_memory_used@@Base+0xdc>  // b.none
  408934:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  408938:	add	x1, x1, #0xc08
  40893c:	bl	401b40 <strcmp@plt>
  408940:	cmp	w0, #0x0
  408944:	cset	w1, ne  // ne = any
  408948:	mov	w0, w1
  40894c:	ldp	x29, x30, [sp], #16
  408950:	ret
  408954:	ldrb	w2, [x0, #1]
  408958:	mov	w1, #0x0                   	// #0
  40895c:	cbnz	w2, 408934 <_obstack_memory_used@@Base+0xbc>
  408960:	mov	w0, w1
  408964:	ldp	x29, x30, [sp], #16
  408968:	ret
  40896c:	nop
  408970:	stp	x29, x30, [sp, #-16]!
  408974:	mov	w0, #0xe                   	// #14
  408978:	mov	x29, sp
  40897c:	bl	401980 <nl_langinfo@plt>
  408980:	cbz	x0, 4089a0 <_obstack_memory_used@@Base+0x128>
  408984:	ldrb	w2, [x0]
  408988:	adrp	x1, 409000 <_obstack_memory_used@@Base+0x788>
  40898c:	add	x1, x1, #0xc10
  408990:	cmp	w2, #0x0
  408994:	csel	x0, x1, x0, eq  // eq = none
  408998:	ldp	x29, x30, [sp], #16
  40899c:	ret
  4089a0:	ldp	x29, x30, [sp], #16
  4089a4:	adrp	x0, 409000 <_obstack_memory_used@@Base+0x788>
  4089a8:	add	x0, x0, #0xc10
  4089ac:	ret
  4089b0:	stp	x29, x30, [sp, #-64]!
  4089b4:	mov	x29, sp
  4089b8:	stp	x19, x20, [sp, #16]
  4089bc:	adrp	x20, 41b000 <_obstack_memory_used@@Base+0x12788>
  4089c0:	add	x20, x20, #0xdf0
  4089c4:	stp	x21, x22, [sp, #32]
  4089c8:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x12788>
  4089cc:	add	x21, x21, #0xde8
  4089d0:	sub	x20, x20, x21
  4089d4:	mov	w22, w0
  4089d8:	stp	x23, x24, [sp, #48]
  4089dc:	mov	x23, x1
  4089e0:	mov	x24, x2
  4089e4:	bl	401858 <mbrtowc@plt-0x38>
  4089e8:	cmp	xzr, x20, asr #3
  4089ec:	b.eq	408a18 <_obstack_memory_used@@Base+0x1a0>  // b.none
  4089f0:	asr	x20, x20, #3
  4089f4:	mov	x19, #0x0                   	// #0
  4089f8:	ldr	x3, [x21, x19, lsl #3]
  4089fc:	mov	x2, x24
  408a00:	add	x19, x19, #0x1
  408a04:	mov	x1, x23
  408a08:	mov	w0, w22
  408a0c:	blr	x3
  408a10:	cmp	x20, x19
  408a14:	b.ne	4089f8 <_obstack_memory_used@@Base+0x180>  // b.any
  408a18:	ldp	x19, x20, [sp, #16]
  408a1c:	ldp	x21, x22, [sp, #32]
  408a20:	ldp	x23, x24, [sp, #48]
  408a24:	ldp	x29, x30, [sp], #64
  408a28:	ret
  408a2c:	nop
  408a30:	ret
  408a34:	nop
  408a38:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0x13788>
  408a3c:	mov	x1, #0x0                   	// #0
  408a40:	ldr	x2, [x2, #536]
  408a44:	b	401900 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000408a48 <.fini>:
  408a48:	stp	x29, x30, [sp, #-16]!
  408a4c:	mov	x29, sp
  408a50:	ldp	x29, x30, [sp], #16
  408a54:	ret
