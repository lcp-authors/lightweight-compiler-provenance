
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//head_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a58 <_init>:
 a58:	stp	x29, x30, [sp, #-16]!
 a5c:	mov	x29, sp
 a60:	bl	ba0 <call_weak_fn>
 a64:	ldp	x29, x30, [sp], #16
 a68:	ret

Disassembly of section .plt:

0000000000000a70 <.plt>:
 a70:	stp	x16, x30, [sp, #-16]!
 a74:	adrp	x16, 11000 <__FRAME_END__+0xfe20>
 a78:	ldr	x17, [x16, #4088]
 a7c:	add	x16, x16, #0xff8
 a80:	br	x17
 a84:	nop
 a88:	nop
 a8c:	nop

0000000000000a90 <builtin_error@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16]
 a98:	add	x16, x16, #0x0
 a9c:	br	x17

0000000000000aa0 <__cxa_finalize@plt>:
 aa0:	adrp	x16, 12000 <builtin_error>
 aa4:	ldr	x17, [x16, #8]
 aa8:	add	x16, x16, #0x8
 aac:	br	x17

0000000000000ab0 <putc@plt>:
 ab0:	adrp	x16, 12000 <builtin_error>
 ab4:	ldr	x17, [x16, #16]
 ab8:	add	x16, x16, #0x10
 abc:	br	x17

0000000000000ac0 <make_bare_word@plt>:
 ac0:	adrp	x16, 12000 <builtin_error>
 ac4:	ldr	x17, [x16, #24]
 ac8:	add	x16, x16, #0x18
 acc:	br	x17

0000000000000ad0 <fclose@plt>:
 ad0:	adrp	x16, 12000 <builtin_error>
 ad4:	ldr	x17, [x16, #32]
 ad8:	add	x16, x16, #0x20
 adc:	br	x17

0000000000000ae0 <fopen@plt>:
 ae0:	adrp	x16, 12000 <builtin_error>
 ae4:	ldr	x17, [x16, #40]
 ae8:	add	x16, x16, #0x28
 aec:	br	x17

0000000000000af0 <builtin_help@plt>:
 af0:	adrp	x16, 12000 <builtin_error>
 af4:	ldr	x17, [x16, #48]
 af8:	add	x16, x16, #0x30
 afc:	br	x17

0000000000000b00 <builtin_usage@plt>:
 b00:	adrp	x16, 12000 <builtin_error>
 b04:	ldr	x17, [x16, #56]
 b08:	add	x16, x16, #0x38
 b0c:	br	x17

0000000000000b10 <getc@plt>:
 b10:	adrp	x16, 12000 <builtin_error>
 b14:	ldr	x17, [x16, #64]
 b18:	add	x16, x16, #0x40
 b1c:	br	x17

0000000000000b20 <strerror@plt>:
 b20:	adrp	x16, 12000 <builtin_error>
 b24:	ldr	x17, [x16, #72]
 b28:	add	x16, x16, #0x48
 b2c:	br	x17

0000000000000b30 <__gmon_start__@plt>:
 b30:	adrp	x16, 12000 <builtin_error>
 b34:	ldr	x17, [x16, #80]
 b38:	add	x16, x16, #0x50
 b3c:	br	x17

0000000000000b40 <strtol@plt>:
 b40:	adrp	x16, 12000 <builtin_error>
 b44:	ldr	x17, [x16, #88]
 b48:	add	x16, x16, #0x58
 b4c:	br	x17

0000000000000b50 <internal_getopt@plt>:
 b50:	adrp	x16, 12000 <builtin_error>
 b54:	ldr	x17, [x16, #96]
 b58:	add	x16, x16, #0x60
 b5c:	br	x17

0000000000000b60 <reset_internal_getopt@plt>:
 b60:	adrp	x16, 12000 <builtin_error>
 b64:	ldr	x17, [x16, #104]
 b68:	add	x16, x16, #0x68
 b6c:	br	x17

0000000000000b70 <printf@plt>:
 b70:	adrp	x16, 12000 <builtin_error>
 b74:	ldr	x17, [x16, #112]
 b78:	add	x16, x16, #0x70
 b7c:	br	x17

0000000000000b80 <__errno_location@plt>:
 b80:	adrp	x16, 12000 <builtin_error>
 b84:	ldr	x17, [x16, #120]
 b88:	add	x16, x16, #0x78
 b8c:	br	x17

0000000000000b90 <make_word_list@plt>:
 b90:	adrp	x16, 12000 <builtin_error>
 b94:	ldr	x17, [x16, #128]
 b98:	add	x16, x16, #0x80
 b9c:	br	x17

Disassembly of section .text:

0000000000000ba0 <call_weak_fn>:
 ba0:	adrp	x0, 11000 <__FRAME_END__+0xfe20>
 ba4:	ldr	x0, [x0, #4040]
 ba8:	cbz	x0, bb0 <call_weak_fn+0x10>
 bac:	b	b30 <__gmon_start__@plt>
 bb0:	ret
 bb4:	nop

0000000000000bb8 <deregister_tm_clones>:
 bb8:	adrp	x0, 12000 <builtin_error>
 bbc:	add	x0, x0, #0xf0
 bc0:	adrp	x1, 12000 <builtin_error>
 bc4:	add	x1, x1, #0xf0
 bc8:	cmp	x1, x0
 bcc:	b.eq	be4 <deregister_tm_clones+0x2c>  // b.none
 bd0:	adrp	x1, 11000 <__FRAME_END__+0xfe20>
 bd4:	ldr	x1, [x1, #4008]
 bd8:	cbz	x1, be4 <deregister_tm_clones+0x2c>
 bdc:	mov	x16, x1
 be0:	br	x16
 be4:	ret

0000000000000be8 <register_tm_clones>:
 be8:	adrp	x0, 12000 <builtin_error>
 bec:	add	x0, x0, #0xf0
 bf0:	adrp	x1, 12000 <builtin_error>
 bf4:	add	x1, x1, #0xf0
 bf8:	sub	x1, x1, x0
 bfc:	lsr	x2, x1, #63
 c00:	add	x1, x2, x1, asr #3
 c04:	cmp	xzr, x1, asr #1
 c08:	asr	x1, x1, #1
 c0c:	b.eq	c24 <register_tm_clones+0x3c>  // b.none
 c10:	adrp	x2, 11000 <__FRAME_END__+0xfe20>
 c14:	ldr	x2, [x2, #4064]
 c18:	cbz	x2, c24 <register_tm_clones+0x3c>
 c1c:	mov	x16, x2
 c20:	br	x16
 c24:	ret

0000000000000c28 <__do_global_dtors_aux>:
 c28:	stp	x29, x30, [sp, #-32]!
 c2c:	mov	x29, sp
 c30:	str	x19, [sp, #16]
 c34:	adrp	x19, 12000 <builtin_error>
 c38:	ldrb	w0, [x19, #240]
 c3c:	cbnz	w0, c64 <__do_global_dtors_aux+0x3c>
 c40:	adrp	x0, 11000 <__FRAME_END__+0xfe20>
 c44:	ldr	x0, [x0, #4016]
 c48:	cbz	x0, c58 <__do_global_dtors_aux+0x30>
 c4c:	adrp	x0, 12000 <builtin_error>
 c50:	ldr	x0, [x0, #136]
 c54:	bl	aa0 <__cxa_finalize@plt>
 c58:	bl	bb8 <deregister_tm_clones>
 c5c:	mov	w0, #0x1                   	// #1
 c60:	strb	w0, [x19, #240]
 c64:	ldr	x19, [sp, #16]
 c68:	ldp	x29, x30, [sp], #32
 c6c:	ret

0000000000000c70 <frame_dummy>:
 c70:	b	be8 <register_tm_clones>
 c74:	nop

0000000000000c78 <head_builtin>:
 c78:	stp	x29, x30, [sp, #-96]!
 c7c:	mov	x29, sp
 c80:	stp	x19, x20, [sp, #16]
 c84:	mov	x20, x0
 c88:	stp	x21, x22, [sp, #32]
 c8c:	cbz	x0, cf8 <head_builtin+0x80>
 c90:	mov	x19, x0
 c94:	mov	w21, #0x6e                  	// #110
 c98:	b	ce0 <head_builtin+0x68>
 c9c:	ldrb	w1, [x1, #1]
 ca0:	sub	w1, w1, #0x30
 ca4:	and	w1, w1, #0xff
 ca8:	cmp	w1, #0x9
 cac:	b.hi	cf8 <head_builtin+0x80>  // b.pmore
 cb0:	bl	ac0 <make_bare_word@plt>
 cb4:	ldr	x1, [x19]
 cb8:	bl	b90 <make_word_list@plt>
 cbc:	ldr	x1, [x19, #8]
 cc0:	ldr	x1, [x1]
 cc4:	strb	w21, [x1, #1]
 cc8:	ldr	x1, [x19, #8]
 ccc:	ldr	x1, [x1]
 cd0:	strb	wzr, [x1, #2]
 cd4:	str	x0, [x19]
 cd8:	ldr	x19, [x0]
 cdc:	cbz	x19, cf8 <head_builtin+0x80>
 ce0:	ldr	x0, [x19, #8]
 ce4:	ldr	x1, [x0]
 ce8:	add	x0, x1, #0x1
 cec:	ldrb	w2, [x1]
 cf0:	cmp	w2, #0x2d
 cf4:	b.eq	c9c <head_builtin+0x24>  // b.none
 cf8:	bl	b60 <reset_internal_getopt@plt>
 cfc:	adrp	x19, 0 <_init-0xa58>
 d00:	adrp	x0, 11000 <__FRAME_END__+0xfe20>
 d04:	add	x19, x19, #0xf98
 d08:	mov	w21, #0xa                   	// #10
 d0c:	ldr	x22, [x0, #4048]
 d10:	mov	x1, x19
 d14:	mov	x0, x20
 d18:	bl	b50 <internal_getopt@plt>
 d1c:	cmn	w0, #0x1
 d20:	b.eq	da0 <head_builtin+0x128>  // b.none
 d24:	cmn	w0, #0x63
 d28:	b.eq	d68 <head_builtin+0xf0>  // b.none
 d2c:	cmp	w0, #0x6e
 d30:	mov	w2, #0xa                   	// #10
 d34:	mov	x1, #0x0                   	// #0
 d38:	b.ne	d84 <head_builtin+0x10c>  // b.any
 d3c:	ldr	x0, [x22]
 d40:	bl	b40 <strtol@plt>
 d44:	mov	x21, x0
 d48:	cmp	w0, #0x0
 d4c:	b.gt	d10 <head_builtin+0x98>
 d50:	ldr	x1, [x22]
 d54:	adrp	x0, 0 <_init-0xa58>
 d58:	mov	w19, #0x102                 	// #258
 d5c:	add	x0, x0, #0xf80
 d60:	bl	a90 <builtin_error@plt>
 d64:	b	d70 <head_builtin+0xf8>
 d68:	mov	w19, #0x102                 	// #258
 d6c:	bl	af0 <builtin_help@plt>
 d70:	mov	w0, w19
 d74:	ldp	x19, x20, [sp, #16]
 d78:	ldp	x21, x22, [sp, #32]
 d7c:	ldp	x29, x30, [sp], #96
 d80:	ret
 d84:	bl	b00 <builtin_usage@plt>
 d88:	mov	w19, #0x102                 	// #258
 d8c:	mov	w0, w19
 d90:	ldp	x19, x20, [sp, #16]
 d94:	ldp	x21, x22, [sp, #32]
 d98:	ldp	x29, x30, [sp], #96
 d9c:	ret
 da0:	adrp	x0, 11000 <__FRAME_END__+0xfe20>
 da4:	str	x27, [sp, #80]
 da8:	ldr	x0, [x0, #4056]
 dac:	ldr	x27, [x0]
 db0:	cbz	x27, ee0 <head_builtin+0x268>
 db4:	stp	x23, x24, [sp, #48]
 db8:	adrp	x23, 11000 <__FRAME_END__+0xfe20>
 dbc:	mov	x24, x27
 dc0:	ldr	x23, [x23, #4024]
 dc4:	stp	x25, x26, [sp, #64]
 dc8:	adrp	x26, 0 <_init-0xa58>
 dcc:	add	x26, x26, #0xfb0
 dd0:	mov	w19, #0x0                   	// #0
 dd4:	mov	w25, #0x1                   	// #1
 dd8:	ldr	x0, [x24, #8]
 ddc:	mov	x1, x26
 de0:	ldr	x0, [x0]
 de4:	bl	ae0 <fopen@plt>
 de8:	mov	x20, x0
 dec:	cbz	x0, eb4 <head_builtin+0x23c>
 df0:	ldr	x0, [x27]
 df4:	cbz	x0, e28 <head_builtin+0x1b0>
 df8:	ldr	x2, [x24, #8]
 dfc:	cmp	w25, #0x0
 e00:	adrp	x0, 0 <_init-0xa58>
 e04:	adrp	x1, 0 <_init-0xa58>
 e08:	add	x0, x0, #0xf78
 e0c:	add	x1, x1, #0xff0
 e10:	ldr	x2, [x2]
 e14:	csel	x1, x1, x0, ne  // ne = any
 e18:	mov	w25, #0x0                   	// #0
 e1c:	adrp	x0, 0 <_init-0xa58>
 e20:	add	x0, x0, #0xfc0
 e24:	bl	b70 <printf@plt>
 e28:	sub	w22, w21, #0x1
 e2c:	b	e48 <head_builtin+0x1d0>
 e30:	ldr	x1, [x23]
 e34:	bl	ab0 <putc@plt>
 e38:	cmn	w0, #0x1
 e3c:	b.eq	e90 <head_builtin+0x218>  // b.none
 e40:	cmp	w19, #0xa
 e44:	b.eq	e5c <head_builtin+0x1e4>  // b.none
 e48:	mov	x0, x20
 e4c:	bl	b10 <getc@plt>
 e50:	mov	w19, w0
 e54:	cmn	w0, #0x1
 e58:	b.ne	e30 <head_builtin+0x1b8>  // b.any
 e5c:	sub	w22, w22, #0x1
 e60:	cmn	w22, #0x1
 e64:	b.ne	e48 <head_builtin+0x1d0>  // b.any
 e68:	mov	w19, #0x0                   	// #0
 e6c:	nop
 e70:	mov	x0, x20
 e74:	bl	ad0 <fclose@plt>
 e78:	ldr	x24, [x24]
 e7c:	cbnz	x24, dd8 <head_builtin+0x160>
 e80:	ldp	x23, x24, [sp, #48]
 e84:	ldp	x25, x26, [sp, #64]
 e88:	ldr	x27, [sp, #80]
 e8c:	b	d70 <head_builtin+0xf8>
 e90:	bl	b80 <__errno_location@plt>
 e94:	ldr	w0, [x0]
 e98:	mov	w19, #0x1                   	// #1
 e9c:	bl	b20 <strerror@plt>
 ea0:	mov	x1, x0
 ea4:	adrp	x0, 0 <_init-0xa58>
 ea8:	add	x0, x0, #0xfa0
 eac:	bl	a90 <builtin_error@plt>
 eb0:	b	e70 <head_builtin+0x1f8>
 eb4:	ldr	x0, [x24, #8]
 eb8:	ldr	x20, [x0]
 ebc:	bl	b80 <__errno_location@plt>
 ec0:	ldr	w0, [x0]
 ec4:	bl	b20 <strerror@plt>
 ec8:	mov	x2, x0
 ecc:	mov	x1, x20
 ed0:	adrp	x0, 0 <_init-0xa58>
 ed4:	add	x0, x0, #0xfb8
 ed8:	bl	a90 <builtin_error@plt>
 edc:	b	e78 <head_builtin+0x200>
 ee0:	adrp	x0, 11000 <__FRAME_END__+0xfe20>
 ee4:	adrp	x20, 11000 <__FRAME_END__+0xfe20>
 ee8:	sub	w21, w21, #0x1
 eec:	ldr	x0, [x0, #4032]
 ef0:	ldr	x20, [x20, #4024]
 ef4:	ldr	x22, [x0]
 ef8:	b	f14 <head_builtin+0x29c>
 efc:	ldr	x1, [x20]
 f00:	bl	ab0 <putc@plt>
 f04:	cmn	w0, #0x1
 f08:	b.eq	f40 <head_builtin+0x2c8>  // b.none
 f0c:	cmp	w19, #0xa
 f10:	b.eq	f28 <head_builtin+0x2b0>  // b.none
 f14:	mov	x0, x22
 f18:	bl	b10 <getc@plt>
 f1c:	mov	w19, w0
 f20:	cmn	w0, #0x1
 f24:	b.ne	efc <head_builtin+0x284>  // b.any
 f28:	sub	w21, w21, #0x1
 f2c:	cmn	w21, #0x1
 f30:	b.ne	f14 <head_builtin+0x29c>  // b.any
 f34:	mov	w19, #0x0                   	// #0
 f38:	ldr	x27, [sp, #80]
 f3c:	b	d70 <head_builtin+0xf8>
 f40:	bl	b80 <__errno_location@plt>
 f44:	ldr	w0, [x0]
 f48:	mov	w19, #0x1                   	// #1
 f4c:	bl	b20 <strerror@plt>
 f50:	mov	x1, x0
 f54:	adrp	x0, 0 <_init-0xa58>
 f58:	add	x0, x0, #0xfa0
 f5c:	bl	a90 <builtin_error@plt>
 f60:	ldr	x27, [sp, #80]
 f64:	b	d70 <head_builtin+0xf8>

Disassembly of section .fini:

0000000000000f68 <_fini>:
 f68:	stp	x29, x30, [sp, #-16]!
 f6c:	mov	x29, sp
 f70:	ldp	x29, x30, [sp], #16
 f74:	ret
