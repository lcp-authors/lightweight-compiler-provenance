
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d88 <_init>:
  400d88:	stp	x29, x30, [sp, #-16]!
  400d8c:	mov	x29, sp
  400d90:	bl	401488 <call_weak_fn>
  400d94:	ldp	x29, x30, [sp], #16
  400d98:	ret

Disassembly of section .plt:

0000000000400da0 <.plt>:
  400da0:	stp	x16, x30, [sp, #-16]!
  400da4:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400da8:	ldr	x17, [x16, #3856]
  400dac:	add	x16, x16, #0xf10
  400db0:	br	x17
  400db4:	nop
  400db8:	nop
  400dbc:	nop

0000000000400dc0 <read_line_full@plt>:
  400dc0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400dc4:	ldr	x17, [x16, #3864]
  400dc8:	add	x16, x16, #0xf18
  400dcc:	br	x17

0000000000400dd0 <sendto@plt>:
  400dd0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400dd4:	ldr	x17, [x16, #3872]
  400dd8:	add	x16, x16, #0xf20
  400ddc:	br	x17

0000000000400de0 <__libc_start_main@plt>:
  400de0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400de4:	ldr	x17, [x16, #3880]
  400de8:	add	x16, x16, #0xf28
  400dec:	br	x17

0000000000400df0 <__gmon_start__@plt>:
  400df0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400df4:	ldr	x17, [x16, #3888]
  400df8:	add	x16, x16, #0xf30
  400dfc:	br	x17

0000000000400e00 <polkit_agent_close@plt>:
  400e00:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e04:	ldr	x17, [x16, #3896]
  400e08:	add	x16, x16, #0xf38
  400e0c:	br	x17

0000000000400e10 <socket@plt>:
  400e10:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e14:	ldr	x17, [x16, #3904]
  400e18:	add	x16, x16, #0xf40
  400e1c:	br	x17

0000000000400e20 <log_setup_service@plt>:
  400e20:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e24:	ldr	x17, [x16, #3912]
  400e28:	add	x16, x16, #0xf48
  400e2c:	br	x17

0000000000400e30 <strjoin_real@plt>:
  400e30:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e34:	ldr	x17, [x16, #3920]
  400e38:	add	x16, x16, #0xf50
  400e3c:	br	x17

0000000000400e40 <safe_close@plt>:
  400e40:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e44:	ldr	x17, [x16, #3928]
  400e48:	add	x16, x16, #0xf58
  400e4c:	br	x17

0000000000400e50 <log_assert_failed_realm@plt>:
  400e50:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e54:	ldr	x17, [x16, #3936]
  400e58:	add	x16, x16, #0xf60
  400e5c:	br	x17

0000000000400e60 <malloc_usable_size@plt>:
  400e60:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e64:	ldr	x17, [x16, #3944]
  400e68:	add	x16, x16, #0xf68
  400e6c:	br	x17

0000000000400e70 <abort@plt>:
  400e70:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e74:	ldr	x17, [x16, #3952]
  400e78:	add	x16, x16, #0xf70
  400e7c:	br	x17

0000000000400e80 <__errno_location@plt>:
  400e80:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e84:	ldr	x17, [x16, #3960]
  400e88:	add	x16, x16, #0xf78
  400e8c:	br	x17

0000000000400e90 <__stack_chk_fail@plt>:
  400e90:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400e94:	ldr	x17, [x16, #3968]
  400e98:	add	x16, x16, #0xf80
  400e9c:	br	x17

0000000000400ea0 <explicit_bzero@plt>:
  400ea0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400ea4:	ldr	x17, [x16, #3976]
  400ea8:	add	x16, x16, #0xf88
  400eac:	br	x17

0000000000400eb0 <ask_password_agent_close@plt>:
  400eb0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400eb4:	ldr	x17, [x16, #3984]
  400eb8:	add	x16, x16, #0xf90
  400ebc:	br	x17

0000000000400ec0 <pager_close@plt>:
  400ec0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400ec4:	ldr	x17, [x16, #3992]
  400ec8:	add	x16, x16, #0xf98
  400ecc:	br	x17

0000000000400ed0 <log_internal_realm@plt>:
  400ed0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400ed4:	ldr	x17, [x16, #4000]
  400ed8:	add	x16, x16, #0xfa0
  400edc:	br	x17

0000000000400ee0 <strcmp@plt>:
  400ee0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400ee4:	ldr	x17, [x16, #4008]
  400ee8:	add	x16, x16, #0xfa8
  400eec:	br	x17

0000000000400ef0 <strdup@plt>:
  400ef0:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400ef4:	ldr	x17, [x16, #4016]
  400ef8:	add	x16, x16, #0xfb0
  400efc:	br	x17

0000000000400f00 <sockaddr_un_set_path@plt>:
  400f00:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f04:	ldr	x17, [x16, #4024]
  400f08:	add	x16, x16, #0xfb8
  400f0c:	br	x17

0000000000400f10 <free@plt>:
  400f10:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f14:	ldr	x17, [x16, #4032]
  400f18:	add	x16, x16, #0xfc0
  400f1c:	br	x17

0000000000400f20 <mac_selinux_finish@plt>:
  400f20:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f24:	ldr	x17, [x16, #4040]
  400f28:	add	x16, x16, #0xfc8
  400f2c:	br	x17

0000000000400f30 <strlen@plt>:
  400f30:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f34:	ldr	x17, [x16, #4048]
  400f38:	add	x16, x16, #0xfd0
  400f3c:	br	x17

0000000000400f40 <log_oom_internal@plt>:
  400f40:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f44:	ldr	x17, [x16, #4056]
  400f48:	add	x16, x16, #0xfd8
  400f4c:	br	x17

0000000000400f50 <memset@plt>:
  400f50:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f54:	ldr	x17, [x16, #4064]
  400f58:	add	x16, x16, #0xfe0
  400f5c:	br	x17

0000000000400f60 <log_get_max_level_realm@plt>:
  400f60:	adrp	x16, 411000 <__FRAME_END__+0xf688>
  400f64:	ldr	x17, [x16, #4072]
  400f68:	add	x16, x16, #0xfe8
  400f6c:	br	x17

Disassembly of section .text:

0000000000400f70 <main>:
  400f70:	stp	x29, x30, [sp, #-224]!
  400f74:	adrp	x3, 412000 <saved_argv@@SD_SHARED>
  400f78:	adrp	x2, 412000 <saved_argv@@SD_SHARED>
  400f7c:	mov	x29, sp
  400f80:	stp	x21, x22, [sp, #32]
  400f84:	adrp	x22, 411000 <__FRAME_END__+0xf688>
  400f88:	add	x22, x22, #0xcc8
  400f8c:	str	w0, [x3, #16]
  400f90:	mov	x21, x1
  400f94:	stp	x19, x20, [sp, #16]
  400f98:	mov	w20, w0
  400f9c:	ldr	x0, [x22]
  400fa0:	str	x0, [sp, #216]
  400fa4:	mov	x0, #0x0                   	// #0
  400fa8:	str	x1, [x2]
  400fac:	str	xzr, [sp, #72]
  400fb0:	bl	400e20 <log_setup_service@plt>
  400fb4:	cmp	w20, #0x3
  400fb8:	b.eq	401050 <main+0xe0>  // b.none
  400fbc:	mov	w0, #0x0                   	// #0
  400fc0:	bl	400f60 <log_get_max_level_realm@plt>
  400fc4:	cmp	w0, #0x2
  400fc8:	b.gt	401114 <main+0x1a4>
  400fcc:	mov	w20, #0xffffffff            	// #-1
  400fd0:	mov	w21, #0xffffffea            	// #-22
  400fd4:	mov	w0, w20
  400fd8:	bl	400e40 <safe_close@plt>
  400fdc:	add	x0, sp, #0x48
  400fe0:	bl	401548 <erase_and_freep>
  400fe4:	bl	400eb0 <ask_password_agent_close@plt>
  400fe8:	bl	400e00 <polkit_agent_close@plt>
  400fec:	bl	400ec0 <pager_close@plt>
  400ff0:	bl	400f20 <mac_selinux_finish@plt>
  400ff4:	adrp	x0, 401000 <main+0x90>
  400ff8:	ldr	x19, [x0, #1936]
  400ffc:	cbz	x19, 40102c <main+0xbc>
  401000:	adrp	x0, 401000 <main+0x90>
  401004:	add	x19, x19, #0x7
  401008:	and	x19, x19, #0xfffffffffffffff8
  40100c:	ldr	x20, [x0, #1944]
  401010:	cmp	x19, x20
  401014:	b.cs	40102c <main+0xbc>  // b.hs, b.nlast
  401018:	ldp	x0, x1, [x19]
  40101c:	add	x19, x19, #0x10
  401020:	blr	x1
  401024:	cmp	x19, x20
  401028:	b.cc	401018 <main+0xa8>  // b.lo, b.ul, b.last
  40102c:	lsr	w0, w21, #31
  401030:	ldr	x2, [sp, #216]
  401034:	ldr	x1, [x22]
  401038:	eor	x1, x2, x1
  40103c:	cbnz	x1, 401408 <main+0x498>
  401040:	ldp	x19, x20, [sp, #16]
  401044:	ldp	x21, x22, [sp, #32]
  401048:	ldp	x29, x30, [sp], #224
  40104c:	ret
  401050:	ldr	x19, [x21, #8]
  401054:	adrp	x1, 401000 <main+0x90>
  401058:	add	x1, x1, #0x688
  40105c:	mov	x0, x19
  401060:	bl	400ee0 <strcmp@plt>
  401064:	cbz	w0, 4010c8 <main+0x158>
  401068:	adrp	x1, 401000 <main+0x90>
  40106c:	mov	x0, x19
  401070:	add	x1, x1, #0x6d8
  401074:	bl	400ee0 <strcmp@plt>
  401078:	cbz	w0, 40114c <main+0x1dc>
  40107c:	mov	w0, #0x0                   	// #0
  401080:	bl	400f60 <log_get_max_level_realm@plt>
  401084:	cmp	w0, #0x2
  401088:	b.le	400fcc <main+0x5c>
  40108c:	mov	w1, #0x16                  	// #22
  401090:	mov	w0, w20
  401094:	mov	x6, x19
  401098:	movk	w1, #0x4000, lsl #16
  40109c:	adrp	x5, 401000 <main+0x90>
  4010a0:	adrp	x4, 401000 <main+0x90>
  4010a4:	add	x5, x5, #0x6e8
  4010a8:	add	x4, x4, #0x7c0
  4010ac:	adrp	x2, 401000 <main+0x90>
  4010b0:	mov	w3, #0x47                  	// #71
  4010b4:	add	x2, x2, #0x663
  4010b8:	mov	w20, #0xffffffff            	// #-1
  4010bc:	bl	400ed0 <log_internal_realm@plt>
  4010c0:	mov	w21, w0
  4010c4:	b	400fd4 <main+0x64>
  4010c8:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  4010cc:	add	x3, sp, #0x50
  4010d0:	mov	w2, #0x0                   	// #0
  4010d4:	mov	x1, #0x100000              	// #1048576
  4010d8:	ldr	x0, [x0, #8]
  4010dc:	str	xzr, [sp, #80]
  4010e0:	bl	400dc0 <read_line_full@plt>
  4010e4:	mov	w19, w0
  4010e8:	cmp	w0, #0x0
  4010ec:	b.lt	4012f4 <main+0x384>  // b.tstop
  4010f0:	b.ne	401218 <main+0x2a8>  // b.any
  4010f4:	bl	400f60 <log_get_max_level_realm@plt>
  4010f8:	cmp	w0, #0x2
  4010fc:	b.gt	401250 <main+0x2e0>
  401100:	mov	w21, #0xfffffffb            	// #-5
  401104:	add	x0, sp, #0x50
  401108:	mov	w20, #0xffffffff            	// #-1
  40110c:	bl	401548 <erase_and_freep>
  401110:	b	400fd4 <main+0x64>
  401114:	mov	w1, #0x16                  	// #22
  401118:	adrp	x5, 401000 <main+0x90>
  40111c:	movk	w1, #0x4000, lsl #16
  401120:	add	x5, x5, #0x640
  401124:	adrp	x4, 401000 <main+0x90>
  401128:	adrp	x2, 401000 <main+0x90>
  40112c:	add	x4, x4, #0x7c0
  401130:	add	x2, x2, #0x663
  401134:	mov	w3, #0x2d                  	// #45
  401138:	mov	w0, #0x3                   	// #3
  40113c:	mov	w20, #0xffffffff            	// #-1
  401140:	bl	400ed0 <log_internal_realm@plt>
  401144:	mov	w21, w0
  401148:	b	400fd4 <main+0x64>
  40114c:	adrp	x0, 401000 <main+0x90>
  401150:	add	x0, x0, #0x6e0
  401154:	stp	x23, x24, [sp, #48]
  401158:	bl	400ef0 <strdup@plt>
  40115c:	mov	x23, #0x1                   	// #1
  401160:	str	x0, [sp, #72]
  401164:	cbz	x0, 401410 <main+0x4a0>
  401168:	mov	w1, #0x802                 	// #2050
  40116c:	mov	w2, #0x0                   	// #0
  401170:	movk	w1, #0x8, lsl #16
  401174:	mov	w0, #0x1                   	// #1
  401178:	bl	400e10 <socket@plt>
  40117c:	mov	w20, w0
  401180:	tbnz	w0, #31, 4011e4 <main+0x274>
  401184:	ldr	x21, [x21, #16]
  401188:	add	x0, sp, #0x58
  40118c:	mov	x2, #0x80                  	// #128
  401190:	mov	w1, #0x0                   	// #0
  401194:	ldr	x24, [sp, #72]
  401198:	bl	400f50 <memset@plt>
  40119c:	cbz	x21, 4013c0 <main+0x450>
  4011a0:	cbz	x24, 4013e4 <main+0x474>
  4011a4:	mov	x1, x21
  4011a8:	add	x0, sp, #0x58
  4011ac:	bl	400f00 <sockaddr_un_set_path@plt>
  4011b0:	mov	w19, w0
  4011b4:	tbnz	w0, #31, 401314 <main+0x3a4>
  4011b8:	mov	w5, w0
  4011bc:	add	x4, sp, #0x58
  4011c0:	mov	x2, x23
  4011c4:	mov	x1, x24
  4011c8:	mov	w0, w20
  4011cc:	mov	w3, #0x4000                	// #16384
  4011d0:	bl	400dd0 <sendto@plt>
  4011d4:	tbnz	x0, #63, 401284 <main+0x314>
  4011d8:	mov	w21, #0x0                   	// #0
  4011dc:	ldp	x23, x24, [sp, #48]
  4011e0:	b	400fd4 <main+0x64>
  4011e4:	bl	400e80 <__errno_location@plt>
  4011e8:	mov	x1, x0
  4011ec:	mov	w0, #0x0                   	// #0
  4011f0:	ldr	w19, [x1]
  4011f4:	bl	400f60 <log_get_max_level_realm@plt>
  4011f8:	cmp	w0, #0x2
  4011fc:	b.gt	401338 <main+0x3c8>
  401200:	cmp	w19, #0x0
  401204:	cneg	w19, w19, lt  // lt = tstop
  401208:	and	w21, w19, #0xff
  40120c:	neg	w21, w21
  401210:	ldp	x23, x24, [sp, #48]
  401214:	b	400fd4 <main+0x64>
  401218:	ldr	x1, [sp, #80]
  40121c:	adrp	x0, 401000 <main+0x90>
  401220:	mov	x2, #0x0                   	// #0
  401224:	add	x0, x0, #0x6d0
  401228:	bl	400e30 <strjoin_real@plt>
  40122c:	str	x0, [sp, #72]
  401230:	cbz	x0, 4012d4 <main+0x364>
  401234:	ldr	x0, [sp, #80]
  401238:	stp	x23, x24, [sp, #48]
  40123c:	bl	400f30 <strlen@plt>
  401240:	add	x23, x0, #0x2
  401244:	add	x0, sp, #0x50
  401248:	bl	401548 <erase_and_freep>
  40124c:	b	401168 <main+0x1f8>
  401250:	mov	w1, #0x5                   	// #5
  401254:	mov	w0, w20
  401258:	movk	w1, #0x4000, lsl #16
  40125c:	adrp	x5, 401000 <main+0x90>
  401260:	adrp	x4, 401000 <main+0x90>
  401264:	add	x5, x5, #0x6b0
  401268:	add	x4, x4, #0x7c0
  40126c:	adrp	x2, 401000 <main+0x90>
  401270:	mov	w3, #0x36                  	// #54
  401274:	add	x2, x2, #0x663
  401278:	bl	400ed0 <log_internal_realm@plt>
  40127c:	mov	w21, w0
  401280:	b	401104 <main+0x194>
  401284:	bl	400e80 <__errno_location@plt>
  401288:	mov	x1, x0
  40128c:	mov	w0, #0x0                   	// #0
  401290:	ldr	w19, [x1]
  401294:	bl	400f60 <log_get_max_level_realm@plt>
  401298:	cmp	w0, #0x2
  40129c:	b.le	401200 <main+0x290>
  4012a0:	adrp	x5, 401000 <main+0x90>
  4012a4:	adrp	x4, 401000 <main+0x90>
  4012a8:	mov	w1, w19
  4012ac:	add	x5, x5, #0x778
  4012b0:	add	x4, x4, #0x7b0
  4012b4:	adrp	x2, 401000 <main+0x90>
  4012b8:	mov	w3, #0x1f                  	// #31
  4012bc:	add	x2, x2, #0x663
  4012c0:	mov	w0, #0x3                   	// #3
  4012c4:	bl	400ed0 <log_internal_realm@plt>
  4012c8:	mov	w21, w0
  4012cc:	ldp	x23, x24, [sp, #48]
  4012d0:	b	400fd4 <main+0x64>
  4012d4:	adrp	x3, 401000 <main+0x90>
  4012d8:	adrp	x1, 401000 <main+0x90>
  4012dc:	add	x3, x3, #0x7c0
  4012e0:	add	x1, x1, #0x663
  4012e4:	mov	w2, #0x3b                  	// #59
  4012e8:	bl	400f40 <log_oom_internal@plt>
  4012ec:	mov	w21, w0
  4012f0:	b	401104 <main+0x194>
  4012f4:	mov	w0, #0x0                   	// #0
  4012f8:	bl	400f60 <log_get_max_level_realm@plt>
  4012fc:	cmp	w0, #0x2
  401300:	b.gt	401358 <main+0x3e8>
  401304:	neg	w0, w19
  401308:	and	w0, w0, #0xff
  40130c:	neg	w21, w0
  401310:	b	401104 <main+0x194>
  401314:	mov	w0, #0x0                   	// #0
  401318:	bl	400f60 <log_get_max_level_realm@plt>
  40131c:	cmp	w0, #0x2
  401320:	b.gt	401388 <main+0x418>
  401324:	neg	w21, w19
  401328:	and	w21, w21, #0xff
  40132c:	neg	w21, w21
  401330:	ldp	x23, x24, [sp, #48]
  401334:	b	400fd4 <main+0x64>
  401338:	adrp	x5, 401000 <main+0x90>
  40133c:	adrp	x4, 401000 <main+0x90>
  401340:	mov	w1, w19
  401344:	add	x5, x5, #0x708
  401348:	add	x4, x4, #0x7c0
  40134c:	adrp	x2, 401000 <main+0x90>
  401350:	mov	w3, #0x4c                  	// #76
  401354:	b	4012bc <main+0x34c>
  401358:	mov	w1, w19
  40135c:	mov	w0, w20
  401360:	adrp	x5, 401000 <main+0x90>
  401364:	adrp	x4, 401000 <main+0x90>
  401368:	add	x5, x5, #0x690
  40136c:	add	x4, x4, #0x7c0
  401370:	adrp	x2, 401000 <main+0x90>
  401374:	mov	w3, #0x34                  	// #52
  401378:	add	x2, x2, #0x663
  40137c:	bl	400ed0 <log_internal_realm@plt>
  401380:	mov	w21, w0
  401384:	b	401104 <main+0x194>
  401388:	mov	x6, x21
  40138c:	mov	w1, w19
  401390:	adrp	x5, 401000 <main+0x90>
  401394:	adrp	x4, 401000 <main+0x90>
  401398:	add	x5, x5, #0x738
  40139c:	add	x4, x4, #0x7b0
  4013a0:	adrp	x2, 401000 <main+0x90>
  4013a4:	mov	w3, #0x1c                  	// #28
  4013a8:	add	x2, x2, #0x663
  4013ac:	mov	w0, #0x3                   	// #3
  4013b0:	bl	400ed0 <log_internal_realm@plt>
  4013b4:	mov	w21, w0
  4013b8:	ldp	x23, x24, [sp, #48]
  4013bc:	b	400fd4 <main+0x64>
  4013c0:	adrp	x4, 401000 <main+0x90>
  4013c4:	adrp	x1, 401000 <main+0x90>
  4013c8:	adrp	x2, 401000 <main+0x90>
  4013cc:	add	x4, x4, #0x7a0
  4013d0:	add	x1, x1, #0x720
  4013d4:	add	x2, x2, #0x663
  4013d8:	mov	w3, #0x17                  	// #23
  4013dc:	mov	w0, #0x0                   	// #0
  4013e0:	bl	400e50 <log_assert_failed_realm@plt>
  4013e4:	adrp	x4, 401000 <main+0x90>
  4013e8:	adrp	x1, 401000 <main+0x90>
  4013ec:	adrp	x2, 401000 <main+0x90>
  4013f0:	add	x4, x4, #0x7a0
  4013f4:	add	x1, x1, #0x730
  4013f8:	add	x2, x2, #0x663
  4013fc:	mov	w3, #0x18                  	// #24
  401400:	mov	w0, #0x0                   	// #0
  401404:	bl	400e50 <log_assert_failed_realm@plt>
  401408:	stp	x23, x24, [sp, #48]
  40140c:	bl	400e90 <__stack_chk_fail@plt>
  401410:	adrp	x3, 401000 <main+0x90>
  401414:	adrp	x1, 401000 <main+0x90>
  401418:	add	x3, x3, #0x7c0
  40141c:	add	x1, x1, #0x663
  401420:	mov	w2, #0x42                  	// #66
  401424:	mov	w20, #0xffffffff            	// #-1
  401428:	bl	400f40 <log_oom_internal@plt>
  40142c:	mov	w21, w0
  401430:	ldp	x23, x24, [sp, #48]
  401434:	b	400fd4 <main+0x64>

0000000000401438 <_start>:
  401438:	mov	x29, #0x0                   	// #0
  40143c:	mov	x30, #0x0                   	// #0
  401440:	mov	x5, x0
  401444:	ldr	x1, [sp]
  401448:	add	x2, sp, #0x8
  40144c:	mov	x6, sp
  401450:	movz	x0, #0x0, lsl #48
  401454:	movk	x0, #0x0, lsl #32
  401458:	movk	x0, #0x40, lsl #16
  40145c:	movk	x0, #0xf70
  401460:	movz	x3, #0x0, lsl #48
  401464:	movk	x3, #0x0, lsl #32
  401468:	movk	x3, #0x40, lsl #16
  40146c:	movk	x3, #0x1598
  401470:	movz	x4, #0x0, lsl #48
  401474:	movk	x4, #0x0, lsl #32
  401478:	movk	x4, #0x40, lsl #16
  40147c:	movk	x4, #0x1618
  401480:	bl	400de0 <__libc_start_main@plt>
  401484:	bl	400e70 <abort@plt>

0000000000401488 <call_weak_fn>:
  401488:	adrp	x0, 411000 <__FRAME_END__+0xf688>
  40148c:	ldr	x0, [x0, #4088]
  401490:	cbz	x0, 401498 <call_weak_fn+0x10>
  401494:	b	400df0 <__gmon_start__@plt>
  401498:	ret
  40149c:	nop

00000000004014a0 <deregister_tm_clones>:
  4014a0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  4014a4:	add	x0, x0, #0x0
  4014a8:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  4014ac:	add	x1, x1, #0x0
  4014b0:	cmp	x1, x0
  4014b4:	b.eq	4014cc <deregister_tm_clones+0x2c>  // b.none
  4014b8:	adrp	x1, 401000 <main+0x90>
  4014bc:	ldr	x1, [x1, #1584]
  4014c0:	cbz	x1, 4014cc <deregister_tm_clones+0x2c>
  4014c4:	mov	x16, x1
  4014c8:	br	x16
  4014cc:	ret

00000000004014d0 <register_tm_clones>:
  4014d0:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  4014d4:	add	x0, x0, #0x0
  4014d8:	adrp	x1, 412000 <saved_argv@@SD_SHARED>
  4014dc:	add	x1, x1, #0x0
  4014e0:	sub	x1, x1, x0
  4014e4:	lsr	x2, x1, #63
  4014e8:	add	x1, x2, x1, asr #3
  4014ec:	cmp	xzr, x1, asr #1
  4014f0:	asr	x1, x1, #1
  4014f4:	b.eq	40150c <register_tm_clones+0x3c>  // b.none
  4014f8:	adrp	x2, 401000 <main+0x90>
  4014fc:	ldr	x2, [x2, #1592]
  401500:	cbz	x2, 40150c <register_tm_clones+0x3c>
  401504:	mov	x16, x2
  401508:	br	x16
  40150c:	ret

0000000000401510 <__do_global_dtors_aux>:
  401510:	stp	x29, x30, [sp, #-32]!
  401514:	mov	x29, sp
  401518:	str	x19, [sp, #16]
  40151c:	adrp	x19, 412000 <saved_argv@@SD_SHARED>
  401520:	ldrb	w0, [x19, #20]
  401524:	cbnz	w0, 401534 <__do_global_dtors_aux+0x24>
  401528:	bl	4014a0 <deregister_tm_clones>
  40152c:	mov	w0, #0x1                   	// #1
  401530:	strb	w0, [x19, #20]
  401534:	ldr	x19, [sp, #16]
  401538:	ldp	x29, x30, [sp], #32
  40153c:	ret

0000000000401540 <frame_dummy>:
  401540:	b	4014d0 <register_tm_clones>
  401544:	nop

0000000000401548 <erase_and_freep>:
  401548:	stp	x29, x30, [sp, #-32]!
  40154c:	mov	x29, sp
  401550:	str	x19, [sp, #16]
  401554:	ldr	x19, [x0]
  401558:	cbz	x19, 401578 <erase_and_freep+0x30>
  40155c:	mov	x0, x19
  401560:	bl	400e60 <malloc_usable_size@plt>
  401564:	cbnz	x0, 401584 <erase_and_freep+0x3c>
  401568:	mov	x0, x19
  40156c:	ldr	x19, [sp, #16]
  401570:	ldp	x29, x30, [sp], #32
  401574:	b	400f10 <free@plt>
  401578:	ldr	x19, [sp, #16]
  40157c:	ldp	x29, x30, [sp], #32
  401580:	ret
  401584:	mov	x1, x0
  401588:	mov	x0, x19
  40158c:	bl	400ea0 <explicit_bzero@plt>
  401590:	b	401568 <erase_and_freep+0x20>
  401594:	nop

0000000000401598 <__libc_csu_init>:
  401598:	stp	x29, x30, [sp, #-64]!
  40159c:	mov	x29, sp
  4015a0:	stp	x19, x20, [sp, #16]
  4015a4:	adrp	x20, 411000 <__FRAME_END__+0xf688>
  4015a8:	add	x20, x20, #0xcc0
  4015ac:	stp	x21, x22, [sp, #32]
  4015b0:	adrp	x21, 411000 <__FRAME_END__+0xf688>
  4015b4:	add	x21, x21, #0xcb8
  4015b8:	sub	x20, x20, x21
  4015bc:	mov	w22, w0
  4015c0:	stp	x23, x24, [sp, #48]
  4015c4:	mov	x23, x1
  4015c8:	mov	x24, x2
  4015cc:	bl	400d88 <_init>
  4015d0:	cmp	xzr, x20, asr #3
  4015d4:	b.eq	401600 <__libc_csu_init+0x68>  // b.none
  4015d8:	asr	x20, x20, #3
  4015dc:	mov	x19, #0x0                   	// #0
  4015e0:	ldr	x3, [x21, x19, lsl #3]
  4015e4:	mov	x2, x24
  4015e8:	add	x19, x19, #0x1
  4015ec:	mov	x1, x23
  4015f0:	mov	w0, w22
  4015f4:	blr	x3
  4015f8:	cmp	x20, x19
  4015fc:	b.ne	4015e0 <__libc_csu_init+0x48>  // b.any
  401600:	ldp	x19, x20, [sp, #16]
  401604:	ldp	x21, x22, [sp, #32]
  401608:	ldp	x23, x24, [sp, #48]
  40160c:	ldp	x29, x30, [sp], #64
  401610:	ret
  401614:	nop

0000000000401618 <__libc_csu_fini>:
  401618:	ret

Disassembly of section .fini:

000000000040161c <_fini>:
  40161c:	stp	x29, x30, [sp, #-16]!
  401620:	mov	x29, sp
  401624:	ldp	x29, x30, [sp], #16
  401628:	ret
