In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libss.a_clang_-O0:

ss_err.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <initialize_ss_error_table>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_et_list>
   c:	add	x0, x0, #0x0
  10:	bl	1c <initialize_ss_error_table_r>
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <initialize_ss_error_table_r>:
  1c:	sub	sp, sp, #0x30
  20:	stp	x29, x30, [sp, #32]
  24:	add	x29, sp, #0x20
  28:	adrp	x8, 0 <initialize_ss_error_table>
  2c:	add	x8, x8, #0x0
  30:	stur	x0, [x29, #-8]
  34:	ldur	x9, [x29, #-8]
  38:	str	x9, [sp, #8]
  3c:	ldur	x9, [x29, #-8]
  40:	ldr	x9, [x9]
  44:	str	x9, [sp, #16]
  48:	str	x8, [sp]
  4c:	ldr	x8, [sp, #16]
  50:	cbz	x8, 8c <initialize_ss_error_table_r+0x70>
  54:	ldr	x8, [sp, #16]
  58:	ldr	x8, [x8, #8]
  5c:	ldr	x8, [x8]
  60:	adrp	x9, 0 <initialize_ss_error_table>
  64:	add	x9, x9, #0x0
  68:	cmp	x8, x9
  6c:	b.ne	74 <initialize_ss_error_table_r+0x58>  // b.any
  70:	b	e8 <initialize_ss_error_table_r+0xcc>
  74:	ldr	x8, [sp, #16]
  78:	str	x8, [sp, #8]
  7c:	ldr	x8, [sp, #16]
  80:	ldr	x8, [x8]
  84:	str	x8, [sp, #16]
  88:	b	4c <initialize_ss_error_table_r+0x30>
  8c:	mov	x0, #0x10                  	// #16
  90:	bl	0 <malloc>
  94:	str	x0, [sp, #16]
  98:	ldr	x8, [sp, #16]
  9c:	cbnz	x8, c0 <initialize_ss_error_table_r+0xa4>
  a0:	ldr	x8, [sp]
  a4:	ldr	x9, [x8, #8]
  a8:	cbnz	x9, bc <initialize_ss_error_table_r+0xa0>
  ac:	adrp	x8, 0 <initialize_ss_error_table>
  b0:	add	x8, x8, #0x0
  b4:	str	x8, [sp, #16]
  b8:	b	c0 <initialize_ss_error_table_r+0xa4>
  bc:	b	e8 <initialize_ss_error_table_r+0xcc>
  c0:	ldr	x8, [sp, #16]
  c4:	adrp	x9, 68 <initialize_ss_error_table_r+0x4c>
  c8:	add	x9, x9, #0x0
  cc:	str	x9, [x8, #8]
  d0:	ldr	x8, [sp, #16]
  d4:	mov	x9, xzr
  d8:	str	x9, [x8]
  dc:	ldr	x8, [sp, #16]
  e0:	ldr	x9, [sp, #8]
  e4:	str	x8, [x9]
  e8:	ldp	x29, x30, [sp, #32]
  ec:	add	sp, sp, #0x30
  f0:	ret

std_rqs.o:     file format elf64-littleaarch64


invocation.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_create_invocation>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #96]
   8:	add	x29, sp, #0x60
   c:	adrp	x8, 0 <_ss_table>
  10:	add	x8, x8, #0x0
  14:	mov	x9, #0x90                  	// #144
  18:	stur	x0, [x29, #-16]
  1c:	stur	x1, [x29, #-24]
  20:	stur	x2, [x29, #-32]
  24:	stur	x3, [x29, #-40]
  28:	str	x4, [sp, #48]
  2c:	ldr	x10, [sp, #48]
  30:	str	wzr, [x10]
  34:	ldr	x8, [x8]
  38:	str	x8, [sp, #24]
  3c:	mov	x0, x9
  40:	bl	0 <malloc>
  44:	str	x0, [sp, #32]
  48:	ldr	x8, [sp, #24]
  4c:	cbnz	x8, 70 <ss_create_invocation+0x70>
  50:	mov	x0, #0x10                  	// #16
  54:	bl	0 <malloc>
  58:	str	x0, [sp, #24]
  5c:	ldr	x8, [sp, #24]
  60:	mov	x9, xzr
  64:	str	x9, [x8, #8]
  68:	ldr	x8, [sp, #24]
  6c:	str	x9, [x8]
  70:	bl	0 <initialize_ss_error_table>
  74:	mov	w8, #0x1                   	// #1
  78:	str	w8, [sp, #44]
  7c:	ldr	x8, [sp, #24]
  80:	ldrsw	x9, [sp, #44]
  84:	mov	x10, #0x8                   	// #8
  88:	mul	x9, x10, x9
  8c:	add	x8, x8, x9
  90:	ldr	x8, [x8]
  94:	cbz	x8, a8 <ss_create_invocation+0xa8>
  98:	ldr	w8, [sp, #44]
  9c:	add	w8, w8, #0x1
  a0:	str	w8, [sp, #44]
  a4:	b	7c <ss_create_invocation+0x7c>
  a8:	ldr	x0, [sp, #24]
  ac:	ldr	w8, [sp, #44]
  b0:	add	w8, w8, #0x2
  b4:	mov	w9, #0x8                   	// #8
  b8:	umull	x1, w8, w9
  bc:	bl	0 <realloc>
  c0:	str	x0, [sp, #24]
  c4:	ldr	x10, [sp, #24]
  c8:	cbnz	x10, e8 <ss_create_invocation+0xe8>
  cc:	ldr	x8, [sp, #48]
  d0:	mov	w9, #0xc                   	// #12
  d4:	str	w9, [x8]
  d8:	ldr	x0, [sp, #32]
  dc:	bl	0 <free>
  e0:	stur	wzr, [x29, #-4]
  e4:	b	27c <ss_create_invocation+0x27c>
  e8:	ldr	x8, [sp, #24]
  ec:	ldr	w9, [sp, #44]
  f0:	add	w9, w9, #0x1
  f4:	mov	w0, w9
  f8:	sxtw	x10, w0
  fc:	mov	x11, #0x8                   	// #8
 100:	mul	x10, x11, x10
 104:	add	x8, x8, x10
 108:	mov	x10, xzr
 10c:	str	x10, [x8]
 110:	ldr	x8, [sp, #32]
 114:	ldr	x12, [sp, #24]
 118:	ldrsw	x13, [sp, #44]
 11c:	mul	x11, x11, x13
 120:	add	x11, x12, x11
 124:	str	x8, [x11]
 128:	ldur	x8, [x29, #-16]
 12c:	ldr	x11, [sp, #32]
 130:	str	x8, [x11]
 134:	ldur	x8, [x29, #-24]
 138:	ldr	x11, [sp, #32]
 13c:	str	x8, [x11, #8]
 140:	ldr	x8, [sp, #32]
 144:	str	x10, [x8, #24]
 148:	ldr	x8, [sp, #32]
 14c:	str	x10, [x8, #32]
 150:	mov	x8, #0x8                   	// #8
 154:	mov	x0, x8
 158:	str	x10, [sp, #16]
 15c:	str	x8, [sp, #8]
 160:	bl	0 <malloc>
 164:	ldr	x8, [sp, #32]
 168:	str	x0, [x8, #40]
 16c:	ldr	x8, [sp, #32]
 170:	ldr	x8, [x8, #40]
 174:	ldr	x10, [sp, #16]
 178:	str	x10, [x8]
 17c:	ldur	x8, [x29, #-32]
 180:	ldr	x11, [sp, #32]
 184:	str	x8, [x11, #48]
 188:	ldur	x0, [x29, #-16]
 18c:	bl	0 <strlen>
 190:	add	w9, w0, #0x4
 194:	mov	w8, w9
 198:	ubfx	x0, x8, #0, #32
 19c:	bl	0 <malloc>
 1a0:	ldr	x8, [sp, #32]
 1a4:	str	x0, [x8, #56]
 1a8:	ldr	x8, [sp, #32]
 1ac:	ldr	x0, [x8, #56]
 1b0:	ldur	x1, [x29, #-16]
 1b4:	bl	0 <strcpy>
 1b8:	ldr	x8, [sp, #32]
 1bc:	ldr	x8, [x8, #56]
 1c0:	mov	x0, x8
 1c4:	adrp	x1, 0 <ss_create_invocation>
 1c8:	add	x1, x1, #0x0
 1cc:	bl	0 <strcat>
 1d0:	ldr	x8, [sp, #32]
 1d4:	ldr	x10, [sp, #16]
 1d8:	str	x10, [x8, #72]
 1dc:	ldr	x8, [sp, #32]
 1e0:	ldrb	w9, [x8, #80]
 1e4:	and	w9, w9, #0xfffffffe
 1e8:	strb	w9, [x8, #80]
 1ec:	ldr	x8, [sp, #32]
 1f0:	ldrb	w9, [x8, #80]
 1f4:	and	w9, w9, #0xfffffffd
 1f8:	strb	w9, [x8, #80]
 1fc:	mov	x8, #0x2                   	// #2
 200:	mov	x0, x8
 204:	ldr	x1, [sp, #8]
 208:	bl	0 <calloc>
 20c:	ldr	x8, [sp, #32]
 210:	str	x0, [x8, #64]
 214:	ldur	x8, [x29, #-40]
 218:	ldr	x10, [sp, #32]
 21c:	ldr	x10, [x10, #64]
 220:	str	x8, [x10]
 224:	ldr	x8, [sp, #32]
 228:	ldr	x8, [x8, #64]
 22c:	ldr	x10, [sp, #16]
 230:	str	x10, [x8, #8]
 234:	ldr	x8, [sp, #32]
 238:	str	x10, [x8, #88]
 23c:	ldr	x8, [sp, #32]
 240:	str	x10, [x8, #96]
 244:	ldr	x8, [sp, #32]
 248:	str	x10, [x8, #104]
 24c:	ldr	x8, [sp, #32]
 250:	str	x10, [x8, #112]
 254:	ldr	x8, [sp, #32]
 258:	str	x10, [x8, #120]
 25c:	ldr	x8, [sp, #32]
 260:	str	x10, [x8, #128]
 264:	ldr	x8, [sp, #24]
 268:	adrp	x11, 0 <_ss_table>
 26c:	add	x11, x11, #0x0
 270:	str	x8, [x11]
 274:	ldr	w9, [sp, #44]
 278:	stur	w9, [x29, #-4]
 27c:	ldur	w0, [x29, #-4]
 280:	ldp	x29, x30, [sp, #96]
 284:	add	sp, sp, #0x70
 288:	ret

000000000000028c <ss_delete_invocation>:
 28c:	sub	sp, sp, #0x30
 290:	stp	x29, x30, [sp, #32]
 294:	add	x29, sp, #0x20
 298:	adrp	x8, 0 <_ss_table>
 29c:	add	x8, x8, #0x0
 2a0:	stur	w0, [x29, #-4]
 2a4:	ldr	x8, [x8]
 2a8:	ldursw	x9, [x29, #-4]
 2ac:	mov	x10, #0x8                   	// #8
 2b0:	mul	x9, x10, x9
 2b4:	add	x8, x8, x9
 2b8:	ldr	x8, [x8]
 2bc:	str	x8, [sp, #16]
 2c0:	ldr	x8, [sp, #16]
 2c4:	ldr	x0, [x8, #56]
 2c8:	bl	0 <free>
 2cc:	ldr	x8, [sp, #16]
 2d0:	ldr	x0, [x8, #64]
 2d4:	bl	0 <free>
 2d8:	ldr	x8, [sp, #16]
 2dc:	ldr	x8, [x8, #40]
 2e0:	ldr	x8, [x8]
 2e4:	cbz	x8, 304 <ss_delete_invocation+0x78>
 2e8:	ldur	w0, [x29, #-4]
 2ec:	ldr	x8, [sp, #16]
 2f0:	ldr	x8, [x8, #40]
 2f4:	ldr	x1, [x8]
 2f8:	add	x2, sp, #0xc
 2fc:	bl	0 <ss_delete_info_dir>
 300:	b	2d8 <ss_delete_invocation+0x4c>
 304:	ldr	x8, [sp, #16]
 308:	ldr	x0, [x8, #40]
 30c:	bl	0 <free>
 310:	ldr	x0, [sp, #16]
 314:	bl	0 <free>
 318:	ldp	x29, x30, [sp, #32]
 31c:	add	sp, sp, #0x30
 320:	ret

help.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_help>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #96]
   8:	add	x29, sp, #0x60
   c:	adrp	x8, 0 <_ss_table>
  10:	add	x8, x8, #0x0
  14:	stur	w0, [x29, #-4]
  18:	stur	x1, [x29, #-16]
  1c:	stur	w2, [x29, #-20]
  20:	stur	x3, [x29, #-32]
  24:	str	wzr, [sp, #44]
  28:	ldr	x8, [x8]
  2c:	ldursw	x9, [x29, #-20]
  30:	mov	x10, #0x8                   	// #8
  34:	mul	x9, x10, x9
  38:	add	x8, x8, x9
  3c:	ldr	x8, [x8]
  40:	ldr	x8, [x8, #32]
  44:	str	x8, [sp, #48]
  48:	ldr	w11, [sp, #44]
  4c:	cbz	w11, 68 <ss_help+0x68>
  50:	ldur	w0, [x29, #-20]
  54:	ldrsw	x1, [sp, #44]
  58:	adrp	x2, 0 <ss_help>
  5c:	add	x2, x2, #0x0
  60:	bl	0 <ss_perror>
  64:	b	3c8 <ss_help+0x3c8>
  68:	ldur	w8, [x29, #-4]
  6c:	cmp	w8, #0x1
  70:	b.ne	8c <ss_help+0x8c>  // b.any
  74:	ldur	w0, [x29, #-4]
  78:	ldur	x1, [x29, #-16]
  7c:	ldur	w2, [x29, #-20]
  80:	ldur	x3, [x29, #-32]
  84:	bl	0 <ss_list_requests>
  88:	b	3c8 <ss_help+0x3c8>
  8c:	ldur	w8, [x29, #-4]
  90:	cmp	w8, #0x2
  94:	b.eq	114 <ss_help+0x114>  // b.none
  98:	ldr	x0, [sp, #48]
  9c:	bl	0 <strlen>
  a0:	mov	x8, #0x2                   	// #2
  a4:	mul	x8, x8, x0
  a8:	add	x0, x8, #0x50
  ac:	bl	0 <malloc>
  b0:	stur	x0, [x29, #-40]
  b4:	ldur	x8, [x29, #-40]
  b8:	cbnz	x8, d8 <ss_help+0xd8>
  bc:	ldur	w0, [x29, #-20]
  c0:	mov	x8, xzr
  c4:	mov	x1, x8
  c8:	adrp	x2, 0 <ss_help>
  cc:	add	x2, x2, #0x0
  d0:	bl	0 <ss_perror>
  d4:	b	3c8 <ss_help+0x3c8>
  d8:	ldur	x0, [x29, #-40]
  dc:	ldr	x2, [sp, #48]
  e0:	ldr	x3, [sp, #48]
  e4:	adrp	x1, 0 <ss_help>
  e8:	add	x1, x1, #0x0
  ec:	bl	0 <sprintf>
  f0:	ldur	w8, [x29, #-20]
  f4:	ldur	x2, [x29, #-40]
  f8:	mov	w0, w8
  fc:	mov	x9, xzr
 100:	mov	x1, x9
 104:	bl	0 <ss_perror>
 108:	ldur	x0, [x29, #-40]
 10c:	bl	0 <free>
 110:	b	3c8 <ss_help+0x3c8>
 114:	adrp	x8, 0 <_ss_table>
 118:	add	x8, x8, #0x0
 11c:	ldr	x8, [x8]
 120:	ldursw	x9, [x29, #-20]
 124:	mov	x10, #0x8                   	// #8
 128:	mul	x9, x10, x9
 12c:	add	x8, x8, x9
 130:	ldr	x8, [x8]
 134:	str	x8, [sp, #24]
 138:	ldr	x8, [sp, #24]
 13c:	ldr	x8, [x8, #40]
 140:	cbnz	x8, 160 <ss_help+0x160>
 144:	ldur	w0, [x29, #-20]
 148:	mov	x1, #0x6d03                	// #27907
 14c:	movk	x1, #0xb, lsl #16
 150:	mov	x8, xzr
 154:	mov	x2, x8
 158:	bl	0 <ss_perror>
 15c:	b	3c8 <ss_help+0x3c8>
 160:	ldr	x8, [sp, #24]
 164:	ldr	x8, [x8, #40]
 168:	ldr	x8, [x8]
 16c:	cbnz	x8, 18c <ss_help+0x18c>
 170:	ldur	w0, [x29, #-20]
 174:	mov	x1, #0x6d03                	// #27907
 178:	movk	x1, #0xb, lsl #16
 17c:	mov	x8, xzr
 180:	mov	x2, x8
 184:	bl	0 <ss_perror>
 188:	b	3c8 <ss_help+0x3c8>
 18c:	mov	w8, #0xffffffff            	// #-1
 190:	str	w8, [sp, #40]
 194:	str	wzr, [sp, #32]
 198:	ldr	x8, [sp, #24]
 19c:	ldr	x8, [x8, #40]
 1a0:	ldrsw	x9, [sp, #32]
 1a4:	mov	x10, #0x8                   	// #8
 1a8:	mul	x9, x10, x9
 1ac:	add	x8, x8, x9
 1b0:	ldr	x8, [x8]
 1b4:	cbz	x8, 2c8 <ss_help+0x2c8>
 1b8:	ldr	x8, [sp, #24]
 1bc:	ldr	x8, [x8, #40]
 1c0:	ldrsw	x9, [sp, #32]
 1c4:	mov	x10, #0x8                   	// #8
 1c8:	mul	x9, x10, x9
 1cc:	add	x8, x8, x9
 1d0:	ldr	x0, [x8]
 1d4:	bl	0 <strlen>
 1d8:	add	x8, x0, #0x1
 1dc:	ldur	x9, [x29, #-16]
 1e0:	ldr	x0, [x9, #8]
 1e4:	str	x8, [sp, #8]
 1e8:	bl	0 <strlen>
 1ec:	ldr	x8, [sp, #8]
 1f0:	add	x9, x8, x0
 1f4:	add	x0, x9, #0x6
 1f8:	bl	0 <malloc>
 1fc:	stur	x0, [x29, #-40]
 200:	ldur	x8, [x29, #-40]
 204:	cbnz	x8, 224 <ss_help+0x224>
 208:	ldur	w0, [x29, #-20]
 20c:	mov	x8, xzr
 210:	mov	x1, x8
 214:	adrp	x2, 0 <ss_help>
 218:	add	x2, x2, #0x0
 21c:	bl	0 <ss_perror>
 220:	b	3c8 <ss_help+0x3c8>
 224:	ldur	x0, [x29, #-40]
 228:	ldr	x8, [sp, #24]
 22c:	ldr	x8, [x8, #40]
 230:	ldrsw	x9, [sp, #32]
 234:	mov	x10, #0x8                   	// #8
 238:	mul	x9, x10, x9
 23c:	add	x8, x8, x9
 240:	ldr	x1, [x8]
 244:	bl	0 <strcpy>
 248:	ldur	x8, [x29, #-40]
 24c:	mov	x0, x8
 250:	adrp	x1, 0 <ss_help>
 254:	add	x1, x1, #0x0
 258:	bl	0 <strcat>
 25c:	ldur	x8, [x29, #-40]
 260:	ldur	x9, [x29, #-16]
 264:	ldr	x1, [x9, #8]
 268:	mov	x0, x8
 26c:	bl	0 <strcat>
 270:	ldur	x8, [x29, #-40]
 274:	mov	x0, x8
 278:	adrp	x1, 0 <ss_help>
 27c:	add	x1, x1, #0x0
 280:	bl	0 <strcat>
 284:	ldur	x8, [x29, #-40]
 288:	mov	x0, x8
 28c:	mov	w11, wzr
 290:	mov	w1, w11
 294:	bl	0 <open>
 298:	str	w0, [sp, #40]
 29c:	ldur	x0, [x29, #-40]
 2a0:	bl	0 <free>
 2a4:	ldr	w11, [sp, #40]
 2a8:	cmp	w11, #0x0
 2ac:	cset	w11, lt  // lt = tstop
 2b0:	tbnz	w11, #0, 2b8 <ss_help+0x2b8>
 2b4:	b	2c8 <ss_help+0x2c8>
 2b8:	ldr	w8, [sp, #32]
 2bc:	add	w8, w8, #0x1
 2c0:	str	w8, [sp, #32]
 2c4:	b	198 <ss_help+0x198>
 2c8:	ldr	w8, [sp, #40]
 2cc:	cmp	w8, #0x0
 2d0:	cset	w8, ge  // ge = tcont
 2d4:	tbnz	w8, #0, 33c <ss_help+0x33c>
 2d8:	ldur	x8, [x29, #-16]
 2dc:	ldr	x0, [x8, #8]
 2e0:	bl	0 <strlen>
 2e4:	add	x8, x0, #0x12
 2e8:	add	x0, x8, #0x1
 2ec:	bl	0 <malloc>
 2f0:	str	x0, [sp, #16]
 2f4:	ldr	x0, [sp, #16]
 2f8:	adrp	x1, 0 <ss_help>
 2fc:	add	x1, x1, #0x0
 300:	bl	0 <strcpy>
 304:	ldr	x8, [sp, #16]
 308:	ldur	x9, [x29, #-16]
 30c:	ldr	x1, [x9, #8]
 310:	mov	x0, x8
 314:	bl	0 <strcat>
 318:	ldur	w10, [x29, #-20]
 31c:	ldr	x2, [sp, #16]
 320:	mov	w0, w10
 324:	mov	x8, xzr
 328:	mov	x1, x8
 32c:	bl	0 <ss_perror>
 330:	ldr	x0, [sp, #16]
 334:	bl	0 <free>
 338:	b	3c8 <ss_help+0x3c8>
 33c:	bl	0 <fork>
 340:	str	w0, [sp, #36]
 344:	mov	w8, #0xffffffff            	// #-1
 348:	cmp	w0, w8
 34c:	str	w0, [sp, #4]
 350:	b.eq	364 <ss_help+0x364>  // b.none
 354:	b	358 <ss_help+0x358>
 358:	ldr	w8, [sp, #4]
 35c:	cbz	w8, 390 <ss_help+0x390>
 360:	b	3a4 <ss_help+0x3a4>
 364:	ldur	w0, [x29, #-20]
 368:	str	w0, [sp]
 36c:	bl	0 <__errno_location>
 370:	ldrsw	x1, [x0]
 374:	ldr	w0, [sp]
 378:	adrp	x2, 0 <ss_help>
 37c:	add	x2, x2, #0x0
 380:	bl	0 <ss_perror>
 384:	ldr	w0, [sp, #40]
 388:	bl	0 <close>
 38c:	b	3c8 <ss_help+0x3c8>
 390:	ldr	w0, [sp, #40]
 394:	mov	w8, wzr
 398:	mov	w1, w8
 39c:	bl	0 <dup2>
 3a0:	bl	0 <ss_page_stdin>
 3a4:	ldr	w0, [sp, #40]
 3a8:	bl	0 <close>
 3ac:	mov	x8, xzr
 3b0:	mov	x0, x8
 3b4:	bl	0 <wait>
 3b8:	ldr	w9, [sp, #36]
 3bc:	cmp	w0, w9
 3c0:	b.eq	3c8 <ss_help+0x3c8>  // b.none
 3c4:	b	3ac <ss_help+0x3ac>
 3c8:	ldp	x29, x30, [sp, #96]
 3cc:	add	sp, sp, #0x70
 3d0:	ret

00000000000003d4 <ss_add_info_dir>:
 3d4:	sub	sp, sp, #0x50
 3d8:	stp	x29, x30, [sp, #64]
 3dc:	add	x29, sp, #0x40
 3e0:	adrp	x8, 0 <_ss_table>
 3e4:	add	x8, x8, #0x0
 3e8:	stur	w0, [x29, #-4]
 3ec:	stur	x1, [x29, #-16]
 3f0:	stur	x2, [x29, #-24]
 3f4:	ldr	x8, [x8]
 3f8:	ldursw	x9, [x29, #-4]
 3fc:	mov	x10, #0x8                   	// #8
 400:	mul	x9, x10, x9
 404:	add	x8, x8, x9
 408:	ldr	x8, [x8]
 40c:	str	x8, [sp, #32]
 410:	ldur	x8, [x29, #-16]
 414:	cbz	x8, 424 <ss_add_info_dir+0x50>
 418:	ldur	x8, [x29, #-16]
 41c:	ldrb	w9, [x8]
 420:	cbnz	w9, 438 <ss_add_info_dir+0x64>
 424:	ldur	x8, [x29, #-24]
 428:	mov	w9, #0x6d03                	// #27907
 42c:	movk	w9, #0xb, lsl #16
 430:	str	w9, [x8]
 434:	b	570 <ss_add_info_dir+0x19c>
 438:	ldur	x0, [x29, #-16]
 43c:	bl	0 <opendir>
 440:	str	x0, [sp, #24]
 444:	cbnz	x0, 45c <ss_add_info_dir+0x88>
 448:	bl	0 <__errno_location>
 44c:	ldr	w8, [x0]
 450:	ldur	x9, [x29, #-24]
 454:	str	w8, [x9]
 458:	b	570 <ss_add_info_dir+0x19c>
 45c:	ldr	x0, [sp, #24]
 460:	bl	0 <closedir>
 464:	ldr	x8, [sp, #32]
 468:	ldr	x8, [x8, #40]
 46c:	str	x8, [sp, #8]
 470:	str	wzr, [sp, #20]
 474:	ldr	x8, [sp, #8]
 478:	ldrsw	x9, [sp, #20]
 47c:	mov	x10, #0x8                   	// #8
 480:	mul	x9, x10, x9
 484:	add	x8, x8, x9
 488:	ldr	x8, [x8]
 48c:	cbz	x8, 4a0 <ss_add_info_dir+0xcc>
 490:	ldr	w8, [sp, #20]
 494:	add	w8, w8, #0x1
 498:	str	w8, [sp, #20]
 49c:	b	474 <ss_add_info_dir+0xa0>
 4a0:	ldr	x0, [sp, #8]
 4a4:	ldr	w8, [sp, #20]
 4a8:	add	w8, w8, #0x2
 4ac:	mov	w9, #0x8                   	// #8
 4b0:	umull	x1, w8, w9
 4b4:	bl	0 <realloc>
 4b8:	str	x0, [sp, #8]
 4bc:	ldr	x10, [sp, #8]
 4c0:	cbnz	x10, 4e4 <ss_add_info_dir+0x110>
 4c4:	ldr	x8, [sp, #32]
 4c8:	mov	x9, xzr
 4cc:	str	x9, [x8, #40]
 4d0:	bl	0 <__errno_location>
 4d4:	ldr	w10, [x0]
 4d8:	ldur	x8, [x29, #-24]
 4dc:	str	w10, [x8]
 4e0:	b	570 <ss_add_info_dir+0x19c>
 4e4:	ldr	x8, [sp, #8]
 4e8:	ldr	x9, [sp, #32]
 4ec:	str	x8, [x9, #40]
 4f0:	ldr	x8, [sp, #8]
 4f4:	ldr	w10, [sp, #20]
 4f8:	add	w10, w10, #0x1
 4fc:	mov	w0, w10
 500:	sxtw	x9, w0
 504:	mov	x11, #0x8                   	// #8
 508:	mul	x9, x11, x9
 50c:	add	x8, x8, x9
 510:	mov	x9, xzr
 514:	str	x9, [x8]
 518:	ldur	x0, [x29, #-16]
 51c:	str	x11, [sp]
 520:	bl	0 <strlen>
 524:	add	w10, w0, #0x1
 528:	mov	w8, w10
 52c:	ubfx	x0, x8, #0, #32
 530:	bl	0 <malloc>
 534:	ldr	x8, [sp, #8]
 538:	ldrsw	x9, [sp, #20]
 53c:	ldr	x11, [sp]
 540:	mul	x9, x11, x9
 544:	add	x8, x8, x9
 548:	str	x0, [x8]
 54c:	ldr	x8, [sp, #8]
 550:	ldrsw	x9, [sp, #20]
 554:	mul	x9, x11, x9
 558:	add	x8, x8, x9
 55c:	ldr	x0, [x8]
 560:	ldur	x1, [x29, #-16]
 564:	bl	0 <strcpy>
 568:	ldur	x8, [x29, #-24]
 56c:	str	wzr, [x8]
 570:	ldp	x29, x30, [sp, #64]
 574:	add	sp, sp, #0x50
 578:	ret

000000000000057c <ss_delete_info_dir>:
 57c:	sub	sp, sp, #0x40
 580:	stp	x29, x30, [sp, #48]
 584:	add	x29, sp, #0x30
 588:	adrp	x8, 0 <_ss_table>
 58c:	add	x8, x8, #0x0
 590:	stur	w0, [x29, #-4]
 594:	stur	x1, [x29, #-16]
 598:	str	x2, [sp, #24]
 59c:	ldr	x8, [x8]
 5a0:	ldursw	x9, [x29, #-4]
 5a4:	mov	x10, #0x8                   	// #8
 5a8:	mul	x9, x10, x9
 5ac:	add	x8, x8, x9
 5b0:	ldr	x8, [x8]
 5b4:	ldr	x8, [x8, #40]
 5b8:	str	x8, [sp, #8]
 5bc:	ldr	x8, [sp, #8]
 5c0:	str	x8, [sp, #16]
 5c4:	ldr	x8, [sp, #16]
 5c8:	ldr	x8, [x8]
 5cc:	cbz	x8, 62c <ss_delete_info_dir+0xb0>
 5d0:	ldr	x8, [sp, #16]
 5d4:	ldr	x0, [x8]
 5d8:	ldur	x1, [x29, #-16]
 5dc:	bl	0 <strcmp>
 5e0:	cbnz	w0, 61c <ss_delete_info_dir+0xa0>
 5e4:	ldr	x8, [sp, #16]
 5e8:	ldr	x8, [x8]
 5ec:	cbz	x8, 610 <ss_delete_info_dir+0x94>
 5f0:	ldr	x8, [sp, #16]
 5f4:	ldr	x8, [x8, #8]
 5f8:	ldr	x9, [sp, #16]
 5fc:	str	x8, [x9]
 600:	ldr	x8, [sp, #16]
 604:	add	x8, x8, #0x8
 608:	str	x8, [sp, #16]
 60c:	b	5e4 <ss_delete_info_dir+0x68>
 610:	ldr	x8, [sp, #24]
 614:	str	wzr, [x8]
 618:	b	63c <ss_delete_info_dir+0xc0>
 61c:	ldr	x8, [sp, #16]
 620:	add	x8, x8, #0x8
 624:	str	x8, [sp, #16]
 628:	b	5c4 <ss_delete_info_dir+0x48>
 62c:	ldr	x8, [sp, #24]
 630:	mov	w9, #0x6d03                	// #27907
 634:	movk	w9, #0xb, lsl #16
 638:	str	w9, [x8]
 63c:	ldp	x29, x30, [sp, #48]
 640:	add	sp, sp, #0x40
 644:	ret

execute_cmd.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_execute_command>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	stur	w0, [x29, #-4]
  10:	str	x1, [sp, #16]
  14:	str	wzr, [sp, #8]
  18:	ldr	x8, [sp, #16]
  1c:	str	x8, [sp]
  20:	ldr	x8, [sp]
  24:	ldr	x8, [x8]
  28:	cbz	x8, 48 <ss_execute_command+0x48>
  2c:	ldr	w8, [sp, #8]
  30:	add	w8, w8, #0x1
  34:	str	w8, [sp, #8]
  38:	ldr	x8, [sp]
  3c:	add	x8, x8, #0x8
  40:	str	x8, [sp]
  44:	b	20 <ss_execute_command+0x20>
  48:	ldr	w8, [sp, #8]
  4c:	add	w8, w8, #0x1
  50:	mov	w9, #0x8                   	// #8
  54:	smull	x0, w8, w9
  58:	bl	0 <malloc>
  5c:	str	x0, [sp]
  60:	str	wzr, [sp, #12]
  64:	ldr	w8, [sp, #12]
  68:	ldr	w9, [sp, #8]
  6c:	cmp	w8, w9
  70:	b.gt	b0 <ss_execute_command+0xb0>
  74:	ldr	x8, [sp, #16]
  78:	ldrsw	x9, [sp, #12]
  7c:	mov	x10, #0x8                   	// #8
  80:	mul	x9, x10, x9
  84:	add	x8, x8, x9
  88:	ldr	x8, [x8]
  8c:	ldr	x9, [sp]
  90:	ldrsw	x11, [sp, #12]
  94:	mul	x10, x10, x11
  98:	add	x9, x9, x10
  9c:	str	x8, [x9]
  a0:	ldr	w8, [sp, #12]
  a4:	add	w8, w8, #0x1
  a8:	str	w8, [sp, #12]
  ac:	b	64 <ss_execute_command+0x64>
  b0:	ldur	w0, [x29, #-4]
  b4:	ldr	w1, [sp, #8]
  b8:	mov	x2, sp
  bc:	bl	dc <really_execute_command>
  c0:	str	w0, [sp, #12]
  c4:	ldr	x0, [sp]
  c8:	bl	0 <free>
  cc:	ldr	w0, [sp, #12]
  d0:	ldp	x29, x30, [sp, #32]
  d4:	add	sp, sp, #0x30
  d8:	ret

00000000000000dc <really_execute_command>:
  dc:	sub	sp, sp, #0x40
  e0:	stp	x29, x30, [sp, #48]
  e4:	add	x29, sp, #0x30
  e8:	adrp	x8, 0 <_ss_table>
  ec:	add	x8, x8, #0x0
  f0:	stur	w0, [x29, #-8]
  f4:	stur	w1, [x29, #-12]
  f8:	str	x2, [sp, #24]
  fc:	ldr	x8, [x8]
 100:	ldursw	x9, [x29, #-8]
 104:	mov	x10, #0x8                   	// #8
 108:	mul	x9, x10, x9
 10c:	add	x8, x8, x9
 110:	ldr	x8, [x8]
 114:	str	x8, [sp, #8]
 118:	ldr	x8, [sp, #8]
 11c:	ldr	x8, [x8, #64]
 120:	str	x8, [sp, #16]
 124:	ldr	x8, [sp, #16]
 128:	ldr	x8, [x8]
 12c:	cbz	x8, 168 <really_execute_command+0x8c>
 130:	ldr	x8, [sp, #16]
 134:	ldr	x0, [x8]
 138:	ldur	w1, [x29, #-12]
 13c:	ldr	x8, [sp, #24]
 140:	ldr	x2, [x8]
 144:	ldur	w3, [x29, #-8]
 148:	bl	2d4 <check_request_table>
 14c:	cbnz	w0, 158 <really_execute_command+0x7c>
 150:	stur	wzr, [x29, #-4]
 154:	b	174 <really_execute_command+0x98>
 158:	ldr	x8, [sp, #16]
 15c:	add	x8, x8, #0x8
 160:	str	x8, [sp, #16]
 164:	b	124 <really_execute_command+0x48>
 168:	mov	w8, #0x6d04                	// #27908
 16c:	movk	w8, #0xb, lsl #16
 170:	stur	w8, [x29, #-4]
 174:	ldur	w0, [x29, #-4]
 178:	ldp	x29, x30, [sp, #48]
 17c:	add	sp, sp, #0x40
 180:	ret

0000000000000184 <ss_execute_line>:
 184:	sub	sp, sp, #0x40
 188:	stp	x29, x30, [sp, #48]
 18c:	add	x29, sp, #0x30
 190:	stur	w0, [x29, #-8]
 194:	stur	x1, [x29, #-16]
 198:	ldur	x8, [x29, #-16]
 19c:	ldrb	w9, [x8]
 1a0:	mov	w10, #0x1                   	// #1
 1a4:	cmp	w9, #0x20
 1a8:	str	w10, [sp, #12]
 1ac:	b.eq	1c4 <ss_execute_line+0x40>  // b.none
 1b0:	ldur	x8, [x29, #-16]
 1b4:	ldrb	w9, [x8]
 1b8:	cmp	w9, #0x9
 1bc:	cset	w9, eq  // eq = none
 1c0:	str	w9, [sp, #12]
 1c4:	ldr	w8, [sp, #12]
 1c8:	tbnz	w8, #0, 1d0 <ss_execute_line+0x4c>
 1cc:	b	1e0 <ss_execute_line+0x5c>
 1d0:	ldur	x8, [x29, #-16]
 1d4:	add	x8, x8, #0x1
 1d8:	stur	x8, [x29, #-16]
 1dc:	b	198 <ss_execute_line+0x14>
 1e0:	ldur	x8, [x29, #-16]
 1e4:	ldrb	w9, [x8]
 1e8:	cmp	w9, #0x21
 1ec:	b.ne	274 <ss_execute_line+0xf0>  // b.any
 1f0:	adrp	x8, 0 <_ss_table>
 1f4:	add	x8, x8, #0x0
 1f8:	ldr	x8, [x8]
 1fc:	ldursw	x9, [x29, #-8]
 200:	mov	x10, #0x8                   	// #8
 204:	mul	x9, x10, x9
 208:	add	x8, x8, x9
 20c:	ldr	x8, [x8]
 210:	ldrb	w11, [x8, #80]
 214:	and	w11, w11, #0x1
 218:	and	w11, w11, #0xff
 21c:	cbz	w11, 230 <ss_execute_line+0xac>
 220:	mov	w8, #0x6d0a                	// #27914
 224:	movk	w8, #0xb, lsl #16
 228:	stur	w8, [x29, #-4]
 22c:	b	2c4 <ss_execute_line+0x140>
 230:	ldur	x8, [x29, #-16]
 234:	add	x8, x8, #0x1
 238:	stur	x8, [x29, #-16]
 23c:	ldur	x0, [x29, #-16]
 240:	bl	0 <system>
 244:	cmp	w0, #0x0
 248:	cset	w9, ge  // ge = tcont
 24c:	tbnz	w9, #0, 260 <ss_execute_line+0xdc>
 250:	bl	0 <__errno_location>
 254:	ldr	w8, [x0]
 258:	str	w8, [sp, #8]
 25c:	b	268 <ss_execute_line+0xe4>
 260:	mov	w8, wzr
 264:	str	w8, [sp, #8]
 268:	ldr	w8, [sp, #8]
 26c:	stur	w8, [x29, #-4]
 270:	b	2c4 <ss_execute_line+0x140>
 274:	ldur	w0, [x29, #-8]
 278:	ldur	x1, [x29, #-16]
 27c:	add	x2, sp, #0x14
 280:	bl	0 <ss_parse>
 284:	str	x0, [sp, #24]
 288:	ldr	w8, [sp, #20]
 28c:	cbnz	w8, 2a0 <ss_execute_line+0x11c>
 290:	ldr	x0, [sp, #24]
 294:	bl	0 <free>
 298:	stur	wzr, [x29, #-4]
 29c:	b	2c4 <ss_execute_line+0x140>
 2a0:	ldur	w0, [x29, #-8]
 2a4:	ldr	w1, [sp, #20]
 2a8:	add	x2, sp, #0x18
 2ac:	bl	dc <really_execute_command>
 2b0:	str	w0, [sp, #16]
 2b4:	ldr	x0, [sp, #24]
 2b8:	bl	0 <free>
 2bc:	ldr	w8, [sp, #16]
 2c0:	stur	w8, [x29, #-4]
 2c4:	ldur	w0, [x29, #-4]
 2c8:	ldp	x29, x30, [sp, #48]
 2cc:	add	sp, sp, #0x40
 2d0:	ret

00000000000002d4 <check_request_table>:
 2d4:	sub	sp, sp, #0x60
 2d8:	stp	x29, x30, [sp, #80]
 2dc:	add	x29, sp, #0x50
 2e0:	adrp	x8, 0 <_ss_table>
 2e4:	add	x8, x8, #0x0
 2e8:	stur	x0, [x29, #-16]
 2ec:	stur	w1, [x29, #-20]
 2f0:	stur	x2, [x29, #-32]
 2f4:	stur	w3, [x29, #-36]
 2f8:	ldur	x9, [x29, #-32]
 2fc:	ldr	x9, [x9]
 300:	str	x9, [sp, #8]
 304:	ldr	x8, [x8]
 308:	ldursw	x9, [x29, #-36]
 30c:	mov	x10, #0x8                   	// #8
 310:	mul	x9, x10, x9
 314:	add	x8, x8, x9
 318:	ldr	x8, [x8]
 31c:	str	x8, [sp, #24]
 320:	ldur	w11, [x29, #-20]
 324:	ldr	x8, [sp, #24]
 328:	str	w11, [x8, #16]
 32c:	ldur	x8, [x29, #-32]
 330:	ldr	x9, [sp, #24]
 334:	str	x8, [x9, #24]
 338:	str	wzr, [sp, #4]
 33c:	ldur	x8, [x29, #-16]
 340:	ldr	x8, [x8, #8]
 344:	ldrsw	x9, [sp, #4]
 348:	mov	x10, #0x20                  	// #32
 34c:	mul	x9, x10, x9
 350:	add	x8, x8, x9
 354:	str	x8, [sp, #32]
 358:	ldr	x8, [x8]
 35c:	cbz	x8, 3f4 <check_request_table+0x120>
 360:	ldr	x8, [sp, #32]
 364:	ldr	x8, [x8]
 368:	str	x8, [sp, #16]
 36c:	ldr	x8, [sp, #16]
 370:	ldr	x8, [x8]
 374:	cbz	x8, 3e4 <check_request_table+0x110>
 378:	ldr	x8, [sp, #16]
 37c:	ldr	x0, [x8]
 380:	ldr	x1, [sp, #8]
 384:	bl	0 <strcmp>
 388:	cbnz	w0, 3d4 <check_request_table+0x100>
 38c:	ldr	x8, [sp, #32]
 390:	ldr	x8, [x8]
 394:	ldr	x8, [x8]
 398:	ldr	x9, [sp, #24]
 39c:	str	x8, [x9, #32]
 3a0:	ldr	x8, [sp, #32]
 3a4:	ldr	x8, [x8, #8]
 3a8:	ldur	w0, [x29, #-20]
 3ac:	ldur	x1, [x29, #-32]
 3b0:	ldur	w2, [x29, #-36]
 3b4:	ldr	x9, [sp, #24]
 3b8:	ldr	x3, [x9, #48]
 3bc:	blr	x8
 3c0:	ldr	x8, [sp, #24]
 3c4:	mov	x9, xzr
 3c8:	str	x9, [x8, #32]
 3cc:	stur	wzr, [x29, #-4]
 3d0:	b	400 <check_request_table+0x12c>
 3d4:	ldr	x8, [sp, #16]
 3d8:	add	x8, x8, #0x8
 3dc:	str	x8, [sp, #16]
 3e0:	b	36c <check_request_table+0x98>
 3e4:	ldr	w8, [sp, #4]
 3e8:	add	w8, w8, #0x1
 3ec:	str	w8, [sp, #4]
 3f0:	b	33c <check_request_table+0x68>
 3f4:	mov	w8, #0x6d04                	// #27908
 3f8:	movk	w8, #0xb, lsl #16
 3fc:	stur	w8, [x29, #-4]
 400:	ldur	w0, [x29, #-4]
 404:	ldp	x29, x30, [sp, #80]
 408:	add	sp, sp, #0x60
 40c:	ret

listen.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_listen>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x28, [sp, #16]
   8:	mov	x29, sp
   c:	sub	sp, sp, #0x2, lsl #12
  10:	sub	sp, sp, #0x2f0
  14:	adrp	x8, 0 <ss_listen>
  18:	add	x8, x8, #0x0
  1c:	adrp	x9, 0 <_ss_table>
  20:	add	x9, x9, #0x0
  24:	mov	x10, xzr
  28:	adrp	x11, 0 <ss_listen>
  2c:	add	x11, x11, #0x0
  30:	mov	w12, wzr
  34:	mov	w13, #0x2                   	// #2
  38:	adrp	x14, 0 <ss_listen>
  3c:	add	x14, x14, #0x0
  40:	mov	x2, #0x138                 	// #312
  44:	adrp	x1, 0 <ss_listen>
  48:	add	x1, x1, #0x0
  4c:	mov	x3, x10
  50:	add	x15, sp, #0x248
  54:	add	x16, sp, #0x1c8
  58:	add	x17, sp, #0x88
  5c:	stur	w0, [x29, #-4]
  60:	ldr	x18, [x8]
  64:	str	x18, [sp, #128]
  68:	ldr	x9, [x9]
  6c:	ldursw	x18, [x29, #-4]
  70:	mov	x4, #0x8                   	// #8
  74:	mul	x18, x4, x18
  78:	add	x9, x9, x18
  7c:	ldr	x9, [x9]
  80:	stur	x9, [x29, #-24]
  84:	str	x9, [x8]
  88:	str	x10, [x11]
  8c:	ldur	x9, [x29, #-24]
  90:	str	wzr, [x9, #136]
  94:	mov	x0, x16
  98:	str	x8, [sp, #104]
  9c:	str	x11, [sp, #96]
  a0:	str	w12, [sp, #92]
  a4:	str	w13, [sp, #88]
  a8:	str	x14, [sp, #80]
  ac:	str	x2, [sp, #72]
  b0:	str	x1, [sp, #64]
  b4:	str	x3, [sp, #56]
  b8:	str	x15, [sp, #48]
  bc:	str	x16, [sp, #40]
  c0:	str	x17, [sp, #32]
  c4:	bl	0 <sigemptyset>
  c8:	ldr	x8, [sp, #40]
  cc:	mov	x0, x8
  d0:	ldr	w1, [sp, #88]
  d4:	bl	0 <sigaddset>
  d8:	ldr	w12, [sp, #92]
  dc:	mov	w0, w12
  e0:	ldr	x1, [sp, #40]
  e4:	ldr	x2, [sp, #48]
  e8:	bl	0 <sigprocmask>
  ec:	ldr	x8, [sp, #32]
  f0:	mov	x0, x8
  f4:	ldr	x1, [sp, #80]
  f8:	ldr	x2, [sp, #72]
  fc:	bl	0 <memcpy>
 100:	ldr	w0, [sp, #88]
 104:	ldr	x1, [sp, #64]
 108:	bl	0 <signal>
 10c:	stur	x0, [x29, #-32]
 110:	ldr	x0, [sp, #80]
 114:	bl	0 <_setjmp>
 118:	ldr	w12, [sp, #88]
 11c:	mov	w0, w12
 120:	ldr	x1, [sp, #48]
 124:	ldr	x2, [sp, #56]
 128:	bl	0 <sigprocmask>
 12c:	ldur	x8, [x29, #-24]
 130:	ldr	w9, [x8, #136]
 134:	cmp	w9, #0x0
 138:	cset	w9, ne  // ne = any
 13c:	eor	w9, w9, #0x1
 140:	tbnz	w9, #0, 148 <ss_listen+0x148>
 144:	b	398 <ss_listen+0x398>
 148:	ldr	x8, [sp, #96]
 14c:	ldr	x9, [x8]
 150:	stur	x9, [x29, #-40]
 154:	mov	w0, #0x12                  	// #18
 158:	adrp	x9, 0 <ss_listen>
 15c:	add	x9, x9, #0x0
 160:	mov	x1, x9
 164:	str	x9, [sp, #24]
 168:	bl	0 <signal>
 16c:	ldr	x8, [sp, #96]
 170:	str	x0, [x8]
 174:	ldr	x9, [x8]
 178:	ldr	x10, [sp, #24]
 17c:	cmp	x9, x10
 180:	b.ne	190 <ss_listen+0x190>  // b.any
 184:	ldur	x8, [x29, #-40]
 188:	ldr	x9, [sp, #96]
 18c:	str	x8, [x9]
 190:	ldur	x8, [x29, #-24]
 194:	ldr	x8, [x8, #104]
 198:	cbz	x8, 1bc <ss_listen+0x1bc>
 19c:	ldur	x8, [x29, #-24]
 1a0:	ldr	x8, [x8, #104]
 1a4:	ldr	x9, [sp, #104]
 1a8:	ldr	x10, [x9]
 1ac:	ldr	x0, [x10, #56]
 1b0:	blr	x8
 1b4:	str	x0, [sp, #120]
 1b8:	b	21c <ss_listen+0x21c>
 1bc:	mov	w8, wzr
 1c0:	mov	w0, w8
 1c4:	bl	454 <print_prompt>
 1c8:	adrp	x9, 0 <stdin>
 1cc:	add	x9, x9, #0x0
 1d0:	ldr	x2, [x9]
 1d4:	add	x9, sp, #0x2c8
 1d8:	mov	x0, x9
 1dc:	mov	w1, #0x2000                	// #8192
 1e0:	str	x9, [sp, #16]
 1e4:	bl	0 <fgets>
 1e8:	ldr	x9, [sp, #16]
 1ec:	cmp	x0, x9
 1f0:	b.ne	200 <ss_listen+0x200>  // b.any
 1f4:	add	x8, sp, #0x2c8
 1f8:	str	x8, [sp, #120]
 1fc:	b	208 <ss_listen+0x208>
 200:	mov	x8, xzr
 204:	str	x8, [sp, #120]
 208:	mov	x8, #0x1fff                	// #8191
 20c:	add	x9, sp, #0x2c8
 210:	add	x8, x9, x8
 214:	mov	w10, #0x0                   	// #0
 218:	strb	w10, [x8]
 21c:	ldr	x8, [sp, #120]
 220:	cbnz	x8, 244 <ss_listen+0x244>
 224:	mov	w8, #0x6d06                	// #27910
 228:	movk	w8, #0xb, lsl #16
 22c:	str	w8, [sp, #452]
 230:	ldr	x9, [sp, #96]
 234:	ldr	x1, [x9]
 238:	mov	w0, #0x12                  	// #18
 23c:	bl	0 <signal>
 240:	b	39c <ss_listen+0x39c>
 244:	ldr	x0, [sp, #120]
 248:	mov	w1, #0xa                   	// #10
 24c:	bl	0 <strchr>
 250:	stur	x0, [x29, #-16]
 254:	ldur	x8, [x29, #-16]
 258:	cbz	x8, 27c <ss_listen+0x27c>
 25c:	ldur	x8, [x29, #-16]
 260:	mov	w9, #0x0                   	// #0
 264:	strb	w9, [x8]
 268:	ldur	x8, [x29, #-16]
 26c:	ldr	x10, [sp, #120]
 270:	cmp	x8, x10
 274:	b.ne	27c <ss_listen+0x27c>  // b.any
 278:	b	12c <ss_listen+0x12c>
 27c:	ldr	x8, [sp, #96]
 280:	ldr	x1, [x8]
 284:	mov	w0, #0x12                  	// #18
 288:	bl	0 <signal>
 28c:	ldur	x8, [x29, #-24]
 290:	ldr	x8, [x8, #112]
 294:	cbz	x8, 2a8 <ss_listen+0x2a8>
 298:	ldur	x8, [x29, #-24]
 29c:	ldr	x8, [x8, #112]
 2a0:	ldr	x0, [sp, #120]
 2a4:	blr	x8
 2a8:	ldur	w0, [x29, #-4]
 2ac:	ldr	x1, [sp, #120]
 2b0:	bl	0 <ss_execute_line>
 2b4:	str	w0, [sp, #452]
 2b8:	ldrsw	x8, [sp, #452]
 2bc:	mov	x9, #0x6d04                	// #27908
 2c0:	movk	x9, #0xb, lsl #16
 2c4:	cmp	x8, x9
 2c8:	b.ne	380 <ss_listen+0x380>  // b.any
 2cc:	ldr	x8, [sp, #120]
 2d0:	str	x8, [sp, #112]
 2d4:	ldr	x8, [sp, #112]
 2d8:	ldrb	w9, [x8]
 2dc:	mov	w10, #0x1                   	// #1
 2e0:	cmp	w9, #0x20
 2e4:	str	w10, [sp, #12]
 2e8:	b.eq	300 <ss_listen+0x300>  // b.none
 2ec:	ldr	x8, [sp, #112]
 2f0:	ldrb	w9, [x8]
 2f4:	cmp	w9, #0x9
 2f8:	cset	w9, eq  // eq = none
 2fc:	str	w9, [sp, #12]
 300:	ldr	w8, [sp, #12]
 304:	tbnz	w8, #0, 30c <ss_listen+0x30c>
 308:	b	31c <ss_listen+0x31c>
 30c:	ldr	x8, [sp, #112]
 310:	add	x8, x8, #0x1
 314:	str	x8, [sp, #112]
 318:	b	2d4 <ss_listen+0x2d4>
 31c:	ldr	x0, [sp, #112]
 320:	mov	w1, #0x20                  	// #32
 324:	bl	0 <strchr>
 328:	stur	x0, [x29, #-16]
 32c:	ldur	x8, [x29, #-16]
 330:	cbz	x8, 340 <ss_listen+0x340>
 334:	ldur	x8, [x29, #-16]
 338:	mov	w9, #0x0                   	// #0
 33c:	strb	w9, [x8]
 340:	ldr	x0, [sp, #112]
 344:	mov	w1, #0x9                   	// #9
 348:	bl	0 <strchr>
 34c:	stur	x0, [x29, #-16]
 350:	ldur	x8, [x29, #-16]
 354:	cbz	x8, 364 <ss_listen+0x364>
 358:	ldur	x8, [x29, #-16]
 35c:	mov	w9, #0x0                   	// #0
 360:	strb	w9, [x8]
 364:	ldur	w0, [x29, #-4]
 368:	ldr	x3, [sp, #112]
 36c:	mov	x8, xzr
 370:	mov	x1, x8
 374:	adrp	x2, 0 <ss_listen>
 378:	add	x2, x2, #0x0
 37c:	bl	0 <ss_error>
 380:	ldur	x8, [x29, #-24]
 384:	ldr	x8, [x8, #104]
 388:	cbz	x8, 394 <ss_listen+0x394>
 38c:	ldr	x0, [sp, #120]
 390:	bl	0 <free>
 394:	b	12c <ss_listen+0x12c>
 398:	str	wzr, [sp, #452]
 39c:	ldur	x1, [x29, #-32]
 3a0:	mov	w0, #0x2                   	// #2
 3a4:	bl	0 <signal>
 3a8:	ldr	x8, [sp, #80]
 3ac:	mov	x0, x8
 3b0:	add	x1, sp, #0x88
 3b4:	mov	x2, #0x138                 	// #312
 3b8:	bl	0 <memcpy>
 3bc:	ldr	x8, [sp, #128]
 3c0:	ldr	x9, [sp, #104]
 3c4:	str	x8, [x9]
 3c8:	ldr	w0, [sp, #452]
 3cc:	add	sp, sp, #0x2, lsl #12
 3d0:	add	sp, sp, #0x2f0
 3d4:	ldr	x28, [sp, #16]
 3d8:	ldp	x29, x30, [sp], #32
 3dc:	ret

00000000000003e0 <listen_int_handler>:
 3e0:	sub	sp, sp, #0x40
 3e4:	stp	x29, x30, [sp, #48]
 3e8:	add	x29, sp, #0x30
 3ec:	adrp	x8, 0 <stdout>
 3f0:	add	x8, x8, #0x0
 3f4:	mov	w9, #0xa                   	// #10
 3f8:	mov	w10, #0x2                   	// #2
 3fc:	adrp	x1, 0 <ss_listen>
 400:	add	x1, x1, #0x0
 404:	adrp	x11, 0 <ss_listen>
 408:	add	x11, x11, #0x0
 40c:	mov	w12, #0x1                   	// #1
 410:	stur	w0, [x29, #-4]
 414:	ldr	x8, [x8]
 418:	mov	w0, w9
 41c:	stur	x1, [x29, #-16]
 420:	mov	x1, x8
 424:	stur	w10, [x29, #-20]
 428:	str	x11, [sp, #16]
 42c:	str	w12, [sp, #12]
 430:	bl	0 <putc>
 434:	ldur	w9, [x29, #-20]
 438:	mov	w0, w9
 43c:	ldur	x1, [x29, #-16]
 440:	bl	0 <signal>
 444:	ldr	x8, [sp, #16]
 448:	mov	x0, x8
 44c:	ldr	w1, [sp, #12]
 450:	bl	0 <longjmp>

0000000000000454 <print_prompt>:
 454:	sub	sp, sp, #0x30
 458:	stp	x29, x30, [sp, #32]
 45c:	add	x29, sp, #0x20
 460:	adrp	x8, 0 <ss_listen>
 464:	add	x8, x8, #0x0
 468:	stur	w0, [x29, #-4]
 46c:	ldr	x9, [x8]
 470:	ldr	x9, [x9, #120]
 474:	str	x8, [sp, #16]
 478:	cbz	x9, 490 <print_prompt+0x3c>
 47c:	ldr	x8, [sp, #16]
 480:	ldr	x9, [x8]
 484:	ldr	x9, [x9, #120]
 488:	blr	x9
 48c:	b	4c0 <print_prompt+0x6c>
 490:	ldr	x8, [sp, #16]
 494:	ldr	x9, [x8]
 498:	ldr	x0, [x9, #56]
 49c:	adrp	x9, 0 <stdout>
 4a0:	add	x9, x9, #0x0
 4a4:	ldr	x1, [x9]
 4a8:	str	x9, [sp, #8]
 4ac:	bl	0 <fputs>
 4b0:	ldr	x8, [sp, #8]
 4b4:	ldr	x9, [x8]
 4b8:	mov	x0, x9
 4bc:	bl	0 <fflush>
 4c0:	ldp	x29, x30, [sp, #32]
 4c4:	add	sp, sp, #0x30
 4c8:	ret

00000000000004cc <ss_abort_subsystem>:
 4cc:	sub	sp, sp, #0x10
 4d0:	adrp	x8, 0 <_ss_table>
 4d4:	add	x8, x8, #0x0
 4d8:	mov	w9, #0x1                   	// #1
 4dc:	str	w0, [sp, #12]
 4e0:	str	w1, [sp, #8]
 4e4:	ldr	x10, [x8]
 4e8:	ldrsw	x11, [sp, #12]
 4ec:	mov	x12, #0x8                   	// #8
 4f0:	mul	x11, x12, x11
 4f4:	add	x10, x10, x11
 4f8:	ldr	x10, [x10]
 4fc:	str	w9, [x10, #136]
 500:	ldr	w9, [sp, #8]
 504:	ldr	x8, [x8]
 508:	ldrsw	x10, [sp, #12]
 50c:	mul	x10, x12, x10
 510:	add	x8, x8, x10
 514:	ldr	x8, [x8]
 518:	str	w9, [x8, #140]
 51c:	add	sp, sp, #0x10
 520:	ret

0000000000000524 <ss_quit>:
 524:	sub	sp, sp, #0x30
 528:	stp	x29, x30, [sp, #32]
 52c:	add	x29, sp, #0x20
 530:	mov	w8, wzr
 534:	stur	w0, [x29, #-4]
 538:	str	x1, [sp, #16]
 53c:	str	w2, [sp, #12]
 540:	str	x3, [sp]
 544:	ldr	w0, [sp, #12]
 548:	mov	w1, w8
 54c:	bl	4cc <ss_abort_subsystem>
 550:	ldp	x29, x30, [sp, #32]
 554:	add	sp, sp, #0x30
 558:	ret

000000000000055c <ss_rl_completion>:
 55c:	sub	sp, sp, #0x30
 560:	stp	x29, x30, [sp, #32]
 564:	add	x29, sp, #0x20
 568:	str	x0, [sp, #16]
 56c:	str	w1, [sp, #12]
 570:	str	w2, [sp, #8]
 574:	ldr	w8, [sp, #12]
 578:	cbnz	w8, 5b8 <ss_rl_completion+0x5c>
 57c:	adrp	x8, 0 <ss_listen>
 580:	add	x8, x8, #0x0
 584:	ldr	x8, [x8]
 588:	ldr	x8, [x8, #128]
 58c:	cbz	x8, 5b8 <ss_rl_completion+0x5c>
 590:	adrp	x8, 0 <ss_listen>
 594:	add	x8, x8, #0x0
 598:	ldr	x8, [x8]
 59c:	ldr	x8, [x8, #128]
 5a0:	ldr	x0, [sp, #16]
 5a4:	adrp	x1, 0 <ss_listen>
 5a8:	add	x1, x1, #0x0
 5ac:	blr	x8
 5b0:	stur	x0, [x29, #-8]
 5b4:	b	5c0 <ss_rl_completion+0x64>
 5b8:	mov	x8, xzr
 5bc:	stur	x8, [x29, #-8]
 5c0:	ldur	x0, [x29, #-8]
 5c4:	ldp	x29, x30, [sp, #32]
 5c8:	add	sp, sp, #0x30
 5cc:	ret

00000000000005d0 <cmd_generator>:
 5d0:	sub	sp, sp, #0x50
 5d4:	stp	x29, x30, [sp, #64]
 5d8:	add	x29, sp, #0x40
 5dc:	adrp	x8, 0 <ss_listen>
 5e0:	add	x8, x8, #0x0
 5e4:	adrp	x9, 0 <ss_listen>
 5e8:	add	x9, x9, #0x0
 5ec:	adrp	x10, 0 <ss_listen>
 5f0:	add	x10, x10, #0x0
 5f4:	stur	x0, [x29, #-16]
 5f8:	stur	w1, [x29, #-20]
 5fc:	ldur	w11, [x29, #-20]
 600:	str	x8, [sp, #16]
 604:	str	x9, [sp, #8]
 608:	str	x10, [sp]
 60c:	cbnz	w11, 674 <cmd_generator+0xa4>
 610:	ldur	x0, [x29, #-16]
 614:	bl	0 <strlen>
 618:	adrp	x8, 0 <ss_listen>
 61c:	add	x8, x8, #0x0
 620:	str	w0, [x8]
 624:	adrp	x8, 0 <ss_listen>
 628:	add	x8, x8, #0x0
 62c:	ldr	x8, [x8]
 630:	ldr	x8, [x8, #64]
 634:	ldr	x9, [sp, #16]
 638:	str	x8, [x9]
 63c:	ldr	x8, [x9]
 640:	cbz	x8, 654 <cmd_generator+0x84>
 644:	ldr	x8, [sp, #16]
 648:	ldr	x9, [x8]
 64c:	ldr	x9, [x9]
 650:	cbnz	x9, 660 <cmd_generator+0x90>
 654:	mov	x8, xzr
 658:	stur	x8, [x29, #-8]
 65c:	b	79c <cmd_generator+0x1cc>
 660:	ldr	x8, [sp, #8]
 664:	str	wzr, [x8]
 668:	mov	x9, xzr
 66c:	ldr	x10, [sp]
 670:	str	x9, [x10]
 674:	ldr	x8, [sp]
 678:	ldr	x9, [x8]
 67c:	cbz	x9, 690 <cmd_generator+0xc0>
 680:	ldr	x8, [sp]
 684:	ldr	x9, [x8]
 688:	ldr	x9, [x9]
 68c:	cbnz	x9, 708 <cmd_generator+0x138>
 690:	ldr	x8, [sp, #16]
 694:	ldr	x9, [x8]
 698:	ldr	x9, [x9]
 69c:	ldr	x9, [x9, #8]
 6a0:	ldr	x10, [sp, #8]
 6a4:	ldrsw	x11, [x10]
 6a8:	mov	w12, w11
 6ac:	add	w12, w12, #0x1
 6b0:	str	w12, [x10]
 6b4:	mov	x13, #0x20                  	// #32
 6b8:	mul	x11, x13, x11
 6bc:	add	x9, x9, x11
 6c0:	str	x9, [sp, #32]
 6c4:	ldr	x9, [sp, #32]
 6c8:	ldr	x9, [x9]
 6cc:	ldr	x11, [sp]
 6d0:	str	x9, [x11]
 6d4:	ldr	x9, [x11]
 6d8:	cbnz	x9, 708 <cmd_generator+0x138>
 6dc:	ldr	x8, [sp, #16]
 6e0:	ldr	x9, [x8]
 6e4:	add	x9, x9, #0x8
 6e8:	str	x9, [x8]
 6ec:	ldr	x9, [x8]
 6f0:	ldr	x9, [x9]
 6f4:	cbz	x9, 704 <cmd_generator+0x134>
 6f8:	ldr	x8, [sp, #8]
 6fc:	str	wzr, [x8]
 700:	b	674 <cmd_generator+0xa4>
 704:	b	794 <cmd_generator+0x1c4>
 708:	ldr	x8, [sp]
 70c:	ldr	x9, [x8]
 710:	ldr	x0, [x9]
 714:	ldur	x1, [x29, #-16]
 718:	adrp	x9, 0 <ss_listen>
 71c:	add	x9, x9, #0x0
 720:	ldrsw	x2, [x9]
 724:	bl	0 <strncmp>
 728:	cbnz	w0, 780 <cmd_generator+0x1b0>
 72c:	ldr	x8, [sp]
 730:	ldr	x9, [x8]
 734:	ldr	x0, [x9]
 738:	bl	0 <strlen>
 73c:	add	x0, x0, #0x1
 740:	bl	0 <malloc>
 744:	str	x0, [sp, #24]
 748:	ldr	x8, [sp, #24]
 74c:	cbz	x8, 764 <cmd_generator+0x194>
 750:	ldr	x0, [sp, #24]
 754:	ldr	x8, [sp]
 758:	ldr	x9, [x8]
 75c:	ldr	x1, [x9]
 760:	bl	0 <strcpy>
 764:	ldr	x8, [sp]
 768:	ldr	x9, [x8]
 76c:	add	x9, x9, #0x8
 770:	str	x9, [x8]
 774:	ldr	x9, [sp, #24]
 778:	stur	x9, [x29, #-8]
 77c:	b	79c <cmd_generator+0x1cc>
 780:	ldr	x8, [sp]
 784:	ldr	x9, [x8]
 788:	add	x9, x9, #0x8
 78c:	str	x9, [x8]
 790:	b	674 <cmd_generator+0xa4>
 794:	mov	x8, xzr
 798:	stur	x8, [x29, #-8]
 79c:	ldur	x0, [x29, #-8]
 7a0:	ldp	x29, x30, [sp, #64]
 7a4:	add	sp, sp, #0x50
 7a8:	ret

parse.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_parse>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #80]
   8:	add	x29, sp, #0x50
   c:	mov	x8, #0x8                   	// #8
  10:	stur	w0, [x29, #-12]
  14:	stur	x1, [x29, #-24]
  18:	stur	x2, [x29, #-32]
  1c:	mov	x0, x8
  20:	bl	0 <malloc>
  24:	str	x0, [sp, #40]
  28:	ldr	x8, [sp, #40]
  2c:	cbnz	x8, 64 <ss_parse+0x64>
  30:	ldur	w0, [x29, #-12]
  34:	str	w0, [sp, #12]
  38:	bl	0 <__errno_location>
  3c:	ldrsw	x1, [x0]
  40:	ldr	w0, [sp, #12]
  44:	adrp	x2, 0 <ss_parse>
  48:	add	x2, x2, #0x0
  4c:	bl	0 <ss_error>
  50:	ldur	x8, [x29, #-32]
  54:	str	wzr, [x8]
  58:	ldr	x8, [sp, #40]
  5c:	stur	x8, [x29, #-8]
  60:	b	3c0 <ss_parse+0x3c0>
  64:	ldr	x8, [sp, #40]
  68:	mov	x9, xzr
  6c:	str	x9, [x8]
  70:	str	wzr, [sp, #20]
  74:	str	wzr, [sp, #16]
  78:	ldur	x8, [x29, #-24]
  7c:	str	x8, [sp, #24]
  80:	ldr	w8, [sp, #16]
  84:	cbnz	w8, 218 <ss_parse+0x218>
  88:	ldur	x8, [x29, #-24]
  8c:	ldrb	w9, [x8]
  90:	cbnz	w9, 98 <ss_parse+0x98>
  94:	b	3ac <ss_parse+0x3ac>
  98:	ldur	x8, [x29, #-24]
  9c:	ldrb	w9, [x8]
  a0:	cmp	w9, #0x20
  a4:	b.eq	b8 <ss_parse+0xb8>  // b.none
  a8:	ldur	x8, [x29, #-24]
  ac:	ldrb	w9, [x8]
  b0:	cmp	w9, #0x9
  b4:	b.ne	c8 <ss_parse+0xc8>  // b.any
  b8:	ldur	x8, [x29, #-24]
  bc:	add	x8, x8, #0x1
  c0:	stur	x8, [x29, #-24]
  c4:	b	80 <ss_parse+0x80>
  c8:	ldur	x8, [x29, #-24]
  cc:	ldrb	w9, [x8]
  d0:	cmp	w9, #0x22
  d4:	b.ne	17c <ss_parse+0x17c>  // b.any
  d8:	mov	w8, #0x2                   	// #2
  dc:	str	w8, [sp, #16]
  e0:	ldur	x9, [x29, #-24]
  e4:	add	x10, x9, #0x1
  e8:	stur	x10, [x29, #-24]
  ec:	str	x9, [sp, #24]
  f0:	ldr	x0, [sp, #40]
  f4:	ldr	w8, [sp, #20]
  f8:	add	w8, w8, #0x2
  fc:	mov	w11, #0x8                   	// #8
 100:	umull	x1, w8, w11
 104:	bl	0 <realloc>
 108:	str	x0, [sp, #32]
 10c:	ldr	x9, [sp, #32]
 110:	cbnz	x9, 130 <ss_parse+0x130>
 114:	ldr	x0, [sp, #40]
 118:	bl	0 <free>
 11c:	ldur	x8, [x29, #-32]
 120:	str	wzr, [x8]
 124:	mov	x8, xzr
 128:	stur	x8, [x29, #-8]
 12c:	b	3c0 <ss_parse+0x3c0>
 130:	ldr	x8, [sp, #32]
 134:	str	x8, [sp, #40]
 138:	ldr	x8, [sp, #24]
 13c:	ldr	x9, [sp, #40]
 140:	ldrsw	x10, [sp, #20]
 144:	mov	w11, w10
 148:	add	w11, w11, #0x1
 14c:	str	w11, [sp, #20]
 150:	mov	x12, #0x8                   	// #8
 154:	mul	x10, x12, x10
 158:	add	x9, x9, x10
 15c:	str	x8, [x9]
 160:	ldr	x8, [sp, #40]
 164:	ldrsw	x9, [sp, #20]
 168:	mul	x9, x12, x9
 16c:	add	x8, x8, x9
 170:	mov	x9, xzr
 174:	str	x9, [x8]
 178:	b	214 <ss_parse+0x214>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	w8, [sp, #16]
 184:	ldur	x9, [x29, #-24]
 188:	str	x9, [sp, #24]
 18c:	ldr	x0, [sp, #40]
 190:	ldr	w8, [sp, #20]
 194:	add	w8, w8, #0x2
 198:	mov	w10, #0x8                   	// #8
 19c:	umull	x1, w8, w10
 1a0:	bl	0 <realloc>
 1a4:	str	x0, [sp, #32]
 1a8:	ldr	x9, [sp, #32]
 1ac:	cbnz	x9, 1cc <ss_parse+0x1cc>
 1b0:	ldr	x0, [sp, #40]
 1b4:	bl	0 <free>
 1b8:	ldur	x8, [x29, #-32]
 1bc:	str	wzr, [x8]
 1c0:	mov	x8, xzr
 1c4:	stur	x8, [x29, #-8]
 1c8:	b	3c0 <ss_parse+0x3c0>
 1cc:	ldr	x8, [sp, #32]
 1d0:	str	x8, [sp, #40]
 1d4:	ldur	x8, [x29, #-24]
 1d8:	ldr	x9, [sp, #40]
 1dc:	ldrsw	x10, [sp, #20]
 1e0:	mov	w11, w10
 1e4:	add	w11, w11, #0x1
 1e8:	str	w11, [sp, #20]
 1ec:	mov	x12, #0x8                   	// #8
 1f0:	mul	x10, x12, x10
 1f4:	add	x9, x9, x10
 1f8:	str	x8, [x9]
 1fc:	ldr	x8, [sp, #40]
 200:	ldrsw	x9, [sp, #20]
 204:	mul	x9, x12, x9
 208:	add	x8, x8, x9
 20c:	mov	x9, xzr
 210:	str	x9, [x8]
 214:	b	80 <ss_parse+0x80>
 218:	ldr	w8, [sp, #16]
 21c:	cmp	w8, #0x1
 220:	b.ne	2dc <ss_parse+0x2dc>  // b.any
 224:	ldur	x8, [x29, #-24]
 228:	ldrb	w9, [x8]
 22c:	cbnz	w9, 248 <ss_parse+0x248>
 230:	ldr	x8, [sp, #24]
 234:	add	x9, x8, #0x1
 238:	str	x9, [sp, #24]
 23c:	mov	w10, #0x0                   	// #0
 240:	strb	w10, [x8]
 244:	b	3ac <ss_parse+0x3ac>
 248:	ldur	x8, [x29, #-24]
 24c:	ldrb	w9, [x8]
 250:	cmp	w9, #0x20
 254:	b.eq	268 <ss_parse+0x268>  // b.none
 258:	ldur	x8, [x29, #-24]
 25c:	ldrb	w9, [x8]
 260:	cmp	w9, #0x9
 264:	b.ne	290 <ss_parse+0x290>  // b.any
 268:	ldr	x8, [sp, #24]
 26c:	add	x9, x8, #0x1
 270:	str	x9, [sp, #24]
 274:	mov	w10, #0x0                   	// #0
 278:	strb	w10, [x8]
 27c:	ldur	x8, [x29, #-24]
 280:	add	x8, x8, #0x1
 284:	stur	x8, [x29, #-24]
 288:	str	wzr, [sp, #16]
 28c:	b	2d8 <ss_parse+0x2d8>
 290:	ldur	x8, [x29, #-24]
 294:	ldrb	w9, [x8]
 298:	cmp	w9, #0x22
 29c:	b.ne	2b8 <ss_parse+0x2b8>  // b.any
 2a0:	ldur	x8, [x29, #-24]
 2a4:	add	x8, x8, #0x1
 2a8:	stur	x8, [x29, #-24]
 2ac:	mov	w9, #0x2                   	// #2
 2b0:	str	w9, [sp, #16]
 2b4:	b	2d8 <ss_parse+0x2d8>
 2b8:	ldur	x8, [x29, #-24]
 2bc:	add	x9, x8, #0x1
 2c0:	stur	x9, [x29, #-24]
 2c4:	ldrb	w10, [x8]
 2c8:	ldr	x8, [sp, #24]
 2cc:	add	x9, x8, #0x1
 2d0:	str	x9, [sp, #24]
 2d4:	strb	w10, [x8]
 2d8:	b	218 <ss_parse+0x218>
 2dc:	ldr	w8, [sp, #16]
 2e0:	cmp	w8, #0x2
 2e4:	b.ne	3a8 <ss_parse+0x3a8>  // b.any
 2e8:	ldur	x8, [x29, #-24]
 2ec:	ldrb	w9, [x8]
 2f0:	cbnz	w9, 32c <ss_parse+0x32c>
 2f4:	ldur	w0, [x29, #-12]
 2f8:	mov	x8, xzr
 2fc:	mov	x1, x8
 300:	adrp	x2, 0 <ss_parse>
 304:	add	x2, x2, #0x0
 308:	str	x8, [sp]
 30c:	bl	0 <ss_error>
 310:	ldr	x0, [sp, #40]
 314:	bl	0 <free>
 318:	ldur	x8, [x29, #-32]
 31c:	str	wzr, [x8]
 320:	ldr	x8, [sp]
 324:	stur	x8, [x29, #-8]
 328:	b	3c0 <ss_parse+0x3c0>
 32c:	ldur	x8, [x29, #-24]
 330:	ldrb	w9, [x8]
 334:	cmp	w9, #0x22
 338:	b.ne	384 <ss_parse+0x384>  // b.any
 33c:	ldur	x8, [x29, #-24]
 340:	add	x9, x8, #0x1
 344:	stur	x9, [x29, #-24]
 348:	ldrb	w10, [x8, #1]
 34c:	cmp	w10, #0x22
 350:	b.ne	378 <ss_parse+0x378>  // b.any
 354:	ldr	x8, [sp, #24]
 358:	add	x9, x8, #0x1
 35c:	str	x9, [sp, #24]
 360:	mov	w10, #0x22                  	// #34
 364:	strb	w10, [x8]
 368:	ldur	x8, [x29, #-24]
 36c:	add	x8, x8, #0x1
 370:	stur	x8, [x29, #-24]
 374:	b	380 <ss_parse+0x380>
 378:	mov	w8, #0x1                   	// #1
 37c:	str	w8, [sp, #16]
 380:	b	3a4 <ss_parse+0x3a4>
 384:	ldur	x8, [x29, #-24]
 388:	add	x9, x8, #0x1
 38c:	stur	x9, [x29, #-24]
 390:	ldrb	w10, [x8]
 394:	ldr	x8, [sp, #24]
 398:	add	x9, x8, #0x1
 39c:	str	x9, [sp, #24]
 3a0:	strb	w10, [x8]
 3a4:	b	2dc <ss_parse+0x2dc>
 3a8:	b	80 <ss_parse+0x80>
 3ac:	ldr	w8, [sp, #20]
 3b0:	ldur	x9, [x29, #-32]
 3b4:	str	w8, [x9]
 3b8:	ldr	x9, [sp, #40]
 3bc:	stur	x9, [x29, #-8]
 3c0:	ldur	x0, [x29, #-8]
 3c4:	ldp	x29, x30, [sp, #80]
 3c8:	add	sp, sp, #0x60
 3cc:	ret

error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_name>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #64]
   8:	add	x29, sp, #0x40
   c:	adrp	x8, 0 <_ss_table>
  10:	add	x8, x8, #0x0
  14:	stur	w0, [x29, #-12]
  18:	ldr	x8, [x8]
  1c:	ldursw	x9, [x29, #-12]
  20:	mov	x10, #0x8                   	// #8
  24:	mul	x9, x10, x9
  28:	add	x8, x8, x9
  2c:	ldr	x8, [x8]
  30:	str	x8, [sp, #32]
  34:	ldr	x8, [sp, #32]
  38:	ldr	x8, [x8, #32]
  3c:	cbnz	x8, 94 <ss_name+0x94>
  40:	ldr	x8, [sp, #32]
  44:	ldr	x0, [x8]
  48:	bl	0 <strlen>
  4c:	mov	x8, #0x1                   	// #1
  50:	add	x9, x0, #0x1
  54:	and	x9, x9, #0xffffffff
  58:	mul	x0, x9, x8
  5c:	bl	0 <malloc>
  60:	stur	x0, [x29, #-24]
  64:	ldur	x8, [x29, #-24]
  68:	cbnz	x8, 78 <ss_name+0x78>
  6c:	mov	x8, xzr
  70:	stur	x8, [x29, #-8]
  74:	b	1a0 <ss_name+0x1a0>
  78:	ldur	x0, [x29, #-24]
  7c:	ldr	x8, [sp, #32]
  80:	ldr	x1, [x8]
  84:	bl	0 <strcpy>
  88:	ldur	x8, [x29, #-24]
  8c:	stur	x8, [x29, #-8]
  90:	b	1a0 <ss_name+0x1a0>
  94:	ldr	x8, [sp, #32]
  98:	ldr	x0, [x8]
  9c:	bl	0 <strlen>
  a0:	ldr	x8, [sp, #32]
  a4:	ldr	x8, [x8, #32]
  a8:	str	x0, [sp, #8]
  ac:	mov	x0, x8
  b0:	bl	0 <strlen>
  b4:	ldr	x8, [sp, #8]
  b8:	add	x9, x8, x0
  bc:	add	x9, x9, #0x4
  c0:	mov	x10, #0x1                   	// #1
  c4:	mul	x0, x10, x9
  c8:	bl	0 <malloc>
  cc:	stur	x0, [x29, #-24]
  d0:	ldur	x8, [x29, #-24]
  d4:	str	x8, [sp, #24]
  d8:	ldr	x8, [sp, #32]
  dc:	ldr	x8, [x8]
  e0:	str	x8, [sp, #16]
  e4:	ldr	x8, [sp, #16]
  e8:	ldrb	w9, [x8]
  ec:	cbz	w9, 114 <ss_name+0x114>
  f0:	ldr	x8, [sp, #16]
  f4:	add	x9, x8, #0x1
  f8:	str	x9, [sp, #16]
  fc:	ldrb	w10, [x8]
 100:	ldr	x8, [sp, #24]
 104:	add	x9, x8, #0x1
 108:	str	x9, [sp, #24]
 10c:	strb	w10, [x8]
 110:	b	e4 <ss_name+0xe4>
 114:	ldr	x8, [sp, #24]
 118:	add	x9, x8, #0x1
 11c:	str	x9, [sp, #24]
 120:	mov	w10, #0x20                  	// #32
 124:	strb	w10, [x8]
 128:	ldr	x8, [sp, #24]
 12c:	add	x9, x8, #0x1
 130:	str	x9, [sp, #24]
 134:	mov	w10, #0x28                  	// #40
 138:	strb	w10, [x8]
 13c:	ldr	x8, [sp, #32]
 140:	ldr	x8, [x8, #32]
 144:	str	x8, [sp, #16]
 148:	ldr	x8, [sp, #16]
 14c:	ldrb	w9, [x8]
 150:	cbz	w9, 178 <ss_name+0x178>
 154:	ldr	x8, [sp, #16]
 158:	add	x9, x8, #0x1
 15c:	str	x9, [sp, #16]
 160:	ldrb	w10, [x8]
 164:	ldr	x8, [sp, #24]
 168:	add	x9, x8, #0x1
 16c:	str	x9, [sp, #24]
 170:	strb	w10, [x8]
 174:	b	148 <ss_name+0x148>
 178:	ldr	x8, [sp, #24]
 17c:	add	x9, x8, #0x1
 180:	str	x9, [sp, #24]
 184:	mov	w10, #0x29                  	// #41
 188:	strb	w10, [x8]
 18c:	ldr	x8, [sp, #24]
 190:	mov	w10, #0x0                   	// #0
 194:	strb	w10, [x8]
 198:	ldur	x8, [x29, #-24]
 19c:	stur	x8, [x29, #-8]
 1a0:	ldur	x0, [x29, #-8]
 1a4:	ldp	x29, x30, [sp, #64]
 1a8:	add	sp, sp, #0x50
 1ac:	ret

00000000000001b0 <ss_error>:
 1b0:	sub	sp, sp, #0x130
 1b4:	stp	x29, x30, [sp, #272]
 1b8:	str	x28, [sp, #288]
 1bc:	add	x29, sp, #0x110
 1c0:	str	q7, [sp, #112]
 1c4:	str	q6, [sp, #96]
 1c8:	str	q5, [sp, #80]
 1cc:	str	q4, [sp, #64]
 1d0:	str	q3, [sp, #48]
 1d4:	str	q2, [sp, #32]
 1d8:	str	q1, [sp, #16]
 1dc:	str	q0, [sp]
 1e0:	str	x7, [sp, #168]
 1e4:	str	x6, [sp, #160]
 1e8:	str	x5, [sp, #152]
 1ec:	str	x4, [sp, #144]
 1f0:	str	x3, [sp, #136]
 1f4:	stur	w0, [x29, #-4]
 1f8:	stur	x1, [x29, #-16]
 1fc:	stur	x2, [x29, #-24]
 200:	mov	w8, #0xffffff80            	// #-128
 204:	stur	w8, [x29, #-36]
 208:	mov	w8, #0xffffffd8            	// #-40
 20c:	stur	w8, [x29, #-40]
 210:	mov	x9, sp
 214:	add	x9, x9, #0x80
 218:	stur	x9, [x29, #-48]
 21c:	add	x9, sp, #0x88
 220:	add	x9, x9, #0x28
 224:	stur	x9, [x29, #-56]
 228:	add	x9, x29, #0x20
 22c:	stur	x9, [x29, #-64]
 230:	ldur	w0, [x29, #-4]
 234:	bl	0 <ss_name>
 238:	stur	x0, [x29, #-32]
 23c:	ldur	x0, [x29, #-32]
 240:	ldur	x1, [x29, #-16]
 244:	ldur	x2, [x29, #-24]
 248:	ldur	q0, [x29, #-64]
 24c:	ldur	q1, [x29, #-48]
 250:	stur	q1, [x29, #-80]
 254:	stur	q0, [x29, #-96]
 258:	sub	x3, x29, #0x60
 25c:	bl	0 <com_err_va>
 260:	ldur	x0, [x29, #-32]
 264:	bl	0 <free>
 268:	ldr	x28, [sp, #288]
 26c:	ldp	x29, x30, [sp, #272]
 270:	add	sp, sp, #0x130
 274:	ret

0000000000000278 <ss_perror>:
 278:	sub	sp, sp, #0x30
 27c:	stp	x29, x30, [sp, #32]
 280:	add	x29, sp, #0x20
 284:	adrp	x8, 0 <ss_name>
 288:	add	x8, x8, #0x0
 28c:	stur	w0, [x29, #-4]
 290:	str	x1, [sp, #16]
 294:	str	x2, [sp, #8]
 298:	ldur	w0, [x29, #-4]
 29c:	ldr	x1, [sp, #16]
 2a0:	ldr	x3, [sp, #8]
 2a4:	mov	x2, x8
 2a8:	bl	1b0 <ss_error>
 2ac:	ldp	x29, x30, [sp, #32]
 2b0:	add	sp, sp, #0x30
 2b4:	ret

prompt.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_set_prompt>:
   0:	sub	sp, sp, #0x10
   4:	adrp	x8, 0 <_ss_table>
   8:	add	x8, x8, #0x0
   c:	str	w0, [sp, #12]
  10:	str	x1, [sp]
  14:	ldr	x9, [sp]
  18:	ldr	x8, [x8]
  1c:	ldrsw	x10, [sp, #12]
  20:	mov	x11, #0x8                   	// #8
  24:	mul	x10, x11, x10
  28:	add	x8, x8, x10
  2c:	ldr	x8, [x8]
  30:	str	x9, [x8, #56]
  34:	add	sp, sp, #0x10
  38:	ret

000000000000003c <ss_get_prompt>:
  3c:	sub	sp, sp, #0x10
  40:	adrp	x8, 0 <_ss_table>
  44:	add	x8, x8, #0x0
  48:	str	w0, [sp, #12]
  4c:	ldr	x8, [x8]
  50:	ldrsw	x9, [sp, #12]
  54:	mov	x10, #0x8                   	// #8
  58:	mul	x9, x10, x9
  5c:	add	x8, x8, x9
  60:	ldr	x8, [x8]
  64:	ldr	x0, [x8, #56]
  68:	add	sp, sp, #0x10
  6c:	ret

request_tbl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_add_request_table>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #64]
   8:	add	x29, sp, #0x40
   c:	adrp	x8, 0 <_ss_table>
  10:	add	x8, x8, #0x0
  14:	stur	w0, [x29, #-4]
  18:	stur	x1, [x29, #-16]
  1c:	stur	w2, [x29, #-20]
  20:	str	x3, [sp, #32]
  24:	ldr	x8, [x8]
  28:	ldursw	x9, [x29, #-4]
  2c:	mov	x10, #0x8                   	// #8
  30:	mul	x9, x10, x9
  34:	add	x8, x8, x9
  38:	ldr	x8, [x8]
  3c:	str	x8, [sp, #24]
  40:	str	wzr, [sp, #16]
  44:	ldr	x8, [sp, #24]
  48:	ldr	x8, [x8, #64]
  4c:	ldrsw	x9, [sp, #16]
  50:	mov	x10, #0x8                   	// #8
  54:	mul	x9, x10, x9
  58:	add	x8, x8, x9
  5c:	ldr	x8, [x8]
  60:	cbz	x8, 74 <ss_add_request_table+0x74>
  64:	ldr	w8, [sp, #16]
  68:	add	w8, w8, #0x1
  6c:	str	w8, [sp, #16]
  70:	b	44 <ss_add_request_table+0x44>
  74:	ldr	w8, [sp, #16]
  78:	add	w8, w8, #0x2
  7c:	str	w8, [sp, #16]
  80:	ldr	x9, [sp, #24]
  84:	ldr	x0, [x9, #64]
  88:	ldr	w8, [sp, #16]
  8c:	mov	w9, w8
  90:	mov	x10, #0x8                   	// #8
  94:	mul	x1, x9, x10
  98:	bl	0 <realloc>
  9c:	str	x0, [sp, #8]
  a0:	ldr	x9, [sp, #8]
  a4:	cbnz	x9, bc <ss_add_request_table+0xbc>
  a8:	bl	0 <__errno_location>
  ac:	ldr	w8, [x0]
  b0:	ldr	x9, [sp, #32]
  b4:	str	w8, [x9]
  b8:	b	1b0 <ss_add_request_table+0x1b0>
  bc:	ldr	x8, [sp, #8]
  c0:	ldr	x9, [sp, #24]
  c4:	str	x8, [x9, #64]
  c8:	ldur	w10, [x29, #-20]
  cc:	ldr	w11, [sp, #16]
  d0:	subs	w11, w11, #0x2
  d4:	cmp	w10, w11
  d8:	b.le	e8 <ss_add_request_table+0xe8>
  dc:	ldr	w8, [sp, #16]
  e0:	subs	w8, w8, #0x2
  e4:	stur	w8, [x29, #-20]
  e8:	ldr	w8, [sp, #16]
  ec:	cmp	w8, #0x1
  f0:	b.le	160 <ss_add_request_table+0x160>
  f4:	ldr	w8, [sp, #16]
  f8:	subs	w8, w8, #0x2
  fc:	str	w8, [sp, #20]
 100:	ldr	w8, [sp, #20]
 104:	ldur	w9, [x29, #-20]
 108:	cmp	w8, w9
 10c:	b.lt	160 <ss_add_request_table+0x160>  // b.tstop
 110:	ldr	x8, [sp, #24]
 114:	ldr	x8, [x8, #64]
 118:	ldrsw	x9, [sp, #20]
 11c:	mov	x10, #0x8                   	// #8
 120:	mul	x9, x10, x9
 124:	add	x8, x8, x9
 128:	ldr	x8, [x8]
 12c:	ldr	x9, [sp, #24]
 130:	ldr	x9, [x9, #64]
 134:	ldr	w11, [sp, #20]
 138:	add	w11, w11, #0x1
 13c:	mov	w0, w11
 140:	sxtw	x12, w0
 144:	mul	x10, x10, x12
 148:	add	x9, x9, x10
 14c:	str	x8, [x9]
 150:	ldr	w8, [sp, #20]
 154:	subs	w8, w8, #0x1
 158:	str	w8, [sp, #20]
 15c:	b	100 <ss_add_request_table+0x100>
 160:	ldur	x8, [x29, #-16]
 164:	ldr	x9, [sp, #24]
 168:	ldr	x9, [x9, #64]
 16c:	ldursw	x10, [x29, #-20]
 170:	mov	x11, #0x8                   	// #8
 174:	mul	x10, x11, x10
 178:	add	x9, x9, x10
 17c:	str	x8, [x9]
 180:	ldr	x8, [sp, #24]
 184:	ldr	x8, [x8, #64]
 188:	ldr	w12, [sp, #16]
 18c:	subs	w12, w12, #0x1
 190:	mov	w0, w12
 194:	sxtw	x9, w0
 198:	mul	x9, x11, x9
 19c:	add	x8, x8, x9
 1a0:	mov	x9, xzr
 1a4:	str	x9, [x8]
 1a8:	ldr	x8, [sp, #32]
 1ac:	str	wzr, [x8]
 1b0:	ldp	x29, x30, [sp, #64]
 1b4:	add	sp, sp, #0x50
 1b8:	ret

00000000000001bc <ss_delete_request_table>:
 1bc:	sub	sp, sp, #0x30
 1c0:	mov	w8, #0x6d08                	// #27912
 1c4:	movk	w8, #0xb, lsl #16
 1c8:	adrp	x9, 0 <_ss_table>
 1cc:	add	x9, x9, #0x0
 1d0:	str	w0, [sp, #44]
 1d4:	str	x1, [sp, #32]
 1d8:	str	x2, [sp, #24]
 1dc:	ldr	x10, [sp, #24]
 1e0:	str	w8, [x10]
 1e4:	ldr	x9, [x9]
 1e8:	ldrsw	x10, [sp, #44]
 1ec:	mov	x11, #0x8                   	// #8
 1f0:	mul	x10, x11, x10
 1f4:	add	x9, x9, x10
 1f8:	ldr	x9, [x9]
 1fc:	str	x9, [sp, #16]
 200:	ldr	x9, [sp, #16]
 204:	ldr	x9, [x9, #64]
 208:	str	x9, [sp, #8]
 20c:	ldr	x9, [sp, #8]
 210:	str	x9, [sp]
 214:	ldr	x8, [sp, #8]
 218:	ldr	x8, [x8]
 21c:	cbz	x8, 264 <ss_delete_request_table+0xa8>
 220:	ldr	x8, [sp, #8]
 224:	ldr	x8, [x8]
 228:	ldr	x9, [sp, #32]
 22c:	cmp	x8, x9
 230:	b.eq	254 <ss_delete_request_table+0x98>  // b.none
 234:	ldr	x8, [sp, #8]
 238:	ldr	x8, [x8]
 23c:	ldr	x9, [sp]
 240:	add	x10, x9, #0x8
 244:	str	x10, [sp]
 248:	str	x8, [x9]
 24c:	ldr	x8, [sp, #24]
 250:	str	wzr, [x8]
 254:	ldr	x8, [sp, #8]
 258:	add	x8, x8, #0x8
 25c:	str	x8, [sp, #8]
 260:	b	214 <ss_delete_request_table+0x58>
 264:	ldr	x8, [sp]
 268:	mov	x9, xzr
 26c:	str	x9, [x8]
 270:	add	sp, sp, #0x30
 274:	ret

list_rqs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_list_requests>:
   0:	sub	sp, sp, #0x1b0
   4:	stp	x29, x30, [sp, #400]
   8:	str	x28, [sp, #416]
   c:	add	x29, sp, #0x190
  10:	mov	w8, #0x2                   	// #2
  14:	mov	w9, wzr
  18:	mov	x10, #0x1                   	// #1
  1c:	add	x11, sp, #0xc0
  20:	add	x12, sp, #0x40
  24:	stur	w0, [x29, #-4]
  28:	stur	x1, [x29, #-16]
  2c:	stur	w2, [x29, #-20]
  30:	stur	x3, [x29, #-32]
  34:	mov	x0, x12
  38:	str	w8, [sp, #44]
  3c:	str	w9, [sp, #40]
  40:	str	x10, [sp, #32]
  44:	str	x11, [sp, #24]
  48:	str	x12, [sp, #16]
  4c:	bl	0 <sigemptyset>
  50:	ldr	x10, [sp, #16]
  54:	mov	x0, x10
  58:	ldr	w1, [sp, #44]
  5c:	bl	0 <sigaddset>
  60:	ldr	w8, [sp, #40]
  64:	mov	w0, w8
  68:	ldr	x1, [sp, #16]
  6c:	ldr	x2, [sp, #24]
  70:	bl	0 <sigprocmask>
  74:	ldr	w8, [sp, #44]
  78:	mov	w0, w8
  7c:	ldr	x1, [sp, #32]
  80:	bl	0 <signal>
  84:	str	x0, [sp, #56]
  88:	bl	0 <ss_pager_create>
  8c:	stur	w0, [x29, #-76]
  90:	ldur	w8, [x29, #-76]
  94:	cmp	w8, #0x0
  98:	cset	w8, ge  // ge = tcont
  9c:	tbnz	w8, #0, bc <ss_list_requests+0xbc>
  a0:	adrp	x0, 0 <ss_list_requests>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <perror>
  ac:	ldr	x1, [sp, #56]
  b0:	mov	w0, #0x2                   	// #2
  b4:	bl	0 <signal>
  b8:	b	2bc <ss_list_requests+0x2bc>
  bc:	ldur	w0, [x29, #-76]
  c0:	adrp	x1, 0 <ss_list_requests>
  c4:	add	x1, x1, #0x0
  c8:	bl	0 <fdopen>
  cc:	stur	x0, [x29, #-72]
  d0:	mov	w0, #0x2                   	// #2
  d4:	add	x1, sp, #0xc0
  d8:	mov	x8, xzr
  dc:	mov	x2, x8
  e0:	bl	0 <sigprocmask>
  e4:	ldur	x8, [x29, #-72]
  e8:	adrp	x9, 0 <_ss_table>
  ec:	add	x9, x9, #0x0
  f0:	ldr	x10, [x9]
  f4:	ldursw	x11, [x29, #-20]
  f8:	mov	x12, #0x8                   	// #8
  fc:	mul	x11, x12, x11
 100:	add	x10, x10, x11
 104:	ldr	x10, [x10]
 108:	ldr	x2, [x10]
 10c:	mov	x0, x8
 110:	adrp	x1, 0 <ss_list_requests>
 114:	add	x1, x1, #0x0
 118:	str	x9, [sp, #8]
 11c:	str	x12, [sp]
 120:	bl	0 <fprintf>
 124:	ldr	x8, [sp, #8]
 128:	ldr	x9, [x8]
 12c:	ldursw	x10, [x29, #-20]
 130:	ldr	x11, [sp]
 134:	mul	x10, x11, x10
 138:	add	x9, x9, x10
 13c:	ldr	x9, [x9]
 140:	ldr	x9, [x9, #64]
 144:	stur	x9, [x29, #-64]
 148:	ldur	x8, [x29, #-64]
 14c:	ldr	x8, [x8]
 150:	cbz	x8, 298 <ss_list_requests+0x298>
 154:	ldur	x8, [x29, #-64]
 158:	ldr	x8, [x8]
 15c:	ldr	x8, [x8, #8]
 160:	stur	x8, [x29, #-40]
 164:	ldur	x8, [x29, #-40]
 168:	ldr	x8, [x8]
 16c:	cbz	x8, 288 <ss_list_requests+0x288>
 170:	mov	w8, #0xfffffffe            	// #-2
 174:	stur	w8, [x29, #-56]
 178:	ldur	x9, [x29, #-40]
 17c:	ldr	w8, [x9, #24]
 180:	and	w8, w8, #0x1
 184:	cbz	w8, 18c <ss_list_requests+0x18c>
 188:	b	278 <ss_list_requests+0x278>
 18c:	ldur	x8, [x29, #-40]
 190:	ldr	x8, [x8]
 194:	stur	x8, [x29, #-48]
 198:	ldur	x8, [x29, #-48]
 19c:	ldr	x8, [x8]
 1a0:	cbz	x8, 204 <ss_list_requests+0x204>
 1a4:	ldur	x8, [x29, #-48]
 1a8:	ldr	x0, [x8]
 1ac:	bl	0 <strlen>
 1b0:	str	w0, [sp, #48]
 1b4:	ldur	x8, [x29, #-48]
 1b8:	ldr	x0, [x8]
 1bc:	ldur	x1, [x29, #-72]
 1c0:	bl	0 <fputs>
 1c4:	ldr	w9, [sp, #48]
 1c8:	add	w9, w9, #0x2
 1cc:	ldur	w10, [x29, #-56]
 1d0:	add	w9, w10, w9
 1d4:	stur	w9, [x29, #-56]
 1d8:	ldur	x8, [x29, #-48]
 1dc:	ldr	x8, [x8, #8]
 1e0:	cbz	x8, 1f4 <ss_list_requests+0x1f4>
 1e4:	ldur	x1, [x29, #-72]
 1e8:	adrp	x0, 0 <ss_list_requests>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <fputs>
 1f4:	ldur	x8, [x29, #-48]
 1f8:	add	x8, x8, #0x8
 1fc:	stur	x8, [x29, #-48]
 200:	b	198 <ss_list_requests+0x198>
 204:	ldur	w8, [x29, #-56]
 208:	cmp	w8, #0x17
 20c:	b.le	220 <ss_list_requests+0x220>
 210:	ldur	x1, [x29, #-72]
 214:	mov	w0, #0xa                   	// #10
 218:	bl	0 <fputc>
 21c:	stur	wzr, [x29, #-56]
 220:	stur	wzr, [x29, #-52]
 224:	ldur	w8, [x29, #-52]
 228:	ldur	w9, [x29, #-56]
 22c:	mov	w10, #0x19                  	// #25
 230:	subs	w9, w10, w9
 234:	cmp	w8, w9
 238:	b.ge	258 <ss_list_requests+0x258>  // b.tcont
 23c:	ldur	x1, [x29, #-72]
 240:	mov	w0, #0x20                  	// #32
 244:	bl	0 <fputc>
 248:	ldur	w8, [x29, #-52]
 24c:	add	w8, w8, #0x1
 250:	stur	w8, [x29, #-52]
 254:	b	224 <ss_list_requests+0x224>
 258:	ldur	x8, [x29, #-40]
 25c:	ldr	x0, [x8, #16]
 260:	ldur	x1, [x29, #-72]
 264:	bl	0 <fputs>
 268:	ldur	x1, [x29, #-72]
 26c:	mov	w9, #0xa                   	// #10
 270:	mov	w0, w9
 274:	bl	0 <fputc>
 278:	ldur	x8, [x29, #-40]
 27c:	add	x8, x8, #0x20
 280:	stur	x8, [x29, #-40]
 284:	b	164 <ss_list_requests+0x164>
 288:	ldur	x8, [x29, #-64]
 28c:	add	x8, x8, #0x8
 290:	stur	x8, [x29, #-64]
 294:	b	148 <ss_list_requests+0x148>
 298:	ldur	x0, [x29, #-72]
 29c:	bl	0 <fclose>
 2a0:	add	x8, sp, #0x34
 2a4:	mov	x0, x8
 2a8:	bl	0 <wait>
 2ac:	ldr	x1, [sp, #56]
 2b0:	mov	w9, #0x2                   	// #2
 2b4:	mov	w0, w9
 2b8:	bl	0 <signal>
 2bc:	ldr	x28, [sp, #416]
 2c0:	ldp	x29, x30, [sp, #400]
 2c4:	add	sp, sp, #0x1b0
 2c8:	ret

pager.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_safe_getenv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	str	x0, [sp, #16]
  10:	bl	0 <getuid>
  14:	str	w0, [sp, #12]
  18:	bl	0 <geteuid>
  1c:	ldr	w8, [sp, #12]
  20:	cmp	w8, w0
  24:	b.ne	40 <ss_safe_getenv+0x40>  // b.any
  28:	bl	0 <getgid>
  2c:	str	w0, [sp, #8]
  30:	bl	0 <getegid>
  34:	ldr	w8, [sp, #8]
  38:	cmp	w8, w0
  3c:	b.eq	4c <ss_safe_getenv+0x4c>  // b.none
  40:	mov	x8, xzr
  44:	stur	x8, [x29, #-8]
  48:	b	84 <ss_safe_getenv+0x84>
  4c:	mov	w0, #0x3                   	// #3
  50:	mov	w8, wzr
  54:	mov	w1, w8
  58:	mov	w2, w8
  5c:	mov	w3, w8
  60:	mov	w4, w8
  64:	bl	0 <prctl>
  68:	cbnz	w0, 78 <ss_safe_getenv+0x78>
  6c:	mov	x8, xzr
  70:	stur	x8, [x29, #-8]
  74:	b	84 <ss_safe_getenv+0x84>
  78:	ldr	x0, [sp, #16]
  7c:	bl	0 <secure_getenv>
  80:	stur	x0, [x29, #-8]
  84:	ldur	x0, [x29, #-8]
  88:	ldp	x29, x30, [sp, #32]
  8c:	add	sp, sp, #0x30
  90:	ret

0000000000000094 <ss_pager_create>:
  94:	sub	sp, sp, #0x20
  98:	stp	x29, x30, [sp, #16]
  9c:	add	x29, sp, #0x10
  a0:	add	x0, sp, #0x4
  a4:	bl	0 <pipe>
  a8:	cbz	w0, b8 <ss_pager_create+0x24>
  ac:	mov	w8, #0xffffffff            	// #-1
  b0:	stur	w8, [x29, #-4]
  b4:	b	120 <ss_pager_create+0x8c>
  b8:	bl	0 <fork>
  bc:	mov	w8, #0xffffffff            	// #-1
  c0:	cmp	w0, w8
  c4:	str	w0, [sp]
  c8:	b.eq	dc <ss_pager_create+0x48>  // b.none
  cc:	b	d0 <ss_pager_create+0x3c>
  d0:	ldr	w8, [sp]
  d4:	cbz	w8, e8 <ss_pager_create+0x54>
  d8:	b	110 <ss_pager_create+0x7c>
  dc:	mov	w8, #0xffffffff            	// #-1
  e0:	stur	w8, [x29, #-4]
  e4:	b	120 <ss_pager_create+0x8c>
  e8:	ldr	w0, [sp, #4]
  ec:	mov	w8, wzr
  f0:	mov	w1, w8
  f4:	bl	0 <dup2>
  f8:	mov	w8, #0xffffffff            	// #-1
  fc:	cmp	w0, w8
 100:	b.ne	10c <ss_pager_create+0x78>  // b.any
 104:	mov	w0, #0x1                   	// #1
 108:	bl	0 <exit>
 10c:	bl	130 <ss_page_stdin>
 110:	ldr	w0, [sp, #4]
 114:	bl	0 <close>
 118:	ldr	w8, [sp, #8]
 11c:	stur	w8, [x29, #-4]
 120:	ldur	w0, [x29, #-4]
 124:	ldp	x29, x30, [sp, #16]
 128:	add	sp, sp, #0x20
 12c:	ret

0000000000000130 <ss_page_stdin>:
 130:	sub	sp, sp, #0x130
 134:	stp	x29, x30, [sp, #272]
 138:	str	x28, [sp, #288]
 13c:	add	x29, sp, #0x110
 140:	mov	w8, #0x3                   	// #3
 144:	adrp	x9, 0 <_ss_pager_name>
 148:	add	x9, x9, #0x0
 14c:	stur	w8, [x29, #-4]
 150:	str	x9, [sp, #40]
 154:	ldur	w8, [x29, #-4]
 158:	cmp	w8, #0x20
 15c:	b.ge	178 <ss_page_stdin+0x48>  // b.tcont
 160:	ldur	w0, [x29, #-4]
 164:	bl	0 <close>
 168:	ldur	w8, [x29, #-4]
 16c:	add	w8, w8, #0x1
 170:	stur	w8, [x29, #-4]
 174:	b	154 <ss_page_stdin+0x24>
 178:	mov	w8, #0x2                   	// #2
 17c:	mov	w0, w8
 180:	mov	x9, xzr
 184:	mov	x1, x9
 188:	str	w8, [sp, #36]
 18c:	str	x9, [sp, #24]
 190:	bl	0 <signal>
 194:	mov	w8, wzr
 198:	mov	w0, w8
 19c:	ldr	x9, [sp, #24]
 1a0:	mov	x1, x9
 1a4:	add	x10, sp, #0x88
 1a8:	mov	x2, x10
 1ac:	str	x9, [sp, #16]
 1b0:	str	x10, [sp, #8]
 1b4:	bl	0 <sigprocmask>
 1b8:	ldr	x9, [sp, #8]
 1bc:	mov	x0, x9
 1c0:	ldr	w1, [sp, #36]
 1c4:	bl	0 <sigdelset>
 1c8:	ldr	w8, [sp, #36]
 1cc:	mov	w0, w8
 1d0:	ldr	x1, [sp, #8]
 1d4:	ldr	x2, [sp, #16]
 1d8:	bl	0 <sigprocmask>
 1dc:	ldr	x9, [sp, #40]
 1e0:	ldr	x10, [x9]
 1e4:	cbnz	x10, 210 <ss_page_stdin+0xe0>
 1e8:	adrp	x0, 0 <ss_safe_getenv>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <ss_safe_getenv>
 1f4:	ldr	x8, [sp, #40]
 1f8:	str	x0, [x8]
 1fc:	cbnz	x0, 210 <ss_page_stdin+0xe0>
 200:	adrp	x8, 0 <ss_safe_getenv>
 204:	add	x8, x8, #0x0
 208:	ldr	x9, [sp, #40]
 20c:	str	x8, [x9]
 210:	ldr	x8, [sp, #40]
 214:	ldr	x0, [x8]
 218:	ldr	x1, [x8]
 21c:	mov	x9, xzr
 220:	mov	x2, x9
 224:	bl	0 <execlp>
 228:	mov	w8, wzr
 22c:	mov	w0, w8
 230:	add	x1, sp, #0x38
 234:	mov	x2, #0x50                  	// #80
 238:	bl	0 <read>
 23c:	str	w0, [sp, #52]
 240:	cmp	w0, #0x0
 244:	cset	w8, le
 248:	tbnz	w8, #0, 260 <ss_page_stdin+0x130>
 24c:	ldrsw	x2, [sp, #52]
 250:	mov	w0, #0x1                   	// #1
 254:	add	x1, sp, #0x38
 258:	bl	26c <write_all>
 25c:	b	228 <ss_page_stdin+0xf8>
 260:	bl	0 <__errno_location>
 264:	ldr	w0, [x0]
 268:	bl	0 <exit>

000000000000026c <write_all>:
 26c:	sub	sp, sp, #0x40
 270:	stp	x29, x30, [sp, #48]
 274:	add	x29, sp, #0x30
 278:	stur	w0, [x29, #-8]
 27c:	stur	x1, [x29, #-16]
 280:	str	x2, [sp, #24]
 284:	str	wzr, [sp, #12]
 288:	ldr	x8, [sp, #24]
 28c:	cmp	x8, #0x0
 290:	cset	w9, ls  // ls = plast
 294:	tbnz	w9, #0, 320 <write_all+0xb4>
 298:	ldur	w0, [x29, #-8]
 29c:	ldur	x1, [x29, #-16]
 2a0:	ldr	x2, [sp, #24]
 2a4:	bl	0 <write>
 2a8:	str	x0, [sp, #16]
 2ac:	ldr	x8, [sp, #16]
 2b0:	cmp	x8, #0x0
 2b4:	cset	w9, ge  // ge = tcont
 2b8:	tbnz	w9, #0, 2ec <write_all+0x80>
 2bc:	bl	0 <__errno_location>
 2c0:	ldr	w8, [x0]
 2c4:	cmp	w8, #0xb
 2c8:	b.eq	2dc <write_all+0x70>  // b.none
 2cc:	bl	0 <__errno_location>
 2d0:	ldr	w8, [x0]
 2d4:	cmp	w8, #0x4
 2d8:	b.ne	2e0 <write_all+0x74>  // b.any
 2dc:	b	288 <write_all+0x1c>
 2e0:	mov	w8, #0xffffffff            	// #-1
 2e4:	stur	w8, [x29, #-4]
 2e8:	b	328 <write_all+0xbc>
 2ec:	ldr	x8, [sp, #16]
 2f0:	ldr	x9, [sp, #24]
 2f4:	subs	x8, x9, x8
 2f8:	str	x8, [sp, #24]
 2fc:	ldr	x8, [sp, #16]
 300:	ldur	x9, [x29, #-16]
 304:	add	x8, x9, x8
 308:	stur	x8, [x29, #-16]
 30c:	ldr	x8, [sp, #16]
 310:	ldrsw	x9, [sp, #12]
 314:	add	x8, x9, x8
 318:	str	w8, [sp, #12]
 31c:	b	288 <write_all+0x1c>
 320:	ldr	w8, [sp, #12]
 324:	stur	w8, [x29, #-4]
 328:	ldur	w0, [x29, #-4]
 32c:	ldp	x29, x30, [sp, #48]
 330:	add	sp, sp, #0x40
 334:	ret

requests.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_self_identify>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	adrp	x8, 0 <_ss_table>
  10:	add	x8, x8, #0x0
  14:	adrp	x9, 0 <ss_self_identify>
  18:	add	x9, x9, #0x0
  1c:	stur	w0, [x29, #-4]
  20:	stur	x1, [x29, #-16]
  24:	stur	w2, [x29, #-20]
  28:	str	x3, [sp, #16]
  2c:	ldr	x8, [x8]
  30:	ldursw	x10, [x29, #-20]
  34:	mov	x11, #0x8                   	// #8
  38:	mul	x10, x11, x10
  3c:	add	x8, x8, x10
  40:	ldr	x8, [x8]
  44:	str	x8, [sp, #8]
  48:	ldr	x8, [sp, #8]
  4c:	ldr	x1, [x8]
  50:	ldr	x8, [sp, #8]
  54:	ldr	x2, [x8, #8]
  58:	mov	x0, x9
  5c:	bl	0 <printf>
  60:	ldp	x29, x30, [sp, #48]
  64:	add	sp, sp, #0x40
  68:	ret

000000000000006c <ss_subsystem_name>:
  6c:	sub	sp, sp, #0x30
  70:	stp	x29, x30, [sp, #32]
  74:	add	x29, sp, #0x20
  78:	adrp	x8, 0 <_ss_table>
  7c:	add	x8, x8, #0x0
  80:	adrp	x9, 0 <ss_self_identify>
  84:	add	x9, x9, #0x0
  88:	stur	w0, [x29, #-4]
  8c:	str	x1, [sp, #16]
  90:	str	w2, [sp, #12]
  94:	str	x3, [sp]
  98:	ldr	x8, [x8]
  9c:	ldrsw	x10, [sp, #12]
  a0:	mov	x11, #0x8                   	// #8
  a4:	mul	x10, x11, x10
  a8:	add	x8, x8, x10
  ac:	ldr	x8, [x8]
  b0:	ldr	x1, [x8]
  b4:	mov	x0, x9
  b8:	bl	0 <printf>
  bc:	ldp	x29, x30, [sp, #32]
  c0:	add	sp, sp, #0x30
  c4:	ret

00000000000000c8 <ss_subsystem_version>:
  c8:	sub	sp, sp, #0x30
  cc:	stp	x29, x30, [sp, #32]
  d0:	add	x29, sp, #0x20
  d4:	adrp	x8, 0 <_ss_table>
  d8:	add	x8, x8, #0x0
  dc:	adrp	x9, 0 <ss_self_identify>
  e0:	add	x9, x9, #0x0
  e4:	stur	w0, [x29, #-4]
  e8:	str	x1, [sp, #16]
  ec:	str	w2, [sp, #12]
  f0:	str	x3, [sp]
  f4:	ldr	x8, [x8]
  f8:	ldrsw	x10, [sp, #12]
  fc:	mov	x11, #0x8                   	// #8
 100:	mul	x10, x11, x10
 104:	add	x8, x8, x10
 108:	ldr	x8, [x8]
 10c:	ldr	x1, [x8, #8]
 110:	mov	x0, x9
 114:	bl	0 <printf>
 118:	ldp	x29, x30, [sp, #32]
 11c:	add	sp, sp, #0x30
 120:	ret

0000000000000124 <ss_unimplemented>:
 124:	sub	sp, sp, #0x30
 128:	stp	x29, x30, [sp, #32]
 12c:	add	x29, sp, #0x20
 130:	mov	x8, #0x6d0b                	// #27915
 134:	movk	x8, #0xb, lsl #16
 138:	adrp	x9, 0 <ss_self_identify>
 13c:	add	x9, x9, #0x0
 140:	stur	w0, [x29, #-4]
 144:	str	x1, [sp, #16]
 148:	str	w2, [sp, #12]
 14c:	str	x3, [sp]
 150:	ldr	w0, [sp, #12]
 154:	mov	x1, x8
 158:	mov	x2, x9
 15c:	bl	0 <ss_perror>
 160:	ldp	x29, x30, [sp, #32]
 164:	add	sp, sp, #0x30
 168:	ret

data.o:     file format elf64-littleaarch64


get_readline.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ss_get_readline>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #80]
   8:	add	x29, sp, #0x50
   c:	mov	x8, xzr
  10:	adrp	x9, 0 <_ss_table>
  14:	add	x9, x9, #0x0
  18:	stur	w0, [x29, #-4]
  1c:	stur	x8, [x29, #-16]
  20:	ldr	x9, [x9]
  24:	ldursw	x10, [x29, #-4]
  28:	mov	x11, #0x8                   	// #8
  2c:	mul	x10, x11, x10
  30:	add	x9, x9, x10
  34:	ldr	x9, [x9]
  38:	stur	x9, [x29, #-24]
  3c:	str	x8, [sp, #40]
  40:	ldur	x8, [x29, #-24]
  44:	ldr	x8, [x8, #88]
  48:	cbz	x8, 50 <ss_get_readline+0x50>
  4c:	b	214 <ss_get_readline+0x214>
  50:	adrp	x0, 0 <ss_get_readline>
  54:	add	x0, x0, #0x0
  58:	bl	0 <ss_safe_getenv>
  5c:	str	x0, [sp, #40]
  60:	ldr	x8, [sp, #40]
  64:	cbnz	x8, 74 <ss_get_readline+0x74>
  68:	adrp	x8, 0 <ss_get_readline>
  6c:	add	x8, x8, #0x0
  70:	str	x8, [sp, #40]
  74:	ldr	x8, [sp, #40]
  78:	ldrb	w9, [x8]
  7c:	cbz	w9, 94 <ss_get_readline+0x94>
  80:	ldr	x0, [sp, #40]
  84:	adrp	x1, 0 <ss_get_readline>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <strcmp>
  90:	cbnz	w0, 98 <ss_get_readline+0x98>
  94:	b	214 <ss_get_readline+0x214>
  98:	ldr	x0, [sp, #40]
  9c:	bl	0 <strlen>
  a0:	add	x0, x0, #0x1
  a4:	bl	0 <malloc>
  a8:	str	x0, [sp, #32]
  ac:	ldr	x8, [sp, #32]
  b0:	cbnz	x8, b8 <ss_get_readline+0xb8>
  b4:	b	214 <ss_get_readline+0x214>
  b8:	ldr	x0, [sp, #32]
  bc:	ldr	x1, [sp, #40]
  c0:	bl	0 <strcpy>
  c4:	ldr	x8, [sp, #32]
  c8:	str	x8, [sp, #24]
  cc:	ldr	x8, [sp, #24]
  d0:	cbz	x8, 134 <ss_get_readline+0x134>
  d4:	ldr	x0, [sp, #24]
  d8:	mov	w1, #0x3a                  	// #58
  dc:	bl	0 <strchr>
  e0:	str	x0, [sp, #16]
  e4:	ldr	x8, [sp, #16]
  e8:	cbz	x8, 100 <ss_get_readline+0x100>
  ec:	ldr	x8, [sp, #16]
  f0:	add	x9, x8, #0x1
  f4:	str	x9, [sp, #16]
  f8:	mov	w10, #0x0                   	// #0
  fc:	strb	w10, [x8]
 100:	ldr	x8, [sp, #24]
 104:	ldrb	w9, [x8]
 108:	cbnz	w9, 110 <ss_get_readline+0x110>
 10c:	b	128 <ss_get_readline+0x128>
 110:	ldr	x0, [sp, #24]
 114:	mov	w1, #0x2                   	// #2
 118:	bl	0 <dlopen>
 11c:	stur	x0, [x29, #-16]
 120:	cbz	x0, 128 <ss_get_readline+0x128>
 124:	b	134 <ss_get_readline+0x134>
 128:	ldr	x8, [sp, #16]
 12c:	str	x8, [sp, #24]
 130:	b	cc <ss_get_readline+0xcc>
 134:	ldr	x0, [sp, #32]
 138:	bl	0 <free>
 13c:	ldur	x8, [x29, #-16]
 140:	cbnz	x8, 148 <ss_get_readline+0x148>
 144:	b	214 <ss_get_readline+0x214>
 148:	ldur	x8, [x29, #-16]
 14c:	ldur	x9, [x29, #-24]
 150:	str	x8, [x9, #88]
 154:	ldur	x0, [x29, #-16]
 158:	adrp	x1, 0 <ss_get_readline>
 15c:	add	x1, x1, #0x0
 160:	bl	0 <dlsym>
 164:	ldur	x8, [x29, #-24]
 168:	str	x0, [x8, #104]
 16c:	ldur	x0, [x29, #-16]
 170:	adrp	x1, 0 <ss_get_readline>
 174:	add	x1, x1, #0x0
 178:	bl	0 <dlsym>
 17c:	ldur	x8, [x29, #-24]
 180:	str	x0, [x8, #112]
 184:	ldur	x0, [x29, #-16]
 188:	adrp	x1, 0 <ss_get_readline>
 18c:	add	x1, x1, #0x0
 190:	bl	0 <dlsym>
 194:	ldur	x8, [x29, #-24]
 198:	str	x0, [x8, #120]
 19c:	ldur	x0, [x29, #-16]
 1a0:	adrp	x1, 0 <ss_get_readline>
 1a4:	add	x1, x1, #0x0
 1a8:	bl	0 <dlsym>
 1ac:	ldur	x8, [x29, #-24]
 1b0:	str	x0, [x8, #128]
 1b4:	ldur	x0, [x29, #-16]
 1b8:	adrp	x1, 0 <ss_get_readline>
 1bc:	add	x1, x1, #0x0
 1c0:	bl	0 <dlsym>
 1c4:	stur	x0, [x29, #-32]
 1c8:	cbz	x0, 1dc <ss_get_readline+0x1dc>
 1cc:	ldur	x8, [x29, #-24]
 1d0:	ldr	x8, [x8]
 1d4:	ldur	x9, [x29, #-32]
 1d8:	str	x8, [x9]
 1dc:	ldur	x0, [x29, #-16]
 1e0:	adrp	x1, 0 <ss_get_readline>
 1e4:	add	x1, x1, #0x0
 1e8:	bl	0 <dlsym>
 1ec:	str	x0, [sp, #8]
 1f0:	cbz	x0, 204 <ss_get_readline+0x204>
 1f4:	ldr	x8, [sp, #8]
 1f8:	adrp	x9, 0 <ss_rl_completion>
 1fc:	add	x9, x9, #0x0
 200:	str	x9, [x8]
 204:	ldur	x8, [x29, #-24]
 208:	adrp	x9, 0 <ss_get_readline>
 20c:	add	x9, x9, #0x0
 210:	str	x9, [x8, #96]
 214:	ldp	x29, x30, [sp, #80]
 218:	add	sp, sp, #0x60
 21c:	ret

0000000000000220 <ss_release_readline>:
 220:	sub	sp, sp, #0x20
 224:	stp	x29, x30, [sp, #16]
 228:	add	x29, sp, #0x10
 22c:	str	x0, [sp, #8]
 230:	ldr	x8, [sp, #8]
 234:	ldr	x8, [x8, #88]
 238:	cbnz	x8, 240 <ss_release_readline+0x20>
 23c:	b	280 <ss_release_readline+0x60>
 240:	ldr	x8, [sp, #8]
 244:	mov	x9, xzr
 248:	str	x9, [x8, #104]
 24c:	ldr	x8, [sp, #8]
 250:	str	x9, [x8, #112]
 254:	ldr	x8, [sp, #8]
 258:	str	x9, [x8, #120]
 25c:	ldr	x8, [sp, #8]
 260:	str	x9, [x8, #128]
 264:	ldr	x8, [sp, #8]
 268:	ldr	x0, [x8, #88]
 26c:	str	x9, [sp]
 270:	bl	0 <dlclose>
 274:	ldr	x8, [sp, #8]
 278:	ldr	x9, [sp]
 27c:	str	x9, [x8, #88]
 280:	ldp	x29, x30, [sp, #16]
 284:	add	sp, sp, #0x20
 288:	ret
