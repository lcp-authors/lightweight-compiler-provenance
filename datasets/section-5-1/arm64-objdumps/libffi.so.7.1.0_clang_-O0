
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019a0 <.init>:
    19a0:	stp	x29, x30, [sp, #-16]!
    19a4:	mov	x29, sp
    19a8:	bl	1c90 <ffi_prep_java_raw_closure_loc@plt+0x10>
    19ac:	ldp	x29, x30, [sp], #16
    19b0:	ret

Disassembly of section .plt:

00000000000019c0 <memcpy@plt-0x20>:
    19c0:	stp	x16, x30, [sp, #-16]!
    19c4:	adrp	x16, 1b000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10b28>
    19c8:	ldr	x17, [x16, #4088]
    19cc:	add	x16, x16, #0xff8
    19d0:	br	x17
    19d4:	nop
    19d8:	nop
    19dc:	nop

00000000000019e0 <memcpy@plt>:
    19e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16]
    19e8:	add	x16, x16, #0x0
    19ec:	br	x17

00000000000019f0 <ffi_prep_closure_loc@plt>:
    19f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #8]
    19f8:	add	x16, x16, #0x8
    19fc:	br	x17

0000000000001a00 <strlen@plt>:
    1a00:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #16]
    1a08:	add	x16, x16, #0x10
    1a0c:	br	x17

0000000000001a10 <ffi_java_raw_to_ptrarray@plt>:
    1a10:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #24]
    1a18:	add	x16, x16, #0x18
    1a1c:	br	x17

0000000000001a20 <__cxa_finalize@plt>:
    1a20:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #32]
    1a28:	add	x16, x16, #0x20
    1a2c:	br	x17

0000000000001a30 <statfs@plt>:
    1a30:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #40]
    1a38:	add	x16, x16, #0x28
    1a3c:	br	x17

0000000000001a40 <fclose@plt>:
    1a40:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #48]
    1a48:	add	x16, x16, #0x30
    1a4c:	br	x17

0000000000001a50 <fopen@plt>:
    1a50:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #56]
    1a58:	add	x16, x16, #0x38
    1a5c:	br	x17

0000000000001a60 <open@plt>:
    1a60:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #64]
    1a68:	add	x16, x16, #0x40
    1a6c:	br	x17

0000000000001a70 <strncmp@plt>:
    1a70:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #72]
    1a78:	add	x16, x16, #0x48
    1a7c:	br	x17

0000000000001a80 <memset@plt>:
    1a80:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #80]
    1a88:	add	x16, x16, #0x50
    1a8c:	br	x17

0000000000001a90 <ffi_raw_to_ptrarray@plt>:
    1a90:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #88]
    1a98:	add	x16, x16, #0x58
    1a9c:	br	x17

0000000000001aa0 <ffi_prep_raw_closure_loc@plt>:
    1aa0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #96]
    1aa8:	add	x16, x16, #0x60
    1aac:	br	x17

0000000000001ab0 <setmntent@plt>:
    1ab0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #104]
    1ab8:	add	x16, x16, #0x68
    1abc:	br	x17

0000000000001ac0 <endmntent@plt>:
    1ac0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #112]
    1ac8:	add	x16, x16, #0x70
    1acc:	br	x17

0000000000001ad0 <pthread_mutex_init@plt>:
    1ad0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #120]
    1ad8:	add	x16, x16, #0x78
    1adc:	br	x17

0000000000001ae0 <close@plt>:
    1ae0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #128]
    1ae8:	add	x16, x16, #0x80
    1aec:	br	x17

0000000000001af0 <__gmon_start__@plt>:
    1af0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #136]
    1af8:	add	x16, x16, #0x88
    1afc:	br	x17

0000000000001b00 <write@plt>:
    1b00:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #144]
    1b08:	add	x16, x16, #0x90
    1b0c:	br	x17

0000000000001b10 <abort@plt>:
    1b10:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #152]
    1b18:	add	x16, x16, #0x98
    1b1c:	br	x17

0000000000001b20 <mkostemp@plt>:
    1b20:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #160]
    1b28:	add	x16, x16, #0xa0
    1b2c:	br	x17

0000000000001b30 <access@plt>:
    1b30:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #168]
    1b38:	add	x16, x16, #0xa8
    1b3c:	br	x17

0000000000001b40 <mmap@plt>:
    1b40:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #176]
    1b48:	add	x16, x16, #0xb0
    1b4c:	br	x17

0000000000001b50 <getline@plt>:
    1b50:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #184]
    1b58:	add	x16, x16, #0xb8
    1b5c:	br	x17

0000000000001b60 <free@plt>:
    1b60:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #192]
    1b68:	add	x16, x16, #0xc0
    1b6c:	br	x17

0000000000001b70 <ffi_java_raw_size@plt>:
    1b70:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #200]
    1b78:	add	x16, x16, #0xc8
    1b7c:	br	x17

0000000000001b80 <ffi_raw_size@plt>:
    1b80:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #208]
    1b88:	add	x16, x16, #0xd0
    1b8c:	br	x17

0000000000001b90 <ffi_ptrarray_to_raw@plt>:
    1b90:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #216]
    1b98:	add	x16, x16, #0xd8
    1b9c:	br	x17

0000000000001ba0 <hasmntopt@plt>:
    1ba0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #224]
    1ba8:	add	x16, x16, #0xe0
    1bac:	br	x17

0000000000001bb0 <strchr@plt>:
    1bb0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #232]
    1bb8:	add	x16, x16, #0xe8
    1bbc:	br	x17

0000000000001bc0 <munmap@plt>:
    1bc0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #240]
    1bc8:	add	x16, x16, #0xf0
    1bcc:	br	x17

0000000000001bd0 <ffi_call@plt>:
    1bd0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #248]
    1bd8:	add	x16, x16, #0xf8
    1bdc:	br	x17

0000000000001be0 <sysconf@plt>:
    1be0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #256]
    1be8:	add	x16, x16, #0x100
    1bec:	br	x17

0000000000001bf0 <getmntent_r@plt>:
    1bf0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #264]
    1bf8:	add	x16, x16, #0x108
    1bfc:	br	x17

0000000000001c00 <ftruncate@plt>:
    1c00:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #272]
    1c08:	add	x16, x16, #0x110
    1c0c:	br	x17

0000000000001c10 <__errno_location@plt>:
    1c10:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #280]
    1c18:	add	x16, x16, #0x118
    1c1c:	br	x17

0000000000001c20 <ffs@plt>:
    1c20:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #288]
    1c28:	add	x16, x16, #0x120
    1c2c:	br	x17

0000000000001c30 <getenv@plt>:
    1c30:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #296]
    1c38:	add	x16, x16, #0x128
    1c3c:	br	x17

0000000000001c40 <ffi_java_ptrarray_to_raw@plt>:
    1c40:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #304]
    1c48:	add	x16, x16, #0x130
    1c4c:	br	x17

0000000000001c50 <pthread_mutex_lock@plt>:
    1c50:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #312]
    1c58:	add	x16, x16, #0x138
    1c5c:	br	x17

0000000000001c60 <pthread_mutex_unlock@plt>:
    1c60:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #320]
    1c68:	add	x16, x16, #0x140
    1c6c:	br	x17

0000000000001c70 <unlink@plt>:
    1c70:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #328]
    1c78:	add	x16, x16, #0x148
    1c7c:	br	x17

0000000000001c80 <ffi_prep_java_raw_closure_loc@plt>:
    1c80:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #336]
    1c88:	add	x16, x16, #0x150
    1c8c:	br	x17

Disassembly of section .text:

0000000000001c90 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x500>:
    1c90:	adrp	x0, 1b000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10b28>
    1c94:	ldr	x0, [x0, #4056]
    1c98:	cbz	x0, 1ca0 <ffi_prep_java_raw_closure_loc@plt+0x20>
    1c9c:	b	1af0 <__gmon_start__@plt>
    1ca0:	ret
    1ca4:	nop
    1ca8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    1cac:	add	x0, x0, #0x240
    1cb0:	adrp	x1, 1c000 <memcpy@GLIBC_2.17>
    1cb4:	add	x1, x1, #0x240
    1cb8:	cmp	x1, x0
    1cbc:	b.eq	1cd4 <ffi_prep_java_raw_closure_loc@plt+0x54>  // b.none
    1cc0:	adrp	x1, 1b000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10b28>
    1cc4:	ldr	x1, [x1, #4040]
    1cc8:	cbz	x1, 1cd4 <ffi_prep_java_raw_closure_loc@plt+0x54>
    1ccc:	mov	x16, x1
    1cd0:	br	x16
    1cd4:	ret
    1cd8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    1cdc:	add	x0, x0, #0x240
    1ce0:	adrp	x1, 1c000 <memcpy@GLIBC_2.17>
    1ce4:	add	x1, x1, #0x240
    1ce8:	sub	x1, x1, x0
    1cec:	lsr	x2, x1, #63
    1cf0:	add	x1, x2, x1, asr #3
    1cf4:	cmp	xzr, x1, asr #1
    1cf8:	asr	x1, x1, #1
    1cfc:	b.eq	1d14 <ffi_prep_java_raw_closure_loc@plt+0x94>  // b.none
    1d00:	adrp	x2, 1b000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10b28>
    1d04:	ldr	x2, [x2, #4064]
    1d08:	cbz	x2, 1d14 <ffi_prep_java_raw_closure_loc@plt+0x94>
    1d0c:	mov	x16, x2
    1d10:	br	x16
    1d14:	ret
    1d18:	stp	x29, x30, [sp, #-32]!
    1d1c:	mov	x29, sp
    1d20:	str	x19, [sp, #16]
    1d24:	adrp	x19, 1c000 <memcpy@GLIBC_2.17>
    1d28:	ldrb	w0, [x19, #576]
    1d2c:	cbnz	w0, 1d54 <ffi_prep_java_raw_closure_loc@plt+0xd4>
    1d30:	adrp	x0, 1b000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10b28>
    1d34:	ldr	x0, [x0, #4048]
    1d38:	cbz	x0, 1d48 <ffi_prep_java_raw_closure_loc@plt+0xc8>
    1d3c:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    1d40:	ldr	x0, [x0, #344]
    1d44:	bl	1a20 <__cxa_finalize@plt>
    1d48:	bl	1ca8 <ffi_prep_java_raw_closure_loc@plt+0x28>
    1d4c:	mov	w0, #0x1                   	// #1
    1d50:	strb	w0, [x19, #576]
    1d54:	ldr	x19, [sp, #16]
    1d58:	ldp	x29, x30, [sp], #32
    1d5c:	ret
    1d60:	b	1cd8 <ffi_prep_java_raw_closure_loc@plt+0x58>
    1d64:	sub	sp, sp, #0x50
    1d68:	stp	x29, x30, [sp, #64]
    1d6c:	add	x29, sp, #0x40
    1d70:	stur	x0, [x29, #-16]
    1d74:	stur	w1, [x29, #-20]
    1d78:	stur	w2, [x29, #-24]
    1d7c:	stur	w3, [x29, #-28]
    1d80:	str	w4, [sp, #32]
    1d84:	str	x5, [sp, #24]
    1d88:	str	x6, [sp, #16]
    1d8c:	str	wzr, [sp, #12]
    1d90:	ldur	w8, [x29, #-20]
    1d94:	cmp	w8, #0x0
    1d98:	cset	w8, ls  // ls = plast
    1d9c:	tbnz	w8, #0, 1dac <ffi_prep_java_raw_closure_loc@plt+0x12c>
    1da0:	ldur	w8, [x29, #-20]
    1da4:	cmp	w8, #0x2
    1da8:	b.cc	1db8 <ffi_prep_java_raw_closure_loc@plt+0x138>  // b.lo, b.ul, b.last
    1dac:	mov	w8, #0x2                   	// #2
    1db0:	stur	w8, [x29, #-4]
    1db4:	b	1f40 <ffi_prep_java_raw_closure_loc@plt+0x2c0>
    1db8:	ldur	w8, [x29, #-20]
    1dbc:	ldur	x9, [x29, #-16]
    1dc0:	str	w8, [x9]
    1dc4:	ldr	x9, [sp, #16]
    1dc8:	ldur	x10, [x29, #-16]
    1dcc:	str	x9, [x10, #8]
    1dd0:	ldr	w8, [sp, #32]
    1dd4:	ldur	x9, [x29, #-16]
    1dd8:	str	w8, [x9, #4]
    1ddc:	ldr	x9, [sp, #24]
    1de0:	ldur	x10, [x29, #-16]
    1de4:	str	x9, [x10, #16]
    1de8:	ldur	x9, [x29, #-16]
    1dec:	str	wzr, [x9, #28]
    1df0:	ldur	x9, [x29, #-16]
    1df4:	ldr	x9, [x9, #16]
    1df8:	ldr	x9, [x9]
    1dfc:	cbnz	x9, 1e24 <ffi_prep_java_raw_closure_loc@plt+0x1a4>
    1e00:	ldur	x8, [x29, #-16]
    1e04:	ldr	x0, [x8, #16]
    1e08:	mov	x8, xzr
    1e0c:	mov	x1, x8
    1e10:	bl	1f50 <ffi_prep_java_raw_closure_loc@plt+0x2d0>
    1e14:	cbz	w0, 1e24 <ffi_prep_java_raw_closure_loc@plt+0x1a4>
    1e18:	mov	w8, #0x1                   	// #1
    1e1c:	stur	w8, [x29, #-4]
    1e20:	b	1f40 <ffi_prep_java_raw_closure_loc@plt+0x2c0>
    1e24:	ldur	x8, [x29, #-16]
    1e28:	ldr	x8, [x8, #16]
    1e2c:	ldrh	w9, [x8, #10]
    1e30:	cmp	w9, #0xd
    1e34:	b.ne	1e40 <ffi_prep_java_raw_closure_loc@plt+0x1c0>  // b.any
    1e38:	mov	w8, #0x8                   	// #8
    1e3c:	str	w8, [sp, #12]
    1e40:	ldur	x8, [x29, #-16]
    1e44:	ldr	x8, [x8, #8]
    1e48:	str	x8, [sp]
    1e4c:	ldur	x8, [x29, #-16]
    1e50:	ldr	w9, [x8, #4]
    1e54:	str	w9, [sp, #8]
    1e58:	ldr	w8, [sp, #8]
    1e5c:	cmp	w8, #0x0
    1e60:	cset	w8, ls  // ls = plast
    1e64:	tbnz	w8, #0, 1f28 <ffi_prep_java_raw_closure_loc@plt+0x2a8>
    1e68:	ldr	x8, [sp]
    1e6c:	ldr	x8, [x8]
    1e70:	ldr	x8, [x8]
    1e74:	cbnz	x8, 1e9c <ffi_prep_java_raw_closure_loc@plt+0x21c>
    1e78:	ldr	x8, [sp]
    1e7c:	ldr	x0, [x8]
    1e80:	mov	x8, xzr
    1e84:	mov	x1, x8
    1e88:	bl	1f50 <ffi_prep_java_raw_closure_loc@plt+0x2d0>
    1e8c:	cbz	w0, 1e9c <ffi_prep_java_raw_closure_loc@plt+0x21c>
    1e90:	mov	w8, #0x1                   	// #1
    1e94:	stur	w8, [x29, #-4]
    1e98:	b	1f40 <ffi_prep_java_raw_closure_loc@plt+0x2c0>
    1e9c:	ldr	x8, [sp]
    1ea0:	ldr	x8, [x8]
    1ea4:	ldrh	w9, [x8, #8]
    1ea8:	subs	w9, w9, #0x1
    1eac:	ldr	w10, [sp, #12]
    1eb0:	and	w9, w9, w10
    1eb4:	cbz	w9, 1ee8 <ffi_prep_java_raw_closure_loc@plt+0x268>
    1eb8:	ldr	w8, [sp, #12]
    1ebc:	mov	w9, w8
    1ec0:	subs	x9, x9, #0x1
    1ec4:	ldr	x10, [sp]
    1ec8:	ldr	x10, [x10]
    1ecc:	ldrh	w8, [x10, #8]
    1ed0:	subs	w8, w8, #0x1
    1ed4:	mov	w0, w8
    1ed8:	sxtw	x10, w0
    1edc:	orr	x9, x9, x10
    1ee0:	add	x9, x9, #0x1
    1ee4:	str	w9, [sp, #12]
    1ee8:	ldr	x8, [sp]
    1eec:	ldr	x8, [x8]
    1ef0:	ldr	x8, [x8]
    1ef4:	subs	x8, x8, #0x1
    1ef8:	orr	x8, x8, #0x7
    1efc:	add	x8, x8, #0x1
    1f00:	ldr	w9, [sp, #12]
    1f04:	add	w8, w9, w8
    1f08:	str	w8, [sp, #12]
    1f0c:	ldr	w8, [sp, #8]
    1f10:	subs	w8, w8, #0x1
    1f14:	str	w8, [sp, #8]
    1f18:	ldr	x9, [sp]
    1f1c:	add	x9, x9, #0x8
    1f20:	str	x9, [sp]
    1f24:	b	1e58 <ffi_prep_java_raw_closure_loc@plt+0x1d8>
    1f28:	ldr	w8, [sp, #12]
    1f2c:	ldur	x9, [x29, #-16]
    1f30:	str	w8, [x9, #24]
    1f34:	ldur	x0, [x29, #-16]
    1f38:	bl	8a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53dc>
    1f3c:	stur	w0, [x29, #-4]
    1f40:	ldur	w0, [x29, #-4]
    1f44:	ldp	x29, x30, [sp, #64]
    1f48:	add	sp, sp, #0x50
    1f4c:	ret
    1f50:	sub	sp, sp, #0x40
    1f54:	stp	x29, x30, [sp, #48]
    1f58:	add	x29, sp, #0x30
    1f5c:	stur	x0, [x29, #-16]
    1f60:	str	x1, [sp, #24]
    1f64:	ldur	x8, [x29, #-16]
    1f68:	mov	w9, #0x1                   	// #1
    1f6c:	str	w9, [sp, #12]
    1f70:	cbz	x8, 1f88 <ffi_prep_java_raw_closure_loc@plt+0x308>
    1f74:	ldur	x8, [x29, #-16]
    1f78:	ldr	x8, [x8, #16]
    1f7c:	cmp	x8, #0x0
    1f80:	cset	w9, eq  // eq = none
    1f84:	str	w9, [sp, #12]
    1f88:	ldr	w8, [sp, #12]
    1f8c:	tst	w8, #0x1
    1f90:	cset	w8, ne  // ne = any
    1f94:	and	w8, w8, #0x1
    1f98:	mov	w0, w8
    1f9c:	sxtw	x9, w0
    1fa0:	cbz	x9, 1fb0 <ffi_prep_java_raw_closure_loc@plt+0x330>
    1fa4:	mov	w8, #0x1                   	// #1
    1fa8:	stur	w8, [x29, #-4]
    1fac:	b	2180 <ffi_prep_java_raw_closure_loc@plt+0x500>
    1fb0:	ldur	x8, [x29, #-16]
    1fb4:	str	xzr, [x8]
    1fb8:	ldur	x8, [x29, #-16]
    1fbc:	mov	w9, #0x0                   	// #0
    1fc0:	strh	w9, [x8, #8]
    1fc4:	ldur	x8, [x29, #-16]
    1fc8:	ldr	x8, [x8, #16]
    1fcc:	str	x8, [sp, #16]
    1fd0:	ldr	x8, [sp, #16]
    1fd4:	cmp	x8, #0x0
    1fd8:	cset	w9, eq  // eq = none
    1fdc:	tst	w9, #0x1
    1fe0:	cset	w9, ne  // ne = any
    1fe4:	and	w9, w9, #0x1
    1fe8:	mov	w0, w9
    1fec:	sxtw	x8, w0
    1ff0:	cbz	x8, 2000 <ffi_prep_java_raw_closure_loc@plt+0x380>
    1ff4:	mov	w8, #0x1                   	// #1
    1ff8:	stur	w8, [x29, #-4]
    1ffc:	b	2180 <ffi_prep_java_raw_closure_loc@plt+0x500>
    2000:	ldr	x8, [sp, #16]
    2004:	ldr	x8, [x8]
    2008:	cbz	x8, 2134 <ffi_prep_java_raw_closure_loc@plt+0x4b4>
    200c:	ldr	x8, [sp, #16]
    2010:	ldr	x8, [x8]
    2014:	ldr	x8, [x8]
    2018:	mov	w9, #0x0                   	// #0
    201c:	str	w9, [sp, #8]
    2020:	cbnz	x8, 2044 <ffi_prep_java_raw_closure_loc@plt+0x3c4>
    2024:	ldr	x8, [sp, #16]
    2028:	ldr	x0, [x8]
    202c:	mov	x8, xzr
    2030:	mov	x1, x8
    2034:	bl	1f50 <ffi_prep_java_raw_closure_loc@plt+0x2d0>
    2038:	cmp	w0, #0x0
    203c:	cset	w9, ne  // ne = any
    2040:	str	w9, [sp, #8]
    2044:	ldr	w8, [sp, #8]
    2048:	tst	w8, #0x1
    204c:	cset	w8, ne  // ne = any
    2050:	and	w8, w8, #0x1
    2054:	mov	w0, w8
    2058:	sxtw	x9, w0
    205c:	cbz	x9, 206c <ffi_prep_java_raw_closure_loc@plt+0x3ec>
    2060:	mov	w8, #0x1                   	// #1
    2064:	stur	w8, [x29, #-4]
    2068:	b	2180 <ffi_prep_java_raw_closure_loc@plt+0x500>
    206c:	ldur	x8, [x29, #-16]
    2070:	ldr	x8, [x8]
    2074:	subs	x8, x8, #0x1
    2078:	ldr	x9, [sp, #16]
    207c:	ldr	x9, [x9]
    2080:	ldrh	w10, [x9, #8]
    2084:	subs	w10, w10, #0x1
    2088:	mov	w0, w10
    208c:	sxtw	x9, w0
    2090:	orr	x8, x8, x9
    2094:	add	x8, x8, #0x1
    2098:	ldur	x9, [x29, #-16]
    209c:	str	x8, [x9]
    20a0:	ldr	x8, [sp, #24]
    20a4:	cbz	x8, 20c0 <ffi_prep_java_raw_closure_loc@plt+0x440>
    20a8:	ldur	x8, [x29, #-16]
    20ac:	ldr	x8, [x8]
    20b0:	ldr	x9, [sp, #24]
    20b4:	add	x10, x9, #0x8
    20b8:	str	x10, [sp, #24]
    20bc:	str	x8, [x9]
    20c0:	ldr	x8, [sp, #16]
    20c4:	ldr	x8, [x8]
    20c8:	ldr	x8, [x8]
    20cc:	ldur	x9, [x29, #-16]
    20d0:	ldr	x10, [x9]
    20d4:	add	x8, x10, x8
    20d8:	str	x8, [x9]
    20dc:	ldur	x8, [x29, #-16]
    20e0:	ldrh	w11, [x8, #8]
    20e4:	ldr	x8, [sp, #16]
    20e8:	ldr	x8, [x8]
    20ec:	ldrh	w12, [x8, #8]
    20f0:	cmp	w11, w12
    20f4:	b.le	2108 <ffi_prep_java_raw_closure_loc@plt+0x488>
    20f8:	ldur	x8, [x29, #-16]
    20fc:	ldrh	w9, [x8, #8]
    2100:	str	w9, [sp, #4]
    2104:	b	2118 <ffi_prep_java_raw_closure_loc@plt+0x498>
    2108:	ldr	x8, [sp, #16]
    210c:	ldr	x8, [x8]
    2110:	ldrh	w9, [x8, #8]
    2114:	str	w9, [sp, #4]
    2118:	ldr	w8, [sp, #4]
    211c:	ldur	x9, [x29, #-16]
    2120:	strh	w8, [x9, #8]
    2124:	ldr	x9, [sp, #16]
    2128:	add	x9, x9, #0x8
    212c:	str	x9, [sp, #16]
    2130:	b	2000 <ffi_prep_java_raw_closure_loc@plt+0x380>
    2134:	ldur	x8, [x29, #-16]
    2138:	ldr	x8, [x8]
    213c:	subs	x8, x8, #0x1
    2140:	ldur	x9, [x29, #-16]
    2144:	ldrh	w10, [x9, #8]
    2148:	subs	w10, w10, #0x1
    214c:	mov	w0, w10
    2150:	sxtw	x9, w0
    2154:	orr	x8, x8, x9
    2158:	add	x8, x8, #0x1
    215c:	ldur	x9, [x29, #-16]
    2160:	str	x8, [x9]
    2164:	ldur	x8, [x29, #-16]
    2168:	ldr	x8, [x8]
    216c:	cbnz	x8, 217c <ffi_prep_java_raw_closure_loc@plt+0x4fc>
    2170:	mov	w8, #0x1                   	// #1
    2174:	stur	w8, [x29, #-4]
    2178:	b	2180 <ffi_prep_java_raw_closure_loc@plt+0x500>
    217c:	stur	wzr, [x29, #-4]
    2180:	ldur	w0, [x29, #-4]
    2184:	ldp	x29, x30, [sp, #48]
    2188:	add	sp, sp, #0x40
    218c:	ret

0000000000002190 <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    2190:	sub	sp, sp, #0x30
    2194:	stp	x29, x30, [sp, #32]
    2198:	add	x29, sp, #0x20
    219c:	mov	w8, wzr
    21a0:	stur	x0, [x29, #-8]
    21a4:	stur	w1, [x29, #-12]
    21a8:	str	w2, [sp, #16]
    21ac:	str	x3, [sp, #8]
    21b0:	str	x4, [sp]
    21b4:	ldur	x0, [x29, #-8]
    21b8:	ldur	w1, [x29, #-12]
    21bc:	ldr	w3, [sp, #16]
    21c0:	ldr	w4, [sp, #16]
    21c4:	ldr	x5, [sp, #8]
    21c8:	ldr	x6, [sp]
    21cc:	mov	w2, w8
    21d0:	bl	1d64 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    21d4:	ldp	x29, x30, [sp, #32]
    21d8:	add	sp, sp, #0x30
    21dc:	ret

00000000000021e0 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    21e0:	sub	sp, sp, #0x40
    21e4:	stp	x29, x30, [sp, #48]
    21e8:	add	x29, sp, #0x30
    21ec:	mov	w8, #0x1                   	// #1
    21f0:	stur	x0, [x29, #-8]
    21f4:	stur	w1, [x29, #-12]
    21f8:	stur	w2, [x29, #-16]
    21fc:	stur	w3, [x29, #-20]
    2200:	str	x4, [sp, #16]
    2204:	str	x5, [sp, #8]
    2208:	ldur	x0, [x29, #-8]
    220c:	ldur	w1, [x29, #-12]
    2210:	ldur	w3, [x29, #-16]
    2214:	ldur	w4, [x29, #-20]
    2218:	ldr	x5, [sp, #16]
    221c:	ldr	x6, [sp, #8]
    2220:	mov	w2, w8
    2224:	bl	1d64 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    2228:	ldp	x29, x30, [sp, #48]
    222c:	add	sp, sp, #0x40
    2230:	ret

0000000000002234 <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    2234:	sub	sp, sp, #0x30
    2238:	stp	x29, x30, [sp, #32]
    223c:	add	x29, sp, #0x20
    2240:	stur	x0, [x29, #-8]
    2244:	str	x1, [sp, #16]
    2248:	str	x2, [sp, #8]
    224c:	str	x3, [sp]
    2250:	ldur	x0, [x29, #-8]
    2254:	ldr	x1, [sp, #16]
    2258:	ldr	x2, [sp, #8]
    225c:	ldr	x3, [sp]
    2260:	ldur	x4, [x29, #-8]
    2264:	bl	19f0 <ffi_prep_closure_loc@plt>
    2268:	ldp	x29, x30, [sp, #32]
    226c:	add	sp, sp, #0x30
    2270:	ret

0000000000002274 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    2274:	sub	sp, sp, #0x30
    2278:	stp	x29, x30, [sp, #32]
    227c:	add	x29, sp, #0x20
    2280:	stur	w0, [x29, #-8]
    2284:	str	x1, [sp, #16]
    2288:	str	x2, [sp, #8]
    228c:	ldur	w8, [x29, #-8]
    2290:	cmp	w8, #0x0
    2294:	cset	w8, ls  // ls = plast
    2298:	tbnz	w8, #0, 22a8 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x34>
    229c:	ldur	w8, [x29, #-8]
    22a0:	cmp	w8, #0x2
    22a4:	b.cc	22b4 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x40>  // b.lo, b.ul, b.last
    22a8:	mov	w8, #0x2                   	// #2
    22ac:	stur	w8, [x29, #-4]
    22b0:	b	22e0 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x6c>
    22b4:	ldr	x8, [sp, #16]
    22b8:	ldrh	w9, [x8, #10]
    22bc:	cmp	w9, #0xd
    22c0:	b.eq	22d0 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x5c>  // b.none
    22c4:	mov	w8, #0x1                   	// #1
    22c8:	stur	w8, [x29, #-4]
    22cc:	b	22e0 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x6c>
    22d0:	ldr	x0, [sp, #16]
    22d4:	ldr	x1, [sp, #8]
    22d8:	bl	1f50 <ffi_prep_java_raw_closure_loc@plt+0x2d0>
    22dc:	stur	w0, [x29, #-4]
    22e0:	ldur	w0, [x29, #-4]
    22e4:	ldp	x29, x30, [sp, #32]
    22e8:	add	sp, sp, #0x30
    22ec:	ret

00000000000022f0 <ffi_raw_size@@LIBFFI_BASE_7.0>:
    22f0:	sub	sp, sp, #0x20
    22f4:	str	x0, [sp, #24]
    22f8:	str	xzr, [sp, #16]
    22fc:	ldr	x8, [sp, #24]
    2300:	ldr	x8, [x8, #8]
    2304:	str	x8, [sp]
    2308:	ldr	x8, [sp, #24]
    230c:	ldr	w9, [x8, #4]
    2310:	subs	w9, w9, #0x1
    2314:	str	w9, [sp, #12]
    2318:	ldr	w8, [sp, #12]
    231c:	cmp	w8, #0x0
    2320:	cset	w8, lt  // lt = tstop
    2324:	tbnz	w8, #0, 238c <ffi_raw_size@@LIBFFI_BASE_7.0+0x9c>
    2328:	ldr	x8, [sp]
    232c:	ldr	x8, [x8]
    2330:	ldrh	w9, [x8, #10]
    2334:	cmp	w9, #0xd
    2338:	b.ne	234c <ffi_raw_size@@LIBFFI_BASE_7.0+0x5c>  // b.any
    233c:	ldr	x8, [sp, #16]
    2340:	add	x8, x8, #0x8
    2344:	str	x8, [sp, #16]
    2348:	b	2370 <ffi_raw_size@@LIBFFI_BASE_7.0+0x80>
    234c:	ldr	x8, [sp]
    2350:	ldr	x8, [x8]
    2354:	ldr	x8, [x8]
    2358:	subs	x8, x8, #0x1
    235c:	orr	x8, x8, #0x7
    2360:	add	x8, x8, #0x1
    2364:	ldr	x9, [sp, #16]
    2368:	add	x8, x9, x8
    236c:	str	x8, [sp, #16]
    2370:	ldr	w8, [sp, #12]
    2374:	subs	w8, w8, #0x1
    2378:	str	w8, [sp, #12]
    237c:	ldr	x9, [sp]
    2380:	add	x9, x9, #0x8
    2384:	str	x9, [sp]
    2388:	b	2318 <ffi_raw_size@@LIBFFI_BASE_7.0+0x28>
    238c:	ldr	x0, [sp, #16]
    2390:	add	sp, sp, #0x20
    2394:	ret

0000000000002398 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    2398:	sub	sp, sp, #0x30
    239c:	str	x0, [sp, #40]
    23a0:	str	x1, [sp, #32]
    23a4:	str	x2, [sp, #24]
    23a8:	ldr	x8, [sp, #40]
    23ac:	ldr	x8, [x8, #8]
    23b0:	str	x8, [sp, #8]
    23b4:	str	wzr, [sp, #20]
    23b8:	ldr	w8, [sp, #20]
    23bc:	ldr	x9, [sp, #40]
    23c0:	ldr	w10, [x9, #4]
    23c4:	cmp	w8, w10
    23c8:	b.cs	2494 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xfc>  // b.hs, b.nlast
    23cc:	ldr	x8, [sp, #8]
    23d0:	ldr	x8, [x8]
    23d4:	ldrh	w9, [x8, #10]
    23d8:	cmp	w9, #0xd
    23dc:	b.ne	23fc <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x64>  // b.any
    23e0:	ldr	x8, [sp, #32]
    23e4:	add	x9, x8, #0x8
    23e8:	str	x9, [sp, #32]
    23ec:	ldr	x8, [x8]
    23f0:	ldr	x9, [sp, #24]
    23f4:	str	x8, [x9]
    23f8:	b	246c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xd4>
    23fc:	ldr	x8, [sp, #8]
    2400:	ldr	x8, [x8]
    2404:	ldrh	w9, [x8, #10]
    2408:	cmp	w9, #0xf
    240c:	b.ne	242c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x94>  // b.any
    2410:	ldr	x8, [sp, #32]
    2414:	add	x9, x8, #0x8
    2418:	str	x9, [sp, #32]
    241c:	ldr	x8, [x8]
    2420:	ldr	x9, [sp, #24]
    2424:	str	x8, [x9]
    2428:	b	246c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xd4>
    242c:	ldr	x8, [sp, #32]
    2430:	ldr	x9, [sp, #24]
    2434:	str	x8, [x9]
    2438:	ldr	x8, [sp, #8]
    243c:	ldr	x8, [x8]
    2440:	ldr	x8, [x8]
    2444:	subs	x8, x8, #0x1
    2448:	orr	x8, x8, #0x7
    244c:	add	x8, x8, #0x1
    2450:	mov	x9, #0x8                   	// #8
    2454:	udiv	x8, x8, x9
    2458:	ldr	x9, [sp, #32]
    245c:	mov	x10, #0x8                   	// #8
    2460:	mul	x8, x10, x8
    2464:	add	x8, x9, x8
    2468:	str	x8, [sp, #32]
    246c:	ldr	w8, [sp, #20]
    2470:	add	w8, w8, #0x1
    2474:	str	w8, [sp, #20]
    2478:	ldr	x9, [sp, #8]
    247c:	add	x9, x9, #0x8
    2480:	str	x9, [sp, #8]
    2484:	ldr	x9, [sp, #24]
    2488:	add	x9, x9, #0x8
    248c:	str	x9, [sp, #24]
    2490:	b	23b8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x20>
    2494:	add	sp, sp, #0x30
    2498:	ret

000000000000249c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    249c:	sub	sp, sp, #0x40
    24a0:	stp	x29, x30, [sp, #48]
    24a4:	add	x29, sp, #0x30
    24a8:	stur	x0, [x29, #-8]
    24ac:	stur	x1, [x29, #-16]
    24b0:	str	x2, [sp, #24]
    24b4:	ldur	x8, [x29, #-8]
    24b8:	ldr	x8, [x8, #8]
    24bc:	str	x8, [sp, #8]
    24c0:	str	wzr, [sp, #20]
    24c4:	ldr	w8, [sp, #20]
    24c8:	ldur	x9, [x29, #-8]
    24cc:	ldr	w10, [x9, #4]
    24d0:	cmp	w8, w10
    24d4:	b.cs	26b0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x214>  // b.hs, b.nlast
    24d8:	ldr	x8, [sp, #8]
    24dc:	ldr	x8, [x8]
    24e0:	ldrh	w9, [x8, #10]
    24e4:	subs	w9, w9, #0x5
    24e8:	mov	w8, w9
    24ec:	ubfx	x8, x8, #0, #32
    24f0:	cmp	x8, #0xa
    24f4:	str	x8, [sp]
    24f8:	b.hi	2638 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x19c>  // b.pmore
    24fc:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    2500:	add	x8, x8, #0x4f0
    2504:	ldr	x11, [sp]
    2508:	ldrsw	x10, [x8, x11, lsl #2]
    250c:	add	x9, x8, x10
    2510:	br	x9
    2514:	ldur	x8, [x29, #-16]
    2518:	ldr	x8, [x8]
    251c:	ldrb	w9, [x8]
    2520:	mov	w8, w9
    2524:	ldr	x10, [sp, #24]
    2528:	add	x11, x10, #0x8
    252c:	str	x11, [sp, #24]
    2530:	str	x8, [x10]
    2534:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    2538:	ldur	x8, [x29, #-16]
    253c:	ldr	x8, [x8]
    2540:	ldrsb	x8, [x8]
    2544:	ldr	x9, [sp, #24]
    2548:	add	x10, x9, #0x8
    254c:	str	x10, [sp, #24]
    2550:	str	x8, [x9]
    2554:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    2558:	ldur	x8, [x29, #-16]
    255c:	ldr	x8, [x8]
    2560:	ldrh	w9, [x8]
    2564:	mov	w8, w9
    2568:	ldr	x10, [sp, #24]
    256c:	add	x11, x10, #0x8
    2570:	str	x11, [sp, #24]
    2574:	str	x8, [x10]
    2578:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    257c:	ldur	x8, [x29, #-16]
    2580:	ldr	x8, [x8]
    2584:	ldrsh	x8, [x8]
    2588:	ldr	x9, [sp, #24]
    258c:	add	x10, x9, #0x8
    2590:	str	x10, [sp, #24]
    2594:	str	x8, [x9]
    2598:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    259c:	ldur	x8, [x29, #-16]
    25a0:	ldr	x8, [x8]
    25a4:	ldr	w9, [x8]
    25a8:	mov	w8, w9
    25ac:	ldr	x10, [sp, #24]
    25b0:	add	x11, x10, #0x8
    25b4:	str	x11, [sp, #24]
    25b8:	str	x8, [x10]
    25bc:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    25c0:	ldur	x8, [x29, #-16]
    25c4:	ldr	x8, [x8]
    25c8:	ldrsw	x8, [x8]
    25cc:	ldr	x9, [sp, #24]
    25d0:	add	x10, x9, #0x8
    25d4:	str	x10, [sp, #24]
    25d8:	str	x8, [x9]
    25dc:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    25e0:	ldur	x8, [x29, #-16]
    25e4:	ldr	x8, [x8]
    25e8:	ldr	x9, [sp, #24]
    25ec:	add	x10, x9, #0x8
    25f0:	str	x10, [sp, #24]
    25f4:	str	x8, [x9]
    25f8:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    25fc:	ldur	x8, [x29, #-16]
    2600:	ldr	x8, [x8]
    2604:	ldr	x9, [sp, #24]
    2608:	add	x10, x9, #0x8
    260c:	str	x10, [sp, #24]
    2610:	str	x8, [x9]
    2614:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    2618:	ldur	x8, [x29, #-16]
    261c:	ldr	x8, [x8]
    2620:	ldr	x8, [x8]
    2624:	ldr	x9, [sp, #24]
    2628:	add	x10, x9, #0x8
    262c:	str	x10, [sp, #24]
    2630:	str	x8, [x9]
    2634:	b	2688 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ec>
    2638:	ldr	x0, [sp, #24]
    263c:	ldur	x8, [x29, #-16]
    2640:	ldr	x1, [x8]
    2644:	ldr	x8, [sp, #8]
    2648:	ldr	x8, [x8]
    264c:	ldr	x2, [x8]
    2650:	bl	19e0 <memcpy@plt>
    2654:	ldr	x8, [sp, #8]
    2658:	ldr	x8, [x8]
    265c:	ldr	x8, [x8]
    2660:	subs	x8, x8, #0x1
    2664:	orr	x8, x8, #0x7
    2668:	add	x8, x8, #0x1
    266c:	mov	x9, #0x8                   	// #8
    2670:	udiv	x8, x8, x9
    2674:	ldr	x9, [sp, #24]
    2678:	mov	x10, #0x8                   	// #8
    267c:	mul	x8, x10, x8
    2680:	add	x8, x9, x8
    2684:	str	x8, [sp, #24]
    2688:	ldr	w8, [sp, #20]
    268c:	add	w8, w8, #0x1
    2690:	str	w8, [sp, #20]
    2694:	ldr	x9, [sp, #8]
    2698:	add	x9, x9, #0x8
    269c:	str	x9, [sp, #8]
    26a0:	ldur	x9, [x29, #-16]
    26a4:	add	x9, x9, #0x8
    26a8:	stur	x9, [x29, #-16]
    26ac:	b	24c4 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x28>
    26b0:	ldp	x29, x30, [sp, #48]
    26b4:	add	sp, sp, #0x40
    26b8:	ret

00000000000026bc <ffi_raw_call@@LIBFFI_BASE_7.0>:
    26bc:	stp	x29, x30, [sp, #-16]!
    26c0:	mov	x29, sp
    26c4:	sub	sp, sp, #0x30
    26c8:	mov	x8, #0x8                   	// #8
    26cc:	mov	x9, #0x1                   	// #1
    26d0:	stur	x0, [x29, #-8]
    26d4:	stur	x1, [x29, #-16]
    26d8:	stur	x2, [x29, #-24]
    26dc:	stur	x3, [x29, #-32]
    26e0:	ldur	x10, [x29, #-8]
    26e4:	ldr	w11, [x10, #4]
    26e8:	mov	w10, w11
    26ec:	mul	x8, x10, x8
    26f0:	mul	x8, x8, x9
    26f4:	add	x8, x8, #0xf
    26f8:	and	x8, x8, #0xfffffffffffffff0
    26fc:	mov	x9, sp
    2700:	subs	x8, x9, x8
    2704:	mov	sp, x8
    2708:	stur	x8, [x29, #-40]
    270c:	ldur	x0, [x29, #-8]
    2710:	ldur	x1, [x29, #-32]
    2714:	ldur	x2, [x29, #-40]
    2718:	bl	1a90 <ffi_raw_to_ptrarray@plt>
    271c:	ldur	x0, [x29, #-8]
    2720:	ldur	x1, [x29, #-16]
    2724:	ldur	x2, [x29, #-24]
    2728:	ldur	x3, [x29, #-40]
    272c:	bl	1bd0 <ffi_call@plt>
    2730:	mov	sp, x29
    2734:	ldp	x29, x30, [sp], #16
    2738:	ret

000000000000273c <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    273c:	sub	sp, sp, #0x40
    2740:	stp	x29, x30, [sp, #48]
    2744:	add	x29, sp, #0x30
    2748:	adrp	x8, 2000 <ffi_prep_java_raw_closure_loc@plt+0x380>
    274c:	add	x8, x8, #0x7b0
    2750:	stur	x0, [x29, #-8]
    2754:	stur	x1, [x29, #-16]
    2758:	str	x2, [sp, #24]
    275c:	str	x3, [sp, #16]
    2760:	str	x4, [sp, #8]
    2764:	ldur	x0, [x29, #-8]
    2768:	ldur	x1, [x29, #-16]
    276c:	ldr	x3, [sp, #8]
    2770:	ldr	x4, [sp, #8]
    2774:	mov	x2, x8
    2778:	bl	19f0 <ffi_prep_closure_loc@plt>
    277c:	str	w0, [sp, #4]
    2780:	ldr	w9, [sp, #4]
    2784:	cbnz	w9, 27a0 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x64>
    2788:	ldr	x8, [sp, #24]
    278c:	ldur	x9, [x29, #-8]
    2790:	str	x8, [x9, #48]
    2794:	ldr	x8, [sp, #16]
    2798:	ldur	x9, [x29, #-8]
    279c:	str	x8, [x9, #56]
    27a0:	ldr	w0, [sp, #4]
    27a4:	ldp	x29, x30, [sp, #48]
    27a8:	add	sp, sp, #0x40
    27ac:	ret
    27b0:	stp	x29, x30, [sp, #-16]!
    27b4:	mov	x29, sp
    27b8:	sub	sp, sp, #0x40
    27bc:	mov	x8, #0x1                   	// #1
    27c0:	stur	x0, [x29, #-8]
    27c4:	stur	x1, [x29, #-16]
    27c8:	stur	x2, [x29, #-24]
    27cc:	stur	x3, [x29, #-32]
    27d0:	ldur	x0, [x29, #-8]
    27d4:	stur	x8, [x29, #-56]
    27d8:	bl	1b80 <ffi_raw_size@plt>
    27dc:	ldur	x8, [x29, #-56]
    27e0:	mul	x9, x0, x8
    27e4:	add	x9, x9, #0xf
    27e8:	and	x9, x9, #0xfffffffffffffff0
    27ec:	mov	x10, sp
    27f0:	subs	x9, x10, x9
    27f4:	mov	sp, x9
    27f8:	stur	x9, [x29, #-40]
    27fc:	ldur	x9, [x29, #-32]
    2800:	stur	x9, [x29, #-48]
    2804:	ldur	x0, [x29, #-8]
    2808:	ldur	x1, [x29, #-24]
    280c:	ldur	x2, [x29, #-40]
    2810:	bl	1b90 <ffi_ptrarray_to_raw@plt>
    2814:	ldur	x8, [x29, #-48]
    2818:	ldr	x8, [x8, #48]
    281c:	ldur	x0, [x29, #-8]
    2820:	ldur	x1, [x29, #-16]
    2824:	ldur	x2, [x29, #-40]
    2828:	ldur	x9, [x29, #-48]
    282c:	ldr	x3, [x9, #56]
    2830:	blr	x8
    2834:	mov	sp, x29
    2838:	ldp	x29, x30, [sp], #16
    283c:	ret

0000000000002840 <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2840:	sub	sp, sp, #0x30
    2844:	stp	x29, x30, [sp, #32]
    2848:	add	x29, sp, #0x20
    284c:	stur	x0, [x29, #-8]
    2850:	str	x1, [sp, #16]
    2854:	str	x2, [sp, #8]
    2858:	str	x3, [sp]
    285c:	ldur	x0, [x29, #-8]
    2860:	ldr	x1, [sp, #16]
    2864:	ldr	x2, [sp, #8]
    2868:	ldr	x3, [sp]
    286c:	ldur	x4, [x29, #-8]
    2870:	bl	1aa0 <ffi_prep_raw_closure_loc@plt>
    2874:	ldp	x29, x30, [sp, #32]
    2878:	add	sp, sp, #0x30
    287c:	ret

0000000000002880 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    2880:	sub	sp, sp, #0x40
    2884:	stp	x29, x30, [sp, #48]
    2888:	add	x29, sp, #0x30
    288c:	stur	x0, [x29, #-8]
    2890:	stur	xzr, [x29, #-16]
    2894:	ldur	x8, [x29, #-8]
    2898:	ldr	x8, [x8, #8]
    289c:	str	x8, [sp, #16]
    28a0:	ldur	x8, [x29, #-8]
    28a4:	ldr	w9, [x8, #4]
    28a8:	subs	w9, w9, #0x1
    28ac:	stur	w9, [x29, #-20]
    28b0:	ldur	w8, [x29, #-20]
    28b4:	cmp	w8, #0x0
    28b8:	cset	w8, lt  // lt = tstop
    28bc:	tbnz	w8, #0, 293c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0xbc>
    28c0:	ldr	x8, [sp, #16]
    28c4:	ldr	x8, [x8]
    28c8:	ldrh	w9, [x8, #10]
    28cc:	subs	w9, w9, #0x3
    28d0:	mov	w8, w9
    28d4:	ubfx	x8, x8, #0, #32
    28d8:	cmp	x8, #0xc
    28dc:	str	x8, [sp, #8]
    28e0:	b.hi	2914 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x94>  // b.pmore
    28e4:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    28e8:	add	x8, x8, #0x51c
    28ec:	ldr	x11, [sp, #8]
    28f0:	ldrsw	x10, [x8, x11, lsl #2]
    28f4:	add	x9, x8, x10
    28f8:	br	x9
    28fc:	ldur	x8, [x29, #-16]
    2900:	add	x8, x8, #0x10
    2904:	stur	x8, [x29, #-16]
    2908:	b	2920 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0xa0>
    290c:	bl	1b10 <abort@plt>
    2910:	bl	1b10 <abort@plt>
    2914:	ldur	x8, [x29, #-16]
    2918:	add	x8, x8, #0x8
    291c:	stur	x8, [x29, #-16]
    2920:	ldur	w8, [x29, #-20]
    2924:	subs	w8, w8, #0x1
    2928:	stur	w8, [x29, #-20]
    292c:	ldr	x9, [sp, #16]
    2930:	add	x9, x9, #0x8
    2934:	str	x9, [sp, #16]
    2938:	b	28b0 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x30>
    293c:	ldur	x0, [x29, #-16]
    2940:	ldp	x29, x30, [sp, #48]
    2944:	add	sp, sp, #0x40
    2948:	ret

000000000000294c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    294c:	sub	sp, sp, #0x40
    2950:	stp	x29, x30, [sp, #48]
    2954:	add	x29, sp, #0x30
    2958:	stur	x0, [x29, #-8]
    295c:	stur	x1, [x29, #-16]
    2960:	str	x2, [sp, #24]
    2964:	ldur	x8, [x29, #-8]
    2968:	ldr	x8, [x8, #8]
    296c:	str	x8, [sp, #8]
    2970:	str	wzr, [sp, #20]
    2974:	ldr	w8, [sp, #20]
    2978:	ldur	x9, [x29, #-8]
    297c:	ldr	w10, [x9, #4]
    2980:	cmp	w8, w10
    2984:	b.cs	2a24 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xd8>  // b.hs, b.nlast
    2988:	ldr	x8, [sp, #8]
    298c:	ldr	x8, [x8]
    2990:	ldrh	w9, [x8, #10]
    2994:	cmp	w9, #0x3
    2998:	str	w9, [sp, #4]
    299c:	b.eq	29c8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x7c>  // b.none
    29a0:	b	29a4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x58>
    29a4:	ldr	w8, [sp, #4]
    29a8:	subs	w9, w8, #0xb
    29ac:	cmp	w9, #0x1
    29b0:	b.ls	29c8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x7c>  // b.plast
    29b4:	b	29b8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x6c>
    29b8:	ldr	w8, [sp, #4]
    29bc:	cmp	w8, #0xf
    29c0:	b.eq	29e4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x98>  // b.none
    29c4:	b	29e8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x9c>
    29c8:	ldur	x8, [x29, #-16]
    29cc:	ldr	x9, [sp, #24]
    29d0:	str	x8, [x9]
    29d4:	ldur	x8, [x29, #-16]
    29d8:	add	x8, x8, #0x10
    29dc:	stur	x8, [x29, #-16]
    29e0:	b	29fc <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xb0>
    29e4:	bl	1b10 <abort@plt>
    29e8:	ldur	x8, [x29, #-16]
    29ec:	add	x9, x8, #0x8
    29f0:	stur	x9, [x29, #-16]
    29f4:	ldr	x9, [sp, #24]
    29f8:	str	x8, [x9]
    29fc:	ldr	w8, [sp, #20]
    2a00:	add	w8, w8, #0x1
    2a04:	str	w8, [sp, #20]
    2a08:	ldr	x9, [sp, #8]
    2a0c:	add	x9, x9, #0x8
    2a10:	str	x9, [sp, #8]
    2a14:	ldr	x9, [sp, #24]
    2a18:	add	x9, x9, #0x8
    2a1c:	str	x9, [sp, #24]
    2a20:	b	2974 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x28>
    2a24:	ldp	x29, x30, [sp, #48]
    2a28:	add	sp, sp, #0x40
    2a2c:	ret

0000000000002a30 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    2a30:	sub	sp, sp, #0x30
    2a34:	str	x0, [sp, #40]
    2a38:	str	x1, [sp, #32]
    2a3c:	str	x2, [sp, #24]
    2a40:	ldr	x8, [sp, #40]
    2a44:	ldr	x8, [x8, #8]
    2a48:	str	x8, [sp, #8]
    2a4c:	str	wzr, [sp, #20]
    2a50:	ldr	w8, [sp, #20]
    2a54:	ldr	x9, [sp, #40]
    2a58:	ldr	w10, [x9, #4]
    2a5c:	cmp	w8, w10
    2a60:	b.cs	2bf8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1c8>  // b.hs, b.nlast
    2a64:	ldr	x8, [sp, #8]
    2a68:	ldr	x8, [x8]
    2a6c:	ldrh	w9, [x8, #10]
    2a70:	subs	w9, w9, #0x2
    2a74:	mov	w8, w9
    2a78:	ubfx	x8, x8, #0, #32
    2a7c:	cmp	x8, #0xc
    2a80:	str	x8, [sp]
    2a84:	b.hi	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>  // b.pmore
    2a88:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    2a8c:	add	x8, x8, #0x550
    2a90:	ldr	x11, [sp]
    2a94:	ldrsw	x10, [x8, x11, lsl #2]
    2a98:	add	x9, x8, x10
    2a9c:	br	x9
    2aa0:	ldr	x8, [sp, #32]
    2aa4:	ldr	x8, [x8]
    2aa8:	ldrb	w9, [x8]
    2aac:	mov	w8, w9
    2ab0:	ldr	x10, [sp, #24]
    2ab4:	add	x11, x10, #0x8
    2ab8:	str	x11, [sp, #24]
    2abc:	str	x8, [x10]
    2ac0:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2ac4:	ldr	x8, [sp, #32]
    2ac8:	ldr	x8, [x8]
    2acc:	ldrsb	x8, [x8]
    2ad0:	ldr	x9, [sp, #24]
    2ad4:	add	x10, x9, #0x8
    2ad8:	str	x10, [sp, #24]
    2adc:	str	x8, [x9]
    2ae0:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2ae4:	ldr	x8, [sp, #32]
    2ae8:	ldr	x8, [x8]
    2aec:	ldrh	w9, [x8]
    2af0:	mov	w8, w9
    2af4:	ldr	x10, [sp, #24]
    2af8:	add	x11, x10, #0x8
    2afc:	str	x11, [sp, #24]
    2b00:	str	x8, [x10]
    2b04:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2b08:	ldr	x8, [sp, #32]
    2b0c:	ldr	x8, [x8]
    2b10:	ldrsh	x8, [x8]
    2b14:	ldr	x9, [sp, #24]
    2b18:	add	x10, x9, #0x8
    2b1c:	str	x10, [sp, #24]
    2b20:	str	x8, [x9]
    2b24:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2b28:	ldr	x8, [sp, #32]
    2b2c:	ldr	x8, [x8]
    2b30:	ldr	w9, [x8]
    2b34:	mov	w8, w9
    2b38:	ldr	x10, [sp, #24]
    2b3c:	add	x11, x10, #0x8
    2b40:	str	x11, [sp, #24]
    2b44:	str	x8, [x10]
    2b48:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2b4c:	ldr	x8, [sp, #32]
    2b50:	ldr	x8, [x8]
    2b54:	ldrsw	x8, [x8]
    2b58:	ldr	x9, [sp, #24]
    2b5c:	add	x10, x9, #0x8
    2b60:	str	x10, [sp, #24]
    2b64:	str	x8, [x9]
    2b68:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2b6c:	ldr	x8, [sp, #32]
    2b70:	ldr	x8, [x8]
    2b74:	ldr	w9, [x8]
    2b78:	ldr	x8, [sp, #24]
    2b7c:	add	x10, x8, #0x8
    2b80:	str	x10, [sp, #24]
    2b84:	str	w9, [x8]
    2b88:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2b8c:	ldr	x8, [sp, #32]
    2b90:	ldr	x8, [x8]
    2b94:	ldr	x8, [x8]
    2b98:	ldr	x9, [sp, #24]
    2b9c:	str	x8, [x9]
    2ba0:	ldr	x8, [sp, #24]
    2ba4:	add	x8, x8, #0x10
    2ba8:	str	x8, [sp, #24]
    2bac:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2bb0:	ldr	x8, [sp, #32]
    2bb4:	ldr	x8, [x8]
    2bb8:	ldr	x8, [x8]
    2bbc:	ldr	x9, [sp, #24]
    2bc0:	add	x10, x9, #0x8
    2bc4:	str	x10, [sp, #24]
    2bc8:	str	x8, [x9]
    2bcc:	b	2bd0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1a0>
    2bd0:	ldr	w8, [sp, #20]
    2bd4:	add	w8, w8, #0x1
    2bd8:	str	w8, [sp, #20]
    2bdc:	ldr	x9, [sp, #8]
    2be0:	add	x9, x9, #0x8
    2be4:	str	x9, [sp, #8]
    2be8:	ldr	x9, [sp, #32]
    2bec:	add	x9, x9, #0x8
    2bf0:	str	x9, [sp, #32]
    2bf4:	b	2a50 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x20>
    2bf8:	add	sp, sp, #0x30
    2bfc:	ret

0000000000002c00 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    2c00:	stp	x29, x30, [sp, #-16]!
    2c04:	mov	x29, sp
    2c08:	sub	sp, sp, #0x30
    2c0c:	mov	x8, #0x8                   	// #8
    2c10:	mov	x9, #0x1                   	// #1
    2c14:	stur	x0, [x29, #-8]
    2c18:	stur	x1, [x29, #-16]
    2c1c:	stur	x2, [x29, #-24]
    2c20:	stur	x3, [x29, #-32]
    2c24:	ldur	x10, [x29, #-8]
    2c28:	ldr	w11, [x10, #4]
    2c2c:	mov	w10, w11
    2c30:	mul	x8, x10, x8
    2c34:	mul	x8, x8, x9
    2c38:	add	x8, x8, #0xf
    2c3c:	and	x8, x8, #0xfffffffffffffff0
    2c40:	mov	x9, sp
    2c44:	subs	x8, x9, x8
    2c48:	mov	sp, x8
    2c4c:	stur	x8, [x29, #-40]
    2c50:	ldur	x0, [x29, #-8]
    2c54:	ldur	x1, [x29, #-32]
    2c58:	ldur	x2, [x29, #-40]
    2c5c:	bl	1a10 <ffi_java_raw_to_ptrarray@plt>
    2c60:	ldur	x0, [x29, #-8]
    2c64:	ldur	x1, [x29, #-16]
    2c68:	ldur	x2, [x29, #-24]
    2c6c:	ldur	x3, [x29, #-40]
    2c70:	bl	1bd0 <ffi_call@plt>
    2c74:	ldur	x0, [x29, #-8]
    2c78:	ldur	x1, [x29, #-24]
    2c7c:	bl	2c8c <ffi_java_raw_call@@LIBFFI_BASE_7.0+0x8c>
    2c80:	mov	sp, x29
    2c84:	ldp	x29, x30, [sp], #16
    2c88:	ret
    2c8c:	sub	sp, sp, #0x10
    2c90:	str	x0, [sp, #8]
    2c94:	str	x1, [sp]
    2c98:	add	sp, sp, #0x10
    2c9c:	ret

0000000000002ca0 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2ca0:	sub	sp, sp, #0x40
    2ca4:	stp	x29, x30, [sp, #48]
    2ca8:	add	x29, sp, #0x30
    2cac:	adrp	x8, 2000 <ffi_prep_java_raw_closure_loc@plt+0x380>
    2cb0:	add	x8, x8, #0xd14
    2cb4:	stur	x0, [x29, #-8]
    2cb8:	stur	x1, [x29, #-16]
    2cbc:	str	x2, [sp, #24]
    2cc0:	str	x3, [sp, #16]
    2cc4:	str	x4, [sp, #8]
    2cc8:	ldur	x0, [x29, #-8]
    2ccc:	ldur	x1, [x29, #-16]
    2cd0:	ldr	x3, [sp, #8]
    2cd4:	ldr	x4, [sp, #8]
    2cd8:	mov	x2, x8
    2cdc:	bl	19f0 <ffi_prep_closure_loc@plt>
    2ce0:	str	w0, [sp, #4]
    2ce4:	ldr	w9, [sp, #4]
    2ce8:	cbnz	w9, 2d04 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x64>
    2cec:	ldr	x8, [sp, #24]
    2cf0:	ldur	x9, [x29, #-8]
    2cf4:	str	x8, [x9, #48]
    2cf8:	ldr	x8, [sp, #16]
    2cfc:	ldur	x9, [x29, #-8]
    2d00:	str	x8, [x9, #56]
    2d04:	ldr	w0, [sp, #4]
    2d08:	ldp	x29, x30, [sp, #48]
    2d0c:	add	sp, sp, #0x40
    2d10:	ret
    2d14:	stp	x29, x30, [sp, #-16]!
    2d18:	mov	x29, sp
    2d1c:	sub	sp, sp, #0x40
    2d20:	mov	x8, #0x1                   	// #1
    2d24:	stur	x0, [x29, #-8]
    2d28:	stur	x1, [x29, #-16]
    2d2c:	stur	x2, [x29, #-24]
    2d30:	stur	x3, [x29, #-32]
    2d34:	ldur	x0, [x29, #-8]
    2d38:	stur	x8, [x29, #-56]
    2d3c:	bl	1b70 <ffi_java_raw_size@plt>
    2d40:	ldur	x8, [x29, #-56]
    2d44:	mul	x9, x0, x8
    2d48:	add	x9, x9, #0xf
    2d4c:	and	x9, x9, #0xfffffffffffffff0
    2d50:	mov	x10, sp
    2d54:	subs	x9, x10, x9
    2d58:	mov	sp, x9
    2d5c:	stur	x9, [x29, #-40]
    2d60:	ldur	x9, [x29, #-32]
    2d64:	stur	x9, [x29, #-48]
    2d68:	ldur	x0, [x29, #-8]
    2d6c:	ldur	x1, [x29, #-24]
    2d70:	ldur	x2, [x29, #-40]
    2d74:	bl	1c40 <ffi_java_ptrarray_to_raw@plt>
    2d78:	ldur	x8, [x29, #-48]
    2d7c:	ldr	x8, [x8, #48]
    2d80:	ldur	x0, [x29, #-8]
    2d84:	ldur	x1, [x29, #-16]
    2d88:	ldur	x2, [x29, #-40]
    2d8c:	ldur	x9, [x29, #-48]
    2d90:	ldr	x3, [x9, #56]
    2d94:	blr	x8
    2d98:	ldur	x0, [x29, #-8]
    2d9c:	ldur	x1, [x29, #-16]
    2da0:	bl	2df0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x40>
    2da4:	mov	sp, x29
    2da8:	ldp	x29, x30, [sp], #16
    2dac:	ret

0000000000002db0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2db0:	sub	sp, sp, #0x30
    2db4:	stp	x29, x30, [sp, #32]
    2db8:	add	x29, sp, #0x20
    2dbc:	stur	x0, [x29, #-8]
    2dc0:	str	x1, [sp, #16]
    2dc4:	str	x2, [sp, #8]
    2dc8:	str	x3, [sp]
    2dcc:	ldur	x0, [x29, #-8]
    2dd0:	ldr	x1, [sp, #16]
    2dd4:	ldr	x2, [sp, #8]
    2dd8:	ldr	x3, [sp]
    2ddc:	ldur	x4, [x29, #-8]
    2de0:	bl	1c80 <ffi_prep_java_raw_closure_loc@plt>
    2de4:	ldp	x29, x30, [sp, #32]
    2de8:	add	sp, sp, #0x30
    2dec:	ret
    2df0:	sub	sp, sp, #0x10
    2df4:	str	x0, [sp, #8]
    2df8:	str	x1, [sp]
    2dfc:	add	sp, sp, #0x10
    2e00:	ret

0000000000002e04 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    2e04:	sub	sp, sp, #0x40
    2e08:	stp	x29, x30, [sp, #48]
    2e0c:	add	x29, sp, #0x30
    2e10:	stur	x0, [x29, #-16]
    2e14:	str	x1, [sp, #24]
    2e18:	ldr	x8, [sp, #24]
    2e1c:	cbnz	x8, 2e2c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x28>
    2e20:	mov	x8, xzr
    2e24:	stur	x8, [x29, #-8]
    2e28:	b	2e74 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x70>
    2e2c:	ldur	x0, [x29, #-16]
    2e30:	bl	2e84 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x80>
    2e34:	str	x0, [sp, #16]
    2e38:	ldr	x8, [sp, #16]
    2e3c:	cbz	x8, 2e6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x68>
    2e40:	ldr	x1, [sp, #16]
    2e44:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    2e48:	add	x0, x0, #0x248
    2e4c:	bl	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    2e50:	str	x0, [sp, #8]
    2e54:	ldr	x8, [sp, #16]
    2e58:	ldr	x9, [sp, #8]
    2e5c:	ldr	x9, [x9, #24]
    2e60:	add	x8, x8, x9
    2e64:	ldr	x9, [sp, #24]
    2e68:	str	x8, [x9]
    2e6c:	ldr	x8, [sp, #16]
    2e70:	stur	x8, [x29, #-8]
    2e74:	ldur	x0, [x29, #-8]
    2e78:	ldp	x29, x30, [sp, #48]
    2e7c:	add	sp, sp, #0x40
    2e80:	ret
    2e84:	sub	sp, sp, #0x130
    2e88:	stp	x29, x30, [sp, #272]
    2e8c:	str	x28, [sp, #288]
    2e90:	add	x29, sp, #0x110
    2e94:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    2e98:	add	x8, x8, #0x600
    2e9c:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    2ea0:	add	x9, x9, #0x248
    2ea4:	mov	w10, #0x0                   	// #0
    2ea8:	add	x11, x9, #0x368
    2eac:	add	x12, x9, #0x40
    2eb0:	stur	x0, [x29, #-16]
    2eb4:	ldr	x8, [x8, #8]
    2eb8:	str	x9, [sp, #40]
    2ebc:	str	w10, [sp, #36]
    2ec0:	str	x11, [sp, #24]
    2ec4:	str	x12, [sp, #16]
    2ec8:	cbnz	x8, 2ed4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd0>
    2ecc:	bl	475c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10fc>
    2ed0:	cbnz	w0, 2ee4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    2ed4:	ldr	x8, [sp, #40]
    2ed8:	ldr	w9, [x8, #864]
    2edc:	and	w9, w9, #0x2
    2ee0:	cbz	w9, 2ef4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf0>
    2ee4:	ldr	x0, [sp, #24]
    2ee8:	bl	1c50 <pthread_mutex_lock@plt>
    2eec:	cbnz	w0, 3560 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x75c>
    2ef0:	b	2efc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf8>
    2ef4:	ldr	w8, [sp, #36]
    2ef8:	tbnz	w8, #0, 3560 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x75c>
    2efc:	ldur	x8, [x29, #-16]
    2f00:	cmp	x8, #0xf0
    2f04:	b.hi	3374 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x570>  // b.pmore
    2f08:	ldur	x8, [x29, #-16]
    2f0c:	cmp	x8, #0x17
    2f10:	b.cs	2f20 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11c>  // b.hs, b.nlast
    2f14:	mov	x8, #0x20                  	// #32
    2f18:	str	x8, [sp, #8]
    2f1c:	b	2f34 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x130>
    2f20:	ldur	x8, [x29, #-16]
    2f24:	add	x8, x8, #0x8
    2f28:	add	x8, x8, #0x7
    2f2c:	and	x8, x8, #0xfffffffffffffff8
    2f30:	str	x8, [sp, #8]
    2f34:	ldr	x8, [sp, #8]
    2f38:	stur	x8, [x29, #-32]
    2f3c:	ldur	x8, [x29, #-32]
    2f40:	lsr	x8, x8, #3
    2f44:	stur	x8, [x29, #-40]
    2f48:	ldr	x8, [sp, #40]
    2f4c:	ldr	w9, [x8]
    2f50:	ldur	x10, [x29, #-40]
    2f54:	lsr	w9, w9, w10
    2f58:	stur	w9, [x29, #-44]
    2f5c:	ldur	w9, [x29, #-44]
    2f60:	and	w9, w9, #0x3
    2f64:	cbz	w9, 3074 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x270>
    2f68:	ldur	w8, [x29, #-44]
    2f6c:	mvn	w8, w8
    2f70:	and	w8, w8, #0x1
    2f74:	mov	w9, w8
    2f78:	ubfx	x9, x9, #0, #32
    2f7c:	ldur	x10, [x29, #-40]
    2f80:	add	x9, x10, x9
    2f84:	stur	x9, [x29, #-40]
    2f88:	ldur	x9, [x29, #-40]
    2f8c:	lsl	x9, x9, #1
    2f90:	mov	x10, #0x8                   	// #8
    2f94:	mul	x9, x10, x9
    2f98:	ldr	x10, [sp, #16]
    2f9c:	add	x9, x10, x9
    2fa0:	stur	x9, [x29, #-56]
    2fa4:	ldur	x9, [x29, #-56]
    2fa8:	ldr	x9, [x9, #16]
    2fac:	stur	x9, [x29, #-64]
    2fb0:	ldur	x9, [x29, #-64]
    2fb4:	ldr	x9, [x9, #16]
    2fb8:	stur	x9, [x29, #-72]
    2fbc:	ldur	x9, [x29, #-56]
    2fc0:	ldur	x11, [x29, #-72]
    2fc4:	cmp	x9, x11
    2fc8:	b.ne	2fec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1e8>  // b.any
    2fcc:	ldur	x8, [x29, #-40]
    2fd0:	mov	w9, #0x1                   	// #1
    2fd4:	lsl	w8, w9, w8
    2fd8:	ldr	x10, [sp, #40]
    2fdc:	ldr	w9, [x10]
    2fe0:	bic	w8, w9, w8
    2fe4:	str	w8, [x10]
    2fe8:	b	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x22c>
    2fec:	ldur	x8, [x29, #-72]
    2ff0:	ldr	x9, [sp, #40]
    2ff4:	ldr	x10, [x9, #24]
    2ff8:	cmp	x8, x10
    2ffc:	cset	w11, cs  // cs = hs, nlast
    3000:	and	w11, w11, #0x1
    3004:	mov	w0, w11
    3008:	sxtw	x8, w0
    300c:	cbz	x8, 302c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x228>
    3010:	ldur	x8, [x29, #-72]
    3014:	ldur	x9, [x29, #-56]
    3018:	str	x8, [x9, #16]
    301c:	ldur	x8, [x29, #-56]
    3020:	ldur	x9, [x29, #-72]
    3024:	str	x8, [x9, #24]
    3028:	b	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x22c>
    302c:	bl	1b10 <abort@plt>
    3030:	ldur	x8, [x29, #-40]
    3034:	lsl	x8, x8, #3
    3038:	orr	x8, x8, #0x1
    303c:	orr	x8, x8, #0x2
    3040:	ldur	x9, [x29, #-64]
    3044:	str	x8, [x9, #8]
    3048:	ldur	x8, [x29, #-64]
    304c:	ldur	x9, [x29, #-40]
    3050:	lsl	x9, x9, #3
    3054:	add	x8, x8, x9
    3058:	ldr	x9, [x8, #8]
    305c:	orr	x9, x9, #0x1
    3060:	str	x9, [x8, #8]
    3064:	ldur	x8, [x29, #-64]
    3068:	add	x8, x8, #0x10
    306c:	stur	x8, [x29, #-24]
    3070:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    3074:	ldur	x8, [x29, #-32]
    3078:	ldr	x9, [sp, #40]
    307c:	ldr	x10, [x9, #8]
    3080:	cmp	x8, x10
    3084:	b.ls	3370 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x56c>  // b.plast
    3088:	ldur	w8, [x29, #-44]
    308c:	cbz	w8, 334c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x548>
    3090:	ldur	w8, [x29, #-44]
    3094:	ldur	x9, [x29, #-40]
    3098:	lsl	w8, w8, w9
    309c:	ldur	x10, [x29, #-40]
    30a0:	mov	w9, #0x1                   	// #1
    30a4:	lsl	w10, w9, w10
    30a8:	ldur	x11, [x29, #-40]
    30ac:	lsl	w9, w9, w11
    30b0:	mov	w11, wzr
    30b4:	subs	w9, w11, w9, lsl #1
    30b8:	orr	w9, w9, w10, lsl #1
    30bc:	and	w8, w8, w9
    30c0:	stur	w8, [x29, #-116]
    30c4:	ldur	w8, [x29, #-116]
    30c8:	ldur	w9, [x29, #-116]
    30cc:	subs	w9, w11, w9
    30d0:	and	w8, w8, w9
    30d4:	stur	w8, [x29, #-120]
    30d8:	ldur	w0, [x29, #-120]
    30dc:	bl	1c20 <ffs@plt>
    30e0:	subs	w8, w0, #0x1
    30e4:	mov	w1, w8
    30e8:	sxtw	x12, w1
    30ec:	stur	x12, [x29, #-112]
    30f0:	ldur	x12, [x29, #-112]
    30f4:	lsl	x12, x12, #1
    30f8:	mov	x13, #0x8                   	// #8
    30fc:	mul	x12, x13, x12
    3100:	ldr	x13, [sp, #16]
    3104:	add	x12, x13, x12
    3108:	stur	x12, [x29, #-80]
    310c:	ldur	x12, [x29, #-80]
    3110:	ldr	x12, [x12, #16]
    3114:	stur	x12, [x29, #-88]
    3118:	ldur	x12, [x29, #-88]
    311c:	ldr	x12, [x12, #16]
    3120:	stur	x12, [x29, #-128]
    3124:	ldur	x12, [x29, #-80]
    3128:	ldur	x14, [x29, #-128]
    312c:	cmp	x12, x14
    3130:	b.ne	3154 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x350>  // b.any
    3134:	ldur	x8, [x29, #-112]
    3138:	mov	w9, #0x1                   	// #1
    313c:	lsl	w8, w9, w8
    3140:	ldr	x10, [sp, #40]
    3144:	ldr	w9, [x10]
    3148:	bic	w8, w9, w8
    314c:	str	w8, [x10]
    3150:	b	3198 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x394>
    3154:	ldur	x8, [x29, #-128]
    3158:	ldr	x9, [sp, #40]
    315c:	ldr	x10, [x9, #24]
    3160:	cmp	x8, x10
    3164:	cset	w11, cs  // cs = hs, nlast
    3168:	and	w11, w11, #0x1
    316c:	mov	w0, w11
    3170:	sxtw	x8, w0
    3174:	cbz	x8, 3194 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x390>
    3178:	ldur	x8, [x29, #-128]
    317c:	ldur	x9, [x29, #-80]
    3180:	str	x8, [x9, #16]
    3184:	ldur	x8, [x29, #-80]
    3188:	ldur	x9, [x29, #-128]
    318c:	str	x8, [x9, #24]
    3190:	b	3198 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x394>
    3194:	bl	1b10 <abort@plt>
    3198:	ldur	x8, [x29, #-112]
    319c:	lsl	x8, x8, #3
    31a0:	ldur	x9, [x29, #-32]
    31a4:	subs	x8, x8, x9
    31a8:	stur	x8, [x29, #-104]
    31ac:	ldur	x8, [x29, #-104]
    31b0:	cmp	x8, #0x20
    31b4:	b.cs	31f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3ec>  // b.hs, b.nlast
    31b8:	ldur	x8, [x29, #-112]
    31bc:	lsl	x8, x8, #3
    31c0:	orr	x8, x8, #0x1
    31c4:	orr	x8, x8, #0x2
    31c8:	ldur	x9, [x29, #-88]
    31cc:	str	x8, [x9, #8]
    31d0:	ldur	x8, [x29, #-88]
    31d4:	ldur	x9, [x29, #-112]
    31d8:	lsl	x9, x9, #3
    31dc:	add	x8, x8, x9
    31e0:	ldr	x9, [x8, #8]
    31e4:	orr	x9, x9, #0x1
    31e8:	str	x9, [x8, #8]
    31ec:	b	333c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x538>
    31f0:	ldur	x8, [x29, #-32]
    31f4:	orr	x8, x8, #0x1
    31f8:	orr	x8, x8, #0x2
    31fc:	ldur	x9, [x29, #-88]
    3200:	str	x8, [x9, #8]
    3204:	ldur	x8, [x29, #-88]
    3208:	ldur	x9, [x29, #-32]
    320c:	add	x8, x8, x9
    3210:	stur	x8, [x29, #-96]
    3214:	ldur	x8, [x29, #-104]
    3218:	orr	x8, x8, #0x1
    321c:	ldur	x9, [x29, #-96]
    3220:	str	x8, [x9, #8]
    3224:	ldur	x8, [x29, #-104]
    3228:	ldur	x9, [x29, #-96]
    322c:	ldur	x10, [x29, #-104]
    3230:	str	x8, [x9, x10]
    3234:	ldr	x8, [sp, #40]
    3238:	ldr	x9, [x8, #8]
    323c:	str	x9, [sp, #136]
    3240:	ldr	x9, [sp, #136]
    3244:	cbz	x9, 3328 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x524>
    3248:	ldr	x8, [sp, #40]
    324c:	ldr	x9, [x8, #32]
    3250:	str	x9, [sp, #128]
    3254:	ldr	x9, [sp, #136]
    3258:	lsr	x9, x9, #3
    325c:	str	x9, [sp, #120]
    3260:	ldr	x9, [sp, #120]
    3264:	lsl	x9, x9, #1
    3268:	mov	x10, #0x8                   	// #8
    326c:	mul	x9, x10, x9
    3270:	ldr	x10, [sp, #16]
    3274:	add	x9, x10, x9
    3278:	str	x9, [sp, #112]
    327c:	ldr	x9, [sp, #112]
    3280:	str	x9, [sp, #104]
    3284:	ldr	w11, [x8]
    3288:	ldr	x9, [sp, #120]
    328c:	mov	w12, #0x1                   	// #1
    3290:	lsl	w9, w12, w9
    3294:	and	w9, w11, w9
    3298:	cbnz	w9, 32bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4b8>
    329c:	ldr	x8, [sp, #120]
    32a0:	mov	w9, #0x1                   	// #1
    32a4:	lsl	w8, w9, w8
    32a8:	ldr	x10, [sp, #40]
    32ac:	ldr	w9, [x10]
    32b0:	orr	w8, w9, w8
    32b4:	str	w8, [x10]
    32b8:	b	32f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4f4>
    32bc:	ldr	x8, [sp, #112]
    32c0:	ldr	x8, [x8, #16]
    32c4:	ldr	x9, [sp, #40]
    32c8:	ldr	x10, [x9, #24]
    32cc:	cmp	x8, x10
    32d0:	cset	w11, cs  // cs = hs, nlast
    32d4:	and	w11, w11, #0x1
    32d8:	mov	w0, w11
    32dc:	sxtw	x8, w0
    32e0:	cbz	x8, 32f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4f0>
    32e4:	ldr	x8, [sp, #112]
    32e8:	ldr	x8, [x8, #16]
    32ec:	str	x8, [sp, #104]
    32f0:	b	32f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4f4>
    32f4:	bl	1b10 <abort@plt>
    32f8:	ldr	x8, [sp, #128]
    32fc:	ldr	x9, [sp, #112]
    3300:	str	x8, [x9, #16]
    3304:	ldr	x8, [sp, #128]
    3308:	ldr	x9, [sp, #104]
    330c:	str	x8, [x9, #24]
    3310:	ldr	x8, [sp, #104]
    3314:	ldr	x9, [sp, #128]
    3318:	str	x8, [x9, #16]
    331c:	ldr	x8, [sp, #112]
    3320:	ldr	x9, [sp, #128]
    3324:	str	x8, [x9, #24]
    3328:	ldur	x8, [x29, #-104]
    332c:	ldr	x9, [sp, #40]
    3330:	str	x8, [x9, #8]
    3334:	ldur	x8, [x29, #-96]
    3338:	str	x8, [x9, #32]
    333c:	ldur	x8, [x29, #-88]
    3340:	add	x8, x8, #0x10
    3344:	stur	x8, [x29, #-24]
    3348:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    334c:	ldr	x8, [sp, #40]
    3350:	ldr	w9, [x8, #4]
    3354:	cbz	w9, 3370 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x56c>
    3358:	ldur	x1, [x29, #-32]
    335c:	ldr	x0, [sp, #40]
    3360:	bl	4898 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1238>
    3364:	stur	x0, [x29, #-24]
    3368:	cbz	x0, 3370 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x56c>
    336c:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    3370:	b	33c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c4>
    3374:	ldur	x8, [x29, #-16]
    3378:	mov	x9, #0xffffffffffffff80    	// #-128
    337c:	cmp	x8, x9
    3380:	b.cc	3390 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x58c>  // b.lo, b.ul, b.last
    3384:	mov	x8, #0xffffffffffffffff    	// #-1
    3388:	stur	x8, [x29, #-32]
    338c:	b	33c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c4>
    3390:	ldur	x8, [x29, #-16]
    3394:	add	x8, x8, #0x8
    3398:	add	x8, x8, #0x7
    339c:	and	x8, x8, #0xfffffffffffffff8
    33a0:	stur	x8, [x29, #-32]
    33a4:	ldr	x8, [sp, #40]
    33a8:	ldr	w9, [x8, #4]
    33ac:	cbz	w9, 33c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c4>
    33b0:	ldur	x1, [x29, #-32]
    33b4:	ldr	x0, [sp, #40]
    33b8:	bl	4e84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1824>
    33bc:	stur	x0, [x29, #-24]
    33c0:	cbz	x0, 33c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c4>
    33c4:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    33c8:	ldur	x8, [x29, #-32]
    33cc:	ldr	x9, [sp, #40]
    33d0:	ldr	x10, [x9, #8]
    33d4:	cmp	x8, x10
    33d8:	b.hi	34b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6ac>  // b.pmore
    33dc:	ldr	x8, [sp, #40]
    33e0:	ldr	x9, [x8, #8]
    33e4:	ldur	x10, [x29, #-32]
    33e8:	subs	x9, x9, x10
    33ec:	str	x9, [sp, #96]
    33f0:	ldr	x9, [x8, #32]
    33f4:	str	x9, [sp, #88]
    33f8:	ldr	x9, [sp, #96]
    33fc:	cmp	x9, #0x20
    3400:	b.cc	345c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x658>  // b.lo, b.ul, b.last
    3404:	ldr	x8, [sp, #88]
    3408:	ldur	x9, [x29, #-32]
    340c:	add	x8, x8, x9
    3410:	ldr	x9, [sp, #40]
    3414:	str	x8, [x9, #32]
    3418:	str	x8, [sp, #80]
    341c:	ldr	x8, [sp, #96]
    3420:	str	x8, [x9, #8]
    3424:	ldr	x8, [sp, #96]
    3428:	orr	x8, x8, #0x1
    342c:	ldr	x10, [sp, #80]
    3430:	str	x8, [x10, #8]
    3434:	ldr	x8, [sp, #96]
    3438:	ldr	x10, [sp, #80]
    343c:	ldr	x11, [sp, #96]
    3440:	str	x8, [x10, x11]
    3444:	ldur	x8, [x29, #-32]
    3448:	orr	x8, x8, #0x1
    344c:	orr	x8, x8, #0x2
    3450:	ldr	x10, [sp, #88]
    3454:	str	x8, [x10, #8]
    3458:	b	34a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x69c>
    345c:	ldr	x8, [sp, #40]
    3460:	ldr	x9, [x8, #8]
    3464:	str	x9, [sp, #72]
    3468:	mov	x9, xzr
    346c:	str	xzr, [x8, #8]
    3470:	str	x9, [x8, #32]
    3474:	ldr	x9, [sp, #72]
    3478:	orr	x9, x9, #0x1
    347c:	orr	x9, x9, #0x2
    3480:	ldr	x10, [sp, #88]
    3484:	str	x9, [x10, #8]
    3488:	ldr	x9, [sp, #88]
    348c:	ldr	x10, [sp, #72]
    3490:	add	x9, x9, x10
    3494:	ldr	x10, [x9, #8]
    3498:	orr	x10, x10, #0x1
    349c:	str	x10, [x9, #8]
    34a0:	ldr	x8, [sp, #88]
    34a4:	add	x8, x8, #0x10
    34a8:	stur	x8, [x29, #-24]
    34ac:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    34b0:	ldur	x8, [x29, #-32]
    34b4:	ldr	x9, [sp, #40]
    34b8:	ldr	x10, [x9, #16]
    34bc:	cmp	x8, x10
    34c0:	b.cs	352c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>  // b.hs, b.nlast
    34c4:	ldur	x8, [x29, #-32]
    34c8:	ldr	x9, [sp, #40]
    34cc:	ldr	x10, [x9, #16]
    34d0:	subs	x8, x10, x8
    34d4:	str	x8, [x9, #16]
    34d8:	str	x8, [sp, #64]
    34dc:	ldr	x8, [x9, #40]
    34e0:	str	x8, [sp, #56]
    34e4:	ldr	x8, [sp, #56]
    34e8:	ldur	x10, [x29, #-32]
    34ec:	add	x8, x8, x10
    34f0:	str	x8, [x9, #40]
    34f4:	str	x8, [sp, #48]
    34f8:	ldr	x8, [sp, #64]
    34fc:	orr	x8, x8, #0x1
    3500:	ldr	x10, [sp, #48]
    3504:	str	x8, [x10, #8]
    3508:	ldur	x8, [x29, #-32]
    350c:	orr	x8, x8, #0x1
    3510:	orr	x8, x8, #0x2
    3514:	ldr	x10, [sp, #56]
    3518:	str	x8, [x10, #8]
    351c:	ldr	x8, [sp, #56]
    3520:	add	x8, x8, #0x10
    3524:	stur	x8, [x29, #-24]
    3528:	b	353c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x738>
    352c:	ldur	x1, [x29, #-32]
    3530:	ldr	x0, [sp, #40]
    3534:	bl	5a6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x240c>
    3538:	stur	x0, [x29, #-24]
    353c:	ldr	x8, [sp, #40]
    3540:	ldr	w9, [x8, #864]
    3544:	and	w9, w9, #0x2
    3548:	cbz	w9, 3554 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x750>
    354c:	ldr	x0, [sp, #24]
    3550:	bl	1c60 <pthread_mutex_unlock@plt>
    3554:	ldur	x8, [x29, #-24]
    3558:	stur	x8, [x29, #-8]
    355c:	b	3568 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x764>
    3560:	mov	x8, xzr
    3564:	stur	x8, [x29, #-8]
    3568:	ldur	x0, [x29, #-8]
    356c:	ldr	x28, [sp, #288]
    3570:	ldp	x29, x30, [sp, #272]
    3574:	add	sp, sp, #0x130
    3578:	ret
    357c:	sub	sp, sp, #0x20
    3580:	str	x0, [sp, #16]
    3584:	str	x1, [sp, #8]
    3588:	ldr	x8, [sp, #16]
    358c:	add	x8, x8, #0x398
    3590:	str	x8, [sp]
    3594:	ldr	x8, [sp, #8]
    3598:	ldr	x9, [sp]
    359c:	ldr	x9, [x9]
    35a0:	cmp	x8, x9
    35a4:	b.cc	35d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7d0>  // b.lo, b.ul, b.last
    35a8:	ldr	x8, [sp, #8]
    35ac:	ldr	x9, [sp]
    35b0:	ldr	x9, [x9]
    35b4:	ldr	x10, [sp]
    35b8:	ldr	x10, [x10, #8]
    35bc:	add	x9, x9, x10
    35c0:	cmp	x8, x9
    35c4:	b.cs	35d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7d0>  // b.hs, b.nlast
    35c8:	ldr	x8, [sp]
    35cc:	str	x8, [sp, #24]
    35d0:	b	35f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7f0>
    35d4:	ldr	x8, [sp]
    35d8:	ldr	x8, [x8, #16]
    35dc:	str	x8, [sp]
    35e0:	cbnz	x8, 35f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7ec>
    35e4:	mov	x8, xzr
    35e8:	str	x8, [sp, #24]
    35ec:	b	35f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7f0>
    35f0:	b	3594 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x790>
    35f4:	ldr	x0, [sp, #24]
    35f8:	add	sp, sp, #0x20
    35fc:	ret
    3600:	sub	sp, sp, #0x30
    3604:	stp	x29, x30, [sp, #32]
    3608:	add	x29, sp, #0x20
    360c:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    3610:	add	x8, x8, #0x248
    3614:	str	x0, [sp, #16]
    3618:	ldr	x1, [sp, #16]
    361c:	mov	x0, x8
    3620:	bl	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    3624:	str	x0, [sp, #8]
    3628:	ldr	x8, [sp, #8]
    362c:	cbz	x8, 3648 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x844>
    3630:	ldr	x8, [sp, #16]
    3634:	ldr	x9, [sp, #8]
    3638:	ldr	x9, [x9, #24]
    363c:	add	x8, x8, x9
    3640:	stur	x8, [x29, #-8]
    3644:	b	3650 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x84c>
    3648:	ldr	x8, [sp, #16]
    364c:	stur	x8, [x29, #-8]
    3650:	ldur	x0, [x29, #-8]
    3654:	ldp	x29, x30, [sp, #32]
    3658:	add	sp, sp, #0x30
    365c:	ret

0000000000003660 <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    3660:	sub	sp, sp, #0x20
    3664:	stp	x29, x30, [sp, #16]
    3668:	add	x29, sp, #0x10
    366c:	str	x0, [sp, #8]
    3670:	ldr	x0, [sp, #8]
    3674:	bl	3684 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x24>
    3678:	ldp	x29, x30, [sp, #16]
    367c:	add	sp, sp, #0x20
    3680:	ret
    3684:	stp	x29, x30, [sp, #-32]!
    3688:	str	x28, [sp, #16]
    368c:	mov	x29, sp
    3690:	sub	sp, sp, #0x1e0
    3694:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    3698:	add	x8, x8, #0x600
    369c:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    36a0:	add	x9, x9, #0x248
    36a4:	mov	w10, #0x0                   	// #0
    36a8:	add	x11, x9, #0x368
    36ac:	add	x12, x9, #0x250
    36b0:	add	x13, x9, #0x40
    36b4:	stur	x0, [x29, #-8]
    36b8:	ldur	x14, [x29, #-8]
    36bc:	str	x8, [sp, #104]
    36c0:	str	x9, [sp, #96]
    36c4:	str	w10, [sp, #92]
    36c8:	str	x11, [sp, #80]
    36cc:	str	x12, [sp, #72]
    36d0:	str	x13, [sp, #64]
    36d4:	cbz	x14, 474c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ec>
    36d8:	ldur	x8, [x29, #-8]
    36dc:	mov	x9, #0xfffffffffffffff0    	// #-16
    36e0:	add	x8, x8, x9
    36e4:	stur	x8, [x29, #-16]
    36e8:	ldr	x8, [sp, #104]
    36ec:	ldr	x9, [x8, #8]
    36f0:	cbnz	x9, 36fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c>
    36f4:	bl	475c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10fc>
    36f8:	cbnz	w0, 370c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac>
    36fc:	ldr	x8, [sp, #96]
    3700:	ldr	w9, [x8, #864]
    3704:	and	w9, w9, #0x2
    3708:	cbz	w9, 371c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbc>
    370c:	ldr	x0, [sp, #80]
    3710:	bl	1c50 <pthread_mutex_lock@plt>
    3714:	cbnz	w0, 474c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ec>
    3718:	b	3724 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc4>
    371c:	ldr	w8, [sp, #92]
    3720:	tbnz	w8, #0, 474c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ec>
    3724:	ldur	x8, [x29, #-16]
    3728:	ldr	x9, [sp, #96]
    372c:	ldr	x10, [x9, #24]
    3730:	mov	w11, #0x0                   	// #0
    3734:	cmp	x8, x10
    3738:	str	w11, [sp, #60]
    373c:	b.cc	3754 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf4>  // b.lo, b.ul, b.last
    3740:	ldur	x8, [x29, #-16]
    3744:	ldr	x8, [x8, #8]
    3748:	tst	x8, #0x2
    374c:	cset	w9, ne  // ne = any
    3750:	str	w9, [sp, #60]
    3754:	ldr	w8, [sp, #60]
    3758:	and	w8, w8, #0x1
    375c:	mov	w0, w8
    3760:	sxtw	x9, w0
    3764:	cbz	x9, 4730 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d0>
    3768:	ldur	x8, [x29, #-16]
    376c:	ldr	x8, [x8, #8]
    3770:	and	x8, x8, #0xfffffffffffffffc
    3774:	stur	x8, [x29, #-24]
    3778:	ldur	x8, [x29, #-16]
    377c:	ldur	x9, [x29, #-24]
    3780:	add	x8, x8, x9
    3784:	stur	x8, [x29, #-32]
    3788:	ldur	x8, [x29, #-16]
    378c:	ldr	x8, [x8, #8]
    3790:	and	x8, x8, #0x1
    3794:	cbnz	x8, 3cf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x690>
    3798:	ldur	x8, [x29, #-16]
    379c:	ldr	x8, [x8]
    37a0:	stur	x8, [x29, #-40]
    37a4:	ldur	x8, [x29, #-40]
    37a8:	and	x8, x8, #0x1
    37ac:	cbz	x8, 3808 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a8>
    37b0:	ldur	x8, [x29, #-40]
    37b4:	and	x8, x8, #0xfffffffffffffffe
    37b8:	stur	x8, [x29, #-40]
    37bc:	ldur	x8, [x29, #-40]
    37c0:	add	x8, x8, #0x20
    37c4:	ldur	x9, [x29, #-24]
    37c8:	add	x8, x9, x8
    37cc:	stur	x8, [x29, #-24]
    37d0:	ldur	x8, [x29, #-16]
    37d4:	ldur	x9, [x29, #-40]
    37d8:	mov	x10, xzr
    37dc:	subs	x9, x10, x9
    37e0:	add	x0, x8, x9
    37e4:	ldur	x1, [x29, #-24]
    37e8:	bl	7f8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x492c>
    37ec:	cbnz	w0, 3804 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a4>
    37f0:	ldur	x8, [x29, #-24]
    37f4:	ldr	x9, [sp, #96]
    37f8:	ldr	x10, [x9, #848]
    37fc:	subs	x8, x10, x8
    3800:	str	x8, [x9, #848]
    3804:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    3808:	ldur	x8, [x29, #-16]
    380c:	ldur	x9, [x29, #-40]
    3810:	mov	x10, xzr
    3814:	subs	x9, x10, x9
    3818:	add	x8, x8, x9
    381c:	stur	x8, [x29, #-48]
    3820:	ldur	x8, [x29, #-40]
    3824:	ldur	x9, [x29, #-24]
    3828:	add	x8, x9, x8
    382c:	stur	x8, [x29, #-24]
    3830:	ldur	x8, [x29, #-48]
    3834:	stur	x8, [x29, #-16]
    3838:	ldur	x8, [x29, #-48]
    383c:	ldr	x9, [sp, #96]
    3840:	ldr	x10, [x9, #24]
    3844:	cmp	x8, x10
    3848:	cset	w11, cs  // cs = hs, nlast
    384c:	and	w11, w11, #0x1
    3850:	mov	w0, w11
    3854:	sxtw	x8, w0
    3858:	cbz	x8, 3cec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x68c>
    385c:	ldur	x8, [x29, #-16]
    3860:	ldr	x9, [sp, #96]
    3864:	ldr	x10, [x9, #32]
    3868:	cmp	x8, x10
    386c:	b.eq	3c94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x634>  // b.none
    3870:	ldur	x8, [x29, #-40]
    3874:	lsr	x8, x8, #3
    3878:	cmp	x8, #0x20
    387c:	b.cs	3998 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x338>  // b.hs, b.nlast
    3880:	ldur	x8, [x29, #-16]
    3884:	ldr	x8, [x8, #16]
    3888:	stur	x8, [x29, #-56]
    388c:	ldur	x8, [x29, #-16]
    3890:	ldr	x8, [x8, #24]
    3894:	stur	x8, [x29, #-64]
    3898:	ldur	x8, [x29, #-40]
    389c:	lsr	x8, x8, #3
    38a0:	stur	x8, [x29, #-72]
    38a4:	ldur	x8, [x29, #-56]
    38a8:	ldur	x9, [x29, #-64]
    38ac:	cmp	x8, x9
    38b0:	b.ne	38d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x274>  // b.any
    38b4:	ldur	x8, [x29, #-72]
    38b8:	mov	w9, #0x1                   	// #1
    38bc:	lsl	w8, w9, w8
    38c0:	ldr	x10, [sp, #96]
    38c4:	ldr	w9, [x10]
    38c8:	bic	w8, w9, w8
    38cc:	str	w8, [x10]
    38d0:	b	3994 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x334>
    38d4:	ldur	x8, [x29, #-56]
    38d8:	ldur	x9, [x29, #-72]
    38dc:	lsl	x9, x9, #1
    38e0:	mov	x10, #0x8                   	// #8
    38e4:	mul	x9, x10, x9
    38e8:	ldr	x10, [sp, #64]
    38ec:	add	x9, x10, x9
    38f0:	cmp	x8, x9
    38f4:	b.eq	3914 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b4>  // b.none
    38f8:	ldur	x8, [x29, #-56]
    38fc:	ldr	x9, [sp, #96]
    3900:	ldr	x10, [x9, #24]
    3904:	mov	w11, #0x0                   	// #0
    3908:	cmp	x8, x10
    390c:	str	w11, [sp, #56]
    3910:	b.cc	3960 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x300>  // b.lo, b.ul, b.last
    3914:	ldur	x8, [x29, #-64]
    3918:	ldur	x9, [x29, #-72]
    391c:	lsl	x9, x9, #1
    3920:	mov	x10, #0x8                   	// #8
    3924:	mul	x9, x10, x9
    3928:	ldr	x10, [sp, #64]
    392c:	add	x9, x10, x9
    3930:	mov	w11, #0x1                   	// #1
    3934:	cmp	x8, x9
    3938:	str	w11, [sp, #52]
    393c:	b.eq	3958 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2f8>  // b.none
    3940:	ldur	x8, [x29, #-64]
    3944:	ldr	x9, [sp, #96]
    3948:	ldr	x10, [x9, #24]
    394c:	cmp	x8, x10
    3950:	cset	w11, cs  // cs = hs, nlast
    3954:	str	w11, [sp, #52]
    3958:	ldr	w8, [sp, #52]
    395c:	str	w8, [sp, #56]
    3960:	ldr	w8, [sp, #56]
    3964:	and	w8, w8, #0x1
    3968:	mov	w0, w8
    396c:	sxtw	x9, w0
    3970:	cbz	x9, 3990 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x330>
    3974:	ldur	x8, [x29, #-64]
    3978:	ldur	x9, [x29, #-56]
    397c:	str	x8, [x9, #24]
    3980:	ldur	x8, [x29, #-56]
    3984:	ldur	x9, [x29, #-64]
    3988:	str	x8, [x9, #16]
    398c:	b	3994 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x334>
    3990:	bl	1b10 <abort@plt>
    3994:	b	3c90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x630>
    3998:	ldur	x8, [x29, #-16]
    399c:	stur	x8, [x29, #-80]
    39a0:	ldur	x8, [x29, #-80]
    39a4:	ldr	x8, [x8, #48]
    39a8:	stur	x8, [x29, #-88]
    39ac:	ldur	x8, [x29, #-80]
    39b0:	ldr	x8, [x8, #24]
    39b4:	ldur	x9, [x29, #-80]
    39b8:	cmp	x8, x9
    39bc:	b.eq	3a20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c0>  // b.none
    39c0:	ldur	x8, [x29, #-80]
    39c4:	ldr	x8, [x8, #16]
    39c8:	stur	x8, [x29, #-104]
    39cc:	ldur	x8, [x29, #-80]
    39d0:	ldr	x8, [x8, #24]
    39d4:	stur	x8, [x29, #-96]
    39d8:	ldur	x8, [x29, #-104]
    39dc:	ldr	x9, [sp, #96]
    39e0:	ldr	x10, [x9, #24]
    39e4:	cmp	x8, x10
    39e8:	cset	w11, cs  // cs = hs, nlast
    39ec:	and	w11, w11, #0x1
    39f0:	mov	w0, w11
    39f4:	sxtw	x8, w0
    39f8:	cbz	x8, 3a18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b8>
    39fc:	ldur	x8, [x29, #-96]
    3a00:	ldur	x9, [x29, #-104]
    3a04:	str	x8, [x9, #24]
    3a08:	ldur	x8, [x29, #-104]
    3a0c:	ldur	x9, [x29, #-96]
    3a10:	str	x8, [x9, #16]
    3a14:	b	3a1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3bc>
    3a18:	bl	1b10 <abort@plt>
    3a1c:	b	3ae0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x480>
    3a20:	ldur	x8, [x29, #-80]
    3a24:	add	x9, x8, #0x28
    3a28:	stur	x9, [x29, #-112]
    3a2c:	ldr	x8, [x8, #40]
    3a30:	stur	x8, [x29, #-96]
    3a34:	cbnz	x8, 3a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f0>
    3a38:	ldur	x8, [x29, #-80]
    3a3c:	add	x9, x8, #0x20
    3a40:	stur	x9, [x29, #-112]
    3a44:	ldr	x8, [x8, #32]
    3a48:	stur	x8, [x29, #-96]
    3a4c:	cbz	x8, 3ae0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x480>
    3a50:	ldur	x8, [x29, #-96]
    3a54:	add	x9, x8, #0x28
    3a58:	stur	x9, [x29, #-120]
    3a5c:	ldr	x8, [x8, #40]
    3a60:	mov	w10, #0x1                   	// #1
    3a64:	str	w10, [sp, #48]
    3a68:	cbnz	x8, 3a88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x428>
    3a6c:	ldur	x8, [x29, #-96]
    3a70:	add	x9, x8, #0x20
    3a74:	stur	x9, [x29, #-120]
    3a78:	ldr	x8, [x8, #32]
    3a7c:	cmp	x8, #0x0
    3a80:	cset	w10, ne  // ne = any
    3a84:	str	w10, [sp, #48]
    3a88:	ldr	w8, [sp, #48]
    3a8c:	tbnz	w8, #0, 3a94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x434>
    3a90:	b	3aa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x448>
    3a94:	ldur	x8, [x29, #-120]
    3a98:	stur	x8, [x29, #-112]
    3a9c:	ldr	x8, [x8]
    3aa0:	stur	x8, [x29, #-96]
    3aa4:	b	3a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f0>
    3aa8:	ldur	x8, [x29, #-112]
    3aac:	ldr	x9, [sp, #96]
    3ab0:	ldr	x10, [x9, #24]
    3ab4:	cmp	x8, x10
    3ab8:	cset	w11, cs  // cs = hs, nlast
    3abc:	and	w11, w11, #0x1
    3ac0:	mov	w0, w11
    3ac4:	sxtw	x8, w0
    3ac8:	cbz	x8, 3adc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x47c>
    3acc:	ldur	x8, [x29, #-112]
    3ad0:	mov	x9, xzr
    3ad4:	str	x9, [x8]
    3ad8:	b	3ae0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x480>
    3adc:	bl	1b10 <abort@plt>
    3ae0:	ldur	x8, [x29, #-88]
    3ae4:	cbz	x8, 3c90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x630>
    3ae8:	ldur	x8, [x29, #-80]
    3aec:	ldr	x8, [x8, #56]
    3af0:	mov	x9, #0x8                   	// #8
    3af4:	mul	x8, x9, x8
    3af8:	ldr	x9, [sp, #72]
    3afc:	add	x8, x9, x8
    3b00:	stur	x8, [x29, #-128]
    3b04:	ldur	x8, [x29, #-80]
    3b08:	ldur	x10, [x29, #-128]
    3b0c:	ldr	x10, [x10]
    3b10:	cmp	x8, x10
    3b14:	b.ne	3b4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ec>  // b.any
    3b18:	ldur	x8, [x29, #-96]
    3b1c:	ldur	x9, [x29, #-128]
    3b20:	str	x8, [x9]
    3b24:	cbnz	x8, 3b48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e8>
    3b28:	ldur	x8, [x29, #-80]
    3b2c:	ldr	x8, [x8, #56]
    3b30:	mov	w9, #0x1                   	// #1
    3b34:	lsl	w8, w9, w8
    3b38:	ldr	x10, [sp, #96]
    3b3c:	ldr	w9, [x10, #4]
    3b40:	bic	w8, w9, w8
    3b44:	str	w8, [x10, #4]
    3b48:	b	3ba8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x548>
    3b4c:	ldur	x8, [x29, #-88]
    3b50:	ldr	x9, [sp, #96]
    3b54:	ldr	x10, [x9, #24]
    3b58:	cmp	x8, x10
    3b5c:	cset	w11, cs  // cs = hs, nlast
    3b60:	and	w11, w11, #0x1
    3b64:	mov	w0, w11
    3b68:	sxtw	x8, w0
    3b6c:	cbz	x8, 3ba4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x544>
    3b70:	ldur	x8, [x29, #-88]
    3b74:	ldr	x8, [x8, #32]
    3b78:	ldur	x9, [x29, #-80]
    3b7c:	cmp	x8, x9
    3b80:	b.ne	3b94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x534>  // b.any
    3b84:	ldur	x8, [x29, #-96]
    3b88:	ldur	x9, [x29, #-88]
    3b8c:	str	x8, [x9, #32]
    3b90:	b	3ba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x540>
    3b94:	ldur	x8, [x29, #-96]
    3b98:	ldur	x9, [x29, #-88]
    3b9c:	str	x8, [x9, #40]
    3ba0:	b	3ba8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x548>
    3ba4:	bl	1b10 <abort@plt>
    3ba8:	ldur	x8, [x29, #-96]
    3bac:	cbz	x8, 3c90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x630>
    3bb0:	ldur	x8, [x29, #-96]
    3bb4:	ldr	x9, [sp, #96]
    3bb8:	ldr	x10, [x9, #24]
    3bbc:	cmp	x8, x10
    3bc0:	cset	w11, cs  // cs = hs, nlast
    3bc4:	and	w11, w11, #0x1
    3bc8:	mov	w0, w11
    3bcc:	sxtw	x8, w0
    3bd0:	cbz	x8, 3c8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x62c>
    3bd4:	ldur	x8, [x29, #-88]
    3bd8:	ldur	x9, [x29, #-96]
    3bdc:	str	x8, [x9, #48]
    3be0:	ldur	x8, [x29, #-80]
    3be4:	ldr	x8, [x8, #32]
    3be8:	stur	x8, [x29, #-136]
    3bec:	cbz	x8, 3c34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3bf0:	ldur	x8, [x29, #-136]
    3bf4:	ldr	x9, [sp, #96]
    3bf8:	ldr	x10, [x9, #24]
    3bfc:	cmp	x8, x10
    3c00:	cset	w11, cs  // cs = hs, nlast
    3c04:	and	w11, w11, #0x1
    3c08:	mov	w0, w11
    3c0c:	sxtw	x8, w0
    3c10:	cbz	x8, 3c30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d0>
    3c14:	ldur	x8, [x29, #-136]
    3c18:	ldur	x9, [x29, #-96]
    3c1c:	str	x8, [x9, #32]
    3c20:	ldur	x8, [x29, #-96]
    3c24:	ldur	x9, [x29, #-136]
    3c28:	str	x8, [x9, #48]
    3c2c:	b	3c34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3c30:	bl	1b10 <abort@plt>
    3c34:	ldur	x8, [x29, #-80]
    3c38:	ldr	x8, [x8, #40]
    3c3c:	stur	x8, [x29, #-144]
    3c40:	cbz	x8, 3c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x628>
    3c44:	ldur	x8, [x29, #-144]
    3c48:	ldr	x9, [sp, #96]
    3c4c:	ldr	x10, [x9, #24]
    3c50:	cmp	x8, x10
    3c54:	cset	w11, cs  // cs = hs, nlast
    3c58:	and	w11, w11, #0x1
    3c5c:	mov	w0, w11
    3c60:	sxtw	x8, w0
    3c64:	cbz	x8, 3c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x624>
    3c68:	ldur	x8, [x29, #-144]
    3c6c:	ldur	x9, [x29, #-96]
    3c70:	str	x8, [x9, #40]
    3c74:	ldur	x8, [x29, #-96]
    3c78:	ldur	x9, [x29, #-144]
    3c7c:	str	x8, [x9, #48]
    3c80:	b	3c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x628>
    3c84:	bl	1b10 <abort@plt>
    3c88:	b	3c90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x630>
    3c8c:	bl	1b10 <abort@plt>
    3c90:	b	3ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x688>
    3c94:	ldur	x8, [x29, #-32]
    3c98:	ldr	x8, [x8, #8]
    3c9c:	and	x8, x8, #0x3
    3ca0:	cmp	x8, #0x3
    3ca4:	b.ne	3ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x688>  // b.any
    3ca8:	ldur	x8, [x29, #-24]
    3cac:	ldr	x9, [sp, #96]
    3cb0:	str	x8, [x9, #8]
    3cb4:	ldur	x8, [x29, #-32]
    3cb8:	ldr	x10, [x8, #8]
    3cbc:	and	x10, x10, #0xfffffffffffffffe
    3cc0:	str	x10, [x8, #8]
    3cc4:	ldur	x8, [x29, #-24]
    3cc8:	orr	x8, x8, #0x1
    3ccc:	ldur	x10, [x29, #-16]
    3cd0:	str	x8, [x10, #8]
    3cd4:	ldur	x8, [x29, #-24]
    3cd8:	ldur	x10, [x29, #-16]
    3cdc:	ldur	x11, [x29, #-24]
    3ce0:	str	x8, [x10, x11]
    3ce4:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    3ce8:	b	3cf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x690>
    3cec:	b	4730 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d0>
    3cf0:	ldur	x8, [x29, #-16]
    3cf4:	ldur	x9, [x29, #-32]
    3cf8:	mov	w10, #0x0                   	// #0
    3cfc:	cmp	x8, x9
    3d00:	str	w10, [sp, #44]
    3d04:	b.cs	3d1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6bc>  // b.hs, b.nlast
    3d08:	ldur	x8, [x29, #-32]
    3d0c:	ldr	x8, [x8, #8]
    3d10:	tst	x8, #0x1
    3d14:	cset	w9, ne  // ne = any
    3d18:	str	w9, [sp, #44]
    3d1c:	ldr	w8, [sp, #44]
    3d20:	and	w8, w8, #0x1
    3d24:	mov	w0, w8
    3d28:	sxtw	x9, w0
    3d2c:	cbz	x9, 4730 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d0>
    3d30:	ldur	x8, [x29, #-32]
    3d34:	ldr	x8, [x8, #8]
    3d38:	and	x8, x8, #0x2
    3d3c:	cbnz	x8, 42ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc4c>
    3d40:	ldur	x8, [x29, #-32]
    3d44:	ldr	x9, [sp, #96]
    3d48:	ldr	x10, [x9, #40]
    3d4c:	cmp	x8, x10
    3d50:	b.ne	3dcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x76c>  // b.any
    3d54:	ldur	x8, [x29, #-24]
    3d58:	ldr	x9, [sp, #96]
    3d5c:	ldr	x10, [x9, #16]
    3d60:	add	x8, x10, x8
    3d64:	str	x8, [x9, #16]
    3d68:	stur	x8, [x29, #-152]
    3d6c:	ldur	x8, [x29, #-16]
    3d70:	str	x8, [x9, #40]
    3d74:	ldur	x8, [x29, #-152]
    3d78:	orr	x8, x8, #0x1
    3d7c:	ldur	x10, [x29, #-16]
    3d80:	str	x8, [x10, #8]
    3d84:	ldur	x8, [x29, #-16]
    3d88:	ldr	x10, [x9, #32]
    3d8c:	cmp	x8, x10
    3d90:	b.ne	3da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x744>  // b.any
    3d94:	mov	x8, xzr
    3d98:	ldr	x9, [sp, #96]
    3d9c:	str	x8, [x9, #32]
    3da0:	str	xzr, [x9, #8]
    3da4:	ldur	x8, [x29, #-152]
    3da8:	ldr	x9, [sp, #96]
    3dac:	ldr	x10, [x9, #48]
    3db0:	cmp	x8, x10
    3db4:	b.ls	3dc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x768>  // b.plast
    3db8:	ldr	x0, [sp, #96]
    3dbc:	mov	x8, xzr
    3dc0:	mov	x1, x8
    3dc4:	bl	8024 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x49c4>
    3dc8:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    3dcc:	ldur	x8, [x29, #-32]
    3dd0:	ldr	x9, [sp, #96]
    3dd4:	ldr	x10, [x9, #32]
    3dd8:	cmp	x8, x10
    3ddc:	b.ne	3e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7c4>  // b.any
    3de0:	ldur	x8, [x29, #-24]
    3de4:	ldr	x9, [sp, #96]
    3de8:	ldr	x10, [x9, #8]
    3dec:	add	x8, x10, x8
    3df0:	str	x8, [x9, #8]
    3df4:	stur	x8, [x29, #-160]
    3df8:	ldur	x8, [x29, #-16]
    3dfc:	str	x8, [x9, #32]
    3e00:	ldur	x8, [x29, #-160]
    3e04:	orr	x8, x8, #0x1
    3e08:	ldur	x10, [x29, #-16]
    3e0c:	str	x8, [x10, #8]
    3e10:	ldur	x8, [x29, #-160]
    3e14:	ldur	x10, [x29, #-16]
    3e18:	ldur	x11, [x29, #-160]
    3e1c:	str	x8, [x10, x11]
    3e20:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    3e24:	ldur	x8, [x29, #-32]
    3e28:	ldr	x8, [x8, #8]
    3e2c:	and	x8, x8, #0xfffffffffffffffc
    3e30:	stur	x8, [x29, #-168]
    3e34:	ldur	x8, [x29, #-168]
    3e38:	ldur	x9, [x29, #-24]
    3e3c:	add	x8, x9, x8
    3e40:	stur	x8, [x29, #-24]
    3e44:	ldur	x8, [x29, #-168]
    3e48:	lsr	x8, x8, #3
    3e4c:	cmp	x8, #0x20
    3e50:	b.cs	3f6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x90c>  // b.hs, b.nlast
    3e54:	ldur	x8, [x29, #-32]
    3e58:	ldr	x8, [x8, #16]
    3e5c:	stur	x8, [x29, #-176]
    3e60:	ldur	x8, [x29, #-32]
    3e64:	ldr	x8, [x8, #24]
    3e68:	stur	x8, [x29, #-184]
    3e6c:	ldur	x8, [x29, #-168]
    3e70:	lsr	x8, x8, #3
    3e74:	stur	x8, [x29, #-192]
    3e78:	ldur	x8, [x29, #-176]
    3e7c:	ldur	x9, [x29, #-184]
    3e80:	cmp	x8, x9
    3e84:	b.ne	3ea8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x848>  // b.any
    3e88:	ldur	x8, [x29, #-192]
    3e8c:	mov	w9, #0x1                   	// #1
    3e90:	lsl	w8, w9, w8
    3e94:	ldr	x10, [sp, #96]
    3e98:	ldr	w9, [x10]
    3e9c:	bic	w8, w9, w8
    3ea0:	str	w8, [x10]
    3ea4:	b	3f68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x908>
    3ea8:	ldur	x8, [x29, #-176]
    3eac:	ldur	x9, [x29, #-192]
    3eb0:	lsl	x9, x9, #1
    3eb4:	mov	x10, #0x8                   	// #8
    3eb8:	mul	x9, x10, x9
    3ebc:	ldr	x10, [sp, #64]
    3ec0:	add	x9, x10, x9
    3ec4:	cmp	x8, x9
    3ec8:	b.eq	3ee8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x888>  // b.none
    3ecc:	ldur	x8, [x29, #-176]
    3ed0:	ldr	x9, [sp, #96]
    3ed4:	ldr	x10, [x9, #24]
    3ed8:	mov	w11, #0x0                   	// #0
    3edc:	cmp	x8, x10
    3ee0:	str	w11, [sp, #40]
    3ee4:	b.cc	3f34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8d4>  // b.lo, b.ul, b.last
    3ee8:	ldur	x8, [x29, #-184]
    3eec:	ldur	x9, [x29, #-192]
    3ef0:	lsl	x9, x9, #1
    3ef4:	mov	x10, #0x8                   	// #8
    3ef8:	mul	x9, x10, x9
    3efc:	ldr	x10, [sp, #64]
    3f00:	add	x9, x10, x9
    3f04:	mov	w11, #0x1                   	// #1
    3f08:	cmp	x8, x9
    3f0c:	str	w11, [sp, #36]
    3f10:	b.eq	3f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8cc>  // b.none
    3f14:	ldur	x8, [x29, #-184]
    3f18:	ldr	x9, [sp, #96]
    3f1c:	ldr	x10, [x9, #24]
    3f20:	cmp	x8, x10
    3f24:	cset	w11, cs  // cs = hs, nlast
    3f28:	str	w11, [sp, #36]
    3f2c:	ldr	w8, [sp, #36]
    3f30:	str	w8, [sp, #40]
    3f34:	ldr	w8, [sp, #40]
    3f38:	and	w8, w8, #0x1
    3f3c:	mov	w0, w8
    3f40:	sxtw	x9, w0
    3f44:	cbz	x9, 3f64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x904>
    3f48:	ldur	x8, [x29, #-184]
    3f4c:	ldur	x9, [x29, #-176]
    3f50:	str	x8, [x9, #24]
    3f54:	ldur	x8, [x29, #-176]
    3f58:	ldur	x9, [x29, #-184]
    3f5c:	str	x8, [x9, #16]
    3f60:	b	3f68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x908>
    3f64:	bl	1b10 <abort@plt>
    3f68:	b	4264 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc04>
    3f6c:	ldur	x8, [x29, #-32]
    3f70:	stur	x8, [x29, #-200]
    3f74:	ldur	x8, [x29, #-200]
    3f78:	ldr	x8, [x8, #48]
    3f7c:	stur	x8, [x29, #-208]
    3f80:	ldur	x8, [x29, #-200]
    3f84:	ldr	x8, [x8, #24]
    3f88:	ldur	x9, [x29, #-200]
    3f8c:	cmp	x8, x9
    3f90:	b.eq	3ff4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x994>  // b.none
    3f94:	ldur	x8, [x29, #-200]
    3f98:	ldr	x8, [x8, #16]
    3f9c:	stur	x8, [x29, #-224]
    3fa0:	ldur	x8, [x29, #-200]
    3fa4:	ldr	x8, [x8, #24]
    3fa8:	stur	x8, [x29, #-216]
    3fac:	ldur	x8, [x29, #-224]
    3fb0:	ldr	x9, [sp, #96]
    3fb4:	ldr	x10, [x9, #24]
    3fb8:	cmp	x8, x10
    3fbc:	cset	w11, cs  // cs = hs, nlast
    3fc0:	and	w11, w11, #0x1
    3fc4:	mov	w0, w11
    3fc8:	sxtw	x8, w0
    3fcc:	cbz	x8, 3fec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x98c>
    3fd0:	ldur	x8, [x29, #-216]
    3fd4:	ldur	x9, [x29, #-224]
    3fd8:	str	x8, [x9, #24]
    3fdc:	ldur	x8, [x29, #-224]
    3fe0:	ldur	x9, [x29, #-216]
    3fe4:	str	x8, [x9, #16]
    3fe8:	b	3ff0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x990>
    3fec:	bl	1b10 <abort@plt>
    3ff0:	b	40b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa54>
    3ff4:	ldur	x8, [x29, #-200]
    3ff8:	add	x9, x8, #0x28
    3ffc:	stur	x9, [x29, #-232]
    4000:	ldr	x8, [x8, #40]
    4004:	stur	x8, [x29, #-216]
    4008:	cbnz	x8, 4024 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c4>
    400c:	ldur	x8, [x29, #-200]
    4010:	add	x9, x8, #0x20
    4014:	stur	x9, [x29, #-232]
    4018:	ldr	x8, [x8, #32]
    401c:	stur	x8, [x29, #-216]
    4020:	cbz	x8, 40b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa54>
    4024:	ldur	x8, [x29, #-216]
    4028:	add	x9, x8, #0x28
    402c:	str	x9, [sp, #240]
    4030:	ldr	x8, [x8, #40]
    4034:	mov	w10, #0x1                   	// #1
    4038:	str	w10, [sp, #32]
    403c:	cbnz	x8, 405c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9fc>
    4040:	ldur	x8, [x29, #-216]
    4044:	add	x9, x8, #0x20
    4048:	str	x9, [sp, #240]
    404c:	ldr	x8, [x8, #32]
    4050:	cmp	x8, #0x0
    4054:	cset	w10, ne  // ne = any
    4058:	str	w10, [sp, #32]
    405c:	ldr	w8, [sp, #32]
    4060:	tbnz	w8, #0, 4068 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa08>
    4064:	b	407c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa1c>
    4068:	ldr	x8, [sp, #240]
    406c:	stur	x8, [x29, #-232]
    4070:	ldr	x8, [x8]
    4074:	stur	x8, [x29, #-216]
    4078:	b	4024 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c4>
    407c:	ldur	x8, [x29, #-232]
    4080:	ldr	x9, [sp, #96]
    4084:	ldr	x10, [x9, #24]
    4088:	cmp	x8, x10
    408c:	cset	w11, cs  // cs = hs, nlast
    4090:	and	w11, w11, #0x1
    4094:	mov	w0, w11
    4098:	sxtw	x8, w0
    409c:	cbz	x8, 40b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa50>
    40a0:	ldur	x8, [x29, #-232]
    40a4:	mov	x9, xzr
    40a8:	str	x9, [x8]
    40ac:	b	40b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa54>
    40b0:	bl	1b10 <abort@plt>
    40b4:	ldur	x8, [x29, #-208]
    40b8:	cbz	x8, 4264 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc04>
    40bc:	ldur	x8, [x29, #-200]
    40c0:	ldr	x8, [x8, #56]
    40c4:	mov	x9, #0x8                   	// #8
    40c8:	mul	x8, x9, x8
    40cc:	ldr	x9, [sp, #72]
    40d0:	add	x8, x9, x8
    40d4:	str	x8, [sp, #232]
    40d8:	ldur	x8, [x29, #-200]
    40dc:	ldr	x10, [sp, #232]
    40e0:	ldr	x10, [x10]
    40e4:	cmp	x8, x10
    40e8:	b.ne	4120 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac0>  // b.any
    40ec:	ldur	x8, [x29, #-216]
    40f0:	ldr	x9, [sp, #232]
    40f4:	str	x8, [x9]
    40f8:	cbnz	x8, 411c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xabc>
    40fc:	ldur	x8, [x29, #-200]
    4100:	ldr	x8, [x8, #56]
    4104:	mov	w9, #0x1                   	// #1
    4108:	lsl	w8, w9, w8
    410c:	ldr	x10, [sp, #96]
    4110:	ldr	w9, [x10, #4]
    4114:	bic	w8, w9, w8
    4118:	str	w8, [x10, #4]
    411c:	b	417c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb1c>
    4120:	ldur	x8, [x29, #-208]
    4124:	ldr	x9, [sp, #96]
    4128:	ldr	x10, [x9, #24]
    412c:	cmp	x8, x10
    4130:	cset	w11, cs  // cs = hs, nlast
    4134:	and	w11, w11, #0x1
    4138:	mov	w0, w11
    413c:	sxtw	x8, w0
    4140:	cbz	x8, 4178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb18>
    4144:	ldur	x8, [x29, #-208]
    4148:	ldr	x8, [x8, #32]
    414c:	ldur	x9, [x29, #-200]
    4150:	cmp	x8, x9
    4154:	b.ne	4168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb08>  // b.any
    4158:	ldur	x8, [x29, #-216]
    415c:	ldur	x9, [x29, #-208]
    4160:	str	x8, [x9, #32]
    4164:	b	4174 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb14>
    4168:	ldur	x8, [x29, #-216]
    416c:	ldur	x9, [x29, #-208]
    4170:	str	x8, [x9, #40]
    4174:	b	417c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb1c>
    4178:	bl	1b10 <abort@plt>
    417c:	ldur	x8, [x29, #-216]
    4180:	cbz	x8, 4264 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc04>
    4184:	ldur	x8, [x29, #-216]
    4188:	ldr	x9, [sp, #96]
    418c:	ldr	x10, [x9, #24]
    4190:	cmp	x8, x10
    4194:	cset	w11, cs  // cs = hs, nlast
    4198:	and	w11, w11, #0x1
    419c:	mov	w0, w11
    41a0:	sxtw	x8, w0
    41a4:	cbz	x8, 4260 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc00>
    41a8:	ldur	x8, [x29, #-208]
    41ac:	ldur	x9, [x29, #-216]
    41b0:	str	x8, [x9, #48]
    41b4:	ldur	x8, [x29, #-200]
    41b8:	ldr	x8, [x8, #32]
    41bc:	str	x8, [sp, #224]
    41c0:	cbz	x8, 4208 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xba8>
    41c4:	ldr	x8, [sp, #224]
    41c8:	ldr	x9, [sp, #96]
    41cc:	ldr	x10, [x9, #24]
    41d0:	cmp	x8, x10
    41d4:	cset	w11, cs  // cs = hs, nlast
    41d8:	and	w11, w11, #0x1
    41dc:	mov	w0, w11
    41e0:	sxtw	x8, w0
    41e4:	cbz	x8, 4204 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xba4>
    41e8:	ldr	x8, [sp, #224]
    41ec:	ldur	x9, [x29, #-216]
    41f0:	str	x8, [x9, #32]
    41f4:	ldur	x8, [x29, #-216]
    41f8:	ldr	x9, [sp, #224]
    41fc:	str	x8, [x9, #48]
    4200:	b	4208 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xba8>
    4204:	bl	1b10 <abort@plt>
    4208:	ldur	x8, [x29, #-200]
    420c:	ldr	x8, [x8, #40]
    4210:	str	x8, [sp, #216]
    4214:	cbz	x8, 425c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbfc>
    4218:	ldr	x8, [sp, #216]
    421c:	ldr	x9, [sp, #96]
    4220:	ldr	x10, [x9, #24]
    4224:	cmp	x8, x10
    4228:	cset	w11, cs  // cs = hs, nlast
    422c:	and	w11, w11, #0x1
    4230:	mov	w0, w11
    4234:	sxtw	x8, w0
    4238:	cbz	x8, 4258 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbf8>
    423c:	ldr	x8, [sp, #216]
    4240:	ldur	x9, [x29, #-216]
    4244:	str	x8, [x9, #40]
    4248:	ldur	x8, [x29, #-216]
    424c:	ldr	x9, [sp, #216]
    4250:	str	x8, [x9, #48]
    4254:	b	425c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbfc>
    4258:	bl	1b10 <abort@plt>
    425c:	b	4264 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc04>
    4260:	bl	1b10 <abort@plt>
    4264:	ldur	x8, [x29, #-24]
    4268:	orr	x8, x8, #0x1
    426c:	ldur	x9, [x29, #-16]
    4270:	str	x8, [x9, #8]
    4274:	ldur	x8, [x29, #-24]
    4278:	ldur	x9, [x29, #-16]
    427c:	ldur	x10, [x29, #-24]
    4280:	str	x8, [x9, x10]
    4284:	ldur	x8, [x29, #-16]
    4288:	ldr	x9, [sp, #96]
    428c:	ldr	x10, [x9, #32]
    4290:	cmp	x8, x10
    4294:	b.ne	42a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc48>  // b.any
    4298:	ldur	x8, [x29, #-24]
    429c:	ldr	x9, [sp, #96]
    42a0:	str	x8, [x9, #8]
    42a4:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    42a8:	b	42dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc7c>
    42ac:	ldur	x8, [x29, #-32]
    42b0:	ldr	x9, [x8, #8]
    42b4:	and	x9, x9, #0xfffffffffffffffe
    42b8:	str	x9, [x8, #8]
    42bc:	ldur	x8, [x29, #-24]
    42c0:	orr	x8, x8, #0x1
    42c4:	ldur	x9, [x29, #-16]
    42c8:	str	x8, [x9, #8]
    42cc:	ldur	x8, [x29, #-24]
    42d0:	ldur	x9, [x29, #-16]
    42d4:	ldur	x10, [x29, #-24]
    42d8:	str	x8, [x9, x10]
    42dc:	ldur	x8, [x29, #-24]
    42e0:	lsr	x8, x8, #3
    42e4:	cmp	x8, #0x20
    42e8:	b.cs	43c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd68>  // b.hs, b.nlast
    42ec:	ldur	x8, [x29, #-24]
    42f0:	lsr	x8, x8, #3
    42f4:	str	x8, [sp, #208]
    42f8:	ldr	x8, [sp, #208]
    42fc:	lsl	x8, x8, #1
    4300:	mov	x9, #0x8                   	// #8
    4304:	mul	x8, x9, x8
    4308:	ldr	x9, [sp, #64]
    430c:	add	x8, x9, x8
    4310:	str	x8, [sp, #200]
    4314:	ldr	x8, [sp, #200]
    4318:	str	x8, [sp, #192]
    431c:	ldr	x8, [sp, #96]
    4320:	ldr	w10, [x8]
    4324:	ldr	x11, [sp, #208]
    4328:	mov	w12, #0x1                   	// #1
    432c:	lsl	w11, w12, w11
    4330:	and	w10, w10, w11
    4334:	cbnz	w10, 4358 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcf8>
    4338:	ldr	x8, [sp, #208]
    433c:	mov	w9, #0x1                   	// #1
    4340:	lsl	w8, w9, w8
    4344:	ldr	x10, [sp, #96]
    4348:	ldr	w9, [x10]
    434c:	orr	w8, w9, w8
    4350:	str	w8, [x10]
    4354:	b	4394 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd34>
    4358:	ldr	x8, [sp, #200]
    435c:	ldr	x8, [x8, #16]
    4360:	ldr	x9, [sp, #96]
    4364:	ldr	x10, [x9, #24]
    4368:	cmp	x8, x10
    436c:	cset	w11, cs  // cs = hs, nlast
    4370:	and	w11, w11, #0x1
    4374:	mov	w0, w11
    4378:	sxtw	x8, w0
    437c:	cbz	x8, 4390 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd30>
    4380:	ldr	x8, [sp, #200]
    4384:	ldr	x8, [x8, #16]
    4388:	str	x8, [sp, #192]
    438c:	b	4394 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd34>
    4390:	bl	1b10 <abort@plt>
    4394:	ldur	x8, [x29, #-16]
    4398:	ldr	x9, [sp, #200]
    439c:	str	x8, [x9, #16]
    43a0:	ldur	x8, [x29, #-16]
    43a4:	ldr	x9, [sp, #192]
    43a8:	str	x8, [x9, #24]
    43ac:	ldr	x8, [sp, #192]
    43b0:	ldur	x9, [x29, #-16]
    43b4:	str	x8, [x9, #16]
    43b8:	ldr	x8, [sp, #200]
    43bc:	ldur	x9, [x29, #-16]
    43c0:	str	x8, [x9, #24]
    43c4:	b	472c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10cc>
    43c8:	ldur	x8, [x29, #-16]
    43cc:	str	x8, [sp, #184]
    43d0:	ldur	x8, [x29, #-24]
    43d4:	lsr	x8, x8, #8
    43d8:	str	x8, [sp, #160]
    43dc:	ldr	x8, [sp, #160]
    43e0:	cbnz	x8, 43ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd8c>
    43e4:	str	xzr, [sp, #168]
    43e8:	b	44dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe7c>
    43ec:	ldr	x8, [sp, #160]
    43f0:	mov	x9, #0xffff                	// #65535
    43f4:	cmp	x8, x9
    43f8:	b.ls	4408 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xda8>  // b.plast
    43fc:	mov	x8, #0x1f                  	// #31
    4400:	str	x8, [sp, #168]
    4404:	b	44dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe7c>
    4408:	ldr	x8, [sp, #160]
    440c:	str	w8, [sp, #156]
    4410:	ldr	w8, [sp, #156]
    4414:	subs	w8, w8, #0x100
    4418:	mov	x9, #0x10                  	// #16
    441c:	lsr	w8, w8, #16
    4420:	and	w8, w8, #0x8
    4424:	str	w8, [sp, #152]
    4428:	ldr	w8, [sp, #152]
    442c:	ldr	w10, [sp, #156]
    4430:	lsl	w8, w10, w8
    4434:	str	w8, [sp, #156]
    4438:	subs	w8, w8, #0x1, lsl #12
    443c:	mov	x0, x9
    4440:	lsr	w8, w8, w0
    4444:	and	w8, w8, #0x4
    4448:	str	w8, [sp, #148]
    444c:	ldr	w8, [sp, #148]
    4450:	ldr	w10, [sp, #152]
    4454:	add	w8, w10, w8
    4458:	str	w8, [sp, #152]
    445c:	ldr	w8, [sp, #148]
    4460:	ldr	w10, [sp, #156]
    4464:	lsl	w8, w10, w8
    4468:	str	w8, [sp, #156]
    446c:	subs	w8, w8, #0x4, lsl #12
    4470:	lsr	w8, w8, w9
    4474:	and	w8, w8, #0x2
    4478:	str	w8, [sp, #148]
    447c:	ldr	w9, [sp, #152]
    4480:	add	w8, w9, w8
    4484:	str	w8, [sp, #152]
    4488:	ldr	w8, [sp, #152]
    448c:	mov	w9, #0xe                   	// #14
    4490:	subs	w8, w9, w8
    4494:	ldr	w9, [sp, #148]
    4498:	ldr	w10, [sp, #156]
    449c:	lsl	w9, w10, w9
    44a0:	str	w9, [sp, #156]
    44a4:	add	w8, w8, w9, lsr #15
    44a8:	str	w8, [sp, #148]
    44ac:	ldr	w8, [sp, #148]
    44b0:	lsl	w8, w8, #1
    44b4:	mov	w11, w8
    44b8:	ubfx	x11, x11, #0, #32
    44bc:	ldur	x12, [x29, #-24]
    44c0:	ldr	w8, [sp, #148]
    44c4:	add	w8, w8, #0x7
    44c8:	mov	w13, w8
    44cc:	lsr	x12, x12, x13
    44d0:	and	x12, x12, #0x1
    44d4:	add	x11, x11, x12
    44d8:	str	x11, [sp, #168]
    44dc:	ldr	x8, [sp, #168]
    44e0:	mov	x9, #0x8                   	// #8
    44e4:	mul	x8, x9, x8
    44e8:	ldr	x9, [sp, #72]
    44ec:	add	x8, x9, x8
    44f0:	str	x8, [sp, #176]
    44f4:	ldr	x8, [sp, #168]
    44f8:	ldr	x10, [sp, #184]
    44fc:	str	x8, [x10, #56]
    4500:	ldr	x8, [sp, #184]
    4504:	mov	x10, xzr
    4508:	str	x10, [x8, #40]
    450c:	ldr	x8, [sp, #184]
    4510:	str	x10, [x8, #32]
    4514:	ldr	x8, [sp, #96]
    4518:	ldr	w11, [x8, #4]
    451c:	ldr	x10, [sp, #168]
    4520:	mov	w12, #0x1                   	// #1
    4524:	lsl	w10, w12, w10
    4528:	and	w10, w11, w10
    452c:	cbnz	w10, 457c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf1c>
    4530:	ldr	x8, [sp, #168]
    4534:	mov	w9, #0x1                   	// #1
    4538:	lsl	w8, w9, w8
    453c:	ldr	x10, [sp, #96]
    4540:	ldr	w9, [x10, #4]
    4544:	orr	w8, w9, w8
    4548:	str	w8, [x10, #4]
    454c:	ldr	x11, [sp, #184]
    4550:	ldr	x12, [sp, #176]
    4554:	str	x11, [x12]
    4558:	ldr	x11, [sp, #176]
    455c:	ldr	x12, [sp, #184]
    4560:	str	x11, [x12, #48]
    4564:	ldr	x11, [sp, #184]
    4568:	ldr	x12, [sp, #184]
    456c:	str	x11, [x12, #24]
    4570:	ldr	x12, [sp, #184]
    4574:	str	x11, [x12, #16]
    4578:	b	472c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10cc>
    457c:	ldr	x8, [sp, #176]
    4580:	ldr	x8, [x8]
    4584:	str	x8, [sp, #136]
    4588:	ldur	x8, [x29, #-24]
    458c:	ldr	x9, [sp, #168]
    4590:	cmp	x9, #0x1f
    4594:	str	x8, [sp, #24]
    4598:	b.ne	45a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf48>  // b.any
    459c:	mov	x8, xzr
    45a0:	str	x8, [sp, #16]
    45a4:	b	45c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf64>
    45a8:	ldr	x8, [sp, #168]
    45ac:	lsr	x8, x8, #1
    45b0:	add	x8, x8, #0x8
    45b4:	subs	x8, x8, #0x2
    45b8:	mov	x9, #0x3f                  	// #63
    45bc:	subs	x8, x9, x8
    45c0:	str	x8, [sp, #16]
    45c4:	ldr	x8, [sp, #16]
    45c8:	ldr	x9, [sp, #24]
    45cc:	lsl	x8, x9, x8
    45d0:	str	x8, [sp, #128]
    45d4:	ldr	x8, [sp, #136]
    45d8:	ldr	x8, [x8, #8]
    45dc:	and	x8, x8, #0xfffffffffffffffc
    45e0:	ldur	x9, [x29, #-24]
    45e4:	cmp	x8, x9
    45e8:	b.eq	4694 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1034>  // b.none
    45ec:	ldr	x8, [sp, #136]
    45f0:	add	x8, x8, #0x20
    45f4:	ldr	x9, [sp, #128]
    45f8:	lsr	x9, x9, #63
    45fc:	and	x9, x9, #0x1
    4600:	mov	x10, #0x8                   	// #8
    4604:	mul	x9, x10, x9
    4608:	add	x8, x8, x9
    460c:	str	x8, [sp, #120]
    4610:	ldr	x8, [sp, #128]
    4614:	lsl	x8, x8, #1
    4618:	str	x8, [sp, #128]
    461c:	ldr	x8, [sp, #120]
    4620:	ldr	x8, [x8]
    4624:	cbz	x8, 4638 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd8>
    4628:	ldr	x8, [sp, #120]
    462c:	ldr	x8, [x8]
    4630:	str	x8, [sp, #136]
    4634:	b	4690 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1030>
    4638:	ldr	x8, [sp, #120]
    463c:	ldr	x9, [sp, #96]
    4640:	ldr	x10, [x9, #24]
    4644:	cmp	x8, x10
    4648:	cset	w11, cs  // cs = hs, nlast
    464c:	and	w11, w11, #0x1
    4650:	mov	w0, w11
    4654:	sxtw	x8, w0
    4658:	cbz	x8, 468c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    465c:	ldr	x8, [sp, #184]
    4660:	ldr	x9, [sp, #120]
    4664:	str	x8, [x9]
    4668:	ldr	x8, [sp, #136]
    466c:	ldr	x9, [sp, #184]
    4670:	str	x8, [x9, #48]
    4674:	ldr	x8, [sp, #184]
    4678:	ldr	x9, [sp, #184]
    467c:	str	x8, [x9, #24]
    4680:	ldr	x9, [sp, #184]
    4684:	str	x8, [x9, #16]
    4688:	b	472c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10cc>
    468c:	bl	1b10 <abort@plt>
    4690:	b	4728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10c8>
    4694:	ldr	x8, [sp, #136]
    4698:	ldr	x8, [x8, #16]
    469c:	str	x8, [sp, #112]
    46a0:	ldr	x8, [sp, #136]
    46a4:	ldr	x9, [sp, #96]
    46a8:	ldr	x10, [x9, #24]
    46ac:	mov	w11, #0x0                   	// #0
    46b0:	cmp	x8, x10
    46b4:	str	w11, [sp, #12]
    46b8:	b.cc	46d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1074>  // b.lo, b.ul, b.last
    46bc:	ldr	x8, [sp, #112]
    46c0:	ldr	x9, [sp, #96]
    46c4:	ldr	x10, [x9, #24]
    46c8:	cmp	x8, x10
    46cc:	cset	w11, cs  // cs = hs, nlast
    46d0:	str	w11, [sp, #12]
    46d4:	ldr	w8, [sp, #12]
    46d8:	and	w8, w8, #0x1
    46dc:	mov	w0, w8
    46e0:	sxtw	x9, w0
    46e4:	cbz	x9, 4724 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10c4>
    46e8:	ldr	x8, [sp, #184]
    46ec:	ldr	x9, [sp, #112]
    46f0:	str	x8, [x9, #24]
    46f4:	ldr	x9, [sp, #136]
    46f8:	str	x8, [x9, #16]
    46fc:	ldr	x8, [sp, #112]
    4700:	ldr	x9, [sp, #184]
    4704:	str	x8, [x9, #16]
    4708:	ldr	x8, [sp, #136]
    470c:	ldr	x9, [sp, #184]
    4710:	str	x8, [x9, #24]
    4714:	ldr	x8, [sp, #184]
    4718:	mov	x9, xzr
    471c:	str	x9, [x8, #48]
    4720:	b	472c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10cc>
    4724:	bl	1b10 <abort@plt>
    4728:	b	45d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf74>
    472c:	b	4734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    4730:	bl	1b10 <abort@plt>
    4734:	ldr	x8, [sp, #96]
    4738:	ldr	w9, [x8, #864]
    473c:	and	w9, w9, #0x2
    4740:	cbz	w9, 474c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ec>
    4744:	ldr	x0, [sp, #80]
    4748:	bl	1c60 <pthread_mutex_unlock@plt>
    474c:	add	sp, sp, #0x1e0
    4750:	ldr	x28, [sp, #16]
    4754:	ldp	x29, x30, [sp], #32
    4758:	ret
    475c:	sub	sp, sp, #0x40
    4760:	stp	x29, x30, [sp, #48]
    4764:	add	x29, sp, #0x30
    4768:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    476c:	add	x8, x8, #0x600
    4770:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    4774:	add	x9, x9, #0x248
    4778:	add	x0, x9, #0x368
    477c:	ldr	x10, [x8, #8]
    4780:	stur	x8, [x29, #-16]
    4784:	str	x9, [sp, #24]
    4788:	str	x0, [sp, #16]
    478c:	cbnz	x10, 4884 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1224>
    4790:	mov	x8, #0xffffffffffffffff    	// #-1
    4794:	ldur	x9, [x29, #-16]
    4798:	str	x8, [x9, #24]
    479c:	mov	x8, #0x200000              	// #2097152
    47a0:	str	x8, [x9, #32]
    47a4:	mov	w10, #0x7                   	// #7
    47a8:	str	w10, [x9, #40]
    47ac:	mov	x8, #0x5858                	// #22616
    47b0:	movk	x8, #0x5858, lsl #16
    47b4:	stur	x8, [x29, #-8]
    47b8:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    47bc:	add	x0, x0, #0x630
    47c0:	bl	1c50 <pthread_mutex_lock@plt>
    47c4:	ldur	x8, [x29, #-16]
    47c8:	ldr	x9, [x8]
    47cc:	cbnz	x9, 47fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x119c>
    47d0:	ldur	x8, [x29, #-8]
    47d4:	ldur	x9, [x29, #-16]
    47d8:	str	x8, [x9]
    47dc:	ldr	x0, [sp, #16]
    47e0:	mov	x8, xzr
    47e4:	mov	x1, x8
    47e8:	bl	1ad0 <pthread_mutex_init@plt>
    47ec:	ldur	x8, [x29, #-16]
    47f0:	ldr	w10, [x8, #40]
    47f4:	ldr	x9, [sp, #24]
    47f8:	str	w10, [x9, #864]
    47fc:	adrp	x0, 1c000 <memcpy@GLIBC_2.17>
    4800:	add	x0, x0, #0x630
    4804:	bl	1c60 <pthread_mutex_unlock@plt>
    4808:	mov	w8, #0x1e                  	// #30
    480c:	mov	w0, w8
    4810:	str	w8, [sp, #12]
    4814:	bl	1be0 <sysconf@plt>
    4818:	ldur	x9, [x29, #-16]
    481c:	str	x0, [x9, #8]
    4820:	ldr	w0, [sp, #12]
    4824:	bl	1be0 <sysconf@plt>
    4828:	cbz	x0, 483c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11dc>
    482c:	mov	w0, #0x1e                  	// #30
    4830:	bl	1be0 <sysconf@plt>
    4834:	str	x0, [sp]
    4838:	b	4848 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11e8>
    483c:	ldur	x8, [x29, #-16]
    4840:	ldr	x9, [x8, #8]
    4844:	str	x9, [sp]
    4848:	ldr	x8, [sp]
    484c:	ldur	x9, [x29, #-16]
    4850:	str	x8, [x9, #16]
    4854:	ldr	x8, [x9, #16]
    4858:	ldr	x10, [x9, #16]
    485c:	subs	x10, x10, #0x1
    4860:	and	x8, x8, x10
    4864:	cbnz	x8, 4880 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1220>
    4868:	ldur	x8, [x29, #-16]
    486c:	ldr	x9, [x8, #8]
    4870:	ldr	x10, [x8, #8]
    4874:	subs	x10, x10, #0x1
    4878:	and	x9, x9, x10
    487c:	cbz	x9, 4884 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1224>
    4880:	bl	1b10 <abort@plt>
    4884:	mov	w8, wzr
    4888:	mov	w0, w8
    488c:	ldp	x29, x30, [sp, #48]
    4890:	add	sp, sp, #0x40
    4894:	ret
    4898:	sub	sp, sp, #0xd0
    489c:	stp	x29, x30, [sp, #192]
    48a0:	add	x29, sp, #0xc0
    48a4:	mov	w8, wzr
    48a8:	stur	x0, [x29, #-8]
    48ac:	stur	x1, [x29, #-16]
    48b0:	ldur	x9, [x29, #-8]
    48b4:	ldr	w10, [x9, #4]
    48b8:	ldur	x9, [x29, #-8]
    48bc:	ldr	w11, [x9, #4]
    48c0:	subs	w8, w8, w11
    48c4:	and	w8, w10, w8
    48c8:	stur	w8, [x29, #-52]
    48cc:	ldur	w0, [x29, #-52]
    48d0:	bl	1c20 <ffs@plt>
    48d4:	subs	w8, w0, #0x1
    48d8:	mov	w1, w8
    48dc:	sxtw	x9, w1
    48e0:	stur	x9, [x29, #-48]
    48e4:	ldur	x9, [x29, #-8]
    48e8:	add	x9, x9, #0x250
    48ec:	ldur	x12, [x29, #-48]
    48f0:	mov	x13, #0x8                   	// #8
    48f4:	mul	x12, x13, x12
    48f8:	add	x9, x9, x12
    48fc:	ldr	x9, [x9]
    4900:	stur	x9, [x29, #-24]
    4904:	stur	x9, [x29, #-32]
    4908:	ldur	x9, [x29, #-24]
    490c:	ldr	x9, [x9, #8]
    4910:	and	x9, x9, #0xfffffffffffffffc
    4914:	ldur	x12, [x29, #-16]
    4918:	subs	x9, x9, x12
    491c:	stur	x9, [x29, #-40]
    4920:	ldur	x8, [x29, #-24]
    4924:	ldr	x8, [x8, #32]
    4928:	cbz	x8, 493c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12dc>
    492c:	ldur	x8, [x29, #-24]
    4930:	ldr	x8, [x8, #32]
    4934:	str	x8, [sp, #8]
    4938:	b	4948 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12e8>
    493c:	ldur	x8, [x29, #-24]
    4940:	ldr	x8, [x8, #40]
    4944:	str	x8, [sp, #8]
    4948:	ldr	x8, [sp, #8]
    494c:	stur	x8, [x29, #-24]
    4950:	cbz	x8, 4990 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1330>
    4954:	ldur	x8, [x29, #-24]
    4958:	ldr	x8, [x8, #8]
    495c:	and	x8, x8, #0xfffffffffffffffc
    4960:	ldur	x9, [x29, #-16]
    4964:	subs	x8, x8, x9
    4968:	stur	x8, [x29, #-64]
    496c:	ldur	x8, [x29, #-64]
    4970:	ldur	x9, [x29, #-40]
    4974:	cmp	x8, x9
    4978:	b.cs	498c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x132c>  // b.hs, b.nlast
    497c:	ldur	x8, [x29, #-64]
    4980:	stur	x8, [x29, #-40]
    4984:	ldur	x8, [x29, #-24]
    4988:	stur	x8, [x29, #-32]
    498c:	b	4920 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12c0>
    4990:	ldur	x8, [x29, #-32]
    4994:	ldur	x9, [x29, #-8]
    4998:	ldr	x9, [x9, #24]
    499c:	cmp	x8, x9
    49a0:	cset	w10, cs  // cs = hs, nlast
    49a4:	and	w10, w10, #0x1
    49a8:	mov	w0, w10
    49ac:	sxtw	x8, w0
    49b0:	cbz	x8, 4e80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1820>
    49b4:	ldur	x8, [x29, #-32]
    49b8:	ldur	x9, [x29, #-16]
    49bc:	add	x8, x8, x9
    49c0:	stur	x8, [x29, #-72]
    49c4:	ldur	x8, [x29, #-32]
    49c8:	ldur	x9, [x29, #-72]
    49cc:	cmp	x8, x9
    49d0:	cset	w10, cc  // cc = lo, ul, last
    49d4:	and	w10, w10, #0x1
    49d8:	mov	w0, w10
    49dc:	sxtw	x8, w0
    49e0:	cbz	x8, 4e80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1820>
    49e4:	ldur	x8, [x29, #-32]
    49e8:	ldr	x8, [x8, #48]
    49ec:	stur	x8, [x29, #-80]
    49f0:	ldur	x8, [x29, #-32]
    49f4:	ldr	x8, [x8, #24]
    49f8:	ldur	x9, [x29, #-32]
    49fc:	cmp	x8, x9
    4a00:	b.eq	4a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1404>  // b.none
    4a04:	ldur	x8, [x29, #-32]
    4a08:	ldr	x8, [x8, #16]
    4a0c:	str	x8, [sp, #96]
    4a10:	ldur	x8, [x29, #-32]
    4a14:	ldr	x8, [x8, #24]
    4a18:	stur	x8, [x29, #-88]
    4a1c:	ldr	x8, [sp, #96]
    4a20:	ldur	x9, [x29, #-8]
    4a24:	ldr	x9, [x9, #24]
    4a28:	cmp	x8, x9
    4a2c:	cset	w10, cs  // cs = hs, nlast
    4a30:	and	w10, w10, #0x1
    4a34:	mov	w0, w10
    4a38:	sxtw	x8, w0
    4a3c:	cbz	x8, 4a5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13fc>
    4a40:	ldur	x8, [x29, #-88]
    4a44:	ldr	x9, [sp, #96]
    4a48:	str	x8, [x9, #24]
    4a4c:	ldr	x8, [sp, #96]
    4a50:	ldur	x9, [x29, #-88]
    4a54:	str	x8, [x9, #16]
    4a58:	b	4a60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1400>
    4a5c:	bl	1b10 <abort@plt>
    4a60:	b	4b24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14c4>
    4a64:	ldur	x8, [x29, #-32]
    4a68:	add	x9, x8, #0x28
    4a6c:	str	x9, [sp, #88]
    4a70:	ldr	x8, [x8, #40]
    4a74:	stur	x8, [x29, #-88]
    4a78:	cbnz	x8, 4a94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1434>
    4a7c:	ldur	x8, [x29, #-32]
    4a80:	add	x9, x8, #0x20
    4a84:	str	x9, [sp, #88]
    4a88:	ldr	x8, [x8, #32]
    4a8c:	stur	x8, [x29, #-88]
    4a90:	cbz	x8, 4b24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14c4>
    4a94:	ldur	x8, [x29, #-88]
    4a98:	add	x9, x8, #0x28
    4a9c:	str	x9, [sp, #80]
    4aa0:	ldr	x8, [x8, #40]
    4aa4:	mov	w10, #0x1                   	// #1
    4aa8:	str	w10, [sp, #4]
    4aac:	cbnz	x8, 4acc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x146c>
    4ab0:	ldur	x8, [x29, #-88]
    4ab4:	add	x9, x8, #0x20
    4ab8:	str	x9, [sp, #80]
    4abc:	ldr	x8, [x8, #32]
    4ac0:	cmp	x8, #0x0
    4ac4:	cset	w10, ne  // ne = any
    4ac8:	str	w10, [sp, #4]
    4acc:	ldr	w8, [sp, #4]
    4ad0:	tbnz	w8, #0, 4ad8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1478>
    4ad4:	b	4aec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x148c>
    4ad8:	ldr	x8, [sp, #80]
    4adc:	str	x8, [sp, #88]
    4ae0:	ldr	x8, [x8]
    4ae4:	stur	x8, [x29, #-88]
    4ae8:	b	4a94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1434>
    4aec:	ldr	x8, [sp, #88]
    4af0:	ldur	x9, [x29, #-8]
    4af4:	ldr	x9, [x9, #24]
    4af8:	cmp	x8, x9
    4afc:	cset	w10, cs  // cs = hs, nlast
    4b00:	and	w10, w10, #0x1
    4b04:	mov	w0, w10
    4b08:	sxtw	x8, w0
    4b0c:	cbz	x8, 4b20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14c0>
    4b10:	ldr	x8, [sp, #88]
    4b14:	mov	x9, xzr
    4b18:	str	x9, [x8]
    4b1c:	b	4b24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14c4>
    4b20:	bl	1b10 <abort@plt>
    4b24:	ldur	x8, [x29, #-80]
    4b28:	cbz	x8, 4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1678>
    4b2c:	ldur	x8, [x29, #-8]
    4b30:	add	x8, x8, #0x250
    4b34:	ldur	x9, [x29, #-32]
    4b38:	ldr	x9, [x9, #56]
    4b3c:	mov	x10, #0x8                   	// #8
    4b40:	mul	x9, x10, x9
    4b44:	add	x8, x8, x9
    4b48:	str	x8, [sp, #72]
    4b4c:	ldur	x8, [x29, #-32]
    4b50:	ldr	x9, [sp, #72]
    4b54:	ldr	x9, [x9]
    4b58:	cmp	x8, x9
    4b5c:	b.ne	4b94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1534>  // b.any
    4b60:	ldur	x8, [x29, #-88]
    4b64:	ldr	x9, [sp, #72]
    4b68:	str	x8, [x9]
    4b6c:	cbnz	x8, 4b90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1530>
    4b70:	ldur	x8, [x29, #-32]
    4b74:	ldr	x8, [x8, #56]
    4b78:	mov	w9, #0x1                   	// #1
    4b7c:	lsl	w8, w9, w8
    4b80:	ldur	x10, [x29, #-8]
    4b84:	ldr	w9, [x10, #4]
    4b88:	bic	w8, w9, w8
    4b8c:	str	w8, [x10, #4]
    4b90:	b	4bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1590>
    4b94:	ldur	x8, [x29, #-80]
    4b98:	ldur	x9, [x29, #-8]
    4b9c:	ldr	x9, [x9, #24]
    4ba0:	cmp	x8, x9
    4ba4:	cset	w10, cs  // cs = hs, nlast
    4ba8:	and	w10, w10, #0x1
    4bac:	mov	w0, w10
    4bb0:	sxtw	x8, w0
    4bb4:	cbz	x8, 4bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x158c>
    4bb8:	ldur	x8, [x29, #-80]
    4bbc:	ldr	x8, [x8, #32]
    4bc0:	ldur	x9, [x29, #-32]
    4bc4:	cmp	x8, x9
    4bc8:	b.ne	4bdc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x157c>  // b.any
    4bcc:	ldur	x8, [x29, #-88]
    4bd0:	ldur	x9, [x29, #-80]
    4bd4:	str	x8, [x9, #32]
    4bd8:	b	4be8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1588>
    4bdc:	ldur	x8, [x29, #-88]
    4be0:	ldur	x9, [x29, #-80]
    4be4:	str	x8, [x9, #40]
    4be8:	b	4bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1590>
    4bec:	bl	1b10 <abort@plt>
    4bf0:	ldur	x8, [x29, #-88]
    4bf4:	cbz	x8, 4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1678>
    4bf8:	ldur	x8, [x29, #-88]
    4bfc:	ldur	x9, [x29, #-8]
    4c00:	ldr	x9, [x9, #24]
    4c04:	cmp	x8, x9
    4c08:	cset	w10, cs  // cs = hs, nlast
    4c0c:	and	w10, w10, #0x1
    4c10:	mov	w0, w10
    4c14:	sxtw	x8, w0
    4c18:	cbz	x8, 4cd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1674>
    4c1c:	ldur	x8, [x29, #-80]
    4c20:	ldur	x9, [x29, #-88]
    4c24:	str	x8, [x9, #48]
    4c28:	ldur	x8, [x29, #-32]
    4c2c:	ldr	x8, [x8, #32]
    4c30:	str	x8, [sp, #64]
    4c34:	cbz	x8, 4c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x161c>
    4c38:	ldr	x8, [sp, #64]
    4c3c:	ldur	x9, [x29, #-8]
    4c40:	ldr	x9, [x9, #24]
    4c44:	cmp	x8, x9
    4c48:	cset	w10, cs  // cs = hs, nlast
    4c4c:	and	w10, w10, #0x1
    4c50:	mov	w0, w10
    4c54:	sxtw	x8, w0
    4c58:	cbz	x8, 4c78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1618>
    4c5c:	ldr	x8, [sp, #64]
    4c60:	ldur	x9, [x29, #-88]
    4c64:	str	x8, [x9, #32]
    4c68:	ldur	x8, [x29, #-88]
    4c6c:	ldr	x9, [sp, #64]
    4c70:	str	x8, [x9, #48]
    4c74:	b	4c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x161c>
    4c78:	bl	1b10 <abort@plt>
    4c7c:	ldur	x8, [x29, #-32]
    4c80:	ldr	x8, [x8, #40]
    4c84:	str	x8, [sp, #56]
    4c88:	cbz	x8, 4cd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1670>
    4c8c:	ldr	x8, [sp, #56]
    4c90:	ldur	x9, [x29, #-8]
    4c94:	ldr	x9, [x9, #24]
    4c98:	cmp	x8, x9
    4c9c:	cset	w10, cs  // cs = hs, nlast
    4ca0:	and	w10, w10, #0x1
    4ca4:	mov	w0, w10
    4ca8:	sxtw	x8, w0
    4cac:	cbz	x8, 4ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x166c>
    4cb0:	ldr	x8, [sp, #56]
    4cb4:	ldur	x9, [x29, #-88]
    4cb8:	str	x8, [x9, #40]
    4cbc:	ldur	x8, [x29, #-88]
    4cc0:	ldr	x9, [sp, #56]
    4cc4:	str	x8, [x9, #48]
    4cc8:	b	4cd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1670>
    4ccc:	bl	1b10 <abort@plt>
    4cd0:	b	4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1678>
    4cd4:	bl	1b10 <abort@plt>
    4cd8:	ldur	x8, [x29, #-40]
    4cdc:	cmp	x8, #0x20
    4ce0:	b.cs	4d24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x16c4>  // b.hs, b.nlast
    4ce4:	ldur	x8, [x29, #-40]
    4ce8:	ldur	x9, [x29, #-16]
    4cec:	add	x8, x8, x9
    4cf0:	orr	x8, x8, #0x1
    4cf4:	orr	x8, x8, #0x2
    4cf8:	ldur	x9, [x29, #-32]
    4cfc:	str	x8, [x9, #8]
    4d00:	ldur	x8, [x29, #-32]
    4d04:	ldur	x9, [x29, #-40]
    4d08:	ldur	x10, [x29, #-16]
    4d0c:	add	x9, x9, x10
    4d10:	add	x8, x8, x9
    4d14:	ldr	x9, [x8, #8]
    4d18:	orr	x9, x9, #0x1
    4d1c:	str	x9, [x8, #8]
    4d20:	b	4e6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x180c>
    4d24:	ldur	x8, [x29, #-16]
    4d28:	orr	x8, x8, #0x1
    4d2c:	orr	x8, x8, #0x2
    4d30:	ldur	x9, [x29, #-32]
    4d34:	str	x8, [x9, #8]
    4d38:	ldur	x8, [x29, #-40]
    4d3c:	orr	x8, x8, #0x1
    4d40:	ldur	x9, [x29, #-72]
    4d44:	str	x8, [x9, #8]
    4d48:	ldur	x8, [x29, #-40]
    4d4c:	ldur	x9, [x29, #-72]
    4d50:	ldur	x10, [x29, #-40]
    4d54:	str	x8, [x9, x10]
    4d58:	ldur	x8, [x29, #-8]
    4d5c:	ldr	x8, [x8, #8]
    4d60:	str	x8, [sp, #48]
    4d64:	ldr	x8, [sp, #48]
    4d68:	cbz	x8, 4e54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17f4>
    4d6c:	ldur	x8, [x29, #-8]
    4d70:	ldr	x8, [x8, #32]
    4d74:	str	x8, [sp, #40]
    4d78:	ldr	x8, [sp, #48]
    4d7c:	lsr	x8, x8, #3
    4d80:	str	x8, [sp, #32]
    4d84:	ldur	x8, [x29, #-8]
    4d88:	add	x8, x8, #0x40
    4d8c:	ldr	x9, [sp, #32]
    4d90:	lsl	x9, x9, #1
    4d94:	mov	x10, #0x8                   	// #8
    4d98:	mul	x9, x10, x9
    4d9c:	add	x8, x8, x9
    4da0:	str	x8, [sp, #24]
    4da4:	ldr	x8, [sp, #24]
    4da8:	str	x8, [sp, #16]
    4dac:	ldur	x8, [x29, #-8]
    4db0:	ldr	w11, [x8]
    4db4:	ldr	x8, [sp, #32]
    4db8:	mov	w12, #0x1                   	// #1
    4dbc:	lsl	w8, w12, w8
    4dc0:	and	w8, w11, w8
    4dc4:	cbnz	w8, 4de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1788>
    4dc8:	ldr	x8, [sp, #32]
    4dcc:	mov	w9, #0x1                   	// #1
    4dd0:	lsl	w8, w9, w8
    4dd4:	ldur	x10, [x29, #-8]
    4dd8:	ldr	w9, [x10]
    4ddc:	orr	w8, w9, w8
    4de0:	str	w8, [x10]
    4de4:	b	4e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17c4>
    4de8:	ldr	x8, [sp, #24]
    4dec:	ldr	x8, [x8, #16]
    4df0:	ldur	x9, [x29, #-8]
    4df4:	ldr	x9, [x9, #24]
    4df8:	cmp	x8, x9
    4dfc:	cset	w10, cs  // cs = hs, nlast
    4e00:	and	w10, w10, #0x1
    4e04:	mov	w0, w10
    4e08:	sxtw	x8, w0
    4e0c:	cbz	x8, 4e20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17c0>
    4e10:	ldr	x8, [sp, #24]
    4e14:	ldr	x8, [x8, #16]
    4e18:	str	x8, [sp, #16]
    4e1c:	b	4e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x17c4>
    4e20:	bl	1b10 <abort@plt>
    4e24:	ldr	x8, [sp, #40]
    4e28:	ldr	x9, [sp, #24]
    4e2c:	str	x8, [x9, #16]
    4e30:	ldr	x8, [sp, #40]
    4e34:	ldr	x9, [sp, #16]
    4e38:	str	x8, [x9, #24]
    4e3c:	ldr	x8, [sp, #16]
    4e40:	ldr	x9, [sp, #40]
    4e44:	str	x8, [x9, #16]
    4e48:	ldr	x8, [sp, #24]
    4e4c:	ldr	x9, [sp, #40]
    4e50:	str	x8, [x9, #24]
    4e54:	ldur	x8, [x29, #-40]
    4e58:	ldur	x9, [x29, #-8]
    4e5c:	str	x8, [x9, #8]
    4e60:	ldur	x8, [x29, #-72]
    4e64:	ldur	x9, [x29, #-8]
    4e68:	str	x8, [x9, #32]
    4e6c:	ldur	x8, [x29, #-32]
    4e70:	add	x0, x8, #0x10
    4e74:	ldp	x29, x30, [sp, #192]
    4e78:	add	sp, sp, #0xd0
    4e7c:	ret
    4e80:	bl	1b10 <abort@plt>
    4e84:	sub	sp, sp, #0x1a0
    4e88:	stp	x29, x30, [sp, #384]
    4e8c:	str	x28, [sp, #400]
    4e90:	add	x29, sp, #0x180
    4e94:	mov	x8, xzr
    4e98:	stur	x0, [x29, #-16]
    4e9c:	stur	x1, [x29, #-24]
    4ea0:	stur	x8, [x29, #-32]
    4ea4:	ldur	x9, [x29, #-24]
    4ea8:	subs	x8, x8, x9
    4eac:	stur	x8, [x29, #-40]
    4eb0:	ldur	x8, [x29, #-24]
    4eb4:	lsr	x8, x8, #8
    4eb8:	stur	x8, [x29, #-64]
    4ebc:	ldur	x8, [x29, #-64]
    4ec0:	cbnz	x8, 4ecc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x186c>
    4ec4:	stur	xzr, [x29, #-56]
    4ec8:	b	4fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x195c>
    4ecc:	ldur	x8, [x29, #-64]
    4ed0:	mov	x9, #0xffff                	// #65535
    4ed4:	cmp	x8, x9
    4ed8:	b.ls	4ee8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1888>  // b.plast
    4edc:	mov	x8, #0x1f                  	// #31
    4ee0:	stur	x8, [x29, #-56]
    4ee4:	b	4fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x195c>
    4ee8:	ldur	x8, [x29, #-64]
    4eec:	stur	w8, [x29, #-68]
    4ef0:	ldur	w8, [x29, #-68]
    4ef4:	subs	w8, w8, #0x100
    4ef8:	mov	x9, #0x10                  	// #16
    4efc:	lsr	w8, w8, #16
    4f00:	and	w8, w8, #0x8
    4f04:	stur	w8, [x29, #-72]
    4f08:	ldur	w8, [x29, #-72]
    4f0c:	ldur	w10, [x29, #-68]
    4f10:	lsl	w8, w10, w8
    4f14:	stur	w8, [x29, #-68]
    4f18:	subs	w8, w8, #0x1, lsl #12
    4f1c:	mov	x0, x9
    4f20:	lsr	w8, w8, w0
    4f24:	and	w8, w8, #0x4
    4f28:	stur	w8, [x29, #-76]
    4f2c:	ldur	w8, [x29, #-76]
    4f30:	ldur	w10, [x29, #-72]
    4f34:	add	w8, w10, w8
    4f38:	stur	w8, [x29, #-72]
    4f3c:	ldur	w8, [x29, #-76]
    4f40:	ldur	w10, [x29, #-68]
    4f44:	lsl	w8, w10, w8
    4f48:	stur	w8, [x29, #-68]
    4f4c:	subs	w8, w8, #0x4, lsl #12
    4f50:	lsr	w8, w8, w9
    4f54:	and	w8, w8, #0x2
    4f58:	stur	w8, [x29, #-76]
    4f5c:	ldur	w9, [x29, #-72]
    4f60:	add	w8, w9, w8
    4f64:	stur	w8, [x29, #-72]
    4f68:	ldur	w8, [x29, #-72]
    4f6c:	mov	w9, #0xe                   	// #14
    4f70:	subs	w8, w9, w8
    4f74:	ldur	w9, [x29, #-76]
    4f78:	ldur	w10, [x29, #-68]
    4f7c:	lsl	w9, w10, w9
    4f80:	stur	w9, [x29, #-68]
    4f84:	add	w8, w8, w9, lsr #15
    4f88:	stur	w8, [x29, #-76]
    4f8c:	ldur	w8, [x29, #-76]
    4f90:	lsl	w8, w8, #1
    4f94:	mov	w11, w8
    4f98:	ubfx	x11, x11, #0, #32
    4f9c:	ldur	x12, [x29, #-24]
    4fa0:	ldur	w8, [x29, #-76]
    4fa4:	add	w8, w8, #0x7
    4fa8:	mov	w13, w8
    4fac:	lsr	x12, x12, x13
    4fb0:	and	x12, x12, #0x1
    4fb4:	add	x11, x11, x12
    4fb8:	stur	x11, [x29, #-56]
    4fbc:	ldur	x8, [x29, #-16]
    4fc0:	add	x8, x8, #0x250
    4fc4:	ldur	x9, [x29, #-56]
    4fc8:	mov	x10, #0x8                   	// #8
    4fcc:	mul	x9, x10, x9
    4fd0:	add	x8, x8, x9
    4fd4:	ldr	x8, [x8]
    4fd8:	stur	x8, [x29, #-48]
    4fdc:	cbz	x8, 50ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a8c>
    4fe0:	ldur	x8, [x29, #-24]
    4fe4:	ldur	x9, [x29, #-56]
    4fe8:	cmp	x9, #0x1f
    4fec:	str	x8, [sp, #56]
    4ff0:	b.ne	5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x19a0>  // b.any
    4ff4:	mov	x8, xzr
    4ff8:	str	x8, [sp, #48]
    4ffc:	b	501c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x19bc>
    5000:	ldur	x8, [x29, #-56]
    5004:	lsr	x8, x8, #1
    5008:	add	x8, x8, #0x8
    500c:	subs	x8, x8, #0x2
    5010:	mov	x9, #0x3f                  	// #63
    5014:	subs	x8, x9, x8
    5018:	str	x8, [sp, #48]
    501c:	ldr	x8, [sp, #48]
    5020:	ldr	x9, [sp, #56]
    5024:	lsl	x8, x9, x8
    5028:	stur	x8, [x29, #-88]
    502c:	mov	x8, xzr
    5030:	stur	x8, [x29, #-96]
    5034:	ldur	x8, [x29, #-48]
    5038:	ldr	x8, [x8, #8]
    503c:	and	x8, x8, #0xfffffffffffffffc
    5040:	ldur	x9, [x29, #-24]
    5044:	subs	x8, x8, x9
    5048:	stur	x8, [x29, #-112]
    504c:	ldur	x8, [x29, #-112]
    5050:	ldur	x9, [x29, #-40]
    5054:	cmp	x8, x9
    5058:	b.cs	5074 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a14>  // b.hs, b.nlast
    505c:	ldur	x8, [x29, #-48]
    5060:	stur	x8, [x29, #-32]
    5064:	ldur	x8, [x29, #-112]
    5068:	stur	x8, [x29, #-40]
    506c:	cbnz	x8, 5074 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a14>
    5070:	b	50ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a8c>
    5074:	ldur	x8, [x29, #-48]
    5078:	mov	x9, #0x8                   	// #8
    507c:	ldr	x8, [x8, #40]
    5080:	stur	x8, [x29, #-104]
    5084:	ldur	x8, [x29, #-48]
    5088:	add	x8, x8, #0x20
    508c:	ldur	x10, [x29, #-88]
    5090:	lsr	x10, x10, #63
    5094:	and	x10, x10, #0x1
    5098:	mul	x9, x9, x10
    509c:	add	x8, x8, x9
    50a0:	ldr	x8, [x8]
    50a4:	stur	x8, [x29, #-48]
    50a8:	ldur	x8, [x29, #-104]
    50ac:	cbz	x8, 50c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a68>
    50b0:	ldur	x8, [x29, #-104]
    50b4:	ldur	x9, [x29, #-48]
    50b8:	cmp	x8, x9
    50bc:	b.eq	50c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a68>  // b.none
    50c0:	ldur	x8, [x29, #-104]
    50c4:	stur	x8, [x29, #-96]
    50c8:	ldur	x8, [x29, #-48]
    50cc:	cbnz	x8, 50dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a7c>
    50d0:	ldur	x8, [x29, #-96]
    50d4:	stur	x8, [x29, #-48]
    50d8:	b	50ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a8c>
    50dc:	ldur	x8, [x29, #-88]
    50e0:	lsl	x8, x8, #1
    50e4:	stur	x8, [x29, #-88]
    50e8:	b	5034 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x19d4>
    50ec:	ldur	x8, [x29, #-48]
    50f0:	cbnz	x8, 5184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b24>
    50f4:	ldur	x8, [x29, #-32]
    50f8:	cbnz	x8, 5184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b24>
    50fc:	ldur	x8, [x29, #-56]
    5100:	mov	w9, #0x1                   	// #1
    5104:	lsl	w8, w9, w8
    5108:	ldur	x10, [x29, #-56]
    510c:	lsl	w9, w9, w10
    5110:	mov	w10, wzr
    5114:	subs	w9, w10, w9, lsl #1
    5118:	orr	w8, w9, w8, lsl #1
    511c:	ldur	x11, [x29, #-16]
    5120:	ldr	w9, [x11, #4]
    5124:	and	w8, w8, w9
    5128:	stur	w8, [x29, #-116]
    512c:	ldur	w8, [x29, #-116]
    5130:	cbz	w8, 5184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b24>
    5134:	ldur	w8, [x29, #-116]
    5138:	ldur	w9, [x29, #-116]
    513c:	mov	w10, wzr
    5140:	subs	w9, w10, w9
    5144:	and	w8, w8, w9
    5148:	stur	w8, [x29, #-132]
    514c:	ldur	w0, [x29, #-132]
    5150:	bl	1c20 <ffs@plt>
    5154:	subs	w8, w0, #0x1
    5158:	mov	w1, w8
    515c:	sxtw	x11, w1
    5160:	stur	x11, [x29, #-128]
    5164:	ldur	x11, [x29, #-16]
    5168:	add	x11, x11, #0x250
    516c:	ldur	x12, [x29, #-128]
    5170:	mov	x13, #0x8                   	// #8
    5174:	mul	x12, x13, x12
    5178:	add	x11, x11, x12
    517c:	ldr	x11, [x11]
    5180:	stur	x11, [x29, #-48]
    5184:	ldur	x8, [x29, #-48]
    5188:	cbz	x8, 51f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b98>
    518c:	ldur	x8, [x29, #-48]
    5190:	ldr	x8, [x8, #8]
    5194:	and	x8, x8, #0xfffffffffffffffc
    5198:	ldur	x9, [x29, #-24]
    519c:	subs	x8, x8, x9
    51a0:	stur	x8, [x29, #-144]
    51a4:	ldur	x8, [x29, #-144]
    51a8:	ldur	x9, [x29, #-40]
    51ac:	cmp	x8, x9
    51b0:	b.cs	51c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b64>  // b.hs, b.nlast
    51b4:	ldur	x8, [x29, #-144]
    51b8:	stur	x8, [x29, #-40]
    51bc:	ldur	x8, [x29, #-48]
    51c0:	stur	x8, [x29, #-32]
    51c4:	ldur	x8, [x29, #-48]
    51c8:	ldr	x8, [x8, #32]
    51cc:	cbz	x8, 51e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b80>
    51d0:	ldur	x8, [x29, #-48]
    51d4:	ldr	x8, [x8, #32]
    51d8:	str	x8, [sp, #40]
    51dc:	b	51ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b8c>
    51e0:	ldur	x8, [x29, #-48]
    51e4:	ldr	x8, [x8, #40]
    51e8:	str	x8, [sp, #40]
    51ec:	ldr	x8, [sp, #40]
    51f0:	stur	x8, [x29, #-48]
    51f4:	b	5184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b24>
    51f8:	ldur	x8, [x29, #-32]
    51fc:	cbz	x8, 5a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23f0>
    5200:	ldur	x8, [x29, #-40]
    5204:	ldur	x9, [x29, #-16]
    5208:	ldr	x9, [x9, #8]
    520c:	ldur	x10, [x29, #-24]
    5210:	subs	x9, x9, x10
    5214:	cmp	x8, x9
    5218:	b.cs	5a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23f0>  // b.hs, b.nlast
    521c:	ldur	x8, [x29, #-32]
    5220:	ldur	x9, [x29, #-16]
    5224:	ldr	x9, [x9, #24]
    5228:	cmp	x8, x9
    522c:	cset	w10, cs  // cs = hs, nlast
    5230:	and	w10, w10, #0x1
    5234:	mov	w0, w10
    5238:	sxtw	x8, w0
    523c:	cbz	x8, 5a4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23ec>
    5240:	ldur	x8, [x29, #-32]
    5244:	ldur	x9, [x29, #-24]
    5248:	add	x8, x8, x9
    524c:	stur	x8, [x29, #-152]
    5250:	ldur	x8, [x29, #-32]
    5254:	ldur	x9, [x29, #-152]
    5258:	cmp	x8, x9
    525c:	cset	w10, cc  // cc = lo, ul, last
    5260:	and	w10, w10, #0x1
    5264:	mov	w0, w10
    5268:	sxtw	x8, w0
    526c:	cbz	x8, 5a4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23ec>
    5270:	ldur	x8, [x29, #-32]
    5274:	ldr	x8, [x8, #48]
    5278:	stur	x8, [x29, #-160]
    527c:	ldur	x8, [x29, #-32]
    5280:	ldr	x8, [x8, #24]
    5284:	ldur	x9, [x29, #-32]
    5288:	cmp	x8, x9
    528c:	b.eq	52f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c90>  // b.none
    5290:	ldur	x8, [x29, #-32]
    5294:	ldr	x8, [x8, #16]
    5298:	stur	x8, [x29, #-176]
    529c:	ldur	x8, [x29, #-32]
    52a0:	ldr	x8, [x8, #24]
    52a4:	stur	x8, [x29, #-168]
    52a8:	ldur	x8, [x29, #-176]
    52ac:	ldur	x9, [x29, #-16]
    52b0:	ldr	x9, [x9, #24]
    52b4:	cmp	x8, x9
    52b8:	cset	w10, cs  // cs = hs, nlast
    52bc:	and	w10, w10, #0x1
    52c0:	mov	w0, w10
    52c4:	sxtw	x8, w0
    52c8:	cbz	x8, 52e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c88>
    52cc:	ldur	x8, [x29, #-168]
    52d0:	ldur	x9, [x29, #-176]
    52d4:	str	x8, [x9, #24]
    52d8:	ldur	x8, [x29, #-176]
    52dc:	ldur	x9, [x29, #-168]
    52e0:	str	x8, [x9, #16]
    52e4:	b	52ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c8c>
    52e8:	bl	1b10 <abort@plt>
    52ec:	b	53b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d50>
    52f0:	ldur	x8, [x29, #-32]
    52f4:	add	x9, x8, #0x28
    52f8:	stur	x9, [x29, #-184]
    52fc:	ldr	x8, [x8, #40]
    5300:	stur	x8, [x29, #-168]
    5304:	cbnz	x8, 5320 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cc0>
    5308:	ldur	x8, [x29, #-32]
    530c:	add	x9, x8, #0x20
    5310:	stur	x9, [x29, #-184]
    5314:	ldr	x8, [x8, #32]
    5318:	stur	x8, [x29, #-168]
    531c:	cbz	x8, 53b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d50>
    5320:	ldur	x8, [x29, #-168]
    5324:	add	x9, x8, #0x28
    5328:	str	x9, [sp, #192]
    532c:	ldr	x8, [x8, #40]
    5330:	mov	w10, #0x1                   	// #1
    5334:	str	w10, [sp, #36]
    5338:	cbnz	x8, 5358 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cf8>
    533c:	ldur	x8, [x29, #-168]
    5340:	add	x9, x8, #0x20
    5344:	str	x9, [sp, #192]
    5348:	ldr	x8, [x8, #32]
    534c:	cmp	x8, #0x0
    5350:	cset	w10, ne  // ne = any
    5354:	str	w10, [sp, #36]
    5358:	ldr	w8, [sp, #36]
    535c:	tbnz	w8, #0, 5364 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d04>
    5360:	b	5378 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d18>
    5364:	ldr	x8, [sp, #192]
    5368:	stur	x8, [x29, #-184]
    536c:	ldr	x8, [x8]
    5370:	stur	x8, [x29, #-168]
    5374:	b	5320 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1cc0>
    5378:	ldur	x8, [x29, #-184]
    537c:	ldur	x9, [x29, #-16]
    5380:	ldr	x9, [x9, #24]
    5384:	cmp	x8, x9
    5388:	cset	w10, cs  // cs = hs, nlast
    538c:	and	w10, w10, #0x1
    5390:	mov	w0, w10
    5394:	sxtw	x8, w0
    5398:	cbz	x8, 53ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d4c>
    539c:	ldur	x8, [x29, #-184]
    53a0:	mov	x9, xzr
    53a4:	str	x9, [x8]
    53a8:	b	53b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1d50>
    53ac:	bl	1b10 <abort@plt>
    53b0:	ldur	x8, [x29, #-160]
    53b4:	cbz	x8, 5564 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f04>
    53b8:	ldur	x8, [x29, #-16]
    53bc:	add	x8, x8, #0x250
    53c0:	ldur	x9, [x29, #-32]
    53c4:	ldr	x9, [x9, #56]
    53c8:	mov	x10, #0x8                   	// #8
    53cc:	mul	x9, x10, x9
    53d0:	add	x8, x8, x9
    53d4:	str	x8, [sp, #184]
    53d8:	ldur	x8, [x29, #-32]
    53dc:	ldr	x9, [sp, #184]
    53e0:	ldr	x9, [x9]
    53e4:	cmp	x8, x9
    53e8:	b.ne	5420 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1dc0>  // b.any
    53ec:	ldur	x8, [x29, #-168]
    53f0:	ldr	x9, [sp, #184]
    53f4:	str	x8, [x9]
    53f8:	cbnz	x8, 541c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1dbc>
    53fc:	ldur	x8, [x29, #-32]
    5400:	ldr	x8, [x8, #56]
    5404:	mov	w9, #0x1                   	// #1
    5408:	lsl	w8, w9, w8
    540c:	ldur	x10, [x29, #-16]
    5410:	ldr	w9, [x10, #4]
    5414:	bic	w8, w9, w8
    5418:	str	w8, [x10, #4]
    541c:	b	547c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e1c>
    5420:	ldur	x8, [x29, #-160]
    5424:	ldur	x9, [x29, #-16]
    5428:	ldr	x9, [x9, #24]
    542c:	cmp	x8, x9
    5430:	cset	w10, cs  // cs = hs, nlast
    5434:	and	w10, w10, #0x1
    5438:	mov	w0, w10
    543c:	sxtw	x8, w0
    5440:	cbz	x8, 5478 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e18>
    5444:	ldur	x8, [x29, #-160]
    5448:	ldr	x8, [x8, #32]
    544c:	ldur	x9, [x29, #-32]
    5450:	cmp	x8, x9
    5454:	b.ne	5468 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e08>  // b.any
    5458:	ldur	x8, [x29, #-168]
    545c:	ldur	x9, [x29, #-160]
    5460:	str	x8, [x9, #32]
    5464:	b	5474 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e14>
    5468:	ldur	x8, [x29, #-168]
    546c:	ldur	x9, [x29, #-160]
    5470:	str	x8, [x9, #40]
    5474:	b	547c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e1c>
    5478:	bl	1b10 <abort@plt>
    547c:	ldur	x8, [x29, #-168]
    5480:	cbz	x8, 5564 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f04>
    5484:	ldur	x8, [x29, #-168]
    5488:	ldur	x9, [x29, #-16]
    548c:	ldr	x9, [x9, #24]
    5490:	cmp	x8, x9
    5494:	cset	w10, cs  // cs = hs, nlast
    5498:	and	w10, w10, #0x1
    549c:	mov	w0, w10
    54a0:	sxtw	x8, w0
    54a4:	cbz	x8, 5560 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f00>
    54a8:	ldur	x8, [x29, #-160]
    54ac:	ldur	x9, [x29, #-168]
    54b0:	str	x8, [x9, #48]
    54b4:	ldur	x8, [x29, #-32]
    54b8:	ldr	x8, [x8, #32]
    54bc:	str	x8, [sp, #176]
    54c0:	cbz	x8, 5508 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ea8>
    54c4:	ldr	x8, [sp, #176]
    54c8:	ldur	x9, [x29, #-16]
    54cc:	ldr	x9, [x9, #24]
    54d0:	cmp	x8, x9
    54d4:	cset	w10, cs  // cs = hs, nlast
    54d8:	and	w10, w10, #0x1
    54dc:	mov	w0, w10
    54e0:	sxtw	x8, w0
    54e4:	cbz	x8, 5504 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ea4>
    54e8:	ldr	x8, [sp, #176]
    54ec:	ldur	x9, [x29, #-168]
    54f0:	str	x8, [x9, #32]
    54f4:	ldur	x8, [x29, #-168]
    54f8:	ldr	x9, [sp, #176]
    54fc:	str	x8, [x9, #48]
    5500:	b	5508 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ea8>
    5504:	bl	1b10 <abort@plt>
    5508:	ldur	x8, [x29, #-32]
    550c:	ldr	x8, [x8, #40]
    5510:	str	x8, [sp, #168]
    5514:	cbz	x8, 555c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1efc>
    5518:	ldr	x8, [sp, #168]
    551c:	ldur	x9, [x29, #-16]
    5520:	ldr	x9, [x9, #24]
    5524:	cmp	x8, x9
    5528:	cset	w10, cs  // cs = hs, nlast
    552c:	and	w10, w10, #0x1
    5530:	mov	w0, w10
    5534:	sxtw	x8, w0
    5538:	cbz	x8, 5558 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1ef8>
    553c:	ldr	x8, [sp, #168]
    5540:	ldur	x9, [x29, #-168]
    5544:	str	x8, [x9, #40]
    5548:	ldur	x8, [x29, #-168]
    554c:	ldr	x9, [sp, #168]
    5550:	str	x8, [x9, #48]
    5554:	b	555c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1efc>
    5558:	bl	1b10 <abort@plt>
    555c:	b	5564 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f04>
    5560:	bl	1b10 <abort@plt>
    5564:	ldur	x8, [x29, #-40]
    5568:	cmp	x8, #0x20
    556c:	b.cs	55b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f50>  // b.hs, b.nlast
    5570:	ldur	x8, [x29, #-40]
    5574:	ldur	x9, [x29, #-24]
    5578:	add	x8, x8, x9
    557c:	orr	x8, x8, #0x1
    5580:	orr	x8, x8, #0x2
    5584:	ldur	x9, [x29, #-32]
    5588:	str	x8, [x9, #8]
    558c:	ldur	x8, [x29, #-32]
    5590:	ldur	x9, [x29, #-40]
    5594:	ldur	x10, [x29, #-24]
    5598:	add	x9, x9, x10
    559c:	add	x8, x8, x9
    55a0:	ldr	x9, [x8, #8]
    55a4:	orr	x9, x9, #0x1
    55a8:	str	x9, [x8, #8]
    55ac:	b	5a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23dc>
    55b0:	ldur	x8, [x29, #-24]
    55b4:	orr	x8, x8, #0x1
    55b8:	orr	x8, x8, #0x2
    55bc:	ldur	x9, [x29, #-32]
    55c0:	str	x8, [x9, #8]
    55c4:	ldur	x8, [x29, #-40]
    55c8:	orr	x8, x8, #0x1
    55cc:	ldur	x9, [x29, #-152]
    55d0:	str	x8, [x9, #8]
    55d4:	ldur	x8, [x29, #-40]
    55d8:	ldur	x9, [x29, #-152]
    55dc:	ldur	x10, [x29, #-40]
    55e0:	str	x8, [x9, x10]
    55e4:	ldur	x8, [x29, #-40]
    55e8:	lsr	x8, x8, #3
    55ec:	cmp	x8, #0x20
    55f0:	b.cs	56d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2074>  // b.hs, b.nlast
    55f4:	ldur	x8, [x29, #-40]
    55f8:	lsr	x8, x8, #3
    55fc:	str	x8, [sp, #160]
    5600:	ldur	x8, [x29, #-16]
    5604:	add	x8, x8, #0x40
    5608:	ldr	x9, [sp, #160]
    560c:	lsl	x9, x9, #1
    5610:	mov	x10, #0x8                   	// #8
    5614:	mul	x9, x10, x9
    5618:	add	x8, x8, x9
    561c:	str	x8, [sp, #152]
    5620:	ldr	x8, [sp, #152]
    5624:	str	x8, [sp, #144]
    5628:	ldur	x8, [x29, #-16]
    562c:	ldr	w11, [x8]
    5630:	ldr	x8, [sp, #160]
    5634:	mov	w12, #0x1                   	// #1
    5638:	lsl	w8, w12, w8
    563c:	and	w8, w11, w8
    5640:	cbnz	w8, 5664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2004>
    5644:	ldr	x8, [sp, #160]
    5648:	mov	w9, #0x1                   	// #1
    564c:	lsl	w8, w9, w8
    5650:	ldur	x10, [x29, #-16]
    5654:	ldr	w9, [x10]
    5658:	orr	w8, w9, w8
    565c:	str	w8, [x10]
    5660:	b	56a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2040>
    5664:	ldr	x8, [sp, #152]
    5668:	ldr	x8, [x8, #16]
    566c:	ldur	x9, [x29, #-16]
    5670:	ldr	x9, [x9, #24]
    5674:	cmp	x8, x9
    5678:	cset	w10, cs  // cs = hs, nlast
    567c:	and	w10, w10, #0x1
    5680:	mov	w0, w10
    5684:	sxtw	x8, w0
    5688:	cbz	x8, 569c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x203c>
    568c:	ldr	x8, [sp, #152]
    5690:	ldr	x8, [x8, #16]
    5694:	str	x8, [sp, #144]
    5698:	b	56a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2040>
    569c:	bl	1b10 <abort@plt>
    56a0:	ldur	x8, [x29, #-152]
    56a4:	ldr	x9, [sp, #152]
    56a8:	str	x8, [x9, #16]
    56ac:	ldur	x8, [x29, #-152]
    56b0:	ldr	x9, [sp, #144]
    56b4:	str	x8, [x9, #24]
    56b8:	ldr	x8, [sp, #144]
    56bc:	ldur	x9, [x29, #-152]
    56c0:	str	x8, [x9, #16]
    56c4:	ldr	x8, [sp, #152]
    56c8:	ldur	x9, [x29, #-152]
    56cc:	str	x8, [x9, #24]
    56d0:	b	5a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23dc>
    56d4:	ldur	x8, [x29, #-152]
    56d8:	str	x8, [sp, #136]
    56dc:	ldur	x8, [x29, #-40]
    56e0:	lsr	x8, x8, #8
    56e4:	str	x8, [sp, #112]
    56e8:	ldr	x8, [sp, #112]
    56ec:	cbnz	x8, 56f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2098>
    56f0:	str	xzr, [sp, #120]
    56f4:	b	57e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2188>
    56f8:	ldr	x8, [sp, #112]
    56fc:	mov	x9, #0xffff                	// #65535
    5700:	cmp	x8, x9
    5704:	b.ls	5714 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20b4>  // b.plast
    5708:	mov	x8, #0x1f                  	// #31
    570c:	str	x8, [sp, #120]
    5710:	b	57e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2188>
    5714:	ldr	x8, [sp, #112]
    5718:	str	w8, [sp, #108]
    571c:	ldr	w8, [sp, #108]
    5720:	subs	w8, w8, #0x100
    5724:	mov	x9, #0x10                  	// #16
    5728:	lsr	w8, w8, #16
    572c:	and	w8, w8, #0x8
    5730:	str	w8, [sp, #104]
    5734:	ldr	w8, [sp, #104]
    5738:	ldr	w10, [sp, #108]
    573c:	lsl	w8, w10, w8
    5740:	str	w8, [sp, #108]
    5744:	subs	w8, w8, #0x1, lsl #12
    5748:	mov	x0, x9
    574c:	lsr	w8, w8, w0
    5750:	and	w8, w8, #0x4
    5754:	str	w8, [sp, #100]
    5758:	ldr	w8, [sp, #100]
    575c:	ldr	w10, [sp, #104]
    5760:	add	w8, w10, w8
    5764:	str	w8, [sp, #104]
    5768:	ldr	w8, [sp, #100]
    576c:	ldr	w10, [sp, #108]
    5770:	lsl	w8, w10, w8
    5774:	str	w8, [sp, #108]
    5778:	subs	w8, w8, #0x4, lsl #12
    577c:	lsr	w8, w8, w9
    5780:	and	w8, w8, #0x2
    5784:	str	w8, [sp, #100]
    5788:	ldr	w9, [sp, #104]
    578c:	add	w8, w9, w8
    5790:	str	w8, [sp, #104]
    5794:	ldr	w8, [sp, #104]
    5798:	mov	w9, #0xe                   	// #14
    579c:	subs	w8, w9, w8
    57a0:	ldr	w9, [sp, #100]
    57a4:	ldr	w10, [sp, #108]
    57a8:	lsl	w9, w10, w9
    57ac:	str	w9, [sp, #108]
    57b0:	add	w8, w8, w9, lsr #15
    57b4:	str	w8, [sp, #100]
    57b8:	ldr	w8, [sp, #100]
    57bc:	lsl	w8, w8, #1
    57c0:	mov	w11, w8
    57c4:	ubfx	x11, x11, #0, #32
    57c8:	ldur	x12, [x29, #-40]
    57cc:	ldr	w8, [sp, #100]
    57d0:	add	w8, w8, #0x7
    57d4:	mov	w13, w8
    57d8:	lsr	x12, x12, x13
    57dc:	and	x12, x12, #0x1
    57e0:	add	x11, x11, x12
    57e4:	str	x11, [sp, #120]
    57e8:	ldur	x8, [x29, #-16]
    57ec:	add	x8, x8, #0x250
    57f0:	ldr	x9, [sp, #120]
    57f4:	mov	x10, #0x8                   	// #8
    57f8:	mul	x9, x10, x9
    57fc:	add	x8, x8, x9
    5800:	str	x8, [sp, #128]
    5804:	ldr	x8, [sp, #120]
    5808:	ldr	x9, [sp, #136]
    580c:	str	x8, [x9, #56]
    5810:	ldr	x8, [sp, #136]
    5814:	mov	x9, xzr
    5818:	str	x9, [x8, #40]
    581c:	ldr	x8, [sp, #136]
    5820:	str	x9, [x8, #32]
    5824:	ldur	x8, [x29, #-16]
    5828:	ldr	w11, [x8, #4]
    582c:	ldr	x8, [sp, #120]
    5830:	mov	w12, #0x1                   	// #1
    5834:	lsl	w8, w12, w8
    5838:	and	w8, w11, w8
    583c:	cbnz	w8, 588c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x222c>
    5840:	ldr	x8, [sp, #120]
    5844:	mov	w9, #0x1                   	// #1
    5848:	lsl	w8, w9, w8
    584c:	ldur	x10, [x29, #-16]
    5850:	ldr	w9, [x10, #4]
    5854:	orr	w8, w9, w8
    5858:	str	w8, [x10, #4]
    585c:	ldr	x10, [sp, #136]
    5860:	ldr	x11, [sp, #128]
    5864:	str	x10, [x11]
    5868:	ldr	x10, [sp, #128]
    586c:	ldr	x11, [sp, #136]
    5870:	str	x10, [x11, #48]
    5874:	ldr	x10, [sp, #136]
    5878:	ldr	x11, [sp, #136]
    587c:	str	x10, [x11, #24]
    5880:	ldr	x11, [sp, #136]
    5884:	str	x10, [x11, #16]
    5888:	b	5a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23dc>
    588c:	ldr	x8, [sp, #128]
    5890:	ldr	x8, [x8]
    5894:	str	x8, [sp, #88]
    5898:	ldur	x8, [x29, #-40]
    589c:	ldr	x9, [sp, #120]
    58a0:	cmp	x9, #0x1f
    58a4:	str	x8, [sp, #24]
    58a8:	b.ne	58b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2258>  // b.any
    58ac:	mov	x8, xzr
    58b0:	str	x8, [sp, #16]
    58b4:	b	58d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2274>
    58b8:	ldr	x8, [sp, #120]
    58bc:	lsr	x8, x8, #1
    58c0:	add	x8, x8, #0x8
    58c4:	subs	x8, x8, #0x2
    58c8:	mov	x9, #0x3f                  	// #63
    58cc:	subs	x8, x9, x8
    58d0:	str	x8, [sp, #16]
    58d4:	ldr	x8, [sp, #16]
    58d8:	ldr	x9, [sp, #24]
    58dc:	lsl	x8, x9, x8
    58e0:	str	x8, [sp, #80]
    58e4:	ldr	x8, [sp, #88]
    58e8:	ldr	x8, [x8, #8]
    58ec:	and	x8, x8, #0xfffffffffffffffc
    58f0:	ldur	x9, [x29, #-40]
    58f4:	cmp	x8, x9
    58f8:	b.eq	59a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2344>  // b.none
    58fc:	ldr	x8, [sp, #88]
    5900:	add	x8, x8, #0x20
    5904:	ldr	x9, [sp, #80]
    5908:	lsr	x9, x9, #63
    590c:	and	x9, x9, #0x1
    5910:	mov	x10, #0x8                   	// #8
    5914:	mul	x9, x10, x9
    5918:	add	x8, x8, x9
    591c:	str	x8, [sp, #72]
    5920:	ldr	x8, [sp, #80]
    5924:	lsl	x8, x8, #1
    5928:	str	x8, [sp, #80]
    592c:	ldr	x8, [sp, #72]
    5930:	ldr	x8, [x8]
    5934:	cbz	x8, 5948 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x22e8>
    5938:	ldr	x8, [sp, #72]
    593c:	ldr	x8, [x8]
    5940:	str	x8, [sp, #88]
    5944:	b	59a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2340>
    5948:	ldr	x8, [sp, #72]
    594c:	ldur	x9, [x29, #-16]
    5950:	ldr	x9, [x9, #24]
    5954:	cmp	x8, x9
    5958:	cset	w10, cs  // cs = hs, nlast
    595c:	and	w10, w10, #0x1
    5960:	mov	w0, w10
    5964:	sxtw	x8, w0
    5968:	cbz	x8, 599c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x233c>
    596c:	ldr	x8, [sp, #136]
    5970:	ldr	x9, [sp, #72]
    5974:	str	x8, [x9]
    5978:	ldr	x8, [sp, #88]
    597c:	ldr	x9, [sp, #136]
    5980:	str	x8, [x9, #48]
    5984:	ldr	x8, [sp, #136]
    5988:	ldr	x9, [sp, #136]
    598c:	str	x8, [x9, #24]
    5990:	ldr	x9, [sp, #136]
    5994:	str	x8, [x9, #16]
    5998:	b	5a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23dc>
    599c:	bl	1b10 <abort@plt>
    59a0:	b	5a38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23d8>
    59a4:	ldr	x8, [sp, #88]
    59a8:	ldr	x8, [x8, #16]
    59ac:	str	x8, [sp, #64]
    59b0:	ldr	x8, [sp, #88]
    59b4:	ldur	x9, [x29, #-16]
    59b8:	ldr	x9, [x9, #24]
    59bc:	mov	w10, #0x0                   	// #0
    59c0:	cmp	x8, x9
    59c4:	str	w10, [sp, #12]
    59c8:	b.cc	59e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2384>  // b.lo, b.ul, b.last
    59cc:	ldr	x8, [sp, #64]
    59d0:	ldur	x9, [x29, #-16]
    59d4:	ldr	x9, [x9, #24]
    59d8:	cmp	x8, x9
    59dc:	cset	w10, cs  // cs = hs, nlast
    59e0:	str	w10, [sp, #12]
    59e4:	ldr	w8, [sp, #12]
    59e8:	and	w8, w8, #0x1
    59ec:	mov	w0, w8
    59f0:	sxtw	x9, w0
    59f4:	cbz	x9, 5a34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23d4>
    59f8:	ldr	x8, [sp, #136]
    59fc:	ldr	x9, [sp, #64]
    5a00:	str	x8, [x9, #24]
    5a04:	ldr	x9, [sp, #88]
    5a08:	str	x8, [x9, #16]
    5a0c:	ldr	x8, [sp, #64]
    5a10:	ldr	x9, [sp, #136]
    5a14:	str	x8, [x9, #16]
    5a18:	ldr	x8, [sp, #88]
    5a1c:	ldr	x9, [sp, #136]
    5a20:	str	x8, [x9, #24]
    5a24:	ldr	x8, [sp, #136]
    5a28:	mov	x9, xzr
    5a2c:	str	x9, [x8, #48]
    5a30:	b	5a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23dc>
    5a34:	bl	1b10 <abort@plt>
    5a38:	b	58e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2284>
    5a3c:	ldur	x8, [x29, #-32]
    5a40:	add	x8, x8, #0x10
    5a44:	stur	x8, [x29, #-8]
    5a48:	b	5a58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23f8>
    5a4c:	bl	1b10 <abort@plt>
    5a50:	mov	x8, xzr
    5a54:	stur	x8, [x29, #-8]
    5a58:	ldur	x0, [x29, #-8]
    5a5c:	ldr	x28, [sp, #400]
    5a60:	ldp	x29, x30, [sp, #384]
    5a64:	add	sp, sp, #0x1a0
    5a68:	ret
    5a6c:	sub	sp, sp, #0xa0
    5a70:	stp	x29, x30, [sp, #144]
    5a74:	add	x29, sp, #0x90
    5a78:	mov	x8, #0xffffffffffffffff    	// #-1
    5a7c:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    5a80:	add	x9, x9, #0x600
    5a84:	stur	x0, [x29, #-16]
    5a88:	stur	x1, [x29, #-24]
    5a8c:	stur	x8, [x29, #-32]
    5a90:	stur	xzr, [x29, #-40]
    5a94:	stur	wzr, [x29, #-44]
    5a98:	str	x9, [sp, #8]
    5a9c:	bl	475c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10fc>
    5aa0:	ldur	x8, [x29, #-16]
    5aa4:	ldr	w10, [x8, #864]
    5aa8:	mov	w8, w10
    5aac:	and	x8, x8, #0x1
    5ab0:	cbz	x8, 5aec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x248c>
    5ab4:	ldur	x8, [x29, #-24]
    5ab8:	ldr	x9, [sp, #8]
    5abc:	ldr	x10, [x9, #24]
    5ac0:	cmp	x8, x10
    5ac4:	b.cc	5aec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x248c>  // b.lo, b.ul, b.last
    5ac8:	ldur	x0, [x29, #-16]
    5acc:	ldur	x1, [x29, #-24]
    5ad0:	bl	5fcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x296c>
    5ad4:	stur	x0, [x29, #-56]
    5ad8:	ldur	x8, [x29, #-56]
    5adc:	cbz	x8, 5aec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x248c>
    5ae0:	ldur	x8, [x29, #-56]
    5ae4:	stur	x8, [x29, #-8]
    5ae8:	b	5fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x295c>
    5aec:	ldur	x8, [x29, #-32]
    5af0:	mov	x9, #0xffffffffffffffff    	// #-1
    5af4:	cmp	x8, x9
    5af8:	b.ne	5b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2528>  // b.any
    5afc:	ldur	x8, [x29, #-24]
    5b00:	add	x8, x8, #0x48
    5b04:	add	x8, x8, #0x1
    5b08:	stur	x8, [x29, #-64]
    5b0c:	ldur	x8, [x29, #-64]
    5b10:	ldr	x9, [sp, #8]
    5b14:	ldr	x10, [x9, #16]
    5b18:	add	x8, x8, x10
    5b1c:	ldr	x10, [x9, #16]
    5b20:	subs	x10, x10, #0x1
    5b24:	bic	x8, x8, x10
    5b28:	str	x8, [sp, #72]
    5b2c:	ldr	x8, [sp, #72]
    5b30:	ldur	x10, [x29, #-24]
    5b34:	cmp	x8, x10
    5b38:	b.ls	5b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2528>  // b.plast
    5b3c:	ldr	x1, [sp, #72]
    5b40:	mov	x8, xzr
    5b44:	mov	x0, x8
    5b48:	mov	w2, #0x3                   	// #3
    5b4c:	mov	w3, #0x22                  	// #34
    5b50:	mov	w4, #0xffffffff            	// #-1
    5b54:	mov	x5, x8
    5b58:	bl	6178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b18>
    5b5c:	str	x0, [sp, #64]
    5b60:	ldr	x8, [sp, #64]
    5b64:	mov	x9, #0xffffffffffffffff    	// #-1
    5b68:	cmp	x8, x9
    5b6c:	b.eq	5b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2528>  // b.none
    5b70:	ldr	x8, [sp, #64]
    5b74:	stur	x8, [x29, #-32]
    5b78:	ldr	x8, [sp, #72]
    5b7c:	stur	x8, [x29, #-40]
    5b80:	mov	w9, #0x1                   	// #1
    5b84:	stur	w9, [x29, #-44]
    5b88:	ldur	x8, [x29, #-32]
    5b8c:	mov	x9, #0xffffffffffffffff    	// #-1
    5b90:	cmp	x8, x9
    5b94:	b.eq	5fa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.none
    5b98:	ldur	x8, [x29, #-40]
    5b9c:	ldur	x9, [x29, #-16]
    5ba0:	ldr	x10, [x9, #848]
    5ba4:	add	x8, x10, x8
    5ba8:	str	x8, [x9, #848]
    5bac:	ldur	x9, [x29, #-16]
    5bb0:	ldr	x9, [x9, #856]
    5bb4:	cmp	x8, x9
    5bb8:	b.ls	5bcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x256c>  // b.plast
    5bbc:	ldur	x8, [x29, #-16]
    5bc0:	ldr	x8, [x8, #848]
    5bc4:	ldur	x9, [x29, #-16]
    5bc8:	str	x8, [x9, #856]
    5bcc:	ldur	x8, [x29, #-16]
    5bd0:	ldr	x8, [x8, #40]
    5bd4:	cbnz	x8, 5d08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26a8>
    5bd8:	ldur	x8, [x29, #-32]
    5bdc:	ldur	x9, [x29, #-16]
    5be0:	str	x8, [x9, #24]
    5be4:	ldur	x9, [x29, #-16]
    5be8:	str	x8, [x9, #920]
    5bec:	ldur	x8, [x29, #-40]
    5bf0:	ldur	x9, [x29, #-16]
    5bf4:	str	x8, [x9, #928]
    5bf8:	ldur	w10, [x29, #-44]
    5bfc:	mov	w8, w10
    5c00:	cmp	x8, #0x1
    5c04:	b.eq	5c0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25ac>  // b.none
    5c08:	bl	1b10 <abort@plt>
    5c0c:	ldur	x8, [x29, #-16]
    5c10:	ldr	x8, [x8, #920]
    5c14:	ldur	x9, [x29, #-16]
    5c18:	ldr	x9, [x9, #928]
    5c1c:	add	x8, x8, x9
    5c20:	ldur	x8, [x8, #-8]
    5c24:	ldur	x9, [x29, #-16]
    5c28:	str	x8, [x9, #944]
    5c2c:	ldur	x8, [x29, #-16]
    5c30:	ldr	x8, [x8, #920]
    5c34:	ldur	x9, [x29, #-16]
    5c38:	ldr	x9, [x9, #944]
    5c3c:	add	x8, x8, x9
    5c40:	ldur	x9, [x29, #-16]
    5c44:	ldr	x9, [x9, #928]
    5c48:	add	x8, x8, x9
    5c4c:	ldur	x8, [x8, #-8]
    5c50:	ldur	x9, [x29, #-16]
    5c54:	ldr	x9, [x9, #944]
    5c58:	cmp	x8, x9
    5c5c:	b.eq	5c64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2604>  // b.none
    5c60:	bl	1b10 <abort@plt>
    5c64:	ldur	x8, [x29, #-16]
    5c68:	ldr	x8, [x8, #920]
    5c6c:	ldur	x9, [x29, #-16]
    5c70:	ldr	x9, [x9, #928]
    5c74:	add	x8, x8, x9
    5c78:	stur	xzr, [x8, #-8]
    5c7c:	ldr	x8, [sp, #8]
    5c80:	ldr	x9, [x8]
    5c84:	ldur	x10, [x29, #-16]
    5c88:	str	x9, [x10, #56]
    5c8c:	ldur	x0, [x29, #-16]
    5c90:	bl	6348 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ce8>
    5c94:	ldur	x8, [x29, #-16]
    5c98:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    5c9c:	add	x9, x9, #0x248
    5ca0:	cmp	x8, x9
    5ca4:	b.ne	5cc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2660>  // b.any
    5ca8:	ldur	x0, [x29, #-16]
    5cac:	ldur	x1, [x29, #-32]
    5cb0:	ldur	x8, [x29, #-40]
    5cb4:	subs	x2, x8, #0x48
    5cb8:	bl	63ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4c>
    5cbc:	b	5d04 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26a4>
    5cc0:	ldur	x8, [x29, #-16]
    5cc4:	mov	x9, #0xfffffffffffffff0    	// #-16
    5cc8:	add	x8, x8, x9
    5ccc:	ldur	x9, [x29, #-16]
    5cd0:	ldur	x9, [x9, #-8]
    5cd4:	and	x9, x9, #0xfffffffffffffffc
    5cd8:	add	x8, x8, x9
    5cdc:	str	x8, [sp, #56]
    5ce0:	ldur	x0, [x29, #-16]
    5ce4:	ldr	x1, [sp, #56]
    5ce8:	ldur	x8, [x29, #-32]
    5cec:	ldur	x9, [x29, #-40]
    5cf0:	add	x8, x8, x9
    5cf4:	ldr	x9, [sp, #56]
    5cf8:	subs	x8, x8, x9
    5cfc:	subs	x2, x8, #0x48
    5d00:	bl	63ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4c>
    5d04:	b	5f24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28c4>
    5d08:	ldur	x8, [x29, #-16]
    5d0c:	add	x8, x8, #0x398
    5d10:	str	x8, [sp, #48]
    5d14:	ldr	x8, [sp, #48]
    5d18:	mov	w9, #0x0                   	// #0
    5d1c:	str	w9, [sp, #4]
    5d20:	cbz	x8, 5d48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26e8>
    5d24:	ldur	x8, [x29, #-32]
    5d28:	ldr	x9, [sp, #48]
    5d2c:	ldr	x9, [x9]
    5d30:	ldr	x10, [sp, #48]
    5d34:	ldr	x10, [x10, #8]
    5d38:	add	x9, x9, x10
    5d3c:	cmp	x8, x9
    5d40:	cset	w11, ne  // ne = any
    5d44:	str	w11, [sp, #4]
    5d48:	ldr	w8, [sp, #4]
    5d4c:	tbnz	w8, #0, 5d54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26f4>
    5d50:	b	5d64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2704>
    5d54:	ldr	x8, [sp, #48]
    5d58:	ldr	x8, [x8, #16]
    5d5c:	str	x8, [sp, #48]
    5d60:	b	5d14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26b4>
    5d64:	ldr	x8, [sp, #48]
    5d68:	cbz	x8, 5e14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27b4>
    5d6c:	ldur	x8, [x29, #-32]
    5d70:	ldur	x9, [x29, #-40]
    5d74:	add	x8, x8, x9
    5d78:	ldur	x8, [x8, #-8]
    5d7c:	ldr	x9, [sp, #48]
    5d80:	ldr	x9, [x9, #24]
    5d84:	cmp	x8, x9
    5d88:	b.ne	5e14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27b4>  // b.any
    5d8c:	ldur	w8, [x29, #-44]
    5d90:	mov	w9, w8
    5d94:	mov	x10, #0x1                   	// #1
    5d98:	cmp	x10, x9
    5d9c:	b.ne	5e14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27b4>  // b.any
    5da0:	ldur	x8, [x29, #-16]
    5da4:	ldr	x8, [x8, #40]
    5da8:	ldr	x9, [sp, #48]
    5dac:	ldr	x9, [x9]
    5db0:	cmp	x8, x9
    5db4:	b.cc	5e14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27b4>  // b.lo, b.ul, b.last
    5db8:	ldur	x8, [x29, #-16]
    5dbc:	ldr	x8, [x8, #40]
    5dc0:	ldr	x9, [sp, #48]
    5dc4:	ldr	x9, [x9]
    5dc8:	ldr	x10, [sp, #48]
    5dcc:	ldr	x10, [x10, #8]
    5dd0:	add	x9, x9, x10
    5dd4:	cmp	x8, x9
    5dd8:	b.cs	5e14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27b4>  // b.hs, b.nlast
    5ddc:	ldur	x8, [x29, #-40]
    5de0:	ldr	x9, [sp, #48]
    5de4:	ldr	x10, [x9, #8]
    5de8:	add	x8, x10, x8
    5dec:	str	x8, [x9, #8]
    5df0:	ldur	x0, [x29, #-16]
    5df4:	ldur	x8, [x29, #-16]
    5df8:	ldr	x1, [x8, #40]
    5dfc:	ldur	x8, [x29, #-16]
    5e00:	ldr	x8, [x8, #16]
    5e04:	ldur	x9, [x29, #-40]
    5e08:	add	x2, x8, x9
    5e0c:	bl	63ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4c>
    5e10:	b	5f24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28c4>
    5e14:	ldur	x8, [x29, #-32]
    5e18:	ldur	x9, [x29, #-16]
    5e1c:	ldr	x9, [x9, #24]
    5e20:	cmp	x8, x9
    5e24:	b.cs	5e34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27d4>  // b.hs, b.nlast
    5e28:	ldur	x8, [x29, #-32]
    5e2c:	ldur	x9, [x29, #-16]
    5e30:	str	x8, [x9, #24]
    5e34:	ldur	x8, [x29, #-16]
    5e38:	add	x8, x8, #0x398
    5e3c:	str	x8, [sp, #48]
    5e40:	ldr	x8, [sp, #48]
    5e44:	mov	w9, #0x0                   	// #0
    5e48:	str	w9, [sp]
    5e4c:	cbz	x8, 5e70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2810>
    5e50:	ldr	x8, [sp, #48]
    5e54:	ldr	x8, [x8]
    5e58:	ldur	x9, [x29, #-32]
    5e5c:	ldur	x10, [x29, #-40]
    5e60:	add	x9, x9, x10
    5e64:	cmp	x8, x9
    5e68:	cset	w11, ne  // ne = any
    5e6c:	str	w11, [sp]
    5e70:	ldr	w8, [sp]
    5e74:	tbnz	w8, #0, 5e7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x281c>
    5e78:	b	5e8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x282c>
    5e7c:	ldr	x8, [sp, #48]
    5e80:	ldr	x8, [x8, #16]
    5e84:	str	x8, [sp, #48]
    5e88:	b	5e40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27e0>
    5e8c:	ldr	x8, [sp, #48]
    5e90:	cbz	x8, 5f10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28b0>
    5e94:	ldur	x8, [x29, #-32]
    5e98:	ldur	x9, [x29, #-40]
    5e9c:	add	x8, x8, x9
    5ea0:	ldur	x8, [x8, #-8]
    5ea4:	ldr	x9, [sp, #48]
    5ea8:	ldr	x9, [x9, #24]
    5eac:	cmp	x8, x9
    5eb0:	b.ne	5f10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28b0>  // b.any
    5eb4:	ldur	w8, [x29, #-44]
    5eb8:	mov	w9, w8
    5ebc:	mov	x10, #0x1                   	// #1
    5ec0:	cmp	x10, x9
    5ec4:	b.ne	5f10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28b0>  // b.any
    5ec8:	ldr	x8, [sp, #48]
    5ecc:	ldr	x8, [x8]
    5ed0:	str	x8, [sp, #40]
    5ed4:	ldur	x8, [x29, #-32]
    5ed8:	ldr	x9, [sp, #48]
    5edc:	str	x8, [x9]
    5ee0:	ldur	x8, [x29, #-40]
    5ee4:	ldr	x9, [sp, #48]
    5ee8:	ldr	x10, [x9, #8]
    5eec:	add	x8, x10, x8
    5ef0:	str	x8, [x9, #8]
    5ef4:	ldur	x0, [x29, #-16]
    5ef8:	ldur	x1, [x29, #-32]
    5efc:	ldr	x2, [sp, #40]
    5f00:	ldur	x3, [x29, #-24]
    5f04:	bl	647c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2e1c>
    5f08:	stur	x0, [x29, #-8]
    5f0c:	b	5fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x295c>
    5f10:	ldur	x0, [x29, #-16]
    5f14:	ldur	x1, [x29, #-32]
    5f18:	ldur	x2, [x29, #-40]
    5f1c:	ldur	w3, [x29, #-44]
    5f20:	bl	6f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38cc>
    5f24:	ldur	x8, [x29, #-24]
    5f28:	ldur	x9, [x29, #-16]
    5f2c:	ldr	x9, [x9, #16]
    5f30:	cmp	x8, x9
    5f34:	b.cs	5fa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2948>  // b.hs, b.nlast
    5f38:	ldur	x8, [x29, #-24]
    5f3c:	ldur	x9, [x29, #-16]
    5f40:	ldr	x10, [x9, #16]
    5f44:	subs	x8, x10, x8
    5f48:	str	x8, [x9, #16]
    5f4c:	str	x8, [sp, #32]
    5f50:	ldur	x8, [x29, #-16]
    5f54:	ldr	x8, [x8, #40]
    5f58:	str	x8, [sp, #24]
    5f5c:	ldr	x8, [sp, #24]
    5f60:	ldur	x9, [x29, #-24]
    5f64:	add	x8, x8, x9
    5f68:	ldur	x9, [x29, #-16]
    5f6c:	str	x8, [x9, #40]
    5f70:	str	x8, [sp, #16]
    5f74:	ldr	x8, [sp, #32]
    5f78:	orr	x8, x8, #0x1
    5f7c:	ldr	x9, [sp, #16]
    5f80:	str	x8, [x9, #8]
    5f84:	ldur	x8, [x29, #-24]
    5f88:	orr	x8, x8, #0x1
    5f8c:	orr	x8, x8, #0x2
    5f90:	ldr	x9, [sp, #24]
    5f94:	str	x8, [x9, #8]
    5f98:	ldr	x8, [sp, #24]
    5f9c:	add	x8, x8, #0x10
    5fa0:	stur	x8, [x29, #-8]
    5fa4:	b	5fbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x295c>
    5fa8:	bl	1c10 <__errno_location@plt>
    5fac:	mov	w8, #0xc                   	// #12
    5fb0:	str	w8, [x0]
    5fb4:	mov	x9, xzr
    5fb8:	stur	x9, [x29, #-8]
    5fbc:	ldur	x0, [x29, #-8]
    5fc0:	ldp	x29, x30, [sp, #144]
    5fc4:	add	sp, sp, #0xa0
    5fc8:	ret
    5fcc:	sub	sp, sp, #0x60
    5fd0:	stp	x29, x30, [sp, #80]
    5fd4:	add	x29, sp, #0x50
    5fd8:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    5fdc:	add	x8, x8, #0x600
    5fe0:	stur	x0, [x29, #-16]
    5fe4:	stur	x1, [x29, #-24]
    5fe8:	ldur	x9, [x29, #-24]
    5fec:	add	x9, x9, #0x30
    5ff0:	add	x9, x9, #0x7
    5ff4:	ldr	x10, [x8, #16]
    5ff8:	add	x9, x9, x10
    5ffc:	ldr	x8, [x8, #16]
    6000:	subs	x8, x8, #0x1
    6004:	bic	x8, x9, x8
    6008:	stur	x8, [x29, #-32]
    600c:	ldur	x8, [x29, #-32]
    6010:	ldur	x9, [x29, #-24]
    6014:	cmp	x8, x9
    6018:	b.ls	6160 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b00>  // b.plast
    601c:	ldur	x1, [x29, #-32]
    6020:	mov	x8, xzr
    6024:	mov	x0, x8
    6028:	mov	w2, #0x3                   	// #3
    602c:	mov	w3, #0x22                  	// #34
    6030:	mov	w4, #0xffffffff            	// #-1
    6034:	mov	x5, x8
    6038:	bl	6178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b18>
    603c:	str	x0, [sp, #40]
    6040:	ldr	x8, [sp, #40]
    6044:	mov	x9, #0xffffffffffffffff    	// #-1
    6048:	cmp	x8, x9
    604c:	b.eq	6160 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b00>  // b.none
    6050:	ldr	x8, [sp, #40]
    6054:	add	x8, x8, #0x10
    6058:	and	x8, x8, #0x7
    605c:	cbnz	x8, 606c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2a0c>
    6060:	mov	x8, xzr
    6064:	str	x8, [sp, #8]
    6068:	b	6088 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2a28>
    606c:	ldr	x8, [sp, #40]
    6070:	add	x8, x8, #0x10
    6074:	and	x8, x8, #0x7
    6078:	mov	x9, #0x8                   	// #8
    607c:	subs	x8, x9, x8
    6080:	and	x8, x8, #0x7
    6084:	str	x8, [sp, #8]
    6088:	ldr	x8, [sp, #8]
    608c:	str	x8, [sp, #32]
    6090:	ldur	x8, [x29, #-32]
    6094:	ldr	x9, [sp, #32]
    6098:	subs	x8, x8, x9
    609c:	subs	x8, x8, #0x20
    60a0:	str	x8, [sp, #24]
    60a4:	ldr	x8, [sp, #40]
    60a8:	ldr	x9, [sp, #32]
    60ac:	add	x8, x8, x9
    60b0:	str	x8, [sp, #16]
    60b4:	ldr	x8, [sp, #32]
    60b8:	orr	x8, x8, #0x1
    60bc:	ldr	x9, [sp, #16]
    60c0:	str	x8, [x9]
    60c4:	ldr	x8, [sp, #24]
    60c8:	orr	x8, x8, #0x2
    60cc:	ldr	x9, [sp, #16]
    60d0:	str	x8, [x9, #8]
    60d4:	ldr	x8, [sp, #16]
    60d8:	ldr	x9, [sp, #24]
    60dc:	add	x8, x8, x9
    60e0:	mov	x9, #0xb                   	// #11
    60e4:	str	x9, [x8, #8]
    60e8:	ldr	x8, [sp, #16]
    60ec:	ldr	x9, [sp, #24]
    60f0:	add	x9, x9, #0x8
    60f4:	add	x8, x8, x9
    60f8:	str	xzr, [x8, #8]
    60fc:	ldr	x8, [sp, #40]
    6100:	ldur	x9, [x29, #-16]
    6104:	ldr	x9, [x9, #24]
    6108:	cmp	x8, x9
    610c:	b.cs	611c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2abc>  // b.hs, b.nlast
    6110:	ldr	x8, [sp, #40]
    6114:	ldur	x9, [x29, #-16]
    6118:	str	x8, [x9, #24]
    611c:	ldur	x8, [x29, #-32]
    6120:	ldur	x9, [x29, #-16]
    6124:	ldr	x10, [x9, #848]
    6128:	add	x8, x10, x8
    612c:	str	x8, [x9, #848]
    6130:	ldur	x9, [x29, #-16]
    6134:	ldr	x9, [x9, #856]
    6138:	cmp	x8, x9
    613c:	b.ls	6150 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2af0>  // b.plast
    6140:	ldur	x8, [x29, #-16]
    6144:	ldr	x8, [x8, #848]
    6148:	ldur	x9, [x29, #-16]
    614c:	str	x8, [x9, #856]
    6150:	ldr	x8, [sp, #16]
    6154:	add	x8, x8, #0x10
    6158:	stur	x8, [x29, #-8]
    615c:	b	6168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b08>
    6160:	mov	x8, xzr
    6164:	stur	x8, [x29, #-8]
    6168:	ldur	x0, [x29, #-8]
    616c:	ldp	x29, x30, [sp, #80]
    6170:	add	sp, sp, #0x60
    6174:	ret
    6178:	sub	sp, sp, #0x70
    617c:	stp	x29, x30, [sp, #96]
    6180:	add	x29, sp, #0x60
    6184:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    6188:	add	x8, x8, #0x190
    618c:	mov	w9, #0xffffffff            	// #-1
    6190:	mov	w10, #0x0                   	// #0
    6194:	adrp	x11, 1c000 <memcpy@GLIBC_2.17>
    6198:	add	x11, x11, #0x194
    619c:	stur	x0, [x29, #-16]
    61a0:	stur	x1, [x29, #-24]
    61a4:	stur	w2, [x29, #-28]
    61a8:	stur	w3, [x29, #-32]
    61ac:	stur	w4, [x29, #-36]
    61b0:	str	x5, [sp, #48]
    61b4:	ldr	w12, [x8]
    61b8:	cmp	w12, w9
    61bc:	str	x8, [sp, #32]
    61c0:	str	w10, [sp, #28]
    61c4:	str	x11, [sp, #16]
    61c8:	b.ne	6208 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ba8>  // b.any
    61cc:	ldr	w8, [sp, #28]
    61d0:	tbnz	w8, #0, 61d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2b78>
    61d4:	b	6208 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ba8>
    61d8:	ldur	x0, [x29, #-16]
    61dc:	ldur	x1, [x29, #-24]
    61e0:	ldur	w8, [x29, #-28]
    61e4:	and	w2, w8, #0xfffffffb
    61e8:	ldur	w3, [x29, #-32]
    61ec:	ldur	w4, [x29, #-36]
    61f0:	ldr	x5, [sp, #48]
    61f4:	bl	1b40 <mmap@plt>
    61f8:	str	x0, [sp, #40]
    61fc:	ldr	x9, [sp, #40]
    6200:	stur	x9, [x29, #-8]
    6204:	b	6338 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cd8>
    6208:	ldr	x8, [sp, #32]
    620c:	ldr	w9, [x8]
    6210:	mov	w10, #0xffffffff            	// #-1
    6214:	cmp	w9, w10
    6218:	b.ne	62b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c50>  // b.any
    621c:	ldr	x8, [sp, #16]
    6220:	ldr	w9, [x8]
    6224:	cmp	w9, #0x0
    6228:	cset	w9, lt  // lt = tstop
    622c:	tbnz	w9, #0, 6240 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2be0>
    6230:	ldr	x8, [sp, #16]
    6234:	ldr	w9, [x8]
    6238:	cbnz	w9, 62b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c50>
    623c:	b	6250 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2bf0>
    6240:	bl	7674 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4014>
    6244:	ldr	x8, [sp, #16]
    6248:	str	w0, [x8]
    624c:	cbnz	w0, 62b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c50>
    6250:	ldur	x0, [x29, #-16]
    6254:	ldur	x1, [x29, #-24]
    6258:	ldur	w8, [x29, #-28]
    625c:	orr	w2, w8, #0x4
    6260:	ldur	w3, [x29, #-32]
    6264:	ldur	w4, [x29, #-36]
    6268:	ldr	x5, [sp, #48]
    626c:	bl	1b40 <mmap@plt>
    6270:	str	x0, [sp, #40]
    6274:	ldr	x9, [sp, #40]
    6278:	mov	x10, #0xffffffffffffffff    	// #-1
    627c:	cmp	x9, x10
    6280:	b.ne	62a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c44>  // b.any
    6284:	bl	1c10 <__errno_location@plt>
    6288:	ldr	w8, [x0]
    628c:	cmp	w8, #0x1
    6290:	b.eq	62b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c50>  // b.none
    6294:	bl	1c10 <__errno_location@plt>
    6298:	ldr	w8, [x0]
    629c:	cmp	w8, #0xd
    62a0:	b.eq	62b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c50>  // b.none
    62a4:	ldr	x8, [sp, #40]
    62a8:	stur	x8, [x29, #-8]
    62ac:	b	6338 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cd8>
    62b0:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    62b4:	add	x8, x8, #0x660
    62b8:	ldr	x8, [x8]
    62bc:	cbz	x8, 62d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c74>
    62c0:	ldr	x8, [sp, #32]
    62c4:	ldr	w9, [x8]
    62c8:	mov	w10, #0xffffffff            	// #-1
    62cc:	cmp	w9, w10
    62d0:	b.ne	631c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cbc>  // b.any
    62d4:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    62d8:	add	x8, x8, #0x668
    62dc:	mov	x0, x8
    62e0:	str	x8, [sp, #8]
    62e4:	bl	1c50 <pthread_mutex_lock@plt>
    62e8:	ldur	x8, [x29, #-16]
    62ec:	ldur	x1, [x29, #-24]
    62f0:	ldur	w2, [x29, #-28]
    62f4:	ldur	w3, [x29, #-32]
    62f8:	ldr	x4, [sp, #48]
    62fc:	mov	x0, x8
    6300:	bl	77a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4148>
    6304:	str	x0, [sp, #40]
    6308:	ldr	x0, [sp, #8]
    630c:	bl	1c60 <pthread_mutex_unlock@plt>
    6310:	ldr	x8, [sp, #40]
    6314:	stur	x8, [x29, #-8]
    6318:	b	6338 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cd8>
    631c:	ldur	x0, [x29, #-16]
    6320:	ldur	x1, [x29, #-24]
    6324:	ldur	w2, [x29, #-28]
    6328:	ldur	w3, [x29, #-32]
    632c:	ldr	x4, [sp, #48]
    6330:	bl	77a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4148>
    6334:	stur	x0, [x29, #-8]
    6338:	ldur	x0, [x29, #-8]
    633c:	ldp	x29, x30, [sp, #96]
    6340:	add	sp, sp, #0x70
    6344:	ret
    6348:	sub	sp, sp, #0x20
    634c:	str	x0, [sp, #24]
    6350:	str	xzr, [sp, #16]
    6354:	ldr	x8, [sp, #16]
    6358:	cmp	x8, #0x20
    635c:	b.cs	63a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d44>  // b.hs, b.nlast
    6360:	ldr	x8, [sp, #24]
    6364:	add	x8, x8, #0x40
    6368:	ldr	x9, [sp, #16]
    636c:	lsl	x9, x9, #1
    6370:	mov	x10, #0x8                   	// #8
    6374:	mul	x9, x10, x9
    6378:	add	x8, x8, x9
    637c:	str	x8, [sp, #8]
    6380:	ldr	x8, [sp, #8]
    6384:	ldr	x9, [sp, #8]
    6388:	str	x8, [x9, #24]
    638c:	ldr	x9, [sp, #8]
    6390:	str	x8, [x9, #16]
    6394:	ldr	x8, [sp, #16]
    6398:	add	x8, x8, #0x1
    639c:	str	x8, [sp, #16]
    63a0:	b	6354 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cf4>
    63a4:	add	sp, sp, #0x20
    63a8:	ret
    63ac:	sub	sp, sp, #0x30
    63b0:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    63b4:	add	x8, x8, #0x600
    63b8:	str	x0, [sp, #40]
    63bc:	str	x1, [sp, #32]
    63c0:	str	x2, [sp, #24]
    63c4:	ldr	x9, [sp, #32]
    63c8:	add	x9, x9, #0x10
    63cc:	and	x9, x9, #0x7
    63d0:	str	x8, [sp, #8]
    63d4:	cbnz	x9, 63e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d84>
    63d8:	mov	x8, xzr
    63dc:	str	x8, [sp]
    63e0:	b	6400 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2da0>
    63e4:	ldr	x8, [sp, #32]
    63e8:	add	x8, x8, #0x10
    63ec:	and	x8, x8, #0x7
    63f0:	mov	x9, #0x8                   	// #8
    63f4:	subs	x8, x9, x8
    63f8:	and	x8, x8, #0x7
    63fc:	str	x8, [sp]
    6400:	ldr	x8, [sp]
    6404:	str	x8, [sp, #16]
    6408:	ldr	x8, [sp, #32]
    640c:	ldr	x9, [sp, #16]
    6410:	add	x8, x8, x9
    6414:	str	x8, [sp, #32]
    6418:	ldr	x8, [sp, #16]
    641c:	ldr	x9, [sp, #24]
    6420:	subs	x8, x9, x8
    6424:	str	x8, [sp, #24]
    6428:	ldr	x8, [sp, #32]
    642c:	ldr	x9, [sp, #40]
    6430:	str	x8, [x9, #40]
    6434:	ldr	x8, [sp, #24]
    6438:	ldr	x9, [sp, #40]
    643c:	str	x8, [x9, #16]
    6440:	ldr	x8, [sp, #24]
    6444:	orr	x8, x8, #0x1
    6448:	ldr	x9, [sp, #32]
    644c:	str	x8, [x9, #8]
    6450:	ldr	x8, [sp, #32]
    6454:	ldr	x9, [sp, #24]
    6458:	add	x8, x8, x9
    645c:	mov	x9, #0x48                  	// #72
    6460:	str	x9, [x8, #8]
    6464:	ldr	x8, [sp, #8]
    6468:	ldr	x9, [x8, #32]
    646c:	ldr	x10, [sp, #40]
    6470:	str	x9, [x10, #48]
    6474:	add	sp, sp, #0x30
    6478:	ret
    647c:	sub	sp, sp, #0x190
    6480:	stp	x29, x30, [sp, #384]
    6484:	add	x29, sp, #0x180
    6488:	stur	x0, [x29, #-16]
    648c:	stur	x1, [x29, #-24]
    6490:	stur	x2, [x29, #-32]
    6494:	stur	x3, [x29, #-40]
    6498:	ldur	x8, [x29, #-24]
    649c:	ldur	x9, [x29, #-24]
    64a0:	add	x9, x9, #0x10
    64a4:	and	x9, x9, #0x7
    64a8:	str	x8, [sp, #72]
    64ac:	cbnz	x9, 64bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2e5c>
    64b0:	mov	x8, xzr
    64b4:	str	x8, [sp, #64]
    64b8:	b	64d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2e78>
    64bc:	ldur	x8, [x29, #-24]
    64c0:	add	x8, x8, #0x10
    64c4:	and	x8, x8, #0x7
    64c8:	mov	x9, #0x8                   	// #8
    64cc:	subs	x8, x9, x8
    64d0:	and	x8, x8, #0x7
    64d4:	str	x8, [sp, #64]
    64d8:	ldr	x8, [sp, #64]
    64dc:	ldr	x9, [sp, #72]
    64e0:	add	x8, x9, x8
    64e4:	stur	x8, [x29, #-48]
    64e8:	ldur	x8, [x29, #-32]
    64ec:	ldur	x10, [x29, #-32]
    64f0:	add	x10, x10, #0x10
    64f4:	and	x10, x10, #0x7
    64f8:	str	x8, [sp, #56]
    64fc:	cbnz	x10, 650c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2eac>
    6500:	mov	x8, xzr
    6504:	str	x8, [sp, #48]
    6508:	b	6528 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ec8>
    650c:	ldur	x8, [x29, #-32]
    6510:	add	x8, x8, #0x10
    6514:	and	x8, x8, #0x7
    6518:	mov	x9, #0x8                   	// #8
    651c:	subs	x8, x9, x8
    6520:	and	x8, x8, #0x7
    6524:	str	x8, [sp, #48]
    6528:	ldr	x8, [sp, #48]
    652c:	ldr	x9, [sp, #56]
    6530:	add	x8, x9, x8
    6534:	stur	x8, [x29, #-56]
    6538:	ldur	x8, [x29, #-56]
    653c:	ldur	x10, [x29, #-48]
    6540:	subs	x8, x8, x10
    6544:	stur	x8, [x29, #-64]
    6548:	ldur	x8, [x29, #-48]
    654c:	ldur	x10, [x29, #-40]
    6550:	add	x8, x8, x10
    6554:	stur	x8, [x29, #-72]
    6558:	ldur	x8, [x29, #-64]
    655c:	ldur	x10, [x29, #-40]
    6560:	subs	x8, x8, x10
    6564:	stur	x8, [x29, #-80]
    6568:	ldur	x8, [x29, #-40]
    656c:	orr	x8, x8, #0x1
    6570:	orr	x8, x8, #0x2
    6574:	ldur	x10, [x29, #-48]
    6578:	str	x8, [x10, #8]
    657c:	ldur	x8, [x29, #-56]
    6580:	ldur	x10, [x29, #-16]
    6584:	ldr	x10, [x10, #40]
    6588:	cmp	x8, x10
    658c:	b.ne	65c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2f68>  // b.any
    6590:	ldur	x8, [x29, #-80]
    6594:	ldur	x9, [x29, #-16]
    6598:	ldr	x10, [x9, #16]
    659c:	add	x8, x10, x8
    65a0:	str	x8, [x9, #16]
    65a4:	stur	x8, [x29, #-88]
    65a8:	ldur	x8, [x29, #-72]
    65ac:	ldur	x9, [x29, #-16]
    65b0:	str	x8, [x9, #40]
    65b4:	ldur	x8, [x29, #-88]
    65b8:	orr	x8, x8, #0x1
    65bc:	ldur	x9, [x29, #-72]
    65c0:	str	x8, [x9, #8]
    65c4:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    65c8:	ldur	x8, [x29, #-56]
    65cc:	ldur	x9, [x29, #-16]
    65d0:	ldr	x9, [x9, #32]
    65d4:	cmp	x8, x9
    65d8:	b.ne	6624 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2fc4>  // b.any
    65dc:	ldur	x8, [x29, #-80]
    65e0:	ldur	x9, [x29, #-16]
    65e4:	ldr	x10, [x9, #8]
    65e8:	add	x8, x10, x8
    65ec:	str	x8, [x9, #8]
    65f0:	stur	x8, [x29, #-96]
    65f4:	ldur	x8, [x29, #-72]
    65f8:	ldur	x9, [x29, #-16]
    65fc:	str	x8, [x9, #32]
    6600:	ldur	x8, [x29, #-96]
    6604:	orr	x8, x8, #0x1
    6608:	ldur	x9, [x29, #-72]
    660c:	str	x8, [x9, #8]
    6610:	ldur	x8, [x29, #-96]
    6614:	ldur	x9, [x29, #-72]
    6618:	ldur	x10, [x29, #-96]
    661c:	str	x8, [x9, x10]
    6620:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    6624:	ldur	x8, [x29, #-56]
    6628:	ldr	x8, [x8, #8]
    662c:	and	x8, x8, #0x2
    6630:	cbnz	x8, 6a90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3430>
    6634:	ldur	x8, [x29, #-56]
    6638:	ldr	x8, [x8, #8]
    663c:	and	x8, x8, #0xfffffffffffffffc
    6640:	stur	x8, [x29, #-104]
    6644:	ldur	x8, [x29, #-104]
    6648:	lsr	x8, x8, #3
    664c:	cmp	x8, #0x20
    6650:	b.cs	6774 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3114>  // b.hs, b.nlast
    6654:	ldur	x8, [x29, #-56]
    6658:	ldr	x8, [x8, #16]
    665c:	stur	x8, [x29, #-112]
    6660:	ldur	x8, [x29, #-56]
    6664:	ldr	x8, [x8, #24]
    6668:	stur	x8, [x29, #-120]
    666c:	ldur	x8, [x29, #-104]
    6670:	lsr	x8, x8, #3
    6674:	stur	x8, [x29, #-128]
    6678:	ldur	x8, [x29, #-112]
    667c:	ldur	x9, [x29, #-120]
    6680:	cmp	x8, x9
    6684:	b.ne	66a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3048>  // b.any
    6688:	ldur	x8, [x29, #-128]
    668c:	mov	w9, #0x1                   	// #1
    6690:	lsl	w8, w9, w8
    6694:	ldur	x10, [x29, #-16]
    6698:	ldr	w9, [x10]
    669c:	bic	w8, w9, w8
    66a0:	str	w8, [x10]
    66a4:	b	6770 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3110>
    66a8:	ldur	x8, [x29, #-112]
    66ac:	ldur	x9, [x29, #-16]
    66b0:	add	x9, x9, #0x40
    66b4:	ldur	x10, [x29, #-128]
    66b8:	lsl	x10, x10, #1
    66bc:	mov	x11, #0x8                   	// #8
    66c0:	mul	x10, x11, x10
    66c4:	add	x9, x9, x10
    66c8:	cmp	x8, x9
    66cc:	b.eq	66ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x308c>  // b.none
    66d0:	ldur	x8, [x29, #-112]
    66d4:	ldur	x9, [x29, #-16]
    66d8:	ldr	x9, [x9, #24]
    66dc:	mov	w10, #0x0                   	// #0
    66e0:	cmp	x8, x9
    66e4:	str	w10, [sp, #44]
    66e8:	b.cc	673c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x30dc>  // b.lo, b.ul, b.last
    66ec:	ldur	x8, [x29, #-120]
    66f0:	ldur	x9, [x29, #-16]
    66f4:	add	x9, x9, #0x40
    66f8:	ldur	x10, [x29, #-128]
    66fc:	lsl	x10, x10, #1
    6700:	mov	x11, #0x8                   	// #8
    6704:	mul	x10, x11, x10
    6708:	add	x9, x9, x10
    670c:	mov	w12, #0x1                   	// #1
    6710:	cmp	x8, x9
    6714:	str	w12, [sp, #40]
    6718:	b.eq	6734 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x30d4>  // b.none
    671c:	ldur	x8, [x29, #-120]
    6720:	ldur	x9, [x29, #-16]
    6724:	ldr	x9, [x9, #24]
    6728:	cmp	x8, x9
    672c:	cset	w10, cs  // cs = hs, nlast
    6730:	str	w10, [sp, #40]
    6734:	ldr	w8, [sp, #40]
    6738:	str	w8, [sp, #44]
    673c:	ldr	w8, [sp, #44]
    6740:	and	w8, w8, #0x1
    6744:	mov	w0, w8
    6748:	sxtw	x9, w0
    674c:	cbz	x9, 676c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x310c>
    6750:	ldur	x8, [x29, #-120]
    6754:	ldur	x9, [x29, #-112]
    6758:	str	x8, [x9, #24]
    675c:	ldur	x8, [x29, #-112]
    6760:	ldur	x9, [x29, #-120]
    6764:	str	x8, [x9, #16]
    6768:	b	6770 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3110>
    676c:	bl	1b10 <abort@plt>
    6770:	b	6a70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3410>
    6774:	ldur	x8, [x29, #-56]
    6778:	stur	x8, [x29, #-136]
    677c:	ldur	x8, [x29, #-136]
    6780:	ldr	x8, [x8, #48]
    6784:	stur	x8, [x29, #-144]
    6788:	ldur	x8, [x29, #-136]
    678c:	ldr	x8, [x8, #24]
    6790:	ldur	x9, [x29, #-136]
    6794:	cmp	x8, x9
    6798:	b.eq	67fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x319c>  // b.none
    679c:	ldur	x8, [x29, #-136]
    67a0:	ldr	x8, [x8, #16]
    67a4:	stur	x8, [x29, #-160]
    67a8:	ldur	x8, [x29, #-136]
    67ac:	ldr	x8, [x8, #24]
    67b0:	stur	x8, [x29, #-152]
    67b4:	ldur	x8, [x29, #-160]
    67b8:	ldur	x9, [x29, #-16]
    67bc:	ldr	x9, [x9, #24]
    67c0:	cmp	x8, x9
    67c4:	cset	w10, cs  // cs = hs, nlast
    67c8:	and	w10, w10, #0x1
    67cc:	mov	w0, w10
    67d0:	sxtw	x8, w0
    67d4:	cbz	x8, 67f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3194>
    67d8:	ldur	x8, [x29, #-152]
    67dc:	ldur	x9, [x29, #-160]
    67e0:	str	x8, [x9, #24]
    67e4:	ldur	x8, [x29, #-160]
    67e8:	ldur	x9, [x29, #-152]
    67ec:	str	x8, [x9, #16]
    67f0:	b	67f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3198>
    67f4:	bl	1b10 <abort@plt>
    67f8:	b	68bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x325c>
    67fc:	ldur	x8, [x29, #-136]
    6800:	add	x9, x8, #0x28
    6804:	stur	x9, [x29, #-168]
    6808:	ldr	x8, [x8, #40]
    680c:	stur	x8, [x29, #-152]
    6810:	cbnz	x8, 682c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x31cc>
    6814:	ldur	x8, [x29, #-136]
    6818:	add	x9, x8, #0x20
    681c:	stur	x9, [x29, #-168]
    6820:	ldr	x8, [x8, #32]
    6824:	stur	x8, [x29, #-152]
    6828:	cbz	x8, 68bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x325c>
    682c:	ldur	x8, [x29, #-152]
    6830:	add	x9, x8, #0x28
    6834:	stur	x9, [x29, #-176]
    6838:	ldr	x8, [x8, #40]
    683c:	mov	w10, #0x1                   	// #1
    6840:	str	w10, [sp, #36]
    6844:	cbnz	x8, 6864 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3204>
    6848:	ldur	x8, [x29, #-152]
    684c:	add	x9, x8, #0x20
    6850:	stur	x9, [x29, #-176]
    6854:	ldr	x8, [x8, #32]
    6858:	cmp	x8, #0x0
    685c:	cset	w10, ne  // ne = any
    6860:	str	w10, [sp, #36]
    6864:	ldr	w8, [sp, #36]
    6868:	tbnz	w8, #0, 6870 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3210>
    686c:	b	6884 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3224>
    6870:	ldur	x8, [x29, #-176]
    6874:	stur	x8, [x29, #-168]
    6878:	ldr	x8, [x8]
    687c:	stur	x8, [x29, #-152]
    6880:	b	682c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x31cc>
    6884:	ldur	x8, [x29, #-168]
    6888:	ldur	x9, [x29, #-16]
    688c:	ldr	x9, [x9, #24]
    6890:	cmp	x8, x9
    6894:	cset	w10, cs  // cs = hs, nlast
    6898:	and	w10, w10, #0x1
    689c:	mov	w0, w10
    68a0:	sxtw	x8, w0
    68a4:	cbz	x8, 68b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3258>
    68a8:	ldur	x8, [x29, #-168]
    68ac:	mov	x9, xzr
    68b0:	str	x9, [x8]
    68b4:	b	68bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x325c>
    68b8:	bl	1b10 <abort@plt>
    68bc:	ldur	x8, [x29, #-144]
    68c0:	cbz	x8, 6a70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3410>
    68c4:	ldur	x8, [x29, #-16]
    68c8:	add	x8, x8, #0x250
    68cc:	ldur	x9, [x29, #-136]
    68d0:	ldr	x9, [x9, #56]
    68d4:	mov	x10, #0x8                   	// #8
    68d8:	mul	x9, x10, x9
    68dc:	add	x8, x8, x9
    68e0:	stur	x8, [x29, #-184]
    68e4:	ldur	x8, [x29, #-136]
    68e8:	ldur	x9, [x29, #-184]
    68ec:	ldr	x9, [x9]
    68f0:	cmp	x8, x9
    68f4:	b.ne	692c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x32cc>  // b.any
    68f8:	ldur	x8, [x29, #-152]
    68fc:	ldur	x9, [x29, #-184]
    6900:	str	x8, [x9]
    6904:	cbnz	x8, 6928 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x32c8>
    6908:	ldur	x8, [x29, #-136]
    690c:	ldr	x8, [x8, #56]
    6910:	mov	w9, #0x1                   	// #1
    6914:	lsl	w8, w9, w8
    6918:	ldur	x10, [x29, #-16]
    691c:	ldr	w9, [x10, #4]
    6920:	bic	w8, w9, w8
    6924:	str	w8, [x10, #4]
    6928:	b	6988 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3328>
    692c:	ldur	x8, [x29, #-144]
    6930:	ldur	x9, [x29, #-16]
    6934:	ldr	x9, [x9, #24]
    6938:	cmp	x8, x9
    693c:	cset	w10, cs  // cs = hs, nlast
    6940:	and	w10, w10, #0x1
    6944:	mov	w0, w10
    6948:	sxtw	x8, w0
    694c:	cbz	x8, 6984 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3324>
    6950:	ldur	x8, [x29, #-144]
    6954:	ldr	x8, [x8, #32]
    6958:	ldur	x9, [x29, #-136]
    695c:	cmp	x8, x9
    6960:	b.ne	6974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3314>  // b.any
    6964:	ldur	x8, [x29, #-152]
    6968:	ldur	x9, [x29, #-144]
    696c:	str	x8, [x9, #32]
    6970:	b	6980 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3320>
    6974:	ldur	x8, [x29, #-152]
    6978:	ldur	x9, [x29, #-144]
    697c:	str	x8, [x9, #40]
    6980:	b	6988 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3328>
    6984:	bl	1b10 <abort@plt>
    6988:	ldur	x8, [x29, #-152]
    698c:	cbz	x8, 6a70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3410>
    6990:	ldur	x8, [x29, #-152]
    6994:	ldur	x9, [x29, #-16]
    6998:	ldr	x9, [x9, #24]
    699c:	cmp	x8, x9
    69a0:	cset	w10, cs  // cs = hs, nlast
    69a4:	and	w10, w10, #0x1
    69a8:	mov	w0, w10
    69ac:	sxtw	x8, w0
    69b0:	cbz	x8, 6a6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x340c>
    69b4:	ldur	x8, [x29, #-144]
    69b8:	ldur	x9, [x29, #-152]
    69bc:	str	x8, [x9, #48]
    69c0:	ldur	x8, [x29, #-136]
    69c4:	ldr	x8, [x8, #32]
    69c8:	str	x8, [sp, #192]
    69cc:	cbz	x8, 6a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x33b4>
    69d0:	ldr	x8, [sp, #192]
    69d4:	ldur	x9, [x29, #-16]
    69d8:	ldr	x9, [x9, #24]
    69dc:	cmp	x8, x9
    69e0:	cset	w10, cs  // cs = hs, nlast
    69e4:	and	w10, w10, #0x1
    69e8:	mov	w0, w10
    69ec:	sxtw	x8, w0
    69f0:	cbz	x8, 6a10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x33b0>
    69f4:	ldr	x8, [sp, #192]
    69f8:	ldur	x9, [x29, #-152]
    69fc:	str	x8, [x9, #32]
    6a00:	ldur	x8, [x29, #-152]
    6a04:	ldr	x9, [sp, #192]
    6a08:	str	x8, [x9, #48]
    6a0c:	b	6a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x33b4>
    6a10:	bl	1b10 <abort@plt>
    6a14:	ldur	x8, [x29, #-136]
    6a18:	ldr	x8, [x8, #40]
    6a1c:	str	x8, [sp, #184]
    6a20:	cbz	x8, 6a68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3408>
    6a24:	ldr	x8, [sp, #184]
    6a28:	ldur	x9, [x29, #-16]
    6a2c:	ldr	x9, [x9, #24]
    6a30:	cmp	x8, x9
    6a34:	cset	w10, cs  // cs = hs, nlast
    6a38:	and	w10, w10, #0x1
    6a3c:	mov	w0, w10
    6a40:	sxtw	x8, w0
    6a44:	cbz	x8, 6a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3404>
    6a48:	ldr	x8, [sp, #184]
    6a4c:	ldur	x9, [x29, #-152]
    6a50:	str	x8, [x9, #40]
    6a54:	ldur	x8, [x29, #-152]
    6a58:	ldr	x9, [sp, #184]
    6a5c:	str	x8, [x9, #48]
    6a60:	b	6a68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3408>
    6a64:	bl	1b10 <abort@plt>
    6a68:	b	6a70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3410>
    6a6c:	bl	1b10 <abort@plt>
    6a70:	ldur	x8, [x29, #-56]
    6a74:	ldur	x9, [x29, #-104]
    6a78:	add	x8, x8, x9
    6a7c:	stur	x8, [x29, #-56]
    6a80:	ldur	x8, [x29, #-104]
    6a84:	ldur	x9, [x29, #-80]
    6a88:	add	x8, x9, x8
    6a8c:	stur	x8, [x29, #-80]
    6a90:	ldur	x8, [x29, #-56]
    6a94:	ldr	x9, [x8, #8]
    6a98:	and	x9, x9, #0xfffffffffffffffe
    6a9c:	str	x9, [x8, #8]
    6aa0:	ldur	x8, [x29, #-80]
    6aa4:	orr	x8, x8, #0x1
    6aa8:	ldur	x9, [x29, #-72]
    6aac:	str	x8, [x9, #8]
    6ab0:	ldur	x8, [x29, #-80]
    6ab4:	ldur	x9, [x29, #-72]
    6ab8:	ldur	x10, [x29, #-80]
    6abc:	str	x8, [x9, x10]
    6ac0:	ldur	x8, [x29, #-80]
    6ac4:	lsr	x8, x8, #3
    6ac8:	cmp	x8, #0x20
    6acc:	b.cs	6bb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3550>  // b.hs, b.nlast
    6ad0:	ldur	x8, [x29, #-80]
    6ad4:	lsr	x8, x8, #3
    6ad8:	str	x8, [sp, #176]
    6adc:	ldur	x8, [x29, #-16]
    6ae0:	add	x8, x8, #0x40
    6ae4:	ldr	x9, [sp, #176]
    6ae8:	lsl	x9, x9, #1
    6aec:	mov	x10, #0x8                   	// #8
    6af0:	mul	x9, x10, x9
    6af4:	add	x8, x8, x9
    6af8:	str	x8, [sp, #168]
    6afc:	ldr	x8, [sp, #168]
    6b00:	str	x8, [sp, #160]
    6b04:	ldur	x8, [x29, #-16]
    6b08:	ldr	w11, [x8]
    6b0c:	ldr	x8, [sp, #176]
    6b10:	mov	w12, #0x1                   	// #1
    6b14:	lsl	w8, w12, w8
    6b18:	and	w8, w11, w8
    6b1c:	cbnz	w8, 6b40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x34e0>
    6b20:	ldr	x8, [sp, #176]
    6b24:	mov	w9, #0x1                   	// #1
    6b28:	lsl	w8, w9, w8
    6b2c:	ldur	x10, [x29, #-16]
    6b30:	ldr	w9, [x10]
    6b34:	orr	w8, w9, w8
    6b38:	str	w8, [x10]
    6b3c:	b	6b7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x351c>
    6b40:	ldr	x8, [sp, #168]
    6b44:	ldr	x8, [x8, #16]
    6b48:	ldur	x9, [x29, #-16]
    6b4c:	ldr	x9, [x9, #24]
    6b50:	cmp	x8, x9
    6b54:	cset	w10, cs  // cs = hs, nlast
    6b58:	and	w10, w10, #0x1
    6b5c:	mov	w0, w10
    6b60:	sxtw	x8, w0
    6b64:	cbz	x8, 6b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3518>
    6b68:	ldr	x8, [sp, #168]
    6b6c:	ldr	x8, [x8, #16]
    6b70:	str	x8, [sp, #160]
    6b74:	b	6b7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x351c>
    6b78:	bl	1b10 <abort@plt>
    6b7c:	ldur	x8, [x29, #-72]
    6b80:	ldr	x9, [sp, #168]
    6b84:	str	x8, [x9, #16]
    6b88:	ldur	x8, [x29, #-72]
    6b8c:	ldr	x9, [sp, #160]
    6b90:	str	x8, [x9, #24]
    6b94:	ldr	x8, [sp, #160]
    6b98:	ldur	x9, [x29, #-72]
    6b9c:	str	x8, [x9, #16]
    6ba0:	ldr	x8, [sp, #168]
    6ba4:	ldur	x9, [x29, #-72]
    6ba8:	str	x8, [x9, #24]
    6bac:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    6bb0:	ldur	x8, [x29, #-72]
    6bb4:	str	x8, [sp, #152]
    6bb8:	ldur	x8, [x29, #-80]
    6bbc:	lsr	x8, x8, #8
    6bc0:	str	x8, [sp, #128]
    6bc4:	ldr	x8, [sp, #128]
    6bc8:	cbnz	x8, 6bd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3574>
    6bcc:	str	xzr, [sp, #136]
    6bd0:	b	6cc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3664>
    6bd4:	ldr	x8, [sp, #128]
    6bd8:	mov	x9, #0xffff                	// #65535
    6bdc:	cmp	x8, x9
    6be0:	b.ls	6bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3590>  // b.plast
    6be4:	mov	x8, #0x1f                  	// #31
    6be8:	str	x8, [sp, #136]
    6bec:	b	6cc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3664>
    6bf0:	ldr	x8, [sp, #128]
    6bf4:	str	w8, [sp, #124]
    6bf8:	ldr	w8, [sp, #124]
    6bfc:	subs	w8, w8, #0x100
    6c00:	mov	x9, #0x10                  	// #16
    6c04:	lsr	w8, w8, #16
    6c08:	and	w8, w8, #0x8
    6c0c:	str	w8, [sp, #120]
    6c10:	ldr	w8, [sp, #120]
    6c14:	ldr	w10, [sp, #124]
    6c18:	lsl	w8, w10, w8
    6c1c:	str	w8, [sp, #124]
    6c20:	subs	w8, w8, #0x1, lsl #12
    6c24:	mov	x0, x9
    6c28:	lsr	w8, w8, w0
    6c2c:	and	w8, w8, #0x4
    6c30:	str	w8, [sp, #116]
    6c34:	ldr	w8, [sp, #116]
    6c38:	ldr	w10, [sp, #120]
    6c3c:	add	w8, w10, w8
    6c40:	str	w8, [sp, #120]
    6c44:	ldr	w8, [sp, #116]
    6c48:	ldr	w10, [sp, #124]
    6c4c:	lsl	w8, w10, w8
    6c50:	str	w8, [sp, #124]
    6c54:	subs	w8, w8, #0x4, lsl #12
    6c58:	lsr	w8, w8, w9
    6c5c:	and	w8, w8, #0x2
    6c60:	str	w8, [sp, #116]
    6c64:	ldr	w9, [sp, #120]
    6c68:	add	w8, w9, w8
    6c6c:	str	w8, [sp, #120]
    6c70:	ldr	w8, [sp, #120]
    6c74:	mov	w9, #0xe                   	// #14
    6c78:	subs	w8, w9, w8
    6c7c:	ldr	w9, [sp, #116]
    6c80:	ldr	w10, [sp, #124]
    6c84:	lsl	w9, w10, w9
    6c88:	str	w9, [sp, #124]
    6c8c:	add	w8, w8, w9, lsr #15
    6c90:	str	w8, [sp, #116]
    6c94:	ldr	w8, [sp, #116]
    6c98:	lsl	w8, w8, #1
    6c9c:	mov	w11, w8
    6ca0:	ubfx	x11, x11, #0, #32
    6ca4:	ldur	x12, [x29, #-80]
    6ca8:	ldr	w8, [sp, #116]
    6cac:	add	w8, w8, #0x7
    6cb0:	mov	w13, w8
    6cb4:	lsr	x12, x12, x13
    6cb8:	and	x12, x12, #0x1
    6cbc:	add	x11, x11, x12
    6cc0:	str	x11, [sp, #136]
    6cc4:	ldur	x8, [x29, #-16]
    6cc8:	add	x8, x8, #0x250
    6ccc:	ldr	x9, [sp, #136]
    6cd0:	mov	x10, #0x8                   	// #8
    6cd4:	mul	x9, x10, x9
    6cd8:	add	x8, x8, x9
    6cdc:	str	x8, [sp, #144]
    6ce0:	ldr	x8, [sp, #136]
    6ce4:	ldr	x9, [sp, #152]
    6ce8:	str	x8, [x9, #56]
    6cec:	ldr	x8, [sp, #152]
    6cf0:	mov	x9, xzr
    6cf4:	str	x9, [x8, #40]
    6cf8:	ldr	x8, [sp, #152]
    6cfc:	str	x9, [x8, #32]
    6d00:	ldur	x8, [x29, #-16]
    6d04:	ldr	w11, [x8, #4]
    6d08:	ldr	x8, [sp, #136]
    6d0c:	mov	w12, #0x1                   	// #1
    6d10:	lsl	w8, w12, w8
    6d14:	and	w8, w11, w8
    6d18:	cbnz	w8, 6d68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3708>
    6d1c:	ldr	x8, [sp, #136]
    6d20:	mov	w9, #0x1                   	// #1
    6d24:	lsl	w8, w9, w8
    6d28:	ldur	x10, [x29, #-16]
    6d2c:	ldr	w9, [x10, #4]
    6d30:	orr	w8, w9, w8
    6d34:	str	w8, [x10, #4]
    6d38:	ldr	x10, [sp, #152]
    6d3c:	ldr	x11, [sp, #144]
    6d40:	str	x10, [x11]
    6d44:	ldr	x10, [sp, #144]
    6d48:	ldr	x11, [sp, #152]
    6d4c:	str	x10, [x11, #48]
    6d50:	ldr	x10, [sp, #152]
    6d54:	ldr	x11, [sp, #152]
    6d58:	str	x10, [x11, #24]
    6d5c:	ldr	x11, [sp, #152]
    6d60:	str	x10, [x11, #16]
    6d64:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    6d68:	ldr	x8, [sp, #144]
    6d6c:	ldr	x8, [x8]
    6d70:	str	x8, [sp, #104]
    6d74:	ldur	x8, [x29, #-80]
    6d78:	ldr	x9, [sp, #136]
    6d7c:	cmp	x9, #0x1f
    6d80:	str	x8, [sp, #24]
    6d84:	b.ne	6d94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3734>  // b.any
    6d88:	mov	x8, xzr
    6d8c:	str	x8, [sp, #16]
    6d90:	b	6db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3750>
    6d94:	ldr	x8, [sp, #136]
    6d98:	lsr	x8, x8, #1
    6d9c:	add	x8, x8, #0x8
    6da0:	subs	x8, x8, #0x2
    6da4:	mov	x9, #0x3f                  	// #63
    6da8:	subs	x8, x9, x8
    6dac:	str	x8, [sp, #16]
    6db0:	ldr	x8, [sp, #16]
    6db4:	ldr	x9, [sp, #24]
    6db8:	lsl	x8, x9, x8
    6dbc:	str	x8, [sp, #96]
    6dc0:	ldr	x8, [sp, #104]
    6dc4:	ldr	x8, [x8, #8]
    6dc8:	and	x8, x8, #0xfffffffffffffffc
    6dcc:	ldur	x9, [x29, #-80]
    6dd0:	cmp	x8, x9
    6dd4:	b.eq	6e80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3820>  // b.none
    6dd8:	ldr	x8, [sp, #104]
    6ddc:	add	x8, x8, #0x20
    6de0:	ldr	x9, [sp, #96]
    6de4:	lsr	x9, x9, #63
    6de8:	and	x9, x9, #0x1
    6dec:	mov	x10, #0x8                   	// #8
    6df0:	mul	x9, x10, x9
    6df4:	add	x8, x8, x9
    6df8:	str	x8, [sp, #88]
    6dfc:	ldr	x8, [sp, #96]
    6e00:	lsl	x8, x8, #1
    6e04:	str	x8, [sp, #96]
    6e08:	ldr	x8, [sp, #88]
    6e0c:	ldr	x8, [x8]
    6e10:	cbz	x8, 6e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x37c4>
    6e14:	ldr	x8, [sp, #88]
    6e18:	ldr	x8, [x8]
    6e1c:	str	x8, [sp, #104]
    6e20:	b	6e7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x381c>
    6e24:	ldr	x8, [sp, #88]
    6e28:	ldur	x9, [x29, #-16]
    6e2c:	ldr	x9, [x9, #24]
    6e30:	cmp	x8, x9
    6e34:	cset	w10, cs  // cs = hs, nlast
    6e38:	and	w10, w10, #0x1
    6e3c:	mov	w0, w10
    6e40:	sxtw	x8, w0
    6e44:	cbz	x8, 6e78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3818>
    6e48:	ldr	x8, [sp, #152]
    6e4c:	ldr	x9, [sp, #88]
    6e50:	str	x8, [x9]
    6e54:	ldr	x8, [sp, #104]
    6e58:	ldr	x9, [sp, #152]
    6e5c:	str	x8, [x9, #48]
    6e60:	ldr	x8, [sp, #152]
    6e64:	ldr	x9, [sp, #152]
    6e68:	str	x8, [x9, #24]
    6e6c:	ldr	x9, [sp, #152]
    6e70:	str	x8, [x9, #16]
    6e74:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    6e78:	bl	1b10 <abort@plt>
    6e7c:	b	6f14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b4>
    6e80:	ldr	x8, [sp, #104]
    6e84:	ldr	x8, [x8, #16]
    6e88:	str	x8, [sp, #80]
    6e8c:	ldr	x8, [sp, #104]
    6e90:	ldur	x9, [x29, #-16]
    6e94:	ldr	x9, [x9, #24]
    6e98:	mov	w10, #0x0                   	// #0
    6e9c:	cmp	x8, x9
    6ea0:	str	w10, [sp, #12]
    6ea4:	b.cc	6ec0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3860>  // b.lo, b.ul, b.last
    6ea8:	ldr	x8, [sp, #80]
    6eac:	ldur	x9, [x29, #-16]
    6eb0:	ldr	x9, [x9, #24]
    6eb4:	cmp	x8, x9
    6eb8:	cset	w10, cs  // cs = hs, nlast
    6ebc:	str	w10, [sp, #12]
    6ec0:	ldr	w8, [sp, #12]
    6ec4:	and	w8, w8, #0x1
    6ec8:	mov	w0, w8
    6ecc:	sxtw	x9, w0
    6ed0:	cbz	x9, 6f10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b0>
    6ed4:	ldr	x8, [sp, #152]
    6ed8:	ldr	x9, [sp, #80]
    6edc:	str	x8, [x9, #24]
    6ee0:	ldr	x9, [sp, #104]
    6ee4:	str	x8, [x9, #16]
    6ee8:	ldr	x8, [sp, #80]
    6eec:	ldr	x9, [sp, #152]
    6ef0:	str	x8, [x9, #16]
    6ef4:	ldr	x8, [sp, #104]
    6ef8:	ldr	x9, [sp, #152]
    6efc:	str	x8, [x9, #24]
    6f00:	ldr	x8, [sp, #152]
    6f04:	mov	x9, xzr
    6f08:	str	x9, [x8, #48]
    6f0c:	b	6f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38b8>
    6f10:	bl	1b10 <abort@plt>
    6f14:	b	6dc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3760>
    6f18:	ldur	x8, [x29, #-48]
    6f1c:	add	x0, x8, #0x10
    6f20:	ldp	x29, x30, [sp, #384]
    6f24:	add	sp, sp, #0x190
    6f28:	ret
    6f2c:	sub	sp, sp, #0x170
    6f30:	stp	x29, x30, [sp, #336]
    6f34:	str	x28, [sp, #352]
    6f38:	add	x29, sp, #0x150
    6f3c:	mov	x8, #0x28                  	// #40
    6f40:	mov	x9, xzr
    6f44:	stur	x0, [x29, #-8]
    6f48:	stur	x1, [x29, #-16]
    6f4c:	stur	x2, [x29, #-24]
    6f50:	stur	w3, [x29, #-28]
    6f54:	ldur	x10, [x29, #-8]
    6f58:	ldr	x10, [x10, #40]
    6f5c:	stur	x10, [x29, #-40]
    6f60:	ldur	x0, [x29, #-8]
    6f64:	ldur	x1, [x29, #-40]
    6f68:	str	x8, [sp, #56]
    6f6c:	str	x9, [sp, #48]
    6f70:	bl	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    6f74:	stur	x0, [x29, #-48]
    6f78:	ldur	x8, [x29, #-48]
    6f7c:	ldr	x8, [x8]
    6f80:	ldur	x9, [x29, #-48]
    6f84:	ldr	x9, [x9, #8]
    6f88:	add	x8, x8, x9
    6f8c:	stur	x8, [x29, #-56]
    6f90:	ldr	x8, [sp, #56]
    6f94:	stur	x8, [x29, #-64]
    6f98:	ldur	x9, [x29, #-56]
    6f9c:	ldur	x10, [x29, #-64]
    6fa0:	add	x10, x10, #0x20
    6fa4:	add	x10, x10, #0x7
    6fa8:	ldr	x11, [sp, #48]
    6fac:	subs	x10, x11, x10
    6fb0:	add	x9, x9, x10
    6fb4:	stur	x9, [x29, #-72]
    6fb8:	ldur	x9, [x29, #-72]
    6fbc:	add	x9, x9, #0x10
    6fc0:	and	x9, x9, #0x7
    6fc4:	cbnz	x9, 6fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3974>
    6fc8:	mov	x8, xzr
    6fcc:	str	x8, [sp, #40]
    6fd0:	b	6ff0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3990>
    6fd4:	ldur	x8, [x29, #-72]
    6fd8:	add	x8, x8, #0x10
    6fdc:	and	x8, x8, #0x7
    6fe0:	mov	x9, #0x8                   	// #8
    6fe4:	subs	x8, x9, x8
    6fe8:	and	x8, x8, #0x7
    6fec:	str	x8, [sp, #40]
    6ff0:	ldr	x8, [sp, #40]
    6ff4:	stur	x8, [x29, #-80]
    6ff8:	ldur	x8, [x29, #-72]
    6ffc:	ldur	x9, [x29, #-80]
    7000:	add	x8, x8, x9
    7004:	stur	x8, [x29, #-88]
    7008:	ldur	x8, [x29, #-88]
    700c:	ldur	x9, [x29, #-40]
    7010:	add	x9, x9, #0x20
    7014:	cmp	x8, x9
    7018:	b.cs	7028 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x39c8>  // b.hs, b.nlast
    701c:	ldur	x8, [x29, #-40]
    7020:	str	x8, [sp, #32]
    7024:	b	7030 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x39d0>
    7028:	ldur	x8, [x29, #-88]
    702c:	str	x8, [sp, #32]
    7030:	ldr	x8, [sp, #32]
    7034:	stur	x8, [x29, #-96]
    7038:	ldur	x8, [x29, #-96]
    703c:	stur	x8, [x29, #-104]
    7040:	ldur	x8, [x29, #-104]
    7044:	add	x8, x8, #0x10
    7048:	stur	x8, [x29, #-112]
    704c:	ldur	x8, [x29, #-104]
    7050:	ldur	x9, [x29, #-64]
    7054:	add	x8, x8, x9
    7058:	stur	x8, [x29, #-120]
    705c:	ldur	x8, [x29, #-120]
    7060:	stur	x8, [x29, #-128]
    7064:	stur	wzr, [x29, #-132]
    7068:	ldur	x0, [x29, #-8]
    706c:	ldur	x1, [x29, #-16]
    7070:	ldur	x8, [x29, #-24]
    7074:	subs	x2, x8, #0x48
    7078:	bl	63ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4c>
    707c:	ldur	x8, [x29, #-64]
    7080:	orr	x8, x8, #0x1
    7084:	orr	x8, x8, #0x2
    7088:	ldur	x9, [x29, #-104]
    708c:	str	x8, [x9, #8]
    7090:	ldur	x8, [x29, #-112]
    7094:	ldur	x9, [x29, #-8]
    7098:	add	x10, x9, #0x398
    709c:	ldr	q0, [x10]
    70a0:	str	q0, [x8]
    70a4:	add	x9, x9, #0x3a8
    70a8:	ldr	q0, [x9]
    70ac:	str	q0, [x8, #16]
    70b0:	ldur	x8, [x29, #-16]
    70b4:	ldur	x9, [x29, #-8]
    70b8:	str	x8, [x9, #920]
    70bc:	ldur	x8, [x29, #-24]
    70c0:	ldur	x9, [x29, #-8]
    70c4:	str	x8, [x9, #928]
    70c8:	ldur	w11, [x29, #-28]
    70cc:	mov	w8, w11
    70d0:	cmp	x8, #0x1
    70d4:	b.eq	70dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3a7c>  // b.none
    70d8:	bl	1b10 <abort@plt>
    70dc:	ldur	x8, [x29, #-8]
    70e0:	ldr	x8, [x8, #920]
    70e4:	ldur	x9, [x29, #-8]
    70e8:	ldr	x9, [x9, #928]
    70ec:	add	x8, x8, x9
    70f0:	ldur	x8, [x8, #-8]
    70f4:	ldur	x9, [x29, #-8]
    70f8:	str	x8, [x9, #944]
    70fc:	ldur	x8, [x29, #-8]
    7100:	ldr	x8, [x8, #920]
    7104:	ldur	x9, [x29, #-8]
    7108:	ldr	x9, [x9, #944]
    710c:	add	x8, x8, x9
    7110:	ldur	x9, [x29, #-8]
    7114:	ldr	x9, [x9, #928]
    7118:	add	x8, x8, x9
    711c:	ldur	x8, [x8, #-8]
    7120:	ldur	x9, [x29, #-8]
    7124:	ldr	x9, [x9, #944]
    7128:	cmp	x8, x9
    712c:	b.eq	7134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3ad4>  // b.none
    7130:	bl	1b10 <abort@plt>
    7134:	ldur	x8, [x29, #-8]
    7138:	ldr	x8, [x8, #920]
    713c:	ldur	x9, [x29, #-8]
    7140:	ldr	x9, [x9, #928]
    7144:	add	x8, x8, x9
    7148:	stur	xzr, [x8, #-8]
    714c:	ldur	x8, [x29, #-112]
    7150:	ldur	x9, [x29, #-8]
    7154:	str	x8, [x9, #936]
    7158:	ldur	x8, [x29, #-128]
    715c:	add	x8, x8, #0x8
    7160:	stur	x8, [x29, #-144]
    7164:	ldur	x8, [x29, #-128]
    7168:	mov	x9, #0xb                   	// #11
    716c:	str	x9, [x8, #8]
    7170:	ldur	w10, [x29, #-132]
    7174:	add	w10, w10, #0x1
    7178:	stur	w10, [x29, #-132]
    717c:	ldur	x8, [x29, #-144]
    7180:	add	x8, x8, #0x8
    7184:	ldur	x9, [x29, #-56]
    7188:	cmp	x8, x9
    718c:	b.cs	719c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b3c>  // b.hs, b.nlast
    7190:	ldur	x8, [x29, #-144]
    7194:	stur	x8, [x29, #-128]
    7198:	b	71a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b40>
    719c:	b	71a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b44>
    71a0:	b	7158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3af8>
    71a4:	ldur	x8, [x29, #-96]
    71a8:	ldur	x9, [x29, #-40]
    71ac:	cmp	x8, x9
    71b0:	b.eq	7664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4004>  // b.none
    71b4:	ldur	x8, [x29, #-40]
    71b8:	stur	x8, [x29, #-152]
    71bc:	ldur	x8, [x29, #-96]
    71c0:	ldur	x9, [x29, #-40]
    71c4:	subs	x8, x8, x9
    71c8:	stur	x8, [x29, #-160]
    71cc:	ldur	x8, [x29, #-152]
    71d0:	ldur	x9, [x29, #-160]
    71d4:	add	x8, x8, x9
    71d8:	str	x8, [sp, #168]
    71dc:	ldr	x8, [sp, #168]
    71e0:	ldr	x9, [x8, #8]
    71e4:	and	x9, x9, #0xfffffffffffffffe
    71e8:	str	x9, [x8, #8]
    71ec:	ldur	x8, [x29, #-160]
    71f0:	orr	x8, x8, #0x1
    71f4:	ldur	x9, [x29, #-152]
    71f8:	str	x8, [x9, #8]
    71fc:	ldur	x8, [x29, #-160]
    7200:	ldur	x9, [x29, #-152]
    7204:	ldur	x10, [x29, #-160]
    7208:	str	x8, [x9, x10]
    720c:	ldur	x8, [x29, #-160]
    7210:	lsr	x8, x8, #3
    7214:	cmp	x8, #0x20
    7218:	b.cs	72fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c9c>  // b.hs, b.nlast
    721c:	ldur	x8, [x29, #-160]
    7220:	lsr	x8, x8, #3
    7224:	str	x8, [sp, #160]
    7228:	ldur	x8, [x29, #-8]
    722c:	add	x8, x8, #0x40
    7230:	ldr	x9, [sp, #160]
    7234:	lsl	x9, x9, #1
    7238:	mov	x10, #0x8                   	// #8
    723c:	mul	x9, x10, x9
    7240:	add	x8, x8, x9
    7244:	str	x8, [sp, #152]
    7248:	ldr	x8, [sp, #152]
    724c:	str	x8, [sp, #144]
    7250:	ldur	x8, [x29, #-8]
    7254:	ldr	w11, [x8]
    7258:	ldr	x8, [sp, #160]
    725c:	mov	w12, #0x1                   	// #1
    7260:	lsl	w8, w12, w8
    7264:	and	w8, w11, w8
    7268:	cbnz	w8, 728c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c2c>
    726c:	ldr	x8, [sp, #160]
    7270:	mov	w9, #0x1                   	// #1
    7274:	lsl	w8, w9, w8
    7278:	ldur	x10, [x29, #-8]
    727c:	ldr	w9, [x10]
    7280:	orr	w8, w9, w8
    7284:	str	w8, [x10]
    7288:	b	72c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c68>
    728c:	ldr	x8, [sp, #152]
    7290:	ldr	x8, [x8, #16]
    7294:	ldur	x9, [x29, #-8]
    7298:	ldr	x9, [x9, #24]
    729c:	cmp	x8, x9
    72a0:	cset	w10, cs  // cs = hs, nlast
    72a4:	and	w10, w10, #0x1
    72a8:	mov	w0, w10
    72ac:	sxtw	x8, w0
    72b0:	cbz	x8, 72c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c64>
    72b4:	ldr	x8, [sp, #152]
    72b8:	ldr	x8, [x8, #16]
    72bc:	str	x8, [sp, #144]
    72c0:	b	72c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3c68>
    72c4:	bl	1b10 <abort@plt>
    72c8:	ldur	x8, [x29, #-152]
    72cc:	ldr	x9, [sp, #152]
    72d0:	str	x8, [x9, #16]
    72d4:	ldur	x8, [x29, #-152]
    72d8:	ldr	x9, [sp, #144]
    72dc:	str	x8, [x9, #24]
    72e0:	ldr	x8, [sp, #144]
    72e4:	ldur	x9, [x29, #-152]
    72e8:	str	x8, [x9, #16]
    72ec:	ldr	x8, [sp, #152]
    72f0:	ldur	x9, [x29, #-152]
    72f4:	str	x8, [x9, #24]
    72f8:	b	7664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4004>
    72fc:	ldur	x8, [x29, #-152]
    7300:	str	x8, [sp, #136]
    7304:	ldur	x8, [x29, #-160]
    7308:	lsr	x8, x8, #8
    730c:	str	x8, [sp, #112]
    7310:	ldr	x8, [sp, #112]
    7314:	cbnz	x8, 7320 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3cc0>
    7318:	str	xzr, [sp, #120]
    731c:	b	7410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3db0>
    7320:	ldr	x8, [sp, #112]
    7324:	mov	x9, #0xffff                	// #65535
    7328:	cmp	x8, x9
    732c:	b.ls	733c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3cdc>  // b.plast
    7330:	mov	x8, #0x1f                  	// #31
    7334:	str	x8, [sp, #120]
    7338:	b	7410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3db0>
    733c:	ldr	x8, [sp, #112]
    7340:	str	w8, [sp, #108]
    7344:	ldr	w8, [sp, #108]
    7348:	subs	w8, w8, #0x100
    734c:	mov	x9, #0x10                  	// #16
    7350:	lsr	w8, w8, #16
    7354:	and	w8, w8, #0x8
    7358:	str	w8, [sp, #104]
    735c:	ldr	w8, [sp, #104]
    7360:	ldr	w10, [sp, #108]
    7364:	lsl	w8, w10, w8
    7368:	str	w8, [sp, #108]
    736c:	subs	w8, w8, #0x1, lsl #12
    7370:	mov	x0, x9
    7374:	lsr	w8, w8, w0
    7378:	and	w8, w8, #0x4
    737c:	str	w8, [sp, #100]
    7380:	ldr	w8, [sp, #100]
    7384:	ldr	w10, [sp, #104]
    7388:	add	w8, w10, w8
    738c:	str	w8, [sp, #104]
    7390:	ldr	w8, [sp, #100]
    7394:	ldr	w10, [sp, #108]
    7398:	lsl	w8, w10, w8
    739c:	str	w8, [sp, #108]
    73a0:	subs	w8, w8, #0x4, lsl #12
    73a4:	lsr	w8, w8, w9
    73a8:	and	w8, w8, #0x2
    73ac:	str	w8, [sp, #100]
    73b0:	ldr	w9, [sp, #104]
    73b4:	add	w8, w9, w8
    73b8:	str	w8, [sp, #104]
    73bc:	ldr	w8, [sp, #104]
    73c0:	mov	w9, #0xe                   	// #14
    73c4:	subs	w8, w9, w8
    73c8:	ldr	w9, [sp, #100]
    73cc:	ldr	w10, [sp, #108]
    73d0:	lsl	w9, w10, w9
    73d4:	str	w9, [sp, #108]
    73d8:	add	w8, w8, w9, lsr #15
    73dc:	str	w8, [sp, #100]
    73e0:	ldr	w8, [sp, #100]
    73e4:	lsl	w8, w8, #1
    73e8:	mov	w11, w8
    73ec:	ubfx	x11, x11, #0, #32
    73f0:	ldur	x12, [x29, #-160]
    73f4:	ldr	w8, [sp, #100]
    73f8:	add	w8, w8, #0x7
    73fc:	mov	w13, w8
    7400:	lsr	x12, x12, x13
    7404:	and	x12, x12, #0x1
    7408:	add	x11, x11, x12
    740c:	str	x11, [sp, #120]
    7410:	ldur	x8, [x29, #-8]
    7414:	add	x8, x8, #0x250
    7418:	ldr	x9, [sp, #120]
    741c:	mov	x10, #0x8                   	// #8
    7420:	mul	x9, x10, x9
    7424:	add	x8, x8, x9
    7428:	str	x8, [sp, #128]
    742c:	ldr	x8, [sp, #120]
    7430:	ldr	x9, [sp, #136]
    7434:	str	x8, [x9, #56]
    7438:	ldr	x8, [sp, #136]
    743c:	mov	x9, xzr
    7440:	str	x9, [x8, #40]
    7444:	ldr	x8, [sp, #136]
    7448:	str	x9, [x8, #32]
    744c:	ldur	x8, [x29, #-8]
    7450:	ldr	w11, [x8, #4]
    7454:	ldr	x8, [sp, #120]
    7458:	mov	w12, #0x1                   	// #1
    745c:	lsl	w8, w12, w8
    7460:	and	w8, w11, w8
    7464:	cbnz	w8, 74b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3e54>
    7468:	ldr	x8, [sp, #120]
    746c:	mov	w9, #0x1                   	// #1
    7470:	lsl	w8, w9, w8
    7474:	ldur	x10, [x29, #-8]
    7478:	ldr	w9, [x10, #4]
    747c:	orr	w8, w9, w8
    7480:	str	w8, [x10, #4]
    7484:	ldr	x10, [sp, #136]
    7488:	ldr	x11, [sp, #128]
    748c:	str	x10, [x11]
    7490:	ldr	x10, [sp, #128]
    7494:	ldr	x11, [sp, #136]
    7498:	str	x10, [x11, #48]
    749c:	ldr	x10, [sp, #136]
    74a0:	ldr	x11, [sp, #136]
    74a4:	str	x10, [x11, #24]
    74a8:	ldr	x11, [sp, #136]
    74ac:	str	x10, [x11, #16]
    74b0:	b	7664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4004>
    74b4:	ldr	x8, [sp, #128]
    74b8:	ldr	x8, [x8]
    74bc:	str	x8, [sp, #88]
    74c0:	ldur	x8, [x29, #-160]
    74c4:	ldr	x9, [sp, #120]
    74c8:	cmp	x9, #0x1f
    74cc:	str	x8, [sp, #24]
    74d0:	b.ne	74e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3e80>  // b.any
    74d4:	mov	x8, xzr
    74d8:	str	x8, [sp, #16]
    74dc:	b	74fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3e9c>
    74e0:	ldr	x8, [sp, #120]
    74e4:	lsr	x8, x8, #1
    74e8:	add	x8, x8, #0x8
    74ec:	subs	x8, x8, #0x2
    74f0:	mov	x9, #0x3f                  	// #63
    74f4:	subs	x8, x9, x8
    74f8:	str	x8, [sp, #16]
    74fc:	ldr	x8, [sp, #16]
    7500:	ldr	x9, [sp, #24]
    7504:	lsl	x8, x9, x8
    7508:	str	x8, [sp, #80]
    750c:	ldr	x8, [sp, #88]
    7510:	ldr	x8, [x8, #8]
    7514:	and	x8, x8, #0xfffffffffffffffc
    7518:	ldur	x9, [x29, #-160]
    751c:	cmp	x8, x9
    7520:	b.eq	75cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f6c>  // b.none
    7524:	ldr	x8, [sp, #88]
    7528:	add	x8, x8, #0x20
    752c:	ldr	x9, [sp, #80]
    7530:	lsr	x9, x9, #63
    7534:	and	x9, x9, #0x1
    7538:	mov	x10, #0x8                   	// #8
    753c:	mul	x9, x10, x9
    7540:	add	x8, x8, x9
    7544:	str	x8, [sp, #72]
    7548:	ldr	x8, [sp, #80]
    754c:	lsl	x8, x8, #1
    7550:	str	x8, [sp, #80]
    7554:	ldr	x8, [sp, #72]
    7558:	ldr	x8, [x8]
    755c:	cbz	x8, 7570 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f10>
    7560:	ldr	x8, [sp, #72]
    7564:	ldr	x8, [x8]
    7568:	str	x8, [sp, #88]
    756c:	b	75c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f68>
    7570:	ldr	x8, [sp, #72]
    7574:	ldur	x9, [x29, #-8]
    7578:	ldr	x9, [x9, #24]
    757c:	cmp	x8, x9
    7580:	cset	w10, cs  // cs = hs, nlast
    7584:	and	w10, w10, #0x1
    7588:	mov	w0, w10
    758c:	sxtw	x8, w0
    7590:	cbz	x8, 75c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f64>
    7594:	ldr	x8, [sp, #136]
    7598:	ldr	x9, [sp, #72]
    759c:	str	x8, [x9]
    75a0:	ldr	x8, [sp, #88]
    75a4:	ldr	x9, [sp, #136]
    75a8:	str	x8, [x9, #48]
    75ac:	ldr	x8, [sp, #136]
    75b0:	ldr	x9, [sp, #136]
    75b4:	str	x8, [x9, #24]
    75b8:	ldr	x9, [sp, #136]
    75bc:	str	x8, [x9, #16]
    75c0:	b	7664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4004>
    75c4:	bl	1b10 <abort@plt>
    75c8:	b	7660 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4000>
    75cc:	ldr	x8, [sp, #88]
    75d0:	ldr	x8, [x8, #16]
    75d4:	str	x8, [sp, #64]
    75d8:	ldr	x8, [sp, #88]
    75dc:	ldur	x9, [x29, #-8]
    75e0:	ldr	x9, [x9, #24]
    75e4:	mov	w10, #0x0                   	// #0
    75e8:	cmp	x8, x9
    75ec:	str	w10, [sp, #12]
    75f0:	b.cc	760c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3fac>  // b.lo, b.ul, b.last
    75f4:	ldr	x8, [sp, #64]
    75f8:	ldur	x9, [x29, #-8]
    75fc:	ldr	x9, [x9, #24]
    7600:	cmp	x8, x9
    7604:	cset	w10, cs  // cs = hs, nlast
    7608:	str	w10, [sp, #12]
    760c:	ldr	w8, [sp, #12]
    7610:	and	w8, w8, #0x1
    7614:	mov	w0, w8
    7618:	sxtw	x9, w0
    761c:	cbz	x9, 765c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3ffc>
    7620:	ldr	x8, [sp, #136]
    7624:	ldr	x9, [sp, #64]
    7628:	str	x8, [x9, #24]
    762c:	ldr	x9, [sp, #88]
    7630:	str	x8, [x9, #16]
    7634:	ldr	x8, [sp, #64]
    7638:	ldr	x9, [sp, #136]
    763c:	str	x8, [x9, #16]
    7640:	ldr	x8, [sp, #88]
    7644:	ldr	x9, [sp, #136]
    7648:	str	x8, [x9, #24]
    764c:	ldr	x8, [sp, #136]
    7650:	mov	x9, xzr
    7654:	str	x9, [x8, #48]
    7658:	b	7664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4004>
    765c:	bl	1b10 <abort@plt>
    7660:	b	750c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3eac>
    7664:	ldr	x28, [sp, #352]
    7668:	ldp	x29, x30, [sp, #336]
    766c:	add	sp, sp, #0x170
    7670:	ret
    7674:	sub	sp, sp, #0xb0
    7678:	stp	x29, x30, [sp, #160]
    767c:	add	x29, sp, #0xa0
    7680:	mov	x8, xzr
    7684:	adrp	x0, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7688:	add	x0, x0, #0x584
    768c:	add	x1, sp, #0x20
    7690:	str	x8, [sp, #16]
    7694:	str	xzr, [sp, #8]
    7698:	bl	1a30 <statfs@plt>
    769c:	cmp	w0, #0x0
    76a0:	cset	w9, lt  // lt = tstop
    76a4:	tbnz	w9, #0, 76c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4068>
    76a8:	ldr	x8, [sp, #32]
    76ac:	mov	w9, #0xff8c                	// #65420
    76b0:	movk	w9, #0xf97c, lsl #16
    76b4:	cmp	w8, w9
    76b8:	b.ne	76c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4068>  // b.any
    76bc:	mov	w8, #0x1                   	// #1
    76c0:	stur	w8, [x29, #-4]
    76c4:	b	7798 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4138>
    76c8:	adrp	x0, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    76cc:	add	x0, x0, #0x58d
    76d0:	adrp	x1, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    76d4:	add	x1, x1, #0x59a
    76d8:	bl	1a50 <fopen@plt>
    76dc:	str	x0, [sp, #24]
    76e0:	ldr	x8, [sp, #24]
    76e4:	cbnz	x8, 76f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4090>
    76e8:	stur	wzr, [x29, #-4]
    76ec:	b	7798 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4138>
    76f0:	ldr	x2, [sp, #24]
    76f4:	add	x0, sp, #0x10
    76f8:	add	x1, sp, #0x8
    76fc:	bl	1b50 <getline@plt>
    7700:	cmp	x0, #0x0
    7704:	cset	w8, lt  // lt = tstop
    7708:	tbnz	w8, #0, 7784 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4124>
    770c:	ldr	x0, [sp, #16]
    7710:	mov	w1, #0x20                  	// #32
    7714:	bl	1bb0 <strchr@plt>
    7718:	str	x0, [sp]
    771c:	ldr	x8, [sp]
    7720:	cbnz	x8, 7728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x40c8>
    7724:	b	7784 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4124>
    7728:	ldr	x8, [sp]
    772c:	add	x0, x8, #0x1
    7730:	mov	w1, #0x20                  	// #32
    7734:	bl	1bb0 <strchr@plt>
    7738:	str	x0, [sp]
    773c:	ldr	x8, [sp]
    7740:	cbnz	x8, 7748 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x40e8>
    7744:	b	7784 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4124>
    7748:	ldr	x8, [sp]
    774c:	add	x0, x8, #0x1
    7750:	adrp	x1, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7754:	add	x1, x1, #0x59c
    7758:	mov	x2, #0xa                   	// #10
    775c:	bl	1a70 <strncmp@plt>
    7760:	cbnz	w0, 7780 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4120>
    7764:	ldr	x0, [sp, #16]
    7768:	bl	1b60 <free@plt>
    776c:	ldr	x0, [sp, #24]
    7770:	bl	1a40 <fclose@plt>
    7774:	mov	w8, #0x1                   	// #1
    7778:	stur	w8, [x29, #-4]
    777c:	b	7798 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4138>
    7780:	b	76f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4090>
    7784:	ldr	x0, [sp, #16]
    7788:	bl	1b60 <free@plt>
    778c:	ldr	x0, [sp, #24]
    7790:	bl	1a40 <fclose@plt>
    7794:	stur	wzr, [x29, #-4]
    7798:	ldur	w0, [x29, #-4]
    779c:	ldp	x29, x30, [sp, #160]
    77a0:	add	sp, sp, #0xb0
    77a4:	ret
    77a8:	sub	sp, sp, #0x50
    77ac:	stp	x29, x30, [sp, #64]
    77b0:	add	x29, sp, #0x40
    77b4:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    77b8:	add	x8, x8, #0x190
    77bc:	mov	w9, #0xffffffff            	// #-1
    77c0:	adrp	x10, 1c000 <memcpy@GLIBC_2.17>
    77c4:	add	x10, x10, #0x660
    77c8:	stur	x0, [x29, #-16]
    77cc:	stur	x1, [x29, #-24]
    77d0:	stur	w2, [x29, #-28]
    77d4:	str	w3, [sp, #32]
    77d8:	str	x4, [sp, #24]
    77dc:	ldr	w11, [x8]
    77e0:	cmp	w11, w9
    77e4:	str	x8, [sp, #8]
    77e8:	str	x10, [sp]
    77ec:	b.ne	7824 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x41c4>  // b.any
    77f0:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    77f4:	add	x8, x8, #0x698
    77f8:	str	wzr, [x8]
    77fc:	bl	79c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4368>
    7800:	ldr	x8, [sp, #8]
    7804:	str	w0, [x8]
    7808:	ldr	w9, [x8]
    780c:	mov	w10, #0xffffffff            	// #-1
    7810:	cmp	w9, w10
    7814:	b.ne	7824 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x41c4>  // b.any
    7818:	mov	x8, #0xffffffffffffffff    	// #-1
    781c:	stur	x8, [x29, #-8]
    7820:	b	79b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4358>
    7824:	ldr	x8, [sp]
    7828:	ldr	x9, [x8]
    782c:	str	x9, [sp, #24]
    7830:	ldr	x9, [sp, #8]
    7834:	ldr	w0, [x9]
    7838:	ldr	x1, [sp, #24]
    783c:	ldur	x2, [x29, #-24]
    7840:	bl	7a80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4420>
    7844:	cbz	w0, 7854 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x41f4>
    7848:	mov	x8, #0xffffffffffffffff    	// #-1
    784c:	stur	x8, [x29, #-8]
    7850:	b	79b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4358>
    7854:	ldr	w8, [sp, #32]
    7858:	mov	w9, #0xffffffdd            	// #-35
    785c:	and	w8, w8, w9
    7860:	str	w8, [sp, #32]
    7864:	ldr	w8, [sp, #32]
    7868:	orr	w8, w8, #0x1
    786c:	str	w8, [sp, #32]
    7870:	ldur	x1, [x29, #-24]
    7874:	ldur	w8, [x29, #-28]
    7878:	and	w8, w8, #0xfffffffd
    787c:	orr	w2, w8, #0x4
    7880:	ldr	w3, [sp, #32]
    7884:	ldr	x10, [sp, #8]
    7888:	ldr	w4, [x10]
    788c:	ldr	x5, [sp, #24]
    7890:	mov	x11, xzr
    7894:	mov	x0, x11
    7898:	bl	1b40 <mmap@plt>
    789c:	str	x0, [sp, #16]
    78a0:	ldr	x10, [sp, #16]
    78a4:	mov	x11, #0xffffffffffffffff    	// #-1
    78a8:	cmp	x10, x11
    78ac:	b.ne	78e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4288>  // b.any
    78b0:	ldr	x8, [sp, #24]
    78b4:	cbnz	x8, 78c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4268>
    78b8:	ldr	x8, [sp, #8]
    78bc:	ldr	w0, [x8]
    78c0:	bl	1ae0 <close@plt>
    78c4:	b	77fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x419c>
    78c8:	ldr	x8, [sp, #8]
    78cc:	ldr	w0, [x8]
    78d0:	ldr	x1, [sp, #24]
    78d4:	bl	1c00 <ftruncate@plt>
    78d8:	cbz	w0, 78dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x427c>
    78dc:	mov	x8, #0xffffffffffffffff    	// #-1
    78e0:	stur	x8, [x29, #-8]
    78e4:	b	79b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4358>
    78e8:	ldr	x8, [sp, #24]
    78ec:	cbnz	x8, 791c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x42bc>
    78f0:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    78f4:	add	x8, x8, #0x698
    78f8:	ldrsw	x8, [x8]
    78fc:	mov	x9, #0x18                  	// #24
    7900:	mul	x8, x9, x8
    7904:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    7908:	add	x9, x9, #0x198
    790c:	add	x8, x9, x8
    7910:	ldr	w10, [x8, #16]
    7914:	cbz	w10, 791c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x42bc>
    7918:	bl	7bb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4550>
    791c:	ldur	x0, [x29, #-16]
    7920:	ldur	x1, [x29, #-24]
    7924:	ldur	w2, [x29, #-28]
    7928:	ldr	w3, [sp, #32]
    792c:	ldr	x8, [sp, #8]
    7930:	ldr	w4, [x8]
    7934:	ldr	x5, [sp, #24]
    7938:	bl	1b40 <mmap@plt>
    793c:	stur	x0, [x29, #-16]
    7940:	ldur	x8, [x29, #-16]
    7944:	mov	x9, #0xffffffffffffffff    	// #-1
    7948:	cmp	x8, x9
    794c:	b.ne	7980 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4320>  // b.any
    7950:	ldr	x0, [sp, #16]
    7954:	ldur	x1, [x29, #-24]
    7958:	bl	1bc0 <munmap@plt>
    795c:	ldr	x8, [sp, #8]
    7960:	ldr	w9, [x8]
    7964:	ldr	x1, [sp, #24]
    7968:	mov	w0, w9
    796c:	bl	1c00 <ftruncate@plt>
    7970:	cbz	w0, 7974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4314>
    7974:	ldur	x8, [x29, #-16]
    7978:	stur	x8, [x29, #-8]
    797c:	b	79b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4358>
    7980:	ldr	x8, [sp, #16]
    7984:	ldur	x9, [x29, #-16]
    7988:	subs	x8, x8, x9
    798c:	ldur	x9, [x29, #-16]
    7990:	ldur	x10, [x29, #-24]
    7994:	add	x9, x9, x10
    7998:	stur	x8, [x9, #-8]
    799c:	ldur	x8, [x29, #-24]
    79a0:	ldr	x9, [sp]
    79a4:	ldr	x10, [x9]
    79a8:	add	x8, x10, x8
    79ac:	str	x8, [x9]
    79b0:	ldur	x8, [x29, #-16]
    79b4:	stur	x8, [x29, #-8]
    79b8:	ldur	x0, [x29, #-8]
    79bc:	ldp	x29, x30, [sp, #64]
    79c0:	add	sp, sp, #0x50
    79c4:	ret
    79c8:	sub	sp, sp, #0x30
    79cc:	stp	x29, x30, [sp, #32]
    79d0:	add	x29, sp, #0x20
    79d4:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    79d8:	add	x8, x8, #0x698
    79dc:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    79e0:	add	x9, x9, #0x198
    79e4:	str	x8, [sp, #16]
    79e8:	str	x9, [sp, #8]
    79ec:	ldr	x8, [sp, #16]
    79f0:	ldrsw	x9, [x8]
    79f4:	mov	x10, #0x18                  	// #24
    79f8:	mul	x9, x10, x9
    79fc:	ldr	x11, [sp, #8]
    7a00:	add	x9, x11, x9
    7a04:	ldr	x9, [x9]
    7a08:	ldrsw	x12, [x8]
    7a0c:	mul	x12, x10, x12
    7a10:	add	x12, x11, x12
    7a14:	ldr	x0, [x12, #8]
    7a18:	str	x10, [sp]
    7a1c:	blr	x9
    7a20:	stur	w0, [x29, #-4]
    7a24:	ldr	x8, [sp, #16]
    7a28:	ldrsw	x9, [x8]
    7a2c:	ldr	x10, [sp]
    7a30:	mul	x9, x10, x9
    7a34:	ldr	x11, [sp, #8]
    7a38:	add	x9, x11, x9
    7a3c:	ldr	w13, [x9, #16]
    7a40:	cbz	w13, 7a54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x43f4>
    7a44:	ldur	w8, [x29, #-4]
    7a48:	mov	w9, #0xffffffff            	// #-1
    7a4c:	cmp	w8, w9
    7a50:	b.ne	7a60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4400>  // b.any
    7a54:	bl	7bb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4550>
    7a58:	cbz	w0, 7a60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4400>
    7a5c:	b	7a70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4410>
    7a60:	ldur	w8, [x29, #-4]
    7a64:	mov	w9, #0xffffffff            	// #-1
    7a68:	cmp	w8, w9
    7a6c:	b.eq	79ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x438c>  // b.none
    7a70:	ldur	w0, [x29, #-4]
    7a74:	ldp	x29, x30, [sp, #32]
    7a78:	add	sp, sp, #0x30
    7a7c:	ret
    7a80:	stp	x29, x30, [sp, #-16]!
    7a84:	mov	x29, sp
    7a88:	sub	sp, sp, #0x50
    7a8c:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    7a90:	add	x8, x8, #0x6a0
    7a94:	stur	w0, [x29, #-8]
    7a98:	stur	x1, [x29, #-16]
    7a9c:	stur	x2, [x29, #-24]
    7aa0:	ldr	x9, [x8]
    7aa4:	stur	x8, [x29, #-64]
    7aa8:	cbnz	x9, 7abc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x445c>
    7aac:	mov	w0, #0x1e                  	// #30
    7ab0:	bl	1be0 <sysconf@plt>
    7ab4:	ldur	x8, [x29, #-64]
    7ab8:	str	x0, [x8]
    7abc:	ldur	x8, [x29, #-64]
    7ac0:	ldr	x9, [x8]
    7ac4:	mov	x10, sp
    7ac8:	stur	x10, [x29, #-32]
    7acc:	mov	x10, #0x1                   	// #1
    7ad0:	mul	x10, x9, x10
    7ad4:	add	x10, x10, #0xf
    7ad8:	and	x10, x10, #0xfffffffffffffff0
    7adc:	mov	x11, sp
    7ae0:	subs	x10, x11, x10
    7ae4:	mov	sp, x10
    7ae8:	stur	x9, [x29, #-40]
    7aec:	ldr	x2, [x8]
    7af0:	mov	x0, x10
    7af4:	mov	w12, wzr
    7af8:	mov	w1, w12
    7afc:	stur	x10, [x29, #-72]
    7b00:	bl	1a80 <memset@plt>
    7b04:	ldur	x8, [x29, #-24]
    7b08:	cmp	x8, #0x0
    7b0c:	cset	w9, le
    7b10:	tbnz	w9, #0, 7b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x452c>
    7b14:	ldur	x8, [x29, #-24]
    7b18:	ldur	x9, [x29, #-64]
    7b1c:	ldr	x10, [x9]
    7b20:	cmp	x8, x10
    7b24:	b.cs	7b34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x44d4>  // b.hs, b.nlast
    7b28:	ldur	x8, [x29, #-24]
    7b2c:	stur	x8, [x29, #-80]
    7b30:	b	7b40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x44e0>
    7b34:	ldur	x8, [x29, #-64]
    7b38:	ldr	x9, [x8]
    7b3c:	stur	x9, [x29, #-80]
    7b40:	ldur	x8, [x29, #-80]
    7b44:	stur	x8, [x29, #-48]
    7b48:	ldur	w0, [x29, #-8]
    7b4c:	ldur	x2, [x29, #-48]
    7b50:	ldur	x1, [x29, #-72]
    7b54:	bl	1b00 <write@plt>
    7b58:	ldur	x8, [x29, #-48]
    7b5c:	cmp	x0, x8
    7b60:	b.ge	7b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4518>  // b.tcont
    7b64:	mov	w8, #0xffffffff            	// #-1
    7b68:	stur	w8, [x29, #-4]
    7b6c:	mov	w8, #0x1                   	// #1
    7b70:	stur	w8, [x29, #-52]
    7b74:	b	7b98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4538>
    7b78:	ldur	x8, [x29, #-48]
    7b7c:	ldur	x9, [x29, #-24]
    7b80:	subs	x8, x9, x8
    7b84:	stur	x8, [x29, #-24]
    7b88:	b	7b04 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x44a4>
    7b8c:	stur	wzr, [x29, #-4]
    7b90:	mov	w8, #0x1                   	// #1
    7b94:	stur	w8, [x29, #-52]
    7b98:	ldur	x8, [x29, #-32]
    7b9c:	mov	sp, x8
    7ba0:	ldur	w0, [x29, #-4]
    7ba4:	mov	sp, x29
    7ba8:	ldp	x29, x30, [sp], #16
    7bac:	ret
    7bb0:	sub	sp, sp, #0x20
    7bb4:	stp	x29, x30, [sp, #16]
    7bb8:	add	x29, sp, #0x10
    7bbc:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    7bc0:	add	x8, x8, #0x698
    7bc4:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    7bc8:	add	x9, x9, #0x198
    7bcc:	ldrsw	x10, [x8]
    7bd0:	mov	x11, #0x18                  	// #24
    7bd4:	mul	x10, x11, x10
    7bd8:	add	x9, x9, x10
    7bdc:	ldr	w12, [x9, #16]
    7be0:	str	x8, [sp]
    7be4:	cbz	w12, 7c14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x45b4>
    7be8:	ldr	x8, [sp]
    7bec:	ldrsw	x9, [x8]
    7bf0:	mov	x10, #0x18                  	// #24
    7bf4:	mul	x9, x10, x9
    7bf8:	adrp	x10, 1c000 <memcpy@GLIBC_2.17>
    7bfc:	add	x10, x10, #0x198
    7c00:	add	x9, x10, x9
    7c04:	ldr	x9, [x9]
    7c08:	mov	x10, xzr
    7c0c:	mov	x0, x10
    7c10:	blr	x9
    7c14:	ldr	x8, [sp]
    7c18:	ldr	w9, [x8]
    7c1c:	add	w9, w9, #0x1
    7c20:	str	w9, [x8]
    7c24:	ldrsw	x10, [x8]
    7c28:	cmp	x10, #0x7
    7c2c:	b.ne	7c44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x45e4>  // b.any
    7c30:	ldr	x8, [sp]
    7c34:	str	wzr, [x8]
    7c38:	mov	w9, #0x1                   	// #1
    7c3c:	stur	w9, [x29, #-4]
    7c40:	b	7c48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x45e8>
    7c44:	stur	wzr, [x29, #-4]
    7c48:	ldur	w0, [x29, #-4]
    7c4c:	ldp	x29, x30, [sp, #16]
    7c50:	add	sp, sp, #0x20
    7c54:	ret
    7c58:	sub	sp, sp, #0x30
    7c5c:	stp	x29, x30, [sp, #32]
    7c60:	add	x29, sp, #0x20
    7c64:	str	x0, [sp, #16]
    7c68:	ldr	x0, [sp, #16]
    7c6c:	bl	1c30 <getenv@plt>
    7c70:	str	x0, [sp, #8]
    7c74:	ldr	x8, [sp, #8]
    7c78:	cbnz	x8, 7c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4628>
    7c7c:	mov	w8, #0xffffffff            	// #-1
    7c80:	stur	w8, [x29, #-4]
    7c84:	b	7c94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4634>
    7c88:	ldr	x0, [sp, #8]
    7c8c:	bl	7ca4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4644>
    7c90:	stur	w0, [x29, #-4]
    7c94:	ldur	w0, [x29, #-4]
    7c98:	ldp	x29, x30, [sp, #32]
    7c9c:	add	sp, sp, #0x30
    7ca0:	ret
    7ca4:	stp	x29, x30, [sp, #-16]!
    7ca8:	mov	x29, sp
    7cac:	sub	sp, sp, #0x30
    7cb0:	mov	w8, #0x80000               	// #524288
    7cb4:	mov	w9, #0x4000                	// #16384
    7cb8:	movk	w9, #0x40, lsl #16
    7cbc:	mov	w2, #0x1c0                 	// #448
    7cc0:	mov	w10, #0xffffffff            	// #-1
    7cc4:	stur	x0, [x29, #-16]
    7cc8:	stur	w8, [x29, #-24]
    7ccc:	ldur	x0, [x29, #-16]
    7cd0:	ldur	w8, [x29, #-24]
    7cd4:	orr	w8, w8, #0x2
    7cd8:	orr	w8, w8, #0x80
    7cdc:	orr	w1, w8, w9
    7ce0:	stur	w10, [x29, #-40]
    7ce4:	bl	1a60 <open@plt>
    7ce8:	stur	w0, [x29, #-36]
    7cec:	ldur	w8, [x29, #-36]
    7cf0:	ldur	w9, [x29, #-40]
    7cf4:	cmp	w8, w9
    7cf8:	b.ne	7d2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x46cc>  // b.any
    7cfc:	bl	1c10 <__errno_location@plt>
    7d00:	ldr	w8, [x0]
    7d04:	cmp	w8, #0x16
    7d08:	b.eq	7d38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x46d8>  // b.none
    7d0c:	bl	1c10 <__errno_location@plt>
    7d10:	ldr	w8, [x0]
    7d14:	cmp	w8, #0x15
    7d18:	b.eq	7d38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x46d8>  // b.none
    7d1c:	bl	1c10 <__errno_location@plt>
    7d20:	ldr	w8, [x0]
    7d24:	cmp	w8, #0x5f
    7d28:	b.eq	7d38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x46d8>  // b.none
    7d2c:	ldur	w8, [x29, #-36]
    7d30:	stur	w8, [x29, #-4]
    7d34:	b	7dcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x476c>
    7d38:	bl	1c10 <__errno_location@plt>
    7d3c:	str	wzr, [x0]
    7d40:	ldur	x0, [x29, #-16]
    7d44:	bl	1a00 <strlen@plt>
    7d48:	stur	w0, [x29, #-20]
    7d4c:	ldursw	x8, [x29, #-20]
    7d50:	add	x8, x8, #0xb
    7d54:	mov	x9, #0x1                   	// #1
    7d58:	mul	x8, x8, x9
    7d5c:	add	x8, x8, #0xf
    7d60:	and	x8, x8, #0xfffffffffffffff0
    7d64:	mov	x9, sp
    7d68:	subs	x8, x9, x8
    7d6c:	mov	sp, x8
    7d70:	stur	x8, [x29, #-32]
    7d74:	ldur	x8, [x29, #-32]
    7d78:	cbnz	x8, 7d88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4728>
    7d7c:	mov	w8, #0xffffffff            	// #-1
    7d80:	stur	w8, [x29, #-4]
    7d84:	b	7dcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x476c>
    7d88:	ldur	x0, [x29, #-32]
    7d8c:	ldur	x1, [x29, #-16]
    7d90:	ldursw	x2, [x29, #-20]
    7d94:	bl	19e0 <memcpy@plt>
    7d98:	ldur	x8, [x29, #-32]
    7d9c:	ldursw	x9, [x29, #-20]
    7da0:	add	x8, x8, x9
    7da4:	adrp	x9, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7da8:	add	x9, x9, #0x5d9
    7dac:	ldr	x10, [x9]
    7db0:	str	x10, [x8]
    7db4:	ldur	w11, [x9, #7]
    7db8:	stur	w11, [x8, #7]
    7dbc:	ldur	x0, [x29, #-32]
    7dc0:	ldur	w1, [x29, #-24]
    7dc4:	bl	7f38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48d8>
    7dc8:	stur	w0, [x29, #-4]
    7dcc:	ldur	w0, [x29, #-4]
    7dd0:	mov	sp, x29
    7dd4:	ldp	x29, x30, [sp], #16
    7dd8:	ret
    7ddc:	stp	x29, x30, [sp, #-32]!
    7de0:	str	x28, [sp, #16]
    7de4:	mov	x29, sp
    7de8:	sub	sp, sp, #0x3, lsl #12
    7dec:	sub	sp, sp, #0x50
    7df0:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    7df4:	add	x8, x8, #0x6a8
    7df8:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    7dfc:	add	x9, x9, #0x6b0
    7e00:	stur	x0, [x29, #-16]
    7e04:	ldur	x10, [x29, #-16]
    7e08:	ldr	x8, [x8]
    7e0c:	cmp	x10, x8
    7e10:	str	x9, [sp, #8]
    7e14:	b.eq	7e70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4810>  // b.none
    7e18:	ldr	x8, [sp, #8]
    7e1c:	ldr	x9, [x8]
    7e20:	cbz	x9, 7e30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x47d0>
    7e24:	ldr	x8, [sp, #8]
    7e28:	ldr	x0, [x8]
    7e2c:	bl	1ac0 <endmntent@plt>
    7e30:	ldur	x8, [x29, #-16]
    7e34:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    7e38:	add	x9, x9, #0x6a8
    7e3c:	str	x8, [x9]
    7e40:	ldur	x8, [x29, #-16]
    7e44:	cbz	x8, 7e64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4804>
    7e48:	ldur	x0, [x29, #-16]
    7e4c:	adrp	x1, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7e50:	add	x1, x1, #0x59a
    7e54:	bl	1ab0 <setmntent@plt>
    7e58:	ldr	x8, [sp, #8]
    7e5c:	str	x0, [x8]
    7e60:	b	7e70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4810>
    7e64:	mov	x8, xzr
    7e68:	ldr	x9, [sp, #8]
    7e6c:	str	x8, [x9]
    7e70:	ldr	x8, [sp, #8]
    7e74:	ldr	x9, [x8]
    7e78:	cbnz	x9, 7e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4828>
    7e7c:	mov	w8, #0xffffffff            	// #-1
    7e80:	stur	w8, [x29, #-4]
    7e84:	b	7f20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48c0>
    7e88:	ldr	x8, [sp, #8]
    7e8c:	ldr	x0, [x8]
    7e90:	sub	x1, x29, #0x40
    7e94:	add	x2, sp, #0x10
    7e98:	mov	w3, #0x3000                	// #12288
    7e9c:	bl	1bf0 <getmntent_r@plt>
    7ea0:	cbnz	x0, 7eb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4850>
    7ea4:	mov	w8, #0xffffffff            	// #-1
    7ea8:	stur	w8, [x29, #-4]
    7eac:	b	7f20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48c0>
    7eb0:	sub	x0, x29, #0x40
    7eb4:	adrp	x1, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7eb8:	add	x1, x1, #0x5cf
    7ebc:	bl	1ba0 <hasmntopt@plt>
    7ec0:	cbnz	x0, 7eec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x488c>
    7ec4:	sub	x0, x29, #0x40
    7ec8:	adrp	x1, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    7ecc:	add	x1, x1, #0x5d2
    7ed0:	bl	1ba0 <hasmntopt@plt>
    7ed4:	cbnz	x0, 7eec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x488c>
    7ed8:	sub	x8, x29, #0x40
    7edc:	ldr	x0, [x8, #8]
    7ee0:	mov	w1, #0x2                   	// #2
    7ee4:	bl	1b30 <access@plt>
    7ee8:	cbz	w0, 7ef0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4890>
    7eec:	b	7e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4828>
    7ef0:	sub	x8, x29, #0x40
    7ef4:	ldr	x0, [x8, #8]
    7ef8:	bl	7ca4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4644>
    7efc:	stur	w0, [x29, #-20]
    7f00:	ldur	w9, [x29, #-20]
    7f04:	mov	w10, #0xffffffff            	// #-1
    7f08:	cmp	w9, w10
    7f0c:	b.eq	7f1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48bc>  // b.none
    7f10:	ldur	w8, [x29, #-20]
    7f14:	stur	w8, [x29, #-4]
    7f18:	b	7f20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48c0>
    7f1c:	b	7e88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4828>
    7f20:	ldur	w0, [x29, #-4]
    7f24:	add	sp, sp, #0x3, lsl #12
    7f28:	add	sp, sp, #0x50
    7f2c:	ldr	x28, [sp, #16]
    7f30:	ldp	x29, x30, [sp], #32
    7f34:	ret
    7f38:	sub	sp, sp, #0x30
    7f3c:	stp	x29, x30, [sp, #32]
    7f40:	add	x29, sp, #0x20
    7f44:	mov	w8, #0xffffffff            	// #-1
    7f48:	stur	x0, [x29, #-8]
    7f4c:	stur	w1, [x29, #-12]
    7f50:	ldur	x0, [x29, #-8]
    7f54:	ldur	w1, [x29, #-12]
    7f58:	str	w8, [sp, #12]
    7f5c:	bl	1b20 <mkostemp@plt>
    7f60:	str	w0, [sp, #16]
    7f64:	ldr	w8, [sp, #16]
    7f68:	ldr	w9, [sp, #12]
    7f6c:	cmp	w8, w9
    7f70:	b.eq	7f7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x491c>  // b.none
    7f74:	ldur	x0, [x29, #-8]
    7f78:	bl	1c70 <unlink@plt>
    7f7c:	ldr	w0, [sp, #16]
    7f80:	ldp	x29, x30, [sp, #32]
    7f84:	add	sp, sp, #0x30
    7f88:	ret
    7f8c:	sub	sp, sp, #0x40
    7f90:	stp	x29, x30, [sp, #48]
    7f94:	add	x29, sp, #0x30
    7f98:	adrp	x8, 1c000 <memcpy@GLIBC_2.17>
    7f9c:	add	x8, x8, #0x248
    7fa0:	stur	x0, [x29, #-16]
    7fa4:	str	x1, [sp, #24]
    7fa8:	ldur	x1, [x29, #-16]
    7fac:	mov	x0, x8
    7fb0:	bl	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    7fb4:	str	x0, [sp, #16]
    7fb8:	ldr	x8, [sp, #16]
    7fbc:	cbz	x8, 8004 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x49a4>
    7fc0:	ldur	x8, [x29, #-16]
    7fc4:	ldr	x9, [sp, #16]
    7fc8:	ldr	x9, [x9, #24]
    7fcc:	add	x8, x8, x9
    7fd0:	str	x8, [sp, #8]
    7fd4:	ldur	x9, [x29, #-16]
    7fd8:	cmp	x8, x9
    7fdc:	b.eq	8004 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x49a4>  // b.none
    7fe0:	ldr	x0, [sp, #8]
    7fe4:	ldr	x1, [sp, #24]
    7fe8:	bl	1bc0 <munmap@plt>
    7fec:	str	w0, [sp, #4]
    7ff0:	ldr	w8, [sp, #4]
    7ff4:	cbz	w8, 8004 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x49a4>
    7ff8:	ldr	w8, [sp, #4]
    7ffc:	stur	w8, [x29, #-4]
    8000:	b	8014 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x49b4>
    8004:	ldur	x0, [x29, #-16]
    8008:	ldr	x1, [sp, #24]
    800c:	bl	1bc0 <munmap@plt>
    8010:	stur	w0, [x29, #-4]
    8014:	ldur	w0, [x29, #-4]
    8018:	ldp	x29, x30, [sp, #48]
    801c:	add	sp, sp, #0x40
    8020:	ret
    8024:	sub	sp, sp, #0x50
    8028:	stp	x29, x30, [sp, #64]
    802c:	add	x29, sp, #0x40
    8030:	mov	x8, #0xffffffffffffff80    	// #-128
    8034:	adrp	x9, 1c000 <memcpy@GLIBC_2.17>
    8038:	add	x9, x9, #0x600
    803c:	stur	x0, [x29, #-8]
    8040:	stur	x1, [x29, #-16]
    8044:	stur	xzr, [x29, #-24]
    8048:	ldur	x10, [x29, #-16]
    804c:	cmp	x10, x8
    8050:	str	x9, [sp]
    8054:	b.cs	81ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b4c>  // b.hs, b.nlast
    8058:	ldur	x8, [x29, #-8]
    805c:	ldr	x8, [x8, #40]
    8060:	cbz	x8, 81ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b4c>
    8064:	ldur	x8, [x29, #-16]
    8068:	add	x8, x8, #0x48
    806c:	stur	x8, [x29, #-16]
    8070:	ldur	x8, [x29, #-8]
    8074:	ldr	x8, [x8, #16]
    8078:	ldur	x9, [x29, #-16]
    807c:	cmp	x8, x9
    8080:	b.ls	8184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b24>  // b.plast
    8084:	ldr	x8, [sp]
    8088:	ldr	x9, [x8, #16]
    808c:	str	x9, [sp, #32]
    8090:	ldur	x9, [x29, #-8]
    8094:	ldr	x9, [x9, #16]
    8098:	ldur	x10, [x29, #-16]
    809c:	subs	x9, x9, x10
    80a0:	ldr	x10, [sp, #32]
    80a4:	subs	x10, x10, #0x1
    80a8:	add	x9, x9, x10
    80ac:	ldr	x10, [sp, #32]
    80b0:	udiv	x9, x9, x10
    80b4:	subs	x9, x9, #0x1
    80b8:	ldr	x10, [sp, #32]
    80bc:	mul	x9, x9, x10
    80c0:	str	x9, [sp, #24]
    80c4:	ldur	x0, [x29, #-8]
    80c8:	ldur	x9, [x29, #-8]
    80cc:	ldr	x1, [x9, #40]
    80d0:	bl	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    80d4:	str	x0, [sp, #16]
    80d8:	ldr	x8, [sp, #16]
    80dc:	ldr	x8, [x8, #8]
    80e0:	ldr	x9, [sp, #24]
    80e4:	cmp	x8, x9
    80e8:	b.cc	8134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ad4>  // b.lo, b.ul, b.last
    80ec:	ldur	x0, [x29, #-8]
    80f0:	ldr	x1, [sp, #16]
    80f4:	bl	81cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b6c>
    80f8:	cbnz	w0, 8134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ad4>
    80fc:	ldr	x8, [sp, #16]
    8100:	ldr	x8, [x8, #8]
    8104:	ldr	x9, [sp, #24]
    8108:	subs	x8, x8, x9
    810c:	str	x8, [sp, #8]
    8110:	ldr	x8, [sp, #16]
    8114:	ldr	x8, [x8]
    8118:	ldr	x9, [sp, #8]
    811c:	add	x0, x8, x9
    8120:	ldr	x1, [sp, #24]
    8124:	bl	7f8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x492c>
    8128:	cbnz	w0, 8134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ad4>
    812c:	ldr	x8, [sp, #24]
    8130:	stur	x8, [x29, #-24]
    8134:	ldur	x8, [x29, #-24]
    8138:	cbz	x8, 8184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b24>
    813c:	ldur	x8, [x29, #-24]
    8140:	ldr	x9, [sp, #16]
    8144:	ldr	x10, [x9, #8]
    8148:	subs	x8, x10, x8
    814c:	str	x8, [x9, #8]
    8150:	ldur	x8, [x29, #-24]
    8154:	ldur	x9, [x29, #-8]
    8158:	ldr	x10, [x9, #848]
    815c:	subs	x8, x10, x8
    8160:	str	x8, [x9, #848]
    8164:	ldur	x0, [x29, #-8]
    8168:	ldur	x8, [x29, #-8]
    816c:	ldr	x1, [x8, #40]
    8170:	ldur	x8, [x29, #-8]
    8174:	ldr	x8, [x8, #16]
    8178:	ldur	x9, [x29, #-24]
    817c:	subs	x2, x8, x9
    8180:	bl	63ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4c>
    8184:	ldur	x0, [x29, #-8]
    8188:	bl	824c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4bec>
    818c:	ldur	x8, [x29, #-24]
    8190:	add	x8, x8, x0
    8194:	stur	x8, [x29, #-24]
    8198:	ldur	x8, [x29, #-24]
    819c:	cbnz	x8, 81ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b4c>
    81a0:	ldur	x8, [x29, #-8]
    81a4:	mov	x9, #0xffffffffffffffff    	// #-1
    81a8:	str	x9, [x8, #48]
    81ac:	ldur	x8, [x29, #-24]
    81b0:	mov	w9, #0x1                   	// #1
    81b4:	mov	w10, wzr
    81b8:	cmp	x8, #0x0
    81bc:	csel	w0, w9, w10, ne  // ne = any
    81c0:	ldp	x29, x30, [sp, #64]
    81c4:	add	sp, sp, #0x50
    81c8:	ret
    81cc:	sub	sp, sp, #0x20
    81d0:	str	x0, [sp, #16]
    81d4:	str	x1, [sp, #8]
    81d8:	ldr	x8, [sp, #16]
    81dc:	add	x8, x8, #0x398
    81e0:	str	x8, [sp]
    81e4:	ldr	x8, [sp]
    81e8:	ldr	x9, [sp, #8]
    81ec:	ldr	x9, [x9]
    81f0:	cmp	x8, x9
    81f4:	b.cc	8224 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4bc4>  // b.lo, b.ul, b.last
    81f8:	ldr	x8, [sp]
    81fc:	ldr	x9, [sp, #8]
    8200:	ldr	x9, [x9]
    8204:	ldr	x10, [sp, #8]
    8208:	ldr	x10, [x10, #8]
    820c:	add	x9, x9, x10
    8210:	cmp	x8, x9
    8214:	b.cs	8224 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4bc4>  // b.hs, b.nlast
    8218:	mov	w8, #0x1                   	// #1
    821c:	str	w8, [sp, #28]
    8220:	b	8240 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4be0>
    8224:	ldr	x8, [sp]
    8228:	ldr	x8, [x8, #16]
    822c:	str	x8, [sp]
    8230:	cbnz	x8, 823c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4bdc>
    8234:	str	wzr, [sp, #28]
    8238:	b	8240 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4be0>
    823c:	b	81e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b84>
    8240:	ldr	w0, [sp, #28]
    8244:	add	sp, sp, #0x20
    8248:	ret
    824c:	sub	sp, sp, #0x130
    8250:	stp	x29, x30, [sp, #272]
    8254:	str	x28, [sp, #288]
    8258:	add	x29, sp, #0x110
    825c:	stur	x0, [x29, #-8]
    8260:	stur	xzr, [x29, #-16]
    8264:	ldur	x8, [x29, #-8]
    8268:	add	x8, x8, #0x398
    826c:	stur	x8, [x29, #-24]
    8270:	ldur	x8, [x29, #-24]
    8274:	ldr	x8, [x8, #16]
    8278:	stur	x8, [x29, #-32]
    827c:	ldur	x8, [x29, #-32]
    8280:	cbz	x8, 8a28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53c8>
    8284:	ldur	x8, [x29, #-32]
    8288:	ldr	x8, [x8]
    828c:	stur	x8, [x29, #-40]
    8290:	ldur	x8, [x29, #-32]
    8294:	ldr	x8, [x8, #8]
    8298:	stur	x8, [x29, #-48]
    829c:	ldur	x8, [x29, #-32]
    82a0:	ldr	x8, [x8, #16]
    82a4:	stur	x8, [x29, #-56]
    82a8:	ldur	x8, [x29, #-40]
    82ac:	ldur	x9, [x29, #-40]
    82b0:	add	x9, x9, #0x10
    82b4:	and	x9, x9, #0x7
    82b8:	str	x8, [sp, #48]
    82bc:	cbnz	x9, 82cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c6c>
    82c0:	mov	x8, xzr
    82c4:	str	x8, [sp, #40]
    82c8:	b	82e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c88>
    82cc:	ldur	x8, [x29, #-40]
    82d0:	add	x8, x8, #0x10
    82d4:	and	x8, x8, #0x7
    82d8:	mov	x9, #0x8                   	// #8
    82dc:	subs	x8, x9, x8
    82e0:	and	x8, x8, #0x7
    82e4:	str	x8, [sp, #40]
    82e8:	ldr	x8, [sp, #40]
    82ec:	ldr	x9, [sp, #48]
    82f0:	add	x8, x9, x8
    82f4:	stur	x8, [x29, #-64]
    82f8:	ldur	x8, [x29, #-64]
    82fc:	ldr	x8, [x8, #8]
    8300:	and	x8, x8, #0xfffffffffffffffc
    8304:	stur	x8, [x29, #-72]
    8308:	ldur	x8, [x29, #-64]
    830c:	ldr	x8, [x8, #8]
    8310:	and	x8, x8, #0x2
    8314:	cbnz	x8, 8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>
    8318:	ldur	x8, [x29, #-64]
    831c:	ldur	x9, [x29, #-72]
    8320:	add	x8, x8, x9
    8324:	ldur	x9, [x29, #-40]
    8328:	ldur	x10, [x29, #-48]
    832c:	add	x9, x9, x10
    8330:	mov	x10, #0xffffffffffffffb8    	// #-72
    8334:	add	x9, x9, x10
    8338:	cmp	x8, x9
    833c:	b.cc	8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>  // b.lo, b.ul, b.last
    8340:	ldur	x8, [x29, #-64]
    8344:	stur	x8, [x29, #-80]
    8348:	ldur	x8, [x29, #-64]
    834c:	ldur	x9, [x29, #-8]
    8350:	ldr	x9, [x9, #32]
    8354:	cmp	x8, x9
    8358:	b.ne	8374 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4d14>  // b.any
    835c:	ldur	x8, [x29, #-8]
    8360:	mov	x9, xzr
    8364:	str	x9, [x8, #32]
    8368:	ldur	x8, [x29, #-8]
    836c:	str	xzr, [x8, #8]
    8370:	b	8668 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5008>
    8374:	ldur	x8, [x29, #-80]
    8378:	ldr	x8, [x8, #48]
    837c:	stur	x8, [x29, #-88]
    8380:	ldur	x8, [x29, #-80]
    8384:	ldr	x8, [x8, #24]
    8388:	ldur	x9, [x29, #-80]
    838c:	cmp	x8, x9
    8390:	b.eq	83f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4d94>  // b.none
    8394:	ldur	x8, [x29, #-80]
    8398:	ldr	x8, [x8, #16]
    839c:	stur	x8, [x29, #-104]
    83a0:	ldur	x8, [x29, #-80]
    83a4:	ldr	x8, [x8, #24]
    83a8:	stur	x8, [x29, #-96]
    83ac:	ldur	x8, [x29, #-104]
    83b0:	ldur	x9, [x29, #-8]
    83b4:	ldr	x9, [x9, #24]
    83b8:	cmp	x8, x9
    83bc:	cset	w10, cs  // cs = hs, nlast
    83c0:	and	w10, w10, #0x1
    83c4:	mov	w0, w10
    83c8:	sxtw	x8, w0
    83cc:	cbz	x8, 83ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4d8c>
    83d0:	ldur	x8, [x29, #-96]
    83d4:	ldur	x9, [x29, #-104]
    83d8:	str	x8, [x9, #24]
    83dc:	ldur	x8, [x29, #-104]
    83e0:	ldur	x9, [x29, #-96]
    83e4:	str	x8, [x9, #16]
    83e8:	b	83f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4d90>
    83ec:	bl	1b10 <abort@plt>
    83f0:	b	84b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e54>
    83f4:	ldur	x8, [x29, #-80]
    83f8:	add	x9, x8, #0x28
    83fc:	stur	x9, [x29, #-112]
    8400:	ldr	x8, [x8, #40]
    8404:	stur	x8, [x29, #-96]
    8408:	cbnz	x8, 8424 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc4>
    840c:	ldur	x8, [x29, #-80]
    8410:	add	x9, x8, #0x20
    8414:	stur	x9, [x29, #-112]
    8418:	ldr	x8, [x8, #32]
    841c:	stur	x8, [x29, #-96]
    8420:	cbz	x8, 84b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e54>
    8424:	ldur	x8, [x29, #-96]
    8428:	add	x9, x8, #0x28
    842c:	stur	x9, [x29, #-120]
    8430:	ldr	x8, [x8, #40]
    8434:	mov	w10, #0x1                   	// #1
    8438:	str	w10, [sp, #36]
    843c:	cbnz	x8, 845c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dfc>
    8440:	ldur	x8, [x29, #-96]
    8444:	add	x9, x8, #0x20
    8448:	stur	x9, [x29, #-120]
    844c:	ldr	x8, [x8, #32]
    8450:	cmp	x8, #0x0
    8454:	cset	w10, ne  // ne = any
    8458:	str	w10, [sp, #36]
    845c:	ldr	w8, [sp, #36]
    8460:	tbnz	w8, #0, 8468 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e08>
    8464:	b	847c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e1c>
    8468:	ldur	x8, [x29, #-120]
    846c:	stur	x8, [x29, #-112]
    8470:	ldr	x8, [x8]
    8474:	stur	x8, [x29, #-96]
    8478:	b	8424 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc4>
    847c:	ldur	x8, [x29, #-112]
    8480:	ldur	x9, [x29, #-8]
    8484:	ldr	x9, [x9, #24]
    8488:	cmp	x8, x9
    848c:	cset	w10, cs  // cs = hs, nlast
    8490:	and	w10, w10, #0x1
    8494:	mov	w0, w10
    8498:	sxtw	x8, w0
    849c:	cbz	x8, 84b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e50>
    84a0:	ldur	x8, [x29, #-112]
    84a4:	mov	x9, xzr
    84a8:	str	x9, [x8]
    84ac:	b	84b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e54>
    84b0:	bl	1b10 <abort@plt>
    84b4:	ldur	x8, [x29, #-88]
    84b8:	cbz	x8, 8668 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5008>
    84bc:	ldur	x8, [x29, #-8]
    84c0:	add	x8, x8, #0x250
    84c4:	ldur	x9, [x29, #-80]
    84c8:	ldr	x9, [x9, #56]
    84cc:	mov	x10, #0x8                   	// #8
    84d0:	mul	x9, x10, x9
    84d4:	add	x8, x8, x9
    84d8:	stur	x8, [x29, #-128]
    84dc:	ldur	x8, [x29, #-80]
    84e0:	ldur	x9, [x29, #-128]
    84e4:	ldr	x9, [x9]
    84e8:	cmp	x8, x9
    84ec:	b.ne	8524 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ec4>  // b.any
    84f0:	ldur	x8, [x29, #-96]
    84f4:	ldur	x9, [x29, #-128]
    84f8:	str	x8, [x9]
    84fc:	cbnz	x8, 8520 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ec0>
    8500:	ldur	x8, [x29, #-80]
    8504:	ldr	x8, [x8, #56]
    8508:	mov	w9, #0x1                   	// #1
    850c:	lsl	w8, w9, w8
    8510:	ldur	x10, [x29, #-8]
    8514:	ldr	w9, [x10, #4]
    8518:	bic	w8, w9, w8
    851c:	str	w8, [x10, #4]
    8520:	b	8580 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f20>
    8524:	ldur	x8, [x29, #-88]
    8528:	ldur	x9, [x29, #-8]
    852c:	ldr	x9, [x9, #24]
    8530:	cmp	x8, x9
    8534:	cset	w10, cs  // cs = hs, nlast
    8538:	and	w10, w10, #0x1
    853c:	mov	w0, w10
    8540:	sxtw	x8, w0
    8544:	cbz	x8, 857c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f1c>
    8548:	ldur	x8, [x29, #-88]
    854c:	ldr	x8, [x8, #32]
    8550:	ldur	x9, [x29, #-80]
    8554:	cmp	x8, x9
    8558:	b.ne	856c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f0c>  // b.any
    855c:	ldur	x8, [x29, #-96]
    8560:	ldur	x9, [x29, #-88]
    8564:	str	x8, [x9, #32]
    8568:	b	8578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f18>
    856c:	ldur	x8, [x29, #-96]
    8570:	ldur	x9, [x29, #-88]
    8574:	str	x8, [x9, #40]
    8578:	b	8580 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f20>
    857c:	bl	1b10 <abort@plt>
    8580:	ldur	x8, [x29, #-96]
    8584:	cbz	x8, 8668 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5008>
    8588:	ldur	x8, [x29, #-96]
    858c:	ldur	x9, [x29, #-8]
    8590:	ldr	x9, [x9, #24]
    8594:	cmp	x8, x9
    8598:	cset	w10, cs  // cs = hs, nlast
    859c:	and	w10, w10, #0x1
    85a0:	mov	w0, w10
    85a4:	sxtw	x8, w0
    85a8:	cbz	x8, 8664 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5004>
    85ac:	ldur	x8, [x29, #-88]
    85b0:	ldur	x9, [x29, #-96]
    85b4:	str	x8, [x9, #48]
    85b8:	ldur	x8, [x29, #-80]
    85bc:	ldr	x8, [x8, #32]
    85c0:	str	x8, [sp, #136]
    85c4:	cbz	x8, 860c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4fac>
    85c8:	ldr	x8, [sp, #136]
    85cc:	ldur	x9, [x29, #-8]
    85d0:	ldr	x9, [x9, #24]
    85d4:	cmp	x8, x9
    85d8:	cset	w10, cs  // cs = hs, nlast
    85dc:	and	w10, w10, #0x1
    85e0:	mov	w0, w10
    85e4:	sxtw	x8, w0
    85e8:	cbz	x8, 8608 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4fa8>
    85ec:	ldr	x8, [sp, #136]
    85f0:	ldur	x9, [x29, #-96]
    85f4:	str	x8, [x9, #32]
    85f8:	ldur	x8, [x29, #-96]
    85fc:	ldr	x9, [sp, #136]
    8600:	str	x8, [x9, #48]
    8604:	b	860c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4fac>
    8608:	bl	1b10 <abort@plt>
    860c:	ldur	x8, [x29, #-80]
    8610:	ldr	x8, [x8, #40]
    8614:	str	x8, [sp, #128]
    8618:	cbz	x8, 8660 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5000>
    861c:	ldr	x8, [sp, #128]
    8620:	ldur	x9, [x29, #-8]
    8624:	ldr	x9, [x9, #24]
    8628:	cmp	x8, x9
    862c:	cset	w10, cs  // cs = hs, nlast
    8630:	and	w10, w10, #0x1
    8634:	mov	w0, w10
    8638:	sxtw	x8, w0
    863c:	cbz	x8, 865c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4ffc>
    8640:	ldr	x8, [sp, #128]
    8644:	ldur	x9, [x29, #-96]
    8648:	str	x8, [x9, #40]
    864c:	ldur	x8, [x29, #-96]
    8650:	ldr	x9, [sp, #128]
    8654:	str	x8, [x9, #48]
    8658:	b	8660 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5000>
    865c:	bl	1b10 <abort@plt>
    8660:	b	8668 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5008>
    8664:	bl	1b10 <abort@plt>
    8668:	ldur	x0, [x29, #-40]
    866c:	ldur	x1, [x29, #-48]
    8670:	bl	7f8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x492c>
    8674:	cbnz	w0, 86b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5054>
    8678:	ldur	x8, [x29, #-48]
    867c:	ldur	x9, [x29, #-16]
    8680:	add	x8, x9, x8
    8684:	stur	x8, [x29, #-16]
    8688:	ldur	x8, [x29, #-48]
    868c:	ldur	x9, [x29, #-8]
    8690:	ldr	x10, [x9, #848]
    8694:	subs	x8, x10, x8
    8698:	str	x8, [x9, #848]
    869c:	ldur	x8, [x29, #-24]
    86a0:	stur	x8, [x29, #-32]
    86a4:	ldur	x8, [x29, #-56]
    86a8:	ldur	x9, [x29, #-32]
    86ac:	str	x8, [x9, #16]
    86b0:	b	8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>
    86b4:	ldur	x8, [x29, #-72]
    86b8:	lsr	x8, x8, #8
    86bc:	str	x8, [sp, #104]
    86c0:	ldr	x8, [sp, #104]
    86c4:	cbnz	x8, 86d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5070>
    86c8:	str	xzr, [sp, #112]
    86cc:	b	87c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5160>
    86d0:	ldr	x8, [sp, #104]
    86d4:	mov	x9, #0xffff                	// #65535
    86d8:	cmp	x8, x9
    86dc:	b.ls	86ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x508c>  // b.plast
    86e0:	mov	x8, #0x1f                  	// #31
    86e4:	str	x8, [sp, #112]
    86e8:	b	87c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5160>
    86ec:	ldr	x8, [sp, #104]
    86f0:	str	w8, [sp, #100]
    86f4:	ldr	w8, [sp, #100]
    86f8:	subs	w8, w8, #0x100
    86fc:	mov	x9, #0x10                  	// #16
    8700:	lsr	w8, w8, #16
    8704:	and	w8, w8, #0x8
    8708:	str	w8, [sp, #96]
    870c:	ldr	w8, [sp, #96]
    8710:	ldr	w10, [sp, #100]
    8714:	lsl	w8, w10, w8
    8718:	str	w8, [sp, #100]
    871c:	subs	w8, w8, #0x1, lsl #12
    8720:	mov	x0, x9
    8724:	lsr	w8, w8, w0
    8728:	and	w8, w8, #0x4
    872c:	str	w8, [sp, #92]
    8730:	ldr	w8, [sp, #92]
    8734:	ldr	w10, [sp, #96]
    8738:	add	w8, w10, w8
    873c:	str	w8, [sp, #96]
    8740:	ldr	w8, [sp, #92]
    8744:	ldr	w10, [sp, #100]
    8748:	lsl	w8, w10, w8
    874c:	str	w8, [sp, #100]
    8750:	subs	w8, w8, #0x4, lsl #12
    8754:	lsr	w8, w8, w9
    8758:	and	w8, w8, #0x2
    875c:	str	w8, [sp, #92]
    8760:	ldr	w9, [sp, #96]
    8764:	add	w8, w9, w8
    8768:	str	w8, [sp, #96]
    876c:	ldr	w8, [sp, #96]
    8770:	mov	w9, #0xe                   	// #14
    8774:	subs	w8, w9, w8
    8778:	ldr	w9, [sp, #92]
    877c:	ldr	w10, [sp, #100]
    8780:	lsl	w9, w10, w9
    8784:	str	w9, [sp, #100]
    8788:	add	w8, w8, w9, lsr #15
    878c:	str	w8, [sp, #92]
    8790:	ldr	w8, [sp, #92]
    8794:	lsl	w8, w8, #1
    8798:	mov	w11, w8
    879c:	ubfx	x11, x11, #0, #32
    87a0:	ldur	x12, [x29, #-72]
    87a4:	ldr	w8, [sp, #92]
    87a8:	add	w8, w8, #0x7
    87ac:	mov	w13, w8
    87b0:	lsr	x12, x12, x13
    87b4:	and	x12, x12, #0x1
    87b8:	add	x11, x11, x12
    87bc:	str	x11, [sp, #112]
    87c0:	ldur	x8, [x29, #-8]
    87c4:	add	x8, x8, #0x250
    87c8:	ldr	x9, [sp, #112]
    87cc:	mov	x10, #0x8                   	// #8
    87d0:	mul	x9, x10, x9
    87d4:	add	x8, x8, x9
    87d8:	str	x8, [sp, #120]
    87dc:	ldr	x8, [sp, #112]
    87e0:	ldur	x9, [x29, #-80]
    87e4:	str	x8, [x9, #56]
    87e8:	ldur	x8, [x29, #-80]
    87ec:	mov	x9, xzr
    87f0:	str	x9, [x8, #40]
    87f4:	ldur	x8, [x29, #-80]
    87f8:	str	x9, [x8, #32]
    87fc:	ldur	x8, [x29, #-8]
    8800:	ldr	w11, [x8, #4]
    8804:	ldr	x8, [sp, #112]
    8808:	mov	w12, #0x1                   	// #1
    880c:	lsl	w8, w12, w8
    8810:	and	w8, w11, w8
    8814:	cbnz	w8, 8864 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5204>
    8818:	ldr	x8, [sp, #112]
    881c:	mov	w9, #0x1                   	// #1
    8820:	lsl	w8, w9, w8
    8824:	ldur	x10, [x29, #-8]
    8828:	ldr	w9, [x10, #4]
    882c:	orr	w8, w9, w8
    8830:	str	w8, [x10, #4]
    8834:	ldur	x10, [x29, #-80]
    8838:	ldr	x11, [sp, #120]
    883c:	str	x10, [x11]
    8840:	ldr	x10, [sp, #120]
    8844:	ldur	x11, [x29, #-80]
    8848:	str	x10, [x11, #48]
    884c:	ldur	x10, [x29, #-80]
    8850:	ldur	x11, [x29, #-80]
    8854:	str	x10, [x11, #24]
    8858:	ldur	x11, [x29, #-80]
    885c:	str	x10, [x11, #16]
    8860:	b	8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>
    8864:	ldr	x8, [sp, #120]
    8868:	ldr	x8, [x8]
    886c:	str	x8, [sp, #80]
    8870:	ldur	x8, [x29, #-72]
    8874:	ldr	x9, [sp, #112]
    8878:	cmp	x9, #0x1f
    887c:	str	x8, [sp, #24]
    8880:	b.ne	8890 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5230>  // b.any
    8884:	mov	x8, xzr
    8888:	str	x8, [sp, #16]
    888c:	b	88ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x524c>
    8890:	ldr	x8, [sp, #112]
    8894:	lsr	x8, x8, #1
    8898:	add	x8, x8, #0x8
    889c:	subs	x8, x8, #0x2
    88a0:	mov	x9, #0x3f                  	// #63
    88a4:	subs	x8, x9, x8
    88a8:	str	x8, [sp, #16]
    88ac:	ldr	x8, [sp, #16]
    88b0:	ldr	x9, [sp, #24]
    88b4:	lsl	x8, x9, x8
    88b8:	str	x8, [sp, #72]
    88bc:	ldr	x8, [sp, #80]
    88c0:	ldr	x8, [x8, #8]
    88c4:	and	x8, x8, #0xfffffffffffffffc
    88c8:	ldur	x9, [x29, #-72]
    88cc:	cmp	x8, x9
    88d0:	b.eq	897c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x531c>  // b.none
    88d4:	ldr	x8, [sp, #80]
    88d8:	add	x8, x8, #0x20
    88dc:	ldr	x9, [sp, #72]
    88e0:	lsr	x9, x9, #63
    88e4:	and	x9, x9, #0x1
    88e8:	mov	x10, #0x8                   	// #8
    88ec:	mul	x9, x10, x9
    88f0:	add	x8, x8, x9
    88f4:	str	x8, [sp, #64]
    88f8:	ldr	x8, [sp, #72]
    88fc:	lsl	x8, x8, #1
    8900:	str	x8, [sp, #72]
    8904:	ldr	x8, [sp, #64]
    8908:	ldr	x8, [x8]
    890c:	cbz	x8, 8920 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x52c0>
    8910:	ldr	x8, [sp, #64]
    8914:	ldr	x8, [x8]
    8918:	str	x8, [sp, #80]
    891c:	b	8978 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5318>
    8920:	ldr	x8, [sp, #64]
    8924:	ldur	x9, [x29, #-8]
    8928:	ldr	x9, [x9, #24]
    892c:	cmp	x8, x9
    8930:	cset	w10, cs  // cs = hs, nlast
    8934:	and	w10, w10, #0x1
    8938:	mov	w0, w10
    893c:	sxtw	x8, w0
    8940:	cbz	x8, 8974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5314>
    8944:	ldur	x8, [x29, #-80]
    8948:	ldr	x9, [sp, #64]
    894c:	str	x8, [x9]
    8950:	ldr	x8, [sp, #80]
    8954:	ldur	x9, [x29, #-80]
    8958:	str	x8, [x9, #48]
    895c:	ldur	x8, [x29, #-80]
    8960:	ldur	x9, [x29, #-80]
    8964:	str	x8, [x9, #24]
    8968:	ldur	x9, [x29, #-80]
    896c:	str	x8, [x9, #16]
    8970:	b	8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>
    8974:	bl	1b10 <abort@plt>
    8978:	b	8a10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b0>
    897c:	ldr	x8, [sp, #80]
    8980:	ldr	x8, [x8, #16]
    8984:	str	x8, [sp, #56]
    8988:	ldr	x8, [sp, #80]
    898c:	ldur	x9, [x29, #-8]
    8990:	ldr	x9, [x9, #24]
    8994:	mov	w10, #0x0                   	// #0
    8998:	cmp	x8, x9
    899c:	str	w10, [sp, #12]
    89a0:	b.cc	89bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x535c>  // b.lo, b.ul, b.last
    89a4:	ldr	x8, [sp, #56]
    89a8:	ldur	x9, [x29, #-8]
    89ac:	ldr	x9, [x9, #24]
    89b0:	cmp	x8, x9
    89b4:	cset	w10, cs  // cs = hs, nlast
    89b8:	str	w10, [sp, #12]
    89bc:	ldr	w8, [sp, #12]
    89c0:	and	w8, w8, #0x1
    89c4:	mov	w0, w8
    89c8:	sxtw	x9, w0
    89cc:	cbz	x9, 8a0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53ac>
    89d0:	ldur	x8, [x29, #-80]
    89d4:	ldr	x9, [sp, #56]
    89d8:	str	x8, [x9, #24]
    89dc:	ldr	x9, [sp, #80]
    89e0:	str	x8, [x9, #16]
    89e4:	ldr	x8, [sp, #56]
    89e8:	ldur	x9, [x29, #-80]
    89ec:	str	x8, [x9, #16]
    89f0:	ldr	x8, [sp, #80]
    89f4:	ldur	x9, [x29, #-80]
    89f8:	str	x8, [x9, #24]
    89fc:	ldur	x8, [x29, #-80]
    8a00:	mov	x9, xzr
    8a04:	str	x9, [x8, #48]
    8a08:	b	8a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x53b4>
    8a0c:	bl	1b10 <abort@plt>
    8a10:	b	88bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x525c>
    8a14:	ldur	x8, [x29, #-32]
    8a18:	stur	x8, [x29, #-24]
    8a1c:	ldur	x8, [x29, #-56]
    8a20:	stur	x8, [x29, #-32]
    8a24:	b	827c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c1c>
    8a28:	ldur	x0, [x29, #-16]
    8a2c:	ldr	x28, [sp, #288]
    8a30:	ldp	x29, x30, [sp, #272]
    8a34:	add	sp, sp, #0x130
    8a38:	ret
    8a3c:	sub	sp, sp, #0x50
    8a40:	stp	x29, x30, [sp, #64]
    8a44:	add	x29, sp, #0x40
    8a48:	stur	x0, [x29, #-8]
    8a4c:	ldur	x8, [x29, #-8]
    8a50:	ldr	x8, [x8, #16]
    8a54:	stur	x8, [x29, #-16]
    8a58:	ldur	x8, [x29, #-8]
    8a5c:	ldr	w9, [x8, #24]
    8a60:	mov	w8, w9
    8a64:	stur	x8, [x29, #-24]
    8a68:	ldur	x8, [x29, #-16]
    8a6c:	ldrh	w9, [x8, #10]
    8a70:	subs	w9, w9, #0x0
    8a74:	mov	w8, w9
    8a78:	ubfx	x8, x8, #0, #32
    8a7c:	cmp	x8, #0xf
    8a80:	str	x8, [sp, #8]
    8a84:	b.hi	8b88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5528>  // b.pmore
    8a88:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    8a8c:	add	x8, x8, #0x5e4
    8a90:	ldr	x11, [sp, #8]
    8a94:	ldrsw	x10, [x8, x11, lsl #2]
    8a98:	add	x9, x8, x10
    8a9c:	br	x9
    8aa0:	stur	wzr, [x29, #-28]
    8aa4:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8aa8:	mov	w8, #0x14                  	// #20
    8aac:	stur	w8, [x29, #-28]
    8ab0:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8ab4:	mov	w8, #0x16                  	// #22
    8ab8:	stur	w8, [x29, #-28]
    8abc:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8ac0:	mov	w8, #0x18                  	// #24
    8ac4:	stur	w8, [x29, #-28]
    8ac8:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8acc:	mov	w8, #0x1a                  	// #26
    8ad0:	stur	w8, [x29, #-28]
    8ad4:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8ad8:	mov	w8, #0x1c                  	// #28
    8adc:	stur	w8, [x29, #-28]
    8ae0:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8ae4:	mov	w8, #0x1e                  	// #30
    8ae8:	stur	w8, [x29, #-28]
    8aec:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8af0:	mov	w8, #0x1                   	// #1
    8af4:	stur	w8, [x29, #-28]
    8af8:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8afc:	mov	w8, #0x1                   	// #1
    8b00:	stur	w8, [x29, #-28]
    8b04:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8b08:	ldur	x0, [x29, #-16]
    8b0c:	bl	8c28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x55c8>
    8b10:	stur	w0, [x29, #-28]
    8b14:	ldur	w8, [x29, #-28]
    8b18:	cbnz	w8, 8b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5524>
    8b1c:	ldur	x8, [x29, #-16]
    8b20:	ldr	x8, [x8]
    8b24:	str	x8, [sp, #16]
    8b28:	ldr	x8, [sp, #16]
    8b2c:	cmp	x8, #0x10
    8b30:	b.ls	8b4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x54ec>  // b.plast
    8b34:	mov	w8, #0x20                  	// #32
    8b38:	stur	w8, [x29, #-28]
    8b3c:	ldur	x9, [x29, #-24]
    8b40:	add	x9, x9, #0x8
    8b44:	stur	x9, [x29, #-24]
    8b48:	b	8b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5524>
    8b4c:	ldr	x8, [sp, #16]
    8b50:	cmp	x8, #0x10
    8b54:	b.ne	8b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5504>  // b.any
    8b58:	mov	w8, #0x2                   	// #2
    8b5c:	stur	w8, [x29, #-28]
    8b60:	b	8b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5524>
    8b64:	ldr	x8, [sp, #16]
    8b68:	cmp	x8, #0x8
    8b6c:	b.ne	8b7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x551c>  // b.any
    8b70:	mov	w8, #0x1                   	// #1
    8b74:	stur	w8, [x29, #-28]
    8b78:	b	8b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5524>
    8b7c:	mov	w8, #0x42                  	// #66
    8b80:	stur	w8, [x29, #-28]
    8b84:	b	8b8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x552c>
    8b88:	bl	1b10 <abort@plt>
    8b8c:	str	wzr, [sp, #32]
    8b90:	ldur	x8, [x29, #-8]
    8b94:	ldr	w9, [x8, #4]
    8b98:	str	w9, [sp, #28]
    8b9c:	ldr	w8, [sp, #32]
    8ba0:	ldr	w9, [sp, #28]
    8ba4:	cmp	w8, w9
    8ba8:	b.ge	8bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5590>  // b.tcont
    8bac:	ldur	x8, [x29, #-8]
    8bb0:	mov	x9, #0x8                   	// #8
    8bb4:	ldr	x8, [x8, #8]
    8bb8:	ldrsw	x10, [sp, #32]
    8bbc:	mul	x9, x9, x10
    8bc0:	add	x8, x8, x9
    8bc4:	ldr	x0, [x8]
    8bc8:	bl	8c28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x55c8>
    8bcc:	cbz	w0, 8be0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5580>
    8bd0:	ldur	w8, [x29, #-28]
    8bd4:	orr	w8, w8, #0x80
    8bd8:	stur	w8, [x29, #-28]
    8bdc:	b	8bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5590>
    8be0:	ldr	w8, [sp, #32]
    8be4:	add	w8, w8, #0x1
    8be8:	str	w8, [sp, #32]
    8bec:	b	8b9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x553c>
    8bf0:	ldur	x8, [x29, #-24]
    8bf4:	subs	x8, x8, #0x1
    8bf8:	orr	x8, x8, #0xf
    8bfc:	add	x8, x8, #0x1
    8c00:	ldur	x9, [x29, #-8]
    8c04:	str	w8, [x9, #24]
    8c08:	ldur	w8, [x29, #-28]
    8c0c:	ldur	x9, [x29, #-8]
    8c10:	str	w8, [x9, #28]
    8c14:	mov	w8, wzr
    8c18:	mov	w0, w8
    8c1c:	ldp	x29, x30, [sp, #64]
    8c20:	add	sp, sp, #0x50
    8c24:	ret
    8c28:	sub	sp, sp, #0x50
    8c2c:	stp	x29, x30, [sp, #64]
    8c30:	add	x29, sp, #0x40
    8c34:	stur	x0, [x29, #-16]
    8c38:	ldur	x8, [x29, #-16]
    8c3c:	ldrh	w9, [x8, #10]
    8c40:	stur	w9, [x29, #-28]
    8c44:	ldur	w9, [x29, #-28]
    8c48:	subs	w10, w9, #0x2
    8c4c:	cmp	w10, #0x2
    8c50:	str	w9, [sp, #8]
    8c54:	b.ls	8c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5624>  // b.plast
    8c58:	b	8c5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x55fc>
    8c5c:	ldr	w8, [sp, #8]
    8c60:	cmp	w8, #0xd
    8c64:	b.eq	8cd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5674>  // b.none
    8c68:	b	8c6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x560c>
    8c6c:	ldr	w8, [sp, #8]
    8c70:	cmp	w8, #0xf
    8c74:	b.eq	8c90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5630>  // b.none
    8c78:	b	8c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x561c>
    8c7c:	stur	wzr, [x29, #-4]
    8c80:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8c84:	mov	x8, #0x1                   	// #1
    8c88:	str	x8, [sp, #16]
    8c8c:	b	8f0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58ac>
    8c90:	ldur	x8, [x29, #-16]
    8c94:	ldr	x8, [x8, #16]
    8c98:	ldr	x8, [x8]
    8c9c:	ldrh	w9, [x8, #10]
    8ca0:	stur	w9, [x29, #-28]
    8ca4:	ldur	w9, [x29, #-28]
    8ca8:	subs	w9, w9, #0x2
    8cac:	cmp	w9, #0x2
    8cb0:	cset	w9, ls  // ls = plast
    8cb4:	eor	w9, w9, #0x1
    8cb8:	tbnz	w9, #0, 8ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x566c>
    8cbc:	b	8cc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5660>
    8cc0:	mov	x8, #0x2                   	// #2
    8cc4:	str	x8, [sp, #16]
    8cc8:	b	8f0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58ac>
    8ccc:	stur	wzr, [x29, #-4]
    8cd0:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8cd4:	ldur	x8, [x29, #-16]
    8cd8:	ldr	x8, [x8]
    8cdc:	str	x8, [sp, #24]
    8ce0:	ldr	x8, [sp, #24]
    8ce4:	cmp	x8, #0x4
    8ce8:	b.cc	8cf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5698>  // b.lo, b.ul, b.last
    8cec:	ldr	x8, [sp, #24]
    8cf0:	cmp	x8, #0x40
    8cf4:	b.ls	8d00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x56a0>  // b.plast
    8cf8:	stur	wzr, [x29, #-4]
    8cfc:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8d00:	ldur	x8, [x29, #-16]
    8d04:	ldr	x8, [x8, #16]
    8d08:	stur	x8, [x29, #-24]
    8d0c:	ldur	x8, [x29, #-24]
    8d10:	ldr	x8, [x8]
    8d14:	ldrh	w9, [x8, #10]
    8d18:	stur	w9, [x29, #-28]
    8d1c:	ldur	w9, [x29, #-28]
    8d20:	cmp	w9, #0xd
    8d24:	b.eq	8d34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x56d4>  // b.none
    8d28:	ldur	w8, [x29, #-28]
    8d2c:	cmp	w8, #0xf
    8d30:	b.ne	8d7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x571c>  // b.any
    8d34:	str	wzr, [sp, #32]
    8d38:	ldur	x8, [x29, #-24]
    8d3c:	ldrsw	x9, [sp, #32]
    8d40:	mov	x10, #0x8                   	// #8
    8d44:	mul	x9, x10, x9
    8d48:	add	x8, x8, x9
    8d4c:	ldr	x0, [x8]
    8d50:	bl	9c44 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x704>
    8d54:	stur	w0, [x29, #-28]
    8d58:	ldur	w11, [x29, #-28]
    8d5c:	cmp	w11, #0x0
    8d60:	cset	w11, lt  // lt = tstop
    8d64:	tbnz	w11, #0, 8d6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x570c>
    8d68:	b	8d7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x571c>
    8d6c:	ldr	w8, [sp, #32]
    8d70:	add	w8, w8, #0x1
    8d74:	str	w8, [sp, #32]
    8d78:	b	8d38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x56d8>
    8d7c:	ldur	w8, [x29, #-28]
    8d80:	cmp	w8, #0x2
    8d84:	str	w8, [sp, #4]
    8d88:	b.eq	8db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5750>  // b.none
    8d8c:	b	8d90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5730>
    8d90:	ldr	w8, [sp, #4]
    8d94:	cmp	w8, #0x3
    8d98:	b.eq	8de0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5780>  // b.none
    8d9c:	b	8da0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5740>
    8da0:	ldr	w8, [sp, #4]
    8da4:	cmp	w8, #0x4
    8da8:	b.eq	8e10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57b0>  // b.none
    8dac:	b	8e40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57e0>
    8db0:	ldr	x8, [sp, #24]
    8db4:	mov	x9, #0x4                   	// #4
    8db8:	udiv	x8, x8, x9
    8dbc:	str	x8, [sp, #16]
    8dc0:	ldr	x8, [sp, #24]
    8dc4:	ldr	x10, [sp, #16]
    8dc8:	mul	x9, x10, x9
    8dcc:	cmp	x8, x9
    8dd0:	b.eq	8ddc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x577c>  // b.none
    8dd4:	stur	wzr, [x29, #-4]
    8dd8:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8ddc:	b	8e48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57e8>
    8de0:	ldr	x8, [sp, #24]
    8de4:	mov	x9, #0x8                   	// #8
    8de8:	udiv	x8, x8, x9
    8dec:	str	x8, [sp, #16]
    8df0:	ldr	x8, [sp, #24]
    8df4:	ldr	x10, [sp, #16]
    8df8:	mul	x9, x10, x9
    8dfc:	cmp	x8, x9
    8e00:	b.eq	8e0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57ac>  // b.none
    8e04:	stur	wzr, [x29, #-4]
    8e08:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8e0c:	b	8e48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57e8>
    8e10:	ldr	x8, [sp, #24]
    8e14:	mov	x9, #0x10                  	// #16
    8e18:	udiv	x8, x8, x9
    8e1c:	str	x8, [sp, #16]
    8e20:	ldr	x8, [sp, #24]
    8e24:	ldr	x10, [sp, #16]
    8e28:	mul	x9, x10, x9
    8e2c:	cmp	x8, x9
    8e30:	b.eq	8e3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57dc>  // b.none
    8e34:	stur	wzr, [x29, #-4]
    8e38:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8e3c:	b	8e48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57e8>
    8e40:	stur	wzr, [x29, #-4]
    8e44:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8e48:	ldr	x8, [sp, #16]
    8e4c:	cmp	x8, #0x4
    8e50:	b.ls	8e5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57fc>  // b.plast
    8e54:	stur	wzr, [x29, #-4]
    8e58:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8e5c:	str	wzr, [sp, #32]
    8e60:	ldur	x8, [x29, #-24]
    8e64:	ldrsw	x9, [sp, #32]
    8e68:	mov	x10, #0x8                   	// #8
    8e6c:	mul	x9, x10, x9
    8e70:	add	x8, x8, x9
    8e74:	ldr	x8, [x8]
    8e78:	cbz	x8, 8f0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58ac>
    8e7c:	ldur	x8, [x29, #-24]
    8e80:	ldrsw	x9, [sp, #32]
    8e84:	mov	x10, #0x8                   	// #8
    8e88:	mul	x9, x10, x9
    8e8c:	add	x8, x8, x9
    8e90:	ldr	x8, [x8]
    8e94:	ldrh	w11, [x8, #10]
    8e98:	str	w11, [sp, #12]
    8e9c:	ldr	w11, [sp, #12]
    8ea0:	cmp	w11, #0xd
    8ea4:	b.eq	8eb4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5854>  // b.none
    8ea8:	ldr	w8, [sp, #12]
    8eac:	cmp	w8, #0xf
    8eb0:	b.ne	8ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5884>  // b.any
    8eb4:	ldur	x8, [x29, #-24]
    8eb8:	ldrsw	x9, [sp, #32]
    8ebc:	mov	x10, #0x8                   	// #8
    8ec0:	mul	x9, x10, x9
    8ec4:	add	x8, x8, x9
    8ec8:	ldr	x0, [x8]
    8ecc:	ldur	w1, [x29, #-28]
    8ed0:	bl	9d20 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7e0>
    8ed4:	cbnz	w0, 8ee0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5880>
    8ed8:	stur	wzr, [x29, #-4]
    8edc:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8ee0:	b	8efc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x589c>
    8ee4:	ldr	w8, [sp, #12]
    8ee8:	ldur	w9, [x29, #-28]
    8eec:	cmp	w8, w9
    8ef0:	b.eq	8efc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x589c>  // b.none
    8ef4:	stur	wzr, [x29, #-4]
    8ef8:	b	8f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x58c8>
    8efc:	ldr	w8, [sp, #32]
    8f00:	add	w8, w8, #0x1
    8f04:	str	w8, [sp, #32]
    8f08:	b	8e60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5800>
    8f0c:	ldur	w8, [x29, #-28]
    8f10:	mov	w9, #0x4                   	// #4
    8f14:	mul	w8, w8, w9
    8f18:	ldr	x10, [sp, #16]
    8f1c:	subs	w9, w9, w10
    8f20:	add	w8, w8, w9
    8f24:	stur	w8, [x29, #-4]
    8f28:	ldur	w0, [x29, #-4]
    8f2c:	ldp	x29, x30, [sp, #64]
    8f30:	add	sp, sp, #0x50
    8f34:	ret

0000000000008f38 <ffi_call@@LIBFFI_BASE_7.0>:
    8f38:	sub	sp, sp, #0x30
    8f3c:	stp	x29, x30, [sp, #32]
    8f40:	add	x29, sp, #0x20
    8f44:	mov	x8, xzr
    8f48:	stur	x0, [x29, #-8]
    8f4c:	str	x1, [sp, #16]
    8f50:	str	x2, [sp, #8]
    8f54:	str	x3, [sp]
    8f58:	ldur	x0, [x29, #-8]
    8f5c:	ldr	x1, [sp, #16]
    8f60:	ldr	x2, [sp, #8]
    8f64:	ldr	x3, [sp]
    8f68:	mov	x4, x8
    8f6c:	bl	8f7c <ffi_call@@LIBFFI_BASE_7.0+0x44>
    8f70:	ldp	x29, x30, [sp, #32]
    8f74:	add	sp, sp, #0x30
    8f78:	ret
    8f7c:	stp	x29, x30, [sp, #-16]!
    8f80:	mov	x29, sp
    8f84:	sub	sp, sp, #0xe0
    8f88:	stur	x0, [x29, #-8]
    8f8c:	stur	x1, [x29, #-16]
    8f90:	stur	x2, [x29, #-24]
    8f94:	stur	x3, [x29, #-32]
    8f98:	stur	x4, [x29, #-40]
    8f9c:	ldur	x8, [x29, #-8]
    8fa0:	ldr	w9, [x8, #28]
    8fa4:	stur	w9, [x29, #-124]
    8fa8:	ldur	x8, [x29, #-8]
    8fac:	ldr	x8, [x8, #16]
    8fb0:	stur	x8, [x29, #-136]
    8fb4:	ldur	x8, [x29, #-136]
    8fb8:	ldr	x8, [x8]
    8fbc:	stur	x8, [x29, #-104]
    8fc0:	ldur	x8, [x29, #-8]
    8fc4:	ldr	w9, [x8, #24]
    8fc8:	mov	w8, w9
    8fcc:	stur	x8, [x29, #-96]
    8fd0:	stur	xzr, [x29, #-112]
    8fd4:	ldur	w9, [x29, #-124]
    8fd8:	and	w9, w9, #0x20
    8fdc:	cbz	w9, 8ff4 <ffi_call@@LIBFFI_BASE_7.0+0xbc>
    8fe0:	ldur	x8, [x29, #-24]
    8fe4:	cbnz	x8, 8ff0 <ffi_call@@LIBFFI_BASE_7.0+0xb8>
    8fe8:	ldur	x8, [x29, #-104]
    8fec:	stur	x8, [x29, #-112]
    8ff0:	b	9020 <ffi_call@@LIBFFI_BASE_7.0+0xe8>
    8ff4:	ldur	x8, [x29, #-24]
    8ff8:	cbnz	x8, 900c <ffi_call@@LIBFFI_BASE_7.0+0xd4>
    8ffc:	ldur	w8, [x29, #-124]
    9000:	and	w8, w8, #0x80
    9004:	stur	w8, [x29, #-124]
    9008:	b	9020 <ffi_call@@LIBFFI_BASE_7.0+0xe8>
    900c:	ldur	w8, [x29, #-124]
    9010:	and	w8, w8, #0x40
    9014:	cbz	w8, 9020 <ffi_call@@LIBFFI_BASE_7.0+0xe8>
    9018:	mov	x8, #0x10                  	// #16
    901c:	stur	x8, [x29, #-112]
    9020:	ldur	x8, [x29, #-96]
    9024:	add	x8, x8, #0xc0
    9028:	add	x8, x8, #0x20
    902c:	ldur	x9, [x29, #-112]
    9030:	add	x8, x8, x9
    9034:	mov	x9, #0x1                   	// #1
    9038:	mul	x8, x8, x9
    903c:	add	x8, x8, #0xf
    9040:	and	x8, x8, #0xfffffffffffffff0
    9044:	mov	x9, sp
    9048:	subs	x8, x9, x8
    904c:	mov	sp, x8
    9050:	stur	x8, [x29, #-48]
    9054:	ldur	x8, [x29, #-48]
    9058:	add	x8, x8, #0xc0
    905c:	stur	x8, [x29, #-56]
    9060:	ldur	x8, [x29, #-56]
    9064:	ldur	x9, [x29, #-96]
    9068:	add	x8, x8, x9
    906c:	stur	x8, [x29, #-64]
    9070:	ldur	x8, [x29, #-112]
    9074:	cbz	x8, 9088 <ffi_call@@LIBFFI_BASE_7.0+0x150>
    9078:	ldur	x8, [x29, #-64]
    907c:	add	x8, x8, #0x20
    9080:	stur	x8, [x29, #-216]
    9084:	b	9090 <ffi_call@@LIBFFI_BASE_7.0+0x158>
    9088:	ldur	x8, [x29, #-24]
    908c:	stur	x8, [x29, #-216]
    9090:	ldur	x8, [x29, #-216]
    9094:	stur	x8, [x29, #-72]
    9098:	sub	x0, x29, #0x58
    909c:	bl	9974 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x434>
    90a0:	stur	wzr, [x29, #-116]
    90a4:	ldur	x8, [x29, #-8]
    90a8:	ldr	w9, [x8, #4]
    90ac:	stur	w9, [x29, #-120]
    90b0:	ldur	w8, [x29, #-116]
    90b4:	ldur	w9, [x29, #-120]
    90b8:	cmp	w8, w9
    90bc:	b.ge	9398 <ffi_call@@LIBFFI_BASE_7.0+0x460>  // b.tcont
    90c0:	ldur	x8, [x29, #-8]
    90c4:	mov	x9, #0x8                   	// #8
    90c8:	ldr	x8, [x8, #8]
    90cc:	ldursw	x10, [x29, #-116]
    90d0:	mul	x10, x9, x10
    90d4:	add	x8, x8, x10
    90d8:	ldr	x8, [x8]
    90dc:	stur	x8, [x29, #-144]
    90e0:	ldur	x8, [x29, #-144]
    90e4:	ldr	x8, [x8]
    90e8:	stur	x8, [x29, #-152]
    90ec:	ldur	x8, [x29, #-32]
    90f0:	ldursw	x10, [x29, #-116]
    90f4:	mul	x9, x9, x10
    90f8:	add	x8, x8, x9
    90fc:	ldr	x8, [x8]
    9100:	stur	x8, [x29, #-160]
    9104:	ldur	x8, [x29, #-144]
    9108:	ldrh	w11, [x8, #10]
    910c:	stur	w11, [x29, #-168]
    9110:	ldur	w11, [x29, #-168]
    9114:	stur	w11, [x29, #-220]
    9118:	cbz	w11, 9188 <ffi_call@@LIBFFI_BASE_7.0+0x250>
    911c:	b	9120 <ffi_call@@LIBFFI_BASE_7.0+0x1e8>
    9120:	ldur	w8, [x29, #-220]
    9124:	cmp	w8, #0x1
    9128:	b.eq	918c <ffi_call@@LIBFFI_BASE_7.0+0x254>  // b.none
    912c:	b	9130 <ffi_call@@LIBFFI_BASE_7.0+0x1f8>
    9130:	ldur	w8, [x29, #-220]
    9134:	subs	w9, w8, #0x2
    9138:	cmp	w9, #0x2
    913c:	b.ls	9208 <ffi_call@@LIBFFI_BASE_7.0+0x2d0>  // b.plast
    9140:	b	9144 <ffi_call@@LIBFFI_BASE_7.0+0x20c>
    9144:	ldur	w8, [x29, #-220]
    9148:	subs	w9, w8, #0x5
    914c:	cmp	w9, #0x7
    9150:	b.ls	918c <ffi_call@@LIBFFI_BASE_7.0+0x254>  // b.plast
    9154:	b	9158 <ffi_call@@LIBFFI_BASE_7.0+0x220>
    9158:	ldur	w8, [x29, #-220]
    915c:	cmp	w8, #0xd
    9160:	b.eq	9208 <ffi_call@@LIBFFI_BASE_7.0+0x2d0>  // b.none
    9164:	b	9168 <ffi_call@@LIBFFI_BASE_7.0+0x230>
    9168:	ldur	w8, [x29, #-220]
    916c:	cmp	w8, #0xe
    9170:	b.eq	918c <ffi_call@@LIBFFI_BASE_7.0+0x254>  // b.none
    9174:	b	9178 <ffi_call@@LIBFFI_BASE_7.0+0x240>
    9178:	ldur	w8, [x29, #-220]
    917c:	cmp	w8, #0xf
    9180:	b.eq	9208 <ffi_call@@LIBFFI_BASE_7.0+0x2d0>  // b.none
    9184:	b	9384 <ffi_call@@LIBFFI_BASE_7.0+0x44c>
    9188:	b	9388 <ffi_call@@LIBFFI_BASE_7.0+0x450>
    918c:	ldur	x0, [x29, #-160]
    9190:	ldur	w1, [x29, #-168]
    9194:	bl	9e10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8d0>
    9198:	stur	x0, [x29, #-176]
    919c:	ldur	w8, [x29, #-88]
    91a0:	cmp	w8, #0x8
    91a4:	b.cs	91d0 <ffi_call@@LIBFFI_BASE_7.0+0x298>  // b.hs, b.nlast
    91a8:	ldur	x8, [x29, #-176]
    91ac:	ldur	x9, [x29, #-48]
    91b0:	add	x9, x9, #0x80
    91b4:	ldur	w10, [x29, #-88]
    91b8:	mov	w11, w10
    91bc:	mov	w10, w11
    91c0:	add	w10, w10, #0x1
    91c4:	stur	w10, [x29, #-88]
    91c8:	str	x8, [x9, x11, lsl #3]
    91cc:	b	9204 <ffi_call@@LIBFFI_BASE_7.0+0x2cc>
    91d0:	ldur	x1, [x29, #-56]
    91d4:	ldur	x8, [x29, #-144]
    91d8:	ldrh	w9, [x8, #8]
    91dc:	mov	w2, w9
    91e0:	ldur	x3, [x29, #-152]
    91e4:	sub	x0, x29, #0x58
    91e8:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    91ec:	stur	x0, [x29, #-184]
    91f0:	mov	w9, #0x8                   	// #8
    91f4:	stur	w9, [x29, #-88]
    91f8:	ldur	x8, [x29, #-176]
    91fc:	ldur	x10, [x29, #-184]
    9200:	str	x8, [x10]
    9204:	b	9388 <ffi_call@@LIBFFI_BASE_7.0+0x450>
    9208:	ldur	x0, [x29, #-144]
    920c:	bl	8c28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x55c8>
    9210:	stur	w0, [x29, #-164]
    9214:	ldur	w8, [x29, #-164]
    9218:	cbz	w8, 92b0 <ffi_call@@LIBFFI_BASE_7.0+0x378>
    921c:	ldur	w8, [x29, #-164]
    9220:	and	w8, w8, #0x3
    9224:	mov	w9, #0x4                   	// #4
    9228:	subs	w8, w9, w8
    922c:	stur	w8, [x29, #-196]
    9230:	ldur	w8, [x29, #-84]
    9234:	ldur	w9, [x29, #-196]
    9238:	add	w8, w8, w9
    923c:	cmp	w8, #0x8
    9240:	b.hi	9284 <ffi_call@@LIBFFI_BASE_7.0+0x34c>  // b.pmore
    9244:	ldur	x8, [x29, #-48]
    9248:	ldur	w9, [x29, #-84]
    924c:	mov	w10, w9
    9250:	mov	x11, #0x10                  	// #16
    9254:	mul	x10, x11, x10
    9258:	add	x8, x8, x10
    925c:	stur	x8, [x29, #-192]
    9260:	ldur	w9, [x29, #-196]
    9264:	ldur	w12, [x29, #-84]
    9268:	add	w9, w12, w9
    926c:	stur	w9, [x29, #-84]
    9270:	ldur	x0, [x29, #-192]
    9274:	ldur	x1, [x29, #-160]
    9278:	ldur	w2, [x29, #-164]
    927c:	bl	9ef8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9b8>
    9280:	b	9388 <ffi_call@@LIBFFI_BASE_7.0+0x450>
    9284:	sub	x0, x29, #0x58
    9288:	mov	w8, #0x8                   	// #8
    928c:	stur	w8, [x29, #-84]
    9290:	ldur	x1, [x29, #-56]
    9294:	ldur	x9, [x29, #-144]
    9298:	ldrh	w8, [x9, #8]
    929c:	mov	w2, w8
    92a0:	ldur	x3, [x29, #-152]
    92a4:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    92a8:	stur	x0, [x29, #-192]
    92ac:	b	9370 <ffi_call@@LIBFFI_BASE_7.0+0x438>
    92b0:	ldur	x8, [x29, #-152]
    92b4:	cmp	x8, #0x10
    92b8:	b.ls	92e8 <ffi_call@@LIBFFI_BASE_7.0+0x3b0>  // b.plast
    92bc:	ldur	x8, [x29, #-32]
    92c0:	ldursw	x9, [x29, #-116]
    92c4:	mov	x10, #0x8                   	// #8
    92c8:	mul	x9, x10, x9
    92cc:	add	x8, x8, x9
    92d0:	stur	x8, [x29, #-160]
    92d4:	mov	w11, #0xe                   	// #14
    92d8:	stur	w11, [x29, #-168]
    92dc:	mov	x8, #0x8                   	// #8
    92e0:	stur	x8, [x29, #-152]
    92e4:	b	918c <ffi_call@@LIBFFI_BASE_7.0+0x254>
    92e8:	ldur	x8, [x29, #-152]
    92ec:	add	x8, x8, #0x7
    92f0:	mov	x9, #0x8                   	// #8
    92f4:	udiv	x8, x8, x9
    92f8:	stur	x8, [x29, #-208]
    92fc:	ldur	w10, [x29, #-88]
    9300:	mov	w8, w10
    9304:	ldur	x9, [x29, #-208]
    9308:	add	x8, x8, x9
    930c:	cmp	x8, #0x8
    9310:	b.hi	9348 <ffi_call@@LIBFFI_BASE_7.0+0x410>  // b.pmore
    9314:	ldur	x8, [x29, #-48]
    9318:	add	x8, x8, #0x80
    931c:	ldur	w9, [x29, #-88]
    9320:	mov	w10, w9
    9324:	mov	x11, #0x8                   	// #8
    9328:	mul	x10, x11, x10
    932c:	add	x8, x8, x10
    9330:	stur	x8, [x29, #-192]
    9334:	ldur	x8, [x29, #-208]
    9338:	ldur	w9, [x29, #-88]
    933c:	add	w8, w9, w8
    9340:	stur	w8, [x29, #-88]
    9344:	b	9370 <ffi_call@@LIBFFI_BASE_7.0+0x438>
    9348:	sub	x0, x29, #0x58
    934c:	mov	w8, #0x8                   	// #8
    9350:	stur	w8, [x29, #-88]
    9354:	ldur	x1, [x29, #-56]
    9358:	ldur	x9, [x29, #-144]
    935c:	ldrh	w8, [x9, #8]
    9360:	mov	w2, w8
    9364:	ldur	x3, [x29, #-152]
    9368:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    936c:	stur	x0, [x29, #-192]
    9370:	ldur	x0, [x29, #-192]
    9374:	ldur	x1, [x29, #-160]
    9378:	ldur	x2, [x29, #-152]
    937c:	bl	19e0 <memcpy@plt>
    9380:	b	9388 <ffi_call@@LIBFFI_BASE_7.0+0x450>
    9384:	bl	1b10 <abort@plt>
    9388:	ldur	w8, [x29, #-116]
    938c:	add	w8, w8, #0x1
    9390:	stur	w8, [x29, #-116]
    9394:	b	90b0 <ffi_call@@LIBFFI_BASE_7.0+0x178>
    9398:	ldur	x0, [x29, #-48]
    939c:	ldur	x1, [x29, #-64]
    93a0:	ldur	x2, [x29, #-16]
    93a4:	ldur	x3, [x29, #-72]
    93a8:	ldur	w4, [x29, #-124]
    93ac:	ldur	x5, [x29, #-40]
    93b0:	bl	9ff0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xab0>
    93b4:	ldur	w8, [x29, #-124]
    93b8:	and	w8, w8, #0x40
    93bc:	cbz	w8, 93d0 <ffi_call@@LIBFFI_BASE_7.0+0x498>
    93c0:	ldur	x0, [x29, #-24]
    93c4:	ldur	x1, [x29, #-72]
    93c8:	ldur	x2, [x29, #-104]
    93cc:	bl	19e0 <memcpy@plt>
    93d0:	mov	sp, x29
    93d4:	ldp	x29, x30, [sp], #16
    93d8:	ret

00000000000093dc <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    93dc:	sub	sp, sp, #0x40
    93e0:	stp	x29, x30, [sp, #48]
    93e4:	add	x29, sp, #0x30
    93e8:	stur	x0, [x29, #-8]
    93ec:	stur	x1, [x29, #-16]
    93f0:	str	x2, [sp, #24]
    93f4:	str	x3, [sp, #16]
    93f8:	str	x4, [sp, #8]
    93fc:	ldur	x0, [x29, #-8]
    9400:	ldur	x1, [x29, #-16]
    9404:	ldr	x2, [sp, #24]
    9408:	ldr	x3, [sp, #16]
    940c:	ldr	x4, [sp, #8]
    9410:	bl	8f7c <ffi_call@@LIBFFI_BASE_7.0+0x44>
    9414:	ldp	x29, x30, [sp, #48]
    9418:	add	sp, sp, #0x40
    941c:	ret

0000000000009420 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    9420:	sub	sp, sp, #0x60
    9424:	stp	x29, x30, [sp, #80]
    9428:	add	x29, sp, #0x50
    942c:	stur	x0, [x29, #-16]
    9430:	stur	x1, [x29, #-24]
    9434:	stur	x2, [x29, #-32]
    9438:	str	x3, [sp, #40]
    943c:	str	x4, [sp, #32]
    9440:	ldur	x8, [x29, #-24]
    9444:	ldr	w9, [x8]
    9448:	cmp	w9, #0x1
    944c:	b.eq	945c <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x3c>  // b.none
    9450:	mov	w8, #0x2                   	// #2
    9454:	stur	w8, [x29, #-4]
    9458:	b	9504 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0xe4>
    945c:	ldur	x8, [x29, #-24]
    9460:	ldr	w9, [x8, #28]
    9464:	and	w9, w9, #0x80
    9468:	cbz	w9, 947c <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x5c>
    946c:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9470:	add	x8, x8, #0x160
    9474:	str	x8, [sp, #24]
    9478:	b	9488 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x68>
    947c:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9480:	add	x8, x8, #0x180
    9484:	str	x8, [sp, #24]
    9488:	ldur	x8, [x29, #-16]
    948c:	str	x8, [sp, #16]
    9490:	ldr	x8, [sp, #16]
    9494:	adrp	x9, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9498:	add	x9, x9, #0x67c
    949c:	ldr	q0, [x9]
    94a0:	str	q0, [x8]
    94a4:	ldr	x8, [sp, #24]
    94a8:	ldr	x9, [sp, #16]
    94ac:	str	x8, [x9, #16]
    94b0:	ldr	x0, [sp, #16]
    94b4:	ldr	x8, [sp, #16]
    94b8:	add	x1, x8, #0x18
    94bc:	bl	9514 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0xf4>
    94c0:	ldr	x0, [sp, #16]
    94c4:	bl	3600 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7fc>
    94c8:	str	x0, [sp, #8]
    94cc:	ldr	x0, [sp, #8]
    94d0:	ldr	x8, [sp, #8]
    94d4:	add	x1, x8, #0x18
    94d8:	bl	9514 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0xf4>
    94dc:	ldur	x8, [x29, #-24]
    94e0:	ldur	x9, [x29, #-16]
    94e4:	str	x8, [x9, #24]
    94e8:	ldur	x8, [x29, #-32]
    94ec:	ldur	x9, [x29, #-16]
    94f0:	str	x8, [x9, #32]
    94f4:	ldr	x8, [sp, #40]
    94f8:	ldur	x9, [x29, #-16]
    94fc:	str	x8, [x9, #40]
    9500:	stur	wzr, [x29, #-4]
    9504:	ldur	w0, [x29, #-4]
    9508:	ldp	x29, x30, [sp, #80]
    950c:	add	sp, sp, #0x60
    9510:	ret
    9514:	sub	sp, sp, #0x20
    9518:	stp	x29, x30, [sp, #16]
    951c:	add	x29, sp, #0x10
    9520:	str	x0, [sp, #8]
    9524:	str	x1, [sp]
    9528:	ldr	x0, [sp, #8]
    952c:	ldr	x1, [sp]
    9530:	bl	a318 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xdd8>
    9534:	ldp	x29, x30, [sp, #16]
    9538:	add	sp, sp, #0x20
    953c:	ret

0000000000009540 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    9540:	sub	sp, sp, #0x30
    9544:	str	x0, [sp, #32]
    9548:	str	x1, [sp, #24]
    954c:	str	x2, [sp, #16]
    9550:	ldr	x8, [sp, #24]
    9554:	ldr	w9, [x8]
    9558:	cmp	w9, #0x1
    955c:	b.eq	956c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2c>  // b.none
    9560:	mov	w8, #0x2                   	// #2
    9564:	str	w8, [sp, #44]
    9568:	b	95c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x80>
    956c:	ldr	x8, [sp, #24]
    9570:	ldr	w9, [x8, #28]
    9574:	and	w9, w9, #0x80
    9578:	cbz	w9, 958c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4c>
    957c:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9580:	add	x8, x8, #0x2d0
    9584:	str	x8, [sp, #8]
    9588:	b	9598 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x58>
    958c:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9590:	add	x8, x8, #0x2f0
    9594:	str	x8, [sp, #8]
    9598:	ldr	x8, [sp, #8]
    959c:	ldr	x9, [sp, #32]
    95a0:	str	x8, [x9]
    95a4:	ldr	x8, [sp, #24]
    95a8:	ldr	x9, [sp, #32]
    95ac:	str	x8, [x9, #8]
    95b0:	ldr	x8, [sp, #16]
    95b4:	ldr	x9, [sp, #32]
    95b8:	str	x8, [x9, #16]
    95bc:	str	wzr, [sp, #44]
    95c0:	ldr	w0, [sp, #44]
    95c4:	add	sp, sp, #0x30
    95c8:	ret
    95cc:	stp	x29, x30, [sp, #-16]!
    95d0:	mov	x29, sp
    95d4:	sub	sp, sp, #0xa0
    95d8:	mov	x8, #0x8                   	// #8
    95dc:	mov	x9, #0x1                   	// #1
    95e0:	sub	x10, x29, #0x60
    95e4:	stur	x0, [x29, #-8]
    95e8:	stur	x1, [x29, #-16]
    95ec:	stur	x2, [x29, #-24]
    95f0:	stur	x3, [x29, #-32]
    95f4:	stur	x4, [x29, #-40]
    95f8:	stur	x5, [x29, #-48]
    95fc:	stur	x6, [x29, #-56]
    9600:	ldur	x11, [x29, #-8]
    9604:	ldr	w12, [x11, #4]
    9608:	mov	w11, w12
    960c:	mul	x8, x11, x8
    9610:	mul	x8, x8, x9
    9614:	add	x8, x8, #0xf
    9618:	and	x8, x8, #0xfffffffffffffff0
    961c:	mov	x9, sp
    9620:	subs	x8, x9, x8
    9624:	mov	sp, x8
    9628:	stur	x8, [x29, #-64]
    962c:	mov	x0, x10
    9630:	bl	9974 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x434>
    9634:	stur	wzr, [x29, #-68]
    9638:	ldur	x8, [x29, #-8]
    963c:	ldr	w12, [x8, #4]
    9640:	stur	w12, [x29, #-76]
    9644:	ldur	w8, [x29, #-68]
    9648:	ldur	w9, [x29, #-76]
    964c:	cmp	w8, w9
    9650:	b.ge	992c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3ec>  // b.tcont
    9654:	ldur	x8, [x29, #-8]
    9658:	mov	x9, #0x8                   	// #8
    965c:	ldr	x8, [x8, #8]
    9660:	ldursw	x10, [x29, #-68]
    9664:	mul	x9, x9, x10
    9668:	add	x8, x8, x9
    966c:	ldr	x8, [x8]
    9670:	stur	x8, [x29, #-104]
    9674:	ldur	x8, [x29, #-104]
    9678:	ldrh	w11, [x8, #10]
    967c:	stur	w11, [x29, #-108]
    9680:	ldur	x8, [x29, #-104]
    9684:	ldr	x8, [x8]
    9688:	stur	x8, [x29, #-128]
    968c:	ldur	w11, [x29, #-108]
    9690:	stur	w11, [x29, #-140]
    9694:	cbz	w11, 9704 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c4>
    9698:	b	969c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x15c>
    969c:	ldur	w8, [x29, #-140]
    96a0:	cmp	w8, #0x1
    96a4:	b.eq	9708 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c8>  // b.none
    96a8:	b	96ac <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x16c>
    96ac:	ldur	w8, [x29, #-140]
    96b0:	subs	w9, w8, #0x2
    96b4:	cmp	w9, #0x2
    96b8:	b.ls	9738 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1f8>  // b.plast
    96bc:	b	96c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x180>
    96c0:	ldur	w8, [x29, #-140]
    96c4:	subs	w9, w8, #0x5
    96c8:	cmp	w9, #0x7
    96cc:	b.ls	9708 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c8>  // b.plast
    96d0:	b	96d4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x194>
    96d4:	ldur	w8, [x29, #-140]
    96d8:	cmp	w8, #0xd
    96dc:	b.eq	9738 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1f8>  // b.none
    96e0:	b	96e4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1a4>
    96e4:	ldur	w8, [x29, #-140]
    96e8:	cmp	w8, #0xe
    96ec:	b.eq	9708 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c8>  // b.none
    96f0:	b	96f4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1b4>
    96f4:	ldur	w8, [x29, #-140]
    96f8:	cmp	w8, #0xf
    96fc:	b.eq	9738 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1f8>  // b.none
    9700:	b	9918 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d8>
    9704:	b	991c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>
    9708:	ldur	x0, [x29, #-32]
    970c:	ldur	x2, [x29, #-40]
    9710:	ldur	x3, [x29, #-128]
    9714:	sub	x1, x29, #0x60
    9718:	bl	999c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x45c>
    971c:	ldur	x8, [x29, #-64]
    9720:	ldursw	x9, [x29, #-68]
    9724:	mov	x10, #0x8                   	// #8
    9728:	mul	x9, x10, x9
    972c:	add	x8, x8, x9
    9730:	str	x0, [x8]
    9734:	b	991c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>
    9738:	ldur	x0, [x29, #-104]
    973c:	bl	8c28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x55c8>
    9740:	stur	w0, [x29, #-72]
    9744:	ldur	w8, [x29, #-72]
    9748:	cbz	w8, 9820 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2e0>
    974c:	ldur	w8, [x29, #-72]
    9750:	and	w8, w8, #0x3
    9754:	mov	w9, #0x4                   	// #4
    9758:	subs	w8, w9, w8
    975c:	mov	w0, w8
    9760:	sxtw	x10, w0
    9764:	stur	x10, [x29, #-120]
    9768:	ldur	w8, [x29, #-92]
    976c:	mov	w10, w8
    9770:	ldur	x11, [x29, #-120]
    9774:	add	x10, x10, x11
    9778:	cmp	x10, #0x8
    977c:	b.hi	97d8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x298>  // b.pmore
    9780:	ldur	x8, [x29, #-32]
    9784:	ldur	w9, [x29, #-92]
    9788:	mov	w10, w9
    978c:	mov	x11, #0x10                  	// #16
    9790:	mul	x10, x11, x10
    9794:	add	x8, x8, x10
    9798:	stur	x8, [x29, #-136]
    979c:	ldur	x8, [x29, #-120]
    97a0:	ldur	w9, [x29, #-92]
    97a4:	add	w8, w9, w8
    97a8:	stur	w8, [x29, #-92]
    97ac:	ldur	x0, [x29, #-136]
    97b0:	ldur	x1, [x29, #-136]
    97b4:	ldur	w2, [x29, #-72]
    97b8:	bl	9a30 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4f0>
    97bc:	ldur	x10, [x29, #-64]
    97c0:	ldursw	x11, [x29, #-68]
    97c4:	mov	x12, #0x8                   	// #8
    97c8:	mul	x11, x12, x11
    97cc:	add	x10, x10, x11
    97d0:	str	x0, [x10]
    97d4:	b	981c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2dc>
    97d8:	sub	x0, x29, #0x60
    97dc:	mov	w8, #0x8                   	// #8
    97e0:	stur	w8, [x29, #-92]
    97e4:	ldur	x1, [x29, #-40]
    97e8:	ldur	x9, [x29, #-104]
    97ec:	mov	x10, #0x8                   	// #8
    97f0:	ldrh	w8, [x9, #8]
    97f4:	mov	w2, w8
    97f8:	ldur	x3, [x29, #-128]
    97fc:	stur	x10, [x29, #-152]
    9800:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    9804:	ldur	x9, [x29, #-64]
    9808:	ldursw	x10, [x29, #-68]
    980c:	ldur	x11, [x29, #-152]
    9810:	mul	x10, x11, x10
    9814:	add	x9, x9, x10
    9818:	str	x0, [x9]
    981c:	b	9914 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d4>
    9820:	ldur	x8, [x29, #-128]
    9824:	cmp	x8, #0x10
    9828:	b.ls	9860 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x320>  // b.plast
    982c:	ldur	x0, [x29, #-32]
    9830:	ldur	x2, [x29, #-40]
    9834:	sub	x1, x29, #0x60
    9838:	mov	x3, #0x8                   	// #8
    983c:	bl	999c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x45c>
    9840:	ldr	x8, [x0]
    9844:	ldur	x9, [x29, #-64]
    9848:	ldursw	x10, [x29, #-68]
    984c:	mov	x11, #0x8                   	// #8
    9850:	mul	x10, x11, x10
    9854:	add	x9, x9, x10
    9858:	str	x8, [x9]
    985c:	b	9914 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d4>
    9860:	ldur	x8, [x29, #-128]
    9864:	add	x8, x8, #0x7
    9868:	mov	x9, #0x8                   	// #8
    986c:	udiv	x8, x8, x9
    9870:	stur	x8, [x29, #-120]
    9874:	ldur	w10, [x29, #-96]
    9878:	mov	w8, w10
    987c:	ldur	x9, [x29, #-120]
    9880:	add	x8, x8, x9
    9884:	cmp	x8, #0x8
    9888:	b.hi	98d0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x390>  // b.pmore
    988c:	ldur	x8, [x29, #-32]
    9890:	add	x8, x8, #0x80
    9894:	ldur	w9, [x29, #-96]
    9898:	mov	w10, w9
    989c:	mov	x11, #0x8                   	// #8
    98a0:	mul	x10, x11, x10
    98a4:	add	x8, x8, x10
    98a8:	ldur	x10, [x29, #-64]
    98ac:	ldursw	x12, [x29, #-68]
    98b0:	mul	x11, x11, x12
    98b4:	add	x10, x10, x11
    98b8:	str	x8, [x10]
    98bc:	ldur	x8, [x29, #-120]
    98c0:	ldur	w9, [x29, #-96]
    98c4:	add	w8, w9, w8
    98c8:	stur	w8, [x29, #-96]
    98cc:	b	9914 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d4>
    98d0:	sub	x0, x29, #0x60
    98d4:	mov	w8, #0x8                   	// #8
    98d8:	stur	w8, [x29, #-96]
    98dc:	ldur	x1, [x29, #-40]
    98e0:	ldur	x9, [x29, #-104]
    98e4:	mov	x10, #0x8                   	// #8
    98e8:	ldrh	w8, [x9, #8]
    98ec:	mov	w2, w8
    98f0:	ldur	x3, [x29, #-128]
    98f4:	stur	x10, [x29, #-160]
    98f8:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    98fc:	ldur	x9, [x29, #-64]
    9900:	ldursw	x10, [x29, #-68]
    9904:	ldur	x11, [x29, #-160]
    9908:	mul	x10, x11, x10
    990c:	add	x9, x9, x10
    9910:	str	x0, [x9]
    9914:	b	991c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3dc>
    9918:	bl	1b10 <abort@plt>
    991c:	ldur	w8, [x29, #-68]
    9920:	add	w8, w8, #0x1
    9924:	stur	w8, [x29, #-68]
    9928:	b	9644 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x104>
    992c:	ldur	x8, [x29, #-8]
    9930:	ldr	w9, [x8, #28]
    9934:	stur	w9, [x29, #-80]
    9938:	ldur	w9, [x29, #-80]
    993c:	and	w9, w9, #0x20
    9940:	cbz	w9, 994c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x40c>
    9944:	ldur	x8, [x29, #-56]
    9948:	stur	x8, [x29, #-48]
    994c:	ldur	x8, [x29, #-16]
    9950:	ldur	x0, [x29, #-8]
    9954:	ldur	x1, [x29, #-48]
    9958:	ldur	x2, [x29, #-64]
    995c:	ldur	x3, [x29, #-24]
    9960:	blr	x8
    9964:	ldur	w0, [x29, #-80]
    9968:	mov	sp, x29
    996c:	ldp	x29, x30, [sp], #16
    9970:	ret
    9974:	sub	sp, sp, #0x10
    9978:	str	x0, [sp, #8]
    997c:	ldr	x8, [sp, #8]
    9980:	str	wzr, [x8]
    9984:	ldr	x8, [sp, #8]
    9988:	str	wzr, [x8, #4]
    998c:	ldr	x8, [sp, #8]
    9990:	str	xzr, [x8, #8]
    9994:	add	sp, sp, #0x10
    9998:	ret
    999c:	sub	sp, sp, #0x40
    99a0:	stp	x29, x30, [sp, #48]
    99a4:	add	x29, sp, #0x30
    99a8:	stur	x0, [x29, #-16]
    99ac:	str	x1, [sp, #24]
    99b0:	str	x2, [sp, #16]
    99b4:	str	x3, [sp, #8]
    99b8:	ldr	x8, [sp, #24]
    99bc:	ldr	w9, [x8]
    99c0:	cmp	w9, #0x8
    99c4:	b.cs	99fc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4bc>  // b.hs, b.nlast
    99c8:	ldur	x8, [x29, #-16]
    99cc:	add	x8, x8, #0x80
    99d0:	ldr	x9, [sp, #24]
    99d4:	ldr	w10, [x9]
    99d8:	mov	w11, w10
    99dc:	mov	w10, w11
    99e0:	add	w10, w10, #0x1
    99e4:	str	w10, [x9]
    99e8:	mov	x9, #0x8                   	// #8
    99ec:	mul	x9, x9, x11
    99f0:	add	x8, x8, x9
    99f4:	stur	x8, [x29, #-8]
    99f8:	b	9a20 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4e0>
    99fc:	ldr	x8, [sp, #24]
    9a00:	mov	w9, #0x8                   	// #8
    9a04:	str	w9, [x8]
    9a08:	ldr	x0, [sp, #24]
    9a0c:	ldr	x1, [sp, #16]
    9a10:	ldr	x2, [sp, #8]
    9a14:	ldr	x3, [sp, #8]
    9a18:	bl	9bcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>
    9a1c:	stur	x0, [x29, #-8]
    9a20:	ldur	x0, [x29, #-8]
    9a24:	ldp	x29, x30, [sp, #48]
    9a28:	add	sp, sp, #0x40
    9a2c:	ret
    9a30:	sub	sp, sp, #0x40
    9a34:	stp	x29, x30, [sp, #48]
    9a38:	add	x29, sp, #0x30
    9a3c:	stur	x0, [x29, #-16]
    9a40:	str	x1, [sp, #24]
    9a44:	str	w2, [sp, #20]
    9a48:	ldr	w8, [sp, #20]
    9a4c:	subs	w8, w8, #0x8
    9a50:	mov	w9, w8
    9a54:	subs	w8, w8, #0x7
    9a58:	str	x9, [sp, #8]
    9a5c:	b.hi	9b60 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x620>  // b.pmore
    9a60:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9a64:	add	x8, x8, #0x624
    9a68:	ldr	x11, [sp, #8]
    9a6c:	ldrsw	x10, [x8, x11, lsl #2]
    9a70:	add	x9, x8, x10
    9a74:	br	x9
    9a78:	ldur	x8, [x29, #-16]
    9a7c:	ldr	x9, [sp, #24]
    9a80:	subs	x8, x8, x9
    9a84:	b.ne	9a90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x550>  // b.any
    9a88:	b	9a8c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x54c>
    9a8c:	b	9aa4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x564>
    9a90:	ldr	x8, [sp, #24]
    9a94:	ldr	s0, [x8]
    9a98:	ldur	x8, [x29, #-16]
    9a9c:	str	s0, [x8]
    9aa0:	b	9aa4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x564>
    9aa4:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9aa8:	ldur	x8, [x29, #-16]
    9aac:	ldr	x9, [sp, #24]
    9ab0:	ldp	q16, q17, [x9]
    9ab4:	st2	{v16.s, v17.s}[0], [x8]
    9ab8:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9abc:	ldur	x8, [x29, #-16]
    9ac0:	ldr	x9, [sp, #24]
    9ac4:	ldp	q16, q17, [x9]
    9ac8:	ldr	q18, [x9, #32]
    9acc:	st3	{v16.s-v18.s}[0], [x8]
    9ad0:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9ad4:	ldur	x8, [x29, #-16]
    9ad8:	ldr	x9, [sp, #24]
    9adc:	ldp	q16, q17, [x9]
    9ae0:	ldp	q18, q19, [x9, #32]
    9ae4:	st4	{v16.s-v19.s}[0], [x8]
    9ae8:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9aec:	ldur	x8, [x29, #-16]
    9af0:	ldr	x9, [sp, #24]
    9af4:	subs	x8, x8, x9
    9af8:	b.ne	9b04 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5c4>  // b.any
    9afc:	b	9b00 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5c0>
    9b00:	b	9b18 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5d8>
    9b04:	ldr	x8, [sp, #24]
    9b08:	ldr	d0, [x8]
    9b0c:	ldur	x8, [x29, #-16]
    9b10:	str	d0, [x8]
    9b14:	b	9b18 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5d8>
    9b18:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9b1c:	ldur	x8, [x29, #-16]
    9b20:	ldr	x9, [sp, #24]
    9b24:	ldp	q16, q17, [x9]
    9b28:	st2	{v16.d, v17.d}[0], [x8]
    9b2c:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9b30:	ldur	x8, [x29, #-16]
    9b34:	ldr	x9, [sp, #24]
    9b38:	ldp	q16, q17, [x9]
    9b3c:	ldr	q18, [x9, #32]
    9b40:	st3	{v16.d-v18.d}[0], [x8]
    9b44:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9b48:	ldur	x8, [x29, #-16]
    9b4c:	ldr	x9, [sp, #24]
    9b50:	ldp	q16, q17, [x9]
    9b54:	ldp	q18, q19, [x9, #32]
    9b58:	st4	{v16.d-v19.d}[0], [x8]
    9b5c:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9b60:	ldur	x8, [x29, #-16]
    9b64:	ldr	x9, [sp, #24]
    9b68:	subs	x8, x8, x9
    9b6c:	b.eq	9bac <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>  // b.none
    9b70:	b	9b74 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x634>
    9b74:	ldur	x8, [x29, #-16]
    9b78:	ldr	x1, [sp, #24]
    9b7c:	ldr	w9, [sp, #20]
    9b80:	and	w9, w9, #0x3
    9b84:	mov	w10, #0x4                   	// #4
    9b88:	subs	w9, w10, w9
    9b8c:	lsl	w9, w9, #4
    9b90:	mov	w2, w9
    9b94:	mov	x0, x8
    9b98:	str	x8, [sp]
    9b9c:	bl	19e0 <memcpy@plt>
    9ba0:	ldr	x8, [sp]
    9ba4:	stur	x8, [x29, #-8]
    9ba8:	b	9bbc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x67c>
    9bac:	b	9bb0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x670>
    9bb0:	ldur	x8, [x29, #-16]
    9bb4:	stur	x8, [x29, #-8]
    9bb8:	b	9bbc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x67c>
    9bbc:	ldur	x0, [x29, #-8]
    9bc0:	ldp	x29, x30, [sp, #48]
    9bc4:	add	sp, sp, #0x40
    9bc8:	ret
    9bcc:	sub	sp, sp, #0x30
    9bd0:	str	x0, [sp, #40]
    9bd4:	str	x1, [sp, #32]
    9bd8:	str	x2, [sp, #24]
    9bdc:	str	x3, [sp, #16]
    9be0:	ldr	x8, [sp, #40]
    9be4:	ldr	x8, [x8, #8]
    9be8:	str	x8, [sp, #8]
    9bec:	ldr	x8, [sp, #24]
    9bf0:	cmp	x8, #0x8
    9bf4:	b.cs	9c00 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6c0>  // b.hs, b.nlast
    9bf8:	mov	x8, #0x8                   	// #8
    9bfc:	str	x8, [sp, #24]
    9c00:	ldr	x8, [sp, #8]
    9c04:	subs	x8, x8, #0x1
    9c08:	ldr	x9, [sp, #24]
    9c0c:	subs	x9, x9, #0x1
    9c10:	orr	x8, x8, x9
    9c14:	add	x8, x8, #0x1
    9c18:	str	x8, [sp, #8]
    9c1c:	ldr	x8, [sp, #8]
    9c20:	ldr	x9, [sp, #16]
    9c24:	add	x8, x8, x9
    9c28:	ldr	x9, [sp, #40]
    9c2c:	str	x8, [x9, #8]
    9c30:	ldr	x8, [sp, #32]
    9c34:	ldr	x9, [sp, #8]
    9c38:	add	x0, x8, x9
    9c3c:	add	sp, sp, #0x30
    9c40:	ret
    9c44:	sub	sp, sp, #0x30
    9c48:	stp	x29, x30, [sp, #32]
    9c4c:	add	x29, sp, #0x20
    9c50:	mov	w8, #0xffffffff            	// #-1
    9c54:	stur	x0, [x29, #-8]
    9c58:	ldur	x9, [x29, #-8]
    9c5c:	ldr	x9, [x9, #16]
    9c60:	str	x9, [sp, #16]
    9c64:	str	w8, [sp, #8]
    9c68:	ldr	x9, [sp, #16]
    9c6c:	cbz	x9, 9d10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7d0>
    9c70:	str	wzr, [sp, #12]
    9c74:	ldr	x8, [sp, #16]
    9c78:	ldrsw	x9, [sp, #12]
    9c7c:	mov	x10, #0x8                   	// #8
    9c80:	mul	x9, x10, x9
    9c84:	add	x8, x8, x9
    9c88:	ldr	x8, [x8]
    9c8c:	cbz	x8, 9d10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7d0>
    9c90:	ldr	x8, [sp, #16]
    9c94:	ldrsw	x9, [sp, #12]
    9c98:	mov	x10, #0x8                   	// #8
    9c9c:	mul	x9, x10, x9
    9ca0:	add	x8, x8, x9
    9ca4:	ldr	x8, [x8]
    9ca8:	ldrh	w11, [x8, #10]
    9cac:	str	w11, [sp, #8]
    9cb0:	ldr	w11, [sp, #8]
    9cb4:	cmp	w11, #0xd
    9cb8:	b.eq	9cc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x788>  // b.none
    9cbc:	ldr	w8, [sp, #8]
    9cc0:	cmp	w8, #0xf
    9cc4:	b.ne	9cfc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7bc>  // b.any
    9cc8:	ldr	x8, [sp, #16]
    9ccc:	ldrsw	x9, [sp, #12]
    9cd0:	mov	x10, #0x8                   	// #8
    9cd4:	mul	x9, x10, x9
    9cd8:	add	x8, x8, x9
    9cdc:	ldr	x0, [x8]
    9ce0:	bl	9c44 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x704>
    9ce4:	str	w0, [sp, #8]
    9ce8:	ldr	w11, [sp, #8]
    9cec:	cmp	w11, #0x0
    9cf0:	cset	w11, ge  // ge = tcont
    9cf4:	tbnz	w11, #0, 9cfc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7bc>
    9cf8:	b	9d00 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7c0>
    9cfc:	b	9d10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7d0>
    9d00:	ldr	w8, [sp, #12]
    9d04:	add	w8, w8, #0x1
    9d08:	str	w8, [sp, #12]
    9d0c:	b	9c74 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x734>
    9d10:	ldr	w0, [sp, #8]
    9d14:	ldp	x29, x30, [sp, #32]
    9d18:	add	sp, sp, #0x30
    9d1c:	ret
    9d20:	sub	sp, sp, #0x40
    9d24:	stp	x29, x30, [sp, #48]
    9d28:	add	x29, sp, #0x30
    9d2c:	stur	x0, [x29, #-16]
    9d30:	stur	w1, [x29, #-20]
    9d34:	ldur	x8, [x29, #-16]
    9d38:	ldr	x8, [x8, #16]
    9d3c:	str	x8, [sp, #16]
    9d40:	ldr	x8, [sp, #16]
    9d44:	cbz	x8, 9df8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b8>
    9d48:	str	wzr, [sp, #12]
    9d4c:	ldr	x8, [sp, #16]
    9d50:	ldrsw	x9, [sp, #12]
    9d54:	mov	x10, #0x8                   	// #8
    9d58:	mul	x9, x10, x9
    9d5c:	add	x8, x8, x9
    9d60:	ldr	x8, [x8]
    9d64:	cbz	x8, 9df8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8b8>
    9d68:	ldr	x8, [sp, #16]
    9d6c:	ldrsw	x9, [sp, #12]
    9d70:	mov	x10, #0x8                   	// #8
    9d74:	mul	x9, x10, x9
    9d78:	add	x8, x8, x9
    9d7c:	ldr	x8, [x8]
    9d80:	ldrh	w11, [x8, #10]
    9d84:	str	w11, [sp, #8]
    9d88:	ldr	w11, [sp, #8]
    9d8c:	cmp	w11, #0xd
    9d90:	b.eq	9da0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x860>  // b.none
    9d94:	ldr	w8, [sp, #8]
    9d98:	cmp	w8, #0xf
    9d9c:	b.ne	9dd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x890>  // b.any
    9da0:	ldr	x8, [sp, #16]
    9da4:	ldrsw	x9, [sp, #12]
    9da8:	mov	x10, #0x8                   	// #8
    9dac:	mul	x9, x10, x9
    9db0:	add	x8, x8, x9
    9db4:	ldr	x0, [x8]
    9db8:	ldur	w1, [x29, #-20]
    9dbc:	bl	9d20 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7e0>
    9dc0:	cbnz	w0, 9dcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x88c>
    9dc4:	stur	wzr, [x29, #-4]
    9dc8:	b	9e00 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8c0>
    9dcc:	b	9de8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8a8>
    9dd0:	ldr	w8, [sp, #8]
    9dd4:	ldur	w9, [x29, #-20]
    9dd8:	cmp	w8, w9
    9ddc:	b.eq	9de8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8a8>  // b.none
    9de0:	stur	wzr, [x29, #-4]
    9de4:	b	9e00 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8c0>
    9de8:	ldr	w8, [sp, #12]
    9dec:	add	w8, w8, #0x1
    9df0:	str	w8, [sp, #12]
    9df4:	b	9d4c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x80c>
    9df8:	mov	w8, #0x1                   	// #1
    9dfc:	stur	w8, [x29, #-4]
    9e00:	ldur	w0, [x29, #-4]
    9e04:	ldp	x29, x30, [sp, #48]
    9e08:	add	sp, sp, #0x40
    9e0c:	ret
    9e10:	sub	sp, sp, #0x30
    9e14:	stp	x29, x30, [sp, #32]
    9e18:	add	x29, sp, #0x20
    9e1c:	str	x0, [sp, #16]
    9e20:	str	w1, [sp, #12]
    9e24:	ldr	w8, [sp, #12]
    9e28:	subs	w8, w8, #0x1
    9e2c:	mov	w9, w8
    9e30:	ubfx	x9, x9, #0, #32
    9e34:	cmp	x9, #0xd
    9e38:	str	x9, [sp]
    9e3c:	b.hi	9ee4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a4>  // b.pmore
    9e40:	adrp	x8, a000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xac0>
    9e44:	add	x8, x8, #0x644
    9e48:	ldr	x11, [sp]
    9e4c:	ldrsw	x10, [x8, x11, lsl #2]
    9e50:	add	x9, x8, x10
    9e54:	br	x9
    9e58:	ldr	x8, [sp, #16]
    9e5c:	ldrb	w9, [x8]
    9e60:	mov	w8, w9
    9e64:	stur	x8, [x29, #-8]
    9e68:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9e6c:	ldr	x8, [sp, #16]
    9e70:	ldrsb	x8, [x8]
    9e74:	stur	x8, [x29, #-8]
    9e78:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9e7c:	ldr	x8, [sp, #16]
    9e80:	ldrh	w9, [x8]
    9e84:	mov	w8, w9
    9e88:	stur	x8, [x29, #-8]
    9e8c:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9e90:	ldr	x8, [sp, #16]
    9e94:	ldrsh	x8, [x8]
    9e98:	stur	x8, [x29, #-8]
    9e9c:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9ea0:	ldr	x8, [sp, #16]
    9ea4:	ldr	w9, [x8]
    9ea8:	mov	w8, w9
    9eac:	stur	x8, [x29, #-8]
    9eb0:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9eb4:	ldr	x8, [sp, #16]
    9eb8:	ldrsw	x8, [x8]
    9ebc:	stur	x8, [x29, #-8]
    9ec0:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9ec4:	ldr	x8, [sp, #16]
    9ec8:	ldr	x8, [x8]
    9ecc:	stur	x8, [x29, #-8]
    9ed0:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9ed4:	ldr	x8, [sp, #16]
    9ed8:	ldr	x8, [x8]
    9edc:	stur	x8, [x29, #-8]
    9ee0:	b	9ee8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9a8>
    9ee4:	bl	1b10 <abort@plt>
    9ee8:	ldur	x0, [x29, #-8]
    9eec:	ldp	x29, x30, [sp, #32]
    9ef0:	add	sp, sp, #0x30
    9ef4:	ret
    9ef8:	sub	sp, sp, #0x30
    9efc:	str	x0, [sp, #40]
    9f00:	str	x1, [sp, #32]
    9f04:	str	w2, [sp, #28]
    9f08:	ldr	w8, [sp, #28]
    9f0c:	subs	w8, w8, #0x8
    9f10:	mov	w0, w8
    9f14:	sxtw	x9, w0
    9f18:	str	x9, [sp, #16]
    9f1c:	ldr	x9, [sp, #16]
    9f20:	add	x9, x9, x9, lsl #1
    9f24:	lsl	x9, x9, #2
    9f28:	ldr	x10, [sp, #40]
    9f2c:	ldr	x11, [sp, #32]
    9f30:	adr	x12, 9f3c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x9fc>
    9f34:	add	x12, x12, x9
    9f38:	br	x12
    9f3c:	ldp	s16, s17, [x11]
    9f40:	ldp	s18, s19, [x11, #8]
    9f44:	b	9fc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa88>
    9f48:	ldp	s16, s17, [x11]
    9f4c:	ldr	s18, [x11, #8]
    9f50:	b	9fcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa8c>
    9f54:	ldp	s16, s17, [x11]
    9f58:	b	9fd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa90>
    9f5c:	nop
    9f60:	ldr	s16, [x11]
    9f64:	b	9fd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa94>
    9f68:	nop
    9f6c:	ldp	d16, d17, [x11]
    9f70:	ldp	d18, d19, [x11, #16]
    9f74:	b	9fc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa88>
    9f78:	ldp	d16, d17, [x11]
    9f7c:	ldr	d18, [x11, #16]
    9f80:	b	9fcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa8c>
    9f84:	ldp	d16, d17, [x11]
    9f88:	b	9fd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa90>
    9f8c:	nop
    9f90:	ldr	d16, [x11]
    9f94:	b	9fd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa94>
    9f98:	nop
    9f9c:	ldp	q16, q17, [x11]
    9fa0:	ldp	q18, q19, [x11, #32]
    9fa4:	b	9fc8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa88>
    9fa8:	ldp	q16, q17, [x11]
    9fac:	ldr	q18, [x11, #32]
    9fb0:	b	9fcc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa8c>
    9fb4:	ldp	q16, q17, [x11]
    9fb8:	b	9fd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa90>
    9fbc:	nop
    9fc0:	ldr	q16, [x11]
    9fc4:	b	9fd4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xa94>
    9fc8:	str	q19, [x10, #48]
    9fcc:	str	q18, [x10, #32]
    9fd0:	str	q17, [x10, #16]
    9fd4:	str	q16, [x10]
    9fd8:	str	x12, [sp, #8]
    9fdc:	add	sp, sp, #0x30
    9fe0:	ret
    9fe4:	nop
    9fe8:	nop
    9fec:	nop
    9ff0:	stp	x29, x30, [x1]
    9ff4:	mov	x29, x1
    9ff8:	mov	sp, x0
    9ffc:	mov	x9, x2
    a000:	mov	x8, x3
    a004:	mov	x18, x5
    a008:	stp	x3, x4, [x29, #16]
    a00c:	tbz	w4, #7, a020 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xae0>
    a010:	ldp	q0, q1, [sp]
    a014:	ldp	q2, q3, [sp, #32]
    a018:	ldp	q4, q5, [sp, #64]
    a01c:	ldp	q6, q7, [sp, #96]
    a020:	ldp	x0, x1, [sp, #128]
    a024:	ldp	x2, x3, [sp, #144]
    a028:	ldp	x4, x5, [sp, #160]
    a02c:	ldp	x6, x7, [sp, #176]
    a030:	add	sp, sp, #0xc0
    a034:	blr	x9
    a038:	ldp	x3, x4, [x29, #16]
    a03c:	mov	sp, x29
    a040:	ldp	x29, x30, [x29]
    a044:	adr	x5, a060 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xb20>
    a048:	and	w4, w4, #0x1f
    a04c:	add	x5, x5, x4, lsl #3
    a050:	br	x5
    a054:	nop
    a058:	nop
    a05c:	nop
    a060:	ret
    a064:	nop
    a068:	str	x0, [x3]
    a06c:	ret
    a070:	stp	x0, x1, [x3]
    a074:	ret
    a078:	brk	#0x3e8
    a07c:	ret
    a080:	brk	#0x3e8
    a084:	ret
    a088:	brk	#0x3e8
    a08c:	ret
    a090:	brk	#0x3e8
    a094:	ret
    a098:	brk	#0x3e8
    a09c:	ret
    a0a0:	st4	{v0.s-v3.s}[0], [x3]
    a0a4:	ret
    a0a8:	st3	{v0.s-v2.s}[0], [x3]
    a0ac:	ret
    a0b0:	stp	s0, s1, [x3]
    a0b4:	ret
    a0b8:	str	s0, [x3]
    a0bc:	ret
    a0c0:	st4	{v0.d-v3.d}[0], [x3]
    a0c4:	ret
    a0c8:	st3	{v0.d-v2.d}[0], [x3]
    a0cc:	ret
    a0d0:	stp	d0, d1, [x3]
    a0d4:	ret
    a0d8:	str	d0, [x3]
    a0dc:	ret
    a0e0:	str	q3, [x3, #48]
    a0e4:	nop
    a0e8:	str	q2, [x3, #32]
    a0ec:	nop
    a0f0:	stp	q0, q1, [x3]
    a0f4:	ret
    a0f8:	str	q0, [x3]
    a0fc:	ret
    a100:	uxtb	w0, w0
    a104:	str	x0, [x3]
    a108:	ret
    a10c:	nop
    a110:	uxth	w0, w0
    a114:	str	x0, [x3]
    a118:	ret
    a11c:	nop
    a120:	mov	w0, w0
    a124:	str	x0, [x3]
    a128:	ret
    a12c:	nop
    a130:	sxtb	x0, w0
    a134:	str	x0, [x3]
    a138:	ret
    a13c:	nop
    a140:	sxth	x0, w0
    a144:	str	x0, [x3]
    a148:	ret
    a14c:	nop
    a150:	sxtw	x0, w0
    a154:	str	x0, [x3]
    a158:	ret
    a15c:	nop
    a160:	stp	x29, x30, [sp, #-272]!
    a164:	stp	q0, q1, [sp, #16]
    a168:	stp	q2, q3, [sp, #48]
    a16c:	stp	q4, q5, [sp, #80]
    a170:	stp	q6, q7, [sp, #112]
    a174:	b	a184 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xc44>
    a178:	nop
    a17c:	nop
    a180:	stp	x29, x30, [sp, #-272]!
    a184:	mov	x29, sp
    a188:	stp	x0, x1, [sp, #144]
    a18c:	stp	x2, x3, [sp, #160]
    a190:	stp	x4, x5, [sp, #176]
    a194:	stp	x6, x7, [sp, #192]
    a198:	ldp	x0, x1, [x17, #24]
    a19c:	ldr	x2, [x17, #40]
    a1a0:	add	x3, sp, #0x10
    a1a4:	add	x4, sp, #0x110
    a1a8:	add	x5, sp, #0xd0
    a1ac:	mov	x6, x8
    a1b0:	bl	95cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x8c>
    a1b4:	adr	x1, a1d0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xc90>
    a1b8:	and	w0, w0, #0x1f
    a1bc:	add	x1, x1, x0, lsl #3
    a1c0:	add	x3, sp, #0xd0
    a1c4:	br	x1
    a1c8:	nop
    a1cc:	nop
    a1d0:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a1d4:	nop
    a1d8:	ldr	x0, [x3]
    a1dc:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a1e0:	ldp	x0, x1, [x3]
    a1e4:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a1e8:	brk	#0x3e8
    a1ec:	nop
    a1f0:	brk	#0x3e8
    a1f4:	nop
    a1f8:	brk	#0x3e8
    a1fc:	nop
    a200:	brk	#0x3e8
    a204:	nop
    a208:	brk	#0x3e8
    a20c:	nop
    a210:	ldr	s3, [x3, #12]
    a214:	nop
    a218:	ldr	s2, [x3, #8]
    a21c:	nop
    a220:	ldp	s0, s1, [x3]
    a224:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a228:	ldr	s0, [x3]
    a22c:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a230:	ldr	d3, [x3, #24]
    a234:	nop
    a238:	ldr	d2, [x3, #16]
    a23c:	nop
    a240:	ldp	d0, d1, [x3]
    a244:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a248:	ldr	d0, [x3]
    a24c:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a250:	ldr	q3, [x3, #48]
    a254:	nop
    a258:	ldr	q2, [x3, #32]
    a25c:	nop
    a260:	ldp	q0, q1, [x3]
    a264:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a268:	ldr	q0, [x3]
    a26c:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a270:	ldrb	w0, [x3]
    a274:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a278:	brk	#0x3e8
    a27c:	nop
    a280:	ldrh	w0, [x3]
    a284:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a288:	brk	#0x3e8
    a28c:	nop
    a290:	ldr	w0, [x3]
    a294:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a298:	brk	#0x3e8
    a29c:	nop
    a2a0:	ldrsb	x0, [x3]
    a2a4:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a2a8:	brk	#0x3e8
    a2ac:	nop
    a2b0:	ldrsh	x0, [x3]
    a2b4:	b	a2c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xd88>
    a2b8:	brk	#0x3e8
    a2bc:	nop
    a2c0:	ldrsw	x0, [x3]
    a2c4:	nop
    a2c8:	ldp	x29, x30, [sp], #272
    a2cc:	ret
    a2d0:	stp	x29, x30, [sp, #-272]!
    a2d4:	stp	q0, q1, [sp, #16]
    a2d8:	stp	q2, q3, [sp, #48]
    a2dc:	stp	q4, q5, [sp, #80]
    a2e0:	stp	q6, q7, [sp, #112]
    a2e4:	b	a2f4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xdb4>
    a2e8:	nop
    a2ec:	nop
    a2f0:	stp	x29, x30, [sp, #-272]!
    a2f4:	mov	x29, sp
    a2f8:	stp	x0, x1, [sp, #144]
    a2fc:	stp	x2, x3, [sp, #160]
    a300:	stp	x4, x5, [sp, #176]
    a304:	stp	x6, x7, [sp, #192]
    a308:	ldp	x0, x1, [x18, #8]
    a30c:	mov	x2, x18
    a310:	b	a1a0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xc60>
    a314:	nop
    a318:	b	a320 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xde0>
    a31c:	nop
    a320:	adrp	x3, 1c000 <memcpy@GLIBC_2.17>
    a324:	ldr	w2, [x3, #1720]
    a328:	cbnz	w2, a338 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xdf8>
    a32c:	mrs	x4, ctr_el0
    a330:	mov	w2, w4
    a334:	str	w4, [x3, #1720]
    a338:	ubfx	x4, x2, #16, #4
    a33c:	mov	w3, #0x4                   	// #4
    a340:	and	w5, w2, #0xf
    a344:	lsl	w4, w3, w4
    a348:	sub	w2, w4, #0x1
    a34c:	bic	x2, x0, x2
    a350:	sxtw	x4, w4
    a354:	cmp	x2, x1
    a358:	lsl	w3, w3, w5
    a35c:	b.cs	a370 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe30>  // b.hs, b.nlast
    a360:	dc	cvau, x2
    a364:	add	x2, x2, x4
    a368:	cmp	x1, x2
    a36c:	b.hi	a360 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe20>  // b.pmore
    a370:	dsb	ish
    a374:	sub	w2, w3, #0x1
    a378:	sxtw	x3, w3
    a37c:	bic	x0, x0, x2
    a380:	cmp	x1, x0
    a384:	b.ls	a398 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe58>  // b.plast
    a388:	ic	ivau, x0
    a38c:	add	x0, x0, x3
    a390:	cmp	x1, x0
    a394:	b.hi	a388 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe48>  // b.pmore
    a398:	dsb	ish
    a39c:	isb
    a3a0:	ret

Disassembly of section .fini:

000000000000a3a4 <.fini>:
    a3a4:	stp	x29, x30, [sp, #-16]!
    a3a8:	mov	x29, sp
    a3ac:	ldp	x29, x30, [sp], #16
    a3b0:	ret
