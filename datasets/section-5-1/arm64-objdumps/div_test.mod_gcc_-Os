
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//div_test.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xa6c>:
   0:	sub	sp, sp, #0x60
   4:	add	x2, sp, #0x58
   8:	stp	x29, x30, [sp, #16]
   c:	add	x29, sp, #0x10
  10:	stp	x19, x20, [sp, #32]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	stp	x21, x22, [sp, #48]
  20:	stp	x23, x24, [sp, #64]
  24:	bl	0 <grub_divmod64s>
  28:	cmp	x20, #0x0
  2c:	mov	x22, x0
  30:	ldr	x1, [sp, #88]
  34:	b.le	1cc <grub_mod_init-0x8a0>
  38:	mvn	x0, x1
  3c:	lsr	x0, x0, #63
  40:	str	x1, [sp]
  44:	adrp	x1, 0 <grub_mod_init-0xa6c>
  48:	adrp	x21, 0 <grub_mod_init-0xa6c>
  4c:	adrp	x2, 0 <grub_mod_init-0xa6c>
  50:	ldr	x5, [x1]
  54:	adrp	x1, 0 <grub_mod_init-0xa6c>
  58:	ldr	x23, [x2]
  5c:	mov	x7, x19
  60:	ldr	x4, [x1]
  64:	mov	x6, x20
  68:	ldr	x1, [x21]
  6c:	mov	x2, x23
  70:	mov	w3, #0x87                  	// #135
  74:	bl	0 <grub_test_assert_helper>
  78:	cmp	x20, #0x0
  7c:	cset	w1, le
  80:	cmp	x19, #0x0
  84:	cset	w0, gt
  88:	cmp	w1, w0
  8c:	b.eq	1d8 <grub_mod_init-0x894>  // b.none
  90:	mvn	x0, x22
  94:	lsr	x0, x0, #63
  98:	adrp	x1, 0 <grub_mod_init-0xa6c>
  9c:	str	x22, [sp]
  a0:	mov	x7, x19
  a4:	mov	x6, x20
  a8:	ldr	x5, [x1]
  ac:	adrp	x1, 0 <grub_mod_init-0xa6c>
  b0:	mov	x2, x23
  b4:	mov	w3, #0x89                  	// #137
  b8:	ldr	x4, [x1]
  bc:	ldr	x1, [x21]
  c0:	bl	0 <grub_test_assert_helper>
  c4:	ldr	x0, [sp, #88]
  c8:	str	x0, [sp]
  cc:	mov	x7, x19
  d0:	mov	x6, x20
  d4:	cmp	x0, #0x0
  d8:	mov	w3, #0x8b                  	// #139
  dc:	cneg	x2, x0, lt  // lt = tstop
  e0:	adrp	x0, 0 <grub_mod_init-0xa6c>
  e4:	cmp	x19, #0x0
  e8:	ldr	x5, [x0]
  ec:	adrp	x0, 0 <grub_mod_init-0xa6c>
  f0:	cneg	x1, x19, lt  // lt = tstop
  f4:	cmp	x2, x1
  f8:	mov	x2, x23
  fc:	ldr	x1, [x21]
 100:	ldr	x4, [x0]
 104:	cset	w0, lt  // lt = tstop
 108:	bl	0 <grub_test_assert_helper>
 10c:	ldr	x0, [sp, #88]
 110:	stp	x0, x20, [sp]
 114:	mov	x7, x19
 118:	mov	x6, x22
 11c:	mov	x2, x23
 120:	madd	x1, x19, x22, x0
 124:	adrp	x0, 0 <grub_mod_init-0xa6c>
 128:	mov	w3, #0x8d                  	// #141
 12c:	ldr	x5, [x0]
 130:	adrp	x0, 0 <grub_mod_init-0xa6c>
 134:	cmp	x1, x20
 138:	ldr	x4, [x0]
 13c:	cset	w0, eq  // eq = none
 140:	ldr	x1, [x21]
 144:	bl	0 <grub_test_assert_helper>
 148:	adrp	x0, 0 <grub_mod_init-0xa6c>
 14c:	mov	x7, x19
 150:	sdiv	x24, x20, x19
 154:	mov	x6, x20
 158:	ldr	x5, [x0]
 15c:	adrp	x0, 0 <grub_mod_init-0xa6c>
 160:	ldr	x1, [x21]
 164:	cmp	x24, x22
 168:	ldr	x4, [x0]
 16c:	mov	x2, x23
 170:	cset	w0, eq  // eq = none
 174:	mov	w3, #0x90                  	// #144
 178:	msub	x24, x24, x19, x20
 17c:	bl	0 <grub_test_assert_helper>
 180:	ldr	x0, [sp, #88]
 184:	mov	x7, x19
 188:	ldr	x1, [x21]
 18c:	cmp	x24, x0
 190:	adrp	x0, 0 <grub_mod_init-0xa6c>
 194:	mov	x6, x20
 198:	mov	x2, x23
 19c:	mov	w3, #0x92                  	// #146
 1a0:	ldr	x5, [x0]
 1a4:	adrp	x0, 0 <grub_mod_init-0xa6c>
 1a8:	ldr	x4, [x0]
 1ac:	cset	w0, eq  // eq = none
 1b0:	bl	0 <grub_test_assert_helper>
 1b4:	ldp	x29, x30, [sp, #16]
 1b8:	ldp	x19, x20, [sp, #32]
 1bc:	ldp	x21, x22, [sp, #48]
 1c0:	ldp	x23, x24, [sp, #64]
 1c4:	add	sp, sp, #0x60
 1c8:	ret
 1cc:	cmp	x1, #0x0
 1d0:	cset	w0, le
 1d4:	b	40 <grub_mod_init-0xa2c>
 1d8:	cmp	x22, #0x0
 1dc:	cset	w0, le
 1e0:	b	98 <grub_mod_init-0x9d4>
 1e4:	nop
	...
 258:	sub	sp, sp, #0x70
 25c:	add	x2, sp, #0x68
 260:	stp	x29, x30, [sp, #16]
 264:	add	x29, sp, #0x10
 268:	stp	x23, x24, [sp, #64]
 26c:	sxtw	x24, w1
 270:	mov	x1, x24
 274:	str	x25, [sp, #80]
 278:	sxtw	x25, w0
 27c:	mov	x0, x25
 280:	stp	x19, x20, [sp, #32]
 284:	mov	x23, x25
 288:	stp	x21, x22, [sp, #48]
 28c:	bl	0 <grub_divmod64s>
 290:	mov	x19, x24
 294:	mov	x20, x0
 298:	cmp	w25, #0x0
 29c:	ldr	x1, [sp, #104]
 2a0:	b.le	3d4 <grub_mod_init-0x698>
 2a4:	mvn	x0, x1
 2a8:	lsr	x0, x0, #63
 2ac:	str	x1, [sp]
 2b0:	adrp	x1, 0 <grub_mod_init-0xa6c>
 2b4:	adrp	x21, 0 <grub_mod_init-0xa6c>
 2b8:	adrp	x2, 0 <grub_mod_init-0xa6c>
 2bc:	ldr	x5, [x1]
 2c0:	adrp	x1, 0 <grub_mod_init-0xa6c>
 2c4:	ldr	x22, [x2]
 2c8:	mov	x7, x24
 2cc:	ldr	x4, [x1]
 2d0:	mov	x6, x25
 2d4:	ldr	x1, [x21]
 2d8:	add	x2, x22, #0x8
 2dc:	mov	w3, #0x72                  	// #114
 2e0:	bl	0 <grub_test_assert_helper>
 2e4:	cmp	w23, #0x0
 2e8:	cset	w1, le
 2ec:	cmp	w19, #0x0
 2f0:	cset	w0, gt
 2f4:	cmp	w1, w0
 2f8:	b.eq	3e0 <grub_mod_init-0x68c>  // b.none
 2fc:	mvn	x0, x20
 300:	lsr	x0, x0, #63
 304:	adrp	x1, 0 <grub_mod_init-0xa6c>
 308:	str	x20, [sp]
 30c:	add	x22, x22, #0x8
 310:	mov	x7, x24
 314:	ldr	x5, [x1]
 318:	adrp	x1, 0 <grub_mod_init-0xa6c>
 31c:	mov	x6, x25
 320:	mov	x2, x22
 324:	ldr	x4, [x1]
 328:	mov	w3, #0x74                  	// #116
 32c:	ldr	x1, [x21]
 330:	bl	0 <grub_test_assert_helper>
 334:	ldr	x0, [sp, #104]
 338:	str	x0, [sp]
 33c:	mov	x7, x24
 340:	mov	x6, x25
 344:	cmp	x0, #0x0
 348:	mov	x2, x22
 34c:	cneg	x1, x0, lt  // lt = tstop
 350:	adrp	x0, 0 <grub_mod_init-0xa6c>
 354:	cmp	w19, #0x0
 358:	mov	w3, #0x76                  	// #118
 35c:	ldr	x5, [x0]
 360:	adrp	x0, 0 <grub_mod_init-0xa6c>
 364:	cneg	w19, w19, lt  // lt = tstop
 368:	cmp	x1, x19
 36c:	ldr	x4, [x0]
 370:	cset	w0, lt  // lt = tstop
 374:	ldr	x1, [x21]
 378:	bl	0 <grub_test_assert_helper>
 37c:	ldr	x0, [sp, #104]
 380:	stp	x0, x25, [sp]
 384:	mov	x7, x24
 388:	mov	x6, x20
 38c:	mov	x2, x22
 390:	madd	x1, x24, x20, x0
 394:	adrp	x0, 0 <grub_mod_init-0xa6c>
 398:	mov	w3, #0x78                  	// #120
 39c:	ldr	x5, [x0]
 3a0:	adrp	x0, 0 <grub_mod_init-0xa6c>
 3a4:	cmp	x1, x25
 3a8:	ldr	x4, [x0]
 3ac:	cset	w0, eq  // eq = none
 3b0:	ldr	x1, [x21]
 3b4:	bl	0 <grub_test_assert_helper>
 3b8:	ldp	x29, x30, [sp, #16]
 3bc:	ldp	x19, x20, [sp, #32]
 3c0:	ldp	x21, x22, [sp, #48]
 3c4:	ldp	x23, x24, [sp, #64]
 3c8:	ldr	x25, [sp, #80]
 3cc:	add	sp, sp, #0x70
 3d0:	ret
 3d4:	cmp	x1, #0x0
 3d8:	cset	w0, le
 3dc:	b	2ac <grub_mod_init-0x7c0>
 3e0:	cmp	x20, #0x0
 3e4:	cset	w0, le
 3e8:	b	304 <grub_mod_init-0x768>
 3ec:	nop
	...
 440:	sub	sp, sp, #0xa0
 444:	add	x2, sp, #0x98
 448:	stp	x29, x30, [sp, #16]
 44c:	add	x29, sp, #0x10
 450:	stp	x19, x20, [sp, #32]
 454:	mov	x19, x1
 458:	mov	x20, x0
 45c:	stp	x21, x22, [sp, #48]
 460:	adrp	x21, 0 <grub_mod_init-0xa6c>
 464:	adrp	x22, 0 <grub_mod_init-0xa6c>
 468:	stp	x23, x24, [sp, #64]
 46c:	stp	x25, x26, [sp, #80]
 470:	and	x26, x19, #0xffffffff
 474:	stp	x27, x28, [sp, #96]
 478:	bl	0 <grub_divmod64>
 47c:	adrp	x1, 0 <grub_mod_init-0xa6c>
 480:	mov	x24, x0
 484:	lsr	x23, x0, #32
 488:	ldr	x1, [x1]
 48c:	adrp	x28, 0 <grub_mod_init-0xa6c>
 490:	adrp	x27, 0 <grub_mod_init-0xa6c>
 494:	str	x1, [sp, #120]
 498:	ldr	x0, [sp, #152]
 49c:	add	x25, x1, #0x10
 4a0:	ldr	x5, [x28]
 4a4:	cmp	x19, x0
 4a8:	ldr	x4, [x27]
 4ac:	str	x0, [sp]
 4b0:	ldr	x1, [x21]
 4b4:	cset	w0, hi  // hi = pmore
 4b8:	mov	x7, x19
 4bc:	mov	x6, x20
 4c0:	mov	x2, x25
 4c4:	mov	w3, #0x41                  	// #65
 4c8:	bl	0 <grub_test_assert_helper>
 4cc:	ldr	x0, [sp, #152]
 4d0:	stp	x0, x20, [sp]
 4d4:	mov	x7, x19
 4d8:	mov	x6, x24
 4dc:	mov	x2, x25
 4e0:	madd	x1, x19, x24, x0
 4e4:	adrp	x0, 0 <grub_mod_init-0xa6c>
 4e8:	mov	w3, #0x43                  	// #67
 4ec:	ldr	x5, [x0]
 4f0:	adrp	x0, 0 <grub_mod_init-0xa6c>
 4f4:	cmp	x1, x20
 4f8:	ldr	x4, [x0]
 4fc:	cset	w0, eq  // eq = none
 500:	ldr	x1, [x21]
 504:	bl	0 <grub_test_assert_helper>
 508:	lsr	x9, x19, #32
 50c:	mov	x7, x19
 510:	ldr	x5, [x22]
 514:	mov	x6, x20
 518:	mul	x0, x23, x9
 51c:	mov	x2, x25
 520:	ldr	x1, [x21]
 524:	cmp	x0, #0x0
 528:	adrp	x0, 0 <grub_mod_init-0xa6c>
 52c:	mov	w3, #0x46                  	// #70
 530:	str	x9, [sp, #128]
 534:	mul	x23, x23, x26
 538:	ldr	x4, [x0]
 53c:	cset	w0, eq  // eq = none
 540:	bl	0 <grub_test_assert_helper>
 544:	adrp	x0, 0 <grub_mod_init-0xa6c>
 548:	mov	x11, #0xffffffff            	// #4294967295
 54c:	ldr	x5, [x22]
 550:	cmp	x23, x11
 554:	ldr	x4, [x0]
 558:	mov	x7, x19
 55c:	ldr	x1, [x21]
 560:	cset	w0, ls  // ls = plast
 564:	mov	x6, x20
 568:	mov	x2, x25
 56c:	mov	w3, #0x49                  	// #73
 570:	lsl	x23, x23, #32
 574:	bl	0 <grub_test_assert_helper>
 578:	ldr	x9, [sp, #128]
 57c:	and	x10, x24, #0xffffffff
 580:	adrp	x0, 0 <grub_mod_init-0xa6c>
 584:	mov	x11, #0xffffffff            	// #4294967295
 588:	ldr	x5, [x22]
 58c:	mul	x9, x9, x10
 590:	ldr	x4, [x0]
 594:	cmp	x9, x11
 598:	ldr	x1, [x21]
 59c:	cset	w0, ls  // ls = plast
 5a0:	mov	x7, x19
 5a4:	mov	x6, x20
 5a8:	mov	x2, x25
 5ac:	mov	w3, #0x4d                  	// #77
 5b0:	stp	x9, x10, [sp, #128]
 5b4:	bl	0 <grub_test_assert_helper>
 5b8:	adrp	x11, 0 <grub_mod_init-0xa6c>
 5bc:	ldr	x9, [sp, #128]
 5c0:	mov	x7, x19
 5c4:	ldr	x4, [x11]
 5c8:	mov	x6, x20
 5cc:	lsl	x12, x9, #32
 5d0:	mvn	x9, x9, lsl #32
 5d4:	ldr	x5, [x22]
 5d8:	cmp	x23, x9
 5dc:	ldr	x1, [x21]
 5e0:	cset	w0, ls  // ls = plast
 5e4:	mov	x2, x25
 5e8:	mov	w3, #0x50                  	// #80
 5ec:	str	x12, [sp, #128]
 5f0:	bl	0 <grub_test_assert_helper>
 5f4:	ldp	x12, x10, [sp, #128]
 5f8:	adrp	x11, 0 <grub_mod_init-0xa6c>
 5fc:	ldr	x5, [x22]
 600:	mov	x7, x19
 604:	ldr	x4, [x11]
 608:	mov	x6, x20
 60c:	mul	x10, x26, x10
 610:	add	x23, x23, x12
 614:	ldr	x1, [x21]
 618:	mvn	x0, x10
 61c:	cmp	x23, x0
 620:	mov	x2, x25
 624:	cset	w0, ls  // ls = plast
 628:	mov	w3, #0x54                  	// #84
 62c:	str	x10, [sp, #128]
 630:	bl	0 <grub_test_assert_helper>
 634:	ldr	x10, [sp, #128]
 638:	mov	x7, x19
 63c:	ldr	x0, [sp, #152]
 640:	add	x23, x23, x10
 644:	ldr	x5, [x22]
 648:	mvn	x0, x0
 64c:	cmp	x23, x0
 650:	adrp	x0, 0 <grub_mod_init-0xa6c>
 654:	ldr	x1, [x21]
 658:	mov	x6, x20
 65c:	ldr	x4, [x0]
 660:	mov	x2, x25
 664:	cset	w0, ls  // ls = plast
 668:	mov	w3, #0x57                  	// #87
 66c:	bl	0 <grub_test_assert_helper>
 670:	ldr	x0, [sp, #152]
 674:	mov	x7, x19
 678:	ldr	x1, [x21]
 67c:	add	x23, x23, x0
 680:	adrp	x0, 0 <grub_mod_init-0xa6c>
 684:	cmp	x23, x20
 688:	mov	x6, x20
 68c:	mov	x2, x25
 690:	ldr	x5, [x0]
 694:	adrp	x0, 0 <grub_mod_init-0xa6c>
 698:	mov	w3, #0x5a                  	// #90
 69c:	ldr	x4, [x0]
 6a0:	cset	w0, eq  // eq = none
 6a4:	bl	0 <grub_test_assert_helper>
 6a8:	adrp	x0, 0 <grub_mod_init-0xa6c>
 6ac:	mov	x7, x19
 6b0:	udiv	x23, x20, x19
 6b4:	mov	x6, x20
 6b8:	ldr	x5, [x0]
 6bc:	adrp	x0, 0 <grub_mod_init-0xa6c>
 6c0:	ldr	x1, [x21]
 6c4:	cmp	x23, x24
 6c8:	ldr	x4, [x0]
 6cc:	mov	x2, x25
 6d0:	cset	w0, eq  // eq = none
 6d4:	mov	w3, #0x5d                  	// #93
 6d8:	msub	x23, x23, x19, x20
 6dc:	bl	0 <grub_test_assert_helper>
 6e0:	ldr	x0, [sp, #152]
 6e4:	mov	x7, x19
 6e8:	ldr	x1, [x21]
 6ec:	cmp	x23, x0
 6f0:	adrp	x0, 0 <grub_mod_init-0xa6c>
 6f4:	mov	x6, x20
 6f8:	mov	x2, x25
 6fc:	mov	w3, #0x5f                  	// #95
 700:	ldr	x5, [x0]
 704:	adrp	x0, 0 <grub_mod_init-0xa6c>
 708:	ldr	x4, [x0]
 70c:	cset	w0, eq  // eq = none
 710:	bl	0 <grub_test_assert_helper>
 714:	cbz	w19, 870 <grub_mod_init-0x1fc>
 718:	and	x9, x20, #0xffffffff
 71c:	add	x2, sp, #0x98
 720:	mov	x25, x9
 724:	mov	x0, x9
 728:	mov	x1, x26
 72c:	bl	0 <grub_divmod64>
 730:	mov	x23, x0
 734:	ldr	x1, [sp, #120]
 738:	mov	x7, x26
 73c:	ldr	x0, [sp, #152]
 740:	add	x24, x1, #0x17
 744:	ldr	x5, [x28]
 748:	cmp	x0, x26
 74c:	ldr	x4, [x27]
 750:	str	x0, [sp]
 754:	ldr	x1, [x21]
 758:	cset	w0, cc  // cc = lo, ul, last
 75c:	mov	x6, x25
 760:	mov	x2, x24
 764:	mov	w3, #0x28                  	// #40
 768:	bl	0 <grub_test_assert_helper>
 76c:	ldr	x0, [sp, #152]
 770:	stp	x0, x25, [sp]
 774:	mov	x7, x26
 778:	mov	x6, x23
 77c:	mov	x2, x24
 780:	madd	x1, x23, x26, x0
 784:	adrp	x0, 0 <grub_mod_init-0xa6c>
 788:	mov	w3, #0x2a                  	// #42
 78c:	ldr	x5, [x0]
 790:	adrp	x0, 0 <grub_mod_init-0xa6c>
 794:	cmp	x1, x25
 798:	ldr	x4, [x0]
 79c:	cset	w0, eq  // eq = none
 7a0:	ldr	x1, [x21]
 7a4:	bl	0 <grub_test_assert_helper>
 7a8:	adrp	x0, 0 <grub_mod_init-0xa6c>
 7ac:	cmp	xzr, x23, lsr #32
 7b0:	ldr	x5, [x22]
 7b4:	mov	x7, x26
 7b8:	ldr	x4, [x0]
 7bc:	mov	x6, x25
 7c0:	ldr	x1, [x21]
 7c4:	cset	w0, eq  // eq = none
 7c8:	mov	x2, x24
 7cc:	mov	w3, #0x2d                  	// #45
 7d0:	bl	0 <grub_test_assert_helper>
 7d4:	ldr	w0, [sp, #156]
 7d8:	mov	x7, x26
 7dc:	ldr	x5, [x22]
 7e0:	cmp	x0, #0x0
 7e4:	adrp	x0, 0 <grub_mod_init-0xa6c>
 7e8:	mov	x6, x25
 7ec:	ldr	x1, [x21]
 7f0:	mov	x2, x24
 7f4:	ldr	x4, [x0]
 7f8:	mov	w3, #0x2f                  	// #47
 7fc:	cset	w0, eq  // eq = none
 800:	bl	0 <grub_test_assert_helper>
 804:	adrp	x0, 0 <grub_mod_init-0xa6c>
 808:	mov	x7, x26
 80c:	udiv	w22, w20, w19
 810:	mov	x6, x25
 814:	ldr	x5, [x0]
 818:	adrp	x0, 0 <grub_mod_init-0xa6c>
 81c:	ldr	x1, [x21]
 820:	cmp	x23, w22, uxtw
 824:	ldr	x4, [x0]
 828:	mov	x2, x24
 82c:	cset	w0, eq  // eq = none
 830:	mov	w3, #0x35                  	// #53
 834:	msub	w22, w22, w19, w20
 838:	bl	0 <grub_test_assert_helper>
 83c:	ldr	x0, [sp, #152]
 840:	mov	x7, x26
 844:	ldr	x1, [x21]
 848:	cmp	x22, x0
 84c:	adrp	x0, 0 <grub_mod_init-0xa6c>
 850:	mov	x6, x25
 854:	mov	x2, x24
 858:	mov	w3, #0x37                  	// #55
 85c:	ldr	x5, [x0]
 860:	adrp	x0, 0 <grub_mod_init-0xa6c>
 864:	ldr	x4, [x0]
 868:	cset	w0, eq  // eq = none
 86c:	bl	0 <grub_test_assert_helper>
 870:	mov	x1, x19
 874:	mov	x0, x20
 878:	bl	0 <grub_mod_init-0xa6c>
 87c:	cbz	w19, 88c <grub_mod_init-0x1e0>
 880:	mov	w1, w19
 884:	mov	w0, w20
 888:	bl	258 <grub_mod_init-0x814>
 88c:	neg	x23, x19
 890:	mov	x0, x20
 894:	mov	x1, x23
 898:	neg	w21, w19
 89c:	bl	0 <grub_mod_init-0xa6c>
 8a0:	cbz	w19, 8b0 <grub_mod_init-0x1bc>
 8a4:	mov	w1, w21
 8a8:	mov	w0, w20
 8ac:	bl	258 <grub_mod_init-0x814>
 8b0:	neg	x22, x20
 8b4:	mov	x1, x19
 8b8:	mov	x0, x22
 8bc:	neg	w20, w20
 8c0:	bl	0 <grub_mod_init-0xa6c>
 8c4:	cbz	w19, 8d4 <grub_mod_init-0x198>
 8c8:	mov	w1, w19
 8cc:	mov	w0, w20
 8d0:	bl	258 <grub_mod_init-0x814>
 8d4:	mov	x1, x23
 8d8:	mov	x0, x22
 8dc:	bl	0 <grub_mod_init-0xa6c>
 8e0:	cbz	w21, 8f0 <grub_mod_init-0x17c>
 8e4:	mov	w1, w21
 8e8:	mov	w0, w20
 8ec:	bl	258 <grub_mod_init-0x814>
 8f0:	ldp	x29, x30, [sp, #16]
 8f4:	ldp	x19, x20, [sp, #32]
 8f8:	ldp	x21, x22, [sp, #48]
 8fc:	ldp	x23, x24, [sp, #64]
 900:	ldp	x25, x26, [sp, #80]
 904:	ldp	x27, x28, [sp, #96]
 908:	add	sp, sp, #0xa0
 90c:	ret
	...
 9b0:	stp	x29, x30, [sp, #-80]!
 9b4:	mov	x1, #0x1                   	// #1
 9b8:	mov	x0, #0xffffffffffffffff    	// #-1
 9bc:	mov	x29, sp
 9c0:	stp	x19, x20, [sp, #16]
 9c4:	mov	x20, #0x7                   	// #7
 9c8:	mov	x19, #0x194                 	// #404
 9cc:	stp	x21, x22, [sp, #32]
 9d0:	mov	x21, #0x9c40                	// #40000
 9d4:	mov	x22, #0x1                   	// #1
 9d8:	stp	x23, x24, [sp, #48]
 9dc:	mov	x23, #0x1d                  	// #29
 9e0:	mov	x24, #0x17                  	// #23
 9e4:	str	x25, [sp, #64]
 9e8:	bl	440 <grub_mod_init-0x62c>
 9ec:	mov	x1, #0xffffffffffffffff    	// #-1
 9f0:	mov	x0, #0x1                   	// #1
 9f4:	bl	440 <grub_mod_init-0x62c>
 9f8:	mov	x25, #0xd                   	// #13
 9fc:	mov	x1, #0xffffffffffffffff    	// #-1
 a00:	mov	x0, x1
 a04:	bl	440 <grub_mod_init-0x62c>
 a08:	mov	x1, #0x1                   	// #1
 a0c:	mov	x0, x1
 a10:	bl	440 <grub_mod_init-0x62c>
 a14:	mov	x1, #0x1                   	// #1
 a18:	mov	x0, #0x2                   	// #2
 a1c:	bl	440 <grub_mod_init-0x62c>
 a20:	add	x19, x19, x19, lsl #4
 a24:	madd	x19, x20, x25, x19
 a28:	mul	x1, x19, x24
 a2c:	madd	x20, x20, x23, x1
 a30:	cmp	x20, #0x0
 a34:	csel	x20, x20, x22, ne  // ne = any
 a38:	cmp	x19, #0x0
 a3c:	csel	x19, x19, x22, ne  // ne = any
 a40:	mov	x1, x20
 a44:	mov	x0, x19
 a48:	bl	440 <grub_mod_init-0x62c>
 a4c:	subs	x21, x21, #0x1
 a50:	b.ne	a20 <grub_mod_init-0x4c>  // b.any
 a54:	ldp	x19, x20, [sp, #16]
 a58:	ldp	x21, x22, [sp, #32]
 a5c:	ldp	x23, x24, [sp, #48]
 a60:	ldr	x25, [sp, #64]
 a64:	ldp	x29, x30, [sp], #80
 a68:	ret

0000000000000a6c <grub_mod_init>:
 a6c:	adrp	x0, 0 <grub_mod_init-0xa6c>
 a70:	ldr	x1, [x0]
 a74:	adrp	x0, 0 <grub_mod_init-0xa6c>
 a78:	ldr	x0, [x0]
 a7c:	b	0 <grub_test_register>
	...

0000000000000a90 <grub_mod_fini>:
 a90:	adrp	x0, 0 <grub_mod_init-0xa6c>
 a94:	ldr	x0, [x0]
 a98:	b	0 <grub_test_unregister>
 a9c:	nop
	...
