
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402310 <.init>:
  402310:	stp	x29, x30, [sp, #-16]!
  402314:	mov	x29, sp
  402318:	bl	403cdc <wcrtomb@plt+0x12cc>
  40231c:	ldp	x29, x30, [sp], #16
  402320:	ret

Disassembly of section .plt:

0000000000402330 <mbrtowc@plt-0x20>:
  402330:	stp	x16, x30, [sp, #-16]!
  402334:	adrp	x16, 436000 <_obstack_memory_used@@Base+0x22900>
  402338:	ldr	x17, [x16, #4088]
  40233c:	add	x16, x16, #0xff8
  402340:	br	x17
  402344:	nop
  402348:	nop
  40234c:	nop

0000000000402350 <mbrtowc@plt>:
  402350:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16]
  402358:	add	x16, x16, #0x0
  40235c:	br	x17

0000000000402360 <memcpy@plt>:
  402360:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #8]
  402368:	add	x16, x16, #0x8
  40236c:	br	x17

0000000000402370 <sigaltstack@plt>:
  402370:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #16]
  402378:	add	x16, x16, #0x10
  40237c:	br	x17

0000000000402380 <memmove@plt>:
  402380:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #24]
  402388:	add	x16, x16, #0x18
  40238c:	br	x17

0000000000402390 <isalpha@plt>:
  402390:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #32]
  402398:	add	x16, x16, #0x20
  40239c:	br	x17

00000000004023a0 <_exit@plt>:
  4023a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #40]
  4023a8:	add	x16, x16, #0x28
  4023ac:	br	x17

00000000004023b0 <fwrite_unlocked@plt>:
  4023b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #48]
  4023b8:	add	x16, x16, #0x30
  4023bc:	br	x17

00000000004023c0 <strlen@plt>:
  4023c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #56]
  4023c8:	add	x16, x16, #0x38
  4023cc:	br	x17

00000000004023d0 <fputs@plt>:
  4023d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #64]
  4023d8:	add	x16, x16, #0x40
  4023dc:	br	x17

00000000004023e0 <exit@plt>:
  4023e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #72]
  4023e8:	add	x16, x16, #0x48
  4023ec:	br	x17

00000000004023f0 <error@plt>:
  4023f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #80]
  4023f8:	add	x16, x16, #0x50
  4023fc:	br	x17

0000000000402400 <fchdir@plt>:
  402400:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #88]
  402408:	add	x16, x16, #0x58
  40240c:	br	x17

0000000000402410 <strtoimax@plt>:
  402410:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #96]
  402418:	add	x16, x16, #0x60
  40241c:	br	x17

0000000000402420 <wctype@plt>:
  402420:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #104]
  402428:	add	x16, x16, #0x68
  40242c:	br	x17

0000000000402430 <ferror_unlocked@plt>:
  402430:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #112]
  402438:	add	x16, x16, #0x70
  40243c:	br	x17

0000000000402440 <__cxa_atexit@plt>:
  402440:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #120]
  402448:	add	x16, x16, #0x78
  40244c:	br	x17

0000000000402450 <iswcntrl@plt>:
  402450:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #128]
  402458:	add	x16, x16, #0x80
  40245c:	br	x17

0000000000402460 <qsort@plt>:
  402460:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #136]
  402468:	add	x16, x16, #0x88
  40246c:	br	x17

0000000000402470 <isblank@plt>:
  402470:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #144]
  402478:	add	x16, x16, #0x90
  40247c:	br	x17

0000000000402480 <lseek@plt>:
  402480:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #152]
  402488:	add	x16, x16, #0x98
  40248c:	br	x17

0000000000402490 <__fpending@plt>:
  402490:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #160]
  402498:	add	x16, x16, #0xa0
  40249c:	br	x17

00000000004024a0 <__ctype_tolower_loc@plt>:
  4024a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #168]
  4024a8:	add	x16, x16, #0xa8
  4024ac:	br	x17

00000000004024b0 <putc_unlocked@plt>:
  4024b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #176]
  4024b8:	add	x16, x16, #0xb0
  4024bc:	br	x17

00000000004024c0 <fclose@plt>:
  4024c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #184]
  4024c8:	add	x16, x16, #0xb8
  4024cc:	br	x17

00000000004024d0 <wctob@plt>:
  4024d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #192]
  4024d8:	add	x16, x16, #0xc0
  4024dc:	br	x17

00000000004024e0 <nl_langinfo@plt>:
  4024e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #200]
  4024e8:	add	x16, x16, #0xc8
  4024ec:	br	x17

00000000004024f0 <fopen@plt>:
  4024f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #208]
  4024f8:	add	x16, x16, #0xd0
  4024fc:	br	x17

0000000000402500 <isspace@plt>:
  402500:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #216]
  402508:	add	x16, x16, #0xd8
  40250c:	br	x17

0000000000402510 <iswctype@plt>:
  402510:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #224]
  402518:	add	x16, x16, #0xe0
  40251c:	br	x17

0000000000402520 <malloc@plt>:
  402520:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #232]
  402528:	add	x16, x16, #0xe8
  40252c:	br	x17

0000000000402530 <toupper@plt>:
  402530:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #240]
  402538:	add	x16, x16, #0xf0
  40253c:	br	x17

0000000000402540 <wcwidth@plt>:
  402540:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #248]
  402548:	add	x16, x16, #0xf8
  40254c:	br	x17

0000000000402550 <open@plt>:
  402550:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #256]
  402558:	add	x16, x16, #0x100
  40255c:	br	x17

0000000000402560 <splice@plt>:
  402560:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #264]
  402568:	add	x16, x16, #0x108
  40256c:	br	x17

0000000000402570 <islower@plt>:
  402570:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #272]
  402578:	add	x16, x16, #0x110
  40257c:	br	x17

0000000000402580 <isxdigit@plt>:
  402580:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #280]
  402588:	add	x16, x16, #0x118
  40258c:	br	x17

0000000000402590 <sigemptyset@plt>:
  402590:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #288]
  402598:	add	x16, x16, #0x120
  40259c:	br	x17

00000000004025a0 <strncmp@plt>:
  4025a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #296]
  4025a8:	add	x16, x16, #0x128
  4025ac:	br	x17

00000000004025b0 <bindtextdomain@plt>:
  4025b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #304]
  4025b8:	add	x16, x16, #0x130
  4025bc:	br	x17

00000000004025c0 <isdigit@plt>:
  4025c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #312]
  4025c8:	add	x16, x16, #0x138
  4025cc:	br	x17

00000000004025d0 <__libc_start_main@plt>:
  4025d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #320]
  4025d8:	add	x16, x16, #0x140
  4025dc:	br	x17

00000000004025e0 <fstatfs@plt>:
  4025e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #328]
  4025e8:	add	x16, x16, #0x148
  4025ec:	br	x17

00000000004025f0 <memset@plt>:
  4025f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #336]
  4025f8:	add	x16, x16, #0x150
  4025fc:	br	x17

0000000000402600 <putchar_unlocked@plt>:
  402600:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #344]
  402608:	add	x16, x16, #0x158
  40260c:	br	x17

0000000000402610 <calloc@plt>:
  402610:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #352]
  402618:	add	x16, x16, #0x160
  40261c:	br	x17

0000000000402620 <isupper@plt>:
  402620:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #360]
  402628:	add	x16, x16, #0x168
  40262c:	br	x17

0000000000402630 <readdir@plt>:
  402630:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #368]
  402638:	add	x16, x16, #0x170
  40263c:	br	x17

0000000000402640 <realloc@plt>:
  402640:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #376]
  402648:	add	x16, x16, #0x178
  40264c:	br	x17

0000000000402650 <__ctype_toupper_loc@plt>:
  402650:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #384]
  402658:	add	x16, x16, #0x180
  40265c:	br	x17

0000000000402660 <closedir@plt>:
  402660:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #392]
  402668:	add	x16, x16, #0x188
  40266c:	br	x17

0000000000402670 <getc_unlocked@plt>:
  402670:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #400]
  402678:	add	x16, x16, #0x190
  40267c:	br	x17

0000000000402680 <close@plt>:
  402680:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #408]
  402688:	add	x16, x16, #0x198
  40268c:	br	x17

0000000000402690 <sigaction@plt>:
  402690:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #416]
  402698:	add	x16, x16, #0x1a0
  40269c:	br	x17

00000000004026a0 <strrchr@plt>:
  4026a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #424]
  4026a8:	add	x16, x16, #0x1a8
  4026ac:	br	x17

00000000004026b0 <__gmon_start__@plt>:
  4026b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #432]
  4026b8:	add	x16, x16, #0x1b0
  4026bc:	br	x17

00000000004026c0 <fdopendir@plt>:
  4026c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #440]
  4026c8:	add	x16, x16, #0x1b8
  4026cc:	br	x17

00000000004026d0 <write@plt>:
  4026d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #448]
  4026d8:	add	x16, x16, #0x1c0
  4026dc:	br	x17

00000000004026e0 <btowc@plt>:
  4026e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #456]
  4026e8:	add	x16, x16, #0x1c8
  4026ec:	br	x17

00000000004026f0 <abort@plt>:
  4026f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #464]
  4026f8:	add	x16, x16, #0x1d0
  4026fc:	br	x17

0000000000402700 <iscntrl@plt>:
  402700:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #472]
  402708:	add	x16, x16, #0x1d8
  40270c:	br	x17

0000000000402710 <mbsinit@plt>:
  402710:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #480]
  402718:	add	x16, x16, #0x1e0
  40271c:	br	x17

0000000000402720 <ispunct@plt>:
  402720:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #488]
  402728:	add	x16, x16, #0x1e8
  40272c:	br	x17

0000000000402730 <puts@plt>:
  402730:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #496]
  402738:	add	x16, x16, #0x1f0
  40273c:	br	x17

0000000000402740 <fread_unlocked@plt>:
  402740:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #504]
  402748:	add	x16, x16, #0x1f8
  40274c:	br	x17

0000000000402750 <memcmp@plt>:
  402750:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #512]
  402758:	add	x16, x16, #0x200
  40275c:	br	x17

0000000000402760 <textdomain@plt>:
  402760:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #520]
  402768:	add	x16, x16, #0x208
  40276c:	br	x17

0000000000402770 <getopt_long@plt>:
  402770:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #528]
  402778:	add	x16, x16, #0x210
  40277c:	br	x17

0000000000402780 <strcmp@plt>:
  402780:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #536]
  402788:	add	x16, x16, #0x218
  40278c:	br	x17

0000000000402790 <__ctype_b_loc@plt>:
  402790:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #544]
  402798:	add	x16, x16, #0x220
  40279c:	br	x17

00000000004027a0 <free@plt>:
  4027a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #552]
  4027a8:	add	x16, x16, #0x228
  4027ac:	br	x17

00000000004027b0 <__ctype_get_mb_cur_max@plt>:
  4027b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #560]
  4027b8:	add	x16, x16, #0x230
  4027bc:	br	x17

00000000004027c0 <mempcpy@plt>:
  4027c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #568]
  4027c8:	add	x16, x16, #0x238
  4027cc:	br	x17

00000000004027d0 <strchr@plt>:
  4027d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #576]
  4027d8:	add	x16, x16, #0x240
  4027dc:	br	x17

00000000004027e0 <memrchr@plt>:
  4027e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #584]
  4027e8:	add	x16, x16, #0x248
  4027ec:	br	x17

00000000004027f0 <fnmatch@plt>:
  4027f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #592]
  4027f8:	add	x16, x16, #0x250
  4027fc:	br	x17

0000000000402800 <fflush_unlocked@plt>:
  402800:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #600]
  402808:	add	x16, x16, #0x258
  40280c:	br	x17

0000000000402810 <fcntl@plt>:
  402810:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #608]
  402818:	add	x16, x16, #0x260
  40281c:	br	x17

0000000000402820 <strcpy@plt>:
  402820:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #616]
  402828:	add	x16, x16, #0x268
  40282c:	br	x17

0000000000402830 <dirfd@plt>:
  402830:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #624]
  402838:	add	x16, x16, #0x270
  40283c:	br	x17

0000000000402840 <__lxstat@plt>:
  402840:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #632]
  402848:	add	x16, x16, #0x278
  40284c:	br	x17

0000000000402850 <read@plt>:
  402850:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #640]
  402858:	add	x16, x16, #0x280
  40285c:	br	x17

0000000000402860 <memchr@plt>:
  402860:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #648]
  402868:	add	x16, x16, #0x288
  40286c:	br	x17

0000000000402870 <isatty@plt>:
  402870:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #656]
  402878:	add	x16, x16, #0x290
  40287c:	br	x17

0000000000402880 <sysconf@plt>:
  402880:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #664]
  402888:	add	x16, x16, #0x298
  40288c:	br	x17

0000000000402890 <fputc_unlocked@plt>:
  402890:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #672]
  402898:	add	x16, x16, #0x2a0
  40289c:	br	x17

00000000004028a0 <isgraph@plt>:
  4028a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #680]
  4028a8:	add	x16, x16, #0x2a8
  4028ac:	br	x17

00000000004028b0 <iswalnum@plt>:
  4028b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #688]
  4028b8:	add	x16, x16, #0x2b0
  4028bc:	br	x17

00000000004028c0 <__fxstat@plt>:
  4028c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #696]
  4028c8:	add	x16, x16, #0x2b8
  4028cc:	br	x17

00000000004028d0 <strstr@plt>:
  4028d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #704]
  4028d8:	add	x16, x16, #0x2c0
  4028dc:	br	x17

00000000004028e0 <dcgettext@plt>:
  4028e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #712]
  4028e8:	add	x16, x16, #0x2c8
  4028ec:	br	x17

00000000004028f0 <fputs_unlocked@plt>:
  4028f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #720]
  4028f8:	add	x16, x16, #0x2d0
  4028fc:	br	x17

0000000000402900 <strcoll@plt>:
  402900:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #728]
  402908:	add	x16, x16, #0x2d8
  40290c:	br	x17

0000000000402910 <isalnum@plt>:
  402910:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #736]
  402918:	add	x16, x16, #0x2e0
  40291c:	br	x17

0000000000402920 <towupper@plt>:
  402920:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #744]
  402928:	add	x16, x16, #0x2e8
  40292c:	br	x17

0000000000402930 <iswprint@plt>:
  402930:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #752]
  402938:	add	x16, x16, #0x2f0
  40293c:	br	x17

0000000000402940 <vfprintf@plt>:
  402940:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #760]
  402948:	add	x16, x16, #0x2f8
  40294c:	br	x17

0000000000402950 <openat@plt>:
  402950:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #768]
  402958:	add	x16, x16, #0x300
  40295c:	br	x17

0000000000402960 <printf@plt>:
  402960:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #776]
  402968:	add	x16, x16, #0x308
  40296c:	br	x17

0000000000402970 <__assert_fail@plt>:
  402970:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #784]
  402978:	add	x16, x16, #0x310
  40297c:	br	x17

0000000000402980 <__errno_location@plt>:
  402980:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #792]
  402988:	add	x16, x16, #0x318
  40298c:	br	x17

0000000000402990 <tolower@plt>:
  402990:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #800]
  402998:	add	x16, x16, #0x320
  40299c:	br	x17

00000000004029a0 <getenv@plt>:
  4029a0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #808]
  4029a8:	add	x16, x16, #0x328
  4029ac:	br	x17

00000000004029b0 <__xstat@plt>:
  4029b0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #816]
  4029b8:	add	x16, x16, #0x330
  4029bc:	br	x17

00000000004029c0 <towlower@plt>:
  4029c0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #824]
  4029c8:	add	x16, x16, #0x338
  4029cc:	br	x17

00000000004029d0 <fprintf@plt>:
  4029d0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #832]
  4029d8:	add	x16, x16, #0x340
  4029dc:	br	x17

00000000004029e0 <isprint@plt>:
  4029e0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #840]
  4029e8:	add	x16, x16, #0x348
  4029ec:	br	x17

00000000004029f0 <setlocale@plt>:
  4029f0:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #848]
  4029f8:	add	x16, x16, #0x350
  4029fc:	br	x17

0000000000402a00 <__fxstatat@plt>:
  402a00:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #856]
  402a08:	add	x16, x16, #0x358
  402a0c:	br	x17

0000000000402a10 <wcrtomb@plt>:
  402a10:	adrp	x16, 437000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #864]
  402a18:	add	x16, x16, #0x360
  402a1c:	br	x17

Disassembly of section .text:

0000000000402a20 <_obstack_begin@@Base-0x10b00>:
  402a20:	sub	sp, sp, #0x200
  402a24:	stp	x29, x30, [sp]
  402a28:	mov	x29, sp
  402a2c:	stp	x25, x26, [sp, #64]
  402a30:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x23900>
  402a34:	stp	x19, x20, [sp, #16]
  402a38:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402a3c:	stp	x21, x22, [sp, #32]
  402a40:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  402a44:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x23900>
  402a48:	add	x19, x21, #0x488
  402a4c:	stp	x23, x24, [sp, #48]
  402a50:	mov	w23, w0
  402a54:	mov	w0, #0x2                   	// #2
  402a58:	str	w0, [x25, #1000]
  402a5c:	mov	w0, #0xa                   	// #10
  402a60:	strb	w0, [x22, #2276]
  402a64:	mov	w0, #0xffffffff            	// #-1
  402a68:	stp	x27, x28, [sp, #80]
  402a6c:	adrp	x24, 41f000 <_obstack_memory_used@@Base+0xb900>
  402a70:	str	w0, [x19, #152]
  402a74:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  402a78:	add	x24, x24, #0x645
  402a7c:	str	x0, [x19, #320]
  402a80:	mov	x0, #0xffffffffffffffff    	// #-1
  402a84:	str	x1, [sp, #104]
  402a88:	mov	x1, x24
  402a8c:	strb	wzr, [x19, #177]
  402a90:	stp	xzr, xzr, [sp, #224]
  402a94:	adrp	x28, 41f000 <_obstack_memory_used@@Base+0xb900>
  402a98:	add	x28, x28, #0x852
  402a9c:	stp	x0, x0, [x19, #240]
  402aa0:	stp	xzr, x0, [sp, #240]
  402aa4:	mov	w0, #0x6                   	// #6
  402aa8:	bl	4029f0 <setlocale@plt>
  402aac:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402ab0:	add	x1, x1, #0x750
  402ab4:	mov	x0, x28
  402ab8:	bl	4025b0 <bindtextdomain@plt>
  402abc:	mov	x0, x28
  402ac0:	bl	402760 <textdomain@plt>
  402ac4:	add	x0, x20, #0x8e8
  402ac8:	bl	40d77c <wcrtomb@plt+0xad6c>
  402acc:	adrp	x0, 404000 <wcrtomb@plt+0x15f0>
  402ad0:	add	x0, x0, #0xbdc
  402ad4:	bl	41e630 <_obstack_memory_used@@Base+0xaf30>
  402ad8:	mov	x0, #0x0                   	// #0
  402adc:	bl	408ba0 <wcrtomb@plt+0x6190>
  402ae0:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  402ae4:	add	x0, x0, #0x762
  402ae8:	bl	4029a0 <getenv@plt>
  402aec:	stp	x21, x22, [sp, #136]
  402af0:	stp	x25, x20, [sp, #168]
  402af4:	cbz	x0, 402c94 <wcrtomb@plt+0x284>
  402af8:	ldrb	w1, [x0]
  402afc:	mov	x27, x0
  402b00:	cbz	w1, 402c94 <wcrtomb@plt+0x284>
  402b04:	bl	4023c0 <strlen@plt>
  402b08:	add	x0, x0, #0x1
  402b0c:	bl	41102c <wcrtomb@plt+0xe61c>
  402b10:	mov	x1, x0
  402b14:	mov	x25, x0
  402b18:	mov	x2, #0x0                   	// #0
  402b1c:	mov	x0, x27
  402b20:	bl	4049c0 <wcrtomb@plt+0x1fb0>
  402b24:	mov	w1, #0x7fffffff            	// #2147483647
  402b28:	sub	w1, w1, w23
  402b2c:	mov	x26, x0
  402b30:	cmp	x0, w1, sxtw
  402b34:	b.ls	402b3c <wcrtomb@plt+0x12c>  // b.plast
  402b38:	bl	411200 <wcrtomb@plt+0xe7f0>
  402b3c:	sxtw	x2, w23
  402b40:	add	w23, w23, w26
  402b44:	add	x2, x2, #0x1
  402b48:	add	x2, x2, x0
  402b4c:	lsl	x0, x2, #3
  402b50:	bl	41102c <wcrtomb@plt+0xe61c>
  402b54:	mov	x22, x0
  402b58:	ldr	x21, [sp, #104]
  402b5c:	mov	x20, x0
  402b60:	mov	x1, x25
  402b64:	ldr	x0, [x21], #8
  402b68:	str	x0, [x22], #8
  402b6c:	mov	x0, x27
  402b70:	mov	x2, x22
  402b74:	bl	4049c0 <wcrtomb@plt+0x1fb0>
  402b78:	add	x22, x22, x0, lsl #3
  402b7c:	mov	x1, #0x0                   	// #0
  402b80:	ldr	x0, [x21, x1]
  402b84:	str	x0, [x22, x1]
  402b88:	add	x1, x1, #0x8
  402b8c:	cbnz	x0, 402b80 <wcrtomb@plt+0x170>
  402b90:	str	w26, [sp, #124]
  402b94:	cbz	x26, 402c90 <wcrtomb@plt+0x280>
  402b98:	mov	w2, #0x5                   	// #5
  402b9c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402ba0:	add	x1, x1, #0x76f
  402ba4:	bl	4028e0 <dcgettext@plt>
  402ba8:	mov	w1, #0x0                   	// #0
  402bac:	mov	x2, x0
  402bb0:	mov	w0, #0x0                   	// #0
  402bb4:	bl	4023f0 <error@plt>
  402bb8:	str	x20, [sp, #104]
  402bbc:	add	x22, sp, #0x180
  402bc0:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0xb900>
  402bc4:	add	x0, x22, #0x15
  402bc8:	add	x21, x21, #0xbb0
  402bcc:	mov	w20, #0xffffffff            	// #-1
  402bd0:	stp	wzr, wzr, [sp, #116]
  402bd4:	str	x0, [sp, #152]
  402bd8:	add	x0, x21, #0x200
  402bdc:	str	x0, [sp, #160]
  402be0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402be4:	mov	x27, x22
  402be8:	add	x3, x21, #0x230
  402bec:	add	x2, x21, #0x890
  402bf0:	ldr	w25, [x0, #1120]
  402bf4:	mov	w7, #0x0                   	// #0
  402bf8:	str	x0, [sp, #128]
  402bfc:	mov	w6, w25
  402c00:	ldr	x1, [sp, #104]
  402c04:	mov	w0, w23
  402c08:	mov	x4, #0x0                   	// #0
  402c0c:	stp	x2, x3, [sp, #184]
  402c10:	stp	w6, w7, [sp, #200]
  402c14:	bl	402770 <getopt_long@plt>
  402c18:	mov	w26, w0
  402c1c:	sub	w0, w0, #0x30
  402c20:	cmp	w0, #0x9
  402c24:	b.hi	4033e8 <wcrtomb@plt+0x9d8>  // b.pmore
  402c28:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402c2c:	add	x5, x0, #0x378
  402c30:	ldp	w6, w7, [sp, #200]
  402c34:	ldr	w0, [x5, #96]
  402c38:	ldp	x2, x3, [sp, #184]
  402c3c:	cmp	w0, w6
  402c40:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402c44:	add	x8, x0, #0x460
  402c48:	b.ne	4033d0 <wcrtomb@plt+0x9c0>  // b.any
  402c4c:	cbz	w7, 4033d0 <wcrtomb@plt+0x9c0>
  402c50:	ldrb	w0, [sp, #384]
  402c54:	cmp	w0, #0x30
  402c58:	cset	x0, eq  // eq = none
  402c5c:	sub	x27, x27, x0
  402c60:	ldr	x0, [sp, #152]
  402c64:	cmp	x27, x0
  402c68:	b.ne	4033d4 <wcrtomb@plt+0x9c4>  // b.any
  402c6c:	add	x27, x22, #0x18
  402c70:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402c74:	add	x1, x1, #0x846
  402c78:	bl	402820 <strcpy@plt>
  402c7c:	strb	wzr, [x27]
  402c80:	add	x1, sp, #0xf8
  402c84:	mov	x0, x22
  402c88:	bl	405070 <wcrtomb@plt+0x2660>
  402c8c:	b	4033f0 <wcrtomb@plt+0x9e0>
  402c90:	str	x20, [sp, #104]
  402c94:	str	wzr, [sp, #124]
  402c98:	b	402bbc <wcrtomb@plt+0x1ac>
  402c9c:	cmp	w26, #0x7a
  402ca0:	b.gt	402ce8 <wcrtomb@plt+0x2d8>
  402ca4:	cmp	w26, #0x40
  402ca8:	b.gt	402cb8 <wcrtomb@plt+0x2a8>
  402cac:	cbz	w26, 402be0 <wcrtomb@plt+0x1d0>
  402cb0:	mov	w0, #0x2                   	// #2
  402cb4:	b	403474 <wcrtomb@plt+0xa64>
  402cb8:	sub	w26, w26, #0x41
  402cbc:	cmp	w26, #0x39
  402cc0:	b.hi	402cb0 <wcrtomb@plt+0x2a0>  // b.pmore
  402cc4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402cc8:	add	x1, x1, #0xb08
  402ccc:	ldrh	w0, [x1, w26, uxtw #1]
  402cd0:	adr	x1, 402cdc <wcrtomb@plt+0x2cc>
  402cd4:	add	x0, x1, w0, sxth #2
  402cd8:	br	x0
  402cdc:	mov	w0, #0x1                   	// #1
  402ce0:	str	w0, [sp, #120]
  402ce4:	b	402be0 <wcrtomb@plt+0x1d0>
  402ce8:	sub	w1, w26, #0x100
  402cec:	cmp	w1, #0x9
  402cf0:	b.hi	402cb0 <wcrtomb@plt+0x2a0>  // b.pmore
  402cf4:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  402cf8:	add	x0, x0, #0xb7c
  402cfc:	ldrh	w0, [x0, w1, uxtw #1]
  402d00:	adr	x1, 402d0c <wcrtomb@plt+0x2fc>
  402d04:	add	x0, x1, w0, sxth #2
  402d08:	br	x0
  402d0c:	ldr	x0, [x19, #280]
  402d10:	cbnz	x0, 402d1c <wcrtomb@plt+0x30c>
  402d14:	bl	40dc60 <wcrtomb@plt+0xb250>
  402d18:	str	x0, [x19, #280]
  402d1c:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x23900>
  402d20:	adrp	x26, 40d000 <wcrtomb@plt+0xa5f0>
  402d24:	ldr	x1, [x19, #280]
  402d28:	add	x26, x26, #0xf2c
  402d2c:	ldr	x2, [x27, #1112]
  402d30:	mov	x0, x26
  402d34:	mov	w4, #0xa                   	// #10
  402d38:	mov	w3, #0x50000000            	// #1342177280
  402d3c:	bl	40e354 <wcrtomb@plt+0xb944>
  402d40:	cbnz	w0, 402d70 <wcrtomb@plt+0x360>
  402d44:	ldr	x0, [x19, #288]
  402d48:	cbnz	x0, 402d54 <wcrtomb@plt+0x344>
  402d4c:	bl	40dc60 <wcrtomb@plt+0xb250>
  402d50:	str	x0, [x19, #288]
  402d54:	ldr	x2, [x27, #1112]
  402d58:	mov	x0, x26
  402d5c:	ldr	x1, [x19, #288]
  402d60:	mov	w4, #0xa                   	// #10
  402d64:	mov	w3, #0x10000000            	// #268435456
  402d68:	bl	40e354 <wcrtomb@plt+0xb944>
  402d6c:	cbz	w0, 402be0 <wcrtomb@plt+0x1d0>
  402d70:	bl	402980 <__errno_location@plt>
  402d74:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  402d78:	ldr	x3, [x1, #1112]
  402d7c:	b	403054 <wcrtomb@plt+0x644>
  402d80:	ldr	x0, [x19, #280]
  402d84:	cbnz	x0, 402d90 <wcrtomb@plt+0x380>
  402d88:	bl	40dc60 <wcrtomb@plt+0xb250>
  402d8c:	str	x0, [x19, #280]
  402d90:	cmp	w26, #0x106
  402d94:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x23900>
  402d98:	cset	w0, eq  // eq = none
  402d9c:	mov	w2, #0x50000000            	// #1342177280
  402da0:	ldr	x1, [x25, #1112]
  402da4:	orr	w2, w2, w0, lsl #29
  402da8:	lsl	w26, w0, #29
  402dac:	ldr	x0, [x19, #280]
  402db0:	bl	40df2c <wcrtomb@plt+0xb51c>
  402db4:	ldr	x0, [x19, #288]
  402db8:	cbnz	x0, 402dc4 <wcrtomb@plt+0x3b4>
  402dbc:	bl	40dc60 <wcrtomb@plt+0xb250>
  402dc0:	str	x0, [x19, #288]
  402dc4:	ldr	x1, [x25, #1112]
  402dc8:	orr	w2, w26, #0x10000000
  402dcc:	ldr	x0, [x19, #288]
  402dd0:	bl	40df2c <wcrtomb@plt+0xb51c>
  402dd4:	b	402be0 <wcrtomb@plt+0x1d0>
  402dd8:	add	x1, x19, #0xf8
  402ddc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402de0:	ldr	x0, [x0, #1112]
  402de4:	bl	405070 <wcrtomb@plt+0x2660>
  402de8:	b	402be0 <wcrtomb@plt+0x1d0>
  402dec:	add	x1, x19, #0xf0
  402df0:	b	402ddc <wcrtomb@plt+0x3cc>
  402df4:	add	x1, sp, #0xf8
  402df8:	b	402ddc <wcrtomb@plt+0x3cc>
  402dfc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402e00:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402e04:	add	x1, x1, #0x7b2
  402e08:	ldr	x25, [x0, #1112]
  402e0c:	mov	x0, x25
  402e10:	bl	402780 <strcmp@plt>
  402e14:	cbnz	w0, 402e24 <wcrtomb@plt+0x414>
  402e18:	mov	w0, #0x1                   	// #1
  402e1c:	str	w0, [x19, #4]
  402e20:	b	402be0 <wcrtomb@plt+0x1d0>
  402e24:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402e28:	mov	x0, x25
  402e2c:	add	x1, x1, #0x7b7
  402e30:	bl	402780 <strcmp@plt>
  402e34:	cbnz	w0, 402e40 <wcrtomb@plt+0x430>
  402e38:	mov	w0, #0x2                   	// #2
  402e3c:	b	402e1c <wcrtomb@plt+0x40c>
  402e40:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402e44:	add	x1, x1, #0x7bc
  402e48:	mov	w2, #0x5                   	// #5
  402e4c:	mov	x0, #0x0                   	// #0
  402e50:	bl	4028e0 <dcgettext@plt>
  402e54:	mov	w1, #0x0                   	// #0
  402e58:	mov	x2, x0
  402e5c:	mov	w0, #0x2                   	// #2
  402e60:	bl	4023f0 <error@plt>
  402e64:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  402e68:	mov	w1, w20
  402e6c:	add	x0, x0, #0x7d3
  402e70:	bl	404b0c <wcrtomb@plt+0x20fc>
  402e74:	mov	w20, w0
  402e78:	b	402be0 <wcrtomb@plt+0x1d0>
  402e7c:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  402e80:	mov	w1, w20
  402e84:	add	x0, x0, #0x7d9
  402e88:	b	402e70 <wcrtomb@plt+0x460>
  402e8c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xa900>
  402e90:	mov	w1, w20
  402e94:	add	x0, x0, #0x76f
  402e98:	b	402e70 <wcrtomb@plt+0x460>
  402e9c:	mov	w1, w20
  402ea0:	mov	x0, x28
  402ea4:	b	402e70 <wcrtomb@plt+0x460>
  402ea8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402eac:	mov	w1, w20
  402eb0:	ldr	x0, [x0, #1112]
  402eb4:	b	402e70 <wcrtomb@plt+0x460>
  402eb8:	mov	w0, #0x1                   	// #1
  402ebc:	strb	w0, [x19, #176]
  402ec0:	b	402be0 <wcrtomb@plt+0x1d0>
  402ec4:	mov	w0, #0x1                   	// #1
  402ec8:	strb	w0, [x19, #460]
  402ecc:	b	402be0 <wcrtomb@plt+0x1d0>
  402ed0:	mov	w0, #0x1                   	// #1
  402ed4:	strb	w0, [x19, #164]
  402ed8:	b	402be0 <wcrtomb@plt+0x1d0>
  402edc:	mov	w0, #0x1                   	// #1
  402ee0:	strb	w0, [x19, #458]
  402ee4:	b	402be0 <wcrtomb@plt+0x1d0>
  402ee8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402eec:	add	x2, x21, #0x210
  402ef0:	ldr	x3, [sp, #160]
  402ef4:	mov	x4, #0x4                   	// #4
  402ef8:	ldr	x5, [x0, #992]
  402efc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402f00:	ldr	x1, [x0, #1112]
  402f04:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  402f08:	add	x0, x0, #0x7df
  402f0c:	bl	408888 <wcrtomb@plt+0x5e78>
  402f10:	ldr	x1, [sp, #160]
  402f14:	ldr	w0, [x1, x0, lsl #2]
  402f18:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  402f1c:	cmp	w0, #0x3
  402f20:	str	w0, [x1, #976]
  402f24:	ldr	w0, [sp, #116]
  402f28:	csel	w0, w0, w25, ne  // ne = any
  402f2c:	str	w0, [sp, #116]
  402f30:	b	402be0 <wcrtomb@plt+0x1d0>
  402f34:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x23900>
  402f38:	ldr	x0, [x25, #1112]
  402f3c:	bl	4023c0 <strlen@plt>
  402f40:	mov	x26, x0
  402f44:	ldp	x0, x1, [sp, #232]
  402f48:	add	x0, x0, #0x1
  402f4c:	add	x0, x0, x26
  402f50:	cmp	x0, x1
  402f54:	b.ls	402f6c <wcrtomb@plt+0x55c>  // b.plast
  402f58:	str	x0, [sp, #240]
  402f5c:	add	x1, sp, #0xf0
  402f60:	ldr	x0, [sp, #224]
  402f64:	bl	411164 <wcrtomb@plt+0xe754>
  402f68:	str	x0, [sp, #224]
  402f6c:	ldp	x0, x27, [sp, #224]
  402f70:	mov	x2, x26
  402f74:	ldr	x1, [x25, #1112]
  402f78:	add	x0, x0, x27
  402f7c:	bl	402360 <memcpy@plt>
  402f80:	ldr	x0, [sp, #232]
  402f84:	mov	w2, #0xa                   	// #10
  402f88:	add	x0, x26, x0
  402f8c:	add	x1, x0, #0x1
  402f90:	str	x1, [sp, #232]
  402f94:	ldr	x1, [sp, #224]
  402f98:	strb	w2, [x1, x0]
  402f9c:	mov	x2, x24
  402fa0:	add	x1, x26, #0x1
  402fa4:	ldr	x0, [sp, #224]
  402fa8:	add	x0, x0, x27
  402fac:	bl	404bf0 <wcrtomb@plt+0x21e0>
  402fb0:	b	402be0 <wcrtomb@plt+0x1d0>
  402fb4:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x23900>
  402fb8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  402fbc:	add	x26, x25, #0x458
  402fc0:	add	x1, x1, #0x7ed
  402fc4:	ldr	x27, [x25, #1112]
  402fc8:	mov	x0, x27
  402fcc:	bl	402780 <strcmp@plt>
  402fd0:	cbnz	w0, 403034 <wcrtomb@plt+0x624>
  402fd4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  402fd8:	ldr	x27, [x0, #1136]
  402fdc:	ldr	x26, [sp, #232]
  402fe0:	ldp	x0, x1, [sp, #232]
  402fe4:	add	x0, x0, #0x1
  402fe8:	cmp	x0, x1
  402fec:	b.cc	403000 <wcrtomb@plt+0x5f0>  // b.lo, b.ul, b.last
  402ff0:	ldr	x0, [sp, #224]
  402ff4:	add	x1, sp, #0xf0
  402ff8:	bl	411164 <wcrtomb@plt+0xe754>
  402ffc:	str	x0, [sp, #224]
  403000:	ldp	x4, x0, [sp, #224]
  403004:	mov	x3, x27
  403008:	ldr	x2, [sp, #240]
  40300c:	mov	x1, #0x1                   	// #1
  403010:	sub	x2, x2, #0x1
  403014:	sub	x2, x2, x0
  403018:	add	x0, x4, x0
  40301c:	bl	402740 <fread_unlocked@plt>
  403020:	cbz	x0, 403064 <wcrtomb@plt+0x654>
  403024:	ldr	x1, [sp, #232]
  403028:	add	x0, x1, x0
  40302c:	str	x0, [sp, #232]
  403030:	b	402fe0 <wcrtomb@plt+0x5d0>
  403034:	mov	x0, x27
  403038:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40303c:	add	x1, x1, #0x9ff
  403040:	bl	4024f0 <fopen@plt>
  403044:	mov	x27, x0
  403048:	cbnz	x0, 402fdc <wcrtomb@plt+0x5cc>
  40304c:	bl	402980 <__errno_location@plt>
  403050:	ldr	x3, [x26]
  403054:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  403058:	ldr	w1, [x0]
  40305c:	add	x2, x2, #0x4d4
  403060:	b	403090 <wcrtomb@plt+0x680>
  403064:	bl	402980 <__errno_location@plt>
  403068:	ldr	w1, [x0]
  40306c:	mov	x0, x27
  403070:	str	w1, [sp, #128]
  403074:	bl	402430 <ferror_unlocked@plt>
  403078:	ldr	w1, [sp, #128]
  40307c:	cbz	w0, 403098 <wcrtomb@plt+0x688>
  403080:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403084:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  403088:	add	x2, x2, #0x4d4
  40308c:	ldr	x3, [x0, #1112]
  403090:	mov	w0, #0x2                   	// #2
  403094:	bl	4023f0 <error@plt>
  403098:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40309c:	ldr	x0, [x0, #1136]
  4030a0:	cmp	x0, x27
  4030a4:	b.eq	4030b0 <wcrtomb@plt+0x6a0>  // b.none
  4030a8:	mov	x0, x27
  4030ac:	bl	4024c0 <fclose@plt>
  4030b0:	ldr	x0, [sp, #232]
  4030b4:	cmp	x0, x26
  4030b8:	b.eq	4030e0 <wcrtomb@plt+0x6d0>  // b.none
  4030bc:	ldr	x1, [sp, #224]
  4030c0:	add	x2, x1, x0
  4030c4:	ldurb	w2, [x2, #-1]
  4030c8:	cmp	w2, #0xa
  4030cc:	b.eq	4030e0 <wcrtomb@plt+0x6d0>  // b.none
  4030d0:	add	x2, x0, #0x1
  4030d4:	str	x2, [sp, #232]
  4030d8:	mov	w2, #0xa                   	// #10
  4030dc:	strb	w2, [x1, x0]
  4030e0:	ldp	x0, x1, [sp, #224]
  4030e4:	ldr	x2, [x25, #1112]
  4030e8:	sub	x1, x1, x26
  4030ec:	add	x0, x0, x26
  4030f0:	b	402fac <wcrtomb@plt+0x59c>
  4030f4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4030f8:	mov	w1, #0x1                   	// #1
  4030fc:	strb	w1, [x0, #3566]
  403100:	b	402be0 <wcrtomb@plt+0x1d0>
  403104:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403108:	strb	wzr, [x0, #3566]
  40310c:	b	402be0 <wcrtomb@plt+0x1d0>
  403110:	mov	w0, #0x2                   	// #2
  403114:	str	w0, [x19, #316]
  403118:	b	402be0 <wcrtomb@plt+0x1d0>
  40311c:	mov	w0, #0x1                   	// #1
  403120:	b	403114 <wcrtomb@plt+0x704>
  403124:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403128:	mov	x4, x24
  40312c:	add	x3, x19, #0x140
  403130:	mov	w2, #0xa                   	// #10
  403134:	ldr	x0, [x0, #1112]
  403138:	mov	x1, #0x0                   	// #0
  40313c:	bl	4112ac <wcrtomb@plt+0xe89c>
  403140:	cmp	w0, #0x1
  403144:	b.ls	402be0 <wcrtomb@plt+0x1d0>  // b.plast
  403148:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40314c:	mov	w2, #0x5                   	// #5
  403150:	add	x1, x1, #0x7ef
  403154:	b	402e4c <wcrtomb@plt+0x43c>
  403158:	mov	w0, #0x1                   	// #1
  40315c:	strb	w0, [x19, #156]
  403160:	b	402be0 <wcrtomb@plt+0x1d0>
  403164:	mov	w0, #0x1                   	// #1
  403168:	strb	w0, [x19, #177]
  40316c:	b	402be0 <wcrtomb@plt+0x1d0>
  403170:	mov	w0, #0x1                   	// #1
  403174:	strb	w0, [x19, #273]
  403178:	ldr	x0, [sp, #168]
  40317c:	str	wzr, [x0, #1000]
  403180:	b	402be0 <wcrtomb@plt+0x1d0>
  403184:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403188:	mov	w1, #0x30a                 	// #778
  40318c:	str	w1, [x0, #980]
  403190:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403194:	mov	w1, #0x3                   	// #3
  403198:	str	w25, [sp, #116]
  40319c:	str	w1, [x0, #976]
  4031a0:	b	402be0 <wcrtomb@plt+0x1d0>
  4031a4:	mov	w0, #0x1                   	// #1
  4031a8:	strb	w0, [x19, #16]
  4031ac:	b	402be0 <wcrtomb@plt+0x1d0>
  4031b0:	mov	w0, #0x1                   	// #1
  4031b4:	strb	w0, [x19, #178]
  4031b8:	b	402be0 <wcrtomb@plt+0x1d0>
  4031bc:	bl	4082e4 <wcrtomb@plt+0x58d4>
  4031c0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4031c4:	mov	w1, #0x1                   	// #1
  4031c8:	strb	w1, [x0, #3564]
  4031cc:	b	402be0 <wcrtomb@plt+0x1d0>
  4031d0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4031d4:	mov	w1, #0x1                   	// #1
  4031d8:	strb	w1, [x0, #3565]
  4031dc:	b	402be0 <wcrtomb@plt+0x1d0>
  4031e0:	str	wzr, [x19, #152]
  4031e4:	b	402be0 <wcrtomb@plt+0x1d0>
  4031e8:	ldr	x0, [sp, #144]
  4031ec:	strb	wzr, [x0, #2276]
  4031f0:	b	402be0 <wcrtomb@plt+0x1d0>
  4031f4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4031f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4031fc:	add	x1, x1, #0x801
  403200:	ldr	x25, [x0, #1112]
  403204:	mov	x0, x25
  403208:	bl	402780 <strcmp@plt>
  40320c:	cbnz	w0, 403218 <wcrtomb@plt+0x808>
  403210:	str	wzr, [x19, #128]
  403214:	b	402be0 <wcrtomb@plt+0x1d0>
  403218:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40321c:	mov	x0, x25
  403220:	add	x1, x1, #0x939
  403224:	bl	402780 <strcmp@plt>
  403228:	cbnz	w0, 403238 <wcrtomb@plt+0x828>
  40322c:	mov	w0, #0x1                   	// #1
  403230:	str	w0, [x19, #128]
  403234:	b	402be0 <wcrtomb@plt+0x1d0>
  403238:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40323c:	mov	x0, x25
  403240:	add	x1, x1, #0x9ab
  403244:	bl	402780 <strcmp@plt>
  403248:	cbnz	w0, 403254 <wcrtomb@plt+0x844>
  40324c:	mov	w0, #0x2                   	// #2
  403250:	b	403230 <wcrtomb@plt+0x820>
  403254:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403258:	mov	w2, #0x5                   	// #5
  40325c:	add	x1, x1, #0x808
  403260:	b	402e4c <wcrtomb@plt+0x43c>
  403264:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403268:	ldr	x25, [x0, #1112]
  40326c:	cbz	x25, 403338 <wcrtomb@plt+0x928>
  403270:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  403274:	mov	x0, x25
  403278:	add	x1, x1, #0xaff
  40327c:	bl	408c64 <wcrtomb@plt+0x6254>
  403280:	cbz	w0, 4032ac <wcrtomb@plt+0x89c>
  403284:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403288:	mov	x0, x25
  40328c:	add	x1, x1, #0x822
  403290:	bl	408c64 <wcrtomb@plt+0x6254>
  403294:	cbz	w0, 4032ac <wcrtomb@plt+0x89c>
  403298:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40329c:	mov	x0, x25
  4032a0:	add	x1, x1, #0x826
  4032a4:	bl	408c64 <wcrtomb@plt+0x6254>
  4032a8:	cbnz	w0, 4032b8 <wcrtomb@plt+0x8a8>
  4032ac:	mov	w0, #0x1                   	// #1
  4032b0:	str	w0, [x19]
  4032b4:	b	402be0 <wcrtomb@plt+0x1d0>
  4032b8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4032bc:	mov	x0, x25
  4032c0:	add	x1, x1, #0x82c
  4032c4:	bl	408c64 <wcrtomb@plt+0x6254>
  4032c8:	cbz	w0, 4032f4 <wcrtomb@plt+0x8e4>
  4032cc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4032d0:	mov	x0, x25
  4032d4:	add	x1, x1, #0x832
  4032d8:	bl	408c64 <wcrtomb@plt+0x6254>
  4032dc:	cbz	w0, 4032f4 <wcrtomb@plt+0x8e4>
  4032e0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4032e4:	mov	x0, x25
  4032e8:	add	x1, x1, #0x835
  4032ec:	bl	408c64 <wcrtomb@plt+0x6254>
  4032f0:	cbnz	w0, 4032fc <wcrtomb@plt+0x8ec>
  4032f4:	str	wzr, [x19]
  4032f8:	b	402be0 <wcrtomb@plt+0x1d0>
  4032fc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403300:	mov	x0, x25
  403304:	add	x1, x1, #0x83a
  403308:	bl	408c64 <wcrtomb@plt+0x6254>
  40330c:	cbz	w0, 403338 <wcrtomb@plt+0x928>
  403310:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403314:	mov	x0, x25
  403318:	add	x1, x1, #0x842
  40331c:	bl	408c64 <wcrtomb@plt+0x6254>
  403320:	cbz	w0, 403338 <wcrtomb@plt+0x928>
  403324:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403328:	mov	x0, x25
  40332c:	add	x1, x1, #0x83f
  403330:	bl	408c64 <wcrtomb@plt+0x6254>
  403334:	cbnz	w0, 403340 <wcrtomb@plt+0x930>
  403338:	mov	w0, #0x2                   	// #2
  40333c:	b	4032b0 <wcrtomb@plt+0x8a0>
  403340:	mov	w0, #0x1                   	// #1
  403344:	str	w0, [x19, #464]
  403348:	b	402be0 <wcrtomb@plt+0x1d0>
  40334c:	adrp	x25, 437000 <_obstack_memory_used@@Base+0x23900>
  403350:	ldr	x0, [x25, #1112]
  403354:	bl	40d968 <wcrtomb@plt+0xaf58>
  403358:	ldr	x0, [x19, #296]
  40335c:	cbnz	x0, 403368 <wcrtomb@plt+0x958>
  403360:	bl	40dc60 <wcrtomb@plt+0xb250>
  403364:	str	x0, [x19, #296]
  403368:	ldr	x1, [x25, #1112]
  40336c:	mov	w2, #0x50000000            	// #1342177280
  403370:	ldr	x0, [x19, #296]
  403374:	bl	40df2c <wcrtomb@plt+0xb51c>
  403378:	ldr	x0, [x19, #304]
  40337c:	cbnz	x0, 403388 <wcrtomb@plt+0x978>
  403380:	bl	40dc60 <wcrtomb@plt+0xb250>
  403384:	str	x0, [x19, #304]
  403388:	ldr	x1, [x25, #1112]
  40338c:	mov	w2, #0x10000000            	// #268435456
  403390:	ldr	x0, [x19, #304]
  403394:	b	402dd0 <wcrtomb@plt+0x3c0>
  403398:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40339c:	ldr	x1, [x0, #1112]
  4033a0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4033a4:	str	x1, [x0, #968]
  4033a8:	b	402be0 <wcrtomb@plt+0x1d0>
  4033ac:	mov	w0, #0x1                   	// #1
  4033b0:	strb	w0, [x19, #200]
  4033b4:	b	402be0 <wcrtomb@plt+0x1d0>
  4033b8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4033bc:	ldr	x0, [x0, #1112]
  4033c0:	str	x0, [x19, #472]
  4033c4:	b	402be0 <wcrtomb@plt+0x1d0>
  4033c8:	mov	w0, #0xffffffff            	// #-1
  4033cc:	b	402ce0 <wcrtomb@plt+0x2d0>
  4033d0:	mov	x27, x22
  4033d4:	mov	w7, #0x1                   	// #1
  4033d8:	strb	w26, [x27], #1
  4033dc:	str	w6, [x5, #96]
  4033e0:	ldr	w6, [x8]
  4033e4:	b	402c00 <wcrtomb@plt+0x1f0>
  4033e8:	cmp	x27, x22
  4033ec:	b.ne	402c7c <wcrtomb@plt+0x26c>  // b.any
  4033f0:	cmn	w26, #0x1
  4033f4:	b.ne	402c9c <wcrtomb@plt+0x28c>  // b.any
  4033f8:	ldrb	w0, [x19, #460]
  4033fc:	cbz	w0, 403468 <wcrtomb@plt+0xa58>
  403400:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403404:	ldr	x19, [x0, #1128]
  403408:	bl	40e408 <wcrtomb@plt+0xb9f8>
  40340c:	mov	x4, #0x0                   	// #0
  403410:	mov	x1, x0
  403414:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xb900>
  403418:	mov	x0, x19
  40341c:	add	x3, x3, #0x84a
  403420:	adrp	x2, 41f000 <_obstack_memory_used@@Base+0xb900>
  403424:	add	x2, x2, #0x84e
  403428:	bl	410f38 <wcrtomb@plt+0xe528>
  40342c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  403430:	add	x1, x1, #0x857
  403434:	mov	w2, #0x5                   	// #5
  403438:	mov	x0, #0x0                   	// #0
  40343c:	bl	4028e0 <dcgettext@plt>
  403440:	bl	402730 <puts@plt>
  403444:	mov	w0, #0x0                   	// #0
  403448:	ldp	x29, x30, [sp]
  40344c:	ldp	x19, x20, [sp, #16]
  403450:	ldp	x21, x22, [sp, #32]
  403454:	ldp	x23, x24, [sp, #48]
  403458:	ldp	x25, x26, [sp, #64]
  40345c:	ldp	x27, x28, [sp, #80]
  403460:	add	sp, sp, #0x200
  403464:	ret
  403468:	ldr	w0, [x19, #464]
  40346c:	cbz	w0, 403478 <wcrtomb@plt+0xa68>
  403470:	mov	w0, #0x0                   	// #0
  403474:	bl	406784 <wcrtomb@plt+0x3d74>
  403478:	ldr	x0, [sp, #224]
  40347c:	cbz	x0, 403640 <wcrtomb@plt+0xc30>
  403480:	ldr	x0, [sp, #232]
  403484:	cbnz	x0, 403634 <wcrtomb@plt+0xc24>
  403488:	ldrb	w0, [x19, #178]
  40348c:	eor	w0, w0, #0x1
  403490:	strb	w0, [x19, #178]
  403494:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403498:	strb	wzr, [x0, #3564]
  40349c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4034a0:	strb	wzr, [x0, #3565]
  4034a4:	ldrb	w24, [x19, #273]
  4034a8:	cbnz	w24, 403c80 <wcrtomb@plt+0x1270>
  4034ac:	add	x1, sp, #0x100
  4034b0:	mov	w0, #0x1                   	// #1
  4034b4:	bl	41e650 <_obstack_memory_used@@Base+0xaf50>
  4034b8:	cbnz	w0, 4034dc <wcrtomb@plt+0xacc>
  4034bc:	ldr	w0, [sp, #272]
  4034c0:	and	w0, w0, #0xf000
  4034c4:	cmp	w0, #0x8, lsl #12
  4034c8:	b.ne	40369c <wcrtomb@plt+0xc8c>  // b.any
  4034cc:	add	x1, sp, #0x100
  4034d0:	add	x0, x19, #0x148
  4034d4:	mov	x2, #0x80                  	// #128
  4034d8:	bl	402360 <memcpy@plt>
  4034dc:	ldrb	w0, [x19, #459]
  4034e0:	cbnz	w0, 4034ec <wcrtomb@plt+0xadc>
  4034e4:	ldr	w0, [x19, #316]
  4034e8:	cbz	w0, 4034f8 <wcrtomb@plt+0xae8>
  4034ec:	mov	w0, #0x1                   	// #1
  4034f0:	strb	w0, [x19, #272]
  4034f4:	strb	wzr, [x19, #458]
  4034f8:	ldrb	w0, [x19, #458]
  4034fc:	ldrb	w1, [x19, #272]
  403500:	orr	w0, w0, w1
  403504:	strb	w0, [x19, #232]
  403508:	ldr	x0, [x19, #248]
  40350c:	tbz	x0, #63, 403518 <wcrtomb@plt+0xb08>
  403510:	ldr	x0, [sp, #248]
  403514:	str	x0, [x19, #248]
  403518:	ldr	x0, [x19, #240]
  40351c:	tbz	x0, #63, 403528 <wcrtomb@plt+0xb18>
  403520:	ldr	x0, [sp, #248]
  403524:	str	x0, [x19, #240]
  403528:	ldr	x0, [x19, #320]
  40352c:	cbz	x0, 403558 <wcrtomb@plt+0xb48>
  403530:	ldr	x0, [sp, #232]
  403534:	cbnz	x0, 403564 <wcrtomb@plt+0xb54>
  403538:	ldrb	w0, [x19, #178]
  40353c:	cbz	w0, 403564 <wcrtomb@plt+0xb54>
  403540:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403544:	ldrb	w0, [x0, #3565]
  403548:	cbnz	w0, 403564 <wcrtomb@plt+0xb54>
  40354c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403550:	ldrb	w0, [x0, #3564]
  403554:	cbnz	w0, 403564 <wcrtomb@plt+0xb54>
  403558:	ldr	w0, [x19, #316]
  40355c:	cmp	w0, #0x2
  403560:	b.ne	403c78 <wcrtomb@plt+0x1268>  // b.any
  403564:	ldr	x0, [sp, #136]
  403568:	ldr	w0, [x0, #1160]
  40356c:	cmp	w0, #0x2
  403570:	b.ne	403584 <wcrtomb@plt+0xb74>  // b.any
  403574:	cbnz	w24, 4036ec <wcrtomb@plt+0xcdc>
  403578:	mov	w0, #0x0                   	// #0
  40357c:	ldr	x1, [sp, #136]
  403580:	str	w0, [x1, #1160]
  403584:	bl	41163c <wcrtomb@plt+0xec2c>
  403588:	ldr	x0, [sp, #136]
  40358c:	ldr	w0, [x0, #1160]
  403590:	cbz	w0, 403758 <wcrtomb@plt+0xd48>
  403594:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  403598:	add	x0, x0, #0x8be
  40359c:	bl	4029a0 <getenv@plt>
  4035a0:	cbz	x0, 4035bc <wcrtomb@plt+0xbac>
  4035a4:	ldrb	w1, [x0]
  4035a8:	cbz	w1, 4035bc <wcrtomb@plt+0xbac>
  4035ac:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  4035b0:	add	x2, x1, #0x378
  4035b4:	str	x0, [x1, #888]
  4035b8:	str	x0, [x2, #8]
  4035bc:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  4035c0:	add	x0, x0, #0x8c9
  4035c4:	bl	4029a0 <getenv@plt>
  4035c8:	cbz	x0, 403758 <wcrtomb@plt+0xd48>
  4035cc:	ldrb	w1, [x0]
  4035d0:	cbz	w1, 403758 <wcrtomb@plt+0xd48>
  4035d4:	bl	4111d8 <wcrtomb@plt+0xe7c8>
  4035d8:	mov	x26, x0
  4035dc:	add	x25, x0, #0x1
  4035e0:	mov	x27, #0x0                   	// #0
  4035e4:	ldurb	w24, [x25, #-1]
  4035e8:	cmp	w24, #0x3a
  4035ec:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  4035f0:	b.ne	40371c <wcrtomb@plt+0xd0c>  // b.any
  4035f4:	add	x28, x21, #0xc0
  4035f8:	sturb	wzr, [x25, #-1]
  4035fc:	ldr	x0, [x28]
  403600:	cbnz	x0, 403708 <wcrtomb@plt+0xcf8>
  403604:	ldr	x0, [x28, #8]
  403608:	cbz	x0, 403614 <wcrtomb@plt+0xc04>
  40360c:	cbz	x27, 403614 <wcrtomb@plt+0xc04>
  403610:	str	x27, [x0]
  403614:	ldr	x0, [x28, #16]
  403618:	cbz	x0, 403620 <wcrtomb@plt+0xc10>
  40361c:	blr	x0
  403620:	cbz	w24, 403758 <wcrtomb@plt+0xd48>
  403624:	mov	x26, x25
  403628:	mov	x27, #0x0                   	// #0
  40362c:	add	x25, x25, #0x1
  403630:	b	4035e4 <wcrtomb@plt+0xbd4>
  403634:	sub	x0, x0, #0x1
  403638:	str	x0, [sp, #232]
  40363c:	b	4034a4 <wcrtomb@plt+0xa94>
  403640:	ldr	x0, [sp, #128]
  403644:	ldr	w25, [x0, #1120]
  403648:	cmp	w25, w23
  40364c:	b.ge	402cb0 <wcrtomb@plt+0x2a0>  // b.tcont
  403650:	ldr	x0, [sp, #104]
  403654:	ldr	x26, [x0, w25, sxtw #3]
  403658:	add	w25, w25, #0x1
  40365c:	mov	x0, x26
  403660:	bl	4023c0 <strlen@plt>
  403664:	ldr	x1, [sp, #128]
  403668:	str	x0, [sp, #232]
  40366c:	str	w25, [x1, #1120]
  403670:	add	x1, x0, #0x1
  403674:	mov	x0, x26
  403678:	bl	4111a8 <wcrtomb@plt+0xe798>
  40367c:	ldr	x1, [sp, #232]
  403680:	mov	x2, x24
  403684:	str	x0, [sp, #224]
  403688:	bl	404bf0 <wcrtomb@plt+0x21e0>
  40368c:	ldr	x0, [x19, #48]
  403690:	add	x0, x0, #0x1
  403694:	str	x0, [x19, #48]
  403698:	b	4034a4 <wcrtomb@plt+0xa94>
  40369c:	cmp	w0, #0x2, lsl #12
  4036a0:	b.ne	4034dc <wcrtomb@plt+0xacc>  // b.any
  4036a4:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  4036a8:	mov	x1, x22
  4036ac:	add	x0, x0, #0x8b4
  4036b0:	bl	41e640 <_obstack_memory_used@@Base+0xaf40>
  4036b4:	cbnz	w0, 4036e4 <wcrtomb@plt+0xcd4>
  4036b8:	ldr	x1, [sp, #264]
  4036bc:	ldr	x0, [sp, #392]
  4036c0:	cmp	x1, x0
  4036c4:	b.ne	4036e4 <wcrtomb@plt+0xcd4>  // b.any
  4036c8:	ldr	x1, [sp, #256]
  4036cc:	ldr	x0, [sp, #384]
  4036d0:	cmp	x1, x0
  4036d4:	b.ne	4036e4 <wcrtomb@plt+0xcd4>  // b.any
  4036d8:	mov	w0, #0x1                   	// #1
  4036dc:	strb	w0, [x19, #459]
  4036e0:	b	4034dc <wcrtomb@plt+0xacc>
  4036e4:	mov	w24, #0x1                   	// #1
  4036e8:	b	4034dc <wcrtomb@plt+0xacc>
  4036ec:	bl	411600 <wcrtomb@plt+0xebf0>
  4036f0:	cbz	w0, 403578 <wcrtomb@plt+0xb68>
  4036f4:	mov	w0, #0x1                   	// #1
  4036f8:	bl	402870 <isatty@plt>
  4036fc:	cmp	w0, #0x0
  403700:	cset	w0, ne  // ne = any
  403704:	b	40357c <wcrtomb@plt+0xb6c>
  403708:	mov	x1, x26
  40370c:	bl	402780 <strcmp@plt>
  403710:	cbz	w0, 403604 <wcrtomb@plt+0xbf4>
  403714:	add	x28, x28, #0x18
  403718:	b	4035fc <wcrtomb@plt+0xbec>
  40371c:	cmp	w24, #0x3d
  403720:	b.ne	403740 <wcrtomb@plt+0xd30>  // b.any
  403724:	sub	x0, x25, #0x1
  403728:	cmp	x27, #0x0
  40372c:	ccmp	x0, x26, #0x4, eq  // eq = none
  403730:	b.eq	403758 <wcrtomb@plt+0xd48>  // b.none
  403734:	mov	x27, x25
  403738:	sturb	wzr, [x25, #-1]
  40373c:	b	40362c <wcrtomb@plt+0xc1c>
  403740:	cbz	x27, 40362c <wcrtomb@plt+0xc1c>
  403744:	cmp	w24, #0x3b
  403748:	b.eq	40362c <wcrtomb@plt+0xc1c>  // b.none
  40374c:	sub	w24, w24, #0x30
  403750:	cmp	w24, #0x9
  403754:	b.ls	40362c <wcrtomb@plt+0xc1c>  // b.plast
  403758:	mov	x1, #0x1                   	// #1
  40375c:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403760:	mov	w2, w1
  403764:	add	x3, x3, #0x8eb
  403768:	mov	w0, #0x0                   	// #0
  40376c:	ldrsb	w4, [x1, x3]
  403770:	tst	w0, w1
  403774:	ccmp	w4, #0x1, #0x4, eq  // eq = none
  403778:	b.eq	403798 <wcrtomb@plt+0xd88>  // b.none
  40377c:	mov	w4, w2
  403780:	lsl	w2, w2, #1
  403784:	cmp	w2, w1
  403788:	b.le	40377c <wcrtomb@plt+0xd6c>
  40378c:	orr	w0, w4, w0
  403790:	mov	w2, w4
  403794:	and	w0, w0, #0xff
  403798:	add	x1, x1, #0x1
  40379c:	cmp	x1, #0x100
  4037a0:	b.ne	40376c <wcrtomb@plt+0xd5c>  // b.any
  4037a4:	and	x0, x0, #0xff
  4037a8:	mov	x1, #0x101010101010101     	// #72340172838076673
  4037ac:	mul	x0, x0, x1
  4037b0:	str	x0, [x19, #136]
  4037b4:	tbnz	w20, #31, 4039b4 <wcrtomb@plt+0xfa4>
  4037b8:	cmp	w20, #0x2
  4037bc:	b.ne	403940 <wcrtomb@plt+0xf30>  // b.any
  4037c0:	ldr	x0, [sp, #176]
  4037c4:	ldrb	w0, [x0, #2280]
  4037c8:	cbnz	w0, 4038a0 <wcrtomb@plt+0xe90>
  4037cc:	ldr	x0, [x19, #48]
  4037d0:	cmp	x0, #0x1
  4037d4:	b.ne	4037e4 <wcrtomb@plt+0xdd4>  // b.any
  4037d8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4037dc:	ldrb	w0, [x0, #3564]
  4037e0:	cbnz	w0, 40392c <wcrtomb@plt+0xf1c>
  4037e4:	sbfiz	x20, x20, #5, #32
  4037e8:	add	x20, x21, x20
  4037ec:	ldr	x1, [sp, #232]
  4037f0:	ldp	x3, x0, [x20, #16]
  4037f4:	str	x0, [x19, #192]
  4037f8:	ldrsw	x2, [x20, #12]
  4037fc:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x23900>
  403800:	ldr	x0, [sp, #224]
  403804:	add	x20, x20, #0x378
  403808:	blr	x3
  40380c:	strb	wzr, [sp, #216]
  403810:	ldr	x1, [sp, #144]
  403814:	strb	wzr, [sp, #218]
  403818:	ldr	x5, [x19, #192]
  40381c:	mov	x3, x22
  403820:	ldrb	w1, [x1, #2276]
  403824:	mov	x4, #0x0                   	// #0
  403828:	strb	w1, [sp, #217]
  40382c:	mov	x2, #0x1                   	// #1
  403830:	add	x1, sp, #0xd9
  403834:	str	x0, [x19, #184]
  403838:	blr	x5
  40383c:	cmp	x0, #0x0
  403840:	ldrb	w0, [x19, #178]
  403844:	cset	w1, eq  // eq = none
  403848:	cmp	w1, w0
  40384c:	cset	w0, eq  // eq = none
  403850:	strb	w0, [x19, #457]
  403854:	ldr	x0, [sp, #128]
  403858:	ldr	w0, [x0, #1120]
  40385c:	sub	w23, w23, w0
  403860:	ldr	w0, [sp, #120]
  403864:	cmp	w0, #0x0
  403868:	ccmp	w23, #0x1, #0x0, eq  // eq = none
  40386c:	b.gt	403b60 <wcrtomb@plt+0x1150>
  403870:	ldr	w0, [x20, #88]
  403874:	cmp	w0, #0x3
  403878:	csetm	w0, eq  // eq = none
  40387c:	str	w0, [x19, #148]
  403880:	mov	w0, #0x1e                  	// #30
  403884:	bl	402880 <sysconf@plt>
  403888:	sub	x2, x0, #0x1
  40388c:	mov	x1, #0xfffffffffffffffa    	// #-6
  403890:	movk	x1, #0x7fff, lsl #48
  403894:	cmp	x2, x1
  403898:	b.ls	403b70 <wcrtomb@plt+0x1160>  // b.plast
  40389c:	bl	4026f0 <abort@plt>
  4038a0:	ldp	x26, x25, [sp, #224]
  4038a4:	mov	x24, #0x0                   	// #0
  4038a8:	str	xzr, [sp, #384]
  4038ac:	cmp	x25, x24
  4038b0:	b.hi	40390c <wcrtomb@plt+0xefc>  // b.pmore
  4038b4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4038b8:	ldrb	w0, [x0, #3566]
  4038bc:	cbz	w0, 4037e4 <wcrtomb@plt+0xdd4>
  4038c0:	ldp	x26, x25, [sp, #224]
  4038c4:	mov	x24, #0x0                   	// #0
  4038c8:	str	xzr, [sp, #384]
  4038cc:	cmp	x24, x25
  4038d0:	b.cs	4037e4 <wcrtomb@plt+0xdd4>  // b.hs, b.nlast
  4038d4:	ldrb	w1, [x26, x24]
  4038d8:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4038dc:	add	x2, x2, #0x8e8
  4038e0:	add	x0, x26, x24
  4038e4:	add	x1, x2, x1
  4038e8:	ldrsb	w1, [x1, #3]
  4038ec:	tbz	w1, #31, 403904 <wcrtomb@plt+0xef4>
  4038f0:	sub	x1, x25, x24
  4038f4:	mov	x2, x22
  4038f8:	bl	4050e8 <wcrtomb@plt+0x26d8>
  4038fc:	mov	w1, w0
  403900:	tbnz	w0, #31, 40392c <wcrtomb@plt+0xf1c>
  403904:	add	x24, x24, w1, sxtw
  403908:	b	4038cc <wcrtomb@plt+0xebc>
  40390c:	mov	x2, x22
  403910:	sub	x1, x25, x24
  403914:	add	x0, x26, x24
  403918:	bl	4082bc <wcrtomb@plt+0x58ac>
  40391c:	cmn	x0, #0x3
  403920:	b.hi	40392c <wcrtomb@plt+0xf1c>  // b.pmore
  403924:	add	x24, x24, x0
  403928:	b	4038ac <wcrtomb@plt+0xe9c>
  40392c:	add	x1, sp, #0xe8
  403930:	add	x0, sp, #0xe0
  403934:	mov	w20, #0x0                   	// #0
  403938:	bl	406978 <wcrtomb@plt+0x3f68>
  40393c:	b	4037e4 <wcrtomb@plt+0xdd4>
  403940:	cmp	w20, #0x1
  403944:	b.gt	4037e4 <wcrtomb@plt+0xdd4>
  403948:	ldr	x0, [x19, #48]
  40394c:	cmp	x0, #0x1
  403950:	b.ls	4037e4 <wcrtomb@plt+0xdd4>  // b.plast
  403954:	ldp	x0, x27, [sp, #224]
  403958:	str	x0, [sp, #136]
  40395c:	adrp	x26, 41f000 <_obstack_memory_used@@Base+0xb900>
  403960:	add	x26, x26, #0xb90
  403964:	add	x0, x27, #0x1
  403968:	bl	41102c <wcrtomb@plt+0xe61c>
  40396c:	ldr	x25, [sp, #136]
  403970:	mov	x24, x0
  403974:	mov	x28, x0
  403978:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  40397c:	add	x0, x0, #0xb9c
  403980:	str	x0, [sp, #152]
  403984:	str	xzr, [sp, #384]
  403988:	cbnz	x27, 4039bc <wcrtomb@plt+0xfac>
  40398c:	ldr	x0, [sp, #232]
  403990:	sub	x2, x28, x24
  403994:	cmp	x0, x2
  403998:	b.eq	4039ac <wcrtomb@plt+0xf9c>  // b.none
  40399c:	ldr	x0, [sp, #136]
  4039a0:	mov	x1, x24
  4039a4:	str	x2, [sp, #232]
  4039a8:	bl	402360 <memcpy@plt>
  4039ac:	mov	w20, #0x2                   	// #2
  4039b0:	b	403a84 <wcrtomb@plt+0x1074>
  4039b4:	mov	w20, #0x0                   	// #0
  4039b8:	b	403948 <wcrtomb@plt+0xf38>
  4039bc:	ldrb	w1, [x25]
  4039c0:	cmp	w1, #0x5b
  4039c4:	b.eq	403a84 <wcrtomb@plt+0x1074>  // b.none
  4039c8:	b.hi	403a60 <wcrtomb@plt+0x1050>  // b.pmore
  4039cc:	cmp	w1, #0x2e
  4039d0:	b.hi	4039f8 <wcrtomb@plt+0xfe8>  // b.pmore
  4039d4:	cmp	w1, #0x23
  4039d8:	b.ls	403a00 <wcrtomb@plt+0xff0>  // b.plast
  4039dc:	sub	w1, w1, #0x24
  4039e0:	cmp	w1, #0xa
  4039e4:	b.hi	403a00 <wcrtomb@plt+0xff0>  // b.pmore
  4039e8:	ldrb	w0, [x26, w1, uxtw]
  4039ec:	adr	x1, 4039f8 <wcrtomb@plt+0xfe8>
  4039f0:	add	x0, x1, w0, sxtb #2
  4039f4:	br	x0
  4039f8:	cmp	w1, #0x3f
  4039fc:	b.eq	403a80 <wcrtomb@plt+0x1070>  // b.none
  403a00:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403a04:	ldrb	w0, [x0, #3566]
  403a08:	cbz	w0, 403b40 <wcrtomb@plt+0x1130>
  403a0c:	ldrb	w0, [x25]
  403a10:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403a14:	add	x1, x1, #0x8e8
  403a18:	add	x0, x1, x0
  403a1c:	ldrsb	w0, [x0, #3]
  403a20:	tbz	w0, #31, 403a38 <wcrtomb@plt+0x1028>
  403a24:	mov	x2, x22
  403a28:	mov	x1, x27
  403a2c:	mov	x0, x25
  403a30:	bl	4050e8 <wcrtomb@plt+0x26d8>
  403a34:	tbnz	w0, #31, 403a84 <wcrtomb@plt+0x1074>
  403a38:	sxtw	x2, w0
  403a3c:	mov	x1, x25
  403a40:	mov	x0, x28
  403a44:	str	x2, [sp, #160]
  403a48:	bl	4027c0 <mempcpy@plt>
  403a4c:	ldr	x2, [sp, #160]
  403a50:	mov	x28, x0
  403a54:	add	x25, x25, x2
  403a58:	sub	x27, x27, x2
  403a5c:	b	403988 <wcrtomb@plt+0xf78>
  403a60:	cmp	w1, #0x5c
  403a64:	b.eq	403a90 <wcrtomb@plt+0x1080>  // b.none
  403a68:	cmp	w1, #0x5e
  403a6c:	b.eq	403a84 <wcrtomb@plt+0x1074>  // b.none
  403a70:	sub	w1, w1, #0x7b
  403a74:	and	w1, w1, #0xff
  403a78:	cmp	w1, #0x1
  403a7c:	b.hi	403a00 <wcrtomb@plt+0xff0>  // b.pmore
  403a80:	cbz	w20, 403a00 <wcrtomb@plt+0xff0>
  403a84:	mov	x0, x24
  403a88:	bl	4027a0 <free@plt>
  403a8c:	b	4037e4 <wcrtomb@plt+0xdd4>
  403a90:	cmp	x27, #0x1
  403a94:	b.ls	403b38 <wcrtomb@plt+0x1128>  // b.plast
  403a98:	ldrb	w1, [x25, #1]
  403a9c:	cmp	w1, #0x42
  403aa0:	b.hi	403b00 <wcrtomb@plt+0x10f0>  // b.pmore
  403aa4:	cmp	w1, #0x30
  403aa8:	b.hi	403ad4 <wcrtomb@plt+0x10c4>  // b.pmore
  403aac:	cmp	w1, #0x28
  403ab0:	b.eq	403b30 <wcrtomb@plt+0x1120>  // b.none
  403ab4:	b.hi	403af4 <wcrtomb@plt+0x10e4>  // b.pmore
  403ab8:	cmp	w1, #0xa
  403abc:	b.eq	403a84 <wcrtomb@plt+0x1074>  // b.none
  403ac0:	cmp	w1, #0x27
  403ac4:	b.eq	403a84 <wcrtomb@plt+0x1074>  // b.none
  403ac8:	add	x25, x25, #0x1
  403acc:	sub	x27, x27, #0x1
  403ad0:	b	403a00 <wcrtomb@plt+0xff0>
  403ad4:	sub	w1, w1, #0x31
  403ad8:	cmp	w1, #0x11
  403adc:	b.hi	403ac8 <wcrtomb@plt+0x10b8>  // b.pmore
  403ae0:	ldr	x0, [sp, #152]
  403ae4:	ldrb	w0, [x0, w1, uxtw]
  403ae8:	adr	x1, 403af4 <wcrtomb@plt+0x10e4>
  403aec:	add	x0, x1, w0, sxtb #2
  403af0:	br	x0
  403af4:	cmp	w1, #0x2b
  403af8:	b.eq	403b30 <wcrtomb@plt+0x1120>  // b.none
  403afc:	b	403ac8 <wcrtomb@plt+0x10b8>
  403b00:	sub	w1, w1, #0x53
  403b04:	and	w1, w1, #0xff
  403b08:	cmp	w1, #0x29
  403b0c:	b.hi	403ac8 <wcrtomb@plt+0x10b8>  // b.pmore
  403b10:	mov	x0, #0x1                   	// #1
  403b14:	lsl	x1, x0, x1
  403b18:	mov	x0, #0xa011                	// #40977
  403b1c:	movk	x0, #0x11, lsl #32
  403b20:	tst	x1, x0
  403b24:	b.ne	403a84 <wcrtomb@plt+0x1074>  // b.any
  403b28:	tst	x1, #0x30000000000
  403b2c:	b.eq	403ac8 <wcrtomb@plt+0x10b8>  // b.none
  403b30:	cbnz	w20, 403ac8 <wcrtomb@plt+0x10b8>
  403b34:	b	403a84 <wcrtomb@plt+0x1074>
  403b38:	mov	x27, #0x1                   	// #1
  403b3c:	b	403a00 <wcrtomb@plt+0xff0>
  403b40:	mov	x2, x22
  403b44:	mov	x1, x27
  403b48:	mov	x0, x25
  403b4c:	bl	4082bc <wcrtomb@plt+0x58ac>
  403b50:	mov	x2, x0
  403b54:	cmp	x0, #0x10
  403b58:	b.ls	403a3c <wcrtomb@plt+0x102c>  // b.plast
  403b5c:	b	403a84 <wcrtomb@plt+0x1074>
  403b60:	ldr	w0, [sp, #120]
  403b64:	mvn	w0, w0
  403b68:	lsr	w0, w0, #31
  403b6c:	b	40387c <wcrtomb@plt+0xe6c>
  403b70:	mov	x3, #0x18000               	// #98304
  403b74:	add	x1, x0, x3
  403b78:	str	x0, [x19, #96]
  403b7c:	udiv	x2, x3, x0
  403b80:	msub	x2, x2, x0, x3
  403b84:	add	x0, x0, #0x8
  403b88:	sub	x1, x1, x2
  403b8c:	cmp	x2, #0x0
  403b90:	csel	x1, x1, x3, ne  // ne = any
  403b94:	add	x0, x0, x1
  403b98:	str	x0, [x19, #88]
  403b9c:	bl	41102c <wcrtomb@plt+0xe61c>
  403ba0:	str	x0, [x19, #80]
  403ba4:	ldr	w0, [x20, #92]
  403ba8:	tbz	w0, #1, 403bbc <wcrtomb@plt+0x11ac>
  403bac:	ldr	w0, [x19, #4]
  403bb0:	cbnz	w0, 403bbc <wcrtomb@plt+0x11ac>
  403bb4:	mov	w0, #0x1                   	// #1
  403bb8:	str	w0, [x19, #4]
  403bbc:	cmp	w23, #0x0
  403bc0:	b.le	403c28 <wcrtomb@plt+0x1218>
  403bc4:	ldr	x0, [sp, #128]
  403bc8:	ldrsw	x21, [x0, #1120]
  403bcc:	ldr	x0, [sp, #104]
  403bd0:	add	x21, x0, x21, lsl #3
  403bd4:	adrp	x23, 41f000 <_obstack_memory_used@@Base+0xb900>
  403bd8:	add	x23, x23, #0x7ed
  403bdc:	mov	w22, #0x1                   	// #1
  403be0:	ldr	x20, [x21], #8
  403be4:	mov	x1, x23
  403be8:	mov	x0, x20
  403bec:	bl	402780 <strcmp@plt>
  403bf0:	cbnz	w0, 403c5c <wcrtomb@plt+0x124c>
  403bf4:	ldr	x1, [x19, #472]
  403bf8:	str	x1, [x19, #8]
  403bfc:	mov	w1, #0x1                   	// #1
  403c00:	bl	405ba0 <wcrtomb@plt+0x3190>
  403c04:	and	w0, w0, #0xff
  403c08:	and	w22, w22, w0
  403c0c:	ldr	x0, [x21]
  403c10:	cbnz	x0, 403be0 <wcrtomb@plt+0x11d0>
  403c14:	ldrb	w0, [x19, #17]
  403c18:	cmp	w0, #0x0
  403c1c:	mov	w0, #0x2                   	// #2
  403c20:	csel	w0, w22, w0, eq  // eq = none
  403c24:	b	403448 <wcrtomb@plt+0xa38>
  403c28:	ldr	w0, [x20, #88]
  403c2c:	cmp	w0, #0x3
  403c30:	b.ne	403c54 <wcrtomb@plt+0x1244>  // b.any
  403c34:	ldr	w0, [sp, #116]
  403c38:	ldr	w1, [sp, #124]
  403c3c:	cmp	w0, w1
  403c40:	b.le	403c54 <wcrtomb@plt+0x1244>
  403c44:	mov	w0, #0x1                   	// #1
  403c48:	add	x21, x21, #0x1e0
  403c4c:	strb	w0, [x19, #312]
  403c50:	b	403bd4 <wcrtomb@plt+0x11c4>
  403c54:	add	x21, x21, #0x1f0
  403c58:	b	403bd4 <wcrtomb@plt+0x11c4>
  403c5c:	mov	w3, #0x1                   	// #1
  403c60:	mov	x1, x20
  403c64:	mov	w2, w3
  403c68:	mov	w0, #0xffffff9c            	// #-100
  403c6c:	str	x20, [x19, #8]
  403c70:	bl	40669c <wcrtomb@plt+0x3c8c>
  403c74:	b	403c04 <wcrtomb@plt+0x11f4>
  403c78:	mov	w0, #0x1                   	// #1
  403c7c:	b	403448 <wcrtomb@plt+0xa38>
  403c80:	mov	w24, #0x0                   	// #0
  403c84:	str	wzr, [x19, #316]
  403c88:	b	4034ec <wcrtomb@plt+0xadc>
  403c8c:	mov	x29, #0x0                   	// #0
  403c90:	mov	x30, #0x0                   	// #0
  403c94:	mov	x5, x0
  403c98:	ldr	x1, [sp]
  403c9c:	add	x2, sp, #0x8
  403ca0:	mov	x6, sp
  403ca4:	movz	x0, #0x0, lsl #48
  403ca8:	movk	x0, #0x0, lsl #32
  403cac:	movk	x0, #0x40, lsl #16
  403cb0:	movk	x0, #0x2a20
  403cb4:	movz	x3, #0x0, lsl #48
  403cb8:	movk	x3, #0x0, lsl #32
  403cbc:	movk	x3, #0x41, lsl #16
  403cc0:	movk	x3, #0xe5a8
  403cc4:	movz	x4, #0x0, lsl #48
  403cc8:	movk	x4, #0x0, lsl #32
  403ccc:	movk	x4, #0x41, lsl #16
  403cd0:	movk	x4, #0xe628
  403cd4:	bl	4025d0 <__libc_start_main@plt>
  403cd8:	bl	4026f0 <abort@plt>
  403cdc:	adrp	x0, 436000 <_obstack_memory_used@@Base+0x22900>
  403ce0:	ldr	x0, [x0, #4064]
  403ce4:	cbz	x0, 403cec <wcrtomb@plt+0x12dc>
  403ce8:	b	4026b0 <__gmon_start__@plt>
  403cec:	ret
  403cf0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403cf4:	add	x1, x0, #0x450
  403cf8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403cfc:	add	x0, x0, #0x450
  403d00:	cmp	x1, x0
  403d04:	b.eq	403d30 <wcrtomb@plt+0x1320>  // b.none
  403d08:	sub	sp, sp, #0x10
  403d0c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  403d10:	ldr	x1, [x1, #1704]
  403d14:	str	x1, [sp, #8]
  403d18:	cbz	x1, 403d28 <wcrtomb@plt+0x1318>
  403d1c:	mov	x16, x1
  403d20:	add	sp, sp, #0x10
  403d24:	br	x16
  403d28:	add	sp, sp, #0x10
  403d2c:	ret
  403d30:	ret
  403d34:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403d38:	add	x1, x0, #0x450
  403d3c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  403d40:	add	x0, x0, #0x450
  403d44:	sub	x1, x1, x0
  403d48:	mov	x2, #0x2                   	// #2
  403d4c:	asr	x1, x1, #3
  403d50:	sdiv	x1, x1, x2
  403d54:	cbz	x1, 403d80 <wcrtomb@plt+0x1370>
  403d58:	sub	sp, sp, #0x10
  403d5c:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xa900>
  403d60:	ldr	x2, [x2, #1712]
  403d64:	str	x2, [sp, #8]
  403d68:	cbz	x2, 403d78 <wcrtomb@plt+0x1368>
  403d6c:	mov	x16, x2
  403d70:	add	sp, sp, #0x10
  403d74:	br	x16
  403d78:	add	sp, sp, #0x10
  403d7c:	ret
  403d80:	ret
  403d84:	stp	x29, x30, [sp, #-32]!
  403d88:	mov	x29, sp
  403d8c:	str	x19, [sp, #16]
  403d90:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  403d94:	ldrb	w0, [x19, #1152]
  403d98:	cbnz	w0, 403da8 <wcrtomb@plt+0x1398>
  403d9c:	bl	403cf0 <wcrtomb@plt+0x12e0>
  403da0:	mov	w0, #0x1                   	// #1
  403da4:	strb	w0, [x19, #1152]
  403da8:	ldr	x19, [sp, #16]
  403dac:	ldp	x29, x30, [sp], #32
  403db0:	ret
  403db4:	b	403d34 <wcrtomb@plt+0x1324>
  403db8:	stp	x29, x30, [sp, #-128]!
  403dbc:	ands	w5, w5, #0xff
  403dc0:	mov	x29, sp
  403dc4:	stp	x19, x20, [sp, #16]
  403dc8:	mov	x20, x4
  403dcc:	stp	x21, x22, [sp, #32]
  403dd0:	mov	x21, x1
  403dd4:	mov	x22, x2
  403dd8:	b.ne	403e54 <wcrtomb@plt+0x1444>  // b.any
  403ddc:	ldr	x19, [x0]
  403de0:	add	x19, x19, x3, lsl #6
  403de4:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403de8:	ldrb	w0, [x0, #3566]
  403dec:	stp	xzr, xzr, [x19]
  403df0:	orr	w0, w0, w5
  403df4:	cbnz	w0, 403e5c <wcrtomb@plt+0x144c>
  403df8:	mov	x0, #0x100                 	// #256
  403dfc:	bl	41102c <wcrtomb@plt+0xe61c>
  403e00:	stp	x0, xzr, [x19, #32]
  403e04:	mov	x2, x19
  403e08:	mov	x1, x22
  403e0c:	mov	x0, x21
  403e10:	bl	41d680 <_obstack_memory_used@@Base+0x9f80>
  403e14:	mov	x19, x0
  403e18:	cbz	x0, 403e9c <wcrtomb@plt+0x148c>
  403e1c:	str	x20, [sp, #56]
  403e20:	cmn	x20, #0x1
  403e24:	b.ne	403e64 <wcrtomb@plt+0x1454>  // b.any
  403e28:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  403e2c:	mov	x3, x19
  403e30:	add	x2, x2, #0x4d4
  403e34:	mov	w1, #0x0                   	// #0
  403e38:	mov	w0, #0x0                   	// #0
  403e3c:	bl	4023f0 <error@plt>
  403e40:	mov	w0, #0x0                   	// #0
  403e44:	ldp	x19, x20, [sp, #16]
  403e48:	ldp	x21, x22, [sp, #32]
  403e4c:	ldp	x29, x30, [sp], #128
  403e50:	ret
  403e54:	add	x19, sp, #0x40
  403e58:	b	403de4 <wcrtomb@plt+0x13d4>
  403e5c:	mov	x0, #0x0                   	// #0
  403e60:	b	403e00 <wcrtomb@plt+0x13f0>
  403e64:	add	x1, sp, #0x38
  403e68:	add	x0, x20, #0x1
  403e6c:	bl	406730 <wcrtomb@plt+0x3d20>
  403e70:	mov	x3, x0
  403e74:	ldrb	w0, [x0]
  403e78:	cbz	w0, 403e28 <wcrtomb@plt+0x1418>
  403e7c:	ldr	x4, [sp, #56]
  403e80:	mov	x5, x19
  403e84:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xa900>
  403e88:	mov	w1, #0x0                   	// #0
  403e8c:	add	x2, x2, #0x6b8
  403e90:	mov	w0, #0x0                   	// #0
  403e94:	bl	4023f0 <error@plt>
  403e98:	b	403e40 <wcrtomb@plt+0x1430>
  403e9c:	mov	w0, #0x1                   	// #1
  403ea0:	b	403e44 <wcrtomb@plt+0x1434>
  403ea4:	stp	x29, x30, [sp, #-16]!
  403ea8:	mov	x3, x0
  403eac:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  403eb0:	mov	x29, sp
  403eb4:	add	x2, x2, #0x4d4
  403eb8:	mov	w1, #0x0                   	// #0
  403ebc:	mov	w0, #0x2                   	// #2
  403ec0:	bl	4023f0 <error@plt>
  403ec4:	stp	x29, x30, [sp, #-32]!
  403ec8:	mov	x29, sp
  403ecc:	str	x19, [sp, #16]
  403ed0:	mov	x19, x0
  403ed4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xa900>
  403ed8:	add	x0, x0, #0x6c3
  403edc:	bl	4029a0 <getenv@plt>
  403ee0:	cbnz	x0, 403eec <wcrtomb@plt+0x14dc>
  403ee4:	mov	x0, x19
  403ee8:	bl	403ea4 <wcrtomb@plt+0x1494>
  403eec:	ldr	x19, [sp, #16]
  403ef0:	ldp	x29, x30, [sp], #32
  403ef4:	ret
  403ef8:	stp	x29, x30, [sp, #-176]!
  403efc:	mov	x29, sp
  403f00:	stp	x19, x20, [sp, #16]
  403f04:	stp	x21, x22, [sp, #32]
  403f08:	mov	x21, x2
  403f0c:	mov	x22, x0
  403f10:	mov	x0, #0x1                   	// #1
  403f14:	stp	x23, x24, [sp, #48]
  403f18:	mov	x23, x1
  403f1c:	mov	x1, #0x48                  	// #72
  403f20:	stp	x25, x26, [sp, #64]
  403f24:	stp	x27, x28, [sp, #80]
  403f28:	bl	41116c <wcrtomb@plt+0xe75c>
  403f2c:	mov	x19, x0
  403f30:	bl	40d2a0 <wcrtomb@plt+0xa890>
  403f34:	str	x0, [x19, #8]
  403f38:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403f3c:	ldrb	w0, [x0, #3566]
  403f40:	cbz	w0, 403f48 <wcrtomb@plt+0x1538>
  403f44:	orr	x21, x21, #0x400000
  403f48:	mov	x0, x21
  403f4c:	bl	41d6fc <_obstack_memory_used@@Base+0x9ffc>
  403f50:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403f54:	str	x0, [sp, #136]
  403f58:	adrp	x20, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  403f5c:	add	x24, x20, #0x8e8
  403f60:	ldrb	w1, [x0, #2276]
  403f64:	mov	x2, x21
  403f68:	ldr	x0, [x19, #8]
  403f6c:	cmp	w1, #0x0
  403f70:	cset	w3, eq  // eq = none
  403f74:	mov	x1, x24
  403f78:	mov	x25, x22
  403f7c:	mov	x27, x22
  403f80:	lsl	w3, w3, #1
  403f84:	bl	40d58c <wcrtomb@plt+0xab7c>
  403f88:	ldrb	w20, [x20, #2280]
  403f8c:	mov	x28, #0x0                   	// #0
  403f90:	ldrb	w0, [x24, #2]
  403f94:	mov	x24, #0x0                   	// #0
  403f98:	eor	w20, w20, #0x1
  403f9c:	orr	w20, w20, w0
  403fa0:	add	x0, x22, x23
  403fa4:	and	w20, w20, #0xff
  403fa8:	str	x0, [sp, #128]
  403fac:	mov	x0, #0x40                  	// #64
  403fb0:	bl	41102c <wcrtomb@plt+0xe61c>
  403fb4:	cmp	w20, #0x0
  403fb8:	add	x0, x0, #0x40
  403fbc:	mov	w2, #0x5c                  	// #92
  403fc0:	mov	w1, #0x100                 	// #256
  403fc4:	csel	w1, w2, w1, ne  // ne = any
  403fc8:	stp	x0, xzr, [x19, #16]
  403fcc:	mov	x0, #0x1                   	// #1
  403fd0:	str	wzr, [sp, #108]
  403fd4:	str	xzr, [sp, #112]
  403fd8:	stp	w1, w0, [sp, #144]
  403fdc:	stp	x0, xzr, [sp, #160]
  403fe0:	mov	w1, #0xa                   	// #10
  403fe4:	ldr	x0, [sp, #128]
  403fe8:	sub	x0, x0, x27
  403fec:	str	x0, [sp, #96]
  403ff0:	mov	x2, x0
  403ff4:	mov	x0, x27
  403ff8:	bl	402860 <memchr@plt>
  403ffc:	mov	x20, x0
  404000:	cbz	x0, 404010 <wcrtomb@plt+0x1600>
  404004:	add	x20, x20, #0x1
  404008:	sub	x0, x0, x27
  40400c:	str	x0, [sp, #96]
  404010:	ldr	x0, [sp, #96]
  404014:	subs	x26, x0, #0x1
  404018:	b.mi	404038 <wcrtomb@plt+0x1628>  // b.first
  40401c:	add	x26, x27, x26
  404020:	mov	x0, x27
  404024:	mov	w1, #0x5c                  	// #92
  404028:	sub	x2, x26, x0
  40402c:	bl	402860 <memchr@plt>
  404030:	mov	x1, x0
  404034:	cbnz	x0, 404048 <wcrtomb@plt+0x1638>
  404038:	mov	w26, #0x0                   	// #0
  40403c:	b	404080 <wcrtomb@plt+0x1670>
  404040:	mov	x27, x20
  404044:	b	403fe0 <wcrtomb@plt+0x15d0>
  404048:	ldrb	w3, [x0, #1]
  40404c:	sub	w2, w3, #0x31
  404050:	and	w2, w2, #0xff
  404054:	cmp	w2, #0x8
  404058:	b.ls	40407c <wcrtomb@plt+0x166c>  // b.plast
  40405c:	ldr	w2, [sp, #144]
  404060:	cmp	w3, w2
  404064:	b.ne	404074 <wcrtomb@plt+0x1664>  // b.any
  404068:	add	x1, x0, #0x1
  40406c:	cmp	x26, x1
  404070:	b.eq	404038 <wcrtomb@plt+0x1628>  // b.none
  404074:	add	x0, x1, #0x1
  404078:	b	404024 <wcrtomb@plt+0x1614>
  40407c:	mov	w26, #0x1                   	// #1
  404080:	cmp	w26, #0x0
  404084:	ccmp	x27, x25, #0x0, ne  // ne = any
  404088:	b.ls	4040b8 <wcrtomb@plt+0x16a8>  // b.plast
  40408c:	sub	x2, x27, x25
  404090:	add	x0, x24, x2
  404094:	str	x0, [sp, #120]
  404098:	ldr	x1, [sp, #120]
  40409c:	ldr	x0, [sp, #168]
  4040a0:	cmp	x1, x0
  4040a4:	b.hi	404138 <wcrtomb@plt+0x1728>  // b.pmore
  4040a8:	add	x0, x28, x24
  4040ac:	mov	x1, x25
  4040b0:	bl	402360 <memcpy@plt>
  4040b4:	ldr	x24, [sp, #120]
  4040b8:	ldr	x3, [x19, #24]
  4040bc:	ldr	x0, [sp, #160]
  4040c0:	add	x1, x3, #0x1
  4040c4:	cmp	x1, x0
  4040c8:	b.cs	404154 <wcrtomb@plt+0x1744>  // b.hs, b.nlast
  4040cc:	ldr	x2, [sp, #96]
  4040d0:	add	x8, x19, #0x10
  4040d4:	ldr	x4, [sp, #112]
  4040d8:	mov	x1, x27
  4040dc:	mov	x0, x8
  4040e0:	eor	w5, w26, #0x1
  4040e4:	str	x8, [sp, #96]
  4040e8:	bl	403db8 <wcrtomb@plt+0x13a8>
  4040ec:	tst	w0, #0xff
  4040f0:	ldr	w1, [sp, #148]
  4040f4:	ldr	w0, [sp, #108]
  4040f8:	ldr	x8, [sp, #96]
  4040fc:	csel	w0, w0, w1, ne  // ne = any
  404100:	str	w0, [sp, #108]
  404104:	ldr	x0, [sp, #112]
  404108:	add	x0, x0, #0x1
  40410c:	str	x0, [sp, #112]
  404110:	cbz	w26, 404124 <wcrtomb@plt+0x1714>
  404114:	ldr	x0, [x19, #24]
  404118:	mov	x25, x20
  40411c:	add	x0, x0, #0x1
  404120:	str	x0, [x19, #24]
  404124:	cbnz	x20, 404040 <wcrtomb@plt+0x1630>
  404128:	ldr	w0, [sp, #108]
  40412c:	cbz	w0, 404174 <wcrtomb@plt+0x1764>
  404130:	mov	w0, #0x2                   	// #2
  404134:	bl	4023e0 <exit@plt>
  404138:	mov	x0, x28
  40413c:	add	x1, sp, #0xa8
  404140:	str	x2, [sp, #152]
  404144:	bl	411164 <wcrtomb@plt+0xe754>
  404148:	mov	x28, x0
  40414c:	ldr	x2, [sp, #152]
  404150:	b	404098 <wcrtomb@plt+0x1688>
  404154:	ldr	x0, [x19, #16]
  404158:	add	x1, sp, #0xa0
  40415c:	mov	x2, #0x40                  	// #64
  404160:	sub	x0, x0, #0x40
  404164:	bl	4110fc <wcrtomb@plt+0xe6ec>
  404168:	add	x0, x0, #0x40
  40416c:	str	x0, [x19, #16]
  404170:	b	4040b8 <wcrtomb@plt+0x16a8>
  404174:	cbz	x25, 4041b8 <wcrtomb@plt+0x17a8>
  404178:	cmp	x25, x22
  40417c:	b.ls	4041fc <wcrtomb@plt+0x17ec>  // b.plast
  404180:	ldr	x0, [sp, #128]
  404184:	str	x8, [sp, #96]
  404188:	sub	x26, x0, x25
  40418c:	mov	x0, x28
  404190:	add	x27, x24, x26
  404194:	mov	x1, x27
  404198:	bl	41108c <wcrtomb@plt+0xe67c>
  40419c:	mov	x2, x26
  4041a0:	mov	x28, x0
  4041a4:	mov	x1, x25
  4041a8:	add	x0, x0, x24
  4041ac:	bl	402360 <memcpy@plt>
  4041b0:	mov	x24, x27
  4041b4:	ldr	x8, [sp, #96]
  4041b8:	cbz	x28, 404218 <wcrtomb@plt+0x1808>
  4041bc:	ldr	x0, [x19, #16]
  4041c0:	mov	x2, x24
  4041c4:	mov	x1, x28
  4041c8:	mov	w5, #0x0                   	// #0
  4041cc:	sub	x0, x0, #0x40
  4041d0:	str	x0, [x19, #16]
  4041d4:	ldr	x0, [x19, #24]
  4041d8:	mov	x4, #0xffffffffffffffff    	// #-1
  4041dc:	mov	x3, #0x0                   	// #0
  4041e0:	add	x0, x0, #0x1
  4041e4:	str	x0, [x19, #24]
  4041e8:	mov	x0, x8
  4041ec:	bl	403db8 <wcrtomb@plt+0x13a8>
  4041f0:	tst	w0, #0xff
  4041f4:	b.ne	404208 <wcrtomb@plt+0x17f8>  // b.any
  4041f8:	bl	4026f0 <abort@plt>
  4041fc:	mov	x24, x23
  404200:	mov	x28, x22
  404204:	b	4041b8 <wcrtomb@plt+0x17a8>
  404208:	cmp	x28, x22
  40420c:	b.eq	404218 <wcrtomb@plt+0x1808>  // b.none
  404210:	mov	x0, x28
  404214:	bl	4027a0 <free@plt>
  404218:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40421c:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404220:	ldrb	w0, [x0, #3564]
  404224:	cbnz	w0, 404230 <wcrtomb@plt+0x1820>
  404228:	ldrb	w0, [x24, #3565]
  40422c:	cbz	w0, 4042b0 <wcrtomb@plt+0x18a0>
  404230:	add	x0, x23, #0x2d
  404234:	bl	41102c <wcrtomb@plt+0xe61c>
  404238:	ldrb	w26, [x24, #3565]
  40423c:	and	x21, x21, #0x2000
  404240:	adrp	x24, 41e000 <_obstack_memory_used@@Base+0xa900>
  404244:	mov	x20, x0
  404248:	add	x24, x24, #0x6d3
  40424c:	cbz	w26, 4043c8 <wcrtomb@plt+0x19b8>
  404250:	add	x1, x24, #0x3
  404254:	cmp	x21, #0x0
  404258:	csel	x1, x1, x24, eq  // eq = none
  40425c:	mov	x0, x20
  404260:	bl	402820 <strcpy@plt>
  404264:	mov	x0, x20
  404268:	bl	4023c0 <strlen@plt>
  40426c:	mov	x25, x0
  404270:	mov	x2, x23
  404274:	mov	x1, x22
  404278:	add	x0, x20, x0
  40427c:	add	x23, x23, x25
  404280:	bl	402360 <memcpy@plt>
  404284:	add	x2, x20, x23
  404288:	cbz	w26, 4043dc <wcrtomb@plt+0x19cc>
  40428c:	add	x1, x24, #0x4c
  404290:	add	x24, x24, #0x31
  404294:	cmp	x21, #0x0
  404298:	mov	x0, x2
  40429c:	csel	x1, x24, x1, eq  // eq = none
  4042a0:	mov	x22, x20
  4042a4:	bl	402820 <strcpy@plt>
  4042a8:	bl	4023c0 <strlen@plt>
  4042ac:	add	x23, x0, x23
  4042b0:	ldr	x2, [x19, #8]
  4042b4:	mov	x1, x23
  4042b8:	mov	x0, x22
  4042bc:	bl	40c8e4 <wcrtomb@plt+0x9ed4>
  4042c0:	ldr	x0, [x19, #8]
  4042c4:	bl	40cb28 <wcrtomb@plt+0xa118>
  4042c8:	mov	x21, x0
  4042cc:	cbz	x0, 40438c <wcrtomb@plt+0x197c>
  4042d0:	mov	x22, x21
  4042d4:	mov	w0, #0x0                   	// #0
  4042d8:	bl	408348 <wcrtomb@plt+0x5938>
  4042dc:	mov	x23, x0
  4042e0:	ldrb	w0, [x22], #3
  4042e4:	str	x23, [x19]
  4042e8:	cbz	w0, 4043e8 <wcrtomb@plt+0x19d8>
  4042ec:	ldr	x0, [x19, #56]
  4042f0:	add	x0, x0, #0x1
  4042f4:	str	x0, [x19, #56]
  4042f8:	mov	x0, x22
  4042fc:	bl	4023c0 <strlen@plt>
  404300:	ldrb	w24, [x21, #1]
  404304:	mov	x25, x0
  404308:	add	x24, x24, x0
  40430c:	ldrb	w0, [x21, #2]
  404310:	add	x24, x24, x0
  404314:	mov	x0, x24
  404318:	bl	41102c <wcrtomb@plt+0xe61c>
  40431c:	mov	x23, x0
  404320:	ldrb	w1, [x19, #64]
  404324:	ldr	x0, [sp, #136]
  404328:	mov	x2, x25
  40432c:	ldrb	w26, [x0, #2276]
  404330:	strb	w26, [x23]
  404334:	ldrb	w3, [x21, #1]
  404338:	ldrb	w0, [x21, #1]
  40433c:	add	x3, x23, x3
  404340:	orr	w0, w0, w1
  404344:	mov	x1, x22
  404348:	strb	w0, [x19, #64]
  40434c:	mov	x0, x3
  404350:	bl	402360 <memcpy@plt>
  404354:	mov	x3, x0
  404358:	ldrb	w0, [x21, #2]
  40435c:	cbz	w0, 404364 <wcrtomb@plt+0x1954>
  404360:	strb	w26, [x3, x25]
  404364:	ldr	x0, [x19]
  404368:	mov	x2, x24
  40436c:	mov	x1, x23
  404370:	bl	407960 <wcrtomb@plt+0x4f50>
  404374:	mov	x0, x23
  404378:	bl	4027a0 <free@plt>
  40437c:	ldr	x0, [x19]
  404380:	bl	407d04 <wcrtomb@plt+0x52f4>
  404384:	mov	x0, x21
  404388:	bl	40d29c <wcrtomb@plt+0xa88c>
  40438c:	ldr	x2, [x19, #8]
  404390:	mov	w3, #0x1                   	// #1
  404394:	mov	x1, #0x0                   	// #0
  404398:	mov	x0, #0x0                   	// #0
  40439c:	bl	40d2a8 <wcrtomb@plt+0xa898>
  4043a0:	mov	x0, x20
  4043a4:	bl	4027a0 <free@plt>
  4043a8:	mov	x0, x19
  4043ac:	ldp	x19, x20, [sp, #16]
  4043b0:	ldp	x21, x22, [sp, #32]
  4043b4:	ldp	x23, x24, [sp, #48]
  4043b8:	ldp	x25, x26, [sp, #64]
  4043bc:	ldp	x27, x28, [sp, #80]
  4043c0:	ldp	x29, x30, [sp], #176
  4043c4:	ret
  4043c8:	add	x2, x24, #0x1e
  4043cc:	add	x1, x24, #0x7
  4043d0:	cmp	x21, #0x0
  4043d4:	csel	x1, x1, x2, eq  // eq = none
  4043d8:	b	40425c <wcrtomb@plt+0x184c>
  4043dc:	add	x1, x24, #0x4f
  4043e0:	add	x24, x24, #0x35
  4043e4:	b	404294 <wcrtomb@plt+0x1884>
  4043e8:	mov	x0, x22
  4043ec:	bl	4023c0 <strlen@plt>
  4043f0:	mov	x1, x22
  4043f4:	mov	x2, x0
  4043f8:	mov	x0, x23
  4043fc:	bl	407960 <wcrtomb@plt+0x4f50>
  404400:	b	40437c <wcrtomb@plt+0x196c>
  404404:	stp	x29, x30, [sp, #-272]!
  404408:	mov	x29, sp
  40440c:	stp	x23, x24, [sp, #48]
  404410:	ldr	x23, [x0, #8]
  404414:	stp	x19, x20, [sp, #16]
  404418:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40441c:	add	x20, x1, x2
  404420:	stp	x21, x22, [sp, #32]
  404424:	mov	x22, x1
  404428:	mov	x21, x0
  40442c:	mov	x0, x23
  404430:	stp	x25, x26, [sp, #64]
  404434:	ldrb	w25, [x19, #2276]
  404438:	stp	x27, x28, [sp, #80]
  40443c:	mov	x27, x1
  404440:	str	x4, [sp, #112]
  404444:	str	x3, [sp, #176]
  404448:	bl	40c9c8 <wcrtomb@plt+0x9fb8>
  40444c:	str	x0, [sp, #136]
  404450:	mov	x0, x23
  404454:	bl	40c9d0 <wcrtomb@plt+0x9fc0>
  404458:	and	w0, w0, #0xff
  40445c:	str	w0, [sp, #172]
  404460:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404464:	add	x0, x0, #0xded
  404468:	str	x19, [sp, #184]
  40446c:	str	x0, [sp, #200]
  404470:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404474:	add	x0, x0, #0xdec
  404478:	str	x0, [sp, #160]
  40447c:	str	x22, [sp, #232]
  404480:	cmp	x27, x20
  404484:	b.cs	4044c4 <wcrtomb@plt+0x1ab4>  // b.hs, b.nlast
  404488:	ldr	x0, [sp, #112]
  40448c:	cbnz	x0, 404724 <wcrtomb@plt+0x1d14>
  404490:	ldr	x0, [x21]
  404494:	strb	wzr, [sp, #231]
  404498:	str	xzr, [sp, #240]
  40449c:	cbz	x0, 4046f0 <wcrtomb@plt+0x1ce0>
  4044a0:	ldrb	w1, [x21, #64]
  4044a4:	sub	x23, x20, x27
  4044a8:	add	x3, sp, #0xf8
  4044ac:	mov	w4, #0x1                   	// #1
  4044b0:	add	x2, x1, x23
  4044b4:	sub	x1, x27, x1
  4044b8:	bl	4081bc <wcrtomb@plt+0x57ac>
  4044bc:	mov	x26, x0
  4044c0:	tbz	x0, #63, 4044e4 <wcrtomb@plt+0x1ad4>
  4044c4:	mov	x0, #0xffffffffffffffff    	// #-1
  4044c8:	ldp	x19, x20, [sp, #16]
  4044cc:	ldp	x21, x22, [sp, #32]
  4044d0:	ldp	x23, x24, [sp, #48]
  4044d4:	ldp	x25, x26, [sp, #64]
  4044d8:	ldp	x27, x28, [sp, #80]
  4044dc:	ldp	x29, x30, [sp], #272
  4044e0:	ret
  4044e4:	add	x24, x27, x0
  4044e8:	mov	w1, w25
  4044ec:	sub	x2, x24, x22
  4044f0:	mov	x0, x22
  4044f4:	bl	4027e0 <memrchr@plt>
  4044f8:	cmp	x0, #0x0
  4044fc:	csinc	x19, x22, x0, eq  // eq = none
  404500:	ldr	w0, [sp, #172]
  404504:	ldr	x3, [x21, #56]
  404508:	cmp	w0, #0x0
  40450c:	ldr	x28, [sp, #248]
  404510:	ccmp	x28, x3, #0x1, ne  // ne = any
  404514:	b.lt	4046e8 <wcrtomb@plt+0x1cd8>  // b.tstop
  404518:	sub	x1, x24, x19
  40451c:	mov	x0, #0x10                  	// #16
  404520:	cmp	x1, #0x10
  404524:	csel	x1, x1, x0, ge  // ge = tcont
  404528:	cmp	x1, x26, asr #2
  40452c:	b.lt	4046e8 <wcrtomb@plt+0x1cd8>  // b.tstop
  404530:	add	x0, x27, x1, lsl #2
  404534:	cmp	x1, x23, asr #2
  404538:	csel	x0, x0, x20, lt  // lt = tstop
  40453c:	sub	x2, x20, x0
  404540:	mov	w1, w25
  404544:	str	x3, [sp, #104]
  404548:	bl	402860 <memchr@plt>
  40454c:	ldr	x3, [sp, #104]
  404550:	cmp	x0, #0x0
  404554:	csinc	x26, x20, x0, eq  // eq = none
  404558:	cmp	x28, x3
  40455c:	b.ge	404700 <wcrtomb@plt+0x1cf0>  // b.tcont
  404560:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404564:	add	x1, x0, #0x8e8
  404568:	ldrb	w0, [x0, #2280]
  40456c:	ldrb	w1, [x1, #2]
  404570:	eor	w0, w0, #0x1
  404574:	orr	w0, w0, w1
  404578:	tst	w0, #0xff
  40457c:	b.ne	404708 <wcrtomb@plt+0x1cf8>  // b.any
  404580:	ldr	x0, [sp, #232]
  404584:	cmp	x0, x19
  404588:	b.cs	404590 <wcrtomb@plt+0x1b80>  // b.hs, b.nlast
  40458c:	str	x19, [sp, #232]
  404590:	mov	x3, x20
  404594:	mov	x2, x24
  404598:	add	x0, sp, #0xe8
  40459c:	mov	x1, #0x0                   	// #0
  4045a0:	bl	40841c <wcrtomb@plt+0x5a0c>
  4045a4:	cbz	x0, 404708 <wcrtomb@plt+0x1cf8>
  4045a8:	ldr	x27, [sp, #232]
  4045ac:	mov	w0, #0x1                   	// #1
  4045b0:	ldr	x1, [sp, #136]
  4045b4:	eor	w0, w0, #0x1
  4045b8:	cmp	x1, #0x0
  4045bc:	csel	w0, w0, wzr, ne  // ne = any
  4045c0:	cbz	w0, 40462c <wcrtomb@plt+0x1c1c>
  4045c4:	ldr	x0, [sp, #136]
  4045c8:	add	x4, sp, #0xf0
  4045cc:	mov	x2, x26
  4045d0:	mov	x1, x27
  4045d4:	mov	x5, #0x0                   	// #0
  4045d8:	mov	w3, #0x0                   	// #0
  4045dc:	bl	40c9bc <wcrtomb@plt+0x9fac>
  4045e0:	cmp	x0, #0x0
  4045e4:	mov	x23, x0
  4045e8:	ccmp	x26, x0, #0x4, ne  // ne = any
  4045ec:	b.eq	4046e0 <wcrtomb@plt+0x1cd0>  // b.none
  4045f0:	ldr	x0, [sp, #240]
  4045f4:	cbz	x0, 404610 <wcrtomb@plt+0x1c00>
  4045f8:	sub	x2, x23, x22
  4045fc:	mov	w1, w25
  404600:	mov	x0, x22
  404604:	bl	4027e0 <memrchr@plt>
  404608:	add	x19, x0, #0x1
  40460c:	mov	x27, x19
  404610:	sub	x2, x20, x23
  404614:	mov	w1, w25
  404618:	mov	x0, x23
  40461c:	bl	402860 <memchr@plt>
  404620:	cmp	x0, #0x0
  404624:	str	xzr, [sp, #240]
  404628:	csinc	x26, x20, x0, eq  // eq = none
  40462c:	ldr	x0, [x21, #8]
  404630:	add	x5, sp, #0xe7
  404634:	add	x4, sp, #0xf0
  404638:	mov	x2, x26
  40463c:	mov	x1, x27
  404640:	mov	w3, #0x0                   	// #0
  404644:	bl	40c9bc <wcrtomb@plt+0x9fac>
  404648:	cmp	x0, #0x0
  40464c:	mov	x23, x0
  404650:	ccmp	x26, x0, #0x4, ne  // ne = any
  404654:	b.eq	4046e0 <wcrtomb@plt+0x1cd0>  // b.none
  404658:	ldr	x0, [sp, #240]
  40465c:	cbz	x0, 404674 <wcrtomb@plt+0x1c64>
  404660:	sub	x2, x23, x22
  404664:	mov	w1, w25
  404668:	mov	x0, x22
  40466c:	bl	4027e0 <memrchr@plt>
  404670:	add	x19, x0, #0x1
  404674:	sub	x2, x20, x23
  404678:	mov	w1, w25
  40467c:	mov	x0, x23
  404680:	bl	402860 <memchr@plt>
  404684:	cmp	x0, #0x0
  404688:	csinc	x26, x20, x0, eq  // eq = none
  40468c:	ldrb	w0, [sp, #231]
  404690:	cbz	w0, 404708 <wcrtomb@plt+0x1cf8>
  404694:	mov	x27, x19
  404698:	sub	x0, x26, x27
  40469c:	mov	x23, x26
  4046a0:	sub	x0, x0, #0x1
  4046a4:	str	x0, [sp, #144]
  4046a8:	sub	x0, x26, x19
  4046ac:	str	x0, [sp, #192]
  4046b0:	sub	x0, x0, #0x1
  4046b4:	mov	x24, #0x0                   	// #0
  4046b8:	str	xzr, [sp, #104]
  4046bc:	str	x0, [sp, #152]
  4046c0:	sub	x0, x26, #0x1
  4046c4:	str	x0, [sp, #120]
  4046c8:	ldr	x0, [x21, #24]
  4046cc:	ldr	x1, [sp, #104]
  4046d0:	cmp	x0, x1
  4046d4:	b.hi	404730 <wcrtomb@plt+0x1d20>  // b.pmore
  4046d8:	cmp	x26, x23
  4046dc:	b.hi	404714 <wcrtomb@plt+0x1d04>  // b.pmore
  4046e0:	mov	x27, x26
  4046e4:	b	404480 <wcrtomb@plt+0x1a70>
  4046e8:	mov	x0, x24
  4046ec:	b	40453c <wcrtomb@plt+0x1b2c>
  4046f0:	mov	x26, x20
  4046f4:	mov	x19, x27
  4046f8:	mov	w0, #0x0                   	// #0
  4046fc:	b	4045b0 <wcrtomb@plt+0x1ba0>
  404700:	mov	x27, x19
  404704:	b	4046f8 <wcrtomb@plt+0x1ce8>
  404708:	mov	x27, x19
  40470c:	sub	x24, x26, x27
  404710:	mov	x23, x27
  404714:	ldr	x1, [sp, #176]
  404718:	sub	x0, x23, x22
  40471c:	str	x24, [x1]
  404720:	b	4044c8 <wcrtomb@plt+0x1ab8>
  404724:	mov	x26, x20
  404728:	ldr	x19, [sp, #112]
  40472c:	b	404698 <wcrtomb@plt+0x1c88>
  404730:	ldr	x0, [sp, #104]
  404734:	add	x28, x21, #0x20
  404738:	ldr	x1, [sp, #104]
  40473c:	mov	x5, x28
  404740:	lsl	x0, x0, #6
  404744:	str	x0, [sp, #128]
  404748:	ldr	x0, [x21, #16]
  40474c:	sub	x3, x19, x27
  404750:	ldr	x4, [sp, #152]
  404754:	add	x0, x0, x1, lsl #6
  404758:	ldr	x1, [sp, #184]
  40475c:	ldrb	w2, [x0, #56]
  404760:	ldrb	w1, [x1, #2276]
  404764:	and	w2, w2, #0x3f
  404768:	cmp	w1, #0xa
  40476c:	cset	w1, eq  // eq = none
  404770:	orr	w1, w2, w1, lsl #7
  404774:	strb	w1, [x0, #56]
  404778:	ldr	x2, [sp, #144]
  40477c:	mov	x1, x27
  404780:	bl	41de04 <_obstack_memory_used@@Base+0xa704>
  404784:	cmn	x0, #0x1
  404788:	b.ge	404790 <wcrtomb@plt+0x1d80>  // b.tcont
  40478c:	bl	411200 <wcrtomb@plt+0xe7f0>
  404790:	b.eq	40480c <wcrtomb@plt+0x1dfc>  // b.none
  404794:	add	x5, x27, x0
  404798:	cmp	x23, x5
  40479c:	b.cc	40480c <wcrtomb@plt+0x1dfc>  // b.lo, b.ul, b.last
  4047a0:	ldr	x1, [x21, #48]
  4047a4:	ldr	x1, [x1]
  4047a8:	sub	x0, x1, x0
  4047ac:	ldr	x1, [sp, #112]
  4047b0:	mov	x4, x0
  4047b4:	cbz	x1, 4047c4 <wcrtomb@plt+0x1db4>
  4047b8:	ldr	x1, [sp, #160]
  4047bc:	ldrb	w1, [x1]
  4047c0:	cbz	w1, 4047ec <wcrtomb@plt+0x1ddc>
  4047c4:	ldr	x1, [sp, #200]
  4047c8:	ldrb	w1, [x1]
  4047cc:	cbnz	w1, 404800 <wcrtomb@plt+0x1df0>
  4047d0:	ldr	x0, [sp, #160]
  4047d4:	ldrb	w0, [x0]
  4047d8:	cbnz	w0, 404834 <wcrtomb@plt+0x1e24>
  4047dc:	ldr	x4, [sp, #192]
  4047e0:	mov	x5, x19
  4047e4:	ldr	x0, [sp, #112]
  4047e8:	cbz	x0, 40470c <wcrtomb@plt+0x1cfc>
  4047ec:	cmp	x23, x5
  4047f0:	b.hi	40490c <wcrtomb@plt+0x1efc>  // b.pmore
  4047f4:	ccmp	x24, x4, #0x2, eq  // eq = none
  4047f8:	csel	x24, x24, x4, cs  // cs = hs, nlast
  4047fc:	b	40480c <wcrtomb@plt+0x1dfc>
  404800:	ldr	x1, [sp, #152]
  404804:	cmp	x1, x0
  404808:	b.eq	4047dc <wcrtomb@plt+0x1dcc>  // b.none
  40480c:	ldr	x0, [sp, #104]
  404810:	add	x0, x0, #0x1
  404814:	str	x0, [sp, #104]
  404818:	b	4046c8 <wcrtomb@plt+0x1cb8>
  40481c:	ldr	x1, [x21, #48]
  404820:	add	x5, x27, x0
  404824:	ldr	x4, [x1]
  404828:	sub	x4, x4, x0
  40482c:	cmp	x23, x5
  404830:	b.cc	40480c <wcrtomb@plt+0x1dfc>  // b.lo, b.ul, b.last
  404834:	ldr	x1, [sp, #120]
  404838:	add	x0, x5, x4
  40483c:	stp	x5, x4, [sp, #208]
  404840:	bl	408578 <wcrtomb@plt+0x5b68>
  404844:	ldp	x5, x4, [sp, #208]
  404848:	cbnz	x0, 404864 <wcrtomb@plt+0x1e54>
  40484c:	ldr	x2, [sp, #120]
  404850:	mov	x1, x5
  404854:	mov	x0, x27
  404858:	bl	408580 <wcrtomb@plt+0x5b70>
  40485c:	ldp	x5, x4, [sp, #208]
  404860:	cbz	x0, 4047e4 <wcrtomb@plt+0x1dd4>
  404864:	cbz	x4, 4048b8 <wcrtomb@plt+0x1ea8>
  404868:	ldr	x0, [x21, #16]
  40486c:	sub	x2, x4, #0x1
  404870:	ldr	x1, [sp, #128]
  404874:	add	x2, x5, x2
  404878:	mov	x4, x28
  40487c:	sub	x3, x5, x27
  404880:	add	x0, x0, x1
  404884:	sub	x2, x2, x19
  404888:	str	x5, [sp, #208]
  40488c:	ldrb	w1, [x0, #56]
  404890:	orr	w1, w1, #0x40
  404894:	strb	w1, [x0, #56]
  404898:	mov	x1, x27
  40489c:	bl	41ddf0 <_obstack_memory_used@@Base+0xa6f0>
  4048a0:	mov	x4, x0
  4048a4:	cmn	x0, #0x1
  4048a8:	b.lt	40478c <wcrtomb@plt+0x1d7c>  // b.tstop
  4048ac:	cmp	x0, #0x0
  4048b0:	ldr	x5, [sp, #208]
  4048b4:	b.gt	40482c <wcrtomb@plt+0x1e1c>
  4048b8:	ldr	x0, [sp, #120]
  4048bc:	cmp	x0, x5
  4048c0:	b.eq	40480c <wcrtomb@plt+0x1dfc>  // b.none
  4048c4:	ldr	x0, [x21, #16]
  4048c8:	add	x3, x5, #0x1
  4048cc:	ldr	x1, [sp, #128]
  4048d0:	sub	x4, x26, x3
  4048d4:	ldr	x2, [sp, #144]
  4048d8:	add	x0, x0, x1
  4048dc:	mov	x5, x28
  4048e0:	sub	x4, x4, #0x1
  4048e4:	sub	x3, x3, x27
  4048e8:	ldrb	w1, [x0, #56]
  4048ec:	and	w1, w1, #0xffffffbf
  4048f0:	strb	w1, [x0, #56]
  4048f4:	mov	x1, x27
  4048f8:	bl	41de04 <_obstack_memory_used@@Base+0xa704>
  4048fc:	tbz	x0, #63, 40481c <wcrtomb@plt+0x1e0c>
  404900:	cmn	x0, #0x1
  404904:	b.eq	40480c <wcrtomb@plt+0x1dfc>  // b.none
  404908:	b	40478c <wcrtomb@plt+0x1d7c>
  40490c:	mov	x24, x4
  404910:	mov	x23, x5
  404914:	b	40480c <wcrtomb@plt+0x1dfc>
  404918:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40491c:	add	x1, x0, #0x378
  404920:	ldr	x1, [x1, #8]
  404924:	str	x1, [x0, #888]
  404928:	ret
  40492c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  404930:	mov	w1, #0xffffffff            	// #-1
  404934:	str	w1, [x0, #1160]
  404938:	ret
  40493c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  404940:	add	x0, x0, #0x378
  404944:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404948:	add	x1, x1, #0x735
  40494c:	str	x1, [x0, #16]
  404950:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404954:	add	x1, x1, #0x73b
  404958:	str	x1, [x0, #24]
  40495c:	ret
  404960:	mov	w1, #0xb000                	// #45056
  404964:	and	w1, w0, w1
  404968:	cmp	w1, #0x2, lsl #12
  40496c:	b.eq	404988 <wcrtomb@plt+0x1f78>  // b.none
  404970:	and	w0, w0, #0xf000
  404974:	cmp	w0, #0xc, lsl #12
  404978:	b.eq	404988 <wcrtomb@plt+0x1f78>  // b.none
  40497c:	cmp	w0, #0x1, lsl #12
  404980:	cset	w0, eq  // eq = none
  404984:	ret
  404988:	mov	w0, #0x1                   	// #1
  40498c:	b	404984 <wcrtomb@plt+0x1f74>
  404990:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  404994:	and	w0, w0, #0xff
  404998:	ldr	w1, [x1, #1164]
  40499c:	cmp	w1, #0x2
  4049a0:	b.eq	4049b8 <wcrtomb@plt+0x1fa8>  // b.none
  4049a4:	cmp	w1, #0x0
  4049a8:	eor	w0, w0, #0x1
  4049ac:	cset	w1, eq  // eq = none
  4049b0:	and	w0, w1, w0
  4049b4:	ret
  4049b8:	mov	w0, #0x1                   	// #1
  4049bc:	b	4049b4 <wcrtomb@plt+0x1fa4>
  4049c0:	stp	x29, x30, [sp, #-64]!
  4049c4:	mov	x29, sp
  4049c8:	stp	x19, x20, [sp, #16]
  4049cc:	mov	x20, x0
  4049d0:	mov	x19, x1
  4049d4:	stp	x23, x24, [sp, #48]
  4049d8:	mov	x23, x2
  4049dc:	stp	x21, x22, [sp, #32]
  4049e0:	mov	x22, #0x0                   	// #0
  4049e4:	ldrb	w21, [x20]
  4049e8:	mov	w0, w21
  4049ec:	bl	408a84 <wcrtomb@plt+0x6074>
  4049f0:	tst	w0, #0xff
  4049f4:	b.ne	404a50 <wcrtomb@plt+0x2040>  // b.any
  4049f8:	cbz	w21, 404a64 <wcrtomb@plt+0x2054>
  4049fc:	cbz	x23, 404a04 <wcrtomb@plt+0x1ff4>
  404a00:	str	x19, [x23, x22, lsl #3]
  404a04:	add	x22, x22, #0x1
  404a08:	mov	x21, x20
  404a0c:	mov	x24, x19
  404a10:	ldrb	w0, [x21], #1
  404a14:	strb	w0, [x19], #1
  404a18:	cmp	w0, #0x5c
  404a1c:	b.ne	404a30 <wcrtomb@plt+0x2020>  // b.any
  404a20:	ldrb	w0, [x20, #1]
  404a24:	cbz	w0, 404a30 <wcrtomb@plt+0x2020>
  404a28:	add	x21, x20, #0x2
  404a2c:	sturb	w0, [x19, #-1]
  404a30:	ldrb	w0, [x21]
  404a34:	cbz	w0, 404a44 <wcrtomb@plt+0x2034>
  404a38:	bl	408a84 <wcrtomb@plt+0x6074>
  404a3c:	tst	w0, #0xff
  404a40:	b.eq	404a5c <wcrtomb@plt+0x204c>  // b.none
  404a44:	strb	wzr, [x19]
  404a48:	add	x19, x24, #0x2
  404a4c:	b	404a54 <wcrtomb@plt+0x2044>
  404a50:	add	x21, x20, #0x1
  404a54:	mov	x20, x21
  404a58:	b	4049e4 <wcrtomb@plt+0x1fd4>
  404a5c:	mov	x20, x21
  404a60:	b	404a08 <wcrtomb@plt+0x1ff8>
  404a64:	mov	x0, x22
  404a68:	ldp	x19, x20, [sp, #16]
  404a6c:	ldp	x21, x22, [sp, #32]
  404a70:	ldp	x23, x24, [sp, #48]
  404a74:	ldp	x29, x30, [sp], #64
  404a78:	ret
  404a7c:	stp	x29, x30, [sp, #-32]!
  404a80:	mov	x29, sp
  404a84:	str	x19, [sp, #16]
  404a88:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  404a8c:	add	x19, x19, #0x488
  404a90:	ldr	x0, [x19, #8]
  404a94:	cbnz	x0, 404aac <wcrtomb@plt+0x209c>
  404a98:	mov	w2, #0x5                   	// #5
  404a9c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404aa0:	add	x1, x1, #0x73f
  404aa4:	bl	4028e0 <dcgettext@plt>
  404aa8:	str	x0, [x19, #8]
  404aac:	ldr	x0, [x19, #8]
  404ab0:	ldr	x19, [sp, #16]
  404ab4:	ldp	x29, x30, [sp], #32
  404ab8:	ret
  404abc:	stp	x29, x30, [sp, #-32]!
  404ac0:	mov	x29, sp
  404ac4:	stp	x19, x20, [sp, #16]
  404ac8:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  404acc:	add	x19, x19, #0x488
  404ad0:	mov	w20, w0
  404ad4:	ldrb	w0, [x19, #16]
  404ad8:	cbnz	w0, 404af8 <wcrtomb@plt+0x20e8>
  404adc:	bl	404a7c <wcrtomb@plt+0x206c>
  404ae0:	mov	x3, x0
  404ae4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  404ae8:	mov	w1, w20
  404aec:	add	x2, x2, #0x4d4
  404af0:	mov	w0, #0x0                   	// #0
  404af4:	bl	4023f0 <error@plt>
  404af8:	mov	w0, #0x1                   	// #1
  404afc:	strb	w0, [x19, #17]
  404b00:	ldp	x19, x20, [sp, #16]
  404b04:	ldp	x29, x30, [sp], #32
  404b08:	ret
  404b0c:	stp	x29, x30, [sp, #-48]!
  404b10:	mov	x29, sp
  404b14:	stp	x19, x20, [sp, #16]
  404b18:	mov	x20, x0
  404b1c:	mov	w19, #0x0                   	// #0
  404b20:	stp	x21, x22, [sp, #32]
  404b24:	adrp	x21, 41f000 <_obstack_memory_used@@Base+0xb900>
  404b28:	mov	w22, w1
  404b2c:	add	x21, x21, #0xbb0
  404b30:	mov	x1, x21
  404b34:	mov	x0, x20
  404b38:	bl	402780 <strcmp@plt>
  404b3c:	cbnz	w0, 404b70 <wcrtomb@plt+0x2160>
  404b40:	cmp	w22, #0x0
  404b44:	ccmp	w19, w22, #0x4, ge  // ge = tcont
  404b48:	b.eq	404bc8 <wcrtomb@plt+0x21b8>  // b.none
  404b4c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404b50:	add	x1, x1, #0x750
  404b54:	mov	w2, #0x5                   	// #5
  404b58:	mov	x0, #0x0                   	// #0
  404b5c:	bl	4028e0 <dcgettext@plt>
  404b60:	mov	w1, #0x0                   	// #0
  404b64:	mov	x2, x0
  404b68:	mov	w0, #0x2                   	// #2
  404b6c:	bl	4023f0 <error@plt>
  404b70:	add	w19, w19, #0x1
  404b74:	add	x21, x21, #0x20
  404b78:	cmp	w19, #0x6
  404b7c:	b.ne	404b30 <wcrtomb@plt+0x2120>  // b.any
  404b80:	mov	x0, x20
  404b84:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404b88:	add	x1, x1, #0x76f
  404b8c:	bl	402780 <strcmp@plt>
  404b90:	mov	w2, #0x5                   	// #5
  404b94:	cbnz	w0, 404ba4 <wcrtomb@plt+0x2194>
  404b98:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404b9c:	add	x1, x1, #0x774
  404ba0:	b	404b58 <wcrtomb@plt+0x2148>
  404ba4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404ba8:	mov	x0, #0x0                   	// #0
  404bac:	add	x1, x1, #0x7b1
  404bb0:	bl	4028e0 <dcgettext@plt>
  404bb4:	mov	x3, x20
  404bb8:	mov	x2, x0
  404bbc:	mov	w1, #0x0                   	// #0
  404bc0:	mov	w0, #0x2                   	// #2
  404bc4:	bl	4023f0 <error@plt>
  404bc8:	mov	w0, w19
  404bcc:	ldp	x19, x20, [sp, #16]
  404bd0:	ldp	x21, x22, [sp, #32]
  404bd4:	ldp	x29, x30, [sp], #48
  404bd8:	ret
  404bdc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  404be0:	ldr	w0, [x0, #1180]
  404be4:	cbnz	w0, 404bec <wcrtomb@plt+0x21dc>
  404be8:	b	408cf4 <wcrtomb@plt+0x62e4>
  404bec:	ret
  404bf0:	stp	x29, x30, [sp, #-64]!
  404bf4:	mov	x29, sp
  404bf8:	stp	x19, x20, [sp, #16]
  404bfc:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  404c00:	add	x19, x19, #0x488
  404c04:	mov	x20, x0
  404c08:	stp	x21, x22, [sp, #32]
  404c0c:	mov	x21, x1
  404c10:	ldp	x1, x0, [x19, #24]
  404c14:	str	x23, [sp, #48]
  404c18:	mov	x23, x2
  404c1c:	cmp	x1, x0
  404c20:	b.hi	404c38 <wcrtomb@plt+0x2228>  // b.pmore
  404c24:	ldr	x0, [x19, #40]
  404c28:	add	x1, x19, #0x18
  404c2c:	mov	x2, #0x10                  	// #16
  404c30:	bl	4110fc <wcrtomb@plt+0xe6ec>
  404c34:	str	x0, [x19, #40]
  404c38:	ldp	x0, x1, [x19, #32]
  404c3c:	add	x21, x20, x21
  404c40:	ldr	x22, [x19, #48]
  404c44:	add	x4, x22, #0x1
  404c48:	add	x3, x1, x0, lsl #4
  404c4c:	lsl	x2, x0, #4
  404c50:	add	x0, x0, #0x1
  404c54:	str	x0, [x19, #32]
  404c58:	str	x4, [x3, #8]
  404c5c:	str	x23, [x1, x2]
  404c60:	mov	x23, #0x0                   	// #0
  404c64:	sub	x2, x21, x20
  404c68:	mov	x0, x20
  404c6c:	mov	w1, #0xa                   	// #10
  404c70:	bl	402860 <memchr@plt>
  404c74:	cbnz	x0, 404c94 <wcrtomb@plt+0x2284>
  404c78:	add	x22, x22, x23
  404c7c:	str	x22, [x19, #48]
  404c80:	ldp	x19, x20, [sp, #16]
  404c84:	ldp	x21, x22, [sp, #32]
  404c88:	ldr	x23, [sp, #48]
  404c8c:	ldp	x29, x30, [sp], #64
  404c90:	ret
  404c94:	add	x20, x0, #0x1
  404c98:	add	x23, x23, #0x1
  404c9c:	b	404c64 <wcrtomb@plt+0x2254>
  404ca0:	stp	x29, x30, [sp, #-272]!
  404ca4:	mov	x29, sp
  404ca8:	stp	x1, x2, [sp, #216]
  404cac:	add	x1, sp, #0x110
  404cb0:	stp	x1, x1, [sp, #48]
  404cb4:	add	x1, sp, #0xd0
  404cb8:	str	x1, [sp, #64]
  404cbc:	mov	w1, #0xffffffc8            	// #-56
  404cc0:	str	w1, [sp, #72]
  404cc4:	mov	w1, #0xffffff80            	// #-128
  404cc8:	str	w1, [sp, #76]
  404ccc:	mov	x1, x0
  404cd0:	stp	x3, x4, [sp, #232]
  404cd4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  404cd8:	ldp	x2, x3, [sp, #48]
  404cdc:	stp	x2, x3, [sp, #16]
  404ce0:	ldp	x2, x3, [sp, #64]
  404ce4:	stp	x2, x3, [sp, #32]
  404ce8:	ldr	x0, [x0, #1128]
  404cec:	add	x2, sp, #0x10
  404cf0:	str	q0, [sp, #80]
  404cf4:	str	q1, [sp, #96]
  404cf8:	str	q2, [sp, #112]
  404cfc:	str	q3, [sp, #128]
  404d00:	str	q4, [sp, #144]
  404d04:	str	q5, [sp, #160]
  404d08:	str	q6, [sp, #176]
  404d0c:	str	q7, [sp, #192]
  404d10:	stp	x5, x6, [sp, #248]
  404d14:	str	x7, [sp, #264]
  404d18:	bl	402940 <vfprintf@plt>
  404d1c:	tbz	w0, #31, 404d30 <wcrtomb@plt+0x2320>
  404d20:	bl	402980 <__errno_location@plt>
  404d24:	ldr	w1, [x0]
  404d28:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  404d2c:	str	w1, [x0, #1180]
  404d30:	ldp	x29, x30, [sp], #272
  404d34:	ret
  404d38:	stp	x29, x30, [sp, #-16]!
  404d3c:	mov	w2, #0x5                   	// #5
  404d40:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  404d44:	mov	x29, sp
  404d48:	add	x1, x1, #0x7c4
  404d4c:	mov	x0, #0x0                   	// #0
  404d50:	bl	4028e0 <dcgettext@plt>
  404d54:	mov	x2, x0
  404d58:	mov	w1, #0x0                   	// #0
  404d5c:	mov	w0, #0x2                   	// #2
  404d60:	bl	4023f0 <error@plt>
  404d64:	stp	x29, x30, [sp, #-48]!
  404d68:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404d6c:	mov	x29, sp
  404d70:	stp	x19, x20, [sp, #16]
  404d74:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  404d78:	add	x19, x19, #0x488
  404d7c:	mov	x20, x0
  404d80:	stp	x21, x22, [sp, #32]
  404d84:	ldrb	w22, [x1, #2276]
  404d88:	ldr	x0, [x19, #56]
  404d8c:	mov	x21, #0x0                   	// #0
  404d90:	cmp	x0, x20
  404d94:	b.cs	404da8 <wcrtomb@plt+0x2398>  // b.hs, b.nlast
  404d98:	sub	x2, x20, x0
  404d9c:	mov	w1, w22
  404da0:	bl	402860 <memchr@plt>
  404da4:	cbnz	x0, 404db8 <wcrtomb@plt+0x23a8>
  404da8:	ldr	x0, [x19, #64]
  404dac:	adds	x0, x0, x21
  404db0:	b.cc	404dc4 <wcrtomb@plt+0x23b4>  // b.lo, b.ul, b.last
  404db4:	bl	404d38 <wcrtomb@plt+0x2328>
  404db8:	add	x21, x21, #0x1
  404dbc:	add	x0, x0, #0x1
  404dc0:	b	404d90 <wcrtomb@plt+0x2380>
  404dc4:	stp	x20, x0, [x19, #56]
  404dc8:	ldp	x19, x20, [sp, #16]
  404dcc:	ldp	x21, x22, [sp, #32]
  404dd0:	ldp	x29, x30, [sp], #48
  404dd4:	ret
  404dd8:	stp	x29, x30, [sp, #-96]!
  404ddc:	mov	x29, sp
  404de0:	stp	x19, x20, [sp, #16]
  404de4:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  404de8:	add	x19, x19, #0x488
  404dec:	stp	x21, x22, [sp, #32]
  404df0:	mov	x22, x1
  404df4:	mov	x21, x0
  404df8:	ldp	x1, x3, [x19, #88]
  404dfc:	stp	x25, x26, [sp, #64]
  404e00:	ldp	x20, x26, [x19, #72]
  404e04:	stp	x23, x24, [sp, #48]
  404e08:	neg	x24, x0
  404e0c:	sub	x4, x1, #0x8
  404e10:	str	x27, [sp, #80]
  404e14:	sub	x25, x20, x0
  404e18:	add	x0, x26, x4
  404e1c:	sub	x0, x0, x20
  404e20:	cmp	x0, x3
  404e24:	b.cc	404ef4 <wcrtomb@plt+0x24e4>  // b.lo, b.ul, b.last
  404e28:	str	x25, [x19, #104]
  404e2c:	ldp	x23, x1, [x19, #88]
  404e30:	mov	w24, #0x1                   	// #1
  404e34:	mov	w25, w24
  404e38:	sub	x0, x23, #0x8
  404e3c:	ldr	x23, [x19, #80]
  404e40:	add	x23, x23, x0
  404e44:	sub	x23, x23, x20
  404e48:	udiv	x0, x23, x1
  404e4c:	msub	x0, x0, x1, x23
  404e50:	sub	x23, x23, x0
  404e54:	ldr	w0, [x19, #120]
  404e58:	mov	x2, x23
  404e5c:	mov	x1, x20
  404e60:	bl	410a8c <wcrtomb@plt+0xe07c>
  404e64:	cmn	x0, #0x1
  404e68:	b.ne	404e74 <wcrtomb@plt+0x2464>  // b.any
  404e6c:	mov	w24, #0x0                   	// #0
  404e70:	mov	x0, #0x0                   	// #0
  404e74:	ldr	x21, [x19, #112]
  404e78:	cmp	x0, #0x0
  404e7c:	ldrb	w1, [x19, #124]
  404e80:	add	x21, x0, x21
  404e84:	str	x21, [x19, #112]
  404e88:	eor	w2, w1, #0x1
  404e8c:	cset	w1, eq  // eq = none
  404e90:	orr	w1, w1, w2
  404e94:	add	x2, x20, x0
  404e98:	tst	w1, #0xff
  404e9c:	b.ne	405048 <wcrtomb@plt+0x2638>  // b.any
  404ea0:	mov	x1, x20
  404ea4:	cmp	x1, x2
  404ea8:	b.cc	404fec <wcrtomb@plt+0x25dc>  // b.lo, b.ul, b.last
  404eac:	ldr	x26, [x19, #64]
  404eb0:	adds	x26, x26, x0
  404eb4:	b.cs	404ffc <wcrtomb@plt+0x25ec>  // b.hs, b.nlast
  404eb8:	ldrb	w0, [x19, #125]
  404ebc:	str	x26, [x19, #64]
  404ec0:	cbnz	w0, 404e54 <wcrtomb@plt+0x2444>
  404ec4:	ldr	w27, [x19, #120]
  404ec8:	mov	x1, x21
  404ecc:	mov	w2, #0x3                   	// #3
  404ed0:	mov	w0, w27
  404ed4:	bl	402480 <lseek@plt>
  404ed8:	tbz	x0, #63, 405030 <wcrtomb@plt+0x2620>
  404edc:	bl	402980 <__errno_location@plt>
  404ee0:	ldr	w0, [x0]
  404ee4:	cmp	w0, #0x6
  404ee8:	b.eq	405000 <wcrtomb@plt+0x25f0>  // b.none
  404eec:	strb	w25, [x19, #125]
  404ef0:	b	404e54 <wcrtomb@plt+0x2444>
  404ef4:	mov	x0, #0xfffffffffffffff7    	// #-9
  404ef8:	sub	x0, x0, x3
  404efc:	add	x5, x3, x21
  404f00:	sub	x4, x4, x3
  404f04:	lsr	x0, x0, #1
  404f08:	cmp	x4, x5
  404f0c:	b.cc	404fd0 <wcrtomb@plt+0x25c0>  // b.lo, b.ul, b.last
  404f10:	ldr	w0, [x22, #16]
  404f14:	and	w0, w0, #0xf000
  404f18:	cmp	w0, #0x8, lsl #12
  404f1c:	b.ne	404f44 <wcrtomb@plt+0x2534>  // b.any
  404f20:	ldr	x0, [x22, #48]
  404f24:	ldr	x2, [x19, #112]
  404f28:	subs	x0, x0, x2
  404f2c:	add	x2, x0, x21
  404f30:	ccmp	x0, x2, #0x0, pl  // pl = nfrst
  404f34:	b.gt	404f44 <wcrtomb@plt+0x2534>
  404f38:	cmp	x2, x5
  404f3c:	ccmp	x2, x4, #0x2, cs  // cs = hs, nlast
  404f40:	csel	x4, x4, x2, cs  // cs = hs, nlast
  404f44:	add	x3, x3, #0x8
  404f48:	add	x0, x3, x4
  404f4c:	cmp	x1, x0
  404f50:	b.cs	404fe4 <wcrtomb@plt+0x25d4>  // b.hs, b.nlast
  404f54:	str	x0, [x19, #88]
  404f58:	bl	41102c <wcrtomb@plt+0xe61c>
  404f5c:	mov	x23, x0
  404f60:	add	x20, x21, #0x1
  404f64:	ldr	x0, [x19, #96]
  404f68:	add	x20, x23, x20
  404f6c:	add	x1, x0, #0x1
  404f70:	udiv	x2, x20, x0
  404f74:	msub	x2, x2, x0, x20
  404f78:	cbz	x2, 404f88 <wcrtomb@plt+0x2578>
  404f7c:	sub	x20, x21, x2
  404f80:	add	x20, x20, x1
  404f84:	add	x20, x23, x20
  404f88:	add	x3, x20, x24
  404f8c:	sub	x1, x25, x26
  404f90:	ldr	x24, [x19, #80]
  404f94:	mov	x0, x3
  404f98:	mov	x2, x21
  404f9c:	str	x3, [x19, #104]
  404fa0:	add	x1, x24, x1
  404fa4:	bl	402380 <memmove@plt>
  404fa8:	mov	x3, x0
  404fac:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  404fb0:	cmp	x24, x23
  404fb4:	ldrb	w0, [x0, #2276]
  404fb8:	sturb	w0, [x3, #-1]
  404fbc:	b.eq	404e2c <wcrtomb@plt+0x241c>  // b.none
  404fc0:	mov	x0, x24
  404fc4:	bl	4027a0 <free@plt>
  404fc8:	str	x23, [x19, #80]
  404fcc:	b	404e2c <wcrtomb@plt+0x241c>
  404fd0:	cmp	x0, x4
  404fd4:	b.cs	404fdc <wcrtomb@plt+0x25cc>  // b.hs, b.nlast
  404fd8:	bl	411200 <wcrtomb@plt+0xe7f0>
  404fdc:	lsl	x4, x4, #1
  404fe0:	b	404f08 <wcrtomb@plt+0x24f8>
  404fe4:	mov	x23, x26
  404fe8:	b	404f60 <wcrtomb@plt+0x2550>
  404fec:	ldrb	w3, [x1]
  404ff0:	cbnz	w3, 405048 <wcrtomb@plt+0x2638>
  404ff4:	add	x1, x1, #0x1
  404ff8:	b	404ea4 <wcrtomb@plt+0x2494>
  404ffc:	bl	404d38 <wcrtomb@plt+0x2328>
  405000:	ldr	w0, [x22, #16]
  405004:	and	w0, w0, #0xf000
  405008:	cmp	w0, #0x8, lsl #12
  40500c:	b.ne	404eec <wcrtomb@plt+0x24dc>  // b.any
  405010:	ldr	x0, [x22, #48]
  405014:	cmp	x21, x0
  405018:	b.ge	404eec <wcrtomb@plt+0x24dc>  // b.tcont
  40501c:	mov	w0, w27
  405020:	mov	w2, #0x2                   	// #2
  405024:	mov	x1, #0x0                   	// #0
  405028:	bl	402480 <lseek@plt>
  40502c:	tbnz	x0, #63, 404eec <wcrtomb@plt+0x24dc>
  405030:	sub	x21, x0, x21
  405034:	adds	x21, x21, x26
  405038:	b.cs	404ffc <wcrtomb@plt+0x25ec>  // b.hs, b.nlast
  40503c:	str	x21, [x19, #64]
  405040:	str	x0, [x19, #112]
  405044:	b	404e54 <wcrtomb@plt+0x2444>
  405048:	str	xzr, [x20, x0]
  40504c:	mov	w0, w24
  405050:	str	x2, [x19, #72]
  405054:	ldp	x19, x20, [sp, #16]
  405058:	ldp	x21, x22, [sp, #32]
  40505c:	ldp	x23, x24, [sp, #48]
  405060:	ldp	x25, x26, [sp, #64]
  405064:	ldr	x27, [sp, #80]
  405068:	ldp	x29, x30, [sp], #96
  40506c:	ret
  405070:	stp	x29, x30, [sp, #-32]!
  405074:	mov	x3, x1
  405078:	adrp	x4, 41f000 <_obstack_memory_used@@Base+0xb900>
  40507c:	mov	x29, sp
  405080:	add	x4, x4, #0x645
  405084:	mov	w2, #0xa                   	// #10
  405088:	stp	x19, x20, [sp, #16]
  40508c:	mov	x20, x0
  405090:	mov	x19, x1
  405094:	mov	x1, #0x0                   	// #0
  405098:	bl	4112ac <wcrtomb@plt+0xe89c>
  40509c:	cmp	w0, #0x1
  4050a0:	b.hi	4050ac <wcrtomb@plt+0x269c>  // b.pmore
  4050a4:	ldr	x0, [x19]
  4050a8:	tbz	x0, #63, 4050dc <wcrtomb@plt+0x26cc>
  4050ac:	mov	w2, #0x5                   	// #5
  4050b0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  4050b4:	mov	x0, #0x0                   	// #0
  4050b8:	add	x1, x1, #0x7e0
  4050bc:	bl	4028e0 <dcgettext@plt>
  4050c0:	mov	x4, x0
  4050c4:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xa900>
  4050c8:	mov	x3, x20
  4050cc:	add	x2, x2, #0x81a
  4050d0:	mov	w1, #0x0                   	// #0
  4050d4:	mov	w0, #0x2                   	// #2
  4050d8:	bl	4023f0 <error@plt>
  4050dc:	ldp	x19, x20, [sp, #16]
  4050e0:	ldp	x29, x30, [sp], #32
  4050e4:	ret
  4050e8:	stp	x29, x30, [sp, #-192]!
  4050ec:	mov	x3, x2
  4050f0:	mov	x2, x1
  4050f4:	mov	x29, sp
  4050f8:	mov	x1, x0
  4050fc:	stp	x19, x20, [sp, #16]
  405100:	mov	x20, x0
  405104:	add	x0, sp, #0x3c
  405108:	stp	x21, x22, [sp, #32]
  40510c:	bl	413374 <wcrtomb@plt+0x10964>
  405110:	cmp	x0, #0x10
  405114:	b.hi	405174 <wcrtomb@plt+0x2764>  // b.pmore
  405118:	mov	x19, x0
  40511c:	ldr	w0, [sp, #60]
  405120:	add	x1, sp, #0x40
  405124:	bl	40d898 <wcrtomb@plt+0xae88>
  405128:	cbnz	w0, 405174 <wcrtomb@plt+0x2764>
  40512c:	mov	w21, w19
  405130:	sub	w19, w19, #0x1
  405134:	sxtw	x19, w19
  405138:	cmp	w19, #0x0
  40513c:	b.gt	405154 <wcrtomb@plt+0x2744>
  405140:	mov	w0, w21
  405144:	ldp	x19, x20, [sp, #16]
  405148:	ldp	x21, x22, [sp, #32]
  40514c:	ldp	x29, x30, [sp], #192
  405150:	ret
  405154:	ldrb	w22, [x20, x19]
  405158:	bl	402650 <__ctype_toupper_loc@plt>
  40515c:	ldr	x0, [x0]
  405160:	sub	x19, x19, #0x1
  405164:	ubfiz	x1, x22, #2, #8
  405168:	ldr	w0, [x0, x1]
  40516c:	cmp	w0, w22
  405170:	b.eq	405138 <wcrtomb@plt+0x2728>  // b.none
  405174:	mov	w21, #0xffffffff            	// #-1
  405178:	b	405140 <wcrtomb@plt+0x2730>
  40517c:	mov	x1, x0
  405180:	ldrb	w0, [x0]
  405184:	cbz	w0, 405194 <wcrtomb@plt+0x2784>
  405188:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40518c:	ldr	x0, [x0, #904]
  405190:	b	411640 <wcrtomb@plt+0xec30>
  405194:	ret
  405198:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  40519c:	ldr	w1, [x1, #1160]
  4051a0:	cbz	w1, 4051a8 <wcrtomb@plt+0x2798>
  4051a4:	b	40517c <wcrtomb@plt+0x276c>
  4051a8:	ret
  4051ac:	stp	x29, x30, [sp, #-16]!
  4051b0:	mov	x29, sp
  4051b4:	bl	402980 <__errno_location@plt>
  4051b8:	ldr	w1, [x0]
  4051bc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4051c0:	ldp	x29, x30, [sp], #16
  4051c4:	str	w1, [x0, #1180]
  4051c8:	ret
  4051cc:	stp	x29, x30, [sp, #-16]!
  4051d0:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  4051d4:	mov	x29, sp
  4051d8:	ldr	x1, [x1, #1128]
  4051dc:	bl	4028f0 <fputs_unlocked@plt>
  4051e0:	tbz	w0, #31, 4051ec <wcrtomb@plt+0x27dc>
  4051e4:	ldp	x29, x30, [sp], #16
  4051e8:	b	4051ac <wcrtomb@plt+0x279c>
  4051ec:	ldp	x29, x30, [sp], #16
  4051f0:	ret
  4051f4:	stp	x29, x30, [sp, #-16]!
  4051f8:	mov	x29, sp
  4051fc:	bl	402600 <putchar_unlocked@plt>
  405200:	tbz	w0, #31, 40520c <wcrtomb@plt+0x27fc>
  405204:	ldp	x29, x30, [sp], #16
  405208:	b	4051ac <wcrtomb@plt+0x279c>
  40520c:	ldp	x29, x30, [sp], #16
  405210:	ret
  405214:	stp	x29, x30, [sp, #-16]!
  405218:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40521c:	mov	x29, sp
  405220:	ldr	x0, [x0, #1128]
  405224:	bl	402800 <fflush_unlocked@plt>
  405228:	cbz	w0, 405234 <wcrtomb@plt+0x2824>
  40522c:	ldp	x29, x30, [sp], #16
  405230:	b	4051ac <wcrtomb@plt+0x279c>
  405234:	ldp	x29, x30, [sp], #16
  405238:	ret
  40523c:	stp	x29, x30, [sp, #-32]!
  405240:	mov	x29, sp
  405244:	str	x19, [sp, #16]
  405248:	mov	x19, x1
  40524c:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405250:	mov	x2, x19
  405254:	ldr	x3, [x1, #1128]
  405258:	mov	x1, #0x1                   	// #1
  40525c:	bl	4023b0 <fwrite_unlocked@plt>
  405260:	cmp	x19, x0
  405264:	b.eq	405274 <wcrtomb@plt+0x2864>  // b.none
  405268:	ldr	x19, [sp, #16]
  40526c:	ldp	x29, x30, [sp], #32
  405270:	b	4051ac <wcrtomb@plt+0x279c>
  405274:	ldr	x19, [sp, #16]
  405278:	ldp	x29, x30, [sp], #32
  40527c:	ret
  405280:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405284:	ldr	w1, [x1, #1160]
  405288:	cbz	w1, 4052a0 <wcrtomb@plt+0x2890>
  40528c:	ldrb	w0, [x0]
  405290:	cbz	w0, 4052a0 <wcrtomb@plt+0x2890>
  405294:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  405298:	ldr	x0, [x0, #912]
  40529c:	b	411644 <wcrtomb@plt+0xec34>
  4052a0:	ret
  4052a4:	stp	x29, x30, [sp, #-32]!
  4052a8:	mov	x29, sp
  4052ac:	str	x19, [sp, #16]
  4052b0:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  4052b4:	add	x19, x19, #0x378
  4052b8:	ldr	x0, [x19, #32]
  4052bc:	bl	405198 <wcrtomb@plt+0x2788>
  4052c0:	bl	404a7c <wcrtomb@plt+0x206c>
  4052c4:	bl	4051cc <wcrtomb@plt+0x27bc>
  4052c8:	ldr	x0, [x19, #32]
  4052cc:	ldr	x19, [sp, #16]
  4052d0:	ldp	x29, x30, [sp], #32
  4052d4:	b	405280 <wcrtomb@plt+0x2870>
  4052d8:	stp	x29, x30, [sp, #-32]!
  4052dc:	mov	x29, sp
  4052e0:	stp	x19, x20, [sp, #16]
  4052e4:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  4052e8:	add	x19, x19, #0x378
  4052ec:	and	w20, w0, #0xff
  4052f0:	ldr	x0, [x19, #40]
  4052f4:	bl	405198 <wcrtomb@plt+0x2788>
  4052f8:	mov	w0, w20
  4052fc:	bl	4051f4 <wcrtomb@plt+0x27e4>
  405300:	ldr	x0, [x19, #40]
  405304:	ldp	x19, x20, [sp, #16]
  405308:	ldp	x29, x30, [sp], #32
  40530c:	b	405280 <wcrtomb@plt+0x2870>
  405310:	stp	x29, x30, [sp, #-96]!
  405314:	mov	x29, sp
  405318:	stp	x19, x20, [sp, #16]
  40531c:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  405320:	add	x19, x19, #0x488
  405324:	stp	x21, x22, [sp, #32]
  405328:	mov	x21, x0
  40532c:	mov	x22, x1
  405330:	ldr	w0, [x19, #128]
  405334:	stp	x23, x24, [sp, #48]
  405338:	mov	x24, x2
  40533c:	and	w23, w3, #0xff
  405340:	stp	x25, x26, [sp, #64]
  405344:	cmp	w0, #0x1
  405348:	b.eq	405414 <wcrtomb@plt+0x2a04>  // b.none
  40534c:	ldr	x0, [x19, #136]
  405350:	cbz	x0, 405414 <wcrtomb@plt+0x2a04>
  405354:	add	x25, x21, x1
  405358:	mov	x20, x21
  40535c:	ldrb	w26, [x21, x1]
  405360:	mov	w0, #0xffffffff            	// #-1
  405364:	strb	w0, [x21, x1]
  405368:	str	xzr, [sp, #88]
  40536c:	ldr	x0, [x19, #136]
  405370:	tst	x20, #0x7
  405374:	b.ne	4053ac <wcrtomb@plt+0x299c>  // b.any
  405378:	ldr	x1, [x20]
  40537c:	tst	x0, x1
  405380:	b.ne	4053c4 <wcrtomb@plt+0x29b4>  // b.any
  405384:	add	x20, x20, #0x8
  405388:	b	405378 <wcrtomb@plt+0x2968>
  40538c:	add	x2, sp, #0x58
  405390:	sub	x1, x25, x20
  405394:	mov	x0, x20
  405398:	bl	413354 <wcrtomb@plt+0x10944>
  40539c:	cmn	x0, #0x3
  4053a0:	b.hi	40540c <wcrtomb@plt+0x29fc>  // b.pmore
  4053a4:	add	x20, x20, x0
  4053a8:	b	40536c <wcrtomb@plt+0x295c>
  4053ac:	ldrb	w1, [x20]
  4053b0:	tst	x1, x0
  4053b4:	b.ne	4053d0 <wcrtomb@plt+0x29c0>  // b.any
  4053b8:	add	x20, x20, #0x1
  4053bc:	b	405370 <wcrtomb@plt+0x2960>
  4053c0:	add	x20, x20, #0x1
  4053c4:	ldrb	w1, [x20]
  4053c8:	tst	x1, x0
  4053cc:	b.eq	4053c0 <wcrtomb@plt+0x29b0>  // b.none
  4053d0:	cmp	x25, x20
  4053d4:	b.hi	40538c <wcrtomb@plt+0x297c>  // b.pmore
  4053d8:	mov	w0, #0x0                   	// #0
  4053dc:	strb	w26, [x21, x22]
  4053e0:	cbz	w0, 405414 <wcrtomb@plt+0x2a04>
  4053e4:	mov	w0, #0x1                   	// #1
  4053e8:	mov	w20, #0x0                   	// #0
  4053ec:	strb	w0, [x19, #144]
  4053f0:	mov	w0, w20
  4053f4:	ldp	x19, x20, [sp, #16]
  4053f8:	ldp	x21, x22, [sp, #32]
  4053fc:	ldp	x23, x24, [sp, #48]
  405400:	ldp	x25, x26, [sp, #64]
  405404:	ldp	x29, x30, [sp], #96
  405408:	ret
  40540c:	mov	w0, #0x1                   	// #1
  405410:	b	4053dc <wcrtomb@plt+0x29cc>
  405414:	ldr	w0, [x19, #148]
  405418:	cbz	w0, 405430 <wcrtomb@plt+0x2a20>
  40541c:	bl	4052a4 <wcrtomb@plt+0x2894>
  405420:	ldr	w0, [x19, #152]
  405424:	cbz	w0, 405518 <wcrtomb@plt+0x2b08>
  405428:	mov	w0, w23
  40542c:	bl	4052d8 <wcrtomb@plt+0x28c8>
  405430:	ldrb	w0, [x19, #156]
  405434:	cbz	w0, 405494 <wcrtomb@plt+0x2a84>
  405438:	ldr	x0, [x19, #56]
  40543c:	cmp	x0, x24
  405440:	b.cs	40545c <wcrtomb@plt+0x2a4c>  // b.hs, b.nlast
  405444:	mov	x0, x21
  405448:	bl	404d64 <wcrtomb@plt+0x2354>
  40544c:	ldr	x0, [x19, #64]
  405450:	adds	x0, x0, #0x1
  405454:	b.cs	405524 <wcrtomb@plt+0x2b14>  // b.hs, b.nlast
  405458:	stp	x24, x0, [x19, #56]
  40545c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  405460:	ldr	x24, [x19, #64]
  405464:	ldr	x20, [x0, #936]
  405468:	mov	x0, x20
  40546c:	bl	405198 <wcrtomb@plt+0x2788>
  405470:	ldr	w1, [x19, #160]
  405474:	mov	x2, x24
  405478:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xa900>
  40547c:	add	x0, x0, #0x800
  405480:	bl	404ca0 <wcrtomb@plt+0x2290>
  405484:	mov	x0, x20
  405488:	bl	405280 <wcrtomb@plt+0x2870>
  40548c:	mov	w0, w23
  405490:	bl	4052d8 <wcrtomb@plt+0x28c8>
  405494:	ldrb	w0, [x19, #164]
  405498:	cbz	w0, 4054e4 <wcrtomb@plt+0x2ad4>
  40549c:	ldr	x2, [x19, #104]
  4054a0:	sub	x21, x21, x2
  4054a4:	ldr	x2, [x19, #168]
  4054a8:	adds	x21, x2, x21
  4054ac:	b.cs	405524 <wcrtomb@plt+0x2b14>  // b.hs, b.nlast
  4054b0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4054b4:	ldr	x20, [x0, #944]
  4054b8:	mov	x0, x20
  4054bc:	bl	405198 <wcrtomb@plt+0x2788>
  4054c0:	ldr	w1, [x19, #160]
  4054c4:	mov	x2, x21
  4054c8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xa900>
  4054cc:	add	x0, x0, #0x800
  4054d0:	bl	404ca0 <wcrtomb@plt+0x2290>
  4054d4:	mov	x0, x20
  4054d8:	bl	405280 <wcrtomb@plt+0x2870>
  4054dc:	mov	w0, w23
  4054e0:	bl	4052d8 <wcrtomb@plt+0x28c8>
  4054e4:	ldrb	w20, [x19, #176]
  4054e8:	cbz	w20, 405528 <wcrtomb@plt+0x2b18>
  4054ec:	ldrb	w1, [x19, #164]
  4054f0:	ldrb	w0, [x19, #156]
  4054f4:	orr	w0, w0, w1
  4054f8:	ldr	w1, [x19, #148]
  4054fc:	and	w0, w0, #0xff
  405500:	orr	w0, w0, w1
  405504:	cbz	w0, 4053f0 <wcrtomb@plt+0x29e0>
  405508:	cbz	x22, 4053f0 <wcrtomb@plt+0x29e0>
  40550c:	mov	w0, #0x9                   	// #9
  405510:	bl	4051f4 <wcrtomb@plt+0x27e4>
  405514:	b	4053f0 <wcrtomb@plt+0x29e0>
  405518:	mov	w0, #0x0                   	// #0
  40551c:	bl	4051f4 <wcrtomb@plt+0x27e4>
  405520:	b	405430 <wcrtomb@plt+0x2a20>
  405524:	bl	404d38 <wcrtomb@plt+0x2328>
  405528:	mov	w20, #0x1                   	// #1
  40552c:	b	4053f0 <wcrtomb@plt+0x29e0>
  405530:	stp	x29, x30, [sp, #-112]!
  405534:	mov	x29, sp
  405538:	stp	x19, x20, [sp, #16]
  40553c:	mov	x20, x1
  405540:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405544:	stp	x21, x22, [sp, #32]
  405548:	add	x21, x1, #0x488
  40554c:	mov	x19, x0
  405550:	stp	x23, x24, [sp, #48]
  405554:	and	w23, w2, #0xff
  405558:	ldrb	w2, [x21, #177]
  40555c:	stp	x25, x26, [sp, #64]
  405560:	mov	x22, x1
  405564:	stp	x27, x28, [sp, #80]
  405568:	cbz	w2, 40569c <wcrtomb@plt+0x2c8c>
  40556c:	ldr	w3, [x22, #1160]
  405570:	cmp	w23, #0x3a
  405574:	ldrb	w1, [x21, #178]
  405578:	cset	w2, eq  // eq = none
  40557c:	cbnz	w3, 4056d4 <wcrtomb@plt+0x2cc4>
  405580:	mov	x25, #0x0                   	// #0
  405584:	mov	x24, #0x0                   	// #0
  405588:	ldrb	w0, [x21, #177]
  40558c:	cbz	w0, 405598 <wcrtomb@plt+0x2b88>
  405590:	cmp	w2, w1
  405594:	b.ne	405804 <wcrtomb@plt+0x2df4>  // b.any
  405598:	cbz	w3, 405648 <wcrtomb@plt+0x2c38>
  40559c:	ldrb	w3, [x24]
  4055a0:	cbnz	w3, 4055ac <wcrtomb@plt+0x2b9c>
  4055a4:	ldrb	w3, [x25]
  4055a8:	cbz	w3, 405648 <wcrtomb@plt+0x2c38>
  4055ac:	cmp	w2, w1
  4055b0:	b.eq	4055c0 <wcrtomb@plt+0x2bb0>  // b.none
  4055b4:	cbnz	w0, 405804 <wcrtomb@plt+0x2df4>
  4055b8:	ldrb	w0, [x25]
  4055bc:	cbnz	w0, 405804 <wcrtomb@plt+0x2df4>
  4055c0:	ldrb	w0, [x21, #177]
  4055c4:	cbnz	w0, 405648 <wcrtomb@plt+0x2c38>
  4055c8:	ldrb	w0, [x24]
  4055cc:	cbz	w0, 405648 <wcrtomb@plt+0x2c38>
  4055d0:	cmp	x19, x20
  4055d4:	b.cs	405824 <wcrtomb@plt+0x2e14>  // b.hs, b.nlast
  4055d8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4055dc:	ldurb	w1, [x20, #-1]
  4055e0:	ldrb	w0, [x0, #2276]
  4055e4:	cmp	w1, w0
  4055e8:	cset	w0, eq  // eq = none
  4055ec:	sxtw	x1, w0
  4055f0:	sub	x0, x20, w0, sxtw
  4055f4:	cmp	x19, x0
  4055f8:	b.cs	40582c <wcrtomb@plt+0x2e1c>  // b.hs, b.nlast
  4055fc:	mvn	x0, x1
  405600:	ldrb	w0, [x20, x0]
  405604:	cmp	w0, #0xd
  405608:	cset	w22, eq  // eq = none
  40560c:	add	x22, x1, w22, sxtw
  405610:	sub	x22, x20, x22
  405614:	subs	x23, x22, x19
  405618:	b.eq	405648 <wcrtomb@plt+0x2c38>  // b.none
  40561c:	mov	x0, x24
  405620:	bl	40517c <wcrtomb@plt+0x276c>
  405624:	mov	x0, x19
  405628:	mov	x1, x23
  40562c:	bl	40523c <wcrtomb@plt+0x282c>
  405630:	ldrb	w0, [x24]
  405634:	cbz	w0, 405644 <wcrtomb@plt+0x2c34>
  405638:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40563c:	ldr	x0, [x0, #912]
  405640:	bl	411644 <wcrtomb@plt+0xec34>
  405644:	mov	x19, x22
  405648:	ldrb	w0, [x21, #177]
  40564c:	cbnz	w0, 405664 <wcrtomb@plt+0x2c54>
  405650:	cmp	x19, x20
  405654:	b.cs	405664 <wcrtomb@plt+0x2c54>  // b.hs, b.nlast
  405658:	sub	x1, x20, x19
  40565c:	mov	x0, x19
  405660:	bl	40523c <wcrtomb@plt+0x282c>
  405664:	ldrb	w0, [x21, #200]
  405668:	cbz	w0, 405670 <wcrtomb@plt+0x2c60>
  40566c:	bl	405214 <wcrtomb@plt+0x2804>
  405670:	ldr	w19, [x21, #20]
  405674:	cbz	w19, 405834 <wcrtomb@plt+0x2e24>
  405678:	mov	w2, #0x5                   	// #5
  40567c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  405680:	mov	x0, #0x0                   	// #0
  405684:	add	x1, x1, #0x805
  405688:	bl	4028e0 <dcgettext@plt>
  40568c:	mov	x2, x0
  405690:	mov	w1, w19
  405694:	mov	w0, #0x2                   	// #2
  405698:	bl	4023f0 <error@plt>
  40569c:	sub	x1, x20, x0
  4056a0:	mov	w3, w23
  4056a4:	mov	x2, x20
  4056a8:	sub	x1, x1, #0x1
  4056ac:	bl	405310 <wcrtomb@plt+0x2900>
  4056b0:	tst	w0, #0xff
  4056b4:	b.ne	40556c <wcrtomb@plt+0x2b5c>  // b.any
  4056b8:	ldp	x19, x20, [sp, #16]
  4056bc:	ldp	x21, x22, [sp, #32]
  4056c0:	ldp	x23, x24, [sp, #48]
  4056c4:	ldp	x25, x26, [sp, #64]
  4056c8:	ldp	x27, x28, [sp, #80]
  4056cc:	ldp	x29, x30, [sp], #112
  4056d0:	ret
  4056d4:	cmp	w1, #0x0
  4056d8:	lsr	w0, w3, #31
  4056dc:	csel	w0, w0, wzr, ne  // ne = any
  4056e0:	adrp	x4, 437000 <_obstack_memory_used@@Base+0x23900>
  4056e4:	cmp	w2, w0
  4056e8:	add	x0, x4, #0x378
  4056ec:	b.eq	405704 <wcrtomb@plt+0x2cf4>  // b.none
  4056f0:	ldr	x24, [x0, #64]
  4056f4:	cmp	w23, #0x3a
  4056f8:	b.ne	40570c <wcrtomb@plt+0x2cfc>  // b.any
  4056fc:	ldr	x25, [x0, #8]
  405700:	b	405588 <wcrtomb@plt+0x2b78>
  405704:	ldr	x24, [x0, #72]
  405708:	b	4056f4 <wcrtomb@plt+0x2ce4>
  40570c:	ldr	x25, [x4, #888]
  405710:	b	405588 <wcrtomb@plt+0x2b78>
  405714:	ldr	x1, [sp, #104]
  405718:	cbnz	x1, 405780 <wcrtomb@plt+0x2d70>
  40571c:	cmp	x28, #0x0
  405720:	mov	x0, #0x1                   	// #1
  405724:	csel	x28, x28, x22, ne  // ne = any
  405728:	str	x0, [sp, #104]
  40572c:	ldr	x22, [sp, #104]
  405730:	add	x22, x23, x22
  405734:	cmp	x20, x22
  405738:	b.ls	405768 <wcrtomb@plt+0x2d58>  // b.plast
  40573c:	ldp	x0, x6, [x21, #184]
  405740:	mov	x4, x22
  405744:	add	x3, sp, #0x68
  405748:	mov	x2, x27
  40574c:	mov	x1, x19
  405750:	blr	x6
  405754:	cmn	x0, #0x1
  405758:	b.eq	405768 <wcrtomb@plt+0x2d58>  // b.none
  40575c:	add	x23, x19, x0
  405760:	cmp	x20, x23
  405764:	b.ne	405714 <wcrtomb@plt+0x2d04>  // b.any
  405768:	ldrb	w0, [x21, #177]
  40576c:	cbnz	w0, 40581c <wcrtomb@plt+0x2e0c>
  405770:	cbnz	x28, 40583c <wcrtomb@plt+0x2e2c>
  405774:	mov	x19, x22
  405778:	cbnz	x19, 4055c0 <wcrtomb@plt+0x2bb0>
  40577c:	b	4056b8 <wcrtomb@plt+0x2ca8>
  405780:	ldrb	w0, [x21, #177]
  405784:	cbz	w0, 4057e0 <wcrtomb@plt+0x2dd0>
  405788:	ldrb	w0, [x21, #178]
  40578c:	mov	x2, x20
  405790:	mov	w3, #0x3a                  	// #58
  405794:	cmp	w0, #0x0
  405798:	mov	w0, #0x2d                  	// #45
  40579c:	csel	w3, w0, w3, ne  // ne = any
  4057a0:	mov	x0, x23
  4057a4:	bl	405310 <wcrtomb@plt+0x2900>
  4057a8:	tst	w0, #0xff
  4057ac:	b.eq	4056b8 <wcrtomb@plt+0x2ca8>  // b.none
  4057b0:	mov	x0, x25
  4057b4:	bl	405198 <wcrtomb@plt+0x2788>
  4057b8:	ldr	x1, [sp, #104]
  4057bc:	mov	x0, x23
  4057c0:	bl	40523c <wcrtomb@plt+0x282c>
  4057c4:	mov	x0, x25
  4057c8:	bl	405280 <wcrtomb@plt+0x2870>
  4057cc:	ldrb	w0, [x21, #177]
  4057d0:	cbz	w0, 40572c <wcrtomb@plt+0x2d1c>
  4057d4:	ldrb	w0, [x26]
  4057d8:	bl	4051f4 <wcrtomb@plt+0x27e4>
  4057dc:	b	40572c <wcrtomb@plt+0x2d1c>
  4057e0:	mov	x0, x24
  4057e4:	bl	40517c <wcrtomb@plt+0x276c>
  4057e8:	cmp	x28, #0x0
  4057ec:	csel	x22, x22, x28, eq  // eq = none
  4057f0:	mov	x28, #0x0                   	// #0
  4057f4:	sub	x1, x23, x22
  4057f8:	mov	x0, x22
  4057fc:	bl	40523c <wcrtomb@plt+0x282c>
  405800:	b	4057b0 <wcrtomb@plt+0x2da0>
  405804:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  405808:	mov	x22, x19
  40580c:	sub	x27, x20, x19
  405810:	add	x26, x26, #0x8e4
  405814:	mov	x28, #0x0                   	// #0
  405818:	b	405734 <wcrtomb@plt+0x2d24>
  40581c:	mov	x19, x20
  405820:	b	405778 <wcrtomb@plt+0x2d68>
  405824:	mov	w0, #0x0                   	// #0
  405828:	b	4055ec <wcrtomb@plt+0x2bdc>
  40582c:	mov	w22, #0x0                   	// #0
  405830:	b	40560c <wcrtomb@plt+0x2bfc>
  405834:	str	x20, [x21, #208]
  405838:	b	4056b8 <wcrtomb@plt+0x2ca8>
  40583c:	mov	x19, x28
  405840:	b	4055c0 <wcrtomb@plt+0x2bb0>
  405844:	stp	x29, x30, [sp, #-48]!
  405848:	mov	x29, sp
  40584c:	stp	x19, x20, [sp, #16]
  405850:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  405854:	add	x19, x19, #0x488
  405858:	mov	x20, x0
  40585c:	stp	x21, x22, [sp, #32]
  405860:	ldr	x0, [x19, #208]
  405864:	cbnz	x0, 405870 <wcrtomb@plt+0x2e60>
  405868:	ldr	x0, [x19, #104]
  40586c:	str	x0, [x19, #208]
  405870:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  405874:	add	x22, x22, #0x8e4
  405878:	ldr	x0, [x19, #216]
  40587c:	cmp	x0, #0x0
  405880:	b.le	405890 <wcrtomb@plt+0x2e80>
  405884:	ldr	x21, [x19, #208]
  405888:	cmp	x21, x20
  40588c:	b.cc	4058a0 <wcrtomb@plt+0x2e90>  // b.lo, b.ul, b.last
  405890:	ldp	x19, x20, [sp, #16]
  405894:	ldp	x21, x22, [sp, #32]
  405898:	ldp	x29, x30, [sp], #48
  40589c:	ret
  4058a0:	ldrb	w1, [x22]
  4058a4:	sub	x2, x20, x21
  4058a8:	mov	x0, x21
  4058ac:	bl	402860 <memchr@plt>
  4058b0:	add	x1, x0, #0x1
  4058b4:	mov	w2, #0x2d                  	// #45
  4058b8:	mov	x0, x21
  4058bc:	bl	405530 <wcrtomb@plt+0x2b20>
  4058c0:	ldr	x0, [x19, #216]
  4058c4:	sub	x0, x0, #0x1
  4058c8:	str	x0, [x19, #216]
  4058cc:	b	405878 <wcrtomb@plt+0x2e68>
  4058d0:	stp	x29, x30, [sp, #-128]!
  4058d4:	mov	x29, sp
  4058d8:	stp	x19, x20, [sp, #16]
  4058dc:	adrp	x19, 437000 <_obstack_memory_used@@Base+0x23900>
  4058e0:	add	x19, x19, #0x488
  4058e4:	stp	x27, x28, [sp, #80]
  4058e8:	mov	x20, x0
  4058ec:	ldr	x27, [x19, #224]
  4058f0:	stp	x21, x22, [sp, #32]
  4058f4:	adrp	x22, 437000 <_obstack_memory_used@@Base+0x23900>
  4058f8:	add	x22, x22, #0x378
  4058fc:	stp	x23, x24, [sp, #48]
  405900:	mov	x24, x1
  405904:	stp	x25, x26, [sp, #64]
  405908:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40590c:	add	x26, x26, #0x8e4
  405910:	cmp	x20, x24
  405914:	b.cc	40593c <wcrtomb@plt+0x2f2c>  // b.lo, b.ul, b.last
  405918:	ldr	x0, [x19, #224]
  40591c:	ldp	x19, x20, [sp, #16]
  405920:	sub	x0, x27, x0
  405924:	ldp	x21, x22, [sp, #32]
  405928:	ldp	x23, x24, [sp, #48]
  40592c:	ldp	x25, x26, [sp, #64]
  405930:	ldp	x27, x28, [sp, #80]
  405934:	ldp	x29, x30, [sp], #128
  405938:	ret
  40593c:	ldp	x0, x5, [x19, #184]
  405940:	sub	x21, x24, x20
  405944:	add	x3, sp, #0x78
  405948:	mov	x2, x21
  40594c:	mov	x1, x20
  405950:	mov	x4, #0x0                   	// #0
  405954:	blr	x5
  405958:	cmn	x0, #0x1
  40595c:	b.ne	405970 <wcrtomb@plt+0x2f60>  // b.any
  405960:	ldrb	w0, [x19, #178]
  405964:	cbz	w0, 405918 <wcrtomb@plt+0x2f08>
  405968:	mov	x0, x21
  40596c:	str	xzr, [sp, #120]
  405970:	add	x21, x20, x0
  405974:	ldrb	w0, [x19, #178]
  405978:	ldr	x25, [sp, #120]
  40597c:	add	x25, x21, x25
  405980:	cbnz	w0, 405a40 <wcrtomb@plt+0x3030>
  405984:	cmp	x24, x21
  405988:	b.eq	405918 <wcrtomb@plt+0x2f08>  // b.none
  40598c:	mov	x23, x25
  405990:	ldrb	w0, [x19, #232]
  405994:	ldrb	w28, [x26]
  405998:	cbnz	w0, 405a64 <wcrtomb@plt+0x3054>
  40599c:	ldr	x0, [x19, #216]
  4059a0:	cmp	x0, #0x0
  4059a4:	b.gt	405a54 <wcrtomb@plt+0x3044>
  4059a8:	ldr	x0, [x19, #208]
  4059ac:	cbnz	x0, 405a6c <wcrtomb@plt+0x305c>
  4059b0:	ldr	x3, [x19, #104]
  4059b4:	mov	x20, x21
  4059b8:	ldr	x2, [x19, #240]
  4059bc:	mov	x1, #0x0                   	// #0
  4059c0:	cmp	x1, x2
  4059c4:	b.lt	405a74 <wcrtomb@plt+0x3064>  // b.tstop
  4059c8:	tbz	x2, #63, 4059d4 <wcrtomb@plt+0x2fc4>
  4059cc:	ldr	x1, [x19, #248]
  4059d0:	tbnz	x1, #63, 405a0c <wcrtomb@plt+0x2ffc>
  4059d4:	ldrb	w1, [x19, #256]
  4059d8:	cbz	w1, 405a0c <wcrtomb@plt+0x2ffc>
  4059dc:	cmp	x0, x20
  4059e0:	b.eq	405a0c <wcrtomb@plt+0x2ffc>  // b.none
  4059e4:	ldr	x0, [x22, #80]
  4059e8:	cbz	x0, 405a0c <wcrtomb@plt+0x2ffc>
  4059ec:	ldr	x0, [x22, #40]
  4059f0:	bl	405198 <wcrtomb@plt+0x2788>
  4059f4:	ldr	x0, [x22, #80]
  4059f8:	bl	4051cc <wcrtomb@plt+0x27bc>
  4059fc:	ldr	x0, [x22, #40]
  405a00:	bl	405280 <wcrtomb@plt+0x2870>
  405a04:	mov	w0, #0xa                   	// #10
  405a08:	bl	4051f4 <wcrtomb@plt+0x27e4>
  405a0c:	cmp	x20, x21
  405a10:	b.cc	405a94 <wcrtomb@plt+0x3084>  // b.lo, b.ul, b.last
  405a14:	ldrb	w0, [x19, #178]
  405a18:	cbnz	w0, 405b80 <wcrtomb@plt+0x3170>
  405a1c:	ldrb	w0, [x19, #232]
  405a20:	cbnz	w0, 405a34 <wcrtomb@plt+0x3024>
  405a24:	mov	x1, x23
  405a28:	mov	x0, x21
  405a2c:	mov	w2, #0x3a                  	// #58
  405a30:	bl	405530 <wcrtomb@plt+0x2b20>
  405a34:	mov	x20, x23
  405a38:	mov	x21, #0x1                   	// #1
  405a3c:	b	405b18 <wcrtomb@plt+0x3108>
  405a40:	cmp	x20, x21
  405a44:	b.cs	405b98 <wcrtomb@plt+0x3188>  // b.hs, b.nlast
  405a48:	mov	x23, x21
  405a4c:	mov	x21, x20
  405a50:	b	405990 <wcrtomb@plt+0x2f80>
  405a54:	mov	x0, x21
  405a58:	bl	405844 <wcrtomb@plt+0x2e34>
  405a5c:	ldrb	w0, [x19, #232]
  405a60:	cbz	w0, 4059a8 <wcrtomb@plt+0x2f98>
  405a64:	mov	x20, x21
  405a68:	b	405a14 <wcrtomb@plt+0x3004>
  405a6c:	mov	x3, x0
  405a70:	b	4059b4 <wcrtomb@plt+0x2fa4>
  405a74:	cmp	x20, x3
  405a78:	b.ls	405a8c <wcrtomb@plt+0x307c>  // b.plast
  405a7c:	ldurb	w4, [x20, #-2]
  405a80:	sub	x20, x20, #0x1
  405a84:	cmp	w4, w28
  405a88:	b.ne	405a7c <wcrtomb@plt+0x306c>  // b.any
  405a8c:	add	x1, x1, #0x1
  405a90:	b	4059c0 <wcrtomb@plt+0x2fb0>
  405a94:	sub	x2, x21, x20
  405a98:	mov	w1, w28
  405a9c:	mov	x0, x20
  405aa0:	bl	402860 <memchr@plt>
  405aa4:	mov	w2, #0x2d                  	// #45
  405aa8:	add	x1, x0, #0x1
  405aac:	mov	x0, x20
  405ab0:	str	x1, [sp, #104]
  405ab4:	bl	405530 <wcrtomb@plt+0x2b20>
  405ab8:	ldr	x1, [sp, #104]
  405abc:	mov	x20, x1
  405ac0:	b	405a0c <wcrtomb@plt+0x2ffc>
  405ac4:	mov	w1, w28
  405ac8:	sub	x2, x23, x20
  405acc:	mov	x0, x20
  405ad0:	str	w3, [sp, #104]
  405ad4:	bl	402860 <memchr@plt>
  405ad8:	add	x1, x0, #0x1
  405adc:	ldr	w3, [sp, #104]
  405ae0:	cbnz	w3, 405af8 <wcrtomb@plt+0x30e8>
  405ae4:	mov	x0, x20
  405ae8:	mov	w2, #0x3a                  	// #58
  405aec:	str	x1, [sp, #104]
  405af0:	bl	405530 <wcrtomb@plt+0x2b20>
  405af4:	ldr	x1, [sp, #104]
  405af8:	add	x21, x21, #0x1
  405afc:	mov	x20, x1
  405b00:	ldrb	w3, [x19, #232]
  405b04:	cmp	x23, x20
  405b08:	ldr	x0, [x19, #224]
  405b0c:	b.ls	405b18 <wcrtomb@plt+0x3108>  // b.plast
  405b10:	cmp	x21, x0
  405b14:	b.lt	405ac4 <wcrtomb@plt+0x30b4>  // b.tstop
  405b18:	ldr	x0, [x19, #72]
  405b1c:	sub	x0, x0, x20
  405b20:	ldr	x20, [x19, #112]
  405b24:	sub	x20, x20, x0
  405b28:	ldrb	w0, [x19, #232]
  405b2c:	str	x20, [x19, #264]
  405b30:	cbnz	w0, 405b88 <wcrtomb@plt+0x3178>
  405b34:	ldr	x0, [x19, #248]
  405b38:	cmp	x0, #0x0
  405b3c:	csel	x0, x0, xzr, ge  // ge = tcont
  405b40:	str	x0, [x19, #216]
  405b44:	mov	w0, #0x1                   	// #1
  405b48:	strb	w0, [x19, #256]
  405b4c:	ldr	x0, [x19, #224]
  405b50:	sub	x21, x0, x21
  405b54:	str	x21, [x19, #224]
  405b58:	cbz	x21, 405b64 <wcrtomb@plt+0x3154>
  405b5c:	ldrb	w0, [x19, #272]
  405b60:	cbz	w0, 405b98 <wcrtomb@plt+0x3188>
  405b64:	ldrb	w0, [x19, #273]
  405b68:	cbz	w0, 405918 <wcrtomb@plt+0x2f08>
  405b6c:	ldrb	w0, [x19, #17]
  405b70:	cbz	w0, 405b90 <wcrtomb@plt+0x3180>
  405b74:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  405b78:	ldr	w0, [x0, #1000]
  405b7c:	bl	4023e0 <exit@plt>
  405b80:	mov	x21, #0x0                   	// #0
  405b84:	b	405b00 <wcrtomb@plt+0x30f0>
  405b88:	mov	x0, #0x0                   	// #0
  405b8c:	b	405b40 <wcrtomb@plt+0x3130>
  405b90:	mov	w0, #0x0                   	// #0
  405b94:	b	405b7c <wcrtomb@plt+0x316c>
  405b98:	mov	x20, x25
  405b9c:	b	405910 <wcrtomb@plt+0x2f00>
  405ba0:	stp	x29, x30, [sp, #-400]!
  405ba4:	mov	x29, sp
  405ba8:	stp	x19, x20, [sp, #16]
  405bac:	mov	w19, w0
  405bb0:	stp	x21, x22, [sp, #32]
  405bb4:	stp	x23, x24, [sp, #48]
  405bb8:	stp	x25, x26, [sp, #64]
  405bbc:	and	w25, w1, #0xff
  405bc0:	add	x1, sp, #0x90
  405bc4:	stp	x27, x28, [sp, #80]
  405bc8:	bl	41e650 <_obstack_memory_used@@Base+0xaf50>
  405bcc:	cbz	w0, 405c04 <wcrtomb@plt+0x31f4>
  405bd0:	bl	402980 <__errno_location@plt>
  405bd4:	ldr	w0, [x0]
  405bd8:	bl	404abc <wcrtomb@plt+0x20ac>
  405bdc:	mov	w22, #0x1                   	// #1
  405be0:	cbnz	w19, 405d14 <wcrtomb@plt+0x3304>
  405be4:	mov	w0, w22
  405be8:	ldp	x19, x20, [sp, #16]
  405bec:	ldp	x21, x22, [sp, #32]
  405bf0:	ldp	x23, x24, [sp, #48]
  405bf4:	ldp	x25, x26, [sp, #64]
  405bf8:	ldp	x27, x28, [sp, #80]
  405bfc:	ldp	x29, x30, [sp], #400
  405c00:	ret
  405c04:	mov	w20, w0
  405c08:	cbnz	w19, 405cf0 <wcrtomb@plt+0x32e0>
  405c0c:	adrp	x6, 437000 <_obstack_memory_used@@Base+0x23900>
  405c10:	add	x26, x6, #0x488
  405c14:	ldr	w0, [x26, #148]
  405c18:	tbz	w0, #31, 405c30 <wcrtomb@plt+0x3220>
  405c1c:	ldr	w0, [sp, #160]
  405c20:	and	w0, w0, #0xf000
  405c24:	cmp	w0, #0x4, lsl #12
  405c28:	cset	w0, eq  // eq = none
  405c2c:	str	w0, [x26, #148]
  405c30:	cbz	w19, 405fa4 <wcrtomb@plt+0x3594>
  405c34:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x23900>
  405c38:	add	x23, x23, #0x378
  405c3c:	ldr	w0, [x23, #88]
  405c40:	cmp	w0, #0x3
  405c44:	b.ne	405f68 <wcrtomb@plt+0x3558>  // b.any
  405c48:	ldr	w0, [sp, #160]
  405c4c:	and	w0, w0, #0xf000
  405c50:	cmp	w0, #0x4, lsl #12
  405c54:	b.ne	405f80 <wcrtomb@plt+0x3570>  // b.any
  405c58:	ldr	w0, [x23, #92]
  405c5c:	eor	w20, w25, #0xfffffffe
  405c60:	and	w20, w20, w0
  405c64:	mov	w0, w19
  405c68:	bl	402680 <close@plt>
  405c6c:	cbz	w0, 405c7c <wcrtomb@plt+0x326c>
  405c70:	bl	402980 <__errno_location@plt>
  405c74:	ldr	w0, [x0]
  405c78:	bl	404abc <wcrtomb@plt+0x20ac>
  405c7c:	ldr	x0, [x26, #8]
  405c80:	mov	w1, w20
  405c84:	mov	x2, #0x0                   	// #0
  405c88:	mov	w22, #0x1                   	// #1
  405c8c:	stp	x0, xzr, [sp, #128]
  405c90:	add	x0, sp, #0x80
  405c94:	bl	412838 <wcrtomb@plt+0xfe28>
  405c98:	mov	x20, x0
  405c9c:	cbz	x0, 405d8c <wcrtomb@plt+0x337c>
  405ca0:	adrp	x27, 41e000 <_obstack_memory_used@@Base+0xa900>
  405ca4:	add	x27, x27, #0x811
  405ca8:	adrp	x0, 41f000 <_obstack_memory_used@@Base+0xb900>
  405cac:	add	x0, x0, #0xaf8
  405cb0:	str	x0, [sp, #104]
  405cb4:	mov	x0, x20
  405cb8:	bl	412c14 <wcrtomb@plt+0x10204>
  405cbc:	mov	x19, x0
  405cc0:	cbnz	x0, 405d90 <wcrtomb@plt+0x3380>
  405cc4:	bl	402980 <__errno_location@plt>
  405cc8:	mov	x19, x0
  405ccc:	ldr	w0, [x0]
  405cd0:	cbz	w0, 405cd8 <wcrtomb@plt+0x32c8>
  405cd4:	bl	404abc <wcrtomb@plt+0x20ac>
  405cd8:	mov	x0, x20
  405cdc:	bl	412b20 <wcrtomb@plt+0x10110>
  405ce0:	cbz	w0, 405be4 <wcrtomb@plt+0x31d4>
  405ce4:	ldr	w0, [x19]
  405ce8:	bl	404abc <wcrtomb@plt+0x20ac>
  405cec:	b	405be4 <wcrtomb@plt+0x31d4>
  405cf0:	mov	w0, w25
  405cf4:	bl	404990 <wcrtomb@plt+0x1f80>
  405cf8:	tst	w0, #0xff
  405cfc:	b.eq	405d24 <wcrtomb@plt+0x3314>  // b.none
  405d00:	ldr	w0, [sp, #160]
  405d04:	bl	404960 <wcrtomb@plt+0x1f50>
  405d08:	tst	w0, #0xff
  405d0c:	b.eq	405d24 <wcrtomb@plt+0x3314>  // b.none
  405d10:	mov	w22, #0x1                   	// #1
  405d14:	mov	w0, w19
  405d18:	bl	402680 <close@plt>
  405d1c:	cbz	w0, 405be4 <wcrtomb@plt+0x31d4>
  405d20:	b	406608 <wcrtomb@plt+0x3bf8>
  405d24:	cbz	w25, 405c0c <wcrtomb@plt+0x31fc>
  405d28:	ldr	w0, [sp, #160]
  405d2c:	and	w0, w0, #0xf000
  405d30:	cmp	w0, #0x4, lsl #12
  405d34:	b.ne	405d7c <wcrtomb@plt+0x336c>  // b.any
  405d38:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  405d3c:	ldr	w0, [x0, #976]
  405d40:	cmp	w0, #0x4
  405d44:	b.eq	405d10 <wcrtomb@plt+0x3300>  // b.none
  405d48:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405d4c:	add	x1, x1, #0x488
  405d50:	ldrb	w0, [x1, #312]
  405d54:	cbnz	w0, 405c0c <wcrtomb@plt+0x31fc>
  405d58:	add	x1, x1, #0x128
  405d5c:	ldr	x0, [x1, #8]
  405d60:	cbz	x0, 405c0c <wcrtomb@plt+0x31fc>
  405d64:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405d68:	ldr	x1, [x1, #1168]
  405d6c:	bl	40ddc4 <wcrtomb@plt+0xb3b4>
  405d70:	tst	w0, #0xff
  405d74:	b.ne	405d10 <wcrtomb@plt+0x3300>  // b.any
  405d78:	b	405c0c <wcrtomb@plt+0x31fc>
  405d7c:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  405d80:	add	x1, x1, #0x488
  405d84:	add	x1, x1, #0x118
  405d88:	b	405d5c <wcrtomb@plt+0x334c>
  405d8c:	bl	411200 <wcrtomb@plt+0xe7f0>
  405d90:	ldr	x0, [x19, #88]
  405d94:	cmp	x0, #0x0
  405d98:	ldrh	w0, [x19, #108]
  405d9c:	cset	w24, eq  // eq = none
  405da0:	and	w24, w25, w24
  405da4:	cmp	w0, #0x6
  405da8:	b.ne	405db4 <wcrtomb@plt+0x33a4>  // b.any
  405dac:	mov	w28, #0x1                   	// #1
  405db0:	b	405f44 <wcrtomb@plt+0x3534>
  405db4:	cbnz	w24, 405de4 <wcrtomb@plt+0x33d4>
  405db8:	sub	w1, w0, #0x1
  405dbc:	and	w1, w1, #0xffff
  405dc0:	cmp	w1, #0x1
  405dc4:	ccmp	w0, #0x4, #0x4, hi  // hi = pmore
  405dc8:	b.eq	405e38 <wcrtomb@plt+0x3428>  // b.none
  405dcc:	ldr	x0, [x26, #280]
  405dd0:	cbz	x0, 405de4 <wcrtomb@plt+0x33d4>
  405dd4:	add	x1, x19, #0xf8
  405dd8:	bl	40ddc4 <wcrtomb@plt+0xb3b4>
  405ddc:	tst	w0, #0xff
  405de0:	b.ne	405e44 <wcrtomb@plt+0x3434>  // b.any
  405de4:	ldrb	w1, [x26, #312]
  405de8:	ldr	x0, [x19, #56]
  405dec:	str	x0, [x26, #8]
  405df0:	cbz	w1, 405e04 <wcrtomb@plt+0x33f4>
  405df4:	ldrb	w1, [x0, #1]
  405df8:	cbz	w1, 405e04 <wcrtomb@plt+0x33f4>
  405dfc:	add	x0, x0, #0x2
  405e00:	str	x0, [x26, #8]
  405e04:	ldr	w21, [x20, #72]
  405e08:	tbnz	w21, #1, 405e60 <wcrtomb@plt+0x3450>
  405e0c:	ands	w21, w21, #0x1
  405e10:	csel	w21, w21, w24, eq  // eq = none
  405e14:	ldrh	w0, [x19, #108]
  405e18:	sub	w0, w0, #0x1
  405e1c:	cmp	w0, #0xd
  405e20:	b.hi	405f64 <wcrtomb@plt+0x3554>  // b.pmore
  405e24:	ldr	x1, [sp, #104]
  405e28:	ldrb	w0, [x1, w0, uxtw]
  405e2c:	adr	x1, 405e38 <wcrtomb@plt+0x3428>
  405e30:	add	x0, x1, w0, sxtb #2
  405e34:	br	x0
  405e38:	ldr	w0, [x23, #88]
  405e3c:	cmp	w0, #0x4
  405e40:	b.ne	405e58 <wcrtomb@plt+0x3448>  // b.any
  405e44:	mov	x1, x19
  405e48:	mov	x0, x20
  405e4c:	mov	w2, #0x4                   	// #4
  405e50:	bl	4131d4 <wcrtomb@plt+0x107c4>
  405e54:	b	405dac <wcrtomb@plt+0x339c>
  405e58:	ldr	x0, [x26, #296]
  405e5c:	b	405dd0 <wcrtomb@plt+0x33c0>
  405e60:	mov	w21, #0x1                   	// #1
  405e64:	b	405e14 <wcrtomb@plt+0x3404>
  405e68:	ldr	w0, [x23, #88]
  405e6c:	cmp	w0, #0x3
  405e70:	b.eq	405dac <wcrtomb@plt+0x339c>  // b.none
  405e74:	mov	x1, x19
  405e78:	mov	x0, x20
  405e7c:	mov	w2, #0x4                   	// #4
  405e80:	bl	4131d4 <wcrtomb@plt+0x107c4>
  405e84:	ldr	w0, [x20, #44]
  405e88:	mov	w3, w24
  405e8c:	ldr	x1, [x19, #48]
  405e90:	and	w2, w21, #0x1
  405e94:	bl	40669c <wcrtomb@plt+0x3c8c>
  405e98:	and	w28, w0, #0xff
  405e9c:	b	405f44 <wcrtomb@plt+0x3534>
  405ea0:	ldrb	w0, [x26, #16]
  405ea4:	cbnz	w0, 405dac <wcrtomb@plt+0x339c>
  405ea8:	mov	x1, x27
  405eac:	mov	w2, #0x5                   	// #5
  405eb0:	mov	x0, #0x0                   	// #0
  405eb4:	bl	4028e0 <dcgettext@plt>
  405eb8:	ldr	x21, [x26, #8]
  405ebc:	mov	x19, x0
  405ec0:	mov	w2, #0x5                   	// #5
  405ec4:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  405ec8:	mov	x0, #0x0                   	// #0
  405ecc:	add	x1, x1, #0x821
  405ed0:	bl	4028e0 <dcgettext@plt>
  405ed4:	mov	x4, x0
  405ed8:	mov	x3, x21
  405edc:	mov	x2, x19
  405ee0:	mov	w1, #0x0                   	// #0
  405ee4:	mov	w0, #0x0                   	// #0
  405ee8:	bl	4023f0 <error@plt>
  405eec:	b	405dac <wcrtomb@plt+0x339c>
  405ef0:	ldr	w0, [x19, #64]
  405ef4:	bl	404abc <wcrtomb@plt+0x20ac>
  405ef8:	b	405dac <wcrtomb@plt+0x339c>
  405efc:	mov	w0, w24
  405f00:	bl	404990 <wcrtomb@plt+0x1f80>
  405f04:	ands	w28, w0, #0xff
  405f08:	b.eq	405e84 <wcrtomb@plt+0x3474>  // b.none
  405f0c:	ldr	w1, [x19, #136]
  405f10:	add	x0, x19, #0x78
  405f14:	cbnz	w1, 405f50 <wcrtomb@plt+0x3540>
  405f18:	ldr	w0, [x20, #44]
  405f1c:	cmp	w21, #0x0
  405f20:	ldr	x1, [x19, #48]
  405f24:	cset	w3, eq  // eq = none
  405f28:	add	x2, sp, #0x110
  405f2c:	lsl	w3, w3, #8
  405f30:	bl	41e670 <_obstack_memory_used@@Base+0xaf70>
  405f34:	cbz	w0, 405f4c <wcrtomb@plt+0x353c>
  405f38:	bl	402980 <__errno_location@plt>
  405f3c:	ldr	w0, [x0]
  405f40:	bl	404abc <wcrtomb@plt+0x20ac>
  405f44:	and	w22, w22, w28
  405f48:	b	405cb4 <wcrtomb@plt+0x32a4>
  405f4c:	add	x0, sp, #0x110
  405f50:	ldr	w0, [x0, #16]
  405f54:	bl	404960 <wcrtomb@plt+0x1f50>
  405f58:	tst	w0, #0xff
  405f5c:	b.eq	405e84 <wcrtomb@plt+0x3474>  // b.none
  405f60:	b	405f44 <wcrtomb@plt+0x3534>
  405f64:	bl	4026f0 <abort@plt>
  405f68:	cmp	w0, #0x4
  405f6c:	b.ne	405f80 <wcrtomb@plt+0x3570>  // b.any
  405f70:	ldr	w0, [sp, #160]
  405f74:	and	w0, w0, #0xf000
  405f78:	cmp	w0, #0x4, lsl #12
  405f7c:	b.eq	405d10 <wcrtomb@plt+0x3300>  // b.none
  405f80:	ldr	w0, [x26, #4]
  405f84:	cmp	w0, #0x2
  405f88:	b.eq	405f94 <wcrtomb@plt+0x3584>  // b.none
  405f8c:	cbnz	w0, 405fa4 <wcrtomb@plt+0x3594>
  405f90:	cbnz	w25, 405fa4 <wcrtomb@plt+0x3594>
  405f94:	ldr	w0, [sp, #160]
  405f98:	bl	404960 <wcrtomb@plt+0x1f50>
  405f9c:	tst	w0, #0xff
  405fa0:	b.ne	405d10 <wcrtomb@plt+0x3300>  // b.any
  405fa4:	ldrb	w0, [x26, #232]
  405fa8:	str	w0, [sp, #112]
  405fac:	cbnz	w0, 40603c <wcrtomb@plt+0x362c>
  405fb0:	ldr	w0, [x26, #316]
  405fb4:	cbnz	w0, 40603c <wcrtomb@plt+0x362c>
  405fb8:	ldr	x0, [x26, #320]
  405fbc:	cmp	x0, #0x1
  405fc0:	b.le	40603c <wcrtomb@plt+0x362c>
  405fc4:	ldr	w0, [sp, #160]
  405fc8:	and	w0, w0, #0xf000
  405fcc:	cmp	w0, #0x8, lsl #12
  405fd0:	b.ne	40603c <wcrtomb@plt+0x362c>  // b.any
  405fd4:	ldr	x1, [sp, #152]
  405fd8:	ldr	x0, [x26, #336]
  405fdc:	cmp	x1, x0
  405fe0:	b.ne	40603c <wcrtomb@plt+0x362c>  // b.any
  405fe4:	ldr	x1, [sp, #144]
  405fe8:	ldr	x0, [x26, #328]
  405fec:	cmp	x1, x0
  405ff0:	b.ne	40603c <wcrtomb@plt+0x362c>  // b.any
  405ff4:	ldrb	w0, [x26, #16]
  405ff8:	cbnz	w0, 406030 <wcrtomb@plt+0x3620>
  405ffc:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  406000:	add	x1, x1, #0x83a
  406004:	mov	w2, #0x5                   	// #5
  406008:	mov	x0, #0x0                   	// #0
  40600c:	bl	4028e0 <dcgettext@plt>
  406010:	mov	x20, x0
  406014:	bl	404a7c <wcrtomb@plt+0x206c>
  406018:	bl	410a80 <wcrtomb@plt+0xe070>
  40601c:	mov	x3, x0
  406020:	mov	x2, x20
  406024:	mov	w1, #0x0                   	// #0
  406028:	mov	w0, #0x0                   	// #0
  40602c:	bl	4023f0 <error@plt>
  406030:	mov	w0, #0x1                   	// #1
  406034:	strb	w0, [x26, #17]
  406038:	b	405bdc <wcrtomb@plt+0x31cc>
  40603c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406040:	ldr	x3, [x26, #80]
  406044:	ldrb	w22, [x0, #2276]
  406048:	ldrb	w0, [x26, #272]
  40604c:	add	x1, x3, #0x1
  406050:	str	w0, [sp, #116]
  406054:	ldr	x0, [x26, #96]
  406058:	udiv	x2, x1, x0
  40605c:	msub	x2, x2, x0, x1
  406060:	cbz	x2, 406070 <wcrtomb@plt+0x3660>
  406064:	add	x0, x0, #0x1
  406068:	sub	x0, x0, x2
  40606c:	add	x1, x3, x0
  406070:	sturb	w22, [x1, #-1]
  406074:	str	x1, [x26, #72]
  406078:	str	x1, [x26, #104]
  40607c:	str	w19, [x26, #120]
  406080:	cbnz	w19, 4060c8 <wcrtomb@plt+0x36b8>
  406084:	mov	w2, #0x1                   	// #1
  406088:	mov	x1, #0x0                   	// #0
  40608c:	mov	w0, #0x0                   	// #0
  406090:	bl	402480 <lseek@plt>
  406094:	lsr	x1, x0, #63
  406098:	str	x0, [x26, #112]
  40609c:	and	w1, w1, #0xff
  4060a0:	strb	w1, [x26, #125]
  4060a4:	strb	w1, [x26, #456]
  4060a8:	tbz	x0, #63, 4060d4 <wcrtomb@plt+0x36c4>
  4060ac:	bl	402980 <__errno_location@plt>
  4060b0:	ldr	w0, [x0]
  4060b4:	cmp	w0, #0x1d
  4060b8:	b.eq	4060d0 <wcrtomb@plt+0x36c0>  // b.none
  4060bc:	bl	404abc <wcrtomb@plt+0x20ac>
  4060c0:	mov	w21, #0x0                   	// #0
  4060c4:	b	406124 <wcrtomb@plt+0x3714>
  4060c8:	mov	x0, #0x0                   	// #0
  4060cc:	b	406094 <wcrtomb@plt+0x3684>
  4060d0:	str	xzr, [x26, #112]
  4060d4:	ldr	x0, [x26, #320]
  4060d8:	str	x0, [x26, #224]
  4060dc:	ldrb	w0, [x26, #457]
  4060e0:	str	xzr, [x26, #64]
  4060e4:	str	xzr, [x26, #168]
  4060e8:	stp	xzr, xzr, [x26, #208]
  4060ec:	str	xzr, [x26, #264]
  4060f0:	cbz	w0, 40612c <wcrtomb@plt+0x371c>
  4060f4:	cmp	w22, #0x0
  4060f8:	cset	w0, eq  // eq = none
  4060fc:	add	x1, sp, #0x90
  406100:	strb	w0, [x26, #124]
  406104:	mov	x0, #0x0                   	// #0
  406108:	strb	wzr, [x26, #144]
  40610c:	bl	404dd8 <wcrtomb@plt+0x23c8>
  406110:	ands	w21, w0, #0xff
  406114:	b.ne	406134 <wcrtomb@plt+0x3724>  // b.any
  406118:	bl	402980 <__errno_location@plt>
  40611c:	ldr	w0, [x0]
  406120:	bl	404abc <wcrtomb@plt+0x20ac>
  406124:	mov	x20, #0x0                   	// #0
  406128:	b	406320 <wcrtomb@plt+0x3910>
  40612c:	mov	w0, #0x0                   	// #0
  406130:	b	4060fc <wcrtomb@plt+0x36ec>
  406134:	ldrb	w0, [x26, #176]
  406138:	str	wzr, [x26, #160]
  40613c:	cbz	w0, 406184 <wcrtomb@plt+0x3774>
  406140:	ldr	w0, [sp, #160]
  406144:	and	w0, w0, #0xf000
  406148:	cmp	w0, #0x8, lsl #12
  40614c:	ldr	x0, [sp, #192]
  406150:	csinv	x1, x0, xzr, eq  // eq = none
  406154:	ldrb	w0, [x26, #156]
  406158:	cbz	w0, 406204 <wcrtomb@plt+0x37f4>
  40615c:	cmn	x1, #0x1
  406160:	cset	w0, ne  // ne = any
  406164:	add	x0, x1, w0, sxtw
  406168:	mov	x2, #0xa                   	// #10
  40616c:	mov	x1, x0
  406170:	add	w20, w20, #0x1
  406174:	udiv	x0, x0, x2
  406178:	cmp	x1, #0x9
  40617c:	b.hi	40616c <wcrtomb@plt+0x375c>  // b.pmore
  406180:	str	w20, [x26, #160]
  406184:	mov	w27, w21
  406188:	mov	x24, #0xffffffffffffffff    	// #-1
  40618c:	mov	w28, #0x0                   	// #0
  406190:	mov	x23, #0x0                   	// #0
  406194:	mov	x20, #0x0                   	// #0
  406198:	str	xzr, [sp, #104]
  40619c:	cmp	x24, #0x0
  4061a0:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
  4061a4:	b.eq	406294 <wcrtomb@plt+0x3884>  // b.none
  4061a8:	ldr	w0, [x26, #128]
  4061ac:	cmp	w0, #0x1
  4061b0:	b.eq	406294 <wcrtomb@plt+0x3884>  // b.none
  4061b4:	ldr	x2, [x26, #72]
  4061b8:	ldr	x0, [x26, #104]
  4061bc:	strb	wzr, [x2]
  4061c0:	sub	x25, x2, x0
  4061c4:	bl	4023c0 <strlen@plt>
  4061c8:	cmp	x25, x0
  4061cc:	b.eq	40620c <wcrtomb@plt+0x37fc>  // b.none
  4061d0:	ldr	w1, [x26, #128]
  4061d4:	ldrb	w0, [x26, #458]
  4061d8:	cmp	w1, #0x2
  4061dc:	b.eq	4060c0 <wcrtomb@plt+0x36b0>  // b.none
  4061e0:	cbnz	w0, 4061f0 <wcrtomb@plt+0x37e0>
  4061e4:	mov	w0, #0x1                   	// #1
  4061e8:	strb	w0, [x26, #232]
  4061ec:	strb	w0, [x26, #272]
  4061f0:	ldrb	w0, [x26, #457]
  4061f4:	mov	x24, x20
  4061f8:	mov	w28, w22
  4061fc:	strb	w0, [x26, #124]
  406200:	b	406294 <wcrtomb@plt+0x3884>
  406204:	mov	w0, #0x0                   	// #0
  406208:	b	406164 <wcrtomb@plt+0x3754>
  40620c:	cbz	w27, 406294 <wcrtomb@plt+0x3884>
  406210:	ldrb	w0, [x26, #456]
  406214:	cbnz	w0, 406294 <wcrtomb@plt+0x3884>
  406218:	ldr	w0, [sp, #160]
  40621c:	and	w0, w0, #0xf000
  406220:	cmp	w0, #0x8, lsl #12
  406224:	b.ne	406294 <wcrtomb@plt+0x3884>  // b.any
  406228:	ldr	x0, [sp, #192]
  40622c:	cmp	x25, x0
  406230:	b.cs	406294 <wcrtomb@plt+0x3884>  // b.hs, b.nlast
  406234:	cbnz	w19, 406250 <wcrtomb@plt+0x3840>
  406238:	mov	w2, #0x1                   	// #1
  40623c:	mov	x1, #0x0                   	// #0
  406240:	mov	w0, #0x0                   	// #0
  406244:	bl	402480 <lseek@plt>
  406248:	mov	x25, x0
  40624c:	tbnz	x0, #63, 406294 <wcrtomb@plt+0x3884>
  406250:	mov	x1, x25
  406254:	mov	w0, w19
  406258:	mov	w2, #0x4                   	// #4
  40625c:	bl	402480 <lseek@plt>
  406260:	mov	x27, x0
  406264:	tbnz	x0, #63, 406294 <wcrtomb@plt+0x3884>
  406268:	mov	x1, x25
  40626c:	mov	w0, w19
  406270:	mov	w2, #0x0                   	// #0
  406274:	bl	402480 <lseek@plt>
  406278:	tbz	x0, #63, 406288 <wcrtomb@plt+0x3878>
  40627c:	bl	402980 <__errno_location@plt>
  406280:	ldr	w0, [x0]
  406284:	bl	404abc <wcrtomb@plt+0x20ac>
  406288:	ldr	x0, [sp, #192]
  40628c:	cmp	x27, x0
  406290:	b.lt	4061d0 <wcrtomb@plt+0x37c0>  // b.tstop
  406294:	ldr	x1, [x26, #208]
  406298:	ldr	x0, [x26, #104]
  40629c:	str	x0, [x26, #56]
  4062a0:	cbz	x1, 4062a8 <wcrtomb@plt+0x3898>
  4062a4:	str	x0, [x26, #208]
  4062a8:	ldr	x25, [x26, #72]
  4062ac:	add	x3, x0, x23
  4062b0:	cmp	x3, x25
  4062b4:	b.ne	406408 <wcrtomb@plt+0x39f8>  // b.any
  4062b8:	ldr	x1, [sp, #104]
  4062bc:	cbnz	x1, 406594 <wcrtomb@plt+0x3b84>
  4062c0:	ldrb	w0, [sp, #116]
  4062c4:	strb	w0, [x26, #272]
  4062c8:	ldrb	w0, [sp, #112]
  4062cc:	strb	w0, [x26, #232]
  4062d0:	ldr	w0, [sp, #112]
  4062d4:	cbnz	w0, 406320 <wcrtomb@plt+0x3910>
  4062d8:	ldrb	w0, [x26, #144]
  4062dc:	cbnz	w0, 4062ec <wcrtomb@plt+0x38dc>
  4062e0:	cmp	x24, #0x0
  4062e4:	ccmp	x24, x20, #0x0, ge  // ge = tcont
  4062e8:	b.ge	406320 <wcrtomb@plt+0x3910>  // b.tcont
  4062ec:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  4062f0:	add	x1, x1, #0x85b
  4062f4:	mov	w2, #0x5                   	// #5
  4062f8:	mov	x0, #0x0                   	// #0
  4062fc:	bl	4028e0 <dcgettext@plt>
  406300:	mov	x22, x0
  406304:	bl	404a7c <wcrtomb@plt+0x206c>
  406308:	mov	x1, x0
  40630c:	mov	x0, x22
  406310:	bl	404ca0 <wcrtomb@plt+0x2290>
  406314:	ldrb	w0, [x26, #200]
  406318:	cbz	w0, 406320 <wcrtomb@plt+0x3910>
  40631c:	bl	405214 <wcrtomb@plt+0x2804>
  406320:	ldrb	w0, [x26, #458]
  406324:	cbz	w0, 406360 <wcrtomb@plt+0x3950>
  406328:	ldr	w0, [x26, #148]
  40632c:	cbz	w0, 406344 <wcrtomb@plt+0x3934>
  406330:	bl	4052a4 <wcrtomb@plt+0x2894>
  406334:	ldr	w0, [x26, #152]
  406338:	cbz	w0, 4065d0 <wcrtomb@plt+0x3bc0>
  40633c:	mov	w0, #0x3a                  	// #58
  406340:	bl	4052d8 <wcrtomb@plt+0x28c8>
  406344:	mov	x1, x20
  406348:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0xa900>
  40634c:	add	x0, x0, #0x873
  406350:	bl	404ca0 <wcrtomb@plt+0x2290>
  406354:	ldrb	w0, [x26, #200]
  406358:	cbz	w0, 406360 <wcrtomb@plt+0x3950>
  40635c:	bl	405214 <wcrtomb@plt+0x2804>
  406360:	ldr	w2, [x26, #316]
  406364:	cmp	x20, #0x0
  406368:	cset	w1, ne  // ne = any
  40636c:	cmp	w2, #0x2
  406370:	cset	w0, ne  // ne = any
  406374:	eor	w22, w1, w0
  406378:	cbz	w2, 406384 <wcrtomb@plt+0x3974>
  40637c:	ldrb	w2, [x26, #459]
  406380:	cbz	w2, 406670 <wcrtomb@plt+0x3c60>
  406384:	cbnz	w19, 405d14 <wcrtomb@plt+0x3304>
  406388:	ldr	x0, [x26, #224]
  40638c:	cbz	x0, 406648 <wcrtomb@plt+0x3c38>
  406390:	cbnz	w21, 406600 <wcrtomb@plt+0x3bf0>
  406394:	ldrb	w0, [x26, #456]
  406398:	cbz	w0, 4065dc <wcrtomb@plt+0x3bcc>
  40639c:	ldr	w0, [sp, #160]
  4063a0:	and	w0, w0, #0xf000
  4063a4:	cmp	w0, #0x1, lsl #12
  4063a8:	b.ne	4063e8 <wcrtomb@plt+0x39d8>  // b.any
  4063ac:	ldrb	w0, [x26, #459]
  4063b0:	cbz	w0, 4063e8 <wcrtomb@plt+0x39d8>
  4063b4:	mov	w5, #0x1                   	// #1
  4063b8:	mov	x4, #0x18000               	// #98304
  4063bc:	mov	w2, w5
  4063c0:	mov	x3, #0x0                   	// #0
  4063c4:	mov	x1, #0x0                   	// #0
  4063c8:	mov	w0, #0x0                   	// #0
  4063cc:	bl	402560 <splice@plt>
  4063d0:	mov	x20, x0
  4063d4:	tbz	x0, #63, 406634 <wcrtomb@plt+0x3c24>
  4063d8:	bl	402980 <__errno_location@plt>
  4063dc:	ldr	w0, [x0]
  4063e0:	cmp	w0, #0x16
  4063e4:	b.ne	40663c <wcrtomb@plt+0x3c2c>  // b.any
  4063e8:	ldp	x1, x2, [x26, #80]
  4063ec:	mov	w0, #0x0                   	// #0
  4063f0:	bl	410a8c <wcrtomb@plt+0xe07c>
  4063f4:	cbz	x0, 406600 <wcrtomb@plt+0x3bf0>
  4063f8:	cmn	x0, #0x1
  4063fc:	b.ne	4063e8 <wcrtomb@plt+0x39d8>  // b.any
  406400:	mov	w19, #0x1                   	// #1
  406404:	b	406600 <wcrtomb@plt+0x3bf0>
  406408:	cbz	w28, 406444 <wcrtomb@plt+0x3a34>
  40640c:	mov	x23, x3
  406410:	strb	wzr, [x25]
  406414:	mov	x0, x23
  406418:	str	x3, [sp, #120]
  40641c:	bl	4023c0 <strlen@plt>
  406420:	strb	w28, [x25]
  406424:	add	x23, x23, x0
  406428:	cmp	x25, x23
  40642c:	ldr	x3, [sp, #120]
  406430:	b.eq	406444 <wcrtomb@plt+0x3a34>  // b.none
  406434:	strb	w28, [x23], #1
  406438:	ldrb	w0, [x23]
  40643c:	cbz	w0, 406434 <wcrtomb@plt+0x3a24>
  406440:	b	406410 <wcrtomb@plt+0x3a00>
  406444:	ldurb	w23, [x3, #-1]
  406448:	sub	x2, x25, x3
  40644c:	sturb	w22, [x3, #-1]
  406450:	mov	w1, w22
  406454:	sub	x0, x3, #0x1
  406458:	add	x2, x2, #0x1
  40645c:	str	x3, [sp, #120]
  406460:	bl	4027e0 <memrchr@plt>
  406464:	add	x27, x0, #0x1
  406468:	ldr	x0, [sp, #104]
  40646c:	ldr	x3, [sp, #120]
  406470:	sub	x0, x3, x0
  406474:	cmp	x3, x27
  406478:	csel	x27, x27, x0, ne  // ne = any
  40647c:	sturb	w23, [x3, #-1]
  406480:	sub	x1, x25, x27
  406484:	str	x1, [sp, #104]
  406488:	cmp	x27, x0
  40648c:	b.ls	4064d8 <wcrtomb@plt+0x3ac8>  // b.plast
  406490:	ldr	x1, [x26, #224]
  406494:	cbz	x1, 4064a4 <wcrtomb@plt+0x3a94>
  406498:	mov	x1, x27
  40649c:	bl	4058d0 <wcrtomb@plt+0x2ec0>
  4064a0:	add	x20, x20, x0
  4064a4:	ldr	x0, [x26, #216]
  4064a8:	cbz	x0, 4064b4 <wcrtomb@plt+0x3aa4>
  4064ac:	mov	x0, x27
  4064b0:	bl	405844 <wcrtomb@plt+0x2e34>
  4064b4:	ldp	x1, x0, [x26, #216]
  4064b8:	orr	x0, x0, x1
  4064bc:	cbz	x0, 40658c <wcrtomb@plt+0x3b7c>
  4064c0:	ldrb	w0, [x26, #272]
  4064c4:	cbz	w0, 4064d8 <wcrtomb@plt+0x3ac8>
  4064c8:	cmp	x24, #0x0
  4064cc:	csel	x0, x24, xzr, ge  // ge = tcont
  4064d0:	cmp	x0, x20
  4064d4:	b.lt	40658c <wcrtomb@plt+0x3b7c>  // b.tstop
  4064d8:	ldr	x2, [x26, #104]
  4064dc:	mov	x1, #0x0                   	// #0
  4064e0:	ldr	x0, [x26, #208]
  4064e4:	ldr	x3, [x26, #240]
  4064e8:	cmp	x1, x3
  4064ec:	b.ge	406544 <wcrtomb@plt+0x3b34>  // b.tcont
  4064f0:	cmp	x2, x27
  4064f4:	b.cs	406544 <wcrtomb@plt+0x3b34>  // b.hs, b.nlast
  4064f8:	cmp	x27, x0
  4064fc:	b.ne	40652c <wcrtomb@plt+0x3b1c>  // b.any
  406500:	ldrb	w0, [x26, #164]
  406504:	sub	x23, x25, x27
  406508:	cbz	w0, 406558 <wcrtomb@plt+0x3b48>
  40650c:	ldr	x0, [x26, #72]
  406510:	ldr	x1, [x26, #168]
  406514:	sub	x0, x0, x2
  406518:	add	x0, x0, x1
  40651c:	sub	x0, x0, x23
  406520:	cmp	x1, x0
  406524:	b.ls	406554 <wcrtomb@plt+0x3b44>  // b.plast
  406528:	bl	404d38 <wcrtomb@plt+0x2328>
  40652c:	add	x1, x1, #0x1
  406530:	ldurb	w5, [x27, #-2]
  406534:	sub	x27, x27, #0x1
  406538:	cmp	w5, w22
  40653c:	b.ne	406530 <wcrtomb@plt+0x3b20>  // b.any
  406540:	b	4064e8 <wcrtomb@plt+0x3ad8>
  406544:	cmp	x27, x0
  406548:	b.eq	406500 <wcrtomb@plt+0x3af0>  // b.none
  40654c:	str	xzr, [x26, #208]
  406550:	b	406500 <wcrtomb@plt+0x3af0>
  406554:	str	x0, [x26, #168]
  406558:	ldrb	w0, [x26, #156]
  40655c:	cbz	w0, 406568 <wcrtomb@plt+0x3b58>
  406560:	mov	x0, x27
  406564:	bl	404d64 <wcrtomb@plt+0x2354>
  406568:	add	x1, sp, #0x90
  40656c:	mov	x0, x23
  406570:	mov	w27, #0x0                   	// #0
  406574:	bl	404dd8 <wcrtomb@plt+0x23c8>
  406578:	tst	w0, #0xff
  40657c:	b.ne	40619c <wcrtomb@plt+0x378c>  // b.any
  406580:	bl	402980 <__errno_location@plt>
  406584:	ldr	w0, [x0]
  406588:	bl	404abc <wcrtomb@plt+0x20ac>
  40658c:	mov	w21, #0x0                   	// #0
  406590:	b	4062c0 <wcrtomb@plt+0x38b0>
  406594:	ldr	x2, [x26, #224]
  406598:	add	x1, x3, #0x1
  40659c:	strb	w22, [x3]
  4065a0:	str	x1, [x26, #72]
  4065a4:	cbz	x2, 4065bc <wcrtomb@plt+0x3bac>
  4065a8:	ldr	x2, [sp, #104]
  4065ac:	sub	x23, x23, x2
  4065b0:	add	x0, x0, x23
  4065b4:	bl	4058d0 <wcrtomb@plt+0x2ec0>
  4065b8:	add	x20, x20, x0
  4065bc:	ldr	x0, [x26, #216]
  4065c0:	cbz	x0, 4062c0 <wcrtomb@plt+0x38b0>
  4065c4:	ldr	x0, [x26, #72]
  4065c8:	bl	405844 <wcrtomb@plt+0x2e34>
  4065cc:	b	4062c0 <wcrtomb@plt+0x38b0>
  4065d0:	mov	w0, #0x0                   	// #0
  4065d4:	bl	4051f4 <wcrtomb@plt+0x27e4>
  4065d8:	b	406344 <wcrtomb@plt+0x3934>
  4065dc:	mov	w2, #0x2                   	// #2
  4065e0:	mov	x1, #0x0                   	// #0
  4065e4:	mov	w0, #0x0                   	// #0
  4065e8:	bl	402480 <lseek@plt>
  4065ec:	tbz	x0, #63, 406600 <wcrtomb@plt+0x3bf0>
  4065f0:	bl	402980 <__errno_location@plt>
  4065f4:	ldr	w0, [x0]
  4065f8:	cmp	w0, #0x16
  4065fc:	b.ne	40639c <wcrtomb@plt+0x398c>  // b.any
  406600:	and	w19, w19, #0x1
  406604:	cbz	w19, 405be4 <wcrtomb@plt+0x31d4>
  406608:	bl	402980 <__errno_location@plt>
  40660c:	ldr	w0, [x0]
  406610:	b	405ce8 <wcrtomb@plt+0x32d8>
  406614:	mov	w5, #0x1                   	// #1
  406618:	mov	x4, #0x18000               	// #98304
  40661c:	mov	w2, w5
  406620:	mov	x3, #0x0                   	// #0
  406624:	mov	x1, #0x0                   	// #0
  406628:	mov	w0, #0x0                   	// #0
  40662c:	bl	402560 <splice@plt>
  406630:	mov	x20, x0
  406634:	cmp	x20, #0x0
  406638:	b.gt	406614 <wcrtomb@plt+0x3c04>
  40663c:	cmp	x20, #0x0
  406640:	cset	w19, ne  // ne = any
  406644:	b	406600 <wcrtomb@plt+0x3bf0>
  406648:	ldr	x0, [x26, #112]
  40664c:	ldr	x1, [x26, #264]
  406650:	cmp	x0, x1
  406654:	b.eq	406600 <wcrtomb@plt+0x3bf0>  // b.none
  406658:	ldrb	w0, [x26, #456]
  40665c:	cbnz	w0, 406600 <wcrtomb@plt+0x3bf0>
  406660:	mov	w2, #0x0                   	// #0
  406664:	bl	402480 <lseek@plt>
  406668:	lsr	x19, x0, #63
  40666c:	b	406600 <wcrtomb@plt+0x3bf0>
  406670:	cmp	w1, w0
  406674:	b.ne	405be0 <wcrtomb@plt+0x31d0>  // b.any
  406678:	bl	4052a4 <wcrtomb@plt+0x2894>
  40667c:	ldr	w1, [x26, #152]
  406680:	mov	w0, #0xa                   	// #10
  406684:	and	w0, w1, w0
  406688:	bl	4051f4 <wcrtomb@plt+0x27e4>
  40668c:	ldrb	w0, [x26, #200]
  406690:	cbz	w0, 405be0 <wcrtomb@plt+0x31d0>
  406694:	bl	405214 <wcrtomb@plt+0x2804>
  406698:	b	405be0 <wcrtomb@plt+0x31d0>
  40669c:	stp	x29, x30, [sp, #-32]!
  4066a0:	mov	w4, w0
  4066a4:	mov	x5, x1
  4066a8:	mov	x29, sp
  4066ac:	stp	x19, x20, [sp, #16]
  4066b0:	ands	w20, w2, #0xff
  4066b4:	mov	w0, #0x8100                	// #33024
  4066b8:	mov	w2, #0x100                 	// #256
  4066bc:	csel	w2, w2, w0, ne  // ne = any
  4066c0:	and	w19, w3, #0xff
  4066c4:	mov	w0, w19
  4066c8:	bl	404990 <wcrtomb@plt+0x1f80>
  4066cc:	tst	w0, #0xff
  4066d0:	cset	w0, ne  // ne = any
  4066d4:	mov	x1, x5
  4066d8:	orr	w2, w2, w0, lsl #11
  4066dc:	mov	w0, w4
  4066e0:	bl	40f58c <wcrtomb@plt+0xcb7c>
  4066e4:	tbz	w0, #31, 406720 <wcrtomb@plt+0x3d10>
  4066e8:	bl	402980 <__errno_location@plt>
  4066ec:	ldr	w0, [x0]
  4066f0:	cbnz	w20, 406708 <wcrtomb@plt+0x3cf8>
  4066f4:	cmp	w0, #0x28
  4066f8:	cset	w1, eq  // eq = none
  4066fc:	cmp	w0, #0x1f
  406700:	csinc	w1, w1, wzr, ne  // ne = any
  406704:	cbnz	w1, 406710 <wcrtomb@plt+0x3d00>
  406708:	bl	404abc <wcrtomb@plt+0x20ac>
  40670c:	mov	w1, #0x1                   	// #1
  406710:	mov	w0, w1
  406714:	ldp	x19, x20, [sp, #16]
  406718:	ldp	x29, x30, [sp], #32
  40671c:	ret
  406720:	mov	w1, w19
  406724:	ldp	x19, x20, [sp, #16]
  406728:	ldp	x29, x30, [sp], #32
  40672c:	b	405ba0 <wcrtomb@plt+0x3190>
  406730:	adrp	x2, 437000 <_obstack_memory_used@@Base+0x23900>
  406734:	add	x2, x2, #0x488
  406738:	mov	x3, #0x1                   	// #1
  40673c:	ldp	x5, x4, [x2, #32]
  406740:	add	x6, x4, #0x8
  406744:	lsl	x2, x3, #4
  406748:	cmp	x5, x3
  40674c:	b.hi	406770 <wcrtomb@plt+0x3d60>  // b.pmore
  406750:	sub	x2, x2, #0x10
  406754:	add	x0, x0, #0x1
  406758:	add	x3, x4, x2
  40675c:	ldr	x3, [x3, #8]
  406760:	sub	x0, x0, x3
  406764:	str	x0, [x1]
  406768:	ldr	x0, [x4, x2]
  40676c:	ret
  406770:	ldr	x7, [x6, x2]
  406774:	cmp	x7, x0
  406778:	b.hi	406750 <wcrtomb@plt+0x3d40>  // b.pmore
  40677c:	add	x3, x3, #0x1
  406780:	b	406744 <wcrtomb@plt+0x3d34>
  406784:	stp	x29, x30, [sp, #-48]!
  406788:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  40678c:	add	x1, x1, #0x878
  406790:	mov	x29, sp
  406794:	stp	x19, x20, [sp, #16]
  406798:	mov	w19, w0
  40679c:	stp	x21, x22, [sp, #32]
  4067a0:	cbz	w0, 406808 <wcrtomb@plt+0x3df8>
  4067a4:	adrp	x21, 437000 <_obstack_memory_used@@Base+0x23900>
  4067a8:	mov	w2, #0x5                   	// #5
  4067ac:	mov	x0, #0x0                   	// #0
  4067b0:	ldr	x22, [x21, #1104]
  4067b4:	bl	4028e0 <dcgettext@plt>
  4067b8:	mov	x20, x0
  4067bc:	bl	40e408 <wcrtomb@plt+0xb9f8>
  4067c0:	mov	x1, x20
  4067c4:	mov	x2, x0
  4067c8:	mov	x0, x22
  4067cc:	bl	4029d0 <fprintf@plt>
  4067d0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  4067d4:	add	x1, x1, #0x8a2
  4067d8:	mov	w2, #0x5                   	// #5
  4067dc:	mov	x0, #0x0                   	// #0
  4067e0:	ldr	x21, [x21, #1104]
  4067e4:	bl	4028e0 <dcgettext@plt>
  4067e8:	mov	x20, x0
  4067ec:	bl	40e408 <wcrtomb@plt+0xb9f8>
  4067f0:	mov	x1, x20
  4067f4:	mov	x2, x0
  4067f8:	mov	x0, x21
  4067fc:	bl	4029d0 <fprintf@plt>
  406800:	mov	w0, w19
  406804:	bl	4023e0 <exit@plt>
  406808:	mov	w2, #0x5                   	// #5
  40680c:	mov	x0, #0x0                   	// #0
  406810:	bl	4028e0 <dcgettext@plt>
  406814:	mov	x20, x0
  406818:	bl	40e408 <wcrtomb@plt+0xb9f8>
  40681c:	mov	x1, x0
  406820:	mov	x0, x20
  406824:	bl	402960 <printf@plt>
  406828:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  40682c:	add	x1, x1, #0x8c9
  406830:	mov	w2, #0x5                   	// #5
  406834:	mov	x0, #0x0                   	// #0
  406838:	bl	4028e0 <dcgettext@plt>
  40683c:	bl	402960 <printf@plt>
  406840:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  406844:	add	x1, x1, #0x8ec
  406848:	mov	w2, #0x5                   	// #5
  40684c:	mov	x0, #0x0                   	// #0
  406850:	bl	4028e0 <dcgettext@plt>
  406854:	mov	x20, x0
  406858:	bl	40e408 <wcrtomb@plt+0xb9f8>
  40685c:	mov	x1, x0
  406860:	mov	x0, x20
  406864:	bl	402960 <printf@plt>
  406868:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  40686c:	add	x1, x1, #0x97d
  406870:	mov	w2, #0x5                   	// #5
  406874:	mov	x0, #0x0                   	// #0
  406878:	bl	4028e0 <dcgettext@plt>
  40687c:	bl	402960 <printf@plt>
  406880:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  406884:	add	x1, x1, #0xa7a
  406888:	mov	w2, #0x5                   	// #5
  40688c:	mov	x0, #0x0                   	// #0
  406890:	bl	4028e0 <dcgettext@plt>
  406894:	bl	402960 <printf@plt>
  406898:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  40689c:	add	x1, x1, #0xc1f
  4068a0:	mov	w2, #0x5                   	// #5
  4068a4:	mov	x0, #0x0                   	// #0
  4068a8:	bl	4028e0 <dcgettext@plt>
  4068ac:	bl	402960 <printf@plt>
  4068b0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  4068b4:	add	x1, x1, #0xd17
  4068b8:	mov	w2, #0x5                   	// #5
  4068bc:	mov	x0, #0x0                   	// #0
  4068c0:	bl	4028e0 <dcgettext@plt>
  4068c4:	bl	402960 <printf@plt>
  4068c8:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  4068cc:	add	x1, x1, #0xeed
  4068d0:	mov	w2, #0x5                   	// #5
  4068d4:	mov	x0, #0x0                   	// #0
  4068d8:	bl	4028e0 <dcgettext@plt>
  4068dc:	bl	402960 <printf@plt>
  4068e0:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4068e4:	add	x1, x1, #0x34
  4068e8:	mov	w2, #0x5                   	// #5
  4068ec:	mov	x0, #0x0                   	// #0
  4068f0:	bl	4028e0 <dcgettext@plt>
  4068f4:	bl	402960 <printf@plt>
  4068f8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4068fc:	add	x1, x1, #0x1eb
  406900:	mov	w2, #0x5                   	// #5
  406904:	mov	x0, #0x0                   	// #0
  406908:	bl	4028e0 <dcgettext@plt>
  40690c:	bl	402960 <printf@plt>
  406910:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  406914:	add	x1, x1, #0x2fc
  406918:	mov	w2, #0x5                   	// #5
  40691c:	mov	x0, #0x0                   	// #0
  406920:	bl	4028e0 <dcgettext@plt>
  406924:	bl	402960 <printf@plt>
  406928:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40692c:	add	x1, x1, #0x452
  406930:	mov	w2, #0x5                   	// #5
  406934:	mov	x0, #0x0                   	// #0
  406938:	bl	4028e0 <dcgettext@plt>
  40693c:	bl	402960 <printf@plt>
  406940:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  406944:	add	x1, x1, #0x522
  406948:	mov	w2, #0x5                   	// #5
  40694c:	mov	x0, #0x0                   	// #0
  406950:	bl	4028e0 <dcgettext@plt>
  406954:	bl	402960 <printf@plt>
  406958:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40695c:	add	x1, x1, #0x646
  406960:	mov	w2, #0x5                   	// #5
  406964:	mov	x0, #0x0                   	// #0
  406968:	bl	4028e0 <dcgettext@plt>
  40696c:	bl	402960 <printf@plt>
  406970:	bl	410fa8 <wcrtomb@plt+0xe598>
  406974:	b	406800 <wcrtomb@plt+0x3df0>
  406978:	stp	x29, x30, [sp, #-112]!
  40697c:	mov	x29, sp
  406980:	stp	x27, x28, [sp, #80]
  406984:	ldr	x27, [x1]
  406988:	stp	x19, x20, [sp, #16]
  40698c:	stp	x21, x22, [sp, #32]
  406990:	mov	x21, x0
  406994:	mov	x22, x1
  406998:	mov	x1, #0x2                   	// #2
  40699c:	stp	x23, x24, [sp, #48]
  4069a0:	mov	x24, #0x441                 	// #1089
  4069a4:	stp	x25, x26, [sp, #64]
  4069a8:	mov	x23, #0x1                   	// #1
  4069ac:	movk	x24, #0x580, lsl #48
  4069b0:	str	xzr, [sp, #104]
  4069b4:	mov	w25, #0x5c                  	// #92
  4069b8:	ldr	x28, [x0]
  4069bc:	add	x0, x27, #0x1
  4069c0:	bl	41105c <wcrtomb@plt+0xe64c>
  4069c4:	mov	x20, x0
  4069c8:	mov	x19, x0
  4069cc:	cbnz	x27, 406a00 <wcrtomb@plt+0x3ff0>
  4069d0:	ldr	x0, [x21]
  4069d4:	sub	x19, x19, x20
  4069d8:	bl	4027a0 <free@plt>
  4069dc:	ldp	x23, x24, [sp, #48]
  4069e0:	ldp	x25, x26, [sp, #64]
  4069e4:	ldp	x27, x28, [sp, #80]
  4069e8:	str	x20, [x21]
  4069ec:	str	x19, [x22]
  4069f0:	ldp	x19, x20, [sp, #16]
  4069f4:	ldp	x21, x22, [sp, #32]
  4069f8:	ldp	x29, x30, [sp], #112
  4069fc:	ret
  406a00:	add	x2, sp, #0x68
  406a04:	mov	x1, x27
  406a08:	mov	x0, x28
  406a0c:	bl	4082bc <wcrtomb@plt+0x58ac>
  406a10:	mov	x26, x0
  406a14:	cmn	x0, #0x2
  406a18:	b.eq	406a60 <wcrtomb@plt+0x4050>  // b.none
  406a1c:	cmn	x0, #0x1
  406a20:	b.eq	406a84 <wcrtomb@plt+0x4074>  // b.none
  406a24:	cmp	x0, #0x1
  406a28:	b.ne	406a64 <wcrtomb@plt+0x4054>  // b.any
  406a2c:	ldrb	w0, [x28]
  406a30:	sub	w0, w0, #0x24
  406a34:	and	w0, w0, #0xff
  406a38:	cmp	w0, #0x3a
  406a3c:	b.hi	406a50 <wcrtomb@plt+0x4040>  // b.pmore
  406a40:	lsl	x0, x23, x0
  406a44:	tst	x0, x24
  406a48:	b.eq	406a50 <wcrtomb@plt+0x4040>  // b.none
  406a4c:	strb	w25, [x19], #1
  406a50:	ldrb	w0, [x28]
  406a54:	mov	x26, #0x1                   	// #1
  406a58:	strb	w0, [x19], #1
  406a5c:	b	406a78 <wcrtomb@plt+0x4068>
  406a60:	mov	x26, x27
  406a64:	mov	x0, x19
  406a68:	mov	x2, x26
  406a6c:	mov	x1, x28
  406a70:	bl	4027c0 <mempcpy@plt>
  406a74:	mov	x19, x0
  406a78:	add	x28, x28, x26
  406a7c:	sub	x27, x27, x26
  406a80:	b	4069cc <wcrtomb@plt+0x3fbc>
  406a84:	str	xzr, [sp, #104]
  406a88:	b	406a2c <wcrtomb@plt+0x401c>
  406a8c:	sub	sp, sp, #0x210
  406a90:	stp	x29, x30, [sp]
  406a94:	mov	x29, sp
  406a98:	stp	x19, x20, [sp, #16]
  406a9c:	mov	x19, x1
  406aa0:	mov	x20, #0x0                   	// #0
  406aa4:	stp	x21, x22, [sp, #32]
  406aa8:	mov	x21, x0
  406aac:	mov	w0, #0x1                   	// #1
  406ab0:	stp	x23, x24, [sp, #48]
  406ab4:	mov	x23, x1
  406ab8:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406abc:	stp	x25, x26, [sp, #64]
  406ac0:	add	x24, x24, #0x8e4
  406ac4:	adrp	x26, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406ac8:	stp	x27, x28, [sp, #80]
  406acc:	add	x26, x26, #0xded
  406ad0:	str	xzr, [sp, #112]
  406ad4:	bl	408348 <wcrtomb@plt+0x5938>
  406ad8:	mov	x3, x21
  406adc:	mov	x22, x0
  406ae0:	mov	x0, x3
  406ae4:	mov	x2, x19
  406ae8:	mov	w1, #0xa                   	// #10
  406aec:	str	x3, [sp, #104]
  406af0:	bl	402860 <memchr@plt>
  406af4:	mov	x28, x0
  406af8:	ldr	x3, [sp, #104]
  406afc:	cbz	x0, 406be8 <wcrtomb@plt+0x41d8>
  406b00:	sub	x0, x0, x3
  406b04:	add	x28, x28, #0x1
  406b08:	add	x25, x0, #0x1
  406b0c:	sub	x25, x19, x25
  406b10:	mov	x19, x0
  406b14:	ldrb	w0, [x26]
  406b18:	cbz	w0, 406b40 <wcrtomb@plt+0x4130>
  406b1c:	ldrb	w0, [x24]
  406b20:	add	x27, x19, #0x2
  406b24:	cmp	w0, #0xa
  406b28:	b.ne	406bf0 <wcrtomb@plt+0x41e0>  // b.any
  406b2c:	cmp	x28, #0x0
  406b30:	ccmp	x3, x21, #0x0, ne  // ne = any
  406b34:	b.ls	406bf0 <wcrtomb@plt+0x41e0>  // b.plast
  406b38:	sub	x3, x3, #0x1
  406b3c:	mov	x19, x27
  406b40:	mov	x2, x19
  406b44:	mov	x1, x3
  406b48:	mov	x0, x22
  406b4c:	bl	407960 <wcrtomb@plt+0x4f50>
  406b50:	cbnz	x28, 406bdc <wcrtomb@plt+0x41cc>
  406b54:	mov	x0, x20
  406b58:	bl	4027a0 <free@plt>
  406b5c:	mov	x0, x22
  406b60:	bl	407cfc <wcrtomb@plt+0x52ec>
  406b64:	mov	x24, x0
  406b68:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406b6c:	ldrb	w0, [x0, #3566]
  406b70:	cbz	w0, 406ba0 <wcrtomb@plt+0x4190>
  406b74:	add	x0, sp, #0x120
  406b78:	mov	x20, x21
  406b7c:	add	x25, sp, #0x110
  406b80:	mov	x2, #0xf0                  	// #240
  406b84:	mov	w1, #0x0                   	// #0
  406b88:	str	xzr, [sp, #120]
  406b8c:	stp	xzr, xzr, [sp, #272]
  406b90:	bl	4025f0 <memset@plt>
  406b94:	add	x0, x21, x23
  406b98:	cmp	x20, x0
  406b9c:	b.cc	406c4c <wcrtomb@plt+0x423c>  // b.lo, b.ul, b.last
  406ba0:	mov	x0, x22
  406ba4:	bl	407d04 <wcrtomb@plt+0x52f4>
  406ba8:	mov	x0, #0x28                  	// #40
  406bac:	bl	41102c <wcrtomb@plt+0xe61c>
  406bb0:	ldp	x29, x30, [sp]
  406bb4:	ldp	x19, x20, [sp, #16]
  406bb8:	ldp	x25, x26, [sp, #64]
  406bbc:	ldp	x27, x28, [sp, #80]
  406bc0:	stp	x22, x24, [x0]
  406bc4:	stp	x21, x23, [x0, #16]
  406bc8:	str	xzr, [x0, #32]
  406bcc:	ldp	x21, x22, [sp, #32]
  406bd0:	ldp	x23, x24, [sp, #48]
  406bd4:	add	sp, sp, #0x210
  406bd8:	ret
  406bdc:	mov	x3, x28
  406be0:	mov	x19, x25
  406be4:	b	406ae0 <wcrtomb@plt+0x40d0>
  406be8:	mov	x25, #0x0                   	// #0
  406bec:	b	406b14 <wcrtomb@plt+0x4104>
  406bf0:	ldr	x0, [sp, #112]
  406bf4:	cmp	x27, x0
  406bf8:	b.ls	406c28 <wcrtomb@plt+0x4218>  // b.plast
  406bfc:	mov	x0, x20
  406c00:	str	x3, [sp, #104]
  406c04:	bl	4027a0 <free@plt>
  406c08:	str	x27, [sp, #112]
  406c0c:	add	x1, sp, #0x70
  406c10:	mov	x0, #0x0                   	// #0
  406c14:	bl	411164 <wcrtomb@plt+0xe754>
  406c18:	mov	x20, x0
  406c1c:	ldr	x3, [sp, #104]
  406c20:	ldrb	w0, [x24]
  406c24:	strb	w0, [x20]
  406c28:	mov	x2, x19
  406c2c:	add	x19, x20, x19
  406c30:	mov	x1, x3
  406c34:	add	x0, x20, #0x1
  406c38:	bl	402360 <memcpy@plt>
  406c3c:	ldrb	w0, [x24]
  406c40:	mov	x3, x20
  406c44:	strb	w0, [x19, #1]
  406c48:	b	406b3c <wcrtomb@plt+0x412c>
  406c4c:	ldrb	w0, [x20]
  406c50:	ldrb	w1, [x25, x0]
  406c54:	cbz	w1, 406c60 <wcrtomb@plt+0x4250>
  406c58:	add	x20, x20, #0x1
  406c5c:	b	406b94 <wcrtomb@plt+0x4184>
  406c60:	mov	w1, #0x1                   	// #1
  406c64:	strb	w1, [x25, x0]
  406c68:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406c6c:	add	x1, x1, #0x8e8
  406c70:	add	x0, x1, x0, lsl #2
  406c74:	add	x26, sp, #0x90
  406c78:	mov	x1, x26
  406c7c:	ldr	w0, [x0, #260]
  406c80:	bl	40d898 <wcrtomb@plt+0xae88>
  406c84:	sub	w19, w0, #0x1
  406c88:	sxtw	x19, w19
  406c8c:	tbnz	w19, #31, 406c58 <wcrtomb@plt+0x4248>
  406c90:	ldr	w1, [x26, x19, lsl #2]
  406c94:	add	x2, sp, #0x78
  406c98:	add	x0, sp, #0x80
  406c9c:	bl	402a10 <wcrtomb@plt>
  406ca0:	cmp	w0, #0x1
  406ca4:	b.le	406cb8 <wcrtomb@plt+0x42a8>
  406ca8:	sxtw	x2, w0
  406cac:	add	x1, sp, #0x80
  406cb0:	mov	x0, x22
  406cb4:	bl	407960 <wcrtomb@plt+0x4f50>
  406cb8:	sub	x19, x19, #0x1
  406cbc:	b	406c8c <wcrtomb@plt+0x427c>
  406cc0:	stp	x29, x30, [sp, #-176]!
  406cc4:	mov	x29, sp
  406cc8:	stp	x19, x20, [sp, #16]
  406ccc:	mov	x20, x0
  406cd0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406cd4:	stp	x23, x24, [sp, #48]
  406cd8:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406cdc:	mov	x23, x1
  406ce0:	stp	x25, x26, [sp, #64]
  406ce4:	mov	x25, x3
  406ce8:	ldrb	w26, [x0, #2276]
  406cec:	ldrb	w0, [x24, #3565]
  406cf0:	stp	x21, x22, [sp, #32]
  406cf4:	mov	x22, x4
  406cf8:	stp	x27, x28, [sp, #80]
  406cfc:	str	x2, [sp, #104]
  406d00:	ldr	x28, [x20]
  406d04:	cbnz	w0, 406db8 <wcrtomb@plt+0x43a8>
  406d08:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406d0c:	add	x0, x1, #0x8e8
  406d10:	cmp	x4, #0x0
  406d14:	ldrb	w1, [x1, #2280]
  406d18:	ldrb	w0, [x0, #2]
  406d1c:	eor	w0, w0, #0x1
  406d20:	and	w0, w0, w1
  406d24:	and	w0, w0, #0xff
  406d28:	str	w0, [sp, #96]
  406d2c:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406d30:	ldr	w1, [sp, #96]
  406d34:	ldrb	w0, [x0, #3564]
  406d38:	orr	w1, w1, w0
  406d3c:	cset	w0, ne  // ne = any
  406d40:	orr	w0, w0, w1
  406d44:	and	w0, w0, #0xff
  406d48:	str	w0, [sp, #100]
  406d4c:	cmp	x22, #0x0
  406d50:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406d54:	csel	x19, x22, x23, ne  // ne = any
  406d58:	add	x0, x0, #0x8e8
  406d5c:	str	x0, [sp, #112]
  406d60:	str	x19, [sp, #136]
  406d64:	ldr	x0, [sp, #104]
  406d68:	add	x21, x23, x0
  406d6c:	cmp	x21, x19
  406d70:	b.cc	406d98 <wcrtomb@plt+0x4388>  // b.lo, b.ul, b.last
  406d74:	ldrb	w4, [sp, #100]
  406d78:	sub	x2, x21, x19
  406d7c:	ldrb	w1, [x24, #3565]
  406d80:	add	x3, sp, #0x98
  406d84:	mov	x0, x28
  406d88:	add	x2, x2, x1
  406d8c:	sub	x1, x19, x1
  406d90:	bl	4081bc <wcrtomb@plt+0x57ac>
  406d94:	tbz	x0, #63, 406dc0 <wcrtomb@plt+0x43b0>
  406d98:	mov	x0, #0xffffffffffffffff    	// #-1
  406d9c:	ldp	x19, x20, [sp, #16]
  406da0:	ldp	x21, x22, [sp, #32]
  406da4:	ldp	x23, x24, [sp, #48]
  406da8:	ldp	x25, x26, [sp, #64]
  406dac:	ldp	x27, x28, [sp, #80]
  406db0:	ldp	x29, x30, [sp], #176
  406db4:	ret
  406db8:	stp	wzr, wzr, [sp, #96]
  406dbc:	b	406d4c <wcrtomb@plt+0x433c>
  406dc0:	ldr	x1, [sp, #168]
  406dc4:	ldrb	w5, [x24, #3565]
  406dc8:	ldr	x2, [x20, #8]
  406dcc:	sub	x27, x1, w5, uxtb #1
  406dd0:	ldr	x1, [sp, #152]
  406dd4:	cmp	x2, x1
  406dd8:	b.gt	406e20 <wcrtomb@plt+0x4410>
  406ddc:	ldr	x0, [x20, #32]
  406de0:	cbnz	x0, 406e04 <wcrtomb@plt+0x43f4>
  406de4:	add	x1, x20, #0x18
  406de8:	add	x0, x20, #0x10
  406dec:	bl	406978 <wcrtomb@plt+0x3f68>
  406df0:	ldp	x0, x1, [x20, #16]
  406df4:	mov	x2, #0xa46                 	// #2630
  406df8:	movk	x2, #0x1, lsl #16
  406dfc:	bl	403ef8 <wcrtomb@plt+0x14e8>
  406e00:	str	x0, [x20, #32]
  406e04:	ldr	x0, [x20, #32]
  406e08:	mov	x4, x22
  406e0c:	ldr	x2, [sp, #104]
  406e10:	mov	x3, x25
  406e14:	mov	x1, x23
  406e18:	bl	404404 <wcrtomb@plt+0x19f4>
  406e1c:	b	406d9c <wcrtomb@plt+0x438c>
  406e20:	add	x19, x19, x0
  406e24:	ldr	w0, [sp, #96]
  406e28:	str	xzr, [sp, #144]
  406e2c:	cbz	w0, 406e58 <wcrtomb@plt+0x4448>
  406e30:	mov	x3, x21
  406e34:	mov	x2, x19
  406e38:	add	x1, sp, #0x90
  406e3c:	add	x0, sp, #0x88
  406e40:	bl	40841c <wcrtomb@plt+0x5a0c>
  406e44:	cbz	x0, 406e58 <wcrtomb@plt+0x4448>
  406e48:	ldr	x19, [sp, #136]
  406e4c:	sub	x19, x19, #0x1
  406e50:	add	x19, x19, #0x1
  406e54:	b	406d64 <wcrtomb@plt+0x4354>
  406e58:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  406e5c:	cmp	x22, #0x0
  406e60:	cset	w2, ne  // ne = any
  406e64:	ldrb	w0, [x0, #3564]
  406e68:	eor	w1, w0, #0x1
  406e6c:	tst	w2, w1
  406e70:	b.ne	406e84 <wcrtomb@plt+0x4474>  // b.any
  406e74:	ldrb	w1, [x24, #3565]
  406e78:	cbz	w1, 406e90 <wcrtomb@plt+0x4480>
  406e7c:	cmp	x22, #0x0
  406e80:	cinc	x27, x27, eq  // eq = none
  406e84:	sub	x0, x19, x23
  406e88:	str	x27, [x25]
  406e8c:	b	406d9c <wcrtomb@plt+0x438c>
  406e90:	cbz	w0, 406fa4 <wcrtomb@plt+0x4594>
  406e94:	ldr	x0, [sp, #144]
  406e98:	cbnz	x0, 406fdc <wcrtomb@plt+0x45cc>
  406e9c:	ldr	x0, [sp, #136]
  406ea0:	mov	w1, w26
  406ea4:	sub	x2, x19, x0
  406ea8:	bl	4027e0 <memrchr@plt>
  406eac:	cbz	x0, 406eb8 <wcrtomb@plt+0x44a8>
  406eb0:	add	x0, x0, #0x1
  406eb4:	str	x0, [sp, #136]
  406eb8:	ldr	x0, [sp, #136]
  406ebc:	mov	x2, x21
  406ec0:	mov	x1, x19
  406ec4:	bl	408580 <wcrtomb@plt+0x5b70>
  406ec8:	b	406fe8 <wcrtomb@plt+0x45d8>
  406ecc:	cbnz	x22, 406f60 <wcrtomb@plt+0x4550>
  406ed0:	ldr	x0, [sp, #112]
  406ed4:	ldrb	w0, [x0]
  406ed8:	cbnz	w0, 406f60 <wcrtomb@plt+0x4550>
  406edc:	ldr	x0, [x20, #32]
  406ee0:	cbnz	x0, 406f0c <wcrtomb@plt+0x44fc>
  406ee4:	add	x1, x20, #0x18
  406ee8:	add	x0, x20, #0x10
  406eec:	str	x3, [sp, #120]
  406ef0:	bl	406978 <wcrtomb@plt+0x3f68>
  406ef4:	ldp	x0, x1, [x20, #16]
  406ef8:	mov	x2, #0xa46                 	// #2630
  406efc:	movk	x2, #0x1, lsl #16
  406f00:	bl	403ef8 <wcrtomb@plt+0x14e8>
  406f04:	str	x0, [x20, #32]
  406f08:	ldr	x3, [sp, #120]
  406f0c:	sub	x2, x21, x3
  406f10:	mov	w1, w26
  406f14:	mov	x0, x3
  406f18:	bl	402860 <memchr@plt>
  406f1c:	cmp	x0, #0x0
  406f20:	csinc	x27, x21, x0, eq  // eq = none
  406f24:	mov	x3, x25
  406f28:	ldr	x0, [x20, #32]
  406f2c:	sub	x2, x27, x19
  406f30:	mov	x1, x19
  406f34:	mov	x4, #0x0                   	// #0
  406f38:	bl	404404 <wcrtomb@plt+0x19f4>
  406f3c:	cmn	x0, #0x1
  406f40:	b.ne	406fbc <wcrtomb@plt+0x45ac>  // b.any
  406f44:	sub	x19, x27, #0x1
  406f48:	mov	x0, x19
  406f4c:	mov	x1, x21
  406f50:	bl	408570 <wcrtomb@plt+0x5b60>
  406f54:	add	x19, x19, x0
  406f58:	str	x19, [sp, #136]
  406f5c:	b	406e50 <wcrtomb@plt+0x4440>
  406f60:	cbz	x27, 406f48 <wcrtomb@plt+0x4538>
  406f64:	add	x3, sp, #0x98
  406f68:	sub	x2, x27, #0x1
  406f6c:	mov	x1, x19
  406f70:	mov	x0, x28
  406f74:	mov	w4, #0x1                   	// #1
  406f78:	bl	4081bc <wcrtomb@plt+0x57ac>
  406f7c:	cbnz	x0, 406f48 <wcrtomb@plt+0x4538>
  406f80:	ldr	x27, [sp, #168]
  406f84:	add	x3, x19, x27
  406f88:	mov	x0, x3
  406f8c:	mov	x1, x21
  406f90:	str	x3, [sp, #120]
  406f94:	bl	408578 <wcrtomb@plt+0x5b68>
  406f98:	ldr	x3, [sp, #120]
  406f9c:	cbnz	x0, 406ecc <wcrtomb@plt+0x44bc>
  406fa0:	cbnz	x22, 406e84 <wcrtomb@plt+0x4474>
  406fa4:	add	x0, x19, x27
  406fa8:	mov	w1, w26
  406fac:	sub	x2, x21, x0
  406fb0:	bl	402860 <memchr@plt>
  406fb4:	cmp	x0, #0x0
  406fb8:	csinc	x27, x21, x0, eq  // eq = none
  406fbc:	sub	x2, x19, x23
  406fc0:	mov	w1, w26
  406fc4:	mov	x0, x23
  406fc8:	bl	4027e0 <memrchr@plt>
  406fcc:	cmp	x0, #0x0
  406fd0:	csinc	x19, x23, x0, eq  // eq = none
  406fd4:	sub	x27, x27, x19
  406fd8:	b	406e84 <wcrtomb@plt+0x4474>
  406fdc:	mov	x1, x21
  406fe0:	sub	x0, x19, x0
  406fe4:	bl	408578 <wcrtomb@plt+0x5b68>
  406fe8:	cmp	x0, #0x0
  406fec:	cset	w0, eq  // eq = none
  406ff0:	cbz	w0, 406f48 <wcrtomb@plt+0x4538>
  406ff4:	b	406f84 <wcrtomb@plt+0x4574>
  406ff8:	cbz	x0, 4070b0 <wcrtomb@plt+0x46a0>
  406ffc:	stp	x29, x30, [sp, #-48]!
  407000:	mov	x29, sp
  407004:	stp	x19, x20, [sp, #16]
  407008:	mov	x19, x0
  40700c:	mov	x20, x1
  407010:	ldr	x0, [x0]
  407014:	stp	x21, x22, [sp, #32]
  407018:	and	w22, w3, #0xff
  40701c:	mov	x21, x2
  407020:	mov	w3, w22
  407024:	bl	406ff8 <wcrtomb@plt+0x45e8>
  407028:	ldr	x0, [x19, #8]
  40702c:	mov	w3, w22
  407030:	mov	x2, x21
  407034:	mov	x1, x20
  407038:	bl	406ff8 <wcrtomb@plt+0x45e8>
  40703c:	cbnz	x20, 40704c <wcrtomb@plt+0x463c>
  407040:	ldr	x0, [x19, #16]
  407044:	str	x21, [x0, #32]
  407048:	b	40708c <wcrtomb@plt+0x467c>
  40704c:	ldr	x0, [x20, #8]
  407050:	cbz	x0, 4070a8 <wcrtomb@plt+0x4698>
  407054:	ldrb	w2, [x19, #24]
  407058:	ldrb	w1, [x0, #24]
  40705c:	cmp	w2, w1
  407060:	b.ne	40709c <wcrtomb@plt+0x468c>  // b.any
  407064:	ldr	x1, [x19, #16]
  407068:	ldr	x0, [x0, #16]
  40706c:	str	x0, [x1, #32]
  407070:	cbnz	w22, 40708c <wcrtomb@plt+0x467c>
  407074:	ldr	x0, [x0]
  407078:	cbz	x0, 40708c <wcrtomb@plt+0x467c>
  40707c:	ldr	x0, [x1]
  407080:	cbnz	x0, 40708c <wcrtomb@plt+0x467c>
  407084:	mov	x0, #0xffffffffffffffff    	// #-1
  407088:	str	x0, [x1]
  40708c:	ldp	x19, x20, [sp, #16]
  407090:	ldp	x21, x22, [sp, #32]
  407094:	ldp	x29, x30, [sp], #48
  407098:	ret
  40709c:	ldp	x1, x0, [x0]
  4070a0:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4070a4:	b	407050 <wcrtomb@plt+0x4640>
  4070a8:	ldr	x20, [x20, #32]
  4070ac:	b	40703c <wcrtomb@plt+0x462c>
  4070b0:	ret
  4070b4:	cbz	x0, 407110 <wcrtomb@plt+0x4700>
  4070b8:	stp	x29, x30, [sp, #-48]!
  4070bc:	mov	x29, sp
  4070c0:	stp	x19, x20, [sp, #16]
  4070c4:	mov	x19, x0
  4070c8:	mov	x20, x2
  4070cc:	ldr	x0, [x0]
  4070d0:	str	x21, [sp, #32]
  4070d4:	mov	x21, x1
  4070d8:	bl	4070b4 <wcrtomb@plt+0x46a4>
  4070dc:	ldr	x0, [x19, #8]
  4070e0:	mov	x1, x21
  4070e4:	mov	x2, x20
  4070e8:	bl	4070b4 <wcrtomb@plt+0x46a4>
  4070ec:	ldrb	w0, [x19, #24]
  4070f0:	ldrb	w1, [x20, x0]
  4070f4:	cmp	x1, x21
  4070f8:	b.le	407100 <wcrtomb@plt+0x46f0>
  4070fc:	strb	w21, [x20, x0]
  407100:	ldp	x19, x20, [sp, #16]
  407104:	ldr	x21, [sp, #32]
  407108:	ldp	x29, x30, [sp], #48
  40710c:	ret
  407110:	ret
  407114:	cbz	x1, 407184 <wcrtomb@plt+0x4774>
  407118:	stp	x29, x30, [sp, #-32]!
  40711c:	mov	x29, sp
  407120:	stp	x19, x20, [sp, #16]
  407124:	mov	x20, x1
  407128:	mov	x19, x0
  40712c:	ldr	x1, [x1]
  407130:	bl	407114 <wcrtomb@plt+0x4704>
  407134:	ands	w0, w0, #0xff
  407138:	b.eq	407150 <wcrtomb@plt+0x4740>  // b.none
  40713c:	ldr	x1, [x20, #8]
  407140:	mov	x0, x19
  407144:	bl	407114 <wcrtomb@plt+0x4704>
  407148:	ands	w0, w0, #0xff
  40714c:	b.ne	407164 <wcrtomb@plt+0x4754>  // b.any
  407150:	ldp	x19, x20, [sp, #16]
  407154:	ldp	x29, x30, [sp], #32
  407158:	ret
  40715c:	ldp	x0, x19, [x19]
  407160:	csel	x19, x19, x0, cs  // cs = hs, nlast
  407164:	cbz	x19, 407178 <wcrtomb@plt+0x4768>
  407168:	ldrb	w1, [x20, #24]
  40716c:	ldrb	w0, [x19, #24]
  407170:	cmp	w1, w0
  407174:	b.ne	40715c <wcrtomb@plt+0x474c>  // b.any
  407178:	cmp	x19, #0x0
  40717c:	cset	w0, ne  // ne = any
  407180:	b	407150 <wcrtomb@plt+0x4740>
  407184:	mov	w0, #0x1                   	// #1
  407188:	ret
  40718c:	cbz	x0, 4071d0 <wcrtomb@plt+0x47c0>
  407190:	stp	x29, x30, [sp, #-32]!
  407194:	mov	x29, sp
  407198:	stp	x19, x20, [sp, #16]
  40719c:	mov	x19, x0
  4071a0:	mov	x20, x1
  4071a4:	ldr	x0, [x0]
  4071a8:	bl	40718c <wcrtomb@plt+0x477c>
  4071ac:	ldr	x0, [x19, #8]
  4071b0:	mov	x1, x20
  4071b4:	bl	40718c <wcrtomb@plt+0x477c>
  4071b8:	ldrb	w0, [x19, #24]
  4071bc:	ldr	x1, [x19, #16]
  4071c0:	str	x1, [x20, x0, lsl #3]
  4071c4:	ldp	x19, x20, [sp, #16]
  4071c8:	ldp	x29, x30, [sp], #32
  4071cc:	ret
  4071d0:	ret
  4071d4:	mov	x4, x2
  4071d8:	ldr	w2, [x2, #2452]
  4071dc:	add	x3, x0, x1
  4071e0:	tbz	w2, #31, 40720c <wcrtomb@plt+0x47fc>
  4071e4:	cmp	x0, x3
  4071e8:	b.cc	4071f4 <wcrtomb@plt+0x47e4>  // b.lo, b.ul, b.last
  4071ec:	mov	x0, #0x0                   	// #0
  4071f0:	ret
  4071f4:	ldrb	w1, [x0]
  4071f8:	add	x1, x4, x1, lsl #3
  4071fc:	ldr	x1, [x1, #376]
  407200:	cbnz	x1, 4071f0 <wcrtomb@plt+0x47e0>
  407204:	add	x0, x0, #0x1
  407208:	b	4071e4 <wcrtomb@plt+0x47d4>
  40720c:	cmp	x0, x3
  407210:	b.cs	4071ec <wcrtomb@plt+0x47dc>  // b.hs, b.nlast
  407214:	ldrb	w1, [x0]
  407218:	add	x1, x4, x1, lsl #3
  40721c:	ldr	x1, [x1, #376]
  407220:	cbnz	x1, 4071f0 <wcrtomb@plt+0x47e0>
  407224:	add	x0, x0, #0x1
  407228:	tst	x0, #0xf
  40722c:	b.ne	40720c <wcrtomb@plt+0x47fc>  // b.any
  407230:	ldr	w1, [x4, #2448]
  407234:	sub	x3, x3, x0
  407238:	b	40f490 <wcrtomb@plt+0xca80>
  40723c:	stp	x29, x30, [sp, #-80]!
  407240:	mov	x29, sp
  407244:	stp	x19, x20, [sp, #16]
  407248:	mov	x20, x0
  40724c:	ldr	x0, [x0, #104]
  407250:	stp	x21, x22, [sp, #32]
  407254:	stp	x23, x24, [sp, #48]
  407258:	cmp	x0, x2
  40725c:	str	x25, [sp, #64]
  407260:	b.le	407280 <wcrtomb@plt+0x4870>
  407264:	mov	x0, #0xffffffffffffffff    	// #-1
  407268:	ldp	x19, x20, [sp, #16]
  40726c:	ldp	x21, x22, [sp, #32]
  407270:	ldp	x23, x24, [sp, #48]
  407274:	ldr	x25, [sp, #64]
  407278:	ldp	x29, x30, [sp], #80
  40727c:	ret
  407280:	ldr	x5, [x20, #96]
  407284:	mov	x22, x1
  407288:	mov	x23, x3
  40728c:	and	w24, w4, #0xff
  407290:	add	x19, x1, x2
  407294:	ldr	x0, [x5]
  407298:	ldr	x21, [x20, #2440]
  40729c:	cbnz	x0, 4073a8 <wcrtomb@plt+0x4998>
  4072a0:	ldr	w25, [x20, #2448]
  4072a4:	mov	x0, x1
  4072a8:	tbz	w25, #31, 407310 <wcrtomb@plt+0x4900>
  4072ac:	ldrb	w2, [x0], #1
  4072b0:	cbz	x21, 4072bc <wcrtomb@plt+0x48ac>
  4072b4:	and	x2, x2, #0xff
  4072b8:	ldrb	w2, [x21, x2]
  4072bc:	add	x2, x20, w2, sxtw #3
  4072c0:	ldr	x5, [x2, #376]
  4072c4:	cbz	x5, 407304 <wcrtomb@plt+0x48f4>
  4072c8:	ldr	x1, [x5]
  4072cc:	mov	x6, x0
  4072d0:	cbnz	x1, 407370 <wcrtomb@plt+0x4960>
  4072d4:	cmp	x0, x19
  4072d8:	b.cs	407264 <wcrtomb@plt+0x4854>  // b.hs, b.nlast
  4072dc:	ldrb	w7, [x0], #1
  4072e0:	cbz	x21, 4072ec <wcrtomb@plt+0x48dc>
  4072e4:	and	x7, x7, #0xff
  4072e8:	ldrb	w7, [x21, x7]
  4072ec:	ldr	x2, [x5, #8]
  4072f0:	ldrb	w1, [x2, #24]
  4072f4:	cmp	w1, w7
  4072f8:	b.ne	40733c <wcrtomb@plt+0x492c>  // b.any
  4072fc:	ldr	x5, [x2, #16]
  407300:	b	4072c8 <wcrtomb@plt+0x48b8>
  407304:	cmp	x19, x0
  407308:	b.hi	4072ac <wcrtomb@plt+0x489c>  // b.pmore
  40730c:	b	407264 <wcrtomb@plt+0x4854>
  407310:	mov	x2, x20
  407314:	sub	x1, x19, x0
  407318:	bl	4071d4 <wcrtomb@plt+0x47c4>
  40731c:	cbz	x0, 407264 <wcrtomb@plt+0x4854>
  407320:	ldrb	w2, [x0], #1
  407324:	cbz	x21, 407330 <wcrtomb@plt+0x4920>
  407328:	and	x2, x2, #0xff
  40732c:	ldrb	w2, [x21, x2]
  407330:	add	x2, x20, w2, sxtw #3
  407334:	ldr	x5, [x2, #376]
  407338:	b	4072c8 <wcrtomb@plt+0x48b8>
  40733c:	ldp	x1, x2, [x2]
  407340:	csel	x2, x2, x1, ls  // ls = plast
  407344:	cbnz	x2, 4072f0 <wcrtomb@plt+0x48e0>
  407348:	ldr	x5, [x5, #32]
  40734c:	cbnz	x5, 407368 <wcrtomb@plt+0x4958>
  407350:	add	x7, x20, w7, sxtw #3
  407354:	ldr	x5, [x7, #376]
  407358:	cbnz	x5, 4072c8 <wcrtomb@plt+0x48b8>
  40735c:	cmp	x19, x0
  407360:	b.hi	4072a8 <wcrtomb@plt+0x4898>  // b.pmore
  407364:	b	407264 <wcrtomb@plt+0x4854>
  407368:	ldr	x1, [x5]
  40736c:	cbz	x1, 4072ec <wcrtomb@plt+0x48dc>
  407370:	mov	x2, x5
  407374:	ldr	x0, [x2]
  407378:	cmn	x0, #0x1
  40737c:	b.eq	4073b0 <wcrtomb@plt+0x49a0>  // b.none
  407380:	ldr	x0, [x2, #40]
  407384:	sub	x0, x6, x0
  407388:	cbnz	w24, 4073ec <wcrtomb@plt+0x49dc>
  40738c:	ldr	x1, [x2]
  407390:	sub	x0, x0, x22
  407394:	lsr	x1, x1, #1
  407398:	stp	x1, x0, [x23]
  40739c:	ldr	x1, [x2, #40]
  4073a0:	str	x1, [x23, #16]
  4073a4:	b	407268 <wcrtomb@plt+0x4858>
  4073a8:	mov	x6, x1
  4073ac:	b	407370 <wcrtomb@plt+0x4960>
  4073b0:	ldr	x2, [x2, #32]
  4073b4:	b	407374 <wcrtomb@plt+0x4964>
  4073b8:	ldp	x3, x4, [x4]
  4073bc:	csel	x4, x4, x3, ls  // ls = plast
  4073c0:	b	407408 <wcrtomb@plt+0x49f8>
  4073c4:	ldr	x1, [x1, #32]
  4073c8:	ldr	x3, [x1]
  4073cc:	cmn	x3, #0x1
  4073d0:	b.eq	4073c4 <wcrtomb@plt+0x49b4>  // b.none
  4073d4:	ldr	x3, [x1, #40]
  4073d8:	sub	x3, x6, x3
  4073dc:	cmp	x0, x3
  4073e0:	b.cc	4073ec <wcrtomb@plt+0x49dc>  // b.lo, b.ul, b.last
  4073e4:	mov	x0, x3
  4073e8:	mov	x2, x1
  4073ec:	cmp	x6, x19
  4073f0:	b.cs	40738c <wcrtomb@plt+0x497c>  // b.hs, b.nlast
  4073f4:	ldrb	w1, [x6]
  4073f8:	cbz	x21, 407404 <wcrtomb@plt+0x49f4>
  4073fc:	and	x1, x1, #0xff
  407400:	ldrb	w1, [x21, x1]
  407404:	ldr	x4, [x5, #8]
  407408:	cbz	x4, 407430 <wcrtomb@plt+0x4a20>
  40740c:	ldrb	w3, [x4, #24]
  407410:	cmp	w3, w1
  407414:	b.ne	4073b8 <wcrtomb@plt+0x49a8>  // b.any
  407418:	ldr	x5, [x4, #16]
  40741c:	add	x6, x6, #0x1
  407420:	ldr	x1, [x5]
  407424:	cbz	x1, 4073ec <wcrtomb@plt+0x49dc>
  407428:	mov	x1, x5
  40742c:	b	4073c8 <wcrtomb@plt+0x49b8>
  407430:	ldr	x5, [x5, #32]
  407434:	ldr	x3, [x2, #40]
  407438:	cbz	x5, 40738c <wcrtomb@plt+0x497c>
  40743c:	ldr	x4, [x5, #40]
  407440:	cmp	x4, x3
  407444:	b.ge	407404 <wcrtomb@plt+0x49f4>  // b.tcont
  407448:	b	40738c <wcrtomb@plt+0x497c>
  40744c:	b	40723c <wcrtomb@plt+0x482c>
  407450:	ldr	x8, [x0]
  407454:	and	w5, w5, #0xff
  407458:	ldr	x14, [sp]
  40745c:	and	w6, w6, #0xff
  407460:	mov	x10, x3
  407464:	mov	x13, #0x0                   	// #0
  407468:	ldurb	w11, [x8, #-2]
  40746c:	cbz	x4, 407478 <wcrtomb@plt+0x4a68>
  407470:	and	x11, x11, #0xff
  407474:	ldrb	w11, [x4, x11]
  407478:	cmp	w6, w11
  40747c:	mov	x9, #0x2                   	// #2
  407480:	b.eq	4074fc <wcrtomb@plt+0x4aec>  // b.none
  407484:	ldr	x10, [x14]
  407488:	add	x10, x10, x9, lsl #3
  40748c:	ldur	x10, [x10, #-16]
  407490:	add	x8, x8, x10
  407494:	cmp	x8, x1
  407498:	b.hi	4074c4 <wcrtomb@plt+0x4ab4>  // b.pmore
  40749c:	ldurb	w11, [x8, #-1]
  4074a0:	cbz	x4, 407558 <wcrtomb@plt+0x4b48>
  4074a4:	and	x12, x11, #0xff
  4074a8:	ldrb	w12, [x4, x12]
  4074ac:	cmp	w5, w12
  4074b0:	b.eq	407560 <wcrtomb@plt+0x4b50>  // b.none
  4074b4:	cbz	x7, 4074c4 <wcrtomb@plt+0x4ab4>
  4074b8:	and	x11, x11, #0xff
  4074bc:	ldrb	w1, [x7, x11]
  4074c0:	add	x8, x8, x1
  4074c4:	str	x8, [x0]
  4074c8:	mov	w0, #0x0                   	// #0
  4074cc:	ret
  4074d0:	neg	x12, x9
  4074d4:	ldrb	w11, [x8, x12]
  4074d8:	cbz	x4, 4074e4 <wcrtomb@plt+0x4ad4>
  4074dc:	and	x11, x11, #0xff
  4074e0:	ldrb	w11, [x4, x11]
  4074e4:	ldrb	w12, [x2, x12]
  4074e8:	cbz	x4, 4074f4 <wcrtomb@plt+0x4ae4>
  4074ec:	and	x12, x12, #0xff
  4074f0:	ldrb	w12, [x4, x12]
  4074f4:	cmp	w12, w11
  4074f8:	b	407480 <wcrtomb@plt+0x4a70>
  4074fc:	add	x9, x9, #0x1
  407500:	cmp	x9, x10
  407504:	b.le	4074d0 <wcrtomb@plt+0x4ac0>
  407508:	add	x9, x10, x13
  40750c:	b	40753c <wcrtomb@plt+0x4b2c>
  407510:	neg	x11, x9
  407514:	ldrb	w10, [x8, x11]
  407518:	cbz	x4, 407524 <wcrtomb@plt+0x4b14>
  40751c:	and	x10, x10, #0xff
  407520:	ldrb	w10, [x4, x10]
  407524:	ldrb	w11, [x2, x11]
  407528:	cbz	x4, 407534 <wcrtomb@plt+0x4b24>
  40752c:	and	x11, x11, #0xff
  407530:	ldrb	w11, [x4, x11]
  407534:	cmp	w11, w10
  407538:	b.ne	407484 <wcrtomb@plt+0x4a74>  // b.any
  40753c:	add	x9, x9, #0x1
  407540:	cmp	x9, x3
  407544:	b.le	407510 <wcrtomb@plt+0x4b00>
  407548:	sub	x3, x8, x3
  40754c:	str	x3, [x0]
  407550:	mov	w0, #0x1                   	// #1
  407554:	b	4074cc <wcrtomb@plt+0x4abc>
  407558:	mov	w12, w11
  40755c:	b	4074ac <wcrtomb@plt+0x4a9c>
  407560:	sub	x13, x9, #0x1
  407564:	b	407468 <wcrtomb@plt+0x4a58>
  407568:	sub	sp, sp, #0x90
  40756c:	stp	x29, x30, [sp, #16]
  407570:	add	x29, sp, #0x10
  407574:	stp	x23, x24, [sp, #64]
  407578:	ldr	x23, [x0, #104]
  40757c:	stp	x19, x20, [sp, #32]
  407580:	stp	x21, x22, [sp, #48]
  407584:	stp	x25, x26, [sp, #80]
  407588:	stp	x27, x28, [sp, #96]
  40758c:	cbz	x23, 4075a0 <wcrtomb@plt+0x4b90>
  407590:	mov	x27, x2
  407594:	cmp	x2, x23
  407598:	b.ge	4075c4 <wcrtomb@plt+0x4bb4>  // b.tcont
  40759c:	mov	x23, #0xffffffffffffffff    	// #-1
  4075a0:	mov	x0, x23
  4075a4:	ldp	x29, x30, [sp, #16]
  4075a8:	ldp	x19, x20, [sp, #32]
  4075ac:	ldp	x21, x22, [sp, #48]
  4075b0:	ldp	x23, x24, [sp, #64]
  4075b4:	ldp	x25, x26, [sp, #80]
  4075b8:	ldp	x27, x28, [sp, #96]
  4075bc:	add	sp, sp, #0x90
  4075c0:	ret
  4075c4:	mov	x26, x0
  4075c8:	mov	x28, x1
  4075cc:	cmp	x23, #0x1
  4075d0:	b.ne	4075f0 <wcrtomb@plt+0x4be0>  // b.any
  4075d4:	mov	x2, x0
  4075d8:	mov	x1, x27
  4075dc:	mov	x0, x28
  4075e0:	bl	4071d4 <wcrtomb@plt+0x47c4>
  4075e4:	cbz	x0, 40759c <wcrtomb@plt+0x4b8c>
  4075e8:	sub	x23, x0, x28
  4075ec:	b	4075a0 <wcrtomb@plt+0x4b90>
  4075f0:	add	x25, x0, #0x78
  4075f4:	add	x0, x1, x23
  4075f8:	str	x0, [sp, #136]
  4075fc:	mov	x0, #0xc                   	// #12
  407600:	ldr	x19, [x26, #2424]
  407604:	mul	x1, x23, x0
  407608:	smulh	x0, x23, x0
  40760c:	ldrb	w21, [x26, #2448]
  407610:	ldrb	w22, [x26, #2456]
  407614:	add	x19, x19, x23
  407618:	ldr	x20, [x26, #2440]
  40761c:	cmp	x0, x1, asr #63
  407620:	b.ne	40762c <wcrtomb@plt+0x4c1c>  // b.any
  407624:	cmp	x1, x2
  407628:	b.lt	40769c <wcrtomb@plt+0x4c8c>  // b.tstop
  40762c:	ldr	x0, [sp, #136]
  407630:	add	x27, x28, x27
  407634:	add	x26, x26, #0x980
  407638:	ldurb	w0, [x0, #-1]
  40763c:	ldrb	w15, [x25, x0]
  407640:	ldr	x0, [sp, #136]
  407644:	sxtw	x2, w15
  407648:	sub	x1, x27, x0
  40764c:	cmp	x1, w15, sxtw
  407650:	b.lt	40759c <wcrtomb@plt+0x4b8c>  // b.tstop
  407654:	add	x0, x0, x2
  407658:	str	x0, [sp, #136]
  40765c:	ldurb	w0, [x0, #-1]
  407660:	ldrb	w15, [x25, x0]
  407664:	cbnz	w15, 407640 <wcrtomb@plt+0x4c30>
  407668:	str	x26, [sp]
  40766c:	mov	w6, w22
  407670:	mov	w5, w21
  407674:	mov	x4, x20
  407678:	mov	x3, x23
  40767c:	mov	x2, x19
  407680:	mov	x1, x27
  407684:	add	x0, sp, #0x88
  407688:	mov	x7, #0x0                   	// #0
  40768c:	bl	407450 <wcrtomb@plt+0x4a40>
  407690:	tst	w0, #0xff
  407694:	b.eq	407640 <wcrtomb@plt+0x4c30>  // b.none
  407698:	b	407720 <wcrtomb@plt+0x4d10>
  40769c:	mov	x8, #0xb                   	// #11
  4076a0:	add	x0, x28, x2
  4076a4:	str	x0, [sp, #112]
  4076a8:	add	x0, x26, #0x980
  4076ac:	msub	x8, x23, x8, x2
  4076b0:	str	x0, [sp, #120]
  4076b4:	add	x24, x28, x8
  4076b8:	ldr	x1, [sp, #136]
  4076bc:	cmp	x1, x24
  4076c0:	ldurb	w0, [x1, #-1]
  4076c4:	ldrb	w4, [x25, x0]
  4076c8:	b.hi	40762c <wcrtomb@plt+0x4c1c>  // b.pmore
  4076cc:	add	x4, x1, w4, uxtb
  4076d0:	str	x4, [sp, #136]
  4076d4:	ldurb	w0, [x4, #-1]
  4076d8:	ldrb	w2, [x25, x0]
  4076dc:	ldrb	w0, [x25, x0]
  4076e0:	add	x4, x4, x0
  4076e4:	str	x4, [sp, #136]
  4076e8:	cbnz	w2, 40772c <wcrtomb@plt+0x4d1c>
  4076ec:	ldr	x0, [sp, #120]
  4076f0:	str	x0, [sp]
  4076f4:	mov	x7, x25
  4076f8:	mov	w6, w22
  4076fc:	mov	w5, w21
  407700:	mov	x4, x20
  407704:	mov	x3, x23
  407708:	mov	x2, x19
  40770c:	mov	x1, x24
  407710:	add	x0, sp, #0x88
  407714:	bl	407450 <wcrtomb@plt+0x4a40>
  407718:	tst	w0, #0xff
  40771c:	b.eq	4076b8 <wcrtomb@plt+0x4ca8>  // b.none
  407720:	ldr	x3, [sp, #136]
  407724:	sub	x23, x3, x28
  407728:	b	4075a0 <wcrtomb@plt+0x4b90>
  40772c:	ldurb	w0, [x4, #-1]
  407730:	ldrb	w0, [x25, x0]
  407734:	add	x4, x4, x0
  407738:	str	x4, [sp, #136]
  40773c:	ldurb	w0, [x4, #-1]
  407740:	ldrb	w0, [x25, x0]
  407744:	add	x4, x4, x0
  407748:	str	x4, [sp, #136]
  40774c:	ldurb	w0, [x4, #-1]
  407750:	ldrb	w2, [x25, x0]
  407754:	ldrb	w0, [x25, x0]
  407758:	add	x4, x4, x0
  40775c:	str	x4, [sp, #136]
  407760:	cbz	w2, 4076ec <wcrtomb@plt+0x4cdc>
  407764:	ldurb	w0, [x4, #-1]
  407768:	ldrb	w0, [x25, x0]
  40776c:	add	x4, x4, x0
  407770:	str	x4, [sp, #136]
  407774:	ldurb	w0, [x4, #-1]
  407778:	ldrb	w0, [x25, x0]
  40777c:	add	x4, x4, x0
  407780:	str	x4, [sp, #136]
  407784:	ldurb	w0, [x4, #-1]
  407788:	ldrb	w2, [x25, x0]
  40778c:	ldrb	w0, [x25, x0]
  407790:	add	x4, x4, x0
  407794:	str	x4, [sp, #136]
  407798:	cbz	w2, 4076ec <wcrtomb@plt+0x4cdc>
  40779c:	ldurb	w0, [x4, #-1]
  4077a0:	ldrb	w0, [x25, x0]
  4077a4:	add	x4, x4, x0
  4077a8:	str	x4, [sp, #136]
  4077ac:	ldurb	w0, [x4, #-1]
  4077b0:	ldrb	w0, [x25, x0]
  4077b4:	add	x4, x4, x0
  4077b8:	sub	x1, x4, x1
  4077bc:	cmp	x1, #0x7f
  4077c0:	b.le	4077cc <wcrtomb@plt+0x4dbc>
  4077c4:	str	x4, [sp, #136]
  4077c8:	b	4076b8 <wcrtomb@plt+0x4ca8>
  4077cc:	ldr	x1, [sp, #112]
  4077d0:	sub	x0, x4, #0x1
  4077d4:	mov	x2, x26
  4077d8:	str	x0, [sp, #136]
  4077dc:	sub	x1, x1, x0
  4077e0:	bl	4071d4 <wcrtomb@plt+0x47c4>
  4077e4:	cbz	x0, 40759c <wcrtomb@plt+0x4b8c>
  4077e8:	add	x0, x0, #0x1
  4077ec:	str	x0, [sp, #136]
  4077f0:	cmp	x0, x24
  4077f4:	b.cc	4076ec <wcrtomb@plt+0x4cdc>  // b.lo, b.ul, b.last
  4077f8:	b	40762c <wcrtomb@plt+0x4c1c>
  4077fc:	stp	x29, x30, [sp, #-32]!
  407800:	mov	x29, sp
  407804:	stp	x19, x20, [sp, #16]
  407808:	mov	x20, x0
  40780c:	mov	x19, x3
  407810:	bl	407568 <wcrtomb@plt+0x4b58>
  407814:	tbnz	x0, #63, 407824 <wcrtomb@plt+0x4e14>
  407818:	ldr	x1, [x20, #104]
  40781c:	stp	xzr, x0, [x19]
  407820:	str	x1, [x19, #16]
  407824:	ldp	x19, x20, [sp, #16]
  407828:	ldp	x29, x30, [sp], #32
  40782c:	ret
  407830:	stp	x29, x30, [sp, #-32]!
  407834:	mov	x29, sp
  407838:	stp	x19, x20, [sp, #16]
  40783c:	mov	x20, x0
  407840:	mov	x19, x1
  407844:	ldr	x0, [x0]
  407848:	cbz	x0, 407850 <wcrtomb@plt+0x4e40>
  40784c:	bl	407830 <wcrtomb@plt+0x4e20>
  407850:	ldr	x0, [x20, #8]
  407854:	cbz	x0, 407860 <wcrtomb@plt+0x4e50>
  407858:	mov	x1, x19
  40785c:	bl	407830 <wcrtomb@plt+0x4e20>
  407860:	ldr	x1, [x19]
  407864:	ldr	x0, [x20, #16]
  407868:	str	x0, [x1, #24]
  40786c:	str	x0, [x19]
  407870:	ldp	x19, x20, [sp, #16]
  407874:	ldp	x29, x30, [sp], #32
  407878:	ret
  40787c:	stp	x29, x30, [sp, #-32]!
  407880:	mov	x29, sp
  407884:	stp	x19, x20, [sp, #16]
  407888:	mov	x20, x0
  40788c:	mov	x0, #0x9a8                 	// #2472
  407890:	bl	41102c <wcrtomb@plt+0xe61c>
  407894:	mov	x19, x0
  407898:	mov	x1, #0x0                   	// #0
  40789c:	adrp	x4, 402000 <mbrtowc@plt-0x350>
  4078a0:	adrp	x3, 411000 <wcrtomb@plt+0xe5f0>
  4078a4:	add	x4, x4, #0x7a0
  4078a8:	add	x3, x3, #0x2c
  4078ac:	mov	x2, #0x0                   	// #0
  4078b0:	bl	413520 <_obstack_begin@@Base>
  4078b4:	str	xzr, [x19, #88]
  4078b8:	ldp	x1, x0, [x19, #24]
  4078bc:	sub	x0, x0, x1
  4078c0:	cmp	x0, #0x3f
  4078c4:	b.hi	4078d4 <wcrtomb@plt+0x4ec4>  // b.pmore
  4078c8:	mov	x0, x19
  4078cc:	mov	x1, #0x40                  	// #64
  4078d0:	bl	41354c <_obstack_newchunk@@Base>
  4078d4:	ldp	x1, x3, [x19, #16]
  4078d8:	add	x3, x3, #0x40
  4078dc:	cmp	x3, x1
  4078e0:	b.ne	4078f0 <wcrtomb@plt+0x4ee0>  // b.any
  4078e4:	ldrb	w0, [x19, #80]
  4078e8:	orr	w0, w0, #0x2
  4078ec:	strb	w0, [x19, #80]
  4078f0:	ldr	x2, [x19, #48]
  4078f4:	str	x1, [x19, #96]
  4078f8:	ldr	x0, [x19, #32]
  4078fc:	add	x3, x3, x2
  407900:	bic	x2, x3, x2
  407904:	ldr	x3, [x19, #8]
  407908:	sub	x4, x2, x3
  40790c:	sub	x3, x0, x3
  407910:	cmp	x4, x3
  407914:	csel	x2, x2, x0, ls  // ls = plast
  407918:	stp	x2, x2, [x19, #16]
  40791c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  407920:	stp	xzr, xzr, [x1]
  407924:	stp	xzr, xzr, [x1, #16]
  407928:	stp	xzr, xzr, [x1, #32]
  40792c:	str	xzr, [x1, #48]
  407930:	str	x0, [x19, #104]
  407934:	mov	x0, #0xffffffffffffffff    	// #-1
  407938:	str	x0, [x19, #112]
  40793c:	adrp	x0, 407000 <wcrtomb@plt+0x45f0>
  407940:	add	x0, x0, #0x44c
  407944:	str	xzr, [x19, #2424]
  407948:	str	x20, [x19, #2440]
  40794c:	str	x0, [x19, #2464]
  407950:	mov	x0, x19
  407954:	ldp	x19, x20, [sp, #16]
  407958:	ldp	x29, x30, [sp], #32
  40795c:	ret
  407960:	stp	x29, x30, [sp, #-256]!
  407964:	mov	x29, sp
  407968:	stp	x19, x20, [sp, #16]
  40796c:	mov	x19, x0
  407970:	adrp	x20, 407000 <wcrtomb@plt+0x45f0>
  407974:	stp	x23, x24, [sp, #48]
  407978:	add	x20, x20, #0x7fc
  40797c:	ldr	x24, [x0, #96]
  407980:	stp	x21, x22, [sp, #32]
  407984:	mov	x22, x2
  407988:	ldr	x0, [x0, #2440]
  40798c:	str	x0, [sp, #104]
  407990:	ldr	x0, [x19, #2464]
  407994:	stp	x25, x26, [sp, #64]
  407998:	stp	x27, x28, [sp, #80]
  40799c:	cmp	x0, x20
  4079a0:	mov	x27, x1
  4079a4:	str	x0, [sp, #96]
  4079a8:	b.ne	4079b0 <wcrtomb@plt+0x4fa0>  // b.any
  4079ac:	add	x27, x1, x2
  4079b0:	add	x23, sp, #0xa0
  4079b4:	add	x28, sp, #0x70
  4079b8:	b	407a08 <wcrtomb@plt+0x4ff8>
  4079bc:	ldr	x0, [sp, #96]
  4079c0:	cmp	x0, x20
  4079c4:	b.ne	407a74 <wcrtomb@plt+0x5064>  // b.any
  4079c8:	ldurb	w21, [x27, #-1]
  4079cc:	sub	x27, x27, #0x1
  4079d0:	ldr	x0, [sp, #104]
  4079d4:	cbz	x0, 4079e0 <wcrtomb@plt+0x4fd0>
  4079d8:	and	x4, x21, #0xff
  4079dc:	ldrb	w21, [x0, x4]
  4079e0:	mov	x0, x24
  4079e4:	mov	x25, #0x1                   	// #1
  4079e8:	str	wzr, [sp, #112]
  4079ec:	ldr	x26, [x0, #8]!
  4079f0:	str	x0, [sp, #160]
  4079f4:	cbz	x26, 407bdc <wcrtomb@plt+0x51cc>
  4079f8:	ldrb	w0, [x26, #24]
  4079fc:	cmp	w0, w21
  407a00:	b.ne	407a7c <wcrtomb@plt+0x506c>  // b.any
  407a04:	ldr	x24, [x26, #16]
  407a08:	sub	x22, x22, #0x1
  407a0c:	cmn	x22, #0x1
  407a10:	b.ne	4079bc <wcrtomb@plt+0x4fac>  // b.any
  407a14:	ldr	x1, [x24]
  407a18:	ldr	x0, [x19, #88]
  407a1c:	cbnz	x1, 407a2c <wcrtomb@plt+0x501c>
  407a20:	lsl	x1, x0, #1
  407a24:	add	x1, x1, #0x1
  407a28:	str	x1, [x24]
  407a2c:	add	x0, x0, #0x1
  407a30:	str	x0, [x19, #88]
  407a34:	ldr	x0, [x24, #40]
  407a38:	ldr	x1, [x19, #104]
  407a3c:	cmp	x0, x1
  407a40:	b.ge	407a48 <wcrtomb@plt+0x5038>  // b.tcont
  407a44:	str	x0, [x19, #104]
  407a48:	ldr	x1, [x19, #112]
  407a4c:	cmp	x0, x1
  407a50:	b.le	407a58 <wcrtomb@plt+0x5048>
  407a54:	str	x0, [x19, #112]
  407a58:	ldp	x19, x20, [sp, #16]
  407a5c:	ldp	x21, x22, [sp, #32]
  407a60:	ldp	x23, x24, [sp, #48]
  407a64:	ldp	x25, x26, [sp, #64]
  407a68:	ldp	x27, x28, [sp, #80]
  407a6c:	ldp	x29, x30, [sp], #256
  407a70:	ret
  407a74:	ldrb	w21, [x27], #1
  407a78:	b	4079d0 <wcrtomb@plt+0x4fc0>
  407a7c:	str	x26, [x23, x25, lsl #3]
  407a80:	b.ls	407a94 <wcrtomb@plt+0x5084>  // b.plast
  407a84:	ldr	x26, [x26]
  407a88:	str	wzr, [x28, x25, lsl #2]
  407a8c:	add	x25, x25, #0x1
  407a90:	b	4079f4 <wcrtomb@plt+0x4fe4>
  407a94:	mov	w0, #0x1                   	// #1
  407a98:	str	w0, [x28, x25, lsl #2]
  407a9c:	ldr	x26, [x26, #8]
  407aa0:	b	407a8c <wcrtomb@plt+0x507c>
  407aa4:	str	x26, [x0, #8]
  407aa8:	b	407cd4 <wcrtomb@plt+0x52c4>
  407aac:	cmp	w1, #0x0
  407ab0:	mov	w0, #0xff                  	// #255
  407ab4:	sub	x4, x4, #0x1
  407ab8:	csinc	w0, w0, wzr, eq  // eq = none
  407abc:	strb	w0, [x3, #25]
  407ac0:	b	407cd4 <wcrtomb@plt+0x52c4>
  407ac4:	sub	w0, w0, #0x1
  407ac8:	and	w0, w0, #0xff
  407acc:	strb	w0, [x3, #25]
  407ad0:	cbz	w0, 407a04 <wcrtomb@plt+0x4ff4>
  407ad4:	ldrb	w1, [x3, #25]
  407ad8:	add	x0, x4, #0x1
  407adc:	cmp	w1, #0x2
  407ae0:	b.eq	407b70 <wcrtomb@plt+0x5160>  // b.none
  407ae4:	cmp	w1, #0xfe
  407ae8:	b.eq	407af0 <wcrtomb@plt+0x50e0>  // b.none
  407aec:	bl	4026f0 <abort@plt>
  407af0:	ldr	w0, [x28, x0, lsl #2]
  407af4:	cbz	w0, 407b58 <wcrtomb@plt+0x5148>
  407af8:	cmp	w0, #0x1
  407afc:	b.ne	407aec <wcrtomb@plt+0x50dc>  // b.any
  407b00:	ldr	x1, [x3]
  407b04:	ldr	x0, [x1, #8]
  407b08:	ldp	x7, x6, [x0]
  407b0c:	str	x1, [x0]
  407b10:	str	x7, [x1, #8]
  407b14:	str	x3, [x0, #8]
  407b18:	str	x6, [x3]
  407b1c:	ldrb	w6, [x0, #25]
  407b20:	cmp	w6, #0x1
  407b24:	csetm	w6, eq  // eq = none
  407b28:	strb	w6, [x1, #25]
  407b2c:	ldrb	w1, [x0, #25]
  407b30:	cmp	w1, #0xff
  407b34:	cset	w1, eq  // eq = none
  407b38:	strb	w1, [x3, #25]
  407b3c:	sub	x4, x4, #0x1
  407b40:	strb	wzr, [x0, #25]
  407b44:	ldr	w3, [x28, x4, lsl #2]
  407b48:	ldr	x1, [x23, x4, lsl #3]
  407b4c:	cbnz	w3, 407bd4 <wcrtomb@plt+0x51c4>
  407b50:	str	x0, [x1]
  407b54:	b	407a04 <wcrtomb@plt+0x4ff4>
  407b58:	ldr	x0, [x3]
  407b5c:	ldr	x1, [x0, #8]
  407b60:	str	x3, [x0, #8]
  407b64:	str	x1, [x3]
  407b68:	strb	wzr, [x3, #25]
  407b6c:	b	407b3c <wcrtomb@plt+0x512c>
  407b70:	ldr	w0, [x28, x0, lsl #2]
  407b74:	cbz	w0, 407b94 <wcrtomb@plt+0x5184>
  407b78:	cmp	w0, #0x1
  407b7c:	b.ne	407aec <wcrtomb@plt+0x50dc>  // b.any
  407b80:	ldr	x0, [x3, #8]
  407b84:	ldr	x1, [x0]
  407b88:	str	x3, [x0]
  407b8c:	str	x1, [x3, #8]
  407b90:	b	407b68 <wcrtomb@plt+0x5158>
  407b94:	ldr	x1, [x3, #8]
  407b98:	ldr	x0, [x1]
  407b9c:	ldp	x7, x6, [x0]
  407ba0:	str	x3, [x0]
  407ba4:	str	x7, [x3, #8]
  407ba8:	str	x1, [x0, #8]
  407bac:	str	x6, [x1]
  407bb0:	ldrb	w6, [x0, #25]
  407bb4:	cmp	w6, #0x1
  407bb8:	csetm	w6, eq  // eq = none
  407bbc:	strb	w6, [x3, #25]
  407bc0:	ldrb	w3, [x0, #25]
  407bc4:	cmp	w3, #0xff
  407bc8:	cset	w3, eq  // eq = none
  407bcc:	strb	w3, [x1, #25]
  407bd0:	b	407b3c <wcrtomb@plt+0x512c>
  407bd4:	str	x0, [x1, #8]
  407bd8:	b	407a04 <wcrtomb@plt+0x4ff4>
  407bdc:	ldp	x1, x0, [x19, #24]
  407be0:	sub	x0, x0, x1
  407be4:	cmp	x0, #0x1f
  407be8:	b.hi	407bf8 <wcrtomb@plt+0x51e8>  // b.pmore
  407bec:	mov	x0, x19
  407bf0:	mov	x1, #0x20                  	// #32
  407bf4:	bl	41354c <_obstack_newchunk@@Base>
  407bf8:	ldp	x26, x1, [x19, #16]
  407bfc:	add	x1, x1, #0x20
  407c00:	cmp	x1, x26
  407c04:	b.ne	407c14 <wcrtomb@plt+0x5204>  // b.any
  407c08:	ldrb	w0, [x19, #80]
  407c0c:	orr	w0, w0, #0x2
  407c10:	strb	w0, [x19, #80]
  407c14:	ldr	x0, [x19, #48]
  407c18:	ldr	x6, [x19, #8]
  407c1c:	add	x1, x1, x0
  407c20:	bic	x0, x1, x0
  407c24:	ldr	x1, [x19, #32]
  407c28:	sub	x7, x0, x6
  407c2c:	sub	x6, x1, x6
  407c30:	cmp	x7, x6
  407c34:	csel	x0, x0, x1, ls  // ls = plast
  407c38:	stp	x0, x0, [x19, #16]
  407c3c:	sub	x0, x1, x0
  407c40:	stp	xzr, xzr, [x26]
  407c44:	cmp	x0, #0x3f
  407c48:	b.hi	407c58 <wcrtomb@plt+0x5248>  // b.pmore
  407c4c:	mov	x0, x19
  407c50:	mov	x1, #0x40                  	// #64
  407c54:	bl	41354c <_obstack_newchunk@@Base>
  407c58:	ldp	x0, x6, [x19, #16]
  407c5c:	add	x6, x6, #0x40
  407c60:	cmp	x6, x0
  407c64:	b.ne	407c74 <wcrtomb@plt+0x5264>  // b.any
  407c68:	ldrb	w1, [x19, #80]
  407c6c:	orr	w1, w1, #0x2
  407c70:	strb	w1, [x19, #80]
  407c74:	ldr	x1, [x19, #48]
  407c78:	sub	x4, x25, #0x1
  407c7c:	ldr	x7, [x19, #32]
  407c80:	add	x6, x6, x1
  407c84:	bic	x1, x6, x1
  407c88:	ldr	x6, [x19, #8]
  407c8c:	sub	x8, x1, x6
  407c90:	sub	x6, x7, x6
  407c94:	cmp	x8, x6
  407c98:	csel	x1, x1, x7, ls  // ls = plast
  407c9c:	stp	x1, x1, [x19, #16]
  407ca0:	ldr	x1, [x24, #40]
  407ca4:	str	x0, [x26, #16]
  407ca8:	stp	xzr, xzr, [x0]
  407cac:	add	x1, x1, #0x1
  407cb0:	stp	xzr, x1, [x0, #32]
  407cb4:	ldr	w1, [x28, x4, lsl #2]
  407cb8:	stp	x24, xzr, [x0, #16]
  407cbc:	str	xzr, [x0, #48]
  407cc0:	strb	w21, [x26, #24]
  407cc4:	strb	wzr, [x26, #25]
  407cc8:	ldr	x0, [x23, x4, lsl #3]
  407ccc:	cbnz	w1, 407aa4 <wcrtomb@plt+0x5094>
  407cd0:	str	x26, [x0]
  407cd4:	cbz	x4, 407a04 <wcrtomb@plt+0x4ff4>
  407cd8:	ldr	x3, [x23, x4, lsl #3]
  407cdc:	ldr	w1, [x28, x4, lsl #2]
  407ce0:	ldrb	w0, [x3, #25]
  407ce4:	cbz	w0, 407aac <wcrtomb@plt+0x509c>
  407ce8:	cbz	w1, 407ac4 <wcrtomb@plt+0x50b4>
  407cec:	cmp	w1, #0x1
  407cf0:	b.ne	407a04 <wcrtomb@plt+0x4ff4>  // b.any
  407cf4:	add	w0, w0, #0x1
  407cf8:	b	407ac8 <wcrtomb@plt+0x50b8>
  407cfc:	ldr	x0, [x0, #88]
  407d00:	ret
  407d04:	sub	sp, sp, #0x950
  407d08:	stp	x29, x30, [sp]
  407d0c:	mov	x29, sp
  407d10:	stp	x19, x20, [sp, #16]
  407d14:	mov	x19, x0
  407d18:	add	x0, x0, #0x78
  407d1c:	ldr	x20, [x0, #2320]
  407d20:	stp	x21, x22, [sp, #32]
  407d24:	add	x21, sp, #0x50
  407d28:	ldr	x22, [x19, #88]
  407d2c:	cmp	x20, #0x0
  407d30:	stp	x23, x24, [sp, #48]
  407d34:	csel	x21, x21, x0, ne  // ne = any
  407d38:	cmp	x22, #0x1
  407d3c:	cset	w23, eq  // eq = none
  407d40:	b.ne	407e14 <wcrtomb@plt+0x5404>  // b.any
  407d44:	ldr	x2, [x19, #96]
  407d48:	str	x2, [sp, #72]
  407d4c:	cbnz	x2, 40803c <wcrtomb@plt+0x562c>
  407d50:	ldp	x1, x0, [x19, #24]
  407d54:	ldr	x24, [x19, #104]
  407d58:	sub	x0, x0, x1
  407d5c:	cmp	x24, x0
  407d60:	b.ls	407d70 <wcrtomb@plt+0x5360>  // b.plast
  407d64:	mov	x1, x24
  407d68:	mov	x0, x19
  407d6c:	bl	41354c <_obstack_newchunk@@Base>
  407d70:	ldp	x2, x0, [x19, #16]
  407d74:	add	x1, x0, x24
  407d78:	cmp	x1, x2
  407d7c:	b.ne	407d8c <wcrtomb@plt+0x537c>  // b.any
  407d80:	ldrb	w0, [x19, #80]
  407d84:	orr	w0, w0, #0x2
  407d88:	strb	w0, [x19, #80]
  407d8c:	ldr	x0, [x19, #48]
  407d90:	str	x2, [x19, #2424]
  407d94:	ldr	x3, [x19, #32]
  407d98:	add	x1, x1, x0
  407d9c:	bic	x0, x1, x0
  407da0:	ldr	x1, [x19, #8]
  407da4:	sub	x4, x0, x1
  407da8:	sub	x1, x3, x1
  407dac:	cmp	x4, x1
  407db0:	ldr	x1, [x19, #96]
  407db4:	csel	x0, x0, x3, ls  // ls = plast
  407db8:	stp	x0, x0, [x19, #16]
  407dbc:	mov	x0, #0x0                   	// #0
  407dc0:	ldr	x2, [x19, #104]
  407dc4:	cmp	x2, x0
  407dc8:	b.gt	408054 <wcrtomb@plt+0x5644>
  407dcc:	ldr	x0, [x19, #2440]
  407dd0:	bl	40787c <wcrtomb@plt+0x4e6c>
  407dd4:	mov	x24, x0
  407dd8:	adrp	x1, 407000 <wcrtomb@plt+0x45f0>
  407ddc:	add	x1, x1, #0x7fc
  407de0:	ldr	x2, [x19, #104]
  407de4:	str	x1, [x0, #2464]
  407de8:	ldr	x1, [x19, #2424]
  407dec:	bl	407960 <wcrtomb@plt+0x4f50>
  407df0:	mov	x0, x19
  407df4:	mov	x1, #0x0                   	// #0
  407df8:	bl	41368c <_obstack_free@@Base>
  407dfc:	mov	x1, x24
  407e00:	mov	x2, #0x9a8                 	// #2472
  407e04:	mov	x0, x19
  407e08:	bl	402360 <memcpy@plt>
  407e0c:	mov	x0, x24
  407e10:	bl	4027a0 <free@plt>
  407e14:	ldr	x0, [x19, #104]
  407e18:	mov	x2, #0x100                 	// #256
  407e1c:	mov	x1, #0xff                  	// #255
  407e20:	cmp	x0, #0xff
  407e24:	csel	x1, x0, x1, le
  407e28:	mov	x0, x21
  407e2c:	bl	4025f0 <memset@plt>
  407e30:	ldr	x4, [x19, #96]
  407e34:	str	x4, [sp, #72]
  407e38:	cbnz	x4, 408070 <wcrtomb@plt+0x5660>
  407e3c:	cmp	x22, #0x1
  407e40:	b.eq	408120 <wcrtomb@plt+0x5710>  // b.none
  407e44:	cmp	x20, #0x0
  407e48:	add	x24, x19, #0x178
  407e4c:	add	x23, sp, #0x150
  407e50:	mov	x2, #0x800                 	// #2048
  407e54:	csel	x23, x23, x24, ne  // ne = any
  407e58:	mov	w1, #0x0                   	// #0
  407e5c:	mov	x0, x23
  407e60:	bl	4025f0 <memset@plt>
  407e64:	ldr	x0, [x19, #96]
  407e68:	mov	x1, x23
  407e6c:	ldr	x0, [x0, #8]
  407e70:	bl	40718c <wcrtomb@plt+0x477c>
  407e74:	mov	w2, #0xffffffff            	// #-1
  407e78:	mov	w5, w2
  407e7c:	mov	w1, #0xfffffffe            	// #-2
  407e80:	mov	x0, #0x0                   	// #0
  407e84:	mov	w4, w0
  407e88:	cbz	x20, 408158 <wcrtomb@plt+0x5748>
  407e8c:	ldrb	w6, [x20, x0]
  407e90:	ldrb	w3, [x20, x0]
  407e94:	ldr	x6, [x23, x6, lsl #3]
  407e98:	str	x6, [x24, x0, lsl #3]
  407e9c:	ldr	x6, [x24, x0, lsl #3]
  407ea0:	cbz	x6, 407ebc <wcrtomb@plt+0x54ac>
  407ea4:	cmn	w1, #0x1
  407ea8:	b.lt	408178 <wcrtomb@plt+0x5768>  // b.tstop
  407eac:	cmp	w3, w1
  407eb0:	b.ne	408160 <wcrtomb@plt+0x5750>  // b.any
  407eb4:	cmp	w1, w2
  407eb8:	csel	w2, w4, w5, eq  // eq = none
  407ebc:	add	x0, x0, #0x1
  407ec0:	cmp	x0, #0x100
  407ec4:	b.ne	407e84 <wcrtomb@plt+0x5474>  // b.any
  407ec8:	str	w1, [x19, #2448]
  407ecc:	cmp	x22, #0x1
  407ed0:	str	w2, [x19, #2452]
  407ed4:	b.ne	408000 <wcrtomb@plt+0x55f0>  // b.any
  407ed8:	ldp	x1, x0, [x19, #24]
  407edc:	ldr	x22, [x19, #104]
  407ee0:	sub	x0, x0, x1
  407ee4:	cmp	x22, x0
  407ee8:	b.ls	407ef8 <wcrtomb@plt+0x54e8>  // b.plast
  407eec:	mov	x1, x22
  407ef0:	mov	x0, x19
  407ef4:	bl	41354c <_obstack_newchunk@@Base>
  407ef8:	ldp	x2, x0, [x19, #16]
  407efc:	add	x1, x0, x22
  407f00:	cmp	x1, x2
  407f04:	b.ne	407f14 <wcrtomb@plt+0x5504>  // b.any
  407f08:	ldrb	w0, [x19, #80]
  407f0c:	orr	w0, w0, #0x2
  407f10:	strb	w0, [x19, #80]
  407f14:	ldr	x0, [x19, #48]
  407f18:	str	x2, [x19, #2424]
  407f1c:	ldr	x3, [x19, #32]
  407f20:	add	x1, x1, x0
  407f24:	bic	x0, x1, x0
  407f28:	ldr	x1, [x19, #8]
  407f2c:	sub	x4, x0, x1
  407f30:	sub	x1, x3, x1
  407f34:	cmp	x4, x1
  407f38:	csel	x0, x0, x3, ls  // ls = plast
  407f3c:	stp	x0, x0, [x19, #16]
  407f40:	ldr	x0, [x19, #104]
  407f44:	ldr	x1, [x19, #96]
  407f48:	sub	x0, x0, #0x1
  407f4c:	tbz	x0, #63, 40818c <wcrtomb@plt+0x577c>
  407f50:	ldr	x0, [x19, #104]
  407f54:	cmp	x0, #0x1
  407f58:	b.le	408000 <wcrtomb@plt+0x55f0>
  407f5c:	ldp	x1, x2, [x19, #24]
  407f60:	sub	x0, x0, #0x1
  407f64:	lsl	x22, x0, #3
  407f68:	sub	x2, x2, x1
  407f6c:	cmp	x2, x0, lsl #3
  407f70:	b.cs	407f80 <wcrtomb@plt+0x5570>  // b.hs, b.nlast
  407f74:	mov	x1, x22
  407f78:	mov	x0, x19
  407f7c:	bl	41354c <_obstack_newchunk@@Base>
  407f80:	ldp	x2, x0, [x19, #16]
  407f84:	add	x1, x0, x22
  407f88:	cmp	x1, x2
  407f8c:	b.ne	407f9c <wcrtomb@plt+0x558c>  // b.any
  407f90:	ldrb	w0, [x19, #80]
  407f94:	orr	w0, w0, #0x2
  407f98:	strb	w0, [x19, #80]
  407f9c:	ldr	x0, [x19, #48]
  407fa0:	str	x2, [x19, #2432]
  407fa4:	ldr	x3, [x19, #32]
  407fa8:	add	x1, x1, x0
  407fac:	bic	x0, x1, x0
  407fb0:	ldr	x1, [x19, #8]
  407fb4:	sub	x4, x0, x1
  407fb8:	sub	x1, x3, x1
  407fbc:	cmp	x4, x1
  407fc0:	csel	x0, x0, x3, ls  // ls = plast
  407fc4:	stp	x0, x0, [x19, #16]
  407fc8:	ldr	x0, [x19, #96]
  407fcc:	ldr	x1, [x0, #24]
  407fd0:	mov	x0, #0x0                   	// #0
  407fd4:	ldr	x3, [x19, #104]
  407fd8:	sub	x4, x3, #0x1
  407fdc:	cmp	x4, x0
  407fe0:	b.gt	4081a8 <wcrtomb@plt+0x5798>
  407fe4:	ldr	x0, [x19, #2424]
  407fe8:	add	x0, x0, x3
  407fec:	ldurb	w0, [x0, #-2]
  407ff0:	cbz	x20, 407ffc <wcrtomb@plt+0x55ec>
  407ff4:	and	x0, x0, #0xff
  407ff8:	ldrb	w0, [x20, x0]
  407ffc:	strb	w0, [x19, #2456]
  408000:	cbz	x20, 408024 <wcrtomb@plt+0x5614>
  408004:	add	x19, x19, #0x78
  408008:	mov	x0, #0x0                   	// #0
  40800c:	ldrb	w1, [x20, x0]
  408010:	ldrb	w1, [x21, x1]
  408014:	strb	w1, [x19, x0]
  408018:	add	x0, x0, #0x1
  40801c:	cmp	x0, #0x100
  408020:	b.ne	40800c <wcrtomb@plt+0x55fc>  // b.any
  408024:	ldp	x29, x30, [sp]
  408028:	ldp	x19, x20, [sp, #16]
  40802c:	ldp	x21, x22, [sp, #32]
  408030:	ldp	x23, x24, [sp, #48]
  408034:	add	sp, sp, #0x950
  408038:	ret
  40803c:	ldr	x0, [x2, #8]
  408040:	cbz	x0, 40804c <wcrtomb@plt+0x563c>
  408044:	add	x1, sp, #0x48
  408048:	bl	407830 <wcrtomb@plt+0x4e20>
  40804c:	ldr	x2, [x2, #24]
  408050:	b	407d4c <wcrtomb@plt+0x533c>
  408054:	ldr	x2, [x1, #8]
  408058:	ldrb	w3, [x2, #24]
  40805c:	ldr	x2, [x19, #2424]
  408060:	strb	w3, [x2, x0]
  408064:	add	x0, x0, #0x1
  408068:	ldr	x1, [x1, #24]
  40806c:	b	407dc0 <wcrtomb@plt+0x53b0>
  408070:	ldr	x0, [x4, #8]
  408074:	cbz	x0, 408080 <wcrtomb@plt+0x5670>
  408078:	add	x1, sp, #0x48
  40807c:	bl	407830 <wcrtomb@plt+0x4e20>
  408080:	ldr	x0, [x4, #8]
  408084:	mov	x2, x21
  408088:	ldr	x1, [x4, #40]
  40808c:	bl	4070b4 <wcrtomb@plt+0x46a4>
  408090:	ldr	x0, [x4, #8]
  408094:	mov	w3, w23
  408098:	ldr	x1, [x4, #32]
  40809c:	ldr	x2, [x19, #96]
  4080a0:	bl	406ff8 <wcrtomb@plt+0x45e8>
  4080a4:	cmp	x22, #0x1
  4080a8:	b.eq	4080b4 <wcrtomb@plt+0x56a4>  // b.none
  4080ac:	ldr	x4, [x4, #24]
  4080b0:	b	407e38 <wcrtomb@plt+0x5428>
  4080b4:	ldr	x2, [x4, #32]
  4080b8:	ldr	x0, [x19, #104]
  4080bc:	stp	x0, x0, [x4, #48]
  4080c0:	cbz	x2, 4080ac <wcrtomb@plt+0x569c>
  4080c4:	ldr	x0, [x2, #8]
  4080c8:	ldr	x1, [x4, #8]
  4080cc:	bl	407114 <wcrtomb@plt+0x4704>
  4080d0:	tst	w0, #0xff
  4080d4:	b.ne	4080f4 <wcrtomb@plt+0x56e4>  // b.any
  4080d8:	ldr	x1, [x2, #40]
  4080dc:	ldr	x0, [x4, #40]
  4080e0:	sub	x0, x0, x1
  4080e4:	ldr	x1, [x2, #48]
  4080e8:	cmp	x0, x1
  4080ec:	b.ge	4080f4 <wcrtomb@plt+0x56e4>  // b.tcont
  4080f0:	str	x0, [x2, #48]
  4080f4:	ldr	x0, [x4]
  4080f8:	cbz	x0, 408118 <wcrtomb@plt+0x5708>
  4080fc:	ldr	x1, [x2, #40]
  408100:	ldr	x0, [x4, #40]
  408104:	sub	x0, x0, x1
  408108:	ldr	x1, [x2, #56]
  40810c:	cmp	x1, x0
  408110:	b.le	408118 <wcrtomb@plt+0x5708>
  408114:	str	x0, [x2, #56]
  408118:	ldr	x2, [x2, #32]
  40811c:	b	4080c0 <wcrtomb@plt+0x56b0>
  408120:	ldr	x0, [x19, #96]
  408124:	ldr	x0, [x0, #24]
  408128:	cbz	x0, 407e44 <wcrtomb@plt+0x5434>
  40812c:	ldr	x1, [x0, #16]
  408130:	ldr	x2, [x0, #56]
  408134:	ldr	x1, [x1, #56]
  408138:	cmp	x2, x1
  40813c:	b.le	408144 <wcrtomb@plt+0x5734>
  408140:	str	x1, [x0, #56]
  408144:	ldp	x2, x1, [x0, #48]
  408148:	cmp	x2, x1
  40814c:	b.le	408124 <wcrtomb@plt+0x5714>
  408150:	str	x1, [x0, #48]
  408154:	b	408124 <wcrtomb@plt+0x5714>
  408158:	mov	w3, w0
  40815c:	b	407e9c <wcrtomb@plt+0x548c>
  408160:	cmp	x0, w3, sxtw
  408164:	b.ne	408184 <wcrtomb@plt+0x5774>  // b.any
  408168:	cmp	w1, w2
  40816c:	b.ne	408184 <wcrtomb@plt+0x5774>  // b.any
  408170:	mov	w2, w4
  408174:	b	407ebc <wcrtomb@plt+0x54ac>
  408178:	mov	w2, w4
  40817c:	mov	w1, w3
  408180:	b	407ebc <wcrtomb@plt+0x54ac>
  408184:	mov	w1, #0xffffffff            	// #-1
  408188:	b	407ebc <wcrtomb@plt+0x54ac>
  40818c:	ldr	x2, [x1, #8]
  408190:	ldrb	w3, [x2, #24]
  408194:	ldr	x2, [x19, #2424]
  408198:	strb	w3, [x2, x0]
  40819c:	sub	x0, x0, #0x1
  4081a0:	ldr	x1, [x1, #24]
  4081a4:	b	407f4c <wcrtomb@plt+0x553c>
  4081a8:	ldr	x3, [x1, #48]
  4081ac:	ldr	x1, [x1, #24]
  4081b0:	str	x3, [x2, x0, lsl #3]
  4081b4:	add	x0, x0, #0x1
  4081b8:	b	407fd4 <wcrtomb@plt+0x55c4>
  4081bc:	ldr	x5, [x0, #2464]
  4081c0:	mov	x16, x5
  4081c4:	br	x16
  4081c8:	stp	x29, x30, [sp, #-32]!
  4081cc:	mov	x1, #0x0                   	// #0
  4081d0:	mov	x29, sp
  4081d4:	str	x19, [sp, #16]
  4081d8:	mov	x19, x0
  4081dc:	bl	41368c <_obstack_free@@Base>
  4081e0:	mov	x0, x19
  4081e4:	ldr	x19, [sp, #16]
  4081e8:	ldp	x29, x30, [sp], #32
  4081ec:	b	4027a0 <free@plt>
  4081f0:	stp	x29, x30, [sp, #-96]!
  4081f4:	mov	x29, sp
  4081f8:	stp	x19, x20, [sp, #16]
  4081fc:	mov	x20, x0
  408200:	mov	x19, #0x0                   	// #0
  408204:	stp	x21, x22, [sp, #32]
  408208:	mov	x22, x1
  40820c:	stp	x23, x24, [sp, #48]
  408210:	adrp	x23, 437000 <_obstack_memory_used@@Base+0x23900>
  408214:	adrp	x24, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408218:	add	x23, x23, #0x668
  40821c:	add	x24, x24, #0x8e8
  408220:	str	x25, [sp, #64]
  408224:	and	w25, w2, #0xff
  408228:	str	xzr, [sp, #88]
  40822c:	sub	x2, x22, x20
  408230:	cmp	x2, x19
  408234:	b.ls	408250 <wcrtomb@plt+0x5840>  // b.plast
  408238:	ldrb	w0, [x20, x19]
  40823c:	add	x1, x20, x19
  408240:	ldrb	w3, [x23, x0]
  408244:	cbz	w3, 40826c <wcrtomb@plt+0x585c>
  408248:	add	x19, x19, #0x1
  40824c:	cbnz	w25, 40822c <wcrtomb@plt+0x581c>
  408250:	mov	x0, x19
  408254:	ldp	x19, x20, [sp, #16]
  408258:	ldp	x21, x22, [sp, #32]
  40825c:	ldp	x23, x24, [sp, #48]
  408260:	ldr	x25, [sp, #64]
  408264:	ldp	x29, x30, [sp], #96
  408268:	ret
  40826c:	add	x0, x24, x0
  408270:	ldrsb	w0, [x0, #3]
  408274:	cmn	w0, #0x2
  408278:	b.ne	408250 <wcrtomb@plt+0x5840>  // b.any
  40827c:	add	x3, sp, #0x58
  408280:	sub	x2, x2, x19
  408284:	add	x0, sp, #0x54
  408288:	str	wzr, [sp, #84]
  40828c:	bl	413374 <wcrtomb@plt+0x10964>
  408290:	mov	x21, x0
  408294:	ldr	w0, [sp, #84]
  408298:	cmp	w0, #0x5f
  40829c:	b.eq	4082a8 <wcrtomb@plt+0x5898>  // b.none
  4082a0:	bl	4028b0 <iswalnum@plt>
  4082a4:	cbz	w0, 408250 <wcrtomb@plt+0x5840>
  4082a8:	add	x19, x19, x21
  4082ac:	cmp	x21, #0x0
  4082b0:	cinc	x19, x19, eq  // eq = none
  4082b4:	b	40824c <wcrtomb@plt+0x583c>
  4082b8:	ret
  4082bc:	ldrb	w4, [x0]
  4082c0:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4082c4:	add	x3, x3, #0x8e8
  4082c8:	add	x3, x3, x4
  4082cc:	ldrsb	x3, [x3, #3]
  4082d0:	cmn	x3, #0x2
  4082d4:	b.ne	4082dc <wcrtomb@plt+0x58cc>  // b.any
  4082d8:	b	413354 <wcrtomb@plt+0x10944>
  4082dc:	mov	x0, x3
  4082e0:	ret
  4082e4:	stp	x29, x30, [sp, #-48]!
  4082e8:	mov	x29, sp
  4082ec:	stp	x19, x20, [sp, #16]
  4082f0:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x23900>
  4082f4:	add	x20, x20, #0x668
  4082f8:	str	x21, [sp, #32]
  4082fc:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408300:	add	x21, x21, #0x9ec
  408304:	mov	x19, #0x0                   	// #0
  408308:	ldr	w0, [x21, x19, lsl #2]
  40830c:	cmp	w0, #0x5f
  408310:	b.eq	408340 <wcrtomb@plt+0x5930>  // b.none
  408314:	bl	4028b0 <iswalnum@plt>
  408318:	cmp	w0, #0x0
  40831c:	cset	w0, ne  // ne = any
  408320:	strb	w0, [x20, x19]
  408324:	add	x19, x19, #0x1
  408328:	cmp	x19, #0x100
  40832c:	b.ne	408308 <wcrtomb@plt+0x58f8>  // b.any
  408330:	ldp	x19, x20, [sp, #16]
  408334:	ldr	x21, [sp, #32]
  408338:	ldp	x29, x30, [sp], #48
  40833c:	ret
  408340:	mov	w0, #0x1                   	// #1
  408344:	b	408320 <wcrtomb@plt+0x5910>
  408348:	stp	x29, x30, [sp, #-64]!
  40834c:	mov	x29, sp
  408350:	stp	x19, x20, [sp, #16]
  408354:	and	w19, w0, #0xff
  408358:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  40835c:	stp	x21, x22, [sp, #32]
  408360:	ldrb	w0, [x0, #3566]
  408364:	cbnz	w0, 408384 <wcrtomb@plt+0x5974>
  408368:	mov	x19, #0x0                   	// #0
  40836c:	mov	x0, x19
  408370:	bl	40787c <wcrtomb@plt+0x4e6c>
  408374:	ldp	x19, x20, [sp, #16]
  408378:	ldp	x21, x22, [sp, #32]
  40837c:	ldp	x29, x30, [sp], #64
  408380:	ret
  408384:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  408388:	cmp	x0, #0x1
  40838c:	b.eq	408394 <wcrtomb@plt+0x5984>  // b.none
  408390:	cbz	w19, 408368 <wcrtomb@plt+0x5958>
  408394:	mov	x0, #0x100                 	// #256
  408398:	bl	41102c <wcrtomb@plt+0xe61c>
  40839c:	mov	x20, #0x0                   	// #0
  4083a0:	mov	x19, x0
  4083a4:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  4083a8:	cmp	x0, #0x1
  4083ac:	b.ne	4083cc <wcrtomb@plt+0x59bc>  // b.any
  4083b0:	mov	w0, w20
  4083b4:	bl	402530 <toupper@plt>
  4083b8:	strb	w0, [x19, x20]
  4083bc:	add	x20, x20, #0x1
  4083c0:	cmp	x20, #0x100
  4083c4:	b.ne	4083b0 <wcrtomb@plt+0x59a0>  // b.any
  4083c8:	b	40836c <wcrtomb@plt+0x595c>
  4083cc:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4083d0:	add	x21, x21, #0x9ec
  4083d4:	ldr	w22, [x21, x20, lsl #2]
  4083d8:	mov	w0, w22
  4083dc:	bl	402920 <towupper@plt>
  4083e0:	mov	w1, w0
  4083e4:	add	x0, x19, x20
  4083e8:	cmp	w22, w1
  4083ec:	b.eq	408408 <wcrtomb@plt+0x59f8>  // b.none
  4083f0:	add	x2, sp, #0x38
  4083f4:	str	xzr, [sp, #56]
  4083f8:	bl	402a10 <wcrtomb@plt>
  4083fc:	cmp	x0, #0x1
  408400:	b.eq	40840c <wcrtomb@plt+0x59fc>  // b.none
  408404:	bl	4026f0 <abort@plt>
  408408:	strb	w20, [x19, x20]
  40840c:	add	x20, x20, #0x1
  408410:	cmp	x20, #0x100
  408414:	b.ne	4083d4 <wcrtomb@plt+0x59c4>  // b.any
  408418:	b	40836c <wcrtomb@plt+0x595c>
  40841c:	stp	x29, x30, [sp, #-96]!
  408420:	mov	x29, sp
  408424:	stp	x19, x20, [sp, #16]
  408428:	mov	x19, x2
  40842c:	ldr	x20, [x0]
  408430:	stp	x21, x22, [sp, #32]
  408434:	stp	x23, x24, [sp, #48]
  408438:	cmp	x20, x2
  40843c:	str	x25, [sp, #64]
  408440:	b.cc	408460 <wcrtomb@plt+0x5a50>  // b.lo, b.ul, b.last
  408444:	sub	x0, x2, x20
  408448:	ldp	x19, x20, [sp, #16]
  40844c:	ldp	x21, x22, [sp, #32]
  408450:	ldp	x23, x24, [sp, #48]
  408454:	ldr	x25, [sp, #64]
  408458:	ldp	x29, x30, [sp], #96
  40845c:	ret
  408460:	mov	x23, x0
  408464:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408468:	mov	x22, x1
  40846c:	mov	x24, x3
  408470:	ldrb	w0, [x0, #2282]
  408474:	cbz	w0, 40852c <wcrtomb@plt+0x5b1c>
  408478:	cmp	x2, x3
  40847c:	b.cs	408564 <wcrtomb@plt+0x5b54>  // b.hs, b.nlast
  408480:	ldrb	w0, [x2]
  408484:	and	w0, w0, #0xc0
  408488:	cmp	w0, #0x80
  40848c:	b.ne	408564 <wcrtomb@plt+0x5b54>  // b.any
  408490:	ldurb	w0, [x2, #-1]
  408494:	and	w0, w0, #0xc0
  408498:	cmp	w0, #0x80
  40849c:	b.ne	408514 <wcrtomb@plt+0x5b04>  // b.any
  4084a0:	ldurb	w0, [x2, #-2]
  4084a4:	and	w0, w0, #0xc0
  4084a8:	cmp	w0, #0x80
  4084ac:	b.ne	40851c <wcrtomb@plt+0x5b0c>  // b.any
  4084b0:	ldurb	w0, [x2, #-3]
  4084b4:	and	w0, w0, #0xc0
  4084b8:	cmp	w0, #0x80
  4084bc:	b.eq	408564 <wcrtomb@plt+0x5b54>  // b.none
  4084c0:	mov	w21, #0x3                   	// #3
  4084c4:	sxtw	x25, w21
  4084c8:	sub	x21, x19, w21, sxtw
  4084cc:	add	x2, sp, #0x58
  4084d0:	sub	x1, x24, x21
  4084d4:	mov	x0, x21
  4084d8:	str	xzr, [sp, #88]
  4084dc:	bl	4082bc <wcrtomb@plt+0x58ac>
  4084e0:	cmp	x25, x0
  4084e4:	b.cs	408524 <wcrtomb@plt+0x5b14>  // b.hs, b.nlast
  4084e8:	cmn	x0, #0x3
  4084ec:	b.hi	408524 <wcrtomb@plt+0x5b14>  // b.pmore
  4084f0:	add	x2, x21, x0
  4084f4:	mov	x20, x21
  4084f8:	str	x2, [x23]
  4084fc:	cbz	x22, 408504 <wcrtomb@plt+0x5af4>
  408500:	str	x0, [x22]
  408504:	sub	x20, x19, x20
  408508:	cmp	x2, x19
  40850c:	csel	x0, x20, xzr, ne  // ne = any
  408510:	b	408448 <wcrtomb@plt+0x5a38>
  408514:	mov	w21, #0x1                   	// #1
  408518:	b	4084c4 <wcrtomb@plt+0x5ab4>
  40851c:	mov	w21, #0x2                   	// #2
  408520:	b	4084c4 <wcrtomb@plt+0x5ab4>
  408524:	mov	x2, x19
  408528:	b	4084f8 <wcrtomb@plt+0x5ae8>
  40852c:	str	xzr, [sp, #88]
  408530:	add	x2, sp, #0x58
  408534:	sub	x1, x24, x20
  408538:	mov	x0, x20
  40853c:	bl	4082bc <wcrtomb@plt+0x58ac>
  408540:	cmn	x0, #0x3
  408544:	b.ls	408550 <wcrtomb@plt+0x5b40>  // b.plast
  408548:	mov	x0, #0x1                   	// #1
  40854c:	str	xzr, [sp, #88]
  408550:	add	x2, x20, x0
  408554:	cmp	x19, x2
  408558:	b.ls	4084f8 <wcrtomb@plt+0x5ae8>  // b.plast
  40855c:	mov	x20, x2
  408560:	b	408530 <wcrtomb@plt+0x5b20>
  408564:	mov	x2, x19
  408568:	mov	x0, #0x1                   	// #1
  40856c:	b	4084f8 <wcrtomb@plt+0x5ae8>
  408570:	mov	w2, #0x1                   	// #1
  408574:	b	4081f0 <wcrtomb@plt+0x57e0>
  408578:	mov	w2, #0x0                   	// #0
  40857c:	b	4081f0 <wcrtomb@plt+0x57e0>
  408580:	cmp	x0, x1
  408584:	b.eq	408608 <wcrtomb@plt+0x5bf8>  // b.none
  408588:	stp	x29, x30, [sp, #-48]!
  40858c:	adrp	x4, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408590:	mov	x29, sp
  408594:	stp	x19, x20, [sp, #16]
  408598:	mov	x20, x2
  40859c:	add	x2, x4, #0x8e8
  4085a0:	ldrb	w4, [x4, #2280]
  4085a4:	ldurb	w3, [x1, #-1]
  4085a8:	cbz	w4, 4085c4 <wcrtomb@plt+0x5bb4>
  4085ac:	ldrb	w4, [x2, #2]
  4085b0:	cbz	w4, 4085dc <wcrtomb@plt+0x5bcc>
  4085b4:	add	x2, x2, w3, sxtw
  4085b8:	ldrsb	w2, [x2, #3]
  4085bc:	cmn	w2, #0x2
  4085c0:	b.eq	4085dc <wcrtomb@plt+0x5bcc>  // b.none
  4085c4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4085c8:	add	x0, x0, #0x668
  4085cc:	ldrb	w0, [x0, w3, sxtw]
  4085d0:	ldp	x19, x20, [sp, #16]
  4085d4:	ldp	x29, x30, [sp], #48
  4085d8:	ret
  4085dc:	sub	x19, x1, #0x1
  4085e0:	mov	x3, x20
  4085e4:	mov	x2, x19
  4085e8:	mov	x1, #0x0                   	// #0
  4085ec:	str	x0, [sp, #40]
  4085f0:	add	x0, sp, #0x28
  4085f4:	bl	40841c <wcrtomb@plt+0x5a0c>
  4085f8:	sub	x0, x19, x0
  4085fc:	mov	x1, x20
  408600:	bl	408578 <wcrtomb@plt+0x5b68>
  408604:	b	4085d0 <wcrtomb@plt+0x5bc0>
  408608:	mov	x0, #0x0                   	// #0
  40860c:	ret
  408610:	mov	w0, #0x1                   	// #1
  408614:	b	406784 <wcrtomb@plt+0x3d74>
  408618:	stp	x29, x30, [sp, #-112]!
  40861c:	mov	x29, sp
  408620:	stp	x21, x22, [sp, #32]
  408624:	mov	x21, x2
  408628:	mov	x22, x3
  40862c:	stp	x19, x20, [sp, #16]
  408630:	mov	x19, #0xffffffffffffffff    	// #-1
  408634:	mov	x20, #0x0                   	// #0
  408638:	stp	x23, x24, [sp, #48]
  40863c:	mov	w23, #0x0                   	// #0
  408640:	stp	x25, x26, [sp, #64]
  408644:	mov	x25, x1
  408648:	mov	x26, x21
  40864c:	stp	x27, x28, [sp, #80]
  408650:	mov	x27, x0
  408654:	bl	4023c0 <strlen@plt>
  408658:	mov	x24, x0
  40865c:	mov	w28, #0x1                   	// #1
  408660:	ldr	x3, [x25, x20, lsl #3]
  408664:	cbnz	x3, 408678 <wcrtomb@plt+0x5c68>
  408668:	cmp	w23, #0x0
  40866c:	mov	x0, #0xfffffffffffffffe    	// #-2
  408670:	csel	x19, x19, x0, eq  // eq = none
  408674:	b	4086a8 <wcrtomb@plt+0x5c98>
  408678:	mov	x2, x24
  40867c:	mov	x1, x27
  408680:	mov	x0, x3
  408684:	str	x3, [sp, #104]
  408688:	bl	4025a0 <strncmp@plt>
  40868c:	cbnz	w0, 4086d4 <wcrtomb@plt+0x5cc4>
  408690:	ldr	x3, [sp, #104]
  408694:	mov	x0, x3
  408698:	bl	4023c0 <strlen@plt>
  40869c:	cmp	x0, x24
  4086a0:	b.ne	4086c8 <wcrtomb@plt+0x5cb8>  // b.any
  4086a4:	mov	x19, x20
  4086a8:	mov	x0, x19
  4086ac:	ldp	x19, x20, [sp, #16]
  4086b0:	ldp	x21, x22, [sp, #32]
  4086b4:	ldp	x23, x24, [sp, #48]
  4086b8:	ldp	x25, x26, [sp, #64]
  4086bc:	ldp	x27, x28, [sp, #80]
  4086c0:	ldp	x29, x30, [sp], #112
  4086c4:	ret
  4086c8:	cmn	x19, #0x1
  4086cc:	b.ne	4086e0 <wcrtomb@plt+0x5cd0>  // b.any
  4086d0:	mov	x19, x20
  4086d4:	add	x20, x20, #0x1
  4086d8:	add	x26, x26, x22
  4086dc:	b	408660 <wcrtomb@plt+0x5c50>
  4086e0:	cbz	x21, 408700 <wcrtomb@plt+0x5cf0>
  4086e4:	madd	x0, x19, x22, x21
  4086e8:	mov	x2, x22
  4086ec:	mov	x1, x26
  4086f0:	bl	402750 <memcmp@plt>
  4086f4:	cmp	w0, #0x0
  4086f8:	csel	w23, w23, w28, eq  // eq = none
  4086fc:	b	4086d4 <wcrtomb@plt+0x5cc4>
  408700:	mov	w23, #0x1                   	// #1
  408704:	b	4086d4 <wcrtomb@plt+0x5cc4>
  408708:	stp	x29, x30, [sp, #-48]!
  40870c:	cmn	x2, #0x1
  408710:	mov	w2, #0x5                   	// #5
  408714:	mov	x29, sp
  408718:	stp	x19, x20, [sp, #16]
  40871c:	mov	x20, x1
  408720:	str	x21, [sp, #32]
  408724:	mov	x21, x0
  408728:	b.ne	408784 <wcrtomb@plt+0x5d74>  // b.any
  40872c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  408730:	add	x1, x1, #0x47d
  408734:	mov	x0, #0x0                   	// #0
  408738:	bl	4028e0 <dcgettext@plt>
  40873c:	mov	x2, x20
  408740:	mov	x19, x0
  408744:	mov	w1, #0x8                   	// #8
  408748:	mov	w0, #0x0                   	// #0
  40874c:	bl	410818 <wcrtomb@plt+0xde08>
  408750:	mov	x20, x0
  408754:	mov	x1, x21
  408758:	mov	w0, #0x1                   	// #1
  40875c:	bl	410a78 <wcrtomb@plt+0xe068>
  408760:	mov	x4, x0
  408764:	mov	x3, x20
  408768:	mov	x2, x19
  40876c:	ldp	x19, x20, [sp, #16]
  408770:	mov	w1, #0x0                   	// #0
  408774:	ldr	x21, [sp, #32]
  408778:	mov	w0, #0x0                   	// #0
  40877c:	ldp	x29, x30, [sp], #48
  408780:	b	4023f0 <error@plt>
  408784:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  408788:	add	x1, x1, #0x498
  40878c:	b	408734 <wcrtomb@plt+0x5d24>
  408790:	stp	x29, x30, [sp, #-112]!
  408794:	mov	x29, sp
  408798:	stp	x19, x20, [sp, #16]
  40879c:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x23900>
  4087a0:	mov	x19, x1
  4087a4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4087a8:	add	x1, x1, #0x4b5
  4087ac:	stp	x21, x22, [sp, #32]
  4087b0:	mov	x22, x2
  4087b4:	mov	w2, #0x5                   	// #5
  4087b8:	stp	x23, x24, [sp, #48]
  4087bc:	mov	x21, #0x0                   	// #0
  4087c0:	stp	x25, x26, [sp, #64]
  4087c4:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xc900>
  4087c8:	mov	x25, #0x0                   	// #0
  4087cc:	stp	x27, x28, [sp, #80]
  4087d0:	add	x26, x26, #0x4ca
  4087d4:	adrp	x27, 420000 <_obstack_memory_used@@Base+0xc900>
  4087d8:	str	x0, [sp, #104]
  4087dc:	mov	x0, #0x0                   	// #0
  4087e0:	bl	4028e0 <dcgettext@plt>
  4087e4:	add	x27, x27, #0x4d2
  4087e8:	ldr	x1, [x20, #1104]
  4087ec:	bl	4028f0 <fputs_unlocked@plt>
  4087f0:	ldr	x0, [sp, #104]
  4087f4:	ldr	x23, [x20, #1104]
  4087f8:	ldr	x24, [x0, x21, lsl #3]
  4087fc:	cbnz	x24, 408824 <wcrtomb@plt+0x5e14>
  408800:	mov	x1, x23
  408804:	mov	w0, #0xa                   	// #10
  408808:	ldp	x19, x20, [sp, #16]
  40880c:	ldp	x21, x22, [sp, #32]
  408810:	ldp	x23, x24, [sp, #48]
  408814:	ldp	x25, x26, [sp, #64]
  408818:	ldp	x27, x28, [sp, #80]
  40881c:	ldp	x29, x30, [sp], #112
  408820:	b	4024b0 <putc_unlocked@plt>
  408824:	mov	x28, x19
  408828:	cbz	x21, 408840 <wcrtomb@plt+0x5e30>
  40882c:	mov	x2, x22
  408830:	mov	x1, x19
  408834:	mov	x0, x25
  408838:	bl	402750 <memcmp@plt>
  40883c:	cbz	w0, 408868 <wcrtomb@plt+0x5e58>
  408840:	mov	x0, x24
  408844:	bl	410a80 <wcrtomb@plt+0xe070>
  408848:	mov	x1, x26
  40884c:	mov	x2, x0
  408850:	mov	x0, x23
  408854:	bl	4029d0 <fprintf@plt>
  408858:	add	x21, x21, #0x1
  40885c:	add	x19, x19, x22
  408860:	mov	x25, x28
  408864:	b	4087f0 <wcrtomb@plt+0x5de0>
  408868:	mov	x0, x24
  40886c:	bl	410a80 <wcrtomb@plt+0xe070>
  408870:	mov	x1, x27
  408874:	mov	x2, x0
  408878:	mov	x28, x25
  40887c:	mov	x0, x23
  408880:	bl	4029d0 <fprintf@plt>
  408884:	b	408858 <wcrtomb@plt+0x5e48>
  408888:	stp	x29, x30, [sp, #-64]!
  40888c:	mov	x29, sp
  408890:	stp	x19, x20, [sp, #16]
  408894:	mov	x19, x2
  408898:	mov	x20, x3
  40889c:	stp	x21, x22, [sp, #32]
  4088a0:	mov	x22, x1
  4088a4:	mov	x21, x4
  4088a8:	mov	x3, x4
  4088ac:	mov	x2, x20
  4088b0:	mov	x1, x19
  4088b4:	stp	x23, x24, [sp, #48]
  4088b8:	mov	x24, x0
  4088bc:	mov	x23, x5
  4088c0:	mov	x0, x22
  4088c4:	bl	408618 <wcrtomb@plt+0x5c08>
  4088c8:	tbz	x0, #63, 4088f4 <wcrtomb@plt+0x5ee4>
  4088cc:	mov	x2, x0
  4088d0:	mov	x1, x22
  4088d4:	mov	x0, x24
  4088d8:	bl	408708 <wcrtomb@plt+0x5cf8>
  4088dc:	mov	x0, x19
  4088e0:	mov	x2, x21
  4088e4:	mov	x1, x20
  4088e8:	bl	408790 <wcrtomb@plt+0x5d80>
  4088ec:	blr	x23
  4088f0:	mov	x0, #0xffffffffffffffff    	// #-1
  4088f4:	ldp	x19, x20, [sp, #16]
  4088f8:	ldp	x21, x22, [sp, #32]
  4088fc:	ldp	x23, x24, [sp, #48]
  408900:	ldp	x29, x30, [sp], #64
  408904:	ret
  408908:	stp	x29, x30, [sp, #-64]!
  40890c:	mov	x29, sp
  408910:	stp	x19, x20, [sp, #16]
  408914:	mov	x19, x1
  408918:	mov	x20, x2
  40891c:	stp	x21, x22, [sp, #32]
  408920:	mov	x22, x0
  408924:	mov	x21, x3
  408928:	str	x23, [sp, #48]
  40892c:	ldr	x23, [x19]
  408930:	cbz	x23, 408950 <wcrtomb@plt+0x5f40>
  408934:	mov	x1, x20
  408938:	mov	x2, x21
  40893c:	mov	x0, x22
  408940:	add	x19, x19, #0x8
  408944:	add	x20, x20, x21
  408948:	bl	402750 <memcmp@plt>
  40894c:	cbnz	w0, 40892c <wcrtomb@plt+0x5f1c>
  408950:	mov	x0, x23
  408954:	ldp	x19, x20, [sp, #16]
  408958:	ldp	x21, x22, [sp, #32]
  40895c:	ldr	x23, [sp, #48]
  408960:	ldp	x29, x30, [sp], #64
  408964:	ret
  408968:	cmp	w0, #0x5a
  40896c:	b.gt	408988 <wcrtomb@plt+0x5f78>
  408970:	cmp	w0, #0x40
  408974:	b.gt	408994 <wcrtomb@plt+0x5f84>
  408978:	sub	w0, w0, #0x30
  40897c:	cmp	w0, #0x9
  408980:	cset	w0, ls  // ls = plast
  408984:	ret
  408988:	sub	w0, w0, #0x61
  40898c:	cmp	w0, #0x19
  408990:	b	408980 <wcrtomb@plt+0x5f70>
  408994:	mov	w0, #0x1                   	// #1
  408998:	b	408984 <wcrtomb@plt+0x5f74>
  40899c:	cmp	w0, #0x5a
  4089a0:	b.gt	4089b0 <wcrtomb@plt+0x5fa0>
  4089a4:	cmp	w0, #0x40
  4089a8:	cset	w0, gt
  4089ac:	ret
  4089b0:	sub	w0, w0, #0x61
  4089b4:	cmp	w0, #0x19
  4089b8:	cset	w0, ls  // ls = plast
  4089bc:	b	4089ac <wcrtomb@plt+0x5f9c>
  4089c0:	cmp	w0, #0x7f
  4089c4:	cset	w0, ls  // ls = plast
  4089c8:	ret
  4089cc:	cmp	w0, #0x20
  4089d0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4089d4:	cset	w0, eq  // eq = none
  4089d8:	ret
  4089dc:	cmp	w0, #0x1f
  4089e0:	b.gt	4089f0 <wcrtomb@plt+0x5fe0>
  4089e4:	mvn	w0, w0
  4089e8:	lsr	w0, w0, #31
  4089ec:	ret
  4089f0:	cmp	w0, #0x7f
  4089f4:	cset	w0, eq  // eq = none
  4089f8:	b	4089ec <wcrtomb@plt+0x5fdc>
  4089fc:	sub	w0, w0, #0x30
  408a00:	cmp	w0, #0x9
  408a04:	cset	w0, ls  // ls = plast
  408a08:	ret
  408a0c:	sub	w0, w0, #0x21
  408a10:	cmp	w0, #0x5d
  408a14:	cset	w0, ls  // ls = plast
  408a18:	ret
  408a1c:	sub	w0, w0, #0x61
  408a20:	cmp	w0, #0x19
  408a24:	cset	w0, ls  // ls = plast
  408a28:	ret
  408a2c:	sub	w0, w0, #0x20
  408a30:	cmp	w0, #0x5e
  408a34:	cset	w0, ls  // ls = plast
  408a38:	ret
  408a3c:	cmp	w0, #0x60
  408a40:	b.gt	408a70 <wcrtomb@plt+0x6060>
  408a44:	cmp	w0, #0x5a
  408a48:	b.gt	408a7c <wcrtomb@plt+0x606c>
  408a4c:	cmp	w0, #0x2f
  408a50:	b.gt	408a60 <wcrtomb@plt+0x6050>
  408a54:	cmp	w0, #0x20
  408a58:	cset	w0, gt
  408a5c:	ret
  408a60:	sub	w0, w0, #0x3a
  408a64:	cmp	w0, #0x6
  408a68:	cset	w0, ls  // ls = plast
  408a6c:	b	408a5c <wcrtomb@plt+0x604c>
  408a70:	sub	w0, w0, #0x7b
  408a74:	cmp	w0, #0x3
  408a78:	b	408a68 <wcrtomb@plt+0x6058>
  408a7c:	mov	w0, #0x1                   	// #1
  408a80:	b	408a5c <wcrtomb@plt+0x604c>
  408a84:	cmp	w0, #0xd
  408a88:	b.gt	408a98 <wcrtomb@plt+0x6088>
  408a8c:	cmp	w0, #0x8
  408a90:	cset	w0, gt
  408a94:	ret
  408a98:	cmp	w0, #0x20
  408a9c:	cset	w0, eq  // eq = none
  408aa0:	b	408a94 <wcrtomb@plt+0x6084>
  408aa4:	sub	w0, w0, #0x41
  408aa8:	cmp	w0, #0x19
  408aac:	cset	w0, ls  // ls = plast
  408ab0:	ret
  408ab4:	sub	w0, w0, #0x30
  408ab8:	cmp	w0, #0x36
  408abc:	b.hi	408adc <wcrtomb@plt+0x60cc>  // b.pmore
  408ac0:	mov	x1, #0x1                   	// #1
  408ac4:	lsl	x0, x1, x0
  408ac8:	mov	x1, #0x7e0000007e0000      	// #35465847073800192
  408acc:	movk	x1, #0x3ff
  408ad0:	tst	x0, x1
  408ad4:	cset	w0, ne  // ne = any
  408ad8:	ret
  408adc:	mov	w0, #0x0                   	// #0
  408ae0:	b	408ad8 <wcrtomb@plt+0x60c8>
  408ae4:	sub	w1, w0, #0x41
  408ae8:	cmp	w1, #0x19
  408aec:	b.hi	408af4 <wcrtomb@plt+0x60e4>  // b.pmore
  408af0:	add	w0, w0, #0x20
  408af4:	ret
  408af8:	sub	w1, w0, #0x61
  408afc:	cmp	w1, #0x19
  408b00:	b.hi	408b08 <wcrtomb@plt+0x60f8>  // b.pmore
  408b04:	sub	w0, w0, #0x20
  408b08:	ret
  408b0c:	ret
  408b10:	stp	x29, x30, [sp, #-48]!
  408b14:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408b18:	mov	x29, sp
  408b1c:	ldr	x1, [x0, #1904]
  408b20:	stp	x19, x20, [sp, #16]
  408b24:	add	x19, x0, #0x770
  408b28:	str	x21, [sp, #32]
  408b2c:	mov	w0, #0x0                   	// #0
  408b30:	blr	x1
  408b34:	ldr	x20, [x19, #8]
  408b38:	ldr	x21, [x19, #16]
  408b3c:	ldr	x0, [x19, #16]
  408b40:	bl	4023c0 <strlen@plt>
  408b44:	mov	x2, x0
  408b48:	mov	x1, x21
  408b4c:	mov	w0, #0x2                   	// #2
  408b50:	bl	4026d0 <write@plt>
  408b54:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  408b58:	add	x1, x1, #0x4d7
  408b5c:	mov	x2, #0x2                   	// #2
  408b60:	mov	w0, w2
  408b64:	bl	4026d0 <write@plt>
  408b68:	mov	x0, x20
  408b6c:	bl	4023c0 <strlen@plt>
  408b70:	mov	x1, x20
  408b74:	mov	x2, x0
  408b78:	mov	w0, #0x2                   	// #2
  408b7c:	bl	4026d0 <write@plt>
  408b80:	mov	x2, #0x1                   	// #1
  408b84:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  408b88:	mov	w0, #0x2                   	// #2
  408b8c:	add	x1, x1, #0x644
  408b90:	bl	4026d0 <write@plt>
  408b94:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408b98:	ldr	w0, [x0, #1000]
  408b9c:	bl	4023a0 <_exit@plt>
  408ba0:	stp	x29, x30, [sp, #-208]!
  408ba4:	mov	x1, #0x0                   	// #0
  408ba8:	mov	x29, sp
  408bac:	stp	x19, x20, [sp, #16]
  408bb0:	mov	x19, x0
  408bb4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408bb8:	add	x0, x0, #0x790
  408bbc:	str	x0, [sp, #32]
  408bc0:	mov	x0, #0x4000                	// #16384
  408bc4:	str	wzr, [sp, #40]
  408bc8:	str	x0, [sp, #48]
  408bcc:	add	x0, sp, #0x20
  408bd0:	bl	402370 <sigaltstack@plt>
  408bd4:	cbnz	w0, 408c58 <wcrtomb@plt+0x6248>
  408bd8:	cbnz	x19, 408be4 <wcrtomb@plt+0x61d4>
  408bdc:	adrp	x19, 408000 <wcrtomb@plt+0x55f0>
  408be0:	add	x19, x19, #0xb0c
  408be4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408be8:	mov	w2, #0x5                   	// #5
  408bec:	add	x20, x0, #0x770
  408bf0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  408bf4:	str	x19, [x0, #1904]
  408bf8:	add	x1, x1, #0x4da
  408bfc:	mov	x0, #0x0                   	// #0
  408c00:	bl	4028e0 <dcgettext@plt>
  408c04:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  408c08:	add	x1, x1, #0x4e8
  408c0c:	mov	w2, #0x5                   	// #5
  408c10:	str	x0, [x20, #24]
  408c14:	mov	x0, #0x0                   	// #0
  408c18:	bl	4028e0 <dcgettext@plt>
  408c1c:	str	x0, [x20, #8]
  408c20:	bl	40e408 <wcrtomb@plt+0xb9f8>
  408c24:	str	x0, [x20, #16]
  408c28:	add	x0, sp, #0x40
  408c2c:	bl	402590 <sigemptyset@plt>
  408c30:	mov	w0, #0x4                   	// #4
  408c34:	add	x1, sp, #0x38
  408c38:	movk	w0, #0xc800, lsl #16
  408c3c:	str	w0, [sp, #192]
  408c40:	adrp	x0, 408000 <wcrtomb@plt+0x55f0>
  408c44:	add	x0, x0, #0xb10
  408c48:	mov	x2, #0x0                   	// #0
  408c4c:	str	x0, [sp, #56]
  408c50:	mov	w0, #0xb                   	// #11
  408c54:	bl	402690 <sigaction@plt>
  408c58:	ldp	x19, x20, [sp, #16]
  408c5c:	ldp	x29, x30, [sp], #208
  408c60:	ret
  408c64:	cmp	x0, x1
  408c68:	b.eq	408cd4 <wcrtomb@plt+0x62c4>  // b.none
  408c6c:	stp	x29, x30, [sp, #-64]!
  408c70:	mov	x29, sp
  408c74:	stp	x21, x22, [sp, #32]
  408c78:	mov	x21, x0
  408c7c:	mov	x22, x1
  408c80:	stp	x19, x20, [sp, #16]
  408c84:	mov	x20, #0x0                   	// #0
  408c88:	str	x23, [sp, #48]
  408c8c:	ldrb	w0, [x21, x20]
  408c90:	bl	408ae4 <wcrtomb@plt+0x60d4>
  408c94:	mov	w19, w0
  408c98:	and	w23, w0, #0xff
  408c9c:	ldrb	w0, [x22, x20]
  408ca0:	bl	408ae4 <wcrtomb@plt+0x60d4>
  408ca4:	and	w1, w0, #0xff
  408ca8:	cbz	w23, 408cb8 <wcrtomb@plt+0x62a8>
  408cac:	add	x20, x20, #0x1
  408cb0:	cmp	w23, w1
  408cb4:	b.eq	408c8c <wcrtomb@plt+0x627c>  // b.none
  408cb8:	and	w19, w19, #0xff
  408cbc:	sub	w0, w19, w0, uxtb
  408cc0:	ldp	x19, x20, [sp, #16]
  408cc4:	ldp	x21, x22, [sp, #32]
  408cc8:	ldr	x23, [sp, #48]
  408ccc:	ldp	x29, x30, [sp], #64
  408cd0:	ret
  408cd4:	mov	w0, #0x0                   	// #0
  408cd8:	ret
  408cdc:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408ce0:	str	x0, [x1, #1936]
  408ce4:	ret
  408ce8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408cec:	strb	w0, [x1, #1944]
  408cf0:	ret
  408cf4:	stp	x29, x30, [sp, #-48]!
  408cf8:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408cfc:	mov	x29, sp
  408d00:	ldr	x0, [x0, #1128]
  408d04:	stp	x19, x20, [sp, #16]
  408d08:	stp	x21, x22, [sp, #32]
  408d0c:	bl	41dea0 <_obstack_memory_used@@Base+0xa7a0>
  408d10:	cbz	w0, 408da4 <wcrtomb@plt+0x6394>
  408d14:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  408d18:	add	x0, x21, #0x790
  408d1c:	ldrb	w22, [x0, #8]
  408d20:	bl	402980 <__errno_location@plt>
  408d24:	mov	x19, x0
  408d28:	cbz	w22, 408d38 <wcrtomb@plt+0x6328>
  408d2c:	ldr	w0, [x0]
  408d30:	cmp	w0, #0x20
  408d34:	b.eq	408da4 <wcrtomb@plt+0x6394>  // b.none
  408d38:	mov	w2, #0x5                   	// #5
  408d3c:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0xa900>
  408d40:	mov	x0, #0x0                   	// #0
  408d44:	add	x1, x1, #0x805
  408d48:	bl	4028e0 <dcgettext@plt>
  408d4c:	mov	x20, x0
  408d50:	ldr	x0, [x21, #1936]
  408d54:	cbz	x0, 408d88 <wcrtomb@plt+0x6378>
  408d58:	ldr	w19, [x19]
  408d5c:	bl	41093c <wcrtomb@plt+0xdf2c>
  408d60:	adrp	x2, 41e000 <_obstack_memory_used@@Base+0xa900>
  408d64:	mov	x3, x0
  408d68:	mov	x4, x20
  408d6c:	add	x2, x2, #0x81a
  408d70:	mov	w1, w19
  408d74:	mov	w0, #0x0                   	// #0
  408d78:	bl	4023f0 <error@plt>
  408d7c:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408d80:	ldr	w0, [x0, #1000]
  408d84:	bl	4023a0 <_exit@plt>
  408d88:	ldr	w1, [x19]
  408d8c:	mov	x3, x20
  408d90:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  408d94:	mov	w0, #0x0                   	// #0
  408d98:	add	x2, x2, #0x4d4
  408d9c:	bl	4023f0 <error@plt>
  408da0:	b	408d7c <wcrtomb@plt+0x636c>
  408da4:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  408da8:	ldr	x0, [x0, #1104]
  408dac:	bl	41dea0 <_obstack_memory_used@@Base+0xa7a0>
  408db0:	cbnz	w0, 408d7c <wcrtomb@plt+0x636c>
  408db4:	ldp	x19, x20, [sp, #16]
  408db8:	ldp	x21, x22, [sp, #32]
  408dbc:	ldp	x29, x30, [sp], #48
  408dc0:	ret
  408dc4:	and	w3, w2, #0x1
  408dc8:	tbz	w2, #0, 408dd0 <wcrtomb@plt+0x63c0>
  408dcc:	and	w3, w0, #0x7
  408dd0:	and	w4, w2, #0x2
  408dd4:	tbz	w2, #1, 408ddc <wcrtomb@plt+0x63cc>
  408dd8:	ubfx	x4, x0, #3, #3
  408ddc:	orr	w3, w3, w4
  408de0:	and	w4, w2, #0x4
  408de4:	tbz	w2, #2, 408dec <wcrtomb@plt+0x63dc>
  408de8:	ubfx	x4, x0, #6, #3
  408dec:	orr	w3, w3, w4
  408df0:	tst	w3, w1
  408df4:	cset	w0, ne  // ne = any
  408df8:	ret
  408dfc:	lsr	w2, w0, #6
  408e00:	mov	x3, #0x1                   	// #1
  408e04:	lsl	x3, x3, x0
  408e08:	lsl	x2, x2, #3
  408e0c:	ldr	x0, [x1, x2]
  408e10:	orr	x0, x0, x3
  408e14:	str	x0, [x1, x2]
  408e18:	ret
  408e1c:	stp	x29, x30, [sp, #-48]!
  408e20:	mov	x29, sp
  408e24:	stp	x21, x22, [sp, #32]
  408e28:	mov	x21, x0
  408e2c:	ldr	x22, [x0, #144]
  408e30:	stp	x19, x20, [sp, #16]
  408e34:	mov	x20, #0x0                   	// #0
  408e38:	add	x0, x22, x1, lsl #3
  408e3c:	ldur	x2, [x0, #-8]
  408e40:	cmp	x2, #0x103
  408e44:	b.gt	408e5c <wcrtomb@plt+0x644c>
  408e48:	cmp	x2, #0x100
  408e4c:	b.le	408e68 <wcrtomb@plt+0x6458>
  408e50:	sub	x1, x1, #0x1
  408e54:	add	x20, x20, #0x1
  408e58:	b	408e38 <wcrtomb@plt+0x6428>
  408e5c:	sub	x2, x2, #0x105
  408e60:	cmp	x2, #0x1
  408e64:	b.ls	408e7c <wcrtomb@plt+0x646c>  // b.plast
  408e68:	add	x0, x20, #0x1
  408e6c:	ldp	x19, x20, [sp, #16]
  408e70:	ldp	x21, x22, [sp, #32]
  408e74:	ldp	x29, x30, [sp], #48
  408e78:	ret
  408e7c:	sub	x19, x1, #0x1
  408e80:	mov	x0, x21
  408e84:	mov	x1, x19
  408e88:	bl	408e1c <wcrtomb@plt+0x640c>
  408e8c:	add	x2, x0, #0x1
  408e90:	sub	x1, x19, x0
  408e94:	add	x20, x20, x2
  408e98:	b	408e38 <wcrtomb@plt+0x6428>
  408e9c:	stp	x29, x30, [sp, #-32]!
  408ea0:	mov	x29, sp
  408ea4:	stp	x19, x20, [sp, #16]
  408ea8:	mov	x19, x0
  408eac:	mov	x20, x1
  408eb0:	mov	x0, x20
  408eb4:	mov	x1, #0x10                  	// #16
  408eb8:	bl	41105c <wcrtomb@plt+0xe64c>
  408ebc:	stp	x0, xzr, [x19]
  408ec0:	str	x20, [x19, #16]
  408ec4:	ldp	x19, x20, [sp, #16]
  408ec8:	ldp	x29, x30, [sp], #32
  408ecc:	ret
  408ed0:	ldr	x5, [x1, #8]
  408ed4:	mov	x6, #0x0                   	// #0
  408ed8:	mov	x4, x5
  408edc:	cmp	x6, x4
  408ee0:	b.lt	408eec <wcrtomb@plt+0x64dc>  // b.tstop
  408ee4:	mov	w0, #0x0                   	// #0
  408ee8:	b	408f50 <wcrtomb@plt+0x6540>
  408eec:	add	x2, x6, x4
  408ef0:	ldr	x7, [x1]
  408ef4:	asr	x2, x2, #1
  408ef8:	lsl	x8, x2, #4
  408efc:	add	x3, x7, x2, lsl #4
  408f00:	ldr	x7, [x7, x8]
  408f04:	cmp	x7, x0
  408f08:	b.ge	408f1c <wcrtomb@plt+0x650c>  // b.tcont
  408f0c:	add	x6, x2, #0x1
  408f10:	mov	x2, x4
  408f14:	mov	x4, x2
  408f18:	b	408edc <wcrtomb@plt+0x64cc>
  408f1c:	b.ne	408f14 <wcrtomb@plt+0x6504>  // b.any
  408f20:	ldr	w0, [x3, #8]
  408f24:	mov	x4, x2
  408f28:	add	x4, x4, #0x1
  408f2c:	add	x3, x3, #0x10
  408f30:	cmp	x4, x5
  408f34:	b.lt	408f54 <wcrtomb@plt+0x6544>  // b.tstop
  408f38:	sub	x3, x5, #0x1
  408f3c:	cmp	x5, x2
  408f40:	sub	x3, x3, x2
  408f44:	csel	x3, x3, xzr, gt
  408f48:	add	x2, x3, x2
  408f4c:	str	x2, [x1, #8]
  408f50:	ret
  408f54:	ldp	x6, x7, [x3]
  408f58:	stp	x6, x7, [x3, #-16]
  408f5c:	b	408f28 <wcrtomb@plt+0x6518>
  408f60:	ldr	x2, [x0]
  408f64:	ldr	x1, [x1]
  408f68:	cmp	x2, x1
  408f6c:	cset	w0, gt
  408f70:	csinv	w0, w0, wzr, ge  // ge = tcont
  408f74:	ret
  408f78:	mov	x0, x1
  408f7c:	mov	w1, #0x1                   	// #1
  408f80:	strb	w1, [x5]
  408f84:	ret
  408f88:	stp	x29, x30, [sp, #-64]!
  408f8c:	mov	x29, sp
  408f90:	stp	x19, x20, [sp, #16]
  408f94:	mov	x20, x0
  408f98:	str	x21, [sp, #32]
  408f9c:	ldrb	w0, [x1]
  408fa0:	add	x0, x3, x0, lsl #2
  408fa4:	ldr	w21, [x0, #1308]
  408fa8:	cmn	w21, #0x1
  408fac:	b.ne	408fe8 <wcrtomb@plt+0x65d8>  // b.any
  408fb0:	mov	x19, x3
  408fb4:	add	x0, sp, #0x3c
  408fb8:	add	x3, x3, #0x110
  408fbc:	bl	413374 <wcrtomb@plt+0x10964>
  408fc0:	sub	x1, x0, #0x1
  408fc4:	cmn	x1, #0x4
  408fc8:	b.hi	408fe4 <wcrtomb@plt+0x65d4>  // b.pmore
  408fcc:	ldr	w1, [sp, #60]
  408fd0:	str	w1, [x20]
  408fd4:	ldp	x19, x20, [sp, #16]
  408fd8:	ldr	x21, [sp, #32]
  408fdc:	ldp	x29, x30, [sp], #64
  408fe0:	ret
  408fe4:	str	xzr, [x19, #272]
  408fe8:	mov	w0, #0x1                   	// #1
  408fec:	str	w21, [x20]
  408ff0:	b	408fd4 <wcrtomb@plt+0x65c4>
  408ff4:	stp	x29, x30, [sp, #-32]!
  408ff8:	mov	x3, x0
  408ffc:	mov	x29, sp
  409000:	ldp	x1, x2, [x0, #32]
  409004:	str	x19, [sp, #16]
  409008:	mov	x19, x0
  40900c:	add	x0, x0, #0x48
  409010:	bl	408f88 <wcrtomb@plt+0x6578>
  409014:	mov	w1, w0
  409018:	cmp	w0, #0x1
  40901c:	ldr	x2, [x19, #32]
  409020:	b.ne	409048 <wcrtomb@plt+0x6638>  // b.any
  409024:	ldrb	w0, [x2]
  409028:	add	x2, x2, w1, sxtw
  40902c:	str	x2, [x19, #32]
  409030:	ldr	x2, [x19, #40]
  409034:	sub	x1, x2, w1, sxtw
  409038:	str	x1, [x19, #40]
  40903c:	ldr	x19, [sp, #16]
  409040:	ldp	x29, x30, [sp], #32
  409044:	ret
  409048:	mov	w0, #0xffffffff            	// #-1
  40904c:	b	409028 <wcrtomb@plt+0x6618>
  409050:	stp	xzr, xzr, [x0]
  409054:	stp	xzr, xzr, [x0, #16]
  409058:	ret
  40905c:	stp	x29, x30, [sp, #-32]!
  409060:	mov	x29, sp
  409064:	ldr	x6, [x1]
  409068:	stp	x19, x20, [sp, #16]
  40906c:	mov	x20, x1
  409070:	asr	x19, x6, #1
  409074:	adds	x19, x6, x19
  409078:	b.vc	409080 <wcrtomb@plt+0x6670>
  40907c:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  409080:	cmn	x3, #0x1
  409084:	b.eq	409090 <wcrtomb@plt+0x6680>  // b.none
  409088:	cmp	x19, x3
  40908c:	csel	x19, x19, x3, le
  409090:	mul	x1, x19, x4
  409094:	smulh	x5, x19, x4
  409098:	cmp	x5, x1, asr #63
  40909c:	b.ne	4090b0 <wcrtomb@plt+0x66a0>  // b.any
  4090a0:	cmp	x1, #0x7f
  4090a4:	b.gt	4090c0 <wcrtomb@plt+0x66b0>
  4090a8:	mov	x5, #0x80                  	// #128
  4090ac:	b	4090b4 <wcrtomb@plt+0x66a4>
  4090b0:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
  4090b4:	udiv	x19, x5, x4
  4090b8:	msub	x1, x19, x4, x5
  4090bc:	sub	x1, x5, x1
  4090c0:	cbnz	x0, 4090c8 <wcrtomb@plt+0x66b8>
  4090c4:	str	xzr, [x20]
  4090c8:	sub	x5, x19, x6
  4090cc:	cmp	x5, x2
  4090d0:	b.ge	409104 <wcrtomb@plt+0x66f4>  // b.tcont
  4090d4:	adds	x6, x6, x2
  4090d8:	mov	x19, x6
  4090dc:	b.vs	409100 <wcrtomb@plt+0x66f0>
  4090e0:	cmn	x3, #0x1
  4090e4:	b.eq	4090f0 <wcrtomb@plt+0x66e0>  // b.none
  4090e8:	cmp	x6, x3
  4090ec:	b.gt	409100 <wcrtomb@plt+0x66f0>
  4090f0:	mul	x1, x6, x4
  4090f4:	smulh	x6, x6, x4
  4090f8:	cmp	x6, x1, asr #63
  4090fc:	b.eq	409104 <wcrtomb@plt+0x66f4>  // b.none
  409100:	bl	411200 <wcrtomb@plt+0xe7f0>
  409104:	bl	41108c <wcrtomb@plt+0xe67c>
  409108:	str	x19, [x20]
  40910c:	ldp	x19, x20, [sp, #16]
  409110:	ldp	x29, x30, [sp], #32
  409114:	ret
  409118:	stp	x29, x30, [sp, #-48]!
  40911c:	mov	x29, sp
  409120:	stp	x19, x20, [sp, #16]
  409124:	mov	x19, x0
  409128:	mov	x20, x1
  40912c:	ldr	x1, [x0, #160]
  409130:	ldr	x0, [x0, #152]
  409134:	str	x21, [sp, #32]
  409138:	and	w21, w2, #0xff
  40913c:	cmp	x1, x0
  409140:	b.ne	40917c <wcrtomb@plt+0x676c>  // b.any
  409144:	ldr	x0, [x19, #144]
  409148:	add	x1, x19, #0xa0
  40914c:	mov	x4, #0x8                   	// #8
  409150:	mov	x3, #0xffffffffffffffff    	// #-1
  409154:	mov	x2, #0x1                   	// #1
  409158:	bl	40905c <wcrtomb@plt+0x664c>
  40915c:	str	x0, [x19, #144]
  409160:	ldrb	w0, [x19, #1048]
  409164:	cbz	w0, 409190 <wcrtomb@plt+0x6780>
  409168:	ldr	x1, [x19, #160]
  40916c:	mov	x2, #0x1                   	// #1
  409170:	ldr	x0, [x19, #280]
  409174:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  409178:	str	x0, [x19, #280]
  40917c:	ldrb	w0, [x19, #1048]
  409180:	cbz	w0, 409190 <wcrtomb@plt+0x6780>
  409184:	ldr	x0, [x19, #152]
  409188:	ldr	x1, [x19, #280]
  40918c:	strb	w21, [x1, x0]
  409190:	ldp	x1, x0, [x19, #144]
  409194:	cmp	x20, #0x106
  409198:	add	x2, x0, #0x1
  40919c:	str	x2, [x19, #152]
  4091a0:	str	x20, [x1, x0, lsl #3]
  4091a4:	ldr	x0, [x19, #136]
  4091a8:	b.gt	4091ec <wcrtomb@plt+0x67dc>
  4091ac:	cmp	x20, #0x104
  4091b0:	b.gt	409208 <wcrtomb@plt+0x67f8>
  4091b4:	cmp	x20, #0x100
  4091b8:	b.eq	409200 <wcrtomb@plt+0x67f0>  // b.none
  4091bc:	sub	x20, x20, #0x101
  4091c0:	cmp	x20, #0x2
  4091c4:	b.hi	4091f4 <wcrtomb@plt+0x67e4>  // b.pmore
  4091c8:	ldr	x0, [x19, #136]
  4091cc:	ldr	x1, [x19, #168]
  4091d0:	cmp	x0, x1
  4091d4:	b.le	4091dc <wcrtomb@plt+0x67cc>
  4091d8:	str	x0, [x19, #168]
  4091dc:	ldp	x19, x20, [sp, #16]
  4091e0:	ldr	x21, [sp, #32]
  4091e4:	ldp	x29, x30, [sp], #48
  4091e8:	ret
  4091ec:	cmp	x20, #0x112
  4091f0:	b.eq	409214 <wcrtomb@plt+0x6804>  // b.none
  4091f4:	ldr	x1, [x19, #176]
  4091f8:	add	x1, x1, #0x1
  4091fc:	str	x1, [x19, #176]
  409200:	add	x0, x0, #0x1
  409204:	b	40920c <wcrtomb@plt+0x67fc>
  409208:	sub	x0, x0, #0x1
  40920c:	str	x0, [x19, #136]
  409210:	b	4091c8 <wcrtomb@plt+0x67b8>
  409214:	strb	wzr, [x19, #192]
  409218:	b	4091f4 <wcrtomb@plt+0x67e4>
  40921c:	stp	x29, x30, [sp, #-64]!
  409220:	mov	x29, sp
  409224:	stp	x19, x20, [sp, #16]
  409228:	ldr	x2, [x0, #304]
  40922c:	ldr	x20, [x0, #352]
  409230:	str	x21, [sp, #32]
  409234:	cmp	x2, x20
  409238:	b.le	4092f4 <wcrtomb@plt+0x68e4>
  40923c:	mov	x19, x0
  409240:	ldr	x0, [x0, #368]
  409244:	cbz	x0, 409304 <wcrtomb@plt+0x68f4>
  409248:	sub	x0, x0, #0x10
  40924c:	add	x1, x20, #0x2
  409250:	mov	x4, #0x8                   	// #8
  409254:	mov	x3, #0xffffffffffffffff    	// #-1
  409258:	sub	x2, x2, x20
  40925c:	str	x1, [sp, #56]
  409260:	add	x1, sp, #0x38
  409264:	bl	40905c <wcrtomb@plt+0x664c>
  409268:	str	xzr, [x0, #8]
  40926c:	mov	x2, #0x8                   	// #8
  409270:	ldr	x21, [sp, #56]
  409274:	str	xzr, [x0], #16
  409278:	str	x0, [x19, #368]
  40927c:	sub	x21, x21, #0x2
  409280:	ldr	x0, [x19, #376]
  409284:	str	x21, [x19, #352]
  409288:	mov	x1, x21
  40928c:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  409290:	str	x0, [x19, #376]
  409294:	ldr	x0, [x19, #384]
  409298:	mov	x1, x21
  40929c:	mov	x2, #0x1                   	// #1
  4092a0:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  4092a4:	str	x0, [x19, #384]
  4092a8:	ldr	x0, [x19, #392]
  4092ac:	mov	x1, x21
  4092b0:	mov	x2, #0x8                   	// #8
  4092b4:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  4092b8:	str	x0, [x19, #392]
  4092bc:	ldrb	w0, [x19, #1048]
  4092c0:	cbz	w0, 4092ec <wcrtomb@plt+0x68dc>
  4092c4:	ldr	x0, [x19, #432]
  4092c8:	cbz	x0, 4092d0 <wcrtomb@plt+0x68c0>
  4092cc:	sub	x0, x0, #0x10
  4092d0:	ldr	x1, [sp, #56]
  4092d4:	mov	x2, #0x8                   	// #8
  4092d8:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  4092dc:	cbnz	x20, 4092e4 <wcrtomb@plt+0x68d4>
  4092e0:	stp	xzr, xzr, [x0]
  4092e4:	add	x0, x0, #0x10
  4092e8:	str	x0, [x19, #432]
  4092ec:	cmp	x21, x20
  4092f0:	b.gt	40930c <wcrtomb@plt+0x68fc>
  4092f4:	ldp	x19, x20, [sp, #16]
  4092f8:	ldr	x21, [sp, #32]
  4092fc:	ldp	x29, x30, [sp], #64
  409300:	ret
  409304:	mov	x1, #0x0                   	// #0
  409308:	b	409250 <wcrtomb@plt+0x6840>
  40930c:	ldr	x1, [x19, #368]
  409310:	lsl	x0, x20, #3
  409314:	str	xzr, [x1, x0]
  409318:	ldr	x1, [x19, #376]
  40931c:	str	xzr, [x1, x0]
  409320:	ldrb	w1, [x19, #1048]
  409324:	cbz	w1, 409330 <wcrtomb@plt+0x6920>
  409328:	ldr	x1, [x19, #432]
  40932c:	str	xzr, [x1, x0]
  409330:	add	x20, x20, #0x1
  409334:	b	4092ec <wcrtomb@plt+0x68dc>
  409338:	stp	x29, x30, [sp, #-48]!
  40933c:	mov	x29, sp
  409340:	stp	x19, x20, [sp, #16]
  409344:	mov	w19, #0x0                   	// #0
  409348:	str	x21, [sp, #32]
  40934c:	mov	x21, x1
  409350:	bl	402530 <toupper@plt>
  409354:	mov	w20, w0
  409358:	mov	w0, w19
  40935c:	bl	402530 <toupper@plt>
  409360:	cmp	w20, w0
  409364:	b.ne	409374 <wcrtomb@plt+0x6964>  // b.any
  409368:	mov	x1, x21
  40936c:	mov	w0, w19
  409370:	bl	408dfc <wcrtomb@plt+0x63ec>
  409374:	add	w19, w19, #0x1
  409378:	cmp	w19, #0x100
  40937c:	b.ne	409358 <wcrtomb@plt+0x6948>  // b.any
  409380:	ldp	x19, x20, [sp, #16]
  409384:	ldr	x21, [sp, #32]
  409388:	ldp	x29, x30, [sp], #48
  40938c:	ret
  409390:	stp	x29, x30, [sp, #-96]!
  409394:	mov	x29, sp
  409398:	stp	x21, x22, [sp, #32]
  40939c:	add	x22, sp, #0x50
  4093a0:	add	x2, sp, #0x48
  4093a4:	stp	x19, x20, [sp, #16]
  4093a8:	mov	x20, x0
  4093ac:	mov	x0, x22
  4093b0:	str	x23, [sp, #48]
  4093b4:	str	xzr, [sp, #72]
  4093b8:	bl	402a10 <wcrtomb@plt>
  4093bc:	cmn	x0, #0x1
  4093c0:	b.eq	409404 <wcrtomb@plt+0x69f4>  // b.none
  4093c4:	cmp	w0, #0x1
  4093c8:	ldrb	w1, [sp, #80]
  4093cc:	mov	w2, #0x3                   	// #3
  4093d0:	mov	w21, w0
  4093d4:	csinc	w2, w2, wzr, eq  // eq = none
  4093d8:	sub	w23, w21, #0x1
  4093dc:	mov	x19, #0x1                   	// #1
  4093e0:	mov	x0, x20
  4093e4:	bl	409118 <wcrtomb@plt+0x6708>
  4093e8:	cmp	w21, w19
  4093ec:	b.gt	409418 <wcrtomb@plt+0x6a08>
  4093f0:	ldp	x19, x20, [sp, #16]
  4093f4:	ldp	x21, x22, [sp, #32]
  4093f8:	ldr	x23, [sp, #48]
  4093fc:	ldp	x29, x30, [sp], #96
  409400:	ret
  409404:	mov	w21, #0x1                   	// #1
  409408:	mov	x1, #0x0                   	// #0
  40940c:	mov	w2, #0x3                   	// #3
  409410:	strb	wzr, [sp, #80]
  409414:	b	4093d8 <wcrtomb@plt+0x69c8>
  409418:	cmp	w23, w19
  40941c:	ldrb	w1, [x22, x19]
  409420:	cset	w2, eq  // eq = none
  409424:	mov	x0, x20
  409428:	add	x19, x19, #0x1
  40942c:	ubfiz	w2, w2, #1, #7
  409430:	bl	409118 <wcrtomb@plt+0x6708>
  409434:	mov	x0, x20
  409438:	mov	x1, #0x105                 	// #261
  40943c:	bl	409444 <wcrtomb@plt+0x6a34>
  409440:	b	4093e8 <wcrtomb@plt+0x69d8>
  409444:	stp	x29, x30, [sp, #-48]!
  409448:	mov	x29, sp
  40944c:	stp	x19, x20, [sp, #16]
  409450:	mov	x19, x0
  409454:	stp	x21, x22, [sp, #32]
  409458:	ldrb	w22, [x19, #1048]
  40945c:	cbz	w22, 409468 <wcrtomb@plt+0x6a58>
  409460:	cmp	x1, #0x113
  409464:	b.eq	4094e8 <wcrtomb@plt+0x6ad8>  // b.none
  409468:	mov	x0, x19
  40946c:	mov	w2, #0x3                   	// #3
  409470:	ldp	x19, x20, [sp, #16]
  409474:	ldp	x21, x22, [sp, #32]
  409478:	ldp	x29, x30, [sp], #48
  40947c:	b	409118 <wcrtomb@plt+0x6708>
  409480:	ldr	x0, [x19, #96]
  409484:	ldr	w1, [x0, x20, lsl #2]
  409488:	mov	x0, x19
  40948c:	bl	409390 <wcrtomb@plt+0x6980>
  409490:	cbz	w21, 4094a0 <wcrtomb@plt+0x6a90>
  409494:	mov	x0, x19
  409498:	mov	x1, #0x106                 	// #262
  40949c:	bl	409444 <wcrtomb@plt+0x6a34>
  4094a0:	add	x20, x20, #0x1
  4094a4:	mov	w21, w22
  4094a8:	ldr	x0, [x19, #104]
  4094ac:	cmp	x0, x20
  4094b0:	b.gt	409480 <wcrtomb@plt+0x6a70>
  4094b4:	ldr	x1, [x19, #80]
  4094b8:	str	xzr, [x19, #104]
  4094bc:	cmn	x1, #0x1
  4094c0:	b.eq	4094d8 <wcrtomb@plt+0x6ac8>  // b.none
  4094c4:	add	x1, x1, #0x114
  4094c8:	mov	x0, x19
  4094cc:	bl	409444 <wcrtomb@plt+0x6a34>
  4094d0:	mov	x1, #0x106                 	// #262
  4094d4:	cbnz	w21, 409458 <wcrtomb@plt+0x6a48>
  4094d8:	ldp	x19, x20, [sp, #16]
  4094dc:	ldp	x21, x22, [sp, #32]
  4094e0:	ldp	x29, x30, [sp], #48
  4094e4:	ret
  4094e8:	mov	x20, #0x0                   	// #0
  4094ec:	mov	w21, #0x0                   	// #0
  4094f0:	b	4094a8 <wcrtomb@plt+0x6a98>
  4094f4:	stp	x29, x30, [sp, #-48]!
  4094f8:	mov	x29, sp
  4094fc:	stp	x19, x20, [sp, #16]
  409500:	mov	x19, x0
  409504:	mov	x0, x1
  409508:	stp	x21, x22, [sp, #32]
  40950c:	mov	x22, x1
  409510:	bl	4023c0 <strlen@plt>
  409514:	cbz	x0, 40954c <wcrtomb@plt+0x6b3c>
  409518:	mov	x20, x0
  40951c:	mov	x0, x19
  409520:	bl	4023c0 <strlen@plt>
  409524:	add	x1, x0, x20
  409528:	mov	x21, x0
  40952c:	add	x1, x1, #0x1
  409530:	mov	x0, x19
  409534:	bl	41108c <wcrtomb@plt+0xe67c>
  409538:	add	x2, x20, #0x1
  40953c:	mov	x19, x0
  409540:	mov	x1, x22
  409544:	add	x0, x0, x21
  409548:	bl	402360 <memcpy@plt>
  40954c:	mov	x0, x19
  409550:	ldp	x19, x20, [sp, #16]
  409554:	ldp	x21, x22, [sp, #32]
  409558:	ldp	x29, x30, [sp], #48
  40955c:	ret
  409560:	stp	x29, x30, [sp, #-32]!
  409564:	mov	x29, sp
  409568:	stp	x19, x20, [sp, #16]
  40956c:	mov	x20, x0
  409570:	mov	x19, x1
  409574:	ldr	x0, [x0, #8]
  409578:	ldr	x1, [x1, #16]
  40957c:	cmp	x1, x0
  409580:	b.ge	4095b0 <wcrtomb@plt+0x6ba0>  // b.tcont
  409584:	ldr	x0, [x19]
  409588:	bl	4027a0 <free@plt>
  40958c:	mov	x1, x19
  409590:	mov	x4, #0x10                  	// #16
  409594:	ldr	x2, [x20, #8]
  409598:	mov	x3, #0xffffffffffffffff    	// #-1
  40959c:	ldr	x0, [x1, #16]!
  4095a0:	sub	x2, x2, x0
  4095a4:	mov	x0, #0x0                   	// #0
  4095a8:	bl	40905c <wcrtomb@plt+0x664c>
  4095ac:	str	x0, [x19]
  4095b0:	ldr	x2, [x20, #8]
  4095b4:	str	x2, [x19, #8]
  4095b8:	cbz	x2, 4095d4 <wcrtomb@plt+0x6bc4>
  4095bc:	ldr	x0, [x19]
  4095c0:	lsl	x2, x2, #4
  4095c4:	ldr	x1, [x20]
  4095c8:	ldp	x19, x20, [sp, #16]
  4095cc:	ldp	x29, x30, [sp], #32
  4095d0:	b	402360 <memcpy@plt>
  4095d4:	ldp	x19, x20, [sp, #16]
  4095d8:	ldp	x29, x30, [sp], #32
  4095dc:	ret
  4095e0:	stp	x29, x30, [sp, #-48]!
  4095e4:	mov	x29, sp
  4095e8:	stp	x21, x22, [sp, #32]
  4095ec:	mov	x21, x0
  4095f0:	mov	w22, w2
  4095f4:	stp	x19, x20, [sp, #16]
  4095f8:	mov	x20, x1
  4095fc:	mov	x19, x3
  409600:	ldr	x1, [x21, #8]
  409604:	ldr	x0, [x3, #16]
  409608:	sub	x0, x0, x1
  40960c:	ldr	x1, [x20, #8]
  409610:	cmp	x0, x1
  409614:	b.ge	409644 <wcrtomb@plt+0x6c34>  // b.tcont
  409618:	ldr	x0, [x3]
  40961c:	bl	4027a0 <free@plt>
  409620:	mov	x1, x19
  409624:	mov	x4, #0x10                  	// #16
  409628:	ldr	x2, [x20, #8]
  40962c:	mov	x3, #0xffffffffffffffff    	// #-1
  409630:	ldr	x0, [x21, #8]
  409634:	str	x0, [x1, #16]!
  409638:	mov	x0, #0x0                   	// #0
  40963c:	bl	40905c <wcrtomb@plt+0x664c>
  409640:	str	x0, [x19]
  409644:	mov	x3, #0x0                   	// #0
  409648:	mov	x2, #0x0                   	// #0
  40964c:	str	xzr, [x19, #8]
  409650:	ldr	x1, [x21, #8]
  409654:	ldr	x0, [x20, #8]
  409658:	cmp	x1, x2
  40965c:	b.gt	409678 <wcrtomb@plt+0x6c68>
  409660:	cmp	x3, x0
  409664:	b.lt	4096f0 <wcrtomb@plt+0x6ce0>  // b.tstop
  409668:	ldp	x19, x20, [sp, #16]
  40966c:	ldp	x21, x22, [sp, #32]
  409670:	ldp	x29, x30, [sp], #48
  409674:	ret
  409678:	cmp	x3, x0
  40967c:	lsl	x4, x2, #4
  409680:	ldr	x5, [x21]
  409684:	b.ge	4096e8 <wcrtomb@plt+0x6cd8>  // b.tcont
  409688:	ldr	x1, [x20]
  40968c:	lsl	x0, x3, #4
  409690:	ldr	x7, [x5, x4]
  409694:	ldr	x0, [x1, x0]
  409698:	add	x6, x1, x3, lsl #4
  40969c:	cmp	x7, x0
  4096a0:	b.gt	4096f0 <wcrtomb@plt+0x6ce0>
  4096a4:	b.ne	4096e8 <wcrtomb@plt+0x6cd8>  // b.any
  4096a8:	ldr	w0, [x6, #8]
  4096ac:	add	x3, x3, #0x1
  4096b0:	and	w0, w22, w0
  4096b4:	ldp	x6, x1, [x19]
  4096b8:	add	x8, x5, x4
  4096bc:	ldr	x4, [x5, x4]
  4096c0:	add	x2, x2, #0x1
  4096c4:	lsl	x9, x1, #4
  4096c8:	add	x7, x6, x1, lsl #4
  4096cc:	add	x1, x1, #0x1
  4096d0:	str	x4, [x6, x9]
  4096d4:	ldr	w4, [x8, #8]
  4096d8:	str	x1, [x19, #8]
  4096dc:	orr	w0, w4, w0
  4096e0:	str	w0, [x7, #8]
  4096e4:	b	409650 <wcrtomb@plt+0x6c40>
  4096e8:	mov	w0, #0x0                   	// #0
  4096ec:	b	4096b4 <wcrtomb@plt+0x6ca4>
  4096f0:	ldr	x5, [x20]
  4096f4:	lsl	x8, x3, #4
  4096f8:	add	x0, x5, x3, lsl #4
  4096fc:	ldr	w0, [x0, #8]
  409700:	ands	w1, w22, w0
  409704:	b.eq	409728 <wcrtomb@plt+0x6d18>  // b.none
  409708:	ldp	x4, x0, [x19]
  40970c:	ldr	x5, [x5, x8]
  409710:	lsl	x7, x0, #4
  409714:	add	x6, x4, x0, lsl #4
  409718:	add	x0, x0, #0x1
  40971c:	str	x5, [x4, x7]
  409720:	str	x0, [x19, #8]
  409724:	str	w1, [x6, #8]
  409728:	add	x3, x3, #0x1
  40972c:	b	409650 <wcrtomb@plt+0x6c40>
  409730:	stp	x29, x30, [sp, #-32]!
  409734:	mov	x29, sp
  409738:	str	x19, [sp, #16]
  40973c:	mov	x19, x0
  409740:	ldr	x0, [x19]
  409744:	cbnz	x0, 409754 <wcrtomb@plt+0x6d44>
  409748:	ldr	x19, [sp, #16]
  40974c:	ldp	x29, x30, [sp], #32
  409750:	ret
  409754:	add	x19, x19, #0x8
  409758:	bl	4027a0 <free@plt>
  40975c:	b	409740 <wcrtomb@plt+0x6d30>
  409760:	stp	x29, x30, [sp, #-32]!
  409764:	mov	x29, sp
  409768:	str	x19, [sp, #16]
  40976c:	mov	x19, x0
  409770:	ldr	x0, [x0]
  409774:	bl	409730 <wcrtomb@plt+0x6d20>
  409778:	ldr	x0, [x19]
  40977c:	bl	4027a0 <free@plt>
  409780:	ldr	x0, [x19, #8]
  409784:	bl	4027a0 <free@plt>
  409788:	ldr	x0, [x19, #16]
  40978c:	bl	4027a0 <free@plt>
  409790:	ldr	x0, [x19, #24]
  409794:	bl	4027a0 <free@plt>
  409798:	mov	x0, x19
  40979c:	ldr	x19, [sp, #16]
  4097a0:	ldp	x29, x30, [sp], #32
  4097a4:	b	4027a0 <free@plt>
  4097a8:	stp	x29, x30, [sp, #-48]!
  4097ac:	mov	x29, sp
  4097b0:	stp	x19, x20, [sp, #16]
  4097b4:	mov	x20, x1
  4097b8:	str	x21, [sp, #32]
  4097bc:	mov	x21, x0
  4097c0:	mov	x0, #0x30                  	// #48
  4097c4:	bl	41102c <wcrtomb@plt+0xe61c>
  4097c8:	mov	x19, x0
  4097cc:	mov	x0, #0x8                   	// #8
  4097d0:	bl	4111a0 <wcrtomb@plt+0xe790>
  4097d4:	str	x0, [x19]
  4097d8:	mov	x0, x20
  4097dc:	bl	4111a0 <wcrtomb@plt+0xe790>
  4097e0:	str	x0, [x19, #8]
  4097e4:	mov	x0, x20
  4097e8:	bl	4111a0 <wcrtomb@plt+0xe790>
  4097ec:	str	x0, [x19, #16]
  4097f0:	mov	x0, x20
  4097f4:	bl	4111a0 <wcrtomb@plt+0xe790>
  4097f8:	str	x0, [x19, #24]
  4097fc:	mov	x0, x19
  409800:	strh	wzr, [x19, #32]
  409804:	str	x21, [x19, #40]
  409808:	ldp	x19, x20, [sp, #16]
  40980c:	ldr	x21, [sp, #32]
  409810:	ldp	x29, x30, [sp], #48
  409814:	ret
  409818:	stp	x29, x30, [sp, #-64]!
  40981c:	mov	x29, sp
  409820:	stp	x19, x20, [sp, #16]
  409824:	mov	x20, x2
  409828:	mov	x19, x0
  40982c:	add	x0, x2, #0x1
  409830:	stp	x21, x22, [sp, #32]
  409834:	mov	x21, x1
  409838:	stp	x23, x24, [sp, #48]
  40983c:	bl	41102c <wcrtomb@plt+0xe61c>
  409840:	mov	x2, x20
  409844:	mov	x1, x21
  409848:	bl	402360 <memcpy@plt>
  40984c:	mov	x21, x0
  409850:	strb	wzr, [x0, x20]
  409854:	mov	x20, #0x0                   	// #0
  409858:	ldr	x0, [x19, x20, lsl #3]
  40985c:	cbnz	x0, 409898 <wcrtomb@plt+0x6e88>
  409860:	mov	x22, #0x0                   	// #0
  409864:	ldr	x23, [x19, x22, lsl #3]
  409868:	add	x24, x19, x22, lsl #3
  40986c:	cbnz	x23, 4098cc <wcrtomb@plt+0x6ebc>
  409870:	add	x1, x20, #0x2
  409874:	lsl	x20, x20, #3
  409878:	mov	x0, x19
  40987c:	mov	x2, #0x8                   	// #8
  409880:	bl	4110d0 <wcrtomb@plt+0xe6c0>
  409884:	mov	x19, x0
  409888:	str	x21, [x0, x20]
  40988c:	add	x20, x0, x20
  409890:	str	xzr, [x20, #8]
  409894:	b	4098ac <wcrtomb@plt+0x6e9c>
  409898:	mov	x1, x21
  40989c:	bl	4028d0 <strstr@plt>
  4098a0:	cbz	x0, 4098c4 <wcrtomb@plt+0x6eb4>
  4098a4:	mov	x0, x21
  4098a8:	bl	4027a0 <free@plt>
  4098ac:	mov	x0, x19
  4098b0:	ldp	x19, x20, [sp, #16]
  4098b4:	ldp	x21, x22, [sp, #32]
  4098b8:	ldp	x23, x24, [sp, #48]
  4098bc:	ldp	x29, x30, [sp], #64
  4098c0:	ret
  4098c4:	add	x20, x20, #0x1
  4098c8:	b	409858 <wcrtomb@plt+0x6e48>
  4098cc:	mov	x1, x23
  4098d0:	mov	x0, x21
  4098d4:	bl	4028d0 <strstr@plt>
  4098d8:	cbnz	x0, 4098e4 <wcrtomb@plt+0x6ed4>
  4098dc:	add	x22, x22, #0x1
  4098e0:	b	409864 <wcrtomb@plt+0x6e54>
  4098e4:	sub	x20, x20, #0x1
  4098e8:	mov	x0, x23
  4098ec:	bl	4027a0 <free@plt>
  4098f0:	lsl	x0, x20, #3
  4098f4:	cmp	x22, x20
  4098f8:	b.eq	409870 <wcrtomb@plt+0x6e60>  // b.none
  4098fc:	ldr	x1, [x19, x0]
  409900:	str	x1, [x24]
  409904:	str	xzr, [x19, x0]
  409908:	b	409864 <wcrtomb@plt+0x6e54>
  40990c:	stp	x29, x30, [sp, #-48]!
  409910:	mov	x29, sp
  409914:	stp	x19, x20, [sp, #16]
  409918:	mov	x20, x1
  40991c:	mov	x19, x0
  409920:	str	x21, [sp, #32]
  409924:	ldr	x21, [x20]
  409928:	cbnz	x21, 409940 <wcrtomb@plt+0x6f30>
  40992c:	mov	x0, x19
  409930:	ldp	x19, x20, [sp, #16]
  409934:	ldr	x21, [sp, #32]
  409938:	ldp	x29, x30, [sp], #48
  40993c:	ret
  409940:	mov	x0, x21
  409944:	bl	4023c0 <strlen@plt>
  409948:	mov	x1, x21
  40994c:	mov	x2, x0
  409950:	add	x20, x20, #0x8
  409954:	mov	x0, x19
  409958:	bl	409818 <wcrtomb@plt+0x6e08>
  40995c:	mov	x19, x0
  409960:	b	409924 <wcrtomb@plt+0x6f14>
  409964:	ldr	x4, [x1, #8]
  409968:	mov	x3, x0
  40996c:	mov	x2, #0x0                   	// #0
  409970:	mov	w0, #0x0                   	// #0
  409974:	cmp	x2, x4
  409978:	b.lt	409980 <wcrtomb@plt+0x6f70>  // b.tstop
  40997c:	ret
  409980:	ldr	x6, [x1]
  409984:	lsl	x5, x2, #4
  409988:	add	x2, x2, #0x1
  40998c:	ldr	x6, [x6, x5]
  409990:	ldr	x5, [x3]
  409994:	ldr	w5, [x5, x6, lsl #2]
  409998:	orr	w0, w0, w5
  40999c:	b	409974 <wcrtomb@plt+0x6f64>
  4099a0:	ldr	x1, [x0, #40]
  4099a4:	cbnz	x1, 4099c8 <wcrtomb@plt+0x6fb8>
  4099a8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4099ac:	add	x1, x1, #0x4f7
  4099b0:	stp	x29, x30, [sp, #-16]!
  4099b4:	mov	w2, #0x5                   	// #5
  4099b8:	mov	x0, #0x0                   	// #0
  4099bc:	mov	x29, sp
  4099c0:	bl	4028e0 <dcgettext@plt>
  4099c4:	bl	403ea4 <wcrtomb@plt+0x1494>
  4099c8:	b	408ff4 <wcrtomb@plt+0x65e4>
  4099cc:	mov	x5, x1
  4099d0:	mov	x1, x2
  4099d4:	ldr	x2, [x2]
  4099d8:	cmp	x2, x5
  4099dc:	b.gt	4099e8 <wcrtomb@plt+0x6fd8>
  4099e0:	mov	x2, #0x1                   	// #1
  4099e4:	b	40905c <wcrtomb@plt+0x664c>
  4099e8:	ret
  4099ec:	stp	x29, x30, [sp, #-48]!
  4099f0:	mov	x29, sp
  4099f4:	stp	x19, x20, [sp, #16]
  4099f8:	mov	x19, x0
  4099fc:	mov	x20, #0x0                   	// #0
  409a00:	stp	x21, x22, [sp, #32]
  409a04:	mov	x21, x1
  409a08:	ldr	x1, [x0, #8]
  409a0c:	ldr	x0, [x0]
  409a10:	lsl	x22, x20, #5
  409a14:	cmp	x1, x20
  409a18:	b.gt	409a5c <wcrtomb@plt+0x704c>
  409a1c:	mov	x3, #0xfffffffffffffeeb    	// #-277
  409a20:	add	x2, x19, #0x10
  409a24:	mov	x4, #0x20                  	// #32
  409a28:	movk	x3, #0x7fff, lsl #48
  409a2c:	bl	4099cc <wcrtomb@plt+0x6fbc>
  409a30:	ldr	x1, [x19, #8]
  409a34:	ld1	{v0.16b, v1.16b}, [x21]
  409a38:	add	x1, x1, #0x1
  409a3c:	stp	x0, x1, [x19]
  409a40:	add	x0, x0, x22
  409a44:	st1	{v0.16b, v1.16b}, [x0]
  409a48:	mov	x0, x20
  409a4c:	ldp	x19, x20, [sp, #16]
  409a50:	ldp	x21, x22, [sp, #32]
  409a54:	ldp	x29, x30, [sp], #48
  409a58:	ret
  409a5c:	add	x22, x0, x22
  409a60:	mov	x2, #0x0                   	// #0
  409a64:	mov	x3, #0x0                   	// #0
  409a68:	ldr	x4, [x21, x2]
  409a6c:	ldr	x5, [x22, x2]
  409a70:	add	x2, x2, #0x8
  409a74:	cmp	x2, #0x20
  409a78:	eor	x4, x4, x5
  409a7c:	orr	x3, x3, x4
  409a80:	b.ne	409a68 <wcrtomb@plt+0x7058>  // b.any
  409a84:	cbz	x3, 409a48 <wcrtomb@plt+0x7038>
  409a88:	add	x20, x20, #0x1
  409a8c:	b	409a10 <wcrtomb@plt+0x7000>
  409a90:	stp	x29, x30, [sp, #-64]!
  409a94:	mov	x29, sp
  409a98:	stp	x21, x22, [sp, #32]
  409a9c:	mov	x22, x1
  409aa0:	ldr	x21, [x2, #8]
  409aa4:	str	x23, [sp, #48]
  409aa8:	mov	x23, x0
  409aac:	stp	x19, x20, [sp, #16]
  409ab0:	mov	x1, x21
  409ab4:	ldr	x0, [x2]
  409ab8:	mov	x19, x2
  409abc:	mov	x20, #0x0                   	// #0
  409ac0:	cmp	x20, x1
  409ac4:	b.lt	409b10 <wcrtomb@plt+0x7100>  // b.tstop
  409ac8:	mov	x1, x21
  409acc:	mov	x4, #0x10                  	// #16
  409ad0:	mov	x3, #0xffffffffffffffff    	// #-1
  409ad4:	add	x2, x19, x4
  409ad8:	bl	4099cc <wcrtomb@plt+0x6fbc>
  409adc:	add	x1, x0, x21, lsl #4
  409ae0:	str	x0, [x19]
  409ae4:	sub	x1, x1, #0x10
  409ae8:	cmp	x20, x21
  409aec:	b.lt	409b60 <wcrtomb@plt+0x7150>  // b.tstop
  409af0:	lsl	x1, x20, #4
  409af4:	add	x20, x0, x20, lsl #4
  409af8:	str	x23, [x0, x1]
  409afc:	ldr	x0, [x19, #8]
  409b00:	str	x22, [x20, #8]
  409b04:	add	x0, x0, #0x1
  409b08:	str	x0, [x19, #8]
  409b0c:	b	409b4c <wcrtomb@plt+0x713c>
  409b10:	add	x2, x20, x1
  409b14:	asr	x2, x2, #1
  409b18:	lsl	x4, x2, #4
  409b1c:	add	x3, x0, x2, lsl #4
  409b20:	ldr	x4, [x0, x4]
  409b24:	cmp	x4, x23
  409b28:	b.ge	409b3c <wcrtomb@plt+0x712c>  // b.tcont
  409b2c:	add	x20, x2, #0x1
  409b30:	mov	x2, x1
  409b34:	mov	x1, x2
  409b38:	b	409ac0 <wcrtomb@plt+0x70b0>
  409b3c:	b.ne	409b34 <wcrtomb@plt+0x7124>  // b.any
  409b40:	ldr	w1, [x3, #8]
  409b44:	orr	w22, w1, w22
  409b48:	str	w22, [x3, #8]
  409b4c:	ldp	x19, x20, [sp, #16]
  409b50:	ldp	x21, x22, [sp, #32]
  409b54:	ldr	x23, [sp, #48]
  409b58:	ldp	x29, x30, [sp], #64
  409b5c:	ret
  409b60:	ldp	x2, x3, [x1]
  409b64:	sub	x21, x21, #0x1
  409b68:	stp	x2, x3, [x1, #16]
  409b6c:	b	409ae4 <wcrtomb@plt+0x70d4>
  409b70:	stp	x29, x30, [sp, #-48]!
  409b74:	mov	x4, #0x10                  	// #16
  409b78:	mov	x3, #0xffffffffffffffff    	// #-1
  409b7c:	mov	x29, sp
  409b80:	stp	x19, x20, [sp, #16]
  409b84:	mov	x19, x2
  409b88:	mov	x20, x1
  409b8c:	add	x2, x2, x4
  409b90:	ldr	x1, [x19, #8]
  409b94:	str	x21, [sp, #32]
  409b98:	mov	x21, x0
  409b9c:	ldr	x0, [x19]
  409ba0:	bl	4099cc <wcrtomb@plt+0x6fbc>
  409ba4:	ldr	x2, [x19, #8]
  409ba8:	add	x1, x2, #0x1
  409bac:	stp	x0, x1, [x19]
  409bb0:	add	x2, x0, x2, lsl #4
  409bb4:	stp	x21, x20, [x2]
  409bb8:	ldp	x19, x20, [sp, #16]
  409bbc:	ldr	x21, [sp, #32]
  409bc0:	ldp	x29, x30, [sp], #48
  409bc4:	ret
  409bc8:	stp	x29, x30, [sp, #-80]!
  409bcc:	mov	x29, sp
  409bd0:	ldr	x6, [x1, #8]
  409bd4:	stp	x19, x20, [sp, #16]
  409bd8:	mov	x20, x1
  409bdc:	stp	x23, x24, [sp, #48]
  409be0:	mov	w24, w2
  409be4:	mov	x19, x0
  409be8:	mov	x0, #0x0                   	// #0
  409bec:	stp	x21, x22, [sp, #32]
  409bf0:	stp	x25, x26, [sp, #64]
  409bf4:	mov	x25, #0x0                   	// #0
  409bf8:	cmp	x6, x0
  409bfc:	b.gt	409cbc <wcrtomb@plt+0x72ac>
  409c00:	ldp	x7, x10, [x19, #296]
  409c04:	mov	x22, #0x0                   	// #0
  409c08:	mov	x5, #0x50                  	// #80
  409c0c:	mul	x21, x22, x5
  409c10:	cmp	x10, x22
  409c14:	b.gt	409ce0 <wcrtomb@plt+0x72d0>
  409c18:	mov	x5, #0x0                   	// #0
  409c1c:	mov	x26, #0x0                   	// #0
  409c20:	mov	w23, #0x0                   	// #0
  409c24:	mov	w11, #0x1ff                 	// #511
  409c28:	cmp	x6, x5
  409c2c:	b.gt	409d5c <wcrtomb@plt+0x734c>
  409c30:	mov	x1, x10
  409c34:	mov	x0, x7
  409c38:	mov	x4, #0x50                  	// #80
  409c3c:	mov	x3, #0xffffffffffffffff    	// #-1
  409c40:	add	x2, x19, #0x138
  409c44:	bl	4099cc <wcrtomb@plt+0x6fbc>
  409c48:	ldr	x1, [x20, #8]
  409c4c:	add	x2, x0, x21
  409c50:	str	x0, [x19, #296]
  409c54:	str	x25, [x0, x21]
  409c58:	add	x0, x2, #0x8
  409c5c:	bl	408e9c <wcrtomb@plt+0x648c>
  409c60:	ldr	x1, [x19, #296]
  409c64:	mov	x0, x20
  409c68:	add	x1, x1, x21
  409c6c:	add	x1, x1, #0x8
  409c70:	bl	409560 <wcrtomb@plt+0x6b50>
  409c74:	ldr	x0, [x19, #296]
  409c78:	mov	x1, #0xffffffffffffffff    	// #-1
  409c7c:	add	x0, x0, x21
  409c80:	strb	w24, [x0, #32]
  409c84:	strh	w23, [x0, #34]
  409c88:	stp	x26, xzr, [x0, #40]
  409c8c:	str	xzr, [x0, #56]
  409c90:	str	x1, [x0, #72]
  409c94:	ldr	x0, [x19, #304]
  409c98:	add	x0, x0, #0x1
  409c9c:	str	x0, [x19, #304]
  409ca0:	mov	x0, x22
  409ca4:	ldp	x19, x20, [sp, #16]
  409ca8:	ldp	x21, x22, [sp, #32]
  409cac:	ldp	x23, x24, [sp, #48]
  409cb0:	ldp	x25, x26, [sp, #64]
  409cb4:	ldp	x29, x30, [sp], #80
  409cb8:	ret
  409cbc:	ldr	x2, [x20]
  409cc0:	lsl	x3, x0, #4
  409cc4:	add	x1, x2, x0, lsl #4
  409cc8:	add	x0, x0, #0x1
  409ccc:	ldr	x2, [x2, x3]
  409cd0:	ldr	w1, [x1, #8]
  409cd4:	add	x1, x1, x2
  409cd8:	eor	x25, x25, x1
  409cdc:	b	409bf8 <wcrtomb@plt+0x71e8>
  409ce0:	ldr	x0, [x7, x21]
  409ce4:	add	x1, x7, x21
  409ce8:	cmp	x0, x25
  409cec:	b.ne	409d18 <wcrtomb@plt+0x7308>  // b.any
  409cf0:	ldr	x0, [x1, #16]
  409cf4:	cmp	x6, x0
  409cf8:	b.ne	409d18 <wcrtomb@plt+0x7308>  // b.any
  409cfc:	ldrb	w0, [x1, #32]
  409d00:	cmp	w0, w24
  409d04:	b.ne	409d18 <wcrtomb@plt+0x7308>  // b.any
  409d08:	mov	x0, #0x0                   	// #0
  409d0c:	cmp	x6, x0
  409d10:	b.gt	409d20 <wcrtomb@plt+0x7310>
  409d14:	b.eq	409ca0 <wcrtomb@plt+0x7290>  // b.none
  409d18:	add	x22, x22, #0x1
  409d1c:	b	409c0c <wcrtomb@plt+0x71fc>
  409d20:	ldr	x4, [x20]
  409d24:	lsl	x2, x0, #4
  409d28:	ldr	x3, [x1, #8]
  409d2c:	add	x9, x4, x0, lsl #4
  409d30:	add	x8, x3, x0, lsl #4
  409d34:	ldr	w9, [x9, #8]
  409d38:	ldr	w8, [x8, #8]
  409d3c:	cmp	w9, w8
  409d40:	b.ne	409d18 <wcrtomb@plt+0x7308>  // b.any
  409d44:	ldr	x4, [x4, x2]
  409d48:	ldr	x2, [x3, x2]
  409d4c:	cmp	x4, x2
  409d50:	b.ne	409d18 <wcrtomb@plt+0x7308>  // b.any
  409d54:	add	x0, x0, #0x1
  409d58:	b	409d0c <wcrtomb@plt+0x72fc>
  409d5c:	ldr	x1, [x20]
  409d60:	lsl	x0, x5, #4
  409d64:	ldr	x8, [x1, x0]
  409d68:	ldr	x0, [x19, #336]
  409d6c:	ldr	w9, [x0, x8, lsl #2]
  409d70:	cbz	w9, 409da4 <wcrtomb@plt+0x7394>
  409d74:	mov	w1, w24
  409d78:	mov	w0, w9
  409d7c:	mov	w2, #0x7                   	// #7
  409d80:	bl	408dc4 <wcrtomb@plt+0x63b4>
  409d84:	tst	w0, #0xff
  409d88:	b.eq	409d90 <wcrtomb@plt+0x7380>  // b.none
  409d8c:	orr	w23, w23, w9
  409d90:	cbnz	x26, 409d9c <wcrtomb@plt+0x738c>
  409d94:	ldr	x0, [x19, #144]
  409d98:	ldr	x26, [x0, x8, lsl #3]
  409d9c:	add	x5, x5, #0x1
  409da0:	b	409c28 <wcrtomb@plt+0x7218>
  409da4:	ldr	x0, [x19, #144]
  409da8:	ldr	x0, [x0, x8, lsl #3]
  409dac:	cmp	x0, #0x112
  409db0:	csel	w23, w23, w11, ne  // ne = any
  409db4:	b	409d9c <wcrtomb@plt+0x738c>
  409db8:	stp	x29, x30, [sp, #-48]!
  409dbc:	mov	x29, sp
  409dc0:	stp	x19, x20, [sp, #16]
  409dc4:	mov	x20, x0
  409dc8:	ldrb	w0, [x0, #1048]
  409dcc:	stp	x21, x22, [sp, #32]
  409dd0:	mov	x19, x1
  409dd4:	mov	x22, x2
  409dd8:	cbnz	w0, 409e0c <wcrtomb@plt+0x73fc>
  409ddc:	lsl	x19, x1, #3
  409de0:	mov	x21, #0x0                   	// #0
  409de4:	cmp	x21, x22
  409de8:	b.ge	409e1c <wcrtomb@plt+0x740c>  // b.tcont
  409dec:	ldr	x0, [x20, #144]
  409df0:	mov	w2, #0x3                   	// #3
  409df4:	add	x21, x21, #0x1
  409df8:	ldr	x1, [x0, x19]
  409dfc:	mov	x0, x20
  409e00:	add	x19, x19, #0x8
  409e04:	bl	409118 <wcrtomb@plt+0x6708>
  409e08:	b	409de4 <wcrtomb@plt+0x73d4>
  409e0c:	mov	x21, x1
  409e10:	sub	x0, x21, x19
  409e14:	cmp	x0, x22
  409e18:	b.lt	409e2c <wcrtomb@plt+0x741c>  // b.tstop
  409e1c:	ldp	x19, x20, [sp, #16]
  409e20:	ldp	x21, x22, [sp, #32]
  409e24:	ldp	x29, x30, [sp], #48
  409e28:	ret
  409e2c:	ldr	x0, [x20, #144]
  409e30:	ldr	x1, [x20, #280]
  409e34:	ldrb	w2, [x1, x21]
  409e38:	ldr	x1, [x0, x21, lsl #3]
  409e3c:	mov	x0, x20
  409e40:	add	x21, x21, #0x1
  409e44:	bl	409118 <wcrtomb@plt+0x6708>
  409e48:	b	409e10 <wcrtomb@plt+0x7400>
  409e4c:	stp	x29, x30, [sp, #-32]!
  409e50:	mov	x29, sp
  409e54:	stp	x19, x20, [sp, #16]
  409e58:	mov	x19, x0
  409e5c:	ldr	x0, [x0, #280]
  409e60:	bl	4027a0 <free@plt>
  409e64:	ldr	x0, [x19, #96]
  409e68:	bl	4027a0 <free@plt>
  409e6c:	ldr	x0, [x19, #408]
  409e70:	bl	4027a0 <free@plt>
  409e74:	ldr	x0, [x19, #432]
  409e78:	cbnz	x0, 409eb4 <wcrtomb@plt+0x74a4>
  409e7c:	ldp	x19, x20, [sp, #16]
  409e80:	ldp	x29, x30, [sp], #32
  409e84:	ret
  409e88:	ldr	x0, [x0, x20, lsl #3]
  409e8c:	add	x20, x20, #0x1
  409e90:	bl	4027a0 <free@plt>
  409e94:	ldr	x1, [x19, #352]
  409e98:	ldr	x0, [x19, #432]
  409e9c:	cmp	x20, x1
  409ea0:	b.lt	409e88 <wcrtomb@plt+0x7478>  // b.tstop
  409ea4:	ldp	x19, x20, [sp, #16]
  409ea8:	sub	x0, x0, #0x10
  409eac:	ldp	x29, x30, [sp], #32
  409eb0:	b	4027a0 <free@plt>
  409eb4:	mov	x20, #0xffffffffffffffff    	// #-1
  409eb8:	b	409e94 <wcrtomb@plt+0x7484>
  409ebc:	stp	x29, x30, [sp, #-256]!
  409ec0:	mov	x29, sp
  409ec4:	stp	x19, x20, [sp, #16]
  409ec8:	mov	x19, x0
  409ecc:	and	w20, w1, #0xff
  409ed0:	ldr	x0, [x0, #176]
  409ed4:	mov	x1, #0x20                  	// #32
  409ed8:	stp	x21, x22, [sp, #32]
  409edc:	stp	x23, x24, [sp, #48]
  409ee0:	stp	x25, x26, [sp, #64]
  409ee4:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xc900>
  409ee8:	mov	x25, #0x0                   	// #0
  409eec:	stp	x27, x28, [sp, #80]
  409ef0:	bl	41105c <wcrtomb@plt+0xe64c>
  409ef4:	mov	x21, x0
  409ef8:	ldr	x23, [x19, #176]
  409efc:	mov	x24, x0
  409f00:	mov	x1, #0x18                  	// #24
  409f04:	mov	x27, #0x1                   	// #1
  409f08:	add	x23, x0, x23, lsl #4
  409f0c:	ldr	x0, [x19, #168]
  409f10:	bl	41105c <wcrtomb@plt+0xe64c>
  409f14:	str	x0, [sp, #96]
  409f18:	mov	x1, #0x105                 	// #261
  409f1c:	mov	x0, x19
  409f20:	bl	409444 <wcrtomb@plt+0x6a34>
  409f24:	strb	w20, [x19, #328]
  409f28:	ldr	x1, [x19, #176]
  409f2c:	add	x0, sp, #0xd0
  409f30:	bl	408e9c <wcrtomb@plt+0x648c>
  409f34:	ldr	x0, [x19, #152]
  409f38:	mov	x1, #0x18                  	// #24
  409f3c:	bl	41116c <wcrtomb@plt+0xe75c>
  409f40:	str	x0, [x19, #320]
  409f44:	ldr	x20, [sp, #96]
  409f48:	add	x0, x26, #0x668
  409f4c:	str	x0, [sp, #104]
  409f50:	ldr	x0, [x19, #152]
  409f54:	cmp	x0, x25
  409f58:	b.gt	409fc8 <wcrtomb@plt+0x75b8>
  409f5c:	ldr	x1, [x19, #176]
  409f60:	add	x0, sp, #0xe8
  409f64:	adrp	x24, 420000 <_obstack_memory_used@@Base+0xc900>
  409f68:	mov	x20, #0x0                   	// #0
  409f6c:	mov	x25, #0x18                  	// #24
  409f70:	bl	408e9c <wcrtomb@plt+0x648c>
  409f74:	add	x0, x24, #0x710
  409f78:	str	x0, [sp, #104]
  409f7c:	ldr	x0, [x19, #152]
  409f80:	cmp	x20, x0
  409f84:	b.lt	40a20c <wcrtomb@plt+0x77fc>  // b.tstop
  409f88:	ldr	x0, [sp, #232]
  409f8c:	bl	4027a0 <free@plt>
  409f90:	ldr	x0, [x19, #152]
  409f94:	bl	4111a0 <wcrtomb@plt+0xe790>
  409f98:	mov	x20, x0
  409f9c:	ldr	x8, [x19, #152]
  409fa0:	mov	x0, #0x0                   	// #0
  409fa4:	mov	x7, #0x18                  	// #24
  409fa8:	mov	w9, #0x8                   	// #8
  409fac:	cmp	x0, x8
  409fb0:	b.ge	40a334 <wcrtomb@plt+0x7924>  // b.tcont
  409fb4:	ldr	x3, [x19, #320]
  409fb8:	mov	x2, #0x0                   	// #0
  409fbc:	madd	x3, x0, x7, x3
  409fc0:	ldr	x6, [x3, #8]
  409fc4:	b	40a300 <wcrtomb@plt+0x78f0>
  409fc8:	ldr	x0, [x19, #144]
  409fcc:	lsl	x22, x25, #3
  409fd0:	ldr	x1, [x0, x22]
  409fd4:	sub	x0, x1, #0x100
  409fd8:	cmp	x0, #0x6
  409fdc:	b.hi	40a1d8 <wcrtomb@plt+0x77c8>  // b.pmore
  409fe0:	cmp	w0, #0x6
  409fe4:	b.hi	40a1d8 <wcrtomb@plt+0x77c8>  // b.pmore
  409fe8:	ldr	x2, [sp, #104]
  409fec:	ldrb	w0, [x2, w0, uxtw]
  409ff0:	adr	x2, 409ffc <wcrtomb@plt+0x75ec>
  409ff4:	add	x0, x2, w0, sxtb #2
  409ff8:	br	x0
  409ffc:	mov	w0, #0x1                   	// #1
  40a000:	strb	w0, [x20]
  40a004:	stp	xzr, xzr, [x20, #8]
  40a008:	add	x20, x20, #0x18
  40a00c:	add	x25, x25, #0x1
  40a010:	b	409f50 <wcrtomb@plt+0x7540>
  40a014:	ldp	x0, x7, [x20, #-16]
  40a018:	mov	x4, #0xfffffffffffffff0    	// #-16
  40a01c:	mov	x5, #0x0                   	// #0
  40a020:	mov	x28, #0x18                  	// #24
  40a024:	madd	x26, x7, x4, x23
  40a028:	sub	x1, x24, x0, lsl #4
  40a02c:	stp	x1, x0, [sp, #184]
  40a030:	cmp	x7, x5
  40a034:	b.gt	40a054 <wcrtomb@plt+0x7644>
  40a038:	ldr	x0, [x19, #144]
  40a03c:	ldr	x0, [x0, x22]
  40a040:	cmp	x0, #0x103
  40a044:	b.eq	40a00c <wcrtomb@plt+0x75fc>  // b.none
  40a048:	mov	w0, #0x1                   	// #1
  40a04c:	sturb	w0, [x20, #-24]
  40a050:	b	40a00c <wcrtomb@plt+0x75fc>
  40a054:	ldr	x1, [x26]
  40a058:	add	x3, sp, #0xd0
  40a05c:	ldr	x0, [x19, #320]
  40a060:	mov	w2, #0xffffffff            	// #-1
  40a064:	stp	x7, x5, [sp, #112]
  40a068:	madd	x1, x1, x28, x0
  40a06c:	add	x0, sp, #0xb8
  40a070:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40a074:	ldr	x1, [x26], #16
  40a078:	ldr	x0, [x19, #320]
  40a07c:	madd	x1, x1, x28, x0
  40a080:	add	x0, sp, #0xd0
  40a084:	bl	409560 <wcrtomb@plt+0x6b50>
  40a088:	ldp	x7, x5, [sp, #112]
  40a08c:	add	x5, x5, #0x1
  40a090:	b	40a030 <wcrtomb@plt+0x7620>
  40a094:	ldp	x6, x8, [x20, #-16]
  40a098:	sub	x9, x20, #0x18
  40a09c:	ldur	x4, [x20, #-32]
  40a0a0:	sub	x7, x20, #0x30
  40a0a4:	mov	x5, #0x0                   	// #0
  40a0a8:	mov	x28, #0x18                  	// #24
  40a0ac:	lsl	x20, x8, #4
  40a0b0:	lsl	x11, x4, #4
  40a0b4:	add	x20, x20, x4, lsl #4
  40a0b8:	sub	x22, x24, x6, lsl #4
  40a0bc:	sub	x20, x23, x20
  40a0c0:	stp	x22, x6, [sp, #184]
  40a0c4:	cmp	x4, x5
  40a0c8:	b.gt	40a108 <wcrtomb@plt+0x76f8>
  40a0cc:	ldrb	w5, [x7]
  40a0d0:	cbz	w5, 40a0e4 <wcrtomb@plt+0x76d4>
  40a0d4:	ldr	x0, [x7, #8]
  40a0d8:	mov	x22, x24
  40a0dc:	add	x0, x0, x6
  40a0e0:	str	x0, [x7, #8]
  40a0e4:	ldrb	w1, [x9]
  40a0e8:	cbnz	w1, 40a168 <wcrtomb@plt+0x7758>
  40a0ec:	add	x4, x20, x11
  40a0f0:	mov	x0, #0x0                   	// #0
  40a0f4:	cmp	x8, x0
  40a0f8:	b.gt	40a18c <wcrtomb@plt+0x777c>
  40a0fc:	sub	x23, x23, x11
  40a100:	str	x8, [x7, #16]
  40a104:	b	40a170 <wcrtomb@plt+0x7760>
  40a108:	lsl	x12, x5, #4
  40a10c:	add	x3, sp, #0xd0
  40a110:	ldr	x0, [x19, #320]
  40a114:	mov	w2, #0xffffffff            	// #-1
  40a118:	ldr	x1, [x20, x12]
  40a11c:	stp	x12, x5, [sp, #112]
  40a120:	stp	x6, x8, [sp, #128]
  40a124:	madd	x1, x1, x28, x0
  40a128:	add	x0, sp, #0xb8
  40a12c:	stp	x4, x11, [sp, #144]
  40a130:	stp	x9, x7, [sp, #160]
  40a134:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40a138:	ldr	x12, [sp, #112]
  40a13c:	ldr	x0, [x19, #320]
  40a140:	ldr	x1, [x20, x12]
  40a144:	madd	x1, x1, x28, x0
  40a148:	add	x0, sp, #0xd0
  40a14c:	bl	409560 <wcrtomb@plt+0x6b50>
  40a150:	ldp	x5, x6, [sp, #120]
  40a154:	ldp	x8, x4, [sp, #136]
  40a158:	ldp	x11, x9, [sp, #152]
  40a15c:	add	x5, x5, #0x1
  40a160:	ldr	x7, [sp, #168]
  40a164:	b	40a0c4 <wcrtomb@plt+0x76b4>
  40a168:	add	x4, x8, x4
  40a16c:	str	x4, [x7, #16]
  40a170:	cmp	w5, #0x0
  40a174:	mov	x20, x9
  40a178:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a17c:	mov	x24, x22
  40a180:	cset	w0, ne  // ne = any
  40a184:	strb	w0, [x7]
  40a188:	b	40a00c <wcrtomb@plt+0x75fc>
  40a18c:	add	x6, x20, x0, lsl #4
  40a190:	add	x0, x0, #0x1
  40a194:	ldp	x2, x3, [x4], #16
  40a198:	stp	x2, x3, [x6]
  40a19c:	b	40a0f4 <wcrtomb@plt+0x76e4>
  40a1a0:	ldur	x0, [x20, #-40]
  40a1a4:	sub	x20, x20, #0x18
  40a1a8:	ldr	x1, [x20, #8]
  40a1ac:	add	x0, x0, x1
  40a1b0:	stur	x0, [x20, #-16]
  40a1b4:	ldur	x0, [x20, #-8]
  40a1b8:	ldr	x1, [x20, #16]
  40a1bc:	add	x0, x0, x1
  40a1c0:	ldrb	w1, [x20]
  40a1c4:	stur	x0, [x20, #-8]
  40a1c8:	ldurb	w0, [x20, #-24]
  40a1cc:	orr	w0, w0, w1
  40a1d0:	sturb	w0, [x20, #-24]
  40a1d4:	b	40a00c <wcrtomb@plt+0x75fc>
  40a1d8:	cmp	x1, #0x112
  40a1dc:	str	x25, [x23]
  40a1e0:	cset	w0, eq  // eq = none
  40a1e4:	str	x25, [x24]
  40a1e8:	strb	w0, [x20]
  40a1ec:	mov	w0, #0x1ff                 	// #511
  40a1f0:	str	w0, [x23, #8]
  40a1f4:	add	x24, x24, #0x10
  40a1f8:	add	x23, x23, #0x10
  40a1fc:	stur	w0, [x24, #-8]
  40a200:	stp	x27, x27, [x20, #8]
  40a204:	add	x20, x20, #0x18
  40a208:	b	40a00c <wcrtomb@plt+0x75fc>
  40a20c:	ldr	x1, [x19, #320]
  40a210:	mul	x26, x20, x25
  40a214:	add	x1, x1, x26
  40a218:	ldr	x0, [x1, #8]
  40a21c:	cmp	x0, #0x0
  40a220:	b.gt	40a22c <wcrtomb@plt+0x781c>
  40a224:	add	x20, x20, #0x1
  40a228:	b	409f7c <wcrtomb@plt+0x756c>
  40a22c:	ldr	x0, [x19, #144]
  40a230:	ldr	x0, [x0, x20, lsl #3]
  40a234:	sub	x2, x0, #0x100
  40a238:	cmp	x2, #0x12
  40a23c:	b.hi	40a224 <wcrtomb@plt+0x7814>  // b.pmore
  40a240:	cmp	x0, #0x112
  40a244:	b.eq	40a224 <wcrtomb@plt+0x7814>  // b.none
  40a248:	cmp	x0, #0x10a
  40a24c:	b.eq	40a224 <wcrtomb@plt+0x7814>  // b.none
  40a250:	sub	x0, x0, #0x10c
  40a254:	cmp	x0, #0x5
  40a258:	b.hi	40a2d4 <wcrtomb@plt+0x78c4>  // b.pmore
  40a25c:	ldr	x2, [sp, #104]
  40a260:	ldrh	w27, [x2, x0, lsl #1]
  40a264:	mov	x23, #0x0                   	// #0
  40a268:	mov	x0, x20
  40a26c:	bl	408ed0 <wcrtomb@plt+0x64c0>
  40a270:	ldr	x0, [x19, #152]
  40a274:	cmp	x23, x0
  40a278:	b.ge	40a224 <wcrtomb@plt+0x7814>  // b.tcont
  40a27c:	cmp	x20, x23
  40a280:	b.eq	40a2cc <wcrtomb@plt+0x78bc>  // b.none
  40a284:	ldr	x28, [x19, #320]
  40a288:	madd	x24, x23, x25, x28
  40a28c:	ldr	x0, [x24, #8]
  40a290:	cmp	x0, #0x0
  40a294:	b.le	40a2cc <wcrtomb@plt+0x78bc>
  40a298:	mov	x1, x24
  40a29c:	mov	x0, x20
  40a2a0:	bl	408ed0 <wcrtomb@plt+0x64c0>
  40a2a4:	ands	w22, w27, w0
  40a2a8:	b.eq	40a2cc <wcrtomb@plt+0x78bc>  // b.none
  40a2ac:	add	x1, sp, #0xe8
  40a2b0:	mov	x0, x24
  40a2b4:	bl	409560 <wcrtomb@plt+0x6b50>
  40a2b8:	mov	x3, x24
  40a2bc:	mov	w2, w22
  40a2c0:	add	x1, x28, x26
  40a2c4:	add	x0, sp, #0xe8
  40a2c8:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40a2cc:	add	x23, x23, #0x1
  40a2d0:	b	40a270 <wcrtomb@plt+0x7860>
  40a2d4:	mov	w27, #0x1ff                 	// #511
  40a2d8:	b	40a264 <wcrtomb@plt+0x7854>
  40a2dc:	ldr	x4, [x3]
  40a2e0:	lsl	x1, x2, #4
  40a2e4:	ldr	x4, [x4, x1]
  40a2e8:	cmp	x4, x0
  40a2ec:	b.ne	40a310 <wcrtomb@plt+0x7900>  // b.any
  40a2f0:	ldrb	w1, [x20, x0]
  40a2f4:	orr	w1, w1, #0x1
  40a2f8:	strb	w1, [x20, x0]
  40a2fc:	add	x2, x2, #0x1
  40a300:	cmp	x2, x6
  40a304:	b.lt	40a2dc <wcrtomb@plt+0x78cc>  // b.tstop
  40a308:	add	x0, x0, #0x1
  40a30c:	b	409fac <wcrtomb@plt+0x759c>
  40a310:	ldrb	w1, [x20, x4]
  40a314:	b.ge	40a324 <wcrtomb@plt+0x7914>  // b.tcont
  40a318:	orr	w1, w1, #0x2
  40a31c:	strb	w1, [x20, x4]
  40a320:	b	40a2fc <wcrtomb@plt+0x78ec>
  40a324:	ands	w1, w1, #0x8
  40a328:	orr	w5, w1, #0x4
  40a32c:	csel	w1, w9, w5, eq  // eq = none
  40a330:	b	40a31c <wcrtomb@plt+0x790c>
  40a334:	ldrb	w0, [x20]
  40a338:	mov	x22, #0x0                   	// #0
  40a33c:	ldr	x1, [x19, #176]
  40a340:	orr	w0, w0, #0x10
  40a344:	strb	w0, [x20]
  40a348:	add	x0, sp, #0xe8
  40a34c:	bl	408e9c <wcrtomb@plt+0x648c>
  40a350:	ldr	x0, [x19, #152]
  40a354:	mov	x1, #0x4                   	// #4
  40a358:	bl	41105c <wcrtomb@plt+0xe64c>
  40a35c:	str	x0, [x19, #336]
  40a360:	ldr	x0, [x19, #152]
  40a364:	cmp	x22, x0
  40a368:	b.lt	40a58c <wcrtomb@plt+0x7b7c>  // b.tstop
  40a36c:	mov	x1, #0x8                   	// #8
  40a370:	bl	41105c <wcrtomb@plt+0xe64c>
  40a374:	mov	x23, x0
  40a378:	mov	x2, #0xffffffffffffffff    	// #-1
  40a37c:	ldr	x1, [x19, #152]
  40a380:	mov	x0, #0x1                   	// #1
  40a384:	str	xzr, [x23]
  40a388:	cmp	x0, x1
  40a38c:	b.lt	40a708 <wcrtomb@plt+0x7cf8>  // b.tstop
  40a390:	ldr	x0, [x19, #176]
  40a394:	mov	x1, #0x8                   	// #8
  40a398:	bl	41105c <wcrtomb@plt+0xe64c>
  40a39c:	mov	x26, x0
  40a3a0:	ldr	x0, [x19, #176]
  40a3a4:	mov	x1, #0x18                  	// #24
  40a3a8:	bl	41105c <wcrtomb@plt+0xe64c>
  40a3ac:	mov	x25, x0
  40a3b0:	ldr	x0, [x19, #176]
  40a3b4:	mov	x1, #0x4                   	// #4
  40a3b8:	bl	41105c <wcrtomb@plt+0xe64c>
  40a3bc:	mov	x24, x0
  40a3c0:	ldrb	w0, [x19, #1048]
  40a3c4:	cbz	w0, 40a714 <wcrtomb@plt+0x7d04>
  40a3c8:	ldr	x0, [x19, #176]
  40a3cc:	mov	x1, #0x1                   	// #1
  40a3d0:	bl	41105c <wcrtomb@plt+0xe64c>
  40a3d4:	mov	x28, x0
  40a3d8:	adrp	x27, 408000 <wcrtomb@plt+0x55f0>
  40a3dc:	add	x27, x27, #0xf60
  40a3e0:	mov	x5, #0x0                   	// #0
  40a3e4:	mov	x22, #0x1                   	// #1
  40a3e8:	ldr	x1, [x19, #152]
  40a3ec:	ldr	x0, [x19, #320]
  40a3f0:	cmp	x5, x1
  40a3f4:	b.lt	40a71c <wcrtomb@plt+0x7d0c>  // b.tstop
  40a3f8:	mov	x1, #0x0                   	// #0
  40a3fc:	mov	x7, #0x18                  	// #24
  40a400:	ldr	x0, [x19, #144]
  40a404:	ldr	x2, [x26, x1, lsl #3]
  40a408:	ldr	x5, [x19, #320]
  40a40c:	str	x2, [x0, x1, lsl #3]
  40a410:	mul	x0, x1, x7
  40a414:	add	x5, x5, x0
  40a418:	add	x0, x25, x0
  40a41c:	ldp	x2, x3, [x0]
  40a420:	stp	x2, x3, [x5]
  40a424:	ldr	w2, [x24, x1, lsl #2]
  40a428:	ldr	x0, [x0, #16]
  40a42c:	str	x0, [x5, #16]
  40a430:	ldr	x0, [x19, #336]
  40a434:	str	w2, [x0, x1, lsl #2]
  40a438:	cbz	x28, 40a448 <wcrtomb@plt+0x7a38>
  40a43c:	ldr	x0, [x19, #280]
  40a440:	ldrb	w2, [x28, x1]
  40a444:	strb	w2, [x0, x1]
  40a448:	add	x1, x1, #0x1
  40a44c:	cmp	x1, x22
  40a450:	b.ne	40a400 <wcrtomb@plt+0x79f0>  // b.any
  40a454:	str	x1, [x19, #152]
  40a458:	mov	x0, x26
  40a45c:	str	x1, [x19, #176]
  40a460:	bl	4027a0 <free@plt>
  40a464:	mov	x0, x25
  40a468:	bl	4027a0 <free@plt>
  40a46c:	mov	x0, x24
  40a470:	bl	4027a0 <free@plt>
  40a474:	mov	x0, x28
  40a478:	bl	4027a0 <free@plt>
  40a47c:	mov	x0, x23
  40a480:	bl	4027a0 <free@plt>
  40a484:	ldr	x0, [sp, #232]
  40a488:	bl	4027a0 <free@plt>
  40a48c:	mov	x0, x20
  40a490:	bl	4027a0 <free@plt>
  40a494:	mov	x0, #0x1ff                 	// #511
  40a498:	mov	x20, #0x0                   	// #0
  40a49c:	bfxil	x20, x0, #0, #32
  40a4a0:	mov	x1, #0x1                   	// #1
  40a4a4:	add	x0, sp, #0xb8
  40a4a8:	bl	408e9c <wcrtomb@plt+0x648c>
  40a4ac:	add	x2, sp, #0xb8
  40a4b0:	mov	x1, x20
  40a4b4:	mov	x0, #0x0                   	// #0
  40a4b8:	bl	409b70 <wcrtomb@plt+0x7160>
  40a4bc:	ldr	x0, [x19, #152]
  40a4c0:	mov	x1, #0x4                   	// #4
  40a4c4:	bl	41105c <wcrtomb@plt+0xe64c>
  40a4c8:	str	x0, [x19, #344]
  40a4cc:	ldr	x7, [x19, #152]
  40a4d0:	mov	x1, #0x0                   	// #0
  40a4d4:	mov	w3, #0x49                  	// #73
  40a4d8:	mov	w8, #0x4                   	// #4
  40a4dc:	mov	x9, #0x18                  	// #24
  40a4e0:	cmp	x7, x1
  40a4e4:	b.gt	40a7f8 <wcrtomb@plt+0x7de8>
  40a4e8:	add	x1, sp, #0xb8
  40a4ec:	add	x0, x19, #0x158
  40a4f0:	bl	409964 <wcrtomb@plt+0x6f54>
  40a4f4:	mov	w20, w0
  40a4f8:	tbz	w20, #2, 40a50c <wcrtomb@plt+0x7afc>
  40a4fc:	add	x1, sp, #0xb8
  40a500:	mov	x0, x19
  40a504:	mov	w2, #0x4                   	// #4
  40a508:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40a50c:	add	x1, sp, #0xb8
  40a510:	eor	w2, w20, #0x7
  40a514:	mov	x0, x19
  40a518:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40a51c:	sxtw	x1, w0
  40a520:	str	w0, [x19, #364]
  40a524:	str	x1, [x19, #400]
  40a528:	tbz	w20, #1, 40a540 <wcrtomb@plt+0x7b30>
  40a52c:	add	x1, sp, #0xb8
  40a530:	mov	x0, x19
  40a534:	mov	w2, #0x2                   	// #2
  40a538:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40a53c:	str	w0, [x19, #364]
  40a540:	ldr	w0, [x19, #364]
  40a544:	str	wzr, [x19, #360]
  40a548:	add	w0, w0, #0x1
  40a54c:	str	w0, [x19, #364]
  40a550:	mov	x0, x21
  40a554:	bl	4027a0 <free@plt>
  40a558:	ldr	x0, [sp, #96]
  40a55c:	bl	4027a0 <free@plt>
  40a560:	ldr	x0, [sp, #208]
  40a564:	bl	4027a0 <free@plt>
  40a568:	ldr	x0, [sp, #184]
  40a56c:	bl	4027a0 <free@plt>
  40a570:	ldp	x19, x20, [sp, #16]
  40a574:	ldp	x21, x22, [sp, #32]
  40a578:	ldp	x23, x24, [sp, #48]
  40a57c:	ldp	x25, x26, [sp, #64]
  40a580:	ldp	x27, x28, [sp, #80]
  40a584:	ldp	x29, x30, [sp], #256
  40a588:	ret
  40a58c:	ldrb	w0, [x20, x22]
  40a590:	tbz	w0, #4, 40a5c4 <wcrtomb@plt+0x7bb4>
  40a594:	ldr	x0, [x19, #336]
  40a598:	lsl	x26, x22, #2
  40a59c:	ldr	x25, [x19, #320]
  40a5a0:	mov	x23, #0x0                   	// #0
  40a5a4:	str	wzr, [x0, x26]
  40a5a8:	mov	x0, #0x18                  	// #24
  40a5ac:	mov	x27, #0x0                   	// #0
  40a5b0:	madd	x24, x22, x0, x25
  40a5b4:	ldr	x0, [x24, #8]
  40a5b8:	cmp	x23, x0
  40a5bc:	b.lt	40a5cc <wcrtomb@plt+0x7bbc>  // b.tstop
  40a5c0:	str	x27, [x24, #8]
  40a5c4:	add	x22, x22, #0x1
  40a5c8:	b	40a360 <wcrtomb@plt+0x7950>
  40a5cc:	ldr	x3, [x24]
  40a5d0:	lsl	x0, x23, #4
  40a5d4:	add	x9, x3, x23, lsl #4
  40a5d8:	ldr	w7, [x9, #8]
  40a5dc:	cbz	w7, 40a600 <wcrtomb@plt+0x7bf0>
  40a5e0:	ldr	x0, [x3, x0]
  40a5e4:	ldr	x10, [x19, #144]
  40a5e8:	ldr	x11, [x10, x0, lsl #3]
  40a5ec:	tbz	x11, #63, 40a608 <wcrtomb@plt+0x7bf8>
  40a5f0:	ldr	x1, [x19, #336]
  40a5f4:	ldr	w0, [x1, x26]
  40a5f8:	orr	w7, w0, w7
  40a5fc:	str	w7, [x1, x26]
  40a600:	add	x23, x23, #0x1
  40a604:	b	40a5b4 <wcrtomb@plt+0x7ba4>
  40a608:	ldrb	w1, [x20, x0]
  40a60c:	tst	w1, #0x6
  40a610:	b.ne	40a6ec <wcrtomb@plt+0x7cdc>  // b.any
  40a614:	add	x12, x3, #0x8
  40a618:	mov	x2, #0x0                   	// #0
  40a61c:	b	40a6e4 <wcrtomb@plt+0x7cd4>
  40a620:	lsl	x6, x2, #4
  40a624:	ldr	w13, [x12, x6]
  40a628:	cmp	w7, w13
  40a62c:	b.ne	40a6e0 <wcrtomb@plt+0x7cd0>  // b.any
  40a630:	ldr	x28, [x3, x6]
  40a634:	ldrb	w6, [x20, x28]
  40a638:	tst	w6, #0x6
  40a63c:	b.ne	40a6e0 <wcrtomb@plt+0x7cd0>  // b.any
  40a640:	ldr	x13, [x10, x28, lsl #3]
  40a644:	cmp	x11, x13
  40a648:	b.ne	40a6e0 <wcrtomb@plt+0x7cd0>  // b.any
  40a64c:	eor	w6, w1, w6
  40a650:	tbnz	w6, #0, 40a6e0 <wcrtomb@plt+0x7cd0>
  40a654:	mov	x2, #0x18                  	// #24
  40a658:	madd	x6, x0, x2, x25
  40a65c:	tbz	w1, #0, 40a670 <wcrtomb@plt+0x7c60>
  40a660:	mov	x1, x6
  40a664:	str	x6, [sp, #104]
  40a668:	bl	408ed0 <wcrtomb@plt+0x64c0>
  40a66c:	ldr	x6, [sp, #104]
  40a670:	mov	x0, #0x18                  	// #24
  40a674:	madd	x28, x28, x0, x25
  40a678:	ldr	x0, [x6, #8]
  40a67c:	cmp	x0, #0x3
  40a680:	b.le	40a6d8 <wcrtomb@plt+0x7cc8>
  40a684:	add	x3, sp, #0xe8
  40a688:	mov	w2, #0xffffffff            	// #-1
  40a68c:	mov	x1, x28
  40a690:	mov	x0, x6
  40a694:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40a698:	mov	x1, x28
  40a69c:	add	x0, sp, #0xe8
  40a6a0:	bl	409560 <wcrtomb@plt+0x6b50>
  40a6a4:	b	40a600 <wcrtomb@plt+0x7bf0>
  40a6a8:	ldr	x0, [x6]
  40a6ac:	mov	x2, x28
  40a6b0:	stp	x3, x6, [sp, #104]
  40a6b4:	add	x0, x0, x3, lsl #4
  40a6b8:	ldp	x0, x1, [x0]
  40a6bc:	bl	409a90 <wcrtomb@plt+0x7080>
  40a6c0:	ldp	x3, x6, [sp, #104]
  40a6c4:	add	x3, x3, #0x1
  40a6c8:	ldr	x0, [x6, #8]
  40a6cc:	cmp	x3, x0
  40a6d0:	b.lt	40a6a8 <wcrtomb@plt+0x7c98>  // b.tstop
  40a6d4:	b	40a600 <wcrtomb@plt+0x7bf0>
  40a6d8:	mov	x3, #0x0                   	// #0
  40a6dc:	b	40a6c8 <wcrtomb@plt+0x7cb8>
  40a6e0:	add	x2, x2, #0x1
  40a6e4:	cmp	x2, x27
  40a6e8:	b.ne	40a620 <wcrtomb@plt+0x7c10>  // b.any
  40a6ec:	add	x3, x3, x27, lsl #4
  40a6f0:	orr	w1, w1, #0x10
  40a6f4:	ldp	x6, x7, [x9]
  40a6f8:	add	x27, x27, #0x1
  40a6fc:	stp	x6, x7, [x3]
  40a700:	strb	w1, [x20, x0]
  40a704:	b	40a600 <wcrtomb@plt+0x7bf0>
  40a708:	str	x2, [x23, x0, lsl #3]
  40a70c:	add	x0, x0, #0x1
  40a710:	b	40a388 <wcrtomb@plt+0x7978>
  40a714:	mov	x28, #0x0                   	// #0
  40a718:	b	40a3d8 <wcrtomb@plt+0x79c8>
  40a71c:	mov	x2, #0x18                  	// #24
  40a720:	lsl	x3, x5, #3
  40a724:	ldr	x1, [x23, x5, lsl #3]
  40a728:	mul	x2, x5, x2
  40a72c:	cmn	x1, #0x1
  40a730:	add	x8, x0, x2
  40a734:	ldr	x0, [x0, x2]
  40a738:	b.ne	40a760 <wcrtomb@plt+0x7d50>  // b.any
  40a73c:	stp	x2, x5, [sp, #104]
  40a740:	bl	4027a0 <free@plt>
  40a744:	ldp	x2, x5, [sp, #104]
  40a748:	ldr	x0, [x19, #320]
  40a74c:	add	x1, x0, x2
  40a750:	str	xzr, [x0, x2]
  40a754:	str	xzr, [x1, #8]
  40a758:	add	x5, x5, #0x1
  40a75c:	b	40a3e8 <wcrtomb@plt+0x79d8>
  40a760:	ldr	x2, [x19, #144]
  40a764:	ldr	x2, [x2, x3]
  40a768:	str	x2, [x26, x1, lsl #3]
  40a76c:	mov	x2, #0x18                  	// #24
  40a770:	madd	x7, x1, x2, x25
  40a774:	ldp	x2, x3, [x8]
  40a778:	stp	x2, x3, [x7]
  40a77c:	ldr	x2, [x8, #16]
  40a780:	str	x2, [x7, #16]
  40a784:	ldr	x2, [x19, #336]
  40a788:	ldr	w2, [x2, x5, lsl #2]
  40a78c:	str	w2, [x24, x1, lsl #2]
  40a790:	cbz	x28, 40a7a0 <wcrtomb@plt+0x7d90>
  40a794:	ldr	x2, [x19, #280]
  40a798:	ldrb	w2, [x2, x5]
  40a79c:	strb	w2, [x28, x1]
  40a7a0:	ldr	x1, [x8, #8]
  40a7a4:	mov	x3, #0x0                   	// #0
  40a7a8:	cmp	x3, x1
  40a7ac:	b.lt	40a7c8 <wcrtomb@plt+0x7db8>  // b.tstop
  40a7b0:	mov	x3, x27
  40a7b4:	mov	x2, #0x10                  	// #16
  40a7b8:	str	x5, [sp, #104]
  40a7bc:	bl	402460 <qsort@plt>
  40a7c0:	ldr	x5, [sp, #104]
  40a7c4:	b	40a758 <wcrtomb@plt+0x7d48>
  40a7c8:	lsl	x7, x3, #4
  40a7cc:	ldr	x2, [x0, x7]
  40a7d0:	lsl	x2, x2, #3
  40a7d4:	ldr	x8, [x23, x2]
  40a7d8:	cmn	x8, #0x1
  40a7dc:	b.ne	40a7e8 <wcrtomb@plt+0x7dd8>  // b.any
  40a7e0:	str	x22, [x23, x2]
  40a7e4:	add	x22, x22, #0x1
  40a7e8:	ldr	x2, [x23, x2]
  40a7ec:	add	x3, x3, #0x1
  40a7f0:	str	x2, [x0, x7]
  40a7f4:	b	40a7a8 <wcrtomb@plt+0x7d98>
  40a7f8:	ldr	x5, [x19, #336]
  40a7fc:	lsl	x4, x1, #2
  40a800:	str	wzr, [x0, x1, lsl #2]
  40a804:	ldr	w2, [x5, x4]
  40a808:	eor	w2, w2, w2, asr #2
  40a80c:	ands	w2, w2, w3
  40a810:	csel	w2, w2, w8, eq  // eq = none
  40a814:	str	w2, [x0, x1, lsl #2]
  40a818:	ldr	w4, [x5, x4]
  40a81c:	eor	w4, w4, w4, asr #1
  40a820:	tst	w4, w3
  40a824:	b.eq	40a830 <wcrtomb@plt+0x7e20>  // b.none
  40a828:	orr	w2, w2, #0x2
  40a82c:	str	w2, [x0, x1, lsl #2]
  40a830:	ldr	x4, [x19, #320]
  40a834:	mov	x2, #0x0                   	// #0
  40a838:	madd	x4, x1, x9, x4
  40a83c:	ldr	x10, [x4, #8]
  40a840:	cmp	x10, x2
  40a844:	b.gt	40a850 <wcrtomb@plt+0x7e40>
  40a848:	add	x1, x1, #0x1
  40a84c:	b	40a4e0 <wcrtomb@plt+0x7ad0>
  40a850:	ldr	x5, [x4]
  40a854:	add	x5, x5, x2, lsl #4
  40a858:	ldr	w6, [x5, #8]
  40a85c:	eor	w6, w6, w6, asr #2
  40a860:	tst	w6, w3
  40a864:	b.eq	40a874 <wcrtomb@plt+0x7e64>  // b.none
  40a868:	ldr	w6, [x0, x1, lsl #2]
  40a86c:	orr	w6, w6, #0x4
  40a870:	str	w6, [x0, x1, lsl #2]
  40a874:	ldr	w5, [x5, #8]
  40a878:	eor	w5, w5, w5, asr #1
  40a87c:	tst	w5, w3
  40a880:	b.eq	40a890 <wcrtomb@plt+0x7e80>  // b.none
  40a884:	ldr	w5, [x0, x1, lsl #2]
  40a888:	orr	w5, w5, #0x2
  40a88c:	str	w5, [x0, x1, lsl #2]
  40a890:	add	x2, x2, #0x1
  40a894:	b	40a840 <wcrtomb@plt+0x7e30>
  40a898:	stp	x29, x30, [sp, #-240]!
  40a89c:	mov	x29, sp
  40a8a0:	stp	x19, x20, [sp, #16]
  40a8a4:	mov	x20, #0x50                  	// #80
  40a8a8:	mul	x20, x0, x20
  40a8ac:	stp	x21, x22, [sp, #32]
  40a8b0:	mov	x21, x0
  40a8b4:	stp	x23, x24, [sp, #48]
  40a8b8:	and	w23, w2, #0xff
  40a8bc:	stp	x27, x28, [sp, #80]
  40a8c0:	mov	x27, x1
  40a8c4:	ldp	x2, x0, [x1, #368]
  40a8c8:	stp	x25, x26, [sp, #64]
  40a8cc:	ldr	x1, [x1, #296]
  40a8d0:	add	x1, x1, x20
  40a8d4:	ldrh	w1, [x1, #34]
  40a8d8:	cmp	w1, #0x0
  40a8dc:	lsl	x1, x21, #3
  40a8e0:	csel	x0, x0, x2, ne  // ne = any
  40a8e4:	str	x1, [sp, #120]
  40a8e8:	add	x24, x0, x21, lsl #3
  40a8ec:	ldr	x19, [x0, x1]
  40a8f0:	cbnz	x19, 40a948 <wcrtomb@plt+0x7f38>
  40a8f4:	ldr	w0, [x27, #360]
  40a8f8:	cmp	w0, #0x3ff
  40a8fc:	b.le	40a914 <wcrtomb@plt+0x7f04>
  40a900:	ldrsw	x19, [x27, #364]
  40a904:	ldr	x0, [x27, #352]
  40a908:	cmp	x0, x19
  40a90c:	b.gt	40aa14 <wcrtomb@plt+0x8004>
  40a910:	str	wzr, [x27, #360]
  40a914:	ldr	w0, [x27, #360]
  40a918:	add	w0, w0, #0x1
  40a91c:	str	w0, [x27, #360]
  40a920:	mov	x0, #0x800                 	// #2048
  40a924:	bl	41102c <wcrtomb@plt+0xe61c>
  40a928:	mov	x19, x0
  40a92c:	mov	x1, #0xfffffffffffffffe    	// #-2
  40a930:	mov	x0, #0x0                   	// #0
  40a934:	str	x19, [x24]
  40a938:	str	x1, [x19, x0, lsl #3]
  40a93c:	add	x0, x0, #0x1
  40a940:	cmp	x0, #0x100
  40a944:	b.ne	40a938 <wcrtomb@plt+0x7f28>  // b.any
  40a948:	ldr	x0, [x27, #384]
  40a94c:	mov	w2, #0x4                   	// #4
  40a950:	strb	wzr, [x0, x21]
  40a954:	ldr	x0, [x27, #296]
  40a958:	add	x0, x0, x20
  40a95c:	ldrb	w1, [x0, #32]
  40a960:	ldrh	w0, [x0, #34]
  40a964:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40a968:	tst	w0, #0xff
  40a96c:	b.eq	40a980 <wcrtomb@plt+0x7f70>  // b.none
  40a970:	ldr	x1, [x27, #384]
  40a974:	ldrb	w0, [x1, x21]
  40a978:	orr	w0, w0, #0x4
  40a97c:	strb	w0, [x1, x21]
  40a980:	ldr	x0, [x27, #296]
  40a984:	mov	w2, #0x2                   	// #2
  40a988:	add	x0, x0, x20
  40a98c:	ldrb	w1, [x0, #32]
  40a990:	ldrh	w0, [x0, #34]
  40a994:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40a998:	tst	w0, #0xff
  40a99c:	b.eq	40a9b0 <wcrtomb@plt+0x7fa0>  // b.none
  40a9a0:	ldr	x1, [x27, #384]
  40a9a4:	ldrb	w0, [x1, x21]
  40a9a8:	orr	w0, w0, #0x2
  40a9ac:	strb	w0, [x1, x21]
  40a9b0:	ldr	x0, [x27, #296]
  40a9b4:	mov	w2, #0x1                   	// #1
  40a9b8:	add	x0, x0, x20
  40a9bc:	ldrb	w1, [x0, #32]
  40a9c0:	ldrh	w0, [x0, #34]
  40a9c4:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40a9c8:	tst	w0, #0xff
  40a9cc:	b.eq	40a9e0 <wcrtomb@plt+0x7fd0>  // b.none
  40a9d0:	ldr	x1, [x27, #384]
  40a9d4:	ldrb	w0, [x1, x21]
  40a9d8:	orr	w0, w0, #0x1
  40a9dc:	strb	w0, [x1, x21]
  40a9e0:	ldr	x1, [x27, #176]
  40a9e4:	add	x0, sp, #0x80
  40a9e8:	mov	x22, #0x0                   	// #0
  40a9ec:	mov	x25, #0x18                  	// #24
  40a9f0:	bl	408e9c <wcrtomb@plt+0x648c>
  40a9f4:	ldr	x0, [x27, #296]
  40a9f8:	add	x0, x0, x20
  40a9fc:	ldr	x0, [x0, #16]
  40aa00:	cmp	x0, x22
  40aa04:	b.le	40aa90 <wcrtomb@plt+0x8080>
  40aa08:	lsl	x24, x22, #4
  40aa0c:	mov	x21, #0x0                   	// #0
  40aa10:	b	40aa60 <wcrtomb@plt+0x8050>
  40aa14:	ldr	x0, [x27, #368]
  40aa18:	lsl	x22, x19, #3
  40aa1c:	add	x19, x19, #0x1
  40aa20:	ldr	x0, [x0, x22]
  40aa24:	bl	4027a0 <free@plt>
  40aa28:	ldr	x0, [x27, #376]
  40aa2c:	ldr	x0, [x0, x22]
  40aa30:	bl	4027a0 <free@plt>
  40aa34:	ldr	x0, [x27, #376]
  40aa38:	str	xzr, [x0, x22]
  40aa3c:	ldr	x0, [x27, #368]
  40aa40:	str	xzr, [x0, x22]
  40aa44:	b	40a904 <wcrtomb@plt+0x7ef4>
  40aa48:	ldr	x0, [x1, x0]
  40aa4c:	add	x2, sp, #0x80
  40aa50:	add	x0, x0, x21, lsl #4
  40aa54:	add	x21, x21, #0x1
  40aa58:	ldp	x0, x1, [x0]
  40aa5c:	bl	409a90 <wcrtomb@plt+0x7080>
  40aa60:	ldr	x0, [x27, #296]
  40aa64:	ldr	x1, [x27, #320]
  40aa68:	add	x0, x0, x20
  40aa6c:	ldr	x0, [x0, #8]
  40aa70:	ldr	x0, [x0, x24]
  40aa74:	mul	x0, x0, x25
  40aa78:	add	x2, x1, x0
  40aa7c:	ldr	x2, [x2, #8]
  40aa80:	cmp	x2, x21
  40aa84:	b.gt	40aa48 <wcrtomb@plt+0x8038>
  40aa88:	add	x22, x22, #0x1
  40aa8c:	b	40a9f4 <wcrtomb@plt+0x7fe4>
  40aa90:	ldr	x1, [x27, #176]
  40aa94:	add	x0, sp, #0x98
  40aa98:	lsr	w25, w23, #6
  40aa9c:	add	x24, sp, #0xd0
  40aaa0:	and	w28, w23, #0x3f
  40aaa4:	mov	x26, #0x0                   	// #0
  40aaa8:	bl	408e9c <wcrtomb@plt+0x648c>
  40aaac:	mov	x0, #0xffffffffffffffff    	// #-1
  40aab0:	stp	x0, x0, [sp, #176]
  40aab4:	stp	x0, x0, [sp, #192]
  40aab8:	ldr	x0, [sp, #136]
  40aabc:	cmp	x0, x26
  40aac0:	b.gt	40aca4 <wcrtomb@plt+0x8294>
  40aac4:	ldr	x1, [x27, #176]
  40aac8:	add	x0, sp, #0xd0
  40aacc:	bl	408e9c <wcrtomb@plt+0x648c>
  40aad0:	ldr	x1, [sp, #160]
  40aad4:	ldrb	w0, [x27, #328]
  40aad8:	cmp	x1, #0x0
  40aadc:	b.le	40af38 <wcrtomb@plt+0x8528>
  40aae0:	cbz	w0, 40ab38 <wcrtomb@plt+0x8128>
  40aae4:	ldrb	w0, [x27, #1048]
  40aae8:	cbz	w0, 40ab14 <wcrtomb@plt+0x8104>
  40aaec:	ldr	x3, [sp, #152]
  40aaf0:	mov	x0, #0x0                   	// #0
  40aaf4:	ldr	x2, [x27, #280]
  40aaf8:	lsl	x5, x0, #4
  40aafc:	add	x0, x0, #0x1
  40ab00:	ldr	x5, [x3, x5]
  40ab04:	ldrb	w5, [x2, x5]
  40ab08:	tbz	w5, #0, 40ab38 <wcrtomb@plt+0x8128>
  40ab0c:	cmp	x1, x0
  40ab10:	b.ne	40aaf8 <wcrtomb@plt+0x80e8>  // b.any
  40ab14:	ldr	x0, [x27, #296]
  40ab18:	add	x3, sp, #0xd0
  40ab1c:	mov	w2, #0xffffffff            	// #-1
  40ab20:	add	x1, sp, #0x98
  40ab24:	add	x0, x0, #0x8
  40ab28:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40ab2c:	add	x1, sp, #0x98
  40ab30:	add	x0, sp, #0xd0
  40ab34:	bl	409560 <wcrtomb@plt+0x6b50>
  40ab38:	add	x5, sp, #0xb0
  40ab3c:	add	x6, x27, #0x3f0
  40ab40:	add	x7, x27, #0x3d0
  40ab44:	mov	x0, #0x0                   	// #0
  40ab48:	mov	w22, #0x0                   	// #0
  40ab4c:	ldr	x2, [x0, x5]
  40ab50:	ldr	x1, [x6, x0]
  40ab54:	tst	x2, x1
  40ab58:	b.eq	40ab60 <wcrtomb@plt+0x8150>  // b.none
  40ab5c:	orr	w22, w22, #0x4
  40ab60:	ldr	x3, [x7, x0]
  40ab64:	tst	x2, x3
  40ab68:	b.eq	40ab70 <wcrtomb@plt+0x8160>  // b.none
  40ab6c:	orr	w22, w22, #0x2
  40ab70:	orr	x1, x1, x3
  40ab74:	bics	xzr, x2, x1
  40ab78:	b.eq	40ab80 <wcrtomb@plt+0x8170>  // b.none
  40ab7c:	orr	w22, w22, #0x1
  40ab80:	add	x0, x0, #0x8
  40ab84:	cmp	x0, #0x20
  40ab88:	b.ne	40ab4c <wcrtomb@plt+0x813c>  // b.any
  40ab8c:	add	x1, sp, #0x98
  40ab90:	add	x0, x27, #0x158
  40ab94:	bl	409964 <wcrtomb@plt+0x6f54>
  40ab98:	mov	w20, w0
  40ab9c:	bics	wzr, w22, w0
  40aba0:	b.eq	40af20 <wcrtomb@plt+0x8510>  // b.none
  40aba4:	eor	w2, w0, #0x7
  40aba8:	add	x1, sp, #0x98
  40abac:	mov	x0, x27
  40abb0:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40abb4:	mov	x21, x0
  40abb8:	and	w20, w20, w22
  40abbc:	tbz	w20, #2, 40af28 <wcrtomb@plt+0x8518>
  40abc0:	add	x1, sp, #0x98
  40abc4:	mov	x0, x27
  40abc8:	mov	w2, #0x4                   	// #4
  40abcc:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40abd0:	mov	x22, x0
  40abd4:	tbz	w20, #1, 40af30 <wcrtomb@plt+0x8520>
  40abd8:	add	x1, sp, #0x98
  40abdc:	mov	x0, x27
  40abe0:	mov	w2, #0x2                   	// #2
  40abe4:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40abe8:	mov	x20, x0
  40abec:	mov	x0, x27
  40abf0:	bl	40921c <wcrtomb@plt+0x680c>
  40abf4:	add	x24, sp, #0xb0
  40abf8:	add	x2, x27, #0x1cc
  40abfc:	mov	x1, #0x0                   	// #0
  40ac00:	lsr	w0, w1, #6
  40ac04:	ldr	x0, [x24, x0, lsl #3]
  40ac08:	lsr	x0, x0, x1
  40ac0c:	tbz	w0, #0, 40ac28 <wcrtomb@plt+0x8218>
  40ac10:	ldrb	w0, [x2, x1]
  40ac14:	cmp	w0, #0x2
  40ac18:	b.eq	40af64 <wcrtomb@plt+0x8554>  // b.none
  40ac1c:	cmp	w0, #0x4
  40ac20:	csel	x0, x21, x22, ne  // ne = any
  40ac24:	str	x0, [x19, x1, lsl #3]
  40ac28:	add	x1, x1, #0x1
  40ac2c:	cmp	x1, #0x100
  40ac30:	b.ne	40ac00 <wcrtomb@plt+0x81f0>  // b.any
  40ac34:	ldr	x0, [sp, #152]
  40ac38:	bl	4027a0 <free@plt>
  40ac3c:	ldr	x0, [sp, #128]
  40ac40:	bl	4027a0 <free@plt>
  40ac44:	ldr	x0, [sp, #208]
  40ac48:	bl	4027a0 <free@plt>
  40ac4c:	ldrb	w0, [x27, #459]
  40ac50:	ubfx	x1, x0, #6, #2
  40ac54:	ldr	x1, [x24, x1, lsl #3]
  40ac58:	lsr	x1, x1, x0
  40ac5c:	tbz	w1, #0, 40ac80 <wcrtomb@plt+0x8270>
  40ac60:	ubfiz	x0, x0, #3, #8
  40ac64:	ldr	x2, [sp, #120]
  40ac68:	ldr	x1, [x19, x0]
  40ac6c:	ldr	x0, [x27, #392]
  40ac70:	str	x1, [x0, x2]
  40ac74:	mov	x1, #0xffffffffffffffff    	// #-1
  40ac78:	ldrb	w0, [x27, #459]
  40ac7c:	str	x1, [x19, x0, lsl #3]
  40ac80:	ubfiz	x23, x23, #3, #8
  40ac84:	ldp	x21, x22, [sp, #32]
  40ac88:	ldr	x0, [x19, x23]
  40ac8c:	ldp	x19, x20, [sp, #16]
  40ac90:	ldp	x23, x24, [sp, #48]
  40ac94:	ldp	x25, x26, [sp, #64]
  40ac98:	ldp	x27, x28, [sp, #80]
  40ac9c:	ldp	x29, x30, [sp], #240
  40aca0:	ret
  40aca4:	ldr	x1, [sp, #128]
  40aca8:	lsl	x0, x26, #4
  40acac:	add	x2, x1, x26, lsl #4
  40acb0:	ldp	x4, x5, [x2]
  40acb4:	stp	x4, x5, [sp, #96]
  40acb8:	ldr	w21, [x2, #8]
  40acbc:	ldr	x5, [x1, x0]
  40acc0:	ldr	x0, [x27, #144]
  40acc4:	lsl	x5, x5, #3
  40acc8:	ldr	x0, [x0, x5]
  40accc:	cmp	x0, #0xff
  40acd0:	b.hi	40ad38 <wcrtomb@plt+0x8328>  // b.pmore
  40acd4:	mov	x0, x24
  40acd8:	bl	409050 <wcrtomb@plt+0x6640>
  40acdc:	ldr	x0, [x27, #144]
  40ace0:	mov	x1, x24
  40ace4:	ldr	w0, [x0, x5]
  40ace8:	bl	408dfc <wcrtomb@plt+0x63ec>
  40acec:	ldr	x0, [x27, #144]
  40acf0:	ldr	x0, [x0, x5]
  40acf4:	cmp	x0, w23, uxtb
  40acf8:	b.ne	40ad68 <wcrtomb@plt+0x8358>  // b.any
  40acfc:	cmp	w21, #0x1ff
  40ad00:	b.ne	40adfc <wcrtomb@plt+0x83ec>  // b.any
  40ad04:	add	x1, sp, #0xb0
  40ad08:	mov	x0, #0x0                   	// #0
  40ad0c:	ldr	x5, [x0, x24]
  40ad10:	add	x0, x0, #0x8
  40ad14:	ldr	x2, [x1]
  40ad18:	cmp	x0, #0x20
  40ad1c:	and	x2, x2, x5
  40ad20:	str	x2, [x1], #8
  40ad24:	b.ne	40ad0c <wcrtomb@plt+0x82fc>  // b.any
  40ad28:	ldp	x0, x1, [sp, #96]
  40ad2c:	add	x2, sp, #0x98
  40ad30:	bl	409b70 <wcrtomb@plt+0x7160>
  40ad34:	b	40aeb8 <wcrtomb@plt+0x84a8>
  40ad38:	cmp	x0, #0x113
  40ad3c:	b.le	40ad78 <wcrtomb@plt+0x8368>
  40ad40:	ldr	x1, [x27]
  40ad44:	add	x0, x1, x0, lsl #5
  40ad48:	mov	x1, #0xffffffffffffdd80    	// #-8832
  40ad4c:	add	x0, x0, x1
  40ad50:	ld1	{v0.16b, v1.16b}, [x0]
  40ad54:	mov	w0, w25
  40ad58:	st1	{v0.16b, v1.16b}, [x24]
  40ad5c:	ldr	x0, [x24, x0, lsl #3]
  40ad60:	lsr	x0, x0, x28
  40ad64:	tbnz	w0, #0, 40acfc <wcrtomb@plt+0x82ec>
  40ad68:	cmp	w21, #0x1ff
  40ad6c:	b.eq	40aef8 <wcrtomb@plt+0x84e8>  // b.none
  40ad70:	mov	w22, #0x0                   	// #0
  40ad74:	b	40ae00 <wcrtomb@plt+0x83f0>
  40ad78:	cmp	x0, #0x10a
  40ad7c:	b.ne	40aeb8 <wcrtomb@plt+0x84a8>  // b.any
  40ad80:	ldr	x1, [x27]
  40ad84:	mov	w2, #0x1                   	// #1
  40ad88:	ldr	x0, [x27, #24]
  40ad8c:	ldr	x5, [x27, #296]
  40ad90:	add	x0, x1, x0, lsl #5
  40ad94:	add	x5, x5, x20
  40ad98:	ld1	{v0.16b, v1.16b}, [x0]
  40ad9c:	mov	w0, w25
  40ada0:	st1	{v0.16b, v1.16b}, [x24]
  40ada4:	ldrb	w1, [x5, #32]
  40ada8:	ldr	x22, [x24, x0, lsl #3]
  40adac:	mov	w0, w21
  40adb0:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40adb4:	tst	w0, #0xff
  40adb8:	lsr	x22, x22, x28
  40adbc:	and	w22, w22, #0x1
  40adc0:	b.eq	40adec <wcrtomb@plt+0x83dc>  // b.none
  40adc4:	ldr	x0, [x5, #56]
  40adc8:	cbnz	x0, 40add8 <wcrtomb@plt+0x83c8>
  40adcc:	add	x0, x5, #0x30
  40add0:	mov	x1, #0x1                   	// #1
  40add4:	bl	408e9c <wcrtomb@plt+0x648c>
  40add8:	ldp	x0, x1, [sp, #96]
  40addc:	ldr	x2, [x27, #296]
  40ade0:	add	x2, x2, x20
  40ade4:	add	x2, x2, #0x30
  40ade8:	bl	409a90 <wcrtomb@plt+0x7080>
  40adec:	cmp	w21, #0x1ff
  40adf0:	b.ne	40ae00 <wcrtomb@plt+0x83f0>  // b.any
  40adf4:	cbnz	w22, 40ad04 <wcrtomb@plt+0x82f4>
  40adf8:	b	40aef8 <wcrtomb@plt+0x84e8>
  40adfc:	mov	w22, #0x1                   	// #1
  40ae00:	ldr	x0, [x27, #296]
  40ae04:	mov	w2, #0x4                   	// #4
  40ae08:	add	x0, x0, x20
  40ae0c:	ldrb	w1, [x0, #32]
  40ae10:	mov	w0, w21
  40ae14:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40ae18:	tst	w0, #0xff
  40ae1c:	b.eq	40aec0 <wcrtomb@plt+0x84b0>  // b.none
  40ae20:	mov	w0, w21
  40ae24:	mov	w2, #0x2                   	// #2
  40ae28:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40ae2c:	tst	w0, #0xff
  40ae30:	b.ne	40ae58 <wcrtomb@plt+0x8448>  // b.any
  40ae34:	mov	x2, x24
  40ae38:	add	x0, x27, #0x3d0
  40ae3c:	add	x6, x27, #0x3f0
  40ae40:	ldr	x5, [x0], #8
  40ae44:	ldr	x7, [x2]
  40ae48:	cmp	x6, x0
  40ae4c:	bic	x5, x7, x5
  40ae50:	str	x5, [x2], #8
  40ae54:	b.ne	40ae40 <wcrtomb@plt+0x8430>  // b.any
  40ae58:	mov	w0, w21
  40ae5c:	mov	w2, #0x1                   	// #1
  40ae60:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40ae64:	tst	w0, #0xff
  40ae68:	b.ne	40ae9c <wcrtomb@plt+0x848c>  // b.any
  40ae6c:	mov	x1, x24
  40ae70:	add	x0, x27, #0x3d0
  40ae74:	add	x6, x27, #0x3f0
  40ae78:	ldr	x2, [x0]
  40ae7c:	add	x0, x0, #0x8
  40ae80:	ldr	x5, [x0, #24]
  40ae84:	cmp	x6, x0
  40ae88:	orr	x5, x2, x5
  40ae8c:	ldr	x2, [x1]
  40ae90:	and	x2, x2, x5
  40ae94:	str	x2, [x1], #8
  40ae98:	b.ne	40ae78 <wcrtomb@plt+0x8468>  // b.any
  40ae9c:	ldp	x0, x1, [x24]
  40aea0:	ldr	x2, [x24, #24]
  40aea4:	orr	x0, x0, x1
  40aea8:	ldr	x1, [x24, #16]
  40aeac:	orr	x1, x1, x2
  40aeb0:	orr	x0, x0, x1
  40aeb4:	cbnz	x0, 40aee8 <wcrtomb@plt+0x84d8>
  40aeb8:	add	x26, x26, #0x1
  40aebc:	b	40aab8 <wcrtomb@plt+0x80a8>
  40aec0:	mov	x2, x24
  40aec4:	add	x0, x27, #0x3f0
  40aec8:	add	x6, x27, #0x410
  40aecc:	ldr	x5, [x0], #8
  40aed0:	ldr	x7, [x2]
  40aed4:	cmp	x6, x0
  40aed8:	bic	x5, x7, x5
  40aedc:	str	x5, [x2], #8
  40aee0:	b.ne	40aecc <wcrtomb@plt+0x84bc>  // b.any
  40aee4:	b	40ae20 <wcrtomb@plt+0x8410>
  40aee8:	mov	w0, w25
  40aeec:	ldr	x0, [x24, x0, lsl #3]
  40aef0:	lsr	x0, x0, x28
  40aef4:	tbnz	w0, #0, 40adf4 <wcrtomb@plt+0x83e4>
  40aef8:	add	x1, sp, #0xb0
  40aefc:	mov	x0, #0x0                   	// #0
  40af00:	ldr	x2, [x0, x24]
  40af04:	add	x0, x0, #0x8
  40af08:	ldr	x5, [x1]
  40af0c:	cmp	x0, #0x20
  40af10:	bic	x2, x5, x2
  40af14:	str	x2, [x1], #8
  40af18:	b.ne	40af00 <wcrtomb@plt+0x84f0>  // b.any
  40af1c:	b	40aeb8 <wcrtomb@plt+0x84a8>
  40af20:	mov	x21, #0xffffffffffffffff    	// #-1
  40af24:	b	40abb8 <wcrtomb@plt+0x81a8>
  40af28:	mov	x22, x21
  40af2c:	b	40abd4 <wcrtomb@plt+0x81c4>
  40af30:	mov	x20, x21
  40af34:	b	40abec <wcrtomb@plt+0x81dc>
  40af38:	cbz	w0, 40af54 <wcrtomb@plt+0x8544>
  40af3c:	ldr	w20, [x27, #364]
  40af40:	mov	x22, #0x0                   	// #0
  40af44:	ldr	x21, [x27, #400]
  40af48:	sub	w20, w20, #0x1
  40af4c:	sxtw	x20, w20
  40af50:	b	40abf4 <wcrtomb@plt+0x81e4>
  40af54:	mov	x20, #0xffffffffffffffff    	// #-1
  40af58:	mov	x22, x20
  40af5c:	mov	x21, x20
  40af60:	b	40abf4 <wcrtomb@plt+0x81e4>
  40af64:	str	x20, [x19, x1, lsl #3]
  40af68:	b	40ac28 <wcrtomb@plt+0x8218>
  40af6c:	stp	x29, x30, [sp, #-96]!
  40af70:	mov	x29, sp
  40af74:	stp	x23, x24, [sp, #48]
  40af78:	mov	x23, x2
  40af7c:	mov	x2, x3
  40af80:	stp	x19, x20, [sp, #16]
  40af84:	mov	x20, x1
  40af88:	mov	x19, x0
  40af8c:	stp	x21, x22, [sp, #32]
  40af90:	mov	x21, x1
  40af94:	mov	x3, x0
  40af98:	ldr	x1, [x23]
  40af9c:	add	x0, sp, #0x5c
  40afa0:	stp	x25, x26, [sp, #64]
  40afa4:	mov	w25, #0x0                   	// #0
  40afa8:	sub	x2, x2, x1
  40afac:	bl	408f88 <wcrtomb@plt+0x6578>
  40afb0:	mov	w24, w0
  40afb4:	str	xzr, [x19, #416]
  40afb8:	cmp	w25, w24
  40afbc:	ldr	x0, [x23]
  40afc0:	b.ge	40afd4 <wcrtomb@plt+0x85c4>  // b.tcont
  40afc4:	cbz	w25, 40b0c4 <wcrtomb@plt+0x86b4>
  40afc8:	ldrsw	x1, [x19, #364]
  40afcc:	cmp	x1, x21
  40afd0:	b.le	40b0c4 <wcrtomb@plt+0x86b4>
  40afd4:	sub	w24, w24, w25
  40afd8:	add	x24, x0, w24, sxtw
  40afdc:	ldr	w0, [sp, #92]
  40afe0:	str	x24, [x23]
  40afe4:	cmn	w0, #0x1
  40afe8:	b.eq	40b218 <wcrtomb@plt+0x8808>  // b.none
  40afec:	mov	x1, #0x50                  	// #80
  40aff0:	ldr	x0, [x19, #296]
  40aff4:	mul	x20, x20, x1
  40aff8:	add	x0, x0, x20
  40affc:	ldr	x0, [x0, #72]
  40b000:	tbz	x0, #63, 40b028 <wcrtomb@plt+0x8618>
  40b004:	ldr	x0, [x19, #440]
  40b008:	cmp	x0, #0x3ff
  40b00c:	b.gt	40b1b4 <wcrtomb@plt+0x87a4>
  40b010:	ldr	x1, [x19, #440]
  40b014:	add	x0, x1, #0x1
  40b018:	str	x0, [x19, #440]
  40b01c:	ldr	x0, [x19, #296]
  40b020:	add	x0, x0, x20
  40b024:	str	x1, [x0, #72]
  40b028:	ldr	x22, [x19, #432]
  40b02c:	lsl	x23, x21, #3
  40b030:	ldr	x1, [x22, x23]
  40b034:	cbnz	x1, 40b1cc <wcrtomb@plt+0x87bc>
  40b038:	mov	x0, #0x2000                	// #8192
  40b03c:	bl	41102c <wcrtomb@plt+0xe61c>
  40b040:	str	x0, [x22, x23]
  40b044:	mov	x2, #0xffffffffffffffff    	// #-1
  40b048:	ldr	x0, [x19, #432]
  40b04c:	ldr	x1, [x0, x23]
  40b050:	mov	x0, #0x0                   	// #0
  40b054:	str	x2, [x1, x0, lsl #3]
  40b058:	add	x0, x0, #0x1
  40b05c:	cmp	x0, #0x400
  40b060:	b.ne	40b054 <wcrtomb@plt+0x8644>  // b.any
  40b064:	ldr	x2, [x19, #296]
  40b068:	add	x22, x19, #0x198
  40b06c:	cmn	x21, #0x1
  40b070:	add	x0, x2, x20
  40b074:	add	x0, x0, #0x30
  40b078:	b.ne	40b1fc <wcrtomb@plt+0x87ec>  // b.any
  40b07c:	mov	x1, x22
  40b080:	bl	409560 <wcrtomb@plt+0x6b50>
  40b084:	mov	x1, x22
  40b088:	add	x0, x19, #0x158
  40b08c:	bl	409964 <wcrtomb@plt+0x6f54>
  40b090:	eor	w2, w0, #0x7
  40b094:	mov	x0, x19
  40b098:	bl	409bc8 <wcrtomb@plt+0x71b8>
  40b09c:	mov	x22, x0
  40b0a0:	mov	x0, x19
  40b0a4:	bl	40921c <wcrtomb@plt+0x680c>
  40b0a8:	ldr	x1, [x19, #296]
  40b0ac:	ldr	x0, [x19, #432]
  40b0b0:	add	x20, x1, x20
  40b0b4:	ldr	x0, [x0, x23]
  40b0b8:	ldr	x1, [x20, #72]
  40b0bc:	str	x22, [x0, x1, lsl #3]
  40b0c0:	b	40b1e0 <wcrtomb@plt+0x87d0>
  40b0c4:	ldr	x1, [x19, #368]
  40b0c8:	lsl	x26, x21, #3
  40b0cc:	ldr	x22, [x1, x26]
  40b0d0:	cbnz	x22, 40b12c <wcrtomb@plt+0x871c>
  40b0d4:	ldr	x1, [x19, #376]
  40b0d8:	ldr	x22, [x1, x26]
  40b0dc:	cbnz	x22, 40b12c <wcrtomb@plt+0x871c>
  40b0e0:	ldrb	w2, [x0]
  40b0e4:	mov	x1, x19
  40b0e8:	mov	x0, x21
  40b0ec:	bl	40a898 <wcrtomb@plt+0x7e88>
  40b0f0:	ldr	x0, [x19, #368]
  40b0f4:	ldr	x22, [x0, x26]
  40b0f8:	cbnz	x22, 40b12c <wcrtomb@plt+0x871c>
  40b0fc:	ldr	x0, [x19, #376]
  40b100:	ldr	x22, [x0, x26]
  40b104:	cbnz	x22, 40b12c <wcrtomb@plt+0x871c>
  40b108:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40b10c:	add	x3, x3, #0x710
  40b110:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40b114:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40b118:	add	x3, x3, #0xc
  40b11c:	add	x1, x1, #0x504
  40b120:	add	x0, x0, #0x644
  40b124:	mov	w2, #0xc93                 	// #3219
  40b128:	bl	402970 <__assert_fail@plt>
  40b12c:	ldr	x0, [x23]
  40b130:	ldrb	w2, [x0]
  40b134:	ldrb	w0, [x0]
  40b138:	ldr	x0, [x22, x0, lsl #3]
  40b13c:	cmn	x0, #0x2
  40b140:	b.ne	40b150 <wcrtomb@plt+0x8740>  // b.any
  40b144:	mov	x1, x19
  40b148:	mov	x0, x21
  40b14c:	bl	40a898 <wcrtomb@plt+0x7e88>
  40b150:	ldr	x0, [x23]
  40b154:	add	w25, w25, #0x1
  40b158:	add	x1, x0, #0x1
  40b15c:	str	x1, [x23]
  40b160:	ldrb	w0, [x0]
  40b164:	ldr	x21, [x22, x0, lsl #3]
  40b168:	b	40afb8 <wcrtomb@plt+0x85a8>
  40b16c:	lsl	x23, x22, #3
  40b170:	add	x22, x22, #0x1
  40b174:	ldr	x0, [x1, x23]
  40b178:	bl	4027a0 <free@plt>
  40b17c:	ldr	x0, [x19, #432]
  40b180:	str	xzr, [x0, x23]
  40b184:	ldr	x0, [x19, #352]
  40b188:	ldr	x1, [x19, #432]
  40b18c:	cmp	x0, x22
  40b190:	b.gt	40b16c <wcrtomb@plt+0x875c>
  40b194:	ldp	x2, x1, [x19, #296]
  40b198:	mov	x0, #0x0                   	// #0
  40b19c:	mov	x3, #0x50                  	// #80
  40b1a0:	mov	x4, #0xffffffffffffffff    	// #-1
  40b1a4:	cmp	x1, x0
  40b1a8:	b.gt	40b1bc <wcrtomb@plt+0x87ac>
  40b1ac:	str	xzr, [x19, #440]
  40b1b0:	b	40b010 <wcrtomb@plt+0x8600>
  40b1b4:	mov	x22, #0xffffffffffffffff    	// #-1
  40b1b8:	b	40b184 <wcrtomb@plt+0x8774>
  40b1bc:	madd	x5, x0, x3, x2
  40b1c0:	add	x0, x0, #0x1
  40b1c4:	str	x4, [x5, #72]
  40b1c8:	b	40b1a4 <wcrtomb@plt+0x8794>
  40b1cc:	ldr	x0, [x19, #296]
  40b1d0:	add	x0, x0, x20
  40b1d4:	ldr	x0, [x0, #72]
  40b1d8:	ldr	x22, [x1, x0, lsl #3]
  40b1dc:	tbnz	x22, #63, 40b064 <wcrtomb@plt+0x8654>
  40b1e0:	mov	x0, x22
  40b1e4:	ldp	x19, x20, [sp, #16]
  40b1e8:	ldp	x21, x22, [sp, #32]
  40b1ec:	ldp	x23, x24, [sp, #48]
  40b1f0:	ldp	x25, x26, [sp, #64]
  40b1f4:	ldp	x29, x30, [sp], #96
  40b1f8:	ret
  40b1fc:	mov	x1, #0x50                  	// #80
  40b200:	mov	x3, x22
  40b204:	madd	x1, x21, x1, x2
  40b208:	mov	w2, #0xffffffff            	// #-1
  40b20c:	add	x1, x1, #0x8
  40b210:	bl	4095e0 <wcrtomb@plt+0x6bd0>
  40b214:	b	40b084 <wcrtomb@plt+0x8674>
  40b218:	mov	x22, x21
  40b21c:	b	40b1e0 <wcrtomb@plt+0x87d0>
  40b220:	stp	x29, x30, [sp, #-144]!
  40b224:	mov	x29, sp
  40b228:	stp	x27, x28, [sp, #80]
  40b22c:	mov	x27, x0
  40b230:	and	w0, w3, #0xff
  40b234:	str	w0, [sp, #116]
  40b238:	mov	x28, x1
  40b23c:	ldr	x0, [x27, #304]
  40b240:	stp	x19, x20, [sp, #16]
  40b244:	mov	x19, x2
  40b248:	stp	x21, x22, [sp, #32]
  40b24c:	cmp	x0, #0x3ff
  40b250:	mov	x21, x4
  40b254:	stp	x23, x24, [sp, #48]
  40b258:	and	w22, w5, #0xff
  40b25c:	stp	x25, x26, [sp, #64]
  40b260:	b.le	40b298 <wcrtomb@plt+0x8888>
  40b264:	ldrsw	x20, [x27, #364]
  40b268:	mov	x24, #0x50                  	// #80
  40b26c:	ldr	x0, [x27, #304]
  40b270:	cmp	x0, x20
  40b274:	b.gt	40b338 <wcrtomb@plt+0x8928>
  40b278:	ldrsw	x0, [x27, #364]
  40b27c:	str	x0, [x27, #304]
  40b280:	ldr	x0, [x27, #368]
  40b284:	cbnz	x0, 40b3a8 <wcrtomb@plt+0x8998>
  40b288:	ldrb	w0, [x27, #1048]
  40b28c:	cbz	w0, 40b298 <wcrtomb@plt+0x8888>
  40b290:	ldr	x0, [x27, #432]
  40b294:	cbnz	x0, 40b3f8 <wcrtomb@plt+0x89e8>
  40b298:	ldr	x0, [x27, #352]
  40b29c:	cbnz	x0, 40b2a8 <wcrtomb@plt+0x8898>
  40b2a0:	mov	x0, x27
  40b2a4:	bl	40921c <wcrtomb@plt+0x680c>
  40b2a8:	ldrb	w0, [x27, #459]
  40b2ac:	str	w0, [sp, #100]
  40b2b0:	ldrb	w0, [x19]
  40b2b4:	str	w0, [sp, #112]
  40b2b8:	ldrb	w0, [sp, #100]
  40b2bc:	str	x28, [sp, #136]
  40b2c0:	ldr	x20, [x27, #368]
  40b2c4:	strb	w0, [x19]
  40b2c8:	cbz	w22, 40b2e4 <wcrtomb@plt+0x88d4>
  40b2cc:	ldr	x0, [x27, #424]
  40b2d0:	str	xzr, [x27, #272]
  40b2d4:	cbnz	x0, 40b2e4 <wcrtomb@plt+0x88d4>
  40b2d8:	ldr	x1, [x27, #176]
  40b2dc:	add	x0, x27, #0x198
  40b2e0:	bl	408e9c <wcrtomb@plt+0x648c>
  40b2e4:	ldr	w1, [sp, #100]
  40b2e8:	mov	x23, #0x0                   	// #0
  40b2ec:	mov	x0, #0x0                   	// #0
  40b2f0:	mov	x24, #0x0                   	// #0
  40b2f4:	add	x1, x27, w1, sxtw
  40b2f8:	str	x1, [sp, #120]
  40b2fc:	ldr	x25, [x20, x24, lsl #3]
  40b300:	cbnz	x25, 40b414 <wcrtomb@plt+0x8a04>
  40b304:	mov	x26, x24
  40b308:	mov	x24, x0
  40b30c:	ldr	x25, [sp, #136]
  40b310:	tbz	x26, #63, 40b620 <wcrtomb@plt+0x8c10>
  40b314:	cmn	x26, #0x2
  40b318:	b.ne	40b584 <wcrtomb@plt+0x8b74>  // b.any
  40b31c:	ldurb	w2, [x25, #-1]
  40b320:	mov	x1, x27
  40b324:	mov	x0, x24
  40b328:	bl	40a898 <wcrtomb@plt+0x7e88>
  40b32c:	mov	x26, x0
  40b330:	ldr	x20, [x27, #368]
  40b334:	b	40b520 <wcrtomb@plt+0x8b10>
  40b338:	ldr	x0, [x27, #296]
  40b33c:	mul	x23, x20, x24
  40b340:	add	x20, x20, #0x1
  40b344:	add	x0, x0, x23
  40b348:	ldr	x0, [x0, #8]
  40b34c:	bl	4027a0 <free@plt>
  40b350:	ldr	x0, [x27, #296]
  40b354:	add	x0, x0, x23
  40b358:	ldr	x0, [x0, #48]
  40b35c:	bl	4027a0 <free@plt>
  40b360:	b	40b26c <wcrtomb@plt+0x885c>
  40b364:	ldr	x0, [x27, #368]
  40b368:	lsl	x23, x20, #3
  40b36c:	add	x20, x20, #0x1
  40b370:	ldr	x0, [x0, x23]
  40b374:	bl	4027a0 <free@plt>
  40b378:	ldr	x0, [x27, #376]
  40b37c:	ldr	x0, [x0, x23]
  40b380:	bl	4027a0 <free@plt>
  40b384:	ldr	x0, [x27, #376]
  40b388:	str	xzr, [x0, x23]
  40b38c:	ldr	x0, [x27, #368]
  40b390:	str	xzr, [x0, x23]
  40b394:	ldr	x0, [x27, #352]
  40b398:	cmp	x0, x20
  40b39c:	b.gt	40b364 <wcrtomb@plt+0x8954>
  40b3a0:	str	wzr, [x27, #360]
  40b3a4:	b	40b288 <wcrtomb@plt+0x8878>
  40b3a8:	mov	x20, #0x0                   	// #0
  40b3ac:	b	40b394 <wcrtomb@plt+0x8984>
  40b3b0:	ldr	x0, [x27, #432]
  40b3b4:	lsl	x23, x20, #3
  40b3b8:	add	x20, x20, #0x1
  40b3bc:	ldr	x0, [x0, x23]
  40b3c0:	bl	4027a0 <free@plt>
  40b3c4:	ldr	x0, [x27, #432]
  40b3c8:	str	xzr, [x0, x23]
  40b3cc:	ldr	x0, [x27, #352]
  40b3d0:	cmp	x0, x20
  40b3d4:	b.gt	40b3b0 <wcrtomb@plt+0x89a0>
  40b3d8:	ldrsw	x2, [x27, #364]
  40b3dc:	mov	x0, #0x0                   	// #0
  40b3e0:	mov	x3, #0x50                  	// #80
  40b3e4:	mov	x4, #0xffffffffffffffff    	// #-1
  40b3e8:	cmp	x2, x0
  40b3ec:	b.gt	40b400 <wcrtomb@plt+0x89f0>
  40b3f0:	str	xzr, [x27, #440]
  40b3f4:	b	40b298 <wcrtomb@plt+0x8888>
  40b3f8:	mov	x20, #0xffffffffffffffff    	// #-1
  40b3fc:	b	40b3cc <wcrtomb@plt+0x89bc>
  40b400:	ldr	x1, [x27, #296]
  40b404:	madd	x1, x0, x3, x1
  40b408:	add	x0, x0, #0x1
  40b40c:	str	x4, [x1, #72]
  40b410:	b	40b3e8 <wcrtomb@plt+0x89d8>
  40b414:	ldrsw	x1, [x27, #364]
  40b418:	cmp	x1, x24
  40b41c:	b.le	40b528 <wcrtomb@plt+0x8b18>
  40b420:	cbz	w22, 40b45c <wcrtomb@plt+0x8a4c>
  40b424:	ldr	x2, [x27, #296]
  40b428:	mov	x0, #0x50                  	// #80
  40b42c:	madd	x0, x24, x0, x2
  40b430:	ldr	x0, [x0, #56]
  40b434:	cbz	x0, 40b45c <wcrtomb@plt+0x8a4c>
  40b438:	ldr	x26, [sp, #136]
  40b43c:	ldrb	w0, [x26]
  40b440:	add	x0, x27, x0
  40b444:	ldrb	w0, [x0, #716]
  40b448:	cbz	w0, 40b4d0 <wcrtomb@plt+0x8ac0>
  40b44c:	mov	x28, x26
  40b450:	b	40b4d8 <wcrtomb@plt+0x8ac8>
  40b454:	add	x0, x0, #0x1
  40b458:	str	x0, [sp, #136]
  40b45c:	ldr	x0, [sp, #136]
  40b460:	ldrb	w2, [x0]
  40b464:	ldr	x2, [x25, x2, lsl #3]
  40b468:	cmp	x2, x24
  40b46c:	b.eq	40b454 <wcrtomb@plt+0x8a44>  // b.none
  40b470:	cbnz	w22, 40b438 <wcrtomb@plt+0x8a28>
  40b474:	ldr	x0, [sp, #136]
  40b478:	add	x2, x0, #0x1
  40b47c:	str	x2, [sp, #136]
  40b480:	ldrb	w0, [x0]
  40b484:	ldr	x26, [x25, x0, lsl #3]
  40b488:	ldr	x0, [x20, x26, lsl #3]
  40b48c:	cbz	x0, 40b30c <wcrtomb@plt+0x88fc>
  40b490:	cmp	x1, x24
  40b494:	b.gt	40b564 <wcrtomb@plt+0x8b54>
  40b498:	ldr	x1, [sp, #136]
  40b49c:	mov	x24, x26
  40b4a0:	mov	x25, x28
  40b4a4:	add	x2, x1, #0x1
  40b4a8:	str	x2, [sp, #136]
  40b4ac:	ldrb	w1, [x1]
  40b4b0:	ldr	x26, [x0, x1, lsl #3]
  40b4b4:	b	40b550 <wcrtomb@plt+0x8b40>
  40b4b8:	sub	x2, x19, x28
  40b4bc:	mov	x1, x28
  40b4c0:	mov	x3, x27
  40b4c4:	add	x0, sp, #0x84
  40b4c8:	bl	408f88 <wcrtomb@plt+0x6578>
  40b4cc:	add	x28, x28, w0, sxtw
  40b4d0:	cmp	x26, x28
  40b4d4:	b.hi	40b4b8 <wcrtomb@plt+0x8aa8>  // b.pmore
  40b4d8:	str	x28, [sp, #136]
  40b4dc:	ldr	x2, [x27, #296]
  40b4e0:	mov	x1, #0x50                  	// #80
  40b4e4:	ldr	x0, [sp, #136]
  40b4e8:	madd	x1, x24, x1, x2
  40b4ec:	ldr	x1, [x1, #56]
  40b4f0:	cbz	x1, 40b510 <wcrtomb@plt+0x8b00>
  40b4f4:	ldrb	w1, [x0]
  40b4f8:	add	x1, x27, x1, lsl #2
  40b4fc:	ldr	w1, [x1, #1308]
  40b500:	cmn	w1, #0x1
  40b504:	b.ne	40b510 <wcrtomb@plt+0x8b00>  // b.any
  40b508:	cmp	x19, x0
  40b50c:	b.hi	40b530 <wcrtomb@plt+0x8b20>  // b.pmore
  40b510:	add	x1, x0, #0x1
  40b514:	str	x1, [sp, #136]
  40b518:	ldrb	w0, [x0]
  40b51c:	ldr	x26, [x25, x0, lsl #3]
  40b520:	mov	x25, x28
  40b524:	b	40b550 <wcrtomb@plt+0x8b40>
  40b528:	cbnz	w22, 40b4dc <wcrtomb@plt+0x8acc>
  40b52c:	b	40b474 <wcrtomb@plt+0x8a64>
  40b530:	mov	x3, x19
  40b534:	add	x2, sp, #0x88
  40b538:	mov	x1, x24
  40b53c:	mov	x0, x27
  40b540:	bl	40af6c <wcrtomb@plt+0x855c>
  40b544:	mov	x26, x0
  40b548:	ldr	x25, [sp, #136]
  40b54c:	ldr	x20, [x27, #368]
  40b550:	mov	x0, x24
  40b554:	mov	x28, x25
  40b558:	mov	x24, x26
  40b55c:	b	40b2fc <wcrtomb@plt+0x88ec>
  40b560:	str	x1, [sp, #136]
  40b564:	ldr	x1, [sp, #136]
  40b568:	ldrb	w2, [x1], #1
  40b56c:	ldr	x2, [x0, x2, lsl #3]
  40b570:	cmp	x2, x26
  40b574:	b.eq	40b560 <wcrtomb@plt+0x8b50>  // b.none
  40b578:	b	40b498 <wcrtomb@plt+0x8a88>
  40b57c:	mov	x26, #0x0                   	// #0
  40b580:	b	40b550 <wcrtomb@plt+0x8b40>
  40b584:	cmp	x19, x25
  40b588:	b.cc	40b5e4 <wcrtomb@plt+0x8bd4>  // b.lo, b.ul, b.last
  40b58c:	ldurb	w0, [x25, #-1]
  40b590:	ldr	w1, [sp, #100]
  40b594:	cmp	w0, w1
  40b598:	b.ne	40b5e4 <wcrtomb@plt+0x8bd4>  // b.any
  40b59c:	ldr	x0, [x27, #392]
  40b5a0:	ldr	x26, [x0, x24, lsl #3]
  40b5a4:	tbnz	x26, #63, 40b5e4 <wcrtomb@plt+0x8bd4>
  40b5a8:	ldr	w0, [sp, #116]
  40b5ac:	add	x23, x23, #0x1
  40b5b0:	cbnz	w0, 40b550 <wcrtomb@plt+0x8b40>
  40b5b4:	ldr	x0, [sp, #120]
  40b5b8:	ldrb	w0, [x0, #460]
  40b5bc:	cmp	w0, #0x4
  40b5c0:	b.eq	40b57c <wcrtomb@plt+0x8b6c>  // b.none
  40b5c4:	cmp	w0, #0x2
  40b5c8:	b.ne	40b5dc <wcrtomb@plt+0x8bcc>  // b.any
  40b5cc:	ldr	w4, [x27, #364]
  40b5d0:	sub	w4, w4, #0x1
  40b5d4:	sxtw	x26, w4
  40b5d8:	b	40b550 <wcrtomb@plt+0x8b40>
  40b5dc:	ldr	x26, [x27, #400]
  40b5e0:	b	40b550 <wcrtomb@plt+0x8b40>
  40b5e4:	str	xzr, [sp, #136]
  40b5e8:	cbz	x21, 40b5f8 <wcrtomb@plt+0x8be8>
  40b5ec:	ldr	x0, [x21]
  40b5f0:	add	x23, x0, x23
  40b5f4:	str	x23, [x21]
  40b5f8:	ldrb	w0, [sp, #112]
  40b5fc:	strb	w0, [x19]
  40b600:	ldr	x0, [sp, #136]
  40b604:	ldp	x19, x20, [sp, #16]
  40b608:	ldp	x21, x22, [sp, #32]
  40b60c:	ldp	x23, x24, [sp, #48]
  40b610:	ldp	x25, x26, [sp, #64]
  40b614:	ldp	x27, x28, [sp, #80]
  40b618:	ldp	x29, x30, [sp], #144
  40b61c:	ret
  40b620:	lsl	x0, x26, #3
  40b624:	str	x0, [sp, #104]
  40b628:	ldr	x0, [x27, #376]
  40b62c:	lsl	x1, x26, #3
  40b630:	ldrb	w2, [x25]
  40b634:	ldr	x0, [x0, x1]
  40b638:	cbz	x0, 40b758 <wcrtomb@plt+0x8d48>
  40b63c:	ldr	x0, [x27, #384]
  40b640:	sxtw	x5, w2
  40b644:	add	x2, x27, w2, sxtw
  40b648:	ldrb	w0, [x0, x26]
  40b64c:	ldrb	w1, [x2, #460]
  40b650:	and	w0, w0, w1
  40b654:	tst	w0, #0xff
  40b658:	b.ne	40b5e8 <wcrtomb@plt+0x8bd8>  // b.any
  40b65c:	cmp	x19, x25
  40b660:	b.ne	40b688 <wcrtomb@plt+0x8c78>  // b.any
  40b664:	ldr	x1, [x27, #296]
  40b668:	mov	x0, #0x50                  	// #80
  40b66c:	mov	w2, #0x4                   	// #4
  40b670:	madd	x0, x26, x0, x1
  40b674:	ldrb	w1, [x0, #32]
  40b678:	ldrh	w0, [x0, #34]
  40b67c:	bl	408dc4 <wcrtomb@plt+0x63b4>
  40b680:	tst	w0, #0xff
  40b684:	b.ne	40b5e8 <wcrtomb@plt+0x8bd8>  // b.any
  40b688:	cbz	w22, 40b704 <wcrtomb@plt+0x8cf4>
  40b68c:	ldrsw	x0, [x27, #364]
  40b690:	cmp	x0, x26
  40b694:	b.le	40b6d0 <wcrtomb@plt+0x8cc0>
  40b698:	add	x5, x27, x5
  40b69c:	ldrb	w0, [x5, #716]
  40b6a0:	cbz	w0, 40b6c4 <wcrtomb@plt+0x8cb4>
  40b6a4:	mov	x28, x25
  40b6a8:	b	40b6cc <wcrtomb@plt+0x8cbc>
  40b6ac:	sub	x2, x19, x28
  40b6b0:	mov	x1, x28
  40b6b4:	mov	x3, x27
  40b6b8:	add	x0, sp, #0x84
  40b6bc:	bl	408f88 <wcrtomb@plt+0x6578>
  40b6c0:	add	x28, x28, w0, sxtw
  40b6c4:	cmp	x28, x25
  40b6c8:	b.cc	40b6ac <wcrtomb@plt+0x8c9c>  // b.lo, b.ul, b.last
  40b6cc:	str	x28, [sp, #136]
  40b6d0:	ldr	x1, [x27, #296]
  40b6d4:	mov	x0, #0x50                  	// #80
  40b6d8:	madd	x0, x26, x0, x1
  40b6dc:	ldr	x0, [x0, #56]
  40b6e0:	cbz	x0, 40b704 <wcrtomb@plt+0x8cf4>
  40b6e4:	ldr	x1, [sp, #136]
  40b6e8:	ldrb	w0, [x1]
  40b6ec:	add	x0, x27, x0, lsl #2
  40b6f0:	ldr	w0, [x0, #1308]
  40b6f4:	cmn	w0, #0x1
  40b6f8:	b.ne	40b704 <wcrtomb@plt+0x8cf4>  // b.any
  40b6fc:	cmp	x19, x1
  40b700:	b.hi	40b730 <wcrtomb@plt+0x8d20>  // b.pmore
  40b704:	ldr	x1, [sp, #104]
  40b708:	mov	x24, x26
  40b70c:	ldr	x0, [x27, #376]
  40b710:	mov	x25, x28
  40b714:	ldr	x1, [x0, x1]
  40b718:	ldr	x0, [sp, #136]
  40b71c:	add	x2, x0, #0x1
  40b720:	str	x2, [sp, #136]
  40b724:	ldrb	w0, [x0]
  40b728:	ldr	x26, [x1, x0, lsl #3]
  40b72c:	b	40b550 <wcrtomb@plt+0x8b40>
  40b730:	mov	x1, x26
  40b734:	mov	x3, x19
  40b738:	add	x2, sp, #0x88
  40b73c:	mov	x0, x27
  40b740:	mov	x24, x26
  40b744:	bl	40af6c <wcrtomb@plt+0x855c>
  40b748:	mov	x26, x0
  40b74c:	ldr	x25, [sp, #136]
  40b750:	ldr	x20, [x27, #368]
  40b754:	b	40b550 <wcrtomb@plt+0x8b40>
  40b758:	mov	x1, x27
  40b75c:	mov	x0, x26
  40b760:	bl	40a898 <wcrtomb@plt+0x7e88>
  40b764:	b	40b330 <wcrtomb@plt+0x8920>
  40b768:	mov	w5, #0x0                   	// #0
  40b76c:	b	40b220 <wcrtomb@plt+0x8810>
  40b770:	mov	w5, #0x1                   	// #1
  40b774:	b	40b220 <wcrtomb@plt+0x8810>
  40b778:	stp	x29, x30, [sp, #-304]!
  40b77c:	mov	x29, sp
  40b780:	stp	x19, x20, [sp, #16]
  40b784:	stp	x21, x22, [sp, #32]
  40b788:	stp	x23, x24, [sp, #48]
  40b78c:	stp	x25, x26, [sp, #64]
  40b790:	mov	x26, x0
  40b794:	stp	x27, x28, [sp, #80]
  40b798:	str	xzr, [x0, #104]
  40b79c:	add	x0, sp, #0x88
  40b7a0:	bl	409050 <wcrtomb@plt+0x6640>
  40b7a4:	mov	x0, x26
  40b7a8:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b7ac:	mov	w25, w0
  40b7b0:	cmp	w0, #0x5e
  40b7b4:	b.ne	40b858 <wcrtomb@plt+0x8e48>  // b.any
  40b7b8:	mov	x0, x26
  40b7bc:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b7c0:	ldrb	w24, [x26, #1049]
  40b7c4:	mov	w19, w0
  40b7c8:	cmp	w19, #0x3a
  40b7cc:	ldr	w20, [x26, #72]
  40b7d0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40b7d4:	cset	w22, eq  // eq = none
  40b7d8:	add	x0, x0, #0x710
  40b7dc:	add	x23, sp, #0xa8
  40b7e0:	str	x0, [sp, #104]
  40b7e4:	add	x0, x0, #0x28
  40b7e8:	str	x0, [sp, #112]
  40b7ec:	and	w22, w22, #0xfffffffd
  40b7f0:	cmp	w19, #0x5b
  40b7f4:	b.ne	40ba60 <wcrtomb@plt+0x9050>  // b.any
  40b7f8:	mov	x0, x26
  40b7fc:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b800:	ldr	w1, [x26, #72]
  40b804:	mov	w21, w0
  40b808:	cmp	w0, #0x3a
  40b80c:	b.ne	40b864 <wcrtomb@plt+0x8e54>  // b.any
  40b810:	ldr	x0, [x26, #448]
  40b814:	tbz	w0, #2, 40bb0c <wcrtomb@plt+0x90fc>
  40b818:	mov	w19, #0x0                   	// #0
  40b81c:	mov	x0, x26
  40b820:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b824:	ldr	x1, [x26, #40]
  40b828:	cbz	x1, 40b898 <wcrtomb@plt+0x8e88>
  40b82c:	cmp	w21, w0
  40b830:	b.ne	40b844 <wcrtomb@plt+0x8e34>  // b.any
  40b834:	ldr	x1, [x26, #32]
  40b838:	ldrb	w1, [x1]
  40b83c:	cmp	w1, #0x5d
  40b840:	b.eq	40b898 <wcrtomb@plt+0x8e88>  // b.none
  40b844:	cmp	w19, #0x1f
  40b848:	b.gt	40b890 <wcrtomb@plt+0x8e80>
  40b84c:	strb	w0, [x23, w19, sxtw]
  40b850:	add	w19, w19, #0x1
  40b854:	b	40b81c <wcrtomb@plt+0x8e0c>
  40b858:	mov	w19, w0
  40b85c:	mov	w24, #0x1                   	// #1
  40b860:	b	40b7c8 <wcrtomb@plt+0x8db8>
  40b864:	cmp	w0, #0x2e
  40b868:	mov	w0, #0x3d                  	// #61
  40b86c:	ccmp	w21, w0, #0x4, ne  // ne = any
  40b870:	b.eq	40b818 <wcrtomb@plt+0x8e08>  // b.none
  40b874:	cmp	w21, #0x100
  40b878:	b.eq	40ba80 <wcrtomb@plt+0x9070>  // b.none
  40b87c:	cmp	w21, #0x2d
  40b880:	b.ne	40bb0c <wcrtomb@plt+0x90fc>  // b.any
  40b884:	mov	w28, w20
  40b888:	mov	w27, w19
  40b88c:	b	40baa0 <wcrtomb@plt+0x9090>
  40b890:	strb	wzr, [sp, #168]
  40b894:	b	40b81c <wcrtomb@plt+0x8e0c>
  40b898:	mov	x0, x26
  40b89c:	strb	wzr, [x23, w19, sxtw]
  40b8a0:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b8a4:	cmp	w21, #0x3a
  40b8a8:	b.ne	40ba58 <wcrtomb@plt+0x9048>  // b.any
  40b8ac:	ldrb	w0, [x26, #457]
  40b8b0:	cbz	w0, 40b920 <wcrtomb@plt+0x8f10>
  40b8b4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40b8b8:	mov	x0, x23
  40b8bc:	add	x1, x1, #0x510
  40b8c0:	bl	402780 <strcmp@plt>
  40b8c4:	cbz	w0, 40b928 <wcrtomb@plt+0x8f18>
  40b8c8:	mov	x0, x23
  40b8cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40b8d0:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xc900>
  40b8d4:	add	x1, x1, #0x516
  40b8d8:	add	x19, x19, #0x50a
  40b8dc:	bl	402780 <strcmp@plt>
  40b8e0:	cmp	w0, #0x0
  40b8e4:	csel	x19, x19, x23, eq  // eq = none
  40b8e8:	ldr	x0, [sp, #104]
  40b8ec:	mov	x2, #0x0                   	// #0
  40b8f0:	mov	x28, #0x18                  	// #24
  40b8f4:	add	x27, x0, #0x28
  40b8f8:	mul	x0, x2, x28
  40b8fc:	mov	w21, w2
  40b900:	ldr	x1, [x0, x27]
  40b904:	cbnz	x1, 40b934 <wcrtomb@plt+0x8f24>
  40b908:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40b90c:	add	x1, x1, #0x551
  40b910:	mov	w2, #0x5                   	// #5
  40b914:	mov	x0, #0x0                   	// #0
  40b918:	bl	4028e0 <dcgettext@plt>
  40b91c:	bl	403ea4 <wcrtomb@plt+0x1494>
  40b920:	mov	x19, x23
  40b924:	b	40b8e8 <wcrtomb@plt+0x8ed8>
  40b928:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xc900>
  40b92c:	add	x19, x19, #0x50a
  40b930:	b	40b8e8 <wcrtomb@plt+0x8ed8>
  40b934:	mov	x0, x19
  40b938:	str	x2, [sp, #120]
  40b93c:	bl	402780 <strcmp@plt>
  40b940:	mov	w20, w0
  40b944:	ldr	x2, [sp, #120]
  40b948:	add	x2, x2, #0x1
  40b94c:	cbnz	w0, 40b8f8 <wcrtomb@plt+0x8ee8>
  40b950:	ldrb	w1, [x26, #1048]
  40b954:	sxtw	x0, w21
  40b958:	cbnz	w1, 40b998 <wcrtomb@plt+0x8f88>
  40b95c:	ldr	x2, [sp, #112]
  40b960:	mov	x1, #0x18                  	// #24
  40b964:	madd	x0, x0, x1, x2
  40b968:	ldr	x19, [x0, #8]
  40b96c:	mov	w0, w20
  40b970:	blr	x19
  40b974:	cbz	w0, 40b984 <wcrtomb@plt+0x8f74>
  40b978:	add	x1, sp, #0x88
  40b97c:	mov	w0, w20
  40b980:	bl	408dfc <wcrtomb@plt+0x63ec>
  40b984:	add	w20, w20, #0x1
  40b988:	cmp	w20, #0x100
  40b98c:	b.ne	40b96c <wcrtomb@plt+0x8f5c>  // b.any
  40b990:	mov	w21, w24
  40b994:	b	40b9a4 <wcrtomb@plt+0x8f94>
  40b998:	madd	x28, x0, x28, x27
  40b99c:	ldrb	w21, [x28, #16]
  40b9a0:	cbnz	w21, 40b95c <wcrtomb@plt+0x8f4c>
  40b9a4:	mov	x0, x26
  40b9a8:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40b9ac:	ldr	w20, [x26, #72]
  40b9b0:	orr	w22, w22, #0x8
  40b9b4:	mov	w19, w0
  40b9b8:	mov	w24, w21
  40b9bc:	cmp	w19, #0x5d
  40b9c0:	b.ne	40b7ec <wcrtomb@plt+0x8ddc>  // b.any
  40b9c4:	cmp	w22, #0x7
  40b9c8:	b.ne	40b9e4 <wcrtomb@plt+0x8fd4>  // b.any
  40b9cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40b9d0:	add	x1, x1, #0x51c
  40b9d4:	mov	w2, #0x5                   	// #5
  40b9d8:	mov	x0, #0x0                   	// #0
  40b9dc:	bl	4028e0 <dcgettext@plt>
  40b9e0:	bl	403ec4 <wcrtomb@plt+0x14b4>
  40b9e4:	cbz	w24, 40bd20 <wcrtomb@plt+0x9310>
  40b9e8:	ldrb	w0, [x26, #1048]
  40b9ec:	cmp	w25, #0x5e
  40b9f0:	cbz	w0, 40bcd8 <wcrtomb@plt+0x92c8>
  40b9f4:	b.eq	40ba00 <wcrtomb@plt+0x8ff0>  // b.none
  40b9f8:	ldr	x0, [x26, #104]
  40b9fc:	cbz	x0, 40bd0c <wcrtomb@plt+0x92fc>
  40ba00:	cmp	w25, #0x5e
  40ba04:	cset	w0, eq  // eq = none
  40ba08:	strb	w0, [x26, #88]
  40ba0c:	ldp	x0, x1, [sp, #136]
  40ba10:	ldr	x2, [sp, #160]
  40ba14:	orr	x0, x0, x1
  40ba18:	ldr	x1, [sp, #152]
  40ba1c:	orr	x1, x1, x2
  40ba20:	orr	x0, x0, x1
  40ba24:	cbz	x0, 40bcd0 <wcrtomb@plt+0x92c0>
  40ba28:	add	x1, sp, #0x88
  40ba2c:	mov	x0, x26
  40ba30:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40ba34:	str	x0, [x26, #80]
  40ba38:	mov	x0, #0x113                 	// #275
  40ba3c:	ldp	x19, x20, [sp, #16]
  40ba40:	ldp	x21, x22, [sp, #32]
  40ba44:	ldp	x23, x24, [sp, #48]
  40ba48:	ldp	x25, x26, [sp, #64]
  40ba4c:	ldp	x27, x28, [sp, #80]
  40ba50:	ldp	x29, x30, [sp], #304
  40ba54:	ret
  40ba58:	mov	w21, #0x0                   	// #0
  40ba5c:	b	40b9a4 <wcrtomb@plt+0x8f94>
  40ba60:	cmp	w19, #0x5c
  40ba64:	b.ne	40ba80 <wcrtomb@plt+0x9070>  // b.any
  40ba68:	ldr	x0, [x26, #448]
  40ba6c:	tbz	w0, #0, 40ba80 <wcrtomb@plt+0x9070>
  40ba70:	mov	x0, x26
  40ba74:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40ba78:	ldr	w20, [x26, #72]
  40ba7c:	mov	w19, w0
  40ba80:	mov	x0, x26
  40ba84:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40ba88:	ldr	w1, [x26, #72]
  40ba8c:	mov	w21, w0
  40ba90:	mov	w28, w20
  40ba94:	mov	w27, w19
  40ba98:	cmp	w0, #0x2d
  40ba9c:	b.ne	40bafc <wcrtomb@plt+0x90ec>  // b.any
  40baa0:	mov	x0, x26
  40baa4:	str	w1, [sp, #120]
  40baa8:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40baac:	mov	w21, w0
  40bab0:	ldr	w3, [x26, #72]
  40bab4:	cmp	w0, #0x5b
  40bab8:	ldr	w1, [sp, #120]
  40babc:	b.ne	40bad8 <wcrtomb@plt+0x90c8>  // b.any
  40bac0:	ldr	x0, [x26, #32]
  40bac4:	ldrb	w0, [x0]
  40bac8:	cmp	w0, #0x2e
  40bacc:	b.ne	40bb44 <wcrtomb@plt+0x9134>  // b.any
  40bad0:	mov	w24, #0x0                   	// #0
  40bad4:	b	40bae0 <wcrtomb@plt+0x90d0>
  40bad8:	cmp	w0, #0x5d
  40badc:	b.ne	40bb24 <wcrtomb@plt+0x9114>  // b.any
  40bae0:	ldr	x0, [x26, #32]
  40bae4:	mov	w21, #0x2d                  	// #45
  40bae8:	sub	x0, x0, #0x1
  40baec:	str	x0, [x26, #32]
  40baf0:	ldr	x0, [x26, #40]
  40baf4:	add	x0, x0, #0x1
  40baf8:	str	x0, [x26, #40]
  40bafc:	cmp	w27, #0x3a
  40bb00:	b.eq	40bbf4 <wcrtomb@plt+0x91e4>  // b.none
  40bb04:	mov	w20, w28
  40bb08:	mov	w19, w27
  40bb0c:	mov	w28, w20
  40bb10:	mov	w27, w19
  40bb14:	mov	w20, w1
  40bb18:	mov	w19, w21
  40bb1c:	mov	w0, #0x4                   	// #4
  40bb20:	b	40bc00 <wcrtomb@plt+0x91f0>
  40bb24:	cmp	w0, #0x5c
  40bb28:	b.ne	40bb44 <wcrtomb@plt+0x9134>  // b.any
  40bb2c:	ldr	x0, [x26, #448]
  40bb30:	tbz	w0, #0, 40bb44 <wcrtomb@plt+0x9134>
  40bb34:	mov	x0, x26
  40bb38:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40bb3c:	ldr	w3, [x26, #72]
  40bb40:	mov	w21, w0
  40bb44:	mov	x0, x26
  40bb48:	str	w3, [sp, #120]
  40bb4c:	bl	4099a0 <wcrtomb@plt+0x6f90>
  40bb50:	orr	w22, w22, #0x8
  40bb54:	ldr	w3, [sp, #120]
  40bb58:	mov	w19, w0
  40bb5c:	ldr	w20, [x26, #72]
  40bb60:	cmp	w3, w28
  40bb64:	ccmn	w28, #0x1, #0x4, eq  // eq = none
  40bb68:	b.ne	40bbe8 <wcrtomb@plt+0x91d8>  // b.any
  40bb6c:	ldrb	w0, [x26, #1049]
  40bb70:	cbnz	w0, 40bb9c <wcrtomb@plt+0x918c>
  40bb74:	sub	w0, w27, #0x30
  40bb78:	and	w0, w0, #0xff
  40bb7c:	cmp	w0, #0x9
  40bb80:	sub	w0, w21, #0x30
  40bb84:	and	w0, w0, #0xff
  40bb88:	cset	w1, ls  // ls = plast
  40bb8c:	cmp	w0, #0x9
  40bb90:	cset	w0, ls  // ls = plast
  40bb94:	tst	w1, w0
  40bb98:	b.eq	40bcc8 <wcrtomb@plt+0x92b8>  // b.none
  40bb9c:	sbfiz	x28, x27, #1, #32
  40bba0:	cmp	w21, w27
  40bba4:	b.lt	40b9bc <wcrtomb@plt+0x8fac>  // b.tstop
  40bba8:	ldrb	w0, [x26, #457]
  40bbac:	cbz	w0, 40bbd8 <wcrtomb@plt+0x91c8>
  40bbb0:	bl	402790 <__ctype_b_loc@plt>
  40bbb4:	ldr	x0, [x0]
  40bbb8:	ldrh	w0, [x0, x28]
  40bbbc:	tbz	w0, #10, 40bbd8 <wcrtomb@plt+0x91c8>
  40bbc0:	add	x1, sp, #0x88
  40bbc4:	mov	w0, w27
  40bbc8:	bl	409338 <wcrtomb@plt+0x6928>
  40bbcc:	add	w27, w27, #0x1
  40bbd0:	add	x28, x28, #0x2
  40bbd4:	b	40bba0 <wcrtomb@plt+0x9190>
  40bbd8:	add	x1, sp, #0x88
  40bbdc:	mov	w0, w27
  40bbe0:	bl	408dfc <wcrtomb@plt+0x63ec>
  40bbe4:	b	40bbcc <wcrtomb@plt+0x91bc>
  40bbe8:	mov	w1, w20
  40bbec:	mov	w21, w0
  40bbf0:	b	40bafc <wcrtomb@plt+0x90ec>
  40bbf4:	mov	w20, w1
  40bbf8:	mov	w19, w21
  40bbfc:	mov	w0, #0x2                   	// #2
  40bc00:	orr	w22, w22, w0
  40bc04:	ldrb	w0, [x26, #1048]
  40bc08:	cbnz	w0, 40bc44 <wcrtomb@plt+0x9234>
  40bc0c:	ldrb	w0, [x26, #457]
  40bc10:	cbz	w0, 40bc34 <wcrtomb@plt+0x9224>
  40bc14:	bl	402790 <__ctype_b_loc@plt>
  40bc18:	ldr	x0, [x0]
  40bc1c:	ldrh	w0, [x0, w27, sxtw #1]
  40bc20:	tbz	w0, #10, 40bc34 <wcrtomb@plt+0x9224>
  40bc24:	add	x1, sp, #0x88
  40bc28:	mov	w0, w27
  40bc2c:	bl	409338 <wcrtomb@plt+0x6928>
  40bc30:	b	40b9bc <wcrtomb@plt+0x8fac>
  40bc34:	add	x1, sp, #0x88
  40bc38:	mov	w0, w27
  40bc3c:	bl	408dfc <wcrtomb@plt+0x63ec>
  40bc40:	b	40b9bc <wcrtomb@plt+0x8fac>
  40bc44:	cmn	w28, #0x1
  40bc48:	b.eq	40bcc8 <wcrtomb@plt+0x92b8>  // b.none
  40bc4c:	ldrb	w0, [x26, #457]
  40bc50:	cbz	w0, 40bcb4 <wcrtomb@plt+0x92a4>
  40bc54:	add	x1, x23, #0x4
  40bc58:	mov	w0, w28
  40bc5c:	bl	40d898 <wcrtomb@plt+0xae88>
  40bc60:	add	w21, w0, #0x1
  40bc64:	str	w28, [sp, #168]
  40bc68:	add	x28, x26, #0x70
  40bc6c:	mov	x27, #0x0                   	// #0
  40bc70:	cmp	w21, w27
  40bc74:	b.le	40b9bc <wcrtomb@plt+0x8fac>
  40bc78:	ldr	w0, [x23, x27, lsl #2]
  40bc7c:	bl	4024d0 <wctob@plt>
  40bc80:	tbz	w0, #31, 40bcbc <wcrtomb@plt+0x92ac>
  40bc84:	ldp	x0, x1, [x26, #96]
  40bc88:	mov	x2, x28
  40bc8c:	mov	x4, #0x4                   	// #4
  40bc90:	mov	x3, #0xffffffffffffffff    	// #-1
  40bc94:	bl	4099cc <wcrtomb@plt+0x6fbc>
  40bc98:	ldr	x1, [x26, #104]
  40bc9c:	add	x2, x1, #0x1
  40bca0:	stp	x0, x2, [x26, #96]
  40bca4:	ldr	w2, [x23, x27, lsl #2]
  40bca8:	str	w2, [x0, x1, lsl #2]
  40bcac:	add	x27, x27, #0x1
  40bcb0:	b	40bc70 <wcrtomb@plt+0x9260>
  40bcb4:	mov	w21, #0x1                   	// #1
  40bcb8:	b	40bc64 <wcrtomb@plt+0x9254>
  40bcbc:	add	x1, sp, #0x88
  40bcc0:	bl	408dfc <wcrtomb@plt+0x63ec>
  40bcc4:	b	40bcac <wcrtomb@plt+0x929c>
  40bcc8:	mov	w24, #0x0                   	// #0
  40bccc:	b	40b9bc <wcrtomb@plt+0x8fac>
  40bcd0:	mov	x0, #0xffffffffffffffff    	// #-1
  40bcd4:	b	40ba34 <wcrtomb@plt+0x9024>
  40bcd8:	b.ne	40bd0c <wcrtomb@plt+0x92fc>  // b.any
  40bcdc:	add	x1, sp, #0x88
  40bce0:	mov	w0, #0x4                   	// #4
  40bce4:	ldr	x2, [x1]
  40bce8:	subs	w0, w0, #0x1
  40bcec:	mvn	x2, x2
  40bcf0:	str	x2, [x1], #8
  40bcf4:	b.ne	40bce4 <wcrtomb@plt+0x92d4>  // b.any
  40bcf8:	ldr	x0, [x26, #448]
  40bcfc:	tbz	w0, #8, 40bd0c <wcrtomb@plt+0x92fc>
  40bd00:	ldr	x0, [sp, #136]
  40bd04:	and	x0, x0, #0xfffffffffffffbff
  40bd08:	str	x0, [sp, #136]
  40bd0c:	add	x1, sp, #0x88
  40bd10:	mov	x0, x26
  40bd14:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40bd18:	add	x0, x0, #0x114
  40bd1c:	b	40ba3c <wcrtomb@plt+0x902c>
  40bd20:	mov	x0, #0x112                 	// #274
  40bd24:	b	40ba3c <wcrtomb@plt+0x902c>
  40bd28:	stp	x29, x30, [sp, #-96]!
  40bd2c:	mov	x29, sp
  40bd30:	stp	x19, x20, [sp, #16]
  40bd34:	mov	x19, x0
  40bd38:	mov	w20, #0x0                   	// #0
  40bd3c:	stp	x21, x22, [sp, #32]
  40bd40:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xc900>
  40bd44:	add	x22, x22, #0x6b0
  40bd48:	str	x23, [sp, #48]
  40bd4c:	mov	w23, #0x2                   	// #2
  40bd50:	ldr	x0, [x19, #40]
  40bd54:	cbnz	x0, 40bd6c <wcrtomb@plt+0x935c>
  40bd58:	mov	x0, #0xffffffffffffffff    	// #-1
  40bd5c:	str	x0, [x19, #48]
  40bd60:	b	40c398 <wcrtomb@plt+0x9988>
  40bd64:	mov	w23, w20
  40bd68:	b	40bd50 <wcrtomb@plt+0x9340>
  40bd6c:	mov	x0, x19
  40bd70:	bl	408ff4 <wcrtomb@plt+0x65e4>
  40bd74:	mov	w21, w0
  40bd78:	cmp	w0, #0x42
  40bd7c:	b.gt	40bdc8 <wcrtomb@plt+0x93b8>
  40bd80:	cmp	w0, #0x23
  40bd84:	b.gt	40bda4 <wcrtomb@plt+0x9394>
  40bd88:	cmp	w0, #0xa
  40bd8c:	b.eq	40c1a8 <wcrtomb@plt+0x9798>  // b.none
  40bd90:	ldrb	w0, [x19, #1048]
  40bd94:	strb	wzr, [x19, #120]
  40bd98:	cbz	w0, 40c454 <wcrtomb@plt+0x9a44>
  40bd9c:	mov	x0, #0x109                 	// #265
  40bda0:	b	40bd5c <wcrtomb@plt+0x934c>
  40bda4:	sub	w1, w0, #0x24
  40bda8:	cmp	w1, #0x1e
  40bdac:	b.hi	40bd90 <wcrtomb@plt+0x9380>  // b.pmore
  40bdb0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40bdb4:	add	x0, x0, #0x670
  40bdb8:	ldrh	w0, [x0, w1, uxtw #1]
  40bdbc:	adr	x1, 40bdc8 <wcrtomb@plt+0x93b8>
  40bdc0:	add	x0, x1, w0, sxth #2
  40bdc4:	br	x0
  40bdc8:	cmp	w0, #0x62
  40bdcc:	b.gt	40bdf4 <wcrtomb@plt+0x93e4>
  40bdd0:	cmp	w0, #0x52
  40bdd4:	b.le	40bd90 <wcrtomb@plt+0x9380>
  40bdd8:	sub	w0, w21, #0x53
  40bddc:	cmp	w0, #0xf
  40bde0:	b.hi	40bd90 <wcrtomb@plt+0x9380>  // b.pmore
  40bde4:	ldrh	w0, [x22, w0, uxtw #1]
  40bde8:	adr	x1, 40bdf4 <wcrtomb@plt+0x93e4>
  40bdec:	add	x0, x1, w0, sxth #2
  40bdf0:	br	x0
  40bdf4:	sub	w1, w0, #0x73
  40bdf8:	cmp	w1, #0x9
  40bdfc:	b.hi	40bd90 <wcrtomb@plt+0x9380>  // b.pmore
  40be00:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40be04:	add	x0, x0, #0x6d0
  40be08:	ldrh	w0, [x0, w1, uxtw #1]
  40be0c:	adr	x1, 40be18 <wcrtomb@plt+0x9408>
  40be10:	add	x0, x1, w0, sxth #2
  40be14:	br	x0
  40be18:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40be1c:	ldr	x0, [x19, #40]
  40be20:	cbnz	x0, 40be38 <wcrtomb@plt+0x9428>
  40be24:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40be28:	add	x1, x1, #0x569
  40be2c:	mov	w2, #0x5                   	// #5
  40be30:	bl	4028e0 <dcgettext@plt>
  40be34:	bl	403ea4 <wcrtomb@plt+0x1494>
  40be38:	mov	w20, #0x1                   	// #1
  40be3c:	cmp	w23, w20
  40be40:	b.ne	40bd64 <wcrtomb@plt+0x9354>  // b.any
  40be44:	bl	4026f0 <abort@plt>
  40be48:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40be4c:	ldr	x0, [x19, #448]
  40be50:	tbnz	w0, #3, 40be6c <wcrtomb@plt+0x945c>
  40be54:	ldr	x0, [x19, #48]
  40be58:	cmn	x0, #0x1
  40be5c:	b.eq	40be6c <wcrtomb@plt+0x945c>  // b.none
  40be60:	sub	x0, x0, #0x106
  40be64:	cmp	x0, #0x1
  40be68:	b.hi	40bd90 <wcrtomb@plt+0x9380>  // b.pmore
  40be6c:	mov	x0, #0x10c                 	// #268
  40be70:	b	40bd5c <wcrtomb@plt+0x934c>
  40be74:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40be78:	ldr	x2, [x19, #448]
  40be7c:	tbnz	w2, #3, 40bf14 <wcrtomb@plt+0x9504>
  40be80:	ldr	x1, [x19, #40]
  40be84:	cbz	x1, 40bf14 <wcrtomb@plt+0x9504>
  40be88:	lsr	x0, x2, #13
  40be8c:	eor	x0, x0, #0x1
  40be90:	and	w3, w0, #0x1
  40be94:	and	x0, x0, #0x1
  40be98:	cmp	x1, x0
  40be9c:	b.le	40bec0 <wcrtomb@plt+0x94b0>
  40bea0:	ldr	x0, [x19, #32]
  40bea4:	ldrb	w4, [x0]
  40bea8:	cmp	w4, #0x5c
  40beac:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40beb0:	cset	x3, ne  // ne = any
  40beb4:	ldrb	w0, [x0, x3]
  40beb8:	cmp	w0, #0x29
  40bebc:	b.eq	40bf14 <wcrtomb@plt+0x9504>  // b.none
  40bec0:	lsr	x0, x2, #15
  40bec4:	eor	x0, x0, #0x1
  40bec8:	and	w3, w0, #0x1
  40becc:	and	x0, x0, #0x1
  40bed0:	cmp	x1, x0
  40bed4:	b.le	40bef8 <wcrtomb@plt+0x94e8>
  40bed8:	ldr	x0, [x19, #32]
  40bedc:	ldrb	w4, [x0]
  40bee0:	cmp	w4, #0x5c
  40bee4:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40bee8:	cset	x3, ne  // ne = any
  40beec:	ldrb	w0, [x0, x3]
  40bef0:	cmp	w0, #0x7c
  40bef4:	b.eq	40bf14 <wcrtomb@plt+0x9504>  // b.none
  40bef8:	tbz	w2, #11, 40bd90 <wcrtomb@plt+0x9380>
  40befc:	cmp	x1, #0x0
  40bf00:	b.le	40bd90 <wcrtomb@plt+0x9380>
  40bf04:	ldr	x0, [x19, #32]
  40bf08:	ldrb	w0, [x0]
  40bf0c:	cmp	w0, #0xa
  40bf10:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40bf14:	mov	x0, #0x10d                 	// #269
  40bf18:	b	40bd5c <wcrtomb@plt+0x934c>
  40bf1c:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf20:	ldr	x0, [x19, #448]
  40bf24:	tbnz	w0, #14, 40bd90 <wcrtomb@plt+0x9380>
  40bf28:	mov	x0, #0x112                 	// #274
  40bf2c:	strb	wzr, [x19, #120]
  40bf30:	b	40bd5c <wcrtomb@plt+0x934c>
  40bf34:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf38:	ldr	x0, [x19, #448]
  40bf3c:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf40:	b	40be6c <wcrtomb@plt+0x945c>
  40bf44:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf48:	ldr	x0, [x19, #448]
  40bf4c:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf50:	b	40bf14 <wcrtomb@plt+0x9504>
  40bf54:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf58:	ldr	x0, [x19, #448]
  40bf5c:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf60:	mov	x0, #0x10e                 	// #270
  40bf64:	b	40bd5c <wcrtomb@plt+0x934c>
  40bf68:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf6c:	ldr	x0, [x19, #448]
  40bf70:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf74:	mov	x0, #0x10f                 	// #271
  40bf78:	b	40bd5c <wcrtomb@plt+0x934c>
  40bf7c:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf80:	ldr	x0, [x19, #448]
  40bf84:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf88:	mov	x0, #0x110                 	// #272
  40bf8c:	b	40bd5c <wcrtomb@plt+0x934c>
  40bf90:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bf94:	ldr	x0, [x19, #448]
  40bf98:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40bf9c:	mov	x0, #0x111                 	// #273
  40bfa0:	b	40bd5c <wcrtomb@plt+0x934c>
  40bfa4:	ldr	x0, [x19, #448]
  40bfa8:	tbnz	w0, #10, 40bd90 <wcrtomb@plt+0x9380>
  40bfac:	ubfx	w1, w0, #1, #1
  40bfb0:	cmp	w1, w20
  40bfb4:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40bfb8:	tbnz	w0, #4, 40bfc4 <wcrtomb@plt+0x95b4>
  40bfbc:	ldrb	w0, [x19, #120]
  40bfc0:	cbnz	w0, 40bd90 <wcrtomb@plt+0x9380>
  40bfc4:	mov	x0, #0x101                 	// #257
  40bfc8:	b	40bd5c <wcrtomb@plt+0x934c>
  40bfcc:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40bfd0:	ldr	x0, [x19, #448]
  40bfd4:	tbnz	w0, #4, 40bfe0 <wcrtomb@plt+0x95d0>
  40bfd8:	ldrb	w0, [x19, #120]
  40bfdc:	cbnz	w0, 40bd90 <wcrtomb@plt+0x9380>
  40bfe0:	mov	x0, #0x102                 	// #258
  40bfe4:	b	40bd5c <wcrtomb@plt+0x934c>
  40bfe8:	ldr	x0, [x19, #448]
  40bfec:	tbnz	w0, #10, 40bd90 <wcrtomb@plt+0x9380>
  40bff0:	ubfx	w1, w0, #1, #1
  40bff4:	cmp	w1, w20
  40bff8:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40bffc:	tbnz	w0, #4, 40c008 <wcrtomb@plt+0x95f8>
  40c000:	ldrb	w0, [x19, #120]
  40c004:	cbnz	w0, 40bd90 <wcrtomb@plt+0x9380>
  40c008:	mov	x0, #0x103                 	// #259
  40c00c:	b	40bd5c <wcrtomb@plt+0x934c>
  40c010:	ldr	x4, [x19, #448]
  40c014:	tbz	w4, #9, 40bd90 <wcrtomb@plt+0x9380>
  40c018:	lsr	x0, x4, #12
  40c01c:	eor	x0, x0, #0x1
  40c020:	and	w0, w0, #0x1
  40c024:	cmp	w0, w20
  40c028:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40c02c:	tbnz	w4, #4, 40c038 <wcrtomb@plt+0x9628>
  40c030:	ldrb	w0, [x19, #120]
  40c034:	cbnz	w0, 40bd90 <wcrtomb@plt+0x9380>
  40c038:	ldp	x1, x2, [x19, #32]
  40c03c:	mov	x0, #0xffffffffffffffff    	// #-1
  40c040:	mov	w8, #0xa                   	// #10
  40c044:	mov	w6, #0x8030                	// #32816
  40c048:	str	x0, [x19, #64]
  40c04c:	add	x2, x1, x2
  40c050:	cmp	x1, x2
  40c054:	b.ne	40c090 <wcrtomb@plt+0x9680>  // b.any
  40c058:	tbnz	w4, #21, 40bd90 <wcrtomb@plt+0x9380>
  40c05c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40c060:	add	x1, x1, #0x57d
  40c064:	mov	w2, #0x5                   	// #5
  40c068:	mov	x0, #0x0                   	// #0
  40c06c:	b	40be30 <wcrtomb@plt+0x9420>
  40c070:	tbnz	w0, #31, 40c084 <wcrtomb@plt+0x9674>
  40c074:	madd	w0, w0, w8, w5
  40c078:	cmp	w0, w6
  40c07c:	csel	w0, w0, w6, le
  40c080:	sub	w3, w0, #0x30
  40c084:	add	x1, x1, #0x1
  40c088:	str	w3, [x19, #64]
  40c08c:	b	40c050 <wcrtomb@plt+0x9640>
  40c090:	ldrb	w5, [x1]
  40c094:	ldr	w0, [x19, #64]
  40c098:	sub	w3, w5, #0x30
  40c09c:	and	w7, w3, #0xff
  40c0a0:	cmp	w7, #0x9
  40c0a4:	b.ls	40c070 <wcrtomb@plt+0x9660>  // b.plast
  40c0a8:	cmp	w5, #0x2c
  40c0ac:	b.ne	40c100 <wcrtomb@plt+0x96f0>  // b.any
  40c0b0:	tbz	w0, #31, 40c0b8 <wcrtomb@plt+0x96a8>
  40c0b4:	str	wzr, [x19, #64]
  40c0b8:	mov	w7, #0xa                   	// #10
  40c0bc:	mov	w6, #0x8030                	// #32816
  40c0c0:	add	x1, x1, #0x1
  40c0c4:	cmp	x2, x1
  40c0c8:	b.eq	40c058 <wcrtomb@plt+0x9648>  // b.none
  40c0cc:	ldrb	w5, [x1]
  40c0d0:	sub	w0, w5, #0x30
  40c0d4:	and	w3, w0, #0xff
  40c0d8:	cmp	w3, #0x9
  40c0dc:	b.hi	40c104 <wcrtomb@plt+0x96f4>  // b.pmore
  40c0e0:	ldr	w3, [x19, #68]
  40c0e4:	tbnz	w3, #31, 40c0f8 <wcrtomb@plt+0x96e8>
  40c0e8:	madd	w0, w3, w7, w5
  40c0ec:	cmp	w0, w6
  40c0f0:	csel	w0, w0, w6, le
  40c0f4:	sub	w0, w0, #0x30
  40c0f8:	str	w0, [x19, #68]
  40c0fc:	b	40c0c0 <wcrtomb@plt+0x96b0>
  40c100:	str	w0, [x19, #68]
  40c104:	cbz	w20, 40c120 <wcrtomb@plt+0x9710>
  40c108:	ldrb	w0, [x1]
  40c10c:	cmp	w0, #0x5c
  40c110:	b.ne	40c058 <wcrtomb@plt+0x9648>  // b.any
  40c114:	add	x1, x1, #0x1
  40c118:	cmp	x2, x1
  40c11c:	b.eq	40c058 <wcrtomb@plt+0x9648>  // b.none
  40c120:	ldrb	w0, [x1]
  40c124:	cmp	w0, #0x7d
  40c128:	b.ne	40c058 <wcrtomb@plt+0x9648>  // b.any
  40c12c:	ldr	w3, [x19, #64]
  40c130:	tbnz	w3, #31, 40c058 <wcrtomb@plt+0x9648>
  40c134:	ldr	w0, [x19, #68]
  40c138:	tbnz	w0, #31, 40c160 <wcrtomb@plt+0x9750>
  40c13c:	cmp	w3, w0
  40c140:	b.gt	40c058 <wcrtomb@plt+0x9648>
  40c144:	mov	w3, #0x7fff                	// #32767
  40c148:	cmp	w0, w3
  40c14c:	b.le	40c160 <wcrtomb@plt+0x9750>
  40c150:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40c154:	mov	w2, #0x5                   	// #5
  40c158:	add	x1, x1, #0x595
  40c15c:	b	40c068 <wcrtomb@plt+0x9658>
  40c160:	add	x1, x1, #0x1
  40c164:	mov	x0, #0x104                 	// #260
  40c168:	str	x1, [x19, #32]
  40c16c:	sub	x1, x2, x1
  40c170:	str	x1, [x19, #40]
  40c174:	strb	wzr, [x19, #120]
  40c178:	b	40bd5c <wcrtomb@plt+0x934c>
  40c17c:	ldr	x0, [x19, #448]
  40c180:	tbnz	w0, #10, 40bd90 <wcrtomb@plt+0x9380>
  40c184:	lsr	x0, x0, #15
  40c188:	eor	x0, x0, #0x1
  40c18c:	and	w0, w0, #0x1
  40c190:	cmp	w0, w20
  40c194:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40c198:	mov	w0, #0x1                   	// #1
  40c19c:	strb	w0, [x19, #120]
  40c1a0:	mov	x0, #0x106                 	// #262
  40c1a4:	b	40bd5c <wcrtomb@plt+0x934c>
  40c1a8:	ldr	x0, [x19, #448]
  40c1ac:	tbnz	w0, #10, 40bd90 <wcrtomb@plt+0x9380>
  40c1b0:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40c1b4:	tbnz	w0, #11, 40c198 <wcrtomb@plt+0x9788>
  40c1b8:	b	40bd90 <wcrtomb@plt+0x9380>
  40c1bc:	ldr	x0, [x19, #448]
  40c1c0:	lsr	x0, x0, #13
  40c1c4:	eor	x0, x0, #0x1
  40c1c8:	and	w0, w0, #0x1
  40c1cc:	cmp	w0, w20
  40c1d0:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40c1d4:	ldr	x0, [x19, #56]
  40c1d8:	add	x0, x0, #0x1
  40c1dc:	str	x0, [x19, #56]
  40c1e0:	mov	w0, #0x1                   	// #1
  40c1e4:	strb	w0, [x19, #120]
  40c1e8:	mov	x0, #0x107                 	// #263
  40c1ec:	b	40bd5c <wcrtomb@plt+0x934c>
  40c1f0:	ldr	x1, [x19, #448]
  40c1f4:	lsr	x0, x1, #13
  40c1f8:	eor	x0, x0, #0x1
  40c1fc:	and	w0, w0, #0x1
  40c200:	cmp	w0, w20
  40c204:	b.ne	40bd90 <wcrtomb@plt+0x9380>  // b.any
  40c208:	ldr	x0, [x19, #56]
  40c20c:	cbnz	x0, 40c214 <wcrtomb@plt+0x9804>
  40c210:	tbnz	w1, #17, 40bd90 <wcrtomb@plt+0x9380>
  40c214:	sub	x0, x0, #0x1
  40c218:	str	x0, [x19, #56]
  40c21c:	mov	x0, #0x108                 	// #264
  40c220:	strb	wzr, [x19, #120]
  40c224:	b	40bd5c <wcrtomb@plt+0x934c>
  40c228:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40c22c:	ldr	x0, [x19, #24]
  40c230:	tbz	x0, #63, 40c274 <wcrtomb@plt+0x9864>
  40c234:	ldr	x2, [x19, #448]
  40c238:	mov	x1, #0xffffffffffffffff    	// #-1
  40c23c:	mov	x0, #0xfffffffffffffbff    	// #-1025
  40c240:	stp	x1, x1, [sp, #80]
  40c244:	tst	x2, #0x40
  40c248:	csel	x0, x0, x1, eq  // eq = none
  40c24c:	stp	x0, x1, [sp, #64]
  40c250:	tbz	w2, #7, 40c25c <wcrtomb@plt+0x984c>
  40c254:	and	x0, x0, #0xfffffffffffffffe
  40c258:	str	x0, [sp, #64]
  40c25c:	ldrb	w0, [x19, #1048]
  40c260:	cbnz	w0, 40c28c <wcrtomb@plt+0x987c>
  40c264:	add	x1, sp, #0x40
  40c268:	mov	x0, x19
  40c26c:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40c270:	str	x0, [x19, #24]
  40c274:	ldrb	w0, [x19, #1048]
  40c278:	strb	wzr, [x19, #120]
  40c27c:	cbnz	w0, 40c2cc <wcrtomb@plt+0x98bc>
  40c280:	ldr	x0, [x19, #24]
  40c284:	add	x0, x0, #0x114
  40c288:	b	40bd5c <wcrtomb@plt+0x934c>
  40c28c:	add	x4, x19, #0x51c
  40c290:	add	x2, sp, #0x40
  40c294:	mov	x0, #0x0                   	// #0
  40c298:	mov	x5, #0x1                   	// #1
  40c29c:	ldr	w1, [x4, x0, lsl #2]
  40c2a0:	cmn	w1, #0x1
  40c2a4:	b.ne	40c2bc <wcrtomb@plt+0x98ac>  // b.any
  40c2a8:	lsr	w3, w0, #6
  40c2ac:	lsl	x1, x5, x0
  40c2b0:	ldr	x6, [x2, x3, lsl #3]
  40c2b4:	bic	x1, x6, x1
  40c2b8:	str	x1, [x2, x3, lsl #3]
  40c2bc:	add	x0, x0, #0x1
  40c2c0:	cmp	x0, #0x100
  40c2c4:	b.ne	40c29c <wcrtomb@plt+0x988c>  // b.any
  40c2c8:	b	40c264 <wcrtomb@plt+0x9854>
  40c2cc:	mov	x0, #0x10a                 	// #266
  40c2d0:	b	40bd5c <wcrtomb@plt+0x934c>
  40c2d4:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40c2d8:	ldr	x0, [x19, #448]
  40c2dc:	and	x20, x0, #0x80000
  40c2e0:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40c2e4:	ldrb	w0, [x19, #1048]
  40c2e8:	cbnz	w0, 40c35c <wcrtomb@plt+0x994c>
  40c2ec:	add	x0, sp, #0x40
  40c2f0:	bl	409050 <wcrtomb@plt+0x6640>
  40c2f4:	bl	402790 <__ctype_b_loc@plt>
  40c2f8:	mov	x4, x0
  40c2fc:	ldr	x0, [x4]
  40c300:	ldrh	w0, [x0, x20, lsl #1]
  40c304:	tbz	w0, #13, 40c314 <wcrtomb@plt+0x9904>
  40c308:	add	x1, sp, #0x40
  40c30c:	mov	w0, w20
  40c310:	bl	408dfc <wcrtomb@plt+0x63ec>
  40c314:	add	x20, x20, #0x1
  40c318:	cmp	x20, #0x100
  40c31c:	b.ne	40c2fc <wcrtomb@plt+0x98ec>  // b.any
  40c320:	cmp	w21, #0x53
  40c324:	b.eq	40c33c <wcrtomb@plt+0x992c>  // b.none
  40c328:	strb	wzr, [x19, #120]
  40c32c:	add	x1, sp, #0x40
  40c330:	mov	x0, x19
  40c334:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40c338:	b	40c284 <wcrtomb@plt+0x9874>
  40c33c:	add	x1, sp, #0x40
  40c340:	mov	w0, #0x4                   	// #4
  40c344:	ldr	x2, [x1]
  40c348:	subs	w0, w0, #0x1
  40c34c:	mvn	x2, x2
  40c350:	str	x2, [x1], #8
  40c354:	b.ne	40c344 <wcrtomb@plt+0x9934>  // b.any
  40c358:	b	40c328 <wcrtomb@plt+0x9918>
  40c35c:	cmp	w21, #0x73
  40c360:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40c364:	add	x0, x0, #0x5b0
  40c368:	cset	x1, eq  // eq = none
  40c36c:	cinc	x0, x0, eq  // eq = none
  40c370:	ldp	x21, x20, [x19, #32]
  40c374:	str	x0, [x19, #32]
  40c378:	mov	x0, #0xb                   	// #11
  40c37c:	sub	x0, x0, x1
  40c380:	str	x0, [x19, #40]
  40c384:	mov	x0, x19
  40c388:	bl	40b778 <wcrtomb@plt+0x8d68>
  40c38c:	stp	x21, x20, [x19, #32]
  40c390:	str	x0, [x19, #48]
  40c394:	strb	wzr, [x19, #120]
  40c398:	ldp	x19, x20, [sp, #16]
  40c39c:	ldp	x21, x22, [sp, #32]
  40c3a0:	ldr	x23, [sp, #48]
  40c3a4:	ldp	x29, x30, [sp], #96
  40c3a8:	ret
  40c3ac:	cbz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40c3b0:	ldr	x0, [x19, #448]
  40c3b4:	and	x4, x0, #0x80000
  40c3b8:	tbnz	w0, #19, 40bd90 <wcrtomb@plt+0x9380>
  40c3bc:	ldrb	w0, [x19, #1048]
  40c3c0:	cbnz	w0, 40c41c <wcrtomb@plt+0x9a0c>
  40c3c4:	add	x0, sp, #0x40
  40c3c8:	bl	409050 <wcrtomb@plt+0x6640>
  40c3cc:	add	x5, x19, #0x1cc
  40c3d0:	ldrb	w0, [x5, x4]
  40c3d4:	cmp	w0, #0x2
  40c3d8:	b.ne	40c3e8 <wcrtomb@plt+0x99d8>  // b.any
  40c3dc:	add	x1, sp, #0x40
  40c3e0:	mov	w0, w4
  40c3e4:	bl	408dfc <wcrtomb@plt+0x63ec>
  40c3e8:	add	x4, x4, #0x1
  40c3ec:	cmp	x4, #0x100
  40c3f0:	b.ne	40c3d0 <wcrtomb@plt+0x99c0>  // b.any
  40c3f4:	cmp	w21, #0x57
  40c3f8:	b.ne	40c328 <wcrtomb@plt+0x9918>  // b.any
  40c3fc:	add	x1, sp, #0x40
  40c400:	mov	w0, #0x4                   	// #4
  40c404:	ldr	x2, [x1]
  40c408:	subs	w0, w0, #0x1
  40c40c:	mvn	x2, x2
  40c410:	str	x2, [x1], #8
  40c414:	b.ne	40c404 <wcrtomb@plt+0x99f4>  // b.any
  40c418:	b	40c328 <wcrtomb@plt+0x9918>
  40c41c:	cmp	w21, #0x77
  40c420:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40c424:	add	x0, x0, #0x5bc
  40c428:	cset	x1, eq  // eq = none
  40c42c:	cinc	x0, x0, eq  // eq = none
  40c430:	ldp	x21, x20, [x19, #32]
  40c434:	str	x0, [x19, #32]
  40c438:	mov	x0, #0xc                   	// #12
  40c43c:	b	40c37c <wcrtomb@plt+0x996c>
  40c440:	cbnz	w20, 40bd90 <wcrtomb@plt+0x9380>
  40c444:	strb	wzr, [x19, #120]
  40c448:	mov	x0, x19
  40c44c:	bl	40b778 <wcrtomb@plt+0x8d68>
  40c450:	b	40bd5c <wcrtomb@plt+0x934c>
  40c454:	ldrb	w0, [x19, #457]
  40c458:	sxtw	x20, w21
  40c45c:	cbz	w0, 40c488 <wcrtomb@plt+0x9a78>
  40c460:	bl	402790 <__ctype_b_loc@plt>
  40c464:	ldr	x0, [x0]
  40c468:	ldrh	w0, [x0, x20, lsl #1]
  40c46c:	tbz	w0, #10, 40c488 <wcrtomb@plt+0x9a78>
  40c470:	add	x0, sp, #0x40
  40c474:	bl	409050 <wcrtomb@plt+0x6640>
  40c478:	add	x1, sp, #0x40
  40c47c:	mov	w0, w21
  40c480:	bl	409338 <wcrtomb@plt+0x6928>
  40c484:	b	40c32c <wcrtomb@plt+0x991c>
  40c488:	mov	x0, x20
  40c48c:	b	40bd5c <wcrtomb@plt+0x934c>
  40c490:	stp	x29, x30, [sp, #-32]!
  40c494:	mov	x29, sp
  40c498:	stp	x19, x20, [sp, #16]
  40c49c:	mov	x19, x0
  40c4a0:	bl	40c894 <wcrtomb@plt+0x9e84>
  40c4a4:	ldr	x20, [x19, #128]
  40c4a8:	cmp	x20, #0x106
  40c4ac:	b.eq	40c4bc <wcrtomb@plt+0x9aac>  // b.none
  40c4b0:	ldp	x19, x20, [sp, #16]
  40c4b4:	ldp	x29, x30, [sp], #32
  40c4b8:	ret
  40c4bc:	mov	x0, x19
  40c4c0:	bl	40bd28 <wcrtomb@plt+0x9318>
  40c4c4:	str	x0, [x19, #128]
  40c4c8:	mov	x0, x19
  40c4cc:	bl	40c894 <wcrtomb@plt+0x9e84>
  40c4d0:	mov	x1, x20
  40c4d4:	mov	x0, x19
  40c4d8:	bl	409444 <wcrtomb@plt+0x6a34>
  40c4dc:	b	40c4a4 <wcrtomb@plt+0x9a94>
  40c4e0:	stp	x29, x30, [sp, #-176]!
  40c4e4:	mov	x2, #0x113                 	// #275
  40c4e8:	mov	x29, sp
  40c4ec:	ldr	x1, [x0, #128]
  40c4f0:	stp	x19, x20, [sp, #16]
  40c4f4:	mov	x19, x0
  40c4f8:	stp	x21, x22, [sp, #32]
  40c4fc:	cmp	x1, #0xff
  40c500:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  40c504:	b.gt	40c52c <wcrtomb@plt+0x9b1c>
  40c508:	sub	x2, x1, #0x10b
  40c50c:	cmp	x2, #0x7
  40c510:	b.ls	40c524 <wcrtomb@plt+0x9b14>  // b.plast
  40c514:	cmp	x1, #0x10a
  40c518:	b.eq	40c534 <wcrtomb@plt+0x9b24>  // b.none
  40c51c:	cmp	x1, #0x113
  40c520:	b.ne	40c6e8 <wcrtomb@plt+0x9cd8>  // b.any
  40c524:	mov	x0, x19
  40c528:	b	40c700 <wcrtomb@plt+0x9cf0>
  40c52c:	cmp	x1, #0x10a
  40c530:	b.ne	40c524 <wcrtomb@plt+0x9b14>  // b.any
  40c534:	ldrb	w0, [x19, #1050]
  40c538:	cbz	w0, 40c524 <wcrtomb@plt+0x9b14>
  40c53c:	ldr	x0, [x19, #200]
  40c540:	cbnz	x0, 40c5b8 <wcrtomb@plt+0x9ba8>
  40c544:	adrp	x20, 420000 <_obstack_memory_used@@Base+0xc900>
  40c548:	add	x20, x20, #0x710
  40c54c:	add	x0, x20, #0x160
  40c550:	add	x1, sp, #0x30
  40c554:	ld1	{v0.16b, v1.16b}, [x0]
  40c558:	ldr	x0, [x19, #448]
  40c55c:	st1	{v0.16b, v1.16b}, [x1]
  40c560:	tbnz	w0, #6, 40c56c <wcrtomb@plt+0x9b5c>
  40c564:	mov	x2, #0xfffffffffffffbff    	// #-1025
  40c568:	str	x2, [sp, #48]
  40c56c:	tbz	w0, #7, 40c57c <wcrtomb@plt+0x9b6c>
  40c570:	ldr	x0, [sp, #48]
  40c574:	and	x0, x0, #0xfffffffffffffffe
  40c578:	str	x0, [sp, #48]
  40c57c:	mov	x22, x19
  40c580:	add	x20, x20, #0x160
  40c584:	mov	x0, x19
  40c588:	mov	x21, #0x1                   	// #1
  40c58c:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40c590:	add	x0, x0, #0x114
  40c594:	str	x0, [x22, #200]!
  40c598:	add	x1, x20, x21, lsl #5
  40c59c:	mov	x0, x19
  40c5a0:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40c5a4:	add	x0, x0, #0x114
  40c5a8:	str	x0, [x22, x21, lsl #3]
  40c5ac:	add	x21, x21, #0x1
  40c5b0:	cmp	x21, #0x9
  40c5b4:	b.ne	40c598 <wcrtomb@plt+0x9b88>  // b.any
  40c5b8:	ldr	x1, [x19, #200]
  40c5bc:	mov	x0, x19
  40c5c0:	mov	w20, #0x3                   	// #3
  40c5c4:	bl	409444 <wcrtomb@plt+0x6a34>
  40c5c8:	ldr	x1, [x19, #208]
  40c5cc:	mov	x0, x19
  40c5d0:	bl	409444 <wcrtomb@plt+0x6a34>
  40c5d4:	mov	x0, x19
  40c5d8:	mov	x1, #0xe0                  	// #224
  40c5dc:	bl	409444 <wcrtomb@plt+0x6a34>
  40c5e0:	ldr	x1, [x19, #224]
  40c5e4:	mov	x0, x19
  40c5e8:	bl	409444 <wcrtomb@plt+0x6a34>
  40c5ec:	mov	x0, x19
  40c5f0:	mov	x1, #0x105                 	// #261
  40c5f4:	bl	409444 <wcrtomb@plt+0x6a34>
  40c5f8:	mov	x0, x19
  40c5fc:	mov	x1, #0x106                 	// #262
  40c600:	bl	409444 <wcrtomb@plt+0x6a34>
  40c604:	mov	x0, x19
  40c608:	mov	x1, #0xed                  	// #237
  40c60c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c610:	ldr	x1, [x19, #240]
  40c614:	mov	x0, x19
  40c618:	bl	409444 <wcrtomb@plt+0x6a34>
  40c61c:	mov	x0, x19
  40c620:	mov	x1, #0x105                 	// #261
  40c624:	bl	409444 <wcrtomb@plt+0x6a34>
  40c628:	mov	x0, x19
  40c62c:	mov	x1, #0x106                 	// #262
  40c630:	bl	409444 <wcrtomb@plt+0x6a34>
  40c634:	ldr	x1, [x19, #232]
  40c638:	mov	x0, x19
  40c63c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c640:	mov	x0, x19
  40c644:	mov	x1, #0xf0                  	// #240
  40c648:	bl	409444 <wcrtomb@plt+0x6a34>
  40c64c:	ldr	x1, [x19, #248]
  40c650:	mov	x0, x19
  40c654:	bl	409444 <wcrtomb@plt+0x6a34>
  40c658:	mov	x0, x19
  40c65c:	mov	x1, #0x105                 	// #261
  40c660:	bl	409444 <wcrtomb@plt+0x6a34>
  40c664:	mov	x0, x19
  40c668:	mov	x1, #0x106                 	// #262
  40c66c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c670:	mov	x0, x19
  40c674:	mov	x1, #0xf4                  	// #244
  40c678:	bl	409444 <wcrtomb@plt+0x6a34>
  40c67c:	ldr	x1, [x19, #264]
  40c680:	mov	x0, x19
  40c684:	bl	409444 <wcrtomb@plt+0x6a34>
  40c688:	mov	x0, x19
  40c68c:	mov	x1, #0x105                 	// #261
  40c690:	bl	409444 <wcrtomb@plt+0x6a34>
  40c694:	mov	x0, x19
  40c698:	mov	x1, #0x106                 	// #262
  40c69c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c6a0:	ldr	x1, [x19, #256]
  40c6a4:	mov	x0, x19
  40c6a8:	bl	409444 <wcrtomb@plt+0x6a34>
  40c6ac:	ldr	x1, [x19, #216]
  40c6b0:	mov	x0, x19
  40c6b4:	bl	409444 <wcrtomb@plt+0x6a34>
  40c6b8:	mov	x0, x19
  40c6bc:	mov	x1, #0x105                 	// #261
  40c6c0:	bl	409444 <wcrtomb@plt+0x6a34>
  40c6c4:	mov	x0, x19
  40c6c8:	mov	x1, #0x106                 	// #262
  40c6cc:	bl	409444 <wcrtomb@plt+0x6a34>
  40c6d0:	subs	w20, w20, #0x1
  40c6d4:	b.ne	40c6ac <wcrtomb@plt+0x9c9c>  // b.any
  40c6d8:	mov	x0, x19
  40c6dc:	bl	40bd28 <wcrtomb@plt+0x9318>
  40c6e0:	str	x0, [x19, #128]
  40c6e4:	b	40c798 <wcrtomb@plt+0x9d88>
  40c6e8:	cmp	x1, #0x109
  40c6ec:	b.ne	40c754 <wcrtomb@plt+0x9d44>  // b.any
  40c6f0:	ldr	w1, [x0, #72]
  40c6f4:	cmn	w1, #0x1
  40c6f8:	b.ne	40c708 <wcrtomb@plt+0x9cf8>  // b.any
  40c6fc:	mov	x1, #0x112                 	// #274
  40c700:	bl	409444 <wcrtomb@plt+0x6a34>
  40c704:	b	40c6d8 <wcrtomb@plt+0x9cc8>
  40c708:	bl	409390 <wcrtomb@plt+0x6980>
  40c70c:	ldrb	w0, [x19, #457]
  40c710:	cbz	w0, 40c6d8 <wcrtomb@plt+0x9cc8>
  40c714:	ldr	w0, [x19, #72]
  40c718:	add	x22, sp, #0x30
  40c71c:	mov	x1, x22
  40c720:	mov	x20, #0x0                   	// #0
  40c724:	bl	40d898 <wcrtomb@plt+0xae88>
  40c728:	mov	w21, w0
  40c72c:	cmp	w21, w20
  40c730:	b.le	40c6d8 <wcrtomb@plt+0x9cc8>
  40c734:	ldr	w1, [x22, x20, lsl #2]
  40c738:	mov	x0, x19
  40c73c:	add	x20, x20, #0x1
  40c740:	bl	409390 <wcrtomb@plt+0x6980>
  40c744:	mov	x0, x19
  40c748:	mov	x1, #0x106                 	// #262
  40c74c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c750:	b	40c72c <wcrtomb@plt+0x9d1c>
  40c754:	cmp	x1, #0x107
  40c758:	b.ne	40c790 <wcrtomb@plt+0x9d80>  // b.any
  40c75c:	bl	40bd28 <wcrtomb@plt+0x9318>
  40c760:	str	x0, [x19, #128]
  40c764:	mov	x0, x19
  40c768:	bl	40c490 <wcrtomb@plt+0x9a80>
  40c76c:	ldr	x0, [x19, #128]
  40c770:	cmp	x0, #0x108
  40c774:	b.eq	40c6d8 <wcrtomb@plt+0x9cc8>  // b.none
  40c778:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40c77c:	add	x1, x1, #0x5c9
  40c780:	mov	w2, #0x5                   	// #5
  40c784:	mov	x0, #0x0                   	// #0
  40c788:	bl	4028e0 <dcgettext@plt>
  40c78c:	bl	403ea4 <wcrtomb@plt+0x1494>
  40c790:	mov	x1, #0x100                 	// #256
  40c794:	bl	409444 <wcrtomb@plt+0x6a34>
  40c798:	ldr	x1, [x19, #128]
  40c79c:	sub	x0, x1, #0x101
  40c7a0:	cmp	x0, #0x3
  40c7a4:	b.ls	40c7b8 <wcrtomb@plt+0x9da8>  // b.plast
  40c7a8:	ldp	x19, x20, [sp, #16]
  40c7ac:	ldp	x21, x22, [sp, #32]
  40c7b0:	ldp	x29, x30, [sp], #176
  40c7b4:	ret
  40c7b8:	cmp	x1, #0x104
  40c7bc:	b.ne	40c524 <wcrtomb@plt+0x9b14>  // b.any
  40c7c0:	ldr	x20, [x19, #152]
  40c7c4:	mov	x0, x19
  40c7c8:	mov	x1, x20
  40c7cc:	bl	408e1c <wcrtomb@plt+0x640c>
  40c7d0:	mov	x22, x0
  40c7d4:	sub	x20, x20, x0
  40c7d8:	ldr	x0, [x19, #64]
  40c7dc:	cbz	x0, 40c878 <wcrtomb@plt+0x9e68>
  40c7e0:	ldr	w0, [x19, #68]
  40c7e4:	tbz	w0, #31, 40c7f4 <wcrtomb@plt+0x9de4>
  40c7e8:	mov	x0, x19
  40c7ec:	mov	x1, #0x103                 	// #259
  40c7f0:	bl	409444 <wcrtomb@plt+0x6a34>
  40c7f4:	ldr	w0, [x19, #64]
  40c7f8:	cbnz	w0, 40c808 <wcrtomb@plt+0x9df8>
  40c7fc:	mov	x0, x19
  40c800:	mov	x1, #0x101                 	// #257
  40c804:	bl	409444 <wcrtomb@plt+0x6a34>
  40c808:	mov	w21, #0x1                   	// #1
  40c80c:	ldr	w0, [x19, #64]
  40c810:	cmp	w0, w21
  40c814:	b.gt	40c854 <wcrtomb@plt+0x9e44>
  40c818:	ldr	w0, [x19, #68]
  40c81c:	cmp	w0, w21
  40c820:	b.le	40c6d8 <wcrtomb@plt+0x9cc8>
  40c824:	mov	x2, x22
  40c828:	mov	x1, x20
  40c82c:	mov	x0, x19
  40c830:	bl	409db8 <wcrtomb@plt+0x73a8>
  40c834:	mov	x0, x19
  40c838:	mov	x1, #0x101                 	// #257
  40c83c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c840:	add	w21, w21, #0x1
  40c844:	mov	x0, x19
  40c848:	mov	x1, #0x105                 	// #261
  40c84c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c850:	b	40c818 <wcrtomb@plt+0x9e08>
  40c854:	mov	x2, x22
  40c858:	mov	x1, x20
  40c85c:	mov	x0, x19
  40c860:	bl	409db8 <wcrtomb@plt+0x73a8>
  40c864:	mov	x0, x19
  40c868:	mov	x1, #0x105                 	// #261
  40c86c:	add	w21, w21, #0x1
  40c870:	bl	409444 <wcrtomb@plt+0x6a34>
  40c874:	b	40c80c <wcrtomb@plt+0x9dfc>
  40c878:	str	x20, [x19, #152]
  40c87c:	mov	x0, x19
  40c880:	bl	40bd28 <wcrtomb@plt+0x9318>
  40c884:	str	x0, [x19, #128]
  40c888:	mov	x0, x19
  40c88c:	bl	40c4e0 <wcrtomb@plt+0x9ad0>
  40c890:	b	40c798 <wcrtomb@plt+0x9d88>
  40c894:	stp	x29, x30, [sp, #-32]!
  40c898:	mov	x29, sp
  40c89c:	stp	x19, x20, [sp, #16]
  40c8a0:	mov	x20, #0x106                 	// #262
  40c8a4:	mov	x19, x0
  40c8a8:	bl	40c4e0 <wcrtomb@plt+0x9ad0>
  40c8ac:	ldr	x0, [x19, #128]
  40c8b0:	cmp	x0, #0x108
  40c8b4:	ccmp	x0, x20, #0x4, ne  // ne = any
  40c8b8:	b.eq	40c8c0 <wcrtomb@plt+0x9eb0>  // b.none
  40c8bc:	tbz	x0, #63, 40c8cc <wcrtomb@plt+0x9ebc>
  40c8c0:	ldp	x19, x20, [sp, #16]
  40c8c4:	ldp	x29, x30, [sp], #32
  40c8c8:	ret
  40c8cc:	mov	x0, x19
  40c8d0:	bl	40c4e0 <wcrtomb@plt+0x9ad0>
  40c8d4:	mov	x0, x19
  40c8d8:	mov	x1, #0x105                 	// #261
  40c8dc:	bl	409444 <wcrtomb@plt+0x6a34>
  40c8e0:	b	40c8ac <wcrtomb@plt+0x9e9c>
  40c8e4:	stp	x29, x30, [sp, #-32]!
  40c8e8:	mov	x29, sp
  40c8ec:	str	x19, [sp, #16]
  40c8f0:	stp	x0, x1, [x2, #32]
  40c8f4:	mov	x0, #0xffffffffffffffff    	// #-1
  40c8f8:	str	x0, [x2, #48]
  40c8fc:	mov	w0, #0x1                   	// #1
  40c900:	strb	w0, [x2, #120]
  40c904:	ldrb	w0, [x2, #456]
  40c908:	cbnz	w0, 40c924 <wcrtomb@plt+0x9f14>
  40c90c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40c910:	add	x1, x1, #0x5d6
  40c914:	mov	w2, #0x5                   	// #5
  40c918:	mov	x0, #0x0                   	// #0
  40c91c:	bl	4028e0 <dcgettext@plt>
  40c920:	bl	403ea4 <wcrtomb@plt+0x1494>
  40c924:	ldr	x0, [x2, #184]
  40c928:	mov	x19, x2
  40c92c:	cbnz	x0, 40c93c <wcrtomb@plt+0x9f2c>
  40c930:	mov	x0, x2
  40c934:	mov	x1, #0x10b                 	// #267
  40c938:	bl	409444 <wcrtomb@plt+0x6a34>
  40c93c:	mov	x0, x19
  40c940:	bl	40bd28 <wcrtomb@plt+0x9318>
  40c944:	str	x0, [x19, #128]
  40c948:	ldr	x0, [x19, #168]
  40c94c:	str	x0, [x19, #136]
  40c950:	mov	x0, x19
  40c954:	bl	40c490 <wcrtomb@plt+0x9a80>
  40c958:	ldr	x0, [x19, #128]
  40c95c:	cmn	x0, #0x1
  40c960:	b.eq	40c974 <wcrtomb@plt+0x9f64>  // b.none
  40c964:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40c968:	mov	w2, #0x5                   	// #5
  40c96c:	add	x1, x1, #0x5ea
  40c970:	b	40c918 <wcrtomb@plt+0x9f08>
  40c974:	ldr	x1, [x19, #184]
  40c978:	mov	x0, x19
  40c97c:	mvn	x1, x1
  40c980:	bl	409444 <wcrtomb@plt+0x6a34>
  40c984:	mov	x0, x19
  40c988:	mov	x1, #0x105                 	// #261
  40c98c:	bl	409444 <wcrtomb@plt+0x6a34>
  40c990:	ldr	x0, [x19, #184]
  40c994:	cbz	x0, 40c9a4 <wcrtomb@plt+0x9f94>
  40c998:	mov	x0, x19
  40c99c:	mov	x1, #0x106                 	// #262
  40c9a0:	bl	409444 <wcrtomb@plt+0x6a34>
  40c9a4:	ldr	x0, [x19, #184]
  40c9a8:	add	x0, x0, #0x1
  40c9ac:	str	x0, [x19, #184]
  40c9b0:	ldr	x19, [sp, #16]
  40c9b4:	ldp	x29, x30, [sp], #32
  40c9b8:	ret
  40c9bc:	ldr	x6, [x0, #1040]
  40c9c0:	mov	x16, x6
  40c9c4:	br	x16
  40c9c8:	ldr	x0, [x0, #288]
  40c9cc:	ret
  40c9d0:	ldrb	w0, [x0, #192]
  40c9d4:	ret
  40c9d8:	stp	x29, x30, [sp, #-48]!
  40c9dc:	mov	x29, sp
  40c9e0:	stp	x19, x20, [sp, #16]
  40c9e4:	mov	x19, x0
  40c9e8:	ldr	x0, [x0]
  40c9ec:	stp	x21, x22, [sp, #32]
  40c9f0:	bl	4027a0 <free@plt>
  40c9f4:	ldr	x0, [x19, #144]
  40c9f8:	bl	4027a0 <free@plt>
  40c9fc:	ldrb	w0, [x19, #1048]
  40ca00:	cbz	w0, 40ca0c <wcrtomb@plt+0x9ffc>
  40ca04:	mov	x0, x19
  40ca08:	bl	409e4c <wcrtomb@plt+0x743c>
  40ca0c:	ldr	x0, [x19, #336]
  40ca10:	mov	x20, #0x0                   	// #0
  40ca14:	mov	x22, #0x50                  	// #80
  40ca18:	bl	4027a0 <free@plt>
  40ca1c:	ldr	x0, [x19, #344]
  40ca20:	bl	4027a0 <free@plt>
  40ca24:	ldp	x0, x1, [x19, #296]
  40ca28:	cmp	x1, x20
  40ca2c:	b.gt	40ca64 <wcrtomb@plt+0xa054>
  40ca30:	bl	4027a0 <free@plt>
  40ca34:	ldr	x0, [x19, #320]
  40ca38:	cbnz	x0, 40cab4 <wcrtomb@plt+0xa0a4>
  40ca3c:	ldr	x0, [x19, #368]
  40ca40:	cbnz	x0, 40cb10 <wcrtomb@plt+0xa100>
  40ca44:	ldr	x0, [x19, #288]
  40ca48:	cbz	x0, 40cb18 <wcrtomb@plt+0xa108>
  40ca4c:	bl	40c9d8 <wcrtomb@plt+0x9fc8>
  40ca50:	ldp	x21, x22, [sp, #32]
  40ca54:	ldr	x0, [x19, #288]
  40ca58:	ldp	x19, x20, [sp, #16]
  40ca5c:	ldp	x29, x30, [sp], #48
  40ca60:	b	4027a0 <free@plt>
  40ca64:	mul	x21, x20, x22
  40ca68:	add	x20, x20, #0x1
  40ca6c:	add	x0, x0, x21
  40ca70:	ldr	x0, [x0, #8]
  40ca74:	bl	4027a0 <free@plt>
  40ca78:	ldr	x0, [x19, #296]
  40ca7c:	add	x0, x0, x21
  40ca80:	ldr	x0, [x0, #48]
  40ca84:	bl	4027a0 <free@plt>
  40ca88:	b	40ca24 <wcrtomb@plt+0xa014>
  40ca8c:	mul	x1, x20, x21
  40ca90:	add	x20, x20, #0x1
  40ca94:	ldr	x0, [x0, x1]
  40ca98:	bl	4027a0 <free@plt>
  40ca9c:	ldr	x1, [x19, #152]
  40caa0:	ldr	x0, [x19, #320]
  40caa4:	cmp	x1, x20
  40caa8:	b.gt	40ca8c <wcrtomb@plt+0xa07c>
  40caac:	bl	4027a0 <free@plt>
  40cab0:	b	40ca3c <wcrtomb@plt+0xa02c>
  40cab4:	mov	x20, #0x0                   	// #0
  40cab8:	mov	x21, #0x18                  	// #24
  40cabc:	b	40ca9c <wcrtomb@plt+0xa08c>
  40cac0:	lsl	x21, x20, #3
  40cac4:	add	x20, x20, #0x1
  40cac8:	ldr	x0, [x0, x21]
  40cacc:	bl	4027a0 <free@plt>
  40cad0:	ldr	x0, [x19, #376]
  40cad4:	ldr	x0, [x0, x21]
  40cad8:	bl	4027a0 <free@plt>
  40cadc:	ldr	x1, [x19, #352]
  40cae0:	ldr	x0, [x19, #368]
  40cae4:	cmp	x1, x20
  40cae8:	b.gt	40cac0 <wcrtomb@plt+0xa0b0>
  40caec:	sub	x0, x0, #0x10
  40caf0:	bl	4027a0 <free@plt>
  40caf4:	ldr	x0, [x19, #376]
  40caf8:	bl	4027a0 <free@plt>
  40cafc:	ldr	x0, [x19, #392]
  40cb00:	bl	4027a0 <free@plt>
  40cb04:	ldr	x0, [x19, #384]
  40cb08:	bl	4027a0 <free@plt>
  40cb0c:	b	40ca44 <wcrtomb@plt+0xa034>
  40cb10:	mov	x20, #0x0                   	// #0
  40cb14:	b	40cadc <wcrtomb@plt+0xa0cc>
  40cb18:	ldp	x19, x20, [sp, #16]
  40cb1c:	ldp	x21, x22, [sp, #32]
  40cb20:	ldp	x29, x30, [sp], #48
  40cb24:	ret
  40cb28:	stp	x29, x30, [sp, #-144]!
  40cb2c:	mov	x29, sp
  40cb30:	stp	x21, x22, [sp, #32]
  40cb34:	mov	x22, x0
  40cb38:	ldrb	w21, [x0, #1048]
  40cb3c:	ldrb	w0, [x0, #457]
  40cb40:	eor	w21, w21, #0x1
  40cb44:	stp	x19, x20, [sp, #16]
  40cb48:	and	w21, w21, w0
  40cb4c:	and	w21, w21, #0xff
  40cb50:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40cb54:	mov	x19, #0x1                   	// #1
  40cb58:	add	x0, x0, #0x6e4
  40cb5c:	stp	x23, x24, [sp, #48]
  40cb60:	stp	x25, x26, [sp, #64]
  40cb64:	stp	x27, x28, [sp, #80]
  40cb68:	mov	x27, #0x0                   	// #0
  40cb6c:	stp	wzr, wzr, [sp, #96]
  40cb70:	str	x0, [sp, #120]
  40cb74:	ldr	x24, [x22, #152]
  40cb78:	add	x0, x19, #0x1
  40cb7c:	cmp	x0, x24
  40cb80:	b.lt	40cb9c <wcrtomb@plt+0xa18c>  // b.tstop
  40cb84:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0xb900>
  40cb88:	mov	w21, #0x0                   	// #0
  40cb8c:	add	x19, x19, #0x645
  40cb90:	mov	w22, #0x0                   	// #0
  40cb94:	mov	w23, #0x0                   	// #0
  40cb98:	b	40cfb4 <wcrtomb@plt+0xa5a4>
  40cb9c:	ldr	x25, [x22, #144]
  40cba0:	lsl	x26, x19, #3
  40cba4:	ldr	x20, [x25, x26]
  40cba8:	cmp	x20, #0x113
  40cbac:	b.gt	40d170 <wcrtomb@plt+0xa760>
  40cbb0:	cmp	x20, #0xff
  40cbb4:	b.gt	40cc90 <wcrtomb@plt+0xa280>
  40cbb8:	cmn	x20, #0x1
  40cbbc:	b.eq	40cf68 <wcrtomb@plt+0xa558>  // b.none
  40cbc0:	cbz	x20, 40cb84 <wcrtomb@plt+0xa174>
  40cbc4:	add	x26, x25, x26
  40cbc8:	add	x23, x19, #0x2
  40cbcc:	ldr	x0, [x26, #8]
  40cbd0:	cmp	x0, #0x105
  40cbd4:	b.ne	40cbe8 <wcrtomb@plt+0xa1d8>  // b.any
  40cbd8:	sub	x24, x24, #0x1
  40cbdc:	add	x1, x25, #0x8
  40cbe0:	cmp	x24, x23
  40cbe4:	b.gt	40d20c <wcrtomb@plt+0xa7fc>
  40cbe8:	sub	x1, x23, x19
  40cbec:	mov	x0, x27
  40cbf0:	asr	x1, x1, #1
  40cbf4:	add	x1, x1, #0x1
  40cbf8:	bl	4097a8 <wcrtomb@plt+0x6d98>
  40cbfc:	mov	x27, x0
  40cc00:	cbz	w21, 40d238 <wcrtomb@plt+0xa828>
  40cc04:	mov	w0, w20
  40cc08:	bl	402530 <toupper@plt>
  40cc0c:	and	w20, w0, #0xff
  40cc10:	ldr	x0, [x27, #16]
  40cc14:	mov	x24, x19
  40cc18:	strb	w20, [x0]
  40cc1c:	ldr	x0, [x27, #8]
  40cc20:	strb	w20, [x0]
  40cc24:	ldr	x0, [x27, #24]
  40cc28:	strb	w20, [x0]
  40cc2c:	mov	x20, #0x1                   	// #1
  40cc30:	add	x24, x24, #0x2
  40cc34:	cmp	x24, x23
  40cc38:	ldr	x25, [x27, #16]
  40cc3c:	b.lt	40d240 <wcrtomb@plt+0xa830>  // b.tstop
  40cc40:	mvn	x0, x19
  40cc44:	cmp	x19, x23
  40cc48:	add	x0, x0, x23
  40cc4c:	lsr	x2, x0, #1
  40cc50:	and	x0, x0, #0xfffffffffffffffe
  40cc54:	csel	x0, x0, xzr, lt  // lt = tstop
  40cc58:	add	x20, x19, x0
  40cc5c:	mov	x0, #0x1                   	// #1
  40cc60:	csinc	x2, x0, x2, ge  // ge = tcont
  40cc64:	mov	x19, x20
  40cc68:	strb	wzr, [x25, x2]
  40cc6c:	ldr	x0, [x27, #8]
  40cc70:	strb	wzr, [x0, x2]
  40cc74:	ldr	x0, [x27, #24]
  40cc78:	strb	wzr, [x0, x2]
  40cc7c:	ldr	x0, [x27]
  40cc80:	ldr	x1, [x27, #24]
  40cc84:	bl	409818 <wcrtomb@plt+0x6e08>
  40cc88:	str	x0, [x27]
  40cc8c:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40cc90:	sub	x0, x20, #0x100
  40cc94:	cmp	x0, #0x13
  40cc98:	b.hi	40cbc4 <wcrtomb@plt+0xa1b4>  // b.pmore
  40cc9c:	cmp	w0, #0x13
  40cca0:	b.hi	40cbc4 <wcrtomb@plt+0xa1b4>  // b.pmore
  40cca4:	ldr	x1, [sp, #120]
  40cca8:	ldrh	w0, [x1, w0, uxtw #1]
  40ccac:	adr	x1, 40ccb8 <wcrtomb@plt+0xa2a8>
  40ccb0:	add	x0, x1, w0, sxth #2
  40ccb4:	br	x0
  40ccb8:	mov	x0, x27
  40ccbc:	mov	x1, #0x2                   	// #2
  40ccc0:	bl	4097a8 <wcrtomb@plt+0x6d98>
  40ccc4:	mov	x27, x0
  40ccc8:	mov	w0, #0x1                   	// #1
  40cccc:	strb	w0, [x27, #32]
  40ccd0:	mov	w0, #0x1                   	// #1
  40ccd4:	str	w0, [sp, #96]
  40ccd8:	add	x19, x19, #0x1
  40ccdc:	b	40cb74 <wcrtomb@plt+0xa164>
  40cce0:	mov	x0, x27
  40cce4:	mov	x1, #0x2                   	// #2
  40cce8:	bl	4097a8 <wcrtomb@plt+0x6d98>
  40ccec:	mov	x27, x0
  40ccf0:	mov	w0, #0x1                   	// #1
  40ccf4:	strb	w0, [x27, #33]
  40ccf8:	mov	w0, #0x1                   	// #1
  40ccfc:	str	w0, [sp, #100]
  40cd00:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40cd04:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40cd08:	add	x3, x3, #0x710
  40cd0c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40cd10:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40cd14:	add	x3, x3, #0x280
  40cd18:	add	x1, x1, #0x504
  40cd1c:	add	x0, x0, #0x5f7
  40cd20:	mov	w2, #0xff6                 	// #4086
  40cd24:	bl	402970 <__assert_fail@plt>
  40cd28:	ldr	x0, [x27]
  40cd2c:	bl	409730 <wcrtomb@plt+0x6d20>
  40cd30:	ldr	x0, [x27]
  40cd34:	str	xzr, [x0]
  40cd38:	ldr	x0, [x27, #24]
  40cd3c:	strb	wzr, [x0]
  40cd40:	ldr	x0, [x27, #16]
  40cd44:	strb	wzr, [x0]
  40cd48:	ldr	x0, [x27, #8]
  40cd4c:	strb	wzr, [x0]
  40cd50:	strh	wzr, [x27, #32]
  40cd54:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40cd58:	ldr	x20, [x27, #40]
  40cd5c:	ldr	x1, [x27, #24]
  40cd60:	ldr	x23, [x20, #24]
  40cd64:	mov	x0, x23
  40cd68:	bl	402780 <strcmp@plt>
  40cd6c:	cbnz	w0, 40ce34 <wcrtomb@plt+0xa424>
  40cd70:	ldrb	w1, [x27, #32]
  40cd74:	ldrb	w0, [x20, #32]
  40cd78:	and	w0, w0, w1
  40cd7c:	ldrb	w1, [x27, #33]
  40cd80:	strb	w0, [x20, #32]
  40cd84:	ldrb	w0, [x20, #33]
  40cd88:	and	w0, w0, w1
  40cd8c:	strb	w0, [x20, #33]
  40cd90:	ldr	x2, [x20, #8]
  40cd94:	mov	x0, #0x0                   	// #0
  40cd98:	ldrb	w1, [x2, x0]
  40cd9c:	add	x4, x2, x0
  40cda0:	cbz	w1, 40cdb4 <wcrtomb@plt+0xa3a4>
  40cda4:	ldr	x5, [x27, #8]
  40cda8:	ldrb	w5, [x5, x0]
  40cdac:	cmp	w5, w1
  40cdb0:	b.eq	40ce40 <wcrtomb@plt+0xa430>  // b.none
  40cdb4:	strb	wzr, [x4]
  40cdb8:	ldr	x25, [x20, #16]
  40cdbc:	mov	x0, x25
  40cdc0:	bl	4023c0 <strlen@plt>
  40cdc4:	ldr	x24, [x27, #16]
  40cdc8:	mov	x23, x0
  40cdcc:	add	x25, x25, x0
  40cdd0:	mov	x0, x24
  40cdd4:	bl	4023c0 <strlen@plt>
  40cdd8:	cmp	x23, x0
  40cddc:	add	x24, x24, x0
  40cde0:	csel	x2, x23, x0, le
  40cde4:	mov	x1, #0x0                   	// #0
  40cde8:	cmp	x2, x1
  40cdec:	b.ne	40ce48 <wcrtomb@plt+0xa438>  // b.any
  40cdf0:	sub	x23, x23, x1
  40cdf4:	mov	x0, #0x0                   	// #0
  40cdf8:	ldr	x4, [x20, #16]
  40cdfc:	cmp	x0, x1
  40ce00:	add	x2, x4, x0
  40ce04:	b.ne	40ce60 <wcrtomb@plt+0xa450>  // b.any
  40ce08:	strb	wzr, [x2]
  40ce0c:	ldr	x0, [x27]
  40ce10:	str	x0, [sp, #112]
  40ce14:	mov	x0, #0x8                   	// #8
  40ce18:	ldr	x24, [x20]
  40ce1c:	bl	4111a0 <wcrtomb@plt+0xe790>
  40ce20:	mov	x23, x0
  40ce24:	ldr	x0, [x24]
  40ce28:	cbz	x0, 40cf38 <wcrtomb@plt+0xa528>
  40ce2c:	ldr	x26, [sp, #112]
  40ce30:	b	40ceac <wcrtomb@plt+0xa49c>
  40ce34:	strb	wzr, [x23]
  40ce38:	strh	wzr, [x20, #32]
  40ce3c:	b	40cd90 <wcrtomb@plt+0xa380>
  40ce40:	add	x0, x0, #0x1
  40ce44:	b	40cd98 <wcrtomb@plt+0xa388>
  40ce48:	ldrb	w4, [x25, #-1]!
  40ce4c:	ldrb	w0, [x24, #-1]!
  40ce50:	cmp	w4, w0
  40ce54:	b.ne	40cdf0 <wcrtomb@plt+0xa3e0>  // b.any
  40ce58:	add	x1, x1, #0x1
  40ce5c:	b	40cde8 <wcrtomb@plt+0xa3d8>
  40ce60:	ldrb	w2, [x2, x23]
  40ce64:	strb	w2, [x4, x0]
  40ce68:	add	x0, x0, #0x1
  40ce6c:	b	40cdf8 <wcrtomb@plt+0xa3e8>
  40ce70:	mov	x0, #0x8                   	// #8
  40ce74:	ldr	x25, [x24]
  40ce78:	bl	4111a0 <wcrtomb@plt+0xe790>
  40ce7c:	mov	x28, x0
  40ce80:	ldrb	w1, [x25]
  40ce84:	cbnz	w1, 40cec0 <wcrtomb@plt+0xa4b0>
  40ce88:	mov	x1, x28
  40ce8c:	add	x26, x26, #0x8
  40ce90:	mov	x0, x23
  40ce94:	bl	40990c <wcrtomb@plt+0x6efc>
  40ce98:	mov	x23, x0
  40ce9c:	mov	x0, x28
  40cea0:	bl	409730 <wcrtomb@plt+0x6d20>
  40cea4:	mov	x0, x28
  40cea8:	bl	4027a0 <free@plt>
  40ceac:	ldr	x0, [x26]
  40ceb0:	str	x0, [sp, #104]
  40ceb4:	cbnz	x0, 40ce70 <wcrtomb@plt+0xa460>
  40ceb8:	add	x24, x24, #0x8
  40cebc:	b	40ce24 <wcrtomb@plt+0xa414>
  40cec0:	ldr	x0, [sp, #104]
  40cec4:	str	w1, [sp, #128]
  40cec8:	bl	4027d0 <strchr@plt>
  40cecc:	mov	x2, #0x0                   	// #0
  40ced0:	ldr	w1, [sp, #128]
  40ced4:	cbnz	x0, 40cf30 <wcrtomb@plt+0xa520>
  40ced8:	cbz	x2, 40ceec <wcrtomb@plt+0xa4dc>
  40cedc:	mov	x0, x28
  40cee0:	mov	x1, x25
  40cee4:	bl	409818 <wcrtomb@plt+0x6e08>
  40cee8:	mov	x28, x0
  40ceec:	add	x25, x25, #0x1
  40cef0:	b	40ce80 <wcrtomb@plt+0xa470>
  40cef4:	add	x5, x5, #0x1
  40cef8:	ldrb	w6, [x25, x5]
  40cefc:	cbz	w6, 40cf0c <wcrtomb@plt+0xa4fc>
  40cf00:	ldrb	w7, [x0, x5]
  40cf04:	cmp	w7, w6
  40cf08:	b.eq	40cef4 <wcrtomb@plt+0xa4e4>  // b.none
  40cf0c:	cmp	x2, x5
  40cf10:	add	x0, x0, #0x1
  40cf14:	csel	x2, x2, x5, ge  // ge = tcont
  40cf18:	str	x2, [sp, #128]
  40cf1c:	str	w1, [sp, #128]
  40cf20:	str	x2, [sp, #136]
  40cf24:	bl	4027d0 <strchr@plt>
  40cf28:	ldr	x2, [sp, #136]
  40cf2c:	b	40ced0 <wcrtomb@plt+0xa4c0>
  40cf30:	mov	x5, #0x1                   	// #1
  40cf34:	b	40cef8 <wcrtomb@plt+0xa4e8>
  40cf38:	ldr	x0, [x20]
  40cf3c:	bl	409730 <wcrtomb@plt+0x6d20>
  40cf40:	ldr	x0, [x20]
  40cf44:	bl	4027a0 <free@plt>
  40cf48:	str	x23, [x20]
  40cf4c:	mov	x0, x27
  40cf50:	mov	x27, x20
  40cf54:	bl	409760 <wcrtomb@plt+0x6d50>
  40cf58:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40cf5c:	ldr	x0, [x27, #24]
  40cf60:	strb	wzr, [x0]
  40cf64:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40cf68:	ldr	x0, [x27, #40]
  40cf6c:	cbnz	x0, 40d00c <wcrtomb@plt+0xa5fc>
  40cf70:	ldr	x21, [x27]
  40cf74:	adrp	x19, 41f000 <_obstack_memory_used@@Base+0xb900>
  40cf78:	add	x19, x19, #0x645
  40cf7c:	ldr	x20, [x21]
  40cf80:	cbnz	x20, 40d030 <wcrtomb@plt+0xa620>
  40cf84:	ldr	x1, [x27, #24]
  40cf88:	mov	x0, x19
  40cf8c:	bl	402780 <strcmp@plt>
  40cf90:	cbnz	w0, 40d270 <wcrtomb@plt+0xa860>
  40cf94:	ldr	w0, [sp, #96]
  40cf98:	ldrb	w22, [x27, #32]
  40cf9c:	ldrb	w21, [x27, #33]
  40cfa0:	cbz	w0, 40cfa8 <wcrtomb@plt+0xa598>
  40cfa4:	cbz	w22, 40d278 <wcrtomb@plt+0xa868>
  40cfa8:	ldr	w0, [sp, #100]
  40cfac:	cmp	w0, #0x0
  40cfb0:	csinc	w23, w21, wzr, ne  // ne = any
  40cfb4:	ldrb	w0, [x19]
  40cfb8:	cbz	w0, 40d294 <wcrtomb@plt+0xa884>
  40cfbc:	mov	x0, x19
  40cfc0:	bl	4023c0 <strlen@plt>
  40cfc4:	add	x0, x0, #0x4
  40cfc8:	bl	41102c <wcrtomb@plt+0xe61c>
  40cfcc:	strb	w23, [x0]
  40cfd0:	mov	x20, x0
  40cfd4:	strb	w22, [x0, #1]
  40cfd8:	mov	x1, x19
  40cfdc:	strb	w21, [x0, #2]
  40cfe0:	add	x0, x0, #0x3
  40cfe4:	bl	402820 <strcpy@plt>
  40cfe8:	cbnz	x27, 40d280 <wcrtomb@plt+0xa870>
  40cfec:	mov	x0, x20
  40cff0:	ldp	x19, x20, [sp, #16]
  40cff4:	ldp	x21, x22, [sp, #32]
  40cff8:	ldp	x23, x24, [sp, #48]
  40cffc:	ldp	x25, x26, [sp, #64]
  40d000:	ldp	x27, x28, [sp, #80]
  40d004:	ldp	x29, x30, [sp], #144
  40d008:	ret
  40d00c:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40d010:	add	x3, x3, #0x710
  40d014:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40d018:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40d01c:	add	x3, x3, #0x280
  40d020:	add	x1, x1, #0x504
  40d024:	add	x0, x0, #0x624
  40d028:	mov	w2, #0x1039                	// #4153
  40d02c:	b	40cd24 <wcrtomb@plt+0xa314>
  40d030:	mov	x0, x20
  40d034:	bl	4023c0 <strlen@plt>
  40d038:	mov	x22, x0
  40d03c:	mov	x0, x19
  40d040:	bl	4023c0 <strlen@plt>
  40d044:	cmp	x22, x0
  40d048:	csel	x19, x19, x20, ls  // ls = plast
  40d04c:	add	x21, x21, #0x8
  40d050:	b	40cf7c <wcrtomb@plt+0xa56c>
  40d054:	ldr	x24, [x27, #40]
  40d058:	ldr	x1, [x27]
  40d05c:	ldr	x0, [x24]
  40d060:	bl	40990c <wcrtomb@plt+0x6efc>
  40d064:	str	x0, [x24]
  40d068:	ldr	x0, [x24, #16]
  40d06c:	ldrb	w1, [x0]
  40d070:	cbz	w1, 40d0dc <wcrtomb@plt+0xa6cc>
  40d074:	ldr	x20, [x27, #8]
  40d078:	ldrb	w1, [x20]
  40d07c:	cbz	w1, 40d0dc <wcrtomb@plt+0xa6cc>
  40d080:	bl	4023c0 <strlen@plt>
  40d084:	mov	x23, x0
  40d088:	mov	x0, x20
  40d08c:	bl	4023c0 <strlen@plt>
  40d090:	add	x26, x23, x0
  40d094:	mov	x25, x0
  40d098:	mov	x0, x26
  40d09c:	bl	41102c <wcrtomb@plt+0xe61c>
  40d0a0:	ldr	x1, [x24, #16]
  40d0a4:	mov	x20, x0
  40d0a8:	mov	x2, x23
  40d0ac:	bl	402360 <memcpy@plt>
  40d0b0:	ldr	x1, [x27, #8]
  40d0b4:	mov	x2, x25
  40d0b8:	add	x0, x20, x23
  40d0bc:	bl	402360 <memcpy@plt>
  40d0c0:	ldr	x0, [x24]
  40d0c4:	mov	x2, x26
  40d0c8:	mov	x1, x20
  40d0cc:	bl	409818 <wcrtomb@plt+0x6e08>
  40d0d0:	str	x0, [x24]
  40d0d4:	mov	x0, x20
  40d0d8:	bl	4027a0 <free@plt>
  40d0dc:	ldr	x0, [x24, #24]
  40d0e0:	ldrb	w0, [x0]
  40d0e4:	cbz	w0, 40d0f8 <wcrtomb@plt+0xa6e8>
  40d0e8:	ldr	x0, [x24, #8]
  40d0ec:	ldr	x1, [x27, #8]
  40d0f0:	bl	4094f4 <wcrtomb@plt+0x6ae4>
  40d0f4:	str	x0, [x24, #8]
  40d0f8:	ldr	x0, [x27, #24]
  40d0fc:	ldrb	w0, [x0]
  40d100:	cbnz	w0, 40d10c <wcrtomb@plt+0xa6fc>
  40d104:	ldr	x0, [x24, #16]
  40d108:	strb	wzr, [x0]
  40d10c:	ldr	x1, [x27, #16]
  40d110:	ldr	x0, [x24, #16]
  40d114:	bl	4094f4 <wcrtomb@plt+0x6ae4>
  40d118:	str	x0, [x24, #16]
  40d11c:	ldr	x0, [x24, #24]
  40d120:	ldrb	w1, [x0]
  40d124:	cbnz	w1, 40d130 <wcrtomb@plt+0xa720>
  40d128:	ldrb	w1, [x24, #32]
  40d12c:	cbz	w1, 40d164 <wcrtomb@plt+0xa754>
  40d130:	ldr	x1, [x27, #24]
  40d134:	ldrb	w2, [x1]
  40d138:	cbnz	w2, 40d144 <wcrtomb@plt+0xa734>
  40d13c:	ldrb	w2, [x27, #33]
  40d140:	cbz	w2, 40d164 <wcrtomb@plt+0xa754>
  40d144:	bl	4094f4 <wcrtomb@plt+0x6ae4>
  40d148:	str	x0, [x24, #24]
  40d14c:	ldrb	w0, [x27, #33]
  40d150:	strb	w0, [x24, #33]
  40d154:	mov	x0, x27
  40d158:	mov	x27, x24
  40d15c:	bl	409760 <wcrtomb@plt+0x6d50>
  40d160:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40d164:	strb	wzr, [x0]
  40d168:	strh	wzr, [x24, #32]
  40d16c:	b	40d154 <wcrtomb@plt+0xa744>
  40d170:	ldr	x28, [x22]
  40d174:	mov	x0, #0xffffffffffffdd80    	// #-8832
  40d178:	add	x20, x0, x20, lsl #5
  40d17c:	mov	w0, #0x0                   	// #0
  40d180:	add	x28, x28, x20
  40d184:	lsr	w2, w0, #6
  40d188:	mov	w1, w0
  40d18c:	sxtw	x20, w0
  40d190:	add	w0, w0, #0x1
  40d194:	ldr	x2, [x28, x2, lsl #3]
  40d198:	lsr	x1, x2, x1
  40d19c:	tbnz	w1, #0, 40d204 <wcrtomb@plt+0xa7f4>
  40d1a0:	cmp	w0, #0x100
  40d1a4:	b.ne	40d184 <wcrtomb@plt+0xa774>  // b.any
  40d1a8:	mov	x0, x27
  40d1ac:	mov	x1, #0x2                   	// #2
  40d1b0:	bl	4097a8 <wcrtomb@plt+0x6d98>
  40d1b4:	mov	x27, x0
  40d1b8:	b	40ccd8 <wcrtomb@plt+0xa2c8>
  40d1bc:	lsr	w0, w23, #6
  40d1c0:	ldr	x0, [x28, x0, lsl #3]
  40d1c4:	lsr	x0, x0, x23
  40d1c8:	tbz	w0, #0, 40d1f4 <wcrtomb@plt+0xa7e4>
  40d1cc:	cbz	w21, 40d1a8 <wcrtomb@plt+0xa798>
  40d1d0:	mov	w0, w23
  40d1d4:	bl	402530 <toupper@plt>
  40d1d8:	mov	w1, w0
  40d1dc:	mov	w0, w20
  40d1e0:	str	w1, [sp, #104]
  40d1e4:	bl	402530 <toupper@plt>
  40d1e8:	ldr	w1, [sp, #104]
  40d1ec:	cmp	w1, w0
  40d1f0:	b.ne	40d1a8 <wcrtomb@plt+0xa798>  // b.any
  40d1f4:	add	w23, w23, #0x1
  40d1f8:	cmp	w23, #0xff
  40d1fc:	b.le	40d1bc <wcrtomb@plt+0xa7ac>
  40d200:	b	40cbc4 <wcrtomb@plt+0xa1b4>
  40d204:	mov	w23, w20
  40d208:	b	40d1f4 <wcrtomb@plt+0xa7e4>
  40d20c:	cmp	x19, x23
  40d210:	b.eq	40d224 <wcrtomb@plt+0xa814>  // b.none
  40d214:	ldr	x0, [x25, x23, lsl #3]
  40d218:	sub	x0, x0, #0x1
  40d21c:	cmp	x0, #0xfe
  40d220:	b.hi	40cbe8 <wcrtomb@plt+0xa1d8>  // b.pmore
  40d224:	ldr	x0, [x1, x23, lsl #3]
  40d228:	cmp	x0, #0x105
  40d22c:	b.ne	40cbe8 <wcrtomb@plt+0xa1d8>  // b.any
  40d230:	add	x23, x23, #0x2
  40d234:	b	40cbe0 <wcrtomb@plt+0xa1d0>
  40d238:	and	w20, w20, #0xff
  40d23c:	b	40cc10 <wcrtomb@plt+0xa200>
  40d240:	ldr	x0, [x22, #144]
  40d244:	ldr	x0, [x0, x24, lsl #3]
  40d248:	cbz	w21, 40d250 <wcrtomb@plt+0xa840>
  40d24c:	bl	402530 <toupper@plt>
  40d250:	and	w0, w0, #0xff
  40d254:	strb	w0, [x25, x20]
  40d258:	ldr	x1, [x27, #8]
  40d25c:	strb	w0, [x1, x20]
  40d260:	ldr	x1, [x27, #24]
  40d264:	strb	w0, [x1, x20]
  40d268:	add	x20, x20, #0x1
  40d26c:	b	40cc30 <wcrtomb@plt+0xa220>
  40d270:	mov	w21, #0x0                   	// #0
  40d274:	mov	w22, #0x0                   	// #0
  40d278:	mov	w23, #0x0                   	// #0
  40d27c:	b	40cfb4 <wcrtomb@plt+0xa5a4>
  40d280:	ldr	x19, [x27, #40]
  40d284:	mov	x0, x27
  40d288:	bl	409760 <wcrtomb@plt+0x6d50>
  40d28c:	mov	x27, x19
  40d290:	b	40cfe8 <wcrtomb@plt+0xa5d8>
  40d294:	mov	x20, #0x0                   	// #0
  40d298:	b	40cfe8 <wcrtomb@plt+0xa5d8>
  40d29c:	b	4027a0 <free@plt>
  40d2a0:	mov	x0, #0x920                 	// #2336
  40d2a4:	b	41102c <wcrtomb@plt+0xe61c>
  40d2a8:	stp	x29, x30, [sp, #-128]!
  40d2ac:	mov	x29, sp
  40d2b0:	stp	x19, x20, [sp, #16]
  40d2b4:	mov	x19, x2
  40d2b8:	stp	x21, x22, [sp, #32]
  40d2bc:	stp	x23, x24, [sp, #48]
  40d2c0:	and	w24, w3, #0xff
  40d2c4:	stp	x25, x26, [sp, #64]
  40d2c8:	stp	x27, x28, [sp, #80]
  40d2cc:	cbz	x0, 40d2d4 <wcrtomb@plt+0xa8c4>
  40d2d0:	bl	40c8e4 <wcrtomb@plt+0x9ed4>
  40d2d4:	bl	40d2a0 <wcrtomb@plt+0xa890>
  40d2d8:	mov	x20, x0
  40d2dc:	mov	x2, #0x920                 	// #2336
  40d2e0:	mov	x1, x19
  40d2e4:	bl	402360 <memcpy@plt>
  40d2e8:	adrp	x23, 40b000 <wcrtomb@plt+0x85f0>
  40d2ec:	ldr	x0, [x20, #16]
  40d2f0:	add	x23, x23, #0x768
  40d2f4:	mov	x1, #0x20                  	// #32
  40d2f8:	stp	xzr, xzr, [x20, #280]
  40d2fc:	stp	xzr, xzr, [x20, #296]
  40d300:	str	xzr, [x20, #320]
  40d304:	stp	xzr, xzr, [x20, #336]
  40d308:	str	xzr, [x20, #352]
  40d30c:	stp	xzr, xzr, [x20, #368]
  40d310:	stp	xzr, xzr, [x20, #384]
  40d314:	str	x23, [x20, #1040]
  40d318:	strb	wzr, [x20, #1048]
  40d31c:	bl	41105c <wcrtomb@plt+0xe64c>
  40d320:	ldr	x2, [x19, #8]
  40d324:	str	x0, [x20]
  40d328:	cbz	x2, 40d338 <wcrtomb@plt+0xa928>
  40d32c:	ldr	x1, [x19]
  40d330:	lsl	x2, x2, #5
  40d334:	bl	402360 <memcpy@plt>
  40d338:	ldr	x0, [x19, #152]
  40d33c:	mov	x1, #0x10                  	// #16
  40d340:	mov	x21, #0x0                   	// #0
  40d344:	mov	x22, #0x0                   	// #0
  40d348:	mov	w27, #0x0                   	// #0
  40d34c:	mov	x25, #0xffffffffffffffff    	// #-1
  40d350:	bl	41105c <wcrtomb@plt+0xe64c>
  40d354:	str	x0, [x20, #144]
  40d358:	ldr	x0, [x19, #152]
  40d35c:	mov	w2, #0x0                   	// #0
  40d360:	mov	x5, #0x100                 	// #256
  40d364:	lsl	x0, x0, #1
  40d368:	str	x0, [x20, #160]
  40d36c:	ldr	x0, [x19, #152]
  40d370:	cmp	x21, x0
  40d374:	b.lt	40d3e8 <wcrtomb@plt+0xa9d8>  // b.tstop
  40d378:	str	x22, [x20, #152]
  40d37c:	cbz	w27, 40d4bc <wcrtomb@plt+0xaaac>
  40d380:	cbnz	w2, 40d38c <wcrtomb@plt+0xa97c>
  40d384:	ldrb	w0, [x19, #1048]
  40d388:	cbz	w0, 40d4bc <wcrtomb@plt+0xaaac>
  40d38c:	str	x20, [x19, #288]
  40d390:	ldr	x3, [x19, #152]
  40d394:	mov	x1, #0x0                   	// #0
  40d398:	cmp	x1, x3
  40d39c:	b.lt	40d4d0 <wcrtomb@plt+0xaac0>  // b.tstop
  40d3a0:	ldrb	w4, [x19, #1050]
  40d3a4:	cbnz	w4, 40d580 <wcrtomb@plt+0xab70>
  40d3a8:	mov	w1, w24
  40d3ac:	mov	x0, x19
  40d3b0:	bl	409ebc <wcrtomb@plt+0x74ac>
  40d3b4:	ldr	x0, [x19, #288]
  40d3b8:	cbz	x0, 40d3cc <wcrtomb@plt+0xa9bc>
  40d3bc:	mov	w1, #0x1                   	// #1
  40d3c0:	strb	w1, [x19, #192]
  40d3c4:	mov	w1, w24
  40d3c8:	bl	409ebc <wcrtomb@plt+0x74ac>
  40d3cc:	ldp	x19, x20, [sp, #16]
  40d3d0:	ldp	x21, x22, [sp, #32]
  40d3d4:	ldp	x23, x24, [sp, #48]
  40d3d8:	ldp	x25, x26, [sp, #64]
  40d3dc:	ldp	x27, x28, [sp, #80]
  40d3e0:	ldp	x29, x30, [sp], #128
  40d3e4:	ret
  40d3e8:	ldr	x0, [x19, #144]
  40d3ec:	lsl	x28, x21, #3
  40d3f0:	add	x3, x22, #0x1
  40d3f4:	lsl	x26, x22, #3
  40d3f8:	ldr	x0, [x0, x28]
  40d3fc:	cmp	x0, #0x111
  40d400:	b.gt	40d43c <wcrtomb@plt+0xaa2c>
  40d404:	cmp	x0, #0x10d
  40d408:	b.gt	40d4a8 <wcrtomb@plt+0xaa98>
  40d40c:	cmp	x0, #0x10a
  40d410:	b.eq	40d448 <wcrtomb@plt+0xaa38>  // b.none
  40d414:	ldr	x1, [x20, #144]
  40d418:	cmp	x0, #0xff
  40d41c:	str	x0, [x1, x26]
  40d420:	cset	w1, ls  // ls = plast
  40d424:	cmp	x0, #0x113
  40d428:	cset	w0, gt
  40d42c:	orr	w0, w1, w0
  40d430:	cmp	w0, #0x0
  40d434:	csel	w27, w27, w0, eq  // eq = none
  40d438:	b	40d49c <wcrtomb@plt+0xaa8c>
  40d43c:	sub	x1, x0, #0x112
  40d440:	cmp	x1, #0x1
  40d444:	b.hi	40d414 <wcrtomb@plt+0xaa04>  // b.pmore
  40d448:	add	x1, sp, #0x60
  40d44c:	mov	x0, x20
  40d450:	stp	x25, x25, [sp, #96]
  40d454:	stp	x25, x25, [sp, #112]
  40d458:	bl	4099ec <wcrtomb@plt+0x6fdc>
  40d45c:	add	x0, x0, #0x114
  40d460:	ldr	x1, [x20, #144]
  40d464:	mov	x4, #0x102                 	// #258
  40d468:	add	x3, x22, #0x2
  40d46c:	mov	x5, #0x100                 	// #256
  40d470:	str	x0, [x1, x26]
  40d474:	add	x26, x1, x26
  40d478:	ldr	x0, [x19, #144]
  40d47c:	str	x4, [x26, #8]
  40d480:	add	x0, x0, x28
  40d484:	ldr	x0, [x0, #8]
  40d488:	sub	x0, x0, #0x101
  40d48c:	cmp	x0, #0x2
  40d490:	b.hi	40d498 <wcrtomb@plt+0xaa88>  // b.pmore
  40d494:	add	x21, x21, #0x1
  40d498:	mov	w2, #0x1                   	// #1
  40d49c:	add	x21, x21, #0x1
  40d4a0:	mov	x22, x3
  40d4a4:	b	40d36c <wcrtomb@plt+0xa95c>
  40d4a8:	ldrb	w1, [x19, #1048]
  40d4ac:	cbz	w1, 40d414 <wcrtomb@plt+0xaa04>
  40d4b0:	ldr	x0, [x20, #144]
  40d4b4:	str	x5, [x0, x26]
  40d4b8:	b	40d49c <wcrtomb@plt+0xaa8c>
  40d4bc:	mov	x0, x20
  40d4c0:	bl	40c9d8 <wcrtomb@plt+0x9fc8>
  40d4c4:	mov	x0, x20
  40d4c8:	bl	4027a0 <free@plt>
  40d4cc:	b	40d390 <wcrtomb@plt+0xa980>
  40d4d0:	ldr	x0, [x19, #144]
  40d4d4:	ldr	x0, [x0, x1, lsl #3]
  40d4d8:	cmp	x0, #0x111
  40d4dc:	b.gt	40d500 <wcrtomb@plt+0xaaf0>
  40d4e0:	cmp	x0, #0x10d
  40d4e4:	b.le	40d50c <wcrtomb@plt+0xaafc>
  40d4e8:	ldrb	w0, [x19, #1048]
  40d4ec:	cbz	w0, 40d50c <wcrtomb@plt+0xaafc>
  40d4f0:	adrp	x0, 408000 <wcrtomb@plt+0x55f0>
  40d4f4:	add	x0, x0, #0xf78
  40d4f8:	str	x0, [x19, #1040]
  40d4fc:	b	40d3b4 <wcrtomb@plt+0xa9a4>
  40d500:	sub	x0, x0, #0x112
  40d504:	cmp	x0, #0x1
  40d508:	b.ls	40d4f0 <wcrtomb@plt+0xaae0>  // b.plast
  40d50c:	add	x1, x1, #0x1
  40d510:	b	40d398 <wcrtomb@plt+0xa988>
  40d514:	ldr	x2, [x19, #144]
  40d518:	ldr	x2, [x2, x0, lsl #3]
  40d51c:	cmp	x2, #0x113
  40d520:	b.eq	40d3a8 <wcrtomb@plt+0xa998>  // b.none
  40d524:	b.gt	40d538 <wcrtomb@plt+0xab28>
  40d528:	cmp	x2, #0x10a
  40d52c:	b.eq	40d57c <wcrtomb@plt+0xab6c>  // b.none
  40d530:	cmp	x2, #0x112
  40d534:	csel	w1, w1, w4, ne  // ne = any
  40d538:	add	x0, x0, #0x1
  40d53c:	cmp	x3, x0
  40d540:	b.gt	40d514 <wcrtomb@plt+0xab04>
  40d544:	cbnz	w1, 40d560 <wcrtomb@plt+0xab50>
  40d548:	ldr	x0, [x19, #288]
  40d54c:	cbz	x0, 40d560 <wcrtomb@plt+0xab50>
  40d550:	bl	40c9d8 <wcrtomb@plt+0x9fc8>
  40d554:	ldr	x0, [x19, #288]
  40d558:	bl	4027a0 <free@plt>
  40d55c:	str	xzr, [x19, #288]
  40d560:	mov	x0, x19
  40d564:	bl	409e4c <wcrtomb@plt+0x743c>
  40d568:	mov	w0, #0x1                   	// #1
  40d56c:	strb	w0, [x19, #192]
  40d570:	str	x23, [x19, #1040]
  40d574:	strb	wzr, [x19, #1048]
  40d578:	b	40d3a8 <wcrtomb@plt+0xa998>
  40d57c:	bl	4026f0 <abort@plt>
  40d580:	mov	x0, #0x0                   	// #0
  40d584:	mov	w1, #0x0                   	// #0
  40d588:	b	40d53c <wcrtomb@plt+0xab2c>
  40d58c:	stp	x29, x30, [sp, #-64]!
  40d590:	mov	x29, sp
  40d594:	stp	x23, x24, [sp, #48]
  40d598:	mov	x23, x1
  40d59c:	mov	w1, #0x0                   	// #0
  40d5a0:	stp	x19, x20, [sp, #16]
  40d5a4:	mov	x19, x0
  40d5a8:	mov	x20, x2
  40d5ac:	mov	x2, #0x410                 	// #1040
  40d5b0:	stp	x21, x22, [sp, #32]
  40d5b4:	mov	w21, w3
  40d5b8:	bl	4025f0 <memset@plt>
  40d5bc:	ldrb	w22, [x23]
  40d5c0:	adrp	x1, 40b000 <wcrtomb@plt+0x85f0>
  40d5c4:	adrp	x0, 40b000 <wcrtomb@plt+0x85f0>
  40d5c8:	cmp	w22, #0x0
  40d5cc:	add	x1, x1, #0x768
  40d5d0:	add	x0, x0, #0x770
  40d5d4:	mov	x2, #0x504                 	// #1284
  40d5d8:	csel	x0, x0, x1, ne  // ne = any
  40d5dc:	str	x0, [x19, #1040]
  40d5e0:	mov	x1, x23
  40d5e4:	add	x0, x19, #0x418
  40d5e8:	bl	402360 <memcpy@plt>
  40d5ec:	eor	w22, w22, #0x1
  40d5f0:	mov	x0, #0xffffffffffffffff    	// #-1
  40d5f4:	str	x0, [x19, #24]
  40d5f8:	mov	w0, #0x1                   	// #1
  40d5fc:	strb	w0, [x19, #456]
  40d600:	ubfx	w0, w20, #22, #1
  40d604:	tst	x21, #0x2
  40d608:	add	x24, x19, #0x51c
  40d60c:	strb	w22, [x19, #192]
  40d610:	adrp	x22, 420000 <_obstack_memory_used@@Base+0xc900>
  40d614:	add	x22, x22, #0x62e
  40d618:	strb	w0, [x19, #457]
  40d61c:	and	w0, w21, #0x1
  40d620:	str	x20, [x19, #448]
  40d624:	mov	x20, #0x0                   	// #0
  40d628:	strb	w0, [x19, #458]
  40d62c:	mov	w0, #0xa                   	// #10
  40d630:	csel	w0, wzr, w0, ne  // ne = any
  40d634:	strb	w0, [x19, #459]
  40d638:	ldrb	w0, [x19, #459]
  40d63c:	mov	w23, w20
  40d640:	mov	w21, w20
  40d644:	cmp	w0, w20, uxtb
  40d648:	b.ne	40d654 <wcrtomb@plt+0xac44>  // b.any
  40d64c:	ldrb	w0, [x19, #458]
  40d650:	cbz	w0, 40d6e4 <wcrtomb@plt+0xacd4>
  40d654:	ldr	w0, [x24, x20, lsl #2]
  40d658:	cmn	w0, #0x1
  40d65c:	b.eq	40d6d4 <wcrtomb@plt+0xacc4>  // b.none
  40d660:	bl	402790 <__ctype_b_loc@plt>
  40d664:	ldr	x0, [x0]
  40d668:	ldrh	w0, [x0, x20, lsl #1]
  40d66c:	tbnz	w0, #3, 40d6dc <wcrtomb@plt+0xaccc>
  40d670:	cmp	w20, #0x5f
  40d674:	cset	w0, eq  // eq = none
  40d678:	add	w0, w0, #0x1
  40d67c:	add	x2, x19, #0x1cc
  40d680:	and	w1, w0, #0xff
  40d684:	cmp	w0, #0x2
  40d688:	strb	w1, [x2, x20]
  40d68c:	b.eq	40d6ec <wcrtomb@plt+0xacdc>  // b.none
  40d690:	cmp	w1, #0x4
  40d694:	b.eq	40d6fc <wcrtomb@plt+0xacec>  // b.none
  40d698:	ldrb	w0, [x19, #1050]
  40d69c:	cbz	w0, 40d704 <wcrtomb@plt+0xacf4>
  40d6a0:	and	w21, w21, #0xc0
  40d6a4:	cmp	w21, #0x80
  40d6a8:	add	x1, x19, #0x2cc
  40d6ac:	cset	w0, ne  // ne = any
  40d6b0:	strb	w0, [x1, x20]
  40d6b4:	add	x20, x20, #0x1
  40d6b8:	cmp	x20, #0x100
  40d6bc:	b.ne	40d638 <wcrtomb@plt+0xac28>  // b.any
  40d6c0:	ldp	x19, x20, [sp, #16]
  40d6c4:	ldp	x21, x22, [sp, #32]
  40d6c8:	ldp	x23, x24, [sp, #48]
  40d6cc:	ldp	x29, x30, [sp], #64
  40d6d0:	ret
  40d6d4:	mov	w0, #0x0                   	// #0
  40d6d8:	b	40d678 <wcrtomb@plt+0xac68>
  40d6dc:	mov	w0, #0x1                   	// #1
  40d6e0:	b	40d678 <wcrtomb@plt+0xac68>
  40d6e4:	mov	w0, #0x4                   	// #4
  40d6e8:	b	40d67c <wcrtomb@plt+0xac6c>
  40d6ec:	add	x1, x19, #0x3d0
  40d6f0:	mov	w0, w23
  40d6f4:	bl	408dfc <wcrtomb@plt+0x63ec>
  40d6f8:	b	40d698 <wcrtomb@plt+0xac88>
  40d6fc:	add	x1, x19, #0x3f0
  40d700:	b	40d6f0 <wcrtomb@plt+0xace0>
  40d704:	mov	w1, w21
  40d708:	mov	x0, x22
  40d70c:	bl	4027d0 <strchr@plt>
  40d710:	cmp	x0, #0x0
  40d714:	b	40d6a8 <wcrtomb@plt+0xac98>
  40d718:	stp	x29, x30, [sp, #-32]!
  40d71c:	mov	x2, #0x1c0                 	// #448
  40d720:	mov	x29, sp
  40d724:	stp	x19, x20, [sp, #16]
  40d728:	mov	x19, x0
  40d72c:	mov	x20, x1
  40d730:	mov	w1, #0x0                   	// #0
  40d734:	bl	4025f0 <memset@plt>
  40d738:	mov	x0, #0xffffffffffffffff    	// #-1
  40d73c:	str	x0, [x19, #24]
  40d740:	ldrb	w0, [x20, #192]
  40d744:	add	x1, x20, #0x1c0
  40d748:	strb	w0, [x19, #192]
  40d74c:	mov	x2, #0x250                 	// #592
  40d750:	add	x0, x19, #0x1c0
  40d754:	bl	402360 <memcpy@plt>
  40d758:	ldr	x0, [x20, #1040]
  40d75c:	str	x0, [x19, #1040]
  40d760:	add	x1, x20, #0x418
  40d764:	add	x0, x19, #0x418
  40d768:	mov	x2, #0x504                 	// #1284
  40d76c:	bl	402360 <memcpy@plt>
  40d770:	ldp	x19, x20, [sp, #16]
  40d774:	ldp	x29, x30, [sp], #32
  40d778:	ret
  40d77c:	stp	x29, x30, [sp, #-96]!
  40d780:	mov	x29, sp
  40d784:	stp	x19, x20, [sp, #16]
  40d788:	mov	x19, x0
  40d78c:	stp	x21, x22, [sp, #32]
  40d790:	str	x23, [sp, #48]
  40d794:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  40d798:	cmp	x0, #0x1
  40d79c:	cset	w1, hi  // hi = pmore
  40d7a0:	strb	w1, [x19]
  40d7a4:	b.hi	40d7d4 <wcrtomb@plt+0xadc4>  // b.pmore
  40d7a8:	mov	w20, #0x0                   	// #0
  40d7ac:	and	w0, w20, #0xff
  40d7b0:	strb	w0, [sp, #88]
  40d7b4:	add	w0, w0, #0x1
  40d7b8:	add	x1, sp, #0x50
  40d7bc:	strb	w0, [sp, #80]
  40d7c0:	add	x0, sp, #0x58
  40d7c4:	strb	wzr, [sp, #81]
  40d7c8:	strb	wzr, [sp, #89]
  40d7cc:	bl	402900 <strcoll@plt>
  40d7d0:	tbnz	w0, #31, 40d7dc <wcrtomb@plt+0xadcc>
  40d7d4:	mov	w0, #0x0                   	// #0
  40d7d8:	b	40d7ec <wcrtomb@plt+0xaddc>
  40d7dc:	add	w20, w20, #0x1
  40d7e0:	cmp	w20, #0xff
  40d7e4:	b.ne	40d7ac <wcrtomb@plt+0xad9c>  // b.any
  40d7e8:	mov	w0, #0x1                   	// #1
  40d7ec:	strb	w0, [x19, #1]
  40d7f0:	add	x3, sp, #0x58
  40d7f4:	add	x0, sp, #0x50
  40d7f8:	mov	x2, #0x2                   	// #2
  40d7fc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40d800:	add	x1, x1, #0x998
  40d804:	str	xzr, [sp, #88]
  40d808:	bl	413374 <wcrtomb@plt+0x10964>
  40d80c:	cmp	x0, #0x2
  40d810:	b.ne	40d890 <wcrtomb@plt+0xae80>  // b.any
  40d814:	ldr	w0, [sp, #80]
  40d818:	cmp	w0, #0x100
  40d81c:	cset	w0, eq  // eq = none
  40d820:	add	x22, x19, #0x3
  40d824:	strb	w0, [x19, #2]
  40d828:	add	x19, x19, #0x104
  40d82c:	mov	x20, #0x0                   	// #0
  40d830:	mov	x23, #0x1                   	// #1
  40d834:	mov	w21, #0xffffffff            	// #-1
  40d838:	add	x1, sp, #0x4f
  40d83c:	add	x3, sp, #0x58
  40d840:	add	x0, sp, #0x50
  40d844:	mov	x2, #0x1                   	// #1
  40d848:	strb	w20, [sp, #79]
  40d84c:	str	xzr, [sp, #88]
  40d850:	bl	413374 <wcrtomb@plt+0x10964>
  40d854:	cmp	x0, #0x0
  40d858:	csel	x1, x0, x23, ne  // ne = any
  40d85c:	cmp	x0, #0x2
  40d860:	ldr	w0, [sp, #80]
  40d864:	strb	w1, [x22, x20]
  40d868:	csel	w0, w0, w21, cc  // cc = lo, ul, last
  40d86c:	str	w0, [x19, x20, lsl #2]
  40d870:	add	x20, x20, #0x1
  40d874:	cmp	x20, #0x100
  40d878:	b.ne	40d838 <wcrtomb@plt+0xae28>  // b.any
  40d87c:	ldp	x19, x20, [sp, #16]
  40d880:	ldp	x21, x22, [sp, #32]
  40d884:	ldr	x23, [sp, #48]
  40d888:	ldp	x29, x30, [sp], #96
  40d88c:	ret
  40d890:	mov	w0, #0x0                   	// #0
  40d894:	b	40d820 <wcrtomb@plt+0xae10>
  40d898:	stp	x29, x30, [sp, #-80]!
  40d89c:	mov	x29, sp
  40d8a0:	stp	x19, x20, [sp, #16]
  40d8a4:	stp	x21, x22, [sp, #32]
  40d8a8:	mov	w22, w0
  40d8ac:	stp	x23, x24, [sp, #48]
  40d8b0:	mov	x23, x1
  40d8b4:	stp	x25, x26, [sp, #64]
  40d8b8:	bl	402920 <towupper@plt>
  40d8bc:	mov	w20, w0
  40d8c0:	bl	4029c0 <towlower@plt>
  40d8c4:	mov	w21, w0
  40d8c8:	cmp	w22, w20
  40d8cc:	b.eq	40d960 <wcrtomb@plt+0xaf50>  // b.none
  40d8d0:	mov	w19, #0x1                   	// #1
  40d8d4:	str	w20, [x23]
  40d8d8:	cmp	w20, w21
  40d8dc:	ccmp	w22, w21, #0x4, ne  // ne = any
  40d8e0:	b.eq	40d8fc <wcrtomb@plt+0xaeec>  // b.none
  40d8e4:	mov	w0, w21
  40d8e8:	bl	402920 <towupper@plt>
  40d8ec:	cmp	w0, w20
  40d8f0:	b.ne	40d8fc <wcrtomb@plt+0xaeec>  // b.any
  40d8f4:	str	w21, [x23, w19, sxtw #2]
  40d8f8:	add	w19, w19, #0x1
  40d8fc:	adrp	x26, 420000 <_obstack_memory_used@@Base+0xc900>
  40d900:	add	x26, x26, #0x99c
  40d904:	mov	x25, #0x0                   	// #0
  40d908:	ldrsh	w24, [x26, x25, lsl #1]
  40d90c:	cmp	w21, w24
  40d910:	ccmp	w20, w24, #0x4, ne  // ne = any
  40d914:	b.eq	40d938 <wcrtomb@plt+0xaf28>  // b.none
  40d918:	cmp	w22, w24
  40d91c:	b.eq	40d938 <wcrtomb@plt+0xaf28>  // b.none
  40d920:	mov	w0, w24
  40d924:	bl	402920 <towupper@plt>
  40d928:	cmp	w0, w20
  40d92c:	b.ne	40d938 <wcrtomb@plt+0xaf28>  // b.any
  40d930:	str	w24, [x23, w19, sxtw #2]
  40d934:	add	w19, w19, #0x1
  40d938:	add	x25, x25, #0x1
  40d93c:	cmp	x25, #0x13
  40d940:	b.ne	40d908 <wcrtomb@plt+0xaef8>  // b.any
  40d944:	mov	w0, w19
  40d948:	ldp	x19, x20, [sp, #16]
  40d94c:	ldp	x21, x22, [sp, #32]
  40d950:	ldp	x23, x24, [sp, #48]
  40d954:	ldp	x25, x26, [sp, #64]
  40d958:	ldp	x29, x30, [sp], #80
  40d95c:	ret
  40d960:	mov	w19, #0x0                   	// #0
  40d964:	b	40d8d8 <wcrtomb@plt+0xaec8>
  40d968:	stp	x29, x30, [sp, #-32]!
  40d96c:	mov	x29, sp
  40d970:	str	x19, [sp, #16]
  40d974:	mov	x19, x0
  40d978:	bl	41dfb4 <_obstack_memory_used@@Base+0xa8b4>
  40d97c:	ldrb	w1, [x0]
  40d980:	cmp	w1, #0x0
  40d984:	csel	x19, x19, x0, eq  // eq = none
  40d988:	mov	x0, x19
  40d98c:	bl	41e004 <_obstack_memory_used@@Base+0xa904>
  40d990:	ldrb	w1, [x19, x0]
  40d994:	strb	wzr, [x19, x0]
  40d998:	cmp	w1, #0x0
  40d99c:	cset	w0, ne  // ne = any
  40d9a0:	ldr	x19, [sp, #16]
  40d9a4:	ldp	x29, x30, [sp], #32
  40d9a8:	ret
  40d9ac:	ldr	x3, [x3]
  40d9b0:	mov	x16, x3
  40d9b4:	br	x16
  40d9b8:	b	4027a0 <free@plt>
  40d9bc:	stp	x29, x30, [sp, #-16]!
  40d9c0:	mov	x29, sp
  40d9c4:	bl	40f11c <wcrtomb@plt+0xc70c>
  40d9c8:	cmp	w0, #0x0
  40d9cc:	cset	w0, eq  // eq = none
  40d9d0:	ldp	x29, x30, [sp], #16
  40d9d4:	ret
  40d9d8:	stp	x29, x30, [sp, #-16]!
  40d9dc:	mov	x29, sp
  40d9e0:	bl	402780 <strcmp@plt>
  40d9e4:	cmp	w0, #0x0
  40d9e8:	cset	w0, eq  // eq = none
  40d9ec:	ldp	x29, x30, [sp], #16
  40d9f0:	ret
  40d9f4:	b	40eae4 <wcrtomb@plt+0xc0d4>
  40d9f8:	stp	x29, x30, [sp, #-112]!
  40d9fc:	mov	x29, sp
  40da00:	stp	x19, x20, [sp, #16]
  40da04:	mov	x20, x1
  40da08:	mov	x19, #0x0                   	// #0
  40da0c:	stp	x21, x22, [sp, #32]
  40da10:	mov	x22, #0x1f                  	// #31
  40da14:	strb	wzr, [sp, #48]
  40da18:	stur	xzr, [sp, #52]
  40da1c:	strb	wzr, [sp, #60]
  40da20:	str	x0, [sp, #64]
  40da24:	add	x0, sp, #0x30
  40da28:	bl	40f2e4 <wcrtomb@plt+0xc8d4>
  40da2c:	ldrb	w0, [sp, #80]
  40da30:	cbz	w0, 40da50 <wcrtomb@plt+0xb040>
  40da34:	ldr	w0, [sp, #84]
  40da38:	cbnz	w0, 40da50 <wcrtomb@plt+0xb040>
  40da3c:	mov	x0, x19
  40da40:	ldp	x19, x20, [sp, #16]
  40da44:	ldp	x21, x22, [sp, #32]
  40da48:	ldp	x29, x30, [sp], #112
  40da4c:	ret
  40da50:	ldrb	w0, [sp, #80]
  40da54:	ldr	x21, [sp, #64]
  40da58:	cbz	w0, 40da88 <wcrtomb@plt+0xb078>
  40da5c:	ldr	w0, [sp, #84]
  40da60:	bl	4029c0 <towlower@plt>
  40da64:	mov	w0, w0
  40da68:	strb	wzr, [sp, #60]
  40da6c:	madd	x19, x19, x22, x0
  40da70:	udiv	x0, x19, x20
  40da74:	msub	x19, x0, x20, x19
  40da78:	ldr	x0, [sp, #72]
  40da7c:	add	x21, x21, x0
  40da80:	str	x21, [sp, #64]
  40da84:	b	40da24 <wcrtomb@plt+0xb014>
  40da88:	ldrb	w0, [x21]
  40da8c:	b	40da64 <wcrtomb@plt+0xb054>
  40da90:	and	w3, w2, #0x10
  40da94:	tbnz	w2, #3, 40daa4 <wcrtomb@plt+0xb094>
  40da98:	cbz	w3, 40daa0 <wcrtomb@plt+0xb090>
  40da9c:	b	40f11c <wcrtomb@plt+0xc70c>
  40daa0:	b	402780 <strcmp@plt>
  40daa4:	stp	x29, x30, [sp, #-64]!
  40daa8:	mov	x29, sp
  40daac:	stp	x19, x20, [sp, #16]
  40dab0:	mov	x20, x1
  40dab4:	stp	x21, x22, [sp, #32]
  40dab8:	mov	x22, x0
  40dabc:	str	x23, [sp, #48]
  40dac0:	cbnz	w3, 40db08 <wcrtomb@plt+0xb0f8>
  40dac4:	bl	4023c0 <strlen@plt>
  40dac8:	mov	x2, x0
  40dacc:	mov	x21, x0
  40dad0:	mov	x1, x20
  40dad4:	mov	x0, x22
  40dad8:	bl	4025a0 <strncmp@plt>
  40dadc:	mov	w19, w0
  40dae0:	cbnz	w0, 40daf0 <wcrtomb@plt+0xb0e0>
  40dae4:	ldrb	w19, [x20, x21]
  40dae8:	cmp	w19, #0x2f
  40daec:	csel	w19, wzr, w19, eq  // eq = none
  40daf0:	mov	w0, w19
  40daf4:	ldp	x19, x20, [sp, #16]
  40daf8:	ldp	x21, x22, [sp, #32]
  40dafc:	ldr	x23, [sp, #48]
  40db00:	ldp	x29, x30, [sp], #64
  40db04:	ret
  40db08:	mov	x0, x1
  40db0c:	bl	4111d8 <wcrtomb@plt+0xe7c8>
  40db10:	mov	x21, x0
  40db14:	mov	w23, #0x2f                  	// #47
  40db18:	mov	w1, #0x2f                  	// #47
  40db1c:	bl	4027d0 <strchr@plt>
  40db20:	mov	x20, x0
  40db24:	cbz	x0, 40db2c <wcrtomb@plt+0xb11c>
  40db28:	strb	wzr, [x0]
  40db2c:	mov	x1, x21
  40db30:	mov	x0, x22
  40db34:	bl	40f11c <wcrtomb@plt+0xc70c>
  40db38:	mov	w19, w0
  40db3c:	cmp	x20, #0x0
  40db40:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40db44:	b.le	40db54 <wcrtomb@plt+0xb144>
  40db48:	mov	x0, x20
  40db4c:	strb	w23, [x0], #1
  40db50:	b	40db18 <wcrtomb@plt+0xb108>
  40db54:	mov	x0, x21
  40db58:	bl	4027a0 <free@plt>
  40db5c:	b	40daf0 <wcrtomb@plt+0xb0e0>
  40db60:	stp	x29, x30, [sp, #-32]!
  40db64:	mov	x29, sp
  40db68:	stp	x19, x20, [sp, #16]
  40db6c:	mov	x19, x0
  40db70:	mov	x20, x1
  40db74:	mov	x0, #0x10                  	// #16
  40db78:	bl	41102c <wcrtomb@plt+0xe61c>
  40db7c:	ldr	x1, [x19, #8]
  40db80:	stp	x1, x20, [x0]
  40db84:	str	x0, [x19, #8]
  40db88:	ldp	x19, x20, [sp, #16]
  40db8c:	ldp	x29, x30, [sp], #32
  40db90:	ret
  40db94:	and	w6, w1, #0x20
  40db98:	and	w4, w1, #0x8000000
  40db9c:	adrp	x5, 420000 <_obstack_memory_used@@Base+0xc900>
  40dba0:	and	w1, w1, #0x2
  40dba4:	add	x5, x5, #0x9c4
  40dba8:	mov	x3, x0
  40dbac:	ldrb	w2, [x3], #1
  40dbb0:	cmp	w2, #0x3f
  40dbb4:	b.eq	40dc1c <wcrtomb@plt+0xb20c>  // b.none
  40dbb8:	b.hi	40dbe8 <wcrtomb@plt+0xb1d8>  // b.pmore
  40dbbc:	cbz	w2, 40dc58 <wcrtomb@plt+0xb248>
  40dbc0:	sub	w2, w2, #0x21
  40dbc4:	and	w7, w2, #0xff
  40dbc8:	cmp	w7, #0xd
  40dbcc:	b.hi	40dc40 <wcrtomb@plt+0xb230>  // b.pmore
  40dbd0:	cmp	w2, #0xd
  40dbd4:	b.hi	40dc40 <wcrtomb@plt+0xb230>  // b.pmore
  40dbd8:	ldrb	w2, [x5, w2, uxtw]
  40dbdc:	adr	x7, 40dbe8 <wcrtomb@plt+0xb1d8>
  40dbe0:	add	x2, x7, w2, sxtb #2
  40dbe4:	br	x2
  40dbe8:	cmp	w2, #0x5c
  40dbec:	b.eq	40dc24 <wcrtomb@plt+0xb214>  // b.none
  40dbf0:	b.hi	40dc08 <wcrtomb@plt+0xb1f8>  // b.pmore
  40dbf4:	cmp	w2, #0x40
  40dbf8:	b.eq	40dc48 <wcrtomb@plt+0xb238>  // b.none
  40dbfc:	cmp	w2, #0x5b
  40dc00:	b.eq	40dc1c <wcrtomb@plt+0xb20c>  // b.none
  40dc04:	b	40dc40 <wcrtomb@plt+0xb230>
  40dc08:	cmp	w2, #0x7b
  40dc0c:	b.eq	40dc18 <wcrtomb@plt+0xb208>  // b.none
  40dc10:	cmp	w2, #0x7d
  40dc14:	b.ne	40dc40 <wcrtomb@plt+0xb230>  // b.any
  40dc18:	cbz	w4, 40dc40 <wcrtomb@plt+0xb230>
  40dc1c:	mov	w0, #0x1                   	// #1
  40dc20:	b	40dc5c <wcrtomb@plt+0xb24c>
  40dc24:	mov	w2, w4
  40dc28:	cbnz	w4, 40dc40 <wcrtomb@plt+0xb230>
  40dc2c:	cbnz	w1, 40dc3c <wcrtomb@plt+0xb22c>
  40dc30:	ldrb	w0, [x0, #1]
  40dc34:	cmp	w0, #0x0
  40dc38:	cset	w2, ne  // ne = any
  40dc3c:	add	x3, x3, w2, sxtw
  40dc40:	mov	x0, x3
  40dc44:	b	40dba8 <wcrtomb@plt+0xb198>
  40dc48:	cbz	w6, 40dc40 <wcrtomb@plt+0xb230>
  40dc4c:	ldrb	w0, [x0, #1]
  40dc50:	cmp	w0, #0x28
  40dc54:	b	40dc00 <wcrtomb@plt+0xb1f0>
  40dc58:	mov	w0, #0x0                   	// #0
  40dc5c:	ret
  40dc60:	mov	x0, #0x10                  	// #16
  40dc64:	b	4111a0 <wcrtomb@plt+0xe790>
  40dc68:	stp	x29, x30, [sp, #-64]!
  40dc6c:	mov	x29, sp
  40dc70:	stp	x19, x20, [sp, #16]
  40dc74:	mov	x20, x0
  40dc78:	stp	x21, x22, [sp, #32]
  40dc7c:	mov	x22, #0x48                  	// #72
  40dc80:	ldr	x19, [x0]
  40dc84:	str	x23, [sp, #48]
  40dc88:	cbnz	x19, 40dcac <wcrtomb@plt+0xb29c>
  40dc8c:	ldr	x19, [x20, #8]
  40dc90:	cbnz	x19, 40dd18 <wcrtomb@plt+0xb308>
  40dc94:	mov	x0, x20
  40dc98:	ldp	x19, x20, [sp, #16]
  40dc9c:	ldp	x21, x22, [sp, #32]
  40dca0:	ldr	x23, [sp, #48]
  40dca4:	ldp	x29, x30, [sp], #64
  40dca8:	b	4027a0 <free@plt>
  40dcac:	ldr	w0, [x19, #8]
  40dcb0:	ldr	x23, [x19]
  40dcb4:	cbz	w0, 40dd0c <wcrtomb@plt+0xb2fc>
  40dcb8:	cmp	w0, #0x1
  40dcbc:	b.eq	40dd04 <wcrtomb@plt+0xb2f4>  // b.none
  40dcc0:	mov	x0, x19
  40dcc4:	mov	x19, x23
  40dcc8:	bl	4027a0 <free@plt>
  40dccc:	b	40dc88 <wcrtomb@plt+0xb278>
  40dcd0:	mul	x1, x21, x22
  40dcd4:	add	x2, x0, x1
  40dcd8:	ldr	w0, [x0, x1]
  40dcdc:	tbz	w0, #27, 40dce8 <wcrtomb@plt+0xb2d8>
  40dce0:	add	x0, x2, #0x8
  40dce4:	bl	41dd00 <_obstack_memory_used@@Base+0xa600>
  40dce8:	add	x21, x21, #0x1
  40dcec:	ldr	x1, [x19, #32]
  40dcf0:	ldr	x0, [x19, #16]
  40dcf4:	cmp	x21, x1
  40dcf8:	b.cc	40dcd0 <wcrtomb@plt+0xb2c0>  // b.lo, b.ul, b.last
  40dcfc:	bl	4027a0 <free@plt>
  40dd00:	b	40dcc0 <wcrtomb@plt+0xb2b0>
  40dd04:	mov	x21, #0x0                   	// #0
  40dd08:	b	40dcec <wcrtomb@plt+0xb2dc>
  40dd0c:	ldr	x0, [x19, #16]
  40dd10:	bl	40ec90 <wcrtomb@plt+0xc280>
  40dd14:	b	40dcc0 <wcrtomb@plt+0xb2b0>
  40dd18:	ldp	x21, x0, [x19]
  40dd1c:	bl	4027a0 <free@plt>
  40dd20:	mov	x0, x19
  40dd24:	mov	x19, x21
  40dd28:	bl	4027a0 <free@plt>
  40dd2c:	b	40dc90 <wcrtomb@plt+0xb280>
  40dd30:	stp	x29, x30, [sp, #-48]!
  40dd34:	adrp	x3, 40d000 <wcrtomb@plt+0xa5f0>
  40dd38:	add	x3, x3, #0xa90
  40dd3c:	mov	x29, sp
  40dd40:	stp	x21, x22, [sp, #32]
  40dd44:	mov	w21, w2
  40dd48:	mov	x22, x0
  40dd4c:	tst	x21, #0x10000000
  40dd50:	stp	x19, x20, [sp, #16]
  40dd54:	adrp	x20, 402000 <mbrtowc@plt-0x350>
  40dd58:	add	x20, x20, #0x7f0
  40dd5c:	mov	x19, x1
  40dd60:	csel	x20, x20, x3, ne  // ne = any
  40dd64:	blr	x20
  40dd68:	cmp	w0, #0x0
  40dd6c:	cset	w0, eq  // eq = none
  40dd70:	tbz	w21, #30, 40ddb4 <wcrtomb@plt+0xb3a4>
  40dd74:	ldp	x19, x20, [sp, #16]
  40dd78:	ldp	x21, x22, [sp, #32]
  40dd7c:	ldp	x29, x30, [sp], #48
  40dd80:	ret
  40dd84:	add	x19, x19, #0x1
  40dd88:	cmp	w1, #0x2f
  40dd8c:	b.ne	40ddb4 <wcrtomb@plt+0xb3a4>  // b.any
  40dd90:	ldrb	w1, [x19]
  40dd94:	cmp	w1, #0x2f
  40dd98:	b.eq	40ddb4 <wcrtomb@plt+0xb3a4>  // b.none
  40dd9c:	mov	w2, w21
  40dda0:	mov	x1, x19
  40dda4:	mov	x0, x22
  40dda8:	blr	x20
  40ddac:	cmp	w0, #0x0
  40ddb0:	cset	w0, eq  // eq = none
  40ddb4:	ldrb	w1, [x19]
  40ddb8:	cbz	w1, 40dd74 <wcrtomb@plt+0xb364>
  40ddbc:	cbz	w0, 40dd84 <wcrtomb@plt+0xb374>
  40ddc0:	b	40dd74 <wcrtomb@plt+0xb364>
  40ddc4:	stp	x29, x30, [sp, #-80]!
  40ddc8:	mov	x29, sp
  40ddcc:	stp	x19, x20, [sp, #16]
  40ddd0:	ldr	x19, [x0]
  40ddd4:	stp	x21, x22, [sp, #32]
  40ddd8:	stp	x23, x24, [sp, #48]
  40dddc:	str	x25, [sp, #64]
  40dde0:	cbz	x19, 40df24 <wcrtomb@plt+0xb514>
  40dde4:	mov	x22, x1
  40dde8:	mov	x20, #0x0                   	// #0
  40ddec:	ldr	w0, [x19, #8]
  40ddf0:	cbnz	w0, 40de7c <wcrtomb@plt+0xb46c>
  40ddf4:	cbnz	x20, 40de0c <wcrtomb@plt+0xb3fc>
  40ddf8:	mov	x0, x22
  40ddfc:	bl	4023c0 <strlen@plt>
  40de00:	add	x0, x0, #0x1
  40de04:	bl	41102c <wcrtomb@plt+0xe61c>
  40de08:	mov	x20, x0
  40de0c:	ldr	w23, [x19, #12]
  40de10:	mov	x21, x22
  40de14:	ldr	x24, [x19, #16]
  40de18:	and	w25, w23, #0x8
  40de1c:	and	w23, w23, #0x40000000
  40de20:	mov	x1, x21
  40de24:	mov	x0, x20
  40de28:	bl	402820 <strcpy@plt>
  40de2c:	mov	x1, x20
  40de30:	mov	x0, x24
  40de34:	bl	40e908 <wcrtomb@plt+0xbef8>
  40de38:	cbnz	x0, 40df1c <wcrtomb@plt+0xb50c>
  40de3c:	cbz	w25, 40de60 <wcrtomb@plt+0xb450>
  40de40:	mov	x0, x20
  40de44:	mov	w1, #0x2f                  	// #47
  40de48:	bl	4026a0 <strrchr@plt>
  40de4c:	cbz	x0, 40de60 <wcrtomb@plt+0xb450>
  40de50:	strb	wzr, [x0]
  40de54:	b	40de2c <wcrtomb@plt+0xb41c>
  40de58:	mov	x19, x0
  40de5c:	b	40ddec <wcrtomb@plt+0xb3dc>
  40de60:	cbnz	w23, 40de94 <wcrtomb@plt+0xb484>
  40de64:	mov	x0, x21
  40de68:	mov	w1, #0x2f                  	// #47
  40de6c:	bl	4027d0 <strchr@plt>
  40de70:	cbz	x0, 40de94 <wcrtomb@plt+0xb484>
  40de74:	add	x21, x0, #0x1
  40de78:	b	40de20 <wcrtomb@plt+0xb410>
  40de7c:	ldr	x21, [x19, #16]
  40de80:	mov	x23, #0x0                   	// #0
  40de84:	ldr	x24, [x19, #32]
  40de88:	add	x21, x21, #0x8
  40de8c:	cmp	x24, x23
  40de90:	b.ne	40ded0 <wcrtomb@plt+0xb4c0>  // b.any
  40de94:	ldr	x0, [x19]
  40de98:	cbnz	x0, 40de58 <wcrtomb@plt+0xb448>
  40de9c:	mov	w21, #0x1                   	// #1
  40dea0:	mov	x0, x20
  40dea4:	bl	4027a0 <free@plt>
  40dea8:	ldr	w0, [x19, #12]
  40deac:	eor	x0, x0, #0x20000000
  40deb0:	ubfx	x0, x0, #29, #1
  40deb4:	eor	w0, w21, w0
  40deb8:	ldp	x19, x20, [sp, #16]
  40debc:	ldp	x21, x22, [sp, #32]
  40dec0:	ldp	x23, x24, [sp, #48]
  40dec4:	ldr	x25, [sp, #64]
  40dec8:	ldp	x29, x30, [sp], #80
  40decc:	ret
  40ded0:	ldur	w2, [x21, #-8]
  40ded4:	tbz	w2, #27, 40df08 <wcrtomb@plt+0xb4f8>
  40ded8:	mov	x1, x22
  40dedc:	mov	x0, x21
  40dee0:	mov	w4, #0x0                   	// #0
  40dee4:	mov	x3, #0x0                   	// #0
  40dee8:	mov	x2, #0x0                   	// #0
  40deec:	bl	41dd44 <_obstack_memory_used@@Base+0xa644>
  40def0:	cmp	w0, #0x0
  40def4:	cset	w0, eq  // eq = none
  40def8:	add	x21, x21, #0x48
  40defc:	cbnz	w0, 40df1c <wcrtomb@plt+0xb50c>
  40df00:	add	x23, x23, #0x1
  40df04:	b	40de8c <wcrtomb@plt+0xb47c>
  40df08:	ldr	x0, [x21]
  40df0c:	mov	x1, x22
  40df10:	bl	40dd30 <wcrtomb@plt+0xb320>
  40df14:	and	w0, w0, #0xff
  40df18:	b	40def8 <wcrtomb@plt+0xb4e8>
  40df1c:	mov	w21, #0x0                   	// #0
  40df20:	b	40dea0 <wcrtomb@plt+0xb490>
  40df24:	mov	w0, #0x0                   	// #0
  40df28:	b	40deb8 <wcrtomb@plt+0xb4a8>
  40df2c:	stp	x29, x30, [sp, #-64]!
  40df30:	tst	w2, #0x18000000
  40df34:	mov	x29, sp
  40df38:	stp	x19, x20, [sp, #16]
  40df3c:	mov	x20, x1
  40df40:	mov	w19, w2
  40df44:	stp	x21, x22, [sp, #32]
  40df48:	mov	x21, x0
  40df4c:	stp	x23, x24, [sp, #48]
  40df50:	ldr	x8, [x0]
  40df54:	b.eq	40e0cc <wcrtomb@plt+0xb6bc>  // b.none
  40df58:	mov	w1, w2
  40df5c:	mov	x0, x20
  40df60:	bl	40db94 <wcrtomb@plt+0xb184>
  40df64:	tst	w0, #0xff
  40df68:	b.eq	40e0cc <wcrtomb@plt+0xb6bc>  // b.none
  40df6c:	cbz	x8, 40df88 <wcrtomb@plt+0xb578>
  40df70:	ldr	w0, [x8, #8]
  40df74:	cmp	w0, #0x1
  40df78:	b.ne	40df88 <wcrtomb@plt+0xb578>  // b.any
  40df7c:	ldr	w0, [x8, #12]
  40df80:	eor	w0, w19, w0
  40df84:	tbz	w0, #29, 40dfa4 <wcrtomb@plt+0xb594>
  40df88:	mov	x0, #0x28                  	// #40
  40df8c:	bl	4111a0 <wcrtomb@plt+0xe790>
  40df90:	mov	w1, #0x1                   	// #1
  40df94:	stp	w1, w19, [x0, #8]
  40df98:	ldr	x1, [x21]
  40df9c:	str	x1, [x0]
  40dfa0:	str	x0, [x21]
  40dfa4:	ldr	x23, [x21]
  40dfa8:	add	x22, x23, #0x10
  40dfac:	ldp	x0, x1, [x22, #8]
  40dfb0:	cmp	x1, x0
  40dfb4:	b.ne	40dfcc <wcrtomb@plt+0xb5bc>  // b.any
  40dfb8:	ldr	x0, [x23, #16]
  40dfbc:	add	x1, x23, #0x18
  40dfc0:	mov	x2, #0x48                  	// #72
  40dfc4:	bl	4110fc <wcrtomb@plt+0xe6ec>
  40dfc8:	str	x0, [x23, #16]
  40dfcc:	ldr	x0, [x22, #16]
  40dfd0:	ldr	x1, [x23, #16]
  40dfd4:	add	x2, x0, #0x1
  40dfd8:	str	x2, [x22, #16]
  40dfdc:	mov	x2, #0x48                  	// #72
  40dfe0:	mul	x0, x0, x2
  40dfe4:	add	x23, x1, x0
  40dfe8:	str	w19, [x1, x0]
  40dfec:	tbz	w19, #27, 40e0a8 <wcrtomb@plt+0xb698>
  40dff0:	asr	w21, w19, #3
  40dff4:	mov	w0, #0x9                   	// #9
  40dff8:	and	w21, w21, #0x2
  40dffc:	orr	w21, w21, w0
  40e000:	tbz	w19, #3, 40e08c <wcrtomb@plt+0xb67c>
  40e004:	mov	x0, x20
  40e008:	bl	4023c0 <strlen@plt>
  40e00c:	mov	x19, x0
  40e010:	cbnz	x0, 40e034 <wcrtomb@plt+0xb624>
  40e014:	ldr	x0, [x22, #16]
  40e018:	sub	x0, x0, #0x1
  40e01c:	str	x0, [x22, #16]
  40e020:	ldp	x19, x20, [sp, #16]
  40e024:	ldp	x21, x22, [sp, #32]
  40e028:	ldp	x23, x24, [sp, #48]
  40e02c:	ldp	x29, x30, [sp], #64
  40e030:	ret
  40e034:	sub	x0, x0, #0x1
  40e038:	ldrb	w1, [x20, x0]
  40e03c:	cmp	w1, #0x2f
  40e040:	b.eq	40e00c <wcrtomb@plt+0xb5fc>  // b.none
  40e044:	add	x0, x19, #0x7
  40e048:	bl	41102c <wcrtomb@plt+0xe61c>
  40e04c:	mov	x2, x19
  40e050:	mov	x24, x0
  40e054:	mov	x1, x20
  40e058:	bl	402360 <memcpy@plt>
  40e05c:	add	x0, x24, x19
  40e060:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40e064:	add	x1, x1, #0x9d2
  40e068:	bl	402820 <strcpy@plt>
  40e06c:	mov	w2, w21
  40e070:	mov	x1, x24
  40e074:	add	x0, x23, #0x8
  40e078:	bl	41db74 <_obstack_memory_used@@Base+0xa474>
  40e07c:	mov	w19, w0
  40e080:	mov	x0, x24
  40e084:	bl	4027a0 <free@plt>
  40e088:	b	40e0a0 <wcrtomb@plt+0xb690>
  40e08c:	mov	w2, w21
  40e090:	mov	x1, x20
  40e094:	add	x0, x23, #0x8
  40e098:	bl	41db74 <_obstack_memory_used@@Base+0xa474>
  40e09c:	mov	w19, w0
  40e0a0:	cbz	w19, 40e020 <wcrtomb@plt+0xb610>
  40e0a4:	b	40e014 <wcrtomb@plt+0xb604>
  40e0a8:	tbz	w19, #26, 40e0c4 <wcrtomb@plt+0xb6b4>
  40e0ac:	mov	x0, x20
  40e0b0:	bl	4111d8 <wcrtomb@plt+0xe7c8>
  40e0b4:	mov	x20, x0
  40e0b8:	mov	x1, x0
  40e0bc:	mov	x0, x21
  40e0c0:	bl	40db60 <wcrtomb@plt+0xb150>
  40e0c4:	str	x20, [x23, #8]
  40e0c8:	b	40e020 <wcrtomb@plt+0xb610>
  40e0cc:	cbz	x8, 40e0ec <wcrtomb@plt+0xb6dc>
  40e0d0:	ldr	w0, [x8, #8]
  40e0d4:	cbnz	w0, 40e0ec <wcrtomb@plt+0xb6dc>
  40e0d8:	ldr	w0, [x8, #12]
  40e0dc:	eor	w0, w19, w0
  40e0e0:	and	w0, w0, #0x7ffffff8
  40e0e4:	and	w0, w0, #0xe000001f
  40e0e8:	cbz	w0, 40e134 <wcrtomb@plt+0xb724>
  40e0ec:	mov	x0, #0x28                  	// #40
  40e0f0:	bl	4111a0 <wcrtomb@plt+0xe790>
  40e0f4:	stp	wzr, w19, [x0, #8]
  40e0f8:	mov	x22, x0
  40e0fc:	tbnz	w19, #4, 40e184 <wcrtomb@plt+0xb774>
  40e100:	adrp	x2, 40d000 <wcrtomb@plt+0xa5f0>
  40e104:	adrp	x3, 40d000 <wcrtomb@plt+0xa5f0>
  40e108:	add	x2, x2, #0x9f4
  40e10c:	add	x3, x3, #0x9d8
  40e110:	adrp	x4, 40d000 <wcrtomb@plt+0xa5f0>
  40e114:	mov	x1, #0x0                   	// #0
  40e118:	add	x4, x4, #0x9b8
  40e11c:	mov	x0, #0x0                   	// #0
  40e120:	bl	40eb30 <wcrtomb@plt+0xc120>
  40e124:	str	x0, [x22, #16]
  40e128:	ldr	x0, [x21]
  40e12c:	str	x0, [x22]
  40e130:	str	x22, [x21]
  40e134:	and	w19, w19, #0x1ffffffe
  40e138:	mov	x0, x20
  40e13c:	and	w19, w19, #0xf0000003
  40e140:	ldr	x21, [x21]
  40e144:	bl	4111d8 <wcrtomb@plt+0xe7c8>
  40e148:	mov	x20, x0
  40e14c:	mov	w0, #0x10000000            	// #268435456
  40e150:	cmp	w19, w0
  40e154:	b.eq	40e198 <wcrtomb@plt+0xb788>  // b.none
  40e158:	ldr	x0, [x21, #16]
  40e15c:	mov	x1, x20
  40e160:	bl	40efe4 <wcrtomb@plt+0xc5d4>
  40e164:	cmp	x20, x0
  40e168:	b.eq	40e020 <wcrtomb@plt+0xb610>  // b.none
  40e16c:	mov	x0, x20
  40e170:	ldp	x19, x20, [sp, #16]
  40e174:	ldp	x21, x22, [sp, #32]
  40e178:	ldp	x23, x24, [sp, #48]
  40e17c:	ldp	x29, x30, [sp], #64
  40e180:	b	4027a0 <free@plt>
  40e184:	adrp	x2, 40d000 <wcrtomb@plt+0xa5f0>
  40e188:	adrp	x3, 40d000 <wcrtomb@plt+0xa5f0>
  40e18c:	add	x2, x2, #0x9f8
  40e190:	add	x3, x3, #0x9bc
  40e194:	b	40e110 <wcrtomb@plt+0xb700>
  40e198:	mov	x0, x20
  40e19c:	mov	x2, x20
  40e1a0:	ldrb	w1, [x0]
  40e1a4:	cmp	w1, #0x5c
  40e1a8:	b.ne	40e1cc <wcrtomb@plt+0xb7bc>  // b.any
  40e1ac:	ldrb	w1, [x0, #1]
  40e1b0:	cmp	w1, #0x0
  40e1b4:	cset	w1, ne  // ne = any
  40e1b8:	add	x0, x0, w1, sxtw
  40e1bc:	ldrb	w1, [x0], #1
  40e1c0:	strb	w1, [x2], #1
  40e1c4:	cbnz	w1, 40e1a0 <wcrtomb@plt+0xb790>
  40e1c8:	b	40e158 <wcrtomb@plt+0xb748>
  40e1cc:	mov	w1, #0x0                   	// #0
  40e1d0:	b	40e1b8 <wcrtomb@plt+0xb7a8>
  40e1d4:	stp	x29, x30, [sp, #-128]!
  40e1d8:	mov	x29, sp
  40e1dc:	stp	x21, x22, [sp, #32]
  40e1e0:	mov	x21, x2
  40e1e4:	stp	x23, x24, [sp, #48]
  40e1e8:	mov	x23, x1
  40e1ec:	and	w24, w4, #0xff
  40e1f0:	stp	x25, x26, [sp, #64]
  40e1f4:	mov	w26, w3
  40e1f8:	stp	x27, x28, [sp, #80]
  40e1fc:	mov	x27, x5
  40e200:	stp	x19, x20, [sp, #16]
  40e204:	mov	x20, #0x0                   	// #0
  40e208:	mov	x19, #0x0                   	// #0
  40e20c:	str	x0, [sp, #104]
  40e210:	str	xzr, [sp, #120]
  40e214:	mov	x0, x21
  40e218:	add	x28, x20, #0x1
  40e21c:	bl	402670 <getc_unlocked@plt>
  40e220:	mov	w22, w0
  40e224:	cmn	w0, #0x1
  40e228:	b.ne	40e2bc <wcrtomb@plt+0xb8ac>  // b.any
  40e22c:	mov	x0, x21
  40e230:	bl	402430 <ferror_unlocked@plt>
  40e234:	mov	w21, w0
  40e238:	bl	402980 <__errno_location@plt>
  40e23c:	mov	x22, x0
  40e240:	cbz	w21, 40e248 <wcrtomb@plt+0xb838>
  40e244:	ldr	w21, [x0]
  40e248:	mov	x0, x19
  40e24c:	mov	x1, x28
  40e250:	bl	41108c <wcrtomb@plt+0xe67c>
  40e254:	strb	w24, [x0, x20]
  40e258:	mov	x19, x0
  40e25c:	cbz	x20, 40e2e4 <wcrtomb@plt+0xb8d4>
  40e260:	add	x0, x0, x20
  40e264:	ldurb	w0, [x0, #-1]
  40e268:	cmp	w0, w24
  40e26c:	cset	w0, ne  // ne = any
  40e270:	add	x20, x20, w0, sxtw
  40e274:	ubfiz	x28, x24, #1, #8
  40e278:	add	x20, x19, x20
  40e27c:	mov	x25, x19
  40e280:	mov	x1, x19
  40e284:	mov	x0, x23
  40e288:	bl	40db60 <wcrtomb@plt+0xb150>
  40e28c:	cmp	x25, x20
  40e290:	b.cc	40e2ec <wcrtomb@plt+0xb8dc>  // b.lo, b.ul, b.last
  40e294:	ldp	x19, x20, [sp, #16]
  40e298:	cmp	w21, #0x0
  40e29c:	ldp	x23, x24, [sp, #48]
  40e2a0:	csetm	w0, ne  // ne = any
  40e2a4:	ldp	x25, x26, [sp, #64]
  40e2a8:	ldp	x27, x28, [sp, #80]
  40e2ac:	str	w21, [x22]
  40e2b0:	ldp	x21, x22, [sp, #32]
  40e2b4:	ldp	x29, x30, [sp], #128
  40e2b8:	ret
  40e2bc:	ldr	x0, [sp, #120]
  40e2c0:	cmp	x0, x20
  40e2c4:	b.ne	40e2d8 <wcrtomb@plt+0xb8c8>  // b.any
  40e2c8:	mov	x0, x19
  40e2cc:	add	x1, sp, #0x78
  40e2d0:	bl	411164 <wcrtomb@plt+0xe754>
  40e2d4:	mov	x19, x0
  40e2d8:	strb	w22, [x19, x20]
  40e2dc:	mov	x20, x28
  40e2e0:	b	40e214 <wcrtomb@plt+0xb804>
  40e2e4:	mov	w0, #0x0                   	// #0
  40e2e8:	b	40e270 <wcrtomb@plt+0xb860>
  40e2ec:	ldrb	w0, [x25]
  40e2f0:	cmp	w0, w24
  40e2f4:	b.ne	40e34c <wcrtomb@plt+0xb93c>  // b.any
  40e2f8:	bl	402790 <__ctype_b_loc@plt>
  40e2fc:	ldr	x1, [x0]
  40e300:	ldrh	w0, [x1, x28]
  40e304:	tbz	w0, #13, 40e328 <wcrtomb@plt+0xb918>
  40e308:	mov	x0, x25
  40e30c:	cmp	x19, x0
  40e310:	b.eq	40e348 <wcrtomb@plt+0xb938>  // b.none
  40e314:	ldurb	w2, [x0, #-1]
  40e318:	ldrh	w2, [x1, x2, lsl #1]
  40e31c:	tbz	w2, #13, 40e32c <wcrtomb@plt+0xb91c>
  40e320:	sub	x0, x0, #0x1
  40e324:	b	40e30c <wcrtomb@plt+0xb8fc>
  40e328:	mov	x0, x25
  40e32c:	ldr	x4, [sp, #104]
  40e330:	strb	wzr, [x0]
  40e334:	mov	x3, x27
  40e338:	mov	w2, w26
  40e33c:	mov	x1, x19
  40e340:	mov	x0, x23
  40e344:	blr	x4
  40e348:	add	x19, x25, #0x1
  40e34c:	add	x25, x25, #0x1
  40e350:	b	40e28c <wcrtomb@plt+0xb87c>
  40e354:	stp	x29, x30, [sp, #-80]!
  40e358:	mov	x29, sp
  40e35c:	stp	x19, x20, [sp, #16]
  40e360:	mov	x20, x1
  40e364:	stp	x21, x22, [sp, #32]
  40e368:	mov	w21, w3
  40e36c:	str	x23, [sp, #48]
  40e370:	and	w23, w4, #0xff
  40e374:	str	x0, [sp, #72]
  40e378:	mov	x0, x2
  40e37c:	ldrb	w1, [x2]
  40e380:	cmp	w1, #0x2d
  40e384:	b.ne	40e3ec <wcrtomb@plt+0xb9dc>  // b.any
  40e388:	ldrb	w1, [x2, #1]
  40e38c:	cbnz	w1, 40e3ec <wcrtomb@plt+0xb9dc>
  40e390:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40e394:	mov	w22, #0x1                   	// #1
  40e398:	ldr	x19, [x0, #1136]
  40e39c:	mov	x1, x20
  40e3a0:	add	x5, sp, #0x48
  40e3a4:	mov	w4, w23
  40e3a8:	mov	w3, w21
  40e3ac:	mov	x2, x19
  40e3b0:	adrp	x0, 40d000 <wcrtomb@plt+0xa5f0>
  40e3b4:	add	x0, x0, #0x9ac
  40e3b8:	bl	40e1d4 <wcrtomb@plt+0xb7c4>
  40e3bc:	mov	w20, w0
  40e3c0:	cbnz	w22, 40e3d4 <wcrtomb@plt+0xb9c4>
  40e3c4:	mov	x0, x19
  40e3c8:	bl	4024c0 <fclose@plt>
  40e3cc:	cbz	w0, 40e3d4 <wcrtomb@plt+0xb9c4>
  40e3d0:	mov	w20, #0xffffffff            	// #-1
  40e3d4:	mov	w0, w20
  40e3d8:	ldp	x19, x20, [sp, #16]
  40e3dc:	ldp	x21, x22, [sp, #32]
  40e3e0:	ldr	x23, [sp, #48]
  40e3e4:	ldp	x29, x30, [sp], #80
  40e3e8:	ret
  40e3ec:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  40e3f0:	add	x1, x1, #0x9ff
  40e3f4:	bl	4024f0 <fopen@plt>
  40e3f8:	mov	x19, x0
  40e3fc:	cbz	x0, 40e3d0 <wcrtomb@plt+0xb9c0>
  40e400:	mov	w22, #0x0                   	// #0
  40e404:	b	40e39c <wcrtomb@plt+0xb98c>
  40e408:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  40e40c:	ldr	x0, [x0, #1144]
  40e410:	ret
  40e414:	ror	x2, x0, #3
  40e418:	udiv	x0, x2, x1
  40e41c:	msub	x0, x0, x1, x2
  40e420:	ret
  40e424:	cmp	x1, x0
  40e428:	cset	w0, eq  // eq = none
  40e42c:	ret
  40e430:	ldrb	w2, [x1, #16]
  40e434:	cbnz	w2, 40e458 <wcrtomb@plt+0xba48>
  40e438:	ucvtf	s0, x0
  40e43c:	ldr	s1, [x1, #8]
  40e440:	mov	w0, #0x5f800000            	// #1602224128
  40e444:	fdiv	s0, s0, s1
  40e448:	fmov	s1, w0
  40e44c:	fcmpe	s0, s1
  40e450:	b.ge	40e470 <wcrtomb@plt+0xba60>  // b.tcont
  40e454:	fcvtzu	x0, s0
  40e458:	cmp	x0, #0xa
  40e45c:	mov	x1, #0xa                   	// #10
  40e460:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40e464:	orr	x0, x0, #0x1
  40e468:	cmn	x0, #0x1
  40e46c:	b.ne	40e4a0 <wcrtomb@plt+0xba90>  // b.any
  40e470:	mov	x0, #0x0                   	// #0
  40e474:	b	40e4c0 <wcrtomb@plt+0xbab0>
  40e478:	add	x2, x1, #0x1
  40e47c:	add	x1, x1, #0x2
  40e480:	add	x3, x3, x2, lsl #2
  40e484:	udiv	x2, x0, x1
  40e488:	cmp	x0, x3
  40e48c:	msub	x2, x2, x1, x0
  40e490:	b.ls	40e4ac <wcrtomb@plt+0xba9c>  // b.plast
  40e494:	cbnz	x2, 40e478 <wcrtomb@plt+0xba68>
  40e498:	add	x0, x0, #0x2
  40e49c:	b	40e468 <wcrtomb@plt+0xba58>
  40e4a0:	mov	x3, #0x9                   	// #9
  40e4a4:	mov	x1, #0x3                   	// #3
  40e4a8:	b	40e484 <wcrtomb@plt+0xba74>
  40e4ac:	cbz	x2, 40e498 <wcrtomb@plt+0xba88>
  40e4b0:	cmp	xzr, x0, lsr #61
  40e4b4:	cset	x1, ne  // ne = any
  40e4b8:	tbnz	x0, #60, 40e470 <wcrtomb@plt+0xba60>
  40e4bc:	cbnz	x1, 40e470 <wcrtomb@plt+0xba60>
  40e4c0:	ret
  40e4c4:	stp	x29, x30, [sp, #-32]!
  40e4c8:	mov	x29, sp
  40e4cc:	str	x19, [sp, #16]
  40e4d0:	mov	x19, x0
  40e4d4:	mov	x0, x1
  40e4d8:	ldr	x1, [x19, #16]
  40e4dc:	ldr	x2, [x19, #48]
  40e4e0:	blr	x2
  40e4e4:	ldr	x1, [x19, #16]
  40e4e8:	cmp	x1, x0
  40e4ec:	b.hi	40e4f4 <wcrtomb@plt+0xbae4>  // b.pmore
  40e4f0:	bl	4026f0 <abort@plt>
  40e4f4:	ldr	x1, [x19]
  40e4f8:	ldr	x19, [sp, #16]
  40e4fc:	add	x0, x1, x0, lsl #4
  40e500:	ldp	x29, x30, [sp], #32
  40e504:	ret
  40e508:	stp	x29, x30, [sp, #-64]!
  40e50c:	mov	x29, sp
  40e510:	stp	x21, x22, [sp, #32]
  40e514:	mov	x22, x2
  40e518:	mov	x21, x1
  40e51c:	stp	x19, x20, [sp, #16]
  40e520:	mov	x20, x0
  40e524:	str	x23, [sp, #48]
  40e528:	and	w23, w3, #0xff
  40e52c:	bl	40e4c4 <wcrtomb@plt+0xbab4>
  40e530:	str	x0, [x22]
  40e534:	ldr	x1, [x0]
  40e538:	cbnz	x1, 40e554 <wcrtomb@plt+0xbb44>
  40e53c:	mov	x0, #0x0                   	// #0
  40e540:	ldp	x19, x20, [sp, #16]
  40e544:	ldp	x21, x22, [sp, #32]
  40e548:	ldr	x23, [sp, #48]
  40e54c:	ldp	x29, x30, [sp], #64
  40e550:	ret
  40e554:	mov	x19, x0
  40e558:	cmp	x1, x21
  40e55c:	b.eq	40e574 <wcrtomb@plt+0xbb64>  // b.none
  40e560:	ldr	x2, [x20, #56]
  40e564:	mov	x0, x21
  40e568:	blr	x2
  40e56c:	tst	w0, #0xff
  40e570:	b.eq	40e5c0 <wcrtomb@plt+0xbbb0>  // b.none
  40e574:	ldr	x0, [x19]
  40e578:	cbz	w23, 40e540 <wcrtomb@plt+0xbb30>
  40e57c:	ldr	x1, [x19, #8]
  40e580:	cbz	x1, 40e5a0 <wcrtomb@plt+0xbb90>
  40e584:	ldp	x2, x3, [x1]
  40e588:	stp	x2, x3, [x19]
  40e58c:	str	xzr, [x1]
  40e590:	ldr	x2, [x20, #72]
  40e594:	str	x2, [x1, #8]
  40e598:	str	x1, [x20, #72]
  40e59c:	b	40e540 <wcrtomb@plt+0xbb30>
  40e5a0:	str	xzr, [x19]
  40e5a4:	b	40e540 <wcrtomb@plt+0xbb30>
  40e5a8:	ldr	x2, [x20, #56]
  40e5ac:	mov	x0, x21
  40e5b0:	blr	x2
  40e5b4:	tst	w0, #0xff
  40e5b8:	b.ne	40e5d4 <wcrtomb@plt+0xbbc4>  // b.any
  40e5bc:	ldr	x19, [x19, #8]
  40e5c0:	ldr	x0, [x19, #8]
  40e5c4:	cbz	x0, 40e53c <wcrtomb@plt+0xbb2c>
  40e5c8:	ldr	x1, [x0]
  40e5cc:	cmp	x1, x21
  40e5d0:	b.ne	40e5a8 <wcrtomb@plt+0xbb98>  // b.any
  40e5d4:	ldr	x1, [x19, #8]
  40e5d8:	ldr	x0, [x1]
  40e5dc:	cbz	w23, 40e540 <wcrtomb@plt+0xbb30>
  40e5e0:	ldr	x2, [x1, #8]
  40e5e4:	str	x2, [x19, #8]
  40e5e8:	b	40e58c <wcrtomb@plt+0xbb7c>
  40e5ec:	ldr	x1, [x0]
  40e5f0:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  40e5f4:	add	x2, x2, #0xa48
  40e5f8:	cmp	x1, x2
  40e5fc:	b.eq	40e67c <wcrtomb@plt+0xbc6c>  // b.none
  40e600:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40e604:	ldr	s1, [x1, #8]
  40e608:	ldr	s2, [x3, #2628]
  40e60c:	fcmpe	s1, s2
  40e610:	b.le	40e670 <wcrtomb@plt+0xbc60>
  40e614:	mov	w3, #0x6666                	// #26214
  40e618:	movk	w3, #0x3f66, lsl #16
  40e61c:	fmov	s0, w3
  40e620:	fcmpe	s1, s0
  40e624:	b.pl	40e670 <wcrtomb@plt+0xbc60>  // b.nfrst
  40e628:	mov	w3, #0xcccd                	// #52429
  40e62c:	ldr	s3, [x1, #12]
  40e630:	movk	w3, #0x3f8c, lsl #16
  40e634:	fmov	s0, w3
  40e638:	fcmpe	s3, s0
  40e63c:	b.le	40e670 <wcrtomb@plt+0xbc60>
  40e640:	ldr	s0, [x1]
  40e644:	fcmpe	s0, #0.0
  40e648:	b.lt	40e670 <wcrtomb@plt+0xbc60>  // b.tstop
  40e64c:	fadd	s0, s0, s2
  40e650:	ldr	s2, [x1, #4]
  40e654:	fcmpe	s0, s2
  40e658:	b.pl	40e670 <wcrtomb@plt+0xbc60>  // b.nfrst
  40e65c:	fmov	s3, #1.000000000000000000e+00
  40e660:	fcmpe	s2, s3
  40e664:	b.hi	40e670 <wcrtomb@plt+0xbc60>  // b.pmore
  40e668:	fcmpe	s1, s0
  40e66c:	b.gt	40e67c <wcrtomb@plt+0xbc6c>
  40e670:	str	x2, [x0]
  40e674:	mov	w0, #0x0                   	// #0
  40e678:	ret
  40e67c:	mov	w0, #0x1                   	// #1
  40e680:	b	40e678 <wcrtomb@plt+0xbc68>
  40e684:	stp	x29, x30, [sp, #-64]!
  40e688:	mov	x29, sp
  40e68c:	stp	x21, x22, [sp, #32]
  40e690:	mov	x22, x1
  40e694:	ldr	x21, [x1]
  40e698:	stp	x19, x20, [sp, #16]
  40e69c:	mov	x19, x0
  40e6a0:	stp	x23, x24, [sp, #48]
  40e6a4:	and	w23, w2, #0xff
  40e6a8:	ldr	x0, [x22, #8]
  40e6ac:	cmp	x0, x21
  40e6b0:	b.hi	40e6bc <wcrtomb@plt+0xbcac>  // b.pmore
  40e6b4:	mov	w23, #0x1                   	// #1
  40e6b8:	b	40e784 <wcrtomb@plt+0xbd74>
  40e6bc:	ldr	x0, [x21]
  40e6c0:	cbz	x0, 40e71c <wcrtomb@plt+0xbd0c>
  40e6c4:	ldr	x20, [x21, #8]
  40e6c8:	cbnz	x20, 40e724 <wcrtomb@plt+0xbd14>
  40e6cc:	str	xzr, [x21, #8]
  40e6d0:	ldr	x24, [x21]
  40e6d4:	cbnz	w23, 40e71c <wcrtomb@plt+0xbd0c>
  40e6d8:	mov	x1, x24
  40e6dc:	mov	x0, x19
  40e6e0:	bl	40e4c4 <wcrtomb@plt+0xbab4>
  40e6e4:	mov	x20, x0
  40e6e8:	ldr	x0, [x0]
  40e6ec:	cbz	x0, 40e79c <wcrtomb@plt+0xbd8c>
  40e6f0:	ldr	x0, [x19, #72]
  40e6f4:	cbz	x0, 40e778 <wcrtomb@plt+0xbd68>
  40e6f8:	ldr	x1, [x0, #8]
  40e6fc:	str	x1, [x19, #72]
  40e700:	ldr	x1, [x20, #8]
  40e704:	stp	x24, x1, [x0]
  40e708:	str	x0, [x20, #8]
  40e70c:	ldr	x0, [x22, #24]
  40e710:	str	xzr, [x21]
  40e714:	sub	x0, x0, #0x1
  40e718:	str	x0, [x22, #24]
  40e71c:	add	x21, x21, #0x10
  40e720:	b	40e6a8 <wcrtomb@plt+0xbc98>
  40e724:	ldr	x24, [x20]
  40e728:	mov	x0, x19
  40e72c:	mov	x1, x24
  40e730:	bl	40e4c4 <wcrtomb@plt+0xbab4>
  40e734:	ldr	x2, [x0]
  40e738:	ldr	x1, [x20, #8]
  40e73c:	cbz	x2, 40e754 <wcrtomb@plt+0xbd44>
  40e740:	ldr	x2, [x0, #8]
  40e744:	str	x2, [x20, #8]
  40e748:	str	x20, [x0, #8]
  40e74c:	mov	x20, x1
  40e750:	b	40e6c8 <wcrtomb@plt+0xbcb8>
  40e754:	str	x24, [x0]
  40e758:	ldr	x0, [x19, #24]
  40e75c:	add	x0, x0, #0x1
  40e760:	str	x0, [x19, #24]
  40e764:	str	xzr, [x20]
  40e768:	ldr	x0, [x19, #72]
  40e76c:	str	x0, [x20, #8]
  40e770:	str	x20, [x19, #72]
  40e774:	b	40e74c <wcrtomb@plt+0xbd3c>
  40e778:	mov	x0, #0x10                  	// #16
  40e77c:	bl	402520 <malloc@plt>
  40e780:	cbnz	x0, 40e700 <wcrtomb@plt+0xbcf0>
  40e784:	mov	w0, w23
  40e788:	ldp	x19, x20, [sp, #16]
  40e78c:	ldp	x21, x22, [sp, #32]
  40e790:	ldp	x23, x24, [sp, #48]
  40e794:	ldp	x29, x30, [sp], #64
  40e798:	ret
  40e79c:	ldr	x0, [x19, #24]
  40e7a0:	str	x24, [x20]
  40e7a4:	add	x0, x0, #0x1
  40e7a8:	str	x0, [x19, #24]
  40e7ac:	b	40e70c <wcrtomb@plt+0xbcfc>
  40e7b0:	ldr	x0, [x0, #16]
  40e7b4:	ret
  40e7b8:	ldr	x0, [x0, #24]
  40e7bc:	ret
  40e7c0:	ldr	x0, [x0, #32]
  40e7c4:	ret
  40e7c8:	ldp	x1, x4, [x0]
  40e7cc:	mov	x0, #0x0                   	// #0
  40e7d0:	cmp	x4, x1
  40e7d4:	b.hi	40e7dc <wcrtomb@plt+0xbdcc>  // b.pmore
  40e7d8:	ret
  40e7dc:	ldr	x2, [x1]
  40e7e0:	cbz	x2, 40e804 <wcrtomb@plt+0xbdf4>
  40e7e4:	mov	x3, x1
  40e7e8:	mov	x2, #0x1                   	// #1
  40e7ec:	b	40e7f4 <wcrtomb@plt+0xbde4>
  40e7f0:	add	x2, x2, #0x1
  40e7f4:	ldr	x3, [x3, #8]
  40e7f8:	cbnz	x3, 40e7f0 <wcrtomb@plt+0xbde0>
  40e7fc:	cmp	x0, x2
  40e800:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40e804:	add	x1, x1, #0x10
  40e808:	b	40e7d0 <wcrtomb@plt+0xbdc0>
  40e80c:	ldp	x2, x5, [x0]
  40e810:	mov	x1, #0x0                   	// #0
  40e814:	mov	x3, #0x0                   	// #0
  40e818:	cmp	x5, x2
  40e81c:	b.hi	40e83c <wcrtomb@plt+0xbe2c>  // b.pmore
  40e820:	ldr	x2, [x0, #24]
  40e824:	cmp	x2, x3
  40e828:	b.ne	40e868 <wcrtomb@plt+0xbe58>  // b.any
  40e82c:	ldr	x0, [x0, #32]
  40e830:	cmp	x0, x1
  40e834:	cset	w0, eq  // eq = none
  40e838:	ret
  40e83c:	ldr	x4, [x2]
  40e840:	cbz	x4, 40e858 <wcrtomb@plt+0xbe48>
  40e844:	add	x3, x3, #0x1
  40e848:	add	x1, x1, #0x1
  40e84c:	mov	x4, x2
  40e850:	ldr	x4, [x4, #8]
  40e854:	cbnz	x4, 40e860 <wcrtomb@plt+0xbe50>
  40e858:	add	x2, x2, #0x10
  40e85c:	b	40e818 <wcrtomb@plt+0xbe08>
  40e860:	add	x1, x1, #0x1
  40e864:	b	40e850 <wcrtomb@plt+0xbe40>
  40e868:	mov	w0, #0x0                   	// #0
  40e86c:	b	40e838 <wcrtomb@plt+0xbe28>
  40e870:	stp	x29, x30, [sp, #-48]!
  40e874:	mov	x5, x0
  40e878:	mov	x29, sp
  40e87c:	stp	x19, x20, [sp, #16]
  40e880:	mov	x19, x1
  40e884:	stp	x21, x22, [sp, #32]
  40e888:	ldp	x20, x22, [x0, #16]
  40e88c:	bl	40e7c8 <wcrtomb@plt+0xbdb8>
  40e890:	ldr	x2, [x5, #32]
  40e894:	mov	x21, x0
  40e898:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40e89c:	mov	x0, x19
  40e8a0:	add	x1, x1, #0x9d9
  40e8a4:	bl	4029d0 <fprintf@plt>
  40e8a8:	mov	x2, x20
  40e8ac:	mov	x0, x19
  40e8b0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40e8b4:	add	x1, x1, #0x9f1
  40e8b8:	bl	4029d0 <fprintf@plt>
  40e8bc:	ucvtf	d1, x22
  40e8c0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40e8c4:	fmov	d0, x0
  40e8c8:	mov	x2, x22
  40e8cc:	mov	x0, x19
  40e8d0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40e8d4:	add	x1, x1, #0xa09
  40e8d8:	fmul	d1, d1, d0
  40e8dc:	ucvtf	d0, x20
  40e8e0:	fdiv	d0, d1, d0
  40e8e4:	bl	4029d0 <fprintf@plt>
  40e8e8:	mov	x2, x21
  40e8ec:	mov	x0, x19
  40e8f0:	ldp	x19, x20, [sp, #16]
  40e8f4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40e8f8:	ldp	x21, x22, [sp, #32]
  40e8fc:	add	x1, x1, #0xa2a
  40e900:	ldp	x29, x30, [sp], #48
  40e904:	b	4029d0 <fprintf@plt>
  40e908:	stp	x29, x30, [sp, #-48]!
  40e90c:	mov	x29, sp
  40e910:	stp	x19, x20, [sp, #16]
  40e914:	mov	x20, x1
  40e918:	str	x21, [sp, #32]
  40e91c:	mov	x21, x0
  40e920:	bl	40e4c4 <wcrtomb@plt+0xbab4>
  40e924:	mov	x19, x0
  40e928:	ldr	x0, [x0]
  40e92c:	cbz	x0, 40e96c <wcrtomb@plt+0xbf5c>
  40e930:	ldr	x1, [x19]
  40e934:	cmp	x1, x20
  40e938:	b.ne	40e950 <wcrtomb@plt+0xbf40>  // b.any
  40e93c:	ldr	x0, [x19]
  40e940:	ldp	x19, x20, [sp, #16]
  40e944:	ldr	x21, [sp, #32]
  40e948:	ldp	x29, x30, [sp], #48
  40e94c:	ret
  40e950:	ldr	x2, [x21, #56]
  40e954:	mov	x0, x20
  40e958:	blr	x2
  40e95c:	tst	w0, #0xff
  40e960:	b.ne	40e93c <wcrtomb@plt+0xbf2c>  // b.any
  40e964:	ldr	x19, [x19, #8]
  40e968:	cbnz	x19, 40e930 <wcrtomb@plt+0xbf20>
  40e96c:	mov	x0, #0x0                   	// #0
  40e970:	b	40e940 <wcrtomb@plt+0xbf30>
  40e974:	ldr	x1, [x0, #32]
  40e978:	cbz	x1, 40e9a4 <wcrtomb@plt+0xbf94>
  40e97c:	ldp	x1, x2, [x0]
  40e980:	cmp	x2, x1
  40e984:	b.hi	40e994 <wcrtomb@plt+0xbf84>  // b.pmore
  40e988:	stp	x29, x30, [sp, #-16]!
  40e98c:	mov	x29, sp
  40e990:	bl	4026f0 <abort@plt>
  40e994:	ldr	x0, [x1]
  40e998:	cbnz	x0, 40e9a8 <wcrtomb@plt+0xbf98>
  40e99c:	add	x1, x1, #0x10
  40e9a0:	b	40e980 <wcrtomb@plt+0xbf70>
  40e9a4:	mov	x0, #0x0                   	// #0
  40e9a8:	ret
  40e9ac:	stp	x29, x30, [sp, #-32]!
  40e9b0:	mov	x29, sp
  40e9b4:	stp	x19, x20, [sp, #16]
  40e9b8:	mov	x19, x0
  40e9bc:	mov	x20, x1
  40e9c0:	bl	40e4c4 <wcrtomb@plt+0xbab4>
  40e9c4:	mov	x2, x0
  40e9c8:	mov	x3, x0
  40e9cc:	ldp	x0, x3, [x3]
  40e9d0:	cmp	x0, x20
  40e9d4:	b.ne	40e9ec <wcrtomb@plt+0xbfdc>  // b.any
  40e9d8:	cbz	x3, 40e9f0 <wcrtomb@plt+0xbfe0>
  40e9dc:	ldr	x0, [x3]
  40e9e0:	ldp	x19, x20, [sp, #16]
  40e9e4:	ldp	x29, x30, [sp], #32
  40e9e8:	ret
  40e9ec:	cbnz	x3, 40e9cc <wcrtomb@plt+0xbfbc>
  40e9f0:	ldr	x1, [x19, #8]
  40e9f4:	add	x2, x2, #0x10
  40e9f8:	cmp	x1, x2
  40e9fc:	b.hi	40ea08 <wcrtomb@plt+0xbff8>  // b.pmore
  40ea00:	mov	x0, #0x0                   	// #0
  40ea04:	b	40e9e0 <wcrtomb@plt+0xbfd0>
  40ea08:	ldr	x0, [x2]
  40ea0c:	cbz	x0, 40e9f4 <wcrtomb@plt+0xbfe4>
  40ea10:	b	40e9e0 <wcrtomb@plt+0xbfd0>
  40ea14:	mov	x4, x0
  40ea18:	sub	x1, x1, #0x8
  40ea1c:	mov	x0, #0x0                   	// #0
  40ea20:	ldr	x3, [x4]
  40ea24:	ldr	x5, [x4, #8]
  40ea28:	cmp	x5, x3
  40ea2c:	b.hi	40ea34 <wcrtomb@plt+0xc024>  // b.pmore
  40ea30:	ret
  40ea34:	ldr	x5, [x3]
  40ea38:	cbz	x5, 40ea5c <wcrtomb@plt+0xc04c>
  40ea3c:	mov	x5, x3
  40ea40:	cmp	x2, x0
  40ea44:	b.ls	40ea30 <wcrtomb@plt+0xc020>  // b.plast
  40ea48:	add	x0, x0, #0x1
  40ea4c:	ldr	x6, [x5]
  40ea50:	str	x6, [x1, x0, lsl #3]
  40ea54:	ldr	x5, [x5, #8]
  40ea58:	cbnz	x5, 40ea40 <wcrtomb@plt+0xc030>
  40ea5c:	add	x3, x3, #0x10
  40ea60:	b	40ea24 <wcrtomb@plt+0xc014>
  40ea64:	stp	x29, x30, [sp, #-64]!
  40ea68:	mov	x29, sp
  40ea6c:	stp	x19, x20, [sp, #16]
  40ea70:	mov	x20, x0
  40ea74:	ldr	x19, [x0]
  40ea78:	stp	x23, x24, [sp, #48]
  40ea7c:	mov	x23, x1
  40ea80:	mov	x24, x2
  40ea84:	stp	x21, x22, [sp, #32]
  40ea88:	mov	x22, #0x0                   	// #0
  40ea8c:	ldr	x0, [x20, #8]
  40ea90:	cmp	x0, x19
  40ea94:	b.hi	40eab0 <wcrtomb@plt+0xc0a0>  // b.pmore
  40ea98:	mov	x0, x22
  40ea9c:	ldp	x19, x20, [sp, #16]
  40eaa0:	ldp	x21, x22, [sp, #32]
  40eaa4:	ldp	x23, x24, [sp, #48]
  40eaa8:	ldp	x29, x30, [sp], #64
  40eaac:	ret
  40eab0:	ldr	x0, [x19]
  40eab4:	cbz	x0, 40eadc <wcrtomb@plt+0xc0cc>
  40eab8:	mov	x21, x19
  40eabc:	ldr	x0, [x21]
  40eac0:	mov	x1, x24
  40eac4:	blr	x23
  40eac8:	tst	w0, #0xff
  40eacc:	b.eq	40ea98 <wcrtomb@plt+0xc088>  // b.none
  40ead0:	ldr	x21, [x21, #8]
  40ead4:	add	x22, x22, #0x1
  40ead8:	cbnz	x21, 40eabc <wcrtomb@plt+0xc0ac>
  40eadc:	add	x19, x19, #0x10
  40eae0:	b	40ea8c <wcrtomb@plt+0xc07c>
  40eae4:	mov	x3, x0
  40eae8:	mov	x4, #0x1f                  	// #31
  40eaec:	mov	x0, #0x0                   	// #0
  40eaf0:	ldrb	w2, [x3]
  40eaf4:	cbnz	w2, 40eafc <wcrtomb@plt+0xc0ec>
  40eaf8:	ret
  40eafc:	and	x2, x2, #0xff
  40eb00:	add	x3, x3, #0x1
  40eb04:	madd	x2, x0, x4, x2
  40eb08:	udiv	x0, x2, x1
  40eb0c:	msub	x0, x0, x1, x2
  40eb10:	b	40eaf0 <wcrtomb@plt+0xc0e0>
  40eb14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40eb18:	add	x1, x1, #0xa48
  40eb1c:	ldp	x2, x3, [x1]
  40eb20:	stp	x2, x3, [x0]
  40eb24:	ldr	w1, [x1, #16]
  40eb28:	str	w1, [x0, #16]
  40eb2c:	ret
  40eb30:	stp	x29, x30, [sp, #-64]!
  40eb34:	mov	x29, sp
  40eb38:	stp	x19, x20, [sp, #16]
  40eb3c:	mov	x20, x1
  40eb40:	stp	x21, x22, [sp, #32]
  40eb44:	mov	x21, x3
  40eb48:	stp	x23, x24, [sp, #48]
  40eb4c:	mov	x24, x0
  40eb50:	mov	x23, x4
  40eb54:	cbnz	x2, 40ebf0 <wcrtomb@plt+0xc1e0>
  40eb58:	adrp	x22, 40e000 <wcrtomb@plt+0xb5f0>
  40eb5c:	add	x22, x22, #0x414
  40eb60:	cbnz	x21, 40eb6c <wcrtomb@plt+0xc15c>
  40eb64:	adrp	x21, 40e000 <wcrtomb@plt+0xb5f0>
  40eb68:	add	x21, x21, #0x424
  40eb6c:	mov	x0, #0x50                  	// #80
  40eb70:	bl	402520 <malloc@plt>
  40eb74:	mov	x19, x0
  40eb78:	cbz	x0, 40ebd8 <wcrtomb@plt+0xc1c8>
  40eb7c:	cbnz	x20, 40eb88 <wcrtomb@plt+0xc178>
  40eb80:	adrp	x20, 420000 <_obstack_memory_used@@Base+0xc900>
  40eb84:	add	x20, x20, #0xa48
  40eb88:	mov	x0, x19
  40eb8c:	str	x20, [x0, #40]!
  40eb90:	bl	40e5ec <wcrtomb@plt+0xbbdc>
  40eb94:	tst	w0, #0xff
  40eb98:	b.eq	40ebf8 <wcrtomb@plt+0xc1e8>  // b.none
  40eb9c:	mov	x1, x20
  40eba0:	mov	x0, x24
  40eba4:	bl	40e430 <wcrtomb@plt+0xba20>
  40eba8:	str	x0, [x19, #16]
  40ebac:	mov	x20, x0
  40ebb0:	cbz	x0, 40ebf8 <wcrtomb@plt+0xc1e8>
  40ebb4:	mov	x1, #0x10                  	// #16
  40ebb8:	bl	402610 <calloc@plt>
  40ebbc:	str	x0, [x19]
  40ebc0:	cbz	x0, 40ebf8 <wcrtomb@plt+0xc1e8>
  40ebc4:	add	x20, x0, x20, lsl #4
  40ebc8:	str	x20, [x19, #8]
  40ebcc:	stp	xzr, xzr, [x19, #24]
  40ebd0:	stp	x22, x21, [x19, #48]
  40ebd4:	stp	x23, xzr, [x19, #64]
  40ebd8:	mov	x0, x19
  40ebdc:	ldp	x19, x20, [sp, #16]
  40ebe0:	ldp	x21, x22, [sp, #32]
  40ebe4:	ldp	x23, x24, [sp, #48]
  40ebe8:	ldp	x29, x30, [sp], #64
  40ebec:	ret
  40ebf0:	mov	x22, x2
  40ebf4:	b	40eb60 <wcrtomb@plt+0xc150>
  40ebf8:	mov	x0, x19
  40ebfc:	mov	x19, #0x0                   	// #0
  40ec00:	bl	4027a0 <free@plt>
  40ec04:	b	40ebd8 <wcrtomb@plt+0xc1c8>
  40ec08:	stp	x29, x30, [sp, #-48]!
  40ec0c:	mov	x29, sp
  40ec10:	stp	x19, x20, [sp, #16]
  40ec14:	mov	x19, x0
  40ec18:	ldr	x20, [x0]
  40ec1c:	str	x21, [sp, #32]
  40ec20:	ldr	x0, [x19, #8]
  40ec24:	cmp	x0, x20
  40ec28:	b.hi	40ec40 <wcrtomb@plt+0xc230>  // b.pmore
  40ec2c:	ldr	x21, [sp, #32]
  40ec30:	stp	xzr, xzr, [x19, #24]
  40ec34:	ldp	x19, x20, [sp, #16]
  40ec38:	ldp	x29, x30, [sp], #48
  40ec3c:	ret
  40ec40:	ldr	x0, [x20]
  40ec44:	cbz	x0, 40ec64 <wcrtomb@plt+0xc254>
  40ec48:	ldr	x21, [x20, #8]
  40ec4c:	ldr	x1, [x19, #64]
  40ec50:	cbnz	x21, 40ec6c <wcrtomb@plt+0xc25c>
  40ec54:	cbz	x1, 40ec60 <wcrtomb@plt+0xc250>
  40ec58:	ldr	x0, [x20]
  40ec5c:	blr	x1
  40ec60:	stp	xzr, xzr, [x20]
  40ec64:	add	x20, x20, #0x10
  40ec68:	b	40ec20 <wcrtomb@plt+0xc210>
  40ec6c:	cbz	x1, 40ec78 <wcrtomb@plt+0xc268>
  40ec70:	ldr	x0, [x21]
  40ec74:	blr	x1
  40ec78:	ldr	x0, [x21, #8]
  40ec7c:	ldr	x1, [x19, #72]
  40ec80:	stp	xzr, x1, [x21]
  40ec84:	str	x21, [x19, #72]
  40ec88:	mov	x21, x0
  40ec8c:	b	40ec4c <wcrtomb@plt+0xc23c>
  40ec90:	stp	x29, x30, [sp, #-48]!
  40ec94:	mov	x29, sp
  40ec98:	stp	x19, x20, [sp, #16]
  40ec9c:	mov	x19, x0
  40eca0:	ldr	x0, [x0, #64]
  40eca4:	str	x21, [sp, #32]
  40eca8:	cbnz	x0, 40ece0 <wcrtomb@plt+0xc2d0>
  40ecac:	ldr	x20, [x19]
  40ecb0:	ldr	x0, [x19, #8]
  40ecb4:	cmp	x0, x20
  40ecb8:	b.hi	40ed24 <wcrtomb@plt+0xc314>  // b.pmore
  40ecbc:	ldr	x0, [x19, #72]
  40ecc0:	cbnz	x0, 40ed44 <wcrtomb@plt+0xc334>
  40ecc4:	ldr	x0, [x19]
  40ecc8:	bl	4027a0 <free@plt>
  40eccc:	mov	x0, x19
  40ecd0:	ldp	x19, x20, [sp, #16]
  40ecd4:	ldr	x21, [sp, #32]
  40ecd8:	ldp	x29, x30, [sp], #48
  40ecdc:	b	4027a0 <free@plt>
  40ece0:	ldr	x0, [x19, #32]
  40ece4:	cbz	x0, 40ecac <wcrtomb@plt+0xc29c>
  40ece8:	ldr	x20, [x19]
  40ecec:	ldr	x0, [x19, #8]
  40ecf0:	cmp	x0, x20
  40ecf4:	b.ls	40ecac <wcrtomb@plt+0xc29c>  // b.plast
  40ecf8:	ldr	x0, [x20]
  40ecfc:	cbnz	x0, 40ed08 <wcrtomb@plt+0xc2f8>
  40ed00:	add	x20, x20, #0x10
  40ed04:	b	40ecec <wcrtomb@plt+0xc2dc>
  40ed08:	mov	x21, x20
  40ed0c:	ldr	x0, [x21]
  40ed10:	ldr	x1, [x19, #64]
  40ed14:	blr	x1
  40ed18:	ldr	x21, [x21, #8]
  40ed1c:	cbnz	x21, 40ed0c <wcrtomb@plt+0xc2fc>
  40ed20:	b	40ed00 <wcrtomb@plt+0xc2f0>
  40ed24:	ldr	x0, [x20, #8]
  40ed28:	cbnz	x0, 40ed34 <wcrtomb@plt+0xc324>
  40ed2c:	add	x20, x20, #0x10
  40ed30:	b	40ecb0 <wcrtomb@plt+0xc2a0>
  40ed34:	ldr	x21, [x0, #8]
  40ed38:	bl	4027a0 <free@plt>
  40ed3c:	mov	x0, x21
  40ed40:	b	40ed28 <wcrtomb@plt+0xc318>
  40ed44:	ldr	x20, [x0, #8]
  40ed48:	bl	4027a0 <free@plt>
  40ed4c:	mov	x0, x20
  40ed50:	b	40ecc0 <wcrtomb@plt+0xc2b0>
  40ed54:	stp	x29, x30, [sp, #-128]!
  40ed58:	mov	x29, sp
  40ed5c:	stp	x19, x20, [sp, #16]
  40ed60:	mov	x19, x0
  40ed64:	mov	x0, x1
  40ed68:	str	x21, [sp, #32]
  40ed6c:	ldr	x21, [x19, #40]
  40ed70:	mov	x1, x21
  40ed74:	bl	40e430 <wcrtomb@plt+0xba20>
  40ed78:	cbnz	x0, 40ed94 <wcrtomb@plt+0xc384>
  40ed7c:	mov	w20, #0x0                   	// #0
  40ed80:	mov	w0, w20
  40ed84:	ldp	x19, x20, [sp, #16]
  40ed88:	ldr	x21, [sp, #32]
  40ed8c:	ldp	x29, x30, [sp], #128
  40ed90:	ret
  40ed94:	ldr	x1, [x19, #16]
  40ed98:	mov	x20, x0
  40ed9c:	cmp	x1, x0
  40eda0:	b.eq	40ee78 <wcrtomb@plt+0xc468>  // b.none
  40eda4:	mov	x1, #0x10                  	// #16
  40eda8:	bl	402610 <calloc@plt>
  40edac:	str	x0, [sp, #48]
  40edb0:	cbz	x0, 40ed7c <wcrtomb@plt+0xc36c>
  40edb4:	stp	x20, xzr, [sp, #64]
  40edb8:	add	x20, x0, x20, lsl #4
  40edbc:	mov	x1, x19
  40edc0:	ldr	x0, [x19, #48]
  40edc4:	str	x0, [sp, #96]
  40edc8:	ldr	x0, [x19, #56]
  40edcc:	str	x0, [sp, #104]
  40edd0:	ldr	x0, [x19, #64]
  40edd4:	str	x0, [sp, #112]
  40edd8:	ldr	x0, [x19, #72]
  40eddc:	mov	w2, #0x0                   	// #0
  40ede0:	str	x20, [sp, #56]
  40ede4:	stp	xzr, x21, [sp, #80]
  40ede8:	str	x0, [sp, #120]
  40edec:	add	x0, sp, #0x30
  40edf0:	bl	40e684 <wcrtomb@plt+0xbc74>
  40edf4:	ands	w20, w0, #0xff
  40edf8:	b.eq	40ee30 <wcrtomb@plt+0xc420>  // b.none
  40edfc:	ldr	x0, [x19]
  40ee00:	bl	4027a0 <free@plt>
  40ee04:	ldr	x0, [sp, #48]
  40ee08:	str	x0, [x19]
  40ee0c:	ldr	x0, [sp, #56]
  40ee10:	str	x0, [x19, #8]
  40ee14:	ldr	x0, [sp, #64]
  40ee18:	str	x0, [x19, #16]
  40ee1c:	ldr	x0, [sp, #72]
  40ee20:	str	x0, [x19, #24]
  40ee24:	ldr	x0, [sp, #120]
  40ee28:	str	x0, [x19, #72]
  40ee2c:	b	40ed80 <wcrtomb@plt+0xc370>
  40ee30:	ldr	x0, [sp, #120]
  40ee34:	str	x0, [x19, #72]
  40ee38:	add	x1, sp, #0x30
  40ee3c:	mov	x0, x19
  40ee40:	mov	w2, #0x1                   	// #1
  40ee44:	bl	40e684 <wcrtomb@plt+0xbc74>
  40ee48:	tst	w0, #0xff
  40ee4c:	b.ne	40ee54 <wcrtomb@plt+0xc444>  // b.any
  40ee50:	bl	4026f0 <abort@plt>
  40ee54:	add	x1, sp, #0x30
  40ee58:	mov	x0, x19
  40ee5c:	mov	w2, #0x0                   	// #0
  40ee60:	bl	40e684 <wcrtomb@plt+0xbc74>
  40ee64:	tst	w0, #0xff
  40ee68:	b.eq	40ee50 <wcrtomb@plt+0xc440>  // b.none
  40ee6c:	ldr	x0, [sp, #48]
  40ee70:	bl	4027a0 <free@plt>
  40ee74:	b	40ed80 <wcrtomb@plt+0xc370>
  40ee78:	mov	w20, #0x1                   	// #1
  40ee7c:	b	40ed80 <wcrtomb@plt+0xc370>
  40ee80:	stp	x29, x30, [sp, #-64]!
  40ee84:	mov	x29, sp
  40ee88:	stp	x19, x20, [sp, #16]
  40ee8c:	str	x21, [sp, #32]
  40ee90:	cbnz	x1, 40ee98 <wcrtomb@plt+0xc488>
  40ee94:	bl	4026f0 <abort@plt>
  40ee98:	mov	x21, x2
  40ee9c:	mov	x19, x0
  40eea0:	mov	x20, x1
  40eea4:	add	x2, sp, #0x38
  40eea8:	mov	w3, #0x0                   	// #0
  40eeac:	bl	40e508 <wcrtomb@plt+0xbaf8>
  40eeb0:	cbz	x0, 40eec4 <wcrtomb@plt+0xc4b4>
  40eeb4:	cbz	x21, 40eebc <wcrtomb@plt+0xc4ac>
  40eeb8:	str	x0, [x21]
  40eebc:	mov	w0, #0x0                   	// #0
  40eec0:	b	40ef3c <wcrtomb@plt+0xc52c>
  40eec4:	ldr	x0, [x19, #24]
  40eec8:	ldr	x1, [x19, #40]
  40eecc:	ucvtf	s1, x0
  40eed0:	ldr	x0, [x19, #16]
  40eed4:	ldr	s2, [x1, #8]
  40eed8:	ucvtf	s0, x0
  40eedc:	fmul	s0, s0, s2
  40eee0:	fcmpe	s1, s0
  40eee4:	b.le	40ef78 <wcrtomb@plt+0xc568>
  40eee8:	add	x0, x19, #0x28
  40eeec:	bl	40e5ec <wcrtomb@plt+0xbbdc>
  40eef0:	ldr	x0, [x19, #16]
  40eef4:	ldr	x1, [x19, #40]
  40eef8:	ucvtf	s0, x0
  40eefc:	ldr	x0, [x19, #24]
  40ef00:	ldr	s2, [x1, #8]
  40ef04:	ucvtf	s1, x0
  40ef08:	fmul	s3, s2, s0
  40ef0c:	fcmpe	s1, s3
  40ef10:	b.le	40ef78 <wcrtomb@plt+0xc568>
  40ef14:	ldrb	w0, [x1, #16]
  40ef18:	ldr	s1, [x1, #12]
  40ef1c:	fmul	s0, s0, s1
  40ef20:	cbnz	w0, 40ef28 <wcrtomb@plt+0xc518>
  40ef24:	fmul	s0, s0, s2
  40ef28:	mov	w0, #0x5f800000            	// #1602224128
  40ef2c:	fmov	s1, w0
  40ef30:	fcmpe	s0, s1
  40ef34:	b.lt	40ef4c <wcrtomb@plt+0xc53c>  // b.tstop
  40ef38:	mov	w0, #0xffffffff            	// #-1
  40ef3c:	ldp	x19, x20, [sp, #16]
  40ef40:	ldr	x21, [sp, #32]
  40ef44:	ldp	x29, x30, [sp], #64
  40ef48:	ret
  40ef4c:	fcvtzu	x1, s0
  40ef50:	mov	x0, x19
  40ef54:	bl	40ed54 <wcrtomb@plt+0xc344>
  40ef58:	tst	w0, #0xff
  40ef5c:	b.eq	40ef38 <wcrtomb@plt+0xc528>  // b.none
  40ef60:	add	x2, sp, #0x38
  40ef64:	mov	x1, x20
  40ef68:	mov	x0, x19
  40ef6c:	mov	w3, #0x0                   	// #0
  40ef70:	bl	40e508 <wcrtomb@plt+0xbaf8>
  40ef74:	cbnz	x0, 40ee94 <wcrtomb@plt+0xc484>
  40ef78:	ldr	x21, [sp, #56]
  40ef7c:	ldr	x0, [x21]
  40ef80:	cbz	x0, 40efc4 <wcrtomb@plt+0xc5b4>
  40ef84:	ldr	x0, [x19, #72]
  40ef88:	cbz	x0, 40efb4 <wcrtomb@plt+0xc5a4>
  40ef8c:	ldr	x1, [x0, #8]
  40ef90:	str	x1, [x19, #72]
  40ef94:	ldr	x1, [x21, #8]
  40ef98:	stp	x20, x1, [x0]
  40ef9c:	str	x0, [x21, #8]
  40efa0:	ldr	x0, [x19, #32]
  40efa4:	add	x0, x0, #0x1
  40efa8:	str	x0, [x19, #32]
  40efac:	mov	w0, #0x1                   	// #1
  40efb0:	b	40ef3c <wcrtomb@plt+0xc52c>
  40efb4:	mov	x0, #0x10                  	// #16
  40efb8:	bl	402520 <malloc@plt>
  40efbc:	cbz	x0, 40ef38 <wcrtomb@plt+0xc528>
  40efc0:	b	40ef94 <wcrtomb@plt+0xc584>
  40efc4:	ldr	x0, [x19, #32]
  40efc8:	str	x20, [x21]
  40efcc:	add	x0, x0, #0x1
  40efd0:	str	x0, [x19, #32]
  40efd4:	ldr	x0, [x19, #24]
  40efd8:	add	x0, x0, #0x1
  40efdc:	str	x0, [x19, #24]
  40efe0:	b	40efac <wcrtomb@plt+0xc59c>
  40efe4:	stp	x29, x30, [sp, #-48]!
  40efe8:	mov	x29, sp
  40efec:	add	x2, sp, #0x28
  40eff0:	str	x19, [sp, #16]
  40eff4:	mov	x19, x1
  40eff8:	bl	40ee80 <wcrtomb@plt+0xc470>
  40effc:	cmn	w0, #0x1
  40f000:	b.eq	40f01c <wcrtomb@plt+0xc60c>  // b.none
  40f004:	cbnz	w0, 40f00c <wcrtomb@plt+0xc5fc>
  40f008:	ldr	x19, [sp, #40]
  40f00c:	mov	x0, x19
  40f010:	ldr	x19, [sp, #16]
  40f014:	ldp	x29, x30, [sp], #48
  40f018:	ret
  40f01c:	mov	x19, #0x0                   	// #0
  40f020:	b	40f00c <wcrtomb@plt+0xc5fc>
  40f024:	stp	x29, x30, [sp, #-64]!
  40f028:	mov	w3, #0x1                   	// #1
  40f02c:	mov	x29, sp
  40f030:	add	x2, sp, #0x38
  40f034:	stp	x19, x20, [sp, #16]
  40f038:	mov	x19, x0
  40f03c:	str	x21, [sp, #32]
  40f040:	bl	40e508 <wcrtomb@plt+0xbaf8>
  40f044:	mov	x20, x0
  40f048:	cbz	x0, 40f0ec <wcrtomb@plt+0xc6dc>
  40f04c:	ldr	x0, [x19, #32]
  40f050:	sub	x0, x0, #0x1
  40f054:	str	x0, [x19, #32]
  40f058:	ldr	x0, [sp, #56]
  40f05c:	ldr	x0, [x0]
  40f060:	cbnz	x0, 40f0ec <wcrtomb@plt+0xc6dc>
  40f064:	ldr	x1, [x19, #24]
  40f068:	ldr	x0, [x19, #40]
  40f06c:	sub	x1, x1, #0x1
  40f070:	ucvtf	s0, x1
  40f074:	ldr	s2, [x0]
  40f078:	str	x1, [x19, #24]
  40f07c:	ldr	x1, [x19, #16]
  40f080:	ucvtf	s1, x1
  40f084:	fmul	s1, s1, s2
  40f088:	fcmpe	s0, s1
  40f08c:	b.pl	40f0ec <wcrtomb@plt+0xc6dc>  // b.nfrst
  40f090:	add	x0, x19, #0x28
  40f094:	bl	40e5ec <wcrtomb@plt+0xbbdc>
  40f098:	ldr	x1, [x19, #16]
  40f09c:	ldr	x0, [x19, #40]
  40f0a0:	ucvtf	s0, x1
  40f0a4:	ldr	x1, [x19, #24]
  40f0a8:	ldr	s1, [x0]
  40f0ac:	ucvtf	s2, x1
  40f0b0:	fmul	s1, s0, s1
  40f0b4:	fcmpe	s2, s1
  40f0b8:	b.pl	40f0ec <wcrtomb@plt+0xc6dc>  // b.nfrst
  40f0bc:	ldrb	w1, [x0, #16]
  40f0c0:	ldr	s1, [x0, #4]
  40f0c4:	fmul	s0, s0, s1
  40f0c8:	cbz	w1, 40f100 <wcrtomb@plt+0xc6f0>
  40f0cc:	fcvtzu	x1, s0
  40f0d0:	mov	x0, x19
  40f0d4:	bl	40ed54 <wcrtomb@plt+0xc344>
  40f0d8:	tst	w0, #0xff
  40f0dc:	b.ne	40f0ec <wcrtomb@plt+0xc6dc>  // b.any
  40f0e0:	ldr	x0, [x19, #72]
  40f0e4:	cbnz	x0, 40f10c <wcrtomb@plt+0xc6fc>
  40f0e8:	str	xzr, [x19, #72]
  40f0ec:	mov	x0, x20
  40f0f0:	ldp	x19, x20, [sp, #16]
  40f0f4:	ldr	x21, [sp, #32]
  40f0f8:	ldp	x29, x30, [sp], #64
  40f0fc:	ret
  40f100:	ldr	s1, [x0, #8]
  40f104:	fmul	s0, s0, s1
  40f108:	b	40f0cc <wcrtomb@plt+0xc6bc>
  40f10c:	ldr	x21, [x0, #8]
  40f110:	bl	4027a0 <free@plt>
  40f114:	mov	x0, x21
  40f118:	b	40f0e4 <wcrtomb@plt+0xc6d4>
  40f11c:	cmp	x0, x1
  40f120:	b.eq	40f2dc <wcrtomb@plt+0xc8cc>  // b.none
  40f124:	stp	x29, x30, [sp, #-192]!
  40f128:	mov	x29, sp
  40f12c:	stp	x19, x20, [sp, #16]
  40f130:	stp	x21, x22, [sp, #32]
  40f134:	mov	x21, x0
  40f138:	mov	x22, x1
  40f13c:	stp	x23, x24, [sp, #48]
  40f140:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  40f144:	cmp	x0, #0x1
  40f148:	b.ls	40f278 <wcrtomb@plt+0xc868>  // b.plast
  40f14c:	strb	wzr, [sp, #64]
  40f150:	stur	xzr, [sp, #68]
  40f154:	strb	wzr, [sp, #76]
  40f158:	str	x21, [sp, #80]
  40f15c:	strb	wzr, [sp, #128]
  40f160:	stur	xzr, [sp, #132]
  40f164:	str	x22, [sp, #144]
  40f168:	add	x0, sp, #0x40
  40f16c:	strb	wzr, [sp, #140]
  40f170:	bl	40f2e4 <wcrtomb@plt+0xc8d4>
  40f174:	ldrb	w0, [sp, #96]
  40f178:	cbz	w0, 40f214 <wcrtomb@plt+0xc804>
  40f17c:	ldr	w0, [sp, #100]
  40f180:	cbnz	w0, 40f214 <wcrtomb@plt+0xc804>
  40f184:	add	x0, sp, #0x40
  40f188:	bl	40f2e4 <wcrtomb@plt+0xc8d4>
  40f18c:	ldrb	w0, [sp, #96]
  40f190:	cbz	w0, 40f1bc <wcrtomb@plt+0xc7ac>
  40f194:	ldr	w0, [sp, #100]
  40f198:	cbnz	w0, 40f1bc <wcrtomb@plt+0xc7ac>
  40f19c:	add	x0, sp, #0x80
  40f1a0:	bl	40f2e4 <wcrtomb@plt+0xc8d4>
  40f1a4:	ldrb	w0, [sp, #160]
  40f1a8:	cbz	w0, 40f1fc <wcrtomb@plt+0xc7ec>
  40f1ac:	ldr	w0, [sp, #164]
  40f1b0:	cbnz	w0, 40f1fc <wcrtomb@plt+0xc7ec>
  40f1b4:	b	40f1c0 <wcrtomb@plt+0xc7b0>
  40f1b8:	cbz	w0, 40f1d4 <wcrtomb@plt+0xc7c4>
  40f1bc:	mov	w0, #0x1                   	// #1
  40f1c0:	ldp	x19, x20, [sp, #16]
  40f1c4:	ldp	x21, x22, [sp, #32]
  40f1c8:	ldp	x23, x24, [sp, #48]
  40f1cc:	ldp	x29, x30, [sp], #192
  40f1d0:	ret
  40f1d4:	ldp	x0, x2, [sp, #80]
  40f1d8:	ldp	x1, x3, [sp, #144]
  40f1dc:	cmp	x2, x3
  40f1e0:	b.ne	40f1ec <wcrtomb@plt+0xc7dc>  // b.any
  40f1e4:	bl	402750 <memcmp@plt>
  40f1e8:	b	40f250 <wcrtomb@plt+0xc840>
  40f1ec:	b.cs	40f204 <wcrtomb@plt+0xc7f4>  // b.hs, b.nlast
  40f1f0:	bl	402750 <memcmp@plt>
  40f1f4:	cmp	w0, #0x0
  40f1f8:	b.gt	40f1bc <wcrtomb@plt+0xc7ac>
  40f1fc:	mov	w0, #0xffffffff            	// #-1
  40f200:	b	40f1c0 <wcrtomb@plt+0xc7b0>
  40f204:	mov	x2, x3
  40f208:	bl	402750 <memcmp@plt>
  40f20c:	tbz	w0, #31, 40f1bc <wcrtomb@plt+0xc7ac>
  40f210:	b	40f1fc <wcrtomb@plt+0xc7ec>
  40f214:	add	x0, sp, #0x80
  40f218:	bl	40f2e4 <wcrtomb@plt+0xc8d4>
  40f21c:	ldrb	w0, [sp, #160]
  40f220:	cbz	w0, 40f22c <wcrtomb@plt+0xc81c>
  40f224:	ldr	w1, [sp, #164]
  40f228:	cbz	w1, 40f184 <wcrtomb@plt+0xc774>
  40f22c:	ldrb	w1, [sp, #96]
  40f230:	cbz	w1, 40f1b8 <wcrtomb@plt+0xc7a8>
  40f234:	cbz	w0, 40f1fc <wcrtomb@plt+0xc7ec>
  40f238:	ldr	w0, [sp, #100]
  40f23c:	bl	4029c0 <towlower@plt>
  40f240:	mov	w19, w0
  40f244:	ldr	w0, [sp, #164]
  40f248:	bl	4029c0 <towlower@plt>
  40f24c:	sub	w0, w19, w0
  40f250:	cbnz	w0, 40f1c0 <wcrtomb@plt+0xc7b0>
  40f254:	ldp	x0, x1, [sp, #80]
  40f258:	strb	wzr, [sp, #76]
  40f25c:	add	x0, x0, x1
  40f260:	str	x0, [sp, #80]
  40f264:	ldr	x0, [sp, #144]
  40f268:	ldr	x1, [sp, #152]
  40f26c:	add	x0, x0, x1
  40f270:	str	x0, [sp, #144]
  40f274:	b	40f168 <wcrtomb@plt+0xc758>
  40f278:	bl	402790 <__ctype_b_loc@plt>
  40f27c:	mov	x20, #0x0                   	// #0
  40f280:	ldr	x23, [x0]
  40f284:	ldrb	w24, [x21, x20]
  40f288:	ldrb	w19, [x21, x20]
  40f28c:	ldrh	w0, [x23, x24, lsl #1]
  40f290:	tbz	w0, #8, 40f2a4 <wcrtomb@plt+0xc894>
  40f294:	bl	4024a0 <__ctype_tolower_loc@plt>
  40f298:	ldr	x0, [x0]
  40f29c:	ldr	w19, [x0, x24, lsl #2]
  40f2a0:	and	w19, w19, #0xff
  40f2a4:	ldrb	w24, [x22, x20]
  40f2a8:	ldrb	w0, [x22, x20]
  40f2ac:	ldrh	w1, [x23, x24, lsl #1]
  40f2b0:	tbz	w1, #8, 40f2c4 <wcrtomb@plt+0xc8b4>
  40f2b4:	bl	4024a0 <__ctype_tolower_loc@plt>
  40f2b8:	ldr	x0, [x0]
  40f2bc:	ldr	w0, [x0, x24, lsl #2]
  40f2c0:	and	w0, w0, #0xff
  40f2c4:	cbz	w19, 40f2d4 <wcrtomb@plt+0xc8c4>
  40f2c8:	add	x20, x20, #0x1
  40f2cc:	cmp	w19, w0
  40f2d0:	b.eq	40f284 <wcrtomb@plt+0xc874>  // b.none
  40f2d4:	sub	w0, w19, w0
  40f2d8:	b	40f1c0 <wcrtomb@plt+0xc7b0>
  40f2dc:	mov	w0, #0x0                   	// #0
  40f2e0:	ret
  40f2e4:	stp	x29, x30, [sp, #-48]!
  40f2e8:	mov	x29, sp
  40f2ec:	stp	x19, x20, [sp, #16]
  40f2f0:	mov	x19, x0
  40f2f4:	ldrb	w0, [x0, #12]
  40f2f8:	str	x21, [sp, #32]
  40f2fc:	cbnz	w0, 40f338 <wcrtomb@plt+0xc928>
  40f300:	ldrb	w0, [x19]
  40f304:	ldr	x20, [x19, #16]
  40f308:	cbnz	w0, 40f37c <wcrtomb@plt+0xc96c>
  40f30c:	ldrb	w0, [x20]
  40f310:	bl	41e268 <_obstack_memory_used@@Base+0xab68>
  40f314:	tst	w0, #0xff
  40f318:	b.eq	40f348 <wcrtomb@plt+0xc938>  // b.none
  40f31c:	mov	x0, #0x1                   	// #1
  40f320:	str	x0, [x19, #24]
  40f324:	ldrb	w1, [x20]
  40f328:	strb	w0, [x19, #32]
  40f32c:	str	w1, [x19, #36]
  40f330:	mov	w0, #0x1                   	// #1
  40f334:	strb	w0, [x19, #12]
  40f338:	ldp	x19, x20, [sp, #16]
  40f33c:	ldr	x21, [sp, #32]
  40f340:	ldp	x29, x30, [sp], #48
  40f344:	ret
  40f348:	add	x0, x19, #0x4
  40f34c:	bl	402710 <mbsinit@plt>
  40f350:	cbnz	w0, 40f374 <wcrtomb@plt+0xc964>
  40f354:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40f358:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40f35c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f360:	add	x3, x3, #0xaa6
  40f364:	add	x1, x1, #0xa5c
  40f368:	add	x0, x0, #0xa66
  40f36c:	mov	w2, #0x96                  	// #150
  40f370:	bl	402970 <__assert_fail@plt>
  40f374:	mov	w0, #0x1                   	// #1
  40f378:	strb	w0, [x19]
  40f37c:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  40f380:	add	x21, x19, #0x4
  40f384:	mov	x1, x0
  40f388:	mov	x0, x20
  40f38c:	bl	410b08 <wcrtomb@plt+0xe0f8>
  40f390:	mov	x2, x0
  40f394:	mov	x3, x21
  40f398:	mov	x1, x20
  40f39c:	add	x0, x19, #0x24
  40f3a0:	bl	413374 <wcrtomb@plt+0x10964>
  40f3a4:	str	x0, [x19, #24]
  40f3a8:	cmn	x0, #0x1
  40f3ac:	b.ne	40f3c0 <wcrtomb@plt+0xc9b0>  // b.any
  40f3b0:	mov	x0, #0x1                   	// #1
  40f3b4:	str	x0, [x19, #24]
  40f3b8:	strb	wzr, [x19, #32]
  40f3bc:	b	40f330 <wcrtomb@plt+0xc920>
  40f3c0:	cmn	x0, #0x2
  40f3c4:	b.ne	40f3d4 <wcrtomb@plt+0xc9c4>  // b.any
  40f3c8:	ldr	x0, [x19, #16]
  40f3cc:	bl	4023c0 <strlen@plt>
  40f3d0:	b	40f3b4 <wcrtomb@plt+0xc9a4>
  40f3d4:	cbnz	x0, 40f434 <wcrtomb@plt+0xca24>
  40f3d8:	mov	x0, #0x1                   	// #1
  40f3dc:	str	x0, [x19, #24]
  40f3e0:	ldr	x0, [x19, #16]
  40f3e4:	ldrb	w0, [x0]
  40f3e8:	cbz	w0, 40f40c <wcrtomb@plt+0xc9fc>
  40f3ec:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40f3f0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40f3f4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f3f8:	add	x3, x3, #0xaa6
  40f3fc:	add	x1, x1, #0xa5c
  40f400:	add	x0, x0, #0xa7d
  40f404:	mov	w2, #0xb2                  	// #178
  40f408:	b	40f370 <wcrtomb@plt+0xc960>
  40f40c:	ldr	w0, [x19, #36]
  40f410:	cbz	w0, 40f434 <wcrtomb@plt+0xca24>
  40f414:	adrp	x3, 420000 <_obstack_memory_used@@Base+0xc900>
  40f418:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40f41c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f420:	add	x3, x3, #0xaa6
  40f424:	add	x1, x1, #0xa5c
  40f428:	add	x0, x0, #0xa94
  40f42c:	mov	w2, #0xb3                  	// #179
  40f430:	b	40f370 <wcrtomb@plt+0xc960>
  40f434:	mov	w0, #0x1                   	// #1
  40f438:	strb	w0, [x19, #32]
  40f43c:	mov	x0, x21
  40f440:	bl	402710 <mbsinit@plt>
  40f444:	cbz	w0, 40f330 <wcrtomb@plt+0xc920>
  40f448:	strb	wzr, [x19]
  40f44c:	b	40f330 <wcrtomb@plt+0xc920>
  40f450:	ldr	x2, [x0, #16]
  40f454:	add	x2, x2, x1
  40f458:	str	x2, [x0, #16]
  40f45c:	ret
  40f460:	ldrb	w2, [x1]
  40f464:	strb	w2, [x0]
  40f468:	cbz	w2, 40f488 <wcrtomb@plt+0xca78>
  40f46c:	ldur	x2, [x1, #4]
  40f470:	stur	x2, [x0, #4]
  40f474:	ldrb	w2, [x1, #12]
  40f478:	add	x0, x0, #0x10
  40f47c:	sturb	w2, [x0, #-4]
  40f480:	add	x1, x1, #0x10
  40f484:	b	41e200 <_obstack_memory_used@@Base+0xab00>
  40f488:	stur	xzr, [x0, #4]
  40f48c:	b	40f474 <wcrtomb@plt+0xca64>
  40f490:	mov	w5, w2
  40f494:	mov	x4, x0
  40f498:	and	w6, w5, #0xff
  40f49c:	mov	x2, x3
  40f4a0:	and	w7, w1, #0xff
  40f4a4:	cmp	w6, w1, uxtb
  40f4a8:	b.ne	40f4d0 <wcrtomb@plt+0xcac0>  // b.any
  40f4ac:	mov	w1, w7
  40f4b0:	b	402860 <memchr@plt>
  40f4b4:	ldrb	w0, [x4]
  40f4b8:	cmp	w0, w7
  40f4bc:	b.eq	40f55c <wcrtomb@plt+0xcb4c>  // b.none
  40f4c0:	cmp	w0, w6
  40f4c4:	b.eq	40f55c <wcrtomb@plt+0xcb4c>  // b.none
  40f4c8:	add	x4, x4, #0x1
  40f4cc:	sub	x2, x2, #0x1
  40f4d0:	cbz	x2, 40f4dc <wcrtomb@plt+0xcacc>
  40f4d4:	tst	x4, #0x7
  40f4d8:	b.ne	40f4b4 <wcrtomb@plt+0xcaa4>  // b.any
  40f4dc:	ubfiz	w0, w1, #8, #8
  40f4e0:	and	w1, w1, #0xff
  40f4e4:	orr	w1, w0, w1
  40f4e8:	ubfiz	w3, w5, #8, #8
  40f4ec:	and	w5, w5, #0xff
  40f4f0:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  40f4f4:	orr	w3, w3, w5
  40f4f8:	sxtw	x0, w1
  40f4fc:	sbfiz	x1, x1, #16, #32
  40f500:	movk	x8, #0xfeff
  40f504:	orr	x0, x1, x0
  40f508:	sxtw	x5, w3
  40f50c:	sbfiz	x1, x3, #16, #32
  40f510:	orr	x1, x1, x5
  40f514:	orr	x0, x0, x0, lsl #32
  40f518:	orr	x1, x1, x1, lsl #32
  40f51c:	cmp	x2, #0x7
  40f520:	b.ls	40f54c <wcrtomb@plt+0xcb3c>  // b.plast
  40f524:	ldr	x3, [x4]
  40f528:	eor	x5, x3, x0
  40f52c:	eor	x3, x3, x1
  40f530:	add	x9, x5, x8
  40f534:	bic	x5, x9, x5
  40f538:	add	x9, x3, x8
  40f53c:	bic	x3, x9, x3
  40f540:	orr	x3, x5, x3
  40f544:	tst	x3, #0x8080808080808080
  40f548:	b.eq	40f564 <wcrtomb@plt+0xcb54>  // b.none
  40f54c:	add	x2, x4, x2
  40f550:	cmp	x4, x2
  40f554:	b.ne	40f570 <wcrtomb@plt+0xcb60>  // b.any
  40f558:	mov	x4, #0x0                   	// #0
  40f55c:	mov	x0, x4
  40f560:	ret
  40f564:	add	x4, x4, #0x8
  40f568:	sub	x2, x2, #0x8
  40f56c:	b	40f51c <wcrtomb@plt+0xcb0c>
  40f570:	ldrb	w0, [x4]
  40f574:	cmp	w0, w7
  40f578:	b.eq	40f55c <wcrtomb@plt+0xcb4c>  // b.none
  40f57c:	cmp	w0, w6
  40f580:	b.eq	40f55c <wcrtomb@plt+0xcb4c>  // b.none
  40f584:	add	x4, x4, #0x1
  40f588:	b	40f550 <wcrtomb@plt+0xcb40>
  40f58c:	stp	x29, x30, [sp, #-64]!
  40f590:	mov	x29, sp
  40f594:	str	x3, [sp, #56]
  40f598:	tbz	w2, #6, 40f5cc <wcrtomb@plt+0xcbbc>
  40f59c:	add	x3, sp, #0x40
  40f5a0:	stp	x3, x3, [sp, #16]
  40f5a4:	add	x3, sp, #0x30
  40f5a8:	str	x3, [sp, #32]
  40f5ac:	mov	w3, #0xfffffff8            	// #-8
  40f5b0:	str	w3, [sp, #40]
  40f5b4:	ldr	w3, [sp, #56]
  40f5b8:	str	wzr, [sp, #44]
  40f5bc:	bl	402950 <openat@plt>
  40f5c0:	bl	410b44 <wcrtomb@plt+0xe134>
  40f5c4:	ldp	x29, x30, [sp], #64
  40f5c8:	ret
  40f5cc:	mov	w3, #0x0                   	// #0
  40f5d0:	b	40f5bc <wcrtomb@plt+0xcbac>
  40f5d4:	stp	xzr, xzr, [x8]
  40f5d8:	cmp	w0, #0xa
  40f5dc:	stp	xzr, xzr, [x8, #16]
  40f5e0:	stp	xzr, xzr, [x8, #32]
  40f5e4:	str	xzr, [x8, #48]
  40f5e8:	b.ne	40f5f8 <wcrtomb@plt+0xcbe8>  // b.any
  40f5ec:	stp	x29, x30, [sp, #-16]!
  40f5f0:	mov	x29, sp
  40f5f4:	bl	4026f0 <abort@plt>
  40f5f8:	str	w0, [x8]
  40f5fc:	ret
  40f600:	stp	x29, x30, [sp, #-48]!
  40f604:	mov	w2, #0x5                   	// #5
  40f608:	mov	x29, sp
  40f60c:	stp	x19, x20, [sp, #16]
  40f610:	mov	x20, x0
  40f614:	str	x21, [sp, #32]
  40f618:	mov	w21, w1
  40f61c:	mov	x1, x0
  40f620:	mov	x0, #0x0                   	// #0
  40f624:	bl	4028e0 <dcgettext@plt>
  40f628:	mov	x19, x0
  40f62c:	cmp	x20, x0
  40f630:	b.ne	40f6a4 <wcrtomb@plt+0xcc94>  // b.any
  40f634:	bl	41e1a0 <_obstack_memory_used@@Base+0xaaa0>
  40f638:	ldrb	w2, [x0]
  40f63c:	and	w2, w2, #0xffffffdf
  40f640:	cmp	w2, #0x55
  40f644:	b.ne	40f6b8 <wcrtomb@plt+0xcca8>  // b.any
  40f648:	ldrb	w1, [x0, #1]
  40f64c:	and	w1, w1, #0xffffffdf
  40f650:	cmp	w1, #0x54
  40f654:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f658:	ldrb	w1, [x0, #2]
  40f65c:	and	w1, w1, #0xffffffdf
  40f660:	cmp	w1, #0x46
  40f664:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f668:	ldrb	w1, [x0, #3]
  40f66c:	cmp	w1, #0x2d
  40f670:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f674:	ldrb	w1, [x0, #4]
  40f678:	cmp	w1, #0x38
  40f67c:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f680:	ldrb	w0, [x0, #5]
  40f684:	cbnz	w0, 40f730 <wcrtomb@plt+0xcd20>
  40f688:	ldrb	w1, [x19]
  40f68c:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f690:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xc900>
  40f694:	add	x0, x0, #0xab9
  40f698:	cmp	w1, #0x60
  40f69c:	add	x19, x19, #0xac4
  40f6a0:	csel	x19, x19, x0, eq  // eq = none
  40f6a4:	mov	x0, x19
  40f6a8:	ldp	x19, x20, [sp, #16]
  40f6ac:	ldr	x21, [sp, #32]
  40f6b0:	ldp	x29, x30, [sp], #48
  40f6b4:	ret
  40f6b8:	cmp	w2, #0x47
  40f6bc:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f6c0:	ldrb	w1, [x0, #1]
  40f6c4:	and	w1, w1, #0xffffffdf
  40f6c8:	cmp	w1, #0x42
  40f6cc:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f6d0:	ldrb	w1, [x0, #2]
  40f6d4:	cmp	w1, #0x31
  40f6d8:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f6dc:	ldrb	w1, [x0, #3]
  40f6e0:	cmp	w1, #0x38
  40f6e4:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f6e8:	ldrb	w1, [x0, #4]
  40f6ec:	cmp	w1, #0x30
  40f6f0:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f6f4:	ldrb	w1, [x0, #5]
  40f6f8:	cmp	w1, #0x33
  40f6fc:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f700:	ldrb	w1, [x0, #6]
  40f704:	cmp	w1, #0x30
  40f708:	b.ne	40f730 <wcrtomb@plt+0xcd20>  // b.any
  40f70c:	ldrb	w0, [x0, #7]
  40f710:	cbnz	w0, 40f730 <wcrtomb@plt+0xcd20>
  40f714:	ldrb	w1, [x19]
  40f718:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f71c:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xc900>
  40f720:	add	x0, x0, #0xabd
  40f724:	cmp	w1, #0x60
  40f728:	add	x19, x19, #0xac0
  40f72c:	b	40f6a0 <wcrtomb@plt+0xcc90>
  40f730:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f734:	adrp	x19, 420000 <_obstack_memory_used@@Base+0xc900>
  40f738:	cmp	w21, #0x9
  40f73c:	add	x0, x0, #0xa92
  40f740:	add	x19, x19, #0x622
  40f744:	b	40f6a0 <wcrtomb@plt+0xcc90>
  40f748:	sub	sp, sp, #0xf0
  40f74c:	stp	x29, x30, [sp, #16]
  40f750:	add	x29, sp, #0x10
  40f754:	stp	x19, x20, [sp, #32]
  40f758:	stp	x21, x22, [sp, #48]
  40f75c:	mov	x21, x2
  40f760:	stp	x23, x24, [sp, #64]
  40f764:	mov	x24, x3
  40f768:	stp	x25, x26, [sp, #80]
  40f76c:	mov	w25, w4
  40f770:	mov	x26, x0
  40f774:	stp	x27, x28, [sp, #96]
  40f778:	str	x1, [sp, #112]
  40f77c:	str	w5, [sp, #120]
  40f780:	str	x7, [sp, #128]
  40f784:	str	x6, [sp, #152]
  40f788:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  40f78c:	str	x0, [sp, #160]
  40f790:	cmp	w25, #0xa
  40f794:	ldr	x0, [sp, #120]
  40f798:	str	xzr, [sp, #136]
  40f79c:	ubfx	x28, x0, #1, #1
  40f7a0:	mov	w0, #0x1                   	// #1
  40f7a4:	str	w0, [sp, #148]
  40f7a8:	b.hi	40f9a4 <wcrtomb@plt+0xcf94>  // b.pmore
  40f7ac:	mov	w20, #0x0                   	// #0
  40f7b0:	mov	w23, #0x0                   	// #0
  40f7b4:	mov	w22, #0x0                   	// #0
  40f7b8:	mov	x10, #0x0                   	// #0
  40f7bc:	mov	x6, #0x0                   	// #0
  40f7c0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f7c4:	add	x0, x0, #0xb18
  40f7c8:	ldrb	w0, [x0, w25, uxtw]
  40f7cc:	adr	x1, 40f7d8 <wcrtomb@plt+0xcdc8>
  40f7d0:	add	x0, x1, w0, sxtb #2
  40f7d4:	br	x0
  40f7d8:	ldr	x0, [sp, #112]
  40f7dc:	mov	w28, #0x0                   	// #0
  40f7e0:	str	x0, [sp, #136]
  40f7e4:	b	40f7c0 <wcrtomb@plt+0xcdb0>
  40f7e8:	mov	w28, #0x0                   	// #0
  40f7ec:	mov	x19, #0x0                   	// #0
  40f7f0:	b	40f810 <wcrtomb@plt+0xce00>
  40f7f4:	mov	w28, #0x1                   	// #1
  40f7f8:	adrp	x6, 420000 <_obstack_memory_used@@Base+0xc900>
  40f7fc:	mov	w22, w28
  40f800:	add	x6, x6, #0x622
  40f804:	mov	x10, #0x1                   	// #1
  40f808:	mov	x19, #0x0                   	// #0
  40f80c:	mov	w25, #0x5                   	// #5
  40f810:	ldr	x0, [sp, #136]
  40f814:	mov	x13, #0x0                   	// #0
  40f818:	str	w20, [sp, #144]
  40f81c:	ldr	x27, [sp, #112]
  40f820:	str	x0, [sp, #112]
  40f824:	cmn	x24, #0x1
  40f828:	b.ne	410244 <wcrtomb@plt+0xd834>  // b.any
  40f82c:	ldrb	w0, [x21, x13]
  40f830:	cmp	w0, #0x0
  40f834:	cset	w14, ne  // ne = any
  40f838:	cmp	w25, #0x2
  40f83c:	cbnz	w14, 40f9c8 <wcrtomb@plt+0xcfb8>
  40f840:	cset	w0, eq  // eq = none
  40f844:	cmp	x19, #0x0
  40f848:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40f84c:	b.eq	40f854 <wcrtomb@plt+0xce44>  // b.none
  40f850:	cbnz	w28, 40fadc <wcrtomb@plt+0xd0cc>
  40f854:	eor	w5, w28, #0x1
  40f858:	ands	w0, w0, w5
  40f85c:	b.eq	4102a8 <wcrtomb@plt+0xd898>  // b.none
  40f860:	ldr	w1, [sp, #144]
  40f864:	cbz	w1, 41026c <wcrtomb@plt+0xd85c>
  40f868:	ldr	w0, [sp, #148]
  40f86c:	cbz	w0, 41024c <wcrtomb@plt+0xd83c>
  40f870:	ldr	w5, [sp, #120]
  40f874:	mov	x3, x24
  40f878:	ldr	x1, [sp, #112]
  40f87c:	mov	x2, x21
  40f880:	ldr	x7, [sp, #128]
  40f884:	mov	w4, #0x5                   	// #5
  40f888:	ldr	x6, [sp, #152]
  40f88c:	ldr	x0, [sp, #240]
  40f890:	str	x0, [sp]
  40f894:	mov	x0, x26
  40f898:	bl	40f748 <wcrtomb@plt+0xcd38>
  40f89c:	b	410288 <wcrtomb@plt+0xd878>
  40f8a0:	adrp	x6, 420000 <_obstack_memory_used@@Base+0xc900>
  40f8a4:	add	x6, x6, #0x622
  40f8a8:	cbnz	w28, 40f9bc <wcrtomb@plt+0xcfac>
  40f8ac:	ldr	x0, [sp, #112]
  40f8b0:	cbz	x0, 40f8bc <wcrtomb@plt+0xceac>
  40f8b4:	mov	w0, #0x22                  	// #34
  40f8b8:	strb	w0, [x26]
  40f8bc:	mov	x10, #0x1                   	// #1
  40f8c0:	mov	w22, #0x1                   	// #1
  40f8c4:	mov	x19, x10
  40f8c8:	b	40f810 <wcrtomb@plt+0xce00>
  40f8cc:	cmp	w25, #0xa
  40f8d0:	b.eq	40f8fc <wcrtomb@plt+0xceec>  // b.none
  40f8d4:	mov	w1, w25
  40f8d8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f8dc:	add	x0, x0, #0xac8
  40f8e0:	bl	40f600 <wcrtomb@plt+0xcbf0>
  40f8e4:	mov	w1, w25
  40f8e8:	str	x0, [sp, #128]
  40f8ec:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40f8f0:	add	x0, x0, #0xa92
  40f8f4:	bl	40f600 <wcrtomb@plt+0xcbf0>
  40f8f8:	str	x0, [sp, #240]
  40f8fc:	mov	x19, #0x0                   	// #0
  40f900:	cbnz	w28, 40f910 <wcrtomb@plt+0xcf00>
  40f904:	ldr	x0, [sp, #128]
  40f908:	ldrb	w0, [x0, x19]
  40f90c:	cbnz	w0, 40f928 <wcrtomb@plt+0xcf18>
  40f910:	ldr	x0, [sp, #240]
  40f914:	mov	w22, #0x1                   	// #1
  40f918:	bl	4023c0 <strlen@plt>
  40f91c:	mov	x10, x0
  40f920:	ldr	x6, [sp, #240]
  40f924:	b	40f810 <wcrtomb@plt+0xce00>
  40f928:	ldr	x1, [sp, #112]
  40f92c:	cmp	x1, x19
  40f930:	b.ls	40f938 <wcrtomb@plt+0xcf28>  // b.plast
  40f934:	strb	w0, [x26, x19]
  40f938:	add	x19, x19, #0x1
  40f93c:	b	40f904 <wcrtomb@plt+0xcef4>
  40f940:	cbnz	w28, 40f98c <wcrtomb@plt+0xcf7c>
  40f944:	mov	w22, #0x1                   	// #1
  40f948:	ldr	x0, [sp, #112]
  40f94c:	adrp	x6, 420000 <_obstack_memory_used@@Base+0xc900>
  40f950:	add	x6, x6, #0xa92
  40f954:	cbz	x0, 40f960 <wcrtomb@plt+0xcf50>
  40f958:	mov	w0, #0x27                  	// #39
  40f95c:	strb	w0, [x26]
  40f960:	mov	x10, #0x1                   	// #1
  40f964:	mov	w28, #0x0                   	// #0
  40f968:	mov	x19, x10
  40f96c:	b	40f99c <wcrtomb@plt+0xcf8c>
  40f970:	cbz	w28, 40f948 <wcrtomb@plt+0xcf38>
  40f974:	adrp	x6, 420000 <_obstack_memory_used@@Base+0xc900>
  40f978:	mov	x10, #0x1                   	// #1
  40f97c:	add	x6, x6, #0xa92
  40f980:	b	40f7ec <wcrtomb@plt+0xcddc>
  40f984:	mov	w28, #0x1                   	// #1
  40f988:	mov	w22, w28
  40f98c:	adrp	x6, 420000 <_obstack_memory_used@@Base+0xc900>
  40f990:	add	x6, x6, #0xa92
  40f994:	mov	x10, #0x1                   	// #1
  40f998:	mov	x19, #0x0                   	// #0
  40f99c:	mov	w25, #0x2                   	// #2
  40f9a0:	b	40f810 <wcrtomb@plt+0xce00>
  40f9a4:	bl	4026f0 <abort@plt>
  40f9a8:	mov	w28, #0x0                   	// #0
  40f9ac:	mov	w22, #0x1                   	// #1
  40f9b0:	b	40f7ec <wcrtomb@plt+0xcddc>
  40f9b4:	mov	w28, #0x1                   	// #1
  40f9b8:	b	40f98c <wcrtomb@plt+0xcf7c>
  40f9bc:	mov	w22, w28
  40f9c0:	mov	x10, #0x1                   	// #1
  40f9c4:	b	40f7ec <wcrtomb@plt+0xcddc>
  40f9c8:	add	x0, x21, x13
  40f9cc:	str	x0, [sp, #136]
  40f9d0:	cset	w3, ne  // ne = any
  40f9d4:	ands	w3, w22, w3
  40f9d8:	b.eq	40fa8c <wcrtomb@plt+0xd07c>  // b.none
  40f9dc:	cbz	x10, 40fa8c <wcrtomb@plt+0xd07c>
  40f9e0:	cmp	x10, #0x1
  40f9e4:	add	x20, x13, x10
  40f9e8:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  40f9ec:	b.ne	40fa1c <wcrtomb@plt+0xd00c>  // b.any
  40f9f0:	mov	x0, x21
  40f9f4:	stp	x13, x6, [sp, #168]
  40f9f8:	str	x10, [sp, #184]
  40f9fc:	str	w3, [sp, #192]
  40fa00:	str	w14, [sp, #200]
  40fa04:	bl	4023c0 <strlen@plt>
  40fa08:	ldp	x13, x6, [sp, #168]
  40fa0c:	mov	x24, x0
  40fa10:	ldr	w3, [sp, #192]
  40fa14:	ldr	w14, [sp, #200]
  40fa18:	ldr	x10, [sp, #184]
  40fa1c:	cmp	x20, x24
  40fa20:	b.hi	40fa8c <wcrtomb@plt+0xd07c>  // b.pmore
  40fa24:	ldr	x0, [sp, #136]
  40fa28:	mov	x2, x10
  40fa2c:	mov	x1, x6
  40fa30:	stp	x6, x10, [sp, #168]
  40fa34:	str	x13, [sp, #184]
  40fa38:	str	w3, [sp, #192]
  40fa3c:	str	w14, [sp, #200]
  40fa40:	bl	402750 <memcmp@plt>
  40fa44:	ldr	w3, [sp, #192]
  40fa48:	ldr	w14, [sp, #200]
  40fa4c:	ldp	x6, x10, [sp, #168]
  40fa50:	ldr	x13, [sp, #184]
  40fa54:	cbnz	w0, 40fa8c <wcrtomb@plt+0xd07c>
  40fa58:	cbnz	w28, 4102d4 <wcrtomb@plt+0xd8c4>
  40fa5c:	mov	w18, w3
  40fa60:	ldr	x0, [sp, #136]
  40fa64:	ldrb	w7, [x0]
  40fa68:	cmp	w7, #0x3f
  40fa6c:	b.ls	40fab4 <wcrtomb@plt+0xd0a4>  // b.plast
  40fa70:	cmp	w7, #0x5a
  40fa74:	b.hi	40fb68 <wcrtomb@plt+0xd158>  // b.pmore
  40fa78:	cmp	w7, #0x40
  40fa7c:	b.eq	40fb78 <wcrtomb@plt+0xd168>  // b.none
  40fa80:	mov	w20, w14
  40fa84:	mov	w3, #0x0                   	// #0
  40fa88:	b	40fdcc <wcrtomb@plt+0xd3bc>
  40fa8c:	mov	w18, #0x0                   	// #0
  40fa90:	b	40fa60 <wcrtomb@plt+0xd050>
  40fa94:	cmp	w0, #0x23
  40fa98:	b.hi	40fb78 <wcrtomb@plt+0xd168>  // b.pmore
  40fa9c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  40faa0:	add	x1, x1, #0xb24
  40faa4:	ldrh	w0, [x1, w0, uxtw #1]
  40faa8:	adr	x1, 40fab4 <wcrtomb@plt+0xd0a4>
  40faac:	add	x0, x1, w0, sxth #2
  40fab0:	br	x0
  40fab4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40fab8:	add	x0, x0, #0xb6c
  40fabc:	ldrh	w0, [x0, w7, uxtw #1]
  40fac0:	adr	x1, 40facc <wcrtomb@plt+0xd0bc>
  40fac4:	add	x0, x1, w0, sxth #2
  40fac8:	br	x0
  40facc:	mov	w0, #0x72                  	// #114
  40fad0:	cmp	w28, #0x0
  40fad4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40fad8:	b.ne	40fae8 <wcrtomb@plt+0xd0d8>  // b.any
  40fadc:	mov	w25, #0x2                   	// #2
  40fae0:	b	40fd24 <wcrtomb@plt+0xd314>
  40fae4:	mov	w0, #0x62                  	// #98
  40fae8:	cbz	w22, 40fcac <wcrtomb@plt+0xd29c>
  40faec:	mov	w7, w0
  40faf0:	mov	w20, #0x0                   	// #0
  40faf4:	cmp	w25, #0x2
  40faf8:	cset	w0, eq  // eq = none
  40fafc:	cbnz	w28, 40fd24 <wcrtomb@plt+0xd314>
  40fb00:	eor	w1, w23, #0x1
  40fb04:	ands	w0, w0, w1
  40fb08:	b.eq	40fb4c <wcrtomb@plt+0xd13c>  // b.none
  40fb0c:	cmp	x27, x19
  40fb10:	b.ls	40fb1c <wcrtomb@plt+0xd10c>  // b.plast
  40fb14:	mov	w1, #0x27                  	// #39
  40fb18:	strb	w1, [x26, x19]
  40fb1c:	add	x1, x19, #0x1
  40fb20:	cmp	x27, x1
  40fb24:	b.ls	40fb30 <wcrtomb@plt+0xd120>  // b.plast
  40fb28:	mov	w2, #0x24                  	// #36
  40fb2c:	strb	w2, [x26, x1]
  40fb30:	add	x1, x19, #0x2
  40fb34:	cmp	x27, x1
  40fb38:	b.ls	40fb44 <wcrtomb@plt+0xd134>  // b.plast
  40fb3c:	mov	w2, #0x27                  	// #39
  40fb40:	strb	w2, [x26, x1]
  40fb44:	add	x19, x19, #0x3
  40fb48:	mov	w23, w0
  40fb4c:	cmp	x27, x19
  40fb50:	b.ls	40fb5c <wcrtomb@plt+0xd14c>  // b.plast
  40fb54:	mov	w0, #0x5c                  	// #92
  40fb58:	strb	w0, [x26, x19]
  40fb5c:	add	x19, x19, #0x1
  40fb60:	mov	w3, w14
  40fb64:	b	40fe08 <wcrtomb@plt+0xd3f8>
  40fb68:	sub	w0, w7, #0x5b
  40fb6c:	and	w1, w0, #0xff
  40fb70:	cmp	w1, #0x23
  40fb74:	b.ls	40fa94 <wcrtomb@plt+0xd084>  // b.plast
  40fb78:	ldr	x0, [sp, #160]
  40fb7c:	cmp	x0, #0x1
  40fb80:	b.ne	40ff78 <wcrtomb@plt+0xd568>  // b.any
  40fb84:	str	x13, [sp, #136]
  40fb88:	stp	x6, x10, [sp, #168]
  40fb8c:	str	w7, [sp, #184]
  40fb90:	str	w18, [sp, #192]
  40fb94:	str	w14, [sp, #200]
  40fb98:	bl	402790 <__ctype_b_loc@plt>
  40fb9c:	ldr	w7, [sp, #184]
  40fba0:	ldr	x0, [x0]
  40fba4:	ldp	x15, x6, [sp, #160]
  40fba8:	ldrh	w20, [x0, w7, uxtw #1]
  40fbac:	ldr	w18, [sp, #192]
  40fbb0:	ldr	w14, [sp, #200]
  40fbb4:	ldr	x13, [sp, #136]
  40fbb8:	ubfx	x20, x20, #14, #1
  40fbbc:	ldr	x10, [sp, #176]
  40fbc0:	eor	w3, w20, #0x1
  40fbc4:	and	w3, w22, w3
  40fbc8:	ands	w3, w3, #0xff
  40fbcc:	b.eq	40fdcc <wcrtomb@plt+0xd3bc>  // b.none
  40fbd0:	mov	w20, #0x0                   	// #0
  40fbd4:	b	4100e8 <wcrtomb@plt+0xd6d8>
  40fbd8:	cbz	w22, 40fca4 <wcrtomb@plt+0xd294>
  40fbdc:	cmp	w25, #0x2
  40fbe0:	cset	w0, eq  // eq = none
  40fbe4:	cbnz	w28, 4102d4 <wcrtomb@plt+0xd8c4>
  40fbe8:	eor	w1, w23, #0x1
  40fbec:	ands	w1, w0, w1
  40fbf0:	b.eq	40fc9c <wcrtomb@plt+0xd28c>  // b.none
  40fbf4:	cmp	x27, x19
  40fbf8:	b.ls	40fc04 <wcrtomb@plt+0xd1f4>  // b.plast
  40fbfc:	mov	w0, #0x27                  	// #39
  40fc00:	strb	w0, [x26, x19]
  40fc04:	add	x0, x19, #0x1
  40fc08:	cmp	x27, x0
  40fc0c:	b.ls	40fc18 <wcrtomb@plt+0xd208>  // b.plast
  40fc10:	mov	w2, #0x24                  	// #36
  40fc14:	strb	w2, [x26, x0]
  40fc18:	add	x0, x19, #0x2
  40fc1c:	cmp	x27, x0
  40fc20:	b.ls	40fc2c <wcrtomb@plt+0xd21c>  // b.plast
  40fc24:	mov	w2, #0x27                  	// #39
  40fc28:	strb	w2, [x26, x0]
  40fc2c:	add	x0, x19, #0x3
  40fc30:	mov	w23, w1
  40fc34:	cmp	x27, x0
  40fc38:	b.ls	40fc44 <wcrtomb@plt+0xd234>  // b.plast
  40fc3c:	mov	w1, #0x5c                  	// #92
  40fc40:	strb	w1, [x26, x0]
  40fc44:	add	x19, x0, #0x1
  40fc48:	cbz	w3, 410218 <wcrtomb@plt+0xd808>
  40fc4c:	add	x1, x13, #0x1
  40fc50:	cmp	x1, x24
  40fc54:	b.cs	40fc94 <wcrtomb@plt+0xd284>  // b.hs, b.nlast
  40fc58:	ldrb	w1, [x21, x1]
  40fc5c:	sub	w1, w1, #0x30
  40fc60:	and	w1, w1, #0xff
  40fc64:	cmp	w1, #0x9
  40fc68:	b.hi	40fc94 <wcrtomb@plt+0xd284>  // b.pmore
  40fc6c:	cmp	x27, x19
  40fc70:	b.ls	40fc7c <wcrtomb@plt+0xd26c>  // b.plast
  40fc74:	mov	w1, #0x30                  	// #48
  40fc78:	strb	w1, [x26, x19]
  40fc7c:	add	x1, x0, #0x2
  40fc80:	cmp	x27, x1
  40fc84:	b.ls	40fc90 <wcrtomb@plt+0xd280>  // b.plast
  40fc88:	mov	w2, #0x30                  	// #48
  40fc8c:	strb	w2, [x26, x1]
  40fc90:	add	x19, x0, #0x3
  40fc94:	mov	w20, #0x0                   	// #0
  40fc98:	b	410220 <wcrtomb@plt+0xd810>
  40fc9c:	mov	x0, x19
  40fca0:	b	40fc34 <wcrtomb@plt+0xd224>
  40fca4:	ldr	x0, [sp, #120]
  40fca8:	tbnz	w0, #0, 40fe60 <wcrtomb@plt+0xd450>
  40fcac:	mov	w20, #0x0                   	// #0
  40fcb0:	b	40fa84 <wcrtomb@plt+0xd074>
  40fcb4:	cmp	w25, #0x2
  40fcb8:	b.eq	40fd20 <wcrtomb@plt+0xd310>  // b.none
  40fcbc:	cmp	w25, #0x5
  40fcc0:	b.ne	40fcac <wcrtomb@plt+0xd29c>  // b.any
  40fcc4:	ldr	x0, [sp, #120]
  40fcc8:	tbz	w0, #2, 40fcac <wcrtomb@plt+0xd29c>
  40fccc:	add	x1, x13, #0x2
  40fcd0:	cmp	x1, x24
  40fcd4:	b.cs	40fcac <wcrtomb@plt+0xd29c>  // b.hs, b.nlast
  40fcd8:	ldr	x0, [sp, #136]
  40fcdc:	ldrb	w0, [x0, #1]
  40fce0:	cmp	w0, #0x3f
  40fce4:	b.ne	40fcac <wcrtomb@plt+0xd29c>  // b.any
  40fce8:	ldrb	w7, [x21, x1]
  40fcec:	cmp	w7, #0x2f
  40fcf0:	b.hi	40fd5c <wcrtomb@plt+0xd34c>  // b.pmore
  40fcf4:	cmp	w7, #0x20
  40fcf8:	b.ls	410230 <wcrtomb@plt+0xd820>  // b.plast
  40fcfc:	sub	w2, w7, #0x21
  40fd00:	cmp	w2, #0xe
  40fd04:	b.hi	410228 <wcrtomb@plt+0xd818>  // b.pmore
  40fd08:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  40fd0c:	add	x0, x0, #0xbec
  40fd10:	ldrh	w0, [x0, w2, uxtw #1]
  40fd14:	adr	x2, 40fd20 <wcrtomb@plt+0xd310>
  40fd18:	add	x0, x2, w0, sxth #2
  40fd1c:	br	x0
  40fd20:	cbz	w28, 40fcac <wcrtomb@plt+0xd29c>
  40fd24:	ldr	x0, [sp, #240]
  40fd28:	cmp	w22, #0x0
  40fd2c:	str	x0, [sp]
  40fd30:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40fd34:	ldr	w0, [sp, #120]
  40fd38:	mov	x3, x24
  40fd3c:	mov	x2, x21
  40fd40:	mov	x1, x27
  40fd44:	and	w5, w0, #0xfffffffd
  40fd48:	mov	x6, #0x0                   	// #0
  40fd4c:	mov	w0, #0x4                   	// #4
  40fd50:	csel	w4, w25, w0, ne  // ne = any
  40fd54:	ldr	x7, [sp, #128]
  40fd58:	b	40f894 <wcrtomb@plt+0xce84>
  40fd5c:	sub	w2, w7, #0x3c
  40fd60:	and	w2, w2, #0xff
  40fd64:	cmp	w2, #0x2
  40fd68:	b.hi	410230 <wcrtomb@plt+0xd820>  // b.pmore
  40fd6c:	cbnz	w28, 40fd24 <wcrtomb@plt+0xd314>
  40fd70:	cmp	x27, x19
  40fd74:	b.ls	40fd80 <wcrtomb@plt+0xd370>  // b.plast
  40fd78:	mov	w0, #0x3f                  	// #63
  40fd7c:	strb	w0, [x26, x19]
  40fd80:	add	x0, x19, #0x1
  40fd84:	cmp	x27, x0
  40fd88:	b.ls	40fd94 <wcrtomb@plt+0xd384>  // b.plast
  40fd8c:	mov	w2, #0x22                  	// #34
  40fd90:	strb	w2, [x26, x0]
  40fd94:	add	x0, x19, #0x2
  40fd98:	cmp	x27, x0
  40fd9c:	b.ls	40fda8 <wcrtomb@plt+0xd398>  // b.plast
  40fda0:	mov	w2, #0x22                  	// #34
  40fda4:	strb	w2, [x26, x0]
  40fda8:	add	x0, x19, #0x3
  40fdac:	cmp	x27, x0
  40fdb0:	b.ls	40fdbc <wcrtomb@plt+0xd3ac>  // b.plast
  40fdb4:	mov	w2, #0x3f                  	// #63
  40fdb8:	strb	w2, [x26, x0]
  40fdbc:	add	x19, x19, #0x4
  40fdc0:	mov	x13, x1
  40fdc4:	mov	w20, #0x0                   	// #0
  40fdc8:	mov	w3, #0x0                   	// #0
  40fdcc:	cmp	w25, #0x2
  40fdd0:	eor	w0, w22, #0x1
  40fdd4:	cset	w1, eq  // eq = none
  40fdd8:	orr	w0, w1, w0
  40fddc:	tst	w0, #0xff
  40fde0:	b.eq	40fde8 <wcrtomb@plt+0xd3d8>  // b.none
  40fde4:	cbz	w28, 40fe04 <wcrtomb@plt+0xd3f4>
  40fde8:	ldr	x0, [sp, #152]
  40fdec:	cbz	x0, 40fe04 <wcrtomb@plt+0xd3f4>
  40fdf0:	ldr	x1, [sp, #152]
  40fdf4:	ubfx	x0, x7, #5, #8
  40fdf8:	ldr	w0, [x1, x0, lsl #2]
  40fdfc:	lsr	w0, w0, w7
  40fe00:	tbnz	w0, #0, 40faf4 <wcrtomb@plt+0xd0e4>
  40fe04:	cbnz	w18, 40faf4 <wcrtomb@plt+0xd0e4>
  40fe08:	eor	w3, w3, #0x1
  40fe0c:	tst	w23, w3
  40fe10:	b.eq	40fe40 <wcrtomb@plt+0xd430>  // b.none
  40fe14:	cmp	x27, x19
  40fe18:	b.ls	40fe24 <wcrtomb@plt+0xd414>  // b.plast
  40fe1c:	mov	w0, #0x27                  	// #39
  40fe20:	strb	w0, [x26, x19]
  40fe24:	add	x0, x19, #0x1
  40fe28:	cmp	x27, x0
  40fe2c:	b.ls	40fe38 <wcrtomb@plt+0xd428>  // b.plast
  40fe30:	mov	w1, #0x27                  	// #39
  40fe34:	strb	w1, [x26, x0]
  40fe38:	add	x19, x19, #0x2
  40fe3c:	mov	w23, #0x0                   	// #0
  40fe40:	cmp	x27, x19
  40fe44:	b.ls	40fe4c <wcrtomb@plt+0xd43c>  // b.plast
  40fe48:	strb	w7, [x26, x19]
  40fe4c:	ldr	w0, [sp, #148]
  40fe50:	cmp	w20, #0x0
  40fe54:	add	x19, x19, #0x1
  40fe58:	csel	w0, w0, wzr, ne  // ne = any
  40fe5c:	str	w0, [sp, #148]
  40fe60:	add	x13, x13, #0x1
  40fe64:	b	40f824 <wcrtomb@plt+0xce14>
  40fe68:	mov	w0, #0x74                  	// #116
  40fe6c:	b	40fad0 <wcrtomb@plt+0xd0c0>
  40fe70:	mov	w0, #0x76                  	// #118
  40fe74:	b	40fae8 <wcrtomb@plt+0xd0d8>
  40fe78:	cmp	w25, #0x2
  40fe7c:	b.ne	40fe90 <wcrtomb@plt+0xd480>  // b.any
  40fe80:	cbnz	w28, 40fd24 <wcrtomb@plt+0xd314>
  40fe84:	mov	w20, #0x0                   	// #0
  40fe88:	mov	w3, #0x0                   	// #0
  40fe8c:	b	40fe08 <wcrtomb@plt+0xd3f8>
  40fe90:	cmp	w22, #0x0
  40fe94:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40fe98:	b.eq	40fea0 <wcrtomb@plt+0xd490>  // b.none
  40fe9c:	cbnz	x10, 40fe84 <wcrtomb@plt+0xd474>
  40fea0:	mov	w0, w7
  40fea4:	b	40fad0 <wcrtomb@plt+0xd0c0>
  40fea8:	mov	w0, #0x6e                  	// #110
  40feac:	b	40fad0 <wcrtomb@plt+0xd0c0>
  40feb0:	mov	w0, #0x61                  	// #97
  40feb4:	b	40fae8 <wcrtomb@plt+0xd0d8>
  40feb8:	mov	w0, #0x66                  	// #102
  40febc:	b	40fae8 <wcrtomb@plt+0xd0d8>
  40fec0:	cmn	x24, #0x1
  40fec4:	b.ne	40fef0 <wcrtomb@plt+0xd4e0>  // b.any
  40fec8:	ldrb	w0, [x21, #1]
  40fecc:	cmp	w0, #0x0
  40fed0:	cset	w0, ne  // ne = any
  40fed4:	cbnz	w0, 40fcac <wcrtomb@plt+0xd29c>
  40fed8:	cbnz	x13, 40fcac <wcrtomb@plt+0xd29c>
  40fedc:	mov	w20, w14
  40fee0:	cmp	w25, #0x2
  40fee4:	csel	w3, w28, wzr, eq  // eq = none
  40fee8:	cbz	w3, 40fdcc <wcrtomb@plt+0xd3bc>
  40feec:	b	40fadc <wcrtomb@plt+0xd0cc>
  40fef0:	cmp	x24, #0x1
  40fef4:	b	40fed0 <wcrtomb@plt+0xd4c0>
  40fef8:	mov	w20, #0x0                   	// #0
  40fefc:	b	40fee0 <wcrtomb@plt+0xd4d0>
  40ff00:	cmp	w25, #0x2
  40ff04:	b.ne	410238 <wcrtomb@plt+0xd828>  // b.any
  40ff08:	cbnz	w28, 40fd24 <wcrtomb@plt+0xd314>
  40ff0c:	ldr	x0, [sp, #112]
  40ff10:	cmp	x27, #0x0
  40ff14:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  40ff18:	b.eq	40ff6c <wcrtomb@plt+0xd55c>  // b.none
  40ff1c:	cmp	x27, x19
  40ff20:	b.ls	40ff2c <wcrtomb@plt+0xd51c>  // b.plast
  40ff24:	mov	w0, #0x27                  	// #39
  40ff28:	strb	w0, [x26, x19]
  40ff2c:	add	x0, x19, #0x1
  40ff30:	cmp	x0, x27
  40ff34:	b.cs	40ff40 <wcrtomb@plt+0xd530>  // b.hs, b.nlast
  40ff38:	mov	w1, #0x5c                  	// #92
  40ff3c:	strb	w1, [x26, x0]
  40ff40:	add	x0, x19, #0x2
  40ff44:	cmp	x0, x27
  40ff48:	b.cs	40ff54 <wcrtomb@plt+0xd544>  // b.hs, b.nlast
  40ff4c:	mov	w1, #0x27                  	// #39
  40ff50:	strb	w1, [x26, x0]
  40ff54:	add	x19, x19, #0x3
  40ff58:	mov	w20, w14
  40ff5c:	mov	w3, #0x0                   	// #0
  40ff60:	mov	w23, #0x0                   	// #0
  40ff64:	str	w14, [sp, #144]
  40ff68:	b	40fdcc <wcrtomb@plt+0xd3bc>
  40ff6c:	str	x27, [sp, #112]
  40ff70:	mov	x27, #0x0                   	// #0
  40ff74:	b	40ff2c <wcrtomb@plt+0xd51c>
  40ff78:	str	xzr, [sp, #232]
  40ff7c:	cmn	x24, #0x1
  40ff80:	b.ne	40ffb8 <wcrtomb@plt+0xd5a8>  // b.any
  40ff84:	mov	x0, x21
  40ff88:	stp	x13, x6, [sp, #168]
  40ff8c:	str	x10, [sp, #184]
  40ff90:	str	w7, [sp, #192]
  40ff94:	str	w18, [sp, #200]
  40ff98:	str	w14, [sp, #208]
  40ff9c:	bl	4023c0 <strlen@plt>
  40ffa0:	ldp	x13, x6, [sp, #168]
  40ffa4:	mov	x24, x0
  40ffa8:	ldr	w7, [sp, #192]
  40ffac:	ldr	w18, [sp, #200]
  40ffb0:	ldr	w14, [sp, #208]
  40ffb4:	ldr	x10, [sp, #184]
  40ffb8:	mov	w20, w14
  40ffbc:	mov	x15, #0x0                   	// #0
  40ffc0:	add	x2, x13, x15
  40ffc4:	add	x3, sp, #0xe8
  40ffc8:	add	x1, x21, x2
  40ffcc:	add	x0, sp, #0xe4
  40ffd0:	sub	x2, x24, x2
  40ffd4:	stp	x1, x13, [sp, #168]
  40ffd8:	stp	x15, x6, [sp, #184]
  40ffdc:	str	x10, [sp, #200]
  40ffe0:	stp	w7, w18, [sp, #208]
  40ffe4:	str	w14, [sp, #216]
  40ffe8:	bl	413374 <wcrtomb@plt+0x10964>
  40ffec:	ldp	w7, w18, [sp, #208]
  40fff0:	mov	x3, x0
  40fff4:	ldr	w14, [sp, #216]
  40fff8:	ldp	x13, x15, [sp, #176]
  40fffc:	ldp	x6, x10, [sp, #192]
  410000:	cbz	x0, 4100e0 <wcrtomb@plt+0xd6d0>
  410004:	cmn	x0, #0x1
  410008:	b.eq	410030 <wcrtomb@plt+0xd620>  // b.none
  41000c:	cmn	x0, #0x2
  410010:	ldr	x1, [sp, #168]
  410014:	b.ne	410040 <wcrtomb@plt+0xd630>  // b.any
  410018:	add	x0, x13, x15
  41001c:	cmp	x24, x0
  410020:	b.ls	410030 <wcrtomb@plt+0xd620>  // b.plast
  410024:	ldr	x0, [sp, #136]
  410028:	ldrb	w0, [x0, x15]
  41002c:	cbnz	w0, 410038 <wcrtomb@plt+0xd628>
  410030:	mov	w20, #0x0                   	// #0
  410034:	b	4100e0 <wcrtomb@plt+0xd6d0>
  410038:	add	x15, x15, #0x1
  41003c:	b	410018 <wcrtomb@plt+0xd608>
  410040:	cmp	w28, #0x0
  410044:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  410048:	b.ne	41008c <wcrtomb@plt+0xd67c>  // b.any
  41004c:	mov	x0, #0x1                   	// #1
  410050:	b	410084 <wcrtomb@plt+0xd674>
  410054:	ldrb	w2, [x1, x0]
  410058:	sub	w2, w2, #0x5b
  41005c:	and	w2, w2, #0xff
  410060:	cmp	w2, #0x21
  410064:	b.hi	410080 <wcrtomb@plt+0xd670>  // b.pmore
  410068:	mov	x4, #0x1                   	// #1
  41006c:	lsl	x2, x4, x2
  410070:	mov	x4, #0x2b                  	// #43
  410074:	movk	x4, #0x2, lsl #32
  410078:	tst	x2, x4
  41007c:	b.ne	40fadc <wcrtomb@plt+0xd0cc>  // b.any
  410080:	add	x0, x0, #0x1
  410084:	cmp	x0, x3
  410088:	b.ne	410054 <wcrtomb@plt+0xd644>  // b.any
  41008c:	ldr	w0, [sp, #228]
  410090:	stp	x15, x13, [sp, #168]
  410094:	stp	x6, x10, [sp, #184]
  410098:	str	w7, [sp, #200]
  41009c:	stp	w18, w14, [sp, #208]
  4100a0:	str	x3, [sp, #216]
  4100a4:	bl	402930 <iswprint@plt>
  4100a8:	ldr	x15, [sp, #168]
  4100ac:	cmp	w0, #0x0
  4100b0:	ldr	x3, [sp, #216]
  4100b4:	csel	w20, w20, wzr, ne  // ne = any
  4100b8:	add	x0, sp, #0xe8
  4100bc:	add	x15, x15, x3
  4100c0:	str	x15, [sp, #168]
  4100c4:	str	x15, [sp, #216]
  4100c8:	bl	402710 <mbsinit@plt>
  4100cc:	ldr	w7, [sp, #200]
  4100d0:	ldp	w18, w14, [sp, #208]
  4100d4:	ldp	x15, x13, [sp, #168]
  4100d8:	ldp	x6, x10, [sp, #184]
  4100dc:	cbz	w0, 40ffc0 <wcrtomb@plt+0xd5b0>
  4100e0:	cmp	x15, #0x1
  4100e4:	b.ls	40fbc0 <wcrtomb@plt+0xd1b0>  // b.plast
  4100e8:	eor	w0, w20, #0x1
  4100ec:	add	x15, x13, x15
  4100f0:	and	w0, w22, w0
  4100f4:	mov	w3, #0x0                   	// #0
  4100f8:	and	w0, w0, #0xff
  4100fc:	mov	w16, #0x5c                  	// #92
  410100:	mov	w1, #0x27                  	// #39
  410104:	mov	w17, #0x24                  	// #36
  410108:	cbz	w0, 4101fc <wcrtomb@plt+0xd7ec>
  41010c:	cmp	w25, #0x2
  410110:	cset	w3, eq  // eq = none
  410114:	cbnz	w28, 4102d4 <wcrtomb@plt+0xd8c4>
  410118:	eor	w2, w23, #0x1
  41011c:	ands	w2, w3, w2
  410120:	b.eq	410158 <wcrtomb@plt+0xd748>  // b.none
  410124:	cmp	x27, x19
  410128:	b.ls	410130 <wcrtomb@plt+0xd720>  // b.plast
  41012c:	strb	w1, [x26, x19]
  410130:	add	x3, x19, #0x1
  410134:	cmp	x27, x3
  410138:	b.ls	410140 <wcrtomb@plt+0xd730>  // b.plast
  41013c:	strb	w17, [x26, x3]
  410140:	add	x3, x19, #0x2
  410144:	cmp	x27, x3
  410148:	b.ls	410150 <wcrtomb@plt+0xd740>  // b.plast
  41014c:	strb	w1, [x26, x3]
  410150:	add	x19, x19, #0x3
  410154:	mov	w23, w2
  410158:	cmp	x27, x19
  41015c:	b.ls	410164 <wcrtomb@plt+0xd754>  // b.plast
  410160:	strb	w16, [x26, x19]
  410164:	add	x3, x19, #0x1
  410168:	cmp	x27, x3
  41016c:	b.ls	41017c <wcrtomb@plt+0xd76c>  // b.plast
  410170:	lsr	w2, w7, #6
  410174:	add	w2, w2, #0x30
  410178:	strb	w2, [x26, x3]
  41017c:	add	x3, x19, #0x2
  410180:	cmp	x27, x3
  410184:	b.ls	410194 <wcrtomb@plt+0xd784>  // b.plast
  410188:	ubfx	x2, x7, #3, #3
  41018c:	add	w2, w2, #0x30
  410190:	strb	w2, [x26, x3]
  410194:	and	w7, w7, #0x7
  410198:	add	x19, x19, #0x3
  41019c:	add	w7, w7, #0x30
  4101a0:	mov	w3, w0
  4101a4:	add	x2, x13, #0x1
  4101a8:	eor	w14, w3, #0x1
  4101ac:	and	w14, w23, w14
  4101b0:	cmp	x2, x15
  4101b4:	b.cs	40fe08 <wcrtomb@plt+0xd3f8>  // b.hs, b.nlast
  4101b8:	cbz	w14, 4101e0 <wcrtomb@plt+0xd7d0>
  4101bc:	cmp	x27, x19
  4101c0:	b.ls	4101c8 <wcrtomb@plt+0xd7b8>  // b.plast
  4101c4:	strb	w1, [x26, x19]
  4101c8:	add	x13, x19, #0x1
  4101cc:	cmp	x27, x13
  4101d0:	b.ls	4101d8 <wcrtomb@plt+0xd7c8>  // b.plast
  4101d4:	strb	w1, [x26, x13]
  4101d8:	add	x19, x19, #0x2
  4101dc:	mov	w23, #0x0                   	// #0
  4101e0:	cmp	x27, x19
  4101e4:	b.ls	4101ec <wcrtomb@plt+0xd7dc>  // b.plast
  4101e8:	strb	w7, [x26, x19]
  4101ec:	ldrb	w7, [x21, x2]
  4101f0:	add	x19, x19, #0x1
  4101f4:	mov	x13, x2
  4101f8:	b	410108 <wcrtomb@plt+0xd6f8>
  4101fc:	cbz	w18, 4101a4 <wcrtomb@plt+0xd794>
  410200:	cmp	x27, x19
  410204:	b.ls	41020c <wcrtomb@plt+0xd7fc>  // b.plast
  410208:	strb	w16, [x26, x19]
  41020c:	add	x19, x19, #0x1
  410210:	mov	w18, #0x0                   	// #0
  410214:	b	4101a4 <wcrtomb@plt+0xd794>
  410218:	mov	w3, w22
  41021c:	mov	w20, #0x0                   	// #0
  410220:	mov	w7, #0x30                  	// #48
  410224:	b	40fdcc <wcrtomb@plt+0xd3bc>
  410228:	mov	w7, #0x3f                  	// #63
  41022c:	b	40fcac <wcrtomb@plt+0xd29c>
  410230:	mov	w7, w0
  410234:	b	40fcac <wcrtomb@plt+0xd29c>
  410238:	mov	w20, w14
  41023c:	str	w14, [sp, #144]
  410240:	b	40fa84 <wcrtomb@plt+0xd074>
  410244:	cmp	x24, x13
  410248:	b	40f834 <wcrtomb@plt+0xce24>
  41024c:	ldr	x0, [sp, #112]
  410250:	cmp	x27, #0x0
  410254:	cset	w28, eq  // eq = none
  410258:	mov	w25, #0x2                   	// #2
  41025c:	cmp	x0, #0x0
  410260:	csel	w20, w28, wzr, ne  // ne = any
  410264:	cbnz	w20, 40f7d8 <wcrtomb@plt+0xcdc8>
  410268:	ldr	w0, [sp, #144]
  41026c:	cmp	x6, #0x0
  410270:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  410274:	mov	x0, x19
  410278:	b.ne	4102cc <wcrtomb@plt+0xd8bc>  // b.any
  41027c:	cmp	x27, x0
  410280:	b.ls	410288 <wcrtomb@plt+0xd878>  // b.plast
  410284:	strb	wzr, [x26, x0]
  410288:	ldp	x29, x30, [sp, #16]
  41028c:	ldp	x19, x20, [sp, #32]
  410290:	ldp	x21, x22, [sp, #48]
  410294:	ldp	x23, x24, [sp, #64]
  410298:	ldp	x25, x26, [sp, #80]
  41029c:	ldp	x27, x28, [sp, #96]
  4102a0:	add	sp, sp, #0xf0
  4102a4:	ret
  4102a8:	mov	w0, w5
  4102ac:	b	41026c <wcrtomb@plt+0xd85c>
  4102b0:	cmp	x27, x0
  4102b4:	b.ls	4102bc <wcrtomb@plt+0xd8ac>  // b.plast
  4102b8:	strb	w1, [x26, x0]
  4102bc:	add	x0, x0, #0x1
  4102c0:	ldrb	w1, [x6, x0]
  4102c4:	cbnz	w1, 4102b0 <wcrtomb@plt+0xd8a0>
  4102c8:	b	41027c <wcrtomb@plt+0xd86c>
  4102cc:	sub	x6, x6, x19
  4102d0:	b	4102c0 <wcrtomb@plt+0xd8b0>
  4102d4:	mov	w22, w28
  4102d8:	b	40fd24 <wcrtomb@plt+0xd314>
  4102dc:	sub	sp, sp, #0x80
  4102e0:	stp	x29, x30, [sp, #16]
  4102e4:	add	x29, sp, #0x10
  4102e8:	stp	x19, x20, [sp, #32]
  4102ec:	mov	w19, w0
  4102f0:	mov	x20, x3
  4102f4:	stp	x21, x22, [sp, #48]
  4102f8:	stp	x23, x24, [sp, #64]
  4102fc:	mov	x24, x1
  410300:	stp	x25, x26, [sp, #80]
  410304:	mov	x25, x2
  410308:	stp	x27, x28, [sp, #96]
  41030c:	bl	402980 <__errno_location@plt>
  410310:	mov	x23, x0
  410314:	ldr	w0, [x0]
  410318:	adrp	x27, 437000 <_obstack_memory_used@@Base+0x23900>
  41031c:	str	w0, [sp, #116]
  410320:	ldr	x28, [x27, #1008]
  410324:	tbz	w19, #31, 41032c <wcrtomb@plt+0xd91c>
  410328:	bl	4026f0 <abort@plt>
  41032c:	add	x22, x27, #0x3f0
  410330:	ldr	w0, [x22, #8]
  410334:	cmp	w0, w19
  410338:	b.gt	4103a4 <wcrtomb@plt+0xd994>
  41033c:	mov	w0, #0x7fffffff            	// #2147483647
  410340:	cmp	w19, w0
  410344:	b.ne	41034c <wcrtomb@plt+0xd93c>  // b.any
  410348:	bl	411200 <wcrtomb@plt+0xe7f0>
  41034c:	add	x2, x22, #0x10
  410350:	add	w26, w19, #0x1
  410354:	cmp	x28, x2
  410358:	str	x2, [sp, #120]
  41035c:	csel	x0, x28, xzr, ne  // ne = any
  410360:	sbfiz	x1, x26, #4, #32
  410364:	bl	41108c <wcrtomb@plt+0xe67c>
  410368:	str	x0, [x27, #1008]
  41036c:	ldr	x2, [sp, #120]
  410370:	mov	x21, x0
  410374:	cmp	x28, x2
  410378:	b.ne	410384 <wcrtomb@plt+0xd974>  // b.any
  41037c:	ldp	x0, x1, [x22, #16]
  410380:	stp	x0, x1, [x21]
  410384:	ldr	w0, [x22, #8]
  410388:	mov	x28, x21
  41038c:	mov	w1, #0x0                   	// #0
  410390:	sub	w2, w26, w0
  410394:	add	x0, x21, w0, sxtw #4
  410398:	sbfiz	x2, x2, #4, #32
  41039c:	bl	4025f0 <memset@plt>
  4103a0:	str	w26, [x22, #8]
  4103a4:	sbfiz	x9, x19, #4, #32
  4103a8:	add	x19, x28, w19, sxtw #4
  4103ac:	ldp	x7, x0, [x20, #40]
  4103b0:	add	x27, x20, #0x8
  4103b4:	ldp	w4, w26, [x20]
  4103b8:	mov	x6, x27
  4103bc:	ldr	x22, [x28, x9]
  4103c0:	orr	w26, w26, #0x1
  4103c4:	ldr	x21, [x19, #8]
  4103c8:	str	x0, [sp]
  4103cc:	mov	x3, x25
  4103d0:	mov	x2, x24
  4103d4:	mov	x1, x22
  4103d8:	mov	w5, w26
  4103dc:	mov	x0, x21
  4103e0:	str	x9, [sp, #120]
  4103e4:	bl	40f748 <wcrtomb@plt+0xcd38>
  4103e8:	cmp	x22, x0
  4103ec:	b.hi	410448 <wcrtomb@plt+0xda38>  // b.pmore
  4103f0:	ldr	x9, [sp, #120]
  4103f4:	add	x22, x0, #0x1
  4103f8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4103fc:	add	x0, x0, #0x7a0
  410400:	cmp	x21, x0
  410404:	str	x22, [x28, x9]
  410408:	b.eq	410414 <wcrtomb@plt+0xda04>  // b.none
  41040c:	mov	x0, x21
  410410:	bl	4027a0 <free@plt>
  410414:	mov	x0, x22
  410418:	bl	41102c <wcrtomb@plt+0xe61c>
  41041c:	ldp	x7, x1, [x20, #40]
  410420:	mov	x21, x0
  410424:	ldr	w4, [x20]
  410428:	mov	x6, x27
  41042c:	str	x0, [x19, #8]
  410430:	mov	w5, w26
  410434:	str	x1, [sp]
  410438:	mov	x3, x25
  41043c:	mov	x2, x24
  410440:	mov	x1, x22
  410444:	bl	40f748 <wcrtomb@plt+0xcd38>
  410448:	ldr	w0, [sp, #116]
  41044c:	ldp	x29, x30, [sp, #16]
  410450:	ldp	x19, x20, [sp, #32]
  410454:	ldp	x25, x26, [sp, #80]
  410458:	ldp	x27, x28, [sp, #96]
  41045c:	str	w0, [x23]
  410460:	mov	x0, x21
  410464:	ldp	x21, x22, [sp, #48]
  410468:	ldp	x23, x24, [sp, #64]
  41046c:	add	sp, sp, #0x80
  410470:	ret
  410474:	stp	x29, x30, [sp, #-48]!
  410478:	mov	x29, sp
  41047c:	stp	x19, x20, [sp, #16]
  410480:	mov	x19, x0
  410484:	str	x21, [sp, #32]
  410488:	bl	402980 <__errno_location@plt>
  41048c:	ldr	w21, [x0]
  410490:	mov	x20, x0
  410494:	cbnz	x19, 4104a4 <wcrtomb@plt+0xda94>
  410498:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  41049c:	add	x19, x19, #0x7a0
  4104a0:	add	x19, x19, #0x100
  4104a4:	mov	x0, x19
  4104a8:	mov	x1, #0x38                  	// #56
  4104ac:	bl	4111a8 <wcrtomb@plt+0xe798>
  4104b0:	str	w21, [x20]
  4104b4:	ldp	x19, x20, [sp, #16]
  4104b8:	ldr	x21, [sp, #32]
  4104bc:	ldp	x29, x30, [sp], #48
  4104c0:	ret
  4104c4:	cbnz	x0, 4104d4 <wcrtomb@plt+0xdac4>
  4104c8:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4104cc:	add	x0, x0, #0x7a0
  4104d0:	add	x0, x0, #0x100
  4104d4:	ldr	w0, [x0]
  4104d8:	ret
  4104dc:	cbnz	x0, 4104ec <wcrtomb@plt+0xdadc>
  4104e0:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4104e4:	add	x0, x0, #0x7a0
  4104e8:	add	x0, x0, #0x100
  4104ec:	str	w1, [x0]
  4104f0:	ret
  4104f4:	and	w1, w1, #0xff
  4104f8:	cbnz	x0, 410508 <wcrtomb@plt+0xdaf8>
  4104fc:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  410500:	add	x0, x0, #0x7a0
  410504:	add	x0, x0, #0x100
  410508:	ubfx	x4, x1, #5, #3
  41050c:	add	x0, x0, #0x8
  410510:	and	w3, w1, #0x1f
  410514:	lsl	x4, x4, #2
  410518:	ldr	w6, [x0, x4]
  41051c:	lsr	w5, w6, w3
  410520:	eor	w1, w5, w2
  410524:	and	w1, w1, #0x1
  410528:	lsl	w1, w1, w3
  41052c:	eor	w1, w1, w6
  410530:	str	w1, [x0, x4]
  410534:	and	w0, w5, #0x1
  410538:	ret
  41053c:	mov	x2, x0
  410540:	cbnz	x0, 410550 <wcrtomb@plt+0xdb40>
  410544:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  410548:	add	x2, x2, #0x7a0
  41054c:	add	x2, x2, #0x100
  410550:	ldr	w0, [x2, #4]
  410554:	str	w1, [x2, #4]
  410558:	ret
  41055c:	cbnz	x0, 41056c <wcrtomb@plt+0xdb5c>
  410560:	adrp	x0, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  410564:	add	x0, x0, #0x7a0
  410568:	add	x0, x0, #0x100
  41056c:	mov	w3, #0xa                   	// #10
  410570:	str	w3, [x0]
  410574:	cmp	x1, #0x0
  410578:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41057c:	b.ne	41058c <wcrtomb@plt+0xdb7c>  // b.any
  410580:	stp	x29, x30, [sp, #-16]!
  410584:	mov	x29, sp
  410588:	bl	4026f0 <abort@plt>
  41058c:	stp	x1, x2, [x0, #40]
  410590:	ret
  410594:	sub	sp, sp, #0x60
  410598:	stp	x29, x30, [sp, #16]
  41059c:	add	x29, sp, #0x10
  4105a0:	stp	x19, x20, [sp, #32]
  4105a4:	stp	x21, x22, [sp, #48]
  4105a8:	mov	x21, x0
  4105ac:	mov	x22, x1
  4105b0:	stp	x23, x24, [sp, #64]
  4105b4:	mov	x23, x2
  4105b8:	mov	x24, x3
  4105bc:	str	x25, [sp, #80]
  4105c0:	cbnz	x4, 410624 <wcrtomb@plt+0xdc14>
  4105c4:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4105c8:	add	x19, x19, #0x7a0
  4105cc:	add	x19, x19, #0x100
  4105d0:	bl	402980 <__errno_location@plt>
  4105d4:	ldr	w25, [x0]
  4105d8:	mov	x20, x0
  4105dc:	add	x6, x19, #0x8
  4105e0:	ldr	x0, [x19, #48]
  4105e4:	str	x0, [sp]
  4105e8:	mov	x3, x24
  4105ec:	mov	x2, x23
  4105f0:	ldp	w4, w5, [x19]
  4105f4:	mov	x1, x22
  4105f8:	ldr	x7, [x19, #40]
  4105fc:	mov	x0, x21
  410600:	bl	40f748 <wcrtomb@plt+0xcd38>
  410604:	ldp	x29, x30, [sp, #16]
  410608:	ldp	x21, x22, [sp, #48]
  41060c:	ldp	x23, x24, [sp, #64]
  410610:	str	w25, [x20]
  410614:	ldp	x19, x20, [sp, #32]
  410618:	ldr	x25, [sp, #80]
  41061c:	add	sp, sp, #0x60
  410620:	ret
  410624:	mov	x19, x4
  410628:	b	4105d0 <wcrtomb@plt+0xdbc0>
  41062c:	sub	sp, sp, #0x80
  410630:	stp	x29, x30, [sp, #16]
  410634:	add	x29, sp, #0x10
  410638:	stp	x19, x20, [sp, #32]
  41063c:	mov	x20, x2
  410640:	stp	x21, x22, [sp, #48]
  410644:	stp	x23, x24, [sp, #64]
  410648:	mov	x23, x0
  41064c:	mov	x24, x1
  410650:	stp	x25, x26, [sp, #80]
  410654:	stp	x27, x28, [sp, #96]
  410658:	cbnz	x3, 410728 <wcrtomb@plt+0xdd18>
  41065c:	adrp	x19, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  410660:	add	x19, x19, #0x7a0
  410664:	add	x19, x19, #0x100
  410668:	bl	402980 <__errno_location@plt>
  41066c:	ldr	w8, [x0]
  410670:	mov	x22, x0
  410674:	ldr	w5, [x19, #4]
  410678:	ldr	x0, [x19, #48]
  41067c:	str	x0, [sp]
  410680:	cmp	x20, #0x0
  410684:	add	x28, x19, #0x8
  410688:	cset	w25, eq  // eq = none
  41068c:	ldr	w4, [x19]
  410690:	ldr	x7, [x19, #40]
  410694:	orr	w25, w25, w5
  410698:	mov	x6, x28
  41069c:	mov	x3, x24
  4106a0:	mov	x2, x23
  4106a4:	mov	w5, w25
  4106a8:	mov	x1, #0x0                   	// #0
  4106ac:	mov	x0, #0x0                   	// #0
  4106b0:	str	w8, [sp, #124]
  4106b4:	bl	40f748 <wcrtomb@plt+0xcd38>
  4106b8:	add	x27, x0, #0x1
  4106bc:	mov	x21, x0
  4106c0:	mov	x0, x27
  4106c4:	bl	41102c <wcrtomb@plt+0xe61c>
  4106c8:	ldr	x1, [x19, #48]
  4106cc:	str	x1, [sp]
  4106d0:	mov	x26, x0
  4106d4:	mov	x6, x28
  4106d8:	ldr	w4, [x19]
  4106dc:	mov	w5, w25
  4106e0:	ldr	x7, [x19, #40]
  4106e4:	mov	x3, x24
  4106e8:	mov	x2, x23
  4106ec:	mov	x1, x27
  4106f0:	bl	40f748 <wcrtomb@plt+0xcd38>
  4106f4:	ldr	w8, [sp, #124]
  4106f8:	str	w8, [x22]
  4106fc:	cbz	x20, 410704 <wcrtomb@plt+0xdcf4>
  410700:	str	x21, [x20]
  410704:	mov	x0, x26
  410708:	ldp	x29, x30, [sp, #16]
  41070c:	ldp	x19, x20, [sp, #32]
  410710:	ldp	x21, x22, [sp, #48]
  410714:	ldp	x23, x24, [sp, #64]
  410718:	ldp	x25, x26, [sp, #80]
  41071c:	ldp	x27, x28, [sp, #96]
  410720:	add	sp, sp, #0x80
  410724:	ret
  410728:	mov	x19, x3
  41072c:	b	410668 <wcrtomb@plt+0xdc58>
  410730:	mov	x3, x2
  410734:	mov	x2, #0x0                   	// #0
  410738:	b	41062c <wcrtomb@plt+0xdc1c>
  41073c:	stp	x29, x30, [sp, #-64]!
  410740:	mov	x29, sp
  410744:	stp	x19, x20, [sp, #16]
  410748:	adrp	x20, 437000 <_obstack_memory_used@@Base+0x23900>
  41074c:	add	x19, x20, #0x3f0
  410750:	stp	x21, x22, [sp, #32]
  410754:	mov	x22, #0x0                   	// #0
  410758:	ldr	x21, [x20, #1008]
  41075c:	str	x23, [sp, #48]
  410760:	add	x23, x21, #0x8
  410764:	ldr	w0, [x19, #8]
  410768:	add	x22, x22, #0x1
  41076c:	cmp	w0, w22
  410770:	b.gt	4107c8 <wcrtomb@plt+0xddb8>
  410774:	ldr	x0, [x21, #8]
  410778:	adrp	x22, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  41077c:	add	x22, x22, #0x7a0
  410780:	cmp	x0, x22
  410784:	b.eq	410794 <wcrtomb@plt+0xdd84>  // b.none
  410788:	bl	4027a0 <free@plt>
  41078c:	mov	x0, #0x100                 	// #256
  410790:	stp	x0, x22, [x19, #16]
  410794:	add	x22, x19, #0x10
  410798:	cmp	x21, x22
  41079c:	b.eq	4107ac <wcrtomb@plt+0xdd9c>  // b.none
  4107a0:	mov	x0, x21
  4107a4:	bl	4027a0 <free@plt>
  4107a8:	str	x22, [x20, #1008]
  4107ac:	mov	w0, #0x1                   	// #1
  4107b0:	str	w0, [x19, #8]
  4107b4:	ldp	x19, x20, [sp, #16]
  4107b8:	ldp	x21, x22, [sp, #32]
  4107bc:	ldr	x23, [sp, #48]
  4107c0:	ldp	x29, x30, [sp], #64
  4107c4:	ret
  4107c8:	lsl	x0, x22, #4
  4107cc:	ldr	x0, [x23, x0]
  4107d0:	bl	4027a0 <free@plt>
  4107d4:	b	410764 <wcrtomb@plt+0xdd54>
  4107d8:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4107dc:	add	x3, x3, #0x7a0
  4107e0:	add	x3, x3, #0x100
  4107e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4107e8:	b	4102dc <wcrtomb@plt+0xd8cc>
  4107ec:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4107f0:	add	x3, x3, #0x7a0
  4107f4:	add	x3, x3, #0x100
  4107f8:	b	4102dc <wcrtomb@plt+0xd8cc>
  4107fc:	mov	x1, x0
  410800:	mov	w0, #0x0                   	// #0
  410804:	b	4107d8 <wcrtomb@plt+0xddc8>
  410808:	mov	x2, x1
  41080c:	mov	x1, x0
  410810:	mov	w0, #0x0                   	// #0
  410814:	b	4107ec <wcrtomb@plt+0xdddc>
  410818:	stp	x29, x30, [sp, #-96]!
  41081c:	add	x8, sp, #0x28
  410820:	mov	x29, sp
  410824:	stp	x19, x20, [sp, #16]
  410828:	mov	x20, x2
  41082c:	mov	w19, w0
  410830:	mov	w0, w1
  410834:	bl	40f5d4 <wcrtomb@plt+0xcbc4>
  410838:	add	x3, sp, #0x28
  41083c:	mov	x1, x20
  410840:	mov	w0, w19
  410844:	mov	x2, #0xffffffffffffffff    	// #-1
  410848:	bl	4102dc <wcrtomb@plt+0xd8cc>
  41084c:	ldp	x19, x20, [sp, #16]
  410850:	ldp	x29, x30, [sp], #96
  410854:	ret
  410858:	stp	x29, x30, [sp, #-112]!
  41085c:	add	x8, sp, #0x38
  410860:	mov	x29, sp
  410864:	stp	x19, x20, [sp, #16]
  410868:	mov	x20, x2
  41086c:	mov	w19, w0
  410870:	mov	w0, w1
  410874:	str	x21, [sp, #32]
  410878:	mov	x21, x3
  41087c:	bl	40f5d4 <wcrtomb@plt+0xcbc4>
  410880:	add	x3, sp, #0x38
  410884:	mov	x2, x21
  410888:	mov	x1, x20
  41088c:	mov	w0, w19
  410890:	bl	4102dc <wcrtomb@plt+0xd8cc>
  410894:	ldp	x19, x20, [sp, #16]
  410898:	ldr	x21, [sp, #32]
  41089c:	ldp	x29, x30, [sp], #112
  4108a0:	ret
  4108a4:	mov	x2, x1
  4108a8:	mov	w1, w0
  4108ac:	mov	w0, #0x0                   	// #0
  4108b0:	b	410818 <wcrtomb@plt+0xde08>
  4108b4:	mov	x3, x2
  4108b8:	mov	x2, x1
  4108bc:	mov	w1, w0
  4108c0:	mov	w0, #0x0                   	// #0
  4108c4:	b	410858 <wcrtomb@plt+0xde48>
  4108c8:	stp	x29, x30, [sp, #-112]!
  4108cc:	mov	x29, sp
  4108d0:	stp	x19, x20, [sp, #16]
  4108d4:	mov	x20, x1
  4108d8:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4108dc:	add	x1, x1, #0x7a0
  4108e0:	mov	x19, x0
  4108e4:	add	x1, x1, #0x100
  4108e8:	str	x21, [sp, #32]
  4108ec:	and	w21, w2, #0xff
  4108f0:	mov	x2, #0x38                  	// #56
  4108f4:	add	x0, sp, x2
  4108f8:	bl	402360 <memcpy@plt>
  4108fc:	mov	w1, w21
  410900:	add	x0, sp, #0x38
  410904:	mov	w2, #0x1                   	// #1
  410908:	bl	4104f4 <wcrtomb@plt+0xdae4>
  41090c:	add	x3, sp, #0x38
  410910:	mov	x2, x20
  410914:	mov	x1, x19
  410918:	mov	w0, #0x0                   	// #0
  41091c:	bl	4102dc <wcrtomb@plt+0xd8cc>
  410920:	ldp	x19, x20, [sp, #16]
  410924:	ldr	x21, [sp, #32]
  410928:	ldp	x29, x30, [sp], #112
  41092c:	ret
  410930:	mov	w2, w1
  410934:	mov	x1, #0xffffffffffffffff    	// #-1
  410938:	b	4108c8 <wcrtomb@plt+0xdeb8>
  41093c:	mov	w1, #0x3a                  	// #58
  410940:	b	410930 <wcrtomb@plt+0xdf20>
  410944:	mov	w2, #0x3a                  	// #58
  410948:	b	4108c8 <wcrtomb@plt+0xdeb8>
  41094c:	stp	x29, x30, [sp, #-160]!
  410950:	add	x8, sp, #0x20
  410954:	mov	x29, sp
  410958:	stp	x19, x20, [sp, #16]
  41095c:	mov	x20, x2
  410960:	mov	w19, w0
  410964:	mov	w0, w1
  410968:	bl	40f5d4 <wcrtomb@plt+0xcbc4>
  41096c:	add	x1, sp, #0x20
  410970:	add	x0, sp, #0x68
  410974:	mov	x2, #0x38                  	// #56
  410978:	bl	402360 <memcpy@plt>
  41097c:	add	x0, sp, #0x68
  410980:	mov	w2, #0x1                   	// #1
  410984:	mov	w1, #0x3a                  	// #58
  410988:	bl	4104f4 <wcrtomb@plt+0xdae4>
  41098c:	add	x3, sp, #0x68
  410990:	mov	x1, x20
  410994:	mov	w0, w19
  410998:	mov	x2, #0xffffffffffffffff    	// #-1
  41099c:	bl	4102dc <wcrtomb@plt+0xd8cc>
  4109a0:	ldp	x19, x20, [sp, #16]
  4109a4:	ldp	x29, x30, [sp], #160
  4109a8:	ret
  4109ac:	stp	x29, x30, [sp, #-128]!
  4109b0:	mov	x29, sp
  4109b4:	stp	x21, x22, [sp, #32]
  4109b8:	mov	x22, x1
  4109bc:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  4109c0:	add	x1, x1, #0x7a0
  4109c4:	mov	x21, x4
  4109c8:	add	x1, x1, #0x100
  4109cc:	stp	x19, x20, [sp, #16]
  4109d0:	mov	x20, x3
  4109d4:	mov	w19, w0
  4109d8:	add	x0, sp, #0x48
  4109dc:	str	x23, [sp, #48]
  4109e0:	mov	x23, x2
  4109e4:	mov	x2, #0x38                  	// #56
  4109e8:	bl	402360 <memcpy@plt>
  4109ec:	mov	x2, x23
  4109f0:	mov	x1, x22
  4109f4:	add	x0, sp, #0x48
  4109f8:	bl	41055c <wcrtomb@plt+0xdb4c>
  4109fc:	add	x3, sp, #0x48
  410a00:	mov	x2, x21
  410a04:	mov	x1, x20
  410a08:	mov	w0, w19
  410a0c:	bl	4102dc <wcrtomb@plt+0xd8cc>
  410a10:	ldp	x19, x20, [sp, #16]
  410a14:	ldp	x21, x22, [sp, #32]
  410a18:	ldr	x23, [sp, #48]
  410a1c:	ldp	x29, x30, [sp], #128
  410a20:	ret
  410a24:	mov	x4, #0xffffffffffffffff    	// #-1
  410a28:	b	4109ac <wcrtomb@plt+0xdf9c>
  410a2c:	mov	x3, x2
  410a30:	mov	x2, x1
  410a34:	mov	x1, x0
  410a38:	mov	w0, #0x0                   	// #0
  410a3c:	b	410a24 <wcrtomb@plt+0xe014>
  410a40:	mov	x4, x3
  410a44:	mov	x3, x2
  410a48:	mov	x2, x1
  410a4c:	mov	x1, x0
  410a50:	mov	w0, #0x0                   	// #0
  410a54:	b	4109ac <wcrtomb@plt+0xdf9c>
  410a58:	adrp	x3, 437000 <_obstack_memory_used@@Base+0x23900>
  410a5c:	add	x3, x3, #0x3f0
  410a60:	add	x3, x3, #0x20
  410a64:	b	4102dc <wcrtomb@plt+0xd8cc>
  410a68:	mov	x2, x1
  410a6c:	mov	x1, x0
  410a70:	mov	w0, #0x0                   	// #0
  410a74:	b	410a58 <wcrtomb@plt+0xe048>
  410a78:	mov	x2, #0xffffffffffffffff    	// #-1
  410a7c:	b	410a58 <wcrtomb@plt+0xe048>
  410a80:	mov	x1, x0
  410a84:	mov	w0, #0x0                   	// #0
  410a88:	b	410a78 <wcrtomb@plt+0xe068>
  410a8c:	stp	x29, x30, [sp, #-64]!
  410a90:	mov	x29, sp
  410a94:	stp	x19, x20, [sp, #16]
  410a98:	mov	x19, x2
  410a9c:	stp	x21, x22, [sp, #32]
  410aa0:	mov	w21, w0
  410aa4:	mov	x22, x1
  410aa8:	str	x23, [sp, #48]
  410aac:	mov	x23, #0x7ff00000            	// #2146435072
  410ab0:	mov	x2, x19
  410ab4:	mov	x1, x22
  410ab8:	mov	w0, w21
  410abc:	bl	402850 <read@plt>
  410ac0:	mov	x20, x0
  410ac4:	tbz	x0, #63, 410ae8 <wcrtomb@plt+0xe0d8>
  410ac8:	bl	402980 <__errno_location@plt>
  410acc:	ldr	w0, [x0]
  410ad0:	cmp	w0, #0x4
  410ad4:	b.eq	410ab0 <wcrtomb@plt+0xe0a0>  // b.none
  410ad8:	cmp	w0, #0x16
  410adc:	b.ne	410ae8 <wcrtomb@plt+0xe0d8>  // b.any
  410ae0:	cmp	x19, x23
  410ae4:	b.hi	410b00 <wcrtomb@plt+0xe0f0>  // b.pmore
  410ae8:	mov	x0, x20
  410aec:	ldp	x19, x20, [sp, #16]
  410af0:	ldp	x21, x22, [sp, #32]
  410af4:	ldr	x23, [sp, #48]
  410af8:	ldp	x29, x30, [sp], #64
  410afc:	ret
  410b00:	mov	x19, #0x7ff00000            	// #2146435072
  410b04:	b	410ab0 <wcrtomb@plt+0xe0a0>
  410b08:	stp	x29, x30, [sp, #-32]!
  410b0c:	mov	x2, x1
  410b10:	mov	x29, sp
  410b14:	stp	x19, x20, [sp, #16]
  410b18:	mov	x19, x1
  410b1c:	mov	x20, x0
  410b20:	mov	w1, #0x0                   	// #0
  410b24:	bl	402860 <memchr@plt>
  410b28:	cbz	x0, 410b34 <wcrtomb@plt+0xe124>
  410b2c:	sub	x0, x0, x20
  410b30:	add	x19, x0, #0x1
  410b34:	mov	x0, x19
  410b38:	ldp	x19, x20, [sp, #16]
  410b3c:	ldp	x29, x30, [sp], #32
  410b40:	ret
  410b44:	stp	x29, x30, [sp, #-48]!
  410b48:	cmp	w0, #0x2
  410b4c:	mov	x29, sp
  410b50:	stp	x19, x20, [sp, #16]
  410b54:	mov	w19, w0
  410b58:	stp	x21, x22, [sp, #32]
  410b5c:	b.hi	410b84 <wcrtomb@plt+0xe174>  // b.pmore
  410b60:	bl	41e38c <_obstack_memory_used@@Base+0xac8c>
  410b64:	mov	w21, w0
  410b68:	bl	402980 <__errno_location@plt>
  410b6c:	mov	x20, x0
  410b70:	mov	w0, w19
  410b74:	mov	w19, w21
  410b78:	ldr	w22, [x20]
  410b7c:	bl	402680 <close@plt>
  410b80:	str	w22, [x20]
  410b84:	mov	w0, w19
  410b88:	ldp	x19, x20, [sp, #16]
  410b8c:	ldp	x21, x22, [sp, #32]
  410b90:	ldp	x29, x30, [sp], #48
  410b94:	ret
  410b98:	sub	sp, sp, #0x50
  410b9c:	stp	x29, x30, [sp, #32]
  410ba0:	add	x29, sp, #0x20
  410ba4:	stp	x19, x20, [sp, #48]
  410ba8:	mov	x20, x0
  410bac:	mov	x19, x4
  410bb0:	str	x21, [sp, #64]
  410bb4:	mov	x21, x5
  410bb8:	cbz	x1, 410c68 <wcrtomb@plt+0xe258>
  410bbc:	mov	x4, x3
  410bc0:	mov	x3, x2
  410bc4:	mov	x2, x1
  410bc8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410bcc:	add	x1, x1, #0xc90
  410bd0:	bl	4029d0 <fprintf@plt>
  410bd4:	mov	w2, #0x5                   	// #5
  410bd8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410bdc:	mov	x0, #0x0                   	// #0
  410be0:	add	x1, x1, #0xca3
  410be4:	bl	4028e0 <dcgettext@plt>
  410be8:	mov	x2, x0
  410bec:	mov	w3, #0x7e4                 	// #2020
  410bf0:	mov	x0, x20
  410bf4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410bf8:	add	x1, x1, #0xf9a
  410bfc:	bl	4029d0 <fprintf@plt>
  410c00:	mov	x1, x20
  410c04:	mov	w0, #0xa                   	// #10
  410c08:	bl	402890 <fputc_unlocked@plt>
  410c0c:	mov	w2, #0x5                   	// #5
  410c10:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410c14:	mov	x0, #0x0                   	// #0
  410c18:	add	x1, x1, #0xca7
  410c1c:	bl	4028e0 <dcgettext@plt>
  410c20:	mov	x1, x0
  410c24:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  410c28:	add	x2, x2, #0xd52
  410c2c:	mov	x0, x20
  410c30:	bl	4029d0 <fprintf@plt>
  410c34:	mov	x1, x20
  410c38:	mov	w0, #0xa                   	// #10
  410c3c:	bl	402890 <fputc_unlocked@plt>
  410c40:	cmp	x21, #0x9
  410c44:	b.hi	410e98 <wcrtomb@plt+0xe488>  // b.pmore
  410c48:	cmp	w21, #0x9
  410c4c:	b.hi	410e98 <wcrtomb@plt+0xe488>  // b.pmore
  410c50:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  410c54:	add	x0, x0, #0xf90
  410c58:	ldrb	w0, [x0, w21, uxtw]
  410c5c:	adr	x1, 410c68 <wcrtomb@plt+0xe258>
  410c60:	add	x0, x1, w0, sxtb #2
  410c64:	br	x0
  410c68:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410c6c:	add	x1, x1, #0xc9c
  410c70:	bl	4029d0 <fprintf@plt>
  410c74:	b	410bd4 <wcrtomb@plt+0xe1c4>
  410c78:	mov	w2, #0x5                   	// #5
  410c7c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410c80:	mov	x0, #0x0                   	// #0
  410c84:	add	x1, x1, #0xd74
  410c88:	bl	4028e0 <dcgettext@plt>
  410c8c:	mov	x1, x0
  410c90:	mov	x0, x20
  410c94:	ldr	x2, [x19]
  410c98:	ldp	x29, x30, [sp, #32]
  410c9c:	ldp	x19, x20, [sp, #48]
  410ca0:	ldr	x21, [sp, #64]
  410ca4:	add	sp, sp, #0x50
  410ca8:	b	4029d0 <fprintf@plt>
  410cac:	mov	w2, #0x5                   	// #5
  410cb0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410cb4:	mov	x0, #0x0                   	// #0
  410cb8:	add	x1, x1, #0xd84
  410cbc:	bl	4028e0 <dcgettext@plt>
  410cc0:	mov	x1, x0
  410cc4:	mov	x0, x20
  410cc8:	ldp	x2, x3, [x19]
  410ccc:	ldp	x29, x30, [sp, #32]
  410cd0:	ldp	x19, x20, [sp, #48]
  410cd4:	ldr	x21, [sp, #64]
  410cd8:	add	sp, sp, #0x50
  410cdc:	b	4029d0 <fprintf@plt>
  410ce0:	mov	w2, #0x5                   	// #5
  410ce4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410ce8:	mov	x0, #0x0                   	// #0
  410cec:	add	x1, x1, #0xd9b
  410cf0:	bl	4028e0 <dcgettext@plt>
  410cf4:	mov	x1, x0
  410cf8:	mov	x0, x20
  410cfc:	ldp	x2, x3, [x19]
  410d00:	ldr	x4, [x19, #16]
  410d04:	ldp	x29, x30, [sp, #32]
  410d08:	ldp	x19, x20, [sp, #48]
  410d0c:	ldr	x21, [sp, #64]
  410d10:	add	sp, sp, #0x50
  410d14:	b	4029d0 <fprintf@plt>
  410d18:	mov	w2, #0x5                   	// #5
  410d1c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410d20:	mov	x0, #0x0                   	// #0
  410d24:	add	x1, x1, #0xdb7
  410d28:	bl	4028e0 <dcgettext@plt>
  410d2c:	mov	x1, x0
  410d30:	mov	x0, x20
  410d34:	ldp	x2, x3, [x19]
  410d38:	ldp	x4, x5, [x19, #16]
  410d3c:	ldp	x29, x30, [sp, #32]
  410d40:	ldp	x19, x20, [sp, #48]
  410d44:	ldr	x21, [sp, #64]
  410d48:	add	sp, sp, #0x50
  410d4c:	b	4029d0 <fprintf@plt>
  410d50:	mov	w2, #0x5                   	// #5
  410d54:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410d58:	mov	x0, #0x0                   	// #0
  410d5c:	add	x1, x1, #0xdd7
  410d60:	bl	4028e0 <dcgettext@plt>
  410d64:	mov	x1, x0
  410d68:	mov	x0, x20
  410d6c:	ldp	x2, x3, [x19]
  410d70:	ldp	x4, x5, [x19, #16]
  410d74:	ldp	x29, x30, [sp, #32]
  410d78:	ldr	x6, [x19, #32]
  410d7c:	ldp	x19, x20, [sp, #48]
  410d80:	ldr	x21, [sp, #64]
  410d84:	add	sp, sp, #0x50
  410d88:	b	4029d0 <fprintf@plt>
  410d8c:	mov	w2, #0x5                   	// #5
  410d90:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410d94:	mov	x0, #0x0                   	// #0
  410d98:	add	x1, x1, #0xdfb
  410d9c:	bl	4028e0 <dcgettext@plt>
  410da0:	mov	x1, x0
  410da4:	mov	x0, x20
  410da8:	ldp	x2, x3, [x19]
  410dac:	ldp	x4, x5, [x19, #16]
  410db0:	ldp	x29, x30, [sp, #32]
  410db4:	ldp	x6, x7, [x19, #32]
  410db8:	ldp	x19, x20, [sp, #48]
  410dbc:	ldr	x21, [sp, #64]
  410dc0:	add	sp, sp, #0x50
  410dc4:	b	4029d0 <fprintf@plt>
  410dc8:	mov	w2, #0x5                   	// #5
  410dcc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410dd0:	mov	x0, #0x0                   	// #0
  410dd4:	add	x1, x1, #0xe23
  410dd8:	bl	4028e0 <dcgettext@plt>
  410ddc:	ldp	x2, x3, [x19]
  410de0:	ldp	x4, x5, [x19, #16]
  410de4:	ldp	x6, x7, [x19, #32]
  410de8:	ldr	x1, [x19, #48]
  410dec:	str	x1, [sp]
  410df0:	mov	x1, x0
  410df4:	mov	x0, x20
  410df8:	bl	4029d0 <fprintf@plt>
  410dfc:	ldp	x29, x30, [sp, #32]
  410e00:	ldp	x19, x20, [sp, #48]
  410e04:	ldr	x21, [sp, #64]
  410e08:	add	sp, sp, #0x50
  410e0c:	ret
  410e10:	mov	w2, #0x5                   	// #5
  410e14:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410e18:	mov	x0, #0x0                   	// #0
  410e1c:	add	x1, x1, #0xe4f
  410e20:	bl	4028e0 <dcgettext@plt>
  410e24:	ldp	x2, x3, [x19]
  410e28:	ldp	x4, x5, [x19, #16]
  410e2c:	ldp	x6, x7, [x19, #32]
  410e30:	ldr	x1, [x19, #56]
  410e34:	str	x1, [sp, #8]
  410e38:	ldr	x1, [x19, #48]
  410e3c:	str	x1, [sp]
  410e40:	mov	x1, x0
  410e44:	mov	x0, x20
  410e48:	bl	4029d0 <fprintf@plt>
  410e4c:	b	410dfc <wcrtomb@plt+0xe3ec>
  410e50:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410e54:	add	x1, x1, #0xe7f
  410e58:	mov	w2, #0x5                   	// #5
  410e5c:	mov	x0, #0x0                   	// #0
  410e60:	bl	4028e0 <dcgettext@plt>
  410e64:	ldr	x1, [x19, #64]
  410e68:	ldp	x2, x3, [x19]
  410e6c:	ldp	x4, x5, [x19, #16]
  410e70:	ldp	x6, x7, [x19, #32]
  410e74:	str	x1, [sp, #16]
  410e78:	ldr	x1, [x19, #56]
  410e7c:	str	x1, [sp, #8]
  410e80:	ldr	x1, [x19, #48]
  410e84:	str	x1, [sp]
  410e88:	mov	x1, x0
  410e8c:	mov	x0, x20
  410e90:	bl	4029d0 <fprintf@plt>
  410e94:	b	410dfc <wcrtomb@plt+0xe3ec>
  410e98:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410e9c:	mov	w2, #0x5                   	// #5
  410ea0:	add	x1, x1, #0xeb3
  410ea4:	b	410e5c <wcrtomb@plt+0xe44c>
  410ea8:	mov	x5, #0x0                   	// #0
  410eac:	ldr	x6, [x4, x5, lsl #3]
  410eb0:	cbnz	x6, 410eb8 <wcrtomb@plt+0xe4a8>
  410eb4:	b	410b98 <wcrtomb@plt+0xe188>
  410eb8:	add	x5, x5, #0x1
  410ebc:	b	410eac <wcrtomb@plt+0xe49c>
  410ec0:	stp	x29, x30, [sp, #-96]!
  410ec4:	mov	x5, #0x0                   	// #0
  410ec8:	mov	x29, sp
  410ecc:	ldr	w7, [x4, #24]
  410ed0:	ldp	x6, x10, [x4]
  410ed4:	add	x4, sp, #0x10
  410ed8:	tbnz	w7, #31, 410f0c <wcrtomb@plt+0xe4fc>
  410edc:	add	x9, x6, #0xf
  410ee0:	mov	x8, x6
  410ee4:	and	x6, x9, #0xfffffffffffffff8
  410ee8:	ldr	x8, [x8]
  410eec:	str	x8, [x4, x5, lsl #3]
  410ef0:	cbz	x8, 410f00 <wcrtomb@plt+0xe4f0>
  410ef4:	add	x5, x5, #0x1
  410ef8:	cmp	x5, #0xa
  410efc:	b.ne	410ed8 <wcrtomb@plt+0xe4c8>  // b.any
  410f00:	bl	410b98 <wcrtomb@plt+0xe188>
  410f04:	ldp	x29, x30, [sp], #96
  410f08:	ret
  410f0c:	add	w9, w7, #0x8
  410f10:	cmp	w9, #0x0
  410f14:	b.le	410f2c <wcrtomb@plt+0xe51c>
  410f18:	add	x11, x6, #0xf
  410f1c:	mov	x8, x6
  410f20:	mov	w7, w9
  410f24:	and	x6, x11, #0xfffffffffffffff8
  410f28:	b	410ee8 <wcrtomb@plt+0xe4d8>
  410f2c:	add	x8, x10, w7, sxtw
  410f30:	mov	w7, w9
  410f34:	b	410ee8 <wcrtomb@plt+0xe4d8>
  410f38:	stp	x29, x30, [sp, #-240]!
  410f3c:	mov	x29, sp
  410f40:	stp	x4, x5, [sp, #208]
  410f44:	add	x4, sp, #0xf0
  410f48:	stp	x4, x4, [sp, #48]
  410f4c:	add	x4, sp, #0xd0
  410f50:	str	x4, [sp, #64]
  410f54:	mov	w4, #0xffffffe0            	// #-32
  410f58:	str	w4, [sp, #72]
  410f5c:	mov	w4, #0xffffff80            	// #-128
  410f60:	str	w4, [sp, #76]
  410f64:	ldp	x4, x5, [sp, #48]
  410f68:	stp	x4, x5, [sp, #16]
  410f6c:	ldp	x4, x5, [sp, #64]
  410f70:	stp	x4, x5, [sp, #32]
  410f74:	add	x4, sp, #0x10
  410f78:	str	q0, [sp, #80]
  410f7c:	str	q1, [sp, #96]
  410f80:	str	q2, [sp, #112]
  410f84:	str	q3, [sp, #128]
  410f88:	str	q4, [sp, #144]
  410f8c:	str	q5, [sp, #160]
  410f90:	str	q6, [sp, #176]
  410f94:	str	q7, [sp, #192]
  410f98:	stp	x6, x7, [sp, #224]
  410f9c:	bl	410ec0 <wcrtomb@plt+0xe4b0>
  410fa0:	ldp	x29, x30, [sp], #240
  410fa4:	ret
  410fa8:	stp	x29, x30, [sp, #-16]!
  410fac:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  410fb0:	mov	x29, sp
  410fb4:	ldr	x1, [x0, #1128]
  410fb8:	mov	w0, #0xa                   	// #10
  410fbc:	bl	402890 <fputc_unlocked@plt>
  410fc0:	mov	w2, #0x5                   	// #5
  410fc4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410fc8:	mov	x0, #0x0                   	// #0
  410fcc:	add	x1, x1, #0xeef
  410fd0:	bl	4028e0 <dcgettext@plt>
  410fd4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410fd8:	add	x1, x1, #0xf03
  410fdc:	bl	402960 <printf@plt>
  410fe0:	mov	w2, #0x5                   	// #5
  410fe4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  410fe8:	mov	x0, #0x0                   	// #0
  410fec:	add	x1, x1, #0xf14
  410ff0:	bl	4028e0 <dcgettext@plt>
  410ff4:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  410ff8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  410ffc:	add	x2, x2, #0xf28
  411000:	add	x1, x1, #0x84e
  411004:	bl	402960 <printf@plt>
  411008:	mov	w2, #0x5                   	// #5
  41100c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  411010:	mov	x0, #0x0                   	// #0
  411014:	add	x1, x1, #0xf4b
  411018:	bl	4028e0 <dcgettext@plt>
  41101c:	ldp	x29, x30, [sp], #16
  411020:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  411024:	add	x1, x1, #0xf72
  411028:	b	402960 <printf@plt>
  41102c:	stp	x29, x30, [sp, #-32]!
  411030:	mov	x29, sp
  411034:	str	x19, [sp, #16]
  411038:	mov	x19, x0
  41103c:	bl	402520 <malloc@plt>
  411040:	cmp	x0, #0x0
  411044:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  411048:	b.eq	411050 <wcrtomb@plt+0xe640>  // b.none
  41104c:	bl	411200 <wcrtomb@plt+0xe7f0>
  411050:	ldr	x19, [sp, #16]
  411054:	ldp	x29, x30, [sp], #32
  411058:	ret
  41105c:	mov	x2, x0
  411060:	mul	x0, x0, x1
  411064:	umulh	x2, x2, x1
  411068:	cmp	x2, #0x0
  41106c:	cset	x1, ne  // ne = any
  411070:	tbnz	x0, #63, 411078 <wcrtomb@plt+0xe668>
  411074:	cbz	x1, 411084 <wcrtomb@plt+0xe674>
  411078:	stp	x29, x30, [sp, #-16]!
  41107c:	mov	x29, sp
  411080:	bl	411200 <wcrtomb@plt+0xe7f0>
  411084:	b	41102c <wcrtomb@plt+0xe61c>
  411088:	b	41102c <wcrtomb@plt+0xe61c>
  41108c:	stp	x29, x30, [sp, #-32]!
  411090:	cmp	x1, #0x0
  411094:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  411098:	mov	x29, sp
  41109c:	str	x19, [sp, #16]
  4110a0:	b.eq	4110b8 <wcrtomb@plt+0xe6a8>  // b.none
  4110a4:	bl	4027a0 <free@plt>
  4110a8:	mov	x0, #0x0                   	// #0
  4110ac:	ldr	x19, [sp, #16]
  4110b0:	ldp	x29, x30, [sp], #32
  4110b4:	ret
  4110b8:	mov	x19, x1
  4110bc:	bl	402640 <realloc@plt>
  4110c0:	cmp	x0, #0x0
  4110c4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4110c8:	b.eq	4110ac <wcrtomb@plt+0xe69c>  // b.none
  4110cc:	bl	411200 <wcrtomb@plt+0xe7f0>
  4110d0:	mov	x3, x1
  4110d4:	mul	x1, x1, x2
  4110d8:	umulh	x3, x3, x2
  4110dc:	cmp	x3, #0x0
  4110e0:	cset	x2, ne  // ne = any
  4110e4:	tbnz	x1, #63, 4110ec <wcrtomb@plt+0xe6dc>
  4110e8:	cbz	x2, 4110f8 <wcrtomb@plt+0xe6e8>
  4110ec:	stp	x29, x30, [sp, #-16]!
  4110f0:	mov	x29, sp
  4110f4:	bl	411200 <wcrtomb@plt+0xe7f0>
  4110f8:	b	41108c <wcrtomb@plt+0xe67c>
  4110fc:	ldr	x3, [x1]
  411100:	cbnz	x0, 41113c <wcrtomb@plt+0xe72c>
  411104:	cbnz	x3, 411118 <wcrtomb@plt+0xe708>
  411108:	mov	x3, #0x80                  	// #128
  41110c:	cmp	x2, #0x80
  411110:	udiv	x3, x3, x2
  411114:	cinc	x3, x3, hi  // hi = pmore
  411118:	umulh	x5, x3, x2
  41111c:	mul	x4, x3, x2
  411120:	cmp	x5, #0x0
  411124:	cset	x5, ne  // ne = any
  411128:	tbnz	x4, #63, 411130 <wcrtomb@plt+0xe720>
  41112c:	cbz	x5, 411158 <wcrtomb@plt+0xe748>
  411130:	stp	x29, x30, [sp, #-16]!
  411134:	mov	x29, sp
  411138:	bl	411200 <wcrtomb@plt+0xe7f0>
  41113c:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  411140:	movk	x4, #0x5554
  411144:	udiv	x4, x4, x2
  411148:	cmp	x4, x3
  41114c:	b.ls	411130 <wcrtomb@plt+0xe720>  // b.plast
  411150:	add	x4, x3, #0x1
  411154:	add	x3, x4, x3, lsr #1
  411158:	str	x3, [x1]
  41115c:	mul	x1, x3, x2
  411160:	b	41108c <wcrtomb@plt+0xe67c>
  411164:	mov	x2, #0x1                   	// #1
  411168:	b	4110fc <wcrtomb@plt+0xe6ec>
  41116c:	umulh	x2, x0, x1
  411170:	stp	x29, x30, [sp, #-16]!
  411174:	mul	x4, x0, x1
  411178:	cmp	x2, #0x0
  41117c:	mov	x29, sp
  411180:	cset	x2, ne  // ne = any
  411184:	tbnz	x4, #63, 41118c <wcrtomb@plt+0xe77c>
  411188:	cbz	x2, 411190 <wcrtomb@plt+0xe780>
  41118c:	bl	411200 <wcrtomb@plt+0xe7f0>
  411190:	bl	402610 <calloc@plt>
  411194:	cbz	x0, 41118c <wcrtomb@plt+0xe77c>
  411198:	ldp	x29, x30, [sp], #16
  41119c:	ret
  4111a0:	mov	x1, #0x1                   	// #1
  4111a4:	b	41116c <wcrtomb@plt+0xe75c>
  4111a8:	stp	x29, x30, [sp, #-32]!
  4111ac:	mov	x29, sp
  4111b0:	stp	x19, x20, [sp, #16]
  4111b4:	mov	x19, x1
  4111b8:	mov	x20, x0
  4111bc:	mov	x0, x1
  4111c0:	bl	41102c <wcrtomb@plt+0xe61c>
  4111c4:	mov	x2, x19
  4111c8:	mov	x1, x20
  4111cc:	ldp	x19, x20, [sp, #16]
  4111d0:	ldp	x29, x30, [sp], #32
  4111d4:	b	402360 <memcpy@plt>
  4111d8:	stp	x29, x30, [sp, #-32]!
  4111dc:	mov	x29, sp
  4111e0:	str	x19, [sp, #16]
  4111e4:	mov	x19, x0
  4111e8:	bl	4023c0 <strlen@plt>
  4111ec:	add	x1, x0, #0x1
  4111f0:	mov	x0, x19
  4111f4:	ldr	x19, [sp, #16]
  4111f8:	ldp	x29, x30, [sp], #32
  4111fc:	b	4111a8 <wcrtomb@plt+0xe798>
  411200:	stp	x29, x30, [sp, #-32]!
  411204:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  411208:	mov	w2, #0x5                   	// #5
  41120c:	mov	x29, sp
  411210:	str	x19, [sp, #16]
  411214:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  411218:	ldr	w19, [x0, #1000]
  41121c:	add	x1, x1, #0xfc9
  411220:	mov	x0, #0x0                   	// #0
  411224:	bl	4028e0 <dcgettext@plt>
  411228:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  41122c:	mov	x3, x0
  411230:	add	x2, x2, #0x4d4
  411234:	mov	w0, w19
  411238:	mov	w1, #0x0                   	// #0
  41123c:	bl	4023f0 <error@plt>
  411240:	bl	4026f0 <abort@plt>
  411244:	sxtw	x1, w1
  411248:	mov	x3, x0
  41124c:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
  411250:	mov	w0, #0x0                   	// #0
  411254:	mov	x6, #0x7fffffffffffffff    	// #9223372036854775807
  411258:	sub	w2, w2, #0x1
  41125c:	cmn	w2, #0x1
  411260:	b.ne	411268 <wcrtomb@plt+0xe858>  // b.any
  411264:	ret
  411268:	sdiv	x7, x5, x1
  41126c:	ldr	x4, [x3]
  411270:	cmp	x4, x7
  411274:	b.ge	411288 <wcrtomb@plt+0xe878>  // b.tcont
  411278:	str	x5, [x3]
  41127c:	mov	w4, #0x1                   	// #1
  411280:	orr	w0, w0, w4
  411284:	b	411258 <wcrtomb@plt+0xe848>
  411288:	udiv	x7, x6, x1
  41128c:	cmp	x4, x7
  411290:	b.le	41129c <wcrtomb@plt+0xe88c>
  411294:	str	x6, [x3]
  411298:	b	41127c <wcrtomb@plt+0xe86c>
  41129c:	mul	x4, x4, x1
  4112a0:	str	x4, [x3]
  4112a4:	mov	w4, #0x0                   	// #0
  4112a8:	b	411280 <wcrtomb@plt+0xe870>
  4112ac:	stp	x29, x30, [sp, #-80]!
  4112b0:	cmp	w2, #0x24
  4112b4:	mov	x29, sp
  4112b8:	stp	x19, x20, [sp, #16]
  4112bc:	stp	x21, x22, [sp, #32]
  4112c0:	stp	x23, x24, [sp, #48]
  4112c4:	b.ls	4112e8 <wcrtomb@plt+0xe8d8>  // b.plast
  4112c8:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xd900>
  4112cc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4112d0:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xc900>
  4112d4:	add	x3, x3, #0x4d
  4112d8:	add	x1, x1, #0xfda
  4112dc:	add	x0, x0, #0xfe4
  4112e0:	mov	w2, #0x54                  	// #84
  4112e4:	bl	402970 <__assert_fail@plt>
  4112e8:	mov	x19, x0
  4112ec:	mov	x20, x1
  4112f0:	mov	w24, w2
  4112f4:	mov	x21, x3
  4112f8:	mov	x23, x4
  4112fc:	cbnz	x1, 411304 <wcrtomb@plt+0xe8f4>
  411300:	add	x20, sp, #0x40
  411304:	bl	402980 <__errno_location@plt>
  411308:	mov	x22, x0
  41130c:	mov	w2, w24
  411310:	mov	x1, x20
  411314:	mov	x0, x19
  411318:	str	wzr, [x22]
  41131c:	bl	402410 <strtoimax@plt>
  411320:	str	x0, [sp, #72]
  411324:	ldr	x24, [x20]
  411328:	cmp	x24, x19
  41132c:	b.ne	411390 <wcrtomb@plt+0xe980>  // b.any
  411330:	cbz	x23, 4115f8 <wcrtomb@plt+0xebe8>
  411334:	ldrb	w1, [x19]
  411338:	cbz	w1, 4115f8 <wcrtomb@plt+0xebe8>
  41133c:	mov	x0, x23
  411340:	bl	4027d0 <strchr@plt>
  411344:	cbz	x0, 4115f8 <wcrtomb@plt+0xebe8>
  411348:	mov	x0, #0x1                   	// #1
  41134c:	mov	w19, #0x0                   	// #0
  411350:	str	x0, [sp, #72]
  411354:	ldrb	w22, [x24]
  411358:	cbz	w22, 411560 <wcrtomb@plt+0xeb50>
  41135c:	mov	w1, w22
  411360:	mov	x0, x23
  411364:	bl	4027d0 <strchr@plt>
  411368:	cbnz	x0, 4113b8 <wcrtomb@plt+0xe9a8>
  41136c:	orr	w19, w19, #0x2
  411370:	ldr	x0, [sp, #72]
  411374:	str	x0, [x21]
  411378:	mov	w0, w19
  41137c:	ldp	x19, x20, [sp, #16]
  411380:	ldp	x21, x22, [sp, #32]
  411384:	ldp	x23, x24, [sp, #48]
  411388:	ldp	x29, x30, [sp], #80
  41138c:	ret
  411390:	ldr	w1, [x22]
  411394:	cbz	w1, 4113b0 <wcrtomb@plt+0xe9a0>
  411398:	cmp	w1, #0x22
  41139c:	b.ne	4115f8 <wcrtomb@plt+0xebe8>  // b.any
  4113a0:	mov	w19, #0x1                   	// #1
  4113a4:	cbnz	x23, 411354 <wcrtomb@plt+0xe944>
  4113a8:	str	x0, [x21]
  4113ac:	b	411378 <wcrtomb@plt+0xe968>
  4113b0:	mov	w19, #0x0                   	// #0
  4113b4:	b	4113a4 <wcrtomb@plt+0xe994>
  4113b8:	cmp	w22, #0x5a
  4113bc:	b.hi	4114b8 <wcrtomb@plt+0xeaa8>  // b.pmore
  4113c0:	cmp	w22, #0x44
  4113c4:	b.hi	411494 <wcrtomb@plt+0xea84>  // b.pmore
  4113c8:	mov	w8, #0x1                   	// #1
  4113cc:	mov	w1, #0x400                 	// #1024
  4113d0:	cmp	w22, #0x58
  4113d4:	b.hi	4114d8 <wcrtomb@plt+0xeac8>  // b.pmore
  4113d8:	sub	w22, w22, #0x42
  4113dc:	and	w0, w22, #0xff
  4113e0:	cmp	w0, #0x12
  4113e4:	b.hi	41136c <wcrtomb@plt+0xe95c>  // b.pmore
  4113e8:	cmp	w22, #0x12
  4113ec:	b.hi	41136c <wcrtomb@plt+0xe95c>  // b.pmore
  4113f0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  4113f4:	add	x0, x0, #0xc
  4113f8:	ldrb	w0, [x0, w22, uxtw]
  4113fc:	adr	x2, 411408 <wcrtomb@plt+0xe9f8>
  411400:	add	x0, x2, w0, sxtb #2
  411404:	br	x0
  411408:	mov	x1, #0x1                   	// #1
  41140c:	lsl	x0, x1, x0
  411410:	mov	x1, #0x2051                	// #8273
  411414:	tst	x0, x1
  411418:	b.eq	4114c8 <wcrtomb@plt+0xeab8>  // b.none
  41141c:	mov	x0, x23
  411420:	mov	w1, #0x30                  	// #48
  411424:	bl	4027d0 <strchr@plt>
  411428:	cbz	x0, 411514 <wcrtomb@plt+0xeb04>
  41142c:	ldrb	w0, [x24, #1]
  411430:	cmp	w0, #0x44
  411434:	b.eq	41151c <wcrtomb@plt+0xeb0c>  // b.none
  411438:	cmp	w0, #0x69
  41143c:	b.eq	4114fc <wcrtomb@plt+0xeaec>  // b.none
  411440:	cmp	w0, #0x42
  411444:	mov	w8, #0x2                   	// #2
  411448:	mov	w1, #0x400                 	// #1024
  41144c:	mov	w0, #0x3e8                 	// #1000
  411450:	csinc	w8, w8, wzr, eq  // eq = none
  411454:	csel	w1, w1, w0, ne  // ne = any
  411458:	cmp	w22, #0x6d
  41145c:	b.ls	4113d0 <wcrtomb@plt+0xe9c0>  // b.plast
  411460:	cmp	w22, #0x74
  411464:	b.eq	4115e0 <wcrtomb@plt+0xebd0>  // b.none
  411468:	cmp	w22, #0x77
  41146c:	b.ne	41136c <wcrtomb@plt+0xe95c>  // b.any
  411470:	ldr	x0, [sp, #72]
  411474:	mov	x1, #0xc000000000000000    	// #-4611686018427387904
  411478:	cmp	x0, x1
  41147c:	b.lt	411538 <wcrtomb@plt+0xeb28>  // b.tstop
  411480:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  411484:	cmp	x0, x1
  411488:	b.gt	411574 <wcrtomb@plt+0xeb64>
  41148c:	lsl	x0, x0, #1
  411490:	b	411580 <wcrtomb@plt+0xeb70>
  411494:	sub	w1, w22, #0x45
  411498:	cmp	w1, #0x15
  41149c:	b.hi	411514 <wcrtomb@plt+0xeb04>  // b.pmore
  4114a0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  4114a4:	add	x0, x0, #0x20
  4114a8:	ldrb	w0, [x0, w1, uxtw]
  4114ac:	adr	x1, 4114b8 <wcrtomb@plt+0xeaa8>
  4114b0:	add	x0, x1, w0, sxtb #2
  4114b4:	br	x0
  4114b8:	sub	w0, w22, #0x67
  4114bc:	and	w0, w0, #0xff
  4114c0:	cmp	w0, #0xd
  4114c4:	b.ls	411408 <wcrtomb@plt+0xe9f8>  // b.plast
  4114c8:	cmp	w22, #0x6d
  4114cc:	mov	w8, #0x1                   	// #1
  4114d0:	mov	w1, #0x400                 	// #1024
  4114d4:	b.hi	411460 <wcrtomb@plt+0xea50>  // b.pmore
  4114d8:	sub	w22, w22, #0x59
  4114dc:	cmp	w22, #0x14
  4114e0:	b.hi	41136c <wcrtomb@plt+0xe95c>  // b.pmore
  4114e4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  4114e8:	add	x0, x0, #0x38
  4114ec:	ldrb	w0, [x0, w22, uxtw]
  4114f0:	adr	x2, 4114fc <wcrtomb@plt+0xeaec>
  4114f4:	add	x0, x2, w0, sxtb #2
  4114f8:	br	x0
  4114fc:	ldrb	w0, [x24, #2]
  411500:	mov	w8, #0x3                   	// #3
  411504:	cmp	w0, #0x42
  411508:	csinc	w8, w8, wzr, eq  // eq = none
  41150c:	mov	w1, #0x400                 	// #1024
  411510:	b	411458 <wcrtomb@plt+0xea48>
  411514:	mov	w8, #0x1                   	// #1
  411518:	b	41150c <wcrtomb@plt+0xeafc>
  41151c:	mov	w8, #0x2                   	// #2
  411520:	mov	w1, #0x3e8                 	// #1000
  411524:	b	411458 <wcrtomb@plt+0xea48>
  411528:	ldr	x0, [sp, #72]
  41152c:	mov	x1, #0xffc0000000000000    	// #-18014398509481984
  411530:	cmp	x0, x1
  411534:	b.ge	411568 <wcrtomb@plt+0xeb58>  // b.tcont
  411538:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41153c:	str	x0, [sp, #72]
  411540:	mov	w0, #0x1                   	// #1
  411544:	orr	w19, w19, w0
  411548:	ldr	x0, [x20]
  41154c:	add	x1, x0, w8, sxtw
  411550:	str	x1, [x20]
  411554:	ldrb	w0, [x0, w8, sxtw]
  411558:	cbz	w0, 411560 <wcrtomb@plt+0xeb50>
  41155c:	orr	w19, w19, #0x2
  411560:	ldr	x0, [sp, #72]
  411564:	b	4113a8 <wcrtomb@plt+0xe998>
  411568:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  41156c:	cmp	x0, x1
  411570:	b.le	41157c <wcrtomb@plt+0xeb6c>
  411574:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  411578:	b	41153c <wcrtomb@plt+0xeb2c>
  41157c:	lsl	x0, x0, #9
  411580:	str	x0, [sp, #72]
  411584:	mov	w0, #0x0                   	// #0
  411588:	b	411544 <wcrtomb@plt+0xeb34>
  41158c:	ldr	x0, [sp, #72]
  411590:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  411594:	cmp	x0, x1
  411598:	b.lt	411538 <wcrtomb@plt+0xeb28>  // b.tstop
  41159c:	mov	x1, #0x1fffffffffffff      	// #9007199254740991
  4115a0:	cmp	x0, x1
  4115a4:	b.gt	411574 <wcrtomb@plt+0xeb64>
  4115a8:	lsl	x0, x0, #10
  4115ac:	b	411580 <wcrtomb@plt+0xeb70>
  4115b0:	mov	w2, #0x6                   	// #6
  4115b4:	add	x0, sp, #0x48
  4115b8:	bl	411244 <wcrtomb@plt+0xe834>
  4115bc:	b	411544 <wcrtomb@plt+0xeb34>
  4115c0:	mov	w2, #0x3                   	// #3
  4115c4:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115c8:	mov	w2, #0x1                   	// #1
  4115cc:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115d0:	mov	w2, #0x2                   	// #2
  4115d4:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115d8:	mov	w2, #0x5                   	// #5
  4115dc:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115e0:	mov	w2, #0x4                   	// #4
  4115e4:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115e8:	mov	w2, #0x8                   	// #8
  4115ec:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115f0:	mov	w2, #0x7                   	// #7
  4115f4:	b	4115b4 <wcrtomb@plt+0xeba4>
  4115f8:	mov	w19, #0x4                   	// #4
  4115fc:	b	411378 <wcrtomb@plt+0xe968>
  411600:	stp	x29, x30, [sp, #-16]!
  411604:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  411608:	add	x0, x0, #0x58
  41160c:	mov	x29, sp
  411610:	bl	4029a0 <getenv@plt>
  411614:	cbz	x0, 411634 <wcrtomb@plt+0xec24>
  411618:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41161c:	add	x1, x1, #0x5d
  411620:	bl	402780 <strcmp@plt>
  411624:	cmp	w0, #0x0
  411628:	cset	w0, ne  // ne = any
  41162c:	ldp	x29, x30, [sp], #16
  411630:	ret
  411634:	mov	w0, #0x0                   	// #0
  411638:	b	41162c <wcrtomb@plt+0xec1c>
  41163c:	ret
  411640:	b	402960 <printf@plt>
  411644:	adrp	x1, 437000 <_obstack_memory_used@@Base+0x23900>
  411648:	ldr	x1, [x1, #1128]
  41164c:	b	4023d0 <fputs@plt>
  411650:	ldr	x3, [x0, #8]
  411654:	ldr	x2, [x1, #8]
  411658:	cmp	x3, x2
  41165c:	b.ne	411674 <wcrtomb@plt+0xec64>  // b.any
  411660:	ldr	x2, [x0]
  411664:	ldr	x0, [x1]
  411668:	cmp	x2, x0
  41166c:	cset	w0, eq  // eq = none
  411670:	ret
  411674:	mov	w0, #0x0                   	// #0
  411678:	b	411670 <wcrtomb@plt+0xec60>
  41167c:	ldr	x0, [x0, #8]
  411680:	udiv	x2, x0, x1
  411684:	msub	x0, x2, x1, x0
  411688:	ret
  41168c:	ldr	x0, [x0]
  411690:	udiv	x2, x0, x1
  411694:	msub	x0, x2, x1, x0
  411698:	ret
  41169c:	ldr	x2, [x0]
  4116a0:	ldr	x0, [x1]
  4116a4:	cmp	x2, x0
  4116a8:	cset	w0, eq  // eq = none
  4116ac:	ret
  4116b0:	ldr	x0, [x0]
  4116b4:	ldr	x2, [x0, #128]
  4116b8:	ldr	x0, [x1]
  4116bc:	ldr	x1, [x0, #128]
  4116c0:	cmp	x2, x1
  4116c4:	cset	w0, hi  // hi = pmore
  4116c8:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  4116cc:	ret
  4116d0:	stp	x29, x30, [sp, #-48]!
  4116d4:	and	w2, w2, #0xff
  4116d8:	mov	x29, sp
  4116dc:	stp	x19, x20, [sp, #16]
  4116e0:	mov	x19, x1
  4116e4:	add	x20, x1, #0x78
  4116e8:	ldr	w1, [x0, #72]
  4116ec:	str	x21, [sp, #32]
  4116f0:	mov	x21, x0
  4116f4:	ldr	x0, [x19, #88]
  4116f8:	cbnz	x0, 411704 <wcrtomb@plt+0xecf4>
  4116fc:	tst	x1, #0x1
  411700:	csinc	w2, w2, wzr, eq  // eq = none
  411704:	ldr	x0, [x19, #48]
  411708:	tbnz	w1, #1, 411710 <wcrtomb@plt+0xed00>
  41170c:	cbz	w2, 411778 <wcrtomb@plt+0xed68>
  411710:	mov	x1, x20
  411714:	bl	41e640 <_obstack_memory_used@@Base+0xaf40>
  411718:	cbz	w0, 41179c <wcrtomb@plt+0xed8c>
  41171c:	bl	402980 <__errno_location@plt>
  411720:	mov	x21, x0
  411724:	ldr	w0, [x0]
  411728:	cmp	w0, #0x2
  41172c:	b.ne	411758 <wcrtomb@plt+0xed48>  // b.any
  411730:	ldr	x0, [x19, #48]
  411734:	mov	x1, x20
  411738:	bl	41e660 <_obstack_memory_used@@Base+0xaf60>
  41173c:	cbnz	w0, 411758 <wcrtomb@plt+0xed48>
  411740:	mov	w0, #0xd                   	// #13
  411744:	str	wzr, [x21]
  411748:	ldp	x19, x20, [sp, #16]
  41174c:	ldr	x21, [sp, #32]
  411750:	ldp	x29, x30, [sp], #48
  411754:	ret
  411758:	ldr	w0, [x21]
  41175c:	str	w0, [x19, #64]
  411760:	mov	x2, #0x80                  	// #128
  411764:	mov	x0, x20
  411768:	mov	w1, #0x0                   	// #0
  41176c:	bl	4025f0 <memset@plt>
  411770:	mov	w0, #0xa                   	// #10
  411774:	b	411748 <wcrtomb@plt+0xed38>
  411778:	mov	x1, x0
  41177c:	ldr	w0, [x21, #44]
  411780:	mov	x2, x20
  411784:	mov	w3, #0x100                 	// #256
  411788:	bl	41e670 <_obstack_memory_used@@Base+0xaf70>
  41178c:	cbz	w0, 41179c <wcrtomb@plt+0xed8c>
  411790:	bl	402980 <__errno_location@plt>
  411794:	ldr	w0, [x0]
  411798:	b	41175c <wcrtomb@plt+0xed4c>
  41179c:	ldr	w1, [x20, #16]
  4117a0:	and	w1, w1, #0xf000
  4117a4:	cmp	w1, #0x4, lsl #12
  4117a8:	b.ne	41181c <wcrtomb@plt+0xee0c>  // b.any
  4117ac:	ldr	w1, [x20, #20]
  4117b0:	cmp	w1, #0x1
  4117b4:	b.ls	411814 <wcrtomb@plt+0xee04>  // b.plast
  4117b8:	ldr	x0, [x19, #88]
  4117bc:	cmp	x0, #0x0
  4117c0:	b.le	411814 <wcrtomb@plt+0xee04>
  4117c4:	ldr	w0, [x21, #72]
  4117c8:	tst	x0, #0x20
  4117cc:	cset	w0, eq  // eq = none
  4117d0:	sub	w0, w1, w0, lsl #1
  4117d4:	str	w0, [x19, #104]
  4117d8:	ldrb	w0, [x19, #248]
  4117dc:	cmp	w0, #0x2e
  4117e0:	b.ne	411838 <wcrtomb@plt+0xee28>  // b.any
  4117e4:	ldrb	w0, [x19, #249]
  4117e8:	cbz	w0, 411800 <wcrtomb@plt+0xedf0>
  4117ec:	ldr	w0, [x19, #248]
  4117f0:	mov	w1, #0x2e00                	// #11776
  4117f4:	and	w0, w0, #0xffff00
  4117f8:	cmp	w0, w1
  4117fc:	b.ne	411838 <wcrtomb@plt+0xee28>  // b.any
  411800:	ldr	x0, [x19, #88]
  411804:	cmp	x0, #0x0
  411808:	mov	w0, #0x5                   	// #5
  41180c:	csinc	w0, w0, wzr, ne  // ne = any
  411810:	b	411748 <wcrtomb@plt+0xed38>
  411814:	mov	w0, #0xffffffff            	// #-1
  411818:	b	4117d4 <wcrtomb@plt+0xedc4>
  41181c:	cmp	w1, #0xa, lsl #12
  411820:	b.eq	411840 <wcrtomb@plt+0xee30>  // b.none
  411824:	cmp	w1, #0x8, lsl #12
  411828:	mov	w0, #0x3                   	// #3
  41182c:	mov	w1, #0x8                   	// #8
  411830:	csel	w0, w0, w1, ne  // ne = any
  411834:	b	411748 <wcrtomb@plt+0xed38>
  411838:	mov	w0, #0x1                   	// #1
  41183c:	b	411748 <wcrtomb@plt+0xed38>
  411840:	mov	w0, #0xc                   	// #12
  411844:	b	411748 <wcrtomb@plt+0xed38>
  411848:	stp	x29, x30, [sp, #-48]!
  41184c:	mov	x29, sp
  411850:	stp	x19, x20, [sp, #16]
  411854:	mov	x19, x0
  411858:	mov	x20, x1
  41185c:	stp	x21, x22, [sp, #32]
  411860:	mov	x21, x2
  411864:	ldr	x22, [x0, #64]
  411868:	ldr	x0, [x0, #56]
  41186c:	cmp	x0, x2
  411870:	b.cs	4118c0 <wcrtomb@plt+0xeeb0>  // b.hs, b.nlast
  411874:	add	x1, x2, #0x28
  411878:	str	x1, [x19, #56]
  41187c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  411880:	cmp	x1, x2
  411884:	ldr	x0, [x19, #16]
  411888:	b.ls	4118b0 <wcrtomb@plt+0xeea0>  // b.plast
  41188c:	ldr	x0, [x19, #16]
  411890:	bl	4027a0 <free@plt>
  411894:	str	xzr, [x19, #16]
  411898:	str	xzr, [x19, #56]
  41189c:	mov	x0, x20
  4118a0:	ldp	x19, x20, [sp, #16]
  4118a4:	ldp	x21, x22, [sp, #32]
  4118a8:	ldp	x29, x30, [sp], #48
  4118ac:	ret
  4118b0:	lsl	x1, x1, #3
  4118b4:	bl	402640 <realloc@plt>
  4118b8:	cbz	x0, 41188c <wcrtomb@plt+0xee7c>
  4118bc:	str	x0, [x19, #16]
  4118c0:	ldr	x0, [x19, #16]
  4118c4:	mov	x1, x0
  4118c8:	cbnz	x20, 411904 <wcrtomb@plt+0xeef4>
  4118cc:	mov	x3, x22
  4118d0:	mov	x1, x21
  4118d4:	mov	x2, #0x8                   	// #8
  4118d8:	bl	402460 <qsort@plt>
  4118dc:	ldr	x3, [x19, #16]
  4118e0:	mov	x0, #0x0                   	// #0
  4118e4:	mov	x1, x3
  4118e8:	ldr	x20, [x1], #-8
  4118ec:	add	x0, x0, #0x1
  4118f0:	cmp	x0, x21
  4118f4:	ldr	x2, [x1, x0, lsl #3]
  4118f8:	b.ne	411910 <wcrtomb@plt+0xef00>  // b.any
  4118fc:	str	xzr, [x2, #16]
  411900:	b	41189c <wcrtomb@plt+0xee8c>
  411904:	str	x20, [x1], #8
  411908:	ldr	x20, [x20, #16]
  41190c:	b	4118c8 <wcrtomb@plt+0xeeb8>
  411910:	ldr	x4, [x3, x0, lsl #3]
  411914:	str	x4, [x2, #16]
  411918:	b	4118ec <wcrtomb@plt+0xeedc>
  41191c:	stp	x29, x30, [sp, #-48]!
  411920:	mov	x29, sp
  411924:	stp	x21, x22, [sp, #32]
  411928:	mov	x21, x0
  41192c:	add	x0, x2, #0x100
  411930:	mov	x22, x1
  411934:	and	x0, x0, #0xfffffffffffffff8
  411938:	stp	x19, x20, [sp, #16]
  41193c:	mov	x20, x2
  411940:	bl	402520 <malloc@plt>
  411944:	mov	x19, x0
  411948:	cbz	x0, 411988 <wcrtomb@plt+0xef78>
  41194c:	mov	x2, x20
  411950:	mov	x1, x22
  411954:	add	x0, x0, #0xf8
  411958:	bl	402360 <memcpy@plt>
  41195c:	add	x0, x19, x20
  411960:	strb	wzr, [x0, #248]
  411964:	ldr	x0, [x21, #32]
  411968:	stp	xzr, xzr, [x19, #24]
  41196c:	str	xzr, [x19, #40]
  411970:	str	x0, [x19, #56]
  411974:	mov	w0, #0x30000               	// #196608
  411978:	str	wzr, [x19, #64]
  41197c:	str	x21, [x19, #80]
  411980:	str	x20, [x19, #96]
  411984:	stur	w0, [x19, #110]
  411988:	mov	x0, x19
  41198c:	ldp	x19, x20, [sp, #16]
  411990:	ldp	x21, x22, [sp, #32]
  411994:	ldp	x29, x30, [sp], #48
  411998:	ret
  41199c:	mov	x3, x0
  4119a0:	mov	w5, #0x4900                	// #18688
  4119a4:	movk	w5, #0x8, lsl #16
  4119a8:	mov	x0, x1
  4119ac:	ldr	w4, [x3, #72]
  4119b0:	lsl	w2, w4, #11
  4119b4:	and	w2, w2, #0x8000
  4119b8:	orr	w2, w2, w5
  4119bc:	tbz	w4, #9, 4119c8 <wcrtomb@plt+0xefb8>
  4119c0:	ldr	w0, [x3, #44]
  4119c4:	b	40f58c <wcrtomb@plt+0xcb7c>
  4119c8:	mov	w1, w2
  4119cc:	b	41e044 <_obstack_memory_used@@Base+0xa944>
  4119d0:	stp	x29, x30, [sp, #-32]!
  4119d4:	mov	x29, sp
  4119d8:	stp	x19, x20, [sp, #16]
  4119dc:	mov	x19, x0
  4119e0:	cbnz	x19, 4119f0 <wcrtomb@plt+0xefe0>
  4119e4:	ldp	x19, x20, [sp, #16]
  4119e8:	ldp	x29, x30, [sp], #32
  4119ec:	ret
  4119f0:	ldp	x20, x0, [x19, #16]
  4119f4:	cbz	x0, 4119fc <wcrtomb@plt+0xefec>
  4119f8:	bl	402660 <closedir@plt>
  4119fc:	mov	x0, x19
  411a00:	mov	x19, x20
  411a04:	bl	4027a0 <free@plt>
  411a08:	b	4119e0 <wcrtomb@plt+0xefd0>
  411a0c:	stp	x29, x30, [sp, #-32]!
  411a10:	mov	x29, sp
  411a14:	str	x19, [sp, #16]
  411a18:	mov	x19, x0
  411a1c:	mov	x0, x19
  411a20:	bl	41e100 <_obstack_memory_used@@Base+0xaa00>
  411a24:	tst	w0, #0xff
  411a28:	b.eq	411a38 <wcrtomb@plt+0xf028>  // b.none
  411a2c:	ldr	x19, [sp, #16]
  411a30:	ldp	x29, x30, [sp], #32
  411a34:	ret
  411a38:	mov	x0, x19
  411a3c:	bl	41e150 <_obstack_memory_used@@Base+0xaa50>
  411a40:	tbnz	w0, #31, 411a1c <wcrtomb@plt+0xf00c>
  411a44:	bl	402680 <close@plt>
  411a48:	b	411a1c <wcrtomb@plt+0xf00c>
  411a4c:	stp	x29, x30, [sp, #-176]!
  411a50:	mov	x29, sp
  411a54:	stp	x21, x22, [sp, #32]
  411a58:	mov	x21, x0
  411a5c:	ldr	x22, [x0, #80]
  411a60:	stp	x19, x20, [sp, #16]
  411a64:	ldr	w0, [x22, #72]
  411a68:	tbnz	w0, #9, 411a80 <wcrtomb@plt+0xf070>
  411a6c:	mov	x0, #0x0                   	// #0
  411a70:	ldp	x19, x20, [sp, #16]
  411a74:	ldp	x21, x22, [sp, #32]
  411a78:	ldp	x29, x30, [sp], #176
  411a7c:	ret
  411a80:	ldr	x19, [x22, #80]
  411a84:	mov	w20, w1
  411a88:	cbnz	x19, 411abc <wcrtomb@plt+0xf0ac>
  411a8c:	adrp	x4, 402000 <mbrtowc@plt-0x350>
  411a90:	adrp	x3, 411000 <wcrtomb@plt+0xe5f0>
  411a94:	add	x4, x4, #0x7a0
  411a98:	add	x3, x3, #0x69c
  411a9c:	adrp	x2, 411000 <wcrtomb@plt+0xe5f0>
  411aa0:	mov	x1, #0x0                   	// #0
  411aa4:	add	x2, x2, #0x68c
  411aa8:	mov	x0, #0xd                   	// #13
  411aac:	bl	40eb30 <wcrtomb@plt+0xc120>
  411ab0:	str	x0, [x22, #80]
  411ab4:	mov	x19, x0
  411ab8:	cbz	x0, 411adc <wcrtomb@plt+0xf0cc>
  411abc:	ldr	x0, [x21, #120]
  411ac0:	add	x1, sp, #0x38
  411ac4:	str	x0, [sp, #56]
  411ac8:	mov	x0, x19
  411acc:	bl	40e908 <wcrtomb@plt+0xbef8>
  411ad0:	cbz	x0, 411adc <wcrtomb@plt+0xf0cc>
  411ad4:	ldr	x0, [x0, #8]
  411ad8:	b	411a70 <wcrtomb@plt+0xf060>
  411adc:	tbnz	w20, #31, 411a6c <wcrtomb@plt+0xf05c>
  411ae0:	add	x1, sp, #0x38
  411ae4:	mov	w0, w20
  411ae8:	bl	4025e0 <fstatfs@plt>
  411aec:	cbnz	w0, 411a6c <wcrtomb@plt+0xf05c>
  411af0:	cbz	x19, 411b34 <wcrtomb@plt+0xf124>
  411af4:	mov	x0, #0x10                  	// #16
  411af8:	ldr	x22, [sp, #56]
  411afc:	bl	402520 <malloc@plt>
  411b00:	mov	x20, x0
  411b04:	cbz	x0, 411b34 <wcrtomb@plt+0xf124>
  411b08:	mov	x1, x0
  411b0c:	ldr	x0, [x21, #120]
  411b10:	stp	x0, x22, [x20]
  411b14:	mov	x0, x19
  411b18:	bl	40efe4 <wcrtomb@plt+0xc5d4>
  411b1c:	cbz	x0, 411b2c <wcrtomb@plt+0xf11c>
  411b20:	cmp	x20, x0
  411b24:	b.eq	411b34 <wcrtomb@plt+0xf124>  // b.none
  411b28:	bl	4026f0 <abort@plt>
  411b2c:	mov	x0, x20
  411b30:	bl	4027a0 <free@plt>
  411b34:	ldr	x0, [sp, #56]
  411b38:	b	411a70 <wcrtomb@plt+0xf060>
  411b3c:	stp	x29, x30, [sp, #-16]!
  411b40:	mov	x29, sp
  411b44:	bl	411a4c <wcrtomb@plt+0xf03c>
  411b48:	mov	x1, #0x4973                	// #18803
  411b4c:	movk	x1, #0x5265, lsl #16
  411b50:	cmp	x0, x1
  411b54:	b.eq	411bb4 <wcrtomb@plt+0xf1a4>  // b.none
  411b58:	b.gt	411b84 <wcrtomb@plt+0xf174>
  411b5c:	mov	x1, #0x6969                	// #26985
  411b60:	cmp	x0, x1
  411b64:	b.eq	411bbc <wcrtomb@plt+0xf1ac>  // b.none
  411b68:	mov	x1, #0x9fa0                	// #40864
  411b6c:	cmp	x0, x1
  411b70:	b.eq	411bbc <wcrtomb@plt+0xf1ac>  // b.none
  411b74:	cmp	x0, #0x0
  411b78:	cset	w0, ne  // ne = any
  411b7c:	ldp	x29, x30, [sp], #16
  411b80:	ret
  411b84:	mov	x1, #0x5342                	// #21314
  411b88:	movk	x1, #0x5846, lsl #16
  411b8c:	cmp	x0, x1
  411b90:	b.eq	411bb4 <wcrtomb@plt+0xf1a4>  // b.none
  411b94:	mov	x1, #0x4d42                	// #19778
  411b98:	movk	x1, #0xff53, lsl #16
  411b9c:	cmp	x0, x1
  411ba0:	b.eq	411bbc <wcrtomb@plt+0xf1ac>  // b.none
  411ba4:	mov	x1, #0x414f                	// #16719
  411ba8:	movk	x1, #0x5346, lsl #16
  411bac:	cmp	x0, x1
  411bb0:	b	411b78 <wcrtomb@plt+0xf168>
  411bb4:	mov	w0, #0x2                   	// #2
  411bb8:	b	411b7c <wcrtomb@plt+0xf16c>
  411bbc:	mov	w0, #0x0                   	// #0
  411bc0:	b	411b7c <wcrtomb@plt+0xf16c>
  411bc4:	stp	x29, x30, [sp, #-32]!
  411bc8:	mov	x29, sp
  411bcc:	stp	x19, x20, [sp, #16]
  411bd0:	mov	x19, x0
  411bd4:	ldr	w0, [x0, #44]
  411bd8:	mov	w20, w1
  411bdc:	cmp	w0, w1
  411be0:	mov	w1, #0xffffff9c            	// #-100
  411be4:	ccmp	w0, w1, #0x4, eq  // eq = none
  411be8:	b.eq	411bf0 <wcrtomb@plt+0xf1e0>  // b.none
  411bec:	bl	4026f0 <abort@plt>
  411bf0:	and	w2, w2, #0xff
  411bf4:	cbz	w2, 411c10 <wcrtomb@plt+0xf200>
  411bf8:	mov	w1, w0
  411bfc:	add	x0, x19, #0x60
  411c00:	bl	41e108 <_obstack_memory_used@@Base+0xaa08>
  411c04:	tbnz	w0, #31, 411c18 <wcrtomb@plt+0xf208>
  411c08:	bl	402680 <close@plt>
  411c0c:	b	411c18 <wcrtomb@plt+0xf208>
  411c10:	ldr	w1, [x19, #72]
  411c14:	tbz	w1, #2, 411c04 <wcrtomb@plt+0xf1f4>
  411c18:	str	w20, [x19, #44]
  411c1c:	ldp	x19, x20, [sp, #16]
  411c20:	ldp	x29, x30, [sp], #32
  411c24:	ret
  411c28:	stp	x29, x30, [sp, #-32]!
  411c2c:	mov	x29, sp
  411c30:	ldr	w1, [x0, #72]
  411c34:	stp	x19, x20, [sp, #16]
  411c38:	mov	x19, x0
  411c3c:	tbnz	w1, #2, 411c80 <wcrtomb@plt+0xf270>
  411c40:	tbz	w1, #9, 411c6c <wcrtomb@plt+0xf25c>
  411c44:	and	w20, w1, #0x4
  411c48:	mov	w2, #0x1                   	// #1
  411c4c:	mov	w1, #0xffffff9c            	// #-100
  411c50:	bl	411bc4 <wcrtomb@plt+0xf1b4>
  411c54:	add	x0, x19, #0x60
  411c58:	bl	411a0c <wcrtomb@plt+0xeffc>
  411c5c:	mov	w0, w20
  411c60:	ldp	x19, x20, [sp, #16]
  411c64:	ldp	x29, x30, [sp], #32
  411c68:	ret
  411c6c:	ldr	w0, [x0, #40]
  411c70:	bl	402400 <fchdir@plt>
  411c74:	cmp	w0, #0x0
  411c78:	cset	w20, ne  // ne = any
  411c7c:	b	411c54 <wcrtomb@plt+0xf244>
  411c80:	mov	w20, #0x0                   	// #0
  411c84:	b	411c54 <wcrtomb@plt+0xf244>
  411c88:	stp	x29, x30, [sp, #-208]!
  411c8c:	mov	x29, sp
  411c90:	stp	x19, x20, [sp, #16]
  411c94:	stp	x21, x22, [sp, #32]
  411c98:	mov	x22, x0
  411c9c:	mov	w21, w2
  411ca0:	stp	x23, x24, [sp, #48]
  411ca4:	mov	x23, x3
  411ca8:	str	x25, [sp, #64]
  411cac:	mov	x25, x1
  411cb0:	cbz	x3, 411cf4 <wcrtomb@plt+0xf2e4>
  411cb4:	mov	x0, x3
  411cb8:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  411cbc:	add	x1, x1, #0x847
  411cc0:	bl	402780 <strcmp@plt>
  411cc4:	cmp	w0, #0x0
  411cc8:	cset	w24, eq  // eq = none
  411ccc:	ldr	w0, [x22, #72]
  411cd0:	and	w20, w0, #0x4
  411cd4:	tbz	w0, #2, 411cfc <wcrtomb@plt+0xf2ec>
  411cd8:	and	w20, w0, #0x200
  411cdc:	tbz	w0, #9, 411df8 <wcrtomb@plt+0xf3e8>
  411ce0:	tbnz	w21, #31, 411cec <wcrtomb@plt+0xf2dc>
  411ce4:	mov	w0, w21
  411ce8:	bl	402680 <close@plt>
  411cec:	mov	w20, #0x0                   	// #0
  411cf0:	b	411df8 <wcrtomb@plt+0xf3e8>
  411cf4:	mov	w24, #0x0                   	// #0
  411cf8:	b	411ccc <wcrtomb@plt+0xf2bc>
  411cfc:	cmp	w21, #0x0
  411d00:	ccmp	w24, #0x0, #0x4, lt  // lt = tstop
  411d04:	b.eq	411d58 <wcrtomb@plt+0xf348>  // b.none
  411d08:	tbnz	w0, #9, 411d28 <wcrtomb@plt+0xf318>
  411d0c:	mov	x1, x23
  411d10:	mov	x0, x22
  411d14:	bl	41199c <wcrtomb@plt+0xef8c>
  411d18:	mov	w19, w0
  411d1c:	tbz	w0, #31, 411d60 <wcrtomb@plt+0xf350>
  411d20:	mov	w20, #0xffffffff            	// #-1
  411d24:	b	411df8 <wcrtomb@plt+0xf3e8>
  411d28:	add	x19, x22, #0x60
  411d2c:	mov	x0, x19
  411d30:	bl	41e100 <_obstack_memory_used@@Base+0xaa00>
  411d34:	tst	w0, #0xff
  411d38:	b.ne	411d0c <wcrtomb@plt+0xf2fc>  // b.any
  411d3c:	mov	x0, x19
  411d40:	bl	41e150 <_obstack_memory_used@@Base+0xaa50>
  411d44:	mov	w19, w0
  411d48:	tbnz	w0, #31, 411d0c <wcrtomb@plt+0xf2fc>
  411d4c:	mov	w21, w0
  411d50:	mov	x23, #0x0                   	// #0
  411d54:	b	411d60 <wcrtomb@plt+0xf350>
  411d58:	tbnz	w21, #31, 411d0c <wcrtomb@plt+0xf2fc>
  411d5c:	mov	w19, w21
  411d60:	ldr	w0, [x22, #72]
  411d64:	tbnz	w0, #1, 411d80 <wcrtomb@plt+0xf370>
  411d68:	cbz	x23, 411de0 <wcrtomb@plt+0xf3d0>
  411d6c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  411d70:	mov	x0, x23
  411d74:	add	x1, x1, #0x847
  411d78:	bl	402780 <strcmp@plt>
  411d7c:	cbnz	w0, 411de0 <wcrtomb@plt+0xf3d0>
  411d80:	add	x1, sp, #0x50
  411d84:	mov	w0, w19
  411d88:	bl	41e650 <_obstack_memory_used@@Base+0xaf50>
  411d8c:	cbnz	w0, 411dbc <wcrtomb@plt+0xf3ac>
  411d90:	ldr	x0, [sp, #80]
  411d94:	ldr	x1, [x25, #120]
  411d98:	cmp	x1, x0
  411d9c:	b.ne	411db0 <wcrtomb@plt+0xf3a0>  // b.any
  411da0:	ldr	x0, [sp, #88]
  411da4:	ldr	x1, [x25, #128]
  411da8:	cmp	x1, x0
  411dac:	b.eq	411de0 <wcrtomb@plt+0xf3d0>  // b.none
  411db0:	bl	402980 <__errno_location@plt>
  411db4:	mov	w1, #0x2                   	// #2
  411db8:	str	w1, [x0]
  411dbc:	mov	w20, #0xffffffff            	// #-1
  411dc0:	tbz	w21, #31, 411df8 <wcrtomb@plt+0xf3e8>
  411dc4:	bl	402980 <__errno_location@plt>
  411dc8:	mov	x21, x0
  411dcc:	mov	w0, w19
  411dd0:	ldr	w22, [x21]
  411dd4:	bl	402680 <close@plt>
  411dd8:	str	w22, [x21]
  411ddc:	b	411df8 <wcrtomb@plt+0xf3e8>
  411de0:	ldr	w0, [x22, #72]
  411de4:	tbz	w0, #9, 411e14 <wcrtomb@plt+0xf404>
  411de8:	eor	w2, w24, #0x1
  411dec:	mov	w1, w19
  411df0:	mov	x0, x22
  411df4:	bl	411bc4 <wcrtomb@plt+0xf1b4>
  411df8:	mov	w0, w20
  411dfc:	ldp	x19, x20, [sp, #16]
  411e00:	ldp	x21, x22, [sp, #32]
  411e04:	ldp	x23, x24, [sp, #48]
  411e08:	ldr	x25, [sp, #64]
  411e0c:	ldp	x29, x30, [sp], #208
  411e10:	ret
  411e14:	mov	w0, w19
  411e18:	bl	402400 <fchdir@plt>
  411e1c:	mov	w20, w0
  411e20:	b	411dc0 <wcrtomb@plt+0xf3b0>
  411e24:	stp	x29, x30, [sp, #-32]!
  411e28:	add	x1, x1, #0x100
  411e2c:	mov	x29, sp
  411e30:	ldr	x2, [x0, #48]
  411e34:	str	x19, [sp, #16]
  411e38:	mov	x19, x0
  411e3c:	adds	x1, x2, x1
  411e40:	ldr	x0, [x0, #32]
  411e44:	b.cc	411e6c <wcrtomb@plt+0xf45c>  // b.lo, b.ul, b.last
  411e48:	bl	4027a0 <free@plt>
  411e4c:	str	xzr, [x19, #32]
  411e50:	bl	402980 <__errno_location@plt>
  411e54:	mov	w1, #0x24                  	// #36
  411e58:	str	w1, [x0]
  411e5c:	mov	w0, #0x0                   	// #0
  411e60:	ldr	x19, [sp, #16]
  411e64:	ldp	x29, x30, [sp], #32
  411e68:	ret
  411e6c:	str	x1, [x19, #48]
  411e70:	bl	402640 <realloc@plt>
  411e74:	cbnz	x0, 411e88 <wcrtomb@plt+0xf478>
  411e78:	ldr	x0, [x19, #32]
  411e7c:	bl	4027a0 <free@plt>
  411e80:	str	xzr, [x19, #32]
  411e84:	b	411e5c <wcrtomb@plt+0xf44c>
  411e88:	str	x0, [x19, #32]
  411e8c:	mov	w0, #0x1                   	// #1
  411e90:	b	411e60 <wcrtomb@plt+0xf450>
  411e94:	stp	x29, x30, [sp, #-32]!
  411e98:	mov	x29, sp
  411e9c:	ldr	w1, [x0, #72]
  411ea0:	str	x19, [sp, #16]
  411ea4:	mov	x19, x0
  411ea8:	mov	w0, #0x102                 	// #258
  411eac:	tst	w1, w0
  411eb0:	b.eq	411ef0 <wcrtomb@plt+0xf4e0>  // b.none
  411eb4:	adrp	x4, 402000 <mbrtowc@plt-0x350>
  411eb8:	adrp	x3, 411000 <wcrtomb@plt+0xe5f0>
  411ebc:	add	x4, x4, #0x7a0
  411ec0:	add	x3, x3, #0x650
  411ec4:	adrp	x2, 411000 <wcrtomb@plt+0xe5f0>
  411ec8:	mov	x1, #0x0                   	// #0
  411ecc:	add	x2, x2, #0x67c
  411ed0:	mov	x0, #0x1f                  	// #31
  411ed4:	bl	40eb30 <wcrtomb@plt+0xc120>
  411ed8:	cmp	x0, #0x0
  411edc:	str	x0, [x19, #88]
  411ee0:	cset	w0, ne  // ne = any
  411ee4:	ldr	x19, [sp, #16]
  411ee8:	ldp	x29, x30, [sp], #32
  411eec:	ret
  411ef0:	mov	x0, #0x20                  	// #32
  411ef4:	bl	402520 <malloc@plt>
  411ef8:	str	x0, [x19, #88]
  411efc:	cbz	x0, 411f0c <wcrtomb@plt+0xf4fc>
  411f00:	bl	41df10 <_obstack_memory_used@@Base+0xa810>
  411f04:	mov	w0, #0x1                   	// #1
  411f08:	b	411ee4 <wcrtomb@plt+0xf4d4>
  411f0c:	mov	w0, #0x0                   	// #0
  411f10:	b	411ee4 <wcrtomb@plt+0xf4d4>
  411f14:	ldr	w2, [x0, #72]
  411f18:	mov	w1, #0x102                 	// #258
  411f1c:	ldr	x0, [x0, #88]
  411f20:	tst	w2, w1
  411f24:	b.eq	411f30 <wcrtomb@plt+0xf520>  // b.none
  411f28:	cbz	x0, 411f34 <wcrtomb@plt+0xf524>
  411f2c:	b	40ec90 <wcrtomb@plt+0xc280>
  411f30:	b	4027a0 <free@plt>
  411f34:	ret
  411f38:	stp	x29, x30, [sp, #-48]!
  411f3c:	mov	x29, sp
  411f40:	stp	x19, x20, [sp, #16]
  411f44:	mov	x19, x1
  411f48:	ldr	w1, [x0, #72]
  411f4c:	str	x21, [sp, #32]
  411f50:	mov	x21, x0
  411f54:	mov	w0, #0x102                 	// #258
  411f58:	tst	w1, w0
  411f5c:	b.eq	411fd8 <wcrtomb@plt+0xf5c8>  // b.none
  411f60:	mov	x0, #0x18                  	// #24
  411f64:	bl	402520 <malloc@plt>
  411f68:	mov	x20, x0
  411f6c:	cbnz	x0, 411f84 <wcrtomb@plt+0xf574>
  411f70:	mov	w0, #0x0                   	// #0
  411f74:	ldp	x19, x20, [sp, #16]
  411f78:	ldr	x21, [sp, #32]
  411f7c:	ldp	x29, x30, [sp], #48
  411f80:	ret
  411f84:	mov	x1, x0
  411f88:	str	x19, [x20, #16]
  411f8c:	ldr	x0, [x19, #120]
  411f90:	str	x0, [x20]
  411f94:	ldr	x0, [x19, #128]
  411f98:	str	x0, [x20, #8]
  411f9c:	ldr	x0, [x21, #88]
  411fa0:	bl	40efe4 <wcrtomb@plt+0xc5d4>
  411fa4:	mov	x21, x0
  411fa8:	cmp	x20, x0
  411fac:	b.ne	411fb8 <wcrtomb@plt+0xf5a8>  // b.any
  411fb0:	mov	w0, #0x1                   	// #1
  411fb4:	b	411f74 <wcrtomb@plt+0xf564>
  411fb8:	mov	x0, x20
  411fbc:	bl	4027a0 <free@plt>
  411fc0:	cbz	x21, 411f70 <wcrtomb@plt+0xf560>
  411fc4:	ldr	x0, [x21, #16]
  411fc8:	str	x0, [x19]
  411fcc:	mov	w0, #0x2                   	// #2
  411fd0:	strh	w0, [x19, #108]
  411fd4:	b	411fb0 <wcrtomb@plt+0xf5a0>
  411fd8:	ldr	x0, [x21, #88]
  411fdc:	add	x1, x19, #0x78
  411fe0:	bl	41df24 <_obstack_memory_used@@Base+0xa824>
  411fe4:	ands	w0, w0, #0xff
  411fe8:	b.eq	411fb0 <wcrtomb@plt+0xf5a0>  // b.none
  411fec:	mov	w1, #0x2                   	// #2
  411ff0:	str	x19, [x19]
  411ff4:	strh	w1, [x19, #108]
  411ff8:	b	411f74 <wcrtomb@plt+0xf564>
  411ffc:	stp	x29, x30, [sp, #-48]!
  412000:	mov	w2, #0x102                 	// #258
  412004:	mov	x29, sp
  412008:	ldr	w3, [x0, #72]
  41200c:	tst	w3, w2
  412010:	b.eq	41203c <wcrtomb@plt+0xf62c>  // b.none
  412014:	ldp	x2, x1, [x1, #120]
  412018:	stp	x2, x1, [sp, #24]
  41201c:	ldr	x0, [x0, #88]
  412020:	add	x1, sp, #0x18
  412024:	bl	40f024 <wcrtomb@plt+0xc614>
  412028:	cbnz	x0, 412030 <wcrtomb@plt+0xf620>
  41202c:	bl	4026f0 <abort@plt>
  412030:	bl	4027a0 <free@plt>
  412034:	ldp	x29, x30, [sp], #48
  412038:	ret
  41203c:	ldr	x2, [x1, #8]
  412040:	cbz	x2, 412034 <wcrtomb@plt+0xf624>
  412044:	ldr	x3, [x2, #88]
  412048:	tbnz	x3, #63, 412034 <wcrtomb@plt+0xf624>
  41204c:	ldr	x0, [x0, #88]
  412050:	ldr	x3, [x0, #16]
  412054:	cbz	x3, 41202c <wcrtomb@plt+0xf61c>
  412058:	ldr	x4, [x0]
  41205c:	ldr	x3, [x1, #128]
  412060:	cmp	x4, x3
  412064:	b.ne	412034 <wcrtomb@plt+0xf624>  // b.any
  412068:	ldr	x3, [x0, #8]
  41206c:	ldr	x1, [x1, #120]
  412070:	cmp	x3, x1
  412074:	b.ne	412034 <wcrtomb@plt+0xf624>  // b.any
  412078:	ldr	x1, [x2, #120]
  41207c:	str	x1, [x0, #8]
  412080:	ldr	x1, [x2, #128]
  412084:	str	x1, [x0]
  412088:	b	412034 <wcrtomb@plt+0xf624>
  41208c:	stp	x29, x30, [sp, #-192]!
  412090:	mov	x29, sp
  412094:	stp	x27, x28, [sp, #80]
  412098:	ldr	x27, [x0]
  41209c:	stp	x25, x26, [sp, #64]
  4120a0:	mov	x26, x0
  4120a4:	stp	x19, x20, [sp, #16]
  4120a8:	mov	w20, w1
  4120ac:	ldr	x25, [x27, #24]
  4120b0:	stp	x21, x22, [sp, #32]
  4120b4:	stp	x23, x24, [sp, #48]
  4120b8:	cbz	x25, 41211c <wcrtomb@plt+0xf70c>
  4120bc:	mov	x0, x25
  4120c0:	bl	402830 <dirfd@plt>
  4120c4:	str	w0, [sp, #188]
  4120c8:	tbz	w0, #31, 4121b8 <wcrtomb@plt+0xf7a8>
  4120cc:	ldr	x0, [x27, #24]
  4120d0:	bl	402660 <closedir@plt>
  4120d4:	str	xzr, [x27, #24]
  4120d8:	cmp	w20, #0x3
  4120dc:	b.eq	412104 <wcrtomb@plt+0xf6f4>  // b.none
  4120e0:	mov	x28, #0x0                   	// #0
  4120e4:	mov	x0, x28
  4120e8:	ldp	x19, x20, [sp, #16]
  4120ec:	ldp	x21, x22, [sp, #32]
  4120f0:	ldp	x23, x24, [sp, #48]
  4120f4:	ldp	x25, x26, [sp, #64]
  4120f8:	ldp	x27, x28, [sp, #80]
  4120fc:	ldp	x29, x30, [sp], #192
  412100:	ret
  412104:	mov	w0, #0x4                   	// #4
  412108:	strh	w0, [x27, #108]
  41210c:	bl	402980 <__errno_location@plt>
  412110:	ldr	w0, [x0]
  412114:	str	w0, [x27, #64]
  412118:	b	4120e0 <wcrtomb@plt+0xf6d0>
  41211c:	ldr	w3, [x26, #72]
  412120:	mov	w0, #0x204                 	// #516
  412124:	and	w0, w3, w0
  412128:	cmp	w0, #0x200
  41212c:	b.ne	412188 <wcrtomb@plt+0xf778>  // b.any
  412130:	ldr	w0, [x26, #44]
  412134:	and	w2, w3, #0x10
  412138:	ldr	x1, [x27, #48]
  41213c:	tbz	w3, #4, 412154 <wcrtomb@plt+0xf744>
  412140:	tbz	w3, #0, 412190 <wcrtomb@plt+0xf780>
  412144:	ldr	x2, [x27, #88]
  412148:	cmp	x2, #0x0
  41214c:	cset	w2, ne  // ne = any
  412150:	lsl	w2, w2, #15
  412154:	add	x3, sp, #0xbc
  412158:	bl	41e284 <_obstack_memory_used@@Base+0xab84>
  41215c:	str	x0, [x27, #24]
  412160:	mov	x28, x0
  412164:	cbnz	x0, 412198 <wcrtomb@plt+0xf788>
  412168:	cmp	w20, #0x3
  41216c:	b.ne	4120e0 <wcrtomb@plt+0xf6d0>  // b.any
  412170:	mov	w0, #0x4                   	// #4
  412174:	strh	w0, [x27, #108]
  412178:	bl	402980 <__errno_location@plt>
  41217c:	ldr	w0, [x0]
  412180:	str	w0, [x27, #64]
  412184:	b	4120e4 <wcrtomb@plt+0xf6d4>
  412188:	mov	w0, #0xffffff9c            	// #-100
  41218c:	b	412134 <wcrtomb@plt+0xf724>
  412190:	mov	w2, #0x8000                	// #32768
  412194:	b	412154 <wcrtomb@plt+0xf744>
  412198:	ldrh	w0, [x27, #108]
  41219c:	cmp	w0, #0xb
  4121a0:	b.ne	41231c <wcrtomb@plt+0xf90c>  // b.any
  4121a4:	mov	x1, x27
  4121a8:	mov	x0, x26
  4121ac:	mov	w2, #0x0                   	// #0
  4121b0:	bl	4116d0 <wcrtomb@plt+0xecc0>
  4121b4:	strh	w0, [x27, #108]
  4121b8:	ldr	x0, [x26, #64]
  4121bc:	cmp	x0, #0x0
  4121c0:	mov	x0, #0x86a0                	// #34464
  4121c4:	movk	x0, #0x1, lsl #16
  4121c8:	csinv	x0, x0, xzr, eq  // eq = none
  4121cc:	str	x0, [sp, #136]
  4121d0:	cbz	x25, 412364 <wcrtomb@plt+0xf954>
  4121d4:	mov	w0, #0x1                   	// #1
  4121d8:	str	w0, [sp, #112]
  4121dc:	ldr	x0, [x27, #72]
  4121e0:	ldr	x1, [x27, #56]
  4121e4:	sub	x23, x0, #0x1
  4121e8:	ldrb	w1, [x1, x23]
  4121ec:	cmp	w1, #0x2f
  4121f0:	csel	x23, x23, x0, eq  // eq = none
  4121f4:	ldr	w0, [x26, #72]
  4121f8:	tbz	w0, #2, 412454 <wcrtomb@plt+0xfa44>
  4121fc:	ldr	x0, [x26, #32]
  412200:	mov	w1, #0x2f                  	// #47
  412204:	add	x21, x0, x23
  412208:	add	x21, x21, #0x1
  41220c:	strb	w1, [x0, x23]
  412210:	add	x0, x23, #0x1
  412214:	str	x0, [sp, #104]
  412218:	ldr	x0, [x26, #48]
  41221c:	add	x1, x23, #0x1
  412220:	mov	x19, #0x0                   	// #0
  412224:	mov	x28, #0x0                   	// #0
  412228:	sub	x0, x0, x1
  41222c:	str	x0, [sp, #128]
  412230:	ldr	x0, [x27, #88]
  412234:	str	wzr, [sp, #100]
  412238:	str	wzr, [sp, #116]
  41223c:	add	x0, x0, #0x1
  412240:	str	xzr, [sp, #120]
  412244:	str	x0, [sp, #144]
  412248:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41224c:	add	x0, x0, #0x62
  412250:	str	x0, [sp, #152]
  412254:	ldr	x1, [x27, #24]
  412258:	cbz	x1, 4122a4 <wcrtomb@plt+0xf894>
  41225c:	str	x1, [sp, #160]
  412260:	bl	402980 <__errno_location@plt>
  412264:	mov	x24, x0
  412268:	ldr	x1, [sp, #160]
  41226c:	str	wzr, [x24]
  412270:	mov	x0, x1
  412274:	bl	402630 <readdir@plt>
  412278:	mov	x7, x0
  41227c:	cbnz	x0, 41245c <wcrtomb@plt+0xfa4c>
  412280:	ldr	w0, [x24]
  412284:	cbz	w0, 4122a4 <wcrtomb@plt+0xf894>
  412288:	str	w0, [x27, #64]
  41228c:	orr	x0, x25, x19
  412290:	cmp	x0, #0x0
  412294:	mov	w1, #0x7                   	// #7
  412298:	mov	w0, #0x4                   	// #4
  41229c:	csel	w0, w0, w1, eq  // eq = none
  4122a0:	strh	w0, [x27, #108]
  4122a4:	ldr	x0, [x27, #24]
  4122a8:	cbz	x0, 4122b4 <wcrtomb@plt+0xf8a4>
  4122ac:	bl	402660 <closedir@plt>
  4122b0:	str	xzr, [x27, #24]
  4122b4:	ldr	w0, [sp, #116]
  4122b8:	cbnz	w0, 4126fc <wcrtomb@plt+0xfcec>
  4122bc:	ldr	w0, [x26, #72]
  4122c0:	tbnz	w0, #2, 412778 <wcrtomb@plt+0xfd68>
  4122c4:	ldr	w0, [sp, #112]
  4122c8:	cmp	x25, #0x0
  4122cc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4122d0:	b.eq	4127b4 <wcrtomb@plt+0xfda4>  // b.none
  4122d4:	cmp	x19, #0x0
  4122d8:	ccmp	w20, #0x1, #0x4, ne  // ne = any
  4122dc:	b.ne	4127e0 <wcrtomb@plt+0xfdd0>  // b.any
  4122e0:	ldr	x0, [x27, #88]
  4122e4:	cbnz	x0, 412798 <wcrtomb@plt+0xfd88>
  4122e8:	mov	x0, x26
  4122ec:	bl	411c28 <wcrtomb@plt+0xf218>
  4122f0:	cmp	w0, #0x0
  4122f4:	cset	w0, ne  // ne = any
  4122f8:	cbz	w0, 4127b4 <wcrtomb@plt+0xfda4>
  4122fc:	mov	w0, #0x7                   	// #7
  412300:	strh	w0, [x27, #108]
  412304:	ldr	w0, [x26, #72]
  412308:	orr	w0, w0, #0x2000
  41230c:	str	w0, [x26, #72]
  412310:	mov	x0, x28
  412314:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412318:	b	4120e0 <wcrtomb@plt+0xf6d0>
  41231c:	ldr	w0, [x26, #72]
  412320:	tbz	w0, #8, 4121b8 <wcrtomb@plt+0xf7a8>
  412324:	mov	x1, x27
  412328:	mov	x0, x26
  41232c:	bl	411ffc <wcrtomb@plt+0xf5ec>
  412330:	mov	w2, #0x0                   	// #0
  412334:	mov	x1, x27
  412338:	mov	x0, x26
  41233c:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412340:	mov	x1, x27
  412344:	mov	x0, x26
  412348:	bl	411f38 <wcrtomb@plt+0xf528>
  41234c:	tst	w0, #0xff
  412350:	b.ne	4121b8 <wcrtomb@plt+0xf7a8>  // b.any
  412354:	bl	402980 <__errno_location@plt>
  412358:	mov	w1, #0xc                   	// #12
  41235c:	str	w1, [x0]
  412360:	b	4120e0 <wcrtomb@plt+0xf6d0>
  412364:	cmp	w20, #0x2
  412368:	b.eq	41241c <wcrtomb@plt+0xfa0c>  // b.none
  41236c:	ldr	w0, [x26, #72]
  412370:	and	w0, w0, #0x38
  412374:	cmp	w0, #0x18
  412378:	b.ne	412424 <wcrtomb@plt+0xfa14>  // b.any
  41237c:	ldr	w0, [x27, #140]
  412380:	cmp	w0, #0x2
  412384:	b.ne	412424 <wcrtomb@plt+0xfa14>  // b.any
  412388:	ldr	w1, [sp, #188]
  41238c:	mov	x0, x27
  412390:	bl	411b3c <wcrtomb@plt+0xf12c>
  412394:	cmp	w0, #0x0
  412398:	cset	w0, eq  // eq = none
  41239c:	cmp	w20, #0x3
  4123a0:	mov	w19, w0
  4123a4:	cset	w21, eq  // eq = none
  4123a8:	orr	w0, w21, w0
  4123ac:	str	w0, [sp, #112]
  4123b0:	cbz	w0, 4121dc <wcrtomb@plt+0xf7cc>
  4123b4:	ldr	w0, [x26, #72]
  4123b8:	tbz	w0, #9, 4123d0 <wcrtomb@plt+0xf9c0>
  4123bc:	ldr	w0, [sp, #188]
  4123c0:	mov	w2, #0x3                   	// #3
  4123c4:	mov	w1, #0x406                 	// #1030
  4123c8:	bl	41e398 <_obstack_memory_used@@Base+0xac98>
  4123cc:	str	w0, [sp, #188]
  4123d0:	ldr	w2, [sp, #188]
  4123d4:	tbz	w2, #31, 41242c <wcrtomb@plt+0xfa1c>
  4123d8:	cmp	w21, #0x0
  4123dc:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4123e0:	b.ne	412444 <wcrtomb@plt+0xfa34>  // b.any
  4123e4:	ldrh	w0, [x27, #110]
  4123e8:	orr	w0, w0, #0x1
  4123ec:	strh	w0, [x27, #110]
  4123f0:	ldr	x0, [x27, #24]
  4123f4:	bl	402660 <closedir@plt>
  4123f8:	ldr	w0, [x26, #72]
  4123fc:	str	xzr, [x27, #24]
  412400:	tbz	w0, #9, 412410 <wcrtomb@plt+0xfa00>
  412404:	ldr	w0, [sp, #188]
  412408:	tbnz	w0, #31, 412410 <wcrtomb@plt+0xfa00>
  41240c:	bl	402680 <close@plt>
  412410:	str	xzr, [x27, #24]
  412414:	str	wzr, [sp, #112]
  412418:	b	4121dc <wcrtomb@plt+0xf7cc>
  41241c:	mov	w0, #0x0                   	// #0
  412420:	b	41239c <wcrtomb@plt+0xf98c>
  412424:	mov	w0, #0x1                   	// #1
  412428:	b	41239c <wcrtomb@plt+0xf98c>
  41242c:	mov	x1, x27
  412430:	mov	x0, x26
  412434:	mov	x3, #0x0                   	// #0
  412438:	bl	411c88 <wcrtomb@plt+0xf278>
  41243c:	cbnz	w0, 4123d8 <wcrtomb@plt+0xf9c8>
  412440:	b	4121d4 <wcrtomb@plt+0xf7c4>
  412444:	bl	402980 <__errno_location@plt>
  412448:	ldr	w0, [x0]
  41244c:	str	w0, [x27, #64]
  412450:	b	4123e4 <wcrtomb@plt+0xf9d4>
  412454:	mov	x21, #0x0                   	// #0
  412458:	b	412210 <wcrtomb@plt+0xf800>
  41245c:	ldr	w0, [x26, #72]
  412460:	tbnz	w0, #5, 412484 <wcrtomb@plt+0xfa74>
  412464:	ldrb	w0, [x7, #19]
  412468:	cmp	w0, #0x2e
  41246c:	b.ne	412484 <wcrtomb@plt+0xfa74>  // b.any
  412470:	ldrb	w0, [x7, #20]
  412474:	cbz	w0, 412254 <wcrtomb@plt+0xf844>
  412478:	ldrh	w0, [x7, #20]
  41247c:	cmp	w0, #0x2e
  412480:	b.eq	412254 <wcrtomb@plt+0xf844>  // b.none
  412484:	add	x22, x7, #0x13
  412488:	str	x7, [sp, #168]
  41248c:	mov	x0, x22
  412490:	bl	4023c0 <strlen@plt>
  412494:	mov	x1, x22
  412498:	mov	x2, x0
  41249c:	mov	x0, x26
  4124a0:	str	x2, [sp, #160]
  4124a4:	bl	41191c <wcrtomb@plt+0xef0c>
  4124a8:	mov	x22, x0
  4124ac:	cbz	x0, 4124ec <wcrtomb@plt+0xfadc>
  4124b0:	ldp	x2, x7, [sp, #160]
  4124b4:	ldr	x0, [sp, #128]
  4124b8:	cmp	x0, x2
  4124bc:	b.hi	412558 <wcrtomb@plt+0xfb48>  // b.pmore
  4124c0:	ldr	x8, [x26, #32]
  4124c4:	add	x1, x23, #0x2
  4124c8:	add	x1, x1, x2
  4124cc:	mov	x0, x26
  4124d0:	str	x2, [sp, #128]
  4124d4:	str	x8, [sp, #160]
  4124d8:	bl	411e24 <wcrtomb@plt+0xf414>
  4124dc:	ands	w0, w0, #0xff
  4124e0:	ldr	x2, [sp, #128]
  4124e4:	ldp	x8, x7, [sp, #160]
  4124e8:	b.ne	412528 <wcrtomb@plt+0xfb18>  // b.any
  4124ec:	ldr	w19, [x24]
  4124f0:	mov	x0, x22
  4124f4:	bl	4027a0 <free@plt>
  4124f8:	mov	x0, x28
  4124fc:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412500:	ldr	x0, [x27, #24]
  412504:	bl	402660 <closedir@plt>
  412508:	mov	w0, #0x7                   	// #7
  41250c:	strh	w0, [x27, #108]
  412510:	ldr	w0, [x26, #72]
  412514:	str	xzr, [x27, #24]
  412518:	orr	w0, w0, #0x2000
  41251c:	str	w0, [x26, #72]
  412520:	str	w19, [x24]
  412524:	b	4120e0 <wcrtomb@plt+0xf6d0>
  412528:	ldr	x1, [x26, #32]
  41252c:	cmp	x1, x8
  412530:	b.eq	412678 <wcrtomb@plt+0xfc68>  // b.none
  412534:	ldr	w8, [x26, #72]
  412538:	tbz	w8, #2, 412544 <wcrtomb@plt+0xfb34>
  41253c:	ldr	x3, [sp, #104]
  412540:	add	x21, x1, x3
  412544:	ldr	x1, [x26, #48]
  412548:	str	w0, [sp, #116]
  41254c:	ldr	x3, [sp, #104]
  412550:	sub	x1, x1, x3
  412554:	str	x1, [sp, #128]
  412558:	ldr	x0, [sp, #104]
  41255c:	adds	x2, x0, x2
  412560:	b.cs	412680 <wcrtomb@plt+0xfc70>  // b.hs, b.nlast
  412564:	ldr	x0, [sp, #144]
  412568:	str	x0, [x22, #88]
  41256c:	ldr	x0, [x26]
  412570:	str	x0, [x22, #8]
  412574:	ldr	x0, [x7]
  412578:	str	x0, [x22, #128]
  41257c:	ldr	w0, [x26, #72]
  412580:	add	x1, x22, #0xf8
  412584:	str	x2, [x22, #72]
  412588:	tbz	w0, #2, 4126bc <wcrtomb@plt+0xfcac>
  41258c:	ldr	x0, [x22, #56]
  412590:	str	x0, [x22, #48]
  412594:	ldr	x2, [x22, #96]
  412598:	mov	x0, x21
  41259c:	str	x7, [sp, #160]
  4125a0:	add	x2, x2, #0x1
  4125a4:	bl	402380 <memmove@plt>
  4125a8:	ldr	x7, [sp, #160]
  4125ac:	ldr	x0, [x26, #64]
  4125b0:	ldr	w1, [x26, #72]
  4125b4:	cbz	x0, 4125bc <wcrtomb@plt+0xfbac>
  4125b8:	tbz	w1, #10, 4126d4 <wcrtomb@plt+0xfcc4>
  4125bc:	and	w1, w1, #0x18
  4125c0:	ldrb	w0, [x7, #18]
  4125c4:	cmp	w1, #0x18
  4125c8:	b.ne	4126c4 <wcrtomb@plt+0xfcb4>  // b.any
  4125cc:	ands	w1, w0, #0xfffffffb
  4125d0:	cset	w1, ne  // ne = any
  4125d4:	mov	w2, #0xb                   	// #11
  4125d8:	strh	w2, [x22, #108]
  4125dc:	sub	w0, w0, #0x1
  4125e0:	cmp	w0, #0xb
  4125e4:	b.hi	4126cc <wcrtomb@plt+0xfcbc>  // b.pmore
  4125e8:	ldr	x2, [sp, #152]
  4125ec:	ldrh	w0, [x2, w0, uxtw #1]
  4125f0:	str	w0, [x22, #136]
  4125f4:	mov	x0, #0x2                   	// #2
  4125f8:	sub	x0, x0, w1, sxtw
  4125fc:	str	x0, [x22, #168]
  412600:	str	xzr, [x22, #16]
  412604:	cbz	x28, 4126ec <wcrtomb@plt+0xfcdc>
  412608:	ldr	x0, [sp, #120]
  41260c:	str	x22, [x0, #16]
  412610:	mov	x0, #0x2710                	// #10000
  412614:	cmp	x19, x0
  412618:	b.ne	412660 <wcrtomb@plt+0xfc50>  // b.any
  41261c:	ldr	x0, [x26, #64]
  412620:	cbnz	x0, 412660 <wcrtomb@plt+0xfc50>
  412624:	ldr	w1, [sp, #188]
  412628:	mov	x0, x27
  41262c:	bl	411a4c <wcrtomb@plt+0xf03c>
  412630:	mov	x1, #0x1994                	// #6548
  412634:	movk	x1, #0x102, lsl #16
  412638:	cmp	x0, x1
  41263c:	b.eq	4126f4 <wcrtomb@plt+0xfce4>  // b.none
  412640:	mov	x1, #0x4d42                	// #19778
  412644:	movk	x1, #0xff53, lsl #16
  412648:	cmp	x0, x1
  41264c:	b.eq	4126f4 <wcrtomb@plt+0xfce4>  // b.none
  412650:	mov	x1, #0x6969                	// #26985
  412654:	cmp	x0, x1
  412658:	cset	w0, ne  // ne = any
  41265c:	str	w0, [sp, #100]
  412660:	ldr	x0, [sp, #136]
  412664:	add	x19, x19, #0x1
  412668:	cmp	x0, x19
  41266c:	b.ls	4122b4 <wcrtomb@plt+0xf8a4>  // b.plast
  412670:	str	x22, [sp, #120]
  412674:	b	412254 <wcrtomb@plt+0xf844>
  412678:	ldr	w0, [sp, #116]
  41267c:	b	412544 <wcrtomb@plt+0xfb34>
  412680:	mov	x0, x22
  412684:	bl	4027a0 <free@plt>
  412688:	mov	x0, x28
  41268c:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412690:	ldr	x0, [x27, #24]
  412694:	bl	402660 <closedir@plt>
  412698:	mov	w0, #0x7                   	// #7
  41269c:	strh	w0, [x27, #108]
  4126a0:	ldr	w0, [x26, #72]
  4126a4:	str	xzr, [x27, #24]
  4126a8:	orr	w0, w0, #0x2000
  4126ac:	str	w0, [x26, #72]
  4126b0:	mov	w0, #0x24                  	// #36
  4126b4:	str	w0, [x24]
  4126b8:	b	4120e0 <wcrtomb@plt+0xf6d0>
  4126bc:	str	x1, [x22, #48]
  4126c0:	b	4125ac <wcrtomb@plt+0xfb9c>
  4126c4:	mov	w1, #0x0                   	// #0
  4126c8:	b	4125d4 <wcrtomb@plt+0xfbc4>
  4126cc:	mov	w0, #0x0                   	// #0
  4126d0:	b	4125f0 <wcrtomb@plt+0xfbe0>
  4126d4:	mov	x1, x22
  4126d8:	mov	x0, x26
  4126dc:	mov	w2, #0x0                   	// #0
  4126e0:	bl	4116d0 <wcrtomb@plt+0xecc0>
  4126e4:	strh	w0, [x22, #108]
  4126e8:	b	412600 <wcrtomb@plt+0xfbf0>
  4126ec:	mov	x28, x22
  4126f0:	b	412610 <wcrtomb@plt+0xfc00>
  4126f4:	str	wzr, [sp, #100]
  4126f8:	b	412660 <wcrtomb@plt+0xfc50>
  4126fc:	ldr	x0, [x26, #8]
  412700:	ldr	x2, [x26, #32]
  412704:	cbnz	x0, 41274c <wcrtomb@plt+0xfd3c>
  412708:	mov	x0, x28
  41270c:	ldr	x1, [x0, #88]
  412710:	tbnz	x1, #63, 4122bc <wcrtomb@plt+0xf8ac>
  412714:	ldr	x1, [x0, #48]
  412718:	add	x3, x0, #0xf8
  41271c:	cmp	x1, x3
  412720:	b.eq	412734 <wcrtomb@plt+0xfd24>  // b.none
  412724:	ldr	x3, [x0, #56]
  412728:	sub	x1, x1, x3
  41272c:	add	x1, x2, x1
  412730:	str	x1, [x0, #48]
  412734:	ldr	x1, [x0, #16]
  412738:	str	x2, [x0, #56]
  41273c:	cbnz	x1, 412744 <wcrtomb@plt+0xfd34>
  412740:	ldr	x1, [x0, #8]
  412744:	mov	x0, x1
  412748:	b	41270c <wcrtomb@plt+0xfcfc>
  41274c:	ldr	x1, [x0, #48]
  412750:	add	x3, x0, #0xf8
  412754:	cmp	x1, x3
  412758:	b.eq	41276c <wcrtomb@plt+0xfd5c>  // b.none
  41275c:	ldr	x3, [x0, #56]
  412760:	sub	x1, x1, x3
  412764:	add	x1, x2, x1
  412768:	str	x1, [x0, #48]
  41276c:	str	x2, [x0, #56]
  412770:	ldr	x0, [x0, #16]
  412774:	b	412704 <wcrtomb@plt+0xfcf4>
  412778:	ldr	x0, [x26, #48]
  41277c:	ldr	x1, [sp, #104]
  412780:	cmp	x0, x1
  412784:	b.eq	41278c <wcrtomb@plt+0xfd7c>  // b.none
  412788:	cbnz	x19, 412790 <wcrtomb@plt+0xfd80>
  41278c:	sub	x21, x21, #0x1
  412790:	strb	wzr, [x21]
  412794:	b	4122c4 <wcrtomb@plt+0xf8b4>
  412798:	ldr	x1, [x27, #8]
  41279c:	mov	x0, x26
  4127a0:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xb900>
  4127a4:	mov	w2, #0xffffffff            	// #-1
  4127a8:	add	x3, x3, #0x847
  4127ac:	bl	411c88 <wcrtomb@plt+0xf278>
  4127b0:	b	4122f0 <wcrtomb@plt+0xf8e0>
  4127b4:	cbnz	x19, 4127e0 <wcrtomb@plt+0xfdd0>
  4127b8:	cmp	w20, #0x3
  4127bc:	b.ne	412310 <wcrtomb@plt+0xf900>  // b.any
  4127c0:	ldrh	w0, [x27, #108]
  4127c4:	cmp	w0, #0x4
  4127c8:	b.eq	412310 <wcrtomb@plt+0xf900>  // b.none
  4127cc:	cmp	w0, #0x7
  4127d0:	b.eq	412310 <wcrtomb@plt+0xf900>  // b.none
  4127d4:	mov	w0, #0x6                   	// #6
  4127d8:	strh	w0, [x27, #108]
  4127dc:	b	412310 <wcrtomb@plt+0xf900>
  4127e0:	ldr	w0, [sp, #100]
  4127e4:	cbz	w0, 412810 <wcrtomb@plt+0xfe00>
  4127e8:	adrp	x0, 411000 <wcrtomb@plt+0xe5f0>
  4127ec:	add	x0, x0, #0x6b0
  4127f0:	str	x0, [x26, #64]
  4127f4:	mov	x1, x28
  4127f8:	mov	x2, x19
  4127fc:	mov	x0, x26
  412800:	bl	411848 <wcrtomb@plt+0xee38>
  412804:	mov	x28, x0
  412808:	str	xzr, [x26, #64]
  41280c:	b	4120e4 <wcrtomb@plt+0xf6d4>
  412810:	ldr	x0, [x26, #64]
  412814:	cbz	x0, 4120e4 <wcrtomb@plt+0xf6d4>
  412818:	cmp	x19, #0x1
  41281c:	b.eq	4120e4 <wcrtomb@plt+0xf6d4>  // b.none
  412820:	mov	x1, x28
  412824:	mov	x2, x19
  412828:	mov	x0, x26
  41282c:	bl	411848 <wcrtomb@plt+0xee38>
  412830:	mov	x28, x0
  412834:	b	4120e4 <wcrtomb@plt+0xf6d4>
  412838:	stp	x29, x30, [sp, #-96]!
  41283c:	tst	w1, #0xfffff000
  412840:	mov	x29, sp
  412844:	stp	x19, x20, [sp, #16]
  412848:	stp	x21, x22, [sp, #32]
  41284c:	stp	x23, x24, [sp, #48]
  412850:	stp	x25, x26, [sp, #64]
  412854:	stp	x27, x28, [sp, #80]
  412858:	b.eq	412870 <wcrtomb@plt+0xfe60>  // b.none
  41285c:	bl	402980 <__errno_location@plt>
  412860:	mov	w1, #0x16                  	// #22
  412864:	str	w1, [x0]
  412868:	mov	x19, #0x0                   	// #0
  41286c:	b	4129f0 <wcrtomb@plt+0xffe0>
  412870:	mov	x25, x0
  412874:	mov	w0, #0x204                 	// #516
  412878:	and	w0, w1, w0
  41287c:	mov	w21, w1
  412880:	cmp	w0, #0x204
  412884:	b.eq	41285c <wcrtomb@plt+0xfe4c>  // b.none
  412888:	mov	w0, #0x12                  	// #18
  41288c:	tst	w1, w0
  412890:	b.eq	41285c <wcrtomb@plt+0xfe4c>  // b.none
  412894:	mov	x23, x2
  412898:	mov	x1, #0x80                  	// #128
  41289c:	mov	x0, #0x1                   	// #1
  4128a0:	bl	402610 <calloc@plt>
  4128a4:	mov	x19, x0
  4128a8:	cbz	x0, 4129f0 <wcrtomb@plt+0xffe0>
  4128ac:	and	w0, w21, #0xfffffdff
  4128b0:	tst	x21, #0x2
  4128b4:	orr	w0, w0, #0x4
  4128b8:	mov	x22, x25
  4128bc:	csel	w0, w21, w0, eq  // eq = none
  4128c0:	mov	x20, #0x0                   	// #0
  4128c4:	str	x23, [x19, #64]
  4128c8:	str	w0, [x19, #72]
  4128cc:	mov	w0, #0xffffff9c            	// #-100
  4128d0:	str	w0, [x19, #44]
  4128d4:	ldr	x0, [x22]
  4128d8:	cbnz	x0, 412a10 <wcrtomb@plt+0x10000>
  4128dc:	add	x20, x20, #0x1
  4128e0:	mov	x0, x19
  4128e4:	cmp	x20, #0x1, lsl #12
  4128e8:	mov	x1, #0x1000                	// #4096
  4128ec:	csel	x1, x20, x1, cs  // cs = hs, nlast
  4128f0:	bl	411e24 <wcrtomb@plt+0xf414>
  4128f4:	tst	w0, #0xff
  4128f8:	b.eq	412b14 <wcrtomb@plt+0x10104>  // b.none
  4128fc:	ldr	x22, [x25]
  412900:	cbz	x22, 41292c <wcrtomb@plt+0xff1c>
  412904:	mov	x0, x19
  412908:	mov	x2, #0x0                   	// #0
  41290c:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  412910:	add	x1, x1, #0x645
  412914:	bl	41191c <wcrtomb@plt+0xef0c>
  412918:	mov	x22, x0
  41291c:	cbz	x0, 412b0c <wcrtomb@plt+0x100fc>
  412920:	mov	x0, #0xffffffffffffffff    	// #-1
  412924:	str	x0, [x22, #88]
  412928:	str	w0, [x22, #104]
  41292c:	cbz	x23, 412a24 <wcrtomb@plt+0x10014>
  412930:	ldr	w24, [x19, #72]
  412934:	ubfx	x24, x24, #10, #1
  412938:	and	w21, w21, #0x800
  41293c:	mov	x26, #0x0                   	// #0
  412940:	mov	x27, #0x0                   	// #0
  412944:	mov	x28, #0x0                   	// #0
  412948:	ldr	x20, [x25, x28, lsl #3]
  41294c:	cbnz	x20, 412a2c <wcrtomb@plt+0x1001c>
  412950:	cmp	x23, #0x0
  412954:	ccmp	x28, #0x1, #0x0, ne  // ne = any
  412958:	b.ls	412970 <wcrtomb@plt+0xff60>  // b.plast
  41295c:	mov	x1, x27
  412960:	mov	x2, x28
  412964:	mov	x0, x19
  412968:	bl	411848 <wcrtomb@plt+0xee38>
  41296c:	mov	x27, x0
  412970:	mov	x0, x19
  412974:	mov	x2, #0x0                   	// #0
  412978:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  41297c:	add	x1, x1, #0x645
  412980:	bl	41191c <wcrtomb@plt+0xef0c>
  412984:	str	x0, [x19]
  412988:	cbz	x0, 412afc <wcrtomb@plt+0x100ec>
  41298c:	mov	w1, #0x9                   	// #9
  412990:	str	x27, [x0, #16]
  412994:	strh	w1, [x0, #108]
  412998:	mov	x1, #0x1                   	// #1
  41299c:	str	x1, [x0, #88]
  4129a0:	mov	x0, x19
  4129a4:	bl	411e94 <wcrtomb@plt+0xf484>
  4129a8:	tst	w0, #0xff
  4129ac:	b.eq	412afc <wcrtomb@plt+0x100ec>  // b.none
  4129b0:	ldr	w1, [x19, #72]
  4129b4:	mov	w0, #0x204                 	// #516
  4129b8:	tst	w1, w0
  4129bc:	b.ne	4129e4 <wcrtomb@plt+0xffd4>  // b.any
  4129c0:	mov	x0, x19
  4129c4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4129c8:	add	x1, x1, #0x848
  4129cc:	bl	41199c <wcrtomb@plt+0xef8c>
  4129d0:	str	w0, [x19, #40]
  4129d4:	tbz	w0, #31, 4129e4 <wcrtomb@plt+0xffd4>
  4129d8:	ldr	w0, [x19, #72]
  4129dc:	orr	w0, w0, #0x4
  4129e0:	str	w0, [x19, #72]
  4129e4:	add	x0, x19, #0x60
  4129e8:	mov	w1, #0xffffffff            	// #-1
  4129ec:	bl	41e0e4 <_obstack_memory_used@@Base+0xa9e4>
  4129f0:	mov	x0, x19
  4129f4:	ldp	x19, x20, [sp, #16]
  4129f8:	ldp	x21, x22, [sp, #32]
  4129fc:	ldp	x23, x24, [sp, #48]
  412a00:	ldp	x25, x26, [sp, #64]
  412a04:	ldp	x27, x28, [sp, #80]
  412a08:	ldp	x29, x30, [sp], #96
  412a0c:	ret
  412a10:	bl	4023c0 <strlen@plt>
  412a14:	cmp	x20, x0
  412a18:	csel	x20, x20, x0, cs  // cs = hs, nlast
  412a1c:	add	x22, x22, #0x8
  412a20:	b	4128d4 <wcrtomb@plt+0xfec4>
  412a24:	mov	w24, #0x1                   	// #1
  412a28:	b	412938 <wcrtomb@plt+0xff28>
  412a2c:	mov	x0, x20
  412a30:	bl	4023c0 <strlen@plt>
  412a34:	mov	x2, x0
  412a38:	cbnz	w21, 412a70 <wcrtomb@plt+0x10060>
  412a3c:	cmp	x0, #0x2
  412a40:	b.ls	412a70 <wcrtomb@plt+0x10060>  // b.plast
  412a44:	add	x0, x20, x0
  412a48:	ldurb	w0, [x0, #-1]
  412a4c:	cmp	w0, #0x2f
  412a50:	b.ne	412a70 <wcrtomb@plt+0x10060>  // b.any
  412a54:	sub	x1, x20, #0x2
  412a58:	ldrb	w0, [x1, x2]
  412a5c:	cmp	w0, #0x2f
  412a60:	b.ne	412a70 <wcrtomb@plt+0x10060>  // b.any
  412a64:	sub	x2, x2, #0x1
  412a68:	cmp	x2, #0x1
  412a6c:	b.ne	412a58 <wcrtomb@plt+0x10048>  // b.any
  412a70:	mov	x1, x20
  412a74:	mov	x0, x19
  412a78:	bl	41191c <wcrtomb@plt+0xef0c>
  412a7c:	mov	x20, x0
  412a80:	cbz	x0, 412afc <wcrtomb@plt+0x100ec>
  412a84:	add	x0, x0, #0xf8
  412a88:	str	x22, [x20, #8]
  412a8c:	str	x0, [x20, #48]
  412a90:	cmp	x27, #0x0
  412a94:	str	xzr, [x20, #88]
  412a98:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  412a9c:	b.eq	412ac4 <wcrtomb@plt+0x100b4>  // b.none
  412aa0:	mov	w0, #0xb                   	// #11
  412aa4:	strh	w0, [x20, #108]
  412aa8:	mov	x0, #0x2                   	// #2
  412aac:	str	x0, [x20, #168]
  412ab0:	cbz	x23, 412adc <wcrtomb@plt+0x100cc>
  412ab4:	str	x27, [x20, #16]
  412ab8:	add	x28, x28, #0x1
  412abc:	mov	x27, x20
  412ac0:	b	412948 <wcrtomb@plt+0xff38>
  412ac4:	mov	x1, x20
  412ac8:	mov	x0, x19
  412acc:	mov	w2, #0x0                   	// #0
  412ad0:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412ad4:	strh	w0, [x20, #108]
  412ad8:	b	412ab0 <wcrtomb@plt+0x100a0>
  412adc:	str	xzr, [x20, #16]
  412ae0:	cbz	x27, 412af4 <wcrtomb@plt+0x100e4>
  412ae4:	str	x20, [x26, #16]
  412ae8:	mov	x26, x20
  412aec:	mov	x20, x27
  412af0:	b	412ab8 <wcrtomb@plt+0x100a8>
  412af4:	mov	x26, x20
  412af8:	b	412ab8 <wcrtomb@plt+0x100a8>
  412afc:	mov	x0, x27
  412b00:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412b04:	mov	x0, x22
  412b08:	bl	4027a0 <free@plt>
  412b0c:	ldr	x0, [x19, #32]
  412b10:	bl	4027a0 <free@plt>
  412b14:	mov	x0, x19
  412b18:	bl	4027a0 <free@plt>
  412b1c:	b	412868 <wcrtomb@plt+0xfe58>
  412b20:	stp	x29, x30, [sp, #-32]!
  412b24:	mov	x29, sp
  412b28:	stp	x19, x20, [sp, #16]
  412b2c:	mov	x19, x0
  412b30:	ldr	x0, [x0]
  412b34:	cbnz	x0, 412bc0 <wcrtomb@plt+0x101b0>
  412b38:	ldr	x0, [x19, #8]
  412b3c:	cbz	x0, 412b44 <wcrtomb@plt+0x10134>
  412b40:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412b44:	ldr	x0, [x19, #16]
  412b48:	bl	4027a0 <free@plt>
  412b4c:	ldr	x0, [x19, #32]
  412b50:	bl	4027a0 <free@plt>
  412b54:	ldr	w0, [x19, #72]
  412b58:	tbz	w0, #9, 412be4 <wcrtomb@plt+0x101d4>
  412b5c:	ldr	w0, [x19, #44]
  412b60:	tbz	w0, #31, 412bd0 <wcrtomb@plt+0x101c0>
  412b64:	mov	w20, #0x0                   	// #0
  412b68:	add	x0, x19, #0x60
  412b6c:	bl	411a0c <wcrtomb@plt+0xeffc>
  412b70:	ldr	x0, [x19, #80]
  412b74:	cbz	x0, 412b7c <wcrtomb@plt+0x1016c>
  412b78:	bl	40ec90 <wcrtomb@plt+0xc280>
  412b7c:	mov	x0, x19
  412b80:	bl	411f14 <wcrtomb@plt+0xf504>
  412b84:	mov	x0, x19
  412b88:	bl	4027a0 <free@plt>
  412b8c:	cbz	w20, 412b9c <wcrtomb@plt+0x1018c>
  412b90:	bl	402980 <__errno_location@plt>
  412b94:	str	w20, [x0]
  412b98:	mov	w20, #0xffffffff            	// #-1
  412b9c:	mov	w0, w20
  412ba0:	ldp	x19, x20, [sp, #16]
  412ba4:	ldp	x29, x30, [sp], #32
  412ba8:	ret
  412bac:	ldr	x20, [x0, #16]
  412bb0:	cbnz	x20, 412bb8 <wcrtomb@plt+0x101a8>
  412bb4:	ldr	x20, [x0, #8]
  412bb8:	bl	4027a0 <free@plt>
  412bbc:	mov	x0, x20
  412bc0:	ldr	x1, [x0, #88]
  412bc4:	tbz	x1, #63, 412bac <wcrtomb@plt+0x1019c>
  412bc8:	bl	4027a0 <free@plt>
  412bcc:	b	412b38 <wcrtomb@plt+0x10128>
  412bd0:	bl	402680 <close@plt>
  412bd4:	cbz	w0, 412b64 <wcrtomb@plt+0x10154>
  412bd8:	bl	402980 <__errno_location@plt>
  412bdc:	ldr	w20, [x0]
  412be0:	b	412b68 <wcrtomb@plt+0x10158>
  412be4:	tbnz	w0, #2, 412b64 <wcrtomb@plt+0x10154>
  412be8:	ldr	w0, [x19, #40]
  412bec:	bl	402400 <fchdir@plt>
  412bf0:	mov	w20, w0
  412bf4:	cbz	w0, 412c00 <wcrtomb@plt+0x101f0>
  412bf8:	bl	402980 <__errno_location@plt>
  412bfc:	ldr	w20, [x0]
  412c00:	ldr	w0, [x19, #40]
  412c04:	bl	402680 <close@plt>
  412c08:	cbz	w0, 412b68 <wcrtomb@plt+0x10158>
  412c0c:	cbnz	w20, 412b68 <wcrtomb@plt+0x10158>
  412c10:	b	412bd8 <wcrtomb@plt+0x101c8>
  412c14:	stp	x29, x30, [sp, #-64]!
  412c18:	mov	x29, sp
  412c1c:	stp	x19, x20, [sp, #16]
  412c20:	ldr	x19, [x0]
  412c24:	stp	x21, x22, [sp, #32]
  412c28:	str	x23, [sp, #48]
  412c2c:	cbnz	x19, 412c38 <wcrtomb@plt+0x10228>
  412c30:	mov	x19, #0x0                   	// #0
  412c34:	b	412c68 <wcrtomb@plt+0x10258>
  412c38:	ldr	w1, [x0, #72]
  412c3c:	mov	x20, x0
  412c40:	tbnz	w1, #13, 412c30 <wcrtomb@plt+0x10220>
  412c44:	ldrh	w3, [x19, #112]
  412c48:	mov	w2, #0x3                   	// #3
  412c4c:	strh	w2, [x19, #112]
  412c50:	cmp	w3, #0x1
  412c54:	b.ne	412c80 <wcrtomb@plt+0x10270>  // b.any
  412c58:	mov	x1, x19
  412c5c:	mov	w2, #0x0                   	// #0
  412c60:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412c64:	strh	w0, [x19, #108]
  412c68:	mov	x0, x19
  412c6c:	ldp	x19, x20, [sp, #16]
  412c70:	ldp	x21, x22, [sp, #32]
  412c74:	ldr	x23, [sp, #48]
  412c78:	ldp	x29, x30, [sp], #64
  412c7c:	ret
  412c80:	ldrh	w2, [x19, #108]
  412c84:	cmp	w3, #0x2
  412c88:	b.ne	412d68 <wcrtomb@plt+0x10358>  // b.any
  412c8c:	sub	w3, w2, #0xc
  412c90:	and	w3, w3, #0xffff
  412c94:	cmp	w3, #0x1
  412c98:	b.hi	413154 <wcrtomb@plt+0x10744>  // b.pmore
  412c9c:	mov	x1, x19
  412ca0:	mov	w2, #0x1                   	// #1
  412ca4:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412ca8:	strh	w0, [x19, #108]
  412cac:	and	w1, w0, #0xffff
  412cb0:	cmp	w1, #0x1
  412cb4:	b.ne	412cec <wcrtomb@plt+0x102dc>  // b.any
  412cb8:	ldr	w0, [x20, #72]
  412cbc:	tbnz	w0, #2, 412cec <wcrtomb@plt+0x102dc>
  412cc0:	mov	x0, x20
  412cc4:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  412cc8:	add	x1, x1, #0x848
  412ccc:	bl	41199c <wcrtomb@plt+0xef8c>
  412cd0:	str	w0, [x19, #68]
  412cd4:	tbz	w0, #31, 412d58 <wcrtomb@plt+0x10348>
  412cd8:	bl	402980 <__errno_location@plt>
  412cdc:	ldr	w0, [x0]
  412ce0:	str	w0, [x19, #64]
  412ce4:	mov	w0, #0x7                   	// #7
  412ce8:	strh	w0, [x19, #108]
  412cec:	ldrh	w0, [x19, #108]
  412cf0:	str	x19, [x20]
  412cf4:	cmp	w0, #0xb
  412cf8:	b.ne	412f8c <wcrtomb@plt+0x1057c>  // b.any
  412cfc:	ldr	x0, [x19, #168]
  412d00:	cmp	x0, #0x2
  412d04:	b.ne	412fcc <wcrtomb@plt+0x105bc>  // b.any
  412d08:	ldr	x21, [x19, #8]
  412d0c:	ldr	w0, [x21, #104]
  412d10:	cbz	w0, 412f68 <wcrtomb@plt+0x10558>
  412d14:	mov	x1, x19
  412d18:	mov	x0, x20
  412d1c:	mov	w2, #0x0                   	// #0
  412d20:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412d24:	strh	w0, [x19, #108]
  412d28:	ldr	w0, [x19, #136]
  412d2c:	and	w0, w0, #0xf000
  412d30:	cmp	w0, #0x4, lsl #12
  412d34:	b.ne	412f8c <wcrtomb@plt+0x1057c>  // b.any
  412d38:	ldr	x0, [x19, #88]
  412d3c:	cbz	x0, 412f8c <wcrtomb@plt+0x1057c>
  412d40:	ldr	w0, [x21, #104]
  412d44:	sub	w0, w0, #0x1
  412d48:	cmn	w0, #0x3
  412d4c:	b.hi	412f8c <wcrtomb@plt+0x1057c>  // b.pmore
  412d50:	str	w0, [x21, #104]
  412d54:	b	412f8c <wcrtomb@plt+0x1057c>
  412d58:	ldrh	w0, [x19, #110]
  412d5c:	orr	w0, w0, #0x2
  412d60:	strh	w0, [x19, #110]
  412d64:	b	412cec <wcrtomb@plt+0x102dc>
  412d68:	cmp	w2, #0x1
  412d6c:	b.ne	41315c <wcrtomb@plt+0x1074c>  // b.any
  412d70:	cmp	w3, #0x4
  412d74:	b.eq	412d8c <wcrtomb@plt+0x1037c>  // b.none
  412d78:	tbz	w1, #6, 412dc4 <wcrtomb@plt+0x103b4>
  412d7c:	ldr	x0, [x20, #24]
  412d80:	ldr	x2, [x19, #120]
  412d84:	cmp	x2, x0
  412d88:	b.eq	412dc4 <wcrtomb@plt+0x103b4>  // b.none
  412d8c:	ldrh	w0, [x19, #110]
  412d90:	tbz	w0, #1, 412d9c <wcrtomb@plt+0x1038c>
  412d94:	ldr	w0, [x19, #68]
  412d98:	bl	402680 <close@plt>
  412d9c:	ldr	x0, [x20, #8]
  412da0:	cbz	x0, 412dac <wcrtomb@plt+0x1039c>
  412da4:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412da8:	str	xzr, [x20, #8]
  412dac:	mov	w0, #0x6                   	// #6
  412db0:	strh	w0, [x19, #108]
  412db4:	mov	x1, x19
  412db8:	mov	x0, x20
  412dbc:	bl	411ffc <wcrtomb@plt+0xf5ec>
  412dc0:	b	412c68 <wcrtomb@plt+0x10258>
  412dc4:	ldr	x0, [x20, #8]
  412dc8:	cbz	x0, 412de0 <wcrtomb@plt+0x103d0>
  412dcc:	tbz	w1, #12, 4130d0 <wcrtomb@plt+0x106c0>
  412dd0:	and	w1, w1, #0xffffefff
  412dd4:	str	w1, [x20, #72]
  412dd8:	bl	4119d0 <wcrtomb@plt+0xefc0>
  412ddc:	str	xzr, [x20, #8]
  412de0:	mov	x0, x20
  412de4:	mov	w1, #0x3                   	// #3
  412de8:	bl	41208c <wcrtomb@plt+0xf67c>
  412dec:	str	x0, [x20, #8]
  412df0:	cbnz	x0, 413108 <wcrtomb@plt+0x106f8>
  412df4:	ldr	w0, [x20, #72]
  412df8:	tbnz	w0, #13, 412c30 <wcrtomb@plt+0x10220>
  412dfc:	ldr	w0, [x19, #64]
  412e00:	cbz	w0, 412db4 <wcrtomb@plt+0x103a4>
  412e04:	ldrh	w0, [x19, #108]
  412e08:	cmp	w0, #0x4
  412e0c:	b.eq	412db4 <wcrtomb@plt+0x103a4>  // b.none
  412e10:	mov	w0, #0x7                   	// #7
  412e14:	b	412db0 <wcrtomb@plt+0x103a0>
  412e18:	ldr	x1, [x0, #8]
  412e1c:	ldr	x1, [x1, #48]
  412e20:	str	x1, [x0, #48]
  412e24:	ldr	x0, [x0, #16]
  412e28:	b	413104 <wcrtomb@plt+0x106f4>
  412e2c:	mov	x0, x21
  412e30:	bl	4027a0 <free@plt>
  412e34:	b	413110 <wcrtomb@plt+0x10700>
  412e38:	str	x19, [x20]
  412e3c:	mov	x0, x21
  412e40:	bl	4027a0 <free@plt>
  412e44:	ldr	x0, [x19, #88]
  412e48:	cbnz	x0, 412ee4 <wcrtomb@plt+0x104d4>
  412e4c:	mov	x0, x20
  412e50:	bl	411c28 <wcrtomb@plt+0xf218>
  412e54:	cbz	w0, 412e68 <wcrtomb@plt+0x10458>
  412e58:	ldr	w0, [x20, #72]
  412e5c:	orr	w0, w0, #0x2000
  412e60:	str	w0, [x20, #72]
  412e64:	b	412c30 <wcrtomb@plt+0x10220>
  412e68:	mov	x0, x20
  412e6c:	bl	411f14 <wcrtomb@plt+0xf504>
  412e70:	ldr	x2, [x19, #96]
  412e74:	add	x22, x19, #0xf8
  412e78:	ldr	x0, [x20, #32]
  412e7c:	str	x2, [x19, #72]
  412e80:	add	x2, x2, #0x1
  412e84:	mov	x1, x22
  412e88:	bl	402380 <memmove@plt>
  412e8c:	mov	x0, x22
  412e90:	mov	w1, #0x2f                  	// #47
  412e94:	bl	4026a0 <strrchr@plt>
  412e98:	cbz	x0, 412ed0 <wcrtomb@plt+0x104c0>
  412e9c:	cmp	x22, x0
  412ea0:	b.ne	412eac <wcrtomb@plt+0x1049c>  // b.any
  412ea4:	ldrb	w1, [x22, #1]
  412ea8:	cbz	w1, 412ed0 <wcrtomb@plt+0x104c0>
  412eac:	add	x21, x0, #0x1
  412eb0:	mov	x0, x21
  412eb4:	bl	4023c0 <strlen@plt>
  412eb8:	mov	x1, x21
  412ebc:	mov	x23, x0
  412ec0:	add	x2, x0, #0x1
  412ec4:	mov	x0, x22
  412ec8:	bl	402380 <memmove@plt>
  412ecc:	str	x23, [x19, #96]
  412ed0:	ldr	x0, [x20, #32]
  412ed4:	stp	x0, x0, [x19, #48]
  412ed8:	mov	x0, x20
  412edc:	bl	411e94 <wcrtomb@plt+0xf484>
  412ee0:	b	412cec <wcrtomb@plt+0x102dc>
  412ee4:	ldrh	w0, [x19, #112]
  412ee8:	cmp	w0, #0x4
  412eec:	b.eq	41315c <wcrtomb@plt+0x1074c>  // b.none
  412ef0:	cmp	w0, #0x2
  412ef4:	b.ne	413110 <wcrtomb@plt+0x10700>  // b.any
  412ef8:	mov	x1, x19
  412efc:	mov	x0, x20
  412f00:	mov	w2, #0x1                   	// #1
  412f04:	bl	4116d0 <wcrtomb@plt+0xecc0>
  412f08:	strh	w0, [x19, #108]
  412f0c:	and	w1, w0, #0xffff
  412f10:	cmp	w1, #0x1
  412f14:	b.ne	412f4c <wcrtomb@plt+0x1053c>  // b.any
  412f18:	ldr	w0, [x20, #72]
  412f1c:	tbnz	w0, #2, 412f4c <wcrtomb@plt+0x1053c>
  412f20:	mov	x0, x20
  412f24:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  412f28:	add	x1, x1, #0x848
  412f2c:	bl	41199c <wcrtomb@plt+0xef8c>
  412f30:	str	w0, [x19, #68]
  412f34:	tbz	w0, #31, 412f58 <wcrtomb@plt+0x10548>
  412f38:	bl	402980 <__errno_location@plt>
  412f3c:	ldr	w0, [x0]
  412f40:	str	w0, [x19, #64]
  412f44:	mov	w0, #0x7                   	// #7
  412f48:	strh	w0, [x19, #108]
  412f4c:	mov	w0, #0x3                   	// #3
  412f50:	strh	w0, [x19, #112]
  412f54:	b	413110 <wcrtomb@plt+0x10700>
  412f58:	ldrh	w0, [x19, #110]
  412f5c:	orr	w0, w0, #0x2
  412f60:	strh	w0, [x19, #110]
  412f64:	b	412f4c <wcrtomb@plt+0x1053c>
  412f68:	ldr	w0, [x20, #72]
  412f6c:	and	w0, w0, #0x18
  412f70:	cmp	w0, #0x18
  412f74:	b.ne	412d14 <wcrtomb@plt+0x10304>  // b.any
  412f78:	ldr	w1, [x20, #44]
  412f7c:	mov	x0, x21
  412f80:	bl	411b3c <wcrtomb@plt+0xf12c>
  412f84:	cmp	w0, #0x2
  412f88:	b.ne	412d14 <wcrtomb@plt+0x10304>  // b.any
  412f8c:	ldrh	w0, [x19, #108]
  412f90:	cmp	w0, #0x1
  412f94:	b.ne	412c68 <wcrtomb@plt+0x10258>  // b.any
  412f98:	ldr	x0, [x19, #88]
  412f9c:	cbnz	x0, 412fa8 <wcrtomb@plt+0x10598>
  412fa0:	ldr	x0, [x19, #120]
  412fa4:	str	x0, [x20, #24]
  412fa8:	mov	x1, x19
  412fac:	mov	x0, x20
  412fb0:	bl	411f38 <wcrtomb@plt+0xf528>
  412fb4:	tst	w0, #0xff
  412fb8:	b.ne	412c68 <wcrtomb@plt+0x10258>  // b.any
  412fbc:	bl	402980 <__errno_location@plt>
  412fc0:	mov	w1, #0xc                   	// #12
  412fc4:	str	w1, [x0]
  412fc8:	b	412c30 <wcrtomb@plt+0x10220>
  412fcc:	cmp	x0, #0x1
  412fd0:	b.eq	412c68 <wcrtomb@plt+0x10258>  // b.none
  412fd4:	bl	4026f0 <abort@plt>
  412fd8:	ldrh	w0, [x19, #108]
  412fdc:	cmp	w0, #0xb
  412fe0:	b.eq	412fd4 <wcrtomb@plt+0x105c4>  // b.none
  412fe4:	ldr	x1, [x20, #32]
  412fe8:	ldr	x0, [x19, #72]
  412fec:	strb	wzr, [x1, x0]
  412ff0:	ldr	x0, [x19, #88]
  412ff4:	cbnz	x0, 413020 <wcrtomb@plt+0x10610>
  412ff8:	mov	x0, x20
  412ffc:	bl	411c28 <wcrtomb@plt+0xf218>
  413000:	cbz	w0, 413050 <wcrtomb@plt+0x10640>
  413004:	bl	402980 <__errno_location@plt>
  413008:	ldr	w0, [x0]
  41300c:	str	w0, [x19, #64]
  413010:	ldr	w0, [x20, #72]
  413014:	orr	w0, w0, #0x2000
  413018:	str	w0, [x20, #72]
  41301c:	b	413050 <wcrtomb@plt+0x10640>
  413020:	ldrh	w0, [x19, #110]
  413024:	tbz	w0, #1, 4130b0 <wcrtomb@plt+0x106a0>
  413028:	ldr	w1, [x20, #72]
  41302c:	tbnz	w1, #2, 413048 <wcrtomb@plt+0x10638>
  413030:	ldr	w0, [x19, #68]
  413034:	tbz	w1, #9, 41308c <wcrtomb@plt+0x1067c>
  413038:	mov	w1, w0
  41303c:	mov	w2, #0x1                   	// #1
  413040:	mov	x0, x20
  413044:	bl	411bc4 <wcrtomb@plt+0xf1b4>
  413048:	ldr	w0, [x19, #68]
  41304c:	bl	402680 <close@plt>
  413050:	ldrh	w0, [x19, #108]
  413054:	cmp	w0, #0x2
  413058:	b.eq	413080 <wcrtomb@plt+0x10670>  // b.none
  41305c:	ldr	w1, [x19, #64]
  413060:	cmp	w1, #0x0
  413064:	cset	w0, ne  // ne = any
  413068:	add	w0, w0, #0x6
  41306c:	strh	w0, [x19, #108]
  413070:	cbnz	w1, 413080 <wcrtomb@plt+0x10670>
  413074:	mov	x1, x19
  413078:	mov	x0, x20
  41307c:	bl	411ffc <wcrtomb@plt+0xf5ec>
  413080:	ldr	w0, [x20, #72]
  413084:	tbz	w0, #13, 412c68 <wcrtomb@plt+0x10258>
  413088:	b	412c30 <wcrtomb@plt+0x10220>
  41308c:	bl	402400 <fchdir@plt>
  413090:	cbz	w0, 413048 <wcrtomb@plt+0x10638>
  413094:	bl	402980 <__errno_location@plt>
  413098:	ldr	w0, [x0]
  41309c:	str	w0, [x19, #64]
  4130a0:	ldr	w0, [x20, #72]
  4130a4:	orr	w0, w0, #0x2000
  4130a8:	str	w0, [x20, #72]
  4130ac:	b	413048 <wcrtomb@plt+0x10638>
  4130b0:	tbnz	w0, #0, 413050 <wcrtomb@plt+0x10640>
  4130b4:	ldr	x1, [x19, #8]
  4130b8:	mov	x0, x20
  4130bc:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xb900>
  4130c0:	mov	w2, #0xffffffff            	// #-1
  4130c4:	add	x3, x3, #0x847
  4130c8:	bl	411c88 <wcrtomb@plt+0xf278>
  4130cc:	b	413000 <wcrtomb@plt+0x105f0>
  4130d0:	ldr	x3, [x19, #48]
  4130d4:	mov	x1, x19
  4130d8:	mov	x0, x20
  4130dc:	mov	w2, #0xffffffff            	// #-1
  4130e0:	bl	411c88 <wcrtomb@plt+0xf278>
  4130e4:	cbz	w0, 413108 <wcrtomb@plt+0x106f8>
  4130e8:	bl	402980 <__errno_location@plt>
  4130ec:	ldr	w0, [x0]
  4130f0:	str	w0, [x19, #64]
  4130f4:	ldrh	w0, [x19, #110]
  4130f8:	orr	w0, w0, #0x1
  4130fc:	strh	w0, [x19, #110]
  413100:	ldr	x0, [x20, #8]
  413104:	cbnz	x0, 412e18 <wcrtomb@plt+0x10408>
  413108:	ldr	x19, [x20, #8]
  41310c:	str	xzr, [x20, #8]
  413110:	ldr	x3, [x19, #8]
  413114:	ldr	x2, [x20, #32]
  413118:	ldr	x0, [x3, #72]
  41311c:	ldr	x3, [x3, #56]
  413120:	sub	x1, x0, #0x1
  413124:	ldrb	w3, [x3, x1]
  413128:	cmp	w3, #0x2f
  41312c:	mov	w3, #0x2f                  	// #47
  413130:	csel	x1, x1, x0, eq  // eq = none
  413134:	add	x0, x2, x1
  413138:	add	x0, x0, #0x1
  41313c:	strb	w3, [x2, x1]
  413140:	add	x1, x19, #0xf8
  413144:	ldr	x2, [x19, #96]
  413148:	add	x2, x2, #0x1
  41314c:	bl	402380 <memmove@plt>
  413150:	b	412cec <wcrtomb@plt+0x102dc>
  413154:	cmp	w2, #0x1
  413158:	b.eq	412d78 <wcrtomb@plt+0x10368>  // b.none
  41315c:	mov	x21, x19
  413160:	ldr	x19, [x19, #16]
  413164:	cbnz	x19, 412e38 <wcrtomb@plt+0x10428>
  413168:	ldr	x0, [x21, #8]
  41316c:	ldr	x1, [x0, #24]
  413170:	cbz	x1, 4131a0 <wcrtomb@plt+0x10790>
  413174:	str	x0, [x20]
  413178:	ldr	x1, [x20, #32]
  41317c:	ldr	x0, [x0, #72]
  413180:	strb	wzr, [x1, x0]
  413184:	mov	x0, x20
  413188:	mov	w1, #0x3                   	// #3
  41318c:	bl	41208c <wcrtomb@plt+0xf67c>
  413190:	mov	x19, x0
  413194:	cbnz	x0, 412e2c <wcrtomb@plt+0x1041c>
  413198:	ldr	w0, [x20, #72]
  41319c:	tbnz	w0, #13, 412c30 <wcrtomb@plt+0x10220>
  4131a0:	ldr	x19, [x21, #8]
  4131a4:	str	x19, [x20]
  4131a8:	mov	x0, x21
  4131ac:	bl	4027a0 <free@plt>
  4131b0:	ldr	x0, [x19, #88]
  4131b4:	cmn	x0, #0x1
  4131b8:	b.ne	412fd8 <wcrtomb@plt+0x105c8>  // b.any
  4131bc:	mov	x0, x19
  4131c0:	bl	4027a0 <free@plt>
  4131c4:	bl	402980 <__errno_location@plt>
  4131c8:	str	wzr, [x0]
  4131cc:	str	xzr, [x20]
  4131d0:	b	412c30 <wcrtomb@plt+0x10220>
  4131d4:	cmp	w2, #0x4
  4131d8:	b.ls	4131fc <wcrtomb@plt+0x107ec>  // b.plast
  4131dc:	stp	x29, x30, [sp, #-16]!
  4131e0:	mov	x29, sp
  4131e4:	bl	402980 <__errno_location@plt>
  4131e8:	mov	w1, #0x16                  	// #22
  4131ec:	str	w1, [x0]
  4131f0:	mov	w0, #0x1                   	// #1
  4131f4:	ldp	x29, x30, [sp], #16
  4131f8:	ret
  4131fc:	mov	w0, #0x0                   	// #0
  413200:	strh	w2, [x1, #112]
  413204:	ret
  413208:	stp	x29, x30, [sp, #-48]!
  41320c:	mov	x29, sp
  413210:	stp	x19, x20, [sp, #16]
  413214:	mov	x19, x0
  413218:	stp	x21, x22, [sp, #32]
  41321c:	mov	w22, w1
  413220:	bl	402980 <__errno_location@plt>
  413224:	tst	w22, #0xffffefff
  413228:	mov	x21, x0
  41322c:	b.eq	413240 <wcrtomb@plt+0x10830>  // b.none
  413230:	mov	w0, #0x16                  	// #22
  413234:	str	w0, [x21]
  413238:	mov	x0, #0x0                   	// #0
  41323c:	b	413260 <wcrtomb@plt+0x10850>
  413240:	ldr	x20, [x19]
  413244:	str	wzr, [x0]
  413248:	ldr	w0, [x19, #72]
  41324c:	tbnz	w0, #13, 413238 <wcrtomb@plt+0x10828>
  413250:	ldrh	w0, [x20, #108]
  413254:	cmp	w0, #0x9
  413258:	b.ne	413270 <wcrtomb@plt+0x10860>  // b.any
  41325c:	ldr	x0, [x20, #16]
  413260:	ldp	x19, x20, [sp, #16]
  413264:	ldp	x21, x22, [sp, #32]
  413268:	ldp	x29, x30, [sp], #48
  41326c:	ret
  413270:	cmp	w0, #0x1
  413274:	b.ne	413238 <wcrtomb@plt+0x10828>  // b.any
  413278:	ldr	x0, [x19, #8]
  41327c:	cbz	x0, 413284 <wcrtomb@plt+0x10874>
  413280:	bl	4119d0 <wcrtomb@plt+0xefc0>
  413284:	cmp	w22, #0x1, lsl #12
  413288:	b.ne	4132d0 <wcrtomb@plt+0x108c0>  // b.any
  41328c:	ldr	w0, [x19, #72]
  413290:	mov	w22, #0x2                   	// #2
  413294:	orr	w0, w0, #0x1000
  413298:	str	w0, [x19, #72]
  41329c:	ldr	x0, [x20, #88]
  4132a0:	cbnz	x0, 4132bc <wcrtomb@plt+0x108ac>
  4132a4:	ldr	x0, [x20, #48]
  4132a8:	ldrb	w0, [x0]
  4132ac:	cmp	w0, #0x2f
  4132b0:	b.eq	4132bc <wcrtomb@plt+0x108ac>  // b.none
  4132b4:	ldr	w0, [x19, #72]
  4132b8:	tbz	w0, #2, 4132d8 <wcrtomb@plt+0x108c8>
  4132bc:	mov	w1, w22
  4132c0:	mov	x0, x19
  4132c4:	bl	41208c <wcrtomb@plt+0xf67c>
  4132c8:	str	x0, [x19, #8]
  4132cc:	b	413260 <wcrtomb@plt+0x10850>
  4132d0:	mov	w22, #0x1                   	// #1
  4132d4:	b	41329c <wcrtomb@plt+0x1088c>
  4132d8:	mov	x0, x19
  4132dc:	adrp	x1, 41f000 <_obstack_memory_used@@Base+0xb900>
  4132e0:	add	x1, x1, #0x848
  4132e4:	bl	41199c <wcrtomb@plt+0xef8c>
  4132e8:	mov	w20, w0
  4132ec:	tbz	w0, #31, 4132f8 <wcrtomb@plt+0x108e8>
  4132f0:	str	xzr, [x19, #8]
  4132f4:	b	413238 <wcrtomb@plt+0x10828>
  4132f8:	mov	w1, w22
  4132fc:	mov	x0, x19
  413300:	bl	41208c <wcrtomb@plt+0xf67c>
  413304:	str	x0, [x19, #8]
  413308:	ldr	w0, [x19, #72]
  41330c:	tbz	w0, #9, 413328 <wcrtomb@plt+0x10918>
  413310:	mov	w1, w20
  413314:	mov	x0, x19
  413318:	mov	w2, #0x1                   	// #1
  41331c:	bl	411bc4 <wcrtomb@plt+0xf1b4>
  413320:	ldr	x0, [x19, #8]
  413324:	b	413260 <wcrtomb@plt+0x10850>
  413328:	mov	w0, w20
  41332c:	bl	402400 <fchdir@plt>
  413330:	cbz	w0, 413348 <wcrtomb@plt+0x10938>
  413334:	ldr	w19, [x21]
  413338:	mov	w0, w20
  41333c:	bl	402680 <close@plt>
  413340:	str	w19, [x21]
  413344:	b	413238 <wcrtomb@plt+0x10828>
  413348:	mov	w0, w20
  41334c:	bl	402680 <close@plt>
  413350:	b	413320 <wcrtomb@plt+0x10910>
  413354:	mov	x3, x2
  413358:	cbnz	x2, 413364 <wcrtomb@plt+0x10954>
  41335c:	adrp	x3, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  413360:	add	x3, x3, #0x8d8
  413364:	mov	x2, x1
  413368:	mov	x1, x0
  41336c:	mov	x0, #0x0                   	// #0
  413370:	b	413374 <wcrtomb@plt+0x10964>
  413374:	stp	x29, x30, [sp, #-64]!
  413378:	mov	x29, sp
  41337c:	stp	x19, x20, [sp, #16]
  413380:	stp	x21, x22, [sp, #32]
  413384:	mov	x21, x1
  413388:	mov	x22, x2
  41338c:	cbnz	x0, 4133e4 <wcrtomb@plt+0x109d4>
  413390:	add	x19, sp, #0x3c
  413394:	mov	x2, x22
  413398:	mov	x1, x21
  41339c:	mov	x0, x19
  4133a0:	bl	402350 <mbrtowc@plt>
  4133a4:	cmp	x22, #0x0
  4133a8:	mov	x20, x0
  4133ac:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4133b0:	b.ls	4133d0 <wcrtomb@plt+0x109c0>  // b.plast
  4133b4:	mov	w0, #0x0                   	// #0
  4133b8:	bl	41e08c <_obstack_memory_used@@Base+0xa98c>
  4133bc:	tst	w0, #0xff
  4133c0:	b.ne	4133d0 <wcrtomb@plt+0x109c0>  // b.any
  4133c4:	ldrb	w0, [x21]
  4133c8:	mov	x20, #0x1                   	// #1
  4133cc:	str	w0, [x19]
  4133d0:	mov	x0, x20
  4133d4:	ldp	x19, x20, [sp, #16]
  4133d8:	ldp	x21, x22, [sp, #32]
  4133dc:	ldp	x29, x30, [sp], #64
  4133e0:	ret
  4133e4:	mov	x19, x0
  4133e8:	b	413394 <wcrtomb@plt+0x10984>
  4133ec:	stp	x29, x30, [sp, #-32]!
  4133f0:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4133f4:	mov	w2, #0x5                   	// #5
  4133f8:	mov	x29, sp
  4133fc:	str	x19, [sp, #16]
  413400:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  413404:	ldr	x19, [x0, #1104]
  413408:	add	x1, x1, #0xfc9
  41340c:	mov	x0, #0x0                   	// #0
  413410:	bl	4028e0 <dcgettext@plt>
  413414:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  413418:	mov	x2, x0
  41341c:	add	x1, x1, #0xc98
  413420:	mov	x0, x19
  413424:	bl	4029d0 <fprintf@plt>
  413428:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  41342c:	ldr	w0, [x0, #1000]
  413430:	bl	4023e0 <exit@plt>
  413434:	mov	x2, x0
  413438:	mov	x0, x1
  41343c:	ldrb	w4, [x2, #80]
  413440:	ldr	x3, [x2, #56]
  413444:	tbz	w4, #0, 413454 <wcrtomb@plt+0x10a44>
  413448:	ldr	x0, [x2, #72]
  41344c:	mov	x16, x3
  413450:	br	x16
  413454:	mov	x16, x3
  413458:	br	x16
  41345c:	mov	x2, x0
  413460:	mov	x0, x1
  413464:	ldrb	w4, [x2, #80]
  413468:	ldr	x3, [x2, #64]
  41346c:	tbz	w4, #0, 41347c <wcrtomb@plt+0x10a6c>
  413470:	ldr	x0, [x2, #72]
  413474:	mov	x16, x3
  413478:	br	x16
  41347c:	mov	x16, x3
  413480:	br	x16
  413484:	stp	x29, x30, [sp, #-48]!
  413488:	cmp	x2, #0x0
  41348c:	mov	x29, sp
  413490:	stp	x19, x20, [sp, #16]
  413494:	mov	x20, x2
  413498:	mov	x19, x0
  41349c:	mov	x2, #0x10                  	// #16
  4134a0:	csel	x20, x20, x2, ne  // ne = any
  4134a4:	cmp	x1, #0x0
  4134a8:	str	x21, [sp, #32]
  4134ac:	mov	x2, #0xfe0                 	// #4064
  4134b0:	sub	x21, x20, #0x1
  4134b4:	csel	x1, x1, x2, ne  // ne = any
  4134b8:	str	x1, [x0]
  4134bc:	str	x21, [x0, #48]
  4134c0:	bl	413434 <wcrtomb@plt+0x10a24>
  4134c4:	str	x0, [x19, #8]
  4134c8:	cbnz	x0, 4134d8 <wcrtomb@plt+0x10ac8>
  4134cc:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4134d0:	ldr	x0, [x0, #1096]
  4134d4:	blr	x0
  4134d8:	add	x2, x0, #0x10
  4134dc:	neg	x20, x20
  4134e0:	ldr	x1, [x19]
  4134e4:	add	x2, x2, x21
  4134e8:	and	x20, x2, x20
  4134ec:	ldr	x21, [sp, #32]
  4134f0:	stp	x20, x20, [x19, #16]
  4134f4:	add	x1, x0, x1
  4134f8:	str	x1, [x0]
  4134fc:	str	x1, [x19, #32]
  413500:	str	xzr, [x0, #8]
  413504:	ldrb	w0, [x19, #80]
  413508:	and	w0, w0, #0xfffffff9
  41350c:	strb	w0, [x19, #80]
  413510:	mov	w0, #0x1                   	// #1
  413514:	ldp	x19, x20, [sp, #16]
  413518:	ldp	x29, x30, [sp], #48
  41351c:	ret

0000000000413520 <_obstack_begin@@Base>:
  413520:	stp	x3, x4, [x0, #56]
  413524:	ldrb	w3, [x0, #80]
  413528:	and	w3, w3, #0xfffffffe
  41352c:	strb	w3, [x0, #80]
  413530:	b	413484 <wcrtomb@plt+0x10a74>

0000000000413534 <_obstack_begin_1@@Base>:
  413534:	stp	x3, x4, [x0, #56]
  413538:	ldrb	w3, [x0, #80]
  41353c:	str	x5, [x0, #72]
  413540:	orr	w3, w3, #0x1
  413544:	strb	w3, [x0, #80]
  413548:	b	413484 <wcrtomb@plt+0x10a74>

000000000041354c <_obstack_newchunk@@Base>:
  41354c:	stp	x29, x30, [sp, #-64]!
  413550:	mov	x29, sp
  413554:	stp	x19, x20, [sp, #16]
  413558:	ldp	x2, x20, [x0, #16]
  41355c:	stp	x21, x22, [sp, #32]
  413560:	sub	x21, x20, x2
  413564:	ldr	x20, [x0, #48]
  413568:	adds	x1, x21, x1
  41356c:	cset	x4, cs  // cs = hs, nlast
  413570:	adds	x1, x20, x1
  413574:	lsr	x20, x21, #3
  413578:	add	x20, x20, #0x64
  41357c:	cset	x3, cs  // cs = hs, nlast
  413580:	add	x2, x20, x1
  413584:	ldr	x20, [x0]
  413588:	str	x23, [sp, #48]
  41358c:	ldr	x23, [x0, #8]
  413590:	cmp	x20, x1
  413594:	csel	x20, x20, x1, cs  // cs = hs, nlast
  413598:	cmp	x20, x2
  41359c:	csel	x20, x20, x2, cs  // cs = hs, nlast
  4135a0:	cmp	x4, #0x0
  4135a4:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  4135a8:	b.eq	4135b8 <_obstack_newchunk@@Base+0x6c>  // b.none
  4135ac:	adrp	x0, 437000 <_obstack_memory_used@@Base+0x23900>
  4135b0:	ldr	x0, [x0, #1096]
  4135b4:	blr	x0
  4135b8:	mov	x19, x0
  4135bc:	mov	x1, x20
  4135c0:	bl	413434 <wcrtomb@plt+0x10a24>
  4135c4:	mov	x22, x0
  4135c8:	cbz	x0, 4135ac <_obstack_newchunk@@Base+0x60>
  4135cc:	mov	x2, x0
  4135d0:	str	x0, [x19, #8]
  4135d4:	ldr	x1, [x19, #16]
  4135d8:	str	x23, [x0, #8]
  4135dc:	add	x20, x0, x20
  4135e0:	str	x20, [x19, #32]
  4135e4:	str	x20, [x2], #16
  4135e8:	ldr	x20, [x19, #48]
  4135ec:	add	x2, x2, x20
  4135f0:	bic	x20, x2, x20
  4135f4:	mov	x2, x21
  4135f8:	mov	x0, x20
  4135fc:	bl	402360 <memcpy@plt>
  413600:	ldrb	w0, [x19, #80]
  413604:	tbnz	w0, #1, 413638 <_obstack_newchunk@@Base+0xec>
  413608:	ldr	x0, [x19, #48]
  41360c:	add	x1, x23, #0x10
  413610:	add	x1, x1, x0
  413614:	bic	x0, x1, x0
  413618:	ldr	x1, [x19, #16]
  41361c:	cmp	x1, x0
  413620:	b.ne	413638 <_obstack_newchunk@@Base+0xec>  // b.any
  413624:	ldr	x0, [x23, #8]
  413628:	str	x0, [x22, #8]
  41362c:	mov	x1, x23
  413630:	mov	x0, x19
  413634:	bl	41345c <wcrtomb@plt+0x10a4c>
  413638:	ldrb	w0, [x19, #80]
  41363c:	ldr	x23, [sp, #48]
  413640:	and	w0, w0, #0xfffffffd
  413644:	str	x20, [x19, #16]
  413648:	add	x20, x20, x21
  41364c:	strb	w0, [x19, #80]
  413650:	ldp	x21, x22, [sp, #32]
  413654:	str	x20, [x19, #24]
  413658:	ldp	x19, x20, [sp, #16]
  41365c:	ldp	x29, x30, [sp], #64
  413660:	ret

0000000000413664 <_obstack_allocated_p@@Base>:
  413664:	ldr	x0, [x0, #8]
  413668:	cbz	x0, 413680 <_obstack_allocated_p@@Base+0x1c>
  41366c:	cmp	x0, x1
  413670:	b.cs	413664 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  413674:	ldr	x2, [x0]
  413678:	cmp	x2, x1
  41367c:	b.cc	413664 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  413680:	cmp	x0, #0x0
  413684:	cset	w0, ne  // ne = any
  413688:	ret

000000000041368c <_obstack_free@@Base>:
  41368c:	stp	x29, x30, [sp, #-48]!
  413690:	mov	x29, sp
  413694:	stp	x19, x20, [sp, #16]
  413698:	mov	x19, x0
  41369c:	mov	x20, x1
  4136a0:	ldr	x1, [x0, #8]
  4136a4:	str	x21, [sp, #32]
  4136a8:	cbz	x1, 4136f8 <_obstack_free@@Base+0x6c>
  4136ac:	cmp	x1, x20
  4136b0:	b.cs	4136d8 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  4136b4:	ldr	x0, [x1]
  4136b8:	cmp	x0, x20
  4136bc:	b.cc	4136d8 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  4136c0:	stp	x1, x20, [x19, #8]
  4136c4:	stp	x20, x0, [x19, #24]
  4136c8:	ldp	x19, x20, [sp, #16]
  4136cc:	ldr	x21, [sp, #32]
  4136d0:	ldp	x29, x30, [sp], #48
  4136d4:	ret
  4136d8:	mov	x0, x19
  4136dc:	ldr	x21, [x1, #8]
  4136e0:	bl	41345c <wcrtomb@plt+0x10a4c>
  4136e4:	ldrb	w0, [x19, #80]
  4136e8:	mov	x1, x21
  4136ec:	orr	w0, w0, #0x2
  4136f0:	strb	w0, [x19, #80]
  4136f4:	b	4136a8 <_obstack_free@@Base+0x1c>
  4136f8:	cbz	x20, 4136c8 <_obstack_free@@Base+0x3c>
  4136fc:	bl	4026f0 <abort@plt>

0000000000413700 <_obstack_memory_used@@Base>:
  413700:	ldr	x1, [x0, #8]
  413704:	mov	x0, #0x0                   	// #0
  413708:	cbnz	x1, 413710 <_obstack_memory_used@@Base+0x10>
  41370c:	ret
  413710:	ldr	x2, [x1]
  413714:	sub	x2, x2, x1
  413718:	add	x0, x0, x2
  41371c:	ldr	x1, [x1, #8]
  413720:	b	413708 <_obstack_memory_used@@Base+0x8>
  413724:	asr	x2, x1, #6
  413728:	mov	x3, #0x1                   	// #1
  41372c:	lsl	x3, x3, x1
  413730:	lsl	x2, x2, #3
  413734:	ldr	x1, [x0, x2]
  413738:	orr	x1, x1, x3
  41373c:	str	x1, [x0, x2]
  413740:	ret
  413744:	mov	x1, #0x0                   	// #0
  413748:	ldr	x2, [x0, x1, lsl #3]
  41374c:	mvn	x2, x2
  413750:	str	x2, [x0, x1, lsl #3]
  413754:	add	x1, x1, #0x1
  413758:	cmp	x1, #0x4
  41375c:	b.ne	413748 <_obstack_memory_used@@Base+0x48>  // b.any
  413760:	ret
  413764:	mov	x2, #0x0                   	// #0
  413768:	ldr	x3, [x0, x2]
  41376c:	ldr	x4, [x1, x2]
  413770:	orr	x3, x3, x4
  413774:	str	x3, [x0, x2]
  413778:	add	x2, x2, #0x8
  41377c:	cmp	x2, #0x20
  413780:	b.ne	413768 <_obstack_memory_used@@Base+0x68>  // b.any
  413784:	ret
  413788:	mov	x2, #0x0                   	// #0
  41378c:	ldr	x3, [x0, x2]
  413790:	ldr	x4, [x1, x2]
  413794:	and	x3, x3, x4
  413798:	str	x3, [x0, x2]
  41379c:	add	x2, x2, #0x8
  4137a0:	cmp	x2, #0x20
  4137a4:	b.ne	41378c <_obstack_memory_used@@Base+0x8c>  // b.any
  4137a8:	ret
  4137ac:	ldr	w2, [x0, #144]
  4137b0:	cmp	w2, #0x1
  4137b4:	b.ne	4137c4 <_obstack_memory_used@@Base+0xc4>  // b.any
  4137b8:	ldr	x0, [x0, #8]
  4137bc:	ldrb	w0, [x0, x1]
  4137c0:	ret
  4137c4:	ldr	x0, [x0, #16]
  4137c8:	ldr	w0, [x0, x1, lsl #2]
  4137cc:	b	4137c0 <_obstack_memory_used@@Base+0xc0>
  4137d0:	ldr	x2, [x0, #64]
  4137d4:	ldr	x1, [x0, #88]
  4137d8:	cmp	x2, x1
  4137dc:	csel	x2, x2, x1, le
  4137e0:	ldr	x1, [x0, #48]
  4137e4:	mov	x3, x1
  4137e8:	cmp	x3, x2
  4137ec:	b.lt	413804 <_obstack_memory_used@@Base+0x104>  // b.tstop
  4137f0:	subs	x3, x2, x1
  4137f4:	csel	x3, x3, xzr, ge  // ge = tcont
  4137f8:	add	x1, x1, x3
  4137fc:	stp	x1, x1, [x0, #48]
  413800:	ret
  413804:	ldr	x4, [x0]
  413808:	ldr	x5, [x0, #40]
  41380c:	add	x4, x4, x3
  413810:	ldrb	w4, [x4, x5]
  413814:	ldr	x5, [x0, #120]
  413818:	ldrb	w5, [x5, x4]
  41381c:	ldr	x4, [x0, #8]
  413820:	strb	w5, [x4, x3]
  413824:	add	x3, x3, #0x1
  413828:	b	4137e8 <_obstack_memory_used@@Base+0xe8>
  41382c:	cmp	x0, #0x0
  413830:	mov	x3, x0
  413834:	cset	w2, eq  // eq = none
  413838:	cmp	x1, #0x0
  41383c:	csinc	w0, w2, wzr, ne  // ne = any
  413840:	cbnz	w0, 413880 <_obstack_memory_used@@Base+0x180>
  413844:	ldr	x4, [x1, #8]
  413848:	ldr	x2, [x3, #8]
  41384c:	cmp	x2, x4
  413850:	b.ne	413860 <_obstack_memory_used@@Base+0x160>  // b.any
  413854:	subs	x2, x2, #0x1
  413858:	b.pl	413864 <_obstack_memory_used@@Base+0x164>  // b.nfrst
  41385c:	mov	w0, #0x1                   	// #1
  413860:	ret
  413864:	ldr	x6, [x1, #16]
  413868:	lsl	x4, x2, #3
  41386c:	ldr	x5, [x3, #16]
  413870:	ldr	x5, [x5, x4]
  413874:	ldr	x4, [x6, x4]
  413878:	cmp	x5, x4
  41387c:	b	413850 <_obstack_memory_used@@Base+0x150>
  413880:	mov	w0, #0x0                   	// #0
  413884:	b	413860 <_obstack_memory_used@@Base+0x160>
  413888:	ldr	x2, [x0, #8]
  41388c:	cmp	x2, #0x0
  413890:	b.le	4138dc <_obstack_memory_used@@Base+0x1dc>
  413894:	sub	x2, x2, #0x1
  413898:	ldr	x4, [x0, #16]
  41389c:	mov	x0, #0x0                   	// #0
  4138a0:	cmp	x0, x2
  4138a4:	b.cc	4138b8 <_obstack_memory_used@@Base+0x1b8>  // b.lo, b.ul, b.last
  4138a8:	ldr	x2, [x4, x0, lsl #3]
  4138ac:	cmp	x2, x1
  4138b0:	csinc	x0, xzr, x0, ne  // ne = any
  4138b4:	ret
  4138b8:	add	x3, x0, x2
  4138bc:	lsr	x3, x3, #1
  4138c0:	ldr	x5, [x4, x3, lsl #3]
  4138c4:	cmp	x5, x1
  4138c8:	b.ge	4138d4 <_obstack_memory_used@@Base+0x1d4>  // b.tcont
  4138cc:	add	x0, x3, #0x1
  4138d0:	b	4138a0 <_obstack_memory_used@@Base+0x1a0>
  4138d4:	mov	x2, x3
  4138d8:	b	4138a0 <_obstack_memory_used@@Base+0x1a0>
  4138dc:	mov	x0, #0x0                   	// #0
  4138e0:	b	4138b4 <_obstack_memory_used@@Base+0x1b4>
  4138e4:	ldr	x3, [x1, #72]
  4138e8:	ldr	x4, [x1, #104]
  4138ec:	cmp	x4, x3
  4138f0:	b.gt	413904 <_obstack_memory_used@@Base+0x204>
  4138f4:	mov	w1, #0x2                   	// #2
  4138f8:	strb	w1, [x0, #8]
  4138fc:	mov	w0, #0x0                   	// #0
  413900:	ret
  413904:	ldr	x5, [x1, #8]
  413908:	ldr	w6, [x1, #144]
  41390c:	ldrb	w4, [x5, x3]
  413910:	cmp	w6, #0x1
  413914:	strb	w4, [x0]
  413918:	b.le	413940 <_obstack_memory_used@@Base+0x240>
  41391c:	ldr	x6, [x1, #48]
  413920:	cmp	x3, x6
  413924:	b.eq	413940 <_obstack_memory_used@@Base+0x240>  // b.none
  413928:	ldr	x6, [x1, #16]
  41392c:	ldr	w6, [x6, x3, lsl #2]
  413930:	cmn	w6, #0x1
  413934:	b.ne	413940 <_obstack_memory_used@@Base+0x240>  // b.any
  413938:	mov	w1, #0x1                   	// #1
  41393c:	b	413a00 <_obstack_memory_used@@Base+0x300>
  413940:	cmp	w4, #0x5c
  413944:	b.ne	41396c <_obstack_memory_used@@Base+0x26c>  // b.any
  413948:	tbz	w2, #0, 413938 <_obstack_memory_used@@Base+0x238>
  41394c:	ldr	x2, [x1, #88]
  413950:	add	x3, x3, #0x1
  413954:	cmp	x3, x2
  413958:	b.ge	413938 <_obstack_memory_used@@Base+0x238>  // b.tcont
  41395c:	str	x3, [x1, #72]
  413960:	ldrb	w1, [x5, x3]
  413964:	strb	w1, [x0]
  413968:	b	413938 <_obstack_memory_used@@Base+0x238>
  41396c:	cmp	w4, #0x5b
  413970:	b.ne	4139e4 <_obstack_memory_used@@Base+0x2e4>  // b.any
  413974:	ldr	x6, [x1, #88]
  413978:	add	x4, x3, #0x1
  41397c:	cmp	x4, x6
  413980:	b.ge	4139cc <_obstack_memory_used@@Base+0x2cc>  // b.tcont
  413984:	add	x3, x5, x3
  413988:	ldrb	w1, [x3, #1]
  41398c:	strb	w1, [x0]
  413990:	cmp	w1, #0x3a
  413994:	b.eq	4139c0 <_obstack_memory_used@@Base+0x2c0>  // b.none
  413998:	cmp	w1, #0x3d
  41399c:	b.eq	4139b8 <_obstack_memory_used@@Base+0x2b8>  // b.none
  4139a0:	cmp	w1, #0x2e
  4139a4:	b.ne	4139cc <_obstack_memory_used@@Base+0x2cc>  // b.any
  4139a8:	mov	w1, #0x1a                  	// #26
  4139ac:	strb	w1, [x0, #8]
  4139b0:	mov	w0, #0x2                   	// #2
  4139b4:	b	413900 <_obstack_memory_used@@Base+0x200>
  4139b8:	mov	w1, #0x1c                  	// #28
  4139bc:	b	4139ac <_obstack_memory_used@@Base+0x2ac>
  4139c0:	tbz	w2, #2, 4139cc <_obstack_memory_used@@Base+0x2cc>
  4139c4:	mov	w1, #0x1e                  	// #30
  4139c8:	b	4139ac <_obstack_memory_used@@Base+0x2ac>
  4139cc:	mov	w1, #0x1                   	// #1
  4139d0:	strb	w1, [x0, #8]
  4139d4:	mov	w1, #0x5b                  	// #91
  4139d8:	strb	w1, [x0]
  4139dc:	mov	w0, #0x1                   	// #1
  4139e0:	b	413900 <_obstack_memory_used@@Base+0x200>
  4139e4:	cmp	w4, #0x5d
  4139e8:	b.eq	413a08 <_obstack_memory_used@@Base+0x308>  // b.none
  4139ec:	cmp	w4, #0x5e
  4139f0:	b.eq	413a10 <_obstack_memory_used@@Base+0x310>  // b.none
  4139f4:	cmp	w4, #0x2d
  4139f8:	b.ne	413938 <_obstack_memory_used@@Base+0x238>  // b.any
  4139fc:	mov	w1, #0x16                  	// #22
  413a00:	strb	w1, [x0, #8]
  413a04:	b	4139dc <_obstack_memory_used@@Base+0x2dc>
  413a08:	mov	w1, #0x15                  	// #21
  413a0c:	b	413a00 <_obstack_memory_used@@Base+0x300>
  413a10:	mov	w1, #0x19                  	// #25
  413a14:	b	413a00 <_obstack_memory_used@@Base+0x300>
  413a18:	ldrb	w2, [x1, #48]
  413a1c:	cmp	w2, #0x11
  413a20:	b.ne	413a3c <_obstack_memory_used@@Base+0x33c>  // b.any
  413a24:	ldr	x2, [x1, #40]
  413a28:	cmp	x0, x2
  413a2c:	b.ne	413a3c <_obstack_memory_used@@Base+0x33c>  // b.any
  413a30:	ldrb	w0, [x1, #50]
  413a34:	orr	w0, w0, #0x8
  413a38:	strb	w0, [x1, #50]
  413a3c:	mov	w0, #0x0                   	// #0
  413a40:	ret
  413a44:	stp	x29, x30, [sp, #-144]!
  413a48:	mov	x6, #0x28                  	// #40
  413a4c:	and	w10, w1, #0x1
  413a50:	mov	x29, sp
  413a54:	ldr	x8, [x0, #152]
  413a58:	stp	x25, x26, [sp, #64]
  413a5c:	mov	x26, #0x1                   	// #1
  413a60:	stp	x27, x28, [sp, #80]
  413a64:	mov	x28, #0x18                  	// #24
  413a68:	lsl	x26, x26, x2
  413a6c:	ldr	x25, [x8, #48]
  413a70:	mvn	w7, w26
  413a74:	mul	x6, x4, x6
  413a78:	mov	x27, x3
  413a7c:	and	w7, w7, #0xffff
  413a80:	and	w9, w1, #0x2
  413a84:	madd	x25, x3, x28, x25
  413a88:	stp	x19, x20, [sp, #16]
  413a8c:	mov	w19, w1
  413a90:	stp	x21, x22, [sp, #32]
  413a94:	mov	x22, x0
  413a98:	mov	x21, x2
  413a9c:	stp	x23, x24, [sp, #48]
  413aa0:	mov	x23, x4
  413aa4:	mov	x24, #0x0                   	// #0
  413aa8:	ldr	x0, [x25, #8]
  413aac:	cmp	x0, x24
  413ab0:	b.gt	413abc <_obstack_memory_used@@Base+0x3bc>
  413ab4:	asr	w0, w19, #1
  413ab8:	b	413b3c <_obstack_memory_used@@Base+0x43c>
  413abc:	ldr	x0, [x25, #16]
  413ac0:	ldr	x5, [x0, x24, lsl #3]
  413ac4:	ldr	x0, [x8]
  413ac8:	lsl	x2, x5, #4
  413acc:	add	x1, x0, x5, lsl #4
  413ad0:	ldrb	w1, [x1, #8]
  413ad4:	cmp	w1, #0x8
  413ad8:	b.eq	413bd4 <_obstack_memory_used@@Base+0x4d4>  // b.none
  413adc:	cmp	w1, #0x9
  413ae0:	b.eq	413be8 <_obstack_memory_used@@Base+0x4e8>  // b.none
  413ae4:	cmp	w1, #0x4
  413ae8:	b.ne	413bcc <_obstack_memory_used@@Base+0x4cc>  // b.any
  413aec:	cmn	x23, #0x1
  413af0:	b.eq	413bcc <_obstack_memory_used@@Base+0x4cc>  // b.none
  413af4:	ldr	x20, [x22, #216]
  413af8:	mul	x11, x5, x28
  413afc:	add	x20, x20, x6
  413b00:	ldr	x0, [x20]
  413b04:	cmp	x0, x5
  413b08:	b.ne	413bc0 <_obstack_memory_used@@Base+0x4c0>  // b.any
  413b0c:	cmp	x21, #0x3f
  413b10:	b.gt	413b20 <_obstack_memory_used@@Base+0x420>
  413b14:	ldrh	w0, [x20, #34]
  413b18:	tst	x0, x26
  413b1c:	b.eq	413bc0 <_obstack_memory_used@@Base+0x4c0>  // b.none
  413b20:	ldr	x0, [x8, #40]
  413b24:	add	x0, x0, x11
  413b28:	ldr	x0, [x0, #16]
  413b2c:	ldr	x3, [x0]
  413b30:	cmp	x27, x3
  413b34:	b.ne	413b58 <_obstack_memory_used@@Base+0x458>  // b.any
  413b38:	sbfx	x0, x19, #0, #1
  413b3c:	ldp	x19, x20, [sp, #16]
  413b40:	ldp	x21, x22, [sp, #32]
  413b44:	ldp	x23, x24, [sp, #48]
  413b48:	ldp	x25, x26, [sp, #64]
  413b4c:	ldp	x27, x28, [sp, #80]
  413b50:	ldp	x29, x30, [sp], #144
  413b54:	ret
  413b58:	mov	x4, x23
  413b5c:	mov	x2, x21
  413b60:	mov	w1, w19
  413b64:	mov	x0, x22
  413b68:	stp	x6, x11, [sp, #96]
  413b6c:	str	w7, [sp, #116]
  413b70:	stp	x8, x5, [sp, #120]
  413b74:	stp	w10, w9, [sp, #136]
  413b78:	bl	413a44 <_obstack_memory_used@@Base+0x344>
  413b7c:	ldr	w7, [sp, #116]
  413b80:	cmn	w0, #0x1
  413b84:	ldp	w10, w9, [sp, #136]
  413b88:	ldp	x6, x11, [sp, #96]
  413b8c:	ldp	x8, x5, [sp, #120]
  413b90:	b.ne	413b9c <_obstack_memory_used@@Base+0x49c>  // b.any
  413b94:	mov	w0, #0xffffffff            	// #-1
  413b98:	b	413b3c <_obstack_memory_used@@Base+0x43c>
  413b9c:	cbnz	w0, 413bac <_obstack_memory_used@@Base+0x4ac>
  413ba0:	cbz	w9, 413bac <_obstack_memory_used@@Base+0x4ac>
  413ba4:	mov	w0, #0x0                   	// #0
  413ba8:	b	413b3c <_obstack_memory_used@@Base+0x43c>
  413bac:	cmp	x21, #0x3f
  413bb0:	b.gt	413bc0 <_obstack_memory_used@@Base+0x4c0>
  413bb4:	ldrh	w0, [x20, #34]
  413bb8:	and	w0, w7, w0
  413bbc:	strh	w0, [x20, #34]
  413bc0:	ldrb	w0, [x20, #32]
  413bc4:	add	x20, x20, #0x28
  413bc8:	cbnz	w0, 413b00 <_obstack_memory_used@@Base+0x400>
  413bcc:	add	x24, x24, #0x1
  413bd0:	b	413aa8 <_obstack_memory_used@@Base+0x3a8>
  413bd4:	cbz	w10, 413bcc <_obstack_memory_used@@Base+0x4cc>
  413bd8:	ldr	x0, [x0, x2]
  413bdc:	cmp	x0, x21
  413be0:	b.ne	413bcc <_obstack_memory_used@@Base+0x4cc>  // b.any
  413be4:	b	413b94 <_obstack_memory_used@@Base+0x494>
  413be8:	cbz	w9, 413bcc <_obstack_memory_used@@Base+0x4cc>
  413bec:	ldr	x0, [x0, x2]
  413bf0:	cmp	x0, x21
  413bf4:	b.ne	413bcc <_obstack_memory_used@@Base+0x4cc>  // b.any
  413bf8:	b	413ba4 <_obstack_memory_used@@Base+0x4a4>
  413bfc:	mov	x6, x4
  413c00:	mov	x4, x5
  413c04:	ldr	x5, [x0, #216]
  413c08:	mov	x7, #0x28                  	// #40
  413c0c:	madd	x1, x1, x7, x5
  413c10:	ldr	x7, [x1, #16]
  413c14:	cmp	x7, x6
  413c18:	b.gt	413c44 <_obstack_memory_used@@Base+0x544>
  413c1c:	ldr	x5, [x1, #24]
  413c20:	cmp	x5, x6
  413c24:	b.lt	413c50 <_obstack_memory_used@@Base+0x550>  // b.tstop
  413c28:	cmp	x7, x6
  413c2c:	cset	w7, eq  // eq = none
  413c30:	cmp	x5, x6
  413c34:	cset	w1, eq  // eq = none
  413c38:	orr	w1, w7, w1, lsl #1
  413c3c:	cbz	w1, 413c48 <_obstack_memory_used@@Base+0x548>
  413c40:	b	413a44 <_obstack_memory_used@@Base+0x344>
  413c44:	mov	w1, #0xffffffff            	// #-1
  413c48:	mov	w0, w1
  413c4c:	ret
  413c50:	mov	w1, #0x1                   	// #1
  413c54:	b	413c48 <_obstack_memory_used@@Base+0x548>
  413c58:	mov	x2, x0
  413c5c:	mov	x7, #0x28                  	// #40
  413c60:	mov	x0, #0x0                   	// #0
  413c64:	ldr	x6, [x2, #200]
  413c68:	mov	x4, x6
  413c6c:	cmp	x4, x0
  413c70:	b.gt	413c98 <_obstack_memory_used@@Base+0x598>
  413c74:	cmp	x6, x0
  413c78:	b.le	413cc4 <_obstack_memory_used@@Base+0x5c4>
  413c7c:	ldr	x3, [x2, #216]
  413c80:	mov	x2, #0x28                  	// #40
  413c84:	madd	x2, x0, x2, x3
  413c88:	ldr	x2, [x2, #8]
  413c8c:	cmp	x2, x1
  413c90:	csinv	x0, x0, xzr, eq  // eq = none
  413c94:	ret
  413c98:	add	x3, x4, x0
  413c9c:	ldr	x5, [x2, #216]
  413ca0:	asr	x3, x3, #1
  413ca4:	madd	x5, x3, x7, x5
  413ca8:	ldr	x5, [x5, #8]
  413cac:	cmp	x5, x1
  413cb0:	b.ge	413cbc <_obstack_memory_used@@Base+0x5bc>  // b.tcont
  413cb4:	add	x0, x3, #0x1
  413cb8:	b	413c6c <_obstack_memory_used@@Base+0x56c>
  413cbc:	mov	x4, x3
  413cc0:	b	413c6c <_obstack_memory_used@@Base+0x56c>
  413cc4:	mov	x0, #0xffffffffffffffff    	// #-1
  413cc8:	b	413c94 <_obstack_memory_used@@Base+0x594>
  413ccc:	stp	x29, x30, [sp, #-96]!
  413cd0:	mov	x12, x0
  413cd4:	mov	x13, x1
  413cd8:	mov	x18, x5
  413cdc:	mov	x15, x3
  413ce0:	mov	x29, sp
  413ce4:	mov	x1, x3
  413ce8:	stp	x19, x20, [sp, #16]
  413cec:	stp	x21, x22, [sp, #32]
  413cf0:	mov	x22, x2
  413cf4:	stp	x23, x24, [sp, #48]
  413cf8:	mov	x23, x4
  413cfc:	stp	x25, x26, [sp, #64]
  413d00:	ldr	x25, [x0, #152]
  413d04:	str	x27, [sp, #80]
  413d08:	bl	413c58 <_obstack_memory_used@@Base+0x558>
  413d0c:	mov	x20, x0
  413d10:	mov	x1, x18
  413d14:	mov	x0, x12
  413d18:	bl	413c58 <_obstack_memory_used@@Base+0x558>
  413d1c:	mov	x21, x0
  413d20:	mov	x14, #0x0                   	// #0
  413d24:	mov	x27, #0x28                  	// #40
  413d28:	ldr	x0, [x13, #8]
  413d2c:	cmp	x0, x14
  413d30:	b.gt	413d54 <_obstack_memory_used@@Base+0x654>
  413d34:	mov	w0, #0x0                   	// #0
  413d38:	ldp	x19, x20, [sp, #16]
  413d3c:	ldp	x21, x22, [sp, #32]
  413d40:	ldp	x23, x24, [sp, #48]
  413d44:	ldp	x25, x26, [sp, #64]
  413d48:	ldr	x27, [sp, #80]
  413d4c:	ldp	x29, x30, [sp], #96
  413d50:	ret
  413d54:	ldr	x0, [x13, #16]
  413d58:	lsl	x19, x14, #3
  413d5c:	ldr	x2, [x12, #216]
  413d60:	mov	x4, x15
  413d64:	ldr	x1, [x0, x19]
  413d68:	mov	x5, x20
  413d6c:	mov	x3, x22
  413d70:	mul	x0, x1, x27
  413d74:	ldr	x0, [x2, x0]
  413d78:	ldr	x2, [x25]
  413d7c:	lsl	x0, x0, #4
  413d80:	ldr	x26, [x2, x0]
  413d84:	mov	x0, x12
  413d88:	mov	x2, x26
  413d8c:	bl	413bfc <_obstack_memory_used@@Base+0x4fc>
  413d90:	mov	w24, w0
  413d94:	mov	x5, x21
  413d98:	ldr	x0, [x13, #16]
  413d9c:	mov	x4, x18
  413da0:	mov	x3, x23
  413da4:	mov	x2, x26
  413da8:	ldr	x1, [x0, x19]
  413dac:	mov	x0, x12
  413db0:	bl	413bfc <_obstack_memory_used@@Base+0x4fc>
  413db4:	cmp	w24, w0
  413db8:	b.ne	413dc4 <_obstack_memory_used@@Base+0x6c4>  // b.any
  413dbc:	add	x14, x14, #0x1
  413dc0:	b	413d28 <_obstack_memory_used@@Base+0x628>
  413dc4:	mov	w0, #0x1                   	// #1
  413dc8:	b	413d38 <_obstack_memory_used@@Base+0x638>
  413dcc:	stp	x29, x30, [sp, #-48]!
  413dd0:	mov	x29, sp
  413dd4:	stp	x19, x20, [sp, #16]
  413dd8:	mov	x20, x1
  413ddc:	str	x21, [sp, #32]
  413de0:	mov	x21, x2
  413de4:	mov	x19, x0
  413de8:	ldr	x0, [x0, #8]
  413dec:	cbnz	x0, 413de4 <_obstack_memory_used@@Base+0x6e4>
  413df0:	ldr	x0, [x19, #16]
  413df4:	cbnz	x0, 413de4 <_obstack_memory_used@@Base+0x6e4>
  413df8:	mov	x1, x19
  413dfc:	mov	x0, x21
  413e00:	blr	x20
  413e04:	cbnz	w0, 413e28 <_obstack_memory_used@@Base+0x728>
  413e08:	ldr	x1, [x19]
  413e0c:	cbz	x1, 413e28 <_obstack_memory_used@@Base+0x728>
  413e10:	ldr	x0, [x1, #16]
  413e14:	cmp	x0, x19
  413e18:	b.eq	413e20 <_obstack_memory_used@@Base+0x720>  // b.none
  413e1c:	cbnz	x0, 413de4 <_obstack_memory_used@@Base+0x6e4>
  413e20:	mov	x19, x1
  413e24:	b	413df8 <_obstack_memory_used@@Base+0x6f8>
  413e28:	ldp	x19, x20, [sp, #16]
  413e2c:	ldr	x21, [sp, #32]
  413e30:	ldp	x29, x30, [sp], #48
  413e34:	ret
  413e38:	stp	x29, x30, [sp, #-48]!
  413e3c:	mov	x29, sp
  413e40:	stp	x19, x20, [sp, #16]
  413e44:	mov	x19, x0
  413e48:	mov	x20, x1
  413e4c:	str	x21, [sp, #32]
  413e50:	mov	x21, x2
  413e54:	mov	x1, x19
  413e58:	mov	x0, x21
  413e5c:	blr	x20
  413e60:	cbnz	w0, 413e9c <_obstack_memory_used@@Base+0x79c>
  413e64:	ldr	x3, [x19, #8]
  413e68:	cbnz	x3, 413e80 <_obstack_memory_used@@Base+0x780>
  413e6c:	mov	x1, #0x0                   	// #0
  413e70:	ldr	x3, [x19, #16]
  413e74:	cmp	x3, x1
  413e78:	b.eq	413e88 <_obstack_memory_used@@Base+0x788>  // b.none
  413e7c:	cbz	x3, 413e88 <_obstack_memory_used@@Base+0x788>
  413e80:	mov	x19, x3
  413e84:	b	413e54 <_obstack_memory_used@@Base+0x754>
  413e88:	ldr	x2, [x19]
  413e8c:	mov	x1, x19
  413e90:	cbz	x2, 413e9c <_obstack_memory_used@@Base+0x79c>
  413e94:	mov	x19, x2
  413e98:	b	413e70 <_obstack_memory_used@@Base+0x770>
  413e9c:	ldp	x19, x20, [sp, #16]
  413ea0:	ldr	x21, [sp, #32]
  413ea4:	ldp	x29, x30, [sp], #48
  413ea8:	ret
  413eac:	stp	x29, x30, [sp, #-32]!
  413eb0:	mov	x29, sp
  413eb4:	stp	x19, x20, [sp, #16]
  413eb8:	mov	x19, x0
  413ebc:	ldr	w0, [x0, #144]
  413ec0:	mov	x20, x1
  413ec4:	cmp	w0, #0x1
  413ec8:	b.le	413f14 <_obstack_memory_used@@Base+0x814>
  413ecc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  413ed0:	cmp	x1, x0
  413ed4:	b.ls	413ee8 <_obstack_memory_used@@Base+0x7e8>  // b.plast
  413ed8:	mov	w0, #0xc                   	// #12
  413edc:	ldp	x19, x20, [sp, #16]
  413ee0:	ldp	x29, x30, [sp], #32
  413ee4:	ret
  413ee8:	ldr	x0, [x19, #16]
  413eec:	lsl	x1, x1, #2
  413ef0:	bl	402640 <realloc@plt>
  413ef4:	cbz	x0, 413ed8 <_obstack_memory_used@@Base+0x7d8>
  413ef8:	str	x0, [x19, #16]
  413efc:	ldr	x0, [x19, #24]
  413f00:	cbz	x0, 413f14 <_obstack_memory_used@@Base+0x814>
  413f04:	lsl	x1, x20, #3
  413f08:	bl	402640 <realloc@plt>
  413f0c:	cbz	x0, 413ed8 <_obstack_memory_used@@Base+0x7d8>
  413f10:	str	x0, [x19, #24]
  413f14:	ldrb	w0, [x19, #139]
  413f18:	cbz	w0, 413f30 <_obstack_memory_used@@Base+0x830>
  413f1c:	ldr	x0, [x19, #8]
  413f20:	mov	x1, x20
  413f24:	bl	402640 <realloc@plt>
  413f28:	cbz	x0, 413ed8 <_obstack_memory_used@@Base+0x7d8>
  413f2c:	str	x0, [x19, #8]
  413f30:	mov	w0, #0x0                   	// #0
  413f34:	str	x20, [x19, #64]
  413f38:	b	413edc <_obstack_memory_used@@Base+0x7dc>
  413f3c:	stp	x29, x30, [sp, #-32]!
  413f40:	mov	x29, sp
  413f44:	stp	x19, x20, [sp, #16]
  413f48:	mov	x19, x0
  413f4c:	mov	x20, x1
  413f50:	ldr	x0, [x0]
  413f54:	ldr	x1, [x19, #8]
  413f58:	cmp	x0, x1
  413f5c:	b.ne	413f80 <_obstack_memory_used@@Base+0x880>  // b.any
  413f60:	add	x0, x0, #0x1
  413f64:	lsl	x1, x0, #1
  413f68:	str	x1, [x19]
  413f6c:	lsl	x1, x0, #4
  413f70:	ldr	x0, [x19, #16]
  413f74:	bl	402640 <realloc@plt>
  413f78:	cbz	x0, 413fa0 <_obstack_memory_used@@Base+0x8a0>
  413f7c:	str	x0, [x19, #16]
  413f80:	ldp	x0, x1, [x19, #8]
  413f84:	add	x2, x0, #0x1
  413f88:	str	x2, [x19, #8]
  413f8c:	str	x20, [x1, x0, lsl #3]
  413f90:	mov	w0, #0x1                   	// #1
  413f94:	ldp	x19, x20, [sp, #16]
  413f98:	ldp	x29, x30, [sp], #32
  413f9c:	ret
  413fa0:	mov	w0, #0x0                   	// #0
  413fa4:	b	413f94 <_obstack_memory_used@@Base+0x894>
  413fa8:	stp	xzr, xzr, [x0]
  413fac:	stp	xzr, xzr, [x0, #16]
  413fb0:	ret
  413fb4:	stp	x29, x30, [sp, #-32]!
  413fb8:	mov	x29, sp
  413fbc:	stp	x19, x20, [sp, #16]
  413fc0:	mov	x19, x0
  413fc4:	mov	x0, #0x1                   	// #1
  413fc8:	mov	x20, x1
  413fcc:	stp	x0, x0, [x19]
  413fd0:	mov	x0, #0x8                   	// #8
  413fd4:	bl	402520 <malloc@plt>
  413fd8:	str	x0, [x19, #16]
  413fdc:	cbnz	x0, 413ff4 <_obstack_memory_used@@Base+0x8f4>
  413fe0:	mov	w0, #0xc                   	// #12
  413fe4:	stp	xzr, xzr, [x19]
  413fe8:	ldp	x19, x20, [sp, #16]
  413fec:	ldp	x29, x30, [sp], #32
  413ff0:	ret
  413ff4:	str	x20, [x0]
  413ff8:	mov	w0, #0x0                   	// #0
  413ffc:	b	413fe8 <_obstack_memory_used@@Base+0x8e8>
  414000:	stp	x29, x30, [sp, #-32]!
  414004:	mov	x29, sp
  414008:	str	x19, [sp, #16]
  41400c:	mov	x19, x0
  414010:	lsl	x0, x1, #3
  414014:	stp	x1, xzr, [x19]
  414018:	bl	402520 <malloc@plt>
  41401c:	str	x0, [x19, #16]
  414020:	cmp	x0, #0x0
  414024:	mov	w0, #0xc                   	// #12
  414028:	csel	w0, w0, wzr, eq  // eq = none
  41402c:	ldr	x19, [sp, #16]
  414030:	ldp	x29, x30, [sp], #32
  414034:	ret
  414038:	stp	x29, x30, [sp, #-144]!
  41403c:	mov	x29, sp
  414040:	stp	x19, x20, [sp, #16]
  414044:	mov	x19, x0
  414048:	stp	x21, x22, [sp, #32]
  41404c:	add	x22, sp, #0x50
  414050:	ldr	x21, [x19, #64]
  414054:	stp	x23, x24, [sp, #48]
  414058:	mov	w23, #0xffffffff            	// #-1
  41405c:	ldr	x0, [x0, #88]
  414060:	ldr	x20, [x19, #48]
  414064:	cmp	x21, x0
  414068:	csel	x21, x21, x0, le
  41406c:	cmp	x20, x21
  414070:	b.ge	414184 <_obstack_memory_used@@Base+0xa84>  // b.tcont
  414074:	ldr	x0, [x19, #120]
  414078:	sub	x2, x21, x20
  41407c:	ldr	x24, [x19, #32]
  414080:	cbz	x0, 4140d8 <_obstack_memory_used@@Base+0x9d8>
  414084:	mov	x0, #0x0                   	// #0
  414088:	ldr	w1, [x19, #144]
  41408c:	cmp	w1, w0
  414090:	b.le	41409c <_obstack_memory_used@@Base+0x99c>
  414094:	cmp	x2, x0
  414098:	b.ne	4140a4 <_obstack_memory_used@@Base+0x9a4>  // b.any
  41409c:	mov	x1, x22
  4140a0:	b	4140e8 <_obstack_memory_used@@Base+0x9e8>
  4140a4:	ldr	x1, [x19]
  4140a8:	ldr	x3, [x19, #40]
  4140ac:	add	x1, x1, x0
  4140b0:	add	x1, x1, x20
  4140b4:	ldrb	w1, [x1, x3]
  4140b8:	ldr	x3, [x19, #120]
  4140bc:	ldrb	w3, [x3, x1]
  4140c0:	ldr	x1, [x19, #8]
  4140c4:	add	x1, x1, x20
  4140c8:	strb	w3, [x1, x0]
  4140cc:	strb	w3, [x22, x0]
  4140d0:	add	x0, x0, #0x1
  4140d4:	b	414088 <_obstack_memory_used@@Base+0x988>
  4140d8:	ldr	x1, [x19, #40]
  4140dc:	add	x0, x20, x1
  4140e0:	ldr	x1, [x19]
  4140e4:	add	x1, x1, x0
  4140e8:	add	x3, x19, #0x20
  4140ec:	add	x0, sp, #0x4c
  4140f0:	bl	413374 <wcrtomb@plt+0x10964>
  4140f4:	sub	x1, x0, #0x1
  4140f8:	cmn	x1, #0x3
  4140fc:	b.hi	414118 <_obstack_memory_used@@Base+0xa18>  // b.pmore
  414100:	cmn	x0, #0x2
  414104:	b.ne	414148 <_obstack_memory_used@@Base+0xa48>  // b.any
  414108:	ldr	x1, [x19, #64]
  41410c:	ldr	x0, [x19, #88]
  414110:	cmp	x1, x0
  414114:	b.lt	414180 <_obstack_memory_used@@Base+0xa80>  // b.tstop
  414118:	ldr	x0, [x19]
  41411c:	ldr	x1, [x19, #40]
  414120:	add	x0, x0, x20
  414124:	ldrb	w0, [x0, x1]
  414128:	ldr	x1, [x19, #120]
  41412c:	str	w0, [sp, #76]
  414130:	cbz	x1, 414140 <_obstack_memory_used@@Base+0xa40>
  414134:	and	x0, x0, #0xff
  414138:	ldrb	w0, [x1, x0]
  41413c:	str	w0, [sp, #76]
  414140:	mov	x0, #0x1                   	// #1
  414144:	str	x24, [x19, #32]
  414148:	ldr	x3, [x19, #16]
  41414c:	add	x2, x20, #0x1
  414150:	ldr	w1, [sp, #76]
  414154:	add	x0, x20, x0
  414158:	str	w1, [x3, x20, lsl #2]
  41415c:	mov	x1, x2
  414160:	cmp	x1, x0
  414164:	b.lt	41419c <_obstack_memory_used@@Base+0xa9c>  // b.tstop
  414168:	mvn	x1, x20
  41416c:	cmp	x20, x0
  414170:	add	x1, x1, x0
  414174:	csel	x1, x1, xzr, lt  // lt = tstop
  414178:	add	x20, x1, x2
  41417c:	b	41406c <_obstack_memory_used@@Base+0x96c>
  414180:	str	x24, [x19, #32]
  414184:	ldp	x21, x22, [sp, #32]
  414188:	ldp	x23, x24, [sp, #48]
  41418c:	stp	x20, x20, [x19, #48]
  414190:	ldp	x19, x20, [sp, #16]
  414194:	ldp	x29, x30, [sp], #144
  414198:	ret
  41419c:	str	w23, [x3, x1, lsl #2]
  4141a0:	add	x1, x1, #0x1
  4141a4:	b	414160 <_obstack_memory_used@@Base+0xa60>
  4141a8:	stp	x29, x30, [sp, #-176]!
  4141ac:	mov	x29, sp
  4141b0:	stp	x19, x20, [sp, #16]
  4141b4:	mov	x19, x0
  4141b8:	stp	x23, x24, [sp, #48]
  4141bc:	ldr	x20, [x0, #48]
  4141c0:	stp	x21, x22, [sp, #32]
  4141c4:	ldr	x24, [x19, #64]
  4141c8:	stp	x25, x26, [sp, #64]
  4141cc:	ldr	x0, [x0, #88]
  4141d0:	cmp	x24, x0
  4141d4:	csel	x24, x24, x0, le
  4141d8:	ldrb	w0, [x19, #138]
  4141dc:	str	x27, [sp, #80]
  4141e0:	cbnz	w0, 414468 <_obstack_memory_used@@Base+0xd68>
  4141e4:	ldr	x0, [x19, #120]
  4141e8:	cbnz	x0, 414468 <_obstack_memory_used@@Base+0xd68>
  4141ec:	ldrb	w0, [x19, #140]
  4141f0:	cbnz	w0, 414468 <_obstack_memory_used@@Base+0xd68>
  4141f4:	mov	w23, #0xffffffff            	// #-1
  4141f8:	cmp	x20, x24
  4141fc:	b.ge	414458 <_obstack_memory_used@@Base+0xd58>  // b.tcont
  414200:	ldr	x26, [x19]
  414204:	add	x27, x19, #0x20
  414208:	ldr	x21, [x19, #40]
  41420c:	mov	x25, x20
  414210:	add	x0, x26, x21
  414214:	ldrb	w22, [x0, x20]
  414218:	tbnz	w22, #7, 414254 <_obstack_memory_used@@Base+0xb54>
  41421c:	mov	x0, x27
  414220:	bl	402710 <mbsinit@plt>
  414224:	cbz	w0, 414254 <_obstack_memory_used@@Base+0xb54>
  414228:	bl	402650 <__ctype_toupper_loc@plt>
  41422c:	ubfiz	x22, x22, #2, #8
  414230:	ldr	x0, [x0]
  414234:	ldr	x1, [x19, #8]
  414238:	ldr	w0, [x0, x22]
  41423c:	strb	w0, [x1, x20]
  414240:	ldp	x1, x0, [x19, #8]
  414244:	ldrb	w1, [x1, x20]
  414248:	str	w1, [x0, x20, lsl #2]
  41424c:	add	x20, x20, #0x1
  414250:	b	4141f8 <_obstack_memory_used@@Base+0xaf8>
  414254:	add	x21, x21, x20
  414258:	mov	x3, x27
  41425c:	ldr	x0, [x19, #32]
  414260:	add	x1, x26, x21
  414264:	sub	x2, x24, x20
  414268:	str	x0, [sp, #104]
  41426c:	add	x0, sp, #0x64
  414270:	bl	413374 <wcrtomb@plt+0x10964>
  414274:	mov	x21, x0
  414278:	sub	x0, x0, #0x1
  41427c:	cmn	x0, #0x4
  414280:	b.hi	414400 <_obstack_memory_used@@Base+0xd00>  // b.pmore
  414284:	ldr	w25, [sp, #100]
  414288:	mov	w0, w25
  41428c:	bl	402920 <towupper@plt>
  414290:	mov	w22, w0
  414294:	cmp	w25, w0
  414298:	b.eq	4143dc <_obstack_memory_used@@Base+0xcdc>  // b.none
  41429c:	mov	w1, w0
  4142a0:	add	x2, sp, #0x68
  4142a4:	add	x0, sp, #0x70
  4142a8:	bl	402a10 <wcrtomb@plt>
  4142ac:	cmp	x21, x0
  4142b0:	b.ne	4142fc <_obstack_memory_used@@Base+0xbfc>  // b.any
  4142b4:	ldr	x0, [x19, #8]
  4142b8:	mov	x2, x21
  4142bc:	add	x1, sp, #0x70
  4142c0:	add	x0, x0, x20
  4142c4:	bl	402360 <memcpy@plt>
  4142c8:	ldr	x2, [x19, #16]
  4142cc:	add	x1, x20, #0x1
  4142d0:	add	x21, x20, x21
  4142d4:	mov	x0, x1
  4142d8:	str	w22, [x2, x20, lsl #2]
  4142dc:	cmp	x21, x0
  4142e0:	b.gt	4143f4 <_obstack_memory_used@@Base+0xcf4>
  4142e4:	mvn	x0, x20
  4142e8:	cmp	x20, x21
  4142ec:	add	x0, x0, x21
  4142f0:	csel	x0, x0, xzr, lt  // lt = tstop
  4142f4:	add	x20, x0, x1
  4142f8:	b	4141f8 <_obstack_memory_used@@Base+0xaf8>
  4142fc:	mov	x21, x20
  414300:	ldr	x3, [x19, #120]
  414304:	sub	x2, x24, x21
  414308:	ldr	x0, [x19, #32]
  41430c:	str	x0, [sp, #104]
  414310:	cbz	x3, 4144a0 <_obstack_memory_used@@Base+0xda0>
  414314:	ldr	w4, [x19, #144]
  414318:	add	x23, sp, #0x70
  41431c:	mov	x0, #0x0                   	// #0
  414320:	cmp	w4, w0
  414324:	b.le	414330 <_obstack_memory_used@@Base+0xc30>
  414328:	cmp	x0, x2
  41432c:	b.lt	41447c <_obstack_memory_used@@Base+0xd7c>  // b.tstop
  414330:	add	x3, x19, #0x20
  414334:	mov	x1, x23
  414338:	add	x0, sp, #0x64
  41433c:	bl	413374 <wcrtomb@plt+0x10964>
  414340:	sub	x26, x0, #0x1
  414344:	mov	x22, x0
  414348:	cmn	x26, #0x4
  41434c:	b.hi	414618 <_obstack_memory_used@@Base+0xf18>  // b.pmore
  414350:	ldr	w25, [sp, #100]
  414354:	mov	w0, w25
  414358:	bl	402920 <towupper@plt>
  41435c:	mov	w27, w0
  414360:	cmp	w25, w0
  414364:	b.eq	4145d8 <_obstack_memory_used@@Base+0xed8>  // b.none
  414368:	mov	w1, w0
  41436c:	add	x2, sp, #0x68
  414370:	add	x0, sp, #0x70
  414374:	bl	402a10 <wcrtomb@plt>
  414378:	mov	x25, x0
  41437c:	cmp	x22, x0
  414380:	b.ne	4144b4 <_obstack_memory_used@@Base+0xdb4>  // b.any
  414384:	ldr	x0, [x19, #8]
  414388:	mov	x2, x22
  41438c:	add	x1, sp, #0x70
  414390:	add	x0, x0, x21
  414394:	bl	402360 <memcpy@plt>
  414398:	ldrb	w0, [x19, #140]
  41439c:	cbnz	w0, 4145e8 <_obstack_memory_used@@Base+0xee8>
  4143a0:	ldr	x2, [x19, #16]
  4143a4:	add	x0, x21, #0x1
  4143a8:	add	x20, x20, x22
  4143ac:	mov	x1, x0
  4143b0:	add	x22, x21, x22
  4143b4:	mov	w3, #0xffffffff            	// #-1
  4143b8:	str	w27, [x2, x21, lsl #2]
  4143bc:	cmp	x1, x22
  4143c0:	b.lt	41460c <_obstack_memory_used@@Base+0xf0c>  // b.tstop
  4143c4:	mvn	x1, x21
  4143c8:	cmp	x21, x22
  4143cc:	add	x1, x1, x22
  4143d0:	csel	x1, x1, xzr, lt  // lt = tstop
  4143d4:	add	x21, x1, x0
  4143d8:	b	414470 <_obstack_memory_used@@Base+0xd70>
  4143dc:	ldp	x3, x0, [x19]
  4143e0:	mov	x2, x21
  4143e4:	ldr	x1, [x19, #40]
  4143e8:	add	x1, x20, x1
  4143ec:	add	x1, x3, x1
  4143f0:	b	4142c0 <_obstack_memory_used@@Base+0xbc0>
  4143f4:	str	w23, [x2, x0, lsl #2]
  4143f8:	add	x0, x0, #0x1
  4143fc:	b	4142dc <_obstack_memory_used@@Base+0xbdc>
  414400:	cmn	x0, #0x3
  414404:	b.ne	414418 <_obstack_memory_used@@Base+0xd18>  // b.any
  414408:	ldr	x1, [x19, #64]
  41440c:	ldr	x0, [x19, #88]
  414410:	cmp	x1, x0
  414414:	b.lt	414450 <_obstack_memory_used@@Base+0xd50>  // b.tstop
  414418:	ldr	x0, [x19]
  41441c:	cmn	x21, #0x1
  414420:	ldr	x1, [x19, #40]
  414424:	add	x0, x0, x20
  414428:	ldrb	w0, [x0, x1]
  41442c:	ldr	x1, [x19, #8]
  414430:	strb	w0, [x1, x20]
  414434:	add	x20, x20, #0x1
  414438:	ldr	x1, [x19, #16]
  41443c:	str	w0, [x1, x25, lsl #2]
  414440:	b.ne	4141f8 <_obstack_memory_used@@Base+0xaf8>  // b.any
  414444:	ldr	x0, [sp, #104]
  414448:	str	x0, [x19, #32]
  41444c:	b	4141f8 <_obstack_memory_used@@Base+0xaf8>
  414450:	ldr	x0, [sp, #104]
  414454:	str	x0, [x19, #32]
  414458:	str	x20, [x19, #48]
  41445c:	mov	w0, #0x0                   	// #0
  414460:	str	x20, [x19, #56]
  414464:	b	4144f8 <_obstack_memory_used@@Base+0xdf8>
  414468:	mov	x21, x20
  41446c:	ldr	x20, [x19, #56]
  414470:	cmp	x24, x21
  414474:	b.gt	414300 <_obstack_memory_used@@Base+0xc00>
  414478:	b	4144d4 <_obstack_memory_used@@Base+0xdd4>
  41447c:	ldr	x1, [x19]
  414480:	ldr	x5, [x19, #40]
  414484:	add	x1, x1, x20
  414488:	add	x1, x1, x0
  41448c:	ldrb	w1, [x1, x5]
  414490:	ldrb	w1, [x3, x1]
  414494:	strb	w1, [x23, x0]
  414498:	add	x0, x0, #0x1
  41449c:	b	414320 <_obstack_memory_used@@Base+0xc20>
  4144a0:	ldr	x23, [x19, #40]
  4144a4:	add	x0, x20, x23
  4144a8:	ldr	x23, [x19]
  4144ac:	add	x23, x23, x0
  4144b0:	b	414330 <_obstack_memory_used@@Base+0xc30>
  4144b4:	cmn	x0, #0x1
  4144b8:	b.eq	4145d8 <_obstack_memory_used@@Base+0xed8>  // b.none
  4144bc:	add	x23, x21, x0
  4144c0:	ldr	x0, [x19, #64]
  4144c4:	cmp	x23, x0
  4144c8:	b.ls	4144dc <_obstack_memory_used@@Base+0xddc>  // b.plast
  4144cc:	ldr	x0, [sp, #104]
  4144d0:	str	x0, [x19, #32]
  4144d4:	str	x21, [x19, #48]
  4144d8:	b	41445c <_obstack_memory_used@@Base+0xd5c>
  4144dc:	ldr	x1, [x19, #24]
  4144e0:	cbnz	x1, 414514 <_obstack_memory_used@@Base+0xe14>
  4144e4:	lsl	x0, x0, #3
  4144e8:	bl	402520 <malloc@plt>
  4144ec:	str	x0, [x19, #24]
  4144f0:	cbnz	x0, 414514 <_obstack_memory_used@@Base+0xe14>
  4144f4:	mov	w0, #0xc                   	// #12
  4144f8:	ldp	x19, x20, [sp, #16]
  4144fc:	ldp	x21, x22, [sp, #32]
  414500:	ldp	x23, x24, [sp, #48]
  414504:	ldp	x25, x26, [sp, #64]
  414508:	ldr	x27, [sp, #80]
  41450c:	ldp	x29, x30, [sp], #176
  414510:	ret
  414514:	ldrb	w0, [x19, #140]
  414518:	cbz	w0, 4145b4 <_obstack_memory_used@@Base+0xeb4>
  41451c:	ldr	x0, [x19, #8]
  414520:	mov	x2, x25
  414524:	add	x1, sp, #0x70
  414528:	add	x0, x0, x21
  41452c:	bl	402360 <memcpy@plt>
  414530:	ldr	x0, [x19, #16]
  414534:	mov	w4, #0xffffffff            	// #-1
  414538:	add	x2, x0, x21, lsl #2
  41453c:	str	w27, [x0, x21, lsl #2]
  414540:	ldr	x0, [x19, #24]
  414544:	add	x3, x0, x21, lsl #3
  414548:	str	x20, [x0, x21, lsl #3]
  41454c:	mov	x0, #0x1                   	// #1
  414550:	cmp	x0, x25
  414554:	b.cc	4145bc <_obstack_memory_used@@Base+0xebc>  // b.lo, b.ul, b.last
  414558:	ldp	x24, x0, [x19, #88]
  41455c:	sub	x25, x25, x22
  414560:	add	x1, x25, x24
  414564:	str	x1, [x19, #88]
  414568:	cmp	x20, x0
  41456c:	b.ge	41457c <_obstack_memory_used@@Base+0xe7c>  // b.tcont
  414570:	ldr	x2, [x19, #104]
  414574:	add	x25, x2, x25
  414578:	str	x25, [x19, #104]
  41457c:	ldr	x24, [x19, #64]
  414580:	mov	x21, x23
  414584:	add	x20, x20, x22
  414588:	cmp	x24, x1
  41458c:	csel	x24, x24, x1, le
  414590:	b	414470 <_obstack_memory_used@@Base+0xd70>
  414594:	ldr	x1, [x19, #24]
  414598:	str	x0, [x1, x0, lsl #3]
  41459c:	add	x0, x0, #0x1
  4145a0:	cmp	x0, x21
  4145a4:	b.ne	414594 <_obstack_memory_used@@Base+0xe94>  // b.any
  4145a8:	mov	w0, #0x1                   	// #1
  4145ac:	strb	w0, [x19, #140]
  4145b0:	b	41451c <_obstack_memory_used@@Base+0xe1c>
  4145b4:	mov	x0, #0x0                   	// #0
  4145b8:	b	4145a0 <_obstack_memory_used@@Base+0xea0>
  4145bc:	cmp	x0, x22
  4145c0:	csel	x1, x26, x0, cs  // cs = hs, nlast
  4145c4:	add	x1, x20, x1
  4145c8:	str	x1, [x3, x0, lsl #3]
  4145cc:	str	w4, [x2, x0, lsl #2]
  4145d0:	add	x0, x0, #0x1
  4145d4:	b	414550 <_obstack_memory_used@@Base+0xe50>
  4145d8:	mov	x2, x22
  4145dc:	mov	x1, x23
  4145e0:	ldr	x0, [x19, #8]
  4145e4:	b	414390 <_obstack_memory_used@@Base+0xc90>
  4145e8:	ldr	x1, [x19, #24]
  4145ec:	mov	x0, #0x0                   	// #0
  4145f0:	add	x1, x1, x21, lsl #3
  4145f4:	add	x2, x20, x0
  4145f8:	str	x2, [x1, x0, lsl #3]
  4145fc:	add	x0, x0, #0x1
  414600:	cmp	x22, x0
  414604:	b.ne	4145f4 <_obstack_memory_used@@Base+0xef4>  // b.any
  414608:	b	4143a0 <_obstack_memory_used@@Base+0xca0>
  41460c:	str	w3, [x2, x1, lsl #2]
  414610:	add	x1, x1, #0x1
  414614:	b	4143bc <_obstack_memory_used@@Base+0xcbc>
  414618:	cmn	x26, #0x3
  41461c:	b.ne	414630 <_obstack_memory_used@@Base+0xf30>  // b.any
  414620:	ldr	x1, [x19, #64]
  414624:	ldr	x0, [x19, #88]
  414628:	cmp	x1, x0
  41462c:	b.lt	4144cc <_obstack_memory_used@@Base+0xdcc>  // b.tstop
  414630:	ldr	x0, [x19]
  414634:	ldr	x1, [x19, #40]
  414638:	add	x0, x0, x20
  41463c:	ldrb	w0, [x0, x1]
  414640:	ldr	x1, [x19, #120]
  414644:	cbz	x1, 414650 <_obstack_memory_used@@Base+0xf50>
  414648:	and	x0, x0, #0xff
  41464c:	ldrb	w0, [x1, x0]
  414650:	ldr	x1, [x19, #8]
  414654:	mov	x2, x21
  414658:	strb	w0, [x1, x21]
  41465c:	ldrb	w1, [x19, #140]
  414660:	cbz	w1, 41466c <_obstack_memory_used@@Base+0xf6c>
  414664:	ldr	x1, [x19, #24]
  414668:	str	x20, [x1, x21, lsl #3]
  41466c:	ldr	x1, [x19, #16]
  414670:	add	x20, x20, #0x1
  414674:	add	x21, x21, #0x1
  414678:	cmn	x22, #0x1
  41467c:	str	w0, [x1, x2, lsl #2]
  414680:	b.ne	414470 <_obstack_memory_used@@Base+0xd70>  // b.any
  414684:	ldr	x0, [sp, #104]
  414688:	str	x0, [x19, #32]
  41468c:	b	414470 <_obstack_memory_used@@Base+0xd70>
  414690:	stp	x29, x30, [sp, #-48]!
  414694:	mov	x29, sp
  414698:	stp	x19, x20, [sp, #16]
  41469c:	mov	x19, x0
  4146a0:	ldr	x0, [x0, #88]
  4146a4:	stp	x21, x22, [sp, #32]
  4146a8:	ldr	x20, [x19, #64]
  4146ac:	ldr	x22, [x19, #48]
  4146b0:	cmp	x20, x0
  4146b4:	csel	x20, x20, x0, le
  4146b8:	mov	x21, x22
  4146bc:	cmp	x21, x20
  4146c0:	b.lt	4146e4 <_obstack_memory_used@@Base+0xfe4>  // b.tstop
  4146c4:	subs	x0, x20, x22
  4146c8:	csel	x0, x0, xzr, ge  // ge = tcont
  4146cc:	add	x0, x0, x22
  4146d0:	ldp	x21, x22, [sp, #32]
  4146d4:	stp	x0, x0, [x19, #48]
  4146d8:	ldp	x19, x20, [sp, #16]
  4146dc:	ldp	x29, x30, [sp], #48
  4146e0:	ret
  4146e4:	ldr	x0, [x19]
  4146e8:	ldr	x1, [x19, #40]
  4146ec:	add	x0, x0, x21
  4146f0:	ldrb	w0, [x0, x1]
  4146f4:	ldr	x1, [x19, #120]
  4146f8:	cbz	x1, 414704 <_obstack_memory_used@@Base+0x1004>
  4146fc:	and	x0, x0, #0xff
  414700:	ldrb	w0, [x1, x0]
  414704:	bl	402530 <toupper@plt>
  414708:	ldr	x1, [x19, #8]
  41470c:	strb	w0, [x1, x21]
  414710:	add	x21, x21, #0x1
  414714:	b	4146bc <_obstack_memory_used@@Base+0xfbc>
  414718:	stp	x29, x30, [sp, #-32]!
  41471c:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  414720:	mov	x29, sp
  414724:	ldr	x2, [x0, #64]
  414728:	stp	x19, x20, [sp, #16]
  41472c:	cmp	x2, x3
  414730:	b.ls	414748 <_obstack_memory_used@@Base+0x1048>  // b.plast
  414734:	mov	w20, #0xc                   	// #12
  414738:	mov	w0, w20
  41473c:	ldp	x19, x20, [sp, #16]
  414740:	ldp	x29, x30, [sp], #32
  414744:	ret
  414748:	ldr	x3, [x0, #88]
  41474c:	lsl	x2, x2, #1
  414750:	mov	x19, x0
  414754:	cmp	x2, x3
  414758:	csel	x2, x2, x3, le
  41475c:	sxtw	x3, w1
  414760:	cmp	x2, w1, sxtw
  414764:	csel	x1, x2, x3, ge  // ge = tcont
  414768:	bl	413eac <_obstack_memory_used@@Base+0x7ac>
  41476c:	mov	w20, w0
  414770:	cbnz	w0, 414738 <_obstack_memory_used@@Base+0x1038>
  414774:	ldr	x0, [x19, #184]
  414778:	cbz	x0, 414794 <_obstack_memory_used@@Base+0x1094>
  41477c:	ldr	x1, [x19, #64]
  414780:	add	x1, x1, #0x1
  414784:	lsl	x1, x1, #3
  414788:	bl	402640 <realloc@plt>
  41478c:	cbz	x0, 414734 <_obstack_memory_used@@Base+0x1034>
  414790:	str	x0, [x19, #184]
  414794:	ldrb	w1, [x19, #136]
  414798:	ldr	w0, [x19, #144]
  41479c:	cmp	w0, #0x1
  4147a0:	cbz	w1, 4147c0 <_obstack_memory_used@@Base+0x10c0>
  4147a4:	mov	x0, x19
  4147a8:	b.le	4147b8 <_obstack_memory_used@@Base+0x10b8>
  4147ac:	ldp	x19, x20, [sp, #16]
  4147b0:	ldp	x29, x30, [sp], #32
  4147b4:	b	4141a8 <_obstack_memory_used@@Base+0xaa8>
  4147b8:	bl	414690 <_obstack_memory_used@@Base+0xf90>
  4147bc:	b	414738 <_obstack_memory_used@@Base+0x1038>
  4147c0:	b.le	4147d0 <_obstack_memory_used@@Base+0x10d0>
  4147c4:	mov	x0, x19
  4147c8:	bl	414038 <_obstack_memory_used@@Base+0x938>
  4147cc:	b	414738 <_obstack_memory_used@@Base+0x1038>
  4147d0:	ldr	x0, [x19, #120]
  4147d4:	cbz	x0, 414738 <_obstack_memory_used@@Base+0x1038>
  4147d8:	mov	x0, x19
  4147dc:	bl	4137d0 <_obstack_memory_used@@Base+0xd0>
  4147e0:	b	414738 <_obstack_memory_used@@Base+0x1038>
  4147e4:	stp	x29, x30, [sp, #-48]!
  4147e8:	mov	x29, sp
  4147ec:	stp	x19, x20, [sp, #16]
  4147f0:	mov	x19, x0
  4147f4:	mov	x20, x1
  4147f8:	str	x21, [sp, #32]
  4147fc:	ldr	x21, [x0, #192]
  414800:	ldr	x0, [x0, #64]
  414804:	cmp	x0, x1
  414808:	b.gt	414818 <_obstack_memory_used@@Base+0x1118>
  41480c:	ldr	x1, [x19, #88]
  414810:	cmp	x0, x1
  414814:	b.lt	414840 <_obstack_memory_used@@Base+0x1140>  // b.tstop
  414818:	ldr	x0, [x19, #48]
  41481c:	cmp	x0, x20
  414820:	b.le	414834 <_obstack_memory_used@@Base+0x1134>
  414824:	cmp	x21, x20
  414828:	b.lt	414860 <_obstack_memory_used@@Base+0x1160>  // b.tstop
  41482c:	mov	w0, #0x0                   	// #0
  414830:	b	414850 <_obstack_memory_used@@Base+0x1150>
  414834:	ldr	x1, [x19, #88]
  414838:	cmp	x0, x1
  41483c:	b.ge	414824 <_obstack_memory_used@@Base+0x1124>  // b.tcont
  414840:	add	w1, w20, #0x1
  414844:	mov	x0, x19
  414848:	bl	414718 <_obstack_memory_used@@Base+0x1018>
  41484c:	cbz	w0, 414824 <_obstack_memory_used@@Base+0x1124>
  414850:	ldp	x19, x20, [sp, #16]
  414854:	ldr	x21, [sp, #32]
  414858:	ldp	x29, x30, [sp], #48
  41485c:	ret
  414860:	ldr	x0, [x19, #184]
  414864:	sub	x2, x20, x21
  414868:	add	x21, x21, #0x1
  41486c:	mov	w1, #0x0                   	// #0
  414870:	lsl	x2, x2, #3
  414874:	add	x0, x0, x21, lsl #3
  414878:	bl	4025f0 <memset@plt>
  41487c:	str	x20, [x19, #192]
  414880:	b	41482c <_obstack_memory_used@@Base+0x112c>
  414884:	stp	x29, x30, [sp, #-32]!
  414888:	mov	x29, sp
  41488c:	str	x19, [sp, #16]
  414890:	mov	x19, x0
  414894:	ldr	x0, [x0]
  414898:	bl	4027a0 <free@plt>
  41489c:	ldr	x0, [x19, #8]
  4148a0:	bl	4027a0 <free@plt>
  4148a4:	ldr	x0, [x19, #16]
  4148a8:	bl	4027a0 <free@plt>
  4148ac:	ldr	x0, [x19, #24]
  4148b0:	bl	4027a0 <free@plt>
  4148b4:	mov	x0, x19
  4148b8:	ldr	x19, [sp, #16]
  4148bc:	ldp	x29, x30, [sp], #32
  4148c0:	b	4027a0 <free@plt>
  4148c4:	ldr	w1, [x0, #8]
  4148c8:	and	w1, w1, #0x7ffff
  4148cc:	and	w1, w1, #0xfffc00ff
  4148d0:	cmp	w1, #0x6
  4148d4:	b.ne	4148e0 <_obstack_memory_used@@Base+0x11e0>  // b.any
  4148d8:	ldr	x0, [x0]
  4148dc:	b	414884 <_obstack_memory_used@@Base+0x1184>
  4148e0:	cmp	w1, #0x3
  4148e4:	b.ne	4148f0 <_obstack_memory_used@@Base+0x11f0>  // b.any
  4148e8:	ldr	x0, [x0]
  4148ec:	b	4027a0 <free@plt>
  4148f0:	ret
  4148f4:	stp	x29, x30, [sp, #-16]!
  4148f8:	add	x0, x1, #0x28
  4148fc:	mov	x29, sp
  414900:	bl	4148c4 <_obstack_memory_used@@Base+0x11c4>
  414904:	mov	w0, #0x0                   	// #0
  414908:	ldp	x29, x30, [sp], #16
  41490c:	ret
  414910:	stp	x29, x30, [sp, #-96]!
  414914:	mov	x29, sp
  414918:	stp	x19, x20, [sp, #16]
  41491c:	mov	x19, x0
  414920:	ldp	x20, x0, [x0, #8]
  414924:	stp	x21, x22, [sp, #32]
  414928:	mov	x21, x2
  41492c:	stp	x23, x24, [sp, #48]
  414930:	mov	x23, x1
  414934:	and	w24, w2, #0xff
  414938:	stp	x25, x26, [sp, #64]
  41493c:	cmp	x0, x20
  414940:	str	x27, [sp, #80]
  414944:	b.cc	414a24 <_obstack_memory_used@@Base+0x1324>  // b.lo, b.ul, b.last
  414948:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41494c:	lsl	x25, x20, #1
  414950:	movk	x0, #0xaaa, lsl #48
  414954:	cmp	x0, x20, lsl #1
  414958:	b.cs	41497c <_obstack_memory_used@@Base+0x127c>  // b.hs, b.nlast
  41495c:	mov	x0, #0xffffffffffffffff    	// #-1
  414960:	ldp	x19, x20, [sp, #16]
  414964:	ldp	x21, x22, [sp, #32]
  414968:	ldp	x23, x24, [sp, #48]
  41496c:	ldp	x25, x26, [sp, #64]
  414970:	ldr	x27, [sp, #80]
  414974:	ldp	x29, x30, [sp], #96
  414978:	ret
  41497c:	ldr	x0, [x19]
  414980:	lsl	x1, x20, #5
  414984:	bl	402640 <realloc@plt>
  414988:	cbz	x0, 41495c <_obstack_memory_used@@Base+0x125c>
  41498c:	str	x0, [x19]
  414990:	lsl	x22, x20, #4
  414994:	ldr	x0, [x19, #24]
  414998:	mov	x1, x22
  41499c:	bl	402640 <realloc@plt>
  4149a0:	mov	x27, x0
  4149a4:	ldr	x0, [x19, #32]
  4149a8:	mov	x1, x22
  4149ac:	bl	402640 <realloc@plt>
  4149b0:	mov	x26, x0
  4149b4:	mov	x1, #0x30                  	// #48
  4149b8:	ldr	x0, [x19, #40]
  4149bc:	mul	x20, x20, x1
  4149c0:	mov	x1, x20
  4149c4:	bl	402640 <realloc@plt>
  4149c8:	mov	x22, x0
  4149cc:	ldr	x0, [x19, #48]
  4149d0:	mov	x1, x20
  4149d4:	bl	402640 <realloc@plt>
  4149d8:	mov	x20, x0
  4149dc:	cmp	x27, #0x0
  4149e0:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  4149e4:	b.eq	4149f4 <_obstack_memory_used@@Base+0x12f4>  // b.none
  4149e8:	cmp	x22, #0x0
  4149ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4149f0:	b.ne	414a18 <_obstack_memory_used@@Base+0x1318>  // b.any
  4149f4:	mov	x0, x27
  4149f8:	bl	4027a0 <free@plt>
  4149fc:	mov	x0, x26
  414a00:	bl	4027a0 <free@plt>
  414a04:	mov	x0, x22
  414a08:	bl	4027a0 <free@plt>
  414a0c:	mov	x0, x20
  414a10:	bl	4027a0 <free@plt>
  414a14:	b	41495c <_obstack_memory_used@@Base+0x125c>
  414a18:	str	x25, [x19, #8]
  414a1c:	stp	x27, x26, [x19, #24]
  414a20:	stp	x22, x0, [x19, #40]
  414a24:	cmp	w24, #0x5
  414a28:	ldr	x1, [x19, #16]
  414a2c:	ldr	x2, [x19]
  414a30:	lsl	x3, x1, #4
  414a34:	add	x0, x2, x1, lsl #4
  414a38:	str	x23, [x2, x3]
  414a3c:	str	x21, [x0, #8]
  414a40:	and	w21, w21, #0xfffc00ff
  414a44:	str	w21, [x0, #8]
  414a48:	b.ne	414aac <_obstack_memory_used@@Base+0x13ac>  // b.any
  414a4c:	ldr	w2, [x19, #180]
  414a50:	cmp	w2, #0x1
  414a54:	cset	w3, gt
  414a58:	ldrb	w2, [x0, #10]
  414a5c:	bfi	w2, w3, #4, #1
  414a60:	strb	w2, [x0, #10]
  414a64:	mov	x2, #0xffffffffffffffff    	// #-1
  414a68:	ldr	x0, [x19, #24]
  414a6c:	str	x2, [x0, x1, lsl #3]
  414a70:	mov	x2, #0x18                  	// #24
  414a74:	ldr	x0, [x19, #40]
  414a78:	ldr	x1, [x19, #16]
  414a7c:	madd	x1, x1, x2, x0
  414a80:	stp	xzr, xzr, [x1]
  414a84:	str	xzr, [x1, #16]
  414a88:	ldr	x0, [x19, #16]
  414a8c:	ldr	x1, [x19, #48]
  414a90:	madd	x0, x0, x2, x1
  414a94:	stp	xzr, xzr, [x0]
  414a98:	str	xzr, [x0, #16]
  414a9c:	ldr	x0, [x19, #16]
  414aa0:	add	x1, x0, #0x1
  414aa4:	str	x1, [x19, #16]
  414aa8:	b	414960 <_obstack_memory_used@@Base+0x1260>
  414aac:	cmp	w24, #0x6
  414ab0:	cset	w3, eq  // eq = none
  414ab4:	b	414a58 <_obstack_memory_used@@Base+0x1358>
  414ab8:	stp	x29, x30, [sp, #-48]!
  414abc:	mov	x29, sp
  414ac0:	stp	x19, x20, [sp, #16]
  414ac4:	mov	x20, x1
  414ac8:	mov	w19, w2
  414acc:	stp	x21, x22, [sp, #32]
  414ad0:	lsl	x22, x1, #4
  414ad4:	mov	x21, x0
  414ad8:	ldr	x1, [x0]
  414adc:	add	x1, x1, x20, lsl #4
  414ae0:	ldp	x1, x2, [x1]
  414ae4:	bl	414910 <_obstack_memory_used@@Base+0x1210>
  414ae8:	cmn	x0, #0x1
  414aec:	b.eq	414b34 <_obstack_memory_used@@Base+0x1434>  // b.none
  414af0:	ldr	x2, [x21]
  414af4:	and	w3, w19, #0x3ff
  414af8:	add	x4, x2, x0, lsl #4
  414afc:	add	x2, x2, x22
  414b00:	ldr	w1, [x4, #8]
  414b04:	bfi	w1, w3, #8, #10
  414b08:	str	w1, [x4, #8]
  414b0c:	and	w1, w1, #0xfff800ff
  414b10:	ldr	w2, [x2, #8]
  414b14:	ubfx	x2, x2, #8, #10
  414b18:	orr	w2, w2, w3
  414b1c:	lsl	w2, w2, #8
  414b20:	orr	w2, w2, #0x40000
  414b24:	orr	w2, w2, w1
  414b28:	ldr	x1, [x21, #32]
  414b2c:	str	w2, [x4, #8]
  414b30:	str	x20, [x1, x0, lsl #3]
  414b34:	ldp	x19, x20, [sp, #16]
  414b38:	ldp	x21, x22, [sp, #32]
  414b3c:	ldp	x29, x30, [sp], #48
  414b40:	ret
  414b44:	stp	x29, x30, [sp, #-32]!
  414b48:	mov	x29, sp
  414b4c:	str	x19, [sp, #16]
  414b50:	mov	x19, x0
  414b54:	ldr	x0, [x0, #48]
  414b58:	bl	4027a0 <free@plt>
  414b5c:	ldr	x0, [x19, #72]
  414b60:	bl	4027a0 <free@plt>
  414b64:	ldr	x0, [x19, #80]
  414b68:	add	x1, x19, #0x8
  414b6c:	cmp	x0, x1
  414b70:	b.eq	414b84 <_obstack_memory_used@@Base+0x1484>  // b.none
  414b74:	ldr	x0, [x0, #16]
  414b78:	bl	4027a0 <free@plt>
  414b7c:	ldr	x0, [x19, #80]
  414b80:	bl	4027a0 <free@plt>
  414b84:	ldr	x0, [x19, #24]
  414b88:	bl	4027a0 <free@plt>
  414b8c:	ldr	x0, [x19, #96]
  414b90:	bl	4027a0 <free@plt>
  414b94:	ldr	x0, [x19, #88]
  414b98:	bl	4027a0 <free@plt>
  414b9c:	mov	x0, x19
  414ba0:	ldr	x19, [sp, #16]
  414ba4:	ldp	x29, x30, [sp], #32
  414ba8:	b	4027a0 <free@plt>
  414bac:	stp	x29, x30, [sp, #-32]!
  414bb0:	mov	x29, sp
  414bb4:	str	x19, [sp, #16]
  414bb8:	mov	x19, x0
  414bbc:	ldr	x0, [x0, #16]
  414bc0:	bl	4027a0 <free@plt>
  414bc4:	ldr	x0, [x19, #24]
  414bc8:	bl	4027a0 <free@plt>
  414bcc:	ldrb	w0, [x19, #139]
  414bd0:	cbz	w0, 414be4 <_obstack_memory_used@@Base+0x14e4>
  414bd4:	ldr	x0, [x19, #8]
  414bd8:	ldr	x19, [sp, #16]
  414bdc:	ldp	x29, x30, [sp], #32
  414be0:	b	4027a0 <free@plt>
  414be4:	ldr	x19, [sp, #16]
  414be8:	ldp	x29, x30, [sp], #32
  414bec:	ret
  414bf0:	stp	x29, x30, [sp, #-64]!
  414bf4:	mov	x29, sp
  414bf8:	stp	x19, x20, [sp, #16]
  414bfc:	mov	x19, x0
  414c00:	ldr	x0, [x0]
  414c04:	stp	x21, x22, [sp, #32]
  414c08:	str	x23, [sp, #48]
  414c0c:	cbnz	x0, 414cb0 <_obstack_memory_used@@Base+0x15b0>
  414c10:	ldr	x0, [x19, #24]
  414c14:	mov	x20, #0x0                   	// #0
  414c18:	mov	x21, #0x18                  	// #24
  414c1c:	bl	4027a0 <free@plt>
  414c20:	ldr	x0, [x19, #16]
  414c24:	cmp	x0, x20
  414c28:	b.hi	414cb8 <_obstack_memory_used@@Base+0x15b8>  // b.pmore
  414c2c:	ldr	x0, [x19, #40]
  414c30:	bl	4027a0 <free@plt>
  414c34:	ldr	x0, [x19, #48]
  414c38:	bl	4027a0 <free@plt>
  414c3c:	ldr	x0, [x19, #56]
  414c40:	bl	4027a0 <free@plt>
  414c44:	ldr	x0, [x19]
  414c48:	bl	4027a0 <free@plt>
  414c4c:	ldr	x0, [x19, #64]
  414c50:	cbnz	x0, 414d40 <_obstack_memory_used@@Base+0x1640>
  414c54:	ldr	x0, [x19, #64]
  414c58:	bl	4027a0 <free@plt>
  414c5c:	ldr	x0, [x19, #120]
  414c60:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  414c64:	add	x1, x1, #0x140
  414c68:	cmp	x0, x1
  414c6c:	b.ne	414d4c <_obstack_memory_used@@Base+0x164c>  // b.any
  414c70:	ldr	x0, [x19, #224]
  414c74:	bl	4027a0 <free@plt>
  414c78:	mov	x0, x19
  414c7c:	ldp	x19, x20, [sp, #16]
  414c80:	ldp	x21, x22, [sp, #32]
  414c84:	ldr	x23, [sp, #48]
  414c88:	ldp	x29, x30, [sp], #64
  414c8c:	b	4027a0 <free@plt>
  414c90:	ldr	x0, [x19]
  414c94:	add	x0, x0, x20, lsl #4
  414c98:	add	x20, x20, #0x1
  414c9c:	bl	4148c4 <_obstack_memory_used@@Base+0x11c4>
  414ca0:	ldr	x0, [x19, #16]
  414ca4:	cmp	x0, x20
  414ca8:	b.hi	414c90 <_obstack_memory_used@@Base+0x1590>  // b.pmore
  414cac:	b	414c10 <_obstack_memory_used@@Base+0x1510>
  414cb0:	mov	x20, #0x0                   	// #0
  414cb4:	b	414ca0 <_obstack_memory_used@@Base+0x15a0>
  414cb8:	ldr	x0, [x19, #48]
  414cbc:	cbz	x0, 414ccc <_obstack_memory_used@@Base+0x15cc>
  414cc0:	madd	x0, x20, x21, x0
  414cc4:	ldr	x0, [x0, #16]
  414cc8:	bl	4027a0 <free@plt>
  414ccc:	ldr	x0, [x19, #56]
  414cd0:	cbz	x0, 414ce0 <_obstack_memory_used@@Base+0x15e0>
  414cd4:	madd	x0, x20, x21, x0
  414cd8:	ldr	x0, [x0, #16]
  414cdc:	bl	4027a0 <free@plt>
  414ce0:	ldr	x0, [x19, #40]
  414ce4:	cbz	x0, 414cf4 <_obstack_memory_used@@Base+0x15f4>
  414ce8:	madd	x0, x20, x21, x0
  414cec:	ldr	x0, [x0, #16]
  414cf0:	bl	4027a0 <free@plt>
  414cf4:	add	x20, x20, #0x1
  414cf8:	b	414c20 <_obstack_memory_used@@Base+0x1520>
  414cfc:	madd	x21, x20, x23, x21
  414d00:	mov	x22, #0x0                   	// #0
  414d04:	ldr	x1, [x21]
  414d08:	ldr	x0, [x21, #16]
  414d0c:	cmp	x1, x22
  414d10:	b.gt	414d30 <_obstack_memory_used@@Base+0x1630>
  414d14:	add	x20, x20, #0x1
  414d18:	bl	4027a0 <free@plt>
  414d1c:	ldr	x0, [x19, #136]
  414d20:	ldr	x21, [x19, #64]
  414d24:	cmp	x20, x0
  414d28:	b.ls	414cfc <_obstack_memory_used@@Base+0x15fc>  // b.plast
  414d2c:	b	414c54 <_obstack_memory_used@@Base+0x1554>
  414d30:	ldr	x0, [x0, x22, lsl #3]
  414d34:	add	x22, x22, #0x1
  414d38:	bl	414b44 <_obstack_memory_used@@Base+0x1444>
  414d3c:	b	414d04 <_obstack_memory_used@@Base+0x1604>
  414d40:	mov	x20, #0x0                   	// #0
  414d44:	mov	x23, #0x18                  	// #24
  414d48:	b	414d1c <_obstack_memory_used@@Base+0x161c>
  414d4c:	bl	4027a0 <free@plt>
  414d50:	b	414c70 <_obstack_memory_used@@Base+0x1570>
  414d54:	stp	x29, x30, [sp, #-64]!
  414d58:	mov	x29, sp
  414d5c:	stp	x19, x20, [sp, #16]
  414d60:	mov	x19, x0
  414d64:	stp	x21, x22, [sp, #32]
  414d68:	mov	x21, #0x0                   	// #0
  414d6c:	str	x23, [sp, #48]
  414d70:	ldr	x0, [x19, #232]
  414d74:	cmp	x0, x21
  414d78:	b.gt	414d98 <_obstack_memory_used@@Base+0x1698>
  414d7c:	ldp	x21, x22, [sp, #32]
  414d80:	ldr	x23, [sp, #48]
  414d84:	str	xzr, [x19, #200]
  414d88:	str	xzr, [x19, #232]
  414d8c:	ldp	x19, x20, [sp, #16]
  414d90:	ldp	x29, x30, [sp], #64
  414d94:	ret
  414d98:	ldr	x0, [x19, #248]
  414d9c:	mov	x22, #0x0                   	// #0
  414da0:	ldr	x20, [x0, x21, lsl #3]
  414da4:	ldp	x1, x0, [x20, #32]
  414da8:	cmp	x1, x22
  414dac:	b.gt	414ddc <_obstack_memory_used@@Base+0x16dc>
  414db0:	bl	4027a0 <free@plt>
  414db4:	ldr	x0, [x20, #16]
  414db8:	cbz	x0, 414dcc <_obstack_memory_used@@Base+0x16cc>
  414dbc:	ldr	x0, [x0, #16]
  414dc0:	bl	4027a0 <free@plt>
  414dc4:	ldr	x0, [x20, #16]
  414dc8:	bl	4027a0 <free@plt>
  414dcc:	mov	x0, x20
  414dd0:	add	x21, x21, #0x1
  414dd4:	bl	4027a0 <free@plt>
  414dd8:	b	414d70 <_obstack_memory_used@@Base+0x1670>
  414ddc:	ldr	x23, [x0, x22, lsl #3]
  414de0:	add	x22, x22, #0x1
  414de4:	ldr	x0, [x23, #32]
  414de8:	bl	4027a0 <free@plt>
  414dec:	mov	x0, x23
  414df0:	bl	4027a0 <free@plt>
  414df4:	b	414da4 <_obstack_memory_used@@Base+0x16a4>
  414df8:	mov	x2, x1
  414dfc:	ldr	x3, [x1, #56]
  414e00:	ldrb	w1, [x1, #48]
  414e04:	sub	w1, w1, #0x2
  414e08:	cmp	w1, #0xe
  414e0c:	b.hi	414f20 <_obstack_memory_used@@Base+0x1820>  // b.pmore
  414e10:	adrp	x4, 421000 <_obstack_memory_used@@Base+0xd900>
  414e14:	add	x4, x4, #0x80
  414e18:	ldrb	w1, [x4, w1, uxtw]
  414e1c:	adr	x4, 414e28 <_obstack_memory_used@@Base+0x1728>
  414e20:	add	x1, x4, w1, sxtb #2
  414e24:	br	x1
  414e28:	stp	x29, x30, [sp, #-48]!
  414e2c:	mov	x29, sp
  414e30:	ldrb	w1, [x0, #176]
  414e34:	stp	x19, x20, [sp, #16]
  414e38:	orr	w1, w1, #0x1
  414e3c:	stp	x21, x22, [sp, #32]
  414e40:	strb	w1, [x0, #176]
  414e44:	ldr	x1, [x2, #8]
  414e48:	cbz	x1, 414e94 <_obstack_memory_used@@Base+0x1794>
  414e4c:	ldr	x1, [x1, #24]
  414e50:	ldr	x19, [x1, #56]
  414e54:	ldr	x1, [x2, #16]
  414e58:	cbz	x1, 414e9c <_obstack_memory_used@@Base+0x179c>
  414e5c:	ldr	x1, [x1, #24]
  414e60:	mov	x22, #0x2                   	// #2
  414e64:	ldr	x20, [x1, #56]
  414e68:	mov	x1, #0x18                  	// #24
  414e6c:	ldr	x0, [x0, #40]
  414e70:	mul	x3, x3, x1
  414e74:	add	x21, x0, x3
  414e78:	str	x22, [x0, x3]
  414e7c:	mov	x0, #0x10                  	// #16
  414e80:	bl	402520 <malloc@plt>
  414e84:	str	x0, [x21, #16]
  414e88:	cbnz	x0, 414ea4 <_obstack_memory_used@@Base+0x17a4>
  414e8c:	mov	w0, #0xc                   	// #12
  414e90:	b	414ebc <_obstack_memory_used@@Base+0x17bc>
  414e94:	ldr	x1, [x2, #32]
  414e98:	b	414e50 <_obstack_memory_used@@Base+0x1750>
  414e9c:	ldr	x1, [x2, #32]
  414ea0:	b	414e60 <_obstack_memory_used@@Base+0x1760>
  414ea4:	cmp	x19, x20
  414ea8:	b.ne	414ecc <_obstack_memory_used@@Base+0x17cc>  // b.any
  414eac:	mov	x1, #0x1                   	// #1
  414eb0:	str	x1, [x21, #8]
  414eb4:	str	x19, [x0]
  414eb8:	mov	w0, #0x0                   	// #0
  414ebc:	ldp	x19, x20, [sp, #16]
  414ec0:	ldp	x21, x22, [sp, #32]
  414ec4:	ldp	x29, x30, [sp], #48
  414ec8:	ret
  414ecc:	str	x22, [x21, #8]
  414ed0:	b.ge	414edc <_obstack_memory_used@@Base+0x17dc>  // b.tcont
  414ed4:	stp	x19, x20, [x0]
  414ed8:	b	414eb8 <_obstack_memory_used@@Base+0x17b8>
  414edc:	stp	x20, x19, [x0]
  414ee0:	b	414eb8 <_obstack_memory_used@@Base+0x17b8>
  414ee4:	ldr	x1, [x2, #32]
  414ee8:	ldr	x0, [x0, #40]
  414eec:	ldr	x1, [x1, #56]
  414ef0:	mov	x2, #0x18                  	// #24
  414ef4:	madd	x0, x3, x2, x0
  414ef8:	b	413fb4 <_obstack_memory_used@@Base+0x8b4>
  414efc:	ldr	x1, [x2, #32]
  414f00:	ldr	x4, [x0, #24]
  414f04:	ldr	x1, [x1, #56]
  414f08:	str	x1, [x4, x3, lsl #3]
  414f0c:	ldrb	w2, [x2, #48]
  414f10:	cmp	w2, #0x4
  414f14:	b.ne	414f30 <_obstack_memory_used@@Base+0x1830>  // b.any
  414f18:	ldr	x0, [x0, #40]
  414f1c:	b	414ef0 <_obstack_memory_used@@Base+0x17f0>
  414f20:	ldr	x1, [x2, #32]
  414f24:	ldr	x0, [x0, #24]
  414f28:	ldr	x1, [x1, #56]
  414f2c:	str	x1, [x0, x3, lsl #3]
  414f30:	mov	w0, #0x0                   	// #0
  414f34:	ret
  414f38:	stp	x29, x30, [sp, #-96]!
  414f3c:	mov	x29, sp
  414f40:	stp	x19, x20, [sp, #16]
  414f44:	mov	x19, x0
  414f48:	mov	x20, #0x0                   	// #0
  414f4c:	stp	x21, x22, [sp, #32]
  414f50:	mov	x21, x1
  414f54:	stp	x23, x24, [sp, #48]
  414f58:	mov	x23, x2
  414f5c:	stp	x25, x26, [sp, #64]
  414f60:	ldr	x25, [x0, #152]
  414f64:	str	x27, [sp, #80]
  414f68:	ldr	x0, [x21, #8]
  414f6c:	cmp	x0, x20
  414f70:	b.gt	414f7c <_obstack_memory_used@@Base+0x187c>
  414f74:	mov	w0, #0x0                   	// #0
  414f78:	b	414fd8 <_obstack_memory_used@@Base+0x18d8>
  414f7c:	ldr	x0, [x21, #16]
  414f80:	ldr	x24, [x0, x20, lsl #3]
  414f84:	ldr	x0, [x25]
  414f88:	lsl	x1, x24, #4
  414f8c:	add	x2, x0, x24, lsl #4
  414f90:	ldrb	w2, [x2, #8]
  414f94:	cmp	w2, #0x8
  414f98:	b.ne	415024 <_obstack_memory_used@@Base+0x1924>  // b.any
  414f9c:	ldr	x1, [x0, x1]
  414fa0:	cmp	x1, #0x3f
  414fa4:	b.gt	415024 <_obstack_memory_used@@Base+0x1924>
  414fa8:	ldr	x0, [x25, #160]
  414fac:	lsr	x0, x0, x1
  414fb0:	tbz	w0, #0, 415024 <_obstack_memory_used@@Base+0x1924>
  414fb4:	ldp	x2, x1, [x19, #232]
  414fb8:	ldr	x0, [x19, #248]
  414fbc:	cmp	x1, x2
  414fc0:	b.ne	414ff8 <_obstack_memory_used@@Base+0x18f8>  // b.any
  414fc4:	lsl	x22, x1, #1
  414fc8:	lsl	x1, x1, #4
  414fcc:	bl	402640 <realloc@plt>
  414fd0:	cbnz	x0, 414ff4 <_obstack_memory_used@@Base+0x18f4>
  414fd4:	mov	w0, #0xc                   	// #12
  414fd8:	ldp	x19, x20, [sp, #16]
  414fdc:	ldp	x21, x22, [sp, #32]
  414fe0:	ldp	x23, x24, [sp, #48]
  414fe4:	ldp	x25, x26, [sp, #64]
  414fe8:	ldr	x27, [sp, #80]
  414fec:	ldp	x29, x30, [sp], #96
  414ff0:	ret
  414ff4:	stp	x22, x0, [x19, #240]
  414ff8:	mov	x1, #0x30                  	// #48
  414ffc:	ldr	x22, [x19, #232]
  415000:	mov	x0, #0x1                   	// #1
  415004:	ldr	x27, [x19, #248]
  415008:	bl	402610 <calloc@plt>
  41500c:	lsl	x26, x22, #3
  415010:	str	x0, [x27, x26]
  415014:	cbz	x0, 414fd4 <_obstack_memory_used@@Base+0x18d4>
  415018:	add	x22, x22, #0x1
  41501c:	stp	x23, x24, [x0]
  415020:	str	x22, [x19, #232]
  415024:	add	x20, x20, #0x1
  415028:	b	414f68 <_obstack_memory_used@@Base+0x1868>
  41502c:	stp	x29, x30, [sp, #-48]!
  415030:	lsl	x2, x2, #4
  415034:	mov	x29, sp
  415038:	stp	x19, x20, [sp, #16]
  41503c:	mov	x20, x0
  415040:	mov	x0, x3
  415044:	mov	x3, #0x30                  	// #48
  415048:	ldr	x19, [x20]
  41504c:	sub	x19, x19, #0x1
  415050:	str	x19, [x20]
  415054:	str	x21, [sp, #32]
  415058:	mov	x21, x4
  41505c:	ldr	x4, [x20, #16]
  415060:	mul	x19, x19, x3
  415064:	add	x3, x4, x19
  415068:	ldr	x4, [x4, x19]
  41506c:	str	x4, [x1]
  415070:	ldr	x1, [x3, #16]
  415074:	bl	402360 <memcpy@plt>
  415078:	ldr	x0, [x21, #16]
  41507c:	bl	4027a0 <free@plt>
  415080:	ldr	x0, [x20, #16]
  415084:	add	x0, x0, x19
  415088:	ldr	x0, [x0, #16]
  41508c:	bl	4027a0 <free@plt>
  415090:	ldr	x0, [x20, #16]
  415094:	add	x19, x0, x19
  415098:	ldp	x0, x1, [x19, #24]
  41509c:	stp	x0, x1, [x21]
  4150a0:	ldr	x0, [x19, #40]
  4150a4:	str	x0, [x21, #16]
  4150a8:	ldr	x0, [x19, #8]
  4150ac:	ldp	x19, x20, [sp, #16]
  4150b0:	ldr	x21, [sp, #32]
  4150b4:	ldp	x29, x30, [sp], #48
  4150b8:	ret
  4150bc:	stp	x29, x30, [sp, #-64]!
  4150c0:	mov	x29, sp
  4150c4:	stp	x19, x20, [sp, #16]
  4150c8:	mov	x20, x0
  4150cc:	mov	x19, x1
  4150d0:	stp	x21, x22, [sp, #32]
  4150d4:	mov	x22, x2
  4150d8:	mov	x21, x4
  4150dc:	stp	x23, x24, [sp, #48]
  4150e0:	mov	x24, x3
  4150e4:	tbz	w5, #22, 415118 <_obstack_memory_used@@Base+0x1a18>
  4150e8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4150ec:	mov	x0, x4
  4150f0:	add	x1, x1, #0x510
  4150f4:	bl	402780 <strcmp@plt>
  4150f8:	cbz	w0, 415110 <_obstack_memory_used@@Base+0x1a10>
  4150fc:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415100:	mov	x0, x21
  415104:	add	x1, x1, #0x516
  415108:	bl	402780 <strcmp@plt>
  41510c:	cbnz	w0, 415118 <_obstack_memory_used@@Base+0x1a18>
  415110:	adrp	x21, 420000 <_obstack_memory_used@@Base+0xc900>
  415114:	add	x21, x21, #0x50a
  415118:	ldr	x23, [x24]
  41511c:	ldr	x0, [x22, #72]
  415120:	cmp	x23, x0
  415124:	b.ne	415148 <_obstack_memory_used@@Base+0x1a48>  // b.any
  415128:	ldr	x0, [x22, #24]
  41512c:	lsl	x23, x23, #1
  415130:	add	x23, x23, #0x1
  415134:	lsl	x1, x23, #3
  415138:	bl	402640 <realloc@plt>
  41513c:	cbz	x0, 4156ec <_obstack_memory_used@@Base+0x1fec>
  415140:	str	x0, [x22, #24]
  415144:	str	x23, [x24]
  415148:	ldr	x0, [x22, #72]
  41514c:	ldr	x23, [x22, #24]
  415150:	add	x1, x0, #0x1
  415154:	str	x1, [x22, #72]
  415158:	lsl	x22, x0, #3
  41515c:	mov	x0, x21
  415160:	bl	402420 <wctype@plt>
  415164:	str	x0, [x23, x22]
  415168:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  41516c:	mov	x0, x21
  415170:	add	x1, x1, #0x646
  415174:	bl	402780 <strcmp@plt>
  415178:	cbnz	w0, 4151f0 <_obstack_memory_used@@Base+0x1af0>
  41517c:	bl	402790 <__ctype_b_loc@plt>
  415180:	mov	x5, x0
  415184:	mov	x4, #0x0                   	// #0
  415188:	cbz	x20, 4151c8 <_obstack_memory_used@@Base+0x1ac8>
  41518c:	ldr	x0, [x5]
  415190:	ldrh	w0, [x0, x4, lsl #1]
  415194:	tbz	w0, #3, 4151a4 <_obstack_memory_used@@Base+0x1aa4>
  415198:	ldrb	w1, [x20, x4]
  41519c:	mov	x0, x19
  4151a0:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4151a4:	add	x4, x4, #0x1
  4151a8:	cmp	x4, #0x100
  4151ac:	b.ne	41518c <_obstack_memory_used@@Base+0x1a8c>  // b.any
  4151b0:	mov	w0, #0x0                   	// #0
  4151b4:	ldp	x19, x20, [sp, #16]
  4151b8:	ldp	x21, x22, [sp, #32]
  4151bc:	ldp	x23, x24, [sp, #48]
  4151c0:	ldp	x29, x30, [sp], #64
  4151c4:	ret
  4151c8:	ldr	x0, [x5]
  4151cc:	ldrh	w0, [x0, x4, lsl #1]
  4151d0:	tbz	w0, #3, 4151e0 <_obstack_memory_used@@Base+0x1ae0>
  4151d4:	mov	x1, x4
  4151d8:	mov	x0, x19
  4151dc:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4151e0:	add	x4, x4, #0x1
  4151e4:	cmp	x4, #0x100
  4151e8:	b.ne	4151c8 <_obstack_memory_used@@Base+0x1ac8>  // b.any
  4151ec:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4151f0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4151f4:	mov	x0, x21
  4151f8:	add	x1, x1, #0x658
  4151fc:	bl	402780 <strcmp@plt>
  415200:	cbnz	w0, 415264 <_obstack_memory_used@@Base+0x1b64>
  415204:	bl	402790 <__ctype_b_loc@plt>
  415208:	mov	x5, x0
  41520c:	mov	x4, #0x0                   	// #0
  415210:	cbz	x20, 41523c <_obstack_memory_used@@Base+0x1b3c>
  415214:	ldr	x0, [x5]
  415218:	ldrh	w0, [x0, x4, lsl #1]
  41521c:	tbz	w0, #1, 41522c <_obstack_memory_used@@Base+0x1b2c>
  415220:	ldrb	w1, [x20, x4]
  415224:	mov	x0, x19
  415228:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41522c:	add	x4, x4, #0x1
  415230:	cmp	x4, #0x100
  415234:	b.ne	415214 <_obstack_memory_used@@Base+0x1b14>  // b.any
  415238:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  41523c:	ldr	x0, [x5]
  415240:	ldrh	w0, [x0, x4, lsl #1]
  415244:	tbz	w0, #1, 415254 <_obstack_memory_used@@Base+0x1b54>
  415248:	mov	x1, x4
  41524c:	mov	x0, x19
  415250:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415254:	add	x4, x4, #0x1
  415258:	cmp	x4, #0x100
  41525c:	b.ne	41523c <_obstack_memory_used@@Base+0x1b3c>  // b.any
  415260:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415264:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415268:	mov	x0, x21
  41526c:	add	x1, x1, #0x516
  415270:	bl	402780 <strcmp@plt>
  415274:	cbnz	w0, 4152d8 <_obstack_memory_used@@Base+0x1bd8>
  415278:	bl	402790 <__ctype_b_loc@plt>
  41527c:	mov	x5, x0
  415280:	mov	x4, #0x0                   	// #0
  415284:	cbz	x20, 4152b0 <_obstack_memory_used@@Base+0x1bb0>
  415288:	ldr	x0, [x5]
  41528c:	ldrh	w0, [x0, x4, lsl #1]
  415290:	tbz	w0, #9, 4152a0 <_obstack_memory_used@@Base+0x1ba0>
  415294:	ldrb	w1, [x20, x4]
  415298:	mov	x0, x19
  41529c:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4152a0:	add	x4, x4, #0x1
  4152a4:	cmp	x4, #0x100
  4152a8:	b.ne	415288 <_obstack_memory_used@@Base+0x1b88>  // b.any
  4152ac:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4152b0:	ldr	x0, [x5]
  4152b4:	ldrh	w0, [x0, x4, lsl #1]
  4152b8:	tbz	w0, #9, 4152c8 <_obstack_memory_used@@Base+0x1bc8>
  4152bc:	mov	x1, x4
  4152c0:	mov	x0, x19
  4152c4:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4152c8:	add	x4, x4, #0x1
  4152cc:	cmp	x4, #0x100
  4152d0:	b.ne	4152b0 <_obstack_memory_used@@Base+0x1bb0>  // b.any
  4152d4:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4152d8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4152dc:	mov	x0, x21
  4152e0:	add	x1, x1, #0x63a
  4152e4:	bl	402780 <strcmp@plt>
  4152e8:	cbnz	w0, 41534c <_obstack_memory_used@@Base+0x1c4c>
  4152ec:	bl	402790 <__ctype_b_loc@plt>
  4152f0:	mov	x5, x0
  4152f4:	mov	x4, #0x0                   	// #0
  4152f8:	cbz	x20, 415324 <_obstack_memory_used@@Base+0x1c24>
  4152fc:	ldr	x0, [x5]
  415300:	ldrh	w0, [x0, x4, lsl #1]
  415304:	tbz	w0, #13, 415314 <_obstack_memory_used@@Base+0x1c14>
  415308:	ldrb	w1, [x20, x4]
  41530c:	mov	x0, x19
  415310:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415314:	add	x4, x4, #0x1
  415318:	cmp	x4, #0x100
  41531c:	b.ne	4152fc <_obstack_memory_used@@Base+0x1bfc>  // b.any
  415320:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415324:	ldr	x0, [x5]
  415328:	ldrh	w0, [x0, x4, lsl #1]
  41532c:	tbz	w0, #13, 41533c <_obstack_memory_used@@Base+0x1c3c>
  415330:	mov	x1, x4
  415334:	mov	x0, x19
  415338:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41533c:	add	x4, x4, #0x1
  415340:	cmp	x4, #0x100
  415344:	b.ne	415324 <_obstack_memory_used@@Base+0x1c24>  // b.any
  415348:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  41534c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415350:	mov	x0, x21
  415354:	add	x1, x1, #0x50a
  415358:	bl	402780 <strcmp@plt>
  41535c:	cbnz	w0, 4153c0 <_obstack_memory_used@@Base+0x1cc0>
  415360:	bl	402790 <__ctype_b_loc@plt>
  415364:	mov	x5, x0
  415368:	mov	x4, #0x0                   	// #0
  41536c:	cbz	x20, 415398 <_obstack_memory_used@@Base+0x1c98>
  415370:	ldr	x0, [x5]
  415374:	ldrh	w0, [x0, x4, lsl #1]
  415378:	tbz	w0, #10, 415388 <_obstack_memory_used@@Base+0x1c88>
  41537c:	ldrb	w1, [x20, x4]
  415380:	mov	x0, x19
  415384:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415388:	add	x4, x4, #0x1
  41538c:	cmp	x4, #0x100
  415390:	b.ne	415370 <_obstack_memory_used@@Base+0x1c70>  // b.any
  415394:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415398:	ldr	x0, [x5]
  41539c:	ldrh	w0, [x0, x4, lsl #1]
  4153a0:	tbz	w0, #10, 4153b0 <_obstack_memory_used@@Base+0x1cb0>
  4153a4:	mov	x1, x4
  4153a8:	mov	x0, x19
  4153ac:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4153b0:	add	x4, x4, #0x1
  4153b4:	cmp	x4, #0x100
  4153b8:	b.ne	415398 <_obstack_memory_used@@Base+0x1c98>  // b.any
  4153bc:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4153c0:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4153c4:	mov	x0, x21
  4153c8:	add	x1, x1, #0x634
  4153cc:	bl	402780 <strcmp@plt>
  4153d0:	cbnz	w0, 415434 <_obstack_memory_used@@Base+0x1d34>
  4153d4:	bl	402790 <__ctype_b_loc@plt>
  4153d8:	mov	x5, x0
  4153dc:	mov	x4, #0x0                   	// #0
  4153e0:	cbz	x20, 41540c <_obstack_memory_used@@Base+0x1d0c>
  4153e4:	ldr	x0, [x5]
  4153e8:	ldrh	w0, [x0, x4, lsl #1]
  4153ec:	tbz	w0, #11, 4153fc <_obstack_memory_used@@Base+0x1cfc>
  4153f0:	ldrb	w1, [x20, x4]
  4153f4:	mov	x0, x19
  4153f8:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4153fc:	add	x4, x4, #0x1
  415400:	cmp	x4, #0x100
  415404:	b.ne	4153e4 <_obstack_memory_used@@Base+0x1ce4>  // b.any
  415408:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  41540c:	ldr	x0, [x5]
  415410:	ldrh	w0, [x0, x4, lsl #1]
  415414:	tbz	w0, #11, 415424 <_obstack_memory_used@@Base+0x1d24>
  415418:	mov	x1, x4
  41541c:	mov	x0, x19
  415420:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415424:	add	x4, x4, #0x1
  415428:	cmp	x4, #0x100
  41542c:	b.ne	41540c <_obstack_memory_used@@Base+0x1d0c>  // b.any
  415430:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415434:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415438:	mov	x0, x21
  41543c:	add	x1, x1, #0x64c
  415440:	bl	402780 <strcmp@plt>
  415444:	cbnz	w0, 4154a8 <_obstack_memory_used@@Base+0x1da8>
  415448:	bl	402790 <__ctype_b_loc@plt>
  41544c:	mov	x5, x0
  415450:	mov	x4, #0x0                   	// #0
  415454:	cbz	x20, 415480 <_obstack_memory_used@@Base+0x1d80>
  415458:	ldr	x0, [x5]
  41545c:	ldrh	w0, [x0, x4, lsl #1]
  415460:	tbz	w0, #14, 415470 <_obstack_memory_used@@Base+0x1d70>
  415464:	ldrb	w1, [x20, x4]
  415468:	mov	x0, x19
  41546c:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415470:	add	x4, x4, #0x1
  415474:	cmp	x4, #0x100
  415478:	b.ne	415458 <_obstack_memory_used@@Base+0x1d58>  // b.any
  41547c:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415480:	ldr	x0, [x5]
  415484:	ldrh	w0, [x0, x4, lsl #1]
  415488:	tbz	w0, #14, 415498 <_obstack_memory_used@@Base+0x1d98>
  41548c:	mov	x1, x4
  415490:	mov	x0, x19
  415494:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415498:	add	x4, x4, #0x1
  41549c:	cmp	x4, #0x100
  4154a0:	b.ne	415480 <_obstack_memory_used@@Base+0x1d80>  // b.any
  4154a4:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4154a8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  4154ac:	mov	x0, x21
  4154b0:	add	x1, x1, #0x510
  4154b4:	bl	402780 <strcmp@plt>
  4154b8:	cbnz	w0, 41551c <_obstack_memory_used@@Base+0x1e1c>
  4154bc:	bl	402790 <__ctype_b_loc@plt>
  4154c0:	mov	x5, x0
  4154c4:	mov	x4, #0x0                   	// #0
  4154c8:	cbz	x20, 4154f4 <_obstack_memory_used@@Base+0x1df4>
  4154cc:	ldr	x0, [x5]
  4154d0:	ldrh	w0, [x0, x4, lsl #1]
  4154d4:	tbz	w0, #8, 4154e4 <_obstack_memory_used@@Base+0x1de4>
  4154d8:	ldrb	w1, [x20, x4]
  4154dc:	mov	x0, x19
  4154e0:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4154e4:	add	x4, x4, #0x1
  4154e8:	cmp	x4, #0x100
  4154ec:	b.ne	4154cc <_obstack_memory_used@@Base+0x1dcc>  // b.any
  4154f0:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4154f4:	ldr	x0, [x5]
  4154f8:	ldrh	w0, [x0, x4, lsl #1]
  4154fc:	tbz	w0, #8, 41550c <_obstack_memory_used@@Base+0x1e0c>
  415500:	mov	x1, x4
  415504:	mov	x0, x19
  415508:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41550c:	add	x4, x4, #0x1
  415510:	cmp	x4, #0x100
  415514:	b.ne	4154f4 <_obstack_memory_used@@Base+0x1df4>  // b.any
  415518:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  41551c:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415520:	mov	x0, x21
  415524:	add	x1, x1, #0x65e
  415528:	bl	402780 <strcmp@plt>
  41552c:	cbnz	w0, 415590 <_obstack_memory_used@@Base+0x1e90>
  415530:	bl	402790 <__ctype_b_loc@plt>
  415534:	mov	x5, x0
  415538:	mov	x4, #0x0                   	// #0
  41553c:	cbz	x20, 415568 <_obstack_memory_used@@Base+0x1e68>
  415540:	ldr	x0, [x5]
  415544:	ldrh	w0, [x0, x4, lsl #1]
  415548:	tbz	w0, #0, 415558 <_obstack_memory_used@@Base+0x1e58>
  41554c:	ldrb	w1, [x20, x4]
  415550:	mov	x0, x19
  415554:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415558:	add	x4, x4, #0x1
  41555c:	cmp	x4, #0x100
  415560:	b.ne	415540 <_obstack_memory_used@@Base+0x1e40>  // b.any
  415564:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415568:	ldr	x0, [x5]
  41556c:	ldrh	w0, [x0, x4, lsl #1]
  415570:	tbz	w0, #0, 415580 <_obstack_memory_used@@Base+0x1e80>
  415574:	mov	x1, x4
  415578:	mov	x0, x19
  41557c:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415580:	add	x4, x4, #0x1
  415584:	cmp	x4, #0x100
  415588:	b.ne	415568 <_obstack_memory_used@@Base+0x1e68>  // b.any
  41558c:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415590:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415594:	mov	x0, x21
  415598:	add	x1, x1, #0x652
  41559c:	bl	402780 <strcmp@plt>
  4155a0:	cbnz	w0, 415604 <_obstack_memory_used@@Base+0x1f04>
  4155a4:	bl	402790 <__ctype_b_loc@plt>
  4155a8:	mov	x5, x0
  4155ac:	mov	x4, #0x0                   	// #0
  4155b0:	cbz	x20, 4155dc <_obstack_memory_used@@Base+0x1edc>
  4155b4:	ldr	x0, [x5]
  4155b8:	ldrsh	w0, [x0, x4, lsl #1]
  4155bc:	tbz	w0, #31, 4155cc <_obstack_memory_used@@Base+0x1ecc>
  4155c0:	ldrb	w1, [x20, x4]
  4155c4:	mov	x0, x19
  4155c8:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4155cc:	add	x4, x4, #0x1
  4155d0:	cmp	x4, #0x100
  4155d4:	b.ne	4155b4 <_obstack_memory_used@@Base+0x1eb4>  // b.any
  4155d8:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4155dc:	ldr	x0, [x5]
  4155e0:	ldrsh	w0, [x0, x4, lsl #1]
  4155e4:	tbz	w0, #31, 4155f4 <_obstack_memory_used@@Base+0x1ef4>
  4155e8:	mov	x1, x4
  4155ec:	mov	x0, x19
  4155f0:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4155f4:	add	x4, x4, #0x1
  4155f8:	cmp	x4, #0x100
  4155fc:	b.ne	4155dc <_obstack_memory_used@@Base+0x1edc>  // b.any
  415600:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415604:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  415608:	mov	x0, x21
  41560c:	add	x1, x1, #0x640
  415610:	bl	402780 <strcmp@plt>
  415614:	cbnz	w0, 415678 <_obstack_memory_used@@Base+0x1f78>
  415618:	bl	402790 <__ctype_b_loc@plt>
  41561c:	mov	x5, x0
  415620:	mov	x4, #0x0                   	// #0
  415624:	cbz	x20, 415650 <_obstack_memory_used@@Base+0x1f50>
  415628:	ldr	x0, [x5]
  41562c:	ldrh	w0, [x0, x4, lsl #1]
  415630:	tbz	w0, #2, 415640 <_obstack_memory_used@@Base+0x1f40>
  415634:	ldrb	w1, [x20, x4]
  415638:	mov	x0, x19
  41563c:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415640:	add	x4, x4, #0x1
  415644:	cmp	x4, #0x100
  415648:	b.ne	415628 <_obstack_memory_used@@Base+0x1f28>  // b.any
  41564c:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415650:	ldr	x0, [x5]
  415654:	ldrh	w0, [x0, x4, lsl #1]
  415658:	tbz	w0, #2, 415668 <_obstack_memory_used@@Base+0x1f68>
  41565c:	mov	x1, x4
  415660:	mov	x0, x19
  415664:	bl	413724 <_obstack_memory_used@@Base+0x24>
  415668:	add	x4, x4, #0x1
  41566c:	cmp	x4, #0x100
  415670:	b.ne	415650 <_obstack_memory_used@@Base+0x1f50>  // b.any
  415674:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  415678:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xc900>
  41567c:	mov	x0, x21
  415680:	add	x1, x1, #0x633
  415684:	bl	402780 <strcmp@plt>
  415688:	cbnz	w0, 4156f4 <_obstack_memory_used@@Base+0x1ff4>
  41568c:	bl	402790 <__ctype_b_loc@plt>
  415690:	mov	x5, x0
  415694:	mov	x4, #0x0                   	// #0
  415698:	cbz	x20, 4156c4 <_obstack_memory_used@@Base+0x1fc4>
  41569c:	ldr	x0, [x5]
  4156a0:	ldrh	w0, [x0, x4, lsl #1]
  4156a4:	tbz	w0, #12, 4156b4 <_obstack_memory_used@@Base+0x1fb4>
  4156a8:	ldrb	w1, [x20, x4]
  4156ac:	mov	x0, x19
  4156b0:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4156b4:	add	x4, x4, #0x1
  4156b8:	cmp	x4, #0x100
  4156bc:	b.ne	41569c <_obstack_memory_used@@Base+0x1f9c>  // b.any
  4156c0:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4156c4:	ldr	x0, [x5]
  4156c8:	ldrh	w0, [x0, x4, lsl #1]
  4156cc:	tbz	w0, #12, 4156dc <_obstack_memory_used@@Base+0x1fdc>
  4156d0:	mov	x1, x4
  4156d4:	mov	x0, x19
  4156d8:	bl	413724 <_obstack_memory_used@@Base+0x24>
  4156dc:	add	x4, x4, #0x1
  4156e0:	cmp	x4, #0x100
  4156e4:	b.ne	4156c4 <_obstack_memory_used@@Base+0x1fc4>  // b.any
  4156e8:	b	4151b0 <_obstack_memory_used@@Base+0x1ab0>
  4156ec:	mov	w0, #0xc                   	// #12
  4156f0:	b	4151b4 <_obstack_memory_used@@Base+0x1ab4>
  4156f4:	mov	w0, #0x4                   	// #4
  4156f8:	b	4151b4 <_obstack_memory_used@@Base+0x1ab4>
  4156fc:	stp	x29, x30, [sp, #-400]!
  415700:	mov	x29, sp
  415704:	stp	x19, x20, [sp, #16]
  415708:	mov	x19, x2
  41570c:	ldr	x20, [x0]
  415710:	stp	x21, x22, [sp, #32]
  415714:	mov	x21, x0
  415718:	stp	x23, x24, [sp, #48]
  41571c:	ldr	w0, [x20, #180]
  415720:	stp	x25, x26, [sp, #64]
  415724:	cmp	w0, #0x1
  415728:	stp	x27, x28, [sp, #80]
  41572c:	mov	x27, x1
  415730:	b.ne	415840 <_obstack_memory_used@@Base+0x2140>  // b.any
  415734:	ldr	x25, [x21, #24]
  415738:	ubfx	w25, w25, #22, #1
  41573c:	add	x22, sp, #0x90
  415740:	mov	x26, #0x0                   	// #0
  415744:	ldr	x0, [x27, #16]
  415748:	cmp	x0, x26
  41574c:	b.le	415a1c <_obstack_memory_used@@Base+0x231c>
  415750:	ldr	x0, [x27, #24]
  415754:	ldr	x2, [x20]
  415758:	ldr	x24, [x0, x26, lsl #3]
  41575c:	add	x0, x2, x24, lsl #4
  415760:	lsl	x28, x24, #4
  415764:	ldrb	w23, [x0, #8]
  415768:	cmp	w23, #0x1
  41576c:	b.ne	415854 <_obstack_memory_used@@Base+0x2154>  // b.any
  415770:	ldrb	w0, [x2, x28]
  415774:	ldrb	w2, [x2, x28]
  415778:	strb	w23, [x19, x2]
  41577c:	cbz	w25, 415788 <_obstack_memory_used@@Base+0x2088>
  415780:	bl	402990 <tolower@plt>
  415784:	strb	w23, [x19, w0, sxtw]
  415788:	ldr	x0, [x21, #24]
  41578c:	tbz	w0, #22, 415838 <_obstack_memory_used@@Base+0x2138>
  415790:	ldr	w0, [x20, #180]
  415794:	cmp	w0, #0x1
  415798:	b.le	415838 <_obstack_memory_used@@Base+0x2138>
  41579c:	ldr	x0, [x20]
  4157a0:	mov	w3, #0x1                   	// #1
  4157a4:	add	x2, x22, #0x1
  4157a8:	movk	w3, #0x20, lsl #16
  4157ac:	ldrb	w0, [x0, x28]
  4157b0:	strb	w0, [sp, #144]
  4157b4:	ldr	x0, [x20, #16]
  4157b8:	add	x24, x24, #0x1
  4157bc:	cmp	x0, x24
  4157c0:	b.ls	4157e8 <_obstack_memory_used@@Base+0x20e8>  // b.plast
  4157c4:	ldr	x1, [x20]
  4157c8:	mov	w5, #0xff                  	// #255
  4157cc:	movk	w5, #0x20, lsl #16
  4157d0:	lsl	x4, x24, #4
  4157d4:	add	x0, x1, x24, lsl #4
  4157d8:	ldr	w0, [x0, #8]
  4157dc:	and	w0, w0, w5
  4157e0:	cmp	w0, w3
  4157e4:	b.eq	415848 <_obstack_memory_used@@Base+0x2148>  // b.none
  4157e8:	sub	x23, x2, x22
  4157ec:	add	x3, sp, #0x88
  4157f0:	mov	x2, x23
  4157f4:	mov	x1, x22
  4157f8:	add	x0, sp, #0x84
  4157fc:	str	xzr, [sp, #136]
  415800:	bl	413374 <wcrtomb@plt+0x10964>
  415804:	cmp	x23, x0
  415808:	b.ne	415838 <_obstack_memory_used@@Base+0x2138>  // b.any
  41580c:	ldr	w0, [sp, #132]
  415810:	bl	4029c0 <towlower@plt>
  415814:	mov	w1, w0
  415818:	add	x2, sp, #0x88
  41581c:	mov	x0, x22
  415820:	bl	402a10 <wcrtomb@plt>
  415824:	cmn	x0, #0x1
  415828:	b.eq	415838 <_obstack_memory_used@@Base+0x2138>  // b.none
  41582c:	ldrb	w0, [sp, #144]
  415830:	mov	w1, #0x1                   	// #1
  415834:	strb	w1, [x19, x0]
  415838:	add	x26, x26, #0x1
  41583c:	b	415744 <_obstack_memory_used@@Base+0x2044>
  415840:	mov	w25, #0x0                   	// #0
  415844:	b	41573c <_obstack_memory_used@@Base+0x203c>
  415848:	ldrb	w0, [x1, x4]
  41584c:	strb	w0, [x2], #1
  415850:	b	4157b4 <_obstack_memory_used@@Base+0x20b4>
  415854:	cmp	w23, #0x3
  415858:	b.ne	4158c4 <_obstack_memory_used@@Base+0x21c4>  // b.any
  41585c:	mov	x23, #0x0                   	// #0
  415860:	mov	w3, #0x1                   	// #1
  415864:	ldr	x0, [x20]
  415868:	lsl	x2, x23, #3
  41586c:	mov	w24, #0x0                   	// #0
  415870:	ldr	x0, [x0, x28]
  415874:	ldr	x4, [x0, x23]
  415878:	lsr	x0, x4, x24
  41587c:	tbz	w0, #0, 4158a4 <_obstack_memory_used@@Base+0x21a4>
  415880:	strb	w3, [x19, x2]
  415884:	cbz	w25, 4158a4 <_obstack_memory_used@@Base+0x21a4>
  415888:	mov	w0, w2
  41588c:	stp	x2, x4, [sp, #104]
  415890:	str	w3, [sp, #124]
  415894:	bl	402990 <tolower@plt>
  415898:	ldp	x2, x4, [sp, #104]
  41589c:	ldr	w3, [sp, #124]
  4158a0:	strb	w3, [x19, w0, sxtw]
  4158a4:	add	w24, w24, #0x1
  4158a8:	add	x2, x2, #0x1
  4158ac:	cmp	w24, #0x40
  4158b0:	b.ne	415878 <_obstack_memory_used@@Base+0x2178>  // b.any
  4158b4:	add	x23, x23, #0x8
  4158b8:	cmp	x23, #0x20
  4158bc:	b.ne	415864 <_obstack_memory_used@@Base+0x2164>  // b.any
  4158c0:	b	415838 <_obstack_memory_used@@Base+0x2138>
  4158c4:	cmp	w23, #0x6
  4158c8:	b.ne	4159e4 <_obstack_memory_used@@Base+0x22e4>  // b.any
  4158cc:	ldr	w0, [x20, #180]
  4158d0:	ldr	x24, [x2, x28]
  4158d4:	cmp	w0, #0x1
  4158d8:	b.le	4159d8 <_obstack_memory_used@@Base+0x22d8>
  4158dc:	ldr	x0, [x24, #72]
  4158e0:	cbnz	x0, 4158f4 <_obstack_memory_used@@Base+0x21f4>
  4158e4:	ldrb	w0, [x24, #32]
  4158e8:	tbnz	w0, #0, 4158f4 <_obstack_memory_used@@Base+0x21f4>
  4158ec:	ldr	x28, [x24, #64]
  4158f0:	cbz	x28, 4159dc <_obstack_memory_used@@Base+0x22dc>
  4158f4:	mov	w23, #0x1                   	// #1
  4158f8:	strb	wzr, [sp, #136]
  4158fc:	mov	x3, x22
  415900:	add	x1, sp, #0x88
  415904:	mov	x2, #0x1                   	// #1
  415908:	mov	x0, #0x0                   	// #0
  41590c:	str	xzr, [x22]
  415910:	bl	413374 <wcrtomb@plt+0x10964>
  415914:	cmn	x0, #0x2
  415918:	b.ne	415924 <_obstack_memory_used@@Base+0x2224>  // b.any
  41591c:	ldrb	w0, [sp, #136]
  415920:	strb	w23, [x19, x0]
  415924:	ldrb	w0, [sp, #136]
  415928:	add	w0, w0, #0x1
  41592c:	and	w0, w0, #0xff
  415930:	strb	w0, [sp, #136]
  415934:	cbnz	w0, 4158fc <_obstack_memory_used@@Base+0x21fc>
  415938:	b	415838 <_obstack_memory_used@@Base+0x2138>
  41593c:	str	xzr, [sp, #136]
  415940:	lsl	x0, x28, #2
  415944:	str	x0, [sp, #104]
  415948:	lsl	x1, x28, #2
  41594c:	ldr	x0, [x24]
  415950:	add	x2, sp, #0x88
  415954:	ldr	w1, [x0, x1]
  415958:	mov	x0, x22
  41595c:	bl	402a10 <wcrtomb@plt>
  415960:	cmn	x0, #0x1
  415964:	b.eq	415980 <_obstack_memory_used@@Base+0x2280>  // b.none
  415968:	ldrb	w1, [sp, #144]
  41596c:	ldrb	w0, [sp, #144]
  415970:	strb	w23, [x19, x1]
  415974:	cbz	w25, 415980 <_obstack_memory_used@@Base+0x2280>
  415978:	bl	402990 <tolower@plt>
  41597c:	strb	w23, [x19, w0, sxtw]
  415980:	ldr	x0, [x21, #24]
  415984:	tbz	w0, #22, 4159c4 <_obstack_memory_used@@Base+0x22c4>
  415988:	ldr	w0, [x20, #180]
  41598c:	cmp	w0, #0x1
  415990:	b.le	4159c4 <_obstack_memory_used@@Base+0x22c4>
  415994:	ldr	x0, [x24]
  415998:	lsl	x1, x28, #2
  41599c:	ldr	w0, [x0, x1]
  4159a0:	bl	4029c0 <towlower@plt>
  4159a4:	mov	w1, w0
  4159a8:	add	x2, sp, #0x88
  4159ac:	mov	x0, x22
  4159b0:	bl	402a10 <wcrtomb@plt>
  4159b4:	cmn	x0, #0x1
  4159b8:	b.eq	4159c4 <_obstack_memory_used@@Base+0x22c4>  // b.none
  4159bc:	ldrb	w0, [sp, #144]
  4159c0:	strb	w23, [x19, x0]
  4159c4:	add	x28, x28, #0x1
  4159c8:	ldr	x0, [x24, #40]
  4159cc:	cmp	x0, x28
  4159d0:	b.gt	41593c <_obstack_memory_used@@Base+0x223c>
  4159d4:	b	415838 <_obstack_memory_used@@Base+0x2138>
  4159d8:	mov	x28, #0x0                   	// #0
  4159dc:	mov	w23, #0x1                   	// #1
  4159e0:	b	4159c8 <_obstack_memory_used@@Base+0x22c8>
  4159e4:	and	w0, w23, #0xfffffffd
  4159e8:	cmp	w0, #0x5
  4159ec:	b.eq	4159f8 <_obstack_memory_used@@Base+0x22f8>  // b.none
  4159f0:	cmp	w23, #0x2
  4159f4:	b.ne	415838 <_obstack_memory_used@@Base+0x2138>  // b.any
  4159f8:	mov	x0, x19
  4159fc:	mov	x2, #0x100                 	// #256
  415a00:	mov	w1, #0x1                   	// #1
  415a04:	bl	4025f0 <memset@plt>
  415a08:	cmp	w23, #0x2
  415a0c:	b.ne	415a1c <_obstack_memory_used@@Base+0x231c>  // b.any
  415a10:	ldrb	w0, [x21, #56]
  415a14:	orr	w0, w0, #0x1
  415a18:	strb	w0, [x21, #56]
  415a1c:	ldp	x19, x20, [sp, #16]
  415a20:	ldp	x21, x22, [sp, #32]
  415a24:	ldp	x23, x24, [sp, #48]
  415a28:	ldp	x25, x26, [sp, #64]
  415a2c:	ldp	x27, x28, [sp, #80]
  415a30:	ldp	x29, x30, [sp], #400
  415a34:	ret
  415a38:	mov	x3, x0
  415a3c:	ldr	w0, [x0, #144]
  415a40:	cmp	w0, #0x1
  415a44:	b.eq	415a70 <_obstack_memory_used@@Base+0x2370>  // b.none
  415a48:	ldr	x4, [x3, #48]
  415a4c:	add	x2, x1, #0x1
  415a50:	sub	w0, w2, w1
  415a54:	cmp	x4, x2
  415a58:	b.le	415a70 <_obstack_memory_used@@Base+0x2370>
  415a5c:	ldr	x5, [x3, #16]
  415a60:	ldr	w5, [x5, x2, lsl #2]
  415a64:	add	x2, x2, #0x1
  415a68:	cmn	w5, #0x1
  415a6c:	b.eq	415a50 <_obstack_memory_used@@Base+0x2350>  // b.none
  415a70:	ret
  415a74:	mov	x7, x0
  415a78:	stp	x29, x30, [sp, #-48]!
  415a7c:	mov	x0, x1
  415a80:	mov	x29, sp
  415a84:	ldr	x9, [x7]
  415a88:	lsl	x10, x0, #4
  415a8c:	stp	x19, x20, [sp, #16]
  415a90:	mov	x6, x2
  415a94:	mov	x1, x3
  415a98:	add	x0, x9, x0, lsl #4
  415a9c:	stp	x21, x22, [sp, #32]
  415aa0:	ldrb	w8, [x0, #8]
  415aa4:	cmp	w8, #0x7
  415aa8:	b.ne	415bb8 <_obstack_memory_used@@Base+0x24b8>  // b.any
  415aac:	ldr	x0, [x2, #8]
  415ab0:	add	x4, x0, x3
  415ab4:	ldrb	w0, [x0, x3]
  415ab8:	cmp	w0, #0xc1
  415abc:	b.ls	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.plast
  415ac0:	ldr	x5, [x6, #88]
  415ac4:	add	x2, x3, #0x1
  415ac8:	cmp	x2, x5
  415acc:	b.ge	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.tcont
  415ad0:	ldrb	w2, [x4, #1]
  415ad4:	cmp	w0, #0xdf
  415ad8:	b.hi	415b04 <_obstack_memory_used@@Base+0x2404>  // b.pmore
  415adc:	sub	w2, w2, #0x80
  415ae0:	and	w2, w2, #0xff
  415ae4:	cmp	w2, #0x3f
  415ae8:	b.hi	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.pmore
  415aec:	mov	w19, #0x2                   	// #2
  415af0:	mov	w0, w19
  415af4:	ldp	x19, x20, [sp, #16]
  415af8:	ldp	x21, x22, [sp, #32]
  415afc:	ldp	x29, x30, [sp], #48
  415b00:	ret
  415b04:	cmp	w0, #0xef
  415b08:	b.hi	415b58 <_obstack_memory_used@@Base+0x2458>  // b.pmore
  415b0c:	cmp	w0, #0xe0
  415b10:	mov	w0, #0x9f                  	// #159
  415b14:	ccmp	w2, w0, #0x2, eq  // eq = none
  415b18:	b.ls	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.plast
  415b1c:	mov	w19, #0x3                   	// #3
  415b20:	add	x1, x1, w19, sxtw
  415b24:	sxtw	x2, w19
  415b28:	cmp	x5, x1
  415b2c:	b.lt	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.tstop
  415b30:	mov	x1, #0x1                   	// #1
  415b34:	ldrb	w0, [x4, x1]
  415b38:	sub	w0, w0, #0x80
  415b3c:	and	w0, w0, #0xff
  415b40:	cmp	w0, #0x3f
  415b44:	b.hi	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.pmore
  415b48:	add	x1, x1, #0x1
  415b4c:	cmp	x2, x1
  415b50:	b.gt	415b34 <_obstack_memory_used@@Base+0x2434>
  415b54:	b	415af0 <_obstack_memory_used@@Base+0x23f0>
  415b58:	cmp	w0, #0xf7
  415b5c:	b.hi	415b78 <_obstack_memory_used@@Base+0x2478>  // b.pmore
  415b60:	cmp	w0, #0xf0
  415b64:	mov	w0, #0x8f                  	// #143
  415b68:	ccmp	w2, w0, #0x2, eq  // eq = none
  415b6c:	b.ls	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.plast
  415b70:	mov	w19, #0x4                   	// #4
  415b74:	b	415b20 <_obstack_memory_used@@Base+0x2420>
  415b78:	cmp	w0, #0xfb
  415b7c:	b.hi	415b98 <_obstack_memory_used@@Base+0x2498>  // b.pmore
  415b80:	cmp	w0, #0xf8
  415b84:	mov	w0, #0x87                  	// #135
  415b88:	ccmp	w2, w0, #0x2, eq  // eq = none
  415b8c:	b.ls	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.plast
  415b90:	mov	w19, #0x5                   	// #5
  415b94:	b	415b20 <_obstack_memory_used@@Base+0x2420>
  415b98:	cmp	w0, #0xfd
  415b9c:	b.hi	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.pmore
  415ba0:	cmp	w0, #0xfc
  415ba4:	mov	w0, #0x83                  	// #131
  415ba8:	ccmp	w2, w0, #0x2, eq  // eq = none
  415bac:	b.ls	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.plast
  415bb0:	mov	w19, #0x6                   	// #6
  415bb4:	b	415b20 <_obstack_memory_used@@Base+0x2420>
  415bb8:	mov	x0, x2
  415bbc:	bl	415a38 <_obstack_memory_used@@Base+0x2338>
  415bc0:	mov	w19, w0
  415bc4:	cmp	w8, #0x5
  415bc8:	b.ne	415c04 <_obstack_memory_used@@Base+0x2504>  // b.any
  415bcc:	cmp	w0, #0x1
  415bd0:	b.le	415bfc <_obstack_memory_used@@Base+0x24fc>
  415bd4:	ldr	x0, [x7, #216]
  415bd8:	tbnz	w0, #6, 415bec <_obstack_memory_used@@Base+0x24ec>
  415bdc:	ldr	x2, [x6, #8]
  415be0:	ldrb	w2, [x2, x1]
  415be4:	cmp	w2, #0xa
  415be8:	b.eq	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.none
  415bec:	tbz	w0, #7, 415af0 <_obstack_memory_used@@Base+0x23f0>
  415bf0:	ldr	x0, [x6, #8]
  415bf4:	ldrb	w0, [x0, x1]
  415bf8:	cbnz	w0, 415af0 <_obstack_memory_used@@Base+0x23f0>
  415bfc:	mov	w19, #0x0                   	// #0
  415c00:	b	415af0 <_obstack_memory_used@@Base+0x23f0>
  415c04:	cmp	w0, #0x1
  415c08:	b.le	415bfc <_obstack_memory_used@@Base+0x24fc>
  415c0c:	cmp	w8, #0x6
  415c10:	b.ne	415bfc <_obstack_memory_used@@Base+0x24fc>  // b.any
  415c14:	ldr	x20, [x9, x10]
  415c18:	ldr	x0, [x20, #64]
  415c1c:	ldr	x3, [x20, #40]
  415c20:	cbnz	x0, 415c30 <_obstack_memory_used@@Base+0x2530>
  415c24:	ldr	x0, [x20, #72]
  415c28:	cbnz	x0, 415c30 <_obstack_memory_used@@Base+0x2530>
  415c2c:	cbz	x3, 415cb0 <_obstack_memory_used@@Base+0x25b0>
  415c30:	mov	x0, x6
  415c34:	bl	4137ac <_obstack_memory_used@@Base+0xac>
  415c38:	mov	w21, w0
  415c3c:	mov	x0, #0x0                   	// #0
  415c40:	cmp	x3, x0
  415c44:	b.gt	415c7c <_obstack_memory_used@@Base+0x257c>
  415c48:	mov	x22, #0x0                   	// #0
  415c4c:	ldr	x0, [x20, #72]
  415c50:	cmp	x0, x22
  415c54:	b.gt	415c94 <_obstack_memory_used@@Base+0x2594>
  415c58:	ldr	x2, [x20, #64]
  415c5c:	mov	x0, #0x0                   	// #0
  415c60:	cmp	x2, x0
  415c64:	b.gt	415cb8 <_obstack_memory_used@@Base+0x25b8>
  415c68:	mov	w0, #0x0                   	// #0
  415c6c:	ldrb	w1, [x20, #32]
  415c70:	tbz	w1, #0, 415cec <_obstack_memory_used@@Base+0x25ec>
  415c74:	cbz	w0, 415af0 <_obstack_memory_used@@Base+0x23f0>
  415c78:	b	415bfc <_obstack_memory_used@@Base+0x24fc>
  415c7c:	ldr	x1, [x20]
  415c80:	ldr	w1, [x1, x0, lsl #2]
  415c84:	cmp	w1, w21
  415c88:	b.eq	415ce4 <_obstack_memory_used@@Base+0x25e4>  // b.none
  415c8c:	add	x0, x0, #0x1
  415c90:	b	415c40 <_obstack_memory_used@@Base+0x2540>
  415c94:	ldr	x0, [x20, #24]
  415c98:	ldr	x1, [x0, x22, lsl #3]
  415c9c:	mov	w0, w21
  415ca0:	bl	402510 <iswctype@plt>
  415ca4:	cbnz	w0, 415ce4 <_obstack_memory_used@@Base+0x25e4>
  415ca8:	add	x22, x22, #0x1
  415cac:	b	415c4c <_obstack_memory_used@@Base+0x254c>
  415cb0:	mov	w21, #0x0                   	// #0
  415cb4:	b	415c58 <_obstack_memory_used@@Base+0x2558>
  415cb8:	ldr	x3, [x20, #8]
  415cbc:	lsl	x1, x0, #2
  415cc0:	ldr	w3, [x3, x1]
  415cc4:	cmp	w21, w3
  415cc8:	b.cc	415cdc <_obstack_memory_used@@Base+0x25dc>  // b.lo, b.ul, b.last
  415ccc:	ldr	x3, [x20, #16]
  415cd0:	ldr	w1, [x3, x1]
  415cd4:	cmp	w21, w1
  415cd8:	b.ls	415ce4 <_obstack_memory_used@@Base+0x25e4>  // b.plast
  415cdc:	add	x0, x0, #0x1
  415ce0:	b	415c60 <_obstack_memory_used@@Base+0x2560>
  415ce4:	mov	w0, w19
  415ce8:	b	415c6c <_obstack_memory_used@@Base+0x256c>
  415cec:	mov	w19, w0
  415cf0:	b	415af0 <_obstack_memory_used@@Base+0x23f0>
  415cf4:	tbnz	x1, #63, 415d18 <_obstack_memory_used@@Base+0x2618>
  415cf8:	ldr	x2, [x0, #8]
  415cfc:	cmp	x2, x1
  415d00:	b.le	415d18 <_obstack_memory_used@@Base+0x2618>
  415d04:	sub	x2, x2, #0x1
  415d08:	str	x2, [x0, #8]
  415d0c:	ldr	x2, [x0, #8]
  415d10:	cmp	x1, x2
  415d14:	b.lt	415d1c <_obstack_memory_used@@Base+0x261c>  // b.tstop
  415d18:	ret
  415d1c:	add	x1, x1, #0x1
  415d20:	ldr	x2, [x0, #16]
  415d24:	lsl	x3, x1, #3
  415d28:	ldr	x4, [x2, x3]
  415d2c:	add	x2, x2, x3
  415d30:	stur	x4, [x2, #-8]
  415d34:	b	415d0c <_obstack_memory_used@@Base+0x260c>
  415d38:	ldrb	w2, [x1, #48]
  415d3c:	cmp	w2, #0x4
  415d40:	b.ne	415d78 <_obstack_memory_used@@Base+0x2678>  // b.any
  415d44:	ldr	x2, [x0, #224]
  415d48:	cbz	x2, 415d70 <_obstack_memory_used@@Base+0x2670>
  415d4c:	ldrsw	x3, [x1, #40]
  415d50:	ldr	x2, [x2, x3, lsl #3]
  415d54:	str	x2, [x1, #40]
  415d58:	mov	w1, #0x1                   	// #1
  415d5c:	lsl	w1, w1, w2
  415d60:	ldr	x2, [x0, #160]
  415d64:	sxtw	x1, w1
  415d68:	orr	x1, x2, x1
  415d6c:	str	x1, [x0, #160]
  415d70:	mov	w0, #0x0                   	// #0
  415d74:	ret
  415d78:	cmp	w2, #0x11
  415d7c:	b.ne	415d70 <_obstack_memory_used@@Base+0x2670>  // b.any
  415d80:	ldr	x2, [x1, #8]
  415d84:	cbz	x2, 415d70 <_obstack_memory_used@@Base+0x2670>
  415d88:	ldrb	w3, [x2, #48]
  415d8c:	cmp	w3, #0x11
  415d90:	b.ne	415d70 <_obstack_memory_used@@Base+0x2670>  // b.any
  415d94:	ldr	x3, [x2, #40]
  415d98:	ldr	x2, [x2, #8]
  415d9c:	str	x2, [x1, #8]
  415da0:	cbz	x2, 415da8 <_obstack_memory_used@@Base+0x26a8>
  415da4:	str	x1, [x2]
  415da8:	ldr	x1, [x1, #40]
  415dac:	cmp	x3, #0x3f
  415db0:	ldr	x2, [x0, #224]
  415db4:	ldr	x1, [x2, x1, lsl #3]
  415db8:	str	x1, [x2, x3, lsl #3]
  415dbc:	b.gt	415d70 <_obstack_memory_used@@Base+0x2670>
  415dc0:	ldr	x2, [x0, #160]
  415dc4:	mov	x1, #0x1                   	// #1
  415dc8:	lsl	x1, x1, x3
  415dcc:	bic	x1, x2, x1
  415dd0:	b	415d6c <_obstack_memory_used@@Base+0x266c>
  415dd4:	ldrb	w0, [x1, #48]
  415dd8:	ldr	x2, [x1, #8]
  415ddc:	cmp	w0, #0xb
  415de0:	b.eq	415e04 <_obstack_memory_used@@Base+0x2704>  // b.none
  415de4:	cmp	w0, #0x10
  415de8:	ldr	x0, [x1, #16]
  415dec:	b.eq	415e10 <_obstack_memory_used@@Base+0x2710>  // b.none
  415df0:	cbz	x2, 415dfc <_obstack_memory_used@@Base+0x26fc>
  415df4:	ldr	x3, [x1, #32]
  415df8:	str	x3, [x2, #32]
  415dfc:	cbnz	x0, 415e18 <_obstack_memory_used@@Base+0x2718>
  415e00:	b	415e08 <_obstack_memory_used@@Base+0x2708>
  415e04:	str	x1, [x2, #32]
  415e08:	mov	w0, #0x0                   	// #0
  415e0c:	ret
  415e10:	ldr	x3, [x0, #24]
  415e14:	str	x3, [x2, #32]
  415e18:	ldr	x1, [x1, #32]
  415e1c:	str	x1, [x0, #32]
  415e20:	b	415e08 <_obstack_memory_used@@Base+0x2708>
  415e24:	stp	x29, x30, [sp, #-48]!
  415e28:	mov	x29, sp
  415e2c:	stp	x19, x20, [sp, #16]
  415e30:	mov	x19, x0
  415e34:	ldr	w0, [x0, #128]
  415e38:	stp	x21, x22, [sp, #32]
  415e3c:	mov	x20, x2
  415e40:	mov	x21, x1
  415e44:	mov	x22, x3
  415e48:	cmp	w0, #0xf
  415e4c:	b.ne	415e70 <_obstack_memory_used@@Base+0x2770>  // b.any
  415e50:	mov	x0, #0x3c8                 	// #968
  415e54:	bl	402520 <malloc@plt>
  415e58:	mov	x4, x0
  415e5c:	cbz	x0, 415ed0 <_obstack_memory_used@@Base+0x27d0>
  415e60:	ldr	x0, [x19, #112]
  415e64:	str	x0, [x4]
  415e68:	str	x4, [x19, #112]
  415e6c:	str	wzr, [x19, #128]
  415e70:	ldr	w4, [x19, #128]
  415e74:	ldr	x6, [x19, #112]
  415e78:	add	w0, w4, #0x1
  415e7c:	sbfiz	x4, x4, #6, #32
  415e80:	str	w0, [x19, #128]
  415e84:	add	x5, x6, x4
  415e88:	add	x0, x4, #0x8
  415e8c:	add	x4, x4, #0x20
  415e90:	add	x0, x6, x0
  415e94:	add	x4, x6, x4
  415e98:	stp	xzr, x21, [x5, #8]
  415e9c:	str	x20, [x5, #24]
  415ea0:	ldp	x2, x3, [x22]
  415ea4:	stp	x2, x3, [x5, #48]
  415ea8:	ldrb	w1, [x4, #26]
  415eac:	and	w1, w1, #0xfffffff3
  415eb0:	strb	w1, [x4, #26]
  415eb4:	mov	x1, #0xffffffffffffffff    	// #-1
  415eb8:	stp	xzr, xzr, [x5, #32]
  415ebc:	str	x1, [x5, #64]
  415ec0:	cbz	x21, 415ec8 <_obstack_memory_used@@Base+0x27c8>
  415ec4:	str	x0, [x21]
  415ec8:	cbz	x20, 415ed0 <_obstack_memory_used@@Base+0x27d0>
  415ecc:	str	x0, [x20]
  415ed0:	ldp	x19, x20, [sp, #16]
  415ed4:	ldp	x21, x22, [sp, #32]
  415ed8:	ldp	x29, x30, [sp], #48
  415edc:	ret
  415ee0:	stp	x29, x30, [sp, #-64]!
  415ee4:	mov	x29, sp
  415ee8:	stp	x19, x20, [sp, #16]
  415eec:	mov	x19, x0
  415ef0:	ldr	x20, [x0]
  415ef4:	stp	x21, x22, [sp, #32]
  415ef8:	mov	x22, x1
  415efc:	add	x21, sp, #0x38
  415f00:	add	x3, x19, #0x28
  415f04:	mov	x0, x22
  415f08:	mov	x2, #0x0                   	// #0
  415f0c:	mov	x1, #0x0                   	// #0
  415f10:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  415f14:	str	x0, [x21]
  415f18:	cbz	x0, 415f58 <_obstack_memory_used@@Base+0x2858>
  415f1c:	str	x20, [x0]
  415f20:	ldr	x20, [x21]
  415f24:	ldrb	w0, [x20, #50]
  415f28:	orr	w0, w0, #0x4
  415f2c:	strb	w0, [x20, #50]
  415f30:	ldr	x0, [x19, #8]
  415f34:	cbz	x0, 415f6c <_obstack_memory_used@@Base+0x286c>
  415f38:	add	x21, x20, #0x8
  415f3c:	mov	x19, x0
  415f40:	b	415f00 <_obstack_memory_used@@Base+0x2800>
  415f44:	ldr	x1, [x19]
  415f48:	mov	x0, x19
  415f4c:	ldr	x20, [x20]
  415f50:	cbnz	x1, 415f68 <_obstack_memory_used@@Base+0x2868>
  415f54:	ldr	x0, [sp, #56]
  415f58:	ldp	x19, x20, [sp, #16]
  415f5c:	ldp	x21, x22, [sp, #32]
  415f60:	ldp	x29, x30, [sp], #64
  415f64:	ret
  415f68:	mov	x19, x1
  415f6c:	ldr	x2, [x19, #16]
  415f70:	cmp	x2, x0
  415f74:	b.eq	415f44 <_obstack_memory_used@@Base+0x2844>  // b.none
  415f78:	cbz	x2, 415f44 <_obstack_memory_used@@Base+0x2844>
  415f7c:	add	x21, x20, #0x10
  415f80:	mov	x0, x2
  415f84:	b	415f3c <_obstack_memory_used@@Base+0x283c>
  415f88:	stp	x29, x30, [sp, #-32]!
  415f8c:	mov	x29, sp
  415f90:	stp	xzr, xzr, [sp, #16]
  415f94:	strb	w3, [sp, #24]
  415f98:	add	x3, sp, #0x10
  415f9c:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  415fa0:	ldp	x29, x30, [sp], #32
  415fa4:	ret
  415fa8:	stp	x29, x30, [sp, #-80]!
  415fac:	mov	x29, sp
  415fb0:	stp	x23, x24, [sp, #48]
  415fb4:	mov	x24, x0
  415fb8:	ldrb	w0, [x1, #56]
  415fbc:	stp	x19, x20, [sp, #16]
  415fc0:	stp	x21, x22, [sp, #32]
  415fc4:	mov	x22, x2
  415fc8:	ldr	x19, [x2, #8]
  415fcc:	str	x25, [sp, #64]
  415fd0:	ldr	x25, [x1]
  415fd4:	tbz	w0, #4, 415ff4 <_obstack_memory_used@@Base+0x28f4>
  415fd8:	cbz	x19, 415ff4 <_obstack_memory_used@@Base+0x28f4>
  415fdc:	ldr	x1, [x2, #40]
  415fe0:	cmp	x1, #0x3f
  415fe4:	b.gt	41607c <_obstack_memory_used@@Base+0x297c>
  415fe8:	ldr	x0, [x25, #160]
  415fec:	lsr	x0, x0, x1
  415ff0:	tbz	w0, #0, 41607c <_obstack_memory_used@@Base+0x297c>
  415ff4:	mov	w3, #0x8                   	// #8
  415ff8:	mov	x2, #0x0                   	// #0
  415ffc:	mov	x1, #0x0                   	// #0
  416000:	mov	x0, x25
  416004:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  416008:	mov	x21, x0
  41600c:	mov	w3, #0x9                   	// #9
  416010:	mov	x0, x25
  416014:	mov	x2, #0x0                   	// #0
  416018:	mov	x1, #0x0                   	// #0
  41601c:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  416020:	mov	x20, x0
  416024:	cbz	x19, 416098 <_obstack_memory_used@@Base+0x2998>
  416028:	mov	x2, x0
  41602c:	mov	x1, x19
  416030:	mov	x0, x25
  416034:	mov	w3, #0x10                  	// #16
  416038:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41603c:	mov	x23, x0
  416040:	mov	x2, x23
  416044:	mov	x1, x21
  416048:	mov	x0, x25
  41604c:	mov	w3, #0x10                  	// #16
  416050:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  416054:	cmp	x0, #0x0
  416058:	mov	x19, x0
  41605c:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  416060:	b.eq	416070 <_obstack_memory_used@@Base+0x2970>  // b.none
  416064:	cmp	x21, #0x0
  416068:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  41606c:	b.ne	4160a0 <_obstack_memory_used@@Base+0x29a0>  // b.any
  416070:	mov	w0, #0xc                   	// #12
  416074:	mov	x19, #0x0                   	// #0
  416078:	str	w0, [x24]
  41607c:	mov	x0, x19
  416080:	ldp	x19, x20, [sp, #16]
  416084:	ldp	x21, x22, [sp, #32]
  416088:	ldp	x23, x24, [sp, #48]
  41608c:	ldr	x25, [sp, #64]
  416090:	ldp	x29, x30, [sp], #80
  416094:	ret
  416098:	mov	x23, x0
  41609c:	b	416040 <_obstack_memory_used@@Base+0x2940>
  4160a0:	ldr	x0, [x22, #40]
  4160a4:	str	x0, [x20, #40]
  4160a8:	str	x0, [x21, #40]
  4160ac:	ldrb	w0, [x22, #50]
  4160b0:	ldrb	w1, [x20, #50]
  4160b4:	ubfx	x0, x0, #3, #1
  4160b8:	bfi	w1, w0, #3, #1
  4160bc:	strb	w1, [x20, #50]
  4160c0:	ldrb	w1, [x21, #50]
  4160c4:	bfi	w1, w0, #3, #1
  4160c8:	strb	w1, [x21, #50]
  4160cc:	b	41607c <_obstack_memory_used@@Base+0x297c>
  4160d0:	stp	x29, x30, [sp, #-48]!
  4160d4:	mov	x29, sp
  4160d8:	ldr	x2, [x1, #8]
  4160dc:	stp	x19, x20, [sp, #16]
  4160e0:	mov	x20, x0
  4160e4:	str	wzr, [sp, #44]
  4160e8:	mov	x19, x1
  4160ec:	cbz	x2, 416114 <_obstack_memory_used@@Base+0x2a14>
  4160f0:	ldrb	w0, [x2, #48]
  4160f4:	cmp	w0, #0x11
  4160f8:	b.ne	416114 <_obstack_memory_used@@Base+0x2a14>  // b.any
  4160fc:	mov	x1, x20
  416100:	add	x0, sp, #0x2c
  416104:	bl	415fa8 <_obstack_memory_used@@Base+0x28a8>
  416108:	str	x0, [x19, #8]
  41610c:	cbz	x0, 416114 <_obstack_memory_used@@Base+0x2a14>
  416110:	str	x19, [x0]
  416114:	ldr	x2, [x19, #16]
  416118:	cbz	x2, 416140 <_obstack_memory_used@@Base+0x2a40>
  41611c:	ldrb	w0, [x2, #48]
  416120:	cmp	w0, #0x11
  416124:	b.ne	416140 <_obstack_memory_used@@Base+0x2a40>  // b.any
  416128:	mov	x1, x20
  41612c:	add	x0, sp, #0x2c
  416130:	bl	415fa8 <_obstack_memory_used@@Base+0x28a8>
  416134:	str	x0, [x19, #16]
  416138:	cbz	x0, 416140 <_obstack_memory_used@@Base+0x2a40>
  41613c:	str	x19, [x0]
  416140:	ldr	w0, [sp, #44]
  416144:	ldp	x19, x20, [sp, #16]
  416148:	ldp	x29, x30, [sp], #48
  41614c:	ret
  416150:	stp	x29, x30, [sp, #-112]!
  416154:	mov	x29, sp
  416158:	stp	x19, x20, [sp, #16]
  41615c:	stp	x21, x22, [sp, #32]
  416160:	mov	x21, x0
  416164:	mov	x22, x5
  416168:	mov	x0, #0x20                  	// #32
  41616c:	stp	x23, x24, [sp, #48]
  416170:	mov	x24, x1
  416174:	mov	x23, x3
  416178:	mov	x1, #0x1                   	// #1
  41617c:	stp	x25, x26, [sp, #64]
  416180:	mov	x25, x2
  416184:	and	w26, w4, #0xff
  416188:	str	xzr, [sp, #88]
  41618c:	bl	402610 <calloc@plt>
  416190:	mov	x19, x0
  416194:	cbnz	x0, 4161bc <_obstack_memory_used@@Base+0x2abc>
  416198:	mov	w0, #0xc                   	// #12
  41619c:	str	w0, [x22]
  4161a0:	mov	x0, x19
  4161a4:	ldp	x19, x20, [sp, #16]
  4161a8:	ldp	x21, x22, [sp, #32]
  4161ac:	ldp	x23, x24, [sp, #48]
  4161b0:	ldp	x25, x26, [sp, #64]
  4161b4:	ldp	x29, x30, [sp], #112
  4161b8:	ret
  4161bc:	mov	x1, #0x1                   	// #1
  4161c0:	mov	x0, #0x50                  	// #80
  4161c4:	bl	402610 <calloc@plt>
  4161c8:	mov	x20, x0
  4161cc:	cbnz	x0, 4161e4 <_obstack_memory_used@@Base+0x2ae4>
  4161d0:	mov	x0, x19
  4161d4:	bl	4027a0 <free@plt>
  4161d8:	mov	w0, #0xc                   	// #12
  4161dc:	str	w0, [x22]
  4161e0:	b	416228 <_obstack_memory_used@@Base+0x2b28>
  4161e4:	ldrb	w0, [x0, #32]
  4161e8:	mov	x4, x25
  4161ec:	add	x3, sp, #0x58
  4161f0:	mov	x2, x20
  4161f4:	mov	x1, x19
  4161f8:	mov	x5, #0x0                   	// #0
  4161fc:	bfxil	w0, w26, #0, #1
  416200:	strb	w0, [x20, #32]
  416204:	mov	x0, x24
  416208:	bl	4150bc <_obstack_memory_used@@Base+0x19bc>
  41620c:	mov	w24, w0
  416210:	cbz	w0, 416240 <_obstack_memory_used@@Base+0x2b40>
  416214:	mov	x0, x19
  416218:	bl	4027a0 <free@plt>
  41621c:	mov	x0, x20
  416220:	bl	414884 <_obstack_memory_used@@Base+0x1184>
  416224:	str	w24, [x22]
  416228:	mov	x19, #0x0                   	// #0
  41622c:	b	4161a0 <_obstack_memory_used@@Base+0x2aa0>
  416230:	add	x23, x23, #0x1
  416234:	and	x1, x1, #0xff
  416238:	mov	x0, x19
  41623c:	bl	413724 <_obstack_memory_used@@Base+0x24>
  416240:	ldrb	w1, [x23]
  416244:	cbnz	w1, 416230 <_obstack_memory_used@@Base+0x2b30>
  416248:	cbz	w26, 416254 <_obstack_memory_used@@Base+0x2b54>
  41624c:	mov	x0, x19
  416250:	bl	413744 <_obstack_memory_used@@Base+0x44>
  416254:	ldr	w0, [x21, #180]
  416258:	cmp	w0, #0x1
  41625c:	b.le	41626c <_obstack_memory_used@@Base+0x2b6c>
  416260:	ldr	x1, [x21, #120]
  416264:	mov	x0, x19
  416268:	bl	413788 <_obstack_memory_used@@Base+0x88>
  41626c:	mov	w0, #0x3                   	// #3
  416270:	add	x3, sp, #0x60
  416274:	mov	x2, #0x0                   	// #0
  416278:	mov	x1, #0x0                   	// #0
  41627c:	str	x19, [sp, #96]
  416280:	strb	w0, [sp, #104]
  416284:	mov	x0, x21
  416288:	stur	wzr, [sp, #105]
  41628c:	sturh	wzr, [sp, #109]
  416290:	strb	wzr, [sp, #111]
  416294:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  416298:	mov	x23, x0
  41629c:	cbz	x0, 416308 <_obstack_memory_used@@Base+0x2c08>
  4162a0:	ldr	w0, [x21, #180]
  4162a4:	cmp	w0, #0x1
  4162a8:	b.le	4162f8 <_obstack_memory_used@@Base+0x2bf8>
  4162ac:	mov	w0, #0x6                   	// #6
  4162b0:	strb	w0, [sp, #104]
  4162b4:	ldrb	w0, [x21, #176]
  4162b8:	mov	x2, #0x0                   	// #0
  4162bc:	add	x3, sp, #0x60
  4162c0:	mov	x1, #0x0                   	// #0
  4162c4:	orr	w0, w0, #0x2
  4162c8:	strb	w0, [x21, #176]
  4162cc:	mov	x0, x21
  4162d0:	str	x20, [sp, #96]
  4162d4:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  4162d8:	mov	x2, x0
  4162dc:	cbz	x0, 416308 <_obstack_memory_used@@Base+0x2c08>
  4162e0:	mov	x1, x23
  4162e4:	mov	x0, x21
  4162e8:	mov	w3, #0xa                   	// #10
  4162ec:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  4162f0:	mov	x19, x0
  4162f4:	b	4161a0 <_obstack_memory_used@@Base+0x2aa0>
  4162f8:	mov	x0, x20
  4162fc:	mov	x19, x23
  416300:	bl	414884 <_obstack_memory_used@@Base+0x1184>
  416304:	b	4161a0 <_obstack_memory_used@@Base+0x2aa0>
  416308:	mov	x0, x19
  41630c:	bl	4027a0 <free@plt>
  416310:	mov	x0, x20
  416314:	bl	414884 <_obstack_memory_used@@Base+0x1184>
  416318:	b	4161d8 <_obstack_memory_used@@Base+0x2ad8>
  41631c:	stp	x29, x30, [sp, #-32]!
  416320:	mov	x29, sp
  416324:	ldr	x2, [x0]
  416328:	stp	x19, x20, [sp, #16]
  41632c:	cbnz	x2, 416348 <_obstack_memory_used@@Base+0x2c48>
  416330:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  416334:	cmp	w0, #0x0
  416338:	cset	w0, eq  // eq = none
  41633c:	ldp	x19, x20, [sp, #16]
  416340:	ldp	x29, x30, [sp], #32
  416344:	ret
  416348:	mov	x19, x0
  41634c:	mov	x20, x1
  416350:	ldp	x1, x0, [x0, #8]
  416354:	cbnz	x1, 416370 <_obstack_memory_used@@Base+0x2c70>
  416358:	str	x20, [x0]
  41635c:	ldr	x0, [x19, #8]
  416360:	add	x0, x0, #0x1
  416364:	str	x0, [x19, #8]
  416368:	mov	w0, #0x1                   	// #1
  41636c:	b	41633c <_obstack_memory_used@@Base+0x2c3c>
  416370:	cmp	x2, x1
  416374:	b.ne	416390 <_obstack_memory_used@@Base+0x2c90>  // b.any
  416378:	lsl	x1, x2, #1
  41637c:	str	x1, [x19]
  416380:	lsl	x1, x2, #4
  416384:	bl	402640 <realloc@plt>
  416388:	cbz	x0, 4163f0 <_obstack_memory_used@@Base+0x2cf0>
  41638c:	str	x0, [x19, #16]
  416390:	ldp	x0, x2, [x19, #8]
  416394:	ldr	x1, [x2]
  416398:	cmp	x20, x1
  41639c:	b.lt	4163e4 <_obstack_memory_used@@Base+0x2ce4>  // b.tstop
  4163a0:	sub	x3, x2, #0x8
  4163a4:	ldr	x1, [x3, x0, lsl #3]
  4163a8:	cmp	x20, x1
  4163ac:	b.ge	4163dc <_obstack_memory_used@@Base+0x2cdc>  // b.tcont
  4163b0:	str	x1, [x2, x0, lsl #3]
  4163b4:	sub	x0, x0, #0x1
  4163b8:	b	4163a4 <_obstack_memory_used@@Base+0x2ca4>
  4163bc:	ldr	x4, [x3, x1, lsl #3]
  4163c0:	str	x4, [x2, x1, lsl #3]
  4163c4:	sub	x1, x1, #0x1
  4163c8:	cmp	x1, #0x0
  4163cc:	b.gt	4163bc <_obstack_memory_used@@Base+0x2cbc>
  4163d0:	cmp	x0, #0x0
  4163d4:	csel	x1, x0, xzr, ge  // ge = tcont
  4163d8:	sub	x0, x0, x1
  4163dc:	str	x20, [x2, x0, lsl #3]
  4163e0:	b	41635c <_obstack_memory_used@@Base+0x2c5c>
  4163e4:	mov	x1, x0
  4163e8:	sub	x3, x2, #0x8
  4163ec:	b	4163c8 <_obstack_memory_used@@Base+0x2cc8>
  4163f0:	mov	w0, #0x0                   	// #0
  4163f4:	b	41633c <_obstack_memory_used@@Base+0x2c3c>
  4163f8:	stp	x29, x30, [sp, #-64]!
  4163fc:	mov	x29, sp
  416400:	stp	x19, x20, [sp, #16]
  416404:	mov	x20, x1
  416408:	mov	x19, x2
  41640c:	stp	x21, x22, [sp, #32]
  416410:	mov	x21, x0
  416414:	mov	w22, w4
  416418:	stp	x23, x24, [sp, #48]
  41641c:	mov	x23, x3
  416420:	mov	x24, #0x18                  	// #24
  416424:	mov	x1, x19
  416428:	mov	x0, x20
  41642c:	bl	413888 <_obstack_memory_used@@Base+0x188>
  416430:	cbz	x0, 41643c <_obstack_memory_used@@Base+0x2d3c>
  416434:	mov	w0, #0x0                   	// #0
  416438:	b	416480 <_obstack_memory_used@@Base+0x2d80>
  41643c:	ldr	x0, [x21]
  416440:	lsl	x1, x19, #4
  416444:	add	x2, x0, x19, lsl #4
  416448:	ldrb	w2, [x2, #8]
  41644c:	cmp	w2, w22
  416450:	b.ne	416494 <_obstack_memory_used@@Base+0x2d94>  // b.any
  416454:	ldr	x0, [x0, x1]
  416458:	cmp	x0, x23
  41645c:	b.ne	416494 <_obstack_memory_used@@Base+0x2d94>  // b.any
  416460:	cmp	w22, #0x9
  416464:	b.ne	416434 <_obstack_memory_used@@Base+0x2d34>  // b.any
  416468:	mov	x1, x19
  41646c:	mov	x0, x20
  416470:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  416474:	tst	w0, #0xff
  416478:	b.ne	416434 <_obstack_memory_used@@Base+0x2d34>  // b.any
  41647c:	mov	w0, #0xc                   	// #12
  416480:	ldp	x19, x20, [sp, #16]
  416484:	ldp	x21, x22, [sp, #32]
  416488:	ldp	x23, x24, [sp, #48]
  41648c:	ldp	x29, x30, [sp], #64
  416490:	ret
  416494:	mov	x1, x19
  416498:	mov	x0, x20
  41649c:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  4164a0:	tst	w0, #0xff
  4164a4:	b.eq	41647c <_obstack_memory_used@@Base+0x2d7c>  // b.none
  4164a8:	ldr	x0, [x21, #40]
  4164ac:	mul	x19, x19, x24
  4164b0:	add	x0, x0, x19
  4164b4:	ldr	x1, [x0, #8]
  4164b8:	cbz	x1, 416434 <_obstack_memory_used@@Base+0x2d34>
  4164bc:	cmp	x1, #0x2
  4164c0:	b.eq	4164d8 <_obstack_memory_used@@Base+0x2dd8>  // b.none
  4164c4:	ldr	x1, [x21, #40]
  4164c8:	add	x19, x1, x19
  4164cc:	ldr	x0, [x19, #16]
  4164d0:	ldr	x19, [x0]
  4164d4:	b	416424 <_obstack_memory_used@@Base+0x2d24>
  4164d8:	ldr	x0, [x0, #16]
  4164dc:	mov	w4, w22
  4164e0:	mov	x3, x23
  4164e4:	mov	x1, x20
  4164e8:	ldr	x2, [x0, #8]
  4164ec:	mov	x0, x21
  4164f0:	bl	4163f8 <_obstack_memory_used@@Base+0x2cf8>
  4164f4:	cbz	w0, 4164c4 <_obstack_memory_used@@Base+0x2dc4>
  4164f8:	b	416480 <_obstack_memory_used@@Base+0x2d80>
  4164fc:	stp	x29, x30, [sp, #-96]!
  416500:	mov	x29, sp
  416504:	stp	x19, x20, [sp, #16]
  416508:	mov	x20, x0
  41650c:	mov	x19, x2
  416510:	stp	x21, x22, [sp, #32]
  416514:	mov	w22, w4
  416518:	stp	x23, x24, [sp, #48]
  41651c:	mov	x24, x3
  416520:	stp	x25, x26, [sp, #64]
  416524:	mov	x25, #0x18                  	// #24
  416528:	str	x27, [sp, #80]
  41652c:	ldr	x3, [x20]
  416530:	mov	x27, x19
  416534:	ldr	x0, [x20, #40]
  416538:	add	x2, x3, x1, lsl #4
  41653c:	ldrb	w4, [x2, #8]
  416540:	cmp	w4, #0x4
  416544:	b.ne	4165c8 <_obstack_memory_used@@Base+0x2ec8>  // b.any
  416548:	mul	x26, x19, x25
  41654c:	lsl	x21, x1, #3
  416550:	ldr	x1, [x20, #24]
  416554:	add	x0, x0, x26
  416558:	mov	w2, w22
  41655c:	ldr	x23, [x1, x21]
  416560:	str	xzr, [x0, #8]
  416564:	mov	x0, x20
  416568:	mov	x1, x23
  41656c:	bl	414ab8 <_obstack_memory_used@@Base+0x13b8>
  416570:	mov	x19, x0
  416574:	cmn	x0, #0x1
  416578:	b.ne	41659c <_obstack_memory_used@@Base+0x2e9c>  // b.any
  41657c:	mov	w0, #0xc                   	// #12
  416580:	ldp	x19, x20, [sp, #16]
  416584:	ldp	x21, x22, [sp, #32]
  416588:	ldp	x23, x24, [sp, #48]
  41658c:	ldp	x25, x26, [sp, #64]
  416590:	ldr	x27, [sp, #80]
  416594:	ldp	x29, x30, [sp], #96
  416598:	ret
  41659c:	ldr	x0, [x20, #24]
  4165a0:	ldr	x1, [x0, x21]
  4165a4:	str	x1, [x0, x27, lsl #3]
  4165a8:	ldr	x0, [x20, #40]
  4165ac:	mov	x1, x19
  4165b0:	add	x0, x0, x26
  4165b4:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  4165b8:	tst	w0, #0xff
  4165bc:	b.eq	41657c <_obstack_memory_used@@Base+0x2e7c>  // b.none
  4165c0:	mov	x1, x23
  4165c4:	b	41652c <_obstack_memory_used@@Base+0x2e2c>
  4165c8:	mul	x26, x1, x25
  4165cc:	add	x5, x0, x26
  4165d0:	ldr	x4, [x5, #8]
  4165d4:	cbnz	x4, 4165ec <_obstack_memory_used@@Base+0x2eec>
  4165d8:	ldr	x0, [x20, #24]
  4165dc:	ldr	x1, [x0, x1, lsl #3]
  4165e0:	str	x1, [x0, x19, lsl #3]
  4165e4:	mov	w0, #0x0                   	// #0
  4165e8:	b	416580 <_obstack_memory_used@@Base+0x2e80>
  4165ec:	mul	x21, x19, x25
  4165f0:	cmp	x4, #0x1
  4165f4:	ldr	x5, [x5, #16]
  4165f8:	add	x0, x0, x21
  4165fc:	ldr	x23, [x5]
  416600:	str	xzr, [x0, #8]
  416604:	b.ne	416668 <_obstack_memory_used@@Base+0x2f68>  // b.any
  416608:	cmp	x1, x24
  41660c:	ccmp	x1, x19, #0x4, eq  // eq = none
  416610:	b.eq	416630 <_obstack_memory_used@@Base+0x2f30>  // b.none
  416614:	mov	x1, x23
  416618:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41661c:	mov	w1, w0
  416620:	mov	w0, #0x0                   	// #0
  416624:	tst	w1, #0xff
  416628:	b.ne	416580 <_obstack_memory_used@@Base+0x2e80>  // b.any
  41662c:	b	41657c <_obstack_memory_used@@Base+0x2e7c>
  416630:	ldr	w0, [x2, #8]
  416634:	ubfx	x0, x0, #8, #10
  416638:	orr	w22, w22, w0
  41663c:	mov	w2, w22
  416640:	mov	x1, x23
  416644:	mov	x0, x20
  416648:	bl	414ab8 <_obstack_memory_used@@Base+0x13b8>
  41664c:	mov	x19, x0
  416650:	cmn	x0, #0x1
  416654:	b.eq	41657c <_obstack_memory_used@@Base+0x2e7c>  // b.none
  416658:	mov	x1, x0
  41665c:	ldr	x0, [x20, #40]
  416660:	add	x0, x0, x21
  416664:	b	4165b4 <_obstack_memory_used@@Base+0x2eb4>
  416668:	ldr	x1, [x20, #16]
  41666c:	sub	x1, x1, #0x1
  416670:	add	x2, x3, x1, lsl #4
  416674:	ldrb	w4, [x2, #10]
  416678:	tbz	w4, #2, 416684 <_obstack_memory_used@@Base+0x2f84>
  41667c:	cmp	x1, #0x0
  416680:	b.gt	4166e8 <_obstack_memory_used@@Base+0x2fe8>
  416684:	mov	w2, w22
  416688:	mov	x1, x23
  41668c:	mov	x0, x20
  416690:	bl	414ab8 <_obstack_memory_used@@Base+0x13b8>
  416694:	mov	x19, x0
  416698:	cmn	x0, #0x1
  41669c:	b.eq	41657c <_obstack_memory_used@@Base+0x2e7c>  // b.none
  4166a0:	ldr	x0, [x20, #40]
  4166a4:	mov	x1, x19
  4166a8:	add	x0, x0, x21
  4166ac:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  4166b0:	tst	w0, #0xff
  4166b4:	b.eq	41657c <_obstack_memory_used@@Base+0x2e7c>  // b.none
  4166b8:	mov	w4, w22
  4166bc:	mov	x3, x24
  4166c0:	mov	x2, x19
  4166c4:	mov	x1, x23
  4166c8:	mov	x0, x20
  4166cc:	bl	4164fc <_obstack_memory_used@@Base+0x2dfc>
  4166d0:	cbnz	w0, 416580 <_obstack_memory_used@@Base+0x2e80>
  4166d4:	ldr	x0, [x20, #40]
  4166d8:	add	x26, x0, x26
  4166dc:	ldr	x0, [x26, #16]
  4166e0:	ldr	x23, [x0, #8]
  4166e4:	b	41663c <_obstack_memory_used@@Base+0x2f3c>
  4166e8:	ldr	x4, [x20, #32]
  4166ec:	ldr	x4, [x4, x1, lsl #3]
  4166f0:	cmp	x4, x23
  4166f4:	b.ne	41666c <_obstack_memory_used@@Base+0x2f6c>  // b.any
  4166f8:	ldr	w2, [x2, #8]
  4166fc:	ubfx	x2, x2, #8, #10
  416700:	cmp	w22, w2
  416704:	b.ne	41666c <_obstack_memory_used@@Base+0x2f6c>  // b.any
  416708:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41670c:	tst	w0, #0xff
  416710:	b.ne	4166d4 <_obstack_memory_used@@Base+0x2fd4>  // b.any
  416714:	b	41657c <_obstack_memory_used@@Base+0x2e7c>
  416718:	stp	x29, x30, [sp, #-64]!
  41671c:	mov	x29, sp
  416720:	stp	x23, x24, [sp, #48]
  416724:	mov	x24, x1
  416728:	stp	x19, x20, [sp, #16]
  41672c:	mov	x20, x1
  416730:	mov	x19, x2
  416734:	ldr	x1, [x1, #16]
  416738:	stp	x21, x22, [sp, #32]
  41673c:	mov	x22, x0
  416740:	str	x2, [x24], #32
  416744:	mov	x0, x24
  416748:	bl	414000 <_obstack_memory_used@@Base+0x900>
  41674c:	cbz	w0, 416804 <_obstack_memory_used@@Base+0x3104>
  416750:	mov	w21, #0xc                   	// #12
  416754:	mov	w0, w21
  416758:	ldp	x19, x20, [sp, #16]
  41675c:	ldp	x21, x22, [sp, #32]
  416760:	ldp	x23, x24, [sp, #48]
  416764:	ldp	x29, x30, [sp], #64
  416768:	ret
  41676c:	ldr	x0, [x20, #24]
  416770:	ldr	x1, [x0, x23, lsl #3]
  416774:	ldr	x0, [x22]
  416778:	add	x0, x0, x1, lsl #4
  41677c:	ldrb	w0, [x0, #8]
  416780:	tbz	w0, #3, 4167f0 <_obstack_memory_used@@Base+0x30f0>
  416784:	add	x23, x23, #0x1
  416788:	ldr	x0, [x20, #16]
  41678c:	cmp	x0, x23
  416790:	b.gt	41676c <_obstack_memory_used@@Base+0x306c>
  416794:	ldr	x2, [x22, #136]
  416798:	ldr	x23, [x22, #64]
  41679c:	and	x19, x19, x2
  4167a0:	mov	x2, #0x18                  	// #24
  4167a4:	mul	x19, x19, x2
  4167a8:	add	x22, x23, x19
  4167ac:	ldr	x1, [x23, x19]
  4167b0:	ldr	x0, [x22, #8]
  4167b4:	cmp	x0, x1
  4167b8:	b.gt	4167d8 <_obstack_memory_used@@Base+0x30d8>
  4167bc:	ldr	x0, [x22, #16]
  4167c0:	add	x1, x1, #0x1
  4167c4:	lsl	x24, x1, #1
  4167c8:	lsl	x1, x1, #4
  4167cc:	bl	402640 <realloc@plt>
  4167d0:	cbz	x0, 416750 <_obstack_memory_used@@Base+0x3050>
  4167d4:	stp	x24, x0, [x22, #8]
  4167d8:	ldr	x0, [x23, x19]
  4167dc:	ldr	x1, [x22, #16]
  4167e0:	add	x2, x0, #0x1
  4167e4:	str	x2, [x23, x19]
  4167e8:	str	x20, [x1, x0, lsl #3]
  4167ec:	b	416754 <_obstack_memory_used@@Base+0x3054>
  4167f0:	mov	x0, x24
  4167f4:	bl	413f3c <_obstack_memory_used@@Base+0x83c>
  4167f8:	tst	w0, #0xff
  4167fc:	b.ne	416784 <_obstack_memory_used@@Base+0x3084>  // b.any
  416800:	b	416750 <_obstack_memory_used@@Base+0x3050>
  416804:	mov	w21, w0
  416808:	mov	x23, #0x0                   	// #0
  41680c:	b	416788 <_obstack_memory_used@@Base+0x3088>
  416810:	cbnz	x1, 41681c <_obstack_memory_used@@Base+0x311c>
  416814:	mov	w0, #0x0                   	// #0
  416818:	ret
  41681c:	stp	x29, x30, [sp, #-48]!
  416820:	mov	x29, sp
  416824:	stp	x19, x20, [sp, #16]
  416828:	mov	x20, x1
  41682c:	ldr	x1, [x1, #8]
  416830:	str	x21, [sp, #32]
  416834:	cbz	x1, 416948 <_obstack_memory_used@@Base+0x3248>
  416838:	mov	x19, x0
  41683c:	ldp	x2, x0, [x0]
  416840:	add	x0, x0, x1, lsl #1
  416844:	cmp	x2, x0
  416848:	b.ge	41686c <_obstack_memory_used@@Base+0x316c>  // b.tcont
  41684c:	ldr	x0, [x19, #16]
  416850:	add	x1, x1, x2
  416854:	lsl	x21, x1, #1
  416858:	lsl	x1, x1, #4
  41685c:	bl	402640 <realloc@plt>
  416860:	cbz	x0, 416974 <_obstack_memory_used@@Base+0x3274>
  416864:	str	x21, [x19]
  416868:	str	x0, [x19, #16]
  41686c:	ldr	x0, [x19, #8]
  416870:	ldr	x2, [x20, #8]
  416874:	cbnz	x0, 416894 <_obstack_memory_used@@Base+0x3194>
  416878:	ldr	x1, [x20, #16]
  41687c:	str	x2, [x19, #8]
  416880:	ldr	x0, [x19, #16]
  416884:	ldr	x2, [x20, #8]
  416888:	lsl	x2, x2, #3
  41688c:	bl	402360 <memcpy@plt>
  416890:	b	416948 <_obstack_memory_used@@Base+0x3248>
  416894:	add	x21, x0, x2, lsl #1
  416898:	sub	x2, x2, #0x1
  41689c:	sub	x0, x0, #0x1
  4168a0:	b	4168cc <_obstack_memory_used@@Base+0x31cc>
  4168a4:	ldr	x1, [x19, #16]
  4168a8:	ldr	x3, [x20, #16]
  4168ac:	ldr	x4, [x1, x0, lsl #3]
  4168b0:	ldr	x3, [x3, x2, lsl #3]
  4168b4:	cmp	x4, x3
  4168b8:	b.eq	416898 <_obstack_memory_used@@Base+0x3198>  // b.none
  4168bc:	b.ge	41689c <_obstack_memory_used@@Base+0x319c>  // b.tcont
  4168c0:	sub	x21, x21, #0x1
  4168c4:	sub	x2, x2, #0x1
  4168c8:	str	x3, [x1, x21, lsl #3]
  4168cc:	cmp	x2, #0x0
  4168d0:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  4168d4:	b.ge	4168a4 <_obstack_memory_used@@Base+0x31a4>  // b.tcont
  4168d8:	tbnz	x2, #63, 4168f8 <_obstack_memory_used@@Base+0x31f8>
  4168dc:	ldr	x0, [x19, #16]
  4168e0:	add	x2, x2, #0x1
  4168e4:	ldr	x1, [x20, #16]
  4168e8:	sub	x21, x21, x2
  4168ec:	lsl	x2, x2, #3
  4168f0:	add	x0, x0, x21, lsl #3
  4168f4:	bl	402360 <memcpy@plt>
  4168f8:	ldr	x0, [x19, #8]
  4168fc:	ldr	x2, [x20, #8]
  416900:	add	x2, x0, x2, lsl #1
  416904:	sub	x4, x2, #0x1
  416908:	subs	x2, x2, x21
  41690c:	b.eq	416948 <_obstack_memory_used@@Base+0x3248>  // b.none
  416910:	sub	x1, x0, #0x1
  416914:	add	x0, x0, x2
  416918:	str	x0, [x19, #8]
  41691c:	ldr	x0, [x19, #16]
  416920:	add	x3, x1, x2
  416924:	ldr	x6, [x0, x4, lsl #3]
  416928:	lsl	x3, x3, #3
  41692c:	ldr	x5, [x0, x1, lsl #3]
  416930:	cmp	x6, x5
  416934:	b.le	41695c <_obstack_memory_used@@Base+0x325c>
  416938:	str	x6, [x0, x3]
  41693c:	sub	x4, x4, #0x1
  416940:	subs	x2, x2, #0x1
  416944:	b.ne	416920 <_obstack_memory_used@@Base+0x3220>  // b.any
  416948:	mov	w0, #0x0                   	// #0
  41694c:	ldp	x19, x20, [sp, #16]
  416950:	ldr	x21, [sp, #32]
  416954:	ldp	x29, x30, [sp], #48
  416958:	ret
  41695c:	str	x5, [x0, x3]
  416960:	subs	x1, x1, #0x1
  416964:	b.pl	416920 <_obstack_memory_used@@Base+0x3220>  // b.nfrst
  416968:	lsl	x2, x2, #3
  41696c:	add	x1, x0, x21, lsl #3
  416970:	b	41688c <_obstack_memory_used@@Base+0x318c>
  416974:	mov	w0, #0xc                   	// #12
  416978:	b	41694c <_obstack_memory_used@@Base+0x324c>
  41697c:	stp	x29, x30, [sp, #-144]!
  416980:	mov	x29, sp
  416984:	stp	x21, x22, [sp, #32]
  416988:	mov	x22, #0x18                  	// #24
  41698c:	stp	x23, x24, [sp, #48]
  416990:	mov	x23, x0
  416994:	mul	x22, x2, x22
  416998:	ldr	x0, [x1, #40]
  41699c:	stp	x19, x20, [sp, #16]
  4169a0:	mov	x19, x1
  4169a4:	add	x0, x0, x22
  4169a8:	mov	x20, x2
  4169ac:	stp	x25, x26, [sp, #64]
  4169b0:	and	w26, w3, #0xff
  4169b4:	ldr	x1, [x0, #8]
  4169b8:	add	x0, sp, #0x60
  4169bc:	stp	x27, x28, [sp, #80]
  4169c0:	add	x1, x1, #0x1
  4169c4:	bl	414000 <_obstack_memory_used@@Base+0x900>
  4169c8:	mov	w21, w0
  4169cc:	cbnz	w0, 416a48 <_obstack_memory_used@@Base+0x3348>
  4169d0:	ldr	x0, [x19, #48]
  4169d4:	mov	x1, #0xffffffffffffffff    	// #-1
  4169d8:	lsl	x24, x20, #4
  4169dc:	add	x0, x0, x22
  4169e0:	str	x1, [x0, #8]
  4169e4:	ldr	x1, [x19]
  4169e8:	add	x0, x1, x20, lsl #4
  4169ec:	ldr	w4, [x0, #8]
  4169f0:	tst	w4, #0x3ff00
  4169f4:	b.ne	416a68 <_obstack_memory_used@@Base+0x3368>  // b.any
  4169f8:	ldr	x0, [x19]
  4169fc:	add	x0, x0, x24
  416a00:	mov	w24, #0x0                   	// #0
  416a04:	ldrb	w0, [x0, #8]
  416a08:	tbnz	w0, #3, 416b48 <_obstack_memory_used@@Base+0x3448>
  416a0c:	mov	x1, x20
  416a10:	add	x0, sp, #0x60
  416a14:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  416a18:	tst	w0, #0xff
  416a1c:	b.eq	416b68 <_obstack_memory_used@@Base+0x3468>  // b.none
  416a20:	ldr	x0, [x19, #48]
  416a24:	eor	w26, w26, #0x1
  416a28:	tst	w24, w26
  416a2c:	add	x22, x0, x22
  416a30:	b.eq	416b54 <_obstack_memory_used@@Base+0x3454>  // b.none
  416a34:	str	xzr, [x22, #8]
  416a38:	ldp	x0, x1, [sp, #96]
  416a3c:	stp	x0, x1, [x23]
  416a40:	ldr	x0, [sp, #112]
  416a44:	str	x0, [x23, #16]
  416a48:	mov	w0, w21
  416a4c:	ldp	x19, x20, [sp, #16]
  416a50:	ldp	x21, x22, [sp, #32]
  416a54:	ldp	x23, x24, [sp, #48]
  416a58:	ldp	x25, x26, [sp, #64]
  416a5c:	ldp	x27, x28, [sp, #80]
  416a60:	ldp	x29, x30, [sp], #144
  416a64:	ret
  416a68:	ldr	x0, [x19, #40]
  416a6c:	add	x0, x0, x22
  416a70:	ldr	x2, [x0, #8]
  416a74:	cbz	x2, 4169f8 <_obstack_memory_used@@Base+0x32f8>
  416a78:	ldr	x0, [x0, #16]
  416a7c:	ldr	x0, [x0]
  416a80:	add	x0, x1, x0, lsl #4
  416a84:	ldrb	w0, [x0, #10]
  416a88:	tbnz	w0, #2, 4169f8 <_obstack_memory_used@@Base+0x32f8>
  416a8c:	ubfx	x4, x4, #8, #10
  416a90:	mov	x3, x20
  416a94:	mov	x2, x20
  416a98:	mov	x1, x20
  416a9c:	mov	x0, x19
  416aa0:	bl	4164fc <_obstack_memory_used@@Base+0x2dfc>
  416aa4:	cbz	w0, 4169f8 <_obstack_memory_used@@Base+0x32f8>
  416aa8:	mov	w21, w0
  416aac:	b	416a48 <_obstack_memory_used@@Base+0x3348>
  416ab0:	ldr	x0, [x0, #16]
  416ab4:	ldr	x2, [x0, x25, lsl #3]
  416ab8:	ldr	x0, [x19, #48]
  416abc:	mul	x27, x2, x28
  416ac0:	add	x0, x0, x27
  416ac4:	ldr	x1, [x0, #8]
  416ac8:	cmn	x1, #0x1
  416acc:	b.ne	416af0 <_obstack_memory_used@@Base+0x33f0>  // b.any
  416ad0:	mov	w24, #0x1                   	// #1
  416ad4:	add	x25, x25, #0x1
  416ad8:	ldr	x0, [x19, #40]
  416adc:	add	x0, x0, x22
  416ae0:	ldr	x1, [x0, #8]
  416ae4:	cmp	x1, x25
  416ae8:	b.gt	416ab0 <_obstack_memory_used@@Base+0x33b0>
  416aec:	b	416a0c <_obstack_memory_used@@Base+0x330c>
  416af0:	cbnz	x1, 416b34 <_obstack_memory_used@@Base+0x3434>
  416af4:	mov	x1, x19
  416af8:	add	x0, sp, #0x78
  416afc:	mov	w3, #0x0                   	// #0
  416b00:	bl	41697c <_obstack_memory_used@@Base+0x327c>
  416b04:	cbnz	w0, 416aa8 <_obstack_memory_used@@Base+0x33a8>
  416b08:	add	x1, sp, #0x78
  416b0c:	add	x0, sp, #0x60
  416b10:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  416b14:	cbnz	w0, 416aa8 <_obstack_memory_used@@Base+0x33a8>
  416b18:	ldr	x0, [x19, #48]
  416b1c:	add	x27, x0, x27
  416b20:	ldr	x0, [x27, #8]
  416b24:	cbnz	x0, 416ad4 <_obstack_memory_used@@Base+0x33d4>
  416b28:	ldr	x0, [sp, #136]
  416b2c:	bl	4027a0 <free@plt>
  416b30:	b	416ad0 <_obstack_memory_used@@Base+0x33d0>
  416b34:	ldp	x2, x3, [x0]
  416b38:	stp	x2, x3, [sp, #120]
  416b3c:	ldr	x0, [x0, #16]
  416b40:	str	x0, [sp, #136]
  416b44:	b	416b08 <_obstack_memory_used@@Base+0x3408>
  416b48:	mov	x25, #0x0                   	// #0
  416b4c:	mov	x28, #0x18                  	// #24
  416b50:	b	416ad8 <_obstack_memory_used@@Base+0x33d8>
  416b54:	ldp	x0, x1, [sp, #96]
  416b58:	stp	x0, x1, [x22]
  416b5c:	ldr	x0, [sp, #112]
  416b60:	str	x0, [x22, #16]
  416b64:	b	416a38 <_obstack_memory_used@@Base+0x3338>
  416b68:	mov	w21, #0xc                   	// #12
  416b6c:	b	416a48 <_obstack_memory_used@@Base+0x3348>
  416b70:	stp	x29, x30, [sp, #-48]!
  416b74:	mov	x29, sp
  416b78:	stp	x19, x20, [sp, #16]
  416b7c:	mov	x19, x0
  416b80:	ldr	x2, [x1, #8]
  416b84:	str	x21, [sp, #32]
  416b88:	str	x2, [x0, #8]
  416b8c:	cmp	x2, #0x0
  416b90:	b.le	416bdc <_obstack_memory_used@@Base+0x34dc>
  416b94:	str	x2, [x19]
  416b98:	lsl	x20, x2, #3
  416b9c:	mov	x21, x1
  416ba0:	mov	x0, x20
  416ba4:	bl	402520 <malloc@plt>
  416ba8:	str	x0, [x19, #16]
  416bac:	cbnz	x0, 416bc8 <_obstack_memory_used@@Base+0x34c8>
  416bb0:	mov	w0, #0xc                   	// #12
  416bb4:	stp	xzr, xzr, [x19]
  416bb8:	ldp	x19, x20, [sp, #16]
  416bbc:	ldr	x21, [sp, #32]
  416bc0:	ldp	x29, x30, [sp], #48
  416bc4:	ret
  416bc8:	ldr	x1, [x21, #16]
  416bcc:	mov	x2, x20
  416bd0:	bl	402360 <memcpy@plt>
  416bd4:	mov	w0, #0x0                   	// #0
  416bd8:	b	416bb8 <_obstack_memory_used@@Base+0x34b8>
  416bdc:	stp	xzr, xzr, [x0]
  416be0:	str	xzr, [x0, #16]
  416be4:	b	416bd4 <_obstack_memory_used@@Base+0x34d4>
  416be8:	stp	x29, x30, [sp, #-64]!
  416bec:	mov	x29, sp
  416bf0:	stp	x19, x20, [sp, #16]
  416bf4:	mov	x19, x0
  416bf8:	stp	x21, x22, [sp, #32]
  416bfc:	mov	x21, x2
  416c00:	str	x23, [sp, #48]
  416c04:	cbz	x1, 416c64 <_obstack_memory_used@@Base+0x3564>
  416c08:	ldr	x22, [x1, #8]
  416c0c:	mov	x23, x1
  416c10:	cmp	x22, #0x0
  416c14:	b.le	416c64 <_obstack_memory_used@@Base+0x3564>
  416c18:	cbz	x2, 416c48 <_obstack_memory_used@@Base+0x3548>
  416c1c:	ldr	x20, [x2, #8]
  416c20:	cmp	x20, #0x0
  416c24:	b.le	416c48 <_obstack_memory_used@@Base+0x3548>
  416c28:	add	x0, x22, x20
  416c2c:	str	x0, [x19]
  416c30:	lsl	x0, x0, #3
  416c34:	bl	402520 <malloc@plt>
  416c38:	str	x0, [x19, #16]
  416c3c:	cbnz	x0, 416c9c <_obstack_memory_used@@Base+0x359c>
  416c40:	mov	w0, #0xc                   	// #12
  416c44:	b	416c88 <_obstack_memory_used@@Base+0x3588>
  416c48:	mov	x1, x23
  416c4c:	mov	x0, x19
  416c50:	ldp	x19, x20, [sp, #16]
  416c54:	ldp	x21, x22, [sp, #32]
  416c58:	ldr	x23, [sp, #48]
  416c5c:	ldp	x29, x30, [sp], #64
  416c60:	b	416b70 <_obstack_memory_used@@Base+0x3470>
  416c64:	cbz	x21, 416c7c <_obstack_memory_used@@Base+0x357c>
  416c68:	ldr	x0, [x21, #8]
  416c6c:	cmp	x0, #0x0
  416c70:	b.le	416c7c <_obstack_memory_used@@Base+0x357c>
  416c74:	mov	x1, x21
  416c78:	b	416c4c <_obstack_memory_used@@Base+0x354c>
  416c7c:	stp	xzr, xzr, [x19]
  416c80:	str	xzr, [x19, #16]
  416c84:	mov	w0, #0x0                   	// #0
  416c88:	ldp	x19, x20, [sp, #16]
  416c8c:	ldp	x21, x22, [sp, #32]
  416c90:	ldr	x23, [sp, #48]
  416c94:	ldp	x29, x30, [sp], #64
  416c98:	ret
  416c9c:	ldr	x5, [x23, #16]
  416ca0:	mov	x3, #0x0                   	// #0
  416ca4:	mov	x4, #0x0                   	// #0
  416ca8:	ldr	x1, [x21, #16]
  416cac:	mov	x21, #0x0                   	// #0
  416cb0:	ldr	x7, [x5, x4, lsl #3]
  416cb4:	mov	x6, x21
  416cb8:	ldr	x8, [x1, x3, lsl #3]
  416cbc:	add	x21, x21, #0x1
  416cc0:	mov	x2, x21
  416cc4:	cmp	x7, x8
  416cc8:	b.le	416d04 <_obstack_memory_used@@Base+0x3604>
  416ccc:	add	x3, x3, #0x1
  416cd0:	str	x8, [x0, x6, lsl #3]
  416cd4:	cmp	x22, x4
  416cd8:	b.le	416d18 <_obstack_memory_used@@Base+0x3618>
  416cdc:	cmp	x20, x3
  416ce0:	b.gt	416cb0 <_obstack_memory_used@@Base+0x35b0>
  416ce4:	sub	x22, x22, x4
  416ce8:	add	x1, x5, x4, lsl #3
  416cec:	add	x0, x0, x21, lsl #3
  416cf0:	lsl	x2, x22, #3
  416cf4:	bl	402360 <memcpy@plt>
  416cf8:	add	x2, x21, x22
  416cfc:	str	x2, [x19, #8]
  416d00:	b	416c84 <_obstack_memory_used@@Base+0x3584>
  416d04:	cset	x8, eq  // eq = none
  416d08:	add	x4, x4, #0x1
  416d0c:	add	x3, x3, x8
  416d10:	str	x7, [x0, x6, lsl #3]
  416d14:	b	416cd4 <_obstack_memory_used@@Base+0x35d4>
  416d18:	cmp	x20, x3
  416d1c:	b.le	416cfc <_obstack_memory_used@@Base+0x35fc>
  416d20:	sub	x20, x20, x3
  416d24:	add	x1, x1, x3, lsl #3
  416d28:	add	x0, x0, x21, lsl #3
  416d2c:	lsl	x2, x20, #3
  416d30:	bl	402360 <memcpy@plt>
  416d34:	add	x2, x21, x20
  416d38:	b	416cfc <_obstack_memory_used@@Base+0x35fc>
  416d3c:	stp	x29, x30, [sp, #-112]!
  416d40:	mov	x29, sp
  416d44:	stp	x21, x22, [sp, #32]
  416d48:	mov	x21, x1
  416d4c:	ldr	x1, [x2, #8]
  416d50:	stp	x19, x20, [sp, #16]
  416d54:	stp	x23, x24, [sp, #48]
  416d58:	mov	x23, x0
  416d5c:	stp	x25, x26, [sp, #64]
  416d60:	stp	x27, x28, [sp, #80]
  416d64:	cbnz	x1, 416d74 <_obstack_memory_used@@Base+0x3674>
  416d68:	str	wzr, [x0]
  416d6c:	mov	x19, #0x0                   	// #0
  416d70:	b	416e8c <_obstack_memory_used@@Base+0x378c>
  416d74:	mov	x27, x2
  416d78:	mov	w20, w3
  416d7c:	add	x22, x1, w3, uxtw
  416d80:	mov	x0, #0x0                   	// #0
  416d84:	cmp	x1, x0
  416d88:	b.gt	416df0 <_obstack_memory_used@@Base+0x36f0>
  416d8c:	ldr	x0, [x21, #136]
  416d90:	mov	x1, #0x18                  	// #24
  416d94:	mov	x7, #0x0                   	// #0
  416d98:	and	x0, x22, x0
  416d9c:	mul	x0, x0, x1
  416da0:	ldr	x1, [x21, #64]
  416da4:	add	x9, x1, x0
  416da8:	ldr	x8, [x1, x0]
  416dac:	cmp	x8, x7
  416db0:	b.gt	416e04 <_obstack_memory_used@@Base+0x3704>
  416db4:	mov	x1, #0x1                   	// #1
  416db8:	mov	x0, #0x70                  	// #112
  416dbc:	bl	402610 <calloc@plt>
  416dc0:	mov	x19, x0
  416dc4:	cbz	x0, 416de4 <_obstack_memory_used@@Base+0x36e4>
  416dc8:	add	x24, x0, #0x8
  416dcc:	mov	x1, x27
  416dd0:	mov	x0, x24
  416dd4:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  416dd8:	cbz	w0, 416e44 <_obstack_memory_used@@Base+0x3744>
  416ddc:	mov	x0, x19
  416de0:	bl	4027a0 <free@plt>
  416de4:	mov	w0, #0xc                   	// #12
  416de8:	str	w0, [x23]
  416dec:	b	416d6c <_obstack_memory_used@@Base+0x366c>
  416df0:	ldr	x2, [x27, #16]
  416df4:	ldr	x2, [x2, x0, lsl #3]
  416df8:	add	x0, x0, #0x1
  416dfc:	add	x22, x22, x2
  416e00:	b	416d84 <_obstack_memory_used@@Base+0x3684>
  416e04:	ldr	x0, [x9, #16]
  416e08:	ldr	x19, [x0, x7, lsl #3]
  416e0c:	ldr	x0, [x19]
  416e10:	cmp	x0, x22
  416e14:	b.ne	416e3c <_obstack_memory_used@@Base+0x373c>  // b.any
  416e18:	ldrb	w0, [x19, #104]
  416e1c:	and	w0, w0, #0xf
  416e20:	cmp	w0, w20
  416e24:	b.ne	416e3c <_obstack_memory_used@@Base+0x373c>  // b.any
  416e28:	ldr	x0, [x19, #80]
  416e2c:	mov	x1, x27
  416e30:	bl	41382c <_obstack_memory_used@@Base+0x12c>
  416e34:	tst	w0, #0xff
  416e38:	b.ne	416e8c <_obstack_memory_used@@Base+0x378c>  // b.any
  416e3c:	add	x7, x7, #0x1
  416e40:	b	416dac <_obstack_memory_used@@Base+0x36ac>
  416e44:	ldrb	w0, [x19, #104]
  416e48:	and	w26, w20, #0x2
  416e4c:	mov	x5, #0x0                   	// #0
  416e50:	mov	x25, #0x0                   	// #0
  416e54:	str	x24, [x19, #80]
  416e58:	bfxil	w0, w20, #0, #4
  416e5c:	strb	w0, [x19, #104]
  416e60:	and	w0, w20, #0x4
  416e64:	and	w20, w20, #0x1
  416e68:	str	w0, [sp, #108]
  416e6c:	ldr	x0, [x27, #8]
  416e70:	cmp	x25, x0
  416e74:	b.lt	416eac <_obstack_memory_used@@Base+0x37ac>  // b.tstop
  416e78:	mov	x2, x22
  416e7c:	mov	x1, x19
  416e80:	mov	x0, x21
  416e84:	bl	416718 <_obstack_memory_used@@Base+0x3018>
  416e88:	cbnz	w0, 416f1c <_obstack_memory_used@@Base+0x381c>
  416e8c:	mov	x0, x19
  416e90:	ldp	x19, x20, [sp, #16]
  416e94:	ldp	x21, x22, [sp, #32]
  416e98:	ldp	x23, x24, [sp, #48]
  416e9c:	ldp	x25, x26, [sp, #64]
  416ea0:	ldp	x27, x28, [sp, #80]
  416ea4:	ldp	x29, x30, [sp], #112
  416ea8:	ret
  416eac:	ldr	x0, [x27, #16]
  416eb0:	ldr	x1, [x21]
  416eb4:	ldr	x0, [x0, x25, lsl #3]
  416eb8:	add	x0, x1, x0, lsl #4
  416ebc:	ldr	w28, [x0, #8]
  416ec0:	ldrb	w1, [x0, #8]
  416ec4:	ubfx	x28, x28, #8, #10
  416ec8:	cmp	w28, #0x0
  416ecc:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  416ed0:	b.eq	416f8c <_obstack_memory_used@@Base+0x388c>  // b.none
  416ed4:	ldrb	w3, [x19, #104]
  416ed8:	cmp	w1, #0x2
  416edc:	ldrb	w0, [x0, #10]
  416ee0:	ubfx	x4, x3, #5, #1
  416ee4:	ubfx	x0, x0, #4, #1
  416ee8:	orr	w0, w4, w0
  416eec:	bfi	w3, w0, #5, #1
  416ef0:	strb	w3, [x19, #104]
  416ef4:	b.ne	416f28 <_obstack_memory_used@@Base+0x3828>  // b.any
  416ef8:	orr	w3, w3, #0x10
  416efc:	strb	w3, [x19, #104]
  416f00:	cbz	w28, 416f8c <_obstack_memory_used@@Base+0x388c>
  416f04:	ldr	x0, [x19, #80]
  416f08:	cmp	x24, x0
  416f0c:	b.ne	416f58 <_obstack_memory_used@@Base+0x3858>  // b.any
  416f10:	mov	x0, #0x18                  	// #24
  416f14:	bl	402520 <malloc@plt>
  416f18:	cbnz	x0, 416f38 <_obstack_memory_used@@Base+0x3838>
  416f1c:	mov	x0, x19
  416f20:	bl	414b44 <_obstack_memory_used@@Base+0x1444>
  416f24:	b	416de4 <_obstack_memory_used@@Base+0x36e4>
  416f28:	cmp	w1, #0x4
  416f2c:	b.ne	416f00 <_obstack_memory_used@@Base+0x3800>  // b.any
  416f30:	orr	w3, w3, #0x40
  416f34:	b	416efc <_obstack_memory_used@@Base+0x37fc>
  416f38:	str	x0, [x19, #80]
  416f3c:	mov	x1, x27
  416f40:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  416f44:	cbnz	w0, 416f1c <_obstack_memory_used@@Base+0x381c>
  416f48:	ldrb	w0, [x19, #104]
  416f4c:	mov	x5, #0x0                   	// #0
  416f50:	orr	w0, w0, #0xffffff80
  416f54:	strb	w0, [x19, #104]
  416f58:	tbz	w28, #0, 416f60 <_obstack_memory_used@@Base+0x3860>
  416f5c:	cbz	w20, 416f7c <_obstack_memory_used@@Base+0x387c>
  416f60:	tbz	w28, #1, 416f68 <_obstack_memory_used@@Base+0x3868>
  416f64:	cbnz	w20, 416f7c <_obstack_memory_used@@Base+0x387c>
  416f68:	tbz	w28, #4, 416f70 <_obstack_memory_used@@Base+0x3870>
  416f6c:	cbz	w26, 416f7c <_obstack_memory_used@@Base+0x387c>
  416f70:	tbz	w28, #6, 416f8c <_obstack_memory_used@@Base+0x388c>
  416f74:	ldr	w0, [sp, #108]
  416f78:	cbnz	w0, 416f8c <_obstack_memory_used@@Base+0x388c>
  416f7c:	sub	x1, x25, x5
  416f80:	mov	x0, x24
  416f84:	bl	415cf4 <_obstack_memory_used@@Base+0x25f4>
  416f88:	add	x5, x5, #0x1
  416f8c:	add	x25, x25, #0x1
  416f90:	b	416e6c <_obstack_memory_used@@Base+0x376c>
  416f94:	stp	x29, x30, [sp, #-48]!
  416f98:	mov	x29, sp
  416f9c:	stp	x19, x20, [sp, #16]
  416fa0:	ldr	x20, [x1, #8]
  416fa4:	stp	x21, x22, [sp, #32]
  416fa8:	cbz	x20, 4170bc <_obstack_memory_used@@Base+0x39bc>
  416fac:	mov	x19, x0
  416fb0:	mov	x22, x2
  416fb4:	ldr	x0, [x2, #8]
  416fb8:	cbz	x0, 4170bc <_obstack_memory_used@@Base+0x39bc>
  416fbc:	add	x20, x20, x0
  416fc0:	mov	x21, x1
  416fc4:	ldp	x1, x0, [x19]
  416fc8:	add	x0, x20, x0
  416fcc:	cmp	x0, x1
  416fd0:	b.le	416ff0 <_obstack_memory_used@@Base+0x38f0>
  416fd4:	ldr	x0, [x19, #16]
  416fd8:	add	x20, x20, x1
  416fdc:	lsl	x1, x20, #3
  416fe0:	bl	402640 <realloc@plt>
  416fe4:	cbz	x0, 4170f8 <_obstack_memory_used@@Base+0x39f8>
  416fe8:	str	x20, [x19]
  416fec:	str	x0, [x19, #16]
  416ff0:	ldp	x0, x6, [x21, #8]
  416ff4:	ldp	x3, x7, [x22, #8]
  416ff8:	ldr	x5, [x19, #8]
  416ffc:	add	x4, x5, x0
  417000:	sub	x0, x0, #0x1
  417004:	add	x4, x4, x3
  417008:	sub	x5, x5, #0x1
  41700c:	sub	x3, x3, #0x1
  417010:	ldr	x1, [x6, x0, lsl #3]
  417014:	ldr	x2, [x7, x3, lsl #3]
  417018:	cmp	x1, x2
  41701c:	b.ne	4170d8 <_obstack_memory_used@@Base+0x39d8>  // b.any
  417020:	ldr	x2, [x19, #16]
  417024:	tbnz	x5, #63, 417038 <_obstack_memory_used@@Base+0x3938>
  417028:	ldr	x8, [x2, x5, lsl #3]
  41702c:	cmp	x1, x8
  417030:	b.lt	4170d0 <_obstack_memory_used@@Base+0x39d0>  // b.tstop
  417034:	b.eq	417040 <_obstack_memory_used@@Base+0x3940>  // b.none
  417038:	sub	x4, x4, #0x1
  41703c:	str	x1, [x2, x4, lsl #3]
  417040:	subs	x0, x0, #0x1
  417044:	b.mi	417050 <_obstack_memory_used@@Base+0x3950>  // b.first
  417048:	subs	x3, x3, #0x1
  41704c:	b.pl	417010 <_obstack_memory_used@@Base+0x3910>  // b.nfrst
  417050:	ldr	x0, [x19, #8]
  417054:	ldr	x3, [x21, #8]
  417058:	sub	x1, x0, #0x1
  41705c:	ldr	x2, [x22, #8]
  417060:	add	x3, x0, x3
  417064:	add	x2, x3, x2
  417068:	sub	x5, x2, #0x1
  41706c:	sub	x2, x2, x4
  417070:	add	x0, x0, x2
  417074:	str	x0, [x19, #8]
  417078:	cmp	x2, #0x0
  41707c:	ccmp	x1, #0x0, #0x1, gt
  417080:	ldr	x0, [x19, #16]
  417084:	b.lt	4170b0 <_obstack_memory_used@@Base+0x39b0>  // b.tstop
  417088:	ldr	x7, [x0, x5, lsl #3]
  41708c:	add	x3, x1, x2
  417090:	ldr	x6, [x0, x1, lsl #3]
  417094:	lsl	x3, x3, #3
  417098:	cmp	x7, x6
  41709c:	b.le	4170e4 <_obstack_memory_used@@Base+0x39e4>
  4170a0:	str	x7, [x0, x3]
  4170a4:	sub	x5, x5, #0x1
  4170a8:	subs	x2, x2, #0x1
  4170ac:	b.ne	417088 <_obstack_memory_used@@Base+0x3988>  // b.any
  4170b0:	lsl	x2, x2, #3
  4170b4:	add	x1, x0, x4, lsl #3
  4170b8:	bl	402360 <memcpy@plt>
  4170bc:	mov	w0, #0x0                   	// #0
  4170c0:	ldp	x19, x20, [sp, #16]
  4170c4:	ldp	x21, x22, [sp, #32]
  4170c8:	ldp	x29, x30, [sp], #48
  4170cc:	ret
  4170d0:	sub	x5, x5, #0x1
  4170d4:	b	417024 <_obstack_memory_used@@Base+0x3924>
  4170d8:	b.lt	417048 <_obstack_memory_used@@Base+0x3948>  // b.tstop
  4170dc:	subs	x0, x0, #0x1
  4170e0:	b	41704c <_obstack_memory_used@@Base+0x394c>
  4170e4:	str	x6, [x0, x3]
  4170e8:	sub	x1, x1, #0x1
  4170ec:	cmn	x1, #0x1
  4170f0:	b.ne	417088 <_obstack_memory_used@@Base+0x3988>  // b.any
  4170f4:	b	4170b0 <_obstack_memory_used@@Base+0x39b0>
  4170f8:	mov	w0, #0xc                   	// #12
  4170fc:	b	4170c0 <_obstack_memory_used@@Base+0x39c0>
  417100:	stp	x29, x30, [sp, #-112]!
  417104:	mov	x29, sp
  417108:	stp	x19, x20, [sp, #16]
  41710c:	mov	x20, x2
  417110:	ldr	x19, [x0, #56]
  417114:	stp	x25, x26, [sp, #64]
  417118:	mov	x25, #0x18                  	// #24
  41711c:	mov	x26, x3
  417120:	stp	x21, x22, [sp, #32]
  417124:	madd	x19, x1, x25, x19
  417128:	mov	x21, x0
  41712c:	stp	x23, x24, [sp, #48]
  417130:	mov	x24, x1
  417134:	mov	x23, #0x0                   	// #0
  417138:	stp	xzr, xzr, [sp, #88]
  41713c:	str	xzr, [sp, #104]
  417140:	ldr	x0, [x19, #8]
  417144:	cmp	x0, x23
  417148:	b.gt	41716c <_obstack_memory_used@@Base+0x3a6c>
  41714c:	mov	x6, #0x0                   	// #0
  417150:	ldr	x0, [x19, #8]
  417154:	cmp	x0, x6
  417158:	b.gt	41723c <_obstack_memory_used@@Base+0x3b3c>
  41715c:	ldr	x0, [sp, #104]
  417160:	mov	w22, #0x0                   	// #0
  417164:	bl	4027a0 <free@plt>
  417168:	b	417210 <_obstack_memory_used@@Base+0x3b10>
  41716c:	ldr	x0, [x19, #16]
  417170:	ldr	x2, [x0, x23, lsl #3]
  417174:	cmp	x24, x2
  417178:	b.eq	417234 <_obstack_memory_used@@Base+0x3b34>  // b.none
  41717c:	ldr	x0, [x21]
  417180:	add	x0, x0, x2, lsl #4
  417184:	ldrb	w0, [x0, #8]
  417188:	tbz	w0, #3, 417234 <_obstack_memory_used@@Base+0x3b34>
  41718c:	ldr	x0, [x21, #40]
  417190:	mul	x6, x2, x25
  417194:	add	x0, x0, x6
  417198:	ldr	x2, [x0, #16]
  41719c:	ldr	x0, [x0, #8]
  4171a0:	ldr	x1, [x2]
  4171a4:	cmp	x0, #0x1
  4171a8:	b.le	41722c <_obstack_memory_used@@Base+0x3b2c>
  4171ac:	ldr	x7, [x2, #8]
  4171b0:	mov	x0, x19
  4171b4:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4171b8:	cbnz	x0, 4171c8 <_obstack_memory_used@@Base+0x3ac8>
  4171bc:	mov	x0, x20
  4171c0:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4171c4:	cbnz	x0, 4171ec <_obstack_memory_used@@Base+0x3aec>
  4171c8:	cmp	x7, #0x0
  4171cc:	b.le	417234 <_obstack_memory_used@@Base+0x3b34>
  4171d0:	mov	x1, x7
  4171d4:	mov	x0, x19
  4171d8:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4171dc:	cbnz	x0, 417234 <_obstack_memory_used@@Base+0x3b34>
  4171e0:	mov	x0, x20
  4171e4:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4171e8:	cbz	x0, 417234 <_obstack_memory_used@@Base+0x3b34>
  4171ec:	ldr	x2, [x21, #56]
  4171f0:	mov	x1, x26
  4171f4:	add	x0, sp, #0x58
  4171f8:	add	x2, x2, x6
  4171fc:	bl	416f94 <_obstack_memory_used@@Base+0x3894>
  417200:	mov	w22, w0
  417204:	cbz	w0, 417234 <_obstack_memory_used@@Base+0x3b34>
  417208:	ldr	x0, [sp, #104]
  41720c:	bl	4027a0 <free@plt>
  417210:	mov	w0, w22
  417214:	ldp	x19, x20, [sp, #16]
  417218:	ldp	x21, x22, [sp, #32]
  41721c:	ldp	x23, x24, [sp, #48]
  417220:	ldp	x25, x26, [sp, #64]
  417224:	ldp	x29, x30, [sp], #112
  417228:	ret
  41722c:	mov	x7, #0xffffffffffffffff    	// #-1
  417230:	b	4171b0 <_obstack_memory_used@@Base+0x3ab0>
  417234:	add	x23, x23, #0x1
  417238:	b	417140 <_obstack_memory_used@@Base+0x3a40>
  41723c:	ldr	x0, [x19, #16]
  417240:	ldr	x1, [x0, x6, lsl #3]
  417244:	add	x0, sp, #0x58
  417248:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41724c:	cbnz	x0, 417264 <_obstack_memory_used@@Base+0x3b64>
  417250:	mov	x0, x20
  417254:	bl	413888 <_obstack_memory_used@@Base+0x188>
  417258:	sub	x1, x0, #0x1
  41725c:	mov	x0, x20
  417260:	bl	415cf4 <_obstack_memory_used@@Base+0x25f4>
  417264:	add	x6, x6, #0x1
  417268:	b	417150 <_obstack_memory_used@@Base+0x3a50>
  41726c:	stp	x29, x30, [sp, #-32]!
  417270:	mov	x29, sp
  417274:	stp	x19, x20, [sp, #16]
  417278:	mov	x19, x1
  41727c:	ldrb	w1, [x1, #48]
  417280:	cmp	w1, #0x10
  417284:	b.ne	4172a4 <_obstack_memory_used@@Base+0x3ba4>  // b.any
  417288:	ldr	x0, [x19, #8]
  41728c:	ldr	x1, [x0, #24]
  417290:	ldr	x0, [x0, #56]
  417294:	str	x1, [x19, #24]
  417298:	str	x0, [x19, #56]
  41729c:	mov	w0, #0x0                   	// #0
  4172a0:	b	4172ec <_obstack_memory_used@@Base+0x3bec>
  4172a4:	ldp	x1, x2, [x19, #40]
  4172a8:	str	x19, [x19, #24]
  4172ac:	mov	x20, x0
  4172b0:	bl	414910 <_obstack_memory_used@@Base+0x1210>
  4172b4:	str	x0, [x19, #56]
  4172b8:	cmn	x0, #0x1
  4172bc:	b.eq	4172e8 <_obstack_memory_used@@Base+0x3be8>  // b.none
  4172c0:	ldrb	w1, [x19, #48]
  4172c4:	cmp	w1, #0xc
  4172c8:	b.ne	41729c <_obstack_memory_used@@Base+0x3b9c>  // b.any
  4172cc:	ldr	x1, [x20]
  4172d0:	ldr	w2, [x19, #40]
  4172d4:	add	x0, x1, x0, lsl #4
  4172d8:	ldr	w1, [x0, #8]
  4172dc:	bfi	w1, w2, #8, #10
  4172e0:	str	w1, [x0, #8]
  4172e4:	b	41729c <_obstack_memory_used@@Base+0x3b9c>
  4172e8:	mov	w0, #0xc                   	// #12
  4172ec:	ldp	x19, x20, [sp, #16]
  4172f0:	ldp	x29, x30, [sp], #32
  4172f4:	ret
  4172f8:	cbnz	x0, 417350 <_obstack_memory_used@@Base+0x3c50>
  4172fc:	mov	w0, #0x0                   	// #0
  417300:	ret
  417304:	mul	x21, x20, x22
  417308:	add	x20, x20, #0x1
  41730c:	add	x0, x0, x21
  417310:	ldr	x0, [x0, #40]
  417314:	bl	4027a0 <free@plt>
  417318:	ldr	x0, [x19, #16]
  41731c:	add	x0, x0, x21
  417320:	ldr	x0, [x0, #16]
  417324:	bl	4027a0 <free@plt>
  417328:	ldr	x1, [x19]
  41732c:	ldr	x0, [x19, #16]
  417330:	cmp	x20, x1
  417334:	b.lt	417304 <_obstack_memory_used@@Base+0x3c04>  // b.tstop
  417338:	bl	4027a0 <free@plt>
  41733c:	mov	w0, #0x0                   	// #0
  417340:	ldp	x19, x20, [sp, #16]
  417344:	ldp	x21, x22, [sp, #32]
  417348:	ldp	x29, x30, [sp], #48
  41734c:	ret
  417350:	stp	x29, x30, [sp, #-48]!
  417354:	mov	x29, sp
  417358:	stp	x19, x20, [sp, #16]
  41735c:	mov	x19, x0
  417360:	mov	x20, #0x0                   	// #0
  417364:	stp	x21, x22, [sp, #32]
  417368:	mov	x22, #0x30                  	// #48
  41736c:	b	417328 <_obstack_memory_used@@Base+0x3c28>
  417370:	stp	x29, x30, [sp, #-32]!
  417374:	mov	x7, x0
  417378:	mov	x6, x1
  41737c:	mov	x29, sp
  417380:	mov	x0, x1
  417384:	ldr	x1, [x1, #72]
  417388:	mov	x9, x2
  41738c:	mov	w8, w3
  417390:	mov	x11, x4
  417394:	and	w12, w5, #0xff
  417398:	bl	415a38 <_obstack_memory_used@@Base+0x2338>
  41739c:	cmp	w0, #0x1
  4173a0:	b.le	4173cc <_obstack_memory_used@@Base+0x3ccc>
  4173a4:	mov	w10, w0
  4173a8:	mov	w0, #0x1                   	// #1
  4173ac:	str	w0, [x7]
  4173b0:	mov	x0, x6
  4173b4:	bl	4137ac <_obstack_memory_used@@Base+0xac>
  4173b8:	str	w0, [x7, #8]
  4173bc:	add	x10, x1, w10, sxtw
  4173c0:	str	x10, [x6, #72]
  4173c4:	mov	w0, #0x0                   	// #0
  4173c8:	b	4173fc <_obstack_memory_used@@Base+0x3cfc>
  4173cc:	ldrb	w0, [x9, #8]
  4173d0:	add	x1, x1, w8, sxtw
  4173d4:	str	x1, [x6, #72]
  4173d8:	and	w2, w0, #0xfffffffb
  4173dc:	cmp	w2, #0x1a
  4173e0:	b.eq	4173ec <_obstack_memory_used@@Base+0x3cec>  // b.none
  4173e4:	cmp	w0, #0x1c
  4173e8:	b.ne	417528 <_obstack_memory_used@@Base+0x3e28>  // b.any
  4173ec:	ldr	x0, [x6, #104]
  4173f0:	cmp	x1, x0
  4173f4:	b.lt	417404 <_obstack_memory_used@@Base+0x3d04>  // b.tstop
  4173f8:	mov	w0, #0x7                   	// #7
  4173fc:	ldp	x29, x30, [sp], #32
  417400:	ret
  417404:	ldrb	w12, [x9]
  417408:	mov	x10, #0x0                   	// #0
  41740c:	ldrb	w0, [x9, #8]
  417410:	mov	w11, w10
  417414:	ldr	x1, [x6, #72]
  417418:	cmp	w0, #0x1e
  41741c:	b.ne	417428 <_obstack_memory_used@@Base+0x3d28>  // b.any
  417420:	ldrb	w0, [x6, #139]
  417424:	cbnz	w0, 417438 <_obstack_memory_used@@Base+0x3d38>
  417428:	add	x2, x1, #0x1
  41742c:	str	x2, [x6, #72]
  417430:	ldr	x0, [x6, #8]
  417434:	b	4174dc <_obstack_memory_used@@Base+0x3ddc>
  417438:	ldrb	w0, [x6, #140]
  41743c:	cbz	w0, 4174c8 <_obstack_memory_used@@Base+0x3dc8>
  417440:	ldr	x0, [x6, #48]
  417444:	cmp	x0, x1
  417448:	b.eq	41745c <_obstack_memory_used@@Base+0x3d5c>  // b.none
  41744c:	ldr	x0, [x6, #16]
  417450:	ldr	w0, [x0, x1, lsl #2]
  417454:	cmn	w0, #0x1
  417458:	b.eq	417428 <_obstack_memory_used@@Base+0x3d28>  // b.none
  41745c:	ldr	x2, [x6, #24]
  417460:	ldr	x0, [x6]
  417464:	ldr	x3, [x2, x1, lsl #3]
  417468:	ldr	x2, [x6, #40]
  41746c:	add	x0, x0, x3
  417470:	ldrb	w8, [x0, x2]
  417474:	tbnz	w8, #7, 417428 <_obstack_memory_used@@Base+0x3d28>
  417478:	mov	x0, x6
  41747c:	bl	415a38 <_obstack_memory_used@@Base+0x2338>
  417480:	add	x1, x1, w0, sxtw
  417484:	str	x1, [x6, #72]
  417488:	ldr	x0, [x6, #72]
  41748c:	ldr	x1, [x6, #104]
  417490:	cmp	x1, x0
  417494:	b.le	4173f8 <_obstack_memory_used@@Base+0x3cf8>
  417498:	cmp	w12, w8
  41749c:	ldr	x1, [x7, #8]
  4174a0:	b.ne	4174b4 <_obstack_memory_used@@Base+0x3db4>  // b.any
  4174a4:	ldr	x2, [x6, #8]
  4174a8:	ldrb	w2, [x2, x0]
  4174ac:	cmp	w2, #0x5d
  4174b0:	b.eq	4174e4 <_obstack_memory_used@@Base+0x3de4>  // b.none
  4174b4:	strb	w8, [x1, x10]
  4174b8:	add	x10, x10, #0x1
  4174bc:	cmp	x10, #0x20
  4174c0:	b.ne	41740c <_obstack_memory_used@@Base+0x3d0c>  // b.any
  4174c4:	b	4173f8 <_obstack_memory_used@@Base+0x3cf8>
  4174c8:	ldr	x0, [x6]
  4174cc:	add	x3, x1, #0x1
  4174d0:	ldr	x2, [x6, #40]
  4174d4:	str	x3, [x6, #72]
  4174d8:	add	x0, x0, x2
  4174dc:	ldrb	w8, [x0, x1]
  4174e0:	b	417488 <_obstack_memory_used@@Base+0x3d88>
  4174e4:	add	x0, x0, #0x1
  4174e8:	str	x0, [x6, #72]
  4174ec:	strb	wzr, [x1, w11, sxtw]
  4174f0:	ldrb	w0, [x9, #8]
  4174f4:	cmp	w0, #0x1c
  4174f8:	b.eq	417518 <_obstack_memory_used@@Base+0x3e18>  // b.none
  4174fc:	cmp	w0, #0x1e
  417500:	b.eq	417520 <_obstack_memory_used@@Base+0x3e20>  // b.none
  417504:	cmp	w0, #0x1a
  417508:	b.ne	4173c4 <_obstack_memory_used@@Base+0x3cc4>  // b.any
  41750c:	mov	w0, #0x3                   	// #3
  417510:	str	w0, [x7]
  417514:	b	4173c4 <_obstack_memory_used@@Base+0x3cc4>
  417518:	mov	w0, #0x2                   	// #2
  41751c:	b	417510 <_obstack_memory_used@@Base+0x3e10>
  417520:	mov	w0, #0x4                   	// #4
  417524:	b	417510 <_obstack_memory_used@@Base+0x3e10>
  417528:	cmp	w0, #0x16
  41752c:	b.ne	417558 <_obstack_memory_used@@Base+0x3e58>  // b.any
  417530:	cbnz	w12, 417558 <_obstack_memory_used@@Base+0x3e58>
  417534:	mov	x2, x11
  417538:	mov	x1, x6
  41753c:	add	x0, sp, #0x10
  417540:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  417544:	ldrb	w0, [sp, #24]
  417548:	cmp	w0, #0x15
  41754c:	b.eq	417558 <_obstack_memory_used@@Base+0x3e58>  // b.none
  417550:	mov	w0, #0xb                   	// #11
  417554:	b	4173fc <_obstack_memory_used@@Base+0x3cfc>
  417558:	ldrb	w0, [x9]
  41755c:	str	wzr, [x7]
  417560:	strb	w0, [x7, #8]
  417564:	b	4173c4 <_obstack_memory_used@@Base+0x3cc4>
  417568:	stp	x29, x30, [sp, #-96]!
  41756c:	mov	x29, sp
  417570:	stp	x19, x20, [sp, #16]
  417574:	mov	x19, x0
  417578:	stp	x25, x26, [sp, #64]
  41757c:	ldr	x25, [x1, #72]
  417580:	stp	x21, x22, [sp, #32]
  417584:	ldr	x0, [x1, #104]
  417588:	stp	x23, x24, [sp, #48]
  41758c:	cmp	x0, x25
  417590:	b.gt	4175b8 <_obstack_memory_used@@Base+0x3eb8>
  417594:	mov	w0, #0x2                   	// #2
  417598:	strb	w0, [x19, #8]
  41759c:	mov	w0, #0x0                   	// #0
  4175a0:	ldp	x19, x20, [sp, #16]
  4175a4:	ldp	x21, x22, [sp, #32]
  4175a8:	ldp	x23, x24, [sp, #48]
  4175ac:	ldp	x25, x26, [sp, #64]
  4175b0:	ldp	x29, x30, [sp], #96
  4175b4:	ret
  4175b8:	ldr	x26, [x1, #8]
  4175bc:	mov	x21, x1
  4175c0:	ldrb	w0, [x19, #10]
  4175c4:	mov	x20, x2
  4175c8:	ldrb	w22, [x26, x25]
  4175cc:	and	w0, w0, #0xffffff9f
  4175d0:	strb	w22, [x19]
  4175d4:	strb	w0, [x19, #10]
  4175d8:	ldr	w0, [x1, #144]
  4175dc:	cmp	w0, #0x1
  4175e0:	b.le	417624 <_obstack_memory_used@@Base+0x3f24>
  4175e4:	ldr	x1, [x1, #48]
  4175e8:	cmp	x25, x1
  4175ec:	b.eq	417624 <_obstack_memory_used@@Base+0x3f24>  // b.none
  4175f0:	ldr	x1, [x21, #16]
  4175f4:	ldr	w1, [x1, x25, lsl #2]
  4175f8:	cmn	w1, #0x1
  4175fc:	b.ne	417624 <_obstack_memory_used@@Base+0x3f24>  // b.any
  417600:	ldr	w0, [x19, #8]
  417604:	mov	w1, #0x1                   	// #1
  417608:	movk	w1, #0x20, lsl #16
  41760c:	and	w0, w0, #0xffffff00
  417610:	and	w0, w0, #0xffdfffff
  417614:	orr	w0, w0, w1
  417618:	str	w0, [x19, #8]
  41761c:	mov	w0, #0x1                   	// #1
  417620:	b	4175a0 <_obstack_memory_used@@Base+0x3ea0>
  417624:	cmp	w22, #0x5c
  417628:	b.ne	417914 <_obstack_memory_used@@Base+0x4214>  // b.any
  41762c:	ldr	x2, [x21, #88]
  417630:	add	x1, x25, #0x1
  417634:	cmp	x1, x2
  417638:	b.lt	417648 <_obstack_memory_used@@Base+0x3f48>  // b.tstop
  41763c:	mov	w0, #0x24                  	// #36
  417640:	strb	w0, [x19, #8]
  417644:	b	41761c <_obstack_memory_used@@Base+0x3f1c>
  417648:	ldrb	w2, [x21, #139]
  41764c:	cbnz	w2, 417658 <_obstack_memory_used@@Base+0x3f58>
  417650:	ldrb	w22, [x26, x1]
  417654:	b	4176bc <_obstack_memory_used@@Base+0x3fbc>
  417658:	cmp	w0, #0x1
  41765c:	b.le	417694 <_obstack_memory_used@@Base+0x3f94>
  417660:	ldr	x2, [x21, #16]
  417664:	lsl	x3, x1, #2
  417668:	ldr	w4, [x2, x3]
  41766c:	cmn	w4, #0x1
  417670:	b.eq	417650 <_obstack_memory_used@@Base+0x3f50>  // b.none
  417674:	ldr	x4, [x21, #48]
  417678:	add	x25, x25, #0x2
  41767c:	cmp	x4, x25
  417680:	b.eq	417694 <_obstack_memory_used@@Base+0x3f94>  // b.none
  417684:	add	x2, x2, x3
  417688:	ldr	w2, [x2, #4]
  41768c:	cmn	w2, #0x1
  417690:	b.eq	417650 <_obstack_memory_used@@Base+0x3f50>  // b.none
  417694:	ldrb	w3, [x21, #140]
  417698:	cbz	w3, 417720 <_obstack_memory_used@@Base+0x4020>
  41769c:	ldr	x2, [x21, #24]
  4176a0:	ldr	x4, [x2, x1, lsl #3]
  4176a4:	ldr	x2, [x21]
  4176a8:	ldr	x5, [x21, #40]
  4176ac:	add	x2, x2, x4
  4176b0:	ldrb	w22, [x2, x5]
  4176b4:	cbz	w3, 4176bc <_obstack_memory_used@@Base+0x3fbc>
  4176b8:	tbnz	w22, #7, 417650 <_obstack_memory_used@@Base+0x3f50>
  4176bc:	mov	w2, #0x1                   	// #1
  4176c0:	strb	w22, [x19]
  4176c4:	strb	w2, [x19, #8]
  4176c8:	cmp	w0, #0x1
  4176cc:	ldrb	w23, [x19, #10]
  4176d0:	b.le	417728 <_obstack_memory_used@@Base+0x4028>
  4176d4:	mov	x0, x21
  4176d8:	bl	4137ac <_obstack_memory_used@@Base+0xac>
  4176dc:	mov	w21, w0
  4176e0:	bl	4028b0 <iswalnum@plt>
  4176e4:	cbnz	w0, 417744 <_obstack_memory_used@@Base+0x4044>
  4176e8:	cmp	w21, #0x5f
  4176ec:	cset	w1, eq  // eq = none
  4176f0:	mov	w0, w23
  4176f4:	cmp	w22, #0x53
  4176f8:	bfi	w0, w1, #6, #1
  4176fc:	strb	w0, [x19, #10]
  417700:	b.eq	417864 <_obstack_memory_used@@Base+0x4164>  // b.none
  417704:	b.hi	417790 <_obstack_memory_used@@Base+0x4090>  // b.pmore
  417708:	sub	w1, w22, #0x27
  41770c:	and	w0, w1, #0xff
  417710:	cmp	w0, #0x1b
  417714:	b.ls	417770 <_obstack_memory_used@@Base+0x4070>  // b.plast
  417718:	mov	w0, #0x2                   	// #2
  41771c:	b	4175a0 <_obstack_memory_used@@Base+0x3ea0>
  417720:	mov	x4, x1
  417724:	b	4176a4 <_obstack_memory_used@@Base+0x3fa4>
  417728:	bl	402790 <__ctype_b_loc@plt>
  41772c:	ldr	x0, [x0]
  417730:	ubfiz	x1, x22, #1, #8
  417734:	ldrh	w0, [x0, x1]
  417738:	tbnz	w0, #3, 417744 <_obstack_memory_used@@Base+0x4044>
  41773c:	cmp	w22, #0x5f
  417740:	b	4176ec <_obstack_memory_used@@Base+0x3fec>
  417744:	mov	w1, #0x1                   	// #1
  417748:	b	4176f0 <_obstack_memory_used@@Base+0x3ff0>
  41774c:	sub	w22, w22, #0x73
  417750:	cmp	w22, #0xa
  417754:	b.hi	417718 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  417758:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41775c:	add	x0, x0, #0x90
  417760:	ldrb	w0, [x0, w22, uxtw]
  417764:	adr	x1, 417770 <_obstack_memory_used@@Base+0x4070>
  417768:	add	x0, x1, w0, sxtb #2
  41776c:	br	x0
  417770:	cmp	w1, #0x1b
  417774:	b.hi	417718 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  417778:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41777c:	add	x0, x0, #0x9c
  417780:	ldrb	w0, [x0, w1, uxtw]
  417784:	adr	x1, 417790 <_obstack_memory_used@@Base+0x4090>
  417788:	add	x0, x1, w0, sxtb #2
  41778c:	br	x0
  417790:	cmp	w22, #0x7d
  417794:	b.hi	417718 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  417798:	cmp	w22, #0x72
  41779c:	b.hi	41774c <_obstack_memory_used@@Base+0x404c>  // b.pmore
  4177a0:	cmp	w22, #0x60
  4177a4:	b.eq	417870 <_obstack_memory_used@@Base+0x4170>  // b.none
  4177a8:	cmp	w22, #0x62
  4177ac:	b.eq	417824 <_obstack_memory_used@@Base+0x4124>  // b.none
  4177b0:	cmp	w22, #0x57
  4177b4:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  4177b8:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  4177bc:	mov	w0, #0x21                  	// #33
  4177c0:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  4177c4:	mov	x0, #0x8400                	// #33792
  4177c8:	tst	x20, x0
  4177cc:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  4177d0:	mov	w0, #0xa                   	// #10
  4177d4:	strb	w0, [x19, #8]
  4177d8:	b	417718 <_obstack_memory_used@@Base+0x4018>
  4177dc:	tbnz	w20, #14, 417718 <_obstack_memory_used@@Base+0x4018>
  4177e0:	sub	w22, w22, #0x31
  4177e4:	mov	w0, #0x4                   	// #4
  4177e8:	strb	w0, [x19, #8]
  4177ec:	sxtw	x22, w22
  4177f0:	str	x22, [x19]
  4177f4:	b	417718 <_obstack_memory_used@@Base+0x4018>
  4177f8:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  4177fc:	mov	w0, #0xc                   	// #12
  417800:	strb	w0, [x19, #8]
  417804:	mov	w0, #0x6                   	// #6
  417808:	str	w0, [x19]
  41780c:	b	417718 <_obstack_memory_used@@Base+0x4018>
  417810:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417814:	mov	w0, #0xc                   	// #12
  417818:	strb	w0, [x19, #8]
  41781c:	mov	w0, #0x9                   	// #9
  417820:	b	417808 <_obstack_memory_used@@Base+0x4108>
  417824:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417828:	mov	w0, #0xc                   	// #12
  41782c:	strb	w0, [x19, #8]
  417830:	mov	w0, #0x100                 	// #256
  417834:	b	417808 <_obstack_memory_used@@Base+0x4108>
  417838:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  41783c:	mov	w0, #0xc                   	// #12
  417840:	strb	w0, [x19, #8]
  417844:	mov	w0, #0x200                 	// #512
  417848:	b	417808 <_obstack_memory_used@@Base+0x4108>
  41784c:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417850:	mov	w0, #0x20                  	// #32
  417854:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  417858:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  41785c:	mov	w0, #0x22                  	// #34
  417860:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  417864:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417868:	mov	w0, #0x23                  	// #35
  41786c:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  417870:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417874:	mov	w0, #0xc                   	// #12
  417878:	strb	w0, [x19, #8]
  41787c:	mov	w0, #0x40                  	// #64
  417880:	b	417808 <_obstack_memory_used@@Base+0x4108>
  417884:	tbnz	w20, #19, 417718 <_obstack_memory_used@@Base+0x4018>
  417888:	mov	w0, #0xc                   	// #12
  41788c:	strb	w0, [x19, #8]
  417890:	mov	w0, #0x80                  	// #128
  417894:	b	417808 <_obstack_memory_used@@Base+0x4108>
  417898:	tbnz	w20, #13, 417718 <_obstack_memory_used@@Base+0x4018>
  41789c:	mov	w0, #0x8                   	// #8
  4178a0:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  4178a4:	tbnz	w20, #13, 417718 <_obstack_memory_used@@Base+0x4018>
  4178a8:	mov	w0, #0x9                   	// #9
  4178ac:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  4178b0:	mov	x0, #0x402                 	// #1026
  4178b4:	and	x0, x20, x0
  4178b8:	cmp	x0, #0x2
  4178bc:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  4178c0:	mov	w1, #0x12                  	// #18
  4178c4:	strb	w1, [x19, #8]
  4178c8:	b	4175a0 <_obstack_memory_used@@Base+0x3ea0>
  4178cc:	mov	x1, #0x402                 	// #1026
  4178d0:	and	x0, x20, x1
  4178d4:	cmp	x0, #0x2
  4178d8:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  4178dc:	mov	w1, #0x13                  	// #19
  4178e0:	b	4178c4 <_obstack_memory_used@@Base+0x41c4>
  4178e4:	mov	x0, #0x1200                	// #4608
  4178e8:	and	x0, x20, x0
  4178ec:	cmp	x0, #0x200
  4178f0:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  4178f4:	mov	w0, #0x17                  	// #23
  4178f8:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  4178fc:	mov	x0, #0x1200                	// #4608
  417900:	and	x0, x20, x0
  417904:	cmp	x0, #0x200
  417908:	b.ne	417718 <_obstack_memory_used@@Base+0x4018>  // b.any
  41790c:	mov	w0, #0x18                  	// #24
  417910:	b	4177d4 <_obstack_memory_used@@Base+0x40d4>
  417914:	mov	w1, #0x1                   	// #1
  417918:	strb	w1, [x19, #8]
  41791c:	ldrb	w24, [x19, #10]
  417920:	cmp	w0, #0x1
  417924:	b.le	417978 <_obstack_memory_used@@Base+0x4278>
  417928:	mov	x1, x25
  41792c:	mov	x0, x21
  417930:	bl	4137ac <_obstack_memory_used@@Base+0xac>
  417934:	mov	w23, w0
  417938:	bl	4028b0 <iswalnum@plt>
  41793c:	cbnz	w0, 417994 <_obstack_memory_used@@Base+0x4294>
  417940:	cmp	w23, #0x5f
  417944:	cset	w2, eq  // eq = none
  417948:	mov	w0, w24
  41794c:	cmp	w22, #0x2e
  417950:	bfi	w0, w2, #6, #1
  417954:	strb	w0, [x19, #10]
  417958:	b.hi	4179c0 <_obstack_memory_used@@Base+0x42c0>  // b.pmore
  41795c:	cmp	w22, #0x23
  417960:	b.hi	41799c <_obstack_memory_used@@Base+0x429c>  // b.pmore
  417964:	cmp	w22, #0xa
  417968:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  41796c:	tbz	w20, #11, 41761c <_obstack_memory_used@@Base+0x3f1c>
  417970:	mov	w0, #0xa                   	// #10
  417974:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417978:	bl	402790 <__ctype_b_loc@plt>
  41797c:	ldr	x0, [x0]
  417980:	ubfiz	x2, x22, #1, #8
  417984:	ldrh	w0, [x0, x2]
  417988:	tbnz	w0, #3, 417994 <_obstack_memory_used@@Base+0x4294>
  41798c:	cmp	w22, #0x5f
  417990:	b	417944 <_obstack_memory_used@@Base+0x4244>
  417994:	mov	w2, #0x1                   	// #1
  417998:	b	417948 <_obstack_memory_used@@Base+0x4248>
  41799c:	sub	w22, w22, #0x24
  4179a0:	cmp	w22, #0xa
  4179a4:	b.hi	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.pmore
  4179a8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  4179ac:	add	x0, x0, #0xb8
  4179b0:	ldrh	w0, [x0, w22, uxtw #1]
  4179b4:	adr	x1, 4179c0 <_obstack_memory_used@@Base+0x42c0>
  4179b8:	add	x0, x1, w0, sxth #2
  4179bc:	br	x0
  4179c0:	cmp	w22, #0x7b
  4179c4:	b.eq	417a4c <_obstack_memory_used@@Base+0x434c>  // b.none
  4179c8:	b.hi	4179f8 <_obstack_memory_used@@Base+0x42f8>  // b.pmore
  4179cc:	cmp	w22, #0x5b
  4179d0:	b.eq	417a78 <_obstack_memory_used@@Base+0x4378>  // b.none
  4179d4:	cmp	w22, #0x5e
  4179d8:	b.eq	417a88 <_obstack_memory_used@@Base+0x4388>  // b.none
  4179dc:	cmp	w22, #0x3f
  4179e0:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4179e4:	mov	x0, #0x402                 	// #1026
  4179e8:	tst	x20, x0
  4179ec:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4179f0:	mov	w0, #0x13                  	// #19
  4179f4:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  4179f8:	cmp	w22, #0x7c
  4179fc:	b.eq	417a1c <_obstack_memory_used@@Base+0x431c>  // b.none
  417a00:	cmp	w22, #0x7d
  417a04:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417a08:	mov	x0, #0x1200                	// #4608
  417a0c:	bics	xzr, x0, x20
  417a10:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417a14:	mov	w0, #0x18                  	// #24
  417a18:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a1c:	mov	x0, #0x8400                	// #33792
  417a20:	and	x0, x20, x0
  417a24:	cmp	x0, #0x8, lsl #12
  417a28:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417a2c:	b	417970 <_obstack_memory_used@@Base+0x4270>
  417a30:	mov	w0, #0xb                   	// #11
  417a34:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a38:	mov	x0, #0x402                 	// #1026
  417a3c:	tst	x20, x0
  417a40:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417a44:	mov	w0, #0x12                  	// #18
  417a48:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a4c:	mov	x0, #0x1200                	// #4608
  417a50:	bics	xzr, x0, x20
  417a54:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417a58:	mov	w0, #0x17                  	// #23
  417a5c:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a60:	tbz	w20, #13, 41761c <_obstack_memory_used@@Base+0x3f1c>
  417a64:	mov	w0, #0x8                   	// #8
  417a68:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a6c:	tbz	w20, #13, 41761c <_obstack_memory_used@@Base+0x3f1c>
  417a70:	mov	w0, #0x9                   	// #9
  417a74:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a78:	mov	w0, #0x14                  	// #20
  417a7c:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a80:	mov	w0, #0x5                   	// #5
  417a84:	b	417640 <_obstack_memory_used@@Base+0x3f40>
  417a88:	and	x0, x20, #0xfffff8
  417a8c:	and	x0, x0, #0xffffffffff80000f
  417a90:	cbnz	x0, 417aac <_obstack_memory_used@@Base+0x43ac>
  417a94:	cbz	x25, 417aac <_obstack_memory_used@@Base+0x43ac>
  417a98:	add	x1, x26, x25
  417a9c:	ldurb	w0, [x1, #-1]
  417aa0:	tbz	w20, #11, 41761c <_obstack_memory_used@@Base+0x3f1c>
  417aa4:	cmp	w0, #0xa
  417aa8:	b.ne	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.any
  417aac:	mov	w0, #0xc                   	// #12
  417ab0:	strb	w0, [x19, #8]
  417ab4:	mov	w0, #0x10                  	// #16
  417ab8:	str	w0, [x19]
  417abc:	b	41761c <_obstack_memory_used@@Base+0x3f1c>
  417ac0:	tbnz	w20, #3, 417b08 <_obstack_memory_used@@Base+0x4408>
  417ac4:	ldr	x0, [x21, #88]
  417ac8:	add	x1, x25, #0x1
  417acc:	cmp	x1, x0
  417ad0:	b.eq	417b08 <_obstack_memory_used@@Base+0x4408>  // b.none
  417ad4:	str	x1, [x21, #72]
  417ad8:	mov	x2, x20
  417adc:	add	x0, sp, #0x50
  417ae0:	mov	x1, x21
  417ae4:	bl	417568 <_obstack_memory_used@@Base+0x3e68>
  417ae8:	ldr	x0, [x21, #72]
  417aec:	sub	x0, x0, #0x1
  417af0:	str	x0, [x21, #72]
  417af4:	ldrb	w0, [sp, #88]
  417af8:	sub	w0, w0, #0x9
  417afc:	and	w0, w0, #0xff
  417b00:	cmp	w0, #0x1
  417b04:	b.hi	41761c <_obstack_memory_used@@Base+0x3f1c>  // b.pmore
  417b08:	mov	w0, #0xc                   	// #12
  417b0c:	strb	w0, [x19, #8]
  417b10:	mov	w0, #0x20                  	// #32
  417b14:	b	417ab8 <_obstack_memory_used@@Base+0x43b8>
  417b18:	stp	x29, x30, [sp, #-32]!
  417b1c:	mov	x29, sp
  417b20:	str	x19, [sp, #16]
  417b24:	mov	x19, x1
  417b28:	bl	417568 <_obstack_memory_used@@Base+0x3e68>
  417b2c:	ldr	x1, [x19, #72]
  417b30:	add	x0, x1, w0, sxtw
  417b34:	str	x0, [x19, #72]
  417b38:	ldr	x19, [sp, #16]
  417b3c:	ldp	x29, x30, [sp], #32
  417b40:	ret
  417b44:	stp	x29, x30, [sp, #-64]!
  417b48:	mov	x29, sp
  417b4c:	stp	x19, x20, [sp, #16]
  417b50:	mov	x20, x1
  417b54:	mov	x19, #0xffffffffffffffff    	// #-1
  417b58:	stp	x21, x22, [sp, #32]
  417b5c:	mov	x21, x0
  417b60:	mov	x22, x2
  417b64:	stp	x23, x24, [sp, #48]
  417b68:	mov	x24, #0xa                   	// #10
  417b6c:	mov	x23, #0x8030                	// #32816
  417b70:	mov	x0, x20
  417b74:	mov	x2, x22
  417b78:	mov	x1, x21
  417b7c:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  417b80:	ldrb	w0, [x20, #8]
  417b84:	ldrb	w3, [x20]
  417b88:	cmp	w0, #0x2
  417b8c:	b.eq	417bf0 <_obstack_memory_used@@Base+0x44f0>  // b.none
  417b90:	cmp	w0, #0x18
  417b94:	b.eq	417bf4 <_obstack_memory_used@@Base+0x44f4>  // b.none
  417b98:	cmp	w3, #0x2c
  417b9c:	b.eq	417bf4 <_obstack_memory_used@@Base+0x44f4>  // b.none
  417ba0:	cmp	w0, #0x1
  417ba4:	b.ne	417bd0 <_obstack_memory_used@@Base+0x44d0>  // b.any
  417ba8:	sub	w0, w3, #0x30
  417bac:	and	w1, w0, #0xff
  417bb0:	cmp	w1, #0x9
  417bb4:	b.hi	417bd0 <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  417bb8:	cmn	x19, #0x2
  417bbc:	b.eq	417b70 <_obstack_memory_used@@Base+0x4470>  // b.none
  417bc0:	cmn	x19, #0x1
  417bc4:	b.ne	417bd8 <_obstack_memory_used@@Base+0x44d8>  // b.any
  417bc8:	sxtw	x19, w0
  417bcc:	b	417b70 <_obstack_memory_used@@Base+0x4470>
  417bd0:	mov	x19, #0xfffffffffffffffe    	// #-2
  417bd4:	b	417b70 <_obstack_memory_used@@Base+0x4470>
  417bd8:	and	x3, x3, #0xff
  417bdc:	madd	x19, x19, x24, x3
  417be0:	cmp	x19, x23
  417be4:	csel	x19, x19, x23, le
  417be8:	sub	x19, x19, #0x30
  417bec:	b	417b70 <_obstack_memory_used@@Base+0x4470>
  417bf0:	mov	x19, #0xfffffffffffffffe    	// #-2
  417bf4:	mov	x0, x19
  417bf8:	ldp	x19, x20, [sp, #16]
  417bfc:	ldp	x21, x22, [sp, #32]
  417c00:	ldp	x23, x24, [sp, #48]
  417c04:	ldp	x29, x30, [sp], #64
  417c08:	ret
  417c0c:	stp	x29, x30, [sp, #-240]!
  417c10:	mov	x29, sp
  417c14:	stp	x19, x20, [sp, #16]
  417c18:	stp	x21, x22, [sp, #32]
  417c1c:	mov	x21, x0
  417c20:	mov	x0, #0x3800                	// #14336
  417c24:	stp	x23, x24, [sp, #48]
  417c28:	mov	x24, x1
  417c2c:	stp	x25, x26, [sp, #64]
  417c30:	stp	x27, x28, [sp, #80]
  417c34:	bl	402520 <malloc@plt>
  417c38:	cbnz	x0, 417c44 <_obstack_memory_used@@Base+0x4544>
  417c3c:	mov	w0, #0x0                   	// #0
  417c40:	b	417cac <_obstack_memory_used@@Base+0x45ac>
  417c44:	stp	xzr, xzr, [x24, #88]
  417c48:	mov	x22, x0
  417c4c:	add	x19, sp, #0x90
  417c50:	mov	x0, #0x1800                	// #6144
  417c54:	add	x27, x24, #0x8
  417c58:	add	x28, sp, #0xd0
  417c5c:	add	x26, x22, x0
  417c60:	mov	x20, #0x0                   	// #0
  417c64:	mov	x0, x19
  417c68:	bl	413fa8 <_obstack_memory_used@@Base+0x8a8>
  417c6c:	str	xzr, [sp, #96]
  417c70:	ldr	x0, [x27, #8]
  417c74:	ldr	x1, [sp, #96]
  417c78:	cmp	x1, x0
  417c7c:	b.lt	417cc8 <_obstack_memory_used@@Base+0x45c8>  // b.tstop
  417c80:	cmp	x20, #0x0
  417c84:	b.gt	4180c0 <_obstack_memory_used@@Base+0x49c0>
  417c88:	mov	x0, x22
  417c8c:	bl	4027a0 <free@plt>
  417c90:	cbnz	x20, 417c3c <_obstack_memory_used@@Base+0x453c>
  417c94:	mov	x1, #0x100                 	// #256
  417c98:	mov	x0, #0x8                   	// #8
  417c9c:	bl	402610 <calloc@plt>
  417ca0:	cmp	x0, #0x0
  417ca4:	str	x0, [x24, #88]
  417ca8:	cset	w0, ne  // ne = any
  417cac:	ldp	x19, x20, [sp, #16]
  417cb0:	ldp	x21, x22, [sp, #32]
  417cb4:	ldp	x23, x24, [sp, #48]
  417cb8:	ldp	x25, x26, [sp, #64]
  417cbc:	ldp	x27, x28, [sp, #80]
  417cc0:	ldp	x29, x30, [sp], #240
  417cc4:	ret
  417cc8:	ldr	x0, [sp, #96]
  417ccc:	lsl	x0, x0, #3
  417cd0:	str	x0, [sp, #104]
  417cd4:	ldr	x0, [x27, #16]
  417cd8:	ldr	x1, [sp, #104]
  417cdc:	ldr	x23, [x0, x1]
  417ce0:	ldr	x0, [x21]
  417ce4:	lsl	x1, x23, #4
  417ce8:	add	x23, x0, x23, lsl #4
  417cec:	ldr	w5, [x23, #8]
  417cf0:	ldrb	w25, [x23, #8]
  417cf4:	ubfx	x5, x5, #8, #10
  417cf8:	cmp	w25, #0x1
  417cfc:	b.ne	417d44 <_obstack_memory_used@@Base+0x4644>  // b.any
  417d00:	ldrb	w1, [x0, x1]
  417d04:	mov	x0, x19
  417d08:	bl	413724 <_obstack_memory_used@@Base+0x24>
  417d0c:	cbz	w5, 417dec <_obstack_memory_used@@Base+0x46ec>
  417d10:	tbz	w5, #5, 417d34 <_obstack_memory_used@@Base+0x4634>
  417d14:	ldr	x1, [sp, #144]
  417d18:	mov	x0, x19
  417d1c:	ubfx	w1, w1, #10, #1
  417d20:	bl	413fa8 <_obstack_memory_used@@Base+0x8a8>
  417d24:	cbz	w1, 417e54 <_obstack_memory_used@@Base+0x4754>
  417d28:	ldr	x0, [sp, #144]
  417d2c:	orr	x0, x0, #0x400
  417d30:	str	x0, [sp, #144]
  417d34:	tbz	w5, #7, 417de4 <_obstack_memory_used@@Base+0x46e4>
  417d38:	mov	x0, x19
  417d3c:	bl	413fa8 <_obstack_memory_used@@Base+0x8a8>
  417d40:	b	417e54 <_obstack_memory_used@@Base+0x4754>
  417d44:	cmp	w25, #0x3
  417d48:	b.ne	417d5c <_obstack_memory_used@@Base+0x465c>  // b.any
  417d4c:	ldr	x1, [x0, x1]
  417d50:	mov	x0, x19
  417d54:	bl	413764 <_obstack_memory_used@@Base+0x64>
  417d58:	b	417d0c <_obstack_memory_used@@Base+0x460c>
  417d5c:	cmp	w25, #0x5
  417d60:	b.ne	417db8 <_obstack_memory_used@@Base+0x46b8>  // b.any
  417d64:	ldr	w0, [x21, #180]
  417d68:	cmp	w0, #0x1
  417d6c:	b.le	417da4 <_obstack_memory_used@@Base+0x46a4>
  417d70:	ldr	x1, [x21, #120]
  417d74:	mov	x0, x19
  417d78:	bl	413764 <_obstack_memory_used@@Base+0x64>
  417d7c:	ldr	x1, [x21, #216]
  417d80:	tbnz	w1, #6, 417d90 <_obstack_memory_used@@Base+0x4690>
  417d84:	ldr	x0, [sp, #144]
  417d88:	and	x0, x0, #0xfffffffffffffbff
  417d8c:	str	x0, [sp, #144]
  417d90:	tbz	w1, #7, 417d0c <_obstack_memory_used@@Base+0x460c>
  417d94:	ldr	x0, [sp, #144]
  417d98:	and	x0, x0, #0xfffffffffffffffe
  417d9c:	str	x0, [sp, #144]
  417da0:	b	417d0c <_obstack_memory_used@@Base+0x460c>
  417da4:	mov	x0, #0xffffffffffffffff    	// #-1
  417da8:	mov	x1, #0xffffffffffffffff    	// #-1
  417dac:	stp	x0, x1, [x19]
  417db0:	stp	x0, x1, [x19, #16]
  417db4:	b	417d7c <_obstack_memory_used@@Base+0x467c>
  417db8:	cmp	w25, #0x7
  417dbc:	b.ne	417e54 <_obstack_memory_used@@Base+0x4754>  // b.any
  417dc0:	mov	x0, #0xffffffffffffffff    	// #-1
  417dc4:	mov	x1, #0xffffffffffffffff    	// #-1
  417dc8:	stp	x0, x1, [x19]
  417dcc:	ldr	x0, [x21, #216]
  417dd0:	tbnz	w0, #6, 417ddc <_obstack_memory_used@@Base+0x46dc>
  417dd4:	mov	x1, #0xfffffffffffffbff    	// #-1025
  417dd8:	str	x1, [sp, #144]
  417ddc:	tbz	w0, #7, 417d0c <_obstack_memory_used@@Base+0x460c>
  417de0:	b	417d94 <_obstack_memory_used@@Base+0x4694>
  417de4:	tbnz	w5, #2, 417df8 <_obstack_memory_used@@Base+0x46f8>
  417de8:	tbnz	w5, #3, 417e94 <_obstack_memory_used@@Base+0x4794>
  417dec:	mov	x3, x26
  417df0:	mov	x2, #0x0                   	// #0
  417df4:	b	418048 <_obstack_memory_used@@Base+0x4948>
  417df8:	cmp	w25, #0x1
  417dfc:	b.ne	417e08 <_obstack_memory_used@@Base+0x4708>  // b.any
  417e00:	ldrb	w0, [x23, #10]
  417e04:	tbz	w0, #6, 417d38 <_obstack_memory_used@@Base+0x4638>
  417e08:	ldr	w0, [x21, #180]
  417e0c:	add	x4, x21, #0xb8
  417e10:	cmp	w0, #0x1
  417e14:	b.le	417e64 <_obstack_memory_used@@Base+0x4764>
  417e18:	ldr	x7, [x21, #120]
  417e1c:	mov	x3, x19
  417e20:	mov	x0, #0x0                   	// #0
  417e24:	mov	x2, #0x0                   	// #0
  417e28:	ldr	x1, [x7, x2, lsl #3]
  417e2c:	ldr	x6, [x4, x2, lsl #3]
  417e30:	add	x2, x2, #0x1
  417e34:	cmp	x2, #0x4
  417e38:	orn	x1, x6, x1
  417e3c:	ldr	x6, [x3]
  417e40:	and	x1, x1, x6
  417e44:	str	x1, [x3], #8
  417e48:	orr	x0, x0, x1
  417e4c:	b.ne	417e28 <_obstack_memory_used@@Base+0x4728>  // b.any
  417e50:	cbnz	x0, 417de8 <_obstack_memory_used@@Base+0x46e8>
  417e54:	ldr	x0, [sp, #96]
  417e58:	add	x0, x0, #0x1
  417e5c:	str	x0, [sp, #96]
  417e60:	b	417c70 <_obstack_memory_used@@Base+0x4570>
  417e64:	mov	x3, x19
  417e68:	mov	x0, #0x0                   	// #0
  417e6c:	mov	x1, #0x0                   	// #0
  417e70:	ldr	x2, [x4, x1, lsl #3]
  417e74:	add	x1, x1, #0x1
  417e78:	ldr	x6, [x3]
  417e7c:	cmp	x1, #0x4
  417e80:	and	x2, x2, x6
  417e84:	str	x2, [x3], #8
  417e88:	orr	x0, x0, x2
  417e8c:	b.ne	417e70 <_obstack_memory_used@@Base+0x4770>  // b.any
  417e90:	b	417e50 <_obstack_memory_used@@Base+0x4750>
  417e94:	cmp	w25, #0x1
  417e98:	b.ne	417ea4 <_obstack_memory_used@@Base+0x47a4>  // b.any
  417e9c:	ldrb	w0, [x23, #10]
  417ea0:	tbnz	w0, #6, 417d38 <_obstack_memory_used@@Base+0x4638>
  417ea4:	ldr	w0, [x21, #180]
  417ea8:	add	x4, x21, #0xb8
  417eac:	cmp	w0, #0x1
  417eb0:	b.le	417ef4 <_obstack_memory_used@@Base+0x47f4>
  417eb4:	ldr	x6, [x21, #120]
  417eb8:	mov	x3, x19
  417ebc:	mov	x0, #0x0                   	// #0
  417ec0:	mov	x2, #0x0                   	// #0
  417ec4:	ldr	x5, [x6, x2, lsl #3]
  417ec8:	ldr	x1, [x4, x2, lsl #3]
  417ecc:	add	x2, x2, #0x1
  417ed0:	cmp	x2, #0x4
  417ed4:	and	x1, x1, x5
  417ed8:	ldr	x5, [x3]
  417edc:	bic	x1, x5, x1
  417ee0:	str	x1, [x3], #8
  417ee4:	orr	x0, x0, x1
  417ee8:	b.ne	417ec4 <_obstack_memory_used@@Base+0x47c4>  // b.any
  417eec:	cbz	x0, 417e54 <_obstack_memory_used@@Base+0x4754>
  417ef0:	b	417dec <_obstack_memory_used@@Base+0x46ec>
  417ef4:	mov	x3, x19
  417ef8:	mov	x0, #0x0                   	// #0
  417efc:	mov	x1, #0x0                   	// #0
  417f00:	ldr	x2, [x4, x1, lsl #3]
  417f04:	add	x1, x1, #0x1
  417f08:	ldr	x5, [x3]
  417f0c:	cmp	x1, #0x4
  417f10:	bic	x2, x5, x2
  417f14:	str	x2, [x3], #8
  417f18:	orr	x0, x0, x2
  417f1c:	b.ne	417f00 <_obstack_memory_used@@Base+0x4800>  // b.any
  417f20:	b	417eec <_obstack_memory_used@@Base+0x47ec>
  417f24:	lsl	x4, x2, #5
  417f28:	cmp	w25, #0x1
  417f2c:	b.ne	417f4c <_obstack_memory_used@@Base+0x484c>  // b.any
  417f30:	ldrb	w0, [x23]
  417f34:	ldrb	w1, [x23]
  417f38:	asr	x0, x0, #6
  417f3c:	add	x0, x26, x0, lsl #3
  417f40:	ldr	x0, [x0, x4]
  417f44:	lsr	x0, x0, x1
  417f48:	tbz	w0, #0, 418040 <_obstack_memory_used@@Base+0x4940>
  417f4c:	mov	x4, #0x0                   	// #0
  417f50:	mov	x0, #0x0                   	// #0
  417f54:	ldr	x5, [x3, x0, lsl #3]
  417f58:	ldr	x1, [x19, x0, lsl #3]
  417f5c:	and	x1, x1, x5
  417f60:	add	x5, sp, #0xb0
  417f64:	orr	x4, x4, x1
  417f68:	str	x1, [x5, x0, lsl #3]
  417f6c:	add	x0, x0, #0x1
  417f70:	cmp	x0, #0x4
  417f74:	b.ne	417f54 <_obstack_memory_used@@Base+0x4854>  // b.any
  417f78:	cbz	x4, 418040 <_obstack_memory_used@@Base+0x4940>
  417f7c:	mov	x5, x19
  417f80:	mov	x6, #0x0                   	// #0
  417f84:	mov	x4, #0x0                   	// #0
  417f88:	mov	x0, #0x0                   	// #0
  417f8c:	ldr	x1, [x3, x0, lsl #3]
  417f90:	ldr	x7, [x5]
  417f94:	bic	x8, x1, x7
  417f98:	bic	x1, x7, x1
  417f9c:	str	x8, [x28, x0, lsl #3]
  417fa0:	add	x0, x0, #0x1
  417fa4:	str	x1, [x5], #8
  417fa8:	orr	x4, x4, x8
  417fac:	orr	x6, x6, x1
  417fb0:	cmp	x0, #0x4
  417fb4:	b.ne	417f8c <_obstack_memory_used@@Base+0x488c>  // b.any
  417fb8:	mov	x0, #0x18                  	// #24
  417fbc:	madd	x7, x2, x0, x22
  417fc0:	cbz	x4, 418010 <_obstack_memory_used@@Base+0x4910>
  417fc4:	add	x0, x26, x20, lsl #5
  417fc8:	stp	x7, x3, [sp, #112]
  417fcc:	ldp	x4, x5, [x28]
  417fd0:	stp	x4, x5, [x0]
  417fd4:	ldp	x4, x5, [x28, #16]
  417fd8:	stp	x4, x5, [x0, #16]
  417fdc:	ldp	x0, x1, [sp, #176]
  417fe0:	stp	x0, x1, [x3]
  417fe4:	ldp	x0, x1, [sp, #192]
  417fe8:	stp	x0, x1, [x3, #16]
  417fec:	mov	x1, x7
  417ff0:	stp	x2, x6, [sp, #128]
  417ff4:	mov	x0, #0x18                  	// #24
  417ff8:	madd	x0, x20, x0, x22
  417ffc:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  418000:	cbnz	w0, 418090 <_obstack_memory_used@@Base+0x4990>
  418004:	ldp	x7, x3, [sp, #112]
  418008:	add	x20, x20, #0x1
  41800c:	ldp	x2, x6, [sp, #128]
  418010:	stp	x2, x6, [sp, #112]
  418014:	ldr	x0, [x27, #16]
  418018:	str	x3, [sp, #128]
  41801c:	ldr	x1, [sp, #104]
  418020:	ldr	x1, [x0, x1]
  418024:	mov	x0, x7
  418028:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41802c:	tst	w0, #0xff
  418030:	b.eq	418090 <_obstack_memory_used@@Base+0x4990>  // b.none
  418034:	ldp	x2, x6, [sp, #112]
  418038:	ldr	x3, [sp, #128]
  41803c:	cbz	x6, 418050 <_obstack_memory_used@@Base+0x4950>
  418040:	add	x2, x2, #0x1
  418044:	add	x3, x3, #0x20
  418048:	cmp	x2, x20
  41804c:	b.lt	417f24 <_obstack_memory_used@@Base+0x4824>  // b.tstop
  418050:	cmp	x2, x20
  418054:	b.ne	417e54 <_obstack_memory_used@@Base+0x4754>  // b.any
  418058:	add	x0, x26, x20, lsl #5
  41805c:	ldp	x2, x3, [x19]
  418060:	stp	x2, x3, [x0]
  418064:	ldp	x2, x3, [x19, #16]
  418068:	stp	x2, x3, [x0, #16]
  41806c:	ldr	x0, [x27, #16]
  418070:	ldr	x1, [sp, #104]
  418074:	ldr	x1, [x0, x1]
  418078:	mov	x0, #0x18                  	// #24
  41807c:	madd	x0, x20, x0, x22
  418080:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  418084:	cbnz	w0, 418090 <_obstack_memory_used@@Base+0x4990>
  418088:	add	x20, x20, #0x1
  41808c:	b	417d38 <_obstack_memory_used@@Base+0x4638>
  418090:	add	x21, x22, #0x10
  418094:	mov	x19, #0x0                   	// #0
  418098:	mov	x23, #0x18                  	// #24
  41809c:	cmp	x19, x20
  4180a0:	b.ne	4180ac <_obstack_memory_used@@Base+0x49ac>  // b.any
  4180a4:	mov	x20, #0xffffffffffffffff    	// #-1
  4180a8:	b	417c88 <_obstack_memory_used@@Base+0x4588>
  4180ac:	mul	x0, x19, x23
  4180b0:	add	x19, x19, #0x1
  4180b4:	ldr	x0, [x21, x0]
  4180b8:	bl	4027a0 <free@plt>
  4180bc:	b	41809c <_obstack_memory_used@@Base+0x499c>
  4180c0:	add	x1, x20, #0x1
  4180c4:	add	x0, sp, #0xb0
  4180c8:	bl	414000 <_obstack_memory_used@@Base+0x900>
  4180cc:	str	w0, [sp, #144]
  4180d0:	cbnz	w0, 4180e8 <_obstack_memory_used@@Base+0x49e8>
  4180d4:	mov	x0, #0x18                  	// #24
  4180d8:	mul	x0, x20, x0
  4180dc:	bl	402520 <malloc@plt>
  4180e0:	mov	x23, x0
  4180e4:	cbnz	x0, 418120 <_obstack_memory_used@@Base+0x4a20>
  4180e8:	ldr	x0, [sp, #192]
  4180ec:	add	x21, x22, #0x10
  4180f0:	mov	x19, #0x0                   	// #0
  4180f4:	mov	x23, #0x18                  	// #24
  4180f8:	bl	4027a0 <free@plt>
  4180fc:	mul	x0, x19, x23
  418100:	add	x19, x19, #0x1
  418104:	ldr	x0, [x21, x0]
  418108:	bl	4027a0 <free@plt>
  41810c:	cmp	x19, x20
  418110:	b.ne	4180fc <_obstack_memory_used@@Base+0x49fc>  // b.any
  418114:	mov	x0, x22
  418118:	bl	4027a0 <free@plt>
  41811c:	b	417c3c <_obstack_memory_used@@Base+0x453c>
  418120:	add	x25, x0, x20, lsl #3
  418124:	add	x0, x0, x20, lsl #4
  418128:	add	x28, x22, #0x8
  41812c:	str	x0, [sp, #104]
  418130:	add	x0, sp, #0xd0
  418134:	bl	413fa8 <_obstack_memory_used@@Base+0x8a8>
  418138:	mov	x0, #0x18                  	// #24
  41813c:	mov	x27, #0x0                   	// #0
  418140:	str	wzr, [sp, #96]
  418144:	str	x0, [sp, #112]
  418148:	mov	x2, #0x0                   	// #0
  41814c:	str	xzr, [sp, #184]
  418150:	ldr	x0, [x28]
  418154:	cmp	x0, x2
  418158:	b.gt	4182d0 <_obstack_memory_used@@Base+0x4bd0>
  41815c:	add	x2, sp, #0xb0
  418160:	mov	x1, x21
  418164:	mov	x0, x19
  418168:	mov	w3, #0x0                   	// #0
  41816c:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  418170:	str	x0, [x23, x27, lsl #3]
  418174:	cbnz	x0, 418180 <_obstack_memory_used@@Base+0x4a80>
  418178:	ldr	w1, [sp, #144]
  41817c:	cbnz	w1, 418314 <_obstack_memory_used@@Base+0x4c14>
  418180:	ldrsb	w1, [x0, #104]
  418184:	tbz	w1, #31, 418320 <_obstack_memory_used@@Base+0x4c20>
  418188:	add	x2, sp, #0xb0
  41818c:	mov	x1, x21
  418190:	mov	x0, x19
  418194:	mov	w3, #0x1                   	// #1
  418198:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41819c:	str	x0, [x25, x27, lsl #3]
  4181a0:	cbnz	x0, 4181ac <_obstack_memory_used@@Base+0x4aac>
  4181a4:	ldr	w1, [sp, #144]
  4181a8:	cbnz	w1, 418314 <_obstack_memory_used@@Base+0x4c14>
  4181ac:	ldr	x1, [x23, x27, lsl #3]
  4181b0:	cmp	x0, x1
  4181b4:	b.eq	4181cc <_obstack_memory_used@@Base+0x4acc>  // b.none
  4181b8:	ldr	w0, [x21, #180]
  4181bc:	cmp	w0, #0x2
  4181c0:	ldr	w0, [sp, #96]
  4181c4:	csinc	w0, w0, wzr, lt  // lt = tstop
  4181c8:	str	w0, [sp, #96]
  4181cc:	mov	x1, x21
  4181d0:	add	x2, sp, #0xb0
  4181d4:	mov	x0, x19
  4181d8:	mov	w3, #0x2                   	// #2
  4181dc:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  4181e0:	ldr	x1, [sp, #104]
  4181e4:	str	x0, [x1, x27, lsl #3]
  4181e8:	cbnz	x0, 4181f4 <_obstack_memory_used@@Base+0x4af4>
  4181ec:	ldr	w0, [sp, #144]
  4181f0:	cbnz	w0, 418314 <_obstack_memory_used@@Base+0x4c14>
  4181f4:	add	x1, x26, x27, lsl #5
  4181f8:	add	x0, sp, #0xd0
  4181fc:	add	x27, x27, #0x1
  418200:	bl	413764 <_obstack_memory_used@@Base+0x64>
  418204:	add	x28, x28, #0x18
  418208:	cmp	x27, x20
  41820c:	b.ne	418148 <_obstack_memory_used@@Base+0x4a48>  // b.any
  418210:	ldr	w0, [sp, #96]
  418214:	cbnz	w0, 418388 <_obstack_memory_used@@Base+0x4c88>
  418218:	mov	x1, #0x100                 	// #256
  41821c:	mov	x0, #0x8                   	// #8
  418220:	bl	402610 <calloc@plt>
  418224:	str	x0, [x24, #88]
  418228:	cbz	x0, 418314 <_obstack_memory_used@@Base+0x4c14>
  41822c:	add	x21, x21, #0xb8
  418230:	mov	x1, #0x0                   	// #0
  418234:	add	x2, sp, #0xd0
  418238:	lsl	x6, x1, #3
  41823c:	mov	x5, #0x1                   	// #1
  418240:	ldr	x3, [x2, x1]
  418244:	cbnz	x3, 418334 <_obstack_memory_used@@Base+0x4c34>
  418248:	add	x1, x1, #0x8
  41824c:	cmp	x1, #0x20
  418250:	b.ne	418234 <_obstack_memory_used@@Base+0x4b34>  // b.any
  418254:	ldr	x1, [sp, #208]
  418258:	tst	w1, #0x400
  41825c:	b.eq	41828c <_obstack_memory_used@@Base+0x4b8c>  // b.none
  418260:	mov	x1, #0x0                   	// #0
  418264:	lsl	x2, x1, #5
  418268:	ldr	x2, [x26, x2]
  41826c:	tst	w2, #0x400
  418270:	b.eq	41840c <_obstack_memory_used@@Base+0x4d0c>  // b.none
  418274:	ldr	x2, [sp, #104]
  418278:	ldr	x1, [x2, x1, lsl #3]
  41827c:	str	x1, [x0, #80]
  418280:	ldr	w2, [sp, #96]
  418284:	cbz	w2, 41828c <_obstack_memory_used@@Base+0x4b8c>
  418288:	str	x1, [x0, #2128]
  41828c:	mov	x0, x23
  418290:	bl	4027a0 <free@plt>
  418294:	ldr	x0, [sp, #192]
  418298:	add	x23, x22, #0x10
  41829c:	mov	x19, #0x0                   	// #0
  4182a0:	mov	x21, #0x18                  	// #24
  4182a4:	bl	4027a0 <free@plt>
  4182a8:	mul	x0, x19, x21
  4182ac:	add	x19, x19, #0x1
  4182b0:	ldr	x0, [x23, x0]
  4182b4:	bl	4027a0 <free@plt>
  4182b8:	cmp	x19, x20
  4182bc:	b.ne	4182a8 <_obstack_memory_used@@Base+0x4ba8>  // b.any
  4182c0:	mov	x0, x22
  4182c4:	bl	4027a0 <free@plt>
  4182c8:	mov	w0, #0x1                   	// #1
  4182cc:	b	417cac <_obstack_memory_used@@Base+0x45ac>
  4182d0:	ldr	x0, [x28, #8]
  4182d4:	ldr	x1, [x0, x2, lsl #3]
  4182d8:	ldr	x0, [x21, #24]
  4182dc:	ldr	x0, [x0, x1, lsl #3]
  4182e0:	cmn	x0, #0x1
  4182e4:	b.ne	4182f0 <_obstack_memory_used@@Base+0x4bf0>  // b.any
  4182e8:	add	x2, x2, #0x1
  4182ec:	b	418150 <_obstack_memory_used@@Base+0x4a50>
  4182f0:	str	x2, [sp, #120]
  4182f4:	ldr	x1, [x21, #48]
  4182f8:	ldr	x2, [sp, #112]
  4182fc:	madd	x1, x0, x2, x1
  418300:	add	x0, sp, #0xb0
  418304:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  418308:	str	w0, [sp, #144]
  41830c:	ldr	x2, [sp, #120]
  418310:	cbz	w0, 4182e8 <_obstack_memory_used@@Base+0x4be8>
  418314:	mov	x0, x23
  418318:	bl	4027a0 <free@plt>
  41831c:	b	4180e8 <_obstack_memory_used@@Base+0x49e8>
  418320:	ldr	x1, [sp, #104]
  418324:	str	x0, [x25, x27, lsl #3]
  418328:	ldr	x0, [x23, x27, lsl #3]
  41832c:	str	x0, [x1, x27, lsl #3]
  418330:	b	4181f4 <_obstack_memory_used@@Base+0x4af4>
  418334:	tbz	w3, #0, 418368 <_obstack_memory_used@@Base+0x4c68>
  418338:	add	x7, x22, x1
  41833c:	mov	x2, #0x0                   	// #0
  418340:	ldr	x8, [x7, #6144]
  418344:	add	x7, x7, #0x20
  418348:	tst	x5, x8
  41834c:	b.eq	418378 <_obstack_memory_used@@Base+0x4c78>  // b.none
  418350:	ldr	x7, [x21, x1]
  418354:	lsl	x2, x2, #3
  418358:	tst	x5, x7
  41835c:	b.eq	418380 <_obstack_memory_used@@Base+0x4c80>  // b.none
  418360:	ldr	x2, [x25, x2]
  418364:	str	x2, [x0, x6, lsl #3]
  418368:	lsl	x5, x5, #1
  41836c:	lsr	x3, x3, #1
  418370:	add	x6, x6, #0x1
  418374:	b	418244 <_obstack_memory_used@@Base+0x4b44>
  418378:	add	x2, x2, #0x1
  41837c:	b	418340 <_obstack_memory_used@@Base+0x4c40>
  418380:	ldr	x2, [x23, x2]
  418384:	b	418364 <_obstack_memory_used@@Base+0x4c64>
  418388:	mov	x1, #0x200                 	// #512
  41838c:	mov	x0, #0x8                   	// #8
  418390:	bl	402610 <calloc@plt>
  418394:	str	x0, [x24, #96]
  418398:	cbz	x0, 418314 <_obstack_memory_used@@Base+0x4c14>
  41839c:	mov	x1, #0x0                   	// #0
  4183a0:	add	x2, sp, #0xd0
  4183a4:	add	x5, x0, x1, lsl #6
  4183a8:	mov	x6, #0x1                   	// #1
  4183ac:	ldr	x3, [x2, x1]
  4183b0:	cbnz	x3, 4183c4 <_obstack_memory_used@@Base+0x4cc4>
  4183b4:	add	x1, x1, #0x8
  4183b8:	cmp	x1, #0x20
  4183bc:	b.ne	4183a0 <_obstack_memory_used@@Base+0x4ca0>  // b.any
  4183c0:	b	418254 <_obstack_memory_used@@Base+0x4b54>
  4183c4:	tbz	w3, #0, 4183f4 <_obstack_memory_used@@Base+0x4cf4>
  4183c8:	add	x7, x22, x1
  4183cc:	mov	x2, #0x0                   	// #0
  4183d0:	ldr	x8, [x7, #6144]
  4183d4:	add	x7, x7, #0x20
  4183d8:	tst	x6, x8
  4183dc:	b.eq	418404 <_obstack_memory_used@@Base+0x4d04>  // b.none
  4183e0:	lsl	x2, x2, #3
  4183e4:	ldr	x7, [x23, x2]
  4183e8:	str	x7, [x5]
  4183ec:	ldr	x2, [x25, x2]
  4183f0:	str	x2, [x5, #2048]
  4183f4:	lsl	x6, x6, #1
  4183f8:	lsr	x3, x3, #1
  4183fc:	add	x5, x5, #0x8
  418400:	b	4183b0 <_obstack_memory_used@@Base+0x4cb0>
  418404:	add	x2, x2, #0x1
  418408:	b	4183d0 <_obstack_memory_used@@Base+0x4cd0>
  41840c:	add	x1, x1, #0x1
  418410:	cmp	x1, x20
  418414:	b.ne	418264 <_obstack_memory_used@@Base+0x4b64>  // b.any
  418418:	b	41828c <_obstack_memory_used@@Base+0x4b8c>
  41841c:	stp	x29, x30, [sp, #-32]!
  418420:	mov	x29, sp
  418424:	stp	x19, x20, [sp, #16]
  418428:	mov	x19, x0
  41842c:	tbz	x1, #63, 418440 <_obstack_memory_used@@Base+0x4d40>
  418430:	ldr	w0, [x19, #112]
  418434:	ldp	x19, x20, [sp, #16]
  418438:	ldp	x29, x30, [sp], #32
  41843c:	ret
  418440:	ldr	x0, [x0, #88]
  418444:	cmp	x0, x1
  418448:	b.ne	418460 <_obstack_memory_used@@Base+0x4d60>  // b.any
  41844c:	tst	x2, #0x2
  418450:	mov	w0, #0x8                   	// #8
  418454:	mov	w1, #0xa                   	// #10
  418458:	csel	w0, w0, w1, ne  // ne = any
  41845c:	b	418434 <_obstack_memory_used@@Base+0x4d34>
  418460:	ldr	w0, [x19, #144]
  418464:	cmp	w0, #0x1
  418468:	b.gt	4184e4 <_obstack_memory_used@@Base+0x4de4>
  41846c:	ldr	x0, [x19, #8]
  418470:	ldrb	w2, [x0, x1]
  418474:	ldrb	w0, [x0, x1]
  418478:	ldr	x1, [x19, #128]
  41847c:	asr	x0, x0, #6
  418480:	ldr	x0, [x1, x0, lsl #3]
  418484:	lsr	x0, x0, x2
  418488:	tbnz	w0, #0, 4184f4 <_obstack_memory_used@@Base+0x4df4>
  41848c:	cmp	w2, #0xa
  418490:	b	4184cc <_obstack_memory_used@@Base+0x4dcc>
  418494:	sub	x1, x1, #0x1
  418498:	cmn	x1, #0x1
  41849c:	b.eq	418430 <_obstack_memory_used@@Base+0x4d30>  // b.none
  4184a0:	ldr	w20, [x0, x1, lsl #2]
  4184a4:	cmn	w20, #0x1
  4184a8:	b.eq	418494 <_obstack_memory_used@@Base+0x4d94>  // b.none
  4184ac:	ldrb	w0, [x19, #142]
  4184b0:	cbz	w0, 4184c8 <_obstack_memory_used@@Base+0x4dc8>
  4184b4:	mov	w0, w20
  4184b8:	bl	4028b0 <iswalnum@plt>
  4184bc:	cbnz	w0, 4184f4 <_obstack_memory_used@@Base+0x4df4>
  4184c0:	cmp	w20, #0x5f
  4184c4:	b.eq	4184f4 <_obstack_memory_used@@Base+0x4df4>  // b.none
  4184c8:	cmp	w20, #0xa
  4184cc:	b.ne	4184ec <_obstack_memory_used@@Base+0x4dec>  // b.any
  4184d0:	ldrb	w0, [x19, #141]
  4184d4:	cmp	w0, #0x0
  4184d8:	cset	w0, ne  // ne = any
  4184dc:	lsl	w0, w0, #1
  4184e0:	b	418434 <_obstack_memory_used@@Base+0x4d34>
  4184e4:	ldr	x0, [x19, #16]
  4184e8:	b	4184a0 <_obstack_memory_used@@Base+0x4da0>
  4184ec:	mov	w0, #0x0                   	// #0
  4184f0:	b	418434 <_obstack_memory_used@@Base+0x4d34>
  4184f4:	mov	w0, #0x1                   	// #1
  4184f8:	b	418434 <_obstack_memory_used@@Base+0x4d34>
  4184fc:	stp	x29, x30, [sp, #-32]!
  418500:	mov	x29, sp
  418504:	stp	x19, x20, [sp, #16]
  418508:	mov	x20, x1
  41850c:	mov	x1, x2
  418510:	ldr	w2, [x0, #160]
  418514:	mov	x19, x0
  418518:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41851c:	and	w6, w0, #0x8
  418520:	ldr	x5, [x20, #16]
  418524:	and	w7, w0, #0x2
  418528:	and	w2, w0, #0x1
  41852c:	mov	x4, #0x0                   	// #0
  418530:	cmp	x5, x4
  418534:	b.gt	418548 <_obstack_memory_used@@Base+0x4e48>
  418538:	mov	x0, #0x0                   	// #0
  41853c:	ldp	x19, x20, [sp, #16]
  418540:	ldp	x29, x30, [sp], #32
  418544:	ret
  418548:	ldr	x0, [x20, #24]
  41854c:	ldr	x1, [x19, #152]
  418550:	ldr	x0, [x0, x4, lsl #3]
  418554:	ldr	x1, [x1]
  418558:	add	x1, x1, x0, lsl #4
  41855c:	ldr	w3, [x1, #8]
  418560:	ldrb	w1, [x1, #8]
  418564:	ubfx	x3, x3, #8, #10
  418568:	cmp	w1, #0x2
  41856c:	b.ne	418594 <_obstack_memory_used@@Base+0x4e94>  // b.any
  418570:	cbz	w3, 41853c <_obstack_memory_used@@Base+0x4e3c>
  418574:	tbz	w3, #2, 41857c <_obstack_memory_used@@Base+0x4e7c>
  418578:	cbz	w2, 418594 <_obstack_memory_used@@Base+0x4e94>
  41857c:	tbz	w3, #3, 418584 <_obstack_memory_used@@Base+0x4e84>
  418580:	cbnz	w2, 418594 <_obstack_memory_used@@Base+0x4e94>
  418584:	tbz	w3, #5, 41858c <_obstack_memory_used@@Base+0x4e8c>
  418588:	cbz	w7, 418594 <_obstack_memory_used@@Base+0x4e94>
  41858c:	tbz	w3, #7, 41853c <_obstack_memory_used@@Base+0x4e3c>
  418590:	cbnz	w6, 41853c <_obstack_memory_used@@Base+0x4e3c>
  418594:	add	x4, x4, #0x1
  418598:	b	418530 <_obstack_memory_used@@Base+0x4e30>
  41859c:	stp	x29, x30, [sp, #-128]!
  4185a0:	mov	x29, sp
  4185a4:	stp	x19, x20, [sp, #16]
  4185a8:	mov	x19, x0
  4185ac:	ldr	x20, [x0, #40]
  4185b0:	stp	x21, x22, [sp, #32]
  4185b4:	mov	x22, x1
  4185b8:	stp	x23, x24, [sp, #48]
  4185bc:	cmp	x20, x1
  4185c0:	stp	x25, x26, [sp, #64]
  4185c4:	mov	w25, w2
  4185c8:	stp	x27, x28, [sp, #80]
  4185cc:	b.gt	41871c <_obstack_memory_used@@Base+0x501c>
  4185d0:	sub	x20, x1, x20
  4185d4:	cbz	x20, 4186c4 <_obstack_memory_used@@Base+0x4fc4>
  4185d8:	ldp	x23, x1, [x19, #48]
  4185dc:	ldrb	w0, [x19, #140]
  4185e0:	cmp	x1, x20
  4185e4:	b.le	4188b8 <_obstack_memory_used@@Base+0x51b8>
  4185e8:	cbz	w0, 41884c <_obstack_memory_used@@Base+0x514c>
  4185ec:	ldr	x24, [x19, #24]
  4185f0:	mov	x0, x23
  4185f4:	mov	x1, #0x0                   	// #0
  4185f8:	mov	x3, #0x2                   	// #2
  4185fc:	add	x21, x1, x0
  418600:	sdiv	x21, x21, x3
  418604:	ldr	x2, [x24, x21, lsl #3]
  418608:	cmp	x2, x20
  41860c:	b.gt	418774 <_obstack_memory_used@@Base+0x5074>
  418610:	b.ge	41862c <_obstack_memory_used@@Base+0x4f2c>  // b.tcont
  418614:	add	x1, x21, #0x1
  418618:	cmp	x1, x0
  41861c:	b.lt	4185fc <_obstack_memory_used@@Base+0x4efc>  // b.tstop
  418620:	cmp	x2, x20
  418624:	b.ge	41862c <_obstack_memory_used@@Base+0x4f2c>  // b.tcont
  418628:	add	x21, x21, #0x1
  41862c:	mov	w2, w25
  418630:	sub	x1, x21, #0x1
  418634:	mov	x0, x19
  418638:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41863c:	str	w0, [x19, #112]
  418640:	cmp	x20, x23
  418644:	b.ge	418798 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  418648:	cmp	x20, x21
  41864c:	b.ne	418798 <_obstack_memory_used@@Base+0x5098>  // b.any
  418650:	ldr	x0, [x24, x20, lsl #3]
  418654:	cmp	x0, x20
  418658:	b.ne	418798 <_obstack_memory_used@@Base+0x5098>  // b.any
  41865c:	ldr	x0, [x19, #16]
  418660:	sub	x2, x23, x20
  418664:	lsl	x2, x2, #2
  418668:	add	x1, x0, x20, lsl #2
  41866c:	bl	402380 <memmove@plt>
  418670:	ldr	x0, [x19, #8]
  418674:	ldr	x2, [x19, #48]
  418678:	add	x1, x0, x20
  41867c:	sub	x2, x2, x20
  418680:	bl	402380 <memmove@plt>
  418684:	ldr	x0, [x19, #48]
  418688:	lsl	x1, x20, #3
  41868c:	sub	x0, x0, x20
  418690:	str	x0, [x19, #48]
  418694:	ldr	x0, [x19, #56]
  418698:	sub	x0, x0, x20
  41869c:	str	x0, [x19, #56]
  4186a0:	mov	x0, #0x0                   	// #0
  4186a4:	ldr	x2, [x19, #48]
  4186a8:	cmp	x2, x0
  4186ac:	b.gt	41877c <_obstack_memory_used@@Base+0x507c>
  4186b0:	ldrb	w0, [x19, #139]
  4186b4:	cbnz	w0, 4186c4 <_obstack_memory_used@@Base+0x4fc4>
  4186b8:	ldr	x0, [x19, #8]
  4186bc:	add	x0, x0, x20
  4186c0:	str	x0, [x19, #8]
  4186c4:	ldr	x0, [x19, #88]
  4186c8:	str	x22, [x19, #40]
  4186cc:	ldr	x1, [x19, #104]
  4186d0:	sub	x0, x0, x20
  4186d4:	str	x0, [x19, #88]
  4186d8:	sub	x20, x1, x20
  4186dc:	ldr	w1, [x19, #144]
  4186e0:	str	x20, [x19, #104]
  4186e4:	cmp	w1, #0x1
  4186e8:	b.le	418b58 <_obstack_memory_used@@Base+0x5458>
  4186ec:	ldrb	w0, [x19, #136]
  4186f0:	cbz	w0, 418b44 <_obstack_memory_used@@Base+0x5444>
  4186f4:	mov	x0, x19
  4186f8:	bl	4141a8 <_obstack_memory_used@@Base+0xaa8>
  4186fc:	cbz	w0, 418b4c <_obstack_memory_used@@Base+0x544c>
  418700:	ldp	x19, x20, [sp, #16]
  418704:	ldp	x21, x22, [sp, #32]
  418708:	ldp	x23, x24, [sp, #48]
  41870c:	ldp	x25, x26, [sp, #64]
  418710:	ldp	x27, x28, [sp, #80]
  418714:	ldp	x29, x30, [sp], #128
  418718:	ret
  41871c:	ldr	w0, [x0, #144]
  418720:	cmp	w0, #0x1
  418724:	b.le	41872c <_obstack_memory_used@@Base+0x502c>
  418728:	str	xzr, [x19, #32]
  41872c:	ldr	x0, [x19, #80]
  418730:	str	x0, [x19, #88]
  418734:	ldr	x0, [x19, #96]
  418738:	tst	x25, #0x1
  41873c:	mov	w1, #0x6                   	// #6
  418740:	str	x0, [x19, #104]
  418744:	mov	w0, #0x4                   	// #4
  418748:	csel	w0, w0, w1, ne  // ne = any
  41874c:	str	w0, [x19, #112]
  418750:	ldrb	w0, [x19, #139]
  418754:	stp	xzr, xzr, [x19, #40]
  418758:	str	xzr, [x19, #56]
  41875c:	strb	wzr, [x19, #140]
  418760:	cbnz	w0, 41876c <_obstack_memory_used@@Base+0x506c>
  418764:	ldr	x0, [x19]
  418768:	str	x0, [x19, #8]
  41876c:	mov	x20, x22
  418770:	b	4185d4 <_obstack_memory_used@@Base+0x4ed4>
  418774:	mov	x0, x21
  418778:	b	418618 <_obstack_memory_used@@Base+0x4f18>
  41877c:	ldr	x3, [x19, #24]
  418780:	ldr	x2, [x3, x1]
  418784:	add	x1, x1, #0x8
  418788:	sub	x2, x2, x20
  41878c:	str	x2, [x3, x0, lsl #3]
  418790:	add	x0, x0, #0x1
  418794:	b	4186a4 <_obstack_memory_used@@Base+0x4fa4>
  418798:	ldr	x0, [x19, #80]
  41879c:	sub	x1, x24, #0x8
  4187a0:	strb	wzr, [x19, #140]
  4187a4:	sub	x0, x0, x22
  4187a8:	add	x0, x0, x20
  4187ac:	str	x0, [x19, #88]
  4187b0:	ldr	x0, [x19, #96]
  4187b4:	sub	x0, x0, x22
  4187b8:	add	x0, x0, x20
  4187bc:	str	x0, [x19, #104]
  4187c0:	cmp	x21, #0x0
  4187c4:	b.le	4187d4 <_obstack_memory_used@@Base+0x50d4>
  4187c8:	ldr	x0, [x1, x21, lsl #3]
  4187cc:	cmp	x0, x20
  4187d0:	b.eq	4187ec <_obstack_memory_used@@Base+0x50ec>  // b.none
  4187d4:	cmp	x21, x23
  4187d8:	b.lt	4187f4 <_obstack_memory_used@@Base+0x50f4>  // b.tstop
  4187dc:	b.ne	41880c <_obstack_memory_used@@Base+0x510c>  // b.any
  4187e0:	str	xzr, [x19, #48]
  4187e4:	ldr	x0, [x19, #48]
  4187e8:	b	4188b0 <_obstack_memory_used@@Base+0x51b0>
  4187ec:	sub	x21, x21, #0x1
  4187f0:	b	4187c0 <_obstack_memory_used@@Base+0x50c0>
  4187f4:	ldr	x0, [x19, #16]
  4187f8:	ldr	w0, [x0, x21, lsl #2]
  4187fc:	cmn	w0, #0x1
  418800:	b.ne	41880c <_obstack_memory_used@@Base+0x510c>  // b.any
  418804:	add	x21, x21, #0x1
  418808:	b	4187d4 <_obstack_memory_used@@Base+0x50d4>
  41880c:	ldr	x2, [x24, x21, lsl #3]
  418810:	sub	x2, x2, x20
  418814:	str	x2, [x19, #48]
  418818:	cbz	x2, 4187e4 <_obstack_memory_used@@Base+0x50e4>
  41881c:	mov	x0, #0x0                   	// #0
  418820:	mov	w1, #0xffffffff            	// #-1
  418824:	b	418834 <_obstack_memory_used@@Base+0x5134>
  418828:	ldr	x3, [x19, #16]
  41882c:	str	w1, [x3, x0, lsl #2]
  418830:	add	x0, x0, #0x1
  418834:	cmp	x2, x0
  418838:	b.gt	418828 <_obstack_memory_used@@Base+0x5128>
  41883c:	ldr	x0, [x19, #8]
  418840:	mov	w1, #0xff                  	// #255
  418844:	bl	4025f0 <memset@plt>
  418848:	b	4187e4 <_obstack_memory_used@@Base+0x50e4>
  41884c:	mov	w2, w25
  418850:	sub	x1, x20, #0x1
  418854:	mov	x0, x19
  418858:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41885c:	str	w0, [x19, #112]
  418860:	ldr	w0, [x19, #144]
  418864:	cmp	w0, #0x1
  418868:	b.le	418880 <_obstack_memory_used@@Base+0x5180>
  41886c:	ldr	x0, [x19, #16]
  418870:	sub	x2, x23, x20
  418874:	lsl	x2, x2, #2
  418878:	add	x1, x0, x20, lsl #2
  41887c:	bl	402380 <memmove@plt>
  418880:	ldrb	w0, [x19, #139]
  418884:	cbz	w0, 41889c <_obstack_memory_used@@Base+0x519c>
  418888:	ldr	x0, [x19, #8]
  41888c:	ldr	x2, [x19, #48]
  418890:	add	x1, x0, x20
  418894:	sub	x2, x2, x20
  418898:	bl	402380 <memmove@plt>
  41889c:	ldr	x0, [x19, #48]
  4188a0:	sub	x0, x0, x20
  4188a4:	str	x0, [x19, #48]
  4188a8:	ldr	x0, [x19, #56]
  4188ac:	sub	x0, x0, x20
  4188b0:	str	x0, [x19, #56]
  4188b4:	b	4186b0 <_obstack_memory_used@@Base+0x4fb0>
  4188b8:	cbz	w0, 4188e0 <_obstack_memory_used@@Base+0x51e0>
  4188bc:	ldr	x0, [x19, #80]
  4188c0:	strb	wzr, [x19, #140]
  4188c4:	sub	x0, x0, x22
  4188c8:	add	x0, x0, x20
  4188cc:	str	x0, [x19, #88]
  4188d0:	ldr	x0, [x19, #96]
  4188d4:	sub	x0, x0, x22
  4188d8:	add	x0, x0, x20
  4188dc:	str	x0, [x19, #104]
  4188e0:	ldr	w0, [x19, #144]
  4188e4:	str	xzr, [x19, #48]
  4188e8:	cmp	w0, #0x1
  4188ec:	ldr	x21, [x19, #40]
  4188f0:	b.le	418adc <_obstack_memory_used@@Base+0x53dc>
  4188f4:	ldrb	w1, [x19, #137]
  4188f8:	cbz	w1, 4189a8 <_obstack_memory_used@@Base+0x52a8>
  4188fc:	ldr	x1, [x19]
  418900:	sub	x0, x20, w0, sxtw
  418904:	sub	x24, x20, #0x1
  418908:	add	x21, x1, x21
  41890c:	add	x0, x21, x0
  418910:	add	x24, x21, x24
  418914:	cmp	x1, x0
  418918:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41891c:	cmp	x0, x24
  418920:	b.hi	4189a8 <_obstack_memory_used@@Base+0x52a8>  // b.pmore
  418924:	ldrb	w1, [x24]
  418928:	and	w1, w1, #0xc0
  41892c:	cmp	w1, #0x80
  418930:	b.eq	418a0c <_obstack_memory_used@@Base+0x530c>  // b.none
  418934:	ldr	x0, [x19, #88]
  418938:	mov	x1, x24
  41893c:	ldr	x3, [x19, #120]
  418940:	add	x0, x21, x0
  418944:	sub	x2, x0, x24
  418948:	cbz	x3, 418968 <_obstack_memory_used@@Base+0x5268>
  41894c:	cmp	x2, #0x6
  418950:	mov	x0, #0x6                   	// #6
  418954:	csel	x0, x2, x0, le
  418958:	add	x1, sp, #0x70
  41895c:	sxtw	x0, w0
  418960:	sub	x0, x0, #0x1
  418964:	tbz	w0, #31, 4189fc <_obstack_memory_used@@Base+0x52fc>
  418968:	add	x21, x21, x20
  41896c:	add	x3, sp, #0x78
  418970:	sub	x24, x21, x24
  418974:	add	x0, sp, #0x6c
  418978:	str	xzr, [sp, #120]
  41897c:	bl	413374 <wcrtomb@plt+0x10964>
  418980:	cmp	x24, x0
  418984:	b.hi	4189a8 <_obstack_memory_used@@Base+0x52a8>  // b.pmore
  418988:	cmn	x0, #0x3
  41898c:	b.hi	4189a8 <_obstack_memory_used@@Base+0x52a8>  // b.pmore
  418990:	sub	x0, x0, x24
  418994:	ldr	w24, [sp, #108]
  418998:	str	xzr, [x19, #32]
  41899c:	str	x0, [x19, #48]
  4189a0:	cmn	w24, #0x1
  4189a4:	b.ne	418a74 <_obstack_memory_used@@Base+0x5374>  // b.any
  4189a8:	ldr	x21, [x19, #40]
  4189ac:	add	x27, x19, #0x20
  4189b0:	ldr	x0, [x19, #56]
  4189b4:	mov	w24, #0xffffffff            	// #-1
  4189b8:	add	x21, x21, x0
  4189bc:	cmp	x22, x21
  4189c0:	b.gt	418a14 <_obstack_memory_used@@Base+0x5314>
  4189c4:	sub	x21, x21, x22
  4189c8:	str	x21, [x19, #48]
  4189cc:	cmn	w24, #0x1
  4189d0:	b.ne	418a74 <_obstack_memory_used@@Base+0x5374>  // b.any
  4189d4:	mov	w2, w25
  4189d8:	sub	x1, x23, #0x1
  4189dc:	mov	x0, x19
  4189e0:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  4189e4:	ldr	x2, [x19, #48]
  4189e8:	str	w0, [x19, #112]
  4189ec:	cbz	x2, 4187e4 <_obstack_memory_used@@Base+0x50e4>
  4189f0:	mov	x0, #0x0                   	// #0
  4189f4:	mov	w1, #0xffffffff            	// #-1
  4189f8:	b	418ac8 <_obstack_memory_used@@Base+0x53c8>
  4189fc:	ldrb	w4, [x24, x0]
  418a00:	ldrb	w4, [x3, x4]
  418a04:	strb	w4, [x1, x0]
  418a08:	b	418960 <_obstack_memory_used@@Base+0x5260>
  418a0c:	sub	x24, x24, #0x1
  418a10:	b	41891c <_obstack_memory_used@@Base+0x521c>
  418a14:	ldr	x1, [x19]
  418a18:	mov	x3, x27
  418a1c:	ldr	x26, [x19, #80]
  418a20:	add	x1, x1, x21
  418a24:	add	x0, sp, #0x78
  418a28:	sub	x26, x26, x21
  418a2c:	mov	x2, x26
  418a30:	ldr	x28, [x19, #32]
  418a34:	bl	413374 <wcrtomb@plt+0x10964>
  418a38:	sub	x1, x0, #0x1
  418a3c:	ldr	w24, [sp, #120]
  418a40:	cmn	x1, #0x4
  418a44:	b.ls	418a64 <_obstack_memory_used@@Base+0x5364>  // b.plast
  418a48:	cmp	x0, #0x0
  418a4c:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  418a50:	b.eq	418a6c <_obstack_memory_used@@Base+0x536c>  // b.none
  418a54:	ldr	x0, [x19]
  418a58:	ldrb	w24, [x0, x21]
  418a5c:	mov	x0, #0x1                   	// #1
  418a60:	str	x28, [x19, #32]
  418a64:	add	x21, x21, x0
  418a68:	b	4189bc <_obstack_memory_used@@Base+0x52bc>
  418a6c:	mov	w24, #0x0                   	// #0
  418a70:	b	418a5c <_obstack_memory_used@@Base+0x535c>
  418a74:	ldrb	w0, [x19, #142]
  418a78:	cbz	w0, 418a90 <_obstack_memory_used@@Base+0x5390>
  418a7c:	mov	w0, w24
  418a80:	bl	4028b0 <iswalnum@plt>
  418a84:	cbnz	w0, 418aac <_obstack_memory_used@@Base+0x53ac>
  418a88:	cmp	w24, #0x5f
  418a8c:	b.eq	418aac <_obstack_memory_used@@Base+0x53ac>  // b.none
  418a90:	cmp	w24, #0xa
  418a94:	b.ne	418ab4 <_obstack_memory_used@@Base+0x53b4>  // b.any
  418a98:	ldrb	w0, [x19, #141]
  418a9c:	cmp	w0, #0x0
  418aa0:	cset	w0, ne  // ne = any
  418aa4:	lsl	w0, w0, #1
  418aa8:	b	4189e4 <_obstack_memory_used@@Base+0x52e4>
  418aac:	mov	w0, #0x1                   	// #1
  418ab0:	b	4189e4 <_obstack_memory_used@@Base+0x52e4>
  418ab4:	mov	w0, #0x0                   	// #0
  418ab8:	b	4189e4 <_obstack_memory_used@@Base+0x52e4>
  418abc:	ldr	x3, [x19, #16]
  418ac0:	str	w1, [x3, x0, lsl #2]
  418ac4:	add	x0, x0, #0x1
  418ac8:	cmp	x2, x0
  418acc:	b.gt	418abc <_obstack_memory_used@@Base+0x53bc>
  418ad0:	ldrb	w0, [x19, #139]
  418ad4:	cbz	w0, 4187e4 <_obstack_memory_used@@Base+0x50e4>
  418ad8:	b	41883c <_obstack_memory_used@@Base+0x513c>
  418adc:	ldr	x0, [x19]
  418ae0:	ldr	x1, [x19, #120]
  418ae4:	add	x21, x0, x21
  418ae8:	add	x21, x21, x20
  418aec:	ldurb	w0, [x21, #-1]
  418af0:	str	xzr, [x19, #56]
  418af4:	cbz	x1, 418b00 <_obstack_memory_used@@Base+0x5400>
  418af8:	and	x0, x0, #0xff
  418afc:	ldrb	w0, [x1, x0]
  418b00:	ldr	x2, [x19, #128]
  418b04:	ubfx	x1, x0, #6, #2
  418b08:	ldr	x1, [x2, x1, lsl #3]
  418b0c:	lsr	x1, x1, x0
  418b10:	tbnz	w1, #0, 418b34 <_obstack_memory_used@@Base+0x5434>
  418b14:	cmp	w0, #0xa
  418b18:	b.ne	418b3c <_obstack_memory_used@@Base+0x543c>  // b.any
  418b1c:	ldrb	w0, [x19, #141]
  418b20:	cmp	w0, #0x0
  418b24:	cset	w0, ne  // ne = any
  418b28:	lsl	w0, w0, #1
  418b2c:	str	w0, [x19, #112]
  418b30:	b	4186b0 <_obstack_memory_used@@Base+0x4fb0>
  418b34:	mov	w0, #0x1                   	// #1
  418b38:	b	418b2c <_obstack_memory_used@@Base+0x542c>
  418b3c:	mov	w0, #0x0                   	// #0
  418b40:	b	418b2c <_obstack_memory_used@@Base+0x542c>
  418b44:	mov	x0, x19
  418b48:	bl	414038 <_obstack_memory_used@@Base+0x938>
  418b4c:	mov	w0, #0x0                   	// #0
  418b50:	str	xzr, [x19, #72]
  418b54:	b	418700 <_obstack_memory_used@@Base+0x5000>
  418b58:	ldrb	w1, [x19, #139]
  418b5c:	cbz	w1, 418b88 <_obstack_memory_used@@Base+0x5488>
  418b60:	ldrb	w0, [x19, #136]
  418b64:	cbz	w0, 418b74 <_obstack_memory_used@@Base+0x5474>
  418b68:	mov	x0, x19
  418b6c:	bl	414690 <_obstack_memory_used@@Base+0xf90>
  418b70:	b	418b4c <_obstack_memory_used@@Base+0x544c>
  418b74:	ldr	x0, [x19, #120]
  418b78:	cbz	x0, 418b4c <_obstack_memory_used@@Base+0x544c>
  418b7c:	mov	x0, x19
  418b80:	bl	4137d0 <_obstack_memory_used@@Base+0xd0>
  418b84:	b	418b4c <_obstack_memory_used@@Base+0x544c>
  418b88:	str	x0, [x19, #48]
  418b8c:	b	418b4c <_obstack_memory_used@@Base+0x544c>
  418b90:	stp	x29, x30, [sp, #-112]!
  418b94:	mov	x29, sp
  418b98:	stp	x19, x20, [sp, #16]
  418b9c:	mov	x19, x1
  418ba0:	ldr	x1, [x1, #8]
  418ba4:	stp	x21, x22, [sp, #32]
  418ba8:	mov	x21, x0
  418bac:	add	x0, sp, #0x58
  418bb0:	stp	x23, x24, [sp, #48]
  418bb4:	mov	x23, x2
  418bb8:	mov	w24, w3
  418bbc:	stp	x25, x26, [sp, #64]
  418bc0:	bl	414000 <_obstack_memory_used@@Base+0x900>
  418bc4:	mov	w20, w0
  418bc8:	cbnz	w0, 418c2c <_obstack_memory_used@@Base+0x552c>
  418bcc:	mov	x22, #0x0                   	// #0
  418bd0:	mov	x26, #0x18                  	// #24
  418bd4:	ldp	x1, x0, [x19, #8]
  418bd8:	cmp	x1, x22
  418bdc:	b.gt	418bf8 <_obstack_memory_used@@Base+0x54f8>
  418be0:	bl	4027a0 <free@plt>
  418be4:	ldp	x0, x1, [sp, #88]
  418be8:	stp	x0, x1, [x19]
  418bec:	ldr	x0, [sp, #104]
  418bf0:	str	x0, [x19, #16]
  418bf4:	b	418c2c <_obstack_memory_used@@Base+0x552c>
  418bf8:	ldr	x2, [x0, x22, lsl #3]
  418bfc:	mov	x0, #0x0                   	// #0
  418c00:	ldr	x1, [x21, #48]
  418c04:	madd	x1, x2, x26, x1
  418c08:	ldr	x5, [x1, #8]
  418c0c:	cmp	x0, x5
  418c10:	b.lt	418c48 <_obstack_memory_used@@Base+0x5548>  // b.tstop
  418c14:	add	x0, sp, #0x58
  418c18:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  418c1c:	cbz	w0, 418c9c <_obstack_memory_used@@Base+0x559c>
  418c20:	mov	w20, w0
  418c24:	ldr	x0, [sp, #104]
  418c28:	bl	4027a0 <free@plt>
  418c2c:	mov	w0, w20
  418c30:	ldp	x19, x20, [sp, #16]
  418c34:	ldp	x21, x22, [sp, #32]
  418c38:	ldp	x23, x24, [sp, #48]
  418c3c:	ldp	x25, x26, [sp, #64]
  418c40:	ldp	x29, x30, [sp], #112
  418c44:	ret
  418c48:	ldr	x3, [x1, #16]
  418c4c:	ldr	x4, [x21]
  418c50:	ldr	x3, [x3, x0, lsl #3]
  418c54:	add	x7, x4, x3, lsl #4
  418c58:	lsl	x6, x3, #4
  418c5c:	ldrb	w7, [x7, #8]
  418c60:	cmp	w24, w7
  418c64:	b.ne	418c74 <_obstack_memory_used@@Base+0x5574>  // b.any
  418c68:	ldr	x4, [x4, x6]
  418c6c:	cmp	x23, x4
  418c70:	b.eq	418c7c <_obstack_memory_used@@Base+0x557c>  // b.none
  418c74:	add	x0, x0, #0x1
  418c78:	b	418c0c <_obstack_memory_used@@Base+0x550c>
  418c7c:	cmn	x3, #0x1
  418c80:	b.eq	418c14 <_obstack_memory_used@@Base+0x5514>  // b.none
  418c84:	mov	w4, w24
  418c88:	mov	x3, x23
  418c8c:	add	x1, sp, #0x58
  418c90:	mov	x0, x21
  418c94:	bl	4163f8 <_obstack_memory_used@@Base+0x2cf8>
  418c98:	b	418c1c <_obstack_memory_used@@Base+0x551c>
  418c9c:	add	x22, x22, #0x1
  418ca0:	b	418bd4 <_obstack_memory_used@@Base+0x54d4>
  418ca4:	mov	x4, x1
  418ca8:	mov	x1, x2
  418cac:	ldr	x2, [x0, #8]
  418cb0:	ldrb	w3, [x2, x1]
  418cb4:	ldrb	w2, [x4, #8]
  418cb8:	sub	w2, w2, #0x1
  418cbc:	cmp	w2, #0x6
  418cc0:	b.hi	418d78 <_obstack_memory_used@@Base+0x5678>  // b.pmore
  418cc4:	adrp	x5, 421000 <_obstack_memory_used@@Base+0xd900>
  418cc8:	add	x5, x5, #0xd0
  418ccc:	ldrb	w2, [x5, w2, uxtw]
  418cd0:	adr	x5, 418cdc <_obstack_memory_used@@Base+0x55dc>
  418cd4:	add	x2, x5, w2, sxtb #2
  418cd8:	br	x2
  418cdc:	ldrb	w2, [x4]
  418ce0:	cmp	w2, w3
  418ce4:	b.ne	418d78 <_obstack_memory_used@@Base+0x5678>  // b.any
  418ce8:	stp	x29, x30, [sp, #-32]!
  418cec:	mov	x29, sp
  418cf0:	str	x19, [sp, #16]
  418cf4:	ldr	w19, [x4, #8]
  418cf8:	tst	w19, #0x3ff00
  418cfc:	b.eq	418d94 <_obstack_memory_used@@Base+0x5694>  // b.none
  418d00:	ldr	w2, [x0, #160]
  418d04:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  418d08:	ubfx	x1, x19, #8, #10
  418d0c:	tbz	w19, #10, 418d14 <_obstack_memory_used@@Base+0x5614>
  418d10:	tbz	w0, #0, 418d9c <_obstack_memory_used@@Base+0x569c>
  418d14:	tbz	w1, #3, 418d1c <_obstack_memory_used@@Base+0x561c>
  418d18:	tbnz	w0, #0, 418d9c <_obstack_memory_used@@Base+0x569c>
  418d1c:	tbz	w1, #5, 418d24 <_obstack_memory_used@@Base+0x5624>
  418d20:	tbz	w0, #1, 418d9c <_obstack_memory_used@@Base+0x569c>
  418d24:	ubfx	x0, x0, #3, #1
  418d28:	tst	x1, #0x80
  418d2c:	csinc	w3, w0, wzr, ne  // ne = any
  418d30:	mov	w0, w3
  418d34:	ldr	x19, [sp, #16]
  418d38:	ldp	x29, x30, [sp], #32
  418d3c:	ret
  418d40:	ldr	x2, [x4]
  418d44:	ubfx	x5, x3, #6, #2
  418d48:	ldr	x2, [x2, x5, lsl #3]
  418d4c:	lsr	x2, x2, x3
  418d50:	and	w3, w2, #0x1
  418d54:	tbnz	w2, #0, 418ce8 <_obstack_memory_used@@Base+0x55e8>
  418d58:	mov	w0, w3
  418d5c:	ret
  418d60:	tbnz	w3, #7, 418d78 <_obstack_memory_used@@Base+0x5678>
  418d64:	cmp	w3, #0xa
  418d68:	b.ne	418d80 <_obstack_memory_used@@Base+0x5680>  // b.any
  418d6c:	ldr	x2, [x0, #152]
  418d70:	ldr	x2, [x2, #216]
  418d74:	tbnz	w2, #6, 418ce8 <_obstack_memory_used@@Base+0x55e8>
  418d78:	mov	w3, #0x0                   	// #0
  418d7c:	b	418d58 <_obstack_memory_used@@Base+0x5658>
  418d80:	cbnz	w3, 418ce8 <_obstack_memory_used@@Base+0x55e8>
  418d84:	ldr	x2, [x0, #152]
  418d88:	ldr	x2, [x2, #216]
  418d8c:	tbz	w2, #7, 418ce8 <_obstack_memory_used@@Base+0x55e8>
  418d90:	b	418d78 <_obstack_memory_used@@Base+0x5678>
  418d94:	mov	w3, #0x1                   	// #1
  418d98:	b	418d30 <_obstack_memory_used@@Base+0x5630>
  418d9c:	mov	w3, #0x0                   	// #0
  418da0:	b	418d30 <_obstack_memory_used@@Base+0x5630>
  418da4:	stp	x29, x30, [sp, #-192]!
  418da8:	tst	w4, #0xff
  418dac:	mov	x29, sp
  418db0:	ldr	x0, [x0]
  418db4:	stp	x19, x20, [sp, #16]
  418db8:	mov	x20, x3
  418dbc:	stp	x21, x22, [sp, #32]
  418dc0:	mov	x22, x1
  418dc4:	stp	x23, x24, [sp, #48]
  418dc8:	mov	x23, x2
  418dcc:	stp	x25, x26, [sp, #64]
  418dd0:	stp	x27, x28, [sp, #80]
  418dd4:	str	x0, [x29, #112]
  418dd8:	mov	x0, #0x2                   	// #2
  418ddc:	str	xzr, [x29, #168]
  418de0:	str	x0, [x29, #176]
  418de4:	str	xzr, [x29, #184]
  418de8:	b.eq	418f54 <_obstack_memory_used@@Base+0x5854>  // b.none
  418dec:	mov	x0, #0x60                  	// #96
  418df0:	bl	402520 <malloc@plt>
  418df4:	str	x0, [x29, #184]
  418df8:	cbz	x0, 418f7c <_obstack_memory_used@@Base+0x587c>
  418dfc:	add	x19, x29, #0xa8
  418e00:	ldr	x0, [x29, #112]
  418e04:	stp	xzr, xzr, [x29, #144]
  418e08:	lsl	x24, x23, #4
  418e0c:	str	xzr, [x29, #160]
  418e10:	cmp	x24, #0xfbf
  418e14:	ldr	x25, [x0, #144]
  418e18:	b.hi	418f5c <_obstack_memory_used@@Base+0x585c>  // b.pmore
  418e1c:	sub	sp, sp, x24
  418e20:	str	wzr, [x29, #124]
  418e24:	mov	x21, sp
  418e28:	mov	x2, x24
  418e2c:	mov	x1, x20
  418e30:	mov	x0, x21
  418e34:	bl	402360 <memcpy@plt>
  418e38:	ldr	x0, [x20]
  418e3c:	str	x0, [x29, #136]
  418e40:	ldr	x0, [x20, #8]
  418e44:	ldr	x26, [x29, #136]
  418e48:	cmp	x0, x26
  418e4c:	b.lt	419004 <_obstack_memory_used@@Base+0x5904>  // b.tstop
  418e50:	ldr	x0, [x29, #112]
  418e54:	lsl	x1, x25, #4
  418e58:	ldr	x0, [x0]
  418e5c:	add	x2, x0, x25, lsl #4
  418e60:	ldrb	w4, [x2, #8]
  418e64:	cmp	w4, #0x8
  418e68:	b.ne	418f84 <_obstack_memory_used@@Base+0x5884>  // b.any
  418e6c:	ldr	x0, [x0, x1]
  418e70:	add	x0, x0, #0x1
  418e74:	cmp	x23, x0
  418e78:	b.le	418e90 <_obstack_memory_used@@Base+0x5790>
  418e7c:	lsl	x1, x0, #4
  418e80:	add	x0, x20, x0, lsl #4
  418e84:	str	x26, [x20, x1]
  418e88:	mov	x1, #0xffffffffffffffff    	// #-1
  418e8c:	str	x1, [x0, #8]
  418e90:	ldr	x0, [x20, #8]
  418e94:	cmp	x0, x26
  418e98:	b.ne	418ee4 <_obstack_memory_used@@Base+0x57e4>  // b.any
  418e9c:	ldr	x0, [x22, #176]
  418ea0:	cmp	x0, x25
  418ea4:	b.ne	418ee4 <_obstack_memory_used@@Base+0x57e4>  // b.any
  418ea8:	cbz	x19, 419044 <_obstack_memory_used@@Base+0x5944>
  418eac:	mov	x0, x20
  418eb0:	mov	x1, #0x0                   	// #0
  418eb4:	ldr	x2, [x0]
  418eb8:	tbnz	x2, #63, 418ff4 <_obstack_memory_used@@Base+0x58f4>
  418ebc:	ldr	x2, [x0, #8]
  418ec0:	cmn	x2, #0x1
  418ec4:	b.ne	418ff4 <_obstack_memory_used@@Base+0x58f4>  // b.any
  418ec8:	add	x4, x29, #0x90
  418ecc:	mov	x3, x20
  418ed0:	mov	x2, x23
  418ed4:	add	x1, x29, #0x88
  418ed8:	mov	x0, x19
  418edc:	bl	41502c <_obstack_memory_used@@Base+0x192c>
  418ee0:	mov	x25, x0
  418ee4:	ldr	x26, [x22, #152]
  418ee8:	mov	x27, x25
  418eec:	lsl	x28, x25, #4
  418ef0:	ldr	x0, [x26]
  418ef4:	add	x2, x0, x25, lsl #4
  418ef8:	ldrb	w1, [x2, #8]
  418efc:	tbz	w1, #3, 419144 <_obstack_memory_used@@Base+0x5a44>
  418f00:	ldr	x1, [x29, #136]
  418f04:	ldr	x0, [x22, #184]
  418f08:	ldr	x28, [x26, #40]
  418f0c:	ldr	x27, [x0, x1, lsl #3]
  418f10:	mov	x0, #0x18                  	// #24
  418f14:	mov	x1, x25
  418f18:	madd	x28, x25, x0, x28
  418f1c:	add	x27, x27, #0x8
  418f20:	add	x0, x29, #0x90
  418f24:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  418f28:	tst	w0, #0xff
  418f2c:	b.eq	41911c <_obstack_memory_used@@Base+0x5a1c>  // b.none
  418f30:	ldr	x7, [x28, #8]
  418f34:	mov	x25, #0xffffffffffffffff    	// #-1
  418f38:	mov	x6, #0x0                   	// #0
  418f3c:	cmp	x6, x7
  418f40:	b.lt	419064 <_obstack_memory_used@@Base+0x5964>  // b.tstop
  418f44:	tbz	x25, #63, 418e40 <_obstack_memory_used@@Base+0x5740>
  418f48:	cmn	x25, #0x2
  418f4c:	b.ne	419184 <_obstack_memory_used@@Base+0x5a84>  // b.any
  418f50:	b	41911c <_obstack_memory_used@@Base+0x5a1c>
  418f54:	mov	x19, #0x0                   	// #0
  418f58:	b	418e00 <_obstack_memory_used@@Base+0x5700>
  418f5c:	mov	x0, x24
  418f60:	bl	402520 <malloc@plt>
  418f64:	mov	x21, x0
  418f68:	mov	w0, #0x1                   	// #1
  418f6c:	str	w0, [x29, #124]
  418f70:	cbnz	x21, 418e28 <_obstack_memory_used@@Base+0x5728>
  418f74:	mov	x0, x19
  418f78:	bl	4172f8 <_obstack_memory_used@@Base+0x3bf8>
  418f7c:	mov	w0, #0xc                   	// #12
  418f80:	b	419024 <_obstack_memory_used@@Base+0x5924>
  418f84:	cmp	w4, #0x9
  418f88:	b.ne	418e90 <_obstack_memory_used@@Base+0x5790>  // b.any
  418f8c:	ldr	x0, [x0, x1]
  418f90:	add	x0, x0, #0x1
  418f94:	cmp	x23, x0
  418f98:	b.le	418e90 <_obstack_memory_used@@Base+0x5790>
  418f9c:	lsl	x1, x0, #4
  418fa0:	add	x0, x20, x0, lsl #4
  418fa4:	ldr	x4, [x20, x1]
  418fa8:	cmp	x26, x4
  418fac:	b.le	418fc8 <_obstack_memory_used@@Base+0x58c8>
  418fb0:	mov	x2, x24
  418fb4:	mov	x1, x20
  418fb8:	str	x26, [x0, #8]
  418fbc:	mov	x0, x21
  418fc0:	bl	402360 <memcpy@plt>
  418fc4:	b	418e90 <_obstack_memory_used@@Base+0x5790>
  418fc8:	ldrb	w2, [x2, #10]
  418fcc:	tbz	w2, #3, 418fec <_obstack_memory_used@@Base+0x58ec>
  418fd0:	ldr	x1, [x21, x1]
  418fd4:	cmn	x1, #0x1
  418fd8:	b.eq	418fec <_obstack_memory_used@@Base+0x58ec>  // b.none
  418fdc:	mov	x2, x24
  418fe0:	mov	x1, x21
  418fe4:	mov	x0, x20
  418fe8:	b	418fc0 <_obstack_memory_used@@Base+0x58c0>
  418fec:	str	x26, [x0, #8]
  418ff0:	b	418e90 <_obstack_memory_used@@Base+0x5790>
  418ff4:	add	x1, x1, #0x1
  418ff8:	add	x0, x0, #0x10
  418ffc:	cmp	x23, x1
  419000:	b.ne	418eb4 <_obstack_memory_used@@Base+0x57b4>  // b.any
  419004:	ldr	x0, [x29, #160]
  419008:	bl	4027a0 <free@plt>
  41900c:	ldr	w0, [x29, #124]
  419010:	cbz	w0, 41901c <_obstack_memory_used@@Base+0x591c>
  419014:	mov	x0, x21
  419018:	bl	4027a0 <free@plt>
  41901c:	mov	x0, x19
  419020:	bl	4172f8 <_obstack_memory_used@@Base+0x3bf8>
  419024:	mov	sp, x29
  419028:	ldp	x19, x20, [sp, #16]
  41902c:	ldp	x21, x22, [sp, #32]
  419030:	ldp	x23, x24, [sp, #48]
  419034:	ldp	x25, x26, [sp, #64]
  419038:	ldp	x27, x28, [sp, #80]
  41903c:	ldp	x29, x30, [sp], #192
  419040:	ret
  419044:	ldr	x0, [x29, #160]
  419048:	bl	4027a0 <free@plt>
  41904c:	ldr	w0, [x29, #124]
  419050:	cbz	w0, 41905c <_obstack_memory_used@@Base+0x595c>
  419054:	mov	x0, x21
  419058:	bl	4027a0 <free@plt>
  41905c:	mov	w0, #0x0                   	// #0
  419060:	b	419024 <_obstack_memory_used@@Base+0x5924>
  419064:	ldr	x0, [x28, #16]
  419068:	ldr	x26, [x0, x6, lsl #3]
  41906c:	mov	x0, x27
  419070:	mov	x1, x26
  419074:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419078:	cbz	x0, 41913c <_obstack_memory_used@@Base+0x5a3c>
  41907c:	cmn	x25, #0x1
  419080:	b.eq	419138 <_obstack_memory_used@@Base+0x5a38>  // b.none
  419084:	mov	x1, x25
  419088:	add	x0, x29, #0x90
  41908c:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419090:	cbnz	x0, 4192dc <_obstack_memory_used@@Base+0x5bdc>
  419094:	cbz	x19, 418f44 <_obstack_memory_used@@Base+0x5844>
  419098:	ldp	x27, x1, [x19]
  41909c:	ldr	x2, [x29, #136]
  4190a0:	add	x0, x27, #0x1
  4190a4:	str	x0, [x19]
  4190a8:	cmp	x0, x1
  4190ac:	b.ne	4190d8 <_obstack_memory_used@@Base+0x59d8>  // b.any
  4190b0:	mov	x1, #0x60                  	// #96
  4190b4:	str	x2, [x29, #104]
  4190b8:	mul	x1, x0, x1
  4190bc:	ldr	x0, [x19, #16]
  4190c0:	bl	402640 <realloc@plt>
  4190c4:	cbz	x0, 41911c <_obstack_memory_used@@Base+0x5a1c>
  4190c8:	ldr	x1, [x19, #8]
  4190cc:	ldr	x2, [x29, #104]
  4190d0:	lsl	x1, x1, #1
  4190d4:	stp	x1, x0, [x19, #8]
  4190d8:	mov	x0, #0x30                  	// #48
  4190dc:	mul	x27, x27, x0
  4190e0:	ldr	x0, [x19, #16]
  4190e4:	add	x28, x0, x27
  4190e8:	str	x2, [x0, x27]
  4190ec:	mov	x0, x24
  4190f0:	str	x26, [x28, #8]
  4190f4:	bl	402520 <malloc@plt>
  4190f8:	str	x0, [x28, #16]
  4190fc:	cbz	x0, 41911c <_obstack_memory_used@@Base+0x5a1c>
  419100:	mov	x2, x24
  419104:	mov	x1, x20
  419108:	bl	402360 <memcpy@plt>
  41910c:	add	x1, x29, #0x90
  419110:	add	x0, x28, #0x18
  419114:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  419118:	cbz	w0, 418f44 <_obstack_memory_used@@Base+0x5844>
  41911c:	ldr	x0, [x29, #160]
  419120:	bl	4027a0 <free@plt>
  419124:	ldr	w0, [x29, #124]
  419128:	cbz	w0, 418f74 <_obstack_memory_used@@Base+0x5874>
  41912c:	mov	x0, x21
  419130:	bl	4027a0 <free@plt>
  419134:	b	418f74 <_obstack_memory_used@@Base+0x5874>
  419138:	mov	x25, x26
  41913c:	add	x6, x6, #0x1
  419140:	b	418f3c <_obstack_memory_used@@Base+0x583c>
  419144:	ldrb	w2, [x2, #10]
  419148:	tbz	w2, #4, 4191a8 <_obstack_memory_used@@Base+0x5aa8>
  41914c:	ldr	x3, [x29, #136]
  419150:	mov	x2, x22
  419154:	mov	x1, x25
  419158:	mov	x0, x26
  41915c:	bl	415a74 <_obstack_memory_used@@Base+0x2374>
  419160:	sxtw	x2, w0
  419164:	cbnz	w0, 41928c <_obstack_memory_used@@Base+0x5b8c>
  419168:	ldr	x2, [x29, #136]
  41916c:	mov	x0, x22
  419170:	ldr	x1, [x26]
  419174:	add	x1, x1, x28
  419178:	bl	418ca4 <_obstack_memory_used@@Base+0x55a4>
  41917c:	tst	w0, #0xff
  419180:	b.ne	419288 <_obstack_memory_used@@Base+0x5b88>  // b.any
  419184:	cbnz	x19, 41921c <_obstack_memory_used@@Base+0x5b1c>
  419188:	ldr	x0, [x29, #160]
  41918c:	bl	4027a0 <free@plt>
  419190:	ldr	w0, [x29, #124]
  419194:	cbz	w0, 4191a0 <_obstack_memory_used@@Base+0x5aa0>
  419198:	mov	x0, x21
  41919c:	bl	4027a0 <free@plt>
  4191a0:	mov	w0, #0x1                   	// #1
  4191a4:	b	419024 <_obstack_memory_used@@Base+0x5924>
  4191a8:	cmp	w1, #0x4
  4191ac:	b.ne	419168 <_obstack_memory_used@@Base+0x5a68>  // b.any
  4191b0:	ldr	x0, [x0, x28]
  4191b4:	add	x0, x0, #0x1
  4191b8:	cmp	x23, x0
  4191bc:	b.le	4192e4 <_obstack_memory_used@@Base+0x5be4>
  4191c0:	lsl	x2, x0, #4
  4191c4:	add	x0, x20, x0, lsl #4
  4191c8:	ldr	x1, [x0, #8]
  4191cc:	ldr	x0, [x20, x2]
  4191d0:	sub	x2, x1, x0
  4191d4:	cbz	x19, 41923c <_obstack_memory_used@@Base+0x5b3c>
  4191d8:	cmn	x0, #0x1
  4191dc:	b.eq	41921c <_obstack_memory_used@@Base+0x5b1c>  // b.none
  4191e0:	cmn	x1, #0x1
  4191e4:	b.eq	41921c <_obstack_memory_used@@Base+0x5b1c>  // b.none
  4191e8:	cbz	x2, 419240 <_obstack_memory_used@@Base+0x5b40>
  4191ec:	ldr	x3, [x22, #48]
  4191f0:	ldr	x1, [x29, #136]
  4191f4:	ldr	x4, [x22, #8]
  4191f8:	sub	x3, x3, x1
  4191fc:	cmp	x2, x3
  419200:	b.gt	41921c <_obstack_memory_used@@Base+0x5b1c>
  419204:	add	x1, x4, x1
  419208:	add	x0, x4, x0
  41920c:	str	x2, [x29, #104]
  419210:	bl	402750 <memcmp@plt>
  419214:	ldr	x2, [x29, #104]
  419218:	cbz	w0, 41928c <_obstack_memory_used@@Base+0x5b8c>
  41921c:	add	x4, x29, #0x90
  419220:	mov	x3, x20
  419224:	mov	x2, x23
  419228:	add	x1, x29, #0x88
  41922c:	mov	x0, x19
  419230:	bl	41502c <_obstack_memory_used@@Base+0x192c>
  419234:	mov	x25, x0
  419238:	b	418e40 <_obstack_memory_used@@Base+0x5740>
  41923c:	cbnz	x2, 41928c <_obstack_memory_used@@Base+0x5b8c>
  419240:	mov	x1, x25
  419244:	add	x0, x29, #0x90
  419248:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41924c:	tst	w0, #0xff
  419250:	b.eq	41911c <_obstack_memory_used@@Base+0x5a1c>  // b.none
  419254:	ldr	x0, [x26, #40]
  419258:	mov	x1, #0x18                  	// #24
  41925c:	madd	x3, x25, x1, x0
  419260:	ldr	x1, [x29, #136]
  419264:	ldr	x0, [x3, #16]
  419268:	ldr	x25, [x0]
  41926c:	ldr	x0, [x22, #184]
  419270:	ldr	x0, [x0, x1, lsl #3]
  419274:	mov	x1, x25
  419278:	add	x0, x0, #0x8
  41927c:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419280:	cbz	x0, 419168 <_obstack_memory_used@@Base+0x5a68>
  419284:	b	418f44 <_obstack_memory_used@@Base+0x5844>
  419288:	mov	x2, #0x0                   	// #0
  41928c:	ldr	x0, [x26, #24]
  419290:	cmp	x2, #0x0
  419294:	ldr	x25, [x0, x27, lsl #3]
  419298:	ldr	x0, [x29, #136]
  41929c:	add	x1, x2, x0
  4192a0:	csinc	x0, x1, x0, ne  // ne = any
  4192a4:	str	x0, [x29, #136]
  4192a8:	cbz	x19, 4192d4 <_obstack_memory_used@@Base+0x5bd4>
  4192ac:	ldr	x1, [x22, #168]
  4192b0:	cmp	x0, x1
  4192b4:	b.gt	41921c <_obstack_memory_used@@Base+0x5b1c>
  4192b8:	ldr	x1, [x22, #184]
  4192bc:	ldr	x0, [x1, x0, lsl #3]
  4192c0:	cbz	x0, 41921c <_obstack_memory_used@@Base+0x5b1c>
  4192c4:	mov	x1, x25
  4192c8:	add	x0, x0, #0x8
  4192cc:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4192d0:	cbz	x0, 41921c <_obstack_memory_used@@Base+0x5b1c>
  4192d4:	str	xzr, [x29, #152]
  4192d8:	b	418f44 <_obstack_memory_used@@Base+0x5844>
  4192dc:	mov	x25, x26
  4192e0:	b	418f44 <_obstack_memory_used@@Base+0x5844>
  4192e4:	cbz	x19, 419240 <_obstack_memory_used@@Base+0x5b40>
  4192e8:	b	41921c <_obstack_memory_used@@Base+0x5b1c>
  4192ec:	stp	x29, x30, [sp, #-64]!
  4192f0:	mov	x29, sp
  4192f4:	stp	x21, x22, [sp, #32]
  4192f8:	mov	x21, x1
  4192fc:	mov	x22, x0
  419300:	ldr	x1, [x2, #8]
  419304:	stp	x19, x20, [sp, #16]
  419308:	stp	x23, x24, [sp, #48]
  41930c:	cbnz	x1, 419330 <_obstack_memory_used@@Base+0x5c30>
  419310:	str	wzr, [x0]
  419314:	mov	x19, #0x0                   	// #0
  419318:	mov	x0, x19
  41931c:	ldp	x19, x20, [sp, #16]
  419320:	ldp	x21, x22, [sp, #32]
  419324:	ldp	x23, x24, [sp, #48]
  419328:	ldp	x29, x30, [sp], #64
  41932c:	ret
  419330:	mov	x20, x2
  419334:	mov	x23, x1
  419338:	mov	x0, #0x0                   	// #0
  41933c:	cmp	x1, x0
  419340:	b.gt	4193a8 <_obstack_memory_used@@Base+0x5ca8>
  419344:	ldr	x0, [x21, #136]
  419348:	mov	x1, #0x18                  	// #24
  41934c:	mov	x7, #0x0                   	// #0
  419350:	and	x0, x23, x0
  419354:	mul	x0, x0, x1
  419358:	ldr	x1, [x21, #64]
  41935c:	add	x9, x1, x0
  419360:	ldr	x8, [x1, x0]
  419364:	cmp	x8, x7
  419368:	b.gt	4193bc <_obstack_memory_used@@Base+0x5cbc>
  41936c:	mov	x1, #0x1                   	// #1
  419370:	mov	x0, #0x70                  	// #112
  419374:	bl	402610 <calloc@plt>
  419378:	mov	x19, x0
  41937c:	cbz	x0, 41939c <_obstack_memory_used@@Base+0x5c9c>
  419380:	add	x24, x0, #0x8
  419384:	mov	x1, x20
  419388:	mov	x0, x24
  41938c:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  419390:	cbz	w0, 4193ec <_obstack_memory_used@@Base+0x5cec>
  419394:	mov	x0, x19
  419398:	bl	4027a0 <free@plt>
  41939c:	mov	w0, #0xc                   	// #12
  4193a0:	str	w0, [x22]
  4193a4:	b	419314 <_obstack_memory_used@@Base+0x5c14>
  4193a8:	ldr	x2, [x20, #16]
  4193ac:	ldr	x2, [x2, x0, lsl #3]
  4193b0:	add	x0, x0, #0x1
  4193b4:	add	x23, x23, x2
  4193b8:	b	41933c <_obstack_memory_used@@Base+0x5c3c>
  4193bc:	ldr	x0, [x9, #16]
  4193c0:	ldr	x19, [x0, x7, lsl #3]
  4193c4:	ldr	x0, [x19]
  4193c8:	cmp	x0, x23
  4193cc:	b.ne	4193e4 <_obstack_memory_used@@Base+0x5ce4>  // b.any
  4193d0:	mov	x1, x20
  4193d4:	add	x0, x19, #0x8
  4193d8:	bl	41382c <_obstack_memory_used@@Base+0x12c>
  4193dc:	tst	w0, #0xff
  4193e0:	b.ne	419318 <_obstack_memory_used@@Base+0x5c18>  // b.any
  4193e4:	add	x7, x7, #0x1
  4193e8:	b	419364 <_obstack_memory_used@@Base+0x5c64>
  4193ec:	ldr	x6, [x20, #8]
  4193f0:	mov	x0, #0x0                   	// #0
  4193f4:	str	x24, [x19, #80]
  4193f8:	cmp	x0, x6
  4193fc:	b.lt	419420 <_obstack_memory_used@@Base+0x5d20>  // b.tstop
  419400:	mov	x2, x23
  419404:	mov	x1, x19
  419408:	mov	x0, x21
  41940c:	bl	416718 <_obstack_memory_used@@Base+0x3018>
  419410:	cbz	w0, 419318 <_obstack_memory_used@@Base+0x5c18>
  419414:	mov	x0, x19
  419418:	bl	414b44 <_obstack_memory_used@@Base+0x1444>
  41941c:	b	41939c <_obstack_memory_used@@Base+0x5c9c>
  419420:	ldr	x1, [x20, #16]
  419424:	ldr	x2, [x21]
  419428:	ldr	x1, [x1, x0, lsl #3]
  41942c:	add	x1, x2, x1, lsl #4
  419430:	ldrb	w2, [x1, #8]
  419434:	cmp	w2, #0x1
  419438:	b.ne	419448 <_obstack_memory_used@@Base+0x5d48>  // b.any
  41943c:	ldr	w3, [x1, #8]
  419440:	tst	w3, #0x3ff00
  419444:	b.eq	419474 <_obstack_memory_used@@Base+0x5d74>  // b.none
  419448:	ldrb	w3, [x19, #104]
  41944c:	cmp	w2, #0x2
  419450:	ldrb	w5, [x1, #10]
  419454:	ubfx	x4, x3, #5, #1
  419458:	ubfx	x5, x5, #4, #1
  41945c:	orr	w4, w4, w5
  419460:	bfi	w3, w4, #5, #1
  419464:	strb	w3, [x19, #104]
  419468:	b.ne	41947c <_obstack_memory_used@@Base+0x5d7c>  // b.any
  41946c:	orr	w3, w3, #0x10
  419470:	strb	w3, [x19, #104]
  419474:	add	x0, x0, #0x1
  419478:	b	4193f8 <_obstack_memory_used@@Base+0x5cf8>
  41947c:	cmp	w2, #0x4
  419480:	b.ne	41948c <_obstack_memory_used@@Base+0x5d8c>  // b.any
  419484:	orr	w3, w3, #0x40
  419488:	b	419470 <_obstack_memory_used@@Base+0x5d70>
  41948c:	cmp	w2, #0xc
  419490:	b.eq	4194a0 <_obstack_memory_used@@Base+0x5da0>  // b.none
  419494:	ldr	w1, [x1, #8]
  419498:	tst	w1, #0x3ff00
  41949c:	b.eq	419474 <_obstack_memory_used@@Base+0x5d74>  // b.none
  4194a0:	ldrb	w1, [x19, #104]
  4194a4:	orr	w1, w1, #0xffffff80
  4194a8:	strb	w1, [x19, #104]
  4194ac:	b	419474 <_obstack_memory_used@@Base+0x5d74>
  4194b0:	stp	x29, x30, [sp, #-96]!
  4194b4:	mov	x29, sp
  4194b8:	stp	x19, x20, [sp, #16]
  4194bc:	mov	x20, x1
  4194c0:	mov	x19, #0x0                   	// #0
  4194c4:	stp	x21, x22, [sp, #32]
  4194c8:	mov	x22, x0
  4194cc:	mov	x21, x3
  4194d0:	str	x23, [sp, #48]
  4194d4:	mov	x23, x2
  4194d8:	cmp	x19, x21
  4194dc:	b.lt	4194e8 <_obstack_memory_used@@Base+0x5de8>  // b.tstop
  4194e0:	mov	w0, #0x0                   	// #0
  4194e4:	b	419540 <_obstack_memory_used@@Base+0x5e40>
  4194e8:	ldr	x1, [x20, x19, lsl #3]
  4194ec:	ldr	x2, [x23, x19, lsl #3]
  4194f0:	cbnz	x1, 419500 <_obstack_memory_used@@Base+0x5e00>
  4194f4:	str	x2, [x20, x19, lsl #3]
  4194f8:	add	x19, x19, #0x1
  4194fc:	b	4194d8 <_obstack_memory_used@@Base+0x5dd8>
  419500:	cbz	x2, 4194f8 <_obstack_memory_used@@Base+0x5df8>
  419504:	add	x2, x2, #0x8
  419508:	add	x1, x1, #0x8
  41950c:	add	x0, sp, #0x48
  419510:	bl	416be8 <_obstack_memory_used@@Base+0x34e8>
  419514:	str	w0, [sp, #68]
  419518:	cbnz	w0, 419540 <_obstack_memory_used@@Base+0x5e40>
  41951c:	add	x2, sp, #0x48
  419520:	mov	x1, x22
  419524:	add	x0, sp, #0x44
  419528:	bl	4192ec <_obstack_memory_used@@Base+0x5bec>
  41952c:	str	x0, [x20, x19, lsl #3]
  419530:	ldr	x0, [sp, #88]
  419534:	bl	4027a0 <free@plt>
  419538:	ldr	w0, [sp, #68]
  41953c:	cbz	w0, 4194f8 <_obstack_memory_used@@Base+0x5df8>
  419540:	ldp	x19, x20, [sp, #16]
  419544:	ldp	x21, x22, [sp, #32]
  419548:	ldr	x23, [sp, #48]
  41954c:	ldp	x29, x30, [sp], #96
  419550:	ret
  419554:	stp	x29, x30, [sp, #-128]!
  419558:	mov	x29, sp
  41955c:	stp	x19, x20, [sp, #16]
  419560:	stp	x21, x22, [sp, #32]
  419564:	mov	x21, x0
  419568:	stp	x23, x24, [sp, #48]
  41956c:	mov	x23, x1
  419570:	mov	x24, x2
  419574:	mov	x1, x2
  419578:	stp	x25, x26, [sp, #64]
  41957c:	mov	x26, x3
  419580:	stp	x27, x28, [sp, #80]
  419584:	mov	w27, w4
  419588:	bl	413c58 <_obstack_memory_used@@Base+0x558>
  41958c:	cmn	x0, #0x1
  419590:	b.ne	4195b4 <_obstack_memory_used@@Base+0x5eb4>  // b.any
  419594:	mov	w0, #0x0                   	// #0
  419598:	ldp	x19, x20, [sp, #16]
  41959c:	ldp	x21, x22, [sp, #32]
  4195a0:	ldp	x23, x24, [sp, #48]
  4195a4:	ldp	x25, x26, [sp, #64]
  4195a8:	ldp	x27, x28, [sp, #80]
  4195ac:	ldp	x29, x30, [sp], #128
  4195b0:	ret
  4195b4:	mov	x22, #0x28                  	// #40
  4195b8:	ldr	x25, [x21, #152]
  4195bc:	mul	x22, x0, x22
  4195c0:	ldr	x20, [x21, #216]
  4195c4:	add	x20, x20, x22
  4195c8:	ldr	x1, [x20]
  4195cc:	mov	x0, x23
  4195d0:	bl	413888 <_obstack_memory_used@@Base+0x188>
  4195d4:	cbz	x0, 419700 <_obstack_memory_used@@Base+0x6000>
  4195d8:	ldp	x0, x19, [x20, #16]
  4195dc:	add	x19, x24, x19
  4195e0:	sub	x19, x19, x0
  4195e4:	cmp	x24, x19
  4195e8:	b.ne	419668 <_obstack_memory_used@@Base+0x5f68>  // b.any
  4195ec:	ldr	x0, [x25, #40]
  4195f0:	mov	x2, #0x18                  	// #24
  4195f4:	madd	x1, x1, x2, x0
  4195f8:	ldr	x0, [x1, #16]
  4195fc:	ldr	x1, [x0]
  419600:	mov	x0, x23
  419604:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419608:	cbnz	x0, 419700 <_obstack_memory_used@@Base+0x6000>
  41960c:	add	x0, sp, #0x68
  419610:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  419614:	mov	w3, w27
  419618:	mov	x2, x26
  41961c:	add	x1, sp, #0x68
  419620:	str	w0, [sp, #100]
  419624:	mov	x0, x25
  419628:	bl	418b90 <_obstack_memory_used@@Base+0x5490>
  41962c:	add	x1, sp, #0x68
  419630:	mov	w19, w0
  419634:	mov	x0, x23
  419638:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  41963c:	mov	w20, w0
  419640:	ldr	x0, [sp, #120]
  419644:	bl	4027a0 <free@plt>
  419648:	ldr	w0, [sp, #100]
  41964c:	orr	w1, w19, w20
  419650:	orr	w1, w1, w0
  419654:	cbz	w1, 4195c0 <_obstack_memory_used@@Base+0x5ec0>
  419658:	cbnz	w0, 419598 <_obstack_memory_used@@Base+0x5e98>
  41965c:	cmp	w19, #0x0
  419660:	csel	w0, w19, w20, ne  // ne = any
  419664:	b	419598 <_obstack_memory_used@@Base+0x5e98>
  419668:	ldr	x0, [x25, #24]
  41966c:	lsl	x19, x19, #3
  419670:	ldr	x28, [x0, x1, lsl #3]
  419674:	ldr	x0, [x21, #184]
  419678:	ldr	x6, [x0, x19]
  41967c:	cbz	x6, 41972c <_obstack_memory_used@@Base+0x602c>
  419680:	add	x6, x6, #0x8
  419684:	mov	x1, x28
  419688:	mov	x0, x6
  41968c:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419690:	cbnz	x0, 419700 <_obstack_memory_used@@Base+0x6000>
  419694:	mov	x1, x6
  419698:	add	x0, sp, #0x68
  41969c:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  4196a0:	str	w0, [sp, #100]
  4196a4:	mov	x1, x28
  4196a8:	add	x0, sp, #0x68
  4196ac:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  4196b0:	and	w0, w0, #0xff
  4196b4:	ldr	w1, [sp, #100]
  4196b8:	eor	w0, w0, #0x1
  4196bc:	cmp	w1, #0x0
  4196c0:	cset	w1, ne  // ne = any
  4196c4:	orr	w0, w1, w0
  4196c8:	cbnz	w0, 419710 <_obstack_memory_used@@Base+0x6010>
  4196cc:	ldr	x28, [x21, #184]
  4196d0:	add	x2, sp, #0x68
  4196d4:	mov	x1, x25
  4196d8:	add	x0, sp, #0x64
  4196dc:	bl	4192ec <_obstack_memory_used@@Base+0x5bec>
  4196e0:	str	x0, [x28, x19]
  4196e4:	ldr	x0, [sp, #120]
  4196e8:	bl	4027a0 <free@plt>
  4196ec:	ldr	x0, [x21, #184]
  4196f0:	ldr	x0, [x0, x19]
  4196f4:	cbnz	x0, 419700 <_obstack_memory_used@@Base+0x6000>
  4196f8:	ldr	w0, [sp, #100]
  4196fc:	cbnz	w0, 419598 <_obstack_memory_used@@Base+0x5e98>
  419700:	ldrb	w0, [x20, #32]
  419704:	add	x20, x20, #0x28
  419708:	cbnz	w0, 4195c8 <_obstack_memory_used@@Base+0x5ec8>
  41970c:	b	419594 <_obstack_memory_used@@Base+0x5e94>
  419710:	ldr	x0, [sp, #120]
  419714:	bl	4027a0 <free@plt>
  419718:	ldr	w0, [sp, #100]
  41971c:	mov	w1, #0xc                   	// #12
  419720:	cmp	w0, #0x0
  419724:	csel	w0, w0, w1, ne  // ne = any
  419728:	b	419598 <_obstack_memory_used@@Base+0x5e98>
  41972c:	mov	x1, x28
  419730:	add	x0, sp, #0x68
  419734:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  419738:	str	w0, [sp, #100]
  41973c:	cbz	w0, 4196cc <_obstack_memory_used@@Base+0x5fcc>
  419740:	b	419598 <_obstack_memory_used@@Base+0x5e98>
  419744:	stp	x29, x30, [sp, #-240]!
  419748:	mov	x29, sp
  41974c:	stp	x23, x24, [sp, #48]
  419750:	mov	w23, w6
  419754:	ldr	x24, [x0, #152]
  419758:	stp	x21, x22, [sp, #32]
  41975c:	mov	x22, x1
  419760:	stp	x25, x26, [sp, #64]
  419764:	ldrsw	x21, [x0, #224]
  419768:	ldr	x25, [x1, #8]
  41976c:	stp	x19, x20, [sp, #16]
  419770:	mov	x19, x0
  419774:	ldr	x1, [x24]
  419778:	lsl	x0, x2, #4
  41977c:	stp	x27, x28, [sp, #80]
  419780:	add	x21, x21, x5
  419784:	mov	x20, x2
  419788:	str	x5, [sp, #120]
  41978c:	mov	x27, x3
  419790:	str	x4, [sp, #160]
  419794:	cmp	x21, x25
  419798:	ldr	x26, [x1, x0]
  41979c:	str	wzr, [sp, #184]
  4197a0:	b.lt	41980c <_obstack_memory_used@@Base+0x610c>  // b.tstop
  4197a4:	add	x21, x21, #0x1
  4197a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4197ac:	sub	x0, x0, x25
  4197b0:	cmp	x0, x21
  4197b4:	b.ge	4197d8 <_obstack_memory_used@@Base+0x60d8>  // b.tcont
  4197b8:	mov	w0, #0xc                   	// #12
  4197bc:	ldp	x19, x20, [sp, #16]
  4197c0:	ldp	x21, x22, [sp, #32]
  4197c4:	ldp	x23, x24, [sp, #48]
  4197c8:	ldp	x25, x26, [sp, #64]
  4197cc:	ldp	x27, x28, [sp, #80]
  4197d0:	ldp	x29, x30, [sp], #240
  4197d4:	ret
  4197d8:	add	x28, x25, x21
  4197dc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4197e0:	cmp	x28, x0
  4197e4:	b.hi	4197b8 <_obstack_memory_used@@Base+0x60b8>  // b.pmore
  4197e8:	ldr	x0, [x22, #16]
  4197ec:	lsl	x1, x28, #3
  4197f0:	bl	402640 <realloc@plt>
  4197f4:	cbz	x0, 4197b8 <_obstack_memory_used@@Base+0x60b8>
  4197f8:	stp	x28, x0, [x22, #8]
  4197fc:	lsl	x2, x21, #3
  419800:	add	x0, x0, x25, lsl #3
  419804:	mov	w1, #0x0                   	// #0
  419808:	bl	4025f0 <memset@plt>
  41980c:	ldr	x21, [x22]
  419810:	ldr	w2, [x19, #160]
  419814:	cmp	x21, #0x0
  419818:	ldr	x28, [x22, #16]
  41981c:	csel	x21, x21, x27, ne  // ne = any
  419820:	ldr	x0, [x19, #184]
  419824:	str	x0, [sp, #144]
  419828:	str	x28, [x19, #184]
  41982c:	sub	x1, x21, #0x1
  419830:	ldr	x0, [x19, #72]
  419834:	str	x21, [x19, #72]
  419838:	str	x0, [sp, #152]
  41983c:	mov	x0, x19
  419840:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  419844:	mov	w25, w0
  419848:	cmp	x21, x27
  41984c:	b.ne	4198b8 <_obstack_memory_used@@Base+0x61b8>  // b.any
  419850:	mov	x1, x20
  419854:	add	x0, sp, #0xc0
  419858:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  41985c:	str	w0, [sp, #184]
  419860:	cbnz	w0, 4197bc <_obstack_memory_used@@Base+0x60bc>
  419864:	mov	w3, w23
  419868:	mov	x2, x26
  41986c:	add	x1, sp, #0xc0
  419870:	mov	x0, x24
  419874:	bl	418b90 <_obstack_memory_used@@Base+0x5490>
  419878:	str	w0, [sp, #184]
  41987c:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419880:	ldr	x0, [sp, #200]
  419884:	cbnz	x0, 4198fc <_obstack_memory_used@@Base+0x61fc>
  419888:	mov	w3, w25
  41988c:	add	x2, sp, #0xc0
  419890:	mov	x1, x24
  419894:	add	x0, sp, #0xb8
  419898:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41989c:	mov	x20, x0
  4198a0:	cbnz	x0, 4198ac <_obstack_memory_used@@Base+0x61ac>
  4198a4:	ldr	w0, [sp, #184]
  4198a8:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  4198ac:	ldr	x0, [x19, #184]
  4198b0:	str	x20, [x0, x21, lsl #3]
  4198b4:	b	4198e4 <_obstack_memory_used@@Base+0x61e4>
  4198b8:	ldr	x20, [x28, x21, lsl #3]
  4198bc:	cbz	x20, 4198ec <_obstack_memory_used@@Base+0x61ec>
  4198c0:	ldrb	w0, [x20, #104]
  4198c4:	tbz	w0, #6, 4198ec <_obstack_memory_used@@Base+0x61ec>
  4198c8:	add	x1, x20, #0x8
  4198cc:	add	x0, sp, #0xc0
  4198d0:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  4198d4:	str	w0, [sp, #184]
  4198d8:	cbnz	w0, 4197bc <_obstack_memory_used@@Base+0x60bc>
  4198dc:	ldrb	w0, [x20, #104]
  4198e0:	tbnz	w0, #6, 419880 <_obstack_memory_used@@Base+0x6180>
  4198e4:	str	xzr, [sp, #104]
  4198e8:	b	419aec <_obstack_memory_used@@Base+0x63ec>
  4198ec:	stp	xzr, xzr, [sp, #192]
  4198f0:	str	xzr, [sp, #208]
  4198f4:	cbnz	x20, 4198dc <_obstack_memory_used@@Base+0x61dc>
  4198f8:	b	4198e4 <_obstack_memory_used@@Base+0x61e4>
  4198fc:	mov	w4, w23
  419900:	mov	x3, x26
  419904:	mov	x2, x21
  419908:	add	x1, sp, #0xc0
  41990c:	mov	x0, x19
  419910:	bl	419554 <_obstack_memory_used@@Base+0x5e54>
  419914:	str	w0, [sp, #184]
  419918:	cbz	w0, 419888 <_obstack_memory_used@@Base+0x6188>
  41991c:	ldr	x0, [sp, #208]
  419920:	bl	4027a0 <free@plt>
  419924:	ldr	w0, [sp, #184]
  419928:	b	4197bc <_obstack_memory_used@@Base+0x60bc>
  41992c:	add	x0, x21, #0x1
  419930:	str	x0, [sp, #136]
  419934:	str	xzr, [sp, #200]
  419938:	lsl	x0, x0, #3
  41993c:	str	x0, [sp, #128]
  419940:	ldr	x0, [x19, #184]
  419944:	ldr	x1, [sp, #128]
  419948:	ldr	x1, [x0, x1]
  41994c:	cbz	x1, 419964 <_obstack_memory_used@@Base+0x6264>
  419950:	add	x1, x1, #0x8
  419954:	add	x0, sp, #0xc0
  419958:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  41995c:	str	w0, [sp, #184]
  419960:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419964:	cbz	x20, 419a58 <_obstack_memory_used@@Base+0x6358>
  419968:	ldr	x28, [x19, #152]
  41996c:	mov	x27, #0x0                   	// #0
  419970:	str	wzr, [sp, #188]
  419974:	stp	xzr, xzr, [sp, #216]
  419978:	str	xzr, [sp, #232]
  41997c:	ldr	x1, [x20, #40]
  419980:	add	x0, x20, #0x20
  419984:	cmp	x27, x1
  419988:	b.lt	41999c <_obstack_memory_used@@Base+0x629c>  // b.tstop
  41998c:	ldr	x0, [sp, #232]
  419990:	bl	4027a0 <free@plt>
  419994:	str	wzr, [sp, #184]
  419998:	b	419a58 <_obstack_memory_used@@Base+0x6358>
  41999c:	ldr	x0, [x0, #16]
  4199a0:	ldr	x25, [x0, x27, lsl #3]
  4199a4:	ldr	x0, [x28]
  4199a8:	lsl	x5, x25, #4
  4199ac:	add	x0, x0, x25, lsl #4
  4199b0:	ldrb	w0, [x0, #10]
  4199b4:	tbnz	w0, #4, 4199dc <_obstack_memory_used@@Base+0x62dc>
  4199b8:	ldr	x1, [x28]
  4199bc:	mov	x2, x21
  4199c0:	mov	x0, x19
  4199c4:	add	x1, x1, x5
  4199c8:	bl	418ca4 <_obstack_memory_used@@Base+0x55a4>
  4199cc:	tst	w0, #0xff
  4199d0:	b.ne	419ba8 <_obstack_memory_used@@Base+0x64a8>  // b.any
  4199d4:	add	x27, x27, #0x1
  4199d8:	b	41997c <_obstack_memory_used@@Base+0x627c>
  4199dc:	mov	x3, x21
  4199e0:	mov	x2, x19
  4199e4:	mov	x1, x25
  4199e8:	mov	x0, x28
  4199ec:	str	x5, [sp, #112]
  4199f0:	bl	415a74 <_obstack_memory_used@@Base+0x2374>
  4199f4:	cmp	w0, #0x1
  4199f8:	ldr	x5, [sp, #112]
  4199fc:	b.le	419bd0 <_obstack_memory_used@@Base+0x64d0>
  419a00:	add	x0, x21, w0, sxtw
  419a04:	ldr	x1, [x28, #24]
  419a08:	lsl	x0, x0, #3
  419a0c:	str	x0, [sp, #112]
  419a10:	ldr	x0, [x19, #184]
  419a14:	ldr	x2, [x1, x25, lsl #3]
  419a18:	ldr	x1, [sp, #112]
  419a1c:	ldr	x1, [x0, x1]
  419a20:	str	xzr, [sp, #224]
  419a24:	cbz	x1, 419b50 <_obstack_memory_used@@Base+0x6450>
  419a28:	add	x1, x1, #0x8
  419a2c:	add	x0, sp, #0xd8
  419a30:	str	x2, [sp, #168]
  419a34:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  419a38:	str	w0, [sp, #188]
  419a3c:	ldr	x2, [sp, #168]
  419a40:	cbz	w0, 419b50 <_obstack_memory_used@@Base+0x6450>
  419a44:	ldr	x0, [sp, #232]
  419a48:	bl	4027a0 <free@plt>
  419a4c:	ldr	w0, [sp, #188]
  419a50:	str	w0, [sp, #184]
  419a54:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419a58:	ldr	x0, [sp, #200]
  419a5c:	cbz	x0, 419a9c <_obstack_memory_used@@Base+0x639c>
  419a60:	mov	w3, w23
  419a64:	mov	x2, x26
  419a68:	add	x1, sp, #0xc0
  419a6c:	mov	x0, x24
  419a70:	bl	418b90 <_obstack_memory_used@@Base+0x5490>
  419a74:	str	w0, [sp, #184]
  419a78:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419a7c:	ldr	x2, [sp, #136]
  419a80:	mov	w4, w23
  419a84:	mov	x3, x26
  419a88:	add	x1, sp, #0xc0
  419a8c:	mov	x0, x19
  419a90:	bl	419554 <_obstack_memory_used@@Base+0x5e54>
  419a94:	str	w0, [sp, #184]
  419a98:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419a9c:	ldr	w2, [x19, #160]
  419aa0:	mov	x1, x21
  419aa4:	mov	x0, x19
  419aa8:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  419aac:	mov	w3, w0
  419ab0:	add	x2, sp, #0xc0
  419ab4:	mov	x1, x24
  419ab8:	add	x0, sp, #0xb8
  419abc:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  419ac0:	mov	x20, x0
  419ac4:	cbnz	x0, 419ad0 <_obstack_memory_used@@Base+0x63d0>
  419ac8:	ldr	w0, [sp, #184]
  419acc:	cbnz	w0, 41991c <_obstack_memory_used@@Base+0x621c>
  419ad0:	ldr	x0, [x19, #184]
  419ad4:	cmp	x20, #0x0
  419ad8:	ldp	x1, x21, [sp, #128]
  419adc:	str	x20, [x0, x1]
  419ae0:	ldr	x0, [sp, #104]
  419ae4:	csinc	x0, xzr, x0, ne  // ne = any
  419ae8:	str	x0, [sp, #104]
  419aec:	ldr	x0, [sp, #120]
  419af0:	cmp	x21, x0
  419af4:	b.ge	419b08 <_obstack_memory_used@@Base+0x6408>  // b.tcont
  419af8:	ldr	x1, [sp, #104]
  419afc:	ldrsw	x0, [x19, #224]
  419b00:	cmp	x0, x1
  419b04:	b.ge	41992c <_obstack_memory_used@@Base+0x622c>  // b.tcont
  419b08:	ldr	x0, [sp, #208]
  419b0c:	bl	4027a0 <free@plt>
  419b10:	ldr	x1, [sp, #120]
  419b14:	ldr	x0, [x19, #184]
  419b18:	ldr	x0, [x0, x1, lsl #3]
  419b1c:	cbz	x0, 419b24 <_obstack_memory_used@@Base+0x6424>
  419b20:	add	x0, x0, #0x8
  419b24:	str	x21, [x22]
  419b28:	ldr	x1, [sp, #144]
  419b2c:	str	x1, [x19, #184]
  419b30:	ldr	x1, [sp, #152]
  419b34:	str	x1, [x19, #72]
  419b38:	cbz	x0, 419bd8 <_obstack_memory_used@@Base+0x64d8>
  419b3c:	ldr	x1, [sp, #160]
  419b40:	bl	413888 <_obstack_memory_used@@Base+0x188>
  419b44:	cmp	x0, #0x0
  419b48:	cset	w0, eq  // eq = none
  419b4c:	b	4197bc <_obstack_memory_used@@Base+0x60bc>
  419b50:	mov	x1, x2
  419b54:	add	x0, sp, #0xd8
  419b58:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  419b5c:	tst	w0, #0xff
  419b60:	b.ne	419b78 <_obstack_memory_used@@Base+0x6478>  // b.any
  419b64:	ldr	x0, [sp, #232]
  419b68:	bl	4027a0 <free@plt>
  419b6c:	mov	w0, #0xc                   	// #12
  419b70:	str	w0, [sp, #184]
  419b74:	b	41991c <_obstack_memory_used@@Base+0x621c>
  419b78:	ldr	x3, [x19, #184]
  419b7c:	mov	x1, x28
  419b80:	add	x2, sp, #0xd8
  419b84:	add	x0, sp, #0xbc
  419b88:	str	x3, [sp, #168]
  419b8c:	bl	4192ec <_obstack_memory_used@@Base+0x5bec>
  419b90:	ldr	x1, [sp, #112]
  419b94:	ldr	x3, [sp, #168]
  419b98:	str	x0, [x3, x1]
  419b9c:	ldr	x0, [x19, #184]
  419ba0:	ldr	x0, [x0, x1]
  419ba4:	cbz	x0, 419bc4 <_obstack_memory_used@@Base+0x64c4>
  419ba8:	ldr	x0, [x28, #24]
  419bac:	ldr	x1, [x0, x25, lsl #3]
  419bb0:	add	x0, sp, #0xc0
  419bb4:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  419bb8:	tst	w0, #0xff
  419bbc:	b.ne	4199d4 <_obstack_memory_used@@Base+0x62d4>  // b.any
  419bc0:	b	419b64 <_obstack_memory_used@@Base+0x6464>
  419bc4:	ldr	w0, [sp, #188]
  419bc8:	cbz	w0, 419ba8 <_obstack_memory_used@@Base+0x64a8>
  419bcc:	b	419a44 <_obstack_memory_used@@Base+0x6344>
  419bd0:	cbz	w0, 4199b8 <_obstack_memory_used@@Base+0x62b8>
  419bd4:	b	419ba8 <_obstack_memory_used@@Base+0x64a8>
  419bd8:	mov	w0, #0x1                   	// #1
  419bdc:	b	4197bc <_obstack_memory_used@@Base+0x60bc>
  419be0:	stp	x29, x30, [sp, #-80]!
  419be4:	mov	x5, x4
  419be8:	mov	w6, #0x8                   	// #8
  419bec:	mov	x29, sp
  419bf0:	stp	x19, x20, [sp, #16]
  419bf4:	mov	x20, x4
  419bf8:	mov	x4, x3
  419bfc:	stp	x21, x22, [sp, #32]
  419c00:	mov	x21, x2
  419c04:	mov	x19, x0
  419c08:	stp	x23, x24, [sp, #48]
  419c0c:	mov	x23, x1
  419c10:	mov	x24, x3
  419c14:	add	x1, x2, #0x10
  419c18:	ldr	x3, [x2, #8]
  419c1c:	ldr	x2, [x2]
  419c20:	str	x25, [sp, #64]
  419c24:	bl	419744 <_obstack_memory_used@@Base+0x6044>
  419c28:	cbnz	w0, 419c60 <_obstack_memory_used@@Base+0x6560>
  419c2c:	ldp	x1, x0, [x19, #200]
  419c30:	ldr	x25, [x23]
  419c34:	ldr	x22, [x21, #8]
  419c38:	cmp	x1, x0
  419c3c:	b.lt	419ca0 <_obstack_memory_used@@Base+0x65a0>  // b.tstop
  419c40:	mov	x1, #0x50                  	// #80
  419c44:	mul	x1, x0, x1
  419c48:	ldr	x0, [x19, #216]
  419c4c:	bl	402640 <realloc@plt>
  419c50:	cbnz	x0, 419c78 <_obstack_memory_used@@Base+0x6578>
  419c54:	ldr	x0, [x19, #216]
  419c58:	bl	4027a0 <free@plt>
  419c5c:	mov	w0, #0xc                   	// #12
  419c60:	ldp	x19, x20, [sp, #16]
  419c64:	ldp	x21, x22, [sp, #32]
  419c68:	ldp	x23, x24, [sp, #48]
  419c6c:	ldr	x25, [sp, #64]
  419c70:	ldp	x29, x30, [sp], #80
  419c74:	ret
  419c78:	ldp	x4, x2, [x19, #200]
  419c7c:	mov	x3, #0x28                  	// #40
  419c80:	str	x0, [x19, #216]
  419c84:	mov	w1, #0x0                   	// #0
  419c88:	mul	x2, x2, x3
  419c8c:	madd	x0, x4, x3, x0
  419c90:	bl	4025f0 <memset@plt>
  419c94:	ldr	x0, [x19, #208]
  419c98:	lsl	x0, x0, #1
  419c9c:	str	x0, [x19, #208]
  419ca0:	ldr	x1, [x19, #200]
  419ca4:	mov	x2, #0x28                  	// #40
  419ca8:	ldr	x3, [x19, #216]
  419cac:	cmp	x1, #0x0
  419cb0:	mul	x2, x1, x2
  419cb4:	b.le	419cd4 <_obstack_memory_used@@Base+0x65d4>
  419cb8:	sub	x0, x2, #0x28
  419cbc:	add	x0, x3, x0
  419cc0:	ldr	x4, [x0, #8]
  419cc4:	cmp	x20, x4
  419cc8:	b.ne	419cd4 <_obstack_memory_used@@Base+0x65d4>  // b.any
  419ccc:	mov	w4, #0x1                   	// #1
  419cd0:	strb	w4, [x0, #32]
  419cd4:	add	x0, x3, x2
  419cd8:	cmp	x25, x22
  419cdc:	str	x24, [x3, x2]
  419ce0:	csetm	w2, eq  // eq = none
  419ce4:	add	x1, x1, #0x1
  419ce8:	stp	x20, x25, [x0, #8]
  419cec:	str	x22, [x0, #24]
  419cf0:	strh	w2, [x0, #34]
  419cf4:	str	x1, [x19, #200]
  419cf8:	strb	wzr, [x0, #32]
  419cfc:	sub	x0, x22, x25
  419d00:	ldrsw	x1, [x19, #224]
  419d04:	cmp	x1, x0
  419d08:	b.ge	419d14 <_obstack_memory_used@@Base+0x6614>  // b.tcont
  419d0c:	sub	w22, w22, w25
  419d10:	str	w22, [x19, #224]
  419d14:	ldr	x5, [x21, #8]
  419d18:	mov	x0, x19
  419d1c:	ldr	x1, [x23]
  419d20:	add	x20, x20, x5
  419d24:	ldp	x21, x22, [sp, #32]
  419d28:	sub	x1, x20, x1
  419d2c:	ldp	x19, x20, [sp, #16]
  419d30:	ldp	x23, x24, [sp, #48]
  419d34:	ldr	x25, [sp, #64]
  419d38:	ldp	x29, x30, [sp], #80
  419d3c:	b	4147e4 <_obstack_memory_used@@Base+0x10e4>
  419d40:	stp	x29, x30, [sp, #-208]!
  419d44:	mov	x29, sp
  419d48:	stp	x19, x20, [sp, #16]
  419d4c:	ldr	x19, [x0, #72]
  419d50:	stp	x21, x22, [sp, #32]
  419d54:	stp	x23, x24, [sp, #48]
  419d58:	mov	x23, x0
  419d5c:	stp	x25, x26, [sp, #64]
  419d60:	stp	x27, x28, [sp, #80]
  419d64:	str	xzr, [sp, #96]
  419d68:	str	x1, [sp, #160]
  419d6c:	ldr	x22, [x0, #152]
  419d70:	lsl	x0, x19, #3
  419d74:	str	x0, [sp, #128]
  419d78:	ldr	x0, [sp, #160]
  419d7c:	ldr	x1, [sp, #96]
  419d80:	ldr	x0, [x0, #8]
  419d84:	cmp	x0, x1
  419d88:	b.gt	419d94 <_obstack_memory_used@@Base+0x6694>
  419d8c:	str	wzr, [sp, #180]
  419d90:	b	419f5c <_obstack_memory_used@@Base+0x685c>
  419d94:	ldr	x0, [sp, #160]
  419d98:	ldr	x1, [sp, #96]
  419d9c:	ldr	x0, [x0, #16]
  419da0:	ldr	x21, [x0, x1, lsl #3]
  419da4:	ldr	x0, [x22]
  419da8:	lsl	x20, x21, #4
  419dac:	add	x0, x0, x21, lsl #4
  419db0:	ldrb	w1, [x0, #8]
  419db4:	cmp	w1, #0x4
  419db8:	b.eq	419dcc <_obstack_memory_used@@Base+0x66cc>  // b.none
  419dbc:	ldr	x0, [sp, #96]
  419dc0:	add	x0, x0, #0x1
  419dc4:	str	x0, [sp, #96]
  419dc8:	b	419d78 <_obstack_memory_used@@Base+0x6678>
  419dcc:	ldr	w25, [x0, #8]
  419dd0:	tst	w25, #0x3ff00
  419dd4:	b.eq	419e0c <_obstack_memory_used@@Base+0x670c>  // b.none
  419dd8:	ldr	w2, [x23, #160]
  419ddc:	mov	x1, x19
  419de0:	mov	x0, x23
  419de4:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  419de8:	ubfx	x1, x25, #8, #10
  419dec:	tbz	w25, #10, 419df4 <_obstack_memory_used@@Base+0x66f4>
  419df0:	tbz	w0, #0, 419dbc <_obstack_memory_used@@Base+0x66bc>
  419df4:	tbz	w1, #3, 419dfc <_obstack_memory_used@@Base+0x66fc>
  419df8:	tbnz	w0, #0, 419dbc <_obstack_memory_used@@Base+0x66bc>
  419dfc:	tbz	w1, #5, 419e04 <_obstack_memory_used@@Base+0x6704>
  419e00:	tbz	w0, #1, 419dbc <_obstack_memory_used@@Base+0x66bc>
  419e04:	tbz	w1, #7, 419e0c <_obstack_memory_used@@Base+0x670c>
  419e08:	tbz	w0, #3, 419dbc <_obstack_memory_used@@Base+0x66bc>
  419e0c:	ldr	x0, [x23, #200]
  419e10:	mov	x1, x19
  419e14:	str	x0, [sp, #104]
  419e18:	mov	x0, x23
  419e1c:	bl	413c58 <_obstack_memory_used@@Base+0x558>
  419e20:	cmn	x0, #0x1
  419e24:	b.eq	419ea4 <_obstack_memory_used@@Base+0x67a4>  // b.none
  419e28:	ldr	x1, [x23, #216]
  419e2c:	mov	x2, #0x28                  	// #40
  419e30:	madd	x0, x0, x2, x1
  419e34:	ldr	x1, [x0]
  419e38:	cmp	x21, x1
  419e3c:	b.ne	419e98 <_obstack_memory_used@@Base+0x6798>  // b.any
  419e40:	lsl	x0, x21, #3
  419e44:	str	wzr, [sp, #180]
  419e48:	mov	x24, x0
  419e4c:	mov	x0, #0x18                  	// #24
  419e50:	mul	x0, x21, x0
  419e54:	mov	x25, x0
  419e58:	ldr	x1, [sp, #104]
  419e5c:	ldr	x0, [x23, #200]
  419e60:	cmp	x0, x1
  419e64:	b.le	419dbc <_obstack_memory_used@@Base+0x66bc>
  419e68:	ldr	x0, [sp, #104]
  419e6c:	mov	x1, #0x28                  	// #40
  419e70:	ldr	x2, [x23, #216]
  419e74:	mul	x0, x0, x1
  419e78:	add	x1, x2, x0
  419e7c:	ldr	x0, [x2, x0]
  419e80:	cmp	x0, x21
  419e84:	b.eq	41a188 <_obstack_memory_used@@Base+0x6a88>  // b.none
  419e88:	ldr	x0, [sp, #104]
  419e8c:	add	x0, x0, #0x1
  419e90:	str	x0, [sp, #104]
  419e94:	b	419e58 <_obstack_memory_used@@Base+0x6758>
  419e98:	ldrb	w1, [x0, #32]
  419e9c:	add	x0, x0, #0x28
  419ea0:	cbnz	w1, 419e34 <_obstack_memory_used@@Base+0x6734>
  419ea4:	ldr	x28, [x23, #152]
  419ea8:	str	xzr, [sp, #112]
  419eac:	ldr	x24, [x23, #8]
  419eb0:	ldr	x0, [x28]
  419eb4:	ldr	x0, [x0, x20]
  419eb8:	str	x0, [sp, #136]
  419ebc:	ldr	x1, [sp, #112]
  419ec0:	ldr	x0, [x23, #232]
  419ec4:	cmp	x1, x0
  419ec8:	b.ge	419e40 <_obstack_memory_used@@Base+0x6740>  // b.tcont
  419ecc:	ldr	x1, [sp, #112]
  419ed0:	ldr	x0, [x23, #248]
  419ed4:	ldr	x26, [x0, x1, lsl #3]
  419ed8:	ldr	x1, [x28]
  419edc:	ldr	x0, [x26, #8]
  419ee0:	lsl	x0, x0, #4
  419ee4:	ldr	x0, [x1, x0]
  419ee8:	ldr	x1, [sp, #136]
  419eec:	cmp	x1, x0
  419ef0:	b.ne	419fe0 <_obstack_memory_used@@Base+0x68e0>  // b.any
  419ef4:	ldr	x25, [x26]
  419ef8:	mov	x20, x19
  419efc:	mov	x27, #0x0                   	// #0
  419f00:	ldr	x0, [x26, #32]
  419f04:	cmp	x27, x0
  419f08:	b.ge	419fc4 <_obstack_memory_used@@Base+0x68c4>  // b.tcont
  419f0c:	ldr	x0, [x26, #40]
  419f10:	ldr	x0, [x0, x27, lsl #3]
  419f14:	str	x0, [sp, #144]
  419f18:	ldr	x0, [x0, #8]
  419f1c:	str	x0, [sp, #152]
  419f20:	sub	x2, x0, x25
  419f24:	add	x0, x2, x20
  419f28:	str	x0, [sp, #120]
  419f2c:	cmp	x2, #0x0
  419f30:	b.gt	419f7c <_obstack_memory_used@@Base+0x687c>
  419f34:	ldr	x2, [sp, #144]
  419f38:	mov	x4, x19
  419f3c:	mov	x3, x21
  419f40:	mov	x1, x26
  419f44:	mov	x0, x23
  419f48:	bl	419be0 <_obstack_memory_used@@Base+0x64e0>
  419f4c:	cmp	w0, #0x1
  419f50:	ldr	x24, [x23, #8]
  419f54:	b.ls	419ff0 <_obstack_memory_used@@Base+0x68f0>  // b.plast
  419f58:	str	w0, [sp, #180]
  419f5c:	ldr	w0, [sp, #180]
  419f60:	ldp	x19, x20, [sp, #16]
  419f64:	ldp	x21, x22, [sp, #32]
  419f68:	ldp	x23, x24, [sp, #48]
  419f6c:	ldp	x25, x26, [sp, #64]
  419f70:	ldp	x27, x28, [sp, #80]
  419f74:	ldp	x29, x30, [sp], #208
  419f78:	ret
  419f7c:	ldr	x0, [x23, #48]
  419f80:	add	x1, x2, x20
  419f84:	cmp	x0, x1
  419f88:	b.ge	419fb4 <_obstack_memory_used@@Base+0x68b4>  // b.tcont
  419f8c:	ldr	x0, [x23, #88]
  419f90:	str	x2, [sp, #168]
  419f94:	ldr	x1, [sp, #120]
  419f98:	cmp	x0, x1
  419f9c:	b.lt	419fc4 <_obstack_memory_used@@Base+0x68c4>  // b.tstop
  419fa0:	mov	x0, x23
  419fa4:	bl	4147e4 <_obstack_memory_used@@Base+0x10e4>
  419fa8:	cbnz	w0, 419f58 <_obstack_memory_used@@Base+0x6858>
  419fac:	ldr	x24, [x23, #8]
  419fb0:	ldr	x2, [sp, #168]
  419fb4:	add	x1, x24, x25
  419fb8:	add	x0, x24, x20
  419fbc:	bl	402750 <memcmp@plt>
  419fc0:	cbz	w0, 419f34 <_obstack_memory_used@@Base+0x6834>
  419fc4:	ldr	x0, [x26, #32]
  419fc8:	cmp	x27, x0
  419fcc:	b.lt	419fe0 <_obstack_memory_used@@Base+0x68e0>  // b.tstop
  419fd0:	cbz	x27, 419fd8 <_obstack_memory_used@@Base+0x68d8>
  419fd4:	add	x25, x25, #0x1
  419fd8:	cmp	x19, x25
  419fdc:	b.ge	41a000 <_obstack_memory_used@@Base+0x6900>  // b.tcont
  419fe0:	ldr	x0, [sp, #112]
  419fe4:	add	x0, x0, #0x1
  419fe8:	str	x0, [sp, #112]
  419fec:	b	419ebc <_obstack_memory_used@@Base+0x67bc>
  419ff0:	add	x27, x27, #0x1
  419ff4:	ldr	x20, [sp, #120]
  419ff8:	ldr	x25, [sp, #152]
  419ffc:	b	419f00 <_obstack_memory_used@@Base+0x6800>
  41a000:	ldr	x0, [x26]
  41a004:	sub	x0, x25, x0
  41a008:	cmp	x0, #0x0
  41a00c:	b.le	41a058 <_obstack_memory_used@@Base+0x6958>
  41a010:	ldr	x0, [x23, #48]
  41a014:	cmp	x0, x20
  41a018:	b.gt	41a03c <_obstack_memory_used@@Base+0x693c>
  41a01c:	ldr	x0, [x23, #88]
  41a020:	cmp	x20, x0
  41a024:	b.ge	419fe0 <_obstack_memory_used@@Base+0x68e0>  // b.tcont
  41a028:	add	w1, w20, #0x1
  41a02c:	mov	x0, x23
  41a030:	bl	414718 <_obstack_memory_used@@Base+0x1018>
  41a034:	cbnz	w0, 419f58 <_obstack_memory_used@@Base+0x6858>
  41a038:	ldr	x24, [x23, #8]
  41a03c:	add	x0, x24, x25
  41a040:	ldrb	w2, [x24, x20]
  41a044:	add	x1, x20, #0x1
  41a048:	ldurb	w0, [x0, #-1]
  41a04c:	cmp	w2, w0
  41a050:	b.ne	419fe0 <_obstack_memory_used@@Base+0x68e0>  // b.any
  41a054:	mov	x20, x1
  41a058:	ldr	x0, [x23, #184]
  41a05c:	ldr	x0, [x0, x25, lsl #3]
  41a060:	cbz	x0, 419fd4 <_obstack_memory_used@@Base+0x68d4>
  41a064:	ldr	x3, [x0, #16]
  41a068:	add	x0, x0, #0x8
  41a06c:	mov	x1, #0x0                   	// #0
  41a070:	cmp	x1, x3
  41a074:	b.ge	419fd4 <_obstack_memory_used@@Base+0x68d4>  // b.tcont
  41a078:	ldr	x2, [x0, #16]
  41a07c:	ldr	x27, [x2, x1, lsl #3]
  41a080:	ldr	x2, [x28]
  41a084:	lsl	x4, x27, #4
  41a088:	add	x6, x2, x27, lsl #4
  41a08c:	ldrb	w6, [x6, #8]
  41a090:	cmp	w6, #0x9
  41a094:	b.ne	41a0a8 <_obstack_memory_used@@Base+0x69a8>  // b.any
  41a098:	ldr	x2, [x2, x4]
  41a09c:	ldr	x4, [sp, #136]
  41a0a0:	cmp	x4, x2
  41a0a4:	b.eq	41a0b0 <_obstack_memory_used@@Base+0x69b0>  // b.none
  41a0a8:	add	x1, x1, #0x1
  41a0ac:	b	41a070 <_obstack_memory_used@@Base+0x6970>
  41a0b0:	cmn	x27, #0x1
  41a0b4:	b.eq	419fd4 <_obstack_memory_used@@Base+0x68d4>  // b.none
  41a0b8:	ldr	x0, [x26, #16]
  41a0bc:	ldr	x3, [x26]
  41a0c0:	cbz	x0, 41a160 <_obstack_memory_used@@Base+0x6a60>
  41a0c4:	ldp	x2, x1, [x26, #8]
  41a0c8:	mov	x5, x25
  41a0cc:	mov	x4, x27
  41a0d0:	mov	x0, x23
  41a0d4:	mov	w6, #0x9                   	// #9
  41a0d8:	bl	419744 <_obstack_memory_used@@Base+0x6044>
  41a0dc:	cmp	w0, #0x1
  41a0e0:	b.eq	419fd4 <_obstack_memory_used@@Base+0x68d4>  // b.none
  41a0e4:	cbnz	w0, 419f58 <_obstack_memory_used@@Base+0x6858>
  41a0e8:	ldp	x0, x2, [x26, #24]
  41a0ec:	cmp	x2, x0
  41a0f0:	b.ne	41a114 <_obstack_memory_used@@Base+0x6a14>  // b.any
  41a0f4:	ldr	x0, [x26, #40]
  41a0f8:	lsl	x2, x2, #1
  41a0fc:	add	x24, x2, #0x1
  41a100:	lsl	x1, x24, #3
  41a104:	bl	402640 <realloc@plt>
  41a108:	cbz	x0, 41a180 <_obstack_memory_used@@Base+0x6a80>
  41a10c:	str	x24, [x26, #24]
  41a110:	str	x0, [x26, #40]
  41a114:	mov	x1, #0x28                  	// #40
  41a118:	mov	x0, #0x1                   	// #1
  41a11c:	bl	402610 <calloc@plt>
  41a120:	mov	x2, x0
  41a124:	cbz	x0, 41a180 <_obstack_memory_used@@Base+0x6a80>
  41a128:	ldp	x0, x1, [x26, #32]
  41a12c:	mov	x4, x19
  41a130:	mov	x3, x21
  41a134:	str	x2, [x1, x0, lsl #3]
  41a138:	add	x0, x0, #0x1
  41a13c:	stp	x27, x25, [x2]
  41a140:	mov	x1, x26
  41a144:	str	x0, [x26, #32]
  41a148:	mov	x0, x23
  41a14c:	bl	419be0 <_obstack_memory_used@@Base+0x64e0>
  41a150:	cmp	w0, #0x1
  41a154:	ldr	x24, [x23, #8]
  41a158:	b.ls	419fd4 <_obstack_memory_used@@Base+0x68d4>  // b.plast
  41a15c:	b	419f58 <_obstack_memory_used@@Base+0x6858>
  41a160:	sub	x1, x25, x3
  41a164:	mov	x0, #0x18                  	// #24
  41a168:	add	x1, x1, #0x1
  41a16c:	str	x3, [sp, #120]
  41a170:	bl	402610 <calloc@plt>
  41a174:	str	x0, [x26, #16]
  41a178:	ldr	x3, [sp, #120]
  41a17c:	cbnz	x0, 41a0c4 <_obstack_memory_used@@Base+0x69c4>
  41a180:	mov	w0, #0xc                   	// #12
  41a184:	b	419f58 <_obstack_memory_used@@Base+0x6858>
  41a188:	ldr	x0, [x1, #8]
  41a18c:	cmp	x0, x19
  41a190:	b.ne	419e88 <_obstack_memory_used@@Base+0x6788>  // b.any
  41a194:	ldr	x0, [x1, #24]
  41a198:	ldr	x1, [x1, #16]
  41a19c:	ldr	x26, [x22, #48]
  41a1a0:	subs	x28, x0, x1
  41a1a4:	b.ne	41a278 <_obstack_memory_used@@Base+0x6b78>  // b.any
  41a1a8:	ldr	x2, [x22, #40]
  41a1ac:	add	x2, x2, x25
  41a1b0:	ldr	x2, [x2, #16]
  41a1b4:	ldr	x2, [x2]
  41a1b8:	mov	x3, #0x18                  	// #24
  41a1bc:	add	x20, x0, x19
  41a1c0:	mov	x0, x23
  41a1c4:	madd	x26, x2, x3, x26
  41a1c8:	ldr	w2, [x23, #160]
  41a1cc:	sub	x20, x20, x1
  41a1d0:	sub	x1, x20, #0x1
  41a1d4:	lsl	x20, x20, #3
  41a1d8:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41a1dc:	mov	w3, w0
  41a1e0:	ldr	x1, [sp, #128]
  41a1e4:	ldr	x4, [x23, #184]
  41a1e8:	ldr	x1, [x4, x1]
  41a1ec:	ldr	x0, [x4, x20]
  41a1f0:	cbz	x1, 41a284 <_obstack_memory_used@@Base+0x6b84>
  41a1f4:	ldr	x27, [x1, #16]
  41a1f8:	cbnz	x0, 41a28c <_obstack_memory_used@@Base+0x6b8c>
  41a1fc:	mov	x2, x26
  41a200:	mov	x1, x22
  41a204:	add	x0, sp, #0xb4
  41a208:	str	x4, [sp, #112]
  41a20c:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41a210:	ldr	x4, [sp, #112]
  41a214:	str	x0, [x4, x20]
  41a218:	ldr	x0, [x23, #184]
  41a21c:	ldr	x0, [x0, x20]
  41a220:	cbnz	x0, 41a22c <_obstack_memory_used@@Base+0x6b2c>
  41a224:	ldr	w0, [sp, #180]
  41a228:	cbnz	w0, 419f5c <_obstack_memory_used@@Base+0x685c>
  41a22c:	cbnz	x28, 419e88 <_obstack_memory_used@@Base+0x6788>
  41a230:	ldr	x1, [sp, #128]
  41a234:	ldr	x0, [x23, #184]
  41a238:	ldr	x0, [x0, x1]
  41a23c:	ldr	x0, [x0, #16]
  41a240:	cmp	x0, x27
  41a244:	b.le	419e88 <_obstack_memory_used@@Base+0x6788>
  41a248:	mov	x2, x19
  41a24c:	mov	x1, x26
  41a250:	mov	x0, x23
  41a254:	bl	414f38 <_obstack_memory_used@@Base+0x1838>
  41a258:	str	w0, [sp, #180]
  41a25c:	cbnz	w0, 419f5c <_obstack_memory_used@@Base+0x685c>
  41a260:	mov	x1, x26
  41a264:	mov	x0, x23
  41a268:	bl	419d40 <_obstack_memory_used@@Base+0x6640>
  41a26c:	str	w0, [sp, #180]
  41a270:	cbz	w0, 419e88 <_obstack_memory_used@@Base+0x6788>
  41a274:	b	419f5c <_obstack_memory_used@@Base+0x685c>
  41a278:	ldr	x2, [x22, #24]
  41a27c:	ldr	x2, [x2, x24]
  41a280:	b	41a1b8 <_obstack_memory_used@@Base+0x6ab8>
  41a284:	mov	x27, #0x0                   	// #0
  41a288:	b	41a1f8 <_obstack_memory_used@@Base+0x6af8>
  41a28c:	ldr	x1, [x0, #80]
  41a290:	mov	x2, x26
  41a294:	add	x0, sp, #0xb8
  41a298:	str	w3, [sp, #112]
  41a29c:	bl	416be8 <_obstack_memory_used@@Base+0x34e8>
  41a2a0:	str	w0, [sp, #180]
  41a2a4:	ldr	w3, [sp, #112]
  41a2a8:	cbz	w0, 41a2b8 <_obstack_memory_used@@Base+0x6bb8>
  41a2ac:	ldr	x0, [sp, #200]
  41a2b0:	bl	4027a0 <free@plt>
  41a2b4:	b	419f5c <_obstack_memory_used@@Base+0x685c>
  41a2b8:	ldr	x4, [x23, #184]
  41a2bc:	add	x2, sp, #0xb8
  41a2c0:	mov	x1, x22
  41a2c4:	add	x0, sp, #0xb4
  41a2c8:	str	x4, [sp, #112]
  41a2cc:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41a2d0:	ldr	x4, [sp, #112]
  41a2d4:	str	x0, [x4, x20]
  41a2d8:	ldr	x0, [sp, #200]
  41a2dc:	bl	4027a0 <free@plt>
  41a2e0:	b	41a218 <_obstack_memory_used@@Base+0x6b18>
  41a2e4:	stp	x29, x30, [sp, #-112]!
  41a2e8:	mov	x29, sp
  41a2ec:	stp	x19, x20, [sp, #16]
  41a2f0:	mov	x20, x1
  41a2f4:	mov	x19, x2
  41a2f8:	stp	x21, x22, [sp, #32]
  41a2fc:	mov	x21, x0
  41a300:	stp	x23, x24, [sp, #48]
  41a304:	stp	x25, x26, [sp, #64]
  41a308:	ldr	x23, [x1, #72]
  41a30c:	ldr	x25, [x1, #152]
  41a310:	ldp	x0, x1, [x1, #184]
  41a314:	lsl	x22, x23, #3
  41a318:	cmp	x1, x23
  41a31c:	b.ge	41a378 <_obstack_memory_used@@Base+0x6c78>  // b.tcont
  41a320:	str	x2, [x0, x22]
  41a324:	str	x23, [x20, #192]
  41a328:	ldr	x0, [x25, #152]
  41a32c:	cbz	x0, 41a3ac <_obstack_memory_used@@Base+0x6cac>
  41a330:	cbz	x19, 41a3a8 <_obstack_memory_used@@Base+0x6ca8>
  41a334:	add	x24, x19, #0x8
  41a338:	mov	x2, x23
  41a33c:	mov	x1, x24
  41a340:	mov	x0, x20
  41a344:	bl	414f38 <_obstack_memory_used@@Base+0x1838>
  41a348:	str	w0, [x21]
  41a34c:	cbnz	w0, 41a3a8 <_obstack_memory_used@@Base+0x6ca8>
  41a350:	ldrb	w0, [x19, #104]
  41a354:	tbz	w0, #6, 41a3ac <_obstack_memory_used@@Base+0x6cac>
  41a358:	mov	x1, x24
  41a35c:	mov	x0, x20
  41a360:	bl	419d40 <_obstack_memory_used@@Base+0x6640>
  41a364:	str	w0, [x21]
  41a368:	cbnz	w0, 41a3a8 <_obstack_memory_used@@Base+0x6ca8>
  41a36c:	ldr	x0, [x20, #184]
  41a370:	ldr	x19, [x0, x22]
  41a374:	b	41a3ac <_obstack_memory_used@@Base+0x6cac>
  41a378:	ldr	x1, [x0, x22]
  41a37c:	cbnz	x1, 41a388 <_obstack_memory_used@@Base+0x6c88>
  41a380:	str	x2, [x0, x22]
  41a384:	b	41a328 <_obstack_memory_used@@Base+0x6c28>
  41a388:	ldr	x2, [x1, #80]
  41a38c:	cbz	x19, 41a3c8 <_obstack_memory_used@@Base+0x6cc8>
  41a390:	ldr	x24, [x19, #80]
  41a394:	add	x0, sp, #0x58
  41a398:	mov	x1, x24
  41a39c:	bl	416be8 <_obstack_memory_used@@Base+0x34e8>
  41a3a0:	str	w0, [x21]
  41a3a4:	cbz	w0, 41a3dc <_obstack_memory_used@@Base+0x6cdc>
  41a3a8:	mov	x19, #0x0                   	// #0
  41a3ac:	mov	x0, x19
  41a3b0:	ldp	x19, x20, [sp, #16]
  41a3b4:	ldp	x21, x22, [sp, #32]
  41a3b8:	ldp	x23, x24, [sp, #48]
  41a3bc:	ldp	x25, x26, [sp, #64]
  41a3c0:	ldp	x29, x30, [sp], #112
  41a3c4:	ret
  41a3c8:	ldp	x0, x1, [x2]
  41a3cc:	stp	x0, x1, [sp, #88]
  41a3d0:	mov	x24, #0x0                   	// #0
  41a3d4:	ldr	x0, [x2, #16]
  41a3d8:	str	x0, [sp, #104]
  41a3dc:	ldr	w2, [x20, #160]
  41a3e0:	mov	x0, x20
  41a3e4:	ldr	x1, [x20, #72]
  41a3e8:	sub	x1, x1, #0x1
  41a3ec:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41a3f0:	ldr	x26, [x20, #184]
  41a3f4:	mov	w3, w0
  41a3f8:	add	x2, sp, #0x58
  41a3fc:	mov	x1, x25
  41a400:	mov	x0, x21
  41a404:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41a408:	str	x0, [x26, x22]
  41a40c:	mov	x19, x0
  41a410:	cbz	x24, 41a328 <_obstack_memory_used@@Base+0x6c28>
  41a414:	ldr	x0, [sp, #104]
  41a418:	bl	4027a0 <free@plt>
  41a41c:	b	41a328 <_obstack_memory_used@@Base+0x6c28>
  41a420:	stp	x29, x30, [sp, #-224]!
  41a424:	mov	x29, sp
  41a428:	stp	x19, x20, [sp, #16]
  41a42c:	mov	x20, x0
  41a430:	mov	x19, x1
  41a434:	stp	x23, x24, [sp, #48]
  41a438:	lsl	x24, x2, #3
  41a43c:	ldr	x23, [x0, #152]
  41a440:	stp	x21, x22, [sp, #32]
  41a444:	mov	x21, x2
  41a448:	ldr	x0, [x0, #184]
  41a44c:	stp	x25, x26, [sp, #64]
  41a450:	stp	x27, x28, [sp, #80]
  41a454:	mov	x28, x3
  41a458:	ldr	x22, [x0, x24]
  41a45c:	str	wzr, [sp, #164]
  41a460:	cbz	x22, 41a468 <_obstack_memory_used@@Base+0x6d68>
  41a464:	add	x22, x22, #0x8
  41a468:	ldr	x0, [x28, #8]
  41a46c:	cbnz	x0, 41a4ac <_obstack_memory_used@@Base+0x6dac>
  41a470:	ldr	x0, [x19]
  41a474:	str	xzr, [x0, x24]
  41a478:	cbz	x22, 41a4a4 <_obstack_memory_used@@Base+0x6da4>
  41a47c:	ldr	x0, [x20, #184]
  41a480:	ldr	x0, [x0, x24]
  41a484:	ldrb	w0, [x0, #104]
  41a488:	tbz	w0, #6, 41a4a4 <_obstack_memory_used@@Base+0x6da4>
  41a48c:	mov	x1, x21
  41a490:	mov	x0, x20
  41a494:	bl	413c58 <_obstack_memory_used@@Base+0x558>
  41a498:	str	x0, [sp, #104]
  41a49c:	cmn	x0, #0x1
  41a4a0:	b.ne	41a77c <_obstack_memory_used@@Base+0x707c>  // b.any
  41a4a4:	mov	w1, #0x0                   	// #0
  41a4a8:	b	41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a4ac:	cbnz	x22, 41a4f0 <_obstack_memory_used@@Base+0x6df0>
  41a4b0:	ldr	x25, [x19]
  41a4b4:	mov	x1, x23
  41a4b8:	mov	x2, x28
  41a4bc:	add	x0, sp, #0xa4
  41a4c0:	bl	4192ec <_obstack_memory_used@@Base+0x5bec>
  41a4c4:	ldr	w1, [sp, #164]
  41a4c8:	str	x0, [x25, x24]
  41a4cc:	cbz	w1, 41a478 <_obstack_memory_used@@Base+0x6d78>
  41a4d0:	mov	w0, w1
  41a4d4:	ldp	x19, x20, [sp, #16]
  41a4d8:	ldp	x21, x22, [sp, #32]
  41a4dc:	ldp	x23, x24, [sp, #48]
  41a4e0:	ldp	x25, x26, [sp, #64]
  41a4e4:	ldp	x27, x28, [sp, #80]
  41a4e8:	ldp	x29, x30, [sp], #224
  41a4ec:	ret
  41a4f0:	mov	x2, x28
  41a4f4:	mov	x1, x23
  41a4f8:	add	x0, sp, #0xa8
  41a4fc:	str	wzr, [sp, #168]
  41a500:	bl	4192ec <_obstack_memory_used@@Base+0x5bec>
  41a504:	mov	x25, x0
  41a508:	ldr	w0, [sp, #168]
  41a50c:	cbnz	w0, 41a528 <_obstack_memory_used@@Base+0x6e28>
  41a510:	ldr	x26, [x25, #56]!
  41a514:	cbz	x26, 41a55c <_obstack_memory_used@@Base+0x6e5c>
  41a518:	mov	x2, x25
  41a51c:	mov	x1, x22
  41a520:	mov	x0, x28
  41a524:	bl	416f94 <_obstack_memory_used@@Base+0x3894>
  41a528:	str	w0, [sp, #164]
  41a52c:	cbnz	w0, 41a9a8 <_obstack_memory_used@@Base+0x72a8>
  41a530:	ldr	x0, [x19, #40]
  41a534:	cbz	x0, 41a4b0 <_obstack_memory_used@@Base+0x6db0>
  41a538:	ldr	x0, [x20, #216]
  41a53c:	mov	x25, #0x0                   	// #0
  41a540:	str	x0, [sp, #104]
  41a544:	ldr	x1, [x19, #40]
  41a548:	add	x0, x19, #0x20
  41a54c:	cmp	x25, x1
  41a550:	b.lt	41a5b8 <_obstack_memory_used@@Base+0x6eb8>  // b.tstop
  41a554:	mov	w1, #0x0                   	// #0
  41a558:	b	41a698 <_obstack_memory_used@@Base+0x6f98>
  41a55c:	ldr	x1, [x28, #8]
  41a560:	mov	x0, x25
  41a564:	bl	414000 <_obstack_memory_used@@Base+0x900>
  41a568:	str	w0, [sp, #168]
  41a56c:	cbnz	w0, 41a5a8 <_obstack_memory_used@@Base+0x6ea8>
  41a570:	mov	x27, #0x18                  	// #24
  41a574:	ldr	x0, [x28, #8]
  41a578:	cmp	x26, x0
  41a57c:	b.ge	41a518 <_obstack_memory_used@@Base+0x6e18>  // b.tcont
  41a580:	ldr	x0, [x28, #16]
  41a584:	ldr	x1, [x0, x26, lsl #3]
  41a588:	ldr	x0, [x23, #56]
  41a58c:	madd	x1, x1, x27, x0
  41a590:	mov	x0, x25
  41a594:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  41a598:	str	w0, [sp, #168]
  41a59c:	cbnz	w0, 41a5b0 <_obstack_memory_used@@Base+0x6eb0>
  41a5a0:	add	x26, x26, #0x1
  41a5a4:	b	41a574 <_obstack_memory_used@@Base+0x6e74>
  41a5a8:	mov	w1, #0xc                   	// #12
  41a5ac:	b	41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a5b0:	mov	w0, #0xc                   	// #12
  41a5b4:	b	41a528 <_obstack_memory_used@@Base+0x6e28>
  41a5b8:	ldr	x0, [x0, #16]
  41a5bc:	mov	x1, #0x28                  	// #40
  41a5c0:	ldr	x0, [x0, x25, lsl #3]
  41a5c4:	mul	x0, x0, x1
  41a5c8:	ldr	x1, [sp, #104]
  41a5cc:	add	x1, x1, x0
  41a5d0:	ldr	x2, [x1, #16]
  41a5d4:	cmp	x21, x2
  41a5d8:	b.gt	41a5e4 <_obstack_memory_used@@Base+0x6ee4>
  41a5dc:	add	x25, x25, #0x1
  41a5e0:	b	41a544 <_obstack_memory_used@@Base+0x6e44>
  41a5e4:	ldr	x2, [x1, #8]
  41a5e8:	cmp	x21, x2
  41a5ec:	b.gt	41a5dc <_obstack_memory_used@@Base+0x6edc>
  41a5f0:	ldr	x3, [sp, #104]
  41a5f4:	ldr	x2, [x23]
  41a5f8:	ldr	x0, [x3, x0]
  41a5fc:	lsl	x0, x0, #4
  41a600:	ldr	x7, [x2, x0]
  41a604:	ldr	x0, [x1, #24]
  41a608:	cmp	x21, x0
  41a60c:	b.ne	41a774 <_obstack_memory_used@@Base+0x7074>  // b.any
  41a610:	ldr	x9, [x28, #8]
  41a614:	mov	x26, #0xffffffffffffffff    	// #-1
  41a618:	mov	x1, x26
  41a61c:	mov	x0, #0x0                   	// #0
  41a620:	cmp	x0, x9
  41a624:	b.lt	41a638 <_obstack_memory_used@@Base+0x6f38>  // b.tstop
  41a628:	tbz	x1, #63, 41a680 <_obstack_memory_used@@Base+0x6f80>
  41a62c:	tbnz	x26, #63, 41a5dc <_obstack_memory_used@@Base+0x6edc>
  41a630:	mov	x27, #0x0                   	// #0
  41a634:	b	41a6fc <_obstack_memory_used@@Base+0x6ffc>
  41a638:	ldr	x3, [x28, #16]
  41a63c:	ldr	x3, [x3, x0, lsl #3]
  41a640:	add	x8, x2, x3, lsl #4
  41a644:	lsl	x5, x3, #4
  41a648:	ldrb	w8, [x8, #8]
  41a64c:	cmp	w8, #0x8
  41a650:	b.ne	41a668 <_obstack_memory_used@@Base+0x6f68>  // b.any
  41a654:	ldr	x5, [x2, x5]
  41a658:	cmp	x7, x5
  41a65c:	csel	x1, x1, x3, ne  // ne = any
  41a660:	add	x0, x0, #0x1
  41a664:	b	41a620 <_obstack_memory_used@@Base+0x6f20>
  41a668:	cmp	w8, #0x9
  41a66c:	b.ne	41a660 <_obstack_memory_used@@Base+0x6f60>  // b.any
  41a670:	ldr	x5, [x2, x5]
  41a674:	cmp	x7, x5
  41a678:	csel	x26, x26, x3, ne  // ne = any
  41a67c:	b	41a660 <_obstack_memory_used@@Base+0x6f60>
  41a680:	mov	x3, x22
  41a684:	mov	x2, x28
  41a688:	mov	x0, x23
  41a68c:	bl	417100 <_obstack_memory_used@@Base+0x3a00>
  41a690:	mov	w1, w0
  41a694:	cbz	w0, 41a62c <_obstack_memory_used@@Base+0x6f2c>
  41a698:	str	w1, [sp, #164]
  41a69c:	cbz	w1, 41a4b0 <_obstack_memory_used@@Base+0x6db0>
  41a6a0:	b	41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a6a4:	ldr	x0, [x28, #16]
  41a6a8:	mov	x1, x26
  41a6ac:	ldr	x7, [x0, x27, lsl #3]
  41a6b0:	mov	x0, #0x18                  	// #24
  41a6b4:	mul	x8, x7, x0
  41a6b8:	ldr	x0, [x23, #56]
  41a6bc:	add	x0, x0, x8
  41a6c0:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41a6c4:	cbnz	x0, 41a6f8 <_obstack_memory_used@@Base+0x6ff8>
  41a6c8:	ldr	x0, [x23, #48]
  41a6cc:	add	x0, x0, x8
  41a6d0:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41a6d4:	cbnz	x0, 41a6f8 <_obstack_memory_used@@Base+0x6ff8>
  41a6d8:	mov	x1, x7
  41a6dc:	mov	x3, x22
  41a6e0:	mov	x2, x28
  41a6e4:	mov	x0, x23
  41a6e8:	bl	417100 <_obstack_memory_used@@Base+0x3a00>
  41a6ec:	mov	w1, w0
  41a6f0:	cbnz	w0, 41a698 <_obstack_memory_used@@Base+0x6f98>
  41a6f4:	sub	x27, x27, #0x1
  41a6f8:	add	x27, x27, #0x1
  41a6fc:	ldr	x0, [x28, #8]
  41a700:	cmp	x27, x0
  41a704:	b.lt	41a6a4 <_obstack_memory_used@@Base+0x6fa4>  // b.tstop
  41a708:	b	41a5dc <_obstack_memory_used@@Base+0x6edc>
  41a70c:	ldr	x0, [x28, #16]
  41a710:	ldr	x2, [x23]
  41a714:	ldr	x1, [x0, x5, lsl #3]
  41a718:	add	x0, x2, x1, lsl #4
  41a71c:	lsl	x3, x1, #4
  41a720:	ldrb	w0, [x0, #8]
  41a724:	sub	w0, w0, #0x8
  41a728:	cmp	w0, #0x1
  41a72c:	b.ls	41a744 <_obstack_memory_used@@Base+0x7044>  // b.plast
  41a730:	add	x5, x5, #0x1
  41a734:	ldr	x0, [x28, #8]
  41a738:	cmp	x5, x0
  41a73c:	b.lt	41a70c <_obstack_memory_used@@Base+0x700c>  // b.tstop
  41a740:	b	41a5dc <_obstack_memory_used@@Base+0x6edc>
  41a744:	ldr	x0, [x2, x3]
  41a748:	cmp	x7, x0
  41a74c:	b.ne	41a730 <_obstack_memory_used@@Base+0x7030>  // b.any
  41a750:	mov	x3, x22
  41a754:	mov	x2, x28
  41a758:	mov	x0, x23
  41a75c:	stp	x7, x5, [sp, #112]
  41a760:	bl	417100 <_obstack_memory_used@@Base+0x3a00>
  41a764:	mov	w1, w0
  41a768:	ldp	x7, x5, [sp, #112]
  41a76c:	cbz	w0, 41a730 <_obstack_memory_used@@Base+0x7030>
  41a770:	b	41a698 <_obstack_memory_used@@Base+0x6f98>
  41a774:	mov	x5, #0x0                   	// #0
  41a778:	b	41a734 <_obstack_memory_used@@Base+0x7034>
  41a77c:	ldr	x1, [sp, #104]
  41a780:	mov	x0, #0x28                  	// #40
  41a784:	ldr	x27, [x20, #152]
  41a788:	add	x28, sp, #0xc8
  41a78c:	mul	x0, x1, x0
  41a790:	mov	x26, #0x0                   	// #0
  41a794:	str	x0, [sp, #120]
  41a798:	add	x0, x19, #0x20
  41a79c:	str	x0, [sp, #112]
  41a7a0:	str	xzr, [sp, #168]
  41a7a4:	ldr	x0, [x22, #8]
  41a7a8:	cmp	x26, x0
  41a7ac:	b.lt	41a7b8 <_obstack_memory_used@@Base+0x70b8>  // b.tstop
  41a7b0:	mov	w1, #0x0                   	// #0
  41a7b4:	b	41a8c0 <_obstack_memory_used@@Base+0x71c0>
  41a7b8:	ldr	x0, [x22, #16]
  41a7bc:	ldr	x1, [x19, #16]
  41a7c0:	ldr	x23, [x0, x26, lsl #3]
  41a7c4:	ldr	x0, [x27]
  41a7c8:	cmp	x23, x1
  41a7cc:	add	x0, x0, x23, lsl #4
  41a7d0:	ldrb	w0, [x0, #8]
  41a7d4:	b.ne	41a7ec <_obstack_memory_used@@Base+0x70ec>  // b.any
  41a7d8:	ldr	x1, [x19, #24]
  41a7dc:	cmp	x21, x1
  41a7e0:	b.ne	41a7ec <_obstack_memory_used@@Base+0x70ec>  // b.any
  41a7e4:	add	x26, x26, #0x1
  41a7e8:	b	41a7a4 <_obstack_memory_used@@Base+0x70a4>
  41a7ec:	cmp	w0, #0x4
  41a7f0:	b.ne	41a7e4 <_obstack_memory_used@@Base+0x70e4>  // b.any
  41a7f4:	ldr	x0, [sp, #120]
  41a7f8:	ldr	x6, [x20, #216]
  41a7fc:	ldr	x25, [sp, #104]
  41a800:	add	x6, x6, x0
  41a804:	mov	x0, #0x18                  	// #24
  41a808:	mul	x0, x23, x0
  41a80c:	str	x0, [sp, #136]
  41a810:	lsl	x0, x23, #3
  41a814:	str	x0, [sp, #128]
  41a818:	add	x0, x21, #0x1
  41a81c:	str	x0, [sp, #152]
  41a820:	ldr	x0, [x6]
  41a824:	cmp	x23, x0
  41a828:	b.ne	41a974 <_obstack_memory_used@@Base+0x7274>  // b.any
  41a82c:	ldp	x1, x0, [x6, #16]
  41a830:	sub	x0, x0, x1
  41a834:	add	x7, x21, x0
  41a838:	cbz	x0, 41a8dc <_obstack_memory_used@@Base+0x71dc>
  41a83c:	ldr	x0, [x27, #24]
  41a840:	ldr	x1, [sp, #128]
  41a844:	ldr	x1, [x0, x1]
  41a848:	ldr	x0, [x19, #24]
  41a84c:	cmp	x7, x0
  41a850:	b.gt	41a974 <_obstack_memory_used@@Base+0x7274>
  41a854:	ldr	x0, [x19]
  41a858:	ldr	x0, [x0, x7, lsl #3]
  41a85c:	cbz	x0, 41a974 <_obstack_memory_used@@Base+0x7274>
  41a860:	add	x0, x0, #0x8
  41a864:	str	x6, [sp, #144]
  41a868:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41a86c:	ldr	x6, [sp, #144]
  41a870:	cbz	x0, 41a974 <_obstack_memory_used@@Base+0x7274>
  41a874:	mov	x4, x1
  41a878:	mov	x5, x7
  41a87c:	ldr	x1, [sp, #112]
  41a880:	mov	x3, x21
  41a884:	mov	x2, x23
  41a888:	mov	x0, x20
  41a88c:	bl	413ccc <_obstack_memory_used@@Base+0x5cc>
  41a890:	tst	w0, #0xff
  41a894:	ldr	x6, [sp, #144]
  41a898:	b.ne	41a974 <_obstack_memory_used@@Base+0x7274>  // b.any
  41a89c:	ldr	x0, [sp, #168]
  41a8a0:	cbz	x0, 41a8f4 <_obstack_memory_used@@Base+0x71f4>
  41a8a4:	mov	x1, x25
  41a8a8:	mov	x0, x28
  41a8ac:	stp	x23, x21, [sp, #184]
  41a8b0:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41a8b4:	tst	w0, #0xff
  41a8b8:	b.ne	41a91c <_obstack_memory_used@@Base+0x721c>  // b.any
  41a8bc:	mov	w1, #0xc                   	// #12
  41a8c0:	ldr	x0, [sp, #168]
  41a8c4:	cbz	x0, 41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a8c8:	ldr	x0, [sp, #216]
  41a8cc:	str	w1, [sp, #104]
  41a8d0:	bl	4027a0 <free@plt>
  41a8d4:	ldr	w1, [sp, #104]
  41a8d8:	b	41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a8dc:	ldr	x0, [x27, #40]
  41a8e0:	ldr	x1, [sp, #136]
  41a8e4:	add	x0, x0, x1
  41a8e8:	ldr	x0, [x0, #16]
  41a8ec:	ldr	x1, [x0]
  41a8f0:	b	41a848 <_obstack_memory_used@@Base+0x7148>
  41a8f4:	mov	x1, x19
  41a8f8:	mov	x2, #0x38                  	// #56
  41a8fc:	add	x0, sp, #0xa8
  41a900:	bl	402360 <memcpy@plt>
  41a904:	ldr	x1, [sp, #112]
  41a908:	mov	x0, x28
  41a90c:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  41a910:	mov	w1, w0
  41a914:	cbz	w0, 41a8a4 <_obstack_memory_used@@Base+0x71a4>
  41a918:	b	41a8c0 <_obstack_memory_used@@Base+0x71c0>
  41a91c:	ldr	x0, [sp, #168]
  41a920:	add	x1, sp, #0xa8
  41a924:	ldr	x0, [x0, x24]
  41a928:	str	x0, [sp, #144]
  41a92c:	mov	x0, x20
  41a930:	bl	41a9b0 <_obstack_memory_used@@Base+0x72b0>
  41a934:	mov	w1, w0
  41a938:	cbnz	w0, 41a8c0 <_obstack_memory_used@@Base+0x71c0>
  41a93c:	ldr	x1, [x19, #8]
  41a940:	cbnz	x1, 41a98c <_obstack_memory_used@@Base+0x728c>
  41a944:	ldr	x0, [sp, #168]
  41a948:	ldr	x1, [sp, #144]
  41a94c:	str	x1, [x0, x24]
  41a950:	mov	x1, x25
  41a954:	mov	x0, x28
  41a958:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41a95c:	sub	x1, x0, #0x1
  41a960:	mov	x0, x28
  41a964:	bl	415cf4 <_obstack_memory_used@@Base+0x25f4>
  41a968:	ldr	x0, [x20, #216]
  41a96c:	mov	x6, #0x28                  	// #40
  41a970:	madd	x6, x25, x6, x0
  41a974:	ldrb	w0, [x6, #32]
  41a978:	add	x25, x25, #0x1
  41a97c:	add	x1, x6, #0x28
  41a980:	cbz	w0, 41a7e4 <_obstack_memory_used@@Base+0x70e4>
  41a984:	mov	x6, x1
  41a988:	b	41a820 <_obstack_memory_used@@Base+0x7120>
  41a98c:	ldr	x3, [sp, #152]
  41a990:	mov	x0, x27
  41a994:	ldr	x2, [sp, #168]
  41a998:	bl	4194b0 <_obstack_memory_used@@Base+0x5db0>
  41a99c:	mov	w1, w0
  41a9a0:	cbz	w0, 41a944 <_obstack_memory_used@@Base+0x7244>
  41a9a4:	b	41a8c0 <_obstack_memory_used@@Base+0x71c0>
  41a9a8:	mov	w1, w0
  41a9ac:	b	41a4d0 <_obstack_memory_used@@Base+0x6dd0>
  41a9b0:	stp	x29, x30, [sp, #-160]!
  41a9b4:	mov	x29, sp
  41a9b8:	stp	x19, x20, [sp, #16]
  41a9bc:	mov	x19, x1
  41a9c0:	ldr	x20, [x1, #24]
  41a9c4:	stp	x21, x22, [sp, #32]
  41a9c8:	mov	x21, x0
  41a9cc:	ldr	x1, [x1, #16]
  41a9d0:	add	x0, sp, #0x88
  41a9d4:	stp	x23, x24, [sp, #48]
  41a9d8:	stp	x25, x26, [sp, #64]
  41a9dc:	stp	x27, x28, [sp, #80]
  41a9e0:	bl	413fb4 <_obstack_memory_used@@Base+0x8b4>
  41a9e4:	mov	w22, w0
  41a9e8:	cbnz	w0, 41aa50 <_obstack_memory_used@@Base+0x7350>
  41a9ec:	add	x3, sp, #0x88
  41a9f0:	mov	x2, x20
  41a9f4:	mov	x1, x19
  41a9f8:	mov	x0, x21
  41a9fc:	bl	41a420 <_obstack_memory_used@@Base+0x6d20>
  41aa00:	mov	w22, w0
  41aa04:	cbnz	w0, 41aa48 <_obstack_memory_used@@Base+0x7348>
  41aa08:	add	x0, x19, #0x20
  41aa0c:	mov	w26, #0x0                   	// #0
  41aa10:	str	x0, [sp, #104]
  41aa14:	cmp	x20, #0x0
  41aa18:	b.le	41aa48 <_obstack_memory_used@@Base+0x7348>
  41aa1c:	ldr	x0, [x19]
  41aa20:	lsl	x25, x20, #3
  41aa24:	ldr	x1, [x0, x25]
  41aa28:	cmp	x1, #0x0
  41aa2c:	ldr	w1, [x21, #224]
  41aa30:	csinc	w26, wzr, w26, ne  // ne = any
  41aa34:	cmp	w1, w26
  41aa38:	b.ge	41aa70 <_obstack_memory_used@@Base+0x7370>  // b.tcont
  41aa3c:	mov	x2, x25
  41aa40:	mov	w1, #0x0                   	// #0
  41aa44:	bl	4025f0 <memset@plt>
  41aa48:	ldr	x0, [sp, #152]
  41aa4c:	bl	4027a0 <free@plt>
  41aa50:	mov	w0, w22
  41aa54:	ldp	x19, x20, [sp, #16]
  41aa58:	ldp	x21, x22, [sp, #32]
  41aa5c:	ldp	x23, x24, [sp, #48]
  41aa60:	ldp	x25, x26, [sp, #64]
  41aa64:	ldp	x27, x28, [sp, #80]
  41aa68:	ldp	x29, x30, [sp], #160
  41aa6c:	ret
  41aa70:	ldr	x0, [x21, #184]
  41aa74:	sub	x20, x20, #0x1
  41aa78:	add	x0, x0, x25
  41aa7c:	ldur	x27, [x0, #-8]
  41aa80:	str	xzr, [sp, #144]
  41aa84:	cbnz	x27, 41aaa8 <_obstack_memory_used@@Base+0x73a8>
  41aa88:	add	x3, sp, #0x88
  41aa8c:	mov	x2, x20
  41aa90:	mov	x1, x19
  41aa94:	mov	x0, x21
  41aa98:	bl	41a420 <_obstack_memory_used@@Base+0x6d20>
  41aa9c:	cbz	w0, 41aa14 <_obstack_memory_used@@Base+0x7314>
  41aaa0:	mov	w22, w0
  41aaa4:	b	41aa48 <_obstack_memory_used@@Base+0x7348>
  41aaa8:	ldr	x24, [x21, #152]
  41aaac:	mov	x23, #0x0                   	// #0
  41aab0:	ldr	x1, [x27, #40]
  41aab4:	add	x0, x27, #0x20
  41aab8:	cmp	x23, x1
  41aabc:	b.ge	41aa88 <_obstack_memory_used@@Base+0x7388>  // b.tcont
  41aac0:	ldr	x0, [x0, #16]
  41aac4:	ldr	x28, [x0, x23, lsl #3]
  41aac8:	lsl	x0, x28, #4
  41aacc:	str	x0, [sp, #112]
  41aad0:	ldr	x0, [x24]
  41aad4:	add	x0, x0, x28, lsl #4
  41aad8:	ldrb	w0, [x0, #10]
  41aadc:	tbnz	w0, #4, 41ab08 <_obstack_memory_used@@Base+0x7408>
  41aae0:	ldr	x1, [x24]
  41aae4:	lsl	x0, x28, #4
  41aae8:	mov	x2, x20
  41aaec:	add	x1, x1, x0
  41aaf0:	mov	x0, x21
  41aaf4:	bl	418ca4 <_obstack_memory_used@@Base+0x55a4>
  41aaf8:	tst	w0, #0xff
  41aafc:	b.ne	41ab94 <_obstack_memory_used@@Base+0x7494>  // b.any
  41ab00:	add	x23, x23, #0x1
  41ab04:	b	41aab0 <_obstack_memory_used@@Base+0x73b0>
  41ab08:	ldr	x7, [x19, #24]
  41ab0c:	mov	x3, x20
  41ab10:	ldr	x5, [x21, #152]
  41ab14:	mov	x2, x21
  41ab18:	mov	x1, x28
  41ab1c:	stp	x5, x7, [sp, #112]
  41ab20:	mov	x0, x5
  41ab24:	bl	415a74 <_obstack_memory_used@@Base+0x2374>
  41ab28:	mov	w6, w0
  41ab2c:	cmp	w0, #0x0
  41ab30:	b.le	41ab8c <_obstack_memory_used@@Base+0x748c>
  41ab34:	ldr	x7, [sp, #120]
  41ab38:	add	x0, x20, w0, sxtw
  41ab3c:	cmp	x7, x0
  41ab40:	b.lt	41ab68 <_obstack_memory_used@@Base+0x7468>  // b.tstop
  41ab44:	ldr	x1, [x19]
  41ab48:	ldr	x0, [x1, x0, lsl #3]
  41ab4c:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x73e0>
  41ab50:	ldr	x5, [sp, #112]
  41ab54:	add	x0, x0, #0x8
  41ab58:	ldr	x1, [x5, #24]
  41ab5c:	ldr	x1, [x1, x28, lsl #3]
  41ab60:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41ab64:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x73e0>
  41ab68:	ldr	x0, [x19, #40]
  41ab6c:	cbnz	x0, 41abbc <_obstack_memory_used@@Base+0x74bc>
  41ab70:	mov	x1, x28
  41ab74:	add	x0, sp, #0x88
  41ab78:	bl	41631c <_obstack_memory_used@@Base+0x2c1c>
  41ab7c:	tst	w0, #0xff
  41ab80:	b.ne	41ab00 <_obstack_memory_used@@Base+0x7400>  // b.any
  41ab84:	mov	w22, #0xc                   	// #12
  41ab88:	b	41aa48 <_obstack_memory_used@@Base+0x7348>
  41ab8c:	b.eq	41aae0 <_obstack_memory_used@@Base+0x73e0>  // b.none
  41ab90:	b	41ab68 <_obstack_memory_used@@Base+0x7468>
  41ab94:	ldr	x0, [x19]
  41ab98:	ldr	x0, [x0, x25]
  41ab9c:	cbz	x0, 41ab00 <_obstack_memory_used@@Base+0x7400>
  41aba0:	ldr	x1, [x24, #24]
  41aba4:	add	x0, x0, #0x8
  41aba8:	ldr	x1, [x1, x28, lsl #3]
  41abac:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41abb0:	cbz	x0, 41ab00 <_obstack_memory_used@@Base+0x7400>
  41abb4:	mov	w6, #0x1                   	// #1
  41abb8:	b	41ab68 <_obstack_memory_used@@Base+0x7468>
  41abbc:	ldr	x0, [x24, #24]
  41abc0:	mov	x5, x20
  41abc4:	ldr	x1, [sp, #104]
  41abc8:	mov	x4, x28
  41abcc:	ldr	x2, [x0, x28, lsl #3]
  41abd0:	add	x3, x20, w6, sxtw
  41abd4:	mov	x0, x21
  41abd8:	bl	413ccc <_obstack_memory_used@@Base+0x5cc>
  41abdc:	tst	w0, #0xff
  41abe0:	b.eq	41ab70 <_obstack_memory_used@@Base+0x7470>  // b.none
  41abe4:	b	41ab00 <_obstack_memory_used@@Base+0x7400>
  41abe8:	sub	sp, sp, #0x250
  41abec:	stp	x29, x30, [sp]
  41abf0:	mov	x29, sp
  41abf4:	stp	x23, x24, [sp, #48]
  41abf8:	mov	x24, x0
  41abfc:	ldr	w0, [sp, #592]
  41ac00:	mov	x23, x6
  41ac04:	stp	x19, x20, [sp, #16]
  41ac08:	mov	x20, x5
  41ac0c:	stp	x21, x22, [sp, #32]
  41ac10:	mov	x21, x3
  41ac14:	stp	x25, x26, [sp, #64]
  41ac18:	mov	x26, x2
  41ac1c:	mov	x2, #0x100                 	// #256
  41ac20:	stp	x27, x28, [sp, #80]
  41ac24:	mov	x27, x4
  41ac28:	str	x7, [sp, #112]
  41ac2c:	str	x1, [sp, #128]
  41ac30:	mov	w1, #0x0                   	// #0
  41ac34:	str	w0, [sp, #184]
  41ac38:	add	x0, sp, #0x150
  41ac3c:	ldr	x22, [x24]
  41ac40:	bl	4025f0 <memset@plt>
  41ac44:	ldr	x25, [x24, #32]
  41ac48:	str	x22, [sp, #488]
  41ac4c:	cbz	x25, 41ac68 <_obstack_memory_used@@Base+0x7568>
  41ac50:	ldrb	w0, [x24, #56]
  41ac54:	tbz	w0, #3, 41ae64 <_obstack_memory_used@@Base+0x7764>
  41ac58:	cmp	x21, x27
  41ac5c:	b.eq	41ae64 <_obstack_memory_used@@Base+0x7764>  // b.none
  41ac60:	tst	x0, #0x1
  41ac64:	csel	x25, x25, xzr, eq  // eq = none
  41ac68:	ldr	x1, [x24, #48]
  41ac6c:	sub	x0, x23, #0x1
  41ac70:	sub	x0, x0, x1
  41ac74:	cmp	x1, x23
  41ac78:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  41ac7c:	str	x0, [sp, #208]
  41ac80:	ldr	x0, [x24, #16]
  41ac84:	cbz	x0, 41ba84 <_obstack_memory_used@@Base+0x8384>
  41ac88:	ldr	x2, [x22, #72]
  41ac8c:	cbz	x2, 41ba84 <_obstack_memory_used@@Base+0x8384>
  41ac90:	ldr	x1, [x22, #80]
  41ac94:	cbz	x1, 41ba84 <_obstack_memory_used@@Base+0x8384>
  41ac98:	ldr	x0, [x22, #88]
  41ac9c:	cbz	x0, 41ba84 <_obstack_memory_used@@Base+0x8384>
  41aca0:	ldr	x3, [x22, #96]
  41aca4:	cbz	x3, 41ba84 <_obstack_memory_used@@Base+0x8384>
  41aca8:	ldr	x2, [x2, #16]
  41acac:	cbnz	x2, 41acdc <_obstack_memory_used@@Base+0x75dc>
  41acb0:	ldr	x1, [x1, #16]
  41acb4:	cbnz	x1, 41acdc <_obstack_memory_used@@Base+0x75dc>
  41acb8:	ldr	x0, [x0, #16]
  41acbc:	cbz	x0, 41acc8 <_obstack_memory_used@@Base+0x75c8>
  41acc0:	ldrsb	w0, [x24, #56]
  41acc4:	tbnz	w0, #31, 41acdc <_obstack_memory_used@@Base+0x75dc>
  41acc8:	cmp	x21, #0x0
  41accc:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  41acd0:	b.ne	41ba84 <_obstack_memory_used@@Base+0x8384>  // b.any
  41acd4:	mov	x27, #0x0                   	// #0
  41acd8:	mov	x21, #0x0                   	// #0
  41acdc:	ldr	x0, [sp, #208]
  41ace0:	subs	x23, x23, x0
  41ace4:	b.ne	41ae6c <_obstack_memory_used@@Base+0x776c>  // b.any
  41ace8:	ldr	x0, [x22, #152]
  41acec:	cmp	x0, #0x0
  41acf0:	cset	w0, ne  // ne = any
  41acf4:	ldr	x1, [x22, #16]
  41acf8:	str	w0, [sp, #164]
  41acfc:	ldr	w2, [x22, #180]
  41ad00:	add	x1, x1, #0x1
  41ad04:	str	w2, [sp, #480]
  41ad08:	ldr	x0, [x24, #40]
  41ad0c:	sxtw	x3, w2
  41ad10:	cmp	x1, w2, sxtw
  41ad14:	str	x0, [sp, #104]
  41ad18:	csel	x1, x1, x3, ge  // ge = tcont
  41ad1c:	add	x3, x26, #0x1
  41ad20:	ldr	x0, [x24, #24]
  41ad24:	cmp	x1, x3
  41ad28:	csel	x1, x1, x3, le
  41ad2c:	stp	x26, x26, [sp, #416]
  41ad30:	ldr	x3, [sp, #128]
  41ad34:	str	x3, [sp, #336]
  41ad38:	ldr	x3, [sp, #104]
  41ad3c:	str	x3, [sp, #456]
  41ad40:	and	x3, x0, #0x400000
  41ad44:	ubfx	w0, w0, #22, #1
  41ad48:	strb	w0, [sp, #472]
  41ad4c:	ldr	x0, [sp, #104]
  41ad50:	stp	x26, x26, [sp, #432]
  41ad54:	orr	x0, x0, x3
  41ad58:	cmp	x0, #0x0
  41ad5c:	cset	w0, ne  // ne = any
  41ad60:	strb	w0, [sp, #475]
  41ad64:	ldrb	w0, [x22, #176]
  41ad68:	ubfx	x2, x0, #2, #1
  41ad6c:	ubfx	x0, x0, #3, #1
  41ad70:	strb	w2, [sp, #473]
  41ad74:	strb	w0, [sp, #474]
  41ad78:	add	x0, sp, #0x150
  41ad7c:	bl	413eac <_obstack_memory_used@@Base+0x7ac>
  41ad80:	cbnz	w0, 41b974 <_obstack_memory_used@@Base+0x8274>
  41ad84:	add	x0, x22, #0xb8
  41ad88:	str	x0, [sp, #464]
  41ad8c:	ldrb	w0, [x22, #176]
  41ad90:	ldrb	w1, [sp, #475]
  41ad94:	ldr	x2, [sp, #128]
  41ad98:	ubfx	x0, x0, #4, #1
  41ad9c:	strb	w0, [sp, #478]
  41ada0:	cmp	w1, #0x0
  41ada4:	ldr	x0, [sp, #344]
  41ada8:	csel	x0, x0, x2, ne  // ne = any
  41adac:	str	x0, [sp, #344]
  41adb0:	cbnz	w1, 41ae74 <_obstack_memory_used@@Base+0x7774>
  41adb4:	ldr	w0, [x22, #180]
  41adb8:	cmp	w0, #0x1
  41adbc:	csel	x0, x26, xzr, le
  41adc0:	stp	x0, x0, [sp, #384]
  41adc4:	ldrb	w0, [x24, #56]
  41adc8:	ldr	x28, [x22, #152]
  41adcc:	stp	x20, x20, [sp, #432]
  41add0:	ubfx	x0, x0, #7, #1
  41add4:	strb	w0, [sp, #477]
  41add8:	ldr	w0, [sp, #184]
  41addc:	lsl	x19, x28, #1
  41ade0:	str	w0, [sp, #496]
  41ade4:	cmp	xzr, x28, lsl #1
  41ade8:	mov	x0, #0xffffffffffffffff    	// #-1
  41adec:	str	x0, [sp, #504]
  41adf0:	b.lt	41ae7c <_obstack_memory_used@@Base+0x777c>  // b.tstop
  41adf4:	mov	w0, #0x1                   	// #1
  41adf8:	str	x19, [sp, #544]
  41adfc:	str	w0, [sp, #560]
  41ae00:	cmp	x23, #0x1
  41ae04:	str	x19, [sp, #576]
  41ae08:	b.hi	41aec0 <_obstack_memory_used@@Base+0x77c0>  // b.pmore
  41ae0c:	ldrb	w0, [x22, #176]
  41ae10:	tbnz	w0, #1, 41aec0 <_obstack_memory_used@@Base+0x77c0>
  41ae14:	ldr	x1, [sp, #184]
  41ae18:	mov	w0, #0x4                   	// #4
  41ae1c:	str	x21, [sp, #272]
  41ae20:	tst	x1, #0x1
  41ae24:	mov	w1, #0x6                   	// #6
  41ae28:	csel	w1, w0, w1, ne  // ne = any
  41ae2c:	cmp	x21, x27
  41ae30:	str	w1, [sp, #448]
  41ae34:	mov	w1, #0x1                   	// #1
  41ae38:	cneg	w1, w1, gt
  41ae3c:	str	w1, [sp, #220]
  41ae40:	csel	x1, x21, x27, le
  41ae44:	str	x1, [sp, #192]
  41ae48:	csel	x1, x21, x27, ge  // ge = tcont
  41ae4c:	str	x1, [sp, #120]
  41ae50:	ldr	w1, [x22, #180]
  41ae54:	str	w1, [sp, #216]
  41ae58:	cbnz	x25, 41aee8 <_obstack_memory_used@@Base+0x77e8>
  41ae5c:	mov	w0, #0x8                   	// #8
  41ae60:	b	41af28 <_obstack_memory_used@@Base+0x7828>
  41ae64:	mov	x25, #0x0                   	// #0
  41ae68:	b	41ac68 <_obstack_memory_used@@Base+0x7568>
  41ae6c:	mov	w0, #0x1                   	// #1
  41ae70:	b	41acf4 <_obstack_memory_used@@Base+0x75f4>
  41ae74:	mov	x0, #0x0                   	// #0
  41ae78:	b	41adc0 <_obstack_memory_used@@Base+0x76c0>
  41ae7c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  41ae80:	movk	x0, #0x666, lsl #48
  41ae84:	cmp	x19, x0
  41ae88:	b.le	41ae94 <_obstack_memory_used@@Base+0x7794>
  41ae8c:	mov	w19, #0xc                   	// #12
  41ae90:	b	41b064 <_obstack_memory_used@@Base+0x7964>
  41ae94:	mov	x0, #0x28                  	// #40
  41ae98:	mul	x0, x19, x0
  41ae9c:	bl	402520 <malloc@plt>
  41aea0:	mov	x20, x0
  41aea4:	lsl	x0, x28, #4
  41aea8:	str	x20, [sp, #552]
  41aeac:	bl	402520 <malloc@plt>
  41aeb0:	str	x0, [sp, #584]
  41aeb4:	cbz	x20, 41ae8c <_obstack_memory_used@@Base+0x778c>
  41aeb8:	cbnz	x0, 41adf4 <_obstack_memory_used@@Base+0x76f4>
  41aebc:	b	41ae8c <_obstack_memory_used@@Base+0x778c>
  41aec0:	ldr	x0, [sp, #400]
  41aec4:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  41aec8:	cmp	x0, x1
  41aecc:	b.hi	41ae8c <_obstack_memory_used@@Base+0x778c>  // b.pmore
  41aed0:	add	x0, x0, #0x1
  41aed4:	lsl	x0, x0, #3
  41aed8:	bl	402520 <malloc@plt>
  41aedc:	str	x0, [sp, #520]
  41aee0:	cbnz	x0, 41ae14 <_obstack_memory_used@@Base+0x7714>
  41aee4:	b	41ae8c <_obstack_memory_used@@Base+0x778c>
  41aee8:	ldr	w1, [sp, #216]
  41aeec:	cmp	w1, #0x1
  41aef0:	b.eq	41af0c <_obstack_memory_used@@Base+0x780c>  // b.none
  41aef4:	ldr	x0, [x24, #24]
  41aef8:	tbnz	w0, #22, 41aff0 <_obstack_memory_used@@Base+0x78f0>
  41aefc:	ldr	x0, [sp, #104]
  41af00:	cmp	x0, #0x0
  41af04:	cset	w0, eq  // eq = none
  41af08:	lsl	w0, w0, #2
  41af0c:	ldr	x1, [sp, #104]
  41af10:	cmp	x21, x27
  41af14:	cset	w2, le
  41af18:	cmp	x1, #0x0
  41af1c:	cset	w1, ne  // ne = any
  41af20:	orr	w0, w1, w0
  41af24:	orr	w0, w0, w2, lsl #1
  41af28:	cmp	x21, x27
  41af2c:	str	w0, [sp, #232]
  41af30:	add	x0, sp, #0x110
  41af34:	csel	x0, x0, xzr, le
  41af38:	str	x0, [sp, #224]
  41af3c:	cmp	x0, #0x0
  41af40:	cset	w0, ne  // ne = any
  41af44:	str	w0, [sp, #236]
  41af48:	ldr	x1, [sp, #192]
  41af4c:	ldr	x0, [sp, #272]
  41af50:	ldr	x2, [sp, #120]
  41af54:	cmp	x0, x1
  41af58:	cset	w1, lt  // lt = tstop
  41af5c:	cmp	x0, x2
  41af60:	cset	w2, gt
  41af64:	orr	w1, w1, w2
  41af68:	cbnz	w1, 41b060 <_obstack_memory_used@@Base+0x7960>
  41af6c:	ldr	w1, [sp, #232]
  41af70:	sub	w2, w1, #0x4
  41af74:	cmp	w2, #0x4
  41af78:	b.ls	41aff8 <_obstack_memory_used@@Base+0x78f8>  // b.plast
  41af7c:	ldrsw	x21, [sp, #220]
  41af80:	ldr	x20, [sp, #272]
  41af84:	ldr	x0, [sp, #376]
  41af88:	ldr	x1, [sp, #392]
  41af8c:	sub	x0, x20, x0
  41af90:	cmp	x1, x0
  41af94:	b.hi	41afb8 <_obstack_memory_used@@Base+0x78b8>  // b.pmore
  41af98:	ldr	w2, [sp, #184]
  41af9c:	mov	x1, x20
  41afa0:	add	x0, sp, #0x150
  41afa4:	bl	41859c <_obstack_memory_used@@Base+0x4e9c>
  41afa8:	mov	w19, w0
  41afac:	cbnz	w0, 41b064 <_obstack_memory_used@@Base+0x7964>
  41afb0:	ldr	x0, [sp, #376]
  41afb4:	sub	x0, x20, x0
  41afb8:	cmp	x20, x26
  41afbc:	b.ge	41b178 <_obstack_memory_used@@Base+0x7a78>  // b.tcont
  41afc0:	ldr	x1, [sp, #344]
  41afc4:	ldrb	w0, [x1, x0]
  41afc8:	ldrb	w0, [x25, w0, sxtw]
  41afcc:	cbnz	w0, 41b188 <_obstack_memory_used@@Base+0x7a88>
  41afd0:	ldr	x0, [sp, #192]
  41afd4:	add	x20, x21, x20
  41afd8:	str	x20, [sp, #272]
  41afdc:	cmp	x20, x0
  41afe0:	ldr	x0, [sp, #120]
  41afe4:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  41afe8:	b.le	41af80 <_obstack_memory_used@@Base+0x7880>
  41afec:	b	41b060 <_obstack_memory_used@@Base+0x7960>
  41aff0:	mov	w0, #0x0                   	// #0
  41aff4:	b	41af0c <_obstack_memory_used@@Base+0x780c>
  41aff8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41affc:	add	x1, x1, #0xd8
  41b000:	ldrb	w1, [x1, w2, uxtw]
  41b004:	adr	x2, 41b010 <_obstack_memory_used@@Base+0x7910>
  41b008:	add	x1, x2, w1, sxtb #2
  41b00c:	br	x1
  41b010:	mov	w1, #0x0                   	// #0
  41b014:	ldr	x3, [sp, #120]
  41b018:	mov	x2, x0
  41b01c:	cmp	x3, x0
  41b020:	b.gt	41b110 <_obstack_memory_used@@Base+0x7a10>
  41b024:	cbz	w1, 41b02c <_obstack_memory_used@@Base+0x792c>
  41b028:	str	x0, [sp, #272]
  41b02c:	ldr	x1, [sp, #120]
  41b030:	ldr	x0, [sp, #272]
  41b034:	cmp	x0, x1
  41b038:	b.ne	41b188 <_obstack_memory_used@@Base+0x7a88>  // b.any
  41b03c:	cmp	x1, x26
  41b040:	b.ge	41b138 <_obstack_memory_used@@Base+0x7a38>  // b.tcont
  41b044:	ldr	x0, [sp, #128]
  41b048:	ldrb	w0, [x0, x1]
  41b04c:	ldr	x1, [sp, #104]
  41b050:	cbz	x1, 41b058 <_obstack_memory_used@@Base+0x7958>
  41b054:	ldrb	w0, [x1, x0]
  41b058:	ldrb	w0, [x25, x0]
  41b05c:	cbnz	w0, 41b188 <_obstack_memory_used@@Base+0x7a88>
  41b060:	mov	w19, #0x1                   	// #1
  41b064:	ldr	x0, [sp, #520]
  41b068:	bl	4027a0 <free@plt>
  41b06c:	ldr	x0, [x22, #152]
  41b070:	cbz	x0, 41b08c <_obstack_memory_used@@Base+0x798c>
  41b074:	add	x0, sp, #0x150
  41b078:	bl	414d54 <_obstack_memory_used@@Base+0x1654>
  41b07c:	ldr	x0, [sp, #584]
  41b080:	bl	4027a0 <free@plt>
  41b084:	ldr	x0, [sp, #552]
  41b088:	bl	4027a0 <free@plt>
  41b08c:	add	x0, sp, #0x150
  41b090:	bl	414bac <_obstack_memory_used@@Base+0x14ac>
  41b094:	mov	w0, w19
  41b098:	ldp	x29, x30, [sp]
  41b09c:	ldp	x19, x20, [sp, #16]
  41b0a0:	ldp	x21, x22, [sp, #32]
  41b0a4:	ldp	x23, x24, [sp, #48]
  41b0a8:	ldp	x25, x26, [sp, #64]
  41b0ac:	ldp	x27, x28, [sp, #80]
  41b0b0:	add	sp, sp, #0x250
  41b0b4:	ret
  41b0b8:	mov	w1, #0x0                   	// #0
  41b0bc:	ldr	x3, [sp, #120]
  41b0c0:	mov	x2, x0
  41b0c4:	cmp	x3, x0
  41b0c8:	b.le	41b024 <_obstack_memory_used@@Base+0x7924>
  41b0cc:	ldr	x3, [sp, #128]
  41b0d0:	ldrb	w3, [x3, x0]
  41b0d4:	add	x0, x0, #0x1
  41b0d8:	ldrb	w3, [x25, x3]
  41b0dc:	cbnz	w3, 41b12c <_obstack_memory_used@@Base+0x7a2c>
  41b0e0:	mov	w1, #0x1                   	// #1
  41b0e4:	b	41b0bc <_obstack_memory_used@@Base+0x79bc>
  41b0e8:	mov	w2, #0x0                   	// #0
  41b0ec:	ldr	x1, [sp, #192]
  41b0f0:	mov	x3, x0
  41b0f4:	cmp	x0, x1
  41b0f8:	b.ge	41b140 <_obstack_memory_used@@Base+0x7a40>  // b.tcont
  41b0fc:	cbz	w2, 41b060 <_obstack_memory_used@@Base+0x7960>
  41b100:	str	x0, [sp, #272]
  41b104:	b	41b060 <_obstack_memory_used@@Base+0x7960>
  41b108:	mov	w1, #0x1                   	// #1
  41b10c:	b	41b014 <_obstack_memory_used@@Base+0x7914>
  41b110:	ldr	x3, [sp, #128]
  41b114:	ldr	x4, [sp, #104]
  41b118:	ldrb	w3, [x3, x0]
  41b11c:	add	x0, x0, #0x1
  41b120:	ldrb	w3, [x4, x3]
  41b124:	ldrb	w3, [x25, x3]
  41b128:	cbz	w3, 41b108 <_obstack_memory_used@@Base+0x7a08>
  41b12c:	cbz	w1, 41b02c <_obstack_memory_used@@Base+0x792c>
  41b130:	str	x2, [sp, #272]
  41b134:	b	41b02c <_obstack_memory_used@@Base+0x792c>
  41b138:	mov	x0, #0x0                   	// #0
  41b13c:	b	41b04c <_obstack_memory_used@@Base+0x794c>
  41b140:	cmp	x0, x26
  41b144:	b.ge	41b170 <_obstack_memory_used@@Base+0x7a70>  // b.tcont
  41b148:	ldr	x1, [sp, #128]
  41b14c:	ldrb	w1, [x1, x0]
  41b150:	ldr	x4, [sp, #104]
  41b154:	cbz	x4, 41b15c <_obstack_memory_used@@Base+0x7a5c>
  41b158:	ldrb	w1, [x4, x1]
  41b15c:	ldrb	w1, [x25, x1]
  41b160:	sub	x0, x0, #0x1
  41b164:	cbnz	w1, 41b180 <_obstack_memory_used@@Base+0x7a80>
  41b168:	mov	w2, #0x1                   	// #1
  41b16c:	b	41b0ec <_obstack_memory_used@@Base+0x79ec>
  41b170:	mov	x1, #0x0                   	// #0
  41b174:	b	41b150 <_obstack_memory_used@@Base+0x7a50>
  41b178:	mov	w0, #0x0                   	// #0
  41b17c:	b	41afc8 <_obstack_memory_used@@Base+0x78c8>
  41b180:	cbz	w2, 41b188 <_obstack_memory_used@@Base+0x7a88>
  41b184:	str	x3, [sp, #272]
  41b188:	ldr	w2, [sp, #184]
  41b18c:	add	x0, sp, #0x150
  41b190:	ldr	x1, [sp, #272]
  41b194:	bl	41859c <_obstack_memory_used@@Base+0x4e9c>
  41b198:	mov	w19, w0
  41b19c:	cbnz	w0, 41b064 <_obstack_memory_used@@Base+0x7964>
  41b1a0:	ldr	w0, [sp, #216]
  41b1a4:	cmp	w0, #0x1
  41b1a8:	b.eq	41b1c4 <_obstack_memory_used@@Base+0x7ac4>  // b.none
  41b1ac:	ldr	x0, [sp, #384]
  41b1b0:	cbz	x0, 41b1c4 <_obstack_memory_used@@Base+0x7ac4>
  41b1b4:	ldr	x0, [sp, #352]
  41b1b8:	ldr	w0, [x0]
  41b1bc:	cmn	w0, #0x1
  41b1c0:	b.eq	41b254 <_obstack_memory_used@@Base+0x7b54>  // b.none
  41b1c4:	ldr	x27, [sp, #488]
  41b1c8:	str	wzr, [sp, #264]
  41b1cc:	ldr	x20, [sp, #408]
  41b1d0:	ldr	x21, [x27, #72]
  41b1d4:	ldrsb	w0, [x21, #104]
  41b1d8:	str	xzr, [sp, #528]
  41b1dc:	str	xzr, [sp, #536]
  41b1e0:	str	wzr, [sp, #560]
  41b1e4:	tbz	w0, #31, 41b208 <_obstack_memory_used@@Base+0x7b08>
  41b1e8:	ldr	w2, [sp, #496]
  41b1ec:	sub	x1, x20, #0x1
  41b1f0:	add	x0, sp, #0x150
  41b1f4:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41b1f8:	mov	w3, w0
  41b1fc:	tbz	w3, #0, 41b268 <_obstack_memory_used@@Base+0x7b68>
  41b200:	ldr	x21, [x27, #80]
  41b204:	cbz	x21, 41ae8c <_obstack_memory_used@@Base+0x778c>
  41b208:	ldr	x0, [sp, #520]
  41b20c:	cbz	x0, 41b30c <_obstack_memory_used@@Base+0x7c0c>
  41b210:	str	x21, [x0, x20, lsl #3]
  41b214:	ldr	x0, [x27, #152]
  41b218:	ldr	w1, [sp, #236]
  41b21c:	str	w1, [sp, #144]
  41b220:	cbz	x0, 41b2b4 <_obstack_memory_used@@Base+0x7bb4>
  41b224:	add	x27, x21, #0x8
  41b228:	add	x0, sp, #0x150
  41b22c:	mov	x1, x27
  41b230:	mov	x2, #0x0                   	// #0
  41b234:	bl	414f38 <_obstack_memory_used@@Base+0x1838>
  41b238:	str	w0, [sp, #264]
  41b23c:	cbz	w0, 41b2a8 <_obstack_memory_used@@Base+0x7ba8>
  41b240:	sxtw	x20, w0
  41b244:	cmn	x20, #0x1
  41b248:	b.ne	41b6f8 <_obstack_memory_used@@Base+0x7ff8>  // b.any
  41b24c:	add	x0, sp, #0x150
  41b250:	bl	414d54 <_obstack_memory_used@@Base+0x1654>
  41b254:	ldr	x0, [sp, #272]
  41b258:	ldr	w1, [sp, #220]
  41b25c:	add	x0, x0, w1, sxtw
  41b260:	str	x0, [sp, #272]
  41b264:	b	41af48 <_obstack_memory_used@@Base+0x7848>
  41b268:	cbz	w0, 41b208 <_obstack_memory_used@@Base+0x7b08>
  41b26c:	and	w0, w0, #0x6
  41b270:	cmp	w0, #0x6
  41b274:	b.ne	41b280 <_obstack_memory_used@@Base+0x7b80>  // b.any
  41b278:	ldr	x21, [x27, #96]
  41b27c:	b	41b204 <_obstack_memory_used@@Base+0x7b04>
  41b280:	tbz	w3, #1, 41b28c <_obstack_memory_used@@Base+0x7b8c>
  41b284:	ldr	x21, [x27, #88]
  41b288:	b	41b204 <_obstack_memory_used@@Base+0x7b04>
  41b28c:	tbz	w3, #2, 41b208 <_obstack_memory_used@@Base+0x7b08>
  41b290:	ldr	x2, [x21, #80]
  41b294:	mov	x1, x27
  41b298:	add	x0, sp, #0x108
  41b29c:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41b2a0:	mov	x21, x0
  41b2a4:	b	41b204 <_obstack_memory_used@@Base+0x7b04>
  41b2a8:	ldrb	w0, [x21, #104]
  41b2ac:	tbnz	w0, #6, 41b2f4 <_obstack_memory_used@@Base+0x7bf4>
  41b2b0:	str	wzr, [sp, #144]
  41b2b4:	ldrb	w0, [x21, #104]
  41b2b8:	tbz	w0, #4, 41b5b8 <_obstack_memory_used@@Base+0x7eb8>
  41b2bc:	ldrsb	w0, [x21, #104]
  41b2c0:	tbz	w0, #31, 41b2dc <_obstack_memory_used@@Base+0x7bdc>
  41b2c4:	mov	x2, x20
  41b2c8:	mov	x1, x21
  41b2cc:	add	x0, sp, #0x150
  41b2d0:	bl	4184fc <_obstack_memory_used@@Base+0x4dfc>
  41b2d4:	str	x0, [sp, #136]
  41b2d8:	cbz	x0, 41b6f0 <_obstack_memory_used@@Base+0x7ff0>
  41b2dc:	ldr	w0, [sp, #164]
  41b2e0:	cbz	w0, 41b244 <_obstack_memory_used@@Base+0x7b44>
  41b2e4:	mov	x1, #0x1                   	// #1
  41b2e8:	mov	x0, x20
  41b2ec:	str	x1, [sp, #136]
  41b2f0:	b	41b5c0 <_obstack_memory_used@@Base+0x7ec0>
  41b2f4:	mov	x1, x27
  41b2f8:	add	x0, sp, #0x150
  41b2fc:	bl	419d40 <_obstack_memory_used@@Base+0x6640>
  41b300:	str	w0, [sp, #264]
  41b304:	cbz	w0, 41b2b0 <_obstack_memory_used@@Base+0x7bb0>
  41b308:	b	41b240 <_obstack_memory_used@@Base+0x7b40>
  41b30c:	ldr	w0, [sp, #236]
  41b310:	str	w0, [sp, #144]
  41b314:	b	41b2b4 <_obstack_memory_used@@Base+0x7bb4>
  41b318:	ldr	x27, [sp, #488]
  41b31c:	str	xzr, [sp, #176]
  41b320:	ldr	x0, [x21, #16]
  41b324:	ldr	x1, [sp, #176]
  41b328:	cmp	x1, x0
  41b32c:	b.lt	41b338 <_obstack_memory_used@@Base+0x7c38>  // b.tstop
  41b330:	mov	w0, #0x0                   	// #0
  41b334:	b	41b4ac <_obstack_memory_used@@Base+0x7dac>
  41b338:	ldr	x0, [x21, #24]
  41b33c:	ldr	x1, [sp, #176]
  41b340:	ldr	x28, [x0, x1, lsl #3]
  41b344:	ldr	x0, [x27]
  41b348:	add	x0, x0, x28, lsl #4
  41b34c:	ldrb	w1, [x0, #10]
  41b350:	tbz	w1, #4, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b354:	ldr	w4, [x0, #8]
  41b358:	str	w4, [sp, #248]
  41b35c:	tst	w4, #0x3ff00
  41b360:	ldr	x3, [sp, #408]
  41b364:	b.eq	41b3a8 <_obstack_memory_used@@Base+0x7ca8>  // b.none
  41b368:	ldr	w2, [sp, #496]
  41b36c:	mov	x1, x3
  41b370:	add	x0, sp, #0x150
  41b374:	str	x3, [sp, #240]
  41b378:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41b37c:	ldr	w4, [sp, #248]
  41b380:	ldr	x3, [sp, #240]
  41b384:	ubfx	x2, x4, #8, #10
  41b388:	tbz	w4, #10, 41b390 <_obstack_memory_used@@Base+0x7c90>
  41b38c:	tbz	w0, #0, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b390:	tbz	w2, #3, 41b398 <_obstack_memory_used@@Base+0x7c98>
  41b394:	tbnz	w0, #0, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b398:	tbz	w2, #5, 41b3a0 <_obstack_memory_used@@Base+0x7ca0>
  41b39c:	tbz	w0, #1, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b3a0:	tbz	w2, #7, 41b3a8 <_obstack_memory_used@@Base+0x7ca8>
  41b3a4:	tbz	w0, #3, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b3a8:	add	x2, sp, #0x150
  41b3ac:	mov	x1, x28
  41b3b0:	mov	x0, x27
  41b3b4:	bl	415a74 <_obstack_memory_used@@Base+0x2374>
  41b3b8:	cbz	w0, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b3bc:	ldr	x3, [sp, #408]
  41b3c0:	ldr	w1, [sp, #560]
  41b3c4:	add	x3, x3, w0, sxtw
  41b3c8:	cmp	w1, w0
  41b3cc:	csel	w0, w1, w0, ge  // ge = tcont
  41b3d0:	mov	x1, x3
  41b3d4:	str	x3, [sp, #240]
  41b3d8:	str	w0, [sp, #560]
  41b3dc:	add	x0, sp, #0x150
  41b3e0:	bl	4147e4 <_obstack_memory_used@@Base+0x10e4>
  41b3e4:	str	w0, [sp, #268]
  41b3e8:	cbnz	w0, 41b4ac <_obstack_memory_used@@Base+0x7dac>
  41b3ec:	ldr	x0, [x27, #24]
  41b3f0:	mov	x1, #0x18                  	// #24
  41b3f4:	ldr	x3, [sp, #240]
  41b3f8:	ldr	x2, [x0, x28, lsl #3]
  41b3fc:	ldr	x0, [x27, #48]
  41b400:	lsl	x28, x3, #3
  41b404:	madd	x2, x2, x1, x0
  41b408:	ldr	x0, [sp, #520]
  41b40c:	ldr	x4, [x0, x28]
  41b410:	cbnz	x4, 41b490 <_obstack_memory_used@@Base+0x7d90>
  41b414:	add	x5, sp, #0x200
  41b418:	ldp	x0, x1, [x2]
  41b41c:	stp	x0, x1, [x5, #-232]
  41b420:	ldr	x0, [x2, #16]
  41b424:	str	x0, [sp, #296]
  41b428:	ldr	w2, [sp, #496]
  41b42c:	sub	x1, x3, #0x1
  41b430:	add	x0, sp, #0x150
  41b434:	str	x4, [sp, #248]
  41b438:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41b43c:	mov	w3, w0
  41b440:	ldr	x5, [sp, #520]
  41b444:	add	x2, sp, #0x118
  41b448:	mov	x1, x27
  41b44c:	add	x0, sp, #0x10c
  41b450:	str	x5, [sp, #240]
  41b454:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41b458:	ldp	x5, x4, [sp, #240]
  41b45c:	str	x0, [x5, x28]
  41b460:	cbz	x4, 41b46c <_obstack_memory_used@@Base+0x7d6c>
  41b464:	ldr	x0, [sp, #296]
  41b468:	bl	4027a0 <free@plt>
  41b46c:	ldr	x0, [sp, #520]
  41b470:	ldr	x0, [x0, x28]
  41b474:	cbnz	x0, 41b480 <_obstack_memory_used@@Base+0x7d80>
  41b478:	ldr	w0, [sp, #268]
  41b47c:	cbnz	w0, 41b4ac <_obstack_memory_used@@Base+0x7dac>
  41b480:	ldr	x0, [sp, #176]
  41b484:	add	x0, x0, #0x1
  41b488:	str	x0, [sp, #176]
  41b48c:	b	41b320 <_obstack_memory_used@@Base+0x7c20>
  41b490:	ldr	x1, [x4, #80]
  41b494:	add	x0, sp, #0x118
  41b498:	stp	x4, x3, [sp, #240]
  41b49c:	bl	416be8 <_obstack_memory_used@@Base+0x34e8>
  41b4a0:	str	w0, [sp, #268]
  41b4a4:	ldp	x4, x3, [sp, #240]
  41b4a8:	cbz	w0, 41b428 <_obstack_memory_used@@Base+0x7d28>
  41b4ac:	str	w0, [sp, #264]
  41b4b0:	cbz	w0, 41b640 <_obstack_memory_used@@Base+0x7f40>
  41b4b4:	mov	x27, #0x0                   	// #0
  41b4b8:	b	41b664 <_obstack_memory_used@@Base+0x7f64>
  41b4bc:	ldr	x27, [x21, #96]
  41b4c0:	cbz	x27, 41b4f8 <_obstack_memory_used@@Base+0x7df8>
  41b4c4:	ldr	w2, [sp, #496]
  41b4c8:	add	x0, sp, #0x150
  41b4cc:	ldr	x1, [sp, #408]
  41b4d0:	sub	x1, x1, #0x1
  41b4d4:	bl	41841c <_obstack_memory_used@@Base+0x4d1c>
  41b4d8:	and	x1, x28, #0xff
  41b4dc:	tbz	w0, #0, 41b4ec <_obstack_memory_used@@Base+0x7dec>
  41b4e0:	add	x1, x1, #0x100
  41b4e4:	ldr	x27, [x27, x1, lsl #3]
  41b4e8:	b	41b664 <_obstack_memory_used@@Base+0x7f64>
  41b4ec:	ubfiz	x28, x28, #3, #8
  41b4f0:	ldr	x27, [x27, x28]
  41b4f4:	b	41b664 <_obstack_memory_used@@Base+0x7f64>
  41b4f8:	ldr	x0, [sp, #488]
  41b4fc:	mov	x1, x21
  41b500:	bl	417c0c <_obstack_memory_used@@Base+0x450c>
  41b504:	tst	w0, #0xff
  41b508:	b.ne	41b654 <_obstack_memory_used@@Base+0x7f54>  // b.any
  41b50c:	mov	w0, #0xc                   	// #12
  41b510:	str	w0, [sp, #264]
  41b514:	b	41b664 <_obstack_memory_used@@Base+0x7f64>
  41b518:	ldr	x2, [x3, x0, lsl #3]
  41b51c:	mov	w1, #0x1                   	// #1
  41b520:	cbz	x2, 41b6b8 <_obstack_memory_used@@Base+0x7fb8>
  41b524:	add	x1, sp, #0x150
  41b528:	mov	x2, #0x0                   	// #0
  41b52c:	str	x0, [sp, #408]
  41b530:	add	x0, sp, #0x108
  41b534:	bl	41a2e4 <_obstack_memory_used@@Base+0x6be4>
  41b538:	mov	x27, x0
  41b53c:	ldr	w0, [sp, #264]
  41b540:	cbnz	w0, 41b5b0 <_obstack_memory_used@@Base+0x7eb0>
  41b544:	cbz	x27, 41b6a8 <_obstack_memory_used@@Base+0x7fa8>
  41b548:	ldr	w0, [sp, #144]
  41b54c:	cbz	w0, 41b56c <_obstack_memory_used@@Base+0x7e6c>
  41b550:	cmp	x21, x27
  41b554:	csel	w0, w0, wzr, eq  // eq = none
  41b558:	str	w0, [sp, #144]
  41b55c:	ldr	x0, [sp, #168]
  41b560:	ldr	x1, [sp, #200]
  41b564:	csel	x0, x0, x1, eq  // eq = none
  41b568:	str	x0, [sp, #200]
  41b56c:	ldrb	w0, [x27, #104]
  41b570:	tbz	w0, #4, 41b5a8 <_obstack_memory_used@@Base+0x7ea8>
  41b574:	ldr	x21, [sp, #408]
  41b578:	tbz	w0, #7, 41b590 <_obstack_memory_used@@Base+0x7e90>
  41b57c:	mov	x2, x21
  41b580:	mov	x1, x27
  41b584:	add	x0, sp, #0x150
  41b588:	bl	4184fc <_obstack_memory_used@@Base+0x4dfc>
  41b58c:	cbz	x0, 41b5a8 <_obstack_memory_used@@Base+0x7ea8>
  41b590:	ldr	w0, [sp, #164]
  41b594:	mov	x20, x21
  41b598:	cbz	w0, 41b244 <_obstack_memory_used@@Base+0x7b44>
  41b59c:	mov	x0, #0x1                   	// #1
  41b5a0:	str	x0, [sp, #136]
  41b5a4:	str	xzr, [sp, #152]
  41b5a8:	mov	x21, x27
  41b5ac:	b	41b5d0 <_obstack_memory_used@@Base+0x7ed0>
  41b5b0:	cbnz	x27, 41b548 <_obstack_memory_used@@Base+0x7e48>
  41b5b4:	b	41b6d0 <_obstack_memory_used@@Base+0x7fd0>
  41b5b8:	mov	x0, #0xffffffffffffffff    	// #-1
  41b5bc:	str	xzr, [sp, #136]
  41b5c0:	str	x20, [sp, #200]
  41b5c4:	mov	x20, x0
  41b5c8:	ldr	x0, [sp, #224]
  41b5cc:	str	x0, [sp, #152]
  41b5d0:	ldr	x0, [sp, #408]
  41b5d4:	ldr	x1, [sp, #440]
  41b5d8:	cmp	x0, x1
  41b5dc:	b.ge	41b6d0 <_obstack_memory_used@@Base+0x7fd0>  // b.tcont
  41b5e0:	add	x0, x0, #0x1
  41b5e4:	str	x0, [sp, #168]
  41b5e8:	ldr	x0, [sp, #400]
  41b5ec:	ldr	x1, [sp, #168]
  41b5f0:	cmp	x1, x0
  41b5f4:	b.lt	41b604 <_obstack_memory_used@@Base+0x7f04>  // b.tstop
  41b5f8:	ldr	x1, [sp, #424]
  41b5fc:	cmp	x0, x1
  41b600:	b.lt	41b620 <_obstack_memory_used@@Base+0x7f20>  // b.tstop
  41b604:	ldr	x1, [sp, #168]
  41b608:	ldr	x0, [sp, #384]
  41b60c:	cmp	x1, x0
  41b610:	b.lt	41b638 <_obstack_memory_used@@Base+0x7f38>  // b.tstop
  41b614:	ldr	x1, [sp, #424]
  41b618:	cmp	x0, x1
  41b61c:	b.ge	41b638 <_obstack_memory_used@@Base+0x7f38>  // b.tcont
  41b620:	ldr	w0, [sp, #168]
  41b624:	add	w1, w0, #0x1
  41b628:	add	x0, sp, #0x150
  41b62c:	bl	414718 <_obstack_memory_used@@Base+0x1018>
  41b630:	str	w0, [sp, #264]
  41b634:	cbnz	w0, 41ae8c <_obstack_memory_used@@Base+0x778c>
  41b638:	ldrb	w0, [x21, #104]
  41b63c:	tbnz	w0, #5, 41b318 <_obstack_memory_used@@Base+0x7c18>
  41b640:	ldr	x0, [sp, #408]
  41b644:	add	x1, x0, #0x1
  41b648:	str	x1, [sp, #408]
  41b64c:	ldr	x1, [sp, #344]
  41b650:	ldrb	w28, [x1, x0]
  41b654:	ldr	x0, [x21, #88]
  41b658:	cbz	x0, 41b4bc <_obstack_memory_used@@Base+0x7dbc>
  41b65c:	ubfiz	x28, x28, #3, #8
  41b660:	ldr	x27, [x0, x28]
  41b664:	ldr	x0, [sp, #520]
  41b668:	cbz	x0, 41b680 <_obstack_memory_used@@Base+0x7f80>
  41b66c:	mov	x2, x27
  41b670:	add	x1, sp, #0x150
  41b674:	add	x0, sp, #0x108
  41b678:	bl	41a2e4 <_obstack_memory_used@@Base+0x6be4>
  41b67c:	mov	x27, x0
  41b680:	cbnz	x27, 41b548 <_obstack_memory_used@@Base+0x7e48>
  41b684:	ldr	w1, [sp, #264]
  41b688:	ldr	x0, [sp, #520]
  41b68c:	cbnz	w1, 41ae8c <_obstack_memory_used@@Base+0x778c>
  41b690:	cbz	x0, 41b6d0 <_obstack_memory_used@@Base+0x7fd0>
  41b694:	ldr	w0, [sp, #164]
  41b698:	ldr	w1, [sp, #136]
  41b69c:	eor	w0, w0, #0x1
  41b6a0:	tst	w0, w1
  41b6a4:	b.ne	41b6d0 <_obstack_memory_used@@Base+0x7fd0>  // b.any
  41b6a8:	ldr	x0, [sp, #408]
  41b6ac:	mov	w1, #0x0                   	// #0
  41b6b0:	ldr	x3, [sp, #520]
  41b6b4:	ldr	x4, [sp, #528]
  41b6b8:	mov	x2, x0
  41b6bc:	add	x0, x0, #0x1
  41b6c0:	cmp	x4, x0
  41b6c4:	b.ge	41b518 <_obstack_memory_used@@Base+0x7e18>  // b.tcont
  41b6c8:	cbz	w1, 41b6d0 <_obstack_memory_used@@Base+0x7fd0>
  41b6cc:	str	x2, [sp, #408]
  41b6d0:	ldr	x0, [sp, #152]
  41b6d4:	cbz	x0, 41b244 <_obstack_memory_used@@Base+0x7b44>
  41b6d8:	ldr	x0, [x0]
  41b6dc:	ldr	x1, [sp, #200]
  41b6e0:	add	x0, x0, x1
  41b6e4:	ldr	x1, [sp, #152]
  41b6e8:	str	x0, [x1]
  41b6ec:	b	41b244 <_obstack_memory_used@@Base+0x7b44>
  41b6f0:	mov	x0, #0xffffffffffffffff    	// #-1
  41b6f4:	b	41b5c0 <_obstack_memory_used@@Base+0x7ec0>
  41b6f8:	cmn	x20, #0x2
  41b6fc:	b.eq	41ae8c <_obstack_memory_used@@Base+0x778c>  // b.none
  41b700:	ldrb	w0, [x24, #56]
  41b704:	str	x20, [sp, #504]
  41b708:	and	w21, w0, #0x10
  41b70c:	tbnz	w0, #4, 41b718 <_obstack_memory_used@@Base+0x8018>
  41b710:	cmp	x23, #0x1
  41b714:	b.hi	41b720 <_obstack_memory_used@@Base+0x8020>  // b.pmore
  41b718:	ldr	x0, [x22, #152]
  41b71c:	cbz	x0, 41ba8c <_obstack_memory_used@@Base+0x838c>
  41b720:	ldr	x0, [sp, #520]
  41b724:	mov	x2, x20
  41b728:	ldr	x1, [x0, x20, lsl #3]
  41b72c:	add	x0, sp, #0x150
  41b730:	bl	4184fc <_obstack_memory_used@@Base+0x4dfc>
  41b734:	str	x0, [sp, #512]
  41b738:	cbz	w21, 41b760 <_obstack_memory_used@@Base+0x8060>
  41b73c:	ldr	x0, [x22, #152]
  41b740:	cbnz	x0, 41b770 <_obstack_memory_used@@Base+0x8070>
  41b744:	cbz	x23, 41b064 <_obstack_memory_used@@Base+0x7964>
  41b748:	ldr	x0, [sp, #112]
  41b74c:	mov	x2, #0xffffffffffffffff    	// #-1
  41b750:	add	x20, x0, #0x10
  41b754:	mov	x0, #0x1                   	// #1
  41b758:	mov	x1, x20
  41b75c:	b	41b91c <_obstack_memory_used@@Base+0x821c>
  41b760:	cmp	x23, #0x1
  41b764:	b.ls	41b73c <_obstack_memory_used@@Base+0x803c>  // b.plast
  41b768:	ldrb	w0, [x22, #176]
  41b76c:	tbz	w0, #0, 41b73c <_obstack_memory_used@@Base+0x803c>
  41b770:	ldr	x0, [sp, #488]
  41b774:	str	x0, [sp, #144]
  41b778:	ldr	x0, [sp, #512]
  41b77c:	str	x0, [sp, #136]
  41b780:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  41b784:	cmp	x20, x0
  41b788:	b.hi	41ae8c <_obstack_memory_used@@Base+0x778c>  // b.pmore
  41b78c:	add	x1, x20, #0x1
  41b790:	lsl	x27, x1, #3
  41b794:	mov	x0, x27
  41b798:	bl	402520 <malloc@plt>
  41b79c:	mov	x21, x0
  41b7a0:	cbz	x0, 41b8fc <_obstack_memory_used@@Base+0x81fc>
  41b7a4:	ldr	x0, [sp, #144]
  41b7a8:	ldr	x0, [x0, #152]
  41b7ac:	cbz	x0, 41b87c <_obstack_memory_used@@Base+0x817c>
  41b7b0:	mov	x0, x27
  41b7b4:	bl	402520 <malloc@plt>
  41b7b8:	mov	x27, x0
  41b7bc:	cbz	x0, 41b900 <_obstack_memory_used@@Base+0x8200>
  41b7c0:	add	x3, x20, #0x1
  41b7c4:	mov	w1, #0x0                   	// #0
  41b7c8:	mov	x0, x27
  41b7cc:	str	x3, [sp, #152]
  41b7d0:	lsl	x2, x3, #3
  41b7d4:	bl	4025f0 <memset@plt>
  41b7d8:	stp	x21, x27, [sp, #280]
  41b7dc:	add	x1, sp, #0x118
  41b7e0:	ldr	x0, [sp, #136]
  41b7e4:	stp	x0, x20, [sp, #296]
  41b7e8:	add	x0, sp, #0x200
  41b7ec:	stp	xzr, xzr, [x0, #-200]
  41b7f0:	add	x0, sp, #0x150
  41b7f4:	str	xzr, [sp, #328]
  41b7f8:	bl	41a9b0 <_obstack_memory_used@@Base+0x72b0>
  41b7fc:	mov	w28, w0
  41b800:	ldr	x0, [sp, #328]
  41b804:	bl	4027a0 <free@plt>
  41b808:	cbnz	w28, 41b8d8 <_obstack_memory_used@@Base+0x81d8>
  41b80c:	ldr	x0, [x21]
  41b810:	ldr	x3, [sp, #152]
  41b814:	cbnz	x0, 41b854 <_obstack_memory_used@@Base+0x8154>
  41b818:	ldr	x0, [x27]
  41b81c:	cbnz	x0, 41b854 <_obstack_memory_used@@Base+0x8154>
  41b820:	ldr	x2, [sp, #520]
  41b824:	sub	x20, x20, #0x1
  41b828:	cmn	x20, #0x1
  41b82c:	b.eq	41b908 <_obstack_memory_used@@Base+0x8208>  // b.none
  41b830:	ldr	x1, [x2, x20, lsl #3]
  41b834:	cbz	x1, 41b824 <_obstack_memory_used@@Base+0x8124>
  41b838:	ldrb	w0, [x1, #104]
  41b83c:	tbz	w0, #4, 41b824 <_obstack_memory_used@@Base+0x8124>
  41b840:	mov	x2, x20
  41b844:	add	x0, sp, #0x150
  41b848:	bl	4184fc <_obstack_memory_used@@Base+0x4dfc>
  41b84c:	str	x0, [sp, #136]
  41b850:	b	41b7c0 <_obstack_memory_used@@Base+0x80c0>
  41b854:	ldr	x0, [sp, #144]
  41b858:	mov	x2, x27
  41b85c:	mov	x1, x21
  41b860:	bl	4194b0 <_obstack_memory_used@@Base+0x5db0>
  41b864:	mov	w28, w0
  41b868:	mov	x0, x27
  41b86c:	bl	4027a0 <free@plt>
  41b870:	cbz	w28, 41b8b8 <_obstack_memory_used@@Base+0x81b8>
  41b874:	mov	x27, #0x0                   	// #0
  41b878:	b	41b8d8 <_obstack_memory_used@@Base+0x81d8>
  41b87c:	ldr	x0, [sp, #136]
  41b880:	stp	x0, x20, [sp, #296]
  41b884:	add	x0, sp, #0x200
  41b888:	stp	x21, xzr, [sp, #280]
  41b88c:	add	x1, sp, #0x118
  41b890:	stp	xzr, xzr, [x0, #-200]
  41b894:	add	x0, sp, #0x150
  41b898:	str	xzr, [sp, #328]
  41b89c:	bl	41a9b0 <_obstack_memory_used@@Base+0x72b0>
  41b8a0:	mov	w28, w0
  41b8a4:	ldr	x0, [sp, #328]
  41b8a8:	bl	4027a0 <free@plt>
  41b8ac:	cbnz	w28, 41b874 <_obstack_memory_used@@Base+0x8174>
  41b8b0:	ldr	x27, [x21]
  41b8b4:	cbz	x27, 41b908 <_obstack_memory_used@@Base+0x8208>
  41b8b8:	ldr	x0, [sp, #520]
  41b8bc:	mov	w28, #0x0                   	// #0
  41b8c0:	mov	x27, #0x0                   	// #0
  41b8c4:	bl	4027a0 <free@plt>
  41b8c8:	str	x21, [sp, #520]
  41b8cc:	ldr	x0, [sp, #136]
  41b8d0:	mov	x21, #0x0                   	// #0
  41b8d4:	stp	x20, x0, [sp, #504]
  41b8d8:	mov	x0, x21
  41b8dc:	bl	4027a0 <free@plt>
  41b8e0:	mov	x0, x27
  41b8e4:	bl	4027a0 <free@plt>
  41b8e8:	cbz	w28, 41b744 <_obstack_memory_used@@Base+0x8044>
  41b8ec:	cmp	w28, #0x1
  41b8f0:	b.eq	41b24c <_obstack_memory_used@@Base+0x7b4c>  // b.none
  41b8f4:	mov	w19, w28
  41b8f8:	b	41b064 <_obstack_memory_used@@Base+0x7964>
  41b8fc:	mov	x27, #0x0                   	// #0
  41b900:	mov	w28, #0xc                   	// #12
  41b904:	b	41b8d8 <_obstack_memory_used@@Base+0x81d8>
  41b908:	mov	w28, #0x1                   	// #1
  41b90c:	b	41b8d8 <_obstack_memory_used@@Base+0x81d8>
  41b910:	add	x0, x0, #0x1
  41b914:	str	x2, [x1, #8]
  41b918:	str	x2, [x1], #16
  41b91c:	cmp	x0, x23
  41b920:	b.ne	41b910 <_obstack_memory_used@@Base+0x8210>  // b.any
  41b924:	ldr	x0, [sp, #112]
  41b928:	ldr	x1, [sp, #112]
  41b92c:	str	xzr, [x0]
  41b930:	ldr	x0, [sp, #504]
  41b934:	str	x0, [x1, #8]
  41b938:	ldrb	w0, [x24, #56]
  41b93c:	tbnz	w0, #4, 41b994 <_obstack_memory_used@@Base+0x8294>
  41b940:	cmp	x23, #0x1
  41b944:	b.eq	41b994 <_obstack_memory_used@@Base+0x8294>  // b.none
  41b948:	ldrb	w0, [x22, #176]
  41b94c:	tbz	w0, #0, 41b97c <_obstack_memory_used@@Base+0x827c>
  41b950:	ldr	x0, [x22, #152]
  41b954:	cmp	x0, #0x0
  41b958:	cset	w4, gt
  41b95c:	ldr	x3, [sp, #112]
  41b960:	mov	x2, x23
  41b964:	add	x1, sp, #0x150
  41b968:	mov	x0, x24
  41b96c:	bl	418da4 <_obstack_memory_used@@Base+0x56a4>
  41b970:	cbz	w0, 41b994 <_obstack_memory_used@@Base+0x8294>
  41b974:	mov	w19, w0
  41b978:	b	41b064 <_obstack_memory_used@@Base+0x7964>
  41b97c:	mov	w4, #0x0                   	// #0
  41b980:	b	41b95c <_obstack_memory_used@@Base+0x825c>
  41b984:	mov	x2, x4
  41b988:	b	41b9c8 <_obstack_memory_used@@Base+0x82c8>
  41b98c:	mov	x2, x4
  41b990:	b	41b9dc <_obstack_memory_used@@Base+0x82dc>
  41b994:	ldp	x6, x4, [sp, #384]
  41b998:	mov	x1, #0x0                   	// #0
  41b99c:	ldrb	w7, [sp, #476]
  41b9a0:	ldr	x0, [sp, #112]
  41b9a4:	ldr	x3, [sp, #272]
  41b9a8:	ldr	x5, [sp, #360]
  41b9ac:	ldr	x2, [x0]
  41b9b0:	cmn	x2, #0x1
  41b9b4:	b.eq	41b9f8 <_obstack_memory_used@@Base+0x82f8>  // b.none
  41b9b8:	cbz	w7, 41b9e0 <_obstack_memory_used@@Base+0x82e0>
  41b9bc:	cmp	x2, x6
  41b9c0:	b.eq	41b984 <_obstack_memory_used@@Base+0x8284>  // b.none
  41b9c4:	ldr	x2, [x5, x2, lsl #3]
  41b9c8:	str	x2, [x0]
  41b9cc:	ldr	x2, [x0, #8]
  41b9d0:	cmp	x6, x2
  41b9d4:	b.eq	41b98c <_obstack_memory_used@@Base+0x828c>  // b.none
  41b9d8:	ldr	x2, [x5, x2, lsl #3]
  41b9dc:	str	x2, [x0, #8]
  41b9e0:	ldr	x2, [x0]
  41b9e4:	add	x2, x2, x3
  41b9e8:	str	x2, [x0]
  41b9ec:	ldr	x2, [x0, #8]
  41b9f0:	add	x2, x2, x3
  41b9f4:	str	x2, [x0, #8]
  41b9f8:	add	x1, x1, #0x1
  41b9fc:	add	x0, x0, #0x10
  41ba00:	cmp	x23, x1
  41ba04:	b.ne	41b9ac <_obstack_memory_used@@Base+0x82ac>  // b.any
  41ba08:	ldr	x0, [sp, #112]
  41ba0c:	mov	x1, #0x0                   	// #0
  41ba10:	mov	x2, #0xffffffffffffffff    	// #-1
  41ba14:	add	x0, x0, x23, lsl #4
  41ba18:	ldr	x3, [sp, #208]
  41ba1c:	cmp	x1, x3
  41ba20:	b.lt	41ba74 <_obstack_memory_used@@Base+0x8374>  // b.tstop
  41ba24:	ldr	x2, [x22, #224]
  41ba28:	cbz	x2, 41b064 <_obstack_memory_used@@Base+0x7964>
  41ba2c:	sub	x23, x23, #0x1
  41ba30:	mov	x0, #0x0                   	// #0
  41ba34:	cmp	x0, x23
  41ba38:	b.eq	41b064 <_obstack_memory_used@@Base+0x7964>  // b.none
  41ba3c:	ldr	x1, [x2, x0, lsl #3]
  41ba40:	cmp	x1, x0
  41ba44:	b.eq	41ba68 <_obstack_memory_used@@Base+0x8368>  // b.none
  41ba48:	ldr	x3, [sp, #112]
  41ba4c:	add	x1, x3, x1, lsl #4
  41ba50:	ldr	x1, [x1, #16]
  41ba54:	str	x1, [x20]
  41ba58:	ldr	x1, [x2, x0, lsl #3]
  41ba5c:	add	x1, x3, x1, lsl #4
  41ba60:	ldr	x1, [x1, #24]
  41ba64:	str	x1, [x20, #8]
  41ba68:	add	x0, x0, #0x1
  41ba6c:	add	x20, x20, #0x10
  41ba70:	b	41ba34 <_obstack_memory_used@@Base+0x8334>
  41ba74:	add	x1, x1, #0x1
  41ba78:	stp	x2, x2, [x0]
  41ba7c:	add	x0, x0, #0x10
  41ba80:	b	41ba18 <_obstack_memory_used@@Base+0x8318>
  41ba84:	mov	w19, #0x1                   	// #1
  41ba88:	b	41b094 <_obstack_memory_used@@Base+0x7994>
  41ba8c:	cbnz	w21, 41b744 <_obstack_memory_used@@Base+0x8044>
  41ba90:	cmp	x23, #0x1
  41ba94:	b.hi	41b768 <_obstack_memory_used@@Base+0x8068>  // b.pmore
  41ba98:	b	41b744 <_obstack_memory_used@@Base+0x8044>
  41ba9c:	stp	x29, x30, [sp, #-288]!
  41baa0:	mov	x29, sp
  41baa4:	stp	x19, x20, [sp, #16]
  41baa8:	mov	x19, x2
  41baac:	stp	x21, x22, [sp, #32]
  41bab0:	mov	x21, x0
  41bab4:	mov	x22, x5
  41bab8:	stp	x23, x24, [sp, #48]
  41babc:	mov	x23, x3
  41bac0:	mov	x24, x1
  41bac4:	stp	x25, x26, [sp, #64]
  41bac8:	adrp	x25, 421000 <_obstack_memory_used@@Base+0xd900>
  41bacc:	mov	x26, x4
  41bad0:	add	x25, x25, #0xe0
  41bad4:	stp	x27, x28, [sp, #80]
  41bad8:	and	x27, x3, #0x1000000
  41badc:	and	x28, x3, #0x20
  41bae0:	and	x3, x3, #0x10
  41bae4:	ldrb	w0, [x19, #8]
  41bae8:	ldr	x20, [x24]
  41baec:	sub	w1, w0, #0x1
  41baf0:	cmp	w1, #0x23
  41baf4:	b.hi	41c674 <_obstack_memory_used@@Base+0x8f74>  // b.pmore
  41baf8:	ldrh	w1, [x25, w1, uxtw #1]
  41bafc:	adr	x2, 41bb08 <_obstack_memory_used@@Base+0x8408>
  41bb00:	add	x1, x2, w1, sxth #2
  41bb04:	br	x1
  41bb08:	mov	x3, x19
  41bb0c:	mov	x0, x20
  41bb10:	mov	x2, #0x0                   	// #0
  41bb14:	mov	x1, #0x0                   	// #0
  41bb18:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41bb1c:	mov	x26, x0
  41bb20:	cbnz	x0, 41bb30 <_obstack_memory_used@@Base+0x8430>
  41bb24:	mov	w0, #0xc                   	// #12
  41bb28:	str	w0, [x22]
  41bb2c:	b	41bd28 <_obstack_memory_used@@Base+0x8628>
  41bb30:	ldr	w0, [x20, #180]
  41bb34:	cmp	w0, #0x1
  41bb38:	b.gt	41bc28 <_obstack_memory_used@@Base+0x8528>
  41bb3c:	mov	x0, x19
  41bb40:	mov	x2, x23
  41bb44:	mov	x1, x21
  41bb48:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41bb4c:	adrp	x0, 413000 <wcrtomb@plt+0x105f0>
  41bb50:	add	x0, x0, #0xa18
  41bb54:	adrp	x27, 414000 <_obstack_memory_used@@Base+0x900>
  41bb58:	str	x0, [sp, #96]
  41bb5c:	add	x0, x27, #0x8f4
  41bb60:	str	x0, [sp, #104]
  41bb64:	ldrb	w1, [x19, #8]
  41bb68:	cmp	w1, #0x12
  41bb6c:	cset	w0, eq  // eq = none
  41bb70:	cmp	w0, #0x0
  41bb74:	and	x5, x0, #0xff
  41bb78:	ccmp	w1, #0xb, #0x4, eq  // eq = none
  41bb7c:	b.eq	41bb8c <_obstack_memory_used@@Base+0x848c>  // b.none
  41bb80:	and	w0, w1, #0xfffffffb
  41bb84:	cmp	w0, #0x13
  41bb88:	b.ne	41c518 <_obstack_memory_used@@Base+0x8e18>  // b.any
  41bb8c:	cmp	w1, #0x17
  41bb90:	ldp	x24, x25, [x19]
  41bb94:	ldr	x28, [x21, #72]
  41bb98:	b.ne	41c77c <_obstack_memory_used@@Base+0x907c>  // b.any
  41bb9c:	mov	x2, x23
  41bba0:	mov	x1, x19
  41bba4:	mov	x0, x21
  41bba8:	bl	417b44 <_obstack_memory_used@@Base+0x4444>
  41bbac:	mov	x5, x0
  41bbb0:	cmn	x0, #0x1
  41bbb4:	b.ne	41c67c <_obstack_memory_used@@Base+0x8f7c>  // b.any
  41bbb8:	ldrb	w0, [x19, #8]
  41bbbc:	cmp	w0, #0x1
  41bbc0:	b.ne	41bbd0 <_obstack_memory_used@@Base+0x84d0>  // b.any
  41bbc4:	ldrb	w0, [x19]
  41bbc8:	cmp	w0, #0x2c
  41bbcc:	b.eq	41c68c <_obstack_memory_used@@Base+0x8f8c>  // b.none
  41bbd0:	mov	w0, #0xa                   	// #10
  41bbd4:	str	w0, [x22]
  41bbd8:	b	41c7bc <_obstack_memory_used@@Base+0x90bc>
  41bbdc:	mov	x2, x23
  41bbe0:	mov	x1, x21
  41bbe4:	mov	x0, x19
  41bbe8:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41bbec:	mov	x3, x19
  41bbf0:	mov	x2, #0x0                   	// #0
  41bbf4:	mov	x1, #0x0                   	// #0
  41bbf8:	mov	x0, x20
  41bbfc:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41bc00:	mov	x24, x0
  41bc04:	mov	x2, x0
  41bc08:	mov	x1, x26
  41bc0c:	mov	x0, x20
  41bc10:	mov	w3, #0x10                  	// #16
  41bc14:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41bc18:	mov	x26, x0
  41bc1c:	cmp	x24, #0x0
  41bc20:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41bc24:	b.eq	41bb24 <_obstack_memory_used@@Base+0x8424>  // b.none
  41bc28:	ldr	x0, [x21, #72]
  41bc2c:	ldr	x1, [x21, #104]
  41bc30:	cmp	x1, x0
  41bc34:	b.le	41bb3c <_obstack_memory_used@@Base+0x843c>
  41bc38:	ldr	x1, [x21, #48]
  41bc3c:	cmp	x0, x1
  41bc40:	b.eq	41bb3c <_obstack_memory_used@@Base+0x843c>  // b.none
  41bc44:	ldr	x1, [x21, #16]
  41bc48:	ldr	w0, [x1, x0, lsl #2]
  41bc4c:	cmn	w0, #0x1
  41bc50:	b.eq	41bbdc <_obstack_memory_used@@Base+0x84dc>  // b.none
  41bc54:	b	41bb3c <_obstack_memory_used@@Base+0x843c>
  41bc58:	ldr	x25, [x24, #48]
  41bc5c:	orr	x2, x23, #0x800000
  41bc60:	mov	x1, x21
  41bc64:	add	x0, x25, #0x1
  41bc68:	str	x0, [x24, #48]
  41bc6c:	mov	x0, x19
  41bc70:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41bc74:	ldrb	w0, [x19, #8]
  41bc78:	cmp	w0, #0x9
  41bc7c:	b.eq	41bcd8 <_obstack_memory_used@@Base+0x85d8>  // b.none
  41bc80:	mov	x2, x19
  41bc84:	mov	x1, x24
  41bc88:	mov	x5, x22
  41bc8c:	add	x4, x26, #0x1
  41bc90:	mov	x3, x23
  41bc94:	mov	x0, x21
  41bc98:	bl	41cb0c <_obstack_memory_used@@Base+0x940c>
  41bc9c:	mov	x1, x0
  41bca0:	ldr	w2, [x22]
  41bca4:	cbnz	w2, 41bcd0 <_obstack_memory_used@@Base+0x85d0>
  41bca8:	ldrb	w2, [x19, #8]
  41bcac:	cmp	w2, #0x9
  41bcb0:	b.eq	41bcdc <_obstack_memory_used@@Base+0x85dc>  // b.none
  41bcb4:	cbz	x0, 41bcc8 <_obstack_memory_used@@Base+0x85c8>
  41bcb8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41bcbc:	mov	x2, #0x0                   	// #0
  41bcc0:	add	x1, x1, #0x8f4
  41bcc4:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41bcc8:	mov	w0, #0x8                   	// #8
  41bccc:	str	w0, [x22]
  41bcd0:	mov	x26, #0x0                   	// #0
  41bcd4:	b	41bd1c <_obstack_memory_used@@Base+0x861c>
  41bcd8:	mov	x1, #0x0                   	// #0
  41bcdc:	cmp	x25, #0x8
  41bce0:	b.hi	41bcfc <_obstack_memory_used@@Base+0x85fc>  // b.pmore
  41bce4:	mov	w0, #0x1                   	// #1
  41bce8:	ldr	x2, [x20, #168]
  41bcec:	lsl	w0, w0, w25
  41bcf0:	sxtw	x0, w0
  41bcf4:	orr	x0, x2, x0
  41bcf8:	str	x0, [x20, #168]
  41bcfc:	mov	x0, x20
  41bd00:	mov	w3, #0x11                  	// #17
  41bd04:	mov	x2, #0x0                   	// #0
  41bd08:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41bd0c:	mov	x26, x0
  41bd10:	cbnz	x0, 41bd30 <_obstack_memory_used@@Base+0x8630>
  41bd14:	mov	w0, #0xc                   	// #12
  41bd18:	str	w0, [x22]
  41bd1c:	ldr	w0, [x22]
  41bd20:	cbz	w0, 41bb3c <_obstack_memory_used@@Base+0x843c>
  41bd24:	cbnz	x26, 41bb3c <_obstack_memory_used@@Base+0x843c>
  41bd28:	mov	x26, #0x0                   	// #0
  41bd2c:	b	41c518 <_obstack_memory_used@@Base+0x8e18>
  41bd30:	str	x25, [x0, #40]
  41bd34:	b	41bd1c <_obstack_memory_used@@Base+0x861c>
  41bd38:	mov	x1, #0x1                   	// #1
  41bd3c:	mov	x0, #0x20                  	// #32
  41bd40:	str	xzr, [sp, #168]
  41bd44:	bl	402610 <calloc@plt>
  41bd48:	mov	x1, #0x1                   	// #1
  41bd4c:	mov	x25, x0
  41bd50:	mov	x0, #0x50                  	// #80
  41bd54:	bl	402610 <calloc@plt>
  41bd58:	cmp	x25, #0x0
  41bd5c:	mov	x24, x0
  41bd60:	cset	w0, eq  // eq = none
  41bd64:	cmp	x24, #0x0
  41bd68:	csinc	w0, w0, wzr, ne  // ne = any
  41bd6c:	cbz	w0, 41bd88 <_obstack_memory_used@@Base+0x8688>
  41bd70:	mov	x0, x25
  41bd74:	bl	4027a0 <free@plt>
  41bd78:	mov	x0, x24
  41bd7c:	bl	4027a0 <free@plt>
  41bd80:	mov	w0, #0xc                   	// #12
  41bd84:	b	41bccc <_obstack_memory_used@@Base+0x85cc>
  41bd88:	mov	x2, x23
  41bd8c:	mov	x1, x21
  41bd90:	mov	x0, x19
  41bd94:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  41bd98:	str	w0, [sp, #96]
  41bd9c:	ldrb	w0, [x19, #8]
  41bda0:	cmp	w0, #0x2
  41bda4:	b.ne	41bdb4 <_obstack_memory_used@@Base+0x86b4>  // b.any
  41bda8:	mov	w0, #0x2                   	// #2
  41bdac:	str	w0, [x22]
  41bdb0:	b	41bf14 <_obstack_memory_used@@Base+0x8814>
  41bdb4:	cmp	w0, #0x19
  41bdb8:	b.ne	41be9c <_obstack_memory_used@@Base+0x879c>  // b.any
  41bdbc:	ldrb	w0, [x24, #32]
  41bdc0:	orr	w0, w0, #0x1
  41bdc4:	strb	w0, [x24, #32]
  41bdc8:	tbz	w23, #8, 41bdd8 <_obstack_memory_used@@Base+0x86d8>
  41bdcc:	mov	x0, x25
  41bdd0:	mov	x1, #0xa                   	// #10
  41bdd4:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41bdd8:	ldr	x0, [x21, #72]
  41bddc:	mov	x2, x23
  41bde0:	ldr	w1, [sp, #96]
  41bde4:	add	x0, x0, w1, sxtw
  41bde8:	str	x0, [x21, #72]
  41bdec:	mov	x1, x21
  41bdf0:	mov	x0, x19
  41bdf4:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  41bdf8:	str	w0, [sp, #96]
  41bdfc:	ldrb	w0, [x19, #8]
  41be00:	cmp	w0, #0x2
  41be04:	b.eq	41bda8 <_obstack_memory_used@@Base+0x86a8>  // b.none
  41be08:	mov	w0, #0x1                   	// #1
  41be0c:	str	w0, [sp, #152]
  41be10:	ldrb	w0, [x19, #8]
  41be14:	cmp	w0, #0x15
  41be18:	b.ne	41be24 <_obstack_memory_used@@Base+0x8724>  // b.any
  41be1c:	mov	w0, #0x1                   	// #1
  41be20:	strb	w0, [x19, #8]
  41be24:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41be28:	mov	w5, #0x1                   	// #1
  41be2c:	add	x0, x0, #0x128
  41be30:	stp	xzr, xzr, [sp, #104]
  41be34:	str	x0, [sp, #128]
  41be38:	ldr	w3, [sp, #96]
  41be3c:	mov	w13, #0x3                   	// #3
  41be40:	add	x0, sp, #0xe0
  41be44:	mov	x4, x23
  41be48:	mov	x2, x19
  41be4c:	mov	x1, x21
  41be50:	str	w13, [sp, #176]
  41be54:	str	x0, [sp, #184]
  41be58:	add	x0, sp, #0xb0
  41be5c:	bl	417370 <_obstack_memory_used@@Base+0x3c70>
  41be60:	cbnz	w0, 41bdac <_obstack_memory_used@@Base+0x86ac>
  41be64:	mov	x2, x23
  41be68:	mov	x1, x21
  41be6c:	mov	x0, x19
  41be70:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  41be74:	str	w0, [sp, #96]
  41be78:	ldr	w0, [sp, #176]
  41be7c:	cmp	w0, #0x4
  41be80:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  41be84:	b.eq	41bf44 <_obstack_memory_used@@Base+0x8844>  // b.none
  41be88:	ldrb	w0, [x19, #8]
  41be8c:	cmp	w0, #0x2
  41be90:	b.ne	41bea4 <_obstack_memory_used@@Base+0x87a4>  // b.any
  41be94:	mov	w0, #0x7                   	// #7
  41be98:	b	41bdac <_obstack_memory_used@@Base+0x86ac>
  41be9c:	str	wzr, [sp, #152]
  41bea0:	b	41be10 <_obstack_memory_used@@Base+0x8710>
  41bea4:	cmp	w0, #0x16
  41bea8:	b.ne	41bf44 <_obstack_memory_used@@Base+0x8844>  // b.any
  41beac:	ldr	x0, [x21, #72]
  41beb0:	mov	x2, x23
  41beb4:	ldr	w1, [sp, #96]
  41beb8:	add	x0, x0, w1, sxtw
  41bebc:	str	x0, [x21, #72]
  41bec0:	mov	x1, x21
  41bec4:	add	x0, sp, #0xd0
  41bec8:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  41becc:	mov	w3, w0
  41bed0:	ldrb	w0, [sp, #216]
  41bed4:	cmp	w0, #0x2
  41bed8:	b.eq	41be94 <_obstack_memory_used@@Base+0x8794>  // b.none
  41bedc:	cmp	w0, #0x15
  41bee0:	b.eq	41bf28 <_obstack_memory_used@@Base+0x8828>  // b.none
  41bee4:	add	x0, sp, #0x100
  41bee8:	mov	x4, x23
  41beec:	add	x2, sp, #0xd0
  41bef0:	mov	x1, x21
  41bef4:	mov	w5, #0x1                   	// #1
  41bef8:	str	w13, [sp, #192]
  41befc:	str	x0, [sp, #200]
  41bf00:	add	x0, sp, #0xc0
  41bf04:	bl	417370 <_obstack_memory_used@@Base+0x3c70>
  41bf08:	mov	w27, w0
  41bf0c:	cbz	w0, 41bf64 <_obstack_memory_used@@Base+0x8864>
  41bf10:	str	w0, [x22]
  41bf14:	mov	x0, x25
  41bf18:	bl	4027a0 <free@plt>
  41bf1c:	mov	x0, x24
  41bf20:	bl	414884 <_obstack_memory_used@@Base+0x1184>
  41bf24:	b	41bcd0 <_obstack_memory_used@@Base+0x85d0>
  41bf28:	ldr	w0, [sp, #96]
  41bf2c:	ldr	x1, [x21, #72]
  41bf30:	neg	w0, w0
  41bf34:	add	x0, x1, w0, sxtw
  41bf38:	str	x0, [x21, #72]
  41bf3c:	mov	w0, #0x1                   	// #1
  41bf40:	strb	w0, [x19, #8]
  41bf44:	ldr	w0, [sp, #176]
  41bf48:	cmp	w0, #0x4
  41bf4c:	b.hi	41c24c <_obstack_memory_used@@Base+0x8b4c>  // b.pmore
  41bf50:	ldr	x1, [sp, #128]
  41bf54:	ldrh	w0, [x1, w0, uxtw #1]
  41bf58:	adr	x1, 41bf64 <_obstack_memory_used@@Base+0x8864>
  41bf5c:	add	x0, x1, w0, sxth #2
  41bf60:	br	x0
  41bf64:	mov	x1, x21
  41bf68:	mov	x2, x23
  41bf6c:	mov	x0, x19
  41bf70:	bl	4138e4 <_obstack_memory_used@@Base+0x1e4>
  41bf74:	str	w0, [sp, #96]
  41bf78:	ldr	w0, [x20, #180]
  41bf7c:	ldr	w1, [sp, #176]
  41bf80:	cmp	w0, #0x2
  41bf84:	csel	x26, x24, xzr, ge  // ge = tcont
  41bf88:	cmp	w1, #0x2
  41bf8c:	ccmp	w1, #0x4, #0x4, ne  // ne = any
  41bf90:	b.eq	41c1b8 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  41bf94:	ldr	w4, [sp, #192]
  41bf98:	cmp	w4, #0x2
  41bf9c:	b.eq	41c1b8 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  41bfa0:	cmp	w4, #0x4
  41bfa4:	b.eq	41c1b8 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  41bfa8:	cmp	w1, #0x3
  41bfac:	cset	w0, eq  // eq = none
  41bfb0:	str	w0, [sp, #120]
  41bfb4:	b.ne	41bfe0 <_obstack_memory_used@@Base+0x88e0>  // b.any
  41bfb8:	ldr	x0, [sp, #184]
  41bfbc:	str	w1, [sp, #136]
  41bfc0:	str	w4, [sp, #144]
  41bfc4:	bl	4023c0 <strlen@plt>
  41bfc8:	cmp	x0, #0x1
  41bfcc:	ldr	w1, [sp, #136]
  41bfd0:	ldr	w4, [sp, #144]
  41bfd4:	b.ls	41c9b8 <_obstack_memory_used@@Base+0x92b8>  // b.plast
  41bfd8:	mov	w27, #0x3                   	// #3
  41bfdc:	b	41c0f4 <_obstack_memory_used@@Base+0x89f4>
  41bfe0:	cmp	w4, #0x3
  41bfe4:	b.ne	41c9c4 <_obstack_memory_used@@Base+0x92c4>  // b.any
  41bfe8:	ldr	x0, [sp, #200]
  41bfec:	str	w1, [sp, #136]
  41bff0:	str	w4, [sp, #144]
  41bff4:	bl	4023c0 <strlen@plt>
  41bff8:	cmp	x0, #0x1
  41bffc:	b.hi	41bfd8 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  41c000:	ldr	w1, [sp, #136]
  41c004:	ldr	w4, [sp, #144]
  41c008:	cbnz	w1, 41c118 <_obstack_memory_used@@Base+0x8a18>
  41c00c:	ldrb	w28, [sp, #184]
  41c010:	cbnz	w4, 41c13c <_obstack_memory_used@@Base+0x8a3c>
  41c014:	ldrb	w4, [sp, #200]
  41c018:	ldr	w0, [sp, #120]
  41c01c:	cmp	w1, #0x0
  41c020:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c024:	b.eq	41c14c <_obstack_memory_used@@Base+0x8a4c>  // b.none
  41c028:	cbz	x26, 41c040 <_obstack_memory_used@@Base+0x8940>
  41c02c:	mov	w0, w28
  41c030:	str	w4, [sp, #120]
  41c034:	bl	4026e0 <btowc@plt>
  41c038:	mov	w28, w0
  41c03c:	ldr	w4, [sp, #120]
  41c040:	ldr	w0, [sp, #192]
  41c044:	cmp	w0, #0x0
  41c048:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41c04c:	b.ne	41c154 <_obstack_memory_used@@Base+0x8a54>  // b.any
  41c050:	cbz	x26, 41c060 <_obstack_memory_used@@Base+0x8960>
  41c054:	mov	w0, w4
  41c058:	bl	4026e0 <btowc@plt>
  41c05c:	mov	w4, w0
  41c060:	cmn	w28, #0x1
  41c064:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  41c068:	b.eq	41bfd8 <_obstack_memory_used@@Base+0x88d8>  // b.none
  41c06c:	tbz	w23, #16, 41c078 <_obstack_memory_used@@Base+0x8978>
  41c070:	cmp	w28, w4
  41c074:	b.hi	41c1b8 <_obstack_memory_used@@Base+0x8ab8>  // b.pmore
  41c078:	cbz	x26, 41c184 <_obstack_memory_used@@Base+0x8a84>
  41c07c:	ldr	x0, [x26, #64]
  41c080:	ldr	x1, [sp, #112]
  41c084:	cmp	x0, x1
  41c088:	b.ne	41c164 <_obstack_memory_used@@Base+0x8a64>  // b.any
  41c08c:	lsl	x6, x1, #1
  41c090:	str	w4, [sp, #156]
  41c094:	ldr	x0, [x26, #8]
  41c098:	add	x6, x6, #0x1
  41c09c:	lsl	x1, x6, #2
  41c0a0:	stp	x1, x6, [sp, #136]
  41c0a4:	bl	402640 <realloc@plt>
  41c0a8:	mov	x5, x0
  41c0ac:	str	x5, [sp, #120]
  41c0b0:	ldr	x0, [x26, #16]
  41c0b4:	ldr	x1, [sp, #136]
  41c0b8:	bl	402640 <realloc@plt>
  41c0bc:	mov	x1, x0
  41c0c0:	ldr	x5, [sp, #120]
  41c0c4:	ldr	w4, [sp, #156]
  41c0c8:	cmp	x5, #0x0
  41c0cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41c0d0:	ldr	x6, [sp, #144]
  41c0d4:	b.ne	41c15c <_obstack_memory_used@@Base+0x8a5c>  // b.any
  41c0d8:	mov	x0, x5
  41c0dc:	str	x1, [sp, #120]
  41c0e0:	bl	4027a0 <free@plt>
  41c0e4:	mov	w27, #0xc                   	// #12
  41c0e8:	ldr	x1, [sp, #120]
  41c0ec:	mov	x0, x1
  41c0f0:	bl	4027a0 <free@plt>
  41c0f4:	str	w27, [x22]
  41c0f8:	cbnz	w27, 41bf14 <_obstack_memory_used@@Base+0x8814>
  41c0fc:	ldrb	w0, [x19, #8]
  41c100:	cmp	w0, #0x2
  41c104:	b.eq	41be94 <_obstack_memory_used@@Base+0x8794>  // b.none
  41c108:	cmp	w0, #0x15
  41c10c:	b.eq	41c274 <_obstack_memory_used@@Base+0x8b74>  // b.none
  41c110:	mov	w5, #0x0                   	// #0
  41c114:	b	41be38 <_obstack_memory_used@@Base+0x8738>
  41c118:	cmp	w1, #0x3
  41c11c:	b.ne	41c12c <_obstack_memory_used@@Base+0x8a2c>  // b.any
  41c120:	ldr	x0, [sp, #184]
  41c124:	ldrb	w28, [x0]
  41c128:	b	41c010 <_obstack_memory_used@@Base+0x8910>
  41c12c:	mov	w28, #0x0                   	// #0
  41c130:	ldr	x0, [sp, #200]
  41c134:	ldrb	w4, [x0]
  41c138:	b	41c018 <_obstack_memory_used@@Base+0x8918>
  41c13c:	cmp	w4, #0x3
  41c140:	b.eq	41c130 <_obstack_memory_used@@Base+0x8a30>  // b.none
  41c144:	mov	w4, #0x0                   	// #0
  41c148:	b	41c018 <_obstack_memory_used@@Base+0x8918>
  41c14c:	ldr	w28, [sp, #184]
  41c150:	b	41c040 <_obstack_memory_used@@Base+0x8940>
  41c154:	ldr	w4, [sp, #200]
  41c158:	b	41c060 <_obstack_memory_used@@Base+0x8960>
  41c15c:	stp	x5, x0, [x26, #8]
  41c160:	str	x6, [sp, #112]
  41c164:	ldr	x0, [x26, #64]
  41c168:	ldr	x5, [x26, #8]
  41c16c:	lsl	x1, x0, #2
  41c170:	add	x0, x0, #0x1
  41c174:	str	w28, [x5, x1]
  41c178:	ldr	x5, [x26, #16]
  41c17c:	str	x0, [x26, #64]
  41c180:	str	w4, [x5, x1]
  41c184:	mov	x5, #0x0                   	// #0
  41c188:	cmp	w5, w28
  41c18c:	ccmp	w5, w4, #0x2, cs  // cs = hs, nlast
  41c190:	b.hi	41c1a8 <_obstack_memory_used@@Base+0x8aa8>  // b.pmore
  41c194:	mov	x1, x5
  41c198:	mov	x0, x25
  41c19c:	str	w4, [sp, #120]
  41c1a0:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41c1a4:	ldr	w4, [sp, #120]
  41c1a8:	add	x5, x5, #0x1
  41c1ac:	cmp	x5, #0x100
  41c1b0:	b.ne	41c188 <_obstack_memory_used@@Base+0x8a88>  // b.any
  41c1b4:	b	41c0f4 <_obstack_memory_used@@Base+0x89f4>
  41c1b8:	mov	w27, #0xb                   	// #11
  41c1bc:	b	41c0f4 <_obstack_memory_used@@Base+0x89f4>
  41c1c0:	ldrb	w1, [sp, #184]
  41c1c4:	mov	x0, x25
  41c1c8:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41c1cc:	b	41c0fc <_obstack_memory_used@@Base+0x89fc>
  41c1d0:	ldr	x0, [x24, #40]
  41c1d4:	ldr	x1, [sp, #104]
  41c1d8:	cmp	x0, x1
  41c1dc:	b.ne	41c200 <_obstack_memory_used@@Base+0x8b00>  // b.any
  41c1e0:	lsl	x28, x1, #1
  41c1e4:	add	x0, x28, #0x1
  41c1e8:	str	x0, [sp, #104]
  41c1ec:	lsl	x1, x0, #2
  41c1f0:	ldr	x0, [x24]
  41c1f4:	bl	402640 <realloc@plt>
  41c1f8:	cbz	x0, 41c9b0 <_obstack_memory_used@@Base+0x92b0>
  41c1fc:	str	x0, [x24]
  41c200:	ldr	x0, [x24, #40]
  41c204:	ldr	x1, [x24]
  41c208:	add	x2, x0, #0x1
  41c20c:	str	x2, [x24, #40]
  41c210:	ldr	w2, [sp, #184]
  41c214:	str	w2, [x1, x0, lsl #2]
  41c218:	b	41c0fc <_obstack_memory_used@@Base+0x89fc>
  41c21c:	ldr	x27, [sp, #184]
  41c220:	mov	x0, x27
  41c224:	bl	4023c0 <strlen@plt>
  41c228:	cmp	x0, #0x1
  41c22c:	b.eq	41c238 <_obstack_memory_used@@Base+0x8b38>  // b.none
  41c230:	mov	w0, #0x3                   	// #3
  41c234:	b	41bdac <_obstack_memory_used@@Base+0x86ac>
  41c238:	ldrb	w1, [x27]
  41c23c:	mov	x0, x25
  41c240:	bl	413724 <_obstack_memory_used@@Base+0x24>
  41c244:	str	wzr, [x22]
  41c248:	b	41c0fc <_obstack_memory_used@@Base+0x89fc>
  41c24c:	ldr	x0, [x21, #120]
  41c250:	mov	x5, x23
  41c254:	ldr	x4, [sp, #184]
  41c258:	add	x3, sp, #0xa8
  41c25c:	mov	x2, x24
  41c260:	mov	x1, x25
  41c264:	bl	4150bc <_obstack_memory_used@@Base+0x19bc>
  41c268:	str	w0, [x22]
  41c26c:	cbz	w0, 41c0fc <_obstack_memory_used@@Base+0x89fc>
  41c270:	b	41bf14 <_obstack_memory_used@@Base+0x8814>
  41c274:	ldr	x0, [x21, #72]
  41c278:	ldr	w1, [sp, #96]
  41c27c:	add	x0, x0, w1, sxtw
  41c280:	str	x0, [x21, #72]
  41c284:	ldr	w0, [sp, #152]
  41c288:	cbz	w0, 41c294 <_obstack_memory_used@@Base+0x8b94>
  41c28c:	mov	x0, x25
  41c290:	bl	413744 <_obstack_memory_used@@Base+0x44>
  41c294:	ldr	w0, [x20, #180]
  41c298:	cmp	w0, #0x1
  41c29c:	b.le	41c2ac <_obstack_memory_used@@Base+0x8bac>
  41c2a0:	ldr	x1, [x20, #120]
  41c2a4:	mov	x0, x25
  41c2a8:	bl	413788 <_obstack_memory_used@@Base+0x88>
  41c2ac:	ldr	x0, [x24, #40]
  41c2b0:	cbnz	x0, 41c2e8 <_obstack_memory_used@@Base+0x8be8>
  41c2b4:	ldr	x0, [x24, #48]
  41c2b8:	cbnz	x0, 41c2e8 <_obstack_memory_used@@Base+0x8be8>
  41c2bc:	ldr	x0, [x24, #56]
  41c2c0:	cbnz	x0, 41c2e8 <_obstack_memory_used@@Base+0x8be8>
  41c2c4:	ldr	x0, [x24, #64]
  41c2c8:	cbnz	x0, 41c2e8 <_obstack_memory_used@@Base+0x8be8>
  41c2cc:	ldr	w0, [x20, #180]
  41c2d0:	cmp	w0, #0x1
  41c2d4:	b.le	41c340 <_obstack_memory_used@@Base+0x8c40>
  41c2d8:	ldr	x0, [x24, #72]
  41c2dc:	cbnz	x0, 41c2e8 <_obstack_memory_used@@Base+0x8be8>
  41c2e0:	ldrb	w0, [x24, #32]
  41c2e4:	tbz	w0, #0, 41c340 <_obstack_memory_used@@Base+0x8c40>
  41c2e8:	ldrb	w0, [x20, #176]
  41c2ec:	add	x3, sp, #0x100
  41c2f0:	mov	x2, #0x0                   	// #0
  41c2f4:	mov	x1, #0x0                   	// #0
  41c2f8:	orr	w0, w0, #0x2
  41c2fc:	strb	w0, [x20, #176]
  41c300:	mov	w0, #0x6                   	// #6
  41c304:	str	x24, [sp, #256]
  41c308:	strb	w0, [sp, #264]
  41c30c:	mov	x0, x20
  41c310:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c314:	mov	x26, x0
  41c318:	mov	x0, #0x0                   	// #0
  41c31c:	cbz	x26, 41c9b0 <_obstack_memory_used@@Base+0x92b0>
  41c320:	ldr	x1, [x25, x0, lsl #3]
  41c324:	cbnz	x1, 41c970 <_obstack_memory_used@@Base+0x9270>
  41c328:	add	x0, x0, #0x1
  41c32c:	cmp	x0, #0x4
  41c330:	b.ne	41c320 <_obstack_memory_used@@Base+0x8c20>  // b.any
  41c334:	mov	x0, x25
  41c338:	bl	4027a0 <free@plt>
  41c33c:	b	41bd1c <_obstack_memory_used@@Base+0x861c>
  41c340:	mov	x0, x24
  41c344:	bl	414884 <_obstack_memory_used@@Base+0x1184>
  41c348:	mov	w0, #0x3                   	// #3
  41c34c:	add	x3, sp, #0x100
  41c350:	mov	x2, #0x0                   	// #0
  41c354:	mov	x1, #0x0                   	// #0
  41c358:	str	x25, [sp, #256]
  41c35c:	strb	w0, [sp, #264]
  41c360:	mov	x0, x20
  41c364:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c368:	b	41c9a8 <_obstack_memory_used@@Base+0x92a8>
  41c36c:	ldr	x1, [x19]
  41c370:	mov	w0, #0x1                   	// #1
  41c374:	lsl	w0, w0, w1
  41c378:	ldr	x1, [x20, #168]
  41c37c:	sxtw	x0, w0
  41c380:	tst	x0, x1
  41c384:	b.ne	41c390 <_obstack_memory_used@@Base+0x8c90>  // b.any
  41c388:	mov	w0, #0x6                   	// #6
  41c38c:	b	41bb28 <_obstack_memory_used@@Base+0x8428>
  41c390:	ldr	x1, [x20, #160]
  41c394:	mov	x3, x19
  41c398:	mov	x2, #0x0                   	// #0
  41c39c:	orr	x0, x1, x0
  41c3a0:	str	x0, [x20, #160]
  41c3a4:	mov	x1, #0x0                   	// #0
  41c3a8:	mov	x0, x20
  41c3ac:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c3b0:	mov	x26, x0
  41c3b4:	cbz	x0, 41bb24 <_obstack_memory_used@@Base+0x8424>
  41c3b8:	ldr	x0, [x20, #152]
  41c3bc:	add	x0, x0, #0x1
  41c3c0:	str	x0, [x20, #152]
  41c3c4:	ldrb	w0, [x20, #176]
  41c3c8:	orr	w0, w0, #0x2
  41c3cc:	strb	w0, [x20, #176]
  41c3d0:	b	41bb3c <_obstack_memory_used@@Base+0x843c>
  41c3d4:	cbz	x27, 41c3e0 <_obstack_memory_used@@Base+0x8ce0>
  41c3d8:	mov	w0, #0xd                   	// #13
  41c3dc:	b	41bb28 <_obstack_memory_used@@Base+0x8428>
  41c3e0:	cbnz	x28, 41c3d8 <_obstack_memory_used@@Base+0x8cd8>
  41c3e4:	str	x3, [sp, #96]
  41c3e8:	cbz	x3, 41c404 <_obstack_memory_used@@Base+0x8d04>
  41c3ec:	mov	x2, x23
  41c3f0:	mov	x1, x21
  41c3f4:	mov	x0, x19
  41c3f8:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41c3fc:	ldr	x3, [sp, #96]
  41c400:	b	41bae4 <_obstack_memory_used@@Base+0x83e4>
  41c404:	cmp	w0, #0x9
  41c408:	b.ne	41c418 <_obstack_memory_used@@Base+0x8d18>  // b.any
  41c40c:	tbnz	w23, #17, 41c418 <_obstack_memory_used@@Base+0x8d18>
  41c410:	mov	w0, #0x10                  	// #16
  41c414:	b	41bb28 <_obstack_memory_used@@Base+0x8428>
  41c418:	mov	w0, #0x1                   	// #1
  41c41c:	strb	w0, [x19, #8]
  41c420:	mov	x3, x19
  41c424:	mov	x0, x20
  41c428:	mov	x2, #0x0                   	// #0
  41c42c:	mov	x1, #0x0                   	// #0
  41c430:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c434:	mov	x26, x0
  41c438:	cbnz	x0, 41bb3c <_obstack_memory_used@@Base+0x843c>
  41c43c:	b	41bb24 <_obstack_memory_used@@Base+0x8424>
  41c440:	ldr	w1, [x19]
  41c444:	mov	w0, #0x30f                 	// #783
  41c448:	tst	w1, w0
  41c44c:	b.eq	41c484 <_obstack_memory_used@@Base+0x8d84>  // b.none
  41c450:	ldrb	w0, [x20, #176]
  41c454:	tbnz	w0, #4, 41c484 <_obstack_memory_used@@Base+0x8d84>
  41c458:	orr	w0, w0, #0x10
  41c45c:	strb	w0, [x20, #176]
  41c460:	mov	w1, w0
  41c464:	tbnz	w0, #3, 41c584 <_obstack_memory_used@@Base+0x8e84>
  41c468:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  41c46c:	str	x0, [x20, #184]
  41c470:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  41c474:	movk	x0, #0x87ff, lsl #16
  41c478:	str	x0, [x20, #192]
  41c47c:	tbz	w1, #2, 41c5a8 <_obstack_memory_used@@Base+0x8ea8>
  41c480:	stp	xzr, xzr, [x20, #200]
  41c484:	ldr	w0, [x19]
  41c488:	mov	w1, #0x200                 	// #512
  41c48c:	cmp	w0, #0x100
  41c490:	ccmp	w0, w1, #0x4, ne  // ne = any
  41c494:	b.ne	41c5dc <_obstack_memory_used@@Base+0x8edc>  // b.any
  41c498:	cmp	w0, #0x100
  41c49c:	b.ne	41c5b4 <_obstack_memory_used@@Base+0x8eb4>  // b.any
  41c4a0:	mov	w0, #0x6                   	// #6
  41c4a4:	str	w0, [x19]
  41c4a8:	mov	x3, x19
  41c4ac:	mov	x0, x20
  41c4b0:	mov	x2, #0x0                   	// #0
  41c4b4:	mov	x1, #0x0                   	// #0
  41c4b8:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c4bc:	mov	x24, x0
  41c4c0:	mov	w0, #0x9                   	// #9
  41c4c4:	str	w0, [x19]
  41c4c8:	mov	x3, x19
  41c4cc:	mov	x2, #0x0                   	// #0
  41c4d0:	mov	x1, #0x0                   	// #0
  41c4d4:	mov	x0, x20
  41c4d8:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c4dc:	mov	x1, x24
  41c4e0:	mov	x25, x0
  41c4e4:	mov	x2, x0
  41c4e8:	mov	w3, #0xa                   	// #10
  41c4ec:	mov	x0, x20
  41c4f0:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c4f4:	cmp	x24, #0x0
  41c4f8:	mov	x26, x0
  41c4fc:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  41c500:	b.eq	41bb24 <_obstack_memory_used@@Base+0x8424>  // b.none
  41c504:	cbz	x26, 41bb24 <_obstack_memory_used@@Base+0x8424>
  41c508:	mov	x2, x23
  41c50c:	mov	x1, x21
  41c510:	mov	x0, x19
  41c514:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41c518:	mov	x0, x26
  41c51c:	ldp	x19, x20, [sp, #16]
  41c520:	ldp	x21, x22, [sp, #32]
  41c524:	ldp	x23, x24, [sp, #48]
  41c528:	ldp	x25, x26, [sp, #64]
  41c52c:	ldp	x27, x28, [sp, #80]
  41c530:	ldp	x29, x30, [sp], #288
  41c534:	ret
  41c538:	ldrh	w4, [x7, x3, lsl #1]
  41c53c:	tbnz	w4, #3, 41c548 <_obstack_memory_used@@Base+0x8e48>
  41c540:	cmp	w3, #0x5f
  41c544:	b.ne	41c558 <_obstack_memory_used@@Base+0x8e58>  // b.any
  41c548:	ldr	x5, [x6, x0, lsl #3]
  41c54c:	lsl	x4, x8, x2
  41c550:	orr	x4, x5, x4
  41c554:	str	x4, [x6, x0, lsl #3]
  41c558:	add	w2, w2, #0x1
  41c55c:	add	x3, x3, #0x1
  41c560:	cmp	w2, #0x40
  41c564:	b.ne	41c538 <_obstack_memory_used@@Base+0x8e38>  // b.any
  41c568:	add	x0, x0, #0x1
  41c56c:	add	x1, x1, #0x40
  41c570:	cmp	w0, #0x3
  41c574:	b.gt	41c484 <_obstack_memory_used@@Base+0x8d84>
  41c578:	mov	x3, x1
  41c57c:	mov	w2, #0x0                   	// #0
  41c580:	b	41c538 <_obstack_memory_used@@Base+0x8e38>
  41c584:	mov	w25, #0x0                   	// #0
  41c588:	mov	w24, #0x0                   	// #0
  41c58c:	bl	402790 <__ctype_b_loc@plt>
  41c590:	sxtw	x1, w25
  41c594:	add	x6, x20, #0xb8
  41c598:	mov	x8, #0x1                   	// #1
  41c59c:	ldr	x7, [x0]
  41c5a0:	sxtw	x0, w24
  41c5a4:	b	41c578 <_obstack_memory_used@@Base+0x8e78>
  41c5a8:	mov	w25, #0x80                  	// #128
  41c5ac:	mov	w24, #0x2                   	// #2
  41c5b0:	b	41c58c <_obstack_memory_used@@Base+0x8e8c>
  41c5b4:	mov	w0, #0x5                   	// #5
  41c5b8:	str	w0, [x19]
  41c5bc:	mov	x3, x19
  41c5c0:	mov	x0, x20
  41c5c4:	mov	x2, #0x0                   	// #0
  41c5c8:	mov	x1, #0x0                   	// #0
  41c5cc:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c5d0:	mov	x24, x0
  41c5d4:	mov	w0, #0xa                   	// #10
  41c5d8:	b	41c4c4 <_obstack_memory_used@@Base+0x8dc4>
  41c5dc:	mov	x3, x19
  41c5e0:	mov	x0, x20
  41c5e4:	mov	x2, #0x0                   	// #0
  41c5e8:	mov	x1, #0x0                   	// #0
  41c5ec:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c5f0:	mov	x26, x0
  41c5f4:	b	41c504 <_obstack_memory_used@@Base+0x8e04>
  41c5f8:	mov	x3, x19
  41c5fc:	mov	x0, x20
  41c600:	mov	x2, #0x0                   	// #0
  41c604:	mov	x1, #0x0                   	// #0
  41c608:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c60c:	mov	x26, x0
  41c610:	cbz	x0, 41bb24 <_obstack_memory_used@@Base+0x8424>
  41c614:	ldr	w0, [x20, #180]
  41c618:	cmp	w0, #0x1
  41c61c:	b.gt	41c3c4 <_obstack_memory_used@@Base+0x8cc4>
  41c620:	b	41bb3c <_obstack_memory_used@@Base+0x843c>
  41c624:	cmp	w0, #0x21
  41c628:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xd900>
  41c62c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  41c630:	mov	x5, x22
  41c634:	cset	w4, eq  // eq = none
  41c638:	add	x3, x3, #0x368
  41c63c:	add	x2, x2, #0x646
  41c640:	ldr	x1, [x21, #120]
  41c644:	mov	x0, x20
  41c648:	bl	416150 <_obstack_memory_used@@Base+0x2a50>
  41c64c:	mov	x26, x0
  41c650:	b	41bd1c <_obstack_memory_used@@Base+0x861c>
  41c654:	cmp	w0, #0x23
  41c658:	adrp	x3, 41f000 <_obstack_memory_used@@Base+0xb900>
  41c65c:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xc900>
  41c660:	mov	x5, x22
  41c664:	cset	w4, eq  // eq = none
  41c668:	add	x3, x3, #0x645
  41c66c:	add	x2, x2, #0x63a
  41c670:	b	41c640 <_obstack_memory_used@@Base+0x8f40>
  41c674:	mov	w0, #0x5                   	// #5
  41c678:	b	41bb28 <_obstack_memory_used@@Base+0x8428>
  41c67c:	cmn	x0, #0x2
  41c680:	b.ne	41c690 <_obstack_memory_used@@Base+0x8f90>  // b.any
  41c684:	mov	x27, #0x0                   	// #0
  41c688:	b	41c6cc <_obstack_memory_used@@Base+0x8fcc>
  41c68c:	mov	x5, #0x0                   	// #0
  41c690:	ldrb	w0, [x19, #8]
  41c694:	cmp	w0, #0x18
  41c698:	b.eq	41c6f0 <_obstack_memory_used@@Base+0x8ff0>  // b.none
  41c69c:	cmp	w0, #0x1
  41c6a0:	b.ne	41c6f8 <_obstack_memory_used@@Base+0x8ff8>  // b.any
  41c6a4:	ldrb	w0, [x19]
  41c6a8:	cmp	w0, #0x2c
  41c6ac:	b.ne	41c6f8 <_obstack_memory_used@@Base+0x8ff8>  // b.any
  41c6b0:	mov	x2, x23
  41c6b4:	mov	x1, x19
  41c6b8:	mov	x0, x21
  41c6bc:	str	x5, [sp, #112]
  41c6c0:	bl	417b44 <_obstack_memory_used@@Base+0x4444>
  41c6c4:	mov	x27, x0
  41c6c8:	ldr	x5, [sp, #112]
  41c6cc:	cmn	x5, #0x2
  41c6d0:	ccmn	x27, #0x2, #0x4, ne  // ne = any
  41c6d4:	b.ne	41c73c <_obstack_memory_used@@Base+0x903c>  // b.any
  41c6d8:	tbnz	w23, #21, 41c700 <_obstack_memory_used@@Base+0x9000>
  41c6dc:	ldrb	w0, [x19, #8]
  41c6e0:	cmp	w0, #0x2
  41c6e4:	b.ne	41bbd0 <_obstack_memory_used@@Base+0x84d0>  // b.any
  41c6e8:	mov	w0, #0x9                   	// #9
  41c6ec:	b	41bbd4 <_obstack_memory_used@@Base+0x84d4>
  41c6f0:	mov	x27, x5
  41c6f4:	b	41c6cc <_obstack_memory_used@@Base+0x8fcc>
  41c6f8:	mov	x27, #0xfffffffffffffffe    	// #-2
  41c6fc:	b	41c6cc <_obstack_memory_used@@Base+0x8fcc>
  41c700:	str	x28, [x21, #72]
  41c704:	mov	w0, #0x1                   	// #1
  41c708:	stp	x24, x25, [x19]
  41c70c:	mov	x24, x26
  41c710:	strb	w0, [x19, #8]
  41c714:	ldr	w0, [x22]
  41c718:	cbz	w0, 41c938 <_obstack_memory_used@@Base+0x9238>
  41c71c:	cbnz	x24, 41c938 <_obstack_memory_used@@Base+0x9238>
  41c720:	cbz	x26, 41bd28 <_obstack_memory_used@@Base+0x8628>
  41c724:	mov	x0, x26
  41c728:	mov	x2, #0x0                   	// #0
  41c72c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41c730:	add	x1, x1, #0x8f4
  41c734:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41c738:	b	41bd28 <_obstack_memory_used@@Base+0x8628>
  41c73c:	cmp	x5, x27
  41c740:	ccmn	x27, #0x1, #0x4, gt
  41c744:	b.ne	41bbd0 <_obstack_memory_used@@Base+0x84d0>  // b.any
  41c748:	ldrb	w0, [x19, #8]
  41c74c:	cmp	w0, #0x18
  41c750:	b.ne	41bbd0 <_obstack_memory_used@@Base+0x84d0>  // b.any
  41c754:	cmn	x27, #0x1
  41c758:	mov	x0, #0x7fff                	// #32767
  41c75c:	b.ne	41c774 <_obstack_memory_used@@Base+0x9074>  // b.any
  41c760:	cmp	x5, x0
  41c764:	cset	x0, gt
  41c768:	cbz	x0, 41c788 <_obstack_memory_used@@Base+0x9088>
  41c76c:	mov	w0, #0xf                   	// #15
  41c770:	b	41bbd4 <_obstack_memory_used@@Base+0x84d4>
  41c774:	cmp	x27, x0
  41c778:	b	41c764 <_obstack_memory_used@@Base+0x9064>
  41c77c:	cmp	w1, #0x13
  41c780:	mov	x6, #0xffffffffffffffff    	// #-1
  41c784:	cneg	x27, x6, eq  // eq = none
  41c788:	mov	x2, x23
  41c78c:	mov	x1, x21
  41c790:	mov	x0, x19
  41c794:	str	x5, [sp, #112]
  41c798:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41c79c:	cbz	x26, 41c7bc <_obstack_memory_used@@Base+0x90bc>
  41c7a0:	ldr	x5, [sp, #112]
  41c7a4:	orr	x0, x5, x27
  41c7a8:	cbnz	x0, 41c7c4 <_obstack_memory_used@@Base+0x90c4>
  41c7ac:	ldr	x1, [sp, #104]
  41c7b0:	mov	x0, x26
  41c7b4:	mov	x2, #0x0                   	// #0
  41c7b8:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41c7bc:	mov	x24, #0x0                   	// #0
  41c7c0:	b	41c714 <_obstack_memory_used@@Base+0x9014>
  41c7c4:	cmp	x5, #0x0
  41c7c8:	b.gt	41c8c4 <_obstack_memory_used@@Base+0x91c4>
  41c7cc:	mov	x28, x26
  41c7d0:	mov	x25, #0x0                   	// #0
  41c7d4:	ldrb	w0, [x28, #48]
  41c7d8:	cmp	w0, #0x11
  41c7dc:	b.ne	41c7f8 <_obstack_memory_used@@Base+0x90f8>  // b.any
  41c7e0:	ldr	x2, [x28, #40]
  41c7e4:	mov	x0, x28
  41c7e8:	ldr	x1, [sp, #96]
  41c7ec:	str	x5, [sp, #112]
  41c7f0:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41c7f4:	ldr	x5, [sp, #112]
  41c7f8:	cmn	x27, #0x1
  41c7fc:	cset	w3, eq  // eq = none
  41c800:	mov	x1, x28
  41c804:	add	w3, w3, #0xa
  41c808:	mov	x0, x20
  41c80c:	mov	x2, #0x0                   	// #0
  41c810:	str	x5, [sp, #112]
  41c814:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c818:	mov	x24, x0
  41c81c:	cbz	x0, 41c930 <_obstack_memory_used@@Base+0x9230>
  41c820:	ldr	x5, [sp, #112]
  41c824:	add	x4, x5, #0x2
  41c828:	cmp	x27, x4
  41c82c:	b.ge	41c8d4 <_obstack_memory_used@@Base+0x91d4>  // b.tcont
  41c830:	cbz	x25, 41c714 <_obstack_memory_used@@Base+0x9014>
  41c834:	mov	x2, x24
  41c838:	mov	x1, x25
  41c83c:	mov	x0, x20
  41c840:	mov	w3, #0x10                  	// #16
  41c844:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c848:	mov	x24, x0
  41c84c:	b	41c714 <_obstack_memory_used@@Base+0x9014>
  41c850:	mov	x1, x20
  41c854:	mov	x0, x25
  41c858:	str	x5, [sp, #112]
  41c85c:	bl	415ee0 <_obstack_memory_used@@Base+0x27e0>
  41c860:	mov	x1, x24
  41c864:	mov	x25, x0
  41c868:	mov	x2, x0
  41c86c:	mov	w3, #0x10                  	// #16
  41c870:	mov	x0, x20
  41c874:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c878:	cmp	x25, #0x0
  41c87c:	mov	x24, x0
  41c880:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41c884:	b.eq	41c930 <_obstack_memory_used@@Base+0x9230>  // b.none
  41c888:	ldr	x5, [sp, #112]
  41c88c:	add	x28, x28, #0x1
  41c890:	cmp	x5, x28
  41c894:	b.ge	41c850 <_obstack_memory_used@@Base+0x9150>  // b.tcont
  41c898:	str	x5, [sp, #112]
  41c89c:	cmp	x5, x27
  41c8a0:	b.eq	41c714 <_obstack_memory_used@@Base+0x9014>  // b.none
  41c8a4:	mov	x1, x20
  41c8a8:	mov	x0, x25
  41c8ac:	bl	415ee0 <_obstack_memory_used@@Base+0x27e0>
  41c8b0:	mov	x28, x0
  41c8b4:	cbz	x0, 41c930 <_obstack_memory_used@@Base+0x9230>
  41c8b8:	mov	x25, x24
  41c8bc:	ldr	x5, [sp, #112]
  41c8c0:	b	41c7d4 <_obstack_memory_used@@Base+0x90d4>
  41c8c4:	mov	x24, x26
  41c8c8:	mov	x25, x26
  41c8cc:	mov	x28, #0x2                   	// #2
  41c8d0:	b	41c890 <_obstack_memory_used@@Base+0x9190>
  41c8d4:	mov	x1, x20
  41c8d8:	mov	x0, x28
  41c8dc:	str	x4, [sp, #112]
  41c8e0:	bl	415ee0 <_obstack_memory_used@@Base+0x27e0>
  41c8e4:	mov	x1, x24
  41c8e8:	mov	x28, x0
  41c8ec:	mov	x2, x0
  41c8f0:	mov	w3, #0x10                  	// #16
  41c8f4:	mov	x0, x20
  41c8f8:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c8fc:	cmp	x28, #0x0
  41c900:	mov	x1, x0
  41c904:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41c908:	b.eq	41c930 <_obstack_memory_used@@Base+0x9230>  // b.none
  41c90c:	mov	x0, x20
  41c910:	mov	w3, #0xa                   	// #10
  41c914:	mov	x2, #0x0                   	// #0
  41c918:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c91c:	mov	x24, x0
  41c920:	cbz	x0, 41c930 <_obstack_memory_used@@Base+0x9230>
  41c924:	ldr	x4, [sp, #112]
  41c928:	add	x4, x4, #0x1
  41c92c:	b	41c828 <_obstack_memory_used@@Base+0x9128>
  41c930:	mov	w0, #0xc                   	// #12
  41c934:	b	41bbd4 <_obstack_memory_used@@Base+0x84d4>
  41c938:	tbz	w23, #24, 41c968 <_obstack_memory_used@@Base+0x9268>
  41c93c:	ldrb	w0, [x19, #8]
  41c940:	cmp	w0, #0xb
  41c944:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  41c948:	b.ne	41c968 <_obstack_memory_used@@Base+0x9268>  // b.any
  41c94c:	cbz	x24, 41c3d8 <_obstack_memory_used@@Base+0x8cd8>
  41c950:	mov	x0, x24
  41c954:	mov	x2, #0x0                   	// #0
  41c958:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41c95c:	add	x1, x1, #0x8f4
  41c960:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41c964:	b	41c3d8 <_obstack_memory_used@@Base+0x8cd8>
  41c968:	mov	x26, x24
  41c96c:	b	41bb64 <_obstack_memory_used@@Base+0x8464>
  41c970:	mov	w0, #0x3                   	// #3
  41c974:	mov	x1, #0x0                   	// #0
  41c978:	add	x3, sp, #0x100
  41c97c:	mov	x2, #0x0                   	// #0
  41c980:	str	x25, [sp, #256]
  41c984:	strb	w0, [sp, #264]
  41c988:	mov	x0, x20
  41c98c:	bl	415e24 <_obstack_memory_used@@Base+0x2724>
  41c990:	mov	x1, x0
  41c994:	cbz	x0, 41c9b0 <_obstack_memory_used@@Base+0x92b0>
  41c998:	mov	x2, x26
  41c99c:	mov	x0, x20
  41c9a0:	mov	w3, #0xa                   	// #10
  41c9a4:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41c9a8:	mov	x26, x0
  41c9ac:	cbnz	x0, 41bd1c <_obstack_memory_used@@Base+0x861c>
  41c9b0:	mov	w0, #0xc                   	// #12
  41c9b4:	b	41bdac <_obstack_memory_used@@Base+0x86ac>
  41c9b8:	cmp	w4, #0x3
  41c9bc:	b.ne	41c120 <_obstack_memory_used@@Base+0x8a20>  // b.any
  41c9c0:	b	41bfe8 <_obstack_memory_used@@Base+0x88e8>
  41c9c4:	cbz	w1, 41c00c <_obstack_memory_used@@Base+0x890c>
  41c9c8:	mov	w28, #0x0                   	// #0
  41c9cc:	b	41c010 <_obstack_memory_used@@Base+0x8910>
  41c9d0:	stp	x29, x30, [sp, #-96]!
  41c9d4:	mov	x29, sp
  41c9d8:	stp	x21, x22, [sp, #32]
  41c9dc:	mov	x21, x5
  41c9e0:	mov	x22, x1
  41c9e4:	stp	x19, x20, [sp, #16]
  41c9e8:	stp	x23, x24, [sp, #48]
  41c9ec:	mov	x23, x2
  41c9f0:	mov	x24, x4
  41c9f4:	stp	x25, x26, [sp, #64]
  41c9f8:	mov	x25, x0
  41c9fc:	mov	x26, x3
  41ca00:	str	x27, [sp, #80]
  41ca04:	ldr	x27, [x1]
  41ca08:	bl	41ba9c <_obstack_memory_used@@Base+0x839c>
  41ca0c:	mov	x19, x0
  41ca10:	ldr	w0, [x21]
  41ca14:	cbz	w0, 41caa0 <_obstack_memory_used@@Base+0x93a0>
  41ca18:	cbnz	x19, 41caa0 <_obstack_memory_used@@Base+0x93a0>
  41ca1c:	mov	x19, #0x0                   	// #0
  41ca20:	mov	x0, x19
  41ca24:	ldp	x19, x20, [sp, #16]
  41ca28:	ldp	x21, x22, [sp, #32]
  41ca2c:	ldp	x23, x24, [sp, #48]
  41ca30:	ldp	x25, x26, [sp, #64]
  41ca34:	ldr	x27, [sp, #80]
  41ca38:	ldp	x29, x30, [sp], #96
  41ca3c:	ret
  41ca40:	cmp	x19, #0x0
  41ca44:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  41ca48:	b.eq	41ca98 <_obstack_memory_used@@Base+0x9398>  // b.none
  41ca4c:	mov	x2, x20
  41ca50:	mov	x1, x19
  41ca54:	mov	x0, x27
  41ca58:	mov	w3, #0x10                  	// #16
  41ca5c:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41ca60:	cbnz	x0, 41cb04 <_obstack_memory_used@@Base+0x9404>
  41ca64:	adrp	x22, 414000 <_obstack_memory_used@@Base+0x900>
  41ca68:	add	x22, x22, #0x8f4
  41ca6c:	mov	x1, x22
  41ca70:	mov	x2, #0x0                   	// #0
  41ca74:	mov	x0, x20
  41ca78:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41ca7c:	mov	x1, x22
  41ca80:	mov	x0, x19
  41ca84:	mov	x2, #0x0                   	// #0
  41ca88:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41ca8c:	mov	w0, #0xc                   	// #12
  41ca90:	str	w0, [x21]
  41ca94:	b	41ca1c <_obstack_memory_used@@Base+0x931c>
  41ca98:	cmp	x19, #0x0
  41ca9c:	csel	x19, x19, x20, ne  // ne = any
  41caa0:	ldrb	w0, [x23, #8]
  41caa4:	and	w1, w0, #0xfffffff7
  41caa8:	cmp	w1, #0x2
  41caac:	b.eq	41ca20 <_obstack_memory_used@@Base+0x9320>  // b.none
  41cab0:	cbz	x24, 41cabc <_obstack_memory_used@@Base+0x93bc>
  41cab4:	cmp	w0, #0x9
  41cab8:	b.eq	41ca20 <_obstack_memory_used@@Base+0x9320>  // b.none
  41cabc:	mov	x5, x21
  41cac0:	mov	x4, x24
  41cac4:	mov	x3, x26
  41cac8:	mov	x2, x23
  41cacc:	mov	x1, x22
  41cad0:	mov	x0, x25
  41cad4:	bl	41ba9c <_obstack_memory_used@@Base+0x839c>
  41cad8:	mov	x20, x0
  41cadc:	ldr	w0, [x21]
  41cae0:	cbz	w0, 41ca40 <_obstack_memory_used@@Base+0x9340>
  41cae4:	cbnz	x20, 41ca40 <_obstack_memory_used@@Base+0x9340>
  41cae8:	cbz	x19, 41ca1c <_obstack_memory_used@@Base+0x931c>
  41caec:	mov	x0, x19
  41caf0:	mov	x2, #0x0                   	// #0
  41caf4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41caf8:	add	x1, x1, #0x8f4
  41cafc:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41cb00:	b	41ca1c <_obstack_memory_used@@Base+0x931c>
  41cb04:	mov	x19, x0
  41cb08:	b	41caa0 <_obstack_memory_used@@Base+0x93a0>
  41cb0c:	stp	x29, x30, [sp, #-112]!
  41cb10:	mov	x29, sp
  41cb14:	stp	x21, x22, [sp, #32]
  41cb18:	mov	x22, x5
  41cb1c:	ldr	x21, [x1]
  41cb20:	stp	x19, x20, [sp, #16]
  41cb24:	mov	x20, x2
  41cb28:	stp	x23, x24, [sp, #48]
  41cb2c:	mov	x23, x0
  41cb30:	mov	x24, x1
  41cb34:	stp	x25, x26, [sp, #64]
  41cb38:	mov	x25, x3
  41cb3c:	mov	x26, x4
  41cb40:	stp	x27, x28, [sp, #80]
  41cb44:	ldr	x27, [x21, #168]
  41cb48:	bl	41c9d0 <_obstack_memory_used@@Base+0x92d0>
  41cb4c:	mov	x19, x0
  41cb50:	ldr	w0, [x22]
  41cb54:	cbz	w0, 41cbb8 <_obstack_memory_used@@Base+0x94b8>
  41cb58:	cbnz	x19, 41cbb8 <_obstack_memory_used@@Base+0x94b8>
  41cb5c:	mov	x19, #0x0                   	// #0
  41cb60:	mov	x0, x19
  41cb64:	ldp	x19, x20, [sp, #16]
  41cb68:	ldp	x21, x22, [sp, #32]
  41cb6c:	ldp	x23, x24, [sp, #48]
  41cb70:	ldp	x25, x26, [sp, #64]
  41cb74:	ldp	x27, x28, [sp, #80]
  41cb78:	ldp	x29, x30, [sp], #112
  41cb7c:	ret
  41cb80:	ldr	x0, [x21, #168]
  41cb84:	orr	x0, x0, x6
  41cb88:	str	x0, [x21, #168]
  41cb8c:	mov	x1, x19
  41cb90:	mov	x0, x21
  41cb94:	mov	w3, #0xa                   	// #10
  41cb98:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41cb9c:	mov	x19, x0
  41cba0:	cbnz	x0, 41cbbc <_obstack_memory_used@@Base+0x94bc>
  41cba4:	mov	w0, #0xc                   	// #12
  41cba8:	str	w0, [x22]
  41cbac:	b	41cb60 <_obstack_memory_used@@Base+0x9460>
  41cbb0:	mov	x2, #0x0                   	// #0
  41cbb4:	b	41cb8c <_obstack_memory_used@@Base+0x948c>
  41cbb8:	orr	x28, x25, #0x800000
  41cbbc:	ldrb	w0, [x20, #8]
  41cbc0:	cmp	w0, #0xa
  41cbc4:	b.ne	41cb60 <_obstack_memory_used@@Base+0x9460>  // b.any
  41cbc8:	mov	x1, x23
  41cbcc:	mov	x0, x20
  41cbd0:	mov	x2, x28
  41cbd4:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41cbd8:	ldrb	w0, [x20, #8]
  41cbdc:	and	w1, w0, #0xfffffff7
  41cbe0:	cmp	w1, #0x2
  41cbe4:	b.eq	41cbb0 <_obstack_memory_used@@Base+0x94b0>  // b.none
  41cbe8:	cbz	x26, 41cbf4 <_obstack_memory_used@@Base+0x94f4>
  41cbec:	cmp	w0, #0x9
  41cbf0:	b.eq	41cbb0 <_obstack_memory_used@@Base+0x94b0>  // b.none
  41cbf4:	ldr	x6, [x21, #168]
  41cbf8:	str	x27, [x21, #168]
  41cbfc:	mov	x2, x20
  41cc00:	mov	x5, x22
  41cc04:	mov	x4, x26
  41cc08:	mov	x3, x25
  41cc0c:	mov	x1, x24
  41cc10:	mov	x0, x23
  41cc14:	str	x6, [sp, #104]
  41cc18:	bl	41c9d0 <_obstack_memory_used@@Base+0x92d0>
  41cc1c:	mov	x2, x0
  41cc20:	ldr	w0, [x22]
  41cc24:	ldr	x6, [sp, #104]
  41cc28:	cbz	w0, 41cb80 <_obstack_memory_used@@Base+0x9480>
  41cc2c:	cbnz	x2, 41cb80 <_obstack_memory_used@@Base+0x9480>
  41cc30:	cbz	x19, 41cb5c <_obstack_memory_used@@Base+0x945c>
  41cc34:	mov	x0, x19
  41cc38:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41cc3c:	add	x1, x1, #0x8f4
  41cc40:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41cc44:	b	41cb5c <_obstack_memory_used@@Base+0x945c>
  41cc48:	stp	x29, x30, [sp, #-304]!
  41cc4c:	mov	x29, sp
  41cc50:	stp	x19, x20, [sp, #16]
  41cc54:	mov	x20, x0
  41cc58:	stp	x21, x22, [sp, #32]
  41cc5c:	mov	x21, x2
  41cc60:	mov	x22, x3
  41cc64:	stp	x23, x24, [sp, #48]
  41cc68:	mov	x24, x1
  41cc6c:	mov	w1, #0xffffff90            	// #-112
  41cc70:	stp	x25, x26, [sp, #64]
  41cc74:	stp	x27, x28, [sp, #80]
  41cc78:	str	xzr, [x0, #16]
  41cc7c:	str	x3, [x0, #24]
  41cc80:	str	xzr, [x0, #48]
  41cc84:	ldr	x19, [x0]
  41cc88:	str	wzr, [sp, #120]
  41cc8c:	ldrb	w0, [x0, #56]
  41cc90:	and	w0, w0, w1
  41cc94:	strb	w0, [x20, #56]
  41cc98:	ldr	x0, [x20, #8]
  41cc9c:	cmp	x0, #0xe7
  41cca0:	b.hi	41ccc0 <_obstack_memory_used@@Base+0x95c0>  // b.pmore
  41cca4:	mov	x0, x19
  41cca8:	mov	x1, #0xe8                  	// #232
  41ccac:	bl	402640 <realloc@plt>
  41ccb0:	mov	x19, x0
  41ccb4:	cbz	x0, 41d678 <_obstack_memory_used@@Base+0x9f78>
  41ccb8:	mov	x0, #0xe8                  	// #232
  41ccbc:	stp	x19, x0, [x20]
  41ccc0:	mov	x2, #0xe8                  	// #232
  41ccc4:	str	x2, [x20, #16]
  41ccc8:	mov	x0, x19
  41cccc:	mov	w1, #0x0                   	// #0
  41ccd0:	bl	4025f0 <memset@plt>
  41ccd4:	mov	w0, #0xf                   	// #15
  41ccd8:	str	w0, [x19, #128]
  41ccdc:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  41cce0:	movk	x0, #0x555, lsl #48
  41cce4:	cmp	x21, x0
  41cce8:	b.cs	41cde0 <_obstack_memory_used@@Base+0x96e0>  // b.hs, b.nlast
  41ccec:	add	x25, x21, #0x1
  41ccf0:	str	x25, [x19, #8]
  41ccf4:	mov	x23, #0x1                   	// #1
  41ccf8:	lsl	x0, x25, #4
  41ccfc:	bl	402520 <malloc@plt>
  41cd00:	str	x0, [x19]
  41cd04:	cmp	x21, x23
  41cd08:	b.cc	41cd14 <_obstack_memory_used@@Base+0x9614>  // b.lo, b.ul, b.last
  41cd0c:	lsl	x23, x23, #1
  41cd10:	b	41cd04 <_obstack_memory_used@@Base+0x9604>
  41cd14:	mov	x1, x23
  41cd18:	mov	x0, #0x18                  	// #24
  41cd1c:	sub	x23, x23, #0x1
  41cd20:	bl	402610 <calloc@plt>
  41cd24:	str	x0, [x19, #64]
  41cd28:	str	x23, [x19, #136]
  41cd2c:	bl	4027b0 <__ctype_get_mb_cur_max@plt>
  41cd30:	str	w0, [x19, #180]
  41cd34:	mov	w0, #0xe                   	// #14
  41cd38:	bl	4024e0 <nl_langinfo@plt>
  41cd3c:	ldrb	w1, [x0]
  41cd40:	and	w1, w1, #0xffffffdf
  41cd44:	and	w1, w1, #0xff
  41cd48:	cmp	w1, #0x55
  41cd4c:	b.ne	41cda8 <_obstack_memory_used@@Base+0x96a8>  // b.any
  41cd50:	ldrb	w1, [x0, #1]
  41cd54:	and	w1, w1, #0xffffffdf
  41cd58:	and	w1, w1, #0xff
  41cd5c:	cmp	w1, #0x54
  41cd60:	b.ne	41cda8 <_obstack_memory_used@@Base+0x96a8>  // b.any
  41cd64:	ldrb	w1, [x0, #2]
  41cd68:	and	w1, w1, #0xffffffdf
  41cd6c:	and	w1, w1, #0xff
  41cd70:	cmp	w1, #0x46
  41cd74:	b.ne	41cda8 <_obstack_memory_used@@Base+0x96a8>  // b.any
  41cd78:	ldrb	w1, [x0, #3]
  41cd7c:	cmp	w1, #0x2d
  41cd80:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41cd84:	cset	x2, eq  // eq = none
  41cd88:	add	x1, x1, #0x36a
  41cd8c:	add	x2, x2, #0x3
  41cd90:	add	x0, x0, x2
  41cd94:	bl	402780 <strcmp@plt>
  41cd98:	cbnz	w0, 41cda8 <_obstack_memory_used@@Base+0x96a8>
  41cd9c:	ldrb	w0, [x19, #176]
  41cda0:	orr	w0, w0, #0x4
  41cda4:	strb	w0, [x19, #176]
  41cda8:	ldrb	w0, [x19, #176]
  41cdac:	and	w1, w0, #0xfffffff7
  41cdb0:	strb	w1, [x19, #176]
  41cdb4:	ldr	w1, [x19, #180]
  41cdb8:	cmp	w1, #0x1
  41cdbc:	b.le	41cdd0 <_obstack_memory_used@@Base+0x96d0>
  41cdc0:	tbz	w0, #2, 41cdf8 <_obstack_memory_used@@Base+0x96f8>
  41cdc4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41cdc8:	add	x0, x0, #0x140
  41cdcc:	str	x0, [x19, #120]
  41cdd0:	ldr	x0, [x19]
  41cdd4:	cbz	x0, 41cde0 <_obstack_memory_used@@Base+0x96e0>
  41cdd8:	ldr	x0, [x19, #64]
  41cddc:	cbnz	x0, 41ce80 <_obstack_memory_used@@Base+0x9780>
  41cde0:	mov	w0, #0xc                   	// #12
  41cde4:	str	w0, [sp, #120]
  41cde8:	mov	x0, x19
  41cdec:	bl	414bf0 <_obstack_memory_used@@Base+0x14f0>
  41cdf0:	stp	xzr, xzr, [x20]
  41cdf4:	b	41d478 <_obstack_memory_used@@Base+0x9d78>
  41cdf8:	mov	x1, #0x1                   	// #1
  41cdfc:	mov	x0, #0x20                  	// #32
  41ce00:	bl	402610 <calloc@plt>
  41ce04:	str	x0, [x19, #120]
  41ce08:	cbz	x0, 41cde0 <_obstack_memory_used@@Base+0x96e0>
  41ce0c:	mov	x27, #0x0                   	// #0
  41ce10:	mov	w26, #0x0                   	// #0
  41ce14:	mov	w23, #0x0                   	// #0
  41ce18:	add	w28, w26, w23
  41ce1c:	mov	w0, w28
  41ce20:	bl	4026e0 <btowc@plt>
  41ce24:	mov	x4, #0x1                   	// #1
  41ce28:	cmn	w0, #0x1
  41ce2c:	b.eq	41ce44 <_obstack_memory_used@@Base+0x9744>  // b.none
  41ce30:	ldr	x3, [x19, #120]
  41ce34:	lsl	x1, x4, x23
  41ce38:	ldr	x2, [x3, x27]
  41ce3c:	orr	x1, x2, x1
  41ce40:	str	x1, [x3, x27]
  41ce44:	tst	w28, #0xffffff80
  41ce48:	b.ne	41ce60 <_obstack_memory_used@@Base+0x9760>  // b.any
  41ce4c:	cmp	w0, w28
  41ce50:	b.eq	41ce60 <_obstack_memory_used@@Base+0x9760>  // b.none
  41ce54:	ldrb	w0, [x19, #176]
  41ce58:	orr	w0, w0, #0x8
  41ce5c:	strb	w0, [x19, #176]
  41ce60:	add	w23, w23, #0x1
  41ce64:	cmp	w23, #0x40
  41ce68:	b.ne	41ce18 <_obstack_memory_used@@Base+0x9718>  // b.any
  41ce6c:	add	w26, w26, #0x40
  41ce70:	add	x27, x27, #0x8
  41ce74:	cmp	w26, #0x100
  41ce78:	b.ne	41ce14 <_obstack_memory_used@@Base+0x9714>  // b.any
  41ce7c:	b	41cdd0 <_obstack_memory_used@@Base+0x96d0>
  41ce80:	ldr	x27, [x20, #40]
  41ce84:	and	x23, x22, #0x400000
  41ce88:	mov	w1, #0x0                   	// #0
  41ce8c:	add	x0, sp, #0xa0
  41ce90:	mov	x2, #0x90                  	// #144
  41ce94:	str	wzr, [sp, #120]
  41ce98:	bl	4025f0 <memset@plt>
  41ce9c:	orr	x26, x27, x23
  41cea0:	cmp	x23, #0x0
  41cea4:	str	x24, [sp, #152]
  41cea8:	cset	w0, ne  // ne = any
  41ceac:	cmp	x26, #0x0
  41ceb0:	strb	w0, [sp, #288]
  41ceb4:	cset	w0, ne  // ne = any
  41ceb8:	strb	w0, [sp, #291]
  41cebc:	ldr	w0, [x19, #180]
  41cec0:	str	w0, [sp, #296]
  41cec4:	ldrb	w0, [x19, #176]
  41cec8:	stp	x21, x21, [sp, #232]
  41cecc:	ubfx	x1, x0, #2, #1
  41ced0:	ubfx	x0, x0, #3, #1
  41ced4:	stp	x21, x21, [sp, #248]
  41ced8:	str	x27, [sp, #272]
  41cedc:	strb	w1, [sp, #289]
  41cee0:	strb	w0, [sp, #290]
  41cee4:	cbnz	x21, 41cf48 <_obstack_memory_used@@Base+0x9848>
  41cee8:	ldrb	w0, [sp, #291]
  41ceec:	cbnz	w0, 41cf90 <_obstack_memory_used@@Base+0x9890>
  41cef0:	ldr	w0, [x19, #180]
  41cef4:	str	x24, [sp, #160]
  41cef8:	cmp	w0, #0x1
  41cefc:	cbz	x23, 41d044 <_obstack_memory_used@@Base+0x9944>
  41cf00:	b.le	41cf98 <_obstack_memory_used@@Base+0x9898>
  41cf04:	add	x0, sp, #0x98
  41cf08:	bl	4141a8 <_obstack_memory_used@@Base+0xaa8>
  41cf0c:	cbnz	w0, 41cf58 <_obstack_memory_used@@Base+0x9858>
  41cf10:	ldr	x1, [sp, #208]
  41cf14:	cmp	x21, x1
  41cf18:	b.le	41cf58 <_obstack_memory_used@@Base+0x9858>
  41cf1c:	ldr	x3, [sp, #200]
  41cf20:	ldrsw	x2, [x19, #180]
  41cf24:	ldr	x1, [sp, #216]
  41cf28:	add	x2, x2, x3
  41cf2c:	cmp	x1, x2
  41cf30:	b.gt	41cf58 <_obstack_memory_used@@Base+0x9858>
  41cf34:	lsl	x1, x1, #1
  41cf38:	add	x0, sp, #0x98
  41cf3c:	bl	413eac <_obstack_memory_used@@Base+0x7ac>
  41cf40:	cbz	w0, 41cf04 <_obstack_memory_used@@Base+0x9804>
  41cf44:	b	41cf58 <_obstack_memory_used@@Base+0x9858>
  41cf48:	mov	x1, x25
  41cf4c:	add	x0, sp, #0x98
  41cf50:	bl	413eac <_obstack_memory_used@@Base+0x7ac>
  41cf54:	cbz	w0, 41cee8 <_obstack_memory_used@@Base+0x97e8>
  41cf58:	str	w0, [sp, #120]
  41cf5c:	cbz	w0, 41cfa4 <_obstack_memory_used@@Base+0x98a4>
  41cf60:	ldr	x21, [x20]
  41cf64:	ldr	x0, [x21, #112]
  41cf68:	cbnz	x0, 41d070 <_obstack_memory_used@@Base+0x9970>
  41cf6c:	mov	w0, #0xf                   	// #15
  41cf70:	str	w0, [x21, #128]
  41cf74:	ldr	x0, [x21, #32]
  41cf78:	stp	xzr, xzr, [x21, #104]
  41cf7c:	bl	4027a0 <free@plt>
  41cf80:	str	xzr, [x21, #32]
  41cf84:	add	x0, sp, #0x98
  41cf88:	bl	414bac <_obstack_memory_used@@Base+0x14ac>
  41cf8c:	b	41cde8 <_obstack_memory_used@@Base+0x96e8>
  41cf90:	ldr	x24, [sp, #160]
  41cf94:	b	41cef0 <_obstack_memory_used@@Base+0x97f0>
  41cf98:	add	x0, sp, #0x98
  41cf9c:	bl	414690 <_obstack_memory_used@@Base+0xf90>
  41cfa0:	str	wzr, [sp, #120]
  41cfa4:	ldr	x24, [x20]
  41cfa8:	str	xzr, [x20, #48]
  41cfac:	orr	x2, x22, #0x800000
  41cfb0:	add	x1, sp, #0x98
  41cfb4:	add	x0, sp, #0x80
  41cfb8:	str	x22, [x24, #216]
  41cfbc:	bl	417b18 <_obstack_memory_used@@Base+0x4418>
  41cfc0:	mov	x3, x22
  41cfc4:	add	x5, sp, #0x78
  41cfc8:	add	x2, sp, #0x80
  41cfcc:	mov	x1, x20
  41cfd0:	add	x0, sp, #0x98
  41cfd4:	mov	x4, #0x0                   	// #0
  41cfd8:	bl	41cb0c <_obstack_memory_used@@Base+0x940c>
  41cfdc:	mov	x22, x0
  41cfe0:	ldr	w0, [sp, #120]
  41cfe4:	cbz	w0, 41cfec <_obstack_memory_used@@Base+0x98ec>
  41cfe8:	cbz	x22, 41d03c <_obstack_memory_used@@Base+0x993c>
  41cfec:	mov	x0, x24
  41cff0:	mov	w3, #0x2                   	// #2
  41cff4:	mov	x2, #0x0                   	// #0
  41cff8:	mov	x1, #0x0                   	// #0
  41cffc:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41d000:	mov	x21, x0
  41d004:	cbz	x22, 41d01c <_obstack_memory_used@@Base+0x991c>
  41d008:	mov	x2, x0
  41d00c:	mov	x1, x22
  41d010:	mov	x0, x24
  41d014:	mov	w3, #0x10                  	// #16
  41d018:	bl	415f88 <_obstack_memory_used@@Base+0x2888>
  41d01c:	cmp	x21, #0x0
  41d020:	cset	w25, eq  // eq = none
  41d024:	cmp	x0, #0x0
  41d028:	csinc	w25, w25, wzr, ne  // ne = any
  41d02c:	ldr	x21, [x20]
  41d030:	cbz	w25, 41d080 <_obstack_memory_used@@Base+0x9980>
  41d034:	mov	w0, #0xc                   	// #12
  41d038:	str	w0, [sp, #120]
  41d03c:	str	xzr, [x19, #104]
  41d040:	b	41cf60 <_obstack_memory_used@@Base+0x9860>
  41d044:	b.le	41d054 <_obstack_memory_used@@Base+0x9954>
  41d048:	add	x0, sp, #0x98
  41d04c:	bl	414038 <_obstack_memory_used@@Base+0x938>
  41d050:	b	41cfa0 <_obstack_memory_used@@Base+0x98a0>
  41d054:	cbz	x26, 41d064 <_obstack_memory_used@@Base+0x9964>
  41d058:	add	x0, sp, #0x98
  41d05c:	bl	4137d0 <_obstack_memory_used@@Base+0xd0>
  41d060:	b	41cfa0 <_obstack_memory_used@@Base+0x98a0>
  41d064:	ldr	x0, [sp, #216]
  41d068:	stp	x0, x0, [sp, #200]
  41d06c:	b	41cfa0 <_obstack_memory_used@@Base+0x98a0>
  41d070:	ldr	x22, [x0]
  41d074:	bl	4027a0 <free@plt>
  41d078:	mov	x0, x22
  41d07c:	b	41cf68 <_obstack_memory_used@@Base+0x9868>
  41d080:	ldr	x22, [x21, #8]
  41d084:	str	x0, [x19, #104]
  41d088:	lsl	x24, x22, #3
  41d08c:	mov	x0, x24
  41d090:	bl	402520 <malloc@plt>
  41d094:	mov	x27, x0
  41d098:	str	x27, [x21, #24]
  41d09c:	mov	x0, x24
  41d0a0:	bl	402520 <malloc@plt>
  41d0a4:	mov	x26, x0
  41d0a8:	mov	x0, #0x18                  	// #24
  41d0ac:	str	x26, [x21, #32]
  41d0b0:	mul	x22, x22, x0
  41d0b4:	mov	x0, x22
  41d0b8:	bl	402520 <malloc@plt>
  41d0bc:	mov	x24, x0
  41d0c0:	str	x24, [x21, #40]
  41d0c4:	mov	x0, x22
  41d0c8:	bl	402520 <malloc@plt>
  41d0cc:	str	x0, [x21, #48]
  41d0d0:	cbnz	x27, 41d0e0 <_obstack_memory_used@@Base+0x99e0>
  41d0d4:	mov	w0, #0xc                   	// #12
  41d0d8:	str	w0, [sp, #120]
  41d0dc:	b	41cf60 <_obstack_memory_used@@Base+0x9860>
  41d0e0:	cbz	x26, 41d0d4 <_obstack_memory_used@@Base+0x99d4>
  41d0e4:	cbz	x24, 41d0d4 <_obstack_memory_used@@Base+0x99d4>
  41d0e8:	cbz	x0, 41d0d4 <_obstack_memory_used@@Base+0x99d4>
  41d0ec:	ldr	x22, [x20, #48]
  41d0f0:	lsl	x0, x22, #3
  41d0f4:	bl	402520 <malloc@plt>
  41d0f8:	str	x0, [x21, #224]
  41d0fc:	cbz	x0, 41d13c <_obstack_memory_used@@Base+0x9a3c>
  41d100:	mov	x1, #0x0                   	// #0
  41d104:	cmp	x22, x1
  41d108:	b.ne	41d204 <_obstack_memory_used@@Base+0x9b04>  // b.any
  41d10c:	ldr	x0, [x21, #104]
  41d110:	mov	x2, x21
  41d114:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1900>
  41d118:	add	x1, x1, #0xd38
  41d11c:	bl	413e38 <_obstack_memory_used@@Base+0x738>
  41d120:	ldr	x1, [x20, #48]
  41d124:	mov	x0, #0x0                   	// #0
  41d128:	cmp	x0, x1
  41d12c:	b.ne	41d210 <_obstack_memory_used@@Base+0x9b10>  // b.any
  41d130:	ldr	x0, [x21, #224]
  41d134:	bl	4027a0 <free@plt>
  41d138:	str	xzr, [x21, #224]
  41d13c:	ldr	x0, [x21, #104]
  41d140:	mov	x2, x20
  41d144:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2900>
  41d148:	add	x1, x1, #0xd0
  41d14c:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41d150:	mov	w22, w0
  41d154:	cbnz	w0, 41d1f8 <_obstack_memory_used@@Base+0x9af8>
  41d158:	ldr	x0, [x21, #104]
  41d15c:	mov	x2, x21
  41d160:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3900>
  41d164:	add	x1, x1, #0x26c
  41d168:	bl	413dcc <_obstack_memory_used@@Base+0x6cc>
  41d16c:	mov	w22, w0
  41d170:	cbnz	w0, 41d1f8 <_obstack_memory_used@@Base+0x9af8>
  41d174:	ldr	x0, [x21, #104]
  41d178:	mov	x2, x21
  41d17c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1900>
  41d180:	add	x1, x1, #0xdd4
  41d184:	bl	413e38 <_obstack_memory_used@@Base+0x738>
  41d188:	ldr	x0, [x21, #104]
  41d18c:	mov	x2, x21
  41d190:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x900>
  41d194:	add	x1, x1, #0xdf8
  41d198:	bl	413e38 <_obstack_memory_used@@Base+0x738>
  41d19c:	mov	w22, w0
  41d1a0:	cbnz	w0, 41d1f8 <_obstack_memory_used@@Base+0x9af8>
  41d1a4:	mov	w27, #0x0                   	// #0
  41d1a8:	mov	x24, #0x0                   	// #0
  41d1ac:	mov	x26, #0x18                  	// #24
  41d1b0:	ldr	x0, [x21, #16]
  41d1b4:	cmp	x0, x24
  41d1b8:	b.ne	41d1c8 <_obstack_memory_used@@Base+0x9ac8>  // b.any
  41d1bc:	cbz	w27, 41d24c <_obstack_memory_used@@Base+0x9b4c>
  41d1c0:	mov	w27, #0x0                   	// #0
  41d1c4:	mov	x24, #0x0                   	// #0
  41d1c8:	ldr	x0, [x21, #48]
  41d1cc:	mul	x28, x24, x26
  41d1d0:	add	x0, x0, x28
  41d1d4:	ldr	x0, [x0, #8]
  41d1d8:	cbnz	x0, 41d244 <_obstack_memory_used@@Base+0x9b44>
  41d1dc:	mov	x2, x24
  41d1e0:	mov	x1, x21
  41d1e4:	add	x0, sp, #0x80
  41d1e8:	mov	w3, #0x1                   	// #1
  41d1ec:	bl	41697c <_obstack_memory_used@@Base+0x327c>
  41d1f0:	cbz	w0, 41d228 <_obstack_memory_used@@Base+0x9b28>
  41d1f4:	mov	w22, w0
  41d1f8:	str	w22, [sp, #120]
  41d1fc:	cbz	w22, 41d260 <_obstack_memory_used@@Base+0x9b60>
  41d200:	b	41cf60 <_obstack_memory_used@@Base+0x9860>
  41d204:	str	x1, [x0, x1, lsl #3]
  41d208:	add	x1, x1, #0x1
  41d20c:	b	41d104 <_obstack_memory_used@@Base+0x9a04>
  41d210:	ldr	x2, [x21, #224]
  41d214:	ldr	x2, [x2, x0, lsl #3]
  41d218:	cmp	x2, x0
  41d21c:	b.ne	41d13c <_obstack_memory_used@@Base+0x9a3c>  // b.any
  41d220:	add	x0, x0, #0x1
  41d224:	b	41d128 <_obstack_memory_used@@Base+0x9a28>
  41d228:	ldr	x0, [x21, #48]
  41d22c:	add	x0, x0, x28
  41d230:	ldr	x0, [x0, #8]
  41d234:	cbnz	x0, 41d244 <_obstack_memory_used@@Base+0x9b44>
  41d238:	ldr	x0, [sp, #144]
  41d23c:	mov	w27, #0x1                   	// #1
  41d240:	bl	4027a0 <free@plt>
  41d244:	add	x24, x24, #0x1
  41d248:	b	41d1b0 <_obstack_memory_used@@Base+0x9ab0>
  41d24c:	ldrb	w0, [x20, #56]
  41d250:	tbz	w0, #4, 41d2d4 <_obstack_memory_used@@Base+0x9bd4>
  41d254:	ldr	x0, [x21, #152]
  41d258:	cbnz	x0, 41d2e4 <_obstack_memory_used@@Base+0x9be4>
  41d25c:	str	wzr, [sp, #120]
  41d260:	ldrb	w0, [x19, #176]
  41d264:	tbz	w0, #2, 41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d268:	cbnz	x23, 41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d26c:	ldr	x0, [x20, #40]
  41d270:	cbnz	x0, 41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d274:	ldr	x6, [x19, #16]
  41d278:	adrp	x4, 421000 <_obstack_memory_used@@Base+0xd900>
  41d27c:	mov	x7, #0x1                   	// #1
  41d280:	mov	w8, #0x10001               	// #65537
  41d284:	add	x4, x4, #0x134
  41d288:	mov	w9, w7
  41d28c:	mov	w1, #0x0                   	// #0
  41d290:	mov	x2, #0x0                   	// #0
  41d294:	movk	x8, #0x1, lsl #48
  41d298:	cmp	x2, x6
  41d29c:	b.ne	41d398 <_obstack_memory_used@@Base+0x9c98>  // b.any
  41d2a0:	cmp	w25, #0x0
  41d2a4:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  41d2a8:	b.ne	41d52c <_obstack_memory_used@@Base+0x9e2c>  // b.any
  41d2ac:	ldr	x3, [x19, #152]
  41d2b0:	mov	w2, #0x1                   	// #1
  41d2b4:	ldrb	w0, [x19, #176]
  41d2b8:	cmp	x3, #0x0
  41d2bc:	str	w2, [x19, #180]
  41d2c0:	and	w0, w0, #0xfffffffb
  41d2c4:	csel	w1, w1, w2, le
  41d2c8:	bfi	w0, w1, #1, #1
  41d2cc:	strb	w0, [x19, #176]
  41d2d0:	b	41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d2d4:	ldr	x0, [x20, #48]
  41d2d8:	cbz	x0, 41d254 <_obstack_memory_used@@Base+0x9b54>
  41d2dc:	ldrb	w0, [x21, #176]
  41d2e0:	tbz	w0, #0, 41d254 <_obstack_memory_used@@Base+0x9b54>
  41d2e4:	mov	x26, #0x18                  	// #24
  41d2e8:	mul	x0, x24, x26
  41d2ec:	bl	402520 <malloc@plt>
  41d2f0:	str	x0, [x21, #56]
  41d2f4:	cbz	x0, 41d0d4 <_obstack_memory_used@@Base+0x99d4>
  41d2f8:	mov	x0, #0x0                   	// #0
  41d2fc:	ldr	x1, [x21, #16]
  41d300:	cmp	x0, x1
  41d304:	b.cc	41d34c <_obstack_memory_used@@Base+0x9c4c>  // b.lo, b.ul, b.last
  41d308:	mov	x24, #0x0                   	// #0
  41d30c:	mov	x27, #0x18                  	// #24
  41d310:	ldr	x0, [x21, #16]
  41d314:	cmp	x0, x24
  41d318:	b.ls	41d1f8 <_obstack_memory_used@@Base+0x9af8>  // b.plast
  41d31c:	ldr	x0, [x21, #48]
  41d320:	mul	x28, x24, x27
  41d324:	mov	x26, #0x0                   	// #0
  41d328:	add	x0, x0, x28
  41d32c:	ldr	x2, [x0, #16]
  41d330:	ldr	x0, [x21, #48]
  41d334:	add	x0, x0, x28
  41d338:	ldr	x0, [x0, #8]
  41d33c:	cmp	x26, x0
  41d340:	b.lt	41d364 <_obstack_memory_used@@Base+0x9c64>  // b.tstop
  41d344:	add	x24, x24, #0x1
  41d348:	b	41d310 <_obstack_memory_used@@Base+0x9c10>
  41d34c:	ldr	x1, [x21, #56]
  41d350:	madd	x1, x0, x26, x1
  41d354:	add	x0, x0, #0x1
  41d358:	stp	xzr, xzr, [x1]
  41d35c:	str	xzr, [x1, #16]
  41d360:	b	41d2fc <_obstack_memory_used@@Base+0x9bfc>
  41d364:	ldr	x3, [x2, x26, lsl #3]
  41d368:	mov	x1, x24
  41d36c:	ldr	x0, [x21, #56]
  41d370:	str	x2, [sp, #104]
  41d374:	madd	x0, x3, x27, x0
  41d378:	bl	413f3c <_obstack_memory_used@@Base+0x83c>
  41d37c:	tst	w0, #0xff
  41d380:	b.eq	41d390 <_obstack_memory_used@@Base+0x9c90>  // b.none
  41d384:	add	x26, x26, #0x1
  41d388:	ldr	x2, [sp, #104]
  41d38c:	b	41d330 <_obstack_memory_used@@Base+0x9c30>
  41d390:	mov	w22, #0xc                   	// #12
  41d394:	b	41d1f8 <_obstack_memory_used@@Base+0x9af8>
  41d398:	ldr	x0, [x19]
  41d39c:	lsl	x5, x2, #4
  41d3a0:	add	x3, x0, x2, lsl #4
  41d3a4:	ldrb	w3, [x3, #8]
  41d3a8:	sub	w3, w3, #0x1
  41d3ac:	cmp	w3, #0xb
  41d3b0:	b.hi	41d4dc <_obstack_memory_used@@Base+0x9ddc>  // b.pmore
  41d3b4:	ldrb	w3, [x4, w3, uxtw]
  41d3b8:	adr	x10, 41d3c4 <_obstack_memory_used@@Base+0x9cc4>
  41d3bc:	add	x3, x10, w3, sxtb #2
  41d3c0:	br	x3
  41d3c4:	mov	w1, #0x1                   	// #1
  41d3c8:	add	x2, x2, #0x1
  41d3cc:	b	41d298 <_obstack_memory_used@@Base+0x9b98>
  41d3d0:	ldr	x0, [x0, x5]
  41d3d4:	ldr	x3, [x0, #16]
  41d3d8:	cbnz	x3, 41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d3dc:	ldr	x0, [x0, #24]
  41d3e0:	cbz	x0, 41d3c8 <_obstack_memory_used@@Base+0x9cc8>
  41d3e4:	ldr	x0, [x19, #104]
  41d3e8:	mov	x22, #0x18                  	// #24
  41d3ec:	ldr	x1, [x19, #48]
  41d3f0:	ldr	x0, [x0, #24]
  41d3f4:	ldr	x0, [x0, #56]
  41d3f8:	str	x0, [x19, #144]
  41d3fc:	madd	x1, x0, x22, x1
  41d400:	add	x0, sp, #0x80
  41d404:	bl	416b70 <_obstack_memory_used@@Base+0x3470>
  41d408:	str	w0, [sp, #124]
  41d40c:	mov	w21, w0
  41d410:	cbnz	w0, 41d440 <_obstack_memory_used@@Base+0x9d40>
  41d414:	ldr	x0, [x19, #152]
  41d418:	cmp	x0, #0x0
  41d41c:	b.gt	41d5dc <_obstack_memory_used@@Base+0x9edc>
  41d420:	add	x2, sp, #0x80
  41d424:	mov	x1, x19
  41d428:	add	x0, sp, #0x7c
  41d42c:	mov	w3, #0x0                   	// #0
  41d430:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41d434:	str	x0, [x19, #72]
  41d438:	cbnz	x0, 41d5e4 <_obstack_memory_used@@Base+0x9ee4>
  41d43c:	ldr	w21, [sp, #124]
  41d440:	str	w21, [sp, #120]
  41d444:	ldr	x21, [x20]
  41d448:	ldr	x0, [x21, #112]
  41d44c:	cbnz	x0, 41d668 <_obstack_memory_used@@Base+0x9f68>
  41d450:	mov	w0, #0xf                   	// #15
  41d454:	str	w0, [x21, #128]
  41d458:	ldr	x0, [x21, #32]
  41d45c:	stp	xzr, xzr, [x21, #104]
  41d460:	bl	4027a0 <free@plt>
  41d464:	str	xzr, [x21, #32]
  41d468:	add	x0, sp, #0x98
  41d46c:	bl	414bac <_obstack_memory_used@@Base+0x14ac>
  41d470:	ldr	w0, [sp, #120]
  41d474:	cbnz	w0, 41cde8 <_obstack_memory_used@@Base+0x96e8>
  41d478:	ldr	w0, [sp, #120]
  41d47c:	ldp	x19, x20, [sp, #16]
  41d480:	ldp	x21, x22, [sp, #32]
  41d484:	ldp	x23, x24, [sp, #48]
  41d488:	ldp	x25, x26, [sp, #64]
  41d48c:	ldp	x27, x28, [sp, #80]
  41d490:	ldp	x29, x30, [sp], #304
  41d494:	ret
  41d498:	ldrsb	w0, [x0, x5]
  41d49c:	cmp	w0, #0x0
  41d4a0:	csel	w25, w25, w9, ge  // ge = tcont
  41d4a4:	b	41d3c8 <_obstack_memory_used@@Base+0x9cc8>
  41d4a8:	ldr	w0, [x0, x5]
  41d4ac:	cmp	w0, #0x40
  41d4b0:	b.hi	41d4d0 <_obstack_memory_used@@Base+0x9dd0>  // b.pmore
  41d4b4:	cmp	w0, #0xf
  41d4b8:	b.ls	41d3e4 <_obstack_memory_used@@Base+0x9ce4>  // b.plast
  41d4bc:	sub	w0, w0, #0x10
  41d4c0:	lsl	x0, x7, x0
  41d4c4:	tst	x0, x8
  41d4c8:	b.eq	41d3e4 <_obstack_memory_used@@Base+0x9ce4>  // b.none
  41d4cc:	b	41d3c8 <_obstack_memory_used@@Base+0x9cc8>
  41d4d0:	cmp	w0, #0x80
  41d4d4:	b.eq	41d3c8 <_obstack_memory_used@@Base+0x9cc8>  // b.none
  41d4d8:	b	41d3e4 <_obstack_memory_used@@Base+0x9ce4>
  41d4dc:	bl	4026f0 <abort@plt>
  41d4e0:	ldr	x4, [x19]
  41d4e4:	lsl	x7, x0, #4
  41d4e8:	add	x2, x4, x0, lsl #4
  41d4ec:	ldrb	w3, [x2, #8]
  41d4f0:	cmp	w3, #0x1
  41d4f4:	b.ne	41d51c <_obstack_memory_used@@Base+0x9e1c>  // b.any
  41d4f8:	ldrsb	w3, [x4, x7]
  41d4fc:	tbz	w3, #31, 41d50c <_obstack_memory_used@@Base+0x9e0c>
  41d500:	ldrb	w3, [x2, #10]
  41d504:	and	w3, w3, #0xffffffdf
  41d508:	strb	w3, [x2, #10]
  41d50c:	add	x0, x0, #0x1
  41d510:	cmp	x0, x6
  41d514:	b.ne	41d4e0 <_obstack_memory_used@@Base+0x9de0>  // b.any
  41d518:	b	41d2ac <_obstack_memory_used@@Base+0x9bac>
  41d51c:	cmp	w3, #0x5
  41d520:	b.ne	41d50c <_obstack_memory_used@@Base+0x9e0c>  // b.any
  41d524:	strb	w5, [x2, #8]
  41d528:	b	41d50c <_obstack_memory_used@@Base+0x9e0c>
  41d52c:	mov	x0, #0x0                   	// #0
  41d530:	mov	w5, #0x7                   	// #7
  41d534:	b	41d510 <_obstack_memory_used@@Base+0x9e10>
  41d538:	ldr	x5, [sp, #144]
  41d53c:	ldr	x3, [x19]
  41d540:	ldr	x0, [x5, x6, lsl #3]
  41d544:	add	x7, x3, x0, lsl #4
  41d548:	ldrb	w1, [x7, #8]
  41d54c:	cmp	w1, #0x4
  41d550:	b.ne	41d598 <_obstack_memory_used@@Base+0x9e98>  // b.any
  41d554:	mov	x1, #0x0                   	// #0
  41d558:	cmp	x1, x4
  41d55c:	b.lt	41d5ac <_obstack_memory_used@@Base+0x9eac>  // b.tstop
  41d560:	b.eq	41d598 <_obstack_memory_used@@Base+0x9e98>  // b.none
  41d564:	ldr	x1, [x19, #40]
  41d568:	madd	x0, x0, x22, x1
  41d56c:	ldr	x0, [x0, #16]
  41d570:	ldr	x1, [x0]
  41d574:	add	x0, sp, #0x80
  41d578:	bl	413888 <_obstack_memory_used@@Base+0x188>
  41d57c:	cbnz	x0, 41d598 <_obstack_memory_used@@Base+0x9e98>
  41d580:	ldr	x0, [x19, #48]
  41d584:	madd	x1, x1, x22, x0
  41d588:	add	x0, sp, #0x80
  41d58c:	bl	416810 <_obstack_memory_used@@Base+0x3110>
  41d590:	cbnz	w0, 41d660 <_obstack_memory_used@@Base+0x9f60>
  41d594:	mov	x6, #0x0                   	// #0
  41d598:	add	x6, x6, #0x1
  41d59c:	ldr	x4, [sp, #136]
  41d5a0:	cmp	x6, x4
  41d5a4:	b.lt	41d538 <_obstack_memory_used@@Base+0x9e38>  // b.tstop
  41d5a8:	b	41d420 <_obstack_memory_used@@Base+0x9d20>
  41d5ac:	ldr	x2, [x5, x1, lsl #3]
  41d5b0:	lsl	x8, x2, #4
  41d5b4:	add	x2, x3, x2, lsl #4
  41d5b8:	ldrb	w2, [x2, #8]
  41d5bc:	cmp	w2, #0x9
  41d5c0:	b.ne	41d5d4 <_obstack_memory_used@@Base+0x9ed4>  // b.any
  41d5c4:	ldr	x8, [x3, x8]
  41d5c8:	ldr	x2, [x7]
  41d5cc:	cmp	x8, x2
  41d5d0:	b.eq	41d564 <_obstack_memory_used@@Base+0x9e64>  // b.none
  41d5d4:	add	x1, x1, #0x1
  41d5d8:	b	41d558 <_obstack_memory_used@@Base+0x9e58>
  41d5dc:	mov	x6, #0x0                   	// #0
  41d5e0:	b	41d59c <_obstack_memory_used@@Base+0x9e9c>
  41d5e4:	ldrsb	w1, [x0, #104]
  41d5e8:	tbz	w1, #31, 41d654 <_obstack_memory_used@@Base+0x9f54>
  41d5ec:	add	x2, sp, #0x80
  41d5f0:	mov	x1, x19
  41d5f4:	mov	w3, #0x1                   	// #1
  41d5f8:	add	x0, sp, #0x7c
  41d5fc:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41d600:	str	x0, [x19, #80]
  41d604:	add	x2, sp, #0x80
  41d608:	mov	x1, x19
  41d60c:	mov	w3, #0x2                   	// #2
  41d610:	add	x0, sp, #0x7c
  41d614:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41d618:	str	x0, [x19, #88]
  41d61c:	mov	x1, x19
  41d620:	add	x2, sp, #0x80
  41d624:	add	x0, sp, #0x7c
  41d628:	mov	w3, #0x6                   	// #6
  41d62c:	bl	416d3c <_obstack_memory_used@@Base+0x363c>
  41d630:	str	x0, [x19, #96]
  41d634:	ldr	x1, [x19, #80]
  41d638:	cbz	x1, 41d43c <_obstack_memory_used@@Base+0x9d3c>
  41d63c:	ldr	x1, [x19, #88]
  41d640:	cbz	x1, 41d43c <_obstack_memory_used@@Base+0x9d3c>
  41d644:	cbz	x0, 41d43c <_obstack_memory_used@@Base+0x9d3c>
  41d648:	ldr	x0, [sp, #144]
  41d64c:	bl	4027a0 <free@plt>
  41d650:	b	41d440 <_obstack_memory_used@@Base+0x9d40>
  41d654:	stp	x0, x0, [x19, #80]
  41d658:	str	x0, [x19, #96]
  41d65c:	b	41d648 <_obstack_memory_used@@Base+0x9f48>
  41d660:	mov	w21, w0
  41d664:	b	41d440 <_obstack_memory_used@@Base+0x9d40>
  41d668:	ldr	x22, [x0]
  41d66c:	bl	4027a0 <free@plt>
  41d670:	mov	x0, x22
  41d674:	b	41d44c <_obstack_memory_used@@Base+0x9d4c>
  41d678:	mov	w0, #0xc                   	// #12
  41d67c:	b	41d47c <_obstack_memory_used@@Base+0x9d7c>
  41d680:	stp	x29, x30, [sp, #-16]!
  41d684:	mov	x5, x0
  41d688:	mov	x0, x2
  41d68c:	adrp	x2, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  41d690:	mov	x29, sp
  41d694:	mov	w6, #0x6f                  	// #111
  41d698:	ldr	x3, [x2, #3568]
  41d69c:	ldrb	w2, [x0, #56]
  41d6a0:	ubfx	w4, w3, #25, #1
  41d6a4:	and	w2, w2, w6
  41d6a8:	ubfiz	w4, w4, #4, #4
  41d6ac:	orr	w4, w4, #0xffffff80
  41d6b0:	orr	w4, w4, w2
  41d6b4:	strb	w4, [x0, #56]
  41d6b8:	mov	x2, x1
  41d6bc:	mov	x1, x5
  41d6c0:	bl	41cc48 <_obstack_memory_used@@Base+0x9548>
  41d6c4:	cbz	w0, 41d6f0 <_obstack_memory_used@@Base+0x9ff0>
  41d6c8:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xd900>
  41d6cc:	add	x2, x2, #0x140
  41d6d0:	add	x1, x2, #0x20
  41d6d4:	add	x2, x2, #0x1a0
  41d6d8:	ldp	x29, x30, [sp], #16
  41d6dc:	ldr	x0, [x2, w0, sxtw #3]
  41d6e0:	mov	w2, #0x5                   	// #5
  41d6e4:	add	x1, x1, x0
  41d6e8:	mov	x0, #0x0                   	// #0
  41d6ec:	b	4028e0 <dcgettext@plt>
  41d6f0:	mov	x0, #0x0                   	// #0
  41d6f4:	ldp	x29, x30, [sp], #16
  41d6f8:	ret
  41d6fc:	adrp	x1, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  41d700:	mov	x2, x0
  41d704:	ldr	x0, [x1, #3568]
  41d708:	str	x2, [x1, #3568]
  41d70c:	ret
  41d710:	stp	x29, x30, [sp, #-48]!
  41d714:	mov	x2, #0x100                 	// #256
  41d718:	mov	w1, #0x0                   	// #0
  41d71c:	mov	x29, sp
  41d720:	stp	x19, x20, [sp, #16]
  41d724:	mov	x19, x0
  41d728:	ldr	x20, [x0]
  41d72c:	str	x21, [sp, #32]
  41d730:	ldr	x21, [x0, #32]
  41d734:	mov	x0, x21
  41d738:	bl	4025f0 <memset@plt>
  41d73c:	ldr	x1, [x20, #72]
  41d740:	mov	x0, x19
  41d744:	mov	x2, x21
  41d748:	bl	4156fc <_obstack_memory_used@@Base+0x1ffc>
  41d74c:	ldp	x0, x1, [x20, #72]
  41d750:	cmp	x0, x1
  41d754:	b.eq	41d764 <_obstack_memory_used@@Base+0xa064>  // b.none
  41d758:	mov	x2, x21
  41d75c:	mov	x0, x19
  41d760:	bl	4156fc <_obstack_memory_used@@Base+0x1ffc>
  41d764:	ldr	x0, [x20, #72]
  41d768:	ldr	x1, [x20, #88]
  41d76c:	cmp	x0, x1
  41d770:	b.eq	41d780 <_obstack_memory_used@@Base+0xa080>  // b.none
  41d774:	mov	x2, x21
  41d778:	mov	x0, x19
  41d77c:	bl	4156fc <_obstack_memory_used@@Base+0x1ffc>
  41d780:	ldr	x0, [x20, #72]
  41d784:	ldr	x1, [x20, #96]
  41d788:	cmp	x0, x1
  41d78c:	b.eq	41d79c <_obstack_memory_used@@Base+0xa09c>  // b.none
  41d790:	mov	x2, x21
  41d794:	mov	x0, x19
  41d798:	bl	4156fc <_obstack_memory_used@@Base+0x1ffc>
  41d79c:	ldrb	w0, [x19, #56]
  41d7a0:	ldr	x21, [sp, #32]
  41d7a4:	orr	w0, w0, #0x8
  41d7a8:	strb	w0, [x19, #56]
  41d7ac:	mov	w0, #0x0                   	// #0
  41d7b0:	ldp	x19, x20, [sp, #16]
  41d7b4:	ldp	x29, x30, [sp], #48
  41d7b8:	ret
  41d7bc:	sub	sp, sp, #0x80
  41d7c0:	cmp	x3, #0x0
  41d7c4:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  41d7c8:	stp	x29, x30, [sp, #16]
  41d7cc:	add	x29, sp, #0x10
  41d7d0:	stp	x19, x20, [sp, #32]
  41d7d4:	stp	x21, x22, [sp, #48]
  41d7d8:	mov	x22, x0
  41d7dc:	and	w0, w7, #0xff
  41d7e0:	stp	x23, x24, [sp, #64]
  41d7e4:	add	x21, x3, x4
  41d7e8:	stp	x25, x26, [sp, #80]
  41d7ec:	stp	x27, x28, [sp, #96]
  41d7f0:	str	w0, [sp, #124]
  41d7f4:	b.gt	41da70 <_obstack_memory_used@@Base+0xa370>
  41d7f8:	mov	x26, x1
  41d7fc:	mov	x25, x2
  41d800:	mov	x23, x3
  41d804:	mov	x27, x5
  41d808:	mov	x19, x6
  41d80c:	cmp	x21, x2
  41d810:	b.gt	41d890 <_obstack_memory_used@@Base+0xa190>
  41d814:	cmp	x4, #0x0
  41d818:	ccmp	x3, x21, #0x4, ge  // ge = tcont
  41d81c:	b.gt	41d890 <_obstack_memory_used@@Base+0xa190>
  41d820:	tbnz	x21, #63, 41d898 <_obstack_memory_used@@Base+0xa198>
  41d824:	cmp	x4, #0x0
  41d828:	ccmp	x3, x21, #0x0, lt  // lt = tstop
  41d82c:	csel	x21, x21, xzr, gt
  41d830:	ldrb	w0, [x22, #56]
  41d834:	cmp	x21, x23
  41d838:	ubfx	x28, x0, #5, #2
  41d83c:	b.le	41d854 <_obstack_memory_used@@Base+0xa154>
  41d840:	ldr	x1, [x22, #32]
  41d844:	cbz	x1, 41d854 <_obstack_memory_used@@Base+0xa154>
  41d848:	tbnz	w0, #3, 41d854 <_obstack_memory_used@@Base+0xa154>
  41d84c:	mov	x0, x22
  41d850:	bl	41d710 <_obstack_memory_used@@Base+0xa010>
  41d854:	ldrb	w0, [x22, #56]
  41d858:	tbnz	w0, #4, 41d884 <_obstack_memory_used@@Base+0xa184>
  41d85c:	cbz	x19, 41d918 <_obstack_memory_used@@Base+0xa218>
  41d860:	and	w0, w0, #0x6
  41d864:	cmp	w0, #0x4
  41d868:	ldr	x1, [x22, #48]
  41d86c:	b.ne	41d8a0 <_obstack_memory_used@@Base+0xa1a0>  // b.any
  41d870:	ldr	x20, [x19]
  41d874:	cmp	x1, x20
  41d878:	b.cc	41d8a0 <_obstack_memory_used@@Base+0xa1a0>  // b.lo, b.ul, b.last
  41d87c:	cmp	x20, #0x0
  41d880:	b.gt	41d8a4 <_obstack_memory_used@@Base+0xa1a4>
  41d884:	mov	x20, #0x1                   	// #1
  41d888:	mov	x19, #0x0                   	// #0
  41d88c:	b	41d8a4 <_obstack_memory_used@@Base+0xa1a4>
  41d890:	mov	x21, x25
  41d894:	b	41d830 <_obstack_memory_used@@Base+0xa130>
  41d898:	mov	x21, #0x0                   	// #0
  41d89c:	b	41d830 <_obstack_memory_used@@Base+0xa130>
  41d8a0:	add	x20, x1, #0x1
  41d8a4:	lsl	x0, x20, #4
  41d8a8:	bl	402520 <malloc@plt>
  41d8ac:	mov	x24, x0
  41d8b0:	cbz	x0, 41da78 <_obstack_memory_used@@Base+0xa378>
  41d8b4:	str	w28, [sp]
  41d8b8:	mov	x7, x0
  41d8bc:	mov	x6, x20
  41d8c0:	mov	x5, x27
  41d8c4:	mov	x4, x21
  41d8c8:	mov	x3, x23
  41d8cc:	mov	x2, x25
  41d8d0:	mov	x1, x26
  41d8d4:	mov	x0, x22
  41d8d8:	bl	41abe8 <_obstack_memory_used@@Base+0x74e8>
  41d8dc:	cbz	w0, 41d920 <_obstack_memory_used@@Base+0xa220>
  41d8e0:	cmp	w0, #0x1
  41d8e4:	b.eq	41da68 <_obstack_memory_used@@Base+0xa368>  // b.none
  41d8e8:	mov	x19, #0xfffffffffffffffe    	// #-2
  41d8ec:	mov	x0, x24
  41d8f0:	bl	4027a0 <free@plt>
  41d8f4:	mov	x0, x19
  41d8f8:	ldp	x29, x30, [sp, #16]
  41d8fc:	ldp	x19, x20, [sp, #32]
  41d900:	ldp	x21, x22, [sp, #48]
  41d904:	ldp	x23, x24, [sp, #64]
  41d908:	ldp	x25, x26, [sp, #80]
  41d90c:	ldp	x27, x28, [sp, #96]
  41d910:	add	sp, sp, #0x80
  41d914:	ret
  41d918:	mov	x20, #0x1                   	// #1
  41d91c:	b	41d8a4 <_obstack_memory_used@@Base+0xa1a4>
  41d920:	cbnz	x19, 41d93c <_obstack_memory_used@@Base+0xa23c>
  41d924:	ldr	w0, [sp, #124]
  41d928:	ldr	x19, [x24]
  41d92c:	cbz	w0, 41d8ec <_obstack_memory_used@@Base+0xa1ec>
  41d930:	ldr	x19, [x24, #8]
  41d934:	sub	x19, x19, x23
  41d938:	b	41d8ec <_obstack_memory_used@@Base+0xa1ec>
  41d93c:	ldrb	w21, [x22, #56]
  41d940:	add	x26, x20, #0x1
  41d944:	ubfx	x21, x21, #1, #2
  41d948:	cbnz	w21, 41d9e8 <_obstack_memory_used@@Base+0xa2e8>
  41d94c:	lsl	x27, x26, #3
  41d950:	mov	x0, x27
  41d954:	bl	402520 <malloc@plt>
  41d958:	str	x0, [x19, #8]
  41d95c:	mov	x21, x0
  41d960:	cbnz	x0, 41d980 <_obstack_memory_used@@Base+0xa280>
  41d964:	mov	w21, #0x0                   	// #0
  41d968:	ldrb	w0, [x22, #56]
  41d96c:	bfi	w0, w21, #1, #2
  41d970:	strb	w0, [x22, #56]
  41d974:	tst	w0, #0x6
  41d978:	b.ne	41d924 <_obstack_memory_used@@Base+0xa224>  // b.any
  41d97c:	b	41d8e8 <_obstack_memory_used@@Base+0xa1e8>
  41d980:	mov	x0, x27
  41d984:	bl	402520 <malloc@plt>
  41d988:	str	x0, [x19, #16]
  41d98c:	cbnz	x0, 41d99c <_obstack_memory_used@@Base+0xa29c>
  41d990:	mov	x0, x21
  41d994:	bl	4027a0 <free@plt>
  41d998:	b	41d964 <_obstack_memory_used@@Base+0xa264>
  41d99c:	mov	w21, #0x1                   	// #1
  41d9a0:	str	x26, [x19]
  41d9a4:	mov	x1, x24
  41d9a8:	mov	x0, #0x0                   	// #0
  41d9ac:	cmp	x20, x0
  41d9b0:	b.gt	41da40 <_obstack_memory_used@@Base+0xa340>
  41d9b4:	cmp	x20, #0x0
  41d9b8:	mov	x0, #0xffffffffffffffff    	// #-1
  41d9bc:	csel	x20, x20, xzr, ge  // ge = tcont
  41d9c0:	ldr	x1, [x19]
  41d9c4:	cmp	x20, x1
  41d9c8:	b.cs	41d968 <_obstack_memory_used@@Base+0xa268>  // b.hs, b.nlast
  41d9cc:	ldr	x2, [x19, #16]
  41d9d0:	lsl	x1, x20, #3
  41d9d4:	add	x20, x20, #0x1
  41d9d8:	str	x0, [x2, x1]
  41d9dc:	ldr	x2, [x19, #8]
  41d9e0:	str	x0, [x2, x1]
  41d9e4:	b	41d9c0 <_obstack_memory_used@@Base+0xa2c0>
  41d9e8:	cmp	w21, #0x1
  41d9ec:	b.ne	41da38 <_obstack_memory_used@@Base+0xa338>  // b.any
  41d9f0:	ldr	x0, [x19]
  41d9f4:	cmp	x0, x26
  41d9f8:	b.cs	41d9a4 <_obstack_memory_used@@Base+0xa2a4>  // b.hs, b.nlast
  41d9fc:	ldr	x0, [x19, #8]
  41da00:	lsl	x28, x26, #3
  41da04:	mov	x1, x28
  41da08:	bl	402640 <realloc@plt>
  41da0c:	mov	x27, x0
  41da10:	cbz	x0, 41d964 <_obstack_memory_used@@Base+0xa264>
  41da14:	ldr	x0, [x19, #16]
  41da18:	mov	x1, x28
  41da1c:	bl	402640 <realloc@plt>
  41da20:	cbnz	x0, 41da2c <_obstack_memory_used@@Base+0xa32c>
  41da24:	mov	x0, x27
  41da28:	b	41d994 <_obstack_memory_used@@Base+0xa294>
  41da2c:	stp	x26, x27, [x19]
  41da30:	str	x0, [x19, #16]
  41da34:	b	41d9a4 <_obstack_memory_used@@Base+0xa2a4>
  41da38:	mov	w21, #0x2                   	// #2
  41da3c:	b	41d9a4 <_obstack_memory_used@@Base+0xa2a4>
  41da40:	ldr	x3, [x19, #8]
  41da44:	lsl	x2, x0, #3
  41da48:	ldr	x4, [x1]
  41da4c:	add	x0, x0, #0x1
  41da50:	str	x4, [x3, x2]
  41da54:	add	x1, x1, #0x10
  41da58:	ldr	x3, [x19, #16]
  41da5c:	ldur	x4, [x1, #-8]
  41da60:	str	x4, [x3, x2]
  41da64:	b	41d9ac <_obstack_memory_used@@Base+0xa2ac>
  41da68:	mov	x19, #0xffffffffffffffff    	// #-1
  41da6c:	b	41d8ec <_obstack_memory_used@@Base+0xa1ec>
  41da70:	mov	x19, #0xffffffffffffffff    	// #-1
  41da74:	b	41d8f4 <_obstack_memory_used@@Base+0xa1f4>
  41da78:	mov	x19, #0xfffffffffffffffe    	// #-2
  41da7c:	b	41d8f4 <_obstack_memory_used@@Base+0xa1f4>
  41da80:	stp	x29, x30, [sp, #-96]!
  41da84:	cmp	x2, #0x0
  41da88:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
  41da8c:	mov	x29, sp
  41da90:	stp	x19, x20, [sp, #16]
  41da94:	stp	x21, x22, [sp, #32]
  41da98:	stp	x23, x24, [sp, #48]
  41da9c:	stp	x25, x26, [sp, #64]
  41daa0:	stp	x27, x28, [sp, #80]
  41daa4:	b.ge	41dacc <_obstack_memory_used@@Base+0xa3cc>  // b.tcont
  41daa8:	mov	x19, #0xfffffffffffffffe    	// #-2
  41daac:	mov	x0, x19
  41dab0:	ldp	x19, x20, [sp, #16]
  41dab4:	ldp	x21, x22, [sp, #32]
  41dab8:	ldp	x23, x24, [sp, #48]
  41dabc:	ldp	x25, x26, [sp, #64]
  41dac0:	ldp	x27, x28, [sp, #80]
  41dac4:	ldp	x29, x30, [sp], #96
  41dac8:	ret
  41dacc:	mov	x23, x0
  41dad0:	ldr	x0, [sp, #96]
  41dad4:	tbnz	x0, #63, 41daa8 <_obstack_memory_used@@Base+0xa3a8>
  41dad8:	mov	x19, x2
  41dadc:	mov	x21, x4
  41dae0:	adds	x27, x2, x4
  41dae4:	b.vs	41daa8 <_obstack_memory_used@@Base+0xa3a8>
  41dae8:	mov	x28, x1
  41daec:	mov	x24, x5
  41daf0:	mov	x25, x6
  41daf4:	mov	x26, x7
  41daf8:	cbz	x4, 41db6c <_obstack_memory_used@@Base+0xa46c>
  41dafc:	mov	x22, x3
  41db00:	cbz	x2, 41db68 <_obstack_memory_used@@Base+0xa468>
  41db04:	mov	x0, x27
  41db08:	bl	402520 <malloc@plt>
  41db0c:	mov	x20, x0
  41db10:	cbz	x0, 41daa8 <_obstack_memory_used@@Base+0xa3a8>
  41db14:	mov	x1, x28
  41db18:	mov	x28, x20
  41db1c:	mov	x2, x19
  41db20:	bl	402360 <memcpy@plt>
  41db24:	mov	x2, x21
  41db28:	mov	x1, x22
  41db2c:	add	x0, x20, x19
  41db30:	bl	402360 <memcpy@plt>
  41db34:	ldrb	w7, [sp, #104]
  41db38:	mov	x6, x26
  41db3c:	ldr	x5, [sp, #96]
  41db40:	mov	x4, x25
  41db44:	mov	x3, x24
  41db48:	mov	x2, x27
  41db4c:	mov	x1, x28
  41db50:	mov	x0, x23
  41db54:	bl	41d7bc <_obstack_memory_used@@Base+0xa0bc>
  41db58:	mov	x19, x0
  41db5c:	mov	x0, x20
  41db60:	bl	4027a0 <free@plt>
  41db64:	b	41daac <_obstack_memory_used@@Base+0xa3ac>
  41db68:	mov	x28, x3
  41db6c:	mov	x20, #0x0                   	// #0
  41db70:	b	41db34 <_obstack_memory_used@@Base+0xa434>
  41db74:	stp	x29, x30, [sp, #-64]!
  41db78:	mov	x29, sp
  41db7c:	stp	x19, x20, [sp, #16]
  41db80:	mov	w20, w2
  41db84:	mov	x19, x0
  41db88:	tst	x20, #0x1
  41db8c:	stp	x21, x22, [sp, #32]
  41db90:	mov	x21, #0xb2fc                	// #45820
  41db94:	str	x23, [sp, #48]
  41db98:	mov	x23, #0x2c6                 	// #710
  41db9c:	stp	xzr, xzr, [x0]
  41dba0:	mov	x22, x1
  41dba4:	movk	x21, #0x3, lsl #16
  41dba8:	str	xzr, [x0, #16]
  41dbac:	movk	x23, #0x101, lsl #16
  41dbb0:	mov	x0, #0x100                 	// #256
  41dbb4:	csel	x23, x21, x23, ne  // ne = any
  41dbb8:	bl	402520 <malloc@plt>
  41dbbc:	str	x0, [x19, #32]
  41dbc0:	cbz	x0, 41dc6c <_obstack_memory_used@@Base+0xa56c>
  41dbc4:	sbfiz	x21, x20, #21, #32
  41dbc8:	and	x21, x21, #0x400000
  41dbcc:	orr	x21, x21, x23
  41dbd0:	tbz	w20, #2, 41dc50 <_obstack_memory_used@@Base+0xa550>
  41dbd4:	and	x21, x21, #0xffffffffffffffbf
  41dbd8:	mov	w0, #0x1                   	// #1
  41dbdc:	orr	x21, x21, #0x100
  41dbe0:	ubfx	x20, x20, #3, #1
  41dbe4:	ubfiz	w0, w0, #7, #1
  41dbe8:	mov	w1, #0x6f                  	// #111
  41dbec:	str	xzr, [x19, #40]
  41dbf0:	orr	w20, w0, w20, lsl #4
  41dbf4:	ldrb	w0, [x19, #56]
  41dbf8:	and	w0, w0, w1
  41dbfc:	orr	w20, w20, w0
  41dc00:	strb	w20, [x19, #56]
  41dc04:	mov	x0, x22
  41dc08:	bl	4023c0 <strlen@plt>
  41dc0c:	mov	x2, x0
  41dc10:	mov	x3, x21
  41dc14:	mov	x1, x22
  41dc18:	mov	x0, x19
  41dc1c:	bl	41cc48 <_obstack_memory_used@@Base+0x9548>
  41dc20:	mov	w20, w0
  41dc24:	cmp	w0, #0x10
  41dc28:	b.eq	41dc58 <_obstack_memory_used@@Base+0xa558>  // b.none
  41dc2c:	cbnz	w0, 41dc5c <_obstack_memory_used@@Base+0xa55c>
  41dc30:	mov	x0, x19
  41dc34:	bl	41d710 <_obstack_memory_used@@Base+0xa010>
  41dc38:	mov	w0, w20
  41dc3c:	ldp	x19, x20, [sp, #16]
  41dc40:	ldp	x21, x22, [sp, #32]
  41dc44:	ldr	x23, [sp, #48]
  41dc48:	ldp	x29, x30, [sp], #64
  41dc4c:	ret
  41dc50:	mov	w0, #0x0                   	// #0
  41dc54:	b	41dbe0 <_obstack_memory_used@@Base+0xa4e0>
  41dc58:	mov	w20, #0x8                   	// #8
  41dc5c:	ldr	x0, [x19, #32]
  41dc60:	bl	4027a0 <free@plt>
  41dc64:	str	xzr, [x19, #32]
  41dc68:	b	41dc38 <_obstack_memory_used@@Base+0xa538>
  41dc6c:	mov	w20, #0xc                   	// #12
  41dc70:	b	41dc38 <_obstack_memory_used@@Base+0xa538>
  41dc74:	stp	x29, x30, [sp, #-48]!
  41dc78:	cmp	w0, #0x10
  41dc7c:	mov	x29, sp
  41dc80:	stp	x19, x20, [sp, #16]
  41dc84:	stp	x21, x22, [sp, #32]
  41dc88:	b.ls	41dc90 <_obstack_memory_used@@Base+0xa590>  // b.plast
  41dc8c:	bl	4026f0 <abort@plt>
  41dc90:	adrp	x4, 421000 <_obstack_memory_used@@Base+0xd900>
  41dc94:	add	x4, x4, #0x140
  41dc98:	add	x1, x4, #0x20
  41dc9c:	add	x4, x4, #0x1a0
  41dca0:	mov	x21, x2
  41dca4:	mov	w2, #0x5                   	// #5
  41dca8:	mov	x20, x3
  41dcac:	ldr	x0, [x4, w0, sxtw #3]
  41dcb0:	add	x1, x1, x0
  41dcb4:	mov	x0, #0x0                   	// #0
  41dcb8:	bl	4028e0 <dcgettext@plt>
  41dcbc:	mov	x22, x0
  41dcc0:	bl	4023c0 <strlen@plt>
  41dcc4:	add	x19, x0, #0x1
  41dcc8:	cbz	x20, 41dcec <_obstack_memory_used@@Base+0xa5ec>
  41dccc:	mov	x2, x19
  41dcd0:	cmp	x19, x20
  41dcd4:	b.ls	41dce0 <_obstack_memory_used@@Base+0xa5e0>  // b.plast
  41dcd8:	sub	x2, x20, #0x1
  41dcdc:	strb	wzr, [x21, x2]
  41dce0:	mov	x1, x22
  41dce4:	mov	x0, x21
  41dce8:	bl	402360 <memcpy@plt>
  41dcec:	mov	x0, x19
  41dcf0:	ldp	x19, x20, [sp, #16]
  41dcf4:	ldp	x21, x22, [sp, #32]
  41dcf8:	ldp	x29, x30, [sp], #48
  41dcfc:	ret
  41dd00:	stp	x29, x30, [sp, #-32]!
  41dd04:	mov	x29, sp
  41dd08:	str	x19, [sp, #16]
  41dd0c:	mov	x19, x0
  41dd10:	ldr	x0, [x0]
  41dd14:	cbz	x0, 41dd1c <_obstack_memory_used@@Base+0xa61c>
  41dd18:	bl	414bf0 <_obstack_memory_used@@Base+0x14f0>
  41dd1c:	ldr	x0, [x19, #32]
  41dd20:	stp	xzr, xzr, [x19]
  41dd24:	bl	4027a0 <free@plt>
  41dd28:	str	xzr, [x19, #32]
  41dd2c:	ldr	x0, [x19, #40]
  41dd30:	bl	4027a0 <free@plt>
  41dd34:	str	xzr, [x19, #40]
  41dd38:	ldr	x19, [sp, #16]
  41dd3c:	ldp	x29, x30, [sp], #32
  41dd40:	ret
  41dd44:	tst	w4, #0xfffffff8
  41dd48:	b.ne	41dde8 <_obstack_memory_used@@Base+0xa6e8>  // b.any
  41dd4c:	sub	sp, sp, #0x50
  41dd50:	stp	x29, x30, [sp, #16]
  41dd54:	add	x29, sp, #0x10
  41dd58:	stp	x19, x20, [sp, #32]
  41dd5c:	mov	x20, x0
  41dd60:	mov	w19, w4
  41dd64:	stp	x21, x22, [sp, #48]
  41dd68:	mov	x21, x1
  41dd6c:	mov	x22, x3
  41dd70:	str	x23, [sp, #64]
  41dd74:	mov	x23, x2
  41dd78:	tbz	w19, #2, 41ddc8 <_obstack_memory_used@@Base+0xa6c8>
  41dd7c:	ldp	x3, x5, [x3]
  41dd80:	ldrb	w0, [x20, #56]
  41dd84:	str	w19, [sp]
  41dd88:	tbz	w0, #4, 41dddc <_obstack_memory_used@@Base+0xa6dc>
  41dd8c:	mov	x7, #0x0                   	// #0
  41dd90:	mov	x6, #0x0                   	// #0
  41dd94:	mov	x1, x21
  41dd98:	mov	x4, x5
  41dd9c:	mov	x2, x5
  41dda0:	mov	x0, x20
  41dda4:	bl	41abe8 <_obstack_memory_used@@Base+0x74e8>
  41dda8:	cmp	w0, #0x0
  41ddac:	cset	w0, ne  // ne = any
  41ddb0:	ldp	x29, x30, [sp, #16]
  41ddb4:	ldp	x19, x20, [sp, #32]
  41ddb8:	ldp	x21, x22, [sp, #48]
  41ddbc:	ldr	x23, [sp, #64]
  41ddc0:	add	sp, sp, #0x50
  41ddc4:	ret
  41ddc8:	mov	x0, x1
  41ddcc:	bl	4023c0 <strlen@plt>
  41ddd0:	mov	x3, #0x0                   	// #0
  41ddd4:	mov	x5, x0
  41ddd8:	b	41dd80 <_obstack_memory_used@@Base+0xa680>
  41dddc:	mov	x7, x22
  41dde0:	mov	x6, x23
  41dde4:	b	41dd94 <_obstack_memory_used@@Base+0xa694>
  41dde8:	mov	w0, #0x2                   	// #2
  41ddec:	ret
  41ddf0:	mov	x6, x4
  41ddf4:	mov	x5, x2
  41ddf8:	mov	w7, #0x1                   	// #1
  41ddfc:	mov	x4, #0x0                   	// #0
  41de00:	b	41d7bc <_obstack_memory_used@@Base+0xa0bc>
  41de04:	mov	x6, x5
  41de08:	mov	w7, #0x0                   	// #0
  41de0c:	mov	x5, x2
  41de10:	b	41d7bc <_obstack_memory_used@@Base+0xa0bc>
  41de14:	sub	sp, sp, #0x20
  41de18:	mov	w8, #0x1                   	// #1
  41de1c:	stp	x29, x30, [sp, #16]
  41de20:	add	x29, sp, #0x10
  41de24:	str	x7, [sp]
  41de28:	mov	x7, x6
  41de2c:	strb	w8, [sp, #8]
  41de30:	mov	x6, #0x0                   	// #0
  41de34:	bl	41da80 <_obstack_memory_used@@Base+0xa380>
  41de38:	ldp	x29, x30, [sp, #16]
  41de3c:	add	sp, sp, #0x20
  41de40:	ret
  41de44:	sub	sp, sp, #0x20
  41de48:	stp	x29, x30, [sp, #16]
  41de4c:	add	x29, sp, #0x10
  41de50:	ldr	x8, [sp, #32]
  41de54:	str	x8, [sp]
  41de58:	strb	wzr, [sp, #8]
  41de5c:	bl	41da80 <_obstack_memory_used@@Base+0xa380>
  41de60:	ldp	x29, x30, [sp, #16]
  41de64:	add	sp, sp, #0x20
  41de68:	ret
  41de6c:	ldrb	w5, [x0, #56]
  41de70:	cbz	x2, 41de8c <_obstack_memory_used@@Base+0xa78c>
  41de74:	mov	w6, #0x1                   	// #1
  41de78:	bfi	w5, w6, #1, #2
  41de7c:	strb	w5, [x0, #56]
  41de80:	stp	x2, x3, [x1]
  41de84:	str	x4, [x1, #16]
  41de88:	ret
  41de8c:	and	w5, w5, #0xfffffff9
  41de90:	strb	w5, [x0, #56]
  41de94:	stp	xzr, xzr, [x1]
  41de98:	str	xzr, [x1, #16]
  41de9c:	b	41de88 <_obstack_memory_used@@Base+0xa788>
  41dea0:	stp	x29, x30, [sp, #-48]!
  41dea4:	mov	x29, sp
  41dea8:	stp	x19, x20, [sp, #16]
  41deac:	mov	x19, x0
  41deb0:	str	x21, [sp, #32]
  41deb4:	bl	402490 <__fpending@plt>
  41deb8:	mov	x20, x0
  41debc:	mov	x0, x19
  41dec0:	bl	402430 <ferror_unlocked@plt>
  41dec4:	mov	w21, w0
  41dec8:	mov	x0, x19
  41decc:	bl	4024c0 <fclose@plt>
  41ded0:	cbnz	w21, 41defc <_obstack_memory_used@@Base+0xa7fc>
  41ded4:	cbz	w0, 41deec <_obstack_memory_used@@Base+0xa7ec>
  41ded8:	cbnz	x20, 41df08 <_obstack_memory_used@@Base+0xa808>
  41dedc:	bl	402980 <__errno_location@plt>
  41dee0:	ldr	w0, [x0]
  41dee4:	cmp	w0, #0x9
  41dee8:	csetm	w0, ne  // ne = any
  41deec:	ldp	x19, x20, [sp, #16]
  41def0:	ldr	x21, [sp, #32]
  41def4:	ldp	x29, x30, [sp], #48
  41def8:	ret
  41defc:	cbnz	w0, 41df08 <_obstack_memory_used@@Base+0xa808>
  41df00:	bl	402980 <__errno_location@plt>
  41df04:	str	wzr, [x0]
  41df08:	mov	w0, #0xffffffff            	// #-1
  41df0c:	b	41deec <_obstack_memory_used@@Base+0xa7ec>
  41df10:	mov	w1, #0xf616                	// #62998
  41df14:	str	xzr, [x0, #16]
  41df18:	movk	w1, #0x95, lsl #16
  41df1c:	str	w1, [x0, #24]
  41df20:	ret
  41df24:	ldr	w3, [x0, #24]
  41df28:	mov	w2, #0xf616                	// #62998
  41df2c:	movk	w2, #0x95, lsl #16
  41df30:	cmp	w3, w2
  41df34:	b.eq	41df60 <_obstack_memory_used@@Base+0xa860>  // b.none
  41df38:	stp	x29, x30, [sp, #-16]!
  41df3c:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xd900>
  41df40:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41df44:	mov	x29, sp
  41df48:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41df4c:	add	x3, x3, #0x392
  41df50:	add	x1, x1, #0x36c
  41df54:	add	x0, x0, #0x37a
  41df58:	mov	w2, #0x3c                  	// #60
  41df5c:	bl	402970 <__assert_fail@plt>
  41df60:	ldr	x3, [x0, #16]
  41df64:	cbz	x3, 41df90 <_obstack_memory_used@@Base+0xa890>
  41df68:	ldr	x2, [x0]
  41df6c:	ldr	x4, [x1, #8]
  41df70:	cmp	x4, x2
  41df74:	b.ne	41df90 <_obstack_memory_used@@Base+0xa890>  // b.any
  41df78:	ldr	x4, [x1]
  41df7c:	ldr	x2, [x0, #8]
  41df80:	cmp	x4, x2
  41df84:	b.ne	41df90 <_obstack_memory_used@@Base+0xa890>  // b.any
  41df88:	mov	w0, #0x1                   	// #1
  41df8c:	ret
  41df90:	add	x2, x3, #0x1
  41df94:	str	x2, [x0, #16]
  41df98:	tst	x3, x2
  41df9c:	b.ne	41dfac <_obstack_memory_used@@Base+0xa8ac>  // b.any
  41dfa0:	cbz	x2, 41df88 <_obstack_memory_used@@Base+0xa888>
  41dfa4:	ldp	x2, x1, [x1]
  41dfa8:	stp	x1, x2, [x0]
  41dfac:	mov	w0, #0x0                   	// #0
  41dfb0:	ret
  41dfb4:	ldrb	w1, [x0]
  41dfb8:	cmp	w1, #0x2f
  41dfbc:	b.eq	41dfd4 <_obstack_memory_used@@Base+0xa8d4>  // b.none
  41dfc0:	mov	x1, x0
  41dfc4:	mov	w2, #0x0                   	// #0
  41dfc8:	ldrb	w3, [x1]
  41dfcc:	cbnz	w3, 41dfdc <_obstack_memory_used@@Base+0xa8dc>
  41dfd0:	ret
  41dfd4:	add	x0, x0, #0x1
  41dfd8:	b	41dfb4 <_obstack_memory_used@@Base+0xa8b4>
  41dfdc:	cmp	w3, #0x2f
  41dfe0:	b.eq	41dff0 <_obstack_memory_used@@Base+0xa8f0>  // b.none
  41dfe4:	cbnz	w2, 41dff8 <_obstack_memory_used@@Base+0xa8f8>
  41dfe8:	add	x1, x1, #0x1
  41dfec:	b	41dfc8 <_obstack_memory_used@@Base+0xa8c8>
  41dff0:	mov	w2, #0x1                   	// #1
  41dff4:	b	41dfe8 <_obstack_memory_used@@Base+0xa8e8>
  41dff8:	mov	x0, x1
  41dffc:	mov	w2, #0x0                   	// #0
  41e000:	b	41dfe8 <_obstack_memory_used@@Base+0xa8e8>
  41e004:	stp	x29, x30, [sp, #-32]!
  41e008:	mov	x29, sp
  41e00c:	str	x19, [sp, #16]
  41e010:	mov	x19, x0
  41e014:	bl	4023c0 <strlen@plt>
  41e018:	cmp	x0, #0x1
  41e01c:	b.ls	41e030 <_obstack_memory_used@@Base+0xa930>  // b.plast
  41e020:	sub	x1, x0, #0x1
  41e024:	ldrb	w2, [x19, x1]
  41e028:	cmp	w2, #0x2f
  41e02c:	b.eq	41e03c <_obstack_memory_used@@Base+0xa93c>  // b.none
  41e030:	ldr	x19, [sp, #16]
  41e034:	ldp	x29, x30, [sp], #32
  41e038:	ret
  41e03c:	mov	x0, x1
  41e040:	b	41e018 <_obstack_memory_used@@Base+0xa918>
  41e044:	stp	x29, x30, [sp, #-64]!
  41e048:	mov	x29, sp
  41e04c:	str	x2, [sp, #56]
  41e050:	tbz	w1, #6, 41e084 <_obstack_memory_used@@Base+0xa984>
  41e054:	add	x2, sp, #0x40
  41e058:	stp	x2, x2, [sp, #16]
  41e05c:	add	x2, sp, #0x30
  41e060:	str	x2, [sp, #32]
  41e064:	mov	w2, #0xfffffff8            	// #-8
  41e068:	str	w2, [sp, #40]
  41e06c:	ldr	w2, [sp, #56]
  41e070:	str	wzr, [sp, #44]
  41e074:	bl	402550 <open@plt>
  41e078:	bl	410b44 <wcrtomb@plt+0xe134>
  41e07c:	ldp	x29, x30, [sp], #64
  41e080:	ret
  41e084:	mov	w2, #0x0                   	// #0
  41e088:	b	41e074 <_obstack_memory_used@@Base+0xa974>
  41e08c:	stp	x29, x30, [sp, #-288]!
  41e090:	mov	x2, #0x101                 	// #257
  41e094:	mov	x29, sp
  41e098:	add	x1, sp, #0x18
  41e09c:	bl	41e2f8 <_obstack_memory_used@@Base+0xabf8>
  41e0a0:	cbnz	w0, 41e0dc <_obstack_memory_used@@Base+0xa9dc>
  41e0a4:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41e0a8:	add	x0, sp, #0x18
  41e0ac:	add	x1, x1, #0x39e
  41e0b0:	bl	402780 <strcmp@plt>
  41e0b4:	cbz	w0, 41e0d0 <_obstack_memory_used@@Base+0xa9d0>
  41e0b8:	add	x0, sp, #0x18
  41e0bc:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41e0c0:	add	x1, x1, #0x3a0
  41e0c4:	bl	402780 <strcmp@plt>
  41e0c8:	cmp	w0, #0x0
  41e0cc:	cset	w0, ne  // ne = any
  41e0d0:	and	w0, w0, #0x1
  41e0d4:	ldp	x29, x30, [sp], #288
  41e0d8:	ret
  41e0dc:	mov	w0, #0x0                   	// #0
  41e0e0:	b	41e0d4 <_obstack_memory_used@@Base+0xa9d4>
  41e0e4:	mov	w2, #0x1                   	// #1
  41e0e8:	stp	w1, w1, [x0]
  41e0ec:	stp	w1, w1, [x0, #8]
  41e0f0:	str	w1, [x0, #16]
  41e0f4:	stur	xzr, [x0, #20]
  41e0f8:	strb	w2, [x0, #28]
  41e0fc:	ret
  41e100:	ldrb	w0, [x0, #28]
  41e104:	ret
  41e108:	ldrb	w3, [x0, #28]
  41e10c:	mov	x2, x0
  41e110:	ldr	w4, [x0, #20]
  41e114:	eor	w3, w3, #0x1
  41e118:	add	w4, w3, w4
  41e11c:	and	w5, w4, #0x3
  41e120:	ubfiz	x4, x4, #2, #2
  41e124:	ldr	w0, [x0, x4]
  41e128:	str	w1, [x2, x4]
  41e12c:	str	w5, [x2, #20]
  41e130:	ldr	w1, [x2, #24]
  41e134:	cmp	w1, w5
  41e138:	b.ne	41e148 <_obstack_memory_used@@Base+0xaa48>  // b.any
  41e13c:	add	w3, w3, w1
  41e140:	and	w3, w3, #0x3
  41e144:	str	w3, [x2, #24]
  41e148:	strb	wzr, [x2, #28]
  41e14c:	ret
  41e150:	mov	x1, x0
  41e154:	ldrb	w0, [x0, #28]
  41e158:	cbz	w0, 41e168 <_obstack_memory_used@@Base+0xaa68>
  41e15c:	stp	x29, x30, [sp, #-16]!
  41e160:	mov	x29, sp
  41e164:	bl	4026f0 <abort@plt>
  41e168:	ldp	w4, w2, [x1, #16]
  41e16c:	ubfiz	x3, x2, #2, #32
  41e170:	ldr	w0, [x1, x3]
  41e174:	str	w4, [x1, x3]
  41e178:	ldr	w3, [x1, #24]
  41e17c:	cmp	w2, w3
  41e180:	b.ne	41e190 <_obstack_memory_used@@Base+0xaa90>  // b.any
  41e184:	mov	w2, #0x1                   	// #1
  41e188:	strb	w2, [x1, #28]
  41e18c:	ret
  41e190:	add	w2, w2, #0x3
  41e194:	and	w2, w2, #0x3
  41e198:	str	w2, [x1, #20]
  41e19c:	ret
  41e1a0:	stp	x29, x30, [sp, #-16]!
  41e1a4:	mov	w0, #0xe                   	// #14
  41e1a8:	mov	x29, sp
  41e1ac:	bl	4024e0 <nl_langinfo@plt>
  41e1b0:	cbz	x0, 41e1bc <_obstack_memory_used@@Base+0xaabc>
  41e1b4:	ldrb	w1, [x0]
  41e1b8:	cbnz	w1, 41e1c4 <_obstack_memory_used@@Base+0xaac4>
  41e1bc:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41e1c0:	add	x0, x0, #0x3a6
  41e1c4:	ldp	x29, x30, [sp], #16
  41e1c8:	ret
  41e1cc:	stp	x29, x30, [sp, #-32]!
  41e1d0:	mov	x29, sp
  41e1d4:	str	x19, [sp, #16]
  41e1d8:	mov	w19, w0
  41e1dc:	bl	402540 <wcwidth@plt>
  41e1e0:	tbz	w0, #31, 41e1f4 <_obstack_memory_used@@Base+0xaaf4>
  41e1e4:	mov	w0, w19
  41e1e8:	bl	402450 <iswcntrl@plt>
  41e1ec:	cmp	w0, #0x0
  41e1f0:	cset	w0, eq  // eq = none
  41e1f4:	ldr	x19, [sp, #16]
  41e1f8:	ldp	x29, x30, [sp], #32
  41e1fc:	ret
  41e200:	stp	x29, x30, [sp, #-32]!
  41e204:	mov	x29, sp
  41e208:	stp	x19, x20, [sp, #16]
  41e20c:	mov	x19, x0
  41e210:	mov	x0, x1
  41e214:	mov	x20, x1
  41e218:	ldr	x1, [x0], #24
  41e21c:	cmp	x1, x0
  41e220:	b.ne	41e260 <_obstack_memory_used@@Base+0xab60>  // b.any
  41e224:	ldr	x2, [x20, #8]
  41e228:	add	x3, x19, #0x18
  41e22c:	mov	x0, x3
  41e230:	bl	402360 <memcpy@plt>
  41e234:	str	x0, [x19]
  41e238:	ldr	x0, [x20, #8]
  41e23c:	str	x0, [x19, #8]
  41e240:	ldrb	w0, [x20, #16]
  41e244:	strb	w0, [x19, #16]
  41e248:	cbz	w0, 41e254 <_obstack_memory_used@@Base+0xab54>
  41e24c:	ldr	w0, [x20, #20]
  41e250:	str	w0, [x19, #20]
  41e254:	ldp	x19, x20, [sp, #16]
  41e258:	ldp	x29, x30, [sp], #32
  41e25c:	ret
  41e260:	str	x1, [x19]
  41e264:	b	41e238 <_obstack_memory_used@@Base+0xab38>
  41e268:	ubfx	x2, x0, #5, #3
  41e26c:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xd900>
  41e270:	add	x1, x1, #0x3ac
  41e274:	ldr	w1, [x1, x2, lsl #2]
  41e278:	lsr	w0, w1, w0
  41e27c:	and	w0, w0, #0x1
  41e280:	ret
  41e284:	stp	x29, x30, [sp, #-48]!
  41e288:	mov	x29, sp
  41e28c:	stp	x21, x22, [sp, #32]
  41e290:	mov	x21, x3
  41e294:	mov	w3, #0x4900                	// #18688
  41e298:	movk	w3, #0x8, lsl #16
  41e29c:	orr	w2, w2, w3
  41e2a0:	stp	x19, x20, [sp, #16]
  41e2a4:	bl	40f58c <wcrtomb@plt+0xcb7c>
  41e2a8:	tbnz	w0, #31, 41e2f0 <_obstack_memory_used@@Base+0xabf0>
  41e2ac:	mov	w20, w0
  41e2b0:	bl	4026c0 <fdopendir@plt>
  41e2b4:	mov	x19, x0
  41e2b8:	cbz	x0, 41e2d4 <_obstack_memory_used@@Base+0xabd4>
  41e2bc:	str	w20, [x21]
  41e2c0:	mov	x0, x19
  41e2c4:	ldp	x19, x20, [sp, #16]
  41e2c8:	ldp	x21, x22, [sp, #32]
  41e2cc:	ldp	x29, x30, [sp], #48
  41e2d0:	ret
  41e2d4:	bl	402980 <__errno_location@plt>
  41e2d8:	mov	x21, x0
  41e2dc:	mov	w0, w20
  41e2e0:	ldr	w22, [x21]
  41e2e4:	bl	402680 <close@plt>
  41e2e8:	str	w22, [x21]
  41e2ec:	b	41e2c0 <_obstack_memory_used@@Base+0xabc0>
  41e2f0:	mov	x19, #0x0                   	// #0
  41e2f4:	b	41e2c0 <_obstack_memory_used@@Base+0xabc0>
  41e2f8:	stp	x29, x30, [sp, #-48]!
  41e2fc:	mov	x29, sp
  41e300:	stp	x19, x20, [sp, #16]
  41e304:	mov	x20, x1
  41e308:	mov	x19, x2
  41e30c:	mov	x1, #0x0                   	// #0
  41e310:	str	x21, [sp, #32]
  41e314:	bl	4029f0 <setlocale@plt>
  41e318:	cbnz	x0, 41e32c <_obstack_memory_used@@Base+0xac2c>
  41e31c:	cbz	x19, 41e324 <_obstack_memory_used@@Base+0xac24>
  41e320:	strb	wzr, [x20]
  41e324:	mov	w0, #0x16                  	// #22
  41e328:	b	41e350 <_obstack_memory_used@@Base+0xac50>
  41e32c:	mov	x21, x0
  41e330:	bl	4023c0 <strlen@plt>
  41e334:	cmp	x19, x0
  41e338:	b.ls	41e360 <_obstack_memory_used@@Base+0xac60>  // b.plast
  41e33c:	add	x2, x0, #0x1
  41e340:	mov	x1, x21
  41e344:	mov	x0, x20
  41e348:	bl	402360 <memcpy@plt>
  41e34c:	mov	w0, #0x0                   	// #0
  41e350:	ldp	x19, x20, [sp, #16]
  41e354:	ldr	x21, [sp, #32]
  41e358:	ldp	x29, x30, [sp], #48
  41e35c:	ret
  41e360:	cbz	x19, 41e37c <_obstack_memory_used@@Base+0xac7c>
  41e364:	sub	x19, x19, #0x1
  41e368:	mov	x1, x21
  41e36c:	mov	x2, x19
  41e370:	mov	x0, x20
  41e374:	bl	402360 <memcpy@plt>
  41e378:	strb	wzr, [x20, x19]
  41e37c:	mov	w0, #0x22                  	// #34
  41e380:	b	41e350 <_obstack_memory_used@@Base+0xac50>
  41e384:	mov	x1, #0x0                   	// #0
  41e388:	b	4029f0 <setlocale@plt>
  41e38c:	mov	w2, #0x3                   	// #3
  41e390:	mov	w1, #0x0                   	// #0
  41e394:	b	41e398 <_obstack_memory_used@@Base+0xac98>
  41e398:	stp	x29, x30, [sp, #-128]!
  41e39c:	mov	x29, sp
  41e3a0:	stp	x2, x3, [sp, #96]
  41e3a4:	add	x2, sp, #0x80
  41e3a8:	stp	x2, x2, [sp, #64]
  41e3ac:	add	x2, sp, #0x60
  41e3b0:	stp	x19, x20, [sp, #16]
  41e3b4:	stp	x21, x22, [sp, #32]
  41e3b8:	str	x23, [sp, #48]
  41e3bc:	str	x2, [sp, #80]
  41e3c0:	mov	w2, #0xffffffe0            	// #-32
  41e3c4:	str	w2, [sp, #88]
  41e3c8:	str	wzr, [sp, #92]
  41e3cc:	stp	x4, x5, [sp, #112]
  41e3d0:	cbz	w1, 41e418 <_obstack_memory_used@@Base+0xad18>
  41e3d4:	mov	w20, w0
  41e3d8:	mov	w6, w1
  41e3dc:	cmp	w1, #0x406
  41e3e0:	b.eq	41e424 <_obstack_memory_used@@Base+0xad24>  // b.none
  41e3e4:	cmp	w1, #0xb
  41e3e8:	b.gt	41e528 <_obstack_memory_used@@Base+0xae28>
  41e3ec:	cmp	w1, #0x0
  41e3f0:	b.le	41e534 <_obstack_memory_used@@Base+0xae34>
  41e3f4:	sub	w1, w1, #0x1
  41e3f8:	cmp	w1, #0xa
  41e3fc:	b.hi	41e534 <_obstack_memory_used@@Base+0xae34>  // b.pmore
  41e400:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41e404:	add	x0, x0, #0x3cc
  41e408:	ldrb	w0, [x0, w1, uxtw]
  41e40c:	adr	x1, 41e418 <_obstack_memory_used@@Base+0xad18>
  41e410:	add	x0, x1, w0, sxtb #2
  41e414:	br	x0
  41e418:	ldr	w2, [sp, #96]
  41e41c:	bl	402810 <fcntl@plt>
  41e420:	b	41e570 <_obstack_memory_used@@Base+0xae70>
  41e424:	adrp	x21, 43b000 <__progname@@GLIBC_2.17+0x3b88>
  41e428:	mov	w2, #0xffffffe8            	// #-24
  41e42c:	str	w2, [sp, #88]
  41e430:	mov	x23, x21
  41e434:	ldr	w2, [x21, #2272]
  41e438:	ldr	w22, [sp, #96]
  41e43c:	tbnz	w2, #31, 41e4d0 <_obstack_memory_used@@Base+0xadd0>
  41e440:	mov	w2, w22
  41e444:	bl	402810 <fcntl@plt>
  41e448:	mov	w19, w0
  41e44c:	tbz	w0, #31, 41e460 <_obstack_memory_used@@Base+0xad60>
  41e450:	bl	402980 <__errno_location@plt>
  41e454:	ldr	w0, [x0]
  41e458:	cmp	w0, #0x16
  41e45c:	b.eq	41e480 <_obstack_memory_used@@Base+0xad80>  // b.none
  41e460:	mov	w0, #0x1                   	// #1
  41e464:	str	w0, [x23, #2272]
  41e468:	mov	w0, w19
  41e46c:	ldp	x19, x20, [sp, #16]
  41e470:	ldp	x21, x22, [sp, #32]
  41e474:	ldr	x23, [sp, #48]
  41e478:	ldp	x29, x30, [sp], #128
  41e47c:	ret
  41e480:	mov	w2, w22
  41e484:	mov	w0, w20
  41e488:	mov	w1, #0x0                   	// #0
  41e48c:	bl	402810 <fcntl@plt>
  41e490:	mov	w19, w0
  41e494:	tbnz	w0, #31, 41e468 <_obstack_memory_used@@Base+0xad68>
  41e498:	mov	w0, #0xffffffff            	// #-1
  41e49c:	str	w0, [x21, #2272]
  41e4a0:	mov	w0, w19
  41e4a4:	mov	w1, #0x1                   	// #1
  41e4a8:	bl	402810 <fcntl@plt>
  41e4ac:	tbz	w0, #31, 41e4f4 <_obstack_memory_used@@Base+0xadf4>
  41e4b0:	bl	402980 <__errno_location@plt>
  41e4b4:	mov	x20, x0
  41e4b8:	mov	w0, w19
  41e4bc:	mov	w19, #0xffffffff            	// #-1
  41e4c0:	ldr	w21, [x20]
  41e4c4:	bl	402680 <close@plt>
  41e4c8:	str	w21, [x20]
  41e4cc:	b	41e468 <_obstack_memory_used@@Base+0xad68>
  41e4d0:	mov	w2, w22
  41e4d4:	mov	w1, #0x0                   	// #0
  41e4d8:	bl	402810 <fcntl@plt>
  41e4dc:	mov	w19, w0
  41e4e0:	tbnz	w0, #31, 41e468 <_obstack_memory_used@@Base+0xad68>
  41e4e4:	ldr	w0, [x21, #2272]
  41e4e8:	cmn	w0, #0x1
  41e4ec:	b.ne	41e468 <_obstack_memory_used@@Base+0xad68>  // b.any
  41e4f0:	b	41e4a0 <_obstack_memory_used@@Base+0xada0>
  41e4f4:	orr	w2, w0, #0x1
  41e4f8:	mov	w1, #0x2                   	// #2
  41e4fc:	mov	w0, w19
  41e500:	bl	402810 <fcntl@plt>
  41e504:	cmn	w0, #0x1
  41e508:	b.ne	41e468 <_obstack_memory_used@@Base+0xad68>  // b.any
  41e50c:	b	41e4b0 <_obstack_memory_used@@Base+0xadb0>
  41e510:	adrp	x0, 421000 <_obstack_memory_used@@Base+0xd900>
  41e514:	add	x0, x0, #0x3d8
  41e518:	ldrb	w0, [x0, w1, uxtw]
  41e51c:	adr	x1, 41e528 <_obstack_memory_used@@Base+0xae28>
  41e520:	add	x0, x1, w0, sxtb #2
  41e524:	br	x0
  41e528:	sub	w1, w1, #0x400
  41e52c:	cmp	w1, #0xa
  41e530:	b.ls	41e510 <_obstack_memory_used@@Base+0xae10>  // b.plast
  41e534:	ldr	w1, [sp, #88]
  41e538:	ldr	x0, [sp, #64]
  41e53c:	tbz	w1, #31, 41e550 <_obstack_memory_used@@Base+0xae50>
  41e540:	cmn	w1, #0x7
  41e544:	b.ge	41e550 <_obstack_memory_used@@Base+0xae50>  // b.tcont
  41e548:	ldr	x0, [sp, #72]
  41e54c:	add	x0, x0, w1, sxtw
  41e550:	ldr	x2, [x0]
  41e554:	mov	w1, w6
  41e558:	mov	w0, w20
  41e55c:	bl	402810 <fcntl@plt>
  41e560:	b	41e570 <_obstack_memory_used@@Base+0xae70>
  41e564:	mov	w1, w6
  41e568:	mov	w0, w20
  41e56c:	bl	402810 <fcntl@plt>
  41e570:	mov	w19, w0
  41e574:	b	41e468 <_obstack_memory_used@@Base+0xad68>
  41e578:	ldr	w1, [sp, #88]
  41e57c:	ldr	x0, [sp, #64]
  41e580:	tbz	w1, #31, 41e594 <_obstack_memory_used@@Base+0xae94>
  41e584:	cmn	w1, #0x7
  41e588:	b.ge	41e594 <_obstack_memory_used@@Base+0xae94>  // b.tcont
  41e58c:	ldr	x0, [sp, #72]
  41e590:	add	x0, x0, w1, sxtw
  41e594:	ldr	w2, [x0]
  41e598:	mov	w1, w6
  41e59c:	mov	w0, w20
  41e5a0:	b	41e41c <_obstack_memory_used@@Base+0xad1c>
  41e5a4:	nop
  41e5a8:	stp	x29, x30, [sp, #-64]!
  41e5ac:	mov	x29, sp
  41e5b0:	stp	x19, x20, [sp, #16]
  41e5b4:	adrp	x20, 436000 <_obstack_memory_used@@Base+0x22900>
  41e5b8:	add	x20, x20, #0xdf0
  41e5bc:	stp	x21, x22, [sp, #32]
  41e5c0:	adrp	x21, 436000 <_obstack_memory_used@@Base+0x22900>
  41e5c4:	add	x21, x21, #0xde8
  41e5c8:	sub	x20, x20, x21
  41e5cc:	mov	w22, w0
  41e5d0:	stp	x23, x24, [sp, #48]
  41e5d4:	mov	x23, x1
  41e5d8:	mov	x24, x2
  41e5dc:	bl	402310 <mbrtowc@plt-0x40>
  41e5e0:	cmp	xzr, x20, asr #3
  41e5e4:	b.eq	41e610 <_obstack_memory_used@@Base+0xaf10>  // b.none
  41e5e8:	asr	x20, x20, #3
  41e5ec:	mov	x19, #0x0                   	// #0
  41e5f0:	ldr	x3, [x21, x19, lsl #3]
  41e5f4:	mov	x2, x24
  41e5f8:	add	x19, x19, #0x1
  41e5fc:	mov	x1, x23
  41e600:	mov	w0, w22
  41e604:	blr	x3
  41e608:	cmp	x20, x19
  41e60c:	b.ne	41e5f0 <_obstack_memory_used@@Base+0xaef0>  // b.any
  41e610:	ldp	x19, x20, [sp, #16]
  41e614:	ldp	x21, x22, [sp, #32]
  41e618:	ldp	x23, x24, [sp, #48]
  41e61c:	ldp	x29, x30, [sp], #64
  41e620:	ret
  41e624:	nop
  41e628:	ret
  41e62c:	nop
  41e630:	adrp	x2, 437000 <_obstack_memory_used@@Base+0x23900>
  41e634:	mov	x1, #0x0                   	// #0
  41e638:	ldr	x2, [x2, #880]
  41e63c:	b	402440 <__cxa_atexit@plt>
  41e640:	mov	x2, x1
  41e644:	mov	x1, x0
  41e648:	mov	w0, #0x0                   	// #0
  41e64c:	b	4029b0 <__xstat@plt>
  41e650:	mov	x2, x1
  41e654:	mov	w1, w0
  41e658:	mov	w0, #0x0                   	// #0
  41e65c:	b	4028c0 <__fxstat@plt>
  41e660:	mov	x2, x1
  41e664:	mov	x1, x0
  41e668:	mov	w0, #0x0                   	// #0
  41e66c:	b	402840 <__lxstat@plt>
  41e670:	mov	x4, x1
  41e674:	mov	x5, x2
  41e678:	mov	w1, w0
  41e67c:	mov	x2, x4
  41e680:	mov	w0, #0x0                   	// #0
  41e684:	mov	w4, w3
  41e688:	mov	x3, x5
  41e68c:	b	402a00 <__fxstatat@plt>

Disassembly of section .fini:

000000000041e690 <.fini>:
  41e690:	stp	x29, x30, [sp, #-16]!
  41e694:	mov	x29, sp
  41e698:	ldp	x29, x30, [sp], #16
  41e69c:	ret
