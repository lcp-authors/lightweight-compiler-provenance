In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_gcc_-Os:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	stp	x29, x30, [sp, #-304]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #368]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	cmp	x2, w1, uxtw
  1c:	stp	x23, x24, [sp, #48]
  20:	str	x25, [sp, #64]
  24:	b.hi	48 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x48>  // b.pmore
  28:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  2c:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  30:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0x95                  	// #149
  44:	bl	0 <__assert_fail>
  48:	ldr	x23, [x19, #360]
  4c:	mov	w0, w1
  50:	lsl	x24, x0, #3
  54:	add	x25, x23, x0, lsl #3
  58:	ldr	w2, [x25, #4]
  5c:	cbz	w2, 80 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x80>
  60:	ldr	x19, [x23, x24]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x21, x22, [sp, #32]
  70:	ldp	x23, x24, [sp, #48]
  74:	ldr	x25, [sp, #64]
  78:	ldp	x29, x30, [sp], #304
  7c:	ret
  80:	add	x22, sp, #0x50
  84:	add	x2, x22, #0x10
  88:	str	x2, [sp, #80]
  8c:	mov	x2, #0x200000000           	// #8589934592
  90:	str	x2, [sp, #88]
  94:	add	x2, x19, #0x200
  98:	ldur	x3, [x2, #-160]
  9c:	cmp	x0, x3
  a0:	b.cc	c4 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xc4>  // b.lo, b.ul, b.last
  a4:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  a8:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  ac:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  b0:	add	x3, x3, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x0, x0, #0x0
  bc:	mov	w2, #0xfa                  	// #250
  c0:	b	44 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x44>
  c4:	mov	w0, #0xa0                  	// #160
  c8:	add	x20, sp, #0x90
  cc:	umull	x1, w1, w0
  d0:	ldur	x0, [x2, #-168]
  d4:	add	x21, x0, x1
  d8:	ldr	w0, [x0, x1]
  dc:	str	w0, [sp, #144]
  e0:	ldr	w0, [x21, #4]
  e4:	str	w0, [sp, #148]
  e8:	ldr	x0, [x21, #8]
  ec:	str	x0, [sp, #152]
  f0:	add	x0, x20, #0x20
  f4:	str	x0, [sp, #160]
  f8:	mov	x0, #0x800000000           	// #34359738368
  fc:	str	x0, [sp, #168]
 100:	ldr	w0, [x21, #24]
 104:	cbz	w0, 114 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x114>
 108:	add	x1, x21, #0x10
 10c:	add	x0, x20, #0x10
 110:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 114:	ldp	x2, x0, [x19]
 118:	ldr	x1, [x0]
 11c:	ldr	x3, [x1, #128]
 120:	mov	x1, x21
 124:	blr	x3
 128:	tst	w0, #0xff
 12c:	b.eq	148 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x148>  // b.none
 130:	ldp	x2, x0, [x19]
 134:	mov	x3, x20
 138:	ldr	x1, [x0]
 13c:	ldr	x4, [x1, #152]
 140:	mov	x1, x21
 144:	blr	x4
 148:	ldr	w0, [x19, #32]
 14c:	add	x2, x19, #0x128
 150:	str	w0, [x23, x24]
 154:	mov	x3, x22
 158:	ldr	x0, [x19, #16]
 15c:	ldr	x4, [x19]
 160:	ldr	x1, [x0]
 164:	ldr	x5, [x1, #32]
 168:	mov	x1, x20
 16c:	add	x20, x20, #0x20
 170:	blr	x5
 174:	ldr	w0, [x19, #32]
 178:	ldr	w1, [x23, x24]
 17c:	sub	w0, w0, w1
 180:	str	w0, [x25, #4]
 184:	ldr	x0, [sp, #160]
 188:	ldr	x19, [x23, x24]
 18c:	cmp	x0, x20
 190:	b.eq	198 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x198>  // b.none
 194:	bl	0 <free>
 198:	ldr	x0, [sp, #80]
 19c:	add	x22, x22, #0x10
 1a0:	cmp	x0, x22
 1a4:	b.eq	64 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x64>  // b.none
 1a8:	bl	0 <free>
 1ac:	b	64 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x64>

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	b.eq	50 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x50>  // b.none
  1c:	ldr	w20, [x0, #8]
  20:	mov	x21, x1
  24:	ldr	w22, [x1, #8]
  28:	cmp	x22, x20
  2c:	b.hi	64 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x64>  // b.pmore
  30:	cbz	x22, 44 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x44>
  34:	ldr	x0, [x0]
  38:	lsl	x2, x22, #4
  3c:	ldr	x1, [x1]
  40:	bl	0 <memmove>
  44:	mov	x1, x22
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  50:	mov	x0, x19
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	ldr	w1, [x0, #12]
  68:	cmp	x22, x1
  6c:	b.ls	c4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xc4>  // b.plast
  70:	mov	x20, #0x0                   	// #0
  74:	mov	x1, #0x0                   	// #0
  78:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  7c:	mov	x3, #0x10                  	// #16
  80:	mov	x2, x22
  84:	add	x1, x19, x3
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  90:	ldr	x4, [x21]
  94:	lsl	x0, x20, #4
  98:	ldr	w3, [x21, #8]
  9c:	add	x1, x4, x20, lsl #4
  a0:	lsl	x2, x3, #4
  a4:	add	x3, x4, x3, lsl #4
  a8:	cmp	x1, x3
  ac:	b.eq	44 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x44>  // b.none
  b0:	ldr	x3, [x19]
  b4:	sub	x2, x2, x0
  b8:	add	x0, x3, x0
  bc:	bl	0 <memcpy>
  c0:	b	44 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x44>
  c4:	cbz	x20, 90 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x90>
  c8:	ldr	x1, [x21]
  cc:	lsl	x2, x20, #4
  d0:	ldr	x0, [x0]
  d4:	bl	0 <memmove>
  d8:	b	90 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x90>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>:
   0:	cbz	x0, 14 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0+0x14>
   4:	ldr	x1, [x0]
   8:	ldr	x1, [x1, #8]
   c:	mov	x16, x1
  10:	br	x16
  14:	ret

0000000000000018 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
  18:	stp	x29, x30, [sp, #-128]!
  1c:	mov	x29, sp
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x24, x0
  28:	mov	x23, x1
  2c:	ldr	x0, [x0, #56]
  30:	stp	x19, x20, [sp, #16]
  34:	stp	x21, x22, [sp, #32]
  38:	mov	x21, x2
  3c:	ldr	x20, [x0, #152]
  40:	mov	x0, #0x38                  	// #56
  44:	stp	x25, x26, [sp, #64]
  48:	mov	x25, x8
  4c:	stp	x27, x28, [sp, #80]
  50:	bl	0 <_Znwm>
  54:	mov	x1, x20
  58:	mov	x19, x0
  5c:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  60:	ldr	x22, [x24, #48]
  64:	mov	x0, #0x98                  	// #152
  68:	ldr	w26, [x23, #12]
  6c:	bl	0 <_Znwm>
  70:	mov	x2, x22
  74:	mov	x28, x0
  78:	mov	w3, w26
  7c:	mov	x1, x20
  80:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  84:	ldrb	w4, [x23, #24]
  88:	mov	x0, #0x50                  	// #80
  8c:	ldp	w22, w26, [x23, #16]
  90:	str	w4, [sp, #104]
  94:	bl	0 <_Znwm>
  98:	mov	x27, x0
  9c:	ldr	w4, [sp, #104]
  a0:	mov	w2, w22
  a4:	mov	w3, w26
  a8:	mov	x1, x20
  ac:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  b0:	str	wzr, [x27, #68]
  b4:	adrp	x0, 0 <_ZTVN4llvm3mca6LSUnitE>
  b8:	add	x8, sp, #0x70
  bc:	mov	x1, x27
  c0:	str	xzr, [x27, #72]
  c4:	ldr	x0, [x0]
  c8:	add	x0, x0, #0x10
  cc:	str	x0, [x27]
  d0:	mov	x0, x20
  d4:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
  d8:	mov	x0, #0xf0                  	// #240
  dc:	bl	0 <_Znwm>
  e0:	mov	x20, x0
  e4:	add	x1, x0, #0x18
  e8:	str	xzr, [x0, #8]
  ec:	str	wzr, [x0, #24]
  f0:	str	xzr, [x0, #32]
  f4:	adrp	x0, 0 <_ZTVN4llvm3mca10EntryStageE>
  f8:	ldr	w3, [x23, #8]
  fc:	ldr	x0, [x0]
 100:	stp	x1, x1, [x1, #16]
 104:	add	x0, x0, #0x10
 108:	str	xzr, [x1, #32]
 10c:	str	x0, [x20]
 110:	add	x0, x20, #0x60
 114:	str	wzr, [x20, #64]
 118:	str	xzr, [x20, #72]
 11c:	str	x0, [x20, #80]
 120:	mov	x0, #0x1000000000          	// #68719476736
 124:	str	x0, [x20, #88]
 128:	mov	x0, #0x78                  	// #120
 12c:	str	x21, [x20, #224]
 130:	str	wzr, [x20, #232]
 134:	str	w3, [sp, #104]
 138:	ldr	x22, [x24, #48]
 13c:	ldr	x21, [x24, #56]
 140:	bl	0 <_Znwm>
 144:	ldr	w3, [sp, #104]
 148:	mov	x4, x19
 14c:	mov	x5, x28
 150:	mov	x1, x21
 154:	mov	x2, x22
 158:	mov	x26, x0
 15c:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 160:	ldrb	w21, [x23, #25]
 164:	ldr	x2, [sp, #112]
 168:	mov	x0, #0x58                  	// #88
 16c:	str	x2, [sp, #104]
 170:	bl	0 <_Znwm>
 174:	add	x1, x0, #0x18
 178:	mov	x22, x0
 17c:	str	xzr, [x0, #8]
 180:	str	wzr, [x0, #24]
 184:	str	xzr, [x0, #32]
 188:	adrp	x0, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 18c:	ldr	x2, [sp, #104]
 190:	stp	x1, x1, [x1, #16]
 194:	ldr	x0, [x0]
 198:	str	xzr, [x1, #32]
 19c:	stp	x2, xzr, [x22, #64]
 1a0:	add	x0, x0, #0x10
 1a4:	str	x0, [x22]
 1a8:	mov	x0, #0x58                  	// #88
 1ac:	strb	w21, [x22, #80]
 1b0:	bl	0 <_Znwm>
 1b4:	mov	x21, x0
 1b8:	add	x1, x0, #0x18
 1bc:	str	xzr, [x0, #8]
 1c0:	str	wzr, [x0, #24]
 1c4:	str	xzr, [x0, #32]
 1c8:	adrp	x0, 0 <_ZTVN4llvm3mca11RetireStageE>
 1cc:	stp	x1, x1, [x1, #16]
 1d0:	ldr	x0, [x0]
 1d4:	str	xzr, [x1, #32]
 1d8:	stp	x19, x28, [x21, #64]
 1dc:	add	x0, x0, #0x10
 1e0:	str	x19, [sp, #120]
 1e4:	add	x19, sp, #0x78
 1e8:	mov	x1, x19
 1ec:	str	x0, [x21]
 1f0:	str	x27, [x21, #80]
 1f4:	mov	x0, x24
 1f8:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 1fc:	mov	x0, x19
 200:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 204:	mov	x1, x19
 208:	mov	x0, x24
 20c:	str	x28, [sp, #120]
 210:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 214:	mov	x0, x19
 218:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 21c:	str	x27, [sp, #120]
 220:	mov	x1, x19
 224:	mov	x0, x24
 228:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 22c:	mov	x0, x19
 230:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 234:	mov	x1, x19
 238:	ldr	x0, [sp, #112]
 23c:	stp	xzr, x0, [sp, #112]
 240:	mov	x0, x24
 244:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 248:	mov	x0, x19
 24c:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 250:	mov	x0, #0x88                  	// #136
 254:	bl	0 <_Znwm>
 258:	add	x2, x0, #0x10
 25c:	str	x2, [x0]
 260:	mov	x2, #0x800000000           	// #34359738368
 264:	str	x2, [x0, #8]
 268:	add	x2, x0, #0x58
 26c:	str	wzr, [x0, #88]
 270:	str	xzr, [x0, #96]
 274:	mov	x1, x19
 278:	str	x0, [x25]
 27c:	stp	x2, x2, [x2, #16]
 280:	str	xzr, [x2, #32]
 284:	str	wzr, [x0, #128]
 288:	str	x20, [sp, #120]
 28c:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 290:	mov	x0, x19
 294:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 298:	ldr	w24, [x23]
 29c:	cbz	w24, 2dc <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2c4>
 2a0:	ldr	w23, [x23, #4]
 2a4:	mov	x0, #0xe8                  	// #232
 2a8:	ldr	x27, [x25]
 2ac:	bl	0 <_Znwm>
 2b0:	mov	w2, w23
 2b4:	mov	x20, x0
 2b8:	mov	w1, w24
 2bc:	mov	w3, #0x1                   	// #1
 2c0:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 2c4:	str	x20, [sp, #120]
 2c8:	mov	x1, x19
 2cc:	mov	x0, x27
 2d0:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 2d4:	mov	x0, x19
 2d8:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 2dc:	ldr	x0, [x25]
 2e0:	mov	x1, x19
 2e4:	str	x26, [sp, #120]
 2e8:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 2ec:	mov	x0, x19
 2f0:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 2f4:	ldr	x0, [x25]
 2f8:	mov	x1, x19
 2fc:	str	x22, [sp, #120]
 300:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 304:	mov	x0, x19
 308:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 30c:	ldr	x0, [x25]
 310:	mov	x1, x19
 314:	str	x21, [sp, #120]
 318:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 31c:	mov	x0, x19
 320:	bl	0 <_ZNKSt14default_deleteIN4llvm3mca15ResourceManagerEEclEPS2_.isra.0>
 324:	ldr	x0, [sp, #112]
 328:	cbz	x0, 338 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x320>
 32c:	ldr	x1, [x0]
 330:	ldr	x1, [x1, #8]
 334:	blr	x1
 338:	mov	x0, x25
 33c:	ldp	x19, x20, [sp, #16]
 340:	ldp	x21, x22, [sp, #32]
 344:	ldp	x23, x24, [sp, #48]
 348:	ldp	x25, x26, [sp, #64]
 34c:	ldp	x27, x28, [sp, #80]
 350:	ldp	x29, x30, [sp], #128
 354:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca17SchedulerStrategyESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca17SchedulerStrategyESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3mca17SchedulerStrategyESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EED2Ev:

0000000000000000 <_ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt12_Vector_baseIN4llvm3mca7InstRefESaIS2_EED1Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #104
  20:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  24:	add	x0, x19, #0x50
  28:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  2c:	add	x0, x19, #0x38
  30:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  34:	add	x0, x19, #0x20
  38:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  3c:	ldr	x0, [x19, #24]
  40:	cbz	x0, 48 <_ZN4llvm3mca9SchedulerD1Ev+0x48>
  44:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  48:	add	x0, x19, #0x10
  4c:	bl	0 <_ZN4llvm3mca9SchedulerD1Ev>
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca9SchedulerD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x90                  	// #144
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x1
  18:	str	x23, [sp, #48]
  1c:	mov	x23, x0
  20:	mov	x0, #0x90                  	// #144
  24:	bl	0 <_Znwm>
  28:	mov	x19, x0
  2c:	mov	x0, #0x168                 	// #360
  30:	str	xzr, [sp, #72]
  34:	bl	0 <_Znwm>
  38:	mov	x1, x23
  3c:	mov	x21, x0
  40:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  44:	stp	xzr, x21, [x19, #16]
  48:	adrp	x2, 0 <_ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  4c:	add	x21, sp, #0x58
  50:	mov	x0, x19
  54:	ldr	x2, [x2]
  58:	stp	xzr, xzr, [x19, #32]
  5c:	add	x2, x2, #0x10
  60:	stp	x2, x22, [x19]
  64:	ldr	x1, [sp, #72]
  68:	str	x1, [sp, #88]
  6c:	mov	x1, x21
  70:	stp	xzr, xzr, [x19, #48]
  74:	stp	xzr, xzr, [x19, #64]
  78:	stp	xzr, xzr, [sp, #72]
  7c:	stp	xzr, xzr, [x19, #80]
  80:	stp	xzr, xzr, [x19, #96]
  84:	stp	xzr, xzr, [x19, #112]
  88:	str	xzr, [x19, #128]
  8c:	str	wzr, [x19, #136]
  90:	strb	wzr, [x19, #140]
  94:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  98:	mov	x0, x21
  9c:	bl	0 <_ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  a0:	add	x0, sp, #0x50
  a4:	bl	0 <_ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  a8:	add	x0, sp, #0x48
  ac:	bl	0 <_ZSt11make_uniqueIN4llvm3mca9SchedulerEJRKNS0_12MCSchedModelERNS1_6LSUnitEEENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  b0:	ldp	x21, x22, [sp, #32]
  b4:	mov	x0, x20
  b8:	ldr	x23, [sp, #48]
  bc:	str	x19, [x20]
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldp	x29, x30, [sp], #96
  c8:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca12HardwareUnitESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca12HardwareUnitESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3mca12HardwareUnitESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #12]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	ldr	w0, [x0, #8]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x19, x1
  20:	cmp	w0, w2
  24:	stp	x23, x24, [sp, #48]
  28:	b.cc	104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x104>  // b.lo, b.ul, b.last
  2c:	mov	w2, w2
  30:	add	x1, sp, #0x48
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x0, x2, x2, lsr #16
  4c:	orr	x2, x0, x2, lsr #32
  50:	mov	x0, #0xffffffff            	// #4294967295
  54:	add	x2, x2, #0x1
  58:	stp	x2, x0, [sp, #64]
  5c:	cmp	x2, x0
  60:	add	x0, sp, #0x40
  64:	csel	x0, x0, x1, ls  // ls = plast
  68:	ldr	x23, [x0]
  6c:	lsl	x21, x23, #3
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 94 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x94>
  80:	cbz	x21, c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xc0>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  88:	mov	w1, #0x1                   	// #1
  8c:	add	x0, x0, #0x0
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	ldr	x1, [x20]
  98:	mov	x2, x22
  9c:	ldr	w0, [x20, #8]
  a0:	lsl	x21, x0, #3
  a4:	add	x0, x1, x0, lsl #3
  a8:	cmp	x0, x1
  ac:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xc8>  // b.none
  b0:	ldr	x3, [x1]
  b4:	str	xzr, [x1], #8
  b8:	str	x3, [x2], #8
  bc:	b	a8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xa8>
  c0:	mov	x21, #0x1                   	// #1
  c4:	b	70 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x70>
  c8:	ldr	x24, [x20]
  cc:	add	x21, x24, x21
  d0:	cmp	x24, x21
  d4:	b.eq	e8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xe8>  // b.none
  d8:	sub	x21, x21, #0x8
  dc:	mov	x0, x21
  e0:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
  e4:	b	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xd0>
  e8:	mov	x1, x20
  ec:	ldr	x0, [x1], #16
  f0:	cmp	x0, x1
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x22, [x20]
 100:	str	w23, [x20, #12]
 104:	ldr	w0, [x20, #8]
 108:	ldr	x2, [x20]
 10c:	mov	w1, w0
 110:	ldr	x3, [x19]
 114:	str	xzr, [x19]
 118:	str	x3, [x2, w0, uxtw #3]
 11c:	add	x1, x1, #0x1
 120:	ldr	w2, [x20, #12]
 124:	cmp	x1, x2
 128:	b.ls	14c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_+0x14c>  // b.plast
 12c:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
 130:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
 134:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE9push_backEOS6_>
 138:	add	x3, x3, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x0, x0, #0x0
 144:	mov	w2, #0x43                  	// #67
 148:	bl	0 <__assert_fail>
 14c:	add	w0, w0, #0x1
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x23, x24, [sp, #48]
 158:	str	w0, [x20, #8]
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x29, x30, [sp], #80
 164:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca5StageESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca5StageESt14default_deleteIS2_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3mca5StageESt14default_deleteIS2_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x0
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	w24, #0x88                  	// #136
  20:	cmp	x21, x22
  24:	b.eq	98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x98>  // b.none
  28:	ldr	x19, [x21, #-8]!
  2c:	cbz	x19, 20 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x20>
  30:	ldr	x0, [x19, #576]
  34:	add	x1, x19, #0x250
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	w20, [x19, #24]
  48:	ldr	x23, [x19, #16]
  4c:	umaddl	x20, w20, w24, x23
  50:	cmp	x23, x20
  54:	b.eq	74 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x74>  // b.none
  58:	ldur	x0, [x20, #-80]
  5c:	sub	x20, x20, #0x88
  60:	add	x1, x20, #0x48
  64:	cmp	x0, x1
  68:	b.eq	50 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x50>  // b.none
  6c:	bl	0 <free>
  70:	b	50 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x50>
  74:	ldr	x0, [x19, #16]
  78:	add	x1, x19, #0x20
  7c:	cmp	x0, x1
  80:	b.eq	88 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x88>  // b.none
  84:	bl	0 <free>
  88:	mov	x0, x19
  8c:	mov	x1, #0x350                 	// #848
  90:	bl	0 <_ZdlPvm>
  94:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x20>
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldp	x23, x24, [sp, #48]
  a4:	ldp	x29, x30, [sp], #64
  a8:	ret

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZTVN4llvm3mca10EntryStageE>
  14:	ldr	x0, [x0]
  18:	ldr	w1, [x19, #88]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #80]
  28:	add	x1, x0, x1, lsl #3
  2c:	bl	0 <_ZN4llvm3mca10EntryStageD1Ev>
  30:	ldr	x0, [x19, #80]
  34:	add	x1, x19, #0x60
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca10EntryStageD1Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca10EntryStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0xf0                  	// #240
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	mov	x1, #0x8                   	// #8
   4:	b	0 <_ZdlPvm>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm3mca12HardwareUnitD1Ev>
  18:	mov	x0, x19
  1c:	mov	x1, #0x8                   	// #8
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <_ZdlPvm>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
   0:	mov	x2, x0
   4:	ldr	x0, [x1, #8]
   8:	ldr	x0, [x0]
   c:	ldrb	w1, [x0, #324]
  10:	cbz	w1, 28 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x28>
  14:	ldr	w1, [x2, #8]
  18:	cbz	w1, 28 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x28>
  1c:	ldr	w3, [x2, #16]
  20:	cmp	w1, w3
  24:	b.eq	4c <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x4c>  // b.none
  28:	ldrb	w0, [x0, #325]
  2c:	cbz	w0, 54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>
  30:	ldr	w0, [x2, #12]
  34:	cbz	w0, 48 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x48>
  38:	ldr	w1, [x2, #20]
  3c:	cmp	w0, w1
  40:	cset	w0, eq  // eq = none
  44:	lsl	w0, w0, #1
  48:	ret
  4c:	mov	w0, #0x1                   	// #1
  50:	b	48 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x48>
  54:	mov	w0, #0x0                   	// #0
  58:	b	48 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x48>

000000000000005c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
  5c:	stp	x29, x30, [sp, #-48]!
  60:	mov	x29, sp
  64:	stp	x19, x20, [sp, #16]
  68:	mov	x19, x0
  6c:	mov	x20, x1
  70:	ldr	x0, [x1, #8]
  74:	stp	x21, x22, [sp, #32]
  78:	ldr	x1, [x0]
  7c:	ldrb	w0, [x1, #324]
  80:	ldrb	w22, [x1, #325]
  84:	cmp	w0, #0x0
  88:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  8c:	b.ne	b0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>  // b.any
  90:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  98:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  9c:	add	x3, x3, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x0, x0, #0x0
  a8:	mov	w2, #0xaf                  	// #175
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
  b4:	cbnz	w0, 114 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xb8>
  b8:	ldr	x21, [x21]
  bc:	ldr	w0, [x19, #20]
  c0:	sub	w0, w0, #0x1
  c4:	str	w0, [x19, #20]
  c8:	ldrb	w0, [x21]
  cc:	cbz	w0, 168 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x10c>
  d0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  d4:	add	x0, x0, #0x0
  d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  dc:	tst	w0, #0xff
  e0:	b.eq	168 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x10c>  // b.none
  e4:	bl	0 <_ZN4llvm4dbgsEv>
  e8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  ec:	add	x1, x1, #0x0
  f0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
  f4:	ldr	w1, [x20]
  f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  fc:	ldp	x19, x20, [sp, #16]
 100:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 104:	ldp	x21, x22, [sp, #32]
 108:	add	x1, x1, #0x0
 10c:	ldp	x29, x30, [sp], #48
 110:	b	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 114:	ldr	x0, [x21]
 118:	ldrb	w1, [x0]
 11c:	ldr	w0, [x19, #16]
 120:	sub	w0, w0, #0x1
 124:	str	w0, [x19, #16]
 128:	cbz	w1, 164 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x108>
 12c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 130:	add	x0, x0, #0x0
 134:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 138:	tst	w0, #0xff
 13c:	b.eq	164 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x108>  // b.none
 140:	bl	0 <_ZN4llvm4dbgsEv>
 144:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 148:	add	x1, x1, #0x0
 14c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 150:	ldr	w1, [x20]
 154:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 158:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 15c:	add	x1, x1, #0x0
 160:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 164:	cbnz	w22, b8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x5c>
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x29, x30, [sp], #48
 174:	ret

0000000000000178 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
 178:	stp	x29, x30, [sp, #-48]!
 17c:	mov	x29, sp
 180:	stp	x19, x20, [sp, #16]
 184:	mov	x19, x0
 188:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 18c:	ldr	x0, [x0]
 190:	add	x0, x0, #0x10
 194:	str	x0, [x19]
 198:	ldr	w0, [x19, #56]
 19c:	str	x21, [sp, #32]
 1a0:	cbz	w0, 1d4 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x5c>
 1a4:	ldr	x20, [x19, #40]
 1a8:	ubfiz	x0, x0, #4, #32
 1ac:	add	x21, x20, x0
 1b0:	cmp	x21, x20
 1b4:	b.eq	1d4 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x5c>  // b.none
 1b8:	ldr	w0, [x20]
 1bc:	cmn	w0, #0x3
 1c0:	b.hi	1cc <_ZN4llvm3mca10LSUnitBaseD1Ev+0x54>  // b.pmore
 1c4:	add	x0, x20, #0x8
 1c8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 1cc:	add	x20, x20, #0x10
 1d0:	b	1b0 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x38>
 1d4:	ldr	x0, [x19, #40]
 1d8:	ldr	w1, [x19, #56]
 1dc:	lsl	x1, x1, #4
 1e0:	bl	0 <_ZdlPvm>
 1e4:	mov	x0, x19
 1e8:	ldp	x19, x20, [sp, #16]
 1ec:	ldr	x21, [sp, #32]
 1f0:	ldp	x29, x30, [sp], #48
 1f4:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

00000000000001f8 <_ZN4llvm3mca10LSUnitBaseD0Ev>:
 1f8:	stp	x29, x30, [sp, #-32]!
 1fc:	mov	x29, sp
 200:	str	x19, [sp, #16]
 204:	mov	x19, x0
 208:	bl	178 <_ZN4llvm3mca10LSUnitBaseD1Ev>
 20c:	mov	x0, x19
 210:	mov	x1, #0x48                  	// #72
 214:	ldr	x19, [sp, #16]
 218:	ldp	x29, x30, [sp], #32
 21c:	b	0 <_ZdlPvm>

0000000000000220 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
 220:	stp	x29, x30, [sp, #-144]!
 224:	mov	x29, sp
 228:	stp	x19, x20, [sp, #16]
 22c:	mov	x19, x0
 230:	add	x20, sp, #0x50
 234:	stp	x21, x22, [sp, #32]
 238:	add	x21, x0, #0x20
 23c:	stp	x23, x24, [sp, #48]
 240:	str	x25, [sp, #64]
 244:	bl	0 <_ZN4llvm4dbgsEv>
 248:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 24c:	add	x1, x1, #0x0
 250:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 254:	ldr	w1, [x19, #8]
 258:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 25c:	mov	w1, #0xa                   	// #10
 260:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 264:	bl	0 <_ZN4llvm4dbgsEv>
 268:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 26c:	add	x1, x1, #0x0
 270:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 274:	ldr	w1, [x19, #12]
 278:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 27c:	mov	w1, #0xa                   	// #10
 280:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 284:	bl	0 <_ZN4llvm4dbgsEv>
 288:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 28c:	add	x1, x1, #0x0
 290:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 294:	ldr	w1, [x19, #16]
 298:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 29c:	mov	w1, #0xa                   	// #10
 2a0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2a4:	bl	0 <_ZN4llvm4dbgsEv>
 2a8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2ac:	add	x1, x1, #0x0
 2b0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2b4:	ldr	w1, [x19, #20]
 2b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 2bc:	mov	w1, #0xa                   	// #10
 2c0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2c4:	bl	0 <_ZN4llvm4dbgsEv>
 2c8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2cc:	add	x1, x1, #0x0
 2d0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2d4:	ldr	w0, [x19, #48]
 2d8:	cbnz	w0, 354 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x134>
 2dc:	mov	x8, x20
 2e0:	mov	x0, x21
 2e4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2e8:	mov	x0, x21
 2ec:	adrp	x22, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2f0:	adrp	x21, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 2f4:	add	x22, x22, #0x0
 2f8:	add	x21, x21, #0x0
 2fc:	adrp	x25, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 300:	add	x23, sp, #0x70
 304:	mov	x8, x23
 308:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 30c:	mov	x1, x23
 310:	mov	x0, x20
 314:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 318:	tst	w0, #0xff
 31c:	b.eq	450 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x230>  // b.none
 320:	ldr	x0, [sp, #80]
 324:	ldr	x1, [x0]
 328:	ldr	x0, [sp, #88]
 32c:	cmp	x1, x0
 330:	b.eq	374 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x154>  // b.none
 334:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 338:	add	x3, x3, #0x0
 33c:	mov	w2, #0x4b3                 	// #1203
 340:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 344:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 348:	add	x1, x1, #0x0
 34c:	add	x0, x0, #0x0
 350:	bl	0 <__assert_fail>
 354:	ldr	x1, [x19, #40]
 358:	mov	x3, x21
 35c:	ldr	w2, [x19, #56]
 360:	mov	x0, x20
 364:	mov	w4, #0x0                   	// #0
 368:	add	x2, x1, x2, lsl #4
 36c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 370:	b	2e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xc8>
 374:	ldr	x24, [sp, #96]
 378:	ldr	x19, [x24, #8]
 37c:	bl	0 <_ZN4llvm4dbgsEv>
 380:	mov	x1, x21
 384:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 388:	ldr	w1, [x24]
 38c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 390:	mov	x1, x22
 394:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 398:	add	x1, x25, #0x0
 39c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3a0:	ldr	w1, [x19]
 3a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3a8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3ac:	add	x1, x1, #0x0
 3b0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3b4:	ldr	w1, [x19, #4]
 3b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3bc:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3c0:	add	x1, x1, #0x0
 3c4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3c8:	ldr	w1, [x19, #8]
 3cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3d0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3d4:	add	x1, x1, #0x0
 3d8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3dc:	ldr	w1, [x19, #12]
 3e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3e4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3e8:	add	x1, x1, #0x0
 3ec:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3f0:	ldr	w1, [x19, #16]
 3f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3f8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 3fc:	add	x1, x1, #0x0
 400:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 404:	ldr	w1, [x19, #20]
 408:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 40c:	mov	w1, #0xa                   	// #10
 410:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 414:	ldr	x0, [sp, #80]
 418:	ldr	x1, [x0]
 41c:	ldr	x0, [sp, #88]
 420:	cmp	x1, x0
 424:	b.eq	438 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x218>  // b.none
 428:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 42c:	mov	w2, #0x4cf                 	// #1231
 430:	add	x3, x3, #0x0
 434:	b	340 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x120>
 438:	ldr	x0, [sp, #96]
 43c:	add	x0, x0, #0x10
 440:	str	x0, [sp, #96]
 444:	mov	x0, x20
 448:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 44c:	b	30c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xec>
 450:	ldp	x19, x20, [sp, #16]
 454:	ldp	x21, x22, [sp, #32]
 458:	ldp	x23, x24, [sp, #48]
 45c:	ldr	x25, [sp, #64]
 460:	ldp	x29, x30, [sp], #144
 464:	ret

0000000000000468 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
 468:	stp	x29, x30, [sp, #-160]!
 46c:	mov	x29, sp
 470:	stp	x19, x20, [sp, #16]
 474:	mov	x19, x0
 478:	add	x20, sp, #0x40
 47c:	ldr	x0, [x1, #8]
 480:	add	x1, sp, #0x3c
 484:	mov	x8, x20
 488:	ldr	w0, [x0, #796]
 48c:	str	x21, [sp, #32]
 490:	add	x21, x19, #0x20
 494:	str	w0, [sp, #60]
 498:	mov	x0, x21
 49c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4a0:	mov	x0, x21
 4a4:	add	x8, sp, #0x60
 4a8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4ac:	add	x21, sp, #0x80
 4b0:	ldp	x0, x1, [sp, #96]
 4b4:	stp	x0, x1, [sp, #128]
 4b8:	ldr	x0, [sp, #112]
 4bc:	str	x0, [sp, #144]
 4c0:	ldr	x0, [sp, #120]
 4c4:	mov	x1, x21
 4c8:	str	x0, [sp, #152]
 4cc:	mov	x0, x20
 4d0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4d4:	tst	w0, #0xff
 4d8:	b.ne	4fc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x94>  // b.any
 4dc:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4e0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4e4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 4e8:	add	x3, x3, #0x0
 4ec:	add	x1, x1, #0x0
 4f0:	add	x0, x0, #0x0
 4f4:	mov	w2, #0xa5                  	// #165
 4f8:	bl	0 <__assert_fail>
 4fc:	mov	x0, x20
 500:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 504:	ldr	x1, [x0, #8]
 508:	ldr	w0, [x1]
 50c:	ldr	w2, [x1, #8]
 510:	cmp	w2, w0
 514:	b.ne	528 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xc0>  // b.any
 518:	ldr	w3, [x1, #12]
 51c:	ldr	w0, [x1, #20]
 520:	cmp	w3, w0
 524:	b.ne	548 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xe0>  // b.any
 528:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 52c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 530:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 534:	add	x3, x3, #0x0
 538:	add	x1, x1, #0x0
 53c:	add	x0, x0, #0x0
 540:	mov	w2, #0x8f                  	// #143
 544:	b	4f8 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x90>
 548:	ldr	w2, [x1, #16]
 54c:	add	w0, w0, #0x1
 550:	cmp	w3, w0
 554:	sub	w2, w2, #0x1
 558:	stp	w2, w0, [x1, #16]
 55c:	b.ne	5bc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x154>  // b.any
 560:	ldr	x0, [x1, #24]
 564:	ldr	w4, [x1, #32]
 568:	add	x4, x0, x4, lsl #3
 56c:	cmp	x4, x0
 570:	b.eq	5bc <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x154>  // b.none
 574:	ldr	x1, [x0], #8
 578:	ldr	w3, [x1]
 57c:	ldr	w2, [x1, #8]
 580:	cmp	w2, w3
 584:	b.ne	5a8 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x140>  // b.any
 588:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 58c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 590:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 594:	add	x3, x3, #0x0
 598:	add	x1, x1, #0x0
 59c:	add	x0, x0, #0x0
 5a0:	mov	w2, #0x73                  	// #115
 5a4:	b	4f8 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x90>
 5a8:	ldr	w3, [x1, #4]
 5ac:	add	w2, w2, #0x1
 5b0:	sub	w3, w3, #0x1
 5b4:	stp	w3, w2, [x1, #4]
 5b8:	b	56c <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x104>
 5bc:	mov	x0, x20
 5c0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 5c4:	ldr	x0, [x0, #8]
 5c8:	ldr	w1, [x0, #20]
 5cc:	ldr	w0, [x0, #12]
 5d0:	cmp	w1, w0
 5d4:	b.ne	61c <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1b4>  // b.any
 5d8:	ldp	x0, x1, [sp, #64]
 5dc:	stp	x0, x1, [sp, #128]
 5e0:	ldp	x0, x1, [sp, #80]
 5e4:	stp	x0, x1, [sp, #144]
 5e8:	mov	x0, x21
 5ec:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 5f0:	mov	x20, x0
 5f4:	add	x0, x0, #0x8
 5f8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 5fc:	mov	w0, #0xfffffffe            	// #-2
 600:	str	w0, [x20]
 604:	ldr	w0, [x19, #48]
 608:	sub	w0, w0, #0x1
 60c:	str	w0, [x19, #48]
 610:	ldr	w0, [x19, #52]
 614:	add	w0, w0, #0x1
 618:	str	w0, [x19, #52]
 61c:	ldp	x19, x20, [sp, #16]
 620:	ldr	x21, [sp, #32]
 624:	ldp	x29, x30, [sp], #160
 628:	ret

000000000000062c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
 62c:	stp	x29, x30, [sp, #-32]!
 630:	mov	x29, sp
 634:	stp	x19, x20, [sp, #16]
 638:	mov	x19, x0
 63c:	ldr	x20, [x1, #8]
 640:	ldr	x0, [x20]
 644:	ldrb	w2, [x0, #324]
 648:	cbnz	w2, 654 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
 64c:	ldrb	w0, [x0, #325]
 650:	cbz	w0, 6a4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x78>
 654:	mov	x0, x19
 658:	bl	468 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
 65c:	ldr	w20, [x20, #796]
 660:	mov	x0, x19
 664:	mov	w1, w20
 668:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 66c:	tst	w0, #0xff
 670:	b.ne	6a4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x78>  // b.any
 674:	ldr	w0, [x19, #68]
 678:	cmp	w0, w20
 67c:	b.ne	684 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x58>  // b.any
 680:	str	wzr, [x19, #68]
 684:	ldr	w0, [x19, #76]
 688:	cmp	w0, w20
 68c:	b.ne	694 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x68>  // b.any
 690:	str	wzr, [x19, #76]
 694:	ldr	w0, [x19, #72]
 698:	cmp	w0, w20
 69c:	b.ne	6a4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x78>  // b.any
 6a0:	str	wzr, [x19, #72]
 6a4:	ldp	x19, x20, [sp, #16]
 6a8:	ldp	x29, x30, [sp], #32
 6ac:	ret

00000000000006b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
 6b0:	stp	x29, x30, [sp, #-128]!
 6b4:	mov	x29, sp
 6b8:	ldr	w1, [x0, #48]
 6bc:	stp	x19, x20, [sp, #16]
 6c0:	add	x20, x0, #0x20
 6c4:	add	x19, sp, #0x20
 6c8:	cbnz	w1, 778 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xc8>
 6cc:	mov	x8, x19
 6d0:	mov	x0, x20
 6d4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 6d8:	mov	x0, x20
 6dc:	add	x20, sp, #0x60
 6e0:	add	x8, sp, #0x40
 6e4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 6e8:	ldp	x0, x1, [sp, #64]
 6ec:	stp	x0, x1, [sp, #96]
 6f0:	ldr	x0, [sp, #80]
 6f4:	str	x0, [sp, #112]
 6f8:	ldr	x0, [sp, #88]
 6fc:	mov	x1, x20
 700:	str	x0, [sp, #120]
 704:	mov	x0, x19
 708:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 70c:	tst	w0, #0xff
 710:	b.eq	7b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x100>  // b.none
 714:	mov	x0, x19
 718:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 71c:	ldr	x0, [x0, #8]
 720:	ldp	w1, w2, [x0, #4]
 724:	add	w1, w1, w2
 728:	ldr	w2, [x0]
 72c:	cmp	w2, w1
 730:	b.ls	744 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x94>  // b.plast
 734:	ldr	w1, [x0, #80]
 738:	cbz	w1, 744 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x94>
 73c:	sub	w1, w1, #0x1
 740:	str	w1, [x0, #80]
 744:	ldr	x0, [sp, #32]
 748:	ldr	x1, [x0]
 74c:	ldr	x0, [sp, #40]
 750:	cmp	x1, x0
 754:	b.eq	798 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xe8>  // b.none
 758:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 75c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 760:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 764:	add	x3, x3, #0x0
 768:	add	x1, x1, #0x0
 76c:	add	x0, x0, #0x0
 770:	mov	w2, #0x4cf                 	// #1231
 774:	bl	0 <__assert_fail>
 778:	ldr	x1, [x0, #40]
 77c:	mov	x3, x20
 780:	ldr	w2, [x0, #56]
 784:	mov	w4, #0x0                   	// #0
 788:	mov	x0, x19
 78c:	add	x2, x1, x2, lsl #4
 790:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 794:	b	6d8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x28>
 798:	ldr	x0, [sp, #48]
 79c:	add	x0, x0, #0x10
 7a0:	str	x0, [sp, #48]
 7a4:	mov	x0, x19
 7a8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 7ac:	b	6e8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x38>
 7b0:	ldp	x19, x20, [sp, #16]
 7b4:	ldp	x29, x30, [sp], #128
 7b8:	ret

00000000000007bc <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb>:
 7bc:	stp	x29, x30, [sp, #-48]!
 7c0:	mov	x29, sp
 7c4:	stp	x19, x20, [sp, #16]
 7c8:	mov	x19, x0
 7cc:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 7d0:	stp	x21, x22, [sp, #32]
 7d4:	ldr	x0, [x0]
 7d8:	stp	w2, w3, [x19, #8]
 7dc:	ldr	x22, [x1, #64]
 7e0:	add	x0, x0, #0x10
 7e4:	str	x0, [x19]
 7e8:	mov	w0, #0x1                   	// #1
 7ec:	str	xzr, [x19, #16]
 7f0:	strb	w4, [x19, #24]
 7f4:	stp	xzr, xzr, [x19, #32]
 7f8:	str	xzr, [x19, #48]
 7fc:	str	wzr, [x19, #56]
 800:	str	w0, [x19, #64]
 804:	cbz	x22, 858 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x9c>
 808:	mov	x20, x1
 80c:	mov	w21, w3
 810:	cbnz	w2, 834 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x78>
 814:	ldr	w1, [x22, #36]
 818:	cbz	w1, 834 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x78>
 81c:	mov	x0, x20
 820:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 824:	ldr	w0, [x0, #16]
 828:	cmp	w0, #0x0
 82c:	csel	w0, w0, wzr, ge  // ge = tcont
 830:	str	w0, [x19, #8]
 834:	cbnz	w21, 858 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x9c>
 838:	ldr	w1, [x22, #40]
 83c:	cbz	w1, 858 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x9c>
 840:	mov	x0, x20
 844:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 848:	ldr	w0, [x0, #16]
 84c:	cmp	w0, #0x0
 850:	csel	w0, w0, wzr, ge  // ge = tcont
 854:	str	w0, [x19, #12]
 858:	ldp	x19, x20, [sp, #16]
 85c:	ldp	x21, x22, [sp, #32]
 860:	ldp	x29, x30, [sp], #48
 864:	ret

0000000000000868 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
 868:	stp	x29, x30, [sp, #-80]!
 86c:	mov	x29, sp
 870:	ldr	x1, [x1, #8]
 874:	stp	x21, x22, [sp, #32]
 878:	stp	x19, x20, [sp, #16]
 87c:	mov	x19, x0
 880:	ldr	x22, [x1]
 884:	stp	x23, x24, [sp, #48]
 888:	ldrb	w1, [x22, #324]
 88c:	ldrb	w24, [x22, #326]
 890:	ldrb	w2, [x22, #325]
 894:	str	x25, [sp, #64]
 898:	cbnz	w1, a0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a4>
 89c:	cbz	w2, 9ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x184>
 8a0:	ldr	w0, [x19, #20]
 8a4:	add	w0, w0, #0x1
 8a8:	str	w0, [x19, #20]
 8ac:	mov	x0, x19
 8b0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 8b4:	mov	w1, w0
 8b8:	mov	w20, w0
 8bc:	mov	x0, x19
 8c0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 8c4:	mov	x23, x0
 8c8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 8cc:	ldp	w21, w0, [x19, #68]
 8d0:	cmp	w21, w0
 8d4:	csel	w21, w21, w0, cs  // cs = hs, nlast
 8d8:	cbz	w21, 954 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xec>
 8dc:	mov	w1, w21
 8e0:	mov	x0, x19
 8e4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 8e8:	mov	x25, x0
 8ec:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 8f0:	ldr	x1, [x1]
 8f4:	ldrb	w0, [x1]
 8f8:	cbz	w0, 948 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe0>
 8fc:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 900:	add	x0, x0, #0x0
 904:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 908:	tst	w0, #0xff
 90c:	b.eq	948 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe0>  // b.none
 910:	bl	0 <_ZN4llvm4dbgsEv>
 914:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 918:	add	x1, x1, #0x0
 91c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 920:	mov	w1, w21
 924:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 928:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 92c:	add	x1, x1, #0x0
 930:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 934:	mov	w1, w20
 938:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 93c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 940:	add	x1, x1, #0x0
 944:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 948:	mov	x1, x23
 94c:	mov	x0, x25
 950:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 954:	ldr	w1, [x19, #76]
 958:	cbz	w1, 9d0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x168>
 95c:	mov	x0, x19
 960:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 964:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 968:	mov	x21, x0
 96c:	ldr	x1, [x1]
 970:	ldrb	w0, [x1]
 974:	cbz	w0, 9c4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15c>
 978:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 97c:	add	x0, x0, #0x0
 980:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 984:	tst	w0, #0xff
 988:	b.eq	9c4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15c>  // b.none
 98c:	bl	0 <_ZN4llvm4dbgsEv>
 990:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 994:	add	x1, x1, #0x0
 998:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 99c:	ldr	w1, [x19, #76]
 9a0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 9a4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9a8:	add	x1, x1, #0x0
 9ac:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9b0:	mov	w1, w20
 9b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 9b8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9bc:	add	x1, x1, #0x0
 9c0:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9c4:	mov	x1, x23
 9c8:	mov	x0, x21
 9cc:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9d0:	ldrb	w0, [x22, #324]
 9d4:	str	w20, [x19, #76]
 9d8:	cbz	w0, a4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>
 9dc:	str	w20, [x19, #68]
 9e0:	cbz	w24, a4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>
 9e4:	str	w20, [x19, #72]
 9e8:	b	a4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>
 9ec:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9f0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9f4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 9f8:	add	x3, x3, #0x0
 9fc:	add	x1, x1, #0x0
 a00:	add	x0, x0, #0x0
 a04:	mov	w2, #0x48                  	// #72
 a08:	bl	0 <__assert_fail>
 a0c:	ldr	w1, [x0, #16]
 a10:	add	w1, w1, #0x1
 a14:	str	w1, [x0, #16]
 a18:	cbnz	w2, 8a0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x38>
 a1c:	ldr	w1, [x0, #68]
 a20:	cbz	w1, a68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x200>
 a24:	cbnz	w24, a68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x200>
 a28:	ldr	w2, [x0, #76]
 a2c:	cmp	w1, w2
 a30:	b.ls	a68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x200>  // b.plast
 a34:	ldr	w2, [x0, #72]
 a38:	cmp	w1, w2
 a3c:	b.ls	a68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x200>  // b.plast
 a40:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 a44:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 a48:	ldr	w20, [x19, #68]
 a4c:	mov	w0, w20
 a50:	ldp	x19, x20, [sp, #16]
 a54:	ldp	x21, x22, [sp, #32]
 a58:	ldp	x23, x24, [sp, #48]
 a5c:	ldr	x25, [sp, #64]
 a60:	ldp	x29, x30, [sp], #80
 a64:	ret
 a68:	mov	x0, x19
 a6c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 a70:	mov	w1, w0
 a74:	mov	w20, w0
 a78:	mov	x0, x19
 a7c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 a80:	mov	x21, x0
 a84:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 a88:	ldrb	w0, [x19, #24]
 a8c:	cbnz	w0, b0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a4>
 a90:	ldr	w1, [x19, #76]
 a94:	cbz	w1, b0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a4>
 a98:	mov	x0, x19
 a9c:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 aa0:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 aa4:	mov	x22, x0
 aa8:	ldr	x1, [x1]
 aac:	ldrb	w0, [x1]
 ab0:	cbz	w0, b00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x298>
 ab4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 ab8:	add	x0, x0, #0x0
 abc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 ac0:	tst	w0, #0xff
 ac4:	b.eq	b00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x298>  // b.none
 ac8:	bl	0 <_ZN4llvm4dbgsEv>
 acc:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 ad0:	add	x1, x1, #0x0
 ad4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 ad8:	ldr	w1, [x19, #76]
 adc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 ae0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 ae4:	add	x1, x1, #0x0
 ae8:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 aec:	mov	w1, w20
 af0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 af4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 af8:	add	x1, x1, #0x0
 afc:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b00:	mov	x1, x21
 b04:	mov	x0, x22
 b08:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b0c:	ldr	w1, [x19, #72]
 b10:	cbz	w1, 9dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x174>
 b14:	mov	x0, x19
 b18:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b1c:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 b20:	mov	x22, x0
 b24:	ldr	x1, [x1]
 b28:	ldrb	w0, [x1]
 b2c:	cbz	w0, b7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x314>
 b30:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b34:	add	x0, x0, #0x0
 b38:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 b3c:	tst	w0, #0xff
 b40:	b.eq	b7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x314>  // b.none
 b44:	bl	0 <_ZN4llvm4dbgsEv>
 b48:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b4c:	add	x1, x1, #0x0
 b50:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b54:	ldr	w1, [x19, #72]
 b58:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 b5c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b60:	add	x1, x1, #0x0
 b64:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b68:	mov	w1, w20
 b6c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 b70:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b74:	add	x1, x1, #0x0
 b78:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b7c:	mov	x1, x21
 b80:	mov	x0, x22
 b84:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
 b88:	b	9dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x174>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #40]
   c:	cbnz	x2, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  14:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  18:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x154                 	// #340
  2c:	bl	0 <__assert_fail>
  30:	ldr	w2, [x0, #48]
  34:	cmp	w2, w1
  38:	b.hi	5c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x5c>  // b.pmore
  3c:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  40:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  44:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x156                 	// #342
  58:	b	2c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x2c>
  5c:	ldr	x0, [x0, #32]
  60:	ubfiz	x1, x1, #5, #32
  64:	ldp	x29, x30, [sp], #16
  68:	add	x0, x0, x1
  6c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNK4llvm3mca11MemoryGroup11isExecutingEv:

0000000000000000 <_ZNK4llvm3mca11MemoryGroup11isExecutingEv>:
   0:	ldr	w2, [x0, #16]
   4:	cbz	w2, 20 <_ZNK4llvm3mca11MemoryGroup11isExecutingEv+0x20>
   8:	ldr	w1, [x0, #12]
   c:	ldr	w0, [x0, #20]
  10:	sub	w0, w1, w0
  14:	cmp	w0, w2
  18:	cset	w0, eq  // eq = none
  1c:	ret
  20:	mov	w0, #0x0                   	// #0
  24:	b	1c <_ZNK4llvm3mca11MemoryGroup11isExecutingEv+0x1c>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>:
   0:	ldr	w3, [x0]
   4:	ldr	w2, [x0, #8]
   8:	cmp	w3, w2
   c:	b.ne	38 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE+0x38>  // b.any
  10:	stp	x29, x30, [sp, #-16]!
  14:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  18:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  1c:	mov	x29, sp
  20:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x68                  	// #104
  34:	bl	0 <__assert_fail>
  38:	ldr	w2, [x0, #4]
  3c:	ldr	w3, [x0, #80]
  40:	add	w2, w2, #0x1
  44:	str	w2, [x0, #4]
  48:	ldr	x2, [x1, #8]
  4c:	ldr	w2, [x2, #788]
  50:	cmp	w3, w2
  54:	b.cs	64 <_ZN4llvm3mca11MemoryGroup13onGroupIssuedERKNS0_7InstRefE+0x64>  // b.hs, b.nlast
  58:	ldr	w1, [x1]
  5c:	str	w1, [x0, #72]
  60:	str	w2, [x0, #80]
  64:	ret

Disassembly of section .text._ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_:

0000000000000000 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	w1, [x1]
  14:	add	w1, w1, #0x1
  18:	str	w1, [x20]
  1c:	ldr	w1, [x0, #12]
  20:	ldr	w2, [x0, #20]
  24:	cmp	w2, w1
  28:	b.ne	4c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x4c>  // b.any
  2c:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  30:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  34:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  38:	add	x3, x3, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x0, x0, #0x0
  44:	mov	w2, #0x52                  	// #82
  48:	bl	0 <__assert_fail>
  4c:	mov	x19, x0
  50:	bl	0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  54:	tst	w0, #0xff
  58:	b.eq	68 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x68>  // b.none
  5c:	add	x1, x19, #0x58
  60:	mov	x0, x20
  64:	bl	0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  68:	ldp	w1, w0, [x19, #32]
  6c:	cmp	w1, w0
  70:	b.cc	88 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x88>  // b.lo, b.ul, b.last
  74:	add	x1, x19, #0x28
  78:	add	x0, x19, #0x18
  7c:	mov	x3, #0x8                   	// #8
  80:	mov	x2, #0x0                   	// #0
  84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  88:	ldr	w0, [x19, #32]
  8c:	ldr	x2, [x19, #24]
  90:	mov	w1, w0
  94:	add	x1, x1, #0x1
  98:	str	x20, [x2, w0, uxtw #3]
  9c:	ldr	w2, [x19, #36]
  a0:	cmp	x1, x2
  a4:	b.ls	c8 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xc8>  // b.plast
  a8:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  ac:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  b0:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  b4:	add	x3, x3, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x0, x0, #0x0
  c0:	mov	w2, #0x43                  	// #67
  c4:	b	48 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x48>
  c8:	add	w0, w0, #0x1
  cc:	str	w0, [x19, #32]
  d0:	cbnz	w0, f4 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xf4>
  d4:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  d8:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  dc:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  e0:	add	x3, x3, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x0, x0, #0x0
  ec:	mov	w2, #0xa7                  	// #167
  f0:	b	48 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x48>
  f4:	ldp	x19, x20, [sp, #16]
  f8:	ldp	x29, x30, [sp], #32
  fc:	ret

Disassembly of section .text._ZN4llvm3mca11MemoryGroup14addInstructionEv:

0000000000000000 <_ZN4llvm3mca11MemoryGroup14addInstructionEv>:
   0:	ldr	w1, [x0, #32]
   4:	cbz	w1, 30 <_ZN4llvm3mca11MemoryGroup14addInstructionEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup14addInstructionEv>
  10:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup14addInstructionEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup14addInstructionEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x9c                  	// #156
  2c:	bl	0 <__assert_fail>
  30:	ldr	w1, [x0, #12]
  34:	add	w1, w1, #0x1
  38:	str	w1, [x0, #12]
  3c:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0, #16]
   c:	cbz	x3, 40 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x40>
  10:	ldp	x2, x4, [x0]
  14:	ldr	x2, [x2]
  18:	cmp	x4, x2
  1c:	b.eq	40 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x40>  // b.none
  20:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  24:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  28:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x4c7                 	// #1223
  3c:	bl	0 <__assert_fail>
  40:	ldr	x2, [x1, #16]
  44:	ldr	x4, [x1]
  48:	cbz	x2, 7c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x7c>
  4c:	ldr	x5, [x4]
  50:	ldr	x1, [x1, #8]
  54:	cmp	x5, x1
  58:	b.eq	7c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x7c>  // b.none
  5c:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  60:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  64:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0x4c8                 	// #1224
  78:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x3c>
  7c:	ldr	x0, [x0]
  80:	cmp	x0, x4
  84:	b.eq	a8 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0xa8>  // b.none
  88:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  8c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  90:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x4c9                 	// #1225
  a4:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEneERKSC_+0x3c>
  a8:	cmp	x3, x2
  ac:	cset	w0, ne  // ne = any
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1]
   8:	ldr	x1, [x0, #8]
   c:	cmp	x2, x1
  10:	b.eq	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv>
  1c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEptEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4b9                 	// #1209
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #16]
  40:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca11MemoryGroupESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca11MemoryGroupESt14default_deleteIS2_EED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0]
  10:	cbz	x19, 3c <_ZNSt10unique_ptrIN4llvm3mca11MemoryGroupESt14default_deleteIS2_EED1Ev+0x3c>
  14:	ldr	x0, [x19, #24]
  18:	add	x1, x19, #0x28
  1c:	cmp	x0, x1
  20:	b.eq	28 <_ZNSt10unique_ptrIN4llvm3mca11MemoryGroupESt14default_deleteIS2_EED1Ev+0x28>  // b.none
  24:	bl	0 <free>
  28:	mov	x0, x19
  2c:	mov	x1, #0x68                  	// #104
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPvm>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZN4llvm3mca6LSUnitD2Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca6LSUnitD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	178 <_ZN4llvm3mca10LSUnitBaseD1Ev>

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca6LSUnitD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x50                  	// #80
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0, #16]
   c:	cbz	x3, 40 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x40>
  10:	ldp	x2, x4, [x0]
  14:	ldr	x2, [x2]
  18:	cmp	x4, x2
  1c:	b.eq	40 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x40>  // b.none
  20:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  24:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  28:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x4c7                 	// #1223
  3c:	bl	0 <__assert_fail>
  40:	ldr	x2, [x1, #16]
  44:	ldr	x4, [x1]
  48:	cbz	x2, 7c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x7c>
  4c:	ldr	x5, [x4]
  50:	ldr	x1, [x1, #8]
  54:	cmp	x5, x1
  58:	b.eq	7c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x7c>  // b.none
  5c:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  60:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  64:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0x4c8                 	// #1224
  78:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x3c>
  7c:	ldr	x0, [x0]
  80:	cmp	x0, x4
  84:	b.eq	a8 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0xa8>  // b.none
  88:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  8c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  90:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x4c9                 	// #1225
  a4:	b	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEneERKNS0_IjS6_S8_SB_Lb1EEE+0x3c>
  a8:	cmp	x3, x2
  ac:	cset	w0, ne  // ne = any
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1]
   8:	ldr	x1, [x0, #8]
   c:	cmp	x2, x1
  10:	b.eq	3c <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv>
  1c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEdeEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4b3                 	// #1203
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #16]
  40:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>:
   0:	ldr	w3, [x0, #24]
   4:	cbnz	w3, 14 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x14>
   8:	str	xzr, [x2]
   c:	mov	w0, #0x0                   	// #0
  10:	ret
  14:	ldr	w5, [x1]
  18:	cmn	w5, #0x3
  1c:	b.ls	48 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x48>  // b.plast
  20:	stp	x29, x30, [sp, #-16]!
  24:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  28:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  2c:	mov	x29, sp
  30:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0x250                 	// #592
  44:	bl	0 <__assert_fail>
  48:	ldr	x8, [x0, #8]
  4c:	mov	w0, #0x25                  	// #37
  50:	sub	w3, w3, #0x1
  54:	mov	w4, #0x1                   	// #1
  58:	mul	w0, w5, w0
  5c:	mov	x1, #0x0                   	// #0
  60:	and	w0, w0, w3
  64:	ubfiz	x7, x0, #4, #32
  68:	add	x6, x8, x7
  6c:	ldr	w7, [x8, x7]
  70:	cmp	w5, w7
  74:	b.ne	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x84>  // b.any
  78:	mov	w0, #0x1                   	// #1
  7c:	str	x6, [x2]
  80:	ret
  84:	cmn	w7, #0x1
  88:	b.ne	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x9c>  // b.any
  8c:	cmp	x1, #0x0
  90:	csel	x1, x1, x6, ne  // ne = any
  94:	str	x1, [x2]
  98:	b	c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xc>
  9c:	cmn	w7, #0x2
  a0:	b.ne	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xac>  // b.any
  a4:	cmp	x1, #0x0
  a8:	csel	x1, x1, x6, ne  // ne = any
  ac:	add	w0, w0, w4
  b0:	add	w4, w4, #0x1
  b4:	and	w0, w3, w0
  b8:	b	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x64>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPSC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x2
  10:	add	x2, sp, #0x28
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPSC_>
  18:	ldr	x1, [sp, #40]
  1c:	str	x1, [x19]
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	ret

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>:
   0:	ldp	x1, x2, [x0, #16]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  14:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x4e0                 	// #1248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0, #16]
  38:	cmp	x2, x1
  3c:	b.eq	58 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.none
  40:	ldr	w3, [x1]
  44:	cmn	w3, #0x3
  48:	b.ls	58 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.plast
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x0, #16]
  54:	b	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EE23AdvancePastEmptyBucketsEv+0x34>
  58:	ret

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>:
   0:	ldp	x1, x2, [x0, #16]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  14:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x4e0                 	// #1248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0, #16]
  38:	cmp	x2, x1
  3c:	b.eq	58 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x58>  // b.none
  40:	ldr	w3, [x1]
  44:	cmn	w3, #0x3
  48:	b.ls	58 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x58>  // b.plast
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x0, #16]
  54:	b	34 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EE23AdvancePastEmptyBucketsEv+0x34>
  58:	ret

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC2EPKSB_SE_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb>:
   0:	ldr	x6, [x3]
   4:	stp	x3, x6, [x0]
   8:	stp	x1, x2, [x0, #16]
   c:	ldr	x1, [x3]
  10:	cmp	x1, x6
  14:	b.eq	40 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb+0x40>  // b.none
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb>
  20:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x49f                 	// #1183
  3c:	bl	0 <__assert_fail>
  40:	and	w4, w4, #0xff
  44:	cbnz	w4, 4c <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb+0x4c>
  48:	b	0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb1EEC1EPKSB_SE_RKNS_14DebugEpochBaseEb>
  4c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x3, x0
   8:	mov	w4, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	w2, [x0, #24]
  14:	ldr	x0, [x0, #8]
  18:	add	x2, x0, x2, lsl #4
  1c:	mov	x0, x8
  20:	mov	x1, x2
  24:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	w1, [sp, #60]
  14:	cbz	w1, 9c <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x9c>
  18:	add	x20, x0, #0x20
  1c:	add	x22, sp, #0x60
  20:	mov	x19, x0
  24:	mov	x2, x22
  28:	add	x1, sp, #0x3c
  2c:	mov	x0, x20
  30:	add	x21, sp, #0x40
  34:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  38:	tst	w0, #0xff
  3c:	b.eq	8c <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x8c>  // b.none
  40:	ldr	x0, [x19, #40]
  44:	mov	x3, x20
  48:	ldr	x1, [sp, #96]
  4c:	mov	w4, #0x1                   	// #1
  50:	ldr	w2, [x19, #56]
  54:	add	x2, x0, x2, lsl #4
  58:	mov	x0, x21
  5c:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  60:	mov	x8, x22
  64:	mov	x0, x20
  68:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  6c:	mov	x1, x22
  70:	mov	x0, x21
  74:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  78:	and	w0, w0, #0xff
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x29, x30, [sp], #128
  88:	ret
  8c:	mov	x8, x21
  90:	mov	x0, x20
  94:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  98:	b	60 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x60>
  9c:	mov	w0, #0x0                   	// #0
  a0:	b	7c <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x7c>

Disassembly of section .text._ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC2EPSB_SD_RKNS_14DebugEpochBaseEb:

0000000000000000 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb>:
   0:	ldr	x6, [x3]
   4:	stp	x3, x6, [x0]
   8:	stp	x1, x2, [x0, #16]
   c:	ldr	x1, [x3]
  10:	cmp	x1, x6
  14:	b.eq	40 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb+0x40>  // b.none
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb>
  20:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x49f                 	// #1183
  3c:	bl	0 <__assert_fail>
  40:	and	w4, w4, #0xff
  44:	cbnz	w4, 4c <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb+0x4c>
  48:	b	0 <_ZN4llvm16DenseMapIteratorIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EELb0EEC1EPSB_SD_RKNS_14DebugEpochBaseEb>
  4c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x3, x0
   8:	mov	w4, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	w2, [x0, #24]
  14:	ldr	x0, [x0, #8]
  18:	add	x2, x0, x2, lsl #4
  1c:	mov	x0, x8
  20:	mov	x1, x2
  24:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x28
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>
  1c:	tst	w0, #0xff
  20:	b.eq	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj+0x50>  // b.none
  24:	ldr	x0, [x19, #8]
  28:	mov	x3, x19
  2c:	ldr	x1, [sp, #40]
  30:	mov	w4, #0x1                   	// #1
  34:	ldr	w2, [x19, #24]
  38:	add	x2, x0, x2, lsl #4
  3c:	mov	x0, x20
  40:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret
  50:	mov	x8, x20
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>
  5c:	b	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj+0x44>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	w1, [sp, #44]
  14:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  18:	tst	w0, #0xff
  1c:	b.ne	40 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x40>  // b.any
  20:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  24:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  28:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x11c                 	// #284
  3c:	bl	0 <__assert_fail>
  40:	add	x20, sp, #0x30
  44:	add	x1, sp, #0x2c
  48:	mov	x8, x20
  4c:	add	x0, x19, #0x20
  50:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  54:	mov	x0, x20
  58:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  5c:	ldr	x0, [x0, #8]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #80
  68:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #4, #32
  44:	mov	w2, #0xffffffff            	// #-1
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x5c>  // b.none
  54:	str	w2, [x0], #16
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>:
   0:	sub	w2, w1, #0x1
   4:	stp	x29, x30, [sp, #-80]!
   8:	orr	x2, x2, x2, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w22, [x0, #24]
  28:	orr	x2, x2, x2, lsr #8
  2c:	stp	x23, x24, [sp, #48]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, #0x40
  3c:	ldr	x19, [x0, #8]
  40:	mov	w0, #0x40                  	// #64
  44:	csel	w0, w2, w0, cs  // cs = hs, nlast
  48:	str	w0, [x20, #24]
  4c:	ubfiz	x0, x0, #4, #32
  50:	bl	0 <_Znwm>
  54:	str	x0, [x20, #8]
  58:	cbnz	x19, 78 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x78>
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x23, x24, [sp, #48]
  70:	ldp	x29, x30, [sp], #80
  74:	ret
  78:	ubfiz	x22, x22, #4, #32
  7c:	mov	x21, x19
  80:	add	x23, x19, x22
  84:	add	x24, sp, #0x48
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  90:	cmp	x23, x21
  94:	b.eq	110 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x110>  // b.none
  98:	ldr	w0, [x21]
  9c:	cmn	w0, #0x3
  a0:	b.hi	108 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x108>  // b.pmore
  a4:	mov	x2, x24
  a8:	mov	x1, x21
  ac:	mov	x0, x20
  b0:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  b4:	tst	w0, #0xff
  b8:	b.eq	dc <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xdc>  // b.none
  bc:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  c0:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  c4:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  c8:	add	x3, x3, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x0, x0, #0x0
  d4:	mov	w2, #0x17a                 	// #378
  d8:	bl	0 <__assert_fail>
  dc:	ldr	x1, [sp, #72]
  e0:	ldr	w0, [x21]
  e4:	ldr	x2, [x21, #8]
  e8:	str	w0, [x1]
  ec:	mov	x0, x21
  f0:	str	xzr, [x0, #8]!
  f4:	str	x2, [x1, #8]
  f8:	ldr	w1, [x20, #16]
  fc:	add	w1, w1, #0x1
 100:	str	w1, [x20, #16]
 104:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 108:	add	x21, x21, #0x10
 10c:	b	90 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x90>
 110:	mov	x1, x22
 114:	mov	x0, x19
 118:	bl	0 <_ZdlPvm>
 11c:	b	64 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x64>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x1, [x0]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x2
  14:	add	x1, x1, #0x1
  18:	str	x1, [x0]
  1c:	ldr	w1, [x0, #24]
  20:	mov	x19, x0
  24:	str	x3, [sp, #40]
  28:	ldr	w3, [x0, #16]
  2c:	add	w4, w1, w1, lsl #1
  30:	add	w2, w3, #0x1
  34:	cmp	w4, w2, lsl #2
  38:	b.hi	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x5c>  // b.pmore
  3c:	lsl	w3, w1, #1
  40:	mov	w1, w3
  44:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  48:	add	x2, sp, #0x28
  4c:	mov	x1, x20
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  58:	b	70 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x70>
  5c:	ldr	w3, [x0, #20]
  60:	sub	w3, w1, w3
  64:	sub	w3, w3, w2
  68:	cmp	w3, w1, lsr #3
  6c:	b.ls	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x44>  // b.plast
  70:	ldr	x0, [sp, #40]
  74:	cbnz	x0, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x98>
  78:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  7c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  80:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  84:	add	x3, x3, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x0, x0, #0x0
  90:	mov	w2, #0x22f                 	// #559
  94:	bl	0 <__assert_fail>
  98:	ldr	w1, [x19, #16]
  9c:	add	w1, w1, #0x1
  a0:	str	w1, [x19, #16]
  a4:	ldr	w1, [x0]
  a8:	cmn	w1, #0x1
  ac:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0xbc>  // b.none
  b0:	ldr	w1, [x19, #20]
  b4:	sub	w1, w1, #0x1
  b8:	str	w1, [x19, #20]
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret

Disassembly of section .text._ZN4llvm3mca10LSUnitBase17createMemoryGroupEv:

0000000000000000 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	add	x20, sp, #0x40
  14:	stp	x21, x22, [sp, #32]
  18:	add	x21, x0, #0x20
  1c:	mov	x0, #0x68                  	// #104
  20:	bl	0 <_Znwm>
  24:	add	x1, x0, #0x28
  28:	stp	xzr, xzr, [x0]
  2c:	add	x2, sp, #0x38
  30:	add	x22, sp, #0x50
  34:	stp	xzr, x1, [x0, #16]
  38:	mov	x1, #0x400000000           	// #17179869184
  3c:	str	x1, [x0, #32]
  40:	str	wzr, [x0, #72]
  44:	strh	wzr, [x0, #76]
  48:	str	wzr, [x0, #80]
  4c:	str	wzr, [x0, #88]
  50:	str	xzr, [x0, #96]
  54:	ldr	w1, [x19, #64]
  58:	str	xzr, [sp, #48]
  5c:	str	w1, [sp, #64]
  60:	mov	x1, x20
  64:	str	x0, [sp, #72]
  68:	mov	x0, x21
  6c:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  70:	tst	w0, #0xff
  74:	b.eq	c4 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0xc4>  // b.none
  78:	ldr	x0, [x19, #40]
  7c:	mov	x3, x21
  80:	ldr	w2, [x19, #56]
  84:	mov	w4, #0x1                   	// #1
  88:	ldr	x1, [sp, #56]
  8c:	add	x2, x0, x2, lsl #4
  90:	mov	x0, x22
  94:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  98:	add	x0, x20, #0x8
  9c:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  a0:	add	x0, sp, #0x30
  a4:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  a8:	ldr	w0, [x19, #64]
  ac:	ldp	x21, x22, [sp, #32]
  b0:	add	w1, w0, #0x1
  b4:	str	w1, [x19, #64]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #112
  c0:	ret
  c4:	ldr	x3, [sp, #56]
  c8:	mov	x1, x20
  cc:	mov	x2, x20
  d0:	mov	x0, x21
  d4:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  d8:	mov	x1, x0
  dc:	ldr	w0, [sp, #64]
  e0:	mov	x3, x21
  e4:	mov	w4, #0x1                   	// #1
  e8:	str	w0, [x1]
  ec:	ldr	x0, [sp, #72]
  f0:	str	xzr, [sp, #72]
  f4:	ldr	w2, [x19, #56]
  f8:	str	x0, [x1, #8]
  fc:	ldr	x0, [x19, #40]
 100:	str	x1, [sp, #56]
 104:	add	x2, x0, x2, lsl #4
 108:	b	90 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x90>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	add	x19, x0, #0x20
  14:	ldr	x1, [x1, #8]
  18:	add	x2, sp, #0x38
  1c:	mov	x0, x19
  20:	ldr	w1, [x1, #796]
  24:	str	x21, [sp, #32]
  28:	add	x21, sp, #0x34
  2c:	str	w1, [sp, #52]
  30:	mov	x1, x21
  34:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  38:	tst	w0, #0xff
  3c:	b.eq	78 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x78>  // b.none
  40:	ldr	x0, [sp, #56]
  44:	ldr	x19, [x0, #8]
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  50:	tst	w0, #0xff
  54:	b.eq	9c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x9c>  // b.none
  58:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  5c:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  60:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  64:	add	x3, x3, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x0, x0, #0x0
  70:	mov	w2, #0x79                  	// #121
  74:	bl	0 <__assert_fail>
  78:	ldr	x3, [sp, #56]
  7c:	mov	x1, x21
  80:	mov	x2, x21
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  8c:	str	xzr, [x0, #8]
  90:	ldr	w1, [sp, #52]
  94:	str	w1, [x0]
  98:	b	44 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x44>
  9c:	ldr	w0, [x19, #16]
  a0:	ldr	x1, [x19, #96]
  a4:	add	w0, w0, #0x1
  a8:	str	w0, [x19, #16]
  ac:	ldr	x0, [x20, #8]
  b0:	cbz	x1, c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xc4>
  b4:	ldr	w2, [x1, #788]
  b8:	ldr	w1, [x0, #788]
  bc:	cmp	w2, w1
  c0:	b.ge	d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd0>  // b.tcont
  c4:	ldr	w1, [x20]
  c8:	str	w1, [x19, #88]
  cc:	str	x0, [x19, #96]
  d0:	mov	x0, x19
  d4:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  d8:	tst	w0, #0xff
  dc:	b.eq	108 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x108>  // b.none
  e0:	ldr	x20, [x19, #24]
  e4:	add	x19, x19, #0x58
  e8:	ldur	w21, [x19, #-56]
  ec:	add	x21, x20, x21, lsl #3
  f0:	cmp	x21, x20
  f4:	b.eq	108 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x108>  // b.none
  f8:	ldr	x0, [x20], #8
  fc:	mov	x1, x19
 100:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 104:	b	f0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xf0>
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldr	x21, [sp, #32]
 110:	ldp	x29, x30, [sp], #64
 114:	ret

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>:
       0:	sub	x8, x2, #0x1
       4:	mov	x5, #0x2                   	// #2
       8:	sdiv	x8, x8, x5
       c:	mov	x5, x1
      10:	cmp	x8, x5
      14:	lsl	x7, x5, #4
      18:	b.le	58 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x58>
      1c:	add	x6, x5, #0x1
      20:	lsl	x5, x6, #1
      24:	add	x6, x0, x6, lsl #5
      28:	ldr	x9, [x6, #8]
      2c:	ldur	x6, [x6, #-8]
      30:	cmp	x9, x6
      34:	add	x6, x0, x7
      38:	sbc	x5, x5, xzr
      3c:	lsl	x10, x5, #4
      40:	add	x9, x0, x5, lsl #4
      44:	ldr	w10, [x0, x10]
      48:	str	w10, [x0, x7]
      4c:	ldr	x7, [x9, #8]
      50:	str	x7, [x6, #8]
      54:	b	10 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x10>
      58:	tbnz	w2, #0, 9c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x9c>
      5c:	sub	x2, x2, #0x2
      60:	mov	x6, #0x2                   	// #2
      64:	sdiv	x2, x2, x6
      68:	cmp	x5, x2
      6c:	b.ne	9c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x9c>  // b.any
      70:	add	x5, x5, #0x1
      74:	add	x8, x0, x7
      78:	lsl	x6, x5, #1
      7c:	lsl	x5, x5, #5
      80:	sub	x2, x5, #0x10
      84:	add	x5, x0, x2
      88:	ldr	w2, [x0, x2]
      8c:	str	w2, [x0, x7]
      90:	ldr	x2, [x5, #8]
      94:	sub	x5, x6, #0x1
      98:	str	x2, [x8, #8]
      9c:	sub	x2, x5, #0x1
      a0:	mov	x6, #0x2                   	// #2
      a4:	sdiv	x2, x2, x6
      a8:	lsl	x8, x5, #4
      ac:	add	x7, x0, x5, lsl #4
      b0:	cmp	x1, x5
      b4:	b.ge	e8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xe8>  // b.tcont
      b8:	add	x5, x0, x2, lsl #4
      bc:	lsl	x9, x2, #4
      c0:	ldr	x5, [x5, #8]
      c4:	cmp	x4, x5
      c8:	b.ls	e8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xe8>  // b.plast
      cc:	ldr	w9, [x0, x9]
      d0:	str	w9, [x0, x8]
      d4:	str	x5, [x7, #8]
      d8:	sub	x7, x2, #0x1
      dc:	mov	x5, x2
      e0:	sdiv	x2, x7, x6
      e4:	b	a8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xa8>
      e8:	str	w3, [x7]
      ec:	str	x4, [x7, #8]
      f0:	ret

00000000000000f4 <_ZSt25__unguarded_linear_insertIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops14_Val_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_.isra.0>:
      f4:	ldr	w4, [x0]
      f8:	ldr	x2, [x0, #8]
      fc:	mov	x1, x0
     100:	sub	x0, x0, #0x10
     104:	ldr	x3, [x0, #8]
     108:	cmp	x2, x3
     10c:	b.cs	120 <_ZSt25__unguarded_linear_insertIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops14_Val_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_.isra.0+0x2c>  // b.hs, b.nlast
     110:	ldr	w1, [x0]
     114:	str	w1, [x0, #16]
     118:	str	x3, [x0, #24]
     11c:	b	fc <_ZSt25__unguarded_linear_insertIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops14_Val_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_.isra.0+0x8>
     120:	str	w4, [x1]
     124:	str	x2, [x1, #8]
     128:	ret

000000000000012c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>:
     12c:	cmp	x0, x1
     130:	b.eq	204 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xd8>  // b.none
     134:	mov	x5, x0
     138:	mov	x6, x1
     13c:	add	x0, x0, #0x10
     140:	cmp	x6, x0
     144:	b.eq	204 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xd8>  // b.none
     148:	ldr	x1, [x0, #8]
     14c:	add	x7, x0, #0x10
     150:	ldr	x2, [x5, #8]
     154:	cmp	x1, x2
     158:	b.cs	208 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xdc>  // b.hs, b.nlast
     15c:	sub	x2, x0, x5
     160:	ldur	w3, [x7, #-16]
     164:	mov	x0, x7
     168:	asr	x2, x2, #4
     16c:	cmp	x2, #0x0
     170:	b.le	1f4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xc8>
     174:	ldur	w4, [x0, #-32]
     178:	sub	x0, x0, #0x10
     17c:	str	w4, [x0]
     180:	sub	x2, x2, #0x1
     184:	ldur	x4, [x0, #-8]
     188:	str	x4, [x0, #8]
     18c:	b	16c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x40>
     190:	str	w3, [x5]
     194:	str	x1, [x5, #8]
     198:	mov	x0, x7
     19c:	cmp	x6, x7
     1a0:	b.eq	1ec <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xc0>  // b.none
     1a4:	ldr	x1, [x0, #8]
     1a8:	add	x7, x7, #0x10
     1ac:	ldr	x2, [x5, #8]
     1b0:	cmp	x1, x2
     1b4:	b.cs	210 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xe4>  // b.hs, b.nlast
     1b8:	sub	x2, x0, x5
     1bc:	ldur	w3, [x7, #-16]
     1c0:	mov	x0, x7
     1c4:	asr	x2, x2, #4
     1c8:	cmp	x2, #0x0
     1cc:	b.le	190 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x64>
     1d0:	ldur	w4, [x0, #-32]
     1d4:	sub	x0, x0, #0x10
     1d8:	str	w4, [x0]
     1dc:	sub	x2, x2, #0x1
     1e0:	ldur	x4, [x0, #-8]
     1e4:	str	x4, [x0, #8]
     1e8:	b	1c8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x9c>
     1ec:	ldp	x29, x30, [sp], #16
     1f0:	ret
     1f4:	mov	x0, x7
     1f8:	str	w3, [x5]
     1fc:	str	x1, [x5, #8]
     200:	b	140 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x14>
     204:	ret
     208:	stp	x29, x30, [sp, #-16]!
     20c:	mov	x29, sp
     210:	bl	f4 <_ZSt25__unguarded_linear_insertIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops14_Val_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_.isra.0>
     214:	b	198 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x6c>

0000000000000218 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>:
     218:	stp	x29, x30, [sp, #-64]!
     21c:	mov	x11, x1
     220:	mov	x29, sp
     224:	stp	x19, x20, [sp, #16]
     228:	mov	x19, x0
     22c:	stp	x21, x22, [sp, #32]
     230:	mov	x21, x2
     234:	mov	w22, w3
     238:	str	x23, [sp, #48]
     23c:	add	x23, x0, #0x10
     240:	sub	x0, x11, x19
     244:	cmp	x0, #0x100
     248:	b.le	2b4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x9c>
     24c:	asr	x13, x0, #4
     250:	cbnz	x21, 2c8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xb0>
     254:	sub	x1, x13, #0x2
     258:	asr	x1, x1, #1
     25c:	add	x12, x19, x1, lsl #4
     260:	ldr	x4, [x12, #8]
     264:	mov	x2, x13
     268:	ldr	w3, [x12], #-16
     26c:	mov	x0, x19
     270:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     274:	cbz	x1, 280 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x68>
     278:	sub	x1, x1, #0x1
     27c:	b	260 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x48>
     280:	ldr	w3, [x11, #-16]!
     284:	mov	x1, #0x0                   	// #0
     288:	ldr	w0, [x19]
     28c:	sub	x12, x11, x19
     290:	str	w0, [x11]
     294:	ldr	x0, [x19, #8]
     298:	asr	x2, x12, #4
     29c:	ldr	x4, [x11, #8]
     2a0:	str	x0, [x11, #8]
     2a4:	mov	x0, x19
     2a8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     2ac:	cmp	x12, #0x10
     2b0:	b.gt	280 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x68>
     2b4:	ldp	x19, x20, [sp, #16]
     2b8:	ldp	x21, x22, [sp, #32]
     2bc:	ldr	x23, [sp, #48]
     2c0:	ldp	x29, x30, [sp], #64
     2c4:	ret
     2c8:	asr	x0, x0, #5
     2cc:	ldr	w2, [x19]
     2d0:	ldr	x6, [x19, #24]
     2d4:	lsl	x7, x0, #4
     2d8:	add	x0, x19, x0, lsl #4
     2dc:	sub	x21, x21, #0x1
     2e0:	ldur	x4, [x11, #-8]
     2e4:	ldr	x5, [x0, #8]
     2e8:	ldr	x1, [x19, #8]
     2ec:	cmp	x6, x5
     2f0:	b.cs	37c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x164>  // b.hs, b.nlast
     2f4:	cmp	x5, x4
     2f8:	b.cs	35c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x144>  // b.hs, b.nlast
     2fc:	ldr	w3, [x19, x7]
     300:	str	w3, [x19]
     304:	str	x5, [x19, #8]
     308:	str	w2, [x19, x7]
     30c:	str	x1, [x0, #8]
     310:	mov	x20, x23
     314:	mov	x1, x11
     318:	ldr	x3, [x19, #8]
     31c:	ldr	x0, [x20, #8]
     320:	cmp	x0, x3
     324:	b.cc	3c0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1a8>  // b.lo, b.ul, b.last
     328:	ldur	x2, [x1, #-8]
     32c:	sub	x1, x1, #0x10
     330:	cmp	x3, x2
     334:	b.cc	328 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x110>  // b.lo, b.ul, b.last
     338:	cmp	x20, x1
     33c:	b.cc	3a8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x190>  // b.lo, b.ul, b.last
     340:	mov	x1, x11
     344:	mov	w3, w22
     348:	mov	x2, x21
     34c:	mov	x0, x20
     350:	bl	218 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
     354:	mov	x11, x20
     358:	b	240 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x28>
     35c:	cmp	x6, x4
     360:	b.cs	384 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x16c>  // b.hs, b.nlast
     364:	ldur	w0, [x11, #-16]
     368:	str	w0, [x19]
     36c:	str	x4, [x19, #8]
     370:	stur	w2, [x11, #-16]
     374:	stur	x1, [x11, #-8]
     378:	b	310 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xf8>
     37c:	cmp	x6, x4
     380:	b.cs	39c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x184>  // b.hs, b.nlast
     384:	ldr	w0, [x19, #16]
     388:	str	w0, [x19]
     38c:	str	x6, [x19, #8]
     390:	str	w2, [x19, #16]
     394:	str	x1, [x19, #24]
     398:	b	310 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xf8>
     39c:	cmp	x5, x4
     3a0:	b.cs	2fc <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xe4>  // b.hs, b.nlast
     3a4:	b	364 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x14c>
     3a8:	ldr	w4, [x1]
     3ac:	ldr	w3, [x20]
     3b0:	str	w4, [x20]
     3b4:	str	x2, [x20, #8]
     3b8:	str	w3, [x1]
     3bc:	str	x0, [x1, #8]
     3c0:	add	x20, x20, #0x10
     3c4:	b	318 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x100>

00000000000003c8 <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     3c8:	mov	x1, x0
     3cc:	mov	w2, #0x14                  	// #20
     3d0:	ldr	x0, [x0, #16]
     3d4:	ldr	w1, [x1, #24]
     3d8:	umaddl	x1, w1, w2, x0
     3dc:	cmp	x1, x0
     3e0:	b.eq	3f0 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x28>  // b.none
     3e4:	add	x0, x0, #0x14
     3e8:	stur	wzr, [x0, #-8]
     3ec:	b	3dc <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x14>
     3f0:	ret

00000000000003f4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
     3f4:	stp	x29, x30, [sp, #-112]!
     3f8:	mov	x29, sp
     3fc:	stp	x27, x28, [sp, #80]
     400:	ldrh	w27, [x2, #8]
     404:	ldr	x28, [x0, #112]
     408:	stp	x21, x22, [sp, #32]
     40c:	ldrh	w21, [x2, #8]
     410:	stp	x23, x24, [sp, #48]
     414:	mov	x24, x0
     418:	ldrh	w0, [x1, #12]
     41c:	add	x21, x28, x21, lsl #5
     420:	stp	x19, x20, [sp, #16]
     424:	mov	x20, x1
     428:	add	x0, x28, x0, lsl #5
     42c:	stp	x25, x26, [sp, #64]
     430:	ldrh	w26, [x1, #12]
     434:	mov	x25, x2
     438:	ldr	w1, [x21, #16]
     43c:	ldr	w2, [x0, #16]
     440:	cmp	w2, w1
     444:	b.ne	594 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1a0>  // b.any
     448:	ldrh	w22, [x0, #24]
     44c:	cbz	w22, 470 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x7c>
     450:	cmp	w22, w26
     454:	b.eq	470 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x7c>  // b.none
     458:	ubfiz	x0, x22, #5, #16
     45c:	add	x0, x28, x0
     460:	ldrb	w19, [x0, #28]
     464:	cbz	w19, 574 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x180>
     468:	ldrb	w19, [x20, #20]
     46c:	cbz	w19, 574 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x180>
     470:	mov	w1, w1
     474:	add	x0, x24, #0x10
     478:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     47c:	mov	x23, x0
     480:	ldr	w0, [x0, #8]
     484:	cbz	w0, 494 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xa0>
     488:	ldr	w1, [x23, #12]
     48c:	cmp	w0, w1
     490:	b.eq	594 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1a0>  // b.none
     494:	mov	w1, w27
     498:	add	x0, x24, #0x88
     49c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     4a0:	and	w19, w0, #0xff
     4a4:	ldrb	w0, [x23, #16]
     4a8:	cbz	w0, 4b0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xbc>
     4ac:	cbz	w19, 574 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x180>
     4b0:	ldrh	w21, [x21, #24]
     4b4:	mov	w3, #0x0                   	// #0
     4b8:	ldr	x2, [x24, #8]
     4bc:	cmp	w21, #0x0
     4c0:	csel	w21, w21, w27, ne  // ne = any
     4c4:	cmp	w22, #0x0
     4c8:	csel	w22, w22, w26, ne  // ne = any
     4cc:	add	x26, sp, #0x60
     4d0:	ubfiz	x0, x21, #5, #16
     4d4:	mov	w1, w22
     4d8:	add	x0, x28, x0
     4dc:	ldrh	w0, [x0, #26]
     4e0:	cmp	w0, #0x0
     4e4:	csel	w21, w21, w0, eq  // eq = none
     4e8:	ubfiz	x0, x22, #5, #32
     4ec:	add	x28, x28, x0
     4f0:	mov	x0, x26
     4f4:	strh	w21, [x28, #26]
     4f8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     4fc:	ldr	x0, [sp, #104]
     500:	cbz	x0, 520 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x12c>
     504:	ldr	x0, [x24, #112]
     508:	ldrh	w1, [sp, #96]
     50c:	add	x1, x0, x1, lsl #5
     510:	mov	x0, x26
     514:	strh	w21, [x1, #26]
     518:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     51c:	b	4fc <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x108>
     520:	cbz	w19, 530 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x13c>
     524:	mov	w0, #0x1                   	// #1
     528:	strb	w0, [x20, #21]
     52c:	strb	w0, [x25, #41]
     530:	ldr	w0, [x20, #64]
     534:	cbz	w0, 558 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x164>
     538:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     53c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     540:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     544:	add	x3, x3, #0x0
     548:	add	x1, x1, #0x0
     54c:	add	x0, x0, #0x0
     550:	mov	w2, #0xcf                  	// #207
     554:	bl	0 <__assert_fail>
     558:	str	wzr, [x20, #8]
     55c:	mov	w0, #0x1                   	// #1
     560:	strb	w0, [x20, #22]
     564:	mov	w19, #0x1                   	// #1
     568:	ldr	w0, [x23, #12]
     56c:	add	w0, w0, #0x1
     570:	str	w0, [x23, #12]
     574:	mov	w0, w19
     578:	ldp	x19, x20, [sp, #16]
     57c:	ldp	x21, x22, [sp, #32]
     580:	ldp	x23, x24, [sp, #48]
     584:	ldp	x25, x26, [sp, #64]
     588:	ldp	x27, x28, [sp, #80]
     58c:	ldp	x29, x30, [sp], #112
     590:	ret
     594:	mov	w19, #0x0                   	// #0
     598:	b	574 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x180>

000000000000059c <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     59c:	stp	x29, x30, [sp, #-64]!
     5a0:	mov	x29, sp
     5a4:	stp	x19, x20, [sp, #16]
     5a8:	ldp	w19, w20, [x1]
     5ac:	stp	x21, x22, [sp, #32]
     5b0:	add	x21, x0, #0x10
     5b4:	stp	x2, x3, [sp, #48]
     5b8:	add	x22, sp, #0x30
     5bc:	cbz	w19, 5f4 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x58>
     5c0:	mov	w19, w19
     5c4:	mov	x0, x21
     5c8:	mov	x1, x19
     5cc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     5d0:	ldr	w1, [x0, #4]
     5d4:	add	w1, w1, w20
     5d8:	str	w1, [x0, #4]
     5dc:	mov	x1, x19
     5e0:	mov	x0, x22
     5e4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     5e8:	ldr	w1, [x0]
     5ec:	add	w1, w1, w20
     5f0:	str	w1, [x0]
     5f4:	mov	x1, #0x0                   	// #0
     5f8:	mov	x0, x21
     5fc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     600:	ldr	w1, [x0, #4]
     604:	add	w1, w1, w20
     608:	str	w1, [x0, #4]
     60c:	mov	x1, #0x0                   	// #0
     610:	mov	x0, x22
     614:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     618:	ldr	w1, [x0]
     61c:	ldp	x21, x22, [sp, #32]
     620:	add	w20, w1, w20
     624:	str	w20, [x0]
     628:	ldp	x19, x20, [sp, #16]
     62c:	ldp	x29, x30, [sp], #64
     630:	ret

0000000000000634 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     634:	stp	x29, x30, [sp, #-144]!
     638:	mov	x29, sp
     63c:	stp	x21, x22, [sp, #32]
     640:	ldrh	w22, [x2, #12]
     644:	stp	x19, x20, [sp, #16]
     648:	stp	x23, x24, [sp, #48]
     64c:	stp	x25, x26, [sp, #64]
     650:	stp	x27, x28, [sp, #80]
     654:	str	w1, [sp, #108]
     658:	stp	x3, x4, [sp, #112]
     65c:	cbnz	w22, 680 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4c>
     660:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     664:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     668:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     66c:	add	x3, x3, #0x0
     670:	add	x1, x1, #0x0
     674:	add	x0, x0, #0x0
     678:	mov	w2, #0x97                  	// #151
     67c:	bl	0 <__assert_fail>
     680:	mov	x19, x0
     684:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     688:	mov	x24, x1
     68c:	mov	x20, x2
     690:	ldr	x0, [x0]
     694:	ldrb	w0, [x0]
     698:	cbz	w0, 6fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xc8>
     69c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6a0:	add	x0, x0, #0x0
     6a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     6a8:	tst	w0, #0xff
     6ac:	b.eq	6fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xc8>  // b.none
     6b0:	bl	0 <_ZN4llvm4dbgsEv>
     6b4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6b8:	add	x1, x1, #0x0
     6bc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6c0:	mov	w1, w24
     6c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6c8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6cc:	add	x1, x1, #0x0
     6d0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6d4:	mov	x21, x0
     6d8:	ldr	x0, [x19, #8]
     6dc:	mov	w1, w22
     6e0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6e4:	mov	x1, x0
     6e8:	mov	x0, x21
     6ec:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6f0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6f4:	add	x1, x1, #0x0
     6f8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     6fc:	ldr	x1, [x19, #112]
     700:	ubfiz	x0, x22, #5, #16
     704:	ldrb	w27, [x20, #21]
     708:	add	x0, x1, x0
     70c:	ldrb	w25, [x20, #22]
     710:	cmp	w27, #0x0
     714:	ccmp	w25, #0x0, #0x0, eq  // eq = none
     718:	ldrh	w21, [x0, #24]
     71c:	cset	w26, eq  // eq = none
     720:	ldr	w2, [x0, #16]
     724:	str	w2, [x20, #16]
     728:	cbz	w21, 78c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x158>
     72c:	cmp	w21, w22
     730:	b.eq	78c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x158>  // b.none
     734:	ldrb	w0, [x20, #20]
     738:	cbnz	w0, 790 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x15c>
     73c:	ubfiz	x2, x21, #5, #16
     740:	add	x0, x1, x2
     744:	ldr	x0, [x0, #8]
     748:	cbz	x0, 784 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x150>
     74c:	ldr	w1, [x1, x2]
     750:	cmp	w24, w1
     754:	b.eq	784 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x150>  // b.none
     758:	cbz	w25, 77c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x148>
     75c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     760:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     764:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     768:	add	x3, x3, #0x0
     76c:	add	x1, x1, #0x0
     770:	add	x0, x0, #0x0
     774:	mov	w2, #0xbe                  	// #190
     778:	b	67c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x48>
     77c:	mov	x2, x20
     780:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
     784:	mov	w26, #0x0                   	// #0
     788:	b	790 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x15c>
     78c:	mov	w21, w22
     790:	ldrb	w0, [x20, #20]
     794:	cbnz	w0, 7e8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b4>
     798:	ldrh	w28, [x20, #12]
     79c:	add	x23, x19, #0x88
     7a0:	add	x22, sp, #0x80
     7a4:	mov	w1, w28
     7a8:	mov	x0, x23
     7ac:	cbz	w27, 7f0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1bc>
     7b0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7b4:	ldr	x2, [x19, #8]
     7b8:	mov	w1, w28
     7bc:	mov	x0, x22
     7c0:	mov	w3, #0x0                   	// #0
     7c4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7c8:	ldr	x0, [sp, #136]
     7cc:	cbz	x0, 828 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1f4>
     7d0:	ldrh	w1, [sp, #128]
     7d4:	mov	x0, x23
     7d8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7dc:	mov	x0, x22
     7e0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7e4:	b	7c8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x194>
     7e8:	mov	w28, w21
     7ec:	b	79c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x168>
     7f0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7f4:	ldr	x2, [x19, #8]
     7f8:	mov	w1, w28
     7fc:	mov	x0, x22
     800:	mov	w3, #0x0                   	// #0
     804:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     808:	ldr	x0, [sp, #136]
     80c:	cbz	x0, 828 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1f4>
     810:	ldrh	w1, [sp, #128]
     814:	mov	x0, x23
     818:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     81c:	mov	x0, x22
     820:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     824:	b	808 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1d4>
     828:	cbnz	w25, 8a8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x274>
     82c:	ldr	x1, [x19, #112]
     830:	ubfiz	x28, x21, #5, #16
     834:	ldr	x2, [x19, #8]
     838:	add	x0, x1, x28
     83c:	str	w24, [x1, x28]
     840:	mov	w3, #0x0                   	// #0
     844:	mov	w1, w21
     848:	str	x20, [x0, #8]
     84c:	strh	wzr, [x0, #26]
     850:	mov	x0, x22
     854:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     858:	ldr	x0, [sp, #136]
     85c:	cbz	x0, 88c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x258>
     860:	ldrh	w0, [sp, #128]
     864:	ldr	x1, [x19, #112]
     868:	lsl	x2, x0, #5
     86c:	ldr	w3, [sp, #108]
     870:	add	x0, x1, x0, lsl #5
     874:	str	w3, [x1, x2]
     878:	str	x20, [x0, #8]
     87c:	strh	wzr, [x0, #26]
     880:	mov	x0, x22
     884:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     888:	b	858 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x224>
     88c:	cbz	w26, 8a8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x274>
     890:	ldp	x2, x3, [sp, #112]
     894:	mov	x0, x19
     898:	ldr	x1, [x19, #112]
     89c:	add	x1, x1, x28
     8a0:	add	x1, x1, #0x10
     8a4:	bl	59c <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     8a8:	ldrb	w0, [x20, #20]
     8ac:	cbz	w0, 910 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2dc>
     8b0:	ldr	x2, [x19, #8]
     8b4:	mov	w1, w21
     8b8:	mov	x0, x22
     8bc:	mov	w3, #0x0                   	// #0
     8c0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     8c4:	ldr	x0, [sp, #136]
     8c8:	cbz	x0, 910 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2dc>
     8cc:	ldrh	w1, [sp, #128]
     8d0:	cbnz	w25, 8f0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2bc>
     8d4:	ldr	x3, [x19, #112]
     8d8:	ubfiz	x0, x1, #5, #16
     8dc:	ldr	w4, [sp, #108]
     8e0:	add	x2, x3, x0
     8e4:	str	w4, [x3, x0]
     8e8:	str	x20, [x2, #8]
     8ec:	strh	wzr, [x2, #26]
     8f0:	mov	x0, x23
     8f4:	cbz	w27, 908 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2d4>
     8f8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     8fc:	mov	x0, x22
     900:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     904:	b	8c4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x290>
     908:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     90c:	b	8fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2c8>
     910:	ldp	x19, x20, [sp, #16]
     914:	ldp	x21, x22, [sp, #32]
     918:	ldp	x23, x24, [sp, #48]
     91c:	ldp	x25, x26, [sp, #64]
     920:	ldp	x27, x28, [sp, #80]
     924:	ldp	x29, x30, [sp], #144
     928:	ret

000000000000092c <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     92c:	stp	x29, x30, [sp, #-64]!
     930:	mov	x29, sp
     934:	stp	x19, x20, [sp, #16]
     938:	ldp	w19, w20, [x1]
     93c:	stp	x21, x22, [sp, #32]
     940:	add	x21, x0, #0x10
     944:	stp	x2, x3, [sp, #48]
     948:	add	x22, sp, #0x30
     94c:	cbz	w19, 984 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x58>
     950:	mov	w19, w19
     954:	mov	x0, x21
     958:	mov	x1, x19
     95c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     960:	ldr	w1, [x0, #4]
     964:	sub	w1, w1, w20
     968:	str	w1, [x0, #4]
     96c:	mov	x1, x19
     970:	mov	x0, x22
     974:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     978:	ldr	w1, [x0]
     97c:	add	w1, w1, w20
     980:	str	w1, [x0]
     984:	mov	x1, #0x0                   	// #0
     988:	mov	x0, x21
     98c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     990:	ldr	w1, [x0, #4]
     994:	sub	w1, w1, w20
     998:	str	w1, [x0, #4]
     99c:	mov	x1, #0x0                   	// #0
     9a0:	mov	x0, x22
     9a4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9a8:	ldr	w1, [x0]
     9ac:	ldp	x21, x22, [sp, #32]
     9b0:	add	w20, w1, w20
     9b4:	str	w20, [x0]
     9b8:	ldp	x19, x20, [sp, #16]
     9bc:	ldp	x29, x30, [sp], #64
     9c0:	ret

00000000000009c4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
     9c4:	stp	x29, x30, [sp, #-64]!
     9c8:	mov	x29, sp
     9cc:	stp	x19, x20, [sp, #16]
     9d0:	mov	x20, x0
     9d4:	ldrb	w0, [x1, #22]
     9d8:	stp	x21, x22, [sp, #32]
     9dc:	cbnz	w0, b54 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x190>
     9e0:	ldrh	w21, [x1, #12]
     9e4:	mov	x19, x1
     9e8:	cbnz	w21, a0c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x48>
     9ec:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9f0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9f4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9f8:	add	x3, x3, #0x0
     9fc:	add	x1, x1, #0x0
     a00:	add	x0, x0, #0x0
     a04:	mov	w2, #0xfc                  	// #252
     a08:	bl	0 <__assert_fail>
     a0c:	ldr	w0, [x1, #8]
     a10:	cmn	w0, #0x200
     a14:	b.ne	a38 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x74>  // b.any
     a18:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a1c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a20:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a24:	add	x3, x3, #0x0
     a28:	add	x1, x1, #0x0
     a2c:	add	x0, x0, #0x0
     a30:	mov	w2, #0xfd                  	// #253
     a34:	b	a08 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x44>
     a38:	cmp	w0, #0x0
     a3c:	b.le	a60 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x9c>
     a40:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a44:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a48:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a4c:	add	x3, x3, #0x0
     a50:	add	x1, x1, #0x0
     a54:	add	x0, x0, #0x0
     a58:	mov	w2, #0xff                  	// #255
     a5c:	b	a08 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x44>
     a60:	ldr	x1, [x20, #112]
     a64:	ubfiz	x0, x21, #5, #16
     a68:	add	x0, x1, x0
     a6c:	ldrh	w0, [x0, #24]
     a70:	cmp	w0, #0x0
     a74:	ccmp	w0, w21, #0x4, ne  // ne = any
     a78:	b.eq	a88 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xc4>  // b.none
     a7c:	ldrb	w4, [x19, #20]
     a80:	mov	w21, w0
     a84:	cbz	w4, aa4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xe0>
     a88:	ldrb	w0, [x19, #21]
     a8c:	cbnz	w0, aa4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xe0>
     a90:	ubfiz	x0, x21, #5, #16
     a94:	add	x1, x1, x0
     a98:	mov	x0, x20
     a9c:	add	x1, x1, #0x10
     aa0:	bl	92c <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     aa4:	ldr	x1, [x20, #112]
     aa8:	ubfiz	x0, x21, #5, #16
     aac:	add	x0, x1, x0
     ab0:	ldr	x1, [x0, #8]
     ab4:	cmp	x19, x1
     ab8:	b.ne	ac0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xfc>  // b.any
     abc:	str	xzr, [x0, #8]
     ac0:	ldr	x2, [x20, #8]
     ac4:	add	x22, sp, #0x30
     ac8:	mov	w1, w21
     acc:	mov	x0, x22
     ad0:	mov	w3, #0x0                   	// #0
     ad4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ad8:	ldr	x0, [sp, #56]
     adc:	cbz	x0, b08 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x144>
     ae0:	ldr	x1, [x20, #112]
     ae4:	ldrh	w0, [sp, #48]
     ae8:	add	x0, x1, x0, lsl #5
     aec:	ldr	x1, [x0, #8]
     af0:	cmp	x19, x1
     af4:	b.ne	afc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x138>  // b.any
     af8:	str	xzr, [x0, #8]
     afc:	mov	x0, x22
     b00:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b04:	b	ad8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x114>
     b08:	ldrb	w0, [x19, #20]
     b0c:	cbz	w0, b54 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x190>
     b10:	ldr	x2, [x20, #8]
     b14:	mov	w1, w21
     b18:	mov	x0, x22
     b1c:	mov	w3, #0x0                   	// #0
     b20:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b24:	ldr	x0, [sp, #56]
     b28:	cbz	x0, b54 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x190>
     b2c:	ldr	x1, [x20, #112]
     b30:	ldrh	w0, [sp, #48]
     b34:	add	x0, x1, x0, lsl #5
     b38:	ldr	x1, [x0, #8]
     b3c:	cmp	x19, x1
     b40:	b.ne	b48 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x184>  // b.any
     b44:	str	xzr, [x0, #8]
     b48:	mov	x0, x22
     b4c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b50:	b	b24 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x160>
     b54:	ldp	x19, x20, [sp, #16]
     b58:	ldp	x21, x22, [sp, #32]
     b5c:	ldp	x29, x30, [sp], #64
     b60:	ret

0000000000000b64 <_ZNK4llvm3mca12RegisterFile4dumpEv>:
     b64:	stp	x29, x30, [sp, #-80]!
     b68:	mov	x29, sp
     b6c:	stp	x19, x20, [sp, #16]
     b70:	mov	x19, x0
     b74:	mov	x20, #0x0                   	// #0
     b78:	stp	x25, x26, [sp, #64]
     b7c:	add	x25, x0, #0x88
     b80:	ldr	x0, [x0, #8]
     b84:	stp	x21, x22, [sp, #32]
     b88:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b8c:	add	x22, x22, #0x0
     b90:	stp	x23, x24, [sp, #48]
     b94:	ldr	w26, [x0, #8]
     b98:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     b9c:	add	x23, x23, #0x0
     ba0:	cmp	w26, w20
     ba4:	b.ls	c7c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x118>  // b.plast
     ba8:	mov	w1, w20
     bac:	mov	x0, x25
     bb0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bb4:	tst	w0, #0xff
     bb8:	b.eq	c74 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x110>  // b.none
     bbc:	ldr	x21, [x19, #112]
     bc0:	bl	0 <_ZN4llvm4dbgsEv>
     bc4:	mov	x24, x0
     bc8:	mov	w1, w20
     bcc:	ldr	x0, [x19, #8]
     bd0:	add	x21, x21, x20, lsl #5
     bd4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bd8:	mov	x1, x0
     bdc:	mov	x0, x24
     be0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     be4:	mov	x1, x22
     be8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bec:	mov	x1, x20
     bf0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     bf4:	mov	x1, x23
     bf8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bfc:	ldr	w1, [x21, #16]
     c00:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     c04:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c08:	add	x1, x1, #0x0
     c0c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c10:	ldr	w1, [x21, #20]
     c14:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     c18:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c1c:	add	x1, x1, #0x0
     c20:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c24:	ldrh	w1, [x21, #24]
     c28:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     c2c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c30:	add	x1, x1, #0x0
     c34:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c38:	mov	x24, x0
     c3c:	mov	w1, w20
     c40:	mov	x0, x25
     c44:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c48:	and	x1, x0, #0xff
     c4c:	mov	x0, x24
     c50:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     c54:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c58:	add	x1, x1, #0x0
     c5c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c60:	mov	x0, x21
     c64:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
     c68:	bl	0 <_ZN4llvm4dbgsEv>
     c6c:	mov	w1, #0xa                   	// #10
     c70:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c74:	add	x20, x20, #0x1
     c78:	b	ba0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3c>
     c7c:	ldr	w24, [x19, #24]
     c80:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c84:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c88:	add	x23, x23, #0x0
     c8c:	add	x22, x22, #0x0
     c90:	add	x19, x19, #0x10
     c94:	mov	x20, #0x0                   	// #0
     c98:	cmp	w24, w20
     c9c:	b.ls	cfc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x198>  // b.plast
     ca0:	bl	0 <_ZN4llvm4dbgsEv>
     ca4:	mov	x1, x23
     ca8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     cac:	mov	x1, x20
     cb0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cb4:	mov	x1, x20
     cb8:	mov	x0, x19
     cbc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     cc0:	mov	x21, x0
     cc4:	add	x20, x20, #0x1
     cc8:	bl	0 <_ZN4llvm4dbgsEv>
     ccc:	mov	x1, x22
     cd0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     cd4:	ldr	w1, [x21]
     cd8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cdc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ce0:	add	x1, x1, #0x0
     ce4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ce8:	ldr	w1, [x21, #4]
     cec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cf0:	mov	w1, #0xa                   	// #10
     cf4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     cf8:	b	c98 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x134>
     cfc:	ldp	x19, x20, [sp, #16]
     d00:	ldp	x21, x22, [sp, #32]
     d04:	ldp	x23, x24, [sp, #48]
     d08:	ldp	x25, x26, [sp, #64]
     d0c:	ldp	x29, x30, [sp], #80
     d10:	ret

0000000000000d14 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
     d14:	stp	x29, x30, [sp, #-128]!
     d18:	mov	x29, sp
     d1c:	stp	x19, x20, [sp, #16]
     d20:	add	x19, sp, #0x60
     d24:	mov	x20, x1
     d28:	add	x1, x19, #0x10
     d2c:	stp	x21, x22, [sp, #32]
     d30:	ldr	w21, [x0, #24]
     d34:	mov	x22, x0
     d38:	mov	x0, #0x400000000           	// #17179869184
     d3c:	stp	x23, x24, [sp, #48]
     d40:	cmp	x21, #0x4
     d44:	mov	x23, x2
     d48:	stp	x25, x26, [sp, #64]
     d4c:	stp	x27, x28, [sp, #80]
     d50:	stp	x1, x0, [sp, #96]
     d54:	b.ls	d68 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x54>  // b.plast
     d58:	mov	x2, x21
     d5c:	mov	x0, x19
     d60:	mov	x3, #0x4                   	// #4
     d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     d68:	mov	x1, x21
     d6c:	mov	x0, x19
     d70:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     d74:	ldr	x0, [sp, #96]
     d78:	ldr	w1, [sp, #104]
     d7c:	add	x1, x0, x1, lsl #2
     d80:	cmp	x1, x0
     d84:	b.eq	d90 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x7c>  // b.none
     d88:	str	wzr, [x0], #4
     d8c:	b	d80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x6c>
     d90:	add	x23, x20, x23, lsl #1
     d94:	cmp	x23, x20
     d98:	b.eq	df0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xdc>  // b.none
     d9c:	ldr	x0, [x22, #112]
     da0:	ldrh	w21, [x20]
     da4:	add	x21, x0, x21, lsl #5
     da8:	ldr	w1, [x21, #16]
     dac:	cbz	w1, dcc <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xb8>
     db0:	mov	w1, w1
     db4:	mov	x0, x19
     db8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     dbc:	ldr	w1, [x0]
     dc0:	ldr	w2, [x21, #20]
     dc4:	add	w1, w1, w2
     dc8:	str	w1, [x0]
     dcc:	mov	x1, #0x0                   	// #0
     dd0:	mov	x0, x19
     dd4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     dd8:	ldr	w1, [x0]
     ddc:	ldr	w2, [x21, #20]
     de0:	add	x20, x20, #0x2
     de4:	add	w1, w1, w2
     de8:	str	w1, [x0]
     dec:	b	d94 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x80>
     df0:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
     df4:	ldr	w26, [x22, #24]
     df8:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     dfc:	add	x20, x22, #0x10
     e00:	ldr	x24, [x24]
     e04:	add	x25, x25, #0x0
     e08:	mov	x21, #0x0                   	// #0
     e0c:	mov	w23, #0x0                   	// #0
     e10:	mov	w27, w21
     e14:	cmp	w26, w21
     e18:	b.ls	ea4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x190>  // b.plast
     e1c:	mov	x1, x21
     e20:	mov	x0, x19
     e24:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     e28:	ldr	w22, [x0]
     e2c:	cbz	w22, e9c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x188>
     e30:	mov	x1, x21
     e34:	mov	x0, x20
     e38:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     e3c:	mov	x28, x0
     e40:	ldr	w0, [x0]
     e44:	cbz	w0, e9c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x188>
     e48:	cmp	w0, w22
     e4c:	b.cs	e7c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x168>  // b.hs, b.nlast
     e50:	ldrb	w0, [x24]
     e54:	cbz	w0, e78 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x164>
     e58:	mov	x0, x25
     e5c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e60:	tst	w0, #0xff
     e64:	b.eq	e78 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x164>  // b.none
     e68:	bl	0 <_ZN4llvm4dbgsEv>
     e6c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     e70:	add	x1, x1, #0x0
     e74:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     e78:	ldr	w22, [x28]
     e7c:	ldr	w0, [x28, #4]
     e80:	add	w22, w22, w0
     e84:	ldr	w0, [x28]
     e88:	cmp	w0, w22
     e8c:	b.cs	e9c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x188>  // b.hs, b.nlast
     e90:	mov	w0, #0x1                   	// #1
     e94:	lsl	w27, w0, w27
     e98:	orr	w23, w23, w27
     e9c:	add	x21, x21, #0x1
     ea0:	b	e10 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xfc>
     ea4:	ldr	x0, [sp, #96]
     ea8:	add	x19, x19, #0x10
     eac:	cmp	x0, x19
     eb0:	b.eq	eb8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1a4>  // b.none
     eb4:	bl	0 <free>
     eb8:	mov	w0, w23
     ebc:	ldp	x19, x20, [sp, #16]
     ec0:	ldp	x21, x22, [sp, #32]
     ec4:	ldp	x23, x24, [sp, #48]
     ec8:	ldp	x25, x26, [sp, #64]
     ecc:	ldp	x27, x28, [sp, #80]
     ed0:	ldp	x29, x30, [sp], #128
     ed4:	ret

0000000000000ed8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     ed8:	stp	x29, x30, [sp, #-160]!
     edc:	mov	x29, sp
     ee0:	stp	x21, x22, [sp, #32]
     ee4:	add	x22, x0, #0x10
     ee8:	mov	x21, x3
     eec:	stp	x23, x24, [sp, #48]
     ef0:	mov	x23, x0
     ef4:	ldr	w0, [x0, #24]
     ef8:	str	w0, [sp, #108]
     efc:	ldr	w0, [x23, #28]
     f00:	stp	x19, x20, [sp, #16]
     f04:	mov	x20, x1
     f08:	ldr	w1, [sp, #108]
     f0c:	stp	x25, x26, [sp, #64]
     f10:	mov	x19, x2
     f14:	cmp	w1, w0
     f18:	stp	x27, x28, [sp, #80]
     f1c:	b.cc	f34 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x5c>  // b.lo, b.ul, b.last
     f20:	add	x1, x23, #0x20
     f24:	mov	x0, x22
     f28:	mov	x3, #0x14                  	// #20
     f2c:	mov	x2, #0x0                   	// #0
     f30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f34:	ldr	w2, [x23, #24]
     f38:	mov	w0, #0x14                  	// #20
     f3c:	ldrh	w6, [x20, #8]
     f40:	ldrh	w5, [x20, #14]
     f44:	ldrb	w3, [x20, #16]
     f48:	umull	x2, w2, w0
     f4c:	ldr	x0, [x23, #16]
     f50:	add	x1, x0, x2
     f54:	str	w6, [x0, x2]
     f58:	mov	x0, x22
     f5c:	stp	wzr, w5, [x1, #4]
     f60:	str	wzr, [x1, #12]
     f64:	strb	w3, [x1, #16]
     f68:	ldr	w1, [x23, #24]
     f6c:	add	x1, x1, #0x1
     f70:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     f74:	mov	x0, x22
     f78:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     f7c:	cbz	x21, 1110 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x238>
     f80:	mov	x3, #0xc                   	// #12
     f84:	add	x26, sp, #0x80
     f88:	add	x27, sp, #0x90
     f8c:	madd	x0, x21, x3, x19
     f90:	str	x0, [sp, #112]
     f94:	ldr	x0, [sp, #112]
     f98:	cmp	x0, x19
     f9c:	b.eq	1110 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x238>  // b.none
     fa0:	ldr	x1, [x23, #8]
     fa4:	ldr	w0, [x19]
     fa8:	ldr	w2, [x1, #32]
     fac:	cmp	w0, w2
     fb0:	b.cc	fd4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xfc>  // b.lo, b.ul, b.last
     fb4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     fb8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     fbc:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     fc0:	add	x3, x3, #0x0
     fc4:	add	x1, x1, #0x0
     fc8:	add	x0, x0, #0x0
     fcc:	mov	w2, #0x219                 	// #537
     fd0:	bl	0 <__assert_fail>
     fd4:	ldr	x1, [x1, #24]
     fd8:	ubfiz	x0, x0, #5, #32
     fdc:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     fe0:	add	x25, x25, #0x0
     fe4:	add	x2, x1, x0
     fe8:	ldr	x20, [x1, x0]
     fec:	ldrh	w24, [x2, #20]
     ff0:	add	x0, x20, x24, lsl #1
     ff4:	str	x0, [sp, #120]
     ff8:	ldr	x0, [sp, #120]
     ffc:	cmp	x0, x20
    1000:	b.eq	1108 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x230>  // b.none
    1004:	ldr	x0, [x23, #112]
    1008:	ldrh	w5, [x20]
    100c:	ldrh	w22, [x20]
    1010:	add	x21, x0, x5, lsl #5
    1014:	ldr	w0, [x21, #16]
    1018:	cbz	w0, 105c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x184>
    101c:	ldr	w1, [sp, #108]
    1020:	cmp	w0, w1
    1024:	b.eq	105c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x184>  // b.none
    1028:	bl	0 <_ZN4llvm4errsEv>
    102c:	mov	x1, x25
    1030:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1034:	mov	x28, x0
    1038:	mov	w1, w22
    103c:	ldr	x0, [x23, #8]
    1040:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1044:	mov	x1, x0
    1048:	mov	x0, x28
    104c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1050:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1054:	add	x1, x1, #0x0
    1058:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    105c:	ldr	w0, [x19, #4]
    1060:	mov	w3, #0x0                   	// #0
    1064:	ldr	w1, [sp, #108]
    1068:	ldr	x2, [x23, #8]
    106c:	stp	w1, w0, [x21, #16]
    1070:	ldrb	w0, [x19, #8]
    1074:	mov	w1, w22
    1078:	strh	w22, [x21, #24]
    107c:	strb	w0, [x21, #28]
    1080:	mov	x0, x26
    1084:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1088:	ldr	x0, [sp, #136]
    108c:	cbz	x0, 1100 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x228>
    1090:	ldr	x0, [x23, #112]
    1094:	ldrh	w6, [sp, #128]
    1098:	ldrh	w1, [sp, #128]
    109c:	add	x24, x0, x6, lsl #5
    10a0:	ldr	w0, [x24, #16]
    10a4:	cbnz	w0, 10f4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x21c>
    10a8:	ldrh	w28, [x24, #24]
    10ac:	cbz	w28, 10e0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x208>
    10b0:	ldr	x2, [x23, #8]
    10b4:	mov	x0, x27
    10b8:	mov	w3, #0x0                   	// #0
    10bc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    10c0:	ldr	x0, [sp, #152]
    10c4:	cbz	x0, 10f4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x21c>
    10c8:	ldrh	w0, [sp, #144]
    10cc:	cmp	w0, w28
    10d0:	b.eq	10e0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x208>  // b.none
    10d4:	mov	x0, x27
    10d8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    10dc:	b	10c0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1e8>
    10e0:	ldr	w0, [x21, #16]
    10e4:	str	w0, [x24, #16]
    10e8:	ldr	w0, [x21, #20]
    10ec:	str	w0, [x24, #20]
    10f0:	strh	w22, [x24, #24]
    10f4:	mov	x0, x26
    10f8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    10fc:	b	1088 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1b0>
    1100:	add	x20, x20, #0x2
    1104:	b	ff8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x120>
    1108:	add	x19, x19, #0xc
    110c:	b	f94 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xbc>
    1110:	ldp	x19, x20, [sp, #16]
    1114:	ldp	x21, x22, [sp, #32]
    1118:	ldp	x23, x24, [sp, #48]
    111c:	ldp	x25, x26, [sp, #64]
    1120:	ldp	x27, x28, [sp, #80]
    1124:	ldp	x29, x30, [sp], #160
    1128:	ret

000000000000112c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
    112c:	stp	x29, x30, [sp, #-64]!
    1130:	mov	x29, sp
    1134:	stp	x19, x20, [sp, #16]
    1138:	mov	x19, x0
    113c:	mov	x20, x1
    1140:	stp	x21, x22, [sp, #32]
    1144:	add	x21, x0, #0x10
    1148:	mov	w22, w2
    114c:	ldp	w1, w0, [x0, #24]
    1150:	stp	x23, x24, [sp, #48]
    1154:	cmp	w1, w0
    1158:	b.cc	1170 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x44>  // b.lo, b.ul, b.last
    115c:	add	x1, x19, #0x20
    1160:	mov	x0, x21
    1164:	mov	x3, #0x14                  	// #20
    1168:	mov	x2, #0x0                   	// #0
    116c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1170:	ldr	w3, [x19, #24]
    1174:	mov	w0, #0x14                  	// #20
    1178:	ldr	x1, [x19, #16]
    117c:	umull	x3, w3, w0
    1180:	add	x0, x1, x3
    1184:	str	w22, [x1, x3]
    1188:	stur	xzr, [x0, #4]
    118c:	str	wzr, [x0, #12]
    1190:	strb	wzr, [x0, #16]
    1194:	mov	x0, x21
    1198:	ldr	w1, [x19, #24]
    119c:	add	x1, x1, #0x1
    11a0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    11a4:	mov	x0, x21
    11a8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    11ac:	ldr	x20, [x20, #64]
    11b0:	cbz	x20, 1220 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xf4>
    11b4:	ldr	w24, [x20, #16]
    11b8:	mov	x22, #0x18                  	// #24
    11bc:	mov	w21, #0x1                   	// #1
    11c0:	mov	w23, #0xc                   	// #12
    11c4:	cmp	w21, w24
    11c8:	b.cs	1220 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xf4>  // b.hs, b.nlast
    11cc:	ldr	x1, [x20, #8]
    11d0:	add	x1, x1, x22
    11d4:	add	x22, x22, #0x18
    11d8:	ldrh	w0, [x1, #8]
    11dc:	cbnz	w0, 1200 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xd4>
    11e0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    11e4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    11e8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    11ec:	add	x3, x3, #0x0
    11f0:	add	x1, x1, #0x0
    11f4:	add	x0, x0, #0x0
    11f8:	mov	w2, #0x32                  	// #50
    11fc:	bl	0 <__assert_fail>
    1200:	ldrh	w2, [x1, #12]
    1204:	add	w21, w21, #0x1
    1208:	ldr	x0, [x20, #24]
    120c:	ldrh	w3, [x1, #10]
    1210:	umaddl	x2, w2, w23, x0
    1214:	mov	x0, x19
    1218:	bl	ed8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
    121c:	b	11c4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x98>
    1220:	ldp	x19, x20, [sp, #16]
    1224:	ldp	x21, x22, [sp, #32]
    1228:	ldp	x23, x24, [sp, #48]
    122c:	ldp	x29, x30, [sp], #64
    1230:	ret

0000000000001234 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
    1234:	stp	x29, x30, [sp, #-80]!
    1238:	mov	x29, sp
    123c:	stp	x19, x20, [sp, #16]
    1240:	mov	x19, x0
    1244:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1248:	stp	x21, x22, [sp, #32]
    124c:	mov	x22, x1
    1250:	mov	x21, x2
    1254:	ldr	x0, [x0]
    1258:	stp	x23, x24, [sp, #48]
    125c:	add	x24, x19, #0x70
    1260:	add	x0, x0, #0x10
    1264:	stp	x0, x2, [x19]
    1268:	add	x0, x19, #0x20
    126c:	str	x0, [x19, #16]
    1270:	mov	x0, #0x400000000           	// #17179869184
    1274:	str	x0, [x19, #24]
    1278:	adrp	x0, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    127c:	mov	w23, w3
    1280:	ldr	w20, [x2, #8]
    1284:	ldr	x0, [x0]
    1288:	str	xzr, [x19, #112]
    128c:	str	x25, [sp, #64]
    1290:	stp	xzr, xzr, [x24, #8]
    1294:	ldr	w25, [x0]
    1298:	cbz	x20, 12dc <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xa8>
    129c:	lsl	x0, x20, #5
    12a0:	bl	0 <_Znwm>
    12a4:	str	x0, [x19, #112]
    12a8:	add	x1, x0, x20, lsl #5
    12ac:	mov	w2, #0x1                   	// #1
    12b0:	str	x1, [x24, #16]
    12b4:	cbz	x20, 12e4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xb0>
    12b8:	sub	x20, x20, #0x1
    12bc:	str	w25, [x0]
    12c0:	str	xzr, [x0, #8]
    12c4:	stp	wzr, w2, [x0, #16]
    12c8:	add	x0, x0, #0x20
    12cc:	sturh	wzr, [x0, #-8]
    12d0:	sturh	wzr, [x0, #-6]
    12d4:	sturb	wzr, [x0, #-4]
    12d8:	b	12b4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x80>
    12dc:	mov	x0, #0x0                   	// #0
    12e0:	b	12a4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x70>
    12e4:	add	x0, x19, #0x88
    12e8:	str	x1, [x24, #8]
    12ec:	ldr	w1, [x21, #8]
    12f0:	str	w1, [x0, #8]
    12f4:	cbnz	w1, 1318 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xe4>
    12f8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    12fc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1300:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1304:	add	x3, x3, #0x0
    1308:	add	x1, x1, #0x0
    130c:	add	x0, x0, #0x0
    1310:	mov	w2, #0x117                 	// #279
    1314:	bl	0 <__assert_fail>
    1318:	cmp	w1, #0x40
    131c:	b.hi	1348 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x114>  // b.pmore
    1320:	str	xzr, [x19, #136]
    1324:	mov	w2, w23
    1328:	mov	x1, x22
    132c:	mov	x0, x19
    1330:	ldp	x19, x20, [sp, #16]
    1334:	ldp	x21, x22, [sp, #32]
    1338:	ldp	x23, x24, [sp, #48]
    133c:	ldr	x25, [sp, #64]
    1340:	ldp	x29, x30, [sp], #80
    1344:	b	112c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
    1348:	mov	w2, #0x0                   	// #0
    134c:	mov	x1, #0x0                   	// #0
    1350:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1354:	b	1324 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xf0>

0000000000001358 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_.isra.0>:
    1358:	stp	x29, x30, [sp, #-32]!
    135c:	mov	x29, sp
    1360:	stp	x19, x20, [sp, #16]
    1364:	mov	x20, x1
    1368:	mov	x19, x0
    136c:	ldp	w2, w1, [x0, #8]
    1370:	cmp	w2, w1
    1374:	b.cc	1380 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_.isra.0+0x28>  // b.lo, b.ul, b.last
    1378:	mov	x1, #0x0                   	// #0
    137c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1380:	ldr	x1, [x19]
    1384:	ldr	w0, [x19, #8]
    1388:	ldp	x2, x3, [x20]
    138c:	add	x0, x1, x0, lsl #4
    1390:	stp	x2, x3, [x0]
    1394:	mov	x0, x19
    1398:	ldr	w1, [x19, #8]
    139c:	ldp	x19, x20, [sp, #16]
    13a0:	add	x1, x1, #0x1
    13a4:	ldp	x29, x30, [sp], #32
    13a8:	b	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>

00000000000013ac <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
    13ac:	stp	x29, x30, [sp, #-96]!
    13b0:	mov	x29, sp
    13b4:	stp	x19, x20, [sp, #16]
    13b8:	ldrh	w20, [x1, #8]
    13bc:	stp	x21, x22, [sp, #32]
    13c0:	stp	x23, x24, [sp, #48]
    13c4:	stp	x25, x26, [sp, #64]
    13c8:	cbz	w20, 13e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x38>
    13cc:	mov	x21, x0
    13d0:	ldp	x1, x0, [x0, #112]
    13d4:	sub	x0, x0, x1
    13d8:	asr	x0, x0, #5
    13dc:	cmp	x0, w20, uxth
    13e0:	b.hi	1404 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x58>  // b.pmore
    13e4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    13e8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    13ec:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    13f0:	add	x3, x3, #0x0
    13f4:	add	x1, x1, #0x0
    13f8:	add	x0, x0, #0x0
    13fc:	mov	w2, #0x167                 	// #359
    1400:	bl	0 <__assert_fail>
    1404:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    1408:	mov	x19, x2
    140c:	ldr	x0, [x22]
    1410:	ldrb	w0, [x0]
    1414:	cbz	w0, 1460 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb4>
    1418:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    141c:	add	x0, x0, #0x0
    1420:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1424:	tst	w0, #0xff
    1428:	b.eq	1460 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb4>  // b.none
    142c:	bl	0 <_ZN4llvm4dbgsEv>
    1430:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1434:	add	x1, x1, #0x0
    1438:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    143c:	mov	x23, x0
    1440:	ldr	x0, [x21, #8]
    1444:	mov	w1, w20
    1448:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    144c:	mov	x1, x0
    1450:	mov	x0, x23
    1454:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1458:	mov	w1, #0xa                   	// #10
    145c:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1460:	ldr	x0, [x21, #112]
    1464:	ubfiz	x1, x20, #5, #32
    1468:	add	x1, x0, x1
    146c:	ldrh	w1, [x1, #26]
    1470:	cmp	w1, #0x0
    1474:	csel	w20, w20, w1, eq  // eq = none
    1478:	ubfiz	x2, x20, #5, #32
    147c:	add	x1, x0, x2
    1480:	ldr	x3, [x1, #8]
    1484:	cbz	x3, 14a8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xfc>
    1488:	ldr	w2, [x0, x2]
    148c:	adrp	x0, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    1490:	ldr	x0, [x0]
    1494:	ldr	w0, [x0]
    1498:	cmp	w2, w0
    149c:	b.eq	14a8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xfc>  // b.none
    14a0:	mov	x0, x19
    14a4:	bl	1358 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_.isra.0>
    14a8:	ldr	x2, [x21, #8]
    14ac:	mov	w1, w20
    14b0:	adrp	x20, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    14b4:	add	x23, sp, #0x50
    14b8:	mov	x0, x23
    14bc:	mov	w3, #0x0                   	// #0
    14c0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14c4:	ldr	x20, [x20]
    14c8:	ldr	x0, [sp, #88]
    14cc:	cbz	x0, 150c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x160>
    14d0:	ldr	x0, [x21, #112]
    14d4:	ldrh	w1, [sp, #80]
    14d8:	lsl	x2, x1, #5
    14dc:	add	x1, x0, x1, lsl #5
    14e0:	ldr	x3, [x1, #8]
    14e4:	cbz	x3, 1500 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x154>
    14e8:	ldr	w2, [x0, x2]
    14ec:	ldr	w0, [x20]
    14f0:	cmp	w2, w0
    14f4:	b.eq	1500 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x154>  // b.none
    14f8:	mov	x0, x19
    14fc:	bl	1358 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE9push_backERKS2_.isra.0>
    1500:	mov	x0, x23
    1504:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1508:	b	14c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x11c>
    150c:	ldr	w14, [x19, #8]
    1510:	cmp	w14, #0x1
    1514:	b.ls	163c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x290>  // b.plast
    1518:	ubfiz	x14, x14, #4, #32
    151c:	mov	w3, #0x0                   	// #0
    1520:	ldr	x15, [x19]
    1524:	asr	x2, x14, #4
    1528:	clz	x0, x2
    152c:	mov	w2, #0x3f                  	// #63
    1530:	add	x18, x15, x14
    1534:	sub	w2, w2, w0
    1538:	mov	x1, x18
    153c:	mov	x0, x15
    1540:	sbfiz	x2, x2, #1, #32
    1544:	bl	218 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
    1548:	cmp	x14, #0x100
    154c:	b.ls	1578 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1cc>  // b.plast
    1550:	add	x8, x15, #0x100
    1554:	mov	x0, x15
    1558:	mov	x1, x8
    155c:	bl	12c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    1560:	cmp	x18, x8
    1564:	b.eq	1584 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1d8>  // b.none
    1568:	mov	x0, x8
    156c:	bl	f4 <_ZSt25__unguarded_linear_insertIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops14_Val_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_.isra.0>
    1570:	add	x8, x8, #0x10
    1574:	b	1560 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b4>
    1578:	mov	x1, x18
    157c:	mov	x0, x15
    1580:	bl	12c <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    1584:	ldr	x2, [x19]
    1588:	ldr	w0, [x19, #8]
    158c:	add	x0, x2, x0, lsl #4
    1590:	cmp	x2, x0
    1594:	b.ne	15a4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1f8>  // b.any
    1598:	mov	x1, x2
    159c:	b	1618 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x26c>
    15a0:	mov	x2, x1
    15a4:	add	x1, x2, #0x10
    15a8:	cmp	x0, x1
    15ac:	b.eq	1618 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x26c>  // b.none
    15b0:	ldur	w4, [x1, #-16]
    15b4:	ldr	w3, [x2, #16]
    15b8:	cmp	w4, w3
    15bc:	b.ne	15a0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1f4>  // b.any
    15c0:	ldur	x4, [x1, #-8]
    15c4:	ldr	x3, [x1, #8]
    15c8:	cmp	x4, x3
    15cc:	b.ne	15a0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1f4>  // b.any
    15d0:	cmp	x0, x2
    15d4:	b.eq	16d0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x324>  // b.none
    15d8:	add	x1, x1, #0x10
    15dc:	cmp	x0, x1
    15e0:	b.eq	1614 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x268>  // b.none
    15e4:	ldr	w3, [x2]
    15e8:	ldr	w4, [x1]
    15ec:	cmp	w3, w4
    15f0:	ldr	x3, [x1, #8]
    15f4:	b.ne	1604 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x258>  // b.any
    15f8:	ldr	x5, [x2, #8]
    15fc:	cmp	x5, x3
    1600:	b.eq	15d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x22c>  // b.none
    1604:	add	x2, x2, #0x10
    1608:	str	w4, [x2]
    160c:	str	x3, [x2, #8]
    1610:	b	15d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x22c>
    1614:	add	x1, x2, #0x10
    1618:	ldr	x20, [x19]
    161c:	ldr	w0, [x19, #8]
    1620:	sub	x20, x1, x20
    1624:	asr	x23, x20, #4
    1628:	cmp	x23, x0
    162c:	b.cs	16d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x32c>  // b.hs, b.nlast
    1630:	mov	x1, x23
    1634:	mov	x0, x19
    1638:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    163c:	ldr	x22, [x22]
    1640:	ldrb	w0, [x22]
    1644:	cbz	w0, 1728 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x37c>
    1648:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    164c:	add	x0, x0, #0x0
    1650:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1654:	tst	w0, #0xff
    1658:	b.eq	1728 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x37c>  // b.none
    165c:	ldr	x0, [x19]
    1660:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1664:	ldr	w24, [x19, #8]
    1668:	adrp	x20, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    166c:	add	x23, x23, #0x0
    1670:	add	x20, x20, #0x0
    1674:	mov	x19, x0
    1678:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    167c:	add	x24, x0, x24, lsl #4
    1680:	cmp	x24, x19
    1684:	b.eq	1728 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x37c>  // b.none
    1688:	ldr	x26, [x19, #8]
    168c:	bl	0 <_ZN4llvm4dbgsEv>
    1690:	mov	x1, x23
    1694:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1698:	mov	x22, x0
    169c:	ldrh	w1, [x26, #12]
    16a0:	ldr	x0, [x21, #8]
    16a4:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16a8:	mov	x1, x0
    16ac:	mov	x0, x22
    16b0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16b4:	mov	x1, x20
    16b8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16bc:	ldr	w1, [x19], #16
    16c0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    16c4:	add	x1, x25, #0x0
    16c8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16cc:	b	1680 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2d4>
    16d0:	mov	x1, x0
    16d4:	b	1618 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x26c>
    16d8:	b.ls	163c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x290>  // b.plast
    16dc:	ldr	w0, [x19, #12]
    16e0:	cmp	x23, x0
    16e4:	b.ls	16f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x348>  // b.plast
    16e8:	mov	x1, x23
    16ec:	mov	x0, x19
    16f0:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16f4:	ldr	x1, [x19]
    16f8:	adrp	x2, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    16fc:	ldr	w0, [x19, #8]
    1700:	ldr	x2, [x2]
    1704:	add	x0, x1, x0, lsl #4
    1708:	add	x1, x1, x20
    170c:	cmp	x1, x0
    1710:	b.eq	1630 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x284>  // b.none
    1714:	ldr	w3, [x2]
    1718:	add	x0, x0, #0x10
    171c:	stur	w3, [x0, #-16]
    1720:	stur	xzr, [x0, #-8]
    1724:	b	170c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x360>
    1728:	ldp	x19, x20, [sp, #16]
    172c:	ldp	x21, x22, [sp, #32]
    1730:	ldp	x23, x24, [sp, #48]
    1734:	ldp	x25, x26, [sp, #64]
    1738:	ldp	x29, x30, [sp], #96
    173c:	ret

0000000000001740 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
    1740:	stp	x29, x30, [sp, #-160]!
    1744:	mov	x29, sp
    1748:	stp	x19, x20, [sp, #16]
    174c:	mov	x20, x0
    1750:	mov	x19, x1
    1754:	stp	x23, x24, [sp, #48]
    1758:	mov	x23, x2
    175c:	ldrh	w1, [x1, #8]
    1760:	ldr	x2, [x20, #112]
    1764:	stp	x21, x22, [sp, #32]
    1768:	ldrh	w0, [x19, #8]
    176c:	stp	x25, x26, [sp, #64]
    1770:	add	x0, x2, x0, lsl #5
    1774:	ldr	w0, [x0, #16]
    1778:	str	w0, [x19, #12]
    177c:	ldrb	w0, [x19, #42]
    1780:	cbnz	w0, 18d8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x198>
    1784:	add	x0, x20, #0x88
    1788:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    178c:	tst	w0, #0xff
    1790:	b.eq	179c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x5c>  // b.none
    1794:	mov	w0, #0x1                   	// #1
    1798:	strb	w0, [x19, #41]
    179c:	add	x22, sp, #0x50
    17a0:	mov	x1, x19
    17a4:	add	x0, x22, #0x10
    17a8:	str	x0, [sp, #80]
    17ac:	mov	x0, #0x400000000           	// #17179869184
    17b0:	mov	x2, x22
    17b4:	str	x0, [sp, #88]
    17b8:	mov	x0, x20
    17bc:	bl	13ac <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    17c0:	ldr	w0, [sp, #88]
    17c4:	ldr	x2, [x23, #152]
    17c8:	cmp	w0, #0x0
    17cc:	ldr	x25, [x19]
    17d0:	cset	w1, eq  // eq = none
    17d4:	strb	w1, [x19, #40]
    17d8:	ldr	x1, [x2, #40]
    17dc:	ldr	w24, [x25, #12]
    17e0:	str	w0, [x19, #16]
    17e4:	cbnz	x1, 1808 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xc8>
    17e8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17ec:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17f0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    17f4:	add	x3, x3, #0x0
    17f8:	add	x1, x1, #0x0
    17fc:	add	x0, x0, #0x0
    1800:	mov	w2, #0x15b                 	// #347
    1804:	bl	0 <__assert_fail>
    1808:	ldr	w2, [x2, #52]
    180c:	cmp	w24, w2
    1810:	b.cc	1834 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xf4>  // b.lo, b.ul, b.last
    1814:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1818:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    181c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1820:	add	x3, x3, #0x0
    1824:	add	x1, x1, #0x0
    1828:	add	x0, x0, #0x0
    182c:	mov	w2, #0x15d                 	// #349
    1830:	b	1804 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0xc4>
    1834:	mov	w2, #0x18                  	// #24
    1838:	ubfiz	x0, x0, #4, #32
    183c:	ldr	x20, [sp, #80]
    1840:	umaddl	x24, w24, w2, x1
    1844:	mov	w26, #0xc                   	// #12
    1848:	add	x21, x20, x0
    184c:	cmp	x21, x20
    1850:	b.eq	18c4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x184>  // b.none
    1854:	ldr	x0, [x20, #8]
    1858:	ldr	x2, [x23, #144]
    185c:	ldr	x1, [x0]
    1860:	ldr	w4, [x25, #4]
    1864:	ldr	w5, [x1, #12]
    1868:	ldrh	w1, [x24, #18]
    186c:	umaddl	x1, w1, w26, x2
    1870:	ldrh	w2, [x24, #20]
    1874:	umaddl	x2, w2, w26, x1
    1878:	cmp	x2, x1
    187c:	b.eq	18bc <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x17c>  // b.none
    1880:	ldr	w3, [x1]
    1884:	cmp	w4, w3
    1888:	b.hi	18b4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x174>  // b.pmore
    188c:	b.cc	18bc <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x17c>  // b.lo, b.ul, b.last
    1890:	ldr	w3, [x1, #4]
    1894:	cbz	w3, 18a0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x160>
    1898:	cmp	w5, w3
    189c:	b.ne	18b4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x174>  // b.any
    18a0:	ldr	w3, [x1, #8]
    18a4:	ldr	w1, [x20], #16
    18a8:	mov	x2, x19
    18ac:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    18b0:	b	184c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x10c>
    18b4:	add	x1, x1, #0xc
    18b8:	b	1878 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x138>
    18bc:	mov	w3, #0x0                   	// #0
    18c0:	b	18a4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x164>
    18c4:	ldr	x0, [sp, #80]
    18c8:	add	x22, x22, #0x10
    18cc:	cmp	x0, x22
    18d0:	b.eq	18d8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x198>  // b.none
    18d4:	bl	0 <free>
    18d8:	ldp	x19, x20, [sp, #16]
    18dc:	ldp	x21, x22, [sp, #32]
    18e0:	ldp	x23, x24, [sp, #48]
    18e4:	ldp	x25, x26, [sp, #64]
    18e8:	ldp	x29, x30, [sp], #160
    18ec:	ret

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileD1Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	w0, [x19, #144]
  24:	cmp	w0, #0x40
  28:	b.ls	38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>  // b.plast
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x1, x19, #0x20
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD1Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca12RegisterFileD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x98                  	// #152
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	ldr	w3, [x0, #8]
   4:	cmp	w1, w3
   8:	b.cc	34 <_ZNK4llvm5APIntixEj+0x34>  // b.lo, b.ul, b.last
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  14:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x472                 	// #1138
  30:	bl	0 <__assert_fail>
  34:	mov	x2, #0x1                   	// #1
  38:	cmp	w3, #0x40
  3c:	lsl	x2, x2, x1
  40:	ldr	x0, [x0]
  44:	b.ls	50 <_ZNK4llvm5APIntixEj+0x50>  // b.plast
  48:	lsr	w1, w1, #6
  4c:	ldr	x0, [x0, x1, lsl #3]
  50:	tst	x2, x0
  54:	cset	w0, ne  // ne = any
  58:	ret

Disassembly of section .text._ZN4llvm5APInt6setBitEj:

0000000000000000 <_ZN4llvm5APInt6setBitEj>:
   0:	ldr	w4, [x0, #8]
   4:	cmp	w4, w1
   8:	b.hi	34 <_ZN4llvm5APInt6setBitEj+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APInt6setBitEj>
  14:	adrp	x1, 0 <_ZN4llvm5APInt6setBitEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APInt6setBitEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x59d                 	// #1437
  30:	bl	0 <__assert_fail>
  34:	mov	x2, #0x1                   	// #1
  38:	cmp	w4, #0x40
  3c:	lsl	x3, x2, x1
  40:	ldr	x2, [x0]
  44:	b.hi	54 <_ZN4llvm5APInt6setBitEj+0x54>  // b.pmore
  48:	orr	x2, x2, x3
  4c:	str	x2, [x0]
  50:	ret
  54:	lsr	w1, w1, #6
  58:	lsl	x1, x1, #3
  5c:	ldr	x0, [x2, x1]
  60:	orr	x3, x0, x3
  64:	str	x3, [x2, x1]
  68:	ret

Disassembly of section .text._ZN4llvm5APInt8clearBitEj:

0000000000000000 <_ZN4llvm5APInt8clearBitEj>:
   0:	ldr	w4, [x0, #8]
   4:	cmp	w4, w1
   8:	b.hi	34 <_ZN4llvm5APInt8clearBitEj+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APInt8clearBitEj>
  14:	adrp	x1, 0 <_ZN4llvm5APInt8clearBitEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APInt8clearBitEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x5e7                 	// #1511
  30:	bl	0 <__assert_fail>
  34:	mov	x2, #0x1                   	// #1
  38:	cmp	w4, #0x40
  3c:	lsl	x2, x2, x1
  40:	mvn	x2, x2
  44:	ldr	x3, [x0]
  48:	b.hi	58 <_ZN4llvm5APInt8clearBitEj+0x58>  // b.pmore
  4c:	and	x2, x3, x2
  50:	str	x2, [x0]
  54:	ret
  58:	lsr	w1, w1, #6
  5c:	lsl	x1, x1, #3
  60:	ldr	x0, [x3, x1]
  64:	and	x2, x0, x2
  68:	str	x2, [x3, x1]
  6c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm14MCRegisterInfo16DiffListIteratorppEv:

0000000000000000 <_ZN4llvm14MCRegisterInfo16DiffListIteratorppEv>:
   0:	ldr	x1, [x0, #8]
   4:	cbnz	x1, 30 <_ZN4llvm14MCRegisterInfo16DiffListIteratorppEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm14MCRegisterInfo16DiffListIteratorppEv>
  10:	adrp	x1, 0 <_ZN4llvm14MCRegisterInfo16DiffListIteratorppEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm14MCRegisterInfo16DiffListIteratorppEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xd1                  	// #209
  2c:	bl	0 <__assert_fail>
  30:	ldrh	w3, [x1], #2
  34:	ldrh	w2, [x0]
  38:	cmp	w3, #0x0
  3c:	add	w2, w3, w2
  40:	csel	x1, x1, xzr, ne  // ne = any
  44:	strh	w2, [x0]
  48:	str	x1, [x0, #8]
  4c:	ret

Disassembly of section .text._ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	w2, w1
   8:	b.hi	34 <_ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE>
  14:	adrp	x1, 0 <_ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfoixENS_10MCRegisterE>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x1b8                 	// #440
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	mov	w2, #0x18                  	// #24
  3c:	umaddl	x0, w1, w2, x0
  40:	ret

Disassembly of section .text._ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0, #64]
  10:	bl	0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  14:	ldr	w0, [x0]
  18:	add	x0, x19, x0
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm16MCSubRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb:

0000000000000000 <_ZN4llvm16MCSubRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	and	w20, w1, #0xffff
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, x2
  1c:	and	w21, w3, #0xff
  20:	strh	wzr, [x19]
  24:	ldr	x22, [x2, #48]
  28:	str	xzr, [x19, #8]
  2c:	bl	0 <_ZN4llvm16MCSubRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  30:	ldr	w0, [x0, #4]
  34:	strh	w20, [x19]
  38:	add	x0, x22, x0, lsl #1
  3c:	str	x0, [x19, #8]
  40:	cbnz	w21, 58 <_ZN4llvm16MCSubRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x58>
  44:	mov	x0, x19
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x21, x22, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZN4llvm16MCSubRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm18MCSuperRegIteratorC2ENS_10MCRegisterEPKNS_14MCRegisterInfoEb:

0000000000000000 <_ZN4llvm18MCSuperRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	and	w20, w1, #0xffff
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, x2
  1c:	and	w21, w3, #0xff
  20:	strh	wzr, [x19]
  24:	ldr	x22, [x2, #48]
  28:	str	xzr, [x19, #8]
  2c:	bl	0 <_ZN4llvm18MCSuperRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  30:	ldr	w0, [x0, #8]
  34:	strh	w20, [x19]
  38:	add	x0, x22, x0, lsl #1
  3c:	str	x0, [x19, #8]
  40:	cbnz	w21, 58 <_ZN4llvm18MCSuperRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb+0x58>
  44:	mov	x0, x19
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x21, x22, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZN4llvm18MCSuperRegIteratorC1ENS_10MCRegisterEPKNS_14MCRegisterInfoEb>
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	mov	x2, #0x14                  	// #20
  3c:	madd	x0, x1, x2, x0
  40:	ret

Disassembly of section .text._ZNK4llvm15MutableArrayRefIjEixEm:

0000000000000000 <_ZNK4llvm15MutableArrayRefIjEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.cc	34 <_ZNK4llvm15MutableArrayRefIjEixEm+0x34>  // b.lo, b.ul, b.last
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm15MutableArrayRefIjEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm15MutableArrayRefIjEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm15MutableArrayRefIjEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x1ab                 	// #427
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #2
  3c:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonIjvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonIjvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonIjvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonIjvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonIjvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonIjvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #2
  3c:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x99                  	// #153
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	mov	x2, #0x14                  	// #20
  3c:	madd	x0, x1, x2, x0
  40:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv>:
   0:	ldr	w1, [x0, #8]
   4:	cbnz	w1, 30 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv>
  10:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca12RegisterFile22RegisterMappingTrackerEvE4backEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xa7                  	// #167
  2c:	bl	0 <__assert_fail>
  30:	mov	w3, #0x14                  	// #20
  34:	mov	x2, #0xffffffffffffffec    	// #-20
  38:	ldr	x0, [x0]
  3c:	umaddl	x1, w1, w3, x2
  40:	add	x0, x0, x1
  44:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #56]
  24:	b.ls	38 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x38>  // b.plast
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  2c:	mov	w1, #0x1                   	// #1
  30:	add	x0, x0, #0x0
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w2, [x19, #12]
  3c:	add	x1, sp, #0x38
  40:	add	x2, x2, #0x2
  44:	orr	x2, x2, x2, lsr #1
  48:	orr	x2, x2, x2, lsr #2
  4c:	orr	x2, x2, x2, lsr #4
  50:	orr	x2, x2, x2, lsr #8
  54:	orr	x0, x2, x2, lsr #16
  58:	orr	x2, x0, x2, lsr #32
  5c:	add	x0, sp, #0x40
  60:	add	x2, x2, #0x1
  64:	cmp	x20, x2
  68:	csel	x0, x0, x1, ls  // ls = plast
  6c:	mov	x1, #0xffffffff            	// #4294967295
  70:	stp	x2, x1, [sp, #64]
  74:	ldr	x2, [x0]
  78:	cmp	x2, x1
  7c:	b.ls	84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x84>  // b.plast
  80:	add	x0, sp, #0x48
  84:	ldr	x22, [x0]
  88:	lsl	x21, x22, #4
  8c:	mov	x0, x21
  90:	bl	0 <malloc>
  94:	mov	x20, x0
  98:	cbnz	x0, b0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb0>
  9c:	cbz	x21, d8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xd8>
  a0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  a4:	mov	w1, #0x1                   	// #1
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b0:	ldr	x0, [x19]
  b4:	mov	x3, x20
  b8:	ldr	w2, [x19, #8]
  bc:	mov	x1, x0
  c0:	add	x2, x0, x2, lsl #4
  c4:	cmp	x2, x1
  c8:	b.eq	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>  // b.none
  cc:	ldp	x4, x5, [x1], #16
  d0:	stp	x4, x5, [x3], #16
  d4:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc4>
  d8:	mov	x21, #0x1                   	// #1
  dc:	b	8c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x8c>
  e0:	add	x1, x19, #0x10
  e4:	cmp	x0, x1
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w22, [x19, #12]
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #80
 104:	ret

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
       0:	ldr	x2, [x0, #16]
       4:	cmp	x2, x1
       8:	b.cs	1c <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x1c>  // b.hs, b.nlast
       c:	ldr	x2, [x0, #24]
      10:	orr	x1, x2, x1
      14:	str	x1, [x0, #24]
      18:	ret
      1c:	bic	x1, x2, x1
      20:	str	x1, [x0, #16]
      24:	cbnz	x1, 18 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x18>
      28:	ldr	x1, [x0, #8]
      2c:	ldr	x2, [x0, #24]
      30:	eor	x1, x1, x2
      34:	stp	x1, xzr, [x0, #16]
      38:	b	18 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x18>

000000000000003c <_ZNKSt14default_deleteIN4llvm3mca16ResourceStrategyEEclEPS2_.isra.0>:
      3c:	cbz	x0, 50 <_ZNKSt14default_deleteIN4llvm3mca16ResourceStrategyEEclEPS2_.isra.0+0x14>
      40:	ldr	x1, [x0]
      44:	ldr	x1, [x1, #8]
      48:	mov	x16, x1
      4c:	br	x16
      50:	ret

0000000000000054 <_ZNKSt14default_deleteIN4llvm3mca13ResourceStateEEclEPS2_.isra.0>:
      54:	cbz	x0, 60 <_ZNKSt14default_deleteIN4llvm3mca13ResourceStateEEclEPS2_.isra.0+0xc>
      58:	mov	x1, #0x30                  	// #48
      5c:	b	0 <_ZdlPvm>
      60:	ret

0000000000000064 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
      64:	stp	x29, x30, [sp, #-48]!
      68:	mov	x29, sp
      6c:	stp	x19, x20, [sp, #16]
      70:	mov	x19, x0
      74:	ldr	x20, [x0, #16]
      78:	str	x21, [sp, #32]
      7c:	ands	x0, x20, x1
      80:	b.eq	a4 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x40>  // b.none
      84:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      88:	mov	x1, #0x1                   	// #1
      8c:	lsl	x0, x1, x0
      90:	sub	x1, x0, #0x1
      94:	orr	x1, x1, x0
      98:	and	x1, x1, x20
      9c:	str	x1, [x19, #16]
      a0:	b	d8 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x74>
      a4:	ldr	x21, [x19, #8]
      a8:	ldr	x20, [x19, #24]
      ac:	eor	x20, x21, x20
      b0:	stp	x20, xzr, [x19, #16]
      b4:	ands	x0, x1, x20
      b8:	b.eq	e8 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x84>  // b.none
      bc:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      c0:	mov	x1, #0x1                   	// #1
      c4:	lsl	x0, x1, x0
      c8:	sub	x1, x0, #0x1
      cc:	orr	x1, x1, x0
      d0:	and	x20, x1, x20
      d4:	str	x20, [x19, #16]
      d8:	ldp	x19, x20, [sp, #16]
      dc:	ldr	x21, [sp, #32]
      e0:	ldp	x29, x30, [sp], #48
      e4:	ret
      e8:	str	x21, [x19, #16]
      ec:	and	x0, x1, x21
      f0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      f4:	mov	x1, #0x1                   	// #1
      f8:	lsl	x0, x1, x0
      fc:	sub	x1, x0, #0x1
     100:	orr	x1, x1, x0
     104:	and	x1, x1, x21
     108:	b	9c <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x38>

000000000000010c <_ZN4llvm3mca16ResourceStrategyD1Ev>:
     10c:	ret

0000000000000110 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
     110:	stp	x29, x30, [sp, #-32]!
     114:	mov	x29, sp
     118:	str	x19, [sp, #16]
     11c:	mov	x19, x0
     120:	bl	10c <_ZN4llvm3mca16ResourceStrategyD1Ev>
     124:	mov	x0, x19
     128:	mov	x1, #0x8                   	// #8
     12c:	ldr	x19, [sp, #16]
     130:	ldp	x29, x30, [sp], #32
     134:	b	0 <_ZdlPvm>

0000000000000138 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
     138:	stp	x29, x30, [sp, #-48]!
     13c:	mov	x29, sp
     140:	str	d8, [sp, #40]
     144:	fmov	d8, x3
     148:	stp	x19, x20, [sp, #16]
     14c:	mov	x19, x0
     150:	cnt	v0.8b, v8.8b
     154:	str	x21, [sp, #32]
     158:	mov	x20, #0x1                   	// #1
     15c:	ldr	w21, [x1, #16]
     160:	str	w2, [x0]
     164:	addv	b0, v0.8b
     168:	str	x3, [x0, #8]
     16c:	str	w21, [x0, #32]
     170:	umov	w0, v0.b[0]
     174:	cmp	w0, #0x1
     178:	cset	w2, hi  // hi = pmore
     17c:	strb	w2, [x19, #41]
     180:	b.le	1c4 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x8c>
     184:	mov	x0, x3
     188:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     18c:	fmov	x1, d8
     190:	lsl	x0, x20, x0
     194:	eor	x0, x0, x1
     198:	stp	x0, x0, [x19, #16]
     19c:	cmn	w21, #0x1
     1a0:	b.ne	1a8 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x70>  // b.any
     1a4:	mov	w21, #0x0                   	// #0
     1a8:	strb	wzr, [x19, #40]
     1ac:	ldr	d8, [sp, #40]
     1b0:	str	w21, [x19, #36]
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldr	x21, [sp, #32]
     1bc:	ldp	x29, x30, [sp], #48
     1c0:	ret
     1c4:	ldr	w0, [x1, #8]
     1c8:	lsl	x0, x20, x0
     1cc:	sub	x0, x0, #0x1
     1d0:	b	198 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x60>

00000000000001d4 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     1d4:	ldrb	w2, [x0, #40]
     1d8:	cbz	w2, 1e4 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x10>
     1dc:	ldr	w2, [x0, #32]
     1e0:	cbnz	w2, 200 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x2c>
     1e4:	ldr	d0, [x0, #24]
     1e8:	cnt	v0.8b, v0.8b
     1ec:	addv	b0, v0.8b
     1f0:	umov	w0, v0.b[0]
     1f4:	cmp	w1, w0
     1f8:	cset	w0, ls  // ls = plast
     1fc:	ret
     200:	mov	w0, #0x0                   	// #0
     204:	b	1fc <_ZNK4llvm3mca13ResourceState7isReadyEj+0x28>

0000000000000208 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     208:	ldr	w1, [x0, #32]
     20c:	cmp	w1, #0x0
     210:	cbnz	w1, 228 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     214:	ldrb	w0, [x0, #40]
     218:	cmp	w0, #0x0
     21c:	cset	w0, ne  // ne = any
     220:	lsl	w0, w0, #1
     224:	ret
     228:	b.le	23c <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x34>
     22c:	ldr	w0, [x0, #36]
     230:	cmp	w0, #0x0
     234:	cset	w0, eq  // eq = none
     238:	b	224 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x1c>
     23c:	mov	w0, #0x0                   	// #0
     240:	b	224 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x1c>

0000000000000244 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     244:	stp	x29, x30, [sp, #-128]!
     248:	mov	x29, sp
     24c:	stp	x19, x20, [sp, #16]
     250:	mov	x19, x0
     254:	mov	w20, #0x1                   	// #1
     258:	str	x21, [sp, #32]
     25c:	bl	0 <_ZN4llvm4dbgsEv>
     260:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     264:	add	x1, x1, #0x0
     268:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     26c:	mov	w21, #0x10                  	// #16
     270:	ldr	x1, [x19, #8]
     274:	stp	x1, xzr, [sp, #56]
     278:	add	x1, sp, #0x38
     27c:	str	w21, [sp, #72]
     280:	strh	w20, [sp, #76]
     284:	strb	w20, [sp, #78]
     288:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     28c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     290:	add	x1, x1, #0x0
     294:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     298:	str	w21, [sp, #96]
     29c:	ldr	x1, [x19, #16]
     2a0:	stp	x1, xzr, [sp, #80]
     2a4:	add	x1, sp, #0x50
     2a8:	strh	w20, [sp, #100]
     2ac:	strb	w20, [sp, #102]
     2b0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     2b4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2b8:	add	x1, x1, #0x0
     2bc:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2c0:	str	w21, [sp, #120]
     2c4:	ldr	x1, [x19, #24]
     2c8:	stp	x1, xzr, [sp, #104]
     2cc:	add	x1, sp, #0x68
     2d0:	strh	w20, [sp, #124]
     2d4:	strb	w20, [sp, #126]
     2d8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     2dc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2e0:	add	x1, x1, #0x0
     2e4:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2e8:	ldrsw	x1, [x19, #32]
     2ec:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     2f0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2f4:	add	x1, x1, #0x0
     2f8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2fc:	ldr	w1, [x19, #36]
     300:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     304:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     308:	add	x1, x1, #0x0
     30c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     310:	ldrb	w1, [x19, #40]
     314:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     318:	ldp	x3, x2, [x0, #16]
     31c:	cmp	x2, x3
     320:	b.cc	33c <_ZNK4llvm3mca13ResourceState4dumpEv+0xf8>  // b.lo, b.ul, b.last
     324:	mov	w1, #0xa                   	// #10
     328:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     32c:	ldp	x19, x20, [sp, #16]
     330:	ldr	x21, [sp, #32]
     334:	ldp	x29, x30, [sp], #128
     338:	ret
     33c:	mov	x1, x0
     340:	add	x0, x2, #0x1
     344:	str	x0, [x1, #24]
     348:	mov	w0, #0xa                   	// #10
     34c:	strb	w0, [x2]
     350:	b	32c <_ZNK4llvm3mca13ResourceState4dumpEv+0xe8>

0000000000000354 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     354:	stp	x29, x30, [sp, #-32]!
     358:	mov	x29, sp
     35c:	stp	x19, x20, [sp, #16]
     360:	mov	x19, x0
     364:	mov	x20, x1
     368:	mov	x0, x2
     36c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     370:	ldp	x1, x2, [x19, #8]
     374:	sub	x2, x2, x1
     378:	asr	x2, x2, #3
     37c:	cmp	x2, w0, uxtw
     380:	b.hi	3a4 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x50>  // b.pmore
     384:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     388:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     38c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     390:	add	x3, x3, #0x0
     394:	add	x1, x1, #0x0
     398:	add	x0, x0, #0x0
     39c:	mov	w2, #0xa1                  	// #161
     3a0:	bl	0 <__assert_fail>
     3a4:	ldr	x4, [x20]
     3a8:	cbnz	x4, 3cc <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x78>
     3ac:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     3b0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     3b4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     3b8:	add	x3, x3, #0x0
     3bc:	add	x1, x1, #0x0
     3c0:	add	x0, x0, #0x0
     3c4:	mov	w2, #0xa2                  	// #162
     3c8:	b	3a0 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x4c>
     3cc:	mov	w3, w0
     3d0:	str	xzr, [x20]
     3d4:	ldr	x1, [x19, #32]
     3d8:	lsl	x2, x3, #3
     3dc:	ldr	x0, [x1, x2]
     3e0:	str	x4, [x1, x2]
     3e4:	cbz	x0, 3f4 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xa0>
     3e8:	ldp	x19, x20, [sp, #16]
     3ec:	ldp	x29, x30, [sp], #32
     3f0:	b	3c <_ZNKSt14default_deleteIN4llvm3mca16ResourceStrategyEEclEPS2_.isra.0>
     3f4:	ldp	x19, x20, [sp, #16]
     3f8:	ldp	x29, x30, [sp], #32
     3fc:	ret

0000000000000400 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     400:	stp	x29, x30, [sp, #-32]!
     404:	mov	x29, sp
     408:	str	x19, [sp, #16]
     40c:	mov	x19, x0
     410:	mov	x0, x1
     414:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     418:	ldr	w2, [x19, #168]
     41c:	cmp	x2, w0, uxtw
     420:	b.hi	444 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x44>  // b.pmore
     424:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     428:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     42c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     430:	add	x3, x3, #0x0
     434:	add	x1, x1, #0x0
     438:	add	x0, x0, #0x0
     43c:	mov	w2, #0x99                  	// #153
     440:	bl	0 <__assert_fail>
     444:	mov	w1, w0
     448:	ldr	x0, [x19, #160]
     44c:	ldr	x19, [sp, #16]
     450:	ldr	w0, [x0, x1, lsl #2]
     454:	ldp	x29, x30, [sp], #32
     458:	ret

000000000000045c <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     45c:	stp	x29, x30, [sp, #-32]!
     460:	mov	x29, sp
     464:	str	x19, [sp, #16]
     468:	mov	x19, x0
     46c:	mov	x0, x1
     470:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     474:	ldr	x1, [x19, #8]
     478:	ldr	x0, [x1, w0, uxtw #3]
     47c:	ldrb	w1, [x0, #41]
     480:	cbnz	w1, 4a0 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x44>
     484:	ldr	d0, [x0, #16]
     488:	cnt	v0.8b, v0.8b
     48c:	addv	b0, v0.8b
     490:	umov	w0, v0.b[0]
     494:	ldr	x19, [sp, #16]
     498:	ldp	x29, x30, [sp], #32
     49c:	ret
     4a0:	mov	w0, #0x1                   	// #1
     4a4:	b	494 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x38>

00000000000004a8 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     4a8:	stp	x29, x30, [sp, #-48]!
     4ac:	mov	x29, sp
     4b0:	stp	x21, x22, [sp, #32]
     4b4:	mov	x21, x0
     4b8:	stp	x19, x20, [sp, #16]
     4bc:	mov	x20, x1
     4c0:	mov	x0, x1
     4c4:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4c8:	ldp	x2, x1, [x21, #8]
     4cc:	mov	w22, w0
     4d0:	sub	x1, x1, x2
     4d4:	asr	x1, x1, #3
     4d8:	cmp	x1, w0, uxtw
     4dc:	b.hi	500 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x58>  // b.pmore
     4e0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4e4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4e8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4ec:	add	x3, x3, #0x0
     4f0:	add	x1, x1, #0x0
     4f4:	add	x0, x0, #0x0
     4f8:	mov	w2, #0xb3                  	// #179
     4fc:	bl	0 <__assert_fail>
     500:	lsl	x22, x22, #3
     504:	mov	w1, #0x1                   	// #1
     508:	ldr	x19, [x2, x22]
     50c:	mov	x0, x19
     510:	bl	1d4 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     514:	tst	w0, #0xff
     518:	b.ne	53c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x94>  // b.any
     51c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     520:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     524:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     528:	add	x3, x3, #0x0
     52c:	add	x1, x1, #0x0
     530:	add	x0, x0, #0x0
     534:	mov	w2, #0xb5                  	// #181
     538:	b	4fc <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x54>
     53c:	ldrb	w0, [x19, #41]
     540:	cbnz	w0, 574 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xcc>
     544:	ldr	d0, [x19, #16]
     548:	cnt	v0.8b, v0.8b
     54c:	addv	b0, v0.8b
     550:	umov	w2, v0.b[0]
     554:	cmp	w2, #0x1
     558:	b.ne	574 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xcc>  // b.any
     55c:	ldr	x1, [x19, #24]
     560:	mov	x0, x20
     564:	ldp	x19, x20, [sp, #16]
     568:	ldp	x21, x22, [sp, #32]
     56c:	ldp	x29, x30, [sp], #48
     570:	ret
     574:	ldr	x0, [x21, #32]
     578:	ldr	x0, [x0, x22]
     57c:	ldr	x1, [x0]
     580:	ldr	x2, [x1, #16]
     584:	ldr	x1, [x19, #24]
     588:	blr	x2
     58c:	mov	x1, x0
     590:	ldrb	w0, [x19, #41]
     594:	cbnz	w0, 4bc <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x14>
     598:	b	560 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb8>

000000000000059c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     59c:	stp	x29, x30, [sp, #-48]!
     5a0:	mov	x29, sp
     5a4:	stp	x19, x20, [sp, #16]
     5a8:	mov	x19, x0
     5ac:	mov	x20, x1
     5b0:	ldr	x0, [x1]
     5b4:	stp	x21, x22, [sp, #32]
     5b8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     5bc:	ubfiz	x21, x0, #3, #32
     5c0:	ldr	x0, [x19, #8]
     5c4:	ldr	x1, [x20, #8]
     5c8:	ldr	x22, [x0, x21]
     5cc:	mov	x0, x22
     5d0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     5d4:	ldrb	w0, [x22, #41]
     5d8:	cbnz	w0, 60c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x70>
     5dc:	ldr	d0, [x22, #16]
     5e0:	cnt	v0.8b, v0.8b
     5e4:	addv	b0, v0.8b
     5e8:	umov	w1, v0.b[0]
     5ec:	cmp	w1, #0x1
     5f0:	b.le	60c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x70>
     5f4:	ldr	x0, [x19, #32]
     5f8:	ldr	x0, [x0, x21]
     5fc:	ldr	x1, [x0]
     600:	ldr	x2, [x1, #24]
     604:	ldr	x1, [x20, #8]
     608:	blr	x2
     60c:	mov	x0, x22
     610:	mov	w1, #0x1                   	// #1
     614:	bl	1d4 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     618:	tst	w0, #0xff
     61c:	b.ne	680 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xe4>  // b.any
     620:	ldr	x1, [x20]
     624:	ldr	x0, [x19, #328]
     628:	eor	x0, x0, x1
     62c:	str	x0, [x19, #328]
     630:	ldr	x0, [x19, #56]
     634:	ldr	x21, [x0, x21]
     638:	cbz	x21, 680 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xe4>
     63c:	neg	x0, x21
     640:	and	x0, x0, x21
     644:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     648:	ubfiz	x22, x0, #3, #32
     64c:	ldr	x0, [x19, #8]
     650:	ldr	x1, [x20]
     654:	ldr	x0, [x0, x22]
     658:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     65c:	ldr	x0, [x19, #32]
     660:	ldr	x0, [x0, x22]
     664:	ldr	x1, [x0]
     668:	ldr	x2, [x1, #24]
     66c:	ldr	x1, [x20]
     670:	blr	x2
     674:	sub	x0, x21, #0x1
     678:	and	x21, x21, x0
     67c:	b	638 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x9c>
     680:	ldp	x19, x20, [sp, #16]
     684:	ldp	x21, x22, [sp, #32]
     688:	ldp	x29, x30, [sp], #48
     68c:	ret

0000000000000690 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
     690:	stp	x29, x30, [sp, #-64]!
     694:	mov	x29, sp
     698:	stp	x19, x20, [sp, #16]
     69c:	mov	x19, x0
     6a0:	ldr	x0, [x1]
     6a4:	stp	x21, x22, [sp, #32]
     6a8:	mov	x21, x1
     6ac:	str	x23, [sp, #48]
     6b0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     6b4:	ubfiz	x20, x0, #3, #32
     6b8:	ldr	x0, [x19, #8]
     6bc:	mov	w1, #0x1                   	// #1
     6c0:	ldr	x23, [x0, x20]
     6c4:	mov	x0, x23
     6c8:	bl	1d4 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     6cc:	ldr	x1, [x21, #8]
     6d0:	and	w22, w0, #0xff
     6d4:	mov	x0, x23
     6d8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     6dc:	cbnz	w22, 724 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x94>
     6e0:	ldr	x1, [x21]
     6e4:	ldr	x0, [x19, #328]
     6e8:	eor	x0, x0, x1
     6ec:	str	x0, [x19, #328]
     6f0:	ldr	x0, [x19, #56]
     6f4:	ldr	x20, [x0, x20]
     6f8:	cbz	x20, 724 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x94>
     6fc:	neg	x0, x20
     700:	and	x0, x0, x20
     704:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     708:	ldr	x2, [x19, #8]
     70c:	ldr	x1, [x21]
     710:	ldr	x0, [x2, w0, uxtw #3]
     714:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     718:	sub	x0, x20, #0x1
     71c:	and	x20, x20, x0
     720:	b	6f8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x68>
     724:	ldp	x19, x20, [sp, #16]
     728:	ldp	x21, x22, [sp, #32]
     72c:	ldr	x23, [sp, #48]
     730:	ldp	x29, x30, [sp], #64
     734:	ret

0000000000000738 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
     738:	ldr	x2, [x0, #352]
     73c:	tst	x1, x2
     740:	b.ne	754 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x1c>  // b.any
     744:	ldr	x0, [x0, #344]
     748:	bics	xzr, x1, x0
     74c:	cset	w0, ne  // ne = any
     750:	ret
     754:	mov	w0, #0x2                   	// #2
     758:	b	750 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x18>

000000000000075c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
     75c:	stp	x29, x30, [sp, #-48]!
     760:	mov	x29, sp
     764:	stp	x19, x20, [sp, #16]
     768:	mov	x19, x0
     76c:	mov	x20, x1
     770:	stp	x21, x22, [sp, #32]
     774:	cbz	x20, 828 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xcc>
     778:	neg	x21, x20
     77c:	and	x21, x21, x20
     780:	mov	x0, x21
     784:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     788:	ldr	x1, [x19, #8]
     78c:	eor	x20, x20, x21
     790:	ldr	x22, [x1, w0, uxtw #3]
     794:	mov	x0, x22
     798:	bl	208 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>
     79c:	cbz	w0, 7c0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x64>
     7a0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7a4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7a8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7ac:	add	x3, x3, #0x0
     7b0:	add	x1, x1, #0x0
     7b4:	add	x0, x0, #0x0
     7b8:	mov	w2, #0x102                 	// #258
     7bc:	bl	0 <__assert_fail>
     7c0:	ldr	w1, [x22, #32]
     7c4:	cmp	w1, #0x0
     7c8:	b.gt	7e0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x84>
     7cc:	b.ne	774 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x18>  // b.any
     7d0:	ldr	x0, [x19, #352]
     7d4:	eor	x21, x0, x21
     7d8:	str	x21, [x19, #352]
     7dc:	b	774 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x18>
     7e0:	ldr	w0, [x22, #36]
     7e4:	sub	w0, w0, #0x1
     7e8:	str	w0, [x22, #36]
     7ec:	cmp	w0, w1
     7f0:	b.ls	814 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xb8>  // b.plast
     7f4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7f8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7fc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     800:	add	x3, x3, #0x0
     804:	add	x1, x1, #0x0
     808:	add	x0, x0, #0x0
     80c:	mov	w2, #0x112                 	// #274
     810:	b	7bc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x60>
     814:	cbnz	w0, 774 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x18>
     818:	ldr	x0, [x19, #344]
     81c:	eor	x21, x0, x21
     820:	str	x21, [x19, #344]
     824:	b	774 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x18>
     828:	ldp	x19, x20, [sp, #16]
     82c:	ldp	x21, x22, [sp, #32]
     830:	ldp	x29, x30, [sp], #48
     834:	ret

0000000000000838 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
     838:	stp	x29, x30, [sp, #-48]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x20, x0
     848:	mov	x19, x1
     84c:	ldr	x0, [x0, #344]
     850:	orr	x0, x0, x1
     854:	str	x0, [x20, #344]
     858:	str	x21, [sp, #32]
     85c:	cbz	x19, 8bc <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>
     860:	neg	x21, x19
     864:	and	x21, x21, x19
     868:	mov	x0, x21
     86c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     870:	ldr	x1, [x20, #8]
     874:	eor	x19, x19, x21
     878:	ldr	x1, [x1, w0, uxtw #3]
     87c:	ldr	w2, [x1, #32]
     880:	cmp	w2, #0x0
     884:	b.le	85c <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x24>
     888:	ldr	w0, [x1, #36]
     88c:	add	w0, w0, #0x1
     890:	str	w0, [x1, #36]
     894:	cmp	w0, w2
     898:	b.ls	85c <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x24>  // b.plast
     89c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     8a0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     8a4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     8a8:	add	x3, x3, #0x0
     8ac:	add	x1, x1, #0x0
     8b0:	add	x0, x0, #0x0
     8b4:	mov	w2, #0x11d                 	// #285
     8b8:	bl	0 <__assert_fail>
     8bc:	ldp	x19, x20, [sp, #16]
     8c0:	ldr	x21, [sp, #32]
     8c4:	ldp	x29, x30, [sp], #48
     8c8:	ret

00000000000008cc <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
     8cc:	stp	x29, x30, [sp, #-64]!
     8d0:	mov	x29, sp
     8d4:	stp	x19, x20, [sp, #16]
     8d8:	mov	x20, #0x0                   	// #0
     8dc:	stp	x23, x24, [sp, #48]
     8e0:	ldr	w23, [x1, #184]
     8e4:	ldr	x19, [x1, #176]
     8e8:	stp	x21, x22, [sp, #32]
     8ec:	mov	x21, x0
     8f0:	mov	w0, #0x18                  	// #24
     8f4:	mov	x22, x1
     8f8:	umaddl	x23, w23, w0, x19
     8fc:	cmp	x23, x19
     900:	b.eq	948 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>  // b.none
     904:	ldrb	w0, [x19, #16]
     908:	cbnz	w0, 940 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x74>
     90c:	ldr	w24, [x19, #20]
     910:	ldr	x0, [x19]
     914:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     918:	ldr	x2, [x21, #8]
     91c:	mov	w1, w24
     920:	ldr	x0, [x2, w0, uxtw #3]
     924:	bl	1d4 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     928:	tst	w0, #0xff
     92c:	b.ne	938 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x6c>  // b.any
     930:	ldr	x0, [x19]
     934:	orr	x20, x20, x0
     938:	add	x19, x19, #0x18
     93c:	b	8fc <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x30>
     940:	mov	w24, #0x0                   	// #0
     944:	b	910 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x44>
     948:	ldr	x0, [x21, #320]
     94c:	ands	x0, x20, x0
     950:	b.ne	960 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x94>  // b.any
     954:	ldr	x20, [x22, #304]
     958:	ldr	x0, [x21, #336]
     95c:	and	x0, x20, x0
     960:	ldp	x19, x20, [sp, #16]
     964:	ldp	x21, x22, [sp, #32]
     968:	ldp	x23, x24, [sp, #48]
     96c:	ldp	x29, x30, [sp], #64
     970:	ret

0000000000000974 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
     974:	stp	x29, x30, [sp, #-32]!
     978:	mov	x29, sp
     97c:	str	x19, [sp, #16]
     980:	mov	x19, x0
     984:	mov	x0, x1
     988:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     98c:	ldr	x1, [x19, #8]
     990:	ldr	x1, [x1, w0, uxtw #3]
     994:	ldrb	w2, [x1, #41]
     998:	cbz	w2, 9a4 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x30>
     99c:	ldrb	w2, [x1, #40]
     9a0:	cbz	w2, 9c4 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x50>
     9a4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9a8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9ac:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     9b0:	add	x3, x3, #0x0
     9b4:	add	x1, x1, #0x0
     9b8:	add	x0, x0, #0x0
     9bc:	mov	w2, #0x15a                 	// #346
     9c0:	bl	0 <__assert_fail>
     9c4:	mov	w2, #0x1                   	// #1
     9c8:	strb	w2, [x1, #40]
     9cc:	mov	x1, #0x1                   	// #1
     9d0:	lsl	x1, x1, x0
     9d4:	ldr	x0, [x19, #336]
     9d8:	eor	x0, x0, x1
     9dc:	str	x0, [x19, #336]
     9e0:	ldr	x19, [sp, #16]
     9e4:	ldp	x29, x30, [sp], #32
     9e8:	ret

00000000000009ec <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
     9ec:	stp	x29, x30, [sp, #-32]!
     9f0:	mov	x29, sp
     9f4:	str	x19, [sp, #16]
     9f8:	mov	x19, x0
     9fc:	mov	x0, x1
     a00:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a04:	ldr	x1, [x19, #8]
     a08:	ldr	x1, [x1, w0, uxtw #3]
     a0c:	ldrb	w2, [x1, #41]
     a10:	strb	wzr, [x1, #40]
     a14:	cbz	w2, a2c <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x40>
     a18:	mov	x2, #0x1                   	// #1
     a1c:	lsl	x3, x2, x0
     a20:	ldr	x2, [x19, #336]
     a24:	eor	x2, x2, x3
     a28:	str	x2, [x19, #336]
     a2c:	ldr	w1, [x1, #32]
     a30:	cbnz	w1, a48 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x5c>
     a34:	mov	x1, #0x1                   	// #1
     a38:	lsl	x1, x1, x0
     a3c:	ldr	x0, [x19, #352]
     a40:	eor	x0, x0, x1
     a44:	str	x0, [x19, #352]
     a48:	ldr	x19, [sp, #16]
     a4c:	ldp	x29, x30, [sp], #32
     a50:	ret

0000000000000a54 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
     a54:	stp	x29, x30, [sp, #-192]!
     a58:	mov	x29, sp
     a5c:	stp	x19, x20, [sp, #16]
     a60:	add	x20, x0, #0xd0
     a64:	mov	x19, x1
     a68:	stp	x21, x22, [sp, #32]
     a6c:	mov	x21, x0
     a70:	add	x22, sp, #0x80
     a74:	stp	x23, x24, [sp, #48]
     a78:	stp	x25, x26, [sp, #64]
     a7c:	stp	x27, x28, [sp, #80]
     a80:	ldr	w0, [x20, #8]
     a84:	cmp	wzr, w0, lsr #1
     a88:	b.ne	b00 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xac>  // b.any
     a8c:	mov	x8, x22
     a90:	mov	x0, x20
     a94:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a98:	add	x23, sp, #0xa0
     a9c:	mov	x0, x20
     aa0:	mov	x8, x23
     aa4:	add	x27, sp, #0x70
     aa8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     aac:	add	x28, x19, #0x10
     ab0:	add	x0, sp, #0x78
     ab4:	mov	x24, #0xffffffff            	// #4294967295
     ab8:	str	x0, [sp, #96]
     abc:	ldr	x26, [sp, #144]
     ac0:	ldr	x0, [sp, #160]
     ac4:	ldr	x1, [sp, #176]
     ac8:	cbz	x26, b2c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xd8>
     acc:	ldr	x3, [sp, #128]
     ad0:	ldr	x4, [x3]
     ad4:	ldr	x3, [sp, #136]
     ad8:	cmp	x4, x3
     adc:	b.eq	b2c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xd8>  // b.none
     ae0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ae4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ae8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     aec:	add	x3, x3, #0x0
     af0:	add	x1, x1, #0x0
     af4:	add	x0, x0, #0x0
     af8:	mov	w2, #0x4c7                 	// #1223
     afc:	bl	0 <__assert_fail>
     b00:	mov	x0, x20
     b04:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b08:	mov	x23, x0
     b0c:	mov	x0, x20
     b10:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b14:	stp	x23, x0, [sp, #144]
     b18:	mov	x0, x22
     b1c:	ldr	x1, [x21, #208]
     b20:	stp	x20, x1, [sp, #128]
     b24:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b28:	b	a98 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x44>
     b2c:	cbz	x1, b60 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x10c>
     b30:	ldr	x4, [x0]
     b34:	ldr	x3, [sp, #168]
     b38:	cmp	x4, x3
     b3c:	b.eq	b60 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x10c>  // b.none
     b40:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b44:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b48:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b4c:	add	x3, x3, #0x0
     b50:	add	x1, x1, #0x0
     b54:	add	x0, x0, #0x0
     b58:	mov	w2, #0x4c8                 	// #1224
     b5c:	b	afc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa8>
     b60:	ldr	x3, [sp, #128]
     b64:	cmp	x3, x0
     b68:	b.eq	b8c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x138>  // b.none
     b6c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b70:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b74:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b78:	add	x3, x3, #0x0
     b7c:	add	x1, x1, #0x0
     b80:	add	x0, x0, #0x0
     b84:	mov	w2, #0x4c9                 	// #1225
     b88:	b	afc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa8>
     b8c:	cmp	x1, x26
     b90:	b.eq	ce0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x28c>  // b.none
     b94:	ldr	x1, [x0]
     b98:	ldr	x0, [sp, #136]
     b9c:	cmp	x1, x0
     ba0:	b.eq	bc4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x170>  // b.none
     ba4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ba8:	add	x3, x3, #0x0
     bac:	mov	w2, #0x4b3                 	// #1203
     bb0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bb4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bb8:	add	x1, x1, #0x0
     bbc:	add	x0, x0, #0x0
     bc0:	b	afc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa8>
     bc4:	ldr	w0, [x26, #16]
     bc8:	cbnz	w0, c5c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x208>
     bcc:	ldr	d0, [x26]
     bd0:	cnt	v0.8b, v0.8b
     bd4:	addv	b0, v0.8b
     bd8:	umov	w0, v0.b[0]
     bdc:	cmp	w0, #0x1
     be0:	b.ne	bf0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x19c>  // b.any
     be4:	mov	x1, x26
     be8:	mov	x0, x21
     bec:	bl	690 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
     bf0:	ldr	x1, [x26]
     bf4:	mov	x0, x21
     bf8:	bl	9ec <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
     bfc:	ldp	w1, w0, [x19, #8]
     c00:	cmp	w1, w0
     c04:	b.cc	c9c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x248>  // b.lo, b.ul, b.last
     c08:	mov	w0, w0
     c0c:	add	x0, x0, #0x2
     c10:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c14:	cmp	x0, x24
     c18:	stp	x0, x24, [sp, #112]
     c1c:	ldr	x0, [sp, #96]
     c20:	csel	x0, x27, x0, ls  // ls = plast
     c24:	ldr	x25, [x0]
     c28:	lsl	x0, x25, #4
     c2c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c30:	mov	x1, x0
     c34:	mov	x5, x0
     c38:	ldr	x0, [x19]
     c3c:	ldr	w4, [x19, #8]
     c40:	mov	x3, x0
     c44:	add	x4, x0, x4, lsl #4
     c48:	cmp	x3, x4
     c4c:	b.eq	c80 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x22c>  // b.none
     c50:	ldp	x6, x7, [x3], #16
     c54:	stp	x6, x7, [x5], #16
     c58:	b	c48 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1f4>
     c5c:	sub	w0, w0, #0x1
     c60:	str	w0, [x26, #16]
     c64:	cbz	w0, bcc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x178>
     c68:	ldr	x0, [sp, #144]
     c6c:	add	x0, x0, #0x18
     c70:	str	x0, [sp, #144]
     c74:	mov	x0, x22
     c78:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c7c:	b	abc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x68>
     c80:	cmp	x0, x28
     c84:	b.eq	c94 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x240>  // b.none
     c88:	str	x1, [sp, #104]
     c8c:	bl	0 <free>
     c90:	ldr	x1, [sp, #104]
     c94:	str	x1, [x19]
     c98:	str	w25, [x19, #12]
     c9c:	ldr	x0, [x19]
     ca0:	ldr	w1, [x19, #8]
     ca4:	ldp	x2, x3, [x26]
     ca8:	add	x0, x0, x1, lsl #4
     cac:	add	x1, x1, #0x1
     cb0:	stp	x2, x3, [x0]
     cb4:	mov	x0, x19
     cb8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cbc:	ldr	x0, [sp, #128]
     cc0:	ldr	x1, [x0]
     cc4:	ldr	x0, [sp, #136]
     cc8:	cmp	x1, x0
     ccc:	b.eq	c68 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x214>  // b.none
     cd0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cd4:	mov	w2, #0x4cf                 	// #1231
     cd8:	add	x3, x3, #0x0
     cdc:	b	bb0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x15c>
     ce0:	ldr	x0, [x19]
     ce4:	mov	x24, #0xfffffffffffffffe    	// #-2
     ce8:	ldr	w22, [x19, #8]
     cec:	mov	x19, x0
     cf0:	add	x22, x0, x22, lsl #4
     cf4:	cmp	x19, x22
     cf8:	b.eq	d44 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2f0>  // b.none
     cfc:	mov	x2, x23
     d00:	mov	x1, x19
     d04:	mov	x0, x20
     d08:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d0c:	tst	w0, #0xff
     d10:	b.eq	d3c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e8>  // b.none
     d14:	ldr	x0, [sp, #160]
     d18:	stp	x24, x24, [x0]
     d1c:	mov	x0, x20
     d20:	ldr	w1, [x20, #8]
     d24:	lsr	w1, w1, #1
     d28:	sub	w1, w1, #0x1
     d2c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d30:	ldr	w0, [x21, #220]
     d34:	add	w0, w0, #0x1
     d38:	str	w0, [x21, #220]
     d3c:	add	x19, x19, #0x10
     d40:	b	cf4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2a0>
     d44:	ldp	x19, x20, [sp, #16]
     d48:	ldp	x21, x22, [sp, #32]
     d4c:	ldp	x23, x24, [sp, #48]
     d50:	ldp	x25, x26, [sp, #64]
     d54:	ldp	x27, x28, [sp, #80]
     d58:	ldp	x29, x30, [sp], #192
     d5c:	ret

0000000000000d60 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     d60:	stp	x29, x30, [sp, #-112]!
     d64:	mov	x29, sp
     d68:	stp	x19, x20, [sp, #16]
     d6c:	mov	x19, x0
     d70:	mov	x20, x1
     d74:	stp	x21, x22, [sp, #32]
     d78:	mov	x21, x0
     d7c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d80:	stp	x23, x24, [sp, #48]
     d84:	ldr	x0, [x0]
     d88:	stp	x25, x26, [sp, #64]
     d8c:	add	x0, x0, #0x10
     d90:	stp	x27, x28, [sp, #80]
     d94:	str	x0, [x21], #8
     d98:	ldr	w0, [x1, #48]
     d9c:	str	xzr, [x19, #8]
     da0:	sub	w23, w0, #0x1
     da4:	stp	xzr, xzr, [x21, #8]
     da8:	ubfiz	x22, x23, #3, #32
     dac:	cbz	w23, dd4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x74>
     db0:	mov	x0, x22
     db4:	bl	0 <_Znwm>
     db8:	str	x0, [x19, #8]
     dbc:	add	x22, x0, x22
     dc0:	str	x22, [x21, #16]
     dc4:	cbz	x23, ddc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x7c>
     dc8:	sub	x23, x23, #0x1
     dcc:	str	xzr, [x0], #8
     dd0:	b	dc4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x64>
     dd4:	mov	x0, #0x0                   	// #0
     dd8:	b	db8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x58>
     ddc:	add	x23, x19, #0x20
     de0:	ldr	w0, [x20, #48]
     de4:	str	x22, [x21, #8]
     de8:	str	xzr, [x19, #32]
     dec:	sub	w21, w0, #0x1
     df0:	stp	xzr, xzr, [x23, #8]
     df4:	ubfiz	x22, x21, #3, #32
     df8:	cbz	w21, e20 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xc0>
     dfc:	mov	x0, x22
     e00:	bl	0 <_Znwm>
     e04:	str	x0, [x19, #32]
     e08:	add	x22, x0, x22
     e0c:	str	x22, [x23, #16]
     e10:	cbz	x21, e28 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xc8>
     e14:	sub	x21, x21, #0x1
     e18:	str	xzr, [x0], #8
     e1c:	b	e10 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xb0>
     e20:	mov	x0, #0x0                   	// #0
     e24:	b	e04 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xa4>
     e28:	str	x22, [x23, #8]
     e2c:	add	x23, x19, #0x38
     e30:	ldr	w0, [x20, #48]
     e34:	str	xzr, [x19, #56]
     e38:	sub	w24, w0, #0x1
     e3c:	stp	xzr, xzr, [x23, #8]
     e40:	ubfiz	x22, x24, #3, #32
     e44:	cbz	w24, e70 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x110>
     e48:	mov	x0, x22
     e4c:	bl	0 <_Znwm>
     e50:	str	x0, [x19, #56]
     e54:	add	x22, x0, x22
     e58:	str	x22, [x23, #16]
     e5c:	cmp	x24, x21
     e60:	b.eq	e78 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x118>  // b.none
     e64:	str	xzr, [x0, x21, lsl #3]
     e68:	add	x21, x21, #0x1
     e6c:	b	e5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xfc>
     e70:	mov	x0, #0x0                   	// #0
     e74:	b	e50 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xf0>
     e78:	str	x22, [x23, #8]
     e7c:	add	x1, x19, #0x60
     e80:	ldr	w21, [x20, #48]
     e84:	mov	x0, #0x800000000           	// #34359738368
     e88:	stp	x1, x0, [x19, #80]
     e8c:	add	x22, x19, #0x50
     e90:	cmp	x21, #0x8
     e94:	b.ls	ea8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x148>  // b.plast
     e98:	mov	x2, x21
     e9c:	mov	x0, x22
     ea0:	mov	x3, #0x8                   	// #8
     ea4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ea8:	mov	x1, x21
     eac:	mov	x0, x22
     eb0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     eb4:	ldr	x0, [x19, #80]
     eb8:	ldr	w1, [x19, #88]
     ebc:	add	x1, x0, x1, lsl #3
     ec0:	cmp	x1, x0
     ec4:	b.eq	ed0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x170>  // b.none
     ec8:	str	xzr, [x0], #8
     ecc:	b	ec0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x160>
     ed0:	ldr	w3, [x20, #48]
     ed4:	add	x1, x19, #0xb0
     ed8:	mov	x0, #0x800000000           	// #34359738368
     edc:	stp	x1, x0, [x19, #160]
     ee0:	sub	w23, w3, #0x1
     ee4:	add	x21, x19, #0xa0
     ee8:	cmp	w23, #0x8
     eec:	b.ls	f00 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1a0>  // b.plast
     ef0:	mov	x2, x23
     ef4:	mov	x0, x21
     ef8:	mov	x3, #0x4                   	// #4
     efc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f00:	mov	x1, x23
     f04:	mov	x0, x21
     f08:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f0c:	ldr	x0, [x19, #160]
     f10:	ldr	w1, [x19, #168]
     f14:	add	x1, x0, x1, lsl #2
     f18:	cmp	x1, x0
     f1c:	b.eq	f28 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1c8>  // b.none
     f20:	str	wzr, [x0], #4
     f24:	b	f18 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b8>
     f28:	add	x0, x19, #0xd0
     f2c:	str	xzr, [x19, #208]
     f30:	mov	x21, #0x1                   	// #1
     f34:	ldrb	w1, [x0, #8]
     f38:	orr	w1, w1, #0x1
     f3c:	strb	w1, [x0, #8]
     f40:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f44:	str	xzr, [x19, #320]
     f48:	ldr	w2, [x19, #88]
     f4c:	mov	x0, #0xffffffffffffffff    	// #-1
     f50:	ldr	x1, [x19, #80]
     f54:	stp	xzr, x0, [x19, #336]
     f58:	mov	x0, x20
     f5c:	str	xzr, [x19, #352]
     f60:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     f64:	ldr	w24, [x20, #48]
     f68:	mov	w23, w21
     f6c:	cmp	w24, w21
     f70:	b.ls	fc8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x268>  // b.plast
     f74:	mov	x1, x21
     f78:	mov	x0, x22
     f7c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f80:	add	x21, x21, #0x1
     f84:	ldr	x0, [x0]
     f88:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f8c:	mov	w1, w0
     f90:	ldr	w2, [x19, #168]
     f94:	cmp	x2, w0, uxtw
     f98:	b.hi	fbc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x25c>  // b.pmore
     f9c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fa0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fa4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fa8:	add	x3, x3, #0x0
     fac:	add	x1, x1, #0x0
     fb0:	add	x0, x0, #0x0
     fb4:	mov	w2, #0x95                  	// #149
     fb8:	bl	0 <__assert_fail>
     fbc:	ldr	x0, [x19, #160]
     fc0:	str	w23, [x0, x1, lsl #2]
     fc4:	b	f68 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x208>
     fc8:	adrp	x24, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     fcc:	ldr	w0, [x20, #48]
     fd0:	mov	x21, #0x1                   	// #1
     fd4:	str	w0, [sp, #108]
     fd8:	ldr	x24, [x24]
     fdc:	add	x24, x24, #0x10
     fe0:	ldr	w0, [sp, #108]
     fe4:	cmp	w0, w21
     fe8:	b.ls	10f8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x398>  // b.plast
     fec:	mov	x1, x21
     ff0:	mov	x0, x22
     ff4:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ff8:	ldr	x25, [x0]
     ffc:	mov	x0, x25
    1000:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1004:	ubfiz	x23, x0, #3, #32
    1008:	ldr	x0, [x20, #40]
    100c:	ldr	x28, [x19, #8]
    1010:	cbnz	x0, 1034 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2d4>
    1014:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1018:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    101c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1020:	add	x3, x3, #0x0
    1024:	add	x1, x1, #0x0
    1028:	add	x0, x0, #0x0
    102c:	mov	w2, #0x154                 	// #340
    1030:	b	fb8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x258>
    1034:	ldr	w0, [x20, #48]
    1038:	cmp	w21, w0
    103c:	b.cc	1060 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x300>  // b.lo, b.ul, b.last
    1040:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1044:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1048:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    104c:	add	x3, x3, #0x0
    1050:	add	x1, x1, #0x0
    1054:	add	x0, x0, #0x0
    1058:	mov	w2, #0x156                 	// #342
    105c:	b	fb8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x258>
    1060:	ldr	x27, [x20, #32]
    1064:	mov	x0, #0x30                  	// #48
    1068:	bl	0 <_Znwm>
    106c:	mov	x26, x0
    1070:	mov	x3, x25
    1074:	mov	w2, w21
    1078:	add	x27, x27, x21, lsl #5
    107c:	mov	x1, x27
    1080:	bl	138 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>
    1084:	ldr	x0, [x28, x23]
    1088:	str	x26, [x28, x23]
    108c:	cbz	x0, 1094 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x334>
    1090:	bl	54 <_ZNKSt14default_deleteIN4llvm3mca13ResourceStateEEclEPS2_.isra.0>
    1094:	ldr	x0, [x19, #8]
    1098:	ldr	x26, [x19, #32]
    109c:	ldr	x1, [x0, x23]
    10a0:	ldrb	w0, [x1, #41]
    10a4:	cbnz	w0, 10c0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x360>
    10a8:	ldr	d0, [x1, #16]
    10ac:	cnt	v0.8b, v0.8b
    10b0:	addv	b0, v0.8b
    10b4:	umov	w0, v0.b[0]
    10b8:	cmp	w0, #0x1
    10bc:	b.le	10f0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x390>
    10c0:	mov	x0, #0x20                  	// #32
    10c4:	ldr	x27, [x1, #24]
    10c8:	bl	0 <_Znwm>
    10cc:	mov	x1, x0
    10d0:	stp	x24, x27, [x0]
    10d4:	stp	x27, xzr, [x0, #16]
    10d8:	ldr	x0, [x26, x23]
    10dc:	str	x1, [x26, x23]
    10e0:	cbz	x0, 10e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x388>
    10e4:	bl	3c <_ZNKSt14default_deleteIN4llvm3mca16ResourceStrategyEEclEPS2_.isra.0>
    10e8:	add	x21, x21, #0x1
    10ec:	b	fe0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x280>
    10f0:	mov	x1, #0x0                   	// #0
    10f4:	b	10d8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x378>
    10f8:	ldr	w24, [x20, #48]
    10fc:	mov	x23, #0x1                   	// #1
    1100:	mov	x25, x23
    1104:	cmp	w24, w23
    1108:	b.ls	1180 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x420>  // b.plast
    110c:	mov	x1, x23
    1110:	mov	x0, x22
    1114:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1118:	ldr	x20, [x0]
    111c:	mov	x0, x20
    1120:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1124:	ldr	x1, [x19, #8]
    1128:	ldr	x1, [x1, w0, uxtw #3]
    112c:	ldrb	w1, [x1, #41]
    1130:	cbnz	w1, 1148 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3e8>
    1134:	ldr	x0, [x19, #320]
    1138:	orr	x20, x0, x20
    113c:	str	x20, [x19, #320]
    1140:	add	x23, x23, #0x1
    1144:	b	1104 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3a4>
    1148:	lsl	x21, x25, x0
    114c:	sub	x20, x20, x21
    1150:	cbz	x20, 1140 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3e0>
    1154:	neg	x26, x20
    1158:	and	x26, x26, x20
    115c:	mov	x0, x26
    1160:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1164:	ldr	x2, [x19, #56]
    1168:	ubfiz	x0, x0, #3, #32
    116c:	eor	x20, x20, x26
    1170:	ldr	x1, [x2, x0]
    1174:	orr	x1, x1, x21
    1178:	str	x1, [x2, x0]
    117c:	b	1150 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3f0>
    1180:	ldr	x0, [x19, #320]
    1184:	ldp	x21, x22, [sp, #32]
    1188:	ldp	x23, x24, [sp, #48]
    118c:	ldp	x25, x26, [sp, #64]
    1190:	ldp	x27, x28, [sp, #80]
    1194:	str	x0, [x19, #328]
    1198:	ldp	x19, x20, [sp, #16]
    119c:	ldp	x29, x30, [sp], #112
    11a0:	ret

00000000000011a4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
    11a4:	stp	x29, x30, [sp, #-176]!
    11a8:	mov	x29, sp
    11ac:	stp	x19, x20, [sp, #16]
    11b0:	mov	x20, x0
    11b4:	mov	w0, #0x18                  	// #24
    11b8:	stp	x23, x24, [sp, #48]
    11bc:	add	x23, x20, #0xd0
    11c0:	ldr	w24, [x1, #184]
    11c4:	ldr	x19, [x1, #176]
    11c8:	stp	x21, x22, [sp, #32]
    11cc:	add	x22, sp, #0x88
    11d0:	add	x21, sp, #0x98
    11d4:	stp	x27, x28, [sp, #80]
    11d8:	mov	x27, x2
    11dc:	add	x28, sp, #0x78
    11e0:	umaddl	x24, w24, w0, x19
    11e4:	add	x0, sp, #0x80
    11e8:	stp	x25, x26, [sp, #64]
    11ec:	str	x0, [sp, #96]
    11f0:	cmp	x24, x19
    11f4:	b.eq	1478 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2d4>  // b.none
    11f8:	ldp	w0, w1, [x19, #8]
    11fc:	cmp	w0, w1
    1200:	b.ne	1218 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x74>  // b.any
    1204:	ldr	x1, [x19]
    1208:	mov	x0, x20
    120c:	bl	9ec <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1210:	add	x19, x19, #0x18
    1214:	b	11f0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x4c>
    1218:	cbz	w0, 123c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x98>
    121c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1220:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1224:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1228:	add	x3, x3, #0x0
    122c:	add	x1, x1, #0x0
    1230:	add	x0, x0, #0x0
    1234:	mov	w2, #0x133                 	// #307
    1238:	bl	0 <__assert_fail>
    123c:	ldrb	w0, [x19, #16]
    1240:	ldr	x1, [x19]
    1244:	cbnz	w0, 13c8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x224>
    1248:	mov	x0, x20
    124c:	bl	4a8 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
    1250:	stp	x0, x1, [sp, #136]
    1254:	mov	x1, x22
    1258:	mov	x0, x20
    125c:	bl	59c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
    1260:	ldp	w0, w25, [x19, #8]
    1264:	mov	x2, x21
    1268:	mov	x1, x22
    126c:	sub	w25, w25, w0
    1270:	mov	x0, x23
    1274:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1278:	tst	w0, #0xff
    127c:	b.eq	131c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x178>  // b.none
    1280:	ldr	x0, [sp, #152]
    1284:	ldr	w1, [x0, #16]
    1288:	add	w25, w1, w25
    128c:	str	w25, [x0, #16]
    1290:	ldp	w0, w25, [x19, #8]
    1294:	sub	w25, w25, w0
    1298:	ldp	x0, x1, [sp, #136]
    129c:	stp	x0, x1, [sp, #152]
    12a0:	ldp	w1, w0, [x27, #8]
    12a4:	cmp	w1, w0
    12a8:	b.cc	1368 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1c4>  // b.lo, b.ul, b.last
    12ac:	mov	w0, w0
    12b0:	add	x0, x0, #0x2
    12b4:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    12b8:	mov	x1, #0xffffffff            	// #4294967295
    12bc:	cmp	x0, x1
    12c0:	stp	x0, x1, [sp, #120]
    12c4:	mov	x2, #0x18                  	// #24
    12c8:	ldr	x0, [sp, #96]
    12cc:	csel	x0, x28, x0, ls  // ls = plast
    12d0:	ldr	x26, [x0]
    12d4:	mul	x0, x26, x2
    12d8:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    12dc:	mov	x1, x0
    12e0:	ldr	w7, [x27, #8]
    12e4:	mov	x2, #0x18                  	// #24
    12e8:	ldr	x0, [x27]
    12ec:	mov	x5, #0x0                   	// #0
    12f0:	madd	x7, x7, x2, x0
    12f4:	add	x6, x0, x5
    12f8:	cmp	x7, x6
    12fc:	b.eq	1348 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1a4>  // b.none
    1300:	add	x8, x1, x5
    1304:	add	x5, x5, #0x18
    1308:	ldp	x2, x3, [x6]
    130c:	stp	x2, x3, [x8]
    1310:	ldr	x2, [x6, #16]
    1314:	str	x2, [x8, #16]
    1318:	b	12f4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x150>
    131c:	ldr	x3, [sp, #152]
    1320:	mov	x1, x22
    1324:	mov	x2, x22
    1328:	mov	x0, x23
    132c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1330:	ldr	x1, [sp, #136]
    1334:	str	x1, [x0]
    1338:	ldr	x1, [sp, #144]
    133c:	str	x1, [x0, #8]
    1340:	str	wzr, [x0, #16]
    1344:	b	1284 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xe0>
    1348:	add	x2, x27, #0x10
    134c:	cmp	x0, x2
    1350:	b.eq	1360 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1bc>  // b.none
    1354:	str	x1, [sp, #104]
    1358:	bl	0 <free>
    135c:	ldr	x1, [sp, #104]
    1360:	str	x1, [x27]
    1364:	str	w26, [x27, #12]
    1368:	ldr	w0, [x27, #8]
    136c:	mov	w2, #0x18                  	// #24
    1370:	ldr	x1, [x27]
    1374:	umaddl	x0, w0, w2, x1
    1378:	mov	w1, #0x1                   	// #1
    137c:	stp	w25, w1, [sp, #168]
    1380:	ldp	x2, x3, [x21]
    1384:	stp	x2, x3, [x0]
    1388:	ldr	x1, [x21, #16]
    138c:	str	x1, [x0, #16]
    1390:	mov	x0, x27
    1394:	ldr	w1, [x27, #8]
    1398:	add	x1, x1, #0x1
    139c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13a0:	ldr	w0, [x27, #8]
    13a4:	cbnz	w0, 1210 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c>
    13a8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13ac:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13b0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13b4:	add	x3, x3, #0x0
    13b8:	add	x1, x1, #0x0
    13bc:	add	x0, x0, #0x0
    13c0:	mov	w2, #0xa7                  	// #167
    13c4:	b	1238 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x94>
    13c8:	fmov	d0, x1
    13cc:	cnt	v0.8b, v0.8b
    13d0:	addv	b0, v0.8b
    13d4:	umov	w0, v0.b[0]
    13d8:	cmp	w0, #0x1
    13dc:	b.gt	1400 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x25c>
    13e0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13e4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13e8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    13ec:	add	x3, x3, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x0, x0, #0x0
    13f8:	mov	w2, #0x13b                 	// #315
    13fc:	b	1238 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x94>
    1400:	mov	x0, x20
    1404:	bl	974 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>
    1408:	ldp	w0, w25, [x19, #8]
    140c:	mov	x2, x22
    1410:	mov	x1, x21
    1414:	sub	w25, w25, w0
    1418:	ldr	x0, [x19]
    141c:	str	x0, [sp, #152]
    1420:	ldr	x0, [x19]
    1424:	str	x0, [sp, #160]
    1428:	mov	x0, x23
    142c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1430:	tst	w0, #0xff
    1434:	b.eq	144c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2a8>  // b.none
    1438:	ldr	x0, [sp, #136]
    143c:	ldr	w1, [x0, #16]
    1440:	add	w25, w1, w25
    1444:	str	w25, [x0, #16]
    1448:	b	1210 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6c>
    144c:	ldr	x3, [sp, #136]
    1450:	mov	x1, x21
    1454:	mov	x2, x21
    1458:	mov	x0, x23
    145c:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1460:	ldr	x1, [sp, #152]
    1464:	str	x1, [x0]
    1468:	ldr	x1, [sp, #160]
    146c:	str	x1, [x0, #8]
    1470:	str	wzr, [x0, #16]
    1474:	b	143c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x298>
    1478:	ldp	x19, x20, [sp, #16]
    147c:	ldp	x21, x22, [sp, #32]
    1480:	ldp	x23, x24, [sp, #48]
    1484:	ldp	x25, x26, [sp, #64]
    1488:	ldp	x27, x28, [sp, #80]
    148c:	ldp	x29, x30, [sp], #176
    1490:	ret

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	w0, #0x4
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	b.hi	34 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0+0x34>  // b.pmore
  14:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0>
  18:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0>
  1c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x47d                 	// #1149
  30:	bl	0 <__assert_fail>
  34:	mov	w19, w0
  38:	mov	w0, #0x18                  	// #24
  3c:	umull	x0, w19, w0
  40:	bl	0 <_Znwm>
  44:	mov	w1, w19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm12NextPowerOf2Em:

0000000000000000 <_ZN4llvm12NextPowerOf2Em>:
   0:	orr	x0, x0, x0, lsr #1
   4:	orr	x0, x0, x0, lsr #2
   8:	orr	x0, x0, x0, lsr #4
   c:	orr	x0, x0, x0, lsr #8
  10:	orr	x0, x0, x0, lsr #16
  14:	orr	x0, x0, x0, lsr #32
  18:	add	x0, x0, #0x1
  1c:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x19
  14:	bl	0 <malloc>
  18:	mov	x20, x0
  1c:	cbnz	x0, 34 <_ZN4llvm11safe_mallocEm+0x34>
  20:	cbz	x19, 44 <_ZN4llvm11safe_mallocEm+0x44>
  24:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  28:	mov	w1, #0x1                   	// #1
  2c:	add	x0, x0, #0x0
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x19, #0x1                   	// #1
  48:	b	10 <_ZN4llvm11safe_mallocEm+0x10>

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm3mca21getResourceStateIndexEm:

0000000000000000 <_ZN4llvm3mca21getResourceStateIndexEm>:
   0:	cbnz	x0, 2c <_ZN4llvm3mca21getResourceStateIndexEm+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
   c:	adrp	x1, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x64                  	// #100
  28:	bl	0 <__assert_fail>
  2c:	clz	x0, x0
  30:	mov	w1, #0x3f                  	// #63
  34:	sub	w0, w1, w0
  38:	ret

Disassembly of section .text._ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm:

0000000000000000 <_ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm>:
   0:	ldr	x2, [x0, #24]
   4:	tst	x1, x2
   8:	b.ne	34 <_ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm+0x34>  // b.any
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm>
  14:	adrp	x1, 0 <_ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm3mca13ResourceState21markSubResourceAsUsedEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xf1                  	// #241
  30:	bl	0 <__assert_fail>
  34:	eor	x1, x1, x2
  38:	str	x1, [x0, #24]
  3c:	ret

Disassembly of section .text._ZN4llvm3mca13ResourceState18releaseSubResourceEm:

0000000000000000 <_ZN4llvm3mca13ResourceState18releaseSubResourceEm>:
   0:	ldr	x2, [x0, #24]
   4:	tst	x1, x2
   8:	b.eq	34 <_ZN4llvm3mca13ResourceState18releaseSubResourceEm+0x34>  // b.none
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm3mca13ResourceState18releaseSubResourceEm>
  14:	adrp	x1, 0 <_ZN4llvm3mca13ResourceState18releaseSubResourceEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm3mca13ResourceState18releaseSubResourceEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xf6                  	// #246
  30:	bl	0 <__assert_fail>
  34:	eor	x1, x1, x2
  38:	str	x1, [x0, #24]
  3c:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD2Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	10c <_ZN4llvm3mca16ResourceStrategyD1Ev>

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x20                  	// #32
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonImvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonImvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonImvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonImvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonImvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonImvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #3
  3c:	ret

Disassembly of section .text._ZN4llvm12DenseMapInfoISt4pairImmEE7isEqualERKS2_S5_:

0000000000000000 <_ZN4llvm12DenseMapInfoISt4pairImmEE7isEqualERKS2_S5_>:
   0:	ldr	x3, [x0]
   4:	ldr	x2, [x1]
   8:	cmp	x3, x2
   c:	b.ne	24 <_ZN4llvm12DenseMapInfoISt4pairImmEE7isEqualERKS2_S5_+0x24>  // b.any
  10:	ldr	x2, [x0, #8]
  14:	ldr	x0, [x1, #8]
  18:	cmp	x2, x0
  1c:	cset	w0, eq  // eq = none
  20:	ret
  24:	mov	w0, #0x0                   	// #0
  28:	b	20 <_ZN4llvm12DenseMapInfoISt4pairImmEE7isEqualERKS2_S5_+0x20>

Disassembly of section .text._ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	x21, [x0, #24]
  18:	ldr	x0, [x0, #16]
  1c:	str	x23, [sp, #48]
  20:	cmp	x0, x21
  24:	b.ls	48 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x48>  // b.plast
  28:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  2c:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  30:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0x4e0                 	// #1248
  44:	bl	0 <__assert_fail>
  48:	mov	x0, #0xffffffffffffffff    	// #-1
  4c:	add	x22, sp, #0x40
  50:	add	x23, sp, #0x50
  54:	stp	x0, x0, [sp, #64]
  58:	mov	x0, #0xfffffffffffffffe    	// #-2
  5c:	stp	x0, x0, [sp, #80]
  60:	ldr	x20, [x19, #16]
  64:	cmp	x21, x20
  68:	b.eq	a0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0xa0>  // b.none
  6c:	mov	x1, x22
  70:	mov	x0, x20
  74:	bl	0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  78:	tst	w0, #0xff
  7c:	b.ne	94 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x94>  // b.any
  80:	mov	x1, x23
  84:	mov	x0, x20
  88:	bl	0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv>
  8c:	tst	w0, #0xff
  90:	b.eq	a0 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0xa0>  // b.none
  94:	add	x20, x20, #0x18
  98:	str	x20, [x19, #16]
  9c:	b	60 <_ZN4llvm16DenseMapIteratorISt4pairImmEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EE23AdvancePastEmptyBucketsEv+0x60>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldr	x23, [sp, #48]
  ac:	ldp	x29, x30, [sp], #96
  b0:	ret

Disassembly of section .text._ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv:

0000000000000000 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbz	w1, #0, 30 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv>
  10:	adrp	x1, 0 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE11getLargeRepEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x45b                 	// #1115
  2c:	bl	0 <__assert_fail>
  30:	add	x0, x0, #0x10
  34:	ret

Disassembly of section .text._ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13getNumBucketsEv:

0000000000000000 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13getNumBucketsEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbnz	w1, #0, 20 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13getNumBucketsEv+0x20>
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	bl	0 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13getNumBucketsEv>
  14:	ldr	w0, [x0, #8]
  18:	ldp	x29, x30, [sp], #16
  1c:	ret
  20:	mov	w0, #0x4                   	// #4
  24:	ret

Disassembly of section .text._ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE10getBucketsEv:

0000000000000000 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE10getBucketsEv>:
   0:	ldrb	w2, [x0, #8]
   4:	tbz	w2, #0, 10 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE10getBucketsEv+0x10>
   8:	add	x0, x0, #0x10
   c:	ret
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE10getBucketsEv>
  1c:	ldp	x29, x30, [sp], #16
  20:	ldr	x0, [x0]
  24:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E13getBucketsEndEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E13getBucketsEndEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E13getBucketsEndEv>
  14:	mov	x19, x0
  18:	mov	x0, x20
  1c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E13getBucketsEndEv>
  20:	mov	w1, #0x18                  	// #24
  24:	umaddl	x0, w0, w1, x19
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x8
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E3endEv>
  18:	ldr	x1, [x20]
  1c:	stp	x20, x1, [x19]
  20:	stp	x0, x0, [x19, #16]
  24:	ldp	x19, x20, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  18:	str	x21, [sp, #32]
  1c:	ldr	x0, [x0]
  20:	add	x0, x0, #0x10
  24:	str	x0, [x20], #208
  28:	mov	x0, x20
  2c:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  30:	cbz	w0, 44 <_ZN4llvm3mca15ResourceManagerD1Ev+0x44>
  34:	mov	x0, x20
  38:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  3c:	mov	x0, x20
  40:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  44:	ldrb	w0, [x20, #8]
  48:	tbnz	w0, #0, 70 <_ZN4llvm3mca15ResourceManagerD1Ev+0x70>
  4c:	mov	x0, x20
  50:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  54:	ldr	w2, [x0, #8]
  58:	mov	w1, #0x18                  	// #24
  5c:	ldr	x0, [x0]
  60:	umull	x1, w2, w1
  64:	bl	0 <_ZdlPvm>
  68:	mov	x0, x20
  6c:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  70:	ldr	x0, [x19, #160]
  74:	add	x1, x19, #0xb0
  78:	cmp	x0, x1
  7c:	b.eq	84 <_ZN4llvm3mca15ResourceManagerD1Ev+0x84>  // b.none
  80:	bl	0 <free>
  84:	ldr	x0, [x19, #80]
  88:	add	x1, x19, #0x60
  8c:	cmp	x0, x1
  90:	b.eq	98 <_ZN4llvm3mca15ResourceManagerD1Ev+0x98>  // b.none
  94:	bl	0 <free>
  98:	ldr	x0, [x19, #56]
  9c:	cbz	x0, a4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa4>
  a0:	bl	0 <_ZdlPv>
  a4:	ldp	x20, x21, [x19, #32]
  a8:	cmp	x21, x20
  ac:	b.eq	c4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xc4>  // b.none
  b0:	ldr	x0, [x20]
  b4:	cbz	x0, bc <_ZN4llvm3mca15ResourceManagerD1Ev+0xbc>
  b8:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  bc:	add	x20, x20, #0x8
  c0:	b	a8 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa8>
  c4:	ldr	x0, [x19, #32]
  c8:	cbz	x0, d0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xd0>
  cc:	bl	0 <_ZdlPv>
  d0:	ldp	x20, x21, [x19, #8]
  d4:	cmp	x21, x20
  d8:	b.eq	f0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xf0>  // b.none
  dc:	ldr	x0, [x20]
  e0:	cbz	x0, e8 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe8>
  e4:	bl	0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  e8:	add	x20, x20, #0x8
  ec:	b	d4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xd4>
  f0:	ldr	x0, [x19, #8]
  f4:	cbz	x0, 108 <_ZN4llvm3mca15ResourceManagerD1Ev+0x108>
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldr	x21, [sp, #32]
 100:	ldp	x29, x30, [sp], #48
 104:	b	0 <_ZdlPv>
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldr	x21, [sp, #32]
 110:	ldp	x29, x30, [sp], #48
 114:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x168                 	// #360
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x2
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  2c:	str	x0, [sp, #96]
  30:	mov	x0, x19
  34:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  38:	cbnz	w0, 64 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x64>
  3c:	mov	w3, #0x0                   	// #0
  40:	str	xzr, [x21]
  44:	mov	w0, w3
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x21, x22, [sp, #32]
  50:	ldp	x23, x24, [sp, #48]
  54:	ldp	x25, x26, [sp, #64]
  58:	ldp	x27, x28, [sp, #80]
  5c:	ldp	x29, x30, [sp], #144
  60:	ret
  64:	mov	w25, w0
  68:	mov	x0, #0xffffffffffffffff    	// #-1
  6c:	add	x23, sp, #0x70
  70:	stp	x0, x0, [sp, #112]
  74:	mov	x0, #0xfffffffffffffffe    	// #-2
  78:	mov	x1, x23
  7c:	stp	x0, x0, [sp, #128]
  80:	mov	x0, x20
  84:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  88:	tst	w0, #0xff
  8c:	b.ne	a8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xa8>  // b.any
  90:	add	x24, sp, #0x80
  94:	mov	x0, x20
  98:	mov	x1, x24
  9c:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  a0:	tst	w0, #0xff
  a4:	b.eq	c8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xc8>  // b.none
  a8:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  ac:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b0:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
  b4:	add	x3, x3, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x0, x0, #0x0
  c0:	mov	w2, #0x250                 	// #592
  c4:	bl	0 <__assert_fail>
  c8:	ldp	x0, x1, [x20]
  cc:	mov	w19, #0x25                  	// #37
  d0:	sub	w25, w25, #0x1
  d4:	mov	w27, #0x1                   	// #1
  d8:	mov	x26, #0x0                   	// #0
  dc:	mov	w28, #0x18                  	// #24
  e0:	mul	w0, w19, w0
  e4:	mul	w19, w19, w1
  e8:	orr	x0, x19, x0, lsl #32
  ec:	sub	x0, x0, #0x1
  f0:	sub	x19, x0, x19, lsl #32
  f4:	eor	x19, x19, x19, lsr #22
  f8:	sub	x0, x19, #0x1
  fc:	sub	x19, x0, x19, lsl #13
 100:	eor	x19, x19, x19, lsr #8
 104:	add	x19, x19, x19, lsl #3
 108:	eor	x19, x19, x19, lsr #15
 10c:	sub	x0, x19, #0x1
 110:	sub	x19, x0, x19, lsl #27
 114:	eor	x19, x19, x19, lsr #31
 118:	and	w19, w25, w19
 11c:	ldr	x0, [sp, #96]
 120:	umaddl	x22, w19, w28, x0
 124:	mov	x0, x20
 128:	mov	x1, x22
 12c:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 130:	ands	w3, w0, #0xff
 134:	b.eq	140 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x140>  // b.none
 138:	str	x22, [x21]
 13c:	b	44 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x44>
 140:	mov	x1, x23
 144:	mov	x0, x22
 148:	str	w3, [sp, #108]
 14c:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 150:	tst	w0, #0xff
 154:	b.eq	16c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x16c>  // b.none
 158:	cmp	x26, #0x0
 15c:	ldr	w3, [sp, #108]
 160:	csel	x26, x26, x22, ne  // ne = any
 164:	str	x26, [x21]
 168:	b	44 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x44>
 16c:	mov	x1, x24
 170:	mov	x0, x22
 174:	bl	0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 178:	tst	w0, #0xff
 17c:	b.eq	188 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x188>  // b.none
 180:	cmp	x26, #0x0
 184:	csel	x26, x26, x22, ne  // ne = any
 188:	add	w19, w19, w27
 18c:	add	w27, w27, #0x1
 190:	and	w19, w25, w19
 194:	b	11c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x11c>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x2
  10:	add	x2, sp, #0x28
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>
  18:	ldr	x1, [sp, #40]
  1c:	str	x1, [x19]
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj>:
   0:	tbz	w1, #31, 2c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj>
   c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE13setNumEntriesEj>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x441                 	// #1089
  28:	bl	0 <__assert_fail>
  2c:	ldr	w2, [x0, #8]
  30:	bfi	w2, w1, #1, #31
  34:	str	w2, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	w1, #0x0                   	// #0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  18:	mov	x0, x20
  1c:	str	wzr, [x20, #12]
  20:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  24:	sub	w1, w0, #0x1
  28:	tst	w1, w0
  2c:	b.eq	50 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x50>  // b.none
  30:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  34:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  38:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0x15b                 	// #347
  4c:	bl	0 <__assert_fail>
  50:	mov	x0, x20
  54:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  58:	mov	x19, x0
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  64:	mov	x1, #0xffffffffffffffff    	// #-1
  68:	cmp	x19, x0
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x7c>  // b.none
  70:	stp	x1, x1, [x19]
  74:	add	x19, x19, #0x18
  78:	b	68 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x68>
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x2
  1c:	add	x22, sp, #0x50
  20:	stp	x23, x24, [sp, #48]
  24:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  28:	mov	x0, #0xffffffffffffffff    	// #-1
  2c:	add	x23, sp, #0x60
  30:	add	x24, sp, #0x48
  34:	stp	x0, x0, [sp, #80]
  38:	mov	x0, #0xfffffffffffffffe    	// #-2
  3c:	stp	x0, x0, [sp, #96]
  40:	cmp	x19, x21
  44:	b.eq	e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xe0>  // b.none
  48:	mov	x1, x22
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  54:	tst	w0, #0xff
  58:	b.ne	d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xd8>  // b.any
  5c:	mov	x1, x23
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  68:	tst	w0, #0xff
  6c:	b.ne	d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xd8>  // b.any
  70:	mov	x2, x24
  74:	mov	x1, x19
  78:	mov	x0, x20
  7c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  80:	tst	w0, #0xff
  84:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>  // b.none
  88:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  8c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  90:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x17a                 	// #378
  a4:	bl	0 <__assert_fail>
  a8:	ldr	x0, [sp, #72]
  ac:	ldr	x1, [x19]
  b0:	str	x1, [x0]
  b4:	ldr	x1, [x19, #8]
  b8:	str	x1, [x0, #8]
  bc:	ldr	w1, [x19, #16]
  c0:	str	w1, [x0, #16]
  c4:	mov	x0, x20
  c8:	ldr	w1, [x20, #8]
  cc:	lsr	w1, w1, #1
  d0:	add	w1, w1, #0x1
  d4:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  d8:	add	x19, x19, #0x18
  dc:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x40>
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x29, x30, [sp], #112
  f0:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	cmp	w1, #0x4
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	w19, w1
  18:	stp	x21, x22, [sp, #32]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	b.ls	40 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x40>  // b.plast
  2c:	sub	w0, w1, #0x1
  30:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  34:	cmp	w0, #0x40
  38:	mov	w19, #0x40                  	// #64
  3c:	csel	w19, w0, w19, cs  // cs = hs, nlast
  40:	ldrb	w23, [x20, #8]
  44:	tbz	w23, #0, 158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>
  48:	mov	x0, #0xffffffffffffffff    	// #-1
  4c:	add	x22, sp, #0x80
  50:	stp	x0, x0, [sp, #96]
  54:	mov	x0, #0xfffffffffffffffe    	// #-2
  58:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	mov	x23, x22
  60:	add	x25, sp, #0x60
  64:	add	x26, sp, #0x70
  68:	stp	x0, x0, [sp, #112]
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  74:	mov	x21, x0
  78:	add	x24, x0, #0x60
  7c:	movk	x27, #0xaaab
  80:	cmp	x21, x24
  84:	b.eq	100 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x100>  // b.none
  88:	mov	x1, x25
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  94:	tst	w0, #0xff
  98:	b.ne	f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>  // b.any
  9c:	mov	x1, x26
  a0:	mov	x0, x21
  a4:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  a8:	tst	w0, #0xff
  ac:	b.ne	f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>  // b.any
  b0:	sub	x0, x22, x23
  b4:	asr	x0, x0, #3
  b8:	mul	x0, x0, x27
  bc:	cmp	x0, #0x3
  c0:	b.ls	e4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe4>  // b.plast
  c4:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  c8:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  cc:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x401                 	// #1025
  e0:	bl	0 <__assert_fail>
  e4:	ldp	x0, x1, [x21]
  e8:	stp	x0, x1, [x22]
  ec:	ldr	w0, [x21, #16]
  f0:	add	x22, x22, #0x18
  f4:	stur	w0, [x22, #-8]
  f8:	add	x21, x21, #0x18
  fc:	b	80 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x80>
 100:	cmp	w19, #0x4
 104:	b.ls	12c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x12c>  // b.plast
 108:	ldrb	w0, [x20, #8]
 10c:	and	w0, w0, #0xfffffffe
 110:	strb	w0, [x20, #8]
 114:	mov	x0, x20
 118:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 11c:	mov	x21, x0
 120:	mov	w0, w19
 124:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 128:	stp	x0, x1, [x21]
 12c:	mov	x2, x22
 130:	mov	x1, x23
 134:	mov	x0, x20
 138:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x21, x22, [sp, #32]
 144:	ldp	x23, x24, [sp, #48]
 148:	ldp	x25, x26, [sp, #64]
 14c:	ldr	x27, [sp, #80]
 150:	ldp	x29, x30, [sp], #224
 154:	ret
 158:	mov	x0, x20
 15c:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 160:	mov	x21, x0
 164:	mov	x0, x20
 168:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 16c:	cmp	w19, #0x4
 170:	ldr	w22, [x21, #8]
 174:	ldr	x24, [x21]
 178:	b.hi	1ac <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1ac>  // b.pmore
 17c:	orr	w23, w23, #0x1
 180:	strb	w23, [x20, #8]
 184:	mov	w19, #0x18                  	// #24
 188:	mov	x1, x24
 18c:	mov	x0, x20
 190:	umull	x19, w22, w19
 194:	add	x2, x24, x19
 198:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 19c:	mov	x1, x19
 1a0:	mov	x0, x24
 1a4:	bl	0 <_ZdlPvm>
 1a8:	b	13c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x13c>
 1ac:	mov	w0, w19
 1b0:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 1b4:	stp	x0, x1, [x21]
 1b8:	b	184 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x184>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x1, [x0]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x2
  1c:	str	x3, [sp, #56]
  20:	ldr	w20, [x0, #8]
  24:	add	x1, x1, #0x1
  28:	str	x1, [x0]
  2c:	lsr	w20, w20, #1
  30:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  34:	add	w20, w20, #0x1
  38:	add	w2, w0, w0, lsl #1
  3c:	cmp	w2, w20, lsl #2
  40:	b.hi	90 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x90>  // b.pmore
  44:	lsl	w1, w0, #1
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  50:	add	x2, sp, #0x38
  54:	mov	x1, x21
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  68:	ldr	x0, [sp, #56]
  6c:	cbnz	x0, c4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xc4>
  70:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  74:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  78:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  7c:	add	x3, x3, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x0, x0, #0x0
  88:	mov	w2, #0x22f                 	// #559
  8c:	bl	0 <__assert_fail>
  90:	ldr	w1, [x19, #12]
  94:	add	w20, w20, w1
  98:	sub	w20, w0, w20
  9c:	cmp	w20, w0, lsr #3
  a0:	b.hi	68 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x68>  // b.pmore
  a4:	mov	w1, w0
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  b0:	add	x2, sp, #0x38
  b4:	mov	x1, x21
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c0:	b	68 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x68>
  c4:	ldr	w1, [x19, #8]
  c8:	mov	x0, x19
  cc:	lsr	w1, w1, #1
  d0:	add	w1, w1, #0x1
  d4:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d8:	ldr	x20, [sp, #56]
  dc:	mov	x0, #0xffffffffffffffff    	// #-1
  e0:	add	x1, sp, #0x40
  e4:	stp	x0, x0, [sp, #64]
  e8:	mov	x0, x20
  ec:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  f0:	tst	w0, #0xff
  f4:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x104>  // b.any
  f8:	ldr	w0, [x19, #12]
  fc:	sub	w0, w0, #0x1
 100:	str	w0, [x19, #12]
 104:	mov	x0, x20
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldr	x21, [sp, #32]
 110:	ldp	x29, x30, [sp], #80
 114:	ret

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
   0:	ldr	x9, [x1, #8]
   4:	mov	x3, x0
   8:	ldr	w0, [x0, #16]
   c:	ldr	x2, [x9]
  10:	ldr	w4, [x3, #20]
  14:	ldr	w2, [x2, #316]
  18:	cmp	w2, w0
  1c:	csel	w2, w2, w0, ls  // ls = plast
  20:	cmp	w2, #0x0
  24:	csinc	w2, w2, wzr, ne  // ne = any
  28:	cmp	w4, w2
  2c:	b.cs	58 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0x58>  // b.hs, b.nlast
  30:	stp	x29, x30, [sp, #-16]!
  34:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  38:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  3c:	mov	x29, sp
  40:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x2c                  	// #44
  54:	bl	0 <__assert_fail>
  58:	ldr	w0, [x3, #8]
  5c:	mov	x7, x3
  60:	mov	w5, #0x18                  	// #24
  64:	ldr	w1, [x1]
  68:	ldr	x6, [x7, #32]!
  6c:	umull	x5, w0, w5
  70:	add	x8, x6, x5
  74:	str	w1, [x6, x5]
  78:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  7c:	ldr	x1, [x7, #8]
  80:	movk	x5, #0xaaab
  84:	str	x9, [x8, #8]
  88:	sub	x1, x1, x6
  8c:	str	w2, [x8, #16]
  90:	strb	wzr, [x8, #20]
  94:	add	w8, w0, w2
  98:	asr	x1, x1, #3
  9c:	sub	w2, w4, w2
  a0:	str	w2, [x3, #20]
  a4:	mul	x1, x1, x5
  a8:	udiv	x5, x8, x1
  ac:	msub	x1, x5, x1, x8
  b0:	str	w1, [x3, #8]
  b4:	ret

00000000000000b8 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
  b8:	ldr	w1, [x0, #12]
  bc:	mov	w2, #0x18                  	// #24
  c0:	ldr	x0, [x0, #32]
  c4:	umaddl	x0, w1, w2, x0
  c8:	ldr	x1, [x0, #8]
  cc:	cbnz	x1, f8 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x40>
  d0:	stp	x29, x30, [sp, #-16]!
  d4:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  d8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  dc:	mov	x29, sp
  e0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  e4:	add	x3, x3, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	w2, #0x3b                  	// #59
  f4:	bl	0 <__assert_fail>
  f8:	ret

00000000000000fc <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
  fc:	stp	x29, x30, [sp, #-32]!
 100:	mov	x29, sp
 104:	str	x19, [sp, #16]
 108:	mov	x19, x0
 10c:	bl	b8 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 110:	ldr	w2, [x0, #16]
 114:	ldr	w0, [x19, #12]
 118:	cmp	w2, #0x0
 11c:	csinc	w2, w2, wzr, ne  // ne = any
 120:	add	w2, w2, w0
 124:	ldp	x0, x1, [x19, #32]
 128:	ldr	x19, [sp, #16]
 12c:	ldp	x29, x30, [sp], #32
 130:	sub	x1, x1, x0
 134:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 138:	movk	x0, #0xaaab
 13c:	asr	x1, x1, #3
 140:	mul	x1, x1, x0
 144:	udiv	x0, x2, x1
 148:	msub	w0, w0, w1, w2
 14c:	ret

0000000000000150 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 150:	stp	x29, x30, [sp, #-32]!
 154:	mov	x29, sp
 158:	str	x19, [sp, #16]
 15c:	mov	x19, x0
 160:	bl	fc <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>
 164:	mov	w2, #0x18                  	// #24
 168:	ldr	x1, [x19, #32]
 16c:	ldr	x19, [sp, #16]
 170:	umaddl	x0, w0, w2, x1
 174:	ldp	x29, x30, [sp], #32
 178:	ret

000000000000017c <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 17c:	ldr	w1, [x0, #12]
 180:	mov	w3, #0x18                  	// #24
 184:	ldr	x5, [x0, #32]
 188:	umull	x3, w1, w3
 18c:	add	x2, x5, x3
 190:	ldr	x4, [x2, #8]
 194:	ldr	w6, [x4, #784]
 198:	cmp	w6, #0x5
 19c:	b.eq	1c8 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x4c>  // b.none
 1a0:	stp	x29, x30, [sp, #-16]!
 1a4:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 1a8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 1ac:	mov	x29, sp
 1b0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 1b4:	add	x3, x3, #0x0
 1b8:	add	x1, x1, #0x0
 1bc:	add	x0, x0, #0x0
 1c0:	mov	w2, #0x21c                 	// #540
 1c4:	bl	0 <__assert_fail>
 1c8:	mov	w6, #0x6                   	// #6
 1cc:	str	w6, [x4, #784]
 1d0:	ldr	w6, [x2, #16]
 1d4:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1d8:	movk	x7, #0xaaab
 1dc:	cmp	w6, #0x0
 1e0:	csinc	w4, w6, wzr, ne  // ne = any
 1e4:	add	w4, w4, w1
 1e8:	ldr	x1, [x0, #40]
 1ec:	sub	x1, x1, x5
 1f0:	asr	x1, x1, #3
 1f4:	mul	x1, x1, x7
 1f8:	udiv	x7, x4, x1
 1fc:	msub	x1, x7, x1, x4
 200:	str	w1, [x0, #12]
 204:	ldr	w1, [x0, #20]
 208:	add	w1, w1, w6
 20c:	str	w1, [x0, #20]
 210:	str	wzr, [x5, x3]
 214:	str	xzr, [x2, #8]
 218:	str	wzr, [x2, #16]
 21c:	strb	wzr, [x2, #20]
 220:	ret

0000000000000224 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 224:	stp	x29, x30, [sp, #-16]!
 228:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 22c:	movk	x3, #0xaaab
 230:	mov	x29, sp
 234:	ldp	x2, x0, [x0, #32]
 238:	sub	x0, x0, x2
 23c:	asr	x0, x0, #3
 240:	mul	x0, x0, x3
 244:	cmp	x0, w1, uxtw
 248:	b.hi	26c <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x48>  // b.pmore
 24c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 250:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 254:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 258:	add	x3, x3, #0x0
 25c:	add	x1, x1, #0x0
 260:	add	x0, x0, #0x0
 264:	mov	w2, #0x56                  	// #86
 268:	bl	0 <__assert_fail>
 26c:	mov	w0, #0x18                  	// #24
 270:	umaddl	x1, w1, w0, x2
 274:	ldr	x0, [x1, #8]
 278:	cbnz	x0, 29c <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x78>
 27c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 280:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 284:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 288:	add	x3, x3, #0x0
 28c:	add	x1, x1, #0x0
 290:	add	x0, x0, #0x0
 294:	mov	w2, #0x57                  	// #87
 298:	b	268 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x44>
 29c:	ldrb	w0, [x1, #20]
 2a0:	cbz	w0, 2c4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0xa0>
 2a4:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2a8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2ac:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2b0:	add	x3, x3, #0x0
 2b4:	add	x1, x1, #0x0
 2b8:	add	x0, x0, #0x0
 2bc:	mov	w2, #0x58                  	// #88
 2c0:	b	268 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x44>
 2c4:	mov	w0, #0x1                   	// #1
 2c8:	strb	w0, [x1, #20]
 2cc:	ldp	x29, x30, [sp], #16
 2d0:	ret

00000000000002d4 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 2d4:	stp	x29, x30, [sp, #-32]!
 2d8:	mov	x29, sp
 2dc:	str	x19, [sp, #16]
 2e0:	mov	x19, x0
 2e4:	bl	0 <_ZN4llvm4dbgsEv>
 2e8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2ec:	add	x1, x1, #0x0
 2f0:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2f4:	ldr	w1, [x19, #16]
 2f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 2fc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 300:	add	x1, x1, #0x0
 304:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 308:	ldr	w1, [x19, #20]
 30c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 310:	ldr	x19, [sp, #16]
 314:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 318:	ldp	x29, x30, [sp], #32
 31c:	add	x1, x1, #0x0
 320:	b	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>

0000000000000324 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
 324:	mov	x2, x0
 328:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 32c:	ldr	x0, [x0]
 330:	str	wzr, [x2, #24]
 334:	add	x0, x0, #0x10
 338:	stp	x0, xzr, [x2]
 33c:	ldr	w0, [x1, #4]
 340:	stp	w0, w0, [x2, #16]
 344:	add	x0, x2, #0x20
 348:	ldr	x1, [x1, #64]
 34c:	str	xzr, [x2, #32]
 350:	stp	xzr, xzr, [x0, #8]
 354:	cbz	x1, 36c <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x48>
 358:	ldr	w3, [x1]
 35c:	cbz	w3, 364 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x40>
 360:	str	w3, [x2, #20]
 364:	ldr	w1, [x1, #4]
 368:	str	w1, [x2, #24]
 36c:	ldr	w3, [x2, #20]
 370:	str	w3, [x2, #16]
 374:	cbnz	w3, 3a0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x7c>
 378:	stp	x29, x30, [sp, #-16]!
 37c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 380:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 384:	mov	x29, sp
 388:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 38c:	add	x3, x3, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x24                  	// #36
 39c:	bl	0 <__assert_fail>
 3a0:	lsl	w1, w3, #1
 3a4:	cmp	wzr, w3, lsl #1
 3a8:	b.eq	3b0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x8c>  // b.none
 3ac:	b	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 3b0:	ret

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitD1Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x0, [x19, #32]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD1Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x38                  	// #56
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	cbz	x1, 150 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x150>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x23, x1
  14:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  18:	ldp	x2, x1, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x0
  24:	ldr	x0, [x0, #16]
  28:	stp	x21, x22, [sp, #32]
  2c:	movk	x24, #0x555, lsl #48
  30:	sub	x21, x1, x2
  34:	sub	x0, x0, x1
  38:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	asr	x20, x21, #3
  40:	asr	x0, x0, #3
  44:	movk	x2, #0xaaab
  48:	mul	x20, x20, x2
  4c:	mul	x0, x0, x2
  50:	sub	x3, x24, x20
  54:	cmp	x0, x23
  58:	b.cc	a0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xa0>  // b.lo, b.ul, b.last
  5c:	mov	x0, x1
  60:	mov	x2, x23
  64:	str	wzr, [x0]
  68:	subs	x2, x2, #0x1
  6c:	str	xzr, [x0, #8]
  70:	add	x0, x0, #0x18
  74:	stur	wzr, [x0, #-8]
  78:	sturb	wzr, [x0, #-4]
  7c:	b.ne	64 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x64>  // b.any
  80:	mov	x20, #0x18                  	// #24
  84:	madd	x20, x23, x20, x1
  88:	str	x20, [x19, #8]
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x23, x24, [sp, #48]
  98:	ldp	x29, x30, [sp], #64
  9c:	ret
  a0:	cmp	x3, x23
  a4:	b.cs	b4 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xb4>  // b.hs, b.nlast
  a8:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
  ac:	add	x0, x0, #0x0
  b0:	bl	0 <_ZSt20__throw_length_errorPKc>
  b4:	cmp	x20, x23
  b8:	csel	x22, x20, x23, cs  // cs = hs, nlast
  bc:	add	x22, x20, x22
  c0:	cmp	x22, x24
  c4:	csel	x22, x22, x24, ls  // ls = plast
  c8:	mov	x24, #0x18                  	// #24
  cc:	mul	x24, x22, x24
  d0:	mov	x0, x24
  d4:	bl	0 <_Znwm>
  d8:	mov	x1, x23
  dc:	mov	x22, x0
  e0:	add	x2, x0, x21
  e4:	str	wzr, [x2]
  e8:	subs	x1, x1, #0x1
  ec:	str	xzr, [x2, #8]
  f0:	add	x2, x2, #0x18
  f4:	stur	wzr, [x2, #-8]
  f8:	sturb	wzr, [x2, #-4]
  fc:	b.ne	e4 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xe4>  // b.any
 100:	ldp	x0, x6, [x19]
 104:	add	x4, x0, x1
 108:	cmp	x6, x4
 10c:	b.eq	12c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x12c>  // b.none
 110:	add	x5, x22, x1
 114:	add	x1, x1, #0x18
 118:	ldp	x2, x3, [x4]
 11c:	stp	x2, x3, [x5]
 120:	ldr	x2, [x4, #16]
 124:	str	x2, [x5, #16]
 128:	b	104 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x104>
 12c:	cbz	x0, 134 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x134>
 130:	bl	0 <_ZdlPv>
 134:	add	x20, x20, x23
 138:	mov	x1, #0x18                  	// #24
 13c:	madd	x20, x20, x1, x22
 140:	stp	x22, x20, [x19]
 144:	add	x22, x22, x24
 148:	str	x22, [x19, #16]
 14c:	b	8c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x8c>
 150:	ret

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>:
   0:	mov	x1, x0
   4:	ldrb	w0, [x0, #324]
   8:	cbnz	w0, 10 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0+0x10>
   c:	ldrb	w0, [x1, #325]
  10:	ret

0000000000000014 <_ZNKSt14default_deleteIN4llvm3mca17SchedulerStrategyEEclEPS2_.isra.0>:
  14:	cbz	x0, 28 <_ZNKSt14default_deleteIN4llvm3mca17SchedulerStrategyEEclEPS2_.isra.0+0x14>
  18:	ldr	x1, [x0]
  1c:	ldr	x1, [x1, #8]
  20:	mov	x16, x1
  24:	br	x16
  28:	ret

000000000000002c <_ZN9__gnu_cxx13new_allocatorIN4llvm3mca7InstRefEE8allocateEmPKv.isra.0>:
  2c:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  30:	cmp	x0, x1
  34:	b.ls	44 <_ZN9__gnu_cxx13new_allocatorIN4llvm3mca7InstRefEE8allocateEmPKv.isra.0+0x18>  // b.plast
  38:	stp	x29, x30, [sp, #-16]!
  3c:	mov	x29, sp
  40:	bl	0 <_ZSt17__throw_bad_allocv>
  44:	lsl	x0, x0, #4
  48:	b	0 <_Znwm>

000000000000004c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
  4c:	stp	x29, x30, [sp, #-32]!
  50:	mov	x29, sp
  54:	ldr	x2, [x1]
  58:	str	x19, [sp, #16]
  5c:	mov	x19, x0
  60:	cbz	x2, 80 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x34>
  64:	str	xzr, [x1]
  68:	ldr	x0, [x19, #16]
  6c:	str	x2, [x19, #16]
  70:	cbz	x0, a0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x54>
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	14 <_ZNKSt14default_deleteIN4llvm3mca17SchedulerStrategyEEclEPS2_.isra.0>
  80:	mov	x0, #0x8                   	// #8
  84:	bl	0 <_Znwm>
  88:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
  8c:	mov	x2, x0
  90:	ldr	x1, [x1]
  94:	add	x1, x1, #0x10
  98:	str	x1, [x0]
  9c:	b	68 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x1c>
  a0:	ldr	x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret

00000000000000ac <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
  ac:	ret

00000000000000b0 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>:
  b0:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
  b4:	ldr	x1, [x1]
  b8:	add	x1, x1, #0x10
  bc:	str	x1, [x0]
  c0:	b	ac <_ZN4llvm3mca17SchedulerStrategyD1Ev>

00000000000000c4 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
  c4:	stp	x29, x30, [sp, #-32]!
  c8:	mov	x29, sp
  cc:	str	x19, [sp, #16]
  d0:	mov	x19, x0
  d4:	bl	b0 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>
  d8:	mov	x0, x19
  dc:	mov	x1, #0x8                   	// #8
  e0:	ldr	x19, [sp, #16]
  e4:	ldp	x29, x30, [sp], #32
  e8:	b	0 <_ZdlPvm>

00000000000000ec <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
  ec:	stp	x29, x30, [sp, #-32]!
  f0:	mov	x29, sp
  f4:	str	x19, [sp, #16]
  f8:	mov	x19, x0
  fc:	bl	ac <_ZN4llvm3mca17SchedulerStrategyD1Ev>
 100:	mov	x0, x19
 104:	mov	x1, #0x8                   	// #8
 108:	ldr	x19, [sp, #16]
 10c:	ldp	x29, x30, [sp], #32
 110:	b	0 <_ZdlPvm>

0000000000000114 <_ZNK4llvm3mca9Scheduler4dumpEv>:
 114:	stp	x29, x30, [sp, #-32]!
 118:	mov	x29, sp
 11c:	stp	x19, x20, [sp, #16]
 120:	mov	x19, x0
 124:	bl	0 <_ZN4llvm4dbgsEv>
 128:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 12c:	add	x1, x1, #0x0
 130:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 134:	ldp	x2, x1, [x19, #32]
 138:	sub	x1, x1, x2
 13c:	asr	x1, x1, #4
 140:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 144:	mov	w1, #0xa                   	// #10
 148:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 14c:	bl	0 <_ZN4llvm4dbgsEv>
 150:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 154:	add	x1, x1, #0x0
 158:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 15c:	ldp	x2, x1, [x19, #80]
 160:	sub	x1, x1, x2
 164:	asr	x1, x1, #4
 168:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 16c:	mov	w1, #0xa                   	// #10
 170:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 174:	bl	0 <_ZN4llvm4dbgsEv>
 178:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 17c:	add	x1, x1, #0x0
 180:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 184:	ldp	x2, x1, [x19, #104]
 188:	sub	x1, x1, x2
 18c:	asr	x1, x1, #4
 190:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 194:	mov	w1, #0xa                   	// #10
 198:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 19c:	ldr	x0, [x19, #24]
 1a0:	ldp	x19, x20, [x0, #8]
 1a4:	cmp	x19, x20
 1a8:	b.eq	1b8 <_ZNK4llvm3mca9Scheduler4dumpEv+0xa4>  // b.none
 1ac:	ldr	x0, [x19], #8
 1b0:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
 1b4:	b	1a4 <_ZNK4llvm3mca9Scheduler4dumpEv+0x90>
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #32
 1c0:	ret

00000000000001c4 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
 1c4:	stp	x29, x30, [sp, #-32]!
 1c8:	mov	x29, sp
 1cc:	stp	x19, x20, [sp, #16]
 1d0:	mov	x19, x0
 1d4:	mov	x20, x1
 1d8:	ldr	x0, [x1, #8]
 1dc:	ldr	x1, [x0, #800]
 1e0:	ldr	x0, [x19, #24]
 1e4:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
 1e8:	cmp	w0, #0x0
 1ec:	cset	w1, ne  // ne = any
 1f0:	strb	w1, [x19, #140]
 1f4:	cmp	w0, #0x1
 1f8:	b.eq	244 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x80>  // b.none
 1fc:	cmp	w0, #0x2
 200:	b.eq	254 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x90>  // b.none
 204:	ldr	x0, [x19, #8]
 208:	ldr	x1, [x0]
 20c:	ldr	x2, [x1, #16]
 210:	mov	x1, x20
 214:	blr	x2
 218:	cmp	w0, #0x0
 21c:	cset	w1, ne  // ne = any
 220:	strb	w1, [x19, #140]
 224:	cmp	w0, #0x2
 228:	b.ls	248 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>  // b.plast
 22c:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 230:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 234:	add	x1, x1, #0x0
 238:	add	x0, x0, #0x0
 23c:	mov	w2, #0x43                  	// #67
 240:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 244:	mov	w0, #0x3                   	// #3
 248:	ldp	x19, x20, [sp, #16]
 24c:	ldp	x29, x30, [sp], #32
 250:	ret
 254:	mov	w0, #0x4                   	// #4
 258:	b	248 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>

000000000000025c <_ZN4llvm3mca9Scheduler6selectEv>:
 25c:	stp	x29, x30, [sp, #-80]!
 260:	mov	x29, sp
 264:	stp	x23, x24, [sp, #48]
 268:	add	x24, x0, #0x50
 26c:	stp	x19, x20, [sp, #16]
 270:	mov	x19, x0
 274:	ldr	x20, [x24, #8]
 278:	stp	x21, x22, [sp, #32]
 27c:	mov	x21, #0x0                   	// #0
 280:	ldr	x0, [x0, #80]
 284:	str	x25, [sp, #64]
 288:	sub	x20, x20, x0
 28c:	asr	x20, x20, #4
 290:	mov	w22, w20
 294:	ldr	x4, [x24, #8]
 298:	mov	w23, w21
 29c:	ldr	x3, [x19, #80]
 2a0:	mov	w2, w20
 2a4:	cmp	w22, w21
 2a8:	sub	x0, x4, x3
 2ac:	asr	x5, x0, #4
 2b0:	b.eq	31c <_ZN4llvm3mca9Scheduler6selectEv+0xc0>  // b.none
 2b4:	add	x25, x3, x21, lsl #4
 2b8:	cmp	x2, x5
 2bc:	b.ne	2ec <_ZN4llvm3mca9Scheduler6selectEv+0x90>  // b.any
 2c0:	ldr	x25, [x25, #8]
 2c4:	ldr	x0, [x19, #24]
 2c8:	ldr	x1, [x25]
 2cc:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
 2d0:	cbnz	x0, 314 <_ZN4llvm3mca9Scheduler6selectEv+0xb8>
 2d4:	ldr	x1, [x19, #128]
 2d8:	cmp	x0, #0x0
 2dc:	csel	w20, w20, w23, ne  // ne = any
 2e0:	orr	x1, x1, x0
 2e4:	str	x1, [x19, #128]
 2e8:	b	30c <_ZN4llvm3mca9Scheduler6selectEv+0xb0>
 2ec:	ldr	x0, [x19, #16]
 2f0:	add	x2, x3, x2, lsl #4
 2f4:	ldr	x1, [x0]
 2f8:	ldr	x4, [x1, #16]
 2fc:	mov	x1, x25
 300:	blr	x4
 304:	tst	w0, #0xff
 308:	b.ne	2c0 <_ZN4llvm3mca9Scheduler6selectEv+0x64>  // b.any
 30c:	add	x21, x21, #0x1
 310:	b	294 <_ZN4llvm3mca9Scheduler6selectEv+0x38>
 314:	str	x0, [x25, #832]
 318:	b	2d4 <_ZN4llvm3mca9Scheduler6selectEv+0x78>
 31c:	cmp	x2, x5
 320:	b.ne	344 <_ZN4llvm3mca9Scheduler6selectEv+0xe8>  // b.any
 324:	mov	x0, #0x0                   	// #0
 328:	mov	x1, #0x0                   	// #0
 32c:	ldp	x19, x20, [sp, #16]
 330:	ldp	x21, x22, [sp, #32]
 334:	ldp	x23, x24, [sp, #48]
 338:	ldr	x25, [sp, #64]
 33c:	ldp	x29, x30, [sp], #80
 340:	ret
 344:	sub	x0, x0, #0x10
 348:	lsl	x7, x2, #4
 34c:	add	x6, x3, x0
 350:	add	x2, x3, x2, lsl #4
 354:	sub	x4, x4, #0x10
 358:	ldr	w8, [x3, x0]
 35c:	ldr	w5, [x3, x7]
 360:	ldr	x1, [x2, #8]
 364:	str	w8, [x3, x7]
 368:	ldr	x7, [x6, #8]
 36c:	str	x7, [x2, #8]
 370:	str	w5, [x3, x0]
 374:	mov	x0, #0x0                   	// #0
 378:	str	x1, [x6, #8]
 37c:	bfxil	x0, x5, #0, #32
 380:	str	x4, [x19, #88]
 384:	b	32c <_ZN4llvm3mca9Scheduler6selectEv+0xd0>

0000000000000388 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
 388:	ldr	x0, [x1, #8]
 38c:	ldr	x0, [x0]
 390:	ldr	w1, [x0, #312]
 394:	cbnz	w1, 3a0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x18>
 398:	ldr	w1, [x0, #184]
 39c:	cbz	w1, 3a8 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
 3a0:	ldrb	w0, [x0, #329]
 3a4:	ret
 3a8:	mov	w0, #0x1                   	// #1
 3ac:	b	3a4 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x1c>

00000000000003b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>:
 3b0:	stp	x29, x30, [sp, #-32]!
 3b4:	mov	x29, sp
 3b8:	stp	x19, x20, [sp, #16]
 3bc:	mov	x20, x1
 3c0:	mov	x19, x0
 3c4:	ldp	w2, w1, [x0, #8]
 3c8:	cmp	w2, w1
 3cc:	b.cc	3d8 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0+0x28>  // b.lo, b.ul, b.last
 3d0:	mov	x1, #0x0                   	// #0
 3d4:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 3d8:	ldr	x1, [x19]
 3dc:	ldr	w0, [x19, #8]
 3e0:	ldp	x2, x3, [x20]
 3e4:	add	x0, x1, x0, lsl #4
 3e8:	stp	x2, x3, [x0]
 3ec:	mov	x0, x19
 3f0:	ldr	w1, [x19, #8]
 3f4:	add	x1, x1, #0x1
 3f8:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 3fc:	ldr	w0, [x19, #8]
 400:	cbnz	w0, 424 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0+0x74>
 404:	adrp	x3, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 408:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 40c:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 410:	add	x3, x3, #0x0
 414:	add	x1, x1, #0x0
 418:	add	x0, x0, #0x0
 41c:	mov	w2, #0xa7                  	// #167
 420:	bl	0 <__assert_fail>
 424:	mov	x1, #0xfffffffffffffff0    	// #-16
 428:	add	x0, x1, w0, uxtw #4
 42c:	ldr	x1, [x19]
 430:	ldp	x19, x20, [sp, #16]
 434:	add	x0, x1, x0
 438:	ldp	x29, x30, [sp], #32
 43c:	ret

0000000000000440 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
 440:	stp	x29, x30, [sp, #-64]!
 444:	mov	x29, sp
 448:	stp	x19, x20, [sp, #16]
 44c:	mov	x20, x0
 450:	stp	x21, x22, [sp, #32]
 454:	mov	x22, x1
 458:	ldr	w21, [x0, #136]
 45c:	ldp	x19, x0, [x0, #56]
 460:	stp	x23, x24, [sp, #48]
 464:	mov	x23, x2
 468:	sub	x21, x0, x21, lsl #4
 46c:	cmp	x19, x21
 470:	b.eq	4d8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x98>  // b.none
 474:	ldr	x24, [x19, #8]
 478:	ldr	x0, [x20, #24]
 47c:	ldr	x1, [x24]
 480:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
 484:	cbnz	x0, 4d0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x90>
 488:	ldr	x0, [x24]
 48c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 490:	tst	w0, #0xff
 494:	b.eq	4b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x78>  // b.none
 498:	ldr	x0, [x20, #8]
 49c:	mov	x1, x19
 4a0:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 4a4:	tst	w0, #0xff
 4a8:	b.eq	4b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x78>  // b.none
 4ac:	mov	x1, x19
 4b0:	mov	x0, x23
 4b4:	bl	3b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>
 4b8:	ldr	w0, [x24, #784]
 4bc:	cmp	w0, #0x2
 4c0:	b.ne	4d0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x90>  // b.any
 4c4:	mov	x1, x19
 4c8:	mov	x0, x22
 4cc:	bl	3b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>
 4d0:	add	x19, x19, #0x10
 4d4:	b	46c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x2c>
 4d8:	ldp	x19, x20, [sp, #16]
 4dc:	ldp	x21, x22, [sp, #32]
 4e0:	ldp	x23, x24, [sp, #48]
 4e4:	ldp	x29, x30, [sp], #64
 4e8:	ret

00000000000004ec <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
 4ec:	stp	x29, x30, [sp, #-32]!
 4f0:	mov	x29, sp
 4f4:	str	x19, [sp, #16]
 4f8:	mov	x19, x0
 4fc:	ldr	w4, [x1, #8]
 500:	mov	x0, x1
 504:	ldr	x1, [x1]
 508:	ldp	x2, x3, [x19, #80]
 50c:	add	x1, x1, x4, lsl #4
 510:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 514:	ldr	x0, [x19, #128]
 518:	ldr	x19, [sp, #16]
 51c:	ldp	x29, x30, [sp], #32
 520:	ret

0000000000000524 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
 524:	stp	x29, x30, [sp, #-48]!
 528:	mov	x29, sp
 52c:	stp	x19, x20, [sp, #16]
 530:	mov	x20, x0
 534:	mov	x19, x1
 538:	ldr	x0, [x0, #24]
 53c:	str	x21, [sp, #32]
 540:	ldr	x21, [x1, #8]
 544:	ldr	x1, [x21]
 548:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 54c:	ldr	w1, [x19]
 550:	mov	x0, x21
 554:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
 558:	mov	x0, x21
 55c:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
 560:	ldr	x0, [x21]
 564:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 568:	tst	w0, #0xff
 56c:	b.eq	5a4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x80>  // b.none
 570:	ldr	x0, [x20, #8]
 574:	ldr	x1, [x0]
 578:	ldr	x2, [x1, #48]
 57c:	mov	x1, x19
 580:	blr	x2
 584:	ldr	w1, [x21, #796]
 588:	ldr	x0, [x20, #8]
 58c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 590:	add	x1, x21, #0x334
 594:	ldr	x2, [x0, #72]
 598:	str	x2, [x1]
 59c:	ldr	w0, [x0, #80]
 5a0:	str	w0, [x21, #828]
 5a4:	ldr	w0, [x21, #784]
 5a8:	cmp	w0, #0x4
 5ac:	b.ne	5c8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xa4>  // b.any
 5b0:	mov	x1, x19
 5b4:	add	x0, x20, #0x68
 5b8:	ldp	x19, x20, [sp, #16]
 5bc:	ldr	x21, [sp, #32]
 5c0:	ldp	x29, x30, [sp], #48
 5c4:	b	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 5c8:	cmp	w0, #0x5
 5cc:	b.ne	5f4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xd0>  // b.any
 5d0:	ldr	x0, [x20, #8]
 5d4:	ldr	x21, [sp, #32]
 5d8:	ldr	x1, [x0]
 5dc:	ldr	x2, [x1, #32]
 5e0:	mov	x1, x19
 5e4:	ldp	x19, x20, [sp, #16]
 5e8:	mov	x16, x2
 5ec:	ldp	x29, x30, [sp], #48
 5f0:	br	x16
 5f4:	ldp	x19, x20, [sp, #16]
 5f8:	ldr	x21, [sp, #32]
 5fc:	ldp	x29, x30, [sp], #48
 600:	ret

0000000000000604 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 604:	stp	x29, x30, [sp, #-96]!
 608:	mov	x29, sp
 60c:	stp	x23, x24, [sp, #48]
 610:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 614:	adrp	x24, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 618:	ldr	x23, [x23]
 61c:	add	x24, x24, #0x0
 620:	stp	x19, x20, [sp, #16]
 624:	mov	x20, x0
 628:	stp	x21, x22, [sp, #32]
 62c:	mov	x22, x1
 630:	mov	w21, #0x0                   	// #0
 634:	stp	x25, x26, [sp, #64]
 638:	add	x26, x0, #0x50
 63c:	ldp	x19, x25, [x0, #56]
 640:	str	x27, [sp, #80]
 644:	cmp	x19, x25
 648:	b.eq	73c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x138>  // b.none
 64c:	ldr	x27, [x19, #8]
 650:	cbz	x27, 73c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x138>
 654:	ldr	w0, [x27, #784]
 658:	cmp	w0, #0x3
 65c:	b.eq	678 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.none
 660:	mov	x0, x27
 664:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
 668:	tst	w0, #0xff
 66c:	b.ne	678 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.any
 670:	add	x19, x19, #0x10
 674:	b	644 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 678:	ldr	x0, [x27]
 67c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 680:	tst	w0, #0xff
 684:	b.ne	718 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x114>  // b.any
 688:	ldrb	w0, [x23]
 68c:	cbz	w0, 6d0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xcc>
 690:	mov	x0, x24
 694:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 698:	tst	w0, #0xff
 69c:	b.eq	6d0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xcc>  // b.none
 6a0:	bl	0 <_ZN4llvm4dbgsEv>
 6a4:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6a8:	add	x1, x1, #0x0
 6ac:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6b0:	mov	x1, x0
 6b4:	mov	x27, x0
 6b8:	mov	x0, x19
 6bc:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6c0:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6c4:	mov	x0, x27
 6c8:	add	x1, x1, #0x0
 6cc:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6d0:	mov	x1, x19
 6d4:	mov	x0, x22
 6d8:	add	w21, w21, #0x1
 6dc:	bl	3b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>
 6e0:	mov	x1, x19
 6e4:	mov	x0, x26
 6e8:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 6ec:	ubfiz	x0, x21, #4, #32
 6f0:	ldr	w1, [x19]
 6f4:	sub	x0, x25, x0
 6f8:	ldr	w2, [x0]
 6fc:	str	xzr, [x19, #8]
 700:	str	w2, [x19]
 704:	ldr	x2, [x0, #8]
 708:	str	x2, [x19, #8]
 70c:	str	w1, [x0]
 710:	str	xzr, [x0, #8]
 714:	b	644 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 718:	ldr	x0, [x19, #8]
 71c:	ldr	w1, [x0, #796]
 720:	ldr	x0, [x20, #8]
 724:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 728:	ldr	w1, [x0, #8]
 72c:	ldr	w0, [x0]
 730:	cmp	w1, w0
 734:	b.eq	688 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x84>  // b.none
 738:	b	670 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>
 73c:	ldr	x2, [x20, #56]
 740:	add	x0, x20, #0x38
 744:	ldr	x1, [x0, #8]
 748:	sub	x1, x1, x2
 74c:	asr	x1, x1, #4
 750:	sub	x1, x1, w21, uxtw
 754:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 758:	cmp	w21, #0x0
 75c:	cset	w0, ne  // ne = any
 760:	ldp	x19, x20, [sp, #16]
 764:	ldp	x21, x22, [sp, #32]
 768:	ldp	x23, x24, [sp, #48]
 76c:	ldp	x25, x26, [sp, #64]
 770:	ldr	x27, [sp, #80]
 774:	ldp	x29, x30, [sp], #96
 778:	ret

000000000000077c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 77c:	stp	x29, x30, [sp, #-96]!
 780:	mov	x29, sp
 784:	stp	x23, x24, [sp, #48]
 788:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 78c:	adrp	x24, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 790:	ldr	x23, [x23]
 794:	add	x24, x24, #0x0
 798:	stp	x19, x20, [sp, #16]
 79c:	mov	x20, x0
 7a0:	stp	x21, x22, [sp, #32]
 7a4:	mov	x22, x1
 7a8:	mov	w21, #0x0                   	// #0
 7ac:	stp	x25, x26, [sp, #64]
 7b0:	add	x26, x0, #0x38
 7b4:	ldp	x19, x25, [x0, #32]
 7b8:	str	x27, [sp, #80]
 7bc:	cmp	x25, x19
 7c0:	b.eq	8b8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x13c>  // b.none
 7c4:	ldr	x27, [x19, #8]
 7c8:	cbz	x27, 8b8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x13c>
 7cc:	ldr	w0, [x27, #784]
 7d0:	cmp	w0, #0x1
 7d4:	b.ne	7f0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.any
 7d8:	mov	x0, x27
 7dc:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 7e0:	tst	w0, #0xff
 7e4:	b.ne	7f0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.any
 7e8:	add	x19, x19, #0x10
 7ec:	b	7bc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 7f0:	ldr	x0, [x27]
 7f4:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 7f8:	tst	w0, #0xff
 7fc:	b.ne	890 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x114>  // b.any
 800:	ldrb	w0, [x23]
 804:	cbz	w0, 848 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xcc>
 808:	mov	x0, x24
 80c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 810:	tst	w0, #0xff
 814:	b.eq	848 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xcc>  // b.none
 818:	bl	0 <_ZN4llvm4dbgsEv>
 81c:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 820:	add	x1, x1, #0x0
 824:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 828:	mov	x1, x0
 82c:	mov	x27, x0
 830:	mov	x0, x19
 834:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 838:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 83c:	mov	x0, x27
 840:	add	x1, x1, #0x0
 844:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 848:	mov	x1, x19
 84c:	mov	x0, x22
 850:	add	w21, w21, #0x1
 854:	bl	3b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>
 858:	mov	x1, x19
 85c:	mov	x0, x26
 860:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 864:	ubfiz	x0, x21, #4, #32
 868:	ldr	w1, [x19]
 86c:	sub	x0, x25, x0
 870:	ldr	w2, [x0]
 874:	str	xzr, [x19, #8]
 878:	str	w2, [x19]
 87c:	ldr	x2, [x0, #8]
 880:	str	x2, [x19, #8]
 884:	str	w1, [x0]
 888:	str	xzr, [x0, #8]
 88c:	b	7bc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 890:	ldr	x0, [x19, #8]
 894:	ldr	w1, [x0, #796]
 898:	ldr	x0, [x20, #8]
 89c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 8a0:	ldp	w1, w2, [x0, #4]
 8a4:	ldr	w0, [x0]
 8a8:	add	w1, w1, w2
 8ac:	cmp	w0, w1
 8b0:	b.ls	800 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x84>  // b.plast
 8b4:	b	7e8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x6c>
 8b8:	ldr	x2, [x20, #32]
 8bc:	add	x0, x20, #0x20
 8c0:	ldr	x1, [x0, #8]
 8c4:	sub	x1, x1, x2
 8c8:	asr	x1, x1, #4
 8cc:	sub	x1, x1, w21, uxtw
 8d0:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 8d4:	cmp	w21, #0x0
 8d8:	cset	w0, ne  // ne = any
 8dc:	ldp	x19, x20, [sp, #16]
 8e0:	ldp	x21, x22, [sp, #32]
 8e4:	ldp	x23, x24, [sp, #48]
 8e8:	ldp	x25, x26, [sp, #64]
 8ec:	ldr	x27, [sp, #80]
 8f0:	ldp	x29, x30, [sp], #96
 8f4:	ret

00000000000008f8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
 8f8:	stp	x29, x30, [sp, #-96]!
 8fc:	mov	x29, sp
 900:	stp	x23, x24, [sp, #48]
 904:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 908:	adrp	x24, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 90c:	ldr	x23, [x23]
 910:	add	x24, x24, #0x0
 914:	stp	x19, x20, [sp, #16]
 918:	mov	x20, x0
 91c:	stp	x21, x22, [sp, #32]
 920:	mov	x22, x1
 924:	mov	w21, #0x0                   	// #0
 928:	stp	x25, x26, [sp, #64]
 92c:	adrp	x26, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 930:	ldp	x19, x25, [x0, #104]
 934:	str	x27, [sp, #80]
 938:	cmp	x19, x25
 93c:	b.eq	9f0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>  // b.none
 940:	ldr	x0, [x19, #8]
 944:	cbz	x0, 9f0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf8>
 948:	ldr	w0, [x0, #784]
 94c:	cmp	w0, #0x5
 950:	b.eq	9a0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa8>  // b.none
 954:	ldrb	w0, [x23]
 958:	cbz	w0, 998 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>
 95c:	mov	x0, x24
 960:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 964:	tst	w0, #0xff
 968:	b.eq	998 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>  // b.none
 96c:	bl	0 <_ZN4llvm4dbgsEv>
 970:	add	x1, x26, #0x0
 974:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 978:	mov	x1, x0
 97c:	mov	x27, x0
 980:	mov	x0, x19
 984:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 988:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 98c:	mov	x0, x27
 990:	add	x1, x1, #0x0
 994:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 998:	add	x19, x19, #0x10
 99c:	b	938 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 9a0:	ldr	x0, [x20, #8]
 9a4:	add	w21, w21, #0x1
 9a8:	ldr	x1, [x0]
 9ac:	ldr	x2, [x1, #32]
 9b0:	mov	x1, x19
 9b4:	blr	x2
 9b8:	mov	x1, x19
 9bc:	mov	x0, x22
 9c0:	bl	3b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE12emplace_backIJRKS2_EEERS2_DpOT_.isra.0>
 9c4:	ubfiz	x0, x21, #4, #32
 9c8:	ldr	w1, [x19]
 9cc:	sub	x0, x25, x0
 9d0:	ldr	w2, [x0]
 9d4:	str	xzr, [x19, #8]
 9d8:	str	w2, [x19]
 9dc:	ldr	x2, [x0, #8]
 9e0:	str	x2, [x19, #8]
 9e4:	str	w1, [x0]
 9e8:	str	xzr, [x0, #8]
 9ec:	b	938 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x40>
 9f0:	ldr	x2, [x20, #104]
 9f4:	add	x0, x20, #0x68
 9f8:	ldr	x1, [x0, #8]
 9fc:	ldp	x19, x20, [sp, #16]
 a00:	sub	x1, x1, x2
 a04:	ldp	x23, x24, [sp, #48]
 a08:	asr	x1, x1, #4
 a0c:	sub	x1, x1, w21, uxtw
 a10:	ldp	x21, x22, [sp, #32]
 a14:	ldp	x25, x26, [sp, #64]
 a18:	ldr	x27, [sp, #80]
 a1c:	ldp	x29, x30, [sp], #96
 a20:	b	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>

0000000000000a24 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
 a24:	stp	x29, x30, [sp, #-64]!
 a28:	mov	x29, sp
 a2c:	stp	x19, x20, [sp, #16]
 a30:	mov	x19, x0
 a34:	mov	x20, x1
 a38:	ldr	x0, [x0, #8]
 a3c:	stp	x21, x22, [sp, #32]
 a40:	mov	x22, x3
 a44:	stp	x23, x24, [sp, #48]
 a48:	mov	x21, x4
 a4c:	mov	x23, x2
 a50:	ldr	x1, [x0]
 a54:	ldr	x1, [x1, #56]
 a58:	blr	x1
 a5c:	ldr	x0, [x19, #24]
 a60:	mov	x1, x20
 a64:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
 a68:	ldp	x20, x24, [x19, #104]
 a6c:	cmp	x24, x20
 a70:	b.eq	a84 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x60>  // b.none
 a74:	ldr	x0, [x20, #8]
 a78:	add	x20, x20, #0x10
 a7c:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 a80:	b	a6c <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x48>
 a84:	mov	x1, x23
 a88:	mov	x0, x19
 a8c:	bl	8f8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 a90:	ldp	x20, x23, [x19, #56]
 a94:	cmp	x23, x20
 a98:	b.eq	aac <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x88>  // b.none
 a9c:	ldr	x0, [x20, #8]
 aa0:	add	x20, x20, #0x10
 aa4:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 aa8:	b	a94 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x70>
 aac:	ldp	x20, x23, [x19, #32]
 ab0:	cmp	x23, x20
 ab4:	b.eq	ac8 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xa4>  // b.none
 ab8:	ldr	x0, [x20, #8]
 abc:	add	x20, x20, #0x10
 ac0:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
 ac4:	b	ab0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x8c>
 ac8:	mov	x1, x22
 acc:	mov	x0, x19
 ad0:	bl	77c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 ad4:	mov	x1, x21
 ad8:	mov	x0, x19
 adc:	bl	604 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
 ae0:	ldp	x21, x22, [sp, #32]
 ae4:	ldp	x23, x24, [sp, #48]
 ae8:	str	xzr, [x19, #128]
 aec:	str	wzr, [x19, #136]
 af0:	ldp	x19, x20, [sp, #16]
 af4:	ldp	x29, x30, [sp], #64
 af8:	ret

0000000000000afc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
 afc:	stp	x29, x30, [sp, #-48]!
 b00:	mov	x29, sp
 b04:	stp	x19, x20, [sp, #16]
 b08:	mov	x20, x0
 b0c:	mov	x19, x1
 b10:	ldr	x0, [x0, #24]
 b14:	str	x21, [sp, #32]
 b18:	ldr	x21, [x1, #8]
 b1c:	ldr	x1, [x21, #800]
 b20:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
 b24:	ldr	x0, [x21]
 b28:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 b2c:	tst	w0, #0xff
 b30:	b.eq	b4c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x50>  // b.none
 b34:	ldr	x0, [x20, #8]
 b38:	ldr	x1, [x0]
 b3c:	ldr	x2, [x1, #24]
 b40:	mov	x1, x19
 b44:	blr	x2
 b48:	str	w0, [x21, #796]
 b4c:	ldr	w0, [x21, #784]
 b50:	cmp	w0, #0x1
 b54:	b.ne	bcc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd0>  // b.any
 b58:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 b5c:	ldr	x0, [x0]
 b60:	ldrb	w0, [x0]
 b64:	cbz	w0, bac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb0>
 b68:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 b6c:	add	x0, x0, #0x0
 b70:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 b74:	tst	w0, #0xff
 b78:	b.eq	bac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb0>  // b.none
 b7c:	bl	0 <_ZN4llvm4dbgsEv>
 b80:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 b84:	add	x1, x1, #0x0
 b88:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 b8c:	mov	x1, x0
 b90:	mov	x21, x0
 b94:	mov	x0, x19
 b98:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 b9c:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 ba0:	mov	x0, x21
 ba4:	add	x1, x1, #0x0
 ba8:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 bac:	mov	x1, x19
 bb0:	add	x0, x20, #0x20
 bb4:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 bb8:	mov	w0, #0x0                   	// #0
 bbc:	ldp	x19, x20, [sp, #16]
 bc0:	ldr	x21, [sp, #32]
 bc4:	ldp	x29, x30, [sp], #48
 bc8:	ret
 bcc:	ldr	x0, [x21]
 bd0:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 bd4:	tst	w0, #0xff
 bd8:	b.eq	c00 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x104>  // b.none
 bdc:	ldr	x0, [x19, #8]
 be0:	ldr	w1, [x0, #796]
 be4:	ldr	x0, [x20, #8]
 be8:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 bec:	ldp	w1, w2, [x0, #4]
 bf0:	ldr	w0, [x0]
 bf4:	add	w1, w1, w2
 bf8:	cmp	w0, w1
 bfc:	b.hi	b58 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c>  // b.pmore
 c00:	ldr	w0, [x21, #784]
 c04:	cmp	w0, #0x2
 c08:	b.ne	c7c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x180>  // b.any
 c0c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 c10:	ldr	x0, [x0]
 c14:	ldrb	w0, [x0]
 c18:	cbz	w0, c60 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x164>
 c1c:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c20:	add	x0, x0, #0x0
 c24:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 c28:	tst	w0, #0xff
 c2c:	b.eq	c60 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x164>  // b.none
 c30:	bl	0 <_ZN4llvm4dbgsEv>
 c34:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c38:	add	x1, x1, #0x0
 c3c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c40:	mov	x1, x0
 c44:	mov	x21, x0
 c48:	mov	x0, x19
 c4c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c50:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c54:	mov	x0, x21
 c58:	add	x1, x1, #0x0
 c5c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c60:	add	x0, x20, #0x38
 c64:	mov	x1, x19
 c68:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c6c:	ldr	w0, [x20, #136]
 c70:	add	w0, w0, #0x1
 c74:	str	w0, [x20, #136]
 c78:	b	bb8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xbc>
 c7c:	ldr	x0, [x21]
 c80:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c84:	tst	w0, #0xff
 c88:	b.eq	ca0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1a4>  // b.none
 c8c:	ldr	x0, [x20, #8]
 c90:	mov	x1, x19
 c94:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 c98:	tst	w0, #0xff
 c9c:	b.ne	c0c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x110>  // b.any
 ca0:	ldr	w0, [x21, #784]
 ca4:	cmp	w0, #0x3
 ca8:	b.eq	ccc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1d0>  // b.none
 cac:	adrp	x3, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 cb0:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 cb4:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 cb8:	add	x3, x3, #0x0
 cbc:	add	x1, x1, #0x0
 cc0:	add	x0, x0, #0x0
 cc4:	mov	w2, #0x142                 	// #322
 cc8:	bl	0 <__assert_fail>
 ccc:	ldr	x0, [x21]
 cd0:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 cd4:	tst	w0, #0xff
 cd8:	b.eq	cfc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x200>  // b.none
 cdc:	ldr	x0, [x19, #8]
 ce0:	ldr	w1, [x0, #796]
 ce4:	ldr	x0, [x20, #8]
 ce8:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 cec:	ldr	w1, [x0, #8]
 cf0:	ldr	w0, [x0]
 cf4:	cmp	w1, w0
 cf8:	b.ne	cac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1b0>  // b.any
 cfc:	mov	x1, x19
 d00:	mov	x0, x20
 d04:	bl	388 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
 d08:	ands	w0, w0, #0xff
 d0c:	b.ne	bbc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xc0>  // b.any
 d10:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 d14:	ldr	x0, [x0]
 d18:	ldrb	w0, [x0]
 d1c:	cbz	w0, d64 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x268>
 d20:	adrp	x0, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d24:	add	x0, x0, #0x0
 d28:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 d2c:	tst	w0, #0xff
 d30:	b.eq	d64 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x268>  // b.none
 d34:	bl	0 <_ZN4llvm4dbgsEv>
 d38:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d3c:	add	x1, x1, #0x0
 d40:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d44:	mov	x1, x0
 d48:	mov	x21, x0
 d4c:	mov	x0, x19
 d50:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d54:	adrp	x1, 0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d58:	mov	x0, x21
 d5c:	add	x1, x1, #0x0
 d60:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d64:	add	x0, x20, #0x50
 d68:	mov	x1, x19
 d6c:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 d70:	mov	w0, #0x1                   	// #1
 d74:	b	bbc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xc0>

0000000000000d78 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
 d78:	stp	x29, x30, [sp, #-80]!
 d7c:	mov	x29, sp
 d80:	stp	x19, x20, [sp, #16]
 d84:	mov	x19, x0
 d88:	ldr	x20, [x1, #8]
 d8c:	stp	x21, x22, [sp, #32]
 d90:	mov	x22, x1
 d94:	mov	w1, #0x88                  	// #136
 d98:	stp	x23, x24, [sp, #48]
 d9c:	ldr	w21, [x20, #24]
 da0:	ldr	x0, [x20, #16]
 da4:	mov	x23, x4
 da8:	mov	x24, x3
 dac:	mov	w3, #0x0                   	// #0
 db0:	str	x25, [sp, #64]
 db4:	mov	x25, x2
 db8:	umaddl	x21, w21, w1, x0
 dbc:	mov	w2, #0x0                   	// #0
 dc0:	mov	x1, x21
 dc4:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 dc8:	cmp	x21, x0
 dcc:	ldr	x0, [x20]
 dd0:	cset	w21, ne  // ne = any
 dd4:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 dd8:	tst	w0, #0xff
 ddc:	b.ne	e3c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xc4>  // b.any
 de0:	mov	w0, #0x0                   	// #0
 de4:	orr	w21, w0, w21
 de8:	ldr	x0, [x19, #24]
 dec:	ldr	x1, [x20, #800]
 df0:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
 df4:	mov	x2, x25
 df8:	mov	x1, x22
 dfc:	mov	x0, x19
 e00:	bl	524 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
 e04:	cbz	w21, e68 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>
 e08:	mov	x1, x24
 e0c:	mov	x0, x19
 e10:	bl	77c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
 e14:	tst	w0, #0xff
 e18:	b.eq	e68 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>  // b.none
 e1c:	mov	x1, x23
 e20:	mov	x0, x19
 e24:	ldp	x19, x20, [sp, #16]
 e28:	ldp	x21, x22, [sp, #32]
 e2c:	ldp	x23, x24, [sp, #48]
 e30:	ldr	x25, [sp, #64]
 e34:	ldp	x29, x30, [sp], #80
 e38:	b	604 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
 e3c:	ldr	w1, [x20, #796]
 e40:	ldr	x0, [x19, #8]
 e44:	bl	0 <_ZNK4llvm3mca15InstructionBase7isMemOpEv.isra.0>
 e48:	ldr	w2, [x0, #12]
 e4c:	ldr	w1, [x0, #20]
 e50:	cmp	w2, w1
 e54:	b.eq	de0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x68>  // b.none
 e58:	ldr	w0, [x0, #32]
 e5c:	cmp	w0, #0x0
 e60:	cset	w0, ne  // ne = any
 e64:	b	de4 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x6c>
 e68:	ldp	x19, x20, [sp, #16]
 e6c:	ldp	x21, x22, [sp, #32]
 e70:	ldp	x23, x24, [sp, #48]
 e74:	ldr	x25, [sp, #64]
 e78:	ldp	x29, x30, [sp], #80
 e7c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNK4llvm3mca15InstructionBase11getNumUsersEv:

0000000000000000 <_ZNK4llvm3mca15InstructionBase11getNumUsersEv>:
   0:	ldr	w3, [x0, #24]
   4:	ldr	x1, [x0, #16]
   8:	mov	w0, #0x88                  	// #136
   c:	umaddl	x3, w3, w0, x1
  10:	mov	w0, #0x0                   	// #0
  14:	cmp	x3, x1
  18:	b.eq	38 <_ZNK4llvm3mca15InstructionBase11getNumUsersEv+0x38>  // b.none
  1c:	ldr	x4, [x1, #32]
  20:	add	x1, x1, #0x88
  24:	ldur	w2, [x1, #-72]
  28:	cmp	x4, #0x0
  2c:	cinc	w2, w2, ne  // ne = any
  30:	add	w0, w0, w2
  34:	b	14 <_ZNK4llvm3mca15InstructionBase11getNumUsersEv+0x14>
  38:	ret

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x0, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x2
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	w21, [x1]
  1c:	bl	0 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>
  20:	ldr	w22, [x19]
  24:	sub	w20, w21, w0
  28:	ldr	x0, [x19, #8]
  2c:	bl	0 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>
  30:	sub	w0, w22, w0
  34:	cmp	w0, w20
  38:	b.ne	54 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x54>  // b.any
  3c:	cmp	w22, w21
  40:	cset	w0, hi  // hi = pmore
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x21, x22, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	cset	w0, gt
  58:	b	44 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x44>

Disassembly of section .text._ZNK4llvm3mca7InstRef5printERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca7InstRef5printERNS_11raw_ostreamE>:
   0:	mov	x2, x0
   4:	mov	x0, x1
   8:	ldr	w1, [x2]
   c:	b	0 <_ZN4llvm11raw_ostreamlsEm>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #4
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>:
   0:	ldr	w3, [x0, #24]
   4:	cbnz	w3, 14 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x14>
   8:	str	xzr, [x2]
   c:	mov	w0, #0x0                   	// #0
  10:	ret
  14:	ldr	w5, [x1]
  18:	cmn	w5, #0x3
  1c:	b.ls	48 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x48>  // b.plast
  20:	stp	x29, x30, [sp, #-16]!
  24:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  28:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  2c:	mov	x29, sp
  30:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0x250                 	// #592
  44:	bl	0 <__assert_fail>
  48:	ldr	x8, [x0, #8]
  4c:	mov	w0, #0x25                  	// #37
  50:	sub	w3, w3, #0x1
  54:	mov	w4, #0x1                   	// #1
  58:	mul	w0, w5, w0
  5c:	mov	x1, #0x0                   	// #0
  60:	and	w0, w0, w3
  64:	ubfiz	x7, x0, #4, #32
  68:	add	x6, x8, x7
  6c:	ldr	w7, [x8, x7]
  70:	cmp	w5, w7
  74:	b.ne	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x84>  // b.any
  78:	mov	w0, #0x1                   	// #1
  7c:	str	x6, [x2]
  80:	ret
  84:	cmn	w7, #0x1
  88:	b.ne	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x9c>  // b.any
  8c:	cmp	x1, #0x0
  90:	csel	x1, x1, x6, ne  // ne = any
  94:	str	x1, [x2]
  98:	b	c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xc>
  9c:	cmn	w7, #0x2
  a0:	b.ne	ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0xac>  // b.any
  a4:	cmp	x1, #0x0
  a8:	csel	x1, x1, x6, ne  // ne = any
  ac:	add	w0, w0, w4
  b0:	add	w4, w4, #0x1
  b4:	and	w0, w3, w0
  b8:	b	64 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E15LookupBucketForIjEEbRKT_RPKSC_+0x64>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x28
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>
  1c:	tst	w0, #0xff
  20:	b.eq	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj+0x50>  // b.none
  24:	ldr	x1, [x19, #8]
  28:	ldr	w0, [x19, #24]
  2c:	add	x0, x1, x0, lsl #4
  30:	str	x0, [x20, #24]
  34:	ldr	x1, [x19]
  38:	stp	x19, x1, [x20]
  3c:	ldr	x1, [sp, #40]
  40:	str	x1, [x20, #16]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret
  50:	mov	x8, x20
  54:	mov	x0, x19
  58:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj>
  5c:	b	44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E4findERKj+0x44>

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	w1, [sp, #44]
  10:	cbz	w1, e8 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0xe8>
  14:	add	x1, sp, #0x2c
  18:	add	x19, x0, #0x20
  1c:	add	x8, sp, #0x30
  20:	mov	x0, x19
  24:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  28:	add	x8, sp, #0x50
  2c:	mov	x0, x19
  30:	ldr	x20, [sp, #48]
  34:	bl	0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  38:	ldr	x1, [sp, #64]
  3c:	ldr	x2, [sp, #80]
  40:	cbz	x1, 74 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x74>
  44:	ldr	x3, [x20]
  48:	ldr	x0, [sp, #56]
  4c:	cmp	x3, x0
  50:	b.eq	74 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x74>  // b.none
  54:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  58:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  5c:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x4c7                 	// #1223
  70:	bl	0 <__assert_fail>
  74:	ldr	x0, [sp, #96]
  78:	cbz	x0, ac <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0xac>
  7c:	ldr	x4, [x2]
  80:	ldr	x3, [sp, #88]
  84:	cmp	x4, x3
  88:	b.eq	ac <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0xac>  // b.none
  8c:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  90:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  94:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  98:	add	x3, x3, #0x0
  9c:	add	x1, x1, #0x0
  a0:	add	x0, x0, #0x0
  a4:	mov	w2, #0x4c8                 	// #1224
  a8:	b	70 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x70>
  ac:	cmp	x20, x2
  b0:	b.eq	d4 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0xd4>  // b.none
  b4:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  b8:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  bc:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj>
  c0:	add	x3, x3, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x0, x0, #0x0
  cc:	mov	w2, #0x4c9                 	// #1225
  d0:	b	70 <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0x70>
  d4:	cmp	x1, x0
  d8:	cset	w0, ne  // ne = any
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldp	x29, x30, [sp], #112
  e4:	ret
  e8:	mov	w0, #0x0                   	// #0
  ec:	b	dc <_ZNK4llvm3mca10LSUnitBase14isValidGroupIDEj+0xdc>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	str	w1, [sp, #44]
  14:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  18:	tst	w0, #0xff
  1c:	b.ne	40 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x40>  // b.any
  20:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  24:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  28:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x11c                 	// #284
  3c:	bl	0 <__assert_fail>
  40:	add	x1, sp, #0x2c
  44:	add	x2, sp, #0x38
  48:	add	x0, x19, #0x20
  4c:	bl	0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  50:	tst	w0, #0xff
  54:	ldr	x1, [sp, #56]
  58:	b.ne	68 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x68>  // b.any
  5c:	ldr	x0, [x19, #40]
  60:	ldr	w1, [x19, #56]
  64:	add	x1, x0, x1, lsl #4
  68:	ldr	x0, [x1, #8]
  6c:	ldr	x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #64
  74:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	str	w1, [sp, #44]
  14:	bl	0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  18:	tst	w0, #0xff
  1c:	b.ne	40 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x40>  // b.any
  20:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  24:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  28:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x117                 	// #279
  3c:	bl	0 <__assert_fail>
  40:	add	x1, sp, #0x2c
  44:	add	x0, x19, #0x20
  48:	add	x8, sp, #0x30
  4c:	bl	0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  50:	ldr	x0, [sp, #48]
  54:	ldr	x1, [x0]
  58:	ldr	x0, [sp, #56]
  5c:	cmp	x1, x0
  60:	b.eq	84 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x84>  // b.none
  64:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  68:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  6c:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x4b9                 	// #1209
  80:	b	3c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x3c>
  84:	ldr	x0, [sp, #64]
  88:	ldr	x19, [sp, #16]
  8c:	ldr	x0, [x0, #8]
  90:	ldp	x29, x30, [sp], #80
  94:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase9isPendingERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase9isPendingERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1, #8]
   c:	ldr	w1, [x1, #796]
  10:	bl	0 <_ZNK4llvm3mca10LSUnitBase9isPendingERKNS0_7InstRefE>
  14:	ldr	w1, [x0, #4]
  18:	cbz	w1, 38 <_ZNK4llvm3mca10LSUnitBase9isPendingERKNS0_7InstRefE+0x38>
  1c:	ldr	w2, [x0, #8]
  20:	ldr	w0, [x0]
  24:	add	w1, w1, w2
  28:	cmp	w1, w0
  2c:	cset	w0, eq  // eq = none
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	mov	w0, #0x0                   	// #0
  3c:	b	30 <_ZNK4llvm3mca10LSUnitBase9isPendingERKNS0_7InstRefE+0x30>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #56]
  24:	b.ls	38 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x38>  // b.plast
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  2c:	mov	w1, #0x1                   	// #1
  30:	add	x0, x0, #0x0
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w2, [x19, #12]
  3c:	add	x1, sp, #0x38
  40:	add	x2, x2, #0x2
  44:	orr	x2, x2, x2, lsr #1
  48:	orr	x2, x2, x2, lsr #2
  4c:	orr	x2, x2, x2, lsr #4
  50:	orr	x2, x2, x2, lsr #8
  54:	orr	x0, x2, x2, lsr #16
  58:	orr	x2, x0, x2, lsr #32
  5c:	add	x0, sp, #0x40
  60:	add	x2, x2, #0x1
  64:	cmp	x20, x2
  68:	csel	x0, x0, x1, ls  // ls = plast
  6c:	mov	x1, #0xffffffff            	// #4294967295
  70:	stp	x2, x1, [sp, #64]
  74:	ldr	x2, [x0]
  78:	cmp	x2, x1
  7c:	b.ls	84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x84>  // b.plast
  80:	add	x0, sp, #0x48
  84:	ldr	x22, [x0]
  88:	lsl	x21, x22, #4
  8c:	mov	x0, x21
  90:	bl	0 <malloc>
  94:	mov	x20, x0
  98:	cbnz	x0, b0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb0>
  9c:	cbz	x21, d8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xd8>
  a0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a4:	mov	w1, #0x1                   	// #1
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b0:	ldr	x0, [x19]
  b4:	mov	x3, x20
  b8:	ldr	w2, [x19, #8]
  bc:	mov	x1, x0
  c0:	add	x2, x0, x2, lsl #4
  c4:	cmp	x2, x1
  c8:	b.eq	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.none
  cc:	ldp	x4, x5, [x1], #16
  d0:	stp	x4, x5, [x3], #16
  d4:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc4>
  d8:	mov	x21, #0x1                   	// #1
  dc:	b	8c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x8c>
  e0:	add	x1, x19, #0x10
  e4:	cmp	x0, x1
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w22, [x19, #12]
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #80
 104:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	sub	x21, x3, x2
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x24, x3
  18:	ldr	x3, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x2
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x27, x2
  2c:	ldr	w2, [x0, #8]
  30:	stp	x25, x26, [sp, #64]
  34:	mov	x19, x0
  38:	sub	x25, x1, x3
  3c:	add	x4, x3, x2, lsl #4
  40:	cmp	x1, x4
  44:	b.ne	bc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xbc>  // b.any
  48:	ldr	w1, [x0, #12]
  4c:	asr	x22, x21, #4
  50:	sub	x1, x1, x2
  54:	cmp	x1, x21, asr #4
  58:	b.cs	64 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x64>  // b.hs, b.nlast
  5c:	add	x1, x2, x22
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  64:	ldr	x1, [x19]
  68:	ldr	w0, [x19, #8]
  6c:	add	x0, x1, x0, lsl #4
  70:	cmp	x20, x24
  74:	b.eq	84 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x84>  // b.none
  78:	ldp	x2, x3, [x20], #16
  7c:	stp	x2, x3, [x0], #16
  80:	b	70 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x70>
  84:	ldr	w1, [x19, #8]
  88:	mov	x0, x19
  8c:	add	x1, x1, x22
  90:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  94:	ldr	x23, [x19]
  98:	add	x23, x23, x25
  9c:	mov	x0, x23
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x21, x22, [sp, #32]
  a8:	ldp	x23, x24, [sp, #48]
  ac:	ldp	x25, x26, [sp, #64]
  b0:	ldp	x27, x28, [sp, #80]
  b4:	ldp	x29, x30, [sp], #112
  b8:	ret
  bc:	cmp	x1, x3
  c0:	b.cs	e4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xe4>  // b.hs, b.nlast
  c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  c8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  cc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x24e                 	// #590
  e0:	bl	0 <__assert_fail>
  e4:	cmp	x1, x4
  e8:	b.ls	10c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x10c>  // b.plast
  ec:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  f0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0x24f                 	// #591
 108:	b	e0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xe0>
 10c:	add	x1, x2, x21, asr #4
 110:	ldr	w2, [x0, #12]
 114:	asr	x26, x21, #4
 118:	cmp	x1, x2
 11c:	b.ls	124 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x124>  // b.plast
 120:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 124:	ldr	w1, [x19, #8]
 128:	ldr	x3, [x19]
 12c:	lsl	x0, x1, #4
 130:	sub	x28, x0, x25
 134:	add	x23, x3, x25
 138:	add	x22, x3, x1, lsl #4
 13c:	asr	x2, x28, #4
 140:	cmp	x26, x28, asr #4
 144:	b.hi	1fc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1fc>  // b.pmore
 148:	sub	x21, x0, x21
 14c:	ldr	w2, [x19, #12]
 150:	sub	x0, x0, x21
 154:	add	x20, x3, x21
 158:	sub	x2, x2, x1
 15c:	asr	x24, x0, #4
 160:	cmp	x2, x0, asr #4
 164:	b.cs	174 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x174>  // b.hs, b.nlast
 168:	add	x1, x1, x24
 16c:	mov	x0, x19
 170:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 174:	ldr	x1, [x19]
 178:	ldr	w0, [x19, #8]
 17c:	add	x0, x1, x0, lsl #4
 180:	mov	x1, x20
 184:	cmp	x22, x1
 188:	b.eq	198 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x198>  // b.none
 18c:	ldp	x2, x3, [x1], #16
 190:	stp	x2, x3, [x0], #16
 194:	b	184 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x184>
 198:	ldr	w1, [x19, #8]
 19c:	sub	x21, x21, x25
 1a0:	mov	x0, x19
 1a4:	asr	x21, x21, #4
 1a8:	add	x1, x1, x24
 1ac:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1b0:	cmp	x21, #0x0
 1b4:	b.le	1d0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1d0>
 1b8:	ldr	w0, [x20, #-16]!
 1bc:	sub	x21, x21, #0x1
 1c0:	str	w0, [x22, #-16]!
 1c4:	ldr	x0, [x20, #8]
 1c8:	str	x0, [x22, #8]
 1cc:	b	1b0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1b0>
 1d0:	mov	x0, x23
 1d4:	cmp	x26, #0x0
 1d8:	b.le	9c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x9c>
 1dc:	ldr	w1, [x27]
 1e0:	sub	x26, x26, #0x1
 1e4:	str	w1, [x0]
 1e8:	add	x27, x27, #0x10
 1ec:	ldur	x1, [x27, #-8]
 1f0:	add	x0, x0, #0x10
 1f4:	stur	x1, [x0, #-8]
 1f8:	b	1d4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1d4>
 1fc:	add	x1, x1, x26
 200:	mov	x0, x19
 204:	str	x2, [sp, #104]
 208:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 20c:	ldr	w0, [x19, #8]
 210:	ldr	x1, [x19]
 214:	lsl	x0, x0, #4
 218:	sub	x0, x0, x28
 21c:	ldr	x2, [sp, #104]
 220:	add	x0, x1, x0
 224:	mov	x1, x23
 228:	cmp	x22, x1
 22c:	b.eq	23c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x23c>  // b.none
 230:	ldp	x4, x5, [x1], #16
 234:	stp	x4, x5, [x0], #16
 238:	b	228 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x228>
 23c:	mov	x0, x20
 240:	mov	x1, x23
 244:	cbnz	x2, 260 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x260>
 248:	add	x20, x20, x28
 24c:	cmp	x24, x20
 250:	b.eq	9c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x9c>  // b.none
 254:	ldp	x0, x1, [x20], #16
 258:	stp	x0, x1, [x22], #16
 25c:	b	24c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x24c>
 260:	ldr	w3, [x0]
 264:	sub	x2, x2, #0x1
 268:	str	w3, [x1]
 26c:	add	x0, x0, #0x10
 270:	ldur	x3, [x0, #-8]
 274:	add	x1, x1, #0x10
 278:	stur	x3, [x1, #-8]
 27c:	b	244 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x244>

Disassembly of section .text._ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc>:
   0:	mov	x3, x0
   4:	mov	x0, x2
   8:	mov	x4, #0x7ffffffffffffff     	// #576460752303423487
   c:	ldp	x2, x5, [x3]
  10:	sub	x5, x5, x2
  14:	asr	x3, x5, #4
  18:	sub	x5, x4, x5, asr #4
  1c:	cmp	x5, x1
  20:	b.cs	30 <_ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc+0x30>  // b.hs, b.nlast
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	bl	0 <_ZSt20__throw_length_errorPKc>
  30:	cmp	x1, x3
  34:	csel	x1, x1, x3, cs  // cs = hs, nlast
  38:	adds	x3, x3, x1
  3c:	b.cs	4c <_ZNKSt6vectorIN4llvm3mca7InstRefESaIS2_EE12_M_check_lenEmPKc+0x4c>  // b.hs, b.nlast
  40:	cmp	x3, x4
  44:	csel	x0, x3, x4, ls  // ls = plast
  48:	ret
  4c:	mov	x0, x4
  50:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x21, [x0, #8]
  10:	str	x25, [sp, #64]
  14:	mov	x25, x1
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x0
  20:	ldr	x1, [x0, #16]
  24:	stp	x23, x24, [sp, #48]
  28:	cmp	x21, x1
  2c:	b.eq	54 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x54>  // b.none
  30:	ldp	x0, x1, [x25]
  34:	stp	x0, x1, [x21], #16
  38:	str	x21, [x19, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x23, x24, [sp, #48]
  48:	ldr	x25, [sp, #64]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>
  58:	mov	x1, #0x1                   	// #1
  5c:	add	x2, x2, #0x0
  60:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>
  64:	ldr	x24, [x19]
  68:	mov	x22, x0
  6c:	sub	x23, x21, x24
  70:	cbz	x0, a4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xa4>
  74:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>
  78:	mov	x20, x0
  7c:	add	x2, x20, x23
  80:	ldp	x0, x1, [x25]
  84:	stp	x0, x1, [x2]
  88:	mov	x1, x20
  8c:	mov	x0, x24
  90:	cmp	x21, x0
  94:	b.eq	ac <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xac>  // b.none
  98:	ldp	x2, x3, [x0], #16
  9c:	stp	x2, x3, [x1], #16
  a0:	b	90 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x90>
  a4:	mov	x20, #0x0                   	// #0
  a8:	b	7c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x7c>
  ac:	add	x23, x23, #0x10
  b0:	add	x23, x20, x23
  b4:	cbz	x24, c0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xc0>
  b8:	mov	x0, x24
  bc:	bl	0 <_ZdlPv>
  c0:	stp	x20, x23, [x19]
  c4:	add	x20, x20, x22, lsl #4
  c8:	str	x20, [x19, #16]
  cc:	b	3c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x3c>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	cbz	x1, f0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf0>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	ldp	x22, x2, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x3, [x0, #16]
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x20, x1
  28:	sub	x22, x2, x22
  2c:	sub	x3, x3, x2
  30:	asr	x24, x22, #4
  34:	cmp	x1, x3, asr #4
  38:	b.hi	70 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x70>  // b.pmore
  3c:	mov	x0, x2
  40:	str	wzr, [x0]
  44:	subs	x1, x1, #0x1
  48:	str	xzr, [x0, #8]
  4c:	add	x0, x0, #0x10
  50:	b.ne	40 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x40>  // b.any
  54:	add	x20, x2, x20, lsl #4
  58:	str	x20, [x19, #8]
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x23, x24, [sp, #48]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  74:	add	x2, x2, #0x0
  78:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  7c:	mov	x23, x0
  80:	cbz	x0, c8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xc8>
  84:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
  88:	mov	x21, x0
  8c:	add	x1, x21, x22
  90:	mov	x0, x20
  94:	str	wzr, [x1]
  98:	subs	x0, x0, #0x1
  9c:	str	xzr, [x1, #8]
  a0:	add	x1, x1, #0x10
  a4:	b.ne	94 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x94>  // b.any
  a8:	ldp	x0, x3, [x19]
  ac:	mov	x2, x21
  b0:	mov	x1, x0
  b4:	cmp	x3, x1
  b8:	b.eq	d0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd0>  // b.none
  bc:	ldp	x4, x5, [x1], #16
  c0:	stp	x4, x5, [x2], #16
  c4:	b	b4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb4>
  c8:	mov	x21, #0x0                   	// #0
  cc:	b	8c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x8c>
  d0:	cbz	x0, d8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd8>
  d4:	bl	0 <_ZdlPv>
  d8:	add	x20, x24, x20
  dc:	add	x20, x21, x20, lsl #4
  e0:	stp	x21, x20, [x19]
  e4:	add	x21, x21, x23, lsl #4
  e8:	str	x21, [x19, #16]
  ec:	b	5c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x5c>
  f0:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm>:
   0:	ldp	x5, x4, [x0]
   4:	sub	x3, x4, x5
   8:	asr	x3, x3, #4
   c:	cmp	x1, x3
  10:	b.ls	1c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x1c>  // b.plast
  14:	sub	x1, x1, x3
  18:	b	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm>
  1c:	b.cs	30 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x30>  // b.hs, b.nlast
  20:	add	x1, x5, x1, lsl #4
  24:	cmp	x1, x4
  28:	b.eq	30 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE6resizeEm+0x30>  // b.none
  2c:	str	x1, [x0, #8]
  30:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldr	x21, [x0, #8]
  10:	str	x25, [sp, #64]
  14:	mov	x25, x1
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x0
  20:	ldr	x1, [x0, #16]
  24:	stp	x23, x24, [sp, #48]
  28:	cmp	x21, x1
  2c:	b.eq	54 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0x54>  // b.none
  30:	ldp	x0, x1, [x25]
  34:	stp	x0, x1, [x21], #16
  38:	str	x21, [x19, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x23, x24, [sp, #48]
  48:	ldr	x25, [sp, #64]
  4c:	ldp	x29, x30, [sp], #80
  50:	ret
  54:	adrp	x2, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_>
  58:	mov	x1, #0x1                   	// #1
  5c:	add	x2, x2, #0x0
  60:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_>
  64:	ldr	x24, [x19]
  68:	mov	x22, x0
  6c:	sub	x23, x21, x24
  70:	cbz	x0, a4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0xa4>
  74:	bl	0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_>
  78:	mov	x20, x0
  7c:	add	x2, x20, x23
  80:	ldp	x0, x1, [x25]
  84:	stp	x0, x1, [x2]
  88:	mov	x1, x20
  8c:	mov	x0, x24
  90:	cmp	x21, x0
  94:	b.eq	ac <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0xac>  // b.none
  98:	ldp	x2, x3, [x0], #16
  9c:	stp	x2, x3, [x1], #16
  a0:	b	90 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0x90>
  a4:	mov	x20, #0x0                   	// #0
  a8:	b	7c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0x7c>
  ac:	add	x23, x23, #0x10
  b0:	add	x23, x20, x23
  b4:	cbz	x24, c0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0xc0>
  b8:	mov	x0, x24
  bc:	bl	0 <_ZdlPv>
  c0:	stp	x20, x23, [x19]
  c4:	add	x20, x20, x22, lsl #4
  c8:	str	x20, [x19, #16]
  cc:	b	3c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE9push_backERKS2_+0x3c>

Disassembly of section .text._ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag>:
   0:	sub	x2, x1, x0
   4:	mov	x3, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
   8:	movk	x3, #0xf0f1
   c:	asr	x2, x2, #3
  10:	mul	x2, x2, x3
  14:	asr	x2, x2, #2
  18:	cmp	x2, #0x0
  1c:	b.le	94 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x94>
  20:	ldr	x4, [x0, #32]
  24:	ldr	w3, [x0, #64]
  28:	cmp	x4, #0x0
  2c:	cinc	w3, w3, ne  // ne = any
  30:	cbnz	w3, 4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  34:	ldr	x4, [x0, #168]
  38:	ldr	w3, [x0, #200]
  3c:	cmp	x4, #0x0
  40:	cinc	w3, w3, ne  // ne = any
  44:	cbz	w3, 50 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x50>
  48:	add	x0, x0, #0x88
  4c:	ret
  50:	ldr	x4, [x0, #304]
  54:	ldr	w3, [x0, #336]
  58:	cmp	x4, #0x0
  5c:	cinc	w3, w3, ne  // ne = any
  60:	cbz	w3, 6c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x6c>
  64:	add	x0, x0, #0x110
  68:	b	4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  6c:	ldr	x4, [x0, #440]
  70:	ldr	w3, [x0, #472]
  74:	cmp	x4, #0x0
  78:	cinc	w3, w3, ne  // ne = any
  7c:	cbz	w3, 88 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x88>
  80:	add	x0, x0, #0x198
  84:	b	4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  88:	add	x0, x0, #0x220
  8c:	sub	x2, x2, #0x1
  90:	b	18 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x18>
  94:	sub	x2, x1, x0
  98:	cmp	x2, #0x110
  9c:	b.eq	d0 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xd0>  // b.none
  a0:	cmp	x2, #0x198
  a4:	b.eq	b8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xb8>  // b.none
  a8:	cmp	x2, #0x88
  ac:	b.eq	e8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xe8>  // b.none
  b0:	mov	x0, x1
  b4:	b	4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  b8:	ldr	x3, [x0, #32]
  bc:	ldr	w2, [x0, #64]
  c0:	cmp	x3, #0x0
  c4:	cinc	w2, w2, ne  // ne = any
  c8:	cbnz	w2, 4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  cc:	add	x0, x0, #0x88
  d0:	ldr	x3, [x0, #32]
  d4:	ldr	w2, [x0, #64]
  d8:	cmp	x3, #0x0
  dc:	cinc	w2, w2, ne  // ne = any
  e0:	cbnz	w2, 4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>
  e4:	add	x0, x0, #0x88
  e8:	ldr	x3, [x0, #32]
  ec:	ldr	w2, [x0, #64]
  f0:	cmp	x3, #0x0
  f4:	cinc	w2, w2, ne  // ne = any
  f8:	cmp	w2, #0x0
  fc:	csel	x0, x0, x1, ne  // ne = any
 100:	b	4c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x4c>

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0xab                  	// #171
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>:
      28:	ldr	x3, [x0]
      2c:	fmov	d0, x3
      30:	ldr	x2, [x1]
      34:	cnt	v0.8b, v0.8b
      38:	addv	b0, v0.8b
      3c:	umov	w1, v0.b[0]
      40:	fmov	d0, x2
      44:	cnt	v0.8b, v0.8b
      48:	addv	b0, v0.8b
      4c:	umov	w0, v0.b[0]
      50:	cmp	w1, w0
      54:	b.cc	68 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0+0x40>  // b.lo, b.ul, b.last
      58:	b.hi	70 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0+0x48>  // b.pmore
      5c:	cmp	x3, x2
      60:	cset	w0, cc  // cc = lo, ul, last
      64:	ret
      68:	mov	w0, #0x1                   	// #1
      6c:	b	64 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0+0x3c>
      70:	mov	w0, #0x0                   	// #0
      74:	b	64 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0+0x3c>

0000000000000078 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>:
      78:	sub	sp, sp, #0x20
      7c:	ldp	x2, x3, [x0]
      80:	stp	x2, x3, [sp, #8]
      84:	ldr	x3, [x0]
      88:	fmov	d0, x3
      8c:	ldr	x1, [x0, #16]
      90:	cnt	v0.8b, v0.8b
      94:	str	x1, [sp, #24]
      98:	addv	b0, v0.8b
      9c:	umov	w1, v0.b[0]
      a0:	ldur	x4, [x0, #-24]
      a4:	fmov	d0, x4
      a8:	cnt	v0.8b, v0.8b
      ac:	addv	b0, v0.8b
      b0:	umov	w2, v0.b[0]
      b4:	cmp	w1, w2
      b8:	b.cc	c8 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x50>  // b.lo, b.ul, b.last
      bc:	b.hi	dc <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x64>  // b.pmore
      c0:	cmp	x4, x3
      c4:	b.ls	dc <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x64>  // b.plast
      c8:	str	x4, [x0]
      cc:	sub	x0, x0, #0x18
      d0:	ldp	x4, x5, [x0, #8]
      d4:	stp	x4, x5, [x0, #32]
      d8:	b	a0 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0+0x28>
      dc:	str	x3, [x0]
      e0:	ldp	x2, x3, [sp, #16]
      e4:	stp	x2, x3, [x0, #8]
      e8:	add	sp, sp, #0x20
      ec:	ret

00000000000000f0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>:
      f0:	cmp	x1, x0
      f4:	b.eq	118 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x28>  // b.none
      f8:	add	x7, x0, #0x18
      fc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     100:	mov	x6, x0
     104:	mov	x8, x1
     108:	mov	x4, x7
     10c:	cmp	x1, x7
     110:	movk	x9, #0xaaab
     114:	b.ne	1a8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xb8>  // b.any
     118:	ret
     11c:	ldp	x0, x1, [sp, #32]
     120:	str	x3, [x6]
     124:	stp	x0, x1, [x6, #8]
     128:	mov	x4, x7
     12c:	cmp	x8, x7
     130:	b.eq	1a0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xb0>  // b.none
     134:	mov	x0, x7
     138:	mov	x1, x6
     13c:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     140:	add	x7, x7, #0x18
     144:	mov	x2, x7
     148:	tst	w0, #0xff
     14c:	b.eq	194 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xa4>  // b.none
     150:	ldp	x0, x1, [x4]
     154:	stp	x0, x1, [sp, #24]
     158:	ldr	x3, [x4]
     15c:	ldr	x0, [x4, #16]
     160:	sub	x4, x4, x6
     164:	str	x0, [sp, #40]
     168:	asr	x4, x4, #3
     16c:	mul	x4, x4, x9
     170:	cmp	x4, #0x0
     174:	b.le	11c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x2c>
     178:	ldur	x0, [x2, #-48]
     17c:	stur	x0, [x2, #-24]
     180:	ldp	x0, x1, [x2, #-40]
     184:	sub	x2, x2, #0x18
     188:	sub	x4, x4, #0x1
     18c:	stp	x0, x1, [x2, #8]
     190:	b	170 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x80>
     194:	mov	x0, x4
     198:	bl	78 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>
     19c:	b	128 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x38>
     1a0:	ldp	x29, x30, [sp], #48
     1a4:	ret
     1a8:	stp	x29, x30, [sp, #-48]!
     1ac:	mov	x29, sp
     1b0:	b	134 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x44>

00000000000001b4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>:
     1b4:	sub	x11, x2, #0x1
     1b8:	mov	x5, x0
     1bc:	mov	x0, #0x2                   	// #2
     1c0:	mov	x10, #0x18                  	// #24
     1c4:	mov	x9, x1
     1c8:	mov	x6, x2
     1cc:	sdiv	x11, x11, x0
     1d0:	mov	x8, x3
     1d4:	mov	x4, x1
     1d8:	mov	x12, x10
     1dc:	stp	x29, x30, [sp, #-48]!
     1e0:	mov	x29, sp
     1e4:	cmp	x11, x4
     1e8:	b.le	234 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x80>
     1ec:	add	x7, x4, #0x1
     1f0:	lsl	x7, x7, #1
     1f4:	sub	x13, x7, #0x1
     1f8:	madd	x0, x7, x10, x5
     1fc:	madd	x1, x13, x10, x5
     200:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     204:	tst	w0, #0xff
     208:	csel	x7, x7, x13, eq  // eq = none
     20c:	mul	x4, x4, x12
     210:	add	x2, x5, x4
     214:	mul	x0, x7, x12
     218:	add	x1, x5, x0
     21c:	ldr	x0, [x5, x0]
     220:	str	x0, [x5, x4]
     224:	ldp	x0, x1, [x1, #8]
     228:	mov	x4, x7
     22c:	stp	x0, x1, [x2, #8]
     230:	b	1e4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x30>
     234:	tbnz	w6, #0, 278 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xc4>
     238:	sub	x6, x6, #0x2
     23c:	mov	x2, #0x2                   	// #2
     240:	sdiv	x6, x6, x2
     244:	cmp	x4, x6
     248:	b.ne	278 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xc4>  // b.any
     24c:	lsl	x2, x4, #1
     250:	mov	x0, #0x18                  	// #24
     254:	mul	x1, x4, x0
     258:	add	x4, x2, #0x1
     25c:	madd	x0, x2, x0, x0
     260:	add	x3, x5, x1
     264:	add	x2, x5, x0
     268:	ldr	x0, [x5, x0]
     26c:	str	x0, [x5, x1]
     270:	ldp	x0, x1, [x2, #8]
     274:	stp	x0, x1, [x3, #8]
     278:	mov	x3, #0x2                   	// #2
     27c:	ldp	x0, x1, [x8]
     280:	stp	x0, x1, [sp, #24]
     284:	mov	x6, x3
     288:	ldr	x1, [x8]
     28c:	fmov	d0, x1
     290:	ldr	x0, [x8, #16]
     294:	cnt	v0.8b, v0.8b
     298:	str	x0, [sp, #40]
     29c:	sub	x0, x4, #0x1
     2a0:	mov	x8, #0x18                  	// #24
     2a4:	sdiv	x0, x0, x3
     2a8:	addv	b0, v0.8b
     2ac:	umov	w2, v0.b[0]
     2b0:	cmp	x9, x4
     2b4:	b.ge	30c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x158>  // b.tcont
     2b8:	mul	x3, x0, x8
     2bc:	add	x10, x5, x3
     2c0:	ldr	x7, [x5, x3]
     2c4:	fmov	d0, x7
     2c8:	cnt	v0.8b, v0.8b
     2cc:	addv	b0, v0.8b
     2d0:	umov	w3, v0.b[0]
     2d4:	cmp	w3, w2
     2d8:	b.cc	2e8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x134>  // b.lo, b.ul, b.last
     2dc:	b.hi	30c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x158>  // b.pmore
     2e0:	cmp	x7, x1
     2e4:	b.cs	30c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x158>  // b.hs, b.nlast
     2e8:	mul	x4, x4, x8
     2ec:	ldp	x10, x11, [x10, #8]
     2f0:	add	x3, x5, x4
     2f4:	str	x7, [x5, x4]
     2f8:	mov	x4, x0
     2fc:	stp	x10, x11, [x3, #8]
     300:	sub	x3, x0, #0x1
     304:	sdiv	x0, x3, x6
     308:	b	2b0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xfc>
     30c:	mov	x0, #0x18                  	// #24
     310:	ldp	x2, x3, [sp, #32]
     314:	mul	x4, x4, x0
     318:	add	x0, x5, x4
     31c:	str	x1, [x5, x4]
     320:	stp	x2, x3, [x0, #8]
     324:	ldp	x29, x30, [sp], #48
     328:	ret

000000000000032c <_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_SS_RT0_.isra.0>:
     32c:	stp	x29, x30, [sp, #-80]!
     330:	sub	x1, x1, x0
     334:	mov	x29, sp
     338:	ldr	x5, [x0]
     33c:	asr	x1, x1, #3
     340:	ldp	x8, x9, [x0, #8]
     344:	add	x3, sp, #0x10
     348:	ldp	x6, x7, [x2]
     34c:	str	x5, [x2]
     350:	ldr	x4, [x2, #16]
     354:	stp	x8, x9, [x2, #8]
     358:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     35c:	movk	x2, #0xaaab
     360:	stp	x6, x7, [sp, #16]
     364:	mul	x2, x1, x2
     368:	mov	x1, #0x0                   	// #0
     36c:	str	x4, [sp, #32]
     370:	stp	x6, x7, [sp, #56]
     374:	str	x4, [sp, #72]
     378:	bl	1b4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     37c:	ldp	x29, x30, [sp], #80
     380:	ret

0000000000000384 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
     384:	stp	x29, x30, [sp, #-144]!
     388:	mov	x29, sp
     38c:	stp	x19, x20, [sp, #16]
     390:	mov	x19, x1
     394:	ldr	w1, [x2]
     398:	stp	x23, x24, [sp, #48]
     39c:	mov	x24, x0
     3a0:	ldr	x0, [x0, #8]
     3a4:	stp	x21, x22, [sp, #32]
     3a8:	mov	w22, w3
     3ac:	mov	x21, x2
     3b0:	stp	x25, x26, [sp, #64]
     3b4:	mov	w25, #0x0                   	// #0
     3b8:	stp	x27, x28, [sp, #80]
     3bc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     3c0:	mov	x20, x0
     3c4:	ldr	x0, [x24]
     3c8:	mov	w1, w22
     3cc:	ldr	x0, [x0, #152]
     3d0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     3d4:	mov	x23, x0
     3d8:	ldr	x0, [x20, #32]
     3dc:	ldrb	w22, [x20, #4]
     3e0:	cbz	x0, 3f4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x70>
     3e4:	ldrh	w1, [x0, w25, uxtw #1]
     3e8:	cbz	w1, 3f4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x70>
     3ec:	add	w25, w25, #0x1
     3f0:	b	3e4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x60>
     3f4:	ldr	x1, [x20, #8]
     3f8:	mov	w27, #0x0                   	// #0
     3fc:	ldrh	w0, [x23, #16]
     400:	mov	w28, #0x0                   	// #0
     404:	str	w0, [sp, #104]
     408:	add	w0, w22, w25
     40c:	ubfx	w1, w1, #2, #1
     410:	ldr	w26, [x21, #24]
     414:	add	w1, w0, w1
     418:	str	w0, [sp, #116]
     41c:	ldrh	w0, [x20, #2]
     420:	sub	w0, w26, w0
     424:	str	w0, [sp, #112]
     428:	add	w1, w1, w0
     42c:	mov	x0, x19
     430:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     434:	add	x0, x21, #0x10
     438:	str	x0, [sp, #120]
     43c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     440:	ldr	x0, [x0]
     444:	str	x0, [sp, #128]
     448:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     44c:	add	x0, x0, #0x0
     450:	str	x0, [sp, #136]
     454:	ldr	w0, [x21, #24]
     458:	cmp	w27, w0
     45c:	b.cs	4b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x130>  // b.hs, b.nlast
     460:	cmp	w28, w22
     464:	b.cs	4b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x130>  // b.hs, b.nlast
     468:	ldr	x0, [sp, #120]
     46c:	mov	w1, w27
     470:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     474:	ldrb	w0, [x0]
     478:	cmp	w0, #0x1
     47c:	b.ne	608 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x284>  // b.any
     480:	mov	w1, w28
     484:	mov	x0, x19
     488:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     48c:	mov	x26, x0
     490:	ldr	w0, [sp, #104]
     494:	str	w27, [x26]
     498:	cmp	w28, w0
     49c:	b.cs	610 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x28c>  // b.hs, b.nlast
     4a0:	ldrh	w0, [x23, #16]
     4a4:	ldr	x1, [x24]
     4a8:	cmp	w28, w0
     4ac:	b.cc	570 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1ec>  // b.lo, b.ul, b.last
     4b0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     4b4:	cmp	w28, w22
     4b8:	mov	x26, #0x0                   	// #0
     4bc:	b.ne	620 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x29c>  // b.any
     4c0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     4c4:	adrp	x27, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     4c8:	add	x28, x27, #0x0
     4cc:	ldr	x0, [x0]
     4d0:	str	x0, [sp, #120]
     4d4:	cmp	w26, w25
     4d8:	b.cs	6f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x374>  // b.hs, b.nlast
     4dc:	mov	w1, w22
     4e0:	mov	x0, x19
     4e4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     4e8:	mov	x27, x0
     4ec:	mvn	w0, w26
     4f0:	str	w0, [x27]
     4f4:	ldr	x0, [x20, #32]
     4f8:	ldrh	w3, [x0, x26, lsl #1]
     4fc:	ldr	w0, [sp, #104]
     500:	strh	w3, [x27, #8]
     504:	cmp	w0, w22
     508:	b.ls	640 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2bc>  // b.plast
     50c:	ldrh	w0, [x23, #16]
     510:	ldr	x1, [x24]
     514:	cmp	w22, w0
     518:	b.cs	4b0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x12c>  // b.hs, b.nlast
     51c:	ldrh	w0, [x23, #14]
     520:	ldr	x1, [x1, #136]
     524:	add	w0, w0, w22
     528:	lsl	x5, x0, #2
     52c:	add	x0, x1, x0, lsl #2
     530:	ldrsh	w1, [x1, x5]
     534:	tbz	w1, #31, 53c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1b8>
     538:	ldr	w1, [x19, #312]
     53c:	ldrh	w0, [x0, #2]
     540:	str	w1, [x27, #4]
     544:	str	w0, [x27, #12]
     548:	strb	wzr, [x27, #16]
     54c:	cbnz	w3, 650 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2cc>
     550:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     554:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     558:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     55c:	add	x3, x3, #0x0
     560:	add	x1, x1, #0x0
     564:	add	x0, x0, #0x0
     568:	mov	w2, #0x166                 	// #358
     56c:	b	63c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2b8>
     570:	ldrh	w0, [x23, #14]
     574:	ldr	x1, [x1, #136]
     578:	add	w0, w0, w28
     57c:	lsl	x4, x0, #2
     580:	add	x0, x1, x0, lsl #2
     584:	ldrsh	w1, [x1, x4]
     588:	tbz	w1, #31, 590 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x20c>
     58c:	ldr	w1, [x19, #312]
     590:	ldrh	w0, [x0, #2]
     594:	str	w1, [x26, #4]
     598:	str	w0, [x26, #12]
     59c:	ldr	x0, [sp, #128]
     5a0:	strb	wzr, [x26, #16]
     5a4:	ldrb	w0, [x0]
     5a8:	cbz	w0, 604 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x280>
     5ac:	ldr	x0, [sp, #136]
     5b0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     5b4:	tst	w0, #0xff
     5b8:	b.eq	604 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x280>  // b.none
     5bc:	bl	0 <_ZN4llvm4dbgsEv>
     5c0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5c4:	add	x1, x1, #0x0
     5c8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5cc:	ldrsw	x1, [x26]
     5d0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     5d4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5d8:	add	x1, x1, #0x0
     5dc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5e0:	ldr	w1, [x26, #4]
     5e4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5e8:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5ec:	add	x1, x1, #0x0
     5f0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     5f4:	ldr	w1, [x26, #12]
     5f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5fc:	mov	w1, #0xa                   	// #10
     600:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     604:	add	w28, w28, #0x1
     608:	add	w27, w27, #0x1
     60c:	b	454 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd0>
     610:	ldr	w0, [x19, #312]
     614:	str	w0, [x26, #4]
     618:	str	wzr, [x26, #12]
     61c:	b	59c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x218>
     620:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     624:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     628:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     62c:	add	x3, x3, #0x0
     630:	add	x1, x1, #0x0
     634:	add	x0, x0, #0x0
     638:	mov	w2, #0x151                 	// #337
     63c:	bl	0 <__assert_fail>
     640:	ldr	w0, [x19, #312]
     644:	str	w0, [x27, #4]
     648:	str	wzr, [x27, #12]
     64c:	b	548 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1c4>
     650:	ldr	x0, [sp, #120]
     654:	ldrb	w0, [x0]
     658:	cbz	w0, 6ec <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x368>
     65c:	mov	x0, x28
     660:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     664:	tst	w0, #0xff
     668:	b.eq	6ec <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x368>  // b.none
     66c:	bl	0 <_ZN4llvm4dbgsEv>
     670:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     674:	add	x1, x1, #0x0
     678:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     67c:	ldr	w1, [x27]
     680:	mvn	w1, w1
     684:	sxtw	x1, w1
     688:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     68c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     690:	add	x1, x1, #0x0
     694:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     698:	mov	x3, x0
     69c:	ldrh	w1, [x27, #8]
     6a0:	ldr	x0, [x24, #16]
     6a4:	str	x3, [sp, #128]
     6a8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6ac:	mov	x1, x0
     6b0:	ldr	x3, [sp, #128]
     6b4:	mov	x0, x3
     6b8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6bc:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6c0:	add	x1, x1, #0x0
     6c4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6c8:	ldr	w1, [x27, #4]
     6cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6d0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6d4:	add	x1, x1, #0x0
     6d8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6dc:	ldr	w1, [x27, #12]
     6e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6e4:	mov	w1, #0xa                   	// #10
     6e8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     6ec:	add	x26, x26, #0x1
     6f0:	add	w22, w22, #0x1
     6f4:	b	4d4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x150>
     6f8:	ldr	x0, [x20, #8]
     6fc:	tbz	w0, #2, 79c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x418>
     700:	ldr	w1, [sp, #116]
     704:	mov	x0, x19
     708:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     70c:	mov	x22, x0
     710:	ldrh	w0, [x20, #2]
     714:	sub	w0, w0, #0x1
     718:	str	w0, [x22]
     71c:	ldr	w0, [x19, #312]
     720:	str	w0, [x22, #4]
     724:	mov	w0, #0x1                   	// #1
     728:	strb	w0, [x22, #16]
     72c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     730:	str	wzr, [x22, #12]
     734:	ldr	x0, [x0]
     738:	ldrb	w0, [x0]
     73c:	cbz	w0, 79c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x418>
     740:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     744:	add	x0, x0, #0x0
     748:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     74c:	tst	w0, #0xff
     750:	b.eq	79c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x418>  // b.none
     754:	bl	0 <_ZN4llvm4dbgsEv>
     758:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     75c:	add	x1, x1, #0x0
     760:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     764:	ldrsw	x1, [x22]
     768:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     76c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     770:	add	x1, x1, #0x0
     774:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     778:	ldr	w1, [x22, #4]
     77c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     780:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     784:	add	x1, x1, #0x0
     788:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     78c:	ldr	w1, [x22, #12]
     790:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     794:	mov	w1, #0xa                   	// #10
     798:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     79c:	ldr	w0, [sp, #112]
     7a0:	cbz	w0, 8d4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x550>
     7a4:	ldr	x0, [x20, #8]
     7a8:	tbz	w0, #19, 8a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x524>
     7ac:	mov	x1, #0x840000              	// #8650752
     7b0:	tst	x0, x1
     7b4:	cset	w24, eq  // eq = none
     7b8:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
     7bc:	ldr	w1, [sp, #116]
     7c0:	ubfx	w0, w0, #2, #1
     7c4:	adrp	x23, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     7c8:	ldr	x22, [x22]
     7cc:	add	x21, x21, #0x10
     7d0:	add	x23, x23, #0x0
     7d4:	add	w28, w0, w1
     7d8:	ldrh	w26, [x20, #2]
     7dc:	mov	w20, #0x0                   	// #0
     7e0:	ldr	w0, [sp, #112]
     7e4:	cmp	w24, #0x0
     7e8:	add	w25, w20, w26
     7ec:	mov	w2, w28
     7f0:	ccmp	w20, w0, #0x2, eq  // eq = none
     7f4:	b.cs	8b0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x52c>  // b.hs, b.nlast
     7f8:	mov	w1, w25
     7fc:	mov	x0, x21
     800:	str	x2, [sp, #104]
     804:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     808:	ldrb	w0, [x0]
     80c:	ldr	x2, [sp, #104]
     810:	cmp	w0, #0x1
     814:	b.ne	8a0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x51c>  // b.any
     818:	mov	x1, x2
     81c:	mov	x0, x19
     820:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     824:	mov	x27, x0
     828:	str	w25, [x0]
     82c:	add	w28, w28, #0x1
     830:	ldr	w0, [x19, #312]
     834:	str	w0, [x27, #4]
     838:	ldrb	w0, [x22]
     83c:	str	wzr, [x27, #12]
     840:	strb	wzr, [x27, #16]
     844:	cbz	w0, 8a0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x51c>
     848:	mov	x0, x23
     84c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     850:	tst	w0, #0xff
     854:	b.eq	8a0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x51c>  // b.none
     858:	bl	0 <_ZN4llvm4dbgsEv>
     85c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     860:	add	x1, x1, #0x0
     864:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     868:	ldrsw	x1, [x27]
     86c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     870:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     874:	add	x1, x1, #0x0
     878:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     87c:	ldr	w1, [x27, #4]
     880:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     884:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     888:	add	x1, x1, #0x0
     88c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     890:	ldr	w1, [x27, #12]
     894:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     898:	mov	w1, #0xa                   	// #10
     89c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     8a0:	add	w20, w20, #0x1
     8a4:	b	7e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x45c>
     8a8:	mov	w24, #0x0                   	// #0
     8ac:	b	7b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x434>
     8b0:	mov	x0, x19
     8b4:	mov	x1, x2
     8b8:	ldp	x19, x20, [sp, #16]
     8bc:	ldp	x21, x22, [sp, #32]
     8c0:	ldp	x23, x24, [sp, #48]
     8c4:	ldp	x25, x26, [sp, #64]
     8c8:	ldp	x27, x28, [sp, #80]
     8cc:	ldp	x29, x30, [sp], #144
     8d0:	b	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldp	x21, x22, [sp, #32]
     8dc:	ldp	x23, x24, [sp, #48]
     8e0:	ldp	x25, x26, [sp, #64]
     8e4:	ldp	x27, x28, [sp, #80]
     8e8:	ldp	x29, x30, [sp], #144
     8ec:	ret

00000000000008f0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
     8f0:	stp	x29, x30, [sp, #-144]!
     8f4:	mov	x29, sp
     8f8:	stp	x19, x20, [sp, #16]
     8fc:	mov	x20, x1
     900:	ldr	w1, [x2]
     904:	str	x0, [sp, #96]
     908:	ldr	x0, [x0, #8]
     90c:	stp	x21, x22, [sp, #32]
     910:	mov	x22, x2
     914:	stp	x23, x24, [sp, #48]
     918:	mov	w23, #0x0                   	// #0
     91c:	stp	x25, x26, [sp, #64]
     920:	mov	w25, w3
     924:	stp	x27, x28, [sp, #80]
     928:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     92c:	ldrh	w1, [x0, #2]
     930:	ldrb	w24, [x0, #4]
     934:	mov	x19, x0
     938:	ldr	x0, [x0, #24]
     93c:	sub	w24, w1, w24
     940:	cbz	x0, 954 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x64>
     944:	ldrh	w2, [x0, w23, uxtw #1]
     948:	cbz	w2, 954 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x64>
     94c:	add	w23, w23, #0x1
     950:	b	944 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x54>
     954:	ldr	x0, [x19, #8]
     958:	add	x20, x20, #0x60
     95c:	mov	w26, #0x0                   	// #0
     960:	mov	w21, #0x0                   	// #0
     964:	ubfx	w0, w0, #2, #1
     968:	sub	w24, w24, w0
     96c:	ldr	w0, [x22, #24]
     970:	sub	w0, w0, w1
     974:	str	w0, [sp, #104]
     978:	add	w0, w24, w23
     97c:	str	w0, [sp, #108]
     980:	ldr	w1, [sp, #104]
     984:	add	w1, w0, w1
     988:	mov	x0, x20
     98c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     990:	ldrb	w0, [x19, #4]
     994:	str	w0, [sp, #112]
     998:	add	x0, x22, #0x10
     99c:	str	x0, [sp, #120]
     9a0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     9a4:	ldr	x0, [x0]
     9a8:	str	x0, [sp, #128]
     9ac:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     9b0:	add	x0, x0, #0x0
     9b4:	str	x0, [sp, #136]
     9b8:	ldr	w0, [sp, #112]
     9bc:	cmp	w24, w26
     9c0:	add	w28, w26, w0
     9c4:	b.eq	a54 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x164>  // b.none
     9c8:	ldr	x0, [sp, #120]
     9cc:	mov	w1, w28
     9d0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     9d4:	ldrb	w0, [x0]
     9d8:	cmp	w0, #0x1
     9dc:	b.ne	a4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x15c>  // b.any
     9e0:	mov	w1, w21
     9e4:	mov	x0, x20
     9e8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     9ec:	mov	x27, x0
     9f0:	ldr	x0, [sp, #128]
     9f4:	add	w21, w21, #0x1
     9f8:	str	w25, [x27, #12]
     9fc:	ldrb	w0, [x0]
     a00:	stp	w28, w26, [x27]
     a04:	cbz	w0, a4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x15c>
     a08:	ldr	x0, [sp, #136]
     a0c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a10:	tst	w0, #0xff
     a14:	b.eq	a4c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x15c>  // b.none
     a18:	bl	0 <_ZN4llvm4dbgsEv>
     a1c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a20:	add	x1, x1, #0x0
     a24:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a28:	ldrsw	x1, [x27]
     a2c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     a30:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a34:	add	x1, x1, #0x0
     a38:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a3c:	ldr	w1, [x27, #4]
     a40:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a44:	mov	w1, #0xa                   	// #10
     a48:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a4c:	add	w26, w26, #0x1
     a50:	b	9b8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc8>
     a54:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     a58:	adrp	x26, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a5c:	mov	x28, #0x0                   	// #0
     a60:	adrp	x27, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a64:	ldr	x0, [x0]
     a68:	str	x0, [sp, #112]
     a6c:	add	x0, x26, #0x0
     a70:	str	x0, [sp, #120]
     a74:	cmp	w23, w28
     a78:	b.ls	b3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x24c>  // b.plast
     a7c:	add	w1, w21, w28
     a80:	mov	x0, x20
     a84:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     a88:	mov	x26, x0
     a8c:	mvn	w0, w28
     a90:	str	w0, [x26]
     a94:	add	w0, w24, w28
     a98:	str	w0, [x26, #4]
     a9c:	ldr	x0, [x19, #24]
     aa0:	ldrh	w0, [x0, x28, lsl #1]
     aa4:	strh	w0, [x26, #8]
     aa8:	ldr	x0, [sp, #112]
     aac:	str	w25, [x26, #12]
     ab0:	ldrb	w0, [x0]
     ab4:	cbz	w0, b34 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x244>
     ab8:	ldr	x0, [sp, #120]
     abc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     ac0:	tst	w0, #0xff
     ac4:	b.eq	b34 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x244>  // b.none
     ac8:	bl	0 <_ZN4llvm4dbgsEv>
     acc:	add	x1, x27, #0x0
     ad0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     ad4:	ldr	w1, [x26]
     ad8:	mvn	w1, w1
     adc:	sxtw	x1, w1
     ae0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     ae4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     ae8:	add	x1, x1, #0x0
     aec:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     af0:	ldr	w1, [x26, #4]
     af4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     af8:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     afc:	add	x1, x1, #0x0
     b00:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     b04:	mov	x4, x0
     b08:	ldr	x0, [sp, #96]
     b0c:	str	x4, [sp, #128]
     b10:	ldrh	w1, [x26, #8]
     b14:	ldr	x0, [x0, #16]
     b18:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     b1c:	mov	x1, x0
     b20:	ldr	x4, [sp, #128]
     b24:	mov	x0, x4
     b28:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     b2c:	mov	w1, #0xa                   	// #10
     b30:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     b34:	add	x28, x28, #0x1
     b38:	b	a74 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x184>
     b3c:	ldr	x0, [x19, #8]
     b40:	add	w21, w21, w23
     b44:	tbz	w0, #18, c28 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x338>
     b48:	mov	x1, #0x880000              	// #8912896
     b4c:	tst	x0, x1
     b50:	cset	w23, eq  // eq = none
     b54:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
     b58:	ldrh	w0, [x19, #2]
     b5c:	adrp	x24, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     b60:	add	x22, x22, #0x10
     b64:	ldr	x27, [x27]
     b68:	add	x24, x24, #0x0
     b6c:	mov	w19, #0x0                   	// #0
     b70:	str	w0, [sp, #96]
     b74:	ldr	w0, [sp, #96]
     b78:	cmp	w23, #0x0
     b7c:	mov	w2, w21
     b80:	add	w26, w19, w0
     b84:	ldr	w0, [sp, #104]
     b88:	ccmp	w19, w0, #0x2, eq  // eq = none
     b8c:	b.cs	c30 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x340>  // b.hs, b.nlast
     b90:	mov	w1, w26
     b94:	mov	x0, x22
     b98:	str	x2, [sp, #112]
     b9c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     ba0:	ldrb	w0, [x0]
     ba4:	ldr	x2, [sp, #112]
     ba8:	cmp	w0, #0x1
     bac:	b.ne	c20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x330>  // b.any
     bb0:	mov	x1, x2
     bb4:	mov	x0, x20
     bb8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     bbc:	mov	x28, x0
     bc0:	ldr	w0, [sp, #108]
     bc4:	add	w21, w21, #0x1
     bc8:	add	w0, w0, w19
     bcc:	stp	w26, w0, [x28]
     bd0:	ldrb	w0, [x27]
     bd4:	str	w25, [x28, #12]
     bd8:	cbz	w0, c20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x330>
     bdc:	mov	x0, x24
     be0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     be4:	tst	w0, #0xff
     be8:	b.eq	c20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x330>  // b.none
     bec:	bl	0 <_ZN4llvm4dbgsEv>
     bf0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     bf4:	add	x1, x1, #0x0
     bf8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     bfc:	ldrsw	x1, [x28]
     c00:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     c04:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     c08:	add	x1, x1, #0x0
     c0c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     c10:	ldr	w1, [x28, #4]
     c14:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     c18:	mov	w1, #0xa                   	// #10
     c1c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     c20:	add	w19, w19, #0x1
     c24:	b	b74 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x284>
     c28:	mov	w23, #0x0                   	// #0
     c2c:	b	b54 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x264>
     c30:	mov	x0, x20
     c34:	mov	x1, x2
     c38:	ldp	x19, x20, [sp, #16]
     c3c:	ldp	x21, x22, [sp, #32]
     c40:	ldp	x23, x24, [sp, #48]
     c44:	ldp	x25, x26, [sp, #64]
     c48:	ldp	x27, x28, [sp, #80]
     c4c:	ldp	x29, x30, [sp], #144
     c50:	b	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>

0000000000000c54 <_ZNKSt14default_deleteIKN4llvm3mca9InstrDescEEclEPS3_.isra.0.part.0>:
     c54:	stp	x29, x30, [sp, #-32]!
     c58:	mov	x29, sp
     c5c:	str	x19, [sp, #16]
     c60:	mov	x19, x0
     c64:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     c68:	mov	x0, x19
     c6c:	mov	x1, #0x150                 	// #336
     c70:	ldr	x19, [sp, #16]
     c74:	ldp	x29, x30, [sp], #32
     c78:	b	0 <_ZdlPvm>

0000000000000c7c <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
     c7c:	stp	x29, x30, [sp, #-48]!
     c80:	mov	x29, sp
     c84:	stp	x19, x20, [sp, #16]
     c88:	mov	x19, x0
     c8c:	mov	x0, x1
     c90:	stp	x1, x2, [x19]
     c94:	mov	x2, #0x800000000           	// #34359738368
     c98:	add	x1, x19, #0x30
     c9c:	stp	x1, x2, [x19, #32]
     ca0:	mov	w2, #0x101                 	// #257
     ca4:	ldr	x0, [x0, #152]
     ca8:	str	xzr, [x19, #128]
     cac:	str	wzr, [x19, #136]
     cb0:	str	xzr, [x19, #160]
     cb4:	str	wzr, [x19, #168]
     cb8:	stp	x3, x4, [x19, #16]
     cbc:	ldr	w20, [x0, #48]
     cc0:	stp	xzr, xzr, [x19, #112]
     cc4:	stp	xzr, xzr, [x19, #144]
     cc8:	strh	w2, [x19, #176]
     ccc:	str	x21, [sp, #32]
     cd0:	cbz	x20, d1c <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xa0>
     cd4:	add	x21, x19, #0x20
     cd8:	cmp	x20, #0x8
     cdc:	b.ls	cf0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x74>  // b.plast
     ce0:	mov	x2, x20
     ce4:	mov	x0, x21
     ce8:	mov	x3, #0x8                   	// #8
     cec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     cf0:	ldr	x2, [x19, #32]
     cf4:	ldr	w1, [x19, #40]
     cf8:	add	x1, x2, x1, lsl #3
     cfc:	add	x2, x2, x20, lsl #3
     d00:	cmp	x2, x1
     d04:	b.eq	d10 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x94>  // b.none
     d08:	str	xzr, [x1], #8
     d0c:	b	d00 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x84>
     d10:	mov	x1, x20
     d14:	mov	x0, x21
     d18:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     d1c:	ldr	x0, [x19]
     d20:	ldr	w2, [x19, #40]
     d24:	ldr	x1, [x19, #32]
     d28:	ldp	x19, x20, [sp, #16]
     d2c:	ldr	x21, [sp, #32]
     d30:	ldp	x29, x30, [sp], #48
     d34:	ldr	x0, [x0, #152]
     d38:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>

0000000000000d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>:
     d3c:	stp	x29, x30, [sp, #-32]!
     d40:	mov	x29, sp
     d44:	stp	x19, x20, [sp, #16]
     d48:	mov	x20, x0
     d4c:	add	x0, x0, #0x10
     d50:	mov	x19, x1
     d54:	str	x0, [x20]
     d58:	cbz	x1, d80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0+0x44>
     d5c:	mov	x0, x1
     d60:	bl	0 <strlen>
     d64:	add	x2, x19, x0
     d68:	mov	x1, x19
     d6c:	mov	x0, x20
     d70:	ldp	x19, x20, [sp, #16]
     d74:	mov	w3, #0x0                   	// #0
     d78:	ldp	x29, x30, [sp], #32
     d7c:	b	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     d80:	mov	x2, #0xffffffffffffffff    	// #-1
     d84:	b	d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0+0x2c>

0000000000000d88 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
     d88:	stp	x29, x30, [sp, #-96]!
     d8c:	mov	x29, sp
     d90:	ldr	w0, [x1, #316]
     d94:	stp	x19, x20, [sp, #16]
     d98:	mov	x20, x8
     d9c:	add	x19, sp, #0x40
     da0:	stp	x21, x22, [sp, #32]
     da4:	cbz	w0, ddc <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x54>
     da8:	mov	x0, #0x1                   	// #1
     dac:	str	x0, [sp, #64]
     db0:	mov	x1, x19
     db4:	str	xzr, [x20]
     db8:	mov	x0, x20
     dbc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     dc0:	mov	x0, x19
     dc4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     dc8:	mov	x0, x20
     dcc:	ldp	x19, x20, [sp, #16]
     dd0:	ldp	x21, x22, [sp, #32]
     dd4:	ldp	x29, x30, [sp], #96
     dd8:	ret
     ddc:	ldrb	w0, [x1, #324]
     de0:	mov	x22, x2
     de4:	cbnz	w0, e20 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x98>
     de8:	ldr	x2, [x1, #288]
     dec:	ldrb	w0, [x1, #325]
     df0:	cmp	x2, #0x0
     df4:	cset	w3, eq  // eq = none
     df8:	eor	w2, w0, #0x1
     dfc:	tst	w3, w2
     e00:	b.eq	e1c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x94>  // b.none
     e04:	ldr	w0, [x1, #184]
     e08:	cbz	w0, da8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x20>
     e0c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e10:	mov	x0, #0x65                  	// #101
     e14:	add	x1, x1, #0x0
     e18:	b	e2c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xa4>
     e1c:	cbz	w0, e0c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x84>
     e20:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e24:	add	x1, x1, #0x0
     e28:	mov	x0, #0x6d                  	// #109
     e2c:	add	x2, x19, #0x10
     e30:	str	x2, [sp, #64]
     e34:	add	x2, x1, x0
     e38:	mov	w3, #0x0                   	// #0
     e3c:	mov	x0, x19
     e40:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e44:	mov	x0, #0x30                  	// #48
     e48:	bl	0 <_Znwm>
     e4c:	mov	x21, x0
     e50:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e54:	ldr	x1, [x1]
     e58:	add	x1, x1, #0x10
     e5c:	str	x1, [x0], #8
     e60:	mov	x1, x19
     e64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
     e68:	str	x22, [x21, #40]
     e6c:	mov	x0, x19
     e70:	str	x21, [sp, #56]
     e74:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
     e78:	mov	x1, x19
     e7c:	ldr	x0, [sp, #56]
     e80:	stp	xzr, x0, [sp, #56]
     e84:	mov	x0, x20
     e88:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e8c:	mov	x0, x19
     e90:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e94:	add	x0, sp, #0x38
     e98:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     e9c:	b	dc8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x40>

0000000000000ea0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>:
     ea0:	stp	x29, x30, [sp, #-160]!
     ea4:	mov	x29, sp
     ea8:	stp	x19, x20, [sp, #16]
     eac:	mov	x19, x0
     eb0:	mov	x20, x1
     eb4:	stp	x21, x22, [sp, #32]
     eb8:	mov	x21, x2
     ebc:	stp	x23, x24, [sp, #48]
     ec0:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     ec4:	mov	w23, w3
     ec8:	stp	x25, x26, [sp, #64]
     ecc:	mov	x25, #0x18                  	// #24
     ed0:	add	x22, x0, x25
     ed4:	movk	x24, #0xaaab
     ed8:	str	x27, [sp, #80]
     edc:	sub	x14, x20, x19
     ee0:	cmp	x14, #0x180
     ee4:	b.le	1068 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1c8>
     ee8:	asr	x14, x14, #3
     eec:	mul	x14, x14, x24
     ef0:	cbnz	x21, f64 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xc4>
     ef4:	sub	x15, x14, #0x2
     ef8:	add	x18, sp, #0x60
     efc:	mov	x21, #0x18                  	// #24
     f00:	asr	x15, x15, #1
     f04:	madd	x0, x15, x21, x19
     f08:	mov	x1, x15
     f0c:	ldp	x2, x3, [x0]
     f10:	stp	x2, x3, [sp, #136]
     f14:	ldr	x0, [x0, #16]
     f18:	str	x0, [sp, #152]
     f1c:	stp	x2, x3, [x18]
     f20:	mov	x3, x18
     f24:	mov	x2, x14
     f28:	str	x0, [x18, #16]
     f2c:	mov	x0, x19
     f30:	bl	1b4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     f34:	cbz	x15, f40 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xa0>
     f38:	sub	x15, x15, #0x1
     f3c:	b	f04 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x64>
     f40:	sub	x0, x20, x19
     f44:	sub	x20, x20, #0x18
     f48:	cmp	x0, #0x18
     f4c:	b.le	1068 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1c8>
     f50:	mov	x2, x20
     f54:	mov	x1, x20
     f58:	mov	x0, x19
     f5c:	bl	32c <_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_SS_RT0_.isra.0>
     f60:	b	f40 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xa0>
     f64:	asr	x4, x14, #1
     f68:	sub	x5, x20, #0x18
     f6c:	mov	x0, x22
     f70:	sub	x21, x21, #0x1
     f74:	madd	x4, x4, x25, x19
     f78:	mov	x1, x4
     f7c:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     f80:	mov	x1, x5
     f84:	tst	w0, #0xff
     f88:	b.eq	fc0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x120>  // b.none
     f8c:	mov	x0, x4
     f90:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     f94:	tst	w0, #0xff
     f98:	b.eq	fa4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x104>  // b.none
     f9c:	mov	x1, x4
     fa0:	b	fd4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x134>
     fa4:	mov	x1, x5
     fa8:	mov	x0, x22
     fac:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     fb0:	tst	w0, #0xff
     fb4:	b.eq	fd0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x130>  // b.none
     fb8:	mov	x1, x5
     fbc:	b	fd4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x134>
     fc0:	mov	x0, x22
     fc4:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     fc8:	tst	w0, #0xff
     fcc:	b.eq	103c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x19c>  // b.none
     fd0:	mov	x1, x22
     fd4:	mov	x26, x22
     fd8:	mov	x27, x20
     fdc:	mov	x0, x19
     fe0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
     fe4:	mov	x1, x19
     fe8:	mov	x0, x26
     fec:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
     ff0:	tst	w0, #0xff
     ff4:	b.ne	1060 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1c0>  // b.any
     ff8:	sub	x4, x27, #0x18
     ffc:	mov	x27, x4
    1000:	mov	x1, x4
    1004:	mov	x0, x19
    1008:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
    100c:	sub	x4, x4, #0x18
    1010:	tst	w0, #0xff
    1014:	b.ne	ffc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x15c>  // b.any
    1018:	cmp	x26, x27
    101c:	b.cc	1054 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1b4>  // b.lo, b.ul, b.last
    1020:	mov	x1, x20
    1024:	mov	w3, w23
    1028:	mov	x2, x21
    102c:	mov	x0, x26
    1030:	mov	x20, x26
    1034:	bl	ea0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
    1038:	b	edc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x3c>
    103c:	mov	x1, x5
    1040:	mov	x0, x4
    1044:	bl	28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm3mcaL23initializeUsedResourcesERNS3_9InstrDescERKNS2_16MCSchedClassDescERKNS2_15MCSubtargetInfoENS2_8ArrayRefImEEEUlRKSt4pairImNS3_13ResourceUsageEESI_E_EclINS_17__normal_iteratorIPSG_St6vectorISG_SaISG_EEEESR_EEbT_T0_.isra.0>
    1048:	tst	w0, #0xff
    104c:	b.eq	f9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xfc>  // b.none
    1050:	b	fb8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x118>
    1054:	mov	x1, x27
    1058:	mov	x0, x26
    105c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1060:	add	x26, x26, #0x18
    1064:	b	fe4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x144>
    1068:	ldp	x19, x20, [sp, #16]
    106c:	ldp	x21, x22, [sp, #32]
    1070:	ldp	x23, x24, [sp, #48]
    1074:	ldp	x25, x26, [sp, #64]
    1078:	ldr	x27, [sp, #80]
    107c:	ldp	x29, x30, [sp], #160
    1080:	ret

0000000000001084 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
    1084:	stp	x29, x30, [sp, #-416]!
    1088:	mov	x29, sp
    108c:	stp	x25, x26, [sp, #64]
    1090:	mov	x25, x0
    1094:	ldr	x0, [x0]
    1098:	stp	x19, x20, [sp, #16]
    109c:	stp	x21, x22, [sp, #32]
    10a0:	ldr	x20, [x0, #152]
    10a4:	stp	x23, x24, [sp, #48]
    10a8:	stp	x27, x28, [sp, #80]
    10ac:	ldr	x0, [x20, #40]
    10b0:	str	x8, [sp, #120]
    10b4:	str	d8, [sp, #96]
    10b8:	cbnz	x0, 10dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x58>
    10bc:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    10c0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    10c4:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    10c8:	add	x3, x3, #0x0
    10cc:	add	x1, x1, #0x0
    10d0:	add	x0, x0, #0x0
    10d4:	mov	w2, #0x1fe                 	// #510
    10d8:	bl	0 <__assert_fail>
    10dc:	ldr	x0, [x25, #8]
    10e0:	mov	x28, x1
    10e4:	ldrh	w19, [x1]
    10e8:	mov	w1, w19
    10ec:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    10f0:	ldrh	w1, [x0, #6]
    10f4:	str	w1, [sp, #132]
    10f8:	str	x0, [sp, #136]
    10fc:	mov	x0, x20
    1100:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1104:	ldrh	w0, [x0, #8]
    1108:	and	w0, w0, #0x3fff
    110c:	str	w0, [sp, #184]
    1110:	mov	w0, #0x3ffe                	// #16382
    1114:	ldr	w1, [sp, #184]
    1118:	cmp	w1, w0
    111c:	b.ne	1170 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xec>  // b.any
    1120:	ldr	w21, [x20, #28]
    1124:	mov	x22, x1
    1128:	ldr	w0, [sp, #132]
    112c:	cbz	w0, 21fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1178>
    1130:	mov	x1, x0
    1134:	mov	x0, x20
    1138:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    113c:	ldrh	w0, [x0, #8]
    1140:	and	w0, w0, #0x3fff
    1144:	cmp	w0, w22
    1148:	b.ne	1170 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xec>  // b.any
    114c:	ldr	x0, [x25]
    1150:	mov	w3, w21
    1154:	mov	x2, x28
    1158:	ldr	x1, [x0]
    115c:	ldr	x4, [x1, #16]
    1160:	ldr	w1, [sp, #132]
    1164:	blr	x4
    1168:	str	w0, [sp, #132]
    116c:	b	1128 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa4>
    1170:	ldr	w1, [sp, #132]
    1174:	mov	x0, x20
    1178:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    117c:	str	x0, [sp, #144]
    1180:	ldrh	w0, [x0, #8]
    1184:	mvn	x0, x0
    1188:	tst	x0, #0x3fff
    118c:	b.ne	121c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x198>  // b.any
    1190:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1194:	add	x19, sp, #0x180
    1198:	add	x1, x1, #0x0
    119c:	mov	x0, x19
    11a0:	bl	d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    11a4:	mov	x0, #0x30                  	// #48
    11a8:	bl	0 <_Znwm>
    11ac:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    11b0:	mov	x20, x0
    11b4:	ldr	x1, [x1]
    11b8:	add	x1, x1, #0x10
    11bc:	str	x1, [x0], #8
    11c0:	mov	x1, x19
    11c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    11c8:	str	x28, [x20, #40]
    11cc:	mov	x0, x19
    11d0:	str	x20, [sp, #352]
    11d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    11d8:	add	x20, sp, #0x140
    11dc:	mov	x1, x19
    11e0:	ldr	x0, [sp, #352]
    11e4:	str	xzr, [sp, #352]
    11e8:	str	x0, [sp, #384]
    11ec:	mov	x0, x20
    11f0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    11f4:	mov	x0, x19
    11f8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    11fc:	add	x0, sp, #0x160
    1200:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1204:	ldr	x0, [sp, #120]
    1208:	mov	x1, x20
    120c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1210:	mov	x0, x20
    1214:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1218:	b	1f2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xea8>
    121c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1220:	str	x0, [sp, #168]
    1224:	ldr	x1, [x0]
    1228:	ldrb	w1, [x1]
    122c:	cbz	w1, 1300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27c>
    1230:	adrp	x20, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1234:	add	x0, x20, #0x0
    1238:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    123c:	tst	w0, #0xff
    1240:	b.eq	12c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23c>  // b.none
    1244:	bl	0 <_ZN4llvm4dbgsEv>
    1248:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    124c:	add	x1, x1, #0x0
    1250:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1254:	mov	x21, x0
    1258:	ldr	x0, [x25, #8]
    125c:	ldr	w1, [x0, #24]
    1260:	cmp	w19, w1
    1264:	b.cc	1288 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x204>  // b.lo, b.ul, b.last
    1268:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    126c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1270:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1274:	add	x3, x3, #0x0
    1278:	add	x1, x1, #0x0
    127c:	add	x0, x0, #0x0
    1280:	mov	w2, #0x33                  	// #51
    1284:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1288:	ldr	x1, [x0, #8]
    128c:	ubfiz	x19, x19, #2, #16
    1290:	ldr	w1, [x1, x19]
    1294:	ldr	x19, [x0, #16]
    1298:	adds	x19, x19, x1
    129c:	b.eq	1544 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c0>  // b.none
    12a0:	mov	x0, x19
    12a4:	bl	0 <strlen>
    12a8:	mov	x2, x0
    12ac:	mov	x1, x19
    12b0:	mov	x0, x21
    12b4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    12b8:	mov	w1, #0xa                   	// #10
    12bc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    12c0:	ldr	x0, [sp, #168]
    12c4:	ldr	x0, [x0]
    12c8:	ldrb	w0, [x0]
    12cc:	cbz	w0, 1300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27c>
    12d0:	add	x0, x20, #0x0
    12d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    12d8:	tst	w0, #0xff
    12dc:	b.eq	1300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27c>  // b.none
    12e0:	bl	0 <_ZN4llvm4dbgsEv>
    12e4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    12e8:	add	x1, x1, #0x0
    12ec:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    12f0:	ldr	w1, [sp, #132]
    12f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    12f8:	mov	w1, #0xa                   	// #10
    12fc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1300:	mov	x0, #0x150                 	// #336
    1304:	bl	0 <_Znwm>
    1308:	mov	x19, x0
    130c:	mov	w1, #0x0                   	// #0
    1310:	mov	x2, #0x150                 	// #336
    1314:	bl	0 <memset>
    1318:	add	x0, x19, #0x10
    131c:	add	x1, x19, #0x70
    1320:	str	x0, [x19]
    1324:	mov	x0, #0x400000000           	// #17179869184
    1328:	str	x0, [x19, #8]
    132c:	str	x1, [x19, #96]
    1330:	add	x1, x19, #0xc0
    1334:	str	x0, [x19, #104]
    1338:	stp	x1, x0, [x19, #176]
    133c:	ldr	x0, [sp, #144]
    1340:	str	x1, [sp, #192]
    1344:	ldrh	w0, [x0, #8]
    1348:	and	w0, w0, #0x3fff
    134c:	str	w0, [x19, #316]
    1350:	ldr	w0, [sp, #132]
    1354:	str	w0, [x19, #320]
    1358:	ldr	x0, [sp, #136]
    135c:	ldr	x0, [x0, #8]
    1360:	tbz	w0, #6, 139c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x318>
    1364:	ldrb	w0, [x25, #176]
    1368:	cbz	w0, 139c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x318>
    136c:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1370:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1374:	add	x1, x1, #0x0
    1378:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    137c:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1380:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1384:	add	x1, x1, #0x0
    1388:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    138c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1390:	add	x1, x1, #0x0
    1394:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1398:	strb	wzr, [x25, #176]
    139c:	ldr	x0, [sp, #136]
    13a0:	ldr	x0, [x0, #8]
    13a4:	tbz	w0, #4, 13e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x35c>
    13a8:	ldrb	w0, [x25, #177]
    13ac:	cbz	w0, 13e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x35c>
    13b0:	bl	0 <_ZN4llvm9WithColor7warningEv>
    13b4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13b8:	add	x1, x1, #0x0
    13bc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13c0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13c4:	add	x1, x1, #0x0
    13c8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13cc:	bl	0 <_ZN4llvm9WithColor4noteEv>
    13d0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13d4:	add	x1, x1, #0x0
    13d8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    13dc:	strb	wzr, [x25, #177]
    13e0:	ldr	x0, [sp, #136]
    13e4:	mov	w3, #0x0                   	// #0
    13e8:	ldr	x26, [x25]
    13ec:	mov	x2, #0x0                   	// #0
    13f0:	ldr	x0, [x0, #8]
    13f4:	add	x27, sp, #0x108
    13f8:	add	x24, sp, #0x180
    13fc:	mov	x23, #0x0                   	// #0
    1400:	mov	w22, #0x1                   	// #1
    1404:	ubfx	w1, w0, #18, #1
    1408:	strb	w1, [x19, #324]
    140c:	ubfx	w1, w0, #19, #1
    1410:	ubfx	w0, w0, #23, #1
    1414:	strb	w0, [x19, #326]
    1418:	ldr	x0, [sp, #144]
    141c:	strb	w1, [x19, #325]
    1420:	ldr	x1, [x25, #32]
    1424:	ldrb	w0, [x0, #9]
    1428:	ubfx	x0, x0, #6, #1
    142c:	strb	w0, [x19, #327]
    1430:	ldr	x0, [sp, #144]
    1434:	ldrb	w0, [x0, #9]
    1438:	ubfx	x0, x0, #7, #1
    143c:	strb	w0, [x19, #328]
    1440:	ldr	w0, [x25, #40]
    1444:	stp	x1, x0, [sp, #264]
    1448:	ldr	x0, [x26, #152]
    144c:	stp	xzr, xzr, [sp, #328]
    1450:	str	wzr, [sp, #344]
    1454:	str	x0, [sp, #176]
    1458:	ldr	w0, [x0, #48]
    145c:	str	w0, [sp, #188]
    1460:	add	x0, sp, #0x118
    1464:	str	x0, [sp, #152]
    1468:	ldr	w1, [sp, #188]
    146c:	stp	xzr, xzr, [sp, #296]
    1470:	stp	xzr, xzr, [sp, #312]
    1474:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1478:	ldr	x0, [sp, #144]
    147c:	str	wzr, [sp, #160]
    1480:	ldrh	w0, [x0, #12]
    1484:	str	w0, [sp, #240]
    1488:	add	x0, sp, #0x140
    148c:	str	x0, [sp, #200]
    1490:	add	x0, sp, #0x128
    1494:	str	x0, [sp, #208]
    1498:	ldr	w0, [sp, #240]
    149c:	cmp	w0, w23
    14a0:	b.ls	163c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5b8>  // b.plast
    14a4:	ldr	x0, [sp, #144]
    14a8:	ldrh	w20, [x0, #10]
    14ac:	ldr	x0, [x26, #128]
    14b0:	add	x20, x20, x23
    14b4:	lsl	x1, x20, #2
    14b8:	add	x20, x0, x20, lsl #2
    14bc:	ldrh	w1, [x0, x1]
    14c0:	ldr	x0, [sp, #176]
    14c4:	str	w1, [sp, #216]
    14c8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    14cc:	mov	x21, x0
    14d0:	ldrh	w0, [x20, #2]
    14d4:	ldr	w1, [sp, #216]
    14d8:	cbnz	w0, 154c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c8>
    14dc:	bl	0 <_ZN4llvm9WithColor7warningEv>
    14e0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    14e4:	add	x1, x1, #0x0
    14e8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    14ec:	ldr	x1, [x21]
    14f0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    14f4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    14f8:	add	x1, x1, #0x0
    14fc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1500:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1504:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1508:	add	x1, x1, #0x0
    150c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1510:	ldr	x1, [sp, #144]
    1514:	ldr	x1, [x1]
    1518:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    151c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1520:	add	x1, x1, #0x0
    1524:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1528:	mov	x1, x23
    152c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1530:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1534:	add	x1, x1, #0x0
    1538:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    153c:	add	x23, x23, #0x1
    1540:	b	1498 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x414>
    1544:	mov	x2, #0x0                   	// #0
    1548:	b	12ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x228>
    154c:	and	x1, x1, #0xffff
    1550:	mov	x0, x27
    1554:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1558:	ldr	x2, [x0]
    155c:	ldr	w0, [x21, #16]
    1560:	tbnz	w0, #31, 1624 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5a0>
    1564:	mov	x0, x2
    1568:	str	x2, [sp, #216]
    156c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1570:	mov	w1, w0
    1574:	ldr	x0, [sp, #152]
    1578:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    157c:	ldr	w0, [x21, #16]
    1580:	ldr	w2, [sp, #160]
    1584:	cmp	w0, #0x0
    1588:	cset	w1, eq  // eq = none
    158c:	cmp	w0, #0x1
    1590:	orr	w1, w2, w1
    1594:	cset	w0, le
    1598:	ldr	x2, [sp, #216]
    159c:	and	w22, w22, w0
    15a0:	str	w1, [sp, #160]
    15a4:	ldrh	w0, [x20, #2]
    15a8:	str	w0, [sp, #396]
    15ac:	mov	w0, #0x1                   	// #1
    15b0:	str	w0, [sp, #404]
    15b4:	ldr	x1, [sp, #304]
    15b8:	str	x2, [sp, #384]
    15bc:	ldr	x0, [sp, #312]
    15c0:	str	wzr, [sp, #392]
    15c4:	strb	wzr, [sp, #400]
    15c8:	cmp	x1, x0
    15cc:	b.eq	162c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5a8>  // b.none
    15d0:	ldp	x2, x3, [x24]
    15d4:	stp	x2, x3, [x1]
    15d8:	add	x1, x1, #0x18
    15dc:	ldr	x0, [x24, #16]
    15e0:	stur	x0, [x1, #-8]
    15e4:	str	x1, [sp, #304]
    15e8:	ldr	w1, [x21, #12]
    15ec:	cbz	w1, 153c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4b8>
    15f0:	mov	w1, w1
    15f4:	mov	x0, x27
    15f8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    15fc:	ldr	x0, [x0]
    1600:	str	x0, [sp, #384]
    1604:	ldr	x0, [sp, #200]
    1608:	mov	x1, x24
    160c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1610:	ldr	w1, [x0, #8]
    1614:	ldrh	w2, [x20, #2]
    1618:	add	w1, w1, w2
    161c:	str	w1, [x0, #8]
    1620:	b	153c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4b8>
    1624:	mov	w22, #0x0                   	// #0
    1628:	b	15a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x520>
    162c:	ldr	x0, [sp, #208]
    1630:	mov	x2, x24
    1634:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1638:	b	15e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x564>
    163c:	ldr	w0, [sp, #160]
    1640:	ldp	x20, x21, [sp, #296]
    1644:	cmp	w0, #0x0
    1648:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    164c:	cset	w0, ne  // ne = any
    1650:	strb	w0, [x19, #329]
    1654:	cmp	x20, x21
    1658:	b.eq	16cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x648>  // b.none
    165c:	sub	x22, x21, x20
    1660:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1664:	movk	x0, #0xaaab
    1668:	mov	x1, x21
    166c:	asr	x2, x22, #3
    1670:	mov	w3, #0x0                   	// #0
    1674:	mul	x2, x2, x0
    1678:	mov	w0, #0x3f                  	// #63
    167c:	clz	x2, x2
    1680:	sub	w2, w0, w2
    1684:	mov	x0, x20
    1688:	sbfiz	x2, x2, #1, #32
    168c:	bl	ea0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
    1690:	cmp	x22, #0x180
    1694:	b.le	16c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x63c>
    1698:	add	x10, x20, #0x180
    169c:	mov	x0, x20
    16a0:	mov	x1, x10
    16a4:	bl	f0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    16a8:	cmp	x21, x10
    16ac:	b.eq	16cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x648>  // b.none
    16b0:	mov	x0, x10
    16b4:	bl	78 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops14_Val_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_.isra.0>
    16b8:	add	x10, x10, #0x18
    16bc:	b	16a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x624>
    16c0:	mov	x1, x21
    16c4:	mov	x0, x20
    16c8:	bl	f0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    16cc:	ldp	x1, x0, [sp, #296]
    16d0:	mov	x23, #0x0                   	// #0
    16d4:	mov	x26, #0x0                   	// #0
    16d8:	str	xzr, [sp, #160]
    16dc:	sub	x0, x0, x1
    16e0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    16e4:	movk	x1, #0xaaab
    16e8:	asr	x0, x0, #3
    16ec:	mul	w0, w0, w1
    16f0:	str	w0, [sp, #240]
    16f4:	add	x0, sp, #0x140
    16f8:	str	x0, [sp, #208]
    16fc:	add	x0, sp, #0x180
    1700:	str	x0, [sp, #216]
    1704:	add	x0, sp, #0x160
    1708:	str	x0, [sp, #224]
    170c:	ldr	w0, [sp, #240]
    1710:	str	w23, [sp, #200]
    1714:	cmp	w0, w23
    1718:	b.ls	1998 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x914>  // b.plast
    171c:	mov	x0, #0x18                  	// #24
    1720:	ldr	x21, [sp, #296]
    1724:	mul	x22, x23, x0
    1728:	add	x20, x21, x22
    172c:	add	x24, x20, #0x8
    1730:	ldr	w0, [x20, #8]
    1734:	ldr	w1, [x24, #4]
    1738:	cmp	w1, w0
    173c:	b.ne	178c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x708>  // b.any
    1740:	ldr	d1, [x21, x22]
    1744:	cnt	v0.8b, v1.8b
    1748:	addv	b0, v0.8b
    174c:	umov	w0, v0.b[0]
    1750:	cmp	w0, #0x1
    1754:	b.gt	1778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6f4>
    1758:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    175c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1760:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1764:	add	x3, x3, #0x0
    1768:	add	x1, x1, #0x0
    176c:	add	x0, x0, #0x0
    1770:	mov	w2, #0x75                  	// #117
    1774:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1778:	fmov	x0, d1
    177c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1780:	orr	x26, x26, x0
    1784:	add	x23, x23, #0x1
    1788:	b	170c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x688>
    178c:	ldp	w1, w0, [x19, #184]
    1790:	cmp	w1, w0
    1794:	b.cc	182c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7a8>  // b.lo, b.ul, b.last
    1798:	mov	w0, w0
    179c:	add	x0, x0, #0x2
    17a0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    17a4:	mov	x1, #0xffffffff            	// #4294967295
    17a8:	cmp	x0, x1
    17ac:	str	x0, [sp, #352]
    17b0:	str	x1, [sp, #384]
    17b4:	ldp	x1, x0, [sp, #216]
    17b8:	csel	x0, x0, x1, ls  // ls = plast
    17bc:	ldr	x27, [x0]
    17c0:	mov	x0, #0x18                  	// #24
    17c4:	mul	x0, x27, x0
    17c8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    17cc:	mov	x1, x0
    17d0:	ldr	w6, [x19, #184]
    17d4:	mov	x2, #0x18                  	// #24
    17d8:	ldr	x0, [x19, #176]
    17dc:	madd	x6, x6, x2, x0
    17e0:	mov	x2, #0x0                   	// #0
    17e4:	add	x3, x0, x2
    17e8:	cmp	x6, x3
    17ec:	b.eq	180c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x788>  // b.none
    17f0:	add	x7, x1, x2
    17f4:	add	x2, x2, #0x18
    17f8:	ldp	x4, x5, [x3]
    17fc:	stp	x4, x5, [x7]
    1800:	ldr	x3, [x3, #16]
    1804:	str	x3, [x7, #16]
    1808:	b	17e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x760>
    180c:	ldr	x2, [sp, #192]
    1810:	cmp	x2, x0
    1814:	b.eq	1824 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7a0>  // b.none
    1818:	str	x1, [sp, #232]
    181c:	bl	0 <free>
    1820:	ldr	x1, [sp, #232]
    1824:	str	x1, [x19, #176]
    1828:	str	w27, [x19, #188]
    182c:	ldr	w0, [x19, #184]
    1830:	mov	w2, #0x18                  	// #24
    1834:	ldr	x1, [x19, #176]
    1838:	umaddl	x0, w0, w2, x1
    183c:	ldp	x2, x3, [x20]
    1840:	stp	x2, x3, [x0]
    1844:	ldr	x1, [x20, #16]
    1848:	str	x1, [x0, #16]
    184c:	add	x0, x19, #0xb0
    1850:	ldr	w1, [x19, #184]
    1854:	add	x1, x1, #0x1
    1858:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    185c:	ldr	w0, [x19, #184]
    1860:	cbnz	w0, 1884 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x800>
    1864:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1868:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    186c:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1870:	add	x3, x3, #0x0
    1874:	add	x1, x1, #0x0
    1878:	add	x0, x0, #0x0
    187c:	mov	w2, #0xa7                  	// #167
    1880:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1884:	ldr	x22, [x21, x22]
    1888:	fmov	d0, x22
    188c:	cnt	v0.8b, v0.8b
    1890:	addv	b0, v0.8b
    1894:	umov	w0, v0.b[0]
    1898:	cmp	w0, #0x1
    189c:	b.ne	1948 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8c4>  // b.any
    18a0:	ldr	x0, [sp, #160]
    18a4:	orr	x0, x0, x22
    18a8:	str	x0, [sp, #160]
    18ac:	ldr	w0, [sp, #200]
    18b0:	mov	w21, #0x18                  	// #24
    18b4:	add	w3, w0, #0x1
    18b8:	umull	x21, w3, w21
    18bc:	ldr	w0, [sp, #240]
    18c0:	cmp	w0, w3
    18c4:	b.eq	1784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x700>  // b.none
    18c8:	ldr	x0, [sp, #296]
    18cc:	add	x2, x0, x21
    18d0:	ldr	x0, [x0, x21]
    18d4:	bics	xzr, x22, x0
    18d8:	b.ne	198c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x908>  // b.any
    18dc:	ldp	w27, w5, [x24]
    18e0:	mov	x1, x20
    18e4:	ldr	x0, [sp, #208]
    18e8:	sub	w4, w5, w27
    18ec:	str	w4, [sp, #200]
    18f0:	str	w5, [sp, #232]
    18f4:	str	w3, [sp, #244]
    18f8:	str	x2, [sp, #248]
    18fc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1900:	ldr	x2, [sp, #248]
    1904:	ldr	w1, [x0, #8]
    1908:	ldr	w4, [sp, #200]
    190c:	ldr	w0, [x2, #12]
    1910:	sub	w4, w4, w1
    1914:	ldr	w5, [sp, #232]
    1918:	ldr	w3, [sp, #244]
    191c:	add	w6, w1, w0
    1920:	cmp	w4, w0
    1924:	b.ls	195c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8d8>  // b.plast
    1928:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    192c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1930:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1934:	add	x3, x3, #0x0
    1938:	add	x1, x1, #0x0
    193c:	add	x0, x0, #0x0
    1940:	mov	w2, #0x141                 	// #321
    1944:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1948:	mov	x0, x22
    194c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1950:	eor	x22, x22, x0
    1954:	orr	x26, x26, x0
    1958:	b	18ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x828>
    195c:	ldr	d0, [x2]
    1960:	sub	w27, w27, w5
    1964:	add	w27, w27, w6
    1968:	str	w27, [x2, #12]
    196c:	cnt	v0.8b, v0.8b
    1970:	addv	b0, v0.8b
    1974:	umov	w0, v0.b[0]
    1978:	cmp	w0, #0x1
    197c:	b.le	198c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x908>
    1980:	ldr	w0, [x2, #20]
    1984:	add	w0, w0, #0x1
    1988:	str	w0, [x2, #20]
    198c:	add	w3, w3, #0x1
    1990:	add	x21, x21, #0x18
    1994:	b	18bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x838>
    1998:	ldr	w21, [x19, #184]
    199c:	mov	w0, #0x18                  	// #24
    19a0:	ldr	x20, [x19, #176]
    19a4:	mov	w22, #0x1                   	// #1
    19a8:	umaddl	x21, w21, w0, x20
    19ac:	cmp	x21, x20
    19b0:	b.eq	19fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x978>  // b.none
    19b4:	ldr	d8, [x20]
    19b8:	cnt	v0.8b, v8.8b
    19bc:	addv	b0, v0.8b
    19c0:	umov	w0, v0.b[0]
    19c4:	cmp	w0, #0x1
    19c8:	b.le	19f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x970>
    19cc:	ldrb	w0, [x20, #16]
    19d0:	cbnz	w0, 19f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x970>
    19d4:	fmov	x0, d8
    19d8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    19dc:	fmov	x1, d8
    19e0:	eor	x0, x1, x0
    19e4:	ldr	x1, [sp, #160]
    19e8:	bics	xzr, x0, x1
    19ec:	b.ne	19f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x970>  // b.any
    19f0:	strb	w22, [x20, #16]
    19f4:	add	x20, x20, #0x18
    19f8:	b	19ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x928>
    19fc:	ldr	w0, [sp, #336]
    1a00:	add	x22, sp, #0x140
    1a04:	add	x21, sp, #0x160
    1a08:	cbnz	w0, 1a70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9ec>
    1a0c:	mov	x8, x21
    1a10:	mov	x0, x22
    1a14:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a18:	add	x24, sp, #0x108
    1a1c:	add	x20, sp, #0x180
    1a20:	mov	x8, x20
    1a24:	mov	x0, x22
    1a28:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a2c:	ldr	x23, [sp, #368]
    1a30:	ldr	x0, [sp, #384]
    1a34:	ldr	x1, [sp, #400]
    1a38:	cbz	x23, 1a90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa0c>
    1a3c:	ldr	x2, [sp, #352]
    1a40:	ldr	x3, [x2]
    1a44:	ldr	x2, [sp, #360]
    1a48:	cmp	x3, x2
    1a4c:	b.eq	1a90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa0c>  // b.none
    1a50:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a54:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a58:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a5c:	add	x3, x3, #0x0
    1a60:	add	x1, x1, #0x0
    1a64:	add	x0, x0, #0x0
    1a68:	mov	w2, #0x4c7                 	// #1223
    1a6c:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1a70:	ldp	x2, x1, [sp, #320]
    1a74:	stp	x22, x2, [sp, #352]
    1a78:	ldr	w0, [sp, #344]
    1a7c:	add	x0, x1, x0, lsl #4
    1a80:	stp	x1, x0, [sp, #368]
    1a84:	mov	x0, x21
    1a88:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1a8c:	b	1a18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x994>
    1a90:	cbz	x1, 1ac4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa40>
    1a94:	ldr	x2, [x0]
    1a98:	ldr	x3, [sp, #392]
    1a9c:	cmp	x3, x2
    1aa0:	b.eq	1ac4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa40>  // b.none
    1aa4:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1aa8:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1aac:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ab0:	add	x3, x3, #0x0
    1ab4:	add	x1, x1, #0x0
    1ab8:	add	x0, x0, #0x0
    1abc:	mov	w2, #0x4c8                 	// #1224
    1ac0:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1ac4:	ldr	x2, [sp, #352]
    1ac8:	cmp	x0, x2
    1acc:	b.eq	1af0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa6c>  // b.none
    1ad0:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ad4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ad8:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1adc:	add	x3, x3, #0x0
    1ae0:	add	x1, x1, #0x0
    1ae4:	add	x0, x0, #0x0
    1ae8:	mov	w2, #0x4c9                 	// #1225
    1aec:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1af0:	cmp	x1, x23
    1af4:	b.eq	1bc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb44>  // b.none
    1af8:	ldr	x1, [x0]
    1afc:	ldr	x0, [sp, #360]
    1b00:	cmp	x1, x0
    1b04:	b.eq	1b28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaa4>  // b.none
    1b08:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b0c:	add	x3, x3, #0x0
    1b10:	mov	w2, #0x4b3                 	// #1203
    1b14:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b18:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b1c:	add	x1, x1, #0x0
    1b20:	add	x0, x0, #0x0
    1b24:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1b28:	mov	x27, #0x1                   	// #1
    1b2c:	ldr	w0, [sp, #188]
    1b30:	cmp	w0, w27
    1b34:	b.ls	1b8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb08>  // b.plast
    1b38:	ldr	x0, [sp, #176]
    1b3c:	mov	w1, w27
    1b40:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b44:	ldr	w0, [x0, #16]
    1b48:	cmn	w0, #0x1
    1b4c:	b.eq	1b84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb00>  // b.none
    1b50:	mov	x1, x27
    1b54:	mov	x0, x24
    1b58:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b5c:	ldr	x1, [x23]
    1b60:	ldr	x0, [x0]
    1b64:	cmp	x0, x1
    1b68:	b.eq	1b84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb00>  // b.none
    1b6c:	bics	xzr, x1, x0
    1b70:	b.ne	1b84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb00>  // b.any
    1b74:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b78:	mov	w1, w0
    1b7c:	ldr	x0, [sp, #152]
    1b80:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1b84:	add	x27, x27, #0x1
    1b88:	b	1b2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaa8>
    1b8c:	ldr	x0, [sp, #352]
    1b90:	ldr	x1, [x0]
    1b94:	ldr	x0, [sp, #360]
    1b98:	cmp	x1, x0
    1b9c:	b.eq	1bb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb2c>  // b.none
    1ba0:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ba4:	mov	w2, #0x4cf                 	// #1231
    1ba8:	add	x3, x3, #0x0
    1bac:	b	1b14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa90>
    1bb0:	ldr	x0, [sp, #368]
    1bb4:	add	x0, x0, #0x10
    1bb8:	str	x0, [sp, #368]
    1bbc:	mov	x0, x21
    1bc0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1bc4:	b	1a2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9a8>
    1bc8:	ldr	w23, [sp, #288]
    1bcc:	cmp	w23, #0x40
    1bd0:	b.hi	1ccc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc48>  // b.pmore
    1bd4:	ldr	x0, [sp, #280]
    1bd8:	str	x0, [x19, #288]
    1bdc:	ldr	x0, [sp, #160]
    1be0:	str	x0, [x19, #296]
    1be4:	ldr	x0, [sp, #168]
    1be8:	str	x26, [x19, #304]
    1bec:	ldr	x0, [x0]
    1bf0:	ldrb	w0, [x0]
    1bf4:	cbz	w0, 1dd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd4c>
    1bf8:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1bfc:	add	x0, x0, #0x0
    1c00:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1c04:	tst	w0, #0xff
    1c08:	b.eq	1dd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd4c>  // b.none
    1c0c:	ldr	w27, [x19, #184]
    1c10:	mov	w0, #0x18                  	// #24
    1c14:	ldr	x26, [x19, #176]
    1c18:	adrp	x24, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c1c:	adrp	x23, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c20:	add	x24, x24, #0x0
    1c24:	add	x23, x23, #0x0
    1c28:	umaddl	x27, w27, w0, x26
    1c2c:	cmp	x27, x26
    1c30:	b.eq	1d0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc88>  // b.none
    1c34:	bl	0 <_ZN4llvm4dbgsEv>
    1c38:	mov	x1, x24
    1c3c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c40:	ldr	x1, [x26]
    1c44:	stp	x1, xzr, [sp, #384]
    1c48:	mov	w1, #0x10                  	// #16
    1c4c:	str	w1, [sp, #400]
    1c50:	mov	w1, #0x1                   	// #1
    1c54:	strh	w1, [sp, #404]
    1c58:	strb	w1, [sp, #406]
    1c5c:	mov	x1, x20
    1c60:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1c64:	mov	x1, x23
    1c68:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c6c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c70:	add	x1, x1, #0x0
    1c74:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c78:	ldrb	w1, [x26, #16]
    1c7c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1c80:	mov	x1, x23
    1c84:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c88:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c8c:	add	x1, x1, #0x0
    1c90:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1c94:	ldr	w1, [x26, #20]
    1c98:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1c9c:	mov	x1, x23
    1ca0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ca4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ca8:	add	x1, x1, #0x0
    1cac:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1cb0:	ldp	w1, w2, [x26, #8]
    1cb4:	add	x26, x26, #0x18
    1cb8:	sub	w1, w2, w1
    1cbc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1cc0:	mov	w1, #0xa                   	// #10
    1cc4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1cc8:	b	1c2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xba8>
    1ccc:	ldr	x0, [sp, #152]
    1cd0:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    1cd4:	sub	w23, w23, w0
    1cd8:	cmp	w23, #0x40
    1cdc:	b.ls	1d00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc7c>  // b.plast
    1ce0:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ce4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ce8:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1cec:	add	x3, x3, #0x0
    1cf0:	add	x1, x1, #0x0
    1cf4:	add	x0, x0, #0x0
    1cf8:	mov	w2, #0x657                 	// #1623
    1cfc:	b	10d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54>
    1d00:	ldr	x0, [sp, #280]
    1d04:	ldr	x0, [x0]
    1d08:	b	1bd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb54>
    1d0c:	ldr	x27, [x19, #288]
    1d10:	adrp	x24, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d14:	add	x24, x24, #0x0
    1d18:	mov	w26, #0x1                   	// #1
    1d1c:	cbz	x27, 1d60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcdc>
    1d20:	bl	0 <_ZN4llvm4dbgsEv>
    1d24:	neg	x23, x27
    1d28:	mov	x1, x24
    1d2c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d30:	mov	w1, #0x10                  	// #16
    1d34:	and	x23, x23, x27
    1d38:	stp	x23, xzr, [sp, #384]
    1d3c:	eor	x27, x27, x23
    1d40:	str	w1, [sp, #400]
    1d44:	mov	x1, x20
    1d48:	strh	w26, [sp, #404]
    1d4c:	strb	w26, [sp, #406]
    1d50:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1d54:	mov	w1, #0xa                   	// #10
    1d58:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d5c:	b	1d1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc98>
    1d60:	bl	0 <_ZN4llvm4dbgsEv>
    1d64:	mov	w23, #0x1                   	// #1
    1d68:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d6c:	add	x1, x1, #0x0
    1d70:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d74:	mov	w24, #0x10                  	// #16
    1d78:	ldr	x1, [x19, #296]
    1d7c:	stp	x1, xzr, [sp, #384]
    1d80:	mov	x1, x20
    1d84:	str	w24, [sp, #400]
    1d88:	strh	w23, [sp, #404]
    1d8c:	strb	w23, [sp, #406]
    1d90:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1d94:	mov	w1, #0xa                   	// #10
    1d98:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1d9c:	bl	0 <_ZN4llvm4dbgsEv>
    1da0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1da4:	add	x1, x1, #0x0
    1da8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1dac:	str	w24, [sp, #400]
    1db0:	ldr	x1, [x19, #304]
    1db4:	stp	x1, xzr, [sp, #384]
    1db8:	mov	x1, x20
    1dbc:	strh	w23, [sp, #404]
    1dc0:	strb	w23, [sp, #406]
    1dc4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1dc8:	mov	w1, #0xa                   	// #10
    1dcc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1dd0:	ldr	x0, [sp, #152]
    1dd4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1dd8:	ldr	x0, [sp, #328]
    1ddc:	ldr	w1, [sp, #344]
    1de0:	lsl	x1, x1, #4
    1de4:	bl	0 <_ZdlPvm>
    1de8:	ldr	x0, [sp, #296]
    1dec:	cbz	x0, 1df4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd70>
    1df0:	bl	0 <_ZdlPv>
    1df4:	ldr	x0, [sp, #136]
    1df8:	ldr	x0, [x0, #8]
    1dfc:	tbz	w0, #6, 1e4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdc8>
    1e00:	mov	w0, #0x64                  	// #100
    1e04:	str	w0, [x19, #312]
    1e08:	add	x23, x28, #0x10
    1e0c:	ldr	x0, [sp, #136]
    1e10:	mov	w27, #0x0                   	// #0
    1e14:	ldr	w24, [x28, #24]
    1e18:	ldrb	w26, [x0, #4]
    1e1c:	cmp	w26, #0x0
    1e20:	ccmp	w24, w27, #0x0, ne  // ne = any
    1e24:	b.ls	1e68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xde4>  // b.plast
    1e28:	mov	w1, w27
    1e2c:	mov	x0, x23
    1e30:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1e34:	ldrb	w0, [x0]
    1e38:	add	w27, w27, #0x1
    1e3c:	cmp	w0, #0x1
    1e40:	cset	w0, eq  // eq = none
    1e44:	sub	w26, w26, w0
    1e48:	b	1e1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd98>
    1e4c:	ldr	x0, [x25]
    1e50:	ldr	x1, [sp, #144]
    1e54:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    1e58:	cmp	w0, #0x0
    1e5c:	mov	w1, #0x64                  	// #100
    1e60:	csel	w0, w0, w1, ge  // ge = tcont
    1e64:	b	1e04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd80>
    1e68:	add	x23, sp, #0x128
    1e6c:	cbz	w26, 1f50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xecc>
    1e70:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1e74:	add	x1, x1, #0x0
    1e78:	mov	x0, x20
    1e7c:	bl	d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    1e80:	mov	x0, #0x30                  	// #48
    1e84:	bl	0 <_Znwm>
    1e88:	mov	x22, x0
    1e8c:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1e90:	ldr	x1, [x1]
    1e94:	add	x1, x1, #0x10
    1e98:	str	x1, [x0], #8
    1e9c:	mov	x1, x20
    1ea0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    1ea4:	str	x28, [x22, #40]
    1ea8:	mov	x0, x20
    1eac:	str	x22, [sp, #352]
    1eb0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    1eb4:	mov	x1, x20
    1eb8:	ldr	x0, [sp, #352]
    1ebc:	str	xzr, [sp, #352]
    1ec0:	str	x0, [sp, #384]
    1ec4:	mov	x0, x23
    1ec8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ecc:	mov	x0, x20
    1ed0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ed4:	mov	x0, x21
    1ed8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1edc:	mov	x0, x23
    1ee0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ee4:	tst	w0, #0xff
    1ee8:	b.eq	202c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfa8>  // b.none
    1eec:	mov	x1, x23
    1ef0:	mov	x0, x20
    1ef4:	str	xzr, [sp, #384]
    1ef8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1efc:	ldr	x0, [sp, #120]
    1f00:	mov	x1, x20
    1f04:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f08:	mov	x0, x20
    1f0c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f10:	mov	x0, x23
    1f14:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f18:	mov	x0, x19
    1f1c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f20:	mov	x0, x19
    1f24:	mov	x1, #0x150                 	// #336
    1f28:	bl	0 <_ZdlPvm>
    1f2c:	ldp	x19, x20, [sp, #16]
    1f30:	ldp	x21, x22, [sp, #32]
    1f34:	ldp	x23, x24, [sp, #48]
    1f38:	ldp	x25, x26, [sp, #64]
    1f3c:	ldp	x27, x28, [sp, #80]
    1f40:	ldr	d8, [sp, #96]
    1f44:	ldr	x0, [sp, #120]
    1f48:	ldp	x29, x30, [sp], #416
    1f4c:	ret
    1f50:	ldr	x0, [sp, #136]
    1f54:	ldr	x0, [x0, #8]
    1f58:	tbz	w0, #2, 2008 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf84>
    1f5c:	ldr	x0, [sp, #136]
    1f60:	ldrh	w1, [x0, #2]
    1f64:	add	x0, x28, #0x10
    1f68:	sub	w1, w1, #0x1
    1f6c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f70:	cmp	w24, w27
    1f74:	b.eq	1f84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf00>  // b.none
    1f78:	ldrb	w0, [x0]
    1f7c:	cmp	w0, #0x1
    1f80:	b.eq	2008 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf84>  // b.none
    1f84:	mov	x0, x21
    1f88:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1f8c:	add	x1, x1, #0x0
    1f90:	bl	d3c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0>
    1f94:	mov	x1, x21
    1f98:	mov	x0, x20
    1f9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    1fa0:	mov	x0, #0x30                  	// #48
    1fa4:	bl	0 <_Znwm>
    1fa8:	mov	x24, x0
    1fac:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1fb0:	ldr	x1, [x1]
    1fb4:	add	x1, x1, #0x10
    1fb8:	str	x1, [x0], #8
    1fbc:	mov	x1, x20
    1fc0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    1fc4:	str	x28, [x24, #40]
    1fc8:	mov	x0, x20
    1fcc:	str	x24, [sp, #320]
    1fd0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    1fd4:	mov	x1, x20
    1fd8:	ldr	x0, [sp, #320]
    1fdc:	str	xzr, [sp, #320]
    1fe0:	str	x0, [sp, #384]
    1fe4:	mov	x0, x23
    1fe8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1fec:	mov	x0, x20
    1ff0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ff4:	mov	x0, x22
    1ff8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    1ffc:	mov	x0, x21
    2000:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    2004:	b	1edc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe58>
    2008:	mov	x1, x20
    200c:	mov	x0, #0x1                   	// #1
    2010:	str	xzr, [sp, #296]
    2014:	str	x0, [sp, #384]
    2018:	mov	x0, x23
    201c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2020:	mov	x0, x20
    2024:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2028:	b	1edc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe58>
    202c:	mov	x0, x23
    2030:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2034:	ldr	w3, [sp, #132]
    2038:	mov	x2, x28
    203c:	mov	x1, x19
    2040:	mov	x0, x25
    2044:	bl	384 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    2048:	ldr	w3, [sp, #132]
    204c:	mov	x0, x25
    2050:	mov	x2, x28
    2054:	mov	x1, x19
    2058:	bl	8f0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    205c:	ldr	x0, [sp, #168]
    2060:	ldr	x0, [x0]
    2064:	ldrb	w0, [x0]
    2068:	cbz	w0, 20e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>
    206c:	adrp	x22, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2070:	add	x0, x22, #0x0
    2074:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2078:	tst	w0, #0xff
    207c:	b.eq	20a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x101c>  // b.none
    2080:	bl	0 <_ZN4llvm4dbgsEv>
    2084:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2088:	add	x1, x1, #0x0
    208c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2090:	ldr	w1, [x19, #312]
    2094:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2098:	mov	w1, #0xa                   	// #10
    209c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    20a0:	ldr	x0, [sp, #168]
    20a4:	ldr	x0, [x0]
    20a8:	ldrb	w0, [x0]
    20ac:	cbz	w0, 20e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>
    20b0:	add	x0, x22, #0x0
    20b4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    20b8:	tst	w0, #0xff
    20bc:	b.eq	20e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>  // b.none
    20c0:	bl	0 <_ZN4llvm4dbgsEv>
    20c4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    20c8:	add	x1, x1, #0x0
    20cc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    20d0:	ldr	w1, [x19, #316]
    20d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    20d8:	mov	w1, #0xa                   	// #10
    20dc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    20e0:	mov	x8, x21
    20e4:	mov	x2, x28
    20e8:	mov	x1, x19
    20ec:	mov	x0, x25
    20f0:	bl	d88 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>
    20f4:	mov	x0, x21
    20f8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    20fc:	tst	w0, #0xff
    2100:	b.eq	2130 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10ac>  // b.none
    2104:	mov	x1, x21
    2108:	mov	x0, x20
    210c:	str	xzr, [sp, #384]
    2110:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2114:	ldr	x0, [sp, #120]
    2118:	mov	x1, x20
    211c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2120:	mov	x0, x20
    2124:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2128:	mov	x0, x21
    212c:	b	1f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe90>
    2130:	mov	x0, x21
    2134:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2138:	ldr	x0, [sp, #136]
    213c:	ldr	w1, [sp, #184]
    2140:	ldr	x0, [x0, #8]
    2144:	tst	x0, #0x2
    2148:	mov	w0, #0x3ffe                	// #16382
    214c:	ccmp	w1, w0, #0x4, eq  // eq = none
    2150:	b.eq	21c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x113c>  // b.none
    2154:	ldr	w0, [x28]
    2158:	mov	x1, x20
    215c:	add	x25, x25, #0x70
    2160:	strh	w0, [sp, #384]
    2164:	mov	x0, x25
    2168:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    216c:	mov	x1, x0
    2170:	ldr	x0, [x0, #8]
    2174:	str	x19, [x1, #8]
    2178:	cbz	x0, 2180 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10fc>
    217c:	bl	c54 <_ZNKSt14default_deleteIKN4llvm3mca9InstrDescEEclEPS3_.isra.0.part.0>
    2180:	ldr	w0, [x28]
    2184:	mov	x1, x20
    2188:	strh	w0, [sp, #384]
    218c:	mov	x0, x25
    2190:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2194:	ldr	x19, [x0, #8]
    2198:	ldr	x0, [sp, #120]
    219c:	ldr	x1, [sp, #120]
    21a0:	ldrb	w0, [x0, #8]
    21a4:	and	w0, w0, #0xfffffffc
    21a8:	orr	w0, w0, #0x2
    21ac:	strb	w0, [x1, #8]
    21b0:	mov	x0, x1
    21b4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    21b8:	str	x19, [x0]
    21bc:	b	1f2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xea8>
    21c0:	mov	x1, x20
    21c4:	add	x21, x25, #0x90
    21c8:	mov	x0, x21
    21cc:	str	x28, [sp, #384]
    21d0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    21d4:	mov	x1, x0
    21d8:	ldr	x0, [x0, #8]
    21dc:	str	x19, [x1, #8]
    21e0:	cbz	x0, 21e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1164>
    21e4:	bl	c54 <_ZNKSt14default_deleteIKN4llvm3mca9InstrDescEEclEPS3_.isra.0.part.0>
    21e8:	mov	x1, x20
    21ec:	mov	x0, x21
    21f0:	str	x28, [sp, #384]
    21f4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    21f8:	b	2194 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1110>
    21fc:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2200:	add	x19, sp, #0x180
    2204:	add	x1, x1, #0x0
    2208:	b	119c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x118>

000000000000220c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    220c:	stp	x29, x30, [sp, #-160]!
    2210:	mov	x29, sp
    2214:	stp	x25, x26, [sp, #64]
    2218:	add	x25, sp, #0x58
    221c:	stp	x19, x20, [sp, #16]
    2220:	mov	x20, x1
    2224:	mov	x19, x8
    2228:	stp	x21, x22, [sp, #32]
    222c:	add	x22, x0, #0x70
    2230:	mov	x21, x0
    2234:	ldr	w0, [x1]
    2238:	mov	x1, x25
    223c:	stp	x23, x24, [sp, #48]
    2240:	add	x24, sp, #0x60
    2244:	mov	x8, x24
    2248:	add	x23, sp, #0x80
    224c:	str	w0, [sp, #88]
    2250:	mov	x0, x22
    2254:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2258:	mov	x0, x22
    225c:	mov	x8, x23
    2260:	ldr	x26, [sp, #96]
    2264:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2268:	ldr	x0, [sp, #112]
    226c:	ldr	x2, [sp, #128]
    2270:	ldr	x1, [sp, #144]
    2274:	cbz	x0, 22a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9c>
    2278:	ldr	x4, [x26]
    227c:	ldr	x3, [sp, #104]
    2280:	cmp	x4, x3
    2284:	b.eq	22a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9c>  // b.none
    2288:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    228c:	add	x3, x3, #0x0
    2290:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2294:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2298:	add	x1, x1, #0x0
    229c:	add	x0, x0, #0x0
    22a0:	mov	w2, #0x4c7                 	// #1223
    22a4:	b	22d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcc>
    22a8:	cbz	x1, 22dc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd0>
    22ac:	ldr	x3, [x2]
    22b0:	ldr	x4, [sp, #136]
    22b4:	cmp	x4, x3
    22b8:	b.eq	22dc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd0>  // b.none
    22bc:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22c0:	add	x3, x3, #0x0
    22c4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22c8:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22cc:	add	x1, x1, #0x0
    22d0:	add	x0, x0, #0x0
    22d4:	mov	w2, #0x4c8                 	// #1224
    22d8:	bl	0 <__assert_fail>
    22dc:	cmp	x2, x26
    22e0:	b.eq	2304 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xf8>  // b.none
    22e4:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22e8:	add	x3, x3, #0x0
    22ec:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22f0:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    22f4:	add	x1, x1, #0x0
    22f8:	add	x0, x0, #0x0
    22fc:	mov	w2, #0x4c9                 	// #1225
    2300:	b	22d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcc>
    2304:	cmp	x1, x0
    2308:	b.eq	235c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x150>  // b.none
    230c:	ldr	w0, [x20]
    2310:	mov	x1, x23
    2314:	strh	w0, [sp, #128]
    2318:	mov	x0, x22
    231c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2320:	ldr	x20, [x0, #8]
    2324:	ldrb	w0, [x19, #8]
    2328:	and	w0, w0, #0xfffffffc
    232c:	orr	w0, w0, #0x2
    2330:	strb	w0, [x19, #8]
    2334:	mov	x0, x19
    2338:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    233c:	str	x20, [x0]
    2340:	mov	x0, x19
    2344:	ldp	x19, x20, [sp, #16]
    2348:	ldp	x21, x22, [sp, #32]
    234c:	ldp	x23, x24, [sp, #48]
    2350:	ldp	x25, x26, [sp, #64]
    2354:	ldp	x29, x30, [sp], #160
    2358:	ret
    235c:	add	x22, x21, #0x90
    2360:	mov	x2, x23
    2364:	mov	x1, x25
    2368:	mov	x0, x22
    236c:	str	x20, [sp, #88]
    2370:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2374:	tst	w0, #0xff
    2378:	b.eq	23b8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1ac>  // b.none
    237c:	ldr	x24, [sp, #128]
    2380:	mov	x25, x22
    2384:	ldr	x26, [x21, #144]
    2388:	mov	x0, x22
    238c:	mov	x8, x23
    2390:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2394:	ldr	x1, [sp, #128]
    2398:	ldr	x0, [sp, #144]
    239c:	cbz	x24, 23d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1c4>
    23a0:	ldr	x2, [x25]
    23a4:	cmp	x26, x2
    23a8:	b.eq	23d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1c4>  // b.none
    23ac:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    23b0:	add	x3, x3, #0x0
    23b4:	b	2290 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84>
    23b8:	mov	x8, x24
    23bc:	mov	x0, x22
    23c0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    23c4:	ldp	x25, x26, [sp, #96]
    23c8:	ldr	x24, [sp, #112]
    23cc:	b	2388 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x17c>
    23d0:	cbz	x0, 23f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1e4>
    23d4:	ldr	x3, [x1]
    23d8:	ldr	x2, [sp, #136]
    23dc:	cmp	x3, x2
    23e0:	b.eq	23f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1e4>  // b.none
    23e4:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    23e8:	add	x3, x3, #0x0
    23ec:	b	22c4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    23f0:	cmp	x25, x1
    23f4:	b.eq	2404 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1f8>  // b.none
    23f8:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    23fc:	add	x3, x3, #0x0
    2400:	b	22ec <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe0>
    2404:	cmp	x0, x24
    2408:	b.eq	2420 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x214>  // b.none
    240c:	mov	x1, x23
    2410:	mov	x0, x22
    2414:	str	x20, [sp, #128]
    2418:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    241c:	b	2320 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x114>
    2420:	mov	x8, x19
    2424:	mov	x1, x20
    2428:	mov	x0, x21
    242c:	bl	1084 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    2430:	b	2340 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x134>

0000000000002434 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    2434:	stp	x29, x30, [sp, #-240]!
    2438:	mov	x29, sp
    243c:	stp	x23, x24, [sp, #48]
    2440:	add	x24, sp, #0xc0
    2444:	stp	x19, x20, [sp, #16]
    2448:	mov	x20, x8
    244c:	mov	x19, x1
    2450:	mov	x8, x24
    2454:	stp	x21, x22, [sp, #32]
    2458:	mov	x21, x0
    245c:	stp	x25, x26, [sp, #64]
    2460:	stp	x27, x28, [sp, #80]
    2464:	bl	220c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    2468:	ldrb	w0, [sp, #200]
    246c:	and	w23, w0, #0x1
    2470:	bfi	w0, w23, #1, #1
    2474:	strb	w0, [sp, #200]
    2478:	cbz	w23, 2540 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x10c>
    247c:	and	w0, w0, #0xfffffffd
    2480:	add	x19, sp, #0xe0
    2484:	strb	w0, [sp, #200]
    2488:	mov	x0, x24
    248c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2490:	add	x21, sp, #0xd0
    2494:	ldr	x1, [x0]
    2498:	str	xzr, [x0]
    249c:	str	x1, [sp, #224]
    24a0:	mov	x1, x19
    24a4:	mov	x0, x21
    24a8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24ac:	mov	x0, x19
    24b0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24b4:	ldrb	w0, [x20, #8]
    24b8:	orr	w0, w0, #0x3
    24bc:	strb	w0, [x20, #8]
    24c0:	mov	x0, x21
    24c4:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24c8:	tst	w0, #0xff
    24cc:	b.ne	24f0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xbc>  // b.any
    24d0:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24d4:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24d8:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24dc:	add	x3, x3, #0x0
    24e0:	add	x1, x1, #0x0
    24e4:	add	x0, x0, #0x0
    24e8:	mov	w2, #0x1ce                 	// #462
    24ec:	bl	0 <__assert_fail>
    24f0:	ldrb	w0, [x20, #8]
    24f4:	tbnz	w0, #0, 2518 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xe4>
    24f8:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    24fc:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2500:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2504:	add	x3, x3, #0x0
    2508:	add	x1, x1, #0x0
    250c:	add	x0, x0, #0x0
    2510:	mov	w2, #0x27c                 	// #636
    2514:	b	24ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xb8>
    2518:	ldr	x0, [sp, #208]
    251c:	str	xzr, [sp, #208]
    2520:	and	x0, x0, #0xfffffffffffffffe
    2524:	str	x0, [x20]
    2528:	mov	x0, x21
    252c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2530:	ldrb	w0, [sp, #200]
    2534:	tbz	w0, #1, 2b08 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6d4>
    2538:	mov	x0, x24
    253c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2540:	mov	x0, x24
    2544:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2548:	ldr	x22, [x0]
    254c:	mov	x0, #0x350                 	// #848
    2550:	bl	0 <_Znwm>
    2554:	add	x1, x0, #0x20
    2558:	str	x1, [x0, #16]
    255c:	mov	x1, #0x400000000           	// #17179869184
    2560:	str	x1, [x0, #24]
    2564:	add	x2, x0, #0x250
    2568:	str	x1, [x0, #584]
    256c:	mov	x1, #0xfffffe0000000000    	// #-2199023255552
    2570:	str	x1, [x0, #784]
    2574:	ldr	x1, [x22, #288]
    2578:	str	x22, [x0]
    257c:	strb	wzr, [x0, #8]
    2580:	str	x0, [sp, #168]
    2584:	str	x2, [x0, #576]
    2588:	str	xzr, [x0, #792]
    258c:	str	x1, [x0, #800]
    2590:	str	wzr, [x0, #808]
    2594:	strh	wzr, [x0, #812]
    2598:	str	xzr, [x0, #816]
    259c:	strh	wzr, [x0, #824]
    25a0:	str	wzr, [x0, #828]
    25a4:	str	xzr, [x0, #832]
    25a8:	strb	wzr, [x0, #840]
    25ac:	mov	w0, #0x1                   	// #1
    25b0:	str	w0, [sp, #216]
    25b4:	ldr	x0, [x21, #24]
    25b8:	str	xzr, [sp, #208]
    25bc:	cbz	x0, 2760 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x32c>
    25c0:	ldr	x1, [x21]
    25c4:	add	x23, sp, #0xd0
    25c8:	mov	x2, x23
    25cc:	ldr	x1, [x1, #152]
    25d0:	ldr	w26, [x1, #28]
    25d4:	ldr	x1, [x0]
    25d8:	mov	w3, w26
    25dc:	ldr	x4, [x1, #80]
    25e0:	mov	x1, x19
    25e4:	blr	x4
    25e8:	ands	w25, w0, #0xff
    25ec:	b.ne	2758 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x324>  // b.any
    25f0:	ldr	x0, [x21, #24]
    25f4:	mov	x2, x23
    25f8:	mov	w3, w26
    25fc:	ldr	x1, [x0]
    2600:	ldr	x4, [x1, #88]
    2604:	mov	x1, x19
    2608:	blr	x4
    260c:	and	w23, w0, #0xff
    2610:	ldr	x0, [x21, #24]
    2614:	mov	w2, w26
    2618:	ldr	x1, [x0]
    261c:	ldr	x3, [x1, #96]
    2620:	mov	x1, x19
    2624:	blr	x3
    2628:	tst	w0, #0xff
    262c:	b.eq	263c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x208>  // b.none
    2630:	ldr	x0, [sp, #168]
    2634:	mov	w1, #0x1                   	// #1
    2638:	strb	w1, [x0, #8]
    263c:	ldr	x5, [x22, #96]
    2640:	add	x27, sp, #0xd0
    2644:	ldr	w0, [x22, #104]
    2648:	mov	x28, x5
    264c:	add	x0, x5, x0, lsl #4
    2650:	str	x0, [sp, #96]
    2654:	ldr	x0, [sp, #96]
    2658:	cmp	x28, x0
    265c:	b.eq	27ac <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x378>  // b.none
    2660:	ldr	w1, [x28]
    2664:	tbnz	w1, #31, 2768 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x334>
    2668:	sxtw	x1, w1
    266c:	add	x0, x19, #0x10
    2670:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2674:	ldrb	w1, [x0]
    2678:	cmp	w1, #0x1
    267c:	b.ne	27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>  // b.any
    2680:	ldrh	w4, [x0, #8]
    2684:	cbz	w4, 27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>
    2688:	ldr	x26, [sp, #168]
    268c:	add	x0, x26, #0x240
    2690:	ldr	w2, [x26, #584]
    2694:	ldr	w1, [x26, #588]
    2698:	cmp	w2, w1
    269c:	b.cc	26c0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x28c>  // b.lo, b.ul, b.last
    26a0:	add	x1, x26, #0x250
    26a4:	mov	x3, #0x30                  	// #48
    26a8:	mov	x2, #0x0                   	// #0
    26ac:	str	x0, [sp, #104]
    26b0:	str	w4, [sp, #112]
    26b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    26b8:	ldr	w4, [sp, #112]
    26bc:	ldr	x0, [sp, #104]
    26c0:	mov	w1, #0x30                  	// #48
    26c4:	ldr	w2, [x26, #584]
    26c8:	ldr	x3, [x26, #576]
    26cc:	str	x0, [sp, #104]
    26d0:	umull	x2, w2, w1
    26d4:	add	x1, x3, x2
    26d8:	str	x28, [x3, x2]
    26dc:	mov	x2, #0xfffffe0000000000    	// #-2199023255552
    26e0:	str	wzr, [x1, #12]
    26e4:	stp	x2, xzr, [x1, #16]
    26e8:	mov	w2, #0x1                   	// #1
    26ec:	str	wzr, [x1, #36]
    26f0:	strh	w4, [x1, #8]
    26f4:	strh	wzr, [x1, #32]
    26f8:	strh	w2, [x1, #40]
    26fc:	strb	wzr, [x1, #42]
    2700:	ldr	w1, [x26, #584]
    2704:	add	x1, x1, #0x1
    2708:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    270c:	ldr	x0, [sp, #104]
    2710:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2714:	ldr	x0, [sp, #168]
    2718:	add	x0, x0, #0x240
    271c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2720:	mov	x26, x0
    2724:	cbz	w23, 27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>
    2728:	ldr	w2, [sp, #216]
    272c:	cmp	w2, #0x40
    2730:	b.hi	2770 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x33c>  // b.pmore
    2734:	ldr	x0, [sp, #208]
    2738:	cmp	x0, #0x0
    273c:	cset	w0, eq  // eq = none
    2740:	cbz	w0, 2788 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x354>
    2744:	ldr	w0, [x28]
    2748:	tbnz	w0, #31, 27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>
    274c:	mov	w0, #0x1                   	// #1
    2750:	strb	w0, [x26, #42]
    2754:	b	27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>
    2758:	mov	w23, w25
    275c:	b	2610 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1dc>
    2760:	mov	w25, #0x0                   	// #0
    2764:	b	263c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x208>
    2768:	ldrh	w4, [x28, #8]
    276c:	b	2684 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x250>
    2770:	mov	x0, x27
    2774:	str	w2, [sp, #104]
    2778:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    277c:	ldr	w2, [sp, #104]
    2780:	cmp	w2, w0
    2784:	b	273c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x308>
    2788:	ldr	w1, [x28, #4]
    278c:	cmp	w1, w2
    2790:	b.cs	27a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x370>  // b.hs, b.nlast
    2794:	mov	x0, x27
    2798:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    279c:	tst	w0, #0xff
    27a0:	b.ne	274c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x318>  // b.any
    27a4:	add	x28, x28, #0x10
    27a8:	b	2654 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x220>
    27ac:	ldr	w1, [x22, #8]
    27b0:	cbnz	w1, 2820 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3ec>
    27b4:	add	x1, sp, #0xa8
    27b8:	mov	x0, x20
    27bc:	mov	x2, #0x0                   	// #0
    27c0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    27c4:	add	x0, sp, #0xd0
    27c8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    27cc:	ldr	x19, [sp, #168]
    27d0:	cbz	x19, 2530 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xfc>
    27d4:	ldr	x0, [x19, #576]
    27d8:	add	x1, x19, #0x250
    27dc:	cmp	x0, x1
    27e0:	b.eq	27e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3b4>  // b.none
    27e4:	bl	0 <free>
    27e8:	ldr	w2, [x19, #24]
    27ec:	mov	w1, #0x88                  	// #136
    27f0:	ldr	x0, [x19, #16]
    27f4:	umaddl	x1, w2, w1, x0
    27f8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    27fc:	ldr	x0, [x19, #16]
    2800:	add	x1, x19, #0x20
    2804:	cmp	x0, x1
    2808:	b.eq	2810 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3dc>  // b.none
    280c:	bl	0 <free>
    2810:	mov	x0, x19
    2814:	mov	x1, #0x350                 	// #848
    2818:	bl	0 <_ZdlPvm>
    281c:	b	2530 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xfc>
    2820:	add	x23, sp, #0xe0
    2824:	mov	w3, #0x0                   	// #0
    2828:	mov	x0, x23
    282c:	mov	x2, #0x0                   	// #0
    2830:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2834:	ldr	x0, [x21, #24]
    2838:	cbz	x0, 2854 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x420>
    283c:	ldr	x1, [x0]
    2840:	mov	x3, x23
    2844:	mov	x2, x19
    2848:	ldr	x4, [x1, #72]
    284c:	ldr	x1, [x21, #16]
    2850:	blr	x4
    2854:	ldr	w1, [x22, #8]
    2858:	mov	w0, #0x14                  	// #20
    285c:	ldr	x21, [x22]
    2860:	mov	w27, #0x0                   	// #0
    2864:	umaddl	x0, w1, w0, x21
    2868:	str	x0, [sp, #96]
    286c:	add	x0, x19, #0x10
    2870:	str	x0, [sp, #112]
    2874:	add	x0, sp, #0xb8
    2878:	str	x0, [sp, #120]
    287c:	add	x0, sp, #0xb0
    2880:	str	x0, [sp, #128]
    2884:	ldr	x0, [sp, #96]
    2888:	cmp	x21, x0
    288c:	b.eq	2aec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6b8>  // b.none
    2890:	ldr	w1, [x21]
    2894:	tbz	w1, #31, 28b4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x480>
    2898:	ldrh	w22, [x21, #8]
    289c:	ldrb	w0, [x21, #16]
    28a0:	cbz	w0, 28f4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4c0>
    28a4:	cbnz	w22, 2918 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4e4>
    28a8:	add	w27, w27, #0x1
    28ac:	add	x21, x21, #0x14
    28b0:	b	2884 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x450>
    28b4:	ldr	x0, [sp, #112]
    28b8:	sxtw	x1, w1
    28bc:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    28c0:	ldrb	w1, [x0]
    28c4:	cmp	w1, #0x1
    28c8:	b.eq	28ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4b8>  // b.none
    28cc:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    28d0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    28d4:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    28d8:	add	x3, x3, #0x0
    28dc:	add	x1, x1, #0x0
    28e0:	add	x0, x0, #0x0
    28e4:	mov	w2, #0x41                  	// #65
    28e8:	b	24ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xb8>
    28ec:	ldrh	w22, [x0, #8]
    28f0:	b	289c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x468>
    28f4:	cbnz	w22, 2918 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4e4>
    28f8:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    28fc:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2900:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2904:	add	x3, x3, #0x0
    2908:	add	x1, x1, #0x0
    290c:	add	x0, x0, #0x0
    2910:	mov	w2, #0x2bb                 	// #699
    2914:	b	24ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xb8>
    2918:	mov	w1, w27
    291c:	mov	x0, x23
    2920:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2924:	strb	w0, [sp, #104]
    2928:	ldr	x19, [sp, #168]
    292c:	ldp	w1, w0, [x19, #24]
    2930:	cmp	w1, w0
    2934:	b.cc	2a5c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x628>  // b.lo, b.ul, b.last
    2938:	mov	w0, w0
    293c:	add	x0, x0, #0x2
    2940:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2944:	mov	x1, #0xffffffff            	// #4294967295
    2948:	cmp	x0, x1
    294c:	stp	x0, x1, [sp, #176]
    2950:	ldp	x1, x0, [sp, #120]
    2954:	csel	x0, x0, x1, ls  // ls = plast
    2958:	mov	x1, #0x88                  	// #136
    295c:	ldr	x28, [x0]
    2960:	mul	x0, x28, x1
    2964:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2968:	mov	x26, x0
    296c:	ldr	w5, [x19, #24]
    2970:	mov	x1, #0x88                  	// #136
    2974:	ldr	x2, [x19, #16]
    2978:	mov	x3, x0
    297c:	madd	x5, x5, x1, x2
    2980:	cmp	x5, x2
    2984:	b.eq	2a2c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f8>  // b.none
    2988:	ldr	x0, [x2]
    298c:	str	x0, [x3]
    2990:	ldr	w0, [x2, #8]
    2994:	str	w0, [x3, #8]
    2998:	ldrh	w0, [x2, #12]
    299c:	strh	w0, [x3, #12]
    29a0:	ldr	w0, [x2, #16]
    29a4:	str	w0, [x3, #16]
    29a8:	ldrb	w0, [x2, #20]
    29ac:	strb	w0, [x3, #20]
    29b0:	ldrb	w0, [x2, #21]
    29b4:	strb	w0, [x3, #21]
    29b8:	ldrb	w0, [x2, #22]
    29bc:	strb	w0, [x3, #22]
    29c0:	ldr	x0, [x2, #24]
    29c4:	str	x0, [x3, #24]
    29c8:	ldr	x0, [x2, #32]
    29cc:	str	x0, [x3, #32]
    29d0:	ldr	w0, [x2, #40]
    29d4:	str	w0, [x3, #40]
    29d8:	ldur	x0, [x2, #44]
    29dc:	stur	x0, [x3, #44]
    29e0:	ldr	w0, [x2, #52]
    29e4:	str	w0, [x3, #52]
    29e8:	add	x0, x3, #0x48
    29ec:	str	x0, [x3, #56]
    29f0:	mov	w0, #0x4                   	// #4
    29f4:	str	wzr, [x3, #64]
    29f8:	str	w0, [x3, #68]
    29fc:	ldr	w0, [x2, #64]
    2a00:	cbz	w0, 2a20 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5ec>
    2a04:	add	x1, x2, #0x38
    2a08:	add	x0, x3, #0x38
    2a0c:	stp	x3, x2, [sp, #136]
    2a10:	str	x5, [sp, #152]
    2a14:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2a18:	ldp	x3, x2, [sp, #136]
    2a1c:	ldr	x5, [sp, #152]
    2a20:	add	x3, x3, #0x88
    2a24:	add	x2, x2, #0x88
    2a28:	b	2980 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x54c>
    2a2c:	ldr	w2, [x19, #24]
    2a30:	mov	w1, #0x88                  	// #136
    2a34:	ldr	x0, [x19, #16]
    2a38:	umaddl	x1, w2, w1, x0
    2a3c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2a40:	ldr	x0, [x19, #16]
    2a44:	add	x1, x19, #0x20
    2a48:	cmp	x0, x1
    2a4c:	b.eq	2a54 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x620>  // b.none
    2a50:	bl	0 <free>
    2a54:	str	x26, [x19, #16]
    2a58:	str	w28, [x19, #28]
    2a5c:	ldr	w1, [x19, #24]
    2a60:	mov	w0, #0x88                  	// #136
    2a64:	ldr	x2, [x19, #16]
    2a68:	umull	x1, w1, w0
    2a6c:	add	x0, x2, x1
    2a70:	str	x21, [x2, x1]
    2a74:	mov	w1, #0xfffffe00            	// #-512
    2a78:	str	w1, [x0, #8]
    2a7c:	ldrb	w1, [sp, #104]
    2a80:	strb	w1, [x0, #20]
    2a84:	add	x1, x0, #0x48
    2a88:	str	wzr, [x0, #16]
    2a8c:	str	xzr, [x0, #40]
    2a90:	str	wzr, [x0, #52]
    2a94:	str	x1, [x0, #56]
    2a98:	mov	x1, #0x400000000           	// #17179869184
    2a9c:	str	x1, [x0, #64]
    2aa0:	strh	w22, [x0, #12]
    2aa4:	ldr	w1, [x19, #24]
    2aa8:	strb	w25, [x0, #21]
    2aac:	strb	wzr, [x0, #22]
    2ab0:	add	x1, x1, #0x1
    2ab4:	stp	xzr, xzr, [x0, #24]
    2ab8:	strh	wzr, [x0, #48]
    2abc:	add	x0, x19, #0x10
    2ac0:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2ac4:	ldr	w0, [x19, #24]
    2ac8:	cbnz	w0, 28a8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x474>
    2acc:	adrp	x3, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2ad0:	adrp	x1, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2ad4:	adrp	x0, 0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2ad8:	add	x3, x3, #0x0
    2adc:	add	x1, x1, #0x0
    2ae0:	add	x0, x0, #0x0
    2ae4:	mov	w2, #0xa7                  	// #167
    2ae8:	b	24ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0xb8>
    2aec:	add	x1, sp, #0xa8
    2af0:	mov	x2, #0x0                   	// #0
    2af4:	mov	x0, x20
    2af8:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2afc:	mov	x0, x23
    2b00:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2b04:	b	27c4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x390>
    2b08:	tbnz	w0, #0, 2b34 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x700>
    2b0c:	mov	x0, x24
    2b10:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2b14:	mov	x0, x20
    2b18:	ldp	x19, x20, [sp, #16]
    2b1c:	ldp	x21, x22, [sp, #32]
    2b20:	ldp	x23, x24, [sp, #48]
    2b24:	ldp	x25, x26, [sp, #64]
    2b28:	ldp	x27, x28, [sp, #80]
    2b2c:	ldp	x29, x30, [sp], #240
    2b30:	ret
    2b34:	mov	x0, x24
    2b38:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2b3c:	bl	0 <_ZNK4llvm15MCSubtargetInfo20getWriteLatencyEntryEPKNS_16MCSchedClassDescEj.isra.0.part.0>
    2b40:	b	2b14 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6e0>

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0], #8
  10:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	b.eq	24 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv+0x24>  // b.none
  10:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	cset	w0, eq  // eq = none
  20:	ret
  24:	mov	w0, #0x1                   	// #1
  28:	b	20 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv+0x20>

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x30                  	// #48
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, sp, #0x30
  10:	add	x1, x20, #0x10
  14:	stp	x1, xzr, [sp, #48]
  18:	mov	w1, #0x1                   	// #1
  1c:	mov	x19, x8
  20:	str	w1, [sp, #112]
  24:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  28:	strb	wzr, [sp, #64]
  2c:	ldr	x1, [x1]
  30:	str	x21, [sp, #32]
  34:	stp	xzr, xzr, [sp, #88]
  38:	add	x21, sp, #0x50
  3c:	add	x1, x1, #0x10
  40:	str	x1, [sp, #80]
  44:	ldr	x1, [x0]
  48:	str	xzr, [sp, #104]
  4c:	str	x20, [sp, #120]
  50:	ldr	x2, [x1, #16]
  54:	mov	x1, x21
  58:	blr	x2
  5c:	ldr	x0, [sp, #88]
  60:	ldr	x1, [sp, #104]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x21
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #120]
  78:	mov	x0, x19
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
  80:	mov	x0, x21
  84:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  88:	mov	x0, x20
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
  90:	mov	x0, x19
  94:	ldp	x19, x20, [sp, #16]
  98:	ldr	x21, [sp, #32]
  9c:	ldp	x29, x30, [sp], #128
  a0:	ret

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	ldp	x1, x2, [x3, #8]
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZN4llvm12NextPowerOf2Em:

0000000000000000 <_ZN4llvm12NextPowerOf2Em>:
   0:	orr	x0, x0, x0, lsr #1
   4:	orr	x0, x0, x0, lsr #2
   8:	orr	x0, x0, x0, lsr #4
   c:	orr	x0, x0, x0, lsr #8
  10:	orr	x0, x0, x0, lsr #16
  14:	orr	x0, x0, x0, lsr #32
  18:	add	x0, x0, #0x1
  1c:	ret

Disassembly of section .text._ZN4llvm13PowerOf2FloorEm:

0000000000000000 <_ZN4llvm13PowerOf2FloorEm>:
   0:	cbz	x0, 10 <_ZN4llvm13PowerOf2FloorEm+0x10>
   4:	clz	x0, x0
   8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   c:	lsr	x0, x1, x0
  10:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x19
  14:	bl	0 <malloc>
  18:	mov	x20, x0
  1c:	cbnz	x0, 34 <_ZN4llvm11safe_mallocEm+0x34>
  20:	cbz	x19, 44 <_ZN4llvm11safe_mallocEm+0x44>
  24:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  28:	mov	w1, #0x1                   	// #1
  2c:	add	x0, x0, #0x0
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x19, #0x1                   	// #1
  48:	b	10 <_ZN4llvm11safe_mallocEm+0x10>

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	ldp	x3, x4, [x0, #16]
   4:	sub	x3, x3, x4
   8:	cmp	x3, x2
   c:	b.cs	14 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x14>  // b.hs, b.nlast
  10:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  14:	stp	x29, x30, [sp, #-32]!
  18:	mov	x29, sp
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x0
  24:	mov	x20, x2
  28:	cbz	x2, 40 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x40>
  2c:	mov	x0, x4
  30:	bl	0 <memcpy>
  34:	ldr	x2, [x19, #24]
  38:	add	x20, x2, x20
  3c:	str	x20, [x19, #24]
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cbz	x1, 38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>
  18:	mov	x0, x1
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	mov	x1, x19
  28:	mov	x0, x20
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>
  38:	mov	x2, #0x0                   	// #0
  3c:	b	24 <_ZN4llvm11raw_ostreamlsEPKc+0x24>

Disassembly of section .text._ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>:
   0:	ldr	w3, [x0, #8]
   4:	ldr	x2, [x0, #64]
   8:	cmp	w1, w3
   c:	b.cc	38 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE+0x38>  // b.lo, b.ul, b.last
  10:	stp	x29, x30, [sp, #-16]!
  14:	adrp	x3, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  18:	adrp	x1, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  1c:	mov	x29, sp
  20:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo7getNameENS_10MCRegisterE>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x1b8                 	// #440
  34:	bl	0 <__assert_fail>
  38:	mov	w3, #0x18                  	// #24
  3c:	ldr	x0, [x0]
  40:	umull	x1, w1, w3
  44:	ldr	w0, [x0, x1]
  48:	add	x0, x2, x0
  4c:	ret

Disassembly of section .text._ZNK4llvm11MCInstrInfo3getEj:

0000000000000000 <_ZNK4llvm11MCInstrInfo3getEj>:
   0:	ldr	w2, [x0, #24]
   4:	cmp	w2, w1
   8:	b.hi	34 <_ZNK4llvm11MCInstrInfo3getEj+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj>
  14:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x2d                  	// #45
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	ubfiz	x1, x1, #6, #32
  3c:	add	x0, x0, x1
  40:	ret

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #40]
   c:	cbnz	x2, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  14:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  18:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x154                 	// #340
  2c:	bl	0 <__assert_fail>
  30:	ldr	w2, [x0, #48]
  34:	cmp	w2, w1
  38:	b.hi	5c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x5c>  // b.pmore
  3c:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  40:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  44:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x156                 	// #342
  58:	b	2c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x2c>
  5c:	ldr	x0, [x0, #32]
  60:	ubfiz	x1, x1, #5, #32
  64:	ldp	x29, x30, [sp], #16
  68:	add	x0, x0, x1
  6c:	ret

Disassembly of section .text._ZNK4llvm12MCSchedModel17getSchedClassDescEj:

0000000000000000 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #40]
   c:	cbnz	x2, 30 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  14:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  18:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x15b                 	// #347
  2c:	bl	0 <__assert_fail>
  30:	ldr	w0, [x0, #52]
  34:	cmp	w0, w1
  38:	b.hi	5c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x5c>  // b.pmore
  3c:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  40:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  44:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x15d                 	// #349
  58:	b	2c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x2c>
  5c:	mov	w0, #0x18                  	// #24
  60:	ldp	x29, x30, [sp], #16
  64:	umaddl	x0, w1, w0, x2
  68:	ret

Disassembly of section .text._ZN4llvm5ErrorC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm5ErrorC1ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EE>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x1, x2, #0x1
   c:	str	x1, [x0]
  10:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca21getResourceStateIndexEm:

0000000000000000 <_ZN4llvm3mca21getResourceStateIndexEm>:
   0:	cbnz	x0, 2c <_ZN4llvm3mca21getResourceStateIndexEm+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
   c:	adrp	x1, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm3mca21getResourceStateIndexEm>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x64                  	// #100
  28:	bl	0 <__assert_fail>
  2c:	clz	x0, x0
  30:	mov	w1, #0x3f                  	// #63
  34:	sub	w0, w1, w0
  38:	ret

Disassembly of section .text._ZN4llvm5APIntC2Ejmb:

0000000000000000 <_ZN4llvm5APIntC1Ejmb>:
   0:	str	w1, [x0, #8]
   4:	mov	w4, w1
   8:	cbnz	w1, 34 <_ZN4llvm5APIntC1Ejmb+0x34>
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APIntC1Ejmb>
  14:	adrp	x1, 0 <_ZN4llvm5APIntC1Ejmb>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APIntC1Ejmb>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x117                 	// #279
  30:	bl	0 <__assert_fail>
  34:	mov	x1, x2
  38:	cmp	w4, #0x40
  3c:	b.hi	58 <_ZN4llvm5APIntC1Ejmb+0x58>  // b.pmore
  40:	neg	w4, w4
  44:	mov	x3, #0xffffffffffffffff    	// #-1
  48:	lsr	x4, x3, x4
  4c:	and	x4, x4, x2
  50:	str	x4, [x0]
  54:	ret
  58:	and	w2, w3, #0xff
  5c:	b	0 <_ZN4llvm5APInt12initSlowCaseEmb>

Disassembly of section .text._ZN4llvm5APIntD2Ev:

0000000000000000 <_ZN4llvm5APIntD1Ev>:
   0:	ldr	w1, [x0, #8]
   4:	cmp	w1, #0x40
   8:	b.ls	18 <_ZN4llvm5APIntD1Ev+0x18>  // b.plast
   c:	ldr	x0, [x0]
  10:	cbz	x0, 18 <_ZN4llvm5APIntD1Ev+0x18>
  14:	b	0 <_ZdaPv>
  18:	ret

Disassembly of section .text._ZNK4llvm5APIntixEj:

0000000000000000 <_ZNK4llvm5APIntixEj>:
   0:	ldr	w3, [x0, #8]
   4:	cmp	w1, w3
   8:	b.cc	34 <_ZNK4llvm5APIntixEj+0x34>  // b.lo, b.ul, b.last
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm5APIntixEj>
  14:	adrp	x1, 0 <_ZNK4llvm5APIntixEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm5APIntixEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x472                 	// #1138
  30:	bl	0 <__assert_fail>
  34:	mov	x2, #0x1                   	// #1
  38:	cmp	w3, #0x40
  3c:	lsl	x2, x2, x1
  40:	ldr	x0, [x0]
  44:	b.ls	50 <_ZNK4llvm5APIntixEj+0x50>  // b.plast
  48:	lsr	w1, w1, #6
  4c:	ldr	x0, [x0, x1, lsl #3]
  50:	tst	x2, x0
  54:	cset	w0, ne  // ne = any
  58:	ret

Disassembly of section .text._ZN4llvm5APInt6setBitEj:

0000000000000000 <_ZN4llvm5APInt6setBitEj>:
   0:	ldr	w4, [x0, #8]
   4:	cmp	w4, w1
   8:	b.hi	34 <_ZN4llvm5APInt6setBitEj+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APInt6setBitEj>
  14:	adrp	x1, 0 <_ZN4llvm5APInt6setBitEj>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APInt6setBitEj>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x59d                 	// #1437
  30:	bl	0 <__assert_fail>
  34:	mov	x2, #0x1                   	// #1
  38:	cmp	w4, #0x40
  3c:	lsl	x3, x2, x1
  40:	ldr	x2, [x0]
  44:	b.hi	54 <_ZN4llvm5APInt6setBitEj+0x54>  // b.pmore
  48:	orr	x2, x2, x3
  4c:	str	x2, [x0]
  50:	ret
  54:	lsr	w1, w1, #6
  58:	lsl	x1, x1, #3
  5c:	ldr	x0, [x2, x1]
  60:	orr	x3, x0, x3
  64:	str	x3, [x2, x1]
  68:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x99                  	// #153
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #4
  3c:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS1_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefImEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefImEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZNK4llvm8ArrayRefImEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm8ArrayRefImEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm8ArrayRefImEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm8ArrayRefImEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xfa                  	// #250
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #3
  3c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #4
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	w1, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x20, x1
  1c:	b.cs	34 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x34>  // b.hs, b.nlast
  20:	mov	x1, x20
  24:	mov	x0, x19
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  34:	b.ls	8c <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x8c>  // b.plast
  38:	ldr	w1, [x0, #12]
  3c:	cmp	x20, x1
  40:	b.ls	54 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x54>  // b.plast
  44:	mov	x2, x20
  48:	add	x1, x0, #0x10
  4c:	mov	x3, #0x14                  	// #20
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	ldr	w3, [x19, #8]
  58:	mov	w0, #0x14                  	// #20
  5c:	ldr	x1, [x19]
  60:	umaddl	x3, w3, w0, x1
  64:	mov	x0, #0x14                  	// #20
  68:	madd	x0, x20, x0, x1
  6c:	cmp	x0, x3
  70:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>  // b.none
  74:	stp	wzr, wzr, [x3]
  78:	add	x3, x3, #0x14
  7c:	sturh	wzr, [x3, #-12]
  80:	stur	wzr, [x3, #-8]
  84:	sturb	wzr, [x3, #-4]
  88:	b	6c <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x6c>
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca15WriteDescriptorEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	mov	x2, #0x14                  	// #20
  3c:	madd	x0, x1, x2, x0
  40:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	ldr	w1, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x20, x1
  1c:	b.cs	34 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x34>  // b.hs, b.nlast
  20:	mov	x1, x20
  24:	mov	x0, x19
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  34:	b.ls	80 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x80>  // b.plast
  38:	ldr	w1, [x0, #12]
  3c:	cmp	x20, x1
  40:	b.ls	54 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x54>  // b.plast
  44:	mov	x3, #0x10                  	// #16
  48:	mov	x2, x20
  4c:	add	x1, x0, x3
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	ldr	x0, [x19]
  58:	ldr	w3, [x19, #8]
  5c:	add	x3, x0, x3, lsl #4
  60:	add	x0, x0, x20, lsl #4
  64:	cmp	x0, x3
  68:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x20>  // b.none
  6c:	stp	wzr, wzr, [x3]
  70:	add	x3, x3, #0x10
  74:	sturh	wzr, [x3, #-8]
  78:	stur	wzr, [x3, #-4]
  7c:	b	64 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x64>
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca14ReadDescriptorEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #4
  3c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #4
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #24]
   c:	cbz	w3, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0xb0>
  10:	ldr	w1, [x1]
  14:	mov	w2, #0xfffd                	// #65533
  18:	and	w9, w1, #0xffff
  1c:	cmp	w2, w1, uxth
  20:	b.cs	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0x44>  // b.hs, b.nlast
  24:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_>
  28:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_>
  2c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x250                 	// #592
  40:	bl	0 <__assert_fail>
  44:	and	w1, w1, #0xffff
  48:	mov	w4, #0x25                  	// #37
  4c:	sub	w5, w3, #0x1
  50:	mov	w10, #0xffff                	// #65535
  54:	ldr	x2, [x0, #8]
  58:	mul	w1, w1, w4
  5c:	mov	w4, #0x1                   	// #1
  60:	and	w1, w1, w5
  64:	ubfiz	x6, x1, #4, #32
  68:	add	x7, x2, x6
  6c:	ldrh	w6, [x2, x6]
  70:	cmp	w9, w6
  74:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0x90>  // b.none
  78:	cmp	w6, w10
  7c:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0xb0>  // b.none
  80:	add	w1, w1, w4
  84:	add	w4, w4, #0x1
  88:	and	w1, w5, w1
  8c:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0x64>
  90:	ubfiz	x3, x3, #4, #32
  94:	str	x0, [x8]
  98:	ldr	x0, [x0]
  9c:	add	x2, x2, x3
  a0:	str	x0, [x8, #8]
  a4:	stp	x7, x2, [x8, #16]
  a8:	ldp	x29, x30, [sp], #16
  ac:	ret
  b0:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_>
  b4:	b	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E7find_asIjEENS_16DenseMapIteratorItS8_SA_SD_Lb0EEERKT_+0xa8>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E3endEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #4
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv>:
   0:	ldr	w1, [x0, #8]
   4:	cbnz	w1, 30 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv>
  10:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca9ReadStateEvE4backEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xa7                  	// #167
  2c:	bl	0 <__assert_fail>
  30:	mov	w3, #0x30                  	// #48
  34:	mov	x2, #0xffffffffffffffd0    	// #-48
  38:	ldr	x0, [x0]
  3c:	umaddl	x1, w1, w3, x2
  40:	add	x0, x0, x1
  44:	ret

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC2IS6_EEOT_PNSt9enable_ifIXsrSt14is_convertibleIS9_S6_E5valueEvE4typeE:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEEC1IS6_EEOT_PNSt9enable_ifIXsrSt14is_convertibleIS9_S6_E5valueEvE4typeE>:
   0:	ldrb	w2, [x0, #8]
   4:	and	w2, w2, #0xfffffffc
   8:	orr	w2, w2, #0x2
   c:	strb	w2, [x0, #8]
  10:	ldr	x2, [x1]
  14:	str	xzr, [x1]
  18:	str	x2, [x0]
  1c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cmp	x19, x20
  18:	b.eq	38 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x38>  // b.none
  1c:	ldur	x0, [x19, #-80]
  20:	sub	x19, x19, #0x88
  24:	add	x1, x19, #0x48
  28:	cmp	x0, x1
  2c:	b.eq	14 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x14>  // b.none
  30:	bl	0 <free>
  34:	b	14 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x14>
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #4, #32
  44:	mov	x2, #0xfffffffffffffff8    	// #-8
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x5c>  // b.none
  54:	str	x2, [x0], #16
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x23, x0
  10:	ldr	x24, [x0]
  14:	str	x27, [sp, #80]
  18:	ldr	x27, [x0, #8]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	sub	x3, x27, x24
  28:	movk	x19, #0xaaab
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  34:	asr	x3, x3, #3
  38:	stp	x25, x26, [sp, #64]
  3c:	movk	x0, #0x555, lsl #48
  40:	mul	x3, x3, x19
  44:	cmp	x3, x0
  48:	b.ne	58 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x58>  // b.any
  4c:	adrp	x0, 0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
  50:	add	x0, x0, #0x0
  54:	bl	0 <_ZSt20__throw_length_errorPKc>
  58:	cmp	x3, #0x0
  5c:	mov	x25, x1
  60:	csinc	x19, x3, xzr, ne  // ne = any
  64:	mov	x26, x2
  68:	adds	x19, x19, x3
  6c:	sub	x21, x1, x24
  70:	b.cs	180 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x180>  // b.hs, b.nlast
  74:	mov	x22, #0x0                   	// #0
  78:	cbz	x19, 94 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x94>
  7c:	cmp	x19, x0
  80:	csel	x19, x19, x0, ls  // ls = plast
  84:	mov	x0, #0x18                  	// #24
  88:	mul	x0, x19, x0
  8c:	bl	0 <_Znwm>
  90:	mov	x22, x0
  94:	add	x2, x22, x21
  98:	ldp	x0, x1, [x26]
  9c:	stp	x0, x1, [x2]
  a0:	ldr	x0, [x26, #16]
  a4:	str	x0, [x2, #16]
  a8:	mov	x2, #0x0                   	// #0
  ac:	add	x3, x2, x24
  b0:	cmp	x25, x3
  b4:	b.ne	114 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x114>  // b.any
  b8:	mov	x20, #0xaaab                	// #43691
  bc:	lsr	x21, x21, #3
  c0:	movk	x20, #0xaaaa, lsl #16
  c4:	mov	x2, #0x18                  	// #24
  c8:	movk	x20, #0xaaaa, lsl #32
  cc:	mov	x4, #0x0                   	// #0
  d0:	movk	x20, #0xaaa, lsl #48
  d4:	mov	x0, x20
  d8:	mul	x21, x21, x20
  dc:	and	x21, x21, #0x1fffffffffffffff
  e0:	madd	x1, x21, x2, x24
  e4:	madd	x21, x21, x2, x2
  e8:	add	x21, x22, x21
  ec:	add	x5, x1, x4
  f0:	cmp	x27, x5
  f4:	b.eq	130 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x130>  // b.none
  f8:	add	x6, x21, x4
  fc:	add	x4, x4, #0x18
 100:	ldp	x2, x3, [x5]
 104:	stp	x2, x3, [x6]
 108:	ldr	x2, [x5, #16]
 10c:	str	x2, [x6, #16]
 110:	b	ec <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xec>
 114:	add	x4, x22, x2
 118:	add	x2, x2, #0x18
 11c:	ldp	x0, x1, [x3]
 120:	stp	x0, x1, [x4]
 124:	ldr	x0, [x3, #16]
 128:	str	x0, [x4, #16]
 12c:	b	ac <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xac>
 130:	sub	x20, x27, x1
 134:	lsr	x20, x20, #3
 138:	mul	x20, x20, x0
 13c:	mov	x0, #0x18                  	// #24
 140:	and	x20, x20, #0x1fffffffffffffff
 144:	madd	x20, x20, x0, x21
 148:	cbz	x24, 154 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x154>
 14c:	mov	x0, x24
 150:	bl	0 <_ZdlPv>
 154:	mov	x0, #0x18                  	// #24
 158:	ldp	x25, x26, [sp, #64]
 15c:	madd	x19, x19, x0, x22
 160:	ldr	x27, [sp, #80]
 164:	stp	x22, x20, [x23]
 168:	str	x19, [x23, #16]
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x29, x30, [sp], #96
 17c:	ret
 180:	mov	x19, x0
 184:	b	84 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x84>

Disassembly of section .text._ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv:

0000000000000000 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>:
   0:	ldp	x1, x2, [x0, #16]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  14:	adrp	x1, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x4e0                 	// #1248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0, #16]
  38:	cmp	x2, x1
  3c:	b.eq	58 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.none
  40:	ldr	x3, [x1]
  44:	cmn	x3, #0x3
  48:	b.ls	58 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x58>  // b.plast
  4c:	add	x1, x1, #0x10
  50:	str	x1, [x0, #16]
  54:	b	34 <_ZN4llvm16DenseMapIteratorImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEELb0EE23AdvancePastEmptyBucketsEv+0x34>
  58:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm3mca16InstructionErrorINS0_6MCInstEEESt14default_deleteIS4_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm3mca16InstructionErrorINS0_6MCInstEEESt14default_deleteIS4_EED1Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 18 <_ZNSt10unique_ptrIN4llvm3mca16InstructionErrorINS0_6MCInstEEESt14default_deleteIS4_EED1Ev+0x18>
   8:	ldr	x1, [x0]
   c:	ldr	x1, [x1, #8]
  10:	mov	x16, x1
  14:	br	x16
  18:	ret

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbnz	w1, #0, 30 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE15getErrorStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x27c                 	// #636
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldrb	w0, [x0, #8]
  18:	orr	w0, w0, #0x3
  1c:	strb	w0, [x20, #8]
  20:	mov	x0, x1
  24:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>
  28:	tst	w0, #0xff
  2c:	b.ne	50 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE+0x50>  // b.any
  30:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>
  34:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>
  38:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>
  3c:	add	x3, x3, #0x0
  40:	add	x1, x1, #0x0
  44:	add	x0, x0, #0x0
  48:	mov	w2, #0x1ce                 	// #462
  4c:	bl	0 <__assert_fail>
  50:	mov	x0, x20
  54:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEEC1ENS_5ErrorE>
  58:	ldr	x1, [x19]
  5c:	and	x1, x1, #0xfffffffffffffffe
  60:	str	x1, [x0]
  64:	str	xzr, [x19]
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv>:
   0:	ldrb	w1, [x0, #8]
   4:	tbz	w1, #0, 30 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv>
  10:	adrp	x1, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEE10getStorageEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x272                 	// #626
  2c:	bl	0 <__assert_fail>
  30:	ret

Disassembly of section .text._ZN4llvm3mca9InstrDescD2Ev:

0000000000000000 <_ZN4llvm3mca9InstrDescD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	add	x1, x0, #0xc0
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #176]
  18:	cmp	x0, x1
  1c:	b.eq	24 <_ZN4llvm3mca9InstrDescD1Ev+0x24>  // b.none
  20:	bl	0 <free>
  24:	ldr	x0, [x19, #96]
  28:	add	x1, x19, #0x70
  2c:	cmp	x0, x1
  30:	b.eq	38 <_ZN4llvm3mca9InstrDescD1Ev+0x38>  // b.none
  34:	bl	0 <free>
  38:	ldr	x0, [x19], #16
  3c:	cmp	x0, x19
  40:	b.eq	50 <_ZN4llvm3mca9InstrDescD1Ev+0x50>  // b.none
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <free>
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0xb0>
   8:	ldr	x4, [x1]
   c:	cmn	x4, #0x8
  10:	b.eq	1c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x1c>  // b.none
  14:	cmn	x4, #0x10
  18:	b.ne	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x44>  // b.any
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_>
  24:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x250                 	// #592
  40:	bl	0 <__assert_fail>
  44:	ldr	x8, [x0, #8]
  48:	lsr	w0, w4, #9
  4c:	sub	w3, w3, #0x1
  50:	eor	w0, w0, w4, lsr #4
  54:	and	w0, w0, w3
  58:	mov	w6, #0x1                   	// #1
  5c:	mov	x5, #0x0                   	// #0
  60:	ubfiz	x7, x0, #4, #32
  64:	add	x1, x8, x7
  68:	ldr	x7, [x8, x7]
  6c:	cmp	x4, x7
  70:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0xbc>  // b.none
  74:	cmn	x7, #0x8
  78:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x90>  // b.any
  7c:	cmp	x5, #0x0
  80:	mov	w0, #0x0                   	// #0
  84:	csel	x1, x5, x1, ne  // ne = any
  88:	str	x1, [x2]
  8c:	ret
  90:	cmn	x7, #0x10
  94:	b.ne	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0xa0>  // b.any
  98:	cmp	x5, #0x0
  9c:	csel	x5, x5, x1, ne  // ne = any
  a0:	add	w0, w0, w6
  a4:	add	w6, w6, #0x1
  a8:	and	w0, w3, w0
  ac:	b	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x60>
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x88>
  bc:	mov	w0, #0x1                   	// #1
  c0:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E15LookupBucketForIS4_EEbRKT_RPSG_+0x88>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #4, #32
  44:	mov	w2, #0xffffffff            	// #-1
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x5c>  // b.none
  54:	strh	w2, [x0], #16
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #4, #32
  44:	mov	x2, #0xffffffffffffffff    	// #-1
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x5c>  // b.none
  54:	str	x2, [x0], #16
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0xa8>
   8:	ldr	x6, [x1]
   c:	cmn	x6, #0x3
  10:	b.ls	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x3c>  // b.plast
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x250                 	// #592
  38:	bl	0 <__assert_fail>
  3c:	ldr	x8, [x0, #8]
  40:	mov	w0, #0x25                  	// #37
  44:	sub	w3, w3, #0x1
  48:	mov	w5, #0x1                   	// #1
  4c:	mul	w0, w6, w0
  50:	mov	x4, #0x0                   	// #0
  54:	and	w0, w0, w3
  58:	ubfiz	x7, x0, #4, #32
  5c:	add	x1, x8, x7
  60:	ldr	x7, [x8, x7]
  64:	cmp	x6, x7
  68:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0xb4>  // b.none
  6c:	cmn	x7, #0x1
  70:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x88>  // b.any
  74:	cmp	x4, #0x0
  78:	mov	w0, #0x0                   	// #0
  7c:	csel	x1, x4, x1, ne  // ne = any
  80:	str	x1, [x2]
  84:	ret
  88:	cmn	x7, #0x2
  8c:	b.ne	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x98>  // b.any
  90:	cmp	x4, #0x0
  94:	csel	x4, x4, x1, ne  // ne = any
  98:	add	w0, w0, w5
  9c:	add	w5, w5, #0x1
  a0:	and	w0, w3, w0
  a4:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x58>
  a8:	mov	x1, #0x0                   	// #0
  ac:	mov	w0, #0x0                   	// #0
  b0:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x80>
  b4:	mov	w0, #0x1                   	// #1
  b8:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E15LookupBucketForImEEbRKT_RPS6_+0x80>

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbnz	w0, #0, 60 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x60>
  40:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  48:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x281                 	// #641
  5c:	bl	0 <__assert_fail>
  60:	ldr	x19, [x19]
  64:	ldr	x0, [x19]
  68:	ldr	x20, [x0, #16]
  6c:	bl	0 <_ZN4llvm4dbgsEv>
  70:	mov	x1, x0
  74:	mov	x0, x19
  78:	blr	x20
  7c:	bl	0 <abort>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  90:	b	7c <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x7c>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0xb4>
   8:	ldrh	w6, [x1]
   c:	mov	w1, #0xfffd                	// #65533
  10:	cmp	w6, w1
  14:	b.ls	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0x40>  // b.plast
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_>
  20:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_>
  24:	mov	x29, sp
  28:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x250                 	// #592
  3c:	bl	0 <__assert_fail>
  40:	ldr	x8, [x0, #8]
  44:	mov	w0, #0x25                  	// #37
  48:	sub	w3, w3, #0x1
  4c:	mov	w5, #0x1                   	// #1
  50:	mul	w0, w6, w0
  54:	mov	x4, #0x0                   	// #0
  58:	mov	w9, #0xffff                	// #65535
  5c:	mov	w10, #0xfffe                	// #65534
  60:	and	w0, w0, w3
  64:	ubfiz	x7, x0, #4, #32
  68:	add	x1, x8, x7
  6c:	ldrh	w7, [x8, x7]
  70:	cmp	w6, w7
  74:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0xc0>  // b.none
  78:	cmp	w7, w9
  7c:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0x94>  // b.any
  80:	cmp	x4, #0x0
  84:	mov	w0, #0x0                   	// #0
  88:	csel	x1, x4, x1, ne  // ne = any
  8c:	str	x1, [x2]
  90:	ret
  94:	cmp	w7, w10
  98:	b.ne	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0xa4>  // b.any
  9c:	cmp	x4, #0x0
  a0:	csel	x4, x4, x1, ne  // ne = any
  a4:	add	w0, w0, w5
  a8:	add	w5, w5, #0x1
  ac:	and	w0, w3, w0
  b0:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0x64>
  b4:	mov	x1, #0x0                   	// #0
  b8:	mov	w0, #0x0                   	// #0
  bc:	b	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0x8c>
  c0:	mov	w0, #0x1                   	// #1
  c4:	b	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E15LookupBucketForItEEbRKT_RPSD_+0x8c>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x21, x2
  1c:	cbnz	x1, 30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x30>
  20:	cbz	x2, 30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x30>
  24:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  28:	add	x0, x0, #0x0
  2c:	bl	0 <_ZSt19__throw_logic_errorPKc>
  30:	sub	x0, x21, x20
  34:	str	x0, [sp, #56]
  38:	cmp	x0, #0xf
  3c:	b.ls	5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x5c>  // b.plast
  40:	add	x1, sp, #0x38
  44:	mov	x0, x19
  48:	mov	x2, #0x0                   	// #0
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	str	x0, [x19]
  54:	ldr	x0, [sp, #56]
  58:	str	x0, [x19, #16]
  5c:	ldr	x0, [x19]
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
  6c:	ldr	x1, [x19]
  70:	ldr	x0, [sp, #56]
  74:	str	x0, [x19, #8]
  78:	strb	wzr, [x1, x0]
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #64
  88:	ret

Disassembly of section .text._ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	w22, [x0, #24]
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x21, [x0, #8]
  20:	sub	w0, w1, #0x1
  24:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  28:	cmp	w0, #0x40
  2c:	mov	w1, #0x40                  	// #64
  30:	csel	w0, w0, w1, cs  // cs = hs, nlast
  34:	str	w0, [x19, #24]
  38:	ubfiz	x0, x0, #4, #32
  3c:	bl	0 <_Znwm>
  40:	str	x0, [x19, #8]
  44:	cbnz	x21, 64 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x64>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x29, x30, [sp], #80
  60:	ret
  64:	ubfiz	x22, x22, #4, #32
  68:	mov	x20, x21
  6c:	add	x23, x21, x22
  70:	add	x24, sp, #0x48
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  7c:	cmp	x23, x20
  80:	b.eq	f0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xf0>  // b.none
  84:	ldr	x0, [x20]
  88:	cmn	x0, #0x3
  8c:	b.hi	e8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xe8>  // b.pmore
  90:	mov	x2, x24
  94:	mov	x1, x20
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  a0:	tst	w0, #0xff
  a4:	b.eq	c8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xc8>  // b.none
  a8:	adrp	x3, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  ac:	adrp	x1, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  b0:	adrp	x0, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  b4:	add	x3, x3, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x0, x0, #0x0
  c0:	mov	w2, #0x17a                 	// #378
  c4:	bl	0 <__assert_fail>
  c8:	ldr	x0, [sp, #72]
  cc:	ldr	x1, [x20]
  d0:	str	x1, [x0]
  d4:	ldr	w1, [x20, #8]
  d8:	str	w1, [x0, #8]
  dc:	ldr	w0, [x19, #16]
  e0:	add	w0, w0, #0x1
  e4:	str	w0, [x19, #16]
  e8:	add	x20, x20, #0x10
  ec:	b	7c <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x7c>
  f0:	mov	x1, x22
  f4:	mov	x0, x21
  f8:	bl	0 <_ZdlPvm>
  fc:	b	50 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x50>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x20
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  1c:	tst	w0, #0xff
  20:	ldr	x0, [sp, #32]
  24:	b.ne	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0xe0>  // b.any
  28:	str	x0, [sp, #40]
  2c:	ldr	x0, [x19]
  30:	ldr	w1, [x19, #16]
  34:	add	x0, x0, #0x1
  38:	str	x0, [x19]
  3c:	ldr	w0, [x19, #24]
  40:	add	w2, w1, #0x1
  44:	add	w3, w0, w0, lsl #1
  48:	lsl	w1, w0, #1
  4c:	cmp	w3, w2, lsl #2
  50:	b.hi	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0x94>  // b.pmore
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  5c:	add	x2, sp, #0x28
  60:	mov	x1, x20
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  6c:	ldr	x0, [sp, #40]
  70:	cbnz	x0, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0xb0>
  74:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  78:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  7c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x22f                 	// #559
  90:	bl	0 <__assert_fail>
  94:	ldr	w1, [x19, #20]
  98:	sub	w1, w0, w1
  9c:	sub	w1, w1, w2
  a0:	cmp	w1, w0, lsr #3
  a4:	b.hi	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0x6c>  // b.pmore
  a8:	mov	w1, w0
  ac:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0x54>
  b0:	ldr	w1, [x19, #16]
  b4:	add	w1, w1, #0x1
  b8:	str	w1, [x19, #16]
  bc:	ldr	x1, [x0]
  c0:	cmn	x1, #0x1
  c4:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E16FindAndConstructERKm+0xd4>  // b.none
  c8:	ldr	w1, [x19, #20]
  cc:	sub	w1, w1, #0x1
  d0:	str	w1, [x19, #20]
  d4:	ldr	x1, [x20]
  d8:	str	x1, [x0]
  dc:	str	wzr, [x0, #8]
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret

Disassembly of section .text._ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	w22, [x0, #24]
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x21, [x0, #8]
  20:	sub	w0, w1, #0x1
  24:	str	x25, [sp, #64]
  28:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  2c:	cmp	w0, #0x40
  30:	mov	w1, #0x40                  	// #64
  34:	csel	w0, w0, w1, cs  // cs = hs, nlast
  38:	str	w0, [x19, #24]
  3c:	ubfiz	x0, x0, #4, #32
  40:	bl	0 <_Znwm>
  44:	str	x0, [x19, #8]
  48:	cbnz	x21, 6c <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x6c>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldr	x25, [sp, #64]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	ubfiz	x22, x22, #4, #32
  70:	mov	x20, x21
  74:	add	x23, x21, x22
  78:	add	x25, sp, #0x58
  7c:	mov	w24, #0xfffd                	// #65533
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  88:	cmp	x23, x20
  8c:	b.eq	10c <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x10c>  // b.none
  90:	ldrh	w0, [x20]
  94:	cmp	w0, w24
  98:	b.hi	104 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x104>  // b.pmore
  9c:	mov	x2, x25
  a0:	mov	x1, x20
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  ac:	tst	w0, #0xff
  b0:	b.eq	d4 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xd4>  // b.none
  b4:	adrp	x3, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  b8:	adrp	x1, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  bc:	adrp	x0, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  c0:	add	x3, x3, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x0, x0, #0x0
  cc:	mov	w2, #0x17a                 	// #378
  d0:	bl	0 <__assert_fail>
  d4:	ldr	x0, [sp, #88]
  d8:	ldrh	w1, [x20]
  dc:	strh	w1, [x0]
  e0:	ldr	x1, [x20, #8]
  e4:	str	xzr, [x20, #8]
  e8:	str	x1, [x0, #8]
  ec:	ldr	w0, [x19, #16]
  f0:	add	w0, w0, #0x1
  f4:	str	w0, [x19, #16]
  f8:	ldr	x0, [x20, #8]
  fc:	cbz	x0, 104 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x104>
 100:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 104:	add	x20, x20, #0x10
 108:	b	88 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x88>
 10c:	mov	x1, x22
 110:	mov	x0, x21
 114:	bl	0 <_ZdlPvm>
 118:	b	54 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x54>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x20
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  1c:	tst	w0, #0xff
  20:	ldr	x0, [sp, #32]
  24:	b.ne	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0xe4>  // b.any
  28:	str	x0, [sp, #40]
  2c:	ldr	x0, [x19]
  30:	ldr	w1, [x19, #16]
  34:	add	x0, x0, #0x1
  38:	str	x0, [x19]
  3c:	ldr	w0, [x19, #24]
  40:	add	w2, w1, #0x1
  44:	add	w3, w0, w0, lsl #1
  48:	lsl	w1, w0, #1
  4c:	cmp	w3, w2, lsl #2
  50:	b.hi	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0x94>  // b.pmore
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  5c:	add	x2, sp, #0x28
  60:	mov	x1, x20
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  6c:	ldr	x0, [sp, #40]
  70:	cbnz	x0, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0xb0>
  74:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  78:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  7c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x22f                 	// #559
  90:	bl	0 <__assert_fail>
  94:	ldr	w1, [x19, #20]
  98:	sub	w1, w0, w1
  9c:	sub	w1, w1, w2
  a0:	cmp	w1, w0, lsr #3
  a4:	b.hi	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0x6c>  // b.pmore
  a8:	mov	w1, w0
  ac:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0x54>
  b0:	ldr	w1, [x19, #16]
  b4:	ldrh	w2, [x0]
  b8:	add	w1, w1, #0x1
  bc:	str	w1, [x19, #16]
  c0:	mov	w1, #0xffff                	// #65535
  c4:	cmp	w2, w1
  c8:	b.eq	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E16FindAndConstructEOt+0xd8>  // b.none
  cc:	ldr	w1, [x19, #20]
  d0:	sub	w1, w1, #0x1
  d4:	str	w1, [x19, #20]
  d8:	ldrh	w1, [x20]
  dc:	strh	w1, [x0]
  e0:	str	xzr, [x0, #8]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	w22, [x0, #24]
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x21, [x0, #8]
  20:	sub	w0, w1, #0x1
  24:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  28:	cmp	w0, #0x40
  2c:	mov	w1, #0x40                  	// #64
  30:	csel	w0, w0, w1, cs  // cs = hs, nlast
  34:	str	w0, [x19, #24]
  38:	ubfiz	x0, x0, #4, #32
  3c:	bl	0 <_Znwm>
  40:	str	x0, [x19, #8]
  44:	cbnz	x21, 64 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x64>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x29, x30, [sp], #80
  60:	ret
  64:	ubfiz	x22, x22, #4, #32
  68:	mov	x20, x21
  6c:	add	x23, x21, x22
  70:	add	x24, sp, #0x48
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  7c:	cmp	x23, x20
  80:	b.eq	108 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x108>  // b.none
  84:	ldr	x0, [x20]
  88:	cmn	x0, #0x8
  8c:	b.eq	100 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x100>  // b.none
  90:	cmn	x0, #0x10
  94:	b.eq	100 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x100>  // b.none
  98:	mov	x2, x24
  9c:	mov	x1, x20
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  a8:	tst	w0, #0xff
  ac:	b.eq	d0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xd0>  // b.none
  b0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  b4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  b8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  bc:	add	x3, x3, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x0, x0, #0x0
  c8:	mov	w2, #0x17a                 	// #378
  cc:	bl	0 <__assert_fail>
  d0:	ldr	x0, [sp, #72]
  d4:	ldr	x1, [x20]
  d8:	str	x1, [x0]
  dc:	ldr	x1, [x20, #8]
  e0:	str	xzr, [x20, #8]
  e4:	str	x1, [x0, #8]
  e8:	ldr	w0, [x19, #16]
  ec:	add	w0, w0, #0x1
  f0:	str	w0, [x19, #16]
  f4:	ldr	x0, [x20, #8]
  f8:	cbz	x0, 100 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x100>
  fc:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 100:	add	x20, x20, #0x10
 104:	b	7c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x7c>
 108:	mov	x1, x22
 10c:	mov	x0, x21
 110:	bl	0 <_ZdlPvm>
 114:	b	50 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x50>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	add	x2, sp, #0x20
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  1c:	tst	w0, #0xff
  20:	ldr	x0, [sp, #32]
  24:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0xdc>  // b.any
  28:	str	x0, [sp, #40]
  2c:	ldr	x0, [x19]
  30:	ldr	w1, [x19, #16]
  34:	add	x0, x0, #0x1
  38:	str	x0, [x19]
  3c:	ldr	w0, [x19, #24]
  40:	add	w2, w1, #0x1
  44:	add	w3, w0, w0, lsl #1
  48:	lsl	w1, w0, #1
  4c:	cmp	w3, w2, lsl #2
  50:	b.hi	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0x94>  // b.pmore
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  5c:	add	x2, sp, #0x28
  60:	mov	x1, x20
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  6c:	ldr	x0, [sp, #40]
  70:	cbnz	x0, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0xb0>
  74:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  78:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  7c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x22f                 	// #559
  90:	bl	0 <__assert_fail>
  94:	ldr	w1, [x19, #20]
  98:	sub	w1, w0, w1
  9c:	sub	w1, w1, w2
  a0:	cmp	w1, w0, lsr #3
  a4:	b.hi	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0x6c>  // b.pmore
  a8:	mov	w1, w0
  ac:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0x54>
  b0:	ldr	w1, [x19, #16]
  b4:	add	w1, w1, #0x1
  b8:	str	w1, [x19, #16]
  bc:	ldr	x1, [x0]
  c0:	cmn	x1, #0x8
  c4:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E16FindAndConstructEOS4_+0xd4>  // b.none
  c8:	ldr	w1, [x19, #20]
  cc:	sub	w1, w1, #0x1
  d0:	str	w1, [x19, #20]
  d4:	ldr	x1, [x20]
  d8:	stp	x1, xzr, [x0]
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret

Disassembly of section .text._ZNSt4pairImN4llvm3mca13ResourceUsageEE4swapERS3_:

0000000000000000 <_ZNSt4pairImN4llvm3mca13ResourceUsageEE4swapERS3_>:
   0:	ldr	x3, [x1]
   4:	ldp	x2, x4, [x0]
   8:	ldp	x6, x7, [x1, #8]
   c:	str	x3, [x0]
  10:	ldrb	w3, [x0, #16]
  14:	str	x2, [x1]
  18:	ldr	w2, [x0, #20]
  1c:	stp	x6, x7, [x0, #8]
  20:	str	x4, [x1, #8]
  24:	strb	w3, [x1, #16]
  28:	str	w2, [x1, #20]
  2c:	ret

Disassembly of section .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_>:
   0:	sub	x1, x1, x0
   4:	mov	x3, x2
   8:	asr	x1, x1, #4
   c:	mov	x4, x1
  10:	cmp	x4, #0x0
  14:	b.le	38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_+0x38>
  18:	ldr	x5, [x0]
  1c:	str	x5, [x3]
  20:	ldr	w5, [x0, #8]
  24:	sub	x4, x4, #0x1
  28:	add	x0, x0, #0x10
  2c:	add	x3, x3, #0x10
  30:	stur	w5, [x3, #-8]
  34:	b	10 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_+0x10>
  38:	cmp	x1, #0x0
  3c:	csel	x1, x1, xzr, ge  // ge = tcont
  40:	add	x0, x2, x1, lsl #4
  44:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	b.eq	54 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x54>  // b.none
  20:	ldr	w20, [x0, #8]
  24:	mov	x22, x1
  28:	ldr	w21, [x1, #8]
  2c:	cmp	x21, x20
  30:	b.hi	6c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x6c>  // b.pmore
  34:	cbz	x21, 48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>
  38:	ldr	x2, [x0]
  3c:	ldr	x0, [x1]
  40:	add	x1, x0, x21, lsl #4
  44:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  48:	mov	x1, x21
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  54:	mov	x0, x19
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	cmp	x21, x1
  74:	b.ls	13c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x13c>  // b.plast
  78:	mov	x1, #0x0                   	// #0
  7c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  80:	ldr	w0, [x19, #12]
  84:	str	x21, [sp, #72]
  88:	add	x0, x0, #0x2
  8c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  90:	add	x1, sp, #0x48
  94:	cmp	x21, x0
  98:	str	x0, [sp, #80]
  9c:	add	x0, sp, #0x50
  a0:	csel	x0, x0, x1, ls  // ls = plast
  a4:	mov	x1, #0xffffffff            	// #4294967295
  a8:	str	x1, [sp, #88]
  ac:	ldr	x2, [x0]
  b0:	cmp	x2, x1
  b4:	b.ls	bc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xbc>  // b.plast
  b8:	add	x0, sp, #0x58
  bc:	ldr	x23, [x0]
  c0:	lsl	x0, x23, #4
  c4:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  c8:	mov	x20, x0
  cc:	mov	x3, x0
  d0:	ldr	x0, [x19]
  d4:	ldr	w2, [x19, #8]
  d8:	mov	x1, x0
  dc:	add	x2, x0, x2, lsl #4
  e0:	cmp	x2, x1
  e4:	b.eq	f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>  // b.none
  e8:	ldp	x4, x5, [x1], #16
  ec:	stp	x4, x5, [x3], #16
  f0:	b	e0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xe0>
  f4:	add	x1, x19, #0x10
  f8:	cmp	x0, x1
  fc:	b.eq	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>  // b.none
 100:	bl	0 <free>
 104:	str	x20, [x19]
 108:	mov	x20, #0x0                   	// #0
 10c:	str	w23, [x19, #12]
 110:	ldr	x2, [x22]
 114:	ldr	w1, [x22, #8]
 118:	add	x0, x2, x20, lsl #4
 11c:	add	x1, x2, x1, lsl #4
 120:	ldr	x2, [x19]
 124:	add	x20, x2, x20, lsl #4
 128:	cmp	x1, x0
 12c:	b.eq	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.none
 130:	ldp	x2, x3, [x0], #16
 134:	stp	x2, x3, [x20], #16
 138:	b	128 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x128>
 13c:	cbz	x20, 110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
 140:	ldr	x2, [x0]
 144:	ldr	x0, [x22]
 148:	add	x1, x0, x20, lsl #4
 14c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 150:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>:
   0:	ldrb	w1, [x0, #42]
   4:	cbnz	w1, 14 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0+0x14>
   8:	ldr	w1, [x0, #20]
   c:	cmp	w1, #0x0
  10:	b.gt	1c <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0+0x1c>
  14:	ldrb	w0, [x0, #40]
  18:	ret
  1c:	mov	w0, #0x1                   	// #1
  20:	b	18 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0+0x18>

0000000000000024 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
  24:	str	xzr, [x0, #24]
  28:	stp	w3, w1, [x0, #40]
  2c:	strh	w2, [x0, #48]
  30:	str	w3, [x0, #52]
  34:	ret

0000000000000038 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
  38:	stp	x29, x30, [sp, #-16]!
  3c:	mov	x29, sp
  40:	ldr	w4, [x0, #16]
  44:	cbnz	w4, 68 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x30>
  48:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  4c:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  50:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x1f                  	// #31
  64:	bl	0 <__assert_fail>
  68:	ldr	w5, [x0, #20]
  6c:	cmn	w5, #0x200
  70:	b.eq	94 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x5c>  // b.none
  74:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  78:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  7c:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x20                  	// #32
  90:	b	64 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x2c>
  94:	ldr	w5, [x0, #24]
  98:	sub	w4, w4, #0x1
  9c:	str	w4, [x0, #16]
  a0:	cmp	w5, w3
  a4:	b.cs	b8 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x80>  // b.hs, b.nlast
  a8:	and	w2, w2, #0xffff
  ac:	stp	w3, w1, [x0, #24]
  b0:	strh	w2, [x0, #32]
  b4:	str	w3, [x0, #36]
  b8:	cbnz	w4, d0 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x98>
  bc:	ldr	w1, [x0, #24]
  c0:	str	w1, [x0, #20]
  c4:	cmp	w1, #0x0
  c8:	cset	w1, eq  // eq = none
  cc:	strb	w1, [x0, #40]
  d0:	ldp	x29, x30, [sp], #16
  d4:	ret

00000000000000d8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
  d8:	stp	x29, x30, [sp, #-48]!
  dc:	mov	x29, sp
  e0:	stp	x19, x20, [sp, #16]
  e4:	mov	x19, x0
  e8:	ldr	w0, [x0, #8]
  ec:	stp	x21, x22, [sp, #32]
  f0:	cmn	w0, #0x200
  f4:	b.eq	118 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x40>  // b.none
  f8:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
  fc:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 100:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 104:	add	x3, x3, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x0, x0, #0x0
 110:	mov	w2, #0x36                  	// #54
 114:	bl	0 <__assert_fail>
 118:	ldr	x0, [x19]
 11c:	mov	w21, w1
 120:	ldr	x20, [x19, #56]
 124:	ldr	w22, [x19, #64]
 128:	ldr	w0, [x0, #4]
 12c:	str	w0, [x19, #8]
 130:	add	x22, x20, x22, lsl #4
 134:	cmp	x20, x22
 138:	b.eq	160 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x88>  // b.none
 13c:	ldr	w0, [x20, #8]
 140:	mov	w1, w21
 144:	ldr	w3, [x19, #8]
 148:	ldrh	w2, [x19, #12]
 14c:	subs	w3, w3, w0
 150:	ldr	x0, [x20], #16
 154:	csel	w3, w3, wzr, pl  // pl = nfrst
 158:	bl	38 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
 15c:	b	134 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x5c>
 160:	ldr	x0, [x19, #32]
 164:	cbz	x0, 184 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xac>
 168:	ldrh	w2, [x19, #12]
 16c:	mov	w1, w21
 170:	ldr	w3, [x19, #8]
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x21, x22, [sp, #32]
 17c:	ldp	x29, x30, [sp], #48
 180:	b	24 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 184:	ldp	x19, x20, [sp, #16]
 188:	ldp	x21, x22, [sp, #32]
 18c:	ldp	x29, x30, [sp], #48
 190:	ret

0000000000000194 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
 194:	stp	x29, x30, [sp, #-80]!
 198:	mov	x29, sp
 19c:	stp	x19, x20, [sp, #16]
 1a0:	mov	w19, w3
 1a4:	ldr	w3, [x0, #8]
 1a8:	stp	x21, x22, [sp, #32]
 1ac:	mov	x20, x2
 1b0:	mov	x21, x0
 1b4:	stp	x23, x24, [sp, #48]
 1b8:	cmn	w3, #0x200
 1bc:	b.eq	1e4 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x50>  // b.none
 1c0:	ldrh	w2, [x0, #12]
 1c4:	subs	w3, w3, w19
 1c8:	mov	x0, x20
 1cc:	csel	w3, w3, wzr, pl  // pl = nfrst
 1d0:	ldp	x19, x20, [sp, #16]
 1d4:	ldp	x21, x22, [sp, #32]
 1d8:	ldp	x23, x24, [sp, #48]
 1dc:	ldp	x29, x30, [sp], #80
 1e0:	b	38 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
 1e4:	ldp	w0, w1, [x0, #64]
 1e8:	cmp	w0, w1
 1ec:	b.cc	2a0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x10c>  // b.lo, b.ul, b.last
 1f0:	mov	w1, w1
 1f4:	add	x1, x1, #0x2
 1f8:	orr	x1, x1, x1, lsr #1
 1fc:	orr	x1, x1, x1, lsr #2
 200:	orr	x1, x1, x1, lsr #4
 204:	orr	x1, x1, x1, lsr #8
 208:	orr	x0, x1, x1, lsr #16
 20c:	orr	x1, x0, x1, lsr #32
 210:	mov	x0, #0xffffffff            	// #4294967295
 214:	add	x1, x1, #0x1
 218:	stp	x1, x0, [sp, #64]
 21c:	cmp	x1, x0
 220:	add	x0, sp, #0x40
 224:	add	x1, sp, #0x48
 228:	csel	x0, x0, x1, ls  // ls = plast
 22c:	ldr	x23, [x0]
 230:	lsl	x24, x23, #4
 234:	mov	x0, x24
 238:	bl	0 <malloc>
 23c:	mov	x22, x0
 240:	cbnz	x0, 258 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xc4>
 244:	cbz	x24, 280 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xec>
 248:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 24c:	mov	w1, #0x1                   	// #1
 250:	add	x0, x0, #0x0
 254:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 258:	ldr	x0, [x21, #56]
 25c:	mov	x3, x22
 260:	ldr	w2, [x21, #64]
 264:	mov	x1, x0
 268:	add	x2, x0, x2, lsl #4
 26c:	cmp	x2, x1
 270:	b.eq	288 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xf4>  // b.none
 274:	ldp	x4, x5, [x1], #16
 278:	stp	x4, x5, [x3], #16
 27c:	b	26c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xd8>
 280:	mov	x24, #0x1                   	// #1
 284:	b	234 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xa0>
 288:	add	x1, x21, #0x48
 28c:	cmp	x0, x1
 290:	b.eq	298 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x104>  // b.none
 294:	bl	0 <free>
 298:	str	x22, [x21, #56]
 29c:	str	w23, [x21, #68]
 2a0:	ldr	w0, [x21, #64]
 2a4:	ldr	x1, [x21, #56]
 2a8:	lsl	x2, x0, #4
 2ac:	add	x0, x1, x0, lsl #4
 2b0:	str	x20, [x1, x2]
 2b4:	str	w19, [x0, #8]
 2b8:	ldp	w0, w2, [x21, #64]
 2bc:	mov	w1, w0
 2c0:	add	x1, x1, #0x1
 2c4:	cmp	x1, x2
 2c8:	b.ls	2ec <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x158>  // b.plast
 2cc:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 2d0:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 2d4:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 2d8:	add	x3, x3, #0x0
 2dc:	add	x1, x1, #0x0
 2e0:	add	x0, x0, #0x0
 2e4:	mov	w2, #0x43                  	// #67
 2e8:	bl	0 <__assert_fail>
 2ec:	add	w0, w0, #0x1
 2f0:	str	w0, [x21, #64]
 2f4:	cbnz	w0, 318 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x184>
 2f8:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 2fc:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 300:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 304:	add	x3, x3, #0x0
 308:	add	x1, x1, #0x0
 30c:	add	x0, x0, #0x0
 310:	mov	w2, #0xa7                  	// #167
 314:	b	2e8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x154>
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldp	x21, x22, [sp, #32]
 320:	ldp	x23, x24, [sp, #48]
 324:	ldp	x29, x30, [sp], #80
 328:	ret

000000000000032c <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
 32c:	mov	x4, x0
 330:	mov	x0, x2
 334:	ldr	w3, [x4, #8]
 338:	cmn	w3, #0x200
 33c:	b.eq	350 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x24>  // b.none
 340:	ldrh	w2, [x4, #12]
 344:	cmp	w3, #0x0
 348:	csel	w3, w3, wzr, ge  // ge = tcont
 34c:	b	24 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
 350:	ldr	x1, [x4, #32]
 354:	cbz	x1, 380 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x54>
 358:	stp	x29, x30, [sp, #-16]!
 35c:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 360:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 364:	mov	x29, sp
 368:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 36c:	add	x3, x3, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x0, x0, #0x0
 378:	mov	w2, #0x5a                  	// #90
 37c:	bl	0 <__assert_fail>
 380:	str	x2, [x4, #32]
 384:	str	x4, [x2, #24]
 388:	ret

000000000000038c <_ZN4llvm3mca10WriteState10cycleEventEv>:
 38c:	ldr	w1, [x0, #8]
 390:	cmn	w1, #0x200
 394:	b.eq	3a0 <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
 398:	sub	w1, w1, #0x1
 39c:	str	w1, [x0, #8]
 3a0:	ldr	w1, [x0, #40]
 3a4:	cbz	w1, 3b0 <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
 3a8:	sub	w1, w1, #0x1
 3ac:	str	w1, [x0, #40]
 3b0:	ret

00000000000003b4 <_ZN4llvm3mca9ReadState10cycleEventEv>:
 3b4:	ldr	w1, [x0, #16]
 3b8:	cbz	w1, 3d0 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
 3bc:	ldr	w1, [x0, #24]
 3c0:	cbz	w1, 3d0 <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
 3c4:	sub	w1, w1, #0x1
 3c8:	str	w1, [x0, #24]
 3cc:	ret
 3d0:	ldr	w1, [x0, #20]
 3d4:	cmn	w1, #0x200
 3d8:	b.eq	3cc <_ZN4llvm3mca9ReadState10cycleEventEv+0x18>  // b.none
 3dc:	cbz	w1, 3cc <_ZN4llvm3mca9ReadState10cycleEventEv+0x18>
 3e0:	subs	w1, w1, #0x1
 3e4:	str	w1, [x0, #20]
 3e8:	cset	w1, eq  // eq = none
 3ec:	strb	w1, [x0, #40]
 3f0:	b	3cc <_ZN4llvm3mca9ReadState10cycleEventEv+0x18>

00000000000003f4 <_ZNK4llvm3mca10WriteState4dumpEv>:
 3f4:	stp	x29, x30, [sp, #-32]!
 3f8:	mov	x29, sp
 3fc:	str	x19, [sp, #16]
 400:	mov	x19, x0
 404:	bl	0 <_ZN4llvm4dbgsEv>
 408:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 40c:	add	x1, x1, #0x0
 410:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 414:	ldr	x1, [x19]
 418:	ldrsw	x1, [x1]
 41c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 420:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 424:	add	x1, x1, #0x0
 428:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 42c:	ldr	x1, [x19]
 430:	ldr	w1, [x1, #4]
 434:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 438:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 43c:	add	x1, x1, #0x0
 440:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 444:	ldrh	w1, [x19, #12]
 448:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 44c:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 450:	add	x1, x1, #0x0
 454:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 458:	ldrsw	x1, [x19, #8]
 45c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 460:	ldr	x19, [sp, #16]
 464:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 468:	ldp	x29, x30, [sp], #32
 46c:	add	x1, x1, #0x0
 470:	b	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>

0000000000000474 <_ZNK4llvm3mca8WriteRef4dumpEv>:
 474:	stp	x29, x30, [sp, #-32]!
 478:	mov	x29, sp
 47c:	str	x19, [sp, #16]
 480:	mov	x19, x0
 484:	bl	0 <_ZN4llvm4dbgsEv>
 488:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 48c:	add	x1, x1, #0x0
 490:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 494:	ldr	w1, [x19]
 498:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 49c:	ldp	x3, x2, [x0, #16]
 4a0:	cmp	x2, x3
 4a4:	b.cc	4d0 <_ZNK4llvm3mca8WriteRef4dumpEv+0x5c>  // b.lo, b.ul, b.last
 4a8:	mov	w1, #0x20                  	// #32
 4ac:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 4b0:	ldr	x0, [x19, #8]
 4b4:	cbz	x0, 4e8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x74>
 4b8:	ldr	w1, [x19]
 4bc:	cmn	w1, #0x1
 4c0:	b.eq	4e8 <_ZNK4llvm3mca8WriteRef4dumpEv+0x74>  // b.none
 4c4:	ldr	x19, [sp, #16]
 4c8:	ldp	x29, x30, [sp], #32
 4cc:	b	3f4 <_ZNK4llvm3mca10WriteState4dumpEv>
 4d0:	mov	x1, x0
 4d4:	add	x0, x2, #0x1
 4d8:	str	x0, [x1, #24]
 4dc:	mov	w0, #0x20                  	// #32
 4e0:	strb	w0, [x2]
 4e4:	b	4b0 <_ZNK4llvm3mca8WriteRef4dumpEv+0x3c>
 4e8:	bl	0 <_ZN4llvm4dbgsEv>
 4ec:	ldr	x19, [sp, #16]
 4f0:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 4f4:	ldp	x29, x30, [sp], #32
 4f8:	add	x1, x1, #0x0
 4fc:	b	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>

0000000000000500 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
 500:	mov	x2, x0
 504:	add	x0, x0, #0x328
 508:	ldr	w1, [x2, #816]
 50c:	cbnz	w1, 580 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>
 510:	ldr	w3, [x2, #24]
 514:	mov	w4, #0x88                  	// #136
 518:	ldr	x1, [x2, #16]
 51c:	umaddl	x3, w3, w4, x1
 520:	cmp	x3, x1
 524:	b.eq	548 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x48>  // b.none
 528:	ldr	w4, [x1, #52]
 52c:	cbz	w4, 540 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x40>
 530:	ldur	x4, [x1, #44]
 534:	str	x4, [x0]
 538:	ldr	w4, [x1, #52]
 53c:	str	w4, [x0, #8]
 540:	add	x1, x1, #0x88
 544:	b	520 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x20>
 548:	ldr	x1, [x2, #576]
 54c:	mov	w3, #0x30                  	// #48
 550:	ldr	w2, [x2, #584]
 554:	umaddl	x2, w2, w3, x1
 558:	cmp	x1, x2
 55c:	b.eq	580 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>  // b.none
 560:	ldr	w3, [x1, #36]
 564:	cbz	w3, 578 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x78>
 568:	ldur	x3, [x1, #28]
 56c:	str	x3, [x0]
 570:	ldr	w3, [x1, #36]
 574:	str	w3, [x0, #8]
 578:	add	x1, x1, #0x30
 57c:	b	558 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x58>
 580:	ret

0000000000000584 <_ZN4llvm3mca11Instruction7executeEj>:
 584:	stp	x29, x30, [sp, #-48]!
 588:	mov	x29, sp
 58c:	stp	x19, x20, [sp, #16]
 590:	mov	x19, x0
 594:	ldr	w0, [x0, #784]
 598:	stp	x21, x22, [sp, #32]
 59c:	cmp	w0, #0x3
 5a0:	b.eq	5c4 <_ZN4llvm3mca11Instruction7executeEj+0x40>  // b.none
 5a4:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 5a8:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 5ac:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 5b0:	add	x3, x3, #0x0
 5b4:	add	x1, x1, #0x0
 5b8:	add	x0, x0, #0x0
 5bc:	mov	w2, #0xa9                  	// #169
 5c0:	bl	0 <__assert_fail>
 5c4:	mov	w0, #0x4                   	// #4
 5c8:	str	w0, [x19, #784]
 5cc:	ldr	x0, [x19]
 5d0:	mov	w21, w1
 5d4:	ldr	w22, [x19, #24]
 5d8:	ldr	x20, [x19, #16]
 5dc:	ldr	w0, [x0, #312]
 5e0:	str	w0, [x19, #788]
 5e4:	mov	w0, #0x88                  	// #136
 5e8:	umaddl	x22, w22, w0, x20
 5ec:	cmp	x20, x22
 5f0:	b.eq	608 <_ZN4llvm3mca11Instruction7executeEj+0x84>  // b.none
 5f4:	mov	x0, x20
 5f8:	mov	w1, w21
 5fc:	add	x20, x20, #0x88
 600:	bl	d8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
 604:	b	5ec <_ZN4llvm3mca11Instruction7executeEj+0x68>
 608:	ldr	w0, [x19, #788]
 60c:	cbnz	w0, 618 <_ZN4llvm3mca11Instruction7executeEj+0x94>
 610:	mov	w0, #0x5                   	// #5
 614:	str	w0, [x19, #784]
 618:	ldp	x19, x20, [sp, #16]
 61c:	ldp	x21, x22, [sp, #32]
 620:	ldp	x29, x30, [sp], #48
 624:	ret

0000000000000628 <_ZN4llvm3mca11Instruction13forceExecutedEv>:
 628:	ldr	w1, [x0, #784]
 62c:	cmp	w1, #0x3
 630:	b.eq	65c <_ZN4llvm3mca11Instruction13forceExecutedEv+0x34>  // b.none
 634:	stp	x29, x30, [sp, #-16]!
 638:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 63c:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 640:	mov	x29, sp
 644:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 648:	add	x3, x3, #0x0
 64c:	add	x1, x1, #0x0
 650:	add	x0, x0, #0x0
 654:	mov	w2, #0xb8                  	// #184
 658:	bl	0 <__assert_fail>
 65c:	mov	x1, #0x5                   	// #5
 660:	str	x1, [x0, #784]
 664:	ret

0000000000000668 <_ZN4llvm3mca11Instruction13updatePendingEv>:
 668:	stp	x29, x30, [sp, #-64]!
 66c:	mov	x29, sp
 670:	stp	x19, x20, [sp, #16]
 674:	stp	x21, x22, [sp, #32]
 678:	mov	x21, x0
 67c:	ldr	w0, [x0, #784]
 680:	str	x23, [sp, #48]
 684:	cmp	w0, #0x2
 688:	b.eq	6ac <_ZN4llvm3mca11Instruction13updatePendingEv+0x44>  // b.none
 68c:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 690:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 694:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 698:	add	x3, x3, #0x0
 69c:	add	x1, x1, #0x0
 6a0:	add	x0, x0, #0x0
 6a4:	mov	w2, #0xbe                  	// #190
 6a8:	bl	0 <__assert_fail>
 6ac:	ldr	w2, [x21, #584]
 6b0:	mov	w0, #0x30                  	// #48
 6b4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 6b8:	movk	x4, #0xaaab
 6bc:	ldr	x1, [x21, #576]
 6c0:	umull	x2, w2, w0
 6c4:	add	x3, x1, x2
 6c8:	asr	x0, x2, #4
 6cc:	mul	x0, x0, x4
 6d0:	mov	x4, #0xc0                  	// #192
 6d4:	asr	x0, x0, #2
 6d8:	mul	x0, x0, x4
 6dc:	add	x4, x1, x0
 6e0:	cmp	x1, x4
 6e4:	b.eq	734 <_ZN4llvm3mca11Instruction13updatePendingEv+0xcc>  // b.none
 6e8:	ldrb	w5, [x1, #40]
 6ec:	cbz	w5, 6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 6f0:	ldrb	w5, [x1, #88]
 6f4:	cbnz	w5, 70c <_ZN4llvm3mca11Instruction13updatePendingEv+0xa4>
 6f8:	add	x1, x1, #0x30
 6fc:	cmp	x3, x1
 700:	b.eq	758 <_ZN4llvm3mca11Instruction13updatePendingEv+0xf0>  // b.none
 704:	mov	w0, #0x0                   	// #0
 708:	b	844 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1dc>
 70c:	ldrb	w5, [x1, #136]
 710:	cbnz	w5, 71c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
 714:	add	x1, x1, #0x60
 718:	b	6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 71c:	ldrb	w5, [x1, #184]
 720:	cbnz	w5, 72c <_ZN4llvm3mca11Instruction13updatePendingEv+0xc4>
 724:	add	x1, x1, #0x90
 728:	b	6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 72c:	add	x1, x1, #0xc0
 730:	b	6e0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
 734:	sub	x2, x2, x0
 738:	cmp	x2, #0x60
 73c:	b.eq	7f4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x18c>  // b.none
 740:	cmp	x2, #0x90
 744:	b.eq	7e8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x180>  // b.none
 748:	cmp	x2, #0x30
 74c:	b.ne	758 <_ZN4llvm3mca11Instruction13updatePendingEv+0xf0>  // b.any
 750:	ldrb	w0, [x1, #40]
 754:	cbz	w0, 6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 758:	ldr	w1, [x21, #24]
 75c:	mov	w0, #0x88                  	// #136
 760:	ldr	x19, [x21, #16]
 764:	umull	x1, w1, w0
 768:	add	x23, x19, x1
 76c:	asr	x20, x1, #3
 770:	mov	x1, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 774:	movk	x1, #0xf0f1
 778:	mul	x20, x20, x1
 77c:	mov	x1, #0x220                 	// #544
 780:	asr	x20, x20, #2
 784:	madd	x20, x20, x1, x19
 788:	cmp	x20, x19
 78c:	b.eq	804 <_ZN4llvm3mca11Instruction13updatePendingEv+0x19c>  // b.none
 790:	mov	x0, x19
 794:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 798:	tst	w0, #0xff
 79c:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 7a0:	mov	x22, x19
 7a4:	add	x19, x19, #0x88
 7a8:	mov	x0, x19
 7ac:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 7b0:	tst	w0, #0xff
 7b4:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 7b8:	add	x19, x22, #0x110
 7bc:	mov	x0, x19
 7c0:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 7c4:	tst	w0, #0xff
 7c8:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 7cc:	add	x19, x22, #0x198
 7d0:	mov	x0, x19
 7d4:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 7d8:	tst	w0, #0xff
 7dc:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 7e0:	add	x19, x22, #0x220
 7e4:	b	788 <_ZN4llvm3mca11Instruction13updatePendingEv+0x120>
 7e8:	ldrb	w0, [x1, #40]
 7ec:	cbz	w0, 6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 7f0:	add	x1, x1, #0x30
 7f4:	ldrb	w0, [x1, #40]
 7f8:	cbz	w0, 6fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x94>
 7fc:	add	x1, x1, #0x30
 800:	b	750 <_ZN4llvm3mca11Instruction13updatePendingEv+0xe8>
 804:	sub	x0, x23, x19
 808:	cmp	x0, #0x110
 80c:	b.eq	86c <_ZN4llvm3mca11Instruction13updatePendingEv+0x204>  // b.none
 810:	cmp	x0, #0x198
 814:	b.eq	858 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1f0>  // b.none
 818:	cmp	x0, #0x88
 81c:	b.ne	838 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1d0>  // b.any
 820:	mov	x0, x19
 824:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 828:	tst	w0, #0xff
 82c:	b.ne	838 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1d0>  // b.any
 830:	cmp	x23, x19
 834:	b.ne	704 <_ZN4llvm3mca11Instruction13updatePendingEv+0x9c>  // b.any
 838:	mov	w0, #0x3                   	// #3
 83c:	str	w0, [x21, #784]
 840:	mov	w0, #0x1                   	// #1
 844:	ldp	x19, x20, [sp, #16]
 848:	ldp	x21, x22, [sp, #32]
 84c:	ldr	x23, [sp, #48]
 850:	ldp	x29, x30, [sp], #64
 854:	ret
 858:	mov	x0, x19
 85c:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 860:	tst	w0, #0xff
 864:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 868:	add	x19, x19, #0x88
 86c:	mov	x0, x19
 870:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 874:	tst	w0, #0xff
 878:	b.eq	830 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c8>  // b.none
 87c:	add	x19, x19, #0x88
 880:	b	820 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b8>

0000000000000884 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
 884:	stp	x29, x30, [sp, #-16]!
 888:	mov	x4, x0
 88c:	mov	x29, sp
 890:	ldr	w0, [x0, #784]
 894:	cmp	w0, #0x1
 898:	b.eq	8bc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x38>  // b.none
 89c:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 8a0:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 8a4:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 8a8:	add	x3, x3, #0x0
 8ac:	add	x1, x1, #0x0
 8b0:	add	x0, x0, #0x0
 8b4:	mov	w2, #0xcc                  	// #204
 8b8:	bl	0 <__assert_fail>
 8bc:	ldr	w3, [x4, #584]
 8c0:	mov	w0, #0x30                  	// #48
 8c4:	ldr	x2, [x4, #576]
 8c8:	umull	x3, w3, w0
 8cc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 8d0:	movk	x0, #0xaaab
 8d4:	add	x7, x2, x3
 8d8:	asr	x5, x3, #4
 8dc:	mul	x5, x5, x0
 8e0:	mov	x0, #0xc0                  	// #192
 8e4:	asr	x5, x5, #2
 8e8:	mul	x5, x5, x0
 8ec:	add	x8, x2, x5
 8f0:	cmp	x2, x8
 8f4:	b.eq	950 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xcc>  // b.none
 8f8:	mov	x0, x2
 8fc:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 900:	tst	w0, #0xff
 904:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 908:	mov	x6, x2
 90c:	add	x2, x2, #0x30
 910:	mov	x0, x2
 914:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 918:	tst	w0, #0xff
 91c:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 920:	add	x2, x6, #0x60
 924:	mov	x0, x2
 928:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 92c:	tst	w0, #0xff
 930:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 934:	add	x2, x6, #0x90
 938:	mov	x0, x2
 93c:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 940:	tst	w0, #0xff
 944:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 948:	add	x2, x6, #0xc0
 94c:	b	8f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x6c>
 950:	sub	x3, x3, x5
 954:	cmp	x3, #0x60
 958:	b.eq	9f4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x170>  // b.none
 95c:	cmp	x3, #0x90
 960:	b.eq	9e0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x15c>  // b.none
 964:	cmp	x3, #0x30
 968:	b.ne	984 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x100>  // b.any
 96c:	mov	x0, x2
 970:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 974:	tst	w0, #0xff
 978:	b.ne	984 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x100>  // b.any
 97c:	cmp	x7, x2
 980:	b.ne	9d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x154>  // b.any
 984:	ldr	w2, [x4, #24]
 988:	mov	w0, #0x88                  	// #136
 98c:	ldr	x1, [x4, #16]
 990:	umull	x2, w2, w0
 994:	mov	x0, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 998:	movk	x0, #0xf0f1
 99c:	add	x3, x1, x2
 9a0:	asr	x2, x2, #3
 9a4:	mul	x2, x2, x0
 9a8:	mov	x0, #0x220                 	// #544
 9ac:	asr	x2, x2, #2
 9b0:	madd	x2, x2, x0, x1
 9b4:	cmp	x2, x1
 9b8:	b.eq	a34 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b0>  // b.none
 9bc:	ldr	x0, [x1, #24]
 9c0:	cbnz	x0, 9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 9c4:	ldr	x0, [x1, #160]
 9c8:	cbz	x0, a0c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x188>
 9cc:	add	x1, x1, #0x88
 9d0:	cmp	x3, x1
 9d4:	b.eq	a58 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d4>  // b.none
 9d8:	mov	w0, #0x0                   	// #0
 9dc:	b	a64 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1e0>
 9e0:	mov	x0, x2
 9e4:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 9e8:	tst	w0, #0xff
 9ec:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 9f0:	add	x2, x2, #0x30
 9f4:	mov	x0, x2
 9f8:	bl	0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 9fc:	tst	w0, #0xff
 a00:	b.eq	97c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
 a04:	add	x2, x2, #0x30
 a08:	b	96c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xe8>
 a0c:	ldr	x0, [x1, #296]
 a10:	cbz	x0, a1c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x198>
 a14:	add	x1, x1, #0x110
 a18:	b	9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 a1c:	ldr	x0, [x1, #432]
 a20:	cbz	x0, a2c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a8>
 a24:	add	x1, x1, #0x198
 a28:	b	9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 a2c:	add	x1, x1, #0x220
 a30:	b	9b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x130>
 a34:	sub	x0, x3, x1
 a38:	cmp	x0, #0x110
 a3c:	b.eq	a78 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1f4>  // b.none
 a40:	cmp	x0, #0x198
 a44:	b.eq	a6c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1e8>  // b.none
 a48:	cmp	x0, #0x88
 a4c:	b.ne	a58 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d4>  // b.any
 a50:	ldr	x0, [x1, #24]
 a54:	cbnz	x0, 9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 a58:	mov	w0, #0x2                   	// #2
 a5c:	str	w0, [x4, #784]
 a60:	mov	w0, #0x1                   	// #1
 a64:	ldp	x29, x30, [sp], #16
 a68:	ret
 a6c:	ldr	x0, [x1, #24]
 a70:	cbnz	x0, 9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 a74:	add	x1, x1, #0x88
 a78:	ldr	x0, [x1, #24]
 a7c:	cbnz	x0, 9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x14c>
 a80:	add	x1, x1, #0x88
 a84:	b	a50 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1cc>

0000000000000a88 <_ZN4llvm3mca11Instruction8dispatchEj>:
 a88:	stp	x29, x30, [sp, #-32]!
 a8c:	mov	x29, sp
 a90:	ldr	w2, [x0, #784]
 a94:	str	x19, [sp, #16]
 a98:	cbz	w2, abc <_ZN4llvm3mca11Instruction8dispatchEj+0x34>
 a9c:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 aa0:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 aa4:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 aa8:	add	x3, x3, #0x0
 aac:	add	x1, x1, #0x0
 ab0:	add	x0, x0, #0x0
 ab4:	mov	w2, #0x9f                  	// #159
 ab8:	bl	0 <__assert_fail>
 abc:	mov	w2, #0x1                   	// #1
 ac0:	str	w2, [x0, #784]
 ac4:	str	w1, [x0, #792]
 ac8:	mov	x19, x0
 acc:	bl	884 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 ad0:	tst	w0, #0xff
 ad4:	b.eq	ae8 <_ZN4llvm3mca11Instruction8dispatchEj+0x60>  // b.none
 ad8:	mov	x0, x19
 adc:	ldr	x19, [sp, #16]
 ae0:	ldp	x29, x30, [sp], #32
 ae4:	b	668 <_ZN4llvm3mca11Instruction13updatePendingEv>
 ae8:	ldr	x19, [sp, #16]
 aec:	ldp	x29, x30, [sp], #32
 af0:	ret

0000000000000af4 <_ZN4llvm3mca11Instruction6updateEv>:
 af4:	stp	x29, x30, [sp, #-32]!
 af8:	mov	x29, sp
 afc:	ldr	w1, [x0, #784]
 b00:	str	x19, [sp, #16]
 b04:	mov	x19, x0
 b08:	cmp	w1, #0x1
 b0c:	b.ne	b14 <_ZN4llvm3mca11Instruction6updateEv+0x20>  // b.any
 b10:	bl	884 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
 b14:	ldr	w0, [x19, #784]
 b18:	cmp	w0, #0x2
 b1c:	b.ne	b30 <_ZN4llvm3mca11Instruction6updateEv+0x3c>  // b.any
 b20:	mov	x0, x19
 b24:	ldr	x19, [sp, #16]
 b28:	ldp	x29, x30, [sp], #32
 b2c:	b	668 <_ZN4llvm3mca11Instruction13updatePendingEv>
 b30:	ldr	x19, [sp, #16]
 b34:	ldp	x29, x30, [sp], #32
 b38:	ret

0000000000000b3c <_ZN4llvm3mca11Instruction10cycleEventEv>:
 b3c:	stp	x29, x30, [sp, #-48]!
 b40:	mov	x29, sp
 b44:	stp	x19, x20, [sp, #16]
 b48:	mov	x19, x0
 b4c:	ldr	w0, [x0, #784]
 b50:	str	x21, [sp, #32]
 b54:	cmp	w0, #0x3
 b58:	b.eq	c5c <_ZN4llvm3mca11Instruction10cycleEventEv+0x120>  // b.none
 b5c:	sub	w1, w0, #0x1
 b60:	cmp	w1, #0x1
 b64:	b.hi	b90 <_ZN4llvm3mca11Instruction10cycleEventEv+0x54>  // b.pmore
 b68:	ldr	w21, [x19, #584]
 b6c:	mov	w0, #0x30                  	// #48
 b70:	ldr	x20, [x19, #576]
 b74:	umaddl	x21, w21, w0, x20
 b78:	cmp	x20, x21
 b7c:	b.eq	bb8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x7c>  // b.none
 b80:	mov	x0, x20
 b84:	add	x20, x20, #0x30
 b88:	bl	3b4 <_ZN4llvm3mca9ReadState10cycleEventEv>
 b8c:	b	b78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x3c>
 b90:	cmp	w0, #0x4
 b94:	b.eq	bf4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xb8>  // b.none
 b98:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 b9c:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 ba0:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 ba4:	add	x3, x3, #0x0
 ba8:	add	x1, x1, #0x0
 bac:	add	x0, x0, #0x0
 bb0:	mov	w2, #0xf2                  	// #242
 bb4:	bl	0 <__assert_fail>
 bb8:	ldr	w21, [x19, #24]
 bbc:	mov	w0, #0x88                  	// #136
 bc0:	ldr	x20, [x19, #16]
 bc4:	umaddl	x21, w21, w0, x20
 bc8:	cmp	x20, x21
 bcc:	b.eq	be0 <_ZN4llvm3mca11Instruction10cycleEventEv+0xa4>  // b.none
 bd0:	mov	x0, x20
 bd4:	add	x20, x20, #0x88
 bd8:	bl	38c <_ZN4llvm3mca10WriteState10cycleEventEv>
 bdc:	b	bc8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x8c>
 be0:	mov	x0, x19
 be4:	ldp	x19, x20, [sp, #16]
 be8:	ldr	x21, [sp, #32]
 bec:	ldp	x29, x30, [sp], #48
 bf0:	b	af4 <_ZN4llvm3mca11Instruction6updateEv>
 bf4:	ldr	w0, [x19, #788]
 bf8:	cbnz	w0, c1c <_ZN4llvm3mca11Instruction10cycleEventEv+0xe0>
 bfc:	adrp	x3, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 c00:	adrp	x1, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 c04:	adrp	x0, 0 <_ZZN4llvm3mca11Instruction16updateDispatchedEvENKUlRKNS0_9ReadStateEE_clES4_.isra.0>
 c08:	add	x3, x3, #0x0
 c0c:	add	x1, x1, #0x0
 c10:	add	x0, x0, #0x0
 c14:	mov	w2, #0xf3                  	// #243
 c18:	b	bb4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x78>
 c1c:	ldr	w21, [x19, #24]
 c20:	mov	w0, #0x88                  	// #136
 c24:	ldr	x20, [x19, #16]
 c28:	umaddl	x21, w21, w0, x20
 c2c:	cmp	x20, x21
 c30:	b.eq	c44 <_ZN4llvm3mca11Instruction10cycleEventEv+0x108>  // b.none
 c34:	mov	x0, x20
 c38:	add	x20, x20, #0x88
 c3c:	bl	38c <_ZN4llvm3mca10WriteState10cycleEventEv>
 c40:	b	c2c <_ZN4llvm3mca11Instruction10cycleEventEv+0xf0>
 c44:	ldr	w0, [x19, #788]
 c48:	sub	w0, w0, #0x1
 c4c:	str	w0, [x19, #788]
 c50:	cbnz	w0, c5c <_ZN4llvm3mca11Instruction10cycleEventEv+0x120>
 c54:	mov	w0, #0x5                   	// #5
 c58:	str	w0, [x19, #784]
 c5c:	ldp	x19, x20, [sp, #16]
 c60:	ldr	x21, [sp, #32]
 c64:	ldp	x29, x30, [sp], #48
 c68:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNK4llvm3mca10WriteState7isReadyEv:

0000000000000000 <_ZNK4llvm3mca10WriteState7isReadyEv>:
   0:	ldr	x1, [x0, #24]
   4:	cbnz	x1, 24 <_ZNK4llvm3mca10WriteState7isReadyEv+0x24>
   8:	ldr	w1, [x0, #40]
   c:	cbz	w1, 2c <_ZNK4llvm3mca10WriteState7isReadyEv+0x2c>
  10:	ldr	x0, [x0]
  14:	ldr	w0, [x0, #4]
  18:	cmp	w1, w0
  1c:	cset	w0, cc  // cc = lo, ul, last
  20:	ret
  24:	mov	w0, #0x0                   	// #0
  28:	b	20 <_ZNK4llvm3mca10WriteState7isReadyEv+0x20>
  2c:	mov	w0, #0x1                   	// #1
  30:	b	20 <_ZNK4llvm3mca10WriteState7isReadyEv+0x20>

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>:
   0:	ldr	x0, [x0]
   4:	ldr	x1, [x0]
   8:	ldr	x1, [x1, #24]
   c:	mov	x16, x1
  10:	br	x16

0000000000000014 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
  14:	stp	x29, x30, [sp, #-64]!
  18:	mov	x29, sp
  1c:	stp	x19, x20, [sp, #16]
  20:	ldr	w20, [x0, #8]
  24:	ldr	x19, [x0]
  28:	stp	x21, x22, [sp, #32]
  2c:	lsl	x21, x20, #3
  30:	stp	x23, x24, [sp, #48]
  34:	add	x22, x19, x20, lsl #3
  38:	lsr	x20, x20, #2
  3c:	lsl	x24, x20, #5
  40:	add	x20, x19, x20, lsl #5
  44:	cmp	x19, x20
  48:	b.eq	a4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x90>  // b.none
  4c:	mov	x0, x19
  50:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  54:	tst	w0, #0xff
  58:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
  5c:	mov	x23, x19
  60:	add	x19, x19, #0x8
  64:	mov	x0, x19
  68:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  6c:	tst	w0, #0xff
  70:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
  74:	add	x19, x23, #0x10
  78:	mov	x0, x19
  7c:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  80:	tst	w0, #0xff
  84:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
  88:	add	x19, x23, #0x18
  8c:	mov	x0, x19
  90:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  94:	tst	w0, #0xff
  98:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
  9c:	add	x19, x23, #0x20
  a0:	b	44 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x30>
  a4:	sub	x0, x21, x24
  a8:	cmp	x0, #0x10
  ac:	b.eq	f4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xe0>  // b.none
  b0:	cmp	x0, #0x18
  b4:	b.eq	e0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xcc>  // b.none
  b8:	cmp	x0, #0x8
  bc:	b.eq	108 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf4>  // b.none
  c0:	mov	x19, x22
  c4:	cmp	x22, x19
  c8:	cset	w0, ne  // ne = any
  cc:	ldp	x19, x20, [sp, #16]
  d0:	ldp	x21, x22, [sp, #32]
  d4:	ldp	x23, x24, [sp, #48]
  d8:	ldp	x29, x30, [sp], #64
  dc:	ret
  e0:	mov	x0, x19
  e4:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  e8:	tst	w0, #0xff
  ec:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
  f0:	add	x19, x19, #0x8
  f4:	mov	x0, x19
  f8:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
  fc:	tst	w0, #0xff
 100:	b.ne	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>  // b.any
 104:	add	x20, x19, #0x8
 108:	mov	x0, x20
 10c:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 110:	tst	w0, #0xff
 114:	csel	x19, x22, x20, eq  // eq = none
 118:	b	c4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb0>

000000000000011c <_ZN4llvm3mca8Pipeline8runCycleEv>:
 11c:	stp	x29, x30, [sp, #-96]!
 120:	mov	x29, sp
 124:	stp	x19, x20, [sp, #16]
 128:	mov	x20, x0
 12c:	mov	x0, #0x1                   	// #1
 130:	stp	x21, x22, [sp, #32]
 134:	add	x21, sp, #0x50
 138:	mov	x1, x21
 13c:	str	x23, [sp, #48]
 140:	mov	x19, x8
 144:	str	xzr, [x8]
 148:	str	x0, [sp, #80]
 14c:	mov	x0, x8
 150:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 154:	mov	x0, x21
 158:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 15c:	ldr	x23, [x20]
 160:	ldr	w22, [x20, #8]
 164:	add	x22, x23, x22, lsl #3
 168:	cmp	x23, x22
 16c:	b.eq	1b0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x94>  // b.none
 170:	mov	x0, x19
 174:	sub	x22, x22, #0x8
 178:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 17c:	tst	w0, #0xff
 180:	b.ne	1b0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x94>  // b.any
 184:	ldr	x0, [x22]
 188:	mov	x8, x21
 18c:	ldr	x1, [x0]
 190:	ldr	x1, [x1, #32]
 194:	blr	x1
 198:	mov	x1, x21
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1a4:	mov	x0, x21
 1a8:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1ac:	b	168 <_ZN4llvm3mca8Pipeline8runCycleEv+0x4c>
 1b0:	ldr	w0, [x20, #8]
 1b4:	str	wzr, [sp, #80]
 1b8:	str	xzr, [sp, #88]
 1bc:	cbnz	w0, 1e0 <_ZN4llvm3mca8Pipeline8runCycleEv+0xc4>
 1c0:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1c4:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1c8:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1cc:	add	x3, x3, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x0, x0, #0x0
 1d8:	mov	w2, #0x95                  	// #149
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	x0, [x20]
 1e4:	add	x23, sp, #0x48
 1e8:	ldr	x22, [x0]
 1ec:	mov	x0, x19
 1f0:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 1f4:	tst	w0, #0xff
 1f8:	b.eq	268 <_ZN4llvm3mca8Pipeline8runCycleEv+0x14c>  // b.none
 1fc:	ldr	x0, [x20]
 200:	add	x21, sp, #0x48
 204:	ldr	w22, [x20, #8]
 208:	mov	x20, x0
 20c:	add	x22, x0, x22, lsl #3
 210:	cmp	x22, x20
 214:	b.eq	250 <_ZN4llvm3mca8Pipeline8runCycleEv+0x134>  // b.none
 218:	ldr	x0, [x20], #8
 21c:	mov	x8, x21
 220:	ldr	x1, [x0]
 224:	ldr	x1, [x1, #40]
 228:	blr	x1
 22c:	mov	x1, x21
 230:	mov	x0, x19
 234:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 238:	mov	x0, x21
 23c:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 240:	mov	x0, x19
 244:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 248:	tst	w0, #0xff
 24c:	b.eq	210 <_ZN4llvm3mca8Pipeline8runCycleEv+0xf4>  // b.none
 250:	mov	x0, x19
 254:	ldp	x19, x20, [sp, #16]
 258:	ldp	x21, x22, [sp, #32]
 25c:	ldr	x23, [sp, #48]
 260:	ldp	x29, x30, [sp], #96
 264:	ret
 268:	ldr	x0, [x22]
 26c:	mov	x1, x21
 270:	ldr	x2, [x0, #16]
 274:	mov	x0, x22
 278:	blr	x2
 27c:	tst	w0, #0xff
 280:	b.eq	1fc <_ZN4llvm3mca8Pipeline8runCycleEv+0xe0>  // b.none
 284:	ldr	x0, [x22]
 288:	mov	x8, x23
 28c:	mov	x1, x21
 290:	ldr	x2, [x0, #48]
 294:	mov	x0, x22
 298:	blr	x2
 29c:	mov	x1, x23
 2a0:	mov	x0, x19
 2a4:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 2a8:	mov	x0, x23
 2ac:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 2b0:	b	1ec <_ZN4llvm3mca8Pipeline8runCycleEv+0xd0>

00000000000002b4 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 2b4:	stp	x29, x30, [sp, #-80]!
 2b8:	mov	x29, sp
 2bc:	ldr	x2, [x1]
 2c0:	stp	x19, x20, [sp, #16]
 2c4:	stp	x21, x22, [sp, #32]
 2c8:	stp	x23, x24, [sp, #48]
 2cc:	cbnz	x2, 2f0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x3c>
 2d0:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 2d4:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 2d8:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 2dc:	add	x3, x3, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x0, x0, #0x0
 2e8:	mov	w2, #0x4c                  	// #76
 2ec:	bl	0 <__assert_fail>
 2f0:	mov	x20, x0
 2f4:	ldr	w0, [x0, #8]
 2f8:	mov	x19, x1
 2fc:	cbz	w0, 33c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x88>
 300:	mov	x1, #0xfffffffffffffff8    	// #-8
 304:	ldr	x3, [x20]
 308:	add	x1, x1, w0, uxtw #3
 30c:	ldr	x1, [x3, x1]
 310:	ldr	x3, [x1, #8]
 314:	cbz	x3, 338 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x84>
 318:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 31c:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 320:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 324:	add	x3, x3, #0x0
 328:	add	x1, x1, #0x0
 32c:	add	x0, x0, #0x0
 330:	mov	w2, #0x3a                  	// #58
 334:	b	2ec <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x38>
 338:	str	x2, [x1, #8]
 33c:	ldr	w2, [x20, #12]
 340:	cmp	w0, w2
 344:	b.cc	428 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x174>  // b.lo, b.ul, b.last
 348:	mov	w2, w2
 34c:	add	x1, sp, #0x48
 350:	add	x2, x2, #0x2
 354:	orr	x2, x2, x2, lsr #1
 358:	orr	x2, x2, x2, lsr #2
 35c:	orr	x2, x2, x2, lsr #4
 360:	orr	x2, x2, x2, lsr #8
 364:	orr	x0, x2, x2, lsr #16
 368:	orr	x2, x0, x2, lsr #32
 36c:	mov	x0, #0xffffffff            	// #4294967295
 370:	add	x2, x2, #0x1
 374:	stp	x2, x0, [sp, #64]
 378:	cmp	x2, x0
 37c:	add	x0, sp, #0x40
 380:	csel	x0, x0, x1, ls  // ls = plast
 384:	ldr	x23, [x0]
 388:	lsl	x22, x23, #3
 38c:	mov	x0, x22
 390:	bl	0 <malloc>
 394:	mov	x21, x0
 398:	cbnz	x0, 3b0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xfc>
 39c:	cbz	x22, 3dc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x128>
 3a0:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 3a4:	mov	w1, #0x1                   	// #1
 3a8:	add	x0, x0, #0x0
 3ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 3b0:	ldr	x1, [x20]
 3b4:	mov	x2, x21
 3b8:	ldr	w0, [x20, #8]
 3bc:	lsl	x22, x0, #3
 3c0:	add	x0, x1, x0, lsl #3
 3c4:	cmp	x0, x1
 3c8:	b.eq	3e4 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x130>  // b.none
 3cc:	ldr	x3, [x1]
 3d0:	str	xzr, [x1], #8
 3d4:	str	x3, [x2], #8
 3d8:	b	3c4 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x110>
 3dc:	mov	x22, #0x1                   	// #1
 3e0:	b	38c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xd8>
 3e4:	ldr	x24, [x20]
 3e8:	add	x22, x24, x22
 3ec:	cmp	x24, x22
 3f0:	b.eq	40c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x158>  // b.none
 3f4:	ldr	x0, [x22, #-8]!
 3f8:	cbz	x0, 3ec <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x138>
 3fc:	ldr	x1, [x0]
 400:	ldr	x1, [x1, #8]
 404:	blr	x1
 408:	b	3ec <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x138>
 40c:	mov	x1, x20
 410:	ldr	x0, [x1], #16
 414:	cmp	x0, x1
 418:	b.eq	420 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x16c>  // b.none
 41c:	bl	0 <free>
 420:	str	x21, [x20]
 424:	str	w23, [x20, #12]
 428:	ldr	w0, [x20, #8]
 42c:	ldr	x2, [x20]
 430:	mov	w1, w0
 434:	ldr	x3, [x19]
 438:	str	xzr, [x19]
 43c:	str	x3, [x2, w0, uxtw #3]
 440:	add	x1, x1, #0x1
 444:	ldr	w2, [x20, #12]
 448:	cmp	x1, x2
 44c:	b.ls	470 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1bc>  // b.plast
 450:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 454:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 458:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 45c:	add	x3, x3, #0x0
 460:	add	x1, x1, #0x0
 464:	add	x0, x0, #0x0
 468:	mov	w2, #0x43                  	// #67
 46c:	b	2ec <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x38>
 470:	add	w0, w0, #0x1
 474:	ldp	x21, x22, [sp, #32]
 478:	ldp	x23, x24, [sp, #48]
 47c:	str	w0, [x20, #8]
 480:	ldp	x19, x20, [sp, #16]
 484:	ldp	x29, x30, [sp], #80
 488:	ret

000000000000048c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 48c:	stp	x29, x30, [sp, #-32]!
 490:	mov	x29, sp
 494:	stp	x19, x20, [sp, #16]
 498:	mov	x19, x0
 49c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 4a0:	ldr	x0, [x0]
 4a4:	ldrb	w0, [x0]
 4a8:	cbz	w0, 4f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x64>
 4ac:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 4b0:	add	x0, x0, #0x0
 4b4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 4b8:	tst	w0, #0xff
 4bc:	b.eq	4f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x64>  // b.none
 4c0:	bl	0 <_ZN4llvm4dbgsEv>
 4c4:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 4c8:	add	x1, x1, #0x0
 4cc:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 4d0:	ldr	w1, [x19, #128]
 4d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 4d8:	mov	x1, x0
 4dc:	ldp	x3, x2, [x0, #16]
 4e0:	cmp	x2, x3
 4e4:	b.cc	520 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x94>  // b.lo, b.ul, b.last
 4e8:	mov	w1, #0xa                   	// #10
 4ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 4f0:	add	x19, x19, #0x58
 4f4:	ldr	x20, [x19, #16]
 4f8:	cmp	x19, x20
 4fc:	b.eq	534 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xa8>  // b.none
 500:	ldr	x0, [x20, #32]
 504:	ldr	x1, [x0]
 508:	ldr	x1, [x1]
 50c:	blr	x1
 510:	mov	x0, x20
 514:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 518:	mov	x20, x0
 51c:	b	4f8 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x6c>
 520:	add	x0, x2, #0x1
 524:	str	x0, [x1, #24]
 528:	mov	w0, #0xa                   	// #10
 52c:	strb	w0, [x2]
 530:	b	4f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x64>
 534:	ldp	x19, x20, [sp, #16]
 538:	ldp	x29, x30, [sp], #32
 53c:	ret

0000000000000540 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 540:	stp	x29, x30, [sp, #-32]!
 544:	mov	x29, sp
 548:	stp	x19, x20, [sp, #16]
 54c:	mov	x19, x0
 550:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 554:	ldr	x0, [x0]
 558:	ldrb	w0, [x0]
 55c:	cbz	w0, 598 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x58>
 560:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 564:	add	x0, x0, #0x0
 568:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 56c:	tst	w0, #0xff
 570:	b.eq	598 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x58>  // b.none
 574:	bl	0 <_ZN4llvm4dbgsEv>
 578:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 57c:	add	x1, x1, #0x0
 580:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 584:	ldr	w1, [x19, #128]
 588:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 58c:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 590:	add	x1, x1, #0x0
 594:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 598:	add	x19, x19, #0x58
 59c:	ldr	x20, [x19, #16]
 5a0:	cmp	x20, x19
 5a4:	b.eq	5c8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x88>  // b.none
 5a8:	ldr	x0, [x20, #32]
 5ac:	ldr	x1, [x0]
 5b0:	ldr	x1, [x1, #8]
 5b4:	blr	x1
 5b8:	mov	x0, x20
 5bc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 5c0:	mov	x20, x0
 5c4:	b	5a0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x60>
 5c8:	ldp	x19, x20, [sp, #16]
 5cc:	ldp	x29, x30, [sp], #32
 5d0:	ret

00000000000005d4 <_ZN4llvm3mca8Pipeline3runEv>:
 5d4:	stp	x29, x30, [sp, #-64]!
 5d8:	mov	x29, sp
 5dc:	stp	x19, x20, [sp, #16]
 5e0:	mov	x20, x0
 5e4:	ldr	w0, [x0, #8]
 5e8:	str	x21, [sp, #32]
 5ec:	cbz	w0, 66c <_ZN4llvm3mca8Pipeline3runEv+0x98>
 5f0:	mov	x19, x8
 5f4:	add	x21, sp, #0x30
 5f8:	mov	x0, x20
 5fc:	bl	48c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 600:	mov	x8, x21
 604:	mov	x0, x20
 608:	bl	11c <_ZN4llvm3mca8Pipeline8runCycleEv>
 60c:	mov	x0, x21
 610:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 614:	tst	w0, #0xff
 618:	b.eq	6e8 <_ZN4llvm3mca8Pipeline3runEv+0x114>  // b.none
 61c:	add	x20, sp, #0x38
 620:	mov	x1, x21
 624:	mov	x0, x20
 628:	str	xzr, [sp, #56]
 62c:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 630:	ldrb	w0, [x19, #8]
 634:	orr	w0, w0, #0x3
 638:	strb	w0, [x19, #8]
 63c:	mov	x0, x20
 640:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 644:	tst	w0, #0xff
 648:	b.ne	68c <_ZN4llvm3mca8Pipeline3runEv+0xb8>  // b.any
 64c:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 650:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 654:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 658:	add	x3, x3, #0x0
 65c:	add	x1, x1, #0x0
 660:	add	x0, x0, #0x0
 664:	mov	w2, #0x1ce                 	// #462
 668:	b	688 <_ZN4llvm3mca8Pipeline3runEv+0xb4>
 66c:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 670:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 674:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 678:	add	x3, x3, #0x0
 67c:	add	x1, x1, #0x0
 680:	add	x0, x0, #0x0
 684:	mov	w2, #0x26                  	// #38
 688:	bl	0 <__assert_fail>
 68c:	ldrb	w0, [x19, #8]
 690:	tbnz	w0, #0, 6b4 <_ZN4llvm3mca8Pipeline3runEv+0xe0>
 694:	adrp	x3, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 698:	adrp	x1, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 69c:	adrp	x0, 0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 6a0:	add	x3, x3, #0x0
 6a4:	add	x1, x1, #0x0
 6a8:	add	x0, x0, #0x0
 6ac:	mov	w2, #0x27c                 	// #636
 6b0:	b	688 <_ZN4llvm3mca8Pipeline3runEv+0xb4>
 6b4:	ldr	x0, [sp, #56]
 6b8:	str	xzr, [sp, #56]
 6bc:	and	x0, x0, #0xfffffffffffffffe
 6c0:	str	x0, [x19]
 6c4:	mov	x0, x20
 6c8:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 6cc:	mov	x0, x21
 6d0:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 6d4:	mov	x0, x19
 6d8:	ldp	x19, x20, [sp, #16]
 6dc:	ldr	x21, [sp, #32]
 6e0:	ldp	x29, x30, [sp], #64
 6e4:	ret
 6e8:	mov	x0, x21
 6ec:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 6f0:	mov	x0, x20
 6f4:	bl	540 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 6f8:	ldr	w0, [x20, #128]
 6fc:	add	w0, w0, #0x1
 700:	str	w0, [x20, #128]
 704:	mov	x0, x20
 708:	bl	14 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 70c:	tst	w0, #0xff
 710:	b.ne	5f8 <_ZN4llvm3mca8Pipeline3runEv+0x24>  // b.any
 714:	ldrb	w0, [x19, #8]
 718:	and	w0, w0, #0xfffffffc
 71c:	orr	w0, w0, #0x2
 720:	strb	w0, [x19, #8]
 724:	ldr	w0, [x20, #128]
 728:	str	w0, [x19]
 72c:	b	6d4 <_ZN4llvm3mca8Pipeline3runEv+0x100>

0000000000000730 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
 730:	stp	x29, x30, [sp, #-48]!
 734:	mov	x29, sp
 738:	stp	x19, x20, [sp, #16]
 73c:	mov	x20, x0
 740:	str	x1, [sp, #40]
 744:	cbz	x1, 754 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x24>
 748:	add	x1, sp, #0x28
 74c:	add	x0, x0, #0x50
 750:	bl	0 <_ZZN4llvm3mca8Pipeline16hasWorkToProcessEvENKUlRKSt10unique_ptrINS0_5StageESt14default_deleteIS3_EEE_clES8_.isra.0>
 754:	ldr	x19, [x20]
 758:	ldr	w20, [x20, #8]
 75c:	add	x20, x19, x20, lsl #3
 760:	cmp	x20, x19
 764:	b.eq	778 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x48>  // b.none
 768:	ldr	x0, [x19], #8
 76c:	ldr	x1, [sp, #40]
 770:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 774:	b	760 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x30>
 778:	ldp	x19, x20, [sp, #16]
 77c:	ldp	x29, x30, [sp], #48
 780:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x1
  14:	stp	x23, x24, [sp, #48]
  18:	add	x23, x0, #0x8
  1c:	mov	w1, #0x1                   	// #1
  20:	ldr	x0, [x0, #16]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x23
  2c:	cbz	x0, 60 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x60>
  30:	ldr	x2, [x22]
  34:	ldr	x1, [x0, #32]
  38:	cmp	x2, x1
  3c:	b.cs	54 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x54>  // b.hs, b.nlast
  40:	ldr	x2, [x0, #16]
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x20, x0
  4c:	mov	x0, x2
  50:	b	2c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x2c>
  54:	mov	w1, #0x0                   	// #0
  58:	ldr	x2, [x0, #24]
  5c:	b	48 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x48>
  60:	cbz	w1, a0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xa0>
  64:	ldr	x0, [x21, #24]
  68:	cmp	x0, x20
  6c:	b.eq	100 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x100>  // b.none
  70:	mov	x0, x20
  74:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  78:	ldr	x1, [x22]
  7c:	ldr	x2, [x0, #32]
  80:	cmp	x2, x1
  84:	b.cc	100 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x100>  // b.lo, b.ul, b.last
  88:	mov	x1, #0x0                   	// #0
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x23, x24, [sp, #48]
  98:	ldp	x29, x30, [sp], #64
  9c:	ret
  a0:	mov	x0, x20
  a4:	b	78 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x78>
  a8:	ldr	x1, [x22]
  ac:	ldr	x0, [x20, #32]
  b0:	cmp	x1, x0
  b4:	cset	w24, cc  // cc = lo, ul, last
  b8:	mov	x0, #0x28                  	// #40
  bc:	bl	0 <_Znwm>
  c0:	mov	x19, x0
  c4:	mov	x1, x0
  c8:	ldr	x0, [x22]
  cc:	mov	x2, x20
  d0:	mov	x3, x23
  d4:	str	x0, [x19, #32]
  d8:	mov	w0, w24
  dc:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  e0:	ldr	x0, [x21, #40]
  e4:	mov	x1, #0x0                   	// #0
  e8:	mov	x2, #0x1                   	// #1
  ec:	add	x0, x0, #0x1
  f0:	bfxil	x1, x2, #0, #8
  f4:	str	x0, [x21, #40]
  f8:	mov	x0, x19
  fc:	b	8c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x8c>
 100:	cmp	x23, x20
 104:	b.ne	a8 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xa8>  // b.any
 108:	mov	w24, #0x1                   	// #1
 10c:	b	b8 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xb8>

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>:
   0:	cbz	x0, 14 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0+0x14>
   4:	ldr	x2, [x0]
   8:	ldr	x2, [x2, #16]
   c:	mov	x16, x2
  10:	br	x16
  14:	mov	w0, #0x0                   	// #0
  18:	ret

000000000000001c <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
  1c:	add	x2, x0, #0x18
  20:	str	xzr, [x0, #8]
  24:	str	wzr, [x0, #24]
  28:	str	xzr, [x0, #32]
  2c:	stp	x2, x2, [x2, #16]
  30:	str	xzr, [x2, #32]
  34:	adrp	x2, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  38:	stp	w3, w3, [x0, #64]
  3c:	ldr	x2, [x2]
  40:	str	wzr, [x0, #72]
  44:	str	wzr, [x0, #80]
  48:	add	x2, x2, #0x10
  4c:	str	x2, [x0]
  50:	stp	xzr, x1, [x0, #88]
  54:	stp	x4, x5, [x0, #104]
  58:	cbnz	w3, 68 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x4c>
  5c:	ldr	x1, [x1, #152]
  60:	ldr	w1, [x1]
  64:	str	w1, [x0, #64]
  68:	ret

000000000000006c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  6c:	stp	x29, x30, [sp, #-112]!
  70:	mov	x29, sp
  74:	stp	x19, x20, [sp, #16]
  78:	mov	x20, x0
  7c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
  80:	stp	x21, x22, [sp, #32]
  84:	mov	x21, x1
  88:	mov	w22, w4
  8c:	ldr	x0, [x0]
  90:	stp	x23, x24, [sp, #48]
  94:	mov	x24, x2
  98:	mov	x23, x3
  9c:	ldrb	w0, [x0]
  a0:	cbz	w0, 108 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x9c>
  a4:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  b0:	tst	w0, #0xff
  b4:	b.eq	108 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x9c>  // b.none
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	mov	x19, x0
  c0:	ldp	x2, x1, [x0, #16]
  c4:	adrp	x5, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  c8:	sub	x2, x2, x1
  cc:	cmp	x2, #0x1c
  d0:	b.hi	154 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xe8>  // b.pmore
  d4:	add	x1, x5, #0x0
  d8:	mov	x2, #0x1d                  	// #29
  dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  e0:	mov	x19, x0
  e4:	ldr	w1, [x21]
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  f0:	ldp	x1, x0, [x19, #16]
  f4:	cmp	x0, x1
  f8:	b.cc	180 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x114>  // b.lo, b.ul, b.last
  fc:	mov	x0, x19
 100:	mov	w1, #0xa                   	// #10
 104:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 108:	add	x20, x20, #0x18
 10c:	stp	x21, x24, [sp, #80]
 110:	add	x21, sp, #0x48
 114:	ldr	x19, [x20, #16]
 118:	mov	w0, #0x6                   	// #6
 11c:	str	w0, [sp, #72]
 120:	str	x23, [sp, #96]
 124:	str	w22, [sp, #104]
 128:	cmp	x20, x19
 12c:	b.eq	194 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x128>  // b.none
 130:	ldr	x0, [x19, #32]
 134:	ldr	x1, [x0]
 138:	ldr	x2, [x1, #16]
 13c:	mov	x1, x21
 140:	blr	x2
 144:	mov	x0, x19
 148:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 14c:	mov	x19, x0
 150:	b	128 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xbc>
 154:	add	x0, x5, #0x0
 158:	ldp	x2, x3, [x0]
 15c:	stp	x2, x3, [x1]
 160:	ldr	x2, [x0, #16]
 164:	str	x2, [x1, #16]
 168:	ldur	x0, [x0, #21]
 16c:	stur	x0, [x1, #21]
 170:	ldr	x0, [x19, #24]
 174:	add	x0, x0, #0x1d
 178:	str	x0, [x19, #24]
 17c:	b	e4 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x78>
 180:	add	x1, x0, #0x1
 184:	str	x1, [x19, #24]
 188:	mov	w1, #0xa                   	// #10
 18c:	strb	w1, [x0]
 190:	b	108 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x9c>
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldp	x23, x24, [sp, #48]
 1a0:	ldp	x29, x30, [sp], #112
 1a4:	ret

00000000000001a8 <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	mov	x29, sp
 1b0:	str	x19, [sp, #16]
 1b4:	mov	x19, x0
 1b8:	ldr	x0, [x0, #112]
 1bc:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 1c0:	ldr	x0, [x19, #104]
 1c4:	ldr	x19, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #32
 1cc:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

00000000000001d0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 1d0:	stp	x29, x30, [sp, #-128]!
 1d4:	mov	x29, sp
 1d8:	stp	x21, x22, [sp, #32]
 1dc:	mov	x22, x1
 1e0:	mov	x21, x0
 1e4:	mov	x0, #0x400000000           	// #17179869184
 1e8:	stp	x19, x20, [sp, #16]
 1ec:	add	x20, sp, #0x68
 1f0:	add	x1, x20, #0x10
 1f4:	stp	x1, x0, [sp, #104]
 1f8:	ldr	x0, [x22, #8]
 1fc:	stp	x23, x24, [sp, #48]
 200:	mov	x23, x1
 204:	str	x25, [sp, #64]
 208:	ldr	w24, [x0, #24]
 20c:	ldr	x19, [x0, #16]
 210:	mov	w0, #0x88                  	// #136
 214:	umaddl	x24, w24, w0, x19
 218:	ldr	w2, [sp, #112]
 21c:	cmp	x24, x19
 220:	b.eq	2b8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xe8>  // b.none
 224:	ldr	w0, [sp, #116]
 228:	ldrh	w25, [x19, #12]
 22c:	cmp	w0, w2
 230:	b.hi	248 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x78>  // b.pmore
 234:	mov	x1, x23
 238:	mov	x0, x20
 23c:	mov	x3, #0x2                   	// #2
 240:	mov	x2, #0x0                   	// #0
 244:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 248:	ldr	w2, [sp, #112]
 24c:	ldr	x1, [sp, #104]
 250:	mov	w0, w2
 254:	add	x0, x0, #0x1
 258:	strh	w25, [x1, w2, uxtw #1]
 25c:	ldr	w1, [sp, #116]
 260:	cmp	x0, x1
 264:	b.ls	288 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xb8>  // b.plast
 268:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 26c:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 270:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x43                  	// #67
 284:	bl	0 <__assert_fail>
 288:	add	w2, w2, #0x1
 28c:	str	w2, [sp, #112]
 290:	add	x19, x19, #0x88
 294:	cbnz	w2, 218 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x48>
 298:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 29c:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 2a0:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 2a4:	add	x3, x3, #0x0
 2a8:	add	x1, x1, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	w2, #0xa7                  	// #167
 2b4:	b	284 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xb4>
 2b8:	ldr	x1, [sp, #104]
 2bc:	mov	w2, w2
 2c0:	ldr	x0, [x21, #112]
 2c4:	mov	w19, #0x1                   	// #1
 2c8:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 2cc:	cbz	w0, 2e8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x118>
 2d0:	str	w19, [sp, #88]
 2d4:	mov	w19, #0x0                   	// #0
 2d8:	add	x1, sp, #0x58
 2dc:	mov	x0, x21
 2e0:	str	x22, [sp, #96]
 2e4:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 2e8:	ldr	x0, [sp, #104]
 2ec:	add	x20, x20, #0x10
 2f0:	cmp	x0, x20
 2f4:	b.eq	2fc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x12c>  // b.none
 2f8:	bl	0 <free>
 2fc:	mov	w0, w19
 300:	ldp	x19, x20, [sp, #16]
 304:	ldp	x21, x22, [sp, #32]
 308:	ldp	x23, x24, [sp, #48]
 30c:	ldr	x25, [sp, #64]
 310:	ldp	x29, x30, [sp], #128
 314:	ret

0000000000000318 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 318:	ldr	x2, [x1, #8]
 31c:	ldr	x4, [x0, #104]
 320:	ldr	x2, [x2]
 324:	ldp	w3, w4, [x4, #16]
 328:	ldr	w2, [x2, #316]
 32c:	cmp	w2, w3
 330:	csel	w2, w2, w3, ls  // ls = plast
 334:	mov	w3, #0x1                   	// #1
 338:	cmp	w2, #0x0
 33c:	csel	w2, w2, w3, ne  // ne = any
 340:	cmp	w4, w2
 344:	b.cs	370 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x58>  // b.hs, b.nlast
 348:	stp	x29, x30, [sp, #-32]!
 34c:	mov	w2, #0x2                   	// #2
 350:	mov	x29, sp
 354:	str	w2, [sp, #16]
 358:	str	x1, [sp, #24]
 35c:	add	x1, sp, #0x10
 360:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 364:	mov	w0, #0x0                   	// #0
 368:	ldp	x29, x30, [sp], #32
 36c:	ret
 370:	mov	w0, w3
 374:	ret

0000000000000378 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 378:	stp	x29, x30, [sp, #-48]!
 37c:	mov	x29, sp
 380:	stp	x19, x20, [sp, #16]
 384:	mov	x20, x0
 388:	str	x21, [sp, #32]
 38c:	mov	x21, x1
 390:	bl	318 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>
 394:	and	w19, w0, #0xff
 398:	mov	x1, x21
 39c:	mov	x0, x20
 3a0:	bl	1d0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 3a4:	and	w19, w19, w0
 3a8:	ldr	x0, [x20, #8]
 3ac:	mov	x1, x21
 3b0:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 3b4:	tst	w0, #0xff
 3b8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
 3bc:	cset	w0, ne  // ne = any
 3c0:	ldp	x19, x20, [sp, #16]
 3c4:	ldr	x21, [sp, #32]
 3c8:	ldp	x29, x30, [sp], #48
 3cc:	ret

00000000000003d0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 3d0:	ldr	x2, [x1, #8]
 3d4:	ldp	w3, w4, [x0, #64]
 3d8:	ldr	x5, [x2]
 3dc:	ldr	w2, [x5, #316]
 3e0:	cmp	w2, w3
 3e4:	csel	w2, w2, w3, ls  // ls = plast
 3e8:	cmp	w2, w4
 3ec:	b.hi	404 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x34>  // b.pmore
 3f0:	ldrb	w2, [x5, #327]
 3f4:	cbz	w2, 400 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x30>
 3f8:	cmp	w4, w3
 3fc:	b.ne	404 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x34>  // b.any
 400:	b	378 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 404:	mov	w0, #0x0                   	// #0
 408:	ret

000000000000040c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 40c:	stp	x29, x30, [sp, #-144]!
 410:	mov	x29, sp
 414:	stp	x19, x20, [sp, #16]
 418:	mov	x19, x0
 41c:	ldr	w0, [x0, #72]
 420:	stp	x21, x22, [sp, #32]
 424:	stp	x23, x24, [sp, #48]
 428:	stp	x25, x26, [sp, #64]
 42c:	stp	x1, x2, [sp, #80]
 430:	cbz	w0, 454 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x48>
 434:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 438:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 43c:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 440:	add	x3, x3, #0x0
 444:	add	x1, x1, #0x0
 448:	add	x0, x0, #0x0
 44c:	mov	w2, #0x4f                  	// #79
 450:	bl	0 <__assert_fail>
 454:	ldr	x20, [sp, #88]
 458:	mov	x24, x8
 45c:	ldp	w1, w0, [x19, #64]
 460:	ldr	x2, [x20]
 464:	ldr	w22, [x2, #316]
 468:	cmp	w1, w22
 46c:	b.cs	4ec <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xe0>  // b.hs, b.nlast
 470:	cmp	w1, w0
 474:	b.eq	498 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x8c>  // b.none
 478:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 47c:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 480:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 484:	add	x3, x3, #0x0
 488:	add	x1, x1, #0x0
 48c:	add	x0, x0, #0x0
 490:	mov	w2, #0x54                  	// #84
 494:	b	450 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x44>
 498:	ldr	w0, [sp, #80]
 49c:	sub	w1, w22, w1
 4a0:	stp	wzr, w1, [x19, #68]
 4a4:	str	w0, [x19, #80]
 4a8:	str	x20, [x19, #88]
 4ac:	ldrb	w0, [x2, #328]
 4b0:	cbz	w0, 4b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xac>
 4b4:	str	wzr, [x19, #68]
 4b8:	ldrb	w0, [x20, #8]
 4bc:	cbz	w0, 5d4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1c8>
 4c0:	ldr	w0, [x20, #24]
 4c4:	cmp	w0, #0x1
 4c8:	b.eq	520 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x114>  // b.none
 4cc:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 4d0:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 4d4:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 4d8:	add	x3, x3, #0x0
 4dc:	add	x1, x1, #0x0
 4e0:	add	x0, x0, #0x0
 4e4:	mov	w2, #0x63                  	// #99
 4e8:	b	450 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x44>
 4ec:	cmp	w22, w0
 4f0:	b.ls	514 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x108>  // b.plast
 4f4:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 4f8:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 4fc:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 500:	add	x3, x3, #0x0
 504:	add	x1, x1, #0x0
 508:	add	x0, x0, #0x0
 50c:	mov	w2, #0x59                  	// #89
 510:	b	450 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x44>
 514:	sub	w0, w0, w22
 518:	str	w0, [x19, #68]
 51c:	b	4ac <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xa0>
 520:	ldr	w21, [x20, #584]
 524:	cmp	w21, #0x1
 528:	b.eq	54c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x140>  // b.none
 52c:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 530:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 534:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 538:	add	x3, x3, #0x0
 53c:	add	x1, x1, #0x0
 540:	add	x0, x0, #0x0
 544:	mov	w2, #0x64                  	// #100
 548:	b	450 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x44>
 54c:	ldr	x1, [x20, #16]
 550:	ldr	x0, [x19, #112]
 554:	ldr	x2, [x20, #576]
 558:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 55c:	tst	w0, #0xff
 560:	b.eq	5d4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1c8>  // b.none
 564:	strb	w21, [x20, #840]
 568:	ldr	x0, [x19, #112]
 56c:	add	x23, sp, #0x70
 570:	add	x1, x23, #0x10
 574:	str	x1, [sp, #112]
 578:	mov	x1, #0x400000000           	// #17179869184
 57c:	str	x1, [sp, #120]
 580:	ldr	w1, [x0, #24]
 584:	add	x2, sp, #0x6c
 588:	mov	x0, x23
 58c:	str	wzr, [sp, #108]
 590:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 594:	ldr	w26, [x20, #24]
 598:	ldr	x21, [x20, #16]
 59c:	mov	w0, #0x88                  	// #136
 5a0:	umaddl	x26, w26, w0, x21
 5a4:	cmp	x21, x26
 5a8:	b.eq	60c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x200>  // b.none
 5ac:	ldr	w0, [sp, #80]
 5b0:	mov	x2, x21
 5b4:	ldr	w4, [sp, #120]
 5b8:	add	x21, x21, #0x88
 5bc:	ldr	x3, [sp, #112]
 5c0:	bfxil	x25, x0, #0, #32
 5c4:	ldr	x0, [x19, #112]
 5c8:	mov	x1, x25
 5cc:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 5d0:	b	5a4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x198>
 5d4:	ldrb	w0, [x20, #840]
 5d8:	cbnz	w0, 568 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x15c>
 5dc:	ldr	w23, [x20, #584]
 5e0:	mov	w0, #0x30                  	// #48
 5e4:	ldr	x21, [x20, #576]
 5e8:	umaddl	x23, w23, w0, x21
 5ec:	cmp	x21, x23
 5f0:	ldr	x0, [x19, #112]
 5f4:	b.eq	568 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x15c>  // b.none
 5f8:	ldr	x2, [x19, #96]
 5fc:	mov	x1, x21
 600:	add	x21, x21, #0x30
 604:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 608:	b	5ec <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1e0>
 60c:	ldr	x0, [x19, #104]
 610:	add	x21, sp, #0x50
 614:	mov	x1, x21
 618:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 61c:	mov	w1, w0
 620:	mov	x0, x20
 624:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 628:	ldr	w4, [x19, #64]
 62c:	mov	x1, x21
 630:	ldr	w3, [sp, #120]
 634:	mov	x0, x19
 638:	ldr	x2, [sp, #112]
 63c:	cmp	w4, w22
 640:	csel	w4, w4, w22, ls  // ls = plast
 644:	bl	6c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 648:	ldr	x0, [x19, #8]
 64c:	mov	x1, x21
 650:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 654:	tst	w0, #0xff
 658:	b.ne	67c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x270>  // b.any
 65c:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 660:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 664:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 668:	add	x3, x3, #0x0
 66c:	add	x1, x1, #0x0
 670:	add	x0, x0, #0x0
 674:	mov	w2, #0x47                  	// #71
 678:	b	450 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x44>
 67c:	ldr	x0, [x19, #8]
 680:	mov	x8, x24
 684:	add	x23, x23, #0x10
 688:	ldr	x1, [x0]
 68c:	ldr	x2, [x1, #48]
 690:	mov	x1, x21
 694:	blr	x2
 698:	ldr	x0, [sp, #112]
 69c:	cmp	x0, x23
 6a0:	b.eq	6a8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x29c>  // b.none
 6a4:	bl	0 <free>
 6a8:	mov	x0, x24
 6ac:	ldp	x19, x20, [sp, #16]
 6b0:	ldp	x21, x22, [sp, #32]
 6b4:	ldp	x23, x24, [sp, #48]
 6b8:	ldp	x25, x26, [sp, #64]
 6bc:	ldp	x29, x30, [sp], #144
 6c0:	ret

00000000000006c4 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 6c4:	stp	x29, x30, [sp, #-48]!
 6c8:	mov	x29, sp
 6cc:	stp	x19, x20, [sp, #16]
 6d0:	mov	x19, x8
 6d4:	mov	x20, x0
 6d8:	str	x21, [sp, #32]
 6dc:	mov	x21, x1
 6e0:	bl	378 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 6e4:	tst	w0, #0xff
 6e8:	b.ne	70c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x48>  // b.any
 6ec:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 6f0:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 6f4:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 6f8:	add	x3, x3, #0x0
 6fc:	add	x1, x1, #0x0
 700:	add	x0, x0, #0x0
 704:	mov	w2, #0xb0                  	// #176
 708:	bl	0 <__assert_fail>
 70c:	ldp	x1, x2, [x21]
 710:	mov	x8, x19
 714:	mov	x0, x20
 718:	bl	40c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 71c:	mov	x0, x19
 720:	ldp	x19, x20, [sp, #16]
 724:	ldr	x21, [sp, #32]
 728:	ldp	x29, x30, [sp], #48
 72c:	ret

0000000000000730 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 730:	stp	x29, x30, [sp, #-128]!
 734:	mov	x29, sp
 738:	stp	x19, x20, [sp, #16]
 73c:	mov	x19, x0
 740:	mov	x20, x8
 744:	ldr	x0, [x0, #112]
 748:	stp	x21, x22, [sp, #32]
 74c:	add	x21, sp, #0x50
 750:	str	x23, [sp, #48]
 754:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 758:	ldr	w0, [x19, #72]
 75c:	ldr	w2, [x19, #64]
 760:	cbnz	w0, 7a0 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x70>
 764:	str	w2, [x19, #68]
 768:	mov	x1, x21
 76c:	str	xzr, [x20]
 770:	mov	x0, #0x1                   	// #1
 774:	str	x0, [sp, #80]
 778:	mov	x0, x20
 77c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 780:	mov	x0, x21
 784:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 788:	mov	x0, x20
 78c:	ldp	x19, x20, [sp, #16]
 790:	ldp	x21, x22, [sp, #32]
 794:	ldr	x23, [sp, #48]
 798:	ldp	x29, x30, [sp], #128
 79c:	ret
 7a0:	sub	w1, w2, w0
 7a4:	cmp	w0, w2
 7a8:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
 7ac:	sub	w0, w0, w2
 7b0:	add	w0, w0, w1
 7b4:	stp	w1, w0, [x19, #68]
 7b8:	ldr	x0, [x19, #88]
 7bc:	sub	w23, w2, w1
 7c0:	cbnz	x0, 7e4 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xb4>
 7c4:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 7c8:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 7cc:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 7d0:	add	x3, x3, #0x0
 7d4:	add	x1, x1, #0x0
 7d8:	add	x0, x0, #0x0
 7dc:	mov	w2, #0x95                  	// #149
 7e0:	bl	0 <__assert_fail>
 7e4:	ldr	x0, [x19, #112]
 7e8:	add	x22, sp, #0x48
 7ec:	mov	x2, x22
 7f0:	ldr	w1, [x0, #24]
 7f4:	add	x0, x21, #0x10
 7f8:	str	x0, [sp, #80]
 7fc:	mov	x0, #0x800000000           	// #34359738368
 800:	str	wzr, [sp, #72]
 804:	str	x0, [sp, #88]
 808:	mov	x0, x21
 80c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 810:	ldr	w3, [sp, #88]
 814:	mov	x0, x19
 818:	ldr	x2, [sp, #80]
 81c:	mov	w4, w23
 820:	add	x1, x19, #0x50
 824:	bl	6c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 828:	ldr	w0, [x19, #72]
 82c:	cbnz	w0, 838 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x108>
 830:	str	wzr, [x19, #80]
 834:	str	xzr, [x19, #88]
 838:	mov	x1, x22
 83c:	str	xzr, [x20]
 840:	mov	x0, #0x1                   	// #1
 844:	str	x0, [sp, #72]
 848:	mov	x0, x20
 84c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 850:	mov	x0, x22
 854:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 858:	ldr	x0, [sp, #80]
 85c:	add	x21, x21, #0x10
 860:	cmp	x0, x21
 864:	b.eq	788 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x58>  // b.none
 868:	bl	0 <free>
 86c:	b	788 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x58>

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca13DispatchStageD2Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca13DispatchStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x78                  	// #120
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, x0, #0x18
  10:	ldr	x19, [x0, #40]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x1
  1c:	cmp	x20, x19
  20:	b.eq	48 <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x48>  // b.none
  24:	ldr	x0, [x19, #32]
  28:	ldr	x1, [x0]
  2c:	ldr	x2, [x1, #24]
  30:	mov	x1, x21
  34:	blr	x2
  38:	mov	x0, x19
  3c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  40:	mov	x19, x0
  44:	b	1c <_ZNK4llvm3mca5Stage11notifyEventINS0_12HWStallEventEEEvRKT_+0x1c>
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldr	x21, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjE6assignEmRKj:

0000000000000000 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	ldr	w1, [x0, #12]
  14:	str	x21, [sp, #32]
  18:	mov	x20, x0
  1c:	str	wzr, [x0, #8]
  20:	cmp	x19, x1
  24:	mov	x21, x2
  28:	b.ls	68 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x68>  // b.plast
  2c:	add	x1, x0, #0x10
  30:	mov	x2, x19
  34:	mov	x3, #0x4                   	// #4
  38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  3c:	ldr	w0, [x20, #12]
  40:	cmp	x19, x0
  44:	b.ls	68 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x68>  // b.plast
  48:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  4c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  50:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj>
  54:	add	x3, x3, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x0, x0, #0x0
  60:	mov	w2, #0x43                  	// #67
  64:	bl	0 <__assert_fail>
  68:	ldr	x0, [x20]
  6c:	str	w19, [x20, #8]
  70:	ldr	w1, [x21]
  74:	add	x19, x0, x19, lsl #2
  78:	cmp	x0, x19
  7c:	b.eq	88 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x88>  // b.none
  80:	str	w1, [x0], #4
  84:	b	78 <_ZN4llvm15SmallVectorImplIjE6assignEmRKj+0x78>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #72]
   4:	cmp	x0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>:
  10:	cbz	x0, 24 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0+0x14>
  14:	ldr	x2, [x0]
  18:	ldr	x2, [x2, #16]
  1c:	mov	x16, x2
  20:	br	x16
  24:	mov	w0, #0x0                   	// #0
  28:	ret

000000000000002c <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  2c:	ldr	x1, [x0, #72]
  30:	cbz	x1, 40 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x14>
  34:	add	x1, x0, #0x40
  38:	ldr	x0, [x0, #8]
  3c:	b	10 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  40:	mov	w0, #0x0                   	// #0
  44:	ret

0000000000000048 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_.isra.0.part.0>:
  48:	stp	x29, x30, [sp, #-32]!
  4c:	add	x1, x0, #0x250
  50:	mov	x29, sp
  54:	str	x19, [sp, #16]
  58:	mov	x19, x0
  5c:	ldr	x0, [x0, #576]
  60:	cmp	x0, x1
  64:	b.eq	6c <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_.isra.0.part.0+0x24>  // b.none
  68:	bl	0 <free>
  6c:	ldr	w2, [x19, #24]
  70:	mov	w1, #0x88                  	// #136
  74:	ldr	x0, [x19, #16]
  78:	umaddl	x1, w2, w1, x0
  7c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  80:	ldr	x0, [x19, #16]
  84:	add	x1, x19, #0x20
  88:	cmp	x0, x1
  8c:	b.eq	94 <_ZNKSt14default_deleteIN4llvm3mca11InstructionEEclEPS2_.isra.0.part.0+0x4c>  // b.none
  90:	bl	0 <free>
  94:	mov	x0, x19
  98:	mov	x1, #0x350                 	// #848
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	b	0 <_ZdlPvm>

00000000000000a8 <_ZN4llvm3mca10EntryStage8cycleEndEv>:
  a8:	stp	x29, x30, [sp, #-48]!
  ac:	mov	x29, sp
  b0:	ldr	w4, [x0, #88]
  b4:	ldr	w3, [x0, #232]
  b8:	stp	x19, x20, [sp, #16]
  bc:	cmp	x3, w4, uxtw
  c0:	b.cc	e4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x3c>  // b.lo, b.ul, b.last
  c4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  c8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  cc:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  d0:	add	x3, x3, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x0, x0, #0x0
  dc:	mov	w2, #0x95                  	// #149
  e0:	bl	0 <__assert_fail>
  e4:	mov	x19, x0
  e8:	mov	w0, w4
  ec:	mov	x20, x8
  f0:	lsl	x0, x0, #3
  f4:	ldr	x1, [x19, #80]
  f8:	add	x2, x1, x3, lsl #3
  fc:	sub	x3, x0, x3, lsl #3
 100:	asr	x3, x3, #5
 104:	cmp	x3, #0x0
 108:	b.le	1c4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x11c>
 10c:	ldr	x5, [x2]
 110:	ldr	w5, [x5, #784]
 114:	cmp	w5, #0x6
 118:	b.ne	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>  // b.any
 11c:	ldr	x5, [x2, #8]
 120:	ldr	w5, [x5, #784]
 124:	cmp	w5, #0x6
 128:	b.eq	188 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe0>  // b.none
 12c:	add	x2, x2, #0x8
 130:	sub	x0, x2, x1
 134:	asr	x0, x0, #3
 138:	str	w0, [x19, #232]
 13c:	lsl	w0, w0, #1
 140:	cmp	w0, w4
 144:	b.cc	154 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xac>  // b.lo, b.ul, b.last
 148:	add	x0, x19, #0x50
 14c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 150:	str	wzr, [x19, #232]
 154:	add	x19, sp, #0x28
 158:	str	xzr, [x20]
 15c:	mov	x1, x19
 160:	mov	x0, #0x1                   	// #1
 164:	str	x0, [sp, #40]
 168:	mov	x0, x20
 16c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 170:	mov	x0, x19
 174:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 178:	mov	x0, x20
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x29, x30, [sp], #48
 184:	ret
 188:	ldr	x5, [x2, #16]
 18c:	ldr	w5, [x5, #784]
 190:	cmp	w5, #0x6
 194:	b.eq	1a0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf8>  // b.none
 198:	add	x2, x2, #0x10
 19c:	b	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>
 1a0:	ldr	x5, [x2, #24]
 1a4:	ldr	w5, [x5, #784]
 1a8:	cmp	w5, #0x6
 1ac:	b.eq	1b8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x110>  // b.none
 1b0:	add	x2, x2, #0x18
 1b4:	b	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>
 1b8:	add	x2, x2, #0x20
 1bc:	sub	x3, x3, #0x1
 1c0:	b	104 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x5c>
 1c4:	add	x0, x1, x0
 1c8:	sub	x3, x0, x2
 1cc:	cmp	x3, #0x10
 1d0:	b.eq	200 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x158>  // b.none
 1d4:	cmp	x3, #0x18
 1d8:	b.eq	1ec <_ZN4llvm3mca10EntryStage8cycleEndEv+0x144>  // b.none
 1dc:	cmp	x3, #0x8
 1e0:	b.eq	214 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x16c>  // b.none
 1e4:	mov	x2, x0
 1e8:	b	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>
 1ec:	ldr	x3, [x2]
 1f0:	ldr	w3, [x3, #784]
 1f4:	cmp	w3, #0x6
 1f8:	b.ne	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>  // b.any
 1fc:	add	x2, x2, #0x8
 200:	ldr	x3, [x2]
 204:	ldr	w3, [x3, #784]
 208:	cmp	w3, #0x6
 20c:	b.ne	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>  // b.any
 210:	add	x2, x2, #0x8
 214:	ldr	x3, [x2]
 218:	ldr	w3, [x3, #784]
 21c:	cmp	w3, #0x6
 220:	csel	x2, x2, x0, ne  // ne = any
 224:	b	130 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x88>

0000000000000228 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
 228:	stp	x29, x30, [sp, #-64]!
 22c:	mov	x29, sp
 230:	stp	x19, x20, [sp, #16]
 234:	mov	x20, x0
 238:	ldr	x0, [x0, #72]
 23c:	stp	x21, x22, [sp, #32]
 240:	cbz	x0, 264 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x3c>
 244:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 248:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 24c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 250:	add	x3, x3, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x0, x0, #0x0
 25c:	mov	w2, #0x20                  	// #32
 260:	bl	0 <__assert_fail>
 264:	ldr	x0, [x20, #224]
 268:	ldp	w22, w3, [x0, #16]
 26c:	ldr	x2, [x0, #8]
 270:	mov	w4, w22
 274:	mul	x3, x3, x2
 278:	cmp	x3, w22, uxtw
 27c:	b.ls	430 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x208>  // b.plast
 280:	udiv	x1, x4, x2
 284:	ldr	x0, [x0]
 288:	msub	x1, x1, x2, x4
 28c:	ldr	x21, [x0, x1, lsl #3]
 290:	mov	x0, #0x350                 	// #848
 294:	bl	0 <_Znwm>
 298:	mov	x19, x0
 29c:	ldr	x0, [x21]
 2a0:	str	x0, [x19]
 2a4:	ldrb	w0, [x21, #8]
 2a8:	strb	w0, [x19, #8]
 2ac:	add	x0, x19, #0x20
 2b0:	str	x0, [x19, #16]
 2b4:	mov	x0, #0x400000000           	// #17179869184
 2b8:	str	x0, [x19, #24]
 2bc:	ldr	w0, [x21, #24]
 2c0:	cbz	w0, 2d0 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa8>
 2c4:	add	x1, x21, #0x10
 2c8:	add	x0, x19, #0x10
 2cc:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 2d0:	add	x0, x19, #0x250
 2d4:	str	x0, [x19, #576]
 2d8:	mov	x0, #0x400000000           	// #17179869184
 2dc:	str	x0, [x19, #584]
 2e0:	ldr	w0, [x21, #584]
 2e4:	cbz	w0, 2f4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xcc>
 2e8:	add	x1, x21, #0x240
 2ec:	add	x0, x19, #0x240
 2f0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 2f4:	ldr	x1, [x21, #784]
 2f8:	str	x1, [x19, #784]
 2fc:	ldr	x0, [x21, #800]
 300:	str	x0, [x19, #800]
 304:	ldr	x1, [x21, #792]
 308:	str	x1, [x19, #792]
 30c:	ldr	x0, [x21, #808]
 310:	add	x1, x21, #0x334
 314:	str	x0, [x19, #808]
 318:	ldr	w0, [x21, #816]
 31c:	str	w0, [x19, #816]
 320:	add	x0, x19, #0x334
 324:	ldr	x2, [x1]
 328:	str	x2, [x0]
 32c:	ldr	x0, [x21, #832]
 330:	str	x0, [x19, #832]
 334:	ldr	w1, [x21, #828]
 338:	ldrb	w0, [x21, #840]
 33c:	str	w1, [x19, #828]
 340:	strb	w0, [x19, #840]
 344:	ldp	w1, w0, [x20, #88]
 348:	str	w22, [x20, #64]
 34c:	str	x19, [x20, #72]
 350:	cmp	w1, w0
 354:	b.cc	3e0 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1b8>  // b.lo, b.ul, b.last
 358:	mov	w0, w0
 35c:	add	x0, x0, #0x2
 360:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 364:	mov	x1, #0xffffffff            	// #4294967295
 368:	cmp	x0, x1
 36c:	stp	x0, x1, [sp, #48]
 370:	add	x1, sp, #0x38
 374:	add	x0, sp, #0x30
 378:	csel	x0, x0, x1, ls  // ls = plast
 37c:	ldr	x22, [x0]
 380:	lsl	x0, x22, #3
 384:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 388:	ldr	x2, [x20, #80]
 38c:	mov	x21, x0
 390:	mov	x3, x0
 394:	ldr	w0, [x20, #88]
 398:	lsl	x1, x0, #3
 39c:	add	x0, x2, x0, lsl #3
 3a0:	cmp	x0, x2
 3a4:	b.eq	3b8 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x190>  // b.none
 3a8:	ldr	x4, [x2]
 3ac:	str	xzr, [x2], #8
 3b0:	str	x4, [x3], #8
 3b4:	b	3a0 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x178>
 3b8:	ldr	x0, [x20, #80]
 3bc:	add	x1, x0, x1
 3c0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3c4:	ldr	x0, [x20, #80]
 3c8:	add	x1, x20, #0x60
 3cc:	cmp	x0, x1
 3d0:	b.eq	3d8 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1b0>  // b.none
 3d4:	bl	0 <free>
 3d8:	str	x21, [x20, #80]
 3dc:	str	w22, [x20, #92]
 3e0:	mov	x0, x20
 3e4:	ldr	w1, [x20, #88]
 3e8:	ldr	x2, [x0, #80]!
 3ec:	str	x19, [x2, x1, lsl #3]
 3f0:	add	x1, x1, #0x1
 3f4:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3f8:	ldr	w0, [x20, #88]
 3fc:	cbnz	w0, 420 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1f8>
 400:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 404:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 408:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 40c:	add	x3, x3, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x0, x0, #0x0
 418:	mov	w2, #0xa7                  	// #167
 41c:	b	260 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x38>
 420:	ldr	x1, [x20, #224]
 424:	ldr	w0, [x1, #16]
 428:	add	w0, w0, #0x1
 42c:	str	w0, [x1, #16]
 430:	ldp	x19, x20, [sp, #16]
 434:	ldp	x21, x22, [sp, #32]
 438:	ldp	x29, x30, [sp], #64
 43c:	ret

0000000000000440 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 440:	stp	x29, x30, [sp, #-64]!
 444:	mov	x29, sp
 448:	stp	x19, x20, [sp, #16]
 44c:	mov	x19, x0
 450:	ldr	x0, [x0, #72]
 454:	stp	x21, x22, [sp, #32]
 458:	cbnz	x0, 47c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x3c>
 45c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 460:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 464:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 468:	add	x3, x3, #0x0
 46c:	add	x1, x1, #0x0
 470:	add	x0, x0, #0x0
 474:	mov	w2, #0x2b                  	// #43
 478:	bl	0 <__assert_fail>
 47c:	ldr	x0, [x19, #8]
 480:	add	x22, x19, #0x40
 484:	mov	x20, x8
 488:	mov	x1, x22
 48c:	bl	10 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 490:	tst	w0, #0xff
 494:	b.ne	4b8 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x78>  // b.any
 498:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 49c:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 4a0:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 4a4:	add	x3, x3, #0x0
 4a8:	add	x1, x1, #0x0
 4ac:	add	x0, x0, #0x0
 4b0:	mov	w2, #0x47                  	// #71
 4b4:	b	478 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x38>
 4b8:	ldr	x0, [x19, #8]
 4bc:	add	x21, sp, #0x38
 4c0:	mov	x8, x21
 4c4:	ldr	x1, [x0]
 4c8:	ldr	x2, [x1, #48]
 4cc:	mov	x1, x22
 4d0:	blr	x2
 4d4:	ldr	x0, [sp, #56]
 4d8:	ands	x1, x0, #0xfffffffffffffffe
 4dc:	cset	x0, ne  // ne = any
 4e0:	orr	x0, x0, x1
 4e4:	str	x0, [sp, #56]
 4e8:	tst	x0, #0xfffffffffffffffe
 4ec:	b.eq	51c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xdc>  // b.none
 4f0:	mov	x1, x21
 4f4:	str	xzr, [x20]
 4f8:	mov	x0, x20
 4fc:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 500:	mov	x0, x21
 504:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 508:	mov	x0, x20
 50c:	ldp	x19, x20, [sp, #16]
 510:	ldp	x21, x22, [sp, #32]
 514:	ldp	x29, x30, [sp], #64
 518:	ret
 51c:	mov	x0, x21
 520:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 524:	str	xzr, [x19, #72]
 528:	mov	x0, x19
 52c:	bl	228 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 530:	str	xzr, [x20]
 534:	mov	x1, x21
 538:	mov	x0, #0x1                   	// #1
 53c:	str	x0, [sp, #56]
 540:	mov	x0, x20
 544:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 548:	mov	x0, x21
 54c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 550:	b	508 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xc8>

0000000000000554 <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 554:	stp	x29, x30, [sp, #-48]!
 558:	mov	x29, sp
 55c:	ldr	x1, [x0, #72]
 560:	stp	x19, x20, [sp, #16]
 564:	mov	x19, x8
 568:	cbnz	x1, 570 <_ZN4llvm3mca10EntryStage10cycleStartEv+0x1c>
 56c:	bl	228 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 570:	add	x20, sp, #0x28
 574:	str	xzr, [x19]
 578:	mov	x1, x20
 57c:	mov	x0, #0x1                   	// #1
 580:	str	x0, [sp, #40]
 584:	mov	x0, x19
 588:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 58c:	mov	x0, x20
 590:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 594:	mov	x0, x19
 598:	ldp	x19, x20, [sp, #16]
 59c:	ldp	x29, x30, [sp], #48
 5a0:	ret

Disassembly of section .text._ZN4llvm12NextPowerOf2Em:

0000000000000000 <_ZN4llvm12NextPowerOf2Em>:
   0:	orr	x0, x0, x0, lsr #1
   4:	orr	x0, x0, x0, lsr #2
   8:	orr	x0, x0, x0, lsr #4
   c:	orr	x0, x0, x0, lsr #8
  10:	orr	x0, x0, x0, lsr #16
  14:	orr	x0, x0, x0, lsr #32
  18:	add	x0, x0, #0x1
  1c:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x19
  14:	bl	0 <malloc>
  18:	mov	x20, x0
  1c:	cbnz	x0, 34 <_ZN4llvm11safe_mallocEm+0x34>
  20:	cbz	x19, 44 <_ZN4llvm11safe_mallocEm+0x44>
  24:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  28:	mov	w1, #0x1                   	// #1
  2c:	add	x0, x0, #0x0
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	x19, #0x1                   	// #1
  48:	b	10 <_ZN4llvm11safe_mallocEm+0x10>

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cmp	x19, x20
  18:	b.eq	38 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x38>  // b.none
  1c:	ldur	x0, [x19, #-80]
  20:	sub	x19, x19, #0x88
  24:	add	x1, x19, #0x48
  28:	cmp	x0, x1
  2c:	b.eq	14 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x14>  // b.none
  30:	bl	0 <free>
  34:	b	14 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE13destroy_rangeEPS2_S4_+0x14>
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cmp	x19, x20
  18:	b.eq	2c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x2c>  // b.none
  1c:	ldr	x0, [x19, #-8]!
  20:	cbz	x0, 14 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x14>
  24:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_>
  28:	b	14 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE13destroy_rangeEPS6_S8_+0x14>
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3mca10EntryStageD1Ev>
  14:	ldr	x0, [x0]
  18:	ldr	w1, [x19, #88]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #80]
  28:	add	x1, x0, x1, lsl #3
  2c:	bl	0 <_ZN4llvm3mca10EntryStageD1Ev>
  30:	ldr	x0, [x19, #80]
  34:	add	x1, x19, #0x60
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca10EntryStageD1Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca10EntryStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0xf0                  	// #240
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	ldr	x0, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	str	x23, [sp, #48]
  1c:	cmp	x1, x0
  20:	b.cs	44 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x44>  // b.hs, b.nlast
  24:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  28:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  2c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x1c6                 	// #454
  40:	bl	0 <__assert_fail>
  44:	mov	x20, x1
  48:	mov	x23, x2
  4c:	cmp	x1, x2
  50:	b.ls	74 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x74>  // b.plast
  54:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  58:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  5c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x1c7                 	// #455
  70:	b	40 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x40>
  74:	ldr	w19, [x21, #8]
  78:	add	x19, x0, x19, lsl #3
  7c:	cmp	x2, x19
  80:	b.ls	a4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xa4>  // b.plast
  84:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  88:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  8c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  90:	add	x3, x3, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x0, x0, #0x0
  9c:	mov	w2, #0x1c8                 	// #456
  a0:	b	40 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x40>
  a4:	sub	x19, x19, x2
  a8:	mov	x22, #0x0                   	// #0
  ac:	asr	x19, x19, #3
  b0:	sub	x0, x19, x22
  b4:	cmp	x0, #0x0
  b8:	b.le	dc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xdc>
  bc:	ldr	x1, [x23, x22, lsl #3]
  c0:	str	xzr, [x23, x22, lsl #3]
  c4:	ldr	x0, [x20, x22, lsl #3]
  c8:	str	x1, [x20, x22, lsl #3]
  cc:	cbz	x0, d4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xd4>
  d0:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  d4:	add	x22, x22, #0x1
  d8:	b	b0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xb0>
  dc:	cmp	x19, #0x0
  e0:	ldr	w1, [x21, #8]
  e4:	ldr	x0, [x21]
  e8:	csel	x19, x19, xzr, ge  // ge = tcont
  ec:	add	x19, x20, x19, lsl #3
  f0:	add	x1, x0, x1, lsl #3
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
  fc:	ldr	x0, [x21]
 100:	sub	x19, x19, x0
 104:	mov	x0, x21
 108:	asr	x1, x19, #3
 10c:	bl	0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 110:	mov	x0, x20
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldr	x23, [sp, #48]
 120:	ldp	x29, x30, [sp], #64
 124:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x5c>  // b.none
  1c:	mov	x20, x1
  20:	ldr	w1, [x0, #8]
  24:	mov	w21, w1
  28:	ldr	w2, [x20, #8]
  2c:	mov	w22, w2
  30:	cmp	w2, w1
  34:	b.hi	70 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x70>  // b.pmore
  38:	cbz	x22, 50 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x50>
  3c:	mov	w0, #0x30                  	// #48
  40:	ldr	x1, [x20]
  44:	umull	x2, w2, w0
  48:	ldr	x0, [x19]
  4c:	bl	0 <memmove>
  50:	mov	x1, x22
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret
  70:	ldr	w2, [x0, #12]
  74:	cmp	x22, x2
  78:	b.ls	d4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xd4>  // b.plast
  7c:	mov	x21, #0x0                   	// #0
  80:	mov	x1, #0x0                   	// #0
  84:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  88:	mov	x2, x22
  8c:	add	x1, x19, #0x10
  90:	mov	x0, x19
  94:	mov	x3, #0x30                  	// #48
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w2, [x20, #8]
  a0:	mov	x3, #0x30                  	// #48
  a4:	ldr	x0, [x20]
  a8:	mul	x21, x21, x3
  ac:	umull	x2, w2, w3
  b0:	add	x1, x0, x21
  b4:	add	x0, x0, x2
  b8:	cmp	x1, x0
  bc:	b.eq	50 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x50>  // b.none
  c0:	ldr	x0, [x19]
  c4:	sub	x2, x2, x21
  c8:	add	x0, x0, x21
  cc:	bl	0 <memcpy>
  d0:	b	50 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x50>
  d4:	cbz	x21, 9c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x9c>
  d8:	mov	w2, #0x30                  	// #48
  dc:	ldr	x0, [x0]
  e0:	umull	x2, w1, w2
  e4:	ldr	x1, [x20]
  e8:	bl	0 <memmove>
  ec:	b	9c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x9c>

Disassembly of section .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_>:
   0:	sub	x1, x1, x0
   4:	mov	x3, x2
   8:	asr	x1, x1, #4
   c:	mov	x4, x1
  10:	cmp	x4, #0x0
  14:	b.le	38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_+0x38>
  18:	ldr	x5, [x0]
  1c:	str	x5, [x3]
  20:	ldr	w5, [x0, #8]
  24:	sub	x4, x4, #0x1
  28:	add	x0, x0, #0x10
  2c:	add	x3, x3, #0x10
  30:	stur	w5, [x3, #-8]
  34:	b	10 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt4pairIPN4llvm3mca9ReadStateEiEPS8_EET0_T_SD_SC_+0x10>
  38:	cmp	x1, #0x0
  3c:	csel	x1, x1, xzr, ge  // ge = tcont
  40:	add	x0, x2, x1, lsl #4
  44:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	b.eq	54 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x54>  // b.none
  20:	ldr	w20, [x0, #8]
  24:	mov	x22, x1
  28:	ldr	w21, [x1, #8]
  2c:	cmp	x21, x20
  30:	b.hi	6c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x6c>  // b.pmore
  34:	cbz	x21, 48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>
  38:	ldr	x2, [x0]
  3c:	ldr	x0, [x1]
  40:	add	x1, x0, x21, lsl #4
  44:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  48:	mov	x1, x21
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  54:	mov	x0, x19
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	cmp	x21, x1
  74:	b.ls	13c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x13c>  // b.plast
  78:	mov	x1, #0x0                   	// #0
  7c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  80:	ldr	w0, [x19, #12]
  84:	str	x21, [sp, #72]
  88:	add	x0, x0, #0x2
  8c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  90:	add	x1, sp, #0x48
  94:	cmp	x21, x0
  98:	str	x0, [sp, #80]
  9c:	add	x0, sp, #0x50
  a0:	csel	x0, x0, x1, ls  // ls = plast
  a4:	mov	x1, #0xffffffff            	// #4294967295
  a8:	str	x1, [sp, #88]
  ac:	ldr	x2, [x0]
  b0:	cmp	x2, x1
  b4:	b.ls	bc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xbc>  // b.plast
  b8:	add	x0, sp, #0x58
  bc:	ldr	x23, [x0]
  c0:	lsl	x0, x23, #4
  c4:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  c8:	mov	x20, x0
  cc:	mov	x3, x0
  d0:	ldr	x0, [x19]
  d4:	ldr	w2, [x19, #8]
  d8:	mov	x1, x0
  dc:	add	x2, x0, x2, lsl #4
  e0:	cmp	x2, x1
  e4:	b.eq	f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>  // b.none
  e8:	ldp	x4, x5, [x1], #16
  ec:	stp	x4, x5, [x3], #16
  f0:	b	e0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xe0>
  f4:	add	x1, x19, #0x10
  f8:	cmp	x0, x1
  fc:	b.eq	104 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x104>  // b.none
 100:	bl	0 <free>
 104:	str	x20, [x19]
 108:	mov	x20, #0x0                   	// #0
 10c:	str	w23, [x19, #12]
 110:	ldr	x2, [x22]
 114:	ldr	w1, [x22, #8]
 118:	add	x0, x2, x20, lsl #4
 11c:	add	x1, x2, x1, lsl #4
 120:	ldr	x2, [x19]
 124:	add	x20, x2, x20, lsl #4
 128:	cmp	x1, x0
 12c:	b.eq	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.none
 130:	ldp	x2, x3, [x0], #16
 134:	stp	x2, x3, [x20], #16
 138:	b	128 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x128>
 13c:	cbz	x20, 110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
 140:	ldr	x2, [x0]
 144:	ldr	x0, [x22]
 148:	add	x1, x0, x20, lsl #4
 14c:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 150:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>

Disassembly of section .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm3mca10WriteStateEPS5_EET0_T_SA_S9_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm3mca10WriteStateEPS5_EET0_T_SA_S9_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	sub	x21, x1, x0
  10:	mov	x1, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  14:	asr	x21, x21, #3
  18:	movk	x1, #0xf0f1
  1c:	mov	x22, x2
  20:	stp	x19, x20, [sp, #16]
  24:	add	x20, x2, #0x38
  28:	mul	x21, x21, x1
  2c:	add	x19, x0, #0x38
  30:	str	x23, [sp, #48]
  34:	mov	x23, x21
  38:	cmp	x23, #0x0
  3c:	b.le	bc <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm3mca10WriteStateEPS5_EET0_T_SA_S9_+0xbc>
  40:	ldur	x0, [x19, #-56]
  44:	stur	x0, [x20, #-56]
  48:	ldur	w0, [x19, #-48]
  4c:	mov	x1, x19
  50:	stur	w0, [x20, #-48]
  54:	sub	x23, x23, #0x1
  58:	ldurh	w0, [x19, #-44]
  5c:	add	x19, x19, #0x88
  60:	sturh	w0, [x20, #-44]
  64:	ldur	w0, [x19, #-176]
  68:	stur	w0, [x20, #-40]
  6c:	ldurb	w0, [x19, #-172]
  70:	sturb	w0, [x20, #-36]
  74:	ldurb	w0, [x19, #-171]
  78:	sturb	w0, [x20, #-35]
  7c:	ldurb	w0, [x19, #-170]
  80:	sturb	w0, [x20, #-34]
  84:	ldur	x0, [x19, #-168]
  88:	stur	x0, [x20, #-32]
  8c:	ldur	x0, [x19, #-160]
  90:	stur	x0, [x20, #-24]
  94:	ldur	w0, [x19, #-152]
  98:	stur	w0, [x20, #-16]
  9c:	ldur	x0, [x19, #-148]
  a0:	stur	x0, [x20, #-12]
  a4:	ldur	w0, [x19, #-140]
  a8:	stur	w0, [x20, #-4]
  ac:	mov	x0, x20
  b0:	add	x20, x20, #0x88
  b4:	bl	0 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm3mca10WriteStateEPS5_EET0_T_SA_S9_>
  b8:	b	38 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN4llvm3mca10WriteStateEPS5_EET0_T_SA_S9_+0x38>
  bc:	cmp	x21, #0x0
  c0:	mov	x0, #0x88                  	// #136
  c4:	csel	x21, x21, xzr, ge  // ge = tcont
  c8:	ldp	x19, x20, [sp, #16]
  cc:	madd	x0, x21, x0, x22
  d0:	ldp	x21, x22, [sp, #32]
  d4:	ldr	x23, [sp, #48]
  d8:	ldp	x29, x30, [sp], #64
  dc:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x1, x0
  24:	str	x25, [sp, #64]
  28:	str	x1, [sp, #88]
  2c:	b.ls	40 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x40>  // b.plast
  30:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  34:	mov	w1, #0x1                   	// #1
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  40:	ldr	w0, [x21, #12]
  44:	add	x0, x0, #0x2
  48:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  4c:	add	x1, sp, #0x58
  50:	cmp	x19, x0
  54:	str	x0, [sp, #96]
  58:	add	x0, sp, #0x60
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #104]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	b.ls	78 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x78>  // b.plast
  74:	add	x0, sp, #0x68
  78:	ldr	x24, [x0]
  7c:	mov	x20, #0x88                  	// #136
  80:	mov	w25, #0x4                   	// #4
  84:	mul	x0, x24, x20
  88:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  8c:	ldr	w23, [x21, #8]
  90:	ldr	x19, [x21]
  94:	mov	x22, x0
  98:	madd	x23, x23, x20, x19
  9c:	mov	x20, x0
  a0:	cmp	x23, x19
  a4:	b.eq	134 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x134>  // b.none
  a8:	ldr	x0, [x19]
  ac:	str	x0, [x20]
  b0:	ldr	w0, [x19, #8]
  b4:	str	w0, [x20, #8]
  b8:	ldrh	w0, [x19, #12]
  bc:	strh	w0, [x20, #12]
  c0:	ldr	w0, [x19, #16]
  c4:	str	w0, [x20, #16]
  c8:	ldrb	w0, [x19, #20]
  cc:	strb	w0, [x20, #20]
  d0:	ldrb	w0, [x19, #21]
  d4:	strb	w0, [x20, #21]
  d8:	ldrb	w0, [x19, #22]
  dc:	strb	w0, [x20, #22]
  e0:	ldr	x0, [x19, #24]
  e4:	str	x0, [x20, #24]
  e8:	ldr	x0, [x19, #32]
  ec:	str	x0, [x20, #32]
  f0:	ldr	w0, [x19, #40]
  f4:	str	w0, [x20, #40]
  f8:	ldur	x0, [x19, #44]
  fc:	stur	x0, [x20, #44]
 100:	ldr	w0, [x19, #52]
 104:	str	w0, [x20, #52]
 108:	add	x0, x20, #0x48
 10c:	stp	wzr, w25, [x20, #64]
 110:	str	x0, [x20, #56]
 114:	ldr	w0, [x19, #64]
 118:	cbz	w0, 128 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x128>
 11c:	add	x1, x19, #0x38
 120:	add	x0, x20, #0x38
 124:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 128:	add	x20, x20, #0x88
 12c:	add	x19, x19, #0x88
 130:	b	a0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xa0>
 134:	ldr	w2, [x21, #8]
 138:	mov	w1, #0x88                  	// #136
 13c:	ldr	x0, [x21]
 140:	umaddl	x1, w2, w1, x0
 144:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 148:	mov	x1, x21
 14c:	ldr	x0, [x1], #16
 150:	cmp	x0, x1
 154:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>  // b.none
 158:	bl	0 <free>
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldr	x25, [sp, #64]
 164:	str	x22, [x21]
 168:	str	w24, [x21, #12]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	ldp	x29, x30, [sp], #112
 178:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	b.eq	7c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x7c>  // b.none
  20:	mov	x22, x1
  24:	ldr	w0, [x0, #8]
  28:	mov	w1, #0x88                  	// #136
  2c:	mov	w19, w0
  30:	ldr	w3, [x22, #8]
  34:	ldr	x2, [x21]
  38:	mov	w23, w3
  3c:	cmp	w3, w0
  40:	b.hi	94 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x94>  // b.pmore
  44:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x58>
  48:	ldr	x0, [x22]
  4c:	umaddl	x1, w3, w1, x0
  50:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  54:	mov	x2, x0
  58:	ldr	w3, [x21, #8]
  5c:	mov	w1, #0x88                  	// #136
  60:	ldr	x0, [x21]
  64:	umaddl	x1, w3, w1, x0
  68:	mov	x0, x2
  6c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  70:	mov	x1, x23
  74:	mov	x0, x21
  78:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  7c:	mov	x0, x21
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x21, x22, [sp, #32]
  88:	ldp	x23, x24, [sp, #48]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	umull	x1, w0, w1
  98:	ldr	w0, [x21, #12]
  9c:	cmp	w3, w0
  a0:	b.ls	184 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x184>  // b.plast
  a4:	add	x1, x2, x1
  a8:	mov	x0, x2
  ac:	mov	x19, #0x0                   	// #0
  b0:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  b4:	mov	x0, x21
  b8:	mov	x1, #0x0                   	// #0
  bc:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  c0:	mov	x1, x23
  c4:	mov	x0, x21
  c8:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  cc:	mov	x2, #0x88                  	// #136
  d0:	mov	w24, #0x4                   	// #4
  d4:	ldr	x1, [x22]
  d8:	mul	x0, x19, x2
  dc:	ldr	w22, [x22, #8]
  e0:	ldr	x19, [x21]
  e4:	add	x20, x1, x0
  e8:	madd	x22, x22, x2, x1
  ec:	add	x19, x19, x0
  f0:	cmp	x22, x20
  f4:	b.eq	70 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x70>  // b.none
  f8:	ldr	x0, [x20]
  fc:	str	x0, [x19]
 100:	ldr	w0, [x20, #8]
 104:	str	w0, [x19, #8]
 108:	ldrh	w0, [x20, #12]
 10c:	strh	w0, [x19, #12]
 110:	ldr	w0, [x20, #16]
 114:	str	w0, [x19, #16]
 118:	ldrb	w0, [x20, #20]
 11c:	strb	w0, [x19, #20]
 120:	ldrb	w0, [x20, #21]
 124:	strb	w0, [x19, #21]
 128:	ldrb	w0, [x20, #22]
 12c:	strb	w0, [x19, #22]
 130:	ldr	x0, [x20, #24]
 134:	str	x0, [x19, #24]
 138:	ldr	x0, [x20, #32]
 13c:	str	x0, [x19, #32]
 140:	ldr	w0, [x20, #40]
 144:	str	w0, [x19, #40]
 148:	ldur	x0, [x20, #44]
 14c:	stur	x0, [x19, #44]
 150:	ldr	w0, [x20, #52]
 154:	str	w0, [x19, #52]
 158:	add	x0, x19, #0x48
 15c:	stp	wzr, w24, [x19, #64]
 160:	str	x0, [x19, #56]
 164:	ldr	w0, [x20, #64]
 168:	cbz	w0, 178 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x178>
 16c:	add	x1, x20, #0x38
 170:	add	x0, x19, #0x38
 174:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 178:	add	x20, x20, #0x88
 17c:	add	x19, x19, #0x88
 180:	b	f0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xf0>
 184:	cbz	x19, cc <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xcc>
 188:	ldr	x0, [x22]
 18c:	add	x1, x0, x1
 190:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 194:	b	cc <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xcc>

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
   0:	cmp	w0, #0x4
   4:	b.hi	18 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x18>  // b.pmore
   8:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
   c:	add	x1, x1, #0x0
  10:	ldrb	w0, [x1, w0, uxtw]
  14:	ret
  18:	stp	x29, x30, [sp, #-16]!
  1c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  20:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  24:	mov	x29, sp
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x28                  	// #40
  34:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000038 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
  38:	stp	x29, x30, [sp, #-80]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x19, x0
  48:	mov	x20, x1
  4c:	ldr	x0, [x0, #64]
  50:	str	x21, [sp, #32]
  54:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
  58:	cbz	w0, bc <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x84>
  5c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  60:	add	x21, sp, #0x40
  64:	add	x19, x19, #0x18
  68:	str	w0, [sp, #64]
  6c:	str	x20, [sp, #72]
  70:	add	x20, sp, #0x38
  74:	ldr	x0, [x19, #16]
  78:	str	x0, [sp, #56]
  7c:	ldr	x0, [sp, #56]
  80:	cmp	x19, x0
  84:	b.eq	a8 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x70>  // b.none
  88:	ldr	x0, [x0, #32]
  8c:	ldr	x1, [x0]
  90:	ldr	x2, [x1, #24]
  94:	mov	x1, x21
  98:	blr	x2
  9c:	mov	x0, x20
  a0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  a4:	b	7c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x44>
  a8:	mov	w0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldr	x21, [sp, #32]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	mov	w0, #0x1                   	// #1
  c0:	b	ac <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x74>

00000000000000c4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
  c4:	stp	x29, x30, [sp, #-64]!
  c8:	mov	x29, sp
  cc:	str	x21, [sp, #32]
  d0:	mov	x21, x0
  d4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
  d8:	stp	x19, x20, [sp, #16]
  dc:	mov	x19, x1
  e0:	ldr	x0, [x0]
  e4:	ldrb	w0, [x0]
  e8:	cbz	w0, 12c <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x68>
  ec:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  f8:	tst	w0, #0xff
  fc:	b.eq	12c <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x68>  // b.none
 100:	bl	0 <_ZN4llvm4dbgsEv>
 104:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 108:	add	x1, x1, #0x0
 10c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 110:	mov	x1, x0
 114:	mov	x20, x0
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 120:	mov	x0, x20
 124:	mov	w1, #0xa                   	// #10
 128:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 12c:	mov	w0, #0x5                   	// #5
 130:	add	x1, sp, #0x30
 134:	str	w0, [sp, #48]
 138:	mov	x0, x21
 13c:	str	x19, [sp, #56]
 140:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 144:	ldp	x19, x20, [sp, #16]
 148:	ldr	x21, [sp, #32]
 14c:	ldp	x29, x30, [sp], #64
 150:	ret

0000000000000154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
 154:	stp	x29, x30, [sp, #-64]!
 158:	mov	x29, sp
 15c:	str	x21, [sp, #32]
 160:	mov	x21, x0
 164:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 168:	stp	x19, x20, [sp, #16]
 16c:	mov	x19, x1
 170:	ldr	x0, [x0]
 174:	ldrb	w0, [x0]
 178:	cbz	w0, 1bc <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x68>
 17c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 180:	add	x0, x0, #0x0
 184:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 188:	tst	w0, #0xff
 18c:	b.eq	1bc <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x68>  // b.none
 190:	bl	0 <_ZN4llvm4dbgsEv>
 194:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 198:	add	x1, x1, #0x0
 19c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 1a0:	mov	x1, x0
 1a4:	mov	x20, x0
 1a8:	mov	x0, x19
 1ac:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 1b0:	mov	x0, x20
 1b4:	mov	w1, #0xa                   	// #10
 1b8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 1bc:	mov	w0, #0x2                   	// #2
 1c0:	add	x1, sp, #0x30
 1c4:	str	w0, [sp, #48]
 1c8:	mov	x0, x21
 1cc:	str	x19, [sp, #56]
 1d0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldr	x21, [sp, #32]
 1dc:	ldp	x29, x30, [sp], #64
 1e0:	ret

00000000000001e4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
 1e4:	stp	x29, x30, [sp, #-64]!
 1e8:	mov	x29, sp
 1ec:	str	x21, [sp, #32]
 1f0:	mov	x21, x0
 1f4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 1f8:	stp	x19, x20, [sp, #16]
 1fc:	mov	x19, x1
 200:	ldr	x0, [x0]
 204:	ldrb	w0, [x0]
 208:	cbz	w0, 24c <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x68>
 20c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 210:	add	x0, x0, #0x0
 214:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 218:	tst	w0, #0xff
 21c:	b.eq	24c <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x68>  // b.none
 220:	bl	0 <_ZN4llvm4dbgsEv>
 224:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 228:	add	x1, x1, #0x0
 22c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 230:	mov	x1, x0
 234:	mov	x20, x0
 238:	mov	x0, x19
 23c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 240:	mov	x0, x20
 244:	mov	w1, #0xa                   	// #10
 248:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 24c:	mov	w0, #0x3                   	// #3
 250:	add	x1, sp, #0x30
 254:	str	w0, [sp, #48]
 258:	mov	x0, x21
 25c:	str	x19, [sp, #56]
 260:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 264:	ldp	x19, x20, [sp, #16]
 268:	ldr	x21, [sp, #32]
 26c:	ldp	x29, x30, [sp], #64
 270:	ret

0000000000000274 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
 274:	stp	x29, x30, [sp, #-112]!
 278:	mov	x29, sp
 27c:	stp	x21, x22, [sp, #32]
 280:	mov	x21, x0
 284:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 288:	stp	x19, x20, [sp, #16]
 28c:	mov	x22, x3
 290:	mov	x20, x2
 294:	ldr	x0, [x0]
 298:	stp	x23, x24, [sp, #48]
 29c:	mov	x24, #0x18                  	// #24
 2a0:	stp	x25, x26, [sp, #64]
 2a4:	mov	x23, x1
 2a8:	ldrb	w0, [x0]
 2ac:	madd	x24, x3, x24, x2
 2b0:	cbz	w0, 390 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x11c>
 2b4:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2b8:	add	x0, x0, #0x0
 2bc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 2c0:	tst	w0, #0xff
 2c4:	b.eq	390 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x11c>  // b.none
 2c8:	bl	0 <_ZN4llvm4dbgsEv>
 2cc:	adrp	x26, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2d0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2d4:	add	x1, x1, #0x0
 2d8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2dc:	mov	x19, x0
 2e0:	mov	x1, x0
 2e4:	mov	x0, x23
 2e8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2ec:	adrp	x25, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 2f0:	mov	x0, x19
 2f4:	add	x26, x26, #0x0
 2f8:	mov	x19, x20
 2fc:	add	x25, x25, #0x0
 300:	mov	w1, #0xa                   	// #10
 304:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 308:	cmp	x19, x24
 30c:	b.eq	390 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x11c>  // b.none
 310:	ldr	w0, [x19, #20]
 314:	cmp	w0, #0x1
 318:	b.eq	33c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xc8>  // b.none
 31c:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 320:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 324:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 328:	add	x3, x3, #0x0
 32c:	add	x1, x1, #0x0
 330:	add	x0, x0, #0x0
 334:	mov	w2, #0x102                 	// #258
 338:	bl	0 <__assert_fail>
 33c:	bl	0 <_ZN4llvm4dbgsEv>
 340:	add	x19, x19, #0x18
 344:	mov	x1, x26
 348:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 34c:	ldur	x1, [x19, #-24]
 350:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 354:	mov	w1, #0x2e                  	// #46
 358:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 35c:	ldur	x1, [x19, #-16]
 360:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 364:	mov	x1, x25
 368:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 36c:	bl	0 <_ZN4llvm4dbgsEv>
 370:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 374:	add	x1, x1, #0x0
 378:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 37c:	ldur	w1, [x19, #-8]
 380:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 384:	mov	w1, #0xa                   	// #10
 388:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 38c:	b	308 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x94>
 390:	mov	x19, x20
 394:	cmp	x19, x24
 398:	b.eq	3b8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x144>  // b.none
 39c:	ldr	x0, [x21, #64]
 3a0:	ldr	x1, [x19]
 3a4:	ldr	x0, [x0, #24]
 3a8:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
 3ac:	mov	w0, w0
 3b0:	str	x0, [x19], #24
 3b4:	b	394 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x120>
 3b8:	mov	w0, #0x4                   	// #4
 3bc:	add	x1, sp, #0x50
 3c0:	str	w0, [sp, #80]
 3c4:	mov	x0, x21
 3c8:	stp	x23, x20, [sp, #88]
 3cc:	str	x22, [sp, #104]
 3d0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 3d4:	ldp	x19, x20, [sp, #16]
 3d8:	ldp	x21, x22, [sp, #32]
 3dc:	ldp	x23, x24, [sp, #48]
 3e0:	ldp	x25, x26, [sp, #64]
 3e4:	ldp	x29, x30, [sp], #112
 3e8:	ret

00000000000003ec <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
 3ec:	stp	x29, x30, [sp, #-48]!
 3f0:	mov	x29, sp
 3f4:	ldr	x2, [x1, #8]
 3f8:	stp	x19, x20, [sp, #16]
 3fc:	ldrb	w3, [x2, #840]
 400:	str	x21, [sp, #32]
 404:	cbnz	w3, 428 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x3c>
 408:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 40c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 410:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 414:	add	x3, x3, #0x0
 418:	add	x1, x1, #0x0
 41c:	add	x0, x0, #0x0
 420:	mov	w2, #0xa3                  	// #163
 424:	bl	0 <__assert_fail>
 428:	ldr	w3, [x2, #784]
 42c:	cmp	w3, #0x3
 430:	b.eq	454 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x68>  // b.none
 434:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 438:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 43c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 440:	add	x3, x3, #0x0
 444:	add	x1, x1, #0x0
 448:	add	x0, x0, #0x0
 44c:	mov	w2, #0xa4                  	// #164
 450:	b	424 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x38>
 454:	ldr	x2, [x2]
 458:	ldrb	w3, [x2, #324]
 45c:	cbnz	w3, 468 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x7c>
 460:	ldrb	w2, [x2, #325]
 464:	cbz	w2, 488 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x9c>
 468:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 46c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 470:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 474:	add	x3, x3, #0x0
 478:	add	x1, x1, #0x0
 47c:	add	x0, x0, #0x0
 480:	mov	w2, #0xa9                  	// #169
 484:	b	424 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x38>
 488:	mov	x21, x8
 48c:	mov	x19, x1
 490:	mov	x20, x0
 494:	bl	154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 498:	mov	x1, x19
 49c:	mov	x0, x20
 4a0:	bl	1e4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 4a4:	mov	x2, #0x0                   	// #0
 4a8:	mov	x3, #0x0                   	// #0
 4ac:	mov	x1, x19
 4b0:	mov	x0, x20
 4b4:	bl	274 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 4b8:	ldr	x0, [x19, #8]
 4bc:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
 4c0:	mov	x1, x19
 4c4:	mov	x0, x20
 4c8:	bl	c4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 4cc:	mov	x8, x21
 4d0:	mov	x1, x19
 4d4:	mov	x0, x20
 4d8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 4dc:	mov	x0, x21
 4e0:	ldp	x19, x20, [sp, #16]
 4e4:	ldr	x21, [sp, #32]
 4e8:	ldp	x29, x30, [sp], #48
 4ec:	ret

00000000000004f0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
 4f0:	stp	x29, x30, [sp, #-64]!
 4f4:	mov	x29, sp
 4f8:	stp	x19, x20, [sp, #16]
 4fc:	mov	x19, x0
 500:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 504:	mov	x20, x1
 508:	ldr	x0, [x0]
 50c:	ldrb	w0, [x0]
 510:	str	x21, [sp, #32]
 514:	cbz	w0, 560 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x70>
 518:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 51c:	add	x0, x0, #0x0
 520:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 524:	tst	w0, #0xff
 528:	b.eq	560 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x70>  // b.none
 52c:	bl	0 <_ZN4llvm4dbgsEv>
 530:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 534:	add	x1, x1, #0x0
 538:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 53c:	ldr	x1, [x20]
 540:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 544:	mov	w1, #0x2e                  	// #46
 548:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 54c:	ldr	x1, [x20, #8]
 550:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 554:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 558:	add	x1, x1, #0x0
 55c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 560:	add	x21, sp, #0x38
 564:	add	x19, x19, #0x18
 568:	ldr	x0, [x19, #16]
 56c:	str	x0, [sp, #56]
 570:	ldr	x0, [sp, #56]
 574:	cmp	x19, x0
 578:	b.eq	59c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xac>  // b.none
 57c:	ldr	x0, [x0, #32]
 580:	ldr	x1, [x0]
 584:	ldr	x2, [x1, #40]
 588:	mov	x1, x20
 58c:	blr	x2
 590:	mov	x0, x21
 594:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 598:	b	570 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x80>
 59c:	ldp	x19, x20, [sp, #16]
 5a0:	ldr	x21, [sp, #32]
 5a4:	ldp	x29, x30, [sp], #64
 5a8:	ret

00000000000005ac <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
 5ac:	stp	x29, x30, [sp, #-144]!
 5b0:	mov	x29, sp
 5b4:	stp	x23, x24, [sp, #48]
 5b8:	mov	x23, x0
 5bc:	ldr	x0, [x1, #8]
 5c0:	stp	x19, x20, [sp, #16]
 5c4:	stp	x21, x22, [sp, #32]
 5c8:	ldr	x0, [x0]
 5cc:	stp	x25, x26, [sp, #64]
 5d0:	stp	x27, x28, [sp, #80]
 5d4:	ldr	x20, [x0, #288]
 5d8:	cbz	x20, 75c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b0>
 5dc:	fmov	d0, x20
 5e0:	and	w25, w2, #0xff
 5e4:	add	x19, sp, #0x70
 5e8:	mov	x22, x1
 5ec:	cnt	v0.8b, v0.8b
 5f0:	add	x1, x19, #0x10
 5f4:	mov	x0, #0x400000000           	// #17179869184
 5f8:	stp	x1, x0, [sp, #112]
 5fc:	addv	b0, v0.8b
 600:	umov	w2, v0.b[0]
 604:	sxtw	x21, w2
 608:	cmp	w2, #0x4
 60c:	b.le	620 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x74>
 610:	mov	x2, x21
 614:	mov	x0, x19
 618:	mov	x3, #0x4                   	// #4
 61c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 620:	ldr	w0, [sp, #124]
 624:	cmp	x21, x0
 628:	b.ls	64c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xa0>  // b.plast
 62c:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 630:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 634:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 638:	add	x3, x3, #0x0
 63c:	add	x1, x1, #0x0
 640:	add	x0, x0, #0x0
 644:	mov	w2, #0x43                  	// #67
 648:	bl	0 <__assert_fail>
 64c:	ldr	x0, [sp, #112]
 650:	str	w21, [sp, #120]
 654:	add	x21, x0, x21, lsl #2
 658:	cmp	x21, x0
 65c:	b.eq	668 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xbc>  // b.none
 660:	str	wzr, [x0], #4
 664:	b	658 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xac>
 668:	ldr	w28, [sp, #120]
 66c:	mov	x21, #0x0                   	// #0
 670:	cmp	w28, w21
 674:	b.ls	6d4 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x128>  // b.plast
 678:	ldr	w1, [sp, #120]
 67c:	neg	x24, x20
 680:	and	x24, x24, x20
 684:	cmp	x21, x1
 688:	ldr	x0, [x23, #64]
 68c:	b.cc	6b0 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x104>  // b.lo, b.ul, b.last
 690:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 694:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 698:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 69c:	add	x3, x3, #0x0
 6a0:	add	x1, x1, #0x0
 6a4:	add	x0, x0, #0x0
 6a8:	mov	w2, #0x95                  	// #149
 6ac:	b	648 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x9c>
 6b0:	ldr	x0, [x0, #24]
 6b4:	lsl	x26, x21, #2
 6b8:	ldr	x27, [sp, #112]
 6bc:	mov	x1, x24
 6c0:	eor	x20, x20, x24
 6c4:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
 6c8:	add	x21, x21, #0x1
 6cc:	str	w0, [x27, x26]
 6d0:	b	670 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xc4>
 6d4:	ldr	x0, [x23, #40]
 6d8:	str	x0, [sp, #104]
 6dc:	add	x20, x23, #0x18
 6e0:	add	x21, sp, #0x68
 6e4:	cbz	w25, 718 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x16c>
 6e8:	ldp	x0, x2, [sp, #104]
 6ec:	cmp	x0, x20
 6f0:	b.eq	748 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x19c>  // b.none
 6f4:	ldr	x0, [x0, #32]
 6f8:	ldr	w3, [sp, #120]
 6fc:	ldr	x1, [x0]
 700:	ldr	x4, [x1, #48]
 704:	mov	x1, x22
 708:	blr	x4
 70c:	mov	x0, x21
 710:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 714:	b	6e8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x13c>
 718:	ldp	x0, x2, [sp, #104]
 71c:	cmp	x0, x20
 720:	b.eq	748 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x19c>  // b.none
 724:	ldr	x0, [x0, #32]
 728:	ldr	w3, [sp, #120]
 72c:	ldr	x1, [x0]
 730:	ldr	x4, [x1, #56]
 734:	mov	x1, x22
 738:	blr	x4
 73c:	mov	x0, x21
 740:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 744:	b	718 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x16c>
 748:	add	x19, x19, #0x10
 74c:	cmp	x2, x19
 750:	b.eq	75c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b0>  // b.none
 754:	mov	x0, x2
 758:	bl	0 <free>
 75c:	ldp	x19, x20, [sp, #16]
 760:	ldp	x21, x22, [sp, #32]
 764:	ldp	x23, x24, [sp, #48]
 768:	ldp	x25, x26, [sp, #64]
 76c:	ldp	x27, x28, [sp, #80]
 770:	ldp	x29, x30, [sp], #144
 774:	ret

0000000000000778 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
 778:	sub	sp, sp, #0x210
 77c:	stp	x29, x30, [sp]
 780:	mov	x29, sp
 784:	stp	x19, x20, [sp, #16]
 788:	mov	x19, x0
 78c:	ldrb	w0, [x0, #80]
 790:	stp	x21, x22, [sp, #32]
 794:	add	x20, sp, #0x180
 798:	mov	x21, x8
 79c:	stp	x23, x24, [sp, #48]
 7a0:	cbnz	w0, 7dc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x64>
 7a4:	mov	x1, x20
 7a8:	mov	x0, #0x1                   	// #1
 7ac:	str	x0, [sp, #384]
 7b0:	mov	x0, x21
 7b4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 7b8:	mov	x0, x20
 7bc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 7c0:	mov	x0, x21
 7c4:	ldp	x29, x30, [sp]
 7c8:	ldp	x19, x20, [sp, #16]
 7cc:	ldp	x21, x22, [sp, #32]
 7d0:	ldp	x23, x24, [sp, #48]
 7d4:	add	sp, sp, #0x210
 7d8:	ret
 7dc:	ldr	x0, [x19, #64]
 7e0:	ldrb	w1, [x0, #140]
 7e4:	cbnz	w1, 7f4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x7c>
 7e8:	ldp	w2, w1, [x19, #72]
 7ec:	cmp	w2, w1
 7f0:	b.ls	7a4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2c>  // b.plast
 7f4:	add	x23, sp, #0x60
 7f8:	add	x1, x23, #0x10
 7fc:	str	x1, [sp, #96]
 800:	mov	x1, #0x800000000           	// #34359738368
 804:	str	x1, [sp, #104]
 808:	mov	x1, x23
 80c:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
 810:	mov	x22, x0
 814:	cbz	x0, 898 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x120>
 818:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 81c:	ldr	x0, [x0]
 820:	ldrb	w0, [x0]
 824:	cbz	w0, 874 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xfc>
 828:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 82c:	add	x0, x0, #0x0
 830:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 834:	tst	w0, #0xff
 838:	b.eq	874 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xfc>  // b.none
 83c:	bl	0 <_ZN4llvm4dbgsEv>
 840:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 844:	add	x1, x1, #0x0
 848:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 84c:	stp	x22, xzr, [sp, #384]
 850:	mov	w1, #0x10                  	// #16
 854:	str	w1, [sp, #400]
 858:	mov	w1, #0x1                   	// #1
 85c:	strh	w1, [sp, #404]
 860:	strb	w1, [sp, #406]
 864:	mov	x1, x20
 868:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 86c:	mov	w1, #0xa                   	// #10
 870:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 874:	mov	w1, #0x1                   	// #1
 878:	ldr	w0, [sp, #104]
 87c:	str	w1, [sp, #384]
 880:	ldr	x1, [sp, #96]
 884:	str	x1, [sp, #392]
 888:	mov	x1, x20
 88c:	stp	x0, x22, [sp, #400]
 890:	mov	x0, x19
 894:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 898:	add	x24, sp, #0xf0
 89c:	add	x1, x20, #0x10
 8a0:	add	x0, x24, #0x10
 8a4:	str	x0, [sp, #240]
 8a8:	mov	x0, #0x800000000           	// #34359738368
 8ac:	str	x0, [sp, #248]
 8b0:	str	x0, [sp, #392]
 8b4:	mov	x2, x20
 8b8:	ldr	x0, [x19, #64]
 8bc:	str	x1, [sp, #384]
 8c0:	mov	x1, x24
 8c4:	add	x22, sp, #0x40
 8c8:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
 8cc:	ldr	w0, [sp, #248]
 8d0:	cbz	w0, 92c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1b4>
 8d4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 8d8:	ldr	x0, [x0]
 8dc:	ldrb	w0, [x0]
 8e0:	cbz	w0, 908 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x190>
 8e4:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 8e8:	add	x0, x0, #0x0
 8ec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 8f0:	tst	w0, #0xff
 8f4:	b.eq	908 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x190>  // b.none
 8f8:	bl	0 <_ZN4llvm4dbgsEv>
 8fc:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 900:	add	x1, x1, #0x0
 904:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 908:	mov	w1, #0x2                   	// #2
 90c:	ldr	w0, [sp, #248]
 910:	str	w1, [sp, #64]
 914:	ldr	x1, [sp, #240]
 918:	str	x1, [sp, #72]
 91c:	mov	x1, x22
 920:	stp	x0, xzr, [sp, #80]
 924:	mov	x0, x19
 928:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 92c:	ldr	w0, [sp, #392]
 930:	cbz	w0, 98c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x214>
 934:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
 938:	ldr	x0, [x0]
 93c:	ldrb	w0, [x0]
 940:	cbz	w0, 968 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1f0>
 944:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 948:	add	x0, x0, #0x0
 94c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 950:	tst	w0, #0xff
 954:	b.eq	968 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1f0>  // b.none
 958:	bl	0 <_ZN4llvm4dbgsEv>
 95c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 960:	add	x1, x1, #0x0
 964:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 968:	mov	w1, #0x3                   	// #3
 96c:	ldr	w0, [sp, #392]
 970:	str	w1, [sp, #64]
 974:	ldr	x1, [sp, #384]
 978:	str	x1, [sp, #72]
 97c:	mov	x1, x22
 980:	stp	x0, xzr, [sp, #80]
 984:	mov	x0, x19
 988:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 98c:	mov	x1, x22
 990:	mov	x0, #0x1                   	// #1
 994:	str	x0, [sp, #64]
 998:	mov	x0, x21
 99c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 9a0:	mov	x0, x22
 9a4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 9a8:	mov	x0, x20
 9ac:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 9b0:	mov	x0, x24
 9b4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 9b8:	mov	x0, x23
 9bc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 9c0:	b	7c0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x48>

00000000000009c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
 9c4:	stp	x29, x30, [sp, #-368]!
 9c8:	mov	x29, sp
 9cc:	stp	x19, x20, [sp, #16]
 9d0:	mov	x19, x0
 9d4:	mov	x20, x1
 9d8:	stp	x21, x22, [sp, #32]
 9dc:	add	x22, sp, #0x100
 9e0:	add	x0, x22, #0x10
 9e4:	stp	x23, x24, [sp, #48]
 9e8:	add	x23, sp, #0x60
 9ec:	add	x2, x23, #0x10
 9f0:	add	x24, sp, #0xb0
 9f4:	str	x0, [sp, #256]
 9f8:	mov	x0, #0x400000000           	// #17179869184
 9fc:	str	x2, [sp, #96]
 a00:	add	x2, x24, #0x10
 a04:	str	x0, [sp, #104]
 a08:	stp	x2, x0, [sp, #176]
 a0c:	mov	x21, x8
 a10:	mov	x4, x24
 a14:	str	x0, [sp, #264]
 a18:	mov	x3, x23
 a1c:	ldr	x0, [x19, #64]
 a20:	mov	x2, x22
 a24:	str	x25, [sp, #64]
 a28:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
 a2c:	ldr	x25, [x20, #8]
 a30:	mov	w2, #0x0                   	// #0
 a34:	ldr	w0, [x19, #76]
 a38:	ldr	x1, [x25]
 a3c:	ldr	w1, [x1, #316]
 a40:	add	w0, w0, w1
 a44:	str	w0, [x19, #76]
 a48:	mov	x1, x20
 a4c:	mov	x0, x19
 a50:	bl	5ac <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
 a54:	ldr	w3, [sp, #264]
 a58:	mov	x0, x19
 a5c:	ldr	x2, [sp, #256]
 a60:	mov	x1, x20
 a64:	bl	274 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
 a68:	ldr	w0, [x25, #784]
 a6c:	cmp	w0, #0x5
 a70:	b.ne	b00 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x13c>  // b.any
 a74:	mov	x1, x20
 a78:	mov	x0, x19
 a7c:	add	x25, sp, #0x58
 a80:	bl	c4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 a84:	mov	x8, x25
 a88:	mov	x1, x20
 a8c:	mov	x0, x19
 a90:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 a94:	mov	x0, x25
 a98:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 a9c:	tst	w0, #0xff
 aa0:	b.eq	af8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x134>  // b.none
 aa4:	mov	x1, x25
 aa8:	mov	x0, x21
 aac:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ab0:	mov	x0, x25
 ab4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ab8:	mov	x0, x24
 abc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ac0:	mov	x0, x23
 ac4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ac8:	ldr	x0, [sp, #256]
 acc:	add	x22, x22, #0x10
 ad0:	cmp	x0, x22
 ad4:	b.eq	adc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x118>  // b.none
 ad8:	bl	0 <free>
 adc:	mov	x0, x21
 ae0:	ldp	x19, x20, [sp, #16]
 ae4:	ldp	x21, x22, [sp, #32]
 ae8:	ldp	x23, x24, [sp, #48]
 aec:	ldr	x25, [sp, #64]
 af0:	ldp	x29, x30, [sp], #368
 af4:	ret
 af8:	mov	x0, x25
 afc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 b00:	ldr	x20, [sp, #96]
 b04:	ldr	w25, [sp, #104]
 b08:	add	x25, x20, x25, lsl #4
 b0c:	cmp	x20, x25
 b10:	b.eq	b28 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x164>  // b.none
 b14:	mov	x1, x20
 b18:	mov	x0, x19
 b1c:	add	x20, x20, #0x10
 b20:	bl	154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 b24:	b	b0c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x148>
 b28:	ldr	x20, [sp, #176]
 b2c:	ldr	w25, [sp, #184]
 b30:	add	x25, x20, x25, lsl #4
 b34:	cmp	x20, x25
 b38:	b.eq	b50 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x18c>  // b.none
 b3c:	mov	x1, x20
 b40:	mov	x0, x19
 b44:	add	x20, x20, #0x10
 b48:	bl	1e4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 b4c:	b	b34 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x170>
 b50:	add	x19, sp, #0x58
 b54:	mov	x0, #0x1                   	// #1
 b58:	mov	x1, x19
 b5c:	str	x0, [sp, #88]
 b60:	mov	x0, x21
 b64:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 b68:	mov	x0, x19
 b6c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 b70:	b	ab8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xf4>

0000000000000b74 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
 b74:	stp	x29, x30, [sp, #-80]!
 b78:	mov	x29, sp
 b7c:	stp	x21, x22, [sp, #32]
 b80:	mov	x21, x0
 b84:	add	x22, sp, #0x40
 b88:	ldr	x0, [x0, #64]
 b8c:	stp	x19, x20, [sp, #16]
 b90:	add	x19, sp, #0x38
 b94:	mov	x20, x8
 b98:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
 b9c:	stp	x0, x1, [sp, #64]
 ba0:	ldr	x0, [sp, #72]
 ba4:	cbz	x0, c0c <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x98>
 ba8:	mov	x8, x19
 bac:	mov	x1, x22
 bb0:	mov	x0, x21
 bb4:	bl	9c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
 bb8:	mov	x0, x19
 bbc:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bc0:	tst	w0, #0xff
 bc4:	b.eq	bf0 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x7c>  // b.none
 bc8:	mov	x1, x19
 bcc:	mov	x0, x20
 bd0:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bd4:	mov	x0, x19
 bd8:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bdc:	mov	x0, x20
 be0:	ldp	x19, x20, [sp, #16]
 be4:	ldp	x21, x22, [sp, #32]
 be8:	ldp	x29, x30, [sp], #80
 bec:	ret
 bf0:	mov	x0, x19
 bf4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 bf8:	ldr	x0, [x21, #64]
 bfc:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
 c00:	str	w0, [sp, #64]
 c04:	str	x1, [sp, #72]
 c08:	b	ba0 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x2c>
 c0c:	mov	x1, x19
 c10:	mov	x0, #0x1                   	// #1
 c14:	str	x0, [sp, #56]
 c18:	mov	x0, x20
 c1c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 c20:	mov	x0, x19
 c24:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 c28:	b	bdc <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x68>

0000000000000c2c <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
 c2c:	stp	x29, x30, [sp, #-496]!
 c30:	mov	x29, sp
 c34:	stp	x21, x22, [sp, #32]
 c38:	add	x22, sp, #0x160
 c3c:	mov	x21, x8
 c40:	stp	x19, x20, [sp, #16]
 c44:	mov	x19, x0
 c48:	add	x0, x22, #0x10
 c4c:	stp	x23, x24, [sp, #48]
 c50:	add	x23, sp, #0x70
 c54:	add	x24, sp, #0xc0
 c58:	str	x0, [sp, #352]
 c5c:	mov	x0, #0x800000000           	// #34359738368
 c60:	str	x0, [sp, #360]
 c64:	add	x0, x23, #0x10
 c68:	str	x0, [sp, #112]
 c6c:	mov	x0, #0x400000000           	// #17179869184
 c70:	str	x0, [sp, #120]
 c74:	add	x1, x24, #0x10
 c78:	str	x0, [sp, #200]
 c7c:	mov	x3, x24
 c80:	str	x0, [sp, #280]
 c84:	mov	x2, x23
 c88:	ldr	x0, [x19, #64]
 c8c:	stp	x25, x26, [sp, #64]
 c90:	add	x25, sp, #0x110
 c94:	str	x1, [sp, #192]
 c98:	add	x1, x25, #0x10
 c9c:	mov	x4, x25
 ca0:	str	x27, [sp, #80]
 ca4:	str	x1, [sp, #272]
 ca8:	mov	x1, x22
 cac:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
 cb0:	ldr	w26, [sp, #360]
 cb4:	ldr	x20, [sp, #352]
 cb8:	str	xzr, [x19, #72]
 cbc:	add	x26, x20, x26, lsl #4
 cc0:	cmp	x20, x26
 cc4:	b.eq	cdc <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xb0>  // b.none
 cc8:	mov	x1, x20
 ccc:	mov	x0, x19
 cd0:	add	x20, x20, #0x10
 cd4:	bl	4f0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
 cd8:	b	cc0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x94>
 cdc:	ldr	x20, [sp, #112]
 ce0:	add	x26, sp, #0x68
 ce4:	ldr	w27, [sp, #120]
 ce8:	add	x27, x20, x27, lsl #4
 cec:	cmp	x20, x27
 cf0:	b.eq	d90 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x164>  // b.none
 cf4:	mov	x1, x20
 cf8:	mov	x0, x19
 cfc:	bl	c4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
 d00:	mov	x1, x20
 d04:	mov	x8, x26
 d08:	mov	x0, x19
 d0c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d10:	mov	x0, x26
 d14:	add	x20, x20, #0x10
 d18:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d1c:	tst	w0, #0xff
 d20:	b.eq	d84 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x158>  // b.none
 d24:	mov	x1, x26
 d28:	mov	x0, x21
 d2c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d30:	mov	x0, x26
 d34:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d38:	mov	x0, x25
 d3c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d40:	mov	x0, x24
 d44:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d48:	mov	x0, x23
 d4c:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d50:	ldr	x0, [sp, #352]
 d54:	add	x22, x22, #0x10
 d58:	cmp	x0, x22
 d5c:	b.eq	d64 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x138>  // b.none
 d60:	bl	0 <free>
 d64:	mov	x0, x21
 d68:	ldp	x19, x20, [sp, #16]
 d6c:	ldp	x21, x22, [sp, #32]
 d70:	ldp	x23, x24, [sp, #48]
 d74:	ldp	x25, x26, [sp, #64]
 d78:	ldr	x27, [sp, #80]
 d7c:	ldp	x29, x30, [sp], #496
 d80:	ret
 d84:	mov	x0, x26
 d88:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 d8c:	b	cec <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc0>
 d90:	ldr	x20, [sp, #192]
 d94:	ldr	w26, [sp, #200]
 d98:	add	x26, x20, x26, lsl #4
 d9c:	cmp	x20, x26
 da0:	b.eq	db8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x18c>  // b.none
 da4:	mov	x1, x20
 da8:	mov	x0, x19
 dac:	add	x20, x20, #0x10
 db0:	bl	154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 db4:	b	d9c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x170>
 db8:	ldr	x20, [sp, #272]
 dbc:	ldr	w26, [sp, #280]
 dc0:	add	x26, x20, x26, lsl #4
 dc4:	cmp	x20, x26
 dc8:	b.eq	de0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1b4>  // b.none
 dcc:	mov	x1, x20
 dd0:	mov	x0, x19
 dd4:	add	x20, x20, #0x10
 dd8:	bl	1e4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 ddc:	b	dc4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x198>
 de0:	mov	x8, x21
 de4:	mov	x0, x19
 de8:	bl	b74 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>
 dec:	b	d38 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x10c>

0000000000000df0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
 df0:	stp	x29, x30, [sp, #-80]!
 df4:	mov	x29, sp
 df8:	stp	x19, x20, [sp, #16]
 dfc:	mov	x19, x0
 e00:	mov	x20, x1
 e04:	stp	x21, x22, [sp, #32]
 e08:	mov	x21, x8
 e0c:	str	x23, [sp, #48]
 e10:	bl	38 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>
 e14:	tst	w0, #0xff
 e18:	b.ne	e3c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x4c>  // b.any
 e1c:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e20:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e24:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e28:	add	x3, x3, #0x0
 e2c:	add	x1, x1, #0x0
 e30:	add	x0, x0, #0x0
 e34:	mov	w2, #0xbb                  	// #187
 e38:	bl	0 <__assert_fail>
 e3c:	ldr	x0, [x19, #64]
 e40:	mov	x1, x20
 e44:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 e48:	ldr	x0, [x20, #8]
 e4c:	ldrb	w0, [x0, #840]
 e50:	cbz	w0, e7c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x8c>
 e54:	mov	x8, x21
 e58:	mov	x1, x20
 e5c:	mov	x0, x19
 e60:	bl	3ec <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
 e64:	mov	x0, x21
 e68:	ldp	x19, x20, [sp, #16]
 e6c:	ldp	x21, x22, [sp, #32]
 e70:	ldr	x23, [sp, #48]
 e74:	ldp	x29, x30, [sp], #80
 e78:	ret
 e7c:	ldr	x0, [x19, #64]
 e80:	mov	x1, x20
 e84:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
 e88:	and	w22, w0, #0xff
 e8c:	ldr	x23, [x20, #8]
 e90:	mov	w2, #0x1                   	// #1
 e94:	ldr	w0, [x19, #72]
 e98:	ldr	x1, [x23]
 e9c:	ldr	w1, [x1, #316]
 ea0:	add	w0, w0, w1
 ea4:	str	w0, [x19, #72]
 ea8:	mov	x1, x20
 eac:	mov	x0, x19
 eb0:	bl	5ac <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
 eb4:	cbnz	w22, ef4 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x104>
 eb8:	ldr	w0, [x23, #784]
 ebc:	cmp	w0, #0x2
 ec0:	b.ne	ed0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xe0>  // b.any
 ec4:	mov	x1, x20
 ec8:	mov	x0, x19
 ecc:	bl	154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 ed0:	add	x19, sp, #0x48
 ed4:	mov	x0, #0x1                   	// #1
 ed8:	mov	x1, x19
 edc:	str	x0, [sp, #72]
 ee0:	mov	x0, x21
 ee4:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ee8:	mov	x0, x19
 eec:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
 ef0:	b	e64 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x74>
 ef4:	mov	x1, x20
 ef8:	mov	x0, x19
 efc:	bl	154 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
 f00:	mov	x1, x20
 f04:	mov	x0, x19
 f08:	bl	1e4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
 f0c:	ldr	x0, [x19, #64]
 f10:	mov	x1, x20
 f14:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
 f18:	tst	w0, #0xff
 f1c:	b.eq	ed0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xe0>  // b.none
 f20:	mov	x8, x21
 f24:	mov	x1, x20
 f28:	mov	x0, x19
 f2c:	bl	9c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
 f30:	b	e64 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x74>

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD2Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca12ExecuteStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x58                  	// #88
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNK4llvm3mca7InstRef5printERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca7InstRef5printERNS_11raw_ostreamE>:
   0:	mov	x2, x0
   4:	mov	x0, x1
   8:	ldr	w1, [x2]
   c:	b	0 <_ZN4llvm11raw_ostreamlsEm>

Disassembly of section .text._ZN4llvm5ErrorC2EOS0_:

0000000000000000 <_ZN4llvm5ErrorC1EOS0_>:
   0:	ldr	x2, [x1]
   4:	str	xzr, [x1]
   8:	orr	x2, x2, #0x1
   c:	str	x2, [x0]
  10:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5ErrorD1Ev+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5ErrorD1Ev+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorcvbEv:

0000000000000000 <_ZN4llvm5ErrorcvbEv>:
   0:	ldr	x1, [x0]
   4:	ands	x2, x1, #0xfffffffffffffffe
   8:	cset	x1, ne  // ne = any
   c:	orr	x1, x1, x2
  10:	str	x1, [x0]
  14:	tst	x1, #0xfffffffffffffffe
  18:	cset	w0, ne  // ne = any
  1c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x0, [x0, #8]
  14:	str	x21, [sp, #32]
  18:	cbz	x0, 38 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x38>
  1c:	ldr	x2, [x0]
  20:	mov	x19, x8
  24:	mov	x21, x1
  28:	ldr	x2, [x2, #16]
  2c:	blr	x2
  30:	tst	w0, #0xff
  34:	b.ne	58 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE+0x58>  // b.any
  38:	adrp	x3, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  3c:	adrp	x1, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  40:	adrp	x0, 0 <_ZN4llvm3mca5Stage18moveToTheNextStageERNS0_7InstRefE>
  44:	add	x3, x3, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x0, x0, #0x0
  50:	mov	w2, #0x47                  	// #71
  54:	bl	0 <__assert_fail>
  58:	ldr	x0, [x20, #8]
  5c:	mov	x8, x19
  60:	ldr	x1, [x0]
  64:	ldr	x2, [x1, #48]
  68:	mov	x1, x21
  6c:	blr	x2
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZSteqIjPN4llvm3mca11InstructionEEbRKSt4pairIT_T0_ES9_:

0000000000000000 <_ZSteqIjPN4llvm3mca11InstructionEEbRKSt4pairIT_T0_ES9_>:
   0:	ldr	w3, [x0]
   4:	ldr	w2, [x1]
   8:	cmp	w3, w2
   c:	b.ne	24 <_ZSteqIjPN4llvm3mca11InstructionEEbRKSt4pairIT_T0_ES9_+0x24>  // b.any
  10:	ldr	x2, [x0, #8]
  14:	ldr	x0, [x1, #8]
  18:	cmp	x2, x0
  1c:	cset	w0, eq  // eq = none
  20:	ret
  24:	mov	w0, #0x0                   	// #0
  28:	b	20 <_ZSteqIjPN4llvm3mca11InstructionEEbRKSt4pairIT_T0_ES9_+0x20>

Disassembly of section .text._ZNSt23_Rb_tree_const_iteratorIPN4llvm3mca15HWEventListenerEEppEv:

0000000000000000 <_ZNSt23_Rb_tree_const_iteratorIPN4llvm3mca15HWEventListenerEEppEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0]
  14:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  18:	str	x0, [x19]
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	add	x19, x0, #0x18
  14:	ldr	x1, [x0, #40]
  18:	str	x21, [sp, #32]
  1c:	add	x21, sp, #0x38
  20:	str	x1, [sp, #56]
  24:	ldr	x0, [sp, #56]
  28:	cmp	x19, x0
  2c:	b.eq	50 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_+0x50>  // b.none
  30:	ldr	x0, [x0, #32]
  34:	ldr	x1, [x0]
  38:	ldr	x2, [x1, #32]
  3c:	mov	x1, x20
  40:	blr	x2
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_>
  4c:	b	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_15HWPressureEventEEEvRKT_+0x24>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #64
  5c:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_:

0000000000000000 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	add	x19, x0, #0x18
  14:	ldr	x1, [x0, #40]
  18:	str	x21, [sp, #32]
  1c:	add	x21, sp, #0x38
  20:	str	x1, [sp, #56]
  24:	ldr	x0, [sp, #56]
  28:	cmp	x19, x0
  2c:	b.eq	50 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x50>  // b.none
  30:	ldr	x0, [x0, #32]
  34:	ldr	x1, [x0]
  38:	ldr	x2, [x1, #16]
  3c:	mov	x1, x20
  40:	blr	x2
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_>
  4c:	b	24 <_ZNK4llvm3mca5Stage11notifyEventINS0_18HWInstructionEventEEEvRKT_+0x24>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #64
  5c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEED2Ev:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEED1Ev>:
   0:	mov	x1, x0
   4:	ldr	x0, [x1], #16
   8:	cmp	x0, x1
   c:	b.eq	14 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEED1Ev+0x14>  // b.none
  10:	b	0 <free>
  14:	ret

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x23, [sp, #48]
   c:	sub	x23, x1, x0
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	asr	x23, x23, #6
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x22, x2
  28:	mov	x21, x19
  2c:	cmp	x23, #0x0
  30:	b.le	9c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x9c>
  34:	mov	x1, x22
  38:	mov	x0, x19
  3c:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  40:	tst	w0, #0xff
  44:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
  48:	add	x21, x19, #0x10
  4c:	mov	x1, x22
  50:	mov	x0, x21
  54:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  58:	tst	w0, #0xff
  5c:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
  60:	add	x21, x19, #0x20
  64:	mov	x1, x22
  68:	mov	x0, x21
  6c:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  70:	tst	w0, #0xff
  74:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
  78:	add	x21, x19, #0x30
  7c:	mov	x1, x22
  80:	mov	x0, x21
  84:	add	x19, x19, #0x40
  88:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  8c:	tst	w0, #0xff
  90:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
  94:	sub	x23, x23, #0x1
  98:	b	28 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x28>
  9c:	sub	x0, x20, x19
  a0:	cmp	x0, #0x20
  a4:	b.eq	104 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x104>  // b.none
  a8:	cmp	x0, #0x30
  ac:	b.eq	d4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd4>  // b.none
  b0:	cmp	x0, #0x10
  b4:	b.ne	cc <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xcc>  // b.any
  b8:	mov	x1, x22
  bc:	mov	x0, x21
  c0:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  c4:	tst	w0, #0xff
  c8:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
  cc:	mov	x21, x20
  d0:	b	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>
  d4:	mov	x1, x22
  d8:	mov	x0, x19
  dc:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
  e0:	tst	w0, #0xff
  e4:	b.eq	100 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x100>  // b.none
  e8:	mov	x0, x21
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldp	x21, x22, [sp, #32]
  f4:	ldr	x23, [sp, #48]
  f8:	ldp	x29, x30, [sp], #64
  fc:	ret
 100:	add	x21, x19, #0x10
 104:	mov	x1, x22
 108:	mov	x0, x21
 10c:	bl	0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>
 110:	tst	w0, #0xff
 114:	b.ne	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>  // b.any
 118:	add	x21, x21, #0x10
 11c:	b	b8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xb8>

Disassembly of section .text._ZN4llvm4findIRKSt6vectorINS_3mca7InstRefESaIS3_EES3_EEDTcl9adl_beginfp_EEOT_RKT0_:

0000000000000000 <_ZN4llvm4findIRKSt6vectorINS_3mca7InstRefESaIS3_EES3_EEDTcl9adl_beginfp_EEOT_RKT0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x2, x1
   8:	mov	w3, #0x0                   	// #0
   c:	mov	x29, sp
  10:	ldr	x1, [x0, #8]
  14:	ldr	x0, [x0]
  18:	bl	0 <_ZN4llvm4findIRKSt6vectorINS_3mca7InstRefESaIS3_EES3_EEDTcl9adl_beginfp_EEOT_RKT0_>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	add	x0, x0, #0x20
  18:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  1c:	ldr	x1, [x19, #40]
  20:	cmp	x1, x0
  24:	b.eq	48 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x48>  // b.none
  28:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  2c:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  30:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0x10e                 	// #270
  44:	bl	0 <__assert_fail>
  48:	mov	x1, x20
  4c:	add	x0, x19, #0x50
  50:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  54:	ldr	x1, [x19, #88]
  58:	cmp	x1, x0
  5c:	b.eq	80 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x80>  // b.none
  60:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  64:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  68:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  6c:	add	x3, x3, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x0, x0, #0x0
  78:	mov	w2, #0x10f                 	// #271
  7c:	b	44 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x44>
  80:	mov	x1, x20
  84:	add	x0, x19, #0x68
  88:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  8c:	ldr	x1, [x19, #112]
  90:	cmp	x1, x0
  94:	b.eq	b8 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0xb8>  // b.none
  98:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  9c:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  a0:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  a4:	add	x3, x3, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x0, x0, #0x0
  b0:	mov	w2, #0x110                 	// #272
  b4:	b	44 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x44>
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x27, x28, [sp, #80]
   c:	mov	x28, x0
  10:	ldr	x0, [x1, #8]
  14:	stp	x19, x20, [sp, #16]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x8
  20:	ldr	x0, [x0]
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x23, x1
  2c:	stp	x25, x26, [sp, #64]
  30:	add	x26, sp, #0x90
  34:	ldr	x20, [x0, #176]
  38:	str	wzr, [x28, #80]
  3c:	ldr	w24, [x0, #184]
  40:	mov	w0, #0x18                  	// #24
  44:	umaddl	x0, w24, w0, x20
  48:	str	x0, [sp, #96]
  4c:	ldr	x0, [sp, #96]
  50:	cmp	x0, x20
  54:	b.eq	224 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x224>  // b.none
  58:	ldp	w4, w22, [x20, #8]
  5c:	cmp	w4, w22
  60:	b.eq	21c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x21c>  // b.none
  64:	ldr	w1, [x28, #192]
  68:	ldr	x19, [x28, #184]
  6c:	lsl	x3, x1, #3
  70:	lsr	x1, x1, #2
  74:	ldr	x0, [x20]
  78:	lsl	x5, x1, #5
  7c:	mov	x2, x19
  80:	add	x1, x19, x1, lsl #5
  84:	cmp	x2, x1
  88:	b.eq	138 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x138>  // b.none
  8c:	ldr	x6, [x2]
  90:	cmp	x0, x6
  94:	b.eq	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>  // b.none
  98:	ldr	x6, [x2, #8]
  9c:	cmp	x0, x6
  a0:	b.ne	108 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x108>  // b.any
  a4:	add	x2, x2, #0x8
  a8:	ldr	x0, [x28, #64]
  ac:	sub	x2, x2, x19
  b0:	sub	w22, w22, w4
  b4:	asr	x19, x2, #3
  b8:	mov	w1, w19
  bc:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
  c0:	ldr	w27, [x0, #8]
  c4:	mov	x25, x0
  c8:	ldr	x0, [x0, #24]
  cc:	cbnz	x0, 194 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x194>
  d0:	and	x19, x19, #0xffffffff
  d4:	add	x25, x28, #0x48
  d8:	mov	w24, #0x0                   	// #0
  dc:	cmp	w24, w27
  e0:	b.eq	21c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x21c>  // b.none
  e4:	mov	w0, #0x1                   	// #1
  e8:	mov	x1, x26
  ec:	lsl	w0, w0, w24
  f0:	add	w24, w24, #0x1
  f4:	stp	x19, x0, [sp, #144]
  f8:	mov	x0, x25
  fc:	stp	w22, w27, [sp, #160]
 100:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 104:	b	dc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xdc>
 108:	ldr	x6, [x2, #16]
 10c:	cmp	x0, x6
 110:	b.ne	11c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x11c>  // b.any
 114:	add	x2, x2, #0x10
 118:	b	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>
 11c:	ldr	x6, [x2, #24]
 120:	cmp	x0, x6
 124:	b.ne	130 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x130>  // b.any
 128:	add	x2, x2, #0x18
 12c:	b	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>
 130:	add	x2, x2, #0x20
 134:	b	84 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x84>
 138:	add	x2, x19, x3
 13c:	sub	x3, x3, x5
 140:	cmp	x3, #0x10
 144:	b.eq	178 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x178>  // b.none
 148:	cmp	x3, #0x18
 14c:	b.eq	168 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x168>  // b.none
 150:	cmp	x3, #0x8
 154:	b.ne	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>  // b.any
 158:	ldr	x3, [x1]
 15c:	cmp	x0, x3
 160:	csel	x2, x2, x1, ne  // ne = any
 164:	b	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>
 168:	ldr	x3, [x19, x5]
 16c:	cmp	x0, x3
 170:	b.eq	18c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x18c>  // b.none
 174:	add	x1, x1, #0x8
 178:	ldr	x3, [x1]
 17c:	cmp	x0, x3
 180:	b.eq	18c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x18c>  // b.none
 184:	add	x1, x1, #0x8
 188:	b	158 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x158>
 18c:	mov	x2, x1
 190:	b	a8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa8>
 194:	add	x19, x28, #0x48
 198:	mov	x24, #0x0                   	// #0
 19c:	cmp	w27, w24
 1a0:	b.ls	21c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x21c>  // b.plast
 1a4:	ldr	x0, [x25, #24]
 1a8:	ldr	w1, [x0, x24, lsl #2]
 1ac:	ldr	x0, [x28, #64]
 1b0:	str	w1, [sp, #120]
 1b4:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 1b8:	ldr	w7, [x0, #8]
 1bc:	ldr	w1, [sp, #120]
 1c0:	mov	x6, x0
 1c4:	mov	w4, #0x0                   	// #0
 1c8:	mov	w5, w1
 1cc:	str	w7, [sp, #124]
 1d0:	cmp	w4, w7
 1d4:	b.eq	214 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x214>  // b.none
 1d8:	ldr	w0, [x6, #8]
 1dc:	mov	w1, #0x1                   	// #1
 1e0:	lsl	w1, w1, w4
 1e4:	stp	x5, x6, [sp, #104]
 1e8:	str	w4, [sp, #120]
 1ec:	mul	w0, w27, w0
 1f0:	stp	x5, x1, [sp, #144]
 1f4:	mov	x1, x26
 1f8:	stp	w22, w0, [sp, #160]
 1fc:	mov	x0, x19
 200:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 204:	ldp	w4, w7, [sp, #120]
 208:	ldp	x5, x6, [sp, #104]
 20c:	add	w4, w4, #0x1
 210:	b	1cc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1cc>
 214:	add	x24, x24, #0x1
 218:	b	19c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x19c>
 21c:	add	x20, x20, #0x18
 220:	b	4c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x4c>
 224:	ldr	w0, [x28, #80]
 228:	add	x20, sp, #0x90
 22c:	add	x28, x28, #0x18
 230:	mov	w2, #0x4                   	// #4
 234:	ldr	x19, [x28, #16]
 238:	str	w2, [sp, #144]
 23c:	ldr	x1, [x28, #48]
 240:	stp	x23, x1, [sp, #152]
 244:	str	x0, [sp, #168]
 248:	cmp	x19, x28
 24c:	b.eq	274 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x274>  // b.none
 250:	ldr	x0, [x19, #32]
 254:	ldr	x1, [x0]
 258:	ldr	x2, [x1, #16]
 25c:	mov	x1, x20
 260:	blr	x2
 264:	mov	x0, x19
 268:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 26c:	mov	x19, x0
 270:	b	248 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x248>
 274:	add	x19, sp, #0x88
 278:	str	xzr, [x21]
 27c:	mov	x1, x19
 280:	mov	x0, #0x1                   	// #1
 284:	str	x0, [sp, #136]
 288:	mov	x0, x21
 28c:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 290:	mov	x0, x19
 294:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 298:	mov	x0, x21
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldp	x21, x22, [sp, #32]
 2a4:	ldp	x23, x24, [sp, #48]
 2a8:	ldp	x25, x26, [sp, #64]
 2ac:	ldp	x27, x28, [sp, #80]
 2b0:	ldp	x29, x30, [sp], #176
 2b4:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTablesD1Ev>
  14:	add	x1, x19, #0xc8
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #184]
  28:	cmp	x0, x1
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x1, x19, #0x58
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca17InstructionTablesD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x108                 	// #264
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #40]
   c:	cbnz	x2, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  14:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  18:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x154                 	// #340
  2c:	bl	0 <__assert_fail>
  30:	ldr	w2, [x0, #48]
  34:	cmp	w2, w1
  38:	b.hi	5c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x5c>  // b.pmore
  3c:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  40:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  44:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x156                 	// #342
  58:	b	2c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x2c>
  5c:	ldr	x0, [x0, #32]
  60:	ubfiz	x1, x1, #5, #32
  64:	ldp	x29, x30, [sp], #16
  68:	add	x0, x0, x1
  6c:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage10cycleStartEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage10cycleStartEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #12]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	ldr	w0, [x0, #8]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x19, x1
  20:	cmp	w0, w2
  24:	str	x23, [sp, #48]
  28:	b.cc	f4 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0xf4>  // b.lo, b.ul, b.last
  2c:	mov	w2, w2
  30:	add	x1, sp, #0x48
  34:	add	x2, x2, #0x2
  38:	mov	x22, #0x18                  	// #24
  3c:	orr	x2, x2, x2, lsr #1
  40:	orr	x2, x2, x2, lsr #2
  44:	orr	x2, x2, x2, lsr #4
  48:	orr	x2, x2, x2, lsr #8
  4c:	orr	x0, x2, x2, lsr #16
  50:	orr	x2, x0, x2, lsr #32
  54:	mov	x0, #0xffffffff            	// #4294967295
  58:	add	x2, x2, #0x1
  5c:	stp	x2, x0, [sp, #64]
  60:	cmp	x2, x0
  64:	add	x0, sp, #0x40
  68:	csel	x0, x0, x1, ls  // ls = plast
  6c:	ldr	x23, [x0]
  70:	mul	x22, x23, x22
  74:	mov	x0, x22
  78:	bl	0 <malloc>
  7c:	mov	x21, x0
  80:	cbnz	x0, 98 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x98>
  84:	cbz	x22, d4 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0xd4>
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
  8c:	mov	w1, #0x1                   	// #1
  90:	add	x0, x0, #0x0
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	ldr	w5, [x20, #8]
  9c:	mov	w1, #0x18                  	// #24
  a0:	ldr	x0, [x20]
  a4:	umaddl	x5, w5, w1, x0
  a8:	mov	x1, #0x0                   	// #0
  ac:	add	x4, x0, x1
  b0:	cmp	x5, x4
  b4:	b.eq	dc <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0xdc>  // b.none
  b8:	add	x6, x21, x1
  bc:	add	x1, x1, #0x18
  c0:	ldp	x2, x3, [x4]
  c4:	stp	x2, x3, [x6]
  c8:	ldr	x2, [x4, #16]
  cc:	str	x2, [x6, #16]
  d0:	b	ac <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0xac>
  d4:	mov	x22, #0x1                   	// #1
  d8:	b	74 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x74>
  dc:	add	x1, x20, #0x10
  e0:	cmp	x0, x1
  e4:	b.eq	ec <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0xec>  // b.none
  e8:	bl	0 <free>
  ec:	str	x21, [x20]
  f0:	str	w23, [x20, #12]
  f4:	ldr	w1, [x20, #8]
  f8:	mov	w0, #0x18                  	// #24
  fc:	ldr	x2, [x20]
 100:	ldp	x4, x5, [x19]
 104:	umaddl	x1, w1, w0, x2
 108:	stp	x4, x5, [x1]
 10c:	ldr	x0, [x19, #16]
 110:	str	x0, [x1, #16]
 114:	ldp	w1, w3, [x20, #8]
 118:	mov	w0, w1
 11c:	add	x0, x0, #0x1
 120:	cmp	x0, x3
 124:	b.ls	148 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x148>  // b.plast
 128:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 130:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 134:	add	x3, x3, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x0, x0, #0x0
 140:	mov	w2, #0x43                  	// #67
 144:	bl	0 <__assert_fail>
 148:	add	w1, w1, #0x1
 14c:	str	w1, [x20, #8]
 150:	cbnz	w1, 174 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x174>
 154:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 158:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 15c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_>
 160:	add	x3, x3, #0x0
 164:	add	x1, x1, #0x0
 168:	add	x0, x0, #0x0
 16c:	mov	w2, #0xa7                  	// #167
 170:	b	144 <_ZN4llvm15SmallVectorImplISt4pairIS1_ImmENS_3mca14ResourceCyclesEEE12emplace_backIJS5_EEERS5_DpOT_+0x144>
 174:	mov	x1, #0x18                  	// #24
 178:	ldp	x19, x20, [sp, #16]
 17c:	madd	x0, x0, x1, x2
 180:	ldp	x21, x22, [sp, #32]
 184:	sub	x0, x0, #0x18
 188:	ldr	x23, [sp, #48]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>:
   0:	cbz	x0, 14 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0+0x14>
   4:	ldr	x2, [x0]
   8:	ldr	x2, [x2, #16]
   c:	mov	x16, x2
  10:	br	x16
  14:	mov	w0, #0x0                   	// #0
  18:	ret

000000000000001c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
  1c:	stp	x29, x30, [sp, #-96]!
  20:	mov	x29, sp
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x19, x0
  2c:	mov	x20, x8
  30:	stp	x23, x24, [sp, #48]
  34:	add	x24, x0, #0x40
  38:	ldr	w1, [x19, #212]
  3c:	mov	x0, x24
  40:	add	x23, sp, #0x50
  44:	stp	x21, x22, [sp, #32]
  48:	add	x21, sp, #0x48
  4c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  50:	ldp	x0, x1, [x0]
  54:	stp	x0, x1, [sp, #80]
  58:	ldr	x0, [sp, #88]
  5c:	cbz	x0, f8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xdc>
  60:	ldr	x0, [x19, #8]
  64:	mov	x1, x23
  68:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  6c:	tst	w0, #0xff
  70:	b.eq	f8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xdc>  // b.none
  74:	ldr	x0, [x19, #8]
  78:	mov	x1, x23
  7c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  80:	tst	w0, #0xff
  84:	b.ne	a8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x8c>  // b.any
  88:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  8c:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  90:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x47                  	// #71
  a4:	bl	0 <__assert_fail>
  a8:	ldr	x0, [x19, #8]
  ac:	mov	x8, x21
  b0:	ldr	x1, [x0]
  b4:	ldr	x2, [x1, #48]
  b8:	mov	x1, x23
  bc:	blr	x2
  c0:	ldr	x0, [sp, #72]
  c4:	ands	x1, x0, #0xfffffffffffffffe
  c8:	cset	x0, ne  // ne = any
  cc:	orr	x0, x0, x1
  d0:	str	x0, [sp, #72]
  d4:	tst	x0, #0xfffffffffffffffe
  d8:	b.eq	130 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x114>  // b.none
  dc:	mov	x1, x21
  e0:	str	xzr, [x20]
  e4:	mov	x0, x20
  e8:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  ec:	mov	x0, x21
  f0:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
  f4:	b	118 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xfc>
  f8:	mov	x1, x21
  fc:	str	xzr, [x20]
 100:	mov	x0, #0x1                   	// #1
 104:	str	x0, [sp, #72]
 108:	mov	x0, x20
 10c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 110:	mov	x0, x21
 114:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 118:	mov	x0, x20
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldp	x21, x22, [sp, #32]
 124:	ldp	x23, x24, [sp, #48]
 128:	ldp	x29, x30, [sp], #96
 12c:	ret
 130:	mov	x0, x21
 134:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 138:	ldr	w22, [x19, #212]
 13c:	mov	x0, x24
 140:	mov	w1, w22
 144:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 148:	str	xzr, [x0, #8]
 14c:	mov	x1, x23
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 158:	add	w22, w22, w0
 15c:	ldr	w2, [x19, #72]
 160:	udiv	x1, x22, x2
 164:	msub	x1, x1, x2, x22
 168:	ldr	w2, [x19, #224]
 16c:	str	w1, [x19, #212]
 170:	add	w0, w2, w0
 174:	str	w0, [x19, #224]
 178:	mov	x0, x24
 17c:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 180:	ldr	w1, [x0]
 184:	ldr	x0, [x0, #8]
 188:	str	w1, [sp, #80]
 18c:	str	x0, [sp, #88]
 190:	b	58 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x3c>

0000000000000194 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 194:	stp	x29, x30, [sp, #-48]!
 198:	mov	x29, sp
 19c:	ldrb	w1, [x0, #228]
 1a0:	stp	x19, x20, [sp, #16]
 1a4:	mov	x19, x8
 1a8:	str	wzr, [x0, #220]
 1ac:	cbnz	w1, 1c4 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x30>
 1b0:	bl	1c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 1b4:	mov	x0, x19
 1b8:	ldp	x19, x20, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #48
 1c0:	ret
 1c4:	add	x20, sp, #0x28
 1c8:	str	xzr, [x8]
 1cc:	mov	x1, x20
 1d0:	mov	x0, #0x1                   	// #1
 1d4:	str	x0, [sp, #40]
 1d8:	mov	x0, x8
 1dc:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 1e0:	mov	x0, x20
 1e4:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 1e8:	b	1b4 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x20>

00000000000001ec <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 1ec:	stp	x29, x30, [sp, #-48]!
 1f0:	mov	x29, sp
 1f4:	ldrb	w1, [x0, #228]
 1f8:	stp	x19, x20, [sp, #16]
 1fc:	mov	x19, x8
 200:	cbz	w1, 218 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0x2c>
 204:	bl	1c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 208:	mov	x0, x19
 20c:	ldp	x19, x20, [sp, #16]
 210:	ldp	x29, x30, [sp], #48
 214:	ret
 218:	add	x20, sp, #0x28
 21c:	str	xzr, [x8]
 220:	mov	x1, x20
 224:	mov	x0, #0x1                   	// #1
 228:	str	x0, [sp, #40]
 22c:	mov	x0, x8
 230:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 234:	mov	x0, x20
 238:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 23c:	b	208 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0x1c>

0000000000000240 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
 240:	stp	x29, x30, [sp, #-64]!
 244:	mov	x29, sp
 248:	stp	x19, x20, [sp, #16]
 24c:	mov	x19, x0
 250:	mov	x20, x8
 254:	str	x21, [sp, #32]
 258:	mov	x21, x1
 25c:	ldr	w1, [x19, #208]
 260:	add	x0, x0, #0x40
 264:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 268:	ldr	w1, [x21]
 26c:	str	w1, [x0]
 270:	ldr	x1, [x21, #8]
 274:	str	x1, [x0, #8]
 278:	mov	x1, x21
 27c:	mov	x0, x19
 280:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 284:	ldr	w1, [x19, #208]
 288:	ldr	w3, [x19, #72]
 28c:	add	w1, w0, w1
 290:	udiv	x2, x1, x3
 294:	msub	x1, x2, x3, x1
 298:	str	w1, [x19, #208]
 29c:	ldr	w1, [x19, #224]
 2a0:	sub	w0, w1, w0
 2a4:	str	w0, [x19, #224]
 2a8:	ldr	w0, [x19, #220]
 2ac:	add	w0, w0, #0x1
 2b0:	str	w0, [x19, #220]
 2b4:	add	x19, sp, #0x38
 2b8:	str	xzr, [x20]
 2bc:	mov	x1, x19
 2c0:	mov	x0, #0x1                   	// #1
 2c4:	str	x0, [sp, #56]
 2c8:	mov	x0, x20
 2cc:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 2d0:	mov	x0, x19
 2d4:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 2d8:	mov	x0, x20
 2dc:	ldp	x19, x20, [sp, #16]
 2e0:	ldr	x21, [sp, #32]
 2e4:	ldp	x29, x30, [sp], #64
 2e8:	ret

00000000000002ec <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 2ec:	stp	x29, x30, [sp, #-48]!
 2f0:	mov	w4, w1
 2f4:	mov	x1, x0
 2f8:	mov	x29, sp
 2fc:	stp	x19, x20, [sp, #16]
 300:	mov	x19, x0
 304:	add	x0, x0, #0x18
 308:	str	x21, [sp, #32]
 30c:	cmp	w4, #0x0
 310:	stur	xzr, [x0, #-16]
 314:	csinc	w20, w4, wzr, ne  // ne = any
 318:	str	wzr, [x19, #24]
 31c:	cmp	w4, #0x8
 320:	str	xzr, [x19, #32]
 324:	mov	w21, w20
 328:	stp	x0, x0, [x0, #16]
 32c:	str	xzr, [x0, #32]
 330:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 334:	ldr	x0, [x0]
 338:	add	x0, x0, #0x10
 33c:	str	x0, [x1], #80
 340:	mov	x0, #0x800000000           	// #34359738368
 344:	str	xzr, [x19, #208]
 348:	stp	x1, x0, [x19, #64]
 34c:	stp	w2, wzr, [x19, #216]
 350:	strb	w3, [x19, #228]
 354:	b.ls	364 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x78>  // b.plast
 358:	mov	x1, x21
 35c:	add	x0, x19, #0x40
 360:	bl	0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 364:	ldr	x2, [x19, #64]
 368:	ldr	w0, [x19, #72]
 36c:	add	x0, x2, x0, lsl #4
 370:	add	x2, x2, x21, lsl #4
 374:	cmp	x2, x0
 378:	b.eq	38c <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xa0>  // b.none
 37c:	add	x0, x0, #0x10
 380:	stur	wzr, [x0, #-16]
 384:	stur	xzr, [x0, #-8]
 388:	b	374 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x88>
 38c:	ldr	w0, [x19, #76]
 390:	cmp	x21, x0
 394:	b.ls	3b8 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xcc>  // b.plast
 398:	adrp	x3, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 39c:	adrp	x1, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 3a0:	adrp	x0, 0 <_ZNK4llvm3mca5Stage14checkNextStageERKNS0_7InstRefE.isra.0>
 3a4:	add	x3, x3, #0x0
 3a8:	add	x1, x1, #0x0
 3ac:	add	x0, x0, #0x0
 3b0:	mov	w2, #0x43                  	// #67
 3b4:	bl	0 <__assert_fail>
 3b8:	ldr	x21, [sp, #32]
 3bc:	str	w20, [x19, #72]
 3c0:	str	w20, [x19, #224]
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldp	x29, x30, [sp], #48
 3cc:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w1, [x0, #224]
   4:	ldr	w0, [x0, #72]
   8:	cmp	w1, w0
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>
  14:	add	x1, x19, #0x50
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #64]
  28:	cmp	x0, x1
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0xe8                  	// #232
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage20getNormalizedOpcodesERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage20getNormalizedOpcodesERKNS0_7InstRefE>:
   0:	ldr	x1, [x1, #8]
   4:	ldr	x2, [x1]
   8:	ldr	w1, [x0, #72]
   c:	ldr	w0, [x2, #316]
  10:	cmp	w0, w1
  14:	csel	w0, w0, w1, ls  // ls = plast
  18:	cmp	w0, #0x0
  1c:	csinc	w0, w0, wzr, ne  // ne = any
  20:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #216]
  14:	cbz	w0, 24 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x24>
  18:	ldr	w2, [x19, #220]
  1c:	cmp	w0, w2
  20:	b.eq	44 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x44>  // b.none
  24:	mov	x0, x19
  28:	bl	0 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>
  2c:	ldr	w1, [x19, #224]
  30:	cmp	w1, w0
  34:	cset	w0, cs  // cs = hs, nlast
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	mov	w0, #0x0                   	// #0
  48:	b	38 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x38>

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm>:
   0:	ldr	w2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.hi	34 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm+0x34>  // b.pmore
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm>
  14:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_3mca7InstRefEvEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x95                  	// #149
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #4
  3c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #56]
  24:	b.ls	38 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x38>  // b.plast
  28:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  2c:	mov	w1, #0x1                   	// #1
  30:	add	x0, x0, #0x0
  34:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  38:	ldr	w2, [x19, #12]
  3c:	add	x1, sp, #0x38
  40:	add	x2, x2, #0x2
  44:	orr	x2, x2, x2, lsr #1
  48:	orr	x2, x2, x2, lsr #2
  4c:	orr	x2, x2, x2, lsr #4
  50:	orr	x2, x2, x2, lsr #8
  54:	orr	x0, x2, x2, lsr #16
  58:	orr	x2, x0, x2, lsr #32
  5c:	add	x0, sp, #0x40
  60:	add	x2, x2, #0x1
  64:	cmp	x20, x2
  68:	csel	x0, x0, x1, ls  // ls = plast
  6c:	mov	x1, #0xffffffff            	// #4294967295
  70:	stp	x2, x1, [sp, #64]
  74:	ldr	x2, [x0]
  78:	cmp	x2, x1
  7c:	b.ls	84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x84>  // b.plast
  80:	add	x0, sp, #0x48
  84:	ldr	x22, [x0]
  88:	lsl	x21, x22, #4
  8c:	mov	x0, x21
  90:	bl	0 <malloc>
  94:	mov	x20, x0
  98:	cbnz	x0, b0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb0>
  9c:	cbz	x21, d8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xd8>
  a0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a4:	mov	w1, #0x1                   	// #1
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b0:	ldr	x0, [x19]
  b4:	mov	x3, x20
  b8:	ldr	w2, [x19, #8]
  bc:	mov	x1, x0
  c0:	add	x2, x0, x2, lsl #4
  c4:	cmp	x2, x1
  c8:	b.eq	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.none
  cc:	ldp	x4, x5, [x1], #16
  d0:	stp	x4, x5, [x3], #16
  d4:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc4>
  d8:	mov	x21, #0x1                   	// #1
  dc:	b	8c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x8c>
  e0:	add	x1, x19, #0x10
  e4:	cmp	x0, x1
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w22, [x19, #12]
  f8:	ldp	x19, x20, [sp, #16]
  fc:	ldp	x21, x22, [sp, #32]
 100:	ldp	x29, x30, [sp], #80
 104:	ret

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x8
  14:	ldr	x0, [x0, #64]
  18:	add	x20, sp, #0x28
  1c:	ldr	w1, [x1, #792]
  20:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
  24:	str	xzr, [x19]
  28:	mov	x1, x20
  2c:	mov	x0, #0x1                   	// #1
  30:	str	x0, [sp, #40]
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
  3c:	mov	x0, x20
  40:	bl	0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
  44:	mov	x0, x19
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

0000000000000054 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  54:	stp	x29, x30, [sp, #-128]!
  58:	mov	x29, sp
  5c:	stp	x19, x20, [sp, #16]
  60:	mov	x20, x0
  64:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
  68:	stp	x21, x22, [sp, #32]
  6c:	mov	x21, x1
  70:	ldr	x0, [x0]
  74:	ldrb	w0, [x0]
  78:	str	x23, [sp, #48]
  7c:	cbz	w0, e4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
  84:	add	x0, x0, #0x0
  88:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  8c:	tst	w0, #0xff
  90:	b.eq	e4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x90>  // b.none
  94:	bl	0 <_ZN4llvm4dbgsEv>
  98:	mov	x19, x0
  9c:	ldp	x1, x2, [x0, #16]
  a0:	sub	x1, x1, x2
  a4:	cmp	x1, #0x19
  a8:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
  ac:	b.hi	144 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xf0>  // b.pmore
  b0:	add	x1, x1, #0x0
  b4:	mov	x2, #0x1a                  	// #26
  b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  bc:	mov	x19, x0
  c0:	ldr	w1, [x21]
  c4:	mov	x0, x19
  c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  cc:	ldp	x1, x0, [x19, #16]
  d0:	cmp	x0, x1
  d4:	b.cc	170 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x11c>  // b.lo, b.ul, b.last
  d8:	mov	x0, x19
  dc:	mov	w1, #0xa                   	// #10
  e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
  e4:	ldr	x0, [x20, #72]
  e8:	add	x22, sp, #0x40
  ec:	add	x1, x22, #0x10
  f0:	ldr	w23, [x0, #24]
  f4:	mov	x0, #0x400000000           	// #17179869184
  f8:	stp	x1, x0, [sp, #64]
  fc:	mov	w19, w23
 100:	cmp	w23, #0x4
 104:	b.ls	184 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x130>  // b.plast
 108:	mov	x0, x22
 10c:	mov	x2, x19
 110:	mov	x3, #0x4                   	// #4
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	ldr	w0, [sp, #76]
 11c:	cmp	x19, x0
 120:	b.ls	184 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x130>  // b.plast
 124:	adrp	x3, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 128:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 12c:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 130:	add	x3, x3, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x0, x0, #0x0
 13c:	mov	w2, #0x43                  	// #67
 140:	bl	0 <__assert_fail>
 144:	add	x1, x1, #0x0
 148:	ldr	x0, [x1, #16]
 14c:	str	x0, [x2, #16]
 150:	ldrh	w0, [x1, #24]
 154:	ldp	x4, x5, [x1]
 158:	stp	x4, x5, [x2]
 15c:	strh	w0, [x2, #24]
 160:	ldr	x0, [x19, #24]
 164:	add	x0, x0, #0x1a
 168:	str	x0, [x19, #24]
 16c:	b	c0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x6c>
 170:	add	x1, x0, #0x1
 174:	str	x1, [x19, #24]
 178:	mov	w1, #0xa                   	// #10
 17c:	strb	w1, [x0]
 180:	b	e4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x90>
 184:	ldr	x0, [sp, #64]
 188:	str	w23, [sp, #72]
 18c:	add	x19, x0, x19, lsl #2
 190:	cmp	x19, x0
 194:	b.eq	1a0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x14c>  // b.none
 198:	str	wzr, [x0], #4
 19c:	b	190 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x13c>
 1a0:	ldr	x23, [x21, #8]
 1a4:	ldr	x0, [x23]
 1a8:	ldrb	w1, [x0, #324]
 1ac:	cbnz	w1, 1b8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x164>
 1b0:	ldrb	w0, [x0, #325]
 1b4:	cbz	w0, 1cc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x178>
 1b8:	ldr	x0, [x20, #80]
 1bc:	ldr	x1, [x0]
 1c0:	ldr	x2, [x1, #40]
 1c4:	mov	x1, x21
 1c8:	blr	x2
 1cc:	ldr	x19, [x23, #16]
 1d0:	mov	w0, #0x88                  	// #136
 1d4:	ldr	w23, [x23, #24]
 1d8:	umaddl	x23, w23, w0, x19
 1dc:	ldr	w3, [sp, #72]
 1e0:	cmp	x19, x23
 1e4:	ldr	x2, [sp, #64]
 1e8:	b.eq	200 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1ac>  // b.none
 1ec:	ldr	x0, [x20, #72]
 1f0:	mov	x1, x19
 1f4:	add	x19, x19, #0x88
 1f8:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 1fc:	b	1dc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x188>
 200:	add	x20, x20, #0x18
 204:	stp	x21, x2, [sp, #104]
 208:	add	x21, sp, #0x60
 20c:	ldr	x19, [x20, #16]
 210:	mov	w0, #0x1                   	// #1
 214:	str	w0, [sp, #96]
 218:	str	x3, [sp, #120]
 21c:	cmp	x20, x19
 220:	b.eq	248 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1f4>  // b.none
 224:	ldr	x0, [x19, #32]
 228:	ldr	x1, [x0]
 22c:	ldr	x2, [x1, #16]
 230:	mov	x1, x21
 234:	blr	x2
 238:	mov	x0, x19
 23c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 240:	mov	x19, x0
 244:	b	21c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1c8>
 248:	ldr	x0, [sp, #64]
 24c:	add	x22, x22, #0x10
 250:	cmp	x0, x22
 254:	b.eq	25c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x208>  // b.none
 258:	bl	0 <free>
 25c:	ldp	x19, x20, [sp, #16]
 260:	ldp	x21, x22, [sp, #32]
 264:	ldr	x23, [sp, #48]
 268:	ldp	x29, x30, [sp], #128
 26c:	ret

0000000000000270 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
 270:	stp	x29, x30, [sp, #-64]!
 274:	mov	x29, sp
 278:	stp	x19, x20, [sp, #16]
 27c:	mov	x20, x0
 280:	mov	x19, x8
 284:	ldr	x0, [x0, #64]
 288:	stp	x21, x22, [sp, #32]
 28c:	ldp	w2, w1, [x0, #16]
 290:	cmp	w2, w1
 294:	b.ne	2d0 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x60>  // b.any
 298:	add	x20, sp, #0x38
 29c:	mov	x0, #0x1                   	// #1
 2a0:	str	x0, [sp, #56]
 2a4:	mov	x1, x20
 2a8:	str	xzr, [x19]
 2ac:	mov	x0, x19
 2b0:	bl	0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2b4:	mov	x0, x20
 2b8:	bl	0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2bc:	mov	x0, x19
 2c0:	ldp	x19, x20, [sp, #16]
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	ldp	x29, x30, [sp], #64
 2cc:	ret
 2d0:	ldr	w22, [x0, #24]
 2d4:	mov	w21, #0x0                   	// #0
 2d8:	ldr	x0, [x20, #64]
 2dc:	ldp	w1, w2, [x0, #16]
 2e0:	cmp	w2, w1
 2e4:	b.eq	298 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>  // b.none
 2e8:	cmp	w22, #0x0
 2ec:	ccmp	w21, w22, #0x0, ne  // ne = any
 2f0:	b.eq	298 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>  // b.none
 2f4:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 2f8:	mov	x1, x0
 2fc:	ldrb	w0, [x0, #20]
 300:	cbz	w0, 298 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x28>
 304:	mov	x0, x20
 308:	bl	54 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
 30c:	ldr	x0, [x20, #64]
 310:	add	w21, w21, #0x1
 314:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
 318:	b	2d8 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x68>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #64]
   4:	ldr	w1, [x0, #20]
   8:	ldr	w0, [x0, #16]
   c:	cmp	w1, w0
  10:	cset	w0, ne  // ne = any
  14:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD2Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca11RetireStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca11RetireStageD0Ev>
  14:	mov	x0, x19
  18:	mov	x1, #0x58                  	// #88
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	add	x22, x0, #0x18
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x20, x22
  1c:	mov	x19, x0
  20:	mov	w1, #0x1                   	// #1
  24:	ldr	x0, [x0, #32]
  28:	str	x23, [sp, #48]
  2c:	cbz	x0, 5c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x5c>
  30:	ldr	x1, [x0, #32]
  34:	cmp	x21, x1
  38:	b.cs	50 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x50>  // b.hs, b.nlast
  3c:	ldr	x2, [x0, #16]
  40:	mov	w1, #0x1                   	// #1
  44:	mov	x20, x0
  48:	mov	x0, x2
  4c:	b	2c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x2c>
  50:	mov	w1, #0x0                   	// #0
  54:	ldr	x2, [x0, #24]
  58:	b	44 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x44>
  5c:	cbz	w1, 94 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x94>
  60:	ldr	x0, [x19, #40]
  64:	cmp	x0, x20
  68:	b.eq	d8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xd8>  // b.none
  6c:	mov	x0, x20
  70:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  74:	ldr	x0, [x0, #32]
  78:	cmp	x0, x21
  7c:	b.cc	d8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xd8>  // b.lo, b.ul, b.last
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x21, x22, [sp, #32]
  88:	ldr	x23, [sp, #48]
  8c:	ldp	x29, x30, [sp], #64
  90:	ret
  94:	mov	x0, x20
  98:	b	74 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x74>
  9c:	ldr	x0, [x20, #32]
  a0:	cmp	x21, x0
  a4:	cset	w23, cc  // cc = lo, ul, last
  a8:	mov	x0, #0x28                  	// #40
  ac:	bl	0 <_Znwm>
  b0:	mov	x1, x0
  b4:	mov	x3, x22
  b8:	mov	w0, w23
  bc:	mov	x2, x20
  c0:	str	x21, [x1, #32]
  c4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  c8:	ldr	x0, [x19, #56]
  cc:	add	x0, x0, #0x1
  d0:	str	x0, [x19, #56]
  d4:	b	80 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x80>
  d8:	cmp	x22, x20
  dc:	b.ne	9c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x9c>  // b.any
  e0:	mov	w23, #0x1                   	// #1
  e4:	b	a8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xa8>

00000000000000e8 <_ZN4llvm3mca5StageD1Ev>:
  e8:	adrp	x1, 0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
  ec:	mov	x2, x0
  f0:	ldr	x1, [x1]
  f4:	add	x1, x1, #0x10
  f8:	str	x1, [x0], #16
  fc:	ldr	x1, [x2, #32]
 100:	b	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>

0000000000000104 <_ZN4llvm3mca5StageD0Ev>:
 104:	stp	x29, x30, [sp, #-32]!
 108:	mov	x29, sp
 10c:	str	x19, [sp, #16]
 110:	mov	x19, x0
 114:	bl	e8 <_ZN4llvm3mca5StageD1Ev>
 118:	mov	x0, x19
 11c:	mov	x1, #0x40                  	// #64
 120:	ldr	x19, [sp, #16]
 124:	ldp	x29, x30, [sp], #32
 128:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm5Error15assertIsCheckedEv:

0000000000000000 <_ZN4llvm5Error15assertIsCheckedEv>:
   0:	ldr	x1, [x0]
   4:	tbnz	w1, #0, 10 <_ZN4llvm5Error15assertIsCheckedEv+0x10>
   8:	tst	x1, #0xfffffffffffffffe
   c:	b.eq	1c <_ZN4llvm5Error15assertIsCheckedEv+0x1c>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  1c:	ret

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm5ErrorD1Ev>
  14:	ldr	x0, [x19]
  18:	ands	x0, x0, #0xfffffffffffffffe
  1c:	b.eq	38 <_ZN4llvm5ErrorD1Ev+0x38>  // b.none
  20:	ldr	x1, [x0]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ldr	x1, [x1, #8]
  30:	mov	x16, x1
  34:	br	x16
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm5ErroraSEOS0_:

0000000000000000 <_ZN4llvm5ErroraSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm5ErroraSEOS0_>
  18:	ldr	x0, [x20]
  1c:	orr	x0, x0, #0x1
  20:	str	x0, [x19]
  24:	str	xzr, [x20]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage8cycleEndEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x0, #0x1                   	// #1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x28
  14:	mov	x1, x20
  18:	str	xzr, [x8]
  1c:	mov	x19, x8
  20:	str	x0, [sp, #40]
  24:	mov	x0, x8
  28:	bl	0 <_ZN4llvm3mca5Stage10cycleStartEv>
  2c:	mov	x0, x20
  30:	bl	0 <_ZN4llvm3mca5Stage10cycleStartEv>
  34:	mov	x0, x19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	cbz	x19, 3c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x3c>
  1c:	ldr	x1, [x19, #24]
  20:	mov	x0, x20
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  28:	ldr	x21, [x19, #16]
  2c:	mov	x0, x19
  30:	bl	0 <_ZdlPv>
  34:	mov	x19, x21
  38:	b	18 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x18>
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldr	x21, [sp, #32]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldp	w5, w2, [x0]
   4:	ldp	w7, w3, [x1]
   8:	cmp	w2, w3
   c:	b.ne	1c <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x1c>  // b.any
  10:	add	w2, w5, w7
  14:	str	w2, [x0]
  18:	ret
  1c:	mov	w6, w2
  20:	mov	w4, w3
  24:	cbz	x4, 3c <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x3c>
  28:	udiv	x1, x6, x4
  2c:	msub	x1, x1, x4, x6
  30:	mov	x6, x4
  34:	mov	x4, x1
  38:	b	24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>
  3c:	mul	w1, w2, w3
  40:	udiv	w1, w1, w6
  44:	udiv	w3, w1, w3
  48:	udiv	w2, w1, w2
  4c:	mul	w3, w3, w7
  50:	madd	w2, w2, w5, w3
  54:	stp	w2, w1, [x0]
  58:	b	18 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x18>

000000000000005c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
  5c:	stp	x29, x30, [sp, #-80]!
  60:	ucvtf	d0, w1
  64:	mov	x29, sp
  68:	stp	x23, x24, [sp, #48]
  6c:	mov	x23, x4
  70:	ldr	w24, [x0, #48]
  74:	str	d8, [sp, #64]
  78:	ucvtf	d8, w2
  7c:	stp	x21, x22, [sp, #32]
  80:	mov	x21, x0
  84:	mov	x22, x3
  88:	stp	x19, x20, [sp, #16]
  8c:	mov	x20, #0x0                   	// #0
  90:	fdiv	d8, d8, d0
  94:	cmp	w20, w24
  98:	b.cs	f8 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x9c>  // b.hs, b.nlast
  9c:	cmp	x20, x23
  a0:	b.ne	c4 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x68>  // b.any
  a4:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
  a8:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
  ac:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
  b0:	add	x3, x3, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x0, x0, #0x0
  bc:	mov	w2, #0xfa                  	// #250
  c0:	bl	0 <__assert_fail>
  c4:	ldr	w19, [x22, x20, lsl #2]
  c8:	cbz	w19, f0 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x94>
  cc:	mov	w1, w20
  d0:	mov	x0, x21
  d4:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
  d8:	ldr	w0, [x0, #8]
  dc:	ucvtf	d0, w19
  e0:	ucvtf	d1, w0
  e4:	fdiv	d0, d0, d1
  e8:	fcmpe	d0, d8
  ec:	fcsel	d8, d0, d8, gt
  f0:	add	x20, x20, #0x1
  f4:	b	94 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x38>
  f8:	fmov	d0, d8
  fc:	ldr	d8, [sp, #64]
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x23, x24, [sp, #48]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret

0000000000000114 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
 114:	stp	x29, x30, [sp, #-176]!
 118:	mov	x29, sp
 11c:	stp	x1, x2, [sp, #112]
 120:	stp	x19, x20, [sp, #16]
 124:	mov	x19, x0
 128:	stp	x23, x24, [sp, #48]
 12c:	ldr	w24, [x0, #48]
 130:	ldr	x0, [sp, #120]
 134:	stp	x21, x22, [sp, #32]
 138:	stp	x25, x26, [sp, #64]
 13c:	cmp	x0, w24, uxtw
 140:	stp	x27, x28, [sp, #80]
 144:	b.eq	168 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x54>  // b.none
 148:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 14c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 150:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 154:	add	x3, x3, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	w2, #0x2b                  	// #43
 164:	bl	0 <__assert_fail>
 168:	add	x21, sp, #0x70
 16c:	mov	x20, #0x1                   	// #1
 170:	mov	x23, x20
 174:	mov	x0, x21
 178:	mov	x1, #0x0                   	// #0
 17c:	mov	w22, #0x0                   	// #0
 180:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 184:	str	xzr, [x0]
 188:	cmp	w24, w20
 18c:	b.ls	1c4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb0>  // b.plast
 190:	mov	w1, w20
 194:	mov	x0, x19
 198:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 19c:	ldr	x0, [x0, #24]
 1a0:	cbnz	x0, 1bc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xa8>
 1a4:	mov	x1, x20
 1a8:	mov	x0, x21
 1ac:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1b0:	lsl	x1, x23, x22
 1b4:	add	w22, w22, #0x1
 1b8:	str	x1, [x0]
 1bc:	add	x20, x20, #0x1
 1c0:	b	188 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x74>
 1c4:	mov	x20, #0x1                   	// #1
 1c8:	mov	x26, x20
 1cc:	cmp	w24, w20
 1d0:	b.ls	250 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x13c>  // b.plast
 1d4:	mov	w1, w20
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1e0:	mov	x23, x0
 1e4:	ldr	x25, [x0, #24]
 1e8:	cbz	x25, 248 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x134>
 1ec:	mov	x1, x20
 1f0:	mov	x0, x21
 1f4:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1f8:	ldr	w28, [x23, #8]
 1fc:	lsl	x1, x26, x22
 200:	mov	x23, #0x0                   	// #0
 204:	str	x1, [x0]
 208:	cmp	w28, w23
 20c:	b.ls	244 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x130>  // b.plast
 210:	ldr	w1, [x25, x23, lsl #2]
 214:	mov	x0, x21
 218:	add	x23, x23, #0x1
 21c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 220:	mov	x27, x0
 224:	mov	x1, x20
 228:	mov	x0, x21
 22c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 230:	ldr	x2, [x27]
 234:	ldr	x1, [x0]
 238:	orr	x1, x1, x2
 23c:	str	x1, [x0]
 240:	b	208 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf4>
 244:	add	w22, w22, #0x1
 248:	add	x20, x20, #0x1
 24c:	b	1cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb8>
 250:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
 254:	ldr	x0, [x22]
 258:	ldrb	w0, [x0]
 25c:	cbz	w0, 290 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x17c>
 260:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 264:	add	x0, x0, #0x0
 268:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 26c:	tst	w0, #0xff
 270:	b.eq	290 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x17c>  // b.none
 274:	bl	0 <_ZN4llvm4dbgsEv>
 278:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 27c:	add	x1, x1, #0x0
 280:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 284:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 288:	add	x1, x1, #0x0
 28c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 290:	ldr	w27, [x19, #48]
 294:	adrp	x24, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 298:	adrp	x25, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 29c:	add	x24, x24, #0x0
 2a0:	add	x28, sp, #0x80
 2a4:	add	x25, x25, #0x0
 2a8:	mov	x20, #0x0                   	// #0
 2ac:	cmp	w27, w20
 2b0:	b.ls	380 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x26c>  // b.plast
 2b4:	mov	w1, w20
 2b8:	mov	x0, x19
 2bc:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2c0:	mov	x26, x0
 2c4:	ldr	x0, [x22]
 2c8:	ldrb	w0, [x0]
 2cc:	cbz	w0, 378 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x264>
 2d0:	mov	x0, x24
 2d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 2d8:	tst	w0, #0xff
 2dc:	b.eq	378 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x264>  // b.none
 2e0:	bl	0 <_ZN4llvm4dbgsEv>
 2e4:	adrp	x23, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2e8:	mov	w1, #0x5b                  	// #91
 2ec:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2f0:	mov	w1, #0x2                   	// #2
 2f4:	stp	xzr, x20, [sp, #128]
 2f8:	add	x23, x23, #0x0
 2fc:	str	w1, [sp, #144]
 300:	mov	x1, x28
 304:	strh	wzr, [sp, #148]
 308:	strb	wzr, [sp, #150]
 30c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 310:	mov	x1, x25
 314:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 318:	mov	x1, x23
 31c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 320:	mov	x2, x0
 324:	mov	x1, x20
 328:	mov	x0, x21
 32c:	str	x2, [sp, #104]
 330:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 334:	ldr	x0, [x0]
 338:	stp	x0, xzr, [sp, #152]
 33c:	mov	w0, #0x10                  	// #16
 340:	ldr	x2, [sp, #104]
 344:	str	w0, [sp, #168]
 348:	mov	w0, #0x1                   	// #1
 34c:	add	x1, sp, #0x98
 350:	strh	w0, [sp, #172]
 354:	strb	w0, [sp, #174]
 358:	mov	x0, x2
 35c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 360:	mov	x1, x23
 364:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 368:	ldr	x1, [x26]
 36c:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 370:	mov	w1, #0xa                   	// #10
 374:	bl	0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 378:	add	x20, x20, #0x1
 37c:	b	2ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x198>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x23, x24, [sp, #48]
 38c:	ldp	x25, x26, [sp, #64]
 390:	ldp	x27, x28, [sp, #80]
 394:	ldp	x29, x30, [sp], #176
 398:	ret

Disassembly of section .text._ZNK4llvm12MCSchedModel15getProcResourceEj:

0000000000000000 <_ZNK4llvm12MCSchedModel15getProcResourceEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0, #40]
   c:	cbnz	x2, 30 <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x30>
  10:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  14:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  18:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x154                 	// #340
  2c:	bl	0 <__assert_fail>
  30:	ldr	w2, [x0, #48]
  34:	cmp	w2, w1
  38:	b.hi	5c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x5c>  // b.pmore
  3c:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  40:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  44:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel15getProcResourceEj>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x156                 	// #342
  58:	b	2c <_ZNK4llvm12MCSchedModel15getProcResourceEj+0x2c>
  5c:	ldr	x0, [x0, #32]
  60:	ubfiz	x1, x1, #5, #32
  64:	ldp	x29, x30, [sp], #16
  68:	add	x0, x0, x1
  6c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEc>:
   0:	ldp	x4, x3, [x0, #16]
   4:	and	w1, w1, #0xff
   8:	cmp	x3, x4
   c:	b.cc	14 <_ZN4llvm11raw_ostreamlsEc+0x14>  // b.lo, b.ul, b.last
  10:	b	0 <_ZN4llvm11raw_ostream5writeEh>
  14:	add	x4, x3, #0x1
  18:	str	x4, [x0, #24]
  1c:	strb	w1, [x3]
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	mov	x21, x1
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x20, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x1, x20
  34:	b.cs	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.hs, b.nlast
  38:	mov	x2, x20
  3c:	mov	x1, x21
  40:	mov	x0, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x20, #0x0                   	// #0
  58:	b	28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  5c:	cbz	x20, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x20
  64:	mov	x1, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x0, [x19, #24]
  70:	add	x0, x0, x20
  74:	str	x0, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldr	x21, [sp, #32]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNK4llvm15MutableArrayRefImEixEm:

0000000000000000 <_ZNK4llvm15MutableArrayRefImEixEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x1, x2
   8:	b.cc	34 <_ZNK4llvm15MutableArrayRefImEixEm+0x34>  // b.lo, b.ul, b.last
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  14:	adrp	x1, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZNK4llvm15MutableArrayRefImEixEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x1ab                 	// #427
  30:	bl	0 <__assert_fail>
  34:	ldr	x0, [x0]
  38:	add	x0, x0, x1, lsl #3
  3c:	ret
