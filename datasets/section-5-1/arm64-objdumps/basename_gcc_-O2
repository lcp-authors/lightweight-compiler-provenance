
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//basename_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000768 <_init>:
 768:	stp	x29, x30, [sp, #-16]!
 76c:	mov	x29, sp
 770:	bl	820 <call_weak_fn>
 774:	ldp	x29, x30, [sp], #16
 778:	ret

Disassembly of section .plt:

0000000000000780 <.plt>:
 780:	stp	x16, x30, [sp, #-16]!
 784:	adrp	x16, 10000 <__FRAME_END__+0xf354>
 788:	ldr	x17, [x16, #4088]
 78c:	add	x16, x16, #0xff8
 790:	br	x17
 794:	nop
 798:	nop
 79c:	nop

00000000000007a0 <strlen@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16]
 7a8:	add	x16, x16, #0x0
 7ac:	br	x17

00000000000007b0 <__cxa_finalize@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #8]
 7b8:	add	x16, x16, #0x8
 7bc:	br	x17

00000000000007c0 <builtin_usage@plt>:
 7c0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #16]
 7c8:	add	x16, x16, #0x10
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #24]
 7d8:	add	x16, x16, #0x18
 7dc:	br	x17

00000000000007e0 <puts@plt>:
 7e0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #32]
 7e8:	add	x16, x16, #0x20
 7ec:	br	x17

00000000000007f0 <strcmp@plt>:
 7f0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #40]
 7f8:	add	x16, x16, #0x28
 7fc:	br	x17

0000000000000800 <no_options@plt>:
 800:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 804:	ldr	x17, [x16, #48]
 808:	add	x16, x16, #0x30
 80c:	br	x17

0000000000000810 <fwrite@plt>:
 810:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 814:	ldr	x17, [x16, #56]
 818:	add	x16, x16, #0x38
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <call_weak_fn>:
 820:	adrp	x0, 10000 <__FRAME_END__+0xf354>
 824:	ldr	x0, [x0, #4048]
 828:	cbz	x0, 830 <call_weak_fn+0x10>
 82c:	b	7d0 <__gmon_start__@plt>
 830:	ret
 834:	nop

0000000000000838 <deregister_tm_clones>:
 838:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 83c:	add	x0, x0, #0xa8
 840:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 844:	add	x1, x1, #0xa8
 848:	cmp	x1, x0
 84c:	b.eq	864 <deregister_tm_clones+0x2c>  // b.none
 850:	adrp	x1, 10000 <__FRAME_END__+0xf354>
 854:	ldr	x1, [x1, #4024]
 858:	cbz	x1, 864 <deregister_tm_clones+0x2c>
 85c:	mov	x16, x1
 860:	br	x16
 864:	ret

0000000000000868 <register_tm_clones>:
 868:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 86c:	add	x0, x0, #0xa8
 870:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 874:	add	x1, x1, #0xa8
 878:	sub	x1, x1, x0
 87c:	lsr	x2, x1, #63
 880:	add	x1, x2, x1, asr #3
 884:	cmp	xzr, x1, asr #1
 888:	asr	x1, x1, #1
 88c:	b.eq	8a4 <register_tm_clones+0x3c>  // b.none
 890:	adrp	x2, 10000 <__FRAME_END__+0xf354>
 894:	ldr	x2, [x2, #4064]
 898:	cbz	x2, 8a4 <register_tm_clones+0x3c>
 89c:	mov	x16, x2
 8a0:	br	x16
 8a4:	ret

00000000000008a8 <__do_global_dtors_aux>:
 8a8:	stp	x29, x30, [sp, #-32]!
 8ac:	mov	x29, sp
 8b0:	str	x19, [sp, #16]
 8b4:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 8b8:	ldrb	w0, [x19, #168]
 8bc:	cbnz	w0, 8e4 <__do_global_dtors_aux+0x3c>
 8c0:	adrp	x0, 10000 <__FRAME_END__+0xf354>
 8c4:	ldr	x0, [x0, #4032]
 8c8:	cbz	x0, 8d8 <__do_global_dtors_aux+0x30>
 8cc:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 8d0:	ldr	x0, [x0, #64]
 8d4:	bl	7b0 <__cxa_finalize@plt>
 8d8:	bl	838 <deregister_tm_clones>
 8dc:	mov	w0, #0x1                   	// #1
 8e0:	strb	w0, [x19, #168]
 8e4:	ldr	x19, [sp, #16]
 8e8:	ldp	x29, x30, [sp], #32
 8ec:	ret

00000000000008f0 <frame_dummy>:
 8f0:	b	868 <register_tm_clones>
 8f4:	nop

00000000000008f8 <basename_builtin>:
 8f8:	stp	x29, x30, [sp, #-48]!
 8fc:	mov	x29, sp
 900:	stp	x19, x20, [sp, #16]
 904:	cbz	x0, a14 <basename_builtin+0x11c>
 908:	bl	800 <no_options@plt>
 90c:	mov	w19, w0
 910:	cbnz	w0, a74 <basename_builtin+0x17c>
 914:	adrp	x0, 10000 <__FRAME_END__+0xf354>
 918:	stp	x21, x22, [sp, #32]
 91c:	ldr	x0, [x0, #4056]
 920:	ldr	x2, [x0]
 924:	ldr	x0, [x2]
 928:	cbz	x0, a08 <basename_builtin+0x110>
 92c:	ldp	x1, x0, [x0]
 930:	ldr	x22, [x0]
 934:	cbnz	x1, a10 <basename_builtin+0x118>
 938:	ldr	x0, [x2, #8]
 93c:	ldr	x20, [x0]
 940:	mov	x0, x20
 944:	bl	7a0 <strlen@plt>
 948:	cmp	w0, #0x0
 94c:	mov	w5, w0
 950:	b.le	a2c <basename_builtin+0x134>
 954:	sxtw	x2, w0
 958:	sub	x6, x20, #0x1
 95c:	b	96c <basename_builtin+0x74>
 960:	sub	x2, x2, #0x1
 964:	cmp	w2, #0x0
 968:	b.le	a2c <basename_builtin+0x134>
 96c:	ldrb	w4, [x6, x2]
 970:	mov	w3, w2
 974:	sub	w5, w2, #0x1
 978:	cmp	w4, #0x2f
 97c:	b.eq	960 <basename_builtin+0x68>  // b.none
 980:	sub	w3, w3, #0x1
 984:	add	x0, x20, #0x1
 988:	strb	wzr, [x20, x2]
 98c:	sxtw	x2, w3
 990:	b	9a4 <basename_builtin+0xac>
 994:	ldrb	w4, [x0, x3]
 998:	cmp	w4, #0x2f
 99c:	b.eq	9ac <basename_builtin+0xb4>  // b.none
 9a0:	mov	x2, x3
 9a4:	sub	x3, x2, #0x1
 9a8:	tbz	w2, #31, 994 <basename_builtin+0x9c>
 9ac:	add	x2, x2, #0x1
 9b0:	add	x20, x20, x2
 9b4:	cbz	x22, 9ec <basename_builtin+0xf4>
 9b8:	mov	x0, x22
 9bc:	bl	7a0 <strlen@plt>
 9c0:	mov	x21, x0
 9c4:	mov	x0, x20
 9c8:	bl	7a0 <strlen@plt>
 9cc:	cmp	w21, w0
 9d0:	b.ge	9ec <basename_builtin+0xf4>  // b.tcont
 9d4:	sub	w21, w0, w21
 9d8:	mov	x1, x22
 9dc:	add	x0, x20, w21, sxtw
 9e0:	bl	7f0 <strcmp@plt>
 9e4:	cbnz	w0, 9ec <basename_builtin+0xf4>
 9e8:	strb	wzr, [x20, w21, sxtw]
 9ec:	mov	x0, x20
 9f0:	bl	7e0 <puts@plt>
 9f4:	mov	w0, w19
 9f8:	ldp	x19, x20, [sp, #16]
 9fc:	ldp	x21, x22, [sp, #32]
 a00:	ldp	x29, x30, [sp], #48
 a04:	ret
 a08:	mov	x22, #0x0                   	// #0
 a0c:	b	938 <basename_builtin+0x40>
 a10:	ldp	x21, x22, [sp, #32]
 a14:	bl	7c0 <builtin_usage@plt>
 a18:	mov	w19, #0x102                 	// #258
 a1c:	mov	w0, w19
 a20:	ldp	x19, x20, [sp, #16]
 a24:	ldp	x29, x30, [sp], #48
 a28:	ret
 a2c:	cbz	w5, a3c <basename_builtin+0x144>
 a30:	sxtw	x2, w5
 a34:	mov	w3, w5
 a38:	b	980 <basename_builtin+0x88>
 a3c:	adrp	x3, 10000 <__FRAME_END__+0xf354>
 a40:	mov	x2, #0x2                   	// #2
 a44:	mov	x1, #0x1                   	// #1
 a48:	mov	w19, #0x0                   	// #0
 a4c:	ldr	x3, [x3, #4040]
 a50:	adrp	x0, 0 <_init-0x768>
 a54:	add	x0, x0, #0xa98
 a58:	ldr	x3, [x3]
 a5c:	bl	810 <fwrite@plt>
 a60:	mov	w0, w19
 a64:	ldp	x19, x20, [sp, #16]
 a68:	ldp	x21, x22, [sp, #32]
 a6c:	ldp	x29, x30, [sp], #48
 a70:	ret
 a74:	mov	w19, #0x102                 	// #258
 a78:	mov	w0, w19
 a7c:	ldp	x19, x20, [sp, #16]
 a80:	ldp	x29, x30, [sp], #48
 a84:	ret

Disassembly of section .fini:

0000000000000a88 <_fini>:
 a88:	stp	x29, x30, [sp, #-16]!
 a8c:	mov	x29, sp
 a90:	ldp	x29, x30, [sp], #16
 a94:	ret
