
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0x276c>:
    2940:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2958:	add	x0, x0, #0x928
    295c:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2960:	add	x1, x1, #0x928
    2964:	cmp	x0, x1
    2968:	b.eq	2994 <PyThread_free_lock@plt+0x64>  // b.none
    296c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2970:	ldr	x1, [x1, #3952]
    2974:	cbz	x1, 2994 <PyThread_free_lock@plt+0x64>
    2978:	stp	x29, x30, [sp, #-16]!
    297c:	mov	x29, sp
    2980:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2984:	add	x0, x0, #0x928
    2988:	blr	x1
    298c:	ldp	x29, x30, [sp], #16
    2990:	ret
    2994:	ret
    2998:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    299c:	add	x0, x0, #0x928
    29a0:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    29a4:	add	x1, x1, #0x928
    29a8:	sub	x0, x0, x1
    29ac:	lsr	x1, x0, #63
    29b0:	add	x0, x1, x0, asr #3
    29b4:	cmp	xzr, x0, asr #1
    29b8:	b.eq	29e8 <PyThread_free_lock@plt+0xb8>  // b.none
    29bc:	asr	x1, x0, #1
    29c0:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    29c4:	ldr	x2, [x2, #4064]
    29c8:	cbz	x2, 29e8 <PyThread_free_lock@plt+0xb8>
    29cc:	stp	x29, x30, [sp, #-16]!
    29d0:	mov	x29, sp
    29d4:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    29d8:	add	x0, x0, #0x928
    29dc:	blr	x2
    29e0:	ldp	x29, x30, [sp], #16
    29e4:	ret
    29e8:	ret
    29ec:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    29f0:	ldrb	w0, [x0, #2344]
    29f4:	cbnz	w0, 2a30 <PyThread_free_lock@plt+0x100>
    29f8:	stp	x29, x30, [sp, #-16]!
    29fc:	mov	x29, sp
    2a00:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2a04:	ldr	x0, [x0, #3968]
    2a08:	cbz	x0, 2a18 <PyThread_free_lock@plt+0xe8>
    2a0c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2a10:	ldr	x0, [x0, #552]
    2a14:	bl	25c0 <__cxa_finalize@plt>
    2a18:	bl	2954 <PyThread_free_lock@plt+0x24>
    2a1c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2a20:	mov	w1, #0x1                   	// #1
    2a24:	strb	w1, [x0, #2344]
    2a28:	ldp	x29, x30, [sp], #16
    2a2c:	ret
    2a30:	ret
    2a34:	stp	x29, x30, [sp, #-16]!
    2a38:	mov	x29, sp
    2a3c:	bl	2998 <PyThread_free_lock@plt+0x68>
    2a40:	ldp	x29, x30, [sp], #16
    2a44:	ret
    2a48:	stp	x29, x30, [sp, #-32]!
    2a4c:	mov	x29, sp
    2a50:	stp	x19, x20, [sp, #16]
    2a54:	mov	x19, x0
    2a58:	mov	x20, x1
    2a5c:	mov	x0, #0x10                  	// #16
    2a60:	bl	2910 <PyMem_Malloc@plt>
    2a64:	cbz	x0, 2abc <PyThread_free_lock@plt+0x18c>
    2a68:	ldr	x1, [x19, #16]
    2a6c:	str	x1, [x0]
    2a70:	ldr	w1, [x19, #24]
    2a74:	str	w1, [x0, #8]
    2a78:	ldr	w1, [x19, #28]
    2a7c:	str	w1, [x0, #12]
    2a80:	str	x0, [x20]
    2a84:	ldr	x0, [x19]
    2a88:	add	x0, x0, #0x1
    2a8c:	str	x0, [x19]
    2a90:	str	x19, [x20, #8]
    2a94:	adrp	x0, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2a98:	add	x0, x0, #0xc00
    2a9c:	str	x0, [x20, #24]
    2aa0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2aa4:	ldr	x0, [x0, #3960]
    2aa8:	str	x0, [x20, #32]
    2aac:	mov	w0, #0x0                   	// #0
    2ab0:	ldp	x19, x20, [sp, #16]
    2ab4:	ldp	x29, x30, [sp], #32
    2ab8:	ret
    2abc:	mov	w0, #0xffffffff            	// #-1
    2ac0:	b	2ab0 <PyThread_free_lock@plt+0x180>
    2ac4:	stp	x29, x30, [sp, #-32]!
    2ac8:	mov	x29, sp
    2acc:	str	x19, [sp, #16]
    2ad0:	mov	x19, x0
    2ad4:	mov	w1, #0x1                   	// #1
    2ad8:	ldr	x0, [x0]
    2adc:	bl	2640 <PyThread_acquire_lock@plt>
    2ae0:	ldr	x0, [x19, #32]
    2ae4:	cbz	x0, 2af0 <PyThread_free_lock@plt+0x1c0>
    2ae8:	bl	2590 <PyMem_Free@plt>
    2aec:	str	xzr, [x19, #32]
    2af0:	ldr	x0, [x19]
    2af4:	bl	27b0 <PyThread_release_lock@plt>
    2af8:	ldr	x19, [sp, #16]
    2afc:	ldp	x29, x30, [sp], #32
    2b00:	ret
    2b04:	stp	x29, x30, [sp, #-64]!
    2b08:	mov	x29, sp
    2b0c:	stp	x19, x20, [sp, #16]
    2b10:	stp	x21, x22, [sp, #32]
    2b14:	stp	x23, x24, [sp, #48]
    2b18:	mov	x23, x1
    2b1c:	mov	w21, w2
    2b20:	mov	x22, x3
    2b24:	mov	w24, w4
    2b28:	mov	w20, w5
    2b2c:	bl	2830 <_PyObject_New@plt>
    2b30:	mov	x19, x0
    2b34:	cbz	x0, 2be8 <PyThread_free_lock@plt+0x2b8>
    2b38:	str	x23, [x0, #16]
    2b3c:	str	w21, [x0, #24]
    2b40:	str	w20, [x0, #28]
    2b44:	str	x22, [x0, #32]
    2b48:	mov	w1, #0x1                   	// #1
    2b4c:	ldr	x0, [x22]
    2b50:	bl	2640 <PyThread_acquire_lock@plt>
    2b54:	ldr	x0, [x22, #8]
    2b58:	cbz	x0, 2b70 <PyThread_free_lock@plt+0x240>
    2b5c:	ldr	x1, [x0]
    2b60:	cmp	x23, x1
    2b64:	b.eq	2bd4 <PyThread_free_lock@plt+0x2a4>  // b.none
    2b68:	ldr	x0, [x0, #16]
    2b6c:	cbnz	x0, 2b5c <PyThread_free_lock@plt+0x22c>
    2b70:	mov	x2, x23
    2b74:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2b78:	add	x1, x1, #0x390
    2b7c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2b80:	ldr	x0, [x0, #2352]
    2b84:	bl	28c0 <PyErr_Format@plt>
    2b88:	ldr	x0, [x22]
    2b8c:	bl	27b0 <PyThread_release_lock@plt>
    2b90:	cbz	w24, 2bac <PyThread_free_lock@plt+0x27c>
    2b94:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2b98:	ldr	x0, [x0, #2352]
    2b9c:	bl	26a0 <PyErr_ExceptionMatches@plt>
    2ba0:	cbz	w0, 2bac <PyThread_free_lock@plt+0x27c>
    2ba4:	bl	26f0 <PyErr_Clear@plt>
    2ba8:	b	2be8 <PyThread_free_lock@plt+0x2b8>
    2bac:	ldr	x0, [x19]
    2bb0:	sub	x0, x0, #0x1
    2bb4:	str	x0, [x19]
    2bb8:	cbz	x0, 2bc4 <PyThread_free_lock@plt+0x294>
    2bbc:	mov	x19, #0x0                   	// #0
    2bc0:	b	2be8 <PyThread_free_lock@plt+0x2b8>
    2bc4:	mov	x0, x19
    2bc8:	bl	25e0 <_Py_Dealloc@plt>
    2bcc:	mov	x19, #0x0                   	// #0
    2bd0:	b	2be8 <PyThread_free_lock@plt+0x2b8>
    2bd4:	ldr	x1, [x0, #24]
    2bd8:	add	x1, x1, #0x1
    2bdc:	str	x1, [x0, #24]
    2be0:	ldr	x0, [x22]
    2be4:	bl	27b0 <PyThread_release_lock@plt>
    2be8:	mov	x0, x19
    2bec:	ldp	x19, x20, [sp, #16]
    2bf0:	ldp	x21, x22, [sp, #32]
    2bf4:	ldp	x23, x24, [sp, #48]
    2bf8:	ldp	x29, x30, [sp], #64
    2bfc:	ret
    2c00:	stp	x29, x30, [sp, #-48]!
    2c04:	mov	x29, sp
    2c08:	stp	x19, x20, [sp, #16]
    2c0c:	str	x21, [sp, #32]
    2c10:	ldr	x20, [x0]
    2c14:	mov	w5, #0x0                   	// #0
    2c18:	mov	w4, #0x0                   	// #0
    2c1c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2c20:	add	x3, x3, #0x930
    2c24:	add	x3, x3, #0x8
    2c28:	ldr	w2, [x20, #8]
    2c2c:	ldr	x1, [x20]
    2c30:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2c34:	add	x0, x0, #0x238
    2c38:	bl	2b04 <PyThread_free_lock@plt+0x1d4>
    2c3c:	mov	x19, x0
    2c40:	ldr	w21, [x20, #8]
    2c44:	cbz	w21, 2c50 <PyThread_free_lock@plt+0x320>
    2c48:	ldr	w0, [x20, #12]
    2c4c:	cbnz	w0, 2c64 <PyThread_free_lock@plt+0x334>
    2c50:	mov	x0, x19
    2c54:	ldp	x19, x20, [sp, #16]
    2c58:	ldr	x21, [sp, #32]
    2c5c:	ldp	x29, x30, [sp], #48
    2c60:	ret
    2c64:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2c68:	add	x0, x0, #0x3c8
    2c6c:	bl	2750 <PyImport_ImportModule@plt>
    2c70:	mov	x20, x0
    2c74:	cbz	x0, 2cf0 <PyThread_free_lock@plt+0x3c0>
    2c78:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2c7c:	add	x0, x0, #0x3b8
    2c80:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2c84:	add	x1, x1, #0x3a8
    2c88:	cmn	w21, #0x1
    2c8c:	csel	x1, x1, x0, eq  // eq = none
    2c90:	mov	x0, x20
    2c94:	bl	25b0 <PyObject_GetAttrString@plt>
    2c98:	mov	x21, x0
    2c9c:	ldr	x0, [x20]
    2ca0:	sub	x0, x0, #0x1
    2ca4:	str	x0, [x20]
    2ca8:	cbz	x0, 2d10 <PyThread_free_lock@plt+0x3e0>
    2cac:	cbz	x21, 2d08 <PyThread_free_lock@plt+0x3d8>
    2cb0:	mov	x2, #0x0                   	// #0
    2cb4:	mov	x1, x19
    2cb8:	mov	x0, x21
    2cbc:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    2cc0:	mov	x20, x0
    2cc4:	ldr	x0, [x21]
    2cc8:	sub	x0, x0, #0x1
    2ccc:	str	x0, [x21]
    2cd0:	cbz	x0, 2d1c <PyThread_free_lock@plt+0x3ec>
    2cd4:	cbz	x20, 2d08 <PyThread_free_lock@plt+0x3d8>
    2cd8:	ldr	x1, [x19]
    2cdc:	sub	x1, x1, #0x1
    2ce0:	str	x1, [x19]
    2ce4:	cbz	x1, 2d28 <PyThread_free_lock@plt+0x3f8>
    2ce8:	mov	x19, x20
    2cec:	b	2c50 <PyThread_free_lock@plt+0x320>
    2cf0:	bl	26f0 <PyErr_Clear@plt>
    2cf4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2cf8:	add	x0, x0, #0x3d8
    2cfc:	bl	2750 <PyImport_ImportModule@plt>
    2d00:	mov	x20, x0
    2d04:	cbnz	x0, 2c78 <PyThread_free_lock@plt+0x348>
    2d08:	bl	26f0 <PyErr_Clear@plt>
    2d0c:	b	2c50 <PyThread_free_lock@plt+0x320>
    2d10:	mov	x0, x20
    2d14:	bl	25e0 <_Py_Dealloc@plt>
    2d18:	b	2cac <PyThread_free_lock@plt+0x37c>
    2d1c:	mov	x0, x21
    2d20:	bl	25e0 <_Py_Dealloc@plt>
    2d24:	b	2cd4 <PyThread_free_lock@plt+0x3a4>
    2d28:	mov	x0, x19
    2d2c:	bl	25e0 <_Py_Dealloc@plt>
    2d30:	mov	x19, x20
    2d34:	b	2c50 <PyThread_free_lock@plt+0x320>
    2d38:	stp	x29, x30, [sp, #-48]!
    2d3c:	mov	x29, sp
    2d40:	stp	x19, x20, [sp, #16]
    2d44:	str	x21, [sp, #32]
    2d48:	mov	x19, x0
    2d4c:	mov	x21, x1
    2d50:	ldr	x0, [x0, #8]
    2d54:	adrp	x2, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2d58:	add	x2, x2, #0x238
    2d5c:	cmp	x0, x2
    2d60:	b.eq	2d74 <PyThread_free_lock@plt+0x444>  // b.none
    2d64:	mov	x1, x2
    2d68:	bl	28a0 <PyType_IsSubtype@plt>
    2d6c:	mov	w20, w0
    2d70:	cbz	w0, 2d94 <PyThread_free_lock@plt+0x464>
    2d74:	ldr	x0, [x19, #16]
    2d78:	str	x0, [x21]
    2d7c:	mov	w20, #0x1                   	// #1
    2d80:	mov	w0, w20
    2d84:	ldp	x19, x20, [sp, #16]
    2d88:	ldr	x21, [sp, #32]
    2d8c:	ldp	x29, x30, [sp], #48
    2d90:	ret
    2d94:	ldr	x1, [x19, #8]
    2d98:	ldr	x0, [x1, #96]
    2d9c:	cbz	x0, 2de8 <PyThread_free_lock@plt+0x4b8>
    2da0:	ldr	x0, [x0, #264]
    2da4:	cbz	x0, 2de8 <PyThread_free_lock@plt+0x4b8>
    2da8:	mov	x0, x19
    2dac:	bl	2890 <PyLong_AsLongLong@plt>
    2db0:	cmn	x0, #0x1
    2db4:	b.eq	2dc0 <PyThread_free_lock@plt+0x490>  // b.none
    2db8:	tbz	x0, #63, 2d78 <PyThread_free_lock@plt+0x448>
    2dbc:	b	2dc8 <PyThread_free_lock@plt+0x498>
    2dc0:	bl	2730 <PyErr_Occurred@plt>
    2dc4:	cbnz	x0, 2d80 <PyThread_free_lock@plt+0x450>
    2dc8:	mov	x2, x19
    2dcc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2dd0:	add	x1, x1, #0x3f8
    2dd4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2dd8:	ldr	x0, [x0, #4016]
    2ddc:	ldr	x0, [x0]
    2de0:	bl	28c0 <PyErr_Format@plt>
    2de4:	b	2d80 <PyThread_free_lock@plt+0x450>
    2de8:	ldr	x2, [x1, #24]
    2dec:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2df0:	add	x1, x1, #0x428
    2df4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    2df8:	ldr	x0, [x0, #4024]
    2dfc:	ldr	x0, [x0]
    2e00:	bl	28c0 <PyErr_Format@plt>
    2e04:	b	2d80 <PyThread_free_lock@plt+0x450>
    2e08:	stp	x29, x30, [sp, #-32]!
    2e0c:	mov	x29, sp
    2e10:	stp	x19, x20, [sp, #16]
    2e14:	mov	x20, x0
    2e18:	mov	x0, #0x18                  	// #24
    2e1c:	bl	2910 <PyMem_Malloc@plt>
    2e20:	mov	x19, x0
    2e24:	cbz	x0, 2e48 <PyThread_free_lock@plt+0x518>
    2e28:	str	xzr, [x0]
    2e2c:	str	x20, [x0, #8]
    2e30:	mov	w0, #0x1                   	// #1
    2e34:	str	w0, [x19, #16]
    2e38:	mov	x0, x19
    2e3c:	ldp	x19, x20, [sp, #16]
    2e40:	ldp	x29, x30, [sp], #32
    2e44:	ret
    2e48:	bl	2600 <PyErr_NoMemory@plt>
    2e4c:	b	2e38 <PyThread_free_lock@plt+0x508>
    2e50:	stp	x29, x30, [sp, #-64]!
    2e54:	mov	x29, sp
    2e58:	stp	x21, x22, [sp, #32]
    2e5c:	mov	x22, x0
    2e60:	ldr	x0, [x0]
    2e64:	cmp	x0, #0x0
    2e68:	b.le	2ec0 <PyThread_free_lock@plt+0x590>
    2e6c:	stp	x19, x20, [sp, #16]
    2e70:	str	x23, [sp, #48]
    2e74:	mov	x19, #0x0                   	// #0
    2e78:	mov	x21, #0x0                   	// #0
    2e7c:	b	2ea4 <PyThread_free_lock@plt+0x574>
    2e80:	bl	2590 <PyMem_Free@plt>
    2e84:	str	xzr, [x20, x19]
    2e88:	add	x0, x23, #0x8
    2e8c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    2e90:	add	x21, x21, #0x1
    2e94:	add	x19, x19, #0x30
    2e98:	ldr	x0, [x22]
    2e9c:	cmp	x0, x21
    2ea0:	b.le	2eb8 <PyThread_free_lock@plt+0x588>
    2ea4:	ldr	x20, [x22, #8]
    2ea8:	add	x23, x20, x19
    2eac:	ldr	x0, [x20, x19]
    2eb0:	cbnz	x0, 2e80 <PyThread_free_lock@plt+0x550>
    2eb4:	b	2e88 <PyThread_free_lock@plt+0x558>
    2eb8:	ldp	x19, x20, [sp, #16]
    2ebc:	ldr	x23, [sp, #48]
    2ec0:	ldr	x0, [x22, #8]
    2ec4:	bl	2590 <PyMem_Free@plt>
    2ec8:	mov	x0, x22
    2ecc:	bl	2590 <PyMem_Free@plt>
    2ed0:	ldp	x21, x22, [sp, #32]
    2ed4:	ldp	x29, x30, [sp], #64
    2ed8:	ret
    2edc:	stp	x29, x30, [sp, #-80]!
    2ee0:	mov	x29, sp
    2ee4:	stp	x19, x20, [sp, #16]
    2ee8:	stp	x21, x22, [sp, #32]
    2eec:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2ef0:	add	x0, x0, #0x930
    2ef4:	add	x19, x0, #0x8
    2ef8:	mov	w1, #0x1                   	// #1
    2efc:	ldr	x0, [x0, #8]
    2f00:	bl	2640 <PyThread_acquire_lock@plt>
    2f04:	ldr	x0, [x19, #16]
    2f08:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    2f0c:	cmp	x0, x1
    2f10:	b.eq	2ff8 <PyThread_free_lock@plt+0x6c8>  // b.none
    2f14:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    2f18:	cmp	x0, x1
    2f1c:	b.hi	3010 <PyThread_free_lock@plt+0x6e0>  // b.pmore
    2f20:	lsl	x0, x0, #3
    2f24:	bl	2910 <PyMem_Malloc@plt>
    2f28:	mov	x22, x0
    2f2c:	cbz	x0, 3010 <PyThread_free_lock@plt+0x6e0>
    2f30:	stp	x23, x24, [sp, #48]
    2f34:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2f38:	ldr	x1, [x0, #2368]
    2f3c:	cbz	x1, 2f54 <PyThread_free_lock@plt+0x624>
    2f40:	mov	x2, x22
    2f44:	ldr	x3, [x1]
    2f48:	str	x3, [x2], #8
    2f4c:	ldr	x1, [x1, #16]
    2f50:	cbnz	x1, 2f44 <PyThread_free_lock@plt+0x614>
    2f54:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2f58:	add	x0, x0, #0x930
    2f5c:	ldr	x24, [x0, #24]
    2f60:	ldr	x0, [x0, #8]
    2f64:	bl	27b0 <PyThread_release_lock@plt>
    2f68:	mov	x0, x24
    2f6c:	bl	2500 <PyList_New@plt>
    2f70:	mov	x21, x0
    2f74:	cbz	x0, 2fd8 <PyThread_free_lock@plt+0x6a8>
    2f78:	cmp	x24, #0x0
    2f7c:	b.le	2fd8 <PyThread_free_lock@plt+0x6a8>
    2f80:	str	x25, [sp, #64]
    2f84:	mov	x20, #0x0                   	// #0
    2f88:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2f8c:	add	x23, x23, #0x930
    2f90:	add	x23, x23, #0x8
    2f94:	adrp	x25, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    2f98:	add	x25, x25, #0x238
    2f9c:	mov	w5, #0x0                   	// #0
    2fa0:	mov	w4, #0x0                   	// #0
    2fa4:	mov	x3, x23
    2fa8:	mov	w2, #0x0                   	// #0
    2fac:	ldr	x1, [x22, x20, lsl #3]
    2fb0:	mov	x0, x25
    2fb4:	bl	2b04 <PyThread_free_lock@plt+0x1d4>
    2fb8:	mov	x19, x0
    2fbc:	cbz	x0, 302c <PyThread_free_lock@plt+0x6fc>
    2fc0:	ldr	x0, [x21, #24]
    2fc4:	str	x19, [x0, x20, lsl #3]
    2fc8:	add	x20, x20, #0x1
    2fcc:	cmp	x20, x24
    2fd0:	b.ne	2f9c <PyThread_free_lock@plt+0x66c>  // b.any
    2fd4:	ldr	x25, [sp, #64]
    2fd8:	mov	x0, x22
    2fdc:	bl	2590 <PyMem_Free@plt>
    2fe0:	ldp	x23, x24, [sp, #48]
    2fe4:	mov	x0, x21
    2fe8:	ldp	x19, x20, [sp, #16]
    2fec:	ldp	x21, x22, [sp, #32]
    2ff0:	ldp	x29, x30, [sp], #80
    2ff4:	ret
    2ff8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2ffc:	add	x1, x1, #0x450
    3000:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3004:	ldr	x0, [x0, #4000]
    3008:	ldr	x0, [x0]
    300c:	bl	2670 <PyErr_SetString@plt>
    3010:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3014:	ldr	x0, [x0, #2360]
    3018:	bl	27b0 <PyThread_release_lock@plt>
    301c:	mov	x0, #0x0                   	// #0
    3020:	bl	2500 <PyList_New@plt>
    3024:	mov	x21, x0
    3028:	b	2fe4 <PyThread_free_lock@plt+0x6b4>
    302c:	ldr	x0, [x21]
    3030:	sub	x0, x0, #0x1
    3034:	str	x0, [x21]
    3038:	cbz	x0, 3048 <PyThread_free_lock@plt+0x718>
    303c:	mov	x21, x19
    3040:	ldr	x25, [sp, #64]
    3044:	b	2fd8 <PyThread_free_lock@plt+0x6a8>
    3048:	mov	x0, x21
    304c:	bl	25e0 <_Py_Dealloc@plt>
    3050:	mov	x21, x19
    3054:	ldr	x25, [sp, #64]
    3058:	b	2fd8 <PyThread_free_lock@plt+0x6a8>
    305c:	stp	x29, x30, [sp, #-32]!
    3060:	mov	x29, sp
    3064:	mov	x0, x1
    3068:	mov	x1, x2
    306c:	add	x4, sp, #0x18
    3070:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3074:	add	x3, x3, #0x3d8
    3078:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    307c:	add	x2, x2, #0x468
    3080:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3084:	mov	w1, w0
    3088:	mov	x0, #0x0                   	// #0
    308c:	cbz	w1, 30b0 <PyThread_free_lock@plt+0x780>
    3090:	ldr	x0, [sp, #24]
    3094:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3098:	cbnz	w0, 30b8 <PyThread_free_lock@plt+0x788>
    309c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    30a0:	ldr	x0, [x0, #4056]
    30a4:	ldr	x1, [x0]
    30a8:	add	x1, x1, #0x1
    30ac:	str	x1, [x0]
    30b0:	ldp	x29, x30, [sp], #32
    30b4:	ret
    30b8:	bl	26f0 <PyErr_Clear@plt>
    30bc:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    30c0:	ldr	x0, [x0, #4032]
    30c4:	ldr	x1, [x0]
    30c8:	add	x1, x1, #0x1
    30cc:	str	x1, [x0]
    30d0:	b	30b0 <PyThread_free_lock@plt+0x780>
    30d4:	stp	x29, x30, [sp, #-32]!
    30d8:	mov	x29, sp
    30dc:	str	x19, [sp, #16]
    30e0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    30e4:	mov	x19, x0
    30e8:	bl	2780 <PyThreadState_Next@plt>
    30ec:	cbnz	x0, 3108 <PyThread_free_lock@plt+0x7d8>
    30f0:	ldr	x0, [x19, #24]
    30f4:	cbz	x0, 3128 <PyThread_free_lock@plt+0x7f8>
    30f8:	ldrb	w0, [x0, #116]
    30fc:	ldr	x19, [sp, #16]
    3100:	ldp	x29, x30, [sp], #32
    3104:	ret
    3108:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    310c:	add	x1, x1, #0x478
    3110:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3114:	ldr	x0, [x0, #4000]
    3118:	ldr	x0, [x0]
    311c:	bl	2670 <PyErr_SetString@plt>
    3120:	mov	w0, #0xffffffff            	// #-1
    3124:	b	30fc <PyThread_free_lock@plt+0x7cc>
    3128:	bl	2730 <PyErr_Occurred@plt>
    312c:	cmp	x0, #0x0
    3130:	csetm	w0, ne  // ne = any
    3134:	b	30fc <PyThread_free_lock@plt+0x7cc>
    3138:	stp	x29, x30, [sp, #-16]!
    313c:	mov	x29, sp
    3140:	bl	30d4 <PyThread_free_lock@plt+0x7a4>
    3144:	tbnz	w0, #31, 3174 <PyThread_free_lock@plt+0x844>
    3148:	cbnz	w0, 3154 <PyThread_free_lock@plt+0x824>
    314c:	ldp	x29, x30, [sp], #16
    3150:	ret
    3154:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3158:	add	x1, x1, #0x4a0
    315c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3160:	ldr	x0, [x0, #4000]
    3164:	ldr	x0, [x0]
    3168:	bl	28c0 <PyErr_Format@plt>
    316c:	mov	w0, #0xffffffff            	// #-1
    3170:	b	314c <PyThread_free_lock@plt+0x81c>
    3174:	mov	w0, #0xffffffff            	// #-1
    3178:	b	314c <PyThread_free_lock@plt+0x81c>
    317c:	stp	x29, x30, [sp, #-32]!
    3180:	mov	x29, sp
    3184:	mov	x0, x1
    3188:	mov	x1, x2
    318c:	add	x4, sp, #0x18
    3190:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3194:	add	x3, x3, #0x3d8
    3198:	add	x3, x3, #0x10
    319c:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    31a0:	add	x2, x2, #0x4c0
    31a4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    31a8:	mov	w1, w0
    31ac:	mov	x0, #0x0                   	// #0
    31b0:	cbz	w1, 31e0 <PyThread_free_lock@plt+0x8b0>
    31b4:	ldr	x0, [sp, #24]
    31b8:	bl	2550 <_PyInterpreterID_LookUp@plt>
    31bc:	cbz	x0, 31e0 <PyThread_free_lock@plt+0x8b0>
    31c0:	bl	30d4 <PyThread_free_lock@plt+0x7a4>
    31c4:	tbnz	w0, #31, 3200 <PyThread_free_lock@plt+0x8d0>
    31c8:	cbnz	w0, 31e8 <PyThread_free_lock@plt+0x8b8>
    31cc:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    31d0:	ldr	x0, [x0, #4032]
    31d4:	ldr	x1, [x0]
    31d8:	add	x1, x1, #0x1
    31dc:	str	x1, [x0]
    31e0:	ldp	x29, x30, [sp], #32
    31e4:	ret
    31e8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    31ec:	ldr	x0, [x0, #4056]
    31f0:	ldr	x1, [x0]
    31f4:	add	x1, x1, #0x1
    31f8:	str	x1, [x0]
    31fc:	b	31e0 <PyThread_free_lock@plt+0x8b0>
    3200:	mov	x0, #0x0                   	// #0
    3204:	b	31e0 <PyThread_free_lock@plt+0x8b0>
    3208:	stp	x29, x30, [sp, #-32]!
    320c:	mov	x29, sp
    3210:	stp	x19, x20, [sp, #16]
    3214:	bl	27e0 <PyUnicode_AsUTF8@plt>
    3218:	mov	x19, x0
    321c:	cbz	x0, 3254 <PyThread_free_lock@plt+0x924>
    3220:	bl	2530 <strlen@plt>
    3224:	add	x0, x0, #0x1
    3228:	bl	2910 <PyMem_Malloc@plt>
    322c:	mov	x20, x0
    3230:	cbz	x0, 324c <PyThread_free_lock@plt+0x91c>
    3234:	mov	x1, x19
    3238:	bl	27f0 <strcpy@plt>
    323c:	mov	x0, x20
    3240:	ldp	x19, x20, [sp, #16]
    3244:	ldp	x29, x30, [sp], #32
    3248:	ret
    324c:	bl	2600 <PyErr_NoMemory@plt>
    3250:	b	323c <PyThread_free_lock@plt+0x90c>
    3254:	mov	x20, x0
    3258:	b	323c <PyThread_free_lock@plt+0x90c>
    325c:	stp	x29, x30, [sp, #-16]!
    3260:	mov	x29, sp
    3264:	ldr	x1, [x0, #16]
    3268:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    326c:	add	x0, x0, #0x4d0
    3270:	bl	24f0 <PyUnicode_FromFormat@plt>
    3274:	ldp	x29, x30, [sp], #16
    3278:	ret
    327c:	stp	x29, x30, [sp, #-16]!
    3280:	mov	x29, sp
    3284:	mov	x0, #0x0                   	// #0
    3288:	bl	2810 <_PyInterpreterID_New@plt>
    328c:	ldp	x29, x30, [sp], #16
    3290:	ret
    3294:	stp	x29, x30, [sp, #-48]!
    3298:	mov	x29, sp
    329c:	stp	x21, x22, [sp, #32]
    32a0:	mov	x0, #0x0                   	// #0
    32a4:	bl	2500 <PyList_New@plt>
    32a8:	mov	x22, x0
    32ac:	cbz	x0, 3380 <PyThread_free_lock@plt+0xa50>
    32b0:	stp	x19, x20, [sp, #16]
    32b4:	bl	28f0 <PyInterpreterState_Head@plt>
    32b8:	mov	x20, x0
    32bc:	cbnz	x0, 3314 <PyThread_free_lock@plt+0x9e4>
    32c0:	ldp	x19, x20, [sp, #16]
    32c4:	b	3380 <PyThread_free_lock@plt+0xa50>
    32c8:	ldr	x0, [x22]
    32cc:	sub	x0, x0, #0x1
    32d0:	str	x0, [x22]
    32d4:	cbz	x0, 32e4 <PyThread_free_lock@plt+0x9b4>
    32d8:	mov	x22, x19
    32dc:	ldp	x19, x20, [sp, #16]
    32e0:	b	3380 <PyThread_free_lock@plt+0xa50>
    32e4:	mov	x0, x22
    32e8:	bl	25e0 <_Py_Dealloc@plt>
    32ec:	mov	x22, x19
    32f0:	ldp	x19, x20, [sp, #16]
    32f4:	b	3380 <PyThread_free_lock@plt+0xa50>
    32f8:	mov	x0, x19
    32fc:	bl	25e0 <_Py_Dealloc@plt>
    3300:	tbnz	w21, #31, 334c <PyThread_free_lock@plt+0xa1c>
    3304:	mov	x0, x20
    3308:	bl	25f0 <PyInterpreterState_Next@plt>
    330c:	mov	x20, x0
    3310:	cbz	x0, 337c <PyThread_free_lock@plt+0xa4c>
    3314:	mov	x0, x20
    3318:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    331c:	mov	x19, x0
    3320:	cbz	x0, 32c8 <PyThread_free_lock@plt+0x998>
    3324:	mov	x2, x0
    3328:	mov	x1, #0x0                   	// #0
    332c:	mov	x0, x22
    3330:	bl	2580 <PyList_Insert@plt>
    3334:	mov	w21, w0
    3338:	ldr	x1, [x19]
    333c:	sub	x1, x1, #0x1
    3340:	str	x1, [x19]
    3344:	cbnz	x1, 3300 <PyThread_free_lock@plt+0x9d0>
    3348:	b	32f8 <PyThread_free_lock@plt+0x9c8>
    334c:	ldr	x0, [x22]
    3350:	sub	x0, x0, #0x1
    3354:	str	x0, [x22]
    3358:	cbz	x0, 3368 <PyThread_free_lock@plt+0xa38>
    335c:	mov	x22, #0x0                   	// #0
    3360:	ldp	x19, x20, [sp, #16]
    3364:	b	3380 <PyThread_free_lock@plt+0xa50>
    3368:	mov	x0, x22
    336c:	bl	25e0 <_Py_Dealloc@plt>
    3370:	mov	x22, #0x0                   	// #0
    3374:	ldp	x19, x20, [sp, #16]
    3378:	b	3380 <PyThread_free_lock@plt+0xa50>
    337c:	ldp	x19, x20, [sp, #16]
    3380:	mov	x0, x22
    3384:	ldp	x21, x22, [sp, #32]
    3388:	ldp	x29, x30, [sp], #48
    338c:	ret
    3390:	stp	x29, x30, [sp, #-48]!
    3394:	mov	x29, sp
    3398:	stp	x19, x20, [sp, #16]
    339c:	mov	x0, x1
    33a0:	mov	x3, #0x0                   	// #0
    33a4:	mov	x2, #0x0                   	// #0
    33a8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    33ac:	add	x1, x1, #0xa98
    33b0:	bl	2720 <PyArg_UnpackTuple@plt>
    33b4:	mov	x19, #0x0                   	// #0
    33b8:	cbz	w0, 33f8 <PyThread_free_lock@plt+0xac8>
    33bc:	mov	x0, #0x0                   	// #0
    33c0:	bl	2920 <PyThreadState_Swap@plt>
    33c4:	mov	x19, x0
    33c8:	bl	26b0 <Py_NewInterpreter@plt>
    33cc:	mov	x20, x0
    33d0:	mov	x0, x19
    33d4:	bl	2920 <PyThreadState_Swap@plt>
    33d8:	cbz	x20, 3408 <PyThread_free_lock@plt+0xad8>
    33dc:	ldr	x0, [x20, #16]
    33e0:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    33e4:	mov	x19, x0
    33e8:	cbz	x0, 3428 <PyThread_free_lock@plt+0xaf8>
    33ec:	mov	w1, #0x1                   	// #1
    33f0:	ldr	x0, [x20, #16]
    33f4:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    33f8:	mov	x0, x19
    33fc:	ldp	x19, x20, [sp, #16]
    3400:	ldp	x29, x30, [sp], #48
    3404:	ret
    3408:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    340c:	add	x1, x1, #0x4d8
    3410:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3414:	ldr	x0, [x0, #4000]
    3418:	ldr	x0, [x0]
    341c:	bl	2670 <PyErr_SetString@plt>
    3420:	mov	x19, x20
    3424:	b	33f8 <PyThread_free_lock@plt+0xac8>
    3428:	str	x21, [sp, #32]
    342c:	mov	x0, x20
    3430:	bl	2920 <PyThreadState_Swap@plt>
    3434:	mov	x21, x0
    3438:	mov	x0, x20
    343c:	bl	25d0 <Py_EndInterpreter@plt>
    3440:	mov	x0, x21
    3444:	bl	2920 <PyThreadState_Swap@plt>
    3448:	ldr	x21, [sp, #32]
    344c:	b	33f8 <PyThread_free_lock@plt+0xac8>
    3450:	stp	x29, x30, [sp, #-16]!
    3454:	mov	x29, sp
    3458:	cbnz	x1, 3484 <PyThread_free_lock@plt+0xb54>
    345c:	ldr	w0, [x0, #24]
    3460:	cmp	w0, #0x1
    3464:	b.eq	34a4 <PyThread_free_lock@plt+0xb74>  // b.none
    3468:	cmn	w0, #0x1
    346c:	b.eq	34b4 <PyThread_free_lock@plt+0xb84>  // b.none
    3470:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    3474:	add	x0, x0, #0x4f8
    3478:	bl	2850 <PyUnicode_InternFromString@plt>
    347c:	ldp	x29, x30, [sp], #16
    3480:	ret
    3484:	ldr	w5, [x0, #28]
    3488:	mov	w4, #0x1                   	// #1
    348c:	ldr	x3, [x0, #32]
    3490:	ldr	w2, [x1]
    3494:	ldr	x1, [x0, #16]
    3498:	ldr	x0, [x0, #8]
    349c:	bl	2b04 <PyThread_free_lock@plt+0x1d4>
    34a0:	b	347c <PyThread_free_lock@plt+0xb4c>
    34a4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    34a8:	add	x0, x0, #0xad0
    34ac:	bl	2850 <PyUnicode_InternFromString@plt>
    34b0:	b	347c <PyThread_free_lock@plt+0xb4c>
    34b4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    34b8:	add	x0, x0, #0xae0
    34bc:	bl	2850 <PyUnicode_InternFromString@plt>
    34c0:	b	347c <PyThread_free_lock@plt+0xb4c>
    34c4:	stp	x29, x30, [sp, #-16]!
    34c8:	mov	x29, sp
    34cc:	ldr	x0, [x0, #16]
    34d0:	bl	28e0 <PyLong_FromLongLong@plt>
    34d4:	ldp	x29, x30, [sp], #16
    34d8:	ret
    34dc:	stp	x29, x30, [sp, #-64]!
    34e0:	mov	x29, sp
    34e4:	stp	x19, x20, [sp, #16]
    34e8:	mov	w20, w2
    34ec:	sub	w2, w2, #0x2
    34f0:	cmp	w2, #0x1
    34f4:	b.hi	357c <PyThread_free_lock@plt+0xc4c>  // b.pmore
    34f8:	stp	x21, x22, [sp, #32]
    34fc:	mov	x19, x0
    3500:	mov	x21, x1
    3504:	ldr	x0, [x0, #8]
    3508:	adrp	x2, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    350c:	add	x2, x2, #0x238
    3510:	cmp	x0, x2
    3514:	b.eq	3524 <PyThread_free_lock@plt+0xbf4>  // b.none
    3518:	mov	x1, x2
    351c:	bl	28a0 <PyType_IsSubtype@plt>
    3520:	cbz	w0, 35a0 <PyThread_free_lock@plt+0xc70>
    3524:	ldr	x0, [x21, #8]
    3528:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    352c:	add	x1, x1, #0x238
    3530:	cmp	x0, x1
    3534:	b.eq	3548 <PyThread_free_lock@plt+0xc18>  // b.none
    3538:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    353c:	add	x1, x1, #0x238
    3540:	bl	28a0 <PyType_IsSubtype@plt>
    3544:	cbz	w0, 35f0 <PyThread_free_lock@plt+0xcc0>
    3548:	ldr	w1, [x19, #24]
    354c:	ldr	w0, [x21, #24]
    3550:	cmp	w1, w0
    3554:	b.eq	35bc <PyThread_free_lock@plt+0xc8c>  // b.none
    3558:	cmp	w20, #0x3
    355c:	b.eq	35d4 <PyThread_free_lock@plt+0xca4>  // b.none
    3560:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3564:	ldr	x19, [x19, #4032]
    3568:	ldr	x0, [x19]
    356c:	add	x0, x0, #0x1
    3570:	str	x0, [x19]
    3574:	ldp	x21, x22, [sp, #32]
    3578:	b	3590 <PyThread_free_lock@plt+0xc60>
    357c:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3580:	ldr	x19, [x19, #3992]
    3584:	ldr	x0, [x19]
    3588:	add	x0, x0, #0x1
    358c:	str	x0, [x19]
    3590:	mov	x0, x19
    3594:	ldp	x19, x20, [sp, #16]
    3598:	ldp	x29, x30, [sp], #64
    359c:	ret
    35a0:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    35a4:	ldr	x19, [x19, #3992]
    35a8:	ldr	x0, [x19]
    35ac:	add	x0, x0, #0x1
    35b0:	str	x0, [x19]
    35b4:	ldp	x21, x22, [sp, #32]
    35b8:	b	3590 <PyThread_free_lock@plt+0xc60>
    35bc:	ldr	x1, [x19, #16]
    35c0:	ldr	x0, [x21, #16]
    35c4:	cmp	x1, x0
    35c8:	b.ne	3558 <PyThread_free_lock@plt+0xc28>  // b.any
    35cc:	cmp	w20, #0x2
    35d0:	b.ne	3560 <PyThread_free_lock@plt+0xc30>  // b.any
    35d4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    35d8:	ldr	x19, [x19, #4056]
    35dc:	ldr	x0, [x19]
    35e0:	add	x0, x0, #0x1
    35e4:	str	x0, [x19]
    35e8:	ldp	x21, x22, [sp, #32]
    35ec:	b	3590 <PyThread_free_lock@plt+0xc60>
    35f0:	ldr	x0, [x21, #8]
    35f4:	ldr	x0, [x0, #168]
    35f8:	tbz	w0, #24, 364c <PyThread_free_lock@plt+0xd1c>
    35fc:	add	x1, sp, #0x3c
    3600:	mov	x0, x21
    3604:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    3608:	cmn	x0, #0x1
    360c:	b.eq	3638 <PyThread_free_lock@plt+0xd08>  // b.none
    3610:	ldr	w1, [sp, #60]
    3614:	cmp	w1, #0x0
    3618:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    361c:	b.lt	3558 <PyThread_free_lock@plt+0xc28>  // b.tstop
    3620:	ldr	x1, [x19, #16]
    3624:	cmp	x1, x0
    3628:	b.ne	3558 <PyThread_free_lock@plt+0xc28>  // b.any
    362c:	cmp	w20, #0x2
    3630:	b.eq	35d4 <PyThread_free_lock@plt+0xca4>  // b.none
    3634:	b	3560 <PyThread_free_lock@plt+0xc30>
    3638:	bl	2730 <PyErr_Occurred@plt>
    363c:	cbz	x0, 3558 <PyThread_free_lock@plt+0xc28>
    3640:	mov	x19, #0x0                   	// #0
    3644:	ldp	x21, x22, [sp, #32]
    3648:	b	3590 <PyThread_free_lock@plt+0xc60>
    364c:	mov	x0, x21
    3650:	bl	2880 <PyNumber_Check@plt>
    3654:	cbnz	w0, 3674 <PyThread_free_lock@plt+0xd44>
    3658:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    365c:	ldr	x19, [x19, #3992]
    3660:	ldr	x0, [x19]
    3664:	add	x0, x0, #0x1
    3668:	str	x0, [x19]
    366c:	ldp	x21, x22, [sp, #32]
    3670:	b	3590 <PyThread_free_lock@plt+0xc60>
    3674:	ldr	x0, [x19, #16]
    3678:	bl	28e0 <PyLong_FromLongLong@plt>
    367c:	mov	x22, x0
    3680:	mov	x19, x0
    3684:	cbz	x0, 36c0 <PyThread_free_lock@plt+0xd90>
    3688:	mov	w2, w20
    368c:	mov	x1, x21
    3690:	bl	2650 <PyObject_RichCompare@plt>
    3694:	mov	x19, x0
    3698:	ldr	x0, [x22]
    369c:	sub	x0, x0, #0x1
    36a0:	str	x0, [x22]
    36a4:	cbz	x0, 36b0 <PyThread_free_lock@plt+0xd80>
    36a8:	ldp	x21, x22, [sp, #32]
    36ac:	b	3590 <PyThread_free_lock@plt+0xc60>
    36b0:	mov	x0, x22
    36b4:	bl	25e0 <_Py_Dealloc@plt>
    36b8:	ldp	x21, x22, [sp, #32]
    36bc:	b	3590 <PyThread_free_lock@plt+0xc60>
    36c0:	ldp	x21, x22, [sp, #32]
    36c4:	b	3590 <PyThread_free_lock@plt+0xc60>
    36c8:	stp	x29, x30, [sp, #-32]!
    36cc:	mov	x29, sp
    36d0:	stp	x19, x20, [sp, #16]
    36d4:	ldr	x0, [x0, #16]
    36d8:	bl	28e0 <PyLong_FromLongLong@plt>
    36dc:	cbz	x0, 3718 <PyThread_free_lock@plt+0xde8>
    36e0:	mov	x19, x0
    36e4:	bl	27a0 <PyObject_Hash@plt>
    36e8:	mov	x20, x0
    36ec:	ldr	x1, [x19]
    36f0:	sub	x1, x1, #0x1
    36f4:	str	x1, [x19]
    36f8:	cbz	x1, 370c <PyThread_free_lock@plt+0xddc>
    36fc:	mov	x0, x20
    3700:	ldp	x19, x20, [sp, #16]
    3704:	ldp	x29, x30, [sp], #32
    3708:	ret
    370c:	mov	x0, x19
    3710:	bl	25e0 <_Py_Dealloc@plt>
    3714:	b	36fc <PyThread_free_lock@plt+0xdcc>
    3718:	mov	x20, #0xffffffffffffffff    	// #-1
    371c:	b	36fc <PyThread_free_lock@plt+0xdcc>
    3720:	stp	x29, x30, [sp, #-32]!
    3724:	mov	x29, sp
    3728:	str	x19, [sp, #16]
    372c:	mov	x19, x0
    3730:	ldr	x0, [x0, #8]
    3734:	bl	2630 <_PyType_Name@plt>
    3738:	mov	x1, x0
    373c:	ldr	w3, [x19, #24]
    3740:	cmp	w3, #0x1
    3744:	b.eq	3774 <PyThread_free_lock@plt+0xe44>  // b.none
    3748:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    374c:	add	x0, x0, #0x530
    3750:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3754:	add	x2, x2, #0x518
    3758:	cmn	w3, #0x1
    375c:	csel	x0, x2, x0, eq  // eq = none
    3760:	ldr	x2, [x19, #16]
    3764:	bl	24f0 <PyUnicode_FromFormat@plt>
    3768:	ldr	x19, [sp, #16]
    376c:	ldp	x29, x30, [sp], #32
    3770:	ret
    3774:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3778:	add	x0, x2, #0x500
    377c:	b	3760 <PyThread_free_lock@plt+0xe30>
    3780:	sub	sp, sp, #0x40
    3784:	stp	x29, x30, [sp, #16]
    3788:	add	x29, sp, #0x10
    378c:	mov	x0, x1
    3790:	mov	x1, x2
    3794:	mov	w2, #0xffffffff            	// #-1
    3798:	str	w2, [sp, #40]
    379c:	str	w2, [sp, #44]
    37a0:	str	wzr, [sp, #48]
    37a4:	str	wzr, [sp, #52]
    37a8:	add	x2, sp, #0x34
    37ac:	str	x2, [sp, #8]
    37b0:	add	x2, sp, #0x30
    37b4:	str	x2, [sp]
    37b8:	add	x7, sp, #0x2c
    37bc:	add	x6, sp, #0x28
    37c0:	add	x5, sp, #0x38
    37c4:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    37c8:	add	x4, x4, #0xd38
    37cc:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    37d0:	add	x3, x3, #0x3d8
    37d4:	add	x3, x3, #0x20
    37d8:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    37dc:	add	x2, x2, #0x538
    37e0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    37e4:	cbz	w0, 3870 <PyThread_free_lock@plt+0xf40>
    37e8:	ldr	w0, [sp, #40]
    37ec:	cbnz	w0, 3854 <PyThread_free_lock@plt+0xf24>
    37f0:	ldr	w0, [sp, #44]
    37f4:	cbz	w0, 3834 <PyThread_free_lock@plt+0xf04>
    37f8:	ldr	w0, [sp, #44]
    37fc:	cmp	w0, #0x1
    3800:	csetm	w2, eq  // eq = none
    3804:	ldr	w5, [sp, #52]
    3808:	ldr	w4, [sp, #48]
    380c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3810:	add	x3, x3, #0x930
    3814:	add	x3, x3, #0x8
    3818:	ldr	x1, [sp, #56]
    381c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3820:	add	x0, x0, #0x238
    3824:	bl	2b04 <PyThread_free_lock@plt+0x1d4>
    3828:	ldp	x29, x30, [sp, #16]
    382c:	add	sp, sp, #0x40
    3830:	ret
    3834:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3838:	add	x1, x1, #0x558
    383c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3840:	ldr	x0, [x0, #4016]
    3844:	ldr	x0, [x0]
    3848:	bl	2670 <PyErr_SetString@plt>
    384c:	mov	x0, #0x0                   	// #0
    3850:	b	3828 <PyThread_free_lock@plt+0xef8>
    3854:	cmp	w0, #0x1
    3858:	b.ne	37f8 <PyThread_free_lock@plt+0xec8>  // b.any
    385c:	ldr	w0, [sp, #44]
    3860:	add	w0, w0, #0x1
    3864:	cmp	w0, #0x1
    3868:	cset	w2, ls  // ls = plast
    386c:	b	3804 <PyThread_free_lock@plt+0xed4>
    3870:	mov	x0, #0x0                   	// #0
    3874:	b	3828 <PyThread_free_lock@plt+0xef8>
    3878:	stp	x29, x30, [sp, #-48]!
    387c:	mov	x29, sp
    3880:	stp	x19, x20, [sp, #16]
    3884:	str	x21, [sp, #32]
    3888:	mov	x21, x0
    388c:	mov	x20, x1
    3890:	mov	x19, x2
    3894:	mov	w1, #0x1                   	// #1
    3898:	ldr	x0, [x0]
    389c:	bl	2640 <PyThread_acquire_lock@plt>
    38a0:	cbz	x19, 38a8 <PyThread_free_lock@plt+0xf78>
    38a4:	str	xzr, [x19]
    38a8:	ldr	x2, [x21, #8]
    38ac:	cbz	x2, 38c4 <PyThread_free_lock@plt+0xf94>
    38b0:	ldr	x0, [x2]
    38b4:	cmp	x20, x0
    38b8:	b.eq	3910 <PyThread_free_lock@plt+0xfe0>  // b.none
    38bc:	ldr	x2, [x2, #16]
    38c0:	cbnz	x2, 38b0 <PyThread_free_lock@plt+0xf80>
    38c4:	mov	x2, x20
    38c8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    38cc:	add	x1, x1, #0x390
    38d0:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    38d4:	ldr	x0, [x0, #2352]
    38d8:	bl	28c0 <PyErr_Format@plt>
    38dc:	mov	x20, #0x0                   	// #0
    38e0:	b	3930 <PyThread_free_lock@plt+0x1000>
    38e4:	mov	x2, x20
    38e8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    38ec:	add	x1, x1, #0x580
    38f0:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    38f4:	ldr	x0, [x0, #2392]
    38f8:	bl	28c0 <PyErr_Format@plt>
    38fc:	mov	x20, #0x0                   	// #0
    3900:	b	3930 <PyThread_free_lock@plt+0x1000>
    3904:	ldr	x0, [x21]
    3908:	bl	27b0 <PyThread_release_lock@plt>
    390c:	b	393c <PyThread_free_lock@plt+0x100c>
    3910:	ldr	x1, [x2, #8]
    3914:	cbz	x1, 38e4 <PyThread_free_lock@plt+0xfb4>
    3918:	ldr	w0, [x1, #24]
    391c:	cbz	w0, 38e4 <PyThread_free_lock@plt+0xfb4>
    3920:	cbz	x19, 392c <PyThread_free_lock@plt+0xffc>
    3924:	ldr	x0, [x21]
    3928:	str	x0, [x19]
    392c:	ldr	x20, [x2, #8]
    3930:	cbz	x19, 3904 <PyThread_free_lock@plt+0xfd4>
    3934:	ldr	x0, [x19]
    3938:	cbz	x0, 3904 <PyThread_free_lock@plt+0xfd4>
    393c:	mov	x0, x20
    3940:	ldp	x19, x20, [sp, #16]
    3944:	ldr	x21, [sp, #32]
    3948:	ldp	x29, x30, [sp], #48
    394c:	ret
    3950:	stp	x29, x30, [sp, #-48]!
    3954:	mov	x29, sp
    3958:	stp	x19, x20, [sp, #16]
    395c:	str	x21, [sp, #32]
    3960:	mov	x20, x0
    3964:	mov	x0, x1
    3968:	mov	w21, w2
    396c:	cbz	w2, 398c <PyThread_free_lock@plt+0x105c>
    3970:	ldr	x19, [x20, #16]
    3974:	cbnz	x19, 3998 <PyThread_free_lock@plt+0x1068>
    3978:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    397c:	cbz	x0, 39c8 <PyThread_free_lock@plt+0x1098>
    3980:	cbz	w21, 39f0 <PyThread_free_lock@plt+0x10c0>
    3984:	str	x0, [x20, #16]
    3988:	b	39bc <PyThread_free_lock@plt+0x108c>
    398c:	ldr	x19, [x20, #24]
    3990:	b	3974 <PyThread_free_lock@plt+0x1044>
    3994:	mov	x19, x1
    3998:	ldr	x1, [x19, #8]
    399c:	cmp	x0, x1
    39a0:	b.eq	3a04 <PyThread_free_lock@plt+0x10d4>  // b.none
    39a4:	ldr	x1, [x19]
    39a8:	cbnz	x1, 3994 <PyThread_free_lock@plt+0x1064>
    39ac:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    39b0:	cbz	x0, 39c8 <PyThread_free_lock@plt+0x1098>
    39b4:	str	x0, [x19]
    39b8:	cbz	w21, 39f4 <PyThread_free_lock@plt+0x10c4>
    39bc:	ldr	x1, [x20]
    39c0:	add	x1, x1, #0x1
    39c4:	str	x1, [x20]
    39c8:	cmp	x0, #0x0
    39cc:	csetm	w0, eq  // eq = none
    39d0:	b	3a10 <PyThread_free_lock@plt+0x10e0>
    39d4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    39d8:	add	x1, x1, #0x598
    39dc:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    39e0:	ldr	x0, [x0, #2392]
    39e4:	bl	2670 <PyErr_SetString@plt>
    39e8:	mov	w0, #0xffffffff            	// #-1
    39ec:	b	3a10 <PyThread_free_lock@plt+0x10e0>
    39f0:	str	x0, [x20, #24]
    39f4:	ldr	x1, [x20, #8]
    39f8:	add	x1, x1, #0x1
    39fc:	str	x1, [x20, #8]
    3a00:	b	39c8 <PyThread_free_lock@plt+0x1098>
    3a04:	ldr	w0, [x19, #16]
    3a08:	cbz	w0, 39d4 <PyThread_free_lock@plt+0x10a4>
    3a0c:	mov	w0, #0x0                   	// #0
    3a10:	ldp	x19, x20, [sp, #16]
    3a14:	ldr	x21, [sp, #32]
    3a18:	ldp	x29, x30, [sp], #48
    3a1c:	ret
    3a20:	sub	sp, sp, #0x70
    3a24:	stp	x29, x30, [sp, #16]
    3a28:	add	x29, sp, #0x10
    3a2c:	mov	x0, x1
    3a30:	mov	x1, x2
    3a34:	str	wzr, [sp, #100]
    3a38:	str	wzr, [sp, #96]
    3a3c:	str	wzr, [sp, #92]
    3a40:	add	x2, sp, #0x5c
    3a44:	str	x2, [sp]
    3a48:	add	x7, sp, #0x60
    3a4c:	add	x6, sp, #0x64
    3a50:	add	x5, sp, #0x68
    3a54:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    3a58:	add	x4, x4, #0xd38
    3a5c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3a60:	add	x3, x3, #0x3d8
    3a64:	add	x3, x3, #0x50
    3a68:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3a6c:	add	x2, x2, #0x5b0
    3a70:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3a74:	cbz	w0, 3c90 <PyThread_free_lock@plt+0x1360>
    3a78:	stp	x19, x20, [sp, #32]
    3a7c:	stp	x21, x22, [sp, #48]
    3a80:	str	x23, [sp, #64]
    3a84:	ldr	w0, [sp, #100]
    3a88:	ldr	w1, [sp, #96]
    3a8c:	orr	w0, w0, w1
    3a90:	cbnz	w0, 3aa0 <PyThread_free_lock@plt+0x1170>
    3a94:	mov	w0, #0x1                   	// #1
    3a98:	str	w0, [sp, #100]
    3a9c:	str	w0, [sp, #96]
    3aa0:	ldr	x19, [sp, #104]
    3aa4:	ldr	w21, [sp, #100]
    3aa8:	ldr	w23, [sp, #96]
    3aac:	bl	2800 <_PyInterpreterState_Get@plt>
    3ab0:	mov	x20, x0
    3ab4:	cbz	x0, 3c98 <PyThread_free_lock@plt+0x1368>
    3ab8:	str	xzr, [sp, #80]
    3abc:	add	x2, sp, #0x50
    3ac0:	mov	x1, x19
    3ac4:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3ac8:	add	x0, x0, #0x930
    3acc:	add	x0, x0, #0x8
    3ad0:	bl	3878 <PyThread_free_lock@plt+0xf48>
    3ad4:	mov	x19, x0
    3ad8:	cbz	x0, 3c98 <PyThread_free_lock@plt+0x1368>
    3adc:	mov	x0, x20
    3ae0:	bl	2680 <PyInterpreterState_GetID@plt>
    3ae4:	mov	x20, x0
    3ae8:	sub	w23, w21, w23
    3aec:	mov	w1, #0x1                   	// #1
    3af0:	ldr	x0, [x19]
    3af4:	bl	2640 <PyThread_acquire_lock@plt>
    3af8:	ldr	w0, [x19, #24]
    3afc:	cbz	w0, 3b28 <PyThread_free_lock@plt+0x11f8>
    3b00:	ldr	x22, [x19, #16]
    3b04:	tbz	w23, #31, 3b60 <PyThread_free_lock@plt+0x1230>
    3b08:	ldr	x21, [x22, #24]
    3b0c:	cbnz	x21, 3c38 <PyThread_free_lock@plt+0x1308>
    3b10:	mov	x0, x20
    3b14:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    3b18:	mov	x21, x0
    3b1c:	cbz	x0, 3b3c <PyThread_free_lock@plt+0x120c>
    3b20:	str	x21, [x22, #24]
    3b24:	b	3c60 <PyThread_free_lock@plt+0x1330>
    3b28:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3b2c:	add	x1, x1, #0x598
    3b30:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3b34:	ldr	x0, [x0, #2392]
    3b38:	bl	2670 <PyErr_SetString@plt>
    3b3c:	ldr	x0, [x19]
    3b40:	bl	27b0 <PyThread_release_lock@plt>
    3b44:	ldr	x0, [sp, #80]
    3b48:	bl	27b0 <PyThread_release_lock@plt>
    3b4c:	mov	x0, #0x0                   	// #0
    3b50:	ldp	x19, x20, [sp, #32]
    3b54:	ldp	x21, x22, [sp, #48]
    3b58:	ldr	x23, [sp, #64]
    3b5c:	b	3c28 <PyThread_free_lock@plt+0x12f8>
    3b60:	ldr	x21, [x22, #16]
    3b64:	cbnz	x21, 3b84 <PyThread_free_lock@plt+0x1254>
    3b68:	mov	x0, x20
    3b6c:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    3b70:	mov	x21, x0
    3b74:	cbz	x0, 3b3c <PyThread_free_lock@plt+0x120c>
    3b78:	str	x21, [x22, #16]
    3b7c:	b	3bac <PyThread_free_lock@plt+0x127c>
    3b80:	mov	x21, x0
    3b84:	ldr	x0, [x21, #8]
    3b88:	cmp	x20, x0
    3b8c:	b.eq	3bb8 <PyThread_free_lock@plt+0x1288>  // b.none
    3b90:	ldr	x0, [x21]
    3b94:	cbnz	x0, 3b80 <PyThread_free_lock@plt+0x1250>
    3b98:	mov	x0, x20
    3b9c:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    3ba0:	cbz	x0, 3b3c <PyThread_free_lock@plt+0x120c>
    3ba4:	str	x0, [x21]
    3ba8:	mov	x21, x0
    3bac:	ldr	x0, [x22]
    3bb0:	add	x0, x0, #0x1
    3bb4:	str	x0, [x22]
    3bb8:	str	wzr, [x21, #16]
    3bbc:	ldr	x0, [x22]
    3bc0:	sub	x0, x0, #0x1
    3bc4:	str	x0, [x22]
    3bc8:	cbz	w23, 3b08 <PyThread_free_lock@plt+0x11d8>
    3bcc:	ldr	x1, [x19, #16]
    3bd0:	ldr	x2, [x1]
    3bd4:	mov	w0, #0x1                   	// #1
    3bd8:	cbnz	x2, 3bf4 <PyThread_free_lock@plt+0x12c4>
    3bdc:	ldr	x2, [x1, #8]
    3be0:	mov	w0, #0x1                   	// #1
    3be4:	cbnz	x2, 3bf4 <PyThread_free_lock@plt+0x12c4>
    3be8:	ldr	x2, [x1, #16]
    3bec:	mov	w0, #0x0                   	// #0
    3bf0:	cbz	x2, 3c80 <PyThread_free_lock@plt+0x1350>
    3bf4:	str	w0, [x19, #24]
    3bf8:	ldr	x0, [x19]
    3bfc:	bl	27b0 <PyThread_release_lock@plt>
    3c00:	ldr	x0, [sp, #80]
    3c04:	bl	27b0 <PyThread_release_lock@plt>
    3c08:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    3c0c:	ldr	x0, [x0, #4048]
    3c10:	ldr	x1, [x0]
    3c14:	add	x1, x1, #0x1
    3c18:	str	x1, [x0]
    3c1c:	ldp	x19, x20, [sp, #32]
    3c20:	ldp	x21, x22, [sp, #48]
    3c24:	ldr	x23, [sp, #64]
    3c28:	ldp	x29, x30, [sp, #16]
    3c2c:	add	sp, sp, #0x70
    3c30:	ret
    3c34:	mov	x21, x0
    3c38:	ldr	x0, [x21, #8]
    3c3c:	cmp	x20, x0
    3c40:	b.eq	3c6c <PyThread_free_lock@plt+0x133c>  // b.none
    3c44:	ldr	x0, [x21]
    3c48:	cbnz	x0, 3c34 <PyThread_free_lock@plt+0x1304>
    3c4c:	mov	x0, x20
    3c50:	bl	2e08 <PyThread_free_lock@plt+0x4d8>
    3c54:	cbz	x0, 3b3c <PyThread_free_lock@plt+0x120c>
    3c58:	str	x0, [x21]
    3c5c:	mov	x21, x0
    3c60:	ldr	x0, [x22, #8]
    3c64:	add	x0, x0, #0x1
    3c68:	str	x0, [x22, #8]
    3c6c:	str	wzr, [x21, #16]
    3c70:	ldr	x0, [x22, #8]
    3c74:	sub	x0, x0, #0x1
    3c78:	str	x0, [x22, #8]
    3c7c:	b	3bcc <PyThread_free_lock@plt+0x129c>
    3c80:	ldr	x0, [x1, #24]
    3c84:	cmp	x0, #0x0
    3c88:	cset	w0, eq  // eq = none
    3c8c:	b	3bf4 <PyThread_free_lock@plt+0x12c4>
    3c90:	mov	x0, #0x0                   	// #0
    3c94:	b	3c28 <PyThread_free_lock@plt+0x12f8>
    3c98:	mov	x0, #0x0                   	// #0
    3c9c:	ldp	x19, x20, [sp, #32]
    3ca0:	ldp	x21, x22, [sp, #48]
    3ca4:	ldr	x23, [sp, #64]
    3ca8:	b	3c28 <PyThread_free_lock@plt+0x12f8>
    3cac:	stp	x29, x30, [sp, #-48]!
    3cb0:	mov	x29, sp
    3cb4:	stp	x19, x20, [sp, #16]
    3cb8:	stp	x21, x22, [sp, #32]
    3cbc:	mov	x19, x0
    3cc0:	bl	2ac4 <PyThread_free_lock@plt+0x194>
    3cc4:	mov	w1, #0x1                   	// #1
    3cc8:	ldr	x0, [x19]
    3ccc:	bl	2640 <PyThread_acquire_lock@plt>
    3cd0:	ldr	x20, [x19, #8]
    3cd4:	ldr	x21, [x20, #8]
    3cd8:	cbnz	x21, 3d84 <PyThread_free_lock@plt+0x1454>
    3cdc:	str	xzr, [x20]
    3ce0:	str	xzr, [x20, #8]
    3ce4:	str	xzr, [x20, #16]
    3ce8:	mov	x0, x20
    3cec:	bl	2590 <PyMem_Free@plt>
    3cf0:	ldr	x20, [x19, #16]
    3cf4:	ldr	x21, [x20, #16]
    3cf8:	cbz	x21, 3d0c <PyThread_free_lock@plt+0x13dc>
    3cfc:	mov	x0, x21
    3d00:	ldr	x21, [x21]
    3d04:	bl	2590 <PyMem_Free@plt>
    3d08:	cbnz	x21, 3cfc <PyThread_free_lock@plt+0x13cc>
    3d0c:	str	xzr, [x20, #16]
    3d10:	str	xzr, [x20]
    3d14:	ldr	x21, [x20, #24]
    3d18:	cbz	x21, 3d2c <PyThread_free_lock@plt+0x13fc>
    3d1c:	mov	x0, x21
    3d20:	ldr	x21, [x21]
    3d24:	bl	2590 <PyMem_Free@plt>
    3d28:	cbnz	x21, 3d1c <PyThread_free_lock@plt+0x13ec>
    3d2c:	str	xzr, [x20, #24]
    3d30:	str	xzr, [x20, #8]
    3d34:	mov	x0, x20
    3d38:	bl	2590 <PyMem_Free@plt>
    3d3c:	ldr	x0, [x19]
    3d40:	bl	27b0 <PyThread_release_lock@plt>
    3d44:	ldr	x0, [x19]
    3d48:	bl	2930 <PyThread_free_lock@plt>
    3d4c:	mov	x0, x19
    3d50:	bl	2590 <PyMem_Free@plt>
    3d54:	ldp	x19, x20, [sp, #16]
    3d58:	ldp	x21, x22, [sp, #32]
    3d5c:	ldp	x29, x30, [sp], #48
    3d60:	ret
    3d64:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3d68:	ldr	x0, [x22]
    3d6c:	bl	2590 <PyMem_Free@plt>
    3d70:	str	xzr, [x22]
    3d74:	str	xzr, [x22, #8]
    3d78:	mov	x0, x22
    3d7c:	bl	2590 <PyMem_Free@plt>
    3d80:	cbz	x21, 3cdc <PyThread_free_lock@plt+0x13ac>
    3d84:	mov	x22, x21
    3d88:	ldr	x21, [x21, #8]
    3d8c:	ldr	x0, [x22]
    3d90:	cbnz	x0, 3d64 <PyThread_free_lock@plt+0x1434>
    3d94:	b	3d74 <PyThread_free_lock@plt+0x1444>
    3d98:	sub	sp, sp, #0x70
    3d9c:	stp	x29, x30, [sp, #16]
    3da0:	add	x29, sp, #0x10
    3da4:	stp	x19, x20, [sp, #32]
    3da8:	mov	x0, x1
    3dac:	mov	x1, x2
    3db0:	str	wzr, [sp, #100]
    3db4:	str	wzr, [sp, #96]
    3db8:	str	wzr, [sp, #92]
    3dbc:	add	x2, sp, #0x5c
    3dc0:	str	x2, [sp]
    3dc4:	add	x7, sp, #0x60
    3dc8:	add	x6, sp, #0x64
    3dcc:	add	x5, sp, #0x68
    3dd0:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    3dd4:	add	x4, x4, #0xd38
    3dd8:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3ddc:	add	x3, x3, #0x3d8
    3de0:	add	x3, x3, #0x78
    3de4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3de8:	add	x2, x2, #0x5c8
    3dec:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3df0:	mov	x20, #0x0                   	// #0
    3df4:	cbz	w0, 408c <PyThread_free_lock@plt+0x175c>
    3df8:	stp	x21, x22, [sp, #48]
    3dfc:	str	x23, [sp, #64]
    3e00:	ldr	x22, [sp, #104]
    3e04:	ldr	w21, [sp, #100]
    3e08:	ldr	w0, [sp, #96]
    3e0c:	sub	w21, w21, w0
    3e10:	ldr	w23, [sp, #92]
    3e14:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3e18:	add	x0, x0, #0x930
    3e1c:	add	x19, x0, #0x8
    3e20:	mov	w1, #0x1                   	// #1
    3e24:	ldr	x0, [x0, #8]
    3e28:	bl	2640 <PyThread_acquire_lock@plt>
    3e2c:	ldr	x19, [x19, #8]
    3e30:	cbz	x19, 3e48 <PyThread_free_lock@plt+0x1518>
    3e34:	ldr	x0, [x19]
    3e38:	cmp	x22, x0
    3e3c:	b.eq	3fc8 <PyThread_free_lock@plt+0x1698>  // b.none
    3e40:	ldr	x19, [x19, #16]
    3e44:	cbnz	x19, 3e34 <PyThread_free_lock@plt+0x1504>
    3e48:	mov	x2, x22
    3e4c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3e50:	add	x1, x1, #0x390
    3e54:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3e58:	ldr	x0, [x0, #2352]
    3e5c:	bl	28c0 <PyErr_Format@plt>
    3e60:	b	3edc <PyThread_free_lock@plt+0x15ac>
    3e64:	mov	x2, x22
    3e68:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3e6c:	add	x1, x1, #0x580
    3e70:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3e74:	ldr	x0, [x0, #2392]
    3e78:	bl	28c0 <PyErr_Format@plt>
    3e7c:	b	3edc <PyThread_free_lock@plt+0x15ac>
    3e80:	mov	x2, x22
    3e84:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3e88:	add	x1, x1, #0x580
    3e8c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3e90:	ldr	x0, [x0, #2392]
    3e94:	bl	28c0 <PyErr_Format@plt>
    3e98:	b	3edc <PyThread_free_lock@plt+0x15ac>
    3e9c:	mov	w1, #0x1                   	// #1
    3ea0:	ldr	x0, [x20]
    3ea4:	bl	2640 <PyThread_acquire_lock@plt>
    3ea8:	ldr	w0, [x20, #24]
    3eac:	cbz	w0, 3eb8 <PyThread_free_lock@plt+0x1588>
    3eb0:	cbnz	w23, 4008 <PyThread_free_lock@plt+0x16d8>
    3eb4:	b	3ff8 <PyThread_free_lock@plt+0x16c8>
    3eb8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3ebc:	add	x1, x1, #0x598
    3ec0:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3ec4:	ldr	x0, [x0, #2392]
    3ec8:	bl	2670 <PyErr_SetString@plt>
    3ecc:	ldr	x0, [x20]
    3ed0:	bl	27b0 <PyThread_release_lock@plt>
    3ed4:	cmp	w21, #0x1
    3ed8:	b.eq	3f10 <PyThread_free_lock@plt+0x15e0>  // b.none
    3edc:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3ee0:	ldr	x0, [x0, #2360]
    3ee4:	bl	27b0 <PyThread_release_lock@plt>
    3ee8:	mov	x20, #0x0                   	// #0
    3eec:	ldp	x21, x22, [sp, #48]
    3ef0:	ldr	x23, [sp, #64]
    3ef4:	b	408c <PyThread_free_lock@plt+0x175c>
    3ef8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3efc:	add	x1, x1, #0x5e0
    3f00:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3f04:	ldr	x0, [x0, #2400]
    3f08:	bl	2670 <PyErr_SetString@plt>
    3f0c:	b	3ecc <PyThread_free_lock@plt+0x159c>
    3f10:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3f14:	ldr	x0, [x0, #2400]
    3f18:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3f1c:	cbz	w0, 3edc <PyThread_free_lock@plt+0x15ac>
    3f20:	ldr	x0, [x19, #8]
    3f24:	ldr	x20, [x0, #32]
    3f28:	cbnz	x20, 3f88 <PyThread_free_lock@plt+0x1658>
    3f2c:	bl	26f0 <PyErr_Clear@plt>
    3f30:	ldr	x21, [x19, #8]
    3f34:	cbz	x21, 40a0 <PyThread_free_lock@plt+0x1770>
    3f38:	mov	w1, #0x1                   	// #1
    3f3c:	ldr	x0, [x21]
    3f40:	bl	2640 <PyThread_acquire_lock@plt>
    3f44:	ldr	x0, [x21, #32]
    3f48:	cbz	x0, 3fa4 <PyThread_free_lock@plt+0x1674>
    3f4c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3f50:	add	x1, x1, #0x610
    3f54:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3f58:	ldr	x0, [x0, #2392]
    3f5c:	bl	2670 <PyErr_SetString@plt>
    3f60:	mov	w19, #0xffffffff            	// #-1
    3f64:	ldr	x0, [x21]
    3f68:	bl	27b0 <PyThread_release_lock@plt>
    3f6c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3f70:	ldr	x0, [x0, #2360]
    3f74:	bl	27b0 <PyThread_release_lock@plt>
    3f78:	cbz	w19, 4070 <PyThread_free_lock@plt+0x1740>
    3f7c:	ldp	x21, x22, [sp, #48]
    3f80:	ldr	x23, [sp, #64]
    3f84:	b	408c <PyThread_free_lock@plt+0x175c>
    3f88:	mov	x2, x22
    3f8c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3f90:	add	x1, x1, #0x580
    3f94:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    3f98:	ldr	x0, [x0, #2392]
    3f9c:	bl	28c0 <PyErr_Format@plt>
    3fa0:	b	3edc <PyThread_free_lock@plt+0x15ac>
    3fa4:	mov	x0, #0x8                   	// #8
    3fa8:	bl	2910 <PyMem_Malloc@plt>
    3fac:	str	x0, [x21, #32]
    3fb0:	cbz	x0, 3fc0 <PyThread_free_lock@plt+0x1690>
    3fb4:	str	x19, [x0]
    3fb8:	mov	w19, #0x0                   	// #0
    3fbc:	b	3f64 <PyThread_free_lock@plt+0x1634>
    3fc0:	mov	w19, #0xffffffff            	// #-1
    3fc4:	b	3f64 <PyThread_free_lock@plt+0x1634>
    3fc8:	ldr	x20, [x19, #8]
    3fcc:	cbz	x20, 3e64 <PyThread_free_lock@plt+0x1534>
    3fd0:	cmp	w23, #0x0
    3fd4:	ccmp	w21, #0x1, #0x0, eq  // eq = none
    3fd8:	b.ne	3e9c <PyThread_free_lock@plt+0x156c>  // b.any
    3fdc:	ldr	x0, [x20, #32]
    3fe0:	cbnz	x0, 3e80 <PyThread_free_lock@plt+0x1550>
    3fe4:	mov	w1, #0x1                   	// #1
    3fe8:	ldr	x0, [x20]
    3fec:	bl	2640 <PyThread_acquire_lock@plt>
    3ff0:	ldr	w0, [x20, #24]
    3ff4:	cbz	w0, 3eb8 <PyThread_free_lock@plt+0x1588>
    3ff8:	ldr	x0, [x20, #8]
    3ffc:	ldr	x0, [x0]
    4000:	cmp	x0, #0x0
    4004:	b.gt	3ef8 <PyThread_free_lock@plt+0x15c8>
    4008:	str	wzr, [x20, #24]
    400c:	ldr	x0, [x20, #16]
    4010:	ldr	x1, [x0, #16]
    4014:	cbz	x1, 4030 <PyThread_free_lock@plt+0x1700>
    4018:	str	wzr, [x1, #16]
    401c:	ldr	x2, [x0]
    4020:	sub	x2, x2, #0x1
    4024:	str	x2, [x0]
    4028:	ldr	x1, [x1]
    402c:	cbnz	x1, 4018 <PyThread_free_lock@plt+0x16e8>
    4030:	ldr	x1, [x0, #24]
    4034:	cbz	x1, 4050 <PyThread_free_lock@plt+0x1720>
    4038:	str	wzr, [x1, #16]
    403c:	ldr	x2, [x0, #8]
    4040:	sub	x2, x2, #0x1
    4044:	str	x2, [x0, #8]
    4048:	ldr	x1, [x1]
    404c:	cbnz	x1, 4038 <PyThread_free_lock@plt+0x1708>
    4050:	ldr	x0, [x20]
    4054:	bl	27b0 <PyThread_release_lock@plt>
    4058:	ldr	x0, [x19, #8]
    405c:	bl	3cac <PyThread_free_lock@plt+0x137c>
    4060:	str	xzr, [x19, #8]
    4064:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4068:	ldr	x0, [x0, #2360]
    406c:	bl	27b0 <PyThread_release_lock@plt>
    4070:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4074:	ldr	x20, [x20, #4048]
    4078:	ldr	x0, [x20]
    407c:	add	x0, x0, #0x1
    4080:	str	x0, [x20]
    4084:	ldp	x21, x22, [sp, #48]
    4088:	ldr	x23, [sp, #64]
    408c:	mov	x0, x20
    4090:	ldp	x19, x20, [sp, #32]
    4094:	ldp	x29, x30, [sp, #16]
    4098:	add	sp, sp, #0x70
    409c:	ret
    40a0:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    40a4:	ldr	x0, [x0, #2360]
    40a8:	bl	27b0 <PyThread_release_lock@plt>
    40ac:	b	4070 <PyThread_free_lock@plt+0x1740>
    40b0:	stp	x29, x30, [sp, #-48]!
    40b4:	mov	x29, sp
    40b8:	stp	x19, x20, [sp, #16]
    40bc:	str	x21, [sp, #32]
    40c0:	mov	x20, x0
    40c4:	mov	x21, x1
    40c8:	mov	w1, #0x1                   	// #1
    40cc:	ldr	x0, [x0]
    40d0:	bl	2640 <PyThread_acquire_lock@plt>
    40d4:	ldr	x0, [x20, #8]
    40d8:	cbz	x0, 4104 <PyThread_free_lock@plt+0x17d4>
    40dc:	mov	x19, x0
    40e0:	mov	x2, #0x0                   	// #0
    40e4:	b	40ec <PyThread_free_lock@plt+0x17bc>
    40e8:	mov	x19, x1
    40ec:	ldr	x1, [x19]
    40f0:	cmp	x21, x1
    40f4:	b.eq	4138 <PyThread_free_lock@plt+0x1808>  // b.none
    40f8:	ldr	x1, [x19, #16]
    40fc:	mov	x2, x19
    4100:	cbnz	x1, 40e8 <PyThread_free_lock@plt+0x17b8>
    4104:	mov	x2, x21
    4108:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    410c:	add	x1, x1, #0x390
    4110:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4114:	ldr	x0, [x0, #2352]
    4118:	bl	28c0 <PyErr_Format@plt>
    411c:	ldr	x0, [x20]
    4120:	bl	27b0 <PyThread_release_lock@plt>
    4124:	mov	w0, #0xffffffff            	// #-1
    4128:	b	4180 <PyThread_free_lock@plt+0x1850>
    412c:	ldr	x0, [x19, #16]
    4130:	str	x0, [x20, #8]
    4134:	b	4148 <PyThread_free_lock@plt+0x1818>
    4138:	cmp	x0, x19
    413c:	b.eq	412c <PyThread_free_lock@plt+0x17fc>  // b.none
    4140:	ldr	x0, [x19, #16]
    4144:	str	x0, [x2, #16]
    4148:	ldr	x0, [x20, #16]
    414c:	sub	x0, x0, #0x1
    4150:	str	x0, [x20, #16]
    4154:	ldr	x21, [x19, #8]
    4158:	cbz	x21, 4190 <PyThread_free_lock@plt+0x1860>
    415c:	mov	x0, x21
    4160:	bl	2ac4 <PyThread_free_lock@plt+0x194>
    4164:	mov	x0, x19
    4168:	bl	2590 <PyMem_Free@plt>
    416c:	ldr	x0, [x20]
    4170:	bl	27b0 <PyThread_release_lock@plt>
    4174:	mov	x0, x21
    4178:	bl	3cac <PyThread_free_lock@plt+0x137c>
    417c:	mov	w0, #0x0                   	// #0
    4180:	ldp	x19, x20, [sp, #16]
    4184:	ldr	x21, [sp, #32]
    4188:	ldp	x29, x30, [sp], #48
    418c:	ret
    4190:	mov	x0, x19
    4194:	bl	2590 <PyMem_Free@plt>
    4198:	ldr	x0, [x20]
    419c:	bl	27b0 <PyThread_release_lock@plt>
    41a0:	mov	w0, #0x0                   	// #0
    41a4:	b	4180 <PyThread_free_lock@plt+0x1850>
    41a8:	stp	x29, x30, [sp, #-32]!
    41ac:	mov	x29, sp
    41b0:	mov	x0, x1
    41b4:	mov	x1, x2
    41b8:	add	x5, sp, #0x18
    41bc:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    41c0:	add	x4, x4, #0xd38
    41c4:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    41c8:	add	x3, x3, #0x3d8
    41cc:	add	x3, x3, #0xa0
    41d0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    41d4:	add	x2, x2, #0x620
    41d8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    41dc:	mov	w1, w0
    41e0:	mov	x0, #0x0                   	// #0
    41e4:	cbz	w1, 4214 <PyThread_free_lock@plt+0x18e4>
    41e8:	ldr	x1, [sp, #24]
    41ec:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    41f0:	add	x0, x0, #0x930
    41f4:	add	x0, x0, #0x8
    41f8:	bl	40b0 <PyThread_free_lock@plt+0x1780>
    41fc:	cbnz	w0, 421c <PyThread_free_lock@plt+0x18ec>
    4200:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4204:	ldr	x0, [x0, #4048]
    4208:	ldr	x1, [x0]
    420c:	add	x1, x1, #0x1
    4210:	str	x1, [x0]
    4214:	ldp	x29, x30, [sp], #32
    4218:	ret
    421c:	mov	x0, #0x0                   	// #0
    4220:	b	4214 <PyThread_free_lock@plt+0x18e4>
    4224:	stp	x29, x30, [sp, #-48]!
    4228:	mov	x29, sp
    422c:	stp	x19, x20, [sp, #16]
    4230:	str	x21, [sp, #32]
    4234:	ldr	x21, [x0, #16]
    4238:	ldr	x20, [x0, #32]
    423c:	ldr	x1, [x0, #8]
    4240:	ldr	x1, [x1, #320]
    4244:	blr	x1
    4248:	mov	w1, #0x1                   	// #1
    424c:	ldr	x0, [x20]
    4250:	bl	2640 <PyThread_acquire_lock@plt>
    4254:	ldr	x19, [x20, #8]
    4258:	cbz	x19, 42f0 <PyThread_free_lock@plt+0x19c0>
    425c:	mov	x1, #0x0                   	// #0
    4260:	b	4268 <PyThread_free_lock@plt+0x1938>
    4264:	mov	x19, x0
    4268:	ldr	x0, [x19]
    426c:	cmp	x21, x0
    4270:	b.eq	42e0 <PyThread_free_lock@plt+0x19b0>  // b.none
    4274:	ldr	x0, [x19, #16]
    4278:	mov	x1, x19
    427c:	cbnz	x0, 4264 <PyThread_free_lock@plt+0x1934>
    4280:	b	42f0 <PyThread_free_lock@plt+0x19c0>
    4284:	ldr	x0, [x20, #8]
    4288:	cmp	x0, x19
    428c:	b.eq	42c8 <PyThread_free_lock@plt+0x1998>  // b.none
    4290:	ldr	x0, [x19, #16]
    4294:	str	x0, [x1, #16]
    4298:	ldr	x0, [x20, #16]
    429c:	sub	x0, x0, #0x1
    42a0:	str	x0, [x20, #16]
    42a4:	ldr	x21, [x19, #8]
    42a8:	cbz	x21, 42d4 <PyThread_free_lock@plt+0x19a4>
    42ac:	mov	x0, x21
    42b0:	bl	2ac4 <PyThread_free_lock@plt+0x194>
    42b4:	mov	x0, x19
    42b8:	bl	2590 <PyMem_Free@plt>
    42bc:	mov	x0, x21
    42c0:	bl	3cac <PyThread_free_lock@plt+0x137c>
    42c4:	b	42f0 <PyThread_free_lock@plt+0x19c0>
    42c8:	ldr	x0, [x19, #16]
    42cc:	str	x0, [x20, #8]
    42d0:	b	4298 <PyThread_free_lock@plt+0x1968>
    42d4:	mov	x0, x19
    42d8:	bl	2590 <PyMem_Free@plt>
    42dc:	b	42f0 <PyThread_free_lock@plt+0x19c0>
    42e0:	ldr	x0, [x19, #24]
    42e4:	sub	x0, x0, #0x1
    42e8:	str	x0, [x19, #24]
    42ec:	cbz	x0, 4284 <PyThread_free_lock@plt+0x1954>
    42f0:	ldr	x0, [x20]
    42f4:	bl	27b0 <PyThread_release_lock@plt>
    42f8:	ldp	x19, x20, [sp, #16]
    42fc:	ldr	x21, [sp, #32]
    4300:	ldp	x29, x30, [sp], #48
    4304:	ret
    4308:	stp	x29, x30, [sp, #-48]!
    430c:	mov	x29, sp
    4310:	stp	x19, x20, [sp, #16]
    4314:	mov	x0, #0x28                  	// #40
    4318:	bl	2910 <PyMem_Malloc@plt>
    431c:	cbz	x0, 4438 <PyThread_free_lock@plt+0x1b08>
    4320:	mov	x19, x0
    4324:	bl	2790 <PyThread_allocate_lock@plt>
    4328:	str	x0, [x19]
    432c:	cbz	x0, 441c <PyThread_free_lock@plt+0x1aec>
    4330:	mov	x0, #0x18                  	// #24
    4334:	bl	2910 <PyMem_Malloc@plt>
    4338:	cbz	x0, 4440 <PyThread_free_lock@plt+0x1b10>
    433c:	str	xzr, [x0]
    4340:	str	xzr, [x0, #8]
    4344:	str	xzr, [x0, #16]
    4348:	str	x0, [x19, #8]
    434c:	mov	x0, #0x20                  	// #32
    4350:	bl	2910 <PyMem_Malloc@plt>
    4354:	cbz	x0, 44cc <PyThread_free_lock@plt+0x1b9c>
    4358:	str	xzr, [x0]
    435c:	str	xzr, [x0, #8]
    4360:	str	xzr, [x0, #16]
    4364:	str	xzr, [x0, #24]
    4368:	str	x0, [x19, #16]
    436c:	mov	w1, #0x1                   	// #1
    4370:	str	w1, [x19, #24]
    4374:	str	xzr, [x19, #32]
    4378:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    437c:	add	x0, x0, #0x930
    4380:	add	x20, x0, #0x8
    4384:	ldr	x0, [x0, #8]
    4388:	bl	2640 <PyThread_acquire_lock@plt>
    438c:	ldr	x20, [x20, #24]
    4390:	tbnz	x20, #63, 4488 <PyThread_free_lock@plt+0x1b58>
    4394:	add	x0, x20, #0x1
    4398:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    439c:	str	x0, [x1, #2384]
    43a0:	mov	x0, #0x20                  	// #32
    43a4:	bl	2910 <PyMem_Malloc@plt>
    43a8:	cbz	x0, 449c <PyThread_free_lock@plt+0x1b6c>
    43ac:	str	x20, [x0]
    43b0:	str	x19, [x0, #8]
    43b4:	str	xzr, [x0, #24]
    43b8:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    43bc:	add	x1, x1, #0x930
    43c0:	add	x19, x1, #0x8
    43c4:	ldr	x2, [x1, #16]
    43c8:	str	x2, [x0, #16]
    43cc:	str	x0, [x1, #16]
    43d0:	ldr	x0, [x1, #24]
    43d4:	add	x0, x0, #0x1
    43d8:	str	x0, [x1, #24]
    43dc:	ldr	x0, [x1, #8]
    43e0:	bl	27b0 <PyThread_release_lock@plt>
    43e4:	mov	w5, #0x0                   	// #0
    43e8:	mov	w4, #0x0                   	// #0
    43ec:	mov	x3, x19
    43f0:	mov	w2, #0x0                   	// #0
    43f4:	mov	x1, x20
    43f8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    43fc:	add	x0, x0, #0x238
    4400:	bl	2b04 <PyThread_free_lock@plt+0x1d4>
    4404:	mov	x19, x0
    4408:	cbz	x0, 44b4 <PyThread_free_lock@plt+0x1b84>
    440c:	mov	x0, x19
    4410:	ldp	x19, x20, [sp, #16]
    4414:	ldp	x29, x30, [sp], #48
    4418:	ret
    441c:	mov	x0, x19
    4420:	bl	2590 <PyMem_Free@plt>
    4424:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4428:	add	x1, x1, #0x638
    442c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4430:	ldr	x0, [x0, #2408]
    4434:	bl	2670 <PyErr_SetString@plt>
    4438:	mov	x19, #0x0                   	// #0
    443c:	b	440c <PyThread_free_lock@plt+0x1adc>
    4440:	bl	2600 <PyErr_NoMemory@plt>
    4444:	str	xzr, [x19, #8]
    4448:	mov	x0, x19
    444c:	bl	2590 <PyMem_Free@plt>
    4450:	b	4438 <PyThread_free_lock@plt+0x1b08>
    4454:	str	xzr, [x20, #8]
    4458:	mov	x0, x20
    445c:	bl	2590 <PyMem_Free@plt>
    4460:	cbz	x21, 44e0 <PyThread_free_lock@plt+0x1bb0>
    4464:	mov	x20, x21
    4468:	ldr	x21, [x21, #8]
    446c:	ldr	x0, [x20]
    4470:	cbz	x0, 4454 <PyThread_free_lock@plt+0x1b24>
    4474:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4478:	ldr	x0, [x20]
    447c:	bl	2590 <PyMem_Free@plt>
    4480:	str	xzr, [x20]
    4484:	b	4454 <PyThread_free_lock@plt+0x1b24>
    4488:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    448c:	add	x1, x1, #0x660
    4490:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4494:	ldr	x0, [x0, #2408]
    4498:	bl	2670 <PyErr_SetString@plt>
    449c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    44a0:	ldr	x0, [x0, #2360]
    44a4:	bl	27b0 <PyThread_release_lock@plt>
    44a8:	mov	x0, x19
    44ac:	bl	3cac <PyThread_free_lock@plt+0x137c>
    44b0:	b	4438 <PyThread_free_lock@plt+0x1b08>
    44b4:	mov	x1, x20
    44b8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    44bc:	add	x0, x0, #0x930
    44c0:	add	x0, x0, #0x8
    44c4:	bl	40b0 <PyThread_free_lock@plt+0x1780>
    44c8:	b	440c <PyThread_free_lock@plt+0x1adc>
    44cc:	stp	x21, x22, [sp, #32]
    44d0:	str	xzr, [x19, #16]
    44d4:	ldr	x22, [x19, #8]
    44d8:	ldr	x21, [x22, #8]
    44dc:	cbnz	x21, 4464 <PyThread_free_lock@plt+0x1b34>
    44e0:	str	xzr, [x22]
    44e4:	str	xzr, [x22, #8]
    44e8:	str	xzr, [x22, #16]
    44ec:	mov	x0, x22
    44f0:	bl	2590 <PyMem_Free@plt>
    44f4:	mov	x0, x19
    44f8:	bl	2590 <PyMem_Free@plt>
    44fc:	ldp	x21, x22, [sp, #32]
    4500:	b	4438 <PyThread_free_lock@plt+0x1b08>
    4504:	stp	x29, x30, [sp, #-192]!
    4508:	mov	x29, sp
    450c:	stp	x19, x20, [sp, #16]
    4510:	mov	x0, x1
    4514:	mov	x1, x2
    4518:	str	xzr, [sp, #168]
    451c:	add	x6, sp, #0xa8
    4520:	add	x5, sp, #0xb0
    4524:	add	x4, sp, #0xb8
    4528:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    452c:	add	x3, x3, #0x3d8
    4530:	add	x3, x3, #0xb0
    4534:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4538:	add	x2, x2, #0x730
    453c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4540:	mov	x19, #0x0                   	// #0
    4544:	cbz	w0, 49e4 <PyThread_free_lock@plt+0x20b4>
    4548:	ldr	x0, [sp, #184]
    454c:	bl	2550 <_PyInterpreterID_LookUp@plt>
    4550:	mov	x19, x0
    4554:	cbz	x0, 49e4 <PyThread_free_lock@plt+0x20b4>
    4558:	stp	x21, x22, [sp, #32]
    455c:	add	x1, sp, #0xa0
    4560:	ldr	x0, [sp, #176]
    4564:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    4568:	mov	x22, x0
    456c:	cbz	x0, 4b5c <PyThread_free_lock@plt+0x222c>
    4570:	bl	2530 <strlen@plt>
    4574:	ldr	x1, [sp, #160]
    4578:	cmp	x0, x1
    457c:	b.ne	45f8 <PyThread_free_lock@plt+0x1cc8>  // b.any
    4580:	stp	x25, x26, [sp, #64]
    4584:	ldr	x26, [sp, #168]
    4588:	mov	x0, x19
    458c:	bl	3138 <PyThread_free_lock@plt+0x808>
    4590:	tbnz	w0, #31, 4774 <PyThread_free_lock@plt+0x1e44>
    4594:	stp	x23, x24, [sp, #48]
    4598:	stp	x27, x28, [sp, #80]
    459c:	cmp	x26, #0x0
    45a0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    45a4:	ldr	x0, [x0, #4048]
    45a8:	ccmp	x26, x0, #0x4, ne  // ne = any
    45ac:	b.eq	4760 <PyThread_free_lock@plt+0x1e30>  // b.none
    45b0:	mov	x0, x26
    45b4:	bl	2540 <PyDict_Size@plt>
    45b8:	mov	x25, x0
    45bc:	cbz	x0, 4760 <PyThread_free_lock@plt+0x1e30>
    45c0:	mov	x0, #0x10                  	// #16
    45c4:	bl	2910 <PyMem_Malloc@plt>
    45c8:	mov	x20, x0
    45cc:	cbz	x0, 461c <PyThread_free_lock@plt+0x1cec>
    45d0:	str	x25, [x0]
    45d4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    45d8:	movk	x0, #0x2aa, lsl #48
    45dc:	cmp	x25, x0
    45e0:	b.ls	4624 <PyThread_free_lock@plt+0x1cf4>  // b.plast
    45e4:	str	xzr, [x20, #8]
    45e8:	bl	2600 <PyErr_NoMemory@plt>
    45ec:	mov	x0, x20
    45f0:	bl	2590 <PyMem_Free@plt>
    45f4:	b	4760 <PyThread_free_lock@plt+0x1e30>
    45f8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    45fc:	add	x1, x1, #0x740
    4600:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4604:	ldr	x0, [x0, #4016]
    4608:	ldr	x0, [x0]
    460c:	bl	2670 <PyErr_SetString@plt>
    4610:	mov	x19, #0x0                   	// #0
    4614:	ldp	x21, x22, [sp, #32]
    4618:	b	49e4 <PyThread_free_lock@plt+0x20b4>
    461c:	bl	2600 <PyErr_NoMemory@plt>
    4620:	b	4760 <PyThread_free_lock@plt+0x1e30>
    4624:	add	x0, x25, x25, lsl #1
    4628:	lsl	x0, x0, #4
    462c:	bl	2910 <PyMem_Malloc@plt>
    4630:	str	x0, [x20, #8]
    4634:	cbz	x0, 45e8 <PyThread_free_lock@plt+0x1cb8>
    4638:	str	xzr, [sp, #136]
    463c:	mov	x21, #0x0                   	// #0
    4640:	mov	x23, #0x0                   	// #0
    4644:	add	x0, sp, #0x98
    4648:	str	x0, [sp, #104]
    464c:	add	x0, sp, #0x90
    4650:	str	x0, [sp, #112]
    4654:	add	x0, sp, #0x88
    4658:	str	x0, [sp, #120]
    465c:	ldr	x3, [sp, #104]
    4660:	ldr	x2, [sp, #112]
    4664:	ldr	x1, [sp, #120]
    4668:	mov	x0, x26
    466c:	bl	27d0 <PyDict_Next@plt>
    4670:	cbz	w0, 46b4 <PyThread_free_lock@plt+0x1d84>
    4674:	ldr	x24, [x20, #8]
    4678:	add	x27, x24, x21
    467c:	ldr	x28, [sp, #152]
    4680:	ldr	x0, [sp, #144]
    4684:	bl	3208 <PyThread_free_lock@plt+0x8d8>
    4688:	str	x0, [x24, x21]
    468c:	cbz	x0, 46b4 <PyThread_free_lock@plt+0x1d84>
    4690:	add	x24, x27, #0x8
    4694:	mov	x1, x24
    4698:	mov	x0, x28
    469c:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    46a0:	cbnz	w0, 473c <PyThread_free_lock@plt+0x1e0c>
    46a4:	add	x23, x23, #0x1
    46a8:	add	x21, x21, #0x30
    46ac:	cmp	x25, x23
    46b0:	b.ne	465c <PyThread_free_lock@plt+0x1d2c>  // b.any
    46b4:	bl	2730 <PyErr_Occurred@plt>
    46b8:	cbnz	x0, 4758 <PyThread_free_lock@plt+0x1e28>
    46bc:	bl	2800 <_PyInterpreterState_Get@plt>
    46c0:	mov	x26, #0x0                   	// #0
    46c4:	cmp	x19, x0
    46c8:	b.eq	46dc <PyThread_free_lock@plt+0x1dac>  // b.none
    46cc:	mov	x0, x19
    46d0:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    46d4:	bl	2920 <PyThreadState_Swap@plt>
    46d8:	mov	x26, x0
    46dc:	str	xzr, [sp, #136]
    46e0:	str	xzr, [sp, #144]
    46e4:	str	xzr, [sp, #152]
    46e8:	mov	x0, x19
    46ec:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    46f0:	mov	x19, x0
    46f4:	cbz	x0, 47b0 <PyThread_free_lock@plt+0x1e80>
    46f8:	bl	28d0 <PyModule_GetDict@plt>
    46fc:	mov	x23, x0
    4700:	ldr	x0, [x19]
    4704:	sub	x0, x0, #0x1
    4708:	str	x0, [x19]
    470c:	cbz	x0, 4784 <PyThread_free_lock@plt+0x1e54>
    4710:	cbz	x23, 47b0 <PyThread_free_lock@plt+0x1e80>
    4714:	ldr	x0, [x23]
    4718:	add	x0, x0, #0x1
    471c:	str	x0, [x23]
    4720:	cbz	x20, 4914 <PyThread_free_lock@plt+0x1fe4>
    4724:	ldr	x0, [x20]
    4728:	cmp	x0, #0x0
    472c:	b.le	4914 <PyThread_free_lock@plt+0x1fe4>
    4730:	mov	x24, #0x0                   	// #0
    4734:	mov	x27, #0x0                   	// #0
    4738:	b	48ac <PyThread_free_lock@plt+0x1f7c>
    473c:	ldr	x0, [x27]
    4740:	cbz	x0, 474c <PyThread_free_lock@plt+0x1e1c>
    4744:	bl	2590 <PyMem_Free@plt>
    4748:	str	xzr, [x27]
    474c:	mov	x0, x24
    4750:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4754:	b	46b4 <PyThread_free_lock@plt+0x1d84>
    4758:	mov	x0, x20
    475c:	bl	2e50 <PyThread_free_lock@plt+0x520>
    4760:	bl	2730 <PyErr_Occurred@plt>
    4764:	mov	x20, x0
    4768:	cbz	x0, 46bc <PyThread_free_lock@plt+0x1d8c>
    476c:	ldp	x23, x24, [sp, #48]
    4770:	ldp	x27, x28, [sp, #80]
    4774:	mov	x19, #0x0                   	// #0
    4778:	ldp	x21, x22, [sp, #32]
    477c:	ldp	x25, x26, [sp, #64]
    4780:	b	49e4 <PyThread_free_lock@plt+0x20b4>
    4784:	mov	x0, x19
    4788:	bl	25e0 <_Py_Dealloc@plt>
    478c:	b	4710 <PyThread_free_lock@plt+0x1de0>
    4790:	ldr	x0, [x19]
    4794:	sub	x0, x0, #0x1
    4798:	str	x0, [x19]
    479c:	cbz	x0, 4870 <PyThread_free_lock@plt+0x1f40>
    47a0:	ldr	x0, [x23]
    47a4:	sub	x0, x0, #0x1
    47a8:	str	x0, [x23]
    47ac:	cbz	x0, 4908 <PyThread_free_lock@plt+0x1fd8>
    47b0:	add	x2, sp, #0x98
    47b4:	add	x1, sp, #0x90
    47b8:	add	x0, sp, #0x88
    47bc:	bl	2820 <PyErr_Fetch@plt>
    47c0:	ldr	x21, [sp, #136]
    47c4:	ldr	x22, [sp, #144]
    47c8:	mov	x0, #0x10                  	// #16
    47cc:	bl	2910 <PyMem_Malloc@plt>
    47d0:	mov	x19, x0
    47d4:	cbz	x0, 4a0c <PyThread_free_lock@plt+0x20dc>
    47d8:	str	xzr, [x0]
    47dc:	str	xzr, [x0, #8]
    47e0:	mov	x1, x21
    47e4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    47e8:	add	x0, x0, #0x770
    47ec:	bl	24f0 <PyUnicode_FromFormat@plt>
    47f0:	mov	x21, x0
    47f4:	cbz	x0, 4a48 <PyThread_free_lock@plt+0x2118>
    47f8:	bl	3208 <PyThread_free_lock@plt+0x8d8>
    47fc:	str	x0, [x19]
    4800:	ldr	x0, [x21]
    4804:	sub	x0, x0, #0x1
    4808:	str	x0, [x21]
    480c:	cbz	x0, 4a14 <PyThread_free_lock@plt+0x20e4>
    4810:	ldr	x0, [x19]
    4814:	cbz	x0, 4a20 <PyThread_free_lock@plt+0x20f0>
    4818:	cbz	x22, 4a68 <PyThread_free_lock@plt+0x2138>
    481c:	mov	x1, x22
    4820:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    4824:	add	x0, x0, #0x770
    4828:	bl	24f0 <PyUnicode_FromFormat@plt>
    482c:	mov	x21, x0
    4830:	cbz	x0, 4ac0 <PyThread_free_lock@plt+0x2190>
    4834:	bl	3208 <PyThread_free_lock@plt+0x8d8>
    4838:	str	x0, [x19, #8]
    483c:	ldr	x0, [x21]
    4840:	sub	x0, x0, #0x1
    4844:	str	x0, [x21]
    4848:	cbz	x0, 4a3c <PyThread_free_lock@plt+0x210c>
    484c:	ldr	x0, [x19, #8]
    4850:	cbnz	x0, 4a68 <PyThread_free_lock@plt+0x2138>
    4854:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4858:	ldr	x0, [x0, #4008]
    485c:	ldr	x0, [x0]
    4860:	bl	26a0 <PyErr_ExceptionMatches@plt>
    4864:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    4868:	add	x21, x21, #0x680
    486c:	b	4a50 <PyThread_free_lock@plt+0x2120>
    4870:	mov	x0, x19
    4874:	bl	25e0 <_Py_Dealloc@plt>
    4878:	b	47a0 <PyThread_free_lock@plt+0x1e70>
    487c:	mov	x0, x19
    4880:	bl	25e0 <_Py_Dealloc@plt>
    4884:	ldr	x1, [x21]
    4888:	sub	x1, x1, #0x1
    488c:	str	x1, [x21]
    4890:	cbz	x1, 48fc <PyThread_free_lock@plt+0x1fcc>
    4894:	cbnz	w25, 47a0 <PyThread_free_lock@plt+0x1e70>
    4898:	add	x27, x27, #0x1
    489c:	add	x24, x24, #0x30
    48a0:	ldr	x0, [x20]
    48a4:	cmp	x27, x0
    48a8:	b.ge	4914 <PyThread_free_lock@plt+0x1fe4>  // b.tcont
    48ac:	ldr	x0, [x20, #8]
    48b0:	add	x21, x0, x24
    48b4:	ldr	x0, [x0, x24]
    48b8:	bl	2840 <PyUnicode_FromString@plt>
    48bc:	mov	x19, x0
    48c0:	cbz	x0, 47a0 <PyThread_free_lock@plt+0x1e70>
    48c4:	add	x0, x21, #0x8
    48c8:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    48cc:	mov	x21, x0
    48d0:	cbz	x0, 4790 <PyThread_free_lock@plt+0x1e60>
    48d4:	mov	x2, x0
    48d8:	mov	x1, x19
    48dc:	mov	x0, x23
    48e0:	bl	2870 <PyDict_SetItem@plt>
    48e4:	mov	w25, w0
    48e8:	ldr	x0, [x19]
    48ec:	sub	x0, x0, #0x1
    48f0:	str	x0, [x19]
    48f4:	cbnz	x0, 4884 <PyThread_free_lock@plt+0x1f54>
    48f8:	b	487c <PyThread_free_lock@plt+0x1f4c>
    48fc:	mov	x0, x21
    4900:	bl	25e0 <_Py_Dealloc@plt>
    4904:	b	4894 <PyThread_free_lock@plt+0x1f64>
    4908:	mov	x0, x23
    490c:	bl	25e0 <_Py_Dealloc@plt>
    4910:	b	47b0 <PyThread_free_lock@plt+0x1e80>
    4914:	mov	x4, #0x0                   	// #0
    4918:	mov	x3, x23
    491c:	mov	x2, x23
    4920:	mov	w1, #0x101                 	// #257
    4924:	mov	x0, x22
    4928:	bl	2760 <PyRun_StringFlags@plt>
    492c:	mov	x19, x0
    4930:	ldr	x0, [x23]
    4934:	sub	x0, x0, #0x1
    4938:	str	x0, [x23]
    493c:	cbz	x0, 49f4 <PyThread_free_lock@plt+0x20c4>
    4940:	cbz	x19, 47b0 <PyThread_free_lock@plt+0x1e80>
    4944:	ldr	x0, [x19]
    4948:	sub	x0, x0, #0x1
    494c:	str	x0, [x19]
    4950:	cbz	x0, 4a00 <PyThread_free_lock@plt+0x20d0>
    4954:	cbz	x26, 4b80 <PyThread_free_lock@plt+0x2250>
    4958:	mov	x19, #0x0                   	// #0
    495c:	mov	w21, #0x0                   	// #0
    4960:	mov	x0, x26
    4964:	bl	2920 <PyThreadState_Swap@plt>
    4968:	cbz	x19, 4b38 <PyThread_free_lock@plt+0x2208>
    496c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4970:	ldr	x0, [x0, #2416]
    4974:	ldr	x2, [x19]
    4978:	cbz	x2, 4b20 <PyThread_free_lock@plt+0x21f0>
    497c:	ldr	x3, [x19, #8]
    4980:	cbz	x3, 4b14 <PyThread_free_lock@plt+0x21e4>
    4984:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4988:	add	x1, x1, #0x7b0
    498c:	bl	28c0 <PyErr_Format@plt>
    4990:	ldr	x0, [x19]
    4994:	cbz	x0, 499c <PyThread_free_lock@plt+0x206c>
    4998:	bl	2590 <PyMem_Free@plt>
    499c:	ldr	x0, [x19, #8]
    49a0:	cbz	x0, 49a8 <PyThread_free_lock@plt+0x2078>
    49a4:	bl	2590 <PyMem_Free@plt>
    49a8:	mov	x0, x19
    49ac:	bl	2590 <PyMem_Free@plt>
    49b0:	cbz	x20, 49bc <PyThread_free_lock@plt+0x208c>
    49b4:	mov	x0, x20
    49b8:	bl	2e50 <PyThread_free_lock@plt+0x520>
    49bc:	cbnz	w21, 4b68 <PyThread_free_lock@plt+0x2238>
    49c0:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    49c4:	ldr	x19, [x19, #4048]
    49c8:	ldr	x0, [x19]
    49cc:	add	x0, x0, #0x1
    49d0:	str	x0, [x19]
    49d4:	ldp	x21, x22, [sp, #32]
    49d8:	ldp	x23, x24, [sp, #48]
    49dc:	ldp	x25, x26, [sp, #64]
    49e0:	ldp	x27, x28, [sp, #80]
    49e4:	mov	x0, x19
    49e8:	ldp	x19, x20, [sp, #16]
    49ec:	ldp	x29, x30, [sp], #192
    49f0:	ret
    49f4:	mov	x0, x23
    49f8:	bl	25e0 <_Py_Dealloc@plt>
    49fc:	b	4940 <PyThread_free_lock@plt+0x2010>
    4a00:	mov	x0, x19
    4a04:	bl	25e0 <_Py_Dealloc@plt>
    4a08:	b	4954 <PyThread_free_lock@plt+0x2024>
    4a0c:	bl	2600 <PyErr_NoMemory@plt>
    4a10:	b	4a68 <PyThread_free_lock@plt+0x2138>
    4a14:	mov	x0, x21
    4a18:	bl	25e0 <_Py_Dealloc@plt>
    4a1c:	b	4810 <PyThread_free_lock@plt+0x1ee0>
    4a20:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4a24:	ldr	x0, [x0, #4008]
    4a28:	ldr	x0, [x0]
    4a2c:	bl	26a0 <PyErr_ExceptionMatches@plt>
    4a30:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    4a34:	add	x21, x21, #0x6b0
    4a38:	b	4a50 <PyThread_free_lock@plt+0x2120>
    4a3c:	mov	x0, x21
    4a40:	bl	25e0 <_Py_Dealloc@plt>
    4a44:	b	484c <PyThread_free_lock@plt+0x1f1c>
    4a48:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    4a4c:	add	x21, x21, #0x6e0
    4a50:	bl	26f0 <PyErr_Clear@plt>
    4a54:	ldr	x0, [x19]
    4a58:	cbz	x0, 4a64 <PyThread_free_lock@plt+0x2134>
    4a5c:	bl	2590 <PyMem_Free@plt>
    4a60:	str	xzr, [x19]
    4a64:	str	x21, [x19, #8]
    4a68:	ldr	x0, [sp, #136]
    4a6c:	cbz	x0, 4a80 <PyThread_free_lock@plt+0x2150>
    4a70:	ldr	x1, [x0]
    4a74:	sub	x1, x1, #0x1
    4a78:	str	x1, [x0]
    4a7c:	cbz	x1, 4acc <PyThread_free_lock@plt+0x219c>
    4a80:	ldr	x0, [sp, #144]
    4a84:	cbz	x0, 4a98 <PyThread_free_lock@plt+0x2168>
    4a88:	ldr	x1, [x0]
    4a8c:	sub	x1, x1, #0x1
    4a90:	str	x1, [x0]
    4a94:	cbz	x1, 4ad4 <PyThread_free_lock@plt+0x21a4>
    4a98:	ldr	x0, [sp, #152]
    4a9c:	cbz	x0, 4ab0 <PyThread_free_lock@plt+0x2180>
    4aa0:	ldr	x1, [x0]
    4aa4:	sub	x1, x1, #0x1
    4aa8:	str	x1, [x0]
    4aac:	cbz	x1, 4adc <PyThread_free_lock@plt+0x21ac>
    4ab0:	cbz	x19, 4ae4 <PyThread_free_lock@plt+0x21b4>
    4ab4:	mov	w21, #0xffffffff            	// #-1
    4ab8:	cbnz	x26, 4960 <PyThread_free_lock@plt+0x2030>
    4abc:	b	496c <PyThread_free_lock@plt+0x203c>
    4ac0:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    4ac4:	add	x21, x21, #0x708
    4ac8:	b	4a50 <PyThread_free_lock@plt+0x2120>
    4acc:	bl	25e0 <_Py_Dealloc@plt>
    4ad0:	b	4a80 <PyThread_free_lock@plt+0x2150>
    4ad4:	bl	25e0 <_Py_Dealloc@plt>
    4ad8:	b	4a98 <PyThread_free_lock@plt+0x2168>
    4adc:	bl	25e0 <_Py_Dealloc@plt>
    4ae0:	b	4ab0 <PyThread_free_lock@plt+0x2180>
    4ae4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4ae8:	ldr	x0, [x0, #3976]
    4aec:	ldr	x3, [x0]
    4af0:	mov	x2, #0x33                  	// #51
    4af4:	mov	x1, #0x1                   	// #1
    4af8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    4afc:	add	x0, x0, #0x778
    4b00:	bl	27c0 <fwrite@plt>
    4b04:	bl	26f0 <PyErr_Clear@plt>
    4b08:	mov	w21, #0xffffffff            	// #-1
    4b0c:	cbnz	x26, 4960 <PyThread_free_lock@plt+0x2030>
    4b10:	b	4b3c <PyThread_free_lock@plt+0x220c>
    4b14:	mov	x1, x2
    4b18:	bl	2670 <PyErr_SetString@plt>
    4b1c:	b	4990 <PyThread_free_lock@plt+0x2060>
    4b20:	ldr	x1, [x19, #8]
    4b24:	cbz	x1, 4b30 <PyThread_free_lock@plt+0x2200>
    4b28:	bl	2670 <PyErr_SetString@plt>
    4b2c:	b	4990 <PyThread_free_lock@plt+0x2060>
    4b30:	bl	2690 <PyErr_SetNone@plt>
    4b34:	b	4990 <PyThread_free_lock@plt+0x2060>
    4b38:	cbz	w21, 4b80 <PyThread_free_lock@plt+0x2250>
    4b3c:	bl	2600 <PyErr_NoMemory@plt>
    4b40:	mov	x19, x20
    4b44:	cbnz	x20, 49b4 <PyThread_free_lock@plt+0x2084>
    4b48:	ldp	x21, x22, [sp, #32]
    4b4c:	ldp	x23, x24, [sp, #48]
    4b50:	ldp	x25, x26, [sp, #64]
    4b54:	ldp	x27, x28, [sp, #80]
    4b58:	b	49e4 <PyThread_free_lock@plt+0x20b4>
    4b5c:	mov	x19, x0
    4b60:	ldp	x21, x22, [sp, #32]
    4b64:	b	49e4 <PyThread_free_lock@plt+0x20b4>
    4b68:	mov	x19, #0x0                   	// #0
    4b6c:	ldp	x21, x22, [sp, #32]
    4b70:	ldp	x23, x24, [sp, #48]
    4b74:	ldp	x25, x26, [sp, #64]
    4b78:	ldp	x27, x28, [sp, #80]
    4b7c:	b	49e4 <PyThread_free_lock@plt+0x20b4>
    4b80:	mov	w21, #0x0                   	// #0
    4b84:	cbnz	x20, 49b4 <PyThread_free_lock@plt+0x2084>
    4b88:	b	49c0 <PyThread_free_lock@plt+0x2090>
    4b8c:	stp	x29, x30, [sp, #-48]!
    4b90:	mov	x29, sp
    4b94:	stp	x19, x20, [sp, #16]
    4b98:	mov	x0, x1
    4b9c:	mov	x1, x2
    4ba0:	add	x4, sp, #0x28
    4ba4:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4ba8:	add	x3, x3, #0x3d8
    4bac:	add	x3, x3, #0xd0
    4bb0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4bb4:	add	x2, x2, #0x7b8
    4bb8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4bbc:	mov	x19, #0x0                   	// #0
    4bc0:	cbz	w0, 4c28 <PyThread_free_lock@plt+0x22f8>
    4bc4:	ldr	x0, [sp, #40]
    4bc8:	bl	2550 <_PyInterpreterID_LookUp@plt>
    4bcc:	mov	x19, x0
    4bd0:	cbz	x0, 4c28 <PyThread_free_lock@plt+0x22f8>
    4bd4:	bl	2800 <_PyInterpreterState_Get@plt>
    4bd8:	cbz	x0, 4c58 <PyThread_free_lock@plt+0x2328>
    4bdc:	cmp	x19, x0
    4be0:	b.eq	4c38 <PyThread_free_lock@plt+0x2308>  // b.none
    4be4:	mov	x0, x19
    4be8:	bl	3138 <PyThread_free_lock@plt+0x808>
    4bec:	tbnz	w0, #31, 4c60 <PyThread_free_lock@plt+0x2330>
    4bf0:	mov	x0, x19
    4bf4:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4bf8:	mov	x20, x0
    4bfc:	bl	2920 <PyThreadState_Swap@plt>
    4c00:	mov	x19, x0
    4c04:	mov	x0, x20
    4c08:	bl	25d0 <Py_EndInterpreter@plt>
    4c0c:	mov	x0, x19
    4c10:	bl	2920 <PyThreadState_Swap@plt>
    4c14:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4c18:	ldr	x19, [x19, #4048]
    4c1c:	ldr	x0, [x19]
    4c20:	add	x0, x0, #0x1
    4c24:	str	x0, [x19]
    4c28:	mov	x0, x19
    4c2c:	ldp	x19, x20, [sp, #16]
    4c30:	ldp	x29, x30, [sp], #48
    4c34:	ret
    4c38:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4c3c:	add	x1, x1, #0x7c8
    4c40:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4c44:	ldr	x0, [x0, #4000]
    4c48:	ldr	x0, [x0]
    4c4c:	bl	2670 <PyErr_SetString@plt>
    4c50:	mov	x19, #0x0                   	// #0
    4c54:	b	4c28 <PyThread_free_lock@plt+0x22f8>
    4c58:	mov	x19, x0
    4c5c:	b	4c28 <PyThread_free_lock@plt+0x22f8>
    4c60:	mov	x19, #0x0                   	// #0
    4c64:	b	4c28 <PyThread_free_lock@plt+0x22f8>
    4c68:	stp	x29, x30, [sp, #-16]!
    4c6c:	mov	x29, sp
    4c70:	bl	2800 <_PyInterpreterState_Get@plt>
    4c74:	cbz	x0, 4c7c <PyThread_free_lock@plt+0x234c>
    4c78:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    4c7c:	ldp	x29, x30, [sp], #16
    4c80:	ret
    4c84:	stp	x29, x30, [sp, #-80]!
    4c88:	mov	x29, sp
    4c8c:	mov	x0, x1
    4c90:	mov	x1, x2
    4c94:	add	x6, sp, #0x40
    4c98:	add	x5, sp, #0x48
    4c9c:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4ca0:	add	x4, x4, #0xd38
    4ca4:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4ca8:	add	x3, x3, #0x3d8
    4cac:	add	x3, x3, #0xe0
    4cb0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4cb4:	add	x2, x2, #0x7f0
    4cb8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4cbc:	mov	w1, w0
    4cc0:	mov	x0, #0x0                   	// #0
    4cc4:	cbz	w1, 4dc8 <PyThread_free_lock@plt+0x2498>
    4cc8:	stp	x19, x20, [sp, #16]
    4ccc:	stp	x21, x22, [sp, #32]
    4cd0:	ldr	x20, [sp, #72]
    4cd4:	ldr	x21, [sp, #64]
    4cd8:	bl	2800 <_PyInterpreterState_Get@plt>
    4cdc:	mov	x22, x0
    4ce0:	cbz	x0, 4df0 <PyThread_free_lock@plt+0x24c0>
    4ce4:	str	xzr, [sp, #56]
    4ce8:	add	x2, sp, #0x38
    4cec:	mov	x1, x20
    4cf0:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4cf4:	add	x3, x3, #0x930
    4cf8:	add	x0, x3, #0x8
    4cfc:	bl	3878 <PyThread_free_lock@plt+0xf48>
    4d00:	mov	x19, x0
    4d04:	cbz	x0, 4df0 <PyThread_free_lock@plt+0x24c0>
    4d08:	ldr	x0, [x0, #32]
    4d0c:	cbnz	x0, 4dd0 <PyThread_free_lock@plt+0x24a0>
    4d10:	mov	x0, #0x28                  	// #40
    4d14:	bl	2910 <PyMem_Malloc@plt>
    4d18:	mov	x20, x0
    4d1c:	cbz	x0, 4e00 <PyThread_free_lock@plt+0x24d0>
    4d20:	mov	x1, x0
    4d24:	mov	x0, x21
    4d28:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4d2c:	cbnz	w0, 4e0c <PyThread_free_lock@plt+0x24dc>
    4d30:	mov	x0, x22
    4d34:	bl	2680 <PyInterpreterState_GetID@plt>
    4d38:	mov	x21, x0
    4d3c:	mov	w1, #0x1                   	// #1
    4d40:	ldr	x0, [x19]
    4d44:	bl	2640 <PyThread_acquire_lock@plt>
    4d48:	ldr	w0, [x19, #24]
    4d4c:	cbz	w0, 4e20 <PyThread_free_lock@plt+0x24f0>
    4d50:	mov	w2, #0x1                   	// #1
    4d54:	mov	x1, x21
    4d58:	ldr	x0, [x19, #16]
    4d5c:	bl	3950 <PyThread_free_lock@plt+0x1020>
    4d60:	cbnz	w0, 4e34 <PyThread_free_lock@plt+0x2504>
    4d64:	ldr	x21, [x19, #8]
    4d68:	mov	x0, #0x10                  	// #16
    4d6c:	bl	2910 <PyMem_Malloc@plt>
    4d70:	cbz	x0, 4e48 <PyThread_free_lock@plt+0x2518>
    4d74:	str	xzr, [x0, #8]
    4d78:	str	x20, [x0]
    4d7c:	ldr	x1, [x21]
    4d80:	add	x1, x1, #0x1
    4d84:	str	x1, [x21]
    4d88:	ldr	x1, [x21, #8]
    4d8c:	cbz	x1, 4e70 <PyThread_free_lock@plt+0x2540>
    4d90:	ldr	x1, [x21, #16]
    4d94:	str	x0, [x1, #8]
    4d98:	str	x0, [x21, #16]
    4d9c:	ldr	x0, [x19]
    4da0:	bl	27b0 <PyThread_release_lock@plt>
    4da4:	ldr	x0, [sp, #56]
    4da8:	bl	27b0 <PyThread_release_lock@plt>
    4dac:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    4db0:	ldr	x0, [x0, #4048]
    4db4:	ldr	x1, [x0]
    4db8:	add	x1, x1, #0x1
    4dbc:	str	x1, [x0]
    4dc0:	ldp	x19, x20, [sp, #16]
    4dc4:	ldp	x21, x22, [sp, #32]
    4dc8:	ldp	x29, x30, [sp], #80
    4dcc:	ret
    4dd0:	mov	x2, x20
    4dd4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4dd8:	add	x1, x1, #0x580
    4ddc:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4de0:	ldr	x0, [x0, #2392]
    4de4:	bl	28c0 <PyErr_Format@plt>
    4de8:	ldr	x0, [sp, #56]
    4dec:	bl	27b0 <PyThread_release_lock@plt>
    4df0:	mov	x0, #0x0                   	// #0
    4df4:	ldp	x19, x20, [sp, #16]
    4df8:	ldp	x21, x22, [sp, #32]
    4dfc:	b	4dc8 <PyThread_free_lock@plt+0x2498>
    4e00:	ldr	x0, [sp, #56]
    4e04:	bl	27b0 <PyThread_release_lock@plt>
    4e08:	b	4df0 <PyThread_free_lock@plt+0x24c0>
    4e0c:	ldr	x0, [sp, #56]
    4e10:	bl	27b0 <PyThread_release_lock@plt>
    4e14:	mov	x0, x20
    4e18:	bl	2590 <PyMem_Free@plt>
    4e1c:	b	4df0 <PyThread_free_lock@plt+0x24c0>
    4e20:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4e24:	add	x1, x1, #0x610
    4e28:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4e2c:	ldr	x0, [x0, #2392]
    4e30:	bl	2670 <PyErr_SetString@plt>
    4e34:	ldr	x0, [x19]
    4e38:	bl	27b0 <PyThread_release_lock@plt>
    4e3c:	ldr	x0, [sp, #56]
    4e40:	bl	27b0 <PyThread_release_lock@plt>
    4e44:	b	4e5c <PyThread_free_lock@plt+0x252c>
    4e48:	bl	2600 <PyErr_NoMemory@plt>
    4e4c:	ldr	x0, [x19]
    4e50:	bl	27b0 <PyThread_release_lock@plt>
    4e54:	ldr	x0, [sp, #56]
    4e58:	bl	27b0 <PyThread_release_lock@plt>
    4e5c:	mov	x0, x20
    4e60:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4e64:	mov	x0, x20
    4e68:	bl	2590 <PyMem_Free@plt>
    4e6c:	b	4df0 <PyThread_free_lock@plt+0x24c0>
    4e70:	str	x0, [x21, #8]
    4e74:	b	4d98 <PyThread_free_lock@plt+0x2468>
    4e78:	stp	x29, x30, [sp, #-64]!
    4e7c:	mov	x29, sp
    4e80:	stp	x19, x20, [sp, #16]
    4e84:	mov	x0, x1
    4e88:	mov	x1, x2
    4e8c:	add	x5, sp, #0x38
    4e90:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4e94:	add	x4, x4, #0xd38
    4e98:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4e9c:	add	x3, x3, #0x3d8
    4ea0:	add	x3, x3, #0xf8
    4ea4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4ea8:	add	x2, x2, #0x808
    4eac:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4eb0:	mov	x19, #0x0                   	// #0
    4eb4:	cbz	w0, 4fa4 <PyThread_free_lock@plt+0x2674>
    4eb8:	stp	x21, x22, [sp, #32]
    4ebc:	ldr	x22, [sp, #56]
    4ec0:	bl	2800 <_PyInterpreterState_Get@plt>
    4ec4:	mov	x19, x0
    4ec8:	cbz	x0, 509c <PyThread_free_lock@plt+0x276c>
    4ecc:	str	xzr, [sp, #48]
    4ed0:	add	x2, sp, #0x30
    4ed4:	mov	x1, x22
    4ed8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4edc:	add	x0, x0, #0x930
    4ee0:	add	x0, x0, #0x8
    4ee4:	bl	3878 <PyThread_free_lock@plt+0xf48>
    4ee8:	mov	x20, x0
    4eec:	cbz	x0, 5050 <PyThread_free_lock@plt+0x2720>
    4ef0:	mov	x0, x19
    4ef4:	bl	2680 <PyInterpreterState_GetID@plt>
    4ef8:	mov	x19, x0
    4efc:	mov	w1, #0x1                   	// #1
    4f00:	ldr	x0, [x20]
    4f04:	bl	2640 <PyThread_acquire_lock@plt>
    4f08:	ldr	w0, [x20, #24]
    4f0c:	cbz	w0, 4fb4 <PyThread_free_lock@plt+0x2684>
    4f10:	mov	w2, #0x0                   	// #0
    4f14:	mov	x1, x19
    4f18:	ldr	x0, [x20, #16]
    4f1c:	bl	3950 <PyThread_free_lock@plt+0x1020>
    4f20:	cbnz	w0, 4fc8 <PyThread_free_lock@plt+0x2698>
    4f24:	ldr	x1, [x20, #8]
    4f28:	ldr	x0, [x1, #8]
    4f2c:	cbz	x0, 5018 <PyThread_free_lock@plt+0x26e8>
    4f30:	ldr	x2, [x0, #8]
    4f34:	str	x2, [x1, #8]
    4f38:	ldr	x2, [x1, #16]
    4f3c:	cmp	x0, x2
    4f40:	b.eq	5010 <PyThread_free_lock@plt+0x26e0>  // b.none
    4f44:	ldr	x2, [x1]
    4f48:	sub	x2, x2, #0x1
    4f4c:	str	x2, [x1]
    4f50:	ldr	x21, [x0]
    4f54:	str	xzr, [x0]
    4f58:	str	xzr, [x0, #8]
    4f5c:	bl	2590 <PyMem_Free@plt>
    4f60:	cbz	x21, 5018 <PyThread_free_lock@plt+0x26e8>
    4f64:	ldr	x0, [x20]
    4f68:	bl	27b0 <PyThread_release_lock@plt>
    4f6c:	ldr	x0, [x20, #8]
    4f70:	ldr	x0, [x0]
    4f74:	cbz	x0, 5088 <PyThread_free_lock@plt+0x2758>
    4f78:	ldr	x0, [sp, #48]
    4f7c:	bl	27b0 <PyThread_release_lock@plt>
    4f80:	mov	x0, x21
    4f84:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4f88:	mov	x19, x0
    4f8c:	cbz	x0, 50a4 <PyThread_free_lock@plt+0x2774>
    4f90:	mov	x0, x21
    4f94:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4f98:	mov	x0, x21
    4f9c:	bl	2590 <PyMem_Free@plt>
    4fa0:	ldp	x21, x22, [sp, #32]
    4fa4:	mov	x0, x19
    4fa8:	ldp	x19, x20, [sp, #16]
    4fac:	ldp	x29, x30, [sp], #64
    4fb0:	ret
    4fb4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4fb8:	add	x1, x1, #0x610
    4fbc:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    4fc0:	ldr	x0, [x0, #2392]
    4fc4:	bl	2670 <PyErr_SetString@plt>
    4fc8:	ldr	x0, [x20]
    4fcc:	bl	27b0 <PyThread_release_lock@plt>
    4fd0:	ldr	x0, [x20, #8]
    4fd4:	ldr	x0, [x0]
    4fd8:	cbnz	x0, 505c <PyThread_free_lock@plt+0x272c>
    4fdc:	ldr	x0, [x20, #32]
    4fe0:	cbz	x0, 507c <PyThread_free_lock@plt+0x274c>
    4fe4:	mov	x21, #0x0                   	// #0
    4fe8:	ldr	x19, [x0]
    4fec:	mov	x0, x20
    4ff0:	bl	2ac4 <PyThread_free_lock@plt+0x194>
    4ff4:	str	xzr, [x19, #8]
    4ff8:	mov	x0, x20
    4ffc:	bl	3cac <PyThread_free_lock@plt+0x137c>
    5000:	ldr	x0, [sp, #48]
    5004:	bl	27b0 <PyThread_release_lock@plt>
    5008:	cbnz	x21, 4f80 <PyThread_free_lock@plt+0x2650>
    500c:	b	5064 <PyThread_free_lock@plt+0x2734>
    5010:	str	xzr, [x1, #16]
    5014:	b	4f44 <PyThread_free_lock@plt+0x2614>
    5018:	bl	2730 <PyErr_Occurred@plt>
    501c:	cbnz	x0, 4fc8 <PyThread_free_lock@plt+0x2698>
    5020:	ldr	x0, [x20, #32]
    5024:	cbz	x0, 4fc8 <PyThread_free_lock@plt+0x2698>
    5028:	str	wzr, [x20, #24]
    502c:	b	4fc8 <PyThread_free_lock@plt+0x2698>
    5030:	mov	x2, x22
    5034:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5038:	add	x1, x1, #0x818
    503c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5040:	ldr	x0, [x0, #2424]
    5044:	bl	28c0 <PyErr_Format@plt>
    5048:	ldp	x21, x22, [sp, #32]
    504c:	b	4fa4 <PyThread_free_lock@plt+0x2674>
    5050:	mov	x19, x0
    5054:	ldp	x21, x22, [sp, #32]
    5058:	b	4fa4 <PyThread_free_lock@plt+0x2674>
    505c:	ldr	x0, [sp, #48]
    5060:	bl	27b0 <PyThread_release_lock@plt>
    5064:	bl	2730 <PyErr_Occurred@plt>
    5068:	mov	x19, x0
    506c:	cbz	x0, 5030 <PyThread_free_lock@plt+0x2700>
    5070:	mov	x19, #0x0                   	// #0
    5074:	ldp	x21, x22, [sp, #32]
    5078:	b	4fa4 <PyThread_free_lock@plt+0x2674>
    507c:	ldr	x0, [sp, #48]
    5080:	bl	27b0 <PyThread_release_lock@plt>
    5084:	b	5064 <PyThread_free_lock@plt+0x2734>
    5088:	ldr	x0, [x20, #32]
    508c:	cbnz	x0, 4fe8 <PyThread_free_lock@plt+0x26b8>
    5090:	ldr	x0, [sp, #48]
    5094:	bl	27b0 <PyThread_release_lock@plt>
    5098:	b	4f80 <PyThread_free_lock@plt+0x2650>
    509c:	ldp	x21, x22, [sp, #32]
    50a0:	b	4fa4 <PyThread_free_lock@plt+0x2674>
    50a4:	ldp	x21, x22, [sp, #32]
    50a8:	b	4fa4 <PyThread_free_lock@plt+0x2674>

00000000000050ac <PyInit__xxsubinterpreters@@Base>:
    50ac:	stp	x29, x30, [sp, #-48]!
    50b0:	mov	x29, sp
    50b4:	stp	x19, x20, [sp, #16]
    50b8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    50bc:	ldr	x0, [x0, #2360]
    50c0:	cbz	x0, 52c0 <PyInit__xxsubinterpreters@@Base+0x214>
    50c4:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    50c8:	add	x0, x0, #0x930
    50cc:	str	xzr, [x0, #16]
    50d0:	str	xzr, [x0, #24]
    50d4:	str	xzr, [x0, #32]
    50d8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    50dc:	add	x0, x0, #0x238
    50e0:	bl	26c0 <PyType_Ready@plt>
    50e4:	mov	x19, #0x0                   	// #0
    50e8:	cbnz	w0, 5334 <PyInit__xxsubinterpreters@@Base+0x288>
    50ec:	mov	w1, #0x3f5                 	// #1013
    50f0:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    50f4:	add	x0, x0, #0x3d8
    50f8:	add	x0, x0, #0x108
    50fc:	bl	2740 <PyModule_Create2@plt>
    5100:	mov	x19, x0
    5104:	cbz	x0, 5334 <PyInit__xxsubinterpreters@@Base+0x288>
    5108:	str	x21, [sp, #32]
    510c:	bl	28d0 <PyModule_GetDict@plt>
    5110:	mov	x20, x0
    5114:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5118:	ldr	x21, [x0, #2416]
    511c:	cbz	x21, 52ec <PyInit__xxsubinterpreters@@Base+0x240>
    5120:	mov	x2, #0x0                   	// #0
    5124:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    5128:	ldr	x0, [x0, #4000]
    512c:	ldr	x1, [x0]
    5130:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5134:	add	x0, x0, #0x898
    5138:	bl	26e0 <PyErr_NewException@plt>
    513c:	mov	x2, x0
    5140:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5144:	str	x2, [x0, #2408]
    5148:	cbz	x2, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    514c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5150:	add	x1, x1, #0x8b8
    5154:	mov	x0, x20
    5158:	bl	2510 <PyDict_SetItemString@plt>
    515c:	cbnz	w0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    5160:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5164:	add	x0, x21, #0x930
    5168:	mov	x2, #0x0                   	// #0
    516c:	ldr	x1, [x0, #56]
    5170:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5174:	add	x0, x0, #0x8c8
    5178:	bl	26e0 <PyErr_NewException@plt>
    517c:	mov	x2, x0
    5180:	str	x0, [x21, #2352]
    5184:	cbz	x0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    5188:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    518c:	add	x1, x1, #0x8f0
    5190:	mov	x0, x20
    5194:	bl	2510 <PyDict_SetItemString@plt>
    5198:	cbnz	w0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    519c:	add	x21, x21, #0x930
    51a0:	mov	x2, #0x0                   	// #0
    51a4:	ldr	x1, [x21, #56]
    51a8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    51ac:	add	x0, x0, #0x908
    51b0:	bl	26e0 <PyErr_NewException@plt>
    51b4:	mov	x2, x0
    51b8:	str	x0, [x21, #40]
    51bc:	cbz	x0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    51c0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    51c4:	add	x1, x1, #0x930
    51c8:	mov	x0, x20
    51cc:	bl	2510 <PyDict_SetItemString@plt>
    51d0:	cbnz	w0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    51d4:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    51d8:	add	x21, x21, #0x930
    51dc:	mov	x2, #0x0                   	// #0
    51e0:	ldr	x1, [x21, #56]
    51e4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    51e8:	add	x0, x0, #0x948
    51ec:	bl	26e0 <PyErr_NewException@plt>
    51f0:	mov	x2, x0
    51f4:	str	x0, [x21, #72]
    51f8:	cbz	x0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    51fc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5200:	add	x1, x1, #0x970
    5204:	mov	x0, x20
    5208:	bl	2510 <PyDict_SetItemString@plt>
    520c:	cbnz	w0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    5210:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5214:	add	x21, x21, #0x930
    5218:	mov	x2, #0x0                   	// #0
    521c:	ldr	x1, [x21, #56]
    5220:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5224:	add	x0, x0, #0x988
    5228:	bl	26e0 <PyErr_NewException@plt>
    522c:	mov	x2, x0
    5230:	str	x0, [x21, #48]
    5234:	cbz	x0, 5374 <PyInit__xxsubinterpreters@@Base+0x2c8>
    5238:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    523c:	add	x1, x1, #0x9b0
    5240:	mov	x0, x20
    5244:	bl	2510 <PyDict_SetItemString@plt>
    5248:	cbnz	w0, 5350 <PyInit__xxsubinterpreters@@Base+0x2a4>
    524c:	adrp	x2, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5250:	ldr	x0, [x2, #568]
    5254:	add	x0, x0, #0x1
    5258:	str	x0, [x2, #568]
    525c:	add	x2, x2, #0x238
    5260:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5264:	add	x1, x1, #0x9c8
    5268:	mov	x0, x20
    526c:	bl	2510 <PyDict_SetItemString@plt>
    5270:	cbnz	w0, 535c <PyInit__xxsubinterpreters@@Base+0x2b0>
    5274:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    5278:	ldr	x2, [x2, #3984]
    527c:	ldr	x0, [x2]
    5280:	add	x0, x0, #0x1
    5284:	str	x0, [x2]
    5288:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    528c:	add	x1, x1, #0x9d8
    5290:	mov	x0, x20
    5294:	bl	2510 <PyDict_SetItemString@plt>
    5298:	cbnz	w0, 5368 <PyInit__xxsubinterpreters@@Base+0x2bc>
    529c:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    52a0:	add	x1, x1, #0xa48
    52a4:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    52a8:	add	x0, x0, #0x238
    52ac:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    52b0:	cmp	w0, #0x0
    52b4:	csel	x19, x19, xzr, eq  // eq = none
    52b8:	ldr	x21, [sp, #32]
    52bc:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    52c0:	bl	2790 <PyThread_allocate_lock@plt>
    52c4:	mov	x19, x0
    52c8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    52cc:	str	x19, [x0, #2360]
    52d0:	cbnz	x19, 50c4 <PyInit__xxsubinterpreters@@Base+0x18>
    52d4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    52d8:	add	x1, x1, #0x830
    52dc:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    52e0:	ldr	x0, [x0, #2408]
    52e4:	bl	2670 <PyErr_SetString@plt>
    52e8:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    52ec:	mov	x2, #0x0                   	// #0
    52f0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11f54>
    52f4:	ldr	x0, [x0, #4000]
    52f8:	ldr	x1, [x0]
    52fc:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5300:	add	x0, x0, #0x860
    5304:	bl	26e0 <PyErr_NewException@plt>
    5308:	mov	x2, x0
    530c:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12f54>
    5310:	str	x2, [x0, #2416]
    5314:	cbz	x2, 5344 <PyInit__xxsubinterpreters@@Base+0x298>
    5318:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    531c:	add	x1, x1, #0x888
    5320:	mov	x0, x20
    5324:	bl	2510 <PyDict_SetItemString@plt>
    5328:	cbz	w0, 5120 <PyInit__xxsubinterpreters@@Base+0x74>
    532c:	mov	x19, x21
    5330:	ldr	x21, [sp, #32]
    5334:	mov	x0, x19
    5338:	ldp	x19, x20, [sp, #16]
    533c:	ldp	x29, x30, [sp], #48
    5340:	ret
    5344:	mov	x19, x2
    5348:	ldr	x21, [sp, #32]
    534c:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    5350:	mov	x19, #0x0                   	// #0
    5354:	ldr	x21, [sp, #32]
    5358:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    535c:	mov	x19, #0x0                   	// #0
    5360:	ldr	x21, [sp, #32]
    5364:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    5368:	mov	x19, #0x0                   	// #0
    536c:	ldr	x21, [sp, #32]
    5370:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>
    5374:	mov	x19, #0x0                   	// #0
    5378:	ldr	x21, [sp, #32]
    537c:	b	5334 <PyInit__xxsubinterpreters@@Base+0x288>

Disassembly of section .fini:

0000000000005380 <.fini>:
    5380:	stp	x29, x30, [sp, #-16]!
    5384:	mov	x29, sp
    5388:	ldp	x29, x30, [sp], #16
    538c:	ret
