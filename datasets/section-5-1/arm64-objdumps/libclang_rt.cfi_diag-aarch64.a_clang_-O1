In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.cfi_diag-aarch64.a_clang_-O1:

interception_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN14__interception17InterceptFunctionEPKcPmmm>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x22, x0
  10:	mov	x19, x1
  14:	mov	x0, #0xffffffffffffffff    	// #-1
  18:	mov	x1, x22
  1c:	mov	x20, x3
  20:	mov	x21, x2
  24:	bl	0 <dlsym>
  28:	cbnz	x0, 3c <_ZN14__interception17InterceptFunctionEPKcPmmm+0x3c>
  2c:	mov	x1, x22
  30:	bl	0 <dlsym>
  34:	cmp	x0, x20
  38:	csel	x0, xzr, x0, eq  // eq = none
  3c:	cmp	x0, #0x0
  40:	str	x0, [x19]
  44:	cset	w8, ne  // ne = any
  48:	cmp	x21, x20
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x22, x21, [sp, #16]
  54:	cset	w9, eq  // eq = none
  58:	and	w8, w9, w8
  5c:	mov	w0, w8
  60:	ldr	x30, [sp], #48
  64:	ret

0000000000000068 <_ZN14__interception17InterceptFunctionEPKcS1_Pmmm>:
  68:	stp	x30, x21, [sp, #-32]!
  6c:	stp	x20, x19, [sp, #16]
  70:	mov	x21, x2
  74:	mov	x2, x1
  78:	mov	x1, x0
  7c:	mov	x0, #0xffffffffffffffff    	// #-1
  80:	mov	x19, x4
  84:	mov	x20, x3
  88:	bl	0 <dlvsym>
  8c:	cmp	x0, #0x0
  90:	str	x0, [x21]
  94:	cset	w8, ne  // ne = any
  98:	cmp	x20, x19
  9c:	ldp	x20, x19, [sp, #16]
  a0:	cset	w9, eq  // eq = none
  a4:	and	w8, w9, w8
  a8:	mov	w0, w8
  ac:	ldp	x30, x21, [sp], #32
  b0:	ret

interception_mac.cpp.o:     file format elf64-littleaarch64


interception_win.cpp.o:     file format elf64-littleaarch64


interception_type_test.cpp.o:     file format elf64-littleaarch64


sanitizer_allocator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18internal_allocatorEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	adrp	x21, 0 <_ZN11__sanitizer18internal_allocatorEv>
   c:	ldrb	w8, [x21]
  10:	dmb	ish
  14:	cbnz	w8, 108 <_ZN11__sanitizer18internal_allocatorEv+0x108>
  18:	adrp	x19, 0 <_ZN11__sanitizer18internal_allocatorEv>
  1c:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
  20:	add	x19, x19, #0x0
  24:	add	x8, x8, #0x0
  28:	mov	w9, #0x1                   	// #1
  2c:	ldaxrb	w10, [x8]
  30:	stlxrb	w11, w9, [x8]
  34:	cbnz	w11, 2c <_ZN11__sanitizer18internal_allocatorEv+0x2c>
  38:	cbz	w10, 48 <_ZN11__sanitizer18internal_allocatorEv+0x48>
  3c:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
  40:	add	x0, x0, #0x0
  44:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
  48:	ldrb	w8, [x21]
  4c:	cbnz	w8, fc <_ZN11__sanitizer18internal_allocatorEv+0xfc>
  50:	mov	w8, #0x1008                	// #4104
  54:	movk	w8, #0xc, lsl #16
  58:	add	x20, x19, x8
  5c:	mov	w2, #0x28                  	// #40
  60:	mov	x0, x20
  64:	mov	w1, wzr
  68:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  6c:	mov	w8, #0x1010                	// #4112
  70:	movk	w8, #0xc, lsl #16
  74:	mov	w2, #0x80000               	// #524288
  78:	mov	x0, x19
  7c:	mov	w1, wzr
  80:	str	x20, [x20]
  84:	str	x20, [x19, x8]
  88:	mov	w20, #0x80000               	// #524288
  8c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  90:	mov	w8, #0x40                  	// #64
  94:	movk	w8, #0x8, lsl #16
  98:	add	x0, x19, x8
  9c:	mov	w2, #0xd80                 	// #3456
  a0:	mov	w1, wzr
  a4:	strb	wzr, [x19, x20]
  a8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  ac:	mov	w8, #0xdc0                 	// #3520
  b0:	movk	w8, #0x8, lsl #16
  b4:	mov	w2, #0x248                 	// #584
  b8:	add	x0, x19, x8
  bc:	movk	w2, #0x4, lsl #16
  c0:	mov	w1, wzr
  c4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  c8:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
  cc:	ldr	x19, [x19]
  d0:	ldr	x0, [x19]
  d4:	cbnz	x0, e0 <_ZN11__sanitizer18internal_allocatorEv+0xe0>
  d8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  dc:	str	x0, [x19]
  e0:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
  e4:	add	x8, x8, #0x0
  e8:	add	x10, x8, #0x10
  ec:	mov	w9, #0x1                   	// #1
  f0:	stp	x0, x10, [x8]
  f4:	dmb	ish
  f8:	strb	w9, [x21]
  fc:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 100:	dmb	ish
 104:	strb	wzr, [x8]
 108:	ldp	x20, x19, [sp, #16]
 10c:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 110:	add	x0, x0, #0x0
 114:	ldp	x30, x21, [sp], #32
 118:	ret

000000000000011c <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>:
 11c:	stp	x30, x21, [sp, #-32]!
 120:	stp	x20, x19, [sp, #16]
 124:	cmn	x0, #0x9
 128:	b.ls	13c <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x20>  // b.plast
 12c:	mov	x0, xzr
 130:	ldp	x20, x19, [sp, #16]
 134:	ldp	x30, x21, [sp], #32
 138:	ret
 13c:	cmp	x2, #0x0
 140:	mov	w8, #0x8                   	// #8
 144:	mov	x21, x1
 148:	add	x19, x0, #0x8
 14c:	csel	x20, x8, x2, eq  // eq = none
 150:	cbz	x1, 194 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x78>
 154:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 158:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 15c:	add	x0, x0, #0x0
 160:	mov	x1, x21
 164:	mov	x2, x19
 168:	mov	x3, x20
 16c:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 170:	cbz	x0, 1ec <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xd0>
 174:	mov	x8, #0xc041                	// #49217
 178:	movk	x8, #0xbceb, lsl #16
 17c:	movk	x8, #0xb03a, lsl #32
 180:	movk	x8, #0x6a6c, lsl #48
 184:	str	x8, [x0], #8
 188:	ldp	x20, x19, [sp, #16]
 18c:	ldp	x30, x21, [sp], #32
 190:	ret
 194:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 198:	add	x8, x8, #0x0
 19c:	mov	w9, #0x1                   	// #1
 1a0:	ldaxrb	w10, [x8]
 1a4:	stlxrb	w11, w9, [x8]
 1a8:	cbnz	w11, 1a0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x84>
 1ac:	cbz	w10, 1bc <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xa0>
 1b0:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 1bc:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 1c0:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 1c4:	adrp	x1, 0 <_ZN11__sanitizer18internal_allocatorEv>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	mov	x2, x19
 1d4:	mov	x3, x20
 1d8:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 1dc:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 1e0:	dmb	ish
 1e4:	strb	wzr, [x8]
 1e8:	cbnz	x0, 174 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x58>
 1ec:	mov	x0, x19
 1f0:	bl	1f4 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>

00000000000001f4 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>:
 1f4:	str	x30, [sp, #-16]!
 1f8:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 1fc:	mov	w9, #0x1                   	// #1
 200:	strb	w9, [x8]
 204:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 208:	ldr	x8, [x8]
 20c:	mov	x2, x0
 210:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 214:	add	x0, x0, #0x0
 218:	ldr	x1, [x8]
 21c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 220:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000224 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
 224:	stp	x30, x21, [sp, #-32]!
 228:	stp	x20, x19, [sp, #16]
 22c:	mov	x21, x2
 230:	cbz	x0, 24c <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x28>
 234:	cmn	x1, #0x9
 238:	b.ls	264 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x40>  // b.plast
 23c:	mov	x0, xzr
 240:	ldp	x20, x19, [sp, #16]
 244:	ldp	x30, x21, [sp], #32
 248:	ret
 24c:	ldp	x20, x19, [sp, #16]
 250:	mov	x0, x1
 254:	mov	x1, x21
 258:	mov	x2, xzr
 25c:	ldp	x30, x21, [sp], #32
 260:	b	11c <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 264:	mov	x20, x0
 268:	ldr	x4, [x20, #-8]!
 26c:	mov	x8, #0xc041                	// #49217
 270:	movk	x8, #0xbceb, lsl #16
 274:	movk	x8, #0xb03a, lsl #32
 278:	movk	x8, #0x6a6c, lsl #48
 27c:	cmp	x4, x8
 280:	b.ne	324 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x100>  // b.any
 284:	add	x19, x1, #0x8
 288:	cbz	x21, 2c0 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x9c>
 28c:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 290:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 294:	add	x0, x0, #0x0
 298:	mov	w4, #0x8                   	// #8
 29c:	mov	x1, x21
 2a0:	mov	x2, x20
 2a4:	mov	x3, x19
 2a8:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 2ac:	cbz	x0, 31c <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xf8>
 2b0:	add	x0, x0, #0x8
 2b4:	ldp	x20, x19, [sp, #16]
 2b8:	ldp	x30, x21, [sp], #32
 2bc:	ret
 2c0:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 2c4:	add	x8, x8, #0x0
 2c8:	mov	w9, #0x1                   	// #1
 2cc:	ldaxrb	w10, [x8]
 2d0:	stlxrb	w11, w9, [x8]
 2d4:	cbnz	w11, 2cc <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa8>
 2d8:	cbz	w10, 2e8 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xc4>
 2dc:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 2e0:	add	x0, x0, #0x0
 2e4:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 2e8:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 2ec:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 2f0:	adrp	x1, 0 <_ZN11__sanitizer18internal_allocatorEv>
 2f4:	add	x0, x0, #0x0
 2f8:	add	x1, x1, #0x0
 2fc:	mov	w4, #0x8                   	// #8
 300:	mov	x2, x20
 304:	mov	x3, x19
 308:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 30c:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 310:	dmb	ish
 314:	strb	wzr, [x8]
 318:	cbnz	x0, 2b0 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x8c>
 31c:	mov	x0, x19
 320:	bl	1f4 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
 324:	mov	x3, #0xc041                	// #49217
 328:	movk	x3, #0xbceb, lsl #16
 32c:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 330:	adrp	x2, 0 <_ZN11__sanitizer18internal_allocatorEv>
 334:	movk	x3, #0xb03a, lsl #32
 338:	add	x0, x0, #0x0
 33c:	add	x2, x2, #0x0
 340:	mov	w1, #0xa6                  	// #166
 344:	movk	x3, #0x6a6c, lsl #48
 348:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000034c <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
 34c:	mov	x8, x3
 350:	mov	x3, x2
 354:	mov	x2, x1
 358:	umulh	x9, x1, x3
 35c:	cbnz	x9, 36c <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x20>
 360:	mul	x1, x3, x2
 364:	mov	x2, x8
 368:	b	224 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 36c:	str	x30, [sp, #-16]!
 370:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 374:	ldr	x8, [x8]
 378:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 37c:	add	x0, x0, #0x0
 380:	ldr	x1, [x8]
 384:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 388:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000038c <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
 38c:	str	x30, [sp, #-32]!
 390:	stp	x20, x19, [sp, #16]
 394:	mov	x3, x1
 398:	mov	x8, x0
 39c:	umulh	x9, x0, x1
 3a0:	cbnz	x9, 3e0 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x54>
 3a4:	mul	x19, x3, x8
 3a8:	mov	x1, x2
 3ac:	mov	x0, x19
 3b0:	mov	x2, xzr
 3b4:	bl	11c <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 3b8:	mov	x20, x0
 3bc:	cbz	x0, 3d0 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x44>
 3c0:	mov	x0, x20
 3c4:	mov	w1, wzr
 3c8:	mov	x2, x19
 3cc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 3d0:	mov	x0, x20
 3d4:	ldp	x20, x19, [sp, #16]
 3d8:	ldr	x30, [sp], #32
 3dc:	ret
 3e0:	adrp	x9, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 3e4:	ldr	x9, [x9]
 3e8:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 3ec:	add	x0, x0, #0x0
 3f0:	mov	x2, x8
 3f4:	ldr	x1, [x9]
 3f8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 3fc:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000400 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
 400:	str	x30, [sp, #-32]!
 404:	stp	x20, x19, [sp, #16]
 408:	cbz	x0, 534 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x134>
 40c:	mov	x19, x0
 410:	ldr	x4, [x19, #-8]!
 414:	mov	x8, #0xc041                	// #49217
 418:	movk	x8, #0xbceb, lsl #16
 41c:	movk	x8, #0xb03a, lsl #32
 420:	movk	x8, #0x6a6c, lsl #48
 424:	cmp	x4, x8
 428:	b.ne	580 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x180>  // b.any
 42c:	mov	x20, x1
 430:	str	xzr, [x19]
 434:	cbz	x1, 4a0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa0>
 438:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 43c:	lsr	x8, x19, #48
 440:	cbnz	x8, 47c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x7c>
 444:	adrp	x9, 0 <_ZN11__sanitizer18internal_allocatorEv>
 448:	lsr	x8, x19, #32
 44c:	add	x9, x9, #0x0
 450:	ldr	x11, [x9, x8, lsl #3]
 454:	dmb	ish
 458:	cbz	x11, 47c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x7c>
 45c:	ubfx	x10, x19, #20, #12
 460:	ldrb	w11, [x11, x10]
 464:	cbz	w11, 47c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x7c>
 468:	ldr	x8, [x9, x8, lsl #3]
 46c:	dmb	ish
 470:	cbz	x8, 540 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x140>
 474:	ldrb	w2, [x8, x10]
 478:	b	544 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x144>
 47c:	mov	x2, x19
 480:	ldp	x20, x19, [sp, #16]
 484:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 488:	mov	w8, #0x248                 	// #584
 48c:	add	x0, x0, #0x0
 490:	movk	w8, #0x4, lsl #16
 494:	add	x1, x0, x8
 498:	ldr	x30, [sp], #32
 49c:	b	0 <_ZN11__sanitizer18internal_allocatorEv>
 4a0:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 4a4:	add	x8, x8, #0x0
 4a8:	mov	w9, #0x1                   	// #1
 4ac:	ldaxrb	w10, [x8]
 4b0:	stlxrb	w11, w9, [x8]
 4b4:	cbnz	w11, 4ac <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xac>
 4b8:	cbz	w10, 4c8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xc8>
 4bc:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 4c0:	add	x0, x0, #0x0
 4c4:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 4c8:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 4cc:	lsr	x8, x19, #48
 4d0:	cbnz	x8, 50c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x10c>
 4d4:	adrp	x9, 0 <_ZN11__sanitizer18internal_allocatorEv>
 4d8:	lsr	x8, x19, #32
 4dc:	add	x9, x9, #0x0
 4e0:	ldr	x11, [x9, x8, lsl #3]
 4e4:	dmb	ish
 4e8:	cbz	x11, 50c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x10c>
 4ec:	ubfx	x10, x19, #20, #12
 4f0:	ldrb	w11, [x11, x10]
 4f4:	cbz	w11, 50c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x10c>
 4f8:	ldr	x8, [x9, x8, lsl #3]
 4fc:	dmb	ish
 500:	cbz	x8, 560 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x160>
 504:	ldrb	w2, [x8, x10]
 508:	b	564 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x164>
 50c:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 510:	mov	w8, #0x248                 	// #584
 514:	add	x0, x0, #0x0
 518:	movk	w8, #0x4, lsl #16
 51c:	add	x1, x0, x8
 520:	mov	x2, x19
 524:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 528:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 52c:	dmb	ish
 530:	strb	wzr, [x8]
 534:	ldp	x20, x19, [sp, #16]
 538:	ldr	x30, [sp], #32
 53c:	ret
 540:	mov	x2, xzr
 544:	mov	x0, x20
 548:	mov	x3, x19
 54c:	ldp	x20, x19, [sp, #16]
 550:	adrp	x1, 0 <_ZN11__sanitizer18internal_allocatorEv>
 554:	add	x1, x1, #0x0
 558:	ldr	x30, [sp], #32
 55c:	b	0 <_ZN11__sanitizer18internal_allocatorEv>
 560:	mov	x2, xzr
 564:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 568:	adrp	x1, 0 <_ZN11__sanitizer18internal_allocatorEv>
 56c:	add	x0, x0, #0x0
 570:	add	x1, x1, #0x0
 574:	mov	x3, x19
 578:	bl	0 <_ZN11__sanitizer18internal_allocatorEv>
 57c:	b	528 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x128>
 580:	mov	x3, #0xc041                	// #49217
 584:	movk	x3, #0xbceb, lsl #16
 588:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 58c:	adrp	x2, 0 <_ZN11__sanitizer18internal_allocatorEv>
 590:	movk	x3, #0xb03a, lsl #32
 594:	add	x0, x0, #0x0
 598:	add	x2, x2, #0x0
 59c:	mov	w1, #0xca                  	// #202
 5a0:	movk	x3, #0x6a6c, lsl #48
 5a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000005a8 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>:
 5a8:	stp	x30, x21, [sp, #-32]!
 5ac:	stp	x20, x19, [sp, #16]
 5b0:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 5b4:	ldr	x9, [x8]
 5b8:	sub	x8, x9, #0x1
 5bc:	tst	x9, x8
 5c0:	b.ne	670 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xc8>  // b.any
 5c4:	mov	x19, x0
 5c8:	ldp	x8, x0, [x0]
 5cc:	add	x10, x1, x9
 5d0:	sub	x10, x10, #0x1
 5d4:	neg	x9, x9
 5d8:	and	x21, x10, x9
 5dc:	sub	x9, x8, x0
 5e0:	cmp	x9, x21
 5e4:	b.ge	650 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xa8>  // b.tcont
 5e8:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 5ec:	ldr	x20, [x20]
 5f0:	ldr	x0, [x20]
 5f4:	cbnz	x0, 600 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0x58>
 5f8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 5fc:	str	x0, [x20]
 600:	sub	x8, x0, #0x1
 604:	tst	x0, x8
 608:	b.ne	670 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xc8>  // b.any
 60c:	add	x8, x21, x0
 610:	sub	x8, x8, #0x1
 614:	neg	x9, x0
 618:	and	x20, x8, x9
 61c:	adrp	x1, 0 <_ZN11__sanitizer18internal_allocatorEv>
 620:	add	x1, x1, #0x0
 624:	mov	x0, x20
 628:	mov	w2, wzr
 62c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 630:	add	x8, x0, x20
 634:	stp	x8, x0, [x19]
 638:	adrp	x9, 0 <_ZN11__sanitizer18internal_allocatorEv>
 63c:	ldr	x9, [x9]
 640:	cbz	x9, 650 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xa8>
 644:	mov	x1, x20
 648:	blr	x9
 64c:	ldp	x8, x0, [x19]
 650:	sub	x8, x8, x0
 654:	cmp	x8, x21
 658:	b.lt	680 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xd8>  // b.tstop
 65c:	add	x8, x0, x21
 660:	str	x8, [x19, #8]
 664:	ldp	x20, x19, [sp, #16]
 668:	ldp	x30, x21, [sp], #32
 66c:	ret
 670:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 674:	add	x0, x0, #0x0
 678:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 67c:	bl	0 <_ZN11__sanitizer3DieEv>
 680:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 684:	adrp	x2, 0 <_ZN11__sanitizer18internal_allocatorEv>
 688:	add	x0, x0, #0x0
 68c:	add	x2, x2, #0x0
 690:	mov	w1, #0xe1                  	// #225
 694:	mov	x3, xzr
 698:	mov	x4, xzr
 69c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000006a0 <_ZN11__sanitizer31SetLowLevelAllocateMinAlignmentEm>:
 6a0:	str	x30, [sp, #-16]!
 6a4:	sub	x8, x0, #0x1
 6a8:	tst	x0, x8
 6ac:	b.ne	6cc <_ZN11__sanitizer31SetLowLevelAllocateMinAlignmentEm+0x2c>  // b.any
 6b0:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 6b4:	ldr	x9, [x8]
 6b8:	cmp	x9, x0
 6bc:	csel	x9, x0, x9, cc  // cc = lo, ul, last
 6c0:	str	x9, [x8]
 6c4:	ldr	x30, [sp], #16
 6c8:	ret
 6cc:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 6d0:	adrp	x2, 0 <_ZN11__sanitizer18internal_allocatorEv>
 6d4:	add	x0, x0, #0x0
 6d8:	add	x2, x2, #0x0
 6dc:	mov	w1, #0xe8                  	// #232
 6e0:	mov	x3, xzr
 6e4:	mov	x4, xzr
 6e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000006ec <_ZN11__sanitizer27SetLowLevelAllocateCallbackEPFvmmE>:
 6ec:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 6f0:	str	x0, [x8]
 6f4:	ret

00000000000006f8 <_ZN11__sanitizer22IsAllocatorOutOfMemoryEv>:
 6f8:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 6fc:	ldrb	w8, [x8]
 700:	cmp	w8, #0x0
 704:	cset	w0, ne  // ne = any
 708:	ret

000000000000070c <_ZN11__sanitizer23SetAllocatorOutOfMemoryEv>:
 70c:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 710:	mov	w9, #0x1                   	// #1
 714:	strb	w9, [x8]
 718:	ret

000000000000071c <_ZN11__sanitizer22AllocatorMayReturnNullEv>:
 71c:	adrp	x8, 0 <_ZN11__sanitizer18internal_allocatorEv>
 720:	ldrb	w8, [x8]
 724:	cmp	w8, #0x0
 728:	cset	w0, ne  // ne = any
 72c:	ret

0000000000000730 <_ZN11__sanitizer25SetAllocatorMayReturnNullEb>:
 730:	and	w8, w0, #0x1
 734:	adrp	x9, 0 <_ZN11__sanitizer18internal_allocatorEv>
 738:	strb	w8, [x9]
 73c:	ret

0000000000000740 <_ZN11__sanitizer34PrintHintAllocatorCannotReturnNullEv>:
 740:	adrp	x0, 0 <_ZN11__sanitizer18internal_allocatorEv>
 744:	add	x0, x0, #0x0
 748:	b	0 <_ZN11__sanitizer6ReportEPKcz>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>:
   0:	sub	sp, sp, #0x20
   4:	stp	x30, x19, [sp, #16]
   8:	cmp	x2, #0x0
   c:	csinc	x2, x2, xzr, ne  // ne = any
  10:	mvn	x8, x2
  14:	mov	x19, x3
  18:	cmp	x8, x3
  1c:	b.cs	44 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x44>  // b.hs, b.nlast
  20:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  24:	ldr	x8, [x8]
  28:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
  2c:	add	x0, x0, #0x0
  30:	mov	x3, x19
  34:	ldr	x1, [x8]
  38:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  3c:	mov	x0, xzr
  40:	b	154 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x154>
  44:	mov	x8, x0
  48:	cmp	x19, #0x9
  4c:	mov	x9, x2
  50:	b.cc	70 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x70>  // b.lo, b.ul, b.last
  54:	sub	x9, x19, #0x1
  58:	tst	x19, x9
  5c:	b.ne	194 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x194>  // b.any
  60:	add	x9, x19, x2
  64:	sub	x9, x9, #0x1
  68:	neg	x10, x19
  6c:	and	x9, x9, x10
  70:	cmp	x19, #0x20, lsl #12
  74:	b.hi	9c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x9c>  // b.pmore
  78:	mov	w10, #0x1                   	// #1
  7c:	movk	w10, #0x2, lsl #16
  80:	cmp	x9, x10
  84:	b.cs	9c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x9c>  // b.hs, b.nlast
  88:	cmp	x9, #0x100
  8c:	b.hi	c8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xc8>  // b.pmore
  90:	add	x9, x9, #0xf
  94:	lsr	x3, x9, #4
  98:	b	f8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xf8>
  9c:	mov	w9, #0xdc0                 	// #3520
  a0:	mov	w10, #0x1008                	// #4104
  a4:	movk	w9, #0x8, lsl #16
  a8:	movk	w10, #0xc, lsl #16
  ac:	add	x0, x8, x9
  b0:	add	x1, x8, x10
  b4:	mov	x3, x19
  b8:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
  bc:	cmp	x19, #0x9
  c0:	b.cs	148 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x148>  // b.hs, b.nlast
  c4:	b	154 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x154>
  c8:	clz	x10, x9
  cc:	eor	x10, x10, #0x3f
  d0:	mov	w11, #0xffffffff            	// #-1
  d4:	sub	x12, x10, #0x2
  d8:	lsr	x13, x9, x12
  dc:	lsl	w11, w11, w12
  e0:	and	x12, x13, #0x3
  e4:	mvn	w11, w11
  e8:	bfi	x12, x10, #2, #7
  ec:	tst	x9, x11
  f0:	cinc	x9, x12, ne  // ne = any
  f4:	sub	x3, x9, #0x10
  f8:	cbz	x3, 1a4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x1a4>
  fc:	cmp	x3, #0x36
 100:	b.cs	1c0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x1c0>  // b.hs, b.nlast
 104:	add	x9, x1, x3, lsl #10
 108:	ldr	x10, [x9]
 10c:	cbz	x10, 160 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x160>
 110:	sub	x8, x10, #0x1
 114:	add	x11, x9, #0x20
 118:	str	x8, [x9]
 11c:	add	x10, x11, x10, lsl #3
 120:	ldur	x10, [x10, #-16]
 124:	mov	w12, #0xd810                	// #55312
 128:	ldr	x0, [x11, x8, lsl #3]
 12c:	prfm	pldl1keep, [x10]
 130:	ldr	x8, [x9, #16]
 134:	ldr	x9, [x1, x12]
 138:	add	x8, x9, x8
 13c:	str	x8, [x1, x12]
 140:	cmp	x19, #0x9
 144:	b.cc	154 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x154>  // b.lo, b.ul, b.last
 148:	sub	x8, x19, #0x1
 14c:	ands	x3, x8, x0
 150:	b.ne	1dc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x1dc>  // b.any
 154:	ldp	x30, x19, [sp, #16]
 158:	add	sp, sp, #0x20
 15c:	ret
 160:	stp	x9, x1, [sp]
 164:	mov	x0, x1
 168:	mov	x1, x9
 16c:	mov	x2, x8
 170:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 174:	tbz	w0, #0, 184 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x184>
 178:	ldp	x9, x1, [sp]
 17c:	ldr	x10, [x9]
 180:	b	110 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x110>
 184:	mov	x0, xzr
 188:	cmp	x19, #0x9
 18c:	b.cs	148 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x148>  // b.hs, b.nlast
 190:	b	154 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x154>
 194:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 198:	add	x0, x0, #0x0
 19c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 1a0:	bl	0 <_ZN11__sanitizer3DieEv>
 1a4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1a8:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x2, x2, #0x0
 1b4:	mov	w1, #0x99                  	// #153
 1b8:	mov	x4, xzr
 1bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1c0:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1c4:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x2, x2, #0x0
 1d0:	mov	w1, #0x9a                  	// #154
 1d4:	mov	w4, #0x36                  	// #54
 1d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1dc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1e0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1e4:	add	x0, x0, #0x0
 1e8:	add	x2, x2, #0x0
 1ec:	mov	w1, #0x49                  	// #73
 1f0:	mov	x4, xzr
 1f4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm:

0000000000000000 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>:
   0:	stp	x30, x25, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	sub	x24, x3, #0x1
  14:	tst	x3, x24
  18:	b.ne	1cc <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1cc>  // b.any
  1c:	ldr	x8, [x0]
  20:	mov	x21, x0
  24:	sub	x9, x8, #0x1
  28:	tst	x8, x9
  2c:	b.ne	1e4 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1e4>  // b.any
  30:	add	x9, x2, x8
  34:	neg	x10, x8
  38:	sub	x9, x9, #0x1
  3c:	cmp	x8, x3
  40:	and	x9, x9, x10
  44:	add	x8, x9, x8
  48:	csel	x9, x3, xzr, cc  // cc = lo, ul, last
  4c:	add	x20, x8, x9
  50:	mov	x22, x3
  54:	mov	x23, x2
  58:	cmp	x20, x2
  5c:	b.cs	84 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x84>  // b.hs, b.nlast
  60:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  64:	ldr	x8, [x8]
  68:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
  6c:	add	x0, x0, #0x0
  70:	mov	x2, x20
  74:	ldr	x1, [x8]
  78:	mov	x3, x22
  7c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  80:	b	1b0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1b0>
  84:	adrp	x8, 8 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x8>
  88:	mov	x19, x1
  8c:	ldr	x1, [x8]
  90:	mov	x0, x20
  94:	bl	0 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>
  98:	cbz	x0, 1b0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1b0>
  9c:	ldr	x9, [x21]
  a0:	mov	x8, x0
  a4:	sub	x10, x9, #0x1
  a8:	tst	x10, x0
  ac:	b.ne	1f4 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1f4>  // b.any
  b0:	add	x11, x9, x8
  b4:	and	x12, x11, x24
  b8:	sub	x12, x22, x12
  bc:	tst	x11, x24
  c0:	csel	x12, xzr, x12, eq  // eq = none
  c4:	add	x22, x12, x11
  c8:	tst	x22, x24
  cc:	b.ne	20c <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x20c>  // b.any
  d0:	tst	x22, x10
  d4:	b.ne	224 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x224>  // b.any
  d8:	add	x3, x22, x23
  dc:	cmp	x3, x8
  e0:	b.cc	23c <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x23c>  // b.lo, b.ul, b.last
  e4:	add	x4, x20, x8
  e8:	cmp	x3, x4
  ec:	b.hi	258 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x258>  // b.pmore
  f0:	sub	x24, x22, x9
  f4:	stp	x20, x23, [x24, #8]
  f8:	str	x8, [x24]
  fc:	cbz	x20, 270 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x270>
 100:	mov	w8, #0x10                  	// #16
 104:	movk	w8, #0x4, lsl #16
 108:	clz	x9, x20
 10c:	add	x23, x21, x8
 110:	eor	x25, x9, #0x3f
 114:	add	x0, x23, #0x230
 118:	mov	w8, #0x1                   	// #1
 11c:	ldaxrb	w9, [x0]
 120:	stlxrb	w10, w8, [x0]
 124:	cbnz	w10, 11c <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x11c>
 128:	cbz	w9, 130 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x130>
 12c:	bl	0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 130:	ldr	x3, [x23]
 134:	cmp	x3, #0x8, lsl #12
 138:	b.cs	290 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x290>  // b.hs, b.nlast
 13c:	add	x8, x3, #0x1
 140:	str	x8, [x23]
 144:	str	x3, [x24, #24]
 148:	ldr	x8, [x21, #8]
 14c:	mov	w10, #0x40                  	// #64
 150:	add	x9, x21, x25, lsl #3
 154:	movk	w10, #0x4, lsl #16
 158:	str	x24, [x8, x3, lsl #3]
 15c:	ldp	x11, x12, [x23, #32]
 160:	ldr	x8, [x23, #16]
 164:	strb	wzr, [x23, #8]
 168:	add	x11, x11, x20
 16c:	add	x8, x8, #0x1
 170:	cmp	x12, x11
 174:	str	x8, [x23, #16]
 178:	csel	x8, x12, x11, hi  // hi = pmore
 17c:	stp	x11, x8, [x23, #32]
 180:	ldr	x8, [x9, x10]
 184:	add	x8, x8, #0x1
 188:	str	x8, [x9, x10]
 18c:	ldr	x8, [x19, #16]
 190:	add	x8, x8, x20
 194:	str	x8, [x19, #16]
 198:	ldr	x8, [x19, #24]
 19c:	add	x8, x8, x20
 1a0:	str	x8, [x19, #24]
 1a4:	dmb	ish
 1a8:	strb	wzr, [x23, #560]
 1ac:	b	1b4 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x1b4>
 1b0:	mov	x22, xzr
 1b4:	mov	x0, x22
 1b8:	ldp	x20, x19, [sp, #48]
 1bc:	ldp	x22, x21, [sp, #32]
 1c0:	ldp	x24, x23, [sp, #16]
 1c4:	ldp	x30, x25, [sp], #64
 1c8:	ret
 1cc:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 1d0:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x2, x2, #0x0
 1dc:	mov	w1, #0x56                  	// #86
 1e0:	b	284 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x284>
 1e4:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 1f0:	bl	0 <_ZN11__sanitizer3DieEv>
 1f4:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 1f8:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 1fc:	add	x0, x0, #0x0
 200:	add	x2, x2, #0x0
 204:	mov	w1, #0x65                  	// #101
 208:	b	284 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x284>
 20c:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 210:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 214:	add	x0, x0, #0x0
 218:	add	x2, x2, #0x0
 21c:	mov	w1, #0x6b                  	// #107
 220:	b	284 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x284>
 224:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 228:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 22c:	add	x0, x0, #0x0
 230:	add	x2, x2, #0x0
 234:	mov	w1, #0x6c                  	// #108
 238:	b	284 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm+0x284>
 23c:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 240:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 244:	add	x0, x0, #0x0
 248:	add	x2, x2, #0x0
 24c:	mov	w1, #0x6d                  	// #109
 250:	mov	x4, x8
 254:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 258:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 25c:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 260:	add	x0, x0, #0x0
 264:	add	x2, x2, #0x0
 268:	mov	w1, #0x6e                  	// #110
 26c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 270:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 274:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 278:	add	x0, x0, #0x0
 27c:	add	x2, x2, #0x0
 280:	mov	w1, #0x160                 	// #352
 284:	mov	x3, xzr
 288:	mov	x4, xzr
 28c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 290:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 294:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE8AllocateEPNS_14AllocatorStatsEmm>
 298:	add	x0, x0, #0x0
 29c:	add	x2, x2, #0x0
 2a0:	mov	w1, #0x16                  	// #22
 2a4:	mov	w4, #0x8000                	// #32768
 2a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	ldr	x8, [x1, #8]
  10:	mov	x21, x3
  14:	mov	x19, x2
  18:	mov	x22, x1
  1c:	mov	x20, x0
  20:	cbz	x8, 110 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x110>
  24:	mov	w8, #0xd800                	// #55296
  28:	add	x1, x20, x8
  2c:	mov	x0, x19
  30:	mov	x2, x20
  34:	mov	x3, x21
  38:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
  3c:	cbz	x0, cc <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xcc>
  40:	ldr	x8, [x0, #8]
  44:	mov	x3, x0
  48:	cbz	x8, 1b4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x1b4>
  4c:	cmp	x8, #0x3
  50:	b.ls	80 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x80>  // b.plast
  54:	lsl	x9, x8, #3
  58:	add	x11, x9, x3
  5c:	add	x10, x22, #0x20
  60:	add	x11, x11, #0x10
  64:	cmp	x11, x10
  68:	b.ls	dc <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xdc>  // b.plast
  6c:	add	x9, x9, x22
  70:	add	x9, x9, #0x20
  74:	add	x10, x3, #0x10
  78:	cmp	x9, x10
  7c:	b.ls	dc <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xdc>  // b.plast
  80:	mov	x9, xzr
  84:	lsl	x10, x9, #3
  88:	add	x11, x10, x22
  8c:	add	x12, x10, x3
  90:	sub	x9, x8, x9
  94:	add	x10, x11, #0x20
  98:	add	x11, x12, #0x10
  9c:	ldr	x12, [x11], #8
  a0:	subs	x9, x9, #0x1
  a4:	str	x12, [x10], #8
  a8:	b.ne	9c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x9c>  // b.any
  ac:	str	x8, [x22]
  b0:	add	x8, x20, x21, lsl #10
  b4:	ldr	x2, [x8, #24]
  b8:	cbz	x2, c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xc8>
  bc:	mov	x0, x20
  c0:	mov	x1, x19
  c4:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
  c8:	mov	w0, #0x1                   	// #1
  cc:	ldp	x20, x19, [sp, #32]
  d0:	ldp	x22, x21, [sp, #16]
  d4:	ldr	x30, [sp], #48
  d8:	ret
  dc:	and	x9, x8, #0xfffffffffffffffc
  e0:	add	x10, x3, #0x20
  e4:	add	x11, x22, #0x30
  e8:	mov	x12, x9
  ec:	ldp	q0, q1, [x10, #-16]
  f0:	add	x10, x10, #0x20
  f4:	subs	x12, x12, #0x4
  f8:	stp	q0, q1, [x11, #-16]
  fc:	add	x11, x11, #0x20
 100:	b.ne	ec <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xec>  // b.any
 104:	cmp	x8, x9
 108:	b.ne	84 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x84>  // b.any
 10c:	b	ac <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xac>
 110:	add	x8, x20, #0x418
 114:	mov	w9, #0x1                   	// #1
 118:	mov	w10, #0x10                  	// #16
 11c:	mov	w11, #0x4000                	// #16384
 120:	mov	w12, #0x40                  	// #64
 124:	mov	w13, #0x3e                  	// #62
 128:	mov	w14, #0x14                  	// #20
 12c:	mov	w15, #0x100                 	// #256
 130:	b	184 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x184>
 134:	mov	w16, #0x200                 	// #512
 138:	udiv	w17, w11, w16
 13c:	cmp	w17, #0x40
 140:	csel	x17, x17, x12, cc  // cc = lo, ul, last
 144:	cmp	x17, #0x0
 148:	csinc	x17, x17, xzr, ne  // ne = any
 14c:	cmp	x17, #0x3e
 150:	csel	x17, x17, x13, cc  // cc = lo, ul, last
 154:	lsl	x18, x17, #1
 158:	lsl	x17, x17, #3
 15c:	add	x17, x17, #0x10
 160:	cmp	x16, x17
 164:	add	x10, x10, #0x10
 168:	stp	x18, x16, [x8, #-16]
 16c:	csel	x16, x14, xzr, cc  // cc = lo, ul, last
 170:	add	x9, x9, #0x1
 174:	cmp	x10, #0x360
 178:	str	x16, [x8]
 17c:	add	x8, x8, #0x400
 180:	b.eq	24 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x24>  // b.none
 184:	cmp	x10, #0x350
 188:	b.eq	134 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x134>  // b.none
 18c:	cmp	x9, #0x11
 190:	mov	x16, x10
 194:	b.cc	138 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x138>  // b.lo, b.ul, b.last
 198:	sub	x16, x9, #0x10
 19c:	lsr	x17, x16, #2
 1a0:	lsl	x17, x15, x17
 1a4:	lsr	x18, x17, #2
 1a8:	and	x16, x16, #0x3
 1ac:	madd	x16, x18, x16, x17
 1b0:	b	138 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x138>
 1b4:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 1b8:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x2, x2, #0x0
 1c4:	mov	w1, #0xf0                  	// #240
 1c8:	mov	x3, xzr
 1cc:	mov	x4, xzr
 1d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>:
   0:	stp	x30, x25, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	w9, #0x40                  	// #64
  14:	add	x8, x0, x3, lsl #6
  18:	movk	w9, #0x8, lsl #16
  1c:	mov	x20, x3
  20:	mov	x22, x2
  24:	mov	x23, x1
  28:	mov	x21, x0
  2c:	add	x19, x8, x9
  30:	mov	w8, #0x1                   	// #1
  34:	ldaxrb	w9, [x19]
  38:	stlxrb	w10, w8, [x19]
  3c:	cbnz	w10, 34 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x34>
  40:	cbz	w9, 4c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x4c>
  44:	mov	x0, x19
  48:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  4c:	mov	w8, #0x48                  	// #72
  50:	add	x25, x21, x20, lsl #6
  54:	movk	w8, #0x8, lsl #16
  58:	add	x24, x25, x8
  5c:	ldr	x8, [x24]
  60:	cbnz	x8, 88 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x88>
  64:	mov	x0, x21
  68:	mov	x1, x23
  6c:	mov	x2, x22
  70:	mov	x3, x19
  74:	mov	x4, x20
  78:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  7c:	tbz	w0, #0, d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xd4>
  80:	ldr	x8, [x24]
  84:	cbz	x8, dc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xdc>
  88:	mov	w9, #0x50                  	// #80
  8c:	movk	w9, #0x8, lsl #16
  90:	ldr	x0, [x25, x9]
  94:	ldr	x10, [x0]
  98:	str	x10, [x25, x9]
  9c:	cbnz	x10, b0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xb0>
  a0:	mov	w10, #0x58                  	// #88
  a4:	add	x9, x21, x20, lsl #6
  a8:	movk	w10, #0x8, lsl #16
  ac:	str	xzr, [x9, x10]
  b0:	sub	x8, x8, #0x1
  b4:	str	x8, [x24]
  b8:	dmb	ish
  bc:	strb	wzr, [x19]
  c0:	ldp	x20, x19, [sp, #48]
  c4:	ldp	x22, x21, [sp, #32]
  c8:	ldp	x24, x23, [sp, #16]
  cc:	ldp	x30, x25, [sp], #64
  d0:	ret
  d4:	mov	x0, xzr
  d8:	b	b8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xb8>
  dc:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  e0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  e4:	add	x0, x0, #0x0
  e8:	add	x2, x2, #0x0
  ec:	mov	w1, #0x41                  	// #65
  f0:	mov	x3, xzr
  f4:	mov	x4, xzr
  f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	sub	sp, sp, #0x1a0
  1c:	mov	x20, x2
  20:	mov	x2, x4
  24:	mov	x22, x4
  28:	mov	x19, x3
  2c:	mov	x21, x0
  30:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
  34:	cbz	x0, 32c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x32c>
  38:	mov	x23, x0
  3c:	cmp	x22, #0x35
  40:	b.ne	4c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x4c>  // b.any
  44:	mov	w12, #0x200                 	// #512
  48:	b	78 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x78>
  4c:	subs	x8, x22, #0x10
  50:	b.hi	5c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x5c>  // b.pmore
  54:	lsl	x12, x22, #4
  58:	b	74 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x74>
  5c:	lsr	x9, x8, #2
  60:	mov	w10, #0x100                 	// #256
  64:	lsl	x9, x10, x9
  68:	lsr	x10, x9, #2
  6c:	and	x8, x8, #0x3
  70:	madd	x12, x10, x8, x9
  74:	cbz	x12, 354 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x354>
  78:	mov	w8, #0x4000                	// #16384
  7c:	udiv	w8, w8, w12
  80:	mov	w9, #0x40                  	// #64
  84:	cmp	w8, #0x40
  88:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  8c:	cmp	x8, #0x0
  90:	csinc	x8, x8, xzr, ne  // ne = any
  94:	cmp	x8, #0x3e
  98:	mov	w9, #0x3e                  	// #62
  9c:	csel	x25, x8, x9, cc  // cc = lo, ul, last
  a0:	mov	w8, #0x100000              	// #1048576
  a4:	udiv	x8, x8, x12
  a8:	madd	x27, x8, x12, x23
  ac:	cmp	x23, x27
  b0:	b.cs	328 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x328>  // b.hs, b.nlast
  b4:	add	x9, x20, x22, lsl #10
  b8:	mov	w10, #0xd810                	// #55312
  bc:	mov	x24, xzr
  c0:	mov	x8, xzr
  c4:	add	x28, x9, #0x18
  c8:	add	x29, x20, x10
  cc:	add	x13, sp, #0x20
  d0:	stp	x21, x22, [sp, #16]
  d4:	b	e8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0xe8>
  d8:	mov	x24, xzr
  dc:	add	x23, x23, x12
  e0:	cmp	x23, x27
  e4:	b.cs	1f4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1f4>  // b.hs, b.nlast
  e8:	mov	x9, x24
  ec:	add	x24, x24, #0x1
  f0:	cmp	x24, #0x30
  f4:	str	x23, [x13, x9, lsl #3]
  f8:	b.ne	dc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0xdc>  // b.any
  fc:	mov	x22, #0xffffffffffffffff    	// #-1
 100:	add	x21, sp, #0x20
 104:	b	130 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x130>
 108:	ldr	x10, [x19, #24]
 10c:	add	x9, x9, #0x1
 110:	str	x8, [x10]
 114:	str	x8, [x19, #24]
 118:	mov	x8, xzr
 11c:	str	x9, [x19, #8]
 120:	add	x22, x22, #0x1
 124:	cmp	x22, #0x2f
 128:	add	x21, x21, #0x8
 12c:	b.cs	d8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0xd8>  // b.hs, b.nlast
 130:	cbz	x8, 140 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x140>
 134:	ldr	x26, [x21]
 138:	ldr	x9, [x8, #8]
 13c:	b	19c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x19c>
 140:	ldr	x26, [x21]
 144:	ldr	x3, [x28]
 148:	mov	x8, x26
 14c:	cbz	x3, 190 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x190>
 150:	cmp	x3, #0x36
 154:	b.cs	35c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x35c>  // b.hs, b.nlast
 158:	add	x24, x20, x3, lsl #10
 15c:	ldr	x8, [x24]
 160:	cbz	x8, 1cc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1cc>
 164:	sub	x9, x8, #0x1
 168:	add	x10, x24, #0x20
 16c:	str	x9, [x24]
 170:	add	x8, x10, x8, lsl #3
 174:	ldur	x11, [x8, #-16]
 178:	ldr	x8, [x10, x9, lsl #3]
 17c:	prfm	pldl1keep, [x11]
 180:	ldr	x9, [x24, #16]
 184:	ldr	x10, [x29]
 188:	add	x9, x10, x9
 18c:	str	x9, [x29]
 190:	cbz	x8, 34c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x34c>
 194:	mov	x9, xzr
 198:	str	xzr, [x8, #8]
 19c:	add	x10, x9, #0x1
 1a0:	add	x9, x8, x9, lsl #3
 1a4:	cmp	x10, x25
 1a8:	str	x10, [x8, #8]
 1ac:	str	x26, [x9, #16]
 1b0:	b.ne	120 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x120>  // b.any
 1b4:	ldr	x9, [x19, #8]
 1b8:	str	xzr, [x8]
 1bc:	cbnz	x9, 108 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x108>
 1c0:	stp	x8, x8, [x19, #16]
 1c4:	mov	w9, #0x1                   	// #1
 1c8:	b	118 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x118>
 1cc:	ldr	x2, [sp, #16]
 1d0:	mov	x0, x20
 1d4:	mov	x1, x24
 1d8:	str	x12, [sp, #8]
 1dc:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 1e0:	tbz	w0, #0, 34c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x34c>
 1e4:	ldr	x8, [x24]
 1e8:	ldr	x12, [sp, #8]
 1ec:	add	x13, sp, #0x20
 1f0:	b	164 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x164>
 1f4:	cbz	x24, 2f0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2f0>
 1f8:	ldr	x9, [sp, #24]
 1fc:	mov	w10, #0xd810                	// #55312
 200:	add	x23, x20, x10
 204:	add	x26, sp, #0x20
 208:	add	x9, x20, x9, lsl #10
 20c:	add	x21, x9, #0x18
 210:	b	238 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x238>
 214:	ldr	x10, [x19, #24]
 218:	add	x9, x9, #0x1
 21c:	str	x8, [x10]
 220:	str	x8, [x19, #24]
 224:	mov	x8, xzr
 228:	str	x9, [x19, #8]
 22c:	subs	x24, x24, #0x1
 230:	add	x26, x26, #0x8
 234:	b.eq	2f0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2f0>  // b.none
 238:	cbz	x8, 248 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x248>
 23c:	ldr	x27, [x26]
 240:	ldr	x9, [x8, #8]
 244:	b	2a4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2a4>
 248:	ldr	x27, [x26]
 24c:	ldr	x3, [x21]
 250:	mov	x8, x27
 254:	cbz	x3, 298 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x298>
 258:	cmp	x3, #0x36
 25c:	b.cs	35c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x35c>  // b.hs, b.nlast
 260:	add	x22, x20, x3, lsl #10
 264:	ldr	x8, [x22]
 268:	cbz	x8, 2d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2d4>
 26c:	sub	x9, x8, #0x1
 270:	add	x10, x22, #0x20
 274:	str	x9, [x22]
 278:	add	x8, x10, x8, lsl #3
 27c:	ldur	x11, [x8, #-16]
 280:	ldr	x8, [x10, x9, lsl #3]
 284:	prfm	pldl1keep, [x11]
 288:	ldr	x9, [x22, #16]
 28c:	ldr	x10, [x23]
 290:	add	x9, x10, x9
 294:	str	x9, [x23]
 298:	cbz	x8, 34c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x34c>
 29c:	mov	x9, xzr
 2a0:	str	xzr, [x8, #8]
 2a4:	add	x10, x9, #0x1
 2a8:	add	x9, x8, x9, lsl #3
 2ac:	cmp	x10, x25
 2b0:	str	x10, [x8, #8]
 2b4:	str	x27, [x9, #16]
 2b8:	b.ne	22c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x22c>  // b.any
 2bc:	ldr	x9, [x19, #8]
 2c0:	str	xzr, [x8]
 2c4:	cbnz	x9, 214 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x214>
 2c8:	stp	x8, x8, [x19, #16]
 2cc:	mov	w9, #0x1                   	// #1
 2d0:	b	224 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x224>
 2d4:	ldr	x2, [sp, #16]
 2d8:	mov	x0, x20
 2dc:	mov	x1, x22
 2e0:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 2e4:	tbz	w0, #0, 34c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x34c>
 2e8:	ldr	x8, [x22]
 2ec:	b	26c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x26c>
 2f0:	cbz	x8, 328 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x328>
 2f4:	ldr	x9, [x8, #8]
 2f8:	cbz	x9, 378 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x378>
 2fc:	ldr	x9, [x19, #8]
 300:	str	xzr, [x8]
 304:	cbz	x9, 31c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x31c>
 308:	ldr	x10, [x19, #24]
 30c:	str	x8, [x10]
 310:	str	x8, [x19, #24]
 314:	add	x8, x9, #0x1
 318:	b	324 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x324>
 31c:	stp	x8, x8, [x19, #16]
 320:	mov	w8, #0x1                   	// #1
 324:	str	x8, [x19, #8]
 328:	mov	w0, #0x1                   	// #1
 32c:	add	sp, sp, #0x1a0
 330:	ldp	x20, x19, [sp, #80]
 334:	ldp	x22, x21, [sp, #64]
 338:	ldp	x24, x23, [sp, #48]
 33c:	ldp	x26, x25, [sp, #32]
 340:	ldp	x28, x27, [sp, #16]
 344:	ldp	x29, x30, [sp], #96
 348:	ret
 34c:	mov	w0, wzr
 350:	b	32c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x32c>
 354:	mov	x25, xzr
 358:	b	a0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0xa0>
 35c:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 360:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 364:	add	x0, x0, #0x0
 368:	add	x2, x2, #0x0
 36c:	mov	w1, #0x9a                  	// #154
 370:	mov	w4, #0x36                  	// #54
 374:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 378:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 37c:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 380:	add	x0, x0, #0x0
 384:	add	x2, x2, #0x0
 388:	mov	w1, #0x174                 	// #372
 38c:	mov	x3, xzr
 390:	mov	x4, xzr
 394:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>:
   0:	stp	x30, x23, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	adrp	x8, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  10:	mov	x19, x2
  14:	ldr	x2, [x8]
  18:	mov	x22, x1
  1c:	mov	x21, x0
  20:	mov	w0, #0x100000              	// #1048576
  24:	mov	w1, #0x100000              	// #1048576
  28:	bl	0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc>
  2c:	mov	x20, x0
  30:	cbz	x0, c0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0xc0>
  34:	ldr	x8, [x22, #24]
  38:	tst	x20, #0xfffff
  3c:	add	x8, x8, #0x100, lsl #12
  40:	str	x8, [x22, #24]
  44:	b.ne	d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0xd4>  // b.any
  48:	lsr	x8, x20, #48
  4c:	cbnz	x8, f4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0xf4>
  50:	lsr	x23, x20, #32
  54:	ldr	x0, [x21, x23, lsl #3]
  58:	dmb	ish
  5c:	cbnz	x0, b0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0xb0>
  60:	add	x22, x21, #0x80, lsl #12
  64:	mov	w8, #0x1                   	// #1
  68:	ldaxrb	w9, [x22]
  6c:	stlxrb	w10, w8, [x22]
  70:	cbnz	w10, 68 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0x68>
  74:	cbz	w9, 80 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0x80>
  78:	mov	x0, x22
  7c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  80:	ldr	x0, [x21, x23, lsl #3]
  84:	dmb	ish
  88:	cbnz	x0, a8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0xa8>
  8c:	adrp	x1, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  90:	add	x1, x1, #0x0
  94:	mov	w0, #0x1000                	// #4096
  98:	mov	w2, wzr
  9c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  a0:	dmb	ish
  a4:	str	x0, [x21, x23, lsl #3]
  a8:	dmb	ish
  ac:	strb	wzr, [x22]
  b0:	ubfx	x8, x20, #20, #12
  b4:	ldrb	w4, [x0, x8]
  b8:	cbnz	x4, 114 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm+0x114>
  bc:	strb	w19, [x0, x8]
  c0:	mov	x0, x20
  c4:	ldp	x20, x19, [sp, #32]
  c8:	ldp	x22, x21, [sp, #16]
  cc:	ldp	x30, x23, [sp], #48
  d0:	ret
  d4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  d8:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x131                 	// #305
  e8:	mov	x3, xzr
  ec:	mov	x4, xzr
  f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  f8:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
  fc:	lsr	x3, x20, #20
 100:	add	x0, x0, #0x0
 104:	add	x2, x2, #0x0
 108:	mov	w1, #0x121                 	// #289
 10c:	mov	w4, #0x10000000            	// #268435456
 110:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 114:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
 118:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE14AllocateRegionEPNS_14AllocatorStatsEm>
 11c:	add	x0, x0, #0x0
 120:	add	x2, x2, #0x0
 124:	mov	w1, #0x47                  	// #71
 128:	mov	x3, xzr
 12c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x19, x2
  10:	cbz	x2, 148 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x148>
  14:	cmp	x19, #0x36
  18:	b.cs	168 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x168>  // b.hs, b.nlast
  1c:	add	x22, x0, x19, lsl #10
  20:	mov	x8, x22
  24:	ldr	x9, [x8, #8]!
  28:	mov	x21, x3
  2c:	mov	x2, x1
  30:	mov	x20, x0
  34:	cbz	x9, 7c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x7c>
  38:	ldr	x8, [x22]
  3c:	cmp	x8, x9
  40:	b.eq	130 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x130>  // b.none
  44:	add	x10, x20, x19, lsl #10
  48:	add	x9, x8, #0x1
  4c:	add	x8, x10, x8, lsl #3
  50:	mov	w11, #0xd810                	// #55312
  54:	str	x9, [x22]
  58:	str	x21, [x8, #32]
  5c:	ldr	x8, [x10, #16]
  60:	ldr	x9, [x20, x11]
  64:	sub	x8, x9, x8
  68:	str	x8, [x20, x11]
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x22, x21, [sp, #16]
  74:	ldr	x30, [sp], #48
  78:	ret
  7c:	add	x9, x20, #0x418
  80:	mov	w10, #0x1                   	// #1
  84:	mov	w11, #0x10                  	// #16
  88:	mov	w12, #0x4000                	// #16384
  8c:	mov	w13, #0x40                  	// #64
  90:	mov	w14, #0x3e                  	// #62
  94:	mov	w15, #0x14                  	// #20
  98:	mov	w16, #0x100                 	// #256
  9c:	b	f0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0xf0>
  a0:	mov	w17, #0x200                 	// #512
  a4:	udiv	w18, w12, w17
  a8:	cmp	w18, #0x40
  ac:	csel	x18, x18, x13, cc  // cc = lo, ul, last
  b0:	cmp	x18, #0x0
  b4:	csinc	x18, x18, xzr, ne  // ne = any
  b8:	cmp	x18, #0x3e
  bc:	csel	x18, x18, x14, cc  // cc = lo, ul, last
  c0:	lsl	x0, x18, #1
  c4:	lsl	x18, x18, #3
  c8:	add	x18, x18, #0x10
  cc:	cmp	x17, x18
  d0:	add	x11, x11, #0x10
  d4:	stp	x0, x17, [x9, #-16]
  d8:	csel	x17, x15, xzr, cc  // cc = lo, ul, last
  dc:	add	x10, x10, #0x1
  e0:	cmp	x11, #0x360
  e4:	str	x17, [x9]
  e8:	add	x9, x9, #0x400
  ec:	b.eq	120 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x120>  // b.none
  f0:	cmp	x11, #0x350
  f4:	b.eq	a0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0xa0>  // b.none
  f8:	cmp	x10, #0x11
  fc:	mov	x17, x11
 100:	b.cc	a4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0xa4>  // b.lo, b.ul, b.last
 104:	sub	x17, x10, #0x10
 108:	lsr	x18, x17, #2
 10c:	lsl	x18, x16, x18
 110:	lsr	x0, x18, #2
 114:	and	x17, x17, #0x3
 118:	madd	x17, x0, x17, x18
 11c:	b	a4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0xa4>
 120:	ldr	x9, [x8]
 124:	ldr	x8, [x22]
 128:	cmp	x8, x9
 12c:	b.ne	44 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x44>  // b.any
 130:	mov	x0, x20
 134:	mov	x1, x22
 138:	mov	x3, x19
 13c:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>
 140:	ldr	x8, [x22]
 144:	b	44 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv+0x44>
 148:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>
 14c:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>
 150:	add	x0, x0, #0x0
 154:	add	x2, x2, #0x0
 158:	mov	w1, #0xa8                  	// #168
 15c:	mov	x3, xzr
 160:	mov	x4, xzr
 164:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 168:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>
 16c:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE10DeallocateEPS3_mPv>
 170:	add	x0, x0, #0x0
 174:	add	x2, x2, #0x0
 178:	mov	w1, #0xa9                  	// #169
 17c:	mov	w4, #0x36                  	// #54
 180:	mov	x3, x19
 184:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>:
   0:	stp	x30, x25, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	ldp	x25, x8, [x1]
  14:	add	x9, x0, x3, lsl #10
  18:	mov	x19, x3
  1c:	ldr	x3, [x9, #24]
  20:	lsr	x8, x8, #1
  24:	cmp	x8, x25
  28:	mov	x20, x2
  2c:	mov	x21, x1
  30:	mov	x22, x0
  34:	csel	x24, x8, x25, cc  // cc = lo, ul, last
  38:	cbz	x3, 88 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x88>
  3c:	cmp	x3, #0x36
  40:	b.cs	1a8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x1a8>  // b.hs, b.nlast
  44:	add	x23, x22, x3, lsl #10
  48:	ldr	x8, [x23]
  4c:	cbz	x8, 170 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x170>
  50:	sub	x9, x8, #0x1
  54:	add	x10, x23, #0x20
  58:	str	x9, [x23]
  5c:	add	x8, x10, x8, lsl #3
  60:	ldur	x8, [x8, #-16]
  64:	mov	w11, #0xd810                	// #55312
  68:	ldr	x3, [x10, x9, lsl #3]
  6c:	prfm	pldl1keep, [x8]
  70:	ldr	x8, [x23, #16]
  74:	ldr	x9, [x22, x11]
  78:	add	x8, x9, x8
  7c:	str	x8, [x22, x11]
  80:	cbnz	x3, 98 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x98>
  84:	b	18c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x18c>
  88:	sub	x8, x25, x24
  8c:	add	x8, x21, x8, lsl #3
  90:	ldr	x3, [x8, #32]
  94:	cbz	x3, 18c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x18c>
  98:	str	x24, [x3, #8]
  9c:	cbz	x24, 104 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x104>
  a0:	cmp	x24, #0x4
  a4:	b.cc	dc <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xdc>  // b.lo, b.ul, b.last
  a8:	lsl	x9, x25, #3
  ac:	add	x8, x9, #0x20
  b0:	add	x10, x3, #0x10
  b4:	add	x11, x21, x8
  b8:	cmp	x11, x10
  bc:	b.ls	134 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x134>  // b.plast
  c0:	lsl	x10, x24, #3
  c4:	add	x11, x10, x3
  c8:	sub	x8, x8, x10
  cc:	add	x10, x11, #0x10
  d0:	add	x8, x21, x8
  d4:	cmp	x8, x10
  d8:	b.cs	134 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x134>  // b.hs, b.nlast
  dc:	mov	x8, xzr
  e0:	sub	x9, x8, x24
  e4:	add	x8, x3, x8, lsl #3
  e8:	add	x10, x21, x25, lsl #3
  ec:	add	x8, x8, #0x10
  f0:	add	x10, x10, #0x20
  f4:	ldr	x11, [x10, x9, lsl #3]
  f8:	adds	x9, x9, #0x1
  fc:	str	x11, [x8], #8
 100:	b.cc	f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xf4>  // b.lo, b.ul, b.last
 104:	ldr	x8, [x21]
 108:	mov	w9, #0xd800                	// #55296
 10c:	add	x1, x22, x9
 110:	mov	x0, x20
 114:	sub	x8, x8, x24
 118:	str	x8, [x21]
 11c:	mov	x2, x19
 120:	ldp	x20, x19, [sp, #48]
 124:	ldp	x22, x21, [sp, #32]
 128:	ldp	x24, x23, [sp, #16]
 12c:	ldp	x30, x25, [sp], #64
 130:	b	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 134:	sub	x9, x9, x24, lsl #3
 138:	and	x8, x24, #0x7ffffffffffffffc
 13c:	add	x9, x9, x21
 140:	add	x9, x9, #0x30
 144:	add	x10, x3, #0x20
 148:	mov	x11, x8
 14c:	ldp	q0, q1, [x9, #-16]
 150:	subs	x11, x11, #0x4
 154:	add	x9, x9, #0x20
 158:	stp	q0, q1, [x10, #-16]
 15c:	add	x10, x10, #0x20
 160:	b.ne	14c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x14c>  // b.any
 164:	cmp	x24, x8
 168:	b.eq	104 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x104>  // b.none
 16c:	b	e0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xe0>
 170:	mov	x0, x22
 174:	mov	x1, x23
 178:	mov	x2, x20
 17c:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 180:	tbz	w0, #0, 18c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x18c>
 184:	ldr	x8, [x23]
 188:	b	50 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x50>
 18c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 190:	ldr	x8, [x8]
 194:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 198:	add	x0, x0, #0x0
 19c:	ldr	x1, [x8]
 1a0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1a4:	bl	0 <_ZN11__sanitizer3DieEv>
 1a8:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 1ac:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x2, x2, #0x0
 1b8:	mov	w1, #0x9a                  	// #154
 1bc:	mov	w4, #0x36                  	// #54
 1c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	ldr	x8, [x3, #8]
  10:	cbz	x8, bc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE+0xbc>
  14:	mov	w9, #0x40                  	// #64
  18:	add	x8, x0, x2, lsl #6
  1c:	movk	w9, #0x8, lsl #16
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x0
  2c:	add	x19, x8, x9
  30:	mov	w8, #0x1                   	// #1
  34:	ldaxrb	w9, [x19]
  38:	stlxrb	w10, w8, [x19]
  3c:	cbnz	w10, 34 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE+0x34>
  40:	cbz	w9, 4c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE+0x4c>
  44:	mov	x0, x19
  48:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE>
  4c:	mov	w8, #0x48                  	// #72
  50:	add	x9, x22, x21, lsl #6
  54:	movk	w8, #0x8, lsl #16
  58:	add	x8, x9, x8
  5c:	ldr	x10, [x8]
  60:	cbz	x10, 80 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE+0x80>
  64:	mov	w11, #0x50                  	// #80
  68:	movk	w11, #0x8, lsl #16
  6c:	ldr	x12, [x9, x11]
  70:	str	x12, [x20]
  74:	str	x20, [x9, x11]
  78:	add	x9, x10, #0x1
  7c:	b	a0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE+0xa0>
  80:	mov	w10, #0x58                  	// #88
  84:	mov	w11, #0x50                  	// #80
  88:	movk	w10, #0x8, lsl #16
  8c:	movk	w11, #0x8, lsl #16
  90:	str	xzr, [x20]
  94:	str	x20, [x9, x10]
  98:	str	x20, [x9, x11]
  9c:	mov	w9, #0x1                   	// #1
  a0:	str	x9, [x8]
  a4:	dmb	ish
  a8:	strb	wzr, [x19]
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldp	x22, x21, [sp, #16]
  b4:	ldr	x30, [sp], #48
  b8:	ret
  bc:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE>
  c0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE>
  c4:	add	x0, x0, #0x0
  c8:	add	x2, x2, #0x0
  cc:	mov	w1, #0xb8                  	// #184
  d0:	mov	x3, xzr
  d4:	mov	x4, xzr
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>:
   0:	stp	x30, x25, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x22, x4
  14:	mov	x23, x3
  18:	mov	x21, x1
  1c:	mov	x20, x0
  20:	cbz	x2, e0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0xe0>
  24:	mov	x19, x2
  28:	cbz	x23, 128 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x128>
  2c:	lsr	x25, x19, #48
  30:	cbnz	x25, 54 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x54>
  34:	lsr	x8, x19, #29
  38:	and	x8, x8, #0x7fffffff8
  3c:	ldr	x8, [x20, x8]
  40:	dmb	ish
  44:	cbz	x8, 54 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x54>
  48:	ubfx	x9, x19, #20, #12
  4c:	ldrb	w8, [x8, x9]
  50:	cbnz	w8, 6c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x6c>
  54:	mov	w8, #0xdc0                 	// #3520
  58:	movk	w8, #0x8, lsl #16
  5c:	add	x0, x20, x8
  60:	mov	x1, x19
  64:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
  68:	cbz	x0, 1cc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x1cc>
  6c:	mov	x0, x20
  70:	mov	x1, x19
  74:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
  78:	mov	x24, x0
  7c:	mov	x0, x20
  80:	mov	x1, x21
  84:	mov	x2, x23
  88:	mov	x3, x22
  8c:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
  90:	mov	x22, x0
  94:	cbz	x0, ac <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0xac>
  98:	cmp	x24, x23
  9c:	csel	x2, x23, x24, hi  // hi = pmore
  a0:	mov	x0, x22
  a4:	mov	x1, x19
  a8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  ac:	cbnz	x25, 104 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x104>
  b0:	lsr	x8, x19, #32
  b4:	ldr	x10, [x20, x8, lsl #3]
  b8:	dmb	ish
  bc:	cbz	x10, 104 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x104>
  c0:	ubfx	x9, x19, #20, #12
  c4:	ldrb	w10, [x10, x9]
  c8:	cbz	w10, 104 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x104>
  cc:	ldr	x8, [x20, x8, lsl #3]
  d0:	dmb	ish
  d4:	cbz	x8, 188 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x188>
  d8:	ldrb	w2, [x8, x9]
  dc:	b	18c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x18c>
  e0:	mov	x0, x20
  e4:	mov	x1, x21
  e8:	mov	x2, x23
  ec:	mov	x3, x22
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldp	x22, x21, [sp, #32]
  f8:	ldp	x24, x23, [sp, #16]
  fc:	ldp	x30, x25, [sp], #64
 100:	b	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 104:	mov	w8, #0xdc0                 	// #3520
 108:	mov	w9, #0x1008                	// #4104
 10c:	movk	w8, #0x8, lsl #16
 110:	movk	w9, #0xc, lsl #16
 114:	add	x0, x20, x8
 118:	add	x1, x20, x9
 11c:	mov	x2, x19
 120:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 124:	b	19c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x19c>
 128:	lsr	x8, x19, #48
 12c:	cbnz	x8, 160 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x160>
 130:	lsr	x8, x19, #32
 134:	ldr	x10, [x20, x8, lsl #3]
 138:	dmb	ish
 13c:	cbz	x10, 160 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x160>
 140:	ubfx	x9, x19, #20, #12
 144:	ldrb	w10, [x10, x9]
 148:	cbz	w10, 160 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x160>
 14c:	ldr	x8, [x20, x8, lsl #3]
 150:	dmb	ish
 154:	cbz	x8, 1b4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x1b4>
 158:	ldrb	w2, [x8, x9]
 15c:	b	1b8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x1b8>
 160:	mov	w8, #0xdc0                 	// #3520
 164:	mov	w9, #0x1008                	// #4104
 168:	movk	w8, #0x8, lsl #16
 16c:	movk	w9, #0xc, lsl #16
 170:	add	x0, x20, x8
 174:	add	x1, x20, x9
 178:	mov	x2, x19
 17c:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 180:	mov	x22, xzr
 184:	b	19c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x19c>
 188:	mov	x2, xzr
 18c:	mov	x0, x21
 190:	mov	x1, x20
 194:	mov	x3, x19
 198:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 19c:	mov	x0, x22
 1a0:	ldp	x20, x19, [sp, #48]
 1a4:	ldp	x22, x21, [sp, #32]
 1a8:	ldp	x24, x23, [sp, #16]
 1ac:	ldp	x30, x25, [sp], #64
 1b0:	ret
 1b4:	mov	x2, xzr
 1b8:	mov	x0, x21
 1bc:	mov	x1, x20
 1c0:	mov	x3, x19
 1c4:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 1c8:	b	180 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x180>
 1cc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 1d0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x2, x2, #0x0
 1dc:	mov	w1, #0x69                  	// #105
 1e0:	mov	x3, xzr
 1e4:	mov	x4, xzr
 1e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>:
   0:	str	x30, [sp, #-16]!
   4:	lsr	x8, x1, #48
   8:	cbnz	x8, 60 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0x60>
   c:	lsr	x8, x1, #32
  10:	ldr	x10, [x0, x8, lsl #3]
  14:	dmb	ish
  18:	cbz	x10, 60 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0x60>
  1c:	ubfx	x9, x1, #20, #12
  20:	ldrb	w10, [x10, x9]
  24:	cbz	w10, 60 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0x60>
  28:	ldr	x10, [x0, x8, lsl #3]
  2c:	dmb	ish
  30:	cbz	x10, fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xfc>
  34:	ldrb	w10, [x10, x9]
  38:	cbz	w10, fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xfc>
  3c:	ldr	x8, [x0, x8, lsl #3]
  40:	dmb	ish
  44:	cbz	x8, a4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xa4>
  48:	ldrb	w8, [x8, x9]
  4c:	cmp	x8, #0x35
  50:	b.ne	9c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0x9c>  // b.any
  54:	mov	w0, #0x200                 	// #512
  58:	ldr	x30, [sp], #16
  5c:	ret
  60:	mov	w8, #0xdc0                 	// #3520
  64:	movk	w8, #0x8, lsl #16
  68:	ldr	x8, [x0, x8]
  6c:	sub	x9, x8, #0x1
  70:	tst	x9, x1
  74:	b.ne	d4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xd4>  // b.any
  78:	tst	x8, x9
  7c:	b.ne	ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xec>  // b.any
  80:	sub	x10, x1, x8
  84:	ldr	x10, [x10, #16]
  88:	neg	x8, x8
  8c:	add	x9, x10, x9
  90:	and	x0, x9, x8
  94:	ldr	x30, [sp], #16
  98:	ret
  9c:	cmp	w8, #0x10
  a0:	b.hi	b0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0xb0>  // b.pmore
  a4:	lsl	x0, x8, #4
  a8:	ldr	x30, [sp], #16
  ac:	ret
  b0:	sub	x8, x8, #0x10
  b4:	mov	w9, #0x100                 	// #256
  b8:	lsr	x10, x8, #2
  bc:	lsl	x9, x9, x10
  c0:	lsr	x10, x9, #2
  c4:	and	x8, x8, #0x3
  c8:	madd	x0, x10, x8, x9
  cc:	ldr	x30, [sp], #16
  d0:	ret
  d4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>
  d8:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x12d                 	// #301
  e8:	b	110 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv+0x110>
  ec:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  f8:	bl	0 <_ZN11__sanitizer3DieEv>
  fc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>
 100:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE24GetActuallyAllocatedSizeEPv>
 104:	add	x0, x0, #0x0
 108:	add	x2, x2, #0x0
 10c:	mov	w1, #0xd7                  	// #215
 110:	mov	x3, xzr
 114:	mov	x4, xzr
 118:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv:

0000000000000000 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	ldr	x8, [x0]
  10:	sub	x9, x8, #0x1
  14:	tst	x9, x2
  18:	b.ne	e0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv+0xe0>  // b.any
  1c:	mov	w9, #0x10                  	// #16
  20:	movk	w9, #0x4, lsl #16
  24:	add	x22, x0, x9
  28:	mov	x21, x0
  2c:	mov	x20, x1
  30:	sub	x19, x2, x8
  34:	add	x0, x22, #0x230
  38:	mov	w8, #0x1                   	// #1
  3c:	ldaxrb	w9, [x0]
  40:	stlxrb	w10, w8, [x0]
  44:	cbnz	w10, 3c <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv+0x3c>
  48:	cbz	w9, 50 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv+0x50>
  4c:	bl	0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
  50:	ldr	x3, [x19, #24]
  54:	ldr	x9, [x21, #8]
  58:	ldr	x8, [x9, x3, lsl #3]
  5c:	cmp	x8, x19
  60:	b.ne	100 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv+0x100>  // b.any
  64:	ldr	x4, [x22]
  68:	cmp	x3, x4
  6c:	b.cs	120 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv+0x120>  // b.hs, b.nlast
  70:	sub	x8, x4, #0x1
  74:	str	x8, [x22]
  78:	ldr	x8, [x9, x8, lsl #3]
  7c:	lsl	x10, x3, #3
  80:	str	x8, [x9, x10]
  84:	ldr	x8, [x21, #8]
  88:	ldr	x8, [x8, x10]
  8c:	str	x3, [x8, #24]
  90:	ldp	x8, x9, [x22, #24]
  94:	strb	wzr, [x22, #8]
  98:	add	x8, x8, #0x1
  9c:	str	x8, [x22, #24]
  a0:	ldr	x8, [x19, #8]
  a4:	sub	x9, x9, x8
  a8:	str	x9, [x22, #32]
  ac:	ldr	x9, [x20, #16]
  b0:	sub	x9, x9, x8
  b4:	str	x9, [x20, #16]
  b8:	ldr	x9, [x20, #24]
  bc:	sub	x8, x9, x8
  c0:	str	x8, [x20, #24]
  c4:	dmb	ish
  c8:	strb	wzr, [x22, #560]
  cc:	ldp	x0, x1, [x19]
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldr	x30, [sp], #48
  dc:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  e0:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
  e4:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
  e8:	add	x0, x0, #0x0
  ec:	add	x2, x2, #0x0
  f0:	mov	w1, #0x12d                 	// #301
  f4:	mov	x3, xzr
  f8:	mov	x4, xzr
  fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 100:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
 104:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
 108:	add	x0, x0, #0x0
 10c:	add	x2, x2, #0x0
 110:	mov	w1, #0x8b                  	// #139
 114:	mov	x3, x8
 118:	mov	x4, x19
 11c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 120:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
 124:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE10DeallocateEPNS_14AllocatorStatsEPv>
 128:	add	x0, x0, #0x0
 12c:	add	x2, x2, #0x0
 130:	mov	w1, #0x8c                  	// #140
 134:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv:

0000000000000000 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	w8, #0x10                  	// #16
  10:	mov	w9, #0x240                 	// #576
  14:	movk	w8, #0x4, lsl #16
  18:	movk	w9, #0x4, lsl #16
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	add	x22, x0, x8
  28:	add	x19, x0, x9
  2c:	mov	w8, #0x1                   	// #1
  30:	ldaxrb	w9, [x19]
  34:	stlxrb	w10, w8, [x19]
  38:	cbnz	w10, 30 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x30>
  3c:	cbz	w9, 48 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x48>
  40:	mov	x0, x19
  44:	bl	0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
  48:	ldr	x8, [x22]
  4c:	cbz	x8, cc <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0xcc>
  50:	ldr	x9, [x21, #8]
  54:	mov	x3, xzr
  58:	mov	x10, xzr
  5c:	ldr	x11, [x9, x10, lsl #3]
  60:	sub	x12, x20, x3
  64:	add	x10, x10, #0x1
  68:	subs	x13, x20, x11
  6c:	cmp	x13, x12
  70:	csel	x12, x11, x3, cc  // cc = lo, ul, last
  74:	cmp	x20, x11
  78:	csel	x3, x3, x12, cc  // cc = lo, ul, last
  7c:	cmp	x10, x8
  80:	b.cc	5c <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x5c>  // b.lo, b.ul, b.last
  84:	cbz	x3, cc <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0xcc>
  88:	ldr	x4, [x3]
  8c:	cmp	x3, x4
  90:	b.cc	e8 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0xe8>  // b.lo, b.ul, b.last
  94:	ldr	x8, [x3, #8]
  98:	add	x4, x8, x4
  9c:	cmp	x3, x4
  a0:	b.cs	100 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x100>  // b.hs, b.nlast
  a4:	cmp	x3, x20
  a8:	b.hi	118 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x118>  // b.pmore
  ac:	cmp	x4, x20
  b0:	b.ls	cc <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0xcc>  // b.plast
  b4:	ldr	x8, [x21]
  b8:	sub	x9, x8, #0x1
  bc:	tst	x9, x3
  c0:	b.ne	134 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0x134>  // b.any
  c4:	add	x0, x8, x3
  c8:	b	d0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv+0xd0>
  cc:	mov	x0, xzr
  d0:	dmb	ish
  d4:	strb	wzr, [x19]
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldp	x22, x21, [sp, #16]
  e0:	ldr	x30, [sp], #48
  e4:	ret
  e8:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
  ec:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
  f0:	add	x0, x0, #0x0
  f4:	add	x2, x2, #0x0
  f8:	mov	w1, #0xc7                  	// #199
  fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 100:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 104:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 108:	add	x0, x0, #0x0
 10c:	add	x2, x2, #0x0
 110:	mov	w1, #0xc8                  	// #200
 114:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 118:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 11c:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 120:	add	x0, x0, #0x0
 124:	add	x2, x2, #0x0
 128:	mov	w1, #0xc9                  	// #201
 12c:	mov	x4, x20
 130:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 134:	adrp	x0, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 138:	adrp	x2, 0 <_ZN11__sanitizer18LargeMmapAllocatorINS_20NoOpMapUnmapCallbackENS_32LargeMmapAllocatorPtrArrayStaticENS_21LocalAddressSpaceViewEE13GetBlockBeginEPKv>
 13c:	add	x0, x0, #0x0
 140:	add	x2, x2, #0x0
 144:	mov	w1, #0x135                 	// #309
 148:	mov	x3, xzr
 14c:	mov	x4, xzr
 150:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

sanitizer_common.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
   8:	ldrb	w9, [x8]
   c:	tbnz	w9, #0, 64 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib+0x64>
  10:	tbnz	w4, #0, 64 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib+0x64>
  14:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  18:	mov	x5, x1
  1c:	ldr	x1, [x9]
  20:	mov	w6, w3
  24:	mov	x3, x0
  28:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  2c:	mov	w9, #0x1                   	// #1
  30:	add	x0, x0, #0x0
  34:	mov	x4, x3
  38:	strb	w9, [x8]
  3c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  40:	bl	0 <_ZN11__sanitizer14DumpProcessMapEv>
  44:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  48:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  4c:	add	x0, x0, #0x0
  50:	add	x2, x2, #0x0
  54:	mov	w1, #0x36                  	// #54
  58:	mov	x3, xzr
  5c:	mov	x4, xzr
  60:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  64:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  70:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000074 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>:
  74:	stp	x30, x21, [sp, #-32]!
  78:	stp	x20, x19, [sp, #16]
  7c:	mov	x19, x0
  80:	cbz	x0, d4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x60>
  84:	mov	x20, x1
  88:	cbz	x1, d4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x60>
  8c:	mov	x0, x19
  90:	mov	x1, x20
  94:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
  98:	cbz	x0, ac <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x38>
  9c:	mov	x21, x0
  a0:	mov	x0, x20
  a4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  a8:	add	x19, x21, x0
  ac:	ldrb	w8, [x19]
  b0:	cmp	w8, #0x2e
  b4:	b.ne	d4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x60>  // b.any
  b8:	ldrb	w8, [x19, #1]
  bc:	add	x9, x19, #0x2
  c0:	cmp	w8, #0x2f
  c4:	csel	x0, x9, x19, eq  // eq = none
  c8:	ldp	x20, x19, [sp, #16]
  cc:	ldp	x30, x21, [sp], #32
  d0:	ret
  d4:	mov	x0, x19
  d8:	ldp	x20, x19, [sp, #16]
  dc:	ldp	x30, x21, [sp], #32
  e0:	ret

00000000000000e4 <_ZN11__sanitizer15StripModuleNameEPKc>:
  e4:	cbz	x0, 104 <_ZN11__sanitizer15StripModuleNameEPKc+0x20>
  e8:	stp	x30, x19, [sp, #-16]!
  ec:	mov	w1, #0x2f                  	// #47
  f0:	mov	x19, x0
  f4:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
  f8:	cmp	x0, #0x0
  fc:	csinc	x0, x19, x0, eq  // eq = none
 100:	ldp	x30, x19, [sp], #16
 104:	ret

0000000000000108 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>:
 108:	sub	sp, sp, #0x40
 10c:	str	x30, [sp, #32]
 110:	stp	x20, x19, [sp, #48]
 114:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 118:	ldr	x8, [x8]
 11c:	ldrb	w8, [x8, #60]
 120:	cbz	w8, 1c8 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0xc0>
 124:	mov	x20, x1
 128:	mov	x19, x0
 12c:	mov	x0, sp
 130:	mov	w1, #0x400                 	// #1024
 134:	stp	xzr, xzr, [sp, #8]
 138:	str	xzr, [sp]
 13c:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 140:	ldr	x8, [sp, #16]
 144:	cmp	x8, #0x3ff
 148:	b.hi	180 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x78>  // b.pmore
 14c:	ldr	x9, [sp, #8]
 150:	cmp	x9, #0x3ff
 154:	b.hi	168 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x60>  // b.pmore
 158:	mov	x0, sp
 15c:	mov	w1, #0x400                 	// #1024
 160:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 164:	ldr	x8, [sp, #16]
 168:	ldr	x9, [sp]
 16c:	mov	w10, #0x400                 	// #1024
 170:	sub	x2, x10, x8
 174:	mov	w1, wzr
 178:	add	x0, x9, x8
 17c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 180:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 184:	ldr	q0, [x8]
 188:	ldr	x8, [sp]
 18c:	cmp	x20, #0x0
 190:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 194:	str	q0, [sp, #16]
 198:	strb	wzr, [x8]
 19c:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 1a0:	ldr	x8, [x8]
 1a4:	add	x1, x1, #0x0
 1a8:	mov	x0, sp
 1ac:	mov	x3, x19
 1b0:	csel	x2, x8, x20, eq  // eq = none
 1b4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1b8:	ldr	x0, [sp]
 1bc:	bl	1d8 <__sanitizer_report_error_summary>
 1c0:	ldp	x0, x1, [sp]
 1c4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 1c8:	ldp	x20, x19, [sp, #48]
 1cc:	ldr	x30, [sp, #32]
 1d0:	add	sp, sp, #0x40
 1d4:	ret

00000000000001d8 <__sanitizer_report_error_summary>:
 1d8:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 1dc:	add	x8, x8, #0x0
 1e0:	mov	x1, x0
 1e4:	mov	x0, x8
 1e8:	b	0 <_ZN11__sanitizer6PrintfEPKcz>

00000000000001ec <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc>:
 1ec:	stp	x30, x19, [sp, #-16]!
 1f0:	cbz	x0, 26c <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x80>
 1f4:	ldrb	w8, [x0]
 1f8:	mov	x3, x0
 1fc:	cbz	w8, 264 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x78>
 200:	mov	x19, x3
 204:	cmp	x3, x19
 208:	b.cc	274 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x88>  // b.lo, b.ul, b.last
 20c:	and	w9, w8, #0xff
 210:	cmp	w9, #0x1b
 214:	b.ne	248 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x5c>  // b.any
 218:	ldrb	w9, [x3, #1]
 21c:	cmp	w9, #0x5b
 220:	b.ne	248 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x5c>  // b.any
 224:	mov	w1, #0x6d                  	// #109
 228:	mov	x0, x3
 22c:	bl	0 <_ZN11__sanitizer18internal_strchrnulEPKci>
 230:	mov	x3, x0
 234:	ldrb	w8, [x3], #1
 238:	cbz	w8, 268 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x7c>
 23c:	ldrb	w8, [x3]
 240:	cbnz	w8, 204 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x18>
 244:	b	268 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x7c>
 248:	cmp	x3, x19
 24c:	b.eq	254 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x68>  // b.none
 250:	strb	w8, [x19]
 254:	ldrb	w8, [x3, #1]!
 258:	add	x19, x19, #0x1
 25c:	cbnz	w8, 204 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x18>
 260:	b	268 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x7c>
 264:	mov	x19, x3
 268:	strb	wzr, [x19]
 26c:	ldp	x30, x19, [sp], #16
 270:	ret
 274:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 278:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 27c:	add	x0, x0, #0x0
 280:	add	x2, x2, #0x0
 284:	mov	w1, #0x69                  	// #105
 288:	mov	x4, x19
 28c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000290 <_ZN11__sanitizer12LoadedModule3setEPKcm>:
 290:	stp	x30, x21, [sp, #-32]!
 294:	stp	x20, x19, [sp, #16]
 298:	mov	x20, x0
 29c:	ldr	x0, [x0]
 2a0:	mov	x21, x1
 2a4:	mov	x1, xzr
 2a8:	mov	x19, x2
 2ac:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 2b0:	add	x0, x20, #0x1c
 2b4:	mov	w2, #0x10                  	// #16
 2b8:	mov	w1, wzr
 2bc:	stp	xzr, xzr, [x20, #8]
 2c0:	str	xzr, [x20]
 2c4:	str	wzr, [x20, #24]
 2c8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 2cc:	ldr	x8, [x20, #48]
 2d0:	strb	wzr, [x20, #44]
 2d4:	cbnz	x8, 308 <_ZN11__sanitizer12LoadedModule3setEPKcm+0x78>
 2d8:	mov	x0, x21
 2dc:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 2e0:	stp	x0, x19, [x20]
 2e4:	ldp	x20, x19, [sp, #16]
 2e8:	ldp	x30, x21, [sp], #32
 2ec:	ret
 2f0:	sub	x8, x8, #0x1
 2f4:	mov	x1, xzr
 2f8:	str	x8, [x20, #48]
 2fc:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 300:	ldr	x8, [x20, #48]
 304:	cbz	x8, 2d8 <_ZN11__sanitizer12LoadedModule3setEPKcm+0x48>
 308:	ldr	x0, [x20, #56]
 30c:	ldr	x9, [x0]
 310:	str	x9, [x20, #56]
 314:	cbnz	x9, 2f0 <_ZN11__sanitizer12LoadedModule3setEPKcm+0x60>
 318:	str	xzr, [x20, #64]
 31c:	b	2f0 <_ZN11__sanitizer12LoadedModule3setEPKcm+0x60>

0000000000000320 <_ZN11__sanitizer12LoadedModule5clearEv>:
 320:	stp	x30, x19, [sp, #-16]!
 324:	mov	x19, x0
 328:	ldr	x0, [x0]
 32c:	mov	x1, xzr
 330:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 334:	add	x0, x19, #0x1c
 338:	mov	w2, #0x10                  	// #16
 33c:	mov	w1, wzr
 340:	stp	xzr, xzr, [x19, #8]
 344:	str	xzr, [x19]
 348:	str	wzr, [x19, #24]
 34c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 350:	ldr	x8, [x19, #48]
 354:	strb	wzr, [x19, #44]
 358:	cbnz	x8, 37c <_ZN11__sanitizer12LoadedModule5clearEv+0x5c>
 35c:	ldp	x30, x19, [sp], #16
 360:	ret
 364:	sub	x8, x8, #0x1
 368:	mov	x1, xzr
 36c:	str	x8, [x19, #48]
 370:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 374:	ldr	x8, [x19, #48]
 378:	cbz	x8, 35c <_ZN11__sanitizer12LoadedModule5clearEv+0x3c>
 37c:	ldr	x0, [x19, #56]
 380:	ldr	x9, [x0]
 384:	str	x9, [x19, #56]
 388:	cbnz	x9, 364 <_ZN11__sanitizer12LoadedModule5clearEv+0x44>
 38c:	str	xzr, [x19, #64]
 390:	b	364 <_ZN11__sanitizer12LoadedModule5clearEv+0x44>

0000000000000394 <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb>:
 394:	stp	x30, x25, [sp, #-64]!
 398:	stp	x24, x23, [sp, #16]
 39c:	stp	x22, x21, [sp, #32]
 3a0:	stp	x20, x19, [sp, #48]
 3a4:	mov	x20, x0
 3a8:	ldr	x0, [x0]
 3ac:	mov	x23, x1
 3b0:	mov	x1, xzr
 3b4:	mov	x19, x4
 3b8:	mov	w21, w3
 3bc:	mov	x22, x2
 3c0:	and	w25, w5, #0x1
 3c4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 3c8:	add	x24, x20, #0x1c
 3cc:	mov	w2, #0x10                  	// #16
 3d0:	mov	x0, x24
 3d4:	mov	w1, wzr
 3d8:	stp	xzr, xzr, [x20, #8]
 3dc:	str	xzr, [x20]
 3e0:	str	wzr, [x20, #24]
 3e4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 3e8:	ldr	x8, [x20, #48]
 3ec:	strb	wzr, [x20, #44]
 3f0:	cbnz	x8, 444 <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb+0xb0>
 3f4:	mov	x0, x23
 3f8:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 3fc:	stp	x0, x22, [x20]
 400:	mov	w2, #0x10                  	// #16
 404:	mov	x0, x24
 408:	mov	x1, x19
 40c:	str	w21, [x20, #24]
 410:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 414:	strb	w25, [x20, #44]
 418:	ldp	x20, x19, [sp, #48]
 41c:	ldp	x22, x21, [sp, #32]
 420:	ldp	x24, x23, [sp, #16]
 424:	ldp	x30, x25, [sp], #64
 428:	ret
 42c:	sub	x8, x8, #0x1
 430:	mov	x1, xzr
 434:	str	x8, [x20, #48]
 438:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 43c:	ldr	x8, [x20, #48]
 440:	cbz	x8, 3f4 <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb+0x60>
 444:	ldr	x0, [x20, #56]
 448:	ldr	x9, [x0]
 44c:	str	x9, [x20, #56]
 450:	cbnz	x9, 42c <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb+0x98>
 454:	str	xzr, [x20, #64]
 458:	b	42c <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb+0x98>

000000000000045c <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>:
 45c:	stp	x30, x25, [sp, #-64]!
 460:	stp	x24, x23, [sp, #16]
 464:	stp	x22, x21, [sp, #32]
 468:	stp	x20, x19, [sp, #48]
 46c:	mov	x19, x2
 470:	mov	x25, x1
 474:	mov	x20, x0
 478:	mov	w0, #0x30                  	// #48
 47c:	mov	x1, xzr
 480:	mov	x2, xzr
 484:	mov	x23, x5
 488:	mov	w24, w4
 48c:	mov	w21, w3
 490:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 494:	adrp	x10, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 498:	add	x10, x10, #0x0
 49c:	cmp	x23, #0x0
 4a0:	mov	x22, x0
 4a4:	and	w8, w21, #0x1
 4a8:	and	w9, w24, #0x1
 4ac:	stp	xzr, x25, [x0]
 4b0:	str	x19, [x0, #16]
 4b4:	add	x0, x0, #0x1a
 4b8:	csel	x1, x10, x23, eq  // eq = none
 4bc:	mov	w2, #0x10                  	// #16
 4c0:	strb	w8, [x22, #24]
 4c4:	strb	w9, [x22, #25]
 4c8:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 4cc:	ldr	x8, [x20, #48]
 4d0:	str	xzr, [x22]
 4d4:	cbz	x8, 4f4 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0x98>
 4d8:	ldr	x9, [x20, #64]
 4dc:	add	x8, x8, #0x1
 4e0:	str	x22, [x9]
 4e4:	str	x22, [x20, #64]
 4e8:	str	x8, [x20, #48]
 4ec:	tbnz	w21, #0, 504 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0xa8>
 4f0:	b	514 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0xb8>
 4f4:	stp	x22, x22, [x20, #56]
 4f8:	mov	w8, #0x1                   	// #1
 4fc:	str	x8, [x20, #48]
 500:	tbz	w21, #0, 514 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0xb8>
 504:	ldr	x8, [x20, #16]
 508:	cmp	x8, x19
 50c:	b.cs	514 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0xb8>  // b.hs, b.nlast
 510:	str	x19, [x20, #16]
 514:	ldp	x20, x19, [sp, #48]
 518:	ldp	x22, x21, [sp, #32]
 51c:	ldp	x24, x23, [sp, #16]
 520:	ldp	x30, x25, [sp], #64
 524:	ret

0000000000000528 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>:
 528:	ldr	x8, [x0, #56]
 52c:	cbnz	x8, 540 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x18>
 530:	mov	w0, wzr
 534:	ret
 538:	ldr	x8, [x8]
 53c:	cbz	x8, 530 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x8>
 540:	ldr	x9, [x8, #8]
 544:	cmp	x9, x1
 548:	b.hi	538 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x10>  // b.pmore
 54c:	ldr	x9, [x8, #16]
 550:	cmp	x9, x1
 554:	b.ls	538 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x10>  // b.plast
 558:	mov	w0, #0x1                   	// #1
 55c:	ret

0000000000000560 <_ZN11__sanitizer17IncreaseTotalMmapEm>:
 560:	str	x30, [sp, #-16]!
 564:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 568:	ldr	x8, [x8]
 56c:	ldr	x9, [x8, #128]
 570:	cbz	x9, 598 <_ZN11__sanitizer17IncreaseTotalMmapEm+0x38>
 574:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 578:	add	x9, x9, #0x0
 57c:	ldaxr	x10, [x9]
 580:	add	x10, x10, x0
 584:	stlxr	w11, x10, [x9]
 588:	cbnz	w11, 57c <_ZN11__sanitizer17IncreaseTotalMmapEm+0x1c>
 58c:	ldr	x8, [x8, #128]
 590:	cmp	x8, x10, lsr #20
 594:	b.ls	5a0 <_ZN11__sanitizer17IncreaseTotalMmapEm+0x40>  // b.plast
 598:	ldr	x30, [sp], #16
 59c:	ret
 5a0:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 5a4:	add	x0, x0, #0x0
 5a8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5ac:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000005b0 <_ZN11__sanitizer17DecreaseTotalMmapEm>:
 5b0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 5b4:	ldr	x8, [x8]
 5b8:	ldr	x8, [x8, #128]
 5bc:	cbz	x8, 5dc <_ZN11__sanitizer17DecreaseTotalMmapEm+0x2c>
 5c0:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 5c4:	neg	x8, x0
 5c8:	add	x9, x9, #0x0
 5cc:	ldaxr	x10, [x9]
 5d0:	add	x10, x10, x8
 5d4:	stlxr	w11, x10, [x9]
 5d8:	cbnz	w11, 5cc <_ZN11__sanitizer17DecreaseTotalMmapEm+0x1c>
 5dc:	ret

00000000000005e0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>:
 5e0:	stp	x30, x27, [sp, #-80]!
 5e4:	stp	x26, x25, [sp, #16]
 5e8:	stp	x24, x23, [sp, #32]
 5ec:	stp	x22, x21, [sp, #48]
 5f0:	stp	x20, x19, [sp, #64]
 5f4:	cbz	x1, 710 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x130>
 5f8:	ldrb	w8, [x1]
 5fc:	mov	x19, x1
 600:	cbz	w8, 71c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x13c>
 604:	cbz	x0, 620 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x40>
 608:	mov	x9, x0
 60c:	ldrb	w8, [x9], #1
 610:	cmp	w8, #0x5e
 614:	cset	w8, eq  // eq = none
 618:	csel	x26, x9, x0, eq  // eq = none
 61c:	b	628 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x48>
 620:	mov	w8, wzr
 624:	mov	x26, xzr
 628:	mov	w23, #0x2a                  	// #42
 62c:	mov	w24, #0x24                  	// #36
 630:	cbz	x26, 718 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x138>
 634:	mov	w9, wzr
 638:	mov	x20, x26
 63c:	mov	w25, w8
 640:	ldrb	w8, [x20]
 644:	cmp	w8, #0x2a
 648:	b.ne	660 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x80>  // b.any
 64c:	mov	w25, wzr
 650:	mov	w9, #0x1                   	// #1
 654:	ldrb	w8, [x20, #1]!
 658:	cmp	w8, #0x2a
 65c:	b.eq	64c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x6c>  // b.none
 660:	cbz	w8, 718 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x138>
 664:	ldrb	w10, [x19]
 668:	cmp	w8, #0x24
 66c:	b.eq	738 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x158>  // b.none
 670:	cbz	w10, 710 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x130>
 674:	mov	w1, #0x2a                  	// #42
 678:	mov	x0, x20
 67c:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 680:	mov	x22, x0
 684:	mov	w1, #0x24                  	// #36
 688:	mov	x0, x20
 68c:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 690:	mov	x21, x0
 694:	cbz	x22, 6a8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xc8>
 698:	cmp	x21, x22
 69c:	ccmp	x21, #0x0, #0x4, cc  // cc = lo, ul, last
 6a0:	csel	x26, x21, x22, ne  // ne = any
 6a4:	b	6b0 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xd0>
 6a8:	mov	x26, x21
 6ac:	cbz	x21, 708 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x128>
 6b0:	strb	wzr, [x26]
 6b4:	mov	w27, #0x1                   	// #1
 6b8:	mov	x0, x19
 6bc:	mov	x1, x20
 6c0:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 6c4:	mov	x22, x0
 6c8:	mov	x0, x20
 6cc:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 6d0:	cbz	w27, 6e0 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x100>
 6d4:	cmp	x26, x21
 6d8:	csel	w8, w24, w23, eq  // eq = none
 6dc:	strb	w8, [x26]
 6e0:	mov	w8, wzr
 6e4:	cbz	x22, 71c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x13c>
 6e8:	add	x9, x22, x0
 6ec:	cmp	x22, x19
 6f0:	mov	x19, x9
 6f4:	b.eq	630 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x50>  // b.none
 6f8:	eor	w10, w25, #0x1
 6fc:	mov	x19, x9
 700:	tbnz	w10, #0, 630 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x50>
 704:	b	71c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x13c>
 708:	mov	w27, wzr
 70c:	b	6b8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xd8>
 710:	mov	w8, wzr
 714:	b	71c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x13c>
 718:	mov	w8, #0x1                   	// #1
 71c:	ldp	x20, x19, [sp, #64]
 720:	ldp	x22, x21, [sp, #48]
 724:	ldp	x24, x23, [sp, #32]
 728:	ldp	x26, x25, [sp, #16]
 72c:	and	w0, w8, #0x1
 730:	ldp	x30, x27, [sp], #80
 734:	ret
 738:	cmp	w10, #0x0
 73c:	cset	w8, eq  // eq = none
 740:	orr	w8, w9, w8
 744:	b	71c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x13c>

0000000000000748 <_ZN11__sanitizer14GetProcessNameEv>:
 748:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 74c:	add	x0, x0, #0x0
 750:	ret

0000000000000754 <_ZN11__sanitizer17UpdateProcessNameEv>:
 754:	stp	x30, x21, [sp, #-32]!
 758:	stp	x20, x19, [sp, #16]
 75c:	adrp	x19, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 760:	add	x19, x19, #0x0
 764:	mov	w1, #0x1000                	// #4096
 768:	mov	x0, x19
 76c:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 770:	mov	w1, #0x2f                  	// #47
 774:	mov	x0, x19
 778:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 77c:	cmp	x0, #0x0
 780:	csinc	x20, x19, x0, eq  // eq = none
 784:	mov	x0, x20
 788:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 78c:	cmp	x20, x19
 790:	b.eq	7ac <_ZN11__sanitizer17UpdateProcessNameEv+0x58>  // b.none
 794:	mov	x21, x0
 798:	mov	x0, x19
 79c:	mov	x1, x20
 7a0:	mov	x2, x21
 7a4:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 7a8:	strb	wzr, [x19, x21]
 7ac:	ldp	x20, x19, [sp, #16]
 7b0:	ldp	x30, x21, [sp], #32
 7b4:	ret

00000000000007b8 <_ZN11__sanitizer15CacheBinaryNameEv>:
 7b8:	stp	x30, x21, [sp, #-32]!
 7bc:	stp	x20, x19, [sp, #16]
 7c0:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 7c4:	ldrb	w8, [x8]
 7c8:	cbz	w8, 7d8 <_ZN11__sanitizer15CacheBinaryNameEv+0x20>
 7cc:	ldp	x20, x19, [sp, #16]
 7d0:	ldp	x30, x21, [sp], #32
 7d4:	ret
 7d8:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 7dc:	add	x0, x0, #0x0
 7e0:	mov	w1, #0x1000                	// #4096
 7e4:	bl	0 <_ZN11__sanitizer14ReadBinaryNameEPcm>
 7e8:	adrp	x19, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 7ec:	add	x19, x19, #0x0
 7f0:	mov	w1, #0x1000                	// #4096
 7f4:	mov	x0, x19
 7f8:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 7fc:	mov	w1, #0x2f                  	// #47
 800:	mov	x0, x19
 804:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 808:	cmp	x0, #0x0
 80c:	csinc	x20, x19, x0, eq  // eq = none
 810:	mov	x0, x20
 814:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 818:	cmp	x20, x19
 81c:	b.eq	7cc <_ZN11__sanitizer15CacheBinaryNameEv+0x14>  // b.none
 820:	mov	x21, x0
 824:	mov	x0, x19
 828:	mov	x1, x20
 82c:	mov	x2, x21
 830:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 834:	strb	wzr, [x19, x21]
 838:	ldp	x20, x19, [sp, #16]
 83c:	ldp	x30, x21, [sp], #32
 840:	ret

0000000000000844 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>:
 844:	stp	x30, x23, [sp, #-48]!
 848:	stp	x22, x21, [sp, #16]
 84c:	stp	x20, x19, [sp, #32]
 850:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 854:	ldrb	w8, [x8]
 858:	mov	x20, x1
 85c:	mov	x19, x0
 860:	cbnz	w8, 8c4 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x80>
 864:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 868:	add	x0, x0, #0x0
 86c:	mov	w1, #0x1000                	// #4096
 870:	bl	0 <_ZN11__sanitizer14ReadBinaryNameEPcm>
 874:	adrp	x21, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 878:	add	x21, x21, #0x0
 87c:	mov	w1, #0x1000                	// #4096
 880:	mov	x0, x21
 884:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 888:	mov	w1, #0x2f                  	// #47
 88c:	mov	x0, x21
 890:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 894:	cmp	x0, #0x0
 898:	csinc	x22, x21, x0, eq  // eq = none
 89c:	mov	x0, x22
 8a0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 8a4:	cmp	x22, x21
 8a8:	b.eq	8c4 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x80>  // b.none
 8ac:	mov	x23, x0
 8b0:	mov	x0, x21
 8b4:	mov	x1, x22
 8b8:	mov	x2, x23
 8bc:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 8c0:	strb	wzr, [x21, x23]
 8c4:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 8c8:	add	x0, x0, #0x0
 8cc:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 8d0:	sub	x8, x20, #0x1
 8d4:	cmp	x0, x8
 8d8:	csel	x21, x0, x8, cc  // cc = lo, ul, last
 8dc:	cbz	x20, 8fc <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0xb8>
 8e0:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 8e4:	add	x1, x1, #0x0
 8e8:	mov	x0, x19
 8ec:	mov	x2, x21
 8f0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8f4:	strb	wzr, [x19, x21]
 8f8:	b	900 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0xbc>
 8fc:	mov	x21, xzr
 900:	mov	x0, x21
 904:	ldp	x20, x19, [sp, #32]
 908:	ldp	x22, x21, [sp, #16]
 90c:	ldp	x30, x23, [sp], #48
 910:	ret

0000000000000914 <_ZN11__sanitizer12PrintCmdlineEv>:
 914:	str	x30, [sp, #-32]!
 918:	stp	x20, x19, [sp, #16]
 91c:	bl	0 <_ZN11__sanitizer7GetArgvEv>
 920:	cbz	x0, 96c <_ZN11__sanitizer12PrintCmdlineEv+0x58>
 924:	mov	x19, x0
 928:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 92c:	add	x0, x0, #0x0
 930:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 934:	ldr	x1, [x19]
 938:	cbz	x1, 958 <_ZN11__sanitizer12PrintCmdlineEv+0x44>
 93c:	add	x20, x19, #0x8
 940:	adrp	x19, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 944:	add	x19, x19, #0x0
 948:	mov	x0, x19
 94c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 950:	ldr	x1, [x20], #8
 954:	cbnz	x1, 948 <_ZN11__sanitizer12PrintCmdlineEv+0x34>
 958:	ldp	x20, x19, [sp, #16]
 95c:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 960:	add	x0, x0, #0x0
 964:	ldr	x30, [sp], #32
 968:	b	0 <_ZN11__sanitizer6PrintfEPKcz>
 96c:	ldp	x20, x19, [sp, #16]
 970:	ldr	x30, [sp], #32
 974:	ret

0000000000000978 <_ZN11__sanitizer14RunMallocHooksEPKvm>:
 978:	str	x30, [sp, #-32]!
 97c:	stp	x20, x19, [sp, #16]
 980:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 984:	ldr	x8, [x8]
 988:	cbz	x8, a00 <_ZN11__sanitizer14RunMallocHooksEPKvm+0x88>
 98c:	mov	x19, x1
 990:	mov	x20, x0
 994:	blr	x8
 998:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 99c:	ldr	x8, [x8]
 9a0:	cbz	x8, a00 <_ZN11__sanitizer14RunMallocHooksEPKvm+0x88>
 9a4:	mov	x0, x20
 9a8:	mov	x1, x19
 9ac:	blr	x8
 9b0:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 9b4:	ldr	x8, [x8]
 9b8:	cbz	x8, a00 <_ZN11__sanitizer14RunMallocHooksEPKvm+0x88>
 9bc:	mov	x0, x20
 9c0:	mov	x1, x19
 9c4:	blr	x8
 9c8:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 9cc:	ldr	x8, [x8]
 9d0:	cbz	x8, a00 <_ZN11__sanitizer14RunMallocHooksEPKvm+0x88>
 9d4:	mov	x0, x20
 9d8:	mov	x1, x19
 9dc:	blr	x8
 9e0:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 9e4:	ldr	x2, [x8]
 9e8:	cbz	x2, a00 <_ZN11__sanitizer14RunMallocHooksEPKvm+0x88>
 9ec:	mov	x0, x20
 9f0:	mov	x1, x19
 9f4:	ldp	x20, x19, [sp, #16]
 9f8:	ldr	x30, [sp], #32
 9fc:	br	x2
 a00:	ldp	x20, x19, [sp, #16]
 a04:	ldr	x30, [sp], #32
 a08:	ret

0000000000000a0c <_ZN11__sanitizer12RunFreeHooksEPKv>:
 a0c:	stp	x30, x19, [sp, #-16]!
 a10:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a14:	ldr	x8, [x8]
 a18:	cbz	x8, a78 <_ZN11__sanitizer12RunFreeHooksEPKv+0x6c>
 a1c:	mov	x19, x0
 a20:	blr	x8
 a24:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a28:	ldr	x8, [x8]
 a2c:	cbz	x8, a78 <_ZN11__sanitizer12RunFreeHooksEPKv+0x6c>
 a30:	mov	x0, x19
 a34:	blr	x8
 a38:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a3c:	ldr	x8, [x8]
 a40:	cbz	x8, a78 <_ZN11__sanitizer12RunFreeHooksEPKv+0x6c>
 a44:	mov	x0, x19
 a48:	blr	x8
 a4c:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a50:	ldr	x8, [x8]
 a54:	cbz	x8, a78 <_ZN11__sanitizer12RunFreeHooksEPKv+0x6c>
 a58:	mov	x0, x19
 a5c:	blr	x8
 a60:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a64:	ldr	x1, [x8]
 a68:	cbz	x1, a78 <_ZN11__sanitizer12RunFreeHooksEPKv+0x6c>
 a6c:	mov	x0, x19
 a70:	ldp	x30, x19, [sp], #16
 a74:	br	x1
 a78:	ldp	x30, x19, [sp], #16
 a7c:	ret

0000000000000a80 <__sanitizer_acquire_crash_state>:
 a80:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a84:	add	x8, x8, #0x0
 a88:	mov	w9, #0x1                   	// #1
 a8c:	ldaxrb	w10, [x8]
 a90:	stlxrb	w11, w9, [x8]
 a94:	cbnz	w11, a8c <__sanitizer_acquire_crash_state+0xc>
 a98:	cmp	w10, #0x0
 a9c:	cset	w0, eq  // eq = none
 aa0:	ret

0000000000000aa4 <__sanitizer_install_malloc_and_free_hooks>:
 aa4:	mov	w8, wzr
 aa8:	cbz	x0, b04 <__sanitizer_install_malloc_and_free_hooks+0x60>
 aac:	cbz	x1, b04 <__sanitizer_install_malloc_and_free_hooks+0x60>
 ab0:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 ab4:	add	x8, x8, #0x0
 ab8:	ldr	x9, [x8]
 abc:	cbz	x9, b0c <__sanitizer_install_malloc_and_free_hooks+0x68>
 ac0:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 ac4:	add	x9, x9, #0x0
 ac8:	ldr	x10, [x9]
 acc:	cbz	x10, b18 <__sanitizer_install_malloc_and_free_hooks+0x74>
 ad0:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 ad4:	add	x9, x9, #0x0
 ad8:	ldr	x10, [x9]
 adc:	cbz	x10, b20 <__sanitizer_install_malloc_and_free_hooks+0x7c>
 ae0:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 ae4:	add	x9, x9, #0x0
 ae8:	ldr	x10, [x9]
 aec:	cbz	x10, b28 <__sanitizer_install_malloc_and_free_hooks+0x84>
 af0:	adrp	x9, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 af4:	add	x9, x9, #0x0
 af8:	ldr	x10, [x9]
 afc:	cbz	x10, b30 <__sanitizer_install_malloc_and_free_hooks+0x8c>
 b00:	mov	w8, wzr
 b04:	mov	w0, w8
 b08:	ret
 b0c:	mov	w10, wzr
 b10:	mov	x9, x8
 b14:	b	b34 <__sanitizer_install_malloc_and_free_hooks+0x90>
 b18:	mov	w10, #0x1                   	// #1
 b1c:	b	b34 <__sanitizer_install_malloc_and_free_hooks+0x90>
 b20:	mov	w10, #0x2                   	// #2
 b24:	b	b34 <__sanitizer_install_malloc_and_free_hooks+0x90>
 b28:	mov	w10, #0x3                   	// #3
 b2c:	b	b34 <__sanitizer_install_malloc_and_free_hooks+0x90>
 b30:	mov	w10, #0x4                   	// #4
 b34:	str	x0, [x9]
 b38:	add	x8, x8, w10, uxtw #4
 b3c:	add	w0, w10, #0x1
 b40:	str	x1, [x8, #8]
 b44:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 8c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x8c>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	ac <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xac>  // b.pmore
  20:	adrp	x21, 8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x8>
  24:	ldr	x0, [x21]
  28:	cbnz	x0, 34 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x34>
  2c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  30:	str	x0, [x21]
  34:	sub	x8, x0, #0x1
  38:	tst	x0, x8
  3c:	b.ne	c8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xc8>  // b.any
  40:	add	x8, x20, x0
  44:	sub	x8, x8, #0x1
  48:	neg	x9, x0
  4c:	and	x20, x8, x9
  50:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  54:	add	x1, x1, #0x0
  58:	mov	x0, x20
  5c:	mov	w2, wzr
  60:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  64:	ldr	x1, [x19]
  68:	ldr	x2, [x19, #16]
  6c:	mov	x21, x0
  70:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  74:	ldp	x0, x1, [x19]
  78:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  7c:	stp	x21, x20, [x19]
  80:	ldp	x20, x19, [sp, #16]
  84:	ldp	x30, x21, [sp], #32
  88:	ret
  8c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  90:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	add	x0, x0, #0x0
  98:	add	x2, x2, #0x0
  9c:	mov	w1, #0x20b                 	// #523
  a0:	mov	x3, xzr
  a4:	mov	x4, xzr
  a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ac:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	add	x0, x0, #0x0
  b8:	add	x2, x2, #0x0
  bc:	mov	w1, #0x20c                 	// #524
  c0:	mov	x4, x20
  c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  c8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d4:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_deadlock_detector1.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	x19, x0
   8:	adrp	x1, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
   c:	mov	w0, #0xa50                 	// #2640
  10:	add	x1, x1, #0x0
  14:	movk	w0, #0x41, lsl #16
  18:	mov	w2, wzr
  1c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  20:	adrp	x9, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
  24:	add	x9, x9, #0x0
  28:	str	x9, [x0]
  2c:	strb	wzr, [x0, #8]
  30:	ldrb	w10, [x19]
  34:	mov	w9, #0xa40                 	// #2624
  38:	movk	w9, #0x41, lsl #16
  3c:	mov	w11, #0xa48                 	// #2632
  40:	mov	x8, xzr
  44:	movk	w11, #0x41, lsl #16
  48:	add	x9, x0, x9
  4c:	strb	w10, [x0, x11]
  50:	stp	xzr, xzr, [x0, #16]
  54:	str	xzr, [x0, #544]
  58:	add	x10, x0, x8
  5c:	add	x8, x8, #0x410
  60:	cmp	x8, #0x208, lsl #12
  64:	str	xzr, [x10, #1584]
  68:	str	xzr, [x10, #2104]
  6c:	b.ne	58 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE+0x58>  // b.any
  70:	str	xzr, [x9]
  74:	ldp	x30, x19, [sp], #16
  78:	ret

000000000000007c <_ZN11__sanitizer2DDC1EPKNS_7DDFlagsE>:
  7c:	adrp	x9, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
  80:	add	x9, x9, #0x0
  84:	str	x9, [x0]
  88:	strb	wzr, [x0, #8]
  8c:	ldrb	w10, [x1]
  90:	mov	w9, #0xa40                 	// #2624
  94:	movk	w9, #0x41, lsl #16
  98:	mov	w11, #0xa48                 	// #2632
  9c:	mov	x8, xzr
  a0:	movk	w11, #0x41, lsl #16
  a4:	add	x9, x0, x9
  a8:	strb	w10, [x0, x11]
  ac:	stp	xzr, xzr, [x0, #16]
  b0:	str	xzr, [x0, #544]
  b4:	add	x10, x0, x8
  b8:	add	x8, x8, #0x410
  bc:	cmp	x8, #0x208, lsl #12
  c0:	str	xzr, [x10, #1584]
  c4:	str	xzr, [x10, #2104]
  c8:	b.ne	b4 <_ZN11__sanitizer2DDC1EPKNS_7DDFlagsE+0x38>  // b.any
  cc:	str	xzr, [x9]
  d0:	ret

00000000000000d4 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>:
  d4:	mov	x0, xzr
  d8:	ret

00000000000000dc <_ZN11__sanitizer2DD21DestroyPhysicalThreadEPNS_16DDPhysicalThreadE>:
  dc:	ret

00000000000000e0 <_ZN11__sanitizer2DD19CreateLogicalThreadEy>:
  e0:	stp	x30, x19, [sp, #-16]!
  e4:	mov	x19, x1
  e8:	mov	w0, #0x8b8                 	// #2232
  ec:	mov	x1, xzr
  f0:	mov	x2, xzr
  f4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  f8:	stp	x19, xzr, [x0]
  fc:	str	xzr, [x0, #528]
 100:	str	xzr, [x0, #1048]
 104:	str	xzr, [x0, #1568]
 108:	strb	wzr, [x0, #2224]
 10c:	ldp	x30, x19, [sp], #16
 110:	ret

0000000000000114 <_ZN11__sanitizer2DD20DestroyLogicalThreadEPNS_15DDLogicalThreadE>:
 114:	mov	x0, x1
 118:	mov	x1, xzr
 11c:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>

0000000000000120 <_ZN11__sanitizer2DD9MutexInitEPNS_10DDCallbackEPNS_7DDMutexE>:
 120:	stp	x30, x19, [sp, #-16]!
 124:	str	xzr, [x2]
 128:	ldr	x8, [x1]
 12c:	mov	x0, x1
 130:	mov	x19, x2
 134:	ldr	x8, [x8]
 138:	blr	x8
 13c:	str	w0, [x19, #8]
 140:	ldp	x30, x19, [sp], #16
 144:	ret

0000000000000148 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE>:
 148:	stp	x30, x21, [sp, #-32]!
 14c:	stp	x20, x19, [sp, #16]
 150:	ldr	x8, [x2]
 154:	mov	x20, x2
 158:	mov	x19, x1
 15c:	add	x21, x0, #0x10
 160:	cbz	x8, 18c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x44>
 164:	ldr	x9, [x21]
 168:	and	x8, x8, #0xfffffffffffff000
 16c:	cmp	x8, x9
 170:	b.ne	18c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x44>  // b.any
 174:	ldr	x9, [x19, #528]
 178:	cmp	x9, x8
 17c:	b.ne	1ac <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x64>  // b.any
 180:	ldp	x20, x19, [sp, #16]
 184:	ldp	x30, x21, [sp], #32
 188:	ret
 18c:	mov	x0, x21
 190:	mov	x1, x20
 194:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 198:	str	x0, [x20]
 19c:	ldr	x8, [x21]
 1a0:	ldr	x9, [x19, #528]
 1a4:	cmp	x9, x8
 1a8:	b.eq	180 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x38>  // b.none
 1ac:	str	xzr, [x19, #8]
 1b0:	str	x8, [x19, #528]
 1b4:	str	xzr, [x19, #1048]
 1b8:	str	xzr, [x19, #1568]
 1bc:	ldp	x20, x19, [sp, #16]
 1c0:	ldp	x30, x21, [sp], #32
 1c4:	ret

00000000000001c8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb>:
 1c8:	str	x30, [sp, #-80]!
 1cc:	stp	x26, x25, [sp, #16]
 1d0:	stp	x24, x23, [sp, #32]
 1d4:	stp	x22, x21, [sp, #48]
 1d8:	stp	x20, x19, [sp, #64]
 1dc:	ldr	x25, [x1, #16]
 1e0:	mov	x22, x25
 1e4:	ldr	x8, [x22, #8]!
 1e8:	cbz	x8, 364 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x19c>
 1ec:	ldr	x12, [x2]
 1f0:	mov	x19, x2
 1f4:	mov	x20, x1
 1f8:	mov	x21, x0
 1fc:	add	x23, x0, #0x10
 200:	cbz	x12, 27c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xb4>
 204:	ldr	x8, [x25, #528]
 208:	and	x9, x12, #0xfffffffffffff000
 20c:	cmp	x8, x9
 210:	b.ne	27c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xb4>  // b.any
 214:	ldr	x9, [x23]
 218:	cmp	x8, x9
 21c:	b.ne	27c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xb4>  // b.any
 220:	ldr	x8, [x25, #1568]
 224:	cbz	x8, 364 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x19c>
 228:	lsr	x11, x12, #6
 22c:	mov	w13, #0x1                   	// #1
 230:	ubfx	x9, x12, #6, #6
 234:	add	x10, x25, #0x420
 238:	lsl	x11, x13, x11
 23c:	lsl	x12, x13, x12
 240:	mov	w13, #0x208                 	// #520
 244:	ldr	w14, [x10]
 248:	madd	x15, x14, x13, x21
 24c:	ldr	x15, [x15, #1584]
 250:	tst	x15, x11
 254:	b.eq	27c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xb4>  // b.none
 258:	madd	x14, x14, x13, x21
 25c:	add	x14, x14, x9, lsl #3
 260:	ldr	x14, [x14, #1592]
 264:	tst	x14, x12
 268:	b.eq	27c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xb4>  // b.none
 26c:	subs	x8, x8, #0x1
 270:	add	x10, x10, #0x8
 274:	b.ne	244 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x7c>  // b.any
 278:	b	364 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x19c>
 27c:	add	x24, x21, #0x8
 280:	mov	w8, #0x1                   	// #1
 284:	ldaxrb	w9, [x24]
 288:	stlxrb	w10, w8, [x24]
 28c:	cbnz	w10, 284 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xbc>
 290:	cbz	w9, 29c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xd4>
 294:	mov	x0, x24
 298:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 29c:	ldr	x8, [x19]
 2a0:	cbz	x8, 37c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1b4>
 2a4:	ldr	x9, [x23]
 2a8:	and	x3, x8, #0xfffffffffffff000
 2ac:	cmp	x3, x9
 2b0:	b.ne	37c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1b4>  // b.any
 2b4:	ldr	x9, [x25, #528]
 2b8:	cmp	x9, x3
 2bc:	b.ne	3a0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1d8>  // b.any
 2c0:	cmp	x8, #0xfff
 2c4:	b.ls	3b8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1f0>  // b.plast
 2c8:	and	x4, x8, #0xfffffffffffff000
 2cc:	cmp	x3, x4
 2d0:	b.ne	3d8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x210>  // b.any
 2d4:	ldr	x9, [x22]
 2d8:	lsr	x10, x8, #6
 2dc:	lsr	x9, x9, x10
 2e0:	tbz	w9, #0, 2f8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x130>
 2e4:	ubfx	x9, x8, #6, #6
 2e8:	add	x9, x25, x9, lsl #3
 2ec:	ldr	x9, [x9, #16]
 2f0:	lsr	x9, x9, x8
 2f4:	tbnz	w9, #0, 35c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x194>
 2f8:	add	x0, x21, #0x630
 2fc:	and	x1, x8, #0xfff
 300:	mov	x2, x22
 304:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 308:	tbz	w0, #0, 35c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x194>
 30c:	ldr	x8, [x20]
 310:	ldr	x25, [x19]
 314:	mov	x0, x20
 318:	ldr	x8, [x8]
 31c:	blr	x8
 320:	ldr	x8, [x20]
 324:	mov	w26, w0
 328:	mov	x0, x20
 32c:	ldr	x8, [x8, #8]
 330:	blr	x8
 334:	mov	w4, w0
 338:	mov	x0, x23
 33c:	mov	x1, x22
 340:	mov	x2, x25
 344:	mov	w3, w26
 348:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 34c:	mov	x0, x21
 350:	mov	x1, x20
 354:	mov	x2, x19
 358:	bl	3f0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE>
 35c:	dmb	ish
 360:	strb	wzr, [x24]
 364:	ldp	x20, x19, [sp, #64]
 368:	ldp	x22, x21, [sp, #48]
 36c:	ldp	x24, x23, [sp, #32]
 370:	ldp	x26, x25, [sp, #16]
 374:	ldr	x30, [sp], #80
 378:	ret
 37c:	mov	x0, x23
 380:	mov	x1, x19
 384:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 388:	str	x0, [x19]
 38c:	ldr	x3, [x23]
 390:	mov	x8, x0
 394:	ldr	x9, [x25, #528]
 398:	cmp	x9, x3
 39c:	b.eq	2c0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xf8>  // b.none
 3a0:	str	xzr, [x25, #8]
 3a4:	str	x3, [x25, #528]
 3a8:	str	xzr, [x25, #1048]
 3ac:	str	xzr, [x25, #1568]
 3b0:	cmp	x8, #0xfff
 3b4:	b.hi	2c8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x100>  // b.pmore
 3b8:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 3bc:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 3c0:	add	x0, x0, #0x0
 3c4:	add	x2, x2, #0x0
 3c8:	mov	w1, #0x16e                 	// #366
 3cc:	mov	w4, #0x1000                	// #4096
 3d0:	mov	x3, x8
 3d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3d8:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 3dc:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 3e0:	add	x0, x0, #0x0
 3e4:	add	x2, x2, #0x0
 3e8:	mov	w1, #0x16f                 	// #367
 3ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000003f0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE>:
 3f0:	sub	sp, sp, #0x110
 3f4:	stp	x29, x30, [sp, #176]
 3f8:	stp	x28, x27, [sp, #192]
 3fc:	stp	x26, x25, [sp, #208]
 400:	stp	x24, x23, [sp, #224]
 404:	stp	x22, x21, [sp, #240]
 408:	stp	x20, x19, [sp, #256]
 40c:	ldr	x22, [x1, #16]
 410:	mov	x21, x2
 414:	ldr	x2, [x2]
 418:	add	x20, x0, #0x10
 41c:	mov	x19, x0
 420:	add	x1, x22, #0x8
 424:	add	x3, sp, #0x10
 428:	mov	w4, #0x14                  	// #20
 42c:	mov	x0, x20
 430:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 434:	cbz	x0, 558 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x168>
 438:	ldr	x8, [x21]
 43c:	ldr	x4, [sp, #16]
 440:	cmp	x8, x4
 444:	b.ne	5bc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x1cc>  // b.any
 448:	cmp	x0, #0x14
 44c:	mov	w10, #0x14                  	// #20
 450:	mov	w9, #0x1                   	// #1
 454:	csel	x21, x0, x10, cc  // cc = lo, ul, last
 458:	cmp	x8, #0x1, lsl #12
 45c:	strb	w9, [x22, #2224]
 460:	str	w21, [x22, #1576]
 464:	b.cc	538 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x148>  // b.lo, b.ul, b.last
 468:	cmp	x21, #0x1
 46c:	mov	w25, #0x8a40                	// #35392
 470:	add	x22, x22, #0x64c
 474:	mov	w23, #0x1                   	// #1
 478:	add	x24, sp, #0x10
 47c:	movk	w25, #0x20, lsl #16
 480:	cset	w9, ne  // ne = any
 484:	mov	w26, #0xffffffff            	// #-1
 488:	ldr	x3, [x20]
 48c:	and	x4, x8, #0xfffffffffffff000
 490:	cmp	x3, x4
 494:	b.ne	584 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x194>  // b.any
 498:	ldr	x9, [x24, x9, lsl #3]
 49c:	cmp	x9, #0xfff
 4a0:	b.ls	59c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x1ac>  // b.plast
 4a4:	and	x4, x9, #0xfffffffffffff000
 4a8:	cmp	x3, x4
 4ac:	b.ne	584 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x194>  // b.any
 4b0:	and	x10, x8, #0xfff
 4b4:	and	x11, x9, #0xfff
 4b8:	add	x10, x19, x10, lsl #3
 4bc:	add	x11, x19, x11, lsl #3
 4c0:	ldr	x27, [x10, x25]
 4c4:	ldr	x28, [x11, x25]
 4c8:	add	x3, sp, #0xc
 4cc:	add	x4, sp, #0x8
 4d0:	add	x5, sp, #0x4
 4d4:	mov	x0, x20
 4d8:	mov	x1, x8
 4dc:	mov	x2, x9
 4e0:	stp	w26, w26, [sp, #8]
 4e4:	str	wzr, [sp, #4]
 4e8:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 4ec:	ldrsw	x8, [sp, #4]
 4f0:	cmp	x23, x21
 4f4:	stur	x8, [x22, #-28]
 4f8:	ldr	x8, [x27, #16]
 4fc:	stur	x8, [x22, #-20]
 500:	ldr	x8, [x28, #16]
 504:	stur	x8, [x22, #-12]
 508:	ldr	w8, [sp, #8]
 50c:	stur	w8, [x22, #-4]
 510:	ldr	w8, [sp, #12]
 514:	str	w8, [x22]
 518:	b.cs	564 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x174>  // b.hs, b.nlast
 51c:	ldr	x8, [x24, x23, lsl #3]
 520:	add	x23, x23, #0x1
 524:	udiv	x9, x23, x21
 528:	msub	x9, x9, x21, x23
 52c:	cmp	x8, #0x1, lsl #12
 530:	add	x22, x22, #0x20
 534:	b.cs	488 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x98>  // b.hs, b.nlast
 538:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 53c:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 540:	add	x0, x0, #0x0
 544:	add	x2, x2, #0x0
 548:	mov	w1, #0x16e                 	// #366
 54c:	mov	w4, #0x1000                	// #4096
 550:	mov	x3, x8
 554:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 558:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 55c:	add	x0, x0, #0x0
 560:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 564:	ldp	x20, x19, [sp, #256]
 568:	ldp	x22, x21, [sp, #240]
 56c:	ldp	x24, x23, [sp, #224]
 570:	ldp	x26, x25, [sp, #208]
 574:	ldp	x28, x27, [sp, #192]
 578:	ldp	x29, x30, [sp, #176]
 57c:	add	sp, sp, #0x110
 580:	ret
 584:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 588:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 58c:	add	x0, x0, #0x0
 590:	add	x2, x2, #0x0
 594:	mov	w1, #0x16f                 	// #367
 598:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 59c:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 5a0:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 5a4:	add	x0, x0, #0x0
 5a8:	add	x2, x2, #0x0
 5ac:	mov	w1, #0x16e                 	// #366
 5b0:	mov	w4, #0x1000                	// #4096
 5b4:	mov	x3, x9
 5b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5bc:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 5c0:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 5c4:	add	x0, x0, #0x0
 5c8:	add	x2, x2, #0x0
 5cc:	mov	w1, #0x80                  	// #128
 5d0:	mov	x3, x8
 5d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000005d8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb>:
 5d8:	str	x30, [sp, #-96]!
 5dc:	stp	x28, x27, [sp, #16]
 5e0:	stp	x26, x25, [sp, #32]
 5e4:	stp	x24, x23, [sp, #48]
 5e8:	stp	x22, x21, [sp, #64]
 5ec:	stp	x20, x19, [sp, #80]
 5f0:	mov	w8, #0xa48                 	// #2632
 5f4:	movk	w8, #0x41, lsl #16
 5f8:	ldrb	w8, [x0, x8]
 5fc:	ldr	x28, [x1, #16]
 600:	mov	w23, w4
 604:	mov	w25, w3
 608:	mov	x22, x1
 60c:	mov	x26, x0
 610:	mov	x21, x2
 614:	cbz	w8, 630 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x58>
 618:	ldr	x8, [x22]
 61c:	mov	x0, x22
 620:	ldr	x8, [x8]
 624:	blr	x8
 628:	mov	w19, w0
 62c:	b	634 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x5c>
 630:	mov	w19, wzr
 634:	mov	x20, x28
 638:	ldr	x10, [x20, #8]!
 63c:	ldr	x9, [x21]
 640:	ldr	x8, [x20, #520]
 644:	cbz	x10, 79c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1c4>
 648:	add	x24, x26, #0x10
 64c:	cbz	x9, 6cc <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>
 650:	and	x2, x9, #0xfffffffffffff000
 654:	cmp	x8, x2
 658:	b.ne	6cc <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>  // b.any
 65c:	ldr	x10, [x24]
 660:	cmp	x8, x10
 664:	b.ne	6cc <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>  // b.any
 668:	ldr	x8, [x28, #1568]
 66c:	cbz	x8, 6c0 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xe8>
 670:	lsr	x12, x9, #6
 674:	mov	w13, #0x1                   	// #1
 678:	ubfx	x10, x9, #6, #6
 67c:	add	x11, x28, #0x420
 680:	lsl	x12, x13, x12
 684:	lsl	x13, x13, x9
 688:	mov	w14, #0x208                 	// #520
 68c:	ldr	w15, [x11]
 690:	madd	x16, x15, x14, x26
 694:	ldr	x16, [x16, #1584]
 698:	tst	x16, x12
 69c:	b.eq	6cc <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>  // b.none
 6a0:	madd	x15, x15, x14, x26
 6a4:	add	x15, x15, x10, lsl #3
 6a8:	ldr	x15, [x15, #1592]
 6ac:	tst	x15, x13
 6b0:	b.eq	6cc <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>  // b.none
 6b4:	subs	x8, x8, #0x1
 6b8:	add	x11, x11, #0x8
 6bc:	b.ne	68c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xb4>  // b.any
 6c0:	and	x1, x9, #0xfff
 6c4:	mov	x0, x20
 6c8:	b	7b8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1e0>
 6cc:	add	x26, x26, #0x8
 6d0:	mov	w8, #0x1                   	// #1
 6d4:	ldaxrb	w9, [x26]
 6d8:	stlxrb	w10, w8, [x26]
 6dc:	cbnz	w10, 6d4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xfc>
 6e0:	cbz	w9, 6ec <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x114>
 6e4:	mov	x0, x26
 6e8:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 6ec:	ldr	x27, [x21]
 6f0:	cbz	x27, 718 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x140>
 6f4:	ldr	x8, [x24]
 6f8:	and	x3, x27, #0xfffffffffffff000
 6fc:	cmp	x3, x8
 700:	b.ne	718 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x140>  // b.any
 704:	ldr	x8, [x28, #528]
 708:	cmp	x8, x3
 70c:	b.ne	73c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x164>  // b.any
 710:	tbnz	w25, #0, 750 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x178>
 714:	b	788 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1b0>
 718:	mov	x0, x24
 71c:	mov	x1, x21
 720:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 724:	str	x0, [x21]
 728:	ldr	x3, [x24]
 72c:	mov	x27, x0
 730:	ldr	x8, [x28, #528]
 734:	cmp	x8, x3
 738:	b.eq	710 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x138>  // b.none
 73c:	str	xzr, [x28, #8]
 740:	str	x3, [x28, #528]
 744:	str	xzr, [x28, #1048]
 748:	str	xzr, [x28, #1568]
 74c:	tbz	w25, #0, 788 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1b0>
 750:	cmp	x27, #0xfff
 754:	b.ls	88c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2b4>  // b.plast
 758:	and	x4, x27, #0xfffffffffffff000
 75c:	cmp	x3, x4
 760:	b.ne	8c8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2f0>  // b.any
 764:	ldr	x8, [x20]
 768:	lsr	x9, x27, #6
 76c:	lsr	x8, x8, x9
 770:	tbz	w8, #0, 788 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1b0>
 774:	ubfx	x8, x27, #6, #6
 778:	add	x8, x28, x8, lsl #3
 77c:	ldr	x8, [x8, #16]
 780:	lsr	x8, x8, x27
 784:	tbnz	w8, #0, 8e0 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x308>
 788:	tbz	w23, #0, 7d8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x200>
 78c:	mov	x8, x3
 790:	cmp	x3, x8
 794:	b.ne	830 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x258>  // b.any
 798:	b	840 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x268>
 79c:	cbz	x8, 648 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x70>
 7a0:	and	x10, x9, #0xfffffffffffff000
 7a4:	cmp	x8, x10
 7a8:	b.ne	648 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x70>  // b.any
 7ac:	and	x1, x9, #0xfff
 7b0:	mov	x0, x20
 7b4:	mov	x2, x8
 7b8:	mov	w3, w19
 7bc:	ldp	x20, x19, [sp, #80]
 7c0:	ldp	x22, x21, [sp, #64]
 7c4:	ldp	x24, x23, [sp, #48]
 7c8:	ldp	x26, x25, [sp, #32]
 7cc:	ldp	x28, x27, [sp, #16]
 7d0:	ldr	x30, [sp], #96
 7d4:	b	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 7d8:	mov	w23, w19
 7dc:	cbnz	w19, 7f4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x21c>
 7e0:	ldr	x8, [x22]
 7e4:	mov	x0, x22
 7e8:	ldr	x8, [x8]
 7ec:	blr	x8
 7f0:	mov	w23, w0
 7f4:	ldr	x8, [x22]
 7f8:	mov	x0, x22
 7fc:	ldr	x8, [x8, #8]
 800:	blr	x8
 804:	mov	w4, w0
 808:	mov	x0, x24
 80c:	mov	x1, x20
 810:	mov	x2, x27
 814:	mov	w3, w23
 818:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 81c:	ldr	x27, [x21]
 820:	ldr	x8, [x24]
 824:	ldr	x3, [x28, #528]
 828:	cmp	x3, x8
 82c:	b.eq	840 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x268>  // b.none
 830:	str	xzr, [x28, #8]
 834:	str	x8, [x28, #528]
 838:	str	xzr, [x28, #1048]
 83c:	str	xzr, [x28, #1568]
 840:	cmp	x27, #0xfff
 844:	b.ls	88c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2b4>  // b.plast
 848:	and	x4, x27, #0xfffffffffffff000
 84c:	cmp	x8, x4
 850:	b.ne	8ac <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2d4>  // b.any
 854:	and	x1, x27, #0xfff
 858:	mov	x0, x20
 85c:	mov	x2, x8
 860:	mov	w3, w19
 864:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 868:	dmb	ish
 86c:	strb	wzr, [x26]
 870:	ldp	x20, x19, [sp, #80]
 874:	ldp	x22, x21, [sp, #64]
 878:	ldp	x24, x23, [sp, #48]
 87c:	ldp	x26, x25, [sp, #32]
 880:	ldp	x28, x27, [sp, #16]
 884:	ldr	x30, [sp], #96
 888:	ret
 88c:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 890:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 894:	add	x0, x0, #0x0
 898:	add	x2, x2, #0x0
 89c:	mov	w1, #0x16e                 	// #366
 8a0:	mov	w4, #0x1000                	// #4096
 8a4:	mov	x3, x27
 8a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8ac:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8b0:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8b4:	add	x0, x0, #0x0
 8b8:	add	x2, x2, #0x0
 8bc:	mov	w1, #0x16f                 	// #367
 8c0:	mov	x3, x8
 8c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8c8:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8cc:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8d0:	add	x0, x0, #0x0
 8d4:	add	x2, x2, #0x0
 8d8:	mov	w1, #0x16f                 	// #367
 8dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8e0:	adrp	x0, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8e4:	adrp	x2, 0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 8e8:	add	x0, x0, #0x0
 8ec:	add	x2, x2, #0x0
 8f0:	mov	w1, #0xa6                  	// #166
 8f4:	mov	x3, xzr
 8f8:	mov	x4, xzr
 8fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000900 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb>:
 900:	ldr	x8, [x1, #16]
 904:	ldr	x9, [x2]
 908:	ldr	x10, [x8, #528]
 90c:	and	x11, x9, #0xfffffffffffff000
 910:	cmp	x10, x11
 914:	b.ne	924 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x24>  // b.any
 918:	add	x0, x8, #0x8
 91c:	and	x1, x9, #0xfff
 920:	b	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 924:	ret

0000000000000928 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE>:
 928:	stp	x30, x21, [sp, #-32]!
 92c:	stp	x20, x19, [sp, #16]
 930:	ldr	x8, [x2]
 934:	cbz	x8, 98c <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x64>
 938:	mov	x19, x2
 93c:	mov	x21, x0
 940:	add	x20, x0, #0x8
 944:	mov	w8, #0x1                   	// #1
 948:	ldaxrb	w9, [x20]
 94c:	stlxrb	w10, w8, [x20]
 950:	cbnz	w10, 948 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x20>
 954:	cbz	w9, 960 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x38>
 958:	mov	x0, x20
 95c:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 960:	ldr	x1, [x19]
 964:	cbz	x1, 980 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x58>
 968:	add	x0, x21, #0x10
 96c:	ldr	x8, [x0]
 970:	and	x9, x1, #0xfffffffffffff000
 974:	cmp	x9, x8
 978:	b.ne	980 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x58>  // b.any
 97c:	bl	0 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>
 980:	str	xzr, [x19]
 984:	dmb	ish
 988:	strb	wzr, [x20]
 98c:	ldp	x20, x19, [sp, #16]
 990:	ldp	x30, x21, [sp], #32
 994:	ret

0000000000000998 <_ZN11__sanitizer2DD9GetReportEPNS_10DDCallbackE>:
 998:	ldr	x8, [x1, #16]
 99c:	ldrb	w9, [x8, #2224]
 9a0:	cbz	w9, 9b0 <_ZN11__sanitizer2DD9GetReportEPNS_10DDCallbackE+0x18>
 9a4:	add	x0, x8, #0x628
 9a8:	strb	wzr, [x8, #2224]
 9ac:	ret
 9b0:	mov	x0, xzr
 9b4:	ret

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>:
   0:	sub	sp, sp, #0x20
   4:	str	x30, [sp, #16]
   8:	ldr	x8, [x0, #8]
   c:	cbz	x8, 64 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x64>
  10:	rbit	x9, x8
  14:	clz	x9, x9
  18:	mov	w10, #0x1                   	// #1
  1c:	lsl	x10, x10, x9
  20:	bic	x11, x8, x10
  24:	mov	x12, x0
  28:	str	x11, [x12, #8]!
  2c:	add	x11, x12, x9, lsl #3
  30:	ldr	x13, [x11, #8]!
  34:	cbz	x13, 3e4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3e4>
  38:	rbit	x12, x13
  3c:	clz	x12, x12
  40:	mov	w14, #0x1                   	// #1
  44:	lsl	x14, x14, x12
  48:	bics	x13, x13, x14
  4c:	str	x13, [x11]
  50:	b.eq	5c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x5c>  // b.none
  54:	orr	x8, x10, x8
  58:	str	x8, [x0, #8]
  5c:	orr	x8, x12, x9, lsl #6
  60:	b	288 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x288>
  64:	ldr	x9, [x0, #528]
  68:	mov	w8, #0xa30                 	// #2608
  6c:	movk	w8, #0x41, lsl #16
  70:	add	x8, x0, x8
  74:	cbz	x9, 2ac <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x2ac>
  78:	ldr	x10, [x8]
  7c:	subs	x9, x10, #0x1
  80:	b.mi	150 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x150>  // b.first
  84:	mov	w11, #0xa20                 	// #2592
  88:	add	x12, x0, x10, lsl #4
  8c:	movk	w11, #0x21, lsl #16
  90:	add	x12, x12, x11
  94:	b	cc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0xcc>
  98:	ldr	q0, [x12]
  9c:	add	x10, x0, x10, lsl #4
  a0:	str	q0, [sp]
  a4:	ldr	q0, [x10, x11]
  a8:	str	q0, [x12]
  ac:	ldr	q0, [sp]
  b0:	str	q0, [x10, x11]
  b4:	ldr	x10, [x8]
  b8:	sub	x10, x10, #0x1
  bc:	str	x10, [x8]
  c0:	sub	x9, x9, #0x1
  c4:	sub	x12, x12, #0x10
  c8:	tbnz	x9, #63, 148 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x148>
  cc:	ldrh	w3, [x12]
  d0:	cmp	x3, #0x1, lsl #12
  d4:	b.hi	3c8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3c8>  // b.pmore
  d8:	lsr	x13, x3, #12
  dc:	add	x14, x0, x13, lsl #3
  e0:	ldr	x14, [x14, #528]
  e4:	lsr	x15, x3, #6
  e8:	lsr	x14, x14, x15
  ec:	tbz	w14, #0, 108 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x108>
  f0:	ubfx	x14, x3, #6, #6
  f4:	add	x13, x0, x13, lsl #9
  f8:	add	x13, x13, x14, lsl #3
  fc:	ldr	x13, [x13, #536]
 100:	lsr	x13, x13, x3
 104:	tbnz	w13, #0, 98 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x98>
 108:	ldrh	w3, [x12, #2]
 10c:	cmp	x3, #0x1, lsl #12
 110:	b.hi	3c8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3c8>  // b.pmore
 114:	lsr	x13, x3, #12
 118:	add	x14, x0, x13, lsl #3
 11c:	ldr	x14, [x14, #528]
 120:	lsr	x15, x3, #6
 124:	lsr	x14, x14, x15
 128:	tbz	w14, #0, c0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0xc0>
 12c:	ubfx	x14, x3, #6, #6
 130:	add	x13, x0, x13, lsl #9
 134:	add	x13, x13, x14, lsl #3
 138:	ldr	x13, [x13, #536]
 13c:	lsr	x13, x13, x3
 140:	tbnz	w13, #0, 98 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x98>
 144:	b	c0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0xc0>
 148:	ldr	x8, [x0, #8]
 14c:	cbnz	x8, 418 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x418>
 150:	ldr	x8, [x0, #528]
 154:	mov	x9, xzr
 158:	mov	w10, #0x208                 	// #520
 15c:	mov	w11, #0x1                   	// #1
 160:	b	170 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x170>
 164:	add	x9, x9, #0x1
 168:	cmp	x9, #0x1, lsl #12
 16c:	b.eq	1d0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x1d0>  // b.none
 170:	madd	x14, x9, x10, x0
 174:	ldr	x12, [x14, #1568]
 178:	ands	x13, x8, x12
 17c:	b.eq	164 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x164>  // b.none
 180:	add	x14, x14, #0x620
 184:	b	18c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x18c>
 188:	cbz	x13, 164 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x164>
 18c:	rbit	x15, x13
 190:	clz	x15, x15
 194:	madd	x16, x9, x10, x0
 198:	lsl	x17, x15, #3
 19c:	add	x16, x16, x17
 1a0:	add	x17, x0, x17
 1a4:	ldr	x18, [x16, #1576]
 1a8:	ldr	x17, [x17, #536]
 1ac:	lsl	x15, x11, x15
 1b0:	bic	x13, x13, x15
 1b4:	bics	x17, x18, x17
 1b8:	str	x17, [x16, #1576]
 1bc:	b.ne	188 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x188>  // b.any
 1c0:	mvn	x15, x15
 1c4:	and	x12, x12, x15
 1c8:	str	x12, [x14]
 1cc:	b	188 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x188>
 1d0:	cbz	x8, 3fc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3fc>
 1d4:	mov	x11, xzr
 1d8:	mov	w10, #0x1                   	// #1
 1dc:	b	200 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x200>
 1e0:	mov	x13, xzr
 1e4:	str	xzr, [x11]
 1e8:	add	x12, x0, x12, lsl #3
 1ec:	ldr	x12, [x12, #536]
 1f0:	orr	x12, x12, x13
 1f4:	str	x12, [x11]
 1f8:	mov	x11, x9
 1fc:	cbz	x8, 234 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x234>
 200:	rbit	x9, x8
 204:	clz	x12, x9
 208:	lsl	x9, x10, x12
 20c:	mov	x13, x0
 210:	bic	x8, x8, x9
 214:	orr	x9, x9, x11
 218:	str	x9, [x13, #8]!
 21c:	add	x13, x13, x12, lsl #3
 220:	cmp	x9, x11
 224:	add	x11, x13, #0x8
 228:	b.ne	1e0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x1e0>  // b.any
 22c:	ldr	x13, [x11]
 230:	b	1e8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x1e8>
 234:	rbit	x8, x9
 238:	mov	w10, #0x1                   	// #1
 23c:	clz	x8, x8
 240:	lsl	x10, x10, x8
 244:	mov	x11, x0
 248:	bic	x12, x9, x10
 24c:	str	x12, [x11, #8]!
 250:	str	xzr, [x11, #520]
 254:	add	x12, x11, x8, lsl #3
 258:	ldr	x13, [x12, #8]!
 25c:	cbz	x13, 3e4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3e4>
 260:	rbit	x11, x13
 264:	clz	x11, x11
 268:	mov	w14, #0x1                   	// #1
 26c:	lsl	x14, x14, x11
 270:	bics	x13, x13, x14
 274:	str	x13, [x12]
 278:	b.eq	284 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x284>  // b.none
 27c:	orr	x9, x10, x9
 280:	str	x9, [x0, #8]
 284:	orr	x8, x11, x8, lsl #6
 288:	mov	w10, #0x8a30                	// #35376
 28c:	add	x9, x0, x8, lsl #3
 290:	movk	w10, #0x20, lsl #16
 294:	str	x1, [x9, x10]
 298:	ldr	x9, [x0]
 29c:	add	x0, x9, x8
 2a0:	ldr	x30, [sp, #16]
 2a4:	add	sp, sp, #0x20
 2a8:	ret
 2ac:	ldr	x9, [x0]
 2b0:	add	x11, x0, #0x108
 2b4:	movi	v0.2d, #0xffffffffffffffff
 2b8:	mov	x12, x0
 2bc:	add	x9, x9, #0x1, lsl #12
 2c0:	mov	x10, xzr
 2c4:	str	xzr, [x0, #528]
 2c8:	str	x9, [x0]
 2cc:	str	q0, [x12, #8]!
 2d0:	stur	q0, [x0, #24]
 2d4:	stur	q0, [x0, #40]
 2d8:	stur	q0, [x0, #56]
 2dc:	stur	q0, [x0, #72]
 2e0:	stur	q0, [x0, #88]
 2e4:	stur	q0, [x0, #104]
 2e8:	stur	q0, [x0, #120]
 2ec:	stur	q0, [x0, #136]
 2f0:	stur	q0, [x0, #152]
 2f4:	stur	q0, [x0, #168]
 2f8:	stur	q0, [x0, #184]
 2fc:	stur	q0, [x0, #200]
 300:	stur	q0, [x0, #216]
 304:	stur	q0, [x0, #232]
 308:	stur	q0, [x0, #248]
 30c:	stp	q0, q0, [x11]
 310:	stp	q0, q0, [x11, #32]
 314:	stp	q0, q0, [x11, #64]
 318:	stp	q0, q0, [x11, #96]
 31c:	stp	q0, q0, [x11, #128]
 320:	stp	q0, q0, [x11, #160]
 324:	stp	q0, q0, [x11, #192]
 328:	stp	q0, q0, [x11, #224]
 32c:	mov	x11, #0xffffffffffffffff    	// #-1
 330:	str	x11, [x12, #512]
 334:	add	x11, x0, x10
 338:	add	x10, x10, #0x410
 33c:	cmp	x10, #0x208, lsl #12
 340:	str	xzr, [x11, #1568]
 344:	str	xzr, [x11, #2088]
 348:	b.ne	334 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x334>  // b.any
 34c:	str	xzr, [x8]
 350:	ldr	x8, [x0, #8]
 354:	cbz	x8, 400 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x400>
 358:	rbit	x10, x8
 35c:	clz	x10, x10
 360:	mov	w11, #0x1                   	// #1
 364:	lsl	x11, x11, x10
 368:	bic	x12, x8, x11
 36c:	mov	x13, x0
 370:	str	x12, [x13, #8]!
 374:	add	x13, x13, x10, lsl #3
 378:	ldr	x14, [x13, #8]!
 37c:	cbz	x14, 3e4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3e4>
 380:	rbit	x12, x14
 384:	clz	x12, x12
 388:	mov	w15, #0x1                   	// #1
 38c:	lsl	x15, x15, x12
 390:	bics	x14, x14, x15
 394:	str	x14, [x13]
 398:	b.eq	3a4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x3a4>  // b.none
 39c:	orr	x8, x11, x8
 3a0:	str	x8, [x0, #8]
 3a4:	orr	x8, x12, x10, lsl #6
 3a8:	mov	w10, #0x8a30                	// #35376
 3ac:	movk	w10, #0x20, lsl #16
 3b0:	add	x11, x0, x8, lsl #3
 3b4:	add	x0, x8, x9
 3b8:	str	x1, [x11, x10]
 3bc:	ldr	x30, [sp, #16]
 3c0:	add	sp, sp, #0x20
 3c4:	ret
 3c8:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 3cc:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 3d0:	add	x0, x0, #0x0
 3d4:	add	x2, x2, #0x0
 3d8:	mov	w1, #0x144                 	// #324
 3dc:	mov	w4, #0x1000                	// #4096
 3e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 3e8:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x2, x2, #0x0
 3f4:	mov	w1, #0x31                  	// #49
 3f8:	b	42c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x42c>
 3fc:	str	xzr, [x0, #528]
 400:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 404:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 408:	add	x0, x0, #0x0
 40c:	add	x2, x2, #0x0
 410:	mov	w1, #0xc0                  	// #192
 414:	b	42c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm+0x42c>
 418:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 41c:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7newNodeEm>
 420:	add	x0, x0, #0x0
 424:	add	x2, x2, #0x0
 428:	mov	w1, #0xa5                  	// #165
 42c:	mov	x3, xzr
 430:	mov	x4, xzr
 434:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>:
   0:	sub	sp, sp, #0x180
   4:	stp	x29, x30, [sp, #320]
   8:	stp	x24, x23, [sp, #336]
   c:	stp	x22, x21, [sp, #352]
  10:	stp	x20, x19, [sp, #368]
  14:	mov	w20, w3
  18:	ldr	x3, [x0]
  1c:	ldr	x8, [x1, #520]
  20:	mov	w19, w4
  24:	mov	x21, x1
  28:	mov	x22, x0
  2c:	cmp	x8, x3
  30:	mov	x8, x2
  34:	b.eq	48 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x48>  // b.none
  38:	str	xzr, [x21]
  3c:	str	x3, [x21, #520]
  40:	str	xzr, [x21, #1040]
  44:	str	xzr, [x21, #1560]
  48:	cmp	x8, #0xfff
  4c:	b.ls	120 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x120>  // b.plast
  50:	and	x4, x8, #0xfffffffffffff000
  54:	cmp	x3, x4
  58:	b.ne	140 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x140>  // b.any
  5c:	and	x23, x8, #0xfff
  60:	add	x0, x22, #0x620
  64:	mov	x3, sp
  68:	mov	w4, #0x28                  	// #40
  6c:	mov	x1, x21
  70:	mov	x2, x23
  74:	mov	x24, sp
  78:	bl	0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
  7c:	cbz	x0, 108 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x108>
  80:	mov	w10, #0xa30                 	// #2608
  84:	movk	w10, #0x41, lsl #16
  88:	mov	w11, #0xa30                 	// #2608
  8c:	mov	x8, xzr
  90:	add	x9, x21, #0x41c
  94:	add	x10, x22, x10
  98:	movk	w11, #0x21, lsl #16
  9c:	b	d0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xd0>
  a0:	ldr	w14, [x15]
  a4:	add	x15, x12, #0x1
  a8:	add	x12, x22, x12, lsl #4
  ac:	add	x12, x12, x11
  b0:	str	x15, [x10]
  b4:	strh	w13, [x12]
  b8:	strh	w23, [x12, #2]
  bc:	stp	w14, w20, [x12, #4]
  c0:	str	w19, [x12, #12]
  c4:	add	x8, x8, #0x1
  c8:	cmp	x8, x0
  cc:	b.eq	108 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x108>  // b.none
  d0:	ldr	x12, [x10]
  d4:	lsr	x13, x12, #17
  d8:	cbnz	x13, c4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xc4>
  dc:	ldr	x14, [x21, #1560]
  e0:	ldr	x13, [x24, x8, lsl #3]
  e4:	cbz	x14, a4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xa4>
  e8:	mov	x15, x9
  ec:	ldur	w16, [x15, #-4]
  f0:	cmp	w16, w13
  f4:	b.eq	a0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xa0>  // b.none
  f8:	subs	x14, x14, #0x1
  fc:	add	x15, x15, #0x8
 100:	b.ne	ec <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xec>  // b.any
 104:	b	a4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xa4>
 108:	ldp	x20, x19, [sp, #368]
 10c:	ldp	x22, x21, [sp, #352]
 110:	ldp	x24, x23, [sp, #336]
 114:	ldp	x29, x30, [sp, #320]
 118:	add	sp, sp, #0x180
 11c:	ret
 120:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 124:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 128:	add	x0, x0, #0x0
 12c:	add	x2, x2, #0x0
 130:	mov	w1, #0x16e                 	// #366
 134:	mov	w4, #0x1000                	// #4096
 138:	mov	x3, x8
 13c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 140:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 144:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 148:	add	x0, x0, #0x0
 14c:	add	x2, x2, #0x0
 150:	mov	w1, #0x16f                 	// #367
 154:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>:
   0:	str	x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x20, x3
  18:	ldr	x8, [x0]
  1c:	ldr	x3, [x1, #520]
  20:	cmp	x3, x8
  24:	b.ne	1a8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x1a8>  // b.any
  28:	add	x23, x0, #0x418
  2c:	str	xzr, [x23]
  30:	ldr	x9, [x1]
  34:	mov	x22, x4
  38:	mov	x21, x0
  3c:	mov	x19, x2
  40:	cbz	x9, a4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0xa4>
  44:	mov	x12, xzr
  48:	mov	w10, #0x1                   	// #1
  4c:	b	70 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x70>
  50:	mov	x14, xzr
  54:	str	xzr, [x12]
  58:	add	x13, x1, x13, lsl #3
  5c:	ldr	x13, [x13, #8]
  60:	orr	x13, x13, x14
  64:	str	x13, [x12]
  68:	mov	x12, x11
  6c:	cbz	x9, a8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0xa8>
  70:	rbit	x11, x9
  74:	clz	x13, x11
  78:	add	x14, x21, #0x418
  7c:	lsl	x11, x10, x13
  80:	add	x14, x14, x13, lsl #3
  84:	bic	x9, x9, x11
  88:	orr	x11, x11, x12
  8c:	cmp	x11, x12
  90:	add	x12, x14, #0x8
  94:	str	x11, [x21, #1048]
  98:	b.ne	50 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x50>  // b.any
  9c:	ldr	x14, [x12]
  a0:	b	58 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x58>
  a4:	mov	x11, xzr
  a8:	cmp	x19, #0xfff
  ac:	b.ls	1c4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x1c4>  // b.plast
  b0:	and	x4, x19, #0xfffffffffffff000
  b4:	cmp	x8, x4
  b8:	b.ne	1e4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x1e4>  // b.any
  bc:	ubfx	x8, x19, #6, #6
  c0:	lsr	x9, x11, x8
  c4:	tbz	w9, #0, d8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0xd8>
  c8:	add	x8, x21, x8, lsl #3
  cc:	ldr	x8, [x8, #1056]
  d0:	lsr	x8, x8, x19
  d4:	tbnz	w8, #0, 200 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x200>
  d8:	cbz	x22, 114 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x114>
  dc:	and	x25, x19, #0xfff
  e0:	add	x26, x21, #0x620
  e4:	mov	w24, #0x1                   	// #1
  e8:	mov	x0, x26
  ec:	mov	x1, x25
  f0:	mov	x2, x23
  f4:	mov	x3, x20
  f8:	mov	x4, x24
  fc:	bl	0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 100:	cmp	x24, x0
 104:	b.eq	134 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x134>  // b.none
 108:	add	x24, x24, #0x1
 10c:	cmp	x24, x22
 110:	b.ls	e8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0xe8>  // b.plast
 114:	mov	x24, xzr
 118:	mov	x0, x24
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldr	x30, [sp], #80
 130:	ret
 134:	cbz	x24, 118 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x118>
 138:	mov	x8, xzr
 13c:	ldr	x3, [x20, x8, lsl #3]
 140:	cmp	x3, #0x1, lsl #12
 144:	b.cs	18c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x18c>  // b.hs, b.nlast
 148:	ldr	x9, [x21]
 14c:	add	x9, x9, x3
 150:	str	x9, [x20, x8, lsl #3]
 154:	add	x8, x8, #0x1
 158:	cmp	x24, x8
 15c:	b.ne	13c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x13c>  // b.any
 160:	cbz	x24, 118 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x118>
 164:	ldr	x3, [x20]
 168:	cmp	x3, x19
 16c:	b.eq	118 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm+0x118>  // b.none
 170:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 174:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 178:	add	x0, x0, #0x0
 17c:	add	x2, x2, #0x0
 180:	mov	w1, #0x13f                 	// #319
 184:	mov	x4, x19
 188:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 18c:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 190:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 194:	add	x0, x0, #0x0
 198:	add	x2, x2, #0x0
 19c:	mov	w1, #0x16b                 	// #363
 1a0:	mov	w4, #0x1000                	// #4096
 1a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1a8:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1ac:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x2, x2, #0x0
 1b8:	mov	w1, #0x6b                  	// #107
 1bc:	mov	x4, x8
 1c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1c4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1c8:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1cc:	add	x0, x0, #0x0
 1d0:	add	x2, x2, #0x0
 1d4:	mov	w1, #0x16e                 	// #366
 1d8:	mov	w4, #0x1000                	// #4096
 1dc:	mov	x3, x19
 1e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1e4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1e8:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 1ec:	add	x0, x0, #0x0
 1f0:	add	x2, x2, #0x0
 1f4:	mov	w1, #0x16f                 	// #367
 1f8:	mov	x3, x8
 1fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 200:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 204:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE14findPathToLockEPNS_19DeadlockDetectorTLSIS4_EEmPmm>
 208:	add	x0, x0, #0x0
 20c:	add	x2, x2, #0x0
 210:	mov	w1, #0x13a                 	// #314
 214:	mov	x3, xzr
 218:	mov	x4, xzr
 21c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>:
   0:	str	x30, [sp, #-16]!
   4:	mov	x9, x1
   8:	cmp	x1, #0xfff
   c:	b.ls	dc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xdc>  // b.plast
  10:	ldr	x10, [x0]
  14:	and	x11, x9, #0xfffffffffffff000
  18:	cmp	x10, x11
  1c:	b.ne	bc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xbc>  // b.any
  20:	mov	x8, x2
  24:	cmp	x2, #0xfff
  28:	b.ls	fc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xfc>  // b.plast
  2c:	and	x11, x8, #0xfffffffffffff000
  30:	cmp	x10, x11
  34:	b.ne	bc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xbc>  // b.any
  38:	mov	w10, #0xa30                 	// #2608
  3c:	movk	w10, #0x41, lsl #16
  40:	ldr	x10, [x0, x10]
  44:	cbz	x10, b0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xb0>
  48:	and	x12, x8, #0xfff
  4c:	mov	w8, #0xa38                 	// #2616
  50:	movk	w8, #0x21, lsl #16
  54:	mov	x11, xzr
  58:	and	x9, x9, #0xfff
  5c:	add	x8, x0, x8
  60:	b	74 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0x74>
  64:	add	x11, x11, #0x1
  68:	cmp	x11, x10
  6c:	add	x8, x8, #0x10
  70:	b.cs	b0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0xb0>  // b.hs, b.nlast
  74:	ldurh	w13, [x8, #-8]
  78:	cmp	x9, x13
  7c:	b.ne	64 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0x64>  // b.any
  80:	ldurh	w13, [x8, #-6]
  84:	cmp	x12, x13
  88:	b.ne	64 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi+0x64>  // b.any
  8c:	ldur	w9, [x8, #-4]
  90:	mov	w0, #0x1                   	// #1
  94:	str	w9, [x3]
  98:	ldr	w9, [x8]
  9c:	str	w9, [x4]
  a0:	ldr	w8, [x8, #4]
  a4:	str	w8, [x5]
  a8:	ldr	x30, [sp], #16
  ac:	ret
  b0:	mov	w0, wzr
  b4:	ldr	x30, [sp], #16
  b8:	ret
  bc:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
  c0:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
  c4:	add	x0, x0, #0x0
  c8:	add	x2, x2, #0x0
  cc:	mov	w1, #0x16f                 	// #367
  d0:	mov	x3, x10
  d4:	mov	x4, x11
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  dc:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
  e0:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
  e4:	add	x0, x0, #0x0
  e8:	add	x2, x2, #0x0
  ec:	mov	w1, #0x16e                 	// #366
  f0:	mov	w4, #0x1000                	// #4096
  f4:	mov	x3, x9
  f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  fc:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
 100:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findEdgeEmmPjS6_Pi>
 104:	add	x0, x0, #0x0
 108:	add	x2, x2, #0x0
 10c:	mov	w1, #0x16e                 	// #366
 110:	mov	w4, #0x1000                	// #4096
 114:	mov	x3, x8
 118:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>:
   0:	str	x30, [sp, #-16]!
   4:	mov	x8, x1
   8:	cmp	x1, #0xfff
   c:	b.ls	c4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0xc4>  // b.plast
  10:	ldr	x3, [x0]
  14:	and	x4, x8, #0xfffffffffffff000
  18:	cmp	x3, x4
  1c:	b.ne	e4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0xe4>  // b.any
  20:	ldr	x9, [x0, #8]
  24:	ubfx	x10, x8, #6, #6
  28:	mov	w11, #0x1                   	// #1
  2c:	lsl	x11, x11, x10
  30:	tst	x9, x11
  34:	and	x9, x8, #0x3f
  38:	b.eq	4c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0x4c>  // b.none
  3c:	add	x12, x0, x10, lsl #3
  40:	ldr	x12, [x12, #16]
  44:	lsr	x12, x12, x9
  48:	tbnz	w12, #0, fc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0xfc>
  4c:	ldr	x12, [x0, #528]
  50:	tst	x12, x11
  54:	b.eq	90 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0x90>  // b.none
  58:	add	x10, x0, x10, lsl #3
  5c:	ldr	x11, [x10, #536]
  60:	mov	w12, #0x1                   	// #1
  64:	lsl	x9, x12, x9
  68:	orr	x9, x11, x9
  6c:	cmp	x9, x11
  70:	str	x9, [x10, #536]
  74:	b.ne	ac <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0xac>  // b.any
  78:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  7c:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  80:	add	x0, x0, #0x0
  84:	add	x2, x2, #0x0
  88:	mov	w1, #0xbf                  	// #191
  8c:	b	110 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm+0x110>
  90:	orr	x11, x12, x11
  94:	add	x12, x0, #0x210
  98:	mov	w13, #0x1                   	// #1
  9c:	add	x10, x12, x10, lsl #3
  a0:	lsl	x9, x13, x9
  a4:	str	x11, [x0, #528]
  a8:	str	x9, [x10, #8]
  ac:	and	x8, x8, #0xfff
  b0:	mov	w9, #0x208                 	// #520
  b4:	madd	x8, x8, x9, x0
  b8:	str	xzr, [x8, #1568]
  bc:	ldr	x30, [sp], #16
  c0:	ret
  c4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  c8:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  cc:	add	x0, x0, #0x0
  d0:	add	x2, x2, #0x0
  d4:	mov	w1, #0x16e                 	// #366
  d8:	mov	w4, #0x1000                	// #4096
  dc:	mov	x3, x8
  e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  e4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  e8:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
  ec:	add	x0, x0, #0x0
  f0:	add	x2, x2, #0x0
  f4:	mov	w1, #0x16f                 	// #367
  f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  fc:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
 100:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeNodeEm>
 104:	add	x0, x0, #0x0
 108:	add	x2, x2, #0x0
 10c:	mov	w1, #0xbe                  	// #190
 110:	mov	x3, xzr
 114:	mov	x4, xzr
 118:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_:

0000000000000000 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_>:
   0:	str	x30, [sp, #-16]!
   4:	add	x8, x0, #0x208, lsl #12
   8:	mov	w9, #0x208                 	// #520
   c:	str	xzr, [x8]
  10:	mul	x9, x1, x9
  14:	ldr	x10, [x0, x9]
  18:	mov	x3, x1
  1c:	cbz	x10, 8c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x8c>
  20:	mov	w12, #0x8008                	// #32776
  24:	mov	w9, #0x208                 	// #520
  28:	mov	x14, xzr
  2c:	mov	w11, #0x1                   	// #1
  30:	movk	w12, #0x20, lsl #16
  34:	madd	x13, x3, x9, x0
  38:	b	5c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x5c>
  3c:	mov	x16, xzr
  40:	str	xzr, [x14]
  44:	add	x15, x13, x15, lsl #3
  48:	ldr	x15, [x15, #8]
  4c:	orr	x15, x15, x16
  50:	str	x15, [x14]
  54:	mov	x14, x9
  58:	cbz	x10, 90 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x90>
  5c:	rbit	x9, x10
  60:	clz	x15, x9
  64:	lsl	x9, x11, x15
  68:	add	x16, x0, x15, lsl #3
  6c:	bic	x10, x10, x9
  70:	orr	x9, x9, x14
  74:	cmp	x9, x14
  78:	add	x14, x16, x12
  7c:	str	x9, [x8]
  80:	b.ne	3c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x3c>  // b.any
  84:	ldr	x16, [x14]
  88:	b	44 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x44>
  8c:	mov	x9, xzr
  90:	cmp	x3, #0x1, lsl #12
  94:	str	xzr, [x8, #520]
  98:	b.hi	2d0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x2d0>  // b.pmore
  9c:	lsr	x10, x3, #12
  a0:	mov	w13, #0x8208                	// #33288
  a4:	add	x11, x0, x10, lsl #3
  a8:	movk	w13, #0x20, lsl #16
  ac:	add	x14, x11, x13
  b0:	ldr	x15, [x14]
  b4:	lsr	x12, x3, #6
  b8:	mov	w13, #0x1                   	// #1
  bc:	lsl	x16, x13, x12
  c0:	ubfx	x11, x3, #6, #6
  c4:	tst	x15, x16
  c8:	and	x12, x3, #0x3f
  cc:	b.eq	e8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0xe8>  // b.none
  d0:	add	x13, x0, x10, lsl #9
  d4:	mov	w14, #0x8210                	// #33296
  d8:	add	x13, x13, x11, lsl #3
  dc:	movk	w14, #0x20, lsl #16
  e0:	ldr	x13, [x13, x14]
  e4:	b	108 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x108>
  e8:	orr	x15, x15, x16
  ec:	add	x16, x0, x10, lsl #9
  f0:	str	x15, [x14]
  f4:	mov	w15, #0x8210                	// #33296
  f8:	mov	x13, xzr
  fc:	add	x14, x16, x11, lsl #3
 100:	movk	w15, #0x20, lsl #16
 104:	str	xzr, [x14, x15]
 108:	add	x10, x0, x10, lsl #9
 10c:	mov	w14, #0x1                   	// #1
 110:	add	x10, x10, x11, lsl #3
 114:	lsl	x11, x14, x12
 118:	mov	w12, #0x8210                	// #33296
 11c:	orr	x11, x13, x11
 120:	movk	w12, #0x20, lsl #16
 124:	str	x11, [x10, x12]
 128:	cbz	x9, 244 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x244>
 12c:	mov	w11, #0x8008                	// #32776
 130:	mov	w12, #0x8210                	// #33296
 134:	mov	w10, #0x1                   	// #1
 138:	movk	w11, #0x20, lsl #16
 13c:	movk	w12, #0x20, lsl #16
 140:	mov	w13, #0x208                 	// #520
 144:	b	150 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x150>
 148:	mov	x9, x14
 14c:	cbz	x9, 244 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x244>
 150:	rbit	x14, x9
 154:	clz	x15, x14
 158:	lsl	x17, x10, x15
 15c:	add	x16, x0, x15, lsl #3
 160:	bic	x14, x9, x17
 164:	str	x14, [x8]
 168:	add	x1, x16, x11
 16c:	ldr	x3, [x1]
 170:	cbz	x3, 2b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x2b4>
 174:	rbit	x16, x3
 178:	clz	x16, x16
 17c:	lsl	x18, x10, x16
 180:	bics	x3, x3, x18
 184:	str	x3, [x1]
 188:	b.eq	194 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x194>  // b.none
 18c:	orr	x14, x17, x9
 190:	str	x14, [x8]
 194:	ldr	x9, [x8, #520]
 198:	tst	x9, x17
 19c:	b.eq	1cc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x1cc>  // b.none
 1a0:	add	x9, x0, x15, lsl #3
 1a4:	ldr	x17, [x9, x12]
 1a8:	orr	x18, x17, x18
 1ac:	cmp	x18, x17
 1b0:	str	x18, [x9, x12]
 1b4:	b.eq	148 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x148>  // b.none
 1b8:	orr	x15, x16, x15, lsl #6
 1bc:	mul	x9, x15, x13
 1c0:	ldr	x16, [x0, x9]
 1c4:	cbnz	x16, 214 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x214>
 1c8:	b	148 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x148>
 1cc:	orr	x9, x9, x17
 1d0:	add	x17, x0, x15, lsl #3
 1d4:	str	x9, [x8, #520]
 1d8:	str	x18, [x17, x12]
 1dc:	orr	x15, x16, x15, lsl #6
 1e0:	mul	x9, x15, x13
 1e4:	ldr	x16, [x0, x9]
 1e8:	cbnz	x16, 214 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x214>
 1ec:	b	148 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x148>
 1f0:	mov	x18, xzr
 1f4:	str	xzr, [x14]
 1f8:	madd	x1, x15, x13, x0
 1fc:	add	x17, x1, x17, lsl #3
 200:	ldr	x17, [x17, #8]
 204:	orr	x17, x17, x18
 208:	str	x17, [x14]
 20c:	mov	x14, x9
 210:	cbz	x16, 14c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x14c>
 214:	rbit	x9, x16
 218:	clz	x17, x9
 21c:	lsl	x9, x10, x17
 220:	add	x18, x0, x17, lsl #3
 224:	bic	x16, x16, x9
 228:	orr	x9, x9, x14
 22c:	cmp	x9, x14
 230:	add	x14, x18, x11
 234:	str	x9, [x8]
 238:	b.ne	1f0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x1f0>  // b.any
 23c:	ldr	x18, [x14]
 240:	b	1f8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x1f8>
 244:	ldr	x9, [x2]
 248:	ldr	x8, [x8, #520]
 24c:	ands	x9, x8, x9
 250:	b.eq	2a8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x2a8>  // b.none
 254:	mov	w11, #0x8210                	// #33296
 258:	mov	w10, #0x1                   	// #1
 25c:	movk	w11, #0x20, lsl #16
 260:	b	26c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x26c>
 264:	bic	x9, x9, x12
 268:	cbz	x9, 2a8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x2a8>
 26c:	rbit	x12, x9
 270:	clz	x13, x12
 274:	lsl	x12, x10, x13
 278:	tst	x12, x8
 27c:	b.eq	264 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x264>  // b.none
 280:	lsl	x13, x13, #3
 284:	add	x14, x2, x13
 288:	add	x13, x0, x13
 28c:	ldr	x14, [x14, #8]
 290:	ldr	x13, [x13, x11]
 294:	tst	x13, x14
 298:	b.eq	264 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_+0x264>  // b.none
 29c:	mov	w0, #0x1                   	// #1
 2a0:	ldr	x30, [sp], #16
 2a4:	ret
 2a8:	mov	w0, wzr
 2ac:	ldr	x30, [sp], #16
 2b0:	ret
 2b4:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_>
 2b8:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x2, x2, #0x0
 2c4:	mov	w1, #0x31                  	// #49
 2c8:	mov	x4, xzr
 2cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2d0:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_>
 2d4:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE11isReachableEmRKS4_>
 2d8:	add	x0, x0, #0x0
 2dc:	add	x2, x2, #0x0
 2e0:	mov	w1, #0x144                 	// #324
 2e4:	mov	w4, #0x1000                	// #4096
 2e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm:

0000000000000000 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm>:
   0:	str	x30, [sp, #-16]!
   4:	add	x10, x0, #0x208, lsl #12
   8:	str	xzr, [x10]
   c:	ldr	x8, [x1]
  10:	cbz	x8, 17c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x17c>
  14:	mov	w13, #0x8008                	// #32776
  18:	mov	x9, x2
  1c:	mov	x11, xzr
  20:	mov	w12, #0x1                   	// #1
  24:	movk	w13, #0x20, lsl #16
  28:	b	48 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x48>
  2c:	mov	x16, xzr
  30:	str	xzr, [x15]
  34:	add	x14, x1, x14, lsl #3
  38:	ldr	x14, [x14, #8]
  3c:	orr	x14, x14, x16
  40:	str	x14, [x15]
  44:	cbz	x8, 7c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x7c>
  48:	mov	x15, x11
  4c:	rbit	x11, x8
  50:	clz	x14, x11
  54:	lsl	x11, x12, x14
  58:	add	x16, x0, x14, lsl #3
  5c:	bic	x8, x8, x11
  60:	orr	x11, x11, x15
  64:	cmp	x11, x15
  68:	add	x15, x16, x13
  6c:	str	x11, [x10]
  70:	b.ne	2c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x2c>  // b.any
  74:	ldr	x16, [x15]
  78:	b	34 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x34>
  7c:	cmp	x9, #0x1, lsl #12
  80:	b.hi	188 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x188>  // b.pmore
  84:	lsr	x16, x9, #6
  88:	mov	w17, #0x1                   	// #1
  8c:	mov	w15, #0x8008                	// #32776
  90:	mov	x8, xzr
  94:	lsr	x12, x9, #12
  98:	ubfx	x13, x9, #6, #6
  9c:	mov	w14, #0x1                   	// #1
  a0:	movk	w15, #0x20, lsl #16
  a4:	lsl	x16, x17, x16
  a8:	lsl	x9, x17, x9
  ac:	mov	w17, #0x208                 	// #520
  b0:	b	bc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0xbc>
  b4:	ldr	x11, [x10]
  b8:	cbz	x11, 17c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x17c>
  bc:	rbit	x18, x11
  c0:	clz	x18, x18
  c4:	lsl	x1, x14, x18
  c8:	add	x2, x0, x18, lsl #3
  cc:	bic	x5, x11, x1
  d0:	str	x5, [x10]
  d4:	add	x2, x2, x15
  d8:	ldr	x6, [x2]
  dc:	cbz	x6, 1b8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x1b8>
  e0:	rbit	x5, x6
  e4:	clz	x5, x5
  e8:	lsl	x7, x14, x5
  ec:	bics	x6, x6, x7
  f0:	str	x6, [x2]
  f4:	b.eq	100 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x100>  // b.none
  f8:	orr	x11, x1, x11
  fc:	str	x11, [x10]
 100:	orr	x11, x5, x18, lsl #6
 104:	madd	x18, x11, x17, x0
 108:	add	x1, x18, x12, lsl #3
 10c:	ldr	x2, [x1]
 110:	tst	x2, x16
 114:	b.eq	12c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x12c>  // b.none
 118:	madd	x18, x11, x17, x0
 11c:	add	x18, x18, x12, lsl #9
 120:	add	x18, x18, x13, lsl #3
 124:	ldr	x18, [x18, #8]
 128:	b	148 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x148>
 12c:	orr	x2, x2, x16
 130:	madd	x5, x11, x17, x0
 134:	str	x2, [x1]
 138:	add	x1, x5, x12, lsl #9
 13c:	mov	x18, xzr
 140:	add	x1, x1, x13, lsl #3
 144:	str	xzr, [x1, #8]
 148:	madd	x2, x11, x17, x0
 14c:	add	x2, x2, x12, lsl #9
 150:	orr	x1, x18, x9
 154:	add	x2, x2, x13, lsl #3
 158:	cmp	x8, x4
 15c:	str	x1, [x2, #8]
 160:	b.cs	b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0xb4>  // b.hs, b.nlast
 164:	cmp	x1, x18
 168:	b.eq	b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0xb4>  // b.none
 16c:	add	x18, x8, #0x1
 170:	str	x11, [x3, x8, lsl #3]
 174:	mov	x8, x18
 178:	b	b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0xb4>
 17c:	mov	x0, x8
 180:	ldr	x30, [sp], #16
 184:	ret
 188:	rbit	x8, x11
 18c:	mov	w12, #0x1                   	// #1
 190:	clz	x14, x8
 194:	mov	w13, #0x8008                	// #32776
 198:	lsl	x8, x12, x14
 19c:	movk	w13, #0x20, lsl #16
 1a0:	add	x12, x0, x14, lsl #3
 1a4:	bic	x14, x11, x8
 1a8:	str	x14, [x10]
 1ac:	add	x12, x12, x13
 1b0:	ldr	x13, [x12]
 1b4:	cbnz	x13, 1d8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x1d8>
 1b8:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm>
 1bc:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x2, x2, #0x0
 1c8:	mov	w1, #0x31                  	// #49
 1cc:	mov	x3, xzr
 1d0:	mov	x4, xzr
 1d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1d8:	rbit	x14, x13
 1dc:	clz	x14, x14
 1e0:	mov	w15, #0x1                   	// #1
 1e4:	lsl	x14, x15, x14
 1e8:	bics	x13, x13, x14
 1ec:	str	x13, [x12]
 1f0:	b.eq	1fc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm+0x1fc>  // b.none
 1f4:	orr	x8, x8, x11
 1f8:	str	x8, [x10]
 1fc:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm>
 200:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesERKS4_mPmm>
 204:	add	x0, x0, #0x0
 208:	add	x2, x2, #0x0
 20c:	mov	w1, #0x144                 	// #324
 210:	mov	w4, #0x1000                	// #4096
 214:	mov	x3, x9
 218:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm:

0000000000000000 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	cbz	x4, 11c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x11c>
  1c:	mov	x19, x1
  20:	cmp	x1, #0x1, lsl #12
  24:	str	x1, [x3]
  28:	b.hi	164 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x164>  // b.pmore
  2c:	lsr	x8, x19, #12
  30:	ldr	x9, [x2, x8, lsl #3]
  34:	lsr	x10, x19, #6
  38:	mov	x20, x2
  3c:	mov	x21, x0
  40:	lsr	x9, x9, x10
  44:	tbz	w9, #0, 68 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x68>
  48:	ubfx	x9, x19, #6, #6
  4c:	add	x8, x20, x8, lsl #9
  50:	add	x8, x8, x9, lsl #3
  54:	ldr	x8, [x8, #8]
  58:	lsr	x8, x8, x19
  5c:	tbz	w8, #0, 68 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x68>
  60:	mov	w0, #0x1                   	// #1
  64:	b	128 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x128>
  68:	mov	w8, #0x208                 	// #520
  6c:	mov	x25, xzr
  70:	mov	x28, xzr
  74:	mov	x24, xzr
  78:	mov	x27, xzr
  7c:	add	x22, x3, #0x8
  80:	sub	x23, x4, #0x1
  84:	madd	x26, x19, x8, x21
  88:	mov	w29, #0x1                   	// #1
  8c:	b	d4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xd4>
  90:	mov	x27, xzr
  94:	rbit	x8, x25
  98:	clz	x8, x8
  9c:	lsl	x9, x28, #6
  a0:	lsl	x10, x29, x8
  a4:	add	x9, x9, x24, lsl #12
  a8:	bic	x25, x25, x10
  ac:	orr	x1, x8, x9
  b0:	orr	x8, x25, x27
  b4:	cmp	x8, #0x0
  b8:	mov	x0, x21
  bc:	mov	x2, x20
  c0:	mov	x3, x22
  c4:	mov	x4, x23
  c8:	cinc	x24, x24, eq  // eq = none
  cc:	bl	0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
  d0:	cbnz	x0, 124 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x124>
  d4:	cbz	x27, e0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xe0>
  d8:	cbnz	x25, 94 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x94>
  dc:	b	f0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xf0>
  e0:	cbnz	x24, 11c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x11c>
  e4:	ldr	x27, [x26]
  e8:	cbz	x27, 11c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x11c>
  ec:	cbnz	x25, 90 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x90>
  f0:	mov	w9, #0x208                 	// #520
  f4:	rbit	x8, x27
  f8:	madd	x9, x19, x9, x21
  fc:	clz	x28, x8
 100:	add	x8, x9, x24, lsl #9
 104:	add	x8, x8, x28, lsl #3
 108:	ldr	x25, [x8, #8]
 10c:	cbz	x25, 144 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x144>
 110:	lsl	x8, x29, x28
 114:	bic	x27, x27, x8
 118:	b	94 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x94>
 11c:	mov	x0, xzr
 120:	b	128 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x128>
 124:	add	x0, x0, #0x1
 128:	ldp	x20, x19, [sp, #80]
 12c:	ldp	x22, x21, [sp, #64]
 130:	ldp	x24, x23, [sp, #48]
 134:	ldp	x26, x25, [sp, #32]
 138:	ldp	x28, x27, [sp, #16]
 13c:	ldp	x29, x30, [sp], #96
 140:	ret
 144:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 148:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 14c:	add	x0, x0, #0x0
 150:	add	x2, x2, #0x0
 154:	mov	w1, #0x133                 	// #307
 158:	mov	x3, xzr
 15c:	mov	x4, xzr
 160:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 164:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 168:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 16c:	add	x0, x0, #0x0
 170:	add	x2, x2, #0x0
 174:	mov	w1, #0x144                 	// #324
 178:	mov	w4, #0x1000                	// #4096
 17c:	mov	x3, x19
 180:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj:

0000000000000000 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>:
   0:	str	x30, [sp, #-16]!
   4:	ldr	x9, [x0, #520]
   8:	cmp	x9, x2
   c:	b.ne	dc <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0xdc>  // b.any
  10:	mov	x8, x1
  14:	cmp	x1, #0x1, lsl #12
  18:	b.hi	fc <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0xfc>  // b.pmore
  1c:	lsr	x9, x8, #12
  20:	ldr	x12, [x0, x9, lsl #3]
  24:	lsr	x10, x8, #6
  28:	mov	w13, #0x1                   	// #1
  2c:	lsl	x13, x13, x10
  30:	ubfx	x11, x8, #6, #6
  34:	tst	x12, x13
  38:	and	x10, x8, #0x3f
  3c:	b.eq	90 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0x90>  // b.none
  40:	add	x9, x0, x9, lsl #9
  44:	add	x9, x9, x11, lsl #3
  48:	ldr	x11, [x9, #8]
  4c:	mov	w12, #0x1                   	// #1
  50:	lsl	x10, x12, x10
  54:	orr	x10, x11, x10
  58:	cmp	x10, x11
  5c:	str	x10, [x9, #8]
  60:	b.ne	ac <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0xac>  // b.any
  64:	ldr	x3, [x0, #1040]
  68:	cmp	x3, #0x40
  6c:	b.cs	13c <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0x13c>  // b.hs, b.nlast
  70:	mov	w9, wzr
  74:	add	x10, x3, #0x1
  78:	add	x11, x0, x3, lsl #3
  7c:	str	x10, [x0, #1040]
  80:	str	x8, [x11, #528]
  84:	mov	w0, w9
  88:	ldr	x30, [sp], #16
  8c:	ret
  90:	orr	x12, x12, x13
  94:	add	x13, x0, x9, lsl #9
  98:	mov	w14, #0x1                   	// #1
  9c:	str	x12, [x0, x9, lsl #3]
  a0:	add	x9, x13, x11, lsl #3
  a4:	lsl	x10, x14, x10
  a8:	str	x10, [x9, #8]
  ac:	ldr	x9, [x0, #1560]
  b0:	cmp	x9, #0x40
  b4:	b.cs	11c <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj+0x11c>  // b.hs, b.nlast
  b8:	add	x10, x9, #0x1
  bc:	add	x9, x0, x9, lsl #3
  c0:	str	x10, [x0, #1560]
  c4:	str	w8, [x9, #1048]
  c8:	str	w3, [x9, #1052]
  cc:	mov	w9, #0x1                   	// #1
  d0:	mov	w0, w9
  d4:	ldr	x30, [sp], #16
  d8:	ret
  dc:	mov	x4, x2
  e0:	adrp	x0, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
  e4:	adrp	x2, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
  e8:	add	x0, x0, #0x0
  ec:	add	x2, x2, #0x0
  f0:	mov	w1, #0x3c                  	// #60
  f4:	mov	x3, x9
  f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  fc:	adrp	x0, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 100:	adrp	x2, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 104:	add	x0, x0, #0x0
 108:	add	x2, x2, #0x0
 10c:	mov	w1, #0x144                 	// #324
 110:	mov	w4, #0x1000                	// #4096
 114:	mov	x3, x8
 118:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 11c:	adrp	x0, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 120:	adrp	x2, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 124:	add	x0, x0, #0x0
 128:	add	x2, x2, #0x0
 12c:	mov	w1, #0x43                  	// #67
 130:	mov	w4, #0x40                  	// #64
 134:	mov	x3, x9
 138:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 13c:	adrp	x0, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 140:	adrp	x2, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE7addLockEmmj>
 144:	add	x0, x0, #0x0
 148:	add	x2, x2, #0x0
 14c:	mov	w1, #0x3f                  	// #63
 150:	mov	w4, #0x40                  	// #64
 154:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm:

0000000000000000 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm>:
   0:	str	x30, [sp, #-16]!
   4:	ldr	x8, [x0, #1040]
   8:	mov	x3, x1
   c:	cbz	x8, 58 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0x58>
  10:	mov	x10, x8
  14:	subs	x9, x10, #0x1
  18:	b.mi	58 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0x58>  // b.first
  1c:	add	x10, x0, x10, lsl #3
  20:	ldr	x10, [x10, #520]
  24:	cmp	x10, x3
  28:	mov	x10, x9
  2c:	b.ne	14 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0x14>  // b.any
  30:	sub	x8, x8, #0x1
  34:	add	x9, x0, x9, lsl #3
  38:	str	x8, [x0, #1040]
  3c:	add	x8, x0, x8, lsl #3
  40:	ldr	x10, [x8, #528]
  44:	ldr	x11, [x9, #528]
  48:	str	x10, [x9, #528]
  4c:	str	x11, [x8, #528]
  50:	ldr	x30, [sp], #16
  54:	ret
  58:	cmp	x3, #0x1, lsl #12
  5c:	b.hi	110 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0x110>  // b.pmore
  60:	lsr	x8, x3, #12
  64:	ldr	x9, [x0, x8, lsl #3]
  68:	lsr	x10, x3, #6
  6c:	mov	w11, #0x1                   	// #1
  70:	lsl	x10, x11, x10
  74:	tst	x9, x10
  78:	b.eq	a8 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xa8>  // b.none
  7c:	ubfx	x11, x3, #6, #6
  80:	add	x12, x0, x8, lsl #9
  84:	add	x13, x12, x11, lsl #3
  88:	ldr	x11, [x13, #8]
  8c:	mov	w12, #0x1                   	// #1
  90:	lsl	x12, x12, x3
  94:	bics	x12, x11, x12
  98:	str	x12, [x13, #8]
  9c:	b.eq	b0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xb0>  // b.none
  a0:	cmp	x12, x11
  a4:	b.ne	c0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xc0>  // b.any
  a8:	ldr	x30, [sp], #16
  ac:	ret
  b0:	bic	x9, x9, x10
  b4:	cmp	x12, x11
  b8:	str	x9, [x0, x8, lsl #3]
  bc:	b.eq	a8 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xa8>  // b.none
  c0:	ldr	x8, [x0, #1560]
  c4:	cbz	x8, a8 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xa8>
  c8:	add	x9, x0, x8, lsl #3
  cc:	add	x9, x9, #0x418
  d0:	sub	x10, x8, #0x1
  d4:	tbnz	x10, #63, a8 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xa8>
  d8:	ldr	w11, [x9, #-8]!
  dc:	sub	x10, x10, #0x1
  e0:	cmp	w11, w3
  e4:	b.ne	d4 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm+0xd4>  // b.any
  e8:	add	x8, x0, x8, lsl #3
  ec:	ldr	x10, [x8, #1040]
  f0:	ldr	x11, [x9]
  f4:	str	x10, [x9]
  f8:	str	x11, [x8, #1040]
  fc:	ldr	x8, [x0, #1560]
 100:	sub	x8, x8, #0x1
 104:	str	x8, [x0, #1560]
 108:	ldr	x30, [sp], #16
 10c:	ret
 110:	adrp	x0, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm>
 114:	adrp	x2, 0 <_ZN11__sanitizer19DeadlockDetectorTLSINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE10removeLockEm>
 118:	add	x0, x0, #0x0
 11c:	add	x2, x2, #0x0
 120:	mov	w1, #0x144                 	// #324
 124:	mov	w4, #0x1000                	// #4096
 128:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_deadlock_detector2.cpp.o:     file format elf64-littleaarch64


sanitizer_errno.cpp.o:     file format elf64-littleaarch64


sanitizer_file.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>:
   0:	mov	x8, x0
   4:	mov	w0, #0x2                   	// #2
   8:	mov	x2, x1
   c:	mov	x1, x8
  10:	mov	x3, xzr
  14:	mov	x4, xzr
  18:	b	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>

000000000000001c <_ZN11__sanitizer8RawWriteEPKc>:
  1c:	stp	x30, x19, [sp, #-16]!
  20:	mov	x19, x0
  24:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  28:	adrp	x8, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
  2c:	add	x8, x8, #0x0
  30:	mov	x2, x0
  34:	mov	x0, x8
  38:	mov	x1, x19
  3c:	ldp	x30, x19, [sp], #16
  40:	b	0 <_ZN11__sanitizer10ReportFile5WriteEPKcm>

0000000000000044 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>:
  44:	stp	x30, x21, [sp, #-32]!
  48:	stp	x20, x19, [sp, #16]
  4c:	ldr	x8, [x0]
  50:	ldrb	w3, [x8]
  54:	cmp	x3, #0x1
  58:	b.ne	13c <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xf8>  // b.any
  5c:	ldr	w8, [x0, #8]
  60:	mov	x19, x0
  64:	sub	w8, w8, #0x1
  68:	cmp	w8, #0x2
  6c:	b.cc	130 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xec>  // b.lo, b.ul, b.last
  70:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
  74:	adrp	x8, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
  78:	ldr	x8, [x8]
  7c:	adrp	x9, 0 <_ZN11__sanitizer24stoptheworld_tracer_ppidE>
  80:	ldr	x9, [x9]
  84:	ldr	x10, [x8]
  88:	ldr	w8, [x19, #8]
  8c:	ldr	x9, [x9]
  90:	cmp	x0, x10
  94:	csel	x21, x9, x0, eq  // eq = none
  98:	cmn	w8, #0x1
  9c:	b.eq	b4 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x70>  // b.none
  a0:	ldr	x9, [x19, #8208]
  a4:	cmp	x9, x21
  a8:	b.eq	130 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xec>  // b.none
  ac:	mov	w0, w8
  b0:	bl	0 <_ZN11__sanitizer9CloseFileEi>
  b4:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
  b8:	mov	w8, #0x100c                	// #4108
  bc:	add	x20, x19, x8
  c0:	add	x3, x19, #0xc
  c4:	cbz	x0, f8 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xb4>
  c8:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  cc:	ldr	x8, [x8]
  d0:	ldrb	w8, [x8, #48]
  d4:	cbz	w8, f8 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xb4>
  d8:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
  dc:	mov	x4, x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x1000                	// #4096
  e8:	mov	x0, x20
  ec:	mov	x5, x21
  f0:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  f4:	b	110 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xcc>
  f8:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x1000                	// #4096
 104:	mov	x0, x20
 108:	mov	x4, x21
 10c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 110:	mov	w1, #0x1                   	// #1
 114:	mov	x0, x20
 118:	mov	x2, xzr
 11c:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 120:	cmn	w0, #0x1
 124:	str	w0, [x19, #8]
 128:	b.eq	158 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x114>  // b.none
 12c:	str	x21, [x19, #8208]
 130:	ldp	x20, x19, [sp, #16]
 134:	ldp	x30, x21, [sp], #32
 138:	ret
 13c:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 140:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 144:	add	x0, x0, #0x0
 148:	add	x2, x2, #0x0
 14c:	mov	w1, #0x2b                  	// #43
 150:	mov	w4, #0x1                   	// #1
 154:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 158:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 15c:	add	x19, x19, #0x0
 160:	mov	x0, x19
 164:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 168:	mov	x2, x0
 16c:	mov	w0, #0x2                   	// #2
 170:	mov	x1, x19
 174:	mov	x3, xzr
 178:	mov	x4, xzr
 17c:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 180:	mov	x0, x20
 184:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 188:	mov	x2, x0
 18c:	mov	w0, #0x2                   	// #2
 190:	mov	x1, x20
 194:	mov	x3, xzr
 198:	mov	x4, xzr
 19c:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 1a0:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000001a4 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc>:
 1a4:	sub	sp, sp, #0x30
 1a8:	stp	x30, x21, [sp, #16]
 1ac:	stp	x20, x19, [sp, #32]
 1b0:	cbz	x1, 26c <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xc8>
 1b4:	mov	x21, x0
 1b8:	mov	x0, x1
 1bc:	mov	x19, x1
 1c0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 1c4:	cmp	x0, #0xf9d
 1c8:	b.cs	27c <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xd8>  // b.hs, b.nlast
 1cc:	ldr	x20, [x21]
 1d0:	mov	w8, #0x1                   	// #1
 1d4:	ldaxrb	w9, [x20]
 1d8:	stlxrb	w10, w8, [x20]
 1dc:	cbnz	w10, 1d4 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x30>
 1e0:	cbz	w9, 1ec <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x48>
 1e4:	mov	x0, x20
 1e8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 1ec:	ldr	w0, [x21, #8]
 1f0:	add	w8, w0, #0x1
 1f4:	cmp	w8, #0x3
 1f8:	b.hi	204 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x60>  // b.pmore
 1fc:	cmp	w8, #0x1
 200:	b.ne	208 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x64>  // b.any
 204:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 208:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 20c:	mov	w8, #0xffffffff            	// #-1
 210:	add	x1, x1, #0x0
 214:	mov	x0, x19
 218:	str	w8, [x21, #8]
 21c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 220:	cbz	w0, 254 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xb0>
 224:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 228:	add	x1, x1, #0x0
 22c:	mov	x0, x19
 230:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 234:	cbz	w0, 25c <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xb8>
 238:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 23c:	add	x0, x21, #0xc
 240:	add	x2, x2, #0x0
 244:	mov	w1, #0x1000                	// #4096
 248:	mov	x3, x19
 24c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 250:	b	264 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xc0>
 254:	mov	w8, #0x1                   	// #1
 258:	b	260 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xbc>
 25c:	mov	w8, #0x2                   	// #2
 260:	str	w8, [x21, #8]
 264:	dmb	ish
 268:	strb	wzr, [x20]
 26c:	ldp	x20, x19, [sp, #32]
 270:	ldp	x30, x21, [sp, #16]
 274:	add	sp, sp, #0x30
 278:	ret
 27c:	ldrb	w1, [x19]
 280:	ldrb	w2, [x19, #1]
 284:	ldrb	w3, [x19, #2]
 288:	ldrb	w4, [x19, #3]
 28c:	ldrb	w5, [x19, #4]
 290:	ldrb	w6, [x19, #5]
 294:	ldrb	w7, [x19, #6]
 298:	ldrb	w8, [x19, #7]
 29c:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 2a0:	add	x0, x0, #0x0
 2a4:	str	w8, [sp]
 2a8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2ac:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000002b0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>:
 2b0:	sub	sp, sp, #0x60
 2b4:	stp	x30, x27, [sp, #16]
 2b8:	stp	x26, x25, [sp, #32]
 2bc:	stp	x24, x23, [sp, #48]
 2c0:	stp	x22, x21, [sp, #64]
 2c4:	stp	x20, x19, [sp, #80]
 2c8:	str	xzr, [x1]
 2cc:	str	xzr, [x2]
 2d0:	str	xzr, [x3]
 2d4:	cbz	x4, 3e0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x130>
 2d8:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
 2dc:	ldr	x25, [x25]
 2e0:	mov	x24, x0
 2e4:	mov	x20, x5
 2e8:	mov	x21, x4
 2ec:	ldr	x0, [x25]
 2f0:	mov	x23, x3
 2f4:	mov	x19, x2
 2f8:	mov	x22, x1
 2fc:	cbnz	x0, 308 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x58>
 300:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 304:	str	x0, [x25]
 308:	cmp	x0, x21
 30c:	adrp	x26, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 310:	csel	x25, x0, x21, cc  // cc = lo, ul, last
 314:	add	x26, x26, #0x0
 318:	ldr	x0, [x22]
 31c:	ldr	x1, [x19]
 320:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 324:	mov	x0, x25
 328:	mov	x1, x26
 32c:	mov	w2, wzr
 330:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 334:	str	x0, [x22]
 338:	mov	x0, x24
 33c:	mov	w1, wzr
 340:	mov	x2, x20
 344:	str	x25, [x19]
 348:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 34c:	cmn	w0, #0x1
 350:	b.eq	400 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x150>  // b.none
 354:	mov	w27, w0
 358:	mov	x8, xzr
 35c:	str	xzr, [x23]
 360:	subs	x2, x25, x8
 364:	b.ls	3a4 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0xf4>  // b.plast
 368:	ldr	x9, [x22]
 36c:	add	x3, sp, #0x8
 370:	mov	w0, w27
 374:	mov	x4, x20
 378:	add	x1, x9, x8
 37c:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
 380:	tbz	w0, #0, 3bc <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x10c>
 384:	ldr	x9, [sp, #8]
 388:	ldr	x8, [x23]
 38c:	add	x8, x8, x9
 390:	str	x8, [x23]
 394:	cbz	x9, 3d8 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x128>
 398:	cmp	x8, x21
 39c:	b.ne	360 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0xb0>  // b.any
 3a0:	b	3d8 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x128>
 3a4:	mov	w0, w27
 3a8:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 3ac:	lsl	x8, x25, #1
 3b0:	cmp	x8, x21
 3b4:	csel	x25, x8, x21, cc  // cc = lo, ul, last
 3b8:	b	318 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x68>
 3bc:	ldr	x0, [x22]
 3c0:	ldr	x1, [x19]
 3c4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 3c8:	mov	w0, w27
 3cc:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 3d0:	mov	w0, wzr
 3d4:	b	3e4 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x134>
 3d8:	mov	w0, w27
 3dc:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 3e0:	mov	w0, #0x1                   	// #1
 3e4:	ldp	x20, x19, [sp, #80]
 3e8:	ldp	x22, x21, [sp, #64]
 3ec:	ldp	x24, x23, [sp, #48]
 3f0:	ldp	x26, x25, [sp, #32]
 3f4:	ldp	x30, x27, [sp, #16]
 3f8:	add	sp, sp, #0x60
 3fc:	ret
 400:	ldr	x0, [x22]
 404:	ldr	x1, [x19]
 408:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 40c:	mov	w0, wzr
 410:	b	3e4 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x134>

0000000000000414 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi>:
 414:	sub	sp, sp, #0x50
 418:	stp	x30, x25, [sp, #16]
 41c:	stp	x24, x23, [sp, #32]
 420:	stp	x22, x21, [sp, #48]
 424:	stp	x20, x19, [sp, #64]
 428:	str	xzr, [x1, #16]
 42c:	cbz	x2, 568 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x154>
 430:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
 434:	ldr	x24, [x24]
 438:	mov	x22, x3
 43c:	mov	x21, x2
 440:	mov	x19, x1
 444:	ldr	x23, [x24]
 448:	mov	x20, x0
 44c:	cbnz	x23, 45c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x48>
 450:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 454:	mov	x23, x0
 458:	str	x0, [x24]
 45c:	mov	x0, x20
 460:	mov	w1, wzr
 464:	mov	x2, x22
 468:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 46c:	cmn	w0, #0x1
 470:	b.eq	578 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x164>  // b.none
 474:	mov	w24, w0
 478:	mov	x20, xzr
 47c:	cmp	x20, x21
 480:	b.cs	520 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x10c>  // b.hs, b.nlast
 484:	ldr	x8, [x19, #16]
 488:	cmp	x20, x8
 48c:	b.cs	498 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x84>  // b.hs, b.nlast
 490:	mov	x25, x8
 494:	b	4e8 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0xd4>
 498:	lsl	x9, x20, #1
 49c:	cmp	x23, x9
 4a0:	csel	x9, x23, x9, hi  // hi = pmore
 4a4:	cmp	x9, x21
 4a8:	csel	x25, x9, x21, cc  // cc = lo, ul, last
 4ac:	cmp	x8, x25
 4b0:	b.cs	4e4 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0xd0>  // b.hs, b.nlast
 4b4:	ldr	x9, [x19, #8]
 4b8:	cmp	x9, x25
 4bc:	b.cs	4d0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0xbc>  // b.hs, b.nlast
 4c0:	mov	x0, x19
 4c4:	mov	x1, x25
 4c8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 4cc:	ldr	x8, [x19, #16]
 4d0:	ldr	x9, [x19]
 4d4:	sub	x2, x25, x8
 4d8:	mov	w1, wzr
 4dc:	add	x0, x9, x8
 4e0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 4e4:	str	x25, [x19, #16]
 4e8:	subs	x2, x25, x20
 4ec:	b.ls	594 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x180>  // b.plast
 4f0:	cmp	x25, x21
 4f4:	b.hi	5b4 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x1a0>  // b.pmore
 4f8:	ldr	x8, [x19]
 4fc:	add	x3, sp, #0x8
 500:	mov	w0, w24
 504:	mov	x4, x22
 508:	add	x1, x8, x20
 50c:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
 510:	tbz	w0, #0, 570 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x15c>
 514:	ldr	x8, [sp, #8]
 518:	add	x20, x8, x20
 51c:	cbnz	x8, 47c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x68>
 520:	mov	w0, w24
 524:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 528:	ldr	x8, [x19, #16]
 52c:	cmp	x8, x20
 530:	b.cs	564 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x150>  // b.hs, b.nlast
 534:	ldr	x9, [x19, #8]
 538:	cmp	x9, x20
 53c:	b.cs	550 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x13c>  // b.hs, b.nlast
 540:	mov	x0, x19
 544:	mov	x1, x20
 548:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 54c:	ldr	x8, [x19, #16]
 550:	ldr	x9, [x19]
 554:	sub	x2, x20, x8
 558:	mov	w1, wzr
 55c:	add	x0, x9, x8
 560:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 564:	str	x20, [x19, #16]
 568:	mov	w0, #0x1                   	// #1
 56c:	b	57c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x168>
 570:	mov	w0, w24
 574:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 578:	mov	w0, wzr
 57c:	ldp	x20, x19, [sp, #64]
 580:	ldp	x22, x21, [sp, #48]
 584:	ldp	x24, x23, [sp, #32]
 588:	ldp	x30, x25, [sp, #16]
 58c:	add	sp, sp, #0x50
 590:	ret
 594:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 598:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 59c:	add	x0, x0, #0x0
 5a0:	add	x2, x2, #0x0
 5a4:	mov	w1, #0x99                  	// #153
 5a8:	mov	x3, x20
 5ac:	mov	x4, x25
 5b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5b4:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 5b8:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 5bc:	add	x0, x0, #0x0
 5c0:	add	x2, x2, #0x0
 5c4:	mov	w1, #0x9a                  	// #154
 5c8:	mov	x3, x25
 5cc:	mov	x4, x21
 5d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000005d4 <_ZN11__sanitizer16FindPathToBinaryEPKc>:
 5d4:	sub	sp, sp, #0x60
 5d8:	stp	x30, x25, [sp, #32]
 5dc:	stp	x24, x23, [sp, #48]
 5e0:	stp	x22, x21, [sp, #64]
 5e4:	stp	x20, x19, [sp, #80]
 5e8:	mov	x19, x0
 5ec:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 5f0:	tbz	w0, #0, 610 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x3c>
 5f4:	mov	x0, x19
 5f8:	ldp	x20, x19, [sp, #80]
 5fc:	ldp	x22, x21, [sp, #64]
 600:	ldp	x24, x23, [sp, #48]
 604:	ldp	x30, x25, [sp, #32]
 608:	add	sp, sp, #0x60
 60c:	b	0 <_ZN11__sanitizer15internal_strdupEPKc>
 610:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 614:	add	x0, x0, #0x0
 618:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
 61c:	cbz	x0, 750 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x17c>
 620:	mov	x21, x0
 624:	mov	x0, x19
 628:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 62c:	mov	x20, x0
 630:	add	x0, sp, #0x8
 634:	mov	w1, #0x1000                	// #4096
 638:	stp	xzr, xzr, [sp, #16]
 63c:	str	xzr, [sp, #8]
 640:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 644:	ldr	x8, [sp, #24]
 648:	cmp	x8, #0xfff
 64c:	b.hi	684 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xb0>  // b.pmore
 650:	ldr	x9, [sp, #16]
 654:	cmp	x9, #0xfff
 658:	b.hi	66c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x98>  // b.pmore
 65c:	add	x0, sp, #0x8
 660:	mov	w1, #0x1000                	// #4096
 664:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 668:	ldr	x8, [sp, #24]
 66c:	ldr	x9, [sp, #8]
 670:	mov	w10, #0x1000                	// #4096
 674:	sub	x2, x10, x8
 678:	mov	w1, wzr
 67c:	add	x0, x9, x8
 680:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 684:	mov	w8, #0x1000                	// #4096
 688:	add	x24, x20, #0x2
 68c:	mov	w25, #0x2f                  	// #47
 690:	str	x8, [sp, #24]
 694:	b	6a4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xd0>
 698:	ldrb	w8, [x22], #1
 69c:	mov	x21, x22
 6a0:	cbz	w8, 740 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x16c>
 6a4:	mov	w1, #0x3a                  	// #58
 6a8:	mov	x0, x21
 6ac:	bl	0 <_ZN11__sanitizer18internal_strchrnulEPKci>
 6b0:	sub	x23, x0, x21
 6b4:	add	x8, x24, x23
 6b8:	mov	x22, x0
 6bc:	cmp	x8, #0x1, lsl #12
 6c0:	b.hi	698 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xc4>  // b.pmore
 6c4:	ldr	x0, [sp, #8]
 6c8:	mov	x1, x21
 6cc:	mov	x2, x23
 6d0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 6d4:	ldr	x4, [sp, #24]
 6d8:	cmp	x4, x23
 6dc:	b.ls	770 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x19c>  // b.plast
 6e0:	ldr	x8, [sp, #8]
 6e4:	add	x21, x23, #0x1
 6e8:	strb	w25, [x8, x23]
 6ec:	ldr	x4, [sp, #24]
 6f0:	cmp	x4, x21
 6f4:	b.ls	78c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x1b8>  // b.plast
 6f8:	ldr	x8, [sp, #8]
 6fc:	mov	x1, x19
 700:	mov	x2, x20
 704:	add	x0, x8, x21
 708:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 70c:	ldr	x4, [sp, #24]
 710:	add	x3, x21, x20
 714:	cmp	x4, x3
 718:	b.ls	7a8 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x1d4>  // b.plast
 71c:	ldr	x8, [sp, #8]
 720:	strb	wzr, [x8, x3]
 724:	ldr	x0, [sp, #8]
 728:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 72c:	tbz	w0, #0, 698 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xc4>
 730:	ldr	x0, [sp, #8]
 734:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 738:	mov	x19, x0
 73c:	b	744 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x170>
 740:	mov	x19, xzr
 744:	ldp	x0, x1, [sp, #8]
 748:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 74c:	b	754 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x180>
 750:	mov	x19, xzr
 754:	mov	x0, x19
 758:	ldp	x20, x19, [sp, #80]
 75c:	ldp	x22, x21, [sp, #64]
 760:	ldp	x24, x23, [sp, #48]
 764:	ldp	x30, x25, [sp, #32]
 768:	add	sp, sp, #0x60
 76c:	ret
 770:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 774:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 778:	add	x0, x0, #0x0
 77c:	add	x2, x2, #0x0
 780:	mov	w1, #0x1c5                 	// #453
 784:	mov	x3, x23
 788:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 78c:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 790:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 794:	add	x0, x0, #0x0
 798:	add	x2, x2, #0x0
 79c:	mov	w1, #0x1c5                 	// #453
 7a0:	mov	x3, x21
 7a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 7a8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7ac:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7b0:	add	x0, x0, #0x0
 7b4:	add	x2, x2, #0x0
 7b8:	mov	w1, #0x1c5                 	// #453
 7bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000007c0 <__sanitizer_set_report_path>:
 7c0:	adrp	x8, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7c4:	add	x8, x8, #0x0
 7c8:	mov	x1, x0
 7cc:	mov	x0, x8
 7d0:	b	1a4 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc>

00000000000007d4 <__sanitizer_set_report_fd>:
 7d4:	stp	x30, x19, [sp, #-16]!
 7d8:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7dc:	add	x19, x19, #0x0
 7e0:	str	w0, [x19]
 7e4:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 7e8:	str	x0, [x19, #8200]
 7ec:	ldp	x30, x19, [sp], #16
 7f0:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	1c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x1c>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

sanitizer_flags.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>:
       0:	adrp	x9, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
       4:	mov	x10, #0x10000               	// #65536
       8:	add	x9, x9, #0x0
       c:	movk	x10, #0x1, lsl #32
      10:	stp	x9, x10, [x0, #24]
      14:	adrp	x9, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      18:	movi	v0.2d, #0x0
      1c:	stp	q0, q0, [x0, #128]
      20:	ldr	q0, [x9]
      24:	adrp	x11, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      28:	adrp	x10, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      2c:	mov	w9, #0x101                 	// #257
      30:	add	x11, x11, #0x0
      34:	stur	q0, [x0, #72]
      38:	ldr	d0, [x10]
      3c:	adrp	x10, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      40:	strh	w9, [x0, #96]
      44:	mov	w9, #0x1388                	// #5000
      48:	str	x11, [x0, #40]
      4c:	mov	w11, #0x10000               	// #65536
      50:	add	x10, x10, #0x0
      54:	str	w9, [x0, #164]
      58:	mov	w9, #0x100                 	// #256
      5c:	stp	x11, x10, [x0, #104]
      60:	adrp	x10, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      64:	movk	w9, #0x101, lsl #16
      68:	add	x10, x10, #0x0
      6c:	str	w9, [x0, #184]
      70:	adrp	x9, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      74:	str	x10, [x0, #176]
      78:	adrp	x10, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      7c:	str	d0, [x0, #88]
      80:	ldr	q0, [x9]
      84:	mov	w8, #0x1                   	// #1
      88:	add	x10, x10, #0x0
      8c:	mov	x12, #0x10100000000         	// #1103806595072
      90:	strb	w8, [x0]
      94:	strb	w8, [x0, #60]
      98:	strb	w8, [x0, #68]
      9c:	strb	w8, [x0, #98]
      a0:	strh	w8, [x0, #168]
      a4:	strh	w8, [x0, #188]
      a8:	mov	x8, #0x1                   	// #1
      ac:	str	x10, [x0, #200]
      b0:	adrp	x10, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      b4:	movk	x12, #0x1, lsl #48
      b8:	movk	x8, #0x100, lsl #32
      bc:	add	x10, x10, #0x0
      c0:	mov	w9, #0x100                 	// #256
      c4:	str	xzr, [x0, #8]
      c8:	strb	wzr, [x0, #16]
      cc:	strh	wzr, [x0, #48]
      d0:	str	wzr, [x0, #64]
      d4:	stur	x12, [x0, #52]
      d8:	strh	wzr, [x0, #120]
      dc:	strb	wzr, [x0, #122]
      e0:	strb	wzr, [x0, #160]
      e4:	str	wzr, [x0, #192]
      e8:	stp	x8, x10, [x0, #224]
      ec:	str	q0, [x0, #208]
      f0:	str	w9, [x0, #240]
      f4:	ret

00000000000000f8 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>:
      f8:	mov	w2, #0xf8                  	// #248
      fc:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>

0000000000000100 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm>:
     100:	sub	sp, sp, #0x80
     104:	stp	x29, x30, [sp, #32]
     108:	stp	x28, x27, [sp, #48]
     10c:	stp	x26, x25, [sp, #64]
     110:	stp	x24, x23, [sp, #80]
     114:	stp	x22, x21, [sp, #96]
     118:	stp	x20, x19, [sp, #112]
     11c:	add	x8, x1, x2
     120:	sub	x21, x8, #0x1
     124:	cmp	x21, x1
     128:	mov	x20, x1
     12c:	cset	w9, hi  // hi = pmore
     130:	b.ls	36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>  // b.plast
     134:	ldrb	w8, [x0]
     138:	mov	x19, x0
     13c:	cbz	w8, 36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>
     140:	add	x9, x2, x20
     144:	mov	x22, sp
     148:	mov	w23, #0x6667                	// #26215
     14c:	movk	w23, #0x6666, lsl #16
     150:	mov	w24, #0xa                   	// #10
     154:	mov	x25, #0xfffffffffffffffe    	// #-2
     158:	sub	x26, x9, #0x3
     15c:	add	x27, x22, #0x30
     160:	add	x28, x22, #0x20
     164:	mov	w29, #0x25                  	// #37
     168:	b	188 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x88>
     16c:	strb	w8, [x20], #1
     170:	mov	x19, x9
     174:	cmp	x20, x21
     178:	cset	w9, cc  // cc = lo, ul, last
     17c:	b.cs	36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>  // b.hs, b.nlast
     180:	ldrb	w8, [x19]
     184:	cbz	w8, 36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>
     188:	and	w9, w8, #0xff
     18c:	cmp	w9, #0x25
     190:	add	x9, x19, #0x1
     194:	b.ne	16c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x6c>  // b.any
     198:	ldrb	w8, [x9]
     19c:	cmp	w8, #0x70
     1a0:	b.eq	1f0 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xf0>  // b.none
     1a4:	cmp	w8, #0x62
     1a8:	b.ne	33c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x23c>  // b.any
     1ac:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
     1b0:	cbz	x0, 394 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x294>
     1b4:	cmp	x20, x21
     1b8:	b.cs	1dc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xdc>  // b.hs, b.nlast
     1bc:	ldrb	w9, [x0]
     1c0:	cbz	w9, 1dc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xdc>
     1c4:	add	x8, x0, #0x1
     1c8:	strb	w9, [x20], #1
     1cc:	ldrb	w9, [x8], #1
     1d0:	cmp	x20, x21
     1d4:	b.cs	1dc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xdc>  // b.hs, b.nlast
     1d8:	cbnz	w9, 1c8 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xc8>
     1dc:	add	x19, x19, #0x2
     1e0:	cmp	x20, x21
     1e4:	cset	w9, cc  // cc = lo, ul, last
     1e8:	b.cc	180 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x80>  // b.lo, b.ul, b.last
     1ec:	b	36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>
     1f0:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     1f4:	mov	x13, xzr
     1f8:	mov	x11, #0xfffffffffffffffe    	// #-2
     1fc:	mov	x8, x27
     200:	mov	x9, x8
     204:	smull	x8, w0, w23
     208:	add	w14, w0, #0x9
     20c:	cmp	w14, #0x12
     210:	lsr	x14, x8, #63
     214:	asr	x8, x8, #34
     218:	add	w15, w8, w14
     21c:	mov	x12, x13
     220:	msub	w8, w15, w24, w0
     224:	sub	x13, x13, #0x1
     228:	add	x10, x22, x12
     22c:	add	x11, x11, #0x1
     230:	add	w14, w8, #0x30
     234:	sub	x8, x9, #0x1
     238:	mov	w0, w15
     23c:	strb	w14, [x10, #31]
     240:	b.hi	200 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x100>  // b.pmore
     244:	add	x10, x13, #0x1
     248:	cmp	x10, #0x0
     24c:	b.gt	354 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x254>
     250:	cmp	x20, x21
     254:	b.cs	354 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x254>  // b.hs, b.nlast
     258:	mov	x8, x20
     25c:	strb	w14, [x8], #1
     260:	tbz	x10, #63, 358 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x258>
     264:	cmp	x8, x21
     268:	b.cs	358 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x258>  // b.hs, b.nlast
     26c:	sub	x15, x26, x20
     270:	sub	x16, x25, x13
     274:	cmp	x15, x16
     278:	csel	x14, x15, x16, cc  // cc = lo, ul, last
     27c:	add	x14, x14, #0x1
     280:	cmp	x14, #0x20
     284:	b.cc	31c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x21c>  // b.lo, b.ul, b.last
     288:	cmp	x15, x16
     28c:	csel	x16, x15, x16, cc  // cc = lo, ul, last
     290:	cmp	x15, x11
     294:	csel	x17, x15, x11, cc  // cc = lo, ul, last
     298:	add	x17, x22, x17
     29c:	add	x17, x17, x13
     2a0:	add	x17, x17, #0x22
     2a4:	cmp	x8, x17
     2a8:	b.cs	2c4 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x1c4>  // b.hs, b.nlast
     2ac:	add	x16, x20, x16
     2b0:	add	x17, x22, x13
     2b4:	add	x16, x16, #0x2
     2b8:	add	x17, x17, #0x21
     2bc:	cmp	x17, x16
     2c0:	b.cc	31c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x21c>  // b.lo, b.ul, b.last
     2c4:	cmp	x15, x11
     2c8:	mvn	x10, x12
     2cc:	csel	x11, x15, x11, cc  // cc = lo, ul, last
     2d0:	cmp	x15, x10
     2d4:	add	x10, x11, #0x1
     2d8:	csinv	x11, x15, x12, cc  // cc = lo, ul, last
     2dc:	and	x10, x10, #0xffffffffffffffe0
     2e0:	and	x16, x14, #0xffffffffffffffe0
     2e4:	add	x11, x11, #0x1
     2e8:	add	x10, x10, x13
     2ec:	add	x17, x20, #0x11
     2f0:	add	x8, x8, x16
     2f4:	add	x10, x10, #0x1
     2f8:	and	x11, x11, #0xffffffffffffffe0
     2fc:	ldp	q0, q1, [x9, #-16]
     300:	add	x9, x9, #0x20
     304:	subs	x11, x11, #0x20
     308:	stp	q0, q1, [x17, #-16]
     30c:	add	x17, x17, #0x20
     310:	b.ne	2fc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x1fc>  // b.any
     314:	cmp	x14, x16
     318:	b.eq	358 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x258>  // b.none
     31c:	ldrb	w9, [x28, x10]
     320:	cmn	x10, #0x2
     324:	strb	w9, [x8], #1
     328:	b.gt	358 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x258>
     32c:	cmp	x8, x21
     330:	add	x10, x10, #0x1
     334:	b.cc	31c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x21c>  // b.lo, b.ul, b.last
     338:	b	358 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x258>
     33c:	strb	w29, [x20], #1
     340:	mov	x19, x9
     344:	cmp	x20, x21
     348:	cset	w9, cc  // cc = lo, ul, last
     34c:	b.cc	180 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x80>  // b.lo, b.ul, b.last
     350:	b	36c <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x26c>
     354:	mov	x8, x20
     358:	add	x19, x19, #0x2
     35c:	mov	x20, x8
     360:	cmp	x20, x21
     364:	cset	w9, cc  // cc = lo, ul, last
     368:	b.cc	180 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x80>  // b.lo, b.ul, b.last
     36c:	tbz	w9, #0, 3ac <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x2ac>
     370:	strb	wzr, [x20]
     374:	ldp	x20, x19, [sp, #112]
     378:	ldp	x22, x21, [sp, #96]
     37c:	ldp	x24, x23, [sp, #80]
     380:	ldp	x26, x25, [sp, #64]
     384:	ldp	x28, x27, [sp, #48]
     388:	ldp	x29, x30, [sp, #32]
     38c:	add	sp, sp, #0x80
     390:	ret
     394:	adrp	x0, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     398:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     39c:	add	x0, x0, #0x0
     3a0:	add	x2, x2, #0x0
     3a4:	mov	w1, #0x2f                  	// #47
     3a8:	b	3c0 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x2c0>
     3ac:	adrp	x0, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3b0:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3b4:	add	x0, x0, #0x0
     3b8:	add	x2, x2, #0x0
     3bc:	mov	w1, #0x47                  	// #71
     3c0:	mov	x3, xzr
     3c4:	mov	x4, xzr
     3c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000003cc <_ZN11__sanitizer20RegisterIncludeFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>:
     3cc:	str	x30, [sp, #-48]!
     3d0:	stp	x22, x21, [sp, #16]
     3d4:	stp	x20, x19, [sp, #32]
     3d8:	adrp	x20, 0 <_ZN11__sanitizer10FlagParser5AllocE>
     3dc:	ldr	x20, [x20]
     3e0:	mov	x19, x0
     3e4:	mov	w1, #0x20                  	// #32
     3e8:	mov	x0, x20
     3ec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     3f0:	adrp	x21, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3f4:	adrp	x22, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3f8:	add	x21, x21, #0x0
     3fc:	add	x22, x22, #0x0
     400:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     404:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     408:	mov	x2, x0
     40c:	strb	wzr, [x0, #16]
     410:	stp	x21, x19, [x0]
     414:	str	x22, [x0, #24]
     418:	add	x1, x1, #0x0
     41c:	add	x3, x3, #0x0
     420:	mov	x0, x19
     424:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     428:	mov	w1, #0x20                  	// #32
     42c:	mov	x0, x20
     430:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     434:	mov	w8, #0x1                   	// #1
     438:	stp	x21, x19, [x0]
     43c:	strb	w8, [x0, #16]
     440:	str	x22, [x0, #24]
     444:	mov	x2, x0
     448:	mov	x0, x19
     44c:	ldp	x20, x19, [sp, #32]
     450:	ldp	x22, x21, [sp, #16]
     454:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     458:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     45c:	add	x1, x1, #0x0
     460:	add	x3, x3, #0x0
     464:	ldr	x30, [sp], #48
     468:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>

000000000000046c <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>:
     46c:	str	x30, [sp, #-80]!
     470:	stp	x26, x25, [sp, #16]
     474:	stp	x24, x23, [sp, #32]
     478:	stp	x22, x21, [sp, #48]
     47c:	stp	x20, x19, [sp, #64]
     480:	adrp	x20, 0 <_ZN11__sanitizer10FlagParser5AllocE>
     484:	ldr	x20, [x20]
     488:	mov	x21, x1
     48c:	mov	x19, x0
     490:	mov	w1, #0x10                  	// #16
     494:	mov	x0, x20
     498:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     49c:	adrp	x22, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4a0:	add	x22, x22, #0x0
     4a4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4a8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4ac:	mov	x2, x0
     4b0:	stp	x22, x21, [x0]
     4b4:	add	x1, x1, #0x0
     4b8:	add	x3, x3, #0x0
     4bc:	mov	x0, x19
     4c0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     4c4:	mov	w1, #0x10                  	// #16
     4c8:	mov	x0, x20
     4cc:	add	x24, x21, #0x8
     4d0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     4d4:	adrp	x23, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4d8:	add	x23, x23, #0x0
     4dc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4e0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4e4:	mov	x2, x0
     4e8:	stp	x23, x24, [x0]
     4ec:	add	x1, x1, #0x0
     4f0:	add	x3, x3, #0x0
     4f4:	mov	x0, x19
     4f8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     4fc:	mov	w1, #0x10                  	// #16
     500:	mov	x0, x20
     504:	add	x24, x21, #0x10
     508:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     50c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     510:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     514:	mov	x2, x0
     518:	stp	x22, x24, [x0]
     51c:	add	x1, x1, #0x0
     520:	add	x3, x3, #0x0
     524:	mov	x0, x19
     528:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     52c:	mov	w1, #0x10                  	// #16
     530:	mov	x0, x20
     534:	add	x24, x21, #0x18
     538:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     53c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     540:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     544:	mov	x2, x0
     548:	stp	x23, x24, [x0]
     54c:	add	x1, x1, #0x0
     550:	add	x3, x3, #0x0
     554:	mov	x0, x19
     558:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     55c:	mov	w1, #0x10                  	// #16
     560:	mov	x0, x20
     564:	add	x24, x21, #0x20
     568:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     56c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     570:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     574:	mov	x2, x0
     578:	stp	x22, x24, [x0]
     57c:	add	x1, x1, #0x0
     580:	add	x3, x3, #0x0
     584:	mov	x0, x19
     588:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     58c:	mov	w1, #0x10                  	// #16
     590:	mov	x0, x20
     594:	add	x24, x21, #0x21
     598:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     59c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5a0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5a4:	mov	x2, x0
     5a8:	stp	x22, x24, [x0]
     5ac:	add	x1, x1, #0x0
     5b0:	add	x3, x3, #0x0
     5b4:	mov	x0, x19
     5b8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     5bc:	mov	w1, #0x10                  	// #16
     5c0:	mov	x0, x20
     5c4:	add	x24, x21, #0x22
     5c8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     5cc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5d0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5d4:	mov	x2, x0
     5d8:	stp	x22, x24, [x0]
     5dc:	add	x1, x1, #0x0
     5e0:	add	x3, x3, #0x0
     5e4:	mov	x0, x19
     5e8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     5ec:	mov	w1, #0x10                  	// #16
     5f0:	mov	x0, x20
     5f4:	add	x24, x21, #0x23
     5f8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     5fc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     600:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     604:	mov	x2, x0
     608:	stp	x22, x24, [x0]
     60c:	add	x1, x1, #0x0
     610:	add	x3, x3, #0x0
     614:	mov	x0, x19
     618:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     61c:	mov	w1, #0x10                  	// #16
     620:	mov	x0, x20
     624:	add	x25, x21, #0x24
     628:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     62c:	adrp	x24, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     630:	add	x24, x24, #0x0
     634:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     638:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     63c:	mov	x2, x0
     640:	stp	x24, x25, [x0]
     644:	add	x1, x1, #0x0
     648:	add	x3, x3, #0x0
     64c:	mov	x0, x19
     650:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     654:	mov	w1, #0x10                  	// #16
     658:	mov	x0, x20
     65c:	add	x25, x21, #0x28
     660:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     664:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     668:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     66c:	mov	x2, x0
     670:	stp	x23, x25, [x0]
     674:	add	x1, x1, #0x0
     678:	add	x3, x3, #0x0
     67c:	mov	x0, x19
     680:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     684:	mov	w1, #0x10                  	// #16
     688:	mov	x0, x20
     68c:	add	x25, x21, #0x30
     690:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     694:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     698:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     69c:	mov	x2, x0
     6a0:	stp	x22, x25, [x0]
     6a4:	add	x1, x1, #0x0
     6a8:	add	x3, x3, #0x0
     6ac:	mov	x0, x19
     6b0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     6b4:	mov	w1, #0x10                  	// #16
     6b8:	mov	x0, x20
     6bc:	add	x25, x21, #0x31
     6c0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     6c4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6c8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6cc:	mov	x2, x0
     6d0:	stp	x22, x25, [x0]
     6d4:	add	x1, x1, #0x0
     6d8:	add	x3, x3, #0x0
     6dc:	mov	x0, x19
     6e0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     6e4:	mov	w1, #0x10                  	// #16
     6e8:	mov	x0, x20
     6ec:	add	x25, x21, #0x34
     6f0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     6f4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6f8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6fc:	mov	x2, x0
     700:	stp	x24, x25, [x0]
     704:	add	x1, x1, #0x0
     708:	add	x3, x3, #0x0
     70c:	mov	x0, x19
     710:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     714:	mov	w1, #0x10                  	// #16
     718:	mov	x0, x20
     71c:	add	x25, x21, #0x38
     720:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     724:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     728:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     72c:	mov	x2, x0
     730:	stp	x22, x25, [x0]
     734:	add	x1, x1, #0x0
     738:	add	x3, x3, #0x0
     73c:	mov	x0, x19
     740:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     744:	mov	w1, #0x10                  	// #16
     748:	mov	x0, x20
     74c:	add	x25, x21, #0x39
     750:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     754:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     758:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     75c:	mov	x2, x0
     760:	stp	x22, x25, [x0]
     764:	add	x1, x1, #0x0
     768:	add	x3, x3, #0x0
     76c:	mov	x0, x19
     770:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     774:	mov	w1, #0x10                  	// #16
     778:	mov	x0, x20
     77c:	add	x25, x21, #0x3a
     780:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     784:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     788:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     78c:	mov	x2, x0
     790:	stp	x22, x25, [x0]
     794:	add	x1, x1, #0x0
     798:	add	x3, x3, #0x0
     79c:	mov	x0, x19
     7a0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     7a4:	mov	w1, #0x10                  	// #16
     7a8:	mov	x0, x20
     7ac:	add	x25, x21, #0x3b
     7b0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     7b4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7b8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7bc:	mov	x2, x0
     7c0:	stp	x22, x25, [x0]
     7c4:	add	x1, x1, #0x0
     7c8:	add	x3, x3, #0x0
     7cc:	mov	x0, x19
     7d0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     7d4:	mov	w1, #0x10                  	// #16
     7d8:	mov	x0, x20
     7dc:	add	x25, x21, #0x3c
     7e0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     7e4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7e8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7ec:	mov	x2, x0
     7f0:	stp	x22, x25, [x0]
     7f4:	add	x1, x1, #0x0
     7f8:	add	x3, x3, #0x0
     7fc:	mov	x0, x19
     800:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     804:	mov	w1, #0x10                  	// #16
     808:	mov	x0, x20
     80c:	add	x25, x21, #0x40
     810:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     814:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     818:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     81c:	mov	x2, x0
     820:	stp	x24, x25, [x0]
     824:	add	x1, x1, #0x0
     828:	add	x3, x3, #0x0
     82c:	mov	x0, x19
     830:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     834:	mov	w1, #0x10                  	// #16
     838:	mov	x0, x20
     83c:	add	x25, x21, #0x44
     840:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     844:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     848:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     84c:	mov	x2, x0
     850:	stp	x22, x25, [x0]
     854:	add	x1, x1, #0x0
     858:	add	x3, x3, #0x0
     85c:	mov	x0, x19
     860:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     864:	mov	w1, #0x10                  	// #16
     868:	mov	x0, x20
     86c:	add	x26, x21, #0x48
     870:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     874:	adrp	x25, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     878:	add	x25, x25, #0x0
     87c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     880:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     884:	mov	x2, x0
     888:	stp	x25, x26, [x0]
     88c:	add	x1, x1, #0x0
     890:	add	x3, x3, #0x0
     894:	mov	x0, x19
     898:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     89c:	mov	w1, #0x10                  	// #16
     8a0:	mov	x0, x20
     8a4:	add	x26, x21, #0x4c
     8a8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     8ac:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8b0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8b4:	mov	x2, x0
     8b8:	stp	x25, x26, [x0]
     8bc:	add	x1, x1, #0x0
     8c0:	add	x3, x3, #0x0
     8c4:	mov	x0, x19
     8c8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     8cc:	mov	w1, #0x10                  	// #16
     8d0:	mov	x0, x20
     8d4:	add	x26, x21, #0x50
     8d8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     8dc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8e0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8e4:	mov	x2, x0
     8e8:	stp	x25, x26, [x0]
     8ec:	add	x1, x1, #0x0
     8f0:	add	x3, x3, #0x0
     8f4:	mov	x0, x19
     8f8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     8fc:	mov	w1, #0x10                  	// #16
     900:	mov	x0, x20
     904:	add	x26, x21, #0x54
     908:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     90c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     910:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     914:	mov	x2, x0
     918:	stp	x25, x26, [x0]
     91c:	add	x1, x1, #0x0
     920:	add	x3, x3, #0x0
     924:	mov	x0, x19
     928:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     92c:	mov	w1, #0x10                  	// #16
     930:	mov	x0, x20
     934:	add	x26, x21, #0x58
     938:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     93c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     940:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     944:	mov	x2, x0
     948:	stp	x25, x26, [x0]
     94c:	add	x1, x1, #0x0
     950:	add	x3, x3, #0x0
     954:	mov	x0, x19
     958:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     95c:	mov	w1, #0x10                  	// #16
     960:	mov	x0, x20
     964:	add	x26, x21, #0x5c
     968:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     96c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     970:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     974:	mov	x2, x0
     978:	stp	x25, x26, [x0]
     97c:	add	x1, x1, #0x0
     980:	add	x3, x3, #0x0
     984:	mov	x0, x19
     988:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     98c:	mov	w1, #0x10                  	// #16
     990:	mov	x0, x20
     994:	add	x25, x21, #0x60
     998:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     99c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9a0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9a4:	mov	x2, x0
     9a8:	stp	x22, x25, [x0]
     9ac:	add	x1, x1, #0x0
     9b0:	add	x3, x3, #0x0
     9b4:	mov	x0, x19
     9b8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     9bc:	mov	w1, #0x10                  	// #16
     9c0:	mov	x0, x20
     9c4:	add	x25, x21, #0x61
     9c8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9cc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9d0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9d4:	mov	x2, x0
     9d8:	stp	x22, x25, [x0]
     9dc:	add	x1, x1, #0x0
     9e0:	add	x3, x3, #0x0
     9e4:	mov	x0, x19
     9e8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     9ec:	mov	w1, #0x10                  	// #16
     9f0:	mov	x0, x20
     9f4:	add	x25, x21, #0x62
     9f8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9fc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a00:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a04:	mov	x2, x0
     a08:	stp	x22, x25, [x0]
     a0c:	add	x1, x1, #0x0
     a10:	add	x3, x3, #0x0
     a14:	mov	x0, x19
     a18:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a1c:	mov	w1, #0x10                  	// #16
     a20:	mov	x0, x20
     a24:	add	x26, x21, #0x68
     a28:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a2c:	adrp	x25, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a30:	add	x25, x25, #0x0
     a34:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a38:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a3c:	mov	x2, x0
     a40:	stp	x25, x26, [x0]
     a44:	add	x1, x1, #0x0
     a48:	add	x3, x3, #0x0
     a4c:	mov	x0, x19
     a50:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a54:	mov	w1, #0x10                  	// #16
     a58:	mov	x0, x20
     a5c:	add	x26, x21, #0x70
     a60:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a64:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a68:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a6c:	mov	x2, x0
     a70:	stp	x23, x26, [x0]
     a74:	add	x1, x1, #0x0
     a78:	add	x3, x3, #0x0
     a7c:	mov	x0, x19
     a80:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a84:	mov	w1, #0x10                  	// #16
     a88:	mov	x0, x20
     a8c:	add	x26, x21, #0x78
     a90:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a94:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a98:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a9c:	mov	x2, x0
     aa0:	stp	x22, x26, [x0]
     aa4:	add	x1, x1, #0x0
     aa8:	add	x3, x3, #0x0
     aac:	mov	x0, x19
     ab0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ab4:	mov	w1, #0x10                  	// #16
     ab8:	mov	x0, x20
     abc:	add	x26, x21, #0x79
     ac0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ac4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ac8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     acc:	mov	x2, x0
     ad0:	stp	x22, x26, [x0]
     ad4:	add	x1, x1, #0x0
     ad8:	add	x3, x3, #0x0
     adc:	mov	x0, x19
     ae0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ae4:	mov	w1, #0x10                  	// #16
     ae8:	mov	x0, x20
     aec:	add	x26, x21, #0x7a
     af0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     af4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     af8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     afc:	mov	x2, x0
     b00:	stp	x22, x26, [x0]
     b04:	add	x1, x1, #0x0
     b08:	add	x3, x3, #0x0
     b0c:	mov	x0, x19
     b10:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b14:	mov	w1, #0x10                  	// #16
     b18:	mov	x0, x20
     b1c:	add	x26, x21, #0x80
     b20:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b24:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b28:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b2c:	mov	x2, x0
     b30:	stp	x25, x26, [x0]
     b34:	add	x1, x1, #0x0
     b38:	add	x3, x3, #0x0
     b3c:	mov	x0, x19
     b40:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b44:	mov	w1, #0x10                  	// #16
     b48:	mov	x0, x20
     b4c:	add	x26, x21, #0x88
     b50:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b54:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b58:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b5c:	mov	x2, x0
     b60:	stp	x25, x26, [x0]
     b64:	add	x1, x1, #0x0
     b68:	add	x3, x3, #0x0
     b6c:	mov	x0, x19
     b70:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b74:	mov	w1, #0x10                  	// #16
     b78:	mov	x0, x20
     b7c:	add	x26, x21, #0x90
     b80:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b84:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b88:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b8c:	mov	x2, x0
     b90:	stp	x25, x26, [x0]
     b94:	add	x1, x1, #0x0
     b98:	add	x3, x3, #0x0
     b9c:	mov	x0, x19
     ba0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ba4:	mov	w1, #0x10                  	// #16
     ba8:	mov	x0, x20
     bac:	add	x26, x21, #0x98
     bb0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     bb4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bb8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bbc:	mov	x2, x0
     bc0:	stp	x25, x26, [x0]
     bc4:	add	x1, x1, #0x0
     bc8:	add	x3, x3, #0x0
     bcc:	mov	x0, x19
     bd0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     bd4:	mov	w1, #0x10                  	// #16
     bd8:	mov	x0, x20
     bdc:	add	x25, x21, #0xa0
     be0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     be4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     be8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bec:	mov	x2, x0
     bf0:	stp	x22, x25, [x0]
     bf4:	add	x1, x1, #0x0
     bf8:	add	x3, x3, #0x0
     bfc:	mov	x0, x19
     c00:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c04:	mov	w1, #0x10                  	// #16
     c08:	mov	x0, x20
     c0c:	add	x25, x21, #0xa4
     c10:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c14:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c18:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c1c:	mov	x2, x0
     c20:	stp	x24, x25, [x0]
     c24:	add	x1, x1, #0x0
     c28:	add	x3, x3, #0x0
     c2c:	mov	x0, x19
     c30:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c34:	mov	w1, #0x10                  	// #16
     c38:	mov	x0, x20
     c3c:	add	x25, x21, #0xa8
     c40:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c44:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c48:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c4c:	mov	x2, x0
     c50:	stp	x22, x25, [x0]
     c54:	add	x1, x1, #0x0
     c58:	add	x3, x3, #0x0
     c5c:	mov	x0, x19
     c60:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c64:	mov	w1, #0x10                  	// #16
     c68:	mov	x0, x20
     c6c:	add	x25, x21, #0xa9
     c70:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c74:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c78:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c7c:	mov	x2, x0
     c80:	stp	x22, x25, [x0]
     c84:	add	x1, x1, #0x0
     c88:	add	x3, x3, #0x0
     c8c:	mov	x0, x19
     c90:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c94:	mov	w1, #0x10                  	// #16
     c98:	mov	x0, x20
     c9c:	add	x25, x21, #0xb0
     ca0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ca4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ca8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cac:	mov	x2, x0
     cb0:	stp	x23, x25, [x0]
     cb4:	add	x1, x1, #0x0
     cb8:	add	x3, x3, #0x0
     cbc:	mov	x0, x19
     cc0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     cc4:	mov	w1, #0x10                  	// #16
     cc8:	mov	x0, x20
     ccc:	add	x25, x21, #0xb8
     cd0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     cd4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cd8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cdc:	mov	x2, x0
     ce0:	stp	x22, x25, [x0]
     ce4:	add	x1, x1, #0x0
     ce8:	add	x3, x3, #0x0
     cec:	mov	x0, x19
     cf0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     cf4:	mov	w1, #0x10                  	// #16
     cf8:	mov	x0, x20
     cfc:	add	x25, x21, #0xb9
     d00:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d04:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d08:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d0c:	mov	x2, x0
     d10:	stp	x22, x25, [x0]
     d14:	add	x1, x1, #0x0
     d18:	add	x3, x3, #0x0
     d1c:	mov	x0, x19
     d20:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d24:	mov	w1, #0x10                  	// #16
     d28:	mov	x0, x20
     d2c:	add	x25, x21, #0xba
     d30:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d34:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d38:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d3c:	mov	x2, x0
     d40:	stp	x22, x25, [x0]
     d44:	add	x1, x1, #0x0
     d48:	add	x3, x3, #0x0
     d4c:	mov	x0, x19
     d50:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d54:	mov	w1, #0x10                  	// #16
     d58:	mov	x0, x20
     d5c:	add	x25, x21, #0xbb
     d60:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d64:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d68:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d6c:	mov	x2, x0
     d70:	stp	x22, x25, [x0]
     d74:	add	x1, x1, #0x0
     d78:	add	x3, x3, #0x0
     d7c:	mov	x0, x19
     d80:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d84:	mov	w1, #0x10                  	// #16
     d88:	mov	x0, x20
     d8c:	add	x25, x21, #0xbc
     d90:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d94:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d98:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d9c:	mov	x2, x0
     da0:	stp	x22, x25, [x0]
     da4:	add	x1, x1, #0x0
     da8:	add	x3, x3, #0x0
     dac:	mov	x0, x19
     db0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     db4:	mov	w1, #0x10                  	// #16
     db8:	mov	x0, x20
     dbc:	add	x25, x21, #0xbd
     dc0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     dc4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dc8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dcc:	mov	x2, x0
     dd0:	stp	x22, x25, [x0]
     dd4:	add	x1, x1, #0x0
     dd8:	add	x3, x3, #0x0
     ddc:	mov	x0, x19
     de0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     de4:	mov	w1, #0x10                  	// #16
     de8:	mov	x0, x20
     dec:	add	x25, x21, #0xc0
     df0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     df4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     df8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dfc:	mov	x2, x0
     e00:	stp	x24, x25, [x0]
     e04:	add	x1, x1, #0x0
     e08:	add	x3, x3, #0x0
     e0c:	mov	x0, x19
     e10:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e14:	mov	w1, #0x10                  	// #16
     e18:	mov	x0, x20
     e1c:	add	x25, x21, #0xc8
     e20:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e24:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e28:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e2c:	mov	x2, x0
     e30:	stp	x23, x25, [x0]
     e34:	add	x1, x1, #0x0
     e38:	add	x3, x3, #0x0
     e3c:	mov	x0, x19
     e40:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e44:	mov	w1, #0x10                  	// #16
     e48:	mov	x0, x20
     e4c:	add	x25, x21, #0xd0
     e50:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e54:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e58:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e5c:	mov	x2, x0
     e60:	stp	x22, x25, [x0]
     e64:	add	x1, x1, #0x0
     e68:	add	x3, x3, #0x0
     e6c:	mov	x0, x19
     e70:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e74:	mov	w1, #0x10                  	// #16
     e78:	mov	x0, x20
     e7c:	add	x25, x21, #0xd1
     e80:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e84:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e88:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e8c:	mov	x2, x0
     e90:	stp	x22, x25, [x0]
     e94:	add	x1, x1, #0x0
     e98:	add	x3, x3, #0x0
     e9c:	mov	x0, x19
     ea0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ea4:	mov	w1, #0x10                  	// #16
     ea8:	mov	x0, x20
     eac:	add	x25, x21, #0xd2
     eb0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     eb4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     eb8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ebc:	mov	x2, x0
     ec0:	stp	x22, x25, [x0]
     ec4:	add	x1, x1, #0x0
     ec8:	add	x3, x3, #0x0
     ecc:	mov	x0, x19
     ed0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ed4:	mov	w1, #0x10                  	// #16
     ed8:	mov	x0, x20
     edc:	add	x25, x21, #0xd3
     ee0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ee4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ee8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     eec:	mov	x2, x0
     ef0:	stp	x22, x25, [x0]
     ef4:	add	x1, x1, #0x0
     ef8:	add	x3, x3, #0x0
     efc:	mov	x0, x19
     f00:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f04:	mov	w1, #0x10                  	// #16
     f08:	mov	x0, x20
     f0c:	add	x25, x21, #0xd4
     f10:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f14:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f18:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f1c:	mov	x2, x0
     f20:	stp	x22, x25, [x0]
     f24:	add	x1, x1, #0x0
     f28:	add	x3, x3, #0x0
     f2c:	mov	x0, x19
     f30:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f34:	mov	w1, #0x10                  	// #16
     f38:	mov	x0, x20
     f3c:	add	x25, x21, #0xd5
     f40:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f44:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f48:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f4c:	mov	x2, x0
     f50:	stp	x22, x25, [x0]
     f54:	add	x1, x1, #0x0
     f58:	add	x3, x3, #0x0
     f5c:	mov	x0, x19
     f60:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f64:	mov	w1, #0x10                  	// #16
     f68:	mov	x0, x20
     f6c:	add	x25, x21, #0xd6
     f70:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f74:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f78:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f7c:	mov	x2, x0
     f80:	stp	x22, x25, [x0]
     f84:	add	x1, x1, #0x0
     f88:	add	x3, x3, #0x0
     f8c:	mov	x0, x19
     f90:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f94:	mov	w1, #0x10                  	// #16
     f98:	mov	x0, x20
     f9c:	add	x25, x21, #0xd7
     fa0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     fa4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fa8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fac:	mov	x2, x0
     fb0:	stp	x22, x25, [x0]
     fb4:	add	x1, x1, #0x0
     fb8:	add	x3, x3, #0x0
     fbc:	mov	x0, x19
     fc0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     fc4:	mov	w1, #0x10                  	// #16
     fc8:	mov	x0, x20
     fcc:	add	x25, x21, #0xd8
     fd0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     fd4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fd8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fdc:	mov	x2, x0
     fe0:	stp	x22, x25, [x0]
     fe4:	add	x1, x1, #0x0
     fe8:	add	x3, x3, #0x0
     fec:	mov	x0, x19
     ff0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ff4:	mov	w1, #0x10                  	// #16
     ff8:	mov	x0, x20
     ffc:	add	x25, x21, #0xd9
    1000:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1004:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1008:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    100c:	mov	x2, x0
    1010:	stp	x22, x25, [x0]
    1014:	add	x1, x1, #0x0
    1018:	add	x3, x3, #0x0
    101c:	mov	x0, x19
    1020:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1024:	mov	w1, #0x10                  	// #16
    1028:	mov	x0, x20
    102c:	add	x25, x21, #0xda
    1030:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1034:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1038:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    103c:	mov	x2, x0
    1040:	stp	x22, x25, [x0]
    1044:	add	x1, x1, #0x0
    1048:	add	x3, x3, #0x0
    104c:	mov	x0, x19
    1050:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1054:	mov	w1, #0x10                  	// #16
    1058:	mov	x0, x20
    105c:	add	x25, x21, #0xdb
    1060:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1064:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1068:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    106c:	mov	x2, x0
    1070:	stp	x22, x25, [x0]
    1074:	add	x1, x1, #0x0
    1078:	add	x3, x3, #0x0
    107c:	mov	x0, x19
    1080:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1084:	mov	w1, #0x10                  	// #16
    1088:	mov	x0, x20
    108c:	add	x25, x21, #0xdc
    1090:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1094:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1098:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    109c:	mov	x2, x0
    10a0:	stp	x22, x25, [x0]
    10a4:	add	x1, x1, #0x0
    10a8:	add	x3, x3, #0x0
    10ac:	mov	x0, x19
    10b0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    10b4:	mov	w1, #0x10                  	// #16
    10b8:	mov	x0, x20
    10bc:	add	x25, x21, #0xdd
    10c0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    10c4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10c8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10cc:	mov	x2, x0
    10d0:	stp	x22, x25, [x0]
    10d4:	add	x1, x1, #0x0
    10d8:	add	x3, x3, #0x0
    10dc:	mov	x0, x19
    10e0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    10e4:	mov	w1, #0x10                  	// #16
    10e8:	mov	x0, x20
    10ec:	add	x25, x21, #0xde
    10f0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    10f4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10f8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10fc:	mov	x2, x0
    1100:	stp	x22, x25, [x0]
    1104:	add	x1, x1, #0x0
    1108:	add	x3, x3, #0x0
    110c:	mov	x0, x19
    1110:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1114:	mov	w1, #0x10                  	// #16
    1118:	mov	x0, x20
    111c:	add	x25, x21, #0xdf
    1120:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1124:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1128:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    112c:	mov	x2, x0
    1130:	stp	x22, x25, [x0]
    1134:	add	x1, x1, #0x0
    1138:	add	x3, x3, #0x0
    113c:	mov	x0, x19
    1140:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1144:	mov	w1, #0x10                  	// #16
    1148:	mov	x0, x20
    114c:	add	x25, x21, #0xe0
    1150:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1154:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1158:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    115c:	mov	x2, x0
    1160:	stp	x24, x25, [x0]
    1164:	add	x1, x1, #0x0
    1168:	add	x3, x3, #0x0
    116c:	mov	x0, x19
    1170:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1174:	mov	w1, #0x10                  	// #16
    1178:	mov	x0, x20
    117c:	add	x24, x21, #0xe4
    1180:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1184:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1188:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    118c:	mov	x2, x0
    1190:	stp	x22, x24, [x0]
    1194:	add	x1, x1, #0x0
    1198:	add	x3, x3, #0x0
    119c:	mov	x0, x19
    11a0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    11a4:	mov	w1, #0x10                  	// #16
    11a8:	mov	x0, x20
    11ac:	add	x24, x21, #0xe5
    11b0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    11b4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11b8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11bc:	mov	x2, x0
    11c0:	stp	x22, x24, [x0]
    11c4:	add	x1, x1, #0x0
    11c8:	add	x3, x3, #0x0
    11cc:	mov	x0, x19
    11d0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    11d4:	mov	w1, #0x10                  	// #16
    11d8:	mov	x0, x20
    11dc:	add	x24, x21, #0xe6
    11e0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    11e4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11e8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11ec:	mov	x2, x0
    11f0:	stp	x22, x24, [x0]
    11f4:	add	x1, x1, #0x0
    11f8:	add	x3, x3, #0x0
    11fc:	mov	x0, x19
    1200:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1204:	mov	w1, #0x10                  	// #16
    1208:	mov	x0, x20
    120c:	add	x24, x21, #0xe7
    1210:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1214:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1218:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    121c:	mov	x2, x0
    1220:	stp	x22, x24, [x0]
    1224:	add	x1, x1, #0x0
    1228:	add	x3, x3, #0x0
    122c:	mov	x0, x19
    1230:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1234:	mov	w1, #0x10                  	// #16
    1238:	mov	x0, x20
    123c:	add	x24, x21, #0xe8
    1240:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1244:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1248:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    124c:	mov	x2, x0
    1250:	stp	x23, x24, [x0]
    1254:	add	x1, x1, #0x0
    1258:	add	x3, x3, #0x0
    125c:	mov	x0, x19
    1260:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1264:	mov	w1, #0x10                  	// #16
    1268:	mov	x0, x20
    126c:	add	x23, x21, #0xf0
    1270:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1274:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1278:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    127c:	mov	x2, x0
    1280:	stp	x22, x23, [x0]
    1284:	add	x1, x1, #0x0
    1288:	add	x3, x3, #0x0
    128c:	mov	x0, x19
    1290:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1294:	mov	w1, #0x10                  	// #16
    1298:	mov	x0, x20
    129c:	add	x23, x21, #0xf1
    12a0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    12a4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    12a8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    12ac:	mov	x2, x0
    12b0:	stp	x22, x23, [x0]
    12b4:	add	x1, x1, #0x0
    12b8:	add	x3, x3, #0x0
    12bc:	mov	x0, x19
    12c0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    12c4:	mov	w1, #0x10                  	// #16
    12c8:	mov	x0, x20
    12cc:	add	x23, x21, #0xf2
    12d0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    12d4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    12d8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    12dc:	mov	x2, x0
    12e0:	stp	x22, x23, [x0]
    12e4:	add	x1, x1, #0x0
    12e8:	add	x3, x3, #0x0
    12ec:	mov	x0, x19
    12f0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    12f4:	mov	w1, #0x10                  	// #16
    12f8:	mov	x0, x20
    12fc:	add	x21, x21, #0xf3
    1300:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1304:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1308:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    130c:	mov	x2, x0
    1310:	stp	x22, x21, [x0]
    1314:	add	x1, x1, #0x0
    1318:	add	x3, x3, #0x0
    131c:	mov	x0, x19
    1320:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1324:	mov	w1, #0x20                  	// #32
    1328:	mov	x0, x20
    132c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1330:	adrp	x21, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1334:	adrp	x22, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1338:	add	x21, x21, #0x0
    133c:	add	x22, x22, #0x0
    1340:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1344:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1348:	mov	x2, x0
    134c:	strb	wzr, [x0, #16]
    1350:	stp	x21, x19, [x0]
    1354:	str	x22, [x0, #24]
    1358:	add	x1, x1, #0x0
    135c:	add	x3, x3, #0x0
    1360:	mov	x0, x19
    1364:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1368:	mov	w1, #0x20                  	// #32
    136c:	mov	x0, x20
    1370:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1374:	mov	w8, #0x1                   	// #1
    1378:	stp	x21, x19, [x0]
    137c:	strb	w8, [x0, #16]
    1380:	str	x22, [x0, #24]
    1384:	mov	x2, x0
    1388:	mov	x0, x19
    138c:	ldp	x20, x19, [sp, #64]
    1390:	ldp	x22, x21, [sp, #48]
    1394:	ldp	x24, x23, [sp, #32]
    1398:	ldp	x26, x25, [sp, #16]
    139c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    13a0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    13a4:	add	x1, x1, #0x0
    13a8:	add	x3, x3, #0x0
    13ac:	ldr	x30, [sp], #80
    13b0:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>

00000000000013b4 <_ZN11__sanitizer21InitializeCommonFlagsEPNS_11CommonFlagsE>:
    13b4:	ldrb	w8, [x0, #231]
    13b8:	ldrb	w9, [x0, #169]
    13bc:	adrp	x11, 0 <_ZN11__sanitizer17current_verbosityE>
    13c0:	ldr	w10, [x0, #52]
    13c4:	ldr	x11, [x11]
    13c8:	orr	w8, w9, w8
    13cc:	strb	w8, [x0, #169]
    13d0:	str	w10, [x11]
    13d4:	ret

Disassembly of section .text._ZN11__sanitizer18FlagHandlerInclude5ParseEPKc:

0000000000000000 <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x20, x1
   c:	mov	x19, x0
  10:	str	x1, [x0, #24]
  14:	mov	w1, #0x25                  	// #37
  18:	mov	x0, x20
  1c:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
  20:	cbz	x0, 7c <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc+0x7c>
  24:	adrp	x1, 0 <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc>
  28:	add	x1, x1, #0x0
  2c:	mov	w0, #0x1000                	// #4096
  30:	mov	w2, wzr
  34:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  38:	mov	x21, x0
  3c:	mov	w2, #0x1000                	// #4096
  40:	mov	x0, x20
  44:	mov	x1, x21
  48:	bl	100 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm>
  4c:	ldr	x0, [x19, #8]
  50:	ldrb	w2, [x19, #16]
  54:	mov	x1, x21
  58:	bl	0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>
  5c:	mov	w19, w0
  60:	mov	w1, #0x1000                	// #4096
  64:	mov	x0, x21
  68:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  6c:	and	w0, w19, #0x1
  70:	ldp	x20, x19, [sp, #16]
  74:	ldp	x30, x21, [sp], #32
  78:	ret
  7c:	ldr	x0, [x19, #8]
  80:	ldrb	w2, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x30, x21, [sp], #32
  90:	b	0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>

Disassembly of section .text._ZN11__sanitizer18FlagHandlerInclude6FormatEPcm:

0000000000000000 <_ZN11__sanitizer18FlagHandlerInclude6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x3, [x0, #24]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer18FlagHandlerInclude6FormatEPcm>
  10:	mov	x0, x1
  14:	add	x2, x2, #0x0
  18:	mov	x1, x19
  1c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  20:	sxtw	x8, w0
  24:	cmp	x8, x19
  28:	cset	w0, cc  // cc = lo, ul, last
  2c:	ldp	x30, x19, [sp], #16
  30:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldr	x20, [x0, #8]
   c:	mov	x19, x1
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	mov	x0, x19
  1c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  20:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  24:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  28:	add	x1, x1, #0x0
  2c:	mov	x0, x19
  30:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  34:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  38:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  3c:	add	x1, x1, #0x0
  40:	mov	x0, x19
  44:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  48:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  4c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  50:	add	x1, x1, #0x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  5c:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  60:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  64:	add	x1, x1, #0x0
  68:	mov	x0, x19
  6c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  70:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  74:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  78:	add	x1, x1, #0x0
  7c:	mov	x0, x19
  80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  84:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  88:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  8c:	add	x0, x0, #0x0
  90:	mov	x1, x19
  94:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  98:	mov	w0, wzr
  9c:	ldp	x20, x19, [sp, #16]
  a0:	ldr	x30, [sp], #32
  a4:	ret
  a8:	strb	wzr, [x20]
  ac:	mov	w0, #0x1                   	// #1
  b0:	ldp	x20, x19, [sp, #16]
  b4:	ldr	x30, [sp], #32
  b8:	ret
  bc:	mov	w0, #0x1                   	// #1
  c0:	strb	w0, [x20]
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldr	x30, [sp], #32
  cc:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	adrp	x9, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   c:	adrp	x10, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  10:	mov	x19, x2
  14:	ldrb	w8, [x8]
  18:	add	x9, x9, #0x0
  1c:	add	x10, x10, #0x0
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	cmp	w8, #0x0
  28:	csel	x3, x10, x9, eq  // eq = none
  2c:	add	x2, x2, #0x0
  30:	mov	x0, x1
  34:	mov	x1, x19
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	sxtw	x8, w0
  40:	cmp	x8, x19
  44:	cset	w0, cc  // cc = lo, ul, last
  48:	ldp	x30, x19, [sp], #16
  4c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_>:
   0:	ldr	x8, [x0, #8]
   4:	mov	w0, #0x1                   	// #1
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>
  10:	mov	x0, x1
  14:	ldr	x3, [x8]
  18:	add	x2, x2, #0x0
  1c:	mov	x1, x19
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	sxtw	x8, w0
  28:	cmp	x8, x19
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x30, x19, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x1
   c:	mov	x20, x0
  10:	add	x1, sp, #0x8
  14:	mov	w2, #0xa                   	// #10
  18:	mov	x0, x19
  1c:	bl	0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
  20:	ldr	x8, [x20, #8]
  24:	str	w0, [x8]
  28:	ldr	x8, [sp, #8]
  2c:	ldrb	w20, [x8]
  30:	cbz	w20, 44 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc+0x44>
  34:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>
  38:	add	x0, x0, #0x0
  3c:	mov	x1, x19
  40:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  44:	cmp	w20, #0x0
  48:	ldp	x20, x19, [sp, #16]
  4c:	cset	w0, eq  // eq = none
  50:	ldr	x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>
  10:	mov	x0, x1
  14:	ldr	w3, [x8]
  18:	add	x2, x2, #0x0
  1c:	mov	x1, x19
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	sxtw	x8, w0
  28:	cmp	x8, x19
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x30, x19, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x20, x1
   c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  10:	mov	x19, x0
  14:	add	x1, x1, #0x0
  18:	mov	x0, x20
  1c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  20:	cbz	w0, d0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xd0>
  24:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  28:	add	x1, x1, #0x0
  2c:	mov	x0, x20
  30:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  34:	cbz	w0, d0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xd0>
  38:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  3c:	add	x1, x1, #0x0
  40:	mov	x0, x20
  44:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  48:	cbz	w0, d0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xd0>
  4c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  50:	add	x1, x1, #0x0
  54:	mov	x0, x20
  58:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  5c:	cbz	w0, ec <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xec>
  60:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  64:	add	x1, x1, #0x0
  68:	mov	x0, x20
  6c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  70:	cbz	w0, ec <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xec>
  74:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  78:	add	x1, x1, #0x0
  7c:	mov	x0, x20
  80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  84:	cbz	w0, ec <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xec>
  88:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  8c:	add	x1, x1, #0x0
  90:	mov	x0, x20
  94:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  98:	cbz	w0, f4 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xf4>
  9c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  a0:	add	x1, x1, #0x0
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  ac:	cbz	w0, f4 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xf4>
  b0:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  b4:	add	x0, x0, #0x0
  b8:	mov	x1, x20
  bc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  c0:	mov	w0, wzr
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldr	x30, [sp], #32
  cc:	ret
  d0:	mov	w8, wzr
  d4:	ldr	x9, [x19, #8]
  d8:	mov	w0, #0x1                   	// #1
  dc:	str	w8, [x9]
  e0:	ldp	x20, x19, [sp, #16]
  e4:	ldr	x30, [sp], #32
  e8:	ret
  ec:	mov	w8, #0x1                   	// #1
  f0:	b	d4 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xd4>
  f4:	ldr	x8, [x19, #8]
  f8:	mov	w9, #0x2                   	// #2
  fc:	mov	w0, #0x1                   	// #1
 100:	str	w9, [x8]
 104:	ldp	x20, x19, [sp, #16]
 108:	ldr	x30, [sp], #32
 10c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm>
  10:	mov	x0, x1
  14:	ldr	w3, [x8]
  18:	add	x2, x2, #0x0
  1c:	mov	x1, x19
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	sxtw	x8, w0
  28:	cmp	x8, x19
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x30, x19, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerImE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x1
   c:	mov	x20, x0
  10:	add	x1, sp, #0x8
  14:	mov	w2, #0xa                   	// #10
  18:	mov	x0, x19
  1c:	bl	0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
  20:	ldr	x8, [x20, #8]
  24:	str	x0, [x8]
  28:	ldr	x8, [sp, #8]
  2c:	ldrb	w20, [x8]
  30:	cbz	w20, 44 <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc+0x44>
  34:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc>
  38:	add	x0, x0, #0x0
  3c:	mov	x1, x19
  40:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  44:	cmp	w20, #0x0
  48:	ldp	x20, x19, [sp, #16]
  4c:	cset	w0, eq  // eq = none
  50:	ldr	x30, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerImE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerImE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerImE6FormatEPcm>
  10:	mov	x0, x1
  14:	ldr	x3, [x8]
  18:	add	x2, x2, #0x0
  1c:	mov	x1, x19
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	sxtw	x8, w0
  28:	cmp	x8, x19
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x30, x19, [sp], #16
  34:	ret

sanitizer_flag_parser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	adrp	x20, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
  10:	ldr	w1, [x20]
  14:	cbz	w1, 64 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x64>
  18:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  1c:	add	x0, x0, #0x0
  20:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  24:	ldr	w8, [x20]
  28:	cmp	w8, #0x1
  2c:	b.lt	60 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x60>  // b.tstop
  30:	adrp	x22, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
  34:	adrp	x19, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  38:	mov	x21, xzr
  3c:	add	x22, x22, #0x0
  40:	add	x19, x19, #0x0
  44:	ldr	x1, [x22, x21, lsl #3]
  48:	mov	x0, x19
  4c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  50:	ldrsw	x8, [x22, #160]
  54:	add	x21, x21, #0x1
  58:	cmp	x21, x8
  5c:	b.lt	44 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x44>  // b.tstop
  60:	str	wzr, [x20]
  64:	ldp	x20, x19, [sp, #32]
  68:	ldp	x22, x21, [sp, #16]
  6c:	ldr	x30, [sp], #48
  70:	ret

0000000000000074 <_ZN11__sanitizer10FlagParser10ll_strndupEPKcm>:
  74:	stp	x30, x21, [sp, #-32]!
  78:	stp	x20, x19, [sp, #16]
  7c:	mov	x19, x1
  80:	mov	x0, x1
  84:	mov	x1, x2
  88:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
  8c:	mov	x20, x0
  90:	add	x1, x0, #0x1
  94:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  a0:	mov	x1, x19
  a4:	mov	x2, x20
  a8:	mov	x21, x0
  ac:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  b0:	strb	wzr, [x21, x20]
  b4:	ldp	x20, x19, [sp, #16]
  b8:	mov	x0, x21
  bc:	ldp	x30, x21, [sp], #32
  c0:	ret

00000000000000c4 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>:
  c4:	sub	sp, sp, #0xc0
  c8:	str	x30, [sp, #128]
  cc:	stp	x24, x23, [sp, #144]
  d0:	stp	x22, x21, [sp, #160]
  d4:	stp	x20, x19, [sp, #176]
  d8:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  dc:	ldr	x8, [x8]
  e0:	mov	x19, x0
  e4:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  e8:	add	x0, x0, #0x0
  ec:	ldr	x1, [x8]
  f0:	strb	wzr, [sp, #127]
  f4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  f8:	ldr	w8, [x19, #8]
  fc:	cmp	w8, #0x1
 100:	b.lt	180 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0xbc>  // b.tstop
 104:	adrp	x23, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 108:	adrp	x24, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 10c:	adrp	x20, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 110:	mov	x21, xzr
 114:	mov	x22, xzr
 118:	add	x23, x23, #0x0
 11c:	add	x24, x24, #0x0
 120:	add	x20, x20, #0x0
 124:	ldr	x8, [x19]
 128:	mov	x1, sp
 12c:	mov	w2, #0x80                  	// #128
 130:	add	x8, x8, x21
 134:	ldr	x0, [x8, #16]
 138:	ldr	x8, [x0]
 13c:	ldr	x8, [x8, #8]
 140:	blr	x8
 144:	ldrb	w3, [sp, #127]
 148:	cbnz	x3, 198 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0xd4>
 14c:	ldr	x8, [x19]
 150:	tst	w0, #0x1
 154:	csel	x3, x24, x23, ne  // ne = any
 158:	mov	x4, sp
 15c:	add	x8, x8, x21
 160:	ldp	x1, x2, [x8]
 164:	mov	x0, x20
 168:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 16c:	ldrsw	x8, [x19, #8]
 170:	add	x22, x22, #0x1
 174:	add	x21, x21, #0x18
 178:	cmp	x22, x8
 17c:	b.lt	124 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0x60>  // b.tstop
 180:	ldp	x20, x19, [sp, #176]
 184:	ldp	x22, x21, [sp, #160]
 188:	ldp	x24, x23, [sp, #144]
 18c:	ldr	x30, [sp, #128]
 190:	add	sp, sp, #0xc0
 194:	ret
 198:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 19c:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x2, x2, #0x0
 1a8:	mov	w1, #0x40                  	// #64
 1ac:	mov	x4, xzr
 1b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001b4 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>:
 1b4:	str	x30, [sp, #-16]!
 1b8:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1bc:	ldr	x8, [x8]
 1c0:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 1c4:	mov	x2, x1
 1c8:	add	x0, x0, #0x0
 1cc:	ldr	x8, [x8]
 1d0:	mov	x1, x8
 1d4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 1d8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000001dc <_ZN11__sanitizer10FlagParser8is_spaceEc>:
 1dc:	sub	w8, w1, #0x9
 1e0:	and	w9, w8, #0xff
 1e4:	cmp	w9, #0x31
 1e8:	b.hi	208 <_ZN11__sanitizer10FlagParser8is_spaceEc+0x2c>  // b.pmore
 1ec:	mov	x9, #0x13                  	// #19
 1f0:	movk	x9, #0x80, lsl #16
 1f4:	movk	x9, #0x8, lsl #32
 1f8:	movk	x9, #0x2, lsl #48
 1fc:	lsr	x8, x9, x8
 200:	and	w0, w8, #0x1
 204:	ret
 208:	mov	w0, wzr
 20c:	ret

0000000000000210 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv>:
 210:	ldp	x8, x9, [x0, #16]
 214:	mov	x11, #0x2600                	// #9728
 218:	movk	x11, #0x1001, lsl #32
 21c:	mov	w10, #0x1                   	// #1
 220:	movk	x11, #0x400, lsl #48
 224:	ldrb	w12, [x8, x9]
 228:	cmp	w12, #0x3a
 22c:	b.hi	250 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x40>  // b.pmore
 230:	lsl	x12, x10, x12
 234:	tst	x12, x11
 238:	b.eq	250 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x40>  // b.none
 23c:	add	x9, x9, #0x1
 240:	str	x9, [x0, #24]
 244:	ldrb	w12, [x8, x9]
 248:	cmp	w12, #0x3a
 24c:	b.ls	230 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x20>  // b.plast
 250:	ret

0000000000000254 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>:
 254:	stp	x30, x23, [sp, #-48]!
 258:	stp	x22, x21, [sp, #16]
 25c:	stp	x20, x19, [sp, #32]
 260:	ldp	x9, x8, [x0, #16]
 264:	mov	x13, #0x2601                	// #9729
 268:	movk	x13, #0x1001, lsl #32
 26c:	mov	x2, x1
 270:	mov	x19, x0
 274:	mov	x1, xzr
 278:	mov	w10, #0x1                   	// #1
 27c:	add	x11, x9, x8
 280:	add	x12, x8, #0x1
 284:	movk	x13, #0x400, lsl #48
 288:	ldrb	w14, [x11, x1]
 28c:	cmp	w14, #0x3d
 290:	b.hi	2a8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x54>  // b.pmore
 294:	cmp	x14, #0x3d
 298:	b.eq	2c4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x70>  // b.none
 29c:	lsl	x14, x10, x14
 2a0:	tst	x14, x13
 2a4:	b.ne	4d4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x280>  // b.any
 2a8:	add	x14, x12, x1
 2ac:	str	x14, [x19, #24]
 2b0:	add	x1, x1, #0x1
 2b4:	ldrb	w14, [x11, x1]
 2b8:	cmp	w14, #0x3d
 2bc:	b.ls	294 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x40>  // b.plast
 2c0:	b	2a8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x54>
 2c4:	add	x21, x9, x8
 2c8:	mov	x0, x21
 2cc:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 2d0:	mov	x22, x0
 2d4:	add	x1, x0, #0x1
 2d8:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 2e4:	mov	x1, x21
 2e8:	mov	x2, x22
 2ec:	mov	x20, x0
 2f0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2f4:	strb	wzr, [x20, x22]
 2f8:	ldp	x9, x8, [x19, #16]
 2fc:	add	x10, x8, #0x1
 300:	str	x10, [x19, #24]
 304:	add	x21, x9, x10
 308:	ldrb	w10, [x21]
 30c:	cmp	w10, #0x22
 310:	b.eq	31c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0xc8>  // b.none
 314:	cmp	w10, #0x27
 318:	b.ne	3c4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x170>  // b.any
 31c:	add	x11, x8, #0x2
 320:	str	x11, [x19, #24]
 324:	ldrb	w13, [x9, x11]
 328:	cmp	w13, #0x0
 32c:	cset	w10, eq  // eq = none
 330:	cbz	w13, 368 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x114>
 334:	ldrb	w12, [x21]
 338:	cmp	w13, w12
 33c:	b.eq	368 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x114>  // b.none
 340:	add	x11, x8, #0x3
 344:	str	x11, [x19, #24]
 348:	ldrb	w13, [x9, x11]
 34c:	add	x11, x11, #0x1
 350:	cmp	w13, #0x0
 354:	cset	w10, eq  // eq = none
 358:	cbz	w13, 364 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x110>
 35c:	cmp	w13, w12
 360:	b.ne	344 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0xf0>  // b.any
 364:	sub	x11, x11, #0x1
 368:	cbnz	w10, 51c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2c8>
 36c:	add	x21, x21, #0x1
 370:	sub	x8, x11, x8
 374:	sub	x1, x8, #0x2
 378:	mov	x0, x21
 37c:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 380:	mov	x23, x0
 384:	add	x1, x0, #0x1
 388:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 38c:	add	x0, x0, #0x0
 390:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 394:	mov	x1, x21
 398:	mov	x2, x23
 39c:	mov	x22, x0
 3a0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3a4:	strb	wzr, [x22, x23]
 3a8:	ldr	x8, [x19, #24]
 3ac:	add	x8, x8, #0x1
 3b0:	str	x8, [x19, #24]
 3b4:	ldr	w8, [x19, #8]
 3b8:	cmp	w8, #0x1
 3bc:	b.ge	44c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x1f8>  // b.tcont
 3c0:	b	47c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x228>
 3c4:	mov	x12, #0x2601                	// #9729
 3c8:	add	x8, x8, #0x2
 3cc:	movk	x12, #0x1001, lsl #32
 3d0:	mov	x1, xzr
 3d4:	mov	w11, #0x1                   	// #1
 3d8:	add	x9, x9, x8
 3dc:	movk	x12, #0x400, lsl #48
 3e0:	b	3f4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x1a0>
 3e4:	add	x10, x8, x1
 3e8:	str	x10, [x19, #24]
 3ec:	ldrb	w10, [x9, x1]
 3f0:	add	x1, x1, #0x1
 3f4:	and	w13, w10, #0xff
 3f8:	cmp	w13, #0x3a
 3fc:	and	x10, x10, #0xff
 400:	b.hi	3e4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x190>  // b.pmore
 404:	lsl	x10, x11, x10
 408:	tst	x10, x12
 40c:	b.eq	3e4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x190>  // b.none
 410:	mov	x0, x21
 414:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 418:	mov	x23, x0
 41c:	add	x1, x0, #0x1
 420:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 424:	add	x0, x0, #0x0
 428:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 42c:	mov	x1, x21
 430:	mov	x2, x23
 434:	mov	x22, x0
 438:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 43c:	strb	wzr, [x22, x23]
 440:	ldr	w8, [x19, #8]
 444:	cmp	w8, #0x1
 448:	b.lt	47c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x228>  // b.tstop
 44c:	mov	x21, xzr
 450:	mov	x23, xzr
 454:	ldr	x8, [x19]
 458:	mov	x0, x20
 45c:	ldr	x1, [x8, x21]
 460:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 464:	cbz	w0, 4a4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x250>
 468:	ldrsw	x8, [x19, #8]
 46c:	add	x23, x23, #0x1
 470:	add	x21, x21, #0x18
 474:	cmp	x23, x8
 478:	b.lt	454 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x200>  // b.tstop
 47c:	adrp	x8, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
 480:	ldrsw	x3, [x8]
 484:	cmp	w3, #0x14
 488:	b.cs	500 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2ac>  // b.hs, b.nlast
 48c:	adrp	x9, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
 490:	add	w8, w3, #0x1
 494:	add	x9, x9, #0x0
 498:	str	w8, [x9, #160]
 49c:	str	x20, [x9, x3, lsl #3]
 4a0:	b	4c4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x270>
 4a4:	ldr	x8, [x19]
 4a8:	mov	x1, x22
 4ac:	add	x8, x8, x21
 4b0:	ldr	x0, [x8, #16]
 4b4:	ldr	x8, [x0]
 4b8:	ldr	x8, [x8]
 4bc:	blr	x8
 4c0:	tbz	w0, #0, 528 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2d4>
 4c4:	ldp	x20, x19, [sp, #32]
 4c8:	ldp	x22, x21, [sp, #16]
 4cc:	ldp	x30, x23, [sp], #48
 4d0:	ret
 4d4:	cbnz	x2, 4e4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x290>
 4d8:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 4dc:	add	x1, x1, #0x0
 4e0:	bl	1b4 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>
 4e4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 4e8:	ldr	x8, [x8]
 4ec:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 4f0:	add	x0, x0, #0x0
 4f4:	ldr	x1, [x8]
 4f8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 4fc:	bl	0 <_ZN11__sanitizer3DieEv>
 500:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 504:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 508:	add	x0, x0, #0x0
 50c:	add	x2, x2, #0x0
 510:	mov	w1, #0x1f                  	// #31
 514:	mov	w4, #0x14                  	// #20
 518:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 51c:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 520:	add	x1, x1, #0x0
 524:	bl	1b4 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>
 528:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 52c:	add	x1, x1, #0x0
 530:	bl	1b4 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>

0000000000000534 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_>:
 534:	stp	x30, x23, [sp, #-48]!
 538:	stp	x22, x21, [sp, #16]
 53c:	stp	x20, x19, [sp, #32]
 540:	ldr	w8, [x0, #8]
 544:	mov	x19, x1
 548:	cmp	w8, #0x1
 54c:	b.lt	588 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x54>  // b.tstop
 550:	mov	x20, x2
 554:	mov	x21, x0
 558:	mov	x22, xzr
 55c:	mov	x23, xzr
 560:	ldr	x8, [x21]
 564:	mov	x0, x19
 568:	ldr	x1, [x8, x22]
 56c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 570:	cbz	w0, 5c0 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x8c>
 574:	ldrsw	x8, [x21, #8]
 578:	add	x23, x23, #0x1
 57c:	add	x22, x22, #0x18
 580:	cmp	x23, x8
 584:	b.lt	560 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x2c>  // b.tstop
 588:	adrp	x8, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
 58c:	ldrsw	x3, [x8]
 590:	cmp	w3, #0x14
 594:	b.cs	5e8 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0xb4>  // b.hs, b.nlast
 598:	adrp	x9, 10 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x10>
 59c:	add	w8, w3, #0x1
 5a0:	add	x9, x9, #0x0
 5a4:	str	w8, [x9, #160]
 5a8:	str	x19, [x9, x3, lsl #3]
 5ac:	ldp	x20, x19, [sp, #32]
 5b0:	ldp	x22, x21, [sp, #16]
 5b4:	mov	w0, #0x1                   	// #1
 5b8:	ldp	x30, x23, [sp], #48
 5bc:	ret
 5c0:	ldr	x8, [x21]
 5c4:	mov	x1, x20
 5c8:	ldp	x20, x19, [sp, #32]
 5cc:	add	x8, x8, x22
 5d0:	ldr	x0, [x8, #16]
 5d4:	ldp	x22, x21, [sp, #16]
 5d8:	ldr	x8, [x0]
 5dc:	ldr	x2, [x8]
 5e0:	ldp	x30, x23, [sp], #48
 5e4:	br	x2
 5e8:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 5ec:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 5f0:	add	x0, x0, #0x0
 5f4:	add	x2, x2, #0x0
 5f8:	mov	w1, #0x1f                  	// #31
 5fc:	mov	w4, #0x14                  	// #20
 600:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000604 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc>:
 604:	str	x30, [sp, #-48]!
 608:	stp	x22, x21, [sp, #16]
 60c:	stp	x20, x19, [sp, #32]
 610:	mov	x22, #0x2600                	// #9728
 614:	movk	x22, #0x1001, lsl #32
 618:	mov	x19, x1
 61c:	mov	x20, x0
 620:	mov	w21, #0x1                   	// #1
 624:	movk	x22, #0x400, lsl #48
 628:	ldp	x8, x9, [x20, #16]
 62c:	ldrb	w10, [x8, x9]
 630:	cmp	w10, #0x3a
 634:	b.hi	660 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x5c>  // b.pmore
 638:	lsl	x11, x21, x10
 63c:	tst	x11, x22
 640:	b.eq	65c <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x58>  // b.none
 644:	add	x9, x9, #0x1
 648:	str	x9, [x20, #24]
 64c:	ldrb	w10, [x8, x9]
 650:	cmp	w10, #0x3a
 654:	b.ls	638 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x34>  // b.plast
 658:	b	660 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x5c>
 65c:	cbz	x10, 680 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x7c>
 660:	mov	x0, x20
 664:	mov	x1, x19
 668:	bl	254 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>
 66c:	ldp	x8, x9, [x20, #16]
 670:	ldrb	w10, [x8, x9]
 674:	cmp	w10, #0x3a
 678:	b.ls	638 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x34>  // b.plast
 67c:	b	660 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x5c>
 680:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 684:	ldr	x8, [x8]
 688:	ldr	w9, [x8, #36]
 68c:	cmp	w9, #0x0
 690:	b.le	6a4 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0xa0>
 694:	ldp	x20, x19, [sp, #32]
 698:	ldp	x22, x21, [sp, #16]
 69c:	ldr	x30, [sp], #48
 6a0:	ret
 6a4:	mov	w9, #0x1                   	// #1
 6a8:	str	w9, [x8, #36]
 6ac:	ldp	x20, x19, [sp, #32]
 6b0:	ldp	x22, x21, [sp, #16]
 6b4:	ldr	x30, [sp], #48
 6b8:	ret

00000000000006bc <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>:
 6bc:	sub	sp, sp, #0x40
 6c0:	stp	x30, x23, [sp, #16]
 6c4:	stp	x22, x21, [sp, #32]
 6c8:	stp	x20, x19, [sp, #48]
 6cc:	mov	x19, x0
 6d0:	mov	x0, x1
 6d4:	mov	x20, x1
 6d8:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
 6dc:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 6e0:	ldr	x8, [x8]
 6e4:	mov	x21, x0
 6e8:	ldr	w8, [x8]
 6ec:	cbz	w8, 710 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x54>
 6f0:	adrp	x8, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 6f4:	add	x8, x8, #0x0
 6f8:	cmp	x21, #0x0
 6fc:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 700:	csel	x2, x8, x21, eq  // eq = none
 704:	add	x0, x0, #0x0
 708:	mov	x1, x20
 70c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 710:	cbz	x21, 7ac <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xf0>
 714:	ldr	q0, [x19, #16]
 718:	mov	x23, #0x2600                	// #9728
 71c:	movk	x23, #0x1001, lsl #32
 720:	mov	x8, xzr
 724:	mov	w22, #0x1                   	// #1
 728:	movk	x23, #0x400, lsl #48
 72c:	str	q0, [sp]
 730:	stp	x21, xzr, [x19, #16]
 734:	ldrb	w9, [x21, x8]
 738:	cmp	w9, #0x3a
 73c:	b.ls	758 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x9c>  // b.plast
 740:	b	768 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xac>
 744:	add	x8, x8, #0x1
 748:	str	x8, [x19, #24]
 74c:	ldrb	w9, [x21, x8]
 750:	cmp	w9, #0x3a
 754:	b.hi	768 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xac>  // b.pmore
 758:	lsl	x10, x22, x9
 75c:	tst	x10, x23
 760:	b.ne	744 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x88>  // b.any
 764:	cbz	x9, 788 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xcc>
 768:	mov	x0, x19
 76c:	mov	x1, x20
 770:	bl	254 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>
 774:	ldp	x21, x8, [x19, #16]
 778:	ldrb	w9, [x21, x8]
 77c:	cmp	w9, #0x3a
 780:	b.ls	758 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x9c>  // b.plast
 784:	b	768 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xac>
 788:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 78c:	ldr	x8, [x8]
 790:	ldr	w9, [x8, #36]
 794:	cmp	w9, #0x0
 798:	b.gt	7a4 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0xe8>
 79c:	mov	w9, #0x1                   	// #1
 7a0:	str	w9, [x8, #36]
 7a4:	ldr	q0, [sp]
 7a8:	str	q0, [x19, #16]
 7ac:	ldp	x20, x19, [sp, #48]
 7b0:	ldp	x22, x21, [sp, #32]
 7b4:	ldp	x30, x23, [sp, #16]
 7b8:	add	sp, sp, #0x40
 7bc:	ret

00000000000007c0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>:
 7c0:	cbz	x1, 884 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0xc4>
 7c4:	sub	sp, sp, #0x40
 7c8:	str	x30, [sp, #16]
 7cc:	stp	x22, x21, [sp, #32]
 7d0:	stp	x20, x19, [sp, #48]
 7d4:	ldr	q0, [x0, #16]
 7d8:	mov	x22, #0x2600                	// #9728
 7dc:	movk	x22, #0x1001, lsl #32
 7e0:	mov	x20, x2
 7e4:	mov	x19, x0
 7e8:	mov	x8, xzr
 7ec:	mov	w21, #0x1                   	// #1
 7f0:	movk	x22, #0x400, lsl #48
 7f4:	str	q0, [sp]
 7f8:	stp	x1, xzr, [x0, #16]
 7fc:	ldrb	w9, [x1, x8]
 800:	cmp	w9, #0x3a
 804:	b.ls	820 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x60>  // b.plast
 808:	b	830 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x70>
 80c:	add	x8, x8, #0x1
 810:	str	x8, [x19, #24]
 814:	ldrb	w9, [x1, x8]
 818:	cmp	w9, #0x3a
 81c:	b.hi	830 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x70>  // b.pmore
 820:	lsl	x10, x21, x9
 824:	tst	x10, x22
 828:	b.ne	80c <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x4c>  // b.any
 82c:	cbz	x9, 850 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x90>
 830:	mov	x0, x19
 834:	mov	x1, x20
 838:	bl	254 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>
 83c:	ldp	x1, x8, [x19, #16]
 840:	ldrb	w9, [x1, x8]
 844:	cmp	w9, #0x3a
 848:	b.ls	820 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x60>  // b.plast
 84c:	b	830 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x70>
 850:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 854:	ldr	x8, [x8]
 858:	ldr	w9, [x8, #36]
 85c:	cmp	w9, #0x0
 860:	b.gt	86c <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0xac>
 864:	mov	w9, #0x1                   	// #1
 868:	str	w9, [x8, #36]
 86c:	ldr	q0, [sp]
 870:	ldr	x30, [sp, #16]
 874:	str	q0, [x19, #16]
 878:	ldp	x20, x19, [sp, #48]
 87c:	ldp	x22, x21, [sp, #32]
 880:	add	sp, sp, #0x40
 884:	ret

0000000000000888 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>:
 888:	sub	sp, sp, #0x60
 88c:	str	x30, [sp, #48]
 890:	stp	x22, x21, [sp, #64]
 894:	stp	x20, x19, [sp, #80]
 898:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 89c:	ldr	x22, [x22]
 8a0:	mov	w21, w2
 8a4:	mov	x19, x1
 8a8:	mov	x20, x0
 8ac:	ldr	x8, [x22]
 8b0:	cbnz	x8, 8c0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x38>
 8b4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 8b8:	mov	x8, x0
 8bc:	str	x0, [x22]
 8c0:	cmp	x8, #0x8, lsl #12
 8c4:	mov	w9, #0x8000                	// #32768
 8c8:	csel	x4, x8, x9, hi  // hi = pmore
 8cc:	add	x1, sp, #0x38
 8d0:	add	x2, sp, #0x28
 8d4:	add	x3, sp, #0x18
 8d8:	add	x5, sp, #0x24
 8dc:	mov	x0, x19
 8e0:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 8e4:	tbz	w0, #0, 964 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xdc>
 8e8:	ldr	x8, [sp, #56]
 8ec:	cbz	x8, 9b0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x128>
 8f0:	ldr	q0, [x20, #16]
 8f4:	mov	x22, #0x2600                	// #9728
 8f8:	movk	x22, #0x1001, lsl #32
 8fc:	mov	x9, xzr
 900:	mov	w21, #0x1                   	// #1
 904:	movk	x22, #0x400, lsl #48
 908:	str	q0, [sp]
 90c:	stp	x8, xzr, [x20, #16]
 910:	ldrb	w10, [x8, x9]
 914:	cmp	w10, #0x3a
 918:	b.ls	934 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xac>  // b.plast
 91c:	b	944 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xbc>
 920:	add	x9, x9, #0x1
 924:	str	x9, [x20, #24]
 928:	ldrb	w10, [x8, x9]
 92c:	cmp	w10, #0x3a
 930:	b.hi	944 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xbc>  // b.pmore
 934:	lsl	x11, x21, x10
 938:	tst	x11, x22
 93c:	b.ne	920 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x98>  // b.any
 940:	cbz	x10, 984 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xfc>
 944:	mov	x0, x20
 948:	mov	x1, x19
 94c:	bl	254 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>
 950:	ldp	x8, x9, [x20, #16]
 954:	ldrb	w10, [x8, x9]
 958:	cmp	w10, #0x3a
 95c:	b.ls	934 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xac>  // b.plast
 960:	b	944 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xbc>
 964:	tbnz	w21, #0, 9bc <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x134>
 968:	ldr	w2, [sp, #36]
 96c:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 970:	add	x0, x0, #0x0
 974:	mov	x1, x19
 978:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 97c:	mov	w0, wzr
 980:	b	9c0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x138>
 984:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 988:	ldr	x8, [x8]
 98c:	ldr	w9, [x8, #36]
 990:	cmp	w9, #0x0
 994:	b.gt	9a0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x118>
 998:	mov	w9, #0x1                   	// #1
 99c:	str	w9, [x8, #36]
 9a0:	ldr	q0, [sp]
 9a4:	str	q0, [x20, #16]
 9a8:	ldr	x0, [sp, #56]
 9ac:	b	9b4 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x12c>
 9b0:	mov	x0, xzr
 9b4:	ldr	x1, [sp, #40]
 9b8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 9bc:	mov	w0, #0x1                   	// #1
 9c0:	ldp	x20, x19, [sp, #80]
 9c4:	ldp	x22, x21, [sp, #64]
 9c8:	ldr	x30, [sp, #48]
 9cc:	add	sp, sp, #0x60
 9d0:	ret

00000000000009d4 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>:
 9d4:	str	x30, [sp, #-16]!
 9d8:	mov	x8, x3
 9dc:	ldrsw	x3, [x0, #8]
 9e0:	cmp	w3, #0xc8
 9e4:	b.cs	a0c <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_+0x38>  // b.hs, b.nlast
 9e8:	ldr	x9, [x0]
 9ec:	mov	w10, #0x18                  	// #24
 9f0:	add	w11, w3, #0x1
 9f4:	madd	x9, x3, x10, x9
 9f8:	stp	x1, x8, [x9]
 9fc:	str	x2, [x9, #16]
 a00:	str	w11, [x0, #8]
 a04:	ldr	x30, [sp], #16
 a08:	ret
 a0c:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 a10:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 a14:	add	x0, x0, #0x0
 a18:	add	x2, x2, #0x0
 a1c:	mov	w1, #0xb4                  	// #180
 a20:	mov	w4, #0xc8                  	// #200
 a24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000a28 <_ZN11__sanitizer10FlagParserC1Ev>:
 a28:	stp	x30, x19, [sp, #-16]!
 a2c:	mov	x19, x0
 a30:	str	wzr, [x0, #8]
 a34:	stp	xzr, xzr, [x0, #16]
 a38:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 a3c:	add	x0, x0, #0x0
 a40:	mov	w1, #0x12c0                	// #4800
 a44:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 a48:	str	x0, [x19]
 a4c:	ldp	x30, x19, [sp], #16
 a50:	ret

sanitizer_fuchsia.cpp.o:     file format elf64-littleaarch64


sanitizer_libc.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer14internal_atollEPKc>:
   0:	b	8 <_ZN11__sanitizer14internal_atollEPKc+0x8>
   4:	add	x0, x0, #0x1
   8:	ldrb	w8, [x0]
   c:	sub	w9, w8, #0x9
  10:	cmp	w9, #0x5
  14:	b.cc	4 <_ZN11__sanitizer14internal_atollEPKc+0x4>  // b.lo, b.ul, b.last
  18:	cmp	w8, #0x20
  1c:	b.eq	4 <_ZN11__sanitizer14internal_atollEPKc+0x4>  // b.none
  20:	cmp	w8, #0x2b
  24:	b.eq	4c <_ZN11__sanitizer14internal_atollEPKc+0x4c>  // b.none
  28:	cmp	w8, #0x2d
  2c:	b.ne	50 <_ZN11__sanitizer14internal_atollEPKc+0x50>  // b.any
  30:	mov	w8, #0xffffffff            	// #-1
  34:	ldrb	w11, [x0, #1]!
  38:	sub	w9, w11, #0x30
  3c:	cmp	w9, #0x9
  40:	b.ls	64 <_ZN11__sanitizer14internal_atollEPKc+0x64>  // b.plast
  44:	mov	x10, xzr
  48:	b	b4 <_ZN11__sanitizer14internal_atollEPKc+0xb4>
  4c:	add	x0, x0, #0x1
  50:	mov	w8, #0x1                   	// #1
  54:	ldrb	w11, [x0]
  58:	sub	w9, w11, #0x30
  5c:	cmp	w9, #0x9
  60:	b.hi	44 <_ZN11__sanitizer14internal_atollEPKc+0x44>  // b.pmore
  64:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
  68:	movk	x12, #0x999a
  6c:	mov	x10, xzr
  70:	add	x9, x0, #0x1
  74:	movk	x12, #0x1999, lsl #48
  78:	mov	w13, #0x2f                  	// #47
  7c:	add	x14, x10, x10, lsl #2
  80:	cmp	x10, x12
  84:	and	x10, x11, #0xff
  88:	ldrb	w11, [x9], #1
  8c:	lsl	x14, x14, #1
  90:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
  94:	sub	x15, x13, x10
  98:	add	x10, x10, x14
  9c:	cmp	x14, x15
  a0:	sub	x10, x10, #0x30
  a4:	sub	w14, w11, #0x30
  a8:	csinv	x10, x10, xzr, ls  // ls = plast
  ac:	cmp	w14, #0xa
  b0:	b.cc	7c <_ZN11__sanitizer14internal_atollEPKc+0x7c>  // b.lo, b.ul, b.last
  b4:	cmp	w8, #0x1
  b8:	b.lt	cc <_ZN11__sanitizer14internal_atollEPKc+0xcc>  // b.tstop
  bc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  c0:	cmp	x10, x8
  c4:	csel	x0, x10, x8, cc  // cc = lo, ul, last
  c8:	ret
  cc:	cmp	x10, #0x0
  d0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  d4:	csneg	x0, x8, x10, lt  // lt = tstop
  d8:	ret

00000000000000dc <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>:
  dc:	str	x30, [sp, #-16]!
  e0:	cmp	w2, #0xa
  e4:	b.eq	10c <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x30>  // b.none
  e8:	sxtw	x3, w2
  ec:	adrp	x0, 0 <_ZN11__sanitizer14internal_atollEPKc>
  f0:	adrp	x2, 0 <_ZN11__sanitizer14internal_atollEPKc>
  f4:	add	x0, x0, #0x0
  f8:	add	x2, x2, #0x0
  fc:	mov	w1, #0xe7                  	// #231
 100:	mov	w4, #0xa                   	// #10
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 108:	add	x0, x0, #0x1
 10c:	ldrb	w8, [x0]
 110:	sub	w9, w8, #0x9
 114:	cmp	w9, #0x5
 118:	b.cc	108 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x2c>  // b.lo, b.ul, b.last
 11c:	cmp	w8, #0x20
 120:	b.eq	108 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x2c>  // b.none
 124:	cmp	w8, #0x2b
 128:	b.eq	150 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x74>  // b.none
 12c:	cmp	w8, #0x2d
 130:	b.ne	1c0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xe4>  // b.any
 134:	add	x9, x0, #0x1
 138:	mov	w8, #0xffffffff            	// #-1
 13c:	ldrb	w12, [x9]
 140:	sub	w10, w12, #0x30
 144:	cmp	w10, #0x9
 148:	b.ls	168 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x8c>  // b.plast
 14c:	b	1d8 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xfc>
 150:	add	x9, x0, #0x1
 154:	mov	w8, #0x1                   	// #1
 158:	ldrb	w12, [x9]
 15c:	sub	w10, w12, #0x30
 160:	cmp	w10, #0x9
 164:	b.hi	1d8 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xfc>  // b.pmore
 168:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
 16c:	movk	x11, #0x999a
 170:	mov	x10, xzr
 174:	movk	x11, #0x1999, lsl #48
 178:	mov	w13, #0x2f                  	// #47
 17c:	add	x14, x10, x10, lsl #2
 180:	cmp	x10, x11
 184:	and	x10, x12, #0xff
 188:	ldrb	w12, [x9, #1]!
 18c:	lsl	x14, x14, #1
 190:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
 194:	sub	x15, x13, x10
 198:	add	x10, x14, x10
 19c:	cmp	x14, x15
 1a0:	sub	x10, x10, #0x30
 1a4:	sub	w14, w12, #0x30
 1a8:	csinv	x10, x10, xzr, ls  // ls = plast
 1ac:	cmp	w14, #0xa
 1b0:	b.cc	17c <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xa0>  // b.lo, b.ul, b.last
 1b4:	mov	w11, #0x1                   	// #1
 1b8:	cbnz	x1, 1e4 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x108>
 1bc:	b	1f0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x114>
 1c0:	mov	w8, #0x1                   	// #1
 1c4:	mov	x9, x0
 1c8:	ldrb	w12, [x9]
 1cc:	sub	w10, w12, #0x30
 1d0:	cmp	w10, #0x9
 1d4:	b.ls	168 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x8c>  // b.plast
 1d8:	mov	x10, xzr
 1dc:	mov	w11, wzr
 1e0:	cbz	x1, 1f0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x114>
 1e4:	cmp	w11, #0x0
 1e8:	csel	x9, x9, x0, ne  // ne = any
 1ec:	str	x9, [x1]
 1f0:	cmp	w8, #0x1
 1f4:	b.lt	20c <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x130>  // b.tstop
 1f8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
 1fc:	cmp	x10, x8
 200:	csel	x0, x10, x8, cc  // cc = lo, ul, last
 204:	ldr	x30, [sp], #16
 208:	ret
 20c:	cmp	x10, #0x0
 210:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
 214:	csneg	x0, x8, x10, lt  // lt = tstop
 218:	ldr	x30, [sp], #16
 21c:	ret

0000000000000220 <_ZN11__sanitizer15internal_memchrEPKvim>:
 220:	cbz	x2, 23c <_ZN11__sanitizer15internal_memchrEPKvim+0x1c>
 224:	ldrb	w8, [x0]
 228:	cmp	w8, w1
 22c:	b.eq	240 <_ZN11__sanitizer15internal_memchrEPKvim+0x20>  // b.none
 230:	subs	x2, x2, #0x1
 234:	add	x0, x0, #0x1
 238:	b.ne	224 <_ZN11__sanitizer15internal_memchrEPKvim+0x4>  // b.any
 23c:	mov	x0, xzr
 240:	ret

0000000000000244 <_ZN11__sanitizer16internal_memrchrEPKvim>:
 244:	cbz	x2, 270 <_ZN11__sanitizer16internal_memrchrEPKvim+0x2c>
 248:	mov	x8, x0
 24c:	mov	x0, xzr
 250:	mov	x9, x8
 254:	ldrb	w10, [x9], #1
 258:	cmp	w10, w1
 25c:	csel	x0, x8, x0, eq  // eq = none
 260:	subs	x2, x2, #0x1
 264:	mov	x8, x9
 268:	b.ne	254 <_ZN11__sanitizer16internal_memrchrEPKvim+0x10>  // b.any
 26c:	ret
 270:	mov	x0, xzr
 274:	ret

0000000000000278 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>:
 278:	cbz	x2, 29c <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x24>
 27c:	ldrb	w8, [x0]
 280:	ldrb	w9, [x1]
 284:	cmp	w8, w9
 288:	b.ne	2a4 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x2c>  // b.any
 28c:	add	x0, x0, #0x1
 290:	subs	x2, x2, #0x1
 294:	add	x1, x1, #0x1
 298:	b.ne	27c <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x4>  // b.any
 29c:	mov	w0, wzr
 2a0:	ret
 2a4:	mov	w8, #0xffffffff            	// #-1
 2a8:	cneg	w0, w8, cs  // cs = hs, nlast
 2ac:	ret

00000000000002b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>:
 2b0:	cbz	x2, 2f4 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x44>
 2b4:	cmp	x2, #0x1f
 2b8:	b.ls	2d4 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x24>  // b.plast
 2bc:	add	x8, x1, x2
 2c0:	cmp	x8, x0
 2c4:	b.ls	2f8 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x48>  // b.plast
 2c8:	add	x8, x0, x2
 2cc:	cmp	x8, x1
 2d0:	b.ls	2f8 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x48>  // b.plast
 2d4:	mov	x8, xzr
 2d8:	sub	x9, x2, x8
 2dc:	add	x10, x0, x8
 2e0:	add	x8, x1, x8
 2e4:	ldrb	w11, [x8], #1
 2e8:	subs	x9, x9, #0x1
 2ec:	strb	w11, [x10], #1
 2f0:	b.ne	2e4 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x34>  // b.any
 2f4:	ret
 2f8:	and	x8, x2, #0xffffffffffffffe0
 2fc:	add	x9, x1, #0x10
 300:	add	x10, x0, #0x10
 304:	mov	x11, x8
 308:	ldp	q0, q1, [x9, #-16]
 30c:	add	x9, x9, #0x20
 310:	subs	x11, x11, #0x20
 314:	stp	q0, q1, [x10, #-16]
 318:	add	x10, x10, #0x20
 31c:	b.ne	308 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x58>  // b.any
 320:	cmp	x8, x2
 324:	b.ne	2d8 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x28>  // b.any
 328:	b	2f4 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x44>

000000000000032c <_ZN11__sanitizer16internal_memmoveEPvPKvm>:
 32c:	cmp	x0, x1
 330:	b.cs	380 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x54>  // b.hs, b.nlast
 334:	cmp	x2, #0x1
 338:	b.lt	3a8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x7c>  // b.tstop
 33c:	cmp	x2, #0x20
 340:	b.cc	35c <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x30>  // b.lo, b.ul, b.last
 344:	add	x8, x1, x2
 348:	cmp	x8, x0
 34c:	b.ls	3ac <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x80>  // b.plast
 350:	add	x8, x0, x2
 354:	cmp	x8, x1
 358:	b.ls	3ac <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x80>  // b.plast
 35c:	mov	x8, xzr
 360:	sub	x9, x2, x8
 364:	add	x10, x0, x8
 368:	add	x8, x1, x8
 36c:	ldrb	w11, [x8], #1
 370:	subs	x9, x9, #0x1
 374:	strb	w11, [x10], #1
 378:	b.ne	36c <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x40>  // b.any
 37c:	b	3a8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x7c>
 380:	b.ls	3a8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x7c>  // b.plast
 384:	subs	x8, x2, #0x1
 388:	b.lt	3a8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x7c>  // b.tstop
 38c:	ldrb	w9, [x1, x8]
 390:	add	x10, x8, #0x1
 394:	sub	x11, x8, #0x1
 398:	cmp	x10, #0x1
 39c:	strb	w9, [x0, x8]
 3a0:	mov	x8, x11
 3a4:	b.gt	38c <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x60>
 3a8:	ret
 3ac:	and	x8, x2, #0xffffffffffffffe0
 3b0:	add	x9, x1, #0x10
 3b4:	add	x10, x0, #0x10
 3b8:	mov	x11, x8
 3bc:	ldp	q0, q1, [x9, #-16]
 3c0:	add	x9, x9, #0x20
 3c4:	subs	x11, x11, #0x20
 3c8:	stp	q0, q1, [x10, #-16]
 3cc:	add	x10, x10, #0x20
 3d0:	b.ne	3bc <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x90>  // b.any
 3d4:	cmp	x8, x2
 3d8:	b.eq	3a8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x7c>  // b.none
 3dc:	b	360 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x34>

00000000000003e0 <_ZN11__sanitizer15internal_memsetEPvim>:
 3e0:	orr	w8, w0, w2
 3e4:	tst	x8, #0xf
 3e8:	b.eq	404 <_ZN11__sanitizer15internal_memsetEPvim+0x24>  // b.none
 3ec:	cbz	x2, 474 <_ZN11__sanitizer15internal_memsetEPvim+0x94>
 3f0:	mov	x8, x0
 3f4:	subs	x2, x2, #0x1
 3f8:	strb	w1, [x8], #1
 3fc:	b.ne	3f4 <_ZN11__sanitizer15internal_memsetEPvim+0x14>  // b.any
 400:	b	474 <_ZN11__sanitizer15internal_memsetEPvim+0x94>
 404:	and	x9, x2, #0xfffffffffffffff8
 408:	add	x8, x0, x9
 40c:	cmp	x8, x0
 410:	b.ls	474 <_ZN11__sanitizer15internal_memsetEPvim+0x94>  // b.plast
 414:	sxtw	x10, w1
 418:	sub	x11, x9, #0x1
 41c:	orr	x9, x10, x10, lsl #8
 420:	orr	x9, x9, x9, lsl #16
 424:	cmp	x11, #0x30
 428:	orr	x9, x9, x9, lsl #32
 42c:	mov	x10, x0
 430:	b.cc	468 <_ZN11__sanitizer15internal_memsetEPvim+0x88>  // b.lo, b.ul, b.last
 434:	lsr	x10, x11, #4
 438:	add	x11, x10, #0x1
 43c:	and	x12, x11, #0x1ffffffffffffffc
 440:	dup	v0.2d, x9
 444:	add	x10, x0, x12, lsl #4
 448:	add	x13, x0, #0x20
 44c:	mov	x14, x12
 450:	stp	q0, q0, [x13, #-32]
 454:	stp	q0, q0, [x13], #64
 458:	subs	x14, x14, #0x4
 45c:	b.ne	450 <_ZN11__sanitizer15internal_memsetEPvim+0x70>  // b.any
 460:	cmp	x11, x12
 464:	b.eq	474 <_ZN11__sanitizer15internal_memsetEPvim+0x94>  // b.none
 468:	stp	x9, x9, [x10], #16
 46c:	cmp	x10, x8
 470:	b.cc	468 <_ZN11__sanitizer15internal_memsetEPvim+0x88>  // b.lo, b.ul, b.last
 474:	ret

0000000000000478 <_ZN11__sanitizer16internal_strcspnEPKcS1_>:
 478:	ldrb	w9, [x0]
 47c:	cbz	w9, 4c4 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x4c>
 480:	ldrb	w10, [x1], #1
 484:	mov	x8, xzr
 488:	cmp	w10, w9, uxtb
 48c:	b.eq	4bc <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x44>  // b.none
 490:	mov	x11, x1
 494:	mov	w12, w10
 498:	tst	w12, #0xff
 49c:	b.eq	4b0 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x38>  // b.none
 4a0:	ldrb	w12, [x11], #1
 4a4:	cmp	w12, w9, uxtb
 4a8:	b.ne	498 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x20>  // b.any
 4ac:	b	4bc <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x44>
 4b0:	add	x8, x8, #0x1
 4b4:	ldrb	w9, [x0, x8]
 4b8:	cbnz	w9, 488 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x10>
 4bc:	mov	x0, x8
 4c0:	ret
 4c4:	mov	x0, xzr
 4c8:	ret

00000000000004cc <_ZN11__sanitizer15internal_strchrEPKci>:
 4cc:	ldrb	w8, [x0]
 4d0:	cmp	w8, w1, uxtb
 4d4:	b.eq	4ec <_ZN11__sanitizer15internal_strchrEPKci+0x20>  // b.none
 4d8:	tst	w8, #0xff
 4dc:	b.eq	4f0 <_ZN11__sanitizer15internal_strchrEPKci+0x24>  // b.none
 4e0:	ldrb	w8, [x0, #1]!
 4e4:	cmp	w8, w1, uxtb
 4e8:	b.ne	4d8 <_ZN11__sanitizer15internal_strchrEPKci+0xc>  // b.any
 4ec:	ret
 4f0:	mov	x0, xzr
 4f4:	ret

00000000000004f8 <_ZN11__sanitizer15internal_strdupEPKc>:
 4f8:	str	x30, [sp, #-32]!
 4fc:	stp	x20, x19, [sp, #16]
 500:	mov	x19, x0
 504:	mov	x20, #0xffffffffffffffff    	// #-1
 508:	add	x8, x19, x20
 50c:	ldrb	w8, [x8, #1]
 510:	add	x20, x20, #0x1
 514:	cbnz	w8, 508 <_ZN11__sanitizer15internal_strdupEPKc+0x10>
 518:	add	x0, x20, #0x1
 51c:	mov	x1, xzr
 520:	mov	x2, xzr
 524:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 528:	cbz	x20, 594 <_ZN11__sanitizer15internal_strdupEPKc+0x9c>
 52c:	cmp	x20, #0x20
 530:	b.cc	54c <_ZN11__sanitizer15internal_strdupEPKc+0x54>  // b.lo, b.ul, b.last
 534:	add	x8, x19, x20
 538:	cmp	x0, x8
 53c:	b.cs	554 <_ZN11__sanitizer15internal_strdupEPKc+0x5c>  // b.hs, b.nlast
 540:	add	x8, x0, x20
 544:	cmp	x8, x19
 548:	b.ls	554 <_ZN11__sanitizer15internal_strdupEPKc+0x5c>  // b.plast
 54c:	mov	x8, xzr
 550:	b	580 <_ZN11__sanitizer15internal_strdupEPKc+0x88>
 554:	and	x8, x20, #0xffffffffffffffe0
 558:	add	x9, x19, #0x10
 55c:	add	x10, x0, #0x10
 560:	mov	x11, x8
 564:	ldp	q0, q1, [x9, #-16]
 568:	add	x9, x9, #0x20
 56c:	subs	x11, x11, #0x20
 570:	stp	q0, q1, [x10, #-16]
 574:	add	x10, x10, #0x20
 578:	b.ne	564 <_ZN11__sanitizer15internal_strdupEPKc+0x6c>  // b.any
 57c:	b	58c <_ZN11__sanitizer15internal_strdupEPKc+0x94>
 580:	ldrb	w9, [x19, x8]
 584:	strb	w9, [x0, x8]
 588:	add	x8, x8, #0x1
 58c:	cmp	x20, x8
 590:	b.ne	580 <_ZN11__sanitizer15internal_strdupEPKc+0x88>  // b.any
 594:	strb	wzr, [x0, x20]
 598:	ldp	x20, x19, [sp, #16]
 59c:	ldr	x30, [sp], #32
 5a0:	ret

00000000000005a4 <_ZN11__sanitizer15internal_strlenEPKc>:
 5a4:	mov	x8, xzr
 5a8:	ldrb	w9, [x0, x8]
 5ac:	add	x8, x8, #0x1
 5b0:	cbnz	w9, 5a8 <_ZN11__sanitizer15internal_strlenEPKc+0x4>
 5b4:	sub	x0, x8, #0x1
 5b8:	ret

00000000000005bc <_ZN11__sanitizer15internal_strcmpEPKcS1_>:
 5bc:	ldrb	w8, [x0]
 5c0:	ldrb	w11, [x1]
 5c4:	cmp	w8, w11
 5c8:	b.ne	5ec <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x30>  // b.any
 5cc:	add	x9, x0, #0x1
 5d0:	add	x10, x1, #0x1
 5d4:	tst	w8, #0xff
 5d8:	b.eq	5fc <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x40>  // b.none
 5dc:	ldrb	w8, [x9], #1
 5e0:	ldrb	w11, [x10], #1
 5e4:	cmp	w8, w11
 5e8:	b.eq	5d4 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x18>  // b.none
 5ec:	cmp	w8, w11
 5f0:	mov	w8, #0xffffffff            	// #-1
 5f4:	cneg	w0, w8, cs  // cs = hs, nlast
 5f8:	ret
 5fc:	mov	w0, wzr
 600:	ret

0000000000000604 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>:
 604:	cbz	x2, 62c <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x28>
 608:	ldrb	w8, [x0]
 60c:	ldrb	w9, [x1]
 610:	cmp	w8, w9
 614:	b.ne	634 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x30>  // b.any
 618:	cbz	w8, 62c <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x28>
 61c:	add	x0, x0, #0x1
 620:	subs	x2, x2, #0x1
 624:	add	x1, x1, #0x1
 628:	b.ne	608 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x4>  // b.any
 62c:	mov	w0, wzr
 630:	ret
 634:	mov	w8, #0xffffffff            	// #-1
 638:	cneg	w0, w8, cs  // cs = hs, nlast
 63c:	ret

0000000000000640 <_ZN11__sanitizer18internal_strchrnulEPKci>:
 640:	ldrb	w9, [x0]
 644:	cmp	w9, w1, uxtb
 648:	b.ne	650 <_ZN11__sanitizer18internal_strchrnulEPKci+0x10>  // b.any
 64c:	ret
 650:	mov	w10, w9
 654:	mov	x8, x0
 658:	tst	w10, #0xff
 65c:	b.eq	674 <_ZN11__sanitizer18internal_strchrnulEPKci+0x34>  // b.none
 660:	ldrb	w10, [x8, #1]!
 664:	cmp	w10, w1, uxtb
 668:	b.ne	658 <_ZN11__sanitizer18internal_strchrnulEPKci+0x18>  // b.any
 66c:	mov	x0, x8
 670:	ret
 674:	mov	x8, xzr
 678:	cbz	w9, 68c <_ZN11__sanitizer18internal_strchrnulEPKci+0x4c>
 67c:	add	x9, x0, #0x1
 680:	ldrb	w10, [x9, x8]
 684:	add	x8, x8, #0x1
 688:	cbnz	w10, 680 <_ZN11__sanitizer18internal_strchrnulEPKci+0x40>
 68c:	add	x8, x0, x8
 690:	mov	x0, x8
 694:	ret

0000000000000698 <_ZN11__sanitizer16internal_strrchrEPKci>:
 698:	ldrb	w9, [x0]
 69c:	cbz	w9, 6bc <_ZN11__sanitizer16internal_strrchrEPKci+0x24>
 6a0:	mov	x8, xzr
 6a4:	cmp	w1, w9, uxtb
 6a8:	csel	x8, x0, x8, eq  // eq = none
 6ac:	ldrb	w9, [x0, #1]!
 6b0:	cbnz	w9, 6a4 <_ZN11__sanitizer16internal_strrchrEPKci+0xc>
 6b4:	mov	x0, x8
 6b8:	ret
 6bc:	mov	x8, xzr
 6c0:	mov	x0, x8
 6c4:	ret

00000000000006c8 <_ZN11__sanitizer16internal_strlcatEPcPKcm>:
 6c8:	mov	x8, xzr
 6cc:	ldrb	w9, [x1, x8]
 6d0:	add	x8, x8, #0x1
 6d4:	cbnz	w9, 6cc <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x4>
 6d8:	mov	x9, xzr
 6dc:	cbz	x2, 704 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x3c>
 6e0:	ldrb	w10, [x0, x9]
 6e4:	cbz	w10, 704 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x3c>
 6e8:	add	x9, x9, #0x1
 6ec:	cmp	x2, x9
 6f0:	b.ne	6e0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x18>  // b.any
 6f4:	mov	x9, x2
 6f8:	add	x8, x9, x8
 6fc:	sub	x0, x8, #0x1
 700:	ret
 704:	cmp	x9, x2
 708:	b.ne	71c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x54>  // b.any
 70c:	mov	x9, x2
 710:	add	x8, x9, x8
 714:	sub	x0, x8, #0x1
 718:	ret
 71c:	sub	x11, x8, #0x1
 720:	sub	x12, x2, x9
 724:	cmp	x11, x12
 728:	add	x10, x0, x9
 72c:	b.cs	76c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0xa4>  // b.hs, b.nlast
 730:	cmp	x10, x1
 734:	b.cs	7d0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x108>  // b.hs, b.nlast
 738:	cmp	x8, #0x1
 73c:	b.lt	6f8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x30>  // b.tstop
 740:	cmp	x8, #0x20
 744:	b.cc	764 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x9c>  // b.lo, b.ul, b.last
 748:	add	x11, x1, x8
 74c:	cmp	x10, x11
 750:	b.cs	840 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x178>  // b.hs, b.nlast
 754:	add	x11, x0, x9
 758:	add	x11, x11, x8
 75c:	cmp	x11, x1
 760:	b.ls	840 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x178>  // b.plast
 764:	mov	x11, xzr
 768:	b	8a8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1e0>
 76c:	cmp	x10, x1
 770:	sub	x11, x12, #0x1
 774:	b.cs	800 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x138>  // b.hs, b.nlast
 778:	cmp	x11, #0x1
 77c:	b.lt	82c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x164>  // b.tstop
 780:	cmp	x11, #0x20
 784:	b.cc	7a4 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0xdc>  // b.lo, b.ul, b.last
 788:	add	x12, x1, x11
 78c:	cmp	x10, x12
 790:	b.cs	870 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1a8>  // b.hs, b.nlast
 794:	add	x10, x2, x0
 798:	sub	x10, x10, #0x1
 79c:	cmp	x10, x1
 7a0:	b.ls	870 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1a8>  // b.plast
 7a4:	mov	x10, xzr
 7a8:	add	x11, x10, x9
 7ac:	sub	x12, x11, x2
 7b0:	add	x11, x0, x11
 7b4:	add	x12, x12, #0x1
 7b8:	add	x10, x1, x10
 7bc:	ldrb	w13, [x10], #1
 7c0:	adds	x12, x12, #0x1
 7c4:	strb	w13, [x11], #1
 7c8:	b.cc	7bc <_ZN11__sanitizer16internal_strlcatEPcPKcm+0xf4>  // b.lo, b.ul, b.last
 7cc:	b	82c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x164>
 7d0:	cmp	x8, #0x1
 7d4:	b.lt	6f8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x30>  // b.tstop
 7d8:	cmp	x10, x1
 7dc:	b.ls	6f8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x30>  // b.plast
 7e0:	ldrb	w12, [x1, x11]
 7e4:	add	x13, x11, #0x1
 7e8:	sub	x14, x11, #0x1
 7ec:	cmp	x13, #0x1
 7f0:	strb	w12, [x10, x11]
 7f4:	mov	x11, x14
 7f8:	b.gt	7e0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x118>
 7fc:	b	6f8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x30>
 800:	b.ls	82c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x164>  // b.plast
 804:	cmp	x11, #0x1
 808:	b.lt	82c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x164>  // b.tstop
 80c:	add	x10, x2, x0
 810:	sub	x10, x10, #0x2
 814:	sub	x11, x1, #0x2
 818:	ldrb	w13, [x11, x12]
 81c:	sub	x12, x12, #0x1
 820:	cmp	x12, #0x1
 824:	strb	w13, [x10], #-1
 828:	b.gt	818 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x150>
 82c:	add	x10, x2, x0
 830:	sturb	wzr, [x10, #-1]
 834:	add	x8, x9, x8
 838:	sub	x0, x8, #0x1
 83c:	ret
 840:	and	x11, x8, #0xffffffffffffffe0
 844:	add	x13, x9, x0
 848:	add	x12, x1, #0x10
 84c:	add	x13, x13, #0x10
 850:	mov	x14, x11
 854:	ldp	q0, q1, [x12, #-16]
 858:	add	x12, x12, #0x20
 85c:	subs	x14, x14, #0x20
 860:	stp	q0, q1, [x13, #-16]
 864:	add	x13, x13, #0x20
 868:	b.ne	854 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x18c>  // b.any
 86c:	b	8b4 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1ec>
 870:	and	x10, x11, #0xffffffffffffffe0
 874:	add	x13, x9, x0
 878:	add	x12, x1, #0x10
 87c:	add	x13, x13, #0x10
 880:	mov	x14, x10
 884:	ldp	q0, q1, [x12, #-16]
 888:	add	x12, x12, #0x20
 88c:	subs	x14, x14, #0x20
 890:	stp	q0, q1, [x13, #-16]
 894:	add	x13, x13, #0x20
 898:	b.ne	884 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1bc>  // b.any
 89c:	cmp	x11, x10
 8a0:	b.eq	82c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x164>  // b.none
 8a4:	b	7a8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0xe0>
 8a8:	ldrb	w12, [x1, x11]
 8ac:	strb	w12, [x10, x11]
 8b0:	add	x11, x11, #0x1
 8b4:	cmp	x8, x11
 8b8:	b.ne	8a8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1e0>  // b.any
 8bc:	b	6f8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x30>

00000000000008c0 <_ZN11__sanitizer16internal_strnlenEPKcm>:
 8c0:	cbz	x1, 8e8 <_ZN11__sanitizer16internal_strnlenEPKcm+0x28>
 8c4:	mov	x8, x0
 8c8:	mov	x0, xzr
 8cc:	ldrb	w9, [x8, x0]
 8d0:	cbz	w9, 8e4 <_ZN11__sanitizer16internal_strnlenEPKcm+0x24>
 8d4:	add	x0, x0, #0x1
 8d8:	cmp	x1, x0
 8dc:	b.ne	8cc <_ZN11__sanitizer16internal_strnlenEPKcm+0xc>  // b.any
 8e0:	mov	x0, x1
 8e4:	ret
 8e8:	mov	x0, xzr
 8ec:	ret

00000000000008f0 <_ZN11__sanitizer16internal_strncatEPcPKcm>:
 8f0:	sub	x8, x0, #0x1
 8f4:	ldrb	w9, [x8, #1]!
 8f8:	cbnz	w9, 8f4 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x4>
 8fc:	mov	x9, xzr
 900:	cbz	x2, 920 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x30>
 904:	ldrb	w10, [x1, x9]
 908:	cbz	w10, 920 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x30>
 90c:	strb	w10, [x8, x9]
 910:	add	x9, x9, #0x1
 914:	cmp	x2, x9
 918:	b.ne	904 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x14>  // b.any
 91c:	mov	x9, x2
 920:	strb	wzr, [x8, x9]
 924:	ret

0000000000000928 <_ZN11__sanitizer16internal_strlcpyEPcPKcm>:
 928:	mov	x9, xzr
 92c:	ldrb	w8, [x1, x9]
 930:	add	x9, x9, #0x1
 934:	cbnz	w8, 92c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x4>
 938:	sub	x8, x9, #0x1
 93c:	cmp	x8, x2
 940:	b.cs	97c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x54>  // b.hs, b.nlast
 944:	cmp	x0, x1
 948:	b.cs	9dc <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0xb4>  // b.hs, b.nlast
 94c:	cmp	x9, #0x1
 950:	b.lt	ab4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x18c>  // b.tstop
 954:	cmp	x9, #0x20
 958:	b.cc	974 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x4c>  // b.lo, b.ul, b.last
 95c:	add	x10, x1, x9
 960:	cmp	x10, x0
 964:	b.ls	a40 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x118>  // b.plast
 968:	add	x10, x0, x9
 96c:	cmp	x10, x1
 970:	b.ls	a40 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x118>  // b.plast
 974:	mov	x10, xzr
 978:	b	aa0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x178>
 97c:	cbz	x2, ab4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x18c>
 980:	cmp	x0, x1
 984:	sub	x9, x2, #0x1
 988:	b.cs	a0c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0xe4>  // b.hs, b.nlast
 98c:	cmp	x9, #0x1
 990:	b.lt	a34 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10c>  // b.tstop
 994:	cmp	x9, #0x20
 998:	b.cc	9b4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x8c>  // b.lo, b.ul, b.last
 99c:	add	x10, x1, x9
 9a0:	cmp	x10, x0
 9a4:	b.ls	a6c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x144>  // b.plast
 9a8:	add	x10, x0, x9
 9ac:	cmp	x10, x1
 9b0:	b.ls	a6c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x144>  // b.plast
 9b4:	mov	x10, xzr
 9b8:	mvn	x12, x10
 9bc:	add	x11, x0, x10
 9c0:	add	x12, x12, x2
 9c4:	add	x10, x1, x10
 9c8:	ldrb	w13, [x10], #1
 9cc:	subs	x12, x12, #0x1
 9d0:	strb	w13, [x11], #1
 9d4:	b.ne	9c8 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0xa0>  // b.any
 9d8:	b	a34 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10c>
 9dc:	b.ls	ab4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x18c>  // b.plast
 9e0:	cmp	x9, #0x1
 9e4:	b.lt	ab4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x18c>  // b.tstop
 9e8:	mov	x9, x8
 9ec:	ldrb	w10, [x1, x9]
 9f0:	add	x11, x9, #0x1
 9f4:	sub	x12, x9, #0x1
 9f8:	cmp	x11, #0x1
 9fc:	strb	w10, [x0, x9]
 a00:	mov	x9, x12
 a04:	b.gt	9ec <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0xc4>
 a08:	b	ab4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x18c>
 a0c:	b.ls	a34 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10c>  // b.plast
 a10:	cmp	x9, #0x1
 a14:	b.lt	a34 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10c>  // b.tstop
 a18:	sub	x10, x0, #0x2
 a1c:	sub	x11, x1, #0x2
 a20:	ldrb	w12, [x11, x2]
 a24:	strb	w12, [x10, x2]
 a28:	sub	x2, x2, #0x1
 a2c:	cmp	x2, #0x1
 a30:	b.gt	a20 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0xf8>
 a34:	strb	wzr, [x0, x9]
 a38:	mov	x0, x8
 a3c:	ret
 a40:	and	x10, x9, #0xffffffffffffffe0
 a44:	add	x11, x1, #0x10
 a48:	add	x12, x0, #0x10
 a4c:	mov	x13, x10
 a50:	ldp	q0, q1, [x11, #-16]
 a54:	add	x11, x11, #0x20
 a58:	subs	x13, x13, #0x20
 a5c:	stp	q0, q1, [x12, #-16]
 a60:	add	x12, x12, #0x20
 a64:	b.ne	a50 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x128>  // b.any
 a68:	b	aac <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x184>
 a6c:	and	x10, x9, #0xffffffffffffffe0
 a70:	add	x11, x1, #0x10
 a74:	add	x12, x0, #0x10
 a78:	mov	x13, x10
 a7c:	ldp	q0, q1, [x11, #-16]
 a80:	add	x11, x11, #0x20
 a84:	subs	x13, x13, #0x20
 a88:	stp	q0, q1, [x12, #-16]
 a8c:	add	x12, x12, #0x20
 a90:	b.ne	a7c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x154>  // b.any
 a94:	cmp	x9, x10
 a98:	b.eq	a34 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10c>  // b.none
 a9c:	b	9b8 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x90>
 aa0:	ldrb	w11, [x1, x10]
 aa4:	strb	w11, [x0, x10]
 aa8:	add	x10, x10, #0x1
 aac:	cmp	x9, x10
 ab0:	b.ne	aa0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x178>  // b.any
 ab4:	mov	x0, x8
 ab8:	ret

0000000000000abc <_ZN11__sanitizer16internal_strncpyEPcPKcm>:
 abc:	mov	x10, xzr
 ac0:	cbz	x2, ae0 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x24>
 ac4:	ldrb	w8, [x1, x10]
 ac8:	cbz	w8, ae0 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x24>
 acc:	strb	w8, [x0, x10]
 ad0:	add	x10, x10, #0x1
 ad4:	cmp	x2, x10
 ad8:	b.ne	ac4 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x8>  // b.any
 adc:	mov	x10, x2
 ae0:	add	x8, x0, x10
 ae4:	sub	x9, x2, x10
 ae8:	orr	w11, w9, w8
 aec:	tst	x11, #0xf
 af0:	b.eq	b08 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x4c>  // b.none
 af4:	cbz	x9, b68 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xac>
 af8:	subs	x9, x9, #0x1
 afc:	strb	wzr, [x8], #1
 b00:	b.ne	af8 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x3c>  // b.any
 b04:	b	b68 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xac>
 b08:	and	x11, x9, #0xfffffffffffffff8
 b0c:	add	x9, x8, x11
 b10:	cmp	x9, x8
 b14:	b.ls	b68 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xac>  // b.plast
 b18:	sub	x11, x11, #0x1
 b1c:	cmp	x11, #0x30
 b20:	b.cc	b5c <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xa0>  // b.lo, b.ul, b.last
 b24:	lsr	x11, x11, #4
 b28:	add	x12, x10, x0
 b2c:	add	x10, x11, #0x1
 b30:	and	x11, x10, #0x1ffffffffffffffc
 b34:	add	x12, x12, #0x20
 b38:	add	x8, x8, x11, lsl #4
 b3c:	movi	v0.2d, #0x0
 b40:	mov	x13, x11
 b44:	stp	q0, q0, [x12, #-32]
 b48:	stp	q0, q0, [x12], #64
 b4c:	subs	x13, x13, #0x4
 b50:	b.ne	b44 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x88>  // b.any
 b54:	cmp	x10, x11
 b58:	b.eq	b68 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xac>  // b.none
 b5c:	stp	xzr, xzr, [x8], #16
 b60:	cmp	x8, x9
 b64:	b.cc	b5c <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xa0>  // b.lo, b.ul, b.last
 b68:	ret

0000000000000b6c <_ZN11__sanitizer15internal_strstrEPKcS1_>:
 b6c:	mov	x8, xzr
 b70:	ldrb	w9, [x0, x8]
 b74:	mov	x10, x8
 b78:	add	x8, x8, #0x1
 b7c:	cbnz	w9, b70 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x4>
 b80:	mov	x11, xzr
 b84:	ldrb	w9, [x1, x11]
 b88:	add	x11, x11, #0x1
 b8c:	cbnz	w9, b84 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x18>
 b90:	sub	x9, x11, #0x1
 b94:	cmp	x10, x9
 b98:	b.cs	ba4 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x38>  // b.hs, b.nlast
 b9c:	mov	x0, xzr
 ba0:	ret
 ba4:	cmp	x11, #0x1
 ba8:	b.ne	bb0 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x44>  // b.any
 bac:	ret
 bb0:	mov	x10, xzr
 bb4:	sub	x11, x8, x11
 bb8:	mov	x12, x0
 bbc:	mov	x13, xzr
 bc0:	add	x8, x0, x10
 bc4:	ldrb	w14, [x12, x13]
 bc8:	ldrb	w15, [x1, x13]
 bcc:	cmp	w14, w15
 bd0:	b.ne	be4 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x78>  // b.any
 bd4:	add	x13, x13, #0x1
 bd8:	cmp	x9, x13
 bdc:	b.ne	bc4 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x58>  // b.any
 be0:	b	bf8 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x8c>
 be4:	add	x10, x10, #0x1
 be8:	mov	x8, xzr
 bec:	cmp	x10, x11
 bf0:	add	x12, x12, #0x1
 bf4:	b.ls	bbc <_ZN11__sanitizer15internal_strstrEPKcS1_+0x50>  // b.plast
 bf8:	mov	x0, x8
 bfc:	ret

0000000000000c00 <_ZN11__sanitizer11mem_is_zeroEPKcm>:
 c00:	str	x30, [sp, #-16]!
 c04:	mov	x8, #0x1                   	// #1
 c08:	movk	x8, #0x100, lsl #32
 c0c:	mov	x3, x1
 c10:	cmp	x1, x8
 c14:	b.cs	dd0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1d0>  // b.hs, b.nlast
 c18:	add	x12, x0, #0x7
 c1c:	add	x8, x0, x3
 c20:	and	x11, x12, #0xfffffffffffffff8
 c24:	mov	x10, xzr
 c28:	cmp	x11, x0
 c2c:	and	x9, x8, #0xfffffffffffffff8
 c30:	b.ls	cc8 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xc8>  // b.plast
 c34:	cbz	x3, cc8 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xc8>
 c38:	add	x10, x0, #0x1
 c3c:	cmp	x8, x10
 c40:	mvn	x13, x0
 c44:	csinc	x15, x8, x0, hi  // hi = pmore
 c48:	add	x14, x11, x13
 c4c:	add	x13, x15, x13
 c50:	cmp	x14, x13
 c54:	csel	x13, x14, x13, cc  // cc = lo, ul, last
 c58:	add	x14, x13, #0x1
 c5c:	cmp	x14, #0x1
 c60:	b.hi	c70 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x70>  // b.pmore
 c64:	mov	x10, xzr
 c68:	mov	x13, x0
 c6c:	b	ca8 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xa8>
 c70:	and	x17, x14, #0xfffffffffffffffe
 c74:	mov	x15, xzr
 c78:	mov	x16, xzr
 c7c:	add	x13, x0, x17
 c80:	mov	x18, x17
 c84:	ldurb	w1, [x10, #-1]
 c88:	ldrb	w2, [x10], #2
 c8c:	subs	x18, x18, #0x2
 c90:	orr	x15, x15, x1
 c94:	orr	x16, x16, x2
 c98:	b.ne	c84 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x84>  // b.any
 c9c:	cmp	x17, x14
 ca0:	orr	x10, x16, x15
 ca4:	b.eq	cc8 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xc8>  // b.none
 ca8:	add	x13, x13, #0x1
 cac:	ldurb	w14, [x13, #-1]
 cb0:	cmp	x13, x11
 cb4:	orr	x10, x10, x14
 cb8:	b.cs	cc8 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xc8>  // b.hs, b.nlast
 cbc:	cmp	x13, x8
 cc0:	add	x13, x13, #0x1
 cc4:	b.cc	cac <_ZN11__sanitizer11mem_is_zeroEPKcm+0xac>  // b.lo, b.ul, b.last
 cc8:	cmp	x11, x9
 ccc:	b.cs	d50 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x150>  // b.hs, b.nlast
 cd0:	orr	x12, x12, #0x7
 cd4:	eor	x12, x12, #0xfffffffffffffff8
 cd8:	add	x12, x9, x12
 cdc:	cmp	x12, #0x17
 ce0:	b.hi	cec <_ZN11__sanitizer11mem_is_zeroEPKcm+0xec>  // b.pmore
 ce4:	mov	x12, x11
 ce8:	b	d40 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x140>
 cec:	lsr	x12, x12, #3
 cf0:	movi	v1.2d, #0x0
 cf4:	add	x13, x12, #0x1
 cf8:	mov	v1.d[0], x10
 cfc:	and	x10, x13, #0x3ffffffffffffffc
 d00:	movi	v0.2d, #0x0
 d04:	add	x12, x11, x10, lsl #3
 d08:	add	x11, x11, #0x10
 d0c:	mov	x14, x10
 d10:	ldp	q2, q3, [x11, #-16]
 d14:	subs	x14, x14, #0x4
 d18:	add	x11, x11, #0x20
 d1c:	orr	v1.16b, v2.16b, v1.16b
 d20:	orr	v0.16b, v3.16b, v0.16b
 d24:	b.ne	d10 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x110>  // b.any
 d28:	orr	v0.16b, v0.16b, v1.16b
 d2c:	dup	v1.2d, v0.d[1]
 d30:	orr	v0.16b, v0.16b, v1.16b
 d34:	cmp	x13, x10
 d38:	fmov	x10, d0
 d3c:	b.eq	d50 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x150>  // b.none
 d40:	ldr	x11, [x12], #8
 d44:	cmp	x12, x9
 d48:	orr	x10, x11, x10
 d4c:	b.cc	d40 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x140>  // b.lo, b.ul, b.last
 d50:	cmp	x9, x0
 d54:	b.cc	dc0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1c0>  // b.lo, b.ul, b.last
 d58:	cmp	x8, x9
 d5c:	b.ls	dc0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1c0>  // b.plast
 d60:	sub	x11, x3, x9
 d64:	add	x12, x0, x11
 d68:	cmp	x12, #0x2
 d6c:	b.cs	d78 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x178>  // b.hs, b.nlast
 d70:	mov	x11, x9
 d74:	b	db0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1b0>
 d78:	and	x14, x12, #0xfffffffffffffffe
 d7c:	mov	x13, xzr
 d80:	add	x11, x9, x14
 d84:	add	x9, x9, #0x1
 d88:	mov	x15, x14
 d8c:	ldurb	w16, [x9, #-1]
 d90:	ldrb	w17, [x9], #2
 d94:	subs	x15, x15, #0x2
 d98:	orr	x10, x10, x16
 d9c:	orr	x13, x13, x17
 da0:	b.ne	d8c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x18c>  // b.any
 da4:	cmp	x14, x12
 da8:	orr	x10, x13, x10
 dac:	b.eq	dc0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1c0>  // b.none
 db0:	ldrb	w9, [x11], #1
 db4:	cmp	x8, x11
 db8:	orr	x10, x10, x9
 dbc:	b.ne	db0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1b0>  // b.any
 dc0:	cmp	x10, #0x0
 dc4:	cset	w0, eq  // eq = none
 dc8:	ldr	x30, [sp], #16
 dcc:	ret
 dd0:	adrp	x0, 0 <_ZN11__sanitizer14internal_atollEPKc>
 dd4:	adrp	x2, 0 <_ZN11__sanitizer14internal_atollEPKc>
 dd8:	add	x0, x0, #0x0
 ddc:	add	x2, x2, #0x0
 de0:	mov	w1, #0x106                 	// #262
 de4:	mov	x4, #0x10000000000         	// #1099511627776
 de8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_libignore.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>:
   0:	mov	w8, #0x4810                	// #18448
   4:	add	x0, x0, x8
   8:	b	0 <_ZN11__sanitizer13BlockingMutexC1Ev>

000000000000000c <_ZN11__sanitizer9LibIgnore17AddIgnoredLibraryEPKc>:
   c:	str	x30, [sp, #-48]!
  10:	stp	x22, x21, [sp, #16]
  14:	stp	x20, x19, [sp, #32]
  18:	mov	w8, #0x4810                	// #18448
  1c:	add	x19, x0, x8
  20:	mov	x20, x0
  24:	mov	x0, x19
  28:	mov	x21, x1
  2c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
  30:	ldr	x22, [x20, #18536]
  34:	cmp	x22, #0x400
  38:	b.cs	78 <_ZN11__sanitizer9LibIgnore17AddIgnoredLibraryEPKc+0x6c>  // b.hs, b.nlast
  3c:	add	x8, x22, #0x1
  40:	mov	x0, x21
  44:	str	x8, [x20, #18536]
  48:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
  4c:	add	x8, x20, x22, lsl #5
  50:	mov	w9, #0x4888                	// #18568
  54:	str	x0, [x8, #18544]
  58:	str	xzr, [x8, #18560]
  5c:	str	xzr, [x8, #18552]
  60:	strb	wzr, [x8, x9]
  64:	mov	x0, x19
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldp	x22, x21, [sp, #16]
  70:	ldr	x30, [sp], #48
  74:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
  78:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  7c:	ldr	x8, [x8]
  80:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
  84:	add	x0, x0, #0x0
  88:	mov	w2, #0x400                 	// #1024
  8c:	ldr	x1, [x8]
  90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  94:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000098 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc>:
  98:	sub	sp, sp, #0xb0
  9c:	stp	x29, x30, [sp, #80]
  a0:	stp	x28, x27, [sp, #96]
  a4:	stp	x26, x25, [sp, #112]
  a8:	stp	x24, x23, [sp, #128]
  ac:	stp	x22, x21, [sp, #144]
  b0:	stp	x20, x19, [sp, #160]
  b4:	mov	w8, #0x4810                	// #18448
  b8:	add	x23, x0, x8
  bc:	mov	x20, x0
  c0:	mov	x0, x23
  c4:	mov	x21, x1
  c8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
  cc:	add	x0, sp, #0x30
  d0:	mov	w1, #0x1000                	// #4096
  d4:	stp	xzr, xzr, [sp, #56]
  d8:	str	xzr, [sp, #48]
  dc:	bl	0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
  e0:	ldr	x8, [sp, #64]
  e4:	cmp	x8, #0xfff
  e8:	b.hi	120 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x88>  // b.pmore
  ec:	ldr	x9, [sp, #56]
  f0:	cmp	x9, #0xfff
  f4:	b.hi	108 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x70>  // b.pmore
  f8:	add	x0, sp, #0x30
  fc:	mov	w1, #0x1000                	// #4096
 100:	bl	0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 104:	ldr	x8, [sp, #64]
 108:	ldr	x9, [sp, #48]
 10c:	mov	w10, #0x1000                	// #4096
 110:	sub	x2, x10, x8
 114:	mov	w1, wzr
 118:	add	x0, x9, x8
 11c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 120:	adrp	x8, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 124:	ldr	q0, [x8]
 128:	ldr	x8, [sp, #48]
 12c:	str	q0, [sp, #64]
 130:	strb	wzr, [x8]
 134:	cbz	x21, 1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>
 138:	ldr	x8, [sp, #64]
 13c:	ldr	x1, [sp, #48]
 140:	mov	x0, x21
 144:	sub	x2, x8, #0x1
 148:	bl	0 <_ZN11__sanitizer17internal_readlinkEPKcPcm>
 14c:	cbz	x0, 1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>
 150:	ldr	x8, [sp, #64]
 154:	cbz	x8, 510 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x478>
 158:	ldr	x8, [sp, #48]
 15c:	ldrb	w8, [x8]
 160:	cbz	w8, 1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>
 164:	ldr	x8, [x20, #18536]
 168:	cbz	x8, 1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>
 16c:	mov	w8, #0x4888                	// #18568
 170:	mov	x19, xzr
 174:	add	x22, x20, x8
 178:	b	190 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xf8>
 17c:	ldr	x8, [x20, #18536]
 180:	add	x19, x19, #0x1
 184:	add	x22, x22, #0x20
 188:	cmp	x19, x8
 18c:	b.cs	1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>  // b.hs, b.nlast
 190:	ldrb	w8, [x22]
 194:	cbnz	w8, 17c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xe4>
 198:	ldur	x8, [x22, #-8]
 19c:	cbnz	x8, 17c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xe4>
 1a0:	ldur	x0, [x22, #-24]
 1a4:	mov	x1, x21
 1a8:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 1ac:	tbz	w0, #0, 17c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xe4>
 1b0:	ldr	x0, [sp, #48]
 1b4:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 1b8:	stur	x0, [x22, #-8]
 1bc:	b	17c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xe4>
 1c0:	add	x0, sp, #0x10
 1c4:	str	x23, [sp, #8]
 1c8:	strb	wzr, [sp, #40]
 1cc:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
 1d0:	ldr	x8, [x20, #18536]
 1d4:	cbz	x8, 330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x298>
 1d8:	mov	x23, xzr
 1dc:	b	1f0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x158>
 1e0:	ldr	x8, [x20, #18536]
 1e4:	add	x23, x23, #0x1
 1e8:	cmp	x23, x8
 1ec:	b.cs	330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x298>  // b.hs, b.nlast
 1f0:	ldr	x8, [sp, #32]
 1f4:	add	x25, x20, x23, lsl #5
 1f8:	mov	w9, #0x4870                	// #18544
 1fc:	add	x19, x25, x9
 200:	mov	w29, wzr
 204:	cbz	x8, 2f8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x260>
 208:	ldr	x27, [sp, #16]
 20c:	mov	w9, #0x4880                	// #18560
 210:	add	x28, x25, x9
 214:	mov	w9, #0x4888                	// #18568
 218:	add	x26, x25, x9
 21c:	mov	w9, #0x48                  	// #72
 220:	madd	x21, x8, x9, x27
 224:	mov	w8, #0x4878                	// #18552
 228:	add	x24, x25, x8
 22c:	b	23c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1a4>
 230:	add	x27, x27, #0x48
 234:	cmp	x27, x21
 238:	b.eq	2f8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x260>  // b.none
 23c:	ldr	x22, [x27, #56]
 240:	cbnz	x22, 250 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b8>
 244:	b	230 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x198>
 248:	ldr	x22, [x22]
 24c:	cbz	x22, 230 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x198>
 250:	ldrb	w8, [x22, #24]
 254:	cbz	w8, 248 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b0>
 258:	ldr	x0, [x19]
 25c:	ldr	x1, [x27]
 260:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 264:	tbz	w0, #0, 27c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1e4>
 268:	tbnz	w29, #0, 4b0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x418>
 26c:	ldrb	w8, [x26]
 270:	cbz	w8, 294 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1fc>
 274:	mov	w29, #0x1                   	// #1
 278:	b	248 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b0>
 27c:	ldr	x0, [x28]
 280:	cbz	x0, 248 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b0>
 284:	ldr	x1, [x27]
 288:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 28c:	cbnz	w0, 248 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b0>
 290:	b	268 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1d0>
 294:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 298:	ldr	x8, [x8]
 29c:	ldr	w8, [x8]
 2a0:	cbz	w8, 2b8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x220>
 2a4:	ldr	x1, [x19]
 2a8:	ldr	x2, [x27]
 2ac:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 2b0:	add	x0, x0, #0x0
 2b4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2b8:	mov	w8, #0x1                   	// #1
 2bc:	strb	w8, [x26]
 2c0:	ldr	x0, [x27]
 2c4:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 2c8:	str	x0, [x24]
 2cc:	ldr	x3, [x20]
 2d0:	cmp	x3, #0x80
 2d4:	b.cs	4f4 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x45c>  // b.hs, b.nlast
 2d8:	ldur	q0, [x22, #8]
 2dc:	add	x8, x20, x3, lsl #4
 2e0:	add	x9, x3, #0x1
 2e4:	mov	w29, #0x1                   	// #1
 2e8:	stur	q0, [x8, #8]
 2ec:	dmb	ish
 2f0:	str	x9, [x20]
 2f4:	b	230 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x198>
 2f8:	tbnz	w29, #0, 1e0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x148>
 2fc:	mov	w8, #0x4888                	// #18568
 300:	ldrb	w8, [x25, x8]
 304:	cbz	w8, 1e0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x148>
 308:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 30c:	ldr	x8, [x8]
 310:	add	x9, x20, x23, lsl #5
 314:	ldr	x2, [x9, #18552]
 318:	ldr	x3, [x19]
 31c:	ldr	x1, [x8]
 320:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 324:	add	x0, x0, #0x0
 328:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 32c:	bl	0 <_ZN11__sanitizer3DieEv>
 330:	mov	w8, #0xc870                	// #51312
 334:	adrp	x22, 0 <_ZN11__sanitizer17current_verbosityE>
 338:	ldrb	w8, [x20, x8]
 33c:	ldr	x22, [x22]
 340:	cbz	w8, 458 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3c0>
 344:	ldr	x8, [sp, #32]
 348:	cbz	x8, 458 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3c0>
 34c:	ldr	x19, [sp, #16]
 350:	mov	w9, #0x48                  	// #72
 354:	adrp	x21, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 358:	add	x23, x20, #0x818
 35c:	madd	x24, x8, x9, x19
 360:	add	x21, x21, #0x0
 364:	b	374 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2dc>
 368:	add	x19, x19, #0x48
 36c:	cmp	x19, x24
 370:	b.eq	458 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3c0>  // b.none
 374:	ldrb	w8, [x19, #44]
 378:	cbz	w8, 368 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2d0>
 37c:	ldr	x25, [x19, #56]
 380:	cbnz	x25, 390 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2f8>
 384:	b	368 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2d0>
 388:	ldr	x25, [x25]
 38c:	cbz	x25, 368 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2d0>
 390:	ldrb	w8, [x25, #24]
 394:	cbz	w8, 388 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2f0>
 398:	ldr	x8, [x25, #8]
 39c:	ldr	x9, [x20, #2056]
 3a0:	dmb	ish
 3a4:	cbz	x9, 418 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x380>
 3a8:	mov	x10, x23
 3ac:	b	3bc <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x324>
 3b0:	subs	x9, x9, #0x1
 3b4:	add	x10, x10, #0x10
 3b8:	b.eq	418 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x380>  // b.none
 3bc:	ldur	x11, [x10, #-8]
 3c0:	cmp	x11, x8
 3c4:	b.hi	3b0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x318>  // b.pmore
 3c8:	ldr	x11, [x10]
 3cc:	cmp	x11, x8
 3d0:	b.ls	3b0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x318>  // b.plast
 3d4:	ldr	x9, [x25, #16]
 3d8:	ldr	x8, [x20, #2056]
 3dc:	dmb	ish
 3e0:	cbz	x8, 418 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x380>
 3e4:	sub	x9, x9, #0x1
 3e8:	mov	x10, x23
 3ec:	b	3fc <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x364>
 3f0:	subs	x8, x8, #0x1
 3f4:	add	x10, x10, #0x10
 3f8:	b.eq	418 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x380>  // b.none
 3fc:	ldur	x11, [x10, #-8]
 400:	cmp	x11, x9
 404:	b.hi	3f0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x358>  // b.pmore
 408:	ldr	x11, [x10]
 40c:	cmp	x11, x9
 410:	b.ls	3f0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x358>  // b.plast
 414:	b	388 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2f0>
 418:	ldr	w8, [x22]
 41c:	cbz	w8, 430 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x398>
 420:	ldp	x1, x2, [x25, #8]
 424:	ldr	x3, [x19]
 428:	mov	x0, x21
 42c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 430:	ldr	x3, [x20, #2056]
 434:	cmp	x3, #0x400
 438:	b.cs	4d8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x440>  // b.hs, b.nlast
 43c:	ldur	q0, [x25, #8]
 440:	add	x8, x20, x3, lsl #4
 444:	add	x9, x3, #0x1
 448:	str	q0, [x8, #2064]
 44c:	dmb	ish
 450:	str	x9, [x20, #2056]
 454:	b	388 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2f0>
 458:	ldr	x8, [sp, #32]
 45c:	cbz	x8, 480 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3e8>
 460:	ldr	x20, [sp, #16]
 464:	add	x8, x8, x8, lsl #3
 468:	lsl	x19, x8, #3
 46c:	mov	x0, x20
 470:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 474:	subs	x19, x19, #0x48
 478:	add	x20, x20, #0x48
 47c:	b.ne	46c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3d4>  // b.any
 480:	ldp	x0, x1, [sp, #48]
 484:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 488:	ldr	x0, [sp, #8]
 48c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 490:	ldp	x20, x19, [sp, #160]
 494:	ldp	x22, x21, [sp, #144]
 498:	ldp	x24, x23, [sp, #128]
 49c:	ldp	x26, x25, [sp, #112]
 4a0:	ldp	x28, x27, [sp, #96]
 4a4:	ldp	x29, x30, [sp, #80]
 4a8:	add	sp, sp, #0xb0
 4ac:	ret
 4b0:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 4b4:	ldr	x8, [x8]
 4b8:	ldr	x2, [x19]
 4bc:	ldr	x3, [x24]
 4c0:	ldr	x4, [x27]
 4c4:	ldr	x1, [x8]
 4c8:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 4cc:	add	x0, x0, #0x0
 4d0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 4d4:	bl	0 <_ZN11__sanitizer3DieEv>
 4d8:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 4dc:	adrp	x2, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 4e0:	add	x0, x0, #0x0
 4e4:	add	x2, x2, #0x0
 4e8:	mov	w1, #0x70                  	// #112
 4ec:	mov	w4, #0x400                 	// #1024
 4f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4f4:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 4f8:	adrp	x2, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 4fc:	add	x0, x0, #0x0
 500:	add	x2, x2, #0x0
 504:	mov	w1, #0x53                  	// #83
 508:	mov	w4, #0x80                  	// #128
 50c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 510:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 514:	adrp	x2, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 518:	add	x0, x0, #0x0
 51c:	add	x2, x2, #0x0
 520:	mov	w1, #0x1c5                 	// #453
 524:	mov	x3, xzr
 528:	mov	x4, xzr
 52c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000530 <_ZN11__sanitizer9LibIgnore17OnLibraryUnloadedEv>:
 530:	mov	x1, xzr
 534:	b	98 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer16internal_iserrorEmPi>:
       0:	cmn	x0, #0xfff
       4:	b.cc	1c <_ZN11__sanitizer16internal_iserrorEmPi+0x1c>  // b.lo, b.ul, b.last
       8:	cbz	x1, 14 <_ZN11__sanitizer16internal_iserrorEmPi+0x14>
       c:	neg	w8, w0
      10:	str	w8, [x1]
      14:	mov	w0, #0x1                   	// #1
      18:	ret
      1c:	mov	w0, wzr
      20:	ret

0000000000000024 <_ZN11__sanitizer13internal_mmapEPvmiiiy>:
      24:	mov	w8, #0xde                  	// #222
      28:	sxtw	x2, w2
      2c:	sxtw	x3, w3
      30:	sxtw	x4, w4
      34:	svc	#0x0
      38:	ret

000000000000003c <_ZN11__sanitizer15internal_munmapEPvm>:
      3c:	mov	w8, #0xd7                  	// #215
      40:	svc	#0x0
      44:	ret

0000000000000048 <_ZN11__sanitizer17internal_mprotectEPvmi>:
      48:	mov	w8, #0xe2                  	// #226
      4c:	sxtw	x2, w2
      50:	svc	#0x0
      54:	ret

0000000000000058 <_ZN11__sanitizer14internal_closeEi>:
      58:	mov	w8, #0x39                  	// #57
      5c:	sxtw	x0, w0
      60:	svc	#0x0
      64:	ret

0000000000000068 <_ZN11__sanitizer13internal_openEPKci>:
      68:	mov	x9, x0
      6c:	mov	x0, #0xffffffffffffff9c    	// #-100
      70:	sxtw	x2, w1
      74:	mov	w8, #0x38                  	// #56
      78:	mov	x1, x9
      7c:	svc	#0x0
      80:	ret

0000000000000084 <_ZN11__sanitizer13internal_openEPKcij>:
      84:	mov	x9, x0
      88:	sxtw	x10, w1
      8c:	mov	x0, #0xffffffffffffff9c    	// #-100
      90:	mov	w3, w2
      94:	mov	w8, #0x38                  	// #56
      98:	mov	x1, x9
      9c:	mov	x2, x10
      a0:	svc	#0x0
      a4:	ret

00000000000000a8 <_ZN11__sanitizer13internal_readEiPvm>:
      a8:	sxtw	x9, w0
      ac:	mov	x0, x9
      b0:	mov	w8, #0x3f                  	// #63
      b4:	svc	#0x0
      b8:	cmn	x0, #0xfff
      bc:	b.cc	c8 <_ZN11__sanitizer13internal_readEiPvm+0x20>  // b.lo, b.ul, b.last
      c0:	cmn	w0, #0x4
      c4:	b.eq	ac <_ZN11__sanitizer13internal_readEiPvm+0x4>  // b.none
      c8:	ret

00000000000000cc <_ZN11__sanitizer14internal_writeEiPKvm>:
      cc:	sxtw	x9, w0
      d0:	mov	x0, x9
      d4:	mov	w8, #0x40                  	// #64
      d8:	svc	#0x0
      dc:	cmn	x0, #0xfff
      e0:	b.cc	ec <_ZN11__sanitizer14internal_writeEiPKvm+0x20>  // b.lo, b.ul, b.last
      e4:	cmn	w0, #0x4
      e8:	b.eq	d0 <_ZN11__sanitizer14internal_writeEiPKvm+0x4>  // b.none
      ec:	ret

00000000000000f0 <_ZN11__sanitizer18internal_ftruncateEim>:
      f0:	sxtw	x9, w0
      f4:	mov	x0, x9
      f8:	mov	w8, #0x2e                  	// #46
      fc:	svc	#0x0
     100:	cmn	x0, #0xfff
     104:	b.cc	110 <_ZN11__sanitizer18internal_ftruncateEim+0x20>  // b.lo, b.ul, b.last
     108:	cmn	w0, #0x4
     10c:	b.eq	f4 <_ZN11__sanitizer18internal_ftruncateEim+0x4>  // b.none
     110:	ret

0000000000000114 <_ZN11__sanitizer13internal_statEPKcPv>:
     114:	mov	x2, x1
     118:	mov	x1, x0
     11c:	mov	x0, #0xffffffffffffff9c    	// #-100
     120:	mov	w8, #0x4f                  	// #79
     124:	mov	x3, xzr
     128:	svc	#0x0
     12c:	ret

0000000000000130 <_ZN11__sanitizer14internal_lstatEPKcPv>:
     130:	mov	x2, x1
     134:	mov	x1, x0
     138:	mov	x0, #0xffffffffffffff9c    	// #-100
     13c:	mov	w8, #0x4f                  	// #79
     140:	mov	w3, #0x100                 	// #256
     144:	svc	#0x0
     148:	ret

000000000000014c <_ZN11__sanitizer14internal_fstatEiPv>:
     14c:	mov	w8, #0x50                  	// #80
     150:	sxtw	x0, w0
     154:	svc	#0x0
     158:	ret

000000000000015c <_ZN11__sanitizer17internal_filesizeEi>:
     15c:	sub	sp, sp, #0x80
     160:	mov	x1, sp
     164:	sxtw	x0, w0
     168:	mov	w8, #0x50                  	// #80
     16c:	svc	#0x0
     170:	ldr	x8, [sp, #48]
     174:	cmp	x0, #0x0
     178:	csinv	x0, x8, xzr, eq  // eq = none
     17c:	add	sp, sp, #0x80
     180:	ret

0000000000000184 <_ZN11__sanitizer12internal_dupEi>:
     184:	mov	w8, #0x17                  	// #23
     188:	sxtw	x0, w0
     18c:	svc	#0x0
     190:	ret

0000000000000194 <_ZN11__sanitizer13internal_dup2Eii>:
     194:	mov	w8, #0x18                  	// #24
     198:	sxtw	x0, w0
     19c:	sxtw	x1, w1
     1a0:	mov	x2, xzr
     1a4:	svc	#0x0
     1a8:	ret

00000000000001ac <_ZN11__sanitizer17internal_readlinkEPKcPcm>:
     1ac:	mov	x3, x2
     1b0:	mov	x2, x1
     1b4:	mov	x1, x0
     1b8:	mov	x0, #0xffffffffffffff9c    	// #-100
     1bc:	mov	w8, #0x4e                  	// #78
     1c0:	svc	#0x0
     1c4:	ret

00000000000001c8 <_ZN11__sanitizer15internal_unlinkEPKc>:
     1c8:	mov	x1, x0
     1cc:	mov	x0, #0xffffffffffffff9c    	// #-100
     1d0:	mov	w8, #0x23                  	// #35
     1d4:	mov	x2, xzr
     1d8:	svc	#0x0
     1dc:	ret

00000000000001e0 <_ZN11__sanitizer15internal_renameEPKcS1_>:
     1e0:	mov	x3, x1
     1e4:	mov	x1, x0
     1e8:	mov	x0, #0xffffffffffffff9c    	// #-100
     1ec:	mov	w8, #0x26                  	// #38
     1f0:	mov	x2, #0xffffffffffffff9c    	// #-100
     1f4:	svc	#0x0
     1f8:	ret

00000000000001fc <_ZN11__sanitizer20internal_sched_yieldEv>:
     1fc:	mov	w8, #0x7c                  	// #124
     200:	svc	#0x0
     204:	ret

0000000000000208 <_ZN11__sanitizer14internal__exitEi>:
     208:	str	x30, [sp, #-16]!
     20c:	mov	w8, #0x5e                  	// #94
     210:	sxtw	x0, w0
     214:	svc	#0x0
     218:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000021c <_ZN11__sanitizer14internal_sleepEj>:
     21c:	sub	sp, sp, #0x10
     220:	mov	w8, w0
     224:	mov	x0, sp
     228:	stp	x8, xzr, [sp]
     22c:	mov	x1, sp
     230:	mov	w8, #0x65                  	// #101
     234:	svc	#0x0
     238:	ldr	w8, [sp], #16
     23c:	cmp	w0, #0x0
     240:	csel	w0, wzr, w8, eq  // eq = none
     244:	ret

0000000000000248 <_ZN11__sanitizer15internal_execveEPKcPKPcS4_>:
     248:	mov	w8, #0xdd                  	// #221
     24c:	svc	#0x0
     250:	ret

0000000000000254 <_ZN11__sanitizer10FileExistsEPKc>:
     254:	sub	sp, sp, #0x90
     258:	stp	x30, x19, [sp, #128]
     25c:	mov	x19, x0
     260:	bl	0 <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc>
     264:	tbz	w0, #0, 278 <_ZN11__sanitizer10FileExistsEPKc+0x24>
     268:	mov	w0, wzr
     26c:	ldp	x30, x19, [sp, #128]
     270:	add	sp, sp, #0x90
     274:	ret
     278:	mov	x0, #0xffffffffffffff9c    	// #-100
     27c:	mov	x1, x19
     280:	mov	x3, xzr
     284:	mov	x2, sp
     288:	mov	w8, #0x4f                  	// #79
     28c:	svc	#0x0
     290:	ldr	w8, [sp, #16]
     294:	cmp	x0, #0x0
     298:	cset	w9, eq  // eq = none
     29c:	and	w8, w8, #0xf000
     2a0:	cmp	w8, #0x8, lsl #12
     2a4:	cset	w8, eq  // eq = none
     2a8:	and	w0, w9, w8
     2ac:	ldp	x30, x19, [sp, #128]
     2b0:	add	sp, sp, #0x90
     2b4:	ret

00000000000002b8 <_ZN11__sanitizer6GetTidEv>:
     2b8:	mov	w8, #0xb2                  	// #178
     2bc:	svc	#0x0
     2c0:	ret

00000000000002c4 <_ZN11__sanitizer6TgKillEiyi>:
     2c4:	mov	w8, #0x83                  	// #131
     2c8:	sxtw	x0, w0
     2cc:	sxtw	x2, w2
     2d0:	svc	#0x0
     2d4:	ret

00000000000002d8 <_ZN11__sanitizer8NanoTimeEv>:
     2d8:	sub	sp, sp, #0x20
     2dc:	str	x30, [sp, #16]
     2e0:	mov	x0, sp
     2e4:	mov	w2, #0x10                  	// #16
     2e8:	mov	w1, wzr
     2ec:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     2f0:	mov	x0, sp
     2f4:	mov	x1, xzr
     2f8:	mov	w8, #0xa9                  	// #169
     2fc:	svc	#0x0
     300:	ldp	x8, x9, [sp]
     304:	mov	w10, #0xca00                	// #51712
     308:	ldr	x30, [sp, #16]
     30c:	movk	w10, #0x3b9a, lsl #16
     310:	mul	x8, x8, x10
     314:	mov	w10, #0x3e8                 	// #1000
     318:	madd	x0, x9, x10, x8
     31c:	add	sp, sp, #0x20
     320:	ret

0000000000000324 <_ZN11__sanitizer22internal_clock_gettimeEiPv>:
     324:	mov	w8, #0x71                  	// #113
     328:	sxtw	x0, w0
     32c:	svc	#0x0
     330:	ret

0000000000000334 <_ZN11__sanitizer6GetEnvEPKc>:
     334:	sub	sp, sp, #0x40
     338:	stp	x30, x23, [sp, #16]
     33c:	stp	x22, x21, [sp, #32]
     340:	stp	x20, x19, [sp, #48]
     344:	adrp	x8, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     348:	ldrb	w8, [x8]
     34c:	mov	x19, x0
     350:	tbnz	w8, #0, 390 <_ZN11__sanitizer6GetEnvEPKc+0x5c>
     354:	adrp	x8, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     358:	add	x8, x8, #0x0
     35c:	mov	w9, #0x1                   	// #1
     360:	mov	x1, x8
     364:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     368:	strb	w9, [x1], #8
     36c:	add	x3, x8, #0x10
     370:	add	x0, x0, #0x0
     374:	add	x2, sp, #0x8
     378:	mov	w4, #0x4000000             	// #67108864
     37c:	mov	x5, xzr
     380:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     384:	tbnz	w0, #0, 390 <_ZN11__sanitizer6GetEnvEPKc+0x5c>
     388:	adrp	x8, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     38c:	str	xzr, [x8]
     390:	adrp	x23, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     394:	add	x23, x23, #0x0
     398:	ldr	x8, [x23]
     39c:	mov	x0, xzr
     3a0:	cbz	x8, 438 <_ZN11__sanitizer6GetEnvEPKc+0x104>
     3a4:	ldr	x8, [x23, #8]
     3a8:	cbz	x8, 438 <_ZN11__sanitizer6GetEnvEPKc+0x104>
     3ac:	mov	x0, x19
     3b0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     3b4:	adrp	x8, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     3b8:	ldr	x21, [x8]
     3bc:	ldrb	w8, [x21]
     3c0:	cbz	w8, 434 <_ZN11__sanitizer6GetEnvEPKc+0x100>
     3c4:	adrp	x8, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     3c8:	ldr	x2, [x8]
     3cc:	mov	x20, x0
     3d0:	mov	x0, x21
     3d4:	mov	w1, wzr
     3d8:	bl	0 <_ZN11__sanitizer15internal_memchrEPKvim>
     3dc:	cbz	x0, 438 <_ZN11__sanitizer6GetEnvEPKc+0x104>
     3e0:	mov	x22, x0
     3e4:	mov	x0, x21
     3e8:	mov	x1, x19
     3ec:	mov	x2, x20
     3f0:	bl	0 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
     3f4:	cbnz	w0, 404 <_ZN11__sanitizer6GetEnvEPKc+0xd0>
     3f8:	ldrb	w8, [x21, x20]
     3fc:	cmp	w8, #0x3d
     400:	b.eq	44c <_ZN11__sanitizer6GetEnvEPKc+0x118>  // b.none
     404:	ldrb	w8, [x22, #1]!
     408:	cbz	w8, 434 <_ZN11__sanitizer6GetEnvEPKc+0x100>
     40c:	ldp	x9, x8, [x23]
     410:	mov	x0, x22
     414:	mov	w1, wzr
     418:	mov	x21, x22
     41c:	sub	x8, x8, x22
     420:	add	x2, x8, x9
     424:	bl	0 <_ZN11__sanitizer15internal_memchrEPKvim>
     428:	mov	x22, x0
     42c:	cbnz	x0, 3e4 <_ZN11__sanitizer6GetEnvEPKc+0xb0>
     430:	b	438 <_ZN11__sanitizer6GetEnvEPKc+0x104>
     434:	mov	x0, xzr
     438:	ldp	x20, x19, [sp, #48]
     43c:	ldp	x22, x21, [sp, #32]
     440:	ldp	x30, x23, [sp, #16]
     444:	add	sp, sp, #0x40
     448:	ret
     44c:	add	x8, x21, x20
     450:	add	x0, x8, #0x1
     454:	b	438 <_ZN11__sanitizer6GetEnvEPKc+0x104>

0000000000000458 <_ZN11__sanitizer7GetArgvEv>:
     458:	sub	sp, sp, #0x30
     45c:	str	x30, [sp, #16]
     460:	stp	x20, x19, [sp, #32]
     464:	adrp	x8, 0 <__libc_stack_end>
     468:	ldr	x8, [x8]
     46c:	cbz	x8, 47c <_ZN11__sanitizer7GetArgvEv+0x24>
     470:	ldr	x8, [x8]
     474:	add	x19, x8, #0x8
     478:	b	58c <_ZN11__sanitizer7GetArgvEv+0x134>
     47c:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     480:	add	x1, x1, #0x0
     484:	mov	w0, #0x3e80                	// #16000
     488:	mov	w2, wzr
     48c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     490:	mov	x19, x0
     494:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     498:	add	x0, x0, #0x0
     49c:	add	x1, sp, #0x18
     4a0:	add	x2, sp, #0x8
     4a4:	mov	x3, sp
     4a8:	mov	w4, #0x100000              	// #1048576
     4ac:	mov	x5, xzr
     4b0:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     4b4:	mov	x10, x19
     4b8:	tbz	w0, #0, 500 <_ZN11__sanitizer7GetArgvEv+0xa8>
     4bc:	ldr	x9, [sp, #24]
     4c0:	mov	w8, #0x1                   	// #1
     4c4:	str	x9, [x19]
     4c8:	mov	w9, #0x1                   	// #1
     4cc:	ldr	x10, [sp, #24]
     4d0:	ldrb	w11, [x10, x8]
     4d4:	add	x8, x8, #0x1
     4d8:	cbnz	w11, 4d0 <_ZN11__sanitizer7GetArgvEv+0x78>
     4dc:	add	x11, x10, x8
     4e0:	ldrb	w12, [x11]
     4e4:	add	x10, x19, w9, uxtw #3
     4e8:	cbz	w12, 500 <_ZN11__sanitizer7GetArgvEv+0xa8>
     4ec:	cmp	w9, #0x7d0
     4f0:	str	x11, [x10]
     4f4:	b.cs	5a0 <_ZN11__sanitizer7GetArgvEv+0x148>  // b.hs, b.nlast
     4f8:	add	w9, w9, #0x1
     4fc:	b	4cc <_ZN11__sanitizer7GetArgvEv+0x74>
     500:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     504:	add	x1, x1, #0x0
     508:	mov	w0, #0x3e80                	// #16000
     50c:	mov	w2, wzr
     510:	str	xzr, [x10]
     514:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     518:	mov	x20, x0
     51c:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     520:	add	x0, x0, #0x0
     524:	add	x1, sp, #0x18
     528:	add	x2, sp, #0x8
     52c:	mov	x3, sp
     530:	mov	w4, #0x100000              	// #1048576
     534:	mov	x5, xzr
     538:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     53c:	mov	x10, x20
     540:	tbz	w0, #0, 588 <_ZN11__sanitizer7GetArgvEv+0x130>
     544:	ldr	x9, [sp, #24]
     548:	mov	w8, #0x1                   	// #1
     54c:	str	x9, [x20]
     550:	mov	w9, #0x1                   	// #1
     554:	ldr	x10, [sp, #24]
     558:	ldrb	w11, [x10, x8]
     55c:	add	x8, x8, #0x1
     560:	cbnz	w11, 558 <_ZN11__sanitizer7GetArgvEv+0x100>
     564:	add	x11, x10, x8
     568:	ldrb	w12, [x11]
     56c:	add	x10, x20, w9, uxtw #3
     570:	cbz	w12, 588 <_ZN11__sanitizer7GetArgvEv+0x130>
     574:	cmp	w9, #0x7d0
     578:	str	x11, [x10]
     57c:	b.cs	5a0 <_ZN11__sanitizer7GetArgvEv+0x148>  // b.hs, b.nlast
     580:	add	w9, w9, #0x1
     584:	b	554 <_ZN11__sanitizer7GetArgvEv+0xfc>
     588:	str	xzr, [x10]
     58c:	mov	x0, x19
     590:	ldp	x20, x19, [sp, #32]
     594:	ldr	x30, [sp, #16]
     598:	add	sp, sp, #0x30
     59c:	ret
     5a0:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5a4:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5a8:	mov	w3, w9
     5ac:	add	x0, x0, #0x0
     5b0:	add	x2, x2, #0x0
     5b4:	mov	w1, #0x243                 	// #579
     5b8:	mov	w4, #0x7cf                 	// #1999
     5bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000005c0 <_ZN11__sanitizer10GetEnvironEv>:
     5c0:	sub	sp, sp, #0x30
     5c4:	stp	x30, x19, [sp, #32]
     5c8:	adrp	x8, 0 <__libc_stack_end>
     5cc:	ldr	x8, [x8]
     5d0:	cbz	x8, 5f8 <_ZN11__sanitizer10GetEnvironEv+0x38>
     5d4:	ldr	x8, [x8]
     5d8:	ldr	x9, [x8]
     5dc:	lsl	x9, x9, #32
     5e0:	add	x8, x8, x9, asr #29
     5e4:	add	x19, x8, #0x10
     5e8:	mov	x0, x19
     5ec:	ldp	x30, x19, [sp, #32]
     5f0:	add	sp, sp, #0x30
     5f4:	ret
     5f8:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5fc:	add	x1, x1, #0x0
     600:	mov	w0, #0x3e80                	// #16000
     604:	mov	w2, wzr
     608:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     60c:	mov	x19, x0
     610:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     614:	add	x0, x0, #0x0
     618:	add	x1, sp, #0x18
     61c:	add	x2, sp, #0x10
     620:	add	x3, sp, #0x8
     624:	mov	w4, #0x100000              	// #1048576
     628:	mov	x5, xzr
     62c:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     630:	mov	x10, x19
     634:	tbz	w0, #0, 67c <_ZN11__sanitizer10GetEnvironEv+0xbc>
     638:	ldr	x9, [sp, #24]
     63c:	mov	w8, #0x1                   	// #1
     640:	str	x9, [x19]
     644:	mov	w9, #0x1                   	// #1
     648:	ldr	x10, [sp, #24]
     64c:	ldrb	w11, [x10, x8]
     650:	add	x8, x8, #0x1
     654:	cbnz	w11, 64c <_ZN11__sanitizer10GetEnvironEv+0x8c>
     658:	add	x11, x10, x8
     65c:	ldrb	w12, [x11]
     660:	add	x10, x19, w9, uxtw #3
     664:	cbz	w12, 67c <_ZN11__sanitizer10GetEnvironEv+0xbc>
     668:	cmp	w9, #0x7d0
     66c:	str	x11, [x10]
     670:	b.cs	718 <_ZN11__sanitizer10GetEnvironEv+0x158>  // b.hs, b.nlast
     674:	add	w9, w9, #0x1
     678:	b	648 <_ZN11__sanitizer10GetEnvironEv+0x88>
     67c:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     680:	add	x1, x1, #0x0
     684:	mov	w0, #0x3e80                	// #16000
     688:	mov	w2, wzr
     68c:	str	xzr, [x10]
     690:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     694:	mov	x19, x0
     698:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     69c:	add	x0, x0, #0x0
     6a0:	add	x1, sp, #0x18
     6a4:	add	x2, sp, #0x10
     6a8:	add	x3, sp, #0x8
     6ac:	mov	w4, #0x100000              	// #1048576
     6b0:	mov	x5, xzr
     6b4:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     6b8:	mov	x10, x19
     6bc:	tbz	w0, #0, 704 <_ZN11__sanitizer10GetEnvironEv+0x144>
     6c0:	ldr	x9, [sp, #24]
     6c4:	mov	w8, #0x1                   	// #1
     6c8:	str	x9, [x19]
     6cc:	mov	w9, #0x1                   	// #1
     6d0:	ldr	x10, [sp, #24]
     6d4:	ldrb	w11, [x10, x8]
     6d8:	add	x8, x8, #0x1
     6dc:	cbnz	w11, 6d4 <_ZN11__sanitizer10GetEnvironEv+0x114>
     6e0:	add	x11, x10, x8
     6e4:	ldrb	w12, [x11]
     6e8:	add	x10, x19, w9, uxtw #3
     6ec:	cbz	w12, 704 <_ZN11__sanitizer10GetEnvironEv+0x144>
     6f0:	cmp	w9, #0x7d0
     6f4:	str	x11, [x10]
     6f8:	b.cs	718 <_ZN11__sanitizer10GetEnvironEv+0x158>  // b.hs, b.nlast
     6fc:	add	w9, w9, #0x1
     700:	b	6d0 <_ZN11__sanitizer10GetEnvironEv+0x110>
     704:	str	xzr, [x10]
     708:	mov	x0, x19
     70c:	ldp	x30, x19, [sp, #32]
     710:	add	sp, sp, #0x30
     714:	ret
     718:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     71c:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     720:	mov	w3, w9
     724:	add	x0, x0, #0x0
     728:	add	x2, x2, #0x0
     72c:	mov	w1, #0x243                 	// #579
     730:	mov	w4, #0x7cf                 	// #1999
     734:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000738 <_ZN11__sanitizer13BlockingMutexC1Ev>:
     738:	mov	w2, #0x58                  	// #88
     73c:	mov	w1, wzr
     740:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

0000000000000744 <_ZN11__sanitizer13BlockingMutex4LockEv>:
     744:	str	x30, [sp, #-16]!
     748:	ldr	x3, [x0, #80]
     74c:	cbnz	x3, 7b8 <_ZN11__sanitizer13BlockingMutex4LockEv+0x74>
     750:	mov	x9, x0
     754:	mov	w8, #0x1                   	// #1
     758:	ldaxr	w10, [x9]
     75c:	stlxr	w11, w8, [x9]
     760:	cbnz	w11, 758 <_ZN11__sanitizer13BlockingMutex4LockEv+0x14>
     764:	cbz	w10, 7b0 <_ZN11__sanitizer13BlockingMutex4LockEv+0x6c>
     768:	mov	w8, #0x2                   	// #2
     76c:	ldaxr	w10, [x9]
     770:	stlxr	w11, w8, [x9]
     774:	cbnz	w11, 76c <_ZN11__sanitizer13BlockingMutex4LockEv+0x28>
     778:	cbz	w10, 7b0 <_ZN11__sanitizer13BlockingMutex4LockEv+0x6c>
     77c:	mov	w10, #0x2                   	// #2
     780:	mov	x3, xzr
     784:	mov	x4, xzr
     788:	mov	x5, xzr
     78c:	mov	x0, x9
     790:	mov	w8, #0x62                  	// #98
     794:	mov	w1, #0x80                  	// #128
     798:	mov	w2, #0x2                   	// #2
     79c:	svc	#0x0
     7a0:	ldaxr	w8, [x9]
     7a4:	stlxr	w11, w10, [x9]
     7a8:	cbnz	w11, 7a0 <_ZN11__sanitizer13BlockingMutex4LockEv+0x5c>
     7ac:	cbnz	w8, 78c <_ZN11__sanitizer13BlockingMutex4LockEv+0x48>
     7b0:	ldr	x30, [sp], #16
     7b4:	ret
     7b8:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     7bc:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     7c0:	add	x0, x0, #0x0
     7c4:	add	x2, x2, #0x0
     7c8:	mov	w1, #0x288                 	// #648
     7cc:	mov	x4, xzr
     7d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000007d4 <_ZN11__sanitizer13BlockingMutex6UnlockEv>:
     7d4:	str	x30, [sp, #-16]!
     7d8:	dmb	ish
     7dc:	ldaxr	w8, [x0]
     7e0:	stlxr	w9, wzr, [x0]
     7e4:	cbnz	w9, 7dc <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x8>
     7e8:	cmp	w8, #0x2
     7ec:	b.eq	7fc <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x28>  // b.none
     7f0:	cbz	w8, 820 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x4c>
     7f4:	ldr	x30, [sp], #16
     7f8:	ret
     7fc:	mov	w8, #0x62                  	// #98
     800:	mov	w1, #0x81                  	// #129
     804:	mov	w2, #0x1                   	// #1
     808:	mov	x3, xzr
     80c:	mov	x4, xzr
     810:	mov	x5, xzr
     814:	svc	#0x0
     818:	ldr	x30, [sp], #16
     81c:	ret
     820:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     824:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     828:	add	x0, x0, #0x0
     82c:	add	x2, x2, #0x0
     830:	mov	w1, #0x29b                 	// #667
     834:	mov	x3, xzr
     838:	mov	x4, xzr
     83c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000840 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>:
     840:	str	x30, [sp, #-16]!
     844:	ldr	w8, [x0]
     848:	cbz	w8, 854 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv+0x14>
     84c:	ldr	x30, [sp], #16
     850:	ret
     854:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     858:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     85c:	add	x0, x0, #0x0
     860:	add	x2, x2, #0x0
     864:	mov	w1, #0x2a9                 	// #681
     868:	mov	x3, xzr
     86c:	mov	x4, xzr
     870:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000874 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>:
     874:	mov	w8, #0x75                  	// #117
     878:	sxtw	x0, w0
     87c:	sxtw	x1, w1
     880:	svc	#0x0
     884:	ret

0000000000000888 <_ZN11__sanitizer16internal_waitpidEiPii>:
     888:	mov	w8, #0x104                 	// #260
     88c:	sxtw	x0, w0
     890:	sxtw	x2, w2
     894:	mov	x3, xzr
     898:	svc	#0x0
     89c:	ret

00000000000008a0 <_ZN11__sanitizer15internal_getpidEv>:
     8a0:	mov	w8, #0xac                  	// #172
     8a4:	svc	#0x0
     8a8:	ret

00000000000008ac <_ZN11__sanitizer16internal_getppidEv>:
     8ac:	mov	w8, #0xad                  	// #173
     8b0:	svc	#0x0
     8b4:	ret

00000000000008b8 <_ZN11__sanitizer17internal_getdentsEiPNS_12linux_direntEj>:
     8b8:	mov	w2, w2
     8bc:	sxtw	x0, w0
     8c0:	mov	w8, #0x3d                  	// #61
     8c4:	svc	#0x0
     8c8:	ret

00000000000008cc <_ZN11__sanitizer14internal_lseekEimi>:
     8cc:	mov	w8, #0x3e                  	// #62
     8d0:	sxtw	x0, w0
     8d4:	sxtw	x2, w2
     8d8:	svc	#0x0
     8dc:	ret

00000000000008e0 <_ZN11__sanitizer14internal_prctlEimmmm>:
     8e0:	mov	w8, #0xa7                  	// #167
     8e4:	sxtw	x0, w0
     8e8:	svc	#0x0
     8ec:	ret

00000000000008f0 <_ZN11__sanitizer20internal_sigaltstackEPKvPv>:
     8f0:	mov	w8, #0x84                  	// #132
     8f4:	svc	#0x0
     8f8:	ret

00000000000008fc <_ZN11__sanitizer13internal_forkEv>:
     8fc:	mov	w0, #0x11                  	// #17
     900:	mov	w8, #0xdc                  	// #220
     904:	mov	x1, xzr
     908:	svc	#0x0
     90c:	ret

0000000000000910 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>:
     910:	sub	sp, sp, #0x70
     914:	stp	x30, x23, [sp, #64]
     918:	stp	x22, x21, [sp, #80]
     91c:	stp	x20, x19, [sp, #96]
     920:	mov	x19, x2
     924:	mov	x20, x1
     928:	mov	w21, w0
     92c:	add	x0, sp, #0x20
     930:	mov	w2, #0x20                  	// #32
     934:	mov	w1, wzr
     938:	add	x22, sp, #0x20
     93c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     940:	mov	x0, sp
     944:	mov	w2, #0x20                  	// #32
     948:	mov	w1, wzr
     94c:	mov	x23, sp
     950:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     954:	cbz	x20, 984 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv+0x74>
     958:	ldr	x8, [x20]
     95c:	add	x0, x22, #0x18
     960:	add	x1, x20, #0x8
     964:	mov	w2, #0x8                   	// #8
     968:	str	x8, [sp, #32]
     96c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     970:	ldrsw	x8, [x20, #136]
     974:	orr	x8, x8, #0x4000000
     978:	str	x8, [sp, #40]
     97c:	ldr	x8, [x20, #144]
     980:	str	x8, [sp, #48]
     984:	cmp	x20, #0x0
     988:	sxtw	x0, w21
     98c:	csel	x1, x22, xzr, ne  // ne = any
     990:	cmp	x19, #0x0
     994:	csel	x2, x23, xzr, ne  // ne = any
     998:	mov	w8, #0x86                  	// #134
     99c:	mov	w3, #0x8                   	// #8
     9a0:	svc	#0x0
     9a4:	mov	x20, x0
     9a8:	cbz	x19, 9dc <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv+0xcc>
     9ac:	cbnz	x20, 9dc <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv+0xcc>
     9b0:	ldr	x8, [sp]
     9b4:	mov	x9, sp
     9b8:	add	x0, x19, #0x8
     9bc:	add	x1, x9, #0x18
     9c0:	mov	w2, #0x8                   	// #8
     9c4:	str	x8, [x19]
     9c8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     9cc:	ldr	x8, [sp, #8]
     9d0:	str	w8, [x19, #136]
     9d4:	ldr	x8, [sp, #16]
     9d8:	str	x8, [x19, #144]
     9dc:	mov	w0, w20
     9e0:	ldp	x20, x19, [sp, #96]
     9e4:	ldp	x22, x21, [sp, #80]
     9e8:	ldp	x30, x23, [sp, #64]
     9ec:	add	sp, sp, #0x70
     9f0:	ret

00000000000009f4 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>:
     9f4:	mov	w8, #0x87                  	// #135
     9f8:	sxtw	x0, w0
     9fc:	mov	w3, #0x8                   	// #8
     a00:	svc	#0x0
     a04:	ret

0000000000000a08 <_ZN11__sanitizer19internal_sigfillsetEPNS_20__sanitizer_sigset_tE>:
     a08:	mov	w1, #0xff                  	// #255
     a0c:	mov	w2, #0x80                  	// #128
     a10:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

0000000000000a14 <_ZN11__sanitizer20internal_sigemptysetEPNS_20__sanitizer_sigset_tE>:
     a14:	mov	w2, #0x80                  	// #128
     a18:	mov	w1, wzr
     a1c:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

0000000000000a20 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>:
     a20:	str	x30, [sp, #-16]!
     a24:	sub	w8, w1, #0x1
     a28:	cmp	w8, #0x400
     a2c:	sxtw	x3, w8
     a30:	b.cs	a58 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi+0x38>  // b.hs, b.nlast
     a34:	lsr	x8, x3, #3
     a38:	ldrb	w9, [x0, x8]
     a3c:	and	w10, w3, #0x7
     a40:	mov	w11, #0x1                   	// #1
     a44:	lsl	w10, w11, w10
     a48:	bic	w9, w9, w10
     a4c:	strb	w9, [x0, x8]
     a50:	ldr	x30, [sp], #16
     a54:	ret
     a58:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     a5c:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     a60:	add	x0, x0, #0x0
     a64:	add	x2, x2, #0x0
     a68:	mov	w1, #0x364                 	// #868
     a6c:	mov	w4, #0x400                 	// #1024
     a70:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000a74 <_ZN11__sanitizer20internal_sigismemberEPNS_20__sanitizer_sigset_tEi>:
     a74:	str	x30, [sp, #-16]!
     a78:	sub	w8, w1, #0x1
     a7c:	cmp	w8, #0x400
     a80:	sxtw	x3, w8
     a84:	b.cs	aa4 <_ZN11__sanitizer20internal_sigismemberEPNS_20__sanitizer_sigset_tEi+0x30>  // b.hs, b.nlast
     a88:	lsr	x8, x3, #3
     a8c:	ldrb	w8, [x0, x8]
     a90:	and	w9, w3, #0x7
     a94:	lsr	w8, w8, w9
     a98:	and	w0, w8, #0x1
     a9c:	ldr	x30, [sp], #16
     aa0:	ret
     aa4:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     aa8:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     aac:	add	x0, x0, #0x0
     ab0:	add	x2, x2, #0x0
     ab4:	mov	w1, #0x36e                 	// #878
     ab8:	mov	w4, #0x400                 	// #1024
     abc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000ac0 <_ZN11__sanitizer12ThreadListerC1Ei>:
     ac0:	sub	sp, sp, #0x70
     ac4:	stp	x30, x21, [sp, #80]
     ac8:	stp	x20, x19, [sp, #96]
     acc:	mov	w8, #0xffffffff            	// #-1
     ad0:	mov	x21, x0
     ad4:	stp	w1, w8, [x0]
     ad8:	str	xzr, [x21, #8]!
     adc:	mov	w19, w1
     ae0:	mov	x20, x0
     ae4:	stp	xzr, xzr, [x0, #16]
     ae8:	mov	w1, #0x1000                	// #4096
     aec:	mov	x0, x21
     af0:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     af4:	ldr	x8, [x20, #24]
     af8:	cmp	x8, #0xfff
     afc:	b.hi	b34 <_ZN11__sanitizer12ThreadListerC1Ei+0x74>  // b.pmore
     b00:	ldr	x9, [x20, #16]
     b04:	cmp	x9, #0xfff
     b08:	b.hi	b1c <_ZN11__sanitizer12ThreadListerC1Ei+0x5c>  // b.pmore
     b0c:	mov	w1, #0x1000                	// #4096
     b10:	mov	x0, x21
     b14:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     b18:	ldr	x8, [x20, #24]
     b1c:	ldr	x9, [x21]
     b20:	mov	w10, #0x1000                	// #4096
     b24:	sub	x2, x10, x8
     b28:	mov	w1, wzr
     b2c:	add	x0, x9, x8
     b30:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     b34:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     b38:	mov	w8, #0x1000                	// #4096
     b3c:	add	x2, x2, #0x0
     b40:	mov	x0, sp
     b44:	mov	w1, #0x50                  	// #80
     b48:	mov	w3, w19
     b4c:	str	x8, [x20, #24]
     b50:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     b54:	mov	w8, #0x38                  	// #56
     b58:	mov	x0, #0xffffffffffffff9c    	// #-100
     b5c:	mov	x1, sp
     b60:	mov	w2, #0x4000                	// #16384
     b64:	svc	#0x0
     b68:	mov	x8, #0xfffffffffffff001    	// #-4095
     b6c:	cmp	x8, w0, sxtw
     b70:	str	w0, [x20, #4]
     b74:	b.hi	b88 <_ZN11__sanitizer12ThreadListerC1Ei+0xc8>  // b.pmore
     b78:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     b7c:	add	x0, x0, #0x0
     b80:	mov	w1, w19
     b84:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     b88:	ldp	x20, x19, [sp, #96]
     b8c:	ldp	x30, x21, [sp, #80]
     b90:	add	sp, sp, #0x70
     b94:	ret

0000000000000b98 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE>:
     b98:	str	x30, [sp, #-80]!
     b9c:	stp	x26, x25, [sp, #16]
     ba0:	stp	x24, x23, [sp, #32]
     ba4:	stp	x22, x21, [sp, #48]
     ba8:	stp	x20, x19, [sp, #64]
     bac:	mov	x19, x0
     bb0:	ldrsw	x0, [x0, #4]
     bb4:	cmn	w0, #0x1, lsl #12
     bb8:	b.hi	d40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1a8>  // b.pmore
     bbc:	mov	x20, x1
     bc0:	mov	x1, xzr
     bc4:	mov	x2, xzr
     bc8:	mov	w8, #0x3e                  	// #62
     bcc:	svc	#0x0
     bd0:	add	x21, x19, #0x8
     bd4:	mov	w22, #0x2                   	// #2
     bd8:	mov	w8, #0x1                   	// #1
     bdc:	str	xzr, [x20, #16]
     be0:	b	c04 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x6c>
     be4:	ldr	x9, [x21]
     be8:	sub	x2, x22, x8
     bec:	mov	w1, wzr
     bf0:	add	x0, x9, x8
     bf4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     bf8:	mov	w8, wzr
     bfc:	str	x22, [x19, #24]
     c00:	mov	w22, #0x1                   	// #1
     c04:	ldp	x23, x9, [x19, #16]
     c08:	mov	w24, w8
     c0c:	subs	x2, x23, x9
     c10:	b.ls	c24 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x8c>  // b.plast
     c14:	ldr	x8, [x21]
     c18:	mov	w1, wzr
     c1c:	add	x0, x8, x9
     c20:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     c24:	cmp	x23, #0xfff
     c28:	str	x23, [x19, #24]
     c2c:	b.ls	d60 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1c8>  // b.plast
     c30:	ldrsw	x0, [x19, #4]
     c34:	ldr	x1, [x19, #8]
     c38:	and	x2, x23, #0xffffffff
     c3c:	mov	w8, #0x3d                  	// #61
     c40:	svc	#0x0
     c44:	cbz	x0, d44 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1ac>
     c48:	mov	x23, x0
     c4c:	cmn	x0, #0xfff
     c50:	b.cs	d30 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x198>  // b.hs, b.nlast
     c54:	ldr	x0, [x21]
     c58:	mov	w25, w22
     c5c:	add	x26, x0, x23
     c60:	cmp	x0, x26
     c64:	b.cc	cbc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x124>  // b.lo, b.ul, b.last
     c68:	mov	w8, wzr
     c6c:	mov	w22, #0x1                   	// #1
     c70:	tbz	w24, #0, c04 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x6c>
     c74:	ldr	x8, [x19, #24]
     c78:	sub	x9, x8, #0x400
     c7c:	cmp	x23, x9
     c80:	b.ls	cfc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x164>  // b.plast
     c84:	lsl	x22, x8, #1
     c88:	cmp	x8, x22
     c8c:	b.cs	bf8 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x60>  // b.hs, b.nlast
     c90:	ldr	x9, [x19, #16]
     c94:	cmp	x9, x22
     c98:	b.cs	be4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x4c>  // b.hs, b.nlast
     c9c:	mov	x0, x21
     ca0:	mov	x1, x22
     ca4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ca8:	ldr	x8, [x19, #24]
     cac:	b	be4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x4c>
     cb0:	cmp	x22, x26
     cb4:	mov	x0, x22
     cb8:	b.cs	c68 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xd0>  // b.hs, b.nlast
     cbc:	ldr	x9, [x0]
     cc0:	ldrh	w8, [x0, #16]
     cc4:	cmp	x9, #0x1
     cc8:	add	x22, x0, x8
     ccc:	csinc	w25, w25, wzr, ne  // ne = any
     cd0:	cbz	x9, cb0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x118>
     cd4:	ldrb	w8, [x0, #19]!
     cd8:	sub	w8, w8, #0x30
     cdc:	cmp	w8, #0x9
     ce0:	b.hi	cb0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x118>  // b.pmore
     ce4:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     ce8:	str	x0, [sp, #8]
     cec:	add	x1, sp, #0x8
     cf0:	mov	x0, x20
     cf4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     cf8:	b	cb0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x118>
     cfc:	ldr	x9, [x20, #16]
     d00:	mov	w8, wzr
     d04:	mov	w22, w25
     d08:	cbz	x9, c04 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x6c>
     d0c:	ldr	x8, [x20]
     d10:	mov	x0, x19
     d14:	add	x8, x8, x9, lsl #3
     d18:	ldur	w1, [x8, #-8]
     d1c:	bl	d80 <_ZN11__sanitizer12ThreadLister7IsAliveEi>
     d20:	tst	w0, #0x1
     d24:	mov	w8, wzr
     d28:	csinc	w22, w25, wzr, ne  // ne = any
     d2c:	b	c04 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x6c>
     d30:	ldr	w1, [x19]
     d34:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     d38:	add	x0, x0, #0x0
     d3c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     d40:	mov	w22, wzr
     d44:	mov	w0, w22
     d48:	ldp	x20, x19, [sp, #64]
     d4c:	ldp	x22, x21, [sp, #48]
     d50:	ldp	x24, x23, [sp, #32]
     d54:	ldp	x26, x25, [sp, #16]
     d58:	ldr	x30, [sp], #80
     d5c:	ret
     d60:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     d64:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     d68:	add	x0, x0, #0x0
     d6c:	add	x2, x2, #0x0
     d70:	mov	w1, #0x398                 	// #920
     d74:	mov	w4, #0x1000                	// #4096
     d78:	mov	x3, x23
     d7c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d80 <_ZN11__sanitizer12ThreadLister7IsAliveEi>:
     d80:	sub	sp, sp, #0x70
     d84:	str	x30, [sp, #80]
     d88:	stp	x20, x19, [sp, #96]
     d8c:	mov	x19, x0
     d90:	ldr	w3, [x19], #8
     d94:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     d98:	mov	x20, x0
     d9c:	mov	w4, w1
     da0:	add	x2, x2, #0x0
     da4:	mov	x0, sp
     da8:	mov	w1, #0x50                  	// #80
     dac:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     db0:	mov	x0, sp
     db4:	mov	w2, #0x4000000             	// #67108864
     db8:	mov	x1, x19
     dbc:	mov	x3, xzr
     dc0:	bl	0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi>
     dc4:	tbz	w0, #0, e24 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0xa4>
     dc8:	ldr	x8, [x20, #24]
     dcc:	cbz	x8, e24 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0xa4>
     dd0:	add	x1, sp, #0x5c
     dd4:	mov	x0, x19
     dd8:	strb	wzr, [sp, #92]
     ddc:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     de0:	ldr	x0, [x19]
     de4:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     de8:	add	x1, x1, #0x0
     dec:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
     df0:	cbz	x0, e14 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x94>
     df4:	mov	x19, x0
     df8:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     dfc:	add	x0, x0, #0x0
     e00:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     e04:	add	x0, x19, x0
     e08:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     e0c:	cmp	w0, #0x0
     e10:	cset	w0, ne  // ne = any
     e14:	ldp	x20, x19, [sp, #96]
     e18:	ldr	x30, [sp, #80]
     e1c:	add	sp, sp, #0x70
     e20:	ret
     e24:	mov	w0, wzr
     e28:	ldp	x20, x19, [sp, #96]
     e2c:	ldr	x30, [sp, #80]
     e30:	add	sp, sp, #0x70
     e34:	ret

0000000000000e38 <_ZN11__sanitizer12ThreadListerD1Ev>:
     e38:	mov	x9, x0
     e3c:	ldrsw	x0, [x0, #4]
     e40:	cmn	w0, #0x1, lsl #12
     e44:	b.hi	e50 <_ZN11__sanitizer12ThreadListerD1Ev+0x18>  // b.pmore
     e48:	mov	w8, #0x39                  	// #57
     e4c:	svc	#0x0
     e50:	ldp	x0, x1, [x9, #8]
     e54:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>

0000000000000e58 <_ZN11__sanitizer20GetMaxVirtualAddressEv>:
     e58:	stp	x29, x30, [sp, #-16]!
     e5c:	mov	x29, sp
     e60:	cbz	x29, e80 <_ZN11__sanitizer20GetMaxVirtualAddressEv+0x28>
     e64:	clz	x8, x29
     e68:	neg	x8, x8
     e6c:	mov	x9, #0xffffffffffffffff    	// #-1
     e70:	lsl	x8, x9, x8
     e74:	mvn	x0, x8
     e78:	ldp	x29, x30, [sp], #16
     e7c:	ret
     e80:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     e84:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     e88:	add	x0, x0, #0x0
     e8c:	add	x2, x2, #0x0
     e90:	mov	w1, #0x160                 	// #352
     e94:	mov	x3, xzr
     e98:	mov	x4, xzr
     e9c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000ea0 <_ZN11__sanitizer24GetMaxUserVirtualAddressEv>:
     ea0:	stp	x29, x30, [sp, #-16]!
     ea4:	mov	x29, sp
     ea8:	cbz	x29, ec8 <_ZN11__sanitizer24GetMaxUserVirtualAddressEv+0x28>
     eac:	clz	x8, x29
     eb0:	neg	x8, x8
     eb4:	mov	x9, #0xffffffffffffffff    	// #-1
     eb8:	lsl	x8, x9, x8
     ebc:	mvn	x0, x8
     ec0:	ldp	x29, x30, [sp], #16
     ec4:	ret
     ec8:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ecc:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ed0:	add	x0, x0, #0x0
     ed4:	add	x2, x2, #0x0
     ed8:	mov	w1, #0x160                 	// #352
     edc:	mov	x3, xzr
     ee0:	mov	x4, xzr
     ee4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000ee8 <_ZN11__sanitizer11GetPageSizeEv>:
     ee8:	mov	w0, #0x6                   	// #6
     eec:	b	0 <getauxval>

0000000000000ef0 <_ZN11__sanitizer14ReadBinaryNameEPcm>:
     ef0:	str	x30, [sp, #-32]!
     ef4:	stp	x20, x19, [sp, #16]
     ef8:	mov	x19, x1
     efc:	mov	x20, x0
     f00:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f04:	mov	x0, #0xffffffffffffff9c    	// #-100
     f08:	add	x1, x1, #0x0
     f0c:	mov	w8, #0x4e                  	// #78
     f10:	mov	x2, x20
     f14:	mov	x3, x19
     f18:	svc	#0x0
     f1c:	mov	x3, x0
     f20:	cmn	x0, #0xfff
     f24:	b.cc	f60 <_ZN11__sanitizer14ReadBinaryNameEPcm+0x70>  // b.lo, b.ul, b.last
     f28:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f2c:	neg	w1, w3
     f30:	add	x0, x0, #0x0
     f34:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     f38:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f3c:	adrp	x3, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f40:	add	x2, x2, #0x0
     f44:	add	x3, x3, #0x0
     f48:	mov	x0, x20
     f4c:	mov	x1, x19
     f50:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     f54:	sxtw	x3, w0
     f58:	cmp	x3, x19
     f5c:	b.cs	f70 <_ZN11__sanitizer14ReadBinaryNameEPcm+0x80>  // b.hs, b.nlast
     f60:	ldp	x20, x19, [sp, #16]
     f64:	mov	x0, x3
     f68:	ldr	x30, [sp], #32
     f6c:	ret
     f70:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f74:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f78:	add	x0, x0, #0x0
     f7c:	add	x2, x2, #0x0
     f80:	mov	w1, #0x45c                 	// #1116
     f84:	mov	x4, x19
     f88:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000f8c <_ZN11__sanitizer19ReadLongProcessNameEPcm>:
     f8c:	sub	sp, sp, #0x30
     f90:	str	x30, [sp, #16]
     f94:	stp	x20, x19, [sp, #32]
     f98:	mov	x20, x0
     f9c:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     fa0:	mov	x19, x1
     fa4:	add	x0, x0, #0x0
     fa8:	add	x1, sp, #0x18
     fac:	add	x2, sp, #0x8
     fb0:	mov	x3, sp
     fb4:	mov	w4, #0x100000              	// #1048576
     fb8:	mov	x5, xzr
     fbc:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     fc0:	tbz	w0, #0, ff0 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0x64>
     fc4:	ldr	x1, [sp, #24]
     fc8:	mov	x0, x20
     fcc:	mov	x2, x19
     fd0:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
     fd4:	ldr	x0, [sp, #24]
     fd8:	ldr	x1, [sp, #8]
     fdc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     fe0:	mov	x0, x20
     fe4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     fe8:	mov	x3, x0
     fec:	b	1050 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0xc4>
     ff0:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ff4:	mov	x0, #0xffffffffffffff9c    	// #-100
     ff8:	add	x1, x1, #0x0
     ffc:	mov	w8, #0x4e                  	// #78
    1000:	mov	x2, x20
    1004:	mov	x3, x19
    1008:	svc	#0x0
    100c:	mov	x3, x0
    1010:	cmn	x0, #0xfff
    1014:	b.cc	1050 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0xc4>  // b.lo, b.ul, b.last
    1018:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    101c:	neg	w1, w3
    1020:	add	x0, x0, #0x0
    1024:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1028:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    102c:	adrp	x3, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1030:	add	x2, x2, #0x0
    1034:	add	x3, x3, #0x0
    1038:	mov	x0, x20
    103c:	mov	x1, x19
    1040:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    1044:	sxtw	x3, w0
    1048:	cmp	x3, x19
    104c:	b.cs	1064 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0xd8>  // b.hs, b.nlast
    1050:	ldp	x20, x19, [sp, #32]
    1054:	ldr	x30, [sp, #16]
    1058:	mov	x0, x3
    105c:	add	sp, sp, #0x30
    1060:	ret
    1064:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1068:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    106c:	add	x0, x0, #0x0
    1070:	add	x2, x2, #0x0
    1074:	mov	w1, #0x45c                 	// #1116
    1078:	mov	x4, x19
    107c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001080 <_ZN11__sanitizer13LibraryNameIsEPKcS1_>:
    1080:	stp	x30, x21, [sp, #-32]!
    1084:	stp	x20, x19, [sp, #16]
    1088:	mov	x19, x1
    108c:	sub	x20, x0, #0x1
    1090:	ldrb	w8, [x20, #1]!
    1094:	cbnz	w8, 1090 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x10>
    1098:	cmp	x20, x0
    109c:	b.ls	10c4 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x44>  // b.plast
    10a0:	sub	x8, x20, #0x1
    10a4:	cmp	x8, x0
    10a8:	ldrb	w9, [x8], #-1
    10ac:	b.ls	10b8 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x38>  // b.plast
    10b0:	cmp	w9, #0x2f
    10b4:	b.ne	10a4 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x24>  // b.any
    10b8:	add	x10, x8, #0x2
    10bc:	cmp	w9, #0x2f
    10c0:	csinc	x20, x10, x8, eq  // eq = none
    10c4:	mov	x0, x19
    10c8:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    10cc:	mov	x21, x0
    10d0:	mov	x0, x20
    10d4:	mov	x1, x19
    10d8:	mov	x2, x21
    10dc:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    10e0:	cbz	w0, 10f4 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x74>
    10e4:	mov	w0, wzr
    10e8:	ldp	x20, x19, [sp, #16]
    10ec:	ldp	x30, x21, [sp], #32
    10f0:	ret
    10f4:	ldrb	w8, [x20, x21]
    10f8:	sub	w8, w8, #0x2d
    10fc:	cmp	w8, #0x2
    1100:	cset	w0, cc  // cc = lo, ul, last
    1104:	ldp	x20, x19, [sp, #16]
    1108:	ldp	x30, x21, [sp], #32
    110c:	ret

0000000000001110 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE>:
    1110:	stp	x30, x27, [sp, #-80]!
    1114:	stp	x26, x25, [sp, #16]
    1118:	stp	x24, x23, [sp, #32]
    111c:	stp	x22, x21, [sp, #48]
    1120:	stp	x20, x19, [sp, #64]
    1124:	cbz	x0, 1250 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x140>
    1128:	ldr	x21, [x0]
    112c:	ldrh	w9, [x21, #56]
    1130:	ldrh	w8, [x21, #54]
    1134:	mul	x9, x8, x9
    1138:	cbz	x9, 1228 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x118>
    113c:	ldr	x11, [x21, #32]
    1140:	mov	x19, x1
    1144:	mov	x10, xzr
    1148:	add	x22, x21, x11
    114c:	add	x23, x22, x9
    1150:	mov	x11, #0xffffffffffffffff    	// #-1
    1154:	b	1164 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x54>
    1158:	add	x10, x10, x8
    115c:	cmp	x9, x10
    1160:	b.eq	1184 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x74>  // b.none
    1164:	ldr	w12, [x22, x10]
    1168:	cmp	w12, #0x1
    116c:	b.ne	1158 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x48>  // b.any
    1170:	add	x12, x22, x10
    1174:	ldr	x12, [x12, #16]
    1178:	cmp	x11, x12
    117c:	csel	x11, x12, x11, hi  // hi = pmore
    1180:	b	1158 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x48>
    1184:	cbz	x9, 1228 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x118>
    1188:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
    118c:	ldr	x25, [x25]
    1190:	sub	x24, x21, x11
    1194:	b	11a4 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x94>
    1198:	add	x22, x22, w8, uxth
    119c:	cmp	x22, x23
    11a0:	b.eq	1228 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x118>  // b.none
    11a4:	ldr	w9, [x22]
    11a8:	cmp	w9, #0x1
    11ac:	b.ne	1198 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x88>  // b.any
    11b0:	ldr	x8, [x22, #16]
    11b4:	ldr	x0, [x25]
    11b8:	ldr	x26, [x22, #40]
    11bc:	add	x27, x8, x24
    11c0:	cbz	x0, 11d0 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xc0>
    11c4:	neg	x8, x0
    11c8:	and	x20, x27, x8
    11cc:	b	11f4 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xe4>
    11d0:	mov	w0, #0x6                   	// #6
    11d4:	bl	0 <getauxval>
    11d8:	neg	x8, x0
    11dc:	and	x20, x27, x8
    11e0:	str	x0, [x25]
    11e4:	cbnz	x0, 11f4 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xe4>
    11e8:	mov	w0, #0x6                   	// #6
    11ec:	bl	0 <getauxval>
    11f0:	str	x0, [x25]
    11f4:	sub	x8, x0, #0x1
    11f8:	tst	x0, x8
    11fc:	b.ne	1240 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x130>  // b.any
    1200:	add	x8, x26, x27
    1204:	add	x8, x8, x0
    1208:	sub	x8, x8, #0x1
    120c:	neg	x9, x0
    1210:	and	x8, x8, x9
    1214:	sub	x1, x8, x20
    1218:	mov	x0, x20
    121c:	blr	x19
    1220:	ldrh	w8, [x21, #54]
    1224:	b	1198 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x88>
    1228:	ldp	x20, x19, [sp, #64]
    122c:	ldp	x22, x21, [sp, #48]
    1230:	ldp	x24, x23, [sp, #32]
    1234:	ldp	x26, x25, [sp, #16]
    1238:	ldp	x30, x27, [sp], #80
    123c:	ret
    1240:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1244:	add	x0, x0, #0x0
    1248:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    124c:	bl	0 <_ZN11__sanitizer3DieEv>
    1250:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1254:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1258:	add	x0, x0, #0x0
    125c:	add	x2, x2, #0x0
    1260:	mov	w1, #0x481                 	// #1153
    1264:	mov	x3, xzr
    1268:	mov	x4, xzr
    126c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001270 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_>:
    1270:	str	x30, [sp, #-16]!
    1274:	cbz	x0, 12c8 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x58>
    1278:	cbz	x1, 12c8 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x58>
    127c:	ands	x8, x1, #0xf
    1280:	b.ne	12d4 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x64>  // b.any
    1284:	str	x0, [x1, #-16]!
    1288:	str	x3, [x1, #8]
    128c:	mov	w2, w2
    1290:	mov	x0, x2
    1294:	mov	x2, x4
    1298:	mov	x3, x5
    129c:	mov	x4, x6
    12a0:	mov	x8, #0xdc                  	// #220
    12a4:	svc	#0x0
    12a8:	cmp	x0, #0x0
    12ac:	b.ne	12c0 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x50>  // b.any
    12b0:	ldp	x1, x0, [sp], #16
    12b4:	blr	x1
    12b8:	mov	x8, #0x5d                  	// #93
    12bc:	svc	#0x0
    12c0:	ldr	x30, [sp], #16
    12c4:	ret
    12c8:	mov	x0, #0xffffffffffffffea    	// #-22
    12cc:	ldr	x30, [sp], #16
    12d0:	ret
    12d4:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    12d8:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    12dc:	add	x0, x0, #0x0
    12e0:	add	x2, x2, #0x0
    12e4:	mov	w1, #0x537                 	// #1335
    12e8:	mov	x3, xzr
    12ec:	mov	x4, x8
    12f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000012f4 <_ZN11__sanitizer19GetHandleSignalModeEi>:
    12f4:	sub	w8, w0, #0x4
    12f8:	cmp	w8, #0x7
    12fc:	b.hi	130c <_ZN11__sanitizer19GetHandleSignalModeEi+0x18>  // b.pmore
    1300:	mov	w9, #0x9f                  	// #159
    1304:	lsr	w9, w9, w8
    1308:	tbnz	w9, #0, 1314 <_ZN11__sanitizer19GetHandleSignalModeEi+0x20>
    130c:	mov	w0, wzr
    1310:	ret
    1314:	adrp	x9, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1318:	add	x9, x9, #0x0
    131c:	ldr	x8, [x9, w8, sxtw #3]
    1320:	ldr	w0, [x8]
    1324:	cmp	w0, #0x1
    1328:	b.ne	1340 <_ZN11__sanitizer19GetHandleSignalModeEi+0x4c>  // b.any
    132c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1330:	ldr	x8, [x8]
    1334:	ldrb	w8, [x8, #96]
    1338:	cbz	w8, 1344 <_ZN11__sanitizer19GetHandleSignalModeEi+0x50>
    133c:	mov	w0, #0x1                   	// #1
    1340:	ret
    1344:	mov	w0, #0x2                   	// #2
    1348:	ret

000000000000134c <_ZN11__sanitizer21internal_start_threadEPFvPvES0_>:
    134c:	sub	sp, sp, #0x130
    1350:	stp	x29, x30, [sp, #272]
    1354:	stp	x20, x19, [sp, #288]
    1358:	mov	x19, x1
    135c:	mov	x20, x0
    1360:	add	x0, sp, #0x90
    1364:	mov	w1, #0xff                  	// #255
    1368:	mov	w2, #0x80                  	// #128
    136c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    1370:	ldrb	w8, [sp, #148]
    1374:	mov	w0, #0x2                   	// #2
    1378:	add	x1, sp, #0x90
    137c:	add	x2, sp, #0x10
    1380:	and	w8, w8, #0xfe
    1384:	strb	w8, [sp, #148]
    1388:	mov	w8, #0x87                  	// #135
    138c:	mov	w3, #0x8                   	// #8
    1390:	svc	#0x0
    1394:	add	x0, sp, #0x8
    1398:	mov	x1, xzr
    139c:	mov	x2, x20
    13a0:	mov	x3, x19
    13a4:	bl	0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_>
    13a8:	mov	w0, #0x2                   	// #2
    13ac:	add	x1, sp, #0x10
    13b0:	mov	w8, #0x87                  	// #135
    13b4:	mov	x2, xzr
    13b8:	mov	w3, #0x8                   	// #8
    13bc:	svc	#0x0
    13c0:	ldr	x0, [sp, #8]
    13c4:	ldp	x20, x19, [sp, #288]
    13c8:	ldp	x29, x30, [sp, #272]
    13cc:	add	sp, sp, #0x130
    13d0:	ret

00000000000013d4 <_ZN11__sanitizer20internal_join_threadEPv>:
    13d4:	str	x30, [sp, #-16]!
    13d8:	mov	x1, xzr
    13dc:	bl	0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_>
    13e0:	ldr	x30, [sp], #16
    13e4:	ret

00000000000013e8 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>:
    13e8:	ldr	x9, [x0, #8]
    13ec:	ldr	w8, [x9, #468]
    13f0:	cbz	w8, 1418 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x30>
    13f4:	mov	w10, #0x5201                	// #20993
    13f8:	add	x9, x9, #0x1d0
    13fc:	movk	w10, #0x4553, lsl #16
    1400:	ldr	w11, [x9]
    1404:	cmp	w11, w10
    1408:	b.eq	1420 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x38>  // b.none
    140c:	add	x9, x9, w8, uxtw
    1410:	ldr	w8, [x9, #4]
    1414:	cbnz	w8, 1400 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x18>
    1418:	mov	w0, wzr
    141c:	ret
    1420:	ldrb	w8, [x9, #8]
    1424:	tst	w8, #0x40
    1428:	mov	w8, #0x1                   	// #1
    142c:	cinc	w0, w8, ne  // ne = any
    1430:	ret

0000000000001434 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>:
    1434:	ldr	x8, [x0]
    1438:	ldr	w9, [x8]
    143c:	cmp	w9, #0xb
    1440:	b.ne	1454 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv+0x20>  // b.any
    1444:	ldr	w8, [x8, #8]
    1448:	cmp	w8, #0x80
    144c:	cset	w0, ne  // ne = any
    1450:	ret
    1454:	mov	w0, wzr
    1458:	ret

000000000000145c <_ZN11__sanitizer13SignalContext16DumpAllRegistersEPv>:
    145c:	ret

0000000000001460 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>:
    1460:	ldr	x8, [x0, #8]
    1464:	ldr	x9, [x8, #416]
    1468:	str	x9, [x0, #40]
    146c:	ldr	q0, [x8, #432]
    1470:	ext	v0.16b, v0.16b, v0.16b, #8
    1474:	stur	q0, [x0, #24]
    1478:	ret

000000000000147c <_ZN11__sanitizer23InitializePlatformEarlyEv>:
    147c:	ret

0000000000001480 <_ZN11__sanitizer11MaybeReexecEv>:
    1480:	ret

0000000000001484 <_ZN11__sanitizer9CheckASLREv>:
    1484:	ret

0000000000001488 <_ZN11__sanitizer13CheckMPROTECTEv>:
    1488:	ret

000000000000148c <_ZN11__sanitizer14PrintModuleMapEv>:
    148c:	ret

0000000000001490 <_ZN11__sanitizer15CheckNoDeepBindEPKci>:
    1490:	tbnz	w1, #3, 1498 <_ZN11__sanitizer15CheckNoDeepBindEPKci+0x8>
    1494:	ret
    1498:	str	x30, [sp, #-16]!
    149c:	mov	x2, x0
    14a0:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    14a4:	add	x0, x0, #0x0
    14a8:	mov	x1, x2
    14ac:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    14b0:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000014b4 <_ZN11__sanitizer24FindAvailableMemoryRangeEmmmPmS0_>:
    14b4:	str	x30, [sp, #-16]!
    14b8:	adrp	x0, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    14bc:	adrp	x2, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    14c0:	add	x0, x0, #0x0
    14c4:	add	x2, x2, #0x0
    14c8:	mov	w1, #0x83a                 	// #2106
    14cc:	mov	x3, xzr
    14d0:	mov	x4, xzr
    14d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000014d8 <_ZN11__sanitizer9GetRandomEPvmb>:
    14d8:	mov	x10, x0
    14dc:	mov	w0, wzr
    14e0:	cbz	x10, 15ac <_ZN11__sanitizer9GetRandomEPvmb+0xd4>
    14e4:	sub	x8, x1, #0x1
    14e8:	mov	x9, x1
    14ec:	cmp	x8, #0xff
    14f0:	b.hi	15ac <_ZN11__sanitizer9GetRandomEPvmb+0xd4>  // b.pmore
    14f4:	adrp	x11, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    14f8:	ldrb	w8, [x11]
    14fc:	cbnz	w8, 153c <_ZN11__sanitizer9GetRandomEPvmb+0x64>
    1500:	mvn	w8, w2
    1504:	mov	x0, x10
    1508:	and	x2, x8, #0x1
    150c:	mov	w8, #0x116                 	// #278
    1510:	mov	x1, x9
    1514:	svc	#0x0
    1518:	cmn	x0, #0xfff
    151c:	b.cc	1534 <_ZN11__sanitizer9GetRandomEPvmb+0x5c>  // b.lo, b.ul, b.last
    1520:	cmn	w0, #0x26
    1524:	b.ne	1534 <_ZN11__sanitizer9GetRandomEPvmb+0x5c>  // b.any
    1528:	mov	w8, #0x1                   	// #1
    152c:	strb	w8, [x11]
    1530:	b	153c <_ZN11__sanitizer9GetRandomEPvmb+0x64>
    1534:	cmp	x0, x9
    1538:	b.eq	15a8 <_ZN11__sanitizer9GetRandomEPvmb+0xd0>  // b.none
    153c:	adrp	x1, 0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1540:	mov	x0, #0xffffffffffffff9c    	// #-100
    1544:	add	x1, x1, #0x0
    1548:	mov	w8, #0x38                  	// #56
    154c:	mov	x2, xzr
    1550:	svc	#0x0
    1554:	cmn	x0, #0x1, lsl #12
    1558:	b.ls	1564 <_ZN11__sanitizer9GetRandomEPvmb+0x8c>  // b.plast
    155c:	mov	w0, wzr
    1560:	ret
    1564:	sxtw	x11, w0
    1568:	mov	x0, x11
    156c:	mov	w8, #0x3f                  	// #63
    1570:	mov	x1, x10
    1574:	mov	x2, x9
    1578:	svc	#0x0
    157c:	cmn	x0, #0xfff
    1580:	b.cc	158c <_ZN11__sanitizer9GetRandomEPvmb+0xb4>  // b.lo, b.ul, b.last
    1584:	cmn	w0, #0x4
    1588:	b.eq	1568 <_ZN11__sanitizer9GetRandomEPvmb+0x90>  // b.none
    158c:	cmn	x0, #0x1, lsl #12
    1590:	b.ls	159c <_ZN11__sanitizer9GetRandomEPvmb+0xc4>  // b.plast
    1594:	mov	w0, wzr
    1598:	ret
    159c:	mov	x0, x11
    15a0:	mov	w8, #0x39                  	// #57
    15a4:	svc	#0x0
    15a8:	mov	w0, #0x1                   	// #1
    15ac:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #3
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #3
  90:	mov	w2, #0x8                   	// #8
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x4, x3, [x0, #8]
   c:	cmp	x3, x4
  10:	b.hi	98 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0x98>  // b.pmore
  14:	mov	x19, x0
  18:	mov	x20, x1
  1c:	b.ne	74 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0x74>  // b.any
  20:	adds	x3, x3, #0x1
  24:	b.cs	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0xb0>  // b.hs, b.nlast
  28:	sub	x8, x3, #0x1
  2c:	tst	x3, x8
  30:	b.ne	3c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0x3c>  // b.any
  34:	mov	x8, x3
  38:	b	64 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0x64>
  3c:	clz	x8, x3
  40:	eor	x9, x8, #0x3f
  44:	mov	w8, #0x2                   	// #2
  48:	lsl	x8, x8, x9
  4c:	cmp	x8, x3
  50:	b.ls	d0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0xd0>  // b.plast
  54:	mov	w10, #0x1                   	// #1
  58:	lsl	x4, x10, x9
  5c:	cmp	x4, x3
  60:	b.cs	ec <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc+0xec>  // b.hs, b.nlast
  64:	mov	x0, x19
  68:	mov	x1, x8
  6c:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  70:	ldr	x3, [x19, #16]
  74:	add	x9, x3, #0x1
  78:	ldr	x8, [x19]
  7c:	str	x9, [x19, #16]
  80:	mov	x1, x20
  84:	ldp	x20, x19, [sp, #16]
  88:	add	x0, x8, x3
  8c:	mov	w2, #0x1                   	// #1
  90:	ldr	x30, [sp], #32
  94:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x1cd                 	// #461
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x186                 	// #390
  c4:	mov	x3, xzr
  c8:	mov	x4, xzr
  cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  d4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  d8:	add	x0, x0, #0x0
  dc:	add	x2, x2, #0x0
  e0:	mov	w1, #0x18a                 	// #394
  e4:	mov	x4, x8
  e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ec:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  f0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE9push_backERKc>
  f4:	add	x0, x0, #0x0
  f8:	add	x2, x2, #0x0
  fc:	mov	w1, #0x18b                 	// #395
 100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 94 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x94>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb4>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 3c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x3c>
  30:	mov	w0, #0x6                   	// #6
  34:	bl	0 <getauxval>
  38:	str	x0, [x21]
  3c:	sub	x8, x0, #0x1
  40:	tst	x0, x8
  44:	b.ne	d0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xd0>  // b.any
  48:	add	x8, x20, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x1, [x19]
  70:	ldr	x2, [x19, #16]
  74:	mov	x21, x0
  78:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  7c:	ldp	x0, x1, [x19]
  80:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  84:	stp	x21, x20, [x19]
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x30, x21, [sp], #32
  90:	ret
  94:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  9c:	add	x0, x0, #0x0
  a0:	add	x2, x2, #0x0
  a4:	mov	w1, #0x20b                 	// #523
  a8:	mov	x3, xzr
  ac:	mov	x4, xzr
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x20c                 	// #524
  c8:	mov	x4, x20
  cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d4:	add	x0, x0, #0x0
  d8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  dc:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0x9c>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	bc <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0xbc>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 3c <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0x3c>
  30:	mov	w0, #0x6                   	// #6
  34:	bl	0 <getauxval>
  38:	str	x0, [x21]
  3c:	sub	x8, x0, #0x1
  40:	tst	x0, x8
  44:	b.ne	d8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0xd8>  // b.any
  48:	lsl	x8, x20, #3
  4c:	add	x8, x8, x0
  50:	sub	x8, x8, #0x1
  54:	neg	x9, x0
  58:	and	x20, x8, x9
  5c:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  60:	add	x1, x1, #0x0
  64:	mov	x0, x20
  68:	mov	w2, wzr
  6c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  70:	ldr	x8, [x19, #16]
  74:	ldr	x1, [x19]
  78:	mov	x21, x0
  7c:	lsl	x2, x8, #3
  80:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  84:	ldp	x0, x1, [x19]
  88:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  8c:	stp	x21, x20, [x19]
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x30, x21, [sp], #32
  98:	ret
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x20b                 	// #523
  b0:	mov	x3, xzr
  b4:	mov	x4, xzr
  b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  bc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  c0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  c4:	add	x0, x0, #0x0
  c8:	add	x2, x2, #0x0
  cc:	mov	w1, #0x20c                 	// #524
  d0:	mov	x4, x20
  d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e4:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_linux_s390.cpp.o:     file format elf64-littleaarch64


sanitizer_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_netbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_openbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_persistent_allocator.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_freebsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_linux.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_netbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_openbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_posix.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22__sanitizer_in_addr_szEi>:
   0:	cmp	w0, #0xa
   4:	cset	w8, eq  // eq = none
   8:	cmp	w0, #0x2
   c:	lsl	x8, x8, #4
  10:	mov	w9, #0x4                   	// #4
  14:	csel	x0, x9, x8, eq  // eq = none
  18:	ret

sanitizer_platform_limits_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_posix.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18GetMmapGranularityEv>:
       0:	b	0 <_ZN11__sanitizer11GetPageSizeEv>

0000000000000004 <_ZN11__sanitizer9MmapOrDieEmPKcb>:
       4:	str	x30, [sp, #-48]!
       8:	stp	x22, x21, [sp, #16]
       c:	stp	x20, x19, [sp, #32]
      10:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
      14:	ldr	x22, [x22]
      18:	mov	w20, w2
      1c:	mov	x19, x1
      20:	mov	x21, x0
      24:	ldr	x8, [x22]
      28:	cbnz	x8, 38 <_ZN11__sanitizer9MmapOrDieEmPKcb+0x34>
      2c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
      30:	mov	x8, x0
      34:	str	x0, [x22]
      38:	sub	x9, x8, #0x1
      3c:	tst	x8, x9
      40:	b.ne	c0 <_ZN11__sanitizer9MmapOrDieEmPKcb+0xbc>  // b.any
      44:	add	x9, x21, x8
      48:	neg	x8, x8
      4c:	sub	x9, x9, #0x1
      50:	and	x21, x9, x8
      54:	mov	w10, #0x22                  	// #34
      58:	add	x2, sp, #0xc
      5c:	mov	x0, x19
      60:	mov	x1, x21
      64:	str	w10, [sp, #12]
      68:	bl	f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
      6c:	ldr	w3, [sp, #12]
      70:	mov	w4, w0
      74:	mov	w2, #0x3                   	// #3
      78:	mov	x0, xzr
      7c:	mov	x1, x21
      80:	mov	x5, xzr
      84:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
      88:	mov	x1, xzr
      8c:	mov	x22, x0
      90:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
      94:	add	x1, sp, #0x8
      98:	mov	x0, x22
      9c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
      a0:	tbnz	w0, #0, d0 <_ZN11__sanitizer9MmapOrDieEmPKcb+0xcc>
      a4:	mov	x0, x21
      a8:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
      ac:	mov	x0, x22
      b0:	ldp	x20, x19, [sp, #32]
      b4:	ldp	x22, x21, [sp, #16]
      b8:	ldr	x30, [sp], #48
      bc:	ret
      c0:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
      c4:	add	x0, x0, #0x0
      c8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
      cc:	bl	0 <_ZN11__sanitizer3DieEv>
      d0:	ldr	w3, [sp, #8]
      d4:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
      d8:	and	w4, w20, #0x1
      dc:	add	x2, x2, #0x0
      e0:	mov	x0, x21
      e4:	mov	x1, x19
      e8:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>

00000000000000ec <_ZN11__sanitizer9MmapNamedEPvmiiPKc>:
      ec:	sub	sp, sp, #0x30
      f0:	stp	x30, x21, [sp, #16]
      f4:	stp	x20, x19, [sp, #32]
      f8:	mov	w19, w2
      fc:	mov	x21, x0
     100:	add	x2, sp, #0xc
     104:	mov	x0, x4
     108:	mov	x20, x1
     10c:	str	w3, [sp, #12]
     110:	bl	f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     114:	ldr	w3, [sp, #12]
     118:	mov	w4, w0
     11c:	mov	x0, x21
     120:	mov	x1, x20
     124:	mov	w2, w19
     128:	mov	x5, xzr
     12c:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     130:	mov	x1, xzr
     134:	mov	x19, x0
     138:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     13c:	mov	x0, x19
     140:	ldp	x20, x19, [sp, #32]
     144:	ldp	x30, x21, [sp, #16]
     148:	add	sp, sp, #0x30
     14c:	ret

0000000000000150 <_ZN11__sanitizer10UnmapOrDieEPvm>:
     150:	str	x30, [sp, #-32]!
     154:	stp	x20, x19, [sp, #16]
     158:	cbz	x0, 18c <_ZN11__sanitizer10UnmapOrDieEPvm+0x3c>
     15c:	mov	x19, x1
     160:	cbz	x1, 18c <_ZN11__sanitizer10UnmapOrDieEPvm+0x3c>
     164:	mov	x1, x19
     168:	mov	x20, x0
     16c:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     170:	mov	x1, xzr
     174:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     178:	tbnz	w0, #0, 198 <_ZN11__sanitizer10UnmapOrDieEPvm+0x48>
     17c:	mov	x0, x19
     180:	ldp	x20, x19, [sp, #16]
     184:	ldr	x30, [sp], #32
     188:	b	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     18c:	ldp	x20, x19, [sp, #16]
     190:	ldr	x30, [sp], #32
     194:	ret
     198:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     19c:	ldr	x8, [x8]
     1a0:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     1a4:	add	x0, x0, #0x0
     1a8:	mov	x2, x19
     1ac:	ldr	x1, [x8]
     1b0:	mov	x3, x19
     1b4:	mov	x4, x20
     1b8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     1bc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     1c0:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     1c4:	add	x0, x0, #0x0
     1c8:	add	x2, x2, #0x0
     1cc:	mov	w1, #0x3d                  	// #61
     1d0:	mov	x3, xzr
     1d4:	mov	x4, xzr
     1d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001dc <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>:
     1dc:	sub	sp, sp, #0x30
     1e0:	stp	x30, x21, [sp, #16]
     1e4:	stp	x20, x19, [sp, #32]
     1e8:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     1ec:	ldr	x21, [x21]
     1f0:	mov	x19, x1
     1f4:	mov	x20, x0
     1f8:	ldr	x8, [x21]
     1fc:	cbnz	x8, 20c <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0x30>
     200:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     204:	mov	x8, x0
     208:	str	x0, [x21]
     20c:	sub	x9, x8, #0x1
     210:	tst	x8, x9
     214:	b.ne	2a8 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xcc>  // b.any
     218:	add	x9, x20, x8
     21c:	neg	x8, x8
     220:	sub	x9, x9, #0x1
     224:	and	x20, x9, x8
     228:	mov	w10, #0x22                  	// #34
     22c:	add	x2, sp, #0xc
     230:	mov	x0, x19
     234:	mov	x1, x20
     238:	str	w10, [sp, #12]
     23c:	bl	f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     240:	ldr	w3, [sp, #12]
     244:	mov	w4, w0
     248:	mov	w2, #0x3                   	// #3
     24c:	mov	x0, xzr
     250:	mov	x1, x20
     254:	mov	x5, xzr
     258:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     25c:	mov	x1, xzr
     260:	mov	x21, x0
     264:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     268:	add	x1, sp, #0x8
     26c:	mov	x0, x21
     270:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     274:	tbnz	w0, #0, 294 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xb8>
     278:	mov	x0, x20
     27c:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
     280:	mov	x0, x21
     284:	ldp	x20, x19, [sp, #32]
     288:	ldp	x30, x21, [sp, #16]
     28c:	add	sp, sp, #0x30
     290:	ret
     294:	ldr	w3, [sp, #8]
     298:	cmp	w3, #0xc
     29c:	b.ne	2b8 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xdc>  // b.any
     2a0:	mov	x21, xzr
     2a4:	b	280 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xa4>
     2a8:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     2ac:	add	x0, x0, #0x0
     2b0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     2b4:	bl	0 <_ZN11__sanitizer3DieEv>
     2b8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     2bc:	add	x2, x2, #0x0
     2c0:	mov	x0, x20
     2c4:	mov	x1, x19
     2c8:	mov	w4, wzr
     2cc:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>

00000000000002d0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc>:
     2d0:	stp	x30, x23, [sp, #-48]!
     2d4:	stp	x22, x21, [sp, #16]
     2d8:	stp	x20, x19, [sp, #32]
     2dc:	sub	x8, x0, #0x1
     2e0:	tst	x0, x8
     2e4:	b.ne	3bc <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xec>  // b.any
     2e8:	sub	x23, x1, #0x1
     2ec:	mov	x19, x1
     2f0:	tst	x1, x23
     2f4:	b.ne	3d4 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x104>  // b.any
     2f8:	add	x22, x19, x0
     2fc:	mov	x20, x0
     300:	mov	x0, x22
     304:	mov	x1, x2
     308:	bl	1dc <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>
     30c:	cbz	x0, 3b4 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xe4>
     310:	mov	x21, x0
     314:	tst	x23, x0
     318:	b.eq	364 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x94>  // b.none
     31c:	add	x8, x23, x21
     320:	neg	x9, x19
     324:	and	x19, x8, x9
     328:	subs	x23, x19, x21
     32c:	b.eq	350 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x80>  // b.none
     330:	mov	x0, x21
     334:	mov	x1, x23
     338:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     33c:	mov	x1, xzr
     340:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     344:	tbnz	w0, #0, 3ec <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x11c>
     348:	mov	x0, x23
     34c:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     350:	add	x8, x22, x21
     354:	add	x21, x19, x20
     358:	subs	x20, x8, x21
     35c:	b.ne	378 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xa8>  // b.any
     360:	b	3a0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd0>
     364:	mov	x19, x21
     368:	add	x8, x22, x21
     36c:	add	x21, x19, x20
     370:	subs	x20, x8, x21
     374:	b.eq	3a0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd0>  // b.none
     378:	cbz	x21, 3a0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd0>
     37c:	cbz	x20, 3a0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd0>
     380:	mov	x0, x21
     384:	mov	x1, x20
     388:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     38c:	mov	x1, xzr
     390:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     394:	tbnz	w0, #0, 40c <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x13c>
     398:	mov	x0, x20
     39c:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     3a0:	mov	x0, x19
     3a4:	ldp	x20, x19, [sp, #32]
     3a8:	ldp	x22, x21, [sp, #16]
     3ac:	ldp	x30, x23, [sp], #48
     3b0:	ret
     3b4:	mov	x19, xzr
     3b8:	b	3a0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd0>
     3bc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3c0:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3c4:	add	x0, x0, #0x0
     3c8:	add	x2, x2, #0x0
     3cc:	mov	w1, #0x55                  	// #85
     3d0:	b	444 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x174>
     3d4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3d8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3dc:	add	x0, x0, #0x0
     3e0:	add	x2, x2, #0x0
     3e4:	mov	w1, #0x56                  	// #86
     3e8:	b	444 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x174>
     3ec:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     3f0:	ldr	x8, [x8]
     3f4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3f8:	add	x0, x0, #0x0
     3fc:	mov	x2, x23
     400:	ldr	x1, [x8]
     404:	mov	x3, x23
     408:	b	428 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x158>
     40c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     410:	ldr	x8, [x8]
     414:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     418:	add	x0, x0, #0x0
     41c:	mov	x2, x20
     420:	ldr	x1, [x8]
     424:	mov	x3, x20
     428:	mov	x4, x21
     42c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     430:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     434:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     438:	add	x0, x0, #0x0
     43c:	add	x2, x2, #0x0
     440:	mov	w1, #0x3d                  	// #61
     444:	mov	x3, xzr
     448:	mov	x4, xzr
     44c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000450 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>:
     450:	sub	sp, sp, #0x30
     454:	stp	x30, x21, [sp, #16]
     458:	stp	x20, x19, [sp, #32]
     45c:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     460:	ldr	x21, [x21]
     464:	mov	x19, x1
     468:	mov	x20, x0
     46c:	ldr	x8, [x21]
     470:	cbnz	x8, 480 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0x30>
     474:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     478:	mov	x8, x0
     47c:	str	x0, [x21]
     480:	sub	x9, x8, #0x1
     484:	tst	x8, x9
     488:	b.ne	508 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0xb8>  // b.any
     48c:	add	x9, x20, x8
     490:	neg	x8, x8
     494:	sub	x9, x9, #0x1
     498:	and	x20, x9, x8
     49c:	mov	w10, #0x4022                	// #16418
     4a0:	add	x2, sp, #0xc
     4a4:	mov	x0, x19
     4a8:	mov	x1, x20
     4ac:	str	w10, [sp, #12]
     4b0:	bl	f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     4b4:	ldr	w3, [sp, #12]
     4b8:	mov	w4, w0
     4bc:	mov	w2, #0x3                   	// #3
     4c0:	mov	x0, xzr
     4c4:	mov	x1, x20
     4c8:	mov	x5, xzr
     4cc:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     4d0:	mov	x1, xzr
     4d4:	mov	x21, x0
     4d8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     4dc:	add	x1, sp, #0x8
     4e0:	mov	x0, x21
     4e4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     4e8:	tbnz	w0, #0, 518 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0xc8>
     4ec:	mov	x0, x20
     4f0:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
     4f4:	mov	x0, x21
     4f8:	ldp	x20, x19, [sp, #32]
     4fc:	ldp	x30, x21, [sp, #16]
     500:	add	sp, sp, #0x30
     504:	ret
     508:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     50c:	add	x0, x0, #0x0
     510:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     514:	bl	0 <_ZN11__sanitizer3DieEv>
     518:	ldr	w3, [sp, #8]
     51c:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     520:	add	x2, x2, #0x0
     524:	mov	x0, x20
     528:	mov	x1, x19
     52c:	mov	w4, wzr
     530:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>

0000000000000534 <_ZN11__sanitizer14MmapFixedOrDieEmmPKc>:
     534:	mov	x3, x2
     538:	mov	w2, wzr
     53c:	b	540 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>

0000000000000540 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>:
     540:	sub	sp, sp, #0x60
     544:	stp	x30, x23, [sp, #48]
     548:	stp	x22, x21, [sp, #64]
     54c:	stp	x20, x19, [sp, #80]
     550:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
     554:	ldr	x23, [x23]
     558:	mov	x22, x3
     55c:	mov	w19, w2
     560:	mov	x20, x1
     564:	ldr	x8, [x23]
     568:	mov	x21, x0
     56c:	cbnz	x8, 57c <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x3c>
     570:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     574:	mov	x8, x0
     578:	str	x0, [x23]
     57c:	sub	x9, x8, #0x1
     580:	tst	x8, x9
     584:	b.ne	634 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xf4>  // b.any
     588:	add	x9, x20, x8
     58c:	sub	x10, x9, #0x1
     590:	neg	x9, x8
     594:	and	x20, x10, x9
     598:	cbnz	x8, 5a8 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x68>
     59c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     5a0:	neg	x9, x0
     5a4:	str	x0, [x23]
     5a8:	mov	w8, #0x32                  	// #50
     5ac:	add	x2, sp, #0x4
     5b0:	mov	x0, x22
     5b4:	mov	x1, x20
     5b8:	and	x21, x9, x21
     5bc:	str	w8, [sp, #4]
     5c0:	bl	f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     5c4:	ldr	w3, [sp, #4]
     5c8:	mov	w4, w0
     5cc:	mov	w2, #0x3                   	// #3
     5d0:	mov	x0, x21
     5d4:	mov	x1, x20
     5d8:	mov	x5, xzr
     5dc:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     5e0:	mov	x1, xzr
     5e4:	mov	x22, x0
     5e8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5ec:	add	x1, sp, #0x2c
     5f0:	mov	x0, x22
     5f4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5f8:	tbnz	w0, #0, 61c <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xdc>
     5fc:	mov	x0, x20
     600:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
     604:	mov	x0, x22
     608:	ldp	x20, x19, [sp, #80]
     60c:	ldp	x22, x21, [sp, #64]
     610:	ldp	x30, x23, [sp, #48]
     614:	add	sp, sp, #0x60
     618:	ret
     61c:	ldr	w8, [sp, #44]
     620:	cmp	w8, #0xc
     624:	b.ne	644 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x104>  // b.any
     628:	tbz	w19, #0, 644 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x104>
     62c:	mov	x22, xzr
     630:	b	604 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xc4>
     634:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     638:	add	x0, x0, #0x0
     63c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     640:	bl	0 <_ZN11__sanitizer3DieEv>
     644:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     648:	add	x2, x2, #0x0
     64c:	add	x0, sp, #0x4
     650:	mov	w1, #0x28                  	// #40
     654:	mov	x3, x21
     658:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     65c:	ldr	w3, [sp, #44]
     660:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     664:	add	x2, x2, #0x0
     668:	add	x1, sp, #0x4
     66c:	mov	x0, x20
     670:	mov	w4, wzr
     674:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>

0000000000000678 <_ZN11__sanitizer26MmapFixedOrDieOnFatalErrorEmmPKc>:
     678:	mov	x3, x2
     67c:	mov	w2, #0x1                   	// #1
     680:	b	540 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>

0000000000000684 <_ZN11__sanitizer16MprotectNoAccessEmm>:
     684:	str	x30, [sp, #-16]!
     688:	mov	w2, wzr
     68c:	bl	0 <_ZN11__sanitizer17internal_mprotectEPvmi>
     690:	cmp	w0, #0x0
     694:	cset	w0, eq  // eq = none
     698:	ldr	x30, [sp], #16
     69c:	ret

00000000000006a0 <_ZN11__sanitizer16MprotectReadOnlyEmm>:
     6a0:	str	x30, [sp, #-16]!
     6a4:	mov	w2, #0x1                   	// #1
     6a8:	bl	0 <_ZN11__sanitizer17internal_mprotectEPvmi>
     6ac:	cmp	w0, #0x0
     6b0:	cset	w0, eq  // eq = none
     6b4:	ldr	x30, [sp], #16
     6b8:	ret

00000000000006bc <_ZN11__sanitizer19MprotectMallocZonesEPvi>:
     6bc:	ret

00000000000006c0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>:
     6c0:	sub	sp, sp, #0x30
     6c4:	stp	x30, x21, [sp, #16]
     6c8:	stp	x20, x19, [sp, #32]
     6cc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     6d0:	ldr	x8, [x8]
     6d4:	mov	x20, x2
     6d8:	mov	w21, w1
     6dc:	mov	x19, x0
     6e0:	ldrb	w8, [x8, #243]
     6e4:	cbz	w8, 700 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x40>
     6e8:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     6ec:	add	x1, x1, #0x0
     6f0:	mov	w2, #0x6                   	// #6
     6f4:	mov	x0, x19
     6f8:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
     6fc:	cbz	w0, 738 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x78>
     700:	cmp	w21, #0x1
     704:	mov	w8, #0x241                 	// #577
     708:	csel	w8, w8, wzr, eq  // eq = none
     70c:	cmp	w21, #0x2
     710:	mov	w9, #0x42                  	// #66
     714:	csel	w1, w9, w8, eq  // eq = none
     718:	mov	w2, #0x1b0                 	// #432
     71c:	mov	x0, x19
     720:	bl	0 <_ZN11__sanitizer13internal_openEPKcij>
     724:	mov	x19, x0
     728:	sxtw	x0, w0
     72c:	mov	x1, x20
     730:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     734:	tbz	w0, #0, 740 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x80>
     738:	mov	w19, #0xffffffff            	// #-1
     73c:	b	7a8 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xe8>
     740:	cmp	w19, #0x2
     744:	b.gt	7a8 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xe8>
     748:	add	x0, sp, #0xc
     74c:	mov	w2, #0x3                   	// #3
     750:	mov	w1, wzr
     754:	add	x20, sp, #0xc
     758:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     75c:	mov	w21, #0x1                   	// #1
     760:	mov	w0, w19
     764:	strb	w21, [x20, w19, sxtw]
     768:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     76c:	mov	x19, x0
     770:	cmp	w19, #0x3
     774:	b.lt	760 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xa0>  // b.tstop
     778:	ldrb	w8, [sp, #12]
     77c:	cbz	w8, 788 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xc8>
     780:	mov	w0, wzr
     784:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     788:	ldrb	w8, [sp, #13]
     78c:	cbz	w8, 798 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xd8>
     790:	mov	w0, #0x1                   	// #1
     794:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     798:	ldrb	w8, [sp, #14]
     79c:	cbz	w8, 7a8 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xe8>
     7a0:	mov	w0, #0x2                   	// #2
     7a4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     7a8:	mov	w0, w19
     7ac:	ldp	x20, x19, [sp, #32]
     7b0:	ldp	x30, x21, [sp, #16]
     7b4:	add	sp, sp, #0x30
     7b8:	ret

00000000000007bc <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc>:
     7bc:	str	x30, [sp, #-16]!
     7c0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     7c4:	ldr	x8, [x8]
     7c8:	ldrb	w8, [x8, #243]
     7cc:	cbz	w8, 7f0 <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc+0x34>
     7d0:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7d4:	add	x1, x1, #0x0
     7d8:	mov	w2, #0x6                   	// #6
     7dc:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
     7e0:	cmp	w0, #0x0
     7e4:	cset	w0, eq  // eq = none
     7e8:	ldr	x30, [sp], #16
     7ec:	ret
     7f0:	mov	w0, wzr
     7f4:	ldr	x30, [sp], #16
     7f8:	ret

00000000000007fc <_ZN11__sanitizer18ReserveStandardFdsEi>:
     7fc:	sub	sp, sp, #0x30
     800:	stp	x30, x21, [sp, #16]
     804:	stp	x20, x19, [sp, #32]
     808:	mov	w19, w0
     80c:	cmp	w0, #0x2
     810:	b.gt	874 <_ZN11__sanitizer18ReserveStandardFdsEi+0x78>
     814:	add	x0, sp, #0xc
     818:	mov	w2, #0x3                   	// #3
     81c:	mov	w1, wzr
     820:	add	x20, sp, #0xc
     824:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     828:	mov	w21, #0x1                   	// #1
     82c:	mov	w0, w19
     830:	strb	w21, [x20, w19, sxtw]
     834:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     838:	mov	x19, x0
     83c:	cmp	w19, #0x3
     840:	b.lt	82c <_ZN11__sanitizer18ReserveStandardFdsEi+0x30>  // b.tstop
     844:	ldrb	w8, [sp, #12]
     848:	cbz	w8, 854 <_ZN11__sanitizer18ReserveStandardFdsEi+0x58>
     84c:	mov	w0, wzr
     850:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     854:	ldrb	w8, [sp, #13]
     858:	cbz	w8, 864 <_ZN11__sanitizer18ReserveStandardFdsEi+0x68>
     85c:	mov	w0, #0x1                   	// #1
     860:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     864:	ldrb	w8, [sp, #14]
     868:	cbz	w8, 874 <_ZN11__sanitizer18ReserveStandardFdsEi+0x78>
     86c:	mov	w0, #0x2                   	// #2
     870:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     874:	mov	w0, w19
     878:	ldp	x20, x19, [sp, #32]
     87c:	ldp	x30, x21, [sp, #16]
     880:	add	sp, sp, #0x30
     884:	ret

0000000000000888 <_ZN11__sanitizer9CloseFileEi>:
     888:	b	0 <_ZN11__sanitizer14internal_closeEi>

000000000000088c <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>:
     88c:	stp	x30, x21, [sp, #-32]!
     890:	stp	x20, x19, [sp, #16]
     894:	mov	x21, x4
     898:	mov	x19, x3
     89c:	bl	0 <_ZN11__sanitizer13internal_readEiPvm>
     8a0:	mov	x1, x21
     8a4:	mov	x20, x0
     8a8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     8ac:	tbz	w0, #0, 8c0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi+0x34>
     8b0:	mov	w0, wzr
     8b4:	ldp	x20, x19, [sp, #16]
     8b8:	ldp	x30, x21, [sp], #32
     8bc:	ret
     8c0:	cbz	x19, 8c8 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi+0x3c>
     8c4:	str	x20, [x19]
     8c8:	mov	w0, #0x1                   	// #1
     8cc:	ldp	x20, x19, [sp, #16]
     8d0:	ldp	x30, x21, [sp], #32
     8d4:	ret

00000000000008d8 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>:
     8d8:	stp	x30, x21, [sp, #-32]!
     8dc:	stp	x20, x19, [sp, #16]
     8e0:	mov	x21, x4
     8e4:	mov	x19, x3
     8e8:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
     8ec:	mov	x1, x21
     8f0:	mov	x20, x0
     8f4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     8f8:	tbz	w0, #0, 90c <_ZN11__sanitizer11WriteToFileEiPKvmPmPi+0x34>
     8fc:	mov	w0, wzr
     900:	ldp	x20, x19, [sp, #16]
     904:	ldp	x30, x21, [sp], #32
     908:	ret
     90c:	cbz	x19, 914 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi+0x3c>
     910:	str	x20, [x19]
     914:	mov	w0, #0x1                   	// #1
     918:	ldp	x20, x19, [sp, #16]
     91c:	ldp	x30, x21, [sp], #32
     920:	ret

0000000000000924 <_ZN11__sanitizer15MapFileToMemoryEPKcPm>:
     924:	str	x30, [sp, #-48]!
     928:	stp	x22, x21, [sp, #16]
     92c:	stp	x20, x19, [sp, #32]
     930:	mov	x19, x1
     934:	mov	w1, wzr
     938:	mov	x2, xzr
     93c:	bl	6c0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
     940:	cmn	w0, #0x1
     944:	b.eq	9d4 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xb0>  // b.none
     948:	mov	w20, w0
     94c:	bl	0 <_ZN11__sanitizer17internal_filesizeEi>
     950:	cbz	x0, 9ec <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xc8>
     954:	mov	x21, x0
     958:	cmn	x0, #0x1
     95c:	b.eq	a0c <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xe8>  // b.none
     960:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
     964:	ldr	x22, [x22]
     968:	ldr	x0, [x22]
     96c:	cbnz	x0, 978 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x54>
     970:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     974:	str	x0, [x22]
     978:	sub	x8, x0, #0x1
     97c:	tst	x0, x8
     980:	b.ne	a2c <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x108>  // b.any
     984:	add	x8, x21, x0
     988:	sub	x8, x8, #0x1
     98c:	neg	x9, x0
     990:	and	x1, x8, x9
     994:	mov	w2, #0x1                   	// #1
     998:	mov	w3, #0x2                   	// #2
     99c:	mov	x0, xzr
     9a0:	mov	w4, w20
     9a4:	mov	x5, xzr
     9a8:	str	x1, [x19]
     9ac:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     9b0:	mov	x1, xzr
     9b4:	mov	x19, x0
     9b8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     9bc:	tst	w0, #0x1
     9c0:	csel	x0, xzr, x19, ne  // ne = any
     9c4:	ldp	x20, x19, [sp, #32]
     9c8:	ldp	x22, x21, [sp, #16]
     9cc:	ldr	x30, [sp], #48
     9d0:	ret
     9d4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     9d8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     9dc:	add	x0, x0, #0x0
     9e0:	add	x2, x2, #0x0
     9e4:	mov	w1, #0xc2                  	// #194
     9e8:	b	a00 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xdc>
     9ec:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     9f0:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     9f4:	add	x0, x0, #0x0
     9f8:	add	x2, x2, #0x0
     9fc:	mov	w1, #0xc5                  	// #197
     a00:	mov	x3, xzr
     a04:	mov	x4, xzr
     a08:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a0c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a10:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a14:	add	x0, x0, #0x0
     a18:	add	x2, x2, #0x0
     a1c:	mov	w1, #0xc4                  	// #196
     a20:	mov	x3, #0xffffffffffffffff    	// #-1
     a24:	mov	x4, #0xffffffffffffffff    	// #-1
     a28:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a2c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a30:	add	x0, x0, #0x0
     a34:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     a38:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000a3c <_ZN11__sanitizer23MapWritableFileToMemoryEPvmim>:
     a3c:	str	x30, [sp, #-48]!
     a40:	stp	x22, x21, [sp, #16]
     a44:	stp	x20, x19, [sp, #32]
     a48:	mov	x19, x3
     a4c:	mov	w21, w2
     a50:	cmp	x0, #0x0
     a54:	mov	w8, #0x11                  	// #17
     a58:	csinc	w3, w8, wzr, ne  // ne = any
     a5c:	mov	w2, #0x3                   	// #3
     a60:	mov	w4, w21
     a64:	mov	x5, x19
     a68:	mov	x20, x1
     a6c:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     a70:	add	x1, sp, #0xc
     a74:	mov	x22, x0
     a78:	str	wzr, [sp, #12]
     a7c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     a80:	tbz	w0, #0, aa8 <_ZN11__sanitizer23MapWritableFileToMemoryEPvmim+0x6c>
     a84:	ldr	w5, [sp, #12]
     a88:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a8c:	add	x0, x0, #0x0
     a90:	mov	w1, w21
     a94:	mov	x2, x19
     a98:	mov	x3, x20
     a9c:	mov	x4, x22
     aa0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     aa4:	mov	x22, xzr
     aa8:	mov	x0, x22
     aac:	ldp	x20, x19, [sp, #32]
     ab0:	ldp	x22, x21, [sp, #16]
     ab4:	ldr	x30, [sp], #48
     ab8:	ret

0000000000000abc <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>:
     abc:	sub	sp, sp, #0x90
     ac0:	stp	x30, x21, [sp, #112]
     ac4:	stp	x20, x19, [sp, #128]
     ac8:	mov	x19, x1
     acc:	mov	x20, x0
     ad0:	add	x0, sp, #0x50
     ad4:	mov	w1, #0x1                   	// #1
     ad8:	mov	w21, #0x1                   	// #1
     adc:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     ae0:	add	x0, sp, #0x50
     ae4:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
     ae8:	tbnz	w0, #0, b78 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xbc>
     aec:	add	x0, sp, #0x50
     af0:	mov	x1, sp
     af4:	stp	xzr, xzr, [sp, #24]
     af8:	str	xzr, [sp, #72]
     afc:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     b00:	tbz	w0, #0, b74 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xb8>
     b04:	cmp	x20, x19
     b08:	b.ls	b40 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x84>  // b.plast
     b0c:	mov	w21, #0x1                   	// #1
     b10:	ldp	x8, x9, [sp]
     b14:	cmp	x8, x9
     b18:	b.ne	b94 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xd8>  // b.any
     b1c:	add	x0, sp, #0x50
     b20:	mov	x1, sp
     b24:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     b28:	tbnz	w0, #0, b10 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x54>
     b2c:	b	b78 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xbc>
     b30:	add	x0, sp, #0x50
     b34:	mov	x1, sp
     b38:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     b3c:	tbz	w0, #0, b74 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xb8>
     b40:	ldp	x8, x9, [sp]
     b44:	cmp	x8, x9
     b48:	b.eq	b30 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x74>  // b.none
     b4c:	cbz	x9, b98 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xdc>
     b50:	sub	x9, x9, #0x1
     b54:	cmp	x8, x9
     b58:	b.hi	bc4 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x108>  // b.pmore
     b5c:	cmp	x8, x19
     b60:	b.hi	b30 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x74>  // b.pmore
     b64:	cmp	x9, x20
     b68:	b.cc	b30 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x74>  // b.lo, b.ul, b.last
     b6c:	mov	w21, wzr
     b70:	b	b78 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xbc>
     b74:	mov	w21, #0x1                   	// #1
     b78:	add	x0, sp, #0x50
     b7c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     b80:	mov	w0, w21
     b84:	ldp	x20, x19, [sp, #128]
     b88:	ldp	x30, x21, [sp, #112]
     b8c:	add	sp, sp, #0x90
     b90:	ret
     b94:	cbnz	x9, bb8 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xfc>
     b98:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     b9c:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     ba0:	add	x0, x0, #0x0
     ba4:	add	x2, x2, #0x0
     ba8:	mov	w1, #0xea                  	// #234
     bac:	mov	x3, xzr
     bb0:	mov	x4, xzr
     bb4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     bb8:	sub	x9, x9, #0x1
     bbc:	cmp	x8, x9
     bc0:	b.ls	be4 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x128>  // b.plast
     bc4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bc8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bcc:	add	x0, x0, #0x0
     bd0:	add	x2, x2, #0x0
     bd4:	mov	w1, #0xda                  	// #218
     bd8:	mov	x3, xzr
     bdc:	mov	x4, xzr
     be0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     be4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     be8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bec:	add	x0, x0, #0x0
     bf0:	add	x2, x2, #0x0
     bf4:	mov	w1, #0xdb                  	// #219
     bf8:	mov	x3, xzr
     bfc:	mov	x4, xzr
     c00:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000c04 <_ZN11__sanitizer14DumpProcessMapEv>:
     c04:	sub	sp, sp, #0x90
     c08:	str	x30, [sp, #112]
     c0c:	stp	x20, x19, [sp, #128]
     c10:	add	x0, sp, #0x50
     c14:	mov	w1, #0x1                   	// #1
     c18:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     c1c:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     c20:	add	x1, x1, #0x0
     c24:	mov	w0, #0xfff                 	// #4095
     c28:	mov	w2, wzr
     c2c:	mov	w20, #0xfff                 	// #4095
     c30:	bl	4 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     c34:	mov	x19, x0
     c38:	stp	x0, x20, [sp, #24]
     c3c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     c40:	add	x0, x0, #0x0
     c44:	str	xzr, [sp, #72]
     c48:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     c4c:	add	x0, sp, #0x50
     c50:	mov	x1, sp
     c54:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     c58:	tbz	w0, #0, c84 <_ZN11__sanitizer14DumpProcessMapEv+0x80>
     c5c:	adrp	x20, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     c60:	add	x20, x20, #0x0
     c64:	ldp	x1, x2, [sp]
     c68:	ldr	x3, [sp, #24]
     c6c:	mov	x0, x20
     c70:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     c74:	add	x0, sp, #0x50
     c78:	mov	x1, sp
     c7c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     c80:	tbnz	w0, #0, c64 <_ZN11__sanitizer14DumpProcessMapEv+0x60>
     c84:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     c88:	add	x0, x0, #0x0
     c8c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     c90:	cbz	x19, cb4 <_ZN11__sanitizer14DumpProcessMapEv+0xb0>
     c94:	mov	w1, #0xfff                 	// #4095
     c98:	mov	x0, x19
     c9c:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     ca0:	mov	x1, xzr
     ca4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ca8:	tbnz	w0, #0, ccc <_ZN11__sanitizer14DumpProcessMapEv+0xc8>
     cac:	mov	w0, #0xfff                 	// #4095
     cb0:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     cb4:	add	x0, sp, #0x50
     cb8:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     cbc:	ldp	x20, x19, [sp, #128]
     cc0:	ldr	x30, [sp, #112]
     cc4:	add	sp, sp, #0x90
     cc8:	ret
     ccc:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     cd0:	ldr	x8, [x8]
     cd4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     cd8:	add	x0, x0, #0x0
     cdc:	mov	w2, #0xfff                 	// #4095
     ce0:	ldr	x1, [x8]
     ce4:	mov	w3, #0xfff                 	// #4095
     ce8:	mov	x4, x19
     cec:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     cf0:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     cf4:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     cf8:	add	x0, x0, #0x0
     cfc:	add	x2, x2, #0x0
     d00:	mov	w1, #0x3d                  	// #61
     d04:	mov	x3, xzr
     d08:	mov	x4, xzr
     d0c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d10 <_ZN11__sanitizer6GetPwdEv>:
     d10:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     d14:	add	x0, x0, #0x0
     d18:	b	0 <_ZN11__sanitizer6GetEnvEPKc>

0000000000000d1c <_ZN11__sanitizer15IsPathSeparatorEc>:
     d1c:	and	w8, w0, #0xff
     d20:	cmp	w8, #0x2f
     d24:	cset	w0, eq  // eq = none
     d28:	ret

0000000000000d2c <_ZN11__sanitizer14IsAbsolutePathEPKc>:
     d2c:	cbz	x0, d3c <_ZN11__sanitizer14IsAbsolutePathEPKc+0x10>
     d30:	ldrb	w8, [x0]
     d34:	cmp	w8, #0x2f
     d38:	cset	w0, eq  // eq = none
     d3c:	ret

0000000000000d40 <_ZN11__sanitizer10ReportFile5WriteEPKcm>:
     d40:	str	x30, [sp, #-48]!
     d44:	stp	x22, x21, [sp, #16]
     d48:	stp	x20, x19, [sp, #32]
     d4c:	ldr	x19, [x0]
     d50:	mov	x20, x2
     d54:	mov	x21, x1
     d58:	mov	x22, x0
     d5c:	mov	w8, #0x1                   	// #1
     d60:	ldaxrb	w9, [x19]
     d64:	stlxrb	w10, w8, [x19]
     d68:	cbnz	w10, d60 <_ZN11__sanitizer10ReportFile5WriteEPKcm+0x20>
     d6c:	cbz	w9, d78 <_ZN11__sanitizer10ReportFile5WriteEPKcm+0x38>
     d70:	mov	x0, x19
     d74:	bl	0 <_ZN11__sanitizer18GetMmapGranularityEv>
     d78:	mov	x0, x22
     d7c:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     d80:	ldr	w0, [x22, #8]
     d84:	mov	x1, x21
     d88:	mov	x2, x20
     d8c:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
     d90:	dmb	ish
     d94:	strb	wzr, [x19]
     d98:	ldp	x20, x19, [sp, #32]
     d9c:	ldp	x22, x21, [sp, #16]
     da0:	ldr	x30, [sp], #48
     da4:	ret

0000000000000da8 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_>:
     da8:	sub	sp, sp, #0xc0
     dac:	str	x30, [sp, #144]
     db0:	stp	x22, x21, [sp, #160]
     db4:	stp	x20, x19, [sp, #176]
     db8:	mov	x20, x1
     dbc:	mov	x21, x0
     dc0:	add	x0, sp, #0x70
     dc4:	mov	w1, wzr
     dc8:	mov	x19, x2
     dcc:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     dd0:	add	x0, sp, #0x50
     dd4:	mov	w1, #0x1000                	// #4096
     dd8:	stp	xzr, xzr, [sp, #88]
     ddc:	str	xzr, [sp, #80]
     de0:	bl	0 <_ZN11__sanitizer18GetMmapGranularityEv>
     de4:	ldr	x8, [sp, #96]
     de8:	cmp	x8, #0xfff
     dec:	b.hi	e24 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x7c>  // b.pmore
     df0:	ldr	x9, [sp, #88]
     df4:	cmp	x9, #0xfff
     df8:	b.hi	e0c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x64>  // b.pmore
     dfc:	add	x0, sp, #0x50
     e00:	mov	w1, #0x1000                	// #4096
     e04:	bl	0 <_ZN11__sanitizer18GetMmapGranularityEv>
     e08:	ldr	x8, [sp, #96]
     e0c:	ldr	x9, [sp, #80]
     e10:	mov	w10, #0x1000                	// #4096
     e14:	sub	x2, x10, x8
     e18:	mov	w1, wzr
     e1c:	add	x0, x9, x8
     e20:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     e24:	adrp	x8, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     e28:	ldr	q0, [x8]
     e2c:	ldr	x8, [sp, #80]
     e30:	mov	w9, #0x1000                	// #4096
     e34:	add	x0, sp, #0x70
     e38:	str	q0, [sp, #96]
     e3c:	strb	wzr, [x8]
     e40:	ldr	x8, [sp, #80]
     e44:	mov	x1, sp
     e48:	str	xzr, [sp, #72]
     e4c:	stp	x8, x9, [sp, #24]
     e50:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     e54:	mov	w22, wzr
     e58:	tbnz	w0, #0, e70 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xc8>
     e5c:	b	ea4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xfc>
     e60:	add	x0, sp, #0x70
     e64:	mov	x1, sp
     e68:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     e6c:	tbz	w0, #0, ea0 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xf8>
     e70:	ldrb	w8, [sp, #40]
     e74:	tbz	w8, #2, e60 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xb8>
     e78:	ldr	x1, [sp, #24]
     e7c:	mov	x0, x21
     e80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     e84:	cbnz	w0, e60 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xb8>
     e88:	ldr	x8, [sp]
     e8c:	mov	w22, #0x1                   	// #1
     e90:	str	x8, [x20]
     e94:	ldr	x8, [sp, #8]
     e98:	str	x8, [x19]
     e9c:	b	ea4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xfc>
     ea0:	mov	w22, wzr
     ea4:	ldr	x19, [sp, #80]
     ea8:	cbz	x19, ed4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x12c>
     eac:	ldr	x20, [sp, #88]
     eb0:	cbz	x20, ed4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x12c>
     eb4:	mov	x0, x19
     eb8:	mov	x1, x20
     ebc:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     ec0:	mov	x1, xzr
     ec4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ec8:	tbnz	w0, #0, ef4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x14c>
     ecc:	mov	x0, x20
     ed0:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     ed4:	add	x0, sp, #0x70
     ed8:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     edc:	mov	w0, w22
     ee0:	ldp	x20, x19, [sp, #176]
     ee4:	ldp	x22, x21, [sp, #160]
     ee8:	ldr	x30, [sp, #144]
     eec:	add	sp, sp, #0xc0
     ef0:	ret
     ef4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     ef8:	ldr	x8, [x8]
     efc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     f00:	add	x0, x0, #0x0
     f04:	mov	x2, x20
     f08:	ldr	x1, [x8]
     f0c:	mov	x3, x20
     f10:	mov	x4, x19
     f14:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     f18:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     f1c:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     f20:	add	x0, x0, #0x0
     f24:	add	x2, x2, #0x0
     f28:	mov	w1, #0x3d                  	// #61
     f2c:	mov	x3, xzr
     f30:	mov	x4, xzr
     f34:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000f38 <_ZNK11__sanitizer13SignalContext10GetAddressEv>:
     f38:	ldr	x8, [x0]
     f3c:	ldr	x0, [x8, #16]
     f40:	ret

0000000000000f44 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>:
     f44:	ldr	x8, [x0]
     f48:	ldr	w8, [x8]
     f4c:	cmp	w8, #0xb
     f50:	cset	w0, eq  // eq = none
     f54:	ret

0000000000000f58 <_ZNK11__sanitizer13SignalContext7GetTypeEv>:
     f58:	ldr	x8, [x0]
     f5c:	ldr	w0, [x8]
     f60:	ret

0000000000000f64 <_ZNK11__sanitizer13SignalContext8DescribeEv>:
     f64:	ldr	x8, [x0]
     f68:	ldr	w8, [x8]
     f6c:	sub	w8, w8, #0x4
     f70:	cmp	w8, #0x7
     f74:	b.hi	f88 <_ZNK11__sanitizer13SignalContext8DescribeEv+0x24>  // b.pmore
     f78:	adrp	x9, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     f7c:	add	x9, x9, #0x0
     f80:	ldr	x0, [x9, w8, sxtw #3]
     f84:	ret
     f88:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     f8c:	add	x0, x0, #0x0
     f90:	ret

0000000000000f94 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>:
     f94:	sub	sp, sp, #0x110
     f98:	str	x29, [sp, #208]
     f9c:	stp	x30, x23, [sp, #224]
     fa0:	stp	x22, x21, [sp, #240]
     fa4:	stp	x20, x19, [sp, #256]
     fa8:	mov	w21, #0xffffffff            	// #-1
     fac:	cbz	x0, 10a8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x114>
     fb0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     fb4:	ldr	x8, [x8]
     fb8:	ldrb	w8, [x8, #223]
     fbc:	cbz	w8, 10a8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x114>
     fc0:	mov	x19, x2
     fc4:	mov	x20, x1
     fc8:	mov	x22, x0
     fcc:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     fd0:	cmp	x0, #0xbe
     fd4:	b.cs	10c4 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x130>  // b.hs, b.nlast
     fd8:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     fdc:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     fe0:	mov	x3, x0
     fe4:	add	x2, x2, #0x0
     fe8:	add	x0, sp, #0x8
     fec:	mov	w1, #0xc8                  	// #200
     ff0:	mov	x4, x22
     ff4:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     ff8:	mov	w1, #0x242                 	// #578
     ffc:	add	x0, sp, #0x8
    1000:	movk	w1, #0x8, lsl #16
    1004:	mov	w2, #0x1c0                 	// #448
    1008:	bl	0 <_ZN11__sanitizer13internal_openEPKcij>
    100c:	mov	x21, x0
    1010:	cmp	w21, #0x2
    1014:	b.gt	1078 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xe4>
    1018:	add	x0, sp, #0xdc
    101c:	mov	w2, #0x3                   	// #3
    1020:	mov	w1, wzr
    1024:	add	x22, sp, #0xdc
    1028:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    102c:	mov	w23, #0x1                   	// #1
    1030:	mov	w0, w21
    1034:	strb	w23, [x22, w21, sxtw]
    1038:	bl	0 <_ZN11__sanitizer12internal_dupEi>
    103c:	mov	x21, x0
    1040:	cmp	w21, #0x3
    1044:	b.lt	1030 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x9c>  // b.tstop
    1048:	ldrb	w8, [sp, #220]
    104c:	cbz	w8, 1058 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xc4>
    1050:	mov	w0, wzr
    1054:	bl	0 <_ZN11__sanitizer14internal_closeEi>
    1058:	ldrb	w8, [sp, #221]
    105c:	cbz	w8, 1068 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xd4>
    1060:	mov	w0, #0x1                   	// #1
    1064:	bl	0 <_ZN11__sanitizer14internal_closeEi>
    1068:	ldrb	w8, [sp, #222]
    106c:	cbz	w8, 1078 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xe4>
    1070:	mov	w0, #0x2                   	// #2
    1074:	bl	0 <_ZN11__sanitizer14internal_closeEi>
    1078:	mov	w0, w21
    107c:	mov	x1, x20
    1080:	bl	0 <_ZN11__sanitizer18internal_ftruncateEim>
    1084:	lsl	x8, x0, #32
    1088:	cbnz	x8, 10e4 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x150>
    108c:	add	x0, sp, #0x8
    1090:	bl	0 <_ZN11__sanitizer15internal_unlinkEPKc>
    1094:	lsl	x8, x0, #32
    1098:	cbnz	x8, 1104 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x170>
    109c:	ldr	w8, [x19]
    10a0:	and	w8, w8, #0xffffffdf
    10a4:	str	w8, [x19]
    10a8:	mov	w0, w21
    10ac:	ldp	x20, x19, [sp, #256]
    10b0:	ldp	x22, x21, [sp, #240]
    10b4:	ldp	x30, x23, [sp, #224]
    10b8:	ldr	x29, [sp, #208]
    10bc:	add	sp, sp, #0x110
    10c0:	ret
    10c4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10c8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10cc:	add	x0, x0, #0x0
    10d0:	add	x2, x2, #0x0
    10d4:	mov	w1, #0x15b                 	// #347
    10d8:	mov	x3, xzr
    10dc:	mov	x4, xzr
    10e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    10e4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10e8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10ec:	asr	x4, x8, #32
    10f0:	add	x0, x0, #0x0
    10f4:	add	x2, x2, #0x0
    10f8:	mov	w1, #0x162                 	// #354
    10fc:	mov	x3, xzr
    1100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1104:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1108:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    110c:	asr	x4, x8, #32
    1110:	add	x0, x0, #0x0
    1114:	add	x2, x2, #0x0
    1118:	mov	w1, #0x164                 	// #356
    111c:	mov	x3, xzr
    1120:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001124 <_ZN11__sanitizer15DecorateMappingEmmPKc>:
    1124:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x23, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	cbz	x1, c0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xc0>
  10:	ldr	x3, [x0, #16]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	cmp	x3, x1
  20:	b.hi	d8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xd8>  // b.pmore
  24:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  28:	ldr	x21, [x21]
  2c:	ldr	x0, [x21]
  30:	cbnz	x0, 3c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x3c>
  34:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  38:	str	x0, [x21]
  3c:	sub	x8, x0, #0x1
  40:	tst	x0, x8
  44:	b.ne	f4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xf4>  // b.any
  48:	add	x8, x20, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x4>
  6c:	ldr	x1, [x19]
  70:	ldr	x2, [x19, #16]
  74:	mov	x21, x0
  78:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  7c:	ldr	x22, [x19]
  80:	cbz	x22, ac <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xac>
  84:	ldr	x23, [x19, #8]
  88:	cbz	x23, ac <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xac>
  8c:	mov	x0, x22
  90:	mov	x1, x23
  94:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
  98:	mov	x1, xzr
  9c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
  a0:	tbnz	w0, #0, 104 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x104>
  a4:	mov	x0, x23
  a8:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
  ac:	stp	x21, x20, [x19]
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldp	x22, x21, [sp, #16]
  b8:	ldp	x30, x23, [sp], #48
  bc:	ret
  c0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  c4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  c8:	add	x0, x0, #0x0
  cc:	add	x2, x2, #0x0
  d0:	mov	w1, #0x20b                 	// #523
  d4:	b	13c <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x13c>
  d8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  dc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  e0:	add	x0, x0, #0x0
  e4:	add	x2, x2, #0x0
  e8:	mov	w1, #0x20c                 	// #524
  ec:	mov	x4, x20
  f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 100:	bl	0 <_ZN11__sanitizer3DieEv>
 104:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 108:	ldr	x8, [x8]
 10c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
 110:	add	x0, x0, #0x0
 114:	mov	x2, x23
 118:	ldr	x1, [x8]
 11c:	mov	x3, x23
 120:	mov	x4, x22
 124:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 128:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
 12c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
 130:	add	x0, x0, #0x0
 134:	add	x2, x2, #0x0
 138:	mov	w1, #0x3d                  	// #61
 13c:	mov	x3, xzr
 140:	mov	x4, xzr
 144:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

sanitizer_printf.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	str	x0, [sp, #8]
  20:	cbz	x2, 620 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x620>
  24:	cmp	w1, #0x0
  28:	b.le	630 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x630>
  2c:	sub	w8, w1, #0x1
  30:	adrp	x25, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
  34:	adrp	x28, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
  38:	mov	x20, x3
  3c:	mov	x22, x2
  40:	mov	w19, wzr
  44:	mov	w23, #0x1                   	// #1
  48:	mov	w24, #0xa                   	// #10
  4c:	add	x25, x25, #0x0
  50:	mov	w26, #0x20                  	// #32
  54:	add	x28, x28, #0x0
  58:	mov	w29, #0x10                  	// #16
  5c:	add	x21, x0, w8, sxtw
  60:	mov	w27, #0x78                  	// #120
  64:	b	84 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x84>
  68:	ldr	w8, [x8]
  6c:	strb	w8, [x9]
  70:	ldr	x8, [sp, #8]
  74:	add	x8, x8, #0x1
  78:	str	x8, [sp, #8]
  7c:	add	w19, w19, #0x1
  80:	add	x22, x22, #0x1
  84:	ldrb	w8, [x22]
  88:	cmp	w8, #0x25
  8c:	b.eq	a8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xa8>  // b.none
  90:	cbz	w8, 58c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x58c>
  94:	ldr	x9, [sp, #8]
  98:	cmp	x9, x21
  9c:	b.cs	7c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x7c>  // b.hs, b.nlast
  a0:	strb	w8, [x9]
  a4:	b	70 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x70>
  a8:	mov	x10, x22
  ac:	ldrb	w9, [x10, #1]!
  b0:	add	x11, x22, #0x2
  b4:	cmp	w9, #0x2d
  b8:	cinc	x8, x23, eq  // eq = none
  bc:	ldrb	w8, [x22, x8]
  c0:	csel	x12, x11, x10, eq  // eq = none
  c4:	sub	w11, w8, #0x30
  c8:	cmp	w11, #0x9
  cc:	b.hi	104 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x104>  // b.pmore
  d0:	mov	w4, wzr
  d4:	mov	w13, w8
  d8:	ldrb	w10, [x12, #1]!
  dc:	mul	w14, w4, w24
  e0:	add	w13, w14, w13, uxtb
  e4:	sub	w4, w13, #0x30
  e8:	sub	w14, w10, #0x30
  ec:	cmp	w14, #0xa
  f0:	mov	w13, w10
  f4:	b.cc	d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xd8>  // b.lo, b.ul, b.last
  f8:	cmp	w10, #0x2e
  fc:	b.ne	148 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x148>  // b.any
 100:	b	114 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x114>
 104:	mov	w4, wzr
 108:	mov	w10, w8
 10c:	cmp	w10, #0x2e
 110:	b.ne	148 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x148>  // b.any
 114:	ldrb	w10, [x12, #1]
 118:	cmp	w10, #0x2a
 11c:	b.ne	148 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x148>  // b.any
 120:	ldrsw	x10, [x20, #24]
 124:	add	x12, x12, #0x2
 128:	tbz	w10, #31, 150 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x150>
 12c:	add	w13, w10, #0x8
 130:	cmn	w10, #0x8
 134:	str	w13, [x20, #24]
 138:	b.gt	150 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x150>
 13c:	ldr	x13, [x20, #8]
 140:	add	x10, x13, x10
 144:	b	15c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x15c>
 148:	mov	w10, #0xffffffff            	// #-1
 14c:	b	160 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x160>
 150:	ldr	x10, [x20]
 154:	add	x13, x10, #0x8
 158:	str	x13, [x20]
 15c:	ldr	w10, [x10]
 160:	mov	x14, x12
 164:	ldrb	w13, [x14], #1
 168:	cmp	w13, #0x7a
 16c:	csel	x14, x12, x14, ne  // ne = any
 170:	b.eq	194 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x194>  // b.none
 174:	ldrb	w12, [x14]
 178:	cmp	w12, #0x6c
 17c:	b.ne	194 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x194>  // b.any
 180:	ldrb	w12, [x14, #1]
 184:	cmp	w12, #0x6c
 188:	cset	w12, eq  // eq = none
 18c:	lsl	x15, x12, #1
 190:	b	19c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x19c>
 194:	mov	w12, wzr
 198:	mov	x15, xzr
 19c:	add	x22, x14, x15
 1a0:	ldrb	w15, [x22]
 1a4:	cmp	w13, #0x7a
 1a8:	and	w16, w11, #0xff
 1ac:	cset	w14, eq  // eq = none
 1b0:	cmp	w16, #0xa
 1b4:	cset	w16, cc  // cc = lo, ul, last
 1b8:	cmp	w9, #0x2d
 1bc:	orr	w14, w14, w12
 1c0:	b.eq	208 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x208>  // b.none
 1c4:	tbz	w10, #31, 208 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x208>
 1c8:	sub	w17, w15, #0x58
 1cc:	cmp	w17, #0x20
 1d0:	orr	w16, w16, w14
 1d4:	b.hi	348 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x348>  // b.pmore
 1d8:	adr	x15, 1e8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x1e8>
 1dc:	ldrb	w18, [x28, x17]
 1e0:	add	x15, x15, x18, lsl #2
 1e4:	br	x15
 1e8:	ldrsw	x9, [x20, #24]
 1ec:	cbz	w12, 308 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x308>
 1f0:	tbz	w9, #31, 334 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x334>
 1f4:	add	w10, w9, #0x8
 1f8:	cmn	w9, #0x8
 1fc:	str	w10, [x20, #24]
 200:	b.gt	334 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x334>
 204:	b	324 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x324>
 208:	cmp	w15, #0x73
 20c:	b.ne	5e8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5e8>  // b.any
 210:	cbnz	w14, 5d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d8>
 214:	cmp	w9, #0x2d
 218:	b.eq	228 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x228>  // b.none
 21c:	and	w8, w11, #0xff
 220:	cmp	w8, #0x9
 224:	b.ls	600 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x600>  // b.plast
 228:	ldrsw	x11, [x20, #24]
 22c:	cmp	w9, #0x2d
 230:	cneg	w8, w4, eq  // eq = none
 234:	tbz	w11, #31, 254 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x254>
 238:	add	w9, w11, #0x8
 23c:	cmn	w11, #0x8
 240:	str	w9, [x20, #24]
 244:	b.gt	254 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x254>
 248:	ldr	x9, [x20, #8]
 24c:	add	x11, x9, x11
 250:	b	260 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x260>
 254:	ldr	x11, [x20]
 258:	add	x9, x11, #0x8
 25c:	str	x9, [x20]
 260:	ldr	x11, [x11]
 264:	mov	w9, wzr
 268:	cmp	x11, #0x0
 26c:	csel	x12, x25, x11, eq  // eq = none
 270:	cbz	w10, 2b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2b8>
 274:	ldrb	w14, [x12]
 278:	cbz	w14, 2b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2b8>
 27c:	ldr	x13, [sp, #8]
 280:	mov	x11, xzr
 284:	add	x12, x12, #0x1
 288:	cmp	x13, x21
 28c:	b.cs	2a0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2a0>  // b.hs, b.nlast
 290:	strb	w14, [x13]
 294:	ldr	x9, [sp, #8]
 298:	add	x13, x9, #0x1
 29c:	str	x13, [sp, #8]
 2a0:	add	x9, x11, #0x1
 2a4:	cmp	w9, w10
 2a8:	b.cs	2b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2b8>  // b.hs, b.nlast
 2ac:	ldrb	w14, [x12, x11]
 2b0:	mov	x11, x9
 2b4:	cbnz	w14, 288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x288>
 2b8:	neg	w10, w9
 2bc:	cmp	w8, w10
 2c0:	b.ge	2fc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2fc>  // b.tcont
 2c4:	ldr	x10, [sp, #8]
 2c8:	neg	w8, w8
 2cc:	sub	w9, w8, w9
 2d0:	b	2dc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2dc>
 2d4:	subs	w9, w9, #0x1
 2d8:	b.eq	2f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2f8>  // b.none
 2dc:	cmp	x10, x21
 2e0:	b.cs	2d4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2d4>  // b.hs, b.nlast
 2e4:	strb	w26, [x10]
 2e8:	ldr	x10, [sp, #8]
 2ec:	add	x10, x10, #0x1
 2f0:	str	x10, [sp, #8]
 2f4:	b	2d4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2d4>
 2f8:	mov	w9, w8
 2fc:	add	w19, w9, w19
 300:	add	x22, x22, #0x1
 304:	b	84 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x84>
 308:	cmp	w13, #0x7a
 30c:	b.ne	48c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x48c>  // b.any
 310:	tbz	w9, #31, 334 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x334>
 314:	add	w10, w9, #0x8
 318:	cmn	w9, #0x8
 31c:	str	w10, [x20, #24]
 320:	b.gt	334 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x334>
 324:	ldr	x10, [x20, #8]
 328:	add	x9, x10, x9
 32c:	ldr	x2, [x9]
 330:	b	4bc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4bc>
 334:	ldr	x9, [x20]
 338:	add	x10, x9, #0x8
 33c:	str	x10, [x20]
 340:	ldr	x2, [x9]
 344:	b	4bc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4bc>
 348:	cmp	w15, #0x25
 34c:	b.ne	5d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d8>  // b.any
 350:	cbnz	w16, 5d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d8>
 354:	ldr	x8, [sp, #8]
 358:	cmp	x8, x21
 35c:	b.cs	7c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x7c>  // b.hs, b.nlast
 360:	mov	w9, #0x25                  	// #37
 364:	strb	w9, [x8]
 368:	b	70 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x70>
 36c:	ldrsw	x9, [x20, #24]
 370:	cbz	w12, 4e8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4e8>
 374:	tbz	w9, #31, 514 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x514>
 378:	add	w10, w9, #0x8
 37c:	cmn	w9, #0x8
 380:	str	w10, [x20, #24]
 384:	b.gt	514 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x514>
 388:	b	504 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x504>
 38c:	cbnz	w16, 5d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d8>
 390:	ldrsw	x8, [x20, #24]
 394:	tbz	w8, #31, 3f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3f8>
 398:	add	w9, w8, #0x8
 39c:	cmn	w8, #0x8
 3a0:	str	w9, [x20, #24]
 3a4:	b.gt	3f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3f8>
 3a8:	ldr	x9, [x20, #8]
 3ac:	add	x9, x9, x8
 3b0:	ldr	x8, [sp, #8]
 3b4:	ldr	x2, [x9]
 3b8:	cmp	x8, x21
 3bc:	b.cc	414 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x414>  // b.lo, b.ul, b.last
 3c0:	b	428 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x428>
 3c4:	cbnz	w16, 5d8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d8>
 3c8:	ldrsw	x8, [x20, #24]
 3cc:	tbz	w8, #31, 470 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x470>
 3d0:	add	w9, w8, #0x8
 3d4:	cmn	w8, #0x8
 3d8:	str	w9, [x20, #24]
 3dc:	b.gt	470 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x470>
 3e0:	ldr	x9, [x20, #8]
 3e4:	add	x8, x9, x8
 3e8:	ldr	x9, [sp, #8]
 3ec:	cmp	x9, x21
 3f0:	b.cs	7c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x7c>  // b.hs, b.nlast
 3f4:	b	68 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x68>
 3f8:	ldr	x9, [x20]
 3fc:	add	x8, x9, #0x8
 400:	str	x8, [x20]
 404:	ldr	x8, [sp, #8]
 408:	ldr	x2, [x9]
 40c:	cmp	x8, x21
 410:	b.cs	428 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x428>  // b.hs, b.nlast
 414:	mov	w9, #0x30                  	// #48
 418:	strb	w9, [x8]
 41c:	ldr	x8, [sp, #8]
 420:	add	x8, x8, #0x1
 424:	str	x8, [sp, #8]
 428:	cmp	x8, x21
 42c:	b.cs	440 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x440>  // b.hs, b.nlast
 430:	strb	w27, [x8]
 434:	ldr	x8, [sp, #8]
 438:	add	x8, x8, #0x1
 43c:	str	x8, [sp, #8]
 440:	add	x0, sp, #0x8
 444:	mov	w3, #0x10                  	// #16
 448:	mov	w4, #0xc                   	// #12
 44c:	mov	w5, #0x1                   	// #1
 450:	mov	x1, x21
 454:	mov	w6, wzr
 458:	mov	w7, wzr
 45c:	bl	8cc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 460:	add	w8, w19, w0
 464:	add	w19, w8, #0x2
 468:	add	x22, x22, #0x1
 46c:	b	84 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x84>
 470:	ldr	x8, [x20]
 474:	add	x9, x8, #0x8
 478:	str	x9, [x20]
 47c:	ldr	x9, [sp, #8]
 480:	cmp	x9, x21
 484:	b.cs	7c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x7c>  // b.hs, b.nlast
 488:	b	68 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x68>
 48c:	tbz	w9, #31, 4ac <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4ac>
 490:	add	w10, w9, #0x8
 494:	cmn	w9, #0x8
 498:	str	w10, [x20, #24]
 49c:	b.gt	4ac <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4ac>
 4a0:	ldr	x10, [x20, #8]
 4a4:	add	x9, x10, x9
 4a8:	b	4b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4b8>
 4ac:	ldr	x9, [x20]
 4b0:	add	x10, x9, #0x8
 4b4:	str	x10, [x20]
 4b8:	ldr	w2, [x9]
 4bc:	ldrb	w9, [x22]
 4c0:	cmp	w8, #0x30
 4c4:	cset	w5, eq  // eq = none
 4c8:	add	x0, sp, #0x8
 4cc:	cmp	w9, #0x58
 4d0:	cset	w7, eq  // eq = none
 4d4:	cmp	w9, #0x75
 4d8:	csel	w3, w24, w29, eq  // eq = none
 4dc:	mov	x1, x21
 4e0:	mov	w6, wzr
 4e4:	b	57c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x57c>
 4e8:	cmp	w13, #0x7a
 4ec:	b.ne	528 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x528>  // b.any
 4f0:	tbz	w9, #31, 514 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x514>
 4f4:	add	w10, w9, #0x8
 4f8:	cmn	w9, #0x8
 4fc:	str	w10, [x20, #24]
 500:	b.gt	514 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x514>
 504:	ldr	x10, [x20, #8]
 508:	add	x9, x10, x9
 50c:	ldr	x9, [x9]
 510:	b	558 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x558>
 514:	ldr	x9, [x20]
 518:	add	x10, x9, #0x8
 51c:	str	x10, [x20]
 520:	ldr	x9, [x9]
 524:	b	558 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x558>
 528:	tbz	w9, #31, 548 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x548>
 52c:	add	w10, w9, #0x8
 530:	cmn	w9, #0x8
 534:	str	w10, [x20, #24]
 538:	b.gt	548 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x548>
 53c:	ldr	x10, [x20, #8]
 540:	add	x9, x10, x9
 544:	b	554 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x554>
 548:	ldr	x9, [x20]
 54c:	add	x10, x9, #0x8
 550:	str	x10, [x20]
 554:	ldrsw	x9, [x9]
 558:	cmp	w8, #0x30
 55c:	cset	w5, eq  // eq = none
 560:	cmp	x9, #0x0
 564:	cneg	x2, x9, mi  // mi = first
 568:	lsr	x6, x9, #63
 56c:	add	x0, sp, #0x8
 570:	mov	w3, #0xa                   	// #10
 574:	mov	x1, x21
 578:	mov	w7, wzr
 57c:	bl	8cc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 580:	add	w19, w0, w19
 584:	add	x22, x22, #0x1
 588:	b	84 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x84>
 58c:	ldr	x8, [sp, #8]
 590:	cmp	x8, x21
 594:	b.hi	640 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x640>  // b.pmore
 598:	add	x9, x21, #0x1
 59c:	cmp	x8, x9
 5a0:	b.cs	5b4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5b4>  // b.hs, b.nlast
 5a4:	strb	wzr, [x8]
 5a8:	ldr	x8, [sp, #8]
 5ac:	add	x8, x8, #0x1
 5b0:	str	x8, [sp, #8]
 5b4:	mov	w0, w19
 5b8:	ldp	x20, x19, [sp, #96]
 5bc:	ldp	x22, x21, [sp, #80]
 5c0:	ldp	x24, x23, [sp, #64]
 5c4:	ldp	x26, x25, [sp, #48]
 5c8:	ldp	x28, x27, [sp, #32]
 5cc:	ldp	x29, x30, [sp, #16]
 5d0:	add	sp, sp, #0x70
 5d4:	ret
 5d8:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 5dc:	add	x0, x0, #0x0
 5e0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5e4:	bl	0 <_ZN11__sanitizer3DieEv>
 5e8:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 5ec:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 5f0:	add	x0, x0, #0x0
 5f4:	add	x2, x2, #0x0
 5f8:	mov	w1, #0xaa                  	// #170
 5fc:	b	614 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x614>
 600:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 604:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 608:	add	x0, x0, #0x0
 60c:	add	x2, x2, #0x0
 610:	mov	w1, #0xc7                  	// #199
 614:	mov	x3, xzr
 618:	mov	x4, xzr
 61c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 620:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 624:	add	x0, x0, #0x0
 628:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 62c:	bl	0 <_ZN11__sanitizer3DieEv>
 630:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 634:	add	x0, x0, #0x0
 638:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 63c:	bl	0 <_ZN11__sanitizer3DieEv>
 640:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 644:	add	x0, x0, #0x0
 648:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 64c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000650 <_ZN11__sanitizer26SetPrintfAndReportCallbackEPFvPKcE>:
 650:	adrp	x8, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 654:	str	x0, [x8]
 658:	ret

000000000000065c <__sanitizer_on_print>:
 65c:	ret

0000000000000660 <_ZN11__sanitizer6PrintfEPKcz>:
 660:	sub	sp, sp, #0x110
 664:	stp	x29, x30, [sp, #256]
 668:	mov	x9, #0xffffffffffffffc8    	// #-56
 66c:	mov	x10, sp
 670:	add	x11, sp, #0x88
 674:	movk	x9, #0xff80, lsl #32
 678:	add	x12, sp, #0x110
 67c:	add	x10, x10, #0x80
 680:	add	x11, x11, #0x38
 684:	stp	x10, x9, [sp, #240]
 688:	stp	x12, x11, [sp, #224]
 68c:	stp	q0, q1, [sp]
 690:	ldp	q1, q0, [sp, #224]
 694:	mov	x8, x0
 698:	stp	x1, x2, [sp, #136]
 69c:	add	x2, sp, #0xc0
 6a0:	mov	w0, wzr
 6a4:	mov	x1, x8
 6a8:	stp	x3, x4, [sp, #152]
 6ac:	stp	x5, x6, [sp, #168]
 6b0:	str	x7, [sp, #184]
 6b4:	stp	q2, q3, [sp, #32]
 6b8:	stp	q4, q5, [sp, #64]
 6bc:	stp	q6, q7, [sp, #96]
 6c0:	stp	q1, q0, [sp, #192]
 6c4:	bl	6d4 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>
 6c8:	ldp	x29, x30, [sp, #256]
 6cc:	add	sp, sp, #0x110
 6d0:	ret

00000000000006d4 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>:
 6d4:	sub	sp, sp, #0x1c0
 6d8:	stp	x29, x30, [sp, #432]
 6dc:	ldp	q1, q0, [x2]
 6e0:	mov	x8, x1
 6e4:	and	w0, w0, #0x1
 6e8:	add	x1, sp, #0x20
 6ec:	mov	x3, sp
 6f0:	mov	x2, x8
 6f4:	stp	q1, q0, [sp]
 6f8:	bl	bb4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list>
 6fc:	ldp	x29, x30, [sp, #432]
 700:	add	sp, sp, #0x1c0
 704:	ret

0000000000000708 <_ZN11__sanitizer6ReportEPKcz>:
 708:	sub	sp, sp, #0x110
 70c:	stp	x29, x30, [sp, #256]
 710:	mov	x9, #0xffffffffffffffc8    	// #-56
 714:	mov	x10, sp
 718:	add	x11, sp, #0x88
 71c:	movk	x9, #0xff80, lsl #32
 720:	add	x12, sp, #0x110
 724:	add	x10, x10, #0x80
 728:	add	x11, x11, #0x38
 72c:	stp	x10, x9, [sp, #240]
 730:	stp	x12, x11, [sp, #224]
 734:	stp	q0, q1, [sp]
 738:	ldp	q1, q0, [sp, #224]
 73c:	mov	x8, x0
 740:	stp	x1, x2, [sp, #136]
 744:	add	x2, sp, #0xc0
 748:	mov	w0, #0x1                   	// #1
 74c:	mov	x1, x8
 750:	stp	x3, x4, [sp, #152]
 754:	stp	x5, x6, [sp, #168]
 758:	str	x7, [sp, #184]
 75c:	stp	q2, q3, [sp, #32]
 760:	stp	q4, q5, [sp, #64]
 764:	stp	q6, q7, [sp, #96]
 768:	stp	q1, q0, [sp, #192]
 76c:	bl	6d4 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>
 770:	ldp	x29, x30, [sp, #256]
 774:	add	sp, sp, #0x110
 778:	ret

000000000000077c <_ZN11__sanitizer17internal_snprintfEPcmPKcz>:
 77c:	sub	sp, sp, #0x100
 780:	mov	x8, #0xffffffffffffffd8    	// #-40
 784:	mov	x9, sp
 788:	add	x10, sp, #0x88
 78c:	movk	x8, #0xff80, lsl #32
 790:	add	x11, sp, #0x100
 794:	add	x9, x9, #0x80
 798:	add	x10, x10, #0x28
 79c:	stp	x8, x30, [sp, #232]
 7a0:	stp	x10, x9, [sp, #216]
 7a4:	str	x11, [sp, #208]
 7a8:	stp	q1, q2, [sp, #16]
 7ac:	str	q0, [sp]
 7b0:	ldp	q1, q0, [sp, #208]
 7b4:	stp	x3, x4, [sp, #136]
 7b8:	add	x3, sp, #0xb0
 7bc:	stp	x5, x6, [sp, #152]
 7c0:	str	x7, [sp, #168]
 7c4:	stp	q3, q4, [sp, #48]
 7c8:	stp	q5, q6, [sp, #80]
 7cc:	str	q7, [sp, #112]
 7d0:	stp	q1, q0, [sp, #176]
 7d4:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 7d8:	ldr	x30, [sp, #240]
 7dc:	add	sp, sp, #0x100
 7e0:	ret

00000000000007e4 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>:
 7e4:	sub	sp, sp, #0x110
 7e8:	str	x29, [sp, #240]
 7ec:	stp	x30, x19, [sp, #256]
 7f0:	stp	q4, q5, [sp, #64]
 7f4:	stp	q2, q3, [sp, #32]
 7f8:	stp	q0, q1, [sp]
 7fc:	stp	x6, x7, [sp, #160]
 800:	stp	x4, x5, [sp, #144]
 804:	stp	x2, x3, [sp, #128]
 808:	stp	q6, q7, [sp, #96]
 80c:	ldp	x4, x3, [x0, #16]
 810:	cmp	x3, x4
 814:	b.cs	89c <_ZN11__sanitizer20InternalScopedString6appendEPKcz+0xb8>  // b.hs, b.nlast
 818:	mov	x8, #0xffffffffffffffd0    	// #-48
 81c:	mov	x10, sp
 820:	add	x11, sp, #0x80
 824:	movk	x8, #0xff80, lsl #32
 828:	add	x9, sp, #0x110
 82c:	add	x10, x10, #0x80
 830:	add	x11, x11, #0x30
 834:	stp	x10, x8, [sp, #224]
 838:	stp	x9, x11, [sp, #208]
 83c:	ldr	x8, [x0]
 840:	ldr	x9, [x0, #24]
 844:	ldr	w10, [x0, #16]
 848:	ldp	q0, q1, [sp, #208]
 84c:	mov	x19, x0
 850:	mov	x2, x1
 854:	add	x0, x8, x9
 858:	sub	w1, w10, w9
 85c:	add	x3, sp, #0xb0
 860:	stp	q0, q1, [sp, #176]
 864:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 868:	ldr	x8, [x19]
 86c:	ldr	x9, [x19, #24]
 870:	add	x0, x8, x9
 874:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 878:	ldp	x4, x8, [x19, #16]
 87c:	add	x3, x8, x0
 880:	cmp	x3, x4
 884:	str	x3, [x19, #24]
 888:	b.cs	8b4 <_ZN11__sanitizer20InternalScopedString6appendEPKcz+0xd0>  // b.hs, b.nlast
 88c:	ldp	x30, x19, [sp, #256]
 890:	ldr	x29, [sp, #240]
 894:	add	sp, sp, #0x110
 898:	ret
 89c:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 8a0:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 8a4:	add	x0, x0, #0x0
 8a8:	add	x2, x2, #0x0
 8ac:	mov	w1, #0x15d                 	// #349
 8b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8b4:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 8b8:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 8bc:	add	x0, x0, #0x0
 8c0:	add	x2, x2, #0x0
 8c4:	mov	w1, #0x163                 	// #355
 8c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000008cc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>:
 8cc:	sub	sp, sp, #0x140
 8d0:	str	x29, [sp, #240]
 8d4:	stp	x30, x25, [sp, #256]
 8d8:	stp	x24, x23, [sp, #272]
 8dc:	stp	x22, x21, [sp, #288]
 8e0:	stp	x20, x19, [sp, #304]
 8e4:	and	w8, w3, #0xff
 8e8:	mov	w21, w7
 8ec:	mov	w22, w5
 8f0:	mov	x19, x1
 8f4:	cmp	w8, #0xa
 8f8:	mov	x20, x0
 8fc:	b.eq	908 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x3c>  // b.none
 900:	cmp	w8, #0x10
 904:	b.ne	b74 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x2a8>  // b.any
 908:	cmp	w8, #0xa
 90c:	b.eq	914 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x48>  // b.none
 910:	tbnz	w6, #0, b84 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x2b8>
 914:	cbnz	x2, 91c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x50>
 918:	tbnz	w6, #0, b94 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x2c8>
 91c:	and	w8, w4, #0xff
 920:	cmp	w8, #0x1e
 924:	b.cs	ba4 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x2d8>  // b.hs, b.nlast
 928:	tst	w4, #0xff
 92c:	cset	w8, ne  // ne = any
 930:	mov	w24, wzr
 934:	and	w8, w8, w6
 938:	eor	w23, w6, #0x1
 93c:	tbz	w22, #0, 968 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x9c>
 940:	tbnz	w23, #0, 968 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x9c>
 944:	ldr	x9, [x20]
 948:	cmp	x9, x19
 94c:	b.cs	964 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x98>  // b.hs, b.nlast
 950:	mov	w10, #0x2d                  	// #45
 954:	strb	w10, [x9]
 958:	ldr	x9, [x20]
 95c:	add	x9, x9, #0x1
 960:	str	x9, [x20]
 964:	mov	w24, #0x1                   	// #1
 968:	mov	x9, xzr
 96c:	sbfx	w10, w8, #0, #1
 970:	sub	w11, w4, w8
 974:	and	x12, x3, #0xff
 978:	mov	w8, #0xffffffff            	// #-1
 97c:	mov	x13, sp
 980:	cmp	x9, #0xf0
 984:	b.eq	b64 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x298>  // b.none
 988:	udiv	x14, x2, x12
 98c:	msub	x15, x14, x12, x2
 990:	cmp	x2, x12
 994:	str	x15, [x13, x9]
 998:	add	x9, x9, #0x8
 99c:	add	w8, w8, #0x1
 9a0:	mov	x2, x14
 9a4:	b.cs	980 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0xb4>  // b.hs, b.nlast
 9a8:	add	w12, w8, #0x1
 9ac:	and	w25, w11, #0xff
 9b0:	cmp	w25, w12
 9b4:	b.ls	9e0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x114>  // b.plast
 9b8:	mov	x8, sp
 9bc:	add	w10, w4, w10
 9c0:	add	x0, x8, x9
 9c4:	and	x8, x10, #0xff
 9c8:	lsl	x8, x8, #3
 9cc:	sub	x2, x8, x9
 9d0:	mov	w1, wzr
 9d4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 9d8:	mov	w12, w25
 9dc:	b	9e8 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x11c>
 9e0:	cmp	w12, #0x1
 9e4:	b.lt	aa0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1d4>  // b.tstop
 9e8:	mov	w8, w12
 9ec:	add	w0, w24, w12
 9f0:	tbz	w22, #0, a40 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x174>
 9f4:	mov	x9, sp
 9f8:	sub	x9, x9, #0x8
 9fc:	mov	w10, #0x30                  	// #48
 a00:	b	a14 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x148>
 a04:	add	x11, x8, #0x1
 a08:	cmp	x11, #0x1
 a0c:	add	w24, w24, #0x1
 a10:	b.le	ab0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1e4>
 a14:	ldr	x11, [x9, x8, lsl #3]
 a18:	cbnz	x11, a9c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1d0>
 a1c:	ldr	x11, [x20]
 a20:	sub	x8, x8, #0x1
 a24:	cmp	x11, x19
 a28:	b.cs	a04 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x138>  // b.hs, b.nlast
 a2c:	strb	w10, [x11]
 a30:	ldr	x11, [x20]
 a34:	add	x11, x11, #0x1
 a38:	str	x11, [x20]
 a3c:	b	a04 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x138>
 a40:	mov	x10, sp
 a44:	mov	w9, #0x20                  	// #32
 a48:	sub	x10, x10, #0x8
 a4c:	mov	w11, #0x30                  	// #48
 a50:	b	a68 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x19c>
 a54:	add	x8, x12, #0x1
 a58:	cmp	x8, #0x1
 a5c:	add	w24, w24, #0x1
 a60:	mov	x8, x12
 a64:	b.le	ab0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1e4>
 a68:	ldr	x12, [x10, x8, lsl #3]
 a6c:	cbnz	x12, a9c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1d0>
 a70:	ldr	x13, [x20]
 a74:	sub	x12, x8, #0x1
 a78:	cmp	x13, x19
 a7c:	b.cs	a54 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x188>  // b.hs, b.nlast
 a80:	cmp	x8, #0x1
 a84:	csel	w8, w11, w9, eq  // eq = none
 a88:	strb	w8, [x13]
 a8c:	ldr	x8, [x20]
 a90:	add	x8, x8, #0x1
 a94:	str	x8, [x20]
 a98:	b	a54 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x188>
 a9c:	sub	w8, w8, #0x1
 aa0:	mov	w0, w24
 aa4:	orr	w9, w23, w22
 aa8:	tbz	w9, #0, abc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1f0>
 aac:	b	ae0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x214>
 ab0:	mov	w8, #0xffffffff            	// #-1
 ab4:	orr	w9, w23, w22
 ab8:	tbnz	w9, #0, ae0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x214>
 abc:	ldr	x9, [x20]
 ac0:	cmp	x9, x19
 ac4:	b.cs	adc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x210>  // b.hs, b.nlast
 ac8:	mov	w10, #0x2d                  	// #45
 acc:	strb	w10, [x9]
 ad0:	ldr	x9, [x20]
 ad4:	add	x9, x9, #0x1
 ad8:	str	x9, [x20]
 adc:	add	w0, w0, #0x1
 ae0:	tbnz	w8, #31, b48 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x27c>
 ae4:	tst	w21, #0x1
 ae8:	mov	w10, #0x57                  	// #87
 aec:	mov	w11, #0x37                  	// #55
 af0:	mov	w8, w8
 af4:	mov	x9, sp
 af8:	csel	w10, w11, w10, ne  // ne = any
 afc:	mov	w11, #0x30                  	// #48
 b00:	b	b14 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x248>
 b04:	cmp	x8, #0x0
 b08:	sub	x8, x8, #0x1
 b0c:	add	w0, w0, #0x1
 b10:	b.le	b48 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x27c>
 b14:	ldr	x12, [x20]
 b18:	cmp	x12, x19
 b1c:	b.cs	b04 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x238>  // b.hs, b.nlast
 b20:	ldr	x13, [x9, x8, lsl #3]
 b24:	and	w14, w13, #0xfe
 b28:	cmp	w14, #0xa
 b2c:	csel	w14, w11, w10, cc  // cc = lo, ul, last
 b30:	add	w13, w14, w13
 b34:	strb	w13, [x12]
 b38:	ldr	x12, [x20]
 b3c:	add	x12, x12, #0x1
 b40:	str	x12, [x20]
 b44:	b	b04 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x238>
 b48:	ldp	x20, x19, [sp, #304]
 b4c:	ldp	x22, x21, [sp, #288]
 b50:	ldp	x24, x23, [sp, #272]
 b54:	ldp	x30, x25, [sp, #256]
 b58:	ldr	x29, [sp, #240]
 b5c:	add	sp, sp, #0x140
 b60:	ret
 b64:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 b68:	add	x0, x0, #0x0
 b6c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 b70:	bl	0 <_ZN11__sanitizer3DieEv>
 b74:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 b78:	add	x0, x0, #0x0
 b7c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 b80:	bl	0 <_ZN11__sanitizer3DieEv>
 b84:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 b88:	add	x0, x0, #0x0
 b8c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 b90:	bl	0 <_ZN11__sanitizer3DieEv>
 b94:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 b98:	add	x0, x0, #0x0
 b9c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 ba0:	bl	0 <_ZN11__sanitizer3DieEv>
 ba4:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 ba8:	add	x0, x0, #0x0
 bac:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 bb0:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000bb4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list>:
 bb4:	sub	sp, sp, #0x80
 bb8:	stp	x30, x25, [sp, #64]
 bbc:	stp	x24, x23, [sp, #80]
 bc0:	stp	x22, x21, [sp, #96]
 bc4:	stp	x20, x19, [sp, #112]
 bc8:	ldp	q1, q0, [x3]
 bcc:	mov	x21, x3
 bd0:	mov	x20, x2
 bd4:	mov	x19, x1
 bd8:	stp	q1, q0, [sp, #32]
 bdc:	tbz	w0, #0, d40 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x18c>
 be0:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 be4:	mov	x22, x0
 be8:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
 bec:	adrp	x24, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 bf0:	ldr	x24, [x24]
 bf4:	mov	x3, x0
 bf8:	mov	w0, wzr
 bfc:	cbz	x3, c24 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x70>
 c00:	ldrb	w8, [x24, #48]
 c04:	cbz	w8, c24 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x70>
 c08:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 c0c:	add	x2, x2, #0x0
 c10:	mov	w1, #0x190                 	// #400
 c14:	mov	x0, x19
 c18:	bl	77c <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 c1c:	cmp	w0, #0x18f
 c20:	b.gt	c84 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0xd0>
 c24:	sxtw	x25, w0
 c28:	mov	w23, #0x190                 	// #400
 c2c:	add	x8, x19, x25
 c30:	sub	w9, w23, w0
 c34:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 c38:	sxtw	x1, w9
 c3c:	add	x2, x2, #0x0
 c40:	mov	x0, x8
 c44:	mov	w3, w22
 c48:	bl	77c <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 c4c:	add	x22, x25, w0, sxtw
 c50:	cmp	w22, #0x18f
 c54:	b.gt	c84 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0xd0>
 c58:	ldp	q1, q0, [x21]
 c5c:	add	x0, x19, x22
 c60:	sub	w1, w23, w22
 c64:	mov	x3, sp
 c68:	mov	x2, x20
 c6c:	stp	q1, q0, [sp]
 c70:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 c74:	add	w8, w0, w22
 c78:	cmp	w8, #0x190
 c7c:	mov	x22, x19
 c80:	b.lt	db0 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x1fc>  // b.tstop
 c84:	ldp	q1, q0, [sp, #32]
 c88:	adrp	x1, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 c8c:	add	x1, x1, #0x0
 c90:	mov	w0, #0x4000                	// #16384
 c94:	mov	w2, wzr
 c98:	stp	q1, q0, [x21]
 c9c:	mov	w25, #0x4000                	// #16384
 ca0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 ca4:	mov	x22, x0
 ca8:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 cac:	mov	x23, x0
 cb0:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
 cb4:	mov	x3, x0
 cb8:	mov	w0, wzr
 cbc:	cbz	x3, ce4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x130>
 cc0:	ldrb	w8, [x24, #48]
 cc4:	cbz	w8, ce4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x130>
 cc8:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 ccc:	add	x2, x2, #0x0
 cd0:	mov	w1, #0x4000                	// #16384
 cd4:	mov	x0, x22
 cd8:	bl	77c <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 cdc:	cmp	w0, #0x4, lsl #12
 ce0:	b.ge	e10 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x25c>  // b.tcont
 ce4:	sxtw	x24, w0
 ce8:	sub	w8, w25, w0
 cec:	adrp	x2, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 cf0:	add	x0, x22, x24
 cf4:	sxtw	x1, w8
 cf8:	add	x2, x2, #0x0
 cfc:	mov	w3, w23
 d00:	bl	77c <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 d04:	add	x24, x24, w0, sxtw
 d08:	cmp	w24, #0x4, lsl #12
 d0c:	b.ge	e10 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x25c>  // b.tcont
 d10:	ldp	q0, q1, [x21]
 d14:	mov	w23, #0x4000                	// #16384
 d18:	add	x0, x22, x24
 d1c:	sub	w1, w23, w24
 d20:	mov	x3, sp
 d24:	mov	x2, x20
 d28:	stp	q0, q1, [sp]
 d2c:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 d30:	add	w8, w0, w24
 d34:	cmp	w8, #0x4, lsl #12
 d38:	b.lt	db0 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x1fc>  // b.tstop
 d3c:	b	e10 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x25c>
 d40:	ldp	q1, q0, [x21]
 d44:	mov	x3, sp
 d48:	mov	w1, #0x190                 	// #400
 d4c:	mov	x0, x19
 d50:	mov	x2, x20
 d54:	stp	q1, q0, [sp]
 d58:	mov	w23, #0x190                 	// #400
 d5c:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 d60:	cmp	w0, #0x190
 d64:	mov	x22, x19
 d68:	b.lt	db0 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x1fc>  // b.tstop
 d6c:	ldp	q1, q0, [sp, #32]
 d70:	adrp	x1, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 d74:	add	x1, x1, #0x0
 d78:	mov	w0, #0x4000                	// #16384
 d7c:	mov	w2, wzr
 d80:	stp	q1, q0, [x21]
 d84:	mov	w23, #0x4000                	// #16384
 d88:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 d8c:	ldp	q0, q1, [x21]
 d90:	mov	x3, sp
 d94:	mov	w1, #0x4000                	// #16384
 d98:	mov	x2, x20
 d9c:	mov	x22, x0
 da0:	stp	q0, q1, [sp]
 da4:	bl	0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 da8:	cmp	w0, #0x4, lsl #12
 dac:	b.ge	e10 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x25c>  // b.tcont
 db0:	mov	x0, x22
 db4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 db8:	mov	x0, x22
 dbc:	bl	0 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc>
 dc0:	mov	x0, x22
 dc4:	bl	65c <__sanitizer_on_print>
 dc8:	adrp	x8, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 dcc:	ldr	x8, [x8]
 dd0:	cbz	x8, ddc <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x228>
 dd4:	mov	x0, x22
 dd8:	blr	x8
 ddc:	mov	x0, x22
 de0:	bl	0 <_ZN11__sanitizer18LogMessageOnPrintfEPKc>
 de4:	cmp	x22, x19
 de8:	b.eq	df8 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list+0x244>  // b.none
 dec:	mov	x0, x22
 df0:	mov	x1, x23
 df4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 df8:	ldp	x20, x19, [sp, #112]
 dfc:	ldp	x22, x21, [sp, #96]
 e00:	ldp	x24, x23, [sp, #80]
 e04:	ldp	x30, x25, [sp, #64]
 e08:	add	sp, sp, #0x80
 e0c:	ret
 e10:	adrp	x0, 0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 e14:	add	x0, x0, #0x0
 e18:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 e1c:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_procmaps_common.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9IsDecimalEc>:
   0:	sub	w8, w0, #0x30
   4:	and	w8, w8, #0xff
   8:	cmp	w8, #0x9
   c:	and	w8, w0, #0xff
  10:	b.hi	24 <_ZN11__sanitizer9IsDecimalEc+0x24>  // b.pmore
  14:	sub	w8, w8, #0x30
  18:	cmp	w8, #0xa
  1c:	cset	w0, cc  // cc = lo, ul, last
  20:	ret
  24:	sub	w9, w0, #0x61
  28:	and	w9, w9, #0xff
  2c:	cmp	w9, #0x5
  30:	b.hi	44 <_ZN11__sanitizer9IsDecimalEc+0x44>  // b.pmore
  34:	sub	w8, w8, #0x57
  38:	cmp	w8, #0xa
  3c:	cset	w0, cc  // cc = lo, ul, last
  40:	ret
  44:	sub	w9, w0, #0x41
  48:	and	w9, w9, #0xff
  4c:	sub	w8, w8, #0x37
  50:	cmp	w9, #0x6
  54:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  58:	cmp	w8, #0xa
  5c:	cset	w0, cc  // cc = lo, ul, last
  60:	ret

0000000000000064 <_ZN11__sanitizer12ParseDecimalEPPKc>:
  64:	mov	x8, x0
  68:	ldr	x9, [x8]
  6c:	mov	x0, xzr
  70:	mov	w10, #0xa                   	// #10
  74:	add	x9, x9, #0x1
  78:	ldurb	w12, [x9, #-1]
  7c:	sub	w11, w12, #0x30
  80:	cmp	w11, #0x9
  84:	b.ls	98 <_ZN11__sanitizer12ParseDecimalEPPKc+0x34>  // b.plast
  88:	sub	w11, w12, #0x61
  8c:	cmp	w11, #0x5
  90:	b.hi	c0 <_ZN11__sanitizer12ParseDecimalEPPKc+0x5c>  // b.pmore
  94:	sub	w11, w12, #0x57
  98:	cmp	w11, #0x9
  9c:	b.hi	d8 <_ZN11__sanitizer12ParseDecimalEPPKc+0x74>  // b.pmore
  a0:	madd	x0, x0, x10, x11
  a4:	str	x9, [x8]
  a8:	add	x9, x9, #0x1
  ac:	ldurb	w12, [x9, #-1]
  b0:	sub	w11, w12, #0x30
  b4:	cmp	w11, #0x9
  b8:	b.hi	88 <_ZN11__sanitizer12ParseDecimalEPPKc+0x24>  // b.pmore
  bc:	b	98 <_ZN11__sanitizer12ParseDecimalEPPKc+0x34>
  c0:	sub	w11, w12, #0x41
  c4:	cmp	w11, #0x5
  c8:	b.hi	d8 <_ZN11__sanitizer12ParseDecimalEPPKc+0x74>  // b.pmore
  cc:	sub	w11, w12, #0x37
  d0:	cmp	w11, #0x9
  d4:	b.ls	a0 <_ZN11__sanitizer12ParseDecimalEPPKc+0x3c>  // b.plast
  d8:	ret

00000000000000dc <_ZN11__sanitizer5IsHexEc>:
  dc:	sub	w8, w0, #0x30
  e0:	and	w8, w8, #0xff
  e4:	cmp	w8, #0x9
  e8:	and	w8, w0, #0xff
  ec:	b.hi	100 <_ZN11__sanitizer5IsHexEc+0x24>  // b.pmore
  f0:	sub	w8, w8, #0x30
  f4:	cmp	w8, #0x10
  f8:	cset	w0, cc  // cc = lo, ul, last
  fc:	ret
 100:	sub	w9, w0, #0x61
 104:	and	w9, w9, #0xff
 108:	cmp	w9, #0x5
 10c:	b.hi	120 <_ZN11__sanitizer5IsHexEc+0x44>  // b.pmore
 110:	sub	w8, w8, #0x57
 114:	cmp	w8, #0x10
 118:	cset	w0, cc  // cc = lo, ul, last
 11c:	ret
 120:	sub	w9, w0, #0x41
 124:	and	w9, w9, #0xff
 128:	sub	w8, w8, #0x37
 12c:	cmp	w9, #0x6
 130:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
 134:	cmp	w8, #0x10
 138:	cset	w0, cc  // cc = lo, ul, last
 13c:	ret

0000000000000140 <_ZN11__sanitizer8ParseHexEPPKc>:
 140:	mov	x8, x0
 144:	ldr	x9, [x8]
 148:	mov	x0, xzr
 14c:	add	x9, x9, #0x1
 150:	ldurb	w11, [x9, #-1]
 154:	sub	w10, w11, #0x30
 158:	cmp	w10, #0x9
 15c:	b.ls	170 <_ZN11__sanitizer8ParseHexEPPKc+0x30>  // b.plast
 160:	sub	w10, w11, #0x61
 164:	cmp	w10, #0x5
 168:	b.hi	184 <_ZN11__sanitizer8ParseHexEPPKc+0x44>  // b.pmore
 16c:	sub	w10, w11, #0x57
 170:	cmp	w10, #0xf
 174:	b.hi	19c <_ZN11__sanitizer8ParseHexEPPKc+0x5c>  // b.pmore
 178:	add	x0, x10, x0, lsl #4
 17c:	str	x9, [x8]
 180:	b	14c <_ZN11__sanitizer8ParseHexEPPKc+0xc>
 184:	sub	w10, w11, #0x41
 188:	cmp	w10, #0x5
 18c:	b.hi	19c <_ZN11__sanitizer8ParseHexEPPKc+0x5c>  // b.pmore
 190:	sub	w10, w11, #0x37
 194:	cmp	w10, #0xf
 198:	b.ls	178 <_ZN11__sanitizer8ParseHexEPPKc+0x38>  // b.plast
 19c:	ret

00000000000001a0 <_ZN11__sanitizer19MemoryMappedSegment16AddAddressRangesEPNS_12LoadedModuleE>:
 1a0:	str	x30, [sp, #-16]!
 1a4:	ldr	x9, [x0, #72]
 1a8:	cbnz	x9, 1d0 <_ZN11__sanitizer19MemoryMappedSegment16AddAddressRangesEPNS_12LoadedModuleE+0x30>
 1ac:	mov	x8, x0
 1b0:	ldr	x9, [x8, #40]
 1b4:	mov	x0, x1
 1b8:	ldp	x1, x2, [x8]
 1bc:	mov	x5, xzr
 1c0:	ubfx	x3, x9, #2, #1
 1c4:	ubfx	x4, x9, #1, #1
 1c8:	ldr	x30, [sp], #16
 1cc:	b	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 1d0:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 1d4:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x2, x2, #0x0
 1e0:	mov	w1, #0x44                  	// #68
 1e4:	mov	x3, xzr
 1e8:	mov	x4, xzr
 1ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001f0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>:
 1f0:	sub	sp, sp, #0x40
 1f4:	str	x30, [sp, #32]
 1f8:	stp	x20, x19, [sp, #48]
 1fc:	mov	x19, x0
 200:	tbz	w1, #0, 2d8 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xe8>
 204:	add	x0, sp, #0x8
 208:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 20c:	ldr	x8, [sp, #16]
 210:	cbz	x8, 26c <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x7c>
 214:	adrp	x20, 0 <_ZN11__sanitizer9IsDecimalEc>
 218:	add	x20, x20, #0x0
 21c:	mov	w8, #0x1                   	// #1
 220:	ldaxrb	w9, [x20]
 224:	stlxrb	w10, w8, [x20]
 228:	cbnz	w10, 220 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x30>
 22c:	cbz	w9, 23c <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x4c>
 230:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 234:	add	x0, x0, #0x0
 238:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 23c:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 240:	ldr	x1, [x8]
 244:	cbz	x1, 254 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x64>
 248:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 24c:	ldr	x0, [x8]
 250:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 254:	ldur	q0, [sp, #8]
 258:	ldr	x8, [sp, #24]
 25c:	stur	q0, [x20, #8]
 260:	str	x8, [x20, #24]
 264:	dmb	ish
 268:	strb	wzr, [x20]
 26c:	mov	x0, x19
 270:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 274:	ldr	x8, [x19, #8]
 278:	cbnz	x8, 2e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xf0>
 27c:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 280:	add	x8, x8, #0x0
 284:	mov	w9, #0x1                   	// #1
 288:	ldaxrb	w10, [x8]
 28c:	stlxrb	w11, w9, [x8]
 290:	cbnz	w11, 288 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x98>
 294:	cbz	w10, 2a4 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xb4>
 298:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 29c:	add	x0, x0, #0x0
 2a0:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 2a4:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 2a8:	ldr	x8, [x8]
 2ac:	cbz	x8, 2c8 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xd8>
 2b0:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 2b4:	add	x8, x8, #0x0
 2b8:	ldr	x9, [x8, #16]
 2bc:	ldr	q0, [x8]
 2c0:	str	x9, [x19, #16]
 2c4:	str	q0, [x19]
 2c8:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 2cc:	dmb	ish
 2d0:	strb	wzr, [x8]
 2d4:	b	2e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xf0>
 2d8:	mov	x0, x19
 2dc:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 2e0:	ldr	x8, [x19]
 2e4:	ldr	x30, [sp, #32]
 2e8:	str	x8, [x19, #24]
 2ec:	ldp	x20, x19, [sp, #48]
 2f0:	add	sp, sp, #0x40
 2f4:	ret

00000000000002f8 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>:
 2f8:	sub	sp, sp, #0x30
 2fc:	stp	x30, x19, [sp, #32]
 300:	add	x0, sp, #0x8
 304:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 308:	ldr	x8, [sp, #16]
 30c:	cbz	x8, 368 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x70>
 310:	adrp	x19, 0 <_ZN11__sanitizer9IsDecimalEc>
 314:	add	x19, x19, #0x0
 318:	mov	w8, #0x1                   	// #1
 31c:	ldaxrb	w9, [x19]
 320:	stlxrb	w10, w8, [x19]
 324:	cbnz	w10, 31c <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x24>
 328:	cbz	w9, 338 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x40>
 32c:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 330:	add	x0, x0, #0x0
 334:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 338:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 33c:	ldr	x1, [x8]
 340:	cbz	x1, 350 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x58>
 344:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 348:	ldr	x0, [x8]
 34c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 350:	ldur	q0, [sp, #8]
 354:	ldr	x8, [sp, #24]
 358:	stur	q0, [x19, #8]
 35c:	str	x8, [x19, #24]
 360:	dmb	ish
 364:	strb	wzr, [x19]
 368:	ldp	x30, x19, [sp, #32]
 36c:	add	sp, sp, #0x30
 370:	ret

0000000000000374 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv>:
 374:	stp	x30, x19, [sp, #-16]!
 378:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 37c:	mov	x19, x0
 380:	add	x8, x8, #0x0
 384:	mov	w9, #0x1                   	// #1
 388:	ldaxrb	w10, [x8]
 38c:	stlxrb	w11, w9, [x8]
 390:	cbnz	w11, 388 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x14>
 394:	cbz	w10, 3a4 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x30>
 398:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 39c:	add	x0, x0, #0x0
 3a0:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 3a4:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 3a8:	ldr	x8, [x8]
 3ac:	cbz	x8, 3c8 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x54>
 3b0:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 3b4:	add	x8, x8, #0x0
 3b8:	ldr	x9, [x8, #16]
 3bc:	ldr	q0, [x8]
 3c0:	str	x9, [x19, #16]
 3c4:	str	q0, [x19]
 3c8:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 3cc:	dmb	ish
 3d0:	strb	wzr, [x8]
 3d4:	ldp	x30, x19, [sp], #16
 3d8:	ret

00000000000003dc <_ZN11__sanitizer19MemoryMappingLayout5ResetEv>:
 3dc:	ldr	x8, [x0]
 3e0:	str	x8, [x0, #24]
 3e4:	ret

00000000000003e8 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>:
 3e8:	ldr	x8, [x0, #24]
 3ec:	cmp	x8, #0x0
 3f0:	cset	w0, eq  // eq = none
 3f4:	ret

00000000000003f8 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>:
 3f8:	adrp	x9, 0 <_ZN11__sanitizer9IsDecimalEc>
 3fc:	mov	x8, x0
 400:	ldr	x0, [x0]
 404:	ldr	x9, [x9]
 408:	cmp	x0, x9
 40c:	b.eq	418 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev+0x20>  // b.none
 410:	ldr	x1, [x8, #8]
 414:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 418:	ret

000000000000041c <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE>:
 41c:	sub	sp, sp, #0x100
 420:	str	x30, [sp, #192]
 424:	stp	x24, x23, [sp, #208]
 428:	stp	x22, x21, [sp, #224]
 42c:	stp	x20, x19, [sp, #240]
 430:	ldr	x8, [x0]
 434:	mov	x19, x1
 438:	mov	x20, x0
 43c:	mov	w1, #0x1000                	// #4096
 440:	str	x8, [x0, #24]
 444:	add	x0, sp, #0xa0
 448:	stp	xzr, xzr, [sp, #168]
 44c:	str	xzr, [sp, #160]
 450:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 454:	ldr	x8, [sp, #176]
 458:	cmp	x8, #0xfff
 45c:	b.hi	494 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x78>  // b.pmore
 460:	ldr	x9, [sp, #168]
 464:	cmp	x9, #0xfff
 468:	b.hi	47c <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x60>  // b.pmore
 46c:	add	x0, sp, #0xa0
 470:	mov	w1, #0x1000                	// #4096
 474:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 478:	ldr	x8, [sp, #176]
 47c:	ldr	x9, [sp, #160]
 480:	mov	w10, #0x1000                	// #4096
 484:	sub	x2, x10, x8
 488:	mov	w1, wzr
 48c:	add	x0, x9, x8
 490:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 494:	adrp	x8, 0 <_ZN11__sanitizer9IsDecimalEc>
 498:	ldr	q0, [x8]
 49c:	ldr	x8, [sp, #160]
 4a0:	add	x1, sp, #0x50
 4a4:	mov	x0, x20
 4a8:	str	q0, [sp, #176]
 4ac:	strb	wzr, [x8]
 4b0:	ldr	x8, [sp, #160]
 4b4:	ldr	x9, [sp, #176]
 4b8:	str	xzr, [sp, #152]
 4bc:	stp	x8, x9, [sp, #104]
 4c0:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 4c4:	tbz	w0, #0, 580 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x164>
 4c8:	add	x8, sp, #0x8
 4cc:	mov	x24, xzr
 4d0:	add	x21, x8, #0x1c
 4d4:	b	4ec <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0xd0>
 4d8:	add	x1, sp, #0x50
 4dc:	mov	x0, x20
 4e0:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 4e4:	sub	x24, x24, #0x1
 4e8:	tbz	w0, #0, 580 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x164>
 4ec:	ldr	x22, [sp, #104]
 4f0:	ldrb	w8, [x22]
 4f4:	cbz	w8, 4d8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0xbc>
 4f8:	ldr	x8, [sp, #80]
 4fc:	ldr	x9, [sp, #96]
 500:	cmp	x24, #0x0
 504:	movi	v0.2d, #0x0
 508:	csel	x8, xzr, x8, eq  // eq = none
 50c:	mov	w2, #0x10                  	// #16
 510:	mov	x0, x21
 514:	mov	w1, wzr
 518:	str	xzr, [sp, #8]
 51c:	stur	q0, [sp, #16]
 520:	str	wzr, [sp, #32]
 524:	sub	x23, x8, x9
 528:	strb	wzr, [sp, #52]
 52c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 530:	movi	v0.2d, #0x0
 534:	add	x0, sp, #0x8
 538:	mov	x1, x22
 53c:	mov	x2, x23
 540:	stur	q0, [sp, #64]
 544:	str	xzr, [sp, #56]
 548:	bl	0 <_ZN11__sanitizer12LoadedModule3setEPKcm>
 54c:	ldr	x8, [sp, #152]
 550:	cbnz	x8, 5a0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x184>
 554:	ldr	x8, [sp, #120]
 558:	ldp	x1, x2, [sp, #80]
 55c:	add	x0, sp, #0x8
 560:	mov	x5, xzr
 564:	ubfx	x3, x8, #2, #1
 568:	ubfx	x4, x8, #1, #1
 56c:	bl	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 570:	add	x1, sp, #0x8
 574:	mov	x0, x19
 578:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 57c:	b	4d8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0xbc>
 580:	ldp	x0, x1, [sp, #160]
 584:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 588:	ldp	x20, x19, [sp, #240]
 58c:	ldp	x22, x21, [sp, #224]
 590:	ldp	x24, x23, [sp, #208]
 594:	ldr	x30, [sp, #192]
 598:	add	sp, sp, #0x100
 59c:	ret
 5a0:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 5a4:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 5a8:	add	x0, x0, #0x0
 5ac:	add	x2, x2, #0x0
 5b0:	mov	w1, #0x44                  	// #68
 5b4:	mov	x3, xzr
 5b8:	mov	x4, xzr
 5bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000005c0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m>:
 5c0:	sub	sp, sp, #0x60
 5c4:	stp	x30, xzr, [sp, #16]
 5c8:	stp	x26, x25, [sp, #32]
 5cc:	stp	x24, x23, [sp, #48]
 5d0:	stp	x22, x21, [sp, #64]
 5d4:	stp	x20, x19, [sp, #80]
 5d8:	mov	x21, x0
 5dc:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 5e0:	mov	x19, x2
 5e4:	mov	x20, x1
 5e8:	add	x0, x0, #0x0
 5ec:	add	x1, sp, #0x18
 5f0:	add	x2, sp, #0x8
 5f4:	mov	x3, sp
 5f8:	mov	w4, #0x4000000             	// #67108864
 5fc:	mov	x5, xzr
 600:	stp	xzr, xzr, [sp]
 604:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 608:	tbz	w0, #0, 824 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x264>
 60c:	ldr	x8, [sp]
 610:	ldr	x22, [sp, #24]
 614:	cmp	x8, #0x1
 618:	b.lt	818 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x258>  // b.tstop
 61c:	adrp	x24, 0 <_ZN11__sanitizer9IsDecimalEc>
 620:	mov	w26, wzr
 624:	mov	x23, xzr
 628:	add	x24, x24, #0x0
 62c:	mov	w25, #0xa                   	// #10
 630:	ldrb	w9, [x22]
 634:	sub	w8, w9, #0x30
 638:	cmp	w8, #0x9
 63c:	b.ls	650 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x90>  // b.plast
 640:	sub	w8, w9, #0x61
 644:	cmp	w8, #0x5
 648:	b.hi	6fc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x13c>  // b.pmore
 64c:	sub	w8, w9, #0x57
 650:	cmp	w8, #0xf
 654:	b.hi	714 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x154>  // b.pmore
 658:	mov	x23, xzr
 65c:	add	x8, x22, #0x1
 660:	sub	w10, w9, #0x30
 664:	and	w10, w10, #0xff
 668:	cmp	w10, #0x9
 66c:	and	w9, w9, #0xff
 670:	b.hi	684 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xc4>  // b.pmore
 674:	sub	w10, w9, #0x30
 678:	cmp	w10, #0xf
 67c:	b.ls	6b8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xf8>  // b.plast
 680:	b	6c8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x108>
 684:	sub	w10, w9, #0x61
 688:	cmp	w10, #0x5
 68c:	b.hi	6a0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xe0>  // b.pmore
 690:	sub	w10, w9, #0x57
 694:	cmp	w10, #0xf
 698:	b.ls	6b8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xf8>  // b.plast
 69c:	b	6c8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x108>
 6a0:	sub	w10, w9, #0x41
 6a4:	cmp	w10, #0x5
 6a8:	b.hi	6c8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x108>  // b.pmore
 6ac:	sub	w10, w9, #0x37
 6b0:	cmp	w10, #0xf
 6b4:	b.hi	6c8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x108>  // b.pmore
 6b8:	mov	x22, x8
 6bc:	ldrb	w9, [x8], #1
 6c0:	add	x23, x10, x23, lsl #4
 6c4:	b	660 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xa0>
 6c8:	ldrb	w8, [x22]
 6cc:	cmp	w8, #0x2f
 6d0:	b.eq	6f0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x130>  // b.none
 6d4:	cmp	w8, #0xb
 6d8:	b.cc	6f0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x130>  // b.lo, b.ul, b.last
 6dc:	ldrb	w8, [x22, #1]!
 6e0:	cmp	w8, #0x2f
 6e4:	b.eq	6f0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x130>  // b.none
 6e8:	cmp	w8, #0xa
 6ec:	b.hi	6dc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x11c>  // b.pmore
 6f0:	cmp	w8, #0x2f
 6f4:	cset	w26, eq  // eq = none
 6f8:	b	7f4 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x234>
 6fc:	sub	w8, w9, #0x41
 700:	cmp	w8, #0x5
 704:	b.hi	714 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x154>  // b.pmore
 708:	sub	w8, w9, #0x37
 70c:	cmp	w8, #0xf
 710:	b.ls	658 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x98>  // b.plast
 714:	mov	w2, #0x4                   	// #4
 718:	mov	x0, x22
 71c:	mov	x1, x24
 720:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 724:	cbnz	w0, 7f4 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x234>
 728:	b	73c <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x17c>
 72c:	sub	w8, w10, #0x57
 730:	cmp	w8, #0x9
 734:	b.ls	76c <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1ac>  // b.plast
 738:	add	x22, x22, #0x1
 73c:	ldrb	w10, [x22]
 740:	sub	w8, w10, #0x30
 744:	cmp	w8, #0x9
 748:	b.ls	730 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x170>  // b.plast
 74c:	sub	w8, w10, #0x61
 750:	cmp	w8, #0x5
 754:	b.ls	72c <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x16c>  // b.plast
 758:	sub	w8, w10, #0x41
 75c:	cmp	w8, #0x5
 760:	b.hi	738 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x178>  // b.pmore
 764:	sub	w8, w10, #0x37
 768:	b	730 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x170>
 76c:	mov	x8, xzr
 770:	add	x9, x22, #0x1
 774:	sub	w11, w10, #0x30
 778:	and	w11, w11, #0xff
 77c:	cmp	w11, #0x9
 780:	and	w10, w10, #0xff
 784:	b.hi	798 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1d8>  // b.pmore
 788:	sub	w11, w10, #0x30
 78c:	cmp	w11, #0x9
 790:	b.ls	7cc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x20c>  // b.plast
 794:	b	7dc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x21c>
 798:	sub	w11, w10, #0x61
 79c:	cmp	w11, #0x5
 7a0:	b.hi	7b4 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1f4>  // b.pmore
 7a4:	sub	w11, w10, #0x57
 7a8:	cmp	w11, #0x9
 7ac:	b.ls	7cc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x20c>  // b.plast
 7b0:	b	7dc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x21c>
 7b4:	sub	w11, w10, #0x41
 7b8:	cmp	w11, #0x5
 7bc:	b.hi	7dc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x21c>  // b.pmore
 7c0:	sub	w11, w10, #0x37
 7c4:	cmp	w11, #0x9
 7c8:	b.hi	7dc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x21c>  // b.pmore
 7cc:	mov	x22, x9
 7d0:	ldrb	w10, [x9], #1
 7d4:	madd	x8, x8, x25, x11
 7d8:	b	774 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1b4>
 7dc:	lsl	x1, x8, #10
 7e0:	and	w2, w26, #0x1
 7e4:	mov	x0, x23
 7e8:	mov	x3, x20
 7ec:	mov	x4, x19
 7f0:	blr	x21
 7f4:	ldrb	w8, [x22], #1
 7f8:	cmp	w8, #0xa
 7fc:	b.ne	7f4 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x234>  // b.any
 800:	ldr	x8, [sp, #24]
 804:	ldr	x9, [sp]
 808:	add	x9, x8, x9
 80c:	cmp	x9, x22
 810:	b.hi	630 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x70>  // b.pmore
 814:	mov	x22, x8
 818:	ldr	x1, [sp, #8]
 81c:	mov	x0, x22
 820:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 824:	ldp	x20, x19, [sp, #80]
 828:	ldp	x22, x21, [sp, #64]
 82c:	ldp	x24, x23, [sp, #48]
 830:	ldp	x26, x25, [sp, #32]
 834:	ldr	x30, [sp, #16]
 838:	add	sp, sp, #0x60
 83c:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	mov	x9, #0xe38f                	// #58255
  10:	movk	x9, #0x8e38, lsl #16
  14:	movk	x9, #0x38e3, lsl #32
  18:	movk	x9, #0xe38e, lsl #48
  1c:	umulh	x8, x8, x9
  20:	lsr	x4, x8, #6
  24:	cmp	x3, x4
  28:	b.hi	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xb4>  // b.pmore
  2c:	mov	x19, x0
  30:	mov	x20, x1
  34:	b.ne	8c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x8c>  // b.any
  38:	adds	x3, x3, #0x1
  3c:	b.cs	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xcc>  // b.hs, b.nlast
  40:	sub	x8, x3, #0x1
  44:	tst	x3, x8
  48:	b.ne	54 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x54>  // b.any
  4c:	mov	x8, x3
  50:	b	7c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x7c>
  54:	clz	x8, x3
  58:	eor	x9, x8, #0x3f
  5c:	mov	w8, #0x2                   	// #2
  60:	lsl	x8, x8, x9
  64:	cmp	x8, x3
  68:	b.ls	ec <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xec>  // b.plast
  6c:	mov	w10, #0x1                   	// #1
  70:	lsl	x4, x10, x9
  74:	cmp	x4, x3
  78:	b.cs	108 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x108>  // b.hs, b.nlast
  7c:	mov	x0, x19
  80:	mov	x1, x8
  84:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  88:	ldr	x3, [x19, #16]
  8c:	add	x9, x3, #0x1
  90:	ldr	x8, [x19]
  94:	str	x9, [x19, #16]
  98:	mov	x1, x20
  9c:	ldp	x20, x19, [sp, #16]
  a0:	mov	w10, #0x48                  	// #72
  a4:	madd	x0, x3, x10, x8
  a8:	mov	w2, #0x48                  	// #72
  ac:	ldr	x30, [sp], #32
  b0:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x1cd                 	// #461
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  d0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  d4:	add	x0, x0, #0x0
  d8:	add	x2, x2, #0x0
  dc:	mov	w1, #0x186                 	// #390
  e0:	mov	x3, xzr
  e4:	mov	x4, xzr
  e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ec:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  f0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  f4:	add	x0, x0, #0x0
  f8:	add	x2, x2, #0x0
  fc:	mov	w1, #0x18a                 	// #394
 100:	mov	x4, x8
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 108:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
 10c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
 110:	add	x0, x0, #0x0
 114:	add	x2, x2, #0x0
 118:	mov	w1, #0x18b                 	// #395
 11c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xa0>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	c0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xc0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	dc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xdc>  // b.any
  44:	add	x8, x20, x20, lsl #3
  48:	lsl	x8, x8, #3
  4c:	add	x8, x8, x0
  50:	sub	x8, x8, #0x1
  54:	neg	x9, x0
  58:	and	x20, x8, x9
  5c:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  60:	add	x1, x1, #0x0
  64:	mov	x0, x20
  68:	mov	w2, wzr
  6c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  70:	ldr	x8, [x19, #16]
  74:	ldr	x1, [x19]
  78:	mov	x21, x0
  7c:	add	x8, x8, x8, lsl #3
  80:	lsl	x2, x8, #3
  84:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  88:	ldp	x0, x1, [x19]
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	stp	x21, x20, [x19]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x30, x21, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  a4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  a8:	add	x0, x0, #0x0
  ac:	add	x2, x2, #0x0
  b0:	mov	w1, #0x20b                 	// #523
  b4:	mov	x3, xzr
  b8:	mov	x4, xzr
  bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  c0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  c4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  c8:	add	x0, x0, #0x0
  cc:	add	x2, x2, #0x0
  d0:	mov	w1, #0x20c                 	// #524
  d4:	mov	x4, x20
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  dc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_procmaps_bsd.cpp.o:     file format elf64-littleaarch64


sanitizer_procmaps_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	x19, x0
   8:	add	x2, x0, #0x8
   c:	add	x3, x0, #0x10
  10:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
  14:	add	x0, x0, #0x0
  18:	mov	w4, #0x4000000             	// #67108864
  1c:	mov	x1, x19
  20:	mov	x5, xzr
  24:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
  28:	tbnz	w0, #0, 34 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE+0x34>
  2c:	stp	xzr, xzr, [x19, #8]
  30:	str	xzr, [x19]
  34:	ldp	x30, x19, [sp], #16
  38:	ret

000000000000003c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>:
  3c:	str	x30, [sp, #-48]!
  40:	stp	x22, x21, [sp, #16]
  44:	stp	x20, x19, [sp, #32]
  48:	mov	x20, x1
  4c:	mov	x19, x0
  50:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
  54:	tbnz	w0, #0, 27c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x240>
  58:	ldr	x8, [x19]
  5c:	ldr	x9, [x19, #16]
  60:	ldr	x0, [x19, #24]!
  64:	add	x21, x8, x9
  68:	cmp	x0, x21
  6c:	b.cs	27c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x240>  // b.hs, b.nlast
  70:	sub	x2, x21, x0
  74:	mov	w1, #0xa                   	// #10
  78:	bl	0 <_ZN11__sanitizer15internal_memchrEPKvim>
  7c:	cmp	x0, #0x0
  80:	csel	x22, x21, x0, eq  // eq = none
  84:	mov	x0, x19
  88:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
  8c:	str	x0, [x20]
  90:	ldr	x8, [x19]
  94:	add	x9, x8, #0x1
  98:	str	x9, [x19]
  9c:	ldrb	w3, [x8]
  a0:	cmp	x3, #0x2d
  a4:	b.ne	2ec <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2b0>  // b.any
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
  b0:	str	x0, [x20, #8]
  b4:	ldr	x8, [x19]
  b8:	add	x9, x8, #0x1
  bc:	str	x9, [x19]
  c0:	ldrb	w3, [x8]
  c4:	cmp	x3, #0x20
  c8:	b.ne	308 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2cc>  // b.any
  cc:	ldrb	w9, [x9]
  d0:	cmp	w9, #0x2d
  d4:	b.eq	e0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0xa4>  // b.none
  d8:	cmp	w9, #0x72
  dc:	b.ne	324 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2e8>  // b.any
  e0:	add	x10, x8, #0x2
  e4:	str	xzr, [x20, #40]
  e8:	str	x10, [x19]
  ec:	ldrb	w9, [x8, #1]
  f0:	cmp	w9, #0x72
  f4:	mov	x9, xzr
  f8:	b.ne	104 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0xc8>  // b.any
  fc:	mov	w9, #0x1                   	// #1
 100:	str	x9, [x20, #40]
 104:	ldrb	w10, [x10]
 108:	cmp	w10, #0x2d
 10c:	b.eq	118 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0xdc>  // b.none
 110:	cmp	w10, #0x77
 114:	b.ne	33c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x300>  // b.any
 118:	add	x10, x8, #0x3
 11c:	str	x10, [x19]
 120:	ldrb	w11, [x8, #2]
 124:	cmp	w11, #0x77
 128:	b.ne	134 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0xf8>  // b.any
 12c:	orr	x9, x9, #0x2
 130:	str	x9, [x20, #40]
 134:	ldrb	w10, [x10]
 138:	cmp	w10, #0x2d
 13c:	b.eq	148 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x10c>  // b.none
 140:	cmp	w10, #0x78
 144:	b.ne	354 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x318>  // b.any
 148:	add	x10, x8, #0x4
 14c:	str	x10, [x19]
 150:	ldrb	w11, [x8, #3]
 154:	cmp	w11, #0x78
 158:	b.ne	164 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x128>  // b.any
 15c:	orr	x9, x9, #0x4
 160:	str	x9, [x20, #40]
 164:	ldrb	w10, [x10]
 168:	cmp	w10, #0x70
 16c:	b.eq	178 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x13c>  // b.none
 170:	cmp	w10, #0x73
 174:	b.ne	36c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x330>  // b.any
 178:	add	x10, x8, #0x5
 17c:	str	x10, [x19]
 180:	ldrb	w10, [x8, #4]
 184:	cmp	w10, #0x73
 188:	b.ne	194 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x158>  // b.any
 18c:	orr	x9, x9, #0x8
 190:	str	x9, [x20, #40]
 194:	add	x9, x8, #0x6
 198:	str	x9, [x19]
 19c:	ldrb	w3, [x8, #5]
 1a0:	cmp	x3, #0x20
 1a4:	b.ne	38c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x350>  // b.any
 1a8:	mov	x0, x19
 1ac:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 1b0:	str	x0, [x20, #16]
 1b4:	ldr	x8, [x19]
 1b8:	add	x9, x8, #0x1
 1bc:	str	x9, [x19]
 1c0:	ldrb	w3, [x8]
 1c4:	cmp	x3, #0x20
 1c8:	b.ne	3a8 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x36c>  // b.any
 1cc:	mov	x0, x19
 1d0:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 1d4:	ldr	x8, [x19]
 1d8:	add	x9, x8, #0x1
 1dc:	str	x9, [x19]
 1e0:	ldrb	w3, [x8]
 1e4:	cmp	x3, #0x3a
 1e8:	b.ne	3c4 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x388>  // b.any
 1ec:	mov	x0, x19
 1f0:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 1f4:	ldr	x9, [x19]
 1f8:	add	x8, x9, #0x1
 1fc:	str	x8, [x19]
 200:	ldrb	w3, [x9]
 204:	cmp	x3, #0x20
 208:	b.ne	3e0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x3a4>  // b.any
 20c:	ldrb	w0, [x8]
 210:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 214:	tbz	w0, #0, 230 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x1f4>
 218:	ldr	x8, [x19]
 21c:	add	x9, x8, #0x1
 220:	str	x9, [x19]
 224:	ldrb	w0, [x8, #1]
 228:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 22c:	tbnz	w0, #0, 218 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x1dc>
 230:	ldr	x1, [x19]
 234:	cmp	x1, x22
 238:	b.cs	290 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x254>  // b.hs, b.nlast
 23c:	ldrb	w8, [x1]
 240:	cmp	w8, #0x20
 244:	mov	x8, x1
 248:	b.ne	294 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x258>  // b.any
 24c:	add	x8, x1, #0x1
 250:	cmp	x22, x8
 254:	str	x8, [x19]
 258:	b.eq	2dc <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2a0>  // b.none
 25c:	ldrb	w9, [x8], #1
 260:	cmp	w9, #0x20
 264:	b.eq	250 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x214>  // b.none
 268:	sub	x8, x8, #0x1
 26c:	mov	x1, x8
 270:	ldr	x0, [x20, #24]
 274:	cbnz	x0, 29c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x260>
 278:	b	2c0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x284>
 27c:	mov	w0, wzr
 280:	ldp	x20, x19, [sp, #32]
 284:	ldp	x22, x21, [sp, #16]
 288:	ldr	x30, [sp], #48
 28c:	ret
 290:	mov	x8, x1
 294:	ldr	x0, [x20, #24]
 298:	cbz	x0, 2c0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x284>
 29c:	ldr	x9, [x20, #32]
 2a0:	sub	x8, x22, x8
 2a4:	sub	x9, x9, #0x1
 2a8:	cmp	x8, x9
 2ac:	csel	x21, x8, x9, cc  // cc = lo, ul, last
 2b0:	mov	x2, x21
 2b4:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 2b8:	ldr	x8, [x20, #24]
 2bc:	strb	wzr, [x8, x21]
 2c0:	add	x8, x22, #0x1
 2c4:	mov	w0, #0x1                   	// #1
 2c8:	str	x8, [x19]
 2cc:	ldp	x20, x19, [sp, #32]
 2d0:	ldp	x22, x21, [sp, #16]
 2d4:	ldr	x30, [sp], #48
 2d8:	ret
 2dc:	mov	x1, x22
 2e0:	ldr	x0, [x20, #24]
 2e4:	cbnz	x0, 29c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x260>
 2e8:	b	2c0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x284>
 2ec:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 2f0:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 2f4:	add	x0, x0, #0x0
 2f8:	add	x2, x2, #0x0
 2fc:	mov	w1, #0x2a                  	// #42
 300:	mov	w4, #0x2d                  	// #45
 304:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 308:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 30c:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 310:	add	x0, x0, #0x0
 314:	add	x2, x2, #0x0
 318:	mov	w1, #0x2c                  	// #44
 31c:	mov	w4, #0x20                  	// #32
 320:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 324:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 328:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 32c:	add	x0, x0, #0x0
 330:	add	x2, x2, #0x0
 334:	mov	w1, #0x2d                  	// #45
 338:	b	380 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x344>
 33c:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 340:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 344:	add	x0, x0, #0x0
 348:	add	x2, x2, #0x0
 34c:	mov	w1, #0x30                  	// #48
 350:	b	380 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x344>
 354:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 358:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 35c:	add	x0, x0, #0x0
 360:	add	x2, x2, #0x0
 364:	mov	w1, #0x32                  	// #50
 368:	b	380 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x344>
 36c:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 370:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 374:	add	x0, x0, #0x0
 378:	add	x2, x2, #0x0
 37c:	mov	w1, #0x34                  	// #52
 380:	mov	x3, xzr
 384:	mov	x4, xzr
 388:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 38c:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 390:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 394:	add	x0, x0, #0x0
 398:	add	x2, x2, #0x0
 39c:	mov	w1, #0x36                  	// #54
 3a0:	mov	w4, #0x20                  	// #32
 3a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3a8:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3ac:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3b0:	add	x0, x0, #0x0
 3b4:	add	x2, x2, #0x0
 3b8:	mov	w1, #0x38                  	// #56
 3bc:	mov	w4, #0x20                  	// #32
 3c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3c4:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3c8:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x2, x2, #0x0
 3d4:	mov	w1, #0x3a                  	// #58
 3d8:	mov	w4, #0x3a                  	// #58
 3dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e0:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3e4:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3e8:	add	x0, x0, #0x0
 3ec:	add	x2, x2, #0x0
 3f0:	mov	w1, #0x3c                  	// #60
 3f4:	mov	w4, #0x20                  	// #32
 3f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_procmaps_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_procmaps_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_rtems.cpp.o:     file format elf64-littleaarch64


sanitizer_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_stoptheworld_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_suppressions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18SuppressionContextC1EPPKci>:
   0:	str	x30, [sp, #-16]!
   4:	mov	w8, #0x1                   	// #1
   8:	cmp	w2, #0x41
   c:	sxtw	x3, w2
  10:	str	x1, [x0]
  14:	str	w2, [x0, #8]
  18:	stp	xzr, xzr, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	strb	w8, [x0, #104]
  24:	b.cs	3c <_ZN11__sanitizer18SuppressionContextC1EPPKci+0x3c>  // b.hs, b.nlast
  28:	add	x0, x0, #0x28
  2c:	mov	w1, wzr
  30:	mov	x2, x3
  34:	ldr	x30, [sp], #16
  38:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
  3c:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
  40:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
  44:	add	x0, x0, #0x0
  48:	add	x2, x2, #0x0
  4c:	mov	w1, #0x1d                  	// #29
  50:	mov	w4, #0x40                  	// #64
  54:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000058 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc>:
  58:	sub	sp, sp, #0x90
  5c:	str	x30, [sp, #96]
  60:	stp	x22, x21, [sp, #112]
  64:	stp	x20, x19, [sp, #128]
  68:	ldrb	w8, [x1]
  6c:	cbz	w8, 228 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1d0>
  70:	mov	x20, x1
  74:	mov	x19, x0
  78:	add	x0, sp, #0x20
  7c:	mov	w1, #0x1000                	// #4096
  80:	stp	xzr, xzr, [sp, #40]
  84:	str	xzr, [sp, #32]
  88:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
  8c:	ldr	x8, [sp, #48]
  90:	cmp	x8, #0xfff
  94:	b.hi	cc <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x74>  // b.pmore
  98:	ldr	x9, [sp, #40]
  9c:	cmp	x9, #0xfff
  a0:	b.hi	b4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x5c>  // b.pmore
  a4:	add	x0, sp, #0x20
  a8:	mov	w1, #0x1000                	// #4096
  ac:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
  b0:	ldr	x8, [sp, #48]
  b4:	ldr	x9, [sp, #32]
  b8:	mov	w10, #0x1000                	// #4096
  bc:	sub	x2, x10, x8
  c0:	mov	w1, wzr
  c4:	add	x0, x9, x8
  c8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  cc:	adrp	x8, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
  d0:	ldr	q0, [x8]
  d4:	ldr	x8, [sp, #32]
  d8:	mov	x0, x20
  dc:	str	q0, [sp, #48]
  e0:	strb	wzr, [x8]
  e4:	ldr	x21, [sp, #32]
  e8:	ldr	x22, [sp, #48]
  ec:	str	q0, [sp]
  f0:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
  f4:	tbnz	w0, #0, 1c8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x170>
  f8:	mov	x0, x20
  fc:	bl	0 <_ZN11__sanitizer14IsAbsolutePathEPKc>
 100:	tbnz	w0, #0, 1c8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x170>
 104:	add	x0, sp, #0x40
 108:	mov	w1, #0x1000                	// #4096
 10c:	stp	xzr, xzr, [sp, #72]
 110:	str	xzr, [sp, #64]
 114:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 118:	ldr	x8, [sp, #80]
 11c:	cmp	x8, #0xfff
 120:	b.hi	158 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x100>  // b.pmore
 124:	ldr	x9, [sp, #72]
 128:	cmp	x9, #0xfff
 12c:	b.hi	140 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0xe8>  // b.pmore
 130:	add	x0, sp, #0x40
 134:	mov	w1, #0x1000                	// #4096
 138:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 13c:	ldr	x8, [sp, #80]
 140:	ldr	x9, [sp, #64]
 144:	mov	w10, #0x1000                	// #4096
 148:	sub	x2, x10, x8
 14c:	mov	w1, wzr
 150:	add	x0, x9, x8
 154:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 158:	ldr	x8, [sp, #64]
 15c:	ldr	q0, [sp]
 160:	str	q0, [sp, #80]
 164:	strb	wzr, [x8]
 168:	ldr	x0, [sp, #64]
 16c:	ldr	x1, [sp, #80]
 170:	bl	0 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>
 174:	ldr	x8, [sp, #64]
 178:	cbz	x0, 23c <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1e4>
 17c:	mov	x0, x8
 180:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 184:	ldr	x1, [sp, #64]
 188:	sub	x9, x22, #0x1
 18c:	sub	x8, x0, x1
 190:	cmp	x8, x9
 194:	csel	x2, x8, x9, cc  // cc = lo, ul, last
 198:	mov	x0, x21
 19c:	bl	0 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 1a0:	mov	x0, x21
 1a4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 1a8:	mvn	x8, x0
 1ac:	add	x2, x22, x8
 1b0:	mov	x0, x21
 1b4:	mov	x1, x20
 1b8:	bl	0 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 1bc:	ldp	x0, x1, [sp, #64]
 1c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 1c4:	mov	x20, x21
 1c8:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 1cc:	ldr	x8, [x8]
 1d0:	ldr	w8, [x8]
 1d4:	cbz	w8, 1f4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x19c>
 1d8:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1dc:	ldr	x8, [x8]
 1e0:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 1e4:	add	x0, x0, #0x0
 1e8:	mov	x2, x20
 1ec:	ldr	x1, [x8]
 1f0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 1f4:	add	x1, sp, #0x40
 1f8:	add	x2, sp, #0x68
 1fc:	add	x3, sp, #0x18
 200:	mov	w4, #0x4000000             	// #67108864
 204:	mov	x0, x20
 208:	mov	x5, xzr
 20c:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 210:	tbz	w0, #0, 25c <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x204>
 214:	ldr	x1, [sp, #64]
 218:	mov	x0, x19
 21c:	bl	27c <_ZN11__sanitizer18SuppressionContext5ParseEPKc>
 220:	ldp	x0, x1, [sp, #32]
 224:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 228:	ldp	x20, x19, [sp, #128]
 22c:	ldp	x22, x21, [sp, #112]
 230:	ldr	x30, [sp, #96]
 234:	add	sp, sp, #0x90
 238:	ret
 23c:	ldr	x1, [sp, #72]
 240:	mov	x0, x8
 244:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 248:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 24c:	ldr	x8, [x8]
 250:	ldr	w8, [x8]
 254:	cbnz	w8, 1d8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x180>
 258:	b	1f4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x19c>
 25c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 260:	ldr	x8, [x8]
 264:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 268:	add	x0, x0, #0x0
 26c:	mov	x2, x20
 270:	ldr	x1, [x8]
 274:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 278:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000027c <_ZN11__sanitizer18SuppressionContext5ParseEPKc>:
 27c:	sub	sp, sp, #0x70
 280:	str	x30, [sp, #32]
 284:	stp	x26, x25, [sp, #48]
 288:	stp	x24, x23, [sp, #64]
 28c:	stp	x22, x21, [sp, #80]
 290:	stp	x20, x19, [sp, #96]
 294:	ldrb	w3, [x0, #104]
 298:	cmp	x3, #0x1
 29c:	b.ne	4ac <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x230>  // b.any
 2a0:	mov	x25, #0x2200                	// #8704
 2a4:	mov	x19, x0
 2a8:	mov	x21, x1
 2ac:	add	x20, x0, #0x10
 2b0:	mov	w24, #0x1                   	// #1
 2b4:	movk	x25, #0x1, lsl #32
 2b8:	b	330 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xb4>
 2bc:	mov	w26, wzr
 2c0:	cmp	w26, w8
 2c4:	b.eq	490 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x214>  // b.none
 2c8:	mov	x0, sp
 2cc:	mov	w2, #0x20                  	// #32
 2d0:	mov	w1, wzr
 2d4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 2d8:	ldr	x8, [x19]
 2dc:	sub	x23, x23, x21
 2e0:	add	x0, x23, #0x1
 2e4:	mov	x1, xzr
 2e8:	ldr	x8, [x8, w26, uxtw #3]
 2ec:	mov	x2, xzr
 2f0:	str	x8, [sp]
 2f4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 2f8:	mov	x1, x21
 2fc:	mov	x2, x23
 300:	str	x0, [sp, #8]
 304:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 308:	ldr	x8, [sp, #8]
 30c:	mov	x1, sp
 310:	mov	x0, x20
 314:	strb	wzr, [x8, x23]
 318:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 31c:	add	x8, x19, w26, uxtw
 320:	strb	w24, [x8, #40]
 324:	ldrb	w8, [x22], #1
 328:	mov	x21, x22
 32c:	cbz	w8, 474 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1f8>
 330:	cbnz	x21, 33c <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xc0>
 334:	b	474 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1f8>
 338:	add	x21, x21, #0x1
 33c:	ldrb	w8, [x21]
 340:	cmp	w8, #0x20
 344:	b.eq	338 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xbc>  // b.none
 348:	cmp	w8, #0x9
 34c:	b.eq	338 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xbc>  // b.none
 350:	mov	w1, #0xa                   	// #10
 354:	mov	x0, x21
 358:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 35c:	mov	x22, x0
 360:	cbz	x0, 370 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xf4>
 364:	cmp	x22, x21
 368:	b.ne	384 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x108>  // b.any
 36c:	b	324 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xa8>
 370:	mov	x0, x21
 374:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 378:	add	x22, x21, x0
 37c:	cmp	x22, x21
 380:	b.eq	324 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xa8>  // b.none
 384:	ldrb	w9, [x21]
 388:	cmp	w9, #0x23
 38c:	b.eq	324 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xa8>  // b.none
 390:	mov	x23, x22
 394:	mov	x8, x22
 398:	ldrb	w10, [x8, #-1]!
 39c:	cmp	w10, #0x20
 3a0:	b.hi	3c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x144>  // b.pmore
 3a4:	lsl	x10, x24, x10
 3a8:	tst	x10, x25
 3ac:	b.eq	3c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x144>  // b.none
 3b0:	cmp	x21, x8
 3b4:	mov	x23, x8
 3b8:	b.ne	398 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x11c>  // b.any
 3bc:	mov	x23, x21
 3c0:	ldrsw	x8, [x19, #8]
 3c4:	cmp	w8, #0x1
 3c8:	b.lt	2bc <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x40>  // b.tstop
 3cc:	ldr	x11, [x19]
 3d0:	mov	x10, xzr
 3d4:	mov	w26, wzr
 3d8:	ldr	x12, [x11, x10, lsl #3]
 3dc:	tst	w9, #0xff
 3e0:	b.eq	41c <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1a0>  // b.none
 3e4:	mov	x13, xzr
 3e8:	ldrb	w14, [x12, x13]
 3ec:	cmp	w14, w9, uxtb
 3f0:	b.ne	430 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1b4>  // b.any
 3f4:	add	x9, x21, x13
 3f8:	ldrb	w9, [x9, #1]
 3fc:	add	x13, x13, #0x1
 400:	cbnz	w9, 3e8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x16c>
 404:	add	x12, x12, x13
 408:	add	x13, x21, x13
 40c:	ldrb	w14, [x12]
 410:	mov	w9, wzr
 414:	cbz	w14, 438 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1bc>
 418:	b	444 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1c8>
 41c:	mov	x13, x21
 420:	ldrb	w14, [x12]
 424:	mov	w9, wzr
 428:	cbz	w14, 438 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1bc>
 42c:	b	444 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1c8>
 430:	add	x13, x21, x13
 434:	cbnz	w14, 444 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1c8>
 438:	and	w9, w9, #0xff
 43c:	cmp	w9, #0x3a
 440:	b.eq	468 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1ec>  // b.none
 444:	add	x10, x10, #0x1
 448:	cmp	x10, x8
 44c:	add	w26, w26, #0x1
 450:	b.ge	2c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x44>  // b.tcont
 454:	ldrb	w9, [x21]
 458:	ldr	x12, [x11, x10, lsl #3]
 45c:	tst	w9, #0xff
 460:	b.ne	3e4 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x168>  // b.any
 464:	b	41c <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x1a0>
 468:	add	x21, x13, #0x1
 46c:	mov	w26, w10
 470:	b	2c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0x44>
 474:	ldp	x20, x19, [sp, #96]
 478:	ldp	x22, x21, [sp, #80]
 47c:	ldp	x24, x23, [sp, #64]
 480:	ldp	x26, x25, [sp, #48]
 484:	ldr	x30, [sp, #32]
 488:	add	sp, sp, #0x70
 48c:	ret
 490:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 494:	ldr	x8, [x8]
 498:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 49c:	add	x0, x0, #0x0
 4a0:	ldr	x1, [x8]
 4a4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 4a8:	bl	0 <_ZN11__sanitizer3DieEv>
 4ac:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 4b0:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 4b4:	add	x0, x0, #0x0
 4b8:	add	x2, x2, #0x0
 4bc:	mov	w1, #0x76                  	// #118
 4c0:	mov	x4, xzr
 4c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000004c8 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>:
 4c8:	stp	x30, x25, [sp, #-64]!
 4cc:	stp	x24, x23, [sp, #16]
 4d0:	stp	x22, x21, [sp, #32]
 4d4:	stp	x20, x19, [sp, #48]
 4d8:	ldr	w8, [x0, #8]
 4dc:	strb	wzr, [x0, #104]
 4e0:	cmp	w8, #0x1
 4e4:	b.lt	58c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc4>  // b.tstop
 4e8:	mov	x19, x3
 4ec:	mov	x20, x2
 4f0:	mov	x21, x1
 4f4:	mov	x22, x0
 4f8:	mov	x23, xzr
 4fc:	ldr	x8, [x22]
 500:	mov	x0, x20
 504:	ldr	x1, [x8, x23, lsl #3]
 508:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 50c:	cbz	w0, 524 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x5c>
 510:	ldrsw	x8, [x22, #8]
 514:	add	x23, x23, #0x1
 518:	cmp	x23, x8
 51c:	b.lt	4fc <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x34>  // b.tstop
 520:	b	58c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc4>
 524:	add	x8, x22, x23
 528:	ldrb	w8, [x8, #40]
 52c:	cbz	w8, 58c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc4>
 530:	ldr	x8, [x22, #32]
 534:	cbz	x8, 58c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc4>
 538:	mov	x23, xzr
 53c:	mov	x24, xzr
 540:	b	558 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x90>
 544:	ldr	x8, [x22, #32]
 548:	add	x24, x24, #0x1
 54c:	add	x23, x23, #0x20
 550:	cmp	x24, x8
 554:	b.cs	58c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc4>  // b.hs, b.nlast
 558:	ldr	x25, [x22, #16]
 55c:	mov	x1, x20
 560:	ldr	x0, [x25, x23]
 564:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 568:	cbnz	w0, 544 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x7c>
 56c:	add	x25, x25, x23
 570:	ldr	x0, [x25, #8]
 574:	mov	x1, x21
 578:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 57c:	tbz	w0, #0, 544 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x7c>
 580:	mov	w0, #0x1                   	// #1
 584:	str	x25, [x19]
 588:	b	590 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xc8>
 58c:	mov	w0, wzr
 590:	ldp	x20, x19, [sp, #48]
 594:	ldp	x22, x21, [sp, #32]
 598:	ldp	x24, x23, [sp, #16]
 59c:	ldp	x30, x25, [sp], #64
 5a0:	ret

00000000000005a4 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc>:
 5a4:	stp	x30, x21, [sp, #-32]!
 5a8:	stp	x20, x19, [sp, #16]
 5ac:	ldr	w8, [x0, #8]
 5b0:	cmp	w8, #0x1
 5b4:	b.lt	5e8 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x44>  // b.tstop
 5b8:	mov	x19, x0
 5bc:	mov	x20, x1
 5c0:	mov	x21, xzr
 5c4:	ldr	x8, [x19]
 5c8:	mov	x0, x20
 5cc:	ldr	x1, [x8, x21, lsl #3]
 5d0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 5d4:	cbz	w0, 5f8 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x54>
 5d8:	ldrsw	x8, [x19, #8]
 5dc:	add	x21, x21, #0x1
 5e0:	cmp	x21, x8
 5e4:	b.lt	5c4 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x20>  // b.tstop
 5e8:	mov	w0, wzr
 5ec:	ldp	x20, x19, [sp, #16]
 5f0:	ldp	x30, x21, [sp], #32
 5f4:	ret
 5f8:	add	x8, x19, x21
 5fc:	ldrb	w8, [x8, #40]
 600:	cmp	w8, #0x0
 604:	cset	w0, ne  // ne = any
 608:	ldp	x20, x19, [sp, #16]
 60c:	ldp	x30, x21, [sp], #32
 610:	ret

0000000000000614 <_ZNK11__sanitizer18SuppressionContext16SuppressionCountEv>:
 614:	ldr	x0, [x0, #32]
 618:	ret

000000000000061c <_ZNK11__sanitizer18SuppressionContext13SuppressionAtEm>:
 61c:	str	x30, [sp, #-16]!
 620:	ldr	x4, [x0, #32]
 624:	mov	x3, x1
 628:	cmp	x4, x1
 62c:	b.ls	640 <_ZNK11__sanitizer18SuppressionContext13SuppressionAtEm+0x24>  // b.plast
 630:	ldr	x8, [x0, #16]
 634:	add	x0, x8, x3, lsl #5
 638:	ldr	x30, [sp], #16
 63c:	ret
 640:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 644:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 648:	add	x0, x0, #0x0
 64c:	add	x2, x2, #0x0
 650:	mov	w1, #0xaa                  	// #170
 654:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000658 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE>:
 658:	str	x30, [sp, #-48]!
 65c:	stp	x22, x21, [sp, #16]
 660:	stp	x20, x19, [sp, #32]
 664:	ldr	x8, [x0, #32]
 668:	cbz	x8, 6b8 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x60>
 66c:	mov	x19, x0
 670:	mov	x20, x1
 674:	mov	x21, xzr
 678:	mov	x22, xzr
 67c:	b	690 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x38>
 680:	add	x22, x22, #0x1
 684:	cmp	x22, x8
 688:	add	x21, x21, #0x20
 68c:	b.cs	6b8 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x60>  // b.hs, b.nlast
 690:	ldr	x9, [x19, #16]
 694:	add	x9, x9, x21
 698:	ldr	w10, [x9, #16]
 69c:	cbz	w10, 680 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x28>
 6a0:	add	x1, sp, #0x8
 6a4:	mov	x0, x20
 6a8:	str	x9, [sp, #8]
 6ac:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 6b0:	ldr	x8, [x19, #32]
 6b4:	b	680 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x28>
 6b8:	ldp	x20, x19, [sp, #32]
 6bc:	ldp	x22, x21, [sp, #16]
 6c0:	ldr	x30, [sp], #48
 6c4:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #5
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #5
  90:	mov	w2, #0x20                  	// #32
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE9push_backERKS1_>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #3
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #3
  90:	mov	w2, #0x8                   	// #8
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE9push_backERKS2_>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #5
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #5
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_11SuppressionEE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #3
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #3
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_11SuppressionEE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_tls_get_addr.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer12DTLS_DestroyEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
   c:	ldr	x8, [x8]
  10:	ldrb	w8, [x8, #121]
  14:	cbz	w8, a8 <_ZN11__sanitizer12DTLS_DestroyEv+0xa8>
  18:	adrp	x21, 0 <_ZN11__sanitizer17current_verbosityE>
  1c:	ldr	x21, [x21]
  20:	adrp	x19, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  24:	ldr	w8, [x21]
  28:	ldr	x19, [x19]
  2c:	mrs	x20, tpidr_el0
  30:	cmp	w8, #0x2
  34:	b.cc	4c <_ZN11__sanitizer12DTLS_DestroyEv+0x4c>  // b.lo, b.ul, b.last
  38:	add	x1, x20, x19
  3c:	ldr	x2, [x1]
  40:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  44:	add	x0, x0, #0x0
  48:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  4c:	add	x8, x20, x19
  50:	ldr	x19, [x8]
  54:	mov	x9, #0xffffffffffffffff    	// #-1
  58:	str	x9, [x8]
  5c:	cbz	x19, a8 <_ZN11__sanitizer12DTLS_DestroyEv+0xa8>
  60:	ldr	x20, [x8, #8]
  64:	ldr	w8, [x21]
  68:	cmp	w8, #0x2
  6c:	b.cc	84 <_ZN11__sanitizer12DTLS_DestroyEv+0x84>  // b.lo, b.ul, b.last
  70:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  74:	add	x0, x0, #0x0
  78:	mov	x1, x20
  7c:	mov	x2, x19
  80:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  84:	lsl	x1, x19, #4
  88:	mov	x0, x20
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	adrp	x8, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  94:	add	x8, x8, #0x0
  98:	ldaxr	x9, [x8]
  9c:	sub	x9, x9, #0x1
  a0:	stlxr	w10, x9, [x8]
  a4:	cbnz	w10, 98 <_ZN11__sanitizer12DTLS_DestroyEv+0x98>
  a8:	ldp	x20, x19, [sp, #16]
  ac:	ldp	x30, x21, [sp], #32
  b0:	ret

00000000000000b4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm>:
  b4:	sub	sp, sp, #0x80
  b8:	stp	x29, x30, [sp, #32]
  bc:	stp	x28, x27, [sp, #48]
  c0:	stp	x26, x25, [sp, #64]
  c4:	stp	x24, x23, [sp, #80]
  c8:	stp	x22, x21, [sp, #96]
  cc:	stp	x20, x19, [sp, #112]
  d0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  d4:	ldr	x8, [x8]
  d8:	ldrb	w8, [x8, #121]
  dc:	cbz	w8, 26c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1b8>
  e0:	adrp	x26, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  e4:	ldr	x26, [x26]
  e8:	mrs	x28, tpidr_el0
  ec:	ldr	x8, [x28, x26]
  f0:	cmn	x8, #0x1
  f4:	b.eq	26c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1b8>  // b.none
  f8:	ldr	x25, [x0]
  fc:	mov	x19, x3
 100:	mov	x20, x2
 104:	mov	x21, x1
 108:	add	x3, x25, #0x1
 10c:	mov	x22, x0
 110:	cmp	x8, x3
 114:	b.cs	258 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1a4>  // b.hs, b.nlast
 118:	sub	x8, x3, #0x1
 11c:	tst	x3, x8
 120:	b.ne	12c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x78>  // b.any
 124:	mov	x4, x3
 128:	b	154 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0xa0>
 12c:	clz	x8, x3
 130:	eor	x8, x8, #0x3f
 134:	mov	w9, #0x2                   	// #2
 138:	lsl	x4, x9, x8
 13c:	cmp	x4, x3
 140:	b.ls	3c0 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x30c>  // b.plast
 144:	mov	w9, #0x1                   	// #1
 148:	lsl	x8, x9, x8
 14c:	cmp	x8, x3
 150:	b.cs	3d8 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x324>  // b.hs, b.nlast
 154:	cmp	x4, #0x100
 158:	mov	w8, #0x100                 	// #256
 15c:	csel	x29, x4, x8, hi  // hi = pmore
 160:	adrp	x1, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 164:	lsl	x0, x29, #4
 168:	add	x1, x1, #0x0
 16c:	mov	w2, wzr
 170:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 174:	adrp	x27, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 178:	mov	x23, x0
 17c:	add	x27, x27, #0x0
 180:	ldaxr	x24, [x27]
 184:	add	x8, x24, #0x1
 188:	stlxr	w9, x8, [x27]
 18c:	cbnz	w9, 180 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0xcc>
 190:	str	x20, [sp, #8]
 194:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 198:	ldr	x8, [x8]
 19c:	ldr	w8, [x8]
 1a0:	cmp	w8, #0x2
 1a4:	b.cc	1bc <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x108>  // b.lo, b.ul, b.last
 1a8:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 1ac:	add	x1, x28, x26
 1b0:	add	x0, x0, #0x0
 1b4:	mov	x2, x24
 1b8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1bc:	cmp	x24, #0x100, lsl #12
 1c0:	str	x19, [sp, #16]
 1c4:	b.cs	3a0 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2ec>  // b.hs, b.nlast
 1c8:	add	x19, x28, x26
 1cc:	mov	x20, x25
 1d0:	ldr	x25, [x19]
 1d4:	cbz	x25, 24c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x198>
 1d8:	ldr	x24, [x19, #8]
 1dc:	lsl	x26, x25, #4
 1e0:	mov	x0, x23
 1e4:	mov	x2, x26
 1e8:	mov	x1, x24
 1ec:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 1f0:	stp	x29, x23, [x19]
 1f4:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 1f8:	ldr	x8, [x8]
 1fc:	ldr	w8, [x8]
 200:	cmp	w8, #0x2
 204:	b.cc	21c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x168>  // b.lo, b.ul, b.last
 208:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 20c:	add	x0, x0, #0x0
 210:	mov	x1, x24
 214:	mov	x2, x25
 218:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 21c:	mov	x0, x24
 220:	mov	x1, x26
 224:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 228:	adrp	x26, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 22c:	ldr	x26, [x26]
 230:	mov	x25, x20
 234:	ldp	x20, x19, [sp, #8]
 238:	ldaxr	x8, [x27]
 23c:	sub	x8, x8, #0x1
 240:	stlxr	w9, x8, [x27]
 244:	cbnz	w9, 238 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x184>
 248:	b	258 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1a4>
 24c:	stp	x29, x23, [x19]
 250:	mov	x25, x20
 254:	ldp	x20, x19, [sp, #8]
 258:	add	x8, x28, x26
 25c:	ldr	x8, [x8, #8]
 260:	lsl	x9, x25, #4
 264:	ldr	x8, [x8, x9]
 268:	cbz	x8, 290 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1dc>
 26c:	mov	x0, xzr
 270:	ldp	x20, x19, [sp, #112]
 274:	ldp	x22, x21, [sp, #96]
 278:	ldp	x24, x23, [sp, #80]
 27c:	ldp	x26, x25, [sp, #64]
 280:	ldp	x28, x27, [sp, #48]
 284:	ldp	x29, x30, [sp, #32]
 288:	add	sp, sp, #0x80
 28c:	ret
 290:	ldr	x3, [x22, #8]
 294:	adrp	x23, 0 <_ZN11__sanitizer17current_verbosityE>
 298:	sub	x5, x21, x3
 29c:	str	x5, [sp, #24]
 2a0:	ldr	x23, [x23]
 2a4:	ldr	w8, [x23]
 2a8:	cmp	w8, #0x2
 2ac:	b.cc	2d8 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x224>  // b.lo, b.ul, b.last
 2b0:	adrp	x8, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 2b4:	ldr	x2, [x22]
 2b8:	ldr	x7, [x8]
 2bc:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 2c0:	add	x0, x0, #0x0
 2c4:	add	x6, sp, #0x18
 2c8:	mov	x1, x22
 2cc:	mov	x4, x21
 2d0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2d4:	ldr	x5, [sp, #24]
 2d8:	add	x8, x28, x26
 2dc:	ldr	x9, [x8, #24]
 2e0:	cmp	x9, x5
 2e4:	b.ne	310 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x25c>  // b.any
 2e8:	ldr	x19, [x8, #16]
 2ec:	ldr	w8, [x23]
 2f0:	cmp	w8, #0x2
 2f4:	b.cc	388 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d4>  // b.lo, b.ul, b.last
 2f8:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 2fc:	add	x0, x0, #0x0
 300:	mov	x1, x5
 304:	mov	x2, x19
 308:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 30c:	b	388 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d4>
 310:	cmp	x5, x20
 314:	b.cc	340 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x28c>  // b.lo, b.ul, b.last
 318:	cmp	x5, x19
 31c:	b.cs	340 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x28c>  // b.hs, b.nlast
 320:	ldr	w8, [x23]
 324:	cmp	w8, #0x2
 328:	b.cc	384 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d0>  // b.lo, b.ul, b.last
 32c:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 330:	add	x0, x0, #0x0
 334:	mov	x1, x5
 338:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 33c:	b	384 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d0>
 340:	and	x8, x5, #0xfff
 344:	cmp	x8, #0x10
 348:	b.ne	36c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2b8>  // b.any
 34c:	ldp	x19, x1, [x5, #-16]
 350:	str	x1, [sp, #24]
 354:	ldr	w8, [x23]
 358:	cmp	w8, #0x2
 35c:	b.cc	388 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d4>  // b.lo, b.ul, b.last
 360:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 364:	add	x0, x0, #0x0
 368:	b	304 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x250>
 36c:	ldr	w8, [x23]
 370:	cmp	w8, #0x2
 374:	b.cc	384 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d0>  // b.lo, b.ul, b.last
 378:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 37c:	add	x0, x0, #0x0
 380:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 384:	mov	x19, xzr
 388:	add	x8, x28, x26
 38c:	ldr	x8, [x8, #8]
 390:	ldr	x9, [sp, #24]
 394:	add	x0, x8, x25, lsl #4
 398:	stp	x9, x19, [x0]
 39c:	b	270 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1bc>
 3a0:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3a4:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3a8:	add	x0, x0, #0x0
 3ac:	add	x2, x2, #0x0
 3b0:	mov	w1, #0x3d                  	// #61
 3b4:	mov	w4, #0x100000              	// #1048576
 3b8:	mov	x3, x24
 3bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3c0:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3c4:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3c8:	add	x0, x0, #0x0
 3cc:	add	x2, x2, #0x0
 3d0:	mov	w1, #0x18a                 	// #394
 3d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3d8:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3dc:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3e0:	add	x0, x0, #0x0
 3e4:	add	x2, x2, #0x0
 3e8:	mov	w1, #0x18b                 	// #395
 3ec:	mov	x4, x8
 3f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000003f4 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm>:
 3f4:	str	x30, [sp, #-32]!
 3f8:	stp	x20, x19, [sp, #16]
 3fc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 400:	ldr	x8, [x8]
 404:	ldrb	w8, [x8, #121]
 408:	cbz	w8, 450 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm+0x5c>
 40c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 410:	ldr	x8, [x8]
 414:	mov	x19, x1
 418:	mov	x20, x0
 41c:	ldr	w8, [x8]
 420:	cmp	w8, #0x2
 424:	b.cc	43c <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm+0x48>  // b.lo, b.ul, b.last
 428:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 42c:	add	x0, x0, #0x0
 430:	mov	x1, x20
 434:	mov	x2, x19
 438:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 43c:	adrp	x8, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 440:	ldr	x8, [x8]
 444:	mrs	x9, tpidr_el0
 448:	add	x8, x9, x8
 44c:	stp	x19, x20, [x8, #16]
 450:	ldp	x20, x19, [sp, #16]
 454:	ldr	x30, [sp], #32
 458:	ret

000000000000045c <_ZN11__sanitizer8DTLS_GetEv>:
 45c:	adrp	x8, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 460:	ldr	x8, [x8]
 464:	mrs	x9, tpidr_el0
 468:	add	x0, x9, x8
 46c:	ret

0000000000000470 <_ZN11__sanitizer17DTLSInDestructionEPNS_4DTLSE>:
 470:	ldr	x8, [x0]
 474:	cmn	x8, #0x1
 478:	cset	w0, eq  // eq = none
 47c:	ret

sanitizer_thread_registry.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer17ThreadContextBaseC1Ej>:
   0:	adrp	x8, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
   4:	add	x8, x8, #0x0
   8:	str	w1, [x0, #8]
   c:	str	xzr, [x0, #16]
  10:	str	wzr, [x0, #24]
  14:	stp	xzr, xzr, [x0, #32]
  18:	str	wzr, [x0, #112]
  1c:	strb	wzr, [x0, #116]
  20:	stp	xzr, xzr, [x0, #120]
  24:	strb	wzr, [x0, #48]
  28:	str	x8, [x0]
  2c:	dmb	ish
  30:	str	wzr, [x0, #136]
  34:	ret

0000000000000038 <_ZN11__sanitizer17ThreadContextBaseD1Ev>:
  38:	str	x30, [sp, #-16]!
  3c:	adrp	x8, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
  40:	add	x8, x8, #0x0
  44:	str	x8, [x0]
  48:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
  4c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
  50:	add	x0, x0, #0x0
  54:	add	x2, x2, #0x0
  58:	mov	w1, #0x1c                  	// #28
  5c:	mov	x3, xzr
  60:	mov	x4, xzr
  64:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000068 <_ZN11__sanitizer17ThreadContextBase7SetNameEPKc>:
  68:	stp	x30, x19, [sp, #-16]!
  6c:	mov	x19, x0
  70:	strb	wzr, [x0, #48]!
  74:	cbz	x1, 84 <_ZN11__sanitizer17ThreadContextBase7SetNameEPKc+0x1c>
  78:	mov	w2, #0x40                  	// #64
  7c:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
  80:	strb	wzr, [x19, #111]
  84:	ldp	x30, x19, [sp], #16
  88:	ret

000000000000008c <_ZN11__sanitizer17ThreadContextBase7SetDeadEv>:
  8c:	str	x30, [sp, #-16]!
  90:	ldr	w8, [x0, #112]
  94:	orr	w8, w8, #0x1
  98:	cmp	w8, #0x3
  9c:	b.ne	bc <_ZN11__sanitizer17ThreadContextBase7SetDeadEv+0x30>  // b.any
  a0:	ldr	x8, [x0]
  a4:	mov	w9, #0x4                   	// #4
  a8:	str	w9, [x0, #112]
  ac:	str	xzr, [x0, #40]
  b0:	ldr	x1, [x8]
  b4:	ldr	x30, [sp], #16
  b8:	br	x1
  bc:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
  c0:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
  c4:	add	x0, x0, #0x0
  c8:	add	x2, x2, #0x0
  cc:	mov	w1, #0x29                  	// #41
  d0:	mov	x3, xzr
  d4:	mov	x4, xzr
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000000dc <_ZN11__sanitizer17ThreadContextBase12SetDestroyedEv>:
  dc:	mov	w8, #0x1                   	// #1
  e0:	dmb	ish
  e4:	str	w8, [x0, #136]
  e8:	ret

00000000000000ec <_ZN11__sanitizer17ThreadContextBase12GetDestroyedEv>:
  ec:	ldr	w8, [x0, #136]
  f0:	dmb	ish
  f4:	cmp	w8, #0x0
  f8:	cset	w0, ne  // ne = any
  fc:	ret

0000000000000100 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv>:
 100:	str	x30, [sp, #-16]!
 104:	ldrb	w4, [x0, #116]
 108:	cbnz	x4, 134 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv+0x34>
 10c:	ldr	w4, [x0, #112]
 110:	cmp	w4, #0x3
 114:	b.ne	150 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv+0x50>  // b.any
 118:	ldr	x8, [x0]
 11c:	mov	w9, #0x4                   	// #4
 120:	str	w9, [x0, #112]
 124:	str	xzr, [x0, #40]
 128:	ldr	x2, [x8, #8]
 12c:	ldr	x30, [sp], #16
 130:	br	x2
 134:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 138:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 13c:	add	x0, x0, #0x0
 140:	add	x2, x2, #0x0
 144:	mov	w1, #0x39                  	// #57
 148:	mov	x3, xzr
 14c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 150:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 154:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 158:	add	x0, x0, #0x0
 15c:	add	x2, x2, #0x0
 160:	mov	w1, #0x3a                  	// #58
 164:	mov	w3, #0x3                   	// #3
 168:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000016c <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv>:
 16c:	ldrb	w8, [x0, #116]
 170:	cbz	w8, 180 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x14>
 174:	ldr	w8, [x0, #112]
 178:	cmp	w8, #0x1
 17c:	b.ne	188 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x1c>  // b.any
 180:	mov	w8, #0x3                   	// #3
 184:	str	w8, [x0, #112]
 188:	ldr	x8, [x0]
 18c:	ldr	x1, [x8, #16]
 190:	br	x1

0000000000000194 <_ZN11__sanitizer17ThreadContextBase10SetStartedEyNS_10ThreadTypeEPv>:
 194:	ldr	x9, [x0]
 198:	mov	w8, #0x2                   	// #2
 19c:	str	w8, [x0, #112]
 1a0:	str	x1, [x0, #32]
 1a4:	str	w2, [x0, #120]
 1a8:	ldr	x2, [x9, #24]
 1ac:	mov	x1, x3
 1b0:	br	x2

00000000000001b4 <_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv>:
 1b4:	ldr	w10, [x0, #8]
 1b8:	and	w8, w3, #0x1
 1bc:	mov	w9, #0x1                   	// #1
 1c0:	str	w9, [x0, #112]
 1c4:	str	x1, [x0, #40]
 1c8:	str	x2, [x0, #16]
 1cc:	strb	w8, [x0, #116]
 1d0:	cbz	w10, 1d8 <_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv+0x24>
 1d4:	str	w4, [x0, #124]
 1d8:	ldr	x8, [x0]
 1dc:	mov	x1, x5
 1e0:	ldr	x2, [x8, #32]
 1e4:	br	x2

00000000000001e8 <_ZN11__sanitizer17ThreadContextBase5ResetEv>:
 1e8:	str	wzr, [x0, #112]
 1ec:	strb	wzr, [x0, #48]
 1f0:	dmb	ish
 1f4:	str	wzr, [x0, #136]
 1f8:	ldr	x8, [x0]
 1fc:	ldr	x1, [x8, #40]
 200:	br	x1

0000000000000204 <_ZN11__sanitizer14ThreadRegistryC1EPFPNS_17ThreadContextBaseEjEjjj>:
 204:	stp	x30, x19, [sp, #-16]!
 208:	mov	x19, x0
 20c:	str	x1, [x0]
 210:	stp	w2, w3, [x0, #8]
 214:	str	w4, [x0, #16]
 218:	add	x0, x0, #0x18
 21c:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
 220:	ldr	w8, [x19, #8]
 224:	adrp	x1, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 228:	movi	v0.2d, #0x0
 22c:	add	x1, x1, #0x0
 230:	lsl	x0, x8, #3
 234:	mov	w2, wzr
 238:	str	wzr, [x19, #112]
 23c:	stur	q0, [x19, #120]
 240:	stur	q0, [x19, #136]
 244:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 248:	movi	v0.2d, #0x0
 24c:	stur	q0, [x19, #168]
 250:	stp	x0, xzr, [x19, #152]
 254:	str	q0, [x19, #192]
 258:	str	xzr, [x19, #184]
 25c:	ldp	x30, x19, [sp], #16
 260:	ret

0000000000000264 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_>:
 264:	stp	x30, x23, [sp, #-48]!
 268:	stp	x22, x21, [sp, #16]
 26c:	stp	x20, x19, [sp, #32]
 270:	add	x20, x0, #0x18
 274:	mov	x21, x0
 278:	mov	x0, x20
 27c:	mov	x19, x3
 280:	mov	x22, x2
 284:	mov	x23, x1
 288:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 28c:	cbz	x23, 298 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x34>
 290:	ldr	w8, [x21, #112]
 294:	str	x8, [x23]
 298:	cbz	x22, 2a4 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x40>
 29c:	ldr	x8, [x21, #144]
 2a0:	str	x8, [x22]
 2a4:	cbz	x19, 2b0 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x4c>
 2a8:	ldr	x8, [x21, #128]
 2ac:	str	x8, [x19]
 2b0:	mov	x0, x20
 2b4:	ldp	x20, x19, [sp, #32]
 2b8:	ldp	x22, x21, [sp, #16]
 2bc:	ldp	x30, x23, [sp], #48
 2c0:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

00000000000002c4 <_ZN11__sanitizer14ThreadRegistry18GetMaxAliveThreadsEv>:
 2c4:	str	x30, [sp, #-32]!
 2c8:	stp	x20, x19, [sp, #16]
 2cc:	add	x20, x0, #0x18
 2d0:	mov	x19, x0
 2d4:	mov	x0, x20
 2d8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 2dc:	ldr	x19, [x19, #136]
 2e0:	mov	x0, x20
 2e4:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 2e8:	mov	x0, x19
 2ec:	ldp	x20, x19, [sp, #16]
 2f0:	ldr	x30, [sp], #32
 2f4:	ret

00000000000002f8 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv>:
 2f8:	stp	x30, x25, [sp, #-64]!
 2fc:	stp	x24, x23, [sp, #16]
 300:	stp	x22, x21, [sp, #32]
 304:	stp	x20, x19, [sp, #48]
 308:	add	x20, x0, #0x18
 30c:	mov	x25, x0
 310:	mov	x0, x20
 314:	mov	x19, x4
 318:	mov	w22, w3
 31c:	mov	w24, w2
 320:	mov	x23, x1
 324:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 328:	ldr	x8, [x25, #184]
 32c:	cbz	x8, 388 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x90>
 330:	ldr	x0, [x25, #192]
 334:	ldr	x9, [x0, #128]
 338:	str	x9, [x25, #192]
 33c:	cbz	x9, 378 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x80>
 340:	sub	x8, x8, #0x1
 344:	str	x8, [x25, #184]
 348:	cbz	x0, 388 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x90>
 34c:	ldr	w21, [x0, #8]
 350:	cmn	w21, #0x1
 354:	b.ne	3b8 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0xc0>  // b.any
 358:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 35c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 360:	add	x0, x0, #0x0
 364:	add	x2, x2, #0x0
 368:	mov	w1, #0x9e                  	// #158
 36c:	mov	w4, #0xffffffff            	// #-1
 370:	mov	x3, x21
 374:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 378:	str	xzr, [x25, #200]
 37c:	sub	x8, x8, #0x1
 380:	str	x8, [x25, #184]
 384:	cbnz	x0, 34c <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x54>
 388:	ldr	w21, [x25, #112]
 38c:	ldr	w2, [x25, #8]
 390:	cmp	w21, w2
 394:	b.cs	488 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x190>  // b.hs, b.nlast
 398:	ldr	x8, [x25]
 39c:	add	w9, w21, #0x1
 3a0:	mov	w0, w21
 3a4:	str	w9, [x25, #112]
 3a8:	blr	x8
 3ac:	ldr	x8, [x25, #152]
 3b0:	str	x0, [x8, x21, lsl #3]
 3b4:	cbz	x0, 4a4 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1ac>
 3b8:	ldr	w4, [x25, #8]
 3bc:	cmp	w21, w4
 3c0:	b.cs	450 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x158>  // b.hs, b.nlast
 3c4:	ldr	w3, [x0, #112]
 3c8:	cbnz	w3, 46c <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x174>
 3cc:	ldp	x8, x9, [x25, #128]
 3d0:	add	x3, x8, #0x1
 3d4:	cmp	x9, x3
 3d8:	str	x3, [x25, #128]
 3dc:	b.cs	3f0 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0xf8>  // b.hs, b.nlast
 3e0:	add	x4, x9, #0x1
 3e4:	cmp	x8, x9
 3e8:	str	x4, [x25, #136]
 3ec:	b.ne	4c4 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1cc>  // b.any
 3f0:	ldr	x8, [x25, #120]
 3f4:	and	w9, w24, #0x1
 3f8:	add	x10, x8, #0x1
 3fc:	str	x10, [x25, #120]
 400:	ldr	w11, [x0, #8]
 404:	mov	w10, #0x1                   	// #1
 408:	str	w10, [x0, #112]
 40c:	str	x23, [x0, #40]
 410:	str	x8, [x0, #16]
 414:	strb	w9, [x0, #116]
 418:	cbz	w11, 420 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x128>
 41c:	str	w22, [x0, #124]
 420:	ldr	x8, [x0]
 424:	mov	x1, x19
 428:	ldr	x8, [x8, #32]
 42c:	blr	x8
 430:	mov	x0, x20
 434:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 438:	mov	w0, w21
 43c:	ldp	x20, x19, [sp, #48]
 440:	ldp	x22, x21, [sp, #32]
 444:	ldp	x24, x23, [sp, #16]
 448:	ldp	x30, x25, [sp], #64
 44c:	ret
 450:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 454:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 458:	add	x0, x0, #0x0
 45c:	add	x2, x2, #0x0
 460:	mov	w1, #0x9f                  	// #159
 464:	mov	x3, x21
 468:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 46c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 470:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 474:	add	x0, x0, #0x0
 478:	add	x2, x2, #0x0
 47c:	mov	w1, #0xa0                  	// #160
 480:	mov	x4, xzr
 484:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 488:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 48c:	ldr	x8, [x8]
 490:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 494:	add	x0, x0, #0x0
 498:	ldr	x1, [x8]
 49c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 4a0:	bl	0 <_ZN11__sanitizer3DieEv>
 4a4:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 4a8:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x2, x2, #0x0
 4b4:	mov	w1, #0x9d                  	// #157
 4b8:	mov	x3, xzr
 4bc:	mov	x4, xzr
 4c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4c4:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 4c8:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x2, x2, #0x0
 4d4:	mov	w1, #0xa4                  	// #164
 4d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000004dc <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv>:
 4dc:	ldr	x9, [x0, #184]
 4e0:	cbz	x9, 504 <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv+0x28>
 4e4:	mov	x8, x0
 4e8:	ldr	x0, [x0, #192]
 4ec:	ldr	x10, [x0, #128]
 4f0:	str	x10, [x8, #192]
 4f4:	cbz	x10, 50c <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv+0x30>
 4f8:	sub	x9, x9, #0x1
 4fc:	str	x9, [x8, #184]
 500:	ret
 504:	mov	x0, xzr
 508:	ret
 50c:	str	xzr, [x8, #200]
 510:	sub	x9, x9, #0x1
 514:	str	x9, [x8, #184]
 518:	ret

000000000000051c <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_>:
 51c:	str	x30, [sp, #-48]!
 520:	stp	x22, x21, [sp, #16]
 524:	stp	x20, x19, [sp, #32]
 528:	mov	x21, x0
 52c:	add	x0, x0, #0x18
 530:	mov	x19, x2
 534:	mov	x20, x1
 538:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 53c:	ldr	w8, [x21, #112]
 540:	cbz	w8, 574 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x58>
 544:	mov	x22, xzr
 548:	b	558 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x3c>
 54c:	add	x22, x22, #0x1
 550:	cmp	x22, w8, uxtw
 554:	b.cs	574 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x58>  // b.hs, b.nlast
 558:	ldr	x9, [x21, #152]
 55c:	ldr	x0, [x9, x22, lsl #3]
 560:	cbz	x0, 54c <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x30>
 564:	mov	x1, x19
 568:	blr	x20
 56c:	ldr	w8, [x21, #112]
 570:	b	54c <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x30>
 574:	ldp	x20, x19, [sp, #32]
 578:	ldp	x22, x21, [sp, #16]
 57c:	ldr	x30, [sp], #48
 580:	ret

0000000000000584 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_>:
 584:	str	x30, [sp, #-64]!
 588:	stp	x24, x23, [sp, #16]
 58c:	stp	x22, x21, [sp, #32]
 590:	stp	x20, x19, [sp, #48]
 594:	add	x19, x0, #0x18
 598:	mov	x22, x0
 59c:	mov	x0, x19
 5a0:	mov	x20, x2
 5a4:	mov	x21, x1
 5a8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 5ac:	ldr	w8, [x22, #112]
 5b0:	cbz	w8, 5ec <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x68>
 5b4:	mov	x24, xzr
 5b8:	b	5c8 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x44>
 5bc:	add	x24, x24, #0x1
 5c0:	cmp	x24, w8, uxtw
 5c4:	b.cs	5ec <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x68>  // b.hs, b.nlast
 5c8:	ldr	x9, [x22, #152]
 5cc:	ldr	x23, [x9, x24, lsl #3]
 5d0:	cbz	x23, 5bc <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x38>
 5d4:	mov	x0, x23
 5d8:	mov	x1, x20
 5dc:	blr	x21
 5e0:	tbnz	w0, #0, 5f4 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x70>
 5e4:	ldr	w8, [x22, #112]
 5e8:	b	5bc <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x38>
 5ec:	mov	w20, #0xffffffff            	// #-1
 5f0:	b	5f8 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x74>
 5f4:	ldr	w20, [x23, #8]
 5f8:	mov	x0, x19
 5fc:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 600:	mov	w0, w20
 604:	ldp	x20, x19, [sp, #48]
 608:	ldp	x22, x21, [sp, #32]
 60c:	ldp	x24, x23, [sp, #16]
 610:	ldr	x30, [sp], #64
 614:	ret

0000000000000618 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_>:
 618:	stp	x30, x23, [sp, #-48]!
 61c:	stp	x22, x21, [sp, #16]
 620:	stp	x20, x19, [sp, #32]
 624:	mov	x21, x0
 628:	add	x0, x0, #0x18
 62c:	mov	x19, x2
 630:	mov	x20, x1
 634:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 638:	ldr	w8, [x21, #112]
 63c:	cbz	w8, 678 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x60>
 640:	mov	x23, xzr
 644:	b	658 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x40>
 648:	ldr	w8, [x21, #112]
 64c:	add	x23, x23, #0x1
 650:	cmp	x23, w8, uxtw
 654:	b.cs	678 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x60>  // b.hs, b.nlast
 658:	ldr	x9, [x21, #152]
 65c:	ldr	x22, [x9, x23, lsl #3]
 660:	cbz	x22, 64c <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x34>
 664:	mov	x0, x22
 668:	mov	x1, x19
 66c:	blr	x20
 670:	tbz	w0, #0, 648 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x30>
 674:	b	67c <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x64>
 678:	mov	x22, xzr
 67c:	mov	x0, x22
 680:	ldp	x20, x19, [sp, #32]
 684:	ldp	x22, x21, [sp, #16]
 688:	ldp	x30, x23, [sp], #48
 68c:	ret

0000000000000690 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy>:
 690:	str	x30, [sp, #-32]!
 694:	stp	x20, x19, [sp, #16]
 698:	mov	x20, x0
 69c:	add	x0, x0, #0x18
 6a0:	mov	x19, x1
 6a4:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 6a8:	ldr	w8, [x20, #112]
 6ac:	cbz	w8, 6f0 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x60>
 6b0:	ldr	x9, [x20, #152]
 6b4:	b	6c4 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x34>
 6b8:	subs	x8, x8, #0x1
 6bc:	add	x9, x9, #0x8
 6c0:	b.eq	6f0 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x60>  // b.none
 6c4:	ldr	x0, [x9]
 6c8:	cbz	x0, 6b8 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x28>
 6cc:	ldr	x10, [x0, #32]
 6d0:	cmp	x10, x19
 6d4:	b.ne	6b8 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x28>  // b.any
 6d8:	ldr	w10, [x0, #112]
 6dc:	tst	w10, #0xfffffffb
 6e0:	b.eq	6b8 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x28>  // b.none
 6e4:	ldp	x20, x19, [sp, #16]
 6e8:	ldr	x30, [sp], #32
 6ec:	ret
 6f0:	mov	x0, xzr
 6f4:	ldp	x20, x19, [sp, #16]
 6f8:	ldr	x30, [sp], #32
 6fc:	ret

0000000000000700 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc>:
 700:	str	x30, [sp, #-48]!
 704:	stp	x22, x21, [sp, #16]
 708:	stp	x20, x19, [sp, #32]
 70c:	add	x19, x0, #0x18
 710:	mov	x21, x0
 714:	mov	x0, x19
 718:	mov	x20, x2
 71c:	mov	w22, w1
 720:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 724:	ldr	w4, [x21, #112]
 728:	mov	w3, w22
 72c:	cmp	w4, w22
 730:	b.ls	77c <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x7c>  // b.plast
 734:	ldr	x8, [x21, #152]
 738:	ldr	x21, [x8, x3, lsl #3]
 73c:	cbz	x21, 794 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x94>
 740:	ldr	w4, [x21, #112]
 744:	cmp	w4, #0x2
 748:	b.ne	7b4 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0xb4>  // b.any
 74c:	mov	x0, x21
 750:	strb	wzr, [x0, #48]!
 754:	cbz	x20, 768 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x68>
 758:	mov	w2, #0x40                  	// #64
 75c:	mov	x1, x20
 760:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 764:	strb	wzr, [x21, #111]
 768:	mov	x0, x19
 76c:	ldp	x20, x19, [sp, #32]
 770:	ldp	x22, x21, [sp, #16]
 774:	ldr	x30, [sp], #48
 778:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 77c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 780:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 784:	add	x0, x0, #0x0
 788:	add	x2, x2, #0x0
 78c:	mov	w1, #0xd8                  	// #216
 790:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 794:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 798:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 79c:	add	x0, x0, #0x0
 7a0:	add	x2, x2, #0x0
 7a4:	mov	w1, #0xda                  	// #218
 7a8:	mov	x3, xzr
 7ac:	mov	x4, xzr
 7b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 7b4:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 7b8:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 7bc:	add	x0, x0, #0x0
 7c0:	add	x2, x2, #0x0
 7c4:	mov	w1, #0xdc                  	// #220
 7c8:	mov	w3, #0x2                   	// #2
 7cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000007d0 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc>:
 7d0:	str	x30, [sp, #-48]!
 7d4:	stp	x22, x21, [sp, #16]
 7d8:	stp	x20, x19, [sp, #32]
 7dc:	add	x19, x0, #0x18
 7e0:	mov	x22, x0
 7e4:	mov	x0, x19
 7e8:	mov	x20, x2
 7ec:	mov	x21, x1
 7f0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 7f4:	ldr	w8, [x22, #112]
 7f8:	cbz	w8, 84c <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>
 7fc:	ldr	x9, [x22, #152]
 800:	mov	x10, xzr
 804:	b	814 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x44>
 808:	add	x10, x10, #0x1
 80c:	cmp	x10, x8
 810:	b.cs	84c <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>  // b.hs, b.nlast
 814:	ldr	x22, [x9, x10, lsl #3]
 818:	cbz	x22, 808 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>
 81c:	ldr	x11, [x22, #40]
 820:	cmp	x11, x21
 824:	b.ne	808 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>  // b.any
 828:	ldr	w11, [x22, #112]
 82c:	cbz	w11, 808 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>
 830:	mov	x0, x22
 834:	strb	wzr, [x0, #48]!
 838:	cbz	x20, 84c <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>
 83c:	mov	w2, #0x40                  	// #64
 840:	mov	x1, x20
 844:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 848:	strb	wzr, [x22, #111]
 84c:	mov	x0, x19
 850:	ldp	x20, x19, [sp, #32]
 854:	ldp	x22, x21, [sp, #16]
 858:	ldr	x30, [sp], #48
 85c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

0000000000000860 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv>:
 860:	str	x30, [sp, #-48]!
 864:	stp	x22, x21, [sp, #16]
 868:	stp	x20, x19, [sp, #32]
 86c:	add	x19, x0, #0x18
 870:	mov	x20, x0
 874:	mov	x0, x19
 878:	mov	x22, x2
 87c:	mov	w21, w1
 880:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 884:	ldr	w4, [x20, #112]
 888:	mov	w3, w21
 88c:	cmp	w4, w21
 890:	b.ls	92c <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xcc>  // b.plast
 894:	ldr	x8, [x20, #152]
 898:	ldr	x21, [x8, x3, lsl #3]
 89c:	cbz	x21, 944 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xe4>
 8a0:	ldr	w8, [x21, #112]
 8a4:	cbz	w8, 8f4 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x94>
 8a8:	ldr	x8, [x21]
 8ac:	mov	x0, x21
 8b0:	mov	x1, x22
 8b4:	ldr	x8, [x8, #48]
 8b8:	blr	x8
 8bc:	ldr	w8, [x21, #112]
 8c0:	cmp	w8, #0x3
 8c4:	b.ne	910 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xb0>  // b.any
 8c8:	ldr	x8, [x21]
 8cc:	mov	w9, #0x4                   	// #4
 8d0:	str	w9, [x21, #112]
 8d4:	str	xzr, [x21, #40]
 8d8:	ldr	x8, [x8]
 8dc:	mov	x0, x21
 8e0:	blr	x8
 8e4:	mov	x0, x20
 8e8:	mov	x1, x21
 8ec:	bl	964 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE>
 8f0:	b	918 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xb8>
 8f4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 8f8:	ldr	x8, [x8]
 8fc:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 900:	add	x0, x0, #0x0
 904:	ldr	x1, [x8]
 908:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 90c:	b	918 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xb8>
 910:	mov	w8, #0x1                   	// #1
 914:	strb	w8, [x21, #116]
 918:	mov	x0, x19
 91c:	ldp	x20, x19, [sp, #32]
 920:	ldp	x22, x21, [sp, #16]
 924:	ldr	x30, [sp], #48
 928:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 92c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 930:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 934:	add	x0, x0, #0x0
 938:	add	x2, x2, #0x0
 93c:	mov	w1, #0xee                  	// #238
 940:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 944:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 948:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 94c:	add	x0, x0, #0x0
 950:	add	x2, x2, #0x0
 954:	mov	w1, #0xf0                  	// #240
 958:	mov	x3, xzr
 95c:	mov	x4, xzr
 960:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000964 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE>:
 964:	str	x30, [sp, #-32]!
 968:	stp	x20, x19, [sp, #16]
 96c:	ldr	w8, [x1, #8]
 970:	cbz	w8, 9a4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x40>
 974:	ldr	x8, [x0, #160]
 978:	mov	x19, x0
 97c:	str	xzr, [x1, #128]
 980:	cbz	x8, 9b0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x4c>
 984:	ldr	x9, [x19, #176]
 988:	add	x8, x8, #0x1
 98c:	str	x1, [x9, #128]
 990:	str	x1, [x19, #176]
 994:	ldr	w9, [x19, #12]
 998:	str	x8, [x19, #160]
 99c:	cmp	x8, x9
 9a0:	b.hi	9c8 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x64>  // b.pmore
 9a4:	ldp	x20, x19, [sp, #16]
 9a8:	ldr	x30, [sp], #32
 9ac:	ret
 9b0:	stp	x1, x1, [x19, #168]
 9b4:	mov	w8, #0x1                   	// #1
 9b8:	ldr	w9, [x19, #12]
 9bc:	str	x8, [x19, #160]
 9c0:	cmp	x8, x9
 9c4:	b.ls	9a4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x40>  // b.plast
 9c8:	ldr	x20, [x19, #168]
 9cc:	ldr	x9, [x20, #128]
 9d0:	str	x9, [x19, #168]
 9d4:	cbnz	x9, 9dc <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x78>
 9d8:	str	xzr, [x19, #176]
 9dc:	sub	x8, x8, #0x1
 9e0:	str	x8, [x19, #160]
 9e4:	ldr	w3, [x20, #112]
 9e8:	cmp	w3, #0x4
 9ec:	b.ne	a70 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x10c>  // b.any
 9f0:	str	wzr, [x20, #112]
 9f4:	strb	wzr, [x20, #48]
 9f8:	dmb	ish
 9fc:	str	wzr, [x20, #136]
 a00:	ldr	x8, [x20]
 a04:	mov	x0, x20
 a08:	ldr	x8, [x8, #40]
 a0c:	blr	x8
 a10:	ldr	w8, [x20, #24]
 a14:	add	w8, w8, #0x1
 a18:	str	w8, [x20, #24]
 a1c:	ldr	w9, [x19, #16]
 a20:	sub	w9, w9, #0x1
 a24:	cmp	w9, w8
 a28:	b.cc	9a4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x40>  // b.lo, b.ul, b.last
 a2c:	ldr	x8, [x19, #184]
 a30:	str	xzr, [x20, #128]
 a34:	cbz	x8, a58 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xf4>
 a38:	ldr	x9, [x19, #200]
 a3c:	add	x8, x8, #0x1
 a40:	str	x20, [x9, #128]
 a44:	str	x20, [x19, #200]
 a48:	str	x8, [x19, #184]
 a4c:	ldp	x20, x19, [sp, #16]
 a50:	ldr	x30, [sp], #32
 a54:	ret
 a58:	stp	x20, x20, [x19, #192]
 a5c:	mov	w8, #0x1                   	// #1
 a60:	str	x8, [x19, #184]
 a64:	ldp	x20, x19, [sp, #16]
 a68:	ldr	x30, [sp], #32
 a6c:	ret
 a70:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 a74:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 a78:	add	x0, x0, #0x0
 a7c:	add	x2, x2, #0x0
 a80:	mov	w1, #0x144                 	// #324
 a84:	mov	w4, #0x4                   	// #4
 a88:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000a8c <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv>:
 a8c:	str	x30, [sp, #-64]!
 a90:	stp	x24, x23, [sp, #16]
 a94:	stp	x22, x21, [sp, #32]
 a98:	stp	x20, x19, [sp, #48]
 a9c:	add	x19, x0, #0x18
 aa0:	mov	x20, x0
 aa4:	mov	x0, x19
 aa8:	mov	x21, x2
 aac:	mov	w23, w1
 ab0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 ab4:	ldr	w8, [x20, #112]
 ab8:	mov	w22, w23
 abc:	cmp	w8, w23
 ac0:	b.ls	b04 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x78>  // b.plast
 ac4:	ldr	x8, [x20, #152]
 ac8:	ldr	x24, [x8, x22, lsl #3]
 acc:	cbz	x24, b98 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x10c>
 ad0:	ldr	w8, [x24, #112]
 ad4:	cbz	w8, b24 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x98>
 ad8:	ldr	w8, [x24, #136]
 adc:	dmb	ish
 ae0:	cbnz	w8, b40 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xb4>
 ae4:	mov	x0, x19
 ae8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 aec:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 af0:	mov	x0, x19
 af4:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 af8:	ldr	w8, [x20, #112]
 afc:	cmp	w8, w23
 b00:	b.hi	ac4 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x38>  // b.pmore
 b04:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 b08:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 b0c:	mov	w4, w8
 b10:	add	x0, x0, #0x0
 b14:	add	x2, x2, #0x0
 b18:	mov	w1, #0x103                 	// #259
 b1c:	mov	x3, x22
 b20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 b24:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 b28:	ldr	x8, [x8]
 b2c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 b30:	add	x0, x0, #0x0
 b34:	ldr	x1, [x8]
 b38:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 b3c:	b	b80 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xf4>
 b40:	ldrb	w4, [x24, #116]
 b44:	cbnz	x4, bb8 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x12c>
 b48:	ldr	w4, [x24, #112]
 b4c:	cmp	w4, #0x3
 b50:	b.ne	bd4 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x148>  // b.any
 b54:	ldr	x8, [x24]
 b58:	mov	w9, #0x4                   	// #4
 b5c:	str	w9, [x24, #112]
 b60:	str	xzr, [x24, #40]
 b64:	ldr	x8, [x8, #8]
 b68:	mov	x0, x24
 b6c:	mov	x1, x21
 b70:	blr	x8
 b74:	mov	x0, x20
 b78:	mov	x1, x24
 b7c:	bl	964 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE>
 b80:	mov	x0, x19
 b84:	ldp	x20, x19, [sp, #48]
 b88:	ldp	x22, x21, [sp, #32]
 b8c:	ldp	x24, x23, [sp, #16]
 b90:	ldr	x30, [sp], #64
 b94:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 b98:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 b9c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 ba0:	add	x0, x0, #0x0
 ba4:	add	x2, x2, #0x0
 ba8:	mov	w1, #0x105                 	// #261
 bac:	mov	x3, xzr
 bb0:	mov	x4, xzr
 bb4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 bb8:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 bbc:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 bc0:	add	x0, x0, #0x0
 bc4:	add	x2, x2, #0x0
 bc8:	mov	w1, #0x39                  	// #57
 bcc:	mov	x3, xzr
 bd0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 bd4:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 bd8:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 bdc:	add	x0, x0, #0x0
 be0:	add	x2, x2, #0x0
 be4:	mov	w1, #0x3a                  	// #58
 be8:	mov	w3, #0x3                   	// #3
 bec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000bf0 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj>:
 bf0:	stp	x30, x21, [sp, #-32]!
 bf4:	stp	x20, x19, [sp, #16]
 bf8:	add	x19, x0, #0x18
 bfc:	mov	x20, x0
 c00:	mov	x0, x19
 c04:	mov	w21, w1
 c08:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 c0c:	ldr	x8, [x20, #128]
 c10:	cbz	x8, cf4 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x104>
 c14:	ldr	w4, [x20, #112]
 c18:	sub	x8, x8, #0x1
 c1c:	mov	w3, w21
 c20:	str	x8, [x20, #128]
 c24:	cmp	w4, w21
 c28:	b.ls	d0c <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x11c>  // b.plast
 c2c:	ldr	x8, [x20, #152]
 c30:	ldr	x21, [x8, x3, lsl #3]
 c34:	cbz	x21, d24 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x134>
 c38:	ldr	w3, [x21, #112]
 c3c:	cmp	w3, #0x2
 c40:	b.ne	c64 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x74>  // b.any
 c44:	ldr	x8, [x20, #144]
 c48:	cbz	x8, d70 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x180>
 c4c:	ldrb	w9, [x21, #116]
 c50:	sub	x8, x8, #0x1
 c54:	str	x8, [x20, #144]
 c58:	cbz	w9, cd8 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0xe8>
 c5c:	ldr	x8, [x21]
 c60:	b	c78 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x88>
 c64:	cmp	w3, #0x1
 c68:	b.ne	d3c <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x14c>  // b.any
 c6c:	ldr	x8, [x21]
 c70:	mov	w9, #0x3                   	// #3
 c74:	str	w9, [x21, #112]
 c78:	ldr	x8, [x8, #16]
 c7c:	mov	x0, x21
 c80:	blr	x8
 c84:	ldr	w8, [x21, #112]
 c88:	orr	w8, w8, #0x1
 c8c:	cmp	w8, #0x3
 c90:	b.ne	d58 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x168>  // b.any
 c94:	ldr	x8, [x21]
 c98:	mov	w9, #0x4                   	// #4
 c9c:	str	w9, [x21, #112]
 ca0:	str	xzr, [x21, #40]
 ca4:	ldr	x8, [x8]
 ca8:	mov	x0, x21
 cac:	blr	x8
 cb0:	mov	x0, x20
 cb4:	mov	x1, x21
 cb8:	bl	964 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE>
 cbc:	mov	w8, #0x1                   	// #1
 cc0:	dmb	ish
 cc4:	str	w8, [x21, #136]
 cc8:	mov	x0, x19
 ccc:	ldp	x20, x19, [sp, #16]
 cd0:	ldp	x30, x21, [sp], #32
 cd4:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 cd8:	ldr	x8, [x21]
 cdc:	mov	w9, #0x3                   	// #3
 ce0:	str	w9, [x21, #112]
 ce4:	mov	x0, x21
 ce8:	ldr	x8, [x8, #16]
 cec:	blr	x8
 cf0:	b	cbc <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0xcc>
 cf4:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 cf8:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 cfc:	add	x0, x0, #0x0
 d00:	add	x2, x2, #0x0
 d04:	mov	w1, #0x11b                 	// #283
 d08:	b	d84 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x194>
 d0c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d10:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d14:	add	x0, x0, #0x0
 d18:	add	x2, x2, #0x0
 d1c:	mov	w1, #0x11d                 	// #285
 d20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 d24:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d28:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d2c:	add	x0, x0, #0x0
 d30:	add	x2, x2, #0x0
 d34:	mov	w1, #0x11f                 	// #287
 d38:	b	d84 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x194>
 d3c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d40:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d44:	add	x0, x0, #0x0
 d48:	add	x2, x2, #0x0
 d4c:	mov	w1, #0x126                 	// #294
 d50:	mov	w4, #0x1                   	// #1
 d54:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 d58:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d5c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d60:	add	x0, x0, #0x0
 d64:	add	x2, x2, #0x0
 d68:	mov	w1, #0x29                  	// #41
 d6c:	b	d84 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x194>
 d70:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d74:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 d78:	add	x0, x0, #0x0
 d7c:	add	x2, x2, #0x0
 d80:	mov	w1, #0x122                 	// #290
 d84:	mov	x3, xzr
 d88:	mov	x4, xzr
 d8c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d90 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv>:
 d90:	str	x30, [sp, #-64]!
 d94:	stp	x24, x23, [sp, #16]
 d98:	stp	x22, x21, [sp, #32]
 d9c:	stp	x20, x19, [sp, #48]
 da0:	add	x20, x0, #0x18
 da4:	mov	x23, x0
 da8:	mov	x0, x20
 dac:	mov	x19, x4
 db0:	mov	w21, w3
 db4:	mov	x22, x2
 db8:	mov	w24, w1
 dbc:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 dc0:	ldr	x8, [x23, #144]
 dc4:	ldr	w4, [x23, #112]
 dc8:	mov	w3, w24
 dcc:	add	x8, x8, #0x1
 dd0:	cmp	w4, w24
 dd4:	str	x8, [x23, #144]
 dd8:	b.ls	e2c <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0x9c>  // b.plast
 ddc:	ldr	x8, [x23, #152]
 de0:	ldr	x0, [x8, x3, lsl #3]
 de4:	cbz	x0, e44 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xb4>
 de8:	ldr	w4, [x0, #112]
 dec:	cmp	w4, #0x1
 df0:	b.ne	e64 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xd4>  // b.any
 df4:	ldr	x9, [x0]
 df8:	mov	w8, #0x2                   	// #2
 dfc:	str	w8, [x0, #112]
 e00:	str	x22, [x0, #32]
 e04:	str	w21, [x0, #120]
 e08:	ldr	x8, [x9, #24]
 e0c:	mov	x1, x19
 e10:	blr	x8
 e14:	mov	x0, x20
 e18:	ldp	x20, x19, [sp, #48]
 e1c:	ldp	x22, x21, [sp, #32]
 e20:	ldp	x24, x23, [sp, #16]
 e24:	ldr	x30, [sp], #64
 e28:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 e2c:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e30:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e34:	add	x0, x0, #0x0
 e38:	add	x2, x2, #0x0
 e3c:	mov	w1, #0x135                 	// #309
 e40:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 e44:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e48:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e4c:	add	x0, x0, #0x0
 e50:	add	x2, x2, #0x0
 e54:	mov	w1, #0x137                 	// #311
 e58:	mov	x3, xzr
 e5c:	mov	x4, xzr
 e60:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 e64:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e68:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 e6c:	add	x0, x0, #0x0
 e70:	add	x2, x2, #0x0
 e74:	mov	w1, #0x138                 	// #312
 e78:	mov	w3, #0x1                   	// #1
 e7c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000e80 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm>:
 e80:	str	x30, [sp, #-48]!
 e84:	stp	x22, x21, [sp, #16]
 e88:	stp	x20, x19, [sp, #32]
 e8c:	add	x20, x0, #0x18
 e90:	mov	x21, x0
 e94:	mov	x0, x20
 e98:	mov	x19, x2
 e9c:	mov	w22, w1
 ea0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 ea4:	ldr	w4, [x21, #112]
 ea8:	mov	w3, w22
 eac:	cmp	w4, w22
 eb0:	b.ls	ef0 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0x70>  // b.plast
 eb4:	ldr	x8, [x21, #152]
 eb8:	ldr	x8, [x8, x3, lsl #3]
 ebc:	cbz	x8, f08 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0x88>
 ec0:	ldr	w3, [x8, #112]
 ec4:	cmp	w3, #0x4
 ec8:	b.eq	f28 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xa8>  // b.none
 ecc:	cbz	w3, f44 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xc4>
 ed0:	ldr	x3, [x8, #40]
 ed4:	cbnz	x3, f60 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xe0>
 ed8:	str	x19, [x8, #40]
 edc:	mov	x0, x20
 ee0:	ldp	x20, x19, [sp, #32]
 ee4:	ldp	x22, x21, [sp, #16]
 ee8:	ldr	x30, [sp], #48
 eec:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 ef0:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 ef4:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 ef8:	add	x0, x0, #0x0
 efc:	add	x2, x2, #0x0
 f00:	mov	w1, #0x156                 	// #342
 f04:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 f08:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f0c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f10:	add	x0, x0, #0x0
 f14:	add	x2, x2, #0x0
 f18:	mov	w1, #0x158                 	// #344
 f1c:	mov	x3, xzr
 f20:	mov	x4, xzr
 f24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 f28:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f2c:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f30:	add	x0, x0, #0x0
 f34:	add	x2, x2, #0x0
 f38:	mov	w1, #0x15a                 	// #346
 f3c:	mov	w4, #0x4                   	// #4
 f40:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 f44:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f48:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f4c:	add	x0, x0, #0x0
 f50:	add	x2, x2, #0x0
 f54:	mov	w1, #0x159                 	// #345
 f58:	mov	x4, xzr
 f5c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 f60:	adrp	x0, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f64:	adrp	x2, 0 <_ZN11__sanitizer17ThreadContextBaseC1Ej>
 f68:	add	x0, x0, #0x0
 f6c:	add	x2, x2, #0x0
 f70:	mov	w1, #0x15b                 	// #347
 f74:	mov	x4, xzr
 f78:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase6OnDeadEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase6OnDeadEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase8OnJoinedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase8OnJoinedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase10OnFinishedEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase10OnFinishedEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase9OnStartedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase9OnStartedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase9OnCreatedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase9OnCreatedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase7OnResetEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase7OnResetEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase10OnDetachedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase10OnDetachedEPv>:
   0:	ret

sanitizer_type_traits.cpp.o:     file format elf64-littleaarch64


sanitizer_win.cpp.o:     file format elf64-littleaarch64


sanitizer_termination.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer14AddDieCallbackEPFvvE>:
   0:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
   4:	add	x8, x8, #0x0
   8:	ldr	x9, [x8]
   c:	cbz	x9, 58 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x58>
  10:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  14:	add	x8, x8, #0x0
  18:	ldr	x9, [x8]
  1c:	cbz	x9, 58 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x58>
  20:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  24:	add	x8, x8, #0x0
  28:	ldr	x9, [x8]
  2c:	cbz	x9, 58 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x58>
  30:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  34:	add	x8, x8, #0x0
  38:	ldr	x9, [x8]
  3c:	cbz	x9, 58 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x58>
  40:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  44:	add	x8, x8, #0x0
  48:	ldr	x9, [x8]
  4c:	cbz	x9, 58 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x58>
  50:	mov	w0, wzr
  54:	ret
  58:	str	x0, [x8]
  5c:	mov	w0, #0x1                   	// #1
  60:	ret

0000000000000064 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>:
  64:	stp	x30, x19, [sp, #-16]!
  68:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  6c:	add	x8, x8, #0x0
  70:	ldr	x9, [x8]
  74:	cmp	x9, x0
  78:	b.eq	d8 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x74>  // b.none
  7c:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  80:	add	x8, x8, #0x0
  84:	ldr	x9, [x8]
  88:	cmp	x9, x0
  8c:	b.eq	e0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x7c>  // b.none
  90:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  94:	add	x8, x8, #0x0
  98:	ldr	x9, [x8]
  9c:	cmp	x9, x0
  a0:	b.eq	e8 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x84>  // b.none
  a4:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  a8:	add	x8, x8, #0x0
  ac:	ldr	x9, [x8]
  b0:	cmp	x9, x0
  b4:	b.eq	f0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x8c>  // b.none
  b8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  bc:	add	x8, x8, #0x0
  c0:	ldr	x9, [x8]
  c4:	cmp	x9, x0
  c8:	b.eq	f8 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x94>  // b.none
  cc:	mov	w0, wzr
  d0:	ldp	x30, x19, [sp], #16
  d4:	ret
  d8:	mov	w9, wzr
  dc:	b	fc <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x98>
  e0:	mov	w9, #0x1                   	// #1
  e4:	b	fc <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x98>
  e8:	mov	w9, #0x2                   	// #2
  ec:	b	fc <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x98>
  f0:	mov	w9, #0x3                   	// #3
  f4:	b	fc <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x98>
  f8:	mov	w9, #0x4                   	// #4
  fc:	adrp	x19, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 100:	add	w10, w9, #0x1
 104:	add	x19, x19, #0x0
 108:	mov	w11, #0x4                   	// #4
 10c:	add	x10, x19, w10, uxtw #3
 110:	sub	w9, w11, w9
 114:	add	x1, x10, #0x18
 118:	sbfiz	x2, x9, #3, #32
 11c:	mov	x0, x8
 120:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 124:	str	xzr, [x19, #56]
 128:	mov	w0, #0x1                   	// #1
 12c:	ldp	x30, x19, [sp], #16
 130:	ret

0000000000000134 <_ZN11__sanitizer18SetUserDieCallbackEPFvvE>:
 134:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 138:	str	x0, [x8]
 13c:	ret

0000000000000140 <_ZN11__sanitizer3DieEv>:
 140:	str	x30, [sp, #-16]!
 144:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 148:	ldr	x8, [x8]
 14c:	cbnz	x8, 1a4 <_ZN11__sanitizer3DieEv+0x64>
 150:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 154:	ldr	x8, [x8]
 158:	cbnz	x8, 1b4 <_ZN11__sanitizer3DieEv+0x74>
 15c:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 160:	ldr	x8, [x8]
 164:	cbnz	x8, 1c4 <_ZN11__sanitizer3DieEv+0x84>
 168:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 16c:	ldr	x8, [x8]
 170:	cbnz	x8, 1d4 <_ZN11__sanitizer3DieEv+0x94>
 174:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 178:	ldr	x8, [x8]
 17c:	cbnz	x8, 1e4 <_ZN11__sanitizer3DieEv+0xa4>
 180:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 184:	ldr	x8, [x8]
 188:	cbnz	x8, 1f4 <_ZN11__sanitizer3DieEv+0xb4>
 18c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 190:	ldr	x8, [x8]
 194:	ldrb	w9, [x8, #228]
 198:	cbnz	w9, 208 <_ZN11__sanitizer3DieEv+0xc8>
 19c:	ldr	w0, [x8, #224]
 1a0:	bl	0 <_ZN11__sanitizer14internal__exitEi>
 1a4:	blr	x8
 1a8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1ac:	ldr	x8, [x8]
 1b0:	cbz	x8, 15c <_ZN11__sanitizer3DieEv+0x1c>
 1b4:	blr	x8
 1b8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1bc:	ldr	x8, [x8]
 1c0:	cbz	x8, 168 <_ZN11__sanitizer3DieEv+0x28>
 1c4:	blr	x8
 1c8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1cc:	ldr	x8, [x8]
 1d0:	cbz	x8, 174 <_ZN11__sanitizer3DieEv+0x34>
 1d4:	blr	x8
 1d8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1dc:	ldr	x8, [x8]
 1e0:	cbz	x8, 180 <_ZN11__sanitizer3DieEv+0x40>
 1e4:	blr	x8
 1e8:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1ec:	ldr	x8, [x8]
 1f0:	cbz	x8, 18c <_ZN11__sanitizer3DieEv+0x4c>
 1f4:	blr	x8
 1f8:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 1fc:	ldr	x8, [x8]
 200:	ldrb	w9, [x8, #228]
 204:	cbz	w9, 19c <_ZN11__sanitizer3DieEv+0x5c>
 208:	bl	0 <_ZN11__sanitizer5AbortEv>

000000000000020c <_ZN11__sanitizer22SetCheckFailedCallbackEPFvPKciS1_yyE>:
 20c:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 210:	str	x0, [x8]
 214:	ret

0000000000000218 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>:
 218:	stp	x30, x23, [sp, #-48]!
 21c:	stp	x22, x21, [sp, #16]
 220:	stp	x20, x19, [sp, #32]
 224:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 228:	mov	x19, x4
 22c:	mov	x20, x3
 230:	mov	x21, x2
 234:	mov	w22, w1
 238:	mov	x23, x0
 23c:	add	x8, x8, #0x0
 240:	ldaxr	w9, [x8]
 244:	add	w10, w9, #0x1
 248:	stlxr	w11, w10, [x8]
 24c:	cbnz	w11, 240 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x28>
 250:	cmp	w9, #0xb
 254:	b.cc	264 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x4c>  // b.lo, b.ul, b.last
 258:	mov	w0, #0x2                   	// #2
 25c:	bl	0 <_ZN11__sanitizer15SleepForSecondsEi>
 260:	brk	#0x1
 264:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 268:	ldr	x8, [x8]
 26c:	cbz	x8, 288 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x70>
 270:	mov	x0, x23
 274:	mov	w1, w22
 278:	mov	x2, x21
 27c:	mov	x3, x20
 280:	mov	x4, x19
 284:	blr	x8
 288:	adrp	x0, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 28c:	add	x0, x0, #0x0
 290:	mov	x1, x23
 294:	mov	w2, w22
 298:	mov	x3, x21
 29c:	mov	x4, x20
 2a0:	mov	x5, x19
 2a4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2a8:	bl	140 <_ZN11__sanitizer3DieEv>

00000000000002ac <__sanitizer_set_death_callback>:
 2ac:	adrp	x8, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 2b0:	str	x0, [x8]
 2b4:	ret

sanitizer_common_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
   8:	ldr	x3, [x8]
   c:	cbnz	x3, 1c <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE+0x1c>
  10:	str	x0, [x8]
  14:	ldr	x30, [sp], #16
  18:	ret
  1c:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  20:	adrp	x2, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  24:	add	x0, x0, #0x0
  28:	add	x2, x2, #0x0
  2c:	mov	w1, #0x17                  	// #23
  30:	mov	x4, xzr
  34:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000038 <_ZN11__sanitizer18StackDepotGetStatsEv>:
  38:	mov	x0, xzr
  3c:	ret

0000000000000040 <_ZN11__sanitizer16BackgroundThreadEPv>:
  40:	sub	sp, sp, #0x80
  44:	stp	d9, d8, [sp, #16]
  48:	stp	x29, x30, [sp, #32]
  4c:	stp	x28, x27, [sp, #48]
  50:	stp	x26, x25, [sp, #64]
  54:	stp	x24, x23, [sp, #80]
  58:	stp	x22, x21, [sp, #96]
  5c:	stp	x20, x19, [sp, #112]
  60:	adrp	x9, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  64:	ldr	x9, [x9]
  68:	ldp	x8, x19, [x9, #136]
  6c:	ldrb	w26, [x9, #160]
  70:	cbnz	x8, 1ec <_ZN11__sanitizer16BackgroundThreadEPv+0x1ac>
  74:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  78:	adrp	x27, 0 <_ZN11__sanitizer17current_verbosityE>
  7c:	adrp	x23, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  80:	ldr	x27, [x27]
  84:	ldr	x23, [x23]
  88:	ldr	d8, [x8]
  8c:	mov	x22, #0xcccccccccccccccc    	// #-3689348814741910324
  90:	mov	w20, wzr
  94:	mov	x24, xzr
  98:	mov	x29, xzr
  9c:	mov	x28, xzr
  a0:	mov	w21, #0xb                   	// #11
  a4:	movk	x22, #0xcccd
  a8:	b	c8 <_ZN11__sanitizer16BackgroundThreadEPv+0x88>
  ac:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  b0:	add	x0, x0, #0x0
  b4:	mov	x1, x24
  b8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  bc:	mov	w0, #0x5a                  	// #90
  c0:	mov	w1, #0x14                  	// #20
  c4:	bl	0 <__sanitizer_print_memory_profile>
  c8:	ucvtf	d0, x24
  cc:	fmul	d9, d0, d8
  d0:	mov	w0, #0x64                  	// #100
  d4:	bl	0 <_ZN11__sanitizer14SleepForMillisEi>
  d8:	bl	0 <_ZN11__sanitizer6GetRSSEv>
  dc:	ldr	w8, [x27]
  e0:	lsr	x24, x0, #20
  e4:	cbz	w8, 158 <_ZN11__sanitizer16BackgroundThreadEPv+0x118>
  e8:	mul	x8, x28, x21
  ec:	umulh	x8, x8, x22
  f0:	cmp	x24, x8, lsr #3
  f4:	b.hi	104 <_ZN11__sanitizer16BackgroundThreadEPv+0xc4>  // b.pmore
  f8:	bl	38 <_ZN11__sanitizer18StackDepotGetStatsEv>
  fc:	cbnz	x0, 124 <_ZN11__sanitizer16BackgroundThreadEPv+0xe4>
 100:	b	158 <_ZN11__sanitizer16BackgroundThreadEPv+0x118>
 104:	ldr	x1, [x23]
 108:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 10c:	add	x0, x0, #0x0
 110:	mov	x2, x24
 114:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 118:	mov	x28, x24
 11c:	bl	38 <_ZN11__sanitizer18StackDepotGetStatsEv>
 120:	cbz	x0, 158 <_ZN11__sanitizer16BackgroundThreadEPv+0x118>
 124:	ldr	x8, [x0, #8]
 128:	mul	x9, x29, x21
 12c:	umulh	x9, x9, x22
 130:	mov	x25, x0
 134:	cmp	x8, x9, lsr #3
 138:	b.ls	158 <_ZN11__sanitizer16BackgroundThreadEPv+0x118>  // b.plast
 13c:	ldr	x1, [x23]
 140:	ldr	x2, [x25]
 144:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 148:	lsr	x3, x8, #20
 14c:	add	x0, x0, #0x0
 150:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 154:	ldr	x29, [x25, #8]
 158:	cbz	x19, 1cc <_ZN11__sanitizer16BackgroundThreadEPv+0x18c>
 15c:	cmp	x19, x24
 160:	cset	w8, cs  // cs = hs, nlast
 164:	orr	w8, w20, w8
 168:	tbz	w8, #0, 19c <_ZN11__sanitizer16BackgroundThreadEPv+0x15c>
 16c:	cmp	x19, x24
 170:	b.cc	1cc <_ZN11__sanitizer16BackgroundThreadEPv+0x18c>  // b.lo, b.ul, b.last
 174:	eor	w8, w20, #0x1
 178:	tbnz	w8, #0, 1cc <_ZN11__sanitizer16BackgroundThreadEPv+0x18c>
 17c:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 180:	ldr	x8, [x8]
 184:	cbz	x8, 190 <_ZN11__sanitizer16BackgroundThreadEPv+0x150>
 188:	mov	w0, wzr
 18c:	blr	x8
 190:	mov	w20, wzr
 194:	cbnz	w26, 1d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x190>
 198:	b	d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x90>
 19c:	ldr	x1, [x23]
 1a0:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1a4:	add	x0, x0, #0x0
 1a8:	mov	x2, x19
 1ac:	mov	x3, x24
 1b0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1b4:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1b8:	ldr	x8, [x8]
 1bc:	cbz	x8, 1e0 <_ZN11__sanitizer16BackgroundThreadEPv+0x1a0>
 1c0:	mov	w0, #0x1                   	// #1
 1c4:	mov	w20, #0x1                   	// #1
 1c8:	blr	x8
 1cc:	cbz	w26, d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x90>
 1d0:	ucvtf	d0, x24
 1d4:	fcmp	d9, d0
 1d8:	b.pl	d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x90>  // b.nfrst
 1dc:	b	ac <_ZN11__sanitizer16BackgroundThreadEPv+0x6c>
 1e0:	mov	w20, #0x1                   	// #1
 1e4:	cbnz	w26, 1d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x190>
 1e8:	b	d0 <_ZN11__sanitizer16BackgroundThreadEPv+0x90>
 1ec:	str	x8, [sp, #8]
 1f0:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1f4:	adrp	x27, 0 <_ZN11__sanitizer17current_verbosityE>
 1f8:	adrp	x22, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1fc:	ldr	x27, [x27]
 200:	ldr	x22, [x22]
 204:	ldr	d8, [x8]
 208:	mov	x20, #0xcccccccccccccccc    	// #-3689348814741910324
 20c:	mov	w23, wzr
 210:	mov	x21, xzr
 214:	mov	x29, xzr
 218:	mov	x28, xzr
 21c:	mov	w24, #0xb                   	// #11
 220:	movk	x20, #0xcccd
 224:	ucvtf	d0, x21
 228:	fmul	d9, d0, d8
 22c:	mov	w0, #0x64                  	// #100
 230:	bl	0 <_ZN11__sanitizer14SleepForMillisEi>
 234:	bl	0 <_ZN11__sanitizer6GetRSSEv>
 238:	ldr	w8, [x27]
 23c:	lsr	x21, x0, #20
 240:	cbz	w8, 2a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x268>
 244:	mul	x8, x28, x24
 248:	umulh	x8, x8, x20
 24c:	cmp	x21, x8, lsr #3
 250:	b.ls	26c <_ZN11__sanitizer16BackgroundThreadEPv+0x22c>  // b.plast
 254:	ldr	x1, [x22]
 258:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 25c:	add	x0, x0, #0x0
 260:	mov	x2, x21
 264:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 268:	mov	x28, x21
 26c:	bl	38 <_ZN11__sanitizer18StackDepotGetStatsEv>
 270:	cbz	x0, 2a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x268>
 274:	ldr	x8, [x0, #8]
 278:	mul	x9, x29, x24
 27c:	umulh	x9, x9, x20
 280:	mov	x25, x0
 284:	cmp	x8, x9, lsr #3
 288:	b.ls	2a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x268>  // b.plast
 28c:	ldr	x1, [x22]
 290:	ldr	x2, [x25]
 294:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 298:	lsr	x3, x8, #20
 29c:	add	x0, x0, #0x0
 2a0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 2a4:	ldr	x29, [x25, #8]
 2a8:	ldr	x8, [sp, #8]
 2ac:	cmp	x8, x21
 2b0:	b.cc	35c <_ZN11__sanitizer16BackgroundThreadEPv+0x31c>  // b.lo, b.ul, b.last
 2b4:	cbz	x19, 32c <_ZN11__sanitizer16BackgroundThreadEPv+0x2ec>
 2b8:	cmp	x19, x21
 2bc:	cset	w8, cs  // cs = hs, nlast
 2c0:	orr	w8, w23, w8
 2c4:	tbz	w8, #0, 2f4 <_ZN11__sanitizer16BackgroundThreadEPv+0x2b4>
 2c8:	cmp	x19, x21
 2cc:	b.cc	32c <_ZN11__sanitizer16BackgroundThreadEPv+0x2ec>  // b.lo, b.ul, b.last
 2d0:	eor	w8, w23, #0x1
 2d4:	tbnz	w8, #0, 32c <_ZN11__sanitizer16BackgroundThreadEPv+0x2ec>
 2d8:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 2dc:	ldr	x8, [x8]
 2e0:	cbz	x8, 2ec <_ZN11__sanitizer16BackgroundThreadEPv+0x2ac>
 2e4:	mov	w0, wzr
 2e8:	blr	x8
 2ec:	mov	w23, wzr
 2f0:	b	32c <_ZN11__sanitizer16BackgroundThreadEPv+0x2ec>
 2f4:	ldr	x1, [x22]
 2f8:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 2fc:	add	x0, x0, #0x0
 300:	mov	x2, x19
 304:	mov	x3, x21
 308:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 30c:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 310:	ldr	x8, [x8]
 314:	cbnz	x8, 320 <_ZN11__sanitizer16BackgroundThreadEPv+0x2e0>
 318:	mov	w23, #0x1                   	// #1
 31c:	b	32c <_ZN11__sanitizer16BackgroundThreadEPv+0x2ec>
 320:	mov	w0, #0x1                   	// #1
 324:	mov	w23, #0x1                   	// #1
 328:	blr	x8
 32c:	cbz	w26, 22c <_ZN11__sanitizer16BackgroundThreadEPv+0x1ec>
 330:	ucvtf	d0, x21
 334:	fcmp	d9, d0
 338:	b.pl	22c <_ZN11__sanitizer16BackgroundThreadEPv+0x1ec>  // b.nfrst
 33c:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 340:	add	x0, x0, #0x0
 344:	mov	x1, x21
 348:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 34c:	mov	w0, #0x5a                  	// #90
 350:	mov	w1, #0x14                  	// #20
 354:	bl	0 <__sanitizer_print_memory_profile>
 358:	b	224 <_ZN11__sanitizer16BackgroundThreadEPv+0x1e4>
 35c:	ldr	x1, [x22]
 360:	ldr	x2, [sp, #8]
 364:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 368:	add	x0, x0, #0x0
 36c:	mov	x3, x21
 370:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 374:	bl	0 <_ZN11__sanitizer14DumpProcessMapEv>
 378:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000037c <_ZN11__sanitizer13WriteToSyslogEPKc>:
 37c:	sub	sp, sp, #0x40
 380:	str	x30, [sp, #32]
 384:	stp	x20, x19, [sp, #48]
 388:	mov	x19, x0
 38c:	mov	x0, sp
 390:	mov	w1, #0x10000               	// #65536
 394:	stp	xzr, xzr, [sp, #8]
 398:	str	xzr, [sp]
 39c:	bl	0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 3a0:	ldr	x8, [sp, #16]
 3a4:	lsr	x9, x8, #16
 3a8:	cbnz	x9, 3e0 <_ZN11__sanitizer13WriteToSyslogEPKc+0x64>
 3ac:	ldr	x9, [sp, #8]
 3b0:	lsr	x9, x9, #16
 3b4:	cbnz	x9, 3c8 <_ZN11__sanitizer13WriteToSyslogEPKc+0x4c>
 3b8:	mov	x0, sp
 3bc:	mov	w1, #0x10000               	// #65536
 3c0:	bl	0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 3c4:	ldr	x8, [sp, #16]
 3c8:	ldr	x9, [sp]
 3cc:	mov	w10, #0x10000               	// #65536
 3d0:	sub	x2, x10, x8
 3d4:	mov	w1, wzr
 3d8:	add	x0, x9, x8
 3dc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 3e0:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 3e4:	ldr	q0, [x8]
 3e8:	ldr	x8, [sp]
 3ec:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 3f0:	add	x1, x1, #0x0
 3f4:	mov	x0, sp
 3f8:	mov	x2, x19
 3fc:	str	q0, [sp, #16]
 400:	strb	wzr, [x8]
 404:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 408:	ldr	x19, [sp]
 40c:	mov	w1, #0xa                   	// #10
 410:	mov	x0, x19
 414:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 418:	cbz	x0, 444 <_ZN11__sanitizer13WriteToSyslogEPKc+0xc8>
 41c:	mov	x20, x0
 420:	mov	x0, x19
 424:	strb	wzr, [x20], #1
 428:	bl	0 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>
 42c:	mov	w1, #0xa                   	// #10
 430:	mov	x0, x20
 434:	mov	x19, x20
 438:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 43c:	mov	x20, x0
 440:	cbnz	x0, 420 <_ZN11__sanitizer13WriteToSyslogEPKc+0xa4>
 444:	ldrb	w8, [x19]
 448:	cbz	w8, 454 <_ZN11__sanitizer13WriteToSyslogEPKc+0xd8>
 44c:	mov	x0, x19
 450:	bl	0 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>
 454:	ldp	x0, x1, [sp]
 458:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 45c:	ldp	x20, x19, [sp, #48]
 460:	ldr	x30, [sp, #32]
 464:	add	sp, sp, #0x40
 468:	ret

000000000000046c <_ZN11__sanitizer25MaybeStartBackgroudThreadEv>:
 46c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 470:	ldr	x8, [x8]
 474:	ldp	x9, x10, [x8, #136]
 478:	orr	x9, x10, x9
 47c:	cbnz	x9, 488 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x1c>
 480:	ldrb	w8, [x8, #160]
 484:	cbz	w8, 4a4 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x38>
 488:	adrp	x8, 0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_>
 48c:	ldr	x8, [x8]
 490:	cbz	x8, 4a4 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x38>
 494:	adrp	x0, 40 <_ZN11__sanitizer16BackgroundThreadEPv>
 498:	add	x0, x0, #0x0
 49c:	mov	x1, xzr
 4a0:	b	0 <_ZN11__sanitizer21internal_start_threadEPFvPvES0_>
 4a4:	ret

00000000000004a8 <_ZN11__sanitizer21SetSandboxingCallbackEPFvvE>:
 4a8:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 4ac:	str	x0, [x8]
 4b0:	ret

00000000000004b4 <__sanitizer_sandbox_on_notify>:
 4b4:	str	x30, [sp, #-16]!
 4b8:	bl	0 <_ZN11__sanitizer28PlatformPrepareForSandboxingEP29__sanitizer_sandbox_arguments>
 4bc:	adrp	x8, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 4c0:	ldr	x0, [x8]
 4c4:	cbz	x0, 4d0 <__sanitizer_sandbox_on_notify+0x1c>
 4c8:	ldr	x30, [sp], #16
 4cc:	br	x0
 4d0:	ldr	x30, [sp], #16
 4d4:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_allocator_checks.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer16SetErrnoToENOMEMEv>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__errno_location>
   8:	mov	w8, #0xc                   	// #12
   c:	str	w8, [x0]
  10:	ldr	x30, [sp], #16
  14:	ret

sanitizer_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18internal_sigactionEiPKvPv>:
   0:	adrp	x8, 0 <_ZN11__sanitizer14real_sigactionEiPKvPv>
   4:	ldr	x8, [x8]
   8:	cbz	x8, 1c <_ZN11__sanitizer18internal_sigactionEiPKvPv+0x1c>
   c:	str	x30, [sp, #-16]!
  10:	bl	0 <_ZN11__sanitizer14real_sigactionEiPKvPv>
  14:	ldr	x30, [sp], #16
  18:	ret
  1c:	b	0 <sigaction>

0000000000000020 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>:
  20:	sub	sp, sp, #0xb0
  24:	str	x30, [sp, #128]
  28:	stp	x22, x21, [sp, #144]
  2c:	stp	x20, x19, [sp, #160]
  30:	cbz	x1, 180 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x160>
  34:	mov	x19, x2
  38:	cbz	x2, 198 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x178>
  3c:	mov	x20, x1
  40:	tbz	w0, #0, 78 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x58>
  44:	add	x1, sp, #0x70
  48:	mov	w0, #0x3                   	// #3
  4c:	bl	0 <getrlimit>
  50:	cbnz	w0, 1b0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x190>
  54:	add	x0, sp, #0x50
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
  60:	add	x0, sp, #0x50
  64:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
  68:	tbz	w0, #0, c8 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xa8>
  6c:	str	xzr, [x19]
  70:	str	xzr, [x20]
  74:	b	164 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x144>
  78:	mov	x0, sp
  7c:	str	xzr, [sp, #80]
  80:	str	xzr, [sp, #112]
  84:	bl	0 <pthread_attr_init>
  88:	bl	0 <pthread_self>
  8c:	mov	x1, sp
  90:	bl	0 <pthread_getattr_np>
  94:	cbnz	w0, 1d0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1b0>
  98:	mov	x0, sp
  9c:	add	x1, sp, #0x70
  a0:	add	x2, sp, #0x50
  a4:	bl	0 <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm>
  a8:	mov	x0, sp
  ac:	bl	0 <pthread_attr_destroy>
  b0:	ldr	x8, [sp, #112]
  b4:	ldr	x9, [sp, #80]
  b8:	add	x9, x9, x8
  bc:	str	x9, [x20]
  c0:	str	x8, [x19]
  c4:	b	16c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x14c>
  c8:	add	x0, sp, #0x50
  cc:	mov	x1, sp
  d0:	stp	xzr, xzr, [sp, #24]
  d4:	str	xzr, [sp, #72]
  d8:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
  dc:	mov	x21, xzr
  e0:	tbz	w0, #0, 11c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xfc>
  e4:	ldr	x8, [sp, #8]
  e8:	add	x22, sp, #0x70
  ec:	cmp	x8, x22
  f0:	b.ls	fc <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xdc>  // b.plast
  f4:	mov	x21, xzr
  f8:	b	11c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xfc>
  fc:	add	x0, sp, #0x50
 100:	mov	x1, sp
 104:	mov	x21, x8
 108:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 10c:	tbz	w0, #0, 11c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xfc>
 110:	ldr	x8, [sp, #8]
 114:	cmp	x8, x22
 118:	b.ls	fc <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xdc>  // b.plast
 11c:	ldr	x8, [sp]
 120:	add	x9, sp, #0x70
 124:	cmp	x8, x9
 128:	b.hi	1f0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1d0>  // b.pmore
 12c:	ldr	x8, [sp, #8]
 130:	cmp	x8, x9
 134:	b.ls	1f0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1d0>  // b.plast
 138:	ldr	x9, [sp, #112]
 13c:	sub	x10, x8, x21
 140:	mov	w11, #0x40000000            	// #1073741824
 144:	str	x8, [x20]
 148:	cmp	x9, x10
 14c:	csel	x9, x10, x9, hi  // hi = pmore
 150:	lsr	x10, x9, #30
 154:	cmp	x10, #0x0
 158:	csel	x9, x9, x11, eq  // eq = none
 15c:	sub	x8, x8, x9
 160:	str	x8, [x19]
 164:	add	x0, sp, #0x50
 168:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 16c:	ldp	x20, x19, [sp, #160]
 170:	ldp	x22, x21, [sp, #144]
 174:	ldr	x30, [sp, #128]
 178:	add	sp, sp, #0xb0
 17c:	ret
 180:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 184:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 188:	add	x0, x0, #0x0
 18c:	add	x2, x2, #0x0
 190:	mov	w1, #0x60                  	// #96
 194:	b	204 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1e4>
 198:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 19c:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x2, x2, #0x0
 1a8:	mov	w1, #0x61                  	// #97
 1ac:	b	204 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1e4>
 1b0:	sxtw	x3, w0
 1b4:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1b8:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x2, x2, #0x0
 1c4:	mov	w1, #0x65                  	// #101
 1c8:	mov	x4, xzr
 1cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1d0:	sxtw	x3, w0
 1d4:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1d8:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1dc:	add	x0, x0, #0x0
 1e0:	add	x2, x2, #0x0
 1e4:	mov	w1, #0x91                  	// #145
 1e8:	mov	x4, xzr
 1ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1f0:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1f4:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x2, x2, #0x0
 200:	mov	w1, #0x73                  	// #115
 204:	mov	x3, xzr
 208:	mov	x4, xzr
 20c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000210 <_ZN11__sanitizer6SetEnvEPKcS1_>:
 210:	sub	sp, sp, #0x30
 214:	str	x30, [sp, #16]
 218:	stp	x20, x19, [sp, #32]
 21c:	mov	x19, x1
 220:	adrp	x1, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 224:	mov	x20, x0
 228:	add	x1, x1, #0x0
 22c:	mov	x0, #0xffffffffffffffff    	// #-1
 230:	bl	0 <dlsym>
 234:	str	x0, [sp, #24]
 238:	cbz	x0, 268 <_ZN11__sanitizer6SetEnvEPKcS1_+0x58>
 23c:	add	x0, sp, #0x8
 240:	add	x1, sp, #0x18
 244:	mov	w2, #0x8                   	// #8
 248:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 24c:	ldr	x8, [sp, #8]
 250:	mov	w2, #0x1                   	// #1
 254:	mov	x0, x20
 258:	mov	x1, x19
 25c:	blr	x8
 260:	cmp	w0, #0x0
 264:	cset	w0, eq  // eq = none
 268:	ldp	x20, x19, [sp, #32]
 26c:	ldr	x30, [sp, #16]
 270:	add	sp, sp, #0x30
 274:	ret

0000000000000278 <_ZN11__sanitizer11InitTlsSizeEv>:
 278:	sub	sp, sp, #0x30
 27c:	str	x30, [sp, #32]
 280:	adrp	x1, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 284:	add	x1, x1, #0x0
 288:	mov	x0, #0xffffffffffffffff    	// #-1
 28c:	bl	0 <dlsym>
 290:	str	x0, [sp, #40]
 294:	add	x0, sp, #0x18
 298:	add	x1, sp, #0x28
 29c:	mov	w2, #0x8                   	// #8
 2a0:	stp	xzr, xzr, [sp, #8]
 2a4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2a8:	ldr	x8, [sp, #24]
 2ac:	cbz	x8, 304 <_ZN11__sanitizer11InitTlsSizeEv+0x8c>
 2b0:	add	x0, sp, #0x10
 2b4:	add	x1, sp, #0x8
 2b8:	blr	x8
 2bc:	ldr	x8, [sp, #8]
 2c0:	cmp	x8, #0xf
 2c4:	b.hi	2d0 <_ZN11__sanitizer11InitTlsSizeEv+0x58>  // b.pmore
 2c8:	mov	w8, #0x10                  	// #16
 2cc:	str	x8, [sp, #8]
 2d0:	sub	x9, x8, #0x1
 2d4:	tst	x8, x9
 2d8:	b.ne	324 <_ZN11__sanitizer11InitTlsSizeEv+0xac>  // b.any
 2dc:	ldr	x9, [sp, #16]
 2e0:	neg	x10, x8
 2e4:	ldr	x30, [sp, #32]
 2e8:	add	x8, x8, x9
 2ec:	sub	x8, x8, #0x1
 2f0:	and	x8, x8, x10
 2f4:	adrp	x9, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 2f8:	str	x8, [x9]
 2fc:	add	sp, sp, #0x30
 300:	ret
 304:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 308:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 30c:	add	x0, x0, #0x0
 310:	add	x2, x2, #0x0
 314:	mov	w1, #0xd9                  	// #217
 318:	mov	x3, xzr
 31c:	mov	x4, xzr
 320:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 324:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 328:	add	x0, x0, #0x0
 32c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 330:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000334 <_ZN11__sanitizer20ThreadDescriptorSizeEv>:
 334:	adrp	x8, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 338:	ldr	x0, [x8]
 33c:	cbz	x0, 344 <_ZN11__sanitizer20ThreadDescriptorSizeEv+0x10>
 340:	ret
 344:	mov	w0, #0x6f0                 	// #1776
 348:	str	x0, [x8]
 34c:	ret

0000000000000350 <_ZN11__sanitizer16ThreadSelfOffsetEv>:
 350:	mov	w0, #0x10                  	// #16
 354:	ret

0000000000000358 <_ZN11__sanitizer10ThreadSelfEv>:
 358:	adrp	x10, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 35c:	ldr	x9, [x10]
 360:	mrs	x8, tpidr_el0
 364:	cbz	x9, 370 <_ZN11__sanitizer10ThreadSelfEv+0x18>
 368:	sub	x0, x8, x9
 36c:	ret
 370:	mov	w9, #0x6f0                 	// #1776
 374:	str	x9, [x10]
 378:	sub	x0, x8, x9
 37c:	ret

0000000000000380 <_ZN11__sanitizer10GetTlsSizeEv>:
 380:	adrp	x8, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 384:	ldr	x0, [x8]
 388:	ret

000000000000038c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_>:
 38c:	sub	sp, sp, #0x40
 390:	stp	x30, x23, [sp, #16]
 394:	stp	x22, x21, [sp, #32]
 398:	stp	x20, x19, [sp, #48]
 39c:	adrp	x10, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 3a0:	ldr	x9, [x10]
 3a4:	mov	x22, x4
 3a8:	mov	x19, x3
 3ac:	mov	x21, x2
 3b0:	mov	x20, x1
 3b4:	mov	w23, w0
 3b8:	mrs	x8, tpidr_el0
 3bc:	cbnz	x9, 3c8 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0x3c>
 3c0:	mov	w9, #0x6f0                 	// #1776
 3c4:	str	x9, [x10]
 3c8:	sub	x8, x8, x9
 3cc:	str	x8, [x19]
 3d0:	adrp	x8, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 3d4:	ldr	x8, [x8]
 3d8:	and	w0, w23, #0x1
 3dc:	add	x1, sp, #0x8
 3e0:	mov	x2, sp
 3e4:	str	x8, [x22]
 3e8:	bl	20 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
 3ec:	ldp	x8, x9, [sp]
 3f0:	sub	x9, x9, x8
 3f4:	str	x8, [x20]
 3f8:	str	x9, [x21]
 3fc:	tbnz	w23, #0, 448 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>
 400:	ldr	x10, [x19]
 404:	ldr	x4, [x20]
 408:	cmp	x10, x4
 40c:	b.ls	448 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>  // b.plast
 410:	add	x8, x4, x9
 414:	cmp	x10, x8
 418:	b.cs	448 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>  // b.hs, b.nlast
 41c:	ldr	x11, [x22]
 420:	add	x3, x11, x10
 424:	cmp	x3, x4
 428:	b.ls	45c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xd0>  // b.plast
 42c:	cmp	x3, x8
 430:	b.hi	474 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xe8>  // b.pmore
 434:	sub	x8, x9, x11
 438:	str	x8, [x21]
 43c:	ldr	x9, [x20]
 440:	add	x8, x9, x8
 444:	str	x8, [x19]
 448:	ldp	x20, x19, [sp, #48]
 44c:	ldp	x22, x21, [sp, #32]
 450:	ldp	x30, x23, [sp, #16]
 454:	add	sp, sp, #0x40
 458:	ret
 45c:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 460:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 464:	add	x0, x0, #0x0
 468:	add	x2, x2, #0x0
 46c:	mov	w1, #0x202                 	// #514
 470:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 474:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 478:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 47c:	add	x0, x0, #0x0
 480:	add	x2, x2, #0x0
 484:	mov	w1, #0x203                 	// #515
 488:	mov	x4, x8
 48c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000490 <_ZN11__sanitizer13ListOfModules4initEv>:
 490:	sub	sp, sp, #0x30
 494:	stp	x30, x21, [sp, #16]
 498:	stp	x20, x19, [sp, #32]
 49c:	ldrb	w8, [x0, #24]
 4a0:	mov	x19, x0
 4a4:	cbz	w8, 4d8 <_ZN11__sanitizer13ListOfModules4initEv+0x48>
 4a8:	ldr	x8, [x19, #16]
 4ac:	cbz	x8, 4d0 <_ZN11__sanitizer13ListOfModules4initEv+0x40>
 4b0:	ldr	x20, [x19]
 4b4:	add	x8, x8, x8, lsl #3
 4b8:	lsl	x21, x8, #3
 4bc:	mov	x0, x20
 4c0:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 4c4:	subs	x21, x21, #0x48
 4c8:	add	x20, x20, #0x48
 4cc:	b.ne	4bc <_ZN11__sanitizer13ListOfModules4initEv+0x2c>  // b.any
 4d0:	str	xzr, [x19, #16]
 4d4:	b	4ec <_ZN11__sanitizer13ListOfModules4initEv+0x5c>
 4d8:	mov	w1, #0x4000                	// #16384
 4dc:	mov	x0, x19
 4e0:	stp	xzr, xzr, [x19, #8]
 4e4:	str	xzr, [x19]
 4e8:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 4ec:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 4f0:	mov	w8, #0x1                   	// #1
 4f4:	add	x0, x0, #0x0
 4f8:	mov	x1, sp
 4fc:	strb	w8, [x19, #24]
 500:	str	x19, [sp]
 504:	strb	w8, [sp, #8]
 508:	bl	0 <dl_iterate_phdr>
 50c:	ldp	x20, x19, [sp, #32]
 510:	ldp	x30, x21, [sp, #16]
 514:	add	sp, sp, #0x30
 518:	ret

000000000000051c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>:
 51c:	sub	sp, sp, #0xa0
 520:	str	x30, [sp, #112]
 524:	stp	x22, x21, [sp, #128]
 528:	stp	x20, x19, [sp, #144]
 52c:	mov	x20, x0
 530:	add	x0, sp, #0x50
 534:	mov	w1, #0x1000                	// #4096
 538:	mov	x19, x2
 53c:	stp	xzr, xzr, [sp, #88]
 540:	str	xzr, [sp, #80]
 544:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 548:	ldr	x8, [sp, #96]
 54c:	cmp	x8, #0xfff
 550:	b.hi	588 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x6c>  // b.pmore
 554:	ldr	x9, [sp, #88]
 558:	cmp	x9, #0xfff
 55c:	b.hi	570 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x54>  // b.pmore
 560:	add	x0, sp, #0x50
 564:	mov	w1, #0x1000                	// #4096
 568:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 56c:	ldr	x8, [sp, #96]
 570:	ldr	x9, [sp, #80]
 574:	mov	w10, #0x1000                	// #4096
 578:	sub	x2, x10, x8
 57c:	mov	w1, wzr
 580:	add	x0, x9, x8
 584:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 588:	adrp	x8, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 58c:	ldr	q0, [x8]
 590:	ldr	x8, [sp, #80]
 594:	str	q0, [sp, #96]
 598:	strb	wzr, [x8]
 59c:	ldrb	w8, [x19, #8]
 5a0:	cbz	w8, 5b8 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x9c>
 5a4:	strb	wzr, [x19, #8]
 5a8:	ldr	x0, [sp, #80]
 5ac:	ldr	x1, [sp, #96]
 5b0:	bl	0 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>
 5b4:	b	5d0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xb4>
 5b8:	ldr	x2, [x20, #8]
 5bc:	cbz	x2, 5d0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xb4>
 5c0:	adrp	x1, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 5c4:	add	x1, x1, #0x0
 5c8:	add	x0, sp, #0x50
 5cc:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 5d0:	ldr	x8, [sp, #96]
 5d4:	cbz	x8, 6c4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1a8>
 5d8:	ldr	x0, [sp, #80]
 5dc:	ldrb	w8, [x0]
 5e0:	cbz	w8, 6a4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x188>
 5e4:	add	x8, sp, #0x8
 5e8:	movi	v0.2d, #0x0
 5ec:	add	x0, x8, #0x1c
 5f0:	mov	w2, #0x10                  	// #16
 5f4:	mov	w1, wzr
 5f8:	str	xzr, [sp, #8]
 5fc:	str	wzr, [sp, #32]
 600:	strb	wzr, [sp, #52]
 604:	stur	q0, [sp, #16]
 608:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 60c:	movi	v0.2d, #0x0
 610:	stur	q0, [sp, #64]
 614:	str	xzr, [sp, #56]
 618:	ldr	x1, [sp, #80]
 61c:	ldr	x2, [x20]
 620:	add	x0, sp, #0x8
 624:	bl	0 <_ZN11__sanitizer12LoadedModule3setEPKcm>
 628:	ldrh	w8, [x20, #24]
 62c:	cbz	w8, 694 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x178>
 630:	mov	x21, xzr
 634:	mov	x22, xzr
 638:	b	64c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x130>
 63c:	add	x22, x22, #0x1
 640:	cmp	x22, w8, uxth
 644:	add	x21, x21, #0x38
 648:	b.cs	694 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x178>  // b.hs, b.nlast
 64c:	ldr	x9, [x20, #16]
 650:	ldr	w10, [x9, x21]
 654:	cmp	w10, #0x1
 658:	b.ne	63c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x120>  // b.any
 65c:	add	x9, x9, x21
 660:	ldr	x8, [x20]
 664:	ldr	x10, [x9, #16]
 668:	ldr	w11, [x9, #4]
 66c:	ldr	x9, [x9, #40]
 670:	add	x0, sp, #0x8
 674:	add	x1, x10, x8
 678:	and	w3, w11, #0x1
 67c:	add	x2, x1, x9
 680:	ubfx	w4, w11, #1, #1
 684:	mov	x5, xzr
 688:	bl	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 68c:	ldrh	w8, [x20, #24]
 690:	b	63c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x120>
 694:	ldr	x0, [x19]
 698:	add	x1, sp, #0x8
 69c:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 6a0:	ldr	x0, [sp, #80]
 6a4:	ldr	x1, [sp, #88]
 6a8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 6ac:	ldp	x20, x19, [sp, #144]
 6b0:	ldp	x22, x21, [sp, #128]
 6b4:	ldr	x30, [sp, #112]
 6b8:	mov	w0, wzr
 6bc:	add	sp, sp, #0xa0
 6c0:	ret
 6c4:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 6c8:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 6cc:	add	x0, x0, #0x0
 6d0:	add	x2, x2, #0x0
 6d4:	mov	w1, #0x1c5                 	// #453
 6d8:	mov	x3, xzr
 6dc:	mov	x4, xzr
 6e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000006e4 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>:
 6e4:	sub	sp, sp, #0x40
 6e8:	stp	x30, x21, [sp, #32]
 6ec:	stp	x20, x19, [sp, #48]
 6f0:	ldrb	w8, [x0, #24]
 6f4:	mov	x19, x0
 6f8:	cbz	w8, 72c <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x48>
 6fc:	ldr	x8, [x19, #16]
 700:	cbz	x8, 724 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x40>
 704:	ldr	x20, [x19]
 708:	add	x8, x8, x8, lsl #3
 70c:	lsl	x21, x8, #3
 710:	mov	x0, x20
 714:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 718:	subs	x21, x21, #0x48
 71c:	add	x20, x20, #0x48
 720:	b.ne	710 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x2c>  // b.any
 724:	str	xzr, [x19, #16]
 728:	b	740 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x5c>
 72c:	mov	w1, #0x4000                	// #16384
 730:	mov	x0, x19
 734:	stp	xzr, xzr, [x19, #8]
 738:	str	xzr, [x19]
 73c:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 740:	mov	w8, #0x1                   	// #1
 744:	mov	x0, sp
 748:	mov	w1, #0x1                   	// #1
 74c:	strb	w8, [x19, #24]
 750:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
 754:	mov	x0, sp
 758:	mov	x1, x19
 75c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE>
 760:	mov	x0, sp
 764:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 768:	ldp	x20, x19, [sp, #48]
 76c:	ldp	x30, x21, [sp, #32]
 770:	add	sp, sp, #0x40
 774:	ret

0000000000000778 <_ZN11__sanitizer6GetRSSEv>:
 778:	sub	sp, sp, #0xb0
 77c:	stp	x30, x21, [sp, #144]
 780:	stp	x20, x19, [sp, #160]
 784:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 788:	ldr	x8, [x8]
 78c:	ldrb	w8, [x8, #168]
 790:	cbz	w8, 838 <_ZN11__sanitizer6GetRSSEv+0xc0>
 794:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 798:	add	x0, x0, #0x0
 79c:	mov	w1, wzr
 7a0:	mov	x2, xzr
 7a4:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 7a8:	cmn	w0, #0x1
 7ac:	b.eq	838 <_ZN11__sanitizer6GetRSSEv+0xc0>  // b.none
 7b0:	mov	x1, sp
 7b4:	mov	w2, #0x3f                  	// #63
 7b8:	mov	w19, w0
 7bc:	mov	x21, sp
 7c0:	bl	0 <_ZN11__sanitizer13internal_readEiPvm>
 7c4:	mov	x20, x0
 7c8:	mov	w0, w19
 7cc:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 7d0:	cmp	x20, #0x1
 7d4:	b.lt	864 <_ZN11__sanitizer6GetRSSEv+0xec>  // b.tstop
 7d8:	strb	wzr, [x21, x20]
 7dc:	ldrb	w8, [x21], #1
 7e0:	sub	w9, w8, #0x30
 7e4:	cmp	w9, #0xa
 7e8:	b.cc	7dc <_ZN11__sanitizer6GetRSSEv+0x64>  // b.lo, b.ul, b.last
 7ec:	cbz	w8, 878 <_ZN11__sanitizer6GetRSSEv+0x100>
 7f0:	ldrb	w8, [x21], #1
 7f4:	sub	w9, w8, #0x30
 7f8:	cbz	w8, 808 <_ZN11__sanitizer6GetRSSEv+0x90>
 7fc:	and	w10, w9, #0xff
 800:	cmp	w10, #0xa
 804:	b.cs	7f0 <_ZN11__sanitizer6GetRSSEv+0x78>  // b.hs, b.nlast
 808:	cmp	w9, #0x9
 80c:	b.hi	8a8 <_ZN11__sanitizer6GetRSSEv+0x130>  // b.pmore
 810:	mov	x19, xzr
 814:	mov	w9, #0xa                   	// #10
 818:	mul	x10, x19, x9
 81c:	add	x10, x10, w8, uxtb
 820:	ldrb	w8, [x21], #1
 824:	sub	x19, x10, #0x30
 828:	sub	w11, w8, #0x30
 82c:	cmp	w11, #0xa
 830:	b.cc	818 <_ZN11__sanitizer6GetRSSEv+0xa0>  // b.lo, b.ul, b.last
 834:	b	87c <_ZN11__sanitizer6GetRSSEv+0x104>
 838:	mov	x1, sp
 83c:	mov	w0, wzr
 840:	bl	0 <getrusage>
 844:	ldr	x8, [sp, #32]
 848:	cmp	w0, #0x0
 84c:	lsl	x8, x8, #10
 850:	csel	x0, x8, xzr, eq  // eq = none
 854:	ldp	x20, x19, [sp, #160]
 858:	ldp	x30, x21, [sp, #144]
 85c:	add	sp, sp, #0xb0
 860:	ret
 864:	mov	x0, xzr
 868:	ldp	x20, x19, [sp, #160]
 86c:	ldp	x30, x21, [sp, #144]
 870:	add	sp, sp, #0xb0
 874:	ret
 878:	mov	x19, xzr
 87c:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 880:	ldr	x20, [x20]
 884:	ldr	x0, [x20]
 888:	cbnz	x0, 894 <_ZN11__sanitizer6GetRSSEv+0x11c>
 88c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 890:	str	x0, [x20]
 894:	mul	x0, x0, x19
 898:	ldp	x20, x19, [sp, #160]
 89c:	ldp	x30, x21, [sp, #144]
 8a0:	add	sp, sp, #0xb0
 8a4:	ret
 8a8:	mov	x19, xzr
 8ac:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 8b0:	ldr	x20, [x20]
 8b4:	ldr	x0, [x20]
 8b8:	cbnz	x0, 894 <_ZN11__sanitizer6GetRSSEv+0x11c>
 8bc:	b	88c <_ZN11__sanitizer6GetRSSEv+0x114>

00000000000008c0 <_ZN11__sanitizer15GetNumberOfCPUsEv>:
 8c0:	sub	sp, sp, #0x90
 8c4:	str	x30, [sp, #128]
 8c8:	mov	x2, sp
 8cc:	mov	w1, #0x80                  	// #128
 8d0:	mov	w0, wzr
 8d4:	bl	0 <sched_getaffinity>
 8d8:	cbnz	w0, 8f4 <_ZN11__sanitizer15GetNumberOfCPUsEv+0x34>
 8dc:	mov	x1, sp
 8e0:	mov	w0, #0x80                  	// #128
 8e4:	bl	0 <__sched_cpucount>
 8e8:	ldr	x30, [sp, #128]
 8ec:	add	sp, sp, #0x90
 8f0:	ret
 8f4:	sxtw	x3, w0
 8f8:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 8fc:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 900:	add	x0, x0, #0x0
 904:	add	x2, x2, #0x0
 908:	mov	w1, #0x2b9                 	// #697
 90c:	mov	x4, xzr
 910:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000914 <_ZN11__sanitizer14AndroidLogInitEv>:
 914:	ret

0000000000000918 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>:
 918:	adrp	x1, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 91c:	mov	x2, x0
 920:	add	x1, x1, #0x0
 924:	mov	w0, #0x6                   	// #6
 928:	b	0 <syslog>

000000000000092c <_ZN11__sanitizer15SetAbortMessageEPKc>:
 92c:	ret

0000000000000930 <_ZN11__sanitizer18LogMessageOnPrintfEPKc>:
 930:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 934:	ldr	x8, [x8]
 938:	ldrb	w8, [x8, #49]
 93c:	cbz	w8, 944 <_ZN11__sanitizer18LogMessageOnPrintfEPKc+0x14>
 940:	b	0 <_ZN11__sanitizer13WriteToSyslogEPKc>
 944:	ret

0000000000000948 <_ZN11__sanitizer17MonotonicNanoTimeEv>:
 948:	sub	sp, sp, #0x20
 94c:	str	x30, [sp, #16]
 950:	adrp	x8, 0 <__progname>
 954:	ldr	x8, [x8]
 958:	cbz	x8, 988 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x40>
 95c:	ldr	x8, [x8]
 960:	cbz	x8, 988 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x40>
 964:	ldrb	w8, [x8]
 968:	cbz	w8, 988 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x40>
 96c:	adrp	x8, 0 <real_clock_gettime>
 970:	ldr	x8, [x8]
 974:	mov	x1, sp
 978:	mov	w0, #0x1                   	// #1
 97c:	cbz	x8, 9b0 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x68>
 980:	bl	0 <real_clock_gettime>
 984:	b	994 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x4c>
 988:	mov	x1, sp
 98c:	mov	w0, #0x1                   	// #1
 990:	bl	0 <_ZN11__sanitizer22internal_clock_gettimeEiPv>
 994:	ldp	x8, x9, [sp]
 998:	ldr	x30, [sp, #16]
 99c:	mov	w10, #0xca00                	// #51712
 9a0:	movk	w10, #0x3b9a, lsl #16
 9a4:	madd	x0, x8, x10, x9
 9a8:	add	sp, sp, #0x20
 9ac:	ret
 9b0:	bl	0 <clock_gettime>
 9b4:	b	994 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x4c>

00000000000009b8 <_ZN11__sanitizer6ReExecEv>:
 9b8:	str	x30, [sp, #-32]!
 9bc:	stp	x20, x19, [sp, #16]
 9c0:	mov	w0, #0x1f                  	// #31
 9c4:	bl	0 <getauxval>
 9c8:	mov	x19, x0
 9cc:	bl	0 <_ZN11__sanitizer7GetArgvEv>
 9d0:	mov	x20, x0
 9d4:	bl	0 <_ZN11__sanitizer10GetEnvironEv>
 9d8:	mov	x2, x0
 9dc:	mov	x0, x19
 9e0:	mov	x1, x20
 9e4:	bl	0 <_ZN11__sanitizer15internal_execveEPKcPKPcS4_>
 9e8:	add	x1, sp, #0xc
 9ec:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 9f0:	tbz	w0, #0, a08 <_ZN11__sanitizer6ReExecEv+0x50>
 9f4:	ldr	w1, [sp, #12]
 9f8:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 9fc:	add	x0, x0, #0x0
 a00:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 a04:	bl	0 <_ZN11__sanitizer3DieEv>
 a08:	adrp	x0, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 a0c:	adrp	x2, 0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 a10:	add	x0, x0, #0x0
 a14:	add	x2, x2, #0x0
 a18:	mov	w1, #0x342                 	// #834
 a1c:	mov	w4, #0x1                   	// #1
 a20:	mov	x3, xzr
 a24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xa0>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	c0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xc0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	dc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm+0xdc>  // b.any
  44:	add	x8, x20, x20, lsl #3
  48:	lsl	x8, x8, #3
  4c:	add	x8, x8, x0
  50:	sub	x8, x8, #0x1
  54:	neg	x9, x0
  58:	and	x20, x8, x9
  5c:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  60:	add	x1, x1, #0x0
  64:	mov	x0, x20
  68:	mov	w2, wzr
  6c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  70:	ldr	x8, [x19, #16]
  74:	ldr	x1, [x19]
  78:	mov	x21, x0
  7c:	add	x8, x8, x8, lsl #3
  80:	lsl	x2, x8, #3
  84:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  88:	ldp	x0, x1, [x19]
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	stp	x21, x20, [x19]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x30, x21, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  a4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  a8:	add	x0, x0, #0x0
  ac:	add	x2, x2, #0x0
  b0:	mov	w1, #0x20b                 	// #523
  b4:	mov	x3, xzr
  b8:	mov	x4, xzr
  bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  c0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  c4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  c8:	add	x0, x0, #0x0
  cc:	add	x2, x2, #0x0
  d0:	mov	w1, #0x20c                 	// #524
  d4:	mov	x4, x20
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  dc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE7ReallocEm>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	mov	x9, #0xe38f                	// #58255
  10:	movk	x9, #0x8e38, lsl #16
  14:	movk	x9, #0x38e3, lsl #32
  18:	movk	x9, #0xe38e, lsl #48
  1c:	umulh	x8, x8, x9
  20:	lsr	x4, x8, #6
  24:	cmp	x3, x4
  28:	b.hi	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xb4>  // b.pmore
  2c:	mov	x19, x0
  30:	mov	x20, x1
  34:	b.ne	8c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x8c>  // b.any
  38:	adds	x3, x3, #0x1
  3c:	b.cs	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xcc>  // b.hs, b.nlast
  40:	sub	x8, x3, #0x1
  44:	tst	x3, x8
  48:	b.ne	54 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x54>  // b.any
  4c:	mov	x8, x3
  50:	b	7c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x7c>
  54:	clz	x8, x3
  58:	eor	x9, x8, #0x3f
  5c:	mov	w8, #0x2                   	// #2
  60:	lsl	x8, x8, x9
  64:	cmp	x8, x3
  68:	b.ls	ec <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0xec>  // b.plast
  6c:	mov	w10, #0x1                   	// #1
  70:	lsl	x4, x10, x9
  74:	cmp	x4, x3
  78:	b.cs	108 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_+0x108>  // b.hs, b.nlast
  7c:	mov	x0, x19
  80:	mov	x1, x8
  84:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  88:	ldr	x3, [x19, #16]
  8c:	add	x9, x3, #0x1
  90:	ldr	x8, [x19]
  94:	str	x9, [x19, #16]
  98:	mov	x1, x20
  9c:	ldp	x20, x19, [sp, #16]
  a0:	mov	w10, #0x48                  	// #72
  a4:	madd	x0, x3, x10, x8
  a8:	mov	w2, #0x48                  	// #72
  ac:	ldr	x30, [sp], #32
  b0:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x1cd                 	// #461
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  d0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  d4:	add	x0, x0, #0x0
  d8:	add	x2, x2, #0x0
  dc:	mov	w1, #0x186                 	// #390
  e0:	mov	x3, xzr
  e4:	mov	x4, xzr
  e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ec:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  f0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
  f4:	add	x0, x0, #0x0
  f8:	add	x2, x2, #0x0
  fc:	mov	w1, #0x18a                 	// #394
 100:	mov	x4, x8
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 108:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
 10c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12LoadedModuleEE9push_backERKS1_>
 110:	add	x0, x0, #0x0
 114:	add	x2, x2, #0x0
 118:	mov	w1, #0x18b                 	// #395
 11c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_mac_libcdep.cpp.o:     file format elf64-littleaarch64


sanitizer_posix_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer6GetUidEv>:
   0:	b	0 <getuid>

0000000000000004 <_ZN11__sanitizer13GetThreadSelfEv>:
   4:	b	0 <pthread_self>

0000000000000008 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm>:
   8:	stp	x30, x21, [sp, #-32]!
   c:	stp	x20, x19, [sp, #16]
  10:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  14:	ldr	x21, [x21]
  18:	mov	x19, x1
  1c:	mov	x20, x0
  20:	ldr	x8, [x21]
  24:	cbnz	x8, 34 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x2c>
  28:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  2c:	mov	x8, x0
  30:	str	x0, [x21]
  34:	sub	x9, x8, #0x1
  38:	tst	x8, x9
  3c:	b.ne	78 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x70>  // b.any
  40:	add	x9, x20, x8
  44:	neg	x8, x8
  48:	sub	x9, x9, #0x1
  4c:	and	x0, x9, x8
  50:	and	x8, x8, x19
  54:	subs	x1, x8, x0
  58:	b.ls	6c <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x64>  // b.plast
  5c:	ldp	x20, x19, [sp, #16]
  60:	mov	w2, #0x4                   	// #4
  64:	ldp	x30, x21, [sp], #32
  68:	b	0 <madvise>
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x30, x21, [sp], #32
  74:	ret
  78:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
  7c:	add	x0, x0, #0x0
  80:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  84:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000088 <_ZN11__sanitizer27SetShadowRegionHugePageModeEmm>:
  88:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  8c:	ldr	x8, [x8]
  90:	ldrb	w8, [x8, #208]
  94:	cmp	w8, #0x0
  98:	mov	w8, #0xe                   	// #14
  9c:	cinc	w2, w8, ne  // ne = any
  a0:	b	0 <madvise>

00000000000000a4 <_ZN11__sanitizer20DontDumpShadowMemoryEmm>:
  a4:	str	x30, [sp, #-16]!
  a8:	mov	w2, #0x10                  	// #16
  ac:	bl	0 <madvise>
  b0:	cmp	w0, #0x0
  b4:	cset	w0, eq  // eq = none
  b8:	ldr	x30, [sp], #16
  bc:	ret

00000000000000c0 <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv>:
  c0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  c4:	ldr	x8, [x8]
  c8:	ldrb	w8, [x8, #186]
  cc:	cbz	w8, dc <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv+0x1c>
  d0:	mov	w0, #0x4                   	// #4
  d4:	mov	x1, xzr
  d8:	b	e0 <_ZN11__sanitizerL6setlimEim>
  dc:	ret

00000000000000e0 <_ZN11__sanitizerL6setlimEim>:
  e0:	sub	sp, sp, #0x30
  e4:	str	x30, [sp, #16]
  e8:	stp	x20, x19, [sp, #32]
  ec:	mov	x20, x1
  f0:	mov	x1, sp
  f4:	mov	w19, w0
  f8:	bl	0 <getrlimit>
  fc:	cbnz	w0, 124 <_ZN11__sanitizerL6setlimEim+0x44>
 100:	mov	x1, sp
 104:	mov	w0, w19
 108:	str	x20, [sp]
 10c:	bl	0 <setrlimit>
 110:	cbnz	w0, 144 <_ZN11__sanitizerL6setlimEim+0x64>
 114:	ldp	x20, x19, [sp, #32]
 118:	ldr	x30, [sp, #16]
 11c:	add	sp, sp, #0x30
 120:	ret
 124:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 128:	ldr	x8, [x8]
 12c:	ldr	x19, [x8]
 130:	bl	0 <__errno_location>
 134:	ldr	w2, [x0]
 138:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 13c:	add	x0, x0, #0x0
 140:	b	160 <_ZN11__sanitizerL6setlimEim+0x80>
 144:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 148:	ldr	x8, [x8]
 14c:	ldr	x19, [x8]
 150:	bl	0 <__errno_location>
 154:	ldr	w2, [x0]
 158:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 15c:	add	x0, x0, #0x0
 160:	mov	x1, x19
 164:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 168:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000016c <_ZN11__sanitizer20StackSizeIsUnlimitedEv>:
 16c:	sub	sp, sp, #0x20
 170:	str	x30, [sp, #16]
 174:	mov	x1, sp
 178:	mov	w0, #0x3                   	// #3
 17c:	bl	0 <getrlimit>
 180:	cbnz	w0, 19c <_ZN11__sanitizer20StackSizeIsUnlimitedEv+0x30>
 184:	ldr	x8, [sp]
 188:	ldr	x30, [sp, #16]
 18c:	cmn	x8, #0x1
 190:	cset	w0, eq  // eq = none
 194:	add	sp, sp, #0x20
 198:	ret
 19c:	sxtw	x4, w0
 1a0:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 1a4:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x2, x2, #0x0
 1b0:	mov	w1, #0x5c                  	// #92
 1b4:	mov	x3, xzr
 1b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001bc <_ZN11__sanitizer24SetStackSizeLimitInBytesEm>:
 1bc:	sub	sp, sp, #0x20
 1c0:	str	x30, [sp, #16]
 1c4:	mov	x1, x0
 1c8:	mov	w0, #0x3                   	// #3
 1cc:	bl	e0 <_ZN11__sanitizerL6setlimEim>
 1d0:	mov	x1, sp
 1d4:	mov	w0, #0x3                   	// #3
 1d8:	bl	0 <getrlimit>
 1dc:	cbnz	w0, 1f8 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x3c>
 1e0:	ldr	x8, [sp]
 1e4:	cmn	x8, #0x1
 1e8:	b.eq	218 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x5c>  // b.none
 1ec:	ldr	x30, [sp, #16]
 1f0:	add	sp, sp, #0x20
 1f4:	ret
 1f8:	sxtw	x4, w0
 1fc:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 200:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 204:	add	x0, x0, #0x0
 208:	add	x2, x2, #0x0
 20c:	mov	w1, #0x5c                  	// #92
 210:	mov	x3, xzr
 214:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 218:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 21c:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 220:	add	x0, x0, #0x0
 224:	add	x2, x2, #0x0
 228:	mov	w1, #0x7a                  	// #122
 22c:	mov	x3, xzr
 230:	mov	x4, xzr
 234:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000238 <_ZN11__sanitizer23AddressSpaceIsUnlimitedEv>:
 238:	sub	sp, sp, #0x20
 23c:	str	x30, [sp, #16]
 240:	mov	x1, sp
 244:	mov	w0, #0x9                   	// #9
 248:	bl	0 <getrlimit>
 24c:	cbnz	w0, 268 <_ZN11__sanitizer23AddressSpaceIsUnlimitedEv+0x30>
 250:	ldr	x8, [sp]
 254:	ldr	x30, [sp, #16]
 258:	cmn	x8, #0x1
 25c:	cset	w0, eq  // eq = none
 260:	add	sp, sp, #0x20
 264:	ret
 268:	sxtw	x4, w0
 26c:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 270:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 274:	add	x0, x0, #0x0
 278:	add	x2, x2, #0x0
 27c:	mov	w1, #0x5c                  	// #92
 280:	mov	x3, xzr
 284:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000288 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv>:
 288:	sub	sp, sp, #0x20
 28c:	str	x30, [sp, #16]
 290:	mov	w0, #0x9                   	// #9
 294:	mov	x1, #0xffffffffffffffff    	// #-1
 298:	bl	e0 <_ZN11__sanitizerL6setlimEim>
 29c:	mov	x1, sp
 2a0:	mov	w0, #0x9                   	// #9
 2a4:	bl	0 <getrlimit>
 2a8:	cbnz	w0, 2c4 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0x3c>
 2ac:	ldr	x8, [sp]
 2b0:	cmn	x8, #0x1
 2b4:	b.ne	2e4 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0x5c>  // b.any
 2b8:	ldr	x30, [sp, #16]
 2bc:	add	sp, sp, #0x20
 2c0:	ret
 2c4:	sxtw	x4, w0
 2c8:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 2cc:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 2d0:	add	x0, x0, #0x0
 2d4:	add	x2, x2, #0x0
 2d8:	mov	w1, #0x5c                  	// #92
 2dc:	mov	x3, xzr
 2e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2e4:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 2e8:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 2ec:	add	x0, x0, #0x0
 2f0:	add	x2, x2, #0x0
 2f4:	mov	w1, #0x84                  	// #132
 2f8:	mov	x3, xzr
 2fc:	mov	x4, xzr
 300:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000304 <_ZN11__sanitizer15SleepForSecondsEi>:
 304:	b	0 <sleep>

0000000000000308 <_ZN11__sanitizer14SleepForMillisEi>:
 308:	mov	w8, #0x3e8                 	// #1000
 30c:	mul	w0, w0, w8
 310:	b	0 <usleep>

0000000000000314 <_ZN11__sanitizer5AbortEv>:
 314:	sub	sp, sp, #0xb0
 318:	str	x30, [sp, #160]
 31c:	mov	w0, #0x6                   	// #6
 320:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
 324:	cbz	w0, 34c <_ZN11__sanitizer5AbortEv+0x38>
 328:	add	x0, sp, #0x8
 32c:	mov	w2, #0x98                  	// #152
 330:	mov	w1, wzr
 334:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 338:	add	x1, sp, #0x8
 33c:	mov	w0, #0x6                   	// #6
 340:	mov	x2, xzr
 344:	str	xzr, [sp, #8]
 348:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 34c:	bl	0 <abort>

0000000000000350 <_ZN11__sanitizer6AtexitEPFvvE>:
 350:	b	0 <atexit>

0000000000000354 <_ZN11__sanitizer21SupportsColoredOutputEi>:
 354:	str	x30, [sp, #-16]!
 358:	bl	0 <isatty>
 35c:	cmp	w0, #0x0
 360:	cset	w0, ne  // ne = any
 364:	ldr	x30, [sp], #16
 368:	ret

000000000000036c <_ZN11__sanitizer23SetAlternateSignalStackEv>:
 36c:	sub	sp, sp, #0x40
 370:	stp	x30, x19, [sp, #48]
 374:	mov	x1, sp
 378:	mov	x0, xzr
 37c:	bl	0 <sigaltstack>
 380:	cbnz	w0, 3cc <_ZN11__sanitizer23SetAlternateSignalStackEv+0x60>
 384:	ldrb	w8, [sp, #8]
 388:	tbz	w8, #1, 3c0 <_ZN11__sanitizer23SetAlternateSignalStackEv+0x54>
 38c:	adrp	x1, 0 <_ZN11__sanitizer6GetUidEv>
 390:	add	x1, x1, #0x0
 394:	mov	w0, #0x10000               	// #65536
 398:	mov	w2, wzr
 39c:	mov	w19, #0x10000               	// #65536
 3a0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3a4:	str	x0, [sp, #24]
 3a8:	add	x0, sp, #0x18
 3ac:	mov	x1, xzr
 3b0:	str	wzr, [sp, #32]
 3b4:	str	x19, [sp, #40]
 3b8:	bl	0 <sigaltstack>
 3bc:	cbnz	w0, 3ec <_ZN11__sanitizer23SetAlternateSignalStackEv+0x80>
 3c0:	ldp	x30, x19, [sp, #48]
 3c4:	add	sp, sp, #0x40
 3c8:	ret
 3cc:	sxtw	x4, w0
 3d0:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 3d4:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 3d8:	add	x0, x0, #0x0
 3dc:	add	x2, x2, #0x0
 3e0:	mov	w1, #0xb0                  	// #176
 3e4:	mov	x3, xzr
 3e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3ec:	sxtw	x4, w0
 3f0:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 3f4:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 3f8:	add	x0, x0, #0x0
 3fc:	add	x2, x2, #0x0
 400:	mov	w1, #0xbb                  	// #187
 404:	mov	x3, xzr
 408:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000040c <_ZN11__sanitizer25UnsetAlternateSignalStackEv>:
 40c:	sub	sp, sp, #0x40
 410:	mov	w8, #0x2                   	// #2
 414:	mov	w9, #0x10000               	// #65536
 418:	add	x0, sp, #0x18
 41c:	mov	x1, sp
 420:	str	xzr, [sp, #24]
 424:	str	w8, [sp, #32]
 428:	stp	x9, x30, [sp, #40]
 42c:	bl	0 <sigaltstack>
 430:	cbnz	w0, 44c <_ZN11__sanitizer25UnsetAlternateSignalStackEv+0x40>
 434:	ldr	x0, [sp]
 438:	ldr	x1, [sp, #16]
 43c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 440:	ldr	x30, [sp, #48]
 444:	add	sp, sp, #0x40
 448:	ret
 44c:	sxtw	x4, w0
 450:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 454:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 458:	add	x0, x0, #0x0
 45c:	add	x2, x2, #0x0
 460:	mov	w1, #0xc3                  	// #195
 464:	mov	x3, xzr
 468:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000046c <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E>:
 46c:	stp	x30, x19, [sp, #-16]!
 470:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 474:	ldr	x8, [x8]
 478:	mov	x19, x0
 47c:	ldrb	w8, [x8, #97]
 480:	cbz	w8, 488 <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E+0x1c>
 484:	bl	36c <_ZN11__sanitizer23SetAlternateSignalStackEv>
 488:	mov	w0, #0xb                   	// #11
 48c:	mov	x1, x19
 490:	bl	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 494:	mov	w0, #0x7                   	// #7
 498:	mov	x1, x19
 49c:	bl	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 4a0:	mov	w0, #0x6                   	// #6
 4a4:	mov	x1, x19
 4a8:	bl	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 4ac:	mov	w0, #0x8                   	// #8
 4b0:	mov	x1, x19
 4b4:	bl	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 4b8:	mov	w0, #0x4                   	// #4
 4bc:	mov	x1, x19
 4c0:	bl	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 4c4:	mov	w0, #0x5                   	// #5
 4c8:	mov	x1, x19
 4cc:	ldp	x30, x19, [sp], #16
 4d0:	b	4d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>

00000000000004d4 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>:
 4d4:	sub	sp, sp, #0xc0
 4d8:	str	x30, [sp, #160]
 4dc:	stp	x20, x19, [sp, #176]
 4e0:	mov	x20, x1
 4e4:	mov	w19, w0
 4e8:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
 4ec:	cbz	w0, 560 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0x8c>
 4f0:	add	x0, sp, #0x8
 4f4:	mov	w2, #0x98                  	// #152
 4f8:	mov	w1, wzr
 4fc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 500:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 504:	ldr	x8, [x8]
 508:	mov	w9, #0x4                   	// #4
 50c:	movk	w9, #0x4800, lsl #16
 510:	add	x1, sp, #0x8
 514:	ldrb	w8, [x8, #97]
 518:	mov	w0, w19
 51c:	mov	x2, xzr
 520:	str	x20, [sp, #8]
 524:	cmp	w8, #0x0
 528:	mov	w8, #0x4                   	// #4
 52c:	movk	w8, #0x4000, lsl #16
 530:	csel	w8, w8, w9, eq  // eq = none
 534:	str	w8, [sp, #144]
 538:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 53c:	cbnz	w0, 570 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0x9c>
 540:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 544:	ldr	x8, [x8]
 548:	ldr	w8, [x8]
 54c:	cbz	w8, 560 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0x8c>
 550:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 554:	add	x0, x0, #0x0
 558:	mov	w1, w19
 55c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 560:	ldp	x20, x19, [sp, #176]
 564:	ldr	x30, [sp, #160]
 568:	add	sp, sp, #0xc0
 56c:	ret
 570:	sxtw	x4, w0
 574:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 578:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 57c:	add	x0, x0, #0x0
 580:	add	x2, x2, #0x0
 584:	mov	w1, #0xd2                  	// #210
 588:	mov	x3, xzr
 58c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000590 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv>:
 590:	stp	x30, x21, [sp, #-32]!
 594:	stp	x20, x19, [sp, #16]
 598:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 59c:	ldr	x21, [x21]
 5a0:	mov	x19, x0
 5a4:	ldr	x20, [x19, #16]
 5a8:	ldr	x0, [x21]
 5ac:	cbz	x0, 5c4 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x34>
 5b0:	ldr	x8, [x19, #32]
 5b4:	add	x9, x0, x20
 5b8:	cmp	x9, x8
 5bc:	b.ls	61c <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x8c>  // b.plast
 5c0:	b	5dc <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x4c>
 5c4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 5c8:	str	x0, [x21]
 5cc:	ldr	x8, [x19, #32]
 5d0:	add	x9, x0, x20
 5d4:	cmp	x9, x8
 5d8:	b.ls	61c <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x8c>  // b.plast
 5dc:	ldr	x9, [x19, #16]
 5e0:	mov	w10, #0xffff                	// #65535
 5e4:	add	x8, x8, x10
 5e8:	cmp	x9, x8
 5ec:	b.cs	61c <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x8c>  // b.hs, b.nlast
 5f0:	adrp	x9, 0 <_ZN11__sanitizer14si_SEGV_MAPERRE>
 5f4:	ldr	x8, [x19]
 5f8:	ldr	x9, [x9]
 5fc:	ldr	w8, [x8, #8]
 600:	ldr	w9, [x9]
 604:	cmp	w8, w9
 608:	b.ne	62c <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x9c>  // b.any
 60c:	mov	w0, #0x1                   	// #1
 610:	ldp	x20, x19, [sp, #16]
 614:	ldp	x30, x21, [sp], #32
 618:	ret
 61c:	mov	w0, wzr
 620:	ldp	x20, x19, [sp, #16]
 624:	ldp	x30, x21, [sp], #32
 628:	ret
 62c:	adrp	x9, 0 <_ZN11__sanitizer14si_SEGV_ACCERRE>
 630:	ldr	x9, [x9]
 634:	ldr	w9, [x9]
 638:	cmp	w8, w9
 63c:	cset	w0, eq  // eq = none
 640:	ldp	x20, x19, [sp, #16]
 644:	ldp	x30, x21, [sp], #32
 648:	ret

000000000000064c <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>:
 64c:	sub	sp, sp, #0x30
 650:	stp	x30, x21, [sp, #16]
 654:	stp	x20, x19, [sp, #32]
 658:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 65c:	ldr	x21, [x21]
 660:	mov	x19, x1
 664:	mov	x20, x0
 668:	ldr	x8, [x21]
 66c:	cbnz	x8, 67c <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x30>
 670:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 674:	mov	x8, x0
 678:	str	x0, [x21]
 67c:	add	x8, x8, x8, lsl #2
 680:	lsl	x4, x8, #1
 684:	cmp	x4, x19
 688:	b.ls	700 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xb4>  // b.plast
 68c:	add	x0, sp, #0x8
 690:	bl	0 <pipe>
 694:	cbz	w0, 6a0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x54>
 698:	mov	w19, wzr
 69c:	b	6ec <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xa0>
 6a0:	ldr	w0, [sp, #12]
 6a4:	mov	x1, x20
 6a8:	mov	x2, x19
 6ac:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
 6b0:	add	x1, sp, #0x4
 6b4:	mov	x20, x0
 6b8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 6bc:	tbz	w0, #0, 6d4 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x88>
 6c0:	ldrsw	x4, [sp, #4]
 6c4:	cmp	w4, #0xe
 6c8:	b.ne	71c <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xd0>  // b.any
 6cc:	mov	w19, wzr
 6d0:	b	6dc <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x90>
 6d4:	cmp	x20, x19
 6d8:	cset	w19, eq  // eq = none
 6dc:	ldr	w0, [sp, #8]
 6e0:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 6e4:	ldr	w0, [sp, #12]
 6e8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 6ec:	mov	w0, w19
 6f0:	ldp	x20, x19, [sp, #32]
 6f4:	ldp	x30, x21, [sp, #16]
 6f8:	add	sp, sp, #0x30
 6fc:	ret
 700:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 704:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 708:	add	x0, x0, #0x0
 70c:	add	x2, x2, #0x0
 710:	mov	w1, #0x118                 	// #280
 714:	mov	x3, x19
 718:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 71c:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 720:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 724:	add	x0, x0, #0x0
 728:	add	x2, x2, #0x0
 72c:	mov	w1, #0x121                 	// #289
 730:	mov	w3, #0xe                   	// #14
 734:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000738 <_ZN11__sanitizer28PlatformPrepareForSandboxingEP29__sanitizer_sandbox_arguments>:
 738:	b	0 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>

000000000000073c <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc>:
 73c:	str	x30, [sp, #-48]!
 740:	stp	x22, x21, [sp, #16]
 744:	stp	x20, x19, [sp, #32]
 748:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 74c:	ldr	x22, [x22]
 750:	mov	x19, x2
 754:	mov	x20, x1
 758:	mov	x21, x0
 75c:	ldr	x8, [x22]
 760:	cbnz	x8, 770 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0x34>
 764:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 768:	mov	x8, x0
 76c:	str	x0, [x22]
 770:	sub	x9, x8, #0x1
 774:	tst	x8, x9
 778:	b.ne	81c <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0xe0>  // b.any
 77c:	add	x9, x20, x8
 780:	sub	x10, x9, #0x1
 784:	neg	x9, x8
 788:	and	x20, x10, x9
 78c:	cbnz	x8, 79c <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0x60>
 790:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 794:	neg	x9, x0
 798:	str	x0, [x22]
 79c:	and	x21, x9, x21
 7a0:	mov	w2, #0x3                   	// #3
 7a4:	mov	w3, #0x4032                	// #16434
 7a8:	mov	x0, x21
 7ac:	mov	x1, x20
 7b0:	mov	x4, x19
 7b4:	bl	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>
 7b8:	add	x1, sp, #0xc
 7bc:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 7c0:	tbz	w0, #0, 800 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0xc4>
 7c4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 7c8:	ldr	x8, [x8]
 7cc:	ldr	w5, [sp, #12]
 7d0:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 7d4:	add	x0, x0, #0x0
 7d8:	ldr	x1, [x8]
 7dc:	mov	x2, x20
 7e0:	mov	x3, x20
 7e4:	mov	x4, x21
 7e8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 7ec:	mov	w0, wzr
 7f0:	ldp	x20, x19, [sp, #32]
 7f4:	ldp	x22, x21, [sp, #16]
 7f8:	ldr	x30, [sp], #48
 7fc:	ret
 800:	mov	x0, x20
 804:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
 808:	mov	w0, #0x1                   	// #1
 80c:	ldp	x20, x19, [sp, #32]
 810:	ldp	x22, x21, [sp, #16]
 814:	ldr	x30, [sp], #48
 818:	ret
 81c:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 820:	add	x0, x0, #0x0
 824:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 828:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000082c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc>:
 82c:	stp	x30, x21, [sp, #-32]!
 830:	stp	x20, x19, [sp, #16]
 834:	mov	x19, x1
 838:	mov	x20, x0
 83c:	bl	73c <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc>
 840:	mov	w21, w0
 844:	tbz	w0, #0, 86c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x40>
 848:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 84c:	ldr	x8, [x8]
 850:	mov	x0, x20
 854:	mov	x1, x19
 858:	ldrb	w8, [x8, #208]
 85c:	cmp	w8, #0x0
 860:	mov	w8, #0xe                   	// #14
 864:	cinc	w2, w8, ne  // ne = any
 868:	bl	0 <madvise>
 86c:	ldp	x20, x19, [sp, #16]
 870:	and	w0, w21, #0x1
 874:	ldp	x30, x21, [sp], #32
 878:	ret

000000000000087c <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm>:
 87c:	stp	x30, x21, [sp, #-32]!
 880:	stp	x20, x19, [sp, #16]
 884:	mov	x19, x2
 888:	mov	x21, x1
 88c:	mov	x20, x0
 890:	cbz	x3, 8b4 <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm+0x38>
 894:	mov	x8, x3
 898:	mov	w3, #0x4032                	// #16434
 89c:	mov	x0, x8
 8a0:	mov	x1, x21
 8a4:	mov	w2, wzr
 8a8:	mov	x4, x19
 8ac:	bl	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>
 8b0:	b	8d0 <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm+0x54>
 8b4:	mov	w3, #0x4022                	// #16418
 8b8:	mov	w4, #0xffffffff            	// #-1
 8bc:	mov	x0, xzr
 8c0:	mov	x1, x21
 8c4:	mov	w2, wzr
 8c8:	mov	x5, xzr
 8cc:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8d0:	stp	x0, x21, [x20]
 8d4:	str	x19, [x20, #16]
 8d8:	ldp	x20, x19, [sp, #16]
 8dc:	ldp	x30, x21, [sp], #32
 8e0:	ret

00000000000008e4 <_ZN11__sanitizer17MmapFixedNoAccessEmmPKc>:
 8e4:	mov	x4, x2
 8e8:	mov	w3, #0x4032                	// #16434
 8ec:	mov	w2, wzr
 8f0:	b	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>

00000000000008f4 <_ZN11__sanitizer12MmapNoAccessEm>:
 8f4:	mov	w3, #0x4022                	// #16418
 8f8:	mov	w4, #0xffffffff            	// #-1
 8fc:	mov	x1, x0
 900:	mov	x0, xzr
 904:	mov	w2, wzr
 908:	mov	x5, xzr
 90c:	b	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>

0000000000000910 <_ZN11__sanitizer20ReservedAddressRange3MapEmmPKc>:
 910:	mov	x0, x1
 914:	mov	x1, x2
 918:	mov	x2, x3
 91c:	b	0 <_ZN11__sanitizer26MmapFixedOrDieOnFatalErrorEmmPKc>

0000000000000920 <_ZN11__sanitizer20ReservedAddressRange8MapOrDieEmmPKc>:
 920:	mov	x0, x1
 924:	mov	x1, x2
 928:	mov	x2, x3
 92c:	b	0 <_ZN11__sanitizer14MmapFixedOrDieEmmPKc>

0000000000000930 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm>:
 930:	str	x30, [sp, #-16]!
 934:	ldr	x4, [x0, #8]
 938:	mov	x8, x2
 93c:	subs	x9, x4, x2
 940:	b.cc	988 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x58>  // b.lo, b.ul, b.last
 944:	ldr	x10, [x0]
 948:	cmp	x10, x1
 94c:	b.ne	964 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x34>  // b.any
 950:	add	x10, x8, x1
 954:	cmp	x4, x8
 958:	csel	x10, xzr, x10, eq  // eq = none
 95c:	str	x10, [x0]
 960:	b	974 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x44>
 964:	add	x3, x8, x1
 968:	add	x4, x10, x4
 96c:	cmp	x3, x4
 970:	b.ne	9a4 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x74>  // b.any
 974:	str	x9, [x0, #8]
 978:	mov	x0, x1
 97c:	mov	x1, x8
 980:	ldr	x30, [sp], #16
 984:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 988:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 98c:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 990:	add	x0, x0, #0x0
 994:	add	x2, x2, #0x0
 998:	mov	w1, #0x16d                 	// #365
 99c:	mov	x3, x8
 9a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 9a4:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 9a8:	adrp	x2, 0 <_ZN11__sanitizer6GetUidEv>
 9ac:	add	x0, x0, #0x0
 9b0:	add	x2, x2, #0x0
 9b4:	mov	w1, #0x172                 	// #370
 9b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000009bc <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm>:
 9bc:	adrp	x8, 0 <real_pthread_attr_getstack>
 9c0:	ldr	x8, [x8]
 9c4:	cbz	x8, 9d8 <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm+0x1c>
 9c8:	str	x30, [sp, #-16]!
 9cc:	bl	0 <real_pthread_attr_getstack>
 9d0:	ldr	x30, [sp], #16
 9d4:	ret
 9d8:	b	0 <pthread_attr_getstack>

00000000000009dc <_ZN11__sanitizer15AdjustStackSizeEPv>:
 9dc:	sub	sp, sp, #0x40
 9e0:	stp	x30, xzr, [sp, #16]
 9e4:	stp	x22, x21, [sp, #32]
 9e8:	stp	x20, x19, [sp, #48]
 9ec:	adrp	x8, 0 <real_pthread_attr_getstack>
 9f0:	ldr	x8, [x8]
 9f4:	mov	x19, x0
 9f8:	add	x1, sp, #0x18
 9fc:	add	x2, sp, #0x8
 a00:	str	xzr, [sp, #8]
 a04:	cbz	x8, a10 <_ZN11__sanitizer15AdjustStackSizeEPv+0x34>
 a08:	bl	0 <real_pthread_attr_getstack>
 a0c:	b	a14 <_ZN11__sanitizer15AdjustStackSizeEPv+0x38>
 a10:	bl	0 <pthread_attr_getstack>
 a14:	ldr	x21, [sp, #24]
 a18:	ldr	x22, [sp, #8]
 a1c:	bl	0 <_ZN11__sanitizer10GetTlsSizeEv>
 a20:	ldr	x1, [sp, #8]
 a24:	add	x20, x0, #0x20, lsl #12
 a28:	cmp	x1, x20
 a2c:	b.cs	a90 <_ZN11__sanitizer15AdjustStackSizeEPv+0xb4>  // b.hs, b.nlast
 a30:	cbz	x21, a60 <_ZN11__sanitizer15AdjustStackSizeEPv+0x84>
 a34:	neg	x8, x22
 a38:	cmp	x21, x8
 a3c:	b.eq	a60 <_ZN11__sanitizer15AdjustStackSizeEPv+0x84>  // b.none
 a40:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 a44:	add	x0, x0, #0x0
 a48:	mov	x2, x20
 a4c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 a50:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 a54:	add	x0, x0, #0x0
 a58:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 a5c:	b	a90 <_ZN11__sanitizer15AdjustStackSizeEPv+0xb4>
 a60:	cbz	x1, a90 <_ZN11__sanitizer15AdjustStackSizeEPv+0xb4>
 a64:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 a68:	ldr	x8, [x8]
 a6c:	ldr	w8, [x8]
 a70:	cbz	w8, a84 <_ZN11__sanitizer15AdjustStackSizeEPv+0xa8>
 a74:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 a78:	add	x0, x0, #0x0
 a7c:	mov	x2, x20
 a80:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 a84:	mov	x0, x19
 a88:	mov	x1, x20
 a8c:	bl	0 <pthread_attr_setstacksize>
 a90:	ldp	x20, x19, [sp, #48]
 a94:	ldp	x22, x21, [sp, #32]
 a98:	ldr	x30, [sp, #16]
 a9c:	add	sp, sp, #0x40
 aa0:	ret

0000000000000aa4 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii>:
 aa4:	str	x30, [sp, #-64]!
 aa8:	stp	x24, x23, [sp, #16]
 aac:	stp	x22, x21, [sp, #32]
 ab0:	stp	x20, x19, [sp, #48]
 ab4:	mov	w19, w4
 ab8:	mov	w22, w3
 abc:	mov	w23, w2
 ac0:	mov	x20, x1
 ac4:	mov	x21, x0
 ac8:	bl	0 <_ZN11__sanitizer13internal_forkEv>
 acc:	mov	w24, w0
 ad0:	tbnz	w0, #31, b4c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xa8>
 ad4:	cbnz	w24, b6c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xc8>
 ad8:	cmn	w23, #0x1
 adc:	b.ne	bb4 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x110>  // b.any
 ae0:	cmn	w22, #0x1
 ae4:	b.ne	bd8 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x134>  // b.any
 ae8:	cmn	w19, #0x1
 aec:	b.eq	b0c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x68>  // b.none
 af0:	mov	w0, #0x2                   	// #2
 af4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 af8:	mov	w1, #0x2                   	// #2
 afc:	mov	w0, w19
 b00:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 b04:	mov	w0, w19
 b08:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b0c:	mov	w0, #0x4                   	// #4
 b10:	bl	0 <sysconf>
 b14:	mov	x19, x0
 b18:	cmp	w19, #0x3
 b1c:	b.lt	b38 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x94>  // b.tstop
 b20:	mov	w0, w19
 b24:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b28:	sub	w8, w19, #0x1
 b2c:	cmp	w19, #0x3
 b30:	mov	w19, w8
 b34:	b.gt	b20 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x7c>
 b38:	mov	x0, x21
 b3c:	mov	x1, x20
 b40:	bl	0 <execv>
 b44:	mov	w0, #0x1                   	// #1
 b48:	bl	0 <_ZN11__sanitizer14internal__exitEi>
 b4c:	sxtw	x0, w24
 b50:	add	x1, sp, #0xc
 b54:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 b58:	tbz	w0, #0, b6c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xc8>
 b5c:	ldr	w1, [sp, #12]
 b60:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 b64:	add	x0, x0, #0x0
 b68:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 b6c:	cmn	w23, #0x1
 b70:	b.eq	b7c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xd8>  // b.none
 b74:	mov	w0, w23
 b78:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b7c:	cmn	w22, #0x1
 b80:	b.eq	b8c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xe8>  // b.none
 b84:	mov	w0, w22
 b88:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b8c:	cmn	w19, #0x1
 b90:	b.eq	b9c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xf8>  // b.none
 b94:	mov	w0, w19
 b98:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b9c:	mov	w0, w24
 ba0:	ldp	x20, x19, [sp, #48]
 ba4:	ldp	x22, x21, [sp, #32]
 ba8:	ldp	x24, x23, [sp, #16]
 bac:	ldr	x30, [sp], #64
 bb0:	ret
 bb4:	mov	w0, wzr
 bb8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 bbc:	mov	w0, w23
 bc0:	mov	w1, wzr
 bc4:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 bc8:	mov	w0, w23
 bcc:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 bd0:	cmn	w22, #0x1
 bd4:	b.eq	ae8 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x44>  // b.none
 bd8:	mov	w0, #0x1                   	// #1
 bdc:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 be0:	mov	w1, #0x1                   	// #1
 be4:	mov	w0, w22
 be8:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 bec:	mov	w0, w22
 bf0:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 bf4:	cmn	w19, #0x1
 bf8:	b.ne	af0 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x4c>  // b.any
 bfc:	b	b0c <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x68>

0000000000000c00 <_ZN11__sanitizer16IsProcessRunningEi>:
 c00:	sub	sp, sp, #0x20
 c04:	stp	x30, x19, [sp, #16]
 c08:	add	x1, sp, #0xc
 c0c:	mov	w2, #0x1                   	// #1
 c10:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
 c14:	add	x1, sp, #0x8
 c18:	mov	x19, x0
 c1c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 c20:	tbz	w0, #0, c54 <_ZN11__sanitizer16IsProcessRunningEi+0x54>
 c24:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 c28:	ldr	x8, [x8]
 c2c:	ldr	w8, [x8]
 c30:	cbz	w8, c68 <_ZN11__sanitizer16IsProcessRunningEi+0x68>
 c34:	ldr	w1, [sp, #8]
 c38:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 c3c:	add	x0, x0, #0x0
 c40:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 c44:	mov	w0, wzr
 c48:	ldp	x30, x19, [sp, #16]
 c4c:	add	sp, sp, #0x20
 c50:	ret
 c54:	cmp	x19, #0x0
 c58:	cset	w0, eq  // eq = none
 c5c:	ldp	x30, x19, [sp, #16]
 c60:	add	sp, sp, #0x20
 c64:	ret
 c68:	mov	w0, wzr
 c6c:	ldp	x30, x19, [sp, #16]
 c70:	add	sp, sp, #0x20
 c74:	ret

0000000000000c78 <_ZN11__sanitizer14WaitForProcessEi>:
 c78:	str	x30, [sp, #-16]!
 c7c:	add	x1, sp, #0xc
 c80:	mov	w2, wzr
 c84:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
 c88:	add	x1, sp, #0x8
 c8c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 c90:	tbz	w0, #0, cc0 <_ZN11__sanitizer14WaitForProcessEi+0x48>
 c94:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 c98:	ldr	x8, [x8]
 c9c:	ldr	w8, [x8]
 ca0:	cbz	w8, ccc <_ZN11__sanitizer14WaitForProcessEi+0x54>
 ca4:	ldr	w1, [sp, #8]
 ca8:	adrp	x0, 0 <_ZN11__sanitizer6GetUidEv>
 cac:	add	x0, x0, #0x0
 cb0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 cb4:	mov	w0, #0xffffffff            	// #-1
 cb8:	ldr	x30, [sp], #16
 cbc:	ret
 cc0:	ldr	w0, [sp, #12]
 cc4:	ldr	x30, [sp], #16
 cc8:	ret
 ccc:	mov	w0, #0xffffffff            	// #-1
 cd0:	ldr	x30, [sp], #16
 cd4:	ret

0000000000000cd8 <_ZN11__sanitizer15IsStateDetachedEi>:
 cd8:	cmp	w0, #0x1
 cdc:	cset	w0, eq  // eq = none
 ce0:	ret

sanitizer_stoptheworld_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>:
   0:	sub	sp, sp, #0x40
   4:	str	x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	ldr	x8, [x0, #32]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	cbz	x8, 3c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x3c>
  20:	ldr	x9, [x20, #16]
  24:	ldr	x10, [x9]
  28:	cmp	x10, x19
  2c:	b.eq	150 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x150>  // b.none
  30:	subs	x8, x8, #0x1
  34:	add	x9, x9, #0x8
  38:	b.ne	24 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x24>  // b.any
  3c:	mov	w0, #0x10                  	// #16
  40:	mov	w1, w19
  44:	mov	x2, xzr
  48:	mov	x3, xzr
  4c:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
  50:	add	x1, sp, #0xc
  54:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
  58:	adrp	x22, 0 <_ZN11__sanitizer17current_verbosityE>
  5c:	ldr	x22, [x22]
  60:	ldr	w8, [x22]
  64:	tbz	w0, #0, 84 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x84>
  68:	cbz	w8, 150 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x150>
  6c:	ldr	w2, [sp, #12]
  70:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
  74:	add	x0, x0, #0x0
  78:	mov	x1, x19
  7c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  80:	b	150 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x150>
  84:	cmp	w8, #0x2
  88:	b.cc	9c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x9c>  // b.lo, b.ul, b.last
  8c:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
  90:	add	x0, x0, #0x0
  94:	mov	x1, x19
  98:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  9c:	add	x1, sp, #0x18
  a0:	mov	w2, #0x40000000            	// #1073741824
  a4:	mov	w0, w19
  a8:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
  ac:	add	x1, sp, #0x8
  b0:	mov	x21, x0
  b4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
  b8:	tbz	w0, #0, c8 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0xc8>
  bc:	ldr	w8, [sp, #8]
  c0:	cmp	w8, #0x4
  c4:	b.eq	9c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x9c>  // b.none
  c8:	add	x1, sp, #0x8
  cc:	mov	x0, x21
  d0:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
  d4:	tbnz	w0, #0, 120 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x120>
  d8:	ldr	w8, [sp, #24]
  dc:	and	w9, w8, #0xff
  e0:	cmp	w9, #0x7f
  e4:	b.ne	108 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x108>  // b.any
  e8:	ubfx	x3, x8, #8, #8
  ec:	cmp	w3, #0x13
  f0:	b.eq	108 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x108>  // b.none
  f4:	mov	w0, #0x7                   	// #7
  f8:	mov	w1, w19
  fc:	mov	x2, xzr
 100:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 104:	b	9c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x9c>
 108:	add	x0, x20, #0x10
 10c:	add	x1, sp, #0x18
 110:	str	x19, [sp, #24]
 114:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 118:	mov	w0, #0x1                   	// #1
 11c:	b	154 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x154>
 120:	ldr	w8, [x22]
 124:	cbz	w8, 13c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x13c>
 128:	ldr	w2, [sp, #8]
 12c:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 130:	add	x0, x0, #0x0
 134:	mov	x1, x19
 138:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 13c:	mov	w0, #0x11                  	// #17
 140:	mov	w1, w19
 144:	mov	x2, xzr
 148:	mov	x3, xzr
 14c:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 150:	mov	w0, wzr
 154:	ldp	x20, x19, [sp, #48]
 158:	ldp	x22, x21, [sp, #32]
 15c:	ldr	x30, [sp, #16]
 160:	add	sp, sp, #0x40
 164:	ret

0000000000000168 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy>:
 168:	ldr	x8, [x0, #24]
 16c:	cbz	x8, 190 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x28>
 170:	ldr	x9, [x0, #8]
 174:	mov	x10, xzr
 178:	ldr	x11, [x9, x10, lsl #3]
 17c:	cmp	x11, x1
 180:	b.eq	198 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x30>  // b.none
 184:	add	x10, x10, #0x1
 188:	cmp	x10, x8
 18c:	b.cc	178 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x10>  // b.lo, b.ul, b.last
 190:	mov	w0, wzr
 194:	ret
 198:	mov	w0, #0x1                   	// #1
 19c:	ret

00000000000001a0 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy>:
 1a0:	str	x30, [sp, #-16]!
 1a4:	str	x1, [sp, #8]
 1a8:	add	x0, x0, #0x8
 1ac:	add	x1, sp, #0x8
 1b0:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 1b4:	ldr	x30, [sp], #16
 1b8:	ret

00000000000001bc <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv>:
 1bc:	str	x30, [sp, #-64]!
 1c0:	stp	x24, x23, [sp, #16]
 1c4:	stp	x22, x21, [sp, #32]
 1c8:	stp	x20, x19, [sp, #48]
 1cc:	ldr	x8, [x0, #32]
 1d0:	cbz	x8, 264 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0xa8>
 1d4:	adrp	x24, 0 <_ZN11__sanitizer17current_verbosityE>
 1d8:	ldr	x24, [x24]
 1dc:	adrp	x20, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 1e0:	adrp	x21, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 1e4:	mov	x19, x0
 1e8:	mov	x23, xzr
 1ec:	add	x20, x20, #0x0
 1f0:	add	x21, x21, #0x0
 1f4:	b	208 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x4c>
 1f8:	ldr	x8, [x19, #32]
 1fc:	add	x23, x23, #0x1
 200:	cmp	x23, x8
 204:	b.cs	264 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0xa8>  // b.hs, b.nlast
 208:	ldr	x8, [x19, #16]
 20c:	mov	w0, #0x11                  	// #17
 210:	mov	x2, xzr
 214:	mov	x3, xzr
 218:	ldr	x22, [x8, x23, lsl #3]
 21c:	mov	w1, w22
 220:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 224:	add	x1, sp, #0xc
 228:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 22c:	ldr	w8, [x24]
 230:	tbz	w0, #0, 24c <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x90>
 234:	cbz	w8, 1f8 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x3c>
 238:	ldr	w2, [sp, #12]
 23c:	mov	x0, x20
 240:	mov	w1, w22
 244:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 248:	b	1f8 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x3c>
 24c:	cmp	w8, #0x2
 250:	b.cc	1f8 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x3c>  // b.lo, b.ul, b.last
 254:	mov	x0, x21
 258:	mov	w1, w22
 25c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 260:	b	1f8 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x3c>
 264:	ldp	x20, x19, [sp, #48]
 268:	ldp	x22, x21, [sp, #32]
 26c:	ldp	x24, x23, [sp, #16]
 270:	ldr	x30, [sp], #64
 274:	ret

0000000000000278 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>:
 278:	ldr	x0, [x0, #24]
 27c:	ret

0000000000000280 <_ZNK11__sanitizer25SuspendedThreadsListLinux11GetThreadIDEm>:
 280:	str	x30, [sp, #-16]!
 284:	ldr	x4, [x0, #24]
 288:	mov	x3, x1
 28c:	cmp	x4, x1
 290:	b.ls	2a4 <_ZNK11__sanitizer25SuspendedThreadsListLinux11GetThreadIDEm+0x24>  // b.plast
 294:	ldr	x8, [x0, #8]
 298:	ldr	x0, [x8, x3, lsl #3]
 29c:	ldr	x30, [sp], #16
 2a0:	ret
 2a4:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 2a8:	adrp	x2, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 2ac:	add	x0, x0, #0x0
 2b0:	add	x2, x2, #0x0
 2b4:	mov	w1, #0x204                 	// #516
 2b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002bc <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv>:
 2bc:	str	x30, [sp, #-32]!
 2c0:	stp	x20, x19, [sp, #16]
 2c4:	ldr	x8, [x0, #32]
 2c8:	cbz	x8, 2fc <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv+0x40>
 2cc:	mov	x19, x0
 2d0:	mov	x20, xzr
 2d4:	ldr	x8, [x19, #16]
 2d8:	mov	w0, #0x8                   	// #8
 2dc:	mov	x2, xzr
 2e0:	mov	x3, xzr
 2e4:	ldr	x1, [x8, x20, lsl #3]
 2e8:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 2ec:	ldr	x8, [x19, #32]
 2f0:	add	x20, x20, #0x1
 2f4:	cmp	x20, x8
 2f8:	b.cc	2d4 <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv+0x18>  // b.lo, b.ul, b.last
 2fc:	ldp	x20, x19, [sp, #16]
 300:	ldr	x30, [sp], #32
 304:	ret

0000000000000308 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv>:
 308:	sub	sp, sp, #0x80
 30c:	str	x30, [sp, #64]
 310:	stp	x24, x23, [sp, #80]
 314:	stp	x22, x21, [sp, #96]
 318:	stp	x20, x19, [sp, #112]
 31c:	ldr	w1, [x0, #40]
 320:	mov	x19, x0
 324:	add	x0, sp, #0x20
 328:	bl	0 <_ZN11__sanitizer12ThreadListerC1Ei>
 32c:	add	x0, sp, #0x8
 330:	mov	w1, #0x80                  	// #128
 334:	stp	xzr, xzr, [sp, #16]
 338:	str	xzr, [sp, #8]
 33c:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 340:	mov	w20, wzr
 344:	add	x0, sp, #0x20
 348:	add	x1, sp, #0x8
 34c:	bl	0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE>
 350:	cmp	w0, #0x1
 354:	b.eq	36c <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x64>  // b.none
 358:	cbz	w0, 3bc <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xb4>
 35c:	mov	w21, wzr
 360:	ldr	x8, [sp, #24]
 364:	cbnz	x8, 378 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x70>
 368:	b	39c <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x94>
 36c:	mov	w21, #0x1                   	// #1
 370:	ldr	x8, [sp, #24]
 374:	cbz	x8, 39c <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x94>
 378:	ldr	x22, [sp, #8]
 37c:	lsl	x23, x8, #3
 380:	ldr	x1, [x22], #8
 384:	mov	x0, x19
 388:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 38c:	tst	w0, #0x1
 390:	csinc	w21, w21, wzr, eq  // eq = none
 394:	subs	x23, x23, #0x8
 398:	b.ne	380 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x78>  // b.any
 39c:	cmp	w20, #0x1c
 3a0:	b.hi	3ac <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xa4>  // b.pmore
 3a4:	add	w20, w20, #0x1
 3a8:	tbnz	w21, #0, 344 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x3c>
 3ac:	ldr	x8, [x19, #32]
 3b0:	cmp	x8, #0x0
 3b4:	cset	w19, ne  // ne = any
 3b8:	b	454 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x14c>
 3bc:	ldr	x8, [x19, #32]
 3c0:	cbz	x8, 450 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x148>
 3c4:	adrp	x24, 0 <_ZN11__sanitizer17current_verbosityE>
 3c8:	ldr	x24, [x24]
 3cc:	adrp	x20, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 3d0:	adrp	x21, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 3d4:	mov	x23, xzr
 3d8:	add	x20, x20, #0x0
 3dc:	add	x21, x21, #0x0
 3e0:	b	3f4 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xec>
 3e4:	ldr	x8, [x19, #32]
 3e8:	add	x23, x23, #0x1
 3ec:	cmp	x23, x8
 3f0:	b.cs	450 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x148>  // b.hs, b.nlast
 3f4:	ldr	x8, [x19, #16]
 3f8:	mov	w0, #0x11                  	// #17
 3fc:	mov	x2, xzr
 400:	mov	x3, xzr
 404:	ldr	x22, [x8, x23, lsl #3]
 408:	mov	w1, w22
 40c:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 410:	add	x1, sp, #0x4c
 414:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 418:	ldr	w8, [x24]
 41c:	tbz	w0, #0, 438 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x130>
 420:	cbz	w8, 3e4 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xdc>
 424:	ldr	w2, [sp, #76]
 428:	mov	x0, x20
 42c:	mov	w1, w22
 430:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 434:	b	3e4 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xdc>
 438:	cmp	w8, #0x2
 43c:	b.cc	3e4 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xdc>  // b.lo, b.ul, b.last
 440:	mov	x0, x21
 444:	mov	w1, w22
 448:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 44c:	b	3e4 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xdc>
 450:	mov	w19, wzr
 454:	ldp	x0, x1, [sp, #8]
 458:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 45c:	add	x0, sp, #0x20
 460:	bl	0 <_ZN11__sanitizer12ThreadListerD1Ev>
 464:	mov	w0, w19
 468:	ldp	x20, x19, [sp, #112]
 46c:	ldp	x22, x21, [sp, #96]
 470:	ldp	x24, x23, [sp, #80]
 474:	ldr	x30, [sp, #64]
 478:	add	sp, sp, #0x80
 47c:	ret

0000000000000480 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_>:
 480:	sub	sp, sp, #0xc0
 484:	stp	x30, x25, [sp, #128]
 488:	stp	x24, x23, [sp, #144]
 48c:	stp	x22, x21, [sp, #160]
 490:	stp	x20, x19, [sp, #176]
 494:	mov	x20, x1
 498:	mov	x21, x0
 49c:	mov	w0, #0x3                   	// #3
 4a0:	mov	x1, xzr
 4a4:	mov	x2, xzr
 4a8:	mov	x3, xzr
 4ac:	mov	x4, xzr
 4b0:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
 4b4:	mov	x19, x0
 4b8:	cbnz	w19, 4d4 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x54>
 4bc:	mov	w0, #0x4                   	// #4
 4c0:	mov	w1, #0x1                   	// #1
 4c4:	mov	x2, xzr
 4c8:	mov	x3, xzr
 4cc:	mov	x4, xzr
 4d0:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
 4d4:	add	x8, sp, #0x8
 4d8:	add	x22, x8, #0x10
 4dc:	mov	x0, x22
 4e0:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
 4e4:	stp	x21, x20, [sp, #8]
 4e8:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 4ec:	str	x0, [sp, #120]
 4f0:	str	xzr, [sp, #112]
 4f4:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 4f8:	ldr	x20, [x20]
 4fc:	ldr	x23, [x20]
 500:	cbnz	x23, 510 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x90>
 504:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 508:	mov	x23, x0
 50c:	str	x0, [x20]
 510:	add	x20, x23, #0x200, lsl #12
 514:	adrp	x1, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 518:	add	x1, x1, #0x0
 51c:	mov	x0, x20
 520:	mov	w2, wzr
 524:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 528:	mov	x1, x23
 52c:	mov	x21, x0
 530:	bl	0 <_ZN11__sanitizer16MprotectNoAccessEmm>
 534:	tbz	w0, #0, 734 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x2b4>
 538:	mov	x0, x22
 53c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 540:	adrp	x23, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 544:	add	x23, x23, #0x0
 548:	mov	x0, x23
 54c:	bl	0 <_ZN11__sanitizer19internal_sigfillsetEPNS_20__sanitizer_sigset_tE>
 550:	mov	w1, #0x6                   	// #6
 554:	mov	x0, x23
 558:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 55c:	mov	w1, #0x4                   	// #4
 560:	mov	x0, x23
 564:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 568:	mov	w1, #0x8                   	// #8
 56c:	mov	x0, x23
 570:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 574:	mov	w1, #0xb                   	// #11
 578:	mov	x0, x23
 57c:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 580:	mov	w1, #0x7                   	// #7
 584:	mov	x0, x23
 588:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 58c:	mov	w1, #0x18                  	// #24
 590:	mov	x0, x23
 594:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 598:	mov	w1, #0x19                  	// #25
 59c:	mov	x0, x23
 5a0:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
 5a4:	add	x2, x23, #0x80
 5a8:	mov	w0, wzr
 5ac:	mov	x1, x23
 5b0:	bl	0 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>
 5b4:	lsl	x8, x0, #32
 5b8:	cbnz	x8, 754 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x2d4>
 5bc:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 5c0:	mov	w2, #0x700                 	// #1792
 5c4:	add	x1, x20, x21
 5c8:	add	x0, x0, #0x0
 5cc:	add	x3, sp, #0x8
 5d0:	movk	w2, #0x80, lsl #16
 5d4:	mov	x4, xzr
 5d8:	mov	x5, xzr
 5dc:	mov	x6, xzr
 5e0:	bl	0 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_>
 5e4:	adrp	x1, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 5e8:	mov	x23, x0
 5ec:	add	x1, x1, #0x0
 5f0:	mov	w0, #0x2                   	// #2
 5f4:	mov	x2, xzr
 5f8:	bl	0 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>
 5fc:	add	x1, sp, #0x4
 600:	mov	x0, x23
 604:	str	wzr, [sp, #4]
 608:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 60c:	tbz	w0, #0, 64c <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x1cc>
 610:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 614:	ldr	x8, [x8]
 618:	ldr	w8, [x8]
 61c:	cbz	w8, 630 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x1b0>
 620:	ldr	w1, [sp, #4]
 624:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 628:	add	x0, x0, #0x0
 62c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 630:	mov	x0, x22
 634:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 638:	mov	x0, x21
 63c:	mov	x1, x20
 640:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 644:	cbnz	w19, 71c <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x29c>
 648:	b	704 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x284>
 64c:	adrp	x24, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
 650:	ldr	x24, [x24]
 654:	str	x23, [x24]
 658:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 65c:	adrp	x25, 0 <_ZN11__sanitizer24stoptheworld_tracer_ppidE>
 660:	ldr	x25, [x25]
 664:	mov	x1, x23
 668:	mov	x2, xzr
 66c:	mov	x3, xzr
 670:	str	x0, [x25]
 674:	mov	w0, #0x6d61                	// #28001
 678:	movk	w0, #0x5961, lsl #16
 67c:	mov	x4, xzr
 680:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
 684:	mov	x0, x22
 688:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 68c:	ldr	x8, [sp, #112]
 690:	cbnz	x8, 6b0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x230>
 694:	bl	0 <sched_yield>
 698:	ldr	x8, [sp, #112]
 69c:	cbz	x8, 694 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x214>
 6a0:	b	6b0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x230>
 6a4:	ldr	w1, [sp, #4]
 6a8:	cmp	w1, #0x4
 6ac:	b.ne	6d0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x250>  // b.any
 6b0:	mov	w2, #0x40000000            	// #1073741824
 6b4:	mov	w0, w23
 6b8:	mov	x1, xzr
 6bc:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
 6c0:	add	x1, sp, #0x4
 6c4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 6c8:	tbnz	w0, #0, 6a4 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x224>
 6cc:	b	6ec <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x26c>
 6d0:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 6d4:	ldr	x8, [x8]
 6d8:	ldr	w8, [x8]
 6dc:	cbz	w8, 6ec <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x26c>
 6e0:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 6e4:	add	x0, x0, #0x0
 6e8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 6ec:	str	xzr, [x24]
 6f0:	str	xzr, [x25]
 6f4:	mov	x0, x21
 6f8:	mov	x1, x20
 6fc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 700:	cbnz	w19, 71c <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x29c>
 704:	mov	w0, #0x4                   	// #4
 708:	mov	x1, xzr
 70c:	mov	x2, xzr
 710:	mov	x3, xzr
 714:	mov	x4, xzr
 718:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
 71c:	ldp	x20, x19, [sp, #176]
 720:	ldp	x22, x21, [sp, #160]
 724:	ldp	x24, x23, [sp, #144]
 728:	ldp	x30, x25, [sp, #128]
 72c:	add	sp, sp, #0xc0
 730:	ret
 734:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 738:	adrp	x2, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 73c:	add	x0, x0, #0x0
 740:	add	x2, x2, #0x0
 744:	mov	w1, #0x154                 	// #340
 748:	mov	x3, xzr
 74c:	mov	x4, xzr
 750:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 754:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 758:	adrp	x2, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 75c:	asr	x3, x8, #32
 760:	add	x0, x0, #0x0
 764:	add	x2, x2, #0x0
 768:	mov	w1, #0x1ae                 	// #430
 76c:	mov	x4, xzr
 770:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000774 <_ZN11__sanitizerL12TracerThreadEPv>:
 774:	sub	sp, sp, #0x150
 778:	stp	x29, x30, [sp, #256]
 77c:	stp	x26, x25, [sp, #272]
 780:	stp	x24, x23, [sp, #288]
 784:	stp	x22, x21, [sp, #304]
 788:	stp	x20, x19, [sp, #320]
 78c:	mov	x19, x0
 790:	mov	w0, #0x1                   	// #1
 794:	mov	w1, #0x9                   	// #9
 798:	mov	x2, xzr
 79c:	mov	x3, xzr
 7a0:	mov	x4, xzr
 7a4:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
 7a8:	bl	0 <_ZN11__sanitizer16internal_getppidEv>
 7ac:	ldr	x8, [x19, #112]
 7b0:	cmp	x0, x8
 7b4:	b.ne	b10 <_ZN11__sanitizerL12TracerThreadEPv+0x39c>  // b.any
 7b8:	add	x20, x19, #0x10
 7bc:	mov	x0, x20
 7c0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 7c4:	mov	x0, x20
 7c8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 7cc:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 7d0:	add	x0, x0, #0x0
 7d4:	bl	0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 7d8:	tbz	w0, #0, b18 <_ZN11__sanitizerL12TracerThreadEPv+0x3a4>
 7dc:	add	x21, sp, #0xb8
 7e0:	bl	0 <_ZN11__sanitizer16internal_getppidEv>
 7e4:	adrp	x23, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 7e8:	add	x22, sp, #0xd0
 7ec:	mov	x20, x0
 7f0:	add	x23, x23, #0x0
 7f4:	movi	v0.2d, #0x0
 7f8:	add	x0, x22, #0x10
 7fc:	mov	w1, #0x400                 	// #1024
 800:	stp	x19, x23, [sp, #208]
 804:	stur	q0, [x21, #48]
 808:	str	xzr, [sp, #224]
 80c:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 810:	adrp	x24, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 814:	movi	v0.2d, #0x0
 818:	add	x0, sp, #0xb8
 81c:	mov	w1, #0x2000                	// #8192
 820:	str	w20, [sp, #248]
 824:	stur	q0, [x21, #8]
 828:	str	x22, [x24]
 82c:	str	xzr, [sp, #184]
 830:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 834:	ldr	x8, [sp, #200]
 838:	lsr	x9, x8, #13
 83c:	cbnz	x9, 874 <_ZN11__sanitizerL12TracerThreadEPv+0x100>
 840:	ldr	x9, [sp, #192]
 844:	lsr	x9, x9, #13
 848:	cbnz	x9, 85c <_ZN11__sanitizerL12TracerThreadEPv+0xe8>
 84c:	add	x0, sp, #0xb8
 850:	mov	w1, #0x2000                	// #8192
 854:	bl	0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 858:	ldr	x8, [sp, #200]
 85c:	ldr	x9, [sp, #184]
 860:	mov	w10, #0x2000                	// #8192
 864:	sub	x2, x10, x8
 868:	mov	w1, wzr
 86c:	add	x0, x9, x8
 870:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 874:	mov	w20, #0x2000                	// #8192
 878:	add	x0, sp, #0xa0
 87c:	mov	w2, #0x18                  	// #24
 880:	mov	w1, wzr
 884:	str	x20, [sp, #200]
 888:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 88c:	ldr	x8, [sp, #184]
 890:	add	x0, sp, #0xa0
 894:	mov	x1, xzr
 898:	str	x20, [sp, #176]
 89c:	str	x8, [sp, #160]
 8a0:	bl	0 <_ZN11__sanitizer20internal_sigaltstackEPKvPv>
 8a4:	add	x0, sp, #0x8
 8a8:	mov	w2, #0x98                  	// #152
 8ac:	mov	w1, wzr
 8b0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 8b4:	adrp	x20, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 8b8:	mov	w21, #0x4                   	// #4
 8bc:	add	x20, x20, #0x0
 8c0:	movk	w21, #0x800, lsl #16
 8c4:	add	x1, sp, #0x8
 8c8:	mov	w0, #0x6                   	// #6
 8cc:	mov	x2, xzr
 8d0:	str	x20, [sp, #8]
 8d4:	str	w21, [sp, #144]
 8d8:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 8dc:	add	x0, sp, #0x8
 8e0:	mov	w2, #0x98                  	// #152
 8e4:	mov	w1, wzr
 8e8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 8ec:	add	x1, sp, #0x8
 8f0:	mov	w0, #0x4                   	// #4
 8f4:	mov	x2, xzr
 8f8:	str	x20, [sp, #8]
 8fc:	str	w21, [sp, #144]
 900:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 904:	add	x0, sp, #0x8
 908:	mov	w2, #0x98                  	// #152
 90c:	mov	w1, wzr
 910:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 914:	add	x1, sp, #0x8
 918:	mov	w0, #0x8                   	// #8
 91c:	mov	x2, xzr
 920:	str	x20, [sp, #8]
 924:	str	w21, [sp, #144]
 928:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 92c:	add	x0, sp, #0x8
 930:	mov	w2, #0x98                  	// #152
 934:	mov	w1, wzr
 938:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 93c:	add	x1, sp, #0x8
 940:	mov	w0, #0xb                   	// #11
 944:	mov	x2, xzr
 948:	str	x20, [sp, #8]
 94c:	str	w21, [sp, #144]
 950:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 954:	add	x0, sp, #0x8
 958:	mov	w2, #0x98                  	// #152
 95c:	mov	w1, wzr
 960:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 964:	add	x1, sp, #0x8
 968:	mov	w0, #0x7                   	// #7
 96c:	mov	x2, xzr
 970:	str	x20, [sp, #8]
 974:	str	w21, [sp, #144]
 978:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 97c:	add	x0, sp, #0x8
 980:	mov	w2, #0x98                  	// #152
 984:	mov	w1, wzr
 988:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 98c:	add	x1, sp, #0x8
 990:	mov	w0, #0x18                  	// #24
 994:	mov	x2, xzr
 998:	str	x20, [sp, #8]
 99c:	str	w21, [sp, #144]
 9a0:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 9a4:	add	x0, sp, #0x8
 9a8:	mov	w2, #0x98                  	// #152
 9ac:	mov	w1, wzr
 9b0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 9b4:	add	x1, sp, #0x8
 9b8:	mov	w0, #0x19                  	// #25
 9bc:	mov	x2, xzr
 9c0:	str	x20, [sp, #8]
 9c4:	str	w21, [sp, #144]
 9c8:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
 9cc:	add	x0, sp, #0xd0
 9d0:	add	x20, sp, #0xd0
 9d4:	bl	308 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv>
 9d8:	tbz	w0, #0, a7c <_ZN11__sanitizerL12TracerThreadEPv+0x308>
 9dc:	ldp	x8, x1, [x19]
 9e0:	add	x0, x20, #0x8
 9e4:	blr	x8
 9e8:	ldr	x8, [sp, #240]
 9ec:	cbz	x8, abc <_ZN11__sanitizerL12TracerThreadEPv+0x348>
 9f0:	adrp	x26, 0 <_ZN11__sanitizer17current_verbosityE>
 9f4:	ldr	x26, [x26]
 9f8:	adrp	x20, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 9fc:	adrp	x21, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 a00:	mov	x25, xzr
 a04:	add	x20, x20, #0x0
 a08:	add	x21, x21, #0x0
 a0c:	b	a20 <_ZN11__sanitizerL12TracerThreadEPv+0x2ac>
 a10:	ldr	x8, [sp, #240]
 a14:	add	x25, x25, #0x1
 a18:	cmp	x25, x8
 a1c:	b.cs	abc <_ZN11__sanitizerL12TracerThreadEPv+0x348>  // b.hs, b.nlast
 a20:	ldr	x8, [sp, #224]
 a24:	mov	w0, #0x11                  	// #17
 a28:	mov	x2, xzr
 a2c:	mov	x3, xzr
 a30:	ldr	x22, [x8, x25, lsl #3]
 a34:	mov	w1, w22
 a38:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 a3c:	add	x1, sp, #0x8
 a40:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 a44:	ldr	w8, [x26]
 a48:	tbz	w0, #0, a64 <_ZN11__sanitizerL12TracerThreadEPv+0x2f0>
 a4c:	cbz	w8, a10 <_ZN11__sanitizerL12TracerThreadEPv+0x29c>
 a50:	ldr	w2, [sp, #8]
 a54:	mov	x0, x20
 a58:	mov	w1, w22
 a5c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 a60:	b	a10 <_ZN11__sanitizerL12TracerThreadEPv+0x29c>
 a64:	cmp	w8, #0x2
 a68:	b.cc	a10 <_ZN11__sanitizerL12TracerThreadEPv+0x29c>  // b.lo, b.ul, b.last
 a6c:	mov	x0, x21
 a70:	mov	w1, w22
 a74:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 a78:	b	a10 <_ZN11__sanitizerL12TracerThreadEPv+0x29c>
 a7c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 a80:	ldr	x8, [x8]
 a84:	ldr	w8, [x8]
 a88:	cbz	w8, a98 <_ZN11__sanitizerL12TracerThreadEPv+0x324>
 a8c:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 a90:	add	x0, x0, #0x0
 a94:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 a98:	mov	w20, #0x3                   	// #3
 a9c:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 aa0:	add	x0, x0, #0x0
 aa4:	bl	0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>
 aa8:	tbnz	w0, #0, ad0 <_ZN11__sanitizerL12TracerThreadEPv+0x35c>
 aac:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 ab0:	add	x0, x0, #0x0
 ab4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 ab8:	bl	0 <_ZN11__sanitizer3DieEv>
 abc:	mov	w20, wzr
 ac0:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 ac4:	add	x0, x0, #0x0
 ac8:	bl	0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>
 acc:	tbz	w0, #0, aac <_ZN11__sanitizerL12TracerThreadEPv+0x338>
 ad0:	mov	w8, #0x1                   	// #1
 ad4:	str	xzr, [x24]
 ad8:	str	x8, [x19, #104]
 adc:	ldp	x0, x1, [sp, #184]
 ae0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 ae4:	ldp	x0, x1, [sp, #224]
 ae8:	str	x23, [sp, #216]
 aec:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 af0:	mov	w0, w20
 af4:	ldp	x20, x19, [sp, #320]
 af8:	ldp	x22, x21, [sp, #304]
 afc:	ldp	x24, x23, [sp, #288]
 b00:	ldp	x26, x25, [sp, #272]
 b04:	ldp	x29, x30, [sp, #256]
 b08:	add	sp, sp, #0x150
 b0c:	ret
 b10:	mov	w0, #0x4                   	// #4
 b14:	bl	0 <_ZN11__sanitizer14internal__exitEi>
 b18:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 b1c:	add	x0, x0, #0x0
 b20:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 b24:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000b28 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_>:
 b28:	sub	sp, sp, #0x150
 b2c:	str	x29, [sp, #288]
 b30:	stp	x30, x21, [sp, #304]
 b34:	stp	x20, x19, [sp, #320]
 b38:	ldr	x8, [x0]
 b3c:	mov	x20, x3
 b40:	mov	x19, x2
 b44:	ldr	x8, [x8, #24]
 b48:	blr	x8
 b4c:	mov	x21, x0
 b50:	add	x8, sp, #0x10
 b54:	mov	w9, #0x110                 	// #272
 b58:	mov	x3, sp
 b5c:	mov	w0, #0x4204                	// #16900
 b60:	mov	w2, #0x1                   	// #1
 b64:	mov	w1, w21
 b68:	stp	x8, x9, [sp]
 b6c:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 b70:	add	x1, sp, #0x12c
 b74:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 b78:	tbz	w0, #0, bb0 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0x88>
 b7c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 b80:	ldr	x8, [x8]
 b84:	ldr	w8, [x8]
 b88:	cbz	w8, ba0 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0x78>
 b8c:	ldr	w2, [sp, #300]
 b90:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 b94:	add	x0, x0, #0x0
 b98:	mov	w1, w21
 b9c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 ba0:	ldr	w8, [sp, #300]
 ba4:	cmp	w8, #0x3
 ba8:	csetm	w0, eq  // eq = none
 bac:	b	bcc <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0xa4>
 bb0:	ldr	x8, [sp, #264]
 bb4:	add	x1, sp, #0x10
 bb8:	mov	w2, #0x110                 	// #272
 bbc:	mov	x0, x19
 bc0:	str	x8, [x20]
 bc4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 bc8:	mov	w0, #0x1                   	// #1
 bcc:	ldp	x20, x19, [sp, #320]
 bd0:	ldp	x30, x21, [sp, #304]
 bd4:	ldr	x29, [sp, #288]
 bd8:	add	sp, sp, #0x150
 bdc:	ret

0000000000000be0 <_ZNK11__sanitizer25SuspendedThreadsListLinux13RegisterCountEv>:
 be0:	mov	w0, #0x22                  	// #34
 be4:	ret

0000000000000be8 <_ZN11__sanitizerL23TracerThreadDieCallbackEv>:
 be8:	stp	x30, x21, [sp, #-32]!
 bec:	stp	x20, x19, [sp, #16]
 bf0:	adrp	x19, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 bf4:	ldr	x20, [x19]
 bf8:	cbz	x20, c4c <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x64>
 bfc:	adrp	x8, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
 c00:	ldr	x8, [x8]
 c04:	ldr	x21, [x8]
 c08:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 c0c:	cmp	x21, x0
 c10:	b.ne	c4c <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x64>  // b.any
 c14:	ldr	x8, [x20, #32]
 c18:	cbz	x8, c48 <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x60>
 c1c:	mov	x21, xzr
 c20:	ldr	x8, [x20, #16]
 c24:	mov	w0, #0x8                   	// #8
 c28:	mov	x2, xzr
 c2c:	mov	x3, xzr
 c30:	ldr	x1, [x8, x21, lsl #3]
 c34:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 c38:	ldr	x8, [x20, #32]
 c3c:	add	x21, x21, #0x1
 c40:	cmp	x21, x8
 c44:	b.cc	c20 <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x38>  // b.lo, b.ul, b.last
 c48:	str	xzr, [x19]
 c4c:	ldp	x20, x19, [sp, #16]
 c50:	ldp	x30, x21, [sp], #32
 c54:	ret

0000000000000c58 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv>:
 c58:	sub	sp, sp, #0x90
 c5c:	str	x30, [sp, #64]
 c60:	stp	x26, x25, [sp, #80]
 c64:	stp	x24, x23, [sp, #96]
 c68:	stp	x22, x21, [sp, #112]
 c6c:	stp	x20, x19, [sp, #128]
 c70:	mov	w19, w0
 c74:	mov	x0, sp
 c78:	stp	x1, x2, [sp]
 c7c:	bl	0 <_ZNK11__sanitizer13SignalContext10GetAddressEv>
 c80:	str	x0, [sp, #16]
 c84:	mov	x0, sp
 c88:	bl	0 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>
 c8c:	and	w8, w0, #0x1
 c90:	mov	x0, sp
 c94:	strb	w8, [sp, #48]
 c98:	bl	0 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>
 c9c:	str	w0, [sp, #52]
 ca0:	mov	x0, sp
 ca4:	bl	0 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>
 ca8:	and	w8, w0, #0x1
 cac:	mov	x0, sp
 cb0:	strb	w8, [sp, #56]
 cb4:	bl	0 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>
 cb8:	ldp	x2, x3, [sp, #16]
 cbc:	ldr	x4, [sp, #32]
 cc0:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 cc4:	add	x0, x0, #0x0
 cc8:	mov	w1, w19
 ccc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 cd0:	adrp	x24, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 cd4:	ldr	x23, [x24]
 cd8:	cbz	x23, dc4 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x16c>
 cdc:	ldr	x8, [x23, #32]
 ce0:	cmp	w19, #0x6
 ce4:	b.ne	d1c <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0xc4>  // b.any
 ce8:	cbz	x8, da4 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x14c>
 cec:	mov	x20, xzr
 cf0:	ldr	x8, [x23, #16]
 cf4:	mov	w0, #0x8                   	// #8
 cf8:	mov	x2, xzr
 cfc:	mov	x3, xzr
 d00:	ldr	x1, [x8, x20, lsl #3]
 d04:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 d08:	ldr	x8, [x23, #32]
 d0c:	add	x20, x20, #0x1
 d10:	cmp	x20, x8
 d14:	b.cc	cf0 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x98>  // b.lo, b.ul, b.last
 d18:	b	da4 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x14c>
 d1c:	cbz	x8, da4 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x14c>
 d20:	adrp	x26, 0 <_ZN11__sanitizer17current_verbosityE>
 d24:	ldr	x26, [x26]
 d28:	adrp	x20, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 d2c:	adrp	x21, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 d30:	mov	x25, xzr
 d34:	add	x20, x20, #0x0
 d38:	add	x21, x21, #0x0
 d3c:	ldr	x8, [x23, #16]
 d40:	mov	w0, #0x11                  	// #17
 d44:	mov	x2, xzr
 d48:	mov	x3, xzr
 d4c:	ldr	x22, [x8, x25, lsl #3]
 d50:	mov	w1, w22
 d54:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
 d58:	add	x1, sp, #0x4c
 d5c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 d60:	ldr	w8, [x26]
 d64:	tbz	w0, #0, d80 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x128>
 d68:	cbz	w8, d94 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x13c>
 d6c:	ldr	w2, [sp, #76]
 d70:	mov	x0, x20
 d74:	mov	w1, w22
 d78:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 d7c:	b	d94 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x13c>
 d80:	cmp	w8, #0x2
 d84:	b.cc	d94 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x13c>  // b.lo, b.ul, b.last
 d88:	mov	x0, x21
 d8c:	mov	w1, w22
 d90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 d94:	ldr	x8, [x23, #32]
 d98:	add	x25, x25, #0x1
 d9c:	cmp	x25, x8
 da0:	b.cc	d3c <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0xe4>  // b.lo, b.ul, b.last
 da4:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 da8:	add	x0, x0, #0x0
 dac:	bl	0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>
 db0:	tbz	w0, #0, dd4 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x17c>
 db4:	str	xzr, [x24]
 db8:	ldr	x8, [x23]
 dbc:	mov	w9, #0x1                   	// #1
 dc0:	str	x9, [x8, #104]
 dc4:	cmp	w19, #0x6
 dc8:	mov	w8, #0x1                   	// #1
 dcc:	cinc	w0, w8, ne  // ne = any
 dd0:	bl	0 <_ZN11__sanitizer14internal__exitEi>
 dd4:	adrp	x0, 0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
 dd8:	add	x0, x0, #0x0
 ddc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 de0:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #3
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #3
  90:	mov	w2, #0x8                   	// #8
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE9push_backERKy>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #3
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #3
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIyE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_stoptheworld_netbsd_libcdep.cpp.o:     file format elf64-littleaarch64


sancov_flags.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__sancov_default_options>:
   0:	adrp	x0, 0 <__sancov_default_options>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <_ZN8__sancov11SancovFlags11SetDefaultsEv>:
   c:	mov	w8, #0x1                   	// #1
  10:	strh	w8, [x0]
  14:	ret

0000000000000018 <_ZN8__sancov21InitializeSancovFlagsEv>:
  18:	sub	sp, sp, #0x50
  1c:	str	x30, [sp, #32]
  20:	stp	x22, x21, [sp, #48]
  24:	stp	x20, x19, [sp, #64]
  28:	adrp	x21, 0 <__sancov_default_options>
  2c:	add	x21, x21, #0x0
  30:	mov	w8, #0x1                   	// #1
  34:	mov	x20, x21
  38:	mov	x0, sp
  3c:	strh	w8, [x20], #1
  40:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
  44:	adrp	x19, 0 <_ZN11__sanitizer10FlagParser5AllocE>
  48:	ldr	x19, [x19]
  4c:	mov	w1, #0x10                  	// #16
  50:	mov	x0, x19
  54:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  58:	adrp	x22, 0 <__sancov_default_options>
  5c:	add	x22, x22, #0x0
  60:	adrp	x1, 0 <__sancov_default_options>
  64:	adrp	x3, 0 <__sancov_default_options>
  68:	mov	x2, x0
  6c:	stp	x22, x21, [x0]
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	x0, sp
  7c:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  80:	mov	w1, #0x10                  	// #16
  84:	mov	x0, x19
  88:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  8c:	adrp	x1, 0 <__sancov_default_options>
  90:	adrp	x3, 0 <__sancov_default_options>
  94:	mov	x2, x0
  98:	stp	x22, x20, [x0]
  9c:	add	x1, x1, #0x0
  a0:	add	x3, x3, #0x0
  a4:	mov	x0, sp
  a8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  ac:	bl	0 <__sancov_default_options>
  b0:	mov	x1, x0
  b4:	mov	x0, sp
  b8:	mov	x2, xzr
  bc:	bl	0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>
  c0:	adrp	x1, 0 <__sancov_default_options>
  c4:	add	x1, x1, #0x0
  c8:	mov	x0, sp
  cc:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
  d0:	bl	0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  d4:	ldrb	w8, [x20]
  d8:	cbz	w8, e4 <_ZN8__sancov21InitializeSancovFlagsEv+0xcc>
  dc:	mov	x0, sp
  e0:	bl	0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>
  e4:	ldp	x20, x19, [sp, #64]
  e8:	ldp	x22, x21, [sp, #48]
  ec:	ldr	x30, [sp, #32]
  f0:	add	sp, sp, #0x50
  f4:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldr	x20, [x0, #8]
   c:	mov	x19, x1
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	mov	x0, x19
  1c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  20:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  24:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  28:	add	x1, x1, #0x0
  2c:	mov	x0, x19
  30:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  34:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  38:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  3c:	add	x1, x1, #0x0
  40:	mov	x0, x19
  44:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  48:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  4c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  50:	add	x1, x1, #0x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  5c:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  60:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  64:	add	x1, x1, #0x0
  68:	mov	x0, x19
  6c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  70:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  74:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  78:	add	x1, x1, #0x0
  7c:	mov	x0, x19
  80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  84:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  88:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  8c:	add	x0, x0, #0x0
  90:	mov	x1, x19
  94:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  98:	mov	w0, wzr
  9c:	ldp	x20, x19, [sp, #16]
  a0:	ldr	x30, [sp], #32
  a4:	ret
  a8:	strb	wzr, [x20]
  ac:	mov	w0, #0x1                   	// #1
  b0:	ldp	x20, x19, [sp, #16]
  b4:	ldr	x30, [sp], #32
  b8:	ret
  bc:	mov	w0, #0x1                   	// #1
  c0:	strb	w0, [x20]
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldr	x30, [sp], #32
  cc:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	adrp	x9, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   c:	adrp	x10, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  10:	mov	x19, x2
  14:	ldrb	w8, [x8]
  18:	add	x9, x9, #0x0
  1c:	add	x10, x10, #0x0
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	cmp	w8, #0x0
  28:	csel	x3, x10, x9, eq  // eq = none
  2c:	add	x2, x2, #0x0
  30:	mov	x0, x1
  34:	mov	x1, x19
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	sxtw	x8, w0
  40:	cmp	x8, x19
  44:	cset	w0, cc  // cc = lo, ul, last
  48:	ldp	x30, x19, [sp], #16
  4c:	ret

sanitizer_coverage_fuchsia.cpp.o:     file format elf64-littleaarch64


sanitizer_coverage_libcdep_new.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18InitializeCoverageEbPKc>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
   8:	ldrb	w9, [x8]
   c:	cbz	w9, 18 <_ZN11__sanitizer18InitializeCoverageEbPKc+0x18>
  10:	ldp	x30, x19, [sp], #16
  14:	ret
  18:	and	w9, w0, #0x1
  1c:	strb	w9, [x8]
  20:	adrp	x19, 3c <__sanitizer_cov_dump>
  24:	ldr	x19, [x19]
  28:	mov	x0, x19
  2c:	bl	0 <_ZN11__sanitizer6AtexitEPFvvE>
  30:	mov	x0, x19
  34:	ldp	x30, x19, [sp], #16
  38:	b	0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>

000000000000003c <__sanitizer_cov_dump>:
  3c:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
  40:	ldrb	w8, [x8]
  44:	cbz	w8, 6c <__sanitizer_cov_dump+0x30>
  48:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  4c:	ldr	x8, [x8]
  50:	ldrb	w8, [x8, #169]
  54:	cbz	w8, 6c <__sanitizer_cov_dump+0x30>
  58:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
  5c:	add	x8, x8, #0x0
  60:	ldr	x0, [x8]
  64:	ldr	x1, [x8, #16]
  68:	b	70 <__sanitizer_dump_coverage>
  6c:	ret

0000000000000070 <__sanitizer_dump_coverage>:
  70:	cbz	x1, 130 <__sanitizer_dump_coverage+0xc0>
  74:	sub	sp, sp, #0x70
  78:	stp	x29, x30, [sp, #16]
  7c:	stp	x28, x27, [sp, #32]
  80:	stp	x26, x25, [sp, #48]
  84:	stp	x24, x23, [sp, #64]
  88:	stp	x22, x21, [sp, #80]
  8c:	stp	x20, x19, [sp, #96]
  90:	mov	x19, x1
  94:	mov	x23, x0
  98:	mov	w0, #0x1000                	// #4096
  9c:	mov	x1, xzr
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  a8:	str	x0, [sp, #8]
  ac:	mov	w0, #0x1000                	// #4096
  b0:	mov	x1, xzr
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  bc:	lsl	x24, x19, #3
  c0:	mov	x21, x0
  c4:	mov	x0, x24
  c8:	mov	x1, xzr
  cc:	mov	x2, xzr
  d0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  d4:	mov	x1, x23
  d8:	mov	x2, x24
  dc:	mov	x22, x0
  e0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  e4:	cmp	x19, #0x1
  e8:	b.eq	13c <__sanitizer_dump_coverage+0xcc>  // b.none
  ec:	mov	w8, #0x1                   	// #1
  f0:	b	100 <__sanitizer_dump_coverage+0x90>
  f4:	add	x8, x8, #0x1
  f8:	cmp	x8, x19
  fc:	b.eq	134 <__sanitizer_dump_coverage+0xc4>  // b.none
 100:	ldr	x9, [x22, x8, lsl #3]
 104:	mov	x10, x8
 108:	sub	x11, x10, #0x1
 10c:	lsr	x11, x11, #1
 110:	ldr	x12, [x22, x11, lsl #3]
 114:	cmp	x12, x9
 118:	b.cs	f4 <__sanitizer_dump_coverage+0x84>  // b.hs, b.nlast
 11c:	str	x12, [x22, x10, lsl #3]
 120:	mov	x10, x11
 124:	str	x9, [x22, x11, lsl #3]
 128:	cbnz	x11, 108 <__sanitizer_dump_coverage+0x98>
 12c:	b	f4 <__sanitizer_dump_coverage+0x84>
 130:	ret
 134:	subs	x8, x19, #0x1
 138:	b.ne	164 <__sanitizer_dump_coverage+0xf4>  // b.any
 13c:	adrp	x23, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 140:	mov	w28, wzr
 144:	mov	x20, xzr
 148:	mov	x26, xzr
 14c:	mov	x27, xzr
 150:	add	x23, x23, #0x0
 154:	mov	x24, x22
 158:	b	220 <__sanitizer_dump_coverage+0x1b0>
 15c:	subs	x8, x8, #0x1
 160:	b.eq	13c <__sanitizer_dump_coverage+0xcc>  // b.none
 164:	lsl	x10, x8, #3
 168:	ldr	x11, [x22, x10]
 16c:	ldr	x12, [x22]
 170:	mov	x9, xzr
 174:	str	x11, [x22]
 178:	str	x12, [x22, x10]
 17c:	mov	x10, xzr
 180:	mov	w12, #0x1                   	// #1
 184:	lsl	x11, x9, #1
 188:	bfi	x12, x9, #1, #63
 18c:	cmp	x12, x8
 190:	add	x11, x11, #0x2
 194:	b.cc	1ac <__sanitizer_dump_coverage+0x13c>  // b.lo, b.ul, b.last
 198:	cmp	x11, x8
 19c:	b.cc	1c4 <__sanitizer_dump_coverage+0x154>  // b.lo, b.ul, b.last
 1a0:	cmp	x10, x9
 1a4:	b.ne	1dc <__sanitizer_dump_coverage+0x16c>  // b.any
 1a8:	b	15c <__sanitizer_dump_coverage+0xec>
 1ac:	ldr	x10, [x22, x9, lsl #3]
 1b0:	ldr	x13, [x22, x12, lsl #3]
 1b4:	cmp	x10, x13
 1b8:	csel	x10, x12, x9, cc  // cc = lo, ul, last
 1bc:	cmp	x11, x8
 1c0:	b.cs	1a0 <__sanitizer_dump_coverage+0x130>  // b.hs, b.nlast
 1c4:	ldr	x12, [x22, x10, lsl #3]
 1c8:	ldr	x13, [x22, x11, lsl #3]
 1cc:	cmp	x12, x13
 1d0:	csel	x10, x11, x10, cc  // cc = lo, ul, last
 1d4:	cmp	x10, x9
 1d8:	b.eq	15c <__sanitizer_dump_coverage+0xec>  // b.none
 1dc:	lsl	x11, x10, #3
 1e0:	lsl	x9, x9, #3
 1e4:	ldr	x12, [x22, x11]
 1e8:	ldr	x13, [x22, x9]
 1ec:	cmp	x10, x8
 1f0:	str	x12, [x22, x9]
 1f4:	mov	x9, x10
 1f8:	str	x13, [x22, x11]
 1fc:	b.cc	180 <__sanitizer_dump_coverage+0x110>  // b.lo, b.ul, b.last
 200:	b	15c <__sanitizer_dump_coverage+0xec>
 204:	mov	x0, x23
 208:	mov	x1, x25
 20c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 210:	add	x26, x26, #0x1
 214:	cmp	x26, x19
 218:	add	x24, x24, #0x8
 21c:	b.cs	294 <__sanitizer_dump_coverage+0x224>  // b.hs, b.nlast
 220:	ldr	x25, [x24]
 224:	cbz	x25, 210 <__sanitizer_dump_coverage+0x1a0>
 228:	mov	x0, x25
 22c:	mov	x1, xzr
 230:	mov	x2, xzr
 234:	mov	x3, x24
 238:	bl	0 <__sanitizer_get_module_and_offset_for_pc>
 23c:	cbz	w0, 204 <__sanitizer_dump_coverage+0x194>
 240:	ldr	x8, [x24]
 244:	sub	x29, x25, x8
 248:	cmp	x29, x20
 24c:	b.ne	258 <__sanitizer_dump_coverage+0x1e8>  // b.any
 250:	eor	w8, w28, #0x1
 254:	tbz	w8, #0, 210 <__sanitizer_dump_coverage+0x1a0>
 258:	tbz	w28, #0, 270 <__sanitizer_dump_coverage+0x200>
 25c:	ldr	x0, [sp, #8]
 260:	add	x2, x22, x27, lsl #3
 264:	sub	x3, x26, x27
 268:	mov	x1, x21
 26c:	bl	594 <_ZN8__sancov12_GLOBAL__N_119WriteModuleCoverageEPcPKcPKmm>
 270:	mov	w2, #0x1000                	// #4096
 274:	mov	x0, x25
 278:	mov	x1, x21
 27c:	mov	x3, x24
 280:	bl	0 <__sanitizer_get_module_and_offset_for_pc>
 284:	mov	w28, #0x1                   	// #1
 288:	mov	x27, x26
 28c:	mov	x20, x29
 290:	b	210 <__sanitizer_dump_coverage+0x1a0>
 294:	tbz	w28, #0, 2ac <__sanitizer_dump_coverage+0x23c>
 298:	ldr	x0, [sp, #8]
 29c:	add	x2, x22, x27, lsl #3
 2a0:	sub	x3, x19, x27
 2a4:	mov	x1, x21
 2a8:	bl	594 <_ZN8__sancov12_GLOBAL__N_119WriteModuleCoverageEPcPKcPKmm>
 2ac:	ldr	x0, [sp, #8]
 2b0:	mov	x1, xzr
 2b4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 2b8:	mov	x0, x21
 2bc:	mov	x1, xzr
 2c0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 2c4:	mov	x0, x22
 2c8:	ldp	x20, x19, [sp, #96]
 2cc:	ldp	x22, x21, [sp, #80]
 2d0:	ldp	x24, x23, [sp, #64]
 2d4:	ldp	x26, x25, [sp, #48]
 2d8:	ldp	x28, x27, [sp, #32]
 2dc:	ldp	x29, x30, [sp, #16]
 2e0:	mov	x1, xzr
 2e4:	add	sp, sp, #0x70
 2e8:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>

00000000000002ec <__sanitizer_cov_trace_pc_guard>:
 2ec:	str	x30, [sp, #-16]!
 2f0:	ldr	w8, [x0]
 2f4:	cbz	w8, 31c <__sanitizer_cov_trace_pc_guard+0x30>
 2f8:	adrp	x9, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 2fc:	ldr	x4, [x9]
 300:	sub	w3, w8, #0x1
 304:	cmp	x4, x3
 308:	b.ls	334 <__sanitizer_cov_trace_pc_guard+0x48>  // b.plast
 30c:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 310:	ldr	x8, [x8]
 314:	ldr	x9, [x8, x3, lsl #3]
 318:	cbz	x9, 324 <__sanitizer_cov_trace_pc_guard+0x38>
 31c:	ldr	x30, [sp], #16
 320:	ret
 324:	sub	x9, x30, #0x1
 328:	str	x9, [x8, x3, lsl #3]
 32c:	ldr	x30, [sp], #16
 330:	ret
 334:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 338:	adrp	x2, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 33c:	add	x0, x0, #0x0
 340:	add	x2, x2, #0x0
 344:	mov	w1, #0x1c5                 	// #453
 348:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000034c <__sanitizer_cov_trace_pc_guard_init>:
 34c:	str	x30, [sp, #-48]!
 350:	stp	x22, x21, [sp, #16]
 354:	stp	x20, x19, [sp, #32]
 358:	cmp	x0, x1
 35c:	b.eq	36c <__sanitizer_cov_trace_pc_guard_init+0x20>  // b.none
 360:	ldr	w8, [x0]
 364:	mov	x20, x0
 368:	cbz	w8, 37c <__sanitizer_cov_trace_pc_guard_init+0x30>
 36c:	ldp	x20, x19, [sp, #32]
 370:	ldp	x22, x21, [sp, #16]
 374:	ldr	x30, [sp], #48
 378:	ret
 37c:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 380:	ldrb	w8, [x8]
 384:	mov	x19, x1
 388:	adrp	x21, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 38c:	cbz	w8, 398 <__sanitizer_cov_trace_pc_guard_init+0x4c>
 390:	ldr	x8, [x21]
 394:	b	3c0 <__sanitizer_cov_trace_pc_guard_init+0x74>
 398:	adrp	x22, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 39c:	add	x22, x22, #0x0
 3a0:	mov	w8, #0x1                   	// #1
 3a4:	strb	w8, [x22]
 3a8:	bl	0 <_ZN8__sancov21InitializeSancovFlagsEv>
 3ac:	stp	xzr, xzr, [x22, #16]
 3b0:	str	xzr, [x22, #8]
 3b4:	ldr	w9, [x20]
 3b8:	mov	x8, xzr
 3bc:	cbnz	w9, 4b8 <__sanitizer_cov_trace_pc_guard_init+0x16c>
 3c0:	cmp	x20, x19
 3c4:	b.cs	3e0 <__sanitizer_cov_trace_pc_guard_init+0x94>  // b.hs, b.nlast
 3c8:	mvn	x9, x20
 3cc:	add	x9, x19, x9
 3d0:	cmp	x9, #0x1b
 3d4:	b.hi	3e8 <__sanitizer_cov_trace_pc_guard_init+0x9c>  // b.pmore
 3d8:	mov	w9, w8
 3dc:	b	444 <__sanitizer_cov_trace_pc_guard_init+0xf8>
 3e0:	mov	w9, w8
 3e4:	b	454 <__sanitizer_cov_trace_pc_guard_init+0x108>
 3e8:	adrp	x12, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 3ec:	ldr	q3, [x12]
 3f0:	lsr	x9, x9, #2
 3f4:	add	x11, x9, #0x1
 3f8:	dup	v2.4s, w8
 3fc:	and	x12, x11, #0x7ffffffffffffff8
 400:	add	x10, x20, #0x10
 404:	movi	v0.4s, #0x1
 408:	movi	v1.4s, #0x5
 40c:	add	x20, x20, x12, lsl #2
 410:	add	w9, w8, w12
 414:	add	v2.4s, v2.4s, v3.4s
 418:	movi	v3.4s, #0x8
 41c:	mov	x13, x12
 420:	add	v4.4s, v2.4s, v0.4s
 424:	add	v5.4s, v2.4s, v1.4s
 428:	add	v2.4s, v2.4s, v3.4s
 42c:	subs	x13, x13, #0x8
 430:	stp	q4, q5, [x10, #-16]
 434:	add	x10, x10, #0x20
 438:	b.ne	420 <__sanitizer_cov_trace_pc_guard_init+0xd4>  // b.any
 43c:	cmp	x11, x12
 440:	b.eq	454 <__sanitizer_cov_trace_pc_guard_init+0x108>  // b.none
 444:	add	w9, w9, #0x1
 448:	str	w9, [x20], #4
 44c:	cmp	x20, x19
 450:	b.cc	444 <__sanitizer_cov_trace_pc_guard_init+0xf8>  // b.lo, b.ul, b.last
 454:	mov	w19, w9
 458:	cmp	x8, x19
 45c:	b.cs	4a4 <__sanitizer_cov_trace_pc_guard_init+0x158>  // b.hs, b.nlast
 460:	adrp	x9, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 464:	ldr	x9, [x9]
 468:	cmp	x19, x9, lsr #3
 46c:	b.ls	488 <__sanitizer_cov_trace_pc_guard_init+0x13c>  // b.plast
 470:	adrp	x20, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 474:	add	x20, x20, #0x0
 478:	mov	x0, x20
 47c:	mov	x1, x19
 480:	bl	0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 484:	ldr	x8, [x20, #16]
 488:	adrp	x9, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 48c:	ldr	x9, [x9]
 490:	sub	x10, x19, x8
 494:	lsl	x2, x10, #3
 498:	mov	w1, wzr
 49c:	add	x0, x9, x8, lsl #3
 4a0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 4a4:	str	x19, [x21]
 4a8:	ldp	x20, x19, [sp, #32]
 4ac:	ldp	x22, x21, [sp, #16]
 4b0:	ldr	x30, [sp], #48
 4b4:	ret
 4b8:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 4bc:	adrp	x2, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x2, x2, #0x0
 4c8:	mov	w1, #0x78                  	// #120
 4cc:	mov	x3, xzr
 4d0:	mov	x4, xzr
 4d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000004d8 <__sanitizer_dump_trace_pc_guard_coverage>:
 4d8:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 4dc:	ldrb	w8, [x8]
 4e0:	cbz	w8, 508 <__sanitizer_dump_trace_pc_guard_coverage+0x30>
 4e4:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 4e8:	ldr	x8, [x8]
 4ec:	ldrb	w8, [x8, #169]
 4f0:	cbz	w8, 508 <__sanitizer_dump_trace_pc_guard_coverage+0x30>
 4f4:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 4f8:	add	x8, x8, #0x0
 4fc:	ldr	x0, [x8]
 500:	ldr	x1, [x8, #16]
 504:	b	70 <__sanitizer_dump_coverage>
 508:	ret

000000000000050c <__sanitizer_cov_reset>:
 50c:	str	x30, [sp, #-16]!
 510:	adrp	x8, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 514:	ldr	x8, [x8]
 518:	cbz	x8, 534 <__sanitizer_cov_reset+0x28>
 51c:	adrp	x9, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 520:	ldr	x0, [x9]
 524:	lsl	x2, x8, #3
 528:	mov	w1, wzr
 52c:	ldr	x30, [sp], #16
 530:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
 534:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 538:	adrp	x2, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 53c:	add	x0, x0, #0x0
 540:	add	x2, x2, #0x0
 544:	mov	w1, #0x1c5                 	// #453
 548:	mov	x3, xzr
 54c:	mov	x4, xzr
 550:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000554 <__sanitizer_cov_trace_cmp>:
 554:	ret

0000000000000558 <__sanitizer_cov_trace_cmp1>:
 558:	ret

000000000000055c <__sanitizer_cov_trace_cmp2>:
 55c:	ret

0000000000000560 <__sanitizer_cov_trace_cmp4>:
 560:	ret

0000000000000564 <__sanitizer_cov_trace_cmp8>:
 564:	ret

0000000000000568 <__sanitizer_cov_trace_const_cmp1>:
 568:	ret

000000000000056c <__sanitizer_cov_trace_const_cmp2>:
 56c:	ret

0000000000000570 <__sanitizer_cov_trace_const_cmp4>:
 570:	ret

0000000000000574 <__sanitizer_cov_trace_const_cmp8>:
 574:	ret

0000000000000578 <__sanitizer_cov_trace_switch>:
 578:	ret

000000000000057c <__sanitizer_cov_trace_div4>:
 57c:	ret

0000000000000580 <__sanitizer_cov_trace_div8>:
 580:	ret

0000000000000584 <__sanitizer_cov_trace_gep>:
 584:	ret

0000000000000588 <__sanitizer_cov_trace_pc_indir>:
 588:	ret

000000000000058c <__sanitizer_cov_8bit_counters_init>:
 58c:	ret

0000000000000590 <__sanitizer_cov_pcs_init>:
 590:	ret

0000000000000594 <_ZN8__sancov12_GLOBAL__N_119WriteModuleCoverageEPcPKcPKmm>:
 594:	sub	sp, sp, #0x40
 598:	stp	x30, x23, [sp, #16]
 59c:	stp	x22, x21, [sp, #32]
 5a0:	stp	x20, x19, [sp, #48]
 5a4:	mov	x20, x0
 5a8:	mov	x0, x1
 5ac:	mov	x19, x3
 5b0:	mov	x21, x2
 5b4:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 5b8:	cbz	x0, 68c <_ZN8__sancov12_GLOBAL__N_119WriteModuleCoverageEPcPKcPKmm+0xf8>
 5bc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 5c0:	ldr	x8, [x8]
 5c4:	mov	x22, x0
 5c8:	ldr	x23, [x8, #176]
 5cc:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 5d0:	adrp	x2, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 5d4:	adrp	x6, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 5d8:	mov	x5, x0
 5dc:	add	x2, x2, #0x0
 5e0:	add	x6, x6, #0x0
 5e4:	mov	w1, #0x1000                	// #4096
 5e8:	mov	x0, x20
 5ec:	mov	x3, x23
 5f0:	mov	x4, x22
 5f4:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 5f8:	add	x2, sp, #0xc
 5fc:	mov	w1, #0x1                   	// #1
 600:	mov	x0, x20
 604:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 608:	mov	w22, w0
 60c:	cmn	w0, #0x1
 610:	b.ne	628 <_ZN8__sancov12_GLOBAL__N_119WriteModuleCoverageEPcPKcPKmm+0x94>  // b.any
 614:	ldr	w2, [sp, #12]
 618:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 61c:	add	x0, x0, #0x0
 620:	mov	x1, x20
 624:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 628:	adrp	x1, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 62c:	add	x1, x1, #0x0
 630:	mov	w2, #0x8                   	// #8
 634:	mov	w0, w22
 638:	mov	x3, xzr
 63c:	mov	x4, xzr
 640:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 644:	lsl	x2, x19, #3
 648:	mov	w0, w22
 64c:	mov	x1, x21
 650:	mov	x3, xzr
 654:	mov	x4, xzr
 658:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 65c:	mov	w0, w22
 660:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 664:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 668:	add	x0, x0, #0x0
 66c:	mov	x1, x20
 670:	mov	x2, x19
 674:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 678:	ldp	x20, x19, [sp, #48]
 67c:	ldp	x22, x21, [sp, #32]
 680:	ldp	x30, x23, [sp, #16]
 684:	add	sp, sp, #0x40
 688:	ret
 68c:	adrp	x0, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 690:	adrp	x2, 0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 694:	add	x0, x0, #0x0
 698:	add	x2, x2, #0x0
 69c:	mov	w1, #0x29                  	// #41
 6a0:	mov	x3, xzr
 6a4:	mov	x4, xzr
 6a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #3
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #3
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorImE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZTW21__sancov_lowest_stack:

0000000000000000 <_ZTW21__sancov_lowest_stack>:
   0:	adrp	x8, 0 <_ZTW21__sancov_lowest_stack>
   4:	ldr	x8, [x8]
   8:	mrs	x9, tpidr_el0
   c:	add	x0, x9, x8
  10:	ret

sanitizer_coverage_win_sections.cpp.o:     file format elf64-littleaarch64


sanitizer_allocator_report.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>:
   0:	sub	sp, sp, #0x40
   4:	str	x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	mov	x19, x1
  10:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  14:	mov	x20, x0
  18:	add	x1, x1, #0x0
  1c:	mov	x0, sp
  20:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  24:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  28:	ldr	x8, [x8]
  2c:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  30:	add	x0, x0, #0x0
  34:	mov	x2, x20
  38:	ldr	x1, [x8]
  3c:	mov	x3, x19
  40:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  44:	mov	x0, sp
  48:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  4c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000050 <_ZN11__sanitizer26ReportReallocArrayOverflowEmmPKNS_10StackTraceE>:
  50:	sub	sp, sp, #0x40
  54:	str	x30, [sp, #32]
  58:	stp	x20, x19, [sp, #48]
  5c:	mov	x19, x1
  60:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  64:	mov	x20, x0
  68:	add	x1, x1, #0x0
  6c:	mov	x0, sp
  70:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  74:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  78:	ldr	x8, [x8]
  7c:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  80:	add	x0, x0, #0x0
  84:	mov	x2, x20
  88:	ldr	x1, [x8]
  8c:	mov	x3, x19
  90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  94:	mov	x0, sp
  98:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  9c:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000000a0 <_ZN11__sanitizer21ReportPvallocOverflowEmPKNS_10StackTraceE>:
  a0:	sub	sp, sp, #0x40
  a4:	str	x30, [sp, #32]
  a8:	stp	x20, x19, [sp, #48]
  ac:	mov	x2, x1
  b0:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  b4:	mov	x19, x0
  b8:	add	x1, x1, #0x0
  bc:	mov	x0, sp
  c0:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  c4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  c8:	ldr	x8, [x8]
  cc:	ldr	x20, [x8]
  d0:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  d4:	mov	x3, x0
  d8:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  dc:	add	x0, x0, #0x0
  e0:	mov	x1, x20
  e4:	mov	x2, x19
  e8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  ec:	mov	x0, sp
  f0:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  f4:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000000f8 <_ZN11__sanitizer32ReportInvalidAllocationAlignmentEmPKNS_10StackTraceE>:
  f8:	sub	sp, sp, #0x30
  fc:	stp	x30, x19, [sp, #32]
 100:	mov	x2, x1
 104:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 108:	mov	x19, x0
 10c:	add	x1, x1, #0x0
 110:	mov	x0, sp
 114:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 118:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 11c:	ldr	x8, [x8]
 120:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 124:	add	x0, x0, #0x0
 128:	mov	x2, x19
 12c:	ldr	x1, [x8]
 130:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 134:	mov	x0, sp
 138:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 13c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000140 <_ZN11__sanitizer34ReportInvalidAlignedAllocAlignmentEmmPKNS_10StackTraceE>:
 140:	sub	sp, sp, #0x40
 144:	str	x30, [sp, #32]
 148:	stp	x20, x19, [sp, #48]
 14c:	mov	x19, x1
 150:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 154:	mov	x20, x0
 158:	add	x1, x1, #0x0
 15c:	mov	x0, sp
 160:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 164:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 168:	ldr	x8, [x8]
 16c:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 170:	add	x0, x0, #0x0
 174:	mov	x2, x19
 178:	ldr	x1, [x8]
 17c:	mov	x3, x20
 180:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 184:	mov	x0, sp
 188:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 18c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000190 <_ZN11__sanitizer35ReportInvalidPosixMemalignAlignmentEmPKNS_10StackTraceE>:
 190:	sub	sp, sp, #0x30
 194:	stp	x30, x19, [sp, #32]
 198:	mov	x2, x1
 19c:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1a0:	mov	x19, x0
 1a4:	add	x1, x1, #0x0
 1a8:	mov	x0, sp
 1ac:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1b0:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1b4:	ldr	x8, [x8]
 1b8:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1bc:	add	x0, x0, #0x0
 1c0:	mov	w3, #0x8                   	// #8
 1c4:	ldr	x1, [x8]
 1c8:	mov	x2, x19
 1cc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1d0:	mov	x0, sp
 1d4:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1d8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000001dc <_ZN11__sanitizer26ReportAllocationSizeTooBigEmmPKNS_10StackTraceE>:
 1dc:	sub	sp, sp, #0x40
 1e0:	str	x30, [sp, #32]
 1e4:	stp	x20, x19, [sp, #48]
 1e8:	mov	x19, x1
 1ec:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1f0:	mov	x20, x0
 1f4:	add	x1, x1, #0x0
 1f8:	mov	x0, sp
 1fc:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 200:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 204:	ldr	x8, [x8]
 208:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 20c:	add	x0, x0, #0x0
 210:	mov	x2, x20
 214:	ldr	x1, [x8]
 218:	mov	x3, x19
 21c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 220:	mov	x0, sp
 224:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 228:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000022c <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>:
 22c:	sub	sp, sp, #0x30
 230:	stp	x30, x19, [sp, #32]
 234:	mov	x2, x1
 238:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 23c:	mov	x19, x0
 240:	add	x1, x1, #0x0
 244:	mov	x0, sp
 248:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 24c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 250:	ldr	x8, [x8]
 254:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 258:	add	x0, x0, #0x0
 25c:	mov	x2, x19
 260:	ldr	x1, [x8]
 264:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 268:	mov	x0, sp
 26c:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 270:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE:

0000000000000000 <_ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x2
   c:	mov	x20, x1
  10:	mov	x21, x0
  14:	bl	0 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
  18:	stp	x20, x19, [x21, #8]
  1c:	bl	0 <_ZN11__sanitizer15ColorizeReportsEv>
  20:	and	w8, w0, #0x1
  24:	strb	w8, [x21, #24]
  28:	ldp	x20, x19, [sp, #16]
  2c:	adrp	x9, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE>
  30:	adrp	x10, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE>
  34:	add	x9, x9, #0x0
  38:	add	x10, x10, #0x0
  3c:	tst	w0, #0x1
  40:	adrp	x0, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE>
  44:	csel	x1, x10, x9, ne  // ne = any
  48:	add	x0, x0, #0x0
  4c:	ldp	x30, x21, [sp], #32
  50:	b	0 <_ZN11__sanitizer6PrintfEPKcz>

Disassembly of section .text._ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev:

0000000000000000 <_ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldrb	w8, [x0, #24]
   8:	adrp	x9, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev>
   c:	adrp	x10, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev>
  10:	mov	x19, x0
  14:	add	x9, x9, #0x0
  18:	add	x10, x10, #0x0
  1c:	cmp	w8, #0x0
  20:	adrp	x0, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev>
  24:	csel	x1, x10, x9, eq  // eq = none
  28:	add	x0, x0, #0x0
  2c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  30:	ldr	x0, [x19, #16]
  34:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  38:	bl	0 <_ZN11__sanitizer34PrintHintAllocatorCannotReturnNullEv>
  3c:	ldp	x0, x1, [x19, #8]
  40:	mov	x2, xzr
  44:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_>
  48:	mov	x0, x19
  4c:	ldp	x30, x19, [sp], #16
  50:	b	0 <_ZN11__sanitizer21ScopedErrorReportLockD1Ev>

Disassembly of section .text._ZN11__sanitizer17GetPageSizeCachedEv:

0000000000000000 <_ZN11__sanitizer17GetPageSizeCachedEv>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
   8:	ldr	x19, [x19]
   c:	ldr	x0, [x19]
  10:	cbz	x0, 1c <_ZN11__sanitizer17GetPageSizeCachedEv+0x1c>
  14:	ldp	x30, x19, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  20:	str	x0, [x19]
  24:	ldp	x30, x19, [sp], #16
  28:	ret

sanitizer_stackdepot.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer16StackDepotHandle2idEv>:
   0:	ldr	x8, [x0]
   4:	ldr	w0, [x8, #8]
   8:	ret

000000000000000c <_ZN11__sanitizer16StackDepotHandle9use_countEv>:
   c:	ldr	x8, [x0]
  10:	ldr	w8, [x8, #12]
  14:	and	w0, w8, #0xfffff
  18:	ret

000000000000001c <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv>:
  1c:	str	x30, [sp, #-16]!
  20:	ldr	x8, [x0]
  24:	add	x8, x8, #0xc
  28:	ldaxr	w9, [x8]
  2c:	add	w10, w9, #0x1
  30:	stlxr	w11, w10, [x8]
  34:	cbnz	w11, 28 <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv+0xc>
  38:	mvn	w8, w9
  3c:	tst	w8, #0xfffff
  40:	b.eq	4c <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv+0x30>  // b.none
  44:	ldr	x30, [sp], #16
  48:	ret
  4c:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  50:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  54:	add	x0, x0, #0x0
  58:	add	x2, x2, #0x0
  5c:	mov	w1, #0x55                  	// #85
  60:	mov	w3, #0x100000              	// #1048576
  64:	mov	w4, #0x100000              	// #1048576
  68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000006c <_ZN11__sanitizer18StackDepotGetStatsEv>:
  6c:	adrp	x8, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  70:	mov	w9, #0x400                 	// #1024
  74:	add	x8, x8, #0x0
  78:	movk	w9, #0x80, lsl #16
  7c:	add	x0, x8, x9
  80:	ret

0000000000000084 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE>:
  84:	str	x30, [sp, #-16]!
  88:	mov	x2, x1
  8c:	mov	x1, x0
  90:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  94:	add	x0, x0, #0x0
  98:	mov	x3, xzr
  9c:	bl	0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  a0:	cbz	x0, a8 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE+0x24>
  a4:	ldr	w0, [x0, #8]
  a8:	ldr	x30, [sp], #16
  ac:	ret

00000000000000b0 <_ZN11__sanitizer24StackDepotPut_WithHandleENS_10StackTraceE>:
  b0:	adrp	x8, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  b4:	add	x8, x8, #0x0
  b8:	mov	x2, x1
  bc:	mov	x1, x0
  c0:	mov	x0, x8
  c4:	mov	x3, xzr
  c8:	b	0 <_ZN11__sanitizer16StackDepotHandle2idEv>

00000000000000cc <_ZN11__sanitizer13StackDepotGetEj>:
  cc:	str	x30, [sp, #-16]!
  d0:	cbz	w0, 144 <_ZN11__sanitizer13StackDepotGetEj+0x78>
  d4:	tbnz	w0, #31, 17c <_ZN11__sanitizer13StackDepotGetEj+0xb0>
  d8:	lsr	w9, w0, #11
  dc:	adrp	x10, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  e0:	mov	x8, xzr
  e4:	and	w9, w9, #0x1ff000
  e8:	add	x10, x10, #0x0
  ec:	b	fc <_ZN11__sanitizer13StackDepotGetEj+0x30>
  f0:	add	x8, x8, #0x1
  f4:	cmp	x8, #0x1, lsl #12
  f8:	b.eq	144 <_ZN11__sanitizer13StackDepotGetEj+0x78>  // b.none
  fc:	add	x11, x8, x9
 100:	cmp	x11, #0x100, lsl #12
 104:	b.cs	15c <_ZN11__sanitizer13StackDepotGetEj+0x90>  // b.hs, b.nlast
 108:	ldr	x11, [x10, x11, lsl #3]
 10c:	ands	x11, x11, #0xfffffffffffffffe
 110:	b.eq	f0 <_ZN11__sanitizer13StackDepotGetEj+0x24>  // b.none
 114:	ldr	w12, [x11, #8]
 118:	cmp	w12, w0
 11c:	b.eq	12c <_ZN11__sanitizer13StackDepotGetEj+0x60>  // b.none
 120:	ldr	x11, [x11]
 124:	cbnz	x11, 114 <_ZN11__sanitizer13StackDepotGetEj+0x48>
 128:	b	f0 <_ZN11__sanitizer13StackDepotGetEj+0x24>
 12c:	ldp	w9, w8, [x11, #16]
 130:	add	x0, x11, #0x18
 134:	lsl	x8, x8, #32
 138:	orr	x1, x9, x8
 13c:	ldr	x30, [sp], #16
 140:	ret
 144:	mov	x8, xzr
 148:	mov	x9, xzr
 14c:	mov	x0, xzr
 150:	orr	x1, x9, x8
 154:	ldr	x30, [sp], #16
 158:	ret
 15c:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 160:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 164:	and	x3, x11, #0xffffffff
 168:	add	x0, x0, #0x0
 16c:	add	x2, x2, #0x0
 170:	mov	w1, #0x92                  	// #146
 174:	mov	w4, #0x100000              	// #1048576
 178:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 17c:	and	w3, w0, #0x7fffffff
 180:	mov	w4, w0
 184:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 188:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 18c:	add	x0, x0, #0x0
 190:	add	x2, x2, #0x0
 194:	mov	w1, #0x8d                  	// #141
 198:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000019c <_ZN11__sanitizer17StackDepotLockAllEv>:
 19c:	str	x30, [sp, #-48]!
 1a0:	stp	x22, x21, [sp, #16]
 1a4:	stp	x20, x19, [sp, #32]
 1a8:	adrp	x20, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 1ac:	mov	x19, xzr
 1b0:	add	x20, x20, #0x0
 1b4:	b	1c4 <_ZN11__sanitizer17StackDepotLockAllEv+0x28>
 1b8:	add	x19, x19, #0x1
 1bc:	cmp	x19, #0x100, lsl #12
 1c0:	b.eq	22c <_ZN11__sanitizer17StackDepotLockAllEv+0x90>  // b.none
 1c4:	mov	w21, wzr
 1c8:	add	x22, x20, x19, lsl #3
 1cc:	ldr	x8, [x22]
 1d0:	tbnz	w8, #0, 1e4 <_ZN11__sanitizer17StackDepotLockAllEv+0x48>
 1d4:	b	1f0 <_ZN11__sanitizer17StackDepotLockAllEv+0x54>
 1d8:	add	w21, w21, #0x1
 1dc:	ldr	x8, [x22]
 1e0:	tbz	w8, #0, 1f0 <_ZN11__sanitizer17StackDepotLockAllEv+0x54>
 1e4:	cmp	w21, #0x9
 1e8:	b.ls	1d8 <_ZN11__sanitizer17StackDepotLockAllEv+0x3c>  // b.plast
 1ec:	b	218 <_ZN11__sanitizer17StackDepotLockAllEv+0x7c>
 1f0:	orr	x9, x8, #0x1
 1f4:	ldaxr	x10, [x22]
 1f8:	cmp	x10, x8
 1fc:	b.ne	20c <_ZN11__sanitizer17StackDepotLockAllEv+0x70>  // b.any
 200:	stlxr	w10, x9, [x22]
 204:	cbnz	w10, 1f4 <_ZN11__sanitizer17StackDepotLockAllEv+0x58>
 208:	b	1b8 <_ZN11__sanitizer17StackDepotLockAllEv+0x1c>
 20c:	clrex
 210:	cmp	w21, #0x9
 214:	b.ls	1d8 <_ZN11__sanitizer17StackDepotLockAllEv+0x3c>  // b.plast
 218:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 21c:	add	w21, w21, #0x1
 220:	ldr	x8, [x22]
 224:	tbz	w8, #0, 1f0 <_ZN11__sanitizer17StackDepotLockAllEv+0x54>
 228:	b	1e4 <_ZN11__sanitizer17StackDepotLockAllEv+0x48>
 22c:	ldp	x20, x19, [sp, #32]
 230:	ldp	x22, x21, [sp, #16]
 234:	ldr	x30, [sp], #48
 238:	ret

000000000000023c <_ZN11__sanitizer19StackDepotUnlockAllEv>:
 23c:	adrp	x9, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 240:	mov	x8, xzr
 244:	add	x9, x9, #0x0
 248:	ldr	x10, [x9, x8]
 24c:	dmb	ish
 250:	and	x10, x10, #0xfffffffffffffffe
 254:	str	x10, [x9, x8]
 258:	add	x8, x8, #0x8
 25c:	cmp	x8, #0x800, lsl #12
 260:	b.ne	248 <_ZN11__sanitizer19StackDepotUnlockAllEv+0xc>  // b.any
 264:	ret

0000000000000268 <_ZN11__sanitizer20StackDepotReverseMap10IdDescPair12IdComparatorERKS1_S3_>:
 268:	ldr	w8, [x0]
 26c:	ldr	w9, [x1]
 270:	cmp	w8, w9
 274:	cset	w0, cc  // cc = lo, ul, last
 278:	ret

000000000000027c <_ZN11__sanitizer20StackDepotReverseMapC1Ev>:
 27c:	sub	sp, sp, #0x40
 280:	str	x30, [sp, #16]
 284:	stp	x22, x21, [sp, #32]
 288:	stp	x20, x19, [sp, #48]
 28c:	adrp	x20, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 290:	mov	w8, #0x400                 	// #1024
 294:	stp	xzr, xzr, [x0, #8]
 298:	str	xzr, [x0]
 29c:	add	x20, x20, #0x0
 2a0:	movk	w8, #0x80, lsl #16
 2a4:	ldr	x8, [x20, x8]
 2a8:	mov	x19, x0
 2ac:	adds	x1, x8, #0x64
 2b0:	b.eq	2bc <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x40>  // b.none
 2b4:	mov	x0, x19
 2b8:	bl	0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 2bc:	mov	x21, xzr
 2c0:	b	2d0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x54>
 2c4:	add	x21, x21, #0x1
 2c8:	cmp	x21, #0x100, lsl #12
 2cc:	b.eq	300 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x84>  // b.none
 2d0:	ldr	x8, [x20, x21, lsl #3]
 2d4:	ands	x22, x8, #0xfffffffffffffffe
 2d8:	b.eq	2c4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x48>  // b.none
 2dc:	ldr	w8, [x22, #8]
 2e0:	mov	x1, sp
 2e4:	mov	x0, x19
 2e8:	str	x22, [sp, #8]
 2ec:	str	w8, [sp]
 2f0:	bl	0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 2f4:	ldr	x22, [x22]
 2f8:	cbnz	x22, 2dc <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x60>
 2fc:	b	2c4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x48>
 300:	ldr	x9, [x19, #16]
 304:	cmp	x9, #0x2
 308:	b.cc	42c <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1b0>  // b.lo, b.ul, b.last
 30c:	ldr	x8, [x19]
 310:	mov	w10, #0x1                   	// #1
 314:	b	324 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xa8>
 318:	add	x10, x10, #0x1
 31c:	cmp	x10, x9
 320:	b.eq	424 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1a8>  // b.none
 324:	mov	x12, x10
 328:	sub	x11, x12, #0x1
 32c:	lsr	x11, x11, #1
 330:	add	x13, x8, x12, lsl #4
 334:	add	x12, x8, x11, lsl #4
 338:	ldr	w14, [x12]
 33c:	ldr	w15, [x13]
 340:	cmp	w14, w15
 344:	b.cs	318 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x9c>  // b.hs, b.nlast
 348:	ldr	q0, [x13]
 34c:	str	q0, [sp]
 350:	ldr	q0, [x12]
 354:	str	q0, [x13]
 358:	ldr	q0, [sp]
 35c:	str	q0, [x12]
 360:	mov	x12, x11
 364:	cbnz	x11, 328 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xac>
 368:	b	318 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x9c>
 36c:	ldr	q0, [x8]
 370:	lsl	x11, x9, #4
 374:	mov	x10, xzr
 378:	str	q0, [sp]
 37c:	ldr	q0, [x8, x11]
 380:	str	q0, [x8]
 384:	ldr	q0, [sp]
 388:	str	q0, [x8, x11]
 38c:	mov	x11, xzr
 390:	mov	w14, #0x1                   	// #1
 394:	lsl	x12, x10, #1
 398:	bfi	x14, x10, #1, #63
 39c:	add	x13, x12, #0x2
 3a0:	cmp	x14, x9
 3a4:	lsl	x12, x10, #4
 3a8:	b.cc	3c0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x144>  // b.lo, b.ul, b.last
 3ac:	cmp	x13, x9
 3b0:	b.cc	3dc <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x160>  // b.lo, b.ul, b.last
 3b4:	cmp	x11, x10
 3b8:	b.ne	3fc <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x180>  // b.any
 3bc:	b	424 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1a8>
 3c0:	lsl	x15, x14, #4
 3c4:	ldr	w11, [x8, x12]
 3c8:	ldr	w15, [x8, x15]
 3cc:	cmp	w11, w15
 3d0:	csel	x11, x14, x10, cc  // cc = lo, ul, last
 3d4:	cmp	x13, x9
 3d8:	b.cs	3b4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x138>  // b.hs, b.nlast
 3dc:	lsl	x14, x11, #4
 3e0:	lsl	x15, x13, #4
 3e4:	ldr	w14, [x8, x14]
 3e8:	ldr	w15, [x8, x15]
 3ec:	cmp	w14, w15
 3f0:	csel	x11, x13, x11, cc  // cc = lo, ul, last
 3f4:	cmp	x11, x10
 3f8:	b.eq	424 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1a8>  // b.none
 3fc:	ldr	q0, [x8, x12]
 400:	lsl	x10, x11, #4
 404:	cmp	x11, x9
 408:	str	q0, [sp]
 40c:	ldr	q0, [x8, x10]
 410:	str	q0, [x8, x12]
 414:	ldr	q0, [sp]
 418:	str	q0, [x8, x10]
 41c:	mov	x10, x11
 420:	b.cc	390 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x114>  // b.lo, b.ul, b.last
 424:	subs	x9, x9, #0x1
 428:	b.ne	36c <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xf0>  // b.any
 42c:	ldp	x20, x19, [sp, #48]
 430:	ldp	x22, x21, [sp, #32]
 434:	ldr	x30, [sp, #16]
 438:	add	sp, sp, #0x40
 43c:	ret

0000000000000440 <_ZN11__sanitizer20StackDepotReverseMap3GetEj>:
 440:	str	x30, [sp, #-16]!
 444:	ldr	x4, [x0, #16]
 448:	cbz	x4, 4c4 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x84>
 44c:	mov	x3, xzr
 450:	mov	x10, x4
 454:	add	x8, x10, x3
 458:	lsr	x8, x8, #1
 45c:	cmp	x4, x8
 460:	b.ls	4dc <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x9c>  // b.plast
 464:	ldr	x9, [x0]
 468:	lsl	x11, x8, #4
 46c:	ldr	w11, [x9, x11]
 470:	cmp	w11, w1
 474:	csel	x10, x10, x8, cc  // cc = lo, ul, last
 478:	csinc	x3, x3, x8, cs  // cs = hs, nlast
 47c:	cmp	x10, x3
 480:	b.hi	454 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x14>  // b.pmore
 484:	cmp	x3, x4
 488:	b.hi	4c4 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x84>  // b.pmore
 48c:	cmp	x4, x3
 490:	b.ls	4f8 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0xb8>  // b.plast
 494:	lsl	x8, x3, #4
 498:	ldr	w8, [x9, x8]
 49c:	cmp	w8, w1
 4a0:	b.ne	4c4 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x84>  // b.any
 4a4:	add	x8, x9, x3, lsl #4
 4a8:	ldr	x9, [x8, #8]
 4ac:	ldp	w8, w10, [x9, #16]
 4b0:	add	x0, x9, #0x18
 4b4:	lsl	x9, x10, #32
 4b8:	orr	x1, x9, x8
 4bc:	ldr	x30, [sp], #16
 4c0:	ret
 4c4:	mov	x0, xzr
 4c8:	mov	x8, xzr
 4cc:	mov	x9, xzr
 4d0:	orr	x1, x9, x8
 4d4:	ldr	x30, [sp], #16
 4d8:	ret
 4dc:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 4e0:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 4e4:	add	x0, x0, #0x0
 4e8:	add	x2, x2, #0x0
 4ec:	mov	w1, #0x1c9                 	// #457
 4f0:	mov	x3, x8
 4f4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4f8:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 4fc:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 500:	add	x0, x0, #0x0
 504:	add	x2, x2, #0x0
 508:	mov	w1, #0x1c5                 	// #453
 50c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb:

0000000000000000 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	mov	x19, x3
  20:	mov	x21, x2
  24:	mov	x20, x1
  28:	mov	x23, x0
  2c:	cbz	x3, 34 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x34>
  30:	strb	wzr, [x19]
  34:	mov	x24, xzr
  38:	cbz	x20, 398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
  3c:	cbz	w21, 398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
  40:	mov	w9, #0x400                 	// #1024
  44:	movk	w9, #0x80, lsl #16
  48:	mov	w10, #0xb28c                	// #45708
  4c:	mov	w8, #0xe995                	// #59797
  50:	movk	w10, #0x9747, lsl #16
  54:	and	x28, x21, #0xffffffff
  58:	add	x9, x23, x9
  5c:	lsr	x13, x21, #32
  60:	movk	w8, #0x5bd1, lsl #16
  64:	str	x9, [sp, #16]
  68:	eor	w10, w10, w21, lsl #3
  6c:	mov	x9, x20
  70:	mov	x11, x28
  74:	ldr	w12, [x9], #8
  78:	mul	w10, w10, w8
  7c:	subs	x11, x11, #0x1
  80:	mul	w12, w12, w8
  84:	eor	w12, w12, w12, lsr #24
  88:	mul	w12, w12, w8
  8c:	eor	w10, w12, w10
  90:	b.ne	74 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x74>  // b.any
  94:	eor	w9, w10, w10, lsr #13
  98:	mul	w26, w9, w8
  9c:	and	w8, w26, #0xfffff
  a0:	eor	w11, w8, w26, lsr #15
  a4:	add	x29, x23, w11, uxtw #3
  a8:	ldr	x8, [x29]
  ac:	lsl	x22, x28, #3
  b0:	ands	x27, x8, #0xfffffffffffffffe
  b4:	b.eq	118 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x118>  // b.none
  b8:	mov	x24, x27
  bc:	b	c8 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xc8>
  c0:	ldr	x24, [x24]
  c4:	cbz	x24, 118 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x118>
  c8:	ldr	w8, [x24, #12]
  cc:	eor	w8, w8, w26
  d0:	lsr	w8, w8, #20
  d4:	cbnz	w8, c0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xc0>
  d8:	ldr	w8, [x24, #16]
  dc:	cmp	w8, w21
  e0:	b.ne	c0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xc0>  // b.any
  e4:	ldr	w8, [x24, #20]
  e8:	cmp	w8, w13
  ec:	b.ne	c0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xc0>  // b.any
  f0:	mov	x8, xzr
  f4:	add	x9, x24, x8
  f8:	ldr	x9, [x9, #24]
  fc:	ldr	x10, [x20, x8]
 100:	cmp	x9, x10
 104:	b.ne	c0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xc0>  // b.any
 108:	add	x8, x8, #0x8
 10c:	cmp	x22, x8
 110:	b.ne	f4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xf4>  // b.any
 114:	b	398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
 118:	mov	w24, wzr
 11c:	str	x11, [sp, #8]
 120:	str	x13, [sp, #24]
 124:	ldr	x25, [x29]
 128:	tbnz	w25, #0, 13c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x13c>
 12c:	b	148 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x148>
 130:	add	w24, w24, #0x1
 134:	ldr	x25, [x29]
 138:	tbz	w25, #0, 148 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x148>
 13c:	cmp	w24, #0x9
 140:	b.ls	130 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x130>  // b.plast
 144:	b	170 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x170>
 148:	orr	x8, x25, #0x1
 14c:	ldaxr	x9, [x29]
 150:	cmp	x9, x25
 154:	b.ne	164 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x164>  // b.any
 158:	stlxr	w9, x8, [x29]
 15c:	cbnz	w9, 14c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x14c>
 160:	b	188 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x188>
 164:	clrex
 168:	cmp	w24, #0x9
 16c:	b.ls	130 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x130>  // b.plast
 170:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 174:	ldr	x13, [sp, #24]
 178:	add	w24, w24, #0x1
 17c:	ldr	x25, [x29]
 180:	tbz	w25, #0, 148 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x148>
 184:	b	13c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x13c>
 188:	cbz	x25, 200 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x200>
 18c:	cmp	x25, x27
 190:	b.eq	200 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x200>  // b.none
 194:	mov	x24, x25
 198:	b	1a4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1a4>
 19c:	ldr	x24, [x24]
 1a0:	cbz	x24, 200 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x200>
 1a4:	ldr	w8, [x24, #12]
 1a8:	eor	w8, w8, w26
 1ac:	lsr	w8, w8, #20
 1b0:	cbnz	w8, 19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>
 1b4:	ldr	w8, [x24, #16]
 1b8:	cmp	w8, w21
 1bc:	b.ne	19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>  // b.any
 1c0:	ldr	w8, [x24, #20]
 1c4:	cmp	w8, w13
 1c8:	b.ne	19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>  // b.any
 1cc:	mov	x8, xzr
 1d0:	lsl	x9, x8, #3
 1d4:	add	x10, x24, x9
 1d8:	ldr	x10, [x10, #24]
 1dc:	ldr	x9, [x20, x9]
 1e0:	cmp	x10, x9
 1e4:	b.ne	19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>  // b.any
 1e8:	add	x8, x8, #0x1
 1ec:	cmp	x28, x8
 1f0:	b.ne	1d0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1d0>  // b.any
 1f4:	dmb	ish
 1f8:	str	x25, [x29]
 1fc:	b	398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
 200:	ldr	x8, [sp, #8]
 204:	lsr	x8, x8, #12
 208:	add	x9, x23, x8, lsl #2
 20c:	add	x10, x9, #0x800, lsl #12
 210:	ldaxr	w9, [x10]
 214:	add	w9, w9, #0x1
 218:	stlxr	w11, w9, [x10]
 21c:	cbnz	w11, 210 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x210>
 220:	ldr	x11, [sp, #16]
 224:	cmp	w9, #0x800, lsl #12
 228:	ldr	x10, [x11]
 22c:	add	x10, x10, #0x1
 230:	str	x10, [x11]
 234:	b.cs	3bc <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3bc>  // b.hs, b.nlast
 238:	orr	w23, w9, w8, lsl #23
 23c:	cbz	w23, 3dc <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3dc>
 240:	tbnz	w23, #31, 3fc <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3fc>
 244:	adrp	x28, 0 <_ZN11__sanitizer22thePersistentAllocatorE>
 248:	mov	x8, #0x7fffffff8           	// #34359738360
 24c:	ldr	x28, [x28]
 250:	add	x8, x8, x21, lsl #3
 254:	and	x8, x8, #0x7fffffff8
 258:	add	x27, x8, #0x20
 25c:	ldr	x24, [x28, #8]
 260:	dmb	ish
 264:	ldr	x9, [x28, #16]
 268:	dmb	ish
 26c:	cbz	x24, 2a0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2a0>
 270:	add	x8, x24, x27
 274:	cmp	x8, x9
 278:	b.hi	2a0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2a0>  // b.pmore
 27c:	add	x9, x28, #0x8
 280:	ldaxr	x10, [x9]
 284:	cmp	x10, x24
 288:	b.ne	298 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x298>  // b.any
 28c:	stlxr	w10, x8, [x9]
 290:	cbnz	w10, 27c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x27c>
 294:	b	354 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x354>
 298:	clrex
 29c:	b	25c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x25c>
 2a0:	ldaxrb	w8, [x28]
 2a4:	mov	w9, #0x1                   	// #1
 2a8:	stlxrb	w10, w9, [x28]
 2ac:	cbnz	w10, 2a0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2a0>
 2b0:	cbz	w8, 2c0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2c0>
 2b4:	adrp	x0, 0 <_ZN11__sanitizer22thePersistentAllocatorE>
 2b8:	ldr	x0, [x0]
 2bc:	bl	0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 2c0:	cmp	x27, #0x10, lsl #12
 2c4:	mov	w8, #0x10000               	// #65536
 2c8:	csel	x8, x27, x8, hi  // hi = pmore
 2cc:	str	x8, [sp, #8]
 2d0:	b	304 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x304>
 2d4:	str	xzr, [x28, #8]
 2d8:	ldr	x24, [sp, #8]
 2dc:	adrp	x1, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 2e0:	add	x1, x1, #0x0
 2e4:	mov	w2, wzr
 2e8:	mov	x0, x24
 2ec:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 2f0:	add	x8, x24, x0
 2f4:	dmb	ish
 2f8:	str	x8, [x28, #16]
 2fc:	dmb	ish
 300:	str	x0, [x28, #8]
 304:	ldr	x24, [x28, #8]
 308:	dmb	ish
 30c:	ldr	x9, [x28, #16]
 310:	dmb	ish
 314:	cbz	x24, 2d4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2d4>
 318:	add	x8, x24, x27
 31c:	cmp	x8, x9
 320:	b.hi	2d4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2d4>  // b.pmore
 324:	ldp	x11, x13, [sp, #16]
 328:	add	x9, x28, #0x8
 32c:	ldaxr	x10, [x9]
 330:	cmp	x10, x24
 334:	b.ne	344 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x344>  // b.any
 338:	stlxr	w10, x8, [x9]
 33c:	cbnz	w10, 328 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x328>
 340:	b	34c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x34c>
 344:	clrex
 348:	b	304 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x304>
 34c:	dmb	ish
 350:	strb	wzr, [x28]
 354:	ldr	x8, [x11, #8]
 358:	and	w9, w26, #0xfff00000
 35c:	add	x0, x24, #0x18
 360:	mov	x1, x20
 364:	add	x8, x8, x27
 368:	mov	x2, x22
 36c:	str	x8, [x11, #8]
 370:	str	w23, [x24, #8]
 374:	str	w9, [x24, #12]
 378:	stp	w21, w13, [x24, #16]
 37c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 380:	str	x25, [x24]
 384:	dmb	ish
 388:	str	x24, [x29]
 38c:	cbz	x19, 398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
 390:	mov	w8, #0x1                   	// #1
 394:	strb	w8, [x19]
 398:	mov	x0, x24
 39c:	ldp	x20, x19, [sp, #112]
 3a0:	ldp	x22, x21, [sp, #96]
 3a4:	ldp	x24, x23, [sp, #80]
 3a8:	ldp	x26, x25, [sp, #64]
 3ac:	ldp	x28, x27, [sp, #48]
 3b0:	ldp	x29, x30, [sp, #32]
 3b4:	add	sp, sp, #0x80
 3b8:	ret
 3bc:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 3c0:	adrp	x2, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 3c4:	mov	w3, w9
 3c8:	add	x0, x0, #0x0
 3cc:	add	x2, x2, #0x0
 3d0:	mov	w1, #0x78                  	// #120
 3d4:	mov	w4, #0x800000              	// #8388608
 3d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3dc:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 3e0:	adrp	x2, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 3e4:	add	x0, x0, #0x0
 3e8:	add	x2, x2, #0x0
 3ec:	mov	w1, #0x7a                  	// #122
 3f0:	mov	x3, x23
 3f4:	mov	x4, xzr
 3f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3fc:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 400:	adrp	x2, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 404:	and	w3, w23, #0x7fffffff
 408:	add	x0, x0, #0x0
 40c:	add	x2, x2, #0x0
 410:	mov	w1, #0x7b                  	// #123
 414:	mov	x4, x23
 418:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #4
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #4
  90:	mov	w2, #0x10                  	// #16
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE9push_backERKS2_>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #4
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #4
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_20StackDepotReverseMap10IdDescPairEE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_stacktrace.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>:
   0:	add	x0, x0, #0x4
   4:	ret

0000000000000008 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>:
   8:	mov	x0, x30
   c:	ret

0000000000000010 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm>:
  10:	stp	x30, x21, [sp, #-32]!
  14:	stp	x20, x19, [sp, #16]
  18:	cmp	x3, #0x0
  1c:	cinc	x8, x2, ne  // ne = any
  20:	mov	x20, x3
  24:	and	x3, x8, #0xffffffff
  28:	cmp	x3, #0x101
  2c:	str	w8, [x0, #8]
  30:	b.cs	64 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm+0x54>  // b.hs, b.nlast
  34:	mov	x21, x2
  38:	mov	x19, x0
  3c:	add	x0, x0, #0x10
  40:	lsl	x2, x2, #3
  44:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  48:	cbz	x20, 54 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm+0x44>
  4c:	add	x8, x19, x21, lsl #3
  50:	str	x20, [x8, #16]
  54:	str	xzr, [x19, #2064]
  58:	ldp	x20, x19, [sp, #16]
  5c:	ldp	x30, x21, [sp], #32
  60:	ret
  64:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
  68:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
  6c:	add	x0, x0, #0x0
  70:	add	x2, x2, #0x0
  74:	mov	w1, #0x23                  	// #35
  78:	mov	w4, #0x100                 	// #256
  7c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000080 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj>:
  80:	stp	x30, x25, [sp, #-64]!
  84:	stp	x24, x23, [sp, #16]
  88:	stp	x22, x21, [sp, #32]
  8c:	stp	x20, x19, [sp, #48]
  90:	mov	w21, w5
  94:	cmp	w5, #0x1
  98:	b.ls	190 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x110>  // b.plast
  9c:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
  a0:	ldr	x25, [x25]
  a4:	mov	x23, x0
  a8:	mov	x24, x4
  ac:	mov	x19, x3
  b0:	ldr	x0, [x25]
  b4:	mov	x20, x2
  b8:	mov	x22, x1
  bc:	cbnz	x0, c8 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x48>
  c0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  c4:	str	x0, [x25]
  c8:	mov	w8, #0x1                   	// #1
  cc:	cmp	x19, #0x1, lsl #12
  d0:	str	x22, [x23, #16]
  d4:	str	w8, [x23, #8]
  d8:	b.cs	f0 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x70>  // b.hs, b.nlast
  dc:	ldp	x20, x19, [sp, #48]
  e0:	ldp	x22, x21, [sp, #32]
  e4:	ldp	x24, x23, [sp, #16]
  e8:	ldp	x30, x25, [sp], #64
  ec:	ret
  f0:	cmp	x19, x24
  f4:	b.ls	1b0 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x130>  // b.plast
  f8:	tst	x20, #0x7
  fc:	b.ne	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.any
 100:	sub	x8, x19, #0x10
 104:	cmp	x8, x20
 108:	b.ls	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.plast
 10c:	cmp	x20, x24
 110:	b.ls	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.plast
 114:	mov	w9, #0x1                   	// #1
 118:	cmp	w9, w21
 11c:	b.cs	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.hs, b.nlast
 120:	ldr	x10, [x20, #8]
 124:	cmp	x10, x0
 128:	b.cc	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.lo, b.ul, b.last
 12c:	cmp	x10, x22
 130:	b.eq	144 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xc4>  // b.none
 134:	add	x11, x23, w9, uxtw #3
 138:	add	w9, w9, #0x1
 13c:	str	w9, [x23, #8]
 140:	str	x10, [x11, #16]
 144:	cmp	x20, x19
 148:	b.cs	170 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xf0>  // b.hs, b.nlast
 14c:	ldr	x10, [x20]
 150:	tst	x10, #0x7
 154:	b.ne	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.any
 158:	cmp	x8, x10
 15c:	b.ls	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>  // b.plast
 160:	cmp	x10, x20
 164:	mov	x20, x10
 168:	b.hi	118 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x98>  // b.pmore
 16c:	b	dc <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x5c>
 170:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 174:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 178:	add	x0, x0, #0x0
 17c:	add	x2, x2, #0x0
 180:	mov	w1, #0x33                  	// #51
 184:	mov	x3, x19
 188:	mov	x4, x20
 18c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 190:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 194:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 198:	mov	w3, w21
 19c:	add	x0, x0, #0x0
 1a0:	add	x2, x2, #0x0
 1a4:	mov	w1, #0x49                  	// #73
 1a8:	mov	w4, #0x2                   	// #2
 1ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1b0:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 1b4:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x2, x2, #0x0
 1c0:	mov	w1, #0x33                  	// #51
 1c4:	mov	x3, x19
 1c8:	mov	x4, x24
 1cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001d0 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>:
 1d0:	str	x30, [sp, #-16]!
 1d4:	ldr	w4, [x0, #8]
 1d8:	mov	x3, x1
 1dc:	cmp	x4, x1
 1e0:	b.ls	294 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0xc4>  // b.plast
 1e4:	subs	w8, w4, w3
 1e8:	str	w8, [x0, #8]
 1ec:	b.eq	25c <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x8c>  // b.none
 1f0:	cmp	w8, #0x3
 1f4:	b.ls	230 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x60>  // b.plast
 1f8:	lsl	x10, x8, #3
 1fc:	lsl	x9, x3, #3
 200:	add	x12, x9, x10
 204:	add	x12, x12, x0
 208:	add	x11, x0, #0x10
 20c:	add	x12, x12, #0x10
 210:	cmp	x12, x11
 214:	b.ls	264 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x94>  // b.plast
 218:	add	x10, x10, x0
 21c:	add	x11, x9, x0
 220:	add	x10, x10, #0x10
 224:	add	x11, x11, #0x10
 228:	cmp	x11, x10
 22c:	b.cs	264 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x94>  // b.hs, b.nlast
 230:	mov	x10, xzr
 234:	sub	x8, x8, x10
 238:	add	x9, x0, x10, lsl #3
 23c:	add	x10, x10, x3
 240:	add	x10, x0, x10, lsl #3
 244:	add	x9, x9, #0x10
 248:	add	x10, x10, #0x10
 24c:	ldr	x11, [x10], #8
 250:	subs	x8, x8, #0x1
 254:	str	x11, [x9], #8
 258:	b.ne	24c <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x7c>  // b.any
 25c:	ldr	x30, [sp], #16
 260:	ret
 264:	and	x10, x8, #0xfffffffc
 268:	mov	x11, x10
 26c:	mov	x12, x0
 270:	add	x13, x12, x9
 274:	ldp	q1, q0, [x13, #16]
 278:	subs	x11, x11, #0x4
 27c:	str	q0, [x12, #32]!
 280:	stur	q1, [x12, #-16]
 284:	b.ne	270 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0xa0>  // b.any
 288:	cmp	x10, x8
 28c:	b.ne	234 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x64>  // b.any
 290:	b	25c <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x8c>
 294:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 298:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 29c:	add	x0, x0, #0x0
 2a0:	add	x2, x2, #0x0
 2a4:	mov	w1, #0x74                  	// #116
 2a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002ac <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>:
 2ac:	ldr	w9, [x0, #8]
 2b0:	cmp	w9, #0x2
 2b4:	b.cc	300 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm+0x54>  // b.lo, b.ul, b.last
 2b8:	mov	x8, x0
 2bc:	ldr	x8, [x8]
 2c0:	mov	x0, xzr
 2c4:	mov	w10, #0x1                   	// #1
 2c8:	ldr	x11, [x8, x10, lsl #3]
 2cc:	ldr	x12, [x8, x0, lsl #3]
 2d0:	sub	x13, x1, x11
 2d4:	subs	x11, x11, x1
 2d8:	sub	x14, x1, x12
 2dc:	csel	x11, x13, x11, cc  // cc = lo, ul, last
 2e0:	subs	x12, x12, x1
 2e4:	csel	x12, x14, x12, cc  // cc = lo, ul, last
 2e8:	cmp	x11, x12
 2ec:	csel	x0, x10, x0, cc  // cc = lo, ul, last
 2f0:	add	x10, x10, #0x1
 2f4:	cmp	x10, x9
 2f8:	b.cc	2c8 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm+0x1c>  // b.lo, b.ul, b.last
 2fc:	ret
 300:	mov	x0, xzr
 304:	ret

sanitizer_stacktrace_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK11__sanitizer10StackTrace5PrintEv>:
   0:	sub	sp, sp, #0xa0
   4:	str	x30, [sp, #64]
   8:	stp	x28, x27, [sp, #80]
   c:	stp	x26, x25, [sp, #96]
  10:	stp	x24, x23, [sp, #112]
  14:	stp	x22, x21, [sp, #128]
  18:	stp	x20, x19, [sp, #144]
  1c:	ldr	x8, [x0]
  20:	cbz	x8, 6c <_ZNK11__sanitizer10StackTrace5PrintEv+0x6c>
  24:	ldr	w8, [x0, #8]
  28:	mov	x19, x0
  2c:	cbz	w8, 6c <_ZNK11__sanitizer10StackTrace5PrintEv+0x6c>
  30:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  34:	ldr	x21, [x21]
  38:	ldr	x0, [x21]
  3c:	cbz	x0, 94 <_ZNK11__sanitizer10StackTrace5PrintEv+0x94>
  40:	lsl	x20, x0, #1
  44:	stp	xzr, xzr, [sp, #40]
  48:	str	xzr, [sp, #32]
  4c:	cbz	x20, ac <_ZNK11__sanitizer10StackTrace5PrintEv+0xac>
  50:	add	x0, sp, #0x20
  54:	mov	x1, x20
  58:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  5c:	ldr	x8, [sp, #48]
  60:	cmp	x8, x20
  64:	b.cc	b8 <_ZNK11__sanitizer10StackTrace5PrintEv+0xb8>  // b.lo, b.ul, b.last
  68:	b	e8 <_ZNK11__sanitizer10StackTrace5PrintEv+0xe8>
  6c:	ldp	x20, x19, [sp, #144]
  70:	ldp	x22, x21, [sp, #128]
  74:	ldp	x24, x23, [sp, #112]
  78:	ldp	x26, x25, [sp, #96]
  7c:	ldp	x28, x27, [sp, #80]
  80:	ldr	x30, [sp, #64]
  84:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  88:	add	x0, x0, #0x0
  8c:	add	sp, sp, #0xa0
  90:	b	0 <_ZN11__sanitizer6PrintfEPKcz>
  94:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  98:	str	x0, [x21]
  9c:	lsl	x20, x0, #1
  a0:	stp	xzr, xzr, [sp, #40]
  a4:	str	xzr, [sp, #32]
  a8:	cbnz	x20, 50 <_ZNK11__sanitizer10StackTrace5PrintEv+0x50>
  ac:	mov	x8, xzr
  b0:	cmp	x8, x20
  b4:	b.cs	e8 <_ZNK11__sanitizer10StackTrace5PrintEv+0xe8>  // b.hs, b.nlast
  b8:	ldr	x9, [sp, #40]
  bc:	cmp	x9, x20
  c0:	b.cs	d4 <_ZNK11__sanitizer10StackTrace5PrintEv+0xd4>  // b.hs, b.nlast
  c4:	add	x0, sp, #0x20
  c8:	mov	x1, x20
  cc:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  d0:	ldr	x8, [sp, #48]
  d4:	ldr	x9, [sp, #32]
  d8:	sub	x2, x20, x8
  dc:	mov	w1, wzr
  e0:	add	x0, x9, x8
  e4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  e8:	stp	x20, xzr, [sp, #48]
  ec:	cbz	x20, 2d8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2d8>
  f0:	ldr	x8, [sp, #32]
  f4:	strb	wzr, [x8]
  f8:	ldr	x20, [x21]
  fc:	cbz	x20, 128 <_ZNK11__sanitizer10StackTrace5PrintEv+0x128>
 100:	stp	xzr, xzr, [sp, #8]
 104:	str	xzr, [sp]
 108:	cbz	x20, 140 <_ZNK11__sanitizer10StackTrace5PrintEv+0x140>
 10c:	mov	x0, sp
 110:	mov	x1, x20
 114:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 118:	ldr	x8, [sp, #16]
 11c:	cmp	x8, x20
 120:	b.cc	14c <_ZNK11__sanitizer10StackTrace5PrintEv+0x14c>  // b.lo, b.ul, b.last
 124:	b	17c <_ZNK11__sanitizer10StackTrace5PrintEv+0x17c>
 128:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 12c:	mov	x20, x0
 130:	str	x0, [x21]
 134:	stp	xzr, xzr, [sp, #8]
 138:	str	xzr, [sp]
 13c:	cbnz	x20, 10c <_ZNK11__sanitizer10StackTrace5PrintEv+0x10c>
 140:	mov	x8, xzr
 144:	cmp	x8, x20
 148:	b.cs	17c <_ZNK11__sanitizer10StackTrace5PrintEv+0x17c>  // b.hs, b.nlast
 14c:	ldr	x9, [sp, #8]
 150:	cmp	x9, x20
 154:	b.cs	168 <_ZNK11__sanitizer10StackTrace5PrintEv+0x168>  // b.hs, b.nlast
 158:	mov	x0, sp
 15c:	mov	x1, x20
 160:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 164:	ldr	x8, [sp, #16]
 168:	ldr	x9, [sp]
 16c:	sub	x2, x20, x8
 170:	mov	w1, wzr
 174:	add	x0, x9, x8
 178:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 17c:	stp	x20, xzr, [sp, #16]
 180:	cbz	x20, 2d8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2d8>
 184:	ldr	x8, [sp]
 188:	strb	wzr, [x8]
 18c:	ldr	w8, [x19, #8]
 190:	cbz	w8, 284 <_ZNK11__sanitizer10StackTrace5PrintEv+0x284>
 194:	adrp	x25, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 198:	ldr	x25, [x25]
 19c:	adrp	x20, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 1a0:	adrp	x21, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 1a4:	adrp	x22, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 1a8:	ldr	w26, [x25, #192]
 1ac:	mov	x27, xzr
 1b0:	mov	x24, xzr
 1b4:	add	x20, x20, #0x0
 1b8:	add	x21, x21, #0x0
 1bc:	add	x22, x22, #0x0
 1c0:	b	1dc <_ZNK11__sanitizer10StackTrace5PrintEv+0x1dc>
 1c4:	mov	x0, x23
 1c8:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 1cc:	ldr	w8, [x19, #8]
 1d0:	add	x24, x24, #0x1
 1d4:	cmp	x24, x8
 1d8:	b.cs	284 <_ZNK11__sanitizer10StackTrace5PrintEv+0x284>  // b.hs, b.nlast
 1dc:	ldr	x8, [x19]
 1e0:	ldr	x8, [x8, x24, lsl #3]
 1e4:	cbz	x8, 284 <_ZNK11__sanitizer10StackTrace5PrintEv+0x284>
 1e8:	sub	x23, x8, #0x4
 1ec:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 1f0:	mov	x1, x23
 1f4:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 1f8:	mov	x23, x0
 1fc:	mov	x28, x0
 200:	cbnz	x0, 210 <_ZNK11__sanitizer10StackTrace5PrintEv+0x210>
 204:	b	2f8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2f8>
 208:	ldr	x28, [x28]
 20c:	cbz	x28, 1c4 <_ZNK11__sanitizer10StackTrace5PrintEv+0x1c4>
 210:	ldr	x8, [sp, #48]
 214:	cbz	x8, 2d8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2d8>
 218:	ldr	x8, [sp, #32]
 21c:	mov	x2, x27
 220:	add	x3, x28, #0x8
 224:	add	x0, sp, #0x20
 228:	strb	wzr, [x8]
 22c:	ldr	x1, [x25, #200]
 230:	ldrb	w4, [x25, #189]
 234:	ldr	x5, [x25, #24]
 238:	mov	x6, x20
 23c:	str	xzr, [sp, #56]
 240:	add	x27, x27, #0x1
 244:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 248:	ldr	x1, [sp, #32]
 24c:	mov	x0, x21
 250:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 254:	subs	w26, w26, #0x1
 258:	b.lt	208 <_ZNK11__sanitizer10StackTrace5PrintEv+0x208>  // b.tstop
 25c:	ldr	x8, [sp, #24]
 260:	cbz	x8, 270 <_ZNK11__sanitizer10StackTrace5PrintEv+0x270>
 264:	mov	x0, sp
 268:	mov	x1, x22
 26c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 270:	ldr	x1, [x28, #40]
 274:	cbz	x1, 208 <_ZNK11__sanitizer10StackTrace5PrintEv+0x208>
 278:	mov	x0, sp
 27c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 280:	b	208 <_ZNK11__sanitizer10StackTrace5PrintEv+0x208>
 284:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 288:	add	x0, x0, #0x0
 28c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 290:	ldr	x8, [sp, #24]
 294:	cbz	x8, 2a8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2a8>
 298:	ldr	x1, [sp]
 29c:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 2a0:	add	x0, x0, #0x0
 2a4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 2a8:	ldp	x0, x1, [sp]
 2ac:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 2b0:	ldp	x0, x1, [sp, #32]
 2b4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 2b8:	ldp	x20, x19, [sp, #144]
 2bc:	ldp	x22, x21, [sp, #128]
 2c0:	ldp	x24, x23, [sp, #112]
 2c4:	ldp	x26, x25, [sp, #96]
 2c8:	ldp	x28, x27, [sp, #80]
 2cc:	ldr	x30, [sp, #64]
 2d0:	add	sp, sp, #0xa0
 2d4:	ret
 2d8:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 2dc:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 2e0:	add	x0, x0, #0x0
 2e4:	add	x2, x2, #0x0
 2e8:	mov	w1, #0x1c5                 	// #453
 2ec:	mov	x3, xzr
 2f0:	mov	x4, xzr
 2f4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2f8:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 2fc:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 300:	add	x0, x0, #0x0
 304:	add	x2, x2, #0x0
 308:	mov	w1, #0x23                  	// #35
 30c:	mov	x3, xzr
 310:	mov	x4, xzr
 314:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000318 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>:
 318:	cmp	w1, #0x0
 31c:	mov	w8, w1
 320:	csel	x9, xzr, x3, eq  // eq = none
 324:	cmp	w1, #0x1
 328:	str	x9, [x0, #2064]
 32c:	b.eq	33c <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x24>  // b.none
 330:	cbnz	w8, 348 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x30>
 334:	str	wzr, [x0, #8]
 338:	ret
 33c:	str	w8, [x0, #8]
 340:	str	x2, [x0, #16]
 344:	ret
 348:	mov	x1, x2
 34c:	tbz	w7, #0, 364 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x4c>
 350:	mov	x2, x3
 354:	mov	x3, x5
 358:	mov	x4, x6
 35c:	mov	w5, w8
 360:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj>
 364:	cbz	x4, 374 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x5c>
 368:	mov	x2, x4
 36c:	mov	w3, w8
 370:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj>
 374:	mov	w2, w8
 378:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>

000000000000037c <__sanitizer_symbolize_pc>:
 37c:	sub	sp, sp, #0x70
 380:	str	x30, [sp, #32]
 384:	stp	x26, x25, [sp, #48]
 388:	stp	x24, x23, [sp, #64]
 38c:	stp	x22, x21, [sp, #80]
 390:	stp	x20, x19, [sp, #96]
 394:	cbz	x3, 52c <__sanitizer_symbolize_pc+0x1b0>
 398:	mov	x22, x3
 39c:	mov	x19, x2
 3a0:	mov	x20, x1
 3a4:	sub	x21, x0, #0x4
 3a8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 3ac:	mov	x1, x21
 3b0:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 3b4:	cbz	x0, 3f4 <__sanitizer_symbolize_pc+0x78>
 3b8:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
 3bc:	ldr	x24, [x24]
 3c0:	mov	x21, x0
 3c4:	ldr	x23, [x24]
 3c8:	cbz	x23, 414 <__sanitizer_symbolize_pc+0x98>
 3cc:	stp	xzr, xzr, [sp, #8]
 3d0:	str	xzr, [sp]
 3d4:	cbz	x23, 42c <__sanitizer_symbolize_pc+0xb0>
 3d8:	mov	x0, sp
 3dc:	mov	x1, x23
 3e0:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 3e4:	ldr	x8, [sp, #16]
 3e8:	cmp	x8, x23
 3ec:	b.cc	438 <__sanitizer_symbolize_pc+0xbc>  // b.lo, b.ul, b.last
 3f0:	b	468 <__sanitizer_symbolize_pc+0xec>
 3f4:	adrp	x1, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 3f8:	add	x1, x1, #0x0
 3fc:	mov	x0, x19
 400:	mov	x2, x22
 404:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 408:	add	x8, x22, x19
 40c:	sturb	wzr, [x8, #-1]
 410:	b	52c <__sanitizer_symbolize_pc+0x1b0>
 414:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 418:	mov	x23, x0
 41c:	str	x0, [x24]
 420:	stp	xzr, xzr, [sp, #8]
 424:	str	xzr, [sp]
 428:	cbnz	x23, 3d8 <__sanitizer_symbolize_pc+0x5c>
 42c:	mov	x8, xzr
 430:	cmp	x8, x23
 434:	b.cs	468 <__sanitizer_symbolize_pc+0xec>  // b.hs, b.nlast
 438:	ldr	x9, [sp, #8]
 43c:	cmp	x9, x23
 440:	b.cs	454 <__sanitizer_symbolize_pc+0xd8>  // b.hs, b.nlast
 444:	mov	x0, sp
 448:	mov	x1, x23
 44c:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 450:	ldr	x8, [sp, #16]
 454:	ldr	x9, [sp]
 458:	sub	x2, x23, x8
 45c:	mov	w1, wzr
 460:	add	x0, x9, x8
 464:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 468:	stp	x23, xzr, [sp, #16]
 46c:	cbz	x23, 548 <__sanitizer_symbolize_pc+0x1cc>
 470:	ldr	x8, [sp]
 474:	add	x9, x19, x22
 478:	sub	x25, x9, #0x1
 47c:	cmp	x25, x19
 480:	strb	wzr, [x8]
 484:	b.ls	518 <__sanitizer_symbolize_pc+0x19c>  // b.plast
 488:	adrp	x26, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 48c:	ldr	x26, [x26]
 490:	adrp	x23, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 494:	mov	w22, wzr
 498:	add	x23, x23, #0x0
 49c:	ldr	x8, [sp, #16]
 4a0:	cbz	x8, 548 <__sanitizer_symbolize_pc+0x1cc>
 4a4:	ldr	x8, [sp]
 4a8:	add	x3, x21, #0x8
 4ac:	mov	x0, sp
 4b0:	mov	x1, x20
 4b4:	strb	wzr, [x8]
 4b8:	ldrb	w4, [x26, #189]
 4bc:	ldr	x5, [x26, #24]
 4c0:	mov	w2, w22
 4c4:	mov	x6, x23
 4c8:	str	xzr, [sp, #24]
 4cc:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 4d0:	ldr	x8, [sp, #24]
 4d4:	cbz	x8, 504 <__sanitizer_symbolize_pc+0x188>
 4d8:	ldr	x1, [sp]
 4dc:	mvn	x8, x19
 4e0:	add	x24, x8, x25
 4e4:	mov	x0, x19
 4e8:	mov	x2, x24
 4ec:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 4f0:	ldr	x8, [sp, #24]
 4f4:	cmp	x24, x8
 4f8:	csel	x8, x24, x8, cc  // cc = lo, ul, last
 4fc:	add	x19, x19, x8
 500:	strb	wzr, [x19], #1
 504:	ldr	x21, [x21]
 508:	cbz	x21, 518 <__sanitizer_symbolize_pc+0x19c>
 50c:	cmp	x19, x25
 510:	add	w22, w22, #0x1
 514:	b.cc	49c <__sanitizer_symbolize_pc+0x120>  // b.lo, b.ul, b.last
 518:	cmp	x19, x25
 51c:	b.hi	568 <__sanitizer_symbolize_pc+0x1ec>  // b.pmore
 520:	strb	wzr, [x19]
 524:	ldp	x0, x1, [sp]
 528:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 52c:	ldp	x20, x19, [sp, #96]
 530:	ldp	x22, x21, [sp, #80]
 534:	ldp	x24, x23, [sp, #64]
 538:	ldp	x26, x25, [sp, #48]
 53c:	ldr	x30, [sp, #32]
 540:	add	sp, sp, #0x70
 544:	ret
 548:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 54c:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 550:	add	x0, x0, #0x0
 554:	add	x2, x2, #0x0
 558:	mov	w1, #0x1c5                 	// #453
 55c:	mov	x3, xzr
 560:	mov	x4, xzr
 564:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 568:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 56c:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 570:	add	x0, x0, #0x0
 574:	add	x2, x2, #0x0
 578:	mov	w1, #0x87                  	// #135
 57c:	mov	x3, xzr
 580:	mov	x4, xzr
 584:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000588 <__sanitizer_symbolize_global>:
 588:	sub	sp, sp, #0x90
 58c:	stp	x30, x23, [sp, #96]
 590:	stp	x22, x21, [sp, #112]
 594:	stp	x20, x19, [sp, #128]
 598:	cbz	x3, 6a4 <__sanitizer_symbolize_global+0x11c>
 59c:	mov	x22, x0
 5a0:	add	x0, sp, #0x20
 5a4:	mov	x19, x3
 5a8:	mov	x20, x2
 5ac:	mov	x21, x1
 5b0:	strb	wzr, [x2]
 5b4:	bl	0 <_ZN11__sanitizer8DataInfoC1Ev>
 5b8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 5bc:	add	x2, sp, #0x20
 5c0:	mov	x1, x22
 5c4:	bl	0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE>
 5c8:	tbz	w0, #0, 6a4 <__sanitizer_symbolize_global+0x11c>
 5cc:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
 5d0:	ldr	x23, [x23]
 5d4:	ldr	x22, [x23]
 5d8:	cbz	x22, 604 <__sanitizer_symbolize_global+0x7c>
 5dc:	stp	xzr, xzr, [sp, #8]
 5e0:	str	xzr, [sp]
 5e4:	cbz	x22, 61c <__sanitizer_symbolize_global+0x94>
 5e8:	mov	x0, sp
 5ec:	mov	x1, x22
 5f0:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 5f4:	ldr	x8, [sp, #16]
 5f8:	cmp	x8, x22
 5fc:	b.cc	628 <__sanitizer_symbolize_global+0xa0>  // b.lo, b.ul, b.last
 600:	b	658 <__sanitizer_symbolize_global+0xd0>
 604:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 608:	mov	x22, x0
 60c:	str	x0, [x23]
 610:	stp	xzr, xzr, [sp, #8]
 614:	str	xzr, [sp]
 618:	cbnz	x22, 5e8 <__sanitizer_symbolize_global+0x60>
 61c:	mov	x8, xzr
 620:	cmp	x8, x22
 624:	b.cs	658 <__sanitizer_symbolize_global+0xd0>  // b.hs, b.nlast
 628:	ldr	x9, [sp, #8]
 62c:	cmp	x9, x22
 630:	b.cs	644 <__sanitizer_symbolize_global+0xbc>  // b.hs, b.nlast
 634:	mov	x0, sp
 638:	mov	x1, x22
 63c:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 640:	ldr	x8, [sp, #16]
 644:	ldr	x9, [sp]
 648:	sub	x2, x22, x8
 64c:	mov	w1, wzr
 650:	add	x0, x9, x8
 654:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 658:	stp	x22, xzr, [sp, #16]
 65c:	cbz	x22, 6b8 <__sanitizer_symbolize_global+0x130>
 660:	ldr	x8, [sp]
 664:	mov	x0, sp
 668:	add	x2, sp, #0x20
 66c:	mov	x1, x21
 670:	strb	wzr, [x8]
 674:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 678:	ldr	x8, [x8]
 67c:	ldr	x3, [x8, #24]
 680:	bl	0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 684:	ldr	x1, [sp]
 688:	mov	x0, x20
 68c:	mov	x2, x19
 690:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 694:	add	x8, x19, x20
 698:	sturb	wzr, [x8, #-1]
 69c:	ldp	x0, x1, [sp]
 6a0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 6a4:	ldp	x20, x19, [sp, #128]
 6a8:	ldp	x22, x21, [sp, #112]
 6ac:	ldp	x30, x23, [sp, #96]
 6b0:	add	sp, sp, #0x90
 6b4:	ret
 6b8:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 6bc:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 6c0:	add	x0, x0, #0x0
 6c4:	add	x2, x2, #0x0
 6c8:	mov	w1, #0x1c5                 	// #453
 6cc:	mov	x3, xzr
 6d0:	mov	x4, xzr
 6d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000006d8 <__sanitizer_get_module_and_offset_for_pc>:
 6d8:	str	x30, [sp, #-48]!
 6dc:	stp	x22, x21, [sp, #16]
 6e0:	stp	x20, x19, [sp, #32]
 6e4:	mov	x21, x3
 6e8:	mov	x19, x2
 6ec:	mov	x20, x1
 6f0:	mov	x22, x0
 6f4:	str	xzr, [sp, #8]
 6f8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 6fc:	add	x2, sp, #0x8
 700:	mov	x1, x22
 704:	mov	x3, x21
 708:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 70c:	tbz	w0, #0, 748 <__sanitizer_get_module_and_offset_for_pc+0x70>
 710:	mov	w0, #0x1                   	// #1
 714:	cbz	x20, 738 <__sanitizer_get_module_and_offset_for_pc+0x60>
 718:	cbz	x19, 738 <__sanitizer_get_module_and_offset_for_pc+0x60>
 71c:	ldr	x1, [sp, #8]
 720:	mov	x0, x20
 724:	mov	x2, x19
 728:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 72c:	add	x8, x19, x20
 730:	mov	w0, #0x1                   	// #1
 734:	sturb	wzr, [x8, #-1]
 738:	ldp	x20, x19, [sp, #32]
 73c:	ldp	x22, x21, [sp, #16]
 740:	ldr	x30, [sp], #48
 744:	ret
 748:	mov	w0, wzr
 74c:	ldp	x20, x19, [sp, #32]
 750:	ldp	x22, x21, [sp, #16]
 754:	ldr	x30, [sp], #48
 758:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_stacktrace_printer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	mov	x25, x1
  20:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  24:	mov	x24, x0
  28:	add	x1, x1, #0x0
  2c:	mov	x0, x25
  30:	mov	x19, x6
  34:	mov	x20, x5
  38:	mov	w21, w4
  3c:	mov	x22, x3
  40:	str	w2, [sp, #12]
  44:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  48:	adrp	x8, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  4c:	add	x8, x8, #0x0
  50:	cmp	w0, #0x0
  54:	adrp	x23, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  58:	adrp	x27, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  5c:	adrp	x26, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  60:	csel	x29, x8, x25, eq  // eq = none
  64:	adrp	x25, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  68:	add	x23, x23, #0x0
  6c:	add	x27, x27, #0x0
  70:	add	x26, x26, #0x0
  74:	add	x25, x25, #0x0
  78:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
  7c:	ldr	x2, [x22]
  80:	mov	x0, x24
  84:	mov	x1, x26
  88:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  8c:	add	x29, x29, #0x1
  90:	ldrb	w2, [x29]
  94:	cmp	w2, #0x25
  98:	b.eq	b4 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xb4>  // b.none
  9c:	cbz	w2, 3d0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3d0>
  a0:	mov	x0, x24
  a4:	mov	x1, x25
  a8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  ac:	add	x29, x29, #0x1
  b0:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
  b4:	ldrb	w1, [x29, #1]!
  b8:	sub	w8, w1, #0x25
  bc:	cmp	w8, #0x4e
  c0:	b.hi	3f0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3f0>  // b.pmore
  c4:	adr	x9, 7c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x7c>
  c8:	ldrb	w10, [x23, x8]
  cc:	add	x9, x9, x10, lsl #2
  d0:	br	x9
  d4:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  d8:	mov	x0, x24
  dc:	add	x1, x1, #0x0
  e0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  e4:	b	328 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x328>
  e8:	ldr	x8, [x22, #40]
  ec:	cmn	x8, #0x1
  f0:	csel	x2, xzr, x8, eq  // eq = none
  f4:	b	80 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x80>
  f8:	ldr	w2, [sp, #12]
  fc:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 100:	mov	x0, x24
 104:	add	x1, x1, #0x0
 108:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 10c:	add	x29, x29, #0x1
 110:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 114:	ldr	w2, [x22, #56]
 118:	b	19c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x19c>
 11c:	ldr	x28, [x22, #32]
 120:	cbz	x28, 328 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x328>
 124:	cbz	x19, 158 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x158>
 128:	mov	x0, x19
 12c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 130:	mov	x27, x0
 134:	mov	x0, x28
 138:	mov	x1, x19
 13c:	mov	x2, x27
 140:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 144:	add	x8, x28, x27
 148:	adrp	x27, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 14c:	cmp	w0, #0x0
 150:	add	x27, x27, #0x0
 154:	csel	x28, x8, x28, eq  // eq = none
 158:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 15c:	mov	x0, x24
 160:	add	x1, x1, #0x0
 164:	mov	x2, x28
 168:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 16c:	ldr	x8, [x22, #48]
 170:	cbnz	x8, 328 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x328>
 174:	ldr	x2, [x22, #40]
 178:	cmn	x2, #0x1
 17c:	b.eq	328 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x328>  // b.none
 180:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 184:	mov	x0, x24
 188:	add	x1, x1, #0x0
 18c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 190:	add	x29, x29, #0x1
 194:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 198:	ldr	w2, [x22, #60]
 19c:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 1a0:	mov	x0, x24
 1a4:	add	x1, x1, #0x0
 1a8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1ac:	add	x29, x29, #0x1
 1b0:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 1b4:	ldr	x0, [x22, #48]
 1b8:	b	290 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x290>
 1bc:	ldr	x1, [x22, #48]
 1c0:	cbnz	x1, 270 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x270>
 1c4:	ldr	x0, [x22, #8]
 1c8:	cbz	x0, 348 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x348>
 1cc:	ldr	x28, [x22, #16]
 1d0:	ldr	w27, [x22, #24]
 1d4:	mov	x1, x20
 1d8:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 1dc:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 1e0:	mov	x2, x0
 1e4:	mov	x0, x24
 1e8:	add	x1, x1, #0x0
 1ec:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1f0:	cmp	w27, #0x8
 1f4:	b.hi	404 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x404>  // b.pmore
 1f8:	adrp	x10, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 1fc:	add	x10, x10, #0x0
 200:	adr	x8, 31c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x31c>
 204:	ldrb	w9, [x10, x27]
 208:	add	x8, x8, x9, lsl #2
 20c:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 210:	add	x2, x2, #0x0
 214:	br	x8
 218:	ldr	x28, [x22, #32]
 21c:	cbz	x28, 254 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x254>
 220:	cbz	x19, 254 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x254>
 224:	mov	x0, x19
 228:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 22c:	mov	x27, x0
 230:	mov	x0, x28
 234:	mov	x1, x19
 238:	mov	x2, x27
 23c:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 240:	add	x8, x28, x27
 244:	adrp	x27, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 248:	cmp	w0, #0x0
 24c:	add	x27, x27, #0x0
 250:	csel	x28, x8, x28, eq  // eq = none
 254:	mov	x0, x24
 258:	mov	x1, x27
 25c:	mov	x2, x28
 260:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 264:	add	x29, x29, #0x1
 268:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 26c:	ldr	x1, [x22, #48]
 270:	ldp	w2, w3, [x22, #56]
 274:	and	w4, w21, #0x1
 278:	mov	x0, x24
 27c:	mov	x5, x20
 280:	bl	424 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>
 284:	add	x29, x29, #0x1
 288:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 28c:	ldr	x0, [x22, #8]
 290:	mov	x1, x20
 294:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 298:	mov	x2, x0
 29c:	mov	x0, x24
 2a0:	mov	x1, x27
 2a4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2a8:	add	x29, x29, #0x1
 2ac:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 2b0:	ldr	x2, [x22, #16]
 2b4:	b	80 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x80>
 2b8:	ldr	x2, [x22]
 2bc:	tbnz	x2, #60, 328 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x328>
 2c0:	ldr	x0, [x22, #8]
 2c4:	cbz	x0, 330 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x330>
 2c8:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 2cc:	ldr	x28, [x22, #16]
 2d0:	ldr	w27, [x22, #24]
 2d4:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 2d8:	add	x1, x1, #0x0
 2dc:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 2e0:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 2e4:	mov	x2, x0
 2e8:	mov	x0, x24
 2ec:	add	x1, x1, #0x0
 2f0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2f4:	cmp	w27, #0x8
 2f8:	b.hi	404 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x404>  // b.pmore
 2fc:	adrp	x10, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 300:	add	x10, x10, #0x0
 304:	adr	x8, 31c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x31c>
 308:	ldrb	w9, [x10, x27]
 30c:	add	x8, x8, x9, lsl #2
 310:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 314:	add	x2, x2, #0x0
 318:	br	x8
 31c:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 320:	add	x2, x2, #0x0
 324:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 328:	add	x29, x29, #0x1
 32c:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 330:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 334:	mov	x0, x24
 338:	add	x1, x1, #0x0
 33c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 340:	add	x29, x29, #0x1
 344:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 348:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 34c:	mov	x0, x24
 350:	add	x1, x1, #0x0
 354:	b	e0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe0>
 358:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 35c:	add	x2, x2, #0x0
 360:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 364:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 368:	add	x2, x2, #0x0
 36c:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 370:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 374:	add	x2, x2, #0x0
 378:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 37c:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 380:	add	x2, x2, #0x0
 384:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 388:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 38c:	add	x2, x2, #0x0
 390:	b	39c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x39c>
 394:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 398:	add	x2, x2, #0x0
 39c:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 3a0:	mov	x0, x24
 3a4:	add	x1, x1, #0x0
 3a8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 3ac:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 3b0:	mov	x0, x24
 3b4:	add	x1, x1, #0x0
 3b8:	mov	x2, x28
 3bc:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 3c0:	adrp	x27, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 3c4:	add	x27, x27, #0x0
 3c8:	add	x29, x29, #0x1
 3cc:	b	90 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x90>
 3d0:	ldp	x20, x19, [sp, #96]
 3d4:	ldp	x22, x21, [sp, #80]
 3d8:	ldp	x24, x23, [sp, #64]
 3dc:	ldp	x26, x25, [sp, #48]
 3e0:	ldp	x28, x27, [sp, #32]
 3e4:	ldp	x29, x30, [sp, #16]
 3e8:	add	sp, sp, #0x70
 3ec:	ret
 3f0:	adrp	x0, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 3f4:	add	x0, x0, #0x0
 3f8:	mov	w2, w1
 3fc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 400:	bl	0 <_ZN11__sanitizer3DieEv>
 404:	adrp	x0, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 408:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 40c:	add	x0, x0, #0x0
 410:	add	x2, x2, #0x0
 414:	mov	w1, #0x2b8                 	// #696
 418:	mov	x3, xzr
 41c:	mov	x4, xzr
 420:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000424 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>:
 424:	str	x30, [sp, #-48]!
 428:	stp	x22, x21, [sp, #16]
 42c:	stp	x20, x19, [sp, #32]
 430:	mov	x19, x0
 434:	mov	x0, x1
 438:	mov	x1, x5
 43c:	mov	w22, w4
 440:	mov	w20, w3
 444:	mov	w21, w2
 448:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 44c:	cmp	w21, #0x1
 450:	mov	x2, x0
 454:	b.lt	4a8 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x84>  // b.tstop
 458:	tbz	w22, #0, 4a8 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x84>
 45c:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 460:	add	x1, x1, #0x0
 464:	mov	x0, x19
 468:	mov	w3, w21
 46c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 470:	cmp	w20, #0x1
 474:	b.lt	48c <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x68>  // b.tstop
 478:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 47c:	add	x1, x1, #0x0
 480:	mov	x0, x19
 484:	mov	w2, w20
 488:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 48c:	mov	x0, x19
 490:	ldp	x20, x19, [sp, #32]
 494:	ldp	x22, x21, [sp, #16]
 498:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 49c:	add	x1, x1, #0x0
 4a0:	ldr	x30, [sp], #48
 4a4:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4a8:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 4ac:	add	x1, x1, #0x0
 4b0:	mov	x0, x19
 4b4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4b8:	cmp	w21, #0x1
 4bc:	b.lt	4fc <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0xd8>  // b.tstop
 4c0:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 4c4:	add	x1, x1, #0x0
 4c8:	mov	x0, x19
 4cc:	mov	w2, w21
 4d0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4d4:	cmp	w20, #0x1
 4d8:	b.lt	4fc <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0xd8>  // b.tstop
 4dc:	mov	x0, x19
 4e0:	mov	w2, w20
 4e4:	ldp	x20, x19, [sp, #32]
 4e8:	ldp	x22, x21, [sp, #16]
 4ec:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 4f0:	add	x1, x1, #0x0
 4f4:	ldr	x30, [sp], #48
 4f8:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4fc:	ldp	x20, x19, [sp, #32]
 500:	ldp	x22, x21, [sp, #16]
 504:	ldr	x30, [sp], #48
 508:	ret

000000000000050c <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_>:
 50c:	stp	x30, x21, [sp, #-32]!
 510:	stp	x20, x19, [sp, #16]
 514:	mov	x20, x0
 518:	mov	x0, x1
 51c:	mov	x1, x4
 520:	mov	w21, w3
 524:	mov	x19, x2
 528:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 52c:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 530:	mov	x2, x0
 534:	add	x1, x1, #0x0
 538:	mov	x0, x20
 53c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 540:	cmp	w21, #0x8
 544:	b.hi	5e8 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xdc>  // b.pmore
 548:	adrp	x9, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 54c:	mov	w8, w21
 550:	add	x9, x9, #0x0
 554:	adr	x10, 56c <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x60>
 558:	ldrb	w11, [x9, x8]
 55c:	add	x10, x10, x11, lsl #2
 560:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 564:	add	x2, x2, #0x0
 568:	br	x10
 56c:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 570:	add	x2, x2, #0x0
 574:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 578:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 57c:	add	x2, x2, #0x0
 580:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 584:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 588:	add	x2, x2, #0x0
 58c:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 590:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 594:	add	x2, x2, #0x0
 598:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 59c:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5a0:	add	x2, x2, #0x0
 5a4:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 5a8:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5ac:	add	x2, x2, #0x0
 5b0:	b	5bc <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xb0>
 5b4:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5b8:	add	x2, x2, #0x0
 5bc:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5c0:	add	x1, x1, #0x0
 5c4:	mov	x0, x20
 5c8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 5cc:	mov	x0, x20
 5d0:	mov	x2, x19
 5d4:	ldp	x20, x19, [sp, #16]
 5d8:	adrp	x1, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5dc:	add	x1, x1, #0x0
 5e0:	ldp	x30, x21, [sp], #32
 5e4:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 5e8:	adrp	x0, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5ec:	adrp	x2, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 5f0:	add	x0, x0, #0x0
 5f4:	add	x2, x2, #0x0
 5f8:	mov	w1, #0x2b8                 	// #696
 5fc:	mov	x3, xzr
 600:	mov	x4, xzr
 604:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000608 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>:
 608:	str	x30, [sp, #-80]!
 60c:	stp	x26, x25, [sp, #16]
 610:	stp	x24, x23, [sp, #32]
 614:	stp	x22, x21, [sp, #48]
 618:	stp	x20, x19, [sp, #64]
 61c:	adrp	x23, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 620:	adrp	x24, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 624:	adrp	x25, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 628:	adrp	x26, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 62c:	mov	x19, x3
 630:	mov	x20, x2
 634:	mov	x21, x1
 638:	mov	x22, x0
 63c:	add	x23, x23, #0x0
 640:	add	x24, x24, #0x0
 644:	add	x25, x25, #0x0
 648:	add	x26, x26, #0x0
 64c:	b	664 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
 650:	ldr	x2, [x20, #32]
 654:	mov	x0, x22
 658:	mov	x1, x25
 65c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 660:	add	x21, x21, #0x1
 664:	ldrb	w2, [x21]
 668:	cmp	w2, #0x25
 66c:	b.eq	688 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x80>  // b.none
 670:	cbz	w2, 6f4 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xec>
 674:	mov	x0, x22
 678:	mov	x1, x26
 67c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 680:	add	x21, x21, #0x1
 684:	b	664 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
 688:	ldrb	w1, [x21, #1]!
 68c:	cmp	w1, #0x6b
 690:	b.gt	6b0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xa8>
 694:	cmp	w1, #0x25
 698:	b.ne	6d4 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xcc>  // b.any
 69c:	mov	x0, x22
 6a0:	mov	x1, x23
 6a4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 6a8:	add	x21, x21, #0x1
 6ac:	b	664 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
 6b0:	cmp	w1, #0x6c
 6b4:	b.eq	650 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x48>  // b.none
 6b8:	cmp	w1, #0x73
 6bc:	b.ne	70c <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x104>  // b.any
 6c0:	ldr	x0, [x20, #24]
 6c4:	mov	x1, x19
 6c8:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 6cc:	mov	x2, x0
 6d0:	b	6e0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xd8>
 6d4:	cmp	w1, #0x67
 6d8:	b.ne	70c <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x104>  // b.any
 6dc:	ldr	x2, [x20, #40]
 6e0:	mov	x0, x22
 6e4:	mov	x1, x24
 6e8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 6ec:	add	x21, x21, #0x1
 6f0:	b	664 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
 6f4:	ldp	x20, x19, [sp, #64]
 6f8:	ldp	x22, x21, [sp, #48]
 6fc:	ldp	x24, x23, [sp, #32]
 700:	ldp	x26, x25, [sp, #16]
 704:	ldr	x30, [sp], #80
 708:	ret
 70c:	adrp	x0, 0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 710:	add	x0, x0, #0x0
 714:	mov	w2, w1
 718:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 71c:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_stacktrace_sparc.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer11AddressInfoC1Ev>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	w2, #0x40                  	// #64
   8:	mov	w1, wzr
   c:	mov	x19, x0
  10:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  14:	mov	x8, #0xffffffffffffffff    	// #-1
  18:	str	x8, [x19, #40]
  1c:	ldp	x30, x19, [sp], #16
  20:	ret

0000000000000024 <_ZN11__sanitizer11AddressInfo5ClearEv>:
  24:	stp	x30, x19, [sp, #-16]!
  28:	mov	x19, x0
  2c:	ldr	x0, [x0, #8]
  30:	mov	x1, xzr
  34:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  38:	ldr	x0, [x19, #32]
  3c:	mov	x1, xzr
  40:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  44:	ldr	x0, [x19, #48]
  48:	mov	x1, xzr
  4c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  50:	mov	w2, #0x40                  	// #64
  54:	mov	x0, x19
  58:	mov	w1, wzr
  5c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  60:	mov	x8, #0xffffffffffffffff    	// #-1
  64:	str	x8, [x19, #40]
  68:	ldp	x30, x19, [sp], #16
  6c:	ret

0000000000000070 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>:
  70:	stp	x30, x21, [sp, #-32]!
  74:	stp	x20, x19, [sp, #16]
  78:	mov	x21, x0
  7c:	mov	x0, x1
  80:	mov	w19, w3
  84:	mov	x20, x2
  88:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
  8c:	stp	x0, x20, [x21, #8]
  90:	str	w19, [x21, #24]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x30, x21, [sp], #32
  9c:	ret

00000000000000a0 <_ZN11__sanitizer15SymbolizedStackC1Ev>:
  a0:	stp	x30, x19, [sp, #-16]!
  a4:	mov	x19, x0
  a8:	str	xzr, [x0], #8
  ac:	mov	w2, #0x40                  	// #64
  b0:	mov	w1, wzr
  b4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  b8:	mov	x8, #0xffffffffffffffff    	// #-1
  bc:	str	x8, [x19, #48]
  c0:	ldp	x30, x19, [sp], #16
  c4:	ret

00000000000000c8 <_ZN11__sanitizer15SymbolizedStack3NewEm>:
  c8:	str	x30, [sp, #-32]!
  cc:	stp	x20, x19, [sp, #16]
  d0:	mov	x19, x0
  d4:	mov	w0, #0x48                  	// #72
  d8:	mov	x1, xzr
  dc:	mov	x2, xzr
  e0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  e4:	mov	x20, x0
  e8:	str	xzr, [x0], #8
  ec:	mov	w2, #0x40                  	// #64
  f0:	mov	w1, wzr
  f4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  f8:	mov	x8, #0xffffffffffffffff    	// #-1
  fc:	str	x8, [x20, #48]
 100:	str	x19, [x20, #8]
 104:	mov	x0, x20
 108:	ldp	x20, x19, [sp, #16]
 10c:	ldr	x30, [sp], #32
 110:	ret

0000000000000114 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>:
 114:	str	x30, [sp, #-32]!
 118:	stp	x20, x19, [sp, #16]
 11c:	mov	x19, x0
 120:	ldr	x0, [x0, #16]
 124:	mov	x1, xzr
 128:	add	x20, x19, #0x8
 12c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 130:	ldr	x0, [x19, #40]
 134:	mov	x1, xzr
 138:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 13c:	ldr	x0, [x19, #56]
 140:	mov	x1, xzr
 144:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 148:	mov	w2, #0x40                  	// #64
 14c:	mov	x0, x20
 150:	mov	w1, wzr
 154:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 158:	ldr	x0, [x19]
 15c:	mov	x8, #0xffffffffffffffff    	// #-1
 160:	str	x8, [x19, #48]
 164:	cbz	x0, 16c <_ZN11__sanitizer15SymbolizedStack8ClearAllEv+0x58>
 168:	bl	114 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 16c:	mov	x0, x19
 170:	ldp	x20, x19, [sp, #16]
 174:	mov	x1, xzr
 178:	ldr	x30, [sp], #32
 17c:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>

0000000000000180 <_ZN11__sanitizer8DataInfoC1Ev>:
 180:	mov	w2, #0x40                  	// #64
 184:	mov	w1, wzr
 188:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

000000000000018c <_ZN11__sanitizer8DataInfo5ClearEv>:
 18c:	stp	x30, x19, [sp, #-16]!
 190:	mov	x19, x0
 194:	ldr	x0, [x0]
 198:	mov	x1, xzr
 19c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1a0:	ldr	x0, [x19, #24]
 1a4:	mov	x1, xzr
 1a8:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1ac:	ldr	x0, [x19, #40]
 1b0:	mov	x1, xzr
 1b4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1b8:	mov	w2, #0x40                  	// #64
 1bc:	mov	x0, x19
 1c0:	mov	w1, wzr
 1c4:	ldp	x30, x19, [sp], #16
 1c8:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

00000000000001cc <_ZN11__sanitizer9FrameInfo5ClearEv>:
 1cc:	stp	x30, x21, [sp, #-32]!
 1d0:	stp	x20, x19, [sp, #16]
 1d4:	mov	x19, x0
 1d8:	ldr	x0, [x0]
 1dc:	mov	x1, xzr
 1e0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1e4:	ldr	x8, [x19, #40]
 1e8:	cbz	x8, 228 <_ZN11__sanitizer9FrameInfo5ClearEv+0x5c>
 1ec:	ldr	x20, [x19, #24]
 1f0:	mov	w9, #0x38                  	// #56
 1f4:	madd	x21, x8, x9, x20
 1f8:	ldr	x0, [x20]
 1fc:	mov	x1, xzr
 200:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 204:	ldr	x0, [x20, #8]
 208:	mov	x1, xzr
 20c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 210:	ldr	x0, [x20, #16]
 214:	mov	x1, xzr
 218:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 21c:	add	x20, x20, #0x38
 220:	cmp	x20, x21
 224:	b.ne	1f8 <_ZN11__sanitizer9FrameInfo5ClearEv+0x2c>  // b.any
 228:	str	xzr, [x19, #40]
 22c:	ldp	x20, x19, [sp, #16]
 230:	ldp	x30, x21, [sp], #32
 234:	ret

0000000000000238 <_ZN11__sanitizer10Symbolizer20InvalidateModuleListEv>:
 238:	strb	wzr, [x0, #104]
 23c:	ret

0000000000000240 <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_>:
 240:	str	x30, [sp, #-16]!
 244:	ldr	x8, [x0, #224]
 248:	cbnz	x8, 260 <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_+0x20>
 24c:	ldr	x8, [x0, #232]
 250:	cbnz	x8, 260 <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_+0x20>
 254:	stp	x1, x2, [x0, #224]
 258:	ldr	x30, [sp], #16
 25c:	ret
 260:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 264:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 268:	add	x0, x0, #0x0
 26c:	add	x2, x2, #0x0
 270:	mov	w1, #0x59                  	// #89
 274:	mov	x3, xzr
 278:	mov	x4, xzr
 27c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000280 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc>:
 280:	str	x30, [sp, #-48]!
 284:	stp	x22, x21, [sp, #16]
 288:	stp	x20, x19, [sp, #32]
 28c:	mov	x19, x0
 290:	ldr	x0, [x0, #32]
 294:	mov	x21, x1
 298:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 29c:	mov	x20, x19
 2a0:	ldr	x0, [x20, #24]!
 2a4:	cbz	x0, 2b4 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x34>
 2a8:	mov	x1, x21
 2ac:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2b0:	cbz	w0, 338 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0xb8>
 2b4:	ldr	x8, [x19, #16]
 2b8:	cbz	x8, 2e4 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x64>
 2bc:	mov	x22, xzr
 2c0:	ldr	x8, [x19]
 2c4:	mov	x1, x21
 2c8:	ldr	x0, [x8, x22, lsl #3]
 2cc:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2d0:	cbz	w0, 310 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x90>
 2d4:	ldr	x8, [x19, #16]
 2d8:	add	x22, x22, #0x1
 2dc:	cmp	x22, x8
 2e0:	b.cc	2c0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x40>  // b.lo, b.ul, b.last
 2e4:	mov	x0, x21
 2e8:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 2ec:	str	x0, [x19, #24]
 2f0:	mov	x0, x19
 2f4:	mov	x1, x20
 2f8:	bl	0 <_ZN11__sanitizer11AddressInfoC1Ev>
 2fc:	ldr	x0, [x19, #24]
 300:	ldp	x20, x19, [sp, #32]
 304:	ldp	x22, x21, [sp, #16]
 308:	ldr	x30, [sp], #48
 30c:	ret
 310:	ldr	x4, [x19, #16]
 314:	cmp	x4, x22
 318:	b.ls	34c <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0xcc>  // b.plast
 31c:	ldr	x8, [x19]
 320:	ldr	x0, [x8, x22, lsl #3]
 324:	str	x0, [x19, #24]
 328:	ldp	x20, x19, [sp, #32]
 32c:	ldp	x22, x21, [sp, #16]
 330:	ldr	x30, [sp], #48
 334:	ret
 338:	ldr	x0, [x20]
 33c:	ldp	x20, x19, [sp, #32]
 340:	ldp	x22, x21, [sp, #16]
 344:	ldr	x30, [sp], #48
 348:	ret
 34c:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 350:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 354:	add	x0, x0, #0x0
 358:	add	x2, x2, #0x0
 35c:	mov	w1, #0x1c5                 	// #453
 360:	mov	x3, x22
 364:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000368 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE>:
 368:	stp	x30, x21, [sp, #-32]!
 36c:	stp	x20, x19, [sp, #16]
 370:	mov	x19, x1
 374:	add	x21, x0, #0x70
 378:	movi	v0.2d, #0x0
 37c:	mov	w1, #0x3e8                 	// #1000
 380:	mov	x20, x0
 384:	str	xzr, [x0]
 388:	stur	q0, [x0, #8]
 38c:	stp	xzr, x21, [x0, #24]
 390:	bl	0 <_ZN11__sanitizer11AddressInfoC1Ev>
 394:	mov	x0, x21
 398:	strb	wzr, [x20, #64]
 39c:	strb	wzr, [x20, #96]
 3a0:	strb	wzr, [x20, #104]
 3a4:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
 3a8:	ldr	q0, [x19]
 3ac:	ldr	x8, [x19, #16]
 3b0:	stur	q0, [x20, #200]
 3b4:	movi	v0.2d, #0x0
 3b8:	str	x8, [x20, #216]
 3bc:	str	q0, [x20, #224]
 3c0:	ldp	x20, x19, [sp, #16]
 3c4:	ldp	x30, x21, [sp], #32
 3c8:	ret

00000000000003cc <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>:
 3cc:	str	x1, [x0]
 3d0:	ldr	x0, [x1, #224]
 3d4:	cbz	x0, 3dc <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_+0x10>
 3d8:	br	x0
 3dc:	ret

00000000000003e0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>:
 3e0:	ldr	x8, [x0]
 3e4:	ldr	x0, [x8, #232]
 3e8:	cbz	x0, 3f0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev+0x10>
 3ec:	br	x0
 3f0:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #3
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #3
  90:	mov	w2, #0x8                   	// #8
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE9push_backERKS2_>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #3
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #3
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPKcE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_symbolizer_libbacktrace.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22LibbacktraceSymbolizer3getEPNS_17LowLevelAllocatorE>:
   0:	mov	x0, xzr
   4:	ret

0000000000000008 <_ZN11__sanitizer22LibbacktraceSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
   8:	mov	w0, wzr
   c:	ret

0000000000000010 <_ZN11__sanitizer22LibbacktraceSymbolizer13SymbolizeDataEmPNS_8DataInfoE>:
  10:	mov	w0, wzr
  14:	ret

0000000000000018 <_ZN11__sanitizer22LibbacktraceSymbolizer8DemangleEPKc>:
  18:	mov	x0, xzr
  1c:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

sanitizer_symbolizer_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>:
       0:	str	x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	adrp	x19, 0 <_ZN11__sanitizer10Symbolizer8init_mu_E>
       c:	ldr	x19, [x19]
      10:	mov	w8, #0x1                   	// #1
      14:	ldaxrb	w9, [x19]
      18:	stlxrb	w10, w8, [x19]
      1c:	cbnz	w10, 14 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x14>
      20:	cbz	w9, 30 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x30>
      24:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer8init_mu_E>
      28:	ldr	x0, [x0]
      2c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
      30:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer11symbolizer_E>
      34:	ldr	x20, [x20]
      38:	ldr	x0, [x20]
      3c:	cbnz	x0, 4c <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x4c>
      40:	bl	0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv>
      44:	str	x0, [x20]
      48:	cbz	x0, 60 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x60>
      4c:	dmb	ish
      50:	strb	wzr, [x19]
      54:	ldp	x20, x19, [sp, #16]
      58:	ldr	x30, [sp], #32
      5c:	ret
      60:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
      64:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
      68:	add	x0, x0, #0x0
      6c:	add	x2, x2, #0x0
      70:	mov	w1, #0x18                  	// #24
      74:	mov	x3, xzr
      78:	mov	x4, xzr
      7c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000080 <_ZN11__sanitizer12ExtractTokenEPKcS1_PPc>:
      80:	stp	x30, x21, [sp, #-32]!
      84:	stp	x20, x19, [sp, #16]
      88:	mov	x19, x2
      8c:	mov	x20, x0
      90:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
      94:	mov	x21, x0
      98:	add	x0, x0, #0x1
      9c:	mov	x1, xzr
      a0:	mov	x2, xzr
      a4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
      a8:	mov	x1, x20
      ac:	mov	x2, x21
      b0:	str	x0, [x19]
      b4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
      b8:	ldr	x8, [x19]
      bc:	add	x9, x20, x21
      c0:	strb	wzr, [x8, x21]
      c4:	mov	x8, x9
      c8:	ldrb	w10, [x8], #1
      cc:	ldp	x20, x19, [sp, #16]
      d0:	cmp	w10, #0x0
      d4:	csel	x0, x9, x8, eq  // eq = none
      d8:	ldp	x30, x21, [sp], #32
      dc:	ret

00000000000000e0 <_ZN11__sanitizer10ExtractIntEPKcS1_Pi>:
      e0:	str	x30, [sp, #-48]!
      e4:	stp	x22, x21, [sp, #16]
      e8:	stp	x20, x19, [sp, #32]
      ec:	mov	x19, x2
      f0:	mov	x21, x0
      f4:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
      f8:	mov	x22, x0
      fc:	add	x0, x0, #0x1
     100:	mov	x1, xzr
     104:	mov	x2, xzr
     108:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     10c:	mov	x1, x21
     110:	mov	x2, x22
     114:	mov	x20, x0
     118:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     11c:	add	x8, x21, x22
     120:	strb	wzr, [x20, x22]
     124:	mov	x9, x8
     128:	ldrb	w10, [x9], #1
     12c:	cmp	w10, #0x0
     130:	csel	x21, x8, x9, eq  // eq = none
     134:	cbz	x20, 144 <_ZN11__sanitizer10ExtractIntEPKcS1_Pi+0x64>
     138:	mov	x0, x20
     13c:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     140:	str	w0, [x19]
     144:	mov	x0, x20
     148:	mov	x1, xzr
     14c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     150:	mov	x0, x21
     154:	ldp	x20, x19, [sp, #32]
     158:	ldp	x22, x21, [sp, #16]
     15c:	ldr	x30, [sp], #48
     160:	ret

0000000000000164 <_ZN11__sanitizer11ExtractUptrEPKcS1_Pm>:
     164:	str	x30, [sp, #-48]!
     168:	stp	x22, x21, [sp, #16]
     16c:	stp	x20, x19, [sp, #32]
     170:	mov	x19, x2
     174:	mov	x21, x0
     178:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     17c:	mov	x22, x0
     180:	add	x0, x0, #0x1
     184:	mov	x1, xzr
     188:	mov	x2, xzr
     18c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     190:	mov	x1, x21
     194:	mov	x2, x22
     198:	mov	x20, x0
     19c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     1a0:	add	x8, x21, x22
     1a4:	strb	wzr, [x20, x22]
     1a8:	mov	x9, x8
     1ac:	ldrb	w10, [x9], #1
     1b0:	cmp	w10, #0x0
     1b4:	csel	x21, x8, x9, eq  // eq = none
     1b8:	cbz	x20, 1c8 <_ZN11__sanitizer11ExtractUptrEPKcS1_Pm+0x64>
     1bc:	mov	x0, x20
     1c0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     1c4:	str	x0, [x19]
     1c8:	mov	x0, x20
     1cc:	mov	x1, xzr
     1d0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     1d4:	mov	x0, x21
     1d8:	ldp	x20, x19, [sp, #32]
     1dc:	ldp	x22, x21, [sp, #16]
     1e0:	ldr	x30, [sp], #48
     1e4:	ret

00000000000001e8 <_ZN11__sanitizer11ExtractSptrEPKcS1_Pl>:
     1e8:	str	x30, [sp, #-48]!
     1ec:	stp	x22, x21, [sp, #16]
     1f0:	stp	x20, x19, [sp, #32]
     1f4:	mov	x19, x2
     1f8:	mov	x21, x0
     1fc:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     200:	mov	x22, x0
     204:	add	x0, x0, #0x1
     208:	mov	x1, xzr
     20c:	mov	x2, xzr
     210:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     214:	mov	x1, x21
     218:	mov	x2, x22
     21c:	mov	x20, x0
     220:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     224:	add	x8, x21, x22
     228:	strb	wzr, [x20, x22]
     22c:	mov	x9, x8
     230:	ldrb	w10, [x9], #1
     234:	cmp	w10, #0x0
     238:	csel	x21, x8, x9, eq  // eq = none
     23c:	cbz	x20, 24c <_ZN11__sanitizer11ExtractSptrEPKcS1_Pl+0x64>
     240:	mov	x0, x20
     244:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     248:	str	x0, [x19]
     24c:	mov	x0, x20
     250:	mov	x1, xzr
     254:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     258:	mov	x0, x21
     25c:	ldp	x20, x19, [sp, #32]
     260:	ldp	x22, x21, [sp, #16]
     264:	ldr	x30, [sp], #48
     268:	ret

000000000000026c <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc>:
     26c:	str	x30, [sp, #-48]!
     270:	stp	x22, x21, [sp, #16]
     274:	stp	x20, x19, [sp, #32]
     278:	mov	x21, x2
     27c:	mov	x19, x1
     280:	mov	x20, x0
     284:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
     288:	cbz	x0, 294 <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x28>
     28c:	sub	x22, x0, x20
     290:	b	2a0 <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x34>
     294:	mov	x0, x20
     298:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     29c:	mov	x22, x0
     2a0:	add	x0, x22, #0x1
     2a4:	mov	x1, xzr
     2a8:	mov	x2, xzr
     2ac:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     2b0:	mov	x1, x20
     2b4:	mov	x2, x22
     2b8:	str	x0, [x21]
     2bc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     2c0:	ldr	x8, [x21]
     2c4:	add	x20, x20, x22
     2c8:	strb	wzr, [x8, x22]
     2cc:	ldrb	w8, [x20]
     2d0:	cbz	w8, 2e0 <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x74>
     2d4:	mov	x0, x19
     2d8:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     2dc:	add	x20, x20, x0
     2e0:	mov	x0, x20
     2e4:	ldp	x20, x19, [sp, #32]
     2e8:	ldp	x22, x21, [sp, #16]
     2ec:	ldr	x30, [sp], #48
     2f0:	ret

00000000000002f4 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>:
     2f4:	str	x30, [sp, #-64]!
     2f8:	stp	x24, x23, [sp, #16]
     2fc:	stp	x22, x21, [sp, #32]
     300:	stp	x20, x19, [sp, #48]
     304:	add	x19, x0, #0x70
     308:	mov	x21, x0
     30c:	mov	x0, x19
     310:	mov	x20, x1
     314:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     318:	mov	x0, x20
     31c:	bl	0 <_ZN11__sanitizer15SymbolizedStack3NewEm>
     320:	mov	x22, x0
     324:	mov	x0, x21
     328:	mov	x1, x20
     32c:	bl	714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     330:	cbz	x0, 38c <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x98>
     334:	ldp	x1, x8, [x0]
     338:	ldr	w3, [x0, #24]
     33c:	add	x0, x22, #0x8
     340:	sub	x2, x20, x8
     344:	bl	0 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>
     348:	ldr	x23, [x21, #208]
     34c:	cbz	x23, 38c <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x98>
     350:	add	x0, sp, #0x8
     354:	mov	x1, x21
     358:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     35c:	ldr	x8, [x23]
     360:	mov	x0, x23
     364:	mov	x1, x20
     368:	mov	x2, x22
     36c:	ldr	x8, [x8]
     370:	blr	x8
     374:	mov	w24, w0
     378:	add	x0, sp, #0x8
     37c:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     380:	tbnz	w24, #0, 38c <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x98>
     384:	ldr	x23, [x23, #8]
     388:	cbnz	x23, 350 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x5c>
     38c:	mov	x0, x19
     390:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     394:	mov	x0, x22
     398:	ldp	x20, x19, [sp, #48]
     39c:	ldp	x22, x21, [sp, #32]
     3a0:	ldp	x24, x23, [sp, #16]
     3a4:	ldr	x30, [sp], #64
     3a8:	ret

00000000000003ac <_ZN11__sanitizer10Symbolizer33FindModuleNameAndOffsetForAddressEmPPKcPmPNS_10ModuleArchE>:
     3ac:	str	x30, [sp, #-48]!
     3b0:	stp	x22, x21, [sp, #16]
     3b4:	stp	x20, x19, [sp, #32]
     3b8:	mov	x19, x4
     3bc:	mov	x20, x3
     3c0:	mov	x22, x2
     3c4:	mov	x21, x1
     3c8:	bl	714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     3cc:	cbz	x0, 3f0 <_ZN11__sanitizer10Symbolizer33FindModuleNameAndOffsetForAddressEmPPKcPmPNS_10ModuleArchE+0x44>
     3d0:	ldr	x8, [x0]
     3d4:	str	x8, [x22]
     3d8:	ldr	x8, [x0, #8]
     3dc:	sub	x8, x21, x8
     3e0:	str	x8, [x20]
     3e4:	ldr	w8, [x0, #24]
     3e8:	mov	w0, #0x1                   	// #1
     3ec:	str	w8, [x19]
     3f0:	ldp	x20, x19, [sp, #32]
     3f4:	ldp	x22, x21, [sp, #16]
     3f8:	ldr	x30, [sp], #48
     3fc:	ret

0000000000000400 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE>:
     400:	sub	sp, sp, #0x50
     404:	stp	x30, x25, [sp, #16]
     408:	stp	x24, x23, [sp, #32]
     40c:	stp	x22, x21, [sp, #48]
     410:	stp	x20, x19, [sp, #64]
     414:	add	x19, x0, #0x70
     418:	mov	x22, x0
     41c:	mov	x0, x19
     420:	mov	x20, x2
     424:	mov	x21, x1
     428:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     42c:	mov	x0, x22
     430:	mov	x1, x21
     434:	bl	714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     438:	cbz	x0, 4ac <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0xac>
     43c:	ldp	x23, x8, [x0]
     440:	ldr	w24, [x0, #24]
     444:	mov	x0, x20
     448:	sub	x25, x21, x8
     44c:	bl	0 <_ZN11__sanitizer8DataInfo5ClearEv>
     450:	mov	x0, x23
     454:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
     458:	stp	x0, x25, [x20]
     45c:	str	w24, [x20, #16]
     460:	ldr	x23, [x22, #208]
     464:	cbz	x23, 4a4 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0xa4>
     468:	add	x0, sp, #0x8
     46c:	mov	x1, x22
     470:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     474:	ldr	x8, [x23]
     478:	mov	x0, x23
     47c:	mov	x1, x21
     480:	mov	x2, x20
     484:	ldr	x8, [x8, #8]
     488:	blr	x8
     48c:	mov	w24, w0
     490:	add	x0, sp, #0x8
     494:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     498:	tbnz	w24, #0, 4a4 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0xa4>
     49c:	ldr	x23, [x23, #8]
     4a0:	cbnz	x23, 468 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x68>
     4a4:	mov	w20, #0x1                   	// #1
     4a8:	b	4b0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0xb0>
     4ac:	mov	w20, wzr
     4b0:	mov	x0, x19
     4b4:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     4b8:	mov	w0, w20
     4bc:	ldp	x20, x19, [sp, #64]
     4c0:	ldp	x22, x21, [sp, #48]
     4c4:	ldp	x24, x23, [sp, #32]
     4c8:	ldp	x30, x25, [sp, #16]
     4cc:	add	sp, sp, #0x50
     4d0:	ret

00000000000004d4 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE>:
     4d4:	str	x30, [sp, #-64]!
     4d8:	stp	x24, x23, [sp, #16]
     4dc:	stp	x22, x21, [sp, #32]
     4e0:	stp	x20, x19, [sp, #48]
     4e4:	add	x19, x0, #0x70
     4e8:	mov	x22, x0
     4ec:	mov	x0, x19
     4f0:	mov	x20, x2
     4f4:	mov	x21, x1
     4f8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     4fc:	mov	x0, x22
     500:	mov	x1, x21
     504:	bl	714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     508:	cbz	x0, 578 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xa4>
     50c:	ldp	x8, x9, [x0]
     510:	sub	x9, x21, x9
     514:	str	x9, [x20, #8]
     518:	ldr	w9, [x0, #24]
     51c:	mov	x0, x8
     520:	str	w9, [x20, #16]
     524:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
     528:	str	x0, [x20]
     52c:	ldr	x23, [x22, #208]
     530:	cbz	x23, 570 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x9c>
     534:	add	x0, sp, #0x8
     538:	mov	x1, x22
     53c:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     540:	ldr	x8, [x23]
     544:	mov	x0, x23
     548:	mov	x1, x21
     54c:	mov	x2, x20
     550:	ldr	x8, [x8, #16]
     554:	blr	x8
     558:	mov	w24, w0
     55c:	add	x0, sp, #0x8
     560:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     564:	tbnz	w24, #0, 570 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x9c>
     568:	ldr	x23, [x23, #8]
     56c:	cbnz	x23, 534 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x60>
     570:	mov	w20, #0x1                   	// #1
     574:	b	57c <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xa8>
     578:	mov	w20, wzr
     57c:	mov	x0, x19
     580:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     584:	mov	w0, w20
     588:	ldp	x20, x19, [sp, #48]
     58c:	ldp	x22, x21, [sp, #32]
     590:	ldp	x24, x23, [sp, #16]
     594:	ldr	x30, [sp], #64
     598:	ret

000000000000059c <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>:
     59c:	stp	x30, x23, [sp, #-48]!
     5a0:	stp	x22, x21, [sp, #16]
     5a4:	stp	x20, x19, [sp, #32]
     5a8:	add	x19, x0, #0x70
     5ac:	mov	x21, x0
     5b0:	mov	x0, x19
     5b4:	mov	x22, x3
     5b8:	mov	x20, x2
     5bc:	mov	x23, x1
     5c0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     5c4:	mov	x0, x21
     5c8:	mov	x1, x23
     5cc:	bl	714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     5d0:	cbz	x0, 5f8 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm+0x5c>
     5d4:	ldp	x1, x8, [x0]
     5d8:	sub	x8, x23, x8
     5dc:	str	x8, [x22]
     5e0:	cbz	x20, 5f0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm+0x54>
     5e4:	mov	x0, x21
     5e8:	bl	0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc>
     5ec:	str	x0, [x20]
     5f0:	mov	w20, #0x1                   	// #1
     5f4:	b	5fc <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm+0x60>
     5f8:	mov	w20, wzr
     5fc:	mov	x0, x19
     600:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     604:	mov	w0, w20
     608:	ldp	x20, x19, [sp, #32]
     60c:	ldp	x22, x21, [sp, #16]
     610:	ldp	x30, x23, [sp], #48
     614:	ret

0000000000000618 <_ZN11__sanitizer10Symbolizer5FlushEv>:
     618:	sub	sp, sp, #0x30
     61c:	stp	x30, x21, [sp, #16]
     620:	stp	x20, x19, [sp, #32]
     624:	add	x19, x0, #0x70
     628:	mov	x20, x0
     62c:	mov	x0, x19
     630:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     634:	ldr	x21, [x20, #208]
     638:	cbz	x21, 668 <_ZN11__sanitizer10Symbolizer5FlushEv+0x50>
     63c:	add	x0, sp, #0x8
     640:	mov	x1, x20
     644:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     648:	ldr	x8, [x21]
     64c:	mov	x0, x21
     650:	ldr	x8, [x8, #24]
     654:	blr	x8
     658:	add	x0, sp, #0x8
     65c:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     660:	ldr	x21, [x21, #8]
     664:	cbnz	x21, 63c <_ZN11__sanitizer10Symbolizer5FlushEv+0x24>
     668:	mov	x0, x19
     66c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     670:	ldp	x20, x19, [sp, #32]
     674:	ldp	x30, x21, [sp, #16]
     678:	add	sp, sp, #0x30
     67c:	ret

0000000000000680 <_ZN11__sanitizer10Symbolizer8DemangleEPKc>:
     680:	sub	sp, sp, #0x40
     684:	stp	x30, x23, [sp, #16]
     688:	stp	x22, x21, [sp, #32]
     68c:	stp	x20, x19, [sp, #48]
     690:	add	x19, x0, #0x70
     694:	mov	x21, x0
     698:	mov	x0, x19
     69c:	mov	x20, x1
     6a0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     6a4:	ldr	x22, [x21, #208]
     6a8:	cbz	x22, 6e4 <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x64>
     6ac:	add	x0, sp, #0x8
     6b0:	mov	x1, x21
     6b4:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     6b8:	ldr	x8, [x22]
     6bc:	mov	x0, x22
     6c0:	mov	x1, x20
     6c4:	ldr	x8, [x8, #32]
     6c8:	blr	x8
     6cc:	mov	x23, x0
     6d0:	add	x0, sp, #0x8
     6d4:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     6d8:	cbnz	x23, 6f4 <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x74>
     6dc:	ldr	x22, [x22, #8]
     6e0:	cbnz	x22, 6ac <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x2c>
     6e4:	mov	x0, x21
     6e8:	mov	x1, x20
     6ec:	bl	0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc>
     6f0:	mov	x23, x0
     6f4:	mov	x0, x19
     6f8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     6fc:	mov	x0, x23
     700:	ldp	x20, x19, [sp, #48]
     704:	ldp	x22, x21, [sp, #32]
     708:	ldp	x30, x23, [sp, #16]
     70c:	add	sp, sp, #0x40
     710:	ret

0000000000000714 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>:
     714:	stp	x30, x25, [sp, #-64]!
     718:	stp	x24, x23, [sp, #16]
     71c:	stp	x22, x21, [sp, #32]
     720:	stp	x20, x19, [sp, #48]
     724:	ldrb	w8, [x0, #104]
     728:	mov	x19, x0
     72c:	mov	x20, x1
     730:	cbz	w8, 74c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x38>
     734:	mov	x23, x19
     738:	ldr	x8, [x23, #56]!
     73c:	sub	x21, x23, #0x10
     740:	cbz	x8, 7c8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xb4>
     744:	mov	w24, wzr
     748:	b	774 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x60>
     74c:	add	x21, x19, #0x28
     750:	mov	x0, x21
     754:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     758:	add	x0, x19, #0x48
     75c:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     760:	ldr	x8, [x19, #56]
     764:	cbz	x8, 8a0 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x18c>
     768:	mov	w24, #0x1                   	// #1
     76c:	strb	w24, [x19, #104]
     770:	add	x23, x19, #0x38
     774:	mov	x25, xzr
     778:	mov	x22, xzr
     77c:	ldr	x8, [x19, #40]
     780:	mov	x1, x20
     784:	add	x0, x8, x25
     788:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     78c:	tbnz	w0, #0, 7a8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x94>
     790:	ldr	x8, [x23]
     794:	add	x22, x22, #0x1
     798:	add	x25, x25, #0x48
     79c:	cmp	x22, x8
     7a0:	b.cc	77c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x68>  // b.lo, b.ul, b.last
     7a4:	b	7c4 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xb0>
     7a8:	ldr	x4, [x23]
     7ac:	cmp	x4, x22
     7b0:	b.ls	8b0 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x19c>  // b.plast
     7b4:	ldr	x8, [x19, #40]
     7b8:	cbz	x8, 7c4 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xb0>
     7bc:	add	x0, x8, x25
     7c0:	b	88c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x178>
     7c4:	tbnz	w24, #0, 838 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x124>
     7c8:	mov	x0, x21
     7cc:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     7d0:	add	x0, x19, #0x48
     7d4:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     7d8:	ldr	x8, [x19, #56]
     7dc:	cbz	x8, 8a0 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x18c>
     7e0:	mov	x24, xzr
     7e4:	mov	x22, xzr
     7e8:	mov	w8, #0x1                   	// #1
     7ec:	strb	w8, [x19, #104]
     7f0:	ldr	x8, [x21]
     7f4:	mov	x1, x20
     7f8:	add	x0, x8, x24
     7fc:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     800:	tbnz	w0, #0, 81c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x108>
     804:	ldr	x8, [x23]
     808:	add	x22, x22, #0x1
     80c:	add	x24, x24, #0x48
     810:	cmp	x22, x8
     814:	b.cc	7f0 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xdc>  // b.lo, b.ul, b.last
     818:	b	838 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x124>
     81c:	ldr	x4, [x23]
     820:	cmp	x4, x22
     824:	b.ls	8b0 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x19c>  // b.plast
     828:	ldr	x8, [x21]
     82c:	cbz	x8, 838 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x124>
     830:	add	x0, x8, x24
     834:	b	88c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x178>
     838:	ldr	x8, [x19, #88]
     83c:	cbz	x8, 870 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x15c>
     840:	mov	x22, xzr
     844:	mov	x21, xzr
     848:	ldr	x8, [x19, #72]
     84c:	mov	x1, x20
     850:	add	x0, x8, x22
     854:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     858:	tbnz	w0, #0, 878 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x164>
     85c:	ldr	x8, [x19, #88]
     860:	add	x21, x21, #0x1
     864:	add	x22, x22, #0x48
     868:	cmp	x21, x8
     86c:	b.cc	848 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x134>  // b.lo, b.ul, b.last
     870:	mov	x0, xzr
     874:	b	88c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x178>
     878:	ldr	x4, [x19, #88]
     87c:	cmp	x4, x21
     880:	b.ls	8cc <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x1b8>  // b.plast
     884:	ldr	x8, [x19, #72]
     888:	add	x0, x8, x22
     88c:	ldp	x20, x19, [sp, #48]
     890:	ldp	x22, x21, [sp, #32]
     894:	ldp	x24, x23, [sp, #16]
     898:	ldp	x30, x25, [sp], #64
     89c:	ret
     8a0:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     8a4:	add	x0, x0, #0x0
     8a8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     8ac:	bl	0 <_ZN11__sanitizer3DieEv>
     8b0:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     8b4:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     8b8:	add	x0, x0, #0x0
     8bc:	add	x2, x2, #0x0
     8c0:	mov	w1, #0x308                 	// #776
     8c4:	mov	x3, x22
     8c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     8cc:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     8d0:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     8d4:	add	x0, x0, #0x0
     8d8:	add	x2, x2, #0x0
     8dc:	mov	w1, #0x308                 	// #776
     8e0:	mov	x3, x21
     8e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000008e8 <_ZN11__sanitizer10Symbolizer14RefreshModulesEv>:
     8e8:	stp	x30, x19, [sp, #-16]!
     8ec:	mov	x19, x0
     8f0:	add	x0, x0, #0x28
     8f4:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     8f8:	add	x0, x19, #0x48
     8fc:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     900:	ldr	x8, [x19, #56]
     904:	cbz	x8, 918 <_ZN11__sanitizer10Symbolizer14RefreshModulesEv+0x30>
     908:	mov	w8, #0x1                   	// #1
     90c:	strb	w8, [x19, #104]
     910:	ldp	x30, x19, [sp], #16
     914:	ret
     918:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     91c:	add	x0, x0, #0x0
     920:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     924:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000928 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE>:
     928:	str	x30, [sp, #-32]!
     92c:	stp	x20, x19, [sp, #16]
     930:	adrp	x8, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     934:	add	x8, x8, #0x0
     938:	mov	x20, x1
     93c:	mov	x19, x0
     940:	stp	x8, xzr, [x0]
     944:	mov	w1, #0x4028                	// #16424
     948:	mov	x0, x2
     94c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     950:	adrp	x9, 0 <_ZTVN11__sanitizer17SymbolizerProcessE>
     954:	ldr	x9, [x9]
     958:	mov	w8, #0x4020                	// #16416
     95c:	movi	v0.2d, #0xffffffffffffffff
     960:	add	x8, x0, x8
     964:	add	x9, x9, #0x10
     968:	str	xzr, [x0, #16408]
     96c:	str	d0, [x0, #16]
     970:	stp	x9, x20, [x0]
     974:	strh	wzr, [x8]
     978:	strb	wzr, [x8, #2]
     97c:	cbz	x20, 9a4 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE+0x7c>
     980:	ldrb	w8, [x20]
     984:	cbz	w8, 9bc <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE+0x94>
     988:	adrp	x8, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     98c:	add	x8, x8, #0x0
     990:	str	x8, [x0]
     994:	str	x0, [x19, #16]
     998:	ldp	x20, x19, [sp, #16]
     99c:	ldr	x30, [sp], #32
     9a0:	ret
     9a4:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9a8:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9ac:	add	x0, x0, #0x0
     9b0:	add	x2, x2, #0x0
     9b4:	mov	w1, #0x1d0                 	// #464
     9b8:	b	9d0 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE+0xa8>
     9bc:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9c0:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9c4:	add	x0, x0, #0x0
     9c8:	add	x2, x2, #0x0
     9cc:	mov	w1, #0x1d1                 	// #465
     9d0:	mov	x3, xzr
     9d4:	mov	x4, xzr
     9d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000009dc <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>:
     9dc:	str	x30, [sp, #-80]!
     9e0:	stp	x26, x25, [sp, #16]
     9e4:	stp	x24, x23, [sp, #32]
     9e8:	stp	x22, x21, [sp, #48]
     9ec:	stp	x20, x19, [sp, #64]
     9f0:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9f4:	adrp	x21, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     9f8:	mov	x19, x1
     9fc:	mov	x22, x0
     a00:	mov	w26, #0x1                   	// #1
     a04:	add	x20, x20, #0x0
     a08:	add	x21, x21, #0x0
     a0c:	mov	x25, x1
     a10:	mov	x0, x22
     a14:	mov	x1, x20
     a18:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     a1c:	mov	x23, x0
     a20:	add	x0, x0, #0x1
     a24:	mov	x1, xzr
     a28:	mov	x2, xzr
     a2c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     a30:	mov	x1, x22
     a34:	mov	x2, x23
     a38:	mov	x24, x0
     a3c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     a40:	add	x8, x22, x23
     a44:	strb	wzr, [x24, x23]
     a48:	mov	x9, x8
     a4c:	ldrb	w10, [x9], #1
     a50:	cmp	w10, #0x0
     a54:	csel	x22, x8, x9, eq  // eq = none
     a58:	cbz	x24, b18 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x13c>
     a5c:	ldrb	w8, [x24]
     a60:	cbz	w8, af8 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x11c>
     a64:	tbz	w26, #0, a70 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x94>
     a68:	mov	x23, x19
     a6c:	b	a94 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0xb8>
     a70:	ldr	x0, [x19, #8]
     a74:	bl	0 <_ZN11__sanitizer15SymbolizedStack3NewEm>
     a78:	ldp	x1, x2, [x19, #16]
     a7c:	ldr	w3, [x19, #32]
     a80:	mov	x23, x0
     a84:	add	x0, x0, #0x8
     a88:	bl	0 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>
     a8c:	str	x23, [x25]
     a90:	mov	x25, x23
     a94:	add	x0, x23, #0x8
     a98:	mov	x1, x22
     a9c:	str	x24, [x23, #40]
     aa0:	bl	b38 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>
     aa4:	ldr	x8, [x23, #40]
     aa8:	mov	x22, x0
     aac:	mov	x1, x21
     ab0:	mov	x0, x8
     ab4:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     ab8:	cbnz	w0, acc <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0xf0>
     abc:	ldr	x0, [x23, #40]
     ac0:	mov	x1, xzr
     ac4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     ac8:	str	xzr, [x23, #40]
     acc:	ldr	x0, [x23, #56]
     ad0:	mov	x1, x21
     ad4:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     ad8:	mov	w26, wzr
     adc:	cbnz	w0, a10 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x34>
     ae0:	ldr	x0, [x23, #56]
     ae4:	mov	x1, xzr
     ae8:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     aec:	mov	w26, wzr
     af0:	str	xzr, [x23, #56]
     af4:	b	a10 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x34>
     af8:	mov	x0, x24
     afc:	ldp	x20, x19, [sp, #64]
     b00:	ldp	x22, x21, [sp, #48]
     b04:	ldp	x24, x23, [sp, #32]
     b08:	ldp	x26, x25, [sp, #16]
     b0c:	mov	x1, xzr
     b10:	ldr	x30, [sp], #80
     b14:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     b18:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     b1c:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     b20:	add	x0, x0, #0x0
     b24:	add	x2, x2, #0x0
     b28:	mov	w1, #0x148                 	// #328
     b2c:	mov	x3, xzr
     b30:	mov	x4, xzr
     b34:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000b38 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>:
     b38:	stp	x30, x23, [sp, #-48]!
     b3c:	stp	x22, x21, [sp, #16]
     b40:	stp	x20, x19, [sp, #32]
     b44:	mov	x21, x1
     b48:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     b4c:	mov	x19, x0
     b50:	add	x1, x1, #0x0
     b54:	mov	x0, x21
     b58:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     b5c:	mov	x22, x0
     b60:	add	x0, x0, #0x1
     b64:	mov	x1, xzr
     b68:	mov	x2, xzr
     b6c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     b70:	mov	x1, x21
     b74:	mov	x2, x22
     b78:	mov	x20, x0
     b7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     b80:	add	x8, x21, x22
     b84:	strb	wzr, [x20, x22]
     b88:	mov	x9, x8
     b8c:	ldrb	w10, [x9], #1
     b90:	cmp	w10, #0x0
     b94:	csel	x21, x8, x9, eq  // eq = none
     b98:	cbz	x20, ca8 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x170>
     b9c:	mov	x0, x20
     ba0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     ba4:	cbz	x0, c88 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x150>
     ba8:	add	x8, x20, x0
     bac:	mov	x22, x8
     bb0:	ldrb	w9, [x8, #-1]!
     bb4:	cmp	x8, x20
     bb8:	b.ls	bc8 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x90>  // b.plast
     bbc:	sub	w10, w9, #0x30
     bc0:	cmp	w10, #0xa
     bc4:	b.cc	bac <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x74>  // b.lo, b.ul, b.last
     bc8:	cmp	w9, #0x3a
     bcc:	b.ne	c4c <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x114>  // b.any
     bd0:	ldrb	w8, [x22]
     bd4:	sub	w8, w8, #0x30
     bd8:	cmp	w8, #0x9
     bdc:	b.hi	c4c <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x114>  // b.pmore
     be0:	ldr	w8, [x19, #56]
     be4:	mov	x0, x22
     be8:	sub	x23, x22, #0x2
     bec:	str	w8, [x19, #60]
     bf0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     bf4:	str	w0, [x19, #56]
     bf8:	sturb	wzr, [x22, #-1]
     bfc:	ldrb	w8, [x23]
     c00:	mov	x22, x23
     c04:	cmp	x23, x20
     c08:	b.ls	c1c <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xe4>  // b.plast
     c0c:	sub	w9, w8, #0x30
     c10:	cmp	w9, #0xa
     c14:	sub	x23, x22, #0x1
     c18:	b.cc	bfc <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xc4>  // b.lo, b.ul, b.last
     c1c:	cmp	w8, #0x3a
     c20:	b.ne	c4c <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x114>  // b.any
     c24:	add	x0, x22, #0x1
     c28:	ldrb	w8, [x0]
     c2c:	sub	w8, w8, #0x30
     c30:	cmp	w8, #0x9
     c34:	b.hi	c4c <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x114>  // b.pmore
     c38:	ldr	w8, [x19, #56]
     c3c:	str	w8, [x19, #60]
     c40:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     c44:	str	w0, [x19, #56]
     c48:	strb	wzr, [x22]
     c4c:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     c50:	add	x1, x1, #0x0
     c54:	mov	x0, x20
     c58:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     c5c:	mov	x22, x0
     c60:	add	x0, x0, #0x1
     c64:	mov	x1, xzr
     c68:	mov	x2, xzr
     c6c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     c70:	mov	x1, x20
     c74:	mov	x2, x22
     c78:	str	x0, [x19, #48]
     c7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     c80:	ldr	x8, [x19, #48]
     c84:	strb	wzr, [x8, x22]
     c88:	mov	x0, x20
     c8c:	mov	x1, xzr
     c90:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     c94:	mov	x0, x21
     c98:	ldp	x20, x19, [sp, #32]
     c9c:	ldp	x22, x21, [sp, #16]
     ca0:	ldp	x30, x23, [sp], #48
     ca4:	ret
     ca8:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     cac:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     cb0:	add	x0, x0, #0x0
     cb4:	add	x2, x2, #0x0
     cb8:	mov	w1, #0x129                 	// #297
     cbc:	mov	x3, xzr
     cc0:	mov	x4, xzr
     cc4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000cc8 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE>:
     cc8:	str	x30, [sp, #-48]!
     ccc:	stp	x22, x21, [sp, #16]
     cd0:	stp	x20, x19, [sp, #32]
     cd4:	mov	x19, x1
     cd8:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     cdc:	add	x1, x1, #0x0
     ce0:	mov	x20, x0
     ce4:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     ce8:	mov	x21, x0
     cec:	add	x0, x0, #0x1
     cf0:	mov	x1, xzr
     cf4:	mov	x2, xzr
     cf8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     cfc:	mov	x1, x20
     d00:	mov	x2, x21
     d04:	str	x0, [x19, #40]
     d08:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     d0c:	ldr	x8, [x19, #40]
     d10:	add	x9, x20, x21
     d14:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     d18:	add	x1, x1, #0x0
     d1c:	strb	wzr, [x8, x21]
     d20:	mov	x8, x9
     d24:	ldrb	w10, [x8], #1
     d28:	cmp	w10, #0x0
     d2c:	csel	x20, x9, x8, eq  // eq = none
     d30:	mov	x0, x20
     d34:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     d38:	mov	x22, x0
     d3c:	add	x0, x0, #0x1
     d40:	mov	x1, xzr
     d44:	mov	x2, xzr
     d48:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     d4c:	mov	x1, x20
     d50:	mov	x2, x22
     d54:	mov	x21, x0
     d58:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     d5c:	add	x8, x20, x22
     d60:	strb	wzr, [x21, x22]
     d64:	mov	x9, x8
     d68:	ldrb	w10, [x9], #1
     d6c:	cmp	w10, #0x0
     d70:	csel	x20, x8, x9, eq  // eq = none
     d74:	cbz	x21, d84 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE+0xbc>
     d78:	mov	x0, x21
     d7c:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     d80:	str	x0, [x19, #48]
     d84:	mov	x0, x21
     d88:	mov	x1, xzr
     d8c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     d90:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     d94:	add	x1, x1, #0x0
     d98:	mov	x0, x20
     d9c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     da0:	mov	x22, x0
     da4:	add	x0, x0, #0x1
     da8:	mov	x1, xzr
     dac:	mov	x2, xzr
     db0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     db4:	mov	x1, x20
     db8:	mov	x2, x22
     dbc:	mov	x21, x0
     dc0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     dc4:	strb	wzr, [x21, x22]
     dc8:	cbz	x21, dd8 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE+0x110>
     dcc:	mov	x0, x21
     dd0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     dd4:	str	x0, [x19, #56]
     dd8:	mov	x0, x21
     ddc:	ldp	x20, x19, [sp, #32]
     de0:	ldp	x22, x21, [sp, #16]
     de4:	mov	x1, xzr
     de8:	ldr	x30, [sp], #48
     dec:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>

0000000000000df0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
     df0:	stp	x30, x19, [sp, #-16]!
     df4:	mov	x19, x2
     df8:	ldr	x2, [x2, #16]
     dfc:	ldr	x3, [x19, #24]
     e00:	ldr	w4, [x19, #32]
     e04:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     e08:	add	x1, x1, #0x0
     e0c:	bl	e28 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
     e10:	cbz	x0, e20 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x30>
     e14:	mov	x1, x19
     e18:	bl	9dc <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
     e1c:	mov	w0, #0x1                   	// #1
     e20:	ldp	x30, x19, [sp], #16
     e24:	ret

0000000000000e28 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>:
     e28:	str	x30, [sp, #-32]!
     e2c:	stp	x20, x19, [sp, #16]
     e30:	cbz	x2, f38 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x110>
     e34:	cmp	w4, #0x8
     e38:	b.hi	f50 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x128>  // b.pmore
     e3c:	adrp	x10, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     e40:	mov	w9, w4
     e44:	add	x10, x10, #0x0
     e48:	adr	x11, e74 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x4c>
     e4c:	ldrb	w12, [x10, x9]
     e50:	add	x11, x11, x12, lsl #2
     e54:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     e58:	mov	x6, x3
     e5c:	mov	x8, x2
     e60:	mov	x3, x1
     e64:	mov	x19, x0
     e68:	add	x20, x0, #0x18
     e6c:	add	x5, x5, #0x0
     e70:	br	x11
     e74:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     e78:	add	x2, x2, #0x0
     e7c:	mov	w1, #0x4000                	// #16384
     e80:	mov	x0, x20
     e84:	mov	x4, x8
     e88:	mov	x5, x6
     e8c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     e90:	cmp	w0, #0x4, lsl #12
     e94:	b.ge	f1c <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xf4>  // b.tcont
     e98:	ldr	x0, [x19, #16]
     e9c:	mov	x1, x20
     ea0:	ldp	x20, x19, [sp, #16]
     ea4:	ldr	x30, [sp], #32
     ea8:	b	12cc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
     eac:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     eb0:	add	x5, x5, #0x0
     eb4:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     eb8:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ebc:	add	x5, x5, #0x0
     ec0:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     ec4:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ec8:	add	x5, x5, #0x0
     ecc:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     ed0:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ed4:	add	x5, x5, #0x0
     ed8:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     edc:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ee0:	add	x5, x5, #0x0
     ee4:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     ee8:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     eec:	add	x5, x5, #0x0
     ef0:	b	efc <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xd4>
     ef4:	adrp	x5, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ef8:	add	x5, x5, #0x0
     efc:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f00:	add	x2, x2, #0x0
     f04:	mov	w1, #0x4000                	// #16384
     f08:	mov	x0, x20
     f0c:	mov	x4, x8
     f10:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     f14:	cmp	w0, #0x4, lsl #12
     f18:	b.lt	e98 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x70>  // b.tstop
     f1c:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f20:	add	x0, x0, #0x0
     f24:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     f28:	ldp	x20, x19, [sp, #16]
     f2c:	mov	x0, xzr
     f30:	ldr	x30, [sp], #32
     f34:	ret
     f38:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f3c:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f40:	add	x0, x0, #0x0
     f44:	add	x2, x2, #0x0
     f48:	mov	w1, #0x1b5                 	// #437
     f4c:	b	f64 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x13c>
     f50:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f54:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f58:	add	x0, x0, #0x0
     f5c:	add	x2, x2, #0x0
     f60:	mov	w1, #0x2b8                 	// #696
     f64:	mov	x3, xzr
     f68:	mov	x4, xzr
     f6c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000f70 <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE>:
     f70:	str	x30, [sp, #-32]!
     f74:	stp	x20, x19, [sp, #16]
     f78:	mov	x19, x2
     f7c:	ldr	x2, [x2]
     f80:	ldr	x3, [x19, #8]
     f84:	ldr	w4, [x19, #16]
     f88:	mov	x20, x1
     f8c:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     f90:	add	x1, x1, #0x0
     f94:	bl	e28 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
     f98:	cbz	x0, fbc <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0x4c>
     f9c:	mov	x1, x19
     fa0:	bl	cc8 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE>
     fa4:	ldr	x8, [x19, #8]
     fa8:	ldr	x9, [x19, #48]
     fac:	mov	w0, #0x1                   	// #1
     fb0:	sub	x8, x20, x8
     fb4:	add	x8, x8, x9
     fb8:	str	x8, [x19, #48]
     fbc:	ldp	x20, x19, [sp, #16]
     fc0:	ldr	x30, [sp], #32
     fc4:	ret

0000000000000fc8 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE>:
     fc8:	sub	sp, sp, #0xd0
     fcc:	str	x30, [sp, #128]
     fd0:	stp	x26, x25, [sp, #144]
     fd4:	stp	x24, x23, [sp, #160]
     fd8:	stp	x22, x21, [sp, #176]
     fdc:	stp	x20, x19, [sp, #192]
     fe0:	mov	x19, x2
     fe4:	ldr	x2, [x2]
     fe8:	ldr	x3, [x19, #8]
     fec:	ldr	w4, [x19, #16]
     ff0:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     ff4:	add	x1, x1, #0x0
     ff8:	bl	e28 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
     ffc:	cbz	x0, 12b0 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x2e8>
    1000:	adrp	x1, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1004:	add	x1, x1, #0x0
    1008:	mov	w2, #0x2                   	// #2
    100c:	mov	x23, x0
    1010:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1014:	cbz	w0, 12ac <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x2e4>
    1018:	ldrb	w8, [x23]
    101c:	cbz	w8, 12ac <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x2e4>
    1020:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1024:	adrp	x21, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1028:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    102c:	add	x19, x19, #0x18
    1030:	add	x20, x20, #0x0
    1034:	add	x21, x21, #0x0
    1038:	add	x22, x22, #0x0
    103c:	b	1060 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x98>
    1040:	mov	x0, x24
    1044:	mov	x1, xzr
    1048:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    104c:	add	x1, sp, #0x40
    1050:	mov	x0, x19
    1054:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1058:	ldrb	w8, [x26, x25]
    105c:	cbz	w8, 12ac <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x2e4>
    1060:	mov	x0, x23
    1064:	mov	x1, x20
    1068:	stp	xzr, xzr, [sp, #64]
    106c:	str	xzr, [sp, #80]
    1070:	str	wzr, [sp, #88]
    1074:	strh	wzr, [sp, #92]
    1078:	strb	wzr, [sp, #94]
    107c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1080:	mov	x24, x0
    1084:	add	x0, x0, #0x1
    1088:	mov	x1, xzr
    108c:	mov	x2, xzr
    1090:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1094:	mov	x1, x23
    1098:	mov	x2, x24
    109c:	str	x0, [sp, #64]
    10a0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    10a4:	ldr	x8, [sp, #64]
    10a8:	add	x9, x23, x24
    10ac:	mov	x1, x20
    10b0:	strb	wzr, [x8, x24]
    10b4:	mov	x8, x9
    10b8:	ldrb	w10, [x8], #1
    10bc:	cmp	w10, #0x0
    10c0:	csel	x23, x9, x8, eq  // eq = none
    10c4:	mov	x0, x23
    10c8:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    10cc:	mov	x24, x0
    10d0:	add	x0, x0, #0x1
    10d4:	mov	x1, xzr
    10d8:	mov	x2, xzr
    10dc:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    10e0:	mov	x1, x23
    10e4:	mov	x2, x24
    10e8:	str	x0, [sp, #72]
    10ec:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    10f0:	ldr	x8, [sp, #72]
    10f4:	add	x9, x23, x24
    10f8:	mov	x0, sp
    10fc:	strb	wzr, [x8, x24]
    1100:	mov	x8, x9
    1104:	ldrb	w10, [x8], #1
    1108:	cmp	w10, #0x0
    110c:	csel	x23, x9, x8, eq  // eq = none
    1110:	bl	0 <_ZN11__sanitizer11AddressInfoC1Ev>
    1114:	mov	x0, sp
    1118:	mov	x1, x23
    111c:	bl	b38 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>
    1120:	ldr	x8, [sp, #48]
    1124:	ldr	w9, [sp, #56]
    1128:	mov	w2, #0x2                   	// #2
    112c:	mov	x1, x21
    1130:	mov	x23, x0
    1134:	str	x8, [sp, #80]
    1138:	str	w9, [sp, #88]
    113c:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1140:	cmp	w0, #0x0
    1144:	cset	w8, ne  // ne = any
    1148:	mov	x0, x23
    114c:	mov	x1, x22
    1150:	strb	w8, [sp, #92]
    1154:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1158:	mov	x25, x0
    115c:	add	x0, x0, #0x1
    1160:	mov	x1, xzr
    1164:	mov	x2, xzr
    1168:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    116c:	mov	x1, x23
    1170:	mov	x2, x25
    1174:	mov	x24, x0
    1178:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    117c:	add	x8, x23, x25
    1180:	strb	wzr, [x24, x25]
    1184:	mov	x9, x8
    1188:	ldrb	w10, [x9], #1
    118c:	cmp	w10, #0x0
    1190:	csel	x23, x8, x9, eq  // eq = none
    1194:	cbz	x24, 11a4 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x1dc>
    1198:	mov	x0, x24
    119c:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    11a0:	str	x0, [sp, #96]
    11a4:	mov	x0, x24
    11a8:	mov	x1, xzr
    11ac:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    11b0:	mov	w2, #0x2                   	// #2
    11b4:	mov	x0, x23
    11b8:	mov	x1, x21
    11bc:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    11c0:	cmp	w0, #0x0
    11c4:	cset	w8, ne  // ne = any
    11c8:	mov	x0, x23
    11cc:	mov	x1, x22
    11d0:	strb	w8, [sp, #93]
    11d4:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    11d8:	mov	x25, x0
    11dc:	add	x0, x0, #0x1
    11e0:	mov	x1, xzr
    11e4:	mov	x2, xzr
    11e8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    11ec:	mov	x1, x23
    11f0:	mov	x2, x25
    11f4:	mov	x24, x0
    11f8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    11fc:	add	x8, x23, x25
    1200:	strb	wzr, [x24, x25]
    1204:	mov	x9, x8
    1208:	ldrb	w10, [x9], #1
    120c:	cmp	w10, #0x0
    1210:	csel	x23, x8, x9, eq  // eq = none
    1214:	cbz	x24, 1224 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x25c>
    1218:	mov	x0, x24
    121c:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1220:	str	x0, [sp, #104]
    1224:	mov	x0, x24
    1228:	mov	x1, xzr
    122c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1230:	mov	w2, #0x2                   	// #2
    1234:	mov	x0, x23
    1238:	mov	x1, x21
    123c:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1240:	cmp	w0, #0x0
    1244:	cset	w8, ne  // ne = any
    1248:	mov	x0, x23
    124c:	mov	x1, x20
    1250:	strb	w8, [sp, #94]
    1254:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1258:	mov	x25, x0
    125c:	add	x0, x0, #0x1
    1260:	mov	x1, xzr
    1264:	mov	x2, xzr
    1268:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    126c:	mov	x1, x23
    1270:	mov	x2, x25
    1274:	mov	x24, x0
    1278:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    127c:	add	x26, x23, x25
    1280:	strb	wzr, [x24, x25]
    1284:	mov	x8, x26
    1288:	ldrb	w9, [x8], #1
    128c:	cmp	w9, #0x0
    1290:	cset	w25, ne  // ne = any
    1294:	csel	x23, x26, x8, eq  // eq = none
    1298:	cbz	x24, 1040 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x78>
    129c:	mov	x0, x24
    12a0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    12a4:	str	x0, [sp, #112]
    12a8:	b	1040 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x78>
    12ac:	mov	w0, #0x1                   	// #1
    12b0:	ldp	x20, x19, [sp, #192]
    12b4:	ldp	x22, x21, [sp, #176]
    12b8:	ldp	x24, x23, [sp, #160]
    12bc:	ldp	x26, x25, [sp, #144]
    12c0:	ldr	x30, [sp, #128]
    12c4:	add	sp, sp, #0xd0
    12c8:	ret

00000000000012cc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>:
    12cc:	str	x30, [sp, #-64]!
    12d0:	stp	x24, x23, [sp, #16]
    12d4:	stp	x22, x21, [sp, #32]
    12d8:	stp	x20, x19, [sp, #48]
    12dc:	mov	w8, #0x4020                	// #16416
    12e0:	add	x24, x0, x8
    12e4:	ldrb	w8, [x24]
    12e8:	cbnz	w8, 1418 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x14c>
    12ec:	ldr	x22, [x0, #8]
    12f0:	mov	x19, x0
    12f4:	mov	x20, x1
    12f8:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
    12fc:	cbz	x0, 1320 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x54>
    1300:	mov	x21, x0
    1304:	mov	x0, x22
    1308:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
    130c:	cbz	x0, 1320 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x54>
    1310:	mov	x1, x0
    1314:	mov	x0, x21
    1318:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
    131c:	cbz	w0, 1440 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x174>
    1320:	ldr	x8, [x19, #16408]
    1324:	cmp	x8, #0x4
    1328:	b.hi	1410 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x144>  // b.pmore
    132c:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1330:	add	x21, x19, #0x18
    1334:	add	x22, x22, #0x0
    1338:	b	1360 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x94>
    133c:	ldr	x8, [x19]
    1340:	mov	x0, x19
    1344:	ldr	x8, [x8]
    1348:	blr	x8
    134c:	ldr	x8, [x19, #16408]
    1350:	add	x8, x8, #0x1
    1354:	cmp	x8, #0x5
    1358:	str	x8, [x19, #16408]
    135c:	b.cs	1410 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x144>  // b.hs, b.nlast
    1360:	ldr	w0, [x19, #16]
    1364:	cmn	w0, #0x1
    1368:	b.eq	13e0 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x114>  // b.none
    136c:	ldr	w8, [x19, #20]
    1370:	cmn	w8, #0x1
    1374:	b.eq	13dc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x110>  // b.none
    1378:	mov	x0, x20
    137c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    1380:	cbz	x0, 13b4 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0xe8>
    1384:	str	xzr, [sp, #8]
    1388:	mov	x23, x0
    138c:	ldr	w0, [x19, #20]
    1390:	add	x3, sp, #0x8
    1394:	mov	x1, x20
    1398:	mov	x2, x23
    139c:	mov	x4, xzr
    13a0:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
    13a4:	tbz	w0, #0, 13f4 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x128>
    13a8:	ldr	x8, [sp, #8]
    13ac:	cmp	x8, x23
    13b0:	b.ne	13f4 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x128>  // b.any
    13b4:	ldr	x8, [x19]
    13b8:	mov	w2, #0x4000                	// #16384
    13bc:	mov	x0, x19
    13c0:	mov	x1, x21
    13c4:	ldr	x8, [x8, #8]
    13c8:	blr	x8
    13cc:	tbnz	w0, #0, 141c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x150>
    13d0:	ldr	w0, [x19, #16]
    13d4:	cmn	w0, #0x1
    13d8:	b.eq	13e0 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x114>  // b.none
    13dc:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    13e0:	ldr	w0, [x19, #20]
    13e4:	cmn	w0, #0x1
    13e8:	b.eq	133c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x70>  // b.none
    13ec:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    13f0:	b	133c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x70>
    13f4:	ldr	w1, [x19, #20]
    13f8:	mov	x0, x22
    13fc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1400:	ldr	w0, [x19, #16]
    1404:	cmn	w0, #0x1
    1408:	b.ne	13dc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x110>  // b.any
    140c:	b	13e0 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x114>
    1410:	ldrb	w8, [x24]
    1414:	cbz	w8, 1434 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x168>
    1418:	mov	x21, xzr
    141c:	mov	x0, x21
    1420:	ldp	x20, x19, [sp, #48]
    1424:	ldp	x22, x21, [sp, #32]
    1428:	ldp	x24, x23, [sp, #16]
    142c:	ldr	x30, [sp], #64
    1430:	ret
    1434:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1438:	add	x0, x0, #0x0
    143c:	b	1448 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x17c>
    1440:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1444:	add	x0, x0, #0x0
    1448:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    144c:	mov	x21, xzr
    1450:	mov	w8, #0x1                   	// #1
    1454:	strb	w8, [x24]
    1458:	b	141c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x150>

000000000000145c <_ZN11__sanitizer17SymbolizerProcessC1EPKcb>:
    145c:	str	x30, [sp, #-16]!
    1460:	adrp	x10, 0 <_ZTVN11__sanitizer17SymbolizerProcessE>
    1464:	ldr	x10, [x10]
    1468:	mov	w8, #0x4020                	// #16416
    146c:	and	w9, w2, #0x1
    1470:	movi	v0.2d, #0xffffffffffffffff
    1474:	add	x8, x0, x8
    1478:	add	x10, x10, #0x10
    147c:	str	xzr, [x0, #16408]
    1480:	str	d0, [x0, #16]
    1484:	stp	x10, x1, [x0]
    1488:	strh	wzr, [x8]
    148c:	strb	w9, [x8, #2]
    1490:	cbz	x1, 14a4 <_ZN11__sanitizer17SymbolizerProcessC1EPKcb+0x48>
    1494:	ldrb	w8, [x1]
    1498:	cbz	w8, 14bc <_ZN11__sanitizer17SymbolizerProcessC1EPKcb+0x60>
    149c:	ldr	x30, [sp], #16
    14a0:	ret
    14a4:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    14a8:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    14ac:	add	x0, x0, #0x0
    14b0:	add	x2, x2, #0x0
    14b4:	mov	w1, #0x1d0                 	// #464
    14b8:	b	14d0 <_ZN11__sanitizer17SymbolizerProcessC1EPKcb+0x74>
    14bc:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    14c0:	adrp	x2, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    14c4:	add	x0, x0, #0x0
    14c8:	add	x2, x2, #0x0
    14cc:	mov	w1, #0x1d1                 	// #465
    14d0:	mov	x3, xzr
    14d4:	mov	x4, xzr
    14d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000014dc <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc>:
    14dc:	sub	sp, sp, #0x30
    14e0:	stp	x30, x21, [sp, #16]
    14e4:	stp	x20, x19, [sp, #32]
    14e8:	ldr	w8, [x0, #16]
    14ec:	cmn	w8, #0x1
    14f0:	b.eq	1588 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xac>  // b.none
    14f4:	ldr	w8, [x0, #20]
    14f8:	mov	x19, x0
    14fc:	cmn	w8, #0x1
    1500:	b.eq	1588 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xac>  // b.none
    1504:	mov	x0, x1
    1508:	mov	x20, x1
    150c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    1510:	cbz	x0, 1544 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x68>
    1514:	str	xzr, [sp, #8]
    1518:	mov	x21, x0
    151c:	ldr	w0, [x19, #20]
    1520:	add	x3, sp, #0x8
    1524:	mov	x1, x20
    1528:	mov	x2, x21
    152c:	mov	x4, xzr
    1530:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
    1534:	tbz	w0, #0, 1578 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x9c>
    1538:	ldr	x8, [sp, #8]
    153c:	cmp	x8, x21
    1540:	b.ne	1578 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x9c>  // b.any
    1544:	mov	x20, x19
    1548:	ldr	x8, [x20], #24
    154c:	mov	w2, #0x4000                	// #16384
    1550:	mov	x0, x19
    1554:	ldr	x8, [x8, #8]
    1558:	mov	x1, x20
    155c:	blr	x8
    1560:	tst	w0, #0x1
    1564:	csel	x0, x20, xzr, ne  // ne = any
    1568:	ldp	x20, x19, [sp, #32]
    156c:	ldp	x30, x21, [sp, #16]
    1570:	add	sp, sp, #0x30
    1574:	ret
    1578:	ldr	w1, [x19, #20]
    157c:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1580:	add	x0, x0, #0x0
    1584:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1588:	mov	x0, xzr
    158c:	ldp	x20, x19, [sp, #32]
    1590:	ldp	x30, x21, [sp, #16]
    1594:	add	sp, sp, #0x30
    1598:	ret

000000000000159c <_ZN11__sanitizer17SymbolizerProcess7RestartEv>:
    159c:	stp	x30, x19, [sp, #-16]!
    15a0:	mov	x19, x0
    15a4:	ldr	w0, [x0, #16]
    15a8:	cmn	w0, #0x1
    15ac:	b.eq	15b4 <_ZN11__sanitizer17SymbolizerProcess7RestartEv+0x18>  // b.none
    15b0:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    15b4:	ldr	w0, [x19, #20]
    15b8:	cmn	w0, #0x1
    15bc:	b.eq	15c4 <_ZN11__sanitizer17SymbolizerProcess7RestartEv+0x28>  // b.none
    15c0:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    15c4:	ldr	x8, [x19]
    15c8:	mov	x0, x19
    15cc:	ldr	x1, [x8]
    15d0:	ldp	x30, x19, [sp], #16
    15d4:	br	x1

00000000000015d8 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm>:
    15d8:	cbz	x2, 1620 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0x48>
    15dc:	str	x30, [sp, #-32]!
    15e0:	stp	x20, x19, [sp, #16]
    15e4:	str	xzr, [sp, #8]
    15e8:	mov	x19, x0
    15ec:	ldr	w0, [x0, #20]
    15f0:	add	x3, sp, #0x8
    15f4:	mov	x4, xzr
    15f8:	mov	x20, x2
    15fc:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
    1600:	tbz	w0, #0, 1628 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0x50>
    1604:	ldr	x8, [sp, #8]
    1608:	cmp	x8, x20
    160c:	b.ne	1628 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0x50>  // b.any
    1610:	mov	w0, #0x1                   	// #1
    1614:	ldp	x20, x19, [sp, #16]
    1618:	ldr	x30, [sp], #32
    161c:	ret
    1620:	mov	w0, #0x1                   	// #1
    1624:	ret
    1628:	ldr	w1, [x19, #20]
    162c:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    1630:	add	x0, x0, #0x0
    1634:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1638:	mov	w0, wzr
    163c:	ldp	x20, x19, [sp, #16]
    1640:	ldr	x30, [sp], #32
    1644:	ret

0000000000001648 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>:
    1648:	str	x30, [sp, #-48]!
    164c:	stp	x22, x21, [sp, #16]
    1650:	stp	x20, x19, [sp, #32]
    1654:	cbz	x2, 171c <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0xd4>
    1658:	str	xzr, [sp, #8]
    165c:	mov	x21, x0
    1660:	ldr	w0, [x0, #16]
    1664:	mov	x20, x2
    1668:	sub	x2, x2, #0x1
    166c:	add	x3, sp, #0x8
    1670:	mov	x4, xzr
    1674:	mov	x19, x1
    1678:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
    167c:	ldr	x8, [sp, #8]
    1680:	cbz	x8, 16e4 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0x9c>
    1684:	tbz	w0, #0, 16e4 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0x9c>
    1688:	mov	x22, xzr
    168c:	ldr	x9, [x21]
    1690:	add	x22, x8, x22
    1694:	mov	x0, x21
    1698:	mov	x1, x19
    169c:	ldr	x9, [x9, #16]
    16a0:	mov	x2, x22
    16a4:	blr	x9
    16a8:	tbnz	w0, #0, 1718 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0xd0>
    16ac:	add	x8, x22, #0x1
    16b0:	cmp	x8, x20
    16b4:	b.eq	1708 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0xc0>  // b.none
    16b8:	str	xzr, [sp, #8]
    16bc:	ldr	w0, [x21, #16]
    16c0:	mvn	x8, x22
    16c4:	add	x1, x19, x22
    16c8:	add	x2, x8, x20
    16cc:	add	x3, sp, #0x8
    16d0:	mov	x4, xzr
    16d4:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
    16d8:	ldr	x8, [sp, #8]
    16dc:	cbz	x8, 16e4 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0x9c>
    16e0:	tbnz	w0, #0, 168c <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0x44>
    16e4:	ldr	w1, [x21, #16]
    16e8:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    16ec:	add	x0, x0, #0x0
    16f0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    16f4:	mov	w0, wzr
    16f8:	ldp	x20, x19, [sp, #32]
    16fc:	ldp	x22, x21, [sp, #16]
    1700:	ldr	x30, [sp], #48
    1704:	ret
    1708:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    170c:	add	x0, x0, #0x0
    1710:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1714:	mov	x22, xzr
    1718:	strb	wzr, [x19, x22]
    171c:	mov	w0, #0x1                   	// #1
    1720:	ldp	x20, x19, [sp, #32]
    1724:	ldp	x22, x21, [sp, #16]
    1728:	ldr	x30, [sp], #48
    172c:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool8DemangleEPKc>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm:

0000000000000000 <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm>:
   0:	cmp	x2, #0x2
   4:	b.cc	28 <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm+0x28>  // b.lo, b.ul, b.last
   8:	add	x8, x2, x1
   c:	ldurb	w9, [x8, #-1]
  10:	cmp	w9, #0xa
  14:	b.ne	28 <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm+0x28>  // b.any
  18:	ldurb	w8, [x8, #-2]
  1c:	cmp	w8, #0xa
  20:	cset	w0, eq  // eq = none
  24:	ret
  28:	mov	w0, wzr
  2c:	ret

Disassembly of section .text._ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>:
   0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
   c:	adrp	x10, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
  10:	add	x9, x9, #0x0
  14:	ldrb	w8, [x8, #188]
  18:	add	x10, x10, #0x0
  1c:	adrp	x11, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
  20:	add	x11, x11, #0x0
  24:	cmp	w8, #0x0
  28:	csel	x8, x10, x9, eq  // eq = none
  2c:	stp	x1, x8, [x2]
  30:	stp	x11, xzr, [x2, #16]
  34:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	mov	x9, #0x2493                	// #9363
  10:	movk	x9, #0x9249, lsl #16
  14:	movk	x9, #0x4924, lsl #32
  18:	lsr	x8, x8, #3
  1c:	movk	x9, #0x2492, lsl #48
  20:	umulh	x4, x8, x9
  24:	cmp	x3, x4
  28:	b.hi	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0xb4>  // b.pmore
  2c:	mov	x19, x0
  30:	mov	x20, x1
  34:	b.ne	8c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0x8c>  // b.any
  38:	adds	x3, x3, #0x1
  3c:	b.cs	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0xcc>  // b.hs, b.nlast
  40:	sub	x8, x3, #0x1
  44:	tst	x3, x8
  48:	b.ne	54 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0x54>  // b.any
  4c:	mov	x8, x3
  50:	b	7c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0x7c>
  54:	clz	x8, x3
  58:	eor	x9, x8, #0x3f
  5c:	mov	w8, #0x2                   	// #2
  60:	lsl	x8, x8, x9
  64:	cmp	x8, x3
  68:	b.ls	ec <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0xec>  // b.plast
  6c:	mov	w10, #0x1                   	// #1
  70:	lsl	x4, x10, x9
  74:	cmp	x4, x3
  78:	b.cs	108 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_+0x108>  // b.hs, b.nlast
  7c:	mov	x0, x19
  80:	mov	x1, x8
  84:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  88:	ldr	x3, [x19, #16]
  8c:	add	x9, x3, #0x1
  90:	ldr	x8, [x19]
  94:	str	x9, [x19, #16]
  98:	mov	x1, x20
  9c:	ldp	x20, x19, [sp, #16]
  a0:	mov	w10, #0x38                  	// #56
  a4:	madd	x0, x3, x10, x8
  a8:	mov	w2, #0x38                  	// #56
  ac:	ldr	x30, [sp], #32
  b0:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x1cd                 	// #461
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  d0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  d4:	add	x0, x0, #0x0
  d8:	add	x2, x2, #0x0
  dc:	mov	w1, #0x186                 	// #390
  e0:	mov	x3, xzr
  e4:	mov	x4, xzr
  e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ec:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  f0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
  f4:	add	x0, x0, #0x0
  f8:	add	x2, x2, #0x0
  fc:	mov	w1, #0x18a                 	// #394
 100:	mov	x4, x8
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 108:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
 10c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE9push_backERKS1_>
 110:	add	x0, x0, #0x0
 114:	add	x2, x2, #0x0
 118:	mov	w1, #0x18b                 	// #395
 11c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm+0xa0>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	c0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm+0xc0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	dc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm+0xdc>  // b.any
  44:	mov	w8, #0x38                  	// #56
  48:	mul	x8, x20, x8
  4c:	add	x8, x8, x0
  50:	sub	x8, x8, #0x1
  54:	neg	x9, x0
  58:	and	x20, x8, x9
  5c:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  60:	add	x1, x1, #0x0
  64:	mov	x0, x20
  68:	mov	w2, wzr
  6c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  70:	ldr	x8, [x19, #16]
  74:	ldr	x1, [x19]
  78:	mov	w9, #0x38                  	// #56
  7c:	mov	x21, x0
  80:	mul	x2, x8, x9
  84:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  88:	ldp	x0, x1, [x19]
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	stp	x21, x20, [x19]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x30, x21, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  a4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  a8:	add	x0, x0, #0x0
  ac:	add	x2, x2, #0x0
  b0:	mov	w1, #0x20b                 	// #523
  b4:	mov	x3, xzr
  b8:	mov	x4, xzr
  bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  c0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  c4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  c8:	add	x0, x0, #0x0
  cc:	add	x2, x2, #0x0
  d0:	mov	w1, #0x20c                 	// #524
  d4:	mov	x4, x20
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  dc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_9LocalInfoEE7ReallocEm>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

sanitizer_symbolizer_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer_markup.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer_posix_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer14DemangleCXXABIEPKc>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	adrp	x8, 0 <__cxa_demangle>
   8:	ldr	x8, [x8]
   c:	mov	x19, x0
  10:	cbz	x8, 34 <_ZN11__sanitizer14DemangleCXXABIEPKc+0x34>
  14:	mov	x0, x19
  18:	mov	x1, xzr
  1c:	mov	x2, xzr
  20:	mov	x3, xzr
  24:	bl	0 <__cxa_demangle>
  28:	cbz	x0, 34 <_ZN11__sanitizer14DemangleCXXABIEPKc+0x34>
  2c:	ldp	x30, x19, [sp], #16
  30:	ret
  34:	mov	x0, x19
  38:	ldp	x30, x19, [sp], #16
  3c:	ret

0000000000000040 <_ZN11__sanitizer13DemangleSwiftEPKc>:
  40:	sub	sp, sp, #0x20
  44:	stp	x30, x19, [sp, #16]
  48:	cbz	x0, a4 <_ZN11__sanitizer13DemangleSwiftEPKc+0x64>
  4c:	ldrb	w8, [x0]
  50:	mov	x19, x0
  54:	cmp	w8, #0x5f
  58:	b.ne	a4 <_ZN11__sanitizer13DemangleSwiftEPKc+0x64>  // b.any
  5c:	ldrb	w8, [x19, #1]
  60:	cmp	w8, #0x54
  64:	b.ne	a4 <_ZN11__sanitizer13DemangleSwiftEPKc+0x64>  // b.any
  68:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
  6c:	ldr	x0, [x8]
  70:	cbz	x0, a4 <_ZN11__sanitizer13DemangleSwiftEPKc+0x64>
  74:	str	x0, [sp, #8]
  78:	mov	x0, x19
  7c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  80:	mov	x1, x0
  84:	mov	x0, x19
  88:	ldr	x5, [sp, #8]
  8c:	ldp	x30, x19, [sp, #16]
  90:	mov	x2, xzr
  94:	mov	x3, xzr
  98:	mov	w4, wzr
  9c:	add	sp, sp, #0x20
  a0:	br	x5
  a4:	ldp	x30, x19, [sp, #16]
  a8:	mov	x0, xzr
  ac:	add	sp, sp, #0x20
  b0:	ret

00000000000000b4 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc>:
  b4:	str	x30, [sp, #-32]!
  b8:	stp	x20, x19, [sp, #16]
  bc:	cbz	x0, 10c <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x58>
  c0:	ldrb	w8, [x0]
  c4:	mov	x19, x0
  c8:	cmp	w8, #0x5f
  cc:	b.ne	118 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x64>  // b.any
  d0:	ldrb	w8, [x19, #1]
  d4:	cmp	w8, #0x54
  d8:	b.ne	118 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x64>  // b.any
  dc:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
  e0:	ldr	x20, [x8]
  e4:	cbz	x20, 118 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x64>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  f0:	mov	x1, x0
  f4:	mov	x0, x19
  f8:	mov	x2, xzr
  fc:	mov	x3, xzr
 100:	mov	w4, wzr
 104:	blr	x20
 108:	cbz	x0, 118 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x64>
 10c:	ldp	x20, x19, [sp, #16]
 110:	ldr	x30, [sp], #32
 114:	ret
 118:	adrp	x8, 0 <__cxa_demangle>
 11c:	ldr	x8, [x8]
 120:	cbz	x8, 13c <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x88>
 124:	mov	x0, x19
 128:	mov	x1, xzr
 12c:	mov	x2, xzr
 130:	mov	x3, xzr
 134:	bl	0 <__cxa_demangle>
 138:	cbnz	x0, 10c <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x58>
 13c:	mov	x0, x19
 140:	ldp	x20, x19, [sp, #16]
 144:	ldr	x30, [sp], #32
 148:	ret

000000000000014c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv>:
 14c:	sub	sp, sp, #0x90
 150:	stp	x30, x23, [sp, #96]
 154:	stp	x22, x21, [sp, #112]
 158:	stp	x20, x19, [sp, #128]
 15c:	mov	x19, x0
 160:	ldr	x0, [x0, #8]
 164:	mov	w8, #0x4021                	// #16417
 168:	add	x20, x19, x8
 16c:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 170:	tbz	w0, #0, 1f0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xa4>
 174:	ldp	x8, x1, [x19]
 178:	add	x2, sp, #0x8
 17c:	mov	x0, x19
 180:	ldr	x8, [x8, #24]
 184:	blr	x8
 188:	ldrb	w8, [x20, #1]
 18c:	cbnz	w8, 3dc <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x290>
 190:	add	x0, sp, #0x38
 194:	add	x20, sp, #0x38
 198:	bl	0 <pipe>
 19c:	cmn	w0, #0x1
 1a0:	b.eq	3b0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x264>  // b.none
 1a4:	ldp	w9, w8, [sp, #56]
 1a8:	cmp	w8, #0x2
 1ac:	ccmp	w9, #0x2, #0x4, gt
 1b0:	csel	x22, x20, xzr, gt
 1b4:	add	x20, x20, #0x8
 1b8:	mov	x0, x20
 1bc:	bl	0 <pipe>
 1c0:	cmn	w0, #0x1
 1c4:	b.eq	214 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xc8>  // b.none
 1c8:	ldr	w8, [sp, #64]
 1cc:	cmp	w8, #0x3
 1d0:	b.lt	220 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xd4>  // b.tstop
 1d4:	ldr	w8, [sp, #68]
 1d8:	cmp	w8, #0x3
 1dc:	b.lt	220 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xd4>  // b.tstop
 1e0:	cbz	x22, 21c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xd0>
 1e4:	add	x22, sp, #0x38
 1e8:	mov	w21, #0x1                   	// #1
 1ec:	b	2e8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x19c>
 1f0:	ldrb	w8, [x20]
 1f4:	cbnz	w8, 3c4 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x278>
 1f8:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 1fc:	add	x0, x0, #0x0
 200:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 204:	mov	w8, #0x1                   	// #1
 208:	mov	w0, wzr
 20c:	strb	w8, [x20]
 210:	b	3c8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x27c>
 214:	mov	w19, #0x1                   	// #1
 218:	b	390 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x244>
 21c:	mov	x22, x20
 220:	add	x8, sp, #0x38
 224:	add	x20, x8, #0x10
 228:	mov	x0, x20
 22c:	bl	0 <pipe>
 230:	cmn	w0, #0x1
 234:	b.eq	25c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x110>  // b.none
 238:	ldr	w8, [sp, #72]
 23c:	cmp	w8, #0x3
 240:	b.lt	268 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x11c>  // b.tstop
 244:	ldr	w8, [sp, #76]
 248:	cmp	w8, #0x3
 24c:	b.lt	268 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x11c>  // b.tstop
 250:	cbz	x22, 264 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x118>
 254:	mov	w21, #0x2                   	// #2
 258:	b	2e8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x19c>
 25c:	mov	w19, #0x2                   	// #2
 260:	b	390 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x244>
 264:	mov	x22, x20
 268:	add	x8, sp, #0x38
 26c:	add	x20, x8, #0x18
 270:	mov	x0, x20
 274:	bl	0 <pipe>
 278:	cmn	w0, #0x1
 27c:	b.eq	2a4 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x158>  // b.none
 280:	ldr	w8, [sp, #80]
 284:	cmp	w8, #0x3
 288:	b.lt	2b0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x164>  // b.tstop
 28c:	ldr	w8, [sp, #84]
 290:	cmp	w8, #0x3
 294:	b.lt	2b0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x164>  // b.tstop
 298:	cbz	x22, 2ac <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x160>
 29c:	mov	w21, #0x3                   	// #3
 2a0:	b	2e8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x19c>
 2a4:	mov	w19, #0x3                   	// #3
 2a8:	b	390 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x244>
 2ac:	mov	x22, x20
 2b0:	add	x8, sp, #0x38
 2b4:	add	x20, x8, #0x20
 2b8:	mov	x0, x20
 2bc:	bl	0 <pipe>
 2c0:	cmn	w0, #0x1
 2c4:	b.eq	38c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x240>  // b.none
 2c8:	ldr	w8, [sp, #88]
 2cc:	cmp	w8, #0x3
 2d0:	b.lt	318 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1cc>  // b.tstop
 2d4:	ldr	w8, [sp, #92]
 2d8:	cmp	w8, #0x3
 2dc:	b.lt	318 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1cc>  // b.tstop
 2e0:	cbz	x22, 3fc <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x2b0>
 2e4:	mov	w21, #0x4                   	// #4
 2e8:	add	x23, sp, #0x38
 2ec:	b	2fc <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1b0>
 2f0:	subs	x21, x21, #0x1
 2f4:	add	x23, x23, #0x8
 2f8:	b.eq	31c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1d0>  // b.none
 2fc:	cmp	x22, x23
 300:	b.eq	2f0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1a4>  // b.none
 304:	ldr	w0, [x23]
 308:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 30c:	ldr	w0, [x23, #4]
 310:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 314:	b	2f0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1a4>
 318:	mov	x20, xzr
 31c:	cbz	x22, 41c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x2d0>
 320:	cbz	x20, 3fc <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x2b0>
 324:	ldp	w21, w3, [x22]
 328:	ldp	w2, w20, [x20]
 32c:	ldr	x0, [x19, #8]
 330:	add	x1, sp, #0x8
 334:	mov	w4, #0xffffffff            	// #-1
 338:	bl	0 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii>
 33c:	tbnz	w0, #31, 368 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x21c>
 340:	mov	w22, w0
 344:	stp	w21, w20, [x19, #16]
 348:	cbz	w0, 43c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x2f0>
 34c:	mov	w0, #0xa                   	// #10
 350:	bl	0 <_ZN11__sanitizer14SleepForMillisEi>
 354:	mov	w0, w22
 358:	bl	0 <_ZN11__sanitizer16IsProcessRunningEi>
 35c:	tbz	w0, #0, 37c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x230>
 360:	mov	w0, #0x1                   	// #1
 364:	b	3c8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x27c>
 368:	mov	w0, w21
 36c:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 370:	mov	w0, w20
 374:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 378:	b	3c4 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x278>
 37c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 380:	add	x0, x0, #0x0
 384:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 388:	b	3c4 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x278>
 38c:	mov	w19, #0x4                   	// #4
 390:	add	x8, sp, #0x38
 394:	add	x20, x8, #0x4
 398:	ldur	w0, [x20, #-4]
 39c:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 3a0:	ldr	w0, [x20], #8
 3a4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 3a8:	subs	x19, x19, #0x1
 3ac:	b.ne	398 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x24c>  // b.any
 3b0:	bl	0 <__errno_location>
 3b4:	ldr	w1, [x0]
 3b8:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 3bc:	add	x0, x0, #0x0
 3c0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 3c4:	mov	w0, wzr
 3c8:	ldp	x20, x19, [sp, #128]
 3cc:	ldp	x22, x21, [sp, #112]
 3d0:	ldp	x30, x23, [sp, #96]
 3d4:	add	sp, sp, #0x90
 3d8:	ret
 3dc:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 3e0:	adrp	x2, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 3e4:	add	x0, x0, #0x0
 3e8:	add	x2, x2, #0x0
 3ec:	mov	w1, #0xa6                  	// #166
 3f0:	mov	x3, xzr
 3f4:	mov	x4, xzr
 3f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3fc:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 400:	adrp	x2, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 404:	add	x0, x0, #0x0
 408:	add	x2, x2, #0x0
 40c:	mov	w1, #0x85                  	// #133
 410:	mov	x3, xzr
 414:	mov	x4, xzr
 418:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 41c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 420:	adrp	x2, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 424:	add	x0, x0, #0x0
 428:	add	x2, x2, #0x0
 42c:	mov	w1, #0x84                  	// #132
 430:	mov	x3, xzr
 434:	mov	x4, xzr
 438:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 43c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 440:	adrp	x2, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 444:	add	x0, x0, #0x0
 448:	add	x2, x2, #0x0
 44c:	mov	w1, #0xbc                  	// #188
 450:	mov	x3, xzr
 454:	mov	x4, xzr
 458:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000045c <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>:
 45c:	cmp	x2, #0x9
 460:	b.cs	46c <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm+0x10>  // b.hs, b.nlast
 464:	mov	w0, wzr
 468:	ret
 46c:	str	x30, [sp, #-16]!
 470:	add	x8, x1, x2
 474:	adrp	x1, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 478:	sub	x0, x8, #0x8
 47c:	add	x1, x1, #0x0
 480:	mov	w2, #0x8                   	// #8
 484:	bl	0 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
 488:	cmp	w0, #0x0
 48c:	cset	w0, eq  // eq = none
 490:	ldr	x30, [sp], #16
 494:	ret

0000000000000498 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc>:
 498:	str	x30, [sp, #-32]!
 49c:	stp	x20, x19, [sp, #16]
 4a0:	cbz	x1, 530 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x98>
 4a4:	ldrb	w8, [x1]
 4a8:	mov	x19, x1
 4ac:	cmp	w8, #0x5f
 4b0:	b.ne	4fc <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>  // b.any
 4b4:	ldrb	w8, [x19, #1]
 4b8:	cmp	w8, #0x54
 4bc:	b.ne	4fc <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>  // b.any
 4c0:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 4c4:	ldr	x20, [x8]
 4c8:	cbz	x20, 4fc <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>
 4cc:	mov	x0, x19
 4d0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 4d4:	mov	x1, x0
 4d8:	mov	x0, x19
 4dc:	mov	x2, xzr
 4e0:	mov	x3, xzr
 4e4:	mov	w4, wzr
 4e8:	blr	x20
 4ec:	cbz	x0, 4fc <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>
 4f0:	ldp	x20, x19, [sp, #16]
 4f4:	ldr	x30, [sp], #32
 4f8:	ret
 4fc:	adrp	x8, 0 <__cxa_demangle>
 500:	ldr	x8, [x8]
 504:	cbz	x8, 520 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x88>
 508:	mov	x0, x19
 50c:	mov	x1, xzr
 510:	mov	x2, xzr
 514:	mov	x3, xzr
 518:	bl	0 <__cxa_demangle>
 51c:	cbnz	x0, 4f0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x58>
 520:	mov	x0, x19
 524:	ldp	x20, x19, [sp, #16]
 528:	ldr	x30, [sp], #32
 52c:	ret
 530:	mov	x0, xzr
 534:	ldp	x20, x19, [sp, #16]
 538:	ldr	x30, [sp], #32
 53c:	ret

0000000000000540 <_ZN11__sanitizer10Symbolizer12PlatformInitEv>:
 540:	sub	sp, sp, #0x50
 544:	str	x30, [sp, #32]
 548:	stp	x22, x21, [sp, #48]
 54c:	stp	x20, x19, [sp, #64]
 550:	adrp	x22, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 554:	ldr	x22, [x22]
 558:	ldrb	w8, [x22]
 55c:	cbz	w8, 58c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x4c>
 560:	bl	0 <_ZN11__sanitizer22IsAllocatorOutOfMemoryEv>
 564:	tbz	w0, #0, 5b8 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x78>
 568:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 56c:	ldr	x8, [x8]
 570:	ldr	w8, [x8]
 574:	cmp	w8, #0x2
 578:	b.cc	624 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xe4>  // b.lo, b.ul, b.last
 57c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 580:	add	x0, x0, #0x0
 584:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 588:	b	624 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xe4>
 58c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 590:	ldr	x8, [x8]
 594:	ldr	w8, [x8]
 598:	cmp	w8, #0x2
 59c:	b.cc	5ac <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x6c>  // b.lo, b.ul, b.last
 5a0:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 5a4:	add	x0, x0, #0x0
 5a8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 5ac:	mov	x19, xzr
 5b0:	mov	x21, xzr
 5b4:	b	7cc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x28c>
 5b8:	adrp	x8, 0 <__sanitizer_symbolize_data>
 5bc:	ldr	x8, [x8]
 5c0:	adrp	x9, 0 <__sanitizer_symbolize_code>
 5c4:	ldr	x9, [x9]
 5c8:	cmp	x8, #0x0
 5cc:	cset	w8, eq  // eq = none
 5d0:	cmp	x9, #0x0
 5d4:	cset	w9, eq  // eq = none
 5d8:	orr	w8, w9, w8
 5dc:	tbnz	w8, #0, 624 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xe4>
 5e0:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 5e4:	ldr	x0, [x0]
 5e8:	mov	w1, #0x4010                	// #16400
 5ec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 5f0:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 5f4:	add	x8, x8, #0x0
 5f8:	stp	x8, xzr, [x0]
 5fc:	cbz	x0, 624 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xe4>
 600:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 604:	ldr	x8, [x8]
 608:	mov	x19, x0
 60c:	ldr	w8, [x8]
 610:	cmp	w8, #0x2
 614:	b.cc	7c4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x284>  // b.lo, b.ul, b.last
 618:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 61c:	add	x0, x0, #0x0
 620:	b	658 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x118>
 624:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 628:	ldr	x20, [x20]
 62c:	mov	x0, x20
 630:	bl	0 <_ZN11__sanitizer22LibbacktraceSymbolizer3getEPNS_17LowLevelAllocatorE>
 634:	cbz	x0, 660 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x120>
 638:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 63c:	ldr	x8, [x8]
 640:	mov	x19, x0
 644:	ldr	w8, [x8]
 648:	cmp	w8, #0x2
 64c:	b.cc	7c4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x284>  // b.lo, b.ul, b.last
 650:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 654:	add	x0, x0, #0x0
 658:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 65c:	b	7c4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x284>
 660:	ldr	x21, [x22, #8]
 664:	cbz	x21, 680 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x140>
 668:	mov	x0, x21
 66c:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 670:	ldrb	w8, [x21]
 674:	cbz	w8, 74c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x20c>
 678:	mov	x19, x0
 67c:	b	688 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x148>
 680:	adrp	x19, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 684:	add	x19, x19, #0x0
 688:	adrp	x1, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 68c:	add	x1, x1, #0x0
 690:	mov	x0, x19
 694:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 698:	cbz	w0, 6fc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1bc>
 69c:	adrp	x1, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 6a0:	add	x1, x1, #0x0
 6a4:	mov	x0, x19
 6a8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 6ac:	cbz	w0, 84c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x30c>
 6b0:	adrp	x1, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 6b4:	add	x1, x1, #0x0
 6b8:	mov	x0, x19
 6bc:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 6c0:	cbz	w0, 76c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x22c>
 6c4:	cbnz	x21, 85c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x31c>
 6c8:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 6cc:	add	x0, x0, #0x0
 6d0:	bl	0 <_ZN11__sanitizer16FindPathToBinaryEPKc>
 6d4:	cbz	x0, 808 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x2c8>
 6d8:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 6dc:	ldr	x8, [x8]
 6e0:	mov	x21, x0
 6e4:	ldr	w8, [x8]
 6e8:	cmp	w8, #0x2
 6ec:	b.cc	720 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1e0>  // b.lo, b.ul, b.last
 6f0:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 6f4:	add	x0, x0, #0x0
 6f8:	b	718 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1d8>
 6fc:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 700:	ldr	x8, [x8]
 704:	ldr	w8, [x8]
 708:	cmp	w8, #0x2
 70c:	b.cc	720 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1e0>  // b.lo, b.ul, b.last
 710:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 714:	add	x0, x0, #0x0
 718:	mov	x1, x21
 71c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 720:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 724:	ldr	x20, [x20]
 728:	mov	w1, #0x4018                	// #16408
 72c:	mov	x0, x20
 730:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 734:	mov	x1, x21
 738:	mov	x2, x20
 73c:	mov	x19, x0
 740:	bl	0 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE>
 744:	cbnz	x19, 7c4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x284>
 748:	b	5b0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x70>
 74c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 750:	ldr	x8, [x8]
 754:	ldr	w8, [x8]
 758:	cmp	w8, #0x2
 75c:	b.cc	5ac <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x6c>  // b.lo, b.ul, b.last
 760:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 764:	add	x0, x0, #0x0
 768:	b	5a8 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x68>
 76c:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 770:	ldr	x8, [x8]
 774:	ldr	w8, [x8]
 778:	cmp	w8, #0x2
 77c:	b.cc	790 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x250>  // b.lo, b.ul, b.last
 780:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 784:	add	x0, x0, #0x0
 788:	mov	x1, x21
 78c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 790:	mov	w1, #0x38                  	// #56
 794:	mov	x0, x20
 798:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 79c:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 7a0:	add	x8, x8, #0x0
 7a4:	mov	x19, x0
 7a8:	stp	x21, x20, [x0, #16]
 7ac:	stp	xzr, xzr, [x0, #40]
 7b0:	stp	x8, xzr, [x0]
 7b4:	str	xzr, [x0, #32]!
 7b8:	mov	w1, #0x10                  	// #16
 7bc:	bl	0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 7c0:	cbz	x19, 5b0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x70>
 7c4:	str	xzr, [x19, #8]
 7c8:	mov	w21, #0x1                   	// #1
 7cc:	adrp	x0, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 7d0:	ldr	x0, [x0]
 7d4:	mov	w1, #0xf0                  	// #240
 7d8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 7dc:	add	x1, sp, #0x8
 7e0:	mov	x20, x0
 7e4:	stp	x21, x19, [sp, #8]
 7e8:	str	x19, [sp, #24]
 7ec:	bl	0 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE>
 7f0:	mov	x0, x20
 7f4:	ldp	x20, x19, [sp, #64]
 7f8:	ldp	x22, x21, [sp, #48]
 7fc:	ldr	x30, [sp, #32]
 800:	add	sp, sp, #0x50
 804:	ret
 808:	ldrb	w8, [x22, #16]
 80c:	cbz	w8, 5ac <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x6c>
 810:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 814:	add	x0, x0, #0x0
 818:	bl	0 <_ZN11__sanitizer16FindPathToBinaryEPKc>
 81c:	mov	x21, x0
 820:	cbz	x0, 844 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x304>
 824:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 828:	ldr	x8, [x8]
 82c:	ldr	w8, [x8]
 830:	cmp	w8, #0x2
 834:	b.cc	790 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x250>  // b.lo, b.ul, b.last
 838:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 83c:	add	x0, x0, #0x0
 840:	b	788 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x248>
 844:	mov	x19, xzr
 848:	b	7cc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x28c>
 84c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 850:	add	x0, x0, #0x0
 854:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 858:	bl	0 <_ZN11__sanitizer3DieEv>
 85c:	adrp	x0, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 860:	add	x0, x0, #0x0
 864:	mov	x1, x21
 868:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 86c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000870 <_ZN11__sanitizer10Symbolizer14LateInitializeEv>:
 870:	str	x30, [sp, #-16]!
 874:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 878:	adrp	x1, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 87c:	add	x1, x1, #0x0
 880:	mov	x0, xzr
 884:	bl	0 <dlsym>
 888:	adrp	x8, 0 <_ZN11__sanitizer14DemangleCXXABIEPKc>
 88c:	str	x0, [x8]
 890:	ldr	x30, [sp], #16
 894:	b	0 <dlerror>

Disassembly of section .text._ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm:

0000000000000000 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x0, 0 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>
   8:	adrp	x2, 0 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>
   c:	add	x0, x0, #0x0
  10:	add	x2, x2, #0x0
  14:	mov	w1, #0x5c                  	// #92
  18:	mov	x3, xzr
  1c:	mov	x4, xzr
  20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x0, 0 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>
   8:	adrp	x2, 0 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>
   c:	add	x0, x0, #0x0
  10:	add	x2, x2, #0x0
  14:	mov	w1, #0x62                  	// #98
  18:	mov	x3, xzr
  1c:	mov	x4, xzr
  20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm:

0000000000000000 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	x19, x1
   8:	bl	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>
   c:	tbz	w0, #0, 3c <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x3c>
  10:	ldrb	w8, [x19]
  14:	cbz	w8, 30 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x30>
  18:	adrp	x1, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  1c:	add	x0, x19, #0x1
  20:	add	x1, x1, #0x0
  24:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
  28:	cbz	x0, 48 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x48>
  2c:	strb	wzr, [x0]
  30:	mov	w0, #0x1                   	// #1
  34:	ldp	x30, x19, [sp], #16
  38:	ret
  3c:	mov	w0, wzr
  40:	ldp	x30, x19, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  4c:	adrp	x2, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  50:	add	x0, x0, #0x0
  54:	add	x2, x2, #0x0
  58:	mov	w1, #0xeb                  	// #235
  5c:	mov	x3, xzr
  60:	mov	x4, xzr
  64:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_>:
   0:	adrp	x8, 0 <_ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_>
   4:	add	x8, x8, #0x0
   8:	stp	x1, x8, [x2]
   c:	ldr	x8, [x0, #16424]
  10:	stp	x8, xzr, [x2, #16]
  14:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x1, [x2, #16]
   c:	add	x20, x0, #0x10
  10:	mov	x19, x2
  14:	mov	w3, #0x4000                	// #16384
  18:	mov	x0, x8
  1c:	mov	x2, x20
  20:	bl	0 <__sanitizer_symbolize_code>
  24:	mov	w21, w0
  28:	tbz	w0, #0, 38 <_ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x38>
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	bl	0 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
  38:	ldp	x20, x19, [sp, #16]
  3c:	and	w0, w21, #0x1
  40:	ldp	x30, x21, [sp], #32
  44:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x20, x1
  10:	ldp	x8, x1, [x2]
  14:	add	x22, x0, #0x10
  18:	mov	x19, x2
  1c:	mov	w3, #0x4000                	// #16384
  20:	mov	x0, x8
  24:	mov	x2, x22
  28:	bl	0 <__sanitizer_symbolize_data>
  2c:	mov	w21, w0
  30:	tbz	w0, #0, 54 <_ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0x54>
  34:	mov	x0, x22
  38:	mov	x1, x19
  3c:	bl	0 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE>
  40:	ldr	x8, [x19, #8]
  44:	ldr	x9, [x19, #48]
  48:	sub	x8, x20, x8
  4c:	add	x8, x8, x9
  50:	str	x8, [x19, #48]
  54:	and	w0, w21, #0x1
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldr	x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer5FlushEv:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer5FlushEv>:
   0:	adrp	x8, 0 <__sanitizer_symbolize_flush>
   4:	ldr	x8, [x8]
   8:	cbz	x8, 18 <_ZN11__sanitizer18InternalSymbolizer5FlushEv+0x18>
   c:	str	x30, [sp, #-16]!
  10:	bl	0 <__sanitizer_symbolize_flush>
  14:	ldr	x30, [sp], #16
  18:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	adrp	x8, 0 <__sanitizer_symbolize_demangle>
   c:	ldr	x8, [x8]
  10:	mov	x19, x1
  14:	cbz	x8, 64 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x64>
  18:	mov	w20, #0x400                 	// #1024
  1c:	mov	x0, x20
  20:	mov	x1, xzr
  24:	mov	x2, xzr
  28:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  2c:	mov	x21, x0
  30:	mov	x0, x19
  34:	mov	x1, x21
  38:	mov	w2, w20
  3c:	bl	0 <__sanitizer_symbolize_demangle>
  40:	sxtw	x8, w0
  44:	cmp	x20, x8
  48:	b.cs	74 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x74>  // b.hs, b.nlast
  4c:	mov	x0, x21
  50:	mov	x1, xzr
  54:	add	x20, x8, #0x1
  58:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  5c:	cmp	x20, #0x20, lsl #12
  60:	b.ls	1c <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x1c>  // b.plast
  64:	mov	x0, x19
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x30, x21, [sp], #32
  70:	ret
  74:	mov	x19, x21
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #16]
  80:	ldp	x30, x21, [sp], #32
  84:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool8DemangleEPKc>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE:

0000000000000000 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	x19, x2
   8:	ldp	x1, x2, [x2, #16]
   c:	bl	0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
  10:	cbz	x0, 20 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x20>
  14:	mov	x1, x19
  18:	bl	0 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
  1c:	mov	w0, #0x1                   	// #1
  20:	ldp	x30, x19, [sp], #16
  24:	ret

Disassembly of section .text._ZN11__sanitizer13Addr2LinePool13SymbolizeDataEmPNS_8DataInfoE:

0000000000000000 <_ZN11__sanitizer13Addr2LinePool13SymbolizeDataEmPNS_8DataInfoE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 98 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm+0x98>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b8 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm+0xb8>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm+0xd4>  // b.any
  44:	lsl	x8, x20, #3
  48:	add	x8, x8, x0
  4c:	sub	x8, x8, #0x1
  50:	neg	x9, x0
  54:	and	x20, x8, x9
  58:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	mov	w2, wzr
  68:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  6c:	ldr	x8, [x19, #16]
  70:	ldr	x1, [x19]
  74:	mov	x21, x0
  78:	lsl	x2, x8, #3
  7c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  80:	ldp	x0, x1, [x19]
  84:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  88:	stp	x21, x20, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x30, x21, [sp], #32
  94:	ret
  98:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  9c:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  a0:	add	x0, x0, #0x0
  a4:	add	x2, x2, #0x0
  a8:	mov	w1, #0x20b                 	// #523
  ac:	mov	x3, xzr
  b0:	mov	x4, xzr
  b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b8:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  bc:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  c0:	add	x0, x0, #0x0
  c4:	add	x2, x2, #0x0
  c8:	mov	w1, #0x20c                 	// #524
  cc:	mov	x4, x20
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE7ReallocEm>
  d8:	add	x0, x0, #0x0
  dc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e0:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm:

0000000000000000 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>:
   0:	sub	sp, sp, #0x80
   4:	stp	x30, x23, [sp, #80]
   8:	stp	x22, x21, [sp, #96]
   c:	stp	x20, x19, [sp, #112]
  10:	str	xzr, [sp, #72]
  14:	ldr	x8, [x0, #48]
  18:	mov	x19, x2
  1c:	mov	x20, x1
  20:	mov	x22, x0
  24:	add	x21, x0, #0x20
  28:	cbz	x8, 78 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x78>
  2c:	mov	x23, xzr
  30:	ldr	x8, [x21]
  34:	mov	x0, x20
  38:	ldr	x8, [x8, x23, lsl #3]
  3c:	ldr	x1, [x8, #16424]
  40:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  44:	cbz	w0, 5c <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x5c>
  48:	ldr	x8, [x22, #48]
  4c:	add	x23, x23, #0x1
  50:	cmp	x23, x8
  54:	b.cc	30 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x30>  // b.lo, b.ul, b.last
  58:	b	78 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x78>
  5c:	ldr	x4, [x22, #48]
  60:	cmp	x4, x23
  64:	b.ls	12c <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x12c>  // b.plast
  68:	ldr	x8, [x21]
  6c:	ldr	x8, [x8, x23, lsl #3]
  70:	str	x8, [sp, #72]
  74:	cbnz	x8, c0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0xc0>
  78:	ldr	x0, [x22, #24]
  7c:	mov	w1, #0x4030                	// #16432
  80:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  84:	ldr	x1, [x22, #16]
  88:	mov	w2, wzr
  8c:	mov	x22, x0
  90:	bl	0 <_ZN11__sanitizer17SymbolizerProcessC2EPKcb>
  94:	adrp	x8, 30 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x30>
  98:	add	x8, x8, #0x0
  9c:	mov	x0, x20
  a0:	str	x8, [x22]
  a4:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
  a8:	str	x0, [x22, #16424]
  ac:	add	x1, sp, #0x48
  b0:	mov	x0, x21
  b4:	str	x22, [sp, #72]
  b8:	bl	0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
  bc:	ldr	x8, [sp, #72]
  c0:	ldr	x1, [x8, #16424]
  c4:	mov	x0, x20
  c8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  cc:	cbnz	w0, 10c <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm+0x10c>
  d0:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
  d4:	add	x2, x2, #0x0
  d8:	add	x0, sp, #0x8
  dc:	mov	w1, #0x40                  	// #64
  e0:	mov	x4, #0xffffffffffffffff    	// #-1
  e4:	mov	x3, x19
  e8:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  ec:	ldr	x0, [sp, #72]
  f0:	add	x1, sp, #0x8
  f4:	bl	0 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
  f8:	ldp	x20, x19, [sp, #112]
  fc:	ldp	x22, x21, [sp, #96]
 100:	ldp	x30, x23, [sp, #80]
 104:	add	sp, sp, #0x80
 108:	ret
 10c:	sxtw	x4, w0
 110:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
 114:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
 118:	add	x0, x0, #0x0
 11c:	add	x2, x2, #0x0
 120:	mov	w1, #0x129                 	// #297
 124:	mov	x3, xzr
 128:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 12c:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
 130:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SendCommandEPKcm>
 134:	add	x0, x0, #0x0
 138:	add	x2, x2, #0x0
 13c:	mov	w1, #0x1c5                 	// #453
 140:	mov	x3, x23
 144:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldp	x8, x3, [x0, #8]
   c:	lsr	x4, x8, #3
  10:	cmp	x3, x4
  14:	b.hi	9c <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0x9c>  // b.pmore
  18:	mov	x19, x0
  1c:	mov	x20, x1
  20:	b.ne	78 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0x78>  // b.any
  24:	adds	x3, x3, #0x1
  28:	b.cs	b4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0xb4>  // b.hs, b.nlast
  2c:	sub	x8, x3, #0x1
  30:	tst	x3, x8
  34:	b.ne	40 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0x40>  // b.any
  38:	mov	x8, x3
  3c:	b	68 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0x68>
  40:	clz	x8, x3
  44:	eor	x9, x8, #0x3f
  48:	mov	w8, #0x2                   	// #2
  4c:	lsl	x8, x8, x9
  50:	cmp	x8, x3
  54:	b.ls	d4 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0xd4>  // b.plast
  58:	mov	w10, #0x1                   	// #1
  5c:	lsl	x4, x10, x9
  60:	cmp	x4, x3
  64:	b.cs	f0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_+0xf0>  // b.hs, b.nlast
  68:	mov	x0, x19
  6c:	mov	x1, x8
  70:	bl	0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  74:	ldr	x3, [x19, #16]
  78:	add	x9, x3, #0x1
  7c:	ldr	x8, [x19]
  80:	str	x9, [x19, #16]
  84:	mov	x1, x20
  88:	ldp	x20, x19, [sp, #16]
  8c:	add	x0, x8, x3, lsl #3
  90:	mov	w2, #0x8                   	// #8
  94:	ldr	x30, [sp], #32
  98:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  9c:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  a0:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  a4:	add	x0, x0, #0x0
  a8:	add	x2, x2, #0x0
  ac:	mov	w1, #0x1cd                 	// #461
  b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  b8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  bc:	add	x0, x0, #0x0
  c0:	add	x2, x2, #0x0
  c4:	mov	w1, #0x186                 	// #390
  c8:	mov	x3, xzr
  cc:	mov	x4, xzr
  d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  d4:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  d8:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  dc:	add	x0, x0, #0x0
  e0:	add	x2, x2, #0x0
  e4:	mov	w1, #0x18a                 	// #394
  e8:	mov	x4, x8
  ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  f4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIPNS_16Addr2LineProcessEE9push_backERKS2_>
  f8:	add	x0, x0, #0x0
  fc:	add	x2, x2, #0x0
 100:	mov	w1, #0x18b                 	// #395
 104:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_symbolizer_report.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>:
   0:	sub	sp, sp, #0x50
   4:	str	x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	adrp	x22, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  14:	ldr	x22, [x22]
  18:	ldrb	w8, [x22, #60]
  1c:	cbz	w8, e4 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_+0xe4>
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	mov	x0, sp
  2c:	mov	w1, #0x400                 	// #1024
  30:	mov	x19, x2
  34:	stp	xzr, xzr, [sp, #8]
  38:	str	xzr, [sp]
  3c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  40:	ldr	x8, [sp, #16]
  44:	cmp	x8, #0x3ff
  48:	b.hi	80 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_+0x80>  // b.pmore
  4c:	ldr	x9, [sp, #8]
  50:	cmp	x9, #0x3ff
  54:	b.hi	68 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_+0x68>  // b.pmore
  58:	mov	x0, sp
  5c:	mov	w1, #0x400                 	// #1024
  60:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  64:	ldr	x8, [sp, #16]
  68:	ldr	x9, [sp]
  6c:	mov	w10, #0x400                 	// #1024
  70:	sub	x2, x10, x8
  74:	mov	w1, wzr
  78:	add	x0, x9, x8
  7c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  80:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  84:	ldr	q0, [x8]
  88:	ldr	x8, [sp]
  8c:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  90:	add	x1, x1, #0x0
  94:	mov	x0, sp
  98:	mov	x2, x21
  9c:	str	q0, [sp, #16]
  a0:	strb	wzr, [x8]
  a4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  a8:	ldrb	w4, [x22, #189]
  ac:	ldr	x5, [x22, #24]
  b0:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  b4:	adrp	x6, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
  b8:	add	x1, x1, #0x0
  bc:	add	x6, x6, #0x0
  c0:	mov	x0, sp
  c4:	mov	w2, wzr
  c8:	mov	x3, x20
  cc:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
  d0:	ldr	x0, [sp]
  d4:	mov	x1, x19
  d8:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
  dc:	ldp	x0, x1, [sp]
  e0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  e4:	ldp	x20, x19, [sp, #64]
  e8:	ldp	x22, x21, [sp, #48]
  ec:	ldr	x30, [sp, #32]
  f0:	add	sp, sp, #0x50
  f4:	ret

00000000000000f8 <_ZN11__sanitizer10ReportFile14SupportsColorsEv>:
  f8:	str	x30, [sp, #-32]!
  fc:	stp	x20, x19, [sp, #16]
 100:	ldr	x19, [x0]
 104:	mov	x20, x0
 108:	mov	w8, #0x1                   	// #1
 10c:	ldaxrb	w9, [x19]
 110:	stlxrb	w10, w8, [x19]
 114:	cbnz	w10, 10c <_ZN11__sanitizer10ReportFile14SupportsColorsEv+0x14>
 118:	cbz	w9, 124 <_ZN11__sanitizer10ReportFile14SupportsColorsEv+0x2c>
 11c:	mov	x0, x19
 120:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 124:	mov	x0, x20
 128:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 12c:	ldr	w0, [x20, #8]
 130:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 134:	dmb	ish
 138:	strb	wzr, [x19]
 13c:	ldp	x20, x19, [sp, #16]
 140:	and	w0, w0, #0x1
 144:	ldr	x30, [sp], #32
 148:	ret

000000000000014c <_ZN11__sanitizer15ColorizeReportsEv>:
 14c:	str	x30, [sp, #-32]!
 150:	stp	x20, x19, [sp, #16]
 154:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 158:	ldr	x8, [x8]
 15c:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 160:	add	x1, x1, #0x0
 164:	ldr	x19, [x8, #112]
 168:	mov	x0, x19
 16c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 170:	cbz	w0, 198 <_ZN11__sanitizer15ColorizeReportsEv+0x4c>
 174:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 178:	add	x1, x1, #0x0
 17c:	mov	x0, x19
 180:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 184:	cbz	w0, 1a8 <_ZN11__sanitizer15ColorizeReportsEv+0x5c>
 188:	mov	w0, wzr
 18c:	ldp	x20, x19, [sp, #16]
 190:	ldr	x30, [sp], #32
 194:	ret
 198:	mov	w0, #0x1                   	// #1
 19c:	ldp	x20, x19, [sp, #16]
 1a0:	ldr	x30, [sp], #32
 1a4:	ret
 1a8:	adrp	x20, 0 <_ZN11__sanitizer11report_fileE>
 1ac:	ldr	x20, [x20]
 1b0:	mov	w8, #0x1                   	// #1
 1b4:	ldr	x19, [x20]
 1b8:	ldaxrb	w9, [x19]
 1bc:	stlxrb	w10, w8, [x19]
 1c0:	cbnz	w10, 1b8 <_ZN11__sanitizer15ColorizeReportsEv+0x6c>
 1c4:	cbz	w9, 1d0 <_ZN11__sanitizer15ColorizeReportsEv+0x84>
 1c8:	mov	x0, x19
 1cc:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 1d0:	mov	x0, x20
 1d4:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 1d8:	ldr	w0, [x20, #8]
 1dc:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 1e0:	dmb	ish
 1e4:	strb	wzr, [x19]
 1e8:	and	w0, w0, #0x1
 1ec:	ldp	x20, x19, [sp, #16]
 1f0:	ldr	x30, [sp], #32
 1f4:	ret

00000000000001f8 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_>:
 1f8:	stp	x30, x21, [sp, #-32]!
 1fc:	stp	x20, x19, [sp, #16]
 200:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 204:	ldr	x8, [x8]
 208:	ldrb	w8, [x8, #60]
 20c:	cbz	w8, 25c <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_+0x64>
 210:	ldr	w8, [x1, #8]
 214:	mov	x20, x0
 218:	cbz	w8, 268 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_+0x70>
 21c:	ldr	x8, [x1]
 220:	mov	x19, x2
 224:	ldr	x8, [x8]
 228:	sub	x21, x8, #0x4
 22c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 230:	mov	x1, x21
 234:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 238:	mov	x21, x0
 23c:	add	x1, x0, #0x8
 240:	mov	x0, x20
 244:	mov	x2, x19
 248:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 24c:	ldp	x20, x19, [sp, #16]
 250:	mov	x0, x21
 254:	ldp	x30, x21, [sp], #32
 258:	b	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 25c:	ldp	x20, x19, [sp, #16]
 260:	ldp	x30, x21, [sp], #32
 264:	ret
 268:	mov	x0, x20
 26c:	ldp	x20, x19, [sp, #16]
 270:	mov	x1, xzr
 274:	ldp	x30, x21, [sp], #32
 278:	b	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>

000000000000027c <_ZN11__sanitizer19ReportMmapWriteExecEi>:
 27c:	mvn	w8, w0
 280:	tst	w8, #0x6
 284:	b.ne	4ec <_ZN11__sanitizer19ReportMmapWriteExecEi+0x270>  // b.any
 288:	sub	sp, sp, #0x60
 28c:	stp	x29, x30, [sp, #48]
 290:	stp	x22, x21, [sp, #64]
 294:	stp	x20, x19, [sp, #80]
 298:	add	x29, sp, #0x30
 29c:	mov	x19, x30
 2a0:	bl	cdc <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
 2a4:	adrp	x22, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 2a8:	ldr	x22, [x22]
 2ac:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 2b0:	add	x1, x1, #0x0
 2b4:	ldr	x20, [x22, #112]
 2b8:	mov	x0, x20
 2bc:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2c0:	cbz	w0, 2e0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x64>
 2c4:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 2c8:	add	x1, x1, #0x0
 2cc:	mov	x0, x20
 2d0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2d4:	cbz	w0, 2e8 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x6c>
 2d8:	mov	w21, wzr
 2dc:	b	32c <_ZN11__sanitizer19ReportMmapWriteExecEi+0xb0>
 2e0:	mov	w21, #0x1                   	// #1
 2e4:	b	32c <_ZN11__sanitizer19ReportMmapWriteExecEi+0xb0>
 2e8:	adrp	x21, 0 <_ZN11__sanitizer11report_fileE>
 2ec:	ldr	x21, [x21]
 2f0:	mov	w8, #0x1                   	// #1
 2f4:	ldr	x20, [x21]
 2f8:	ldaxrb	w9, [x20]
 2fc:	stlxrb	w10, w8, [x20]
 300:	cbnz	w10, 2f8 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x7c>
 304:	cbz	w9, 310 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x94>
 308:	mov	x0, x20
 30c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 310:	mov	x0, x21
 314:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 318:	ldr	w0, [x21, #8]
 31c:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 320:	dmb	ish
 324:	strb	wzr, [x20]
 328:	and	w21, w0, #0x1
 32c:	add	x0, sp, #0x18
 330:	mov	w1, #0x1                   	// #1
 334:	stp	xzr, xzr, [sp, #32]
 338:	str	xzr, [sp, #24]
 33c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 340:	ldr	x8, [sp, #40]
 344:	cbnz	x8, 38c <_ZN11__sanitizer19ReportMmapWriteExecEi+0x110>
 348:	ldr	x8, [sp, #32]
 34c:	cmp	x8, #0x817
 350:	b.hi	368 <_ZN11__sanitizer19ReportMmapWriteExecEi+0xec>  // b.pmore
 354:	add	x0, sp, #0x18
 358:	mov	w1, #0x1                   	// #1
 35c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 360:	ldr	x8, [sp, #40]
 364:	b	36c <_ZN11__sanitizer19ReportMmapWriteExecEi+0xf0>
 368:	mov	x8, xzr
 36c:	ldr	x9, [sp, #24]
 370:	mov	w11, #0x1                   	// #1
 374:	mov	w10, #0x818                 	// #2072
 378:	sub	x11, x11, x8
 37c:	madd	x0, x8, x10, x9
 380:	mul	x2, x11, x10
 384:	mov	w1, wzr
 388:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 38c:	ldr	x20, [sp, #24]
 390:	mov	w8, #0x1                   	// #1
 394:	str	x8, [sp, #40]
 398:	add	x8, x20, #0x10
 39c:	stp	x8, xzr, [x20]
 3a0:	str	xzr, [x20, #2064]
 3a4:	ldrb	w8, [x22, #33]
 3a8:	stp	xzr, xzr, [sp, #8]
 3ac:	cbz	w8, 3e0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x164>
 3b0:	add	x1, sp, #0x10
 3b4:	add	x2, sp, #0x8
 3b8:	mov	w0, wzr
 3bc:	bl	0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
 3c0:	ldp	x6, x5, [sp, #8]
 3c4:	mov	w1, #0x100                 	// #256
 3c8:	mov	w7, #0x1                   	// #1
 3cc:	mov	x0, x20
 3d0:	mov	x2, x19
 3d4:	mov	x3, x29
 3d8:	mov	x4, xzr
 3dc:	b	400 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x184>
 3e0:	mov	w1, #0x100                 	// #256
 3e4:	mov	x0, x20
 3e8:	mov	x2, x19
 3ec:	mov	x3, xzr
 3f0:	mov	x4, xzr
 3f4:	mov	x5, xzr
 3f8:	mov	x6, xzr
 3fc:	mov	w7, wzr
 400:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 404:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 408:	adrp	x9, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 40c:	add	x8, x8, #0x0
 410:	add	x9, x9, #0x0
 414:	cmp	w21, #0x0
 418:	adrp	x19, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 41c:	csel	x1, x9, x8, eq  // eq = none
 420:	add	x19, x19, #0x0
 424:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 428:	add	x8, x8, #0x0
 42c:	mov	x0, x19
 430:	csel	x21, x9, x8, eq  // eq = none
 434:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 438:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 43c:	ldr	x8, [x8]
 440:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 444:	add	x0, x0, #0x0
 448:	ldr	x1, [x8]
 44c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 450:	mov	x0, x19
 454:	mov	x1, x21
 458:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 45c:	mov	x0, x20
 460:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 464:	ldrb	w8, [x22, #60]
 468:	cbz	w8, 4c0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x244>
 46c:	ldr	w8, [x20, #8]
 470:	cbz	w8, 4b0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x234>
 474:	ldr	x8, [x20]
 478:	ldr	x8, [x8]
 47c:	sub	x19, x8, #0x4
 480:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 484:	mov	x1, x19
 488:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 48c:	mov	x19, x0
 490:	add	x1, x0, #0x8
 494:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 498:	add	x0, x0, #0x0
 49c:	mov	x2, xzr
 4a0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 4a4:	mov	x0, x19
 4a8:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 4ac:	b	4c0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x244>
 4b0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 4b4:	add	x0, x0, #0x0
 4b8:	mov	x1, xzr
 4bc:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
 4c0:	ldp	x0, x1, [sp, #24]
 4c4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 4c8:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 4cc:	add	x8, x8, #0x0
 4d0:	dmb	ish
 4d4:	strb	wzr, [x8]
 4d8:	str	xzr, [x8, #8]
 4dc:	ldp	x20, x19, [sp, #80]
 4e0:	ldp	x22, x21, [sp, #64]
 4e4:	ldp	x29, x30, [sp, #48]
 4e8:	add	sp, sp, #0x60
 4ec:	ret

00000000000004f0 <_ZN11__sanitizer23StartReportDeadlySignalEv>:
 4f0:	stp	x30, x19, [sp, #-16]!
 4f4:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 4f8:	ldr	x8, [x8]
 4fc:	ldr	x19, [x8]
 500:	mov	x0, x19
 504:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 508:	mov	x1, x0
 50c:	mov	x0, x19
 510:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 514:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 518:	add	x0, x0, #0x0
 51c:	mov	w1, #0xe                   	// #14
 520:	ldp	x30, x19, [sp], #16
 524:	b	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>

0000000000000528 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_>:
 528:	sub	sp, sp, #0xe0
 52c:	stp	x29, x30, [sp, #128]
 530:	stp	x28, x27, [sp, #144]
 534:	stp	x26, x25, [sp, #160]
 538:	stp	x24, x23, [sp, #176]
 53c:	stp	x22, x21, [sp, #192]
 540:	stp	x20, x19, [sp, #208]
 544:	mov	x25, x3
 548:	mov	x21, x2
 54c:	mov	w23, w1
 550:	mov	x19, x0
 554:	bl	0 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv>
 558:	adrp	x29, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 55c:	ldr	x29, [x29]
 560:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 564:	mov	w24, w0
 568:	add	x1, x1, #0x0
 56c:	ldr	x20, [x29, #112]
 570:	mov	x0, x20
 574:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 578:	adrp	x26, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 57c:	ldr	x26, [x26]
 580:	tbz	w24, #0, 5f4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xcc>
 584:	cbz	w0, 5e0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xb8>
 588:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 58c:	add	x1, x1, #0x0
 590:	mov	x0, x20
 594:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 598:	cbnz	w0, 614 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xec>
 59c:	adrp	x24, 0 <_ZN11__sanitizer11report_fileE>
 5a0:	ldr	x24, [x24]
 5a4:	mov	w8, #0x1                   	// #1
 5a8:	ldr	x20, [x24]
 5ac:	ldaxrb	w9, [x20]
 5b0:	stlxrb	w10, w8, [x20]
 5b4:	cbnz	w10, 5ac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x84>
 5b8:	cbz	w9, 5c4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x9c>
 5bc:	mov	x0, x20
 5c0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 5c4:	mov	x0, x24
 5c8:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 5cc:	ldr	w0, [x24, #8]
 5d0:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 5d4:	dmb	ish
 5d8:	strb	wzr, [x20]
 5dc:	tbz	w0, #0, 614 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xec>
 5e0:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 5e4:	adrp	x20, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 5e8:	add	x1, x1, #0x0
 5ec:	add	x20, x20, #0x0
 5f0:	b	620 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xf8>
 5f4:	cbz	w0, 69c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x174>
 5f8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 5fc:	add	x1, x1, #0x0
 600:	mov	x0, x20
 604:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 608:	cbz	w0, 6a4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x17c>
 60c:	mov	w20, wzr
 610:	b	6e8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x1c0>
 614:	adrp	x20, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 618:	add	x20, x20, #0x0
 61c:	mov	x1, x20
 620:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 624:	add	x24, x24, #0x0
 628:	mov	x0, x24
 62c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 630:	ldr	x1, [x26]
 634:	ldp	x3, x4, [x19, #16]
 638:	ldp	x6, x5, [x19, #32]
 63c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 640:	adrp	x2, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 644:	add	x0, x0, #0x0
 648:	add	x2, x2, #0x0
 64c:	mov	w7, w23
 650:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 654:	mov	x0, x24
 658:	mov	x1, x20
 65c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 660:	add	x0, sp, #0x10
 664:	mov	w1, #0x1                   	// #1
 668:	stp	xzr, xzr, [sp, #24]
 66c:	str	xzr, [sp, #16]
 670:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 674:	ldr	x8, [sp, #32]
 678:	cbnz	x8, 920 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x3f8>
 67c:	ldr	x8, [sp, #24]
 680:	cmp	x8, #0x817
 684:	b.hi	8fc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x3d4>  // b.pmore
 688:	add	x0, sp, #0x10
 68c:	mov	w1, #0x1                   	// #1
 690:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 694:	ldr	x8, [sp, #32]
 698:	b	900 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x3d8>
 69c:	mov	w20, #0x1                   	// #1
 6a0:	b	6e8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x1c0>
 6a4:	adrp	x24, 0 <_ZN11__sanitizer11report_fileE>
 6a8:	ldr	x24, [x24]
 6ac:	mov	w8, #0x1                   	// #1
 6b0:	ldr	x20, [x24]
 6b4:	ldaxrb	w9, [x20]
 6b8:	stlxrb	w10, w8, [x20]
 6bc:	cbnz	w10, 6b4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x18c>
 6c0:	cbz	w9, 6cc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x1a4>
 6c4:	mov	x0, x20
 6c8:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 6cc:	mov	x0, x24
 6d0:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 6d4:	ldr	w0, [x24, #8]
 6d8:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 6dc:	dmb	ish
 6e0:	strb	wzr, [x20]
 6e4:	and	w20, w0, #0x1
 6e8:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 6ec:	adrp	x22, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 6f0:	add	x8, x8, #0x0
 6f4:	add	x22, x22, #0x0
 6f8:	cmp	w20, #0x0
 6fc:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 700:	csel	x1, x22, x8, eq  // eq = none
 704:	add	x0, x0, #0x0
 708:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 70c:	mov	x0, x19
 710:	bl	0 <_ZNK11__sanitizer13SignalContext8DescribeEv>
 714:	ldrb	w8, [x19, #48]
 718:	mov	x24, x0
 71c:	cbz	w8, 728 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x200>
 720:	ldrb	w8, [x19, #56]
 724:	cbz	w8, 74c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x224>
 728:	ldr	x1, [x26]
 72c:	ldp	x3, x4, [x19, #16]
 730:	ldp	x6, x5, [x19, #32]
 734:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 738:	add	x0, x0, #0x0
 73c:	mov	x2, x24
 740:	mov	w7, w23
 744:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 748:	b	76c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x244>
 74c:	ldr	x1, [x26]
 750:	ldp	x5, x4, [x19, #32]
 754:	ldr	x3, [x19, #24]
 758:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 75c:	add	x0, x0, #0x0
 760:	mov	x2, x24
 764:	mov	w6, w23
 768:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 76c:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 770:	add	x8, x8, #0x0
 774:	cmp	w20, #0x0
 778:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 77c:	csel	x1, x22, x8, eq  // eq = none
 780:	add	x0, x0, #0x0
 784:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 788:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 78c:	ldr	x20, [x20]
 790:	ldr	x22, [x19, #24]
 794:	ldr	x0, [x20]
 798:	cbz	x0, 7b0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x288>
 79c:	cmp	x22, x0
 7a0:	b.cc	7c0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x298>  // b.lo, b.ul, b.last
 7a4:	ldrb	w8, [x19, #48]
 7a8:	cbnz	w8, 7d4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2ac>
 7ac:	b	848 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x320>
 7b0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 7b4:	str	x0, [x20]
 7b8:	cmp	x22, x0
 7bc:	b.cs	7a4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x27c>  // b.hs, b.nlast
 7c0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 7c4:	add	x0, x0, #0x0
 7c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 7cc:	ldrb	w8, [x19, #48]
 7d0:	cbz	w8, 848 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x320>
 7d4:	ldr	w8, [x19, #52]
 7d8:	adrp	x9, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 7dc:	adrp	x10, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 7e0:	add	x9, x9, #0x0
 7e4:	add	x10, x10, #0x0
 7e8:	adrp	x11, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 7ec:	cmp	w8, #0x1
 7f0:	add	x11, x11, #0x0
 7f4:	csel	x9, x10, x9, eq  // eq = none
 7f8:	cmp	w8, #0x2
 7fc:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 800:	csel	x1, x11, x9, eq  // eq = none
 804:	add	x0, x0, #0x0
 808:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 80c:	ldrb	w8, [x19, #56]
 810:	cbz	w8, 83c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x314>
 814:	ldr	x0, [x20]
 818:	ldr	x22, [x19, #16]
 81c:	cbnz	x0, 828 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x300>
 820:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 824:	str	x0, [x20]
 828:	cmp	x22, x0
 82c:	b.cs	848 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x320>  // b.hs, b.nlast
 830:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 834:	add	x0, x0, #0x0
 838:	b	844 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x31c>
 83c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 840:	add	x0, x0, #0x0
 844:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 848:	ldr	x22, [x19, #24]
 84c:	add	x0, sp, #0x60
 850:	mov	w1, #0x1                   	// #1
 854:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
 858:	add	x0, sp, #0x60
 85c:	add	x1, sp, #0x10
 860:	stp	xzr, xzr, [sp, #40]
 864:	str	xzr, [sp, #88]
 868:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 86c:	tbz	w0, #0, 8b8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x390>
 870:	adrp	x23, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 874:	add	x23, x23, #0x0
 878:	b	88c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x364>
 87c:	add	x0, sp, #0x60
 880:	add	x1, sp, #0x10
 884:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 888:	tbz	w0, #0, 8b8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x390>
 88c:	ldr	x8, [sp, #16]
 890:	cmp	x8, x22
 894:	b.hi	87c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x354>  // b.pmore
 898:	ldr	x8, [sp, #24]
 89c:	cmp	x8, x22
 8a0:	b.ls	87c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x354>  // b.plast
 8a4:	ldrb	w8, [sp, #56]
 8a8:	tbnz	w8, #2, 87c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x354>
 8ac:	mov	x0, x23
 8b0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 8b4:	b	87c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x354>
 8b8:	add	x0, sp, #0x60
 8bc:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 8c0:	add	x0, sp, #0x60
 8c4:	mov	w1, #0x1                   	// #1
 8c8:	stp	xzr, xzr, [sp, #104]
 8cc:	str	xzr, [sp, #96]
 8d0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 8d4:	ldr	x8, [sp, #112]
 8d8:	cbnz	x8, 9d8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x4b0>
 8dc:	ldr	x8, [sp, #104]
 8e0:	cmp	x8, #0x817
 8e4:	b.hi	9b4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x48c>  // b.pmore
 8e8:	add	x0, sp, #0x60
 8ec:	mov	w1, #0x1                   	// #1
 8f0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 8f4:	ldr	x8, [sp, #112]
 8f8:	b	9b8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x490>
 8fc:	mov	x8, xzr
 900:	ldr	x9, [sp, #16]
 904:	mov	w11, #0x1                   	// #1
 908:	mov	w10, #0x818                 	// #2072
 90c:	sub	x11, x11, x8
 910:	madd	x0, x8, x10, x9
 914:	mul	x2, x11, x10
 918:	mov	w1, wzr
 91c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 920:	ldr	x20, [sp, #16]
 924:	mov	w8, #0x1                   	// #1
 928:	str	x8, [sp, #32]
 92c:	mov	x0, x19
 930:	add	x8, x20, #0x10
 934:	mov	x1, x25
 938:	mov	x2, x20
 93c:	stp	x8, xzr, [x20]
 940:	str	xzr, [x20, #2064]
 944:	blr	x21
 948:	mov	x0, x20
 94c:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 950:	ldrb	w8, [x29, #60]
 954:	cbz	w8, 9ac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x484>
 958:	ldr	w8, [x20, #8]
 95c:	cbz	w8, 99c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x474>
 960:	ldr	x8, [x20]
 964:	ldr	x8, [x8]
 968:	sub	x19, x8, #0x4
 96c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 970:	mov	x1, x19
 974:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 978:	mov	x19, x0
 97c:	add	x1, x0, #0x8
 980:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 984:	add	x0, x0, #0x0
 988:	mov	x2, xzr
 98c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 990:	mov	x0, x19
 994:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 998:	b	9ac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x484>
 99c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 9a0:	add	x0, x0, #0x0
 9a4:	mov	x1, xzr
 9a8:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
 9ac:	ldp	x0, x1, [sp, #16]
 9b0:	b	c58 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x730>
 9b4:	mov	x8, xzr
 9b8:	ldr	x9, [sp, #96]
 9bc:	mov	w11, #0x1                   	// #1
 9c0:	mov	w10, #0x818                 	// #2072
 9c4:	sub	x11, x11, x8
 9c8:	madd	x0, x8, x10, x9
 9cc:	mul	x2, x11, x10
 9d0:	mov	w1, wzr
 9d4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 9d8:	ldr	x23, [sp, #96]
 9dc:	mov	w8, #0x1                   	// #1
 9e0:	str	x8, [sp, #112]
 9e4:	mov	x0, x19
 9e8:	add	x8, x23, #0x10
 9ec:	mov	x1, x25
 9f0:	mov	x2, x23
 9f4:	stp	x8, xzr, [x23]
 9f8:	str	xzr, [x23, #2064]
 9fc:	blr	x21
 a00:	mov	x0, x23
 a04:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 a08:	ldrb	w8, [x29, #240]
 a0c:	cbz	w8, be0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6b8>
 a10:	ldr	x0, [x20]
 a14:	ldr	x21, [x19, #24]
 a18:	cbnz	x0, a24 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x4fc>
 a1c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 a20:	str	x0, [x20]
 a24:	cmp	x0, x21
 a28:	b.hi	be0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6b8>  // b.pmore
 a2c:	add	x0, sp, #0x10
 a30:	mov	w1, #0x400                 	// #1024
 a34:	stp	xzr, xzr, [sp, #24]
 a38:	str	xzr, [sp, #16]
 a3c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 a40:	ldr	x8, [sp, #32]
 a44:	cmp	x8, #0x3ff
 a48:	b.hi	a80 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x558>  // b.pmore
 a4c:	ldr	x9, [sp, #24]
 a50:	cmp	x9, #0x3ff
 a54:	b.hi	a68 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x540>  // b.pmore
 a58:	add	x0, sp, #0x10
 a5c:	mov	w1, #0x400                 	// #1024
 a60:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 a64:	ldr	x8, [sp, #32]
 a68:	ldr	x9, [sp, #16]
 a6c:	mov	w10, #0x400                 	// #1024
 a70:	sub	x2, x10, x8
 a74:	mov	w1, wzr
 a78:	add	x0, x9, x8
 a7c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 a80:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 a84:	ldr	q0, [x8]
 a88:	ldr	x8, [sp, #16]
 a8c:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 a90:	add	x1, x1, #0x0
 a94:	add	x0, sp, #0x10
 a98:	str	q0, [sp, #32]
 a9c:	strb	wzr, [x8]
 aa0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 aa4:	mov	w1, #0x10                  	// #16
 aa8:	mov	x0, x21
 aac:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 ab0:	tbz	w0, #0, ba0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x678>
 ab4:	stp	x19, x24, [sp]
 ab8:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 abc:	adrp	x19, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ac0:	adrp	x26, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ac4:	mov	x20, xzr
 ac8:	add	x24, x24, #0x0
 acc:	add	x19, x19, #0x0
 ad0:	add	x26, x26, #0x0
 ad4:	mov	w22, #0x1                   	// #1
 ad8:	b	b14 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5ec>
 adc:	adrp	x3, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ae0:	adrp	x6, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ae4:	add	x3, x3, #0x0
 ae8:	add	x6, x6, #0x0
 aec:	lsr	w4, w27, #4
 af0:	and	w5, w27, #0xf
 af4:	add	x0, sp, #0x10
 af8:	mov	x1, x19
 afc:	mov	x2, x26
 b00:	mov	x29, x28
 b04:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 b08:	add	x20, x20, #0x1
 b0c:	cmp	x20, #0x10
 b10:	b.eq	bac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x684>  // b.none
 b14:	mov	x28, x29
 b18:	ldr	x29, [x29, #112]
 b1c:	ldrb	w27, [x21, x20]
 b20:	mov	x1, x24
 b24:	mov	x0, x29
 b28:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 b2c:	cbz	w0, adc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5b4>
 b30:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 b34:	mov	x0, x29
 b38:	add	x1, x1, #0x0
 b3c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 b40:	cbnz	w0, b94 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x66c>
 b44:	adrp	x8, 0 <_ZN11__sanitizer11report_fileE>
 b48:	ldr	x8, [x8]
 b4c:	ldr	x29, [x8]
 b50:	ldaxrb	w8, [x29]
 b54:	stlxrb	w9, w22, [x29]
 b58:	cbnz	w9, b50 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x628>
 b5c:	mov	x25, x24
 b60:	cbz	w8, b6c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x644>
 b64:	mov	x0, x29
 b68:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 b6c:	adrp	x24, 0 <_ZN11__sanitizer11report_fileE>
 b70:	ldr	x24, [x24]
 b74:	mov	x0, x24
 b78:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
 b7c:	ldr	w0, [x24, #8]
 b80:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
 b84:	dmb	ish
 b88:	strb	wzr, [x29]
 b8c:	mov	x24, x25
 b90:	tbnz	w0, #0, adc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5b4>
 b94:	mov	x3, x26
 b98:	mov	x6, x26
 b9c:	b	aec <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5c4>
 ba0:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ba4:	add	x1, x1, #0x0
 ba8:	b	bc0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x698>
 bac:	adrp	x26, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 bb0:	ldr	x26, [x26]
 bb4:	ldp	x19, x24, [sp]
 bb8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 bbc:	add	x1, x1, #0x0
 bc0:	add	x0, sp, #0x10
 bc4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 bc8:	ldr	x1, [sp, #16]
 bcc:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 bd0:	add	x0, x0, #0x0
 bd4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 bd8:	ldp	x0, x1, [sp, #16]
 bdc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 be0:	ldrb	w8, [x29, #241]
 be4:	cbz	w8, bf0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6c8>
 be8:	ldr	x0, [x19, #8]
 bec:	bl	0 <_ZN11__sanitizer13SignalContext16DumpAllRegistersEPv>
 bf0:	ldr	x1, [x26]
 bf4:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 bf8:	add	x0, x0, #0x0
 bfc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 c00:	ldrb	w8, [x29, #60]
 c04:	cbz	w8, c54 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x72c>
 c08:	ldr	w8, [x23, #8]
 c0c:	cbz	w8, c48 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x720>
 c10:	ldr	x8, [x23]
 c14:	ldr	x8, [x8]
 c18:	sub	x19, x8, #0x4
 c1c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 c20:	mov	x1, x19
 c24:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 c28:	mov	x19, x0
 c2c:	add	x1, x0, #0x8
 c30:	mov	x0, x24
 c34:	mov	x2, xzr
 c38:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 c3c:	mov	x0, x19
 c40:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 c44:	b	c54 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x72c>
 c48:	mov	x0, x24
 c4c:	mov	x1, xzr
 c50:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
 c54:	ldp	x0, x1, [sp, #96]
 c58:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 c5c:	ldp	x20, x19, [sp, #208]
 c60:	ldp	x22, x21, [sp, #192]
 c64:	ldp	x24, x23, [sp, #176]
 c68:	ldp	x26, x25, [sp, #160]
 c6c:	ldp	x28, x27, [sp, #144]
 c70:	ldp	x29, x30, [sp, #128]
 c74:	add	sp, sp, #0xe0
 c78:	ret

0000000000000c7c <_ZN11__sanitizer18HandleDeadlySignalEPvS0_jPFvRKNS_13SignalContextEPKvPNS_18BufferedStackTraceEES5_>:
 c7c:	sub	sp, sp, #0x70
 c80:	stp	x30, x23, [sp, #64]
 c84:	stp	x22, x21, [sp, #80]
 c88:	stp	x20, x19, [sp, #96]
 c8c:	mov	x19, x4
 c90:	mov	x20, x3
 c94:	mov	w21, w2
 c98:	mov	x22, x1
 c9c:	mov	x23, x0
 ca0:	bl	4f0 <_ZN11__sanitizer23StartReportDeadlySignalEv>
 ca4:	bl	cdc <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
 ca8:	mov	x0, sp
 cac:	mov	x1, x23
 cb0:	mov	x2, x22
 cb4:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 cb8:	mov	x0, sp
 cbc:	mov	w1, w21
 cc0:	mov	x2, x20
 cc4:	mov	x3, x19
 cc8:	bl	528 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_>
 ccc:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 cd0:	add	x0, x0, #0x0
 cd4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 cd8:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000cdc <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>:
 cdc:	str	x30, [sp, #-32]!
 ce0:	stp	x20, x19, [sp, #16]
 ce4:	bl	0 <_ZN11__sanitizer13GetThreadSelfEv>
 ce8:	adrp	x20, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 cec:	mov	x19, x0
 cf0:	add	x20, x20, #0x0
 cf4:	ldaxr	x8, [x20]
 cf8:	cbnz	x8, d10 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x34>
 cfc:	stlxr	w9, x19, [x20]
 d00:	cbnz	w9, cf4 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x18>
 d04:	mov	w9, #0x1                   	// #1
 d08:	tbz	w9, #0, d2c <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x50>
 d0c:	b	d50 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x74>
 d10:	clrex
 d14:	mov	w9, wzr
 d18:	tbz	w9, #0, d2c <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x50>
 d1c:	b	d50 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x74>
 d20:	clrex
 d24:	mov	w9, wzr
 d28:	tbnz	wzr, #0, d50 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x74>
 d2c:	cmp	x8, x19
 d30:	b.eq	d8c <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0xb0>  // b.none
 d34:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 d38:	ldaxr	x8, [x20]
 d3c:	cbnz	x8, d20 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x44>
 d40:	stlxr	w9, x19, [x20]
 d44:	cbnz	w9, d38 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x5c>
 d48:	mov	w9, #0x1                   	// #1
 d4c:	tbz	w9, #0, d2c <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x50>
 d50:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 d54:	add	x8, x8, #0x0
 d58:	mov	w9, #0x1                   	// #1
 d5c:	ldaxrb	w10, [x8]
 d60:	stlxrb	w11, w9, [x8]
 d64:	cbnz	w11, d5c <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x80>
 d68:	cbz	w10, d80 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0xa4>
 d6c:	ldp	x20, x19, [sp, #16]
 d70:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 d74:	add	x0, x0, #0x0
 d78:	ldr	x30, [sp], #32
 d7c:	b	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 d80:	ldp	x20, x19, [sp, #16]
 d84:	ldr	x30, [sp], #32
 d88:	ret
 d8c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 d90:	ldr	x8, [x8]
 d94:	ldr	x19, [x8]
 d98:	mov	x0, x19
 d9c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 da0:	mov	x1, x0
 da4:	mov	x0, x19
 da8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 dac:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 db0:	add	x0, x0, #0x0
 db4:	mov	w1, #0x2b                  	// #43
 db8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 dbc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 dc0:	ldr	x8, [x8]
 dc4:	ldr	w0, [x8, #224]
 dc8:	bl	0 <_ZN11__sanitizer14internal__exitEi>

0000000000000dcc <_ZN11__sanitizer21ScopedErrorReportLockD1Ev>:
 dcc:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 dd0:	add	x8, x8, #0x0
 dd4:	dmb	ish
 dd8:	strb	wzr, [x8]
 ddc:	str	xzr, [x8, #8]
 de0:	ret

0000000000000de4 <_ZN11__sanitizer21ScopedErrorReportLock11CheckLockedEv>:
 de4:	str	x30, [sp, #-16]!
 de8:	adrp	x8, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 dec:	ldrb	w3, [x8]
 df0:	cmp	x3, #0x1
 df4:	b.ne	e00 <_ZN11__sanitizer21ScopedErrorReportLock11CheckLockedEv+0x1c>  // b.any
 df8:	ldr	x30, [sp], #16
 dfc:	ret
 e00:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 e04:	adrp	x2, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 e08:	add	x0, x0, #0x0
 e0c:	add	x2, x2, #0x0
 e10:	mov	w1, #0x2b                  	// #43
 e14:	mov	w4, #0x1                   	// #1
 e18:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer13SignalContextC2EPvS1_:

0000000000000000 <_ZN11__sanitizer13SignalContextC2EPvS1_>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	mov	x19, x0
   8:	stp	x1, x2, [x0]
   c:	bl	0 <_ZNK11__sanitizer13SignalContext10GetAddressEv>
  10:	str	x0, [x19, #16]
  14:	mov	x0, x19
  18:	bl	0 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>
  1c:	and	w8, w0, #0x1
  20:	mov	x0, x19
  24:	strb	w8, [x19, #48]
  28:	bl	0 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>
  2c:	str	w0, [x19, #52]
  30:	mov	x0, x19
  34:	bl	0 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>
  38:	and	w8, w0, #0x1
  3c:	strb	w8, [x19, #56]
  40:	mov	x0, x19
  44:	ldp	x30, x19, [sp], #16
  48:	b	0 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm+0xa0>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	c0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm+0xc0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	dc <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm+0xdc>  // b.any
  44:	mov	w8, #0x818                 	// #2072
  48:	mul	x8, x20, x8
  4c:	add	x8, x8, x0
  50:	sub	x8, x8, #0x1
  54:	neg	x9, x0
  58:	and	x20, x8, x9
  5c:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  60:	add	x1, x1, #0x0
  64:	mov	x0, x20
  68:	mov	w2, wzr
  6c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  70:	ldr	x8, [x19, #16]
  74:	ldr	x1, [x19]
  78:	mov	w9, #0x818                 	// #2072
  7c:	mov	x21, x0
  80:	mul	x2, x8, x9
  84:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  88:	ldp	x0, x1, [x19]
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	stp	x21, x20, [x19]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x30, x21, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  a4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  a8:	add	x0, x0, #0x0
  ac:	add	x2, x2, #0x0
  b0:	mov	w1, #0x20b                 	// #523
  b4:	mov	x3, xzr
  b8:	mov	x4, xzr
  bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  c0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  c4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  c8:	add	x0, x0, #0x0
  cc:	add	x2, x2, #0x0
  d0:	mov	w1, #0x20c                 	// #524
  d4:	mov	x4, x20
  d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  dc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_18BufferedStackTraceEE7ReallocEm>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  e8:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_symbolizer_win.cpp.o:     file format elf64-littleaarch64


sanitizer_unwind_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>:
   0:	sub	sp, sp, #0x30
   4:	str	x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	cmp	w2, #0x1
  10:	b.ls	84 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x84>  // b.plast
  14:	add	w8, w2, #0x1
  18:	mov	x20, x0
  1c:	str	wzr, [x0, #8]
  20:	str	x0, [sp]
  24:	cmp	w8, #0x100
  28:	mov	w8, #0x100                 	// #256
  2c:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
  30:	mov	x19, x1
  34:	csinc	w8, w8, w2, cs  // cs = hs, nlast
  38:	add	x0, x0, #0x0
  3c:	mov	x1, sp
  40:	str	w8, [sp, #8]
  44:	bl	0 <_Unwind_Backtrace>
  48:	mov	x0, x20
  4c:	mov	x1, x19
  50:	bl	0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>
  54:	mov	x1, x0
  58:	cbnz	x0, 68 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x68>
  5c:	ldr	w8, [x20, #8]
  60:	cmp	w8, #0x1
  64:	cset	w1, hi  // hi = pmore
  68:	mov	x0, x20
  6c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>
  70:	str	x19, [x20, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x30, [sp, #16]
  7c:	add	sp, sp, #0x30
  80:	ret
  84:	mov	w3, w2
  88:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
  8c:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
  90:	add	x0, x0, #0x0
  94:	add	x2, x2, #0x0
  98:	mov	w1, #0x7f                  	// #127
  9c:	mov	w4, #0x2                   	// #2
  a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000000a4 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>:
  a4:	stp	x30, x21, [sp, #-32]!
  a8:	stp	x20, x19, [sp, #16]
  ac:	ldr	x8, [x1]
  b0:	ldr	w4, [x1, #8]
  b4:	ldr	w3, [x8, #8]
  b8:	cmp	w3, w4
  bc:	b.cs	13c <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x98>  // b.hs, b.nlast
  c0:	mov	x19, x1
  c4:	bl	0 <_Unwind_GetIP>
  c8:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  cc:	ldr	x21, [x21]
  d0:	mov	x20, x0
  d4:	ldr	x8, [x21]
  d8:	cbz	x8, f4 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x50>
  dc:	cmp	x20, x8
  e0:	b.cs	108 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x64>  // b.hs, b.nlast
  e4:	mov	w0, #0x4                   	// #4
  e8:	ldp	x20, x19, [sp, #16]
  ec:	ldp	x30, x21, [sp], #32
  f0:	ret
  f4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  f8:	mov	x8, x0
  fc:	str	x0, [x21]
 100:	cmp	x20, x8
 104:	b.cc	e4 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x40>  // b.lo, b.ul, b.last
 108:	ldr	x8, [x19]
 10c:	ldr	w9, [x8, #8]
 110:	add	w10, w9, #0x1
 114:	add	x9, x8, x9, lsl #3
 118:	str	w10, [x8, #8]
 11c:	str	x20, [x9, #16]
 120:	ldr	w8, [x19, #8]
 124:	cmp	w10, w8
 128:	cset	w8, eq  // eq = none
 12c:	lsl	w0, w8, #2
 130:	ldp	x20, x19, [sp, #16]
 134:	ldp	x30, x21, [sp], #32
 138:	ret
 13c:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 140:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 144:	add	x0, x0, #0x0
 148:	add	x2, x2, #0x0
 14c:	mov	w1, #0x50                  	// #80
 150:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000154 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj>:
 154:	sub	sp, sp, #0x60
 158:	str	x30, [sp, #32]
 15c:	stp	x24, x23, [sp, #48]
 160:	stp	x22, x21, [sp, #64]
 164:	stp	x20, x19, [sp, #80]
 168:	cbz	x2, 328 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1d4>
 16c:	cmp	w3, #0x1
 170:	mov	w21, w3
 174:	b.ls	340 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1ec>  // b.plast
 178:	adrp	x24, 10 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x10>
 17c:	ldr	x8, [x24]
 180:	mov	x19, x0
 184:	cbz	x8, 1f0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x9c>
 188:	adrp	x8, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 18c:	ldr	x8, [x8]
 190:	mov	x22, x2
 194:	blr	x8
 198:	cbz	x0, 360 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x20c>
 19c:	mov	x23, x0
 1a0:	add	x0, sp, #0x8
 1a4:	stp	xzr, xzr, [sp, #16]
 1a8:	str	xzr, [sp, #8]
 1ac:	bl	3a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm>
 1b0:	ldr	x8, [sp, #24]
 1b4:	cmp	x8, #0x100
 1b8:	b.cs	250 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0xfc>  // b.hs, b.nlast
 1bc:	add	x0, sp, #0x8
 1c0:	bl	3a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm>
 1c4:	ldr	x20, [sp, #8]
 1c8:	ldr	x8, [sp, #24]
 1cc:	mov	w9, #0x18                  	// #24
 1d0:	mov	w10, #0x100                 	// #256
 1d4:	mov	w1, wzr
 1d8:	madd	x0, x8, x9, x20
 1dc:	sub	x8, x10, x8
 1e0:	add	x8, x8, x8, lsl #1
 1e4:	lsl	x2, x8, #3
 1e8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 1ec:	b	254 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x100>
 1f0:	add	w8, w3, #0x1
 1f4:	cmp	w8, #0x100
 1f8:	mov	w8, #0x100                 	// #256
 1fc:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 200:	mov	x20, x1
 204:	csinc	w8, w8, w3, cs  // cs = hs, nlast
 208:	add	x0, x0, #0x0
 20c:	add	x1, sp, #0x8
 210:	str	wzr, [x19, #8]
 214:	str	x19, [sp, #8]
 218:	str	w8, [sp, #16]
 21c:	bl	0 <_Unwind_Backtrace>
 220:	mov	x0, x19
 224:	mov	x1, x20
 228:	bl	0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>
 22c:	mov	x1, x0
 230:	cbnz	x0, 240 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0xec>
 234:	ldr	w8, [x19, #8]
 238:	cmp	w8, #0x1
 23c:	cset	w1, hi  // hi = pmore
 240:	mov	x0, x19
 244:	bl	0 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>
 248:	str	x20, [x19, #16]
 24c:	b	310 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1bc>
 250:	ldr	x20, [sp, #8]
 254:	ldr	x8, [x24]
 258:	mov	w9, #0x100                 	// #256
 25c:	mov	x0, xzr
 260:	mov	x1, x22
 264:	mov	x2, x23
 268:	mov	x3, x20
 26c:	mov	x4, xzr
 270:	mov	x5, x21
 274:	str	x9, [sp, #24]
 278:	blr	x8
 27c:	adrp	x8, 8 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x8>
 280:	ldr	x8, [x8]
 284:	mov	x21, x0
 288:	mov	x0, x23
 28c:	blr	x8
 290:	tbnz	x21, #63, 304 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1b0>
 294:	cmp	x21, #0x101
 298:	b.cs	380 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x22c>  // b.hs, b.nlast
 29c:	str	wzr, [x19, #8]
 2a0:	cbz	x21, 304 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1b0>
 2a4:	mov	x8, xzr
 2a8:	sub	x9, x21, #0x1
 2ac:	add	x10, x19, #0x10
 2b0:	mov	x11, x20
 2b4:	ldr	x12, [x11]
 2b8:	cmp	x9, x8
 2bc:	add	x12, x12, #0x2
 2c0:	str	x12, [x10, x8, lsl #3]
 2c4:	b.eq	2fc <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1a8>  // b.none
 2c8:	add	x8, x8, #0x1
 2cc:	cmp	x8, #0x100
 2d0:	add	x11, x11, #0x18
 2d4:	b.ne	2b4 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x160>  // b.any
 2d8:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 2dc:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 2e0:	add	x0, x0, #0x0
 2e4:	add	x2, x2, #0x0
 2e8:	mov	w1, #0x1c5                 	// #453
 2ec:	mov	w3, #0x100                 	// #256
 2f0:	mov	w4, #0x100                 	// #256
 2f4:	str	w8, [x19, #8]
 2f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2fc:	add	w8, w8, #0x1
 300:	str	w8, [x19, #8]
 304:	ldr	x1, [sp, #16]
 308:	mov	x0, x20
 30c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 310:	ldp	x20, x19, [sp, #80]
 314:	ldp	x22, x21, [sp, #64]
 318:	ldp	x24, x23, [sp, #48]
 31c:	ldr	x30, [sp, #32]
 320:	add	sp, sp, #0x60
 324:	ret
 328:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 32c:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 330:	add	x0, x0, #0x0
 334:	add	x2, x2, #0x0
 338:	mov	w1, #0x98                  	// #152
 33c:	b	374 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x220>
 340:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 344:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 348:	add	x0, x0, #0x0
 34c:	add	x2, x2, #0x0
 350:	mov	w1, #0x99                  	// #153
 354:	mov	w4, #0x2                   	// #2
 358:	mov	x3, x21
 35c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 360:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 364:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 368:	add	x0, x0, #0x0
 36c:	add	x2, x2, #0x0
 370:	mov	w1, #0xa0                  	// #160
 374:	mov	x3, xzr
 378:	mov	x4, xzr
 37c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 380:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 384:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 388:	add	x0, x0, #0x0
 38c:	add	x2, x2, #0x0
 390:	mov	w1, #0xa8                  	// #168
 394:	mov	w4, #0x100                 	// #256
 398:	mov	x3, x21
 39c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000003a0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm>:
 3a0:	stp	x30, x21, [sp, #-32]!
 3a4:	stp	x20, x19, [sp, #16]
 3a8:	ldr	x8, [x0, #8]
 3ac:	lsr	x8, x8, #11
 3b0:	cmp	x8, #0x2
 3b4:	b.hi	434 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm+0x94>  // b.pmore
 3b8:	ldr	x3, [x0, #16]
 3bc:	mov	x19, x0
 3c0:	cmp	x3, #0x101
 3c4:	b.cs	440 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm+0xa0>  // b.hs, b.nlast
 3c8:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 3cc:	ldr	x20, [x20]
 3d0:	ldr	x0, [x20]
 3d4:	cbnz	x0, 3e0 <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm+0x40>
 3d8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 3dc:	str	x0, [x20]
 3e0:	sub	x8, x0, #0x1
 3e4:	tst	x0, x8
 3e8:	b.ne	45c <_ZN11__sanitizer24InternalMmapVectorNoCtorINS_12_GLOBAL__N_117backtrace_frame_tEE7reserveEm+0xbc>  // b.any
 3ec:	mov	w8, #0x17ff                	// #6143
 3f0:	add	x8, x0, x8
 3f4:	neg	x9, x0
 3f8:	and	x20, x8, x9
 3fc:	adrp	x1, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 400:	add	x1, x1, #0x0
 404:	mov	x0, x20
 408:	mov	w2, wzr
 40c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 410:	ldr	x8, [x19, #16]
 414:	ldr	x1, [x19]
 418:	mov	x21, x0
 41c:	add	x8, x8, x8, lsl #1
 420:	lsl	x2, x8, #3
 424:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 428:	ldp	x0, x1, [x19]
 42c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 430:	stp	x21, x20, [x19]
 434:	ldp	x20, x19, [sp, #16]
 438:	ldp	x30, x21, [sp], #32
 43c:	ret
 440:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 444:	adrp	x2, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 448:	add	x0, x0, #0x0
 44c:	add	x2, x2, #0x0
 450:	mov	w1, #0x20c                 	// #524
 454:	mov	w4, #0x100                 	// #256
 458:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 45c:	adrp	x0, 0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>
 460:	add	x0, x0, #0x0
 464:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 468:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_unwind_win.cpp.o:     file format elf64-littleaarch64


ubsan_diag.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>:
   0:	sub	sp, sp, #0x40
   4:	stp	x30, xzr, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x19, x3
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	mov	x22, x0
  20:	str	xzr, [sp, #8]
  24:	tbz	w5, #0, 5c <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb+0x5c>
  28:	add	x1, sp, #0x18
  2c:	add	x2, sp, #0x8
  30:	mov	w0, wzr
  34:	bl	0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
  38:	ldr	x5, [sp, #24]
  3c:	ldr	x6, [sp, #8]
  40:	mov	w7, #0x1                   	// #1
  44:	mov	x0, x22
  48:	mov	w1, w21
  4c:	mov	x2, x20
  50:	mov	x3, x19
  54:	mov	x4, xzr
  58:	b	78 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb+0x78>
  5c:	mov	x0, x22
  60:	mov	w1, w21
  64:	mov	x2, x20
  68:	mov	x3, x19
  6c:	mov	x5, xzr
  70:	mov	x6, xzr
  74:	mov	w7, wzr
  78:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
  7c:	ldp	x20, x19, [sp, #48]
  80:	ldp	x22, x21, [sp, #32]
  84:	ldr	x30, [sp, #16]
  88:	add	sp, sp, #0x40
  8c:	ret

0000000000000090 <_ZN7__ubsan21getSymbolizedLocationEm>:
  90:	stp	x30, x19, [sp, #-16]!
  94:	mov	x19, x0
  98:	bl	0 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>
  9c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
  a0:	mov	x1, x19
  a4:	ldp	x30, x19, [sp], #16
  a8:	b	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>

00000000000000ac <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>:
  ac:	sub	sp, sp, #0x20
  b0:	str	x30, [sp, #16]
  b4:	ldr	w8, [x0, #320]
  b8:	cmp	w8, #0x8
  bc:	b.eq	f4 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE+0x48>  // b.none
  c0:	add	w9, w8, #0x1
  c4:	add	x8, x0, x8, lsl #5
  c8:	str	w9, [x0, #320]
  cc:	str	wzr, [x8, #64]
  d0:	ldr	w9, [sp, #12]
  d4:	ldur	x10, [sp, #4]
  d8:	ldr	x30, [sp, #16]
  dc:	add	x11, x1, #0x4
  e0:	str	w9, [x8, #76]
  e4:	stur	x10, [x8, #68]
  e8:	str	x11, [x8, #80]
  ec:	add	sp, sp, #0x20
  f0:	ret
  f4:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
  f8:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
  fc:	add	x0, x0, #0x0
 100:	add	x2, x2, #0x0
 104:	mov	w1, #0xc0                  	// #192
 108:	mov	x3, xzr
 10c:	mov	x4, xzr
 110:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000114 <_ZN7__ubsan4DiaglsERKNS_5ValueE>:
 114:	sub	sp, sp, #0x40
 118:	stp	x30, x19, [sp, #48]
 11c:	ldr	x8, [x1]
 120:	mov	x19, x0
 124:	ldrh	w9, [x8]
 128:	cmp	w9, #0x1
 12c:	b.eq	170 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x5c>  // b.none
 130:	cbnz	w9, 1bc <_ZN7__ubsan4DiaglsERKNS_5ValueE+0xa8>
 134:	ldrb	w8, [x8, #2]
 138:	tbnz	w8, #0, 204 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0xf0>
 13c:	mov	x0, x1
 140:	bl	0 <_ZNK7__ubsan5Value12getUIntValueEv>
 144:	ldr	w8, [x19, #320]
 148:	cmp	w8, #0x8
 14c:	b.eq	250 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x13c>  // b.none
 150:	add	w9, w8, #0x1
 154:	add	x8, x19, x8, lsl #5
 158:	mov	w10, #0x2                   	// #2
 15c:	str	w9, [x19, #320]
 160:	str	w10, [x8, #64]
 164:	ldr	w9, [sp, #32]
 168:	ldr	x10, [sp, #24]
 16c:	b	234 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x120>
 170:	mov	x0, x1
 174:	bl	0 <_ZNK7__ubsan5Value13getFloatValueEv>
 178:	ldr	w8, [x19, #320]
 17c:	cmp	w8, #0x8
 180:	b.eq	250 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x13c>  // b.none
 184:	add	w9, w8, #0x1
 188:	add	x8, x19, x8, lsl #5
 18c:	mov	w10, #0x4                   	// #4
 190:	str	w9, [x19, #320]
 194:	str	w10, [x8, #64]
 198:	ldr	w9, [sp, #20]
 19c:	ldur	x10, [sp, #12]
 1a0:	str	q0, [x8, #80]
 1a4:	str	w9, [x8, #76]
 1a8:	stur	x10, [x8, #68]
 1ac:	mov	x0, x19
 1b0:	ldp	x30, x19, [sp, #48]
 1b4:	add	sp, sp, #0x40
 1b8:	ret
 1bc:	ldr	w8, [x19, #320]
 1c0:	cmp	w8, #0x8
 1c4:	b.eq	250 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x13c>  // b.none
 1c8:	add	w9, w8, #0x1
 1cc:	add	x8, x19, x8, lsl #5
 1d0:	str	w9, [x19, #320]
 1d4:	str	wzr, [x8, #64]
 1d8:	ldr	w9, [sp, #8]
 1dc:	ldr	x10, [sp]
 1e0:	adrp	x11, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 1e4:	add	x11, x11, #0x0
 1e8:	str	w9, [x8, #76]
 1ec:	stur	x10, [x8, #68]
 1f0:	str	x11, [x8, #80]
 1f4:	mov	x0, x19
 1f8:	ldp	x30, x19, [sp, #48]
 1fc:	add	sp, sp, #0x40
 200:	ret
 204:	mov	x0, x1
 208:	bl	0 <_ZNK7__ubsan5Value12getSIntValueEv>
 20c:	ldr	w8, [x19, #320]
 210:	cmp	w8, #0x8
 214:	b.eq	250 <_ZN7__ubsan4DiaglsERKNS_5ValueE+0x13c>  // b.none
 218:	add	w9, w8, #0x1
 21c:	add	x8, x19, x8, lsl #5
 220:	mov	w10, #0x3                   	// #3
 224:	str	w9, [x19, #320]
 228:	str	w10, [x8, #64]
 22c:	ldr	w9, [sp, #44]
 230:	ldur	x10, [sp, #36]
 234:	str	w9, [x8, #76]
 238:	stur	x10, [x8, #68]
 23c:	stp	x0, x1, [x8, #80]
 240:	mov	x0, x19
 244:	ldp	x30, x19, [sp, #48]
 248:	add	sp, sp, #0x40
 24c:	ret
 250:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 254:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 258:	add	x0, x0, #0x0
 25c:	add	x2, x2, #0x0
 260:	mov	w1, #0xc0                  	// #192
 264:	mov	x3, xzr
 268:	mov	x4, xzr
 26c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000270 <_ZN7__ubsan4DiagD1Ev>:
 270:	sub	sp, sp, #0xe0
 274:	stp	x29, x30, [sp, #128]
 278:	stp	x28, x27, [sp, #144]
 27c:	stp	x26, x25, [sp, #160]
 280:	stp	x24, x23, [sp, #176]
 284:	stp	x22, x21, [sp, #192]
 288:	stp	x20, x19, [sp, #208]
 28c:	mov	x21, x0
 290:	bl	0 <_ZN11__sanitizer21ScopedErrorReportLock11CheckLockedEv>
 294:	bl	0 <_ZN11__sanitizer15ColorizeReportsEv>
 298:	mov	w19, w0
 29c:	add	x0, sp, #0x60
 2a0:	mov	w1, #0x400                 	// #1024
 2a4:	stp	xzr, xzr, [sp, #104]
 2a8:	str	xzr, [sp, #96]
 2ac:	bl	0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 2b0:	ldr	x8, [sp, #112]
 2b4:	cmp	x8, #0x3ff
 2b8:	b.hi	2f0 <_ZN7__ubsan4DiagD1Ev+0x80>  // b.pmore
 2bc:	ldr	x9, [sp, #104]
 2c0:	cmp	x9, #0x3ff
 2c4:	b.hi	2d8 <_ZN7__ubsan4DiagD1Ev+0x68>  // b.pmore
 2c8:	add	x0, sp, #0x60
 2cc:	mov	w1, #0x400                 	// #1024
 2d0:	bl	0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 2d4:	ldr	x8, [sp, #112]
 2d8:	ldr	x9, [sp, #96]
 2dc:	mov	w10, #0x400                 	// #1024
 2e0:	sub	x2, x10, x8
 2e4:	mov	w1, wzr
 2e8:	add	x0, x9, x8
 2ec:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 2f0:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 2f4:	ldr	q0, [x8]
 2f8:	ldr	x8, [sp, #96]
 2fc:	str	q0, [sp, #112]
 300:	strb	wzr, [x8]
 304:	ldr	w8, [x21, #40]
 308:	str	q0, [sp, #16]
 30c:	cbnz	w8, 364 <_ZN7__ubsan4DiagD1Ev+0xf4>
 310:	ldr	x1, [x21, #48]
 314:	add	x2, x21, #0x40
 318:	add	x0, sp, #0x60
 31c:	bl	938 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE>
 320:	ldrsw	x8, [x21, #44]
 324:	cmp	w8, #0x20
 328:	b.cs	8f8 <_ZN7__ubsan4DiagD1Ev+0x688>  // b.hs, b.nlast
 32c:	adrp	x9, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 330:	add	x9, x9, #0x0
 334:	ldr	x1, [x9, x8, lsl #3]
 338:	add	x0, sp, #0x30
 33c:	add	x3, sp, #0x60
 340:	mov	x2, x21
 344:	bl	0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
 348:	ldr	x8, [sp, #112]
 34c:	cbz	x8, 918 <_ZN7__ubsan4DiagD1Ev+0x6a8>
 350:	ldr	x8, [sp, #96]
 354:	strb	wzr, [x8]
 358:	ldp	x0, x1, [sp, #64]
 35c:	str	xzr, [sp, #120]
 360:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 364:	adrp	x26, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 368:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 36c:	add	x26, x26, #0x0
 370:	add	x8, x8, #0x0
 374:	tst	w19, #0x1
 378:	csel	x20, x8, x26, ne  // ne = any
 37c:	add	x0, sp, #0x60
 380:	mov	x1, x20
 384:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 388:	ldr	w8, [x21]
 38c:	cmp	w8, #0x3
 390:	b.hi	454 <_ZN7__ubsan4DiagD1Ev+0x1e4>  // b.pmore
 394:	adrp	x9, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 398:	add	x9, x9, #0x0
 39c:	adr	x10, 3ac <_ZN7__ubsan4DiagD1Ev+0x13c>
 3a0:	ldrb	w11, [x9, x8]
 3a4:	add	x10, x10, x11, lsl #2
 3a8:	br	x10
 3ac:	ldr	x1, [x21, #8]
 3b0:	cbz	x1, 3d8 <_ZN7__ubsan4DiagD1Ev+0x168>
 3b4:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 3b8:	ldr	x2, [x21, #16]
 3bc:	ldr	x8, [x8]
 3c0:	add	x0, sp, #0x60
 3c4:	lsr	x3, x2, #32
 3c8:	ldrb	w4, [x8, #189]
 3cc:	ldr	x5, [x8, #24]
 3d0:	bl	0 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>
 3d4:	b	454 <_ZN7__ubsan4DiagD1Ev+0x1e4>
 3d8:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 3dc:	add	x1, x1, #0x0
 3e0:	add	x0, sp, #0x60
 3e4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 3e8:	b	454 <_ZN7__ubsan4DiagD1Ev+0x1e4>
 3ec:	ldr	x2, [x21, #24]
 3f0:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 3f4:	add	x1, x1, #0x0
 3f8:	add	x0, sp, #0x60
 3fc:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 400:	b	454 <_ZN7__ubsan4DiagD1Ev+0x1e4>
 404:	ldr	x8, [x21, #32]
 408:	ldr	x1, [x8, #56]
 40c:	cbz	x1, 430 <_ZN7__ubsan4DiagD1Ev+0x1c0>
 410:	ldp	w2, w3, [x8, #64]
 414:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 418:	ldr	x8, [x8]
 41c:	add	x0, sp, #0x60
 420:	ldrb	w4, [x8, #189]
 424:	ldr	x5, [x8, #24]
 428:	bl	0 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>
 42c:	b	454 <_ZN7__ubsan4DiagD1Ev+0x1e4>
 430:	ldr	x1, [x8, #16]
 434:	cbz	x1, 8d0 <_ZN7__ubsan4DiagD1Ev+0x660>
 438:	ldr	x2, [x8, #24]
 43c:	ldr	w3, [x8, #32]
 440:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 444:	ldr	x8, [x8]
 448:	add	x0, sp, #0x60
 44c:	ldr	x4, [x8, #24]
 450:	bl	0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_>
 454:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 458:	add	x1, x1, #0x0
 45c:	add	x0, sp, #0x60
 460:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 464:	ldr	w9, [x21, #40]
 468:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 46c:	add	x8, x8, #0x0
 470:	cbz	w9, 4a8 <_ZN7__ubsan4DiagD1Ev+0x238>
 474:	cmp	w9, #0x1
 478:	b.ne	4d8 <_ZN7__ubsan4DiagD1Ev+0x268>  // b.any
 47c:	adrp	x9, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 480:	tst	w19, #0x1
 484:	add	x9, x9, #0x0
 488:	csel	x23, x8, x26, ne  // ne = any
 48c:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 490:	csel	x2, x9, x26, ne  // ne = any
 494:	add	x1, x1, #0x0
 498:	add	x0, sp, #0x60
 49c:	mov	x3, x23
 4a0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4a4:	b	4e0 <_ZN7__ubsan4DiagD1Ev+0x270>
 4a8:	adrp	x9, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 4ac:	tst	w19, #0x1
 4b0:	add	x9, x9, #0x0
 4b4:	csel	x23, x8, x26, ne  // ne = any
 4b8:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 4bc:	csel	x2, x9, x26, ne  // ne = any
 4c0:	add	x1, x1, #0x0
 4c4:	add	x0, sp, #0x60
 4c8:	mov	x3, x23
 4cc:	mov	x4, x20
 4d0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4d4:	b	4e0 <_ZN7__ubsan4DiagD1Ev+0x270>
 4d8:	tst	w19, #0x1
 4dc:	csel	x23, x8, x26, ne  // ne = any
 4e0:	ldr	x1, [x21, #48]
 4e4:	add	x22, x21, #0x40
 4e8:	add	x0, sp, #0x60
 4ec:	mov	x2, x22
 4f0:	bl	938 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE>
 4f4:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 4f8:	add	x1, x1, #0x0
 4fc:	add	x0, sp, #0x60
 500:	mov	x2, x23
 504:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 508:	ldr	x1, [sp, #96]
 50c:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 510:	add	x0, x0, #0x0
 514:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 518:	ldr	w8, [x21]
 51c:	cmp	w8, #0x2
 520:	b.ne	8a8 <_ZN7__ubsan4DiagD1Ev+0x638>  // b.any
 524:	ldr	x20, [x21, #24]
 528:	ldr	w25, [x21, #416]
 52c:	subs	x8, x20, #0x4
 530:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
 534:	adds	x9, x20, #0x4
 538:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
 53c:	cbz	w25, 588 <_ZN7__ubsan4DiagD1Ev+0x318>
 540:	add	x11, x21, #0x188
 544:	mov	x12, x25
 548:	mov	x10, x8
 54c:	ldur	w13, [x11, #-64]
 550:	cmp	w13, #0x2
 554:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 558:	ldur	w13, [x11, #-24]
 55c:	cmp	w13, #0x2
 560:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 564:	ldur	x13, [x11, #-40]
 568:	ldr	x14, [x11], #88
 56c:	cmp	x13, x10
 570:	csel	x10, x13, x10, cc  // cc = lo, ul, last
 574:	cmp	x14, x9
 578:	csel	x9, x14, x9, hi  // hi = pmore
 57c:	subs	x12, x12, #0x1
 580:	b.ne	54c <_ZN7__ubsan4DiagD1Ev+0x2dc>  // b.any
 584:	b	58c <_ZN7__ubsan4DiagD1Ev+0x31c>
 588:	mov	x10, x8
 58c:	sub	x11, x9, x10
 590:	sub	x9, x9, #0x20
 594:	cmp	x9, x8
 598:	csel	x8, x9, x8, cc  // cc = lo, ul, last
 59c:	cmp	x11, #0x20
 5a0:	csel	x24, x8, x10, hi  // hi = pmore
 5a4:	adds	x8, x24, #0x20
 5a8:	csinv	x29, x8, xzr, cc  // cc = lo, ul, last
 5ac:	sub	x1, x29, x24
 5b0:	mov	x0, x24
 5b4:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 5b8:	tbz	w0, #0, 6c8 <_ZN7__ubsan4DiagD1Ev+0x458>
 5bc:	add	x0, sp, #0x30
 5c0:	mov	w1, #0x400                 	// #1024
 5c4:	stp	x25, xzr, [sp, #40]
 5c8:	str	x23, [sp, #8]
 5cc:	add	x21, x21, #0x148
 5d0:	stp	xzr, xzr, [sp, #56]
 5d4:	bl	0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 5d8:	ldr	x8, [sp, #64]
 5dc:	cmp	x8, #0x3ff
 5e0:	b.hi	618 <_ZN7__ubsan4DiagD1Ev+0x3a8>  // b.pmore
 5e4:	ldr	x9, [sp, #56]
 5e8:	cmp	x9, #0x3ff
 5ec:	b.hi	600 <_ZN7__ubsan4DiagD1Ev+0x390>  // b.pmore
 5f0:	add	x0, sp, #0x30
 5f4:	mov	w1, #0x400                 	// #1024
 5f8:	bl	0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 5fc:	ldr	x8, [sp, #64]
 600:	ldr	x9, [sp, #48]
 604:	mov	w10, #0x400                 	// #1024
 608:	sub	x2, x10, x8
 60c:	mov	w1, wzr
 610:	add	x0, x9, x8
 614:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 618:	ldr	x8, [sp, #48]
 61c:	ldr	q0, [sp, #16]
 620:	cmp	x29, x24
 624:	str	x21, [sp, #32]
 628:	str	x22, [sp]
 62c:	str	q0, [sp, #64]
 630:	strb	wzr, [x8]
 634:	b.eq	674 <_ZN7__ubsan4DiagD1Ev+0x404>  // b.none
 638:	adrp	x21, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 63c:	adrp	x22, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 640:	adrp	x25, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 644:	add	x21, x21, #0x0
 648:	add	x22, x22, #0x0
 64c:	add	x25, x25, #0x0
 650:	mov	x23, x24
 654:	tst	x23, #0x7
 658:	ldrb	w3, [x23], #1
 65c:	csel	x2, x22, x21, eq  // eq = none
 660:	add	x0, sp, #0x30
 664:	mov	x1, x25
 668:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 66c:	cmp	x29, x23
 670:	b.ne	654 <_ZN7__ubsan4DiagD1Ev+0x3e4>  // b.any
 674:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 678:	add	x1, x1, #0x0
 67c:	add	x0, sp, #0x30
 680:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 684:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 688:	add	x8, x8, #0x0
 68c:	tst	w19, #0x1
 690:	csel	x1, x8, x26, ne  // ne = any
 694:	add	x0, sp, #0x30
 698:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 69c:	ldp	x1, x2, [sp, #32]
 6a0:	mov	x0, x24
 6a4:	bl	f34 <_ZL10upperBoundmPN7__ubsan5RangeEj>
 6a8:	cmp	x29, x24
 6ac:	b.ne	6d8 <_ZN7__ubsan4DiagD1Ev+0x468>  // b.any
 6b0:	ldr	x2, [sp, #8]
 6b4:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 6b8:	add	x1, x1, #0x0
 6bc:	add	x0, sp, #0x30
 6c0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 6c4:	b	890 <_ZN7__ubsan4DiagD1Ev+0x620>
 6c8:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 6cc:	add	x0, x0, #0x0
 6d0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 6d4:	b	8a8 <_ZN7__ubsan4DiagD1Ev+0x638>
 6d8:	adrp	x19, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 6dc:	mov	x26, x0
 6e0:	mov	w21, #0x20                  	// #32
 6e4:	mov	w22, #0x7e                  	// #126
 6e8:	add	x19, x19, #0x0
 6ec:	mov	w23, #0x5e                  	// #94
 6f0:	mov	x25, x24
 6f4:	b	738 <_ZN7__ubsan4DiagD1Ev+0x4c8>
 6f8:	add	x0, sp, #0x30
 6fc:	mov	x1, x19
 700:	mov	w2, w28
 704:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 708:	cmp	x20, x25
 70c:	csel	w2, w23, w27, eq  // eq = none
 710:	add	x0, sp, #0x30
 714:	mov	x1, x19
 718:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 71c:	add	x0, sp, #0x30
 720:	mov	x1, x19
 724:	mov	w2, w27
 728:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 72c:	add	x25, x25, #0x1
 730:	cmp	x29, x25
 734:	b.eq	7c0 <_ZN7__ubsan4DiagD1Ev+0x550>  // b.none
 738:	cbz	x26, 764 <_ZN7__ubsan4DiagD1Ev+0x4f4>
 73c:	ldr	w8, [x26, #40]
 740:	cmp	w8, #0x2
 744:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 748:	ldr	x8, [x26, #64]
 74c:	cmp	x25, x8
 750:	b.ne	774 <_ZN7__ubsan4DiagD1Ev+0x504>  // b.any
 754:	ldp	x1, x2, [sp, #32]
 758:	mov	x0, x25
 75c:	bl	f34 <_ZL10upperBoundmPN7__ubsan5RangeEj>
 760:	mov	x26, x0
 764:	cmp	x25, x20
 768:	b.ls	770 <_ZN7__ubsan4DiagD1Ev+0x500>  // b.plast
 76c:	cbz	x26, 7c0 <_ZN7__ubsan4DiagD1Ev+0x550>
 770:	cbz	x26, 79c <_ZN7__ubsan4DiagD1Ev+0x52c>
 774:	ldr	w8, [x26]
 778:	cmp	w8, #0x2
 77c:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 780:	ldr	x8, [x26, #24]
 784:	cmp	x8, x25
 788:	csel	w28, w22, w21, cc  // cc = lo, ul, last
 78c:	csel	w27, w21, w22, hi  // hi = pmore
 790:	tst	x25, #0x7
 794:	b.ne	6f8 <_ZN7__ubsan4DiagD1Ev+0x488>  // b.any
 798:	b	7ac <_ZN7__ubsan4DiagD1Ev+0x53c>
 79c:	mov	w28, #0x20                  	// #32
 7a0:	mov	w27, #0x20                  	// #32
 7a4:	tst	x25, #0x7
 7a8:	b.ne	6f8 <_ZN7__ubsan4DiagD1Ev+0x488>  // b.any
 7ac:	add	x0, sp, #0x30
 7b0:	mov	x1, x19
 7b4:	mov	w2, w28
 7b8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 7bc:	b	6f8 <_ZN7__ubsan4DiagD1Ev+0x488>
 7c0:	ldr	x2, [sp, #8]
 7c4:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 7c8:	add	x1, x1, #0x0
 7cc:	add	x0, sp, #0x30
 7d0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 7d4:	ldp	x25, x23, [sp, #32]
 7d8:	mov	w21, wzr
 7dc:	mov	x19, xzr
 7e0:	mov	w20, #0x1                   	// #1
 7e4:	cbz	x19, 800 <_ZN7__ubsan4DiagD1Ev+0x590>
 7e8:	ldr	w8, [x19, #40]
 7ec:	cmp	w8, #0x2
 7f0:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 7f4:	ldr	x8, [x19, #64]
 7f8:	cmp	x24, x8
 7fc:	b.ne	818 <_ZN7__ubsan4DiagD1Ev+0x5a8>  // b.any
 800:	mov	x0, x24
 804:	mov	x1, x25
 808:	mov	w2, w23
 80c:	bl	f34 <_ZL10upperBoundmPN7__ubsan5RangeEj>
 810:	mov	x19, x0
 814:	cbz	x0, 890 <_ZN7__ubsan4DiagD1Ev+0x620>
 818:	ldr	w9, [x19]
 81c:	tst	x24, #0x7
 820:	cinc	w8, w20, eq  // eq = none
 824:	cmp	w9, #0x2
 828:	b.ne	8d8 <_ZN7__ubsan4DiagD1Ev+0x668>  // b.any
 82c:	ldr	x9, [x19, #24]
 830:	add	w22, w8, w21
 834:	cmp	x24, x9
 838:	b.eq	850 <_ZN7__ubsan4DiagD1Ev+0x5e0>  // b.none
 83c:	add	x24, x24, #0x1
 840:	cmp	x29, x24
 844:	add	w21, w22, #0x2
 848:	b.ne	7e4 <_ZN7__ubsan4DiagD1Ev+0x574>  // b.any
 84c:	b	890 <_ZN7__ubsan4DiagD1Ev+0x620>
 850:	cbz	w22, 870 <_ZN7__ubsan4DiagD1Ev+0x600>
 854:	adrp	x21, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 858:	add	x21, x21, #0x0
 85c:	add	x0, sp, #0x30
 860:	mov	x1, x21
 864:	sub	w22, w22, #0x1
 868:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 86c:	cbnz	w22, 85c <_ZN7__ubsan4DiagD1Ev+0x5ec>
 870:	ldr	x1, [x19, #80]
 874:	ldr	x2, [sp]
 878:	add	x0, sp, #0x30
 87c:	bl	938 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE>
 880:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 884:	add	x1, x1, #0x0
 888:	add	x0, sp, #0x30
 88c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 890:	ldr	x1, [sp, #48]
 894:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 898:	add	x0, x0, #0x0
 89c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 8a0:	ldp	x0, x1, [sp, #48]
 8a4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8a8:	ldp	x0, x1, [sp, #96]
 8ac:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8b0:	ldp	x20, x19, [sp, #208]
 8b4:	ldp	x22, x21, [sp, #192]
 8b8:	ldp	x24, x23, [sp, #176]
 8bc:	ldp	x26, x25, [sp, #160]
 8c0:	ldp	x28, x27, [sp, #144]
 8c4:	ldp	x29, x30, [sp, #128]
 8c8:	add	sp, sp, #0xe0
 8cc:	ret
 8d0:	ldr	x2, [x8, #8]
 8d4:	b	3f0 <_ZN7__ubsan4DiagD1Ev+0x180>
 8d8:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 8dc:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 8e0:	add	x0, x0, #0x0
 8e4:	add	x2, x2, #0x0
 8e8:	mov	w1, #0x56                  	// #86
 8ec:	mov	x3, xzr
 8f0:	mov	x4, xzr
 8f4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8f8:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 8fc:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 900:	add	x0, x0, #0x0
 904:	add	x2, x2, #0x0
 908:	mov	w1, #0x42                  	// #66
 90c:	mov	x3, xzr
 910:	mov	x4, xzr
 914:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 918:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 91c:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 920:	add	x0, x0, #0x0
 924:	add	x2, x2, #0x0
 928:	mov	w1, #0x1c5                 	// #453
 92c:	mov	x3, xzr
 930:	mov	x4, xzr
 934:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000938 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE>:
 938:	sub	sp, sp, #0x80
 93c:	stp	x29, x30, [sp, #32]
 940:	stp	x28, x27, [sp, #48]
 944:	stp	x26, x25, [sp, #64]
 948:	stp	x24, x23, [sp, #80]
 94c:	stp	x22, x21, [sp, #96]
 950:	stp	x20, x19, [sp, #112]
 954:	adrp	x24, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 958:	adrp	x22, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 95c:	adrp	x23, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 960:	adrp	x27, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 964:	adrp	x28, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 968:	adrp	x29, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 96c:	mov	x19, x2
 970:	mov	x20, x1
 974:	mov	x21, x0
 978:	add	x24, x24, #0x0
 97c:	add	x22, x22, #0x0
 980:	add	x23, x23, #0x0
 984:	mov	x26, #0x8000000000000000    	// #-9223372036854775808
 988:	add	x27, x27, #0x0
 98c:	add	x28, x28, #0x0
 990:	add	x29, x29, #0x0
 994:	b	9b0 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x78>
 998:	add	x8, x19, x25, lsl #5
 99c:	ldr	x2, [x8, #16]
 9a0:	mov	x0, x21
 9a4:	mov	x1, x22
 9a8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 9ac:	add	x20, x20, #0x1
 9b0:	ldrb	w2, [x20]
 9b4:	cmp	w2, #0x25
 9b8:	b.eq	9d4 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x9c>  // b.none
 9bc:	cbz	w2, ab8 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x180>
 9c0:	mov	x0, x21
 9c4:	mov	x1, x29
 9c8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 9cc:	add	x20, x20, #0x1
 9d0:	b	9b0 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x78>
 9d4:	ldrb	w8, [x20, #1]!
 9d8:	sub	x25, x8, #0x30
 9dc:	lsl	x8, x25, #5
 9e0:	ldr	w8, [x19, x8]
 9e4:	cmp	w8, #0x5
 9e8:	b.hi	9ac <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x74>  // b.pmore
 9ec:	adr	x9, 998 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x60>
 9f0:	ldrb	w10, [x24, x8]
 9f4:	add	x9, x9, x10, lsl #2
 9f8:	br	x9
 9fc:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 a00:	add	x8, x19, x25, lsl #5
 a04:	ldr	x1, [x8, #16]
 a08:	bl	0 <_ZN11__sanitizer10Symbolizer8DemangleEPKc>
 a0c:	mov	x2, x0
 a10:	mov	x0, x21
 a14:	mov	x1, x23
 a18:	b	9a8 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x70>
 a1c:	add	x8, x19, x25, lsl #5
 a20:	ldp	x5, x3, [x8, #16]
 a24:	cbnz	x3, a98 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x160>
 a28:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 a2c:	mov	x0, x21
 a30:	add	x1, x1, #0x0
 a34:	mov	x2, x5
 a38:	b	9a8 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x70>
 a3c:	add	x8, x19, x25, lsl #5
 a40:	ldp	x5, x3, [x8, #16]
 a44:	cmn	x5, x26
 a48:	adcs	x8, x3, xzr
 a4c:	cbnz	x8, a98 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x160>
 a50:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 a54:	mov	x0, x21
 a58:	add	x1, x1, #0x0
 a5c:	mov	x2, x5
 a60:	b	9a8 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x70>
 a64:	add	x8, x19, x25, lsl #5
 a68:	ldr	q0, [x8, #16]
 a6c:	mov	x0, sp
 a70:	mov	w1, #0x20                  	// #32
 a74:	mov	x2, x27
 a78:	bl	0 <snprintf>
 a7c:	mov	x2, sp
 a80:	b	9a0 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x68>
 a84:	add	x8, x19, x25, lsl #5
 a88:	ldr	x2, [x8, #16]
 a8c:	mov	x0, x21
 a90:	mov	x1, x28
 a94:	b	9a8 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x70>
 a98:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 a9c:	lsr	x2, x3, #32
 aa0:	lsr	x4, x5, #32
 aa4:	mov	x0, x21
 aa8:	add	x1, x1, #0x0
 aac:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 ab0:	add	x20, x20, #0x1
 ab4:	b	9b0 <_ZL10RenderTextPN11__sanitizer20InternalScopedStringEPKcPKN7__ubsan4Diag3ArgE+0x78>
 ab8:	ldp	x20, x19, [sp, #112]
 abc:	ldp	x22, x21, [sp, #96]
 ac0:	ldp	x24, x23, [sp, #80]
 ac4:	ldp	x26, x25, [sp, #64]
 ac8:	ldp	x28, x27, [sp, #48]
 acc:	ldp	x29, x30, [sp, #32]
 ad0:	add	sp, sp, #0x80
 ad4:	ret

0000000000000ad8 <_ZN7__ubsan12ScopedReport11InitializerC1Ev>:
 ad8:	b	0 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>

0000000000000adc <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>:
 adc:	str	x30, [sp, #-48]!
 ae0:	stp	x22, x21, [sp, #16]
 ae4:	stp	x20, x19, [sp, #32]
 ae8:	mov	w19, w3
 aec:	mov	x20, x2
 af0:	mov	x21, x1
 af4:	mov	x22, x0
 af8:	bl	0 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>
 afc:	add	x0, x22, #0x1
 b00:	bl	0 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
 b04:	ldr	x8, [x21, #16]
 b08:	ldr	q0, [x21]
 b0c:	str	x8, [x22, #24]
 b10:	stur	q0, [x22, #8]
 b14:	ldr	x8, [x20, #32]
 b18:	ldp	q1, q0, [x20]
 b1c:	str	w19, [x22, #72]
 b20:	str	x8, [x22, #64]
 b24:	stp	q1, q0, [x22, #32]
 b28:	ldp	x20, x19, [sp, #32]
 b2c:	ldp	x22, x21, [sp, #16]
 b30:	ldr	x30, [sp], #48
 b34:	ret

0000000000000b38 <_ZN7__ubsan12ScopedReportD1Ev>:
 b38:	str	x29, [sp, #-64]!
 b3c:	stp	x30, x23, [sp, #16]
 b40:	stp	x22, x21, [sp, #32]
 b44:	stp	x20, x19, [sp, #48]
 b48:	sub	sp, sp, #0x820
 b4c:	adrp	x22, 0 <_ZN7__ubsan11ubsan_flagsE>
 b50:	ldr	x22, [x22]
 b54:	adrp	x23, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 b58:	mov	x19, x0
 b5c:	ldrb	w8, [x22, #1]
 b60:	ldr	x23, [x23]
 b64:	cbz	w8, bec <_ZN7__ubsan12ScopedReportD1Ev+0xb4>
 b68:	ldp	x20, x21, [x19, #16]
 b6c:	ldrb	w9, [x23, #33]
 b70:	mov	x8, sp
 b74:	add	x8, x8, #0x10
 b78:	stp	x8, xzr, [sp]
 b7c:	str	xzr, [sp, #2064]
 b80:	str	xzr, [sp, #2088]
 b84:	str	xzr, [sp, #2072]
 b88:	cbz	w9, bc0 <_ZN7__ubsan12ScopedReportD1Ev+0x88>
 b8c:	add	x1, sp, #0x828
 b90:	add	x2, sp, #0x818
 b94:	mov	w0, wzr
 b98:	bl	0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
 b9c:	ldr	x5, [sp, #2088]
 ba0:	ldr	x6, [sp, #2072]
 ba4:	mov	x0, sp
 ba8:	mov	w1, #0x100                 	// #256
 bac:	mov	w7, #0x1                   	// #1
 bb0:	mov	x2, x20
 bb4:	mov	x3, x21
 bb8:	mov	x4, xzr
 bbc:	b	be0 <_ZN7__ubsan12ScopedReportD1Ev+0xa8>
 bc0:	mov	x0, sp
 bc4:	mov	w1, #0x100                 	// #256
 bc8:	mov	x2, x20
 bcc:	mov	x3, x21
 bd0:	mov	x4, xzr
 bd4:	mov	x5, xzr
 bd8:	mov	x6, xzr
 bdc:	mov	w7, wzr
 be0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 be4:	mov	x0, sp
 be8:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 bec:	ldrb	w8, [x23, #60]
 bf0:	cbz	w8, c9c <_ZN7__ubsan12ScopedReportD1Ev+0x164>
 bf4:	ldrb	w8, [x22, #16]
 bf8:	ldr	w9, [x19, #72]
 bfc:	cmp	w8, #0x0
 c00:	csel	w9, wzr, w9, eq  // eq = none
 c04:	cmp	w9, #0x20
 c08:	b.cs	cec <_ZN7__ubsan12ScopedReportD1Ev+0x1b4>  // b.hs, b.nlast
 c0c:	adrp	x10, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 c10:	ldr	w8, [x19, #32]
 c14:	add	x10, x10, #0x0
 c18:	ldr	x20, [x10, w9, sxtw #3]
 c1c:	cmp	w8, #0x3
 c20:	b.eq	cc4 <_ZN7__ubsan12ScopedReportD1Ev+0x18c>  // b.none
 c24:	cmp	w8, #0x1
 c28:	b.ne	c8c <_ZN7__ubsan12ScopedReportD1Ev+0x154>  // b.any
 c2c:	ldr	x21, [x19, #40]
 c30:	cbz	x21, c8c <_ZN7__ubsan12ScopedReportD1Ev+0x154>
 c34:	ldr	x23, [x19, #48]
 c38:	mov	x0, sp
 c3c:	bl	0 <_ZN11__sanitizer11AddressInfoC1Ev>
 c40:	mov	x0, x21
 c44:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 c48:	str	x0, [sp, #48]
 c4c:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 c50:	lsr	x8, x23, #32
 c54:	add	x0, x0, #0x0
 c58:	stp	w23, w8, [sp, #56]
 c5c:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 c60:	str	x0, [sp, #32]
 c64:	bl	0 <_ZN7__ubsan22GetSanititizerToolNameEv>
 c68:	mov	x2, x0
 c6c:	mov	x1, sp
 c70:	mov	x0, x20
 c74:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 c78:	mov	x0, sp
 c7c:	bl	0 <_ZN11__sanitizer11AddressInfo5ClearEv>
 c80:	ldrb	w8, [x22]
 c84:	cbz	w8, ca4 <_ZN7__ubsan12ScopedReportD1Ev+0x16c>
 c88:	b	ce8 <_ZN7__ubsan12ScopedReportD1Ev+0x1b0>
 c8c:	bl	0 <_ZN7__ubsan22GetSanititizerToolNameEv>
 c90:	mov	x1, x0
 c94:	mov	x0, x20
 c98:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
 c9c:	ldrb	w8, [x22]
 ca0:	cbnz	w8, ce8 <_ZN7__ubsan12ScopedReportD1Ev+0x1b0>
 ca4:	add	x0, x19, #0x1
 ca8:	bl	0 <_ZN11__sanitizer21ScopedErrorReportLockD1Ev>
 cac:	add	sp, sp, #0x820
 cb0:	ldp	x20, x19, [sp, #48]
 cb4:	ldp	x22, x21, [sp, #32]
 cb8:	ldp	x30, x23, [sp, #16]
 cbc:	ldr	x29, [sp], #64
 cc0:	ret
 cc4:	ldr	x8, [x19, #64]
 cc8:	add	x21, x8, #0x8
 ccc:	bl	0 <_ZN7__ubsan22GetSanititizerToolNameEv>
 cd0:	mov	x2, x0
 cd4:	mov	x0, x20
 cd8:	mov	x1, x21
 cdc:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>
 ce0:	ldrb	w8, [x22]
 ce4:	cbz	w8, ca4 <_ZN7__ubsan12ScopedReportD1Ev+0x16c>
 ce8:	bl	0 <_ZN11__sanitizer3DieEv>
 cec:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 cf0:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 cf4:	add	x0, x0, #0x0
 cf8:	add	x2, x2, #0x0
 cfc:	mov	w1, #0x42                  	// #66
 d00:	mov	x3, xzr
 d04:	mov	x4, xzr
 d08:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d0c <_ZN7__ubsan22InitializeSuppressionsEv>:
 d0c:	str	x30, [sp, #-32]!
 d10:	stp	x20, x19, [sp, #16]
 d14:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d18:	ldr	x4, [x8]
 d1c:	cbnz	x4, d60 <_ZN7__ubsan22InitializeSuppressionsEv+0x54>
 d20:	adrp	x20, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d24:	add	x20, x20, #0x0
 d28:	adrp	x1, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d2c:	add	x19, x20, #0x40
 d30:	add	x1, x1, #0x0
 d34:	mov	w2, #0x21                  	// #33
 d38:	mov	x0, x19
 d3c:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
 d40:	adrp	x8, 0 <_ZN7__ubsan11ubsan_flagsE>
 d44:	ldr	x8, [x8]
 d48:	str	x19, [x20]
 d4c:	mov	x0, x19
 d50:	ldp	x20, x19, [sp, #16]
 d54:	ldr	x1, [x8, #8]
 d58:	ldr	x30, [sp], #32
 d5c:	b	0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc>
 d60:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d64:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d68:	add	x0, x0, #0x0
 d6c:	add	x2, x2, #0x0
 d70:	mov	w1, #0x196                 	// #406
 d74:	mov	x3, xzr
 d78:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d7c <_ZN7__ubsan21IsVptrCheckSuppressedEPKc>:
 d7c:	sub	sp, sp, #0x20
 d80:	stp	x30, x19, [sp, #16]
 d84:	mov	x19, x0
 d88:	bl	0 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>
 d8c:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d90:	ldr	x0, [x8]
 d94:	cbz	x0, dbc <_ZN7__ubsan21IsVptrCheckSuppressedEPKc+0x40>
 d98:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 d9c:	add	x2, x2, #0x0
 da0:	add	x3, sp, #0x8
 da4:	mov	x1, x19
 da8:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
 dac:	ldp	x30, x19, [sp, #16]
 db0:	and	w0, w0, #0x1
 db4:	add	sp, sp, #0x20
 db8:	ret
 dbc:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 dc0:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 dc4:	add	x0, x0, #0x0
 dc8:	add	x2, x2, #0x0
 dcc:	mov	w1, #0x19e                 	// #414
 dd0:	mov	x3, xzr
 dd4:	mov	x4, xzr
 dd8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000ddc <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>:
 ddc:	sub	sp, sp, #0x40
 de0:	str	x30, [sp, #16]
 de4:	stp	x22, x21, [sp, #32]
 de8:	stp	x20, x19, [sp, #48]
 dec:	mov	x21, x2
 df0:	mov	x20, x1
 df4:	mov	w19, w0
 df8:	bl	0 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>
 dfc:	adrp	x22, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 e00:	ldr	x0, [x22]
 e04:	cbz	x0, efc <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x120>
 e08:	cmp	w19, #0x20
 e0c:	b.cs	f14 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x138>  // b.hs, b.nlast
 e10:	adrp	x8, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 e14:	add	x8, x8, #0x0
 e18:	ldr	x19, [x8, w19, sxtw #3]
 e1c:	mov	x1, x19
 e20:	bl	0 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc>
 e24:	tbz	w0, #0, e88 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xac>
 e28:	str	xzr, [sp]
 e2c:	cbz	x21, e48 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x6c>
 e30:	ldr	x0, [x22]
 e34:	mov	x3, sp
 e38:	mov	x1, x21
 e3c:	mov	x2, x19
 e40:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
 e44:	tbnz	w0, #0, e80 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xa4>
 e48:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 e4c:	add	x2, sp, #0x18
 e50:	add	x3, sp, #0x8
 e54:	mov	x1, x20
 e58:	str	xzr, [sp, #24]
 e5c:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 e60:	ldr	x1, [sp, #24]
 e64:	cbz	x1, e90 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xb4>
 e68:	tbz	w0, #0, e90 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xb4>
 e6c:	ldr	x0, [x22]
 e70:	mov	x3, sp
 e74:	mov	x2, x19
 e78:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
 e7c:	tbz	w0, #0, e90 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xb4>
 e80:	mov	w19, #0x1                   	// #1
 e84:	b	ee4 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x108>
 e88:	mov	w19, wzr
 e8c:	b	ee4 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x108>
 e90:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 e94:	mov	x1, x20
 e98:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 e9c:	mov	x20, x0
 ea0:	ldr	x0, [x22]
 ea4:	ldr	x1, [x20, #40]
 ea8:	mov	x3, sp
 eac:	mov	x2, x19
 eb0:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
 eb4:	tbz	w0, #0, ec4 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0xe8>
 eb8:	mov	w19, #0x1                   	// #1
 ebc:	cbnz	x20, edc <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x100>
 ec0:	b	ee4 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x108>
 ec4:	ldr	x0, [x22]
 ec8:	ldr	x1, [x20, #56]
 ecc:	mov	x3, sp
 ed0:	mov	x2, x19
 ed4:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
 ed8:	mov	w19, w0
 edc:	mov	x0, x20
 ee0:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 ee4:	and	w0, w19, #0x1
 ee8:	ldp	x20, x19, [sp, #48]
 eec:	ldp	x22, x21, [sp, #32]
 ef0:	ldr	x30, [sp, #16]
 ef4:	add	sp, sp, #0x40
 ef8:	ret
 efc:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 f00:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 f04:	add	x0, x0, #0x0
 f08:	add	x2, x2, #0x0
 f0c:	mov	w1, #0x1a5                 	// #421
 f10:	b	f28 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc+0x14c>
 f14:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 f18:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 f1c:	add	x0, x0, #0x0
 f20:	add	x2, x2, #0x0
 f24:	mov	w1, #0x4d                  	// #77
 f28:	mov	x3, xzr
 f2c:	mov	x4, xzr
 f30:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000f34 <_ZL10upperBoundmPN7__ubsan5RangeEj>:
 f34:	str	x30, [sp, #-16]!
 f38:	cbz	w2, fb8 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x84>
 f3c:	mov	x8, x0
 f40:	mov	w10, wzr
 f44:	mov	x0, xzr
 f48:	mov	w9, #0x58                  	// #88
 f4c:	b	f60 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x2c>
 f50:	mov	x0, x11
 f54:	add	w10, w10, #0x1
 f58:	cmp	w2, w10
 f5c:	b.eq	fbc <_ZL10upperBoundmPN7__ubsan5RangeEj+0x88>  // b.none
 f60:	umaddl	x11, w10, w9, x1
 f64:	ldr	w12, [x11, #40]
 f68:	cmp	w12, #0x2
 f6c:	b.ne	fc4 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x90>  // b.any
 f70:	mov	w10, w10
 f74:	madd	x12, x10, x9, x1
 f78:	ldr	x12, [x12, #64]
 f7c:	cmp	x12, x8
 f80:	b.ls	f54 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x20>  // b.plast
 f84:	cbz	x0, f50 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x1c>
 f88:	ldr	w12, [x0]
 f8c:	cmp	w12, #0x2
 f90:	b.ne	fc4 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x90>  // b.any
 f94:	ldr	w12, [x11]
 f98:	cmp	w12, #0x2
 f9c:	b.ne	fc4 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x90>  // b.any
 fa0:	madd	x13, x10, x9, x1
 fa4:	ldr	x12, [x0, #24]
 fa8:	ldr	x13, [x13, #24]
 fac:	cmp	x12, x13
 fb0:	b.hi	f50 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x1c>  // b.pmore
 fb4:	b	f54 <_ZL10upperBoundmPN7__ubsan5RangeEj+0x20>
 fb8:	mov	x0, xzr
 fbc:	ldr	x30, [sp], #16
 fc0:	ret
 fc4:	adrp	x0, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 fc8:	adrp	x2, 0 <_Z19ubsan_GetStackTracePN11__sanitizer18BufferedStackTraceEmmmPvb>
 fcc:	add	x0, x0, #0x0
 fd0:	add	x2, x2, #0x0
 fd4:	mov	w1, #0x56                  	// #86
 fd8:	mov	x3, xzr
 fdc:	mov	x4, xzr
 fe0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_init.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan22GetSanititizerToolNameEv>:
   0:	adrp	x0, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <_ZN7__ubsan16InitAsStandaloneEv>:
   c:	str	x30, [sp, #-32]!
  10:	stp	x20, x19, [sp, #16]
  14:	adrp	x8, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  18:	add	x8, x8, #0x0
  1c:	mov	w9, #0x1                   	// #1
  20:	ldaxrb	w10, [x8]
  24:	stlxrb	w11, w9, [x8]
  28:	cbnz	w11, 20 <_ZN7__ubsan16InitAsStandaloneEv+0x14>
  2c:	cbz	w10, 3c <_ZN7__ubsan16InitAsStandaloneEv+0x30>
  30:	adrp	x0, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  34:	add	x0, x0, #0x0
  38:	bl	0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  3c:	adrp	x19, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  40:	ldrb	w8, [x19]
  44:	tbnz	w8, #0, 90 <_ZN7__ubsan16InitAsStandaloneEv+0x84>
  48:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  54:	add	x9, x9, #0x0
  58:	str	x9, [x8]
  5c:	bl	0 <_ZN11__sanitizer15CacheBinaryNameEv>
  60:	bl	0 <_ZN7__ubsan15InitializeFlagsEv>
  64:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  68:	ldr	x20, [x20]
  6c:	ldr	x0, [x20, #40]
  70:	bl	0 <__sanitizer_set_report_path>
  74:	bl	0 <_ZN11__sanitizer14AndroidLogInitEv>
  78:	ldrb	w0, [x20, #169]
  7c:	ldr	x1, [x20, #176]
  80:	bl	0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
  84:	bl	0 <_ZN7__ubsan22InitializeSuppressionsEv>
  88:	mov	w8, #0x1                   	// #1
  8c:	strb	w8, [x19]
  90:	adrp	x8, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  94:	dmb	ish
  98:	strb	wzr, [x8]
  9c:	ldp	x20, x19, [sp, #16]
  a0:	ldr	x30, [sp], #32
  a4:	ret

00000000000000a8 <_ZN7__ubsan27InitAsStandaloneIfNecessaryEv>:
  a8:	b	c <_ZN7__ubsan16InitAsStandaloneEv>

00000000000000ac <_ZN7__ubsan12InitAsPluginEv>:
  ac:	stp	x30, x19, [sp, #-16]!
  b0:	adrp	x8, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  b4:	add	x8, x8, #0x0
  b8:	mov	w9, #0x1                   	// #1
  bc:	ldaxrb	w10, [x8]
  c0:	stlxrb	w11, w9, [x8]
  c4:	cbnz	w11, bc <_ZN7__ubsan12InitAsPluginEv+0x10>
  c8:	cbz	w10, d8 <_ZN7__ubsan12InitAsPluginEv+0x2c>
  cc:	adrp	x0, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  d8:	adrp	x19, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  dc:	ldrb	w8, [x19]
  e0:	tbnz	w8, #0, f0 <_ZN7__ubsan12InitAsPluginEv+0x44>
  e4:	bl	0 <_ZN7__ubsan22InitializeSuppressionsEv>
  e8:	mov	w8, #0x1                   	// #1
  ec:	strb	w8, [x19]
  f0:	adrp	x8, 0 <_ZN7__ubsan22GetSanititizerToolNameEv>
  f4:	dmb	ish
  f8:	strb	wzr, [x8]
  fc:	ldp	x30, x19, [sp], #16
 100:	ret

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x19, x0
   c:	mov	w20, wzr
  10:	mov	w21, #0x1                   	// #1
  14:	b	1c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x1c>
  18:	add	w20, w20, #0x1
  1c:	cmp	w20, #0x9
  20:	b.hi	30 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>  // b.pmore
  24:	ldrb	w8, [x19]
  28:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  2c:	b	3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  30:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  34:	ldrb	w8, [x19]
  38:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  3c:	ldaxrb	w8, [x19]
  40:	stlxrb	w9, w21, [x19]
  44:	cbnz	w9, 3c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3c>
  48:	cbnz	w8, 18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x30, x21, [sp], #32
  54:	ret

ubsan_flags.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>:
   0:	b	4 <__ubsan_default_options>

0000000000000004 <__ubsan_default_options>:
   4:	adrp	x0, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
   8:	add	x0, x0, #0x0
   c:	ret

0000000000000010 <_ZN7__ubsan5Flags11SetDefaultsEv>:
  10:	adrp	x8, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  14:	add	x8, x8, #0x0
  18:	strh	wzr, [x0]
  1c:	str	x8, [x0, #8]
  20:	strh	wzr, [x0, #16]
  24:	ret

0000000000000028 <_ZN7__ubsan18RegisterUbsanFlagsEPN11__sanitizer10FlagParserEPNS_5FlagsE>:
  28:	stp	x30, x23, [sp, #-48]!
  2c:	stp	x22, x21, [sp, #16]
  30:	stp	x20, x19, [sp, #32]
  34:	adrp	x20, 0 <_ZN11__sanitizer10FlagParser5AllocE>
  38:	ldr	x20, [x20]
  3c:	mov	x21, x1
  40:	mov	x19, x0
  44:	mov	w1, #0x10                  	// #16
  48:	mov	x0, x20
  4c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  50:	adrp	x22, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  54:	add	x22, x22, #0x0
  58:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  5c:	adrp	x3, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  60:	mov	x2, x0
  64:	stp	x22, x21, [x0]
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	x0, x19
  74:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  78:	mov	w1, #0x10                  	// #16
  7c:	mov	x0, x20
  80:	add	x23, x21, #0x1
  84:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  88:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  8c:	adrp	x3, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  90:	mov	x2, x0
  94:	stp	x22, x23, [x0]
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  a8:	mov	w1, #0x10                  	// #16
  ac:	mov	x0, x20
  b0:	add	x23, x21, #0x8
  b4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  b8:	adrp	x8, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  bc:	add	x8, x8, #0x0
  c0:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  c4:	adrp	x3, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  c8:	mov	x2, x0
  cc:	stp	x8, x23, [x0]
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	x0, x19
  dc:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  e0:	mov	w1, #0x10                  	// #16
  e4:	mov	x0, x20
  e8:	add	x23, x21, #0x10
  ec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  f0:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  f4:	adrp	x3, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
  f8:	mov	x2, x0
  fc:	stp	x22, x23, [x0]
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	x0, x19
 10c:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
 110:	mov	w1, #0x10                  	// #16
 114:	mov	x0, x20
 118:	add	x21, x21, #0x11
 11c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 120:	stp	x22, x21, [x0]
 124:	mov	x2, x0
 128:	mov	x0, x19
 12c:	ldp	x20, x19, [sp, #32]
 130:	ldp	x22, x21, [sp, #16]
 134:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 138:	adrp	x3, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	ldp	x30, x23, [sp], #48
 148:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>

000000000000014c <_ZN7__ubsan15InitializeFlagsEv>:
 14c:	sub	sp, sp, #0x120
 150:	stp	x29, x30, [sp, #256]
 154:	stp	x20, x19, [sp, #272]
 158:	adrp	x19, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 15c:	ldr	x19, [x19]
 160:	mov	x0, x19
 164:	bl	0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
 168:	add	x0, sp, #0x8
 16c:	mov	x1, x19
 170:	bl	0 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>
 174:	adrp	x0, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 178:	add	x0, x0, #0x0
 17c:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
 180:	str	x0, [sp, #16]
 184:	add	x1, sp, #0x8
 188:	mov	x0, x19
 18c:	bl	0 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>
 190:	adrp	x20, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 194:	adrp	x8, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 198:	add	x20, x20, #0x0
 19c:	add	x8, x8, #0x0
 1a0:	add	x0, sp, #0x8
 1a4:	strh	wzr, [x20]
 1a8:	str	x8, [x20, #8]
 1ac:	strh	wzr, [x20, #16]
 1b0:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
 1b4:	add	x0, sp, #0x8
 1b8:	mov	x1, x19
 1bc:	bl	0 <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>
 1c0:	add	x0, sp, #0x8
 1c4:	mov	x1, x20
 1c8:	bl	28 <_ZN7__ubsan18RegisterUbsanFlagsEPN11__sanitizer10FlagParserEPNS_5FlagsE>
 1cc:	bl	4 <__ubsan_default_options>
 1d0:	mov	x1, x0
 1d4:	add	x0, sp, #0x8
 1d8:	mov	x2, xzr
 1dc:	bl	0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>
 1e0:	adrp	x1, 0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 1e4:	add	x1, x1, #0x0
 1e8:	add	x0, sp, #0x8
 1ec:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
 1f0:	mov	x0, x19
 1f4:	bl	0 <_ZN11__sanitizer21InitializeCommonFlagsEPNS_11CommonFlagsE>
 1f8:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 1fc:	ldr	x8, [x8]
 200:	ldr	w8, [x8]
 204:	cbz	w8, 20c <_ZN7__ubsan15InitializeFlagsEv+0xc0>
 208:	bl	0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 20c:	ldrb	w8, [x19, #122]
 210:	cbz	w8, 21c <_ZN7__ubsan15InitializeFlagsEv+0xd0>
 214:	add	x0, sp, #0x8
 218:	bl	0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>
 21c:	ldp	x20, x19, [sp, #272]
 220:	ldp	x29, x30, [sp, #256]
 224:	add	sp, sp, #0x120
 228:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	str	x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	ldr	x20, [x0, #8]
   c:	mov	x19, x1
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	mov	x0, x19
  1c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  20:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  24:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  28:	add	x1, x1, #0x0
  2c:	mov	x0, x19
  30:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  34:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  38:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  3c:	add	x1, x1, #0x0
  40:	mov	x0, x19
  44:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  48:	cbz	w0, a8 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xa8>
  4c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  50:	add	x1, x1, #0x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  5c:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  60:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  64:	add	x1, x1, #0x0
  68:	mov	x0, x19
  6c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  70:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  74:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  78:	add	x1, x1, #0x0
  7c:	mov	x0, x19
  80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  84:	cbz	w0, bc <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0xbc>
  88:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  8c:	add	x0, x0, #0x0
  90:	mov	x1, x19
  94:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  98:	mov	w0, wzr
  9c:	ldp	x20, x19, [sp, #16]
  a0:	ldr	x30, [sp], #32
  a4:	ret
  a8:	strb	wzr, [x20]
  ac:	mov	w0, #0x1                   	// #1
  b0:	ldp	x20, x19, [sp, #16]
  b4:	ldr	x30, [sp], #32
  b8:	ret
  bc:	mov	w0, #0x1                   	// #1
  c0:	strb	w0, [x20]
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldr	x30, [sp], #32
  cc:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	adrp	x9, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   c:	adrp	x10, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  10:	mov	x19, x2
  14:	ldrb	w8, [x8]
  18:	add	x9, x9, #0x0
  1c:	add	x10, x10, #0x0
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	cmp	w8, #0x0
  28:	csel	x3, x10, x9, eq  // eq = none
  2c:	add	x2, x2, #0x0
  30:	mov	x0, x1
  34:	mov	x1, x19
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	sxtw	x8, w0
  40:	cmp	x8, x19
  44:	cset	w0, cc  // cc = lo, ul, last
  48:	ldp	x30, x19, [sp], #16
  4c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_>:
   0:	ldr	x8, [x0, #8]
   4:	mov	w0, #0x1                   	// #1
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>:
   0:	stp	x30, x19, [sp, #-16]!
   4:	ldr	x8, [x0, #8]
   8:	mov	x19, x2
   c:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>
  10:	mov	x0, x1
  14:	ldr	x3, [x8]
  18:	add	x2, x2, #0x0
  1c:	mov	x1, x19
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	sxtw	x8, w0
  28:	cmp	x8, x19
  2c:	cset	w0, cc  // cc = lo, ul, last
  30:	ldp	x30, x19, [sp], #16
  34:	ret

ubsan_handlers.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>:
       0:	ldrb	w9, [x2]
       4:	cbz	w9, 10 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE+0x10>
       8:	mov	w0, wzr
       c:	ret
      10:	mov	x9, #0xfffffffeffffffff    	// #-4294967297
      14:	cmp	x1, x9
      18:	b.ls	24 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE+0x24>  // b.plast
      1c:	mov	w0, #0x1                   	// #1
      20:	ret
      24:	ldr	x1, [x2, #8]
      28:	mov	x8, x0
      2c:	mov	w0, w3
      30:	mov	x2, x8
      34:	b	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>

0000000000000038 <__ubsan_handle_type_mismatch_v1>:
      38:	sub	sp, sp, #0x30
      3c:	stp	x29, x30, [sp, #32]
      40:	add	x29, sp, #0x20
      44:	ldur	w8, [x29, #-8]
      48:	ldur	w9, [x29, #-5]
      4c:	mov	x2, sp
      50:	strb	wzr, [sp]
      54:	stur	w8, [sp, #1]
      58:	str	w9, [sp, #4]
      5c:	stp	x30, x29, [sp, #8]
      60:	bl	70 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE>
      64:	ldp	x29, x30, [sp, #32]
      68:	add	sp, sp, #0x30
      6c:	ret

0000000000000070 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE>:
      70:	stp	x29, x30, [sp, #-96]!
      74:	stp	x28, x27, [sp, #16]
      78:	stp	x26, x25, [sp, #32]
      7c:	stp	x24, x23, [sp, #48]
      80:	stp	x22, x21, [sp, #64]
      84:	stp	x20, x19, [sp, #80]
      88:	sub	sp, sp, #0x420
      8c:	mov	x24, x2
      90:	mov	x19, x1
      94:	mov	x22, x0
      98:	add	x8, x0, #0xc
      9c:	mov	w9, #0xffffffff            	// #-1
      a0:	ldaxr	w28, [x8]
      a4:	stlxr	w10, w9, [x8]
      a8:	cbnz	w10, a0 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x30>
      ac:	ldrb	w8, [x22, #24]
      b0:	mov	w9, #0x1                   	// #1
      b4:	ldr	x23, [x22]
      b8:	ldr	w29, [x22, #8]
      bc:	lsl	x27, x9, x8
      c0:	ldrb	w12, [x24]
      c4:	sub	x8, x27, #0x1
      c8:	mov	w10, #0x6                   	// #6
      cc:	mov	w11, #0x8                   	// #8
      d0:	tst	x8, x19
      d4:	csel	w8, w11, w10, eq  // eq = none
      d8:	cmp	x19, #0x0
      dc:	csinc	w20, w8, wzr, ne  // ne = any
      e0:	mov	x8, x23
      e4:	cbz	w12, fc <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x8c>
      e8:	add	x26, sp, #0x414
      ec:	cbz	x8, 124 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0xb4>
      f0:	mov	x21, xzr
      f4:	mov	w25, #0x1                   	// #1
      f8:	b	148 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0xd8>
      fc:	cmn	w28, #0x1
     100:	b.eq	3fc <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x38c>  // b.none
     104:	ldr	x1, [x24, #8]
     108:	mov	w0, w20
     10c:	mov	x2, x23
     110:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
     114:	tbnz	w0, #0, 3fc <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x38c>
     118:	ldr	x8, [x22]
     11c:	add	x26, sp, #0x414
     120:	cbnz	x8, f0 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x80>
     124:	ldr	x8, [x24, #8]
     128:	cbz	x8, 434 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x3c4>
     12c:	sub	x0, x8, #0x4
     130:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
     134:	mov	x21, x0
     138:	mov	x23, xzr
     13c:	mov	w29, wzr
     140:	mov	w28, wzr
     144:	mov	w25, #0x3                   	// #3
     148:	ldr	q0, [x24]
     14c:	ldr	x8, [x24, #16]
     150:	mov	w24, w29
     154:	bfi	x24, x28, #32, #32
     158:	add	x0, sp, #0x3c0
     15c:	add	x1, sp, #0x3a0
     160:	add	x2, sp, #0x378
     164:	mov	w3, w20
     168:	str	w25, [sp, #888]
     16c:	str	x23, [sp, #896]
     170:	str	x24, [sp, #904]
     174:	str	x8, [sp, #944]
     178:	str	q0, [sp, #928]
     17c:	str	x21, [sp, #920]
     180:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
     184:	cmp	w20, #0x8
     188:	b.eq	2dc <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x26c>  // b.none
     18c:	cmp	w20, #0x6
     190:	b.eq	21c <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x1ac>  // b.none
     194:	cmp	w20, #0x1
     198:	b.ne	41c <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x3ac>  // b.any
     19c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     1a0:	movi	v0.2d, #0x0
     1a4:	str	d0, [sp, #792]
     1a8:	str	d0, [sp, #832]
     1ac:	ldr	d0, [x8]
     1b0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     1b4:	add	x9, x9, #0x0
     1b8:	str	w25, [sp, #448]
     1bc:	stp	x23, x24, [sp, #456]
     1c0:	str	x21, [sp, #480]
     1c4:	str	wzr, [sp, #776]
     1c8:	str	xzr, [sp, #784]
     1cc:	str	wzr, [sp, #816]
     1d0:	str	xzr, [sp, #824]
     1d4:	str	xzr, [sp, #856]
     1d8:	str	wzr, [sp, #864]
     1dc:	str	x9, [sp, #496]
     1e0:	str	d0, [sp, #488]
     1e4:	ldrb	w8, [x22, #25]
     1e8:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     1ec:	add	x9, x9, #0x0
     1f0:	ldr	x11, [x26]
     1f4:	ldr	x8, [x9, x8, lsl #3]
     1f8:	ldr	w9, [sp, #1052]
     1fc:	mov	w10, #0x1                   	// #1
     200:	str	w10, [sp, #768]
     204:	str	wzr, [sp, #512]
     208:	str	w9, [sp, #524]
     20c:	add	x9, sp, #0x1c0
     210:	stur	x11, [x9, #68]
     214:	str	x8, [sp, #528]
     218:	b	378 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x308>
     21c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     220:	movi	v0.2d, #0x0
     224:	str	d0, [sp, #792]
     228:	str	d0, [sp, #832]
     22c:	ldr	d0, [x8]
     230:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     234:	add	x9, x9, #0x0
     238:	ldr	w8, [sp, #1052]
     23c:	str	w25, [sp, #448]
     240:	stp	x23, x24, [sp, #456]
     244:	str	x21, [sp, #480]
     248:	str	wzr, [sp, #776]
     24c:	str	xzr, [sp, #784]
     250:	str	wzr, [sp, #816]
     254:	str	xzr, [sp, #824]
     258:	str	xzr, [sp, #856]
     25c:	str	wzr, [sp, #864]
     260:	str	x9, [sp, #496]
     264:	str	d0, [sp, #488]
     268:	ldrb	w9, [x22, #25]
     26c:	add	x13, sp, #0x414
     270:	str	w8, [sp, #524]
     274:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     278:	ldr	x10, [x13]
     27c:	add	x8, x8, #0x0
     280:	ldr	w11, [sp, #1052]
     284:	ldr	x8, [x8, x9, lsl #3]
     288:	ldr	x9, [x13]
     28c:	add	x12, sp, #0x1c0
     290:	str	wzr, [sp, #512]
     294:	stur	x10, [x12, #68]
     298:	mov	w10, #0x5                   	// #5
     29c:	str	w10, [sp, #544]
     2a0:	str	w11, [sp, #556]
     2a4:	str	x8, [sp, #528]
     2a8:	ldr	x11, [x13]
     2ac:	stur	x9, [x12, #100]
     2b0:	ldr	w9, [sp, #1052]
     2b4:	mov	w10, #0x3                   	// #3
     2b8:	mov	w8, #0x2                   	// #2
     2bc:	str	x19, [sp, #560]
     2c0:	str	w10, [sp, #768]
     2c4:	str	w8, [sp, #576]
     2c8:	str	w9, [sp, #588]
     2cc:	stur	x11, [x12, #132]
     2d0:	str	xzr, [sp, #600]
     2d4:	str	x27, [sp, #592]
     2d8:	b	378 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x308>
     2dc:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     2e0:	movi	v0.2d, #0x0
     2e4:	str	d0, [sp, #792]
     2e8:	str	d0, [sp, #832]
     2ec:	ldr	d0, [x8]
     2f0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     2f4:	add	x13, sp, #0x414
     2f8:	ldr	w8, [sp, #1052]
     2fc:	add	x9, x9, #0x0
     300:	ldr	x10, [x13]
     304:	str	w25, [sp, #448]
     308:	stp	x23, x24, [sp, #456]
     30c:	str	x21, [sp, #480]
     310:	str	wzr, [sp, #776]
     314:	str	xzr, [sp, #784]
     318:	str	wzr, [sp, #816]
     31c:	str	xzr, [sp, #824]
     320:	str	xzr, [sp, #856]
     324:	str	wzr, [sp, #864]
     328:	str	x9, [sp, #496]
     32c:	str	d0, [sp, #488]
     330:	ldrb	w9, [x22, #25]
     334:	str	w8, [sp, #524]
     338:	add	x12, sp, #0x1c0
     33c:	mov	w8, #0x2                   	// #2
     340:	str	wzr, [sp, #512]
     344:	stur	x10, [x12, #68]
     348:	str	w8, [sp, #768]
     34c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     350:	add	x8, x8, #0x0
     354:	ldr	w11, [sp, #1052]
     358:	ldr	x8, [x8, x9, lsl #3]
     35c:	ldr	x10, [x13]
     360:	mov	w9, #0x5                   	// #5
     364:	str	w9, [sp, #544]
     368:	str	w11, [sp, #556]
     36c:	str	x8, [sp, #528]
     370:	stur	x10, [x12, #100]
     374:	str	x19, [sp, #560]
     378:	ldr	x1, [x22, #16]
     37c:	add	x0, sp, #0x1c0
     380:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
     384:	add	x0, sp, #0x1c0
     388:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     38c:	cbz	x19, 3e8 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x378>
     390:	mov	w8, #0x2                   	// #2
     394:	str	w8, [sp, #16]
     398:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     39c:	movi	v0.2d, #0x0
     3a0:	mov	w9, #0x1                   	// #1
     3a4:	add	x8, x8, #0x0
     3a8:	add	x0, sp, #0x10
     3ac:	str	xzr, [sp, #24]
     3b0:	str	x19, [sp, #40]
     3b4:	str	wzr, [sp, #336]
     3b8:	str	wzr, [sp, #344]
     3bc:	str	xzr, [sp, #352]
     3c0:	str	wzr, [sp, #384]
     3c4:	str	xzr, [sp, #392]
     3c8:	str	xzr, [sp, #424]
     3cc:	str	d0, [sp, #32]
     3d0:	stp	w9, w20, [sp, #56]
     3d4:	str	x8, [sp, #64]
     3d8:	str	d0, [sp, #360]
     3dc:	str	d0, [sp, #400]
     3e0:	str	wzr, [sp, #432]
     3e4:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     3e8:	add	x0, sp, #0x3c0
     3ec:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
     3f0:	cbz	x21, 3fc <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x38c>
     3f4:	mov	x0, x21
     3f8:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
     3fc:	add	sp, sp, #0x420
     400:	ldp	x20, x19, [sp, #80]
     404:	ldp	x22, x21, [sp, #64]
     408:	ldp	x24, x23, [sp, #48]
     40c:	ldp	x26, x25, [sp, #32]
     410:	ldp	x28, x27, [sp, #16]
     414:	ldp	x29, x30, [sp], #96
     418:	ret
     41c:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     420:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     424:	add	x0, x0, #0x0
     428:	add	x2, x2, #0x0
     42c:	mov	w1, #0x59                  	// #89
     430:	b	448 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE+0x3d8>
     434:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     438:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     43c:	add	x0, x0, #0x0
     440:	add	x2, x2, #0x0
     444:	mov	w1, #0x2c                  	// #44
     448:	mov	x3, xzr
     44c:	mov	x4, xzr
     450:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000454 <__ubsan_handle_type_mismatch_v1_abort>:
     454:	sub	sp, sp, #0x30
     458:	stp	x29, x30, [sp, #32]
     45c:	add	x29, sp, #0x20
     460:	ldur	w8, [x29, #-8]
     464:	ldur	w9, [x29, #-5]
     468:	mov	w10, #0x1                   	// #1
     46c:	mov	x2, sp
     470:	strb	w10, [sp]
     474:	stur	w8, [sp, #1]
     478:	str	w9, [sp, #4]
     47c:	stp	x30, x29, [sp, #8]
     480:	bl	70 <_ZL22handleTypeMismatchImplPN7__ubsan16TypeMismatchDataEmNS_13ReportOptionsE>
     484:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000488 <__ubsan_handle_alignment_assumption>:
     488:	sub	sp, sp, #0x30
     48c:	stp	x29, x30, [sp, #32]
     490:	add	x29, sp, #0x20
     494:	ldur	w8, [x29, #-8]
     498:	ldur	w9, [x29, #-5]
     49c:	mov	x4, sp
     4a0:	strb	wzr, [sp]
     4a4:	stur	w8, [sp, #1]
     4a8:	str	w9, [sp, #4]
     4ac:	stp	x30, x29, [sp, #8]
     4b0:	bl	4c0 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE>
     4b4:	ldp	x29, x30, [sp, #32]
     4b8:	add	sp, sp, #0x30
     4bc:	ret

00000000000004c0 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE>:
     4c0:	stp	x29, x30, [sp, #-96]!
     4c4:	stp	x28, x27, [sp, #16]
     4c8:	stp	x26, x25, [sp, #32]
     4cc:	stp	x24, x23, [sp, #48]
     4d0:	stp	x22, x21, [sp, #64]
     4d4:	stp	x20, x19, [sp, #80]
     4d8:	sub	sp, sp, #0x460
     4dc:	mov	x24, x4
     4e0:	mov	x19, x3
     4e4:	mov	x21, x2
     4e8:	mov	x22, x1
     4ec:	mov	x20, x0
     4f0:	add	x25, sp, #0x3a8
     4f4:	add	x9, x0, #0xc
     4f8:	mov	w10, #0xffffffff            	// #-1
     4fc:	ldaxr	w8, [x9]
     500:	stlxr	w11, w10, [x9]
     504:	cbnz	w11, 4fc <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x3c>
     508:	ldr	w27, [x20, #8]
     50c:	ldr	x23, [x20]
     510:	add	x9, x20, #0x1c
     514:	bfi	x27, x8, #32, #32
     518:	mov	w8, #0xffffffff            	// #-1
     51c:	ldaxr	w28, [x9]
     520:	stlxr	w10, w8, [x9]
     524:	cbnz	w10, 51c <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x5c>
     528:	ldr	x26, [x20, #16]
     52c:	ldrb	w8, [x24]
     530:	ldr	w29, [x20, #24]
     534:	cbz	w8, 630 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x170>
     538:	ldr	q0, [x24]
     53c:	ldr	x8, [x24, #16]
     540:	ldr	q1, [sp, #1088]
     544:	mov	w9, #0x1                   	// #1
     548:	add	x0, sp, #0x3f0
     54c:	add	x1, sp, #0x3d0
     550:	add	x2, sp, #0x3a8
     554:	mov	w3, #0x7                   	// #7
     558:	str	x26, [sp, #8]
     55c:	str	x23, [sp, #944]
     560:	str	x27, [sp, #952]
     564:	str	w9, [sp, #936]
     568:	str	x8, [sp, #992]
     56c:	str	q0, [sp, #976]
     570:	stur	q1, [x25, #24]
     574:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
     578:	subs	x22, x22, x19
     57c:	b.eq	844 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x384>  // b.none
     580:	rbit	x8, x22
     584:	mov	w24, #0x1                   	// #1
     588:	clz	x25, x8
     58c:	sub	x26, x21, #0x1
     590:	cbz	x19, 654 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x194>
     594:	ldr	q0, [sp, #1088]
     598:	ldr	w10, [sp, #1116]
     59c:	stp	x23, x27, [sp, #504]
     5a0:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     5a4:	add	x27, sp, #0x1f0
     5a8:	add	x11, sp, #0x3a8
     5ac:	str	w24, [sp, #496]
     5b0:	ldr	d2, [x8]
     5b4:	stur	q0, [x27, #24]
     5b8:	str	w10, [sp, #572]
     5bc:	ldur	x10, [x11, #172]
     5c0:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     5c4:	movi	v1.2d, #0x0
     5c8:	add	x8, x8, #0x0
     5cc:	mov	w9, #0x2                   	// #2
     5d0:	str	d1, [sp, #840]
     5d4:	str	d1, [sp, #880]
     5d8:	str	d2, [sp, #536]
     5dc:	str	x8, [sp, #544]
     5e0:	ldr	w8, [sp, #1116]
     5e4:	str	w9, [sp, #560]
     5e8:	str	wzr, [sp, #824]
     5ec:	str	xzr, [sp, #832]
     5f0:	str	wzr, [sp, #864]
     5f4:	str	xzr, [sp, #872]
     5f8:	str	xzr, [sp, #904]
     5fc:	str	wzr, [sp, #912]
     600:	stur	x10, [x27, #68]
     604:	ldur	x10, [x11, #172]
     608:	str	q0, [sp, #464]
     60c:	str	xzr, [sp, #584]
     610:	str	x21, [sp, #576]
     614:	str	w9, [sp, #816]
     618:	str	w9, [sp, #592]
     61c:	str	w8, [sp, #604]
     620:	stur	x10, [x27, #100]
     624:	str	xzr, [sp, #616]
     628:	str	x19, [sp, #608]
     62c:	b	6d0 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x210>
     630:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
     634:	cmp	x27, x8
     638:	b.hi	824 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x364>  // b.pmore
     63c:	ldr	x1, [x24, #8]
     640:	mov	w0, #0x7                   	// #7
     644:	mov	x2, x23
     648:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
     64c:	tbz	w0, #0, 538 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x78>
     650:	b	824 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x364>
     654:	ldr	q0, [sp, #1088]
     658:	stp	x23, x27, [sp, #504]
     65c:	add	x27, sp, #0x1f0
     660:	str	w24, [sp, #496]
     664:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     668:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     66c:	str	q0, [sp, #480]
     670:	stur	q0, [x27, #24]
     674:	movi	v0.2d, #0x0
     678:	add	x9, x9, #0x0
     67c:	str	d0, [sp, #840]
     680:	str	d0, [sp, #880]
     684:	ldr	d0, [x8]
     688:	add	x8, sp, #0x3a8
     68c:	ldur	x8, [x8, #172]
     690:	str	x9, [sp, #544]
     694:	ldr	w9, [sp, #1116]
     698:	mov	w10, #0x2                   	// #2
     69c:	str	wzr, [sp, #824]
     6a0:	str	xzr, [sp, #832]
     6a4:	str	wzr, [sp, #864]
     6a8:	str	xzr, [sp, #872]
     6ac:	str	xzr, [sp, #904]
     6b0:	str	wzr, [sp, #912]
     6b4:	str	w24, [sp, #816]
     6b8:	str	w10, [sp, #560]
     6bc:	str	w9, [sp, #572]
     6c0:	str	d0, [sp, #536]
     6c4:	stur	x8, [x27, #68]
     6c8:	str	xzr, [sp, #584]
     6cc:	str	x21, [sp, #576]
     6d0:	ldr	x1, [x20, #32]
     6d4:	add	x0, sp, #0x1f0
     6d8:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
     6dc:	add	x0, sp, #0x1f0
     6e0:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     6e4:	ldr	x9, [sp, #8]
     6e8:	lsl	x21, x24, x25
     6ec:	and	x20, x22, x26
     6f0:	adrp	x23, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     6f4:	cbz	x9, 754 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE+0x294>
     6f8:	ldr	q0, [sp, #16]
     6fc:	mov	w8, #0x1                   	// #1
     700:	str	w8, [sp, #32]
     704:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     708:	stur	q0, [sp, #56]
     70c:	ldr	d0, [x23]
     710:	movi	v1.2d, #0x0
     714:	bfi	x29, x28, #32, #32
     718:	add	x8, x8, #0x0
     71c:	add	x0, sp, #0x20
     720:	str	d1, [sp, #376]
     724:	str	d1, [sp, #416]
     728:	str	wzr, [sp, #352]
     72c:	str	wzr, [sp, #360]
     730:	str	xzr, [sp, #368]
     734:	str	wzr, [sp, #400]
     738:	str	xzr, [sp, #408]
     73c:	str	xzr, [sp, #440]
     740:	stp	x9, x29, [sp, #40]
     744:	str	x8, [sp, #80]
     748:	str	d0, [sp, #72]
     74c:	str	wzr, [sp, #448]
     750:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     754:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     758:	add	x9, x9, #0x0
     75c:	add	x12, sp, #0x3a8
     760:	ldr	d1, [x23]
     764:	str	x9, [sp, #544]
     768:	ldur	x9, [x12, #172]
     76c:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     770:	adrp	x11, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     774:	mov	w8, #0x2                   	// #2
     778:	movi	v0.2d, #0x0
     77c:	add	x10, x10, #0x0
     780:	cmp	x19, #0x0
     784:	add	x11, x11, #0x0
     788:	str	xzr, [sp, #504]
     78c:	str	x22, [sp, #520]
     790:	str	xzr, [sp, #832]
     794:	str	wzr, [sp, #864]
     798:	str	xzr, [sp, #872]
     79c:	str	xzr, [sp, #904]
     7a0:	str	wzr, [sp, #912]
     7a4:	str	wzr, [sp, #824]
     7a8:	str	wzr, [sp, #560]
     7ac:	str	w8, [sp, #496]
     7b0:	str	d0, [sp, #512]
     7b4:	str	d0, [sp, #840]
     7b8:	str	d0, [sp, #880]
     7bc:	csel	x10, x11, x10, ne  // ne = any
     7c0:	ldr	w11, [sp, #1116]
     7c4:	str	d1, [sp, #536]
     7c8:	stur	x9, [x27, #68]
     7cc:	ldr	w9, [sp, #1116]
     7d0:	str	w11, [sp, #572]
     7d4:	ldur	x11, [x12, #172]
     7d8:	ldur	x12, [x12, #172]
     7dc:	str	w9, [sp, #604]
     7e0:	ldr	w9, [sp, #1116]
     7e4:	str	x10, [sp, #576]
     7e8:	mov	w10, #0x3                   	// #3
     7ec:	add	x0, sp, #0x1f0
     7f0:	str	w8, [sp, #592]
     7f4:	stur	x11, [x27, #100]
     7f8:	str	xzr, [sp, #616]
     7fc:	str	x21, [sp, #608]
     800:	str	w10, [sp, #816]
     804:	str	w8, [sp, #624]
     808:	str	w9, [sp, #636]
     80c:	stur	x12, [x27, #132]
     810:	str	xzr, [sp, #648]
     814:	str	x20, [sp, #640]
     818:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     81c:	add	x0, sp, #0x3f0
     820:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
     824:	add	sp, sp, #0x460
     828:	ldp	x20, x19, [sp, #80]
     82c:	ldp	x22, x21, [sp, #64]
     830:	ldp	x24, x23, [sp, #48]
     834:	ldp	x26, x25, [sp, #32]
     838:	ldp	x28, x27, [sp, #16]
     83c:	ldp	x29, x30, [sp], #96
     840:	ret
     844:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     848:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     84c:	add	x0, x0, #0x0
     850:	add	x2, x2, #0x0
     854:	mov	w1, #0x171                 	// #369
     858:	mov	x3, xzr
     85c:	mov	x4, xzr
     860:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000864 <__ubsan_handle_alignment_assumption_abort>:
     864:	sub	sp, sp, #0x30
     868:	stp	x29, x30, [sp, #32]
     86c:	add	x29, sp, #0x20
     870:	ldur	w8, [x29, #-8]
     874:	ldur	w9, [x29, #-5]
     878:	mov	w10, #0x1                   	// #1
     87c:	mov	x4, sp
     880:	strb	w10, [sp]
     884:	stur	w8, [sp, #1]
     888:	str	w9, [sp, #4]
     88c:	stp	x30, x29, [sp, #8]
     890:	bl	4c0 <_ZL29handleAlignmentAssumptionImplPN7__ubsan23AlignmentAssumptionDataEmmmNS_13ReportOptionsE>
     894:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000898 <__ubsan_handle_add_overflow>:
     898:	sub	sp, sp, #0x30
     89c:	stp	x29, x30, [sp, #32]
     8a0:	add	x29, sp, #0x20
     8a4:	ldur	w8, [x29, #-8]
     8a8:	ldur	w9, [x29, #-5]
     8ac:	ldr	x3, [x0, #16]
     8b0:	mov	x4, x2
     8b4:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     8b8:	add	x2, x2, #0x0
     8bc:	mov	x5, sp
     8c0:	strb	wzr, [sp]
     8c4:	stur	w8, [sp, #1]
     8c8:	str	w9, [sp, #4]
     8cc:	stp	x30, x29, [sp, #8]
     8d0:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     8d4:	ldp	x29, x30, [sp, #32]
     8d8:	add	sp, sp, #0x30
     8dc:	ret

00000000000008e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>:
     8e0:	str	x29, [sp, #-96]!
     8e4:	stp	x30, x27, [sp, #16]
     8e8:	stp	x26, x25, [sp, #32]
     8ec:	stp	x24, x23, [sp, #48]
     8f0:	stp	x22, x21, [sp, #64]
     8f4:	stp	x20, x19, [sp, #80]
     8f8:	sub	sp, sp, #0x290
     8fc:	mov	x22, x5
     900:	mov	x20, x2
     904:	mov	x21, x1
     908:	mov	x19, x0
     90c:	add	x25, sp, #0x284
     910:	add	x9, x0, #0xc
     914:	mov	w10, #0xffffffff            	// #-1
     918:	str	x3, [sp, #624]
     91c:	str	x4, [sp, #632]
     920:	ldaxr	w8, [x9]
     924:	stlxr	w11, w10, [x9]
     928:	cbnz	w11, 920 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x40>
     92c:	ldr	x9, [x19, #16]
     930:	ldr	x24, [x19]
     934:	ldr	w27, [x19, #8]
     938:	ldrh	w10, [x9]
     93c:	cbz	w10, 958 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x78>
     940:	mov	w26, wzr
     944:	mov	w23, #0xa                   	// #10
     948:	ldrb	w9, [x22]
     94c:	bfi	x27, x8, #32, #32
     950:	cbnz	w9, 998 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0xb8>
     954:	b	978 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x98>
     958:	ldrh	w9, [x9, #2]
     95c:	and	w26, w9, #0x1
     960:	tst	w9, #0x1
     964:	mov	w9, #0x9                   	// #9
     968:	cinc	w23, w9, eq  // eq = none
     96c:	ldrb	w9, [x22]
     970:	bfi	x27, x8, #32, #32
     974:	cbnz	w9, 998 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0xb8>
     978:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
     97c:	cmp	x27, x8
     980:	b.hi	ac4 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x1e4>  // b.pmore
     984:	ldr	x1, [x22, #8]
     988:	mov	w0, w23
     98c:	mov	x2, x24
     990:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
     994:	tbnz	w0, #0, ac4 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x1e4>
     998:	tbz	w26, #0, aac <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x1cc>
     99c:	ldr	x8, [x22, #16]
     9a0:	ldr	q0, [x22]
     9a4:	mov	w22, #0x1                   	// #1
     9a8:	add	x0, sp, #0x220
     9ac:	add	x1, sp, #0x200
     9b0:	add	x2, sp, #0x1d8
     9b4:	mov	w3, w23
     9b8:	str	w22, [sp, #472]
     9bc:	str	x8, [sp, #528]
     9c0:	str	q0, [sp, #512]
     9c4:	stp	x24, x27, [sp, #480]
     9c8:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
     9cc:	movi	v0.2d, #0x0
     9d0:	str	d0, [sp, #376]
     9d4:	str	d0, [sp, #416]
     9d8:	ldr	q0, [sp, #16]
     9dc:	ldr	x11, [x25]
     9e0:	ldr	w12, [sp, #652]
     9e4:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     9e8:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     9ec:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     9f0:	add	x8, x8, #0x0
     9f4:	add	x9, x9, #0x0
     9f8:	add	x10, x10, #0x0
     9fc:	cmp	w26, #0x0
     a00:	str	x8, [sp, #80]
     a04:	csel	x8, x10, x9, ne  // ne = any
     a08:	str	w22, [sp, #32]
     a0c:	stp	x24, x27, [sp, #40]
     a10:	stp	wzr, w23, [sp, #72]
     a14:	str	wzr, [sp, #360]
     a18:	str	xzr, [sp, #368]
     a1c:	str	wzr, [sp, #400]
     a20:	str	xzr, [sp, #408]
     a24:	str	xzr, [sp, #440]
     a28:	str	wzr, [sp, #448]
     a2c:	str	w22, [sp, #352]
     a30:	str	wzr, [sp, #96]
     a34:	str	x8, [sp, #112]
     a38:	stur	q0, [sp, #56]
     a3c:	str	w12, [sp, #108]
     a40:	stur	x11, [sp, #100]
     a44:	ldr	x8, [x19, #16]
     a48:	add	x0, sp, #0x20
     a4c:	mov	x1, sp
     a50:	stp	x8, x21, [sp]
     a54:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
     a58:	ldr	w8, [x0, #320]
     a5c:	cmp	w8, #0x8
     a60:	b.eq	ae4 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x204>  // b.none
     a64:	add	w9, w8, #0x1
     a68:	add	x8, x0, x8, lsl #5
     a6c:	str	w9, [x0, #320]
     a70:	str	wzr, [x8, #64]
     a74:	ldr	w9, [sp, #652]
     a78:	ldr	x10, [x25]
     a7c:	add	x1, sp, #0x270
     a80:	str	x20, [x8, #80]
     a84:	str	w9, [x8, #76]
     a88:	stur	x10, [x8, #68]
     a8c:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
     a90:	ldr	x1, [x19, #16]
     a94:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
     a98:	add	x0, sp, #0x20
     a9c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     aa0:	add	x0, sp, #0x220
     aa4:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
     aa8:	b	ac4 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0x1e4>
     aac:	ldrb	w8, [x22]
     ab0:	cbnz	w8, 99c <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0xbc>
     ab4:	adrp	x8, 0 <_ZN7__ubsan11ubsan_flagsE>
     ab8:	ldr	x8, [x8]
     abc:	ldrb	w8, [x8, #17]
     ac0:	cbz	w8, 99c <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE+0xbc>
     ac4:	add	sp, sp, #0x290
     ac8:	ldp	x20, x19, [sp, #80]
     acc:	ldp	x22, x21, [sp, #64]
     ad0:	ldp	x24, x23, [sp, #48]
     ad4:	ldp	x26, x25, [sp, #32]
     ad8:	ldp	x30, x27, [sp, #16]
     adc:	ldr	x29, [sp], #96
     ae0:	ret
     ae4:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     ae8:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     aec:	add	x0, x0, #0x0
     af0:	add	x2, x2, #0x0
     af4:	mov	w1, #0xc0                  	// #192
     af8:	mov	x3, xzr
     afc:	mov	x4, xzr
     b00:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000b04 <__ubsan_handle_add_overflow_abort>:
     b04:	sub	sp, sp, #0x30
     b08:	stp	x29, x30, [sp, #32]
     b0c:	add	x29, sp, #0x20
     b10:	ldr	x3, [x0, #16]
     b14:	ldur	w8, [x29, #-8]
     b18:	ldur	w9, [x29, #-5]
     b1c:	mov	x4, x2
     b20:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     b24:	mov	w10, #0x1                   	// #1
     b28:	add	x2, x2, #0x0
     b2c:	mov	x5, sp
     b30:	strb	w10, [sp]
     b34:	stur	w8, [sp, #1]
     b38:	str	w9, [sp, #4]
     b3c:	stp	x30, x29, [sp, #8]
     b40:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     b44:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000b48 <__ubsan_handle_sub_overflow>:
     b48:	sub	sp, sp, #0x30
     b4c:	stp	x29, x30, [sp, #32]
     b50:	add	x29, sp, #0x20
     b54:	ldur	w8, [x29, #-8]
     b58:	ldur	w9, [x29, #-5]
     b5c:	ldr	x3, [x0, #16]
     b60:	mov	x4, x2
     b64:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     b68:	add	x2, x2, #0x0
     b6c:	mov	x5, sp
     b70:	strb	wzr, [sp]
     b74:	stur	w8, [sp, #1]
     b78:	str	w9, [sp, #4]
     b7c:	stp	x30, x29, [sp, #8]
     b80:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     b84:	ldp	x29, x30, [sp, #32]
     b88:	add	sp, sp, #0x30
     b8c:	ret

0000000000000b90 <__ubsan_handle_sub_overflow_abort>:
     b90:	sub	sp, sp, #0x30
     b94:	stp	x29, x30, [sp, #32]
     b98:	add	x29, sp, #0x20
     b9c:	ldr	x3, [x0, #16]
     ba0:	ldur	w8, [x29, #-8]
     ba4:	ldur	w9, [x29, #-5]
     ba8:	mov	x4, x2
     bac:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     bb0:	mov	w10, #0x1                   	// #1
     bb4:	add	x2, x2, #0x0
     bb8:	mov	x5, sp
     bbc:	strb	w10, [sp]
     bc0:	stur	w8, [sp, #1]
     bc4:	str	w9, [sp, #4]
     bc8:	stp	x30, x29, [sp, #8]
     bcc:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     bd0:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000bd4 <__ubsan_handle_mul_overflow>:
     bd4:	sub	sp, sp, #0x30
     bd8:	stp	x29, x30, [sp, #32]
     bdc:	add	x29, sp, #0x20
     be0:	ldur	w8, [x29, #-8]
     be4:	ldur	w9, [x29, #-5]
     be8:	ldr	x3, [x0, #16]
     bec:	mov	x4, x2
     bf0:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     bf4:	add	x2, x2, #0x0
     bf8:	mov	x5, sp
     bfc:	strb	wzr, [sp]
     c00:	stur	w8, [sp, #1]
     c04:	str	w9, [sp, #4]
     c08:	stp	x30, x29, [sp, #8]
     c0c:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     c10:	ldp	x29, x30, [sp, #32]
     c14:	add	sp, sp, #0x30
     c18:	ret

0000000000000c1c <__ubsan_handle_mul_overflow_abort>:
     c1c:	sub	sp, sp, #0x30
     c20:	stp	x29, x30, [sp, #32]
     c24:	add	x29, sp, #0x20
     c28:	ldr	x3, [x0, #16]
     c2c:	ldur	w8, [x29, #-8]
     c30:	ldur	w9, [x29, #-5]
     c34:	mov	x4, x2
     c38:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     c3c:	mov	w10, #0x1                   	// #1
     c40:	add	x2, x2, #0x0
     c44:	mov	x5, sp
     c48:	strb	w10, [sp]
     c4c:	stur	w8, [sp, #1]
     c50:	str	w9, [sp, #4]
     c54:	stp	x30, x29, [sp, #8]
     c58:	bl	8e0 <_ZL25handleIntegerOverflowImplIN7__ubsan5ValueEEvPNS0_12OverflowDataEmPKcT_NS0_13ReportOptionsE>
     c5c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000c60 <__ubsan_handle_negate_overflow>:
     c60:	sub	sp, sp, #0x30
     c64:	stp	x29, x30, [sp, #32]
     c68:	add	x29, sp, #0x20
     c6c:	ldur	w8, [x29, #-8]
     c70:	ldur	w9, [x29, #-5]
     c74:	mov	x2, sp
     c78:	strb	wzr, [sp]
     c7c:	stur	w8, [sp, #1]
     c80:	str	w9, [sp, #4]
     c84:	stp	x30, x29, [sp, #8]
     c88:	bl	c98 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE>
     c8c:	ldp	x29, x30, [sp, #32]
     c90:	add	sp, sp, #0x30
     c94:	ret

0000000000000c98 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE>:
     c98:	str	x29, [sp, #-80]!
     c9c:	stp	x30, x25, [sp, #16]
     ca0:	stp	x24, x23, [sp, #32]
     ca4:	stp	x22, x21, [sp, #48]
     ca8:	stp	x20, x19, [sp, #64]
     cac:	sub	sp, sp, #0x280
     cb0:	mov	x23, x2
     cb4:	mov	x20, x1
     cb8:	mov	x19, x0
     cbc:	add	x9, x0, #0xc
     cc0:	mov	w10, #0xffffffff            	// #-1
     cc4:	ldaxr	w8, [x9]
     cc8:	stlxr	w11, w10, [x9]
     ccc:	cbnz	w11, cc4 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x2c>
     cd0:	ldr	x9, [x19, #16]
     cd4:	ldr	x22, [x19]
     cd8:	ldr	w24, [x19, #8]
     cdc:	ldrh	w10, [x9]
     ce0:	cbz	w10, cfc <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x64>
     ce4:	mov	w25, wzr
     ce8:	mov	w21, #0xa                   	// #10
     cec:	ldrb	w9, [x23]
     cf0:	bfi	x24, x8, #32, #32
     cf4:	cbnz	w9, d3c <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0xa4>
     cf8:	b	d1c <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x84>
     cfc:	ldrh	w9, [x9, #2]
     d00:	and	w25, w9, #0x1
     d04:	tst	w9, #0x1
     d08:	mov	w9, #0x9                   	// #9
     d0c:	cinc	w21, w9, eq  // eq = none
     d10:	ldrb	w9, [x23]
     d14:	bfi	x24, x8, #32, #32
     d18:	cbnz	w9, d3c <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0xa4>
     d1c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
     d20:	cmp	x24, x8
     d24:	b.hi	e28 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x190>  // b.pmore
     d28:	ldr	x1, [x23, #8]
     d2c:	mov	w0, w21
     d30:	mov	x2, x22
     d34:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
     d38:	tbnz	w0, #0, e28 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x190>
     d3c:	adrp	x8, 0 <_ZN7__ubsan11ubsan_flagsE>
     d40:	ldr	x8, [x8]
     d44:	ldrb	w8, [x8, #17]
     d48:	cmp	w8, #0x0
     d4c:	cset	w8, ne  // ne = any
     d50:	bic	w8, w8, w25
     d54:	tbnz	w8, #0, e28 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x190>
     d58:	ldr	x8, [x23, #16]
     d5c:	ldr	q0, [x23]
     d60:	mov	w23, #0x1                   	// #1
     d64:	add	x0, sp, #0x230
     d68:	add	x1, sp, #0x210
     d6c:	add	x2, sp, #0x1e8
     d70:	mov	w3, w21
     d74:	str	w23, [sp, #488]
     d78:	str	x8, [sp, #544]
     d7c:	str	q0, [sp, #528]
     d80:	stp	x22, x24, [sp, #496]
     d84:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
     d88:	cbz	w25, db4 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x11c>
     d8c:	movi	v0.2d, #0x0
     d90:	str	d0, [sp, #392]
     d94:	str	d0, [sp, #432]
     d98:	ldr	q0, [sp, #32]
     d9c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     da0:	str	w23, [sp, #48]
     da4:	stp	x22, x24, [sp, #56]
     da8:	stp	wzr, w21, [sp, #88]
     dac:	add	x8, x8, #0x0
     db0:	b	dd8 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE+0x140>
     db4:	movi	v0.2d, #0x0
     db8:	str	d0, [sp, #392]
     dbc:	str	d0, [sp, #432]
     dc0:	ldr	q0, [sp]
     dc4:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     dc8:	add	x8, x8, #0x0
     dcc:	str	w23, [sp, #48]
     dd0:	stp	x22, x24, [sp, #56]
     dd4:	stp	wzr, w21, [sp, #88]
     dd8:	str	wzr, [sp, #368]
     ddc:	str	wzr, [sp, #376]
     de0:	str	xzr, [sp, #384]
     de4:	str	wzr, [sp, #416]
     de8:	str	xzr, [sp, #424]
     dec:	str	xzr, [sp, #456]
     df0:	str	wzr, [sp, #464]
     df4:	str	x8, [sp, #96]
     df8:	stur	q0, [sp, #72]
     dfc:	ldr	x8, [x19, #16]
     e00:	add	x0, sp, #0x30
     e04:	add	x1, sp, #0x10
     e08:	stp	x8, x20, [sp, #16]
     e0c:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
     e10:	ldr	x1, [x19, #16]
     e14:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
     e18:	add	x0, sp, #0x30
     e1c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
     e20:	add	x0, sp, #0x230
     e24:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
     e28:	add	sp, sp, #0x280
     e2c:	ldp	x20, x19, [sp, #64]
     e30:	ldp	x22, x21, [sp, #48]
     e34:	ldp	x24, x23, [sp, #32]
     e38:	ldp	x30, x25, [sp, #16]
     e3c:	ldr	x29, [sp], #80
     e40:	ret

0000000000000e44 <__ubsan_handle_negate_overflow_abort>:
     e44:	sub	sp, sp, #0x30
     e48:	stp	x29, x30, [sp, #32]
     e4c:	add	x29, sp, #0x20
     e50:	ldur	w8, [x29, #-8]
     e54:	ldur	w9, [x29, #-5]
     e58:	mov	w10, #0x1                   	// #1
     e5c:	mov	x2, sp
     e60:	strb	w10, [sp]
     e64:	stur	w8, [sp, #1]
     e68:	str	w9, [sp, #4]
     e6c:	stp	x30, x29, [sp, #8]
     e70:	bl	c98 <_ZL24handleNegateOverflowImplPN7__ubsan12OverflowDataEmNS_13ReportOptionsE>
     e74:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000e78 <__ubsan_handle_divrem_overflow>:
     e78:	sub	sp, sp, #0x30
     e7c:	stp	x29, x30, [sp, #32]
     e80:	add	x29, sp, #0x20
     e84:	ldur	w8, [x29, #-8]
     e88:	ldur	w9, [x29, #-5]
     e8c:	mov	x3, sp
     e90:	strb	wzr, [sp]
     e94:	stur	w8, [sp, #1]
     e98:	str	w9, [sp, #4]
     e9c:	stp	x30, x29, [sp, #8]
     ea0:	bl	eb0 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE>
     ea4:	ldp	x29, x30, [sp, #32]
     ea8:	add	sp, sp, #0x30
     eac:	ret

0000000000000eb0 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE>:
     eb0:	stp	x29, x30, [sp, #-64]!
     eb4:	stp	x24, x23, [sp, #16]
     eb8:	stp	x22, x21, [sp, #32]
     ebc:	stp	x20, x19, [sp, #48]
     ec0:	sub	sp, sp, #0x440
     ec4:	mov	x21, x3
     ec8:	mov	x19, x0
     ecc:	add	x8, x0, #0xc
     ed0:	mov	w9, #0xffffffff            	// #-1
     ed4:	ldaxr	w24, [x8]
     ed8:	stlxr	w10, w9, [x8]
     edc:	cbnz	w10, ed4 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x24>
     ee0:	ldr	x8, [x19, #16]
     ee4:	ldr	x20, [x19]
     ee8:	ldr	w23, [x19, #8]
     eec:	str	x1, [sp, #1080]
     ef0:	str	x8, [sp, #1072]
     ef4:	str	x8, [sp, #1056]
     ef8:	str	x2, [sp, #1064]
     efc:	ldrh	w9, [x8]
     f00:	cbz	w9, f18 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x68>
     f04:	mov	w22, #0xc                   	// #12
     f08:	ldrb	w8, [x21]
     f0c:	bfi	x23, x24, #32, #32
     f10:	cbnz	w8, f88 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xd8>
     f14:	b	f68 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xb8>
     f18:	ldrb	w8, [x8, #2]
     f1c:	tbnz	w8, #0, f34 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x84>
     f20:	mov	w22, #0xb                   	// #11
     f24:	ldrb	w8, [x21]
     f28:	bfi	x23, x24, #32, #32
     f2c:	cbnz	w8, f88 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xd8>
     f30:	b	f68 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xb8>
     f34:	add	x0, sp, #0x420
     f38:	bl	0 <_ZNK7__ubsan5Value12getSIntValueEv>
     f3c:	and	x8, x0, x1
     f40:	cmn	x8, #0x1
     f44:	b.eq	f58 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xa8>  // b.none
     f48:	ldr	x8, [x19, #16]
     f4c:	ldrh	w8, [x8]
     f50:	cbnz	w8, f04 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x54>
     f54:	b	f20 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x70>
     f58:	mov	w22, #0x9                   	// #9
     f5c:	ldrb	w8, [x21]
     f60:	bfi	x23, x24, #32, #32
     f64:	cbnz	w8, f88 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0xd8>
     f68:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
     f6c:	cmp	x23, x8
     f70:	b.hi	108c <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x1dc>  // b.pmore
     f74:	ldr	x1, [x21, #8]
     f78:	mov	w0, w22
     f7c:	mov	x2, x20
     f80:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
     f84:	tbnz	w0, #0, 108c <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x1dc>
     f88:	ldr	x8, [x21, #16]
     f8c:	ldr	q0, [x21]
     f90:	mov	w21, #0x1                   	// #1
     f94:	add	x0, sp, #0x3d0
     f98:	add	x1, sp, #0x3b0
     f9c:	add	x2, sp, #0x388
     fa0:	mov	w3, w22
     fa4:	str	w21, [sp, #904]
     fa8:	str	x8, [sp, #960]
     fac:	str	q0, [sp, #944]
     fb0:	str	x20, [sp, #912]
     fb4:	str	x23, [sp, #920]
     fb8:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
     fbc:	cmp	w22, #0x9
     fc0:	b.ne	1034 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x184>  // b.any
     fc4:	movi	v0.2d, #0x0
     fc8:	str	d0, [sp, #808]
     fcc:	str	d0, [sp, #848]
     fd0:	ldr	q0, [sp, #448]
     fd4:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
     fd8:	add	x10, sp, #0xe9
     fdc:	str	w21, [sp, #464]
     fe0:	stp	x20, x23, [sp, #472]
     fe4:	str	wzr, [sp, #784]
     fe8:	str	wzr, [sp, #792]
     fec:	str	xzr, [sp, #800]
     ff0:	str	wzr, [sp, #832]
     ff4:	stur	q0, [x10, #255]
     ff8:	ldr	d0, [x8]
     ffc:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1000:	add	x9, x9, #0x0
    1004:	add	x0, sp, #0x1d0
    1008:	add	x1, sp, #0x430
    100c:	str	xzr, [sp, #840]
    1010:	str	xzr, [sp, #872]
    1014:	str	x9, [sp, #512]
    1018:	str	d0, [sp, #504]
    101c:	str	wzr, [sp, #880]
    1020:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1024:	ldr	x1, [x19, #16]
    1028:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    102c:	add	x0, sp, #0x1d0
    1030:	b	1080 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE+0x1d0>
    1034:	movi	v0.2d, #0x0
    1038:	str	d0, [sp, #360]
    103c:	str	d0, [sp, #400]
    1040:	ldr	q0, [sp]
    1044:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1048:	add	x8, x8, #0x0
    104c:	add	x0, sp, #0x10
    1050:	str	w21, [sp, #16]
    1054:	stp	x20, x23, [sp, #24]
    1058:	stp	wzr, w22, [sp, #56]
    105c:	str	wzr, [sp, #336]
    1060:	str	wzr, [sp, #344]
    1064:	str	xzr, [sp, #352]
    1068:	str	wzr, [sp, #384]
    106c:	str	xzr, [sp, #392]
    1070:	str	xzr, [sp, #424]
    1074:	str	x8, [sp, #64]
    1078:	stur	q0, [sp, #40]
    107c:	str	wzr, [sp, #432]
    1080:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1084:	add	x0, sp, #0x3d0
    1088:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    108c:	add	sp, sp, #0x440
    1090:	ldp	x20, x19, [sp, #48]
    1094:	ldp	x22, x21, [sp, #32]
    1098:	ldp	x24, x23, [sp, #16]
    109c:	ldp	x29, x30, [sp], #64
    10a0:	ret

00000000000010a4 <__ubsan_handle_divrem_overflow_abort>:
    10a4:	sub	sp, sp, #0x30
    10a8:	stp	x29, x30, [sp, #32]
    10ac:	add	x29, sp, #0x20
    10b0:	ldur	w8, [x29, #-8]
    10b4:	ldur	w9, [x29, #-5]
    10b8:	mov	w10, #0x1                   	// #1
    10bc:	mov	x3, sp
    10c0:	strb	w10, [sp]
    10c4:	stur	w8, [sp, #1]
    10c8:	str	w9, [sp, #4]
    10cc:	stp	x30, x29, [sp, #8]
    10d0:	bl	eb0 <_ZL24handleDivremOverflowImplPN7__ubsan12OverflowDataEmmNS_13ReportOptionsE>
    10d4:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000010d8 <__ubsan_handle_shift_out_of_bounds>:
    10d8:	sub	sp, sp, #0x30
    10dc:	stp	x29, x30, [sp, #32]
    10e0:	add	x29, sp, #0x20
    10e4:	ldur	w8, [x29, #-8]
    10e8:	ldur	w9, [x29, #-5]
    10ec:	mov	x3, sp
    10f0:	strb	wzr, [sp]
    10f4:	stur	w8, [sp, #1]
    10f8:	str	w9, [sp, #4]
    10fc:	stp	x30, x29, [sp, #8]
    1100:	bl	1110 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE>
    1104:	ldp	x29, x30, [sp, #32]
    1108:	add	sp, sp, #0x30
    110c:	ret

0000000000001110 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE>:
    1110:	stp	x29, x30, [sp, #-64]!
    1114:	stp	x24, x23, [sp, #16]
    1118:	stp	x22, x21, [sp, #32]
    111c:	stp	x20, x19, [sp, #48]
    1120:	sub	sp, sp, #0x2c0
    1124:	mov	x22, x3
    1128:	mov	x19, x0
    112c:	add	x8, x0, #0xc
    1130:	mov	w9, #0xffffffff            	// #-1
    1134:	ldaxr	w24, [x8]
    1138:	stlxr	w10, w9, [x8]
    113c:	cbnz	w10, 1134 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x24>
    1140:	ldr	x8, [x19, #16]
    1144:	ldr	x20, [x19]
    1148:	ldr	w23, [x19, #8]
    114c:	str	x1, [sp, #680]
    1150:	str	x8, [sp, #672]
    1154:	ldr	x8, [x19, #24]
    1158:	str	x2, [sp, #664]
    115c:	str	x8, [sp, #656]
    1160:	ldrh	w9, [x8]
    1164:	cbnz	w9, 117c <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x6c>
    1168:	ldrb	w8, [x8, #2]
    116c:	tbz	w8, #0, 117c <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x6c>
    1170:	add	x0, sp, #0x290
    1174:	bl	0 <_ZNK7__ubsan5Value12getSIntValueEv>
    1178:	tbnz	x1, #63, 1378 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x268>
    117c:	add	x0, sp, #0x290
    1180:	bl	0 <_ZNK7__ubsan5Value19getPositiveIntValueEv>
    1184:	ldr	x8, [x19, #16]
    1188:	ldrh	w9, [x8]
    118c:	cbnz	w9, 1480 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x370>
    1190:	ldrh	w8, [x8, #2]
    1194:	mov	w9, #0x1                   	// #1
    1198:	lsr	x8, x8, #1
    119c:	lsl	w8, w9, w8
    11a0:	cmp	x0, x8
    11a4:	cset	w8, cc  // cc = lo, ul, last
    11a8:	cmp	x1, #0x0
    11ac:	csel	w8, w8, wzr, eq  // eq = none
    11b0:	cmp	w8, #0x0
    11b4:	mov	w8, #0x12                  	// #18
    11b8:	cinc	w21, w8, eq  // eq = none
    11bc:	ldrb	w8, [x22]
    11c0:	bfi	x23, x24, #32, #32
    11c4:	cbz	w8, 1388 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x278>
    11c8:	ldr	x8, [x22, #16]
    11cc:	ldr	q0, [x22]
    11d0:	mov	w9, #0x1                   	// #1
    11d4:	add	x0, sp, #0x240
    11d8:	add	x1, sp, #0x220
    11dc:	add	x2, sp, #0x1f8
    11e0:	mov	w3, w21
    11e4:	str	w9, [sp, #504]
    11e8:	str	x8, [sp, #560]
    11ec:	str	q0, [sp, #544]
    11f0:	str	x20, [sp, #512]
    11f4:	str	x23, [sp, #520]
    11f8:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    11fc:	cmp	w21, #0x13
    1200:	b.ne	12dc <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x1cc>  // b.any
    1204:	ldr	x8, [sp, #656]
    1208:	ldrh	w9, [x8]
    120c:	cbnz	w9, 1224 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x114>
    1210:	ldrb	w8, [x8, #2]
    1214:	tbz	w8, #0, 1224 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x114>
    1218:	add	x0, sp, #0x290
    121c:	bl	0 <_ZNK7__ubsan5Value12getSIntValueEv>
    1220:	tbnz	x1, #63, 13c0 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x2b0>
    1224:	movi	v0.2d, #0x0
    1228:	str	d0, [sp, #408]
    122c:	str	d0, [sp, #448]
    1230:	ldr	q0, [sp, #32]
    1234:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1238:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    123c:	mov	w8, #0x1                   	// #1
    1240:	stur	q0, [sp, #88]
    1244:	ldr	d0, [x9]
    1248:	add	x10, x10, #0x0
    124c:	add	x0, sp, #0x40
    1250:	add	x1, sp, #0x290
    1254:	stp	x20, x23, [sp, #72]
    1258:	str	wzr, [sp, #384]
    125c:	str	wzr, [sp, #392]
    1260:	str	xzr, [sp, #400]
    1264:	str	wzr, [sp, #432]
    1268:	str	xzr, [sp, #440]
    126c:	str	xzr, [sp, #472]
    1270:	str	w8, [sp, #64]
    1274:	str	x10, [sp, #112]
    1278:	str	d0, [sp, #104]
    127c:	str	wzr, [sp, #480]
    1280:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1284:	ldr	x9, [x19, #16]
    1288:	ldrh	w8, [x9]
    128c:	cbnz	w8, 1480 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x370>
    1290:	ldr	w8, [x0, #320]
    1294:	cmp	w8, #0x8
    1298:	b.eq	1498 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x388>  // b.none
    129c:	ldrh	w9, [x9, #2]
    12a0:	add	w11, w8, #0x1
    12a4:	add	x8, x0, x8, lsl #5
    12a8:	mov	w12, #0x2                   	// #2
    12ac:	str	w11, [x0, #320]
    12b0:	str	w12, [x8, #64]
    12b4:	add	x12, sp, #0x1b5
    12b8:	ldr	w11, [sp, #700]
    12bc:	ldur	x12, [x12, #255]
    12c0:	mov	w10, #0x1                   	// #1
    12c4:	lsr	w9, w9, #1
    12c8:	lsl	w9, w10, w9
    12cc:	str	w11, [x8, #76]
    12d0:	stur	x12, [x8, #68]
    12d4:	stp	x9, xzr, [x8, #80]
    12d8:	b	135c <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x24c>
    12dc:	ldr	x8, [sp, #672]
    12e0:	ldrh	w9, [x8]
    12e4:	cbnz	w9, 12fc <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x1ec>
    12e8:	ldrb	w8, [x8, #2]
    12ec:	tbz	w8, #0, 12fc <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x1ec>
    12f0:	add	x0, sp, #0x2a0
    12f4:	bl	0 <_ZNK7__ubsan5Value12getSIntValueEv>
    12f8:	tbnz	x1, #63, 1424 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x314>
    12fc:	movi	v0.2d, #0x0
    1300:	str	d0, [sp, #408]
    1304:	str	d0, [sp, #448]
    1308:	ldr	q0, [sp]
    130c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1310:	mov	w8, #0x1                   	// #1
    1314:	add	x9, x9, #0x0
    1318:	add	x0, sp, #0x40
    131c:	add	x1, sp, #0x2a0
    1320:	stp	x20, x23, [sp, #72]
    1324:	stp	wzr, w21, [sp, #104]
    1328:	str	wzr, [sp, #384]
    132c:	str	wzr, [sp, #392]
    1330:	str	xzr, [sp, #400]
    1334:	str	wzr, [sp, #432]
    1338:	str	xzr, [sp, #440]
    133c:	str	xzr, [sp, #472]
    1340:	str	w8, [sp, #64]
    1344:	str	x9, [sp, #112]
    1348:	stur	q0, [sp, #88]
    134c:	str	wzr, [sp, #480]
    1350:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1354:	add	x1, sp, #0x290
    1358:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    135c:	ldr	x1, [x19, #16]
    1360:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    1364:	add	x0, sp, #0x40
    1368:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    136c:	add	x0, sp, #0x240
    1370:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1374:	b	13a8 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x298>
    1378:	mov	w21, #0x13                  	// #19
    137c:	ldrb	w8, [x22]
    1380:	bfi	x23, x24, #32, #32
    1384:	cbnz	w8, 11c8 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0xb8>
    1388:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    138c:	cmp	x23, x8
    1390:	b.hi	13a8 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x298>  // b.pmore
    1394:	ldr	x1, [x22, #8]
    1398:	mov	w0, w21
    139c:	mov	x2, x20
    13a0:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    13a4:	tbz	w0, #0, 11c8 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0xb8>
    13a8:	add	sp, sp, #0x2c0
    13ac:	ldp	x20, x19, [sp, #48]
    13b0:	ldp	x22, x21, [sp, #32]
    13b4:	ldp	x24, x23, [sp, #16]
    13b8:	ldp	x29, x30, [sp], #64
    13bc:	ret
    13c0:	movi	v0.2d, #0x0
    13c4:	str	d0, [sp, #408]
    13c8:	str	d0, [sp, #448]
    13cc:	ldr	q0, [sp, #48]
    13d0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    13d4:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    13d8:	mov	w8, #0x1                   	// #1
    13dc:	stur	q0, [sp, #88]
    13e0:	ldr	d0, [x9]
    13e4:	add	x10, x10, #0x0
    13e8:	add	x0, sp, #0x40
    13ec:	add	x1, sp, #0x290
    13f0:	stp	x20, x23, [sp, #72]
    13f4:	str	wzr, [sp, #384]
    13f8:	str	wzr, [sp, #392]
    13fc:	str	xzr, [sp, #400]
    1400:	str	wzr, [sp, #432]
    1404:	str	xzr, [sp, #440]
    1408:	str	xzr, [sp, #472]
    140c:	str	w8, [sp, #64]
    1410:	str	x10, [sp, #112]
    1414:	str	d0, [sp, #104]
    1418:	str	wzr, [sp, #480]
    141c:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1420:	b	1364 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x254>
    1424:	movi	v0.2d, #0x0
    1428:	str	d0, [sp, #408]
    142c:	str	d0, [sp, #448]
    1430:	ldr	q0, [sp, #16]
    1434:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1438:	mov	w8, #0x1                   	// #1
    143c:	add	x9, x9, #0x0
    1440:	add	x0, sp, #0x40
    1444:	add	x1, sp, #0x2a0
    1448:	stp	x20, x23, [sp, #72]
    144c:	stp	wzr, w21, [sp, #104]
    1450:	str	wzr, [sp, #384]
    1454:	str	wzr, [sp, #392]
    1458:	str	xzr, [sp, #400]
    145c:	str	wzr, [sp, #432]
    1460:	str	xzr, [sp, #440]
    1464:	str	xzr, [sp, #472]
    1468:	str	w8, [sp, #64]
    146c:	str	x9, [sp, #112]
    1470:	stur	q0, [sp, #88]
    1474:	str	wzr, [sp, #480]
    1478:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    147c:	b	1364 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x254>
    1480:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1484:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1488:	add	x0, x0, #0x0
    148c:	add	x2, x2, #0x0
    1490:	mov	w1, #0x7c                  	// #124
    1494:	b	14ac <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE+0x39c>
    1498:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    149c:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    14a0:	add	x0, x0, #0x0
    14a4:	add	x2, x2, #0x0
    14a8:	mov	w1, #0xc0                  	// #192
    14ac:	mov	x3, xzr
    14b0:	mov	x4, xzr
    14b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000014b8 <__ubsan_handle_shift_out_of_bounds_abort>:
    14b8:	sub	sp, sp, #0x30
    14bc:	stp	x29, x30, [sp, #32]
    14c0:	add	x29, sp, #0x20
    14c4:	ldur	w8, [x29, #-8]
    14c8:	ldur	w9, [x29, #-5]
    14cc:	mov	w10, #0x1                   	// #1
    14d0:	mov	x3, sp
    14d4:	strb	w10, [sp]
    14d8:	stur	w8, [sp, #1]
    14dc:	str	w9, [sp, #4]
    14e0:	stp	x30, x29, [sp, #8]
    14e4:	bl	1110 <_ZL26handleShiftOutOfBoundsImplPN7__ubsan20ShiftOutOfBoundsDataEmmNS_13ReportOptionsE>
    14e8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000014ec <__ubsan_handle_out_of_bounds>:
    14ec:	sub	sp, sp, #0x30
    14f0:	stp	x29, x30, [sp, #32]
    14f4:	add	x29, sp, #0x20
    14f8:	ldur	w8, [x29, #-8]
    14fc:	ldur	w9, [x29, #-5]
    1500:	mov	x2, sp
    1504:	strb	wzr, [sp]
    1508:	stur	w8, [sp, #1]
    150c:	str	w9, [sp, #4]
    1510:	stp	x30, x29, [sp, #8]
    1514:	bl	1524 <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE>
    1518:	ldp	x29, x30, [sp, #32]
    151c:	add	sp, sp, #0x30
    1520:	ret

0000000000001524 <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE>:
    1524:	str	x29, [sp, #-64]!
    1528:	stp	x30, x23, [sp, #16]
    152c:	stp	x22, x21, [sp, #32]
    1530:	stp	x20, x19, [sp, #48]
    1534:	sub	sp, sp, #0x270
    1538:	mov	x21, x2
    153c:	mov	x20, x1
    1540:	mov	x19, x0
    1544:	add	x9, x0, #0xc
    1548:	mov	w10, #0xffffffff            	// #-1
    154c:	ldaxr	w8, [x9]
    1550:	stlxr	w11, w10, [x9]
    1554:	cbnz	w11, 154c <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE+0x28>
    1558:	ldr	w23, [x19, #8]
    155c:	ldrb	w9, [x21]
    1560:	ldr	x22, [x19]
    1564:	bfi	x23, x8, #32, #32
    1568:	cbz	w9, 161c <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE+0xf8>
    156c:	ldr	x8, [x21, #16]
    1570:	ldr	q0, [x21]
    1574:	mov	w21, #0x1                   	// #1
    1578:	add	x0, sp, #0x220
    157c:	add	x1, sp, #0x200
    1580:	add	x2, sp, #0x1d8
    1584:	mov	w3, #0x14                  	// #20
    1588:	str	w21, [sp, #472]
    158c:	str	x8, [sp, #528]
    1590:	str	q0, [sp, #512]
    1594:	stp	x22, x23, [sp, #480]
    1598:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    159c:	movi	v0.2d, #0x0
    15a0:	ldr	x8, [x19, #24]
    15a4:	str	d0, [sp, #360]
    15a8:	str	d0, [sp, #400]
    15ac:	ldr	q0, [sp]
    15b0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    15b4:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    15b8:	add	x10, x10, #0x0
    15bc:	stur	q0, [sp, #40]
    15c0:	ldr	d0, [x9]
    15c4:	add	x0, sp, #0x10
    15c8:	add	x1, sp, #0x1c8
    15cc:	str	w21, [sp, #16]
    15d0:	stp	x22, x23, [sp, #24]
    15d4:	str	wzr, [sp, #336]
    15d8:	str	wzr, [sp, #344]
    15dc:	str	xzr, [sp, #352]
    15e0:	str	wzr, [sp, #384]
    15e4:	str	xzr, [sp, #392]
    15e8:	str	xzr, [sp, #424]
    15ec:	str	x10, [sp, #64]
    15f0:	stp	x8, x20, [sp, #456]
    15f4:	str	d0, [sp, #56]
    15f8:	str	wzr, [sp, #432]
    15fc:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1600:	ldr	x1, [x19, #16]
    1604:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    1608:	add	x0, sp, #0x10
    160c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1610:	add	x0, sp, #0x220
    1614:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1618:	b	163c <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE+0x118>
    161c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    1620:	cmp	x23, x8
    1624:	b.hi	163c <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE+0x118>  // b.pmore
    1628:	ldr	x1, [x21, #8]
    162c:	mov	w0, #0x14                  	// #20
    1630:	mov	x2, x22
    1634:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    1638:	tbz	w0, #0, 156c <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE+0x48>
    163c:	add	sp, sp, #0x270
    1640:	ldp	x20, x19, [sp, #48]
    1644:	ldp	x22, x21, [sp, #32]
    1648:	ldp	x30, x23, [sp, #16]
    164c:	ldr	x29, [sp], #64
    1650:	ret

0000000000001654 <__ubsan_handle_out_of_bounds_abort>:
    1654:	sub	sp, sp, #0x30
    1658:	stp	x29, x30, [sp, #32]
    165c:	add	x29, sp, #0x20
    1660:	ldur	w8, [x29, #-8]
    1664:	ldur	w9, [x29, #-5]
    1668:	mov	w10, #0x1                   	// #1
    166c:	mov	x2, sp
    1670:	strb	w10, [sp]
    1674:	stur	w8, [sp, #1]
    1678:	str	w9, [sp, #4]
    167c:	stp	x30, x29, [sp, #8]
    1680:	bl	1524 <_ZL21handleOutOfBoundsImplPN7__ubsan15OutOfBoundsDataEmNS_13ReportOptionsE>
    1684:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000001688 <__ubsan_handle_builtin_unreachable>:
    1688:	sub	sp, sp, #0x30
    168c:	stp	x29, x30, [sp, #32]
    1690:	add	x29, sp, #0x20
    1694:	ldur	w8, [x29, #-8]
    1698:	ldur	w9, [x29, #-5]
    169c:	mov	w10, #0x1                   	// #1
    16a0:	mov	x1, sp
    16a4:	strb	w10, [sp]
    16a8:	stur	w8, [sp, #1]
    16ac:	str	w9, [sp, #4]
    16b0:	stp	x30, x29, [sp, #8]
    16b4:	bl	16bc <_ZL28handleBuiltinUnreachableImplPN7__ubsan15UnreachableDataENS_13ReportOptionsE>
    16b8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000016bc <_ZL28handleBuiltinUnreachableImplPN7__ubsan15UnreachableDataENS_13ReportOptionsE>:
    16bc:	stp	x29, x30, [sp, #-32]!
    16c0:	stp	x20, x19, [sp, #16]
    16c4:	sub	sp, sp, #0x260
    16c8:	ldr	x8, [x1, #16]
    16cc:	ldr	q0, [x1]
    16d0:	mov	x19, x0
    16d4:	mov	w20, #0x1                   	// #1
    16d8:	str	x8, [sp, #512]
    16dc:	str	q0, [sp, #496]
    16e0:	ldr	q0, [x0]
    16e4:	add	x8, sp, #0xd1
    16e8:	add	x0, sp, #0x210
    16ec:	add	x1, sp, #0x1f0
    16f0:	add	x2, sp, #0x1c8
    16f4:	mov	w3, #0x15                  	// #21
    16f8:	str	w20, [sp, #456]
    16fc:	stur	q0, [x8, #255]
    1700:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    1704:	ldr	q0, [x19]
    1708:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    170c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1710:	movi	v1.2d, #0x0
    1714:	stur	q0, [sp, #24]
    1718:	ldr	q0, [sp]
    171c:	add	x9, x9, #0x0
    1720:	add	x0, sp, #0x10
    1724:	str	d1, [sp, #360]
    1728:	stur	q0, [sp, #40]
    172c:	ldr	d0, [x8]
    1730:	str	d1, [sp, #400]
    1734:	str	w20, [sp, #16]
    1738:	str	wzr, [sp, #336]
    173c:	str	wzr, [sp, #344]
    1740:	str	xzr, [sp, #352]
    1744:	str	wzr, [sp, #384]
    1748:	str	xzr, [sp, #392]
    174c:	str	xzr, [sp, #424]
    1750:	str	x9, [sp, #64]
    1754:	str	d0, [sp, #56]
    1758:	str	wzr, [sp, #432]
    175c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1760:	add	x0, sp, #0x210
    1764:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1768:	add	sp, sp, #0x260
    176c:	ldp	x20, x19, [sp, #16]
    1770:	ldp	x29, x30, [sp], #32
    1774:	ret

0000000000001778 <__ubsan_handle_missing_return>:
    1778:	sub	sp, sp, #0x30
    177c:	stp	x29, x30, [sp, #32]
    1780:	add	x29, sp, #0x20
    1784:	ldur	w8, [x29, #-8]
    1788:	ldur	w9, [x29, #-5]
    178c:	mov	w10, #0x1                   	// #1
    1790:	mov	x1, sp
    1794:	strb	w10, [sp]
    1798:	stur	w8, [sp, #1]
    179c:	str	w9, [sp, #4]
    17a0:	stp	x30, x29, [sp, #8]
    17a4:	bl	17ac <_ZL23handleMissingReturnImplPN7__ubsan15UnreachableDataENS_13ReportOptionsE>
    17a8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000017ac <_ZL23handleMissingReturnImplPN7__ubsan15UnreachableDataENS_13ReportOptionsE>:
    17ac:	stp	x29, x30, [sp, #-32]!
    17b0:	stp	x20, x19, [sp, #16]
    17b4:	sub	sp, sp, #0x260
    17b8:	ldr	x8, [x1, #16]
    17bc:	ldr	q0, [x1]
    17c0:	mov	x19, x0
    17c4:	mov	w20, #0x1                   	// #1
    17c8:	str	x8, [sp, #512]
    17cc:	str	q0, [sp, #496]
    17d0:	ldr	q0, [x0]
    17d4:	add	x8, sp, #0xd1
    17d8:	add	x0, sp, #0x210
    17dc:	add	x1, sp, #0x1f0
    17e0:	add	x2, sp, #0x1c8
    17e4:	mov	w3, #0x16                  	// #22
    17e8:	str	w20, [sp, #456]
    17ec:	stur	q0, [x8, #255]
    17f0:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    17f4:	ldr	q0, [x19]
    17f8:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    17fc:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1800:	movi	v1.2d, #0x0
    1804:	stur	q0, [sp, #24]
    1808:	ldr	q0, [sp]
    180c:	add	x9, x9, #0x0
    1810:	add	x0, sp, #0x10
    1814:	str	d1, [sp, #360]
    1818:	stur	q0, [sp, #40]
    181c:	ldr	d0, [x8]
    1820:	str	d1, [sp, #400]
    1824:	str	w20, [sp, #16]
    1828:	str	wzr, [sp, #336]
    182c:	str	wzr, [sp, #344]
    1830:	str	xzr, [sp, #352]
    1834:	str	wzr, [sp, #384]
    1838:	str	xzr, [sp, #392]
    183c:	str	xzr, [sp, #424]
    1840:	str	x9, [sp, #64]
    1844:	str	d0, [sp, #56]
    1848:	str	wzr, [sp, #432]
    184c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1850:	add	x0, sp, #0x210
    1854:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1858:	add	sp, sp, #0x260
    185c:	ldp	x20, x19, [sp, #16]
    1860:	ldp	x29, x30, [sp], #32
    1864:	ret

0000000000001868 <__ubsan_handle_vla_bound_not_positive>:
    1868:	sub	sp, sp, #0x30
    186c:	stp	x29, x30, [sp, #32]
    1870:	add	x29, sp, #0x20
    1874:	ldur	w8, [x29, #-8]
    1878:	ldur	w9, [x29, #-5]
    187c:	mov	x2, sp
    1880:	strb	wzr, [sp]
    1884:	stur	w8, [sp, #1]
    1888:	str	w9, [sp, #4]
    188c:	stp	x30, x29, [sp, #8]
    1890:	bl	18a0 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE>
    1894:	ldp	x29, x30, [sp, #32]
    1898:	add	sp, sp, #0x30
    189c:	ret

00000000000018a0 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE>:
    18a0:	str	x29, [sp, #-64]!
    18a4:	stp	x30, x23, [sp, #16]
    18a8:	stp	x22, x21, [sp, #32]
    18ac:	stp	x20, x19, [sp, #48]
    18b0:	sub	sp, sp, #0x270
    18b4:	mov	x21, x2
    18b8:	mov	x19, x1
    18bc:	mov	x20, x0
    18c0:	add	x9, x0, #0xc
    18c4:	mov	w10, #0xffffffff            	// #-1
    18c8:	ldaxr	w8, [x9]
    18cc:	stlxr	w11, w10, [x9]
    18d0:	cbnz	w11, 18c8 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE+0x28>
    18d4:	ldr	w23, [x20, #8]
    18d8:	ldrb	w9, [x21]
    18dc:	ldr	x22, [x20]
    18e0:	bfi	x23, x8, #32, #32
    18e4:	cbz	w9, 1990 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE+0xf0>
    18e8:	ldr	x8, [x21, #16]
    18ec:	ldr	q0, [x21]
    18f0:	mov	w21, #0x1                   	// #1
    18f4:	add	x0, sp, #0x220
    18f8:	add	x1, sp, #0x200
    18fc:	add	x2, sp, #0x1d8
    1900:	mov	w3, #0x17                  	// #23
    1904:	str	w21, [sp, #472]
    1908:	str	x8, [sp, #528]
    190c:	str	q0, [sp, #512]
    1910:	stp	x22, x23, [sp, #480]
    1914:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    1918:	movi	v0.2d, #0x0
    191c:	str	d0, [sp, #376]
    1920:	str	d0, [sp, #416]
    1924:	ldr	q0, [sp, #16]
    1928:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    192c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1930:	add	x9, x9, #0x0
    1934:	stur	q0, [sp, #56]
    1938:	ldr	d0, [x8]
    193c:	str	w21, [sp, #32]
    1940:	stp	x22, x23, [sp, #40]
    1944:	str	wzr, [sp, #352]
    1948:	str	wzr, [sp, #360]
    194c:	str	xzr, [sp, #368]
    1950:	str	wzr, [sp, #400]
    1954:	str	xzr, [sp, #408]
    1958:	str	xzr, [sp, #440]
    195c:	str	wzr, [sp, #448]
    1960:	str	x9, [sp, #80]
    1964:	str	d0, [sp, #72]
    1968:	ldr	x8, [x20, #16]
    196c:	add	x0, sp, #0x20
    1970:	mov	x1, sp
    1974:	stp	x8, x19, [sp]
    1978:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    197c:	add	x0, sp, #0x20
    1980:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1984:	add	x0, sp, #0x220
    1988:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    198c:	b	19b0 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE+0x110>
    1990:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    1994:	cmp	x23, x8
    1998:	b.hi	19b0 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE+0x110>  // b.pmore
    199c:	ldr	x1, [x21, #8]
    19a0:	mov	w0, #0x17                  	// #23
    19a4:	mov	x2, x22
    19a8:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    19ac:	tbz	w0, #0, 18e8 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE+0x48>
    19b0:	add	sp, sp, #0x270
    19b4:	ldp	x20, x19, [sp, #48]
    19b8:	ldp	x22, x21, [sp, #32]
    19bc:	ldp	x30, x23, [sp, #16]
    19c0:	ldr	x29, [sp], #64
    19c4:	ret

00000000000019c8 <__ubsan_handle_vla_bound_not_positive_abort>:
    19c8:	sub	sp, sp, #0x30
    19cc:	stp	x29, x30, [sp, #32]
    19d0:	add	x29, sp, #0x20
    19d4:	ldur	w8, [x29, #-8]
    19d8:	ldur	w9, [x29, #-5]
    19dc:	mov	w10, #0x1                   	// #1
    19e0:	mov	x2, sp
    19e4:	strb	w10, [sp]
    19e8:	stur	w8, [sp, #1]
    19ec:	str	w9, [sp, #4]
    19f0:	stp	x30, x29, [sp, #8]
    19f4:	bl	18a0 <_ZL25handleVLABoundNotPositivePN7__ubsan12VLABoundDataEmNS_13ReportOptionsE>
    19f8:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000019fc <__ubsan_handle_float_cast_overflow>:
    19fc:	sub	sp, sp, #0x30
    1a00:	stp	x29, x30, [sp, #32]
    1a04:	add	x29, sp, #0x20
    1a08:	ldur	w8, [x29, #-8]
    1a0c:	ldur	w9, [x29, #-5]
    1a10:	mov	x2, sp
    1a14:	strb	wzr, [sp]
    1a18:	stur	w8, [sp, #1]
    1a1c:	str	w9, [sp, #4]
    1a20:	stp	x30, x29, [sp, #8]
    1a24:	bl	1a34 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE>
    1a28:	ldp	x29, x30, [sp, #32]
    1a2c:	add	sp, sp, #0x30
    1a30:	ret

0000000000001a34 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE>:
    1a34:	stp	x29, x30, [sp, #-80]!
    1a38:	stp	x26, x25, [sp, #16]
    1a3c:	stp	x24, x23, [sp, #32]
    1a40:	stp	x22, x21, [sp, #48]
    1a44:	stp	x20, x19, [sp, #64]
    1a48:	sub	sp, sp, #0x260
    1a4c:	mov	x22, x0
    1a50:	mov	x20, x2
    1a54:	mov	x19, x1
    1a58:	add	x0, sp, #0x10
    1a5c:	mov	w2, #0x8                   	// #8
    1a60:	mov	x1, x22
    1a64:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1a68:	ldr	x9, [sp, #16]
    1a6c:	ldrb	w8, [x9, #1]
    1a70:	cmp	w8, #0xff
    1a74:	b.eq	1acc <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x98>  // b.none
    1a78:	ldrb	w9, [x9]
    1a7c:	cmp	w9, #0xff
    1a80:	b.eq	1acc <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x98>  // b.none
    1a84:	add	w8, w8, w9
    1a88:	cmp	w8, #0x1
    1a8c:	b.ls	1acc <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x98>  // b.plast
    1a90:	add	x8, x22, #0xc
    1a94:	mov	w9, #0xffffffff            	// #-1
    1a98:	ldaxr	w24, [x8]
    1a9c:	stlxr	w10, w9, [x8]
    1aa0:	cbnz	w10, 1a98 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x64>
    1aa4:	ldr	x23, [x22]
    1aa8:	ldrb	w8, [x20]
    1aac:	ldr	w25, [x22, #8]
    1ab0:	cbz	w8, 1bd4 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x1a0>
    1ab4:	mov	x21, xzr
    1ab8:	add	x9, x22, #0x18
    1abc:	add	x22, x22, #0x10
    1ac0:	lsl	x8, x24, #32
    1ac4:	mov	w26, #0x1                   	// #1
    1ac8:	b	1af4 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0xc0>
    1acc:	ldr	x8, [x20, #8]
    1ad0:	cbz	x8, 1bf4 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x1c0>
    1ad4:	sub	x0, x8, #0x4
    1ad8:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
    1adc:	mov	x21, x0
    1ae0:	mov	x23, xzr
    1ae4:	mov	x25, xzr
    1ae8:	mov	x8, xzr
    1aec:	add	x9, x22, #0x8
    1af0:	mov	w26, #0x3                   	// #3
    1af4:	ldr	x24, [x9]
    1af8:	ldr	q0, [x20]
    1afc:	ldr	x9, [x20, #16]
    1b00:	ldr	x22, [x22]
    1b04:	orr	x20, x8, x25
    1b08:	add	x0, sp, #0x210
    1b0c:	add	x1, sp, #0x1f0
    1b10:	add	x2, sp, #0x1c8
    1b14:	mov	w3, #0x18                  	// #24
    1b18:	str	w26, [sp, #456]
    1b1c:	stp	x23, x20, [sp, #464]
    1b20:	str	x9, [sp, #512]
    1b24:	str	q0, [sp, #496]
    1b28:	str	x21, [sp, #488]
    1b2c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    1b30:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1b34:	movi	v0.2d, #0x0
    1b38:	str	d0, [sp, #360]
    1b3c:	str	d0, [sp, #400]
    1b40:	ldr	d0, [x8]
    1b44:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1b48:	add	x9, x9, #0x0
    1b4c:	add	x0, sp, #0x10
    1b50:	mov	x1, sp
    1b54:	str	w26, [sp, #16]
    1b58:	stp	x23, x20, [sp, #24]
    1b5c:	str	x21, [sp, #48]
    1b60:	str	wzr, [sp, #336]
    1b64:	str	wzr, [sp, #344]
    1b68:	str	xzr, [sp, #352]
    1b6c:	str	wzr, [sp, #384]
    1b70:	str	xzr, [sp, #392]
    1b74:	str	xzr, [sp, #424]
    1b78:	str	wzr, [sp, #432]
    1b7c:	str	x9, [sp, #64]
    1b80:	str	d0, [sp, #56]
    1b84:	stp	x22, x19, [sp]
    1b88:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1b8c:	mov	x1, x22
    1b90:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    1b94:	mov	x1, x24
    1b98:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    1b9c:	add	x0, sp, #0x10
    1ba0:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1ba4:	add	x0, sp, #0x210
    1ba8:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1bac:	cbz	x21, 1bb8 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x184>
    1bb0:	mov	x0, x21
    1bb4:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
    1bb8:	add	sp, sp, #0x260
    1bbc:	ldp	x20, x19, [sp, #64]
    1bc0:	ldp	x22, x21, [sp, #48]
    1bc4:	ldp	x24, x23, [sp, #32]
    1bc8:	ldp	x26, x25, [sp, #16]
    1bcc:	ldp	x29, x30, [sp], #80
    1bd0:	ret
    1bd4:	cmn	w24, #0x1
    1bd8:	b.eq	1bb8 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x184>  // b.none
    1bdc:	ldr	x1, [x20, #8]
    1be0:	mov	w0, #0x18                  	// #24
    1be4:	mov	x2, x23
    1be8:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    1bec:	tbz	w0, #0, 1ab4 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x80>
    1bf0:	b	1bb8 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE+0x184>
    1bf4:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1bf8:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1bfc:	add	x0, x0, #0x0
    1c00:	add	x2, x2, #0x0
    1c04:	mov	w1, #0x2c                  	// #44
    1c08:	mov	x3, xzr
    1c0c:	mov	x4, xzr
    1c10:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001c14 <__ubsan_handle_float_cast_overflow_abort>:
    1c14:	sub	sp, sp, #0x30
    1c18:	stp	x29, x30, [sp, #32]
    1c1c:	add	x29, sp, #0x20
    1c20:	ldur	w8, [x29, #-8]
    1c24:	ldur	w9, [x29, #-5]
    1c28:	mov	w10, #0x1                   	// #1
    1c2c:	mov	x2, sp
    1c30:	strb	w10, [sp]
    1c34:	stur	w8, [sp, #1]
    1c38:	str	w9, [sp, #4]
    1c3c:	stp	x30, x29, [sp, #8]
    1c40:	bl	1a34 <_ZL23handleFloatCastOverflowPvmN7__ubsan13ReportOptionsE>
    1c44:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000001c48 <__ubsan_handle_load_invalid_value>:
    1c48:	sub	sp, sp, #0x30
    1c4c:	stp	x29, x30, [sp, #32]
    1c50:	add	x29, sp, #0x20
    1c54:	ldur	w8, [x29, #-8]
    1c58:	ldur	w9, [x29, #-5]
    1c5c:	mov	x2, sp
    1c60:	strb	wzr, [sp]
    1c64:	stur	w8, [sp, #1]
    1c68:	str	w9, [sp, #4]
    1c6c:	stp	x30, x29, [sp, #8]
    1c70:	bl	1c80 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE>
    1c74:	ldp	x29, x30, [sp, #32]
    1c78:	add	sp, sp, #0x30
    1c7c:	ret

0000000000001c80 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE>:
    1c80:	str	x29, [sp, #-80]!
    1c84:	stp	x30, x25, [sp, #16]
    1c88:	stp	x24, x23, [sp, #32]
    1c8c:	stp	x22, x21, [sp, #48]
    1c90:	stp	x20, x19, [sp, #64]
    1c94:	sub	sp, sp, #0x270
    1c98:	mov	x23, x2
    1c9c:	mov	x20, x1
    1ca0:	mov	x19, x0
    1ca4:	add	x8, x0, #0xc
    1ca8:	mov	w9, #0xffffffff            	// #-1
    1cac:	ldaxr	w25, [x8]
    1cb0:	stlxr	w10, w9, [x8]
    1cb4:	cbnz	w10, 1cac <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x2c>
    1cb8:	ldr	x8, [x19, #16]
    1cbc:	ldr	x22, [x19]
    1cc0:	ldr	w24, [x19, #8]
    1cc4:	adrp	x1, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1cc8:	add	x0, x8, #0x4
    1ccc:	add	x1, x1, #0x0
    1cd0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
    1cd4:	mov	w21, #0x19                  	// #25
    1cd8:	cbz	w0, 1cfc <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x7c>
    1cdc:	ldr	x8, [x19, #16]
    1ce0:	adrp	x1, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1ce4:	add	x1, x1, #0x0
    1ce8:	mov	w2, #0x6                   	// #6
    1cec:	add	x0, x8, #0x4
    1cf0:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1cf4:	cmp	w0, #0x0
    1cf8:	cinc	w21, w21, ne  // ne = any
    1cfc:	ldrb	w8, [x23]
    1d00:	bfi	x24, x25, #32, #32
    1d04:	cbz	w8, 1db0 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x130>
    1d08:	ldr	x8, [x23, #16]
    1d0c:	ldr	q0, [x23]
    1d10:	mov	w23, #0x1                   	// #1
    1d14:	add	x0, sp, #0x220
    1d18:	add	x1, sp, #0x200
    1d1c:	add	x2, sp, #0x1d8
    1d20:	mov	w3, w21
    1d24:	str	w23, [sp, #472]
    1d28:	str	x8, [sp, #528]
    1d2c:	str	q0, [sp, #512]
    1d30:	stp	x22, x24, [sp, #480]
    1d34:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    1d38:	movi	v0.2d, #0x0
    1d3c:	str	d0, [sp, #376]
    1d40:	str	d0, [sp, #416]
    1d44:	ldr	q0, [sp, #16]
    1d48:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1d4c:	add	x8, x8, #0x0
    1d50:	str	w23, [sp, #32]
    1d54:	stp	x22, x24, [sp, #40]
    1d58:	stp	wzr, w21, [sp, #72]
    1d5c:	str	wzr, [sp, #352]
    1d60:	str	wzr, [sp, #360]
    1d64:	str	xzr, [sp, #368]
    1d68:	str	wzr, [sp, #400]
    1d6c:	str	xzr, [sp, #408]
    1d70:	str	xzr, [sp, #440]
    1d74:	str	wzr, [sp, #448]
    1d78:	str	x8, [sp, #80]
    1d7c:	stur	q0, [sp, #56]
    1d80:	ldr	x8, [x19, #16]
    1d84:	add	x0, sp, #0x20
    1d88:	mov	x1, sp
    1d8c:	stp	x8, x20, [sp]
    1d90:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    1d94:	ldr	x1, [x19, #16]
    1d98:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    1d9c:	add	x0, sp, #0x20
    1da0:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    1da4:	add	x0, sp, #0x220
    1da8:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    1dac:	b	1dd0 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x150>
    1db0:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    1db4:	cmp	x24, x8
    1db8:	b.hi	1dd0 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x150>  // b.pmore
    1dbc:	ldr	x1, [x23, #8]
    1dc0:	mov	w0, w21
    1dc4:	mov	x2, x22
    1dc8:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    1dcc:	tbz	w0, #0, 1d08 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE+0x88>
    1dd0:	add	sp, sp, #0x270
    1dd4:	ldp	x20, x19, [sp, #64]
    1dd8:	ldp	x22, x21, [sp, #48]
    1ddc:	ldp	x24, x23, [sp, #32]
    1de0:	ldp	x30, x25, [sp, #16]
    1de4:	ldr	x29, [sp], #80
    1de8:	ret

0000000000001dec <__ubsan_handle_load_invalid_value_abort>:
    1dec:	sub	sp, sp, #0x30
    1df0:	stp	x29, x30, [sp, #32]
    1df4:	add	x29, sp, #0x20
    1df8:	ldur	w8, [x29, #-8]
    1dfc:	ldur	w9, [x29, #-5]
    1e00:	mov	w10, #0x1                   	// #1
    1e04:	mov	x2, sp
    1e08:	strb	w10, [sp]
    1e0c:	stur	w8, [sp, #1]
    1e10:	str	w9, [sp, #4]
    1e14:	stp	x30, x29, [sp, #8]
    1e18:	bl	1c80 <_ZL22handleLoadInvalidValuePN7__ubsan16InvalidValueDataEmNS_13ReportOptionsE>
    1e1c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000001e20 <__ubsan_handle_implicit_conversion>:
    1e20:	sub	sp, sp, #0x30
    1e24:	stp	x29, x30, [sp, #32]
    1e28:	add	x29, sp, #0x20
    1e2c:	ldur	w8, [x29, #-8]
    1e30:	ldur	w9, [x29, #-5]
    1e34:	mov	x3, x2
    1e38:	mov	x2, x1
    1e3c:	mov	x1, sp
    1e40:	strb	wzr, [sp]
    1e44:	stur	w8, [sp, #1]
    1e48:	str	w9, [sp, #4]
    1e4c:	stp	x30, x29, [sp, #8]
    1e50:	bl	1e60 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm>
    1e54:	ldp	x29, x30, [sp, #32]
    1e58:	add	sp, sp, #0x30
    1e5c:	ret

0000000000001e60 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm>:
    1e60:	stp	x29, x30, [sp, #-96]!
    1e64:	stp	x28, x27, [sp, #16]
    1e68:	stp	x26, x25, [sp, #32]
    1e6c:	stp	x24, x23, [sp, #48]
    1e70:	stp	x22, x21, [sp, #64]
    1e74:	stp	x20, x19, [sp, #80]
    1e78:	sub	sp, sp, #0x2a0
    1e7c:	mov	x19, x3
    1e80:	mov	x22, x2
    1e84:	mov	x23, x1
    1e88:	add	x26, sp, #0x294
    1e8c:	add	x9, x0, #0xc
    1e90:	mov	w10, #0xffffffff            	// #-1
    1e94:	ldaxr	w8, [x9]
    1e98:	stlxr	w11, w10, [x9]
    1e9c:	cbnz	w11, 1e94 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x34>
    1ea0:	ldp	x21, x20, [x0, #16]
    1ea4:	ldr	x24, [x0]
    1ea8:	ldr	w29, [x0, #8]
    1eac:	ldrh	w9, [x21]
    1eb0:	cbz	w9, 1f08 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0xa8>
    1eb4:	mov	w28, wzr
    1eb8:	ldrh	w9, [x20]
    1ebc:	cbz	w9, 1f18 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0xb8>
    1ec0:	mov	w27, wzr
    1ec4:	ldrb	w9, [x0, #32]
    1ec8:	cmp	w9, #0x4
    1ecc:	b.hi	1f2c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0xcc>  // b.pmore
    1ed0:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1ed4:	add	x10, x10, #0x0
    1ed8:	adr	x11, 1ee8 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x88>
    1edc:	ldrb	w12, [x10, x9]
    1ee0:	add	x11, x11, x12, lsl #2
    1ee4:	br	x11
    1ee8:	orr	w9, w28, w27
    1eec:	cmp	w9, #0x0
    1ef0:	mov	w9, #0xe                   	// #14
    1ef4:	cinc	w25, w9, ne  // ne = any
    1ef8:	ldrb	w9, [x23]
    1efc:	bfi	x29, x8, #32, #32
    1f00:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f04:	b	1f8c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x12c>
    1f08:	ldrb	w9, [x21, #2]
    1f0c:	and	w28, w9, #0x1
    1f10:	ldrh	w9, [x20]
    1f14:	cbnz	w9, 1ec0 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x60>
    1f18:	ldrb	w9, [x20, #2]
    1f1c:	and	w27, w9, #0x1
    1f20:	ldrb	w9, [x0, #32]
    1f24:	cmp	w9, #0x4
    1f28:	b.ls	1ed0 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x70>  // b.plast
    1f2c:	mov	w25, wzr
    1f30:	ldrb	w9, [x23]
    1f34:	bfi	x29, x8, #32, #32
    1f38:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f3c:	b	1f8c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x12c>
    1f40:	mov	w25, #0x11                  	// #17
    1f44:	ldrb	w9, [x23]
    1f48:	bfi	x29, x8, #32, #32
    1f4c:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f50:	b	1f8c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x12c>
    1f54:	mov	w25, #0xf                   	// #15
    1f58:	ldrb	w9, [x23]
    1f5c:	bfi	x29, x8, #32, #32
    1f60:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f64:	b	1f8c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x12c>
    1f68:	mov	w25, #0x10                  	// #16
    1f6c:	ldrb	w9, [x23]
    1f70:	bfi	x29, x8, #32, #32
    1f74:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f78:	b	1f8c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x12c>
    1f7c:	mov	w25, #0xe                   	// #14
    1f80:	ldrb	w9, [x23]
    1f84:	bfi	x29, x8, #32, #32
    1f88:	cbnz	w9, 1fac <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x14c>
    1f8c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    1f90:	cmp	x29, x8
    1f94:	b.hi	217c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x31c>  // b.pmore
    1f98:	ldr	x1, [x23, #8]
    1f9c:	mov	w0, w25
    1fa0:	mov	x2, x24
    1fa4:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    1fa8:	tbnz	w0, #0, 217c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x31c>
    1fac:	ldr	x8, [x23, #16]
    1fb0:	ldr	q0, [x23]
    1fb4:	mov	w23, #0x1                   	// #1
    1fb8:	add	x0, sp, #0x240
    1fbc:	add	x1, sp, #0x220
    1fc0:	add	x2, sp, #0x1f8
    1fc4:	mov	w3, w25
    1fc8:	str	w23, [sp, #504]
    1fcc:	str	x8, [sp, #560]
    1fd0:	str	q0, [sp, #544]
    1fd4:	str	x24, [sp, #512]
    1fd8:	str	x29, [sp, #520]
    1fdc:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    1fe0:	movi	v0.2d, #0x0
    1fe4:	str	d0, [sp, #408]
    1fe8:	str	d0, [sp, #448]
    1fec:	ldr	q0, [sp, #48]
    1ff0:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    1ff4:	add	x8, x8, #0x0
    1ff8:	add	x0, sp, #0x40
    1ffc:	mov	x1, x21
    2000:	str	w23, [sp, #64]
    2004:	stp	x24, x29, [sp, #72]
    2008:	stp	wzr, w25, [sp, #104]
    200c:	str	wzr, [sp, #384]
    2010:	str	wzr, [sp, #392]
    2014:	str	xzr, [sp, #400]
    2018:	str	wzr, [sp, #432]
    201c:	str	xzr, [sp, #440]
    2020:	str	xzr, [sp, #472]
    2024:	str	x8, [sp, #112]
    2028:	stur	q0, [sp, #88]
    202c:	str	wzr, [sp, #480]
    2030:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    2034:	add	x1, sp, #0x20
    2038:	stp	x21, x22, [sp, #32]
    203c:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    2040:	ldrh	w8, [x21]
    2044:	cbnz	w8, 21b4 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x354>
    2048:	ldr	w8, [x0, #320]
    204c:	cmp	w8, #0x8
    2050:	b.eq	219c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x33c>  // b.none
    2054:	ldrh	w9, [x21, #2]
    2058:	add	w11, w8, #0x1
    205c:	add	x8, x0, x8, lsl #5
    2060:	mov	w12, #0x2                   	// #2
    2064:	str	w11, [x0, #320]
    2068:	str	w12, [x8, #64]
    206c:	ldr	w11, [sp, #668]
    2070:	ldr	x12, [x26]
    2074:	mov	w10, #0x1                   	// #1
    2078:	lsr	w9, w9, #1
    207c:	lsl	w9, w10, w9
    2080:	str	w11, [x8, #76]
    2084:	stur	x12, [x8, #68]
    2088:	stp	x9, xzr, [x8, #80]
    208c:	ldr	w8, [x0, #320]
    2090:	cmp	w8, #0x8
    2094:	b.eq	219c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x33c>  // b.none
    2098:	add	w9, w8, #0x1
    209c:	add	x8, x0, x8, lsl #5
    20a0:	str	w9, [x0, #320]
    20a4:	str	wzr, [x8, #64]
    20a8:	ldr	w9, [sp, #668]
    20ac:	ldr	x10, [x26]
    20b0:	adrp	x21, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    20b4:	adrp	x22, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    20b8:	add	x21, x21, #0x0
    20bc:	add	x22, x22, #0x0
    20c0:	cmp	w28, #0x0
    20c4:	csel	x11, x22, x21, ne  // ne = any
    20c8:	mov	x1, x20
    20cc:	str	w9, [x8, #76]
    20d0:	stur	x10, [x8, #68]
    20d4:	str	x11, [x8, #80]
    20d8:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    20dc:	add	x1, sp, #0x10
    20e0:	stp	x20, x19, [sp, #16]
    20e4:	bl	0 <_ZN7__ubsan4DiaglsERKNS_5ValueE>
    20e8:	ldrh	w8, [x20]
    20ec:	cbnz	w8, 21b4 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x354>
    20f0:	ldr	w8, [x0, #320]
    20f4:	cmp	w8, #0x8
    20f8:	b.eq	219c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x33c>  // b.none
    20fc:	ldrh	w9, [x20, #2]
    2100:	add	w11, w8, #0x1
    2104:	add	x8, x0, x8, lsl #5
    2108:	mov	w12, #0x2                   	// #2
    210c:	str	w11, [x0, #320]
    2110:	str	w12, [x8, #64]
    2114:	ldr	w11, [sp, #668]
    2118:	ldr	x12, [x26]
    211c:	mov	w10, #0x1                   	// #1
    2120:	lsr	w9, w9, #1
    2124:	lsl	w9, w10, w9
    2128:	str	w11, [x8, #76]
    212c:	stur	x12, [x8, #68]
    2130:	stp	x9, xzr, [x8, #80]
    2134:	ldr	w8, [x0, #320]
    2138:	cmp	w8, #0x8
    213c:	b.eq	219c <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x33c>  // b.none
    2140:	add	w9, w8, #0x1
    2144:	add	x8, x0, x8, lsl #5
    2148:	str	w9, [x0, #320]
    214c:	str	wzr, [x8, #64]
    2150:	ldr	w9, [sp, #668]
    2154:	ldr	x10, [x26]
    2158:	cmp	w27, #0x0
    215c:	csel	x11, x22, x21, ne  // ne = any
    2160:	add	x0, sp, #0x40
    2164:	str	w9, [x8, #76]
    2168:	stur	x10, [x8, #68]
    216c:	str	x11, [x8, #80]
    2170:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2174:	add	x0, sp, #0x240
    2178:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    217c:	add	sp, sp, #0x2a0
    2180:	ldp	x20, x19, [sp, #80]
    2184:	ldp	x22, x21, [sp, #64]
    2188:	ldp	x24, x23, [sp, #48]
    218c:	ldp	x26, x25, [sp, #32]
    2190:	ldp	x28, x27, [sp, #16]
    2194:	ldp	x29, x30, [sp], #96
    2198:	ret
    219c:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    21a0:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    21a4:	add	x0, x0, #0x0
    21a8:	add	x2, x2, #0x0
    21ac:	mov	w1, #0xc0                  	// #192
    21b0:	b	21c8 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm+0x368>
    21b4:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    21b8:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    21bc:	add	x0, x0, #0x0
    21c0:	add	x2, x2, #0x0
    21c4:	mov	w1, #0x7c                  	// #124
    21c8:	mov	x3, xzr
    21cc:	mov	x4, xzr
    21d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000021d4 <__ubsan_handle_implicit_conversion_abort>:
    21d4:	sub	sp, sp, #0x30
    21d8:	stp	x29, x30, [sp, #32]
    21dc:	add	x29, sp, #0x20
    21e0:	ldur	w8, [x29, #-8]
    21e4:	ldur	w9, [x29, #-5]
    21e8:	mov	x3, x2
    21ec:	mov	x2, x1
    21f0:	mov	w10, #0x1                   	// #1
    21f4:	mov	x1, sp
    21f8:	strb	w10, [sp]
    21fc:	stur	w8, [sp, #1]
    2200:	str	w9, [sp, #4]
    2204:	stp	x30, x29, [sp, #8]
    2208:	bl	1e60 <_ZL24handleImplicitConversionPN7__ubsan22ImplicitConversionDataENS_13ReportOptionsEmm>
    220c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000002210 <__ubsan_handle_invalid_builtin>:
    2210:	sub	sp, sp, #0x30
    2214:	stp	x29, x30, [sp, #32]
    2218:	add	x29, sp, #0x20
    221c:	ldur	w8, [x29, #-8]
    2220:	ldur	w9, [x29, #-5]
    2224:	mov	w10, #0x1                   	// #1
    2228:	mov	x1, sp
    222c:	strb	w10, [sp]
    2230:	stur	w8, [sp, #1]
    2234:	str	w9, [sp, #4]
    2238:	stp	x30, x29, [sp, #8]
    223c:	bl	224c <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE>
    2240:	ldp	x29, x30, [sp, #32]
    2244:	add	sp, sp, #0x30
    2248:	ret

000000000000224c <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE>:
    224c:	stp	x29, x30, [sp, #-48]!
    2250:	stp	x22, x21, [sp, #16]
    2254:	stp	x20, x19, [sp, #32]
    2258:	sub	sp, sp, #0x270
    225c:	mov	x20, x1
    2260:	mov	x19, x0
    2264:	add	x9, x0, #0xc
    2268:	mov	w10, #0xffffffff            	// #-1
    226c:	ldaxr	w8, [x9]
    2270:	stlxr	w11, w10, [x9]
    2274:	cbnz	w11, 226c <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE+0x20>
    2278:	ldr	w22, [x19, #8]
    227c:	ldrb	w9, [x20]
    2280:	ldr	x21, [x19]
    2284:	bfi	x22, x8, #32, #32
    2288:	cbz	w9, 2358 <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE+0x10c>
    228c:	ldr	x8, [x20, #16]
    2290:	ldr	q0, [x20]
    2294:	mov	w20, #0x1                   	// #1
    2298:	add	x0, sp, #0x210
    229c:	add	x1, sp, #0x1f0
    22a0:	add	x2, sp, #0x1c8
    22a4:	mov	w3, #0xd                   	// #13
    22a8:	str	w20, [sp, #456]
    22ac:	str	x8, [sp, #512]
    22b0:	str	q0, [sp, #496]
    22b4:	stp	x21, x22, [sp, #464]
    22b8:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    22bc:	movi	v0.2d, #0x0
    22c0:	str	d0, [sp, #360]
    22c4:	str	d0, [sp, #400]
    22c8:	ldr	q0, [sp]
    22cc:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    22d0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    22d4:	add	x9, x9, #0x0
    22d8:	stur	q0, [sp, #40]
    22dc:	ldr	d0, [x8]
    22e0:	str	x9, [sp, #64]
    22e4:	add	x9, sp, #0x165
    22e8:	ldur	x9, [x9, #255]
    22ec:	str	w20, [sp, #16]
    22f0:	stp	x21, x22, [sp, #24]
    22f4:	str	wzr, [sp, #344]
    22f8:	str	xzr, [sp, #352]
    22fc:	str	wzr, [sp, #384]
    2300:	str	xzr, [sp, #392]
    2304:	str	xzr, [sp, #424]
    2308:	str	wzr, [sp, #432]
    230c:	str	d0, [sp, #56]
    2310:	ldrb	w10, [x19, #16]
    2314:	stur	x9, [sp, #84]
    2318:	ldr	w9, [sp, #620]
    231c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2320:	adrp	x11, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2324:	add	x8, x8, #0x0
    2328:	add	x11, x11, #0x0
    232c:	cmp	w10, #0x0
    2330:	csel	x8, x11, x8, eq  // eq = none
    2334:	add	x0, sp, #0x10
    2338:	str	w20, [sp, #336]
    233c:	str	wzr, [sp, #80]
    2340:	str	w9, [sp, #92]
    2344:	str	x8, [sp, #96]
    2348:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    234c:	add	x0, sp, #0x210
    2350:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    2354:	b	2378 <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE+0x12c>
    2358:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    235c:	cmp	x22, x8
    2360:	b.hi	2378 <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE+0x12c>  // b.pmore
    2364:	ldr	x1, [x20, #8]
    2368:	mov	w0, #0xd                   	// #13
    236c:	mov	x2, x21
    2370:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    2374:	tbz	w0, #0, 228c <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE+0x40>
    2378:	add	sp, sp, #0x270
    237c:	ldp	x20, x19, [sp, #32]
    2380:	ldp	x22, x21, [sp, #16]
    2384:	ldp	x29, x30, [sp], #48
    2388:	ret

000000000000238c <__ubsan_handle_invalid_builtin_abort>:
    238c:	sub	sp, sp, #0x30
    2390:	stp	x29, x30, [sp, #32]
    2394:	add	x29, sp, #0x20
    2398:	ldur	w8, [x29, #-8]
    239c:	ldur	w9, [x29, #-5]
    23a0:	mov	w10, #0x1                   	// #1
    23a4:	mov	x1, sp
    23a8:	strb	w10, [sp]
    23ac:	stur	w8, [sp, #1]
    23b0:	str	w9, [sp, #4]
    23b4:	stp	x30, x29, [sp, #8]
    23b8:	bl	224c <_ZL20handleInvalidBuiltinPN7__ubsan18InvalidBuiltinDataENS_13ReportOptionsE>
    23bc:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000023c0 <__ubsan_handle_nonnull_return_v1>:
    23c0:	sub	sp, sp, #0x30
    23c4:	stp	x29, x30, [sp, #32]
    23c8:	add	x29, sp, #0x20
    23cc:	ldur	w8, [x29, #-8]
    23d0:	ldur	w9, [x29, #-5]
    23d4:	mov	x2, sp
    23d8:	mov	w3, #0x1                   	// #1
    23dc:	strb	wzr, [sp]
    23e0:	stur	w8, [sp, #1]
    23e4:	str	w9, [sp, #4]
    23e8:	stp	x30, x29, [sp, #8]
    23ec:	bl	23fc <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb>
    23f0:	ldp	x29, x30, [sp, #32]
    23f4:	add	sp, sp, #0x30
    23f8:	ret

00000000000023fc <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb>:
    23fc:	str	x29, [sp, #-64]!
    2400:	stp	x30, x23, [sp, #16]
    2404:	stp	x22, x21, [sp, #32]
    2408:	stp	x20, x19, [sp, #48]
    240c:	sub	sp, sp, #0x430
    2410:	cbz	x1, 25b4 <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x1b8>
    2414:	mov	w19, w3
    2418:	mov	x21, x2
    241c:	mov	x20, x0
    2420:	add	x9, x1, #0xc
    2424:	mov	w10, #0xffffffff            	// #-1
    2428:	ldaxr	w8, [x9]
    242c:	stlxr	w11, w10, [x9]
    2430:	cbnz	w11, 2428 <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x2c>
    2434:	ldr	w23, [x1, #8]
    2438:	ldrb	w9, [x21]
    243c:	ldr	x22, [x1]
    2440:	bfi	x23, x8, #32, #32
    2444:	cbz	w9, 257c <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x180>
    2448:	ldr	x8, [x21, #16]
    244c:	ldr	q0, [x21]
    2450:	mov	w21, #0x1                   	// #1
    2454:	add	x0, sp, #0x3d0
    2458:	add	x1, sp, #0x3b0
    245c:	add	x2, sp, #0x388
    2460:	mov	w3, #0x1c                  	// #28
    2464:	str	w21, [sp, #904]
    2468:	str	x8, [sp, #960]
    246c:	str	q0, [sp, #944]
    2470:	str	x22, [sp, #912]
    2474:	str	x23, [sp, #920]
    2478:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    247c:	movi	v0.2d, #0x0
    2480:	str	d0, [sp, #808]
    2484:	str	d0, [sp, #848]
    2488:	ldr	q0, [sp, #448]
    248c:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2490:	add	x10, sp, #0xe9
    2494:	str	w21, [sp, #464]
    2498:	stp	x22, x23, [sp, #472]
    249c:	str	wzr, [sp, #784]
    24a0:	str	wzr, [sp, #792]
    24a4:	str	xzr, [sp, #800]
    24a8:	str	wzr, [sp, #832]
    24ac:	stur	q0, [x10, #255]
    24b0:	ldr	d0, [x8]
    24b4:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    24b8:	add	x9, x9, #0x0
    24bc:	add	x0, sp, #0x1d0
    24c0:	str	xzr, [sp, #840]
    24c4:	str	xzr, [sp, #872]
    24c8:	str	x9, [sp, #512]
    24cc:	str	d0, [sp, #504]
    24d0:	str	wzr, [sp, #880]
    24d4:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    24d8:	ldr	x8, [x20]
    24dc:	cbz	x8, 2570 <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x174>
    24e0:	movi	v0.2d, #0x0
    24e4:	ldr	x9, [x20, #8]
    24e8:	str	d0, [sp, #360]
    24ec:	str	d0, [sp, #400]
    24f0:	ldr	q0, [sp]
    24f4:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    24f8:	adrp	x12, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    24fc:	tst	w19, #0x1
    2500:	stur	q0, [sp, #40]
    2504:	ldr	d0, [x10]
    2508:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    250c:	adrp	x11, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2510:	add	x12, x12, #0x0
    2514:	add	x10, x10, #0x0
    2518:	add	x11, x11, #0x0
    251c:	csel	x10, x10, x12, ne  // ne = any
    2520:	add	x12, sp, #0x325
    2524:	str	x11, [sp, #64]
    2528:	ldr	w11, [sp, #1068]
    252c:	ldur	x12, [x12, #255]
    2530:	add	x0, sp, #0x10
    2534:	str	w21, [sp, #16]
    2538:	str	wzr, [sp, #344]
    253c:	str	xzr, [sp, #352]
    2540:	str	wzr, [sp, #384]
    2544:	str	xzr, [sp, #392]
    2548:	str	xzr, [sp, #424]
    254c:	str	wzr, [sp, #432]
    2550:	str	w21, [sp, #336]
    2554:	str	wzr, [sp, #80]
    2558:	stp	x8, x9, [sp, #24]
    255c:	str	w11, [sp, #92]
    2560:	stur	x12, [sp, #84]
    2564:	str	d0, [sp, #56]
    2568:	str	x10, [sp, #96]
    256c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2570:	add	x0, sp, #0x3d0
    2574:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    2578:	b	259c <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x1a0>
    257c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    2580:	cmp	x23, x8
    2584:	b.hi	259c <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x1a0>  // b.pmore
    2588:	ldr	x1, [x21, #8]
    258c:	mov	w0, #0x1c                  	// #28
    2590:	mov	x2, x22
    2594:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    2598:	tbz	w0, #0, 2448 <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb+0x4c>
    259c:	add	sp, sp, #0x430
    25a0:	ldp	x20, x19, [sp, #48]
    25a4:	ldp	x22, x21, [sp, #32]
    25a8:	ldp	x30, x23, [sp, #16]
    25ac:	ldr	x29, [sp], #64
    25b0:	ret
    25b4:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    25b8:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    25bc:	add	x0, x0, #0x0
    25c0:	add	x2, x2, #0x0
    25c4:	mov	w1, #0x25c                 	// #604
    25c8:	mov	x3, xzr
    25cc:	mov	x4, xzr
    25d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000025d4 <__ubsan_handle_nonnull_return_v1_abort>:
    25d4:	sub	sp, sp, #0x30
    25d8:	stp	x29, x30, [sp, #32]
    25dc:	add	x29, sp, #0x20
    25e0:	ldur	w8, [x29, #-8]
    25e4:	ldur	w9, [x29, #-5]
    25e8:	mov	w10, #0x1                   	// #1
    25ec:	mov	x2, sp
    25f0:	mov	w3, #0x1                   	// #1
    25f4:	strb	w10, [sp]
    25f8:	stur	w8, [sp, #1]
    25fc:	str	w9, [sp, #4]
    2600:	stp	x30, x29, [sp, #8]
    2604:	bl	23fc <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb>
    2608:	bl	0 <_ZN11__sanitizer3DieEv>

000000000000260c <__ubsan_handle_nullability_return_v1>:
    260c:	sub	sp, sp, #0x30
    2610:	stp	x29, x30, [sp, #32]
    2614:	add	x29, sp, #0x20
    2618:	ldur	w8, [x29, #-8]
    261c:	ldur	w9, [x29, #-5]
    2620:	mov	x2, sp
    2624:	mov	w3, wzr
    2628:	strb	wzr, [sp]
    262c:	stur	w8, [sp, #1]
    2630:	str	w9, [sp, #4]
    2634:	stp	x30, x29, [sp, #8]
    2638:	bl	23fc <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb>
    263c:	ldp	x29, x30, [sp, #32]
    2640:	add	sp, sp, #0x30
    2644:	ret

0000000000002648 <__ubsan_handle_nullability_return_v1_abort>:
    2648:	sub	sp, sp, #0x30
    264c:	stp	x29, x30, [sp, #32]
    2650:	add	x29, sp, #0x20
    2654:	ldur	w8, [x29, #-8]
    2658:	ldur	w9, [x29, #-5]
    265c:	mov	w10, #0x1                   	// #1
    2660:	mov	x2, sp
    2664:	mov	w3, wzr
    2668:	strb	w10, [sp]
    266c:	stur	w8, [sp, #1]
    2670:	str	w9, [sp, #4]
    2674:	stp	x30, x29, [sp, #8]
    2678:	bl	23fc <_ZL19handleNonNullReturnPN7__ubsan17NonNullReturnDataEPNS_14SourceLocationENS_13ReportOptionsEb>
    267c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000002680 <__ubsan_handle_nonnull_arg>:
    2680:	sub	sp, sp, #0x30
    2684:	stp	x29, x30, [sp, #32]
    2688:	add	x29, sp, #0x20
    268c:	ldur	w8, [x29, #-8]
    2690:	ldur	w9, [x29, #-5]
    2694:	mov	x1, sp
    2698:	mov	w2, #0x1                   	// #1
    269c:	strb	wzr, [sp]
    26a0:	stur	w8, [sp, #1]
    26a4:	str	w9, [sp, #4]
    26a8:	stp	x30, x29, [sp, #8]
    26ac:	bl	26bc <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb>
    26b0:	ldp	x29, x30, [sp, #32]
    26b4:	add	sp, sp, #0x30
    26b8:	ret

00000000000026bc <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb>:
    26bc:	stp	x29, x30, [sp, #-64]!
    26c0:	stp	x24, x23, [sp, #16]
    26c4:	stp	x22, x21, [sp, #32]
    26c8:	stp	x20, x19, [sp, #48]
    26cc:	sub	sp, sp, #0x280
    26d0:	mov	w19, w2
    26d4:	mov	x21, x1
    26d8:	mov	x20, x0
    26dc:	add	x23, sp, #0x274
    26e0:	add	x9, x0, #0xc
    26e4:	mov	w10, #0xffffffff            	// #-1
    26e8:	ldaxr	w8, [x9]
    26ec:	stlxr	w11, w10, [x9]
    26f0:	cbnz	w11, 26e8 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x2c>
    26f4:	ldr	w24, [x20, #8]
    26f8:	ldrb	w9, [x21]
    26fc:	ldr	x22, [x20]
    2700:	bfi	x24, x8, #32, #32
    2704:	cbz	w9, 2850 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x194>
    2708:	ldr	x8, [x21, #16]
    270c:	ldr	q0, [x21]
    2710:	mov	w21, #0x1                   	// #1
    2714:	add	x0, sp, #0x220
    2718:	add	x1, sp, #0x200
    271c:	add	x2, sp, #0x1d8
    2720:	mov	w3, #0x1d                  	// #29
    2724:	str	w21, [sp, #472]
    2728:	str	x8, [sp, #528]
    272c:	str	q0, [sp, #512]
    2730:	stp	x22, x24, [sp, #480]
    2734:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    2738:	movi	v0.2d, #0x0
    273c:	str	d0, [sp, #376]
    2740:	str	d0, [sp, #416]
    2744:	ldr	q0, [sp, #16]
    2748:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    274c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2750:	add	x9, x9, #0x0
    2754:	stur	q0, [sp, #56]
    2758:	ldr	d0, [x8]
    275c:	str	w21, [sp, #32]
    2760:	stp	x22, x24, [sp, #40]
    2764:	str	wzr, [sp, #360]
    2768:	str	xzr, [sp, #368]
    276c:	str	wzr, [sp, #400]
    2770:	str	xzr, [sp, #408]
    2774:	str	xzr, [sp, #440]
    2778:	str	wzr, [sp, #448]
    277c:	str	x9, [sp, #80]
    2780:	str	d0, [sp, #72]
    2784:	ldr	w8, [sp, #636]
    2788:	ldr	x11, [x23]
    278c:	ldrsw	x9, [x20, #32]
    2790:	mov	w10, #0x2                   	// #2
    2794:	add	x0, sp, #0x20
    2798:	str	w10, [sp, #96]
    279c:	str	w8, [sp, #108]
    27a0:	str	w21, [sp, #352]
    27a4:	stur	x11, [sp, #100]
    27a8:	stp	x9, xzr, [sp, #112]
    27ac:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    27b0:	ldr	x8, [x20, #16]
    27b4:	cbz	x8, 2844 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x188>
    27b8:	movi	v0.2d, #0x0
    27bc:	ldr	x9, [x20, #24]
    27c0:	str	d0, [sp, #376]
    27c4:	str	d0, [sp, #416]
    27c8:	ldr	q0, [sp]
    27cc:	adrp	x11, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    27d0:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    27d4:	add	x11, x11, #0x0
    27d8:	stur	q0, [sp, #56]
    27dc:	ldr	d0, [x10]
    27e0:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    27e4:	str	x11, [sp, #80]
    27e8:	adrp	x11, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    27ec:	tst	w19, #0x1
    27f0:	add	x10, x10, #0x0
    27f4:	add	x11, x11, #0x0
    27f8:	csel	x10, x11, x10, ne  // ne = any
    27fc:	ldr	w11, [sp, #636]
    2800:	ldr	x12, [x23]
    2804:	add	x0, sp, #0x20
    2808:	str	w21, [sp, #32]
    280c:	str	w21, [sp, #352]
    2810:	str	wzr, [sp, #360]
    2814:	str	xzr, [sp, #368]
    2818:	str	wzr, [sp, #400]
    281c:	str	xzr, [sp, #408]
    2820:	str	xzr, [sp, #440]
    2824:	str	wzr, [sp, #448]
    2828:	str	wzr, [sp, #96]
    282c:	stp	x8, x9, [sp, #40]
    2830:	str	w11, [sp, #108]
    2834:	stur	x12, [sp, #100]
    2838:	str	d0, [sp, #72]
    283c:	str	x10, [sp, #112]
    2840:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2844:	add	x0, sp, #0x220
    2848:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    284c:	b	2870 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x1b4>
    2850:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    2854:	cmp	x24, x8
    2858:	b.hi	2870 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x1b4>  // b.pmore
    285c:	ldr	x1, [x21, #8]
    2860:	mov	w0, #0x1d                  	// #29
    2864:	mov	x2, x22
    2868:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    286c:	tbz	w0, #0, 2708 <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb+0x4c>
    2870:	add	sp, sp, #0x280
    2874:	ldp	x20, x19, [sp, #48]
    2878:	ldp	x22, x21, [sp, #32]
    287c:	ldp	x24, x23, [sp, #16]
    2880:	ldp	x29, x30, [sp], #64
    2884:	ret

0000000000002888 <__ubsan_handle_nonnull_arg_abort>:
    2888:	sub	sp, sp, #0x30
    288c:	stp	x29, x30, [sp, #32]
    2890:	add	x29, sp, #0x20
    2894:	ldur	w8, [x29, #-8]
    2898:	ldur	w9, [x29, #-5]
    289c:	mov	w10, #0x1                   	// #1
    28a0:	mov	x1, sp
    28a4:	mov	w2, #0x1                   	// #1
    28a8:	strb	w10, [sp]
    28ac:	stur	w8, [sp, #1]
    28b0:	str	w9, [sp, #4]
    28b4:	stp	x30, x29, [sp, #8]
    28b8:	bl	26bc <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb>
    28bc:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000028c0 <__ubsan_handle_nullability_arg>:
    28c0:	sub	sp, sp, #0x30
    28c4:	stp	x29, x30, [sp, #32]
    28c8:	add	x29, sp, #0x20
    28cc:	ldur	w8, [x29, #-8]
    28d0:	ldur	w9, [x29, #-5]
    28d4:	mov	x1, sp
    28d8:	mov	w2, wzr
    28dc:	strb	wzr, [sp]
    28e0:	stur	w8, [sp, #1]
    28e4:	str	w9, [sp, #4]
    28e8:	stp	x30, x29, [sp, #8]
    28ec:	bl	26bc <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb>
    28f0:	ldp	x29, x30, [sp, #32]
    28f4:	add	sp, sp, #0x30
    28f8:	ret

00000000000028fc <__ubsan_handle_nullability_arg_abort>:
    28fc:	sub	sp, sp, #0x30
    2900:	stp	x29, x30, [sp, #32]
    2904:	add	x29, sp, #0x20
    2908:	ldur	w8, [x29, #-8]
    290c:	ldur	w9, [x29, #-5]
    2910:	mov	w10, #0x1                   	// #1
    2914:	mov	x1, sp
    2918:	mov	w2, wzr
    291c:	strb	w10, [sp]
    2920:	stur	w8, [sp, #1]
    2924:	str	w9, [sp, #4]
    2928:	stp	x30, x29, [sp, #8]
    292c:	bl	26bc <_ZL16handleNonNullArgPN7__ubsan14NonNullArgDataENS_13ReportOptionsEb>
    2930:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000002934 <__ubsan_handle_pointer_overflow>:
    2934:	sub	sp, sp, #0x30
    2938:	stp	x29, x30, [sp, #32]
    293c:	add	x29, sp, #0x20
    2940:	ldur	w8, [x29, #-8]
    2944:	ldur	w9, [x29, #-5]
    2948:	mov	x3, sp
    294c:	strb	wzr, [sp]
    2950:	stur	w8, [sp, #1]
    2954:	str	w9, [sp, #4]
    2958:	stp	x30, x29, [sp, #8]
    295c:	bl	296c <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE>
    2960:	ldp	x29, x30, [sp, #32]
    2964:	add	sp, sp, #0x30
    2968:	ret

000000000000296c <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE>:
    296c:	stp	x29, x30, [sp, #-80]!
    2970:	stp	x26, x25, [sp, #16]
    2974:	stp	x24, x23, [sp, #32]
    2978:	stp	x22, x21, [sp, #48]
    297c:	stp	x20, x19, [sp, #64]
    2980:	sub	sp, sp, #0x470
    2984:	mov	x23, x3
    2988:	mov	x19, x2
    298c:	mov	x20, x1
    2990:	add	x25, sp, #0x464
    2994:	add	x24, sp, #0x50
    2998:	add	x9, x0, #0xc
    299c:	mov	w10, #0xffffffff            	// #-1
    29a0:	ldaxr	w8, [x9]
    29a4:	stlxr	w11, w10, [x9]
    29a8:	cbnz	w11, 29a0 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x34>
    29ac:	ldr	x22, [x0]
    29b0:	ldr	w26, [x0, #8]
    29b4:	orr	x9, x19, x20
    29b8:	cbz	x9, 29d8 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x6c>
    29bc:	cbnz	x20, 29ec <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x80>
    29c0:	cbz	x19, 29ec <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x80>
    29c4:	mov	w21, #0x3                   	// #3
    29c8:	ldrb	w9, [x23]
    29cc:	bfi	x26, x8, #32, #32
    29d0:	cbnz	w9, 2a28 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0xbc>
    29d4:	b	2a08 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x9c>
    29d8:	mov	w21, #0x2                   	// #2
    29dc:	ldrb	w9, [x23]
    29e0:	bfi	x26, x8, #32, #32
    29e4:	cbnz	w9, 2a28 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0xbc>
    29e8:	b	2a08 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x9c>
    29ec:	cmp	x19, #0x0
    29f0:	ccmp	x20, #0x0, #0x4, eq  // eq = none
    29f4:	mov	w9, #0x4                   	// #4
    29f8:	cinc	w21, w9, eq  // eq = none
    29fc:	ldrb	w9, [x23]
    2a00:	bfi	x26, x8, #32, #32
    2a04:	cbnz	w9, 2a28 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0xbc>
    2a08:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    2a0c:	cmp	x26, x8
    2a10:	b.hi	2cb4 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x348>  // b.pmore
    2a14:	ldr	x1, [x23, #8]
    2a18:	mov	w0, w21
    2a1c:	mov	x2, x22
    2a20:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    2a24:	tbnz	w0, #0, 2cb4 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x348>
    2a28:	ldr	x8, [x23, #16]
    2a2c:	ldr	q0, [x23]
    2a30:	mov	w23, #0x1                   	// #1
    2a34:	add	x0, sp, #0x410
    2a38:	add	x1, sp, #0x3f0
    2a3c:	add	x2, sp, #0x3c8
    2a40:	mov	w3, w21
    2a44:	str	w23, [sp, #968]
    2a48:	str	x8, [sp, #1024]
    2a4c:	str	q0, [sp, #1008]
    2a50:	str	x22, [sp, #976]
    2a54:	str	x26, [sp, #984]
    2a58:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    2a5c:	cmp	w21, #0x4
    2a60:	b.eq	2ad8 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x16c>  // b.none
    2a64:	cmp	w21, #0x3
    2a68:	b.eq	2b48 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x1dc>  // b.none
    2a6c:	cmp	w21, #0x2
    2a70:	b.ne	2bbc <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x250>  // b.any
    2a74:	movi	v0.2d, #0x0
    2a78:	str	d0, [sp, #872]
    2a7c:	str	d0, [sp, #912]
    2a80:	ldr	q0, [sp, #512]
    2a84:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2a88:	add	x11, sp, #0x129
    2a8c:	str	x22, [sp, #536]
    2a90:	str	x26, [sp, #544]
    2a94:	str	wzr, [sp, #848]
    2a98:	str	wzr, [sp, #856]
    2a9c:	str	xzr, [sp, #864]
    2aa0:	str	wzr, [sp, #896]
    2aa4:	str	xzr, [sp, #904]
    2aa8:	stur	q0, [x11, #255]
    2aac:	ldr	d0, [x9]
    2ab0:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2ab4:	mov	w8, #0x1                   	// #1
    2ab8:	add	x10, x10, #0x0
    2abc:	str	xzr, [sp, #936]
    2ac0:	str	w8, [sp, #528]
    2ac4:	str	x10, [sp, #576]
    2ac8:	str	d0, [sp, #568]
    2acc:	str	wzr, [sp, #944]
    2ad0:	add	x0, sp, #0x210
    2ad4:	b	2ca8 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x33c>
    2ad8:	movi	v0.2d, #0x0
    2adc:	str	d0, [sp, #424]
    2ae0:	str	d0, [sp, #464]
    2ae4:	ldr	q0, [sp, #48]
    2ae8:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2aec:	ldr	x11, [x25]
    2af0:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2af4:	stur	q0, [sp, #104]
    2af8:	ldr	d0, [x8]
    2afc:	ldr	w8, [sp, #1132]
    2b00:	add	x9, x9, #0x0
    2b04:	mov	w10, #0x5                   	// #5
    2b08:	str	w23, [sp, #80]
    2b0c:	stp	x22, x26, [sp, #88]
    2b10:	str	wzr, [sp, #408]
    2b14:	str	xzr, [sp, #416]
    2b18:	str	wzr, [sp, #448]
    2b1c:	str	xzr, [sp, #456]
    2b20:	str	xzr, [sp, #488]
    2b24:	str	wzr, [sp, #496]
    2b28:	str	w23, [sp, #400]
    2b2c:	str	x9, [sp, #128]
    2b30:	str	w10, [sp, #144]
    2b34:	str	w8, [sp, #156]
    2b38:	str	d0, [sp, #120]
    2b3c:	stur	x11, [x24, #68]
    2b40:	str	x20, [sp, #160]
    2b44:	b	2ca4 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x338>
    2b48:	movi	v0.2d, #0x0
    2b4c:	str	d0, [sp, #424]
    2b50:	str	d0, [sp, #464]
    2b54:	ldr	q0, [sp, #64]
    2b58:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2b5c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2b60:	add	x10, x10, #0x0
    2b64:	stur	q0, [sp, #104]
    2b68:	ldr	d0, [x9]
    2b6c:	ldr	x11, [x25]
    2b70:	str	x10, [sp, #128]
    2b74:	ldr	w10, [sp, #1132]
    2b78:	mov	w8, #0x1                   	// #1
    2b7c:	mov	w9, #0x2                   	// #2
    2b80:	stp	x22, x26, [sp, #88]
    2b84:	str	wzr, [sp, #408]
    2b88:	str	xzr, [sp, #416]
    2b8c:	str	wzr, [sp, #448]
    2b90:	str	xzr, [sp, #456]
    2b94:	str	xzr, [sp, #488]
    2b98:	str	wzr, [sp, #496]
    2b9c:	str	w8, [sp, #80]
    2ba0:	str	w8, [sp, #400]
    2ba4:	str	w9, [sp, #144]
    2ba8:	str	w10, [sp, #156]
    2bac:	str	d0, [sp, #120]
    2bb0:	stur	x11, [x24, #68]
    2bb4:	stp	x19, xzr, [sp, #160]
    2bb8:	b	2ca4 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x338>
    2bbc:	lsr	x8, x20, #63
    2bc0:	lsr	x9, x19, #63
    2bc4:	cmp	w8, w9
    2bc8:	b.ne	2bfc <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x290>  // b.any
    2bcc:	mov	w8, #0x1                   	// #1
    2bd0:	cmp	x20, x19
    2bd4:	b.ls	2c24 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x2b8>  // b.plast
    2bd8:	movi	v0.2d, #0x0
    2bdc:	str	d0, [sp, #424]
    2be0:	str	d0, [sp, #464]
    2be4:	ldr	q0, [sp, #32]
    2be8:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2bec:	stp	x22, x26, [sp, #88]
    2bf0:	stp	wzr, w21, [sp, #120]
    2bf4:	add	x9, x9, #0x0
    2bf8:	b	2c44 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x2d8>
    2bfc:	movi	v0.2d, #0x0
    2c00:	str	d0, [sp, #424]
    2c04:	str	d0, [sp, #464]
    2c08:	ldr	q0, [sp]
    2c0c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2c10:	mov	w8, #0x1                   	// #1
    2c14:	add	x9, x9, #0x0
    2c18:	stp	x22, x26, [sp, #88]
    2c1c:	stp	wzr, w21, [sp, #120]
    2c20:	b	2c44 <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE+0x2d8>
    2c24:	movi	v0.2d, #0x0
    2c28:	str	d0, [sp, #424]
    2c2c:	str	d0, [sp, #464]
    2c30:	ldr	q0, [sp, #16]
    2c34:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2c38:	stp	x22, x26, [sp, #88]
    2c3c:	stp	wzr, w21, [sp, #120]
    2c40:	add	x9, x9, #0x0
    2c44:	str	w8, [sp, #80]
    2c48:	ldr	w8, [sp, #1132]
    2c4c:	ldr	x11, [x25]
    2c50:	str	x9, [sp, #128]
    2c54:	ldr	w9, [sp, #1132]
    2c58:	ldr	x12, [x25]
    2c5c:	mov	w10, #0x5                   	// #5
    2c60:	str	w8, [sp, #156]
    2c64:	mov	w8, #0x2                   	// #2
    2c68:	str	xzr, [sp, #416]
    2c6c:	str	wzr, [sp, #448]
    2c70:	str	xzr, [sp, #456]
    2c74:	str	xzr, [sp, #488]
    2c78:	str	wzr, [sp, #496]
    2c7c:	str	wzr, [sp, #408]
    2c80:	str	w10, [sp, #144]
    2c84:	stur	q0, [sp, #104]
    2c88:	stur	x11, [x24, #68]
    2c8c:	str	x20, [sp, #160]
    2c90:	str	w8, [sp, #400]
    2c94:	str	w10, [sp, #176]
    2c98:	str	w9, [sp, #188]
    2c9c:	stur	x12, [x24, #100]
    2ca0:	str	x19, [sp, #192]
    2ca4:	add	x0, sp, #0x50
    2ca8:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2cac:	add	x0, sp, #0x410
    2cb0:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    2cb4:	add	sp, sp, #0x470
    2cb8:	ldp	x20, x19, [sp, #64]
    2cbc:	ldp	x22, x21, [sp, #48]
    2cc0:	ldp	x24, x23, [sp, #32]
    2cc4:	ldp	x26, x25, [sp, #16]
    2cc8:	ldp	x29, x30, [sp], #80
    2ccc:	ret

0000000000002cd0 <__ubsan_handle_pointer_overflow_abort>:
    2cd0:	sub	sp, sp, #0x30
    2cd4:	stp	x29, x30, [sp, #32]
    2cd8:	add	x29, sp, #0x20
    2cdc:	ldur	w8, [x29, #-8]
    2ce0:	ldur	w9, [x29, #-5]
    2ce4:	mov	w10, #0x1                   	// #1
    2ce8:	mov	x3, sp
    2cec:	strb	w10, [sp]
    2cf0:	stur	w8, [sp, #1]
    2cf4:	str	w9, [sp, #4]
    2cf8:	stp	x30, x29, [sp, #8]
    2cfc:	bl	296c <_ZL25handlePointerOverflowImplPN7__ubsan19PointerOverflowDataEmmNS_13ReportOptionsE>
    2d00:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000002d04 <__ubsan_handle_cfi_check_fail>:
    2d04:	sub	sp, sp, #0x50
    2d08:	stp	x29, x30, [sp, #64]
    2d0c:	add	x29, sp, #0x40
    2d10:	ldrb	w8, [x0]
    2d14:	and	w8, w8, #0xfe
    2d18:	cmp	w8, #0x4
    2d1c:	b.ne	2d4c <__ubsan_handle_cfi_check_fail+0x48>  // b.any
    2d20:	ldur	w8, [x29, #-8]
    2d24:	ldur	w9, [x29, #-5]
    2d28:	add	x2, sp, #0x20
    2d2c:	strb	wzr, [sp, #32]
    2d30:	stur	w8, [sp, #33]
    2d34:	str	w9, [sp, #36]
    2d38:	stp	x30, x29, [sp, #40]
    2d3c:	bl	2d80 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE>
    2d40:	ldp	x29, x30, [sp, #64]
    2d44:	add	sp, sp, #0x50
    2d48:	ret
    2d4c:	ldur	w8, [x29, #-8]
    2d50:	ldur	w9, [x29, #-5]
    2d54:	cmp	x2, #0x0
    2d58:	cset	w2, ne  // ne = any
    2d5c:	add	x3, sp, #0x8
    2d60:	strb	wzr, [sp, #8]
    2d64:	stur	w8, [sp, #9]
    2d68:	str	w9, [sp, #12]
    2d6c:	stp	x30, x29, [sp, #16]
    2d70:	bl	0 <__ubsan_handle_cfi_bad_type>
    2d74:	ldp	x29, x30, [sp, #64]
    2d78:	add	sp, sp, #0x50
    2d7c:	ret

0000000000002d80 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE>:
    2d80:	str	d8, [sp, #-80]!
    2d84:	str	x29, [sp, #8]
    2d88:	stp	x30, x25, [sp, #16]
    2d8c:	stp	x24, x23, [sp, #32]
    2d90:	stp	x22, x21, [sp, #48]
    2d94:	stp	x20, x19, [sp, #64]
    2d98:	sub	sp, sp, #0x280
    2d9c:	ldrb	w8, [x0]
    2da0:	and	w8, w8, #0xfe
    2da4:	cmp	w8, #0x4
    2da8:	b.ne	307c <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2fc>  // b.any
    2dac:	mov	x20, x2
    2db0:	mov	x22, x0
    2db4:	mov	x21, x1
    2db8:	add	x9, x0, #0x14
    2dbc:	mov	w10, #0xffffffff            	// #-1
    2dc0:	ldaxr	w8, [x9]
    2dc4:	stlxr	w11, w10, [x9]
    2dc8:	cbnz	w11, 2dc0 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x40>
    2dcc:	ldr	w23, [x22, #16]
    2dd0:	ldrb	w9, [x20]
    2dd4:	ldr	x19, [x22, #8]
    2dd8:	bfi	x23, x8, #32, #32
    2ddc:	cbz	w9, 303c <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2bc>
    2de0:	ldr	x8, [x20, #16]
    2de4:	ldr	q0, [x20]
    2de8:	mov	w24, #0x1                   	// #1
    2dec:	add	x0, sp, #0x220
    2df0:	add	x1, sp, #0x200
    2df4:	add	x2, sp, #0x1d8
    2df8:	mov	w3, #0x1f                  	// #31
    2dfc:	str	w24, [sp, #472]
    2e00:	str	x8, [sp, #528]
    2e04:	str	q0, [sp, #512]
    2e08:	stp	x19, x23, [sp, #480]
    2e0c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
    2e10:	movi	v0.2d, #0x0
    2e14:	ldrb	w25, [x22]
    2e18:	str	d0, [sp, #376]
    2e1c:	str	d0, [sp, #416]
    2e20:	ldr	q0, [sp, #16]
    2e24:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2e28:	str	w24, [sp, #32]
    2e2c:	stp	x19, x23, [sp, #40]
    2e30:	stur	q0, [sp, #56]
    2e34:	ldr	d0, [x8]
    2e38:	adrp	x8, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2e3c:	add	x8, x8, #0x0
    2e40:	str	wzr, [sp, #352]
    2e44:	str	wzr, [sp, #360]
    2e48:	str	xzr, [sp, #368]
    2e4c:	str	wzr, [sp, #400]
    2e50:	str	xzr, [sp, #408]
    2e54:	str	xzr, [sp, #440]
    2e58:	str	x8, [sp, #80]
    2e5c:	str	d0, [sp, #72]
    2e60:	str	wzr, [sp, #448]
    2e64:	ldr	x1, [x22, #24]
    2e68:	add	x0, sp, #0x20
    2e6c:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
    2e70:	ldr	w8, [x0, #320]
    2e74:	cmp	w8, #0x8
    2e78:	b.eq	3080 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x300>  // b.none
    2e7c:	add	w11, w8, #0x1
    2e80:	add	x8, x0, x8, lsl #5
    2e84:	str	w11, [x0, #320]
    2e88:	str	wzr, [x8, #64]
    2e8c:	ldr	w11, [sp, #632]
    2e90:	ldr	x12, [sp, #624]
    2e94:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2e98:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2e9c:	add	x9, x9, #0x0
    2ea0:	add	x10, x10, #0x0
    2ea4:	cmp	w25, #0x5
    2ea8:	csel	x9, x10, x9, eq  // eq = none
    2eac:	add	x0, sp, #0x20
    2eb0:	str	w11, [x8, #76]
    2eb4:	stur	x12, [x8, #68]
    2eb8:	str	x9, [x8, #80]
    2ebc:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2ec0:	mov	x0, x21
    2ec4:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
    2ec8:	mov	w9, #0x3                   	// #3
    2ecc:	ldr	x8, [x0, #40]
    2ed0:	str	w9, [sp, #32]
    2ed4:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2ed8:	adrp	x10, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2edc:	add	x9, x9, #0x0
    2ee0:	ldr	d8, [x10]
    2ee4:	ldr	x10, [sp, #624]
    2ee8:	str	x9, [sp, #80]
    2eec:	ldr	w9, [sp, #632]
    2ef0:	adrp	x25, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2ef4:	add	x25, x25, #0x0
    2ef8:	cmp	x8, #0x0
    2efc:	mov	x21, x0
    2f00:	movi	v0.2d, #0x0
    2f04:	str	x0, [sp, #64]
    2f08:	csel	x8, x25, x8, eq  // eq = none
    2f0c:	add	x0, sp, #0x20
    2f10:	str	xzr, [sp, #40]
    2f14:	str	w24, [sp, #352]
    2f18:	str	wzr, [sp, #360]
    2f1c:	str	xzr, [sp, #368]
    2f20:	str	wzr, [sp, #400]
    2f24:	str	xzr, [sp, #408]
    2f28:	str	xzr, [sp, #440]
    2f2c:	str	wzr, [sp, #448]
    2f30:	str	wzr, [sp, #96]
    2f34:	str	d0, [sp, #48]
    2f38:	str	d0, [sp, #376]
    2f3c:	str	d0, [sp, #416]
    2f40:	str	w9, [sp, #108]
    2f44:	str	d8, [sp, #72]
    2f48:	stur	x10, [sp, #100]
    2f4c:	str	x8, [sp, #112]
    2f50:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    2f54:	ldr	x8, [x21, #16]
    2f58:	cmp	x8, #0x0
    2f5c:	csel	x22, x25, x8, eq  // eq = none
    2f60:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    2f64:	ldr	x1, [x20, #8]
    2f68:	add	x2, sp, #0x20
    2f6c:	add	x3, sp, #0x270
    2f70:	str	xzr, [sp, #32]
    2f74:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
    2f78:	ldr	x8, [sp, #32]
    2f7c:	tst	w0, #0x1
    2f80:	mov	x1, x22
    2f84:	csel	x8, x8, xzr, ne  // ne = any
    2f88:	cmp	x8, #0x0
    2f8c:	csel	x20, x25, x8, eq  // eq = none
    2f90:	mov	x0, x20
    2f94:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
    2f98:	cbz	w0, 3024 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2a4>
    2f9c:	adrp	x9, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    2fa0:	mov	w8, #0x1                   	// #1
    2fa4:	add	x9, x9, #0x0
    2fa8:	mov	w10, #0x2                   	// #2
    2fac:	ldr	q0, [sp]
    2fb0:	str	w8, [sp, #32]
    2fb4:	ldr	x8, [sp, #624]
    2fb8:	ldr	x11, [sp, #624]
    2fbc:	str	x9, [sp, #80]
    2fc0:	str	w10, [sp, #352]
    2fc4:	ldr	w9, [sp, #632]
    2fc8:	ldr	w10, [sp, #632]
    2fcc:	movi	v1.2d, #0x0
    2fd0:	add	x0, sp, #0x20
    2fd4:	stp	x19, x23, [sp, #40]
    2fd8:	str	d8, [sp, #72]
    2fdc:	str	wzr, [sp, #360]
    2fe0:	str	xzr, [sp, #368]
    2fe4:	str	wzr, [sp, #400]
    2fe8:	str	xzr, [sp, #408]
    2fec:	str	xzr, [sp, #440]
    2ff0:	str	wzr, [sp, #448]
    2ff4:	str	wzr, [sp, #96]
    2ff8:	str	x20, [sp, #112]
    2ffc:	str	wzr, [sp, #128]
    3000:	str	d1, [sp, #376]
    3004:	str	d1, [sp, #416]
    3008:	stur	q0, [sp, #56]
    300c:	str	w9, [sp, #108]
    3010:	stur	x8, [sp, #100]
    3014:	str	w10, [sp, #140]
    3018:	stur	x11, [sp, #132]
    301c:	str	x22, [sp, #144]
    3020:	bl	0 <_ZN7__ubsan4DiagD1Ev>
    3024:	cbz	x21, 3030 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2b0>
    3028:	mov	x0, x21
    302c:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
    3030:	add	x0, sp, #0x220
    3034:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
    3038:	b	305c <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2dc>
    303c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
    3040:	cmp	x23, x8
    3044:	b.hi	305c <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x2dc>  // b.pmore
    3048:	ldr	x1, [x20, #8]
    304c:	mov	w0, #0x1f                  	// #31
    3050:	mov	x2, x19
    3054:	bl	0 <_ZN7__ubsan14IsPCSuppressedENS_9ErrorTypeEmPKc>
    3058:	tbz	w0, #0, 2de0 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE+0x60>
    305c:	add	sp, sp, #0x280
    3060:	ldp	x20, x19, [sp, #64]
    3064:	ldp	x22, x21, [sp, #48]
    3068:	ldp	x24, x23, [sp, #32]
    306c:	ldp	x30, x25, [sp, #16]
    3070:	ldr	x29, [sp, #8]
    3074:	ldr	d8, [sp], #80
    3078:	ret
    307c:	bl	0 <_ZN11__sanitizer3DieEv>
    3080:	adrp	x0, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    3084:	adrp	x2, 0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
    3088:	add	x0, x0, #0x0
    308c:	add	x2, x2, #0x0
    3090:	mov	w1, #0xc0                  	// #192
    3094:	mov	x3, xzr
    3098:	mov	x4, xzr
    309c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000030a0 <__ubsan_handle_cfi_check_fail_abort>:
    30a0:	sub	sp, sp, #0x50
    30a4:	stp	x29, x30, [sp, #64]
    30a8:	add	x29, sp, #0x40
    30ac:	ldrb	w8, [x0]
    30b0:	and	w8, w8, #0xfe
    30b4:	cmp	w8, #0x4
    30b8:	b.ne	30e4 <__ubsan_handle_cfi_check_fail_abort+0x44>  // b.any
    30bc:	ldur	w8, [x29, #-8]
    30c0:	ldur	w9, [x29, #-5]
    30c4:	mov	w10, #0x1                   	// #1
    30c8:	add	x2, sp, #0x20
    30cc:	strb	w10, [sp, #32]
    30d0:	stur	w8, [sp, #33]
    30d4:	str	w9, [sp, #36]
    30d8:	stp	x30, x29, [sp, #40]
    30dc:	bl	2d80 <_ZL17handleCFIBadIcallPN7__ubsan16CFICheckFailDataEmNS_13ReportOptionsE>
    30e0:	bl	0 <_ZN11__sanitizer3DieEv>
    30e4:	ldur	w9, [x29, #-8]
    30e8:	ldur	w10, [x29, #-5]
    30ec:	cmp	x2, #0x0
    30f0:	mov	w8, #0x1                   	// #1
    30f4:	cset	w2, ne  // ne = any
    30f8:	add	x3, sp, #0x8
    30fc:	strb	w8, [sp, #8]
    3100:	stur	w9, [sp, #9]
    3104:	str	w10, [sp, #12]
    3108:	stp	x30, x29, [sp, #16]
    310c:	bl	0 <__ubsan_handle_cfi_bad_type>
    3110:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_monitor.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>:
   0:	str	x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	stp	x1, x2, [x0]
  10:	ldr	x9, [x3, #24]
  14:	mov	x21, x0
  18:	mov	x19, x3
  1c:	mov	x20, x0
  20:	mov	x8, xzr
  24:	str	xzr, [x21, #16]!
  28:	adds	x22, x9, #0x1
  2c:	stp	xzr, xzr, [x21, #8]
  30:	b.cc	78 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0x78>  // b.lo, b.ul, b.last
  34:	cmp	x8, x22
  38:	b.cc	90 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0x90>  // b.lo, b.ul, b.last
  3c:	stp	x22, xzr, [x20, #32]
  40:	cbz	x22, c8 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0xc8>
  44:	ldr	x8, [x20, #16]
  48:	adrp	x9, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  4c:	adrp	x1, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  50:	add	x1, x1, #0x0
  54:	strb	wzr, [x8]
  58:	str	x20, [x9]
  5c:	ldr	x2, [x19]
  60:	mov	x0, x21
  64:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldp	x22, x21, [sp, #16]
  70:	ldr	x30, [sp], #48
  74:	b	f4 <__ubsan_on_report>
  78:	mov	x0, x21
  7c:	mov	x1, x22
  80:	bl	0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  84:	ldr	x8, [x20, #32]
  88:	cmp	x8, x22
  8c:	b.cs	3c <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0x3c>  // b.hs, b.nlast
  90:	ldr	x9, [x20, #24]
  94:	cmp	x9, x22
  98:	b.cs	ac <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0xac>  // b.hs, b.nlast
  9c:	mov	x0, x21
  a0:	mov	x1, x22
  a4:	bl	0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  a8:	ldr	x8, [x20, #32]
  ac:	ldr	x9, [x21]
  b0:	sub	x2, x22, x8
  b4:	mov	w1, wzr
  b8:	add	x0, x9, x8
  bc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  c0:	stp	x22, xzr, [x20, #32]
  c4:	cbnz	x22, 44 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE+0x44>
  c8:	adrp	x0, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  cc:	adrp	x2, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  d0:	add	x0, x0, #0x0
  d4:	add	x2, x2, #0x0
  d8:	mov	w1, #0x1c5                 	// #453
  dc:	mov	x3, xzr
  e0:	mov	x4, xzr
  e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000000e8 <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE>:
  e8:	adrp	x8, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
  ec:	str	x0, [x8]
  f0:	ret

00000000000000f4 <__ubsan_on_report>:
  f4:	ret

00000000000000f8 <__ubsan_get_current_report_data>:
  f8:	str	x30, [sp, #-16]!
  fc:	cbz	x0, 1c0 <__ubsan_get_current_report_data+0xc8>
 100:	cbz	x1, 1c0 <__ubsan_get_current_report_data+0xc8>
 104:	cbz	x2, 1c0 <__ubsan_get_current_report_data+0xc8>
 108:	cbz	x3, 1c0 <__ubsan_get_current_report_data+0xc8>
 10c:	cbz	x4, 1c0 <__ubsan_get_current_report_data+0xc8>
 110:	cbz	x5, 1c0 <__ubsan_get_current_report_data+0xc8>
 114:	adrp	x8, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
 118:	ldr	x8, [x8]
 11c:	ldr	x9, [x8, #16]
 120:	ldrb	w10, [x9]
 124:	sub	w11, w10, #0x61
 128:	cmp	w11, #0x19
 12c:	b.hi	138 <__ubsan_get_current_report_data+0x40>  // b.pmore
 130:	sub	w10, w10, #0x20
 134:	strb	w10, [x9]
 138:	ldr	x9, [x8]
 13c:	str	x9, [x0]
 140:	ldr	x9, [x8, #16]
 144:	str	x9, [x1]
 148:	ldr	x9, [x8, #8]
 14c:	ldr	w10, [x9]
 150:	cmp	w10, #0x1
 154:	b.ne	18c <__ubsan_get_current_report_data+0x94>  // b.any
 158:	ldp	x10, x9, [x9, #8]
 15c:	str	x10, [x2]
 160:	str	w9, [x3]
 164:	lsr	x9, x9, #32
 168:	str	w9, [x4]
 16c:	ldr	x8, [x8, #8]
 170:	ldr	w9, [x8]
 174:	cmp	w9, #0x2
 178:	b.eq	1b0 <__ubsan_get_current_report_data+0xb8>  // b.none
 17c:	mov	x8, xzr
 180:	str	x8, [x5]
 184:	ldr	x30, [sp], #16
 188:	ret
 18c:	adrp	x9, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
 190:	add	x9, x9, #0x0
 194:	str	x9, [x2]
 198:	str	wzr, [x4]
 19c:	str	wzr, [x3]
 1a0:	ldr	x8, [x8, #8]
 1a4:	ldr	w9, [x8]
 1a8:	cmp	w9, #0x2
 1ac:	b.ne	17c <__ubsan_get_current_report_data+0x84>  // b.any
 1b0:	ldr	x8, [x8, #24]
 1b4:	str	x8, [x5]
 1b8:	ldr	x30, [sp], #16
 1bc:	ret
 1c0:	adrp	x0, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
 1c4:	adrp	x2, 0 <_ZN7__ubsan23UndefinedBehaviorReportC1EPKcRNS_8LocationERN11__sanitizer20InternalScopedStringE>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x2, x2, #0x0
 1d0:	mov	w1, #0x31                  	// #49
 1d4:	mov	x3, xzr
 1d8:	mov	x4, xzr
 1dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm:

0000000000000000 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>:
   0:	stp	x30, x21, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	cbz	x1, 90 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x90>
   c:	ldr	x3, [x0, #16]
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cmp	x3, x1
  1c:	b.hi	b0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xb0>  // b.pmore
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	ldr	x21, [x21]
  28:	ldr	x0, [x21]
  2c:	cbnz	x0, 38 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0x38>
  30:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  34:	str	x0, [x21]
  38:	sub	x8, x0, #0x1
  3c:	tst	x0, x8
  40:	b.ne	cc <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm+0xcc>  // b.any
  44:	add	x8, x20, x0
  48:	sub	x8, x8, #0x1
  4c:	neg	x9, x0
  50:	and	x20, x8, x9
  54:	adrp	x1, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x20
  60:	mov	w2, wzr
  64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  68:	ldr	x1, [x19]
  6c:	ldr	x2, [x19, #16]
  70:	mov	x21, x0
  74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  78:	ldp	x0, x1, [x19]
  7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  80:	stp	x21, x20, [x19]
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x30, x21, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  94:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  98:	add	x0, x0, #0x0
  9c:	add	x2, x2, #0x0
  a0:	mov	w1, #0x20b                 	// #523
  a4:	mov	x3, xzr
  a8:	mov	x4, xzr
  ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  b0:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b4:	adrp	x2, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  b8:	add	x0, x0, #0x0
  bc:	add	x2, x2, #0x0
  c0:	mov	w1, #0x20c                 	// #524
  c4:	mov	x4, x20
  c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  cc:	adrp	x0, 0 <_ZN11__sanitizer24InternalMmapVectorNoCtorIcE7ReallocEm>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d8:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_value.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK7__ubsan5Value12getSIntValueEv>:
   0:	str	x30, [sp, #-16]!
   4:	ldr	x8, [x0]
   8:	ldrh	w9, [x8]
   c:	cbnz	w9, cc <_ZNK7__ubsan5Value12getSIntValueEv+0xcc>
  10:	ldrh	w8, [x8, #2]
  14:	tbz	w8, #0, cc <_ZNK7__ubsan5Value12getSIntValueEv+0xcc>
  18:	lsr	w9, w8, #1
  1c:	mov	w10, #0x1                   	// #1
  20:	cmp	w8, #0xd
  24:	lsl	w8, w10, w9
  28:	b.hi	98 <_ZNK7__ubsan5Value12getSIntValueEv+0x98>  // b.pmore
  2c:	ldr	x10, [x0, #8]
  30:	mov	w9, #0x80                  	// #128
  34:	neg	w11, w8
  38:	sub	w8, w9, w8
  3c:	neg	x9, x8
  40:	cmp	x8, #0x0
  44:	sub	x12, x8, #0x40
  48:	lsr	x13, x10, x9
  4c:	lsl	x14, x10, x8
  50:	csel	x13, xzr, x13, eq  // eq = none
  54:	cmp	x12, #0x0
  58:	csel	x13, x14, x13, ge  // ge = tcont
  5c:	cmp	x8, #0x0
  60:	lsl	x9, x13, x9
  64:	lsl	x10, x10, x11
  68:	csel	x9, xzr, x9, eq  // eq = none
  6c:	cmp	x12, #0x0
  70:	csel	x10, xzr, x10, ge  // ge = tcont
  74:	lsr	x10, x10, x11
  78:	asr	x14, x13, x11
  7c:	asr	x12, x13, #63
  80:	orr	x9, x10, x9
  84:	asr	x8, x13, x8
  88:	csel	x1, x12, x14, ge  // ge = tcont
  8c:	csel	x0, x8, x9, ge  // ge = tcont
  90:	ldr	x30, [sp], #16
  94:	ret
  98:	cmp	w8, #0x80
  9c:	b.eq	bc <_ZNK7__ubsan5Value12getSIntValueEv+0xbc>  // b.none
  a0:	cmp	w8, #0x40
  a4:	b.ne	e4 <_ZNK7__ubsan5Value12getSIntValueEv+0xe4>  // b.any
  a8:	ldr	x8, [x0, #8]
  ac:	ldr	x0, [x8]
  b0:	asr	x1, x0, #63
  b4:	ldr	x30, [sp], #16
  b8:	ret
  bc:	ldr	x8, [x0, #8]
  c0:	ldp	x0, x1, [x8]
  c4:	ldr	x30, [sp], #16
  c8:	ret
  cc:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
  d0:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
  d4:	add	x0, x0, #0x0
  d8:	add	x2, x2, #0x0
  dc:	mov	w1, #0x17                  	// #23
  e0:	b	f8 <_ZNK7__ubsan5Value12getSIntValueEv+0xf8>
  e4:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
  e8:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
  ec:	add	x0, x0, #0x0
  f0:	add	x2, x2, #0x0
  f4:	mov	w1, #0x28                  	// #40
  f8:	mov	x3, xzr
  fc:	mov	x4, xzr
 100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000104 <_ZNK7__ubsan5Value12getUIntValueEv>:
 104:	str	x30, [sp, #-16]!
 108:	ldr	x8, [x0]
 10c:	ldrh	w9, [x8]
 110:	cbnz	w9, 174 <_ZNK7__ubsan5Value12getUIntValueEv+0x70>
 114:	ldrh	w8, [x8, #2]
 118:	tbnz	w8, #0, 174 <_ZNK7__ubsan5Value12getUIntValueEv+0x70>
 11c:	cmp	w8, #0xd
 120:	b.hi	134 <_ZNK7__ubsan5Value12getUIntValueEv+0x30>  // b.pmore
 124:	ldr	x0, [x0, #8]
 128:	mov	x1, xzr
 12c:	ldr	x30, [sp], #16
 130:	ret
 134:	lsr	w8, w8, #1
 138:	mov	w9, #0x1                   	// #1
 13c:	lsl	w8, w9, w8
 140:	cmp	w8, #0x80
 144:	b.eq	164 <_ZNK7__ubsan5Value12getUIntValueEv+0x60>  // b.none
 148:	cmp	w8, #0x40
 14c:	b.ne	18c <_ZNK7__ubsan5Value12getUIntValueEv+0x88>  // b.any
 150:	ldr	x8, [x0, #8]
 154:	mov	x1, xzr
 158:	ldr	x0, [x8]
 15c:	ldr	x30, [sp], #16
 160:	ret
 164:	ldr	x8, [x0, #8]
 168:	ldp	x0, x1, [x8]
 16c:	ldr	x30, [sp], #16
 170:	ret
 174:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 178:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 17c:	add	x0, x0, #0x0
 180:	add	x2, x2, #0x0
 184:	mov	w1, #0x2c                  	// #44
 188:	b	1a0 <_ZNK7__ubsan5Value12getUIntValueEv+0x9c>
 18c:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 190:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 194:	add	x0, x0, #0x0
 198:	add	x2, x2, #0x0
 19c:	mov	w1, #0x38                  	// #56
 1a0:	mov	x3, xzr
 1a4:	mov	x4, xzr
 1a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001ac <_ZNK7__ubsan5Value19getPositiveIntValueEv>:
 1ac:	str	x30, [sp, #-16]!
 1b0:	ldr	x8, [x0]
 1b4:	ldrh	w9, [x8]
 1b8:	cbnz	w9, 2c8 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x11c>
 1bc:	ldrh	w8, [x8, #2]
 1c0:	tbnz	w8, #0, 1dc <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x30>
 1c4:	cmp	w8, #0xd
 1c8:	b.hi	258 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0xac>  // b.pmore
 1cc:	ldr	x0, [x0, #8]
 1d0:	mov	x1, xzr
 1d4:	ldr	x30, [sp], #16
 1d8:	ret
 1dc:	lsr	w9, w8, #1
 1e0:	mov	w10, #0x1                   	// #1
 1e4:	cmp	w8, #0xd
 1e8:	lsl	w8, w10, w9
 1ec:	b.hi	288 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0xdc>  // b.pmore
 1f0:	ldr	x10, [x0, #8]
 1f4:	mov	w9, #0x80                  	// #128
 1f8:	neg	w11, w8
 1fc:	sub	w8, w9, w8
 200:	neg	x9, x8
 204:	cmp	x8, #0x0
 208:	sub	x12, x8, #0x40
 20c:	lsr	x13, x10, x9
 210:	lsl	x14, x10, x8
 214:	csel	x13, xzr, x13, eq  // eq = none
 218:	cmp	x12, #0x0
 21c:	csel	x13, x14, x13, ge  // ge = tcont
 220:	cmp	x8, #0x0
 224:	lsl	x9, x13, x9
 228:	lsl	x10, x10, x11
 22c:	csel	x9, xzr, x9, eq  // eq = none
 230:	cmp	x12, #0x0
 234:	csel	x10, xzr, x10, ge  // ge = tcont
 238:	lsr	x10, x10, x11
 23c:	asr	x14, x13, x11
 240:	asr	x12, x13, #63
 244:	orr	x9, x10, x9
 248:	asr	x8, x13, x8
 24c:	csel	x1, x12, x14, ge  // ge = tcont
 250:	csel	x0, x8, x9, ge  // ge = tcont
 254:	b	2bc <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x110>
 258:	lsr	w8, w8, #1
 25c:	mov	w9, #0x1                   	// #1
 260:	lsl	w8, w9, w8
 264:	cmp	w8, #0x80
 268:	b.eq	2a8 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0xfc>  // b.none
 26c:	cmp	w8, #0x40
 270:	b.ne	304 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x158>  // b.any
 274:	ldr	x8, [x0, #8]
 278:	mov	x1, xzr
 27c:	ldr	x0, [x8]
 280:	ldr	x30, [sp], #16
 284:	ret
 288:	cmp	w8, #0x80
 28c:	b.eq	2b4 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x108>  // b.none
 290:	cmp	w8, #0x40
 294:	b.ne	31c <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x170>  // b.any
 298:	ldr	x8, [x0, #8]
 29c:	ldr	x0, [x8]
 2a0:	asr	x1, x0, #63
 2a4:	b	2bc <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x110>
 2a8:	ldr	x8, [x0, #8]
 2ac:	ldp	x0, x1, [x8]
 2b0:	b	2c0 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x114>
 2b4:	ldr	x8, [x0, #8]
 2b8:	ldp	x0, x1, [x8]
 2bc:	tbnz	x1, #63, 2e0 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x134>
 2c0:	ldr	x30, [sp], #16
 2c4:	ret
 2c8:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 2cc:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 2d0:	add	x0, x0, #0x0
 2d4:	add	x2, x2, #0x0
 2d8:	mov	w1, #0x17                  	// #23
 2dc:	b	330 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x184>
 2e0:	mvn	x8, x1
 2e4:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 2e8:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 2ec:	lsr	x3, x8, #63
 2f0:	add	x0, x0, #0x0
 2f4:	add	x2, x2, #0x0
 2f8:	mov	w1, #0x3f                  	// #63
 2fc:	mov	x4, xzr
 300:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 304:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 308:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 30c:	add	x0, x0, #0x0
 310:	add	x2, x2, #0x0
 314:	mov	w1, #0x38                  	// #56
 318:	b	330 <_ZNK7__ubsan5Value19getPositiveIntValueEv+0x184>
 31c:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 320:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 324:	add	x0, x0, #0x0
 328:	add	x2, x2, #0x0
 32c:	mov	w1, #0x28                  	// #40
 330:	mov	x3, xzr
 334:	mov	x4, xzr
 338:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

000000000000033c <_ZNK7__ubsan5Value13getFloatValueEv>:
 33c:	sub	sp, sp, #0x20
 340:	str	x30, [sp, #16]
 344:	ldr	x8, [x0]
 348:	ldrh	w9, [x8]
 34c:	cmp	w9, #0x1
 350:	b.ne	41c <_ZNK7__ubsan5Value13getFloatValueEv+0xe0>  // b.any
 354:	ldrh	w8, [x8, #2]
 358:	subs	w9, w8, #0x40
 35c:	b.hi	390 <_ZNK7__ubsan5Value13getFloatValueEv+0x54>  // b.pmore
 360:	b.eq	3c8 <_ZNK7__ubsan5Value13getFloatValueEv+0x8c>  // b.none
 364:	cmp	w8, #0x20
 368:	b.ne	404 <_ZNK7__ubsan5Value13getFloatValueEv+0xc8>  // b.any
 36c:	add	x1, x0, #0x8
 370:	add	x0, sp, #0x1c
 374:	mov	w2, #0x4                   	// #4
 378:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 37c:	ldr	s0, [sp, #28]
 380:	bl	0 <__extendsftf2>
 384:	ldr	x30, [sp, #16]
 388:	add	sp, sp, #0x20
 38c:	ret
 390:	ror	w8, w9, #4
 394:	cmp	w8, #0x4
 398:	b.hi	404 <_ZNK7__ubsan5Value13getFloatValueEv+0xc8>  // b.pmore
 39c:	adrp	x9, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 3a0:	add	x9, x9, #0x0
 3a4:	adr	x10, 3b4 <_ZNK7__ubsan5Value13getFloatValueEv+0x78>
 3a8:	ldrb	w11, [x9, x8]
 3ac:	add	x10, x10, x11, lsl #2
 3b0:	br	x10
 3b4:	ldr	x8, [x0, #8]
 3b8:	ldr	q0, [x8]
 3bc:	ldr	x30, [sp, #16]
 3c0:	add	sp, sp, #0x20
 3c4:	ret
 3c8:	add	x1, x0, #0x8
 3cc:	add	x0, sp, #0x8
 3d0:	mov	w2, #0x8                   	// #8
 3d4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3d8:	ldr	d0, [sp, #8]
 3dc:	bl	0 <__extenddftf2>
 3e0:	ldr	x30, [sp, #16]
 3e4:	add	sp, sp, #0x20
 3e8:	ret
 3ec:	ldr	x8, [x0, #8]
 3f0:	ldr	d0, [x8]
 3f4:	bl	0 <__extenddftf2>
 3f8:	ldr	x30, [sp, #16]
 3fc:	add	sp, sp, #0x20
 400:	ret
 404:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 408:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 40c:	add	x0, x0, #0x0
 410:	add	x2, x2, #0x0
 414:	mov	w1, #0x6d                  	// #109
 418:	b	430 <_ZNK7__ubsan5Value13getFloatValueEv+0xf4>
 41c:	adrp	x0, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 420:	adrp	x2, 0 <_ZNK7__ubsan5Value12getSIntValueEv>
 424:	add	x0, x0, #0x0
 428:	add	x2, x2, #0x0
 42c:	mov	w1, #0x47                  	// #71
 430:	mov	x3, xzr
 434:	mov	x4, xzr
 438:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

cfi.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5__cfi9GetShadowEv>:
   0:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
   4:	ldr	x0, [x8]
   8:	ret

000000000000000c <_ZN5__cfi13GetShadowSizeEv>:
   c:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
  10:	ldr	x0, [x8]
  14:	ret

0000000000000018 <_ZN5__cfi13SetShadowSizeEm>:
  18:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
  1c:	str	x0, [x8]
  20:	ret

0000000000000024 <_ZN5__cfi17MemToShadowOffsetEm>:
  24:	lsr	x8, x0, #11
  28:	and	x0, x8, #0x1ffffffffffffe
  2c:	ret

0000000000000030 <_ZN5__cfi11MemToShadowEmm>:
  30:	lsr	x8, x0, #11
  34:	and	x8, x8, #0x1ffffffffffffe
  38:	add	x0, x8, x1
  3c:	ret

0000000000000040 <_ZN5__cfi13ShadowBuilder5StartEv>:
  40:	str	x30, [sp, #-32]!
  44:	stp	x20, x19, [sp, #16]
  48:	adrp	x20, 0 <_ZN5__cfi9GetShadowEv>
  4c:	ldr	x8, [x20]
  50:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
  54:	mov	x19, x0
  58:	add	x1, x1, #0x0
  5c:	mov	x0, x8
  60:	bl	0 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>
  64:	str	x0, [x19]
  68:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
  6c:	ldr	x8, [x8]
  70:	ldr	w8, [x8]
  74:	cbz	w8, 98 <_ZN5__cfi13ShadowBuilder5StartEv+0x58>
  78:	ldr	x8, [x20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x1, x0
  84:	add	x2, x8, x0
  88:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
  8c:	add	x0, x0, #0x0
  90:	ldr	x30, [sp], #32
  94:	b	0 <_ZN11__sanitizer6ReportEPKcz>
  98:	ldp	x20, x19, [sp, #16]
  9c:	ldr	x30, [sp], #32
  a0:	ret

00000000000000a4 <_ZN5__cfi13ShadowBuilder12AddUncheckedEmm>:
  a4:	ldr	x8, [x0]
  a8:	sub	x10, x2, #0x1
  ac:	lsr	x9, x1, #11
  b0:	lsr	x10, x10, #11
  b4:	and	x9, x9, #0x1ffffffffffffe
  b8:	and	x10, x10, #0x1ffffffffffffe
  bc:	add	x0, x8, x9
  c0:	add	x8, x8, x10
  c4:	sub	x8, x8, x0
  c8:	add	x2, x8, #0x2
  cc:	mov	w1, #0xff                  	// #255
  d0:	b	0 <memset>

00000000000000d4 <_ZN5__cfi13ShadowBuilder3AddEmmm>:
  d4:	str	x30, [sp, #-16]!
  d8:	tst	x3, #0xfff
  dc:	b.ne	1b0 <_ZN5__cfi13ShadowBuilder3AddEmmm+0xdc>  // b.any
  e0:	cmp	x1, x3
  e4:	ldr	x8, [x0]
  e8:	sub	x10, x2, #0x1
  ec:	csel	x9, x1, x3, hi  // hi = pmore
  f0:	lsr	x10, x10, #11
  f4:	lsr	x11, x9, #11
  f8:	and	x12, x10, #0x1ffffffffffffe
  fc:	and	x10, x11, #0x1ffffffffffffe
 100:	add	x10, x8, x10
 104:	add	x8, x8, x12
 108:	add	x11, x8, #0x2
 10c:	cmp	x11, x10
 110:	b.ls	1a8 <_ZN5__cfi13ShadowBuilder3AddEmmm+0xd4>  // b.plast
 114:	cmp	x10, x8
 118:	csel	x11, x10, x8, hi  // hi = pmore
 11c:	sub	x11, x11, x10
 120:	sub	x9, x9, x3
 124:	add	x11, x11, #0x1
 128:	cmp	x11, #0x1e
 12c:	lsr	x9, x9, #12
 130:	b.cs	138 <_ZN5__cfi13ShadowBuilder3AddEmmm+0x64>  // b.hs, b.nlast
 134:	b	194 <_ZN5__cfi13ShadowBuilder3AddEmmm+0xc0>
 138:	adrp	x13, 0 <_ZN5__cfi9GetShadowEv>
 13c:	ldr	q3, [x13]
 140:	lsr	x12, x11, #1
 144:	add	x12, x12, #0x1
 148:	dup	v2.8h, w9
 14c:	and	x13, x12, #0xfffffffffffffff0
 150:	add	x11, x10, #0x10
 154:	movi	v0.8h, #0x1
 158:	movi	v1.8h, #0x9
 15c:	add	w9, w9, w13
 160:	add	x10, x10, x13, lsl #1
 164:	add	v2.8h, v2.8h, v3.8h
 168:	movi	v3.8h, #0x10
 16c:	mov	x14, x13
 170:	add	v4.8h, v2.8h, v0.8h
 174:	add	v5.8h, v2.8h, v1.8h
 178:	add	v2.8h, v2.8h, v3.8h
 17c:	subs	x14, x14, #0x10
 180:	stp	q4, q5, [x11, #-16]
 184:	add	x11, x11, #0x20
 188:	b.ne	170 <_ZN5__cfi13ShadowBuilder3AddEmmm+0x9c>  // b.any
 18c:	cmp	x12, x13
 190:	b.eq	1a8 <_ZN5__cfi13ShadowBuilder3AddEmmm+0xd4>  // b.none
 194:	sub	x10, x10, #0x2
 198:	add	w9, w9, #0x1
 19c:	strh	w9, [x10, #2]!
 1a0:	cmp	x10, x8
 1a4:	b.cc	198 <_ZN5__cfi13ShadowBuilder3AddEmmm+0xc4>  // b.lo, b.ul, b.last
 1a8:	ldr	x30, [sp], #16
 1ac:	ret
 1b0:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 1b4:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 1b8:	adrp	x3, 0 <_ZN5__cfi9GetShadowEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0xa1                  	// #161
 1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZN5__cfi13ShadowBuilder7InstallEv>:
 1d0:	stp	x30, x21, [sp, #-32]!
 1d4:	stp	x20, x19, [sp, #16]
 1d8:	adrp	x20, 0 <_ZN5__cfi9GetShadowEv>
 1dc:	add	x20, x20, #0x0
 1e0:	mov	x19, x0
 1e4:	ldr	x0, [x0]
 1e8:	ldr	x1, [x20, #8]
 1ec:	bl	0 <_ZN11__sanitizer16MprotectReadOnlyEmm>
 1f0:	ldr	x4, [x20]
 1f4:	cbz	x4, 238 <_ZN5__cfi13ShadowBuilder7InstallEv+0x68>
 1f8:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 1fc:	ldr	x1, [x8]
 200:	ldr	x0, [x19]
 204:	mov	w3, #0x3                   	// #3
 208:	mov	x2, x1
 20c:	bl	0 <mremap>
 210:	cmn	x0, #0x1
 214:	b.ne	28c <_ZN5__cfi13ShadowBuilder7InstallEv+0xbc>  // b.any
 218:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 21c:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 220:	add	x0, x0, #0x0
 224:	add	x2, x2, #0x0
 228:	mov	w1, #0xb7                  	// #183
 22c:	mov	x3, xzr
 230:	mov	x4, xzr
 234:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 238:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 23c:	ldr	x21, [x21]
 240:	ldr	x4, [x21]
 244:	cbnz	x4, 254 <_ZN5__cfi13ShadowBuilder7InstallEv+0x84>
 248:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 24c:	mov	x4, x0
 250:	str	x0, [x21]
 254:	cmp	x4, #0x1, lsl #12
 258:	b.ne	298 <_ZN5__cfi13ShadowBuilder7InstallEv+0xc8>  // b.any
 25c:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 260:	ldr	x4, [x8]
 264:	cbnz	x4, 2b4 <_ZN5__cfi13ShadowBuilder7InstallEv+0xe4>
 268:	ldr	x8, [x19]
 26c:	mov	w1, #0x1000                	// #4096
 270:	mov	x0, x20
 274:	str	x8, [x20]
 278:	bl	0 <_ZN11__sanitizer16MprotectReadOnlyEmm>
 27c:	ldr	x3, [x19]
 280:	ldr	x4, [x20]
 284:	cmp	x3, x4
 288:	b.ne	2d0 <_ZN5__cfi13ShadowBuilder7InstallEv+0x100>  // b.any
 28c:	ldp	x20, x19, [sp, #16]
 290:	ldp	x30, x21, [sp], #32
 294:	ret
 298:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 29c:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 2a0:	add	x0, x0, #0x0
 2a4:	add	x2, x2, #0x0
 2a8:	mov	w1, #0xc3                  	// #195
 2ac:	mov	w3, #0x1000                	// #4096
 2b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2b4:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 2b8:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x2, x2, #0x0
 2c4:	mov	w1, #0xc4                  	// #196
 2c8:	mov	x3, xzr
 2cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2d0:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 2d4:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 2d8:	add	x0, x0, #0x0
 2dc:	add	x2, x2, #0x0
 2e0:	mov	w1, #0xc8                  	// #200
 2e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002e8 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info>:
 2e8:	stp	x30, x23, [sp, #-48]!
 2ec:	stp	x22, x21, [sp, #16]
 2f0:	stp	x20, x19, [sp, #32]
 2f4:	ldrh	w8, [x0, #24]
 2f8:	cbz	x8, 474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>
 2fc:	ldr	x9, [x0, #16]
 300:	mov	x10, xzr
 304:	add	x11, x9, #0x10
 308:	ldur	w12, [x11, #-16]
 30c:	cmp	w12, #0x2
 310:	b.eq	338 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x50>  // b.none
 314:	add	x10, x10, #0x1
 318:	cmp	x10, x8
 31c:	add	x11, x11, #0x38
 320:	b.cc	308 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x20>  // b.lo, b.ul, b.last
 324:	mov	x0, xzr
 328:	ldp	x20, x19, [sp, #32]
 32c:	ldp	x22, x21, [sp, #16]
 330:	ldp	x30, x23, [sp], #48
 334:	ret
 338:	ldr	x21, [x0]
 33c:	ldr	x10, [x11]
 340:	adds	x10, x10, x21
 344:	b.eq	474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>  // b.none
 348:	adrp	x11, 0 <_ZN5__cfi9GetShadowEv>
 34c:	mov	x1, xzr
 350:	mov	x22, xzr
 354:	mov	x19, xzr
 358:	add	x10, x10, #0x8
 35c:	add	x11, x11, #0x0
 360:	b	36c <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x84>
 364:	ldr	x22, [x10]
 368:	add	x10, x10, #0x10
 36c:	ldur	x12, [x10, #-8]
 370:	cmp	x12, #0xa
 374:	b.hi	368 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x80>  // b.pmore
 378:	adr	x13, 364 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x7c>
 37c:	ldrb	w14, [x11, x12]
 380:	add	x13, x13, x14, lsl #2
 384:	br	x13
 388:	ldr	x19, [x10], #16
 38c:	b	36c <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x84>
 390:	ldr	x1, [x10], #16
 394:	b	36c <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x84>
 398:	cmp	x1, x19
 39c:	b.ls	3bc <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xd4>  // b.plast
 3a0:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 3a4:	ldr	x8, [x8]
 3a8:	ldr	w8, [x8]
 3ac:	cbz	w8, 474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>
 3b0:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 3b4:	add	x0, x0, #0x0
 3b8:	b	46c <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x184>
 3bc:	add	x10, x19, x22
 3c0:	b	3d0 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xe8>
 3c4:	subs	x8, x8, #0x1
 3c8:	add	x9, x9, #0x38
 3cc:	b.eq	454 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x16c>  // b.none
 3d0:	ldr	w11, [x9]
 3d4:	cmp	w11, #0x1
 3d8:	b.ne	3c4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xdc>  // b.any
 3dc:	ldr	x11, [x9, #16]
 3e0:	ldr	x13, [x9, #40]
 3e4:	add	x12, x11, x21
 3e8:	add	x11, x12, x13
 3ec:	cmp	x1, x11
 3f0:	b.cs	3c4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xdc>  // b.hs, b.nlast
 3f4:	cmp	x1, x12
 3f8:	b.cc	3c4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xdc>  // b.lo, b.ul, b.last
 3fc:	cmp	x19, x12
 400:	b.cc	3c4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xdc>  // b.lo, b.ul, b.last
 404:	cmp	x10, x11
 408:	b.cs	3c4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0xdc>  // b.hs, b.nlast
 40c:	cbz	w8, 454 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x16c>
 410:	cmp	x19, x1
 414:	b.ls	474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>  // b.plast
 418:	adrp	x20, 0 <_ZN5__cfi9GetShadowEv>
 41c:	add	x23, x1, #0x18
 420:	add	x20, x20, #0x0
 424:	ldur	w8, [x23, #-24]
 428:	cmp	x22, x8
 42c:	b.ls	474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>  // b.plast
 430:	add	x0, x19, x8
 434:	mov	x1, x20
 438:	bl	0 <strcmp>
 43c:	cbz	w0, 488 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x1a0>
 440:	mov	x0, xzr
 444:	cmp	x19, x23
 448:	add	x23, x23, #0x18
 44c:	b.hi	424 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x13c>  // b.pmore
 450:	b	328 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x40>
 454:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 458:	ldr	x8, [x8]
 45c:	ldr	w8, [x8]
 460:	cbz	w8, 474 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x18c>
 464:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 468:	add	x0, x0, #0x0
 46c:	mov	x2, x19
 470:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 474:	mov	x0, xzr
 478:	ldp	x20, x19, [sp, #32]
 47c:	ldp	x22, x21, [sp, #16]
 480:	ldp	x30, x23, [sp], #48
 484:	ret
 488:	ldurb	w8, [x23, #-20]
 48c:	cmp	w8, #0x12
 490:	b.eq	49c <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x1b4>  // b.none
 494:	cmp	w8, #0x22
 498:	b.ne	4b4 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info+0x1cc>  // b.any
 49c:	ldur	x8, [x23, #-16]
 4a0:	add	x0, x8, x21
 4a4:	ldp	x20, x19, [sp, #32]
 4a8:	ldp	x22, x21, [sp, #16]
 4ac:	ldp	x30, x23, [sp], #48
 4b0:	ret
 4b4:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 4b8:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 4bc:	adrp	x3, 0 <_ZN5__cfi9GetShadowEv>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x10a                 	// #266
 4d0:	bl	0 <__assert_fail>

00000000000004d4 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv>:
 4d4:	sub	sp, sp, #0x70
 4d8:	str	x30, [sp, #16]
 4dc:	stp	x28, x27, [sp, #32]
 4e0:	stp	x26, x25, [sp, #48]
 4e4:	stp	x24, x23, [sp, #64]
 4e8:	stp	x22, x21, [sp, #80]
 4ec:	stp	x20, x19, [sp, #96]
 4f0:	mov	x19, x2
 4f4:	mov	x20, x0
 4f8:	bl	2e8 <_ZN5__cfi21find_cfi_check_in_dsoEP12dl_phdr_info>
 4fc:	adrp	x25, 0 <_ZN11__sanitizer17current_verbosityE>
 500:	ldr	x25, [x25]
 504:	mov	x21, x0
 508:	cbz	x0, 528 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x54>
 50c:	ldr	w8, [x25]
 510:	cbz	w8, 528 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x54>
 514:	ldr	x1, [x20, #8]
 518:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 51c:	add	x0, x0, #0x0
 520:	mov	x2, x21
 524:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 528:	ldrh	w8, [x20, #24]
 52c:	cbz	w8, 700 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x22c>
 530:	cbz	x21, 688 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1b4>
 534:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 538:	ldr	q0, [x8]
 53c:	adrp	x22, 0 <_ZN5__cfi9GetShadowEv>
 540:	mov	x26, xzr
 544:	and	x27, x21, #0xfff
 548:	mov	w28, #0x38                  	// #56
 54c:	movi	v3.8h, #0x1
 550:	movi	v4.8h, #0x9
 554:	movi	v5.8h, #0x10
 558:	add	x22, x22, #0x0
 55c:	str	q0, [sp]
 560:	b	574 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xa0>
 564:	ldrh	w8, [x20, #24]
 568:	add	x26, x26, #0x1
 56c:	cmp	x26, x8
 570:	b.cs	700 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x22c>  // b.hs, b.nlast
 574:	ldr	x8, [x20, #16]
 578:	mul	x9, x26, x28
 57c:	ldr	w9, [x8, x9]
 580:	cmp	w9, #0x1
 584:	b.ne	564 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x90>  // b.any
 588:	madd	x8, x26, x28, x8
 58c:	ldr	x9, [x20]
 590:	ldr	x10, [x8, #16]
 594:	ldr	x8, [x8, #40]
 598:	ldr	w11, [x25]
 59c:	add	x23, x10, x9
 5a0:	add	x24, x23, x8
 5a4:	cbz	w11, 5c4 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xf0>
 5a8:	mov	x0, x22
 5ac:	mov	x1, x23
 5b0:	mov	x2, x24
 5b4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 5b8:	movi	v5.8h, #0x10
 5bc:	movi	v4.8h, #0x9
 5c0:	movi	v3.8h, #0x1
 5c4:	cbnz	x27, 724 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x250>
 5c8:	cmp	x23, x21
 5cc:	ldr	x8, [x19]
 5d0:	sub	x10, x24, #0x1
 5d4:	csel	x9, x23, x21, hi  // hi = pmore
 5d8:	lsr	x10, x10, #11
 5dc:	lsr	x11, x9, #11
 5e0:	and	x12, x10, #0x1ffffffffffffe
 5e4:	and	x10, x11, #0x1ffffffffffffe
 5e8:	add	x10, x8, x10
 5ec:	add	x8, x8, x12
 5f0:	add	x11, x8, #0x2
 5f4:	cmp	x11, x10
 5f8:	b.ls	564 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x90>  // b.plast
 5fc:	cmp	x10, x8
 600:	csel	x11, x10, x8, hi  // hi = pmore
 604:	sub	x11, x11, x10
 608:	sub	x9, x9, x21
 60c:	add	x11, x11, #0x1
 610:	cmp	x11, #0x1e
 614:	lsr	x9, x9, #12
 618:	b.cs	624 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x150>  // b.hs, b.nlast
 61c:	mov	x11, x10
 620:	b	670 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x19c>
 624:	ldr	q1, [sp]
 628:	lsr	x11, x11, #1
 62c:	add	x12, x11, #0x1
 630:	dup	v0.8h, w9
 634:	and	x13, x12, #0xfffffffffffffff0
 638:	add	v0.8h, v0.8h, v1.8h
 63c:	add	w9, w9, w13
 640:	add	x11, x10, x13, lsl #1
 644:	add	x10, x10, #0x10
 648:	mov	x14, x13
 64c:	add	v1.8h, v0.8h, v3.8h
 650:	add	v2.8h, v0.8h, v4.8h
 654:	add	v0.8h, v0.8h, v5.8h
 658:	subs	x14, x14, #0x10
 65c:	stp	q1, q2, [x10, #-16]
 660:	add	x10, x10, #0x20
 664:	b.ne	64c <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x178>  // b.any
 668:	cmp	x12, x13
 66c:	b.eq	564 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x90>  // b.none
 670:	sub	x10, x11, #0x2
 674:	add	w9, w9, #0x1
 678:	strh	w9, [x10, #2]!
 67c:	cmp	x10, x8
 680:	b.cc	674 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1a0>  // b.lo, b.ul, b.last
 684:	b	564 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x90>
 688:	mov	x22, xzr
 68c:	b	6a0 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1cc>
 690:	add	x22, x22, #0x1
 694:	cmp	x22, w8, uxth
 698:	add	x21, x21, #0x38
 69c:	b.cs	700 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x22c>  // b.hs, b.nlast
 6a0:	ldr	x9, [x20, #16]
 6a4:	ldr	w10, [x9, x21]
 6a8:	cmp	w10, #0x1
 6ac:	b.ne	690 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1bc>  // b.any
 6b0:	add	x9, x9, x21
 6b4:	ldr	x8, [x20]
 6b8:	ldr	x10, [x9, #16]
 6bc:	ldr	x9, [x9, #40]
 6c0:	mov	w1, #0xff                  	// #255
 6c4:	add	x8, x10, x8
 6c8:	ldr	x10, [x19]
 6cc:	add	x9, x8, x9
 6d0:	lsr	x8, x8, #11
 6d4:	and	x8, x8, #0x1ffffffffffffe
 6d8:	sub	x9, x9, #0x1
 6dc:	add	x0, x10, x8
 6e0:	lsr	x8, x9, #11
 6e4:	and	x8, x8, #0x1ffffffffffffe
 6e8:	add	x8, x10, x8
 6ec:	sub	x8, x8, x0
 6f0:	add	x2, x8, #0x2
 6f4:	bl	0 <memset>
 6f8:	ldrh	w8, [x20, #24]
 6fc:	b	690 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1bc>
 700:	ldp	x20, x19, [sp, #96]
 704:	ldp	x22, x21, [sp, #80]
 708:	ldp	x24, x23, [sp, #64]
 70c:	ldp	x26, x25, [sp, #48]
 710:	ldp	x28, x27, [sp, #32]
 714:	ldr	x30, [sp, #16]
 718:	mov	w0, wzr
 71c:	add	sp, sp, #0x70
 720:	ret
 724:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 728:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 72c:	adrp	x3, 0 <_ZN5__cfi9GetShadowEv>
 730:	add	x0, x0, #0x0
 734:	add	x1, x1, #0x0
 738:	add	x3, x3, #0x0
 73c:	mov	w2, #0xa1                  	// #161
 740:	bl	0 <__assert_fail>

0000000000000744 <_ZN5__cfi12UpdateShadowEv>:
 744:	sub	sp, sp, #0x20
 748:	stp	x30, x19, [sp, #16]
 74c:	adrp	x19, 0 <_ZN5__cfi9GetShadowEv>
 750:	ldr	x0, [x19]
 754:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 758:	add	x1, x1, #0x0
 75c:	bl	0 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>
 760:	str	x0, [sp, #8]
 764:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 768:	ldr	x8, [x8]
 76c:	ldr	w8, [x8]
 770:	cbz	w8, 78c <_ZN5__cfi12UpdateShadowEv+0x48>
 774:	ldr	x8, [x19]
 778:	mov	x1, x0
 77c:	add	x2, x8, x0
 780:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 784:	add	x0, x0, #0x0
 788:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 78c:	adrp	x0, 4d4 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 790:	add	x0, x0, #0x0
 794:	add	x1, sp, #0x8
 798:	bl	0 <dl_iterate_phdr>
 79c:	add	x0, sp, #0x8
 7a0:	bl	1d0 <_ZN5__cfi13ShadowBuilder7InstallEv>
 7a4:	ldp	x30, x19, [sp, #16]
 7a8:	add	sp, sp, #0x20
 7ac:	ret

00000000000007b0 <_ZN5__cfi10InitShadowEv>:
 7b0:	str	x30, [sp, #-32]!
 7b4:	stp	x20, x19, [sp, #16]
 7b8:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 7bc:	ldr	x4, [x8]
 7c0:	cbnz	x4, 85c <_ZN5__cfi10InitShadowEv+0xac>
 7c4:	adrp	x19, 0 <_ZN5__cfi9GetShadowEv>
 7c8:	ldr	x4, [x19]
 7cc:	cbnz	x4, 878 <_ZN5__cfi10InitShadowEv+0xc8>
 7d0:	bl	0 <_ZN11__sanitizer24GetMaxUserVirtualAddressEv>
 7d4:	lsr	x8, x0, #11
 7d8:	add	x2, x8, #0x1
 7dc:	str	x2, [x19]
 7e0:	adrp	x20, 0 <_ZN11__sanitizer17current_verbosityE>
 7e4:	ldr	x20, [x20]
 7e8:	ldr	w8, [x20]
 7ec:	cbz	w8, 804 <_ZN5__cfi10InitShadowEv+0x54>
 7f0:	mov	x1, x0
 7f4:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 7f8:	add	x0, x0, #0x0
 7fc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 800:	ldr	x2, [x19]
 804:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 808:	add	x1, x1, #0x0
 80c:	mov	x0, x2
 810:	bl	0 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>
 814:	str	x0, [sp, #8]
 818:	ldr	w8, [x20]
 81c:	cbz	w8, 838 <_ZN5__cfi10InitShadowEv+0x88>
 820:	ldr	x8, [x19]
 824:	mov	x1, x0
 828:	add	x2, x8, x0
 82c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 830:	add	x0, x0, #0x0
 834:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 838:	adrp	x0, 4d4 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 83c:	add	x0, x0, #0x0
 840:	add	x1, sp, #0x8
 844:	bl	0 <dl_iterate_phdr>
 848:	add	x0, sp, #0x8
 84c:	bl	1d0 <_ZN5__cfi13ShadowBuilder7InstallEv>
 850:	ldp	x20, x19, [sp, #16]
 854:	ldr	x30, [sp], #32
 858:	ret
 85c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 860:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 864:	add	x0, x0, #0x0
 868:	add	x2, x2, #0x0
 86c:	mov	w1, #0x137                 	// #311
 870:	mov	x3, xzr
 874:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 878:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 87c:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 880:	add	x0, x0, #0x0
 884:	add	x2, x2, #0x0
 888:	mov	w1, #0x138                 	// #312
 88c:	mov	x3, xzr
 890:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000894 <_ZN5__cfi11EnterLoaderEv>:
 894:	stp	x30, x19, [sp, #-16]!
 898:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 89c:	ldr	x1, [x0]
 8a0:	add	x0, x0, #0x0
 8a4:	blr	x1
 8a8:	mrs	x19, tpidr_el0
 8ac:	ldr	w8, [x19, x0]
 8b0:	cbnz	w8, 8d4 <_ZN5__cfi11EnterLoaderEv+0x40>
 8b4:	adrp	x0, 1000 <_ZN5__cfi18shadow_update_lockE>
 8b8:	add	x0, x0, #0x0
 8bc:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8c0:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 8c4:	ldr	x1, [x0]
 8c8:	add	x0, x0, #0x0
 8cc:	blr	x1
 8d0:	ldr	w8, [x19, x0]
 8d4:	add	w8, w8, #0x1
 8d8:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 8dc:	ldr	x1, [x0]
 8e0:	add	x0, x0, #0x0
 8e4:	blr	x1
 8e8:	str	w8, [x19, x0]
 8ec:	ldp	x30, x19, [sp], #16
 8f0:	ret

00000000000008f4 <_ZN5__cfi10ExitLoaderEv>:
 8f4:	str	x30, [sp, #-32]!
 8f8:	stp	x20, x19, [sp, #16]
 8fc:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 900:	ldr	x1, [x0]
 904:	add	x0, x0, #0x0
 908:	blr	x1
 90c:	mrs	x19, tpidr_el0
 910:	ldr	w8, [x19, x0]
 914:	cmp	w8, #0x0
 918:	b.le	9cc <_ZN5__cfi10ExitLoaderEv+0xd8>
 91c:	sub	w9, w8, #0x1
 920:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 924:	ldr	x1, [x0]
 928:	add	x0, x0, #0x0
 92c:	blr	x1
 930:	adrp	x20, 0 <_ZN5__cfi9GetShadowEv>
 934:	ldr	x8, [x20]
 938:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 93c:	str	w9, [x19, x0]
 940:	add	x1, x1, #0x0
 944:	mov	x0, x8
 948:	bl	0 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>
 94c:	str	x0, [sp, #8]
 950:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 954:	ldr	x8, [x8]
 958:	ldr	w8, [x8]
 95c:	cbz	w8, 978 <_ZN5__cfi10ExitLoaderEv+0x84>
 960:	ldr	x8, [x20]
 964:	mov	x1, x0
 968:	add	x2, x8, x0
 96c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 970:	add	x0, x0, #0x0
 974:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 978:	adrp	x0, 4d4 <_ZN5__cfi18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 97c:	add	x0, x0, #0x0
 980:	add	x1, sp, #0x8
 984:	bl	0 <dl_iterate_phdr>
 988:	add	x0, sp, #0x8
 98c:	bl	1d0 <_ZN5__cfi13ShadowBuilder7InstallEv>
 990:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 994:	ldr	x1, [x0]
 998:	add	x0, x0, #0x0
 99c:	blr	x1
 9a0:	ldr	w8, [x19, x0]
 9a4:	cbz	w8, 9b4 <_ZN5__cfi10ExitLoaderEv+0xc0>
 9a8:	ldp	x20, x19, [sp, #16]
 9ac:	ldr	x30, [sp], #32
 9b0:	ret
 9b4:	adrp	x0, 1000 <_ZN5__cfi18shadow_update_lockE>
 9b8:	add	x0, x0, #0x0
 9bc:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 9c0:	ldp	x20, x19, [sp, #16]
 9c4:	ldr	x30, [sp], #32
 9c8:	ret
 9cc:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 9d0:	adrp	x2, 0 <_ZN5__cfi9GetShadowEv>
 9d4:	add	x0, x0, #0x0
 9d8:	add	x2, x2, #0x0
 9dc:	mov	w1, #0x14d                 	// #333
 9e0:	mov	x3, xzr
 9e4:	mov	x4, xzr
 9e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000009ec <_ZN5__cfi15InitializeFlagsEv>:
 9ec:	sub	sp, sp, #0x60
 9f0:	str	x30, [sp, #64]
 9f4:	stp	x20, x19, [sp, #80]
 9f8:	adrp	x19, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 9fc:	ldr	x19, [x19]
 a00:	mov	x0, x19
 a04:	bl	0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
 a08:	adrp	x20, 0 <_ZN7__ubsan11ubsan_flagsE>
 a0c:	ldr	x20, [x20]
 a10:	mov	x0, x20
 a14:	bl	0 <_ZN7__ubsan5Flags11SetDefaultsEv>
 a18:	add	x0, sp, #0x20
 a1c:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
 a20:	add	x0, sp, #0x20
 a24:	mov	x1, x19
 a28:	bl	0 <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>
 a2c:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 a30:	add	x1, x1, #0x0
 a34:	add	x0, sp, #0x20
 a38:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
 a3c:	mov	x0, sp
 a40:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
 a44:	mov	x0, sp
 a48:	mov	x1, x20
 a4c:	bl	0 <_ZN7__ubsan18RegisterUbsanFlagsEPN11__sanitizer10FlagParserEPNS_5FlagsE>
 a50:	mov	x0, sp
 a54:	mov	x1, x19
 a58:	bl	0 <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>
 a5c:	bl	0 <_ZN7__ubsan28MaybeCallUbsanDefaultOptionsEv>
 a60:	mov	x1, x0
 a64:	mov	x0, sp
 a68:	mov	x2, xzr
 a6c:	bl	0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>
 a70:	adrp	x1, 0 <_ZN5__cfi9GetShadowEv>
 a74:	add	x1, x1, #0x0
 a78:	mov	x0, sp
 a7c:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
 a80:	mov	x0, x19
 a84:	bl	0 <_ZN11__sanitizer21InitializeCommonFlagsEPNS_11CommonFlagsE>
 a88:	adrp	x8, 0 <_ZN11__sanitizer17current_verbosityE>
 a8c:	ldr	x8, [x8]
 a90:	ldr	w8, [x8]
 a94:	cbz	w8, a9c <_ZN5__cfi15InitializeFlagsEv+0xb0>
 a98:	bl	0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 a9c:	ldrb	w8, [x19, #122]
 aa0:	cbz	w8, aac <_ZN5__cfi15InitializeFlagsEv+0xc0>
 aa4:	add	x0, sp, #0x20
 aa8:	bl	0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>
 aac:	ldp	x20, x19, [sp, #80]
 ab0:	ldr	x30, [sp, #64]
 ab4:	add	sp, sp, #0x60
 ab8:	ret

0000000000000abc <__cfi_slowpath>:
 abc:	sub	sp, sp, #0x30
 ac0:	stp	x30, x21, [sp, #16]
 ac4:	stp	x20, x19, [sp, #32]
 ac8:	adrp	x21, 0 <_ZN11__sanitizer17current_verbosityE>
 acc:	ldr	x21, [x21]
 ad0:	mov	x19, x1
 ad4:	mov	x20, x0
 ad8:	ldr	w8, [x21]
 adc:	cmp	w8, #0x3
 ae0:	b.cc	af8 <__cfi_slowpath+0x3c>  // b.lo, b.ul, b.last
 ae4:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 ae8:	add	x0, x0, #0x0
 aec:	mov	x1, x20
 af0:	mov	x2, x19
 af4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 af8:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 afc:	ldr	x9, [x8]
 b00:	lsr	x8, x19, #11
 b04:	and	x8, x8, #0x1ffffffffffffe
 b08:	cmp	x8, x9
 b0c:	b.hi	bb0 <__cfi_slowpath+0xf4>  // b.pmore
 b10:	adrp	x9, 0 <_ZN5__cfi9GetShadowEv>
 b14:	ldr	x9, [x9]
 b18:	ldrh	w8, [x9, x8]
 b1c:	mov	w9, #0xffff                	// #65535
 b20:	cmp	w8, w9
 b24:	b.eq	b78 <__cfi_slowpath+0xbc>  // b.none
 b28:	cbz	w8, bb0 <__cfi_slowpath+0xf4>
 b2c:	ldr	w9, [x21]
 b30:	add	x10, x19, #0x1, lsl #12
 b34:	and	x10, x10, #0xfffffffffffff000
 b38:	sub	x3, x10, x8, lsl #12
 b3c:	cmp	w9, #0x2
 b40:	b.cc	b5c <__cfi_slowpath+0xa0>  // b.lo, b.ul, b.last
 b44:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 b48:	add	x0, x0, #0x0
 b4c:	mov	x1, x3
 b50:	str	x3, [sp, #8]
 b54:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 b58:	ldr	x3, [sp, #8]
 b5c:	mov	x0, x20
 b60:	mov	x1, x19
 b64:	ldp	x20, x19, [sp, #32]
 b68:	ldp	x30, x21, [sp, #16]
 b6c:	mov	x2, xzr
 b70:	add	sp, sp, #0x30
 b74:	br	x3
 b78:	ldr	w8, [x21]
 b7c:	cmp	w8, #0x2
 b80:	b.cc	ba0 <__cfi_slowpath+0xe4>  // b.lo, b.ul, b.last
 b84:	mov	x1, x19
 b88:	ldp	x20, x19, [sp, #32]
 b8c:	ldp	x30, x21, [sp, #16]
 b90:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 b94:	add	x0, x0, #0x0
 b98:	add	sp, sp, #0x30
 b9c:	b	0 <_ZN11__sanitizer6ReportEPKcz>
 ba0:	ldp	x20, x19, [sp, #32]
 ba4:	ldp	x30, x21, [sp, #16]
 ba8:	add	sp, sp, #0x30
 bac:	ret
 bb0:	ldr	w8, [x21]
 bb4:	cbz	w8, bc8 <__cfi_slowpath+0x10c>
 bb8:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 bbc:	add	x0, x0, #0x0
 bc0:	mov	x1, x19
 bc4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 bc8:	brk	#0x1

0000000000000bcc <__cfi_slowpath_diag>:
 bcc:	str	x30, [sp, #-48]!
 bd0:	stp	x22, x21, [sp, #16]
 bd4:	stp	x20, x19, [sp, #32]
 bd8:	adrp	x22, 0 <_ZN11__sanitizer17current_verbosityE>
 bdc:	ldr	x22, [x22]
 be0:	mov	x20, x2
 be4:	mov	x19, x1
 be8:	mov	x21, x0
 bec:	ldr	w8, [x22]
 bf0:	cmp	w8, #0x3
 bf4:	b.cc	c0c <__cfi_slowpath_diag+0x40>  // b.lo, b.ul, b.last
 bf8:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 bfc:	add	x0, x0, #0x0
 c00:	mov	x1, x21
 c04:	mov	x2, x19
 c08:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 c0c:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 c10:	ldr	x9, [x8]
 c14:	lsr	x8, x19, #11
 c18:	and	x8, x8, #0x1ffffffffffffe
 c1c:	cmp	x8, x9
 c20:	b.hi	c40 <__cfi_slowpath_diag+0x74>  // b.pmore
 c24:	adrp	x9, 0 <_ZN5__cfi9GetShadowEv>
 c28:	ldr	x9, [x9]
 c2c:	ldrh	w8, [x9, x8]
 c30:	mov	w9, #0xffff                	// #65535
 c34:	cmp	w8, w9
 c38:	b.eq	c78 <__cfi_slowpath_diag+0xac>  // b.none
 c3c:	cbnz	w8, ca0 <__cfi_slowpath_diag+0xd4>
 c40:	ldr	w8, [x22]
 c44:	cbz	w8, c58 <__cfi_slowpath_diag+0x8c>
 c48:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 c4c:	add	x0, x0, #0x0
 c50:	mov	x1, x19
 c54:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 c58:	cbz	x20, cfc <__cfi_slowpath_diag+0x130>
 c5c:	mov	x0, x20
 c60:	mov	x1, x19
 c64:	ldp	x20, x19, [sp, #32]
 c68:	ldp	x22, x21, [sp, #16]
 c6c:	mov	x2, xzr
 c70:	ldr	x30, [sp], #48
 c74:	b	0 <__ubsan_handle_cfi_check_fail>
 c78:	ldr	w8, [x22]
 c7c:	cmp	w8, #0x2
 c80:	b.cc	cec <__cfi_slowpath_diag+0x120>  // b.lo, b.ul, b.last
 c84:	mov	x1, x19
 c88:	ldp	x20, x19, [sp, #32]
 c8c:	ldp	x22, x21, [sp, #16]
 c90:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 c94:	add	x0, x0, #0x0
 c98:	ldr	x30, [sp], #48
 c9c:	b	0 <_ZN11__sanitizer6ReportEPKcz>
 ca0:	ldr	w9, [x22]
 ca4:	add	x10, x19, #0x1, lsl #12
 ca8:	and	x10, x10, #0xfffffffffffff000
 cac:	sub	x3, x10, x8, lsl #12
 cb0:	cmp	w9, #0x2
 cb4:	b.cc	cd0 <__cfi_slowpath_diag+0x104>  // b.lo, b.ul, b.last
 cb8:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 cbc:	add	x0, x0, #0x0
 cc0:	mov	x1, x3
 cc4:	str	x3, [sp, #8]
 cc8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 ccc:	ldr	x3, [sp, #8]
 cd0:	mov	x0, x21
 cd4:	mov	x1, x19
 cd8:	mov	x2, x20
 cdc:	ldp	x20, x19, [sp, #32]
 ce0:	ldp	x22, x21, [sp, #16]
 ce4:	ldr	x30, [sp], #48
 ce8:	br	x3
 cec:	ldp	x20, x19, [sp, #32]
 cf0:	ldp	x22, x21, [sp, #16]
 cf4:	ldr	x30, [sp], #48
 cf8:	ret
 cfc:	brk	#0x1

0000000000000d00 <__interceptor_dlopen>:
 d00:	stp	x30, x21, [sp, #-32]!
 d04:	stp	x20, x19, [sp, #16]
 d08:	adrp	x21, 0 <_ZN5__cfi9GetShadowEv>
 d0c:	add	x21, x21, #0x0
 d10:	mov	x20, x0
 d14:	add	x0, x21, #0x8
 d18:	mov	w19, w1
 d1c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 d20:	ldrb	w8, [x21]
 d24:	tbnz	w8, #0, d7c <__interceptor_dlopen+0x7c>
 d28:	adrp	x2, d00 <__interceptor_dlopen>
 d2c:	adrp	x3, d00 <__interceptor_dlopen>
 d30:	ldr	x2, [x2]
 d34:	ldr	x3, [x3]
 d38:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 d3c:	adrp	x1, 1058 <_ZN14__interception11real_dlopenE>
 d40:	add	x0, x0, #0x0
 d44:	add	x1, x1, #0x0
 d48:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
 d4c:	adrp	x2, e08 <__interceptor_dlclose>
 d50:	adrp	x3, e08 <__interceptor_dlclose>
 d54:	ldr	x2, [x2]
 d58:	ldr	x3, [x3]
 d5c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 d60:	adrp	x1, 1060 <_ZN14__interception12real_dlcloseE>
 d64:	add	x0, x0, #0x0
 d68:	add	x1, x1, #0x0
 d6c:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
 d70:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 d74:	mov	w9, #0x1                   	// #1
 d78:	strb	w9, [x8]
 d7c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 d80:	add	x0, x0, #0x0
 d84:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 d88:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 d8c:	ldr	x1, [x0]
 d90:	add	x0, x0, #0x0
 d94:	blr	x1
 d98:	mrs	x21, tpidr_el0
 d9c:	ldr	w8, [x21, x0]
 da0:	cbnz	w8, dc4 <__interceptor_dlopen+0xc4>
 da4:	adrp	x0, 1000 <_ZN5__cfi18shadow_update_lockE>
 da8:	add	x0, x0, #0x0
 dac:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 db0:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 db4:	ldr	x1, [x0]
 db8:	add	x0, x0, #0x0
 dbc:	blr	x1
 dc0:	ldr	w8, [x21, x0]
 dc4:	add	w8, w8, #0x1
 dc8:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 dcc:	ldr	x1, [x0]
 dd0:	add	x0, x0, #0x0
 dd4:	blr	x1
 dd8:	adrp	x9, 1058 <_ZN14__interception11real_dlopenE>
 ddc:	ldr	x9, [x9]
 de0:	str	w8, [x21, x0]
 de4:	mov	x0, x20
 de8:	mov	w1, w19
 dec:	blr	x9
 df0:	mov	x19, x0
 df4:	bl	8f4 <_ZN5__cfi10ExitLoaderEv>
 df8:	mov	x0, x19
 dfc:	ldp	x20, x19, [sp, #16]
 e00:	ldp	x30, x21, [sp], #32
 e04:	ret

0000000000000e08 <__interceptor_dlclose>:
 e08:	str	x30, [sp, #-32]!
 e0c:	stp	x20, x19, [sp, #16]
 e10:	adrp	x20, 0 <_ZN5__cfi9GetShadowEv>
 e14:	add	x20, x20, #0x0
 e18:	mov	x19, x0
 e1c:	add	x0, x20, #0x8
 e20:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 e24:	ldrb	w8, [x20]
 e28:	tbnz	w8, #0, e80 <__interceptor_dlclose+0x78>
 e2c:	adrp	x2, d00 <__interceptor_dlopen>
 e30:	adrp	x3, d00 <__interceptor_dlopen>
 e34:	ldr	x2, [x2]
 e38:	ldr	x3, [x3]
 e3c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 e40:	adrp	x1, 1058 <_ZN14__interception11real_dlopenE>
 e44:	add	x0, x0, #0x0
 e48:	add	x1, x1, #0x0
 e4c:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
 e50:	adrp	x2, e08 <__interceptor_dlclose>
 e54:	adrp	x3, e08 <__interceptor_dlclose>
 e58:	ldr	x2, [x2]
 e5c:	ldr	x3, [x3]
 e60:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 e64:	adrp	x1, 1060 <_ZN14__interception12real_dlcloseE>
 e68:	add	x0, x0, #0x0
 e6c:	add	x1, x1, #0x0
 e70:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
 e74:	adrp	x8, 0 <_ZN5__cfi9GetShadowEv>
 e78:	mov	w9, #0x1                   	// #1
 e7c:	strb	w9, [x8]
 e80:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 e84:	add	x0, x0, #0x0
 e88:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 e8c:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 e90:	ldr	x1, [x0]
 e94:	add	x0, x0, #0x0
 e98:	blr	x1
 e9c:	mrs	x20, tpidr_el0
 ea0:	ldr	w8, [x20, x0]
 ea4:	cbnz	w8, ec8 <__interceptor_dlclose+0xc0>
 ea8:	adrp	x0, 1000 <_ZN5__cfi18shadow_update_lockE>
 eac:	add	x0, x0, #0x0
 eb0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
 eb4:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 eb8:	ldr	x1, [x0]
 ebc:	add	x0, x0, #0x0
 ec0:	blr	x1
 ec4:	ldr	w8, [x20, x0]
 ec8:	add	w8, w8, #0x1
 ecc:	adrp	x0, 0 <_ZN5__cfi9GetShadowEv>
 ed0:	ldr	x1, [x0]
 ed4:	add	x0, x0, #0x0
 ed8:	blr	x1
 edc:	adrp	x9, 1060 <_ZN14__interception12real_dlcloseE>
 ee0:	ldr	x9, [x9]
 ee4:	str	w8, [x20, x0]
 ee8:	mov	x0, x19
 eec:	blr	x9
 ef0:	mov	w19, w0
 ef4:	bl	8f4 <_ZN5__cfi10ExitLoaderEv>
 ef8:	mov	w0, w19
 efc:	ldp	x20, x19, [sp, #16]
 f00:	ldr	x30, [sp], #32
 f04:	ret

0000000000000f08 <__cfi_init>:
 f08:	str	x30, [sp, #-16]!
 f0c:	adrp	x8, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 f10:	ldr	x8, [x8]
 f14:	adrp	x9, 0 <_ZN5__cfi9GetShadowEv>
 f18:	add	x9, x9, #0x0
 f1c:	str	x9, [x8]
 f20:	bl	9ec <_ZN5__cfi15InitializeFlagsEv>
 f24:	bl	7b0 <_ZN5__cfi10InitShadowEv>
 f28:	ldr	x30, [sp], #16
 f2c:	b	0 <_ZN7__ubsan12InitAsPluginEv>
