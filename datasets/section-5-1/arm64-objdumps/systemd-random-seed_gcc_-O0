
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-random-seed_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401080 <_init>:
  401080:	stp	x29, x30, [sp, #-16]!
  401084:	mov	x29, sp
  401088:	bl	401380 <call_weak_fn>
  40108c:	ldp	x29, x30, [sp], #16
  401090:	ret

Disassembly of section .plt:

00000000004010a0 <.plt>:
  4010a0:	stp	x16, x30, [sp, #-16]!
  4010a4:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4010a8:	ldr	x17, [x16, #3760]
  4010ac:	add	x16, x16, #0xeb0
  4010b0:	br	x17
  4010b4:	nop
  4010b8:	nop
  4010bc:	nop

00000000004010c0 <fsetxattr@plt>:
  4010c0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4010c4:	ldr	x17, [x16, #3768]
  4010c8:	add	x16, x16, #0xeb8
  4010cc:	br	x17

00000000004010d0 <__libc_start_main@plt>:
  4010d0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4010d4:	ldr	x17, [x16, #3776]
  4010d8:	add	x16, x16, #0xec0
  4010dc:	br	x17

00000000004010e0 <lseek64@plt>:
  4010e0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4010e4:	ldr	x17, [x16, #3784]
  4010e8:	add	x16, x16, #0xec8
  4010ec:	br	x17

00000000004010f0 <parse_boolean@plt>:
  4010f0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4010f4:	ldr	x17, [x16, #3792]
  4010f8:	add	x16, x16, #0xed0
  4010fc:	br	x17

0000000000401100 <__gmon_start__@plt>:
  401100:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401104:	ldr	x17, [x16, #3800]
  401108:	add	x16, x16, #0xed8
  40110c:	br	x17

0000000000401110 <polkit_agent_close@plt>:
  401110:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401114:	ldr	x17, [x16, #3808]
  401118:	add	x16, x16, #0xee0
  40111c:	br	x17

0000000000401120 <fchmod_and_chown@plt>:
  401120:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401124:	ldr	x17, [x16, #3816]
  401128:	add	x16, x16, #0xee8
  40112c:	br	x17

0000000000401130 <loop_write@plt>:
  401130:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401134:	ldr	x17, [x16, #3824]
  401138:	add	x16, x16, #0xef0
  40113c:	br	x17

0000000000401140 <loop_read@plt>:
  401140:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401144:	ldr	x17, [x16, #3832]
  401148:	add	x16, x16, #0xef8
  40114c:	br	x17

0000000000401150 <memcpy@plt>:
  401150:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401154:	ldr	x17, [x16, #3840]
  401158:	add	x16, x16, #0xf00
  40115c:	br	x17

0000000000401160 <log_setup_service@plt>:
  401160:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401164:	ldr	x17, [x16, #3848]
  401168:	add	x16, x16, #0xf08
  40116c:	br	x17

0000000000401170 <safe_close@plt>:
  401170:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401174:	ldr	x17, [x16, #3856]
  401178:	add	x16, x16, #0xf10
  40117c:	br	x17

0000000000401180 <log_assert_failed_realm@plt>:
  401180:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401184:	ldr	x17, [x16, #3864]
  401188:	add	x16, x16, #0xf18
  40118c:	br	x17

0000000000401190 <fgetxattr_malloc@plt>:
  401190:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401194:	ldr	x17, [x16, #3872]
  401198:	add	x16, x16, #0xf20
  40119c:	br	x17

00000000004011a0 <umask@plt>:
  4011a0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011a4:	ldr	x17, [x16, #3880]
  4011a8:	add	x16, x16, #0xf28
  4011ac:	br	x17

00000000004011b0 <access@plt>:
  4011b0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011b4:	ldr	x17, [x16, #3888]
  4011b8:	add	x16, x16, #0xf30
  4011bc:	br	x17

00000000004011c0 <abort@plt>:
  4011c0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011c4:	ldr	x17, [x16, #3896]
  4011c8:	add	x16, x16, #0xf38
  4011cc:	br	x17

00000000004011d0 <fsync_full@plt>:
  4011d0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011d4:	ldr	x17, [x16, #3904]
  4011d8:	add	x16, x16, #0xf40
  4011dc:	br	x17

00000000004011e0 <__fxstat64@plt>:
  4011e0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011e4:	ldr	x17, [x16, #3912]
  4011e8:	add	x16, x16, #0xf48
  4011ec:	br	x17

00000000004011f0 <getrandom@plt>:
  4011f0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4011f4:	ldr	x17, [x16, #3920]
  4011f8:	add	x16, x16, #0xf50
  4011fc:	br	x17

0000000000401200 <__errno_location@plt>:
  401200:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401204:	ldr	x17, [x16, #3928]
  401208:	add	x16, x16, #0xf58
  40120c:	br	x17

0000000000401210 <random_pool_size@plt>:
  401210:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401214:	ldr	x17, [x16, #3936]
  401218:	add	x16, x16, #0xf60
  40121c:	br	x17

0000000000401220 <__stack_chk_fail@plt>:
  401220:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401224:	ldr	x17, [x16, #3944]
  401228:	add	x16, x16, #0xf68
  40122c:	br	x17

0000000000401230 <ask_password_agent_close@plt>:
  401230:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401234:	ldr	x17, [x16, #3952]
  401238:	add	x16, x16, #0xf70
  40123c:	br	x17

0000000000401240 <ftruncate64@plt>:
  401240:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401244:	ldr	x17, [x16, #3960]
  401248:	add	x16, x16, #0xf78
  40124c:	br	x17

0000000000401250 <pager_close@plt>:
  401250:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401254:	ldr	x17, [x16, #3968]
  401258:	add	x16, x16, #0xf80
  40125c:	br	x17

0000000000401260 <sd_id128_get_machine@plt>:
  401260:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401264:	ldr	x17, [x16, #3976]
  401268:	add	x16, x16, #0xf88
  40126c:	br	x17

0000000000401270 <malloc@plt>:
  401270:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401274:	ldr	x17, [x16, #3984]
  401278:	add	x16, x16, #0xf90
  40127c:	br	x17

0000000000401280 <log_internal_realm@plt>:
  401280:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401284:	ldr	x17, [x16, #3992]
  401288:	add	x16, x16, #0xf98
  40128c:	br	x17

0000000000401290 <ioctl@plt>:
  401290:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401294:	ldr	x17, [x16, #4000]
  401298:	add	x16, x16, #0xfa0
  40129c:	br	x17

00000000004012a0 <strcmp@plt>:
  4012a0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012a4:	ldr	x17, [x16, #4008]
  4012a8:	add	x16, x16, #0xfa8
  4012ac:	br	x17

00000000004012b0 <getenv@plt>:
  4012b0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012b4:	ldr	x17, [x16, #4016]
  4012b8:	add	x16, x16, #0xfb0
  4012bc:	br	x17

00000000004012c0 <free@plt>:
  4012c0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012c4:	ldr	x17, [x16, #4024]
  4012c8:	add	x16, x16, #0xfb8
  4012cc:	br	x17

00000000004012d0 <fremovexattr@plt>:
  4012d0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012d4:	ldr	x17, [x16, #4032]
  4012d8:	add	x16, x16, #0xfc0
  4012dc:	br	x17

00000000004012e0 <mac_selinux_finish@plt>:
  4012e0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012e4:	ldr	x17, [x16, #4040]
  4012e8:	add	x16, x16, #0xfc8
  4012ec:	br	x17

00000000004012f0 <open64@plt>:
  4012f0:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  4012f4:	ldr	x17, [x16, #4048]
  4012f8:	add	x16, x16, #0xfd0
  4012fc:	br	x17

0000000000401300 <mkdir_parents@plt>:
  401300:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401304:	ldr	x17, [x16, #4056]
  401308:	add	x16, x16, #0xfd8
  40130c:	br	x17

0000000000401310 <log_oom_internal@plt>:
  401310:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401314:	ldr	x17, [x16, #4064]
  401318:	add	x16, x16, #0xfe0
  40131c:	br	x17

0000000000401320 <log_get_max_level_realm@plt>:
  401320:	adrp	x16, 414000 <__FRAME_END__+0x10154>
  401324:	ldr	x17, [x16, #4072]
  401328:	add	x16, x16, #0xfe8
  40132c:	br	x17

Disassembly of section .text:

0000000000401330 <_start>:
  401330:	mov	x29, #0x0                   	// #0
  401334:	mov	x30, #0x0                   	// #0
  401338:	mov	x5, x0
  40133c:	ldr	x1, [sp]
  401340:	add	x2, sp, #0x8
  401344:	mov	x6, sp
  401348:	movz	x0, #0x0, lsl #48
  40134c:	movk	x0, #0x0, lsl #32
  401350:	movk	x0, #0x40, lsl #16
  401354:	movk	x0, #0x3210
  401358:	movz	x3, #0x0, lsl #48
  40135c:	movk	x3, #0x0, lsl #32
  401360:	movk	x3, #0x40, lsl #16
  401364:	movk	x3, #0x3260
  401368:	movz	x4, #0x0, lsl #48
  40136c:	movk	x4, #0x0, lsl #32
  401370:	movk	x4, #0x40, lsl #16
  401374:	movk	x4, #0x32e0
  401378:	bl	4010d0 <__libc_start_main@plt>
  40137c:	bl	4011c0 <abort@plt>

0000000000401380 <call_weak_fn>:
  401380:	adrp	x0, 414000 <__FRAME_END__+0x10154>
  401384:	ldr	x0, [x0, #4088]
  401388:	cbz	x0, 401390 <call_weak_fn+0x10>
  40138c:	b	401100 <__gmon_start__@plt>
  401390:	ret

0000000000401394 <deregister_tm_clones>:
  401394:	stp	x29, x30, [sp, #-32]!
  401398:	mov	x29, sp
  40139c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4013a0:	add	x0, x0, #0x0
  4013a4:	str	x0, [sp, #24]
  4013a8:	ldr	x0, [sp, #24]
  4013ac:	str	x0, [sp, #24]
  4013b0:	ldr	x1, [sp, #24]
  4013b4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4013b8:	add	x0, x0, #0x0
  4013bc:	cmp	x1, x0
  4013c0:	b.eq	4013fc <deregister_tm_clones+0x68>  // b.none
  4013c4:	adrp	x0, 403000 <run+0x130c>
  4013c8:	add	x0, x0, #0x308
  4013cc:	ldr	x0, [x0]
  4013d0:	str	x0, [sp, #16]
  4013d4:	ldr	x0, [sp, #16]
  4013d8:	str	x0, [sp, #16]
  4013dc:	ldr	x0, [sp, #16]
  4013e0:	cmp	x0, #0x0
  4013e4:	b.eq	401400 <deregister_tm_clones+0x6c>  // b.none
  4013e8:	ldr	x1, [sp, #16]
  4013ec:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4013f0:	add	x0, x0, #0x0
  4013f4:	blr	x1
  4013f8:	b	401400 <deregister_tm_clones+0x6c>
  4013fc:	nop
  401400:	ldp	x29, x30, [sp], #32
  401404:	ret

0000000000401408 <register_tm_clones>:
  401408:	stp	x29, x30, [sp, #-48]!
  40140c:	mov	x29, sp
  401410:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401414:	add	x0, x0, #0x0
  401418:	str	x0, [sp, #40]
  40141c:	ldr	x0, [sp, #40]
  401420:	str	x0, [sp, #40]
  401424:	ldr	x1, [sp, #40]
  401428:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40142c:	add	x0, x0, #0x0
  401430:	sub	x0, x1, x0
  401434:	asr	x0, x0, #3
  401438:	lsr	x1, x0, #63
  40143c:	add	x0, x1, x0
  401440:	asr	x0, x0, #1
  401444:	str	x0, [sp, #32]
  401448:	ldr	x0, [sp, #32]
  40144c:	cmp	x0, #0x0
  401450:	b.eq	401490 <register_tm_clones+0x88>  // b.none
  401454:	adrp	x0, 403000 <run+0x130c>
  401458:	add	x0, x0, #0x310
  40145c:	ldr	x0, [x0]
  401460:	str	x0, [sp, #24]
  401464:	ldr	x0, [sp, #24]
  401468:	str	x0, [sp, #24]
  40146c:	ldr	x0, [sp, #24]
  401470:	cmp	x0, #0x0
  401474:	b.eq	401494 <register_tm_clones+0x8c>  // b.none
  401478:	ldr	x2, [sp, #24]
  40147c:	ldr	x1, [sp, #32]
  401480:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401484:	add	x0, x0, #0x0
  401488:	blr	x2
  40148c:	b	401494 <register_tm_clones+0x8c>
  401490:	nop
  401494:	ldp	x29, x30, [sp], #48
  401498:	ret

000000000040149c <__do_global_dtors_aux>:
  40149c:	stp	x29, x30, [sp, #-16]!
  4014a0:	mov	x29, sp
  4014a4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4014a8:	add	x0, x0, #0xc
  4014ac:	ldrb	w0, [x0]
  4014b0:	and	x0, x0, #0xff
  4014b4:	cmp	x0, #0x0
  4014b8:	b.ne	4014d4 <__do_global_dtors_aux+0x38>  // b.any
  4014bc:	bl	401394 <deregister_tm_clones>
  4014c0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4014c4:	add	x0, x0, #0xc
  4014c8:	mov	w1, #0x1                   	// #1
  4014cc:	strb	w1, [x0]
  4014d0:	b	4014d8 <__do_global_dtors_aux+0x3c>
  4014d4:	nop
  4014d8:	ldp	x29, x30, [sp], #16
  4014dc:	ret

00000000004014e0 <frame_dummy>:
  4014e0:	stp	x29, x30, [sp, #-16]!
  4014e4:	mov	x29, sp
  4014e8:	bl	401408 <register_tm_clones>
  4014ec:	nop
  4014f0:	ldp	x29, x30, [sp], #16
  4014f4:	ret

00000000004014f8 <ALIGN_TO>:
  4014f8:	sub	sp, sp, #0x10
  4014fc:	str	x0, [sp, #8]
  401500:	str	x1, [sp]
  401504:	ldr	x1, [sp, #8]
  401508:	ldr	x0, [sp]
  40150c:	add	x0, x1, x0
  401510:	sub	x1, x0, #0x1
  401514:	ldr	x0, [sp]
  401518:	neg	x0, x0
  40151c:	and	x0, x1, x0
  401520:	add	sp, sp, #0x10
  401524:	ret

0000000000401528 <freep>:
  401528:	stp	x29, x30, [sp, #-32]!
  40152c:	mov	x29, sp
  401530:	str	x0, [sp, #24]
  401534:	ldr	x0, [sp, #24]
  401538:	ldr	x0, [x0]
  40153c:	bl	4012c0 <free@plt>
  401540:	nop
  401544:	ldp	x29, x30, [sp], #32
  401548:	ret

000000000040154c <closep>:
  40154c:	stp	x29, x30, [sp, #-32]!
  401550:	mov	x29, sp
  401554:	str	x0, [sp, #24]
  401558:	ldr	x0, [sp, #24]
  40155c:	ldr	w0, [x0]
  401560:	bl	401170 <safe_close@plt>
  401564:	nop
  401568:	ldp	x29, x30, [sp], #32
  40156c:	ret

0000000000401570 <save_argc_argv>:
  401570:	sub	sp, sp, #0x10
  401574:	str	w0, [sp, #12]
  401578:	str	x1, [sp]
  40157c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401580:	add	x0, x0, #0x8
  401584:	ldr	w1, [sp, #12]
  401588:	str	w1, [x0]
  40158c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401590:	add	x0, x0, #0x0
  401594:	ldr	x1, [sp]
  401598:	str	x1, [x0]
  40159c:	nop
  4015a0:	add	sp, sp, #0x10
  4015a4:	ret

00000000004015a8 <static_destruct>:
  4015a8:	stp	x29, x30, [sp, #-32]!
  4015ac:	mov	x29, sp
  4015b0:	adrp	x0, 403000 <run+0x130c>
  4015b4:	add	x0, x0, #0xc00
  4015b8:	ldr	x0, [x0]
  4015bc:	cmp	x0, #0x0
  4015c0:	b.eq	401624 <static_destruct+0x7c>  // b.none
  4015c4:	adrp	x0, 403000 <run+0x130c>
  4015c8:	add	x0, x0, #0xc00
  4015cc:	ldr	x0, [x0]
  4015d0:	mov	x1, #0x8                   	// #8
  4015d4:	bl	4014f8 <ALIGN_TO>
  4015d8:	str	x0, [sp, #24]
  4015dc:	b	401608 <static_destruct+0x60>
  4015e0:	ldr	x0, [sp, #24]
  4015e4:	ldr	x1, [x0, #8]
  4015e8:	ldr	x0, [sp, #24]
  4015ec:	ldr	x0, [x0]
  4015f0:	blr	x1
  4015f4:	ldr	x0, [sp, #24]
  4015f8:	add	x0, x0, #0x10
  4015fc:	mov	x1, #0x8                   	// #8
  401600:	bl	4014f8 <ALIGN_TO>
  401604:	str	x0, [sp, #24]
  401608:	ldr	x1, [sp, #24]
  40160c:	adrp	x0, 403000 <run+0x130c>
  401610:	add	x0, x0, #0xc08
  401614:	ldr	x0, [x0]
  401618:	cmp	x1, x0
  40161c:	b.cc	4015e0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401620:	b	401628 <static_destruct+0x80>
  401624:	nop
  401628:	ldp	x29, x30, [sp], #32
  40162c:	ret

0000000000401630 <may_credit>:
  401630:	stp	x29, x30, [sp, #-208]!
  401634:	mov	x29, sp
  401638:	str	x19, [sp, #16]
  40163c:	str	w0, [sp, #44]
  401640:	adrp	x0, 414000 <__FRAME_END__+0x10154>
  401644:	add	x0, x0, #0xc68
  401648:	ldr	x1, [x0]
  40164c:	str	x1, [sp, #200]
  401650:	mov	x1, #0x0                   	// #0
  401654:	str	xzr, [sp, #184]
  401658:	ldr	w0, [sp, #44]
  40165c:	lsr	w0, w0, #31
  401660:	and	w0, w0, #0xff
  401664:	and	x0, x0, #0xff
  401668:	cmp	x0, #0x0
  40166c:	b.eq	401698 <may_credit+0x68>  // b.none
  401670:	adrp	x0, 403000 <run+0x130c>
  401674:	add	x1, x0, #0x31b
  401678:	adrp	x0, 403000 <run+0x130c>
  40167c:	add	x4, x0, #0xc10
  401680:	mov	w3, #0x29                  	// #41
  401684:	mov	x2, x1
  401688:	adrp	x0, 403000 <run+0x130c>
  40168c:	add	x1, x0, #0x340
  401690:	mov	w0, #0x0                   	// #0
  401694:	bl	401180 <log_assert_failed_realm@plt>
  401698:	adrp	x0, 403000 <run+0x130c>
  40169c:	add	x0, x0, #0x350
  4016a0:	bl	4012b0 <getenv@plt>
  4016a4:	str	x0, [sp, #192]
  4016a8:	ldr	x0, [sp, #192]
  4016ac:	cmp	x0, #0x0
  4016b0:	b.ne	401730 <may_credit+0x100>  // b.any
  4016b4:	mov	w0, #0x7                   	// #7
  4016b8:	str	w0, [sp, #172]
  4016bc:	str	wzr, [sp, #176]
  4016c0:	str	wzr, [sp, #180]
  4016c4:	ldr	w0, [sp, #180]
  4016c8:	bl	401320 <log_get_max_level_realm@plt>
  4016cc:	mov	w1, w0
  4016d0:	ldr	w0, [sp, #172]
  4016d4:	and	w0, w0, #0x7
  4016d8:	cmp	w1, w0
  4016dc:	b.lt	401720 <may_credit+0xf0>  // b.tstop
  4016e0:	ldr	w0, [sp, #180]
  4016e4:	lsl	w1, w0, #10
  4016e8:	ldr	w0, [sp, #172]
  4016ec:	orr	w6, w1, w0
  4016f0:	adrp	x0, 403000 <run+0x130c>
  4016f4:	add	x1, x0, #0x31b
  4016f8:	adrp	x0, 403000 <run+0x130c>
  4016fc:	add	x5, x0, #0x370
  401700:	adrp	x0, 403000 <run+0x130c>
  401704:	add	x4, x0, #0xc20
  401708:	mov	w3, #0x2d                  	// #45
  40170c:	mov	x2, x1
  401710:	ldr	w1, [sp, #176]
  401714:	mov	w0, w6
  401718:	bl	401280 <log_internal_realm@plt>
  40171c:	b	401728 <may_credit+0xf8>
  401720:	ldr	w0, [sp, #176]
  401724:	cmp	w0, #0x0
  401728:	mov	w19, #0x0                   	// #0
  40172c:	b	401cb8 <may_credit+0x688>
  401730:	adrp	x0, 403000 <run+0x130c>
  401734:	add	x1, x0, #0x3b0
  401738:	ldr	x0, [sp, #192]
  40173c:	bl	4012a0 <strcmp@plt>
  401740:	cmp	w0, #0x0
  401744:	b.ne	4017c4 <may_credit+0x194>  // b.any
  401748:	mov	w0, #0x7                   	// #7
  40174c:	str	w0, [sp, #160]
  401750:	str	wzr, [sp, #164]
  401754:	str	wzr, [sp, #168]
  401758:	ldr	w0, [sp, #168]
  40175c:	bl	401320 <log_get_max_level_realm@plt>
  401760:	mov	w1, w0
  401764:	ldr	w0, [sp, #160]
  401768:	and	w0, w0, #0x7
  40176c:	cmp	w1, w0
  401770:	b.lt	4017b4 <may_credit+0x184>  // b.tstop
  401774:	ldr	w0, [sp, #168]
  401778:	lsl	w1, w0, #10
  40177c:	ldr	w0, [sp, #160]
  401780:	orr	w6, w1, w0
  401784:	adrp	x0, 403000 <run+0x130c>
  401788:	add	x1, x0, #0x31b
  40178c:	adrp	x0, 403000 <run+0x130c>
  401790:	add	x5, x0, #0x3b8
  401794:	adrp	x0, 403000 <run+0x130c>
  401798:	add	x4, x0, #0xc20
  40179c:	mov	w3, #0x31                  	// #49
  4017a0:	mov	x2, x1
  4017a4:	ldr	w1, [sp, #164]
  4017a8:	mov	w0, w6
  4017ac:	bl	401280 <log_internal_realm@plt>
  4017b0:	b	4017bc <may_credit+0x18c>
  4017b4:	ldr	w0, [sp, #164]
  4017b8:	cmp	w0, #0x0
  4017bc:	mov	w19, #0x2                   	// #2
  4017c0:	b	401cb8 <may_credit+0x688>
  4017c4:	ldr	x0, [sp, #192]
  4017c8:	bl	4010f0 <parse_boolean@plt>
  4017cc:	str	w0, [sp, #60]
  4017d0:	ldr	w0, [sp, #60]
  4017d4:	cmp	w0, #0x0
  4017d8:	b.gt	4018e0 <may_credit+0x2b0>
  4017dc:	ldr	w0, [sp, #60]
  4017e0:	cmp	w0, #0x0
  4017e4:	b.ge	401864 <may_credit+0x234>  // b.tcont
  4017e8:	mov	w0, #0x4                   	// #4
  4017ec:	str	w0, [sp, #148]
  4017f0:	ldr	w0, [sp, #60]
  4017f4:	str	w0, [sp, #152]
  4017f8:	str	wzr, [sp, #156]
  4017fc:	ldr	w0, [sp, #156]
  401800:	bl	401320 <log_get_max_level_realm@plt>
  401804:	mov	w1, w0
  401808:	ldr	w0, [sp, #148]
  40180c:	and	w0, w0, #0x7
  401810:	cmp	w1, w0
  401814:	b.lt	401858 <may_credit+0x228>  // b.tstop
  401818:	ldr	w0, [sp, #156]
  40181c:	lsl	w1, w0, #10
  401820:	ldr	w0, [sp, #148]
  401824:	orr	w6, w1, w0
  401828:	adrp	x0, 403000 <run+0x130c>
  40182c:	add	x1, x0, #0x31b
  401830:	adrp	x0, 403000 <run+0x130c>
  401834:	add	x5, x0, #0x400
  401838:	adrp	x0, 403000 <run+0x130c>
  40183c:	add	x4, x0, #0xc20
  401840:	mov	w3, #0x38                  	// #56
  401844:	mov	x2, x1
  401848:	ldr	w1, [sp, #152]
  40184c:	mov	w0, w6
  401850:	bl	401280 <log_internal_realm@plt>
  401854:	b	4018d8 <may_credit+0x2a8>
  401858:	ldr	w0, [sp, #152]
  40185c:	cmp	w0, #0x0
  401860:	b	4018d8 <may_credit+0x2a8>
  401864:	mov	w0, #0x7                   	// #7
  401868:	str	w0, [sp, #136]
  40186c:	str	wzr, [sp, #140]
  401870:	str	wzr, [sp, #144]
  401874:	ldr	w0, [sp, #144]
  401878:	bl	401320 <log_get_max_level_realm@plt>
  40187c:	mov	w1, w0
  401880:	ldr	w0, [sp, #136]
  401884:	and	w0, w0, #0x7
  401888:	cmp	w1, w0
  40188c:	b.lt	4018d0 <may_credit+0x2a0>  // b.tstop
  401890:	ldr	w0, [sp, #144]
  401894:	lsl	w1, w0, #10
  401898:	ldr	w0, [sp, #136]
  40189c:	orr	w6, w1, w0
  4018a0:	adrp	x0, 403000 <run+0x130c>
  4018a4:	add	x1, x0, #0x31b
  4018a8:	adrp	x0, 403000 <run+0x130c>
  4018ac:	add	x5, x0, #0x448
  4018b0:	adrp	x0, 403000 <run+0x130c>
  4018b4:	add	x4, x0, #0xc20
  4018b8:	mov	w3, #0x3a                  	// #58
  4018bc:	mov	x2, x1
  4018c0:	ldr	w1, [sp, #140]
  4018c4:	mov	w0, w6
  4018c8:	bl	401280 <log_internal_realm@plt>
  4018cc:	b	4018d8 <may_credit+0x2a8>
  4018d0:	ldr	w0, [sp, #140]
  4018d4:	cmp	w0, #0x0
  4018d8:	mov	w19, #0x0                   	// #0
  4018dc:	b	401cb8 <may_credit+0x688>
  4018e0:	add	x0, sp, #0xb8
  4018e4:	mov	x2, x0
  4018e8:	adrp	x0, 403000 <run+0x130c>
  4018ec:	add	x1, x0, #0x4a0
  4018f0:	ldr	w0, [sp, #44]
  4018f4:	bl	401190 <fgetxattr_malloc@plt>
  4018f8:	str	w0, [sp, #60]
  4018fc:	ldr	w0, [sp, #60]
  401900:	cmp	w0, #0x0
  401904:	b.ge	401a68 <may_credit+0x438>  // b.tcont
  401908:	strb	wzr, [sp, #59]
  40190c:	ldr	w0, [sp, #60]
  401910:	add	w0, w0, #0x5f
  401914:	cmp	w0, #0x39
  401918:	cset	w1, hi  // hi = pmore
  40191c:	and	w1, w1, #0xff
  401920:	cmp	w1, #0x0
  401924:	b.ne	40195c <may_credit+0x32c>  // b.any
  401928:	mov	x1, #0x1                   	// #1
  40192c:	lsl	x1, x1, x0
  401930:	mov	x0, #0x1                   	// #1
  401934:	movk	x0, #0x4, lsl #32
  401938:	movk	x0, #0x200, lsl #48
  40193c:	and	x0, x1, x0
  401940:	cmp	x0, #0x0
  401944:	cset	w0, ne  // ne = any
  401948:	and	w0, w0, #0xff
  40194c:	cmp	w0, #0x0
  401950:	b.eq	40195c <may_credit+0x32c>  // b.none
  401954:	mov	w0, #0x1                   	// #1
  401958:	strb	w0, [sp, #59]
  40195c:	nop
  401960:	ldrb	w0, [sp, #59]
  401964:	cmp	w0, #0x0
  401968:	b.eq	4019e8 <may_credit+0x3b8>  // b.none
  40196c:	mov	w0, #0x7                   	// #7
  401970:	str	w0, [sp, #124]
  401974:	ldr	w0, [sp, #60]
  401978:	str	w0, [sp, #128]
  40197c:	str	wzr, [sp, #132]
  401980:	ldr	w0, [sp, #132]
  401984:	bl	401320 <log_get_max_level_realm@plt>
  401988:	mov	w1, w0
  40198c:	ldr	w0, [sp, #124]
  401990:	and	w0, w0, #0x7
  401994:	cmp	w1, w0
  401998:	b.lt	4019dc <may_credit+0x3ac>  // b.tstop
  40199c:	ldr	w0, [sp, #132]
  4019a0:	lsl	w1, w0, #10
  4019a4:	ldr	w0, [sp, #124]
  4019a8:	orr	w6, w1, w0
  4019ac:	adrp	x0, 403000 <run+0x130c>
  4019b0:	add	x1, x0, #0x31b
  4019b4:	adrp	x0, 403000 <run+0x130c>
  4019b8:	add	x5, x0, #0x4c0
  4019bc:	adrp	x0, 403000 <run+0x130c>
  4019c0:	add	x4, x0, #0xc20
  4019c4:	mov	w3, #0x43                  	// #67
  4019c8:	mov	x2, x1
  4019cc:	ldr	w1, [sp, #128]
  4019d0:	mov	w0, w6
  4019d4:	bl	401280 <log_internal_realm@plt>
  4019d8:	b	401a60 <may_credit+0x430>
  4019dc:	ldr	w0, [sp, #128]
  4019e0:	cmp	w0, #0x0
  4019e4:	b	401a60 <may_credit+0x430>
  4019e8:	mov	w0, #0x4                   	// #4
  4019ec:	str	w0, [sp, #112]
  4019f0:	ldr	w0, [sp, #60]
  4019f4:	str	w0, [sp, #116]
  4019f8:	str	wzr, [sp, #120]
  4019fc:	ldr	w0, [sp, #120]
  401a00:	bl	401320 <log_get_max_level_realm@plt>
  401a04:	mov	w1, w0
  401a08:	ldr	w0, [sp, #112]
  401a0c:	and	w0, w0, #0x7
  401a10:	cmp	w1, w0
  401a14:	b.lt	401a58 <may_credit+0x428>  // b.tstop
  401a18:	ldr	w0, [sp, #120]
  401a1c:	lsl	w1, w0, #10
  401a20:	ldr	w0, [sp, #112]
  401a24:	orr	w6, w1, w0
  401a28:	adrp	x0, 403000 <run+0x130c>
  401a2c:	add	x1, x0, #0x31b
  401a30:	adrp	x0, 403000 <run+0x130c>
  401a34:	add	x5, x0, #0x4f8
  401a38:	adrp	x0, 403000 <run+0x130c>
  401a3c:	add	x4, x0, #0xc20
  401a40:	mov	w3, #0x45                  	// #69
  401a44:	mov	x2, x1
  401a48:	ldr	w1, [sp, #116]
  401a4c:	mov	w0, w6
  401a50:	bl	401280 <log_internal_realm@plt>
  401a54:	b	401a60 <may_credit+0x430>
  401a58:	ldr	w0, [sp, #116]
  401a5c:	cmp	w0, #0x0
  401a60:	mov	w19, #0x0                   	// #0
  401a64:	b	401cb8 <may_credit+0x688>
  401a68:	ldr	x0, [sp, #184]
  401a6c:	bl	4010f0 <parse_boolean@plt>
  401a70:	str	w0, [sp, #60]
  401a74:	ldr	w0, [sp, #60]
  401a78:	cmp	w0, #0x0
  401a7c:	b.gt	401b8c <may_credit+0x55c>
  401a80:	ldr	w0, [sp, #60]
  401a84:	cmp	w0, #0x0
  401a88:	b.ge	401b10 <may_credit+0x4e0>  // b.tcont
  401a8c:	mov	w0, #0x4                   	// #4
  401a90:	str	w0, [sp, #100]
  401a94:	ldr	w0, [sp, #60]
  401a98:	str	w0, [sp, #104]
  401a9c:	str	wzr, [sp, #108]
  401aa0:	ldr	w0, [sp, #108]
  401aa4:	bl	401320 <log_get_max_level_realm@plt>
  401aa8:	mov	w1, w0
  401aac:	ldr	w0, [sp, #100]
  401ab0:	and	w0, w0, #0x7
  401ab4:	cmp	w1, w0
  401ab8:	b.lt	401b04 <may_credit+0x4d4>  // b.tstop
  401abc:	ldr	w0, [sp, #108]
  401ac0:	lsl	w1, w0, #10
  401ac4:	ldr	w0, [sp, #100]
  401ac8:	orr	w7, w1, w0
  401acc:	adrp	x0, 403000 <run+0x130c>
  401ad0:	add	x1, x0, #0x31b
  401ad4:	ldr	x0, [sp, #184]
  401ad8:	mov	x6, x0
  401adc:	adrp	x0, 403000 <run+0x130c>
  401ae0:	add	x5, x0, #0x528
  401ae4:	adrp	x0, 403000 <run+0x130c>
  401ae8:	add	x4, x0, #0xc20
  401aec:	mov	w3, #0x4d                  	// #77
  401af0:	mov	x2, x1
  401af4:	ldr	w1, [sp, #104]
  401af8:	mov	w0, w7
  401afc:	bl	401280 <log_internal_realm@plt>
  401b00:	b	401b84 <may_credit+0x554>
  401b04:	ldr	w0, [sp, #104]
  401b08:	cmp	w0, #0x0
  401b0c:	b	401b84 <may_credit+0x554>
  401b10:	mov	w0, #0x7                   	// #7
  401b14:	str	w0, [sp, #88]
  401b18:	str	wzr, [sp, #92]
  401b1c:	str	wzr, [sp, #96]
  401b20:	ldr	w0, [sp, #96]
  401b24:	bl	401320 <log_get_max_level_realm@plt>
  401b28:	mov	w1, w0
  401b2c:	ldr	w0, [sp, #88]
  401b30:	and	w0, w0, #0x7
  401b34:	cmp	w1, w0
  401b38:	b.lt	401b7c <may_credit+0x54c>  // b.tstop
  401b3c:	ldr	w0, [sp, #96]
  401b40:	lsl	w1, w0, #10
  401b44:	ldr	w0, [sp, #88]
  401b48:	orr	w6, w1, w0
  401b4c:	adrp	x0, 403000 <run+0x130c>
  401b50:	add	x1, x0, #0x31b
  401b54:	adrp	x0, 403000 <run+0x130c>
  401b58:	add	x5, x0, #0x578
  401b5c:	adrp	x0, 403000 <run+0x130c>
  401b60:	add	x4, x0, #0xc20
  401b64:	mov	w3, #0x4f                  	// #79
  401b68:	mov	x2, x1
  401b6c:	ldr	w1, [sp, #92]
  401b70:	mov	w0, w6
  401b74:	bl	401280 <log_internal_realm@plt>
  401b78:	b	401b84 <may_credit+0x554>
  401b7c:	ldr	w0, [sp, #92]
  401b80:	cmp	w0, #0x0
  401b84:	mov	w19, #0x0                   	// #0
  401b88:	b	401cb8 <may_credit+0x688>
  401b8c:	mov	w1, #0x0                   	// #0
  401b90:	adrp	x0, 403000 <run+0x130c>
  401b94:	add	x0, x0, #0x5b0
  401b98:	bl	4011b0 <access@plt>
  401b9c:	cmp	w0, #0x0
  401ba0:	b.ge	401c38 <may_credit+0x608>  // b.tcont
  401ba4:	bl	401200 <__errno_location@plt>
  401ba8:	ldr	w0, [x0]
  401bac:	cmp	w0, #0x2
  401bb0:	b.eq	401cb4 <may_credit+0x684>  // b.none
  401bb4:	mov	w0, #0x4                   	// #4
  401bb8:	str	w0, [sp, #76]
  401bbc:	bl	401200 <__errno_location@plt>
  401bc0:	ldr	w0, [x0]
  401bc4:	str	w0, [sp, #80]
  401bc8:	str	wzr, [sp, #84]
  401bcc:	ldr	w0, [sp, #84]
  401bd0:	bl	401320 <log_get_max_level_realm@plt>
  401bd4:	mov	w1, w0
  401bd8:	ldr	w0, [sp, #76]
  401bdc:	and	w0, w0, #0x7
  401be0:	cmp	w1, w0
  401be4:	b.lt	401c28 <may_credit+0x5f8>  // b.tstop
  401be8:	ldr	w0, [sp, #84]
  401bec:	lsl	w1, w0, #10
  401bf0:	ldr	w0, [sp, #76]
  401bf4:	orr	w6, w1, w0
  401bf8:	adrp	x0, 403000 <run+0x130c>
  401bfc:	add	x1, x0, #0x31b
  401c00:	adrp	x0, 403000 <run+0x130c>
  401c04:	add	x5, x0, #0x5c8
  401c08:	adrp	x0, 403000 <run+0x130c>
  401c0c:	add	x4, x0, #0xc20
  401c10:	mov	w3, #0x5a                  	// #90
  401c14:	mov	x2, x1
  401c18:	ldr	w1, [sp, #80]
  401c1c:	mov	w0, w6
  401c20:	bl	401280 <log_internal_realm@plt>
  401c24:	b	401c30 <may_credit+0x600>
  401c28:	ldr	w0, [sp, #80]
  401c2c:	cmp	w0, #0x0
  401c30:	mov	w19, #0x0                   	// #0
  401c34:	b	401cb8 <may_credit+0x688>
  401c38:	mov	w0, #0x7                   	// #7
  401c3c:	str	w0, [sp, #64]
  401c40:	str	wzr, [sp, #68]
  401c44:	str	wzr, [sp, #72]
  401c48:	ldr	w0, [sp, #72]
  401c4c:	bl	401320 <log_get_max_level_realm@plt>
  401c50:	mov	w1, w0
  401c54:	ldr	w0, [sp, #64]
  401c58:	and	w0, w0, #0x7
  401c5c:	cmp	w1, w0
  401c60:	b.lt	401ca4 <may_credit+0x674>  // b.tstop
  401c64:	ldr	w0, [sp, #72]
  401c68:	lsl	w1, w0, #10
  401c6c:	ldr	w0, [sp, #64]
  401c70:	orr	w6, w1, w0
  401c74:	adrp	x0, 403000 <run+0x130c>
  401c78:	add	x1, x0, #0x31b
  401c7c:	adrp	x0, 403000 <run+0x130c>
  401c80:	add	x5, x0, #0x618
  401c84:	adrp	x0, 403000 <run+0x130c>
  401c88:	add	x4, x0, #0xc20
  401c8c:	mov	w3, #0x60                  	// #96
  401c90:	mov	x2, x1
  401c94:	ldr	w1, [sp, #68]
  401c98:	mov	w0, w6
  401c9c:	bl	401280 <log_internal_realm@plt>
  401ca0:	b	401cac <may_credit+0x67c>
  401ca4:	ldr	w0, [sp, #68]
  401ca8:	cmp	w0, #0x0
  401cac:	mov	w19, #0x0                   	// #0
  401cb0:	b	401cb8 <may_credit+0x688>
  401cb4:	mov	w19, #0x1                   	// #1
  401cb8:	add	x0, sp, #0xb8
  401cbc:	bl	401528 <freep>
  401cc0:	mov	w1, w19
  401cc4:	adrp	x0, 414000 <__FRAME_END__+0x10154>
  401cc8:	add	x0, x0, #0xc68
  401ccc:	ldr	x2, [sp, #200]
  401cd0:	ldr	x0, [x0]
  401cd4:	eor	x0, x2, x0
  401cd8:	cmp	x0, #0x0
  401cdc:	b.eq	401ce4 <may_credit+0x6b4>  // b.none
  401ce0:	bl	401220 <__stack_chk_fail@plt>
  401ce4:	mov	w0, w1
  401ce8:	ldr	x19, [sp, #16]
  401cec:	ldp	x29, x30, [sp], #208
  401cf0:	ret

0000000000401cf4 <run>:
  401cf4:	sub	sp, sp, #0x260
  401cf8:	stp	x29, x30, [sp]
  401cfc:	mov	x29, sp
  401d00:	stp	x19, x20, [sp, #16]
  401d04:	str	w0, [sp, #44]
  401d08:	str	x1, [sp, #32]
  401d0c:	adrp	x0, 414000 <__FRAME_END__+0x10154>
  401d10:	add	x0, x0, #0xc68
  401d14:	ldr	x1, [x0]
  401d18:	str	x1, [sp, #600]
  401d1c:	mov	x1, #0x0                   	// #0
  401d20:	mov	w0, #0xffffffff            	// #-1
  401d24:	str	w0, [sp, #68]
  401d28:	mov	w0, #0xffffffff            	// #-1
  401d2c:	str	w0, [sp, #72]
  401d30:	str	xzr, [sp, #416]
  401d34:	bl	401160 <log_setup_service@plt>
  401d38:	ldr	w0, [sp, #44]
  401d3c:	cmp	w0, #0x2
  401d40:	b.eq	401dd4 <run+0xe0>  // b.none
  401d44:	mov	w0, #0x3                   	// #3
  401d48:	str	w0, [sp, #404]
  401d4c:	mov	w0, #0x16                  	// #22
  401d50:	movk	w0, #0x4000, lsl #16
  401d54:	str	w0, [sp, #408]
  401d58:	str	wzr, [sp, #412]
  401d5c:	ldr	w0, [sp, #412]
  401d60:	bl	401320 <log_get_max_level_realm@plt>
  401d64:	mov	w1, w0
  401d68:	ldr	w0, [sp, #404]
  401d6c:	and	w0, w0, #0x7
  401d70:	cmp	w1, w0
  401d74:	b.lt	401dbc <run+0xc8>  // b.tstop
  401d78:	ldr	w0, [sp, #412]
  401d7c:	lsl	w1, w0, #10
  401d80:	ldr	w0, [sp, #404]
  401d84:	orr	w6, w1, w0
  401d88:	adrp	x0, 403000 <run+0x130c>
  401d8c:	add	x1, x0, #0x31b
  401d90:	adrp	x0, 403000 <run+0x130c>
  401d94:	add	x5, x0, #0x650
  401d98:	adrp	x0, 403000 <run+0x130c>
  401d9c:	add	x4, x0, #0xc30
  401da0:	mov	w3, #0x73                  	// #115
  401da4:	mov	x2, x1
  401da8:	ldr	w1, [sp, #408]
  401dac:	mov	w0, w6
  401db0:	bl	401280 <log_internal_realm@plt>
  401db4:	mov	w19, w0
  401db8:	b	4031c0 <run+0x14cc>
  401dbc:	ldr	w0, [sp, #408]
  401dc0:	cmp	w0, #0x0
  401dc4:	cneg	w0, w0, lt  // lt = tstop
  401dc8:	and	w0, w0, #0xff
  401dcc:	neg	w19, w0
  401dd0:	b	4031c0 <run+0x14cc>
  401dd4:	mov	w0, #0x12                  	// #18
  401dd8:	bl	4011a0 <umask@plt>
  401ddc:	bl	401210 <random_pool_size@plt>
  401de0:	str	x0, [sp, #432]
  401de4:	mov	w1, #0x1ed                 	// #493
  401de8:	adrp	x0, 403000 <run+0x130c>
  401dec:	add	x0, x0, #0x678
  401df0:	bl	401300 <mkdir_parents@plt>
  401df4:	str	w0, [sp, #80]
  401df8:	ldr	w0, [sp, #80]
  401dfc:	cmp	w0, #0x0
  401e00:	b.ge	401e90 <run+0x19c>  // b.tcont
  401e04:	mov	w0, #0x3                   	// #3
  401e08:	str	w0, [sp, #392]
  401e0c:	ldr	w0, [sp, #80]
  401e10:	str	w0, [sp, #396]
  401e14:	str	wzr, [sp, #400]
  401e18:	ldr	w0, [sp, #400]
  401e1c:	bl	401320 <log_get_max_level_realm@plt>
  401e20:	mov	w1, w0
  401e24:	ldr	w0, [sp, #392]
  401e28:	and	w0, w0, #0x7
  401e2c:	cmp	w1, w0
  401e30:	b.lt	401e78 <run+0x184>  // b.tstop
  401e34:	ldr	w0, [sp, #400]
  401e38:	lsl	w1, w0, #10
  401e3c:	ldr	w0, [sp, #392]
  401e40:	orr	w6, w1, w0
  401e44:	adrp	x0, 403000 <run+0x130c>
  401e48:	add	x1, x0, #0x31b
  401e4c:	adrp	x0, 403000 <run+0x130c>
  401e50:	add	x5, x0, #0x698
  401e54:	adrp	x0, 403000 <run+0x130c>
  401e58:	add	x4, x0, #0xc30
  401e5c:	mov	w3, #0x7c                  	// #124
  401e60:	mov	x2, x1
  401e64:	ldr	w1, [sp, #396]
  401e68:	mov	w0, w6
  401e6c:	bl	401280 <log_internal_realm@plt>
  401e70:	mov	w19, w0
  401e74:	b	4031c0 <run+0x14cc>
  401e78:	ldr	w0, [sp, #396]
  401e7c:	cmp	w0, #0x0
  401e80:	cneg	w0, w0, lt  // lt = tstop
  401e84:	and	w0, w0, #0xff
  401e88:	neg	w19, w0
  401e8c:	b	4031c0 <run+0x14cc>
  401e90:	ldr	x0, [sp, #32]
  401e94:	add	x0, x0, #0x8
  401e98:	ldr	x2, [x0]
  401e9c:	adrp	x0, 403000 <run+0x130c>
  401ea0:	add	x1, x0, #0x6c8
  401ea4:	mov	x0, x2
  401ea8:	bl	4012a0 <strcmp@plt>
  401eac:	cmp	w0, #0x0
  401eb0:	b.ne	402144 <run+0x450>  // b.any
  401eb4:	mov	w2, #0x180                 	// #384
  401eb8:	mov	w1, #0x142                 	// #322
  401ebc:	movk	w1, #0x8, lsl #16
  401ec0:	adrp	x0, 403000 <run+0x130c>
  401ec4:	add	x0, x0, #0x678
  401ec8:	bl	4012f0 <open64@plt>
  401ecc:	str	w0, [sp, #68]
  401ed0:	ldr	w0, [sp, #68]
  401ed4:	cmp	w0, #0x0
  401ed8:	b.ge	402070 <run+0x37c>  // b.tcont
  401edc:	bl	401200 <__errno_location@plt>
  401ee0:	ldr	w0, [x0]
  401ee4:	neg	w0, w0
  401ee8:	str	w0, [sp, #120]
  401eec:	strb	wzr, [sp, #61]
  401ef0:	mov	w1, #0x100                 	// #256
  401ef4:	movk	w1, #0x8, lsl #16
  401ef8:	adrp	x0, 403000 <run+0x130c>
  401efc:	add	x0, x0, #0x678
  401f00:	bl	4012f0 <open64@plt>
  401f04:	str	w0, [sp, #68]
  401f08:	ldr	w0, [sp, #68]
  401f0c:	cmp	w0, #0x0
  401f10:	b.ge	402078 <run+0x384>  // b.tcont
  401f14:	bl	401200 <__errno_location@plt>
  401f18:	ldr	w0, [x0]
  401f1c:	cmp	w0, #0x2
  401f20:	cset	w0, eq  // eq = none
  401f24:	strb	w0, [sp, #67]
  401f28:	ldrb	w0, [sp, #67]
  401f2c:	cmp	w0, #0x0
  401f30:	b.eq	401f3c <run+0x248>  // b.none
  401f34:	mov	w0, #0x7                   	// #7
  401f38:	b	401f40 <run+0x24c>
  401f3c:	mov	w0, #0x3                   	// #3
  401f40:	str	w0, [sp, #124]
  401f44:	ldr	w0, [sp, #120]
  401f48:	str	w0, [sp, #128]
  401f4c:	str	wzr, [sp, #132]
  401f50:	ldr	w0, [sp, #132]
  401f54:	bl	401320 <log_get_max_level_realm@plt>
  401f58:	mov	w1, w0
  401f5c:	ldr	w0, [sp, #124]
  401f60:	and	w0, w0, #0x7
  401f64:	cmp	w1, w0
  401f68:	b.lt	401fac <run+0x2b8>  // b.tstop
  401f6c:	ldr	w0, [sp, #132]
  401f70:	lsl	w1, w0, #10
  401f74:	ldr	w0, [sp, #124]
  401f78:	orr	w6, w1, w0
  401f7c:	adrp	x0, 403000 <run+0x130c>
  401f80:	add	x1, x0, #0x31b
  401f84:	adrp	x0, 403000 <run+0x130c>
  401f88:	add	x5, x0, #0x6d0
  401f8c:	adrp	x0, 403000 <run+0x130c>
  401f90:	add	x4, x0, #0xc30
  401f94:	mov	w3, #0x8d                  	// #141
  401f98:	mov	x2, x1
  401f9c:	ldr	w1, [sp, #128]
  401fa0:	mov	w0, w6
  401fa4:	bl	401280 <log_internal_realm@plt>
  401fa8:	b	401fb4 <run+0x2c0>
  401fac:	ldr	w0, [sp, #128]
  401fb0:	cmp	w0, #0x0
  401fb4:	ldrb	w0, [sp, #67]
  401fb8:	cmp	w0, #0x0
  401fbc:	b.eq	401fc8 <run+0x2d4>  // b.none
  401fc0:	mov	w0, #0x7                   	// #7
  401fc4:	b	401fcc <run+0x2d8>
  401fc8:	mov	w0, #0x3                   	// #3
  401fcc:	str	w0, [sp, #136]
  401fd0:	bl	401200 <__errno_location@plt>
  401fd4:	ldr	w0, [x0]
  401fd8:	str	w0, [sp, #140]
  401fdc:	str	wzr, [sp, #144]
  401fe0:	ldr	w0, [sp, #144]
  401fe4:	bl	401320 <log_get_max_level_realm@plt>
  401fe8:	mov	w1, w0
  401fec:	ldr	w0, [sp, #136]
  401ff0:	and	w0, w0, #0x7
  401ff4:	cmp	w1, w0
  401ff8:	b.lt	40203c <run+0x348>  // b.tstop
  401ffc:	ldr	w0, [sp, #144]
  402000:	lsl	w1, w0, #10
  402004:	ldr	w0, [sp, #136]
  402008:	orr	w6, w1, w0
  40200c:	adrp	x0, 403000 <run+0x130c>
  402010:	add	x1, x0, #0x31b
  402014:	adrp	x0, 403000 <run+0x130c>
  402018:	add	x5, x0, #0x710
  40201c:	adrp	x0, 403000 <run+0x130c>
  402020:	add	x4, x0, #0xc30
  402024:	mov	w3, #0x8f                  	// #143
  402028:	mov	x2, x1
  40202c:	ldr	w1, [sp, #140]
  402030:	mov	w0, w6
  402034:	bl	401280 <log_internal_realm@plt>
  402038:	b	402050 <run+0x35c>
  40203c:	ldr	w0, [sp, #140]
  402040:	cmp	w0, #0x0
  402044:	cneg	w0, w0, lt  // lt = tstop
  402048:	and	w0, w0, #0xff
  40204c:	neg	w0, w0
  402050:	str	w0, [sp, #80]
  402054:	ldrb	w0, [sp, #67]
  402058:	cmp	w0, #0x0
  40205c:	b.eq	402068 <run+0x374>  // b.none
  402060:	mov	w19, #0x0                   	// #0
  402064:	b	4031c0 <run+0x14cc>
  402068:	ldr	w19, [sp, #80]
  40206c:	b	4031c0 <run+0x14cc>
  402070:	mov	w0, #0x1                   	// #1
  402074:	strb	w0, [sp, #61]
  402078:	mov	w2, #0x180                 	// #384
  40207c:	mov	w1, #0x102                 	// #258
  402080:	movk	w1, #0x8, lsl #16
  402084:	adrp	x0, 403000 <run+0x130c>
  402088:	add	x0, x0, #0x750
  40208c:	bl	4012f0 <open64@plt>
  402090:	str	w0, [sp, #72]
  402094:	ldr	w0, [sp, #72]
  402098:	cmp	w0, #0x0
  40209c:	b.ge	402130 <run+0x43c>  // b.tcont
  4020a0:	mov	w0, #0x3                   	// #3
  4020a4:	str	w0, [sp, #148]
  4020a8:	bl	401200 <__errno_location@plt>
  4020ac:	ldr	w0, [x0]
  4020b0:	str	w0, [sp, #152]
  4020b4:	str	wzr, [sp, #156]
  4020b8:	ldr	w0, [sp, #156]
  4020bc:	bl	401320 <log_get_max_level_realm@plt>
  4020c0:	mov	w1, w0
  4020c4:	ldr	w0, [sp, #148]
  4020c8:	and	w0, w0, #0x7
  4020cc:	cmp	w1, w0
  4020d0:	b.lt	402118 <run+0x424>  // b.tstop
  4020d4:	ldr	w0, [sp, #156]
  4020d8:	lsl	w1, w0, #10
  4020dc:	ldr	w0, [sp, #148]
  4020e0:	orr	w6, w1, w0
  4020e4:	adrp	x0, 403000 <run+0x130c>
  4020e8:	add	x1, x0, #0x31b
  4020ec:	adrp	x0, 403000 <run+0x130c>
  4020f0:	add	x5, x0, #0x760
  4020f4:	adrp	x0, 403000 <run+0x130c>
  4020f8:	add	x4, x0, #0xc30
  4020fc:	mov	w3, #0x98                  	// #152
  402100:	mov	x2, x1
  402104:	ldr	w1, [sp, #152]
  402108:	mov	w0, w6
  40210c:	bl	401280 <log_internal_realm@plt>
  402110:	mov	w19, w0
  402114:	b	4031c0 <run+0x14cc>
  402118:	ldr	w0, [sp, #152]
  40211c:	cmp	w0, #0x0
  402120:	cneg	w0, w0, lt  // lt = tstop
  402124:	and	w0, w0, #0xff
  402128:	neg	w19, w0
  40212c:	b	4031c0 <run+0x14cc>
  402130:	mov	w0, #0x1                   	// #1
  402134:	strb	w0, [sp, #60]
  402138:	mov	w0, #0x1                   	// #1
  40213c:	strb	w0, [sp, #62]
  402140:	b	402388 <run+0x694>
  402144:	ldr	x0, [sp, #32]
  402148:	add	x0, x0, #0x8
  40214c:	ldr	x2, [x0]
  402150:	adrp	x0, 403000 <run+0x130c>
  402154:	add	x1, x0, #0x780
  402158:	mov	x0, x2
  40215c:	bl	4012a0 <strcmp@plt>
  402160:	cmp	w0, #0x0
  402164:	b.ne	4022e8 <run+0x5f4>  // b.any
  402168:	mov	w1, #0x100                 	// #256
  40216c:	movk	w1, #0x8, lsl #16
  402170:	adrp	x0, 403000 <run+0x130c>
  402174:	add	x0, x0, #0x750
  402178:	bl	4012f0 <open64@plt>
  40217c:	str	w0, [sp, #72]
  402180:	ldr	w0, [sp, #72]
  402184:	cmp	w0, #0x0
  402188:	b.ge	40221c <run+0x528>  // b.tcont
  40218c:	mov	w0, #0x3                   	// #3
  402190:	str	w0, [sp, #108]
  402194:	bl	401200 <__errno_location@plt>
  402198:	ldr	w0, [x0]
  40219c:	str	w0, [sp, #112]
  4021a0:	str	wzr, [sp, #116]
  4021a4:	ldr	w0, [sp, #116]
  4021a8:	bl	401320 <log_get_max_level_realm@plt>
  4021ac:	mov	w1, w0
  4021b0:	ldr	w0, [sp, #108]
  4021b4:	and	w0, w0, #0x7
  4021b8:	cmp	w1, w0
  4021bc:	b.lt	402204 <run+0x510>  // b.tstop
  4021c0:	ldr	w0, [sp, #116]
  4021c4:	lsl	w1, w0, #10
  4021c8:	ldr	w0, [sp, #108]
  4021cc:	orr	w6, w1, w0
  4021d0:	adrp	x0, 403000 <run+0x130c>
  4021d4:	add	x1, x0, #0x31b
  4021d8:	adrp	x0, 403000 <run+0x130c>
  4021dc:	add	x5, x0, #0x760
  4021e0:	adrp	x0, 403000 <run+0x130c>
  4021e4:	add	x4, x0, #0xc30
  4021e8:	mov	w3, #0xa1                  	// #161
  4021ec:	mov	x2, x1
  4021f0:	ldr	w1, [sp, #112]
  4021f4:	mov	w0, w6
  4021f8:	bl	401280 <log_internal_realm@plt>
  4021fc:	mov	w19, w0
  402200:	b	4031c0 <run+0x14cc>
  402204:	ldr	w0, [sp, #112]
  402208:	cmp	w0, #0x0
  40220c:	cneg	w0, w0, lt  // lt = tstop
  402210:	and	w0, w0, #0xff
  402214:	neg	w19, w0
  402218:	b	4031c0 <run+0x14cc>
  40221c:	mov	w2, #0x180                 	// #384
  402220:	mov	w1, #0x141                 	// #321
  402224:	movk	w1, #0x8, lsl #16
  402228:	adrp	x0, 403000 <run+0x130c>
  40222c:	add	x0, x0, #0x678
  402230:	bl	4012f0 <open64@plt>
  402234:	str	w0, [sp, #68]
  402238:	ldr	w0, [sp, #68]
  40223c:	cmp	w0, #0x0
  402240:	b.ge	4022d4 <run+0x5e0>  // b.tcont
  402244:	mov	w0, #0x3                   	// #3
  402248:	str	w0, [sp, #96]
  40224c:	bl	401200 <__errno_location@plt>
  402250:	ldr	w0, [x0]
  402254:	str	w0, [sp, #100]
  402258:	str	wzr, [sp, #104]
  40225c:	ldr	w0, [sp, #104]
  402260:	bl	401320 <log_get_max_level_realm@plt>
  402264:	mov	w1, w0
  402268:	ldr	w0, [sp, #96]
  40226c:	and	w0, w0, #0x7
  402270:	cmp	w1, w0
  402274:	b.lt	4022bc <run+0x5c8>  // b.tstop
  402278:	ldr	w0, [sp, #104]
  40227c:	lsl	w1, w0, #10
  402280:	ldr	w0, [sp, #96]
  402284:	orr	w6, w1, w0
  402288:	adrp	x0, 403000 <run+0x130c>
  40228c:	add	x1, x0, #0x31b
  402290:	adrp	x0, 403000 <run+0x130c>
  402294:	add	x5, x0, #0x788
  402298:	adrp	x0, 403000 <run+0x130c>
  40229c:	add	x4, x0, #0xc30
  4022a0:	mov	w3, #0xa5                  	// #165
  4022a4:	mov	x2, x1
  4022a8:	ldr	w1, [sp, #100]
  4022ac:	mov	w0, w6
  4022b0:	bl	401280 <log_internal_realm@plt>
  4022b4:	mov	w19, w0
  4022b8:	b	4031c0 <run+0x14cc>
  4022bc:	ldr	w0, [sp, #100]
  4022c0:	cmp	w0, #0x0
  4022c4:	cneg	w0, w0, lt  // lt = tstop
  4022c8:	and	w0, w0, #0xff
  4022cc:	neg	w19, w0
  4022d0:	b	4031c0 <run+0x14cc>
  4022d4:	strb	wzr, [sp, #60]
  4022d8:	mov	w0, #0x1                   	// #1
  4022dc:	strb	w0, [sp, #61]
  4022e0:	strb	wzr, [sp, #62]
  4022e4:	b	402388 <run+0x694>
  4022e8:	mov	w0, #0x3                   	// #3
  4022ec:	str	w0, [sp, #84]
  4022f0:	mov	w0, #0x16                  	// #22
  4022f4:	movk	w0, #0x4000, lsl #16
  4022f8:	str	w0, [sp, #88]
  4022fc:	str	wzr, [sp, #92]
  402300:	ldr	w0, [sp, #92]
  402304:	bl	401320 <log_get_max_level_realm@plt>
  402308:	mov	w1, w0
  40230c:	ldr	w0, [sp, #84]
  402310:	and	w0, w0, #0x7
  402314:	cmp	w1, w0
  402318:	b.lt	402370 <run+0x67c>  // b.tstop
  40231c:	ldr	w0, [sp, #92]
  402320:	lsl	w1, w0, #10
  402324:	ldr	w0, [sp, #84]
  402328:	orr	w7, w1, w0
  40232c:	adrp	x0, 403000 <run+0x130c>
  402330:	add	x1, x0, #0x31b
  402334:	ldr	x0, [sp, #32]
  402338:	add	x0, x0, #0x8
  40233c:	ldr	x0, [x0]
  402340:	mov	x6, x0
  402344:	adrp	x0, 403000 <run+0x130c>
  402348:	add	x5, x0, #0x7b8
  40234c:	adrp	x0, 403000 <run+0x130c>
  402350:	add	x4, x0, #0xc30
  402354:	mov	w3, #0xab                  	// #171
  402358:	mov	x2, x1
  40235c:	ldr	w1, [sp, #88]
  402360:	mov	w0, w7
  402364:	bl	401280 <log_internal_realm@plt>
  402368:	mov	w19, w0
  40236c:	b	4031c0 <run+0x14cc>
  402370:	ldr	w0, [sp, #88]
  402374:	cmp	w0, #0x0
  402378:	cneg	w0, w0, lt  // lt = tstop
  40237c:	and	w0, w0, #0xff
  402380:	neg	w19, w0
  402384:	b	4031c0 <run+0x14cc>
  402388:	ldr	w0, [sp, #68]
  40238c:	add	x1, sp, #0x1d8
  402390:	bl	4032e8 <fstat64>
  402394:	cmp	w0, #0x0
  402398:	b.ge	40242c <run+0x738>  // b.tcont
  40239c:	mov	w0, #0x3                   	// #3
  4023a0:	str	w0, [sp, #380]
  4023a4:	bl	401200 <__errno_location@plt>
  4023a8:	ldr	w0, [x0]
  4023ac:	str	w0, [sp, #384]
  4023b0:	str	wzr, [sp, #388]
  4023b4:	ldr	w0, [sp, #388]
  4023b8:	bl	401320 <log_get_max_level_realm@plt>
  4023bc:	mov	w1, w0
  4023c0:	ldr	w0, [sp, #380]
  4023c4:	and	w0, w0, #0x7
  4023c8:	cmp	w1, w0
  4023cc:	b.lt	402414 <run+0x720>  // b.tstop
  4023d0:	ldr	w0, [sp, #388]
  4023d4:	lsl	w1, w0, #10
  4023d8:	ldr	w0, [sp, #380]
  4023dc:	orr	w6, w1, w0
  4023e0:	adrp	x0, 403000 <run+0x130c>
  4023e4:	add	x1, x0, #0x31b
  4023e8:	adrp	x0, 403000 <run+0x130c>
  4023ec:	add	x5, x0, #0x7d0
  4023f0:	adrp	x0, 403000 <run+0x130c>
  4023f4:	add	x4, x0, #0xc30
  4023f8:	mov	w3, #0xaf                  	// #175
  4023fc:	mov	x2, x1
  402400:	ldr	w1, [sp, #384]
  402404:	mov	w0, w6
  402408:	bl	401280 <log_internal_realm@plt>
  40240c:	mov	w19, w0
  402410:	b	4031c0 <run+0x14cc>
  402414:	ldr	w0, [sp, #384]
  402418:	cmp	w0, #0x0
  40241c:	cneg	w0, w0, lt  // lt = tstop
  402420:	and	w0, w0, #0xff
  402424:	neg	w19, w0
  402428:	b	4031c0 <run+0x14cc>
  40242c:	ldr	x0, [sp, #520]
  402430:	mov	x1, x0
  402434:	ldr	x0, [sp, #432]
  402438:	cmp	x0, x1
  40243c:	b.cs	402468 <run+0x774>  // b.hs, b.nlast
  402440:	ldr	x0, [sp, #520]
  402444:	str	x0, [sp, #448]
  402448:	mov	w0, #0xa00000              	// #10485760
  40244c:	str	w0, [sp, #160]
  402450:	ldr	w0, [sp, #160]
  402454:	ldr	x2, [sp, #448]
  402458:	ldr	x1, [sp, #448]
  40245c:	cmp	x2, x0
  402460:	csel	x0, x1, x0, le
  402464:	str	x0, [sp, #432]
  402468:	ldr	x0, [sp, #432]
  40246c:	bl	401270 <malloc@plt>
  402470:	str	x0, [sp, #416]
  402474:	ldr	x0, [sp, #416]
  402478:	cmp	x0, #0x0
  40247c:	b.ne	4024a4 <run+0x7b0>  // b.any
  402480:	adrp	x0, 403000 <run+0x130c>
  402484:	add	x1, x0, #0x31b
  402488:	adrp	x0, 403000 <run+0x130c>
  40248c:	add	x3, x0, #0xc30
  402490:	mov	w2, #0xb7                  	// #183
  402494:	mov	w0, #0x0                   	// #0
  402498:	bl	401310 <log_oom_internal@plt>
  40249c:	mov	w19, w0
  4024a0:	b	4031c0 <run+0x14cc>
  4024a4:	ldrb	w0, [sp, #60]
  4024a8:	cmp	w0, #0x0
  4024ac:	b.eq	402ad8 <run+0xde4>  // b.none
  4024b0:	add	x0, sp, #0x1c8
  4024b4:	bl	401260 <sd_id128_get_machine@plt>
  4024b8:	str	w0, [sp, #80]
  4024bc:	ldr	w0, [sp, #80]
  4024c0:	cmp	w0, #0x0
  4024c4:	b.ge	402544 <run+0x850>  // b.tcont
  4024c8:	mov	w0, #0x7                   	// #7
  4024cc:	str	w0, [sp, #176]
  4024d0:	ldr	w0, [sp, #80]
  4024d4:	str	w0, [sp, #180]
  4024d8:	str	wzr, [sp, #184]
  4024dc:	ldr	w0, [sp, #184]
  4024e0:	bl	401320 <log_get_max_level_realm@plt>
  4024e4:	mov	w1, w0
  4024e8:	ldr	w0, [sp, #176]
  4024ec:	and	w0, w0, #0x7
  4024f0:	cmp	w1, w0
  4024f4:	b.lt	402538 <run+0x844>  // b.tstop
  4024f8:	ldr	w0, [sp, #184]
  4024fc:	lsl	w1, w0, #10
  402500:	ldr	w0, [sp, #176]
  402504:	orr	w6, w1, w0
  402508:	adrp	x0, 403000 <run+0x130c>
  40250c:	add	x1, x0, #0x31b
  402510:	adrp	x0, 403000 <run+0x130c>
  402514:	add	x5, x0, #0x810
  402518:	adrp	x0, 403000 <run+0x130c>
  40251c:	add	x4, x0, #0xc30
  402520:	mov	w3, #0xc5                  	// #197
  402524:	mov	x2, x1
  402528:	ldr	w1, [sp, #180]
  40252c:	mov	w0, w6
  402530:	bl	401280 <log_internal_realm@plt>
  402534:	b	4025e0 <run+0x8ec>
  402538:	ldr	w0, [sp, #180]
  40253c:	cmp	w0, #0x0
  402540:	b	4025e0 <run+0x8ec>
  402544:	ldr	w0, [sp, #72]
  402548:	add	x1, sp, #0x1c8
  40254c:	mov	w3, #0x0                   	// #0
  402550:	mov	x2, #0x10                  	// #16
  402554:	bl	401130 <loop_write@plt>
  402558:	str	w0, [sp, #80]
  40255c:	ldr	w0, [sp, #80]
  402560:	cmp	w0, #0x0
  402564:	b.ge	4025e0 <run+0x8ec>  // b.tcont
  402568:	mov	w0, #0x7                   	// #7
  40256c:	str	w0, [sp, #164]
  402570:	ldr	w0, [sp, #80]
  402574:	str	w0, [sp, #168]
  402578:	str	wzr, [sp, #172]
  40257c:	ldr	w0, [sp, #172]
  402580:	bl	401320 <log_get_max_level_realm@plt>
  402584:	mov	w1, w0
  402588:	ldr	w0, [sp, #164]
  40258c:	and	w0, w0, #0x7
  402590:	cmp	w1, w0
  402594:	b.lt	4025d8 <run+0x8e4>  // b.tstop
  402598:	ldr	w0, [sp, #172]
  40259c:	lsl	w1, w0, #10
  4025a0:	ldr	w0, [sp, #164]
  4025a4:	orr	w6, w1, w0
  4025a8:	adrp	x0, 403000 <run+0x130c>
  4025ac:	add	x1, x0, #0x31b
  4025b0:	adrp	x0, 403000 <run+0x130c>
  4025b4:	add	x5, x0, #0x838
  4025b8:	adrp	x0, 403000 <run+0x130c>
  4025bc:	add	x4, x0, #0xc30
  4025c0:	mov	w3, #0xc9                  	// #201
  4025c4:	mov	x2, x1
  4025c8:	ldr	w1, [sp, #168]
  4025cc:	mov	w0, w6
  4025d0:	bl	401280 <log_internal_realm@plt>
  4025d4:	b	4025e0 <run+0x8ec>
  4025d8:	ldr	w0, [sp, #168]
  4025dc:	cmp	w0, #0x0
  4025e0:	ldr	w0, [sp, #68]
  4025e4:	ldr	x1, [sp, #416]
  4025e8:	mov	w3, #0x0                   	// #0
  4025ec:	ldr	x2, [sp, #432]
  4025f0:	bl	401140 <loop_read@plt>
  4025f4:	str	x0, [sp, #440]
  4025f8:	ldr	x0, [sp, #440]
  4025fc:	cmp	x0, #0x0
  402600:	b.ge	402680 <run+0x98c>  // b.tcont
  402604:	mov	w0, #0x3                   	// #3
  402608:	str	w0, [sp, #248]
  40260c:	ldr	x0, [sp, #440]
  402610:	str	w0, [sp, #252]
  402614:	str	wzr, [sp, #256]
  402618:	ldr	w0, [sp, #256]
  40261c:	bl	401320 <log_get_max_level_realm@plt>
  402620:	mov	w1, w0
  402624:	ldr	w0, [sp, #248]
  402628:	and	w0, w0, #0x7
  40262c:	cmp	w1, w0
  402630:	b.lt	402674 <run+0x980>  // b.tstop
  402634:	ldr	w0, [sp, #256]
  402638:	lsl	w1, w0, #10
  40263c:	ldr	w0, [sp, #248]
  402640:	orr	w6, w1, w0
  402644:	adrp	x0, 403000 <run+0x130c>
  402648:	add	x1, x0, #0x31b
  40264c:	adrp	x0, 403000 <run+0x130c>
  402650:	add	x5, x0, #0x878
  402654:	adrp	x0, 403000 <run+0x130c>
  402658:	add	x4, x0, #0xc30
  40265c:	mov	w3, #0xce                  	// #206
  402660:	mov	x2, x1
  402664:	ldr	w1, [sp, #252]
  402668:	mov	w0, w6
  40266c:	bl	401280 <log_internal_realm@plt>
  402670:	b	402ad8 <run+0xde4>
  402674:	ldr	w0, [sp, #252]
  402678:	cmp	w0, #0x0
  40267c:	b	402ad8 <run+0xde4>
  402680:	ldr	x0, [sp, #440]
  402684:	cmp	x0, #0x0
  402688:	b.ne	402704 <run+0xa10>  // b.any
  40268c:	mov	w0, #0x7                   	// #7
  402690:	str	w0, [sp, #236]
  402694:	str	wzr, [sp, #240]
  402698:	str	wzr, [sp, #244]
  40269c:	ldr	w0, [sp, #244]
  4026a0:	bl	401320 <log_get_max_level_realm@plt>
  4026a4:	mov	w1, w0
  4026a8:	ldr	w0, [sp, #236]
  4026ac:	and	w0, w0, #0x7
  4026b0:	cmp	w1, w0
  4026b4:	b.lt	4026f8 <run+0xa04>  // b.tstop
  4026b8:	ldr	w0, [sp, #244]
  4026bc:	lsl	w1, w0, #10
  4026c0:	ldr	w0, [sp, #236]
  4026c4:	orr	w6, w1, w0
  4026c8:	adrp	x0, 403000 <run+0x130c>
  4026cc:	add	x1, x0, #0x31b
  4026d0:	adrp	x0, 403000 <run+0x130c>
  4026d4:	add	x5, x0, #0x8b8
  4026d8:	adrp	x0, 403000 <run+0x130c>
  4026dc:	add	x4, x0, #0xc30
  4026e0:	mov	w3, #0xd0                  	// #208
  4026e4:	mov	x2, x1
  4026e8:	ldr	w1, [sp, #240]
  4026ec:	mov	w0, w6
  4026f0:	bl	401280 <log_internal_realm@plt>
  4026f4:	b	402ad8 <run+0xde4>
  4026f8:	ldr	w0, [sp, #240]
  4026fc:	cmp	w0, #0x0
  402700:	b	402ad8 <run+0xde4>
  402704:	ldr	w0, [sp, #68]
  402708:	mov	w2, #0x0                   	// #0
  40270c:	mov	x1, #0x0                   	// #0
  402710:	bl	4010e0 <lseek64@plt>
  402714:	ldr	w0, [sp, #68]
  402718:	bl	401630 <may_credit>
  40271c:	str	w0, [sp, #76]
  402720:	ldr	w2, [sp, #68]
  402724:	adrp	x0, 403000 <run+0x130c>
  402728:	add	x1, x0, #0x4a0
  40272c:	mov	w0, w2
  402730:	bl	4012d0 <fremovexattr@plt>
  402734:	cmp	w0, #0x0
  402738:	b.ge	40282c <run+0xb38>  // b.tcont
  40273c:	strb	wzr, [sp, #63]
  402740:	bl	401200 <__errno_location@plt>
  402744:	ldr	w0, [x0]
  402748:	sub	w0, w0, #0x26
  40274c:	cmp	w0, #0x39
  402750:	cset	w1, hi  // hi = pmore
  402754:	and	w1, w1, #0xff
  402758:	cmp	w1, #0x0
  40275c:	b.ne	402794 <run+0xaa0>  // b.any
  402760:	mov	x1, #0x1                   	// #1
  402764:	lsl	x1, x1, x0
  402768:	mov	x0, #0x1                   	// #1
  40276c:	movk	x0, #0x80, lsl #16
  402770:	movk	x0, #0x200, lsl #48
  402774:	and	x0, x1, x0
  402778:	cmp	x0, #0x0
  40277c:	cset	w0, ne  // ne = any
  402780:	and	w0, w0, #0xff
  402784:	cmp	w0, #0x0
  402788:	b.eq	402794 <run+0xaa0>  // b.none
  40278c:	mov	w0, #0x1                   	// #1
  402790:	strb	w0, [sp, #63]
  402794:	nop
  402798:	ldrb	w0, [sp, #63]
  40279c:	eor	w0, w0, #0x1
  4027a0:	and	w0, w0, #0xff
  4027a4:	cmp	w0, #0x0
  4027a8:	b.eq	4028cc <run+0xbd8>  // b.none
  4027ac:	mov	w0, #0x4                   	// #4
  4027b0:	str	w0, [sp, #200]
  4027b4:	bl	401200 <__errno_location@plt>
  4027b8:	ldr	w0, [x0]
  4027bc:	str	w0, [sp, #204]
  4027c0:	str	wzr, [sp, #208]
  4027c4:	ldr	w0, [sp, #208]
  4027c8:	bl	401320 <log_get_max_level_realm@plt>
  4027cc:	mov	w1, w0
  4027d0:	ldr	w0, [sp, #200]
  4027d4:	and	w0, w0, #0x7
  4027d8:	cmp	w1, w0
  4027dc:	b.lt	402820 <run+0xb2c>  // b.tstop
  4027e0:	ldr	w0, [sp, #208]
  4027e4:	lsl	w1, w0, #10
  4027e8:	ldr	w0, [sp, #200]
  4027ec:	orr	w6, w1, w0
  4027f0:	adrp	x0, 403000 <run+0x130c>
  4027f4:	add	x1, x0, #0x31b
  4027f8:	adrp	x0, 403000 <run+0x130c>
  4027fc:	add	x5, x0, #0x900
  402800:	adrp	x0, 403000 <run+0x130c>
  402804:	add	x4, x0, #0xc30
  402808:	mov	w3, #0xe1                  	// #225
  40280c:	mov	x2, x1
  402810:	ldr	w1, [sp, #204]
  402814:	mov	w0, w6
  402818:	bl	401280 <log_internal_realm@plt>
  40281c:	b	4028cc <run+0xbd8>
  402820:	ldr	w0, [sp, #204]
  402824:	cmp	w0, #0x0
  402828:	b	4028cc <run+0xbd8>
  40282c:	ldr	w0, [sp, #68]
  402830:	bl	4011d0 <fsync_full@plt>
  402834:	str	w0, [sp, #80]
  402838:	ldr	w0, [sp, #80]
  40283c:	cmp	w0, #0x0
  402840:	b.ge	4028cc <run+0xbd8>  // b.tcont
  402844:	mov	w0, #0x4                   	// #4
  402848:	str	w0, [sp, #188]
  40284c:	ldr	w0, [sp, #80]
  402850:	str	w0, [sp, #192]
  402854:	str	wzr, [sp, #196]
  402858:	ldr	w0, [sp, #196]
  40285c:	bl	401320 <log_get_max_level_realm@plt>
  402860:	mov	w1, w0
  402864:	ldr	w0, [sp, #188]
  402868:	and	w0, w0, #0x7
  40286c:	cmp	w1, w0
  402870:	b.lt	4028b4 <run+0xbc0>  // b.tstop
  402874:	ldr	w0, [sp, #196]
  402878:	lsl	w1, w0, #10
  40287c:	ldr	w0, [sp, #188]
  402880:	orr	w6, w1, w0
  402884:	adrp	x0, 403000 <run+0x130c>
  402888:	add	x1, x0, #0x31b
  40288c:	adrp	x0, 403000 <run+0x130c>
  402890:	add	x5, x0, #0x938
  402894:	adrp	x0, 403000 <run+0x130c>
  402898:	add	x4, x0, #0xc30
  40289c:	mov	w3, #0xe7                  	// #231
  4028a0:	mov	x2, x1
  4028a4:	ldr	w1, [sp, #192]
  4028a8:	mov	w0, w6
  4028ac:	bl	401280 <log_internal_realm@plt>
  4028b0:	b	4028bc <run+0xbc8>
  4028b4:	ldr	w0, [sp, #192]
  4028b8:	cmp	w0, #0x0
  4028bc:	ldr	w0, [sp, #76]
  4028c0:	cmp	w0, #0x1
  4028c4:	b.ne	4028cc <run+0xbd8>  // b.any
  4028c8:	str	wzr, [sp, #76]
  4028cc:	strb	wzr, [sp, #64]
  4028d0:	ldr	w0, [sp, #76]
  4028d4:	sub	w0, w0, #0x1
  4028d8:	cmp	w0, #0x1
  4028dc:	b.hi	4028e8 <run+0xbf4>  // b.pmore
  4028e0:	mov	w0, #0x1                   	// #1
  4028e4:	strb	w0, [sp, #64]
  4028e8:	nop
  4028ec:	ldrb	w0, [sp, #64]
  4028f0:	cmp	w0, #0x0
  4028f4:	b.eq	402a3c <run+0xd48>  // b.none
  4028f8:	str	xzr, [sp, #424]
  4028fc:	ldr	x0, [sp, #440]
  402900:	add	x0, x0, #0x8
  402904:	bl	401270 <malloc@plt>
  402908:	str	x0, [sp, #424]
  40290c:	ldr	x0, [sp, #424]
  402910:	cmp	x0, #0x0
  402914:	b.ne	402940 <run+0xc4c>  // b.any
  402918:	adrp	x0, 403000 <run+0x130c>
  40291c:	add	x1, x0, #0x31b
  402920:	adrp	x0, 403000 <run+0x130c>
  402924:	add	x3, x0, #0xc30
  402928:	mov	w2, #0xf3                  	// #243
  40292c:	mov	w0, #0x0                   	// #0
  402930:	bl	401310 <log_oom_internal@plt>
  402934:	mov	w19, w0
  402938:	mov	w20, #0x0                   	// #0
  40293c:	b	402a28 <run+0xd34>
  402940:	ldr	x0, [sp, #440]
  402944:	lsl	w1, w0, #3
  402948:	ldr	x0, [sp, #424]
  40294c:	str	w1, [x0]
  402950:	ldr	x0, [sp, #424]
  402954:	ldr	x1, [sp, #440]
  402958:	str	w1, [x0, #4]
  40295c:	ldr	x0, [sp, #424]
  402960:	add	x0, x0, #0x8
  402964:	ldr	x1, [sp, #416]
  402968:	ldr	x2, [sp, #440]
  40296c:	bl	401150 <memcpy@plt>
  402970:	ldr	w0, [sp, #72]
  402974:	ldr	x1, [sp, #424]
  402978:	mov	x2, x1
  40297c:	mov	x1, #0x5203                	// #20995
  402980:	movk	x1, #0x4008, lsl #16
  402984:	bl	401290 <ioctl@plt>
  402988:	cmp	w0, #0x0
  40298c:	b.ge	402a24 <run+0xd30>  // b.tcont
  402990:	mov	w0, #0x4                   	// #4
  402994:	str	w0, [sp, #224]
  402998:	bl	401200 <__errno_location@plt>
  40299c:	ldr	w0, [x0]
  4029a0:	str	w0, [sp, #228]
  4029a4:	str	wzr, [sp, #232]
  4029a8:	ldr	w0, [sp, #232]
  4029ac:	bl	401320 <log_get_max_level_realm@plt>
  4029b0:	mov	w1, w0
  4029b4:	ldr	w0, [sp, #224]
  4029b8:	and	w0, w0, #0x7
  4029bc:	cmp	w1, w0
  4029c0:	b.lt	402a08 <run+0xd14>  // b.tstop
  4029c4:	ldr	w0, [sp, #232]
  4029c8:	lsl	w1, w0, #10
  4029cc:	ldr	w0, [sp, #224]
  4029d0:	orr	w6, w1, w0
  4029d4:	adrp	x0, 403000 <run+0x130c>
  4029d8:	add	x1, x0, #0x31b
  4029dc:	adrp	x0, 403000 <run+0x130c>
  4029e0:	add	x5, x0, #0x978
  4029e4:	adrp	x0, 403000 <run+0x130c>
  4029e8:	add	x4, x0, #0xc30
  4029ec:	mov	w3, #0xfa                  	// #250
  4029f0:	mov	x2, x1
  4029f4:	ldr	w1, [sp, #228]
  4029f8:	mov	w0, w6
  4029fc:	bl	401280 <log_internal_realm@plt>
  402a00:	mov	w19, w0
  402a04:	b	402a1c <run+0xd28>
  402a08:	ldr	w0, [sp, #228]
  402a0c:	cmp	w0, #0x0
  402a10:	cneg	w0, w0, lt  // lt = tstop
  402a14:	and	w0, w0, #0xff
  402a18:	neg	w19, w0
  402a1c:	mov	w20, #0x0                   	// #0
  402a20:	b	402a28 <run+0xd34>
  402a24:	mov	w20, #0x1                   	// #1
  402a28:	add	x0, sp, #0x1a8
  402a2c:	bl	401528 <freep>
  402a30:	cmp	w20, #0x1
  402a34:	b.ne	4031c0 <run+0x14cc>  // b.any
  402a38:	b	402ad8 <run+0xde4>
  402a3c:	ldr	w0, [sp, #72]
  402a40:	ldr	x1, [sp, #416]
  402a44:	ldr	x2, [sp, #440]
  402a48:	mov	w3, #0x0                   	// #0
  402a4c:	bl	401130 <loop_write@plt>
  402a50:	str	w0, [sp, #80]
  402a54:	ldr	w0, [sp, #80]
  402a58:	cmp	w0, #0x0
  402a5c:	b.ge	402ad8 <run+0xde4>  // b.tcont
  402a60:	mov	w0, #0x3                   	// #3
  402a64:	str	w0, [sp, #212]
  402a68:	ldr	w0, [sp, #80]
  402a6c:	str	w0, [sp, #216]
  402a70:	str	wzr, [sp, #220]
  402a74:	ldr	w0, [sp, #220]
  402a78:	bl	401320 <log_get_max_level_realm@plt>
  402a7c:	mov	w1, w0
  402a80:	ldr	w0, [sp, #212]
  402a84:	and	w0, w0, #0x7
  402a88:	cmp	w1, w0
  402a8c:	b.lt	402ad0 <run+0xddc>  // b.tstop
  402a90:	ldr	w0, [sp, #220]
  402a94:	lsl	w1, w0, #10
  402a98:	ldr	w0, [sp, #212]
  402a9c:	orr	w6, w1, w0
  402aa0:	adrp	x0, 403000 <run+0x130c>
  402aa4:	add	x1, x0, #0x31b
  402aa8:	adrp	x0, 403000 <run+0x130c>
  402aac:	add	x5, x0, #0x9a0
  402ab0:	adrp	x0, 403000 <run+0x130c>
  402ab4:	add	x4, x0, #0xc30
  402ab8:	mov	w3, #0xfe                  	// #254
  402abc:	mov	x2, x1
  402ac0:	ldr	w1, [sp, #216]
  402ac4:	mov	w0, w6
  402ac8:	bl	401280 <log_internal_realm@plt>
  402acc:	b	402ad8 <run+0xde4>
  402ad0:	ldr	w0, [sp, #216]
  402ad4:	cmp	w0, #0x0
  402ad8:	ldrb	w0, [sp, #61]
  402adc:	cmp	w0, #0x0
  402ae0:	b.eq	4031bc <run+0x14c8>  // b.none
  402ae4:	strb	wzr, [sp, #65]
  402ae8:	ldr	w0, [sp, #68]
  402aec:	mov	w3, #0x0                   	// #0
  402af0:	mov	w2, #0x0                   	// #0
  402af4:	mov	w1, #0x180                 	// #384
  402af8:	bl	401120 <fchmod_and_chown@plt>
  402afc:	str	w0, [sp, #80]
  402b00:	ldr	w0, [sp, #80]
  402b04:	cmp	w0, #0x0
  402b08:	b.ge	402b98 <run+0xea4>  // b.tcont
  402b0c:	mov	w0, #0x3                   	// #3
  402b10:	str	w0, [sp, #368]
  402b14:	ldr	w0, [sp, #80]
  402b18:	str	w0, [sp, #372]
  402b1c:	str	wzr, [sp, #376]
  402b20:	ldr	w0, [sp, #376]
  402b24:	bl	401320 <log_get_max_level_realm@plt>
  402b28:	mov	w1, w0
  402b2c:	ldr	w0, [sp, #368]
  402b30:	and	w0, w0, #0x7
  402b34:	cmp	w1, w0
  402b38:	b.lt	402b80 <run+0xe8c>  // b.tstop
  402b3c:	ldr	w0, [sp, #376]
  402b40:	lsl	w1, w0, #10
  402b44:	ldr	w0, [sp, #368]
  402b48:	orr	w6, w1, w0
  402b4c:	adrp	x0, 403000 <run+0x130c>
  402b50:	add	x1, x0, #0x31b
  402b54:	adrp	x0, 403000 <run+0x130c>
  402b58:	add	x5, x0, #0x9d0
  402b5c:	adrp	x0, 403000 <run+0x130c>
  402b60:	add	x4, x0, #0xc30
  402b64:	mov	w3, #0x10a                 	// #266
  402b68:	mov	x2, x1
  402b6c:	ldr	w1, [sp, #372]
  402b70:	mov	w0, w6
  402b74:	bl	401280 <log_internal_realm@plt>
  402b78:	mov	w19, w0
  402b7c:	b	4031c0 <run+0x14cc>
  402b80:	ldr	w0, [sp, #372]
  402b84:	cmp	w0, #0x0
  402b88:	cneg	w0, w0, lt  // lt = tstop
  402b8c:	and	w0, w0, #0xff
  402b90:	neg	w19, w0
  402b94:	b	4031c0 <run+0x14cc>
  402b98:	ldr	x0, [sp, #416]
  402b9c:	mov	w2, #0x1                   	// #1
  402ba0:	ldr	x1, [sp, #432]
  402ba4:	bl	4011f0 <getrandom@plt>
  402ba8:	str	x0, [sp, #440]
  402bac:	ldr	x0, [sp, #440]
  402bb0:	cmp	x0, #0x0
  402bb4:	b.ge	402c5c <run+0xf68>  // b.tcont
  402bb8:	bl	401200 <__errno_location@plt>
  402bbc:	ldr	w0, [x0]
  402bc0:	cmp	w0, #0xb
  402bc4:	b.ne	402c5c <run+0xf68>  // b.any
  402bc8:	ldrb	w0, [sp, #62]
  402bcc:	cmp	w0, #0x0
  402bd0:	b.eq	402c5c <run+0xf68>  // b.none
  402bd4:	mov	w0, #0x5                   	// #5
  402bd8:	str	w0, [sp, #260]
  402bdc:	str	wzr, [sp, #264]
  402be0:	str	wzr, [sp, #268]
  402be4:	ldr	w0, [sp, #268]
  402be8:	bl	401320 <log_get_max_level_realm@plt>
  402bec:	mov	w1, w0
  402bf0:	ldr	w0, [sp, #260]
  402bf4:	and	w0, w0, #0x7
  402bf8:	cmp	w1, w0
  402bfc:	b.lt	402c40 <run+0xf4c>  // b.tstop
  402c00:	ldr	w0, [sp, #268]
  402c04:	lsl	w1, w0, #10
  402c08:	ldr	w0, [sp, #260]
  402c0c:	orr	w6, w1, w0
  402c10:	adrp	x0, 403000 <run+0x130c>
  402c14:	add	x1, x0, #0x31b
  402c18:	adrp	x0, 403000 <run+0x130c>
  402c1c:	add	x5, x0, #0xa08
  402c20:	adrp	x0, 403000 <run+0x130c>
  402c24:	add	x4, x0, #0xc30
  402c28:	mov	w3, #0x110                 	// #272
  402c2c:	mov	x2, x1
  402c30:	ldr	w1, [sp, #264]
  402c34:	mov	w0, w6
  402c38:	bl	401280 <log_internal_realm@plt>
  402c3c:	b	402c48 <run+0xf54>
  402c40:	ldr	w0, [sp, #264]
  402c44:	cmp	w0, #0x0
  402c48:	ldr	x0, [sp, #416]
  402c4c:	mov	w2, #0x0                   	// #0
  402c50:	ldr	x1, [sp, #432]
  402c54:	bl	4011f0 <getrandom@plt>
  402c58:	str	x0, [sp, #440]
  402c5c:	ldr	x0, [sp, #440]
  402c60:	cmp	x0, #0x0
  402c64:	b.ge	402ce8 <run+0xff4>  // b.tcont
  402c68:	mov	w0, #0x7                   	// #7
  402c6c:	str	w0, [sp, #284]
  402c70:	bl	401200 <__errno_location@plt>
  402c74:	ldr	w0, [x0]
  402c78:	str	w0, [sp, #288]
  402c7c:	str	wzr, [sp, #292]
  402c80:	ldr	w0, [sp, #292]
  402c84:	bl	401320 <log_get_max_level_realm@plt>
  402c88:	mov	w1, w0
  402c8c:	ldr	w0, [sp, #284]
  402c90:	and	w0, w0, #0x7
  402c94:	cmp	w1, w0
  402c98:	b.lt	402cdc <run+0xfe8>  // b.tstop
  402c9c:	ldr	w0, [sp, #292]
  402ca0:	lsl	w1, w0, #10
  402ca4:	ldr	w0, [sp, #284]
  402ca8:	orr	w6, w1, w0
  402cac:	adrp	x0, 403000 <run+0x130c>
  402cb0:	add	x1, x0, #0x31b
  402cb4:	adrp	x0, 403000 <run+0x130c>
  402cb8:	add	x5, x0, #0xa50
  402cbc:	adrp	x0, 403000 <run+0x130c>
  402cc0:	add	x4, x0, #0xc30
  402cc4:	mov	w3, #0x114                 	// #276
  402cc8:	mov	x2, x1
  402ccc:	ldr	w1, [sp, #288]
  402cd0:	mov	w0, w6
  402cd4:	bl	401280 <log_internal_realm@plt>
  402cd8:	b	402d78 <run+0x1084>
  402cdc:	ldr	w0, [sp, #288]
  402ce0:	cmp	w0, #0x0
  402ce4:	b	402d78 <run+0x1084>
  402ce8:	ldr	x0, [sp, #440]
  402cec:	ldr	x1, [sp, #432]
  402cf0:	cmp	x1, x0
  402cf4:	b.ls	402d70 <run+0x107c>  // b.plast
  402cf8:	mov	w0, #0x7                   	// #7
  402cfc:	str	w0, [sp, #272]
  402d00:	str	wzr, [sp, #276]
  402d04:	str	wzr, [sp, #280]
  402d08:	ldr	w0, [sp, #280]
  402d0c:	bl	401320 <log_get_max_level_realm@plt>
  402d10:	mov	w1, w0
  402d14:	ldr	w0, [sp, #272]
  402d18:	and	w0, w0, #0x7
  402d1c:	cmp	w1, w0
  402d20:	b.lt	402d64 <run+0x1070>  // b.tstop
  402d24:	ldr	w0, [sp, #280]
  402d28:	lsl	w1, w0, #10
  402d2c:	ldr	w0, [sp, #272]
  402d30:	orr	w6, w1, w0
  402d34:	adrp	x0, 403000 <run+0x130c>
  402d38:	add	x1, x0, #0x31b
  402d3c:	adrp	x0, 403000 <run+0x130c>
  402d40:	add	x5, x0, #0xaa0
  402d44:	adrp	x0, 403000 <run+0x130c>
  402d48:	add	x4, x0, #0xc30
  402d4c:	mov	w3, #0x116                 	// #278
  402d50:	mov	x2, x1
  402d54:	ldr	w1, [sp, #276]
  402d58:	mov	w0, w6
  402d5c:	bl	401280 <log_internal_realm@plt>
  402d60:	b	402d78 <run+0x1084>
  402d64:	ldr	w0, [sp, #276]
  402d68:	cmp	w0, #0x0
  402d6c:	b	402d78 <run+0x1084>
  402d70:	mov	w0, #0x1                   	// #1
  402d74:	strb	w0, [sp, #65]
  402d78:	ldrb	w0, [sp, #65]
  402d7c:	eor	w0, w0, #0x1
  402d80:	and	w0, w0, #0xff
  402d84:	cmp	w0, #0x0
  402d88:	b.eq	402ed8 <run+0x11e4>  // b.none
  402d8c:	ldr	w0, [sp, #72]
  402d90:	ldr	x1, [sp, #416]
  402d94:	mov	w3, #0x0                   	// #0
  402d98:	ldr	x2, [sp, #432]
  402d9c:	bl	401140 <loop_read@plt>
  402da0:	str	x0, [sp, #440]
  402da4:	ldr	x0, [sp, #440]
  402da8:	cmp	x0, #0x0
  402dac:	b.ge	402e3c <run+0x1148>  // b.tcont
  402db0:	mov	w0, #0x3                   	// #3
  402db4:	str	w0, [sp, #308]
  402db8:	ldr	x0, [sp, #440]
  402dbc:	str	w0, [sp, #312]
  402dc0:	str	wzr, [sp, #316]
  402dc4:	ldr	w0, [sp, #316]
  402dc8:	bl	401320 <log_get_max_level_realm@plt>
  402dcc:	mov	w1, w0
  402dd0:	ldr	w0, [sp, #308]
  402dd4:	and	w0, w0, #0x7
  402dd8:	cmp	w1, w0
  402ddc:	b.lt	402e24 <run+0x1130>  // b.tstop
  402de0:	ldr	w0, [sp, #316]
  402de4:	lsl	w1, w0, #10
  402de8:	ldr	w0, [sp, #308]
  402dec:	orr	w6, w1, w0
  402df0:	adrp	x0, 403000 <run+0x130c>
  402df4:	add	x1, x0, #0x31b
  402df8:	adrp	x0, 403000 <run+0x130c>
  402dfc:	add	x5, x0, #0xae0
  402e00:	adrp	x0, 403000 <run+0x130c>
  402e04:	add	x4, x0, #0xc30
  402e08:	mov	w3, #0x11e                 	// #286
  402e0c:	mov	x2, x1
  402e10:	ldr	w1, [sp, #312]
  402e14:	mov	w0, w6
  402e18:	bl	401280 <log_internal_realm@plt>
  402e1c:	mov	w19, w0
  402e20:	b	4031c0 <run+0x14cc>
  402e24:	ldr	w0, [sp, #312]
  402e28:	cmp	w0, #0x0
  402e2c:	cneg	w0, w0, lt  // lt = tstop
  402e30:	and	w0, w0, #0xff
  402e34:	neg	w19, w0
  402e38:	b	4031c0 <run+0x14cc>
  402e3c:	ldr	x0, [sp, #440]
  402e40:	cmp	x0, #0x0
  402e44:	b.ne	402ed8 <run+0x11e4>  // b.any
  402e48:	mov	w0, #0x3                   	// #3
  402e4c:	str	w0, [sp, #296]
  402e50:	mov	w0, #0x5                   	// #5
  402e54:	movk	w0, #0x4000, lsl #16
  402e58:	str	w0, [sp, #300]
  402e5c:	str	wzr, [sp, #304]
  402e60:	ldr	w0, [sp, #304]
  402e64:	bl	401320 <log_get_max_level_realm@plt>
  402e68:	mov	w1, w0
  402e6c:	ldr	w0, [sp, #296]
  402e70:	and	w0, w0, #0x7
  402e74:	cmp	w1, w0
  402e78:	b.lt	402ec0 <run+0x11cc>  // b.tstop
  402e7c:	ldr	w0, [sp, #304]
  402e80:	lsl	w1, w0, #10
  402e84:	ldr	w0, [sp, #296]
  402e88:	orr	w6, w1, w0
  402e8c:	adrp	x0, 403000 <run+0x130c>
  402e90:	add	x1, x0, #0x31b
  402e94:	adrp	x0, 403000 <run+0x130c>
  402e98:	add	x5, x0, #0xb10
  402e9c:	adrp	x0, 403000 <run+0x130c>
  402ea0:	add	x4, x0, #0xc30
  402ea4:	mov	w3, #0x120                 	// #288
  402ea8:	mov	x2, x1
  402eac:	ldr	w1, [sp, #300]
  402eb0:	mov	w0, w6
  402eb4:	bl	401280 <log_internal_realm@plt>
  402eb8:	mov	w19, w0
  402ebc:	b	4031c0 <run+0x14cc>
  402ec0:	ldr	w0, [sp, #300]
  402ec4:	cmp	w0, #0x0
  402ec8:	cneg	w0, w0, lt  // lt = tstop
  402ecc:	and	w0, w0, #0xff
  402ed0:	neg	w19, w0
  402ed4:	b	4031c0 <run+0x14cc>
  402ed8:	ldr	w0, [sp, #68]
  402edc:	ldr	x1, [sp, #416]
  402ee0:	ldr	x2, [sp, #440]
  402ee4:	mov	w3, #0x0                   	// #0
  402ee8:	bl	401130 <loop_write@plt>
  402eec:	str	w0, [sp, #80]
  402ef0:	ldr	w0, [sp, #80]
  402ef4:	cmp	w0, #0x0
  402ef8:	b.ge	402f88 <run+0x1294>  // b.tcont
  402efc:	mov	w0, #0x3                   	// #3
  402f00:	str	w0, [sp, #356]
  402f04:	ldr	w0, [sp, #80]
  402f08:	str	w0, [sp, #360]
  402f0c:	str	wzr, [sp, #364]
  402f10:	ldr	w0, [sp, #364]
  402f14:	bl	401320 <log_get_max_level_realm@plt>
  402f18:	mov	w1, w0
  402f1c:	ldr	w0, [sp, #356]
  402f20:	and	w0, w0, #0x7
  402f24:	cmp	w1, w0
  402f28:	b.lt	402f70 <run+0x127c>  // b.tstop
  402f2c:	ldr	w0, [sp, #364]
  402f30:	lsl	w1, w0, #10
  402f34:	ldr	w0, [sp, #356]
  402f38:	orr	w6, w1, w0
  402f3c:	adrp	x0, 403000 <run+0x130c>
  402f40:	add	x1, x0, #0x31b
  402f44:	adrp	x0, 403000 <run+0x130c>
  402f48:	add	x5, x0, #0xb40
  402f4c:	adrp	x0, 403000 <run+0x130c>
  402f50:	add	x4, x0, #0xc30
  402f54:	mov	w3, #0x126                 	// #294
  402f58:	mov	x2, x1
  402f5c:	ldr	w1, [sp, #360]
  402f60:	mov	w0, w6
  402f64:	bl	401280 <log_internal_realm@plt>
  402f68:	mov	w19, w0
  402f6c:	b	4031c0 <run+0x14cc>
  402f70:	ldr	w0, [sp, #360]
  402f74:	cmp	w0, #0x0
  402f78:	cneg	w0, w0, lt  // lt = tstop
  402f7c:	and	w0, w0, #0xff
  402f80:	neg	w19, w0
  402f84:	b	4031c0 <run+0x14cc>
  402f88:	ldr	w0, [sp, #68]
  402f8c:	ldr	x1, [sp, #440]
  402f90:	bl	401240 <ftruncate64@plt>
  402f94:	cmp	w0, #0x0
  402f98:	b.ge	403028 <run+0x1334>  // b.tcont
  402f9c:	mov	w0, #0x3                   	// #3
  402fa0:	str	w0, [sp, #344]
  402fa4:	ldr	w0, [sp, #80]
  402fa8:	str	w0, [sp, #348]
  402fac:	str	wzr, [sp, #352]
  402fb0:	ldr	w0, [sp, #352]
  402fb4:	bl	401320 <log_get_max_level_realm@plt>
  402fb8:	mov	w1, w0
  402fbc:	ldr	w0, [sp, #344]
  402fc0:	and	w0, w0, #0x7
  402fc4:	cmp	w1, w0
  402fc8:	b.lt	403010 <run+0x131c>  // b.tstop
  402fcc:	ldr	w0, [sp, #352]
  402fd0:	lsl	w1, w0, #10
  402fd4:	ldr	w0, [sp, #344]
  402fd8:	orr	w6, w1, w0
  402fdc:	adrp	x0, 403000 <run+0x130c>
  402fe0:	add	x1, x0, #0x31b
  402fe4:	adrp	x0, 403000 <run+0x130c>
  402fe8:	add	x5, x0, #0xb70
  402fec:	adrp	x0, 403000 <run+0x130c>
  402ff0:	add	x4, x0, #0xc30
  402ff4:	mov	w3, #0x129                 	// #297
  402ff8:	mov	x2, x1
  402ffc:	ldr	w1, [sp, #348]
  403000:	mov	w0, w6
  403004:	bl	401280 <log_internal_realm@plt>
  403008:	mov	w19, w0
  40300c:	b	4031c0 <run+0x14cc>
  403010:	ldr	w0, [sp, #348]
  403014:	cmp	w0, #0x0
  403018:	cneg	w0, w0, lt  // lt = tstop
  40301c:	and	w0, w0, #0xff
  403020:	neg	w19, w0
  403024:	b	4031c0 <run+0x14cc>
  403028:	ldr	w0, [sp, #68]
  40302c:	bl	4011d0 <fsync_full@plt>
  403030:	str	w0, [sp, #80]
  403034:	ldr	w0, [sp, #80]
  403038:	cmp	w0, #0x0
  40303c:	b.ge	4030cc <run+0x13d8>  // b.tcont
  403040:	mov	w0, #0x3                   	// #3
  403044:	str	w0, [sp, #332]
  403048:	ldr	w0, [sp, #80]
  40304c:	str	w0, [sp, #336]
  403050:	str	wzr, [sp, #340]
  403054:	ldr	w0, [sp, #340]
  403058:	bl	401320 <log_get_max_level_realm@plt>
  40305c:	mov	w1, w0
  403060:	ldr	w0, [sp, #332]
  403064:	and	w0, w0, #0x7
  403068:	cmp	w1, w0
  40306c:	b.lt	4030b4 <run+0x13c0>  // b.tstop
  403070:	ldr	w0, [sp, #340]
  403074:	lsl	w1, w0, #10
  403078:	ldr	w0, [sp, #332]
  40307c:	orr	w6, w1, w0
  403080:	adrp	x0, 403000 <run+0x130c>
  403084:	add	x1, x0, #0x31b
  403088:	adrp	x0, 403000 <run+0x130c>
  40308c:	add	x5, x0, #0xb98
  403090:	adrp	x0, 403000 <run+0x130c>
  403094:	add	x4, x0, #0xc30
  403098:	mov	w3, #0x12d                 	// #301
  40309c:	mov	x2, x1
  4030a0:	ldr	w1, [sp, #336]
  4030a4:	mov	w0, w6
  4030a8:	bl	401280 <log_internal_realm@plt>
  4030ac:	mov	w19, w0
  4030b0:	b	4031c0 <run+0x14cc>
  4030b4:	ldr	w0, [sp, #336]
  4030b8:	cmp	w0, #0x0
  4030bc:	cneg	w0, w0, lt  // lt = tstop
  4030c0:	and	w0, w0, #0xff
  4030c4:	neg	w19, w0
  4030c8:	b	4031c0 <run+0x14cc>
  4030cc:	ldrb	w0, [sp, #65]
  4030d0:	cmp	w0, #0x0
  4030d4:	b.eq	4031bc <run+0x14c8>  // b.none
  4030d8:	ldr	w5, [sp, #68]
  4030dc:	mov	w4, #0x0                   	// #0
  4030e0:	mov	x3, #0x1                   	// #1
  4030e4:	adrp	x0, 403000 <run+0x130c>
  4030e8:	add	x2, x0, #0xbc0
  4030ec:	adrp	x0, 403000 <run+0x130c>
  4030f0:	add	x1, x0, #0x4a0
  4030f4:	mov	w0, w5
  4030f8:	bl	4010c0 <fsetxattr@plt>
  4030fc:	cmp	w0, #0x0
  403100:	b.ge	4031bc <run+0x14c8>  // b.tcont
  403104:	strb	wzr, [sp, #66]
  403108:	bl	401200 <__errno_location@plt>
  40310c:	ldr	w0, [x0]
  403110:	cmp	w0, #0x26
  403114:	b.eq	403120 <run+0x142c>  // b.none
  403118:	cmp	w0, #0x5f
  40311c:	b.ne	403128 <run+0x1434>  // b.any
  403120:	mov	w0, #0x1                   	// #1
  403124:	strb	w0, [sp, #66]
  403128:	nop
  40312c:	ldrb	w0, [sp, #66]
  403130:	cmp	w0, #0x0
  403134:	b.eq	403140 <run+0x144c>  // b.none
  403138:	mov	w0, #0x7                   	// #7
  40313c:	b	403144 <run+0x1450>
  403140:	mov	w0, #0x4                   	// #4
  403144:	str	w0, [sp, #320]
  403148:	bl	401200 <__errno_location@plt>
  40314c:	ldr	w0, [x0]
  403150:	str	w0, [sp, #324]
  403154:	str	wzr, [sp, #328]
  403158:	ldr	w0, [sp, #328]
  40315c:	bl	401320 <log_get_max_level_realm@plt>
  403160:	mov	w1, w0
  403164:	ldr	w0, [sp, #320]
  403168:	and	w0, w0, #0x7
  40316c:	cmp	w1, w0
  403170:	b.lt	4031b4 <run+0x14c0>  // b.tstop
  403174:	ldr	w0, [sp, #328]
  403178:	lsl	w1, w0, #10
  40317c:	ldr	w0, [sp, #320]
  403180:	orr	w6, w1, w0
  403184:	adrp	x0, 403000 <run+0x130c>
  403188:	add	x1, x0, #0x31b
  40318c:	adrp	x0, 403000 <run+0x130c>
  403190:	add	x5, x0, #0xbc8
  403194:	adrp	x0, 403000 <run+0x130c>
  403198:	add	x4, x0, #0xc30
  40319c:	mov	w3, #0x133                 	// #307
  4031a0:	mov	x2, x1
  4031a4:	ldr	w1, [sp, #324]
  4031a8:	mov	w0, w6
  4031ac:	bl	401280 <log_internal_realm@plt>
  4031b0:	b	4031bc <run+0x14c8>
  4031b4:	ldr	w0, [sp, #324]
  4031b8:	cmp	w0, #0x0
  4031bc:	mov	w19, #0x0                   	// #0
  4031c0:	add	x0, sp, #0x1a0
  4031c4:	bl	401528 <freep>
  4031c8:	add	x0, sp, #0x48
  4031cc:	bl	40154c <closep>
  4031d0:	add	x0, sp, #0x44
  4031d4:	bl	40154c <closep>
  4031d8:	mov	w1, w19
  4031dc:	adrp	x0, 414000 <__FRAME_END__+0x10154>
  4031e0:	add	x0, x0, #0xc68
  4031e4:	ldr	x2, [sp, #600]
  4031e8:	ldr	x0, [x0]
  4031ec:	eor	x0, x2, x0
  4031f0:	cmp	x0, #0x0
  4031f4:	b.eq	4031fc <run+0x1508>  // b.none
  4031f8:	bl	401220 <__stack_chk_fail@plt>
  4031fc:	mov	w0, w1
  403200:	ldp	x19, x20, [sp, #16]
  403204:	ldp	x29, x30, [sp]
  403208:	add	sp, sp, #0x260
  40320c:	ret

0000000000403210 <main>:
  403210:	stp	x29, x30, [sp, #-48]!
  403214:	mov	x29, sp
  403218:	str	w0, [sp, #28]
  40321c:	str	x1, [sp, #16]
  403220:	ldr	x1, [sp, #16]
  403224:	ldr	w0, [sp, #28]
  403228:	bl	401570 <save_argc_argv>
  40322c:	ldr	x1, [sp, #16]
  403230:	ldr	w0, [sp, #28]
  403234:	bl	401cf4 <run>
  403238:	str	w0, [sp, #44]
  40323c:	bl	401230 <ask_password_agent_close@plt>
  403240:	bl	401110 <polkit_agent_close@plt>
  403244:	bl	401250 <pager_close@plt>
  403248:	bl	4012e0 <mac_selinux_finish@plt>
  40324c:	bl	4015a8 <static_destruct>
  403250:	ldr	w0, [sp, #44]
  403254:	lsr	w0, w0, #31
  403258:	ldp	x29, x30, [sp], #48
  40325c:	ret

0000000000403260 <__libc_csu_init>:
  403260:	stp	x29, x30, [sp, #-64]!
  403264:	mov	x29, sp
  403268:	stp	x19, x20, [sp, #16]
  40326c:	adrp	x20, 414000 <__FRAME_END__+0x10154>
  403270:	add	x20, x20, #0xc60
  403274:	stp	x21, x22, [sp, #32]
  403278:	adrp	x21, 414000 <__FRAME_END__+0x10154>
  40327c:	add	x21, x21, #0xc58
  403280:	sub	x20, x20, x21
  403284:	mov	w22, w0
  403288:	stp	x23, x24, [sp, #48]
  40328c:	mov	x23, x1
  403290:	mov	x24, x2
  403294:	bl	401080 <_init>
  403298:	cmp	xzr, x20, asr #3
  40329c:	b.eq	4032c8 <__libc_csu_init+0x68>  // b.none
  4032a0:	asr	x20, x20, #3
  4032a4:	mov	x19, #0x0                   	// #0
  4032a8:	ldr	x3, [x21, x19, lsl #3]
  4032ac:	mov	x2, x24
  4032b0:	add	x19, x19, #0x1
  4032b4:	mov	x1, x23
  4032b8:	mov	w0, w22
  4032bc:	blr	x3
  4032c0:	cmp	x20, x19
  4032c4:	b.ne	4032a8 <__libc_csu_init+0x48>  // b.any
  4032c8:	ldp	x19, x20, [sp, #16]
  4032cc:	ldp	x21, x22, [sp, #32]
  4032d0:	ldp	x23, x24, [sp, #48]
  4032d4:	ldp	x29, x30, [sp], #64
  4032d8:	ret
  4032dc:	nop

00000000004032e0 <__libc_csu_fini>:
  4032e0:	ret
  4032e4:	nop

00000000004032e8 <fstat64>:
  4032e8:	mov	x2, x1
  4032ec:	mov	w1, w0
  4032f0:	mov	w0, #0x0                   	// #0
  4032f4:	b	4011e0 <__fxstat64@plt>

Disassembly of section .fini:

00000000004032f8 <_fini>:
  4032f8:	stp	x29, x30, [sp, #-16]!
  4032fc:	mov	x29, sp
  403300:	ldp	x29, x30, [sp], #16
  403304:	ret
